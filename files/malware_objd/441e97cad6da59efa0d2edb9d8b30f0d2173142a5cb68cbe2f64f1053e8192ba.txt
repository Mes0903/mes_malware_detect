
441e97cad6da59efa0d2edb9d8b30f0d2173142a5cb68cbe2f64f1053e8192ba.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	or     al,0x91
  411002:	in     al,dx
  411003:	aas    
  411004:	inc    edi
  411005:	dec    esp
  411006:	sub    edi,DWORD PTR [ecx]
  411008:	inc    ebx
  411009:	xor    DWORD PTR [esi+0x56],edi
  41100c:	ins    DWORD PTR es:[edi],dx
  41100d:	mov    ecx,gs
  41100f:	mov    dl,0x0
  411011:	cli    
  411012:	or     eax,DWORD PTR [edx+0x2f637163]
  411018:	out    dx,eax
  411019:	pop    esi
  41101a:	sti    
  41101b:	test   eax,0xb92fc9fc
  411020:	fs das 
  411022:	mov    al,ds:0xd5df9dcf
  411027:	mov    dl,0x6b
  411029:	lods   al,BYTE PTR ds:[esi]
  41102a:	inc    esp
  41102b:	sahf   
  41102c:	fild   WORD PTR [ebx]
  41102e:	push   ds
  41102f:	addr16 xchg esi,eax
  411031:	nop
  411032:	test   al,0x99
  411034:	add    DWORD PTR [eax-0x5288653c],edx
  41103a:	mov    dl,0x92
  41103c:	cmp    ah,BYTE PTR [edi+0x3f]
  41103f:	test   DWORD PTR [eax+0x5dd8fc32],esp
  411045:	xchg   BYTE PTR [ecx],dh
  411047:	call   0xf871:0xe5ef82c0
  41104e:	aad    0x60
  411050:	xor    DWORD PTR [ebx-0x24062b71],edx
  411056:	pop    ss
  411057:	and    eax,0xff976ab4
  41105c:	xchg   ebx,eax
  41105d:	cmp    ecx,DWORD PTR [ecx]
  41105f:	mov    edi,0x75b290e6
  411064:	add    DWORD PTR [edx],edi
  411066:	jmp    0x4110e2
  411068:	jbe    0x411004
  41106a:	mov    dh,0x0
  41106c:	jmp    0xe24c802c
  411071:	mov    ds:0xef9de8df,eax
  411076:	iret   
  411077:	gs inc esp
  411079:	xor    al,0x94
  41107b:	push   DWORD PTR [eax-0x56]
  41107e:	out    dx,eax
  41107f:	in     eax,0x4a
  411081:	imul   esp,DWORD PTR [eax],0x872a093e
  411087:	xchg   edx,eax
  411088:	fsubr  DWORD PTR [ebp+0xa]
  41108b:	dec    edi
  41108c:	in     eax,dx
  41108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108e:	cmp    al,0x39
  411090:	out    0xc8,eax
  411092:	pop    ebx
  411093:	call   0x82b44c63
  411098:	mov    bl,0xa1
  41109a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109b:	ret    
  41109c:	pop    edx
  41109d:	sbb    esp,DWORD PTR [ebp-0x68]
  4110a0:	and    al,0x4c
  4110a2:	aaa    
  4110a3:	mov    ds:0xb4d4af94,al
  4110a8:	push   cs
  4110a9:	jo     0x411101
  4110ab:	rcr    BYTE PTR [ecx],cl
  4110ad:	sahf   
  4110ae:	cvtdq2ps xmm7,xmm7
  4110b1:	out    dx,eax
  4110b2:	cmc    
  4110b3:	pop    eax
  4110b4:	call   FWORD PTR [esi-0x30]
  4110b7:	mov    cl,0x48
  4110b9:	inc    esp
  4110ba:	popf   
  4110bb:	adc    DWORD PTR [edx-0x69],0xfffffff3
  4110bf:	push   ebx
  4110c0:	int    0x0
  4110c2:	mov    ds:0xe702589e,eax
  4110c7:	ret    
  4110c8:	es cmp ah,cl
  4110cb:	mov    bh,0x95
  4110cd:	inc    ebx
  4110ce:	mov    ds:0xc0ab35c8,al
  4110d3:	cmp    eax,0x78bdfc00
  4110d8:	rcr    DWORD PTR [ebx+esi*2+0x56],cl
  4110dc:	std    
  4110dd:	arpl   WORD PTR [ebx],bp
  4110df:	jl     0x411114
  4110e1:	shl    BYTE PTR [ebp-0x424111ee],0xd7
  4110e8:	fcomp  DWORD PTR [edx+0x53fa0adc]
  4110ee:	bound  ebx,QWORD PTR [ebp+0x57]
  4110f1:	xor    BYTE PTR [edi-0x76],cl
  4110f4:	ret    0x9b92
  4110f7:	cld    
  4110f8:	inc    esi
  4110f9:	inc    ebx
  4110fa:	and    eax,0x4e4ce734
  4110ff:	mov    cl,BYTE PTR [eax]
  411101:	and    al,0x36
  411103:	xor    DWORD PTR [edx],0xffffffe4
  411106:	pop    edx
  411107:	aam    0x2e
  411109:	or     ch,BYTE PTR [edi]
  41110b:	neg    DWORD PTR [edi+0x3453aca5]
  411111:	or     BYTE PTR [ecx],cl
  411113:	mov    dh,BYTE PTR [edi-0x33]
  411116:	sub    ah,BYTE PTR [esp+ebp*1+0x2cd9cada]
  41111d:	sti    
  41111e:	pop    ebp
  41111f:	xchg   esi,eax
  411120:	jp     0x4110a3
  411122:	das    
  411123:	test   eax,0x711feeae
  411128:	pop    edi
  411129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112a:	in     eax,0x3c
  41112c:	loop   0x411195
  41112e:	mov    bh,BYTE PTR [ecx+ebp*8+0x1680d6cb]
  411135:	sahf   
  411136:	mov    WORD PTR [ebx-0x73],ss
  411139:	adc    BYTE PTR [eax],cl
  41113b:	push   ecx
  41113c:	xchg   esi,eax
  41113d:	jo     0x41114c
  41113f:	out    dx,eax
  411140:	call   0x8d37:0x403ebda0
  411147:	aam    0x9
  411149:	xchg   BYTE PTR [esi+0x62],cl
  41114c:	dec    ebp
  41114d:	scas   al,BYTE PTR es:[edi]
  41114e:	leave  
  41114f:	or     dl,BYTE PTR [eax]
  411151:	lahf   
  411152:	shr    BYTE PTR [ebx],cl
  411154:	inc    ebx
  411155:	stos   BYTE PTR es:[edi],al
  411156:	fisubr WORD PTR [eax-0x49]
  411159:	mov    eax,ds:0xa0b73776
  41115e:	mov    eax,ds:0xe734e669
  411163:	sbb    bh,BYTE PTR [eax+eiz*2-0x5b]
  411167:	mov    ah,0xb0
  411169:	mov    ?,ebp
  41116b:	pop    edx
  41116c:	stc    
  41116d:	out    dx,eax
  41116e:	jns    0x411111
  411170:	fldcw  WORD PTR [ebx+0x3e201a25]
  411176:	add    BYTE PTR [esi+0x67],bl
  411179:	push   eax
  41117a:	inc    esi
  41117b:	jmp    0xb7ab:0xaa615016
  411182:	ja     0x4111b8
  411184:	pushf  
  411185:	call   0x19d9f398
  41118a:	xchg   ebp,eax
  41118b:	stos   BYTE PTR es:[edi],al
  41118c:	sub    eax,0x93dffc8e
  411191:	adc    ah,ch
  411193:	div    BYTE PTR cs:[eax]
  411196:	mov    al,ds:0x56242c8f
  41119b:	add    al,BYTE PTR [ebx+0x629ce250]
  4111a1:	push   ecx
  4111a2:	fldcw  WORD PTR [edi+ecx*1-0x7f]
  4111a6:	es fdiv st(4),st
  4111a9:	icebp  
  4111aa:	mov    dl,0x59
  4111ac:	mov    ebx,0xacc6012b
  4111b1:	ds js  0x4111f5
  4111b4:	xchg   esp,eax
  4111b5:	pop    ebp
  4111b6:	pop    eax
  4111b7:	retf   0xab5
  4111ba:	out    dx,al
  4111bb:	jge    0x4111ab
  4111bd:	sar    DWORD PTR [edi-0x6e],cl
  4111c0:	and    eax,0x29cd60f3
  4111c5:	imul   DWORD PTR [esi]
  4111c7:	push   eax
  4111c8:	imul   esp,DWORD PTR [ecx-0x5d50fd4c],0xbe4d7463
  4111d2:	popaw  
  4111d4:	or     ebp,DWORD PTR [ebp-0x59a06811]
  4111da:	mov    ah,0xcf
  4111dd:	mov    ds:0xfcaa4f82,eax
  4111e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e3:	(bad)  fs:[ebx-0x14737020]
  4111ea:	inc    edx
  4111eb:	dec    esp
  4111ec:	sub    eax,0x237bc48a
  4111f1:	cmp    BYTE PTR [eax+ebp*1-0x144f0a0b],al
  4111f8:	test   edx,eax
  4111fa:	adc    edi,DWORD PTR [ebx-0x70ddcc63]
  411200:	int3   
  411201:	dec    esi
  411202:	(bad)  
  411203:	or     dh,BYTE PTR fs:[edx]
  411206:	outs   dx,DWORD PTR ds:[esi]
  411207:	stos   DWORD PTR es:[edi],eax
  411208:	aam    0xfe
  41120a:	out    0x67,al
  41120c:	addr16 pop edx
  41120e:	pop    ss
  41120f:	fs out dx,eax
  411211:	rcr    BYTE PTR [ecx+0x1],1
  411214:	pop    esi
  411215:	sbb    BYTE PTR [edx+0x41],al
  411218:	(bad)  
  411219:	retf   0x74b
  41121c:	xchg   ebx,eax
  41121d:	xchg   DWORD PTR [esi],ecx
  41121f:	ror    BYTE PTR [esi+0x7d],cl
  411222:	pop    ds
  411223:	sbb    DWORD PTR ds:[edi],edi
  411226:	pop    ss
  411227:	or     eax,0xadc09fb7
  41122c:	les    ecx,FWORD PTR [ebp-0x7a805b8a]
  411232:	pop    ecx
  411233:	pop    esp
  411234:	sbb    BYTE PTR [edi-0x41e60128],ch
  41123a:	cmp    ch,ch
  41123c:	addr16 and al,0x81
  41123f:	inc    ebx
  411240:	cs and ebp,ebp
  411243:	add    DWORD PTR [edi-0x4ea73484],eax
  411249:	sar    DWORD PTR [ecx],cl
  41124b:	and    dh,dh
  41124d:	push   esp
  41124e:	test   bh,bl
  411250:	xchg   edx,eax
  411251:	or     al,0x2b
  411253:	jp     0x41120f
  411255:	push   ebp
  411256:	fisttp DWORD PTR [ecx]
  411258:	enter  0x3657,0x33
  41125c:	dec    eax
  41125d:	cmp    eax,DWORD PTR [esi]
  41125f:	vpcomq xmm0,xmm6,XMMWORD PTR [ebx-0x4a],0xe6
  411266:	(bad)  
  411267:	pop    ds
  411268:	fld    st(1)
  41126a:	int    0x43
  41126c:	dec    esi
  41126d:	add    eax,0x3b712dc3
  411272:	sub    ch,BYTE PTR [edx+0x1a]
  411275:	sub    eax,0x4e27a380
  41127a:	imul   BYTE PTR [eax-0x34]
  41127d:	mov    bh,0x9c
  41127f:	xlat   BYTE PTR ds:[ebx]
  411280:	loopne 0x4112e4
  411282:	pusha  
  411283:	and    DWORD PTR [esp+ebp*8],ebp
  411286:	data16 (bad) 
  411288:	cmc    
  411289:	data16 addr16 mov cl,0x2f
  41128d:	jnp    0x4112ed
  41128f:	ret    
  411290:	sbb    DWORD PTR [ecx+0x57d1b29f],0xfffffff1
  411297:	sub    edi,DWORD PTR ss:[edx+0x36c53132]
  41129e:	addr16 cmp cl,al
  4112a1:	mov    dl,0x87
  4112a3:	ins    BYTE PTR es:[edi],dx
  4112a4:	into   
  4112a5:	(bad)  
  4112a6:	push   edx
  4112a7:	sbb    DWORD PTR [eax-0x62877d46],esp
  4112ad:	stc    
  4112ae:	(bad)  
  4112af:	sbb    BYTE PTR [esi+ebp*1],ch
  4112b2:	sti    
  4112b3:	mov    ecx,esp
  4112b5:	out    0x63,eax
  4112b7:	jg     0x4112c7
  4112b9:	xchg   edx,eax
  4112ba:	adc    DWORD PTR [ecx-0x5f],ecx
  4112bd:	(bad)  
  4112be:	or     eax,0xc67cc63c
  4112c3:	mov    edi,0x595e08fd
  4112c8:	out    dx,eax
  4112c9:	aas    
  4112ca:	test   BYTE PTR [edx],bh
  4112cc:	jecxz  0x411343
  4112ce:	mov    al,0x35
  4112d0:	aaa    
  4112d1:	add    bl,cl
  4112d3:	mov    edi,0x94c3bd64
  4112d8:	(bad)  
  4112da:	clc    
  4112db:	in     al,dx
  4112dc:	push   cs
  4112dd:	xor    ecx,DWORD PTR [edi+ecx*4]
  4112e0:	ja     0x411278
  4112e2:	mov    DWORD PTR cs:[edx],eax
  4112e5:	or     BYTE PTR [ebx-0x4a882d13],al
  4112eb:	imul   BYTE PTR [ebx+0x35]
  4112ee:	pushf  
  4112ef:	iret   
  4112f0:	pusha  
  4112f1:	(bad)  
  4112f2:	sbb    bh,BYTE PTR [eax]
  4112f4:	test   eax,0x5aa329af
  4112f9:	dec    eax
  4112fa:	mov    BYTE PTR [esp+esi*2+0x5a62f422],bl
  411301:	ss ret 0x67f
  411305:	das    
  411306:	in     al,dx
  411307:	push   es
  411308:	add    BYTE PTR [eax-0x77e89278],bh
  41130e:	loop   0x41135d
  411310:	sub    esp,esi
  411312:	jmp    0x41130d
  411314:	or     DWORD PTR [edi-0x11],esi
  411317:	ret    0x4351
  41131a:	loop   0x41136b
  41131c:	jns    0x411370
  41131e:	fs inc edx
  411320:	pop    eax
  411321:	pushf  
  411322:	sbb    eax,0xe5e4e52
  411327:	and    DWORD PTR [eax+0x35df5fea],eax
  41132d:	mov    ds:0x6a2a296b,eax
  411332:	mov    al,ds:0x852716af
  411337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411338:	jecxz  0x411344
  41133a:	xlat   BYTE PTR ds:[ebx]
  41133b:	push   ebx
  41133c:	not    DWORD PTR [eax-0x756b797e]
  411342:	sub    cl,BYTE PTR [ecx-0x31]
  411345:	jbe    0x4112d6
  411347:	scas   al,BYTE PTR es:[edi]
  411348:	fisttp QWORD PTR [edx]
  41134a:	dec    eax
  41134b:	mov    esp,0x7349e26d
  411350:	lahf   
  411351:	fadd   st,st(6)
  411353:	jmp    0x411301
  411355:	sub    DWORD PTR [edx-0x258071ca],eax
  41135b:	shr    DWORD PTR [ecx-0x2],cl
  41135e:	cs stos BYTE PTR es:[edi],al
  411360:	pop    edi
  411361:	cmp    DWORD PTR [edi+eiz*4-0x18c58e66],ecx
  411368:	(bad)  [edx]
  41136a:	add    al,0xb2
  41136c:	jns    0x41134f
  41136e:	push   esp
  41136f:	rcr    BYTE PTR [esi+eiz*4-0x68c0e037],0xe8
  411377:	pop    ebx
  411378:	pop    eax
  411379:	mov    ch,BYTE PTR [ebx+0x74]
  41137c:	sub    ah,BYTE PTR [edi-0x78]
  41137f:	dec    edi
  411380:	(bad)  
  411381:	aas    
  411382:	push   esi
  411383:	jb     0x41133b
  411385:	push   esp
  411386:	addr16 jl 0x41134d
  411389:	adc    al,0xb1
  41138c:	sti    
  41138d:	clc    
  41138e:	xchg   bl,al
  411390:	les    esp,FWORD PTR [ebp-0x5a]
  411393:	imul   edi,ebx,0x7a1678ec
  411399:	out    0xc3,eax
  41139b:	pop    ecx
  41139c:	inc    esp
  41139d:	enter  0x793f,0x82
  4113a1:	inc    eax
  4113a2:	repz fcomp st(0)
  4113a5:	into   
  4113a6:	sti    
  4113a7:	xor    eax,0xbc334e4a
  4113ac:	popa   
  4113ad:	mov    esp,0x2e073ba2
  4113b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b3:	iret   
  4113b4:	in     eax,0x86
  4113b6:	pop    ebx
  4113b7:	jnp    0x4113d6
  4113b9:	icebp  
  4113ba:	xlat   BYTE PTR ds:[ebx]
  4113bb:	fisub  DWORD PTR [eax-0x52]
  4113be:	into   
  4113bf:	mov    ds:0xaf877b76,al
  4113c4:	fnstcw WORD PTR [ebx-0x1693292a]
  4113ca:	jae    0x41143c
  4113cc:	mov    eax,ds:0xbfa89b3c
  4113d1:	out    0x39,eax
  4113d3:	inc    ebx
  4113d4:	mov    dl,0x6b
  4113d6:	cli    
  4113d7:	fldenv [edx+0x6c64b141]
  4113dd:	xlat   BYTE PTR ds:[ebx]
  4113de:	fisubr WORD PTR [edi+0x42]
  4113e1:	ins    BYTE PTR es:[edi],dx
  4113e2:	lods   eax,DWORD PTR ds:[esi]
  4113e3:	dec    eax
  4113e4:	jne    0x4113ea
  4113e6:	mov    edx,0xbb448482
  4113eb:	sub    eax,0xfa55e571
  4113f0:	push   ebx
  4113f1:	outs   dx,DWORD PTR ds:[esi]
  4113f2:	and    ah,BYTE PTR [edi+ebp*4+0x59]
  4113f6:	xchg   ebp,eax
  4113f7:	jle    0x411458
  4113f9:	cli    
  4113fa:	out    0x4f,eax
  4113fc:	adc    al,0x34
  4113fe:	push   ebp
  4113ff:	or     edi,eax
  411401:	jmp    0x40a2b0a1
  411406:	cmp    ah,ch
  411408:	pop    es
  411409:	mov    ebx,edx
  41140b:	lods   al,BYTE PTR ds:[esi]
  41140c:	fbld   TBYTE PTR [eax+edx*1+0x1942116]
  411413:	(bad)  
  411414:	js     0x41139d
  411416:	inc    edi
  411417:	scas   eax,DWORD PTR es:[edi]
  411418:	jo     0x4113f8
  41141a:	xchg   ebp,eax
  41141b:	and    DWORD PTR [esp+eiz*2],ebp
  41141e:	mov    ecx,0x2732557b
  411423:	retf   
  411424:	push   0x5e
  411426:	loopne 0x41141c
  411428:	cmp    al,0xc2
  41142a:	sbb    al,0x71
  41142c:	push   ebx
  41142d:	retf   0x6bf3
  411430:	ror    esp,1
  411432:	inc    eax
  411433:	jb     0x4113bd
  411435:	call   0x588139d1
  41143a:	aas    
  41143b:	stos   DWORD PTR es:[edi],eax
  41143c:	sub    ch,dl
  41143e:	cli    
  41143f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411440:	inc    esi
  411441:	xor    BYTE PTR [ecx],ch
  411443:	xlat   BYTE PTR ds:[ebx]
  411444:	inc    esi
  411445:	mov    ebx,0x32bbf306
  41144a:	mov    bl,0xfa
  41144c:	lods   al,BYTE PTR ds:[esi]
  41144d:	xor    DWORD PTR [edi],eax
  41144f:	sub    al,0xdb
  411451:	and    DWORD PTR [ebp+0x28],0x6b934926
  411458:	pop    es
  411459:	mov    ecx,0x15c85f33
  41145e:	lods   eax,DWORD PTR ds:[esi]
  41145f:	mov    ecx,0x23f68bcc
  411464:	aad    0x1f
  411466:	fist   DWORD PTR fs:[edi]
  411469:	push   0x5d1786fe
  41146e:	loope  0x4114b2
  411470:	test   al,0x14
  411472:	pop    ebx
  411473:	mov    DWORD PTR es:[ecx-0x163656b2],edx
  41147a:	jo     0x41141e
  41147c:	adc    cl,BYTE PTR [edx]
  41147e:	not    bl
  411480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411481:	ret    
  411482:	ret    
  411483:	inc    esi
  411484:	imul   ecx,DWORD PTR [esi-0x7f0498b5],0x8de3094f
  41148e:	or     ah,BYTE PTR [ecx]
  411490:	and    BYTE PTR [ebx-0x5a08dda4],ah
  411496:	out    0x74,al
  411498:	dec    edi
  411499:	icebp  
  41149a:	jge    0x4114ba
  41149c:	add    BYTE PTR [edi+0x22],al
  41149f:	jbe    0x411516
  4114a1:	daa    
  4114a2:	xchg   BYTE PTR [ebx-0x45fc4412],ch
  4114a8:	stos   BYTE PTR es:[edi],al
  4114a9:	and    DWORD PTR [esi-0x378721c5],esp
  4114af:	and    eax,ecx
  4114b1:	add    BYTE PTR [ebx],dh
  4114b3:	cmp    BYTE PTR [edi+0x55a26333],ah
  4114b9:	xchg   DWORD PTR [ecx-0x1a],ebp
  4114bc:	push   esi
  4114bd:	jmp    0x411538
  4114bf:	cdq    
  4114c0:	pusha  
  4114c1:	push   ecx
  4114c2:	inc    esp
  4114c3:	out    dx,eax
  4114c4:	push   esp
  4114c5:	adc    DWORD PTR [ecx],eax
  4114c7:	ins    BYTE PTR es:[edi],dx
  4114c8:	lds    esp,FWORD PTR [ebx-0xcb85517]
  4114ce:	ret    0x90a6
  4114d1:	inc    ebx
  4114d2:	scas   eax,DWORD PTR es:[edi]
  4114d3:	pop    eax
  4114d4:	ins    BYTE PTR es:[edi],dx
  4114d5:	jmp    0x53ae4f2
  4114da:	jp     0x4114e4
  4114dc:	jmp    0x411491
  4114de:	cmp    BYTE PTR [edx+0x3c08a905],bh
  4114e4:	cld    
  4114e5:	sbb    ebx,DWORD PTR gs:[ebp+ebx*1+0x7480556a]
  4114ed:	cld    
  4114ee:	loope  0x411516
  4114f0:	cmp    BYTE PTR [edx+eiz*2],0xdb
  4114f4:	shr    DWORD PTR ds:[edx],0xb
  4114f8:	add    esp,ecx
  4114fa:	push   0x78
  4114fc:	push   edi
  4114fd:	sti    
  4114fe:	rcl    DWORD PTR [esi+0x1a],cl
  411501:	adc    DWORD PTR [ecx+0x53fb6aed],esp
  411507:	pop    es
  411508:	inc    ebx
  411509:	fdiv   DWORD PTR [edi-0x75]
  41150c:	xor    cl,BYTE PTR [esi]
  41150e:	mov    eax,ds:0x234c896d
  411513:	daa    
  411514:	sub    eax,0x6e8e4b84
  411519:	cmp    edi,DWORD PTR [ebp+0x3d20d72b]
  41151f:	mov    ebx,0x9d41a803
  411524:	or     dl,BYTE PTR [esi]
  411526:	xor    eax,0xe8149c9b
  41152b:	ret    0xae1e
  41152e:	mov    dh,0x56
  411530:	aaa    
  411531:	ret    
  411532:	and    BYTE PTR [ecx-0x7cb6eb4e],bl
  411538:	pop    ebp
  411539:	or     eax,0xf95fbaf3
  41153e:	dec    esi
  41153f:	xor    dl,al
  411541:	cmp    eax,0xc44d39cf
  411546:	and    ebp,eax
  411548:	dec    esp
  411549:	cmp    edi,DWORD PTR [ebx]
  41154b:	lock gs push esi
  41154e:	and    dh,BYTE PTR [ecx-0x3b044caa]
  411554:	mov    ebp,0x4a2c7d69
  411559:	pop    ds
  41155a:	enter  0xc352,0xc2
  41155e:	in     al,dx
  41155f:	adc    BYTE PTR [edx],cl
  411561:	or     eax,0x7e57cea6
  411566:	mov    bh,0x1b
  411568:	sbb    dl,BYTE PTR [ebx+esi*1-0x2f]
  41156c:	popf   
  41156d:	push   esi
  41156e:	or     edi,DWORD PTR [esi+0x1c66fa6d]
  411574:	(bad)  
  411576:	dec    ecx
  411577:	loop   0x411566
  411579:	ins    DWORD PTR es:[edi],dx
  41157a:	inc    eax
  41157b:	mov    edi,ebp
  41157d:	into   
  41157e:	imul   esp,eax,0x68
  411581:	scas   eax,DWORD PTR es:[edi]
  411582:	jmp    0x41154f
  411584:	xor    BYTE PTR [edx-0x7057e383],ch
  41158a:	xor    bh,BYTE PTR [ecx+0x1402017f]
  411590:	inc    ebx
  411591:	sbb    al,0x28
  411593:	stos   BYTE PTR es:[edi],al
  411594:	test   DWORD PTR [edi+ebx*1+0xcb97d4],edx
  41159b:	xchg   edx,eax
  41159c:	or     DWORD PTR [ecx+0x77063432],0x2d6e76d5
  4115a6:	cwde   
  4115a7:	push   ds
  4115a8:	push   ecx
  4115a9:	mov    ds:0xa95d4468,al
  4115ae:	push   esp
  4115af:	in     eax,0xa1
  4115b1:	jle    0x4115a6
  4115b3:	sbb    esi,DWORD PTR [edx-0x22]
  4115b6:	inc    eax
  4115b7:	sbb    DWORD PTR [ecx],ecx
  4115b9:	push   0xfffffff3
  4115bb:	enter  0xedf1,0xd3
  4115bf:	xlat   BYTE PTR ds:[ebx]
  4115c0:	mov    ebp,0x6e967130
  4115c5:	or     al,0x5d
  4115c7:	dec    eax
  4115c8:	js     0x4115c2
  4115ca:	sbb    DWORD PTR [edx-0x5],esi
  4115cd:	push   ebp
  4115ce:	loop   0x4115ca
  4115d0:	ins    DWORD PTR es:[edi],dx
  4115d1:	push   ss
  4115d2:	hlt    
  4115d3:	push   edx
  4115d4:	ja     0x411594
  4115d6:	adc    eax,0x3f694f94
  4115db:	pop    ebp
  4115dc:	in     eax,0xea
  4115de:	adc    eax,DWORD PTR [edx-0x238d79a6]
  4115e4:	mov    WORD PTR [ecx+ebp*8-0x25],fs
  4115e8:	xchg   ebx,eax
  4115e9:	test   ebp,0x725b78d8
  4115ef:	or     al,0x6
  4115f1:	xor    esi,DWORD PTR [esi+0x12]
  4115f4:	push   esp
  4115f5:	adc    al,0xab
  4115f7:	sub    BYTE PTR [edx+0x1e],dh
  4115fa:	pushf  
  4115fb:	rol    BYTE PTR [ecx-0x1cca018],1
  411601:	sbb    BYTE PTR [edx],al
  411603:	mov    cl,BYTE PTR [ecx-0x2b]
  411606:	pop    ebx
  411607:	mov    ah,0xd6
  411609:	or     BYTE PTR [edi],ah
  41160b:	adc    DWORD PTR [ebx-0x4],ecx
  41160e:	std    
  41160f:	test   eax,0x91938a4f
  411614:	or     esp,DWORD PTR ds:0xe9034760
  41161a:	xor    al,bh
  41161c:	xchg   ebp,eax
  41161d:	hlt    
  41161e:	mov    bl,0xe8
  411620:	jns    0x41166f
  411622:	and    ecx,DWORD PTR [edi*4-0x1359c590]
  411629:	(bad)  
  41162a:	dec    BYTE PTR [esi+0x47]
  41162d:	xor    eax,0xd6b28f9f
  411632:	cmp    BYTE PTR [ebp+0x5b],bh
  411635:	lahf   
  411636:	push   ss
  411637:	cmp    edx,DWORD PTR [ebx+0x63]
  41163a:	mov    al,0xc
  41163c:	cmp    ebp,0xed5949b7
  411642:	push   eax
  411643:	push   ss
  411644:	jnp    0x41160d
  411646:	adc    BYTE PTR [eax+0x4b3a1fad],dh
  41164c:	add    eax,0x7cf89247
  411651:	jnp    0x4116ae
  411653:	cmp    eax,0xef7f4ea3
  411658:	mov    ecx,0x7e3a7906
  41165d:	mov    dl,0x2b
  41165f:	in     eax,0xef
  411661:	xor    esi,esi
  411663:	cli    
  411664:	loop   0x411672
  411666:	adc    BYTE PTR [ebp+0x2e6ed618],dl
  41166c:	pusha  
  41166d:	fidiv  WORD PTR [ecx]
  41166f:	xor    eax,0xdaa3250b
  411674:	dec    esi
  411675:	mov    ebp,0x37351ea3
  41167a:	inc    esi
  41167b:	xchg   edx,eax
  41167c:	push   ds
  41167d:	cmp    cl,BYTE PTR [eax-0xaf35486]
  411683:	data16 mov ch,0x4c
  411686:	popa   
  411687:	cmp    eax,0xd2defe34
  41168c:	mov    bl,0xf5
  41168e:	xchg   ebp,eax
  41168f:	xor    BYTE PTR [bx+di],al
  411692:	fwait
  411693:	aad    0x56
  411695:	add    BYTE PTR [eax-0x4c271703],0x6b
  41169c:	fadd   QWORD PTR [eax+0x4705ca57]
  4116a2:	xchg   edi,eax
  4116a3:	pop    edx
  4116a4:	sbb    al,0xeb
  4116a6:	jle    0x411650
  4116a8:	adc    DWORD PTR [ebx-0x9],esi
  4116ab:	add    esp,DWORD PTR [edi]
  4116ad:	loopne 0x411631
  4116af:	adc    eax,0x57990460
  4116b4:	xor    eax,0x2d86b524
  4116b9:	or     ebx,DWORD PTR [eax-0x6f89868f]
  4116bf:	cdq    
  4116c0:	xlat   BYTE PTR ds:[ebx]
  4116c1:	loope  0x411742
  4116c3:	push   edi
  4116c4:	ret    
  4116c5:	in     al,dx
  4116c6:	sti    
  4116c7:	push   esp
  4116c8:	xchg   esp,eax
  4116c9:	les    edi,FWORD PTR [eax+0x5c]
  4116cc:	rol    ch,cl
  4116ce:	push   edi
  4116cf:	or     al,0xcc
  4116d1:	add    ah,BYTE PTR [ebx]
  4116d3:	mov    ah,0x77
  4116d5:	and    ebp,DWORD PTR ds:0x64a74f59
  4116db:	and    eax,0xbf53a93d
  4116e0:	int    0x87
  4116e2:	adc    eax,0xb8fbb8ec
  4116e7:	je     0x4116de
  4116e9:	jnp    0x4116a4
  4116eb:	mov    dh,0x5c
  4116ed:	xchg   ebp,eax
  4116ee:	inc    esi
  4116ef:	(bad)  
  4116f0:	sub    BYTE PTR [ecx-0x46f93125],ch
  4116f6:	pop    ecx
  4116f7:	mov    cl,0xc7
  4116f9:	rcr    eax,0x82
  4116fc:	popf   
  4116fd:	mov    ebx,0x70db79b6
  411702:	cmp    eax,0x26460dcd
  411707:	mov    dh,BYTE PTR [ebp-0x2a2ee2f0]
  41170d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170e:	adc    DWORD PTR [esi+0x30c379f6],eax
  411714:	adc    esi,DWORD PTR [esi]
  411716:	fld    st(6)
  411718:	scas   eax,DWORD PTR es:[edi]
  411719:	loopne 0x41178a
  41171b:	test   BYTE PTR [esp+ebx*1+0x49],dh
  41171f:	sub    al,0x14
  411721:	push   0x6b7e5ee
  411726:	test   eax,0x5f49e914
  41172b:	neg    dl
  41172d:	jns    0x4116bc
  41172f:	clc    
  411730:	enter  0x5d7f,0x27
  411734:	adc    eax,0x7e
  411737:	dec    eax
  411738:	mov    ds:0xce5de88,al
  41173d:	push   eax
  41173e:	loop   0x411752
  411740:	in     al,dx
  411741:	sahf   
  411742:	int3   
  411743:	sub    eax,0x88f063fa
  411748:	paddsw mm1,QWORD PTR [ecx]
  41174b:	mov    ?,ecx
  41174d:	dec    esi
  41174e:	aaa    
  41174f:	cmp    al,0xfa
  411751:	inc    ebp
  411752:	(bad)  
  411754:	loope  0x411709
  411756:	xor    cl,BYTE PTR [edx+0x4b0e7fab]
  41175c:	jnp    0x411772
  41175e:	add    ebp,ebx
  411760:	jmp    0x7000a553
  411765:	pop    esi
  411766:	scas   eax,DWORD PTR es:[edi]
  411767:	fnstcw WORD PTR [edx-0x3d686912]
  41176d:	ins    DWORD PTR es:[edi],dx
  41176e:	push   edi
  41176f:	(bad)  
  411771:	dec    edi
  411772:	clc    
  411773:	popf   
  411774:	test   eax,0x2935ec8a
  41177a:	mov    ecx,0xb47362d4
  41177f:	mov    dh,0x6e
  411781:	jge    0x4117a0
  411783:	or     al,BYTE PTR [ebp+0x13]
  411786:	push   ebp
  411787:	fidiv  DWORD PTR [edx+0xe1dde91]
  41178d:	rcr    BYTE PTR [esi],1
  41178f:	nop    DWORD PTR ds:0x864df73e
  411796:	iret   
  411797:	adc    BYTE PTR [edi+0x37],ch
  41179a:	push   0x4b
  41179c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179d:	rol    ecx,1
  41179f:	int3   
  4117a0:	stos   DWORD PTR es:[edi],eax
  4117a1:	xchg   esp,eax
  4117a2:	sahf   
  4117a3:	or     ebp,0x48
  4117a6:	aas    
  4117a7:	xor    ebp,DWORD PTR [ebx-0x36]
  4117aa:	lock ror BYTE PTR [ebp-0x32],cl
  4117ae:	js     0x411815
  4117b0:	or     BYTE PTR [eax],0x75
  4117b3:	fidivr DWORD PTR [esi]
  4117b5:	xor    al,0x94
  4117b7:	je     0x41176e
  4117b9:	daa    
  4117ba:	lods   al,BYTE PTR ds:[esi]
  4117bb:	(bad)  
  4117bc:	dec    ecx
  4117bd:	mov    eax,ds:0x3feef1c7
  4117c2:	lods   al,BYTE PTR ds:[esi]
  4117c3:	or     BYTE PTR [ecx+eax*4],bl
  4117c6:	shl    al,1
  4117c8:	cld    
  4117c9:	mov    ebx,0x41b52e21
  4117ce:	xor    bl,bh
  4117d0:	sahf   
  4117d1:	sbb    DWORD PTR [ebx-0x1cfc347a],esi
  4117d7:	and    DWORD PTR [eax],esp
  4117d9:	(bad)
  4117dc:	mov    ebx,0x34f2c9a2
  4117e1:	outs   dx,BYTE PTR ds:[esi]
  4117e2:	mov    ds:0xf937d8e1,al
  4117e7:	mov    dh,0x31
  4117e9:	xor    eax,0x3eeb1d35
  4117ee:	or     al,0x93
  4117f0:	int3   
  4117f1:	mov    eax,DWORD PTR [edx+edx*1]
  4117f4:	push   ebp
  4117f5:	mov    esp,0x9ac89da2
  4117fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117fb:	ror    DWORD PTR [ebx],1
  4117fd:	mov    cl,0x3d
  4117ff:	repz cmp BYTE PTR [edi],dh
  411802:	lock ret 0x5bdd
  411806:	pop    ss
  411807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411808:	pusha  
  411809:	sti    
  41180a:	adc    al,0x8c
  41180c:	inc    esp
  41180d:	repnz pop esp
  41180f:	rol    esp,1
  411811:	fs test edx,esp
  411814:	addr16 mov esi,0x865ae21b
  41181a:	jge    0x411899
  41181c:	push   esp
  41181d:	stos   BYTE PTR es:[edi],al
  41181e:	dec    BYTE PTR ds:0x975ec79d
  411824:	xchg   esp,eax
  411825:	pop    ebp
  411826:	sub    bh,al
  411828:	push   esp
  411829:	sub    ebx,DWORD PTR [ecx-0x21]
  41182c:	push   ecx
  41182d:	pop    edi
  41182e:	retf   0x618
  411831:	or     BYTE PTR [edx-0x1fd95c01],0xde
  411838:	mov    edx,0xa99369e0
  41183d:	xlat   BYTE PTR ds:[ebx]
  41183e:	or     edi,DWORD PTR [ecx]
  411840:	popf   
  411841:	(bad)  
  411842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411843:	push   0x6
  411845:	jmp    0x9910:0x1d05ec94
  41184c:	leave  
  41184d:	in     eax,dx
  41184e:	mov    esp,0x275a948a
  411853:	sub    ch,BYTE PTR [eax+0x1e]
  411856:	sti    
  411857:	(bad)  
  411858:	dec    esi
  411859:	mov    dl,BYTE PTR [ecx+0x1fa25d01]
  41185f:	retf   0x566e
  411862:	rcl    DWORD PTR [ebp+ebp*8-0x35],cl
  411866:	mov    al,0x84
  411868:	sbb    al,0xa
  41186a:	lea    edx,gs:0x7ced6044
  411871:	pushf  
  411872:	in     eax,dx
  411873:	movups xmm6,XMMWORD PTR [ebp+0x7ff827cd]
  41187a:	and    BYTE PTR [ebp+0x57c7b6a9],0xa3
  411881:	adc    dl,BYTE PTR [ebp+0x7f737681]
  411887:	inc    esp
  411888:	pop    eax
  411889:	test   edx,eax
  41188b:	sbb    al,0x6f
  41188d:	dec    edx
  41188e:	test   al,0x6a
  411890:	xchg   esi,eax
  411891:	or     ch,BYTE PTR [edi]
  411893:	fwait
  411894:	add    eax,0x7a92c826
  411899:	gs repz push edx
  41189c:	mov    ds:0x89a43aec,eax
  4118a1:	and    cl,BYTE PTR [edx-0x58763144]
  4118a7:	xchg   esi,eax
  4118a8:	add    BYTE PTR [edx-0x29ca70df],dl
  4118ae:	xor    al,0x4
  4118b0:	ret    0xd118
  4118b3:	imul   edi,ebp,0xfffffff5
  4118b6:	push   ebx
  4118b7:	ret    0xcadc
  4118ba:	and    edi,DWORD PTR [eax-0x6fb697c9]
  4118c0:	push   edx
  4118c1:	push   esp
  4118c2:	mov    bl,BYTE PTR [edx+ebx*2-0x7b6b046c]
  4118c9:	mov    DWORD PTR es:[ecx],esi
  4118cc:	dec    eax
  4118cd:	outs   dx,BYTE PTR ds:[esi]
  4118ce:	inc    esp
  4118cf:	jns    0x41192b
  4118d1:	daa    
  4118d2:	stos   DWORD PTR es:[edi],eax
  4118d3:	cdq    
  4118d4:	mov    esi,?
  4118d6:	js     0x4118d3
  4118d8:	jle    0x411956
  4118da:	push   ecx
  4118db:	mov    ebp,0x7ba80dac
  4118e0:	cld    
  4118e1:	(bad)  
  4118e3:	dec    eax
  4118e4:	(bad)  
  4118e5:	mov    ebx,DWORD PTR [ecx+0x76]
  4118e8:	mov    esi,0x56ac2b69
  4118ed:	aas    
  4118ee:	mov    esi,0x455a2102
  4118f3:	and    ecx,ecx
  4118f5:	mov    bh,BYTE PTR [eax+0x5a13cce3]
  4118fb:	inc    eax
  4118fc:	xor    DWORD PTR [esi-0x49fd927e],esi
  411902:	sbb    eax,0x445750a7
  411907:	(bad)  
  411908:	enter  0x56f3,0xaf
  41190c:	bound  edx,QWORD PTR [ecx]
  41190e:	jmp    0xe56ee87e
  411913:	push   esi
  411914:	rol    ebx,1
  411916:	fist   WORD PTR [eax-0x2b1c0b4d]
  41191c:	and    eax,0x83acd920
  411921:	popa   
  411922:	and    eax,DWORD PTR [ebp-0x50]
  411925:	and    BYTE PTR [esp+edi*1],bh
  411928:	out    dx,al
  411929:	fcomip st,st(6)
  41192b:	shr    dh,0x6d
  41192e:	je     0x411978
  411930:	xchg   edx,eax
  411931:	or     DWORD PTR [ebp+0x40],0x9a61e3d3
  411938:	repz icebp 
  41193a:	fsubr  QWORD PTR [edx]
  41193c:	das    
  41193d:	dec    esi
  41193e:	cmp    al,0xac
  411940:	movsx  ebp,WORD PTR [ecx+edx*1+0x5a36df34]
  411948:	jg     0x41193d
  41194a:	aad    0x1
  41194c:	lahf   
  41194d:	mov    cl,0xdf
  41194f:	out    dx,al
  411950:	or     eax,ebx
  411952:	dec    ecx
  411953:	fisttp DWORD PTR [edi]
  411955:	cs jmp 0x54e2:0x5771c838
  41195d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41195e:	inc    edx
  41195f:	cli    
  411960:	enter  0x3f6d,0x34
  411964:	push   edx
  411965:	cmp    esp,DWORD PTR [edi-0x64c43dca]
  41196b:	mov    eax,ds:0xb4e3abe1
  411970:	xor    edi,DWORD PTR [esi-0x46]
  411973:	pop    esp
  411974:	mov    al,0x0
  411976:	imul   ecx,DWORD PTR [eax-0x303ecd33],0x23b3a31d
  411980:	jmp    0xfc8e:0xc2b47316
  411987:	inc    eax
  411988:	dec    esp
  411989:	div    DWORD PTR [edi+0x4a5215a7]
  41198f:	inc    ebx
  411990:	shl    bl,0xb2
  411993:	or     al,0x58
  411995:	cwde   
  411996:	stos   BYTE PTR es:[edi],al
  411997:	mov    DWORD PTR [ebx],ecx
  411999:	mov    ds:0xc10a0adb,eax
  41199e:	shr    BYTE PTR [esi-0x231c652b],cl
  4119a4:	les    ebp,FWORD PTR [edx-0x3da513d0]
  4119aa:	and    al,0x97
  4119ac:	pushf  
  4119ad:	jbe    0x411940
  4119af:	test   DWORD PTR gs:[ebx],ebp
  4119b2:	out    0x27,eax
  4119b4:	jg     0x411a14
  4119b6:	mov    ds:0x635bb5ba,eax
  4119bb:	pop    ecx
  4119bc:	aaa    
  4119bd:	aaa    
  4119be:	pop    ds
  4119bf:	nop
  4119c0:	jns    0x411980
  4119c2:	cld    
  4119c3:	(bad)  
  4119c4:	in     eax,dx
  4119c5:	ja     0x411a41
  4119c7:	ds jno 0x41194d
  4119ca:	dec    esi
  4119cb:	pop    edx
  4119cc:	fst    QWORD PTR [edx+0x74dcba33]
  4119d2:	jbe    0x4119b2
  4119d4:	retf   
  4119d5:	adc    ebx,edx
  4119d7:	popa   
  4119d8:	mov    edx,0x2d4defad
  4119dd:	mov    ch,0x3
  4119df:	push   ebp
  4119e0:	xor    eax,0xb7fce9ea
  4119e5:	outs   dx,DWORD PTR ds:[esi]
  4119e6:	cmp    ah,BYTE PTR ds:0x84424c02
  4119ec:	ffree  st(6)
  4119ee:	neg    DWORD PTR [ecx-0x6b]
  4119f1:	xor    eax,0xcaafa0ef
  4119f6:	mov    DWORD PTR [ebx+0x72],eax
  4119f9:	push   0x54
  4119fb:	ins    BYTE PTR es:[edi],dx
  4119fc:	bound  ebp,QWORD PTR [esi+0x4c98d31a]
  411a02:	sbb    BYTE PTR [edi+0x18],cl
  411a05:	mov    WORD PTR ds:0x4a78d185,es
  411a0b:	call   0xcbbb:0x1a376ded
  411a12:	jnp    0x4119d2
  411a14:	ins    DWORD PTR es:[edi],dx
  411a15:	xchg   esp,eax
  411a16:	out    0xd,al
  411a18:	xor    al,0x26
  411a1a:	cmp    dh,BYTE PTR [eax]
  411a1c:	into   
  411a1d:	sbb    esi,eax
  411a1f:	jo     0x4119b2
  411a21:	arpl   WORD PTR [edx-0xf],bx
  411a24:	call   0xa44f:0xf8ce8fba
  411a2b:	cmp    edx,eax
  411a2d:	adc    al,0x60
  411a2f:	or     BYTE PTR [esi+0x4b],bl
  411a32:	loope  0x411a52
  411a34:	push   es
  411a35:	and    eax,0x3ca7ed74
  411a3a:	inc    ecx
  411a3b:	test   dh,dh
  411a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a3e:	mov    bl,0x6a
  411a40:	fild   QWORD PTR [ebx-0xea5dd25]
  411a46:	push   esp
  411a47:	and    DWORD PTR [ebx+ebp*4],0xffffffc9
  411a4b:	push   ecx
  411a4c:	fisttp WORD PTR [esi]
  411a4e:	or     BYTE PTR [edx+ebx*8-0x80],0x7a
  411a53:	dec    ecx
  411a54:	fnsave [edi+0xa]
  411a57:	aam    0xc
  411a59:	addr16 jp 0x411a1f
  411a5c:	sbb    BYTE PTR [esi],0x5b
  411a5f:	pop    ss
  411a60:	cmp    BYTE PTR [ebp+0xb],cl
  411a63:	loopne 0x411aa4
  411a65:	xor    DWORD PTR [edi-0x5120605d],0xd9b73245
  411a6f:	push   0x3c
  411a71:	test   al,0x22
  411a73:	sub    al,cl
  411a75:	and    DWORD PTR [edx],ebx
  411a77:	cmp    al,0xff
  411a79:	mov    eax,ds:0x73832fe5
  411a7e:	test   ah,dh
  411a80:	xchg   edx,eax
  411a81:	pop    esi
  411a82:	je     0x411af0
  411a84:	and    al,0x36
  411a86:	in     al,dx
  411a87:	(bad)  
  411a8a:	mov    bl,0x3f
  411a8c:	mov    ch,0x12
  411a8e:	ror    DWORD PTR [ebx+edx*2],0x34
  411a92:	hlt    
  411a93:	imul   BYTE PTR [ebx]
  411a95:	push   ecx
  411a96:	test   BYTE PTR [eax],ah
  411a98:	sub    ch,BYTE PTR [eax+ebp*8+0x26a1f7f1]
  411a9f:	push   ebp
  411aa0:	jmp    0x411adb
  411aa2:	push   esi
  411aa3:	push   ecx
  411aa4:	test   dh,bl
  411aa6:	inc    ebx
  411aa7:	push   edx
  411aa8:	mov    WORD PTR [esp+ebp*4-0x1c],ss
  411aac:	mov    WORD PTR [ebp+0x3a],fs
  411aaf:	(bad)  
  411ab0:	imul   ecx,DWORD PTR [ebx+edx*4-0x69],0x50b54453
  411ab8:	xchg   BYTE PTR [ecx-0x79],ah
  411abb:	inc    ebp
  411abc:	repz lds edx,FWORD PTR [esi-0x4c]
  411ac0:	fs mov edi,0xaaa08045
  411ac6:	repnz sbb BYTE PTR [edx+0x20fc7990],dh
  411acd:	(bad)  
  411ace:	stc    
  411acf:	dec    ebx
  411ad0:	jl     0x411a78
  411ad2:	push   ecx
  411ad3:	addr16 out dx,al
  411ad5:	test   eax,0xeefb0bb7
  411adb:	dec    esi
  411adc:	inc    edi
  411add:	aaa    
  411ade:	mov    ebp,esi
  411ae0:	mov    bl,0x5d
  411ae2:	or     eax,0xdde07b50
  411ae7:	mov    dh,0x42
  411ae9:	out    0xb,eax
  411aeb:	mov    dh,0xe7
  411aed:	ds stos DWORD PTR es:[edi],eax
  411aef:	sbb    DWORD PTR [ecx-0x15df430],0x37
  411af6:	je     0x411aa9
  411af8:	xchg   esp,eax
  411af9:	xchg   edx,eax
  411afa:	pop    eax
  411afb:	adc    eax,0xb081d91e
  411b00:	adc    eax,0x35a0fdda
  411b05:	jb     0x411b3d
  411b07:	sbb    ebp,DWORD PTR [ecx+0x48]
  411b0a:	daa    
  411b0b:	xchg   ebp,eax
  411b0c:	outs   dx,BYTE PTR ds:[esi]
  411b0d:	pop    ecx
  411b0e:	retf   0xc4cb
  411b11:	sbb    DWORD PTR [ebp+eiz*1-0x24],esi
  411b15:	pushf  
  411b16:	leave  
  411b17:	jbe    0x411aae
  411b19:	sub    BYTE PTR [edi+ebx*2-0x2f],bl
  411b1d:	test   eax,0x4e63c175
  411b22:	leave  
  411b23:	or     al,0x80
  411b25:	daa    
  411b26:	add    bh,BYTE PTR [eax+0x49e38bde]
  411b2c:	or     esi,0x68
  411b2f:	push   ecx
  411b30:	ins    DWORD PTR es:[edi],dx
  411b31:	aam    0x87
  411b33:	mov    ebp,0x4b5df87e
  411b38:	mov    ?,WORD PTR [ebx+0x21]
  411b3b:	aam    0x15
  411b3d:	mov    edx,0x8d47d8e4
  411b42:	or     bh,BYTE PTR [edi]
  411b44:	out    0x4e,al
  411b46:	cwde   
  411b47:	adc    al,0x78
  411b49:	mov    esi,0x3984599
  411b4e:	ins    DWORD PTR es:[edi],dx
  411b4f:	sub    DWORD PTR [ebx+eiz*2],ecx
  411b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b53:	jo     0x411b02
  411b55:	dec    edx
  411b56:	add    eax,0xebd24b12
  411b5b:	shl    BYTE PTR ds:0xa3a6d48c,1
  411b61:	push   esi
  411b62:	icebp  
  411b63:	jmp    0x411b48
  411b65:	sbb    BYTE PTR ds:0x7abab28,bl
  411b6b:	push   ecx
  411b6c:	jns    0x411b51
  411b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b6f:	or     DWORD PTR [esi+0x74],0x865965ca
  411b76:	mov    ch,0x94
  411b78:	iret   
  411b79:	mov    ah,0x13
  411b7b:	sbb    edx,DWORD PTR [edx]
  411b7d:	add    cl,al
  411b7f:	aas    
  411b80:	je     0x411b37
  411b82:	iret   
  411b83:	pop    esp
  411b84:	sar    DWORD PTR [ebp-0x411d7b5b],cl
  411b8a:	mov    cs,WORD PTR [esp+eax*8]
  411b8d:	mov    BYTE PTR [eax-0x64],cl
  411b90:	mov    dl,bl
  411b92:	and    DWORD PTR [eax+edx*4-0x27],ebp
  411b96:	daa    
  411b97:	or     ah,cl
  411b99:	pop    edi
  411b9a:	bswap  edi
  411b9c:	fisub  DWORD PTR [eax]
  411b9e:	mov    BYTE PTR [edi+0x69dc34bb],ah
  411ba4:	int    0x5c
  411ba6:	mov    cl,BYTE PTR [eax-0x6434fac3]
  411bac:	inc    esi
  411bad:	daa    
  411bae:	mov    ch,0x4
  411bb0:	daa    
  411bb1:	sbb    eax,0xfe5c76d4
  411bb6:	mov    al,ds:0x96ad8315
  411bbb:	scas   eax,DWORD PTR es:[edi]
  411bbc:	jl     0x411b69
  411bbe:	popa   
  411bbf:	xchg   esp,eax
  411bc0:	push   0xfdc4519f
  411bc5:	or     dl,BYTE PTR ds:0xe9bd83e8
  411bcb:	xor    eax,0x73202a39
  411bd0:	cdq    
  411bd1:	push   ecx
  411bd2:	xor    DWORD PTR [ebp-0x7e1edf6],0x22fabd48
  411bdc:	and    al,0xa8
  411bde:	aaa    
  411bdf:	(bad)  [ecx]
  411be1:	popf   
  411be2:	xor    al,0xcf
  411be4:	xlat   BYTE PTR ds:[ebx]
  411be5:	ficom  WORD PTR [ebx+0x61]
  411be8:	mov    esp,0x3f000f63
  411bed:	popf   
  411bee:	(bad)  
  411bef:	cli    
  411bf0:	cli    
  411bf1:	adc    al,0x7a
  411bf3:	shr    BYTE PTR [edi-0x4baa9ebf],cl
  411bf9:	loopne 0x411c61
  411bfb:	adc    eax,0x1154cc09
  411c00:	fwait
  411c01:	js     0x411bcf
  411c03:	ss add esp,edx
  411c06:	lea    esi,[ebx+0x55]
  411c09:	jmp    0x411bc8
  411c0b:	data16 adc al,0xfb
  411c0e:	push   ebp
  411c0f:	mov    eax,0xf8c8410a
  411c14:	or     DWORD PTR [ebx],esp
  411c16:	aaa    
  411c17:	add    al,0x79
  411c19:	xchg   esi,eax
  411c1a:	xlat   BYTE PTR ds:[ebx]
  411c1b:	jge    0x411c93
  411c1d:	cld    
  411c1e:	xor    BYTE PTR [ebx+ecx*2+0x51],cl
  411c22:	retf   
  411c23:	aad    0x34
  411c25:	sar    ebx,1
  411c27:	fst    QWORD PTR [eax]
  411c29:	lods   eax,DWORD PTR ds:[esi]
  411c2a:	push   cs
  411c2b:	(bad)  
  411c2d:	iret   
  411c2e:	adc    eax,0x3e8a49a1
  411c33:	mov    dh,0x15
  411c35:	inc    DWORD PTR [eax-0x58]
  411c38:	xchg   ecx,eax
  411c39:	xchg   edi,eax
  411c3a:	ficomp WORD PTR [ecx]
  411c3c:	or     DWORD PTR [esi-0x30],0xe3878712
  411c43:	ss sub al,cl
  411c46:	mov    ds:0xff222d3e,al
  411c4b:	sub    al,BYTE PTR [edi]
  411c4d:	cmp    BYTE PTR [ecx-0x42],bl
  411c50:	fsubr  st,st(5)
  411c52:	add    ebp,DWORD PTR [ebx+0x2b5b0ff7]
  411c58:	mov    ebx,DWORD PTR [ebp-0x18]
  411c5b:	hlt    
  411c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c5d:	and    BYTE PTR [ecx],bl
  411c5f:	jp     0x411c23
  411c61:	inc    edx
  411c62:	add    al,0xa3
  411c64:	imul   ebp,DWORD PTR [ecx+0x608f6d96],0x58
  411c6b:	ret    0x4288
  411c6e:	xchg   edx,eax
  411c6f:	lahf   
  411c70:	cmp    eax,0x7087d441
  411c75:	jg     0x411c0b
  411c77:	mov    bl,0xc6
  411c79:	out    dx,eax
  411c7a:	mov    eax,ds:0x94447cb1
  411c7f:	xchg   edi,eax
  411c80:	enter  0x5581,0x16
  411c84:	(bad)  
  411c85:	lahf   
  411c86:	or     eax,0xea8556db
  411c8b:	mov    dh,0xe5
  411c8d:	(bad)  
  411c8e:	shr    BYTE PTR [ecx+0x1f],cl
  411c91:	cmp    BYTE PTR [eax+0x76],al
  411c94:	pop    ebx
  411c95:	xchg   esp,eax
  411c96:	call   0xd20af308
  411c9b:	add    eax,0x30cba5a0
  411ca0:	pop    ebp
  411ca1:	jne    0x411c5c
  411ca3:	popf   
  411ca4:	(bad)  
  411ca5:	dec    edi
  411ca6:	retf   0xec52
  411ca9:	pop    edx
  411caa:	xor    ch,BYTE PTR [ebx]
  411cac:	retf   
  411cad:	sbb    al,0xb1
  411caf:	xor    al,0x2c
  411cb1:	sti    
  411cb2:	mov    dh,0xba
  411cb4:	push   esi
  411cb5:	push   0x60
  411cb7:	pop    es
  411cb8:	dec    ecx
  411cb9:	mov    edi,0xa418cb89
  411cbe:	mov    al,ds:0x9cb28f37
  411cc3:	es (bad) 
  411cc5:	pop    ebp
  411cc6:	in     al,0xda
  411cc8:	cli    
  411cc9:	aad    0xf7
  411ccb:	test   al,0x25
  411ccd:	mov    cl,0xa4
  411ccf:	dec    eax
  411cd0:	imul   edi,DWORD PTR [ebx+0x49bdbd44],0x3c
  411cd7:	inc    esi
  411cd8:	adc    BYTE PTR [ebp+0x45015d51],0xfc
  411cdf:	sbb    edx,ebx
  411ce1:	std    
  411ce2:	test   al,0xf8
  411ce4:	iret   
  411ce5:	repnz stos DWORD PTR es:[edi],eax
  411ce7:	iret   
  411ce8:	inc    ebp
  411ce9:	push   esi
  411cea:	or     bl,ch
  411cec:	sti    
  411ced:	and    DWORD PTR [esi-0x52],ebx
  411cf0:	mov    BYTE PTR [edi],bh
  411cf2:	retf   
  411cf3:	retf   
  411cf4:	pop    edi
  411cf5:	test   eax,0x4fd389c4
  411cfa:	xchg   esi,eax
  411cfb:	xchg   ebx,eax
  411cfc:	and    DWORD PTR ds:0x4a54ed16,edx
  411d02:	bound  edx,QWORD PTR [edi-0x36]
  411d05:	mov    eax,0xa4623d23
  411d0a:	xchg   edi,eax
  411d0b:	fwait
  411d0c:	jae    0x411d3a
  411d0e:	popa   
  411d0f:	mov    bl,0x3
  411d11:	pop    edi
  411d12:	mov    DWORD PTR [ecx-0x76],edx
  411d15:	imul   ebx,DWORD PTR [bp+si-0x2e],0x6ca3fba9
  411d1d:	xor    DWORD PTR [esi],edx
  411d1f:	cmp    eax,0x34fb023d
  411d24:	iret   
  411d25:	outs   dx,DWORD PTR ds:[esi]
  411d26:	rcl    esp,1
  411d28:	mov    bh,0x72
  411d2a:	jno    0x411d26
  411d2c:	(bad)  
  411d2d:	cmp    al,0x6c
  411d2f:	(bad)  [ecx-0x2c]
  411d32:	fist   DWORD PTR [eax-0x6a84beed]
  411d38:	cmp    eax,0x4578c19
  411d3d:	pusha  
  411d3e:	(bad)  
  411d3f:	test   BYTE PTR [ecx+esi*8-0xeb1c6f1],0x26
  411d47:	out    0xb9,al
  411d49:	inc    edi
  411d4a:	mov    eax,ds:0xd0f809e1
  411d4f:	and    BYTE PTR [esi-0x214d2cb1],dl
  411d55:	xchg   ebx,eax
  411d56:	jmp    0x411dcd
  411d58:	in     eax,dx
  411d59:	fimul  WORD PTR [ebx]
  411d5b:	mov    al,0x14
  411d5d:	lods   al,BYTE PTR ds:[esi]
  411d5e:	adc    eax,0x3702f8b0
  411d63:	call   0x9dce:0x9ace2d6d
  411d6a:	les    eax,FWORD PTR [ebp-0x214f13e3]
  411d70:	fdiv   QWORD PTR [ecx+ebp*4-0x15e29df5]
  411d77:	xor    DWORD PTR ds:0x6e1c712c,edi
  411d7d:	test   BYTE PTR [edi],0x3e
  411d80:	loope  0x411da2
  411d82:	sub    bl,ah
  411d84:	or     al,0xa3
  411d86:	fisubr WORD PTR [esi+0x6c]
  411d89:	adc    DWORD PTR [esi],0xbcffc638
  411d8f:	in     al,0x4f
  411d91:	das    
  411d92:	arpl   cx,cx
  411d94:	jmp    0x411dc8
  411d96:	dec    esp
  411d97:	test   al,0xbc
  411d99:	cmp    al,0xfc
  411d9b:	jg     0x411dee
  411d9d:	add    eax,0xea6b76e9
  411da2:	jns    0x411d6a
  411da4:	(bad)
  411da7:	pop    edx
  411da8:	int3   
  411da9:	mov    ?,ebp
  411dab:	sub    eax,0xe0ed52db
  411db0:	jne    0x411df8
  411db2:	pushf  
  411db3:	(bad)  
  411db4:	popa   
  411db5:	push   ss
  411db6:	popa   
  411db7:	jecxz  0x411d47
  411db9:	addr16 mov ebx,0xb85f1f99
  411dbf:	out    0x15,eax
  411dc1:	ret    0xfbca
  411dc4:	aam    0x4
  411dc6:	ds call 0x7470:0xc0fe7eb9
  411dce:	outs   dx,BYTE PTR ss:[esi]
  411dd0:	arpl   di,si
  411dd2:	xor    eax,DWORD PTR ss:[ecx+0x37]
  411dd6:	xchg   esi,eax
  411dd7:	pop    eax
  411dd8:	xchg   esi,eax
  411dd9:	push   0x2ed0bf22
  411dde:	repz (bad) 
  411de0:	gs (bad) 
  411de2:	sbb    BYTE PTR [edi],dh
  411de4:	push   esi
  411de5:	add    al,0xdc
  411de7:	jno    0x411d80
  411de9:	retf   
  411dea:	xor    bl,BYTE PTR [esi+0x65]
  411ded:	out    dx,al
  411dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411def:	or     BYTE PTR [edx],al
  411df1:	jge    0x411d8a
  411df3:	(bad)  
  411df4:	gs mov ebp,0x34e633dc
  411dfa:	inc    eax
  411dfb:	repnz enter 0xe2a,0x11
  411e00:	push   es
  411e01:	rcr    DWORD PTR [edx-0x3f],cl
  411e04:	sti    
  411e05:	xor    ebp,DWORD PTR [ebx]
  411e07:	sar    DWORD PTR [edx-0xa],0xfd
  411e0b:	sub    bl,BYTE PTR [eax+0x542701b8]
  411e11:	aam    0x19
  411e13:	jp     0x411dea
  411e15:	shr    edx,cl
  411e17:	(bad)  
  411e18:	jecxz  0x411e46
  411e1a:	bound  ebp,QWORD PTR ds:0xf0e10904
  411e20:	mov    eax,0xf40e52c7
  411e25:	and    DWORD PTR [edi+0x62705686],ebx
  411e2b:	cmp    BYTE PTR [ebp-0x1b],0x93
  411e2f:	aas    
  411e30:	mov    ebp,ebp
  411e32:	sbb    eax,DWORD PTR [edi]
  411e34:	pop    esp
  411e35:	stos   BYTE PTR es:[edi],al
  411e36:	push   esp
  411e37:	xor    eax,0xb3a89bb
  411e3c:	push   esi
  411e3d:	cmp    al,0xe1
  411e3f:	cs jbe 0x411e70
  411e42:	arpl   bp,bp
  411e44:	ins    BYTE PTR es:[edi],dx
  411e45:	add    DWORD PTR [ecx+0x519c4613],0xa75e89a4
  411e4f:	mov    esp,0xf717cf85
  411e54:	adc    esi,DWORD PTR [ebx+0x15167dd7]
  411e5a:	mov    bh,0xb8
  411e5c:	ret    
  411e5d:	cmp    esi,DWORD PTR [eax+0x1a4d1375]
  411e63:	jb     0x411e38
  411e65:	xchg   ebx,eax
  411e66:	mov    eax,0xf3cd21ac
  411e6b:	imul   ecx,DWORD PTR [eax],0x68
  411e6e:	add    eax,0x6232f1f9
  411e73:	out    0xc5,al
  411e75:	sbb    ch,BYTE PTR [eax+0x6f]
  411e78:	js     0x411ed0
  411e7a:	leave  
  411e7b:	popa   
  411e7c:	fdivr  QWORD PTR [ebx+0x77]
  411e7f:	mov    cl,cl
  411e81:	repnz add ah,BYTE PTR [ebx]
  411e84:	push   edi
  411e85:	xchg   edx,eax
  411e86:	pop    ecx
  411e87:	nop
  411e88:	dec    ecx
  411e89:	pop    ecx
  411e8a:	int    0x9c
  411e8c:	sbb    al,0xfe
  411e8e:	xor    DWORD PTR [ebx],edx
  411e90:	and    ebp,DWORD PTR [edi+0x42]
  411e93:	aam    0xbc
  411e95:	add    ebx,edi
  411e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e98:	fdivrp st(5),st
  411e9a:	pusha  
  411e9b:	(bad)  
  411e9c:	in     al,dx
  411e9d:	shl    BYTE PTR [eax-0x52e26640],1
  411ea3:	in     al,dx
  411ea4:	cmp    bl,cl
  411ea6:	repz je 0x411f25
  411ea9:	ror    DWORD PTR [eax-0x77],cl
  411eac:	mov    ds:0x911ef394,al
  411eb1:	fsubr  QWORD PTR [edi-0x4c361355]
  411eb7:	shl    BYTE PTR [ebp-0x5d],cl
  411eba:	mov    esp,0x796d1771
  411ebf:	sub    ebp,DWORD PTR [esi]
  411ec1:	pop    ecx
  411ec2:	mov    ebp,0x9a9686a1
  411ec7:	inc    esp
  411ec8:	outs   dx,DWORD PTR ds:[esi]
  411ec9:	scas   al,BYTE PTR es:[edi]
  411eca:	mov    eax,ds:0xf1635ec7
  411ecf:	pusha  
  411ed0:	push   ebp
  411ed1:	jmp    0x411eae
  411ed3:	mov    ah,0x3
  411ed5:	ret    0x2e74
  411ed8:	dec    ebx
  411ed9:	mov    ds:0x89a88184,al
  411ede:	dec    edx
  411edf:	inc    eax
  411ee0:	popf   
  411ee1:	xor    ebp,DWORD PTR [esi]
  411ee3:	jo     0x411f0a
  411ee5:	in     al,dx
  411ee6:	push   esp
  411ee7:	push   esp
  411ee8:	imul   ebp,DWORD PTR [eax],0xec2c57a2
  411eee:	xchg   ebp,eax
  411eef:	mov    cl,0x11
  411ef1:	fs call 0x6c1bf030
  411ef7:	mov    ecx,0xc49f600e
  411efc:	fnstcw WORD PTR [ecx+eax*4-0x27]
  411f00:	mov    dh,0xe
  411f02:	push   cs
  411f03:	push   edi
  411f04:	mov    ds:0xf1ec7897,al
  411f09:	mov    ds:0xfc221b3,eax
  411f0e:	push   eax
  411f0f:	ja     0x411ed3
  411f11:	xor    al,0x48
  411f13:	pop    ecx
  411f14:	mov    ch,0x4d
  411f16:	adc    DWORD PTR [ebp-0x2e],eax
  411f19:	inc    esp
  411f1a:	(bad)  
  411f1b:	jg     0x411ea2
  411f1d:	add    ah,dh
  411f1f:	pminsw mm7,QWORD PTR [edi+0x150233bc]
  411f26:	push   ds
  411f27:	mov    eax,edx
  411f29:	test   BYTE PTR [edi+eiz*2+0x546cf601],0xb
  411f31:	push   ebx
  411f32:	repz jmp 0x8f42:0xcab1f904
  411f3a:	push   es
  411f3b:	or     eax,0xf15c6816
  411f40:	rol    BYTE PTR [eax],0x70
  411f43:	xchg   edx,ebx
  411f45:	(bad)  
  411f46:	mov    ebp,0xcb64c853
  411f4b:	jmp    0xfe27:0x59a2e0ea
  411f52:	iret   
  411f53:	in     al,dx
  411f54:	pop    ebp
  411f55:	in     al,dx
  411f56:	sbb    eax,0x3f1aeb9e
  411f5b:	adc    ch,ah
  411f5d:	outs   dx,DWORD PTR ds:[esi]
  411f5e:	push   esi
  411f5f:	sub    al,BYTE PTR [esi+0x417cd6e5]
  411f65:	sub    DWORD PTR [edx-0x30ba781b],ebp
  411f6b:	rcr    DWORD PTR [ecx+edx*2-0x62],cl
  411f6f:	mov    ebx,0x188618b2
  411f74:	mov    esi,0xe1cecbe4
  411f79:	imul   DWORD PTR [ebx-0x3e]
  411f7c:	inc    ebp
  411f7d:	xlat   BYTE PTR ds:[ebx]
  411f7e:	xor    DWORD PTR ds:0xc64e3471,eax
  411f84:	cmp    BYTE PTR [ebp-0x68],0x77
  411f88:	les    ebp,FWORD PTR [esi]
  411f8a:	enter  0x23c7,0x92
  411f8e:	ins    DWORD PTR es:[edi],dx
  411f8f:	push   esi
  411f90:	add    al,0x1a
  411f92:	iret   
  411f93:	inc    esi
  411f94:	fwait
  411f95:	mov    al,0x18
  411f97:	sub    bl,ch
  411f99:	cmp    bl,BYTE PTR [edi+ebp*2+0x651bdac]
  411fa0:	outs   dx,DWORD PTR ds:[esi]
  411fa1:	lea    ebp,ds:0x1a832237
  411fa7:	or     BYTE PTR [ecx],0x10
  411faa:	loop   0x411fa0
  411fac:	rol    BYTE PTR [ebx+edi*8-0x4901da8b],1
  411fb3:	pop    esi
  411fb4:	adc    eax,0xc632a2ab
  411fb9:	or     BYTE PTR [ebx-0x5bff6b3e],cl
  411fbf:	jecxz  0x411ff6
  411fc1:	cmp    al,0xc8
  411fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc4:	add    eax,0xc4b2675a
  411fc9:	mov    WORD PTR [ebx-0x3b57d75c],?
  411fcf:	mov    ebp,0x9a9005e0
  411fd4:	xlat   BYTE PTR ds:[ebx]
  411fd5:	scas   eax,DWORD PTR es:[edi]
  411fd6:	mov    eax,ds:0x91b1fc54
  411fdb:	add    ebx,DWORD PTR [ebp-0x5]
  411fde:	mov    bh,0xe4
  411fe0:	or     ch,ch
  411fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fe3:	in     eax,dx
  411fe4:	scas   al,BYTE PTR es:[edi]
  411fe5:	ins    BYTE PTR es:[edi],dx
  411fe6:	xchg   ebp,eax
  411fe7:	xlat   BYTE PTR ds:[ebx]
  411fe8:	ins    BYTE PTR es:[edi],dx
  411fe9:	(bad)  
  411fea:	dec    ecx
  411feb:	mov    esi,0x65ec18f8
  411ff0:	pop    ss
  411ff1:	test   bl,ah
  411ff3:	mov    dl,0xea
  411ff5:	fldcw  WORD PTR [eax]
  411ff7:	sbb    ch,BYTE PTR [edx+0x94afc64]
  411ffd:	lahf   
  411ffe:	pop    ecx
  411fff:	mov    bh,0x98
  412001:	clc    
  412002:	sub    dh,BYTE PTR [ebp+0x68]
  412005:	sub    ch,cl
  412007:	jno    0x411fd7
  412009:	jne    0x412067
  41200b:	call   0xeaea:0x85d66e6b
  412012:	add    al,BYTE PTR [esi-0x5e]
  412015:	push   ss
  412016:	shr    BYTE PTR [ecx],1
  412018:	test   DWORD PTR [edi],ecx
  41201a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41201b:	xchg   edi,eax
  41201c:	jl     0x41206f
  41201e:	ds fs dec ecx
  412021:	inc    esp
  412022:	adc    dl,BYTE PTR [ebp-0x6c]
  412025:	jg     0x411ff6
  412027:	out    0xe,eax
  412029:	stc    
  41202a:	jecxz  0x412007
  41202c:	or     eax,0xe869ab08
  412031:	inc    ebp
  412032:	jno    0x4120b1
  412034:	add    BYTE PTR [eax-0x33],dl
  412037:	(bad)  
  412038:	jns    0x412005
  41203a:	inc    esp
  41203b:	adc    esp,DWORD PTR [edx+0x43]
  41203e:	mov    al,ds:0xef9c19a7
  412043:	cdq    
  412044:	sub    DWORD PTR [ebp-0x5070a6d1],edx
  41204a:	(bad)  
  41204c:	leave  
  41204d:	cli    
  41204e:	mov    ds:0x6473fb42,eax
  412053:	sar    edi,1
  412055:	sti    
  412056:	pusha  
  412057:	(bad)  
  412058:	sbb    DWORD PTR [ebx],edx
  41205a:	stos   DWORD PTR es:[edi],eax
  41205b:	call   0x7225b217
  412060:	mov    cr6,esp
  412063:	cwde   
  412064:	stos   DWORD PTR es:[edi],eax
  412065:	sti    
  412066:	rcr    BYTE PTR [eax],cl
  412068:	cld    
  412069:	hlt    
  41206a:	push   es
  41206b:	mov    ?,ecx
  41206d:	retf   
  41206e:	xor    DWORD PTR [eax],ebx
  412070:	mov    ch,0x4d
  412072:	cmp    BYTE PTR [edi+esi*2-0x43a086a],al
  412079:	ror    BYTE PTR [edi+0x3e5dd42e],cl
  41207f:	int3   
  412080:	push   ds
  412081:	lods   eax,DWORD PTR ds:[esi]
  412082:	add    eax,DWORD PTR [ebx-0x3b]
  412085:	cwde   
  412086:	arpl   WORD PTR [ecx+edi*4+0x24146943],dx
  41208d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208e:	sbb    BYTE PTR [esi],ah
  412090:	ds rcr dh,cl
  412093:	fld    TBYTE PTR [ecx+0x6cedc7d]
  412099:	xor    esi,DWORD PTR [eax]
  41209b:	mov    al,0x72
  41209d:	cmp    eax,0x71a5fcc6
  4120a2:	(bad)  
  4120a3:	hlt    
  4120a4:	xor    dl,bh
  4120a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a7:	or     al,0xb0
  4120a9:	cld    
  4120aa:	leave  
  4120ab:	xor    edx,DWORD PTR [edi]
  4120ad:	push   esi
  4120ae:	dec    esp
  4120af:	xor    dl,bh
  4120b1:	test   edx,esp
  4120b3:	or     DWORD PTR [ebp-0x1e],esi
  4120b6:	inc    ah
  4120b8:	rcr    DWORD PTR [ebp+0x3d],cl
  4120bb:	ins    DWORD PTR es:[edi],dx
  4120bc:	cmp    BYTE PTR [ebp+edi*2-0x1165d7b8],dh
  4120c3:	fild   WORD PTR [esi]
  4120c5:	int3   
  4120c6:	test   DWORD PTR [ebp-0x35ad0e57],esp
  4120cc:	inc    esi
  4120cd:	pop    esi
  4120ce:	push   esp
  4120cf:	out    dx,ax
  4120d1:	jg     0x412152
  4120d3:	popa   
  4120d4:	mov    ah,0x1d
  4120d6:	icebp  
  4120d7:	jnp    0x412091
  4120d9:	inc    ebx
  4120da:	sub    al,0x9
  4120dc:	ins    DWORD PTR es:[edi],dx
  4120dd:	push   ds
  4120de:	xchg   edx,eax
  4120df:	jne    0x4120a2
  4120e1:	lahf   
  4120e2:	fwait
  4120e3:	test   DWORD PTR [ebx-0x6],0x3410be55
  4120ea:	(bad)  [eax]
  4120ec:	iret   
  4120ed:	cs pop ds
  4120ef:	xlat   BYTE PTR ds:[ebx]
  4120f0:	add    eax,0xbd1664d6
  4120f5:	adc    al,0x2f
  4120f7:	sub    dh,bl
  4120f9:	mov    cl,0x26
  4120fb:	xor    eax,0x5583b876
  412100:	les    ecx,FWORD PTR [ecx+0x21]
  412103:	jecxz  0x412156
  412105:	mov    eax,ds:0xc03840ea
  41210a:	ins    DWORD PTR es:[edi],dx
  41210b:	jle    0x412161
  41210d:	ja     0x41210c
  41210f:	stc    
  412110:	xor    DWORD PTR [esi],edi
  412112:	rol    BYTE PTR [edi+0x3f7c7610],1
  412118:	jnp    0x412175
  41211a:	sbb    esp,DWORD PTR [edi]
  41211c:	fidiv  DWORD PTR [ecx+0x5e2c313b]
  412122:	fadd   st(2),st
  412124:	fisubr DWORD PTR [ebx]
  412126:	push   edi
  412127:	repnz test DWORD PTR [eax+esi*1],0x72c81def
  41212f:	sub    dl,bl
  412131:	arpl   WORD PTR [ecx+eax*4+0x6cec295d],bp
  412138:	push   ss
  412139:	inc    edx
  41213a:	push   ds
  41213b:	push   ecx
  41213c:	jne    0x412163
  41213e:	push   ebp
  41213f:	fisubr DWORD PTR [edx]
  412141:	neg    BYTE PTR [eax+esi*2+0x73495f02]
  412148:	or     BYTE PTR [ebx+ecx*1-0x26bf1621],cl
  41214f:	pop    ecx
  412150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412151:	not    DWORD PTR [ebp+0x56e27d81]
  412157:	cld    
  412158:	lock test edx,ebp
  41215b:	adc    bl,0x36
  41215e:	or     al,al
  412160:	push   0x5aecad1e
  412165:	loope  0x412141
  412167:	push   ss
  412168:	xor    eax,0xe6cdf0a6
  41216d:	nop
  41216e:	push   ds
  41216f:	lods   al,BYTE PTR ds:[esi]
  412170:	sti    
  412171:	stc    
  412172:	dec    esp
  412173:	int    0xba
  412175:	mov    ebp,0xcd8ae009
  41217a:	sub    dl,BYTE PTR [eax-0x6c94256d]
  412180:	mov    ds:0xa86105cd,al
  412185:	mov    ebp,0x135a0f79
  41218a:	xor    DWORD PTR [edx],0xffffffa2
  41218d:	je     0x4121d2
  41218f:	aas    
  412190:	mov    edx,0x9afe139
  412195:	fs cmp ebp,esi
  412198:	push   cs
  412199:	inc    esi
  41219b:	inc    esi
  41219c:	fdiv   st(3),st
  41219e:	ret    
  41219f:	pop    edx
  4121a0:	mov    WORD PTR [esi+0x39c6119e],?
  4121a6:	inc    eax
  4121a7:	push   ss
  4121a8:	adc    bh,dh
  4121aa:	inc    esp
  4121ab:	or     eax,0x5d6b06fd
  4121b0:	dec    ebp
  4121b1:	add    cl,dh
  4121b3:	dec    edx
  4121b4:	sub    DWORD PTR [edi],0x25b71c09
  4121ba:	mov    eax,ds:0x62bb77ae
  4121bf:	cld    
  4121c0:	in     eax,0x56
  4121c2:	cmp    al,0xde
  4121c4:	xchg   ebp,eax
  4121c5:	fwait
  4121c6:	xlat   BYTE PTR ds:[ebx]
  4121c7:	jle    0x41222a
  4121c9:	push   cs
  4121ca:	jns    0x41223d
  4121cc:	mov    edx,0xc9d0ff2e
  4121d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d2:	or     DWORD PTR [eax+0x43fd155c],esp
  4121d8:	inc    ecx
  4121d9:	push   esi
  4121da:	add    al,0x71
  4121dc:	mov    eax,ds:0x20ae4cc8
  4121e1:	cdq    
  4121e2:	push   edi
  4121e3:	popa   
  4121e4:	push   0xffffff85
  4121e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e7:	pushf  
  4121e8:	int3   
  4121e9:	fstp   DWORD PTR [ecx]
  4121eb:	or     eax,0x7d093975
  4121f0:	mov    al,ds:0xda6beae7
  4121f5:	aaa    
  4121f6:	test   al,0xef
  4121f8:	xor    eax,0xa26dd04a
  4121fd:	loope  0x41221b
  4121ff:	cmp    al,0xf3
  412201:	leave  
  412202:	imul   ecx,DWORD PTR [ebx+0xe],0x565d7b28
  412209:	xchg   ebx,eax
  41220b:	pop    ss
  41220c:	dec    edi
  41220d:	mov    fs,ebx
  41220f:	inc    edi
  412210:	adc    BYTE PTR [ecx],dh
  412212:	fs jbe 0x412284
  412215:	jl     0x41219b
  412217:	imul   ebp,edx,0x93f2a4b0
  41221d:	ret    
  41221e:	jnp    0x4121a9
  412220:	int    0xa6
  412222:	add    al,dl
  412224:	fld    DWORD PTR [ebp+0x18]
  412227:	jl     0x41227b
  412229:	scas   al,BYTE PTR es:[edi]
  41222a:	mov    dl,0x61
  41222c:	mov    ebp,0xc6fe5c82
  412231:	jl     0x41229f
  412233:	jl     0x412265
  412235:	mov    ah,0x1a
  412237:	loopne 0x4121f9
  412239:	xor    al,0xa1
  41223b:	fiadd  DWORD PTR [esi]
  41223d:	jne    0x41224d
  41223f:	fcmovnb st,st(1)
  412241:	sub    edi,DWORD PTR [ecx+0x1fdd08b1]
  412247:	xchg   ecx,eax
  412248:	std    
  412249:	lahf   
  41224a:	in     al,dx
  41224b:	(bad)  
  41224c:	in     eax,dx
  41224d:	mov    dh,0xc
  41224f:	sbb    BYTE PTR [edi],al
  412251:	sbb    eax,0x42cc44df
  412256:	mov    esp,ebx
  412258:	pop    ds
  412259:	hlt    
  41225a:	or     DWORD PTR [eax-0x3d],0x586398dc
  412261:	mov    al,ds:0x42abb9a9
  412266:	adc    al,0xcc
  412268:	pop    ecx
  412269:	push   ebp
  41226a:	adc    BYTE PTR [esi-0x63],al
  41226d:	int3   
  41226e:	dec    esi
  41226f:	jg     0x41225c
  412271:	jmp    0x41229f
  412273:	push   esi
  412274:	test   eax,0xbd41cd5d
  412279:	jnp    0x4121fd
  41227b:	(bad)  
  41227c:	iret   
  41227d:	imul   ebp,ebx,0xe22162c
  412283:	call   0xb852a5ae
  412288:	mov    bh,0x40
  41228a:	jne    0x412283
  41228c:	lea    edi,[edi]
  41228e:	sbb    edx,eax
  412290:	xor    ebp,DWORD PTR [edi+0x40]
  412293:	cs sbb al,0x7e
  412296:	xchg   edi,eax
  412297:	stos   BYTE PTR es:[edi],al
  412298:	xor    DWORD PTR [eax+0x70],esp
  41229b:	popa   
  41229c:	adc    DWORD PTR [edi+ecx*2],0xffffff8a
  4122a0:	dec    esi
  4122a1:	(bad)  
  4122a2:	loope  0x41225d
  4122a4:	and    eax,0x1f770227
  4122a9:	xor    al,0xc4
  4122ab:	push   ds
  4122ac:	repz (bad) [edx]
  4122af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b0:	rcl    BYTE PTR [ebp+0x6081bb4c],cl
  4122b6:	sbb    esp,edi
  4122b8:	xor    BYTE PTR es:[edx-0x13],bl
  4122bc:	mov    esp,0x49c31320
  4122c1:	mov    edi,0xd0fc2c0f
  4122c6:	cld    
  4122c7:	pop    esi
  4122c8:	lds    ebx,FWORD PTR [ecx+0x2f69dcb7]
  4122ce:	scas   eax,DWORD PTR es:[edi]
  4122cf:	je     0x4122a4
  4122d1:	in     eax,dx
  4122d2:	xor    ecx,DWORD PTR [edi]
  4122d4:	inc    esi
  4122d5:	ret    0x4f66
  4122d8:	xor    BYTE PTR [edi-0x9],ah
  4122db:	retf   
  4122dc:	mov    ebx,0x3c7559d3
  4122e1:	jmp    0x15d2:0xe175f4e
  4122e8:	jmp    0xa15c:0x8b3ea41a
  4122ef:	js     0x412309
  4122f1:	mov    edi,0x877fbb57
  4122f6:	mov    DWORD PTR [esi],eax
  4122f8:	gs inc esi
  4122fa:	out    dx,al
  4122fb:	and    ah,dl
  4122fd:	jp     0x4122b9
  4122ff:	daa    
  412300:	xchg   edx,eax
  412301:	xchg   ebp,eax
  412302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412303:	sbb    eax,0x9f0f621e
  412308:	mov    WORD PTR [esi],fs
  41230a:	mov    ds:0xabcd7e57,eax
  41230f:	mov    cl,0x3
  412311:	adc    edx,DWORD PTR ds:0x7d03c98a
  412317:	push   edx
  412318:	fwait
  412319:	add    dl,BYTE PTR [edx+0x4b1a8d7a]
  41231f:	jns    0x4122c2
  412321:	push   ss
  412322:	imul   eax,DWORD PTR [edx-0x71760ccd],0x4f
  412329:	test   eax,0xa7d103f8
  41232e:	xor    DWORD PTR [edi-0x3b],esi
  412331:	xor    ah,dh
  412333:	lock es push ebp
  412336:	out    0xf5,al
  412338:	sbb    ecx,DWORD PTR [eax]
  41233a:	mov    al,0xd7
  41233c:	mov    dl,0x5d
  41233e:	add    DWORD PTR [esi],ebx
  412340:	add    al,0xad
  412342:	xlat   BYTE PTR ds:[ebx]
  412343:	xlat   BYTE PTR ds:[ebx]
  412344:	xchg   ebx,eax
  412345:	imul   BYTE PTR [ecx]
  412347:	dec    edi
  412348:	jb     0x41238b
  41234a:	jo     0x4123c1
  41234c:	pop    ecx
  41234d:	rcr    DWORD PTR [ebx+0x67433d07],0xbb
  412354:	dec    eax
  412355:	mov    al,ds:0xbed09255
  41235a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235b:	pop    sp
  41235d:	les    esp,FWORD PTR ds:0xb245e379
  412363:	or     BYTE PTR [edx+0x1a],bh
  412366:	inc    esp
  412367:	or     bl,0x8a
  41236a:	call   0xa8b4b5f7
  41236f:	xor    esp,0xf6b5f610
  412375:	lods   eax,DWORD PTR ds:[esi]
  412376:	test   DWORD PTR [edi],ecx
  412378:	cmp    cl,ch
  41237a:	jg     0x4123f8
  41237c:	(bad)  
  41237d:	aas    
  41237e:	mov    dh,0xc6
  412380:	fnsave [eax-0x1e08f626]
  412386:	mov    eax,0x880020ac
  41238b:	lods   eax,DWORD PTR ds:[esi]
  41238c:	xchg   ecx,eax
  41238d:	in     al,0xfb
  41238f:	xor    eax,0x974c82fa
  412394:	and    al,0xd0
  412396:	rcr    BYTE PTR [esi-0x3c],1
  412399:	push   eax
  41239a:	cmp    al,0x81
  41239c:	daa    
  41239d:	mov    edi,0x70f19459
  4123a2:	mov    ds:0x5672edc2,al
  4123a7:	pop    ds
  4123a8:	outs   dx,BYTE PTR ds:[esi]
  4123a9:	hlt    
  4123aa:	(bad)  
  4123ab:	or     ecx,DWORD PTR [esi+0x5d]
  4123ae:	test   al,0x88
  4123b0:	sbb    DWORD PTR ss:[ecx*1+0x4487f01d],ebp
  4123b8:	push   edx
  4123b9:	xadd   BYTE PTR [eax-0x25],dh
  4123bd:	ret    
  4123be:	push   ecx
  4123bf:	fs loop 0x4123b2
  4123c2:	mov    ebx,0xebb577e4
  4123c7:	fidivr DWORD PTR [eax+0x1a91a108]
  4123cd:	jle    0x412411
  4123cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d0:	and    DWORD PTR [ecx],ecx
  4123d2:	(bad)  
  4123d4:	rol    edx,cl
  4123d6:	outs   dx,BYTE PTR ds:[esi]
  4123d7:	pop    edx
  4123d8:	stc    
  4123d9:	add    dh,0x9e
  4123dc:	push   0xffffffd1
  4123de:	mul    DWORD PTR [esp+esi*8+0x5]
  4123e2:	xchg   esp,eax
  4123e3:	enter  0x96a7,0x72
  4123e7:	jae    0x4123f3
  4123e9:	mov    esp,0x150dcb0d
  4123ee:	hlt    
  4123ef:	or     BYTE PTR [eax+0x2c],ah
  4123f2:	aas    
  4123f3:	pop    esi
  4123f4:	std    
  4123f5:	ja     0x412413
  4123f7:	inc    DWORD PTR [edx]
  4123f9:	hlt    
  4123fa:	xor    esp,DWORD PTR [eax+eax*8]
  4123fd:	xchg   edi,eax
  4123fe:	lahf   
  4123ff:	je     0x412478
  412401:	mov    ah,cl
  412403:	mov    dh,0x7d
  412405:	into   
  412406:	mov    ebp,0x7772f0b9
  41240b:	sbb    cl,0x5e
  41240e:	mov    ch,0x3d
  412410:	sub    DWORD PTR [edx],edx
  412412:	les    edi,FWORD PTR [edi-0x48]
  412415:	aad    0x8f
  412417:	ds push edi
  412419:	popf   
  41241a:	fcomp  DWORD PTR [edi]
  41241c:	sub    DWORD PTR [ecx+0x36],esp
  41241f:	pop    eax
  412420:	repz js 0x412477
  412423:	mov    dl,0xe1
  412425:	xor    esi,DWORD PTR [ebx-0x60]
  412428:	fnstenv [ecx-0x7f]
  41242b:	dec    esi
  41242c:	sbb    BYTE PTR [ebp-0x72],bh
  41242f:	jmp    0xbea24b26
  412434:	mov    WORD PTR [ebx+0x2a035f0a],ss
  41243a:	(bad)  
  41243b:	aad    0x18
  41243d:	mov    edi,0x678394ee
  412442:	ins    DWORD PTR es:[edi],dx
  412443:	ret    0xb5da
  412446:	stos   DWORD PTR es:[edi],eax
  412447:	cmp    edx,DWORD PTR [ecx-0x22bda43b]
  41244d:	pop    ds
  41244e:	cld    
  41244f:	fld    TBYTE PTR [eax]
  412451:	fsub   QWORD PTR [eax]
  412453:	pop    ecx
  412454:	fidiv  WORD PTR [esi+ebx*2-0x361a9312]
  41245b:	loopne 0x41240c
  41245d:	jns    0x412451
  41245f:	cmp    al,0xf0
  412461:	mov    ebx,0x2ca18b5f
  412466:	mov    edx,0x9f577bfd
  41246b:	sbb    edi,DWORD PTR [ebx]
  41246d:	fstp   DWORD PTR cs:[esi]
  412470:	ror    BYTE PTR [ecx],cl
  412472:	mov    cl,0x59
  412474:	jl     0x412487
  412476:	std    
  412477:	dec    esi
  412478:	lods   al,BYTE PTR ds:[esi]
  412479:	push   ebp
  41247a:	mov    cl,0x32
  41247c:	repz cmp BYTE PTR [ecx],al
  41247f:	xchg   esp,eax
  412480:	sub    BYTE PTR [ebp-0x3df21e14],ch
  412486:	lds    ebp,FWORD PTR [eax+0x44]
  412489:	or     BYTE PTR [ebx-0x61],dl
  41248c:	push   ds
  41248d:	test   DWORD PTR [eax],0xd031b403
  412493:	fsubr  QWORD PTR [edx+0x7cff2834]
  412499:	mov    ecx,0x95bf6caa
  41249e:	scas   eax,DWORD PTR es:[edi]
  41249f:	jmp    0xda38:0xead4750d
  4124a6:	retf   0xfc3f
  4124a9:	jecxz  0x4124d7
  4124ab:	div    BYTE PTR [ecx+edx*8-0x2]
  4124af:	out    0xf0,al
  4124b1:	jge    0x412523
  4124b3:	mov    esi,0x115cb1bb
  4124b8:	or     DWORD PTR [ebx-0x46],edx
  4124bb:	movups xmm4,xmm4
  4124be:	aam    0x8
  4124c0:	jle    0x4124c3
  4124c2:	dec    esi
  4124c3:	pop    edi
  4124c4:	leave  
  4124c5:	jp     0x41244d
  4124c7:	in     al,0xe3
  4124c9:	fdivr  DWORD PTR [edi+ebx*4+0x17f573a2]
  4124d0:	xor    BYTE PTR fs:[ecx],bh
  4124d3:	xor    DWORD PTR [ebp-0x73],esp
  4124d6:	stos   BYTE PTR es:[edi],al
  4124d7:	xor    esi,DWORD PTR [ebx]
  4124d9:	dec    ecx
  4124da:	adc    DWORD PTR [ebx-0x73206a6a],ecx
  4124e0:	mov    ebx,DWORD PTR [ebx+0xb]
  4124e3:	mov    ds:0xb1283344,al
  4124e8:	dec    esi
  4124e9:	cmp    eax,0x9aaaf5c2
  4124ee:	(bad)  
  4124ef:	loop   0x412539
  4124f1:	xchg   ebp,eax
  4124f2:	fiadd  WORD PTR [ecx]
  4124f4:	into   
  4124f5:	in     al,0x67
  4124f7:	outs   dx,BYTE PTR ds:[esi]
  4124f8:	sub    DWORD PTR [ecx],0xffffffba
  4124fb:	mov    ecx,0x2fbdd7b3
  412500:	mov    ds:0x8fe4ff54,eax
  412505:	stos   DWORD PTR es:[edi],eax
  412506:	mov    ch,0x88
  412508:	inc    ecx
  412509:	pop    edx
  41250a:	les    ebp,FWORD PTR [ebx]
  41250c:	inc    esi
  41250d:	jb     0x4124bf
  41250f:	push   edi
  412510:	xchg   esi,eax
  412511:	lods   eax,DWORD PTR ds:[esi]
  412512:	clc    
  412513:	popf   
  412514:	jl     0x41255e
  412516:	stc    
  412517:	sbb    BYTE PTR [ebx-0x49],ah
  41251a:	out    dx,al
  41251b:	sbb    BYTE PTR [ecx],dh
  41251d:	adc    BYTE PTR [ecx+0x491aaa0],ch
  412523:	retf   0xac50
  412526:	shr    BYTE PTR [eax+ecx*2],0x8
  41252a:	daa    
  41252b:	jg     0x41259f
  41252d:	test   BYTE PTR [ebp+0x5f747e54],cl
  412533:	pop    ecx
  412534:	push   edx
  412535:	add    al,0x24
  412537:	outs   dx,DWORD PTR ds:[esi]
  412538:	ret    
  412539:	jne    0x4124d5
  41253b:	rcl    ebx,cl
  41253d:	adc    dh,al
  41253f:	mov    gs,WORD PTR [esi+0x8ea53bb]
  412545:	dec    esi
  412546:	or     edi,DWORD PTR [esp+ecx*8]
  412549:	pushf  
  41254a:	pop    esi
  41254c:	pop    es
  41254d:	or     DWORD PTR [ebx+0x1e48c03b],edi
  412553:	sahf   
  412554:	in     eax,dx
  412555:	loop   0x412539
  412557:	xchg   esp,eax
  412558:	jg     0x4125cc
  41255a:	das    
  41255b:	jmp    0x9bea:0x64a4324f
  412562:	shl    edx,0x93
  412565:	inc    eax
  412566:	ret    0xff54
  412569:	jno    0x4124ff
  41256b:	int3   
  41256c:	dec    esi
  41256d:	push   edx
  41256e:	pushf  
  41256f:	mov    cl,0x1b
  412571:	xor    eax,edi
  412573:	div    DWORD PTR [ebp+0x34ae1c59]
  412579:	jne    0x412585
  41257b:	outs   dx,BYTE PTR ds:[esi]
  41257c:	call   0x7b9bfb1c
  412581:	mov    ch,0x8a
  412583:	mov    ebp,0xdc03711e
  412588:	push   ds
  412589:	ss push es
  41258b:	aam    0xbf
  41258d:	xchg   edx,eax
  41258e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258f:	(bad)  
  412590:	cld    
  412591:	push   es
  412592:	or     al,0x59
  412594:	out    dx,al
  412595:	aad    0xe2
  412597:	sbb    DWORD PTR [edi+edx*1-0x32b6a3cc],edi
  41259e:	jne    0x41256c
  4125a0:	mov    ds:0xe77135ee,eax
  4125a5:	daa    
  4125a6:	dec    ebx
  4125a7:	mov    al,ch
  4125a9:	adc    al,0xc2
  4125ab:	sbb    al,al
  4125ad:	xor    eax,0x70b6a4cc
  4125b2:	pusha  
  4125b3:	cmp    BYTE PTR [eax-0x32357dda],0xa8
  4125ba:	cmp    al,0x65
  4125bc:	jae    0x41256b
  4125be:	scas   al,BYTE PTR es:[edi]
  4125bf:	push   ecx
  4125c0:	retf   
  4125c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c2:	into   
  4125c3:	adc    ebp,DWORD PTR [ebx+0xf45d240]
  4125c9:	or     eax,0x3ca68841
  4125ce:	fnsetpm(287 only) 
  4125d0:	lods   eax,DWORD PTR ds:[esi]
  4125d1:	cdq    
  4125d2:	inc    ebp
  4125d3:	imul   DWORD PTR [ebp+0x305bf38d]
  4125d9:	(bad)  
  4125da:	retf   
  4125db:	jmp    0x412634
  4125dd:	push   es
  4125de:	dec    ebp
  4125df:	cs loopne 0x4125c3
  4125e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125e3:	xlat   BYTE PTR ds:[ebx]
  4125e4:	dec    edx
  4125e5:	loope  0x412651
  4125e7:	pop    edx
  4125e8:	jg     0x4125a4
  4125ea:	mov    al,0x19
  4125ec:	loope  0x4125be
  4125ee:	xchg   ecx,eax
  4125ef:	sub    BYTE PTR [edi+edi*8+0x4f],dl
  4125f3:	cmp    BYTE PTR [ecx],al
  4125f5:	and    BYTE PTR [edi-0x5b6e4e72],ch
  4125fb:	jb     0x4125ea
  4125fd:	rol    BYTE PTR [edi*4-0x32c5f0b0],0xc8
  412605:	(bad)  
  412606:	and    al,bh
  412608:	mov    dl,0x8b
  41260a:	lea    ecx,[edx-0x3be618db]
  412610:	cdq    
  412611:	push   es
  412612:	jmp    0x977b:0x73d07eb3
  412619:	fs dec ebx
  41261b:	jmp    0xbd9b:0xb35658e7
  412622:	inc    esi
  412623:	icebp  
  412624:	(bad)  
  412625:	push   ebp
  412626:	in     eax,0x96
  412628:	xchg   BYTE PTR [esi-0x46daea36],cl
  41262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262f:	mov    ebx,0x2e82ddb3
  412634:	xor    ah,cl
  412636:	xor    esp,ebp
  412638:	push   0xd57d571e
  41263d:	sub    ebx,DWORD PTR [ecx+0x73]
  412640:	adc    ebp,DWORD PTR [eax+0x39]
  412643:	out    dx,eax
  412644:	xchg   bh,dl
  412646:	scas   eax,DWORD PTR es:[edi]
  412647:	gs jg  0x41262f
  41264a:	ins    BYTE PTR es:[edi],dx
  41264b:	sbb    bl,BYTE PTR [edi]
  41264d:	pop    edx
  41264e:	out    dx,eax
  41264f:	sbb    dh,0x61
  412652:	scas   al,BYTE PTR es:[edi]
  412653:	int3   
  412654:	mov    al,ds:0x1f2d438c
  412659:	jbe    0x41263d
  41265b:	sti    
  41265c:	adc    DWORD PTR [ecx-0x344b1216],0xffffffa9
  412663:	cmp    ch,BYTE PTR ds:0x11b87023
  412669:	rcr    BYTE PTR [eax-0x455b5f0f],0xd5
  412670:	cmp    edx,DWORD PTR [ecx+0x4b]
  412673:	mov    BYTE PTR [edi],dl
  412675:	shr    DWORD PTR [ebx+0x54],cl
  412678:	inc    ebx
  412679:	jnp    0x41269f
  41267b:	adc    DWORD PTR [edx-0x50],esp
  41267e:	add    BYTE PTR [esi],ah
  412680:	shl    DWORD PTR [edi-0x265e5101],1
  412686:	pop    ebx
  412687:	mov    eax,ds:0xa3d4a818
  41268c:	je     0x41262b
  41268e:	out    dx,al
  41268f:	adc    BYTE PTR [ebx],0x19
  412692:	cmp    eax,0x32146a27
  412697:	stos   DWORD PTR es:[edi],eax
  412698:	or     bl,BYTE PTR [esi]
  41269a:	ror    DWORD PTR [ecx+ecx*4+0x37],1
  41269e:	test   DWORD PTR [edx],esi
  4126a0:	sar    eax,1
  4126a2:	shl    DWORD PTR [eax],1
  4126a4:	sbb    BYTE PTR [ecx-0x6cba30db],al
  4126aa:	jmp    0x89c2bbf8
  4126af:	jl     0x4126ea
  4126b1:	adc    al,0x96
  4126b3:	mov    eax,ds:0xe4a3f4ea
  4126b8:	jne    0x412666
  4126ba:	scas   al,BYTE PTR es:[edi]
  4126bb:	pop    esp
  4126bc:	call   0xf2f6:0xa5f26bbd
  4126c3:	cld    
  4126c4:	jmp    0x4126a8
  4126c6:	cld    
  4126c7:	pop    esp
  4126c8:	sub    BYTE PTR [ecx],cl
  4126ca:	aam    0x92
  4126cc:	cmova  esp,DWORD PTR [ebp+0x13]
  4126d0:	int    0x6b
  4126d2:	push   0x52
  4126d4:	out    dx,eax
  4126d5:	pusha  
  4126d6:	and    DWORD PTR ds:0x11cc3552,edx
  4126dc:	addr16 mov esi,0xc3cf152c
  4126e2:	mov    eax,0x1e67af88
  4126e7:	jbe    0x412714
  4126e9:	sar    BYTE PTR [ebp-0x66],0xb4
  4126ed:	in     al,dx
  4126ee:	and    ecx,DWORD PTR ds:0x52fe3c72
  4126f4:	mov    bh,0xe0
  4126f6:	push   edi
  4126f7:	addr16 jge 0x41272e
  4126fa:	adc    eax,DWORD PTR [esi-0x6b]
  4126fd:	xchg   DWORD PTR [esi],esp
  4126ff:	mov    eax,ds:0xe250a8c3
  412704:	sbb    edx,DWORD PTR [eiz*8-0x16a48c9f]
  41270b:	jecxz  0x412723
  41270d:	outs   dx,BYTE PTR ds:[esi]
  41270e:	mov    dh,0xd1
  412710:	jnp    0x412693
  412712:	xchg   edx,eax
  412713:	cdq    
  412714:	push   ecx
  412715:	clc    
  412716:	in     eax,dx
  412717:	mov    WORD PTR [edx+eiz*1+0x5],es
  41271b:	into   
  41271c:	imul   esp
  41271e:	sub    al,0x7b
  412720:	or     edi,DWORD PTR [ebx]
  412722:	xor    al,0xdb
  412724:	aam    0x79
  412726:	mov    eax,ds:0x9b3c2bf4
  41272b:	loopne 0x4126e9
  41272d:	js     0x412709
  41272f:	or     edx,DWORD PTR [ebp+0x5598c981]
  412735:	cmp    eax,0x7b1800c1
  41273a:	xchg   ebx,eax
  41273b:	int3   
  41273c:	pop    ds
  41273d:	pop    ss
  41273e:	sub    eax,0xd50bad2
  412743:	mov    al,0x0
  412745:	fucom  st(2)
  412747:	add    BYTE PTR [eax*2-0x35ad7c58],bh
  41274e:	cmp    cl,BYTE PTR [ebp-0x10c30a1a]
  412754:	popa   
  412755:	rol    BYTE PTR [eax-0x12881d8b],1
  41275b:	pop    es
  41275c:	les    ebx,FWORD PTR [ebx+0x5c9a9e52]
  412762:	retf   0x91c
  412765:	pop    edi
  412766:	xor    ecx,DWORD PTR [eax+0x4c18d684]
  41276c:	jecxz  0x4127ed
  41276e:	repz mov ah,0xdc
  412771:	inc    esi
  412772:	sub    BYTE PTR [edx-0x6e],ah
  412775:	int    0x55
  412777:	out    dx,eax
  412778:	rcr    BYTE PTR [edx+0x7a],1
  41277b:	std    
  41277c:	nop
  41277d:	in     al,0xbd
  41277f:	jge    0x412785
  412781:	push   eax
  412782:	nop/reserved BYTE PTR [esi]
  412785:	neg    BYTE PTR [eax]
  412787:	sahf   
  412788:	jo     0x4127b5
  41278a:	dec    edx
  41278b:	sub    DWORD PTR [edx+0x2023af1c],0xfffffff0
  412792:	loope  0x4127d5
  412794:	jmp    0xb52f2c40
  412799:	test   BYTE PTR [esi-0x1d598fc1],al
  41279f:	mov    ss,ecx
  4127a1:	sub    BYTE PTR ds:0xd26421f3,bl
  4127a7:	jnp    0x41279b
  4127a9:	xchg   ebx,eax
  4127aa:	cmp    DWORD PTR ds:0xca951728,eax
  4127b0:	push   esi
  4127b1:	or     cl,dh
  4127b3:	push   ss
  4127b4:	push   esp
  4127b5:	jno    0x412777
  4127b7:	inc    ecx
  4127b8:	(bad)  
  4127b9:	cmp    eax,0xdc7c2fb5
  4127be:	pop    eax
  4127bf:	mov    WORD PTR [esi],fs
  4127c1:	mov    ds:0x47eddad5,al
  4127c6:	xor    eax,0x398cbdf8
  4127cb:	arpl   WORD PTR ds:0xb47f8cd4,dx
  4127d1:	xor    DWORD PTR [edx-0x7e071250],ebp
  4127d7:	ja     0x4127f0
  4127d9:	mul    DWORD PTR [edi]
  4127db:	add    ch,al
  4127dd:	push   ebp
  4127de:	pop    es
  4127df:	jns    0x4127c7
  4127e1:	loopne 0x412806
  4127e3:	and    ch,BYTE PTR [ebx+0x44e82b9e]
  4127e9:	dec    ebp
  4127ea:	xor    DWORD PTR [ebx+0x2e978a59],0x5e
  4127f1:	mov    ebp,es
  4127f3:	mov    edx,0x7af0fccb
  4127f8:	adc    eax,DWORD PTR [edi+eax*8]
  4127fb:	retf   0xdcb9
  4127fe:	imul   ebp,DWORD PTR [edi-0x31545a29],0xffffffae
  412805:	and    DWORD PTR [edx-0x58],edx
  412808:	mov    ebp,0x444db197
  41280d:	jnp    0x41281b
  41280f:	xor    dh,BYTE PTR [ebp+esi*1-0x1d0ebb34]
  412816:	or     al,BYTE PTR [esp+edx*2+0x655ce874]
  41281d:	icebp  
  41281e:	mov    esi,0xa73da18c
  412823:	dec    eax
  412824:	(bad)
  412827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412828:	mov    edx,0x9633e08f
  41282d:	cmp    cl,0x0
  412830:	sub    eax,0x66424eb5
  412835:	pop    eax
  412836:	ror    DWORD PTR ds:0x6367d8f6,cl
  41283c:	adc    dh,BYTE PTR [edi-0x1fa098b7]
  412842:	jl     0x4127c5
  412844:	fmul   QWORD PTR [esi-0x9]
  412847:	jb     0x412873
  412849:	pop    es
  41284a:	rcr    BYTE PTR ds:0x54d8a5ce,1
  412850:	shr    edi,0xdd
  412853:	aam    0x1e
  412855:	arpl   sp,cx
  412857:	dec    edi
  412858:	arpl   WORD PTR ds:0x6a0f88f5,bx
  41285e:	ins    DWORD PTR es:[edi],dx
  41285f:	aaa    
  412860:	retf   
  412861:	push   0x33
  412863:	xchg   DWORD PTR [ebx],ebx
  412865:	mov    ds:0xcea5dedb,eax
  41286a:	push   edi
  41286b:	mov    al,0xc1
  41286d:	popf   
  41286e:	les    edx,FWORD PTR [ebx]
  412870:	loope  0x412898
  412872:	push   ds
  412873:	out    dx,al
  412874:	adc    bh,bl
  412876:	std    
  412877:	outs   dx,BYTE PTR ds:[esi]
  412878:	mov    esi,0xfd8eab86
  41287d:	out    dx,al
  41287e:	loop   0x412861
  412880:	xchg   ebx,eax
  412881:	fs push ebp
  412883:	aad    0x7e
  412885:	pop    ebx
  412886:	sub    eax,0x666f7ccf
  41288b:	jp     0x4128db
  41288d:	and    DWORD PTR [edx+0x62417963],0x66
  412894:	test   eax,0x451332d8
  412899:	jle    0x4128b9
  41289b:	lock clc 
  41289d:	ret    0x4f
  4128a0:	pop    edx
  4128a1:	inc    esp
  4128a2:	arpl   WORD PTR [ecx],bp
  4128a4:	movntq QWORD PTR [ebx+esi*1-0x2b],mm2
  4128a9:	push   esp
  4128aa:	fisubr DWORD PTR [ebx+0x6f8eca4c]
  4128b0:	push   0xb55b9252
  4128b5:	xchg   esp,eax
  4128b6:	repnz xor al,0x34
  4128b9:	push   ss
  4128ba:	clc    
  4128bb:	shr    BYTE PTR [ebp+0x4b],cl
  4128be:	not    esi
  4128c0:	push   esp
  4128c1:	imul   edi,edx,0xffffffe6
  4128c4:	mov    edi,0x4f3335bc
  4128c9:	mov    cl,0xd5
  4128cb:	nop
  4128cc:	test   edi,0x1ba0f836
  4128d2:	scas   al,BYTE PTR es:[edi]
  4128d3:	add    esp,DWORD PTR [eax+eiz*4-0x7b2bf002]
  4128da:	mov    al,0xc5
  4128dc:	es push edi
  4128de:	ins    DWORD PTR es:[edi],dx
  4128df:	xchg   edi,eax
  4128e0:	jl     0x4128b7
  4128e2:	pop    eax
  4128e3:	add    eax,esp
  4128e5:	js     0x412887
  4128e7:	mov    ebx,ss
  4128e9:	mov    WORD PTR [edx-0x57],gs
  4128ec:	clc    
  4128ed:	fucomp st(7)
  4128ef:	mov    BYTE PTR [ebx+0x716cf6e1],ch
  4128f5:	inc    esi
  4128f6:	aad    0xaa
  4128f8:	pusha  
  4128f9:	rcl    al,1
  4128fb:	cdq    
  4128fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fd:	stc    
  4128fe:	sub    eax,0x7b449577
  412903:	mov    al,ds:0x888113
  412908:	lods   eax,DWORD PTR ds:[esi]
  412909:	jo     0x4128c0
  41290b:	xor    bl,BYTE PTR [ebp-0x2b2d6cff]
  412911:	xchg   edx,eax
  412912:	xor    al,0x96
  412914:	int3   
  412915:	aaa    
  412916:	sar    BYTE PTR [edx-0x3e],1
  412919:	cmp    al,0x3b
  41291b:	jne    0x41291b
  41291d:	mov    ds:0x3c71b602,eax
  412922:	mov    edi,0xe1074003
  412927:	sbb    edi,DWORD PTR [eax+edi*4+0x241b6e9e]
  41292e:	dec    edi
  41292f:	hlt    
  412930:	mov    dl,BYTE PTR [edx-0x4]
  412933:	inc    BYTE PTR ds:0x6518cbfb
  412939:	into   
  41293a:	(bad)  
  41293b:	fadd   st,st(0)
  41293d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41293e:	add    DWORD PTR [edi],0xffffffa7
  412941:	jl     0x41293b
  412943:	cli    
  412944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412945:	fsub   QWORD PTR [edx+0x5318cadc]
  41294b:	lods   eax,DWORD PTR ds:[esi]
  41294c:	and    eax,0x3e92b845
  412951:	add    ah,BYTE PTR [edx+0x5c]
  412954:	ss push ebx
  412956:	cmp    BYTE PTR [edx],0x41
  412959:	mov    BYTE PTR [esi-0x162e30f1],cl
  41295f:	adc    BYTE PTR [edi-0x9635ace],dh
  412965:	out    0x34,al
  412967:	sbb    esi,DWORD PTR [esi]
  412969:	rol    ecx,cl
  41296b:	adc    al,0xba
  41296d:	ins    BYTE PTR es:[edi],dx
  41296e:	push   edi
  41296f:	jp     0x4128f7
  412971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412972:	call   0x29934cc6
  412977:	xchg   edx,eax
  412978:	clc    
  412979:	jg     0x4128ff
  41297b:	sub    eax,0x22c10ad4
  412980:	test   ebx,ebp
  412982:	and    al,0x67
  412984:	sbb    edx,ebp
  412986:	and    eax,0xacf63410
  41298b:	mov    al,ds:0xcaba7ba3
  412990:	mov    al,ds:0x1e1671b9
  412995:	or     ecx,DWORD PTR [ecx-0x2b8da784]
  41299b:	sub    eax,ebp
  41299d:	iret   
  41299e:	mov    al,ds:0x1a804308
  4129a3:	xchg   edi,eax
  4129a4:	mov    esp,0x3f31f1ec
  4129a9:	shl    bl,cl
  4129ab:	jmp    0x968a8385
  4129b0:	inc    eax
  4129b1:	push   edx
  4129b2:	leave  
  4129b3:	dec    BYTE PTR [edx-0x2a]
  4129b6:	aaa    
  4129b7:	or     eax,0xc0f03f56
  4129bc:	jmp    0x41295e
  4129be:	adc    ebx,DWORD PTR [edi-0x2f]
  4129c1:	int3   
  4129c2:	adc    al,0xd2
  4129c4:	dec    edx
  4129c5:	dec    ch
  4129c7:	(bad)  
  4129c8:	arpl   WORD PTR [edx-0x6ac5c0f0],bp
  4129ce:	jmp    0xd360:0xedd2c147
  4129d5:	repnz gs push edx
  4129d8:	mov    ebp,0xb7eb55b7
  4129dd:	lea    ecx,[edi+0x6c80c746]
  4129e3:	or     DWORD PTR [edi-0x52050cac],esp
  4129e9:	inc    ebp
  4129ea:	pop    edx
  4129eb:	ret    0x6b
  4129ee:	sbb    dh,BYTE PTR [ebp+0x77]
  4129f1:	(bad)  
  4129f2:	fmul   DWORD PTR [ecx]
  4129f4:	mov    esp,edi
  4129f6:	stos   DWORD PTR es:[edi],eax
  4129f7:	pop    es
  4129f8:	inc    edi
  4129f9:	xor    esp,0x9a2ece27
  4129ff:	(bad)  
  412a00:	cld    
  412a01:	jg     0x412a14
  412a03:	sbb    al,0x99
  412a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a06:	imul   esi,ebp,0xffffffe8
  412a09:	xor    BYTE PTR [eax-0x6bc4e78b],al
  412a0f:	jmp    0x5fd3:0x328d7652
  412a16:	rcr    BYTE PTR [ebp-0x53],1
  412a19:	cmc    
  412a1a:	mov    edi,0x2ce43d74
  412a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a20:	cs call 0x258c685f
  412a26:	ja     0x412a0b
  412a28:	push   edx
  412a29:	dec    eax
  412a2a:	xchg   esi,eax
  412a2b:	mov    cl,0x56
  412a2d:	rol    dh,1
  412a2f:	push   0x72
  412a31:	sti    
  412a32:	jns    0x412a5f
  412a34:	mov    dh,0x5c
  412a36:	push   edx
  412a37:	push   es
  412a38:	xor    BYTE PTR [ebx-0x19],0x12
  412a3c:	adc    al,bh
  412a3e:	sub    DWORD PTR [edx],esp
  412a40:	cwde   
  412a41:	jnp    0x412a67
  412a43:	xor    BYTE PTR [edi+0x1376b41c],ah
  412a49:	ret    0x766d
  412a4c:	pop    ss
  412a4d:	lods   al,BYTE PTR ds:[esi]
  412a4e:	out    0x8b,al
  412a50:	and    al,0x49
  412a52:	push   es
  412a53:	mov    ebp,0x64dd8129
  412a58:	aas    
  412a59:	dec    ecx
  412a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5b:	push   ebp
  412a5c:	les    edx,FWORD PTR [ebp+0x1215bce7]
  412a62:	sar    edx,cl
  412a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a65:	mov    ebx,0x956a1058
  412a6a:	clc    
  412a6b:	jecxz  0x412a15
  412a6d:	dec    ebx
  412a6e:	xchg   ebp,eax
  412a6f:	rcl    DWORD PTR [ebp-0x7],cl
  412a72:	dec    edx
  412a73:	idiv   BYTE PTR [ebx]
  412a75:	fcom   QWORD PTR [ebx+0x4b]
  412a78:	inc    DWORD PTR [edi-0x7a245a01]
  412a7e:	leave  
  412a7f:	xor    al,0x3f
  412a81:	ror    DWORD PTR [edx-0x54],cl
  412a84:	pop    edi
  412a85:	jmp    DWORD PTR [esi]
  412a87:	loop   0x412afd
  412a89:	in     al,dx
  412a8a:	and    dh,BYTE PTR [edx+0x27]
  412a8d:	iret   
  412a8e:	es rcl ah,0x5a
  412a92:	aad    0x9e
  412a94:	addr16 popf 
  412a96:	mov    DWORD PTR [eax+eiz*1],0xc266d17e
  412a9d:	outs   dx,BYTE PTR ds:[esi]
  412a9e:	push   es
  412a9f:	inc    ebx
  412aa0:	and    dh,0x7c
  412aa3:	retf   0x30f5
  412aa6:	xchg   BYTE PTR [ecx+eiz*4],ch
  412aa9:	xchg   esi,ebx
  412aab:	ja     0x412a73
  412aad:	cmp    BYTE PTR [edi-0x7b8e9313],bh
  412ab3:	enter  0x79da,0x2c
  412ab7:	and    al,0xf5
  412ab9:	mov    ds:0xc731f906,al
  412abe:	fucom  st(6)
  412ac0:	mov    dl,0x24
  412ac2:	xchg   ebp,eax
  412ac3:	outs   dx,BYTE PTR ds:[esi]
  412ac4:	cmp    eax,esp
  412ac6:	(bad)  
  412ac7:	int3   
  412ac8:	mov    ds:0xdfbe3968,al
  412acd:	mov    esp,0xcd7a3e5c
  412ad2:	jo     0x412b53
  412ad4:	mov    ch,0x8c
  412ad6:	sar    DWORD PTR [ebx-0x9],0x64
  412ada:	pop    es
  412adb:	jle    0x412a78
  412add:	xchg   BYTE PTR [ecx-0xd],bh
  412ae0:	or     al,0xa4
  412ae2:	jle    0x412b2e
  412ae4:	out    0xb0,eax
  412ae6:	cmp    al,0x30
  412ae8:	(bad)  
  412ae9:	out    0x92,al
  412aeb:	mov    DWORD PTR [ebx],0xa4c5b533
  412af1:	inc    esp
  412af2:	imul   eax,DWORD PTR [eax+0xa],0x61769803
  412af9:	arpl   dx,sp
  412afb:	cs aaa 
  412afd:	mov    esi,0xcfe254ce
  412b02:	cwde   
  412b03:	mov    DWORD PTR [esi+eax*4+0x4e7b6f6a],esi
  412b0a:	xor    cl,dl
  412b0c:	in     eax,dx
  412b0d:	inc    dl
  412b0f:	sbb    eax,0xa0fc701a
  412b14:	add    ebp,DWORD PTR [esp+eiz*4+0x31]
  412b18:	xor    DWORD PTR [eax+0x5c],edx
  412b1b:	dec    edx
  412b1c:	inc    ebx
  412b1d:	and    eax,0x944d789e
  412b22:	test   DWORD PTR [edx],esi
  412b24:	jbe    0x412b2c
  412b26:	fld    QWORD PTR [esi]
  412b28:	out    dx,eax
  412b29:	scas   al,BYTE PTR es:[edi]
  412b2a:	jle    0x412ab4
  412b2c:	icebp  
  412b2d:	xor    eax,0x3a4280e9
  412b32:	jo     0x412b70
  412b34:	stos   DWORD PTR es:[edi],eax
  412b35:	push   es
  412b36:	stos   BYTE PTR es:[edi],al
  412b37:	cmc    
  412b38:	imul   esp,DWORD PTR [ebx-0x4a106c04],0x446ad465
  412b42:	js     0x412b37
  412b44:	inc    eax
  412b45:	or     bh,bl
  412b47:	lea    ecx,[ebx]
  412b49:	mov    esi,0xb3a38ff4
  412b4e:	stos   BYTE PTR es:[edi],al
  412b4f:	add    eax,0xaf0f5556
  412b54:	xchg   ebp,eax
  412b55:	hlt    
  412b56:	xchg   ecx,eax
  412b57:	into   
  412b58:	popa   
  412b59:	fidivr DWORD PTR [esi-0x55]
  412b5c:	rol    BYTE PTR [ebx+0x40f9ed85],0x3f
  412b63:	shr    BYTE PTR [ebp+0x6e7772e0],1
  412b69:	sub    eax,0x9ebe7661
  412b6e:	and    al,0x23
  412b70:	sahf   
  412b71:	rol    cl,cl
  412b73:	(bad)  
  412b76:	push   ebp
  412b77:	jmp    0x412bdf
  412b79:	bnd je 0x412b90
  412b7c:	add    BYTE PTR [edi+0x6c019b9c],ah
  412b82:	stos   DWORD PTR es:[edi],eax
  412b83:	out    0x44,eax
  412b85:	cmp    ebx,esp
  412b87:	imul   eax,DWORD PTR [esi],0x615b39d2
  412b8d:	sub    cl,dh
  412b8f:	adc    BYTE PTR [ebp-0x4d7cba37],dl
  412b95:	scas   al,BYTE PTR es:[edi]
  412b96:	das    
  412b97:	push   ecx
  412b98:	dec    edx
  412b99:	xor    al,BYTE PTR [ebx]
  412b9b:	sbb    eax,0xfe7f7af4
  412ba0:	cmp    bl,bh
  412ba2:	cwde   
  412ba3:	aam    0x5c
  412ba5:	dec    eax
  412ba6:	push   es
  412ba7:	xor    eax,eax
  412ba9:	and    eax,0xc3bfa406
  412bae:	mov    ah,0xbb
  412bb0:	leave  
  412bb1:	les    edi,FWORD PTR [ebx-0x4e]
  412bb4:	in     eax,0x56
  412bb6:	adc    BYTE PTR [edx],bh
  412bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb9:	push   ebx
  412bba:	dec    edi
  412bbb:	(bad)  [edi]
  412bbd:	mov    eax,ds:0xa1c3a946
  412bc2:	cmp    ecx,edx
  412bc4:	add    edi,DWORD PTR [edi-0x36776e18]
  412bca:	inc    ebp
  412bcb:	push   ebp
  412bcc:	jbe    0x412bcb
  412bce:	ds push 0xeb5cf1ce
  412bd4:	or     al,0x7
  412bd6:	adc    esi,DWORD PTR [ebx-0x74547a0a]
  412bdc:	test   DWORD PTR ds:[ecx+ebx*8+0x2bc00750],0x38bf9889
  412be8:	mov    edi,0x37edf0b6
  412bed:	ror    al,0xf2
  412bf0:	out    0x54,al
  412bf2:	mov    eax,ds:0x13b8b11d
  412bf7:	adc    eax,0xe2d30b92
  412bfc:	adc    eax,esi
  412bfe:	je     0x412b94
  412c00:	push   0xc3485a9
  412c05:	jbe    0x412c59
  412c07:	int3   
  412c08:	pop    esi
  412c09:	xor    ch,BYTE PTR [eax-0x307ae2e2]
  412c0f:	out    dx,al
  412c10:	jno    0x412bf9
  412c12:	add    eax,0x32c73ff3
  412c17:	push   edx
  412c18:	mov    eax,0xb9375ac7
  412c1d:	mov    dl,0xa2
  412c1f:	dec    ecx
  412c20:	push   ds
  412c21:	inc    eax
  412c22:	ror    bh,0x47
  412c25:	into   
  412c26:	inc    edx
  412c27:	push   ebp
  412c28:	add    ebx,esp
  412c2a:	mov    esi,0x8dfd9d90
  412c2f:	adc    al,0x9
  412c31:	push   edi
  412c32:	fwait
  412c33:	jle    0x412bc8
  412c35:	hlt    
  412c36:	addr16 loopne 0x412c20
  412c39:	pop    edi
  412c3a:	sbb    DWORD PTR [ebx+0x70],eax
  412c3d:	dec    esp
  412c3e:	sbb    DWORD PTR [ecx],esi
  412c40:	rol    ebx,cl
  412c42:	add    BYTE PTR [ebp-0x3d82c03a],ah
  412c48:	xor    eax,0xba4b9243
  412c4d:	lock add ebx,esi
  412c50:	stc    
  412c51:	inc    ebx
  412c52:	sub    eax,0x5c31c0cb
  412c57:	pop    DWORD PTR [ebx-0x6b]
  412c5a:	jmp    0x7ec6499f
  412c5f:	call   0xf731:0xdbfc7213
  412c66:	sbb    dh,dh
  412c68:	and    BYTE PTR [ebp+0x3],bh
  412c6b:	mov    esp,0xc539305d
  412c70:	add    ebx,esp
  412c72:	ss cwde 
  412c74:	iret   
  412c75:	shr    esp,1
  412c77:	inc    edi
  412c78:	rcr    BYTE PTR [ecx],1
  412c7a:	inc    ebp
  412c7b:	mov    WORD PTR ds:0x442f3dba,ds
  412c81:	push   0xffffffbb
  412c83:	jbe    0x412cf6
  412c85:	in     al,dx
  412c86:	clc    
  412c87:	jb     0x412cca
  412c89:	mov    cl,0x6e
  412c8b:	jg     0x412cdf
  412c8d:	mov    edx,0xa1a2f93d
  412c92:	and    bl,0xf3
  412c95:	pop    esi
  412c96:	push   ecx
  412c97:	xor    al,0xaa
  412c99:	imul   ebp,DWORD PTR [eax-0x7d4aee01],0x47
  412ca0:	push   edi
  412ca1:	clc    
  412ca2:	fcmovu st,st(1)
  412ca4:	loope  0x412d1b
  412ca6:	pop    ebx
  412ca7:	loopne 0x412d18
  412ca9:	je     0x412cd0
  412cab:	mov    dl,0x28
  412cad:	jge    0x412cef
  412caf:	iret   
  412cb0:	dec    edi
  412cb1:	sbb    ch,BYTE PTR [esp+ebp*4+0x51b16332]
  412cb8:	dec    esi
  412cb9:	and    DWORD PTR [ebp-0x340ce6b],edi
  412cbf:	mov    ebp,gs
  412cc1:	push   ds
  412cc2:	jge    0x412d1d
  412cc4:	dec    edi
  412cc5:	(bad)  
  412cc6:	or     ch,BYTE PTR [ebp-0x76]
  412cc9:	scas   eax,DWORD PTR es:[edi]
  412cca:	xor    DWORD PTR [edx],ebp
  412ccc:	or     BYTE PTR [edi+0x70122fac],bh
  412cd2:	dec    ecx
  412cd3:	or     dh,ch
  412cd5:	xor    DWORD PTR [ebx],0x2906907e
  412cdb:	cli    
  412cdc:	ins    DWORD PTR es:[edi],dx
  412cdd:	mov    ds:0xed33088c,eax
  412ce2:	pop    eax
  412ce3:	test   DWORD PTR [eax+0x4d59f339],ebp
  412ce9:	fild   DWORD PTR [eax]
  412ceb:	ja     0x412d0a
  412ced:	adc    bh,BYTE PTR [ebp-0x64]
  412cf0:	icebp  
  412cf1:	test   al,0xe5
  412cf3:	cld    
  412cf4:	adc    DWORD PTR ds:0x647db37a,ebp
  412cfa:	fld    QWORD PTR [eax+ebx*2-0x6a]
  412cfe:	jmp    0x8b7c:0x7f92320c
  412d05:	mov    dh,0xdf
  412d07:	inc    ebx
  412d08:	push   es
  412d09:	into   
  412d0a:	cmp    ecx,DWORD PTR [eax+0x64]
  412d0d:	xor    BYTE PTR [esi+0x1e50a475],ah
  412d13:	test   al,0x3d
  412d15:	mov    al,0xc1
  412d17:	(bad)  
  412d18:	push   ebx
  412d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1a:	jecxz  0x412d1b
  412d1c:	jge    0x412cd3
  412d1e:	sti    
  412d1f:	add    BYTE PTR [esi+0x71],bh
  412d22:	dec    ebp
  412d23:	std    
  412d24:	fstp   TBYTE PTR [ebp-0x4c]
  412d27:	lahf   
  412d28:	cmc    
  412d29:	aas    
  412d2a:	call   0x88527d11
  412d2f:	mov    bl,0xc7
  412d31:	into   
  412d32:	hlt    
  412d33:	mov    esp,DWORD PTR [eax+0x146001f0]
  412d39:	ja     0x412cff
  412d3b:	cmp    al,0x68
  412d3d:	out    0x39,eax
  412d3f:	mov    al,ds:0x3d0efb6d
  412d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d45:	out    dx,eax
  412d46:	and    edi,DWORD PTR [ebx]
  412d48:	cli    
  412d49:	jmp    FWORD PTR [ebp-0x1f]
  412d4c:	loop   0x412d02
  412d4e:	test   eax,0x49443f32
  412d53:	out    0xff,al
  412d55:	dec    edx
  412d56:	jns    0x412dc9
  412d58:	push   esp
  412d59:	add    eax,0x299c5123
  412d5e:	sub    BYTE PTR [ebp+0x4e],dl
  412d61:	push   esi
  412d62:	imul   DWORD PTR [eax]
  412d64:	inc    esi
  412d65:	add    BYTE PTR [eax-0x7d7ac48],cl
  412d6b:	mov    al,0x46
  412d6d:	xchg   ebx,eax
  412d6e:	fwait
  412d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d70:	jae    0x412ded
  412d72:	aas    
  412d73:	test   al,0x63
  412d75:	jl     0x412dd2
  412d77:	fild   QWORD PTR [ebp-0x67d9e1cb]
  412d7d:	and    al,0x98
  412d7f:	(bad)  
  412d80:	adc    esi,DWORD PTR [edi*2+0x77609d50]
  412d87:	adc    BYTE PTR [esi*8+0x2ff9e946],ah
  412d8e:	std    
  412d8f:	jb     0x412d6b
  412d91:	and    eax,0x4758a0d7
  412d96:	enter  0x535f,0x27
  412d9a:	xor    esp,DWORD PTR [eax-0x66757018]
  412da0:	(bad)  
  412da2:	mov    esi,0xa5990eee
  412da7:	imul   edx,DWORD PTR ds:0x38792a99,0xd0fbff8b
  412db1:	jmp    0xc7a32cf6
  412db6:	push   0x6d
  412db8:	rol    BYTE PTR [eax+0x4ed6ef8d],cl
  412dbe:	daa    
  412dbf:	adc    DWORD PTR [edx+0x3c],ebx
  412dc2:	call   0xb2dffb89
  412dc7:	test   DWORD PTR [ecx],edi
  412dc9:	xor    DWORD PTR [esi-0x27e74a21],0xfffffff8
  412dd0:	mov    dl,0xb9
  412dd2:	add    esp,esi
  412dd4:	push   ebp
  412dd5:	ins    BYTE PTR es:[edi],dx
  412dd6:	cli    
  412dd7:	cmp    eax,ebp
  412dd9:	cli    
  412dda:	pop    esp
  412ddb:	ss jnp 0x412e41
  412dde:	jecxz  0x412d65
  412de0:	mov    esi,0x3e6b6366
  412de5:	leave  
  412de6:	(bad)  
  412de7:	out    dx,al
  412de8:	fcomp  DWORD PTR [eax-0x1941ee4b]
  412dee:	push   ebp
  412def:	int3   
  412df0:	dec    ebx
  412df1:	sti    
  412df2:	sub    eax,0x59593209
  412df7:	ret    0xa761
  412dfa:	ins    DWORD PTR es:[edi],dx
  412dfb:	sbb    al,0xea
  412dfd:	call   0x9fa5c720
  412e02:	repz es xchg ecx,eax
  412e05:	ffree  st(4)
  412e07:	pop    ebp
  412e08:	inc    ebx
  412e09:	or     DWORD PTR [ebx-0x784a791c],ebp
  412e0f:	das    
  412e10:	(bad)  
  412e11:	scas   eax,DWORD PTR es:[edi]
  412e12:	jns    0x412e5b
  412e14:	sbb    ebx,DWORD PTR [ecx-0x7]
  412e17:	jo     0x412df0
  412e19:	(bad)  
  412e1a:	leave  
  412e1b:	mov    eax,0xecc9ee31
  412e20:	jbe    0x412da7
  412e22:	(bad)  
  412e23:	fisub  DWORD PTR ds:0x12c5a388
  412e29:	mov    esp,0x5ecfd613
  412e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e2f:	push   es
  412e30:	adc    eax,0x3ee7ef20
  412e35:	hlt    
  412e36:	int3   
  412e37:	push   esp
  412e38:	mov    dl,0xc5
  412e3a:	inc    eax
  412e3b:	sub    eax,0x6accae7a
  412e40:	fwait
  412e41:	xor    BYTE PTR [eax-0x1e4873e5],dl
  412e47:	sbb    DWORD PTR [eax],esp
  412e49:	or     eax,0x7f3a0e49
  412e4e:	pop    esp
  412e4f:	lods   al,BYTE PTR ds:[esi]
  412e50:	xchg   esi,eax
  412e51:	icebp  
  412e52:	ds add edi,eax
  412e55:	sbb    bl,BYTE PTR ds:0x5aad6287
  412e5b:	jns    0x412e7d
  412e5d:	test   eax,0x4d124641
  412e62:	pushf  
  412e63:	add    dl,BYTE PTR [edx]
  412e65:	jo     0x412e96
  412e67:	pop    ebx
  412e68:	fiadd  WORD PTR [eax]
  412e6a:	(bad)  
  412e6b:	sbb    DWORD PTR [edx-0x3b1933d7],esp
  412e71:	xor    al,0x63
  412e73:	pop    ecx
  412e74:	and    al,0x10
  412e76:	rcr    DWORD PTR [ecx+0x7eac4452],1
  412e7c:	push   ebp
  412e7d:	inc    edx
  412e7e:	pop    ds
  412e7f:	sub    ecx,ebx
  412e81:	outs   dx,DWORD PTR ds:[esi]
  412e82:	cmp    al,0xdd
  412e84:	sbb    al,BYTE PTR [eax+0x44]
  412e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e88:	cwde   
  412e89:	push   0xb91b01f5
  412e8e:	fsubr  QWORD PTR fs:[esi]
  412e91:	stc    
  412e92:	cmovbe ebp,ecx
  412e95:	or     esi,DWORD PTR [edi+0x24]
  412e98:	jnp    0x412eb9
  412e9a:	xchg   ecx,eax
  412e9b:	jmp    0x412e48
  412e9d:	push   0x24
  412e9f:	pop    ds
  412ea0:	jl     0x412e4f
  412ea2:	ja     0x412e9e
  412ea4:	or     BYTE PTR [esi+0x1f6a88],bl
  412eaa:	mov    dl,0x65
  412eac:	add    BYTE PTR ss:[edx-0x3aca983d],0xc8
  412eb4:	jl     0x412f09
  412eb6:	cld    
  412eb7:	in     al,dx
  412eb8:	ret    
  412eb9:	inc    ebp
  412eba:	pusha  
  412ebb:	jge    0x412e71
  412ebd:	call   0x2270:0xaa1c938b
  412ec4:	pop    edi
  412ec5:	add    BYTE PTR [ebp+0x14],ah
  412ec8:	fcom   st(7)
  412eca:	cmp    bl,al
  412ecc:	loopne 0x412f40
  412ece:	test   ah,0x15
  412ed1:	mov    bl,0xa0
  412ed3:	xchg   edi,eax
  412ed4:	(bad)
  412ed7:	add    DWORD PTR [edx+0x143c65eb],eax
  412edd:	ins    BYTE PTR es:[edi],dx
  412ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edf:	test   BYTE PTR [esi],0x24
  412ee2:	xor    BYTE PTR [ebx+esi*4+0x7c],bh
  412ee6:	ret    
  412ee7:	and    eax,0xb9ec8429
  412eec:	ret    0xb5ab
  412eef:	pushf  
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	pop    ebx
  412ef2:	ins    BYTE PTR es:[edi],dx
  412ef3:	pushf  
  412ef4:	mov    BYTE PTR [edx],dh
  412ef6:	and    eax,0x85414afe
  412efb:	dec    edx
  412efc:	std    
  412efd:	sbb    bh,BYTE PTR [eax]
  412eff:	inc    esi
  412f00:	call   0x8798:0xb178c1f1
  412f07:	scas   al,BYTE PTR es:[edi]
  412f08:	es repz addr16 kmovb esi,k0
  412f0f:	or     bh,BYTE PTR [eax+0x3e]
  412f12:	cmp    ebp,edi
  412f14:	pop    ss
  412f15:	leave  
  412f16:	and    bl,dl
  412f18:	ins    BYTE PTR es:[edi],dx
  412f19:	pop    ebx
  412f1a:	or     DWORD PTR [edi],0x73608033
  412f20:	and    esp,eax
  412f22:	pop    ecx
  412f23:	and    al,0xe
  412f25:	xor    al,0x95
  412f27:	mul    esi
  412f29:	popa   
  412f2a:	int3   
  412f2b:	cld    
  412f2c:	adc    eax,0xe5acbc54
  412f31:	jae    0x412f44
  412f33:	sbb    eax,DWORD PTR [esi-0x22]
  412f36:	gs mov esp,0x13b94e6c
  412f3c:	in     al,dx
  412f3d:	jp     0x412fbd
  412f3f:	pmulhw mm1,QWORD PTR [ecx-0x1f]
  412f43:	loop   0x412fa0
  412f45:	xchg   ecx,eax
  412f46:	cs add ah,0x4b
  412f4a:	or     bl,BYTE PTR [esi+0x18]
  412f4d:	fs stos BYTE PTR es:[edi],al
  412f4f:	lds    esp,FWORD PTR [ebp+edx*4-0x58]
  412f53:	inc    ebp
  412f54:	mov    edx,0xa59df5b0
  412f59:	dec    eax
  412f5a:	cmc    
  412f5b:	pop    eax
  412f5c:	lods   eax,DWORD PTR ds:[esi]
  412f5d:	aas    
  412f5e:	adc    ecx,DWORD PTR [esp+edi*2+0x20]
  412f62:	cs jl  0x412fb2
  412f65:	popf   
  412f66:	mov    eax,ds:0x3bd5612b
  412f6b:	jge    0x412f33
  412f6d:	pop    ds
  412f6e:	ja     0x412f00
  412f70:	(bad)  
  412f72:	sbb    BYTE PTR [edi-0x35],cl
  412f75:	imul   esp,DWORD PTR [edi+0x54ceea45],0xd737755b
  412f7f:	out    dx,al
  412f80:	add    DWORD PTR [ebx-0x17],eax
  412f83:	cmp    eax,0x39c69c95
  412f88:	pusha  
  412f89:	jb     0x412fae
  412f8b:	mov    esp,0xf25adcd3
  412f90:	and    esp,DWORD PTR [ebp-0x7f14d815]
  412f96:	fistp  WORD PTR [edx+eiz*2-0x6eab6ee3]
  412f9d:	idiv   BYTE PTR [ecx-0x351ef879]
  412fa3:	shr    DWORD PTR [edx+0x69],cl
  412fa6:	xor    esi,DWORD PTR [ebp+0x38964e23]
  412fac:	mov    esi,0x7de60ea7
  412fb1:	jl     0x413011
  412fb3:	xchg   esi,eax
  412fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb5:	rcr    BYTE PTR [edi-0x2e],0xb6
  412fb9:	mov    al,ch
  412fbb:	rol    DWORD PTR [esi+edx*2+0x794ed943],cl
  412fc2:	leave  
  412fc3:	es iret 
  412fc5:	xor    al,0x3e
  412fc7:	cwde   
  412fc8:	ins    DWORD PTR es:[edi],dx
  412fc9:	adc    ecx,ebx
  412fcb:	fmul   st(6),st
  412fcd:	nop
  412fce:	popf   
  412fcf:	xchg   ebp,eax
  412fd0:	mov    ah,0x32
  412fd2:	mov    edi,0xd2678b22
  412fd7:	and    DWORD PTR [ebp+0x7f],esp
  412fda:	cmp    eax,0xaa52fd47
  412fdf:	push   es
  412fe0:	lods   eax,DWORD PTR ds:[esi]
  412fe1:	lock inc edx
  412fe3:	mov    edx,0xd59b2487
  412fe8:	mov    eax,0x8a371764
  412fed:	cdq    
  412fee:	dec    edx
  412fef:	pop    ecx
  412ff0:	and    bh,bl
  412ff2:	cdq    
  412ff3:	retf   0x2bbc
  412ff6:	push   ds
  412ff7:	into   
  412ff8:	fistp  WORD PTR [eax+ebp*8-0x54027c0]
  412fff:	js     0x413040
  413001:	lock and al,0x80
  413004:	dec    edx
  413005:	xchg   edx,eax
  413006:	(bad)  
  413007:	pop    edi
  413008:	xchg   esi,eax
  413009:	cli    
  41300a:	std    
  41300b:	adc    al,0x9e
  41300d:	inc    ebp
  41300e:	mov    cl,0x9f
  413010:	or     al,0x9f
  413012:	inc    ebp
  413013:	jmp    0x412fa8
  413015:	aaa    
  413016:	push   0x846a5e60
  41301b:	mov    ebp,DWORD PTR [eax-0x57212808]
  413021:	test   al,0xe
  413023:	sbb    eax,0xdc2a728d
  413028:	sbb    al,0x19
  41302a:	outs   dx,DWORD PTR ds:[esi]
  41302b:	mov    dl,0xec
  41302d:	outs   dx,BYTE PTR ds:[esi]
  41302e:	add    eax,0x6f3b8581
  413033:	xor    esi,DWORD PTR [ebx-0x24]
  413036:	dec    eax
  413037:	jb     0x413051
  413039:	fwait
  41303a:	mov    ebx,DWORD PTR ds:0xc679990d
  413040:	push   ebp
  413041:	cmp    DWORD PTR [ecx+0x62],ebp
  413044:	repz push edx
  413046:	xor    al,0xf3
  413048:	sti    
  413049:	add    al,0x60
  41304b:	xor    DWORD PTR [edx-0x5fbd4f],ebp
  413051:	add    DWORD PTR [eax+0xe],edi
  413054:	stc    
  413055:	call   0xac8b41ba
  41305a:	or     BYTE PTR [ecx+0x7c],cl
  41305d:	xchg   edi,eax
  41305e:	cmp    dl,BYTE PTR [esi-0x4c16305a]
  413064:	dec    ebx
  413065:	sbb    dh,dh
  413067:	jp     0x413051
  413069:	(bad)  
  41306a:	aad    0x83
  41306c:	pop    edx
  41306d:	add    edx,eax
  41306f:	loop   0x413026
  413071:	jmp    0x4130bc
  413073:	xchg   edx,eax
  413074:	(bad)  
  413075:	xor    bl,bh
  413077:	mov    cl,0xa7
  413079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307a:	push   0x53
  41307c:	pop    ebx
  41307d:	imul   esi,DWORD PTR [edx],0x9e48025f
  413083:	and    DWORD PTR [ecx-0x8],esi
  413086:	cmp    eax,0xec8c0390
  41308b:	mov    edx,0xb060cc92
  413090:	mov    gs,WORD PTR [ebx-0xceb3be0]
  413096:	add    DWORD PTR [eax+0x75],esp
  413099:	data16 cmc 
  41309b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41309c:	adc    al,0x74
  41309e:	test   al,cl
  4130a0:	jle    0x413099
  4130a2:	sub    DWORD PTR [ebx-0x375b7d3],ebp
  4130a8:	mov    ebx,0x78e2f8e8
  4130ad:	inc    edx
  4130ae:	int    0x57
  4130b0:	mov    esp,0xd5a3560b
  4130b5:	clc    
  4130b6:	inc    esi
  4130b7:	sub    BYTE PTR [edi-0x58],ch
  4130ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130bb:	inc    edx
  4130bc:	std    
  4130bd:	mov    bl,0xf9
  4130bf:	and    edx,edi
  4130c1:	jp     0x413130
  4130c3:	sub    al,0xbc
  4130c5:	pop    esp
  4130c6:	imul   BYTE PTR [edx+0x1130bfc9]
  4130cc:	push   eax
  4130cd:	scas   al,BYTE PTR es:[edi]
  4130ce:	mov    WORD PTR [ebp-0x2ceeec32],fs
  4130d4:	shl    DWORD PTR [esi-0x68ad746],1
  4130da:	mov    esp,esp
  4130dc:	mov    edx,0x7c6aa2aa
  4130e1:	dec    esp
  4130e2:	pop    ecx
  4130e3:	add    eax,0x507f9034
  4130e8:	iret   
  4130e9:	xor    BYTE PTR ds:0x435f329a,bh
  4130ef:	add    dl,BYTE PTR [ecx-0x7c]
  4130f2:	rcr    DWORD PTR [ecx+0x6d],cl
  4130f5:	add    BYTE PTR [esi+0x701b5d52],cl
  4130fb:	lock pop esp
  4130fd:	clc    
  4130fe:	bnd jns 0x41317c
  413101:	(bad)  
  413102:	pusha  
  413103:	cmp    DWORD PTR [ebx-0x67],eax
  413106:	pop    esi
  413107:	add    ecx,DWORD PTR [edi-0x2]
  41310a:	mov    ecx,0x679e1ef4
  41310f:	jl     0x413170
  413111:	neg    BYTE PTR [edi+ebx*4-0x3d]
  413115:	push   cs
  413116:	adc    eax,0x24dbea8a
  41311b:	mov    ds:0xd95bf0ef,eax
  413120:	test   al,0xf5
  413122:	mul    BYTE PTR [esi-0x273e502e]
  413128:	xor    al,0x61
  41312a:	(bad)  
  41312b:	je     0x413181
  41312d:	xchg   edi,eax
  41312e:	rcl    BYTE PTR [esi],cl
  413130:	push   cs
  413131:	mov    dh,BYTE PTR [edx]
  413133:	push   ecx
  413134:	add    edi,ebp
  413136:	fnstsw WORD PTR [edx+0x2c]
  413139:	sbb    dl,bh
  41313b:	fwait
  41313c:	adc    DWORD PTR [ebp+0x33ac5cc0],0xec056e1f
  413146:	mov    al,ds:0xf37cb316
  41314b:	pop    eax
  41314c:	dec    esp
  41314d:	sbb    eax,0xdf31f55b
  413152:	xor    eax,0xaedc26cb
  413157:	xlat   BYTE PTR ds:[ebx]
  413158:	cmp    BYTE PTR [esi],0x1d
  41315b:	lods   eax,DWORD PTR ds:[esi]
  41315c:	lods   al,BYTE PTR ds:[esi]
  41315d:	iret   
  41315e:	mov    bl,0xa8
  413160:	inc    ebp
  413161:	(bad)  
  413162:	iret   
  413163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413164:	repz les esp,FWORD PTR [edi]
  413167:	dec    eax
  413168:	mov    ebx,0xc4d4be00
  41316d:	xor    BYTE PTR [ebx+0x3e6e3fd3],ah
  413173:	sbb    ebx,esi
  413175:	inc    ebp
  413176:	xchg   ebp,eax
  413177:	xchg   DWORD PTR [ebx+ebp*4-0x59ee3001],ebp
  41317e:	fst    st(2)
  413180:	(bad)  
  413182:	cli    
  413183:	fst    st(6)
  413185:	ret    
  413186:	cmp    al,0xfa
  413188:	cmp    esp,DWORD PTR [ebx+ecx*8+0x42e6fba9]
  41318f:	popa   
  413190:	(bad)  
  413192:	add    dh,BYTE PTR [eax-0x3779d52b]
  413198:	test   al,0xde
  41319a:	lods   eax,DWORD PTR ds:[esi]
  41319b:	ja     0x413184
  41319d:	jecxz  0x4131b7
  41319f:	lahf   
  4131a0:	pop    ebx
  4131a1:	mov    ah,0xf9
  4131a3:	ds inc edx
  4131a5:	std    
  4131a6:	push   cs
  4131a7:	les    ecx,FWORD PTR [esi-0x1]
  4131aa:	sbb    al,0x77
  4131ac:	rol    dl,0x51
  4131af:	mov    ecx,0xfb4f5c4e
  4131b4:	das    
  4131b5:	shl    DWORD PTR [edi],cl
  4131b7:	xor    dl,BYTE PTR ds:0xfc6338e8
  4131bd:	xor    ebx,0xd06dbec2
  4131c3:	repnz sub BYTE PTR [esp+ecx*2],cl
  4131c7:	or     al,0x70
  4131c9:	aaa    
  4131ca:	pop    ebx
  4131cb:	jge    0x413248
  4131cd:	retf   0x764f
  4131d0:	push   ds
  4131d1:	cwde   
  4131d2:	sub    BYTE PTR [edi+eax*8],ah
  4131d5:	mov    WORD PTR es:[eax+0x13cc4140],cs
  4131dc:	ja     0x413252
  4131de:	jg     0x4131de
  4131e0:	in     al,0x2c
  4131e2:	and    al,BYTE PTR fs:[ebx+eax*8]
  4131e6:	test   BYTE PTR [ebx-0x545d0965],ah
  4131ec:	dec    esp
  4131ed:	enter  0x62e4,0x2f
  4131f1:	xor    ch,ah
  4131f3:	addr16 jns 0x413184
  4131f6:	jmp    0x1294a95e
  4131fb:	loopne 0x413273
  4131fd:	leave  
  4131fe:	mov    edx,0xc1c0b6f0
  413203:	adc    DWORD PTR [edi+0x3b],0x5d
  413207:	mov    DWORD PTR ds:0xcd423768,0x68a1c7a9
  413211:	fist   WORD PTR [ecx-0x3215346c]
  413217:	sub    eax,0xfb9bfad2
  41321c:	lea    edi,[ebp-0x397cf438]
  413222:	jmp    0xb65a:0xbc9234c7
  413229:	retf   
  41322a:	fwait
  41322b:	rcr    DWORD PTR [ebx],1
  41322d:	fwait
  41322e:	push   ecx
  41322f:	pop    ebp
  413230:	lock push esp
  413232:	stc    
  413233:	shr    DWORD PTR [eax],1
  413235:	enter  0xd636,0x94
  413239:	mov    fs,WORD PTR [esi-0x60]
  41323c:	dec    edi
  41323d:	and    al,BYTE PTR [ebp-0x255c983f]
  413243:	call   0xee4:0xb4d9d605
  41324a:	mul    al
  41324c:	into   
  41324d:	mov    esi,0x1d5f8331
  413252:	push   ds
  413253:	xchg   ecx,eax
  413254:	imul   ebx,DWORD PTR [edx],0x53b41b11
  41325a:	jnp    0x41322b
  41325c:	std    
  41325d:	add    al,0x32
  41325f:	and    DWORD PTR [eax-0x11],0xb94f07e1
  413266:	push   ecx
  413267:	mov    BYTE PTR [ecx],dh
  413269:	cmp    edi,edx
  41326b:	jo     0x4132ab
  41326d:	jno    0x41327f
  41326f:	pop    ecx
  413270:	scas   eax,DWORD PTR es:[edi]
  413271:	mov    eax,DWORD PTR [ebx]
  413273:	repz je 0x4132df
  413276:	pushf  
  413277:	(bad)  
  413278:	pop    edx
  413279:	push   eax
  41327a:	cmp    DWORD PTR [esi],0x24
  41327d:	stos   BYTE PTR es:[edi],al
  41327e:	(bad)  
  41327f:	cmp    DWORD PTR [ebx-0x252d58de],eax
  413285:	fld    TBYTE PTR [esi]
  413287:	push   0x2bdda07c
  41328c:	test   DWORD PTR [eax-0x55],ebp
  41328f:	imul   BYTE PTR [edx-0x49364abc]
  413295:	popf   
  413296:	sti    
  413297:	fimul  DWORD PTR [eax+eiz*2]
  41329a:	xor    BYTE PTR [ebp-0x94b44fb],ah
  4132a0:	imul   ecx,esi,0xffffffde
  4132a3:	hlt    
  4132a4:	and    eax,0x9cecee61
  4132a9:	pop    ebx
  4132aa:	dec    edi
  4132ab:	adc    ah,BYTE PTR [esp+edx*4+0x3a1b2443]
  4132b2:	xor    eax,0x667c494d
  4132b7:	xor    eax,0xef7815b4
  4132bc:	push   ds
  4132bd:	es lock mov cl,0x7c
  4132c1:	adc    al,0x8
  4132c3:	mov    esp,0x5bab5624
  4132c8:	ins    DWORD PTR es:[edi],dx
  4132c9:	sbb    BYTE PTR [esp+ebx*2],bl
  4132cc:	js     0x413320
  4132ce:	adc    esi,DWORD PTR [ecx+0x11]
  4132d1:	mov    ebx,DWORD PTR [ecx]
  4132d3:	push   eax
  4132d4:	(bad)  
  4132d5:	out    0x41,eax
  4132d7:	push   eax
  4132d8:	pop    ecx
  4132d9:	pusha  
  4132da:	fidivr DWORD PTR [edi]
  4132dc:	adc    DWORD PTR [edx+ecx*8+0x38],0xffffff90
  4132e1:	pop    ds
  4132e2:	push   edx
  4132e3:	in     al,0x2a
  4132e5:	jb     0x4132b3
  4132e7:	jns    0x413360
  4132e9:	dec    edx
  4132ea:	retf   
  4132eb:	(bad)  
  4132ee:	cmc    
  4132ef:	mov    cl,0x5f
  4132f1:	lea    ebx,[ecx]
  4132f3:	fdiv   DWORD PTR [eax]
  4132f5:	dec    edx
  4132f6:	test   BYTE PTR [edx+0x1a],0xf3
  4132fa:	mov    eax,ds:0x6a2dcdda
  4132ff:	pushf  
  413300:	jg     0x413297
  413302:	mov    ds:0xed920fd7,eax
  413307:	dec    eax
  413308:	hlt    
  413309:	or     BYTE PTR [eax+esi*1-0x71930429],dh
  413310:	xor    eax,0xbc845ac1
  413315:	inc    ecx
  413316:	dec    esi
  413317:	gs add bh,BYTE PTR fs:[ecx-0x1e]
  41331c:	pop    ecx
  41331d:	inc    ecx
  41331e:	pop    ds
  41331f:	es sub eax,0x68f2e31d
  413325:	pop    ecx
  413326:	nop
  413327:	stos   DWORD PTR es:[edi],eax
  413328:	xchg   edx,eax
  413329:	xchg   BYTE PTR [ebx+0x5b],cl
  41332c:	pop    ebp
  41332d:	mov    esi,eax
  41332f:	add    eax,0x8563f491
  413334:	jne    0x413380
  413336:	fwait
  413337:	pushaw 
  413339:	adc    al,0x31
  41333b:	imul   edx,edx,0x7fe12084
  413341:	(bad)  
  413342:	inc    cl
  413344:	in     eax,dx
  413345:	sub    BYTE PTR [edx+edx*4-0xbe1e16e],dh
  41334c:	ja     0x4132ce
  41334e:	ss jl  0x413392
  413351:	add    BYTE PTR [edx-0x2128307e],0xbd
  413358:	xlat   BYTE PTR ds:[ebx]
  413359:	stos   DWORD PTR es:[edi],eax
  41335a:	outs   dx,DWORD PTR ds:[esi]
  41335b:	mov    ecx,0x418a295c
  413360:	pop    ebp
  413361:	out    dx,eax
  413362:	mov    WORD PTR [edi+0x61],es
  413365:	pop    ecx
  413366:	mov    cl,0x9
  413368:	pop    edx
  413369:	outs   dx,BYTE PTR ds:[esi]
  41336a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41336b:	mov    ebx,0x2c59fc63
  413370:	push   ebp
  413371:	sbb    esi,DWORD PTR [edx]
  413373:	push   0x74
  413375:	dec    edi
  413376:	cmp    DWORD PTR [ebx-0x74eeed0e],ebp
  41337c:	pop    ss
  41337d:	pop    esi
  41337e:	mov    cl,0xda
  413380:	adc    ebp,DWORD PTR ds:0x4e32e7fa
  413386:	sub    al,0xdb
  413388:	shr    BYTE PTR [ebx+0x39],0x6e
  41338c:	stc    
  41338d:	rol    DWORD PTR [ebx+0x32],cl
  413390:	les    eax,FWORD PTR [ebp+0x3b]
  413393:	ret    
  413394:	inc    ebp
  413395:	xchg   esp,eax
  413396:	xor    esp,esp
  413398:	clc    
  413399:	js     0x4133ad
  41339b:	je     0x4133b6
  41339d:	lock gs aam 0xde
  4133a1:	cmp    al,0xec
  4133a3:	cwde   
  4133a4:	sub    al,0x7
  4133a6:	enter  0x3d8a,0x60
  4133aa:	mov    ah,0xac
  4133ac:	je     0x413387
  4133ae:	leave  
  4133af:	add    ebx,DWORD PTR [eax]
  4133b1:	pop    ebp
  4133b2:	scas   al,BYTE PTR es:[edi]
  4133b3:	cli    
  4133b4:	js     0x413410
  4133b6:	cdq    
  4133b7:	aaa    
  4133b8:	sti    
  4133b9:	dec    esi
  4133ba:	mov    bl,0x6a
  4133bc:	fwait
  4133bd:	mov    ah,0xf6
  4133bf:	(bad)
  4133c2:	push   ecx
  4133c3:	mov    DWORD PTR [edx],ebp
  4133c5:	sti    
  4133c6:	adc    al,0xf3
  4133c8:	adc    edi,DWORD PTR [ebp-0x34]
  4133cb:	retf   
  4133cc:	sbb    eax,0xc3ee4783
  4133d1:	pop    esp
  4133d2:	xchg   ecx,eax
  4133d3:	hlt    
  4133d4:	cmp    DWORD PTR [edx+0x55],edi
  4133d7:	push   esi
  4133d8:	sbb    al,0x31
  4133da:	cmp    BYTE PTR [ebx],cl
  4133dc:	dec    edi
  4133dd:	sub    ch,BYTE PTR [ebx]
  4133df:	mov    al,ch
  4133e1:	aaa    
  4133e2:	pop    ss
  4133e3:	(bad)  
  4133e4:	(bad)  
  4133e5:	stc    
  4133e6:	ror    DWORD PTR [esi],0xd2
  4133e9:	stos   BYTE PTR es:[edi],al
  4133ea:	dec    ebx
  4133eb:	fistp  WORD PTR [ecx]
  4133ed:	repnz mov dl,0x39
  4133f0:	add    BYTE PTR fs:[eax],bh
  4133f3:	inc    esi
  4133f4:	jg     0x413389
  4133f6:	inc    ecx
  4133f7:	stos   DWORD PTR es:[edi],eax
  4133f8:	xor    DWORD PTR [ecx-0x7e],ebp
  4133fb:	daa    
  4133fc:	cmp    DWORD PTR [eax],edx
  4133fe:	sbb    eax,0x4b6e222a
  413403:	xchg   edx,eax
  413404:	push   esp
  413405:	arpl   WORD PTR [ebx+ebp*1],sp
  413408:	mov    al,ds:0x8b3281c3
  41340d:	cli    
  41340e:	cli    
  41340f:	fsubr  QWORD PTR [eax+0x7b]
  413412:	scas   eax,DWORD PTR es:[edi]
  413413:	out    0x63,al
  413415:	mov    ecx,0x6b51bc9
  41341a:	jecxz  0x4133c5
  41341c:	fidiv  DWORD PTR [ecx+0x6e7ae667]
  413422:	dec    ebx
  413423:	data16 xor al,0x91
  413426:	data16 adc dl,BYTE PTR [ebp+0x176f5601]
  41342d:	out    0x26,al
  41342f:	or     eax,0x589de660
  413434:	in     eax,0x8
  413436:	and    al,0x3d
  413438:	and    ecx,DWORD PTR [edi+0x39]
  41343b:	xchg   DWORD PTR [esi],ebx
  41343d:	jg     0x4133c6
  41343f:	std    
  413440:	jg     0x4133dd
  413442:	add    bh,BYTE PTR [eax+0xb7053]
  413448:	std    
  413449:	cmc    
  41344a:	sub    al,0xb5
  41344c:	scas   al,BYTE PTR es:[edi]
  41344d:	inc    eax
  41344e:	cmp    al,ch
  413450:	sub    al,0xa9
  413452:	nop
  413453:	push   ss
  413454:	push   esp
  413455:	sbb    ch,bh
  413457:	in     eax,dx
  413458:	xchg   edx,eax
  413459:	cdq    
  41345a:	and    dh,BYTE PTR [eax+0x6f45bbf9]
  413460:	ret    
  413461:	nop
  413462:	push   ecx
  413463:	stos   BYTE PTR es:[edi],al
  413464:	push   ds
  413465:	fs dec edx
  413467:	sahf   
  413468:	outs   dx,DWORD PTR ds:[esi]
  413469:	stc    
  41346a:	jne    0x41348b
  41346c:	fcmovnbe st,st(6)
  41346e:	mov    al,0x42
  413470:	or     dh,cl
  413472:	sub    bl,BYTE PTR [eax]
  413474:	je     0x413499
  413476:	and    ebp,ebx
  413478:	leave  
  413479:	jmp    FWORD PTR [edx]
  41347b:	adc    DWORD PTR [edi-0x2c],ebx
  41347e:	outs   dx,BYTE PTR ds:[esi]
  41347f:	mov    ch,bl
  413481:	and    al,0x36
  413483:	add    ecx,DWORD PTR [edx+0x13]
  413486:	cwde   
  413487:	dec    ebp
  413488:	imul   ecx,edx,0x6a
  41348b:	mov    ah,0xc3
  41348d:	(bad)  
  413490:	and    DWORD PTR [ebp+edx*1+0x7e4ce2b6],esp
  413497:	test   al,0x4c
  413499:	lods   eax,DWORD PTR ds:[esi]
  41349a:	inc    eax
  41349b:	stc    
  41349c:	mov    BYTE PTR [ecx+0x269cca67],ah
  4134a2:	dec    sp
  4134a4:	add    eax,0x99c077b5
  4134a9:	aas    
  4134aa:	adc    esp,DWORD PTR [edx-0x54cfee3d]
  4134b0:	jb     0x4134b8
  4134b2:	lods   al,BYTE PTR ds:[esi]
  4134b3:	jmp    DWORD PTR [esp+ebp*1+0x6e]
  4134b7:	ins    DWORD PTR es:[edi],dx
  4134b8:	push   ss
  4134b9:	add    eax,0x4399b162
  4134be:	or     BYTE PTR [ebx+0x5aa74c8d],dl
  4134c4:	out    dx,eax
  4134c5:	mov    bh,0x4c
  4134c7:	add    eax,DWORD PTR [esp+edx*4-0x7d]
  4134cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134cc:	lods   eax,DWORD PTR ds:[esi]
  4134cd:	pop    es
  4134ce:	xchg   esp,eax
  4134cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d0:	mov    ecx,0x4878ee81
  4134d5:	push   edi
  4134d6:	jae    0x413461
  4134d8:	and    bl,bl
  4134da:	and    esp,ebx
  4134dc:	out    0xe3,al
  4134de:	stc    
  4134df:	lea    esp,[ecx]
  4134e1:	add    dh,BYTE PTR [esi-0x71]
  4134e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e5:	mov    BYTE PTR [edi+ebp*8-0x4ee947fc],0x0
  4134ed:	xor    bh,BYTE PTR [ebp+ebx*1+0x1bba1b14]
  4134f4:	jecxz  0x4134c9
  4134f6:	xor    ch,dh
  4134f8:	fcomp  QWORD PTR [ebx-0x47158f83]
  4134fe:	sbb    BYTE PTR [eax+ecx*1],ah
  413501:	fadd   QWORD PTR [ebx+0x7]
  413504:	call   0x9e92864a
  413509:	retf   0x7c1f
  41350c:	xchg   ah,dl
  41350e:	data16 mov ds,WORD PTR [eax+0x776634c4]
  413515:	ror    BYTE PTR [eax+0x24],0xd7
  413519:	fdivr  QWORD PTR es:[ebx]
  41351c:	int    0xff
  41351e:	in     eax,0x6f
  413520:	int3   
  413521:	adc    eax,0xe8df9739
  413526:	loopne 0x413562
  413528:	call   0xf049:0xd42ea119
  41352f:	fs cmp eax,0x287af82f
  413535:	xor    bh,dh
  413537:	xchg   esi,eax
  413538:	pop    edi
  413539:	cli    
  41353a:	or     ebx,DWORD PTR [edi-0x1e]
  41353d:	and    BYTE PTR [edi-0xc],dl
  413540:	dec    ebx
  413541:	push   ebp
  413542:	jmp    0xa7ab9029
  413547:	dec    ecx
  413548:	sbb    ecx,DWORD PTR [esp+eiz*4-0x6cd04962]
  41354f:	cmp    ebp,DWORD PTR [esi]
  413551:	or     al,0xe4
  413553:	push   edi
  413554:	mov    ch,0xcc
  413556:	jmp    0xcaab:0x3837cbd5
  41355d:	add    BYTE PTR [eax-0x12],bh
  413560:	pop    ebp
  413561:	and    DWORD PTR [edx],ebx
  413563:	mov    dh,0x45
  413565:	loope  0x41353c
  413567:	pop    eax
  413568:	jno    0x4134fc
  41356a:	fsub   QWORD PTR [esi+0x2c]
  41356d:	int3   
  41356e:	ficom  DWORD PTR ss:[ebp-0x18]
  413572:	sbb    BYTE PTR [edx+0x4e986e5f],0xdc
  413579:	add    DWORD PTR [ebp+0x11abe38e],0xda7eb493
  413583:	mov    ah,0x5e
  413585:	(bad)  
  413586:	push   ds
  413587:	pusha  
  413588:	pop    esi
  413589:	jecxz  0x4135e5
  41358b:	std    
  41358c:	dec    ebx
  41358d:	dec    ecx
  41358e:	call   0xb31a0609
  413593:	repz adc ebp,DWORD PTR [edx+eiz*4-0x7a726fa4]
  41359b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359c:	push   eax
  41359d:	and    edi,DWORD PTR [ecx]
  41359f:	dec    eax
  4135a0:	stos   BYTE PTR es:[edi],al
  4135a1:	push   0x1866b595
  4135a6:	sbb    bh,BYTE PTR [ebx]
  4135a8:	push   edi
  4135a9:	ja     0x41352f
  4135ab:	mov    eax,0xa8407056
  4135b0:	mov    al,ds:0x231aad1e
  4135b5:	in     al,0x69
  4135b7:	xlat   BYTE PTR ds:[ebx]
  4135b8:	fcom   DWORD PTR [ebx-0x3fe489f]
  4135be:	data16 icebp 
  4135c0:	sub    cl,BYTE PTR [ebp+0x27e634d6]
  4135c6:	push   eax
  4135c7:	lock inc ebx
  4135c9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4135cb:	inc    eax
  4135cc:	xor    dh,dl
  4135ce:	jp     0x4135d2
  4135d0:	inc    ebx
  4135d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d2:	inc    eax
  4135d3:	imul   DWORD PTR [eax-0x521b587e]
  4135d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135da:	and    cl,BYTE PTR [esi+ecx*1]
  4135dd:	imul   ebx,DWORD PTR [eax+0x30b7c0fa],0xffffffa6
  4135e4:	arpl   dx,si
  4135e6:	fisub  DWORD PTR [edx+ecx*2]
  4135e9:	pop    ecx
  4135ea:	inc    esi
  4135eb:	test   eax,ecx
  4135ed:	jb     0x4135bd
  4135ef:	jo     0x413623
  4135f1:	dec    ebp
  4135f2:	shl    BYTE PTR [ebx+ecx*1+0x2b],0xd8
  4135f7:	mov    edi,0xa1a3c17a
  4135fc:	pop    edx
  4135fd:	pop    edx
  4135fe:	jle    0x41365a
  413600:	addr16 out dx,al
  413602:	cli    
  413603:	mul    BYTE PTR [ecx+0x19]
  413606:	sti    
  413607:	or     BYTE PTR [esi+0x7fdfc700],bl
  41360d:	enter  0x2e22,0xb3
  413611:	loopne 0x41361c
  413613:	loop   0x413661
  413615:	int    0xd6
  413617:	push   esi
  413618:	mov    ah,0xcc
  41361a:	sti    
  41361b:	mov    DWORD PTR [eax],esp
  41361d:	pop    es
  41361e:	pusha  
  41361f:	mov    ecx,0x86933286
  413624:	neg    DWORD PTR ds:0x2952737a
  41362a:	push   ecx
  41362b:	mov    dl,0x0
  41362d:	adc    BYTE PTR ds:[edx],dl
  413630:	scas   eax,DWORD PTR es:[edi]
  413631:	dec    esi
  413632:	cmp    BYTE PTR [esp+eax*1-0x41],0x3
  413637:	and    BYTE PTR [edx],bh
  413639:	adc    dl,cl
  41363b:	popf   
  41363c:	push   eax
  41363d:	inc    edi
  41363e:	inc    ebp
  41363f:	sub    BYTE PTR [eax+esi*8+0x5346c008],ah
  413646:	lods   eax,DWORD PTR ds:[esi]
  413647:	cdq    
  413648:	mov    WORD PTR [eax-0x5037cfe2],cs
  41364e:	mov    al,ds:0xcb960cb9
  413653:	test   al,0x83
  413655:	ficom  DWORD PTR [eax-0x9]
  413658:	mov    ebp,DWORD PTR [esi-0x59]
  41365b:	ds enter 0x557,0x43
  413660:	xor    eax,0xbb343887
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	inc    edx
  413667:	pop    ebx
  413668:	test   DWORD PTR [ebx+esi*2],edi
  41366b:	jo     0x413631
  41366d:	xor    BYTE PTR [ebp-0x60],dh
  413670:	pop    ecx
  413671:	push   bp
  413673:	out    dx,al
  413674:	fsubr  st(2),st
  413676:	in     al,dx
  413677:	cmp    eax,0x61594117
  41367c:	stos   BYTE PTR es:[edi],al
  41367d:	jmp    0x4136af
  41367f:	xchg   BYTE PTR [eax],ah
  413681:	idiv   ebp
  413683:	mov    ds:0x29886526,eax
  413688:	data16 fidivr DWORD PTR [edx]
  41368b:	(bad)  
  41368c:	fsubr  DWORD PTR [ecx-0x4c]
  41368f:	xchg   al,ah
  413691:	and    ch,BYTE PTR [esi+0x1df0af50]
  413697:	pushf  
  413698:	leave  
  413699:	cmc    
  41369a:	sbb    BYTE PTR [eax+0x16],cl
  41369d:	jp     0x41362f
  41369f:	jne    0x41362b
  4136a1:	jnp    0x4136ea
  4136a3:	mov    al,ds:0xe0c95a3f
  4136a8:	ror    BYTE PTR [ebp-0x43],cl
  4136ab:	inc    eax
  4136ac:	test   eax,0x8c5758c9
  4136b1:	fild   WORD PTR [edi+ebp*8-0x6]
  4136b5:	stc    
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	adc    edi,DWORD PTR [ebx+0x42]
  4136ba:	mov    ds:0x6d3504ef,al
  4136bf:	inc    ecx
  4136c0:	mov    cl,0x6
  4136c2:	cmp    eax,0xd5afdbf1
  4136c7:	xor    eax,0xeac26703
  4136cc:	push   0xab8268d4
  4136d1:	(bad)  
  4136d2:	jl     0x413701
  4136d4:	push   0x44
  4136d6:	push   ss
  4136d7:	mov    esp,0x84b62dcc
  4136dc:	gs jp  0x4136bf
  4136df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e0:	out    dx,al
  4136e1:	mov    bl,0x93
  4136e3:	add    eax,0xd268a025
  4136e8:	mov    cl,0xaa
  4136ea:	sbb    ch,bl
  4136ec:	jl     0x41367f
  4136ee:	nop
  4136ef:	mov    eax,ds:0x1d72f9ff
  4136f4:	push   0x3f
  4136f6:	jns    0x413686
  4136f8:	loopne 0x4136fc
  4136fa:	test   eax,0x3d43c156
  4136ff:	mov    eax,0x4aed1cc9
  413704:	jmp    0xdc9d:0xdd0e1525
  41370b:	cld    
  41370c:	mov    edx,0x498e3eef
  413711:	jno    0x41369c
  413713:	pop    ebp
  413714:	add    DWORD PTR [eax+0x2308707],ebx
  41371a:	cs aam 0x93
  41371d:	xchg   edi,eax
  41371e:	out    0xb5,al
  413720:	imul   ebx,DWORD PTR [esi+0x27088fcd],0xffffffea
  413727:	mov    BYTE PTR [ecx],bl
  413729:	(bad)  
  41372a:	mov    DWORD PTR [edi+0x44],edi
  41372d:	fiadd  DWORD PTR [eax-0x56c4bd85]
  413733:	add    DWORD PTR [esi],ebx
  413735:	sub    DWORD PTR ds:0x4b7d5f9d,ebx
  41373b:	mov    es,eax
  41373d:	push   edi
  41373e:	xor    eax,0x37c832e7
  413743:	jmp    0x406:0x24c72539
  41374a:	cmp    al,0xf
  41374c:	ins    BYTE PTR es:[edi],dx
  41374d:	lock xchg esi,eax
  41374f:	push   0x66b06004
  413754:	xchg   ecx,eax
  413755:	jo     0x41374b
  413757:	xor    eax,0xe133772a
  41375c:	mov    eax,ds:0xec8b7f30
  413761:	out    0x7e,eax
  413763:	mov    al,ds:0x203542d3
  413768:	pop    eax
  413769:	mov    ds:0xda198f2e,eax
  41376e:	dec    edi
  41376f:	lods   al,BYTE PTR ds:[esi]
  413770:	lds    ecx,FWORD PTR es:[ecx+0x149ab718]
  413777:	stos   DWORD PTR es:[edi],eax
  413778:	adc    edx,esi
  41377a:	xchg   ebx,eax
  41377b:	js     0x41370f
  41377d:	leave  
  41377e:	nop
  41377f:	rcr    BYTE PTR [edi-0x4d],1
  413782:	bound  esi,QWORD PTR [ebx]
  413784:	test   al,0xe5
  413786:	push   edi
  413787:	jb     0x413713
  413789:	nop
  41378a:	mov    WORD PTR [ebp-0x25595057],di
  413791:	in     al,dx
  413792:	mov    bl,0xe2
  413794:	xchg   edx,eax
  413795:	aaa    
  413796:	jns    0x41372e
  413798:	in     al,0xbf
  41379a:	loope  0x4137b4
  41379c:	pop    ebp
  41379d:	(bad)  
  41379e:	pop    ebx
  41379f:	rol    DWORD PTR [edi+0x2a],0xa6
  4137a3:	push   0xffffff91
  4137a5:	sbb    DWORD PTR [ecx],edx
  4137a7:	shl    BYTE PTR [ecx+0x113fb42f],1
  4137ad:	cli    
  4137ae:	mov    esi,0xa085140e
  4137b3:	stos   DWORD PTR es:[edi],eax
  4137b4:	push   ecx
  4137b5:	in     al,0x9d
  4137b7:	jo     0x413786
  4137b9:	dec    ebx
  4137ba:	jg     0x41380e
  4137bc:	popa   
  4137bd:	mov    ecx,0x1cdea545
  4137c2:	das    
  4137c3:	scas   eax,DWORD PTR es:[edi]
  4137c4:	loopne 0x413816
  4137c6:	stos   DWORD PTR es:[edi],eax
  4137c7:	dec    ebx
  4137c8:	cmp    ecx,eax
  4137ca:	aaa    
  4137cb:	add    cl,bh
  4137cd:	mov    ds:0xb5fcc4f1,eax
  4137d2:	mov    edi,0x72beb99f
  4137d7:	call   0x10465f3c
  4137dc:	dec    ebx
  4137dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137de:	push   esp
  4137df:	xor    edi,DWORD PTR [edx+0x56]
  4137e2:	xor    ebp,DWORD PTR [ebp*2-0x5cf12f97]
  4137e9:	mov    ebp,0x5d5ddb87
  4137ee:	mov    cl,0x88
  4137f0:	test   eax,0xbc52796c
  4137f5:	stos   BYTE PTR es:[edi],al
  4137f6:	les    ecx,FWORD PTR [edi-0x19]
  4137f9:	dec    ecx
  4137fa:	xor    eax,eax
  4137fc:	cmp    BYTE PTR [ebp-0x27],bl
  4137ff:	mov    al,ds:0xb52696cf
  413804:	jmp    0x413814
  413806:	cs stos BYTE PTR es:[edi],al
  413808:	ror    al,1
  41380a:	rcl    ecx,cl
  41380c:	(bad)  
  41380d:	sub    BYTE PTR [esi-0x51],bh
  413810:	mov    DWORD PTR [esi-0x33de5e9b],ebx
  413816:	and    DWORD PTR [eax+ecx*8-0x5a5a3d8],ebp
  41381d:	mov    es,WORD PTR [ebx+eiz*4+0x72]
  413821:	sub    BYTE PTR [edi],bh
  413823:	mov    BYTE PTR [esi],dh
  413825:	aad    0xac
  413827:	xchg   BYTE PTR [esi],bl
  413829:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41382b:	pop    es
  41382c:	dec    ax
  41382e:	jne    0x41388e
  413830:	mov    ds:0xb4467ef1,eax
  413835:	ret    
  413836:	enter  0xe9ad,0x75
  41383a:	mov    ecx,0xe902c68e
  41383f:	enter  0xe4e,0x4d
  413843:	jl     0x413844
  413845:	inc    ebx
  413846:	mov    ah,0x7f
  413848:	test   BYTE PTR [edi-0x24],dl
  41384b:	xchg   esi,eax
  41384c:	inc    ebp
  41384d:	or     edi,DWORD PTR [eax-0x65619f21]
  413853:	lods   al,BYTE PTR ds:[esi]
  413854:	call   0xa0df:0xf1be7ce5
  41385b:	pop    edi
  41385c:	aas    
  41385d:	js     0x413885
  41385f:	pop    ss
  413860:	sbb    eax,0x3976124c
  413865:	rcr    BYTE PTR [edi],1
  413867:	repz icebp 
  413869:	retf   
  41386a:	cld    
  41386b:	fistp  QWORD PTR [esi+0x3d]
  41386e:	(bad)  [esi-0x64]
  413871:	fcom   st(3)
  413873:	cmp    DWORD PTR [eax],edi
  413875:	xor    dl,BYTE PTR [edx]
  413877:	repz mov edi,0xb916c8f4
  41387d:	inc    ebx
  41387e:	xor    ah,ah
  413880:	aam    0x3
  413882:	sahf   
  413883:	mov    ebp,ss
  413885:	sbb    cl,0xa7
  413888:	fisubr WORD PTR ds:0x6f5ff2d2
  41388e:	ja     0x413888
  413890:	es mov edi,eax
  413893:	xchg   ebp,eax
  413894:	ins    BYTE PTR es:[edi],dx
  413895:	mov    eax,0x8553fedf
  41389a:	int    0xef
  41389c:	mov    ebp,0x1a17d7fd
  4138a1:	mov    ecx,0xf8bb3942
  4138a6:	mov    edx,0xe64d256e
  4138ab:	(bad)  
  4138ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ad:	sub    edi,0x10
  4138b0:	dec    edi
  4138b1:	mov    eax,0x5e44479
  4138b6:	push   ss
  4138b7:	btc    DWORD PTR [esi-0x74c52378],eax
  4138be:	cld    
  4138bf:	pop    ss
  4138c0:	addr16 hlt 
  4138c2:	pop    esi
  4138c3:	mov    ebx,0xcc83a7d4
  4138c8:	mov    dl,0x5e
  4138ca:	sbb    eax,0x28bbb31c
  4138cf:	fld    TBYTE PTR [eax-0x51]
  4138d2:	push   ss
  4138d3:	adc    DWORD PTR [ebp+0x2b],ecx
  4138d6:	sub    al,0x9b
  4138d8:	xor    ebx,edx
  4138da:	mov    esp,0x493687b1
  4138df:	loopne 0x413955
  4138e1:	sbb    BYTE PTR [edx+0x40],cl
  4138e4:	(bad)  
  4138e5:	xchg   esi,eax
  4138e6:	aaa    
  4138e7:	mov    BYTE PTR [eax],ah
  4138e9:	ds popf 
  4138eb:	and    esi,DWORD PTR [edi+ebp*2+0x2aa2fa5a]
  4138f2:	mov    cl,0x7c
  4138f4:	cwde   
  4138f5:	mov    ch,0xc2
  4138f7:	lea    edx,ds:0xac092778
  4138fd:	jo     0x413937
  4138ff:	les    esi,FWORD PTR [esi-0xc30468f]
  413905:	aaa    
  413906:	add    esp,DWORD PTR [ebp+0x28]
  413909:	scas   eax,DWORD PTR es:[edi]
  41390a:	push   edx
  41390b:	jnp    0x4138e5
  41390d:	dec    edx
  41390e:	mov    al,ds:0xcebbc433
  413913:	in     al,dx
  413914:	pushf  
  413915:	push   es
  413916:	inc    edi
  413917:	ret    
  413918:	rcl    DWORD PTR [ebx+0x33],cl
  41391b:	xor    dl,BYTE PTR [edx]
  41391d:	push   0x7470867d
  413922:	fsin   
  413924:	xchg   esi,eax
  413925:	mov    bl,cl
  413927:	pop    ss
  413928:	inc    ecx
  413929:	stos   BYTE PTR es:[edi],al
  41392a:	and    BYTE PTR [ecx],0x1a
  41392d:	add    DWORD PTR [esi+esi*2+0x73],eax
  413931:	and    BYTE PTR ds:0x562fd1bb,bl
  413937:	cmp    al,0x6a
  413939:	and    al,0xcf
  41393b:	xchg   esp,eax
  41393c:	fild   DWORD PTR [ecx-0xf]
  41393f:	mov    ds:0xb5238231,al
  413944:	and    BYTE PTR [edi+edx*8+0x14],ah
  413948:	jl     0x413935
  41394a:	sti    
  41394b:	mov    bh,0xe7
  41394d:	or     edx,eax
  41394f:	xor    ch,BYTE PTR cs:[ebp+eax*4-0xd]
  413954:	jge    0x4139c0
  413956:	ret    0xa6a
  413959:	jge    0x4139c6
  41395b:	jecxz  0x4139af
  41395d:	mov    edx,esp
  41395f:	jle    0x413987
  413961:	mov    edi,0xe1885ea
  413966:	(bad)  
  413967:	cli    
  413968:	scas   eax,DWORD PTR es:[edi]
  413969:	sti    
  41396a:	mov    dh,0xed
  41396c:	add    esi,edx
  41396e:	pop    ds
  41396f:	daa    
  413970:	push   ecx
  413971:	mov    DWORD PTR [esi+eax*2],ecx
  413974:	xchg   esi,eax
  413975:	add    edx,DWORD PTR ds:[eax-0x37b7bf54]
  41397c:	mov    esi,DWORD PTR [esi-0x38]
  41397f:	jecxz  0x413925
  413981:	sbb    BYTE PTR [eax+eiz*8+0x29],dl
  413985:	mov    eax,0x2a8fe440
  41398a:	nop
  41398b:	pop    edi
  41398c:	adc    DWORD PTR [esi+0x21],ebx
  41398f:	mov    dh,0x32
  413991:	cld    
  413992:	push   cs
  413993:	out    0x15,al
  413995:	(bad)  
  413996:	pusha  
  413997:	aas    
  413998:	es mov bh,0xf2
  41399b:	hlt    
  41399c:	cmp    eax,0xeecf93b
  4139a1:	iret   
  4139a2:	lahf   
  4139a3:	sti    
  4139a4:	push   es
  4139a5:	push   0x3847d190
  4139aa:	sbb    esi,DWORD PTR [ebp-0x67]
  4139ad:	dec    ebx
  4139ae:	sbb    BYTE PTR [eax-0x7c],bl
  4139b1:	or     BYTE PTR [edi-0x31],bh
  4139b4:	imul   edx,DWORD PTR [edi+0x523fc025],0x5e
  4139bb:	in     al,dx
  4139bc:	std    
  4139bd:	test   DWORD PTR [ecx+0x7],0xb270d17c
  4139c4:	cli    
  4139c5:	in     al,0xb5
  4139c7:	cmp    esi,DWORD PTR [ebx]
  4139c9:	lds    eax,FWORD PTR [eax-0x57618953]
  4139cf:	into   
  4139d0:	fisubr WORD PTR [eax]
  4139d2:	push   0x4814eb4d
  4139d7:	mov    ebx,0x38ae8ac
  4139dc:	call   0xf0bb:0xd393ff4a
  4139e3:	(bad)  
  4139e4:	mov    ds:0x49d761a7,al
  4139ea:	pop    edx
  4139eb:	ins    DWORD PTR es:[edi],dx
  4139ec:	inc    ebp
  4139ed:	nop
  4139ee:	call   0xf93b:0x5436c927
  4139f5:	jne    0x413a1f
  4139f7:	xchg   ecx,eax
  4139f8:	(bad)  
  4139f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139fa:	dec    ebp
  4139fb:	dec    edi
  4139fc:	jmp    DWORD PTR [esi]
  4139fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ff:	push   esi
  413a00:	ins    BYTE PTR es:[edi],dx
  413a01:	aaa    
  413a02:	mov    al,cl
  413a04:	and    al,0x5d
  413a06:	loope  0x413a72
  413a08:	(bad)  
  413a09:	out    0x73,al
  413a0b:	pop    ebp
  413a0c:	push   0x4f07ebdf
  413a11:	adc    dh,BYTE PTR [ebp-0x1e]
  413a14:	(bad)  
  413a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a16:	addr16 jmp 0x305c:0x4ab71291
  413a1e:	mov    ebp,0x6372ddc8
  413a23:	test   BYTE PTR [ecx+esi*8],cl
  413a26:	jge    0x4139bc
  413a28:	ja     0x413a58
  413a2a:	cs adc eax,0x52b838ec
  413a30:	lock dec ebp
  413a32:	iret   
  413a33:	loop   0x4139f3
  413a35:	sbb    al,0x41
  413a37:	xlat   BYTE PTR ds:[ebx]
  413a38:	sbb    BYTE PTR [edi-0x6a368c6f],0xb7
  413a3f:	pop    eax
  413a40:	cmp    eax,0x86844fd1
  413a45:	retf   0x93a1
  413a48:	lds    esi,FWORD PTR [eax+0x6]
  413a4b:	jbe    0x4139fb
  413a4d:	jo     0x4139de
  413a4f:	cmp    dh,BYTE PTR [edx-0x76]
  413a52:	jmp    0x413aa0
  413a54:	mov    esp,0x25ab5225
  413a59:	rol    DWORD PTR [ebx+ebx*1+0x2cab1097],0x6e
  413a61:	loope  0x413a40
  413a63:	sbb    al,al
  413a65:	aam    0x46
  413a67:	adc    al,0xb
  413a69:	in     al,0x37
  413a6b:	sbb    eax,0xd121ad09
  413a70:	(bad)  
  413a71:	repnz pop esi
  413a73:	les    ebp,FWORD PTR [ebx+0x60e3f2ce]
  413a79:	push   eax
  413a7a:	push   esp
  413a7b:	jp     0x413a24
  413a7d:	adc    al,0x38
  413a7f:	(bad)  
  413a80:	jo     0x413ae7
  413a82:	and    eax,0xe7c21a16
  413a87:	dec    ebp
  413a88:	sbb    ebp,DWORD PTR [eax-0x72]
  413a8b:	adc    eax,0xc3a361ef
  413a90:	(bad)  
  413a91:	or     al,0xb0
  413a93:	cmp    eax,0x1f27db54
  413a98:	call   0x21f0:0xc89a2072
  413a9f:	sbb    bl,BYTE PTR [ecx]
  413aa1:	xchg   edx,eax
  413aa2:	pop    ss
  413aa3:	pop    edx
  413aa4:	dec    ebp
  413aa5:	mov    esi,esi
  413aa7:	add    al,0x0
  413aa9:	or     eax,0xe1931004
  413aae:	pop    esi
  413aaf:	cmp    al,0xce
  413ab1:	adc    al,0xe
  413ab3:	loope  0x413b2e
  413ab5:	push   edi
  413ab6:	data16 clc 
  413ab8:	mov    ebp,fs
  413aba:	js     0x413b15
  413abc:	lds    ecx,FWORD PTR [ebx]
  413abe:	or     bh,BYTE PTR [edi]
  413ac0:	dec    esp
  413ac1:	retf   
  413ac2:	push   es
  413ac3:	jmp    0x9578:0xf3af83d
  413aca:	or     BYTE PTR [eax+0x1d],al
  413acd:	rol    esi,0x6a
  413ad0:	and    BYTE PTR [ebp+0x49],bh
  413ad3:	stos   BYTE PTR es:[edi],al
  413ad4:	jge    0x413af2
  413ad6:	cli    
  413ad7:	pop    edx
  413ad8:	cmp    BYTE PTR [ebx-0xc],ch
  413adb:	scas   al,BYTE PTR es:[edi]
  413adc:	mov    BYTE PTR [ebx+0x70],ah
  413adf:	jmp    0x413ad4
  413ae1:	lahf   
  413ae2:	adc    eax,0xfb3bd735
  413ae7:	test   al,ch
  413ae9:	cmc    
  413aea:	dec    ebp
  413aeb:	sbb    ah,BYTE PTR [edi-0x21a15681]
  413af1:	popa   
  413af2:	nop
  413af3:	or     eax,0x225b8216
  413af8:	dec    esp
  413af9:	ins    BYTE PTR es:[edi],dx
  413afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413afb:	sbb    bh,BYTE PTR [edx]
  413afd:	imul   ebp,DWORD PTR ds:0x5ffdac85,0xffffff9c
  413b04:	scas   eax,DWORD PTR es:[di]
  413b06:	mov    ch,0x8c
  413b08:	adc    esp,DWORD PTR [esi-0x9]
  413b0b:	test   DWORD PTR [ebx-0x29f3de9f],esp
  413b11:	repz sbb BYTE PTR [esi+0x7a74b0f5],ch
  413b18:	(bad)  
  413b1a:	stos   BYTE PTR es:[edi],al
  413b1b:	inc    ebx
  413b1c:	cmp    al,0x23
  413b1e:	arpl   WORD PTR [ecx-0x77],bp
  413b21:	mov    esi,0x10b272a9
  413b26:	mov    eax,ds:0xd43832d9
  413b2b:	dec    ebx
  413b2c:	jne    0x413b78
  413b2e:	in     eax,dx
  413b2f:	mov    eax,ds:0x97684339
  413b34:	sahf   
  413b35:	pop    ebx
  413b36:	or     DWORD PTR [ecx-0x1a3f3f4a],ecx
  413b3c:	ins    BYTE PTR es:[edi],dx
  413b3d:	addr16 dec ecx
  413b3f:	xchg   ecx,eax
  413b40:	pop    ebp
  413b41:	(bad)  
  413b42:	adc    bl,bh
  413b44:	sub    BYTE PTR [esi-0x58f6fdd],al
  413b4a:	xor    dh,BYTE PTR [edi]
  413b4c:	loopne 0x413ae8
  413b4e:	jns    0x413b1e
  413b50:	(bad)
  413b54:	xchg   ebp,eax
  413b55:	imul   ebp,DWORD PTR [edi],0xb9919ca5
  413b5b:	shl    DWORD PTR [edi+edi*4+0x60],cl
  413b5f:	fsubr  DWORD PTR [edi]
  413b61:	push   ebp
  413b62:	sbb    al,0x9a
  413b64:	imul   ecx,DWORD PTR [edx],0xffffffbc
  413b67:	and    BYTE PTR [ebx],dl
  413b69:	jo     0x413b0f
  413b6b:	(bad)  
  413b6c:	loopne 0x413bdb
  413b6e:	mov    dh,0x64
  413b70:	jge    0x413b40
  413b72:	cmp    ebx,DWORD PTR [eax+0x4]
  413b75:	jmp    0x269a:0x77d161de
  413b7c:	fbstp  TBYTE PTR [esi-0x7dcf7398]
  413b82:	push   es
  413b83:	adc    al,0xc1
  413b85:	sbb    eax,0x9ce1204
  413b8a:	mov    bh,0x28
  413b8d:	jle    0x413bf9
  413b8f:	lea    edx,[esp+edx*8-0x6c]
  413b93:	ins    DWORD PTR es:[edi],dx
  413b94:	test   eax,0x58298e3b
  413b99:	hlt    
  413b9a:	icebp  
  413b9b:	inc    ecx
  413b9c:	inc    ebp
  413b9d:	cwde   
  413b9e:	aas    
  413b9f:	mov    BYTE PTR [ebx],cl
  413ba1:	retf   0x2fb2
  413ba4:	cdq    
  413ba5:	fcmovne st,st(7)
  413ba7:	mov    ch,0xc1
  413ba9:	add    DWORD PTR [eax-0x65],eax
  413bac:	sbb    BYTE PTR ss:[eax-0x1061b6e8],bl
  413bb3:	push   esi
  413bb4:	jmp    0x7a449401
  413bb9:	rcr    DWORD PTR [eax+0x78],1
  413bbc:	xchg   DWORD PTR [edx],ecx
  413bbe:	cwde   
  413bbf:	cmp    BYTE PTR [eax+0x3dcd2777],bh
  413bc5:	enter  0x36f8,0xb7
  413bc9:	mov    dh,0xb4
  413bcb:	pop    ebx
  413bcc:	ja     0x413c0b
  413bce:	not    ebp
  413bd0:	push   ebx
  413bd1:	ja     0x413c1e
  413bd3:	sahf   
  413bd4:	aas    
  413bd5:	and    eax,0x663b61e6
  413bda:	push   es
  413bdb:	jge    0x413c2d
  413bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bde:	popa   
  413bdf:	inc    ebp
  413be0:	ja     0x413b9b
  413be2:	pop    edx
  413be3:	test   DWORD PTR ds:0x63522d0b,ebx
  413be9:	mov    dl,0xd
  413beb:	jl     0x413be4
  413bed:	loopne 0x413c1b
  413bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf0:	xor    eax,0x5282eaba
  413bf5:	movd   DWORD PTR [edx],mm4
  413bf8:	xor    eax,DWORD PTR [ebx]
  413bfa:	pop    esp
  413bfb:	ins    BYTE PTR es:[edi],dx
  413bfc:	mov    eax,0x34c04e69
  413c01:	push   eax
  413c02:	add    edi,DWORD PTR [eax-0x18]
  413c05:	xor    al,0xca
  413c07:	in     al,dx
  413c08:	pop    es
  413c09:	jnp    0x413c4c
  413c0b:	sti    
  413c0c:	pop    es
  413c0d:	inc    edx
  413c0e:	and    BYTE PTR [ecx+esi*8+0x30e9252d],dl
  413c15:	pop    ebp
  413c16:	xor    bl,BYTE PTR [ebx+0x5f]
  413c19:	mov    dl,0xf2
  413c1b:	cmp    cl,BYTE PTR [esi-0x6b02ad45]
  413c21:	ins    BYTE PTR es:[edi],dx
  413c22:	ss mov bh,0x72
  413c25:	leave  
  413c26:	imul   ebx,DWORD PTR [esi+0x479c2fea],0xffffffe7
  413c2d:	mov    al,0xf5
  413c2f:	test   BYTE PTR ss:[ecx-0x1c],dl
  413c33:	xchg   ebp,eax
  413c34:	lods   eax,DWORD PTR ds:[esi]
  413c35:	or     eax,0xb4dc2d4d
  413c3a:	inc    ebp
  413c3b:	lods   eax,DWORD PTR ds:[esi]
  413c3c:	inc    esp
  413c3d:	loopne 0x413c14
  413c3f:	push   edx
  413c40:	jmp    DWORD PTR [esi]
  413c42:	cmp    eax,0x16e97150
  413c47:	cs jbe 0x413c41
  413c4a:	sub    bh,BYTE PTR [eax-0x6c]
  413c4d:	or     al,0xc8
  413c4f:	dec    ebp
  413c50:	lock push esi
  413c52:	arpl   WORD PTR [ebx+ebp*2-0x4e],cx
  413c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c57:	mov    edi,0x902d7935
  413c5c:	add    eax,DWORD PTR [esi+0x26967980]
  413c62:	add    eax,DWORD PTR [ebx-0x781a526f]
  413c68:	push   ds
  413c69:	in     al,0xa3
  413c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c6c:	jb     0x413c11
  413c6e:	mov    ebp,DWORD PTR [ebx]
  413c70:	ja     0x413c79
  413c72:	sub    al,0x93
  413c74:	retf   
  413c75:	jmp    0x208743b7
  413c7a:	fisttp DWORD PTR [edx+ebx*8-0x2fbc16a9]
  413c81:	cmp    eax,0xc7707700
  413c86:	dec    DWORD PTR [ebx]
  413c88:	addr16 or eax,0x4036fe56
  413c8e:	pop    edx
  413c8f:	getsec 
  413c91:	add    BYTE PTR [edx-0x30],al
  413c94:	shl    DWORD PTR [esi],1
  413c96:	out    0x72,al
  413c98:	mov    DWORD PTR [esi-0x4637b7e5],edi
  413c9e:	in     eax,dx
  413c9f:	mov    ecx,0x880db7b7
  413ca4:	jae    0x413c6e
  413ca6:	mov    eax,ds:0x391be9f0
  413cab:	mov    dh,0x1c
  413cad:	mov    al,ds:0x2261a8ca
  413cb2:	adc    eax,0xb928c32b
  413cb7:	shl    BYTE PTR [ebp+0x17326ef4],0xab
  413cbe:	fisub  WORD PTR [edx]
  413cc0:	jbe    0x413cb0
  413cc2:	jb     0x413d30
  413cc4:	iret   
  413cc5:	les    esi,FWORD PTR [eax]
  413cc7:	jno    0x413cee
  413cc9:	pop    ds
  413cca:	dec    esi
  413ccb:	xchg   ebx,esp
  413ccd:	fdivr  DWORD PTR [eax]
  413ccf:	test   al,0xc8
  413cd1:	xchg   edx,eax
  413cd2:	stos   BYTE PTR es:[edi],al
  413cd3:	popa   
  413cd4:	aas    
  413cd5:	fst    DWORD PTR [edx+0x72]
  413cd8:	adc    DWORD PTR [edx-0xb5d2b7c],edi
  413cde:	sbb    dh,BYTE PTR [ebx]
  413ce0:	dec    eax
  413ce1:	jae    0x413cba
  413ce3:	in     al,dx
  413ce4:	adc    edx,DWORD PTR [esp+0x1f6ea8d5]
  413ceb:	pop    esi
  413cec:	jnp    0x413c80
  413cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cef:	fidiv  DWORD PTR [ecx+0x32b58d81]
  413cf5:	int    0xd8
  413cf7:	inc    esi
  413cf8:	mov    ds:0xc89a81c7,eax
  413cfd:	jo     0x413d49
  413cff:	pop    edi
  413d00:	sbb    cl,BYTE PTR [ebp-0x31]
  413d03:	ror    esp,cl
  413d05:	mov    ah,0xe8
  413d07:	push   ds
  413d08:	and    al,0xb8
  413d0a:	scas   eax,DWORD PTR es:[edi]
  413d0b:	mov    WORD PTR [ebp-0x3],ss
  413d0e:	xchg   ebp,eax
  413d0f:	(bad)  
  413d10:	call   DWORD PTR [edi-0x3c36b969]
  413d16:	into   
  413d17:	pop    ebp
  413d18:	pop    ecx
  413d19:	push   0x1a
  413d1b:	aam    0xdc
  413d1d:	hlt    
  413d1e:	wrmsr  
  413d20:	cli    
  413d21:	lock xchg ecx,eax
  413d23:	shl    ebp,0xf5
  413d26:	push   0x5b19d69
  413d2b:	mov    al,0xd
  413d2d:	loope  0x413d9c
  413d2f:	mov    ds:0x2a692588,eax
  413d34:	xor    bl,BYTE PTR [edi-0x3e248b2f]
  413d3a:	jo     0x413cd5
  413d3c:	out    0xc2,al
  413d3e:	out    0xcb,eax
  413d40:	add    DWORD PTR [ebx+0x61],ecx
  413d43:	push   esp
  413d44:	add    esi,DWORD PTR [edi+0x534d6f18]
  413d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d4b:	loop   0x413d5c
  413d4d:	pop    edi
  413d4e:	ret    0x443e
  413d51:	loop   0x413d87
  413d53:	pusha  
  413d54:	add    al,0x3a
  413d56:	mov    cs,WORD PTR [esi+0x26]
  413d59:	(bad)  
  413d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5b:	mov    ecx,edi
  413d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d5e:	or     ecx,DWORD PTR [ebx+esi*8]
  413d61:	repnz lods al,BYTE PTR ds:[esi]
  413d63:	stc    
  413d64:	sub    cl,al
  413d66:	sahf   
  413d67:	sbb    DWORD PTR [edx-0x6c],ecx
  413d6a:	or     BYTE PTR [eax],bl
  413d6c:	xlat   BYTE PTR ds:[ebx]
  413d6d:	jp     0x413cfa
  413d6f:	call   0x1a0d:0xd334701
  413d76:	push   0x62
  413d78:	sbb    al,0x32
  413d7a:	jns    0x413d0e
  413d7c:	imul   esi,DWORD PTR [esi+0x27],0xffffffe1
  413d80:	or     esp,DWORD PTR ds:0x2a9446b0
  413d86:	add    al,0xca
  413d88:	ret    
  413d89:	cmp    BYTE PTR [esi-0x2357b8ff],0x3a
  413d90:	fcmovb st,st(4)
  413d92:	adc    esi,eax
  413d94:	or     eax,0x21021568
  413d99:	mov    ecx,0xf3df27bb
  413d9e:	inc    esi
  413d9f:	enter  0x4406,0x2a
  413da3:	lock ins DWORD PTR es:[edi],dx
  413da5:	sub    esi,DWORD PTR [edi]
  413da7:	dec    ebx
  413da8:	ret    0x9f4
  413dab:	cmp    al,0xb5
  413dad:	pushf  
  413dae:	lods   eax,DWORD PTR ds:[esi]
  413daf:	mov    ah,0xbe
  413db1:	leave  
  413db2:	sub    DWORD PTR [edx-0x3c46711f],0xf67777fd
  413dbc:	loop   0x413e0c
  413dbe:	js     0x413e34
  413dc0:	mov    cl,0xbb
  413dc2:	and    al,0x67
  413dc4:	lods   eax,DWORD PTR ds:[esi]
  413dc5:	outs   dx,DWORD PTR ds:[esi]
  413dc6:	into   
  413dc7:	dec    ebp
  413dc8:	xor    ch,BYTE PTR [edx+0x414c794c]
  413dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dcf:	retf   0x6c30
  413dd2:	cmp    DWORD PTR [eax+ecx*8-0x1a7de355],0x44
  413dda:	sti    
  413ddb:	xchg   ebx,eax
  413ddc:	js     0x413daf
  413dde:	dec    edi
  413ddf:	inc    esi
  413de0:	or     al,0x9f
  413de2:	pusha  
  413de3:	test   eax,0x173f5aad
  413de8:	ret    0x6325
  413deb:	mov    esp,0xc162dabe
  413df0:	aam    0xee
  413df2:	adc    edx,edi
  413df4:	mov    eax,0x7c595c98
  413df9:	or     BYTE PTR [esi-0x50],ch
  413dfc:	jnp    0x413e72
  413dfe:	or     DWORD PTR [eax-0x5],eax
  413e01:	jmp    0xf879a495
  413e06:	je     0x413df1
  413e08:	dec    esp
  413e09:	cmp    eax,0xc8f89b21
  413e0e:	jns    0x413e3b
  413e10:	push   ecx
  413e11:	xchg   ebx,eax
  413e12:	in     al,dx
  413e13:	(bad)  
  413e14:	jne    0x413e78
  413e16:	ret    
  413e17:	push   edi
  413e18:	cmp    eax,0x6ef06c31
  413e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1e:	mov    eax,ds:0xac38d6ff
  413e23:	repnz dec esp
  413e25:	xor    al,BYTE PTR [ecx-0x47466958]
  413e2b:	pop    edi
  413e2c:	xchg   edi,eax
  413e2d:	or     cl,ch
  413e2f:	push   cs
  413e30:	sub    ch,cl
  413e32:	outs   dx,BYTE PTR ds:[esi]
  413e33:	push   ecx
  413e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e35:	add    BYTE PTR [ebx+edx*2+0x30],0xaf
  413e3a:	sbb    bh,BYTE PTR [eax]
  413e3c:	mov    dh,0x7b
  413e3e:	cmp    al,0xc7
  413e40:	inc    ecx
  413e41:	jle    0x413e26
  413e43:	or     eax,0x1440b13
  413e48:	loop   0x413e3e
  413e4a:	mov    ebp,0x15e868cc
  413e4f:	repz jae 0x413e93
  413e52:	dec    ecx
  413e53:	sub    DWORD PTR [ebx],ecx
  413e55:	mov    ch,0xb
  413e57:	rcr    DWORD PTR [esi],cl
  413e59:	rcr    bl,cl
  413e5b:	cmp    eax,edx
  413e5d:	dec    ebp
  413e5e:	jne    0x413e27
  413e60:	pop    ds
  413e61:	jbe    0x413df8
  413e63:	ret    
  413e64:	or     al,0x84
  413e66:	ja     0x413edf
  413e68:	jns    0x413e52
  413e6a:	sbb    dl,BYTE PTR [edi+0x3fe0700c]
  413e70:	jmp    0x2dd2:0xe9ebc12f
  413e77:	and    esp,edx
  413e79:	pop    es
  413e7a:	dec    edx
  413e7b:	lds    ebx,FWORD PTR [esi-0x65]
  413e7e:	fwait
  413e7f:	dec    ebx
  413e80:	loopne 0x413edc
  413e82:	out    dx,al
  413e83:	hlt    
  413e84:	jg     0x413ec7
  413e86:	xchg   BYTE PTR [edx-0x28001a99],ah
  413e8c:	push   es
  413e8d:	pusha  
  413e8e:	(bad)  
  413e8f:	dec    ecx
  413e90:	mov    BYTE PTR [edx],dl
  413e92:	add    DWORD PTR [ebx],esi
  413e94:	xor    ch,BYTE PTR [edx-0x3fd873d3]
  413e9a:	inc    edx
  413e9b:	xchg   esi,eax
  413e9c:	std    
  413e9d:	dec    cl
  413e9f:	pop    esp
  413ea0:	test   edx,eax
  413ea2:	or     BYTE PTR [esi+0x2a],al
  413ea5:	mov    edi,0x3d9abf8a
  413eaa:	shl    cl,1
  413eac:	xor    eax,ebx
  413eae:	fldl2e 
  413eb0:	aas    
  413eb1:	add    DWORD PTR [ecx+ebp*1-0x717abfb2],ebp
  413eb8:	sysenter 
  413eba:	sub    DWORD PTR [esi],edi
  413ebc:	jo     0x413e74
  413ebe:	or     BYTE PTR [edx],ch
  413ec0:	mov    edx,0xfb27581d
  413ec5:	sub    al,0x45
  413ec7:	out    dx,eax
  413ec8:	cmc    
  413ec9:	ds dec ebp
  413ecb:	es into 
  413ecd:	mov    ds:0x4e693c8,al
  413ed2:	mov    dl,0x32
  413ed4:	mov    bl,0xce
  413ed6:	inc    ebp
  413ed7:	(bad)  
  413ed8:	mov    dh,0xfd
  413eda:	mov    bl,0x9d
  413edc:	push   cs
  413edd:	in     eax,0x57
  413edf:	jecxz  0x413ed8
  413ee1:	mov    esi,0xa9de1c09
  413ee6:	mov    WORD PTR [ecx],fs
  413ee8:	or     al,0x4b
  413eea:	pop    edi
  413eeb:	shl    DWORD PTR [edx],0xff
  413eee:	inc    ebx
  413eef:	jb     0x413f5b
  413ef1:	sbb    BYTE PTR [eax-0x278d826],dh
  413ef7:	leave  
  413ef8:	sbb    DWORD PTR [ebp+0x6c214dce],esi
  413efe:	sbb    ebp,DWORD PTR [ecx-0x58]
  413f01:	stc    
  413f02:	repz in eax,dx
  413f04:	sahf   
  413f05:	fistp  DWORD PTR ds:0x63cf49e6
  413f0b:	iret   
  413f0c:	or     eax,0x684eda07
  413f11:	mov    ds:0xe497ce22,eax
  413f16:	adc    edx,edi
  413f18:	push   esi
  413f19:	xchg   esi,ebp
  413f1b:	mov    bl,0x6f
  413f1d:	outs   dx,BYTE PTR ds:[esi]
  413f1e:	addr16 call 0x363d:0xcef49452
  413f26:	dec    edx
  413f27:	mov    BYTE PTR [edi-0x11245b51],ch
  413f2d:	and    DWORD PTR [ecx+ebp*2],edx
  413f30:	stc    
  413f31:	call   0x64340949
  413f36:	icebp  
  413f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f38:	rol    BYTE PTR [ebp+eax*2-0x59],0x32
  413f3d:	nop
  413f3e:	mov    bl,0x3f
  413f40:	fild   DWORD PTR [ecx]
  413f42:	push   0xffffffd4
  413f44:	loop   0x413fa2
  413f46:	sub    ch,0x99
  413f49:	add    bh,BYTE PTR [ecx+0xe]
  413f4c:	push   cs
  413f4d:	adc    al,0xb8
  413f4f:	cmp    BYTE PTR [edi+0x25],bl
  413f52:	sub    ebp,DWORD PTR [edx+0x59]
  413f55:	loopne 0x413ef0
  413f57:	pop    edx
  413f58:	cmp    al,0x8f
  413f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5b:	stos   DWORD PTR es:[edi],eax
  413f5c:	(bad)
  413f5f:	hlt    
  413f60:	pop    ds
  413f61:	sbb    DWORD PTR ds:0xde784f54,esp
  413f67:	inc    edx
  413f68:	retf   0x62f0
  413f6b:	dec    esp
  413f6c:	jbe    0x413f38
  413f6e:	out    0x15,eax
  413f70:	popa   
  413f71:	pop    ds
  413f72:	xlat   BYTE PTR ds:[ebx]
  413f73:	mov    dl,0x57
  413f75:	pop    esi
  413f76:	aad    0x93
  413f78:	aad    0x84
  413f7a:	sub    ah,BYTE PTR [esp+edx*4-0x487588d5]
  413f81:	gs push ebp
  413f83:	shr    DWORD PTR [edx-0x2f07b9bd],cl
  413f89:	adc    esi,DWORD PTR [edi]
  413f8b:	out    0x9f,al
  413f8d:	dec    edi
  413f8e:	fbstp  TBYTE PTR [ecx-0x6f]
  413f91:	cmp    ch,BYTE PTR [eax+edx*1-0x1b]
  413f95:	and    ebp,DWORD PTR [ebp-0x24]
  413f98:	fwait
  413f99:	jno    0x413f56
  413f9b:	ret    0x8cd6
  413f9e:	pop    esp
  413f9f:	outs   dx,BYTE PTR ds:[esi]
  413fa0:	jle    0x413fb9
  413fa2:	and    ebx,DWORD PTR [edi+eax*4+0x52962fc5]
  413fa9:	sar    DWORD PTR ds:0xc7cd8497,1
  413faf:	inc    eax
  413fb0:	fidiv  DWORD PTR [edx-0x55]
  413fb3:	sbb    BYTE PTR [eax-0x57e16777],cl
  413fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fba:	xchg   esi,eax
  413fbb:	add    DWORD PTR [ebx+0x74],eax
  413fbe:	call   0x874439db
  413fc3:	test   DWORD PTR [edi],esp
  413fc5:	and    dl,bl
  413fc7:	iret   
  413fc8:	adc    eax,0xa8aebb4d
  413fcd:	sbb    BYTE PTR [ebx-0x771868e3],0x5c
  413fd4:	add    bh,BYTE PTR [esi+0x109ee4db]
  413fda:	js     0x41402f
  413fdc:	sti    
  413fdd:	pop    edx
  413fde:	scas   al,BYTE PTR es:[edi]
  413fdf:	outs   dx,DWORD PTR ds:[esi]
  413fe0:	stos   DWORD PTR es:[edi],eax
  413fe1:	xor    al,bl
  413fe3:	or     eax,0x6c5fec62
  413fe8:	cmp    DWORD PTR [ecx-0x26e24a7d],0x5012814a
  413ff2:	sub    DWORD PTR [ecx-0x63],ebp
  413ff5:	push   esp
  413ff6:	cmp    BYTE PTR [ebp-0x1067f0b8],bl
  413ffc:	pop    ds
  413ffd:	out    dx,al
  413ffe:	push   edx
  413fff:	mov    ch,0x51
  414001:	xor    al,0xa8
  414003:	xchg   ecx,eax
  414004:	mov    ecx,DWORD PTR [esi]
  414006:	arpl   WORD PTR ds:0xe2725160,sp
  41400c:	jge    0x413f9d
  41400e:	jge    0x413fcf
  414010:	xor    dl,BYTE PTR ds:0x35d56903
  414016:	addr16 jmp 0x413fe4
  414019:	jne    0x414052
  41401b:	fst    QWORD PTR [ecx-0x5d]
  41401e:	sbb    bh,bh
  414020:	mov    bl,0xf5
  414022:	push   esp
  414023:	xchg   ch,dh
  414025:	mov    cl,0xda
  414027:	mov    cs,WORD PTR [ebx+0x48]
  41402a:	sub    cl,BYTE PTR [ecx+0x1573fc61]
  414030:	mov    esp,DWORD PTR [edx-0x54]
  414033:	adc    ch,dl
  414035:	mov    bl,0x12
  414037:	mov    al,ds:0xb9688e2a
  41403c:	xchg   esi,eax
  41403d:	mov    WORD PTR [edi+0x2abb8948],es
  414043:	mov    eax,ds:0x5ac63315
  414048:	or     esi,DWORD PTR [ecx+esi*2-0x29776c21]
  41404f:	rcl    BYTE PTR [ecx],cl
  414051:	mov    eax,0xe2096d88
  414056:	imul   edi,DWORD PTR [ebx+0x63b279b2],0xffffff90
  41405d:	gs pop esi
  41405f:	lods   eax,DWORD PTR ds:[esi]
  414060:	pop    edi
  414061:	pop    es
  414062:	sub    DWORD PTR es:[ebp+0x17],edx
  414066:	jb     0x4140a9
  414068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414069:	sar    DWORD PTR [esi],0xca
  41406c:	js     0x41401d
  41406e:	and    ch,dh
  414070:	repz mov eax,ds:0x737d4bcf
  414076:	inc    edx
  414077:	pop    es
  414078:	or     edi,ecx
  41407a:	lods   eax,DWORD PTR ds:[esi]
  41407b:	aad    0x1d
  41407d:	or     DWORD PTR [edi+0x77f9fb86],edx
  414083:	sub    dh,0xc9
  414086:	loop   0x41400b
  414088:	mov    dh,0xcd
  41408a:	xor    al,BYTE PTR ds:0xcace26e4
  414090:	adc    eax,0xbf58f3e5
  414095:	adc    eax,0x7727c881
  41409a:	aaa    
  41409b:	and    BYTE PTR [ecx],dl
  41409d:	dec    esp
  41409e:	dec    edx
  41409f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a0:	jp     0x414093
  4140a2:	sub    DWORD PTR [edx-0x6d409970],0xffffffc1
  4140a9:	stos   DWORD PTR es:[edi],eax
  4140aa:	adc    BYTE PTR [ebx+eax*8+0x3c],dl
  4140ae:	inc    ebp
  4140af:	data16 jbe 0x414053
  4140b2:	xor    edx,eax
  4140b4:	int3   
  4140b5:	inc    ecx
  4140b6:	push   cs
  4140b7:	rcr    BYTE PTR [ebx+0x38177bb1],0x46
  4140be:	pushf  
  4140bf:	retf   0xc377
  4140c2:	mov    esi,0xb019a9f7
  4140c7:	push   0x521acf2e
  4140cc:	das    
  4140cd:	lods   eax,DWORD PTR ds:[esi]
  4140ce:	jb     0x41410e
  4140d0:	scas   eax,DWORD PTR es:[edi]
  4140d1:	loope  0x41406b
  4140d3:	push   eax
  4140d4:	dec    esp
  4140d5:	(bad)  
  4140d6:	mov    esp,0x8af5b7e8
  4140db:	bound  ebp,QWORD PTR [edi-0x145c933f]
  4140e1:	jae    0x4140e2
  4140e3:	aad    0xf4
  4140e5:	dec    BYTE PTR [esi+0x12]
  4140e8:	rcl    DWORD PTR [ecx+0x35b3ca0b],0x6f
  4140ef:	lods   eax,DWORD PTR ds:[esi]
  4140f0:	scas   al,BYTE PTR es:[edi]
  4140f1:	push   ebp
  4140f2:	in     al,dx
  4140f3:	dec    ebx
  4140f4:	mov    edi,0x6182faa5
  4140f9:	push   edx
  4140fa:	inc    ebp
  4140fb:	mov    ebp,0x927d9fef
  414100:	rcr    BYTE PTR [eax],1
  414102:	inc    esi
  414103:	add    al,0xda
  414105:	mov    bl,0x48
  414107:	mov    bh,0x1c
  414109:	ds dec edx
  41410b:	mov    eax,0x4cbe4bbe
  414110:	pusha  
  414111:	mov    DWORD PTR [ebp-0x7cecd715],eax
  414117:	sub    al,0x33
  414119:	and    esp,DWORD PTR [ebx]
  41411b:	pop    ds
  41411c:	lods   eax,DWORD PTR ds:[esi]
  41411d:	jp     0x4140a6
  41411f:	ins    DWORD PTR es:[edi],dx
  414120:	dec    eax
  414121:	mov    edx,0xd1c7f0d7
  414126:	call   0xa085:0x987d1218
  41412d:	jle    0x41412a
  41412f:	sbb    BYTE PTR [edi-0x74fd3704],ah
  414135:	xchg   edx,eax
  414136:	sub    edx,eax
  414138:	add    esi,0x7711461
  41413e:	lock aad 0x1e
  414141:	jbe    0x4140fc
  414143:	loope  0x414152
  414145:	lea    esp,[eax]
  414147:	jmp    0x41418f
  414149:	jae    0x41412e
  41414b:	(bad)  
  41414c:	(bad)  [edx+0x2ad7008c]
  414152:	sbb    esp,esi
  414154:	adc    edi,DWORD PTR [ebp-0x141b8131]
  41415a:	xor    BYTE PTR [ebx+0x3c92714d],al
  414160:	dec    edi
  414161:	push   ds
  414162:	cmp    BYTE PTR [ebx],al
  414164:	ja     0x4141c9
  414166:	add    BYTE PTR [ecx-0x24a67132],bh
  41416c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416e:	xor    eax,esp
  414170:	mov    edx,0xbcd1caba
  414175:	loope  0x4141c6
  414177:	or     DWORD PTR [esi+ebp*1+0x16251c6],0x5d
  41417f:	into   
  414180:	cdq    
  414181:	or     BYTE PTR [edx-0x48c2656f],bl
  414187:	mov    dl,0xdc
  414189:	jg     0x414185
  41418b:	mov    dh,0xb5
  41418d:	cmp    al,0x86
  41418f:	xlat   BYTE PTR ds:[ebx]
  414190:	mov    dl,0x3f
  414192:	and    BYTE PTR [eax],dh
  414194:	int    0xbf
  414196:	lds    ebp,FWORD PTR [eax+eax*1-0x6]
  41419a:	jp     0x41413e
  41419c:	and    eax,ebp
  41419e:	test   DWORD PTR [edx+esi*8-0x56],edx
  4141a2:	sar    DWORD PTR [ecx-0x6ab6bad8],1
  4141a8:	jbe    0x4141f2
  4141aa:	inc    edx
  4141ab:	jge    0x41415f
  4141ad:	mov    DWORD PTR [edi+ecx*2],ecx
  4141b0:	out    dx,eax
  4141b1:	popf   
  4141b2:	jle    0x4141cd
  4141b4:	mov    esi,0xe20d1955
  4141b9:	or     bl,BYTE PTR [edx]
  4141bb:	jns    0x414190
  4141bd:	or     DWORD PTR [ebp-0x5ff74e69],esp
  4141c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141c4:	jne    0x414158
  4141c6:	mul    dl
  4141c8:	mov    al,0xca
  4141ca:	xor    bh,BYTE PTR [esi-0x57]
  4141cd:	fs jl  0x4141f1
  4141d0:	fcomi  st,st(7)
  4141d2:	push   0x8b2019c6
  4141d7:	loopne 0x41418b
  4141d9:	mov    ah,0x21
  4141db:	mov    ebp,0x457fa31a
  4141e0:	scas   al,BYTE PTR es:[edi]
  4141e1:	ror    DWORD PTR [edi-0x34],cl
  4141e4:	mov    bl,0x11
  4141e6:	cmp    DWORD PTR [edi],ebx
  4141e8:	mov    ah,0xe9
  4141ea:	dec    eax
  4141eb:	dec    ebp
  4141ec:	or     al,0x9a
  4141ee:	sub    ah,BYTE PTR [eax-0xdab4e18]
  4141f4:	pop    eax
  4141f5:	jne    0x414237
  4141f7:	or     BYTE PTR [edi],ah
  4141f9:	mov    eax,ds:0xe78b18ff
  4141fe:	out    dx,al
  4141ff:	pop    ecx
  414200:	mov    ss,WORD PTR [edi+0x2f213906]
  414206:	mov    ah,0xdf
  414208:	jbe    0x414219
  41420a:	mov    cl,0x86
  41420c:	adc    edx,eax
  41420e:	daa    
  41420f:	jmp    0x9c6f:0xfc9ee206
  414216:	icebp  
  414217:	mov    eax,0x139d29e3
  41421c:	test   DWORD PTR [edx+0x3f],eax
  41421f:	arpl   ax,dx
  414221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414222:	cmp    esp,edx
  414224:	int3   
  414225:	stos   BYTE PTR es:[edi],al
  414226:	push   edx
  414227:	xchg   edi,eax
  414228:	sub    dl,al
  41422a:	push   es
  41422b:	int3   
  41422c:	ds pop eax
  41422e:	gs xchg esp,eax
  414230:	(bad)  
  414231:	icebp  
  414232:	shr    ch,1
  414234:	adc    edi,DWORD PTR [ebx+0x6354c6a4]
  41423a:	popa   
  41423b:	mov    edx,0x89a02adf
  414240:	fdiv   QWORD PTR [edi+0x54]
  414243:	lods   eax,DWORD PTR ds:[esi]
  414244:	in     al,dx
  414245:	ret    0x3bb6
  414248:	data16 ja 0x414220
  41424b:	push   ds
  41424c:	lock lea eax,[eax]
  41424f:	in     al,dx
  414250:	pop    es
  414251:	pop    esi
  414252:	dec    al
  414254:	push   ebp
  414255:	cmp    ch,bl
  414257:	retf   0x3132
  41425a:	aas    
  41425b:	xor    eax,0x7d44fa13
  414260:	xor    eax,0xc6882345
  414265:	call   0x20d3:0x2164020f
  41426c:	lods   al,BYTE PTR ds:[esi]
  41426d:	out    0xfe,al
  41426f:	adc    ebx,eax
  414271:	and    al,0x5
  414273:	ret    
  414274:	jo     0x41422c
  414276:	push   ds
  414277:	adc    al,0x85
  414279:	sahf   
  41427a:	imul   ecx,eax,0x56fc7301
  414280:	or     edx,DWORD PTR [ecx-0x11]
  414283:	jno    0x41428b
  414285:	mov    ah,0xe6
  414287:	push   edi
  414288:	xchg   esp,eax
  414289:	ror    BYTE PTR [eax-0x15],1
  41428c:	cmp    eax,DWORD PTR [edx-0x5c]
  41428f:	and    ebx,ebp
  414291:	stos   BYTE PTR es:[edi],al
  414292:	or     DWORD PTR [ebx],ecx
  414294:	and    BYTE PTR [ebx-0x12],0x5b
  414298:	or     eax,0xb
  41429b:	push   eax
  41429c:	test   DWORD PTR [ebp+0x7362cdaa],ecx
  4142a2:	retf   0x8651
  4142a5:	xchg   esp,eax
  4142a6:	dec    ebp
  4142a7:	pop    ebx
  4142a8:	pop    ebp
  4142a9:	ins    DWORD PTR es:[edi],dx
  4142aa:	fimul  WORD PTR [edi]
  4142ac:	push   0x77
  4142ae:	hlt    
  4142af:	jns    0x4142f3
  4142b1:	in     al,0xb
  4142b3:	leave  
  4142b4:	mov    ebx,DWORD PTR [edx+0x4e]
  4142b7:	popf   
  4142b8:	mov    edx,0x57ab145f
  4142bd:	out    dx,al
  4142be:	xor    BYTE PTR [edi+0xf391dc8],dl
  4142c4:	jno    0x41427c
  4142c6:	jae    0x414302
  4142c8:	push   0x75d0d77e
  4142cd:	scas   eax,DWORD PTR es:[edi]
  4142ce:	add    BYTE PTR [esi+0x51423ae6],0xa4
  4142d5:	and    BYTE PTR [eax-0x2ab2a262],ah
  4142db:	cmp    DWORD PTR [ebp-0x15],ebp
  4142de:	cli    
  4142df:	das    
  4142e0:	mov    BYTE PTR [ecx],dh
  4142e2:	stos   DWORD PTR es:[edi],eax
  4142e3:	mov    al,0x7
  4142e5:	daa    
  4142e6:	push   ebp
  4142e7:	or     al,0xb
  4142e9:	and    eax,0x34323b0e
  4142ee:	cwde   
  4142ef:	aas    
  4142f0:	les    ebx,FWORD PTR [edx+eax*2-0x3b]
  4142f4:	fs stos BYTE PTR es:[edi],al
  4142f6:	adc    al,0xb5
  4142f8:	stos   DWORD PTR es:[edi],eax
  4142f9:	push   ebx
  4142fa:	mov    ds:0x59e87e6f,al
  4142ff:	sar    esi,1
  414301:	es setne bl
  414305:	add    BYTE PTR [edi+0x44],0x3
  414309:	or     ch,0x9e
  41430c:	(bad)  
  41430d:	lods   al,BYTE PTR ds:[esi]
  41430e:	and    eax,0xc7721959
  414313:	mov    ecx,0xf9f39ab3
  414318:	xor    BYTE PTR [eax],al
  41431a:	mov    al,0x24
  41431c:	out    0x52,al
  41431e:	pop    es
  41431f:	dec    ecx
  414320:	ins    BYTE PTR es:[edi],dx
  414321:	pop    ss
  414322:	xchg   edi,eax
  414323:	pop    esp
  414324:	and    edi,ecx
  414326:	rcl    BYTE PTR ss:[edi],0xc9
  41432a:	sub    edi,DWORD PTR [eax]
  41432c:	imul   edi,DWORD PTR fs:[eax-0x2170f139],0xffffff8a
  414334:	cwde   
  414335:	test   al,0x37
  414337:	sbb    ecx,DWORD PTR [ebx]
  414339:	cld    
  41433a:	adc    ch,bl
  41433c:	out    0xb1,eax
  41433e:	add    BYTE PTR [ebp-0x66],bh
  414341:	loop   0x414376
  414343:	cmp    eax,0x68ba622a
  414348:	mov    edx,0x39cdf9fb
  41434d:	xlat   BYTE PTR ds:[ebx]
  41434e:	or     esi,DWORD PTR [edx+0x14]
  414351:	fisub  DWORD PTR [eax]
  414353:	adc    BYTE PTR [edx+0x2465abbd],cl
  414359:	inc    edx
  41435a:	sub    BYTE PTR [ebx-0x3d],al
  41435d:	push   0xffffff99
  41435f:	dec    edx
  414360:	xchg   esp,eax
  414361:	(bad)  
  414362:	fnstenv [esp+ebp*4+0x73]
  414366:	or     al,0x6b
  414368:	setl   BYTE PTR [esi-0x75f4a198]
  41436f:	stos   BYTE PTR es:[edi],al
  414370:	cli    
  414371:	jae    0x4143f0
  414373:	retf   
  414374:	std    
  414375:	dec    esi
  414376:	push   es
  414377:	sub    eax,0x7c0f6bf
  41437c:	ja     0x414357
  41437e:	jnp    0x41439b
  414380:	sahf   
  414381:	mov    BYTE PTR [edx-0x51715b12],dh
  414387:	or     DWORD PTR ds:0xc7d13d08,0x36
  41438e:	mov    ebp,0x80806b74
  414393:	jb     0x41434c
  414395:	add    bl,BYTE PTR [eax+0x3869fb56]
  41439b:	xchg   ebx,eax
  41439c:	into   
  41439d:	xor    esi,ebp
  41439f:	stc    
  4143a0:	adc    edi,DWORD PTR [ebp-0x6d1d3594]
  4143a6:	xor    dh,ah
  4143a8:	mov    ebx,DWORD PTR [eax+0x37a15f32]
  4143ae:	xchg   BYTE PTR [eax+0x3a],ch
  4143b1:	stos   DWORD PTR es:[edi],eax
  4143b2:	mov    bl,0xb1
  4143b4:	xor    bh,BYTE PTR [ecx+0x59549dcb]
  4143ba:	or     eax,0x50253d3b
  4143bf:	(bad)  
  4143c0:	(bad)  
  4143c1:	out    dx,eax
  4143c2:	xchg   esi,eax
  4143c3:	or     edx,DWORD PTR [eax+edi*8+0xe]
  4143c7:	xchg   esi,eax
  4143c8:	cmp    eax,0xa1574403
  4143cd:	adc    BYTE PTR [ecx-0x1f],dh
  4143d0:	retf   0xb672
  4143d3:	xchg   esi,eax
  4143d4:	icebp  
  4143d5:	jno    0x41440d
  4143d7:	aaa    
  4143d8:	cmp    DWORD PTR [ecx-0xb],ebx
  4143db:	icebp  
  4143dc:	or     BYTE PTR [edx-0x3b],dh
  4143df:	adc    BYTE PTR [esi],cl
  4143e1:	cs into 
  4143e3:	push   cs
  4143e4:	add    BYTE PTR [eax+0x3e],dl
  4143e7:	mov    bh,0xb0
  4143e9:	push   esp
  4143ea:	jb     0x414398
  4143ec:	fstp   DWORD PTR [ebx-0x7f]
  4143ef:	out    dx,eax
  4143f0:	lods   al,BYTE PTR ds:[esi]
  4143f1:	inc    esp
  4143f2:	fwait
  4143f3:	cmp    al,0x1e
  4143f5:	cld    
  4143f6:	xchg   al,dl
  4143f8:	test   DWORD PTR gs:0x7f3f41aa,ebp
  4143ff:	and    bl,BYTE PTR [eax+0x70]
  414402:	cmp    eax,0xb40e0dac
  414407:	pop    ds
  414408:	push   0xffffffad
  41440a:	dec    esi
  41440b:	ins    BYTE PTR es:[edi],dx
  41440c:	in     al,0xbc
  41440e:	dec    eax
  41440f:	fbstp  TBYTE PTR [edi]
  414411:	push   edi
  414412:	push   edx
  414413:	mov    ecx,0xfed12570
  414418:	imul   ebx,DWORD PTR [ecx+0x18ff9818],0xbdde12f6
  414422:	cmp    al,0xcd
  414424:	(bad)  
  414426:	ficomp DWORD PTR ds:0x68f3d4c6
  41442c:	add    dl,0xad
  41442f:	imul   edx,esi,0xc7e58311
  414435:	sbb    DWORD PTR [eax+0x1e],esi
  414438:	das    
  414439:	fild   QWORD PTR [edi+ebx*1+0x3442ee54]
  414440:	xor    ah,BYTE PTR [esi]
  414442:	out    0x42,eax
  414444:	pushf  
  414445:	bound  esi,QWORD PTR [ecx]
  414447:	clc    
  414448:	mov    dl,0x5f
  41444a:	push   es
  41444b:	jmp    0x98e99fe3
  414450:	xchg   esp,eax
  414451:	push   edx
  414452:	(bad)  
  414454:	imul   ecx,DWORD PTR [edx+0x28e116a7],0xd1f8d226
  41445e:	adc    al,ch
  414460:	aas    
  414461:	shl    DWORD PTR [edx],cl
  414463:	iret   
  414464:	(bad)  
  414465:	or     al,0x98
  414467:	icebp  
  414468:	jno    0x41446e
  41446a:	sbb    DWORD PTR [edi],edi
  41446c:	sbb    al,0x82
  41446e:	lock ins DWORD PTR es:[edi],dx
  414470:	adc    DWORD PTR [ecx+0x7f638828],0x48cad02e
  41447a:	fld    TBYTE PTR [eax+0x21]
  41447d:	ficom  WORD PTR [esi]
  41447f:	dec    ebx
  414480:	retf   
  414481:	xchg   edi,eax
  414482:	mov    ds:0x3e307f6e,al
  414487:	gs aaa 
  414489:	push   cs
  41448a:	push   ebx
  41448b:	jns    0x414418
  41448d:	enter  0x2bd3,0x2b
  414491:	and    esp,DWORD PTR [edx-0x2f]
  414494:	cli    
  414495:	cmp    edx,ebx
  414497:	(bad)  
  414498:	push   esi
  414499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449a:	pop    es
  41449b:	enter  0xfee7,0xaf
  41449f:	mov    ds:0x310635ac,al
  4144a4:	loop   0x4144ff
  4144a6:	jg     0x41450f
  4144a8:	xchg   ecx,eax
  4144a9:	test   BYTE PTR [ebp-0x68],bl
  4144ac:	(bad)  
  4144ad:	loope  0x4144b2
  4144af:	sbb    bl,BYTE PTR [edx+0x6c]
  4144b2:	jne    0x41448a
  4144b4:	push   esi
  4144b5:	dec    edi
  4144b6:	add    eax,0x7fad173d
  4144bb:	pop    esi
  4144bc:	push   ebx
  4144bd:	lods   al,BYTE PTR ds:[esi]
  4144be:	adc    dh,BYTE PTR [ecx-0xc]
  4144c1:	mov    ebp,0xbc5b843
  4144c6:	add    DWORD PTR [ecx+0x79],0x97a914f8
  4144cd:	repz loop 0x41445b
  4144d0:	adc    bl,0x14
  4144d3:	lods   eax,DWORD PTR ds:[esi]
  4144d4:	or     BYTE PTR [edx-0x4a],dh
  4144d7:	sbb    ch,BYTE PTR [edx+0x52ba430c]
  4144dd:	movd   DWORD PTR [eax-0x7036e89c],mm3
  4144e4:	rcr    ebx,0x50
  4144e7:	nop
  4144e8:	ins    DWORD PTR es:[edi],dx
  4144e9:	jmp    0xce225ecd
  4144ee:	(bad)  [edx+0x45]
  4144f1:	jp     0x41455f
  4144f3:	sbb    eax,0xa2107da1
  4144f8:	cmp    al,0xdf
  4144fa:	and    esp,esp
  4144fc:	ret    0x6f11
  4144ff:	cvtps2pd xmm2,QWORD PTR [ebx+0x65e2aeaf]
  414506:	loope  0x4144d7
  414508:	lahf   
  414509:	mov    BYTE PTR [ecx-0x61],dl
  41450c:	mov    edi,0x32d888ba
  414511:	in     eax,dx
  414512:	xor    eax,0x419aa47a
  414517:	sub    al,0xc3
  414519:	test   DWORD PTR [ebp+0x3b],esi
  41451c:	dec    ebp
  41451d:	mov    cl,0x3b
  41451f:	ror    esp,0x5d
  414522:	call   0x1bf05db7
  414527:	mov    ds:0xce3cecf6,eax
  41452c:	add    DWORD PTR [ebx-0xf],edi
  41452f:	scas   al,BYTE PTR es:[edi]
  414530:	not    DWORD PTR [edx+ebp*2]
  414533:	jno    0x414586
  414535:	fcom   QWORD PTR [ebp+0x61]
  414538:	test   al,0xcc
  41453a:	sub    ah,BYTE PTR ds:0x9980b722
  414540:	stc    
  414541:	aam    0xd9
  414543:	in     al,0xb7
  414545:	and    BYTE PTR [edx-0x3],bh
  414548:	arpl   sp,cx
  41454a:	jae    0x4144fc
  41454c:	inc    ecx
  41454d:	pmulhw mm5,QWORD PTR [ecx-0x1a]
  414551:	push   edx
  414552:	into   
  414553:	xchg   esi,eax
  414554:	repnz cwde 
  414556:	add    al,0x35
  414558:	xchg   ecx,eax
  414559:	in     al,dx
  41455a:	sub    edi,ebx
  41455c:	call   0x5a4:0x5853813e
  414563:	test   edi,edi
  414565:	lods   al,BYTE PTR ds:[esi]
  414566:	rcr    BYTE PTR [ebx+esi*1-0x7a311c3e],cl
  41456d:	ret    
  41456e:	mov    eax,0xcea20dc6
  414573:	cdq    
  414574:	and    edi,DWORD PTR [ecx-0x7ef72138]
  41457a:	out    dx,eax
  41457b:	ins    DWORD PTR es:[edi],dx
  41457c:	mov    edi,ebx
  41457e:	std    
  41457f:	and    DWORD PTR [ebx],ebx
  414581:	icebp  
  414582:	int3   
  414583:	lds    ebp,FWORD PTR [eax+ecx*4-0x66]
  414587:	mov    cl,0x83
  414589:	inc    DWORD PTR [edi+ebp*8]
  41458c:	ret    0xd50b
  41458f:	mov    BYTE PTR [ebp+0x7],0xa3
  414593:	lahf   
  414594:	inc    DWORD PTR [eax+0x63]
  414597:	adc    al,0x8a
  414599:	out    0x84,eax
  41459b:	das    
  41459c:	xor    al,0xa4
  41459e:	jae    0x414611
  4145a0:	cdq    
  4145a1:	adc    al,0xc4
  4145a3:	pushf  
  4145a4:	cld    
  4145a5:	sbb    al,0x3a
  4145a7:	mov    esp,0xb3cc984b
  4145ac:	mov    esi,0x9f62e4c5
  4145b1:	mov    ebx,0xf2f3e018
  4145b6:	add    BYTE PTR [ebp-0x1cc7cb9f],dl
  4145bc:	cli    
  4145bd:	mov    ecx,0xf48a0750
  4145c2:	lds    esp,FWORD PTR [ebx]
  4145c4:	xlat   BYTE PTR ds:[ebx]
  4145c5:	inc    ebx
  4145c6:	xor    BYTE PTR [edx+edi*8],0x2f
  4145ca:	push   ecx
  4145cb:	and    al,0xa1
  4145cd:	addr16 ja 0x414590
  4145d0:	jnp    0x41461b
  4145d2:	jmp    DWORD PTR ds:0x4eaf5e89
  4145d8:	inc    ecx
  4145d9:	adc    al,0x6e
  4145db:	pop    ds
  4145dc:	outs   dx,BYTE PTR ds:[esi]
  4145dd:	add    BYTE PTR [ebx+eax*2+0x59e5ca0d],dh
  4145e4:	scas   al,BYTE PTR es:[edi]
  4145e5:	pushf  
  4145e6:	cmp    al,0x66
  4145e8:	add    ecx,ecx
  4145ea:	test   BYTE PTR [edi],dl
  4145ec:	adc    ah,bl
  4145ee:	js     0x414620
  4145f0:	xlat   BYTE PTR ds:[ebx]
  4145f1:	int    0xe1
  4145f3:	xchg   esi,eax
  4145f4:	in     al,dx
  4145f5:	inc    ebx
  4145f6:	jne    0x4145dc
  4145f8:	xor    al,BYTE PTR [esi]
  4145fa:	jo     0x414673
  4145fc:	sub    dh,dh
  4145fe:	pusha  
  4145ff:	loopne 0x414652
  414601:	fistp  DWORD PTR [eax-0x3f]
  414604:	mov    al,ds:0xa93daeba
  414609:	sub    DWORD PTR [ecx+0x79],ecx
  41460c:	mov    esp,0x6191cefd
  414611:	xchg   edx,eax
  414612:	and    al,0xa3
  414614:	repz mov esp,0x16585a80
  41461a:	mov    ebp,0x3a89ee98
  41461f:	jp     0x4145c9
  414621:	jno    0x4145d4
  414623:	push   ebx
  414624:	inc    esp
  414625:	adc    ah,bh
  414627:	jg     0x414650
  414629:	fnstcw WORD PTR [edi-0x46098af9]
  41462f:	cmc    
  414630:	nop
  414631:	(bad)  
  414632:	mov    ds:0x761ca69f,eax
  414637:	jno    0x414683
  414639:	xor    al,BYTE PTR [edi-0x1]
  41463c:	inc    ecx
  41463d:	stc    
  41463e:	xor    eax,DWORD PTR [esi+0x3a0bdc74]
  414644:	jns    0x4145ca
  414646:	or     eax,0x6c53805c
  41464b:	jmp    0xe7586cfd
  414650:	mov    WORD PTR [esi],?
  414652:	leave  
  414653:	out    0xdb,al
  414655:	popf   
  414656:	mov    esp,DWORD PTR [eax-0x7c4949d9]
  41465c:	popa   
  41465d:	mov    ds:0x3462d4c2,al
  414662:	div    DWORD PTR [edi-0x72]
  414665:	push   ebx
  414666:	fisttp QWORD PTR [edx+0x2d039abd]
  41466c:	inc    ebp
  41466d:	ins    WORD PTR es:[edi],dx
  41466f:	mov    al,0xeb
  414671:	aas    
  414672:	pop    ebp
  414673:	xor    al,0xaf
  414675:	shl    BYTE PTR [ecx-0x6b],1
  414678:	repnz dec esp
  41467a:	stos   DWORD PTR es:[edi],eax
  41467b:	retf   
  41467c:	test   eax,0x84989bb
  414681:	idiv   DWORD PTR [edi+0x7a]
  414684:	out    0x61,eax
  414686:	mov    al,ds:0x8b39b52b
  41468b:	loope  0x414633
  41468d:	cs sub al,0xc9
  414690:	jns    0x41467c
  414692:	add    DWORD PTR [edi+0xd],edi
  414695:	cwde   
  414696:	mov    ah,0xd
  414698:	jno    0x414629
  41469a:	jno    0x414646
  41469c:	jge    0x4146b2
  41469e:	jge    0x4146fd
  4146a0:	jae    0x414711
  4146a2:	call   0xfdce:0x30ea00ba
  4146a9:	mov    cl,bh
  4146ab:	mov    ebx,0x1c4e8d95
  4146b0:	jb     0x414682
  4146b2:	fdiv   st(0),st
  4146b4:	ret    
  4146b5:	or     BYTE PTR [ebp-0x27f61060],cl
  4146bb:	dec    esp
  4146bc:	(bad)  
  4146bd:	in     al,dx
  4146be:	push   ebp
  4146bf:	ret    
  4146c0:	rol    BYTE PTR [ebp-0x78a646ae],cl
  4146c6:	rcr    DWORD PTR [edi+0x31bb07a7],cl
  4146cc:	enter  0xfceb,0xf5
  4146d0:	mov    ecx,0x80ae0d9f
  4146d5:	test   DWORD PTR [ebp+eiz*8+0x34],0xe2b88a15
  4146dd:	stc    
  4146de:	xchg   BYTE PTR [eax+0x49045f52],al
  4146e4:	cmp    dh,bl
  4146e6:	dec    ebp
  4146e7:	xchg   esi,eax
  4146e8:	pop    ebx
  4146e9:	add    DWORD PTR [ebx],ebx
  4146eb:	loope  0x414753
  4146ed:	add    DWORD PTR [edi-0x6d306a61],esp
  4146f3:	jmp    0xf1f109ee
  4146f8:	addr16 cdq 
  4146fa:	ret    0x7db5
  4146fd:	cli    
  4146fe:	xor    edi,eax
  414700:	push   ds
  414701:	mov    al,0x73
  414703:	dec    eax
  414704:	hlt    
  414705:	sbb    BYTE PTR [eax-0x4a42318d],al
  41470b:	jae    0x414709
  41470d:	push   edx
  41470e:	popa   
  41470f:	sub    eax,0xa77eb669
  414714:	pop    esp
  414715:	imul   ebx,DWORD PTR [esi-0x333c0465],0xd872ffd6
  41471f:	popf   
  414720:	jno    0x414782
  414722:	dec    ebp
  414723:	out    dx,eax
  414724:	fst    QWORD PTR [eax+ecx*1+0x1f]
  414728:	mov    bl,cl
  41472a:	inc    edi
  41472b:	arpl   dx,bp
  41472d:	mov    al,ds:0xf6fa6424
  414732:	das    
  414733:	scas   eax,DWORD PTR es:[edi]
  414734:	and    al,0xe4
  414736:	mov    dl,0x78
  414738:	repz jmp 0x5ca58355
  41473e:	(bad)  
  414740:	mov    cl,0xd0
  414742:	sub    bl,BYTE PTR [esi-0x56]
  414745:	pop    ds
  414746:	sti    
  414747:	dec    ebx
  414748:	shl    BYTE PTR [esi],0xf7
  41474b:	push   ss
  41474c:	sahf   
  41474d:	or     eax,0xf5d971d3
  414752:	sub    DWORD PTR [ebx+ebx*4],0x1f
  414756:	(bad)  
  414757:	mov    cl,0x38
  414759:	bound  ebp,QWORD PTR [edi-0x534b5b1e]
  41475f:	rcr    DWORD PTR [ebx+0x77],0x2
  414763:	test   eax,0x20b943f7
  414768:	leave  
  414769:	sub    al,0x63
  41476b:	xchg   edi,eax
  41476c:	test   BYTE PTR fs:[esi],dl
  41476f:	mov    ah,0xd7
  414771:	cdq    
  414772:	scas   eax,DWORD PTR es:[edi]
  414773:	and    ecx,DWORD PTR ds:[ebx+edx*8-0x686e1d2c]
  41477b:	pusha  
  41477c:	push   ebp
  41477d:	pop    es
  41477e:	daa    
  41477f:	das    
  414780:	cli    
  414781:	stc    
  414782:	repz lea edx,[edi-0x72cfacae]
  414789:	nop
  41478a:	retf   
  41478b:	push   0x6199f040
  414790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414791:	push   ss
  414792:	push   esi
  414793:	lahf   
  414794:	lahf   
  414795:	jl     0x41479d
  414797:	push   0xffffff85
  414799:	arpl   bx,bx
  41479b:	data16 int 0x3e
  41479e:	pop    es
  41479f:	lods   al,BYTE PTR ds:[esi]
  4147a0:	pop    edx
  4147a1:	pop    ecx
  4147a2:	and    BYTE PTR [ebp-0x16],0x58
  4147a6:	jmp    0x3f4f:0xcb1cdd3b
  4147ad:	cld    
  4147ae:	or     DWORD PTR [ebp-0x10],ecx
  4147b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b2:	push   ss
  4147b3:	cmp    esi,DWORD PTR [bp+0x68]
  4147b7:	gs pusha 
  4147b9:	xchg   esp,eax
  4147ba:	jge    0x41477a
  4147bc:	or     BYTE PTR [ebp-0x59],0x83
  4147c0:	dec    edi
  4147c1:	scas   al,BYTE PTR es:[edi]
  4147c2:	outs   dx,BYTE PTR ds:[esi]
  4147c3:	cmc    
  4147c4:	lods   al,BYTE PTR ds:[esi]
  4147c5:	cmp    cl,BYTE PTR [edi-0x2c8844c0]
  4147cb:	xchg   esi,eax
  4147cc:	xchg   edi,eax
  4147cd:	fisub  DWORD PTR [edi-0x5296482b]
  4147d3:	mov    ds:0x1833bfe7,al
  4147d8:	imul   ecx,DWORD PTR [edx],0x0
  4147db:	ficom  WORD PTR [edi+0x3c67d345]
  4147e1:	mov    dl,0x41
  4147e3:	stos   BYTE PTR es:[edi],al
  4147e4:	stos   BYTE PTR es:[edi],al
  4147e5:	retf   
  4147e6:	imul   esp,ebp,0xffffffc1
  4147e9:	push   ecx
  4147ea:	mov    ds:0xe986f5c8,al
  4147ef:	jns    0x414817
  4147f1:	dec    edi
  4147f2:	(bad)  
  4147f4:	mov    esi,0x3c6d9f22
  4147f9:	loope  0x414878
  4147fb:	mov    ah,0x2a
  4147fd:	xlat   BYTE PTR ds:[ebx]
  4147fe:	arpl   WORD PTR [ecx+edi*4-0x49],dx
  414802:	adc    DWORD PTR [ebx],esp
  414804:	pop    eax
  414805:	jecxz  0x41480c
  414807:	or     al,BYTE PTR [ecx]
  414809:	cld    
  41480a:	aaa    
  41480b:	cs dec ecx
  41480d:	or     ecx,DWORD PTR ds:0x74da776
  414813:	sub    BYTE PTR [edx+0x32],dl
  414816:	mov    esp,0xd27f39bc
  41481b:	in     eax,dx
  41481c:	cmp    bh,BYTE PTR [edi+0x50]
  41481f:	pop    ecx
  414820:	sysexit 
  414822:	push   ss
  414823:	jns    0x414897
  414825:	push   esp
  414826:	mov    dh,0xdc
  414828:	pop    esp
  414829:	int3   
  41482a:	inc    esi
  41482b:	ficom  WORD PTR [edi-0x692aaf81]
  414831:	stc    
  414832:	mov    edi,DWORD PTR [di-0x66]
  414836:	retf   
  414837:	lahf   
  414838:	or     edi,DWORD PTR [ebx-0x564b7182]
  41483e:	inc    edx
  41483f:	lds    ebx,FWORD PTR [ebx+0x6c862d2e]
  414845:	mov    edx,0x73acef37
  41484a:	fldln2 
  41484c:	sti    
  41484d:	stos   BYTE PTR es:[edi],al
  41484e:	and    al,0x87
  414850:	mov    edx,0x452f1358
  414855:	loopne 0x414811
  414857:	pop    esp
  414858:	cld    
  414859:	push   esi
  41485a:	or     WORD PTR [esp+edx*2],sp
  41485e:	into   
  41485f:	pop    edi
  414860:	sti    
  414861:	mov    edi,0x1ca1d033
  414866:	mov    ds:0xbf34235f,eax
  41486b:	mov    al,fs:0x2416e2a9
  414871:	sbb    al,0x71
  414873:	les    esp,FWORD PTR [edi+0x19]
  414876:	cmp    eax,0x1fddad17
  41487b:	aam    0x17
  41487d:	je     0x414855
  41487f:	popa   
  414880:	jo     0x414834
  414882:	test   BYTE PTR [edi+0x646fd780],ah
  414888:	stos   BYTE PTR es:[edi],al
  414889:	pop    esi
  41488a:	adc    eax,0x6db6dda3
  41488f:	and    bh,BYTE PTR [ebx+0x4b36dc23]
  414895:	adc    eax,0xb1c4f9ae
  41489a:	or     DWORD PTR [edi-0x1d],edi
  41489d:	add    ebp,DWORD PTR [edi-0x25]
  4148a0:	xchg   esi,eax
  4148a1:	cmp    al,0x46
  4148a3:	fistp  QWORD PTR [ebx]
  4148a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a6:	push   ss
  4148a7:	jle    0x4148c9
  4148a9:	mov    ch,0x61
  4148ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ac:	stc    
  4148ad:	mov    eax,ds:0xa4e37915
  4148b2:	jmp    0x8ed14a4
  4148b7:	lea    esi,[ebp-0x30]
  4148ba:	stos   BYTE PTR es:[edi],al
  4148bb:	cwde   
  4148bc:	mov    ecx,0xdaea7ede
  4148c1:	jbe    0x414908
  4148c3:	jo     0x414861
  4148c5:	popf   
  4148c6:	mov    eax,ds:0xdc3dc687
  4148cb:	cmp    eax,0x1b9acb65
  4148d0:	stos   DWORD PTR es:[edi],eax
  4148d1:	pop    eax
  4148d2:	rol    BYTE PTR [edx-0x1b86698a],cl
  4148d8:	(bad)  
  4148d9:	(bad)  
  4148da:	xlat   BYTE PTR ds:[ebx]
  4148db:	sub    bh,dh
  4148dd:	pop    es
  4148de:	pop    edi
  4148df:	mov    bl,0x2f
  4148e1:	mov    eax,0x1fc703b9
  4148e6:	ja     0x414957
  4148e8:	sahf   
  4148e9:	clc    
  4148ea:	mov    ds:0xedb9c054,eax
  4148ef:	cdq    
  4148f0:	fnsave [ebx]
  4148f2:	daa    
  4148f3:	mov    edx,0x9a67cff5
  4148f8:	sbb    al,0xfb
  4148fa:	enter  0x8350,0x8b
  4148fe:	imul   ebx,DWORD PTR [edx+eax*8],0xffffffac
  414902:	push   ebx
  414903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414904:	jle    0x4148c4
  414906:	call   0x38d5:0xa5720faf
  41490d:	cmp    esp,ebp
  41490f:	test   eax,0xc6ed1263
  414914:	or     edx,DWORD PTR [edx+edx*8+0x41bd835]
  41491b:	sar    esi,0x63
  41491e:	mov    ebx,0xeb0d0c79
  414923:	lods   al,BYTE PTR ds:[esi]
  414924:	xor    cl,ah
  414926:	or     eax,0xd01ed9d2
  41492b:	aad    0x9a
  41492d:	mov    edx,0x2c035f13
  414932:	push   edi
  414933:	mov    dl,0xf9
  414935:	jne    0x414935
  414937:	sub    BYTE PTR [edi+0xaa1005b],ah
  41493d:	(bad)  
  41493e:	stos   BYTE PTR es:[edi],al
  41493f:	sbb    BYTE PTR [ebx+0x1f],al
  414942:	clc    
  414943:	inc    esi
  414944:	or     esp,0x52
  414947:	sub    eax,0x11aa0419
  41494c:	push   ebp
  41494d:	push   ebx
  41494e:	js     0x414964
  414950:	adc    ebp,DWORD PTR [ebx-0x3abe3ed8]
  414956:	popfw  
  414958:	ret    
  414959:	mov    dl,0xf5
  41495b:	ret    
  41495c:	push   cs
  41495d:	pusha  
  41495e:	(bad)  
  41495f:	mov    ebx,0xa5201aad
  414964:	mov    edi,0x9fd66808
  414969:	popf   
  41496a:	sahf   
  41496b:	das    
  41496c:	mov    DWORD PTR [esi-0x3c],edx
  41496f:	inc    edi
  414970:	mov    bh,0xee
  414972:	stos   DWORD PTR es:[edi],eax
  414973:	mov    ebp,0xacab4ee8
  414978:	fimul  DWORD PTR [esp+ebx*2+0x1a3cf072]
  41497f:	xor    DWORD PTR [ecx+0x45],edi
  414982:	mov    dl,0x11
  414984:	dec    edx
  414985:	jge    0x4149f4
  414987:	popa   
  414988:	stos   DWORD PTR es:[edi],eax
  414989:	mov    cl,0xa7
  41498b:	and    bl,al
  41498d:	xor    ecx,DWORD PTR [ebx-0x94baae1]
  414993:	mov    ds:0xaa2ed610,al
  414998:	ja     0x41499e
  41499a:	idiv   eax
  41499c:	xchg   esp,eax
  41499d:	jae    0x414951
  41499f:	call   0x84ba:0x284ab36f
  4149a6:	clc    
  4149a7:	adc    eax,0xcf9fc739
  4149ac:	jge    0x4149c7
  4149ae:	add    BYTE PTR [esi-0x26b14eac],al
  4149b4:	repnz dec eax
  4149b6:	mov    eax,ds:0xcb9523c9
  4149bb:	jbe    0x414954
  4149bd:	dec    edi
  4149be:	mov    eax,DWORD PTR [ecx-0x6590d38b]
  4149c4:	jbe    0x414993
  4149c6:	push   ss
  4149c7:	adc    eax,0x1193f47f
  4149cc:	not    BYTE PTR [ebx]
  4149ce:	push   esi
  4149cf:	mov    ds:0x1fc7150c,al
  4149d4:	cs ds pop ebx
  4149d7:	jae    0x4149fa
  4149d9:	mov    edx,0x64e0e668
  4149de:	mov    WORD PTR [ebx+edi*8],es
  4149e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149e2:	sbb    eax,0x9bf55b24
  4149e7:	xchg   BYTE PTR [esi+edi*1],dh
  4149ea:	out    0xa4,al
  4149ec:	add    DWORD PTR [edi-0x786ed336],0x81d980c9
  4149f6:	neg    cl
  4149f8:	mov    bl,0xd0
  4149fa:	sub    ch,BYTE PTR [ecx]
  4149fc:	sbb    eax,0x76741501
  414a01:	or     cl,dh
  414a03:	mov    cl,0xef
  414a05:	push   esi
  414a06:	mov    DWORD PTR [edi],0xabcb297a
  414a0c:	nop
  414a0d:	pushf  
  414a0e:	test   esi,ebp
  414a10:	pusha  
  414a11:	pop    ebx
  414a12:	(bad)  
  414a13:	pop    ebx
  414a14:	or     BYTE PTR [ebx],ah
  414a16:	pop    ds
  414a17:	inc    ebp
  414a18:	ins    DWORD PTR es:[edi],dx
  414a19:	mov    DWORD PTR [eax-0x55],ebp
  414a1c:	pop    ds
  414a1d:	int3   
  414a1e:	in     al,dx
  414a1f:	test   al,0xa3
  414a21:	ror    DWORD PTR [esi+edx*8+0x7],0xad
  414a26:	inc    esi
  414a27:	addr16 mov bl,0x91
  414a2a:	mov    al,ds:0x79702575
  414a2f:	loop   0x414a69
  414a31:	in     al,dx
  414a32:	shl    DWORD PTR [edi-0x1691850e],1
  414a38:	imul   edx,ebp,0x18
  414a3b:	inc    ebx
  414a3c:	sub    ah,bl
  414a3e:	xchg   edx,eax
  414a3f:	and    ch,dl
  414a41:	sahf   
  414a42:	sbb    edx,0xc3c5970c
  414a48:	test   eax,0xb7a4847f
  414a4d:	lods   al,BYTE PTR ds:[esi]
  414a4e:	int    0xce
  414a50:	and    bh,BYTE PTR ds:0x82facc5f
  414a56:	in     eax,dx
  414a57:	pop    esp
  414a58:	ins    DWORD PTR es:[edi],dx
  414a59:	in     eax,dx
  414a5a:	mov    BYTE PTR ds:0xb99ab94e,ch
  414a60:	cmp    ebp,DWORD PTR [esp+eax*1+0xe]
  414a64:	rcl    BYTE PTR [esi-0x2689c2a],cl
  414a6a:	xchg   edi,ecx
  414a6c:	jmp    0xe33a:0x5809e5da
  414a73:	fs ret 
  414a75:	in     eax,dx
  414a76:	push   0xcb157c8b
  414a7b:	ror    dh,cl
  414a7d:	xor    ecx,edi
  414a7f:	jge    0x414a94
  414a81:	pusha  
  414a82:	push   ds
  414a83:	mov    ds:0xa5211a42,al
  414a88:	rcl    BYTE PTR [ecx],cl
  414a8a:	popa   
  414a8b:	mov    ebp,0x64bd4d43
  414a90:	lea    ebp,[edx-0x57]
  414a93:	xor    ecx,DWORD PTR [edx]
  414a95:	push   es
  414a96:	push   0xd858bda4
  414a9b:	push   edi
  414a9c:	nop
  414a9d:	inc    ebp
  414a9e:	cwde   
  414a9f:	cwde   
  414aa0:	es xor esi,0x1c
  414aa4:	mov    ecx,0xb5ba6be6
  414aa9:	ja     0x414a60
  414aab:	jge    0x414abb
  414aad:	adc    ebp,DWORD PTR [esi-0x16feaf33]
  414ab3:	scas   eax,DWORD PTR es:[edi]
  414ab4:	aaa    
  414ab5:	or     eax,0xe427d4ab
  414aba:	add    DWORD PTR [edi-0x6f],eax
  414abd:	push   ss
  414abe:	neg    ebx
  414ac0:	rcr    bl,0xb8
  414ac3:	jmp    0x414aa7
  414ac5:	je     0x414ac2
  414ac7:	cmp    BYTE PTR [edi+edx*1],bl
  414aca:	stc    
  414acb:	mov    al,ds:0x1efb16e6
  414ad0:	arpl   WORD PTR [ebx-0x5d3b9516],ax
  414ad6:	sahf   
  414ad7:	xlat   BYTE PTR ds:[ebx]
  414ad8:	and    al,0x7
  414ada:	cmp    esi,DWORD PTR [ecx+ebp*8+0xf]
  414ade:	das    
  414adf:	inc    esp
  414ae0:	repnz cwde 
  414ae2:	sbb    al,0xbf
  414ae4:	cli    
  414ae5:	xor    DWORD PTR [edi+0x72],0x24251188
  414aec:	cmp    eax,0x637072b4
  414af1:	into   
  414af2:	mov    ch,0xd9
  414af4:	sub    BYTE PTR [eax+0x7],al
  414af7:	mov    esp,0xc8edd511
  414afc:	add    edi,DWORD PTR [ecx]
  414afe:	and    eax,0xfac3103c
  414b03:	and    BYTE PTR [edx],bl
  414b05:	pop    ebp
  414b06:	jne    0x414b2b
  414b08:	jge    0x414a8e
  414b0a:	retf   
  414b0b:	push   ds
  414b0c:	(bad)  
  414b0f:	(bad)  
  414b10:	push   ss
  414b11:	fcmovb st,st(5)
  414b13:	xchg   esi,eax
  414b14:	cs es aad 0x47
  414b18:	gs cmp al,0x8d
  414b1b:	adc    edi,edi
  414b1d:	or     BYTE PTR [edi-0x40],ah
  414b20:	shl    DWORD PTR [edi+0x6d9defc1],1
  414b26:	aas    
  414b27:	mov    al,ds:0x6bd2baec
  414b2c:	or     BYTE PTR [eax],ah
  414b2e:	ja     0x414b65
  414b30:	push   ds
  414b31:	cmp    al,0x87
  414b33:	push   ebx
  414b34:	test   al,0x1f
  414b36:	ss clc 
  414b38:	jl     0x414b10
  414b3a:	push   ss
  414b3b:	pop    ecx
  414b3c:	cld    
  414b3d:	cld    
  414b3e:	jo     0x414b47
  414b40:	test   al,0x89
  414b42:	jb     0x414af7
  414b44:	jne    0x414b27
  414b46:	fld    TBYTE PTR [ebx+0x4a]
  414b49:	imul   edi,DWORD PTR [ebp-0x2d],0x2cf60a46
  414b50:	ror    DWORD PTR [ebp+0x70],1
  414b53:	cmc    
  414b54:	push   cs
  414b55:	(bad)  
  414b56:	fcom   DWORD PTR [esi+0x73]
  414b59:	pop    esi
  414b5a:	xor    al,bh
  414b5c:	out    dx,eax
  414b5d:	pop    ss
  414b5e:	jle    0x414bcc
  414b60:	pop    es
  414b61:	dec    esp
  414b62:	sahf   
  414b63:	scas   eax,DWORD PTR es:[edi]
  414b64:	push   0x2d117359
  414b69:	(bad)  
  414b6a:	mov    eax,0xdd3e2f21
  414b6f:	mov    esp,0x7c9ee1d2
  414b74:	adc    ah,BYTE PTR [edx+ecx*4-0x5104b8c8]
  414b7b:	retf   
  414b7c:	clc    
  414b7d:	mov    ch,0x7e
  414b7f:	push   ss
  414b80:	sub    al,0x7b
  414b82:	push   ebp
  414b83:	sub    eax,0x1537e3de
  414b88:	pushf  
  414b89:	add    BYTE PTR [esp+esi*4-0x4f],dl
  414b8d:	and    eax,0x2853a6da
  414b92:	and    al,0x52
  414b94:	and    al,0xcc
  414b96:	div    DWORD PTR [ebx+0x160f9dd2]
  414b9c:	add    eax,0x4ea89e97
  414ba1:	jns    0x414b8d
  414ba3:	aas    
  414ba4:	cs jns 0x414b82
  414ba7:	mov    ah,0x91
  414ba9:	jne    0x414bd7
  414bab:	pop    edi
  414bac:	lods   eax,DWORD PTR ds:[esi]
  414bad:	lock imul ecx,DWORD PTR [ecx],0xda957325
  414bb4:	cmp    ebp,eax
  414bb6:	mov    ds:0x5f31cb11,eax
  414bbb:	cmp    eax,edi
  414bbd:	es icebp 
  414bbf:	ins    BYTE PTR es:[edi],dx
  414bc0:	inc    ebx
  414bc1:	stos   BYTE PTR es:[edi],al
  414bc2:	es scas eax,DWORD PTR es:[edi]
  414bc4:	push   edx
  414bc5:	xor    DWORD PTR [edx+0x55],0x4
  414bc9:	(bad)
  414bcd:	xchg   ebp,eax
  414bce:	mov    BYTE PTR [ecx+0x6e],al
  414bd1:	xor    ah,BYTE PTR [edx]
  414bd3:	int3   
  414bd4:	add    bh,BYTE PTR [ebp+eax*2-0x45]
  414bd8:	aas    
  414bd9:	outs   dx,DWORD PTR ds:[esi]
  414bda:	(bad)  
  414bdb:	pushf  
  414bdc:	test   al,0xd5
  414bde:	cmp    eax,0xa0adce59
  414be3:	sub    al,0x2
  414be5:	lods   al,BYTE PTR ds:[esi]
  414be6:	data16 mov dh,0xa8
  414be9:	push   edx
  414bea:	fyl2x  
  414bec:	cld    
  414bed:	adc    edi,DWORD PTR [ebx]
  414bef:	icebp  
  414bf0:	imul   ecx,DWORD PTR [ebx-0x23],0x23b8f7f2
  414bf7:	pop    es
  414bf8:	data16 jg 0x414c6e
  414bfb:	ins    BYTE PTR es:[edi],dx
  414bfc:	dec    esp
  414bfd:	data16 sbb al,0xe6
  414c00:	loopne 0x414bf4
  414c02:	loop   0x414c53
  414c04:	les    esi,FWORD PTR [esi]
  414c06:	mov    al,0x4b
  414c08:	cwde   
  414c09:	and    ch,BYTE PTR [esi]
  414c0b:	call   FWORD PTR [ecx+0x13]
  414c0e:	and    DWORD PTR [ecx-0x20],esi
  414c11:	jmp    0x414c45
  414c13:	mov    ebx,0x25898c8e
  414c18:	into   
  414c19:	in     eax,dx
  414c1a:	inc    edi
  414c1b:	mov    edi,0xe6d83c6a
  414c20:	pop    ecx
  414c21:	addr16 mov dl,al
  414c24:	xchg   edx,eax
  414c25:	pop    es
  414c26:	adc    ebp,edi
  414c28:	cmp    ebp,DWORD PTR [ebx-0x76]
  414c2b:	daa    
  414c2c:	pop    edi
  414c2d:	push   edx
  414c2e:	aas    
  414c2f:	mov    BYTE PTR [ebx],dl
  414c31:	idiv   DWORD PTR [esp+esi*2-0xaf15aaa]
  414c38:	mov    bl,0xc4
  414c3a:	cwde   
  414c3b:	mov    dh,0x32
  414c3d:	and    ch,BYTE PTR ds:0xb529102e
  414c43:	adc    ah,BYTE PTR ds:0x51f35729
  414c49:	les    ebp,FWORD PTR [ebx]
  414c4b:	aad    0x2d
  414c4d:	fcmovnb st,st(5)
  414c4f:	out    dx,al
  414c50:	push   ebx
  414c51:	sbb    DWORD PTR [ebp-0x75113fcf],esi
  414c57:	repnz adc WORD PTR ds:0x8ec5e2a0,0xff97
  414c61:	xor    esp,ecx
  414c63:	mov    cl,0xb2
  414c65:	dec    esp
  414c66:	(bad)  
  414c67:	fist   WORD PTR [ebx]
  414c69:	push   ecx
  414c6a:	rcr    DWORD PTR [esi+edx*4],cl
  414c6d:	mov    eax,0x9634a194
  414c72:	xchg   edx,eax
  414c73:	shl    dh,0xaf
  414c76:	nop
  414c77:	xchg   ebp,eax
  414c78:	or     al,bh
  414c7a:	cmp    BYTE PTR [ebp-0x53f1c1a3],ch
  414c80:	xor    ecx,DWORD PTR [eax]
  414c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c83:	leave  
  414c84:	pop    esi
  414c85:	jp     0x414d04
  414c87:	mov    DWORD PTR ds:0xb6562007,esp
  414c8d:	adc    al,0x56
  414c8f:	out    0xd0,eax
  414c91:	mov    ds:0x3cf9a120,eax
  414c96:	or     ecx,eax
  414c98:	sbb    al,0x55
  414c9a:	mov    esi,0x387c38ab
  414c9f:	sub    edx,ebp
  414ca1:	mov    cl,0x7b
  414ca3:	jmp    0x414c31
  414ca5:	daa    
  414ca6:	sub    dl,ch
  414ca8:	fcom   QWORD PTR [ecx+ebx*4]
  414cab:	adc    eax,0x90c7ccb
  414cb0:	push   edi
  414cb1:	sbb    ebx,ebp
  414cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb4:	mov    ds:0x63e93e31,eax
  414cb9:	lahf   
  414cba:	shr    DWORD PTR [edi+ecx*2],cl
  414cbd:	add    DWORD PTR [ebx+edx*8],ebx
  414cc0:	inc    esi
  414cc1:	adc    eax,DWORD PTR [esi-0x39d178f1]
  414cc7:	aad    0x60
  414cc9:	in     al,dx
  414cca:	pop    ebx
  414ccb:	and    al,0xe1
  414ccd:	mov    BYTE PTR [edx],cl
  414ccf:	cdq    
  414cd0:	popf   
  414cd1:	call   DWORD PTR [eax-0x54]
  414cd4:	daa    
  414cd5:	xchg   BYTE PTR [eax+0x5],cl
  414cd8:	add    al,BYTE PTR [eax]
  414cda:	xlat   BYTE PTR es:[ebx]
  414cdc:	je     0x414cdb
  414cde:	sub    esp,ebp
  414ce0:	pop    ecx
  414ce1:	ds scas al,BYTE PTR es:[edi]
  414ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce4:	call   0x14bf:0x5115ed7e
  414ceb:	enter  0x87d2,0xf
  414cef:	clc    
  414cf0:	add    BYTE PTR [ebx],bl
  414cf2:	ret    0x4920
  414cf5:	outs   dx,DWORD PTR ds:[esi]
  414cf6:	test   al,0x3c
  414cf8:	lahf   
  414cf9:	ss (bad) 
  414cfb:	ftst   
  414cfd:	rol    DWORD PTR [edi+0x25],cl
  414d00:	jo     0x414cd1
  414d02:	dec    eax
  414d03:	push   eax
  414d04:	fcmovu st,st(0)
  414d06:	frstor [edx-0x36]
  414d09:	out    0xba,eax
  414d0b:	adc    ah,BYTE PTR [ebx+0x2e]
  414d0e:	cmovnp edx,DWORD PTR [ecx-0x7b]
  414d12:	jb     0x414cd1
  414d14:	jp     0x414d8c
  414d16:	bound  ebp,QWORD PTR es:[eax+0x2a679717]
  414d1d:	dec    edi
  414d1e:	and    eax,0x242fdad1
  414d23:	nop
  414d24:	mov    dl,0x37
  414d26:	js     0x414d0c
  414d28:	ret    
  414d29:	inc    ecx
  414d2a:	mov    bl,0x2f
  414d2c:	xor    al,0x7c
  414d2e:	fcomp  DWORD PTR [edi-0x20]
  414d31:	dec    edi
  414d32:	enter  0x81d9,0xf6
  414d36:	cmp    al,0x6d
  414d38:	and    bh,BYTE PTR [ebp+0x1fa4dade]
  414d3e:	ret    0xf3cb
  414d41:	push   ss
  414d42:	pop    eax
  414d43:	lods   al,BYTE PTR ds:[esi]
  414d44:	cwde   
  414d45:	ret    
  414d46:	cmp    esi,DWORD PTR [ecx-0x5569b4b4]
  414d4c:	dec    edi
  414d4d:	icebp  
  414d4e:	adc    eax,0x9279fec8
  414d53:	clc    
  414d54:	imul   edx,DWORD PTR [esi+edx*2-0x6f],0x49b4689a
  414d5c:	and    al,0x31
  414d5e:	xchg   edx,eax
  414d5f:	ret    0xa2f0
  414d62:	mov    cs,ebx
  414d64:	push   0xdaabf40a
  414d69:	nop
  414d6a:	or     al,0x8
  414d6c:	sbb    eax,0xef93939d
  414d71:	jle    0x414d7e
  414d73:	lods   eax,DWORD PTR ds:[esi]
  414d74:	out    dx,al
  414d75:	sets   BYTE PTR ds:0x29fdc1a3
  414d7c:	push   eax
  414d7d:	fcom   DWORD PTR [esp+ecx*4+0x5ece53c0]
  414d84:	pop    ds
  414d85:	xor    esi,DWORD PTR [ebp+0x71]
  414d88:	add    al,0x3b
  414d8a:	into   
  414d8b:	mov    ebp,0x95e99459
  414d90:	or     eax,0x89fec7eb
  414d95:	pop    ss
  414d96:	pop    ss
  414d97:	or     BYTE PTR [ebx-0xff605bc],cl
  414d9d:	pop    edi
  414d9e:	bound  ebx,QWORD PTR [ebx-0x2f]
  414da1:	stc    
  414da2:	or     BYTE PTR [ebx+edx*8+0x19],cl
  414da6:	dec    edx
  414da7:	fisub  WORD PTR [eax]
  414da9:	xor    BYTE PTR [di+0x414a],0xa4
  414daf:	mov    ebx,0x46329026
  414db4:	mov    bh,0x86
  414db6:	jg     0x414df9
  414db8:	dec    edx
  414db9:	xchg   DWORD PTR ss:[eax],esi
  414dbc:	popa   
  414dbd:	xor    BYTE PTR [edi+eiz*4-0x1c6ab737],cl
  414dc4:	mov    cl,0xe6
  414dc6:	pusha  
  414dc7:	clc    
  414dc8:	jmp    0xe29:0x7eeb08bb
  414dcf:	jecxz  0x414ddb
  414dd1:	or     al,0x95
  414dd3:	pop    ss
  414dd4:	xchg   edx,eax
  414dd5:	xchg   edi,eax
  414dd6:	mul    ebp
  414dd8:	adc    al,0xae
  414dda:	iret   
  414ddb:	push   ebx
  414ddc:	lock std 
  414dde:	adc    eax,0x27dcb3e6
  414de3:	sub    bh,ah
  414de5:	fs pusha 
  414de7:	iret   
  414de8:	dec    ecx
  414de9:	rol    BYTE PTR [ebx-0x72],1
  414dec:	mov    ebx,0x45bab170
  414df1:	xchg   DWORD PTR [edi+0x5f],esp
  414df4:	rcr    DWORD PTR ds:0xa66e3acc,1
  414dfa:	repz inc ecx
  414dfc:	dec    ebp
  414dfd:	inc    edi
  414dfe:	mov    cl,0x2a
  414e00:	pusha  
  414e01:	mov    ebp,ebp
  414e03:	loope  0x414e4b
  414e05:	xchg   ebx,eax
  414e06:	arpl   dx,si
  414e08:	sbb    eax,0xf523bb89
  414e0d:	sub    al,0x35
  414e0f:	mov    dh,0x0
  414e11:	int    0x4b
  414e13:	mov    ebp,0x1db57b62
  414e18:	rcr    DWORD PTR [ebp+0x1b],cl
  414e1b:	sbb    BYTE PTR [esi+0x5fde92ab],al
  414e21:	js     0x414e67
  414e23:	xor    DWORD PTR [ebp+0x8f582e9],esp
  414e29:	fistp  WORD PTR [ebp-0x7d]
  414e2c:	mov    bl,0xff
  414e2e:	add    al,BYTE PTR [edi]
  414e30:	add    eax,0xc066e33e
  414e35:	(bad)  
  414e36:	loope  0x414de0
  414e38:	mov    ecx,0xf53d427e
  414e3d:	gs int 0xc6
  414e40:	out    0x8e,eax
  414e42:	icebp  
  414e43:	js     0x414e97
  414e45:	mov    ah,0xb3
  414e47:	adc    eax,DWORD PTR [ebx]
  414e49:	loope  0x414e6b
  414e4b:	jmp    FWORD PTR [ecx-0x7a888149]
  414e51:	int    0x1f
  414e53:	xchg   edi,esi
  414e55:	inc    ebx
  414e56:	add    ebx,ebx
  414e58:	test   ecx,0x43572601
  414e5e:	js     0x414e6a
  414e60:	ins    DWORD PTR es:[edi],dx
  414e61:	or     ch,bl
  414e63:	pop    edx
  414e64:	add    ch,BYTE PTR [eax]
  414e66:	jl     0x414ecb
  414e68:	dec    ecx
  414e69:	dec    ecx
  414e6a:	fiadd  WORD PTR [edi-0x2acbf672]
  414e70:	jg     0x414e2c
  414e72:	neg    DWORD PTR [ebp-0x2e]
  414e75:	push   edx
  414e76:	dec    ebx
  414e77:	jp     0x414e7e
  414e79:	dec    eax
  414e7a:	(bad)  
  414e7c:	data16 cmp al,bh
  414e7f:	mov    al,0x9d
  414e81:	out    dx,al
  414e82:	mov    al,ds:0x4f5b4a77
  414e87:	enter  0x4910,0x20
  414e8b:	mov    edx,DWORD PTR [esi]
  414e8d:	call   0x8c10:0x92b0da8f
  414e94:	add    dl,BYTE PTR [eax+0x8]
  414e97:	ss ret 
  414e99:	popa   
  414e9a:	pop    edx
  414e9b:	push   0xc429aa7
  414ea0:	pop    ss
  414ea1:	mov    eax,0xce2cb04e
  414ea6:	mov    al,ds:0xaf51b463
  414eab:	lahf   
  414eac:	test   al,dl
  414eae:	lods   eax,DWORD PTR ds:[esi]
  414eaf:	xor    eax,0x47fba4f6
  414eb4:	inc    esp
  414eb5:	test   DWORD PTR [ebx+0x4e656ed],esp
  414ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebc:	mov    esi,0x151ed14e
  414ec1:	or     BYTE PTR [ebx-0x567f9dd7],0x62
  414ec8:	adc    ebx,ebp
  414eca:	inc    eax
  414ecb:	inc    esi
  414ecc:	fisttp DWORD PTR [ebp+0x1272bb4f]
  414ed2:	retf   0xd05b
  414ed5:	int3   
  414ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed7:	mov    edx,0x8895134c
  414edc:	jns    0x414f4e
  414ede:	fild   DWORD PTR [esi-0x80a1c91]
  414ee4:	call   0x9204b834
  414ee9:	add    eax,0x40d3dde2
  414eee:	div    ebp
  414ef0:	jge    0x414eff
  414ef2:	add    eax,0xdd1b076a
  414ef7:	sub    DWORD PTR [bp-0x3a08],esi
  414efc:	mov    ebx,0x87a7bbe3
  414f01:	cld    
  414f02:	(bad)  
  414f05:	mov    dl,0x2e
  414f07:	rcr    DWORD PTR [ebx],cl
  414f09:	aad    0xc3
  414f0b:	int    0x4f
  414f0d:	sub    BYTE PTR [ebx+0x54],dh
  414f10:	sbb    eax,0xf07e8e21
  414f15:	(bad)  
  414f16:	(bad)  
  414f17:	pusha  
  414f18:	add    eax,DWORD PTR [esi]
  414f1a:	inc    edi
  414f1b:	or     eax,0x5c88eec2
  414f20:	es (bad) 
  414f23:	jno    0x414f41
  414f25:	(bad)  
  414f26:	stc    
  414f27:	sub    DWORD PTR [edi+esi*2+0x740c1272],ebp
  414f2e:	(bad)  
  414f30:	neg    esi
  414f32:	lods   al,BYTE PTR ds:[esi]
  414f33:	push   es
  414f34:	popa   
  414f35:	add    eax,0x66ff539b
  414f3a:	int3   
  414f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3c:	xchg   ebp,eax
  414f3d:	dec    eax
  414f3e:	cwde   
  414f3f:	outs   dx,BYTE PTR ds:[esi]
  414f40:	icebp  
  414f41:	stos   DWORD PTR es:[edi],eax
  414f42:	ds in  al,dx
  414f44:	jmp    0x6c3ebff7
  414f49:	mov    ebx,0xd6bd7eb6
  414f4e:	jbe    0x414f40
  414f50:	leave  
  414f51:	retf   
  414f52:	adc    dh,bh
  414f54:	popa   
  414f55:	push   es
  414f56:	iret   
  414f57:	push   ecx
  414f58:	out    0x14,eax
  414f5a:	adc    eax,0x56be0d28
  414f5f:	jne    0x414f33
  414f61:	pushf  
  414f62:	imul   ecx,DWORD PTR ss:[esi],0x46
  414f66:	add    al,0x26
  414f68:	cmpxchg DWORD PTR [eax+0x14],esi
  414f6c:	jg     0x414fa1
  414f6e:	pop    eax
  414f6f:	stos   BYTE PTR es:[edi],al
  414f70:	pop    edi
  414f71:	retf   
  414f72:	sub    edi,eax
  414f74:	mov    ebp,0x9b9a651a
  414f79:	xchg   DWORD PTR [ecx+eiz*4+0x60338397],eax
  414f80:	pop    eax
  414f81:	or     eax,0xd1ee3fa9
  414f86:	jle    0x414f55
  414f88:	fdiv   DWORD PTR [edx+0x771acbf8]
  414f8e:	loop   0x415005
  414f90:	sbb    al,0xce
  414f92:	comiss xmm5,DWORD PTR [ebp-0x4cb0cb69]
  414f99:	in     eax,dx
  414f9a:	out    0x1e,al
  414f9c:	mov    ch,0x3b
  414f9e:	fistp  WORD PTR [ebx+0x1c]
  414fa1:	dec    esi
  414fa2:	imul   eax,DWORD PTR [edi],0xad20fc6c
  414fa8:	lods   eax,DWORD PTR ds:[esi]
  414fa9:	mov    edi,0x7f0fbfc6
  414fae:	add    edx,DWORD PTR [edx]
  414fb0:	mov    al,0xe0
  414fb2:	push   ebp
  414fb3:	gs inc eax
  414fb5:	dec    esp
  414fb6:	aaa    
  414fb7:	jo     0x414fc8
  414fb9:	int3   
  414fba:	enter  0x28,0xe7
  414fbe:	adc    BYTE PTR ds:0x18b863fa,0xc1
  414fc5:	jne    0x414fcf
  414fc7:	out    dx,al
  414fc8:	gs call 0x191ae042
  414fce:	mov    bl,0xcf
  414fd0:	jmp    0x174:0xe9d46beb
  414fd7:	pop    ecx
  414fd8:	scas   al,BYTE PTR es:[edi]
  414fd9:	ret    0x699f
  414fdc:	(bad)  
  414fdd:	into   
  414fde:	fldz   
  414fe0:	jb     0x414fef
  414fe2:	push   0xffffffec
  414fe4:	enter  0xc70c,0xea
  414fe8:	push   cs
  414fe9:	adc    eax,0x4e71279e
  414fee:	cs xchg ebx,eax
  414ff0:	sbb    al,0xac
  414ff2:	pop    es
  414ff3:	fbld   TBYTE PTR [edx]
  414ff5:	add    eax,0xa9614bf3
  414ffa:	mov    ds:0x68293b92,eax
  414fff:	sub    DWORD PTR [edi+eiz*4-0x28aa7750],ecx
  415006:	jnp    0x415031
  415008:	ror    DWORD PTR [edx-0x182cee16],1
  41500e:	aad    0x39
  415010:	sti    
  415011:	and    BYTE PTR [esi-0x1c1b991d],ah
  415017:	adc    eax,0xa27cae9f
  41501c:	ds call 0x92b9:0xc581bec9
  415024:	and    ah,ch
  415026:	ds aas 
  415028:	dec    ecx
  415029:	jl     0x41500d
  41502b:	xlat   BYTE PTR ds:[ebx]
  41502c:	fld    st(0)
  41502e:	xchg   BYTE PTR [ebp+0x557bfc81],al
  415034:	add    eax,0xd753eafd
  415039:	inc    esp
  41503a:	sahf   
  41503b:	lock pop es
  41503d:	fstp   QWORD PTR [ebx+0x7e8c9f57]
  415043:	rcr    DWORD PTR [ebp+0x838a04e],1
  415049:	dec    eax
  41504a:	out    0xd4,eax
  41504c:	lods   eax,DWORD PTR ds:[esi]
  41504d:	(bad)  [ecx+0x10]
  415050:	cmp    DWORD PTR [esi+0x3d],edi
  415053:	jmp    0x5e37229
  415058:	out    dx,al
  415059:	mov    esi,DWORD PTR [eax]
  41505b:	fbld   TBYTE PTR [eax+eiz*8+0x13]
  41505f:	mov    gs:0x173d54b6,eax
  415065:	dec    ebx
  415066:	push   ds
  415067:	mov    ch,0xaf
  415069:	ds or  al,0x99
  41506c:	rol    BYTE PTR [eax],0xc3
  41506f:	push   eax
  415070:	in     al,dx
  415071:	pop    eax
  415072:	jne    0x415050
  415074:	lds    ebp,FWORD PTR [edx+esi*2-0x18]
  415078:	fdivr  QWORD PTR [eax-0x76665111]
  41507e:	mov    ebx,0x91aa4fa3
  415083:	xchg   edi,eax
  415084:	int3   
  415085:	sbb    al,0x2
  415087:	arpl   bp,bx
  415089:	push   edi
  41508a:	sti    
  41508b:	repz rcr cl,cl
  41508e:	mov    al,ds:0xbd5c47da
  415093:	mov    ebx,0x557e24f9
  415098:	add    eax,0xfb06fe5e
  41509d:	inc    edi
  41509e:	dec    ebp
  41509f:	push   ecx
  4150a0:	lods   eax,DWORD PTR ds:[esi]
  4150a1:	dec    esp
  4150a2:	jno    0x4150a3
  4150a4:	jg     0x41510a
  4150a6:	mov    ch,0x48
  4150a8:	push   ebx
  4150a9:	sbb    al,0x0
  4150ab:	arpl   WORD PTR [ebx-0x4c83cec5],bx
  4150b1:	rcl    DWORD PTR [ecx+ecx*8+0x19b14633],0xb0
  4150b9:	mov    dh,0x3c
  4150bb:	addr16 mov eax,ds:0x730d
  4150bf:	xchg   esp,eax
  4150c0:	or     al,0x1e
  4150c2:	popf   
  4150c3:	popf   
  4150c4:	lods   al,BYTE PTR ds:[esi]
  4150c5:	int    0x5c
  4150c7:	adc    DWORD PTR [ebx+0x1d61d3f8],esp
  4150cd:	push   es
  4150ce:	inc    esp
  4150cf:	in     al,0xd4
  4150d1:	bnd jp 0x4150b4
  4150d4:	out    0xf6,eax
  4150d6:	xor    DWORD PTR [edx-0x3a],eax
  4150d9:	popa   
  4150da:	sub    BYTE PTR [edx-0x4],0x87
  4150de:	cwde   
  4150df:	bound  ecx,QWORD PTR [ebx+0x23f83952]
  4150e5:	retf   
  4150e6:	inc    edi
  4150e7:	inc    edi
  4150e8:	xor    eax,0x69edc259
  4150ed:	int    0x5e
  4150ef:	leave  
  4150f0:	call   edi
  4150f2:	dec    esp
  4150f3:	bound  edx,QWORD PTR [eax+esi*2-0x3c6b701b]
  4150fa:	pop    eax
  4150fb:	aad    0xfc
  4150fd:	js     0x41511f
  4150ff:	das    
  415100:	mov    cs,WORD PTR [ebp+0x45]
  415103:	test   BYTE PTR [esi+0x69612170],0x57
  41510a:	inc    esp
  41510b:	sbb    eax,0x1a62ef26
  415110:	xor    eax,0x860e0236
  415115:	dec    ebp
  415116:	and    ebp,ebp
  415118:	inc    esp
  415119:	sub    al,0x17
  41511b:	clc    
  41511c:	inc    eax
  41511d:	jp     0x41515f
  41511f:	add    BYTE PTR [esi-0x71],al
  415122:	sub    BYTE PTR [edx+0x26],0x99
  415126:	xchg   esp,eax
  415127:	cmp    bh,dh
  415129:	xchg   edi,eax
  41512a:	mov    cl,BYTE PTR [eax-0x46]
  41512d:	std    
  41512e:	stos   BYTE PTR es:[edi],al
  41512f:	out    0x64,eax
  415131:	jmp    0xc21106b7
  415136:	lods   eax,DWORD PTR ds:[esi]
  415137:	(bad)  
  415139:	test   eax,0x480c4ae7
  41513e:	imul   edi,DWORD PTR [edx+0xe],0xdc064c54
  415145:	jne    0x415182
  415147:	dec    ebx
  415148:	add    dh,0x5b
  41514b:	sub    DWORD PTR [ebx-0x4c],eax
  41514e:	cwde   
  41514f:	fcomi  st,st(6)
  415151:	push   ss
  415152:	loopne 0x4151ab
  415154:	lds    ebp,FWORD PTR [esi+eax*4]
  415157:	mov    ds:0x4253ae5b,al
  41515c:	dec    ecx
  41515d:	int3   
  41515e:	fbld   TBYTE PTR [eax+0x2b]
  415161:	push   eax
  415162:	daa    
  415163:	fcomp  st(5)
  415165:	cmp    DWORD PTR [ebp+0x3e],edx
  415168:	inc    edx
  415169:	push   edx
  41516a:	sahf   
  41516b:	aam    0x68
  41516d:	ins    BYTE PTR es:[edi],dx
  41516e:	jl     0x4151e2
  415170:	push   esp
  415171:	mov    dl,0x45
  415173:	mov    esp,DWORD PTR [eax-0xa]
  415176:	hlt    
  415177:	cmp    DWORD PTR [eax+0x24086b],0xffffffda
  41517e:	sbb    DWORD PTR [esi],0xcf6f328
  415184:	pop    ds
  415185:	inc    ebp
  415186:	fnstenv [ecx-0x17a4f05b]
  41518c:	scas   eax,DWORD PTR es:[edi]
  41518d:	sti    
  41518e:	dec    edx
  41518f:	scas   al,BYTE PTR es:[edi]
  415190:	sti    
  415191:	and    eax,0xf5267b5d
  415196:	test   BYTE PTR cs:[ebp+0x3a37d0c9],0x62
  41519e:	outs   dx,BYTE PTR ds:[esi]
  41519f:	cdq    
  4151a0:	pushf  
  4151a1:	fldenv [edx-0x74]
  4151a4:	cmp    esi,DWORD PTR [edx-0x7caecafa]
  4151aa:	inc    esi
  4151ab:	or     DWORD PTR [edx+0x6c3f8dee],edx
  4151b1:	(bad)  
  4151b2:	mov    ecx,0xd7bdff29
  4151b7:	dec    edi
  4151b8:	add    ch,BYTE PTR [ecx]
  4151ba:	cmc    
  4151bb:	sub    al,0x66
  4151bd:	(bad)
  4151c1:	in     al,dx
  4151c2:	lock test al,0xf8
  4151c6:	ror    edx,cl
  4151c8:	mov    ch,0xaa
  4151ca:	out    0xaf,al
  4151cc:	push   esi
  4151cd:	out    dx,eax
  4151ce:	imul   ebp,DWORD PTR [esp+ebx*8-0x70],0xd
  4151d3:	sub    al,0x46
  4151d5:	lds    eax,FWORD PTR [edi+0x3e7a3118]
  4151db:	sub    esi,edi
  4151dd:	(bad)
  4151e0:	push   ds
  4151e1:	fs mov dh,0x4
  4151e4:	aam    0x53
  4151e6:	(bad)  
  4151e7:	(bad)  
  4151e8:	push   eax
  4151e9:	(bad)  
  4151ea:	or     DWORD PTR fs:[ecx],ebp
  4151ed:	je     0x4151be
  4151ef:	mov    edi,?
  4151f1:	mov    cl,0x52
  4151f3:	mov    esi,DWORD PTR [edi]
  4151f5:	fstp   DWORD PTR [esi-0x2779f8f5]
  4151fb:	xor    BYTE PTR [edx+0x34],0x56
  4151ff:	inc    esp
  415200:	fbld   TBYTE PTR [edi+eax*2-0x16]
  415204:	xchg   ebx,eax
  415205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415206:	sahf   
  415207:	test   bh,bl
  415209:	nop
  41520a:	mov    esp,0xe8ebb09f
  41520f:	loopne 0x41521b
  415211:	xlat   BYTE PTR ds:[ebx]
  415212:	push   edx
  415213:	pushf  
  415214:	pop    ebp
  415215:	xor    BYTE PTR [edi],0xa1
  415218:	std    
  415219:	and    BYTE PTR [eax-0x78],bh
  41521c:	dec    esp
  41521d:	mov    ch,0xc5
  41521f:	mov    dh,0x97
  415221:	into   
  415222:	ja     0x4151ec
  415224:	xor    eax,0xba93a03
  415229:	pop    ecx
  41522a:	push   ebp
  41522b:	and    DWORD PTR [ebx-0x59],esp
  41522e:	int    0x45
  415230:	xchg   DWORD PTR [eax+0x367d67e8],eax
  415236:	pop    ss
  415237:	ja     0x4151dc
  415239:	cmp    ecx,DWORD PTR [eax+ecx*2-0x66f2b5b8]
  415240:	pop    ss
  415241:	aam    0xcb
  415243:	pop    ds
  415244:	inc    esi
  415245:	add    BYTE PTR [ebx+0x69],dl
  415248:	mov    dl,0x32
  41524a:	mov    bh,BYTE PTR [ecx-0x6e]
  41524d:	add    ebp,DWORD PTR [ecx-0x22c1c63a]
  415253:	jg     0x4152ae
  415255:	adc    dl,BYTE PTR [edi+0x6cbb597f]
  41525b:	mov    bl,0xb1
  41525d:	add    edi,DWORD PTR ds:0x80d9c15f
  415263:	jne    0x415297
  415265:	jmp    0x4151f1
  415267:	sbb    al,0x6f
  415269:	enter  0x696d,0x79
  41526d:	add    ch,BYTE PTR [edx+0x3fb613ff]
  415273:	lods   al,BYTE PTR ds:[esi]
  415274:	add    bl,0xe7
  415277:	fwait
  415278:	adc    edi,DWORD PTR [ebx]
  41527a:	hlt    
  41527b:	retf   0x56b3
  41527e:	mov    eax,ds:0x9da592ee
  415283:	push   ebp
  415284:	jno    0x4152a5
  415286:	cld    
  415287:	add    eax,0x67a3b33f
  41528c:	adc    al,0x28
  41528e:	int3   
  41528f:	dec    ebx
  415290:	xchg   BYTE PTR [eax],dh
  415292:	jae    0x415301
  415294:	mov    WORD PTR [edi],ds
  415296:	and    DWORD PTR [ebx-0x400f45e],esp
  41529c:	add    eax,0xb3323636
  4152a1:	mov    al,ds:0xac16d76b
  4152a6:	mov    edi,0x9d17ca0f
  4152ab:	int    0xa2
  4152ad:	adc    eax,0x46180118
  4152b2:	aas    
  4152b3:	sbb    BYTE PTR [edx],0x9e
  4152b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b7:	dec    ebp
  4152b8:	pop    edx
  4152b9:	leave  
  4152ba:	jp     0x415277
  4152bc:	adc    dl,BYTE PTR [edi+0x115c8d13]
  4152c2:	adc    edx,eax
  4152c4:	and    DWORD PTR [esi+0x44],esi
  4152c7:	in     eax,0x39
  4152c9:	push   es
  4152ca:	in     eax,dx
  4152cb:	sbb    ch,BYTE PTR [edi+ecx*1+0x12]
  4152cf:	pop    es
  4152d0:	mov    edi,0x72f1ef23
  4152d5:	retf   0x9a1e
  4152d8:	add    DWORD PTR [edx+0x21],edi
  4152db:	lock ja 0x415309
  4152de:	bnd jl 0x41526b
  4152e1:	das    
  4152e2:	pop    ebx
  4152e3:	call   0x737c:0x9b104301
  4152ea:	sub    ebx,esi
  4152ec:	aad    0x5a
  4152ee:	(bad)  
  4152ef:	mov    dl,0xea
  4152f1:	or     al,0xbb
  4152f3:	(bad)  
  4152f4:	daa    
  4152f5:	das    
  4152f6:	test   DWORD PTR [ecx+ebx*1+0x43a6d603],0xdf1c948e
  415301:	stos   DWORD PTR es:[edi],eax
  415302:	xchg   esp,eax
  415303:	loopne 0x41528c
  415305:	jmp    0x8a31:0xc6a84d61
  41530c:	push   ss
  41530d:	cmp    eax,0x171c927a
  415312:	aad    0x51
  415314:	xor    ebx,DWORD PTR [ebx]
  415316:	pop    ebp
  415317:	mov    BYTE PTR [eax+edx*4],ch
  41531a:	xor    BYTE PTR [ebp-0x13741e61],0x32
  415321:	adc    eax,0x9d98f442
  415326:	ror    DWORD PTR [esp+esi*2+0x1d],1
  41532a:	(bad)  
  41532b:	pop    esp
  41532c:	or     BYTE PTR [eax-0x3f],cl
  41532f:	jl     0x4152fe
  415331:	xor    BYTE PTR [edx],bh
  415333:	mov    al,ds:0x4f15c627
  415338:	dec    esi
  415339:	or     esi,esp
  41533b:	pushf  
  41533c:	jo     0x4153a4
  41533e:	mov    ecx,0x3e9bc897
  415343:	jns    0x415305
  415345:	jb     0x4153a9
  415347:	loope  0x415388
  415349:	popf   
  41534a:	repnz push 0xa95cf123
  415350:	je     0x4dc5f01
  415356:	sub    al,0x1f
  415358:	repz les ebx,FWORD PTR [ebx+0x8b977ec]
  41535f:	mov    esi,0x5a9dc203
  415364:	mov    al,0xf4
  415366:	out    dx,eax
  415367:	sub    edx,DWORD PTR [edx+0x66]
  41536a:	cmp    al,al
  41536c:	mov    ?,WORD PTR [ebp+0x74]
  41536f:	stc    
  415370:	ins    DWORD PTR es:[edi],dx
  415371:	loopne 0x41530f
  415373:	push   cs
  415374:	mov    dl,0x64
  415376:	rcr    DWORD PTR ds:0x9fd99353,cl
  41537c:	loop   0x415394
  41537e:	loopne 0x41532e
  415380:	ins    BYTE PTR es:[edi],dx
  415381:	jge    0x4153e3
  415383:	scas   al,BYTE PTR es:[edi]
  415384:	ret    
  415385:	into   
  415386:	stos   BYTE PTR es:[edi],al
  415387:	jl     0x4153b1
  415389:	or     BYTE PTR [edx],al
  41538b:	and    dl,dl
  41538d:	sbb    eax,DWORD PTR [edi+ecx*4+0x53]
  415391:	xchg   DWORD PTR [ecx+0xb],ecx
  415394:	(bad)  
  415395:	xchg   ecx,eax
  415396:	in     al,0x3
  415398:	fs repz aad 0xf4
  41539c:	loop   0x4153e7
  41539e:	out    0x88,al
  4153a0:	cmp    eax,0x2486a858
  4153a5:	adc    al,0xe0
  4153a7:	mov    esp,0x6a1036ed
  4153ac:	sbb    eax,0xc897bca
  4153b1:	hlt    
  4153b2:	dec    esp
  4153b3:	jne    0x4153fe
  4153b5:	mul    BYTE PTR [ebx-0x7a45ee25]
  4153bb:	adc    eax,DWORD PTR [ebx]
  4153bd:	xchg   ebx,eax
  4153be:	add    BYTE PTR [ebp-0x15],ch
  4153c1:	cmp    al,0xa
  4153c3:	cmp    dl,BYTE PTR [esi+edi*4-0x10729c79]
  4153ca:	(bad)  
  4153cb:	out    dx,al
  4153cc:	das    
  4153cd:	adc    eax,0x3e9b1659
  4153d2:	fucomp st(5)
  4153d4:	dec    eax
  4153d5:	stc    
  4153d6:	shl    bh,cl
  4153d8:	add    eax,0xb1abe76d
  4153dd:	push   DWORD PTR [esi-0x5e]
  4153e0:	mov    cl,0x1d
  4153e2:	xchg   esp,edx
  4153e4:	inc    esp
  4153e5:	cmp    dl,al
  4153e7:	adc    eax,0x470793e7
  4153ec:	push   edi
  4153ed:	push   ecx
  4153ee:	fbld   TBYTE PTR [ebx-0x47]
  4153f1:	mov    BYTE PTR [ebp-0x2b],cl
  4153f4:	mov    bl,0xc0
  4153f6:	lahf   
  4153f7:	inc    esi
  4153f8:	dec    edi
  4153f9:	lea    esp,[edi-0x2d]
  4153fc:	fst    st(4)
  4153fe:	pusha  
  4153ff:	jno    0x4153e0
  415401:	dec    ecx
  415402:	(bad)  
  415403:	(bad)  
  415404:	(bad)  
  415405:	jg     0x415435
  415407:	aam    0xf5
  415409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540a:	cli    
  41540b:	pop    ss
  41540c:	outs   dx,DWORD PTR ds:[esi]
  41540d:	dec    edi
  41540e:	mov    edx,0x4714405
  415413:	and    cl,BYTE PTR [ebx+ebp*1]
  415416:	and    ch,BYTE PTR [ecx-0x46988e3e]
  41541c:	icebp  
  41541d:	das    
  41541e:	inc    edi
  41541f:	adc    al,0xc8
  415421:	jo     0x4153d6
  415423:	jne    0x415482
  415425:	not    DWORD PTR [eax]
  415427:	shr    al,cl
  415429:	stos   DWORD PTR es:[edi],eax
  41542a:	fld    QWORD PTR [esi+0x10]
  41542d:	aad    0x78
  41542f:	nop
  415430:	and    al,BYTE PTR [ecx+0x3e6f768]
  415436:	test   BYTE PTR [esi-0x50],dl
  415439:	pop    es
  41543a:	jl     0x4153d4
  41543c:	loopne 0x4154ad
  41543e:	push   0x88110146
  415443:	inc    esi
  415444:	or     edi,esi
  415446:	mov    esi,0x754b4d8b
  41544b:	rol    BYTE PTR [eax],1
  41544d:	pusha  
  41544e:	aad    0x91
  415450:	cmp    eax,0x3b854c62
  415455:	lock cmc 
  415457:	rol    cl,0xbd
  41545a:	out    dx,al
  41545b:	pop    ebp
  41545c:	adc    al,0x2a
  41545e:	dec    ebp
  41545f:	rep lods eax,DWORD PTR ds:[esi]
  415461:	xor    edx,DWORD PTR [eax+0x71]
  415464:	pop    ds
  415465:	add    cl,bl
  415467:	xor    eax,0xb443e3ed
  41546c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41546d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41546e:	push   0x76
  415470:	jle    0x415455
  415472:	and    al,0xff
  415474:	mov    ds:0x54569f4d,eax
  415479:	xor    al,0x73
  41547b:	cs (bad) 
  41547d:	daa    
  41547e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547f:	and    ah,BYTE PTR [esi+0x44]
  415482:	arpl   WORD PTR [ebp-0x794bd3c2],cx
  415488:	add    ecx,DWORD PTR fs:[edx]
  41548b:	int    0x85
  41548d:	test   DWORD PTR [edi+ebx*8+0x47],esi
  415491:	lds    eax,FWORD PTR [eax-0x5f8d8d59]
  415497:	and    eax,0xb71c1320
  41549c:	xor    ch,BYTE PTR [ebx-0x44]
  41549f:	inc    esp
  4154a0:	lods   eax,DWORD PTR ds:[esi]
  4154a1:	ficomp WORD PTR [esi+0x31]
  4154a4:	fsub   QWORD PTR [ecx+0x32a4557]
  4154aa:	dec    edi
  4154ab:	sbb    esi,esi
  4154ad:	pop    ebp
  4154ae:	clc    
  4154af:	mov    esi,0x598c2c0
  4154b4:	into   
  4154b5:	sar    BYTE PTR [ecx],cl
  4154b7:	rcr    DWORD PTR [eax-0x2c],cl
  4154ba:	test   eax,0x88a626c3
  4154bf:	and    esp,DWORD PTR [edi+0x31472076]
  4154c5:	jmp    0xa1f5ad37
  4154ca:	aam    0xb6
  4154cc:	outs   dx,DWORD PTR ds:[esi]
  4154cd:	clc    
  4154ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154cf:	dec    ebp
  4154d0:	lods   eax,DWORD PTR ds:[esi]
  4154d1:	fidivr DWORD PTR [ebx-0x4b]
  4154d4:	mov    esi,0xa94eb486
  4154d9:	cmp    ch,BYTE PTR [esi+0x50]
  4154dc:	or     ch,BYTE PTR [edi+eiz*4+0x5ccee649]
  4154e3:	rcl    DWORD PTR [ecx+eax*4],0xe7
  4154e7:	mov    ds:0x28556673,eax
  4154ec:	pop    edx
  4154ed:	xor    al,0x45
  4154ef:	sub    bh,BYTE PTR [esi+0x0]
  4154f2:	and    DWORD PTR [edx],edx
  4154f4:	repnz dec eax
  4154f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f7:	dec    esp
  4154f8:	or     bh,dh
  4154fa:	jle    0x415516
  4154fc:	std    
  4154fd:	loop   0x4154f3
  4154ff:	ds sbb al,0x8b
  415502:	dec    ecx
  415503:	adc    eax,0xaf799f5f
  415508:	and    eax,0xe0ecbe36
  41550d:	jg     0x415582
  41550f:	sahf   
  415510:	and    ebp,edi
  415512:	mov    edi,0xe6450098
  415517:	rol    DWORD PTR [eax],cl
  415519:	pop    ebx
  41551a:	mov    edi,0x1b2df168
  41551f:	out    dx,eax
  415520:	add    bl,BYTE PTR [edx]
  415522:	and    dh,bh
  415524:	out    0x76,al
  415526:	and    al,0x43
  415528:	out    0xf1,eax
  41552a:	pushf  
  41552b:	pushf  
  41552c:	(bad)  
  41552d:	mov    ecx,0xc2ada5f7
  415532:	in     al,0x29
  415534:	scas   eax,DWORD PTR es:[edi]
  415535:	les    esp,FWORD PTR [esi-0x5e]
  415538:	cli    
  415539:	mov    BYTE PTR [esi+edi*2-0x64674ce3],dl
  415540:	lahf   
  415541:	inc    edx
  415542:	mov    edx,0xcc97a25b
  415547:	pushf  
  415548:	fimul  DWORD PTR [edi+0x5b]
  41554b:	aad    0x85
  41554d:	jg     0x4154d5
  41554f:	stos   BYTE PTR es:[edi],al
  415550:	pop    eax
  415551:	mov    bh,0xda
  415553:	mov    al,BYTE PTR [edx+0x55]
  415556:	scas   eax,DWORD PTR es:[edi]
  415557:	dec    ebp
  415558:	mov    edx,0x187fe737
  41555d:	adc    BYTE PTR [ecx],al
  41555f:	push   ds
  415560:	dec    esp
  415561:	sbb    al,0x4e
  415563:	push   ss
  415564:	adc    eax,0x5b2a890d
  415569:	lods   eax,DWORD PTR ds:[esi]
  41556a:	or     DWORD PTR fs:[ebx+0x7ff9650a],ecx
  415571:	xor    edi,edx
  415573:	int3   
  415574:	ins    DWORD PTR es:[edi],dx
  415575:	dec    esp
  415576:	cmp    cl,BYTE PTR [ebp+0x70]
  415579:	xchg   ebx,eax
  41557a:	pop    esp
  41557b:	in     al,dx
  41557c:	sub    edx,eax
  41557e:	xor    eax,0xd6e45619
  415583:	push   0xb51ab63
  415588:	(bad)  
  415589:	mov    dl,0xc7
  41558b:	xchg   ecx,eax
  41558c:	loope  0x4155d3
  41558e:	test   DWORD PTR [edi-0x7c],esi
  415591:	outs   dx,DWORD PTR ds:[esi]
  415592:	leave  
  415593:	sbb    al,0x2e
  415595:	loopne 0x415576
  415597:	hlt    
  415598:	inc    edx
  415599:	adc    esi,ebx
  41559b:	sub    ch,BYTE PTR es:[esi+0x117629de]
  4155a2:	popf   
  4155a3:	and    bh,al
  4155a5:	fist   WORD PTR [edx+edi*8+0x200b5514]
  4155ac:	es add al,0x3a
  4155af:	xchg   esp,eax
  4155b0:	sbb    DWORD PTR [esi-0x5c],0x3566ae32
  4155b7:	ss push ebx
  4155b9:	retf   
  4155ba:	or     DWORD PTR [esi+eax*4],esp
  4155bd:	adc    bh,BYTE PTR [eax]
  4155bf:	fs sti 
  4155c1:	jle    0x41559b
  4155c3:	mov    eax,ds:0x69249fd6
  4155c8:	pop    esp
  4155c9:	push   esp
  4155ca:	je     0x415608
  4155cc:	cwde   
  4155cd:	inc    esi
  4155ce:	xor    BYTE PTR [eax+0x5f],al
  4155d1:	lods   eax,DWORD PTR ds:[esi]
  4155d2:	sbb    eax,0x8fb1343
  4155d7:	pop    edi
  4155d8:	pop    esp
  4155d9:	clc    
  4155da:	rcr    BYTE PTR [ecx],cl
  4155dc:	jmp    0x2a8c42cc
  4155e1:	lods   eax,DWORD PTR ds:[esi]
  4155e2:	pop    eax
  4155e3:	xor    BYTE PTR [ecx-0x3978993f],0x86
  4155ea:	sbb    al,0x2f
  4155ec:	mov    ebp,0xde5424a5
  4155f1:	adc    ah,dl
  4155f3:	retf   
  4155f4:	nop
  4155f5:	gs push ecx
  4155f7:	shl    BYTE PTR [edx-0x1a42497b],cl
  4155fd:	xor    BYTE PTR [edx],dh
  4155ff:	or     al,0x91
  415601:	(bad)  
  415602:	in     eax,dx
  415603:	dec    ebp
  415604:	(bad)  
  415605:	(bad)  
  415607:	iret   
  415608:	xor    DWORD PTR [eax],0xffffff95
  41560b:	xchg   dl,bh
  41560d:	fs iret 
  41560f:	xor    BYTE PTR [edx+0x57c0cac1],dl
  415615:	xor    dh,ch
  415617:	jg     0x4155d4
  415619:	cmp    eax,0x58bd5306
  41561e:	cmp    BYTE PTR [ebp+0x5abb5b92],0x82
  415625:	imul   ecx,DWORD PTR [ebx],0x5
  415628:	xor    dl,cl
  41562a:	jb     0x4155ee
  41562c:	mov    al,ds:0x942995b3
  415631:	fwait
  415632:	sbb    al,0xc7
  415634:	shl    BYTE PTR [edi-0x18],1
  415637:	dec    ebp
  415638:	scas   al,BYTE PTR es:[edi]
  415639:	popf   
  41563a:	and    eax,0xdfdc84a3
  41563f:	mov    BYTE PTR [ecx],0x96
  415642:	sbb    ch,BYTE PTR [eax+ecx*1]
  415645:	xchg   esp,eax
  415646:	shl    BYTE PTR [ebx-0x2cf04a7],1
  41564c:	sub    ebp,esi
  41564e:	mov    BYTE PTR [ebp+0x3051420],0x54
  415655:	sbb    DWORD PTR ds:0x4ee2440e,eax
  41565b:	add    al,0x58
  41565d:	pop    ebx
  41565e:	mov    esi,0x3942fee
  415663:	or     ecx,ebp
  415665:	mov    ebp,0xe5f40f82
  41566a:	test   DWORD PTR [edi-0x50],esp
  41566d:	call   0xc794506b
  415672:	std    
  415673:	aaa    
  415674:	into   
  415675:	dec    edi
  415676:	mov    ebx,0x9d7353be
  41567b:	scas   al,BYTE PTR es:[edi]
  41567c:	xchg   ebx,eax
  41567d:	dec    edx
  41567e:	xchg   DWORD PTR [ebx+0x5921457b],eax
  415684:	pop    edx
  415685:	mov    dl,0x43
  415687:	jno    0x41561c
  415689:	mov    al,ds:0xa44ab799
  41568e:	jae    0x415611
  415690:	xchg   ebx,eax
  415691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415692:	daa    
  415693:	pushf  
  415694:	or     DWORD PTR [ebx-0x1b],esp
  415697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415698:	je     0x415660
  41569a:	jb     0x415670
  41569c:	in     al,0x1c
  41569e:	aam    0xa4
  4156a0:	call   0x223df2d0
  4156a5:	push   0x76a3819b
  4156aa:	cmp    DWORD PTR [ebx],ebx
  4156ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ae:	cmp    dl,BYTE PTR [ebx+0x3a06409]
  4156b4:	js     0x41572f
  4156b6:	out    0xaa,al
  4156b8:	imul   edi,ecx,0x4154e83
  4156be:	xchg   edx,eax
  4156bf:	mov    gs,WORD PTR [esp+ebp*4+0x32]
  4156c3:	xchg   BYTE PTR [edi+0x51a33576],ah
  4156c9:	nop
  4156ca:	mov    al,0x1f
  4156cc:	in     eax,0x60
  4156ce:	test   dl,dl
  4156d0:	mov    eax,ds:0x7f3a03eb
  4156d5:	or     al,0x64
  4156d7:	xor    al,0x42
  4156d9:	jnp    0x4156c8
  4156db:	mov    fs,ecx
  4156dd:	in     eax,0x52
  4156df:	pop    eax
  4156e0:	jbe    0x4156a6
  4156e2:	jne    0x415680
  4156e4:	xor    BYTE PTR [esi+0x54],bl
  4156e7:	fs sub bl,bh
  4156ea:	sub    eax,0xcb9c3177
  4156ef:	sbb    eax,DWORD PTR [edx+0x5]
  4156f2:	xor    eax,0xbc724361
  4156f7:	jge    0x4156c2
  4156f9:	ins    DWORD PTR es:[edi],dx
  4156fa:	sub    ebx,ebp
  4156fc:	xchg   edx,eax
  4156fd:	sbb    bl,0xbf
  415700:	xchg   dl,ah
  415702:	test   DWORD PTR [eax+edx*2-0x350bc92d],esi
  415709:	aas    
  41570a:	out    0xc9,eax
  41570c:	or     BYTE PTR [esi-0x59],ah
  41570f:	enter  0xca19,0xab
  415713:	repz xchg esp,eax
  415715:	sub    eax,0xc51d87fe
  41571a:	xor    BYTE PTR [edi+0x16158096],ah
  415720:	aam    0x25
  415722:	inc    ebx
  415723:	ret    
  415724:	adc    eax,0x20bc9be2
  415729:	out    0xce,eax
  41572b:	js     0x41577a
  41572d:	scas   eax,DWORD PTR es:[edi]
  41572e:	ret    
  41572f:	jmp    DWORD PTR [ebx+0x1c05935c]
  415735:	xor    eax,0xef18e222
  41573a:	cmp    al,0xc6
  41573c:	loopne 0x415776
  41573e:	ja     0x4156fe
  415740:	xchg   esi,esp
  415742:	mov    al,0x2c
  415744:	daa    
  415745:	sahf   
  415746:	js     0x4156e5
  415748:	pop    es
  415749:	shl    al,0xfd
  41574c:	inc    ebp
  41574d:	push   0xfffffffe
  41574f:	add    DWORD PTR [ebx],edx
  415751:	push   eax
  415752:	out    dx,al
  415753:	jo     0x415738
  415755:	sub    ecx,0xb0d8bbd7
  41575b:	xor    dh,bl
  41575d:	xchg   ebx,eax
  41575e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575f:	gs xor al,0xe2
  415762:	pop    ss
  415763:	jno    0x4157a2
  415765:	icebp  
  415766:	add    DWORD PTR [esi+0x49],ecx
  415769:	fdiv   QWORD PTR [ecx+0x52]
  41576c:	mov    ds:0x3b382b81,eax
  415771:	jno    0x4156fe
  415773:	(bad)  
  415774:	xchg   ecx,eax
  415775:	pop    eax
  415776:	aam    0x84
  415778:	jl     0x41577f
  41577a:	loopne 0x415710
  41577c:	jne    0x4157d3
  41577e:	call   0x5c81:0x5afec7dd
  415785:	cmp    DWORD PTR [edx-0x80],ebx
  415788:	and    DWORD PTR [esi],ebx
  41578a:	js     0x4157d6
  41578c:	sar    cl,1
  41578e:	ja     0x415742
  415790:	rcl    BYTE PTR [edi-0x7f],cl
  415793:	xor    dh,BYTE PTR [ebp-0x1b3995cc]
  415799:	push   ss
  41579a:	aas    
  41579b:	jle    0x4157e5
  41579d:	sbb    al,BYTE PTR ds:0x46b7102e
  4157a3:	pop    ebp
  4157a4:	dec    ecx
  4157a5:	jb     0x415735
  4157a7:	ds sar ecx,cl
  4157aa:	outs   dx,BYTE PTR ds:[si]
  4157ac:	sbb    dl,BYTE PTR [edx+ecx*8-0x6817718d]
  4157b3:	mov    cl,0xba
  4157b5:	arpl   bp,bp
  4157b7:	cmp    esi,eax
  4157b9:	dec    edx
  4157ba:	mov    eax,ds:0xab09e8a3
  4157bf:	jge    0x415768
  4157c1:	xchg   ebx,eax
  4157c2:	add    eax,0x7de3f439
  4157c7:	add    BYTE PTR [edi],al
  4157c9:	lahf   
  4157ca:	retf   0xfcd4
  4157cd:	ds push 0xffffff90
  4157d0:	jecxz  0x415783
  4157d2:	and    eax,0xa5034fab
  4157d7:	(bad)
  4157db:	fimul  DWORD PTR [esp+eiz*2-0x46]
  4157df:	and    eax,edx
  4157e1:	lahf   
  4157e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e3:	cli    
  4157e4:	retf   
  4157e5:	mov    esi,0xee4c7f0
  4157ea:	outs   dx,BYTE PTR ds:[esi]
  4157eb:	mov    ah,0x6a
  4157ed:	cmp    al,0x14
  4157ef:	mov    bl,0x78
  4157f1:	or     ecx,DWORD PTR [eax]
  4157f3:	mov    ch,ah
  4157f5:	int3   
  4157f6:	adc    BYTE PTR [edi+0x67fb8a5e],0x68
  4157fd:	xlat   BYTE PTR ds:[ebx]
  4157fe:	add    al,BYTE PTR [ecx-0x7b02add2]
  415804:	add    BYTE PTR ds:0x4d0fef67,0x83
  41580b:	inc    edx
  41580c:	int3   
  41580d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41580e:	dec    DWORD PTR [edi+0x33]
  415811:	js     0x41580a
  415813:	jnp    0x415800
  415815:	imul   eax,DWORD PTR [ecx+0x3144c731],0xffffff9a
  41581c:	mov    ebx,0xb8f41b17
  415821:	sub    al,0x2b
  415823:	xchg   DWORD PTR [edx+0x6b],ebx
  415826:	mov    edi,0x91a30a80
  41582b:	fdiv   QWORD PTR [ecx+0xd]
  41582e:	xor    cl,BYTE PTR [edi]
  415830:	gs js  0x415820
  415833:	and    al,0x49
  415835:	je     0x415855
  415837:	adc    al,0x7b
  415839:	adc    al,0xd6
  41583b:	daa    
  41583c:	cmc    
  41583d:	sub    eax,0x24c26e07
  415842:	imul   DWORD PTR [ecx+0x46030392]
  415848:	add    ebp,DWORD PTR [ebp+0x72]
  41584b:	daa    
  41584c:	inc    edx
  41584d:	std    
  41584e:	lea    edi,[eax-0x316abd2a]
  415854:	pusha  
  415855:	add    al,0xba
  415857:	mov    bl,0xdc
  415859:	inc    ecx
  41585a:	cmc    
  41585b:	aad    0x2b
  41585d:	mov    dh,0xe2
  41585f:	xchg   BYTE PTR ds:0x26a773d5,bh
  415865:	mov    WORD PTR [ecx+0x50a5ac73],fs
  41586b:	xor    ah,BYTE PTR [ebp+0xb]
  41586e:	not    DWORD PTR [edx-0x1ec6e75d]
  415874:	or     DWORD PTR [edx+0x67],0x74286920
  41587b:	xchg   edi,eax
  41587c:	cmp    DWORD PTR [edi-0x53],eax
  41587f:	push   esi
  415880:	push   ebp
  415881:	inc    edi
  415882:	mov    WORD PTR [ebx-0x76],gs
  415885:	dec    edx
  415886:	loope  0x415826
  415888:	pop    esi
  415889:	lock xchg DWORD PTR [ebx],esp
  41588c:	fyl2x  
  41588e:	mov    bh,BYTE PTR [edx+0x731fc24c]
  415894:	cdq    
  415895:	lods   al,BYTE PTR ds:[esi]
  415896:	or     al,0x93
  415898:	daa    
  415899:	add    BYTE PTR [edi-0x58],ah
  41589c:	repz inc esi
  41589e:	jp     0x41588e
  4158a0:	mov    eax,0x1ff799d9
  4158a5:	mov    bl,0xbf
  4158a7:	es cli 
  4158a9:	dec    ebx
  4158aa:	cli    
  4158ab:	mov    bl,0xcf
  4158ad:	push   eax
  4158ae:	pop    ebp
  4158af:	xchg   esi,esp
  4158b1:	sub    eax,0xa6eb7cbf
  4158b6:	mov    bh,0x48
  4158b8:	ins    BYTE PTR es:[edi],dx
  4158b9:	cmp    al,0x55
  4158bb:	pop    esp
  4158bc:	push   esi
  4158bd:	stos   DWORD PTR es:[edi],eax
  4158be:	das    
  4158bf:	or     BYTE PTR cs:[ebx],al
  4158c2:	pop    esp
  4158c3:	add    bl,BYTE PTR [ebp+0x290d13d]
  4158c9:	sub    eax,0x53825f15
  4158ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158cf:	xchg   esi,eax
  4158d0:	sbb    al,0xaf
  4158d2:	add    al,0x1b
  4158d4:	popa   
  4158d5:	xlat   BYTE PTR ds:[ebx]
  4158d6:	mov    cl,0xad
  4158d8:	or     edx,DWORD PTR [eax]
  4158da:	inc    esi
  4158db:	xchg   ebp,eax
  4158dc:	mov    ecx,0xe10e4139
  4158e1:	push   eax
  4158e2:	outs   dx,DWORD PTR ds:[esi]
  4158e3:	cmp    esp,esp
  4158e5:	sub    esi,DWORD PTR [eax+0x4c6c8a54]
  4158eb:	add    BYTE PTR [edi],ah
  4158ed:	push   0x6f9cd2ee
  4158f2:	aaa    
  4158f3:	jmp    0xd2e6:0xa1f633eb
  4158fa:	test   DWORD PTR [edx+0x43],edx
  4158fd:	iret   
  4158fe:	mov    esi,DWORD PTR [esi-0x33c335ab]
  415904:	jno    0x4158df
  415906:	ja     0x415980
  415908:	js     0x4158e6
  41590a:	mov    al,ds:0xaac25869
  41590f:	aas    
  415910:	pop    ebx
  415911:	rcr    BYTE PTR [eax-0x33],0x35
  415915:	xchg   edx,eax
  415916:	arpl   bp,ax
  415918:	cmp    al,0xd8
  41591a:	xchg   edx,eax
  41591b:	jo     0x415999
  41591d:	push   ecx
  41591e:	popf   
  41591f:	std    
  415920:	jnp    0x4158a8
  415922:	in     al,0xa3
  415924:	test   al,0xf8
  415926:	or     esp,ecx
  415928:	pop    ss
  415929:	mov    gs,WORD PTR [edx-0x6f]
  41592c:	arpl   WORD PTR [eax+edx*4-0x47],sp
  415930:	dec    ecx
  415931:	sbb    dh,dh
  415933:	push   esp
  415934:	popf   
  415935:	adc    cl,BYTE PTR [ebx]
  415937:	out    dx,al
  415938:	inc    ebx
  415939:	out    dx,eax
  41593a:	out    dx,al
  41593b:	pop    ecx
  41593c:	ret    
  41593d:	in     eax,0xe4
  41593f:	leave  
  415940:	mov    ds:0x586e7286,al
  415945:	dec    ebx
  415946:	or     BYTE PTR [esi+0x1d84964b],cl
  41594c:	(bad)  
  41594d:	fld    TBYTE PTR cs:[ebp+0x1d]
  415951:	mov    edx,0xee51fdb6
  415956:	int3   
  415957:	sti    
  415958:	outs   dx,DWORD PTR es:[esi]
  41595a:	mov    eax,0x416ba875
  41595f:	sti    
  415960:	mov    bl,0x72
  415962:	jbe    0x415946
  415964:	jb     0x4159ce
  415966:	fistp  WORD PTR [eax]
  415968:	ins    DWORD PTR es:[edi],dx
  415969:	int3   
  41596a:	retf   0x6637
  41596d:	idiv   ebp
  41596f:	xor    DWORD PTR [ebp+esi*2+0xd10fc7c],0xffffffc6
  415977:	imul   ebp,DWORD PTR [ebx-0x499153d9],0x7a6262fb
  415981:	mov    ah,al
  415983:	scas   eax,DWORD PTR es:[edi]
  415984:	fst    QWORD PTR [ecx]
  415986:	sub    DWORD PTR [ebx+edx*1],edx
  415989:	mov    ecx,0x5f2b4210
  41598e:	int    0x4a
  415990:	and    al,0x60
  415992:	mov    ds:0xbef70900,eax
  415997:	inc    ebx
  415998:	mov    eax,ds:0x457bb6b
  41599d:	aam    0x6e
  41599f:	cld    
  4159a0:	mov    edx,0x6d08f31
  4159a5:	je     0x415938
  4159a7:	xchg   ecx,eax
  4159a8:	ret    0x75b5
  4159ab:	fcomp  DWORD PTR ds:0x2164f0d4
  4159b1:	jecxz  0x415a16
  4159b3:	push   ecx
  4159b4:	js     0x415a1c
  4159b6:	stc    
  4159b7:	aad    0x56
  4159b9:	sub    al,0xda
  4159bb:	and    eax,0x2b8af925
  4159c0:	iret   
  4159c1:	mov    ah,0x4d
  4159c3:	sub    al,ch
  4159c5:	ins    DWORD PTR es:[edi],dx
  4159c6:	cmp    eax,0x300b84ed
  4159cb:	push   ebx
  4159cc:	cdq    
  4159cd:	inc    esi
  4159ce:	das    
  4159cf:	xor    al,0x10
  4159d1:	cmp    bl,BYTE PTR [ebp-0x62505b73]
  4159d7:	test   DWORD PTR [esi-0x1ecfc42a],edi
  4159dd:	fdivr  DWORD PTR [edx]
  4159df:	mov    bh,0xc3
  4159e1:	jbe    0x415a28
  4159e3:	jle    0x415a5f
  4159e5:	add    BYTE PTR [eax+eax*4+0x24a213cf],ah
  4159ec:	jl     0x4159d9
  4159ee:	dec    ebp
  4159ef:	addr16 aam 0xf8
  4159f2:	into   
  4159f3:	sbb    BYTE PTR [ebx+0x7c],ch
  4159f6:	mov    ds:0xf0f20dfe,al
  4159fb:	pop    esi
  4159fc:	xchg   ecx,eax
  4159fd:	bound  ebp,QWORD PTR [esi+0x480c2518]
  415a03:	pushf  
  415a04:	mov    edx,0x1bc9d082
  415a09:	sub    eax,0x89633db7
  415a0e:	lods   eax,DWORD PTR ds:[esi]
  415a0f:	mov    ah,0x6a
  415a11:	sub    al,0x89
  415a13:	jbe    0x4159ab
  415a15:	dec    ebp
  415a16:	sbb    BYTE PTR [edx],al
  415a18:	push   eax
  415a19:	stos   BYTE PTR es:[edi],al
  415a1a:	(bad)  
  415a1b:	aas    
  415a1c:	ja     0x4159b5
  415a1e:	mov    fs,esp
  415a20:	out    0xbd,al
  415a22:	rcl    bh,cl
  415a24:	cmp    DWORD PTR [edx-0x46],0x97d821f1
  415a2b:	pop    ss
  415a2c:	cmp    ch,BYTE PTR [edx]
  415a2e:	(bad)  
  415a2f:	out    dx,al
  415a30:	lds    esp,FWORD PTR [ecx+0x2]
  415a33:	pop    eax
  415a34:	xchg   BYTE PTR [ecx+0x2ad0144a],al
  415a3a:	call   0xee1d73b3
  415a3f:	ins    DWORD PTR es:[edi],dx
  415a40:	pop    ebp
  415a41:	xor    BYTE PTR [ecx],dh
  415a43:	(bad)  
  415a46:	addr16 loopne 0x415a75
  415a49:	in     eax,dx
  415a4a:	lds    eax,FWORD PTR [ebp+ebx*8+0x7db97e0e]
  415a51:	jne    0x4159ef
  415a53:	and    eax,0xed0952e4
  415a58:	bound  edi,QWORD PTR [ecx-0x56839a97]
  415a5e:	fs mov edi,0x77cf1234
  415a64:	outs   dx,BYTE PTR ds:[esi]
  415a65:	ds cmc 
  415a67:	jb     0x415a24
  415a69:	bound  esi,QWORD PTR [edi+0xf]
  415a6c:	in     eax,dx
  415a6d:	sar    BYTE PTR [edi+edi*2+0x2973401f],0x80
  415a75:	or     BYTE PTR [eax+0x24660a5],ch
  415a7b:	sbb    al,cl
  415a7d:	sbb    ebp,esp
  415a7f:	add    eax,esp
  415a81:	in     eax,0x7f
  415a83:	cmp    BYTE PTR [eax+edi*1+0x2818b189],0x6a
  415a8b:	inc    ebx
  415a8c:	cmc    
  415a8d:	cdq    
  415a8e:	pop    edx
  415a8f:	mov    BYTE PTR [eiz*1+0x776e9a7f],dl
  415a96:	xor    eax,0x457e7ac8
  415a9b:	inc    ebp
  415a9c:	sub    cl,BYTE PTR [edx]
  415a9e:	xchg   esi,eax
  415a9f:	mov    esp,0xd27f0b37
  415aa4:	sub    DWORD PTR [esi],ebx
  415aa6:	inc    esp
  415aa7:	add    BYTE PTR [edx-0x78],ch
  415aaa:	sbb    bh,ah
  415aac:	pop    esp
  415aad:	ja     0x415a80
  415aaf:	clc    
  415ab0:	jb     0x415ac5
  415ab2:	jmp    0x453e:0x5b58437e
  415ab9:	lods   eax,DWORD PTR ds:[esi]
  415aba:	sbb    eax,0x6e3d79fa
  415abf:	xchg   DWORD PTR [edi-0x35],esi
  415ac2:	fwait
  415ac3:	iret   
  415ac4:	and    dh,cl
  415ac6:	adc    eax,0xd10a848e
  415acb:	jno    0x415ad6
  415acd:	pop    edx
  415ace:	div    BYTE PTR [edx]
  415ad0:	outs   dx,BYTE PTR ds:[esi]
  415ad1:	repnz outs dx,DWORD PTR ds:[esi]
  415ad3:	cdq    
  415ad4:	or     esi,ebp
  415ad6:	fiadd  WORD PTR [ebp-0x4b521523]
  415adc:	mov    ds:0xe5febed6,eax
  415ae1:	mov    esp,0x5883292c
  415ae6:	push   0xffffffc6
  415ae8:	out    dx,eax
  415ae9:	inc    ebp
  415aea:	in     al,0x76
  415aec:	pop    ebp
  415aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aee:	xor    al,0x5b
  415af0:	mov    dl,0x21
  415af2:	push   esp
  415af3:	test   DWORD PTR [edx-0x5716696e],ecx
  415af9:	mov    ch,0x86
  415afb:	fsubr  st(2),st
  415afd:	popf   
  415afe:	rol    DWORD PTR [ebx+eax*4+0xc],0x6a
  415b03:	and    al,0x1a
  415b05:	shr    BYTE PTR ds:0x66df0116,cl
  415b0b:	push   esp
  415b0c:	pop    eax
  415b0d:	int    0x20
  415b0f:	repz rcr BYTE PTR [eax+0x3ba019da],0xd5
  415b17:	fisubr WORD PTR [eax+0x64916400]
  415b1d:	push   eax
  415b1e:	inc    esi
  415b1f:	ret    
  415b20:	pop    esp
  415b21:	xchg   ebx,eax
  415b22:	imul   ebp,esp,0xffffffe1
  415b25:	lods   al,BYTE PTR ds:[esi]
  415b26:	fistp  QWORD PTR [edi+0x23]
  415b29:	(bad)  
  415b2a:	and    BYTE PTR [edx-0x31],ch
  415b2d:	into   
  415b2e:	cdq    
  415b2f:	jg     0x415b57
  415b31:	cmp    ah,dl
  415b33:	pop    ecx
  415b34:	(bad)  
  415b35:	popf   
  415b36:	add    DWORD PTR [edi+0x4a3db542],0xf
  415b3d:	cld    
  415b3e:	xor    esi,ebx
  415b40:	rol    DWORD PTR [ebx+0x45],0xf9
  415b44:	sub    DWORD PTR [ecx+0x771f3db8],esi
  415b4a:	es test eax,0x38d88844
  415b50:	or     dh,0xe7
  415b53:	mov    cs:0xb56ea081,eax
  415b59:	pop    esp
  415b5a:	inc    edi
  415b5b:	in     eax,dx
  415b5c:	bound  ebx,QWORD PTR [ecx+ebx*1+0x772c5f97]
  415b63:	les    ecx,FWORD PTR [esi-0x31af23d2]
  415b69:	js     0x415b04
  415b6b:	stos   DWORD PTR es:[edi],eax
  415b6c:	jne    0x415bc5
  415b6e:	inc    edi
  415b6f:	or     DWORD PTR [edx],ebx
  415b71:	mov    BYTE PTR [ecx-0x2f],cl
  415b74:	fsubr  QWORD PTR [esi+0x19a996d2]
  415b7a:	inc    ecx
  415b7b:	sar    BYTE PTR es:[eax+0x145c3003],cl
  415b82:	fistp  QWORD PTR [ebx-0x6]
  415b85:	mov    dl,dh
  415b87:	or     edx,DWORD PTR ds:[edi]
  415b8a:	cmc    
  415b8b:	pop    ecx
  415b8c:	dec    esp
  415b8d:	xchg   ecx,eax
  415b8e:	sbb    bl,BYTE PTR [eax+eax*8-0x3f]
  415b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b93:	movq   QWORD PTR [eax-0x7d],mm4
  415b97:	xchg   ecx,eax
  415b98:	daa    
  415b99:	sub    al,0xd
  415b9b:	int3   
  415b9c:	scas   eax,DWORD PTR es:[edi]
  415b9d:	push   edx
  415b9e:	pop    ss
  415b9f:	xchg   esp,eax
  415ba0:	mov    WORD PTR [ecx+0x67],fs
  415ba3:	mov    ds:0xa899b4e0,eax
  415ba8:	mov    ebx,0x8192655a
  415bad:	rol    BYTE PTR [ebp+0x4d0c0d57],cl
  415bb3:	pop    eax
  415bb4:	sti    
  415bb5:	aam    0xab
  415bb7:	test   eax,0xf12331b1
  415bbc:	enter  0xb92a,0xb4
  415bc0:	dec    edi
  415bc1:	rcr    DWORD PTR [edi-0x519a182a],cl
  415bc7:	mov    ebx,DWORD PTR [ebx-0x6]
  415bca:	xor    al,0xee
  415bcc:	arpl   cx,si
  415bce:	xchg   ebp,eax
  415bcf:	mov    WORD PTR [ebx-0x1b0367c],cs
  415bd5:	push   ds
  415bd6:	push   esp
  415bd7:	mov    esi,0x7897829
  415bdc:	mov    edx,0xd0cd4800
  415be1:	pop    es
  415be2:	sbb    ah,BYTE PTR [ebx-0x67]
  415be5:	inc    ecx
  415be6:	inc    ebp
  415be7:	xchg   edi,eax
  415be8:	mov    ds:0x72f66635,eax
  415bed:	mov    bl,cl
  415bef:	adc    BYTE PTR [eax],bh
  415bf1:	and    dl,BYTE PTR [esi+eax*1-0x7951eb47]
  415bf8:	fwait
  415bf9:	mov    ds:0x3d6c8054,al
  415bfe:	push   0x3d147029
  415c03:	scas   eax,DWORD PTR es:[edi]
  415c04:	mov    ds:0xb3665daa,al
  415c09:	outs   dx,DWORD PTR ds:[esi]
  415c0a:	int    0xee
  415c0c:	cmp    al,0x35
  415c0e:	adc    eax,0xf163be4
  415c13:	sar    DWORD PTR [esi+0x2805c858],1
  415c19:	ins    DWORD PTR es:[edi],dx
  415c1a:	js     0x415c30
  415c1c:	mov    ch,0x63
  415c1e:	pop    ds
  415c1f:	jecxz  0x415c2f
  415c21:	adc    al,0x41
  415c23:	rol    DWORD PTR [esi],0xc
  415c26:	dec    esp
  415c27:	pop    eax
  415c28:	pop    edi
  415c29:	adc    edi,DWORD PTR [ebp+0x765d1a2b]
  415c2f:	jo     0x415bd8
  415c31:	jmp    0x8174:0x9685c2e3
  415c38:	sbb    al,0x8
  415c3a:	daa    
  415c3b:	xor    eax,0x68c8dcf9
  415c40:	sbb    eax,DWORD PTR [ecx]
  415c42:	cmp    BYTE PTR [eax],0xa3
  415c45:	test   BYTE PTR [eax+edx*1],ah
  415c48:	sbb    DWORD PTR [ebx],edi
  415c4a:	pop    edi
  415c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4c:	pop    esi
  415c4d:	dec    ebx
  415c4e:	pusha  
  415c4f:	mov    BYTE PTR [edi],0x4d
  415c52:	and    al,0x8
  415c54:	inc    ecx
  415c55:	ret    
  415c56:	in     eax,dx
  415c57:	dec    ecx
  415c58:	sub    DWORD PTR [ebx+0x5c],esp
  415c5b:	mov    dh,0x79
  415c5d:	jp     0x415c73
  415c5f:	jns    0x415c4b
  415c61:	xchg   edx,eax
  415c62:	sbb    edx,ecx
  415c64:	pop    edx
  415c65:	rol    BYTE PTR [ecx+eiz*4],0xb6
  415c69:	sbb    eax,DWORD PTR ds:0x7903dd60
  415c6f:	fwait
  415c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c71:	popf   
  415c72:	cmc    
  415c73:	shr    BYTE PTR [edi+edi*2],1
  415c76:	enter  0x93c2,0xc9
  415c7a:	sar    DWORD PTR [esi-0x6],cl
  415c7d:	in     eax,dx
  415c7e:	sbb    al,0x79
  415c80:	ret    0x9c9f
  415c83:	pop    edx
  415c84:	mov    fs,WORD PTR [ebp+0x7f]
  415c87:	bound  edi,QWORD PTR [eax-0x10]
  415c8a:	adc    ebp,DWORD PTR [edi]
  415c8c:	jg     0x415c5c
  415c8e:	rcr    DWORD PTR [edi+0x5e],cl
  415c91:	pop    ds
  415c92:	add    BYTE PTR [edx+0x380a4398],dl
  415c98:	inc    ebp
  415c99:	pop    ebx
  415c9a:	sahf   
  415c9b:	xchg   DWORD PTR [ebx],esi
  415c9d:	pop    edi
  415c9e:	jp     0x415cfb
  415ca0:	daa    
  415ca1:	lds    ecx,FWORD PTR [esi-0x10ff29ae]
  415ca7:	xchg   edi,eax
  415ca8:	fldenv [edi]
  415caa:	xchg   ebx,eax
  415cab:	out    0x90,al
  415cad:	(bad)
  415cb2:	shr    DWORD PTR [esi+0x33af4738],0xff
  415cb9:	dec    edi
  415cba:	call   0xc156:0x48ee21a
  415cc1:	lods   eax,DWORD PTR ds:[esi]
  415cc2:	add    al,0x3e
  415cc4:	repz push 0x665cf578
  415cca:	sub    eax,0xfe004463
  415ccf:	ret    0x68d0
  415cd2:	test   DWORD PTR [ecx+0x5e],eax
  415cd5:	and    al,0x2
  415cd7:	or     BYTE PTR [ebx*8-0x7b084341],0x40
  415cdf:	test   eax,0xd21a326c
  415ce4:	cld    
  415ce5:	in     eax,dx
  415ce6:	int3   
  415ce7:	fdiv   DWORD PTR [edx+esi*4+0x0]
  415ceb:	cld    
  415cec:	loopne 0x415ca9
  415cee:	hlt    
  415cef:	imul   ecx,DWORD PTR [edx-0x7b],0xffffffd4
  415cf3:	push   eax
  415cf4:	push   0x75b57bce
  415cf9:	inc    ecx
  415cfa:	mov    ecx,0x64c05c0e
  415cff:	(bad)  
  415d00:	test   al,0x3f
  415d02:	lods   al,BYTE PTR ds:[esi]
  415d03:	fisttp WORD PTR [esi]
  415d05:	test   dh,0xfd
  415d08:	mov    ecx,0xfe39427
  415d0d:	nop
  415d0e:	xchg   ebx,eax
  415d0f:	gs add al,0x11
  415d12:	ret    0x1167
  415d15:	pop    esp
  415d16:	pop    edx
  415d17:	xchg   edx,eax
  415d18:	daa    
  415d19:	loopne 0x415d25
  415d1b:	pop    es
  415d1c:	nop
  415d1d:	push   0x36b850f4
  415d22:	add    DWORD PTR [ecx],esp
  415d24:	push   0xea45da1a
  415d29:	arpl   WORD PTR [esi+0x6c7338b2],cx
  415d2f:	int3   
  415d30:	js     0x415d05
  415d32:	mov    eax,ds:0x328aee
  415d37:	ja     0x415cf9
  415d39:	and    DWORD PTR [edx+0x43dc7b2b],ebp
  415d3f:	or     al,0xe8
  415d41:	xchg   DWORD PTR [eax+0x9],edi
  415d44:	outs   dx,BYTE PTR ds:[esi]
  415d45:	push   esi
  415d46:	inc    ebp
  415d47:	lea    ebp,[ebp+0x731386b0]
  415d4d:	push   0xffffff8f
  415d4f:	jle    0x415dc0
  415d51:	mov    esp,0x80b031e2
  415d56:	adc    esp,DWORD PTR [esp+edi*1]
  415d59:	jnp    0x415d15
  415d5b:	(bad)  
  415d5c:	into   
  415d5d:	sub    al,0x56
  415d5f:	or     BYTE PTR [ecx-0x21],0x70
  415d63:	fyl2x  
  415d65:	aam    0xcb
  415d67:	outs   dx,DWORD PTR ds:[esi]
  415d68:	dec    esi
  415d69:	push   es
  415d6a:	stos   DWORD PTR es:[edi],eax
  415d6b:	imul   ecx,esi,0x4d844da2
  415d71:	jge    0x415dd7
  415d73:	and    dh,BYTE PTR [ebx-0x14a81cbc]
  415d79:	mov    WORD PTR [esi-0x497ff688],ss
  415d7f:	add    ah,BYTE PTR [eax-0x67]
  415d82:	mov    ds:0xcd3fb6c4,eax
  415d87:	nop
  415d88:	loop   0x415d48
  415d8a:	loopne 0x415d14
  415d8c:	push   es
  415d8d:	(bad)  
  415d8e:	repnz addr16 cmp ebp,edi
  415d92:	cmp    ebx,DWORD PTR [ebp+0x5a896240]
  415d98:	or     BYTE PTR ds:0x3e0326e6,cl
  415d9e:	jl     0x415dbc
  415da0:	jmp    0x4a023f4c
  415da5:	sar    dl,0x96
  415da8:	jl     0x415d34
  415daa:	ins    DWORD PTR es:[edi],dx
  415dab:	shl    BYTE PTR [ebp+0x52ad291f],0x64
  415db2:	aam    0x74
  415db4:	mov    WORD PTR [ebx+0x37fc1a8c],ss
  415dba:	sar    esi,cl
  415dbc:	cli    
  415dbd:	test   al,0xf3
  415dbf:	lock dec esi
  415dc1:	into   
  415dc2:	aas    
  415dc3:	in     eax,dx
  415dc4:	dec    edx
  415dc5:	scas   al,BYTE PTR es:[edi]
  415dc6:	ss aam 0x54
  415dc9:	imul   ebp,DWORD PTR [ebx+0x3e12c66c],0x21
  415dd0:	mov    ds:0x5b975fe2,al
  415dd5:	mov    bl,0xa0
  415dd7:	leave  
  415dd8:	adc    cl,BYTE PTR [esp+eax*8+0xfa53e5f]
  415ddf:	inc    ecx
  415de0:	hlt    
  415de1:	xchg   esp,eax
  415de2:	sbb    DWORD PTR [edx],eax
  415de4:	out    0x86,al
  415de6:	push   ebx
  415de7:	ret    
  415de8:	sahf   
  415de9:	fadd   QWORD PTR [eax+0x39]
  415dec:	pop    ebx
  415ded:	dec    ebx
  415dee:	les    eax,FWORD PTR [esi+0x10]
  415df1:	retf   
  415df2:	ja     0x415db6
  415df4:	or     BYTE PTR [eax+eax*4],cl
  415df7:	mov    ecx,0x584e448c
  415dfc:	inc    esi
  415dfd:	hlt    
  415dfe:	popa   
  415dff:	inc    ecx
  415e00:	lods   eax,DWORD PTR ds:[esi]
  415e01:	sbb    eax,0x7adf9377
  415e06:	and    eax,0x51564b78
  415e0b:	leave  
  415e0c:	std    
  415e0d:	jl     0x415dbd
  415e0f:	mov    eax,0x25219b5b
  415e14:	add    edi,edi
  415e16:	leave  
  415e17:	aaa    
  415e18:	mov    edx,0xb6b4e3b1
  415e1d:	and    al,0xd0
  415e1f:	bound  edi,QWORD PTR [ebx+0x32a979de]
  415e25:	lods   al,BYTE PTR ds:[esi]
  415e26:	jb     0x415dba
  415e28:	not    BYTE PTR [ecx]
  415e2a:	mov    ebp,0x44dd88b3
  415e2f:	into   
  415e30:	mov    ecx,DWORD PTR [ebx+0x15bca9f3]
  415e36:	xchg   ebx,eax
  415e38:	jnp    0x415e1b
  415e3a:	out    0xd5,eax
  415e3c:	dec    edx
  415e3d:	ins    BYTE PTR es:[edi],dx
  415e3e:	add    eax,0xd739cd95
  415e43:	cmp    dl,dl
  415e45:	cli    
  415e46:	mov    al,ds:0x1d15f81e
  415e4b:	pop    esi
  415e4c:	sub    eax,0xede61e1a
  415e51:	and    al,0xfc
  415e53:	mov    al,0x32
  415e55:	sub    ecx,DWORD PTR [ebx-0x79]
  415e58:	pop    ds
  415e59:	test   DWORD PTR [ecx-0x2],ebx
  415e5c:	fwait
  415e5d:	mov    edi,0xd3429c75
  415e62:	add    ebp,ebp
  415e64:	cmc    
  415e65:	sub    BYTE PTR ds:0x1b967589,0x31
  415e6c:	repnz ins DWORD PTR es:[edi],dx
  415e6e:	add    ch,BYTE PTR [edi-0x13]
  415e71:	jmp    0x52eaec9d
  415e76:	ja     0x415e3c
  415e78:	push   ds
  415e79:	jmp    0x415e84
  415e7b:	xor    dh,BYTE PTR [ecx-0x3b01c4d3]
  415e81:	(bad)  
  415e83:	imul   esi,DWORD PTR [ebx-0x7f743c3],0xffffff8c
  415e8a:	jge    0x415e84
  415e8c:	cmp    al,0xb6
  415e8e:	xchg   DWORD PTR [esi-0x37828f73],ecx
  415e94:	arpl   dx,si
  415e96:	or     dh,BYTE PTR [ebx+0x1c]
  415e99:	ins    BYTE PTR es:[edi],dx
  415e9a:	ins    BYTE PTR es:[edi],dx
  415e9b:	lds    ecx,FWORD PTR [esi+0x654f227e]
  415ea1:	jge    0x415f21
  415ea3:	xchg   edx,eax
  415ea4:	mov    DWORD PTR [edi+0x3c],eax
  415ea7:	lea    ebp,[eax-0x36458f51]
  415ead:	cmp    al,0x3c
  415eaf:	out    0xe8,eax
  415eb1:	push   esp
  415eb2:	stos   BYTE PTR es:[edi],al
  415eb3:	outs   dx,DWORD PTR ds:[esi]
  415eb4:	lea    ebp,[ebx+0x1486fdd]
  415eba:	mov    eax,0x401bb38b
  415ebf:	stos   BYTE PTR es:[edi],al
  415ec0:	pushf  
  415ec1:	fist   DWORD PTR [ecx+0x64d76e84]
  415ec7:	mov    dh,0xee
  415ec9:	or     ah,bl
  415ecb:	sbb    al,0x8
  415ecd:	test   BYTE PTR [esi],bl
  415ecf:	daa    
  415ed0:	ficom  WORD PTR [ecx+0x6e8c772f]
  415ed6:	push   ebp
  415ed7:	push   0x4453cedb
  415edc:	aas    
  415edd:	sbb    BYTE PTR [eax+eax*1+0x23e26b9e],cl
  415ee4:	imul   DWORD PTR [ebp-0x2f]
  415ee7:	mov    ebp,0xefcba9d0
  415eec:	stc    
  415eed:	cs jg  0x415ef2
  415ef0:	imul   esp,DWORD PTR [eiz*1+0x46afc99d],0xffa1f611
  415efb:	pop    esi
  415efc:	push   cs
  415efd:	cli    
  415efe:	xchg   edx,eax
  415eff:	and    DWORD PTR [edx+0x14],eax
  415f02:	adc    eax,0x8e8951f5
  415f07:	dec    esp
  415f08:	stos   BYTE PTR es:[edi],al
  415f09:	rcr    BYTE PTR [edi],cl
  415f0b:	imul   edx,esi,0xffffff98
  415f0e:	jmp    FWORD PTR [edi+0x109b827b]
  415f14:	sbb    ebx,DWORD PTR [eax+esi*1]
  415f17:	add    eax,0x6c075e93
  415f1c:	push   esp
  415f1d:	dec    edi
  415f1e:	fdivrp st(0),st
  415f20:	dec    eax
  415f21:	test   BYTE PTR [esp+edx*4-0x63],0x18
  415f26:	fstp   QWORD PTR [ebp+0x1]
  415f29:	add    al,0xa4
  415f2b:	mov    ebp,0xb22cd0d7
  415f30:	retf   0x7af3
  415f33:	xchg   ebp,eax
  415f34:	shr    BYTE PTR [edx-0x6c01571e],cl
  415f3a:	shl    BYTE PTR [ecx],0x74
  415f3d:	push   ds
  415f3e:	pop    edx
  415f3f:	sub    BYTE PTR [ebp+0x721ca10],ah
  415f45:	aas    
  415f46:	(bad)  
  415f47:	mov    ds,edx
  415f49:	jae    0x415fab
  415f4b:	xchg   edx,eax
  415f4c:	adc    al,BYTE PTR [esi-0x7d]
  415f4f:	idiv   DWORD PTR [edx+ebx*2+0x43baddd8]
  415f56:	(bad)  
  415f57:	sub    eax,0xba16c7b0
  415f5c:	addr16 cmp al,0xf0
  415f5f:	ss dec esi
  415f61:	(bad)  
  415f62:	mov    edx,0x80d83eb4
  415f67:	(bad)  
  415f68:	hlt    
  415f69:	jbe    0x415f52
  415f6b:	stos   BYTE PTR es:[edi],al
  415f6c:	inc    ebx
  415f6d:	pop    ds
  415f6e:	jle    0x415f57
  415f70:	lods   al,BYTE PTR ds:[esi]
  415f71:	bound  edi,QWORD PTR [edx-0x54]
  415f74:	xchg   ebx,eax
  415f75:	lds    esi,FWORD PTR [edi]
  415f77:	sbb    eax,0xe0f0c6cc
  415f7c:	or     edx,DWORD PTR [ebx+edx*1+0x67]
  415f80:	sti    
  415f81:	in     al,0xd1
  415f83:	xor    al,0xd2
  415f85:	cdq    
  415f86:	mov    bh,0x5b
  415f88:	inc    esi
  415f89:	mul    BYTE PTR [esi+ebx*8]
  415f8c:	push   edi
  415f8d:	cmc    
  415f8e:	dec    edx
  415f8f:	aam    0x64
  415f91:	mov    ds:0xe7f64b67,eax
  415f96:	push   0x3f9fd8d1
  415f9b:	rcr    DWORD PTR [edi-0x3a2dd757],cl
  415fa1:	inc    edi
  415fa2:	and    bl,BYTE PTR ds:0x2df8c934
  415fa8:	jecxz  0x415f2f
  415faa:	pop    ecx
  415fab:	or     ebp,DWORD PTR [bx+si]
  415fae:	daa    
  415faf:	into   
  415fb0:	jge    0x415fe0
  415fb2:	out    dx,eax
  415fb3:	push   0xfffffffc
  415fb5:	push   cs
  415fb6:	sbb    edx,DWORD PTR [ecx-0x74]
  415fb9:	push   ss
  415fba:	adc    edi,DWORD PTR [ebx-0x17ebfe65]
  415fc0:	data16 test BYTE PTR [ebp+0x65e0e376],bh
  415fc7:	xchg   esi,eax
  415fc8:	xchg   esi,eax
  415fc9:	stos   DWORD PTR es:[edi],eax
  415fca:	cmp    edx,DWORD PTR [ebp+0xe]
  415fcd:	call   0x131f:0x206106be
  415fd4:	xchg   esi,eax
  415fd5:	cmp    BYTE PTR [edx-0x1a5ae32e],bh
  415fdb:	or     DWORD PTR [edi+0x6362abcf],edi
  415fe1:	add    DWORD PTR [ebx],0x71
  415fe4:	mov    edi,0x71d2e43f
  415fe9:	mov    eax,ds:0xa207a8fe
  415fee:	out    0x22,al
  415ff0:	int    0xe8
  415ff2:	xor    DWORD PTR [eax+0x7e],ecx
  415ff5:	xor    esi,DWORD PTR [ebx]
  415ff7:	fidivr DWORD PTR [ecx+ebx*1-0x6c]
  415ffb:	daa    
  415ffc:	cmp    ebx,DWORD PTR [esi+0x31be13f7]
  416002:	add    cl,BYTE PTR ds:0x64851882
  416008:	test   BYTE PTR [ebx-0x7f65eb3f],cl
  41600e:	dec    eax
  41600f:	sbb    dl,BYTE PTR [ebx-0x744a0c3a]
  416015:	aaa    
  416016:	pop    ebp
  416017:	rcl    DWORD PTR [edx+0x31],cl
  41601a:	cwde   
  41601b:	leave  
  41601c:	add    DWORD PTR [ebp+0x43],edi
  41601f:	sbb    al,0xd3
  416021:	and    BYTE PTR [eax],cl
  416023:	jle    0x416087
  416025:	adc    DWORD PTR [edx-0x5b14db96],esp
  41602b:	retf   
  41602c:	dec    ecx
  41602d:	in     eax,0xb6
  41602f:	sbb    eax,0xd8e6cd5
  416034:	xchg   edi,eax
  416035:	cmp    dl,BYTE PTR ds:0x657d3514
  41603b:	nop
  41603c:	idiv   DWORD PTR ds:0xb638d179
  416042:	push   esp
  416043:	aas    
  416044:	jo     0x415fe8
  416046:	std    
  416047:	adc    ebp,DWORD PTR [eax+eax*2-0x2fb3e263]
  41604e:	mov    dh,0xd8
  416050:	adc    bl,BYTE PTR [esp-0x63faa5c0]
  416057:	sub    bh,BYTE PTR [ecx-0x4]
  41605a:	mov    ebp,0x3e65cf12
  41605f:	pop    edi
  416060:	inc    ecx
  416061:	mov    ds,WORD PTR [esi+edx*8]
  416064:	icebp  
  416065:	sbb    ch,al
  416067:	jp     0x416092
  416069:	jge    0x416022
  41606b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41606c:	mov    edx,0xed81dce9
  416071:	push   0xd8a20ab
  416076:	in     eax,dx
  416077:	pop    ebx
  416078:	pusha  
  416079:	and    ecx,esp
  41607b:	icebp  
  41607c:	pextrw edx,mm2,0x5
  416080:	xchg   esi,eax
  416081:	fcom   QWORD PTR [eax-0x2f373626]
  416087:	inc    ebp
  416088:	pmaxub mm0,QWORD PTR [edi+0x2]
  41608c:	iret   
  41608d:	(bad)  
  41608e:	mov    al,0xa2
  416090:	in     al,dx
  416091:	sbb    BYTE PTR ds:0xacc845ae,bh
  416097:	cmp    BYTE PTR [ecx],dh
  416099:	and    DWORD PTR [eax+0x4fe8a5de],esi
  41609f:	push   ecx
  4160a0:	clc    
  4160a1:	dec    ebx
  4160a2:	retf   
  4160a3:	shl    DWORD PTR [edx+0x6],1
  4160a6:	mov    dh,0xa1
  4160a8:	mov    BYTE PTR [esi],bh
  4160aa:	leave  
  4160ab:	sub    al,0x54
  4160ad:	mov    ds:0xa494cfbb,al
  4160b2:	jb     0x41610b
  4160b4:	repnz dec eax
  4160b6:	cmp    eax,0x959aa983
  4160bb:	push   edi
  4160bc:	std    
  4160bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160be:	call   0x316de8b
  4160c3:	inc    ebx
  4160c4:	sar    DWORD PTR ds:0xf76bdeaf,0x81
  4160cb:	aad    0xaa
  4160cd:	inc    edx
  4160ce:	rol    DWORD PTR [esi+0x3c],1
  4160d1:	ss adc al,0x5b
  4160d4:	cmp    al,0xa
  4160d6:	(bad)  
  4160d7:	jmp    0xfde168ac
  4160dc:	mov    cl,0xc8
  4160de:	ins    DWORD PTR es:[edi],dx
  4160df:	sbb    cl,BYTE PTR [ebx]
  4160e1:	ins    BYTE PTR es:[edi],dx
  4160e2:	mov    esp,0x12d97050
  4160e7:	dec    ecx
  4160e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e9:	mov    cl,0x17
  4160eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ec:	pushf  
  4160ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ee:	pop    ss
  4160ef:	sbb    al,0x28
  4160f1:	dec    ecx
  4160f2:	ins    DWORD PTR es:[edi],dx
  4160f3:	push   eax
  4160f4:	xor    edx,edi
  4160f6:	(bad)  
  4160f7:	cmp    ebx,DWORD PTR [ecx+0x47e01847]
  4160fd:	mov    ch,0xdb
  4160ff:	xor    DWORD PTR ds:0xd5da987b,ebp
  416105:	push   esi
  416106:	lods   al,BYTE PTR ds:[esi]
  416107:	adc    bh,BYTE PTR [edi-0x3b3c3071]
  41610d:	adc    BYTE PTR [ecx],ch
  41610f:	out    0x0,eax
  416111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416112:	aad    0x10
  416114:	adc    edx,DWORD PTR [eax]
  416116:	jecxz  0x41615f
  416118:	or     al,0x61
  41611a:	jnp    0x41612f
  41611c:	(bad)  
  41611d:	jo     0x4160bb
  41611f:	rcr    BYTE PTR [edx-0x60],cl
  416122:	xor    al,0x2f
  416124:	dec    ecx
  416125:	pop    esi
  416126:	das    
  416127:	jno    0x41619c
  416129:	bound  ebp,QWORD PTR [eax+eiz*1]
  41612c:	lods   al,BYTE PTR ds:[esi]
  41612d:	leave  
  41612e:	xor    al,0x7e
  416130:	jp     0x4161ae
  416132:	xor    esi,DWORD PTR [eax]
  416134:	jnp    0x416100
  416136:	ror    BYTE PTR [ecx],cl
  416138:	ror    BYTE PTR [ecx],0x9d
  41613b:	lods   al,BYTE PTR ds:[esi]
  41613c:	sub    DWORD PTR [esi],ebx
  41613e:	mov    ds,esi
  416140:	test   DWORD PTR [ebp+0x4a],ebx
  416143:	xor    eax,0xb3da89d
  416148:	push   esp
  416149:	mov    ebp,0xf1571af7
  41614e:	lea    esp,[ebx]
  416150:	sahf   
  416151:	lods   eax,DWORD PTR ds:[esi]
  416152:	sbb    esp,DWORD PTR [edx-0x6e]
  416155:	add    ah,BYTE PTR [ecx]
  416157:	setge  BYTE PTR [edi-0x736c6efc]
  41615e:	ror    BYTE PTR [edx],0xd8
  416161:	and    DWORD PTR [edx+0x6f],edx
  416164:	jbe    0x4160fc
  416166:	ret    0xfd94
  416169:	fs pop edx
  41616b:	clc    
  41616c:	mov    ecx,0x67f154c9
  416171:	xor    BYTE PTR [eax+0x2cb2fef7],0xeb
  416178:	outs   dx,BYTE PTR ds:[esi]
  416179:	(bad)  
  41617a:	out    0xf2,eax
  41617c:	pop    edx
  41617d:	pop    ebx
  41617e:	test   DWORD PTR [esi],eax
  416180:	test   BYTE PTR [edi+0x55db7bb],0x4c
  416187:	jl     0x416169
  416189:	aam    0x18
  41618b:	add    ecx,DWORD PTR [edx]
  41618d:	(bad)  
  41618e:	in     al,0x87
  416190:	ror    esi,cl
  416192:	sti    
  416193:	push   ss
  416194:	push   ds
  416195:	fimul  DWORD PTR [edx-0x70]
  416198:	adc    dh,dl
  41619a:	(bad)  
  41619b:	push   eax
  41619c:	inc    ebp
  41619d:	aad    0xf6
  41619f:	adc    BYTE PTR [edi-0x29646d0b],dh
  4161a5:	dec    esi
  4161a6:	push   0x16
  4161a8:	in     eax,dx
  4161a9:	fwait
  4161aa:	js     0x416221
  4161ac:	pop    ebp
  4161ad:	mov    eax,0xfef18f33
  4161b2:	std    
  4161b3:	push   edx
  4161b4:	dec    edx
  4161b5:	lds    eax,FWORD PTR [ebx+0x4f64eabc]
  4161bb:	test   DWORD PTR [edx],edx
  4161bd:	or     bh,ch
  4161bf:	addr16 jae 0x416185
  4161c2:	js     0x416223
  4161c4:	xor    ah,BYTE PTR [ebp-0x1d]
  4161c7:	xlat   BYTE PTR ds:[ebx]
  4161c8:	inc    esp
  4161c9:	or     al,0x3f
  4161cb:	iret   
  4161cc:	mov    ebp,0x93cbc91c
  4161d1:	mov    ds:0xb28de1f3,al
  4161d6:	int3   
  4161d7:	or     ebx,ecx
  4161d9:	mov    esp,0x4b7e1d16
  4161de:	in     eax,dx
  4161df:	mov    cl,bl
  4161e1:	scas   al,BYTE PTR es:[edi]
  4161e2:	xor    BYTE PTR [ebx],cl
  4161e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e5:	jp     0x416172
  4161e7:	and    eax,0x715db79
  4161ec:	or     DWORD PTR [esi-0x43433ce1],ebx
  4161f2:	fisttp QWORD PTR [esi+0x47]
  4161f5:	jae    0x41622b
  4161f7:	push   ebx
  4161f8:	(bad)  [edx+0x4e]
  4161fb:	out    dx,eax
  4161fc:	lds    eax,FWORD PTR [ebx]
  4161fe:	enter  0xd989,0x44
  416202:	jnp    0x4161aa
  416204:	push   cs
  416205:	test   BYTE PTR [edi+edx*1+0x486cae87],dl
  41620c:	aad    0x96
  41620e:	xchg   esp,eax
  41620f:	loopne 0x4161cc
  416211:	leave  
  416212:	jns    0x4161e2
  416214:	cdq    
  416215:	in     eax,0x4f
  416217:	aad    0x2f
  416219:	jno    0x416244
  41621b:	std    
  41621c:	adc    eax,0xf688f0eb
  416221:	xchg   ecx,eax
  416222:	jle    0x416292
  416224:	push   0x3b
  416226:	push   ebp
  416227:	mov    al,ds:0x77d30990
  41622c:	arpl   WORD PTR [eax+0x2f],si
  41622f:	nop
  416230:	das    
  416231:	and    eax,0x8fb5788f
  416236:	push   esi
  416237:	push   0xffffffae
  416239:	lods   al,BYTE PTR ds:[esi]
  41623a:	loopne 0x416262
  41623c:	in     eax,dx
  41623d:	repnz mov ah,0x83
  416240:	jle    0x4161db
  416242:	retf   0x2ccd
  416245:	cmc    
  416246:	jge    0x41622f
  416248:	stos   DWORD PTR es:[edi],eax
  416249:	pusha  
  41624a:	add    ecx,DWORD PTR [esi+0x42]
  41624d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624e:	push   0xffffffc7
  416250:	in     al,dx
  416251:	xor    dl,BYTE PTR [edx+0x1c]
  416254:	fsub   DWORD PTR [ebx]
  416256:	jge    0x416283
  416258:	sub    dl,BYTE PTR [ebp*2+0x36d1d69d]
  41625f:	imul   ecx,DWORD PTR [edx+0x13],0xffffff95
  416263:	xchg   edx,eax
  416264:	call   0x9f64ca48
  416269:	sub    esp,DWORD PTR [eax-0x2e4b891b]
  41626f:	xchg   BYTE PTR [edi],al
  416271:	jmp    0x4161f6
  416273:	sbb    DWORD PTR [ecx+edi*2+0x47695d91],ebx
  41627a:	sub    DWORD PTR [eax+0x60],eax
  41627d:	rcr    DWORD PTR [edx-0x1],1
  416280:	ret    0x2fc
  416283:	scas   eax,DWORD PTR es:[edi]
  416284:	leave  
  416285:	mov    ebp,0xee35a76e
  41628a:	ret    
  41628b:	or     eax,0xeb6bc4b3
  416290:	cdq    
  416291:	jne    0x41624e
  416293:	add    BYTE PTR [esp+edx*4-0x6e],dh
  416297:	gs push esp
  416299:	xor    edx,DWORD PTR [esi]
  41629b:	xchg   ecx,eax
  41629c:	mov    dl,0x7b
  41629e:	mov    edi,0x58e1e37f
  4162a3:	mov    ecx,0x2673a215
  4162a8:	jmp    ecx
  4162aa:	add    ecx,DWORD PTR [edi-0x7f440119]
  4162b0:	test   eax,0xce7ab181
  4162b5:	cmp    eax,0xf8c9874f
  4162ba:	lds    eax,FWORD PTR [edx+0x13cb9baa]
  4162c0:	(bad)  
  4162c1:	dec    ecx
  4162c2:	loopne 0x4162b9
  4162c4:	and    eax,0x330ecf5a
  4162c9:	cmp    dl,bh
  4162cb:	test   eax,0xaafa1823
  4162d0:	xchg   edi,eax
  4162d1:	hlt    
  4162d2:	pop    edx
  4162d3:	and    BYTE PTR [edi+0x532fa3e8],ch
  4162d9:	cmc    
  4162da:	scas   eax,DWORD PTR es:[edi]
  4162db:	repnz inc edi
  4162dd:	xchg   ebx,eax
  4162de:	hlt    
  4162df:	or     bl,BYTE PTR [eax+0x2845b96c]
  4162e5:	jge    0x4162b9
  4162e7:	fdivr  st(4),st
  4162e9:	mov    esp,0x48b6cd77
  4162ee:	loop   0x416274
  4162f0:	cwde   
  4162f1:	in     al,0x41
  4162f3:	cmp    BYTE PTR [ebp-0x7d],al
  4162f6:	loope  0x41632b
  4162f8:	enter  0x8eea,0x70
  4162fc:	xor    eax,0x6f3e1eda
  416301:	fwait
  416302:	ret    0x6bc6
  416305:	out    dx,eax
  416306:	jmp    0xab40:0x1a1ac356
  41630d:	test   al,0x89
  41630f:	lahf   
  416310:	outs   dx,DWORD PTR ds:[esi]
  416311:	es (bad) 
  416314:	sbb    dl,BYTE PTR [eax+0x764a28d]
  41631a:	jecxz  0x416337
  41631c:	xchg   edx,eax
  41631d:	sub    ebp,eax
  41631f:	pop    edi
  416320:	inc    edx
  416321:	in     eax,dx
  416322:	call   0xc2a9483d
  416327:	sub    dl,ah
  416329:	jge    0x416359
  41632b:	ins    DWORD PTR es:[edi],dx
  41632c:	les    ebp,FWORD PTR [edx+0xab49c9]
  416332:	push   esp
  416333:	leave  
  416334:	je     0x4163a9
  416336:	adc    eax,0x97260b1a
  41633b:	jno    0x41634d
  41633d:	adc    eax,0xf6dae4b1
  416342:	int3   
  416343:	pop    ss
  416344:	in     eax,dx
  416345:	mov    eax,ds:0x5d8b6423
  41634a:	js     0x41636a
  41634c:	daa    
  41634d:	imul   ecx,DWORD PTR [ebx+0x6a],0x1d
  416351:	popf   
  416352:	popf   
  416353:	xchg   ebp,eax
  416354:	cmp    DWORD PTR [ebp-0x7],ebp
  416357:	push   edx
  416358:	bound  eax,QWORD PTR [edx]
  41635a:	xchg   DWORD PTR [esi-0x729a375e],edx
  416360:	adc    ecx,DWORD PTR [esi-0x5ec24a95]
  416366:	mov    dl,0x89
  416368:	or     bh,BYTE PTR [edx+eiz*8+0x41]
  41636c:	daa    
  41636d:	mov    al,ds:0x15b4cac1
  416372:	daa    
  416373:	in     al,0x32
  416375:	and    bh,BYTE PTR [ebp+0x2d]
  416378:	jmp    0xfb2777dc
  41637d:	xchg   esp,eax
  41637e:	and    edi,ebx
  416380:	mov    bh,0x9c
  416382:	daa    
  416383:	push   cs
  416384:	or     edi,DWORD PTR [ebp-0x680719cd]
  41638a:	call   0x2521026e
  41638f:	bnd jl 0x416358
  416392:	and    BYTE PTR [eax-0x45],0xd7
  416396:	dec    ebx
  416397:	repz lea ecx,[esp+esi*2+0x7a094589]
  41639f:	out    0xf1,eax
  4163a1:	into   
  4163a2:	inc    eax
  4163a3:	xchg   BYTE PTR [ebx],ah
  4163a5:	shl    BYTE PTR [esi],cl
  4163a7:	jae    0x41634f
  4163a9:	loope  0x41633a
  4163ab:	fwait
  4163ac:	shr    BYTE PTR [esi-0x3e],cl
  4163af:	inc    ebp
  4163b0:	jb     0x416347
  4163b2:	int    0x8a
  4163b4:	mov    ebp,0x7ecbe3a2
  4163b9:	inc    edx
  4163ba:	outs   dx,BYTE PTR ds:[esi]
  4163bb:	mov    bh,0xdd
  4163bd:	sub    BYTE PTR [ecx-0xc54e7c3],ch
  4163c3:	xor    eax,0x844267bc
  4163c8:	add    eax,0x3a
  4163cb:	sti    
  4163cc:	jb     0x41637e
  4163ce:	pop    esp
  4163cf:	or     BYTE PTR [ebp+ecx*2+0xce78479],0x14
  4163d7:	jmp    0x4163e3
  4163d9:	dec    esi
  4163da:	mov    WORD PTR [eax],cs
  4163dc:	int3   
  4163dd:	inc    edx
  4163de:	cmp    edx,DWORD PTR [esi]
  4163e0:	lock mov WORD PTR [ebp+eiz*8-0x550a956e],gs
  4163e8:	scas   al,BYTE PTR es:[edi]
  4163e9:	pop    edi
  4163ea:	loope  0x416459
  4163ec:	mov    cl,0x25
  4163ee:	sbb    al,0x75
  4163f0:	pop    ds
  4163f1:	retf   0x5ad5
  4163f4:	shr    BYTE PTR ds:0xb1edc7ff,cl
  4163fa:	or     al,0xae
  4163fc:	sub    eax,0xfac544bc
  416401:	dec    esp
  416402:	add    al,0x76
  416404:	jmp    0x41639e
  416406:	xlat   BYTE PTR ds:[ebx]
  416407:	int    0x14
  416409:	cmp    ecx,edi
  41640b:	je     0x4163ca
  41640d:	cmovp  edx,DWORD PTR ds:0xa0a3e2b4
  416414:	push   ebx
  416415:	xchg   DWORD PTR [ebp+0x24],ebp
  416418:	add    esi,DWORD PTR [ebx-0x1b6634de]
  41641e:	jno    0x41647c
  416420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416421:	arpl   ax,dx
  416423:	inc    esp
  416424:	xor    ebp,ebp
  416426:	xchg   ebx,eax
  416427:	inc    esp
  416428:	or     ecx,DWORD PTR [ebp+0x6450ba02]
  41642e:	adc    bh,ah
  416430:	cli    
  416431:	mov    edi,0x98486cd7
  416436:	cwde   
  416437:	cmp    al,0xf2
  416439:	mov    edi,eax
  41643b:	das    
  41643c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41643d:	cmp    ebp,esi
  41643f:	inc    ebp
  416440:	pop    edx
  416441:	sub    DWORD PTR [ebp+0x40],edi
  416444:	out    0xc5,al
  416446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416448:	mov    dl,0xbf
  41644a:	clc    
  41644b:	ins    DWORD PTR es:[edi],dx
  41644c:	int    0xdb
  41644e:	lds    edx,FWORD PTR [ebp+0x10f505e9]
  416454:	sub    ch,BYTE PTR [ebx+edi*8+0x41]
  416458:	loopne 0x416428
  41645a:	clc    
  41645b:	repz test eax,0xa9407daf
  416461:	lds    esp,FWORD PTR [edx+0x9]
  416464:	lods   al,BYTE PTR ds:[esi]
  416465:	shl    DWORD PTR [eax+0x104752b3],cl
  41646b:	dec    eax
  41646c:	mov    esi,0x9172bdf2
  416471:	ret    
  416472:	ror    BYTE PTR [edx-0x67],cl
  416475:	shr    BYTE PTR [esi-0x1483f39],cl
  41647b:	cdq    
  41647c:	nop
  41647d:	cli    
  41647e:	jae    0x4164c0
  416480:	inc    ebx
  416481:	inc    esi
  416482:	jne    0x416466
  416484:	nop
  416485:	push   esp
  416486:	nop
  416487:	fwait
  416488:	js     0x416444
  41648a:	imul   eax,DWORD PTR [esi-0x5e],0x619b57a6
  416491:	fdiv   DWORD PTR [edx-0x4a]
  416494:	test   DWORD PTR [ecx+0x6e],esi
  416497:	mov    BYTE PTR [ebx+ebp*1],ch
  41649a:	jge    0x4164c9
  41649c:	es jp  0x41649f
  41649f:	cmp    DWORD PTR [edx-0x4ed8d3e7],esi
  4164a5:	push   ds
  4164a6:	mov    ah,0xc1
  4164a8:	int    0x96
  4164aa:	dec    esp
  4164ab:	push   cs
  4164ac:	jl     0x4164ba
  4164ae:	or     al,0x8
  4164b0:	mov    ds:0x8931fe22,al
  4164b5:	scas   eax,DWORD PTR es:[edi]
  4164b6:	jle    0x4164e4
  4164b8:	push   eax
  4164b9:	mov    ah,0x5c
  4164bb:	es mov ebp,0x16916504
  4164c1:	je     0x41646e
  4164c3:	push   esi
  4164c4:	sub    DWORD PTR [ebp+0x21eed297],0x612908a4
  4164ce:	xor    eax,0x2b835ff0
  4164d3:	jo     0x4164e1
  4164d5:	cdq    
  4164d6:	and    eax,0xa450bfbc
  4164db:	pop    es
  4164dc:	adc    ebp,edx
  4164de:	nop
  4164df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e0:	fwait
  4164e1:	outs   dx,BYTE PTR ds:[esi]
  4164e2:	or     BYTE PTR [eax+edx*4-0x5d],bl
  4164e6:	cwde   
  4164e7:	mov    esp,esi
  4164e9:	push   edx
  4164ea:	nop
  4164eb:	setp   cl
  4164ee:	mov    dl,0xc
  4164f0:	cdq    
  4164f1:	repnz das 
  4164f3:	ror    BYTE PTR [esi+0x1e63061],cl
  4164f9:	iret   
  4164fa:	or     dh,bh
  4164fc:	adc    BYTE PTR [ecx-0x49bd74f8],cl
  416502:	popf   
  416503:	pop    ebx
  416504:	adc    al,0x60
  416506:	xchg   ebx,eax
  416507:	imul   esi,DWORD PTR [edi+0x72],0xffffffdc
  41650b:	adc    bh,BYTE PTR [edi-0x4b]
  41650e:	mov    eax,ds:0x7c4b01b1
  416513:	arpl   si,bp
  416515:	les    edx,FWORD PTR [ebx-0x4e44948c]
  41651b:	dec    ebp
  41651c:	mov    edx,DWORD PTR [edx]
  41651e:	push   cs
  41651f:	mov    edx,ebp
  416521:	call   0x34c5:0xcfbc244e
  416528:	sub    DWORD PTR [edx-0xfc7a73d],ecx
  41652e:	push   ecx
  41652f:	push   ds
  416530:	rcl    DWORD PTR [esp+ecx*4+0x2ceab40f],cl
  416537:	and    al,0xad
  416539:	mov    DWORD PTR [eax],esp
  41653b:	or     al,0x65
  41653d:	cdq    
  41653e:	popa   
  41653f:	adc    eax,0xf6262327
  416544:	retf   
  416545:	pop    ds
  416546:	jae    0x416509
  416548:	stos   BYTE PTR es:[edi],al
  416549:	mov    esp,0xd5d73dd6
  41654e:	ss jb  0x41650f
  416551:	shl    BYTE PTR [esi-0x74],cl
  416554:	aam    0x75
  416556:	jb     0x4164e1
  416558:	push   ebp
  416559:	xor    al,0xb0
  41655b:	(bad)  
  41655c:	ja     0x4164e3
  41655e:	sub    eax,0xe7cdea4e
  416563:	sti    
  416564:	mov    esp,?
  416566:	out    dx,al
  416567:	pop    ebx
  416568:	out    0x7f,eax
  41656a:	push   ss
  41656b:	ins    BYTE PTR es:[edi],dx
  41656c:	sbb    al,0x47
  41656e:	repnz and al,0xa9
  416571:	xchg   ebx,eax
  416572:	call   0xcf9d8b8
  416577:	and    al,0x96
  416579:	pusha  
  41657a:	stc    
  41657b:	mov    eax,ds:0x3ca39a7
  416580:	push   ecx
  416581:	mov    dh,0xc0
  416583:	pop    ebx
  416584:	push   ebx
  416585:	pop    ebx
  416586:	and    dl,BYTE PTR [eax]
  416588:	iret   
  416589:	loop   0x416529
  41658b:	popf   
  41658c:	data16 jae 0x416529
  41658f:	mov    DWORD PTR [edx+0x44],esp
  416592:	xchg   DWORD PTR [ebx+0x1e],edx
  416595:	push   0x1
  416597:	pop    eax
  416598:	jmp    0x9940:0x59456144
  41659f:	or     eax,0x6d85f5b5
  4165a4:	ret    
  4165a5:	mov    esp,0x8886771d
  4165aa:	dec    esp
  4165ab:	ret    
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	in     eax,dx
  4165ae:	(bad)  
  4165af:	jmp    0xf62b5ba
  4165b4:	jmp    0x4165f4
  4165b6:	cmp    DWORD PTR [ecx-0x4c72994],esp
  4165bc:	or     eax,0xfc9ce0d0
  4165c1:	stos   DWORD PTR es:[edi],eax
  4165c2:	xor    bl,dl
  4165c4:	xor    al,BYTE PTR [ecx+0x4bd4dab]
  4165ca:	jb     0x4165d3
  4165cc:	ds mov esi,0xe1c6e508
  4165d2:	test   ecx,esi
  4165d4:	inc    ebp
  4165d5:	not    ebx
  4165d7:	cwde   
  4165d8:	ds gs inc ebx
  4165db:	or     BYTE PTR [edx-0x1ae95323],ch
  4165e1:	fwait
  4165e2:	xchg   ecx,eax
  4165e3:	push   edx
  4165e4:	xor    ch,BYTE PTR [ebp+0x58]
  4165e7:	retf   0x2b31
  4165ea:	scas   al,BYTE PTR es:[edi]
  4165eb:	bt     DWORD PTR [eax],0xea
  4165ef:	and    dl,BYTE PTR [ebp-0x4d1783fd]
  4165f5:	push   eax
  4165f6:	inc    ecx
  4165f7:	sub    edx,DWORD PTR [esp+ecx*2+0x2328ea5]
  4165fe:	bound  ebp,QWORD PTR [ebx+0x16981583]
  416604:	mov    ds:0xc879a5fa,al
  416609:	fs dec eax
  41660b:	(bad)  
  41660c:	retf   0x4f26
  41660f:	push   esp
  416610:	pop    ss
  416611:	mov    ch,0x9d
  416613:	leave  
  416614:	arpl   cx,cx
  416616:	call   0xbf5fe062
  41661b:	pop    edi
  41661c:	hlt    
  41661d:	lds    eax,FWORD PTR [esi+0x49]
  416620:	dec    edi
  416621:	lock sub bl,cl
  416624:	add    DWORD PTR [ebp+edi*4+0x536efcc9],esp
  41662b:	add    al,0x21
  41662d:	out    dx,al
  41662e:	mov    eax,ds:0xc8d5e36f
  416633:	inc    esi
  416634:	add    DWORD PTR [eax],esp
  416636:	mov    bl,ah
  416638:	sbb    al,0x9c
  41663a:	aas    
  41663b:	add    BYTE PTR [esi],cl
  41663d:	mov    ds:0x406ddf93,eax
  416642:	in     al,0xd4
  416644:	mov    eax,0xeb154e28
  416649:	test   eax,0xf7a36143
  41664e:	sbb    esp,DWORD PTR [edx+eiz*8]
  416651:	lods   al,BYTE PTR ds:[esi]
  416652:	jno    0x416629
  416654:	sub    bl,ah
  416656:	mov    dh,0x3d
  416658:	outs   dx,DWORD PTR fs:[esi]
  41665a:	and    esi,DWORD PTR [edx]
  41665c:	mov    BYTE PTR [ebp+0x42053e9d],dl
  416662:	add    esi,DWORD PTR [edx]
  416664:	push   ecx
  416665:	enter  0x4174,0x7
  416669:	pop    ebx
  41666a:	jle    0x416659
  41666c:	sub    ebx,DWORD PTR [eax]
  41666e:	cmc    
  41666f:	or     ch,BYTE PTR [eax-0x28]
  416672:	(bad)
  416675:	jge    0x41665d
  416677:	dec    esp
  416678:	mov    ch,0x13
  41667a:	sbb    bh,BYTE PTR [esi+0x5cfad9f6]
  416680:	push   0xffffffa7
  416682:	xchg   edi,eax
  416683:	jnp    0x4166c8
  416685:	in     al,dx
  416686:	nop
  416687:	loop   0x416677
  416689:	xor    cl,cl
  41668b:	mov    ch,0x7a
  41668d:	push   0x1c
  41668f:	jmp    0x6356:0xb806b248
  416696:	arpl   WORD PTR gs:[eax],di
  416699:	push   ds
  41669a:	scas   eax,DWORD PTR es:[edi]
  41669b:	push   es
  41669c:	xchg   esp,eax
  41669d:	lods   eax,DWORD PTR ds:[esi]
  41669e:	cdq    
  41669f:	inc    ebx
  4166a0:	xor    eax,0xfce514db
  4166a5:	ja     0x41664f
  4166a7:	pop    ebx
  4166a8:	jae    0x4166ed
  4166aa:	(bad)  
  4166ab:	daa    
  4166ac:	cmp    al,0xc2
  4166ae:	jne    0x416640
  4166b0:	push   edx
  4166b1:	ins    DWORD PTR es:[edi],dx
  4166b2:	or     ch,bl
  4166b4:	cvtps2pi mm7,QWORD PTR [edi]
  4166b7:	inc    ebp
  4166b8:	jg     0x4166be
  4166ba:	scas   eax,DWORD PTR es:[edi]
  4166bb:	add    eax,0xc84c65eb
  4166c0:	mov    dh,0xb
  4166c2:	push   esp
  4166c3:	(bad)  
  4166c4:	enter  0xbbf3,0x5b
  4166c8:	ret    
  4166c9:	jmp    0x416680
  4166cb:	(bad)  
  4166cc:	(bad)  
  4166cd:	xchg   BYTE PTR [edi],ah
  4166cf:	mov    al,ds:0x9f0afe4e
  4166d4:	sub    BYTE PTR [ecx],al
  4166d6:	jg     0x416708
  4166d8:	sbb    al,0x21
  4166da:	cwde   
  4166db:	std    
  4166dc:	aaa    
  4166dd:	inc    ecx
  4166de:	cs sti 
  4166e0:	test   eax,0xceeab6ea
  4166e5:	mov    al,0x73
  4166e7:	imul   edi,ecx,0xd4f1a2e6
  4166ed:	mov    cl,BYTE PTR [ecx-0x44]
  4166f0:	xchg   BYTE PTR [bx+si],cl
  4166f3:	jae    0x4166b9
  4166f5:	dec    ecx
  4166f6:	rcl    ah,1
  4166f8:	or     ebp,esp
  4166fa:	add    ah,BYTE PTR [eax]
  4166fc:	mov    ch,0xa4
  4166fe:	pop    edx
  4166ff:	dec    edx
  416700:	jg     0x416712
  416702:	dec    ebx
  416703:	in     al,dx
  416704:	sbb    eax,0xd3bae6ec
  416709:	ins    BYTE PTR es:[edi],dx
  41670a:	inc    esi
  41670b:	sbb    bl,BYTE PTR [esp+eax*4+0x42]
  41670f:	sub    BYTE PTR [edx+0x22],bh
  416712:	sbb    BYTE PTR [edx],0x52
  416715:	inc    ebp
  416717:	sub    ch,BYTE PTR [ebx+ecx*8-0x17]
  41671b:	jl     0x4166e6
  41671d:	pop    eax
  41671e:	and    DWORD PTR es:[ebx+0x76a809cc],eax
  416725:	shl    ecx,1
  416727:	xor    al,0x1d
  416729:	xchg   BYTE PTR [edx+edi*8],dl
  41672c:	mov    dl,0x3f
  41672e:	dec    esp
  41672f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416730:	sub    eax,DWORD PTR [ebx+0x8]
  416733:	add    BYTE PTR [edx+0x16a2798c],dl
  416739:	cwde   
  41673a:	das    
  41673b:	ins    BYTE PTR es:[edi],dx
  41673c:	mov    bl,0xb2
  41673e:	pcmpgtw mm3,QWORD PTR [edi+edi*4]
  416742:	add    eax,0x90c64427
  416747:	or     esp,DWORD PTR [ecx+0x3]
  41674a:	and    BYTE PTR [ecx-0x4c833535],cl
  416750:	jmp    0x4167cc
  416752:	mov    dh,0xe2
  416754:	xchg   ebp,eax
  416755:	adc    bh,BYTE PTR [ecx+0x48]
  416758:	retf   0x32cb
  41675b:	xlat   BYTE PTR ds:[ebx]
  41675c:	shr    BYTE PTR [edi+esi*2],1
  41675f:	push   edi
  416760:	xchg   ecx,eax
  416761:	ret    0x5bef
  416764:	fnstenv [ebx+edx*1-0x7]
  416768:	int    0x54
  41676a:	or     esi,DWORD PTR [eax+0x3f80052e]
  416770:	xor    BYTE PTR [eax+esi*1+0x205a7818],0x16
  416778:	(bad)  
  416779:	mov    ecx,0x38aeddbc
  41677e:	aam    0x23
  416780:	sub    ecx,DWORD PTR [eax]
  416782:	ss enter 0xabdb,0xb8
  416787:	xchg   esi,eax
  416788:	jnp    0x4167e3
  41678a:	fxch   st(6)
  41678c:	into   
  41678d:	pop    esi
  41678e:	mov    ah,0xe0
  416790:	stos   BYTE PTR es:[edi],al
  416791:	sar    BYTE PTR [ebp+0x57],0xe6
  416795:	retf   
  416796:	adc    ebx,DWORD PTR [edi+0x2dccb7a9]
  41679c:	mov    ebp,0xf5190929
  4167a1:	mov    cl,0x93
  4167a3:	std    
  4167a4:	pop    ebx
  4167a5:	div    BYTE PTR [ecx+eax*4-0x67]
  4167a9:	mov    al,ds:0x4b6195dd
  4167ae:	popa   
  4167af:	add    BYTE PTR [ebx+0x105c9ea0],dh
  4167b5:	cmp    al,0x94
  4167b7:	call   DWORD PTR [edx]
  4167b9:	in     eax,dx
  4167ba:	cwde   
  4167bb:	sbb    dh,BYTE PTR [esi]
  4167bd:	lock ret 0x5903
  4167c1:	sbb    bh,BYTE PTR [ecx+ebx*8+0x49aeb956]
  4167c8:	scas   al,BYTE PTR es:[edi]
  4167c9:	jbe    0x4167f0
  4167cb:	lea    ebp,[eax]
  4167cd:	and    al,0x8f
  4167cf:	stc    
  4167d0:	cmc    
  4167d1:	out    dx,eax
  4167d2:	push   ebp
  4167d3:	repnz push esi
  4167d5:	dec    esp
  4167d6:	mov    DWORD PTR [edx+0x56bc4163],ebx
  4167dc:	out    dx,al
  4167dd:	fisttp DWORD PTR [eax]
  4167df:	and    al,0x61
  4167e1:	jnp    0x416800
  4167e3:	xor    al,0xa0
  4167e5:	mov    dl,0x96
  4167e7:	lods   al,BYTE PTR ds:[esi]
  4167e8:	xchg   esp,eax
  4167e9:	xlat   BYTE PTR ds:[ebx]
  4167ea:	cmp    ecx,DWORD PTR [ebx]
  4167ec:	(bad)  
  4167ee:	mov    eax,0xad3c9032
  4167f3:	jg     0x416865
  4167f5:	repz ja 0x41684c
  4167f8:	push   ecx
  4167f9:	je     0x41679d
  4167fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167fc:	leave  
  4167fd:	popa   
  4167fe:	mov    edx,0x39c347de
  416803:	repnz loopne 0x416788
  416806:	imul   ebp,DWORD PTR [ebx+0x76301283],0xffffffb9
  41680d:	xchg   edi,eax
  41680e:	pop    es
  41680f:	pop    edi
  416810:	cmc    
  416811:	dec    ebx
  416812:	inc    edx
  416813:	adc    BYTE PTR [esi+0x56],cl
  416816:	out    0xfe,eax
  416818:	push   es
  416819:	sub    ebp,esi
  41681b:	imul   ecx,DWORD PTR [esi+0x32],0x63
  41681f:	sub    eax,0x51d17ebd
  416824:	mov    cl,0xb2
  416826:	pop    ebx
  416827:	mov    ah,0x86
  416829:	push   eax
  41682a:	fcomp  DWORD PTR [eax+0xa]
  41682d:	mov    ?,WORD PTR fs:[ebx+0x6]
  416831:	inc    esp
  416832:	jns    0x416874
  416834:	or     eax,0xb2b8d4c6
  416839:	and    ebp,DWORD PTR [ecx-0x50]
  41683c:	cmp    DWORD PTR [ebp-0xa1f642],ebx
  416842:	retf   
  416843:	mov    ?,WORD PTR [edi-0x5037cb67]
  416849:	test   eax,0x4c1b7a26
  41684e:	cwde   
  41684f:	sub    esp,DWORD PTR [ecx+0x0]
  416852:	enter  0x571a,0x42
  416856:	imul   eax,DWORD PTR [edi],0x9c5f27ae
  41685c:	mov    bh,0x2e
  41685e:	les    edx,FWORD PTR [edi+0x5e046d76]
  416864:	rol    DWORD PTR [ebx+0x1f],0x7d
  416868:	imul   ebx,edi,0x3f
  41686b:	stos   DWORD PTR es:[edi],eax
  41686c:	dec    ebx
  41686d:	mov    BYTE PTR [esi-0x1b],bh
  416870:	int    0xfa
  416872:	rol    esp,cl
  416874:	stos   BYTE PTR es:[edi],al
  416875:	xchg   DWORD PTR [edx+0x2d],eax
  416878:	rol    DWORD PTR [esi+eiz*1],1
  41687b:	xor    al,0x7
  41687d:	mov    eax,ds:0x5af72806
  416882:	fs fwait
  416884:	ja     0x416812
  416886:	(bad)  [esi]
  416888:	mov    ch,0xca
  41688a:	inc    edx
  41688b:	out    dx,eax
  41688c:	ins    DWORD PTR es:[edi],dx
  41688d:	mov    BYTE PTR [ebx+edi*1-0x30],bh
  416891:	cmp    DWORD PTR [eax+0x41c5ae13],esp
  416897:	jae    0x4168cf
  416899:	dec    ebx
  41689a:	push   eax
  41689b:	pop    es
  41689c:	int    0xb0
  41689e:	mov    cl,BYTE PTR [eax+ecx*8+0x77]
  4168a2:	aaa    
  4168a3:	mov    ch,0x3b
  4168a5:	inc    esi
  4168a6:	jl     0x41682d
  4168a8:	mov    esi,0x7748aa62
  4168ad:	and    BYTE PTR ds:0x64a63eb8,dh
  4168b3:	xchg   edx,eax
  4168b4:	mov    ecx,0xb4aea7e4
  4168b9:	fsub   st,st(4)
  4168bb:	stos   BYTE PTR es:[edi],al
  4168bc:	jp     0x41692a
  4168be:	mov    al,ds:0x9b9bea6e
  4168c3:	fdivr  st(6),st
  4168c5:	inc    eax
  4168c6:	cld    
  4168c7:	sub    BYTE PTR [esi+0x68b3d78],al
  4168cd:	mov    ecx,0xecac117b
  4168d2:	xchg   esi,eax
  4168d3:	pushf  
  4168d4:	loope  0x416867
  4168d6:	mov    dh,0x50
  4168d8:	xchg   ecx,eax
  4168d9:	and    eax,edx
  4168db:	adc    DWORD PTR [eax-0x7b],0x68164717
  4168e2:	push   ss
  4168e3:	outs   dx,BYTE PTR ds:[esi]
  4168e4:	idiv   DWORD PTR [ebp+0x59]
  4168e7:	pusha  
  4168e8:	icebp  
  4168e9:	and    ch,BYTE PTR fs:[edx]
  4168ec:	sub    dl,ah
  4168ee:	cmc    
  4168ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f0:	stmxcsr DWORD PTR [esi]
  4168f3:	imul   esi,ecx,0x33
  4168f6:	out    0x9f,al
  4168f8:	fnstsw WORD PTR [ecx]
  4168fa:	rcl    DWORD PTR [ebx*2+0x13fdfcf0],1
  416901:	push   0xd065fb05
  416906:	(bad)  
  416907:	in     eax,dx
  416908:	jmp    0x1d69bb2c
  41690d:	sbb    DWORD PTR [ebx],esp
  41690f:	inc    edx
  416910:	popf   
  416911:	mov    ah,0x28
  416913:	(bad)  
  416915:	fcomp  QWORD PTR [eax-0x19dcf041]
  41691b:	(bad)  
  41691c:	mov    ecx,0x3caeedf3
  416921:	aad    0xf7
  416923:	push   cs
  416924:	xchg   edx,ebx
  416926:	jmp    0xa0bb:0x97b6940b
  41692d:	ficomp DWORD PTR [ebx-0x4d]
  416930:	mov    esi,0x1a37cda8
  416935:	pop    es
  416936:	adc    edi,ebx
  416938:	add    al,0x4a
  41693a:	jnp    0x41698d
  41693c:	pop    es
  41693d:	daa    
  41693e:	out    dx,eax
  41693f:	retf   0x3e1e
  416942:	pop    ecx
  416943:	push   ebx
  416944:	pop    esp
  416945:	ins    DWORD PTR es:[edi],dx
  416946:	mov    eax,ds:0x919b0d
  41694b:	and    BYTE PTR ds:0xc1680c73,bl
  416951:	dec    ebx
  416952:	dec    esp
  416953:	and    al,0xd
  416955:	sahf   
  416956:	add    ebp,eax
  416958:	cmp    ch,BYTE PTR [ebx+0x7f]
  41695b:	call   edx
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695f:	jno    0x416927
  416961:	xchg   ecx,eax
  416962:	push   eax
  416963:	mov    bl,0xda
  416965:	jl     0x416966
  416967:	inc    esi
  416968:	lea    ecx,[ecx+0x166fd0da]
  41696e:	into   
  41696f:	sub    al,0xda
  416971:	dec    eax
  416972:	lahf   
  416973:	mov    edi,0x3e49baaa
  416978:	and    BYTE PTR [ecx-0x2895add4],ah
  41697e:	jmp    0xf90c:0xb2f5834d
  416985:	arpl   WORD PTR [ebx-0x19],ax
  416988:	xlat   BYTE PTR ds:[ebx]
  416989:	push   0x7
  41698b:	fcomp  QWORD PTR [edi]
  41698d:	ss aas 
  41698f:	lods   eax,DWORD PTR ds:[esi]
  416990:	ret    
  416991:	(bad)  
  416992:	rol    BYTE PTR [esi],1
  416994:	imul   edi,edx,0xde9b3cf4
  41699a:	sub    DWORD PTR [esi],ebx
  41699c:	fcomp  DWORD PTR [ecx-0x32cd67d0]
  4169a2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a4:	mov    bh,0x45
  4169a6:	or     al,0xb2
  4169a8:	and    DWORD PTR [edi+eiz*1],0x7b
  4169ac:	cmp    al,0xcc
  4169ae:	pop    ds
  4169af:	mov    eax,0xfcfa8ae4
  4169b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b5:	pusha  
  4169b6:	cmp    ecx,DWORD PTR [esi-0x40]
  4169b9:	test   eax,0x102f9e59
  4169be:	push   eax
  4169bf:	ret    0xefd9
  4169c2:	popa   
  4169c3:	call   0xeb8d12d1
  4169c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c9:	mov    bl,0xe0
  4169cb:	dec    eax
  4169cc:	fwait
  4169cd:	(bad)  
  4169ce:	in     eax,dx
  4169cf:	jae    0x41699e
  4169d1:	(bad)  
  4169d2:	popf   
  4169d3:	inc    esi
  4169d4:	inc    edx
  4169d5:	mov    edx,DWORD PTR [ecx]
  4169d7:	mul    BYTE PTR ss:[ebp+edx*1+0x4]
  4169dc:	and    ebp,DWORD PTR [eax]
  4169de:	leave  
  4169df:	ror    DWORD PTR [esi],cl
  4169e1:	mov    ah,0x91
  4169e3:	sbb    al,0x29
  4169e5:	fdivr  QWORD PTR [ebx-0x73]
  4169e8:	ficom  WORD PTR [ebx-0x6d]
  4169eb:	xchg   ebx,eax
  4169ec:	inc    esi
  4169ed:	addr16 push 0x7ab827ee
  4169f3:	mov    edx,0x4bc4c933
  4169f8:	mov    edi,0x4bedae9f
  4169fd:	mov    esp,0x71464963
  416a02:	les    ebp,FWORD PTR [ecx+0x2c92d3f2]
  416a08:	inc    ecx
  416a09:	jnp    0x416a82
  416a0b:	mov    ah,0xde
  416a0d:	sbb    eax,DWORD PTR [eax+edi*1-0x1243aa00]
  416a14:	dec    edx
  416a15:	nop
  416a16:	shl    DWORD PTR [edi+0x4f],0x38
  416a1a:	xchg   edi,eax
  416a1b:	dec    esp
  416a1c:	jge    0x416a1c
  416a1e:	or     al,0x9f
  416a20:	and    ch,BYTE PTR [edx]
  416a22:	xchg   esi,eax
  416a23:	jno    0x4169bc
  416a25:	das    
  416a26:	jo     0x416a3d
  416a28:	ret    0x7a4f
  416a2b:	adc    ah,BYTE PTR [ebx+edi*2]
  416a2e:	xor    BYTE PTR [edi],dl
  416a30:	pop    edi
  416a31:	icebp  
  416a32:	aaa    
  416a33:	mov    ds:0x8e7329da,eax
  416a38:	jo     0x4169ce
  416a3a:	fs push ebx
  416a3c:	repnz dec edi
  416a3e:	fsubr  QWORD PTR [edx-0x22]
  416a41:	std    
  416a42:	imul   edx,DWORD PTR [ecx-0x74],0x33
  416a46:	xor    ebx,DWORD PTR [ebx-0x19d5386a]
  416a4c:	sub    eax,DWORD PTR [eax+0x7df60634]
  416a52:	leave  
  416a53:	fcmovbe st,st(4)
  416a55:	fwait
  416a56:	cmc    
  416a57:	(bad)  
  416a58:	xor    DWORD PTR [edx+0x602fc588],edx
  416a5e:	dec    ecx
  416a5f:	(bad)  
  416a60:	ja     0x416abc
  416a62:	ret    
  416a63:	jp     0x416a04
  416a65:	cmp    al,0x31
  416a67:	mov    dl,0x2b
  416a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6a:	pop    ss
  416a6b:	jge    0x416a2c
  416a6d:	stos   BYTE PTR es:[edi],al
  416a6e:	repz popf 
  416a70:	mov    eax,ds:0xf48a351c
  416a75:	std    
  416a76:	scas   al,BYTE PTR es:[edi]
  416a77:	xlat   BYTE PTR ds:[ebx]
  416a78:	outs   dx,BYTE PTR ds:[esi]
  416a79:	sbb    al,0xcd
  416a7b:	icebp  
  416a7c:	hlt    
  416a7d:	or     eax,0x812d14fa
  416a82:	inc    esp
  416a83:	sub    al,0xf8
  416a85:	clc    
  416a86:	inc    ecx
  416a87:	fwait
  416a88:	xor    ah,cl
  416a8a:	retf   
  416a8b:	mov    ds:0x6b8eda0f,al
  416a90:	mov    ebp,0xd15742af
  416a95:	rol    DWORD PTR [ecx+0xebd043b],0xd9
  416a9c:	outs   dx,DWORD PTR ds:[esi]
  416a9d:	enter  0xc3d9,0x7f
  416aa1:	ror    DWORD PTR [ebp+eax*4+0x49],1
  416aa5:	int3   
  416aa6:	test   BYTE PTR [edx-0x19],dh
  416aa9:	loopne 0x416b1b
  416aab:	mov    esp,0x5b07f8bc
  416ab0:	jl     0xb5b3ea67
  416ab6:	pop    ebp
  416ab7:	das    
  416ab8:	add    esi,DWORD PTR [eax-0x26]
  416abb:	dec    edx
  416abc:	mov    eax,0xb27c1abe
  416ac1:	inc    esp
  416ac2:	mov    bh,0xfe
  416ac4:	fcomp  DWORD PTR [ebx+0x7918d679]
  416aca:	cs dec edi
  416acc:	push   eax
  416acd:	push   0x42
  416acf:	jmp    0x401a:0x7fce0514
  416ad6:	fdivp  st(5),st
  416ad8:	sub    DWORD PTR [ebx],0x5
  416adb:	fcomp  DWORD PTR [edx+edx*1-0x1b]
  416adf:	in     al,dx
  416ae0:	lahf   
  416ae1:	dec    eax
  416ae2:	clc    
  416ae3:	fadd   DWORD PTR [edx+eiz*8]
  416ae6:	inc    esi
  416ae7:	mov    ebx,0x991675c5
  416aec:	jmp    0xe7029438
  416af1:	mov    ah,BYTE PTR [eax]
  416af3:	sar    DWORD PTR ds:0xfa7bc7d6,cl
  416af9:	adc    eax,DWORD PTR [ecx]
  416afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416afc:	xlat   BYTE PTR ds:[ebx]
  416afd:	in     al,0x22
  416aff:	icebp  
  416b00:	scas   eax,DWORD PTR es:[edi]
  416b01:	loope  0x416ace
  416b03:	hlt    
  416b04:	daa    
  416b05:	sahf   
  416b06:	xchg   edi,eax
  416b07:	mov    cl,0xe1
  416b09:	stc    
  416b0a:	sbb    dh,BYTE PTR [edi+0x77]
  416b0d:	js     0x416b72
  416b0f:	fisttp WORD PTR [esi+ecx*4+0x71]
  416b13:	ror    bh,0x84
  416b16:	xor    DWORD PTR [ebx],edx
  416b18:	pop    es
  416b19:	pop    edx
  416b1a:	popf   
  416b1b:	cmp    ch,BYTE PTR [edi]
  416b1d:	mov    dh,BYTE PTR [edi-0x3db4de10]
  416b23:	push   0x2f
  416b25:	shl    BYTE PTR [eax-0x6e6f1906],0xdc
  416b2c:	shl    DWORD PTR [eax+edi*2-0x1d],cl
  416b30:	push   ecx
  416b31:	xchg   esi,eax
  416b32:	les    edi,FWORD PTR [edi-0x1]
  416b35:	mov    eax,0x97fa65c3
  416b3a:	mov    ah,0x6e
  416b3c:	lahf   
  416b3d:	std    
  416b3e:	push   esi
  416b3f:	mov    cl,0x4
  416b41:	xchg   ah,ch
  416b43:	push   ss
  416b44:	xor    esp,ebp
  416b46:	lods   eax,DWORD PTR ds:[esi]
  416b47:	imul   esi,eax,0x3
  416b4a:	(bad)  
  416b4b:	pop    edi
  416b4c:	push   ebp
  416b4d:	inc    eax
  416b4e:	mov    ds:0x685b5988,al
  416b53:	pop    ebx
  416b54:	ret    
  416b55:	push   ebp
  416b56:	mov    edx,0x644b51c5
  416b5b:	jmp    0xb2e8:0x23fdd643
  416b62:	lods   al,BYTE PTR ds:[esi]
  416b63:	pushf  
  416b64:	clc    
  416b65:	sbb    DWORD PTR [ebx-0x32],edx
  416b68:	push   0xb287352a
  416b6d:	lock neg BYTE PTR [ecx+0x8]
  416b71:	imul   esp,DWORD PTR [edx],0xd0e43b81
  416b77:	outs   dx,DWORD PTR ds:[esi]
  416b78:	xchg   esp,eax
  416b79:	cmp    BYTE PTR [ecx],ah
  416b7b:	sar    DWORD PTR [esi-0x19e7a4cc],1
  416b81:	push   esi
  416b82:	test   al,0xce
  416b84:	inc    esi
  416b85:	cli    
  416b86:	adc    eax,DWORD PTR [edx+0x2897ede9]
  416b8c:	ds inc sp
  416b8f:	je     0x416b27
  416b91:	ret    
  416b92:	push   es
  416b93:	lds    ebp,FWORD PTR [ebp+0x62ba9316]
  416b99:	lock jbe 0x416b70
  416b9c:	ret    
  416b9d:	and    al,BYTE PTR [eax-0x60]
  416ba0:	jnp    0x416b3d
  416ba2:	fscale 
  416ba4:	pop    ebp
  416ba5:	loopne 0x416b36
  416ba7:	inc    esp
  416ba8:	push   0x30bdd9e7
  416bad:	adc    eax,0x37b08426
  416bb2:	call   0x868d:0x7214d085
  416bb9:	lods   eax,DWORD PTR ds:[esi]
  416bba:	sbb    al,0xde
  416bbc:	xor    cl,BYTE PTR [eax]
  416bbe:	mov    WORD PTR [eax],gs
  416bc0:	ret    
  416bc1:	inc    ebp
  416bc2:	icebp  
  416bc3:	pop    ds
  416bc4:	sbb    al,0x1c
  416bc6:	xor    ecx,DWORD PTR [ecx-0x3e]
  416bc9:	xchg   ecx,eax
  416bca:	sub    eax,0x1be636bb
  416bcf:	in     eax,0x6b
  416bd1:	and    DWORD PTR [edi],ebp
  416bd3:	repnz and al,0xec
  416bd6:	rcr    BYTE PTR [ebx-0x20e4438f],0x3e
  416bdd:	cmp    al,0xb2
  416bdf:	pop    ecx
  416be0:	sub    al,0x1a
  416be2:	in     eax,dx
  416be3:	add    ebx,DWORD PTR [ebp+0x5b]
  416be6:	stos   DWORD PTR es:[edi],eax
  416be7:	inc    ecx
  416be8:	mov    cl,0xb0
  416bea:	mov    al,0x79
  416bec:	jns    0x416c59
  416bee:	and    DWORD PTR [edi],edx
  416bf0:	je     0x416bbd
  416bf2:	xbegin 0x4303bc23
  416bf8:	mov    esi,0x60c6c5ad
  416bfd:	mov    dl,0xe9
  416bff:	cmp    eax,0x427c73c5
  416c04:	mov    DWORD PTR [ecx],0xda185f47
  416c0a:	mov    gs,WORD PTR [edx-0x7cce6f52]
  416c10:	inc    ecx
  416c11:	retf   
  416c12:	(bad)  
  416c14:	(bad)  [esi+edi*4]
  416c17:	outs   dx,BYTE PTR ds:[esi]
  416c18:	mov    bl,0xd6
  416c1a:	push   0x6c
  416c1c:	ret    0x14b9
  416c1f:	rcr    DWORD PTR [esi-0x49],1
  416c22:	ja     0x416bd7
  416c24:	push   eax
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	push   0x1a428e34
  416c2b:	mov    dl,0x6
  416c2d:	sub    al,0xf7
  416c2f:	mov    dh,0x26
  416c31:	push   cs
  416c32:	xchg   ebx,eax
  416c33:	std    
  416c34:	(bad)  
  416c35:	jmp    DWORD PTR [edi]
  416c37:	xchg   ebp,eax
  416c38:	mov    cl,0x62
  416c3a:	or     al,0x34
  416c3c:	and    al,0x1a
  416c3e:	ds jg  0x416c0c
  416c41:	push   ss
  416c42:	pop    ebx
  416c43:	dec    BYTE PTR [ebx+0x3ee13820]
  416c49:	outs   dx,BYTE PTR ds:[esi]
  416c4a:	mov    esp,0x1f6592ae
  416c4f:	fisttp WORD PTR [edi-0x15]
  416c52:	cmp    al,0xd4
  416c54:	fs scas al,BYTE PTR es:[edi]
  416c56:	(bad)  
  416c57:	stc    
  416c58:	fist   WORD PTR [ecx]
  416c5a:	(bad)  [ebx-0x9]
  416c5d:	lods   al,BYTE PTR ds:[esi]
  416c5e:	das    
  416c5f:	sbb    ch,BYTE PTR [esi+0x57458c6e]
  416c65:	xchg   ebx,eax
  416c66:	std    
  416c67:	std    
  416c68:	sub    DWORD PTR [edi-0x50],eax
  416c6b:	adc    ecx,0x1f
  416c6e:	scas   eax,DWORD PTR es:[edi]
  416c6f:	add    esp,DWORD PTR [edx+0xa313d59]
  416c75:	pop    esp
  416c76:	push   ds
  416c77:	lods   al,BYTE PTR ds:[esi]
  416c78:	lds    eax,FWORD PTR [edi+ebp*8+0x67]
  416c7c:	in     eax,dx
  416c7d:	imul   ecx,DWORD PTR [edi+eax*2+0x6e8fa420],0xfffffff1
  416c85:	aas    
  416c86:	test   DWORD PTR [edi+0x13],edi
  416c89:	mov    esi,0x4ba594ff
  416c8e:	pop    esp
  416c8f:	imul   ebx,DWORD PTR [ecx],0xabaad120
  416c95:	clc    
  416c96:	sahf   
  416c97:	mov    ah,0x55
  416c99:	mov    ah,0xf3
  416c9b:	(bad)  
  416c9c:	jecxz  0x416c59
  416c9e:	fstp   DWORD PTR [ecx]
  416ca0:	lock jl 0x416c8a
  416ca3:	adc    edx,DWORD PTR [eax+0x7d]
  416ca6:	sbb    eax,0x714f532b
  416cab:	lds    ebp,FWORD PTR [eax+0x4def5d33]
  416cb1:	call   0xb1c266d
  416cb6:	jecxz  0x416d02
  416cb8:	jae    0x416d2f
  416cba:	pop    ebp
  416cbb:	push   eax
  416cbc:	xchg   ebp,eax
  416cbd:	mov    bh,0x5d
  416cbf:	mov    ecx,0x4a182889
  416cc4:	inc    ebp
  416cc5:	inc    ebp
  416cc6:	inc    ebx
  416cc7:	adc    eax,0xcd8b475a
  416ccc:	mov    al,ds:0x97bc23be
  416cd1:	mov    WORD PTR [ebx],?
  416cd3:	clc    
  416cd4:	push   esp
  416cd5:	ficom  WORD PTR [esi]
  416cd7:	les    edi,FWORD PTR [edi+0x462f6516]
  416cdd:	call   0xbbe0da20
  416ce2:	inc    DWORD PTR [ebx+ebp*2+0x4]
  416ce6:	hlt    
  416ce7:	add    BYTE PTR [ebp-0x63],dl
  416cea:	fdivr  DWORD PTR ds:0xf7937521
  416cf0:	mov    ?,WORD PTR [ecx]
  416cf2:	jnp    0x416cf9
  416cf4:	mov    eax,0xf16cfc50
  416cf9:	push   0xffffffb2
  416cfb:	push   cs
  416cfc:	mov    edi,0x7c75858d
  416d01:	ret    
  416d02:	cdq    
  416d03:	sbb    BYTE PTR [edi-0x1],bh
  416d06:	fcmovu st,st(1)
  416d08:	sar    DWORD PTR [edi],cl
  416d0a:	dec    edi
  416d0b:	leave  
  416d0c:	(bad)  
  416d0d:	mov    eax,0xd1413194
  416d12:	mov    edx,0x5071033f
  416d17:	test   eax,0xb052007a
  416d1c:	xor    al,0x31
  416d1e:	shl    DWORD PTR [edi+0x9],1
  416d21:	ja     0x416d06
  416d23:	push   esi
  416d24:	call   0x40cd1738
  416d29:	fiadd  WORD PTR [eax+0x62]
  416d2c:	loope  0x416d51
  416d2e:	and    bh,cl
  416d30:	test   al,0x78
  416d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d33:	push   eax
  416d34:	cld    
  416d35:	xchg   ebx,eax
  416d36:	cld    
  416d37:	pop    ss
  416d38:	jecxz  0x416d98
  416d3a:	inc    esi
  416d3b:	lahf   
  416d3c:	cmp    eax,0xbcd8c4ee
  416d41:	sbb    BYTE PTR [ebp+0x11],bh
  416d44:	xlat   BYTE PTR ds:[ebx]
  416d45:	push   edi
  416d46:	dec    ecx
  416d47:	add    al,0x4c
  416d49:	retf   0xf42
  416d4c:	adc    eax,0x980e7d09
  416d51:	pushf  
  416d52:	push   ds
  416d53:	pop    edi
  416d54:	data16 or al,0x8e
  416d57:	push   0xffffff83
  416d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5a:	push   esp
  416d5b:	mov    dl,0x8
  416d5d:	xor    DWORD PTR [esi+0x4d],0xe3c551c7
  416d64:	imul   esi,DWORD PTR [esi+0x3e5097f0],0xffffffba
  416d6b:	fmul   DWORD PTR [eax]
  416d6d:	cmc    
  416d6e:	fwait
  416d6f:	mov    dh,0xdf
  416d71:	xor    ah,al
  416d73:	mov    dh,0x87
  416d75:	dec    ecx
  416d76:	bnd js 0x416d6d
  416d79:	(bad)  
  416d7b:	je     0x416dd7
  416d7d:	inc    ebx
  416d7e:	ss pop eax
  416d80:	retf   
  416d81:	ins    BYTE PTR es:[edi],dx
  416d82:	xchg   edi,eax
  416d83:	add    eax,0x8d141e69
  416d88:	or     eax,0x860c6543
  416d8d:	shr    BYTE PTR es:[ebx+ebp*8],1
  416d91:	stos   BYTE PTR es:[edi],al
  416d92:	sub    bh,BYTE PTR [ebp+0x691b9d4e]
  416d98:	fwait
  416d99:	add    DWORD PTR [esp+esi*8],esi
  416d9c:	jl     0x416d75
  416d9e:	das    
  416d9f:	ins    DWORD PTR es:[edi],dx
  416da0:	inc    ebp
  416da1:	xor    ebp,DWORD PTR [ebp+0x69]
  416da4:	mov    ch,0xe0
  416da6:	out    dx,al
  416da7:	and    BYTE PTR [eax+0x1f087c2f],dl
  416dad:	in     eax,dx
  416dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416daf:	xchg   edi,eax
  416db0:	jge    0x416dab
  416db2:	sub    bp,WORD PTR [ecx-0x4fa4d262]
  416db9:	dec    ebp
  416dba:	sbb    bh,ch
  416dbc:	popf   
  416dbd:	arpl   WORD PTR [ebp+0x67],bx
  416dc0:	ret    0x4a31
  416dc3:	mov    eax,ds:0x4325a39
  416dc8:	mov    edx,cs
  416dca:	mov    ds:0x85c92335,al
  416dcf:	repz inc ebp
  416dd1:	add    DWORD PTR [ecx],0xe6c0e9f3
  416dd7:	adc    BYTE PTR ds:[eax+0x19],dl
  416ddb:	iret   
  416ddc:	xchg   BYTE PTR [eax],dl
  416dde:	int    0xec
  416de0:	out    dx,eax
  416de1:	cmp    eax,0xfb1a0903
  416de6:	scas   al,BYTE PTR es:[edi]
  416de7:	repz je 0x416da7
  416dea:	ins    DWORD PTR es:[edi],dx
  416deb:	jg     0x416e10
  416ded:	outs   dx,DWORD PTR ds:[esi]
  416dee:	mov    ch,BYTE PTR [eax]
  416df0:	xor    BYTE PTR [ebx+eax*8+0x3726473b],bl
  416df7:	sub    al,0xfd
  416df9:	pop    edx
  416dfa:	sub    al,0xa0
  416dfc:	push   ecx
  416dfd:	xchg   ebx,eax
  416dfe:	stc    
  416dff:	scas   al,BYTE PTR es:[edi]
  416e00:	or     DWORD PTR [eax],0xffffff97
  416e03:	inc    ebp
  416e04:	inc    ecx
  416e05:	add    BYTE PTR [esi],al
  416e07:	int3   
  416e08:	jmp    0xc5b0:0x524dbc92
  416e0f:	hlt    
  416e10:	or     dh,BYTE PTR [edi+0x4a]
  416e13:	sub    eax,0x5389b7a7
  416e18:	or     eax,0x36fc0577
  416e1d:	retf   
  416e1e:	and    DWORD PTR [ecx],edi
  416e20:	inc    edi
  416e21:	dec    ecx
  416e22:	shl    BYTE PTR [edi+edx*4],0x7b
  416e26:	sub    BYTE PTR ds:0x8c976483,al
  416e2c:	pop    ecx
  416e2d:	jecxz  0x416dc6
  416e2f:	out    dx,eax
  416e30:	leave  
  416e31:	add    eax,0x7a461546
  416e36:	or     BYTE PTR [ebx],ah
  416e38:	jne    0x416dda
  416e3a:	nop
  416e3b:	mov    esi,0x82b4f190
  416e40:	aad    0x81
  416e42:	jno    0x416e1f
  416e44:	pop    ebx
  416e45:	push   0xffffffe9
  416e47:	test   al,0x77
  416e49:	retf   
  416e4a:	mov    edx,0x784a8c87
  416e4f:	jle    0x416de7
  416e51:	mov    dh,0x3c
  416e53:	or     dl,BYTE PTR [eax+0x26]
  416e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e57:	mov    DWORD PTR [ebx-0x69],eax
  416e5a:	ja     0x416e6f
  416e5c:	rcr    ch,cl
  416e5e:	scas   eax,DWORD PTR es:[edi]
  416e5f:	call   0x3a12:0x4e374f8f
  416e66:	dec    ebx
  416e67:	cld    
  416e68:	dec    esi
  416e69:	ret    
  416e6a:	mov    dl,0xaf
  416e6c:	inc    edi
  416e6d:	neg    al
  416e6f:	mov    al,BYTE PTR [edi+0x29a7cb13]
  416e75:	sub    al,0x6c
  416e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e78:	add    eax,0x1e7cd12f
  416e7d:	(bad)  
  416e7f:	cdq    
  416e80:	(bad)  
  416e82:	xor    esp,0xeec44110
  416e88:	add    DWORD PTR [esi-0x13cc7122],0x5d7cff20
  416e92:	das    
  416e93:	sahf   
  416e94:	adc    bh,ch
  416e96:	into   
  416e97:	jae    0x416eb8
  416e99:	push   ebx
  416e9a:	(bad)  
  416e9b:	push   edi
  416e9c:	int    0x61
  416e9e:	or     BYTE PTR [ecx-0x1bea1b06],dh
  416ea4:	fucomi st,st(2)
  416ea6:	pushf  
  416ea7:	sub    WORD PTR [edx-0x4d34c0a5],sp
  416eae:	into   
  416eaf:	add    eax,0xb25489be
  416eb4:	pusha  
  416eb5:	addr16 and eax,0x275339c3
  416ebb:	lds    edx,FWORD PTR ss:[ebp-0x4ccf0cdb]
  416ec2:	push   ecx
  416ec3:	shr    edi,0xc6
  416ec6:	in     al,dx
  416ec7:	inc    ebp
  416ec8:	xchg   edi,eax
  416ec9:	pop    es
  416eca:	leave  
  416ecb:	inc    esi
  416ecc:	or     BYTE PTR [edi],0xc8
  416ecf:	retf   
  416ed0:	sbb    al,0x5f
  416ed2:	int3   
  416ed3:	pop    es
  416ed4:	jl     0x416ed6
  416ed6:	xchg   esp,eax
  416ed7:	sahf   
  416ed8:	mov    esp,0xca52c9c
  416edd:	pop    ds
  416ede:	ins    BYTE PTR es:[edi],dx
  416edf:	sbb    BYTE PTR [ebx],cl
  416ee1:	push   ebx
  416ee2:	jnp    0x416f09
  416ee4:	and    eax,0x402a69fb
  416ee9:	les    ebp,FWORD PTR [esi+0x1038d506]
  416eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef0:	pop    ds
  416ef1:	rol    DWORD PTR [ebx-0x2f],cl
  416ef4:	inc    DWORD PTR [eax-0x4c]
  416ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef8:	sti    
  416ef9:	xchg   edi,eax
  416efa:	out    0x41,eax
  416efc:	sub    BYTE PTR ds:0x6faa76d0,ah
  416f02:	in     eax,dx
  416f03:	mov    ebx,0xd5f50efd
  416f08:	test   DWORD PTR [esi],ecx
  416f0a:	pop    esp
  416f0b:	stos   DWORD PTR es:[edi],eax
  416f0c:	fs scas eax,DWORD PTR es:[edi]
  416f0e:	int    0xe5
  416f10:	push   esi
  416f11:	cmp    eax,0xfa386d64
  416f16:	(bad)  
  416f18:	mov    ch,0x8
  416f1a:	xchg   ebp,eax
  416f1b:	adc    esp,DWORD PTR [edx+0x50]
  416f1e:	into   
  416f1f:	xchg   esp,eax
  416f20:	loop   0x416f53
  416f22:	jecxz  0x416eca
  416f24:	jmp    0x28f8a158
  416f29:	mov    ebp,cr7
  416f2c:	imul   esi,ebp,0xffffff99
  416f2f:	(bad)  
  416f31:	shl    BYTE PTR [esi-0x7a32fc56],1
  416f37:	test   eax,0xeb61b61f
  416f3c:	retf   
  416f3d:	pop    ecx
  416f3e:	push   0xffffffe8
  416f40:	scas   eax,DWORD PTR es:[edi]
  416f41:	cmp    eax,edi
  416f43:	adc    al,0x93
  416f45:	xchg   edi,eax
  416f46:	cmp    DWORD PTR [eax-0x53],edx
  416f49:	and    esp,ecx
  416f4b:	and    DWORD PTR [edx-0x2b6dff07],ebx
  416f51:	add    al,0xfb
  416f53:	pop    edx
  416f54:	(bad)  
  416f56:	lds    esp,FWORD PTR [esi-0x5ecff21c]
  416f5c:	push   esi
  416f5d:	add    DWORD PTR [edx+0x24f3b176],esi
  416f63:	and    BYTE PTR [edx+0x5e858485],al
  416f69:	add    bh,BYTE PTR [eax-0x725c2080]
  416f6f:	ss mov ebp,0x86288ea2
  416f75:	in     al,dx
  416f76:	add    DWORD PTR [esi],eax
  416f78:	or     DWORD PTR [edx+0x5d],ebx
  416f7b:	mov    ds:0x6a02d4cd,eax
  416f80:	ss fcmovu st,st(7)
  416f83:	fisub  WORD PTR [edi-0x17d76f6e]
  416f89:	(bad)  
  416f8a:	ja     0x416ff2
  416f8c:	out    dx,eax
  416f8d:	lds    ebp,FWORD PTR [eax-0x2f]
  416f90:	test   al,0xd8
  416f92:	ret    
  416f93:	pop    ss
  416f94:	lods   eax,DWORD PTR ds:[esi]
  416f95:	inc    edi
  416f96:	das    
  416f97:	dec    edi
  416f98:	aad    0x1b
  416f9a:	mov    DWORD PTR [ebp+0x47de70e6],0x5975deab
  416fa4:	sbb    ch,dh
  416fa6:	nop
  416fa7:	(bad)  
  416fa8:	int3   
  416fa9:	jmp    0x416ff0
  416fab:	cld    
  416fac:	mov    ah,0x10
  416fae:	(bad)  
  416fb0:	sbb    al,0x80
  416fb2:	or     bh,BYTE PTR [edx]
  416fb4:	sbb    dl,bh
  416fb6:	(bad)  
  416fb7:	(bad)  
  416fb8:	pop    eax
  416fb9:	push   ss
  416fba:	pop    es
  416fbb:	mov    ebx,0x3b272986
  416fc0:	ror    ecx,0x8d
  416fc3:	cld    
  416fc4:	dec    DWORD PTR [edi+edi*1]
  416fc7:	cmp    edx,ecx
  416fc9:	or     DWORD PTR [esi+edi*1],esp
  416fcc:	out    dx,eax
  416fcd:	xor    esi,eax
  416fcf:	sahf   
  416fd0:	and    eax,0xde386f42
  416fd5:	push   edi
  416fd6:	adc    ch,dh
  416fd8:	inc    edx
  416fd9:	ds aas 
  416fdb:	je     0x417009
  416fdd:	mov    dh,0x9c
  416fdf:	jo     0x416fbc
  416fe1:	retf   
  416fe2:	out    0xdb,al
  416fe4:	and    bl,BYTE PTR [edi+0x33b2ade3]
  416fea:	sbb    al,0x38
  416fec:	loop   0x416fa5
  416fee:	mov    ch,0x8f
  416ff0:	xor    BYTE PTR [edx],dl
  416ff2:	and    ch,dh
  416ff4:	daa    
  416ff5:	add    DWORD PTR [eax-0x57132a48],esp
  416ffb:	stos   DWORD PTR es:[edi],eax
  416ffc:	cmp    dh,bl
  416ffe:	mov    ecx,0xc35a2437
  417003:	mov    esi,0xc23ed234
  417008:	push   eax
  417009:	push   ecx
  41700a:	adc    ah,0x38
  41700d:	ins    BYTE PTR es:[edi],dx
  41700e:	aam    0x6e
  417010:	mov    al,ds:0x20c6cf92
  417015:	outs   dx,BYTE PTR ds:[esi]
  417016:	ja     0x41705a
  417018:	ja     0x416fc5
  41701a:	in     eax,dx
  41701b:	shr    BYTE PTR [eax+ebx*4-0x1507aafd],cl
  417022:	xchg   BYTE PTR [ebp+0x5f],ah
  417025:	jmp    0x416fa7
  417027:	cli    
  417028:	sbb    eax,0x2879275b
  41702d:	test   DWORD PTR [edi+0x6b],0x3ab9697d
  417034:	daa    
  417035:	push   edi
  417036:	or     eax,0xbe076ca
  41703b:	imul   edi,DWORD PTR [esi+ebp*1],0x2230f749
  417042:	jl     0x41705a
  417044:	pusha  
  417045:	xor    bl,BYTE PTR [esi+0x74]
  417048:	inc    esi
  417049:	jp     0x416fdc
  41704b:	aas    
  41704c:	xchg   edx,eax
  41704d:	push   0x40081d57
  417052:	pop    ebx
  417053:	out    0xe7,eax
  417055:	loope  0x4170b3
  417057:	test   al,0xc8
  417059:	push   esp
  41705a:	adc    al,0xc8
  41705c:	in     eax,0x74
  41705e:	mov    al,ss:0xdd105a49
  417064:	mov    bh,0x8f
  417066:	adc    eax,0xe61fb18d
  41706b:	loope  0x4170c2
  41706d:	sbb    esp,DWORD PTR [edi-0x20]
  417070:	imul   ecx,DWORD PTR [edx+0x4195ed69],0x748adbf7
  41707a:	mov    bh,0xd3
  41707c:	test   al,ch
  41707e:	mov    dh,0xf9
  417080:	mov    edx,0xbf2b528e
  417085:	push   0x31
  417087:	pop    edi
  417088:	not    BYTE PTR [edx-0x7dbce99f]
  41708e:	xor    BYTE PTR [eax+0x667acd2e],0xa8
  417095:	or     al,0xbe
  417097:	dec    edi
  417098:	mov    dl,0x60
  41709a:	dec    esi
  41709b:	mov    bl,0x47
  41709d:	pop    esp
  41709e:	outs   dx,DWORD PTR ds:[esi]
  41709f:	pop    ebx
  4170a0:	cmp    ebx,DWORD PTR [edi]
  4170a2:	xor    ebx,DWORD PTR [edi]
  4170a4:	ror    DWORD PTR [ecx],1
  4170a6:	cmp    al,0x1a
  4170a8:	sub    al,0x1b
  4170aa:	xchg   ebx,eax
  4170ab:	xor    dh,BYTE PTR [ecx]
  4170ad:	add    ebp,DWORD PTR [ecx]
  4170af:	idiv   DWORD PTR [ecx]
  4170b1:	dec    esp
  4170b2:	ins    BYTE PTR es:[edi],dx
  4170b3:	lods   eax,DWORD PTR ds:[esi]
  4170b4:	ins    BYTE PTR es:[edi],dx
  4170b5:	mov    eax,ds:0xe4e3d98f
  4170ba:	mov    ebp,0x2c4a3ce8
  4170bf:	and    DWORD PTR [esi],0x19d650c
  4170c5:	push   esi
  4170c6:	xchg   ecx,eax
  4170c7:	mov    ebx,0x55a09687
  4170cc:	icebp  
  4170cd:	inc    edi
  4170ce:	stc    
  4170cf:	iret   
  4170d0:	jecxz  0x4170e1
  4170d2:	scas   al,BYTE PTR es:[edi]
  4170d3:	leave  
  4170d4:	mov    bh,0x73
  4170d6:	pop    esi
  4170d7:	retf   0x90e4
  4170da:	call   0x54be:0xe8bb6cf1
  4170e1:	adc    cl,BYTE PTR [eax-0x44]
  4170e4:	jmp    0xbc48:0xeb0010f9
  4170eb:	add    cl,al
  4170ed:	loopne 0x417102
  4170ef:	xor    bh,ah
  4170f1:	xchg   ebx,edi
  4170f3:	pop    edi
  4170f4:	sub    ebx,DWORD PTR [esi]
  4170f6:	fwait
  4170f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f8:	xlat   BYTE PTR ds:[ebx]
  4170f9:	pop    ds
  4170fa:	cmc    
  4170fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fc:	jl     0x4170e1
  4170fe:	out    0x8f,eax
  417100:	retf   0x9837
  417103:	repz jmp 0x4170c4
  417106:	sub    ch,0x5a
  417109:	dec    ebp
  41710a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41710b:	stc    
  41710c:	lock pop esp
  41710e:	mov    ah,cl
  417110:	dec    edi
  417111:	loop   0x417138
  417113:	ins    BYTE PTR es:[edi],dx
  417114:	int    0x4e
  417116:	lahf   
  417117:	dec    ebx
  417118:	add    BYTE PTR [ecx-0x36a7cc53],0xc0
  41711f:	test   eax,0x544c5213
  417124:	add    BYTE PTR [ecx+0x4f],dh
  417127:	dec    edx
  417128:	int3   
  417129:	shl    DWORD PTR [esi+0x765c58e5],1
  41712f:	pop    ebp
  417130:	sub    ah,bh
  417132:	push   edi
  417133:	lea    esi,[eax+eax*8+0x79]
  417137:	dec    ebp
  417138:	ins    BYTE PTR es:[edi],dx
  417139:	test   DWORD PTR [edi+0x7c],edx
  41713c:	mov    edi,DWORD PTR [eax-0x6bf8bd03]
  417142:	mov    al,BYTE PTR [edi+0xeeec8ea]
  417148:	cmp    cl,0x6c
  41714b:	jmp    0x1960:0xf9ec2d86
  417152:	fldenv [ebx+0x5ad627ac]
  417158:	push   0xe9411172
  41715d:	adc    dh,BYTE PTR [ecx+0x52176df3]
  417163:	cmp    eax,0xa8fafcc9
  417168:	and    BYTE PTR [edx],ch
  41716a:	jb     0x4171ba
  41716c:	jecxz  0x4171a9
  41716e:	pop    esp
  41716f:	iret   
  417170:	fidiv  DWORD PTR [esp+eax*4]
  417173:	lock mov edx,0xc9d78515
  417179:	popa   
  41717a:	out    dx,eax
  41717b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41717c:	into   
  41717d:	je     0x41714c
  41717f:	jno    0x4171cb
  417181:	fnstenv [edi]
  417183:	add    BYTE PTR cs:[ebx+eax*8+0x5ef190bc],0x8f
  41718c:	loopne 0x417165
  41718e:	out    0xea,al
  417190:	call   0x496861f7
  417195:	cld    
  417196:	cmp    BYTE PTR [edi+edi*1+0x55],dl
  41719a:	lea    ebp,[ecx+0x7d129720]
  4171a0:	pop    ds
  4171a1:	xchg   edi,eax
  4171a2:	pop    ds
  4171a3:	int    0x8f
  4171a5:	inc    eax
  4171a6:	add    esi,DWORD PTR [ebp+0x721fffa9]
  4171ac:	popf   
  4171ad:	loope  0x4171d3
  4171af:	or     al,0x15
  4171b1:	dec    edi
  4171b2:	sahf   
  4171b3:	jge    0x4171e3
  4171b5:	pop    edi
  4171b6:	ret    
  4171b7:	xchg   DWORD PTR [ecx],edi
  4171b9:	add    ecx,DWORD PTR [esi+0x628d10c1]
  4171bf:	xchg   edx,eax
  4171c0:	sbb    eax,esi
  4171c2:	repz mov bh,0x3a
  4171c5:	dec    ecx
  4171c6:	out    0x36,al
  4171c8:	cmc    
  4171c9:	push   es
  4171ca:	pop    esi
  4171cb:	stos   BYTE PTR es:[edi],al
  4171cc:	aas    
  4171cd:	pop    eax
  4171ce:	dec    esi
  4171cf:	sbb    BYTE PTR [ebx+0x6f856d9a],dl
  4171d5:	daa    
  4171d6:	pop    ecx
  4171d7:	push   0xe359ed32
  4171dc:	cmc    
  4171dd:	mov    bh,0x91
  4171df:	bound  esp,QWORD PTR [ebp+0x484bb753]
  4171e5:	es inc edi
  4171e7:	xor    bh,BYTE PTR [ecx+edi*1]
  4171ea:	mov    eax,ds:0x714eb8c
  4171ef:	jge    0x417175
  4171f1:	mov    edx,0x206a7868
  4171f6:	in     al,0xae
  4171f8:	lea    esi,[ecx+0x48032cf0]
  4171fe:	adc    dh,dl
  417200:	inc    ecx
  417201:	push   ebp
  417202:	daa    
  417203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417204:	xor    ebp,DWORD PTR [ecx-0x43]
  417207:	loop   0x417257
  417209:	mov    BYTE PTR [esp+ebp*8+0x36],bl
  41720d:	add    BYTE PTR [eax+0xe0211ec],dl
  417213:	icebp  
  417214:	fild   DWORD PTR [ebp-0x42]
  417217:	inc    eax
  417218:	fstp   TBYTE PTR [ebx+0xc]
  41721b:	jg     0x41721b
  41721d:	push   ebp
  41721e:	hlt    
  41721f:	cmp    cl,BYTE PTR [eax+0x23390c3b]
  417225:	das    
  417226:	pop    ebp
  417227:	mov    BYTE PTR es:[ecx],bl
  41722a:	jp     0x41721b
  41722c:	outs   dx,BYTE PTR ds:[esi]
  41722d:	jecxz  0x417291
  41722f:	xor    dl,BYTE PTR cs:[eax-0x29078ebf]
  417236:	sub    al,0x9
  417238:	popa   
  417239:	fimul  WORD PTR [ecx+0x3a]
  41723c:	inc    edi
  41723d:	test   BYTE PTR [ebp+0x6f],bl
  417240:	inc    edx
  417241:	or     ecx,edx
  417243:	mov    ebx,0x2a09c267
  417248:	lea    esi,[ecx+edi*4]
  41724b:	js     0x417251
  41724d:	mov    DWORD PTR [ecx+ecx*4-0x7a],edx
  417251:	sbb    BYTE PTR [ebx+0x56dcc08e],bl
  417257:	adc    eax,0x5ea08fe2
  41725c:	or     eax,0x2a2e961f
  417261:	jno    0x41727f
  417263:	add    cl,BYTE PTR [esi-0x23]
  417266:	out    dx,eax
  417267:	xor    eax,0x33c29cb0
  41726c:	out    0xd7,eax
  41726e:	dec    ecx
  41726f:	and    BYTE PTR ss:[edi-0x6a7fd9d0],al
  417276:	ja     0x417269
  417278:	push   0x70
  41727a:	xor    DWORD PTR [edi+0x2ce659be],edx
  417280:	dec    ebp
  417281:	xchg   DWORD PTR ds:0x975d2890,edx
  417287:	inc    ebp
  417288:	jge    0x417271
  41728a:	xchg   esi,eax
  41728b:	mov    dh,0xad
  41728d:	or     BYTE PTR [esi-0x45],bh
  417290:	mov    ebx,0xfd712dab
  417295:	xchg   ah,cl
  417297:	and    DWORD PTR [edi+0x10a9ffe],ebx
  41729d:	inc    ebp
  41729e:	xchg   ecx,edi
  4172a0:	daa    
  4172a1:	pop    ecx
  4172a2:	adc    BYTE PTR [eax+0x554e01e7],al
  4172a8:	cs adc al,0xe0
  4172ab:	(bad)  
  4172ac:	call   0xdb21270b
  4172b1:	gs icebp 
  4172b3:	push   ebp
  4172b4:	dec    ebp
  4172b5:	lahf   
  4172b6:	ds ins BYTE PTR es:[edi],dx
  4172b8:	mov    eax,0x6b127456
  4172bd:	shl    DWORD PTR [ebx],0xfe
  4172c0:	push   edx
  4172c1:	dec    esi
  4172c2:	out    dx,al
  4172c3:	jecxz  0x417281
  4172c5:	retf   0xb277
  4172c8:	mov    WORD PTR [edi-0x29],gs
  4172cb:	mov    ch,0x7a
  4172cd:	xchg   BYTE PTR [ebp+0x16],cl
  4172d0:	loopne 0x417276
  4172d2:	lea    eax,[esp+eiz*4+0x20]
  4172d6:	adc    al,cl
  4172d8:	pushf  
  4172d9:	je     0x41725f
  4172db:	mov    eax,0xc94895a5
  4172e0:	cmp    BYTE PTR [edi-0x62810d77],dh
  4172e6:	mov    ch,0x40
  4172e8:	iret   
  4172e9:	jbe    0x4172f9
  4172eb:	jg     0x4172d8
  4172ed:	push   0xffffffa0
  4172ef:	cmp    BYTE PTR [eax-0x4224121e],ch
  4172f5:	adc    DWORD PTR cs:[eax],edi
  4172f8:	mov    bh,0x16
  4172fa:	mov    WORD PTR [esi],cs
  4172fc:	pop    es
  4172fd:	rcl    BYTE PTR [ecx+0x7e6dbc7d],0xbb
  417304:	sbb    bh,BYTE PTR [ecx-0x6d]
  417307:	dec    esi
  417308:	fnstcw WORD PTR [edx+0x3b2430a7]
  41730e:	xchg   DWORD PTR [ecx-0x3af784c7],eax
  417314:	mov    fs,ebp
  417316:	push   cs
  417317:	add    DWORD PTR [edi+edi*4-0x3e07c593],esp
  41731e:	call   0x7836:0xf8828b26
  417325:	cmp    DWORD PTR [ebx+0x6a],esi
  417328:	outs   dx,BYTE PTR ds:[esi]
  417329:	jae    0x417367
  41732b:	pop    ecx
  41732c:	cmp    bl,BYTE PTR [ebx]
  41732e:	cmp    ah,dl
  417330:	push   ds
  417331:	and    bl,BYTE PTR [edx-0x5988a696]
  417337:	xor    bh,BYTE PTR [ebx-0x41]
  41733a:	cld    
  41733b:	addr16 (bad) 
  41733d:	shufps xmm5,XMMWORD PTR [edi+0x14],0xd4
  417342:	jl     0x417323
  417344:	fdivr  QWORD PTR [eax+0x56989530]
  41734a:	sahf   
  41734b:	sub    bl,BYTE PTR [ecx-0x6b374063]
  417351:	push   ss
  417352:	call   0x737d:0xa2379f45
  417359:	and    al,BYTE PTR [ebx+0x22]
  41735c:	push   esp
  41735d:	dec    ebx
  41735e:	jo     0x417394
  417360:	cmp    al,0x45
  417362:	test   al,bl
  417364:	sbb    ebx,0xffffffbb
  417367:	das    
  417368:	inc    esi
  417369:	mov    ecx,0xa48f1a93
  41736e:	jmp    0xcd99431b
  417373:	sub    BYTE PTR [ebp+0x27],bh
  417376:	mov    dl,0xb1
  417378:	out    dx,al
  417379:	out    0x86,eax
  41737b:	jle    0x417364
  41737d:	jmp    0x7697:0x66a1d9a3
  417384:	pop    ds
  417385:	stos   DWORD PTR es:[edi],eax
  417386:	hlt    
  417387:	pushf  
  417388:	push   es
  417389:	das    
  41738a:	and    eax,0xc5377e5b
  41738f:	or     esp,eax
  417391:	cmp    BYTE PTR [edi+0x3d0638ec],0x6f
  417398:	adc    ah,bh
  41739a:	fisubr DWORD PTR [eax]
  41739c:	jmp    0xa4f7:0x4f23ff6e
  4173a3:	hlt    
  4173a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a5:	sub    DWORD PTR [ecx+0x61],esp
  4173a8:	push   ss
  4173a9:	out    dx,al
  4173aa:	test   eax,0x1c94a1d6
  4173af:	scas   al,BYTE PTR es:[edi]
  4173b0:	in     eax,dx
  4173b1:	jb     0x4173e6
  4173b3:	jns    0x4173b3
  4173b5:	sbb    eax,0xe0635d0f
  4173ba:	out    0x55,al
  4173bc:	aas    
  4173bd:	fs jne 0x4173bf
  4173c0:	add    BYTE PTR [ecx-0x2fff58a1],bl
  4173c6:	icebp  
  4173c7:	stos   BYTE PTR es:[edi],al
  4173c8:	outs   dx,BYTE PTR ds:[esi]
  4173c9:	lds    esp,FWORD PTR [ebx-0x29]
  4173cc:	inc    esp
  4173cd:	pop    edx
  4173ce:	test   eax,0xfaeefe8a
  4173d3:	mov    ch,0xf6
  4173d5:	pop    ebx
  4173d6:	inc    edx
  4173d7:	loop   0x41741e
  4173d9:	mov    bh,0x9d
  4173db:	fbstp  TBYTE PTR [esi]
  4173dd:	inc    esp
  4173de:	and    DWORD PTR [ecx+0x2b274ce3],esp
  4173e4:	(bad)  
  4173e5:	(bad)  
  4173e6:	pop    esp
  4173e7:	xor    eax,0x1037ced1
  4173ec:	xor    dh,BYTE PTR [ecx+0x78]
  4173ef:	stos   BYTE PTR es:[edi],al
  4173f0:	inc    edx
  4173f1:	sahf   
  4173f2:	jecxz  0x4173d2
  4173f4:	push   DWORD PTR [edi+edi*2-0x1cf88230]
  4173fb:	scas   eax,DWORD PTR es:[edi]
  4173fc:	test   al,0xfc
  4173fe:	push   0x6a1539be
  417403:	bound  esp,QWORD PTR [edx+0x29]
  417406:	cmove  esi,DWORD PTR [ebp+eax*1+0x5c]
  41740b:	cmp    al,0x6b
  41740d:	cmp    cl,BYTE PTR [ebx]
  41740f:	in     eax,dx
  417410:	mov    ebp,esp
  417412:	sbb    dl,dl
  417414:	push   ds
  417415:	arpl   WORD PTR [ebx-0x4],bx
  417418:	ins    BYTE PTR es:[edi],dx
  417419:	xor    eax,esp
  41741b:	mov    bl,0x3a
  41741d:	ret    
  41741e:	rcr    DWORD PTR [edi+eax*8+0x3c],cl
  417422:	adc    BYTE PTR [esi-0x445fef4b],0x7f
  417429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41742a:	mov    esp,0xfde390e3
  41742f:	xor    cl,BYTE PTR [ebp+0x7d]
  417432:	lahf   
  417433:	mov    dh,0x4a
  417435:	push   esi
  417436:	mov    al,ds:0x25fd9562
  41743b:	jae    0x41741b
  41743d:	jnp    0x4174ac
  41743f:	fsubr  DWORD PTR [esi]
  417441:	jg     0x4173c7
  417443:	jp     0x41743c
  417445:	pop    es
  417446:	enter  0xa0e2,0xdd
  41744a:	sub    al,0x5b
  41744c:	add    BYTE PTR [ebp-0x188880fb],0x7c
  417453:	sub    eax,0xf7236cee
  417458:	xor    BYTE PTR [ecx+0x415b5d0c],al
  41745e:	ret    
  41745f:	loope  0x417475
  417461:	sar    BYTE PTR [esi-0x12],0x46
  417465:	stos   DWORD PTR es:[edi],eax
  417466:	push   edx
  417467:	addr16 pop edi
  417469:	fs je  0x4174ce
  41746c:	loope  0x41744d
  41746e:	cli    
  41746f:	ret    0xbb84
  417472:	push   eax
  417473:	sub    eax,0x859fc7c4
  417478:	xchg   edx,eax
  417479:	sbb    BYTE PTR [ebx],ch
  41747b:	in     eax,dx
  41747c:	imul   edi,DWORD PTR [ecx+eiz*1+0x70949742],0xf5083225
  417487:	mov    dh,0x9d
  417489:	iret   
  41748a:	mov    ah,0x86
  41748c:	stos   DWORD PTR es:[edi],eax
  41748d:	(bad)  [esi+0x5c]
  417490:	popf   
  417491:	sbb    eax,0x63008ead
  417496:	or     al,BYTE PTR [ecx-0x72fc56d8]
  41749c:	inc    eax
  41749d:	mov    ds:0xa1fe66d6,al
  4174a2:	xor    BYTE PTR [esp+eax*1+0x3b],dl
  4174a6:	sub    eax,0x995c94c
  4174ab:	mov    ecx,0x7fa1cd77
  4174b0:	adc    BYTE PTR [edi-0x775649a7],al
  4174b6:	push   esi
  4174b7:	mov    WORD PTR [edx+0x620a4b4],es
  4174bd:	jmp    0x4174e9
  4174bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c0:	pop    ds
  4174c1:	out    0x5c,al
  4174c3:	sub    DWORD PTR [esp+ebp*4-0x63062524],ecx
  4174ca:	adc    ebp,DWORD PTR [edi-0x71816599]
  4174d0:	iret   
  4174d1:	and    al,0x96
  4174d3:	fimul  DWORD PTR [ebp+0x16]
  4174d6:	in     al,dx
  4174d7:	push   ecx
  4174d8:	and    eax,0xd24a9250
  4174dd:	pop    ebx
  4174de:	out    dx,eax
  4174df:	psubusw mm7,QWORD PTR [ebx+edx*8-0x2b]
  4174e4:	neg    BYTE PTR [esi-0x13]
  4174e7:	mov    DWORD PTR [edi],edx
  4174e9:	jmp    0x41752b
  4174eb:	push   cs
  4174ec:	cmp    al,0xf0
  4174ee:	adc    eax,0x23fee888
  4174f3:	push   ecx
  4174f4:	or     dl,BYTE PTR [ebx+0x39]
  4174f7:	in     eax,0xe8
  4174f9:	xlat   BYTE PTR ds:[ebx]
  4174fa:	xor    eax,DWORD PTR [ebx-0x32]
  4174fd:	ja     0x417495
  4174ff:	inc    ebp
  417500:	outs   dx,BYTE PTR ds:[esi]
  417501:	(bad)  
  417502:	imul   edx,DWORD PTR [esi],0xb249548
  417508:	aad    0x3a
  41750a:	add    BYTE PTR [eax],bl
  41750c:	xchg   edx,eax
  41750d:	cli    
  41750e:	jne    0x417578
  417510:	scas   eax,DWORD PTR es:[edi]
  417511:	xor    esp,DWORD PTR [edx-0x16e95a28]
  417517:	cmp    ebp,DWORD PTR [eax]
  417519:	mov    edx,0x3239dc5b
  41751e:	xchg   BYTE PTR [edx-0x18],al
  417521:	cdq    
  417522:	icebp  
  417523:	push   esi
  417524:	cs out 0xfb,al
  417527:	mov    BYTE PTR [esi-0x45ac9e71],ch
  41752d:	ret    0xbc9c
  417530:	cmp    eax,0xf4732874
  417535:	adc    bl,dh
  417537:	xchg   esp,eax
  417538:	retf   0xe8ab
  41753b:	sub    ecx,DWORD PTR [esi]
  41753d:	imul   edx,DWORD PTR [ebp+0x7d],0x39
  417541:	cwde   
  417542:	mov    BYTE PTR [ebx+0x73],ch
  417545:	mov    DWORD PTR [edx+0x32],edi
  417548:	add    eax,edi
  41754a:	test   BYTE PTR [esi-0x6a],cl
  41754d:	push   esp
  41754e:	xor    esi,ebx
  417550:	sub    eax,0x2c577daf
  417555:	xor    eax,0x761956bd
  41755a:	fwait
  41755b:	lock and eax,DWORD PTR [ecx]
  41755e:	cs cdq 
  417560:	int3   
  417561:	(bad)  
  417562:	and    cl,bh
  417564:	dec    eax
  417565:	cmp    dh,BYTE PTR [ecx+edi*2+0x3b]
  417569:	mov    esp,0xe155feba
  41756e:	adc    dh,ch
  417570:	(bad)  
  417571:	outs   dx,DWORD PTR ds:[esi]
  417572:	sub    eax,0x141b3695
  417577:	mov    eax,0xc1a2520b
  41757c:	or     DWORD PTR [esi+0x7023cc8f],ebx
  417582:	daa    
  417583:	mov    esi,0xe2935013
  417588:	leave  
  417589:	or     al,0x69
  41758b:	cmp    esi,DWORD PTR [esi-0x59]
  41758e:	jnp    0x41751c
  417590:	out    0xca,eax
  417592:	arpl   WORD PTR [ecx+edx*1-0x30a9b55a],dx
  417599:	sbb    eax,DWORD PTR [eax]
  41759b:	mov    ds:0x3e40b9e7,eax
  4175a0:	sub    ecx,DWORD PTR [ebp+0x7e114693]
  4175a6:	cdq    
  4175a7:	sub    bh,BYTE PTR [esi]
  4175a9:	leave  
  4175aa:	(bad)  
  4175ab:	cdq    
  4175ac:	xchg   edx,eax
  4175ad:	ror    BYTE PTR [eax-0x14],1
  4175b0:	mov    cl,0x45
  4175b2:	and    al,0xb1
  4175b4:	sbb    edx,ecx
  4175b6:	push   0xffffff86
  4175b8:	xchg   edx,eax
  4175b9:	fwait
  4175ba:	add    edi,esp
  4175bc:	call   0xcfd0:0x3c22048b
  4175c3:	inc    edi
  4175c4:	pop    ebx
  4175c5:	hlt    
  4175c6:	jb     0x4175ee
  4175c8:	dec    esp
  4175c9:	adc    eax,0x29ac4c33
  4175ce:	lea    esi,[esi+0x48]
  4175d1:	jne    0x4175a1
  4175d3:	(bad)  
  4175d4:	xor    edi,DWORD PTR [ecx]
  4175d6:	jno    0x4175df
  4175d8:	or     eax,DWORD PTR fs:[edx-0x70eb86a3]
  4175df:	jae    0x4175f5
  4175e1:	mov    DWORD PTR [ebp-0x38],edi
  4175e4:	cli    
  4175e5:	into   
  4175e6:	jle    0x4175e9
  4175e8:	xchg   ebp,eax
  4175e9:	popa   
  4175ea:	out    0x52,al
  4175ec:	pop    ebx
  4175ed:	fiadd  DWORD PTR [ebp-0x23]
  4175f0:	fisubr DWORD PTR [edi+eax*2+0x33015f01]
  4175f7:	loop   0x41759c
  4175f9:	test   ch,dh
  4175fb:	jmp    0x1f1c4655
  417600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417601:	mov    eax,ds:0xebf4cfe9
  417606:	cmp    bh,BYTE PTR [ebp-0x523a20d2]
  41760c:	or     DWORD PTR gs:[eax-0x60],edi
  417610:	stos   BYTE PTR es:[edi],al
  417611:	lahf   
  417612:	jge    0x4175d7
  417614:	ret    0x28cc
  417617:	jnp    0x41764e
  417619:	cmc    
  41761a:	sahf   
  41761b:	(bad)  
  41761c:	daa    
  41761d:	leave  
  41761e:	popa   
  41761f:	xchg   BYTE PTR [edi+0x54fcfc5a],ah
  417625:	call   DWORD PTR [ecx]
  417627:	sub    BYTE PTR [edi+0x7ca8daf],bh
  41762d:	sbb    bl,0x3a
  417630:	cmp    bh,cl
  417632:	call   0x9b74:0x574197d0
  417639:	sub    al,0x7
  41763b:	(bad)  
  41763c:	sbb    BYTE PTR [ecx+0x27],cl
  41763f:	cmp    esi,0xffffffae
  417642:	inc    eax
  417643:	rcl    dh,cl
  417645:	test   esp,0xfc0be8fe
  41764b:	and    al,0x87
  41764d:	adc    DWORD PTR [edx-0x6c],ebp
  417650:	rcl    BYTE PTR [edi-0x55],1
  417653:	and    DWORD PTR [edx-0x24],0xcfad3fea
  41765a:	stos   DWORD PTR es:[edi],eax
  41765b:	cmc    
  41765c:	mov    eax,ds:0x58b48757
  417661:	add    ecx,0x562c6ae1
  417667:	add    esi,edi
  417669:	or     bl,BYTE PTR [esp+ebp*8]
  41766c:	ja     0x417646
  41766e:	sbb    esi,edx
  417670:	test   DWORD PTR [ecx-0x26],0xe39131b3
  417677:	(bad)  
  417678:	imul   esp,DWORD PTR [esi+ebx*4-0x491e9a96],0xffffff9f
  417680:	loopne 0x4176f7
  417682:	out    0xe,al
  417684:	loope  0x417652
  417686:	mov    ch,0xb1
  417688:	xor    al,0x52
  41768a:	xchg   ecx,eax
  41768b:	xchg   eax,ebx
  41768d:	(bad)  
  41768e:	xor    esi,DWORD PTR [esi+0x8]
  417691:	cdq    
  417692:	scas   al,BYTE PTR es:[edi]
  417693:	push   eax
  417694:	pusha  
  417695:	cdq    
  417696:	out    0x5,al
  417698:	mov    bh,BYTE PTR [edx-0x7c]
  41769b:	push   es
  41769c:	(bad)  [edx]
  41769e:	lods   al,BYTE PTR ds:[esi]
  41769f:	or     al,0x40
  4176a1:	(bad)  
  4176a2:	repnz pop ds
  4176a4:	aaa    
  4176a5:	mov    ebx,0x7b96232e
  4176aa:	mov    ebp,0xe83c72e1
  4176af:	mov    esp,DWORD PTR [ebx]
  4176b1:	mov    ebp,0xf47d1328
  4176b6:	adc    cl,cl
  4176b8:	mov    esi,0x1c674474
  4176bd:	xor    BYTE PTR [eax-0x2d],ah
  4176c0:	xor    edx,0xffffffe2
  4176c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c4:	not    DWORD PTR [ebx+0x3cac6e4]
  4176ca:	fnstenv [ebx]
  4176cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176cd:	jno    0x4176c5
  4176cf:	hlt    
  4176d0:	(bad)  
  4176d1:	les    esp,FWORD PTR [eax]
  4176d3:	imul   ebx,edx,0x9bad2974
  4176d9:	jge    0x4176ec
  4176db:	adc    al,0xfa
  4176dd:	sub    ch,BYTE PTR [edi+0x218fd7ac]
  4176e3:	inc    edi
  4176e4:	sbb    eax,0x7903a4a5
  4176e9:	dec    DWORD PTR [edi]
  4176eb:	loop   0x41768a
  4176ed:	fisttp DWORD PTR [ecx+0x9751cd1]
  4176f3:	adc    ah,ah
  4176f5:	out    dx,eax
  4176f6:	cmp    BYTE PTR [eax+0x77],ah
  4176f9:	dec    eax
  4176fa:	mov    ebx,0x570b640
  4176ff:	sbb    DWORD PTR [edi+0x46],ebx
  417702:	and    al,0x6c
  417704:	cli    
  417705:	mov    cl,0xf5
  417707:	loope  0x4176d3
  417709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41770a:	icebp  
  41770b:	test   DWORD PTR [ebp+0x2491ad1f],esi
  417711:	mov    ebx,0x67f19555
  417716:	add    edi,DWORD PTR [esi-0x374b404e]
  41771c:	hlt    
  41771d:	pop    ebx
  41771e:	je     0x41770b
  417720:	inc    ebx
  417721:	scas   eax,DWORD PTR es:[edi]
  417722:	adc    ch,BYTE PTR ds:0x786facb3
  417728:	push   esi
  417729:	lea    edi,[esi]
  41772b:	pop    ss
  41772c:	jb     0x417767
  41772e:	jmp    0x1a59cd3
  417733:	sahf   
  417734:	int3   
  417735:	lods   eax,DWORD PTR ds:[esi]
  417736:	inc    eax
  417737:	ds or  eax,0x5ebc94c2
  41773d:	dec    esp
  41773e:	fwait
  41773f:	pop    ebp
  417740:	cld    
  417741:	popa   
  417742:	mov    ebx,0xa2d602ec
  417747:	mov    al,ds:0xa5f2c1cd
  41774c:	jo     0x417717
  41774e:	enter  0xeb21,0xd2
  417752:	test   al,0x20
  417754:	pop    esi
  417755:	test   BYTE PTR [ebp+0xd6deed7],ch
  41775b:	fidivr WORD PTR ds:0x1d020fe4
  417761:	daa    
  417762:	and    ebp,ebp
  417764:	mov    dh,cl
  417766:	sbb    esp,esi
  417768:	(bad)  
  417769:	stc    
  41776a:	fldcw  WORD PTR [edi+eiz*8+0x75941efb]
  417771:	jmp    0x417744
  417773:	push   cs
  417774:	push   esp
  417775:	dec    edx
  417776:	out    dx,al
  417777:	arpl   di,di
  417779:	mov    WORD PTR [edx-0x61],cs
  41777c:	imul   eax,DWORD PTR [ebx-0x181a4e63],0xffffffd3
  417783:	or     eax,0xda4b768a
  417788:	xchg   DWORD PTR [ecx-0x5ebee3b1],esp
  41778e:	dec    ebx
  41778f:	push   ds
  417790:	mov    dh,0x5
  417792:	inc    ebx
  417793:	lds    ebp,FWORD PTR [ebx-0x2b]
  417796:	loop   0x4177ba
  417798:	push   ecx
  417799:	jb     0x417811
  41779b:	mov    esi,0x9f648e5f
  4177a0:	loopne 0x4177d4
  4177a2:	push   ebp
  4177a3:	adc    BYTE PTR [ecx+0x749dc1aa],bl
  4177a9:	test   DWORD PTR [edx-0x37],edx
  4177ac:	iret   
  4177ad:	push   esp
  4177ae:	xor    eax,DWORD PTR [eax-0x2032251f]
  4177b4:	in     al,0x3a
  4177b6:	or     al,0x78
  4177b8:	mov    dl,0x86
  4177ba:	mov    ds:0xd48889b7,eax
  4177bf:	retf   0x7902
  4177c2:	jge    0x4177c3
  4177c4:	icebp  
  4177c5:	jmp    0x40b1:0x1b537065
  4177cc:	push   0xffffff9a
  4177ce:	push   0xffffffd7
  4177d0:	icebp  
  4177d1:	sub    ecx,eax
  4177d3:	fcomp  DWORD PTR [eax]
  4177d5:	icebp  
  4177d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d7:	mov    bh,0xdc
  4177d9:	dec    ebx
  4177da:	cli    
  4177db:	sub    eax,DWORD PTR [edi]
  4177dd:	or     BYTE PTR [edx+0x6d4f2060],bl
  4177e3:	(bad)  
  4177e4:	mov    esp,DWORD PTR [edx-0x14]
  4177e7:	and    ecx,DWORD PTR [esi+esi*4+0x17]
  4177eb:	mov    bl,0x5e
  4177ed:	xor    eax,edx
  4177ef:	inc    ebp
  4177f0:	sub    ch,BYTE PTR [ebx-0x14075ab]
  4177f6:	ror    BYTE PTR [ebx-0x5e],0x2f
  4177fa:	test   al,0xb4
  4177fc:	inc    esi
  4177fd:	sub    edi,esi
  4177ff:	push   cs
  417800:	push   edi
  417801:	mov    dh,dl
  417803:	fst    QWORD PTR [edi-0x14e2c0bb]
  417809:	nop
  41780a:	cld    
  41780b:	fsubr  st,st(1)
  41780d:	mov    dl,0x5f
  41780f:	dec    esi
  417810:	mov    ah,0x49
  417812:	in     al,dx
  417813:	push   edx
  417814:	dec    ebp
  417815:	(bad)  
  417817:	xchg   DWORD PTR [edi],eax
  417819:	pushf  
  41781a:	pop    ebp
  41781b:	and    eax,0x31b3317a
  417820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417821:	int    0x18
  417823:	out    dx,eax
  417824:	xlat   BYTE PTR ds:[ebx]
  417825:	or     eax,0x3fdbc51d
  41782a:	cmp    eax,0xe4382538
  41782f:	outs   dx,DWORD PTR ds:[esi]
  417830:	jg     0x4178ab
  417832:	dec    eax
  417833:	jmp    0x56e39c9b
  417838:	mov    cl,0xde
  41783a:	out    0x22,al
  41783c:	and    ebx,DWORD PTR [ebx+0x55]
  41783f:	(bad)  
  417840:	pop    edi
  417841:	std    
  417842:	ret    0x17e8
  417845:	dec    DWORD PTR [ebp+0x214c442a]
  41784b:	pop    si
  41784d:	mov    cs,WORD PTR [edi-0x36]
  417850:	xchg   ebx,eax
  417851:	aam    0xa6
  417853:	retf   0x7e6a
  417856:	dec    ecx
  417857:	imul   ecx,esp,0xffffffbb
  41785a:	jmp    0xd31e182b
  41785f:	cdq    
  417860:	jg     0x417859
  417862:	dec    esp
  417863:	xor    al,BYTE PTR [edx+eax*2-0x2269ad5]
  41786a:	jb     0x41786e
  41786c:	iret   
  41786d:	pop    edi
  41786e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41786f:	push   cs
  417870:	lods   al,BYTE PTR ds:[esi]
  417871:	icebp  
  417872:	in     eax,0xb0
  417874:	loop   0x4177f7
  417876:	aaa    
  417877:	cli    
  417878:	dec    esi
  417879:	sbb    DWORD PTR [edx-0x2dfb05bd],edx
  41787f:	into   
  417880:	shr    BYTE PTR [eax-0x7ab276a4],1
  417886:	fucomi st,st(1)
  417888:	cmp    esp,esi
  41788a:	stc    
  41788b:	mov    ch,0x4
  41788d:	out    0x62,eax
  41788f:	cmc    
  417890:	xor    esi,DWORD PTR ds:0x8dc30da8
  417896:	inc    ebp
  417897:	leave  
  417898:	push   ss
  417899:	inc    esi
  41789a:	call   0xf6e6:0xda08f63
  4178a1:	sub    bl,al
  4178a3:	cmp    dh,0x66
  4178a6:	jnp    0x41784e
  4178a8:	mov    ds:0xcde4a17f,eax
  4178ad:	aam    0x70
  4178af:	addr16 push ds
  4178b1:	sbb    BYTE PTR [ebp+0x29],0xf9
  4178b5:	adc    DWORD PTR [eax+0x7234d9a7],0xffffffe5
  4178bc:	loopne 0x4178a4
  4178be:	popa   
  4178bf:	cdq    
  4178c0:	ss xchg ah,ah
  4178c3:	dec    eax
  4178c4:	ja     0x4178c6
  4178c6:	lods   eax,DWORD PTR ds:[esi]
  4178c7:	mov    edx,0x31f035e8
  4178cc:	fnsave [edx+0x25]
  4178cf:	test   DWORD PTR [edx+0x5],ebp
  4178d2:	arpl   di,bp
  4178d4:	dec    esp
  4178d5:	out    0xe3,eax
  4178d7:	mov    ah,0x36
  4178d9:	jns    0x417946
  4178db:	push   cs
  4178dc:	inc    esp
  4178dd:	into   
  4178de:	out    dx,eax
  4178df:	cli    
  4178e0:	retf   
  4178e1:	sahf   
  4178e2:	popf   
  4178e3:	push   0x3c
  4178e5:	or     cl,BYTE PTR [eax+0x53]
  4178e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e9:	dec    edx
  4178ea:	dec    edi
  4178eb:	jl     0x4178b2
  4178ed:	imul   esp,DWORD PTR [ebp+eiz*1-0x4a],0x7b84fda0
  4178f5:	bound  ecx,QWORD PTR [ebp+0x79]
  4178f8:	push   edi
  4178f9:	push   esi
  4178fa:	push   ss
  4178fb:	outs   dx,BYTE PTR ds:[esi]
  4178fc:	daa    
  4178fd:	jae    0x4178ae
  4178ff:	mov    eax,0xe007baa4
  417904:	xor    bl,dh
  417906:	test   DWORD PTR [ecx],esi
  417908:	enter  0xb0a4,0x8c
  41790c:	cmp    al,BYTE PTR [ecx+0x3c]
  41790f:	push   esp
  417910:	cli    
  417911:	sbb    cl,ch
  417913:	fidivr WORD PTR [esi+0x4]
  417916:	jle    0x41794a
  417918:	mov    esp,0x671e60a3
  41791d:	sti    
  41791e:	cli    
  41791f:	cld    
  417920:	push   esp
  417921:	(bad)  
  417922:	jmp    0x70103e89
  417927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417928:	mov    edx,0x291c6de
  41792d:	add    DWORD PTR [esi-0x45],ebx
  417930:	xor    DWORD PTR [edx],ecx
  417932:	mov    esi,0x388d204c
  417937:	sbb    ecx,eax
  417939:	pop    esi
  41793a:	xor    DWORD PTR [ebx],esi
  41793c:	sub    eax,DWORD PTR [edx-0x4c3a2b5a]
  417942:	mov    dh,0x8f
  417944:	mov    esi,0xd84a189f
  417949:	xchg   edx,eax
  41794a:	inc    dx
  41794c:	inc    ebx
  41794d:	leave  
  41794e:	arpl   WORD PTR [edx-0x78],si
  417951:	test   BYTE PTR [esi-0x4d378a3],dh
  417957:	pop    esi
  417958:	push   esi
  417959:	mov    esp,0x10ebac1e
  41795e:	in     eax,dx
  41795f:	jbe    0x4179dd
  417961:	push   ebx
  417962:	cmp    al,0xbb
  417964:	jnp    0x41797f
  417966:	aaa    
  417967:	cmp    ebx,ecx
  417969:	bound  ecx,QWORD PTR [edi-0x2eab46c7]
  41796f:	inc    esp
  417971:	retf   0xa55c
  417974:	dec    ecx
  417975:	sbb    esi,DWORD PTR [edi-0x21fe492]
  41797b:	jp     0x417914
  41797d:	push   edi
  41797e:	gs out dx,al
  417980:	cmp    ah,dh
  417982:	sub    esp,esp
  417984:	jl     0x41796a
  417986:	xor    eax,0x33010837
  41798b:	cmp    esp,DWORD PTR [edi]
  41798d:	mov    BYTE PTR [edx+0x1389e9db],cl
  417993:	test   BYTE PTR ds:0x80f9d908,0xb
  41799a:	into   
  41799b:	popa   
  41799c:	add    eax,0x81a87dfe
  4179a1:	jecxz  0x4179e7
  4179a3:	inc    edx
  4179a4:	ins    BYTE PTR es:[edi],dx
  4179a5:	ret    0x8b19
  4179a8:	mov    esi,0xdf5eb841
  4179ad:	outs   dx,BYTE PTR ds:[esi]
  4179ae:	scas   eax,DWORD PTR es:[edi]
  4179af:	stc    
  4179b0:	sbb    eax,0x79feea14
  4179b5:	cmp    ebx,DWORD PTR [esi+0x3b]
  4179b8:	jg     0x417a13
  4179ba:	mov    esi,0xe8ff5b4c
  4179bf:	hlt    
  4179c0:	ret    
  4179c1:	jbe    0x41797b
  4179c3:	sbb    ebp,edi
  4179c5:	add    al,0xb
  4179c7:	push   ecx
  4179c8:	retf   0x82b0
  4179cb:	adc    DWORD PTR [edx+ebp*8],0xffffff99
  4179cf:	xchg   ebp,eax
  4179d0:	add    BYTE PTR [ecx],bl
  4179d2:	jecxz  0x4179f8
  4179d4:	xor    bl,BYTE PTR [edi]
  4179d6:	jo     0x417a56
  4179d8:	mov    edi,0x7e2047eb
  4179dd:	mov    esp,0xea6e15ee
  4179e2:	dec    edi
  4179e3:	nop
  4179e4:	or     DWORD PTR [esi-0x4134da5],esp
  4179ea:	dec    edx
  4179eb:	pop    ss
  4179ec:	push   ebp
  4179ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ee:	adc    DWORD PTR [eax+eiz*1-0x42],0x1f
  4179f3:	xor    bl,BYTE PTR [eax+0x2]
  4179f6:	cli    
  4179f7:	jg     0x417a05
  4179f9:	je     0x4179b3
  4179fb:	push   es
  4179fc:	jne    0x41798e
  4179fe:	pop    ss
  4179ff:	push   0xffffff9a
  417a01:	out    dx,al
  417a02:	ss (bad) 
  417a05:	jo     0x417a35
  417a07:	push   eax
  417a08:	je     0x417994
  417a0a:	xchg   ecx,eax
  417a0b:	add    BYTE PTR [edx+edx*2],al
  417a0e:	nop
  417a0f:	scas   al,BYTE PTR es:[edi]
  417a10:	lods   eax,DWORD PTR ds:[esi]
  417a11:	xchg   edx,eax
  417a12:	mov    edx,DWORD PTR [eax+0x27]
  417a15:	dec    esp
  417a16:	sub    DWORD PTR ds:0xb8699e46,eax
  417a1c:	mov    esi,edi
  417a1e:	in     al,dx
  417a1f:	pushf  
  417a20:	arpl   WORD PTR [ebx+0x3c],si
  417a23:	xchg   ebx,eax
  417a24:	xor    eax,0x38ec50e
  417a29:	(bad)  
  417a2a:	adc    BYTE PTR [edx],bh
  417a2c:	pop    ds
  417a2d:	jge    0x417aa5
  417a2f:	fdiv   QWORD PTR [edx-0x431bd47c]
  417a35:	fiadd  DWORD PTR [edi+esi*1]
  417a38:	int    0x32
  417a3a:	sbb    ah,dl
  417a3c:	dec    ecx
  417a3d:	pushf  
  417a3e:	into   
  417a3f:	sbb    ch,BYTE PTR [edx]
  417a41:	add    bl,ch
  417a43:	aaa    
  417a44:	sar    bl,0xd2
  417a47:	rcr    DWORD PTR [eax+edi*1],0x6b
  417a4b:	mul    BYTE PTR [ecx-0x5c720ffc]
  417a51:	push   eax
  417a52:	inc    esp
  417a53:	pushf  
  417a54:	enter  0xb644,0x21
  417a58:	ds arpl bp,cx
  417a5b:	test   DWORD PTR [edi],esi
  417a5d:	ja     0x417a02
  417a5f:	add    ch,0x76
  417a62:	pop    eax
  417a63:	arpl   WORD PTR [ebp-0x5a],di
  417a66:	(bad)  
  417a67:	xlat   BYTE PTR ds:[ebx]
  417a68:	mul    DWORD PTR [ebx-0x6b]
  417a6b:	stos   DWORD PTR es:[edi],eax
  417a6c:	push   esp
  417a6d:	mov    cl,0x4
  417a6f:	(bad)  
  417a70:	cs xor eax,0xac90966
  417a76:	or     ebx,edx
  417a78:	lds    ecx,FWORD PTR [ebx-0x2e774385]
  417a7e:	test   DWORD PTR [ecx+0x3e0dafc9],0xe042e69f
  417a88:	gs dec edi
  417a8a:	call   FWORD PTR [edx-0x54]
  417a8d:	or     BYTE PTR [ebp+0x5ca66ebf],0xb5
  417a94:	pop    esp
  417a95:	jb     0x417a75
  417a97:	sbb    BYTE PTR [eax+0x2f],ah
  417a9a:	call   0xb4bcd951
  417a9f:	or     BYTE PTR [ebx],cl
  417aa1:	pop    esp
  417aa2:	mov    ah,ch
  417aa4:	inc    ecx
  417aa5:	mov    gs,WORD PTR [edx-0x9c88278]
  417aab:	dec    esi
  417aac:	icebp  
  417aad:	clc    
  417aae:	pop    esi
  417aaf:	push   ebx
  417ab0:	jno    0x417a50
  417ab2:	add    DWORD PTR [edi+0x5b295e3e],0x30ab0db4
  417abc:	xchg   bh,bl
  417abe:	adc    BYTE PTR [esi],dl
  417ac0:	adc    esi,DWORD PTR [esi*4+0x25b41845]
  417ac7:	imul   ebx,ebp,0xffffff84
  417aca:	fcmove st,st(1)
  417acc:	push   ss
  417acd:	inc    edx
  417ace:	sub    eax,0x56b8b4cd
  417ad3:	mov    ds:0x90876d12,al
  417ad8:	xor    DWORD PTR [ebp+0x7970b1ac],eax
  417ade:	retf   
  417adf:	cmp    edx,DWORD PTR [edi]
  417ae1:	add    al,0x7f
  417ae3:	push   0x3df5085f
  417ae8:	leave  
  417ae9:	dec    ebp
  417aea:	xlat   BYTE PTR ds:[ebx]
  417aeb:	push   0xdc687670
  417af0:	push   esp
  417af1:	das    
  417af2:	sbb    bl,ah
  417af4:	fs in  eax,0xf9
  417af7:	jo     0x417b51
  417af9:	scas   eax,DWORD PTR es:[edi]
  417afa:	jp     0x417b39
  417afc:	cmp    ah,BYTE PTR [edi-0x29f78ab1]
  417b02:	cmp    eax,0x32c28a78
  417b07:	mov    dl,0xe1
  417b09:	dec    ebp
  417b0a:	lods   eax,DWORD PTR ds:[esi]
  417b0b:	jge    0x417a98
  417b0d:	or     al,0x1d
  417b0f:	cmp    al,0xf8
  417b11:	das    
  417b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b13:	neg    DWORD PTR [esi+0x5c53f829]
  417b19:	lods   al,BYTE PTR ds:[esi]
  417b1a:	pop    ebp
  417b1b:	sar    BYTE PTR [ebx],cl
  417b1d:	xor    bl,BYTE PTR [ebp+eiz*4+0x304a819d]
  417b24:	xchg   esi,eax
  417b25:	mov    esi,0x83d63506
  417b2a:	cld    
  417b2b:	jmp    0xd46fff6e
  417b30:	fcomp  QWORD PTR [eax+0x47]
  417b33:	mov    bh,BYTE PTR [eax+0x30]
  417b36:	stc    
  417b37:	popa   
  417b38:	push   es
  417b39:	mov    al,ds:0x32c2930f
  417b3e:	hlt    
  417b3f:	jo     0x417ae4
  417b41:	xchg   esi,eax
  417b42:	minps  xmm4,XMMWORD PTR [ebp+0x38]
  417b46:	into   
  417b47:	or     ah,BYTE PTR [ecx+ebp*2]
  417b4a:	push   edi
  417b4b:	jecxz  0x417ad4
  417b4d:	cli    
  417b4e:	pop    esi
  417b4f:	mov    DWORD PTR [edi-0x4abb0c36],esi
  417b55:	jle    0x417b8b
  417b57:	pop    esp
  417b58:	pop    edx
  417b59:	jl     0x417b6f
  417b5b:	push   ebx
  417b5c:	pop    ss
  417b5d:	ins    DWORD PTR es:[edi],dx
  417b5e:	mov    bh,0x8e
  417b60:	mov    ds:0x119292c,eax
  417b65:	out    dx,al
  417b66:	xor    al,0xa1
  417b68:	adc    bh,BYTE PTR [edi-0x4ff0b659]
  417b6e:	xor    edx,DWORD PTR [eax+0x32d677ff]
  417b74:	cmp    al,0x11
  417b76:	push   ds
  417b77:	lahf   
  417b78:	hlt    
  417b79:	js     0x417b04
  417b7b:	jg     0x417b7b
  417b7d:	add    BYTE PTR [esi+ebp*2],al
  417b80:	ret    0x7d2d
  417b83:	ss xchg esp,eax
  417b85:	and    esi,DWORD PTR [ebx+0x4a]
  417b88:	cs inc esi
  417b8a:	xchg   ecx,eax
  417b8b:	enter  0xa2d3,0x1b
  417b8f:	dec    ebx
  417b90:	call   0xfdf2a43f
  417b95:	inc    edx
  417b96:	mov    al,0xe7
  417b98:	sub    al,bl
  417b9a:	xchg   ecx,eax
  417b9b:	jnp    0x417bec
  417b9d:	dec    BYTE PTR [ebx+0x3a150912]
  417ba3:	fs xor eax,0x90ae40a2
  417ba9:	out    dx,eax
  417baa:	mov    ah,0xa1
  417bac:	call   0x2c4cc1c8
  417bb1:	ret    0xc9fe
  417bb4:	mov    ah,0xe9
  417bb6:	adc    eax,0xca38557e
  417bbb:	jb     0x417c39
  417bbd:	out    dx,al
  417bbe:	jne    0x417b50
  417bc0:	jl     0x417bce
  417bc2:	xor    edx,esi
  417bc4:	dec    eax
  417bc5:	and    bl,BYTE PTR [ebx-0x1e82865e]
  417bcb:	mov    dh,0x1
  417bcd:	or     eax,0x2e845ccf
  417bd2:	outs   dx,BYTE PTR ds:[esi]
  417bd3:	cld    
  417bd4:	outs   dx,BYTE PTR ds:[esi]
  417bd5:	push   ds
  417bd6:	das    
  417bd7:	add    esp,DWORD PTR [esi-0x55]
  417bda:	xlat   BYTE PTR ds:[ebx]
  417bdb:	push   esi
  417bdc:	icebp  
  417bdd:	pop    esi
  417bde:	xor    DWORD PTR [esi],esp
  417be0:	mov    ebx,0xb442afc1
  417be5:	repnz mov edi,0x24bbb3c4
  417beb:	dec    edx
  417bec:	mov    ah,0x8e
  417bee:	lea    edi,[ecx+0x6d]
  417bf1:	aad    0x3e
  417bf3:	and    bl,cl
  417bf5:	das    
  417bf6:	mov    WORD PTR [ebp+edi*8-0x69b11f64],ds
  417bfd:	push   ss
  417bfe:	daa    
  417bff:	fdivr  DWORD PTR [edx]
  417c01:	push   ss
  417c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c03:	mov    cl,0x59
  417c05:	and    BYTE PTR [edx+ebx*2],bl
  417c08:	rcr    BYTE PTR [edx-0x21],cl
  417c0b:	les    eax,FWORD PTR [ecx-0x6]
  417c0e:	ins    DWORD PTR es:[edi],dx
  417c0f:	push   esp
  417c10:	add    DWORD PTR [edx-0x362661a9],ebp
  417c16:	dec    esi
  417c17:	addr16 and al,0xd0
  417c1a:	push   ss
  417c1b:	dec    ebp
  417c1c:	pop    ebp
  417c1d:	sub    DWORD PTR [ebx],ecx
  417c1f:	clc    
  417c20:	cmp    ecx,edi
  417c22:	daa    
  417c23:	into   
  417c24:	xchg   ebx,eax
  417c25:	push   cs
  417c26:	stos   BYTE PTR es:[edi],al
  417c27:	lods   eax,DWORD PTR ds:[esi]
  417c28:	aad    0x6b
  417c2a:	outs   dx,BYTE PTR ds:[esi]
  417c2b:	in     eax,0x79
  417c2d:	stos   DWORD PTR es:[edi],eax
  417c2e:	ror    BYTE PTR [esi-0x42b5f0b3],1
  417c34:	cwde   
  417c35:	adc    edx,ebx
  417c37:	jmp    0xce1d:0xc18ac921
  417c3e:	mov    bh,0xa6
  417c40:	inc    ebp
  417c41:	mov    edi,0x7cfdae0a
  417c46:	xor    dh,cl
  417c48:	mov    eax,ds:0x69c577e5
  417c4d:	and    dl,al
  417c4f:	fs sahf 
  417c51:	xlat   BYTE PTR ds:[ebx]
  417c52:	rcl    DWORD PTR [ebx],1
  417c54:	cs (bad) 
  417c58:	mov    ebp,0x8eaa769b
  417c5d:	imul   ebp,DWORD PTR [ebx],0x6d
  417c60:	fcomp  DWORD PTR [ebx]
  417c62:	jbe    0x417c9d
  417c64:	mov    ebx,0xb94a389d
  417c69:	jo     0x417cb0
  417c6b:	mov    BYTE PTR [ebp+0xf63fe99],bl
  417c71:	dec    ebx
  417c72:	xor    eax,DWORD PTR [edx]
  417c74:	push   cs
  417c75:	push   es
  417c76:	aam    0x70
  417c78:	xchg   edx,eax
  417c79:	ja     0x417c08
  417c7b:	dec    ecx
  417c7c:	stos   DWORD PTR es:[edi],eax
  417c7d:	mov    edi,0x6de8eb7b
  417c82:	or     BYTE PTR [eax],dh
  417c84:	ret    0x4cc0
  417c87:	sub    BYTE PTR [ebx+0x27a8e912],dh
  417c8d:	inc    eax
  417c8e:	enter  0x3591,0xec
  417c92:	jl     0x417c3a
  417c94:	push   es
  417c95:	lea    esp,[esi-0x21]
  417c98:	inc    ebx
  417c99:	aaa    
  417c9a:	vpavgw ymm7,ymm7,YMMWORD PTR [ebx]
  417c9e:	cmp    eax,0x8c03c241
  417ca3:	out    0x31,eax
  417ca5:	mov    ds:0xe1127a16,eax
  417caa:	fst    QWORD PTR [eax+0x4db5bf4c]
  417cb0:	or     edx,DWORD PTR [ebx+0x1b]
  417cb3:	fdivr  QWORD PTR [ebx-0x4b]
  417cb6:	and    al,0x1e
  417cb8:	inc    esp
  417cb9:	add    al,0xf2
  417cbb:	cmc    
  417cbc:	mov    bh,bl
  417cbe:	fnstsw WORD PTR [esi]
  417cc0:	clc    
  417cc1:	sbb    edi,DWORD PTR [eax]
  417cc3:	fdivr  DWORD PTR [ebx+0x41992216]
  417cc9:	stos   BYTE PTR es:[edi],al
  417cca:	xor    ch,cl
  417ccc:	xor    edi,ecx
  417cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ccf:	push   ebx
  417cd0:	scas   eax,DWORD PTR es:[edi]
  417cd1:	aaa    
  417cd2:	xor    al,0x74
  417cd4:	xor    DWORD PTR [edx+0x4eacec1],0xffffffaa
  417cdb:	xchg   esi,eax
  417cdc:	add    BYTE PTR [esi],ch
  417cde:	jno    0x417c85
  417ce0:	cdq    
  417ce1:	adc    eax,0xead2d672
  417ce6:	mov    DWORD PTR [ebp+0x34937ffb],ebp
  417cec:	bound  ebx,QWORD PTR [ecx+0x1c6d08a0]
  417cf2:	mov    WORD PTR [ebx],ss
  417cf4:	test   BYTE PTR [ebp-0xa2ed691],dl
  417cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfb:	xor    al,BYTE PTR [eax]
  417cfd:	out    0x9b,eax
  417cff:	and    esi,DWORD PTR [si]
  417d02:	mov    edx,DWORD PTR [esi+0x4f]
  417d05:	xor    DWORD PTR [esi],0x5582b8c5
  417d0b:	sbb    DWORD PTR [edx],0x990de3f9
  417d11:	jge    0x417d4b
  417d13:	xchg   DWORD PTR [ebp-0x1a],ebp
  417d16:	inc    eax
  417d17:	out    dx,eax
  417d18:	pop    esp
  417d19:	mov    edi,0xa337328b
  417d1e:	xor    DWORD PTR [edx],eax
  417d20:	out    0xba,eax
  417d22:	cmp    al,0x66
  417d24:	test   BYTE PTR [ebx+0x3ebf3140],0x4d
  417d2b:	sub    al,0xea
  417d2d:	jg     0x417cd8
  417d2f:	push   ecx
  417d30:	sbb    eax,0x44ea3cb9
  417d35:	push   ds
  417d36:	sar    BYTE PTR [eax-0x6f5d0e9b],1
  417d3c:	pop    ebp
  417d3d:	daa    
  417d3e:	mov    BYTE PTR [esi+0x34836bbd],bl
  417d44:	pusha  
  417d45:	addr16 mov bl,0x7a
  417d48:	iret   
  417d49:	int3   
  417d4a:	std    
  417d4b:	shl    BYTE PTR [esi],cl
  417d4d:	sub    al,BYTE PTR [ebp-0x4d387db6]
  417d53:	and    BYTE PTR [ebp-0x73],ch
  417d56:	rol    esp,1
  417d58:	stos   DWORD PTR es:[edi],eax
  417d59:	sbb    BYTE PTR [ebx],al
  417d5b:	ins    DWORD PTR es:[edi],dx
  417d5c:	sub    eax,0x60d37c4f
  417d61:	(bad)  
  417d62:	mov    BYTE PTR gs:[edx-0x2fc58a67],0x2f
  417d6a:	push   es
  417d6b:	std    
  417d6c:	xor    BYTE PTR [eax-0x283ed1dd],0xd6
  417d73:	jmp    0x417db6
  417d75:	addr16 mov ah,0x5c
  417d78:	cmp    al,0xb2
  417d7a:	sbb    edi,ecx
  417d7c:	jb     0x417de1
  417d7e:	dec    edi
  417d7f:	int    0xe
  417d81:	in     eax,0xf9
  417d83:	inc    ebp
  417d84:	lods   eax,DWORD PTR ds:[esi]
  417d85:	or     DWORD PTR [ebp+edx*1+0x35],ebp
  417d89:	mov    ds:0x6a1269be,al
  417d8e:	jo     0x417d59
  417d90:	push   ecx
  417d91:	nop
  417d92:	mov    dh,BYTE PTR [edi]
  417d94:	cmp    ch,BYTE PTR [ebp+0x3f]
  417d97:	add    edx,DWORD PTR [eax]
  417d99:	xchg   esi,eax
  417d9a:	xchg   ebx,eax
  417d9b:	shr    BYTE PTR [eax+0x67e8dd07],cl
  417da1:	pusha  
  417da2:	popa   
  417da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da4:	fmul   DWORD PTR [ecx+ebp*2]
  417da7:	js     0x417dd4
  417da9:	jnp    0x417d90
  417dab:	and    BYTE PTR [edi],bl
  417dad:	mov    ebp,0x735bdb1e
  417db2:	jp     0x417d9c
  417db4:	adc    esi,esp
  417db6:	sbb    DWORD PTR [edi-0x608657ad],eax
  417dbc:	xchg   esi,eax
  417dbd:	pop    esp
  417dbe:	sub    eax,0x6f3df8d5
  417dc3:	push   ss
  417dc4:	add    bl,BYTE PTR ds:0xb22a0546
  417dca:	cmp    al,0x59
  417dcc:	sti    
  417dcd:	ins    BYTE PTR es:[edi],dx
  417dce:	inc    eax
  417dcf:	jb     0x417d8a
  417dd1:	aad    0xf4
  417dd3:	outs   dx,BYTE PTR ds:[esi]
  417dd4:	sti    
  417dd5:	idiv   bl
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	iret   
  417dd9:	fdivrp st(0),st
  417ddb:	xchg   DWORD PTR [ebp-0x52],esi
  417dde:	(bad)  [edx+0x2a]
  417de1:	clc    
  417de2:	inc    esi
  417de3:	(bad)  
  417de4:	stos   BYTE PTR es:[edi],al
  417de5:	aad    0x74
  417de7:	aaa    
  417de8:	mov    ebp,0xe4de1513
  417ded:	(bad)  
  417dee:	mov    es,ebx
  417df0:	sbb    BYTE PTR [ebx+0x55f54e67],ah
  417df6:	js     0x417dd1
  417df8:	pop    ecx
  417df9:	rcr    ebx,cl
  417dfb:	rcl    BYTE PTR [eax],1
  417dfd:	into   
  417dfe:	sbb    al,0x9f
  417e00:	add    edi,esi
  417e02:	fadd   DWORD PTR [ecx-0x75528933]
  417e08:	push   es
  417e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e0a:	idiv   DWORD PTR [edi-0x7f60212f]
  417e10:	cmc    
  417e11:	jg     0x417d96
  417e13:	push   es
  417e14:	sub    ch,BYTE PTR ds:0x56a65aca
  417e1a:	pusha  
  417e1b:	pop    esi
  417e1c:	iret   
  417e1d:	or     BYTE PTR [ecx+eax*2+0x57],al
  417e21:	lahf   
  417e22:	xchg   esp,eax
  417e23:	adc    esp,DWORD PTR [eax]
  417e25:	xchg   edi,eax
  417e26:	mov    edx,0x85e900be
  417e2b:	loope  0x417e0e
  417e2d:	mov    ebx,DWORD PTR [ebx]
  417e2f:	pop    DWORD PTR [esi+0x57]
  417e32:	sub    eax,0x22536921
  417e37:	cwde   
  417e38:	pop    es
  417e39:	daa    
  417e3a:	mov    al,0x5c
  417e3c:	int3   
  417e3d:	mov    dl,0x79
  417e3f:	ror    BYTE PTR [ecx],1
  417e41:	(bad)  
  417e43:	xor    eax,DWORD PTR [edi+0x7a64d48f]
  417e49:	and    ecx,ebp
  417e4b:	daa    
  417e4c:	std    
  417e4d:	sub    ch,al
  417e4f:	loope  0x417e23
  417e51:	push   0x36
  417e53:	cmp    DWORD PTR [eax+0x44e55d4c],0x5d
  417e5a:	pop    ebp
  417e5b:	lahf   
  417e5c:	daa    
  417e5d:	popf   
  417e5e:	loopne 0x417e17
  417e60:	mov    ah,0x8a
  417e62:	cdq    
  417e63:	dec    ebp
  417e64:	lods   eax,DWORD PTR ds:[esi]
  417e65:	xchg   ebx,eax
  417e66:	idiv   BYTE PTR [ebx-0x62e86c40]
  417e6c:	mov    edx,DWORD PTR [esi]
  417e6e:	iret   
  417e6f:	mov    bh,0xe2
  417e71:	lods   al,BYTE PTR ds:[esi]
  417e72:	les    eax,FWORD PTR gs:[edi]
  417e75:	leave  
  417e76:	mov    al,0xb4
  417e78:	jae    0xa4747630
  417e7e:	loop   0x417e0b
  417e80:	cs dec ecx
  417e82:	lds    edx,FWORD PTR [edi]
  417e84:	xor    eax,0x47a00e81
  417e89:	xor    dl,bl
  417e8b:	xchg   ecx,eax
  417e8c:	aad    0xae
  417e8e:	pop    edx
  417e8f:	dec    ebx
  417e90:	fistp  WORD PTR [ecx-0x21]
  417e93:	push   ss
  417e94:	test   BYTE PTR [esi+0x1c760185],cl
  417e9a:	sti    
  417e9b:	test   BYTE PTR ss:[ebx-0x58],dh
  417e9f:	sub    eax,0x9193c300
  417ea4:	sbb    al,0xbb
  417ea6:	fcom   DWORD PTR [esi+ebp*8]
  417ea9:	pop    edi
  417eaa:	cmp    BYTE PTR [ebp+0x44b71ded],al
  417eb0:	cs test al,0x9b
  417eb3:	pop    edi
  417eb4:	pop    ds
  417eb5:	(bad)  
  417eb6:	in     al,0x55
  417eb8:	mov    ds,WORD PTR [edx+0x2c]
  417ebb:	aaa    
  417ebc:	outs   dx,DWORD PTR ds:[esi]
  417ebd:	bound  edx,QWORD PTR [edi+0x59a86753]
  417ec3:	push   0x1f352db3
  417ec8:	mov    ds:0xffcb98c0,eax
  417ecd:	in     eax,0xf2
  417ecf:	shl    esi,0x64
  417ed2:	ret    
  417ed3:	int    0xf4
  417ed5:	sub    bh,bh
  417ed7:	push   ebx
  417ed8:	aad    0x81
  417eda:	inc    ecx
  417edb:	test   al,0xac
  417edd:	in     eax,dx
  417ede:	bound  ebp,QWORD PTR [ebx]
  417ee0:	inc    ebp
  417ee1:	dec    edi
  417ee2:	inc    ebp
  417ee3:	aas    
  417ee4:	mov    ?,WORD PTR [edi]
  417ee6:	shr    DWORD PTR [eax-0x2b74bc6b],1
  417eec:	imul   edx,DWORD PTR [eax],0xffffffd7
  417eef:	sahf   
  417ef0:	icebp  
  417ef1:	aam    0xf3
  417ef3:	xchg   ebx,eax
  417ef4:	push   ss
  417ef5:	mov    dl,0xea
  417ef7:	dec    eax
  417ef8:	jbe    0x417f57
  417efa:	aaa    
  417efb:	dec    edi
  417efc:	or     BYTE PTR [ecx],bl
  417efe:	mov    ah,0x9f
  417f00:	xchg   edi,eax
  417f01:	shufps xmm5,xmm5,0xff
  417f05:	mov    ah,0x4b
  417f07:	jae    0x417f4d
  417f09:	addr16 (bad) 
  417f0b:	sbb    dl,BYTE PTR [esi+0x2f96de5]
  417f11:	sub    esi,ecx
  417f13:	push   esp
  417f14:	push   ds
  417f15:	pop    esp
  417f16:	stos   DWORD PTR es:[edi],eax
  417f17:	loope  0x417ee0
  417f19:	push   eax
  417f1a:	enter  0xf488,0xc
  417f1e:	mov    dh,0x4b
  417f20:	dec    esi
  417f21:	pop    edi
  417f22:	dec    eax
  417f23:	and    DWORD PTR [esi+0x1ef3ae2b],0x77
  417f2a:	ins    BYTE PTR es:[edi],dx
  417f2b:	push   es
  417f2c:	xor    DWORD PTR [ecx],esp
  417f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2f:	adc    bl,al
  417f31:	or     eax,0xe6311d29
  417f36:	mov    esp,0x398f606a
  417f3b:	scas   al,BYTE PTR es:[edi]
  417f3c:	adc    BYTE PTR [eax+0x63],cl
  417f3f:	fistp  QWORD PTR [esi+0x5a]
  417f42:	cld    
  417f43:	inc    eax
  417f44:	js     0x417f51
  417f46:	mov    al,ds:0x3b7c475a
  417f4b:	call   FWORD PTR [ebp+0x5f]
  417f4e:	fnstsw WORD PTR [esi+ebp*8-0x12de45a3]
  417f55:	cli    
  417f56:	fwait
  417f57:	or     DWORD PTR ds:0x2fca3cd8,esi
  417f5d:	inc    esi
  417f5e:	xor    DWORD PTR fs:[eax],0x63
  417f62:	inc    ebx
  417f63:	xchg   al,bl
  417f65:	adc    DWORD PTR [ecx-0x76da0f67],0x58128e36
  417f6f:	(bad)  
  417f71:	popf   
  417f72:	mov    edx,fs
  417f74:	mov    ah,0xc3
  417f76:	pop    esp
  417f77:	cdq    
  417f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f79:	cwde   
  417f7a:	scas   eax,DWORD PTR es:[edi]
  417f7b:	mov    esp,0x368e923e
  417f80:	push   esp
  417f81:	addr16 xchg ebp,eax
  417f83:	mov    ah,0x2c
  417f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f86:	sbb    BYTE PTR [ebx-0x2365ebb6],al
  417f8c:	xor    dl,BYTE PTR [ecx-0x75]
  417f8f:	xor    BYTE PTR [eax],bh
  417f91:	cmp    bh,bl
  417f93:	aam    0xf
  417f95:	dec    edx
  417f96:	int3   
  417f97:	iret   
  417f98:	aad    0x53
  417f9a:	push   eax
  417f9b:	sub    edi,DWORD PTR [edi-0x71]
  417f9e:	in     eax,dx
  417f9f:	(bad)  
  417fa0:	xlat   BYTE PTR gs:[ebx]
  417fa2:	dec    edx
  417fa3:	rcl    DWORD PTR [edx+0x3888c8cd],1
  417fa9:	cs in  eax,0x99
  417fac:	cdq    
  417fad:	xor    al,0xd8
  417faf:	(bad)  
  417fb0:	outs   dx,DWORD PTR ds:[esi]
  417fb1:	mov    ebx,0x151e4bf2
  417fb6:	xchg   edi,eax
  417fb7:	sahf   
  417fb8:	dec    edi
  417fb9:	aas    
  417fba:	sti    
  417fbb:	int3   
  417fbc:	add    eax,0x505f85d4
  417fc1:	in     al,0xde
  417fc3:	mov    cl,BYTE PTR [edi-0x2552da95]
  417fc9:	mov    ds:0x77a5b32f,eax
  417fce:	jmp    0x417f7c
  417fd0:	push   esi
  417fd1:	cmp    DWORD PTR ds:0xa01e9845,esi
  417fd7:	ss mov ch,0xe0
  417fda:	jmp    0x56fd:0xcff692c8
  417fe1:	xor    DWORD PTR [ecx+0x2dab50c],0x8564119e
  417feb:	(bad)  
  417fec:	ds adc edi,ebp
  417fef:	mul    BYTE PTR [edi-0x6cde5d1d]
  417ff5:	(bad)  
  417ff6:	outs   dx,BYTE PTR ds:[esi]
  417ff7:	mov    esp,0x3040c15a
  417ffc:	aaa    
  417ffd:	adc    eax,0x3ed13463
  418002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418003:	jae    0x417ff8
  418005:	jbe    0x417ff6
  418007:	cdq    
  418008:	in     al,0xd1
  41800a:	ss pop esp
  41800c:	into   
  41800d:	mov    dh,0x60
  41800f:	daa    
  418010:	daa    
  418011:	dec    edx
  418012:	mov    edi,0x12e9eeff
  418017:	dec    BYTE PTR [ebx+0x42]
  41801a:	std    
  41801b:	jecxz  0x417fd9
  41801d:	mov    eax,ds:0x5ee97f94
  418022:	add    al,0x2f
  418024:	cmc    
  418025:	add    ecx,DWORD PTR [ebp-0x59b38041]
  41802b:	sbb    ecx,DWORD PTR [ebx]
  41802d:	pushf  
  41802e:	adc    edx,0x92fd32f6
  418034:	jnp    0x418091
  418036:	ret    0xa048
  418039:	sub    eax,0x6e416a87
  41803e:	pop    esi
  41803f:	inc    esi
  418040:	ret    
  418041:	xchg   edi,eax
  418042:	xor    BYTE PTR [edi+0x342e4fc7],ah
  418048:	fs enter 0xc0db,0x5
  41804d:	shl    DWORD PTR [ebx+0x3451bb71],cl
  418053:	fcomp  QWORD PTR [eax+0x78]
  418056:	jns    0x41809c
  418058:	sbb    eax,0x565e394b
  41805d:	fdivp  st(4),st
  41805f:	and    al,0xc0
  418061:	je     0x417ff2
  418063:	fist   WORD PTR [eax+eax*2]
  418066:	adc    ebp,edx
  418068:	dec    eax
  418069:	cs mov ebx,0xd1c0aeb9
  41806f:	push   0xbc5b913b
  418074:	mov    edx,0x37d5bf19
  418079:	test   al,0x94
  41807b:	aad    0x57
  41807d:	or     bl,ah
  41807f:	pop    ss
  418080:	jp     0x4180e0
  418082:	bound  esi,QWORD PTR [esi]
  418084:	arpl   WORD PTR [edx+0xce04e17],bp
  41808a:	mov    al,0xe9
  41808c:	stos   BYTE PTR es:[edi],al
  41808d:	scas   eax,DWORD PTR es:[edi]
  41808e:	rcl    BYTE PTR [esi],1
  418090:	int3   
  418091:	arpl   WORD PTR [ecx-0x23230cc],cx
  418097:	pop    edx
  418098:	into   
  418099:	adc    BYTE PTR [edx-0x9],0xce
  41809d:	mov    esp,0xf69e07db
  4180a2:	jno    0x418093
  4180a4:	push   esp
  4180a5:	dec    esp
  4180a6:	rol    DWORD PTR [ecx-0x493f3b76],0xcd
  4180ad:	test   DWORD PTR [ebx-0x4c],edi
  4180b0:	cld    
  4180b1:	adc    dh,BYTE PTR [edx]
  4180b3:	adc    ch,BYTE PTR [ebp+0x2ddc85bf]
  4180b9:	sti    
  4180ba:	mov    edx,fs
  4180bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180bd:	push   cs
  4180be:	lea    eax,[ebp+0x75cc41b7]
  4180c4:	(bad)  
  4180c5:	popf   
  4180c6:	cmp    cl,0xd5
  4180c9:	shl    DWORD PTR [ebp-0x1387423f],cl
  4180cf:	sbb    ch,BYTE PTR [esp+ebx*1-0x45c9081d]
  4180d6:	jl     0x4180a7
  4180d8:	jle    0x41805b
  4180da:	aad    0x48
  4180dc:	mov    edi,0x28f5861e
  4180e1:	(bad)  
  4180e2:	popa   
  4180e3:	dec    esi
  4180e4:	inc    ebx
  4180e5:	in     al,0xdb
  4180e7:	push   esp
  4180e8:	jecxz  0x418118
  4180ea:	test   DWORD PTR [edx],eax
  4180ec:	fucomip st,st(2)
  4180ee:	cmp    eax,0xf7e25ea6
  4180f3:	add    eax,DWORD PTR [edx+0x26]
  4180f6:	(bad)  
  4180f7:	fld    DWORD PTR [ecx+0x5156754e]
  4180fd:	inc    esp
  4180fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ff:	clc    
  418100:	gs jbe 0x418102
  418103:	xlat   BYTE PTR ds:[ebx]
  418104:	adc    BYTE PTR [edx],bh
  418106:	dec    ecx
  418107:	mov    ch,0x90
  418109:	or     ebp,ebx
  41810b:	sbb    DWORD PTR [edx-0xbec9c5],ebp
  418111:	mov    DWORD PTR [ebx+edi*1-0x6149c4e9],ebx
  418118:	jmp    0x1083:0x3c81cc8a
  41811f:	popf   
  418120:	je     0x4180d5
  418122:	out    dx,eax
  418123:	add    cl,BYTE PTR [ebx+0x27366fc7]
  418129:	mov    edi,0xc1510e73
  41812e:	out    dx,al
  41812f:	lds    ecx,FWORD PTR [ecx]
  418131:	mov    ch,0x57
  418133:	scas   al,BYTE PTR es:[edi]
  418134:	leave  
  418135:	mov    ds:0x88f5c294,al
  41813a:	cmp    eax,0x9c046b50
  41813f:	adc    al,0x16
  418141:	push   es
  418142:	jg     0x4180ff
  418144:	cmp    cl,dl
  418146:	add    eax,0x763300a6
  41814b:	mov    DWORD PTR [eax-0x57],ebp
  41814e:	and    BYTE PTR [eax],al
  418150:	icebp  
  418151:	ret    
  418152:	lahf   
  418153:	mov    ch,0x44
  418155:	xor    DWORD PTR [eax],esp
  418157:	in     eax,0x86
  418159:	and    BYTE PTR [edi+eiz*2],bl
  41815c:	mov    bh,0xe7
  41815e:	(bad)  
  41815f:	aaa    
  418160:	pop    eax
  418161:	adc    bl,cl
  418163:	scas   eax,DWORD PTR es:[edi]
  418164:	repz mov edx,0xbc7d5e65
  41816a:	nop
  41816b:	out    dx,al
  41816c:	mov    dh,0x67
  41816e:	adc    edi,DWORD PTR [edi]
  418170:	(bad)  
  418171:	out    dx,al
  418172:	push   cs
  418173:	ds pop esp
  418175:	sbb    ch,dh
  418177:	pop    esi
  418178:	and    BYTE PTR [ecx],bh
  41817a:	fistp  WORD PTR [ecx+0x3e]
  41817d:	push   edx
  41817e:	cmp    ecx,DWORD PTR [esp+edx*4+0xd]
  418182:	dec    esi
  418183:	push   esi
  418184:	call   0x6379a31f
  418189:	and    ecx,esp
  41818b:	loop   0x41820a
  41818d:	pop    DWORD PTR [ecx-0x5211e632]
  418193:	mov    ah,0x4a
  418195:	pop    edx
  418196:	jmp    0x4181c7
  418198:	(bad)  
  418199:	js     0x4181e7
  41819b:	xor    DWORD PTR [esi],0x98a0a81e
  4181a1:	call   0x1a4954ab
  4181a6:	mov    ah,0xee
  4181a8:	in     eax,dx
  4181a9:	pop    ebx
  4181aa:	adc    DWORD PTR [ecx-0x23],edx
  4181ad:	mov    esp,0x179f1955
  4181b2:	push   eax
  4181b3:	jno    0x418140
  4181b5:	sub    al,0x39
  4181b7:	xlat   BYTE PTR ds:[ebx]
  4181b8:	jns    0x4181b6
  4181ba:	test   BYTE PTR [edx-0x5e],dh
  4181bd:	pop    eax
  4181be:	mov    DWORD PTR [ecx+0x59604ba3],ebx
  4181c4:	inc    esi
  4181c5:	imul   esi,DWORD PTR [esi-0x10],0xffffff9f
  4181c9:	sub    edx,eax
  4181cb:	or     esi,DWORD PTR [eax+0x1e05db5c]
  4181d1:	aas    
  4181d2:	leave  
  4181d3:	cwde   
  4181d4:	inc    edi
  4181d5:	push   es
  4181d6:	add    DWORD PTR [ecx],edx
  4181d8:	pop    esi
  4181d9:	int3   
  4181da:	dec    edx
  4181db:	push   ss
  4181dc:	out    dx,al
  4181dd:	outs   dx,BYTE PTR ds:[esi]
  4181de:	retf   
  4181df:	jns    0x418221
  4181e1:	and    ebx,DWORD PTR [ebx]
  4181e3:	icebp  
  4181e4:	mov    gs,eax
  4181e6:	sbb    DWORD PTR [ebx-0x1e824fcb],ebx
  4181ec:	xchg   esp,eax
  4181ed:	adc    DWORD PTR [ebp-0x64321b7a],edi
  4181f3:	(bad)  
  4181f5:	je     0x418204
  4181f7:	inc    eax
  4181f8:	aaa    
  4181f9:	add    ebp,DWORD PTR [edx+0x7c38d866]
  4181ff:	or     al,0xfb
  418201:	mov    ebx,0x45d41d21
  418206:	mov    dh,0xe8
  418208:	dec    esi
  418209:	jae    0x4181f5
  41820b:	cmp    edx,DWORD PTR [edi-0x35]
  41820e:	push   ss
  41820f:	les    ebx,FWORD PTR [ebx+0x465d7360]
  418215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418216:	push   es
  418217:	(bad)  
  418218:	js     0x4181cd
  41821a:	lock stos BYTE PTR es:[edi],al
  41821c:	push   ds
  41821d:	(bad)  
  41821e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821f:	mov    ebp,0x10ffb76
  418224:	mov    ebp,0x4f1fa99a
  418229:	xchg   ebp,eax
  41822a:	xchg   edx,eax
  41822b:	xor    eax,0x8dc08405
  418230:	mov    ch,0xa8
  418232:	test   eax,0xde468e24
  418237:	xchg   ebp,eax
  418238:	xchg   edi,eax
  418239:	in     al,0x78
  41823b:	lods   al,BYTE PTR ds:[esi]
  41823c:	cmc    
  41823d:	aad    0x93
  41823f:	pop    esp
  418240:	mov    edx,0xdc93748d
  418245:	jno    0x418231
  418247:	js     0x418207
  418249:	sbb    esi,DWORD PTR [edx]
  41824b:	jl     0x41822a
  41824d:	shl    BYTE PTR [edi],1
  41824f:	test   eax,0x23be2311
  418254:	dec    esp
  418255:	sub    esp,DWORD PTR [ebp+0x5510a9f1]
  41825b:	fs and eax,0x92edb97f
  418261:	jne    0x418223
  418263:	mov    al,0x16
  418265:	mov    ss:0xd2e84978,eax
  41826b:	lahf   
  41826c:	sub    ch,dl
  41826e:	mov    cl,0x81
  418270:	push   edx
  418271:	mov    ah,0xf9
  418273:	pop    esi
  418274:	rcr    BYTE PTR ds:0x2ac188b7,1
  41827a:	bound  edx,QWORD PTR [ebp+ecx*1+0x1fc2f044]
  418281:	add    BYTE PTR [esi],0x49
  418284:	mov    esp,0x4ae14215
  418289:	int3   
  41828a:	mov    cl,0xe5
  41828c:	in     al,0x98
  41828e:	adc    al,BYTE PTR [edi]
  418290:	push   esi
  418291:	xor    dh,dh
  418293:	sub    BYTE PTR [esi-0x1],al
  418296:	dec    ecx
  418297:	fcomp  DWORD PTR [ecx+0x7d]
  41829a:	mov    WORD PTR [ebx-0x45],es
  41829d:	jmp    0x4a1e:0x545e62f5
  4182a4:	pop    eax
  4182a5:	mov    ch,0xf9
  4182a7:	mov    ch,0x64
  4182a9:	pop    ds
  4182aa:	retf   0xe617
  4182ad:	xchg   edx,eax
  4182ae:	cmp    bh,BYTE PTR [esi-0x68]
  4182b1:	mov    esi,DWORD PTR [ebx+ebp*2]
  4182b4:	loopne 0x4182fa
  4182b6:	sbb    DWORD PTR [ebx+edx*8],ecx
  4182b9:	add    al,BYTE PTR [esi-0x41]
  4182bc:	or     al,0x13
  4182be:	sub    eax,0xafad2fb4
  4182c3:	xor    edx,0xcb4a4b21
  4182c9:	enter  0x3405,0xad
  4182cd:	sbb    eax,0x4a7a5ef
  4182d2:	pop    ss
  4182d3:	das    
  4182d4:	dec    esi
  4182d5:	push   esp
  4182d6:	sbb    DWORD PTR [ebp+0x5f],0xffffffa1
  4182da:	xor    al,ah
  4182dc:	aam    0xbb
  4182de:	push   ss
  4182df:	push   ebp
  4182e0:	pop    ss
  4182e1:	and    al,0x8f
  4182e3:	mov    ss:0xdae7ba2b,eax
  4182e9:	les    esp,FWORD PTR [esi+eiz*2]
  4182ec:	rcr    BYTE PTR [ebp-0x48],cl
  4182ef:	ja     0x418318
  4182f1:	jl     0x4182cf
  4182f3:	xor    eax,0x915d4a2f
  4182f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f9:	mov    dl,0x90
  4182fb:	xor    esp,ebx
  4182fd:	shl    dh,cl
  4182ff:	rcr    ebx,cl
  418301:	mov    ds:0x4755e857,eax
  418306:	and    DWORD PTR [eax-0x2a074c02],ecx
  41830c:	push   ebx
  41830d:	sbb    BYTE PTR [edx+0x79],ah
  418310:	dec    eax
  418311:	mov    ebx,0x10663b4d
  418316:	adc    esp,DWORD PTR [ebp+0x4b]
  418319:	adc    BYTE PTR [ecx+0x28],al
  41831c:	sub    ebp,DWORD PTR [edi+0x6523c9d6]
  418322:	into   
  418323:	stos   BYTE PTR es:[edi],al
  418324:	pop    esp
  418325:	out    0xf,al
  418327:	(bad)  
  418329:	add    BYTE PTR [ebx-0x6a279bb1],ch
  41832f:	mov    edx,0x54c7bf0b
  418334:	push   ebp
  418335:	jae    0x418361
  418337:	push   ss
  418338:	pop    ss
  418339:	aas    
  41833a:	loopne 0x4183b6
  41833c:	sub    DWORD PTR [esi],ebx
  41833e:	sbb    DWORD PTR [ebx],esi
  418340:	stos   BYTE PTR es:[edi],al
  418341:	int3   
  418342:	cmp    DWORD PTR [ebx-0x14],0xffffffcd
  418346:	jle    0x41835d
  418348:	dec    eax
  418349:	xchg   BYTE PTR ds:0xe2d04bdf,bh
  41834f:	loope  0x418392
  418351:	and    eax,DWORD PTR [edi]
  418353:	adc    eax,0xc1cfef44
  418358:	add    edi,edi
  41835a:	pop    eax
  41835b:	sub    eax,0xcfcf4d41
  418360:	xor    al,0x48
  418362:	das    
  418363:	mov    bl,0x7
  418365:	cmp    BYTE PTR [esi+0x4],bh
  418368:	sub    ebp,DWORD PTR [ebx-0x6eea34d5]
  41836e:	sub    BYTE PTR [edi],bl
  418370:	xchg   edx,eax
  418371:	fxch   st(7)
  418373:	vpmacswd ymm2,ymm3,ymm6,ymm1
  418379:	push   cs
  41837a:	xchg   esp,eax
  41837b:	push   edx
  41837c:	jmp    0x418341
  41837e:	mov    cl,0xae
  418380:	test   DWORD PTR [ecx-0x5d],edx
  418383:	push   edi
  418384:	loopne 0x4183a8
  418386:	popa   
  418387:	inc    ecx
  418388:	(bad)  
  418389:	clc    
  41838a:	int    0x85
  41838c:	mov    ebp,0xe53c98fe
  418391:	sti    
  418392:	dec    eax
  418393:	xchg   DWORD PTR [ebp+0x4d27df35],edx
  418399:	cmp    DWORD PTR [ecx+0x779edb89],ecx
  41839f:	mov    al,ds:0xe902295e
  4183a4:	or     al,BYTE PTR [edx-0x739a8377]
  4183aa:	pushf  
  4183ab:	mov    BYTE PTR [ebp-0x37],dh
  4183ae:	jecxz  0x4183d3
  4183b0:	frndint 
  4183b2:	adc    ebp,DWORD PTR [esi-0x445a2a29]
  4183b8:	pop    esi
  4183b9:	shl    DWORD PTR [ebp+edx*8+0x65e7f9d2],cl
  4183c0:	test   al,0x22
  4183c2:	repz adc al,0xb1
  4183c5:	outs   dx,DWORD PTR ds:[esi]
  4183c6:	and    BYTE PTR [eax-0x30fab1fa],ch
  4183cc:	sub    al,0xea
  4183ce:	xchg   esi,eax
  4183d0:	cmp    edx,DWORD PTR [edx+ecx*4+0x484f44c5]
  4183d7:	repnz cmp edx,ebx
  4183da:	cmp    bh,BYTE PTR [ebp+0x42]
  4183dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183de:	mov    cs,WORD PTR [esi-0x6f0fb74b]
  4183e4:	lahf   
  4183e5:	add    esp,edx
  4183e7:	dec    ecx
  4183e8:	push   ecx
  4183e9:	pushf  
  4183ea:	lds    edx,FWORD PTR [esi*8-0x79991b49]
  4183f1:	pushf  
  4183f2:	pop    edx
  4183f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f4:	(bad)  
  4183f5:	fimul  DWORD PTR [eax-0x6e]
  4183f8:	mov    bh,0xd
  4183fa:	push   0xadfec889
  4183ff:	xor    eax,0x530103b7
  418404:	adc    esi,edi
  418406:	rol    BYTE PTR [ebp+0x7e],1
  418409:	mov    dl,0x62
  41840b:	imul   ebx,DWORD PTR ds:0x992b3043,0xffffff83
  418412:	jo     0x4183d2
  418414:	xchg   ecx,eax
  418415:	jg     0x418459
  418417:	mov    cl,0x75
  418419:	mov    ebx,0x13e1e36b
  41841e:	xchg   ebx,eax
  41841f:	cmp    bl,bl
  418421:	and    eax,esi
  418423:	outs   dx,BYTE PTR ds:[esi]
  418424:	xchg   edx,eax
  418425:	cmc    
  418426:	add    esi,esi
  418428:	mov    eax,0x9202d1bd
  41842d:	js     0x418438
  41842f:	dec    edx
  418430:	mov    ch,bl
  418432:	jo     0x418498
  418434:	jae    0x418495
  418436:	push   eax
  418437:	dec    esi
  418438:	rol    eax,0x7c
  41843b:	scas   al,BYTE PTR es:[edi]
  41843c:	std    
  41843d:	mov    ds:0x7dd2ffd7,eax
  418442:	(bad)  
  418443:	lock nop
  418445:	(bad)  
  418446:	sbb    al,0x97
  418448:	cld    
  418449:	or     eax,0x49e9fdd2
  41844e:	(bad)  
  41844f:	outs   dx,BYTE PTR ds:[esi]
  418450:	mov    dh,0x2f
  418452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418453:	and    bl,bh
  418455:	xchg   ebx,eax
  418456:	mov    bh,0x2b
  418458:	aas    
  418459:	jle    0x4184c2
  41845b:	mov    DWORD PTR [edi],edi
  41845d:	gs (bad) 
  41845f:	xchg   esp,eax
  418460:	data16 jb 0x418491
  418463:	mov    ebp,0x4b319c2a
  418468:	mov    gs,WORD PTR [edx+0x6c]
  41846b:	mov    BYTE PTR [edi],dl
  41846d:	bnd jne 0x41849f
  418470:	adc    BYTE PTR [ebx+0x48],ch
  418473:	mov    dl,0x23
  418475:	clc    
  418476:	dec    ebx
  418477:	mov    eax,ds:0xda870c7d
  41847c:	dec    edi
  41847d:	pop    es
  41847e:	cmp    DWORD PTR [edi+0x2f5b311c],esi
  418484:	or     al,0xb
  418486:	enter  0xa51,0x58
  41848a:	stos   DWORD PTR es:[edi],eax
  41848b:	jmp    0xdc52:0xcf994f11
  418492:	stos   DWORD PTR es:[edi],eax
  418493:	mov    cl,0x2a
  418495:	cmc    
  418496:	inc    DWORD PTR [ebp-0x19f7242f]
  41849c:	ja     0x418433
  41849e:	ds jecxz 0x418476
  4184a1:	out    dx,al
  4184a2:	ja     0x418519
  4184a4:	and    eax,0x83a7e6b4
  4184a9:	pop    esp
  4184aa:	mov    ah,0x64
  4184ac:	pop    esp
  4184ad:	gs addr16 xchg edx,eax
  4184b0:	cld    
  4184b1:	int    0xd8
  4184b3:	pop    esp
  4184b4:	in     al,dx
  4184b5:	jge    0x418446
  4184b7:	mov    WORD PTR ds:0x87ee34c9,ds
  4184bd:	jecxz  0x4184c9
  4184bf:	adc    dh,BYTE PTR [esi]
  4184c1:	or     al,0xd8
  4184c3:	cdq    
  4184c4:	adc    al,0x99
  4184c6:	pop    ebp
  4184c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c8:	call   0x4c5236b4
  4184cd:	js     0x418518
  4184cf:	pushf  
  4184d0:	and    BYTE PTR [edi],al
  4184d2:	enter  0xa4ee,0x93
  4184d6:	inc    eax
  4184d7:	cmp    al,0xe3
  4184d9:	sbb    ecx,DWORD PTR [edx-0x6e]
  4184dc:	das    
  4184dd:	adc    bh,BYTE PTR [eax-0x2]
  4184e0:	mov    ah,0xb
  4184e2:	lds    eax,FWORD PTR [esi-0x6e]
  4184e5:	rcr    DWORD PTR [edi-0x67],0xa8
  4184e9:	jnp    0x41851a
  4184eb:	mov    ch,0xcf
  4184ed:	psraw  mm1,mm6
  4184f0:	syscall 
  4184f2:	mov    ch,0xac
  4184f4:	adc    esp,DWORD PTR [eax+0xb77367b]
  4184fa:	sbb    dl,BYTE PTR [ecx-0x64]
  4184fd:	cmp    BYTE PTR [ebx+0x67446246],ah
  418503:	cmp    BYTE PTR [edx+eiz*1+0x6f],al
  418507:	popf   
  418508:	rol    esp,0x92
  41850b:	mov    ah,0x54
  41850d:	retf   
  41850e:	mov    esp,0xef62e6ae
  418513:	add    bh,ah
  418515:	jne    0x4184d8
  418517:	inc    esp
  418518:	es jle 0x418591
  41851b:	jo     0x4184d1
  41851d:	sub    edx,DWORD PTR [edx+0x70]
  418520:	bound  eax,QWORD PTR [edx+0x5]
  418523:	mov    ebp,0xba6c62b
  418528:	xor    al,0xcc
  41852a:	dec    ecx
  41852b:	xor    BYTE PTR [esi],0x98
  41852e:	stc    
  41852f:	retf   
  418530:	sbb    DWORD PTR [ecx+0x9],ecx
  418533:	pusha  
  418534:	xor    DWORD PTR [edx+ebx*4],0x36a94235
  41853b:	sbb    ch,0x1b
  41853e:	sbb    BYTE PTR [ebx],cl
  418540:	and    DWORD PTR [ebx-0x7],0xe43940eb
  418547:	out    0xbe,al
  418549:	ja     0x4184fc
  41854b:	cmp    DWORD PTR [esi-0x25],edi
  41854e:	xchg   ecx,eax
  41854f:	or     bl,bh
  418551:	clc    
  418552:	push   es
  418553:	je     0x41853d
  418555:	push   edi
  418556:	mov    ecx,0xb7ab4c9d
  41855b:	ins    BYTE PTR es:[edi],dx
  41855c:	jp     0x418569
  41855e:	dec    esp
  41855f:	mov    ah,0xb7
  418561:	lods   eax,DWORD PTR ds:[esi]
  418562:	jg     0x41851c
  418564:	inc    ebx
  418565:	dec    ebp
  418566:	push   0x57d6166d
  41856b:	shr    BYTE PTR [esi],cl
  41856d:	xchg   edi,eax
  41856e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41856f:	sub    dl,al
  418571:	pop    ss
  418572:	iret   
  418573:	cmc    
  418574:	outs   dx,BYTE PTR ds:[esi]
  418575:	jno    0x4185d0
  418577:	mov    ds:0x6c6df90b,eax
  41857c:	aas    
  41857d:	dec    esi
  41857e:	pop    ds
  41857f:	in     al,0xcb
  418581:	xor    eax,0xc96df163
  418586:	add    al,0xa
  418588:	ss loop 0x4185d6
  41858b:	jp     0x4185a6
  41858d:	dec    ebx
  41858e:	sahf   
  41858f:	popa   
  418590:	lds    esp,FWORD PTR [ebx-0x47]
  418593:	retf   0xe8c2
  418596:	pop    esp
  418597:	(bad)  
  418598:	xor    ebp,edx
  41859a:	gs xchg ebx,eax
  41859c:	fcomp  st(5)
  41859e:	jns    0x4185fe
  4185a0:	je     0x418605
  4185a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185a3:	add    ebp,eax
  4185a5:	cdq    
  4185a6:	test   eax,0x6fdc9c30
  4185ab:	fadd   st(0),st
  4185ad:	and    al,0xf
  4185af:	xor    BYTE PTR [esi],bh
  4185b1:	mov    ah,0x34
  4185b3:	into   
  4185b4:	jne    0x418626
  4185b6:	jbe    0x4185a8
  4185b8:	icebp  
  4185b9:	push   eax
  4185ba:	mov    al,ds:0x8464e802
  4185bf:	pop    ss
  4185c0:	lds    eax,FWORD PTR [ecx-0x79]
  4185c3:	gs call 0xe202:0xe59c0107
  4185cb:	mov    eax,0xfad82ccf
  4185d0:	inc    DWORD PTR [esi+eiz*1]
  4185d3:	mov    dh,0x39
  4185d5:	adc    al,0x48
  4185d7:	push   ds
  4185d8:	jbe    0x418574
  4185da:	jne    0x418626
  4185dc:	jp     0x4185d1
  4185de:	mov    cl,0x36
  4185e0:	mov    dl,0x53
  4185e2:	inc    edi
  4185e3:	sti    
  4185e4:	aad    0xb6
  4185e6:	xchg   ch,dl
  4185e8:	xlat   BYTE PTR ds:[ebx]
  4185e9:	mov    ds:0x161e6bc7,eax
  4185ee:	sub    al,BYTE PTR [ebp-0x67]
  4185f1:	and    BYTE PTR [ebx+ecx*4+0x74d1345c],0xe4
  4185f9:	sub    eax,0x1dde865d
  4185fe:	jno    0x41858b
  418600:	ds mov ebx,0x10788138
  418606:	dec    ebp
  418607:	jmp    0x3073:0xaf82063
  41860e:	pop    esi
  41860f:	dec    ebp
  418610:	xchg   ebp,eax
  418611:	push   0x8c900c60
  418616:	push   ebx
  418617:	push   ebp
  418618:	lods   eax,DWORD PTR ds:[esi]
  418619:	push   eax
  41861a:	jp     0x41869b
  41861c:	pop    esp
  41861d:	dec    edx
  41861e:	ror    edx,cl
  418620:	clc    
  418621:	add    eax,0x7eb64259
  418626:	and    BYTE PTR [esi+0x41],dl
  418629:	(bad)  
  41862a:	outs   dx,BYTE PTR ds:[esi]
  41862b:	fadd   QWORD PTR [ecx*4-0x66ca611]
  418632:	cmp    DWORD PTR [edx+0x2c],edi
  418635:	scas   eax,DWORD PTR es:[edi]
  418636:	repz xchg ecx,eax
  418638:	add    dl,dl
  41863a:	or     eax,0x59a6317a
  41863f:	mov    al,ds:0x91c9eed8
  418644:	cwde   
  418645:	push   edx
  418646:	stc    
  418647:	mov    bl,0xe
  418649:	and    edi,DWORD PTR [edi+ecx*1+0xae28799]
  418650:	cmp    eax,0x5568272e
  418655:	repnz xchg esi,eax
  418657:	scas   eax,DWORD PTR es:[edi]
  418658:	popa   
  418659:	lds    edi,FWORD PTR [edi-0x4c92a5ed]
  41865f:	lds    ebx,FWORD PTR [eax+ecx*1+0x69]
  418663:	leave  
  418664:	mov    edx,0xf656d970
  418669:	xchg   esi,eax
  41866a:	adc    al,0x63
  41866c:	ret    0xd228
  41866f:	jno    0x418664
  418671:	clc    
  418672:	ja     0x4186d8
  418674:	cs fwait
  418676:	push   0x34
  418678:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41867a:	push   ebp
  41867b:	mov    eax,0x1cfd43a6
  418680:	jp     0x41867f
  418682:	add    esi,DWORD PTR [edi+0x16]
  418685:	lods   eax,DWORD PTR ds:[esi]
  418686:	push   ecx
  418687:	cli    
  418688:	push   ss
  418689:	push   esp
  41868a:	pop    edi
  41868b:	es mov dl,0xdf
  41868e:	xor    BYTE PTR [eax],0x58
  418691:	mov    ebx,0x47d98e93
  418696:	adc    BYTE PTR [esi],dl
  418698:	or     bh,ah
  41869a:	add    DWORD PTR [ebx],ebp
  41869c:	sub    ecx,DWORD PTR [edx]
  41869e:	jne    0x418676
  4186a0:	enter  0xd614,0x8a
  4186a4:	cmp    BYTE PTR [ebx+eiz*1],bl
  4186a7:	adc    eax,0x1e09e6e1
  4186ac:	aaa    
  4186ad:	xlat   BYTE PTR ds:[ebx]
  4186ae:	imul   edi,DWORD PTR ds:0x67645eb,0xffffffe7
  4186b5:	dec    esi
  4186b6:	adc    ebp,DWORD PTR [ecx-0x2e]
  4186b9:	mov    ebp,esi
  4186bb:	or     bl,BYTE PTR [edi-0x3c]
  4186be:	cmp    al,0x19
  4186c0:	loopne 0x418724
  4186c2:	retf   
  4186c3:	adc    esi,DWORD PTR [esi]
  4186c5:	push   0xec331cc8
  4186ca:	vpunpcklqdq xmm7,xmm0,XMMWORD PTR [ebp+0x5a8aa48a]
  4186d2:	add    BYTE PTR ds:0xe950bf4c,cl
  4186d8:	jmp    0x3c72:0x16a13ad5
  4186df:	lock pop ebp
  4186e1:	fsub   DWORD PTR [ecx]
  4186e3:	ret    
  4186e4:	stos   BYTE PTR es:[edi],al
  4186e5:	fadd   QWORD PTR [esi-0x77f6d924]
  4186eb:	ds push ebx
  4186ed:	adc    BYTE PTR [ebp-0x100252b8],dh
  4186f3:	fabs   
  4186f5:	jnp    0x41868a
  4186f7:	inc    edi
  4186f8:	push   0x9afe9b10
  4186fd:	out    dx,eax
  4186fe:	repnz scas al,BYTE PTR es:[edi]
  418700:	mov    cl,0xcb
  418702:	daa    
  418703:	iret   
  418704:	aaa    
  418705:	jmp    0x51bdece4
  41870a:	mov    al,0xcd
  41870c:	or     edx,ecx
  41870e:	or     bl,BYTE PTR [esi]
  418710:	shl    DWORD PTR [esi+0x506feef1],0x4c
  418717:	inc    edi
  418718:	icebp  
  418719:	add    DWORD PTR [ecx],ebx
  41871b:	mov    al,0xae
  41871d:	adc    DWORD PTR [edi+0x3c0d2ef],esp
  418723:	mov    ebx,0x1799fdeb
  418728:	test   eax,0x4274a036
  41872d:	mul    DWORD PTR [edi]
  41872f:	ret    0x1c48
  418732:	pop    edi
  418733:	(bad)  
  418735:	popa   
  418736:	xchg   cl,bh
  418738:	loope  0x418765
  41873a:	cdq    
  41873b:	xchg   edx,eax
  41873c:	jnp    0x41877a
  41873e:	add    BYTE PTR [edx-0x4a6af7a],bl
  418744:	xchg   BYTE PTR [eax+0x63],dl
  418747:	das    
  418748:	test   ah,bl
  41874a:	rcr    BYTE PTR [eax-0x2f],0x44
  41874e:	mov    bl,0xc1
  418750:	sbb    dh,BYTE PTR [edi+esi*1-0x76578988]
  418757:	push   edi
  418758:	data16 jge 0x418768
  41875b:	call   0x1f59e2c6
  418760:	out    0x86,al
  418762:	stc    
  418763:	cmc    
  418764:	jmp    0x7aee8192
  418769:	pop    edx
  41876a:	sar    DWORD PTR [edx-0x4076b927],0xd7
  418771:	mov    DWORD PTR [eax-0xb762ad1],ebx
  418777:	jp     0x418780
  418779:	xor    eax,0xfd93f72b
  41877e:	test   BYTE PTR [edx+0x2e],bl
  418781:	push   ds
  418782:	dec    edx
  418783:	inc    edi
  418784:	mov    al,ds:0x6065818a
  418789:	xor    eax,0x1e4a389a
  41878e:	push   ds
  41878f:	cmp    ah,ah
  418791:	inc    ebp
  418792:	outs   dx,BYTE PTR ds:[esi]
  418793:	test   eax,0xf5849e29
  418798:	iret   
  418799:	idiv   BYTE PTR [ecx+eax*8]
  41879c:	int3   
  41879d:	mov    dh,0xc7
  41879f:	sbb    BYTE PTR [edi],bl
  4187a1:	nop
  4187a2:	cmp    DWORD PTR [edx+0x553158ef],edx
  4187a8:	sbb    ch,BYTE PTR [edx+0x2f95e289]
  4187ae:	cld    
  4187af:	push   0x8808eb01
  4187b4:	sub    bl,BYTE PTR [edi+0x61]
  4187b7:	push   esp
  4187b8:	mov    edi,0xac593681
  4187bd:	hlt    
  4187be:	push   ss
  4187bf:	in     al,dx
  4187c0:	popa   
  4187c1:	inc    edx
  4187c2:	dec    edx
  4187c3:	and    esp,DWORD PTR [ebx+0x42]
  4187c6:	inc    esp
  4187c7:	rol    DWORD PTR [ecx-0x4d],0x10
  4187cb:	push   edx
  4187cc:	add    eax,0xc519b7fc
  4187d1:	mov    eax,ds:0xe6bd8b14
  4187d6:	xor    al,dl
  4187d8:	push   0x365e84a5
  4187dd:	adc    dh,dl
  4187df:	jecxz  0x418860
  4187e1:	rol    DWORD PTR [ecx+0x4d4943e0],cl
  4187e7:	cmp    esp,DWORD PTR [ecx+0x23059960]
  4187ed:	lods   eax,DWORD PTR ds:[esi]
  4187ee:	daa    
  4187ef:	add    BYTE PTR [ebp-0xac554b0],dh
  4187f5:	aad    0xc9
  4187f7:	mov    gs,WORD PTR [esi+0xf]
  4187fa:	mov    BYTE PTR [edi-0x583ecd88],0x6c
  418801:	outs   dx,BYTE PTR ds:[esi]
  418802:	lahf   
  418803:	adc    eax,0x4f8ac556
  418808:	std    
  418809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41880a:	mov    bl,dl
  41880c:	loop   0x41882d
  41880e:	jg     0x41881b
  418810:	inc    ebx
  418811:	sub    eax,eax
  418813:	fs mov eax,0xfd7ce685
  418819:	bound  edx,QWORD PTR [edi]
  41881b:	dec    ebx
  41881c:	sbb    BYTE PTR [eax+0x202a5b7e],ch
  418822:	call   0xe2ac:0x16328fc6
  418829:	mov    dl,0xc7
  41882b:	jmp    0xd578:0xfcff1e48
  418832:	add    bh,BYTE PTR [eax-0x2a70f080]
  418838:	mov    ecx,0x3f88617b
  41883d:	add    BYTE PTR [ebp+0x8],0x30
  418841:	nop
  418842:	(bad)  
  418843:	dec    BYTE PTR ds:0xe128bd59
  418849:	out    0x33,eax
  41884b:	loop   0x418834
  41884d:	test   al,0x87
  41884f:	sub    BYTE PTR [ebp+0x3d78d17f],dh
  418855:	ret    0x6017
  418858:	inc    ecx
  418859:	rol    DWORD PTR [eax*8+0x52ec3ca9],1
  418860:	add    BYTE PTR [edx+0x6118c0d0],0x42
  418867:	adc    eax,0xe060255a
  41886c:	and    eax,0x8e10dc72
  418871:	loop   0x4188d4
  418873:	fisubr DWORD PTR [esi-0x21]
  418876:	sub    al,0x35
  418878:	call   FWORD PTR [edx-0x74]
  41887b:	and    al,0xf
  41887d:	add    edi,DWORD PTR [ecx]
  41887f:	shr    cl,0xa
  418882:	mov    al,ds:0x5a2344bd
  418887:	add    esp,0x9ef41c48
  41888d:	mov    ch,0x33
  41888f:	popf   
  418890:	call   0x5e8827a
  418895:	mov    ch,al
  418897:	je     0x41889c
  418899:	sti    
  41889a:	in     al,0x23
  41889c:	stos   DWORD PTR es:[edi],eax
  41889d:	mov    ebx,0xf53de316
  4188a2:	lea    ebx,[esi+0x1a]
  4188a5:	sbb    al,BYTE PTR [eax-0x30]
  4188a8:	aad    0xf8
  4188aa:	inc    edx
  4188ab:	jno    0x418902
  4188ad:	jne    0x41886d
  4188af:	test   eax,0x3afe54fc
  4188b4:	call   0xd990:0x10b13093
  4188bb:	push   esp
  4188bc:	mov    al,ss:0xf394eb9b
  4188c2:	aam    0xd5
  4188c4:	test   BYTE PTR [ebp+0x78bf37ca],bh
  4188ca:	fwait
  4188cb:	sbb    esi,DWORD PTR [edi-0x4e353812]
  4188d1:	fiadd  DWORD PTR [eax]
  4188d3:	into   
  4188d4:	leave  
  4188d5:	cs popf 
  4188d7:	loopne 0x41888a
  4188d9:	out    0x8f,al
  4188db:	mov    dl,0x89
  4188dd:	js     0x4188d4
  4188df:	mov    esi,0xaaf3cb43
  4188e4:	ret    0x8e8f
  4188e7:	xchg   esp,eax
  4188e8:	mov    ah,0xe3
  4188ea:	adc    eax,ebx
  4188ec:	xabort 0xd2
  4188ef:	push   ds
  4188f0:	cmp    dl,bh
  4188f2:	sub    dl,0x48
  4188f5:	dec    edi
  4188f6:	leave  
  4188f7:	xor    DWORD PTR [eax],eax
  4188f9:	pop    es
  4188fa:	mov    DWORD PTR [ebx-0x42],ecx
  4188fd:	mov    dh,0x68
  4188ff:	ror    DWORD PTR [esi],1
  418901:	imul   esp,DWORD PTR [edx+0x381835ad],0x6697914e
  41890b:	test   DWORD PTR ds:0xe7a70482,ecx
  418911:	into   
  418912:	fstp   TBYTE PTR [edx]
  418914:	mov    bh,0x2c
  418916:	mov    al,ds:0x3129f575
  41891b:	push   esp
  41891c:	or     eax,0xf0b64325
  418921:	fs out dx,eax
  418923:	ficomp DWORD PTR ds:0x497ec793
  418929:	test   eax,0x14c2b1b7
  41892e:	mov    ecx,0x4fd2734f
  418933:	push   ss
  418934:	test   DWORD PTR [edi],0x35ca85f7
  41893a:	xchg   edx,eax
  41893b:	jne    0x418914
  41893d:	call   0xf9d993b1
  418942:	ret    
  418943:	in     al,0xe6
  418945:	into   
  418946:	(bad)  
  418947:	sbb    al,0x7a
  418949:	and    DWORD PTR [esi-0x7085b70d],eax
  41894f:	adc    eax,0xcac016e4
  418954:	ror    BYTE PTR [eax],1
  418956:	mov    dh,0x4b
  418958:	ficomp DWORD PTR [eax-0x31]
  41895b:	xor    DWORD PTR ds:[edi-0x6c],eax
  41895f:	jo     0x418975
  418961:	aam    0xb9
  418963:	pop    edx
  418964:	mov    bl,0x91
  418966:	in     al,dx
  418967:	jecxz  0x418988
  418969:	jno    0x41895e
  41896b:	das    
  41896c:	aas    
  41896d:	xchg   edi,eax
  41896e:	jmp    0xe8c0d252
  418973:	(bad)  
  418974:	inc    edx
  418975:	cmp    ecx,DWORD PTR [ebx-0x4]
  418978:	push   edx
  418979:	(bad)  
  41897a:	ins    DWORD PTR es:[edi],dx
  41897b:	les    ecx,FWORD PTR ds:0x23b70df0
  418981:	sar    dl,0xa5
  418984:	and    BYTE PTR [ebp-0x7aaab118],al
  41898a:	cli    
  41898b:	push   ecx
  41898c:	jmp    0x4189e1
  41898e:	or     al,BYTE PTR [edi]
  418990:	bts    esp,eax
  418993:	pop    es
  418994:	dec    eax
  418995:	sti    
  418996:	sbb    DWORD PTR [ecx-0x9eca051],esp
  41899c:	or     BYTE PTR [esi+0x1987d1d7],0xa1
  4189a3:	xor    ecx,DWORD PTR [edx]
  4189a5:	pop    esp
  4189a6:	in     al,dx
  4189a7:	sub    al,0x23
  4189a9:	retf   0x394c
  4189ac:	push   esp
  4189ad:	imul   ebp,DWORD PTR [esi-0x78],0x8e49e4cd
  4189b4:	cmp    BYTE PTR [eax-0x31],dh
  4189b7:	fwait
  4189b8:	int    0xb8
  4189ba:	frstor [edx]
  4189bc:	xchg   esi,eax
  4189bd:	adc    ecx,edx
  4189bf:	mov    ds:0x48826d84,eax
  4189c4:	inc    edi
  4189c5:	(bad)  
  4189c6:	sub    DWORD PTR [edx*4+0x5c52f318],ecx
  4189cd:	pop    esi
  4189ce:	jg     0x418a34
  4189d0:	pop    eax
  4189d1:	ret    
  4189d2:	in     eax,dx
  4189d3:	sub    BYTE PTR ds:0xfbacd600,cl
  4189d9:	clc    
  4189da:	push   ss
  4189db:	jae    0x4189f1
  4189dd:	xchg   esi,eax
  4189de:	(bad)  
  4189e0:	int3   
  4189e1:	(bad)  
  4189e2:	(bad)
  4189e7:	sub    eax,0xfb690923
  4189ec:	and    eax,DWORD PTR [edx]
  4189ee:	mov    esi,0x6e44faac
  4189f3:	adc    bh,BYTE PTR [ebx-0x1d]
  4189f6:	ds js  0x418a3d
  4189f9:	or     BYTE PTR [ebx+esi*4+0x2696adfe],cl
  418a00:	xor    DWORD PTR [edx],0x4e
  418a03:	(bad)  
  418a04:	mov    bl,0x73
  418a06:	jae    0x418a31
  418a08:	je     0x418a34
  418a0a:	mov    cl,0x7
  418a0c:	repz or BYTE PTR [ecx+0x30],al
  418a10:	ja     0x418a78
  418a12:	sbb    esi,DWORD PTR [edi-0x4d80797b]
  418a18:	and    DWORD PTR [ebp+ebp*1-0x1e083ac2],ebp
  418a1f:	nop
  418a20:	pusha  
  418a21:	sbb    ebx,DWORD PTR [esp+ebx*2-0x2d]
  418a25:	(bad)  
  418a26:	mov    edx,0x3acf1284
  418a2b:	imul   edi,DWORD PTR [ebp-0x26],0x698fb60f
  418a32:	add    ecx,edx
  418a34:	in     al,0x93
  418a36:	pop    edx
  418a37:	aas    
  418a38:	icebp  
  418a39:	(bad)  
  418a3a:	in     al,0x4b
  418a3c:	test   al,0x22
  418a3e:	cli    
  418a3f:	repnz scas al,BYTE PTR es:[edi]
  418a41:	xchg   esi,eax
  418a42:	scas   al,BYTE PTR es:[edi]
  418a43:	pop    esp
  418a44:	lods   al,BYTE PTR gs:[esi]
  418a46:	stos   BYTE PTR es:[edi],al
  418a47:	scas   al,BYTE PTR es:[edi]
  418a48:	pop    ds
  418a49:	push   esi
  418a4a:	or     esi,DWORD PTR [ebp-0x5c]
  418a4d:	lods   al,BYTE PTR ds:[esi]
  418a4e:	jnp    0x418a4f
  418a50:	or     BYTE PTR [esi],cl
  418a52:	jo     0x418a8e
  418a54:	out    0x5a,al
  418a56:	adc    BYTE PTR [esi],dh
  418a58:	pop    esp
  418a59:	mov    cl,0xb1
  418a5b:	cmc    
  418a5c:	cmc    
  418a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5e:	push   eax
  418a5f:	iret   
  418a60:	cmp    al,0xcb
  418a62:	xchg   esp,eax
  418a63:	ror    ah,1
  418a65:	fst    DWORD PTR [ecx-0x66]
  418a68:	bound  ebx,QWORD PTR [edi-0x58a4f97c]
  418a6e:	clc    
  418a6f:	ins    DWORD PTR es:[edi],dx
  418a70:	fisttp WORD PTR [edx]
  418a72:	xchg   edx,eax
  418a73:	cli    
  418a74:	pop    ebp
  418a75:	aam    0x3d
  418a77:	inc    ebx
  418a78:	push   ss
  418a79:	jns    0x418ae8
  418a7b:	sub    bh,BYTE PTR [esi+edi*4-0x7702b77f]
  418a82:	jmp    0xc0fd3691
  418a87:	imul   ebp,DWORD PTR [edi+ebp*4+0x52],0xecfe845f
  418a8f:	push   esi
  418a90:	out    0x70,eax
  418a92:	push   ss
  418a93:	add    ch,al
  418a95:	dec    ebp
  418a96:	mov    dl,0x49
  418a98:	pushf  
  418a99:	in     eax,0x86
  418a9b:	dec    edi
  418a9c:	mov    dh,0x44
  418a9e:	mov    DWORD PTR [edi-0x1734d0a],esi
  418aa4:	add    ebx,esi
  418aa6:	mov    DWORD PTR [ebx],0x4378ee9b
  418aac:	xchg   edi,eax
  418aad:	adc    ebx,ecx
  418aaf:	stos   DWORD PTR es:[edi],eax
  418ab0:	adc    bl,ah
  418ab2:	jecxz  0x418b1c
  418ab4:	cmp    eax,0x3d3d42ea
  418ab9:	mov    ds:0x6f414a4d,al
  418abe:	stos   BYTE PTR es:[edi],al
  418abf:	sub    BYTE PTR [ecx+0x8208c84],dl
  418ac5:	aad    0x7b
  418ac7:	cld    
  418ac8:	sbb    bh,bh
  418aca:	(bad)  
  418acb:	cmc    
  418acc:	jle    0x418ab6
  418ace:	inc    ecx
  418acf:	bound  ebx,QWORD PTR [ebx-0x6e223962]
  418ad5:	xchg   ebx,eax
  418ad6:	int3   
  418ad7:	loopne 0x418a97
  418ad9:	push   es
  418ada:	sub    DWORD PTR [edi+edi*2],ebx
  418add:	adc    DWORD PTR [esi-0x362b511e],edx
  418ae3:	dec    esi
  418ae4:	int    0xd
  418ae6:	clc    
  418ae7:	cdq    
  418ae8:	lds    ebx,FWORD PTR [eax]
  418aea:	mov    esi,gs
  418aec:	out    dx,al
  418aed:	jmp    0x418ab4
  418aef:	retf   
  418af0:	es adc eax,0x53ddaf34
  418af6:	jns    0x418b0a
  418af8:	popf   
  418af9:	int    0xd8
  418afb:	daa    
  418afc:	mov    edi,0xf961f45f
  418b01:	test   bh,dl
  418b03:	mov    DWORD PTR [esi+0x7754b7f2],edi
  418b09:	lds    edi,FWORD PTR [esi]
  418b0b:	xlat   BYTE PTR ds:[ebx]
  418b0c:	push   ss
  418b0d:	mov    edx,0x12ff6eb2
  418b12:	loopne 0x418b66
  418b14:	aad    0xd7
  418b16:	shr    esp,cl
  418b18:	sbb    BYTE PTR [edx],0xae
  418b1b:	bound  ebx,QWORD PTR [ebx+ebp*4+0x6b]
  418b1f:	add    cl,BYTE PTR [ecx]
  418b21:	push   0x35
  418b23:	out    dx,eax
  418b24:	call   0x599c:0x52c31290
  418b2b:	add    eax,edi
  418b2d:	xchg   edx,eax
  418b2e:	cdq    
  418b2f:	out    0x34,eax
  418b31:	popa   
  418b32:	sub    bh,BYTE PTR [ecx+0x4bb0327b]
  418b38:	lock jo 0x418b2f
  418b3b:	test   BYTE PTR [ecx+0x1f],dh
  418b3e:	(bad)  [esi]
  418b40:	jle    0x418b65
  418b42:	adc    ch,0x78
  418b45:	sbb    ch,BYTE PTR [edi]
  418b47:	mov    al,0x64
  418b49:	and    cl,ch
  418b4b:	stc    
  418b4c:	mov    edx,0xa0949ebc
  418b51:	repz cmp esp,DWORD PTR [ecx+0x2da2c533]
  418b58:	xor    dl,BYTE PTR [ebx]
  418b5a:	add    al,0x43
  418b5c:	sbb    BYTE PTR [ebx+0x58],ch
  418b5f:	pushf  
  418b60:	cdq    
  418b61:	fidiv  DWORD PTR [ecx+0x3694f65]
  418b67:	mov    dh,0x7d
  418b69:	adc    al,0x19
  418b6b:	das    
  418b6c:	push   0x70
  418b6e:	mov    cl,BYTE PTR [edi]
  418b70:	sub    ebx,DWORD PTR [eax+edx*8]
  418b73:	mov    al,BYTE PTR [eax+0x37]
  418b76:	out    dx,eax
  418b77:	jp     0x418ba6
  418b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b7a:	xor    BYTE PTR [ebx-0x63],0xb8
  418b7e:	xchg   edx,eax
  418b7f:	clc    
  418b80:	jne    0x418bda
  418b82:	sub    ah,BYTE PTR [eax]
  418b84:	ins    BYTE PTR es:[edi],dx
  418b85:	shr    esp,cl
  418b87:	mov    al,0x8d
  418b89:	stc    
  418b8a:	mov    ch,0x15
  418b8c:	pop    esi
  418b8d:	mov    ecx,0x8779e26f
  418b92:	fcom   DWORD PTR [eax-0x77]
  418b95:	int3   
  418b96:	pusha  
  418b97:	pop    esi
  418b98:	push   ecx
  418b99:	mov    bh,0x95
  418b9b:	shl    bl,1
  418b9d:	or     DWORD PTR [ebp+0x7a],ebx
  418ba0:	jmp    0x418b35
  418ba2:	loopne 0x418b79
  418ba4:	xchg   ecx,eax
  418ba5:	nop
  418ba6:	push   0xffffffcf
  418ba8:	aas    
  418ba9:	jnp    0x418b6d
  418bab:	jmp    0x6a88:0x7c86051f
  418bb2:	pop    DWORD PTR [edi]
  418bb4:	(bad)  
  418bb5:	shr    dl,1
  418bb7:	(bad)  
  418bb8:	into   
  418bb9:	jmp    0xd1f:0x4d991bbe
  418bc0:	push   0x5605c611
  418bc5:	js     0x418be7
  418bc7:	push   0x20
  418bc9:	loop   0x418b55
  418bcb:	jle    0x418bb1
  418bcd:	xor    al,0xa
  418bcf:	and    ch,bh
  418bd1:	aas    
  418bd2:	aaa    
  418bd3:	sbb    al,0x9
  418bd5:	mov    fs,WORD PTR [edx]
  418bd7:	dec    edi
  418bd8:	xor    esp,DWORD PTR [ecx]
  418bda:	and    ch,BYTE PTR [ebx-0x49872d3f]
  418be0:	(bad)  
  418be1:	hlt    
  418be2:	rcr    DWORD PTR ds:0xadcbb285,0x3a
  418be9:	or     bl,al
  418beb:	pop    eax
  418bec:	mov    bh,0x59
  418bee:	pop    es
  418bef:	aam    0x5e
  418bf1:	push   eax
  418bf2:	loope  0x418c12
  418bf4:	imul   ebp,DWORD PTR [ecx],0x119f0617
  418bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bfb:	mov    al,0x13
  418bfd:	xchg   ebp,eax
  418bfe:	or     eax,0xe414562e
  418c03:	xchg   ebp,eax
  418c04:	inc    esp
  418c05:	xor    dl,cl
  418c07:	ret    
  418c08:	sbb    ch,BYTE PTR [ebx+0x16]
  418c0b:	outs   dx,DWORD PTR cs:[esi]
  418c0d:	push   ss
  418c0e:	dec    esi
  418c0f:	xor    ecx,eax
  418c11:	in     eax,dx
  418c12:	(bad)  
  418c13:	fneni(8087 only) 
  418c15:	mov    BYTE PTR [ebp+0x1c],0x71
  418c19:	leave  
  418c1a:	jl     0x418bcc
  418c1c:	aad    0x10
  418c1e:	(bad)  
  418c1f:	mov    dl,0x80
  418c21:	ror    BYTE PTR [edx-0x37],cl
  418c24:	imul   ah
  418c26:	mov    edi,DWORD PTR [edx]
  418c28:	popa   
  418c29:	push   ds
  418c2a:	dec    ebp
  418c2b:	jb     0x418c77
  418c2d:	push   ebp
  418c2e:	mov    al,ds:0x9e5dcb89
  418c33:	cmp    eax,0x405135ce
  418c38:	or     ch,BYTE PTR [esi-0x6add6de5]
  418c3e:	in     al,0x61
  418c40:	xor    DWORD PTR [ebp-0x30b42ebb],ebx
  418c46:	pop    esi
  418c47:	rcr    BYTE PTR [esi+0x29d93cd9],0x52
  418c4e:	ss pop esp
  418c50:	push   cs
  418c51:	cs cdq 
  418c53:	int3   
  418c54:	bound  edi,QWORD PTR [edx]
  418c56:	mov    dh,0x8
  418c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c59:	jmp    0x97fae54d
  418c5e:	dec    esp
  418c5f:	sub    ah,al
  418c61:	cmp    eax,0x4a9600f1
  418c66:	mov    ebp,0xcfae0225
  418c6b:	xlat   BYTE PTR ds:[ebx]
  418c6c:	dec    esp
  418c6d:	mov    esi,0xa37bc4c8
  418c72:	jb     0x418ce6
  418c74:	xchg   esi,eax
  418c75:	sub    dh,bh
  418c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c78:	rol    DWORD PTR [edx],cl
  418c7a:	add    eax,0x311d0104
  418c7f:	add    DWORD PTR [eax-0x3],0x2e
  418c83:	dec    esp
  418c84:	sub    al,0xb7
  418c86:	adc    ah,BYTE PTR [edi]
  418c88:	in     eax,dx
  418c89:	sub    DWORD PTR [esi+esi*8],0x5f
  418c8d:	pop    edx
  418c8f:	icebp  
  418c90:	cmp    DWORD PTR [eax],0x37
  418c93:	and    bl,BYTE PTR [ecx+0x59]
  418c96:	dec    eax
  418c97:	scas   al,BYTE PTR es:[edi]
  418c98:	daa    
  418c99:	test   al,cl
  418c9b:	shl    BYTE PTR [esp+edx*2-0x372e9ba7],0x1b
  418ca3:	mov    BYTE PTR [eax],dl
  418ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca6:	ss sub al,0x2a
  418ca9:	sar    DWORD PTR [esi-0xa91f3d5],1
  418caf:	pop    ds
  418cb0:	daa    
  418cb1:	mov    eax,ebp
  418cb3:	out    0xba,al
  418cb5:	pop    edi
  418cb6:	sbb    al,ch
  418cb8:	add    al,0xf0
  418cba:	imul   esp,DWORD PTR [ecx],0x4f
  418cbd:	test   eax,0x5f06e916
  418cc2:	lods   al,BYTE PTR ds:[esi]
  418cc3:	jmp    FWORD PTR [edi-0x4c5e7fdd]
  418cc9:	add    dh,BYTE PTR [eax]
  418ccb:	xchg   esp,eax
  418ccc:	lea    ecx,[edx+edi*4+0x70]
  418cd0:	cmp    DWORD PTR [ebp+0x56511e03],ebp
  418cd6:	fucomi st,st(4)
  418cd8:	sbb    cl,bh
  418cda:	push   ebp
  418cdb:	std    
  418cdc:	(bad)  
  418cdd:	dec    edi
  418cde:	dec    eax
  418cdf:	dec    edx
  418ce0:	adc    esi,DWORD PTR [edx+0x4e4f01d3]
  418ce6:	inc    ecx
  418ce7:	pop    ebx
  418ce8:	jns    0x418c71
  418cea:	outs   dx,DWORD PTR ds:[esi]
  418ceb:	xchg   ebp,eax
  418cec:	and    eax,0xa13e1ee0
  418cf1:	call   0x88be248d
  418cf6:	pop    ds
  418cf7:	pushf  
  418cf8:	bound  eax,QWORD PTR [eax+esi*4+0x4648087]
  418cff:	pop    esp
  418d00:	inc    esi
  418d01:	cmp    DWORD PTR [esi+ebp*4-0x58],ebx
  418d05:	or     al,BYTE PTR [edx+edi*8-0x11167951]
  418d0c:	push   edi
  418d0d:	ins    DWORD PTR es:[edi],dx
  418d0e:	les    edi,FWORD PTR [ecx-0x107f92c7]
  418d14:	adc    esi,DWORD PTR [edx]
  418d16:	push   ebx
  418d17:	jmp    0x418ca6
  418d19:	xor    eax,0x763871ea
  418d1e:	push   ecx
  418d1f:	(bad)  
  418d20:	jne    0x418d2d
  418d22:	jno    0x418cf4
  418d24:	and    al,0xef
  418d26:	push   esi
  418d27:	jmp    DWORD PTR [edx+0x69]
  418d2a:	xor    edi,DWORD PTR [ecx-0x42e5d82b]
  418d30:	mov    cl,BYTE PTR [edi]
  418d32:	sub    edx,esi
  418d34:	fisub  DWORD PTR [ebp-0x6484936c]
  418d3a:	int3   
  418d3b:	add    eax,0xa546902e
  418d40:	push   ds
  418d41:	jne    0x418d4f
  418d43:	inc    BYTE PTR [ecx-0x51]
  418d46:	mov    ch,ch
  418d48:	jae    0x418dab
  418d4a:	in     al,dx
  418d4b:	cdq    
  418d4c:	xchg   ecx,edx
  418d4e:	or     al,0xb4
  418d50:	ds mov al,0x5b
  418d53:	nop
  418d54:	push   fs
  418d56:	push   ds
  418d57:	push   eax
  418d58:	out    dx,al
  418d59:	adc    DWORD PTR [ecx-0x10f35922],ebp
  418d5f:	das    
  418d60:	cmp    eax,DWORD PTR [edx+ecx*2-0x36]
  418d64:	mov    edx,0x8b15fb70
  418d69:	idiv   dh
  418d6b:	out    0x67,eax
  418d6d:	lahf   
  418d6e:	adc    ecx,DWORD PTR [esi-0x10]
  418d71:	out    dx,al
  418d72:	fbstp  TBYTE PTR [eax-0x58]
  418d75:	adc    dh,BYTE PTR [ecx+0x22bcc970]
  418d7b:	call   0xd74e8949
  418d80:	ins    BYTE PTR es:[edi],dx
  418d81:	push   eax
  418d82:	push   ds
  418d83:	sub    DWORD PTR [edi-0x63942fb6],0xffffffb1
  418d8a:	pop    edx
  418d8b:	inc    ecx
  418d8c:	shl    DWORD PTR [ecx+0x8],cl
  418d8f:	push   esp
  418d90:	mov    ecx,0x7ba396b1
  418d95:	mov    eax,ds:0xd9723374
  418d9b:	fadd   DWORD PTR [ebx+0x68]
  418d9e:	shl    DWORD PTR [ecx-0x65b669f],0x2b
  418da5:	mov    al,ds:0x2840c0dd
  418daa:	sub    DWORD PTR [edi-0x1884c184],ecx
  418db0:	lahf   
  418db1:	hlt    
  418db2:	push   edx
  418db3:	ror    DWORD PTR [eax-0x56be7620],cl
  418db9:	add    BYTE PTR [edi],dl
  418dbb:	or     esi,DWORD PTR [esi-0x44444007]
  418dc1:	test   al,0xd8
  418dc3:	cli    
  418dc4:	add    ah,al
  418dc6:	jge    0x418e0e
  418dc8:	int    0xcc
  418dca:	loope  0x418d54
  418dcc:	xor    ebp,ebp
  418dce:	jmp    0x418dd9
  418dd0:	jae    0x418df3
  418dd2:	xor    ch,BYTE PTR [edx-0x43e4dabf]
  418dd8:	jle    0x418e51
  418dda:	(bad)
  418dde:	mov    eax,0x83b1f3bb
  418de3:	in     al,dx
  418de4:	int    0x61
  418de6:	mov    edx,0xce10b2dc
  418deb:	repnz xchg ecx,eax
  418ded:	mov    bh,0xb2
  418def:	popf   
  418df0:	xchg   ebp,eax
  418df1:	or     DWORD PTR es:[ecx-0x28],ebx
  418df5:	repnz aam 0x89
  418df8:	test   DWORD PTR [edi],ebx
  418dfa:	or     al,0x96
  418dfc:	dec    edi
  418dfd:	imul   eax,DWORD PTR [esi-0x38],0x19acdf0b
  418e04:	xchg   edx,eax
  418e05:	jge    0x418e72
  418e07:	jg     0x418e52
  418e09:	pusha  
  418e0a:	adc    edi,DWORD PTR [ecx+eiz*4]
  418e0d:	push   esp
  418e0e:	retf   0x4294
  418e11:	fcomp  QWORD PTR [edi-0x11edfc47]
  418e17:	inc    edi
  418e18:	cld    
  418e19:	jb     0x418da9
  418e1b:	scas   eax,DWORD PTR es:[edi]
  418e1c:	pusha  
  418e1d:	dec    ecx
  418e1e:	enter  0x2629,0xc6
  418e22:	xlat   BYTE PTR ds:[ebx]
  418e23:	jecxz  0x418e1f
  418e25:	dec    ecx
  418e26:	sbb    ebx,edi
  418e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e29:	repnz sbb eax,0x1edbb359
  418e2f:	call   0x5fc17311
  418e34:	mov    ecx,0xe8e65816
  418e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e3a:	push   edx
  418e3b:	inc    eax
  418e3c:	jl     0x418e96
  418e3e:	ficomp DWORD PTR ds:0x510f0f48
  418e44:	stos   BYTE PTR es:[edi],al
  418e45:	xor    al,BYTE PTR [ebp-0x52090f1e]
  418e4b:	(bad)  
  418e4c:	cmc    
  418e4d:	(bad)  [esi+0x33]
  418e50:	jno    0x418df7
  418e52:	lahf   
  418e53:	call   FWORD PTR [ebp-0x6a]
  418e56:	pop    ecx
  418e57:	push   ds
  418e58:	jg     0x418e07
  418e5a:	and    bl,cl
  418e5c:	std    
  418e5d:	aas    
  418e5e:	dec    ecx
  418e5f:	ss jnp 0x418e32
  418e62:	loope  0x418eb9
  418e64:	ins    BYTE PTR es:[edi],dx
  418e65:	jb     0x418ebf
  418e67:	sbb    ah,BYTE PTR [edx]
  418e69:	fistp  QWORD PTR [ebx]
  418e6b:	std    
  418e6c:	add    al,0xf3
  418e6e:	dec    ebx
  418e6f:	or     bh,BYTE PTR [ecx]
  418e71:	cmp    BYTE PTR [ecx+0x42c3009b],0x68
  418e78:	retf   
  418e79:	bound  ebp,QWORD PTR [ecx]
  418e7b:	(bad)  
  418e7c:	aam    0x91
  418e7e:	cli    
  418e7f:	(bad)  
  418e80:	imul   esp,DWORD PTR [edi+edx*2+0x3f],0xd
  418e85:	stos   BYTE PTR es:[edi],al
  418e86:	mov    esp,0x80ada75c
  418e8b:	push   esi
  418e8c:	mov    ah,0x66
  418e8e:	jle    0x418f08
  418e90:	xchg   ecx,eax
  418e91:	cdq    
  418e92:	pushf  
  418e93:	fucomi st,st(7)
  418e95:	int3   
  418e96:	adc    DWORD PTR [ebp-0x4d25b5ee],ebp
  418e9c:	ins    DWORD PTR es:[edi],dx
  418e9d:	enter  0xb8f6,0xff
  418ea1:	inc    ecx
  418ea2:	call   0xa232:0x5ce657aa
  418ea9:	xchg   ebx,eax
  418eaa:	into   
  418eab:	outs   dx,DWORD PTR gs:[esi]
  418ead:	push   ss
  418eae:	pop    eax
  418eaf:	xor    eax,0xaca93470
  418eb4:	cmp    edx,eax
  418eb6:	outs   dx,DWORD PTR ds:[esi]
  418eb7:	add    al,BYTE PTR [edx+0x60]
  418eba:	mov    edi,DWORD PTR [ecx]
  418ebc:	push   ebx
  418ebd:	jmp    0x345d5248
  418ec2:	inc    ecx
  418ec3:	nop
  418ec4:	in     eax,dx
  418ec5:	mov    WORD PTR es:[edi],cs
  418ec8:	or     eax,0x7a3571cf
  418ecd:	inc    esi
  418ece:	pop    edi
  418ecf:	aam    0x9a
  418ed1:	cmp    BYTE PTR [esi-0x41a81ab2],ch
  418ed7:	enter  0x6cc1,0x72
  418edb:	test   al,0xbd
  418edd:	jg     0x418ef3
  418edf:	in     eax,0x61
  418ee1:	mov    ch,0xd8
  418ee3:	mov    esi,0xc72becf9
  418ee8:	mov    ecx,0xc4421da5
  418eed:	xor    BYTE PTR [ecx-0x4d],bh
  418ef0:	mov    ebp,0x24bd106
  418ef5:	and    eax,0xaad1321
  418efa:	dec    ecx
  418efb:	(bad)  
  418efc:	mov    ds:0x9c7c51db,al
  418f01:	(bad)  
  418f02:	scas   eax,DWORD PTR es:[edi]
  418f03:	sub    eax,0x931ab9d1
  418f08:	enter  0x537c,0xd1
  418f0c:	or     DWORD PTR [edx+0xb],ebx
  418f0f:	jle    0x418f10
  418f11:	das    
  418f12:	fcom   st(2)
  418f14:	fadd   DWORD PTR ds:0xc62a7998
  418f1a:	int3   
  418f1b:	fsubp  st(0),st
  418f1d:	std    
  418f1e:	retf   0x234c
  418f21:	push   cs
  418f22:	(bad)  
  418f23:	jmp    0x9a4924ee
  418f28:	idiv   BYTE PTR [esi+0xdc5b1c0]
  418f2e:	adc    DWORD PTR [ebx-0x69],ebx
  418f31:	lahf   
  418f32:	fs cmp dx,ax
  418f36:	mov    cl,0xf9
  418f38:	xchg   edx,eax
  418f39:	test   al,0xba
  418f3b:	mov    ecx,0x3d30b020
  418f40:	sbb    BYTE PTR [edi],dh
  418f42:	push   0x5323ae45
  418f47:	or     BYTE PTR [ebp+0x7c],al
  418f4a:	jp     0x418f35
  418f4c:	inc    edi
  418f4d:	popa   
  418f4e:	dec    ebp
  418f4f:	retf   0xedaa
  418f52:	sub    BYTE PTR ds:0xba252343,ah
  418f58:	sub    DWORD PTR [ebp+0x46],ebx
  418f5b:	add    eax,0x424c30b8
  418f60:	or     esi,DWORD PTR [edi+0x37e48b20]
  418f66:	adc    DWORD PTR [eax-0x6c],edx
  418f69:	fst    QWORD PTR [ecx+0x2d]
  418f6c:	jb     0x418f6a
  418f6e:	loopne 0x418f97
  418f70:	mov    ebx,0x3ab839a3
  418f75:	adc    dh,BYTE PTR [edi]
  418f77:	lahf   
  418f78:	cwde   
  418f79:	and    ecx,DWORD PTR [ecx+0x61]
  418f7c:	fcom   DWORD PTR [edi]
  418f7e:	push   esp
  418f7f:	es mov edx,0xed3e2f6c
  418f85:	add    DWORD PTR [edi],eax
  418f87:	xor    BYTE PTR [edi-0x3ddd1e02],cl
  418f8d:	mov    ebp,0xcf907b25
  418f92:	lds    esp,FWORD PTR [esi+0x43]
  418f95:	je     0x419013
  418f97:	jo     0x418fc6
  418f99:	dec    edi
  418f9a:	lds    ax,DWORD PTR [eax+0x1e]
  418f9e:	xor    al,0xff
  418fa0:	arpl   WORD PTR [ecx-0x36fa41ce],bx
  418fa6:	out    0xb8,al
  418fa8:	jmp    0x4d9f:0x88d76b06
  418faf:	mov    ch,0xdb
  418fb1:	ins    BYTE PTR es:[edi],dx
  418fb2:	jb     0x418f83
  418fb4:	ds (bad) 
  418fb6:	adc    al,0x59
  418fb8:	xchg   DWORD PTR [ebp+0x729d75d2],ebp
  418fbe:	mov    ch,0x1d
  418fc0:	iret   
  418fc1:	add    edi,DWORD PTR [edi-0x354e06fa]
  418fc7:	cmp    BYTE PTR [ecx+ebx*1],0x84
  418fcb:	push   eax
  418fcc:	dec    ebx
  418fcd:	or     dh,dh
  418fcf:	(bad)  
  418fd0:	jmp    0x418f7d
  418fd2:	fistp  WORD PTR [esi-0x7fbe7b5d]
  418fd8:	inc    esi
  418fd9:	mov    db7,edi
  418fdc:	div    BYTE PTR ds:0x2dd3105f
  418fe2:	add    DWORD PTR [ecx],ebp
  418fe4:	cs or  esi,ebp
  418fe7:	cli    
  418fe8:	sub    ebx,esi
  418fea:	rcl    BYTE PTR ds:0xc08fbc65,0xc6
  418ff1:	mov    eax,0xb7f55fec
  418ff6:	lea    esp,[eax+0x602c0fcb]
  418ffc:	les    esp,FWORD PTR [esp-0xe]
  419000:	push   edx
  419001:	pop    edi
  419002:	push   edi
  419003:	aaa    
  419004:	inc    ebx
  419005:	adc    ah,BYTE PTR [edi-0x5aacfde8]
  41900b:	scas   al,BYTE PTR es:[edi]
  41900c:	xchg   edx,eax
  41900d:	pop    es
  41900e:	xor    eax,0x77359cc2
  419013:	aam    0x8
  419015:	int    0x2d
  419017:	out    0x83,eax
  419019:	mov    cr5,esi
  41901c:	lods   eax,DWORD PTR ds:[esi]
  41901d:	mov    edx,0x2c10eb32
  419022:	cmp    al,0x38
  419024:	or     DWORD PTR [ebp+0x494c7237],eax
  41902a:	pop    ebx
  41902b:	xchg   ebx,eax
  41902c:	push   edi
  41902d:	ds cmc 
  41902f:	adc    eax,0xf9cfa659
  419034:	outs   dx,DWORD PTR ds:[esi]
  419035:	jae    0x41909a
  419037:	ret    
  419038:	push   cs
  419039:	out    dx,eax
  41903a:	or     ebx,DWORD PTR ds:0xc87826fd
  419040:	in     al,dx
  419041:	fsub   DWORD PTR gs:[ebp+edi*4-0x7]
  419046:	cmp    al,0xa4
  419048:	inc    esi
  419049:	mov    ss,ecx
  41904b:	pop    DWORD PTR [edi+0x32]
  41904e:	stos   DWORD PTR es:[edi],eax
  41904f:	sbb    ah,BYTE PTR [ebp+0x72]
  419052:	mov    al,ds:0x328e0281
  419057:	cs stc 
  419059:	scas   al,BYTE PTR es:[edi]
  41905a:	in     eax,dx
  41905b:	xchg   edi,eax
  41905c:	dec    esi
  41905d:	sub    dh,BYTE PTR [edi]
  41905f:	xchg   ebx,eax
  419060:	cmp    DWORD PTR [ecx-0x79],ebx
  419063:	popa   
  419064:	push   ebx
  419065:	test   al,0xd5
  419067:	movnti DWORD PTR [ebx+0x52ff8530],edi
  41906e:	aas    
  41906f:	cmp    al,0xab
  419071:	hlt    
  419072:	and    ebp,ecx
  419074:	cwde   
  419075:	(bad)  
  419076:	mov    ebx,0xf5ffa28c
  41907b:	nop
  41907c:	xchg   esi,eax
  41907d:	scas   al,BYTE PTR es:[edi]
  41907e:	xchg   edi,eax
  41907f:	xor    al,BYTE PTR [eax+0x6f]
  419082:	cmp    DWORD PTR [ebx],ecx
  419084:	sub    BYTE PTR [ebp-0x5f],0x6b
  419088:	adc    al,0xcf
  41908a:	jecxz  0x4190cd
  41908c:	cmp    dl,BYTE PTR [edi-0x70d6d7a5]
  419092:	sbb    al,ch
  419094:	inc    eax
  419095:	gs xchg edi,eax
  419097:	xchg   ebp,eax
  419098:	out    dx,eax
  419099:	cmp    eax,0xde318dbe
  41909e:	sub    ch,BYTE PTR [esi+0x357c7ef7]
  4190a4:	mul    dh
  4190a6:	mov    eax,ds:0x8a62a899
  4190ab:	jnp    0x4190f9
  4190ad:	dec    ebx
  4190ae:	jbe    0x419114
  4190b0:	pop    edi
  4190b1:	std    
  4190b2:	jle    0x41909a
  4190b4:	pop    eax
  4190b5:	jmp    DWORD PTR [ebx+ecx*4-0x3b]
  4190b9:	sbb    BYTE PTR [ebp-0x6598d9ed],bh
  4190bf:	and    eax,0x8c73cee7
  4190c4:	les    ecx,FWORD PTR [edi-0x5c]
  4190c7:	ja     0x41909a
  4190c9:	idiv   DWORD PTR [edx-0x1d9d0f8f]
  4190cf:	mov    bh,0xe
  4190d1:	pop    ds
  4190d2:	enter  0x79ef,0x30
  4190d6:	pusha  
  4190d7:	repz sub DWORD PTR [eax],esi
  4190da:	inc    DWORD PTR [ebp+0x680a82ff]
  4190e0:	xchg   edi,eax
  4190e1:	out    dx,al
  4190e2:	aad    0xe6
  4190e4:	and    dl,BYTE PTR [eax+eax*1]
  4190e7:	xsaveopt [edi-0x5d51dfcf]
  4190ee:	popa   
  4190ef:	stos   DWORD PTR es:[edi],eax
  4190f0:	sub    BYTE PTR [ebp+0x44],ch
  4190f3:	ret    
  4190f4:	outs   dx,BYTE PTR ds:[esi]
  4190f5:	(bad)  
  4190f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f7:	fisttp WORD PTR [edi+0x34]
  4190fa:	cmp    dh,BYTE PTR [ebp+ecx*1-0x3e]
  4190fe:	xor    eax,0x8e8b04c8
  419103:	dec    edi
  419104:	mov    ebx,0x6e27b97
  419109:	adc    al,0xd4
  41910b:	mov    edi,DWORD PTR [edi-0x247f3582]
  419111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419112:	test   DWORD PTR [ebx-0x54],edx
  419115:	sub    ah,BYTE PTR [ebp+0x68]
  419118:	rcr    ah,cl
  41911a:	ficom  WORD PTR [edx-0x72]
  41911d:	rol    esi,0x68
  419120:	xor    al,BYTE PTR [edi]
  419122:	pop    ebx
  419123:	inc    ecx
  419124:	stos   DWORD PTR es:[edi],eax
  419125:	test   DWORD PTR [ecx+0x25],edx
  419128:	pop    DWORD PTR [ebp+0x119ce28a]
  41912e:	cmc    
  41912f:	stos   DWORD PTR es:[edi],eax
  419130:	xor    esi,0x5e0db606
  419136:	adc    eax,0xe135a10f
  41913b:	lea    ebp,[eax+0x171a919b]
  419141:	inc    DWORD PTR [esp+edx*2-0x28]
  419145:	inc    eax
  419146:	inc    ebx
  419147:	xchg   esi,eax
  419148:	jns    0x4190ea
  41914a:	test   BYTE PTR ds:0x69f12b4b,dl
  419150:	sbb    DWORD PTR [edx+0x8],ebp
  419153:	mul    BYTE PTR [edi]
  419155:	dec    edi
  419156:	mov    eax,0xda5d27a1
  41915b:	push   edi
  41915c:	sahf   
  41915d:	aaa    
  41915e:	rcl    DWORD PTR [ebx+0x2a01c695],0x90
  419165:	bound  esp,QWORD PTR [ebx-0x1]
  419168:	dec    edi
  419169:	cmc    
  41916a:	push   cs
  41916b:	cmp    eax,0xb934bd8e
  419170:	xor    cx,WORD PTR [ebx-0x7d]
  419174:	push   es
  419175:	rcl    bh,cl
  419177:	sub    eax,0xdf7be80
  41917c:	or     al,0x6c
  41917e:	and    eax,0x5ecd3fd8
  419183:	push   ecx
  419184:	mov    ds:0xb666b293,al
  419189:	ds aaa 
  41918b:	inc    ebx
  41918c:	loope  0x419168
  41918e:	inc    ebx
  41918f:	push   esi
  419190:	sub    DWORD PTR [ecx-0x3c],esp
  419193:	jg     0x419214
  419195:	fidiv  WORD PTR [esi]
  419197:	adc    eax,0x2f85ded8
  41919c:	and    dh,0x53
  41919f:	dec    edx
  4191a0:	test   al,0x9a
  4191a2:	in     eax,dx
  4191a3:	sbb    eax,0xac5f7c3
  4191a8:	popf   
  4191a9:	jmp    0x4191ee
  4191ab:	jp     0x419176
  4191ad:	jno    0x419150
  4191af:	fsubp  st(5),st
  4191b1:	int3   
  4191b2:	retf   
  4191b3:	cmp    al,0x68
  4191b5:	add    al,0x19
  4191b7:	push   0x44378ab7
  4191bc:	or     al,0x20
  4191be:	cwde   
  4191bf:	xchg   DWORD PTR [edi+esi*2],ebp
  4191c2:	mov    al,0xab
  4191c4:	call   0x41da4641
  4191c9:	aam    0xc8
  4191cb:	ret    
  4191cc:	out    dx,eax
  4191cd:	(bad)  
  4191ce:	into   
  4191cf:	jge    0x41922a
  4191d1:	jns    0x419219
  4191d3:	int    0xf
  4191d5:	dec    ecx
  4191d6:	loope  0x4191cb
  4191d8:	inc    edx
  4191d9:	jno    0x41917d
  4191db:	mov    esi,0xc7bab490
  4191e0:	xchg   esp,eax
  4191e1:	pop    edx
  4191e2:	idiv   DWORD PTR [ebx]
  4191e4:	inc    esi
  4191e5:	test   DWORD PTR [esi],esi
  4191e7:	push   es
  4191e8:	shl    DWORD PTR [ecx+0x7d80d417],cl
  4191ee:	inc    edx
  4191ef:	push   esi
  4191f0:	(bad)  
  4191f1:	pop    edx
  4191f2:	jg     0x41925b
  4191f4:	(bad)  
  4191f5:	into   
  4191f6:	push   ebp
  4191f7:	test   BYTE PTR [edx-0x3fea9a9a],ch
  4191fd:	and    dl,dh
  4191ff:	out    0x91,eax
  419201:	lods   eax,DWORD PTR ds:[esi]
  419202:	pop    edx
  419203:	pop    es
  419204:	push   ds
  419205:	fmul   QWORD PTR [ebx-0x7184486]
  41920b:	xchg   esp,eax
  41920c:	sub    DWORD PTR cs:[esi],0xffffffeb
  419210:	mov    ecx,DWORD PTR gs:[ecx]
  419213:	call   0xc1e379d5
  419218:	inc    ebx
  419219:	shr    DWORD PTR [esi-0x3d4ff78],cl
  41921f:	push   cs
  419220:	adc    esp,esi
  419222:	inc    esi
  419223:	dec    esp
  419224:	lds    edx,FWORD PTR [edi-0x3b0ed49a]
  41922a:	xchg   ch,cl
  41922c:	sub    DWORD PTR [edi],edx
  41922e:	loopne 0x4191b3
  419230:	pop    ss
  419231:	dec    ebp
  419232:	test   al,0x8
  419234:	inc    edi
  419235:	push   ebp
  419236:	or     bl,cl
  419238:	adc    eax,0x4749ecac
  41923d:	and    ah,al
  41923f:	inc    esp
  419240:	push   edx
  419241:	aas    
  419242:	add    BYTE PTR [edx],cl
  419244:	aaa    
  419245:	mov    esi,0x7621652c
  41924a:	xor    DWORD PTR [ebx+0x75],ebx
  41924d:	inc    edx
  41924e:	push   esp
  41924f:	in     eax,0x6b
  419251:	cmp    eax,0x6f1d54b0
  419256:	push   ss
  419257:	out    0x8f,al
  419259:	pop    si
  41925b:	mov    esp,0x609b6820
  419260:	or     eax,0x7bbc1514
  419265:	and    dh,dh
  419267:	stc    
  419268:	ss mov dl,0x50
  41926b:	dec    ecx
  41926c:	aaa    
  41926d:	sti    
  41926e:	adc    al,dl
  419270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419271:	cs das 
  419273:	xor    al,0x39
  419275:	sbb    eax,0xe6951e52
  41927a:	xor    eax,0xbb6c9245
  41927f:	stos   BYTE PTR es:[edi],al
  419280:	aaa    
  419281:	pop    ecx
  419282:	pop    edi
  419283:	mov    ecx,0x527798cc
  419288:	sub    al,0x52
  41928a:	jno    0x4192b2
  41928c:	scas   al,BYTE PTR es:[edi]
  41928d:	pop    es
  41928e:	(bad)  
  41928f:	(bad)  
  419290:	fdiv   st(2),st
  419292:	inc    ecx
  419293:	jne    0x41925d
  419295:	xlat   BYTE PTR ds:[ebx]
  419296:	and    esi,0xffffffde
  419299:	aam    0x14
  41929b:	push   ds
  41929c:	mov    edx,0xc3f77d33
  4192a1:	out    dx,al
  4192a2:	fs mov dl,0xed
  4192a5:	mov    WORD PTR [edi+0x46582fa8],gs
  4192ab:	ret    0xbe6
  4192ae:	retf   
  4192af:	je     0x419232
  4192b1:	cwde   
  4192b2:	stos   DWORD PTR es:[edi],eax
  4192b3:	bswap  esp
  4192b5:	sub    ecx,ebp
  4192b7:	ins    DWORD PTR es:[edi],dx
  4192b8:	sub    BYTE PTR [ebp+0x5bd24cc8],0x9
  4192bf:	js     0x419325
  4192c1:	into   
  4192c2:	mov    ds,WORD PTR [eax+ebp*4+0x2b80c430]
  4192c9:	jns    0x4192bf
  4192cb:	cs sbb eax,0xe54b2fa2
  4192d1:	mov    ds:0xba162a0,eax
  4192d6:	(bad)  
  4192d7:	sti    
  4192d8:	(bad)
  4192db:	or     BYTE PTR [ebx],bh
  4192dd:	cmp    dh,BYTE PTR [edx]
  4192df:	add    eax,0x403ef1c3
  4192e4:	jmp    0x419298
  4192e6:	dec    esi
  4192e7:	clc    
  4192e8:	xchg   BYTE PTR [esp+ebp*2-0x5b17f644],ch
  4192ef:	adc    BYTE PTR [edx-0x2f],dl
  4192f2:	stc    
  4192f3:	test   al,0x70
  4192f5:	loope  0x4192e2
  4192f7:	pop    ebx
  4192f8:	(bad)  
  4192f9:	jge    0x41929d
  4192fb:	test   DWORD PTR [eax],ebx
  4192fd:	das    
  4192fe:	mov    ebp,0xdeeae93c
  419303:	and    ch,BYTE PTR [ebp-0xc]
  419306:	jg     0x41929c
  419308:	outs   dx,BYTE PTR ds:[esi]
  419309:	sub    eax,0x58dcb969
  41930e:	loopne 0x4192ff
  419310:	sub    al,0xab
  419312:	mov    ebx,ds
  419314:	in     eax,0x9c
  419316:	stc    
  419317:	aad    0x50
  419319:	cmc    
  41931a:	and    al,0x83
  41931c:	jo     0x41930e
  41931e:	add    DWORD PTR [ebx-0x724b8948],edi
  419324:	in     eax,dx
  419325:	and    al,0x77
  419327:	scas   eax,DWORD PTR es:[edi]
  419328:	mov    cl,0x8e
  41932a:	push   es
  41932b:	cmp    ecx,eax
  41932d:	inc    ebp
  41932e:	call   0x26493d3e
  419333:	jp     0x419301
  419335:	loope  0x4193ae
  419337:	test   al,0xcf
  419339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933a:	test   eax,0xc4794178
  41933f:	sub    BYTE PTR [eax+0x1c938f8e],cl
  419345:	lods   eax,DWORD PTR ds:[esi]
  419346:	mov    cl,0x8d
  419348:	pop    es
  419349:	cmp    eax,0xdb78849d
  41934e:	pop    ss
  41934f:	(bad)  
  419350:	sbb    esp,esi
  419352:	enter  0xdb83,0x6d
  419356:	fwait
  419357:	aaa    
  419358:	sbb    al,0x90
  41935a:	popa   
  41935b:	rcl    BYTE PTR [ebx-0x1d],1
  41935e:	icebp  
  41935f:	mov    edi,0x3f9d6e62
  419364:	daa    
  419365:	std    
  419366:	fst    QWORD PTR [esi-0x5dffadcd]
  41936c:	lock mov al,0x9e
  41936f:	and    BYTE PTR [ebx-0x44],al
  419372:	loopne 0x419315
  419374:	pop    ecx
  419375:	cmp    DWORD PTR [eax+0x4bfd8e59],ecx
  41937b:	(bad)  [ebp-0x64c4daa4]
  419381:	fld    TBYTE PTR [esi+edi*2+0x21c785aa]
  419388:	and    esi,ebx
  41938a:	jbe    0x4193ff
  41938c:	fdiv   DWORD PTR [eax+ecx*2]
  41938f:	imul   edx,DWORD PTR [eax-0xd],0xf1f01f1e
  419396:	adc    al,0xc4
  419398:	leave  
  419399:	mov    eax,ds:0x181f50b3
  41939e:	pop    esp
  41939f:	js     0x4193e3
  4193a1:	sbb    ah,BYTE PTR [edi-0xb1aa664]
  4193a7:	add    DWORD PTR [ecx-0x896208b],esp
  4193ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ae:	fyl2x  
  4193b0:	clc    
  4193b1:	jne    0x4193b2
  4193b3:	xor    bl,BYTE PTR [esi-0x58970a72]
  4193b9:	addr16 push esi
  4193bb:	and    eax,0x17e9309a
  4193c0:	ret    0xb1aa
  4193c3:	push   es
  4193c4:	add    dl,BYTE PTR [esi-0xc4bc4d6]
  4193ca:	sti    
  4193cb:	add    eax,0x2e6f7933
  4193d0:	pop    edx
  4193d1:	mov    al,ds:0x87e555f4
  4193d6:	xchg   esp,eax
  4193d7:	inc    ecx
  4193d8:	jecxz  0x4193b5
  4193da:	outs   dx,DWORD PTR ds:[esi]
  4193db:	lock inc edx
  4193dd:	xor    dl,BYTE PTR [esi-0x46]
  4193e0:	sbb    bh,BYTE PTR [eax]
  4193e2:	mov    esi,ecx
  4193e4:	mov    ch,0x2a
  4193e6:	push   ecx
  4193e7:	pop    ds
  4193e8:	xchg   ebp,eax
  4193e9:	dec    esi
  4193ea:	into   
  4193eb:	mov    edx,DWORD PTR [edi-0x7c]
  4193ee:	cld    
  4193ef:	pop    es
  4193f0:	aam    0x74
  4193f2:	aad    0x69
  4193f4:	dec    edi
  4193f5:	sub    DWORD PTR [edx-0x4de6532a],esi
  4193fb:	push   0xffffffc0
  4193fd:	pop    ds
  4193fe:	or     BYTE PTR [eax],ah
  419400:	fidivr DWORD PTR ds:0x87153e4b
  419406:	mov    eax,0x51cd2271
  41940b:	inc    ebp
  41940c:	cli    
  41940d:	jg     0x419474
  41940f:	gs into 
  419411:	add    DWORD PTR [ecx-0x4e98e5ab],edx
  419417:	pop    eax
  419418:	pop    ebx
  419419:	add    DWORD PTR ds:0xb53723d4,0x73
  419420:	ds dec ebx
  419422:	jnp    0x4193c4
  419424:	gs ins BYTE PTR es:[edi],dx
  419426:	and    ah,BYTE PTR [esi]
  419428:	shr    DWORD PTR [edi+esi*2-0x5e1cc3cd],0xa4
  419430:	cwde   
  419431:	les    ebp,FWORD PTR ss:[esi+0x189b7fb9]
  419438:	fidiv  DWORD PTR ds:0x883b9f1
  41943e:	jmp    0x4193c5
  419440:	in     eax,dx
  419441:	sub    bh,al
  419443:	jns    0x41943d
  419445:	(bad)  
  419446:	int3   
  419447:	js     0x419429
  419449:	mov    ah,0x4c
  41944b:	imul   BYTE PTR [eax]
  41944d:	xchg   DWORD PTR [esi-0x3f],esp
  419450:	inc    ecx
  419451:	aad    0x50
  419453:	jg     0x4193d8
  419455:	cdq    
  419456:	or     al,0x59
  419458:	push   0x2ddcd1dd
  41945d:	in     eax,0xec
  41945f:	les    esi,FWORD PTR [edi-0x46a2163b]
  419465:	ret    0xf8b0
  419468:	les    ecx,FWORD PTR [edx+0x7cd9204d]
  41946e:	fistp  DWORD PTR [edi-0x7a17f719]
  419474:	mov    cl,0x2d
  419476:	(bad)  
  419477:	pop    es
  419478:	and    eax,0x46539a4e
  41947d:	mov    ch,0x48
  41947f:	imul   eax,ecx,0x927e81bc
  419485:	dec    esi
  419486:	jae    0x419472
  419488:	inc    ah
  41948a:	and    bh,bh
  41948c:	leave  
  41948d:	outs   dx,BYTE PTR ds:[esi]
  41948e:	adc    esi,ebx
  419490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419491:	aaa    
  419492:	popa   
  419493:	xchg   esp,eax
  419494:	fidivr WORD PTR [ecx-0x61]
  419497:	push   0xd11238bd
  41949c:	(bad)  
  41949d:	fcomp  st(3)
  41949f:	mov    es,WORD PTR [edx-0x2e]
  4194a2:	popf   
  4194a3:	mov    ebp,0x4a3a4d4b
  4194a8:	lahf   
  4194a9:	jg     0x4194f3
  4194ab:	mov    ecx,0xec78baa0
  4194b0:	push   eax
  4194b1:	xchg   ebp,eax
  4194b2:	fdivr  st,st(4)
  4194b4:	in     al,0xa4
  4194b6:	pop    edi
  4194b7:	je     0x4194a9
  4194b9:	gs stos DWORD PTR es:[edi],eax
  4194bb:	repz and edx,DWORD PTR [eax+edi*4]
  4194bf:	jp     0x4194a0
  4194c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c2:	pop    eax
  4194c3:	adc    bl,BYTE PTR [edx+edi*1+0x747864e2]
  4194ca:	mov    eax,ds:0xa2852c1a
  4194cf:	or     DWORD PTR ds:0x8e7edba,0x43
  4194d6:	and    al,0x83
  4194d8:	add    al,0xb2
  4194da:	sub    al,0x80
  4194dc:	retf   0xa831
  4194df:	hlt    
  4194e0:	cmp    BYTE PTR [edx],bh
  4194e2:	dec    edx
  4194e3:	loope  0x419538
  4194e5:	xchg   edx,eax
  4194e6:	mov    dl,0xdf
  4194e8:	push   eax
  4194e9:	add    eax,0x4eba037e
  4194ee:	and    DWORD PTR [ebp+0x19],ecx
  4194f1:	pop    ds
  4194f2:	in     eax,dx
  4194f3:	mov    ch,0xaa
  4194f5:	jnp    0x4194fc
  4194f7:	cmc    
  4194f8:	mov    cl,0x8a
  4194fa:	dec    eax
  4194fb:	add    cl,BYTE PTR [esi]
  4194fd:	sbb    dh,BYTE PTR [esi-0x7e9d5248]
  419503:	mov    DWORD PTR [edi],edi
  419505:	adc    ah,BYTE PTR [esi+ebp*2]
  419508:	mov    ah,0xba
  41950a:	(bad)
  41950d:	push   ebp
  41950e:	outs   dx,DWORD PTR ds:[esi]
  41950f:	addr16 jg 0x419546
  419512:	(bad)  
  419513:	and    bl,dh
  419515:	and    bl,BYTE PTR [edi+0x2e43f37c]
  41951b:	mov    esp,0x42f0f7cb
  419520:	or     edi,DWORD PTR [eax]
  419522:	xchg   ebx,eax
  419523:	ja     0x41950f
  419525:	add    edi,ecx
  419527:	mov    esi,0xf7ed46db
  41952c:	mov    ecx,0x67c65340
  419531:	and    ebp,DWORD PTR ds:0x7088e1d8
  419537:	test   eax,0xab7da236
  41953c:	lock xor eax,DWORD PTR [ecx-0x51fbaddd]
  419543:	push   ebp
  419544:	jo     0x41950c
  419546:	push   0x47
  419548:	sahf   
  419549:	jmp    0x4195a0
  41954b:	fwait
  41954c:	xchg   ecx,eax
  41954d:	mov    ch,0x4a
  41954f:	ret    0x75bf
  419552:	jg     0x4194ec
  419554:	ret    0xd5f0
  419557:	pop    es
  419558:	inc    esp
  419559:	es push ds
  41955b:	sub    DWORD PTR [eax+0x7e821836],edi
  419561:	std    
  419562:	frstor [esi]
  419564:	inc    esi
  419565:	pop    esi
  419566:	dec    esi
  419567:	popa   
  419568:	in     eax,dx
  419569:	(bad)  
  41956a:	lods   eax,DWORD PTR ds:[esi]
  41956b:	loop   0x419565
  41956d:	lahf   
  41956e:	jno    0x4195e8
  419570:	leave  
  419571:	jmp    0x6cb4:0x95c545fc
  419578:	mov    dl,0x71
  41957a:	daa    
  41957b:	loopne 0x4195be
  41957d:	call   0x9d54:0x5c0f9496
  419584:	not    BYTE PTR [ebp+0x74177aa9]
  41958a:	cmp    DWORD PTR [edi+0x4c],esp
  41958d:	mov    edx,0xfc20542c
  419592:	pop    ss
  419593:	adc    al,0x57
  419595:	lds    ebx,FWORD PTR [esi-0x6c]
  419598:	cmp    eax,0x84356c85
  41959d:	jmp    0x419589
  41959f:	stc    
  4195a0:	and    DWORD PTR [ebp+ebp*1+0x6a323375],ebp
  4195a7:	pop    edx
  4195a8:	fld    QWORD PTR ds:0xa701bc5e
  4195ae:	xchg   edi,eax
  4195af:	int3   
  4195b0:	xchg   DWORD PTR [esi],edi
  4195b2:	in     eax,dx
  4195b3:	out    0x96,eax
  4195b5:	ret    0xa1e5
  4195b8:	icebp  
  4195b9:	xchg   edx,eax
  4195ba:	mov    edx,0xb7bdee9e
  4195bf:	in     al,0x7f
  4195c1:	push   ss
  4195c2:	pop    esi
  4195c3:	out    0x55,eax
  4195c5:	int3   
  4195c6:	sub    al,0xc5
  4195c8:	and    edi,esi
  4195ca:	and    al,0x95
  4195cc:	inc    esi
  4195cd:	mov    ecx,0xa0e8ab2b
  4195d2:	cmp    al,0xea
  4195d4:	fmul   DWORD PTR [edx]
  4195d6:	add    eax,0xf0c29c89
  4195db:	ret    0x921e
  4195de:	sub    al,0x96
  4195e0:	jno    0x419589
  4195e2:	inc    ecx
  4195e3:	call   0xe516:0xb7c459ed
  4195ea:	adc    al,0x90
  4195ec:	mov    al,ds:0xd01578b5
  4195f1:	jns    0x419615
  4195f3:	out    dx,al
  4195f4:	mov    eax,ds:0x395bf2ff
  4195f9:	ror    BYTE PTR [eax-0x69b4d779],0x9f
  419600:	cmp    ebx,DWORD PTR [ecx]
  419602:	out    dx,al
  419603:	sbb    al,0x9a
  419605:	mov    ds:0x269208b1,al
  41960a:	dec    ecx
  41960b:	mov    dh,0x25
  41960d:	pusha  
  41960e:	lahf   
  41960f:	icebp  
  419610:	or     al,BYTE PTR [eax-0xa]
  419613:	call   0x5e1ba541
  419618:	jae    0x41964f
  41961a:	jbe    0x419611
  41961c:	lods   eax,DWORD PTR ss:[esi]
  41961e:	add    edi,DWORD PTR [edi+0x8661ed]
  419624:	mov    eax,ds:0xec2e65ad
  419629:	push   ebp
  41962a:	nop
  41962b:	inc    si
  41962d:	rol    BYTE PTR [ecx-0x4e],cl
  419630:	xchg   DWORD PTR [ecx],ebp
  419632:	call   0x96ec:0x3a4f6b2e
  419639:	fidiv  WORD PTR [ecx+0xf]
  41963c:	dec    ebx
  41963d:	cmp    cl,BYTE PTR [ecx-0x1e]
  419640:	pusha  
  419641:	inc    edi
  419642:	int    0xc9
  419644:	test   eax,0xb4e7382e
  419649:	in     eax,0x1a
  41964b:	push   ds
  41964c:	shl    BYTE PTR [edx+0x5fbbe0eb],cl
  419652:	daa    
  419653:	adc    BYTE PTR [eax+edx*8],al
  419656:	fadd   QWORD PTR [esp+eax*4]
  419659:	inc    edi
  41965a:	inc    ebx
  41965b:	inc    ebp
  41965c:	ror    BYTE PTR [edi-0x5f],cl
  41965f:	lea    ebx,[ebp+0x76]
  419662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419663:	and    eax,edi
  419665:	pop    ds
  419666:	dec    ebp
  419667:	and    ebp,ebp
  419669:	xchg   esp,eax
  41966a:	jnp    0x41960c
  41966c:	ror    DWORD PTR [ebp-0x1e],1
  41966f:	ret    
  419670:	pop    edi
  419671:	in     eax,0x74
  419673:	rol    esp,cl
  419675:	scas   eax,DWORD PTR es:[edi]
  419676:	push   cs
  419677:	nop
  419678:	iret   
  419679:	mov    esi,0x4b2d7ad5
  41967e:	xor    eax,0x913f2892
  419683:	in     eax,dx
  419684:	aas    
  419685:	or     edi,DWORD PTR [edx+0x71]
  419688:	scas   eax,DWORD PTR es:[edi]
  419689:	cmp    ch,BYTE PTR [ecx+0x44]
  41968c:	push   es
  41968d:	xchg   ebp,eax
  41968e:	adc    BYTE PTR [ebx+0x36],ch
  419691:	jo     0x41961e
  419693:	jmp    0xafe:0x999cc255
  41969a:	jno    0x4196a0
  41969c:	lods   eax,DWORD PTR ds:[esi]
  41969d:	mov    dh,0xfc
  41969f:	cwde   
  4196a0:	adc    BYTE PTR [edx+edx*1+0x74],cl
  4196a4:	mov    ?,edi
  4196a6:	nop
  4196a7:	fdivr  st(1),st
  4196a9:	dec    esi
  4196aa:	out    dx,al
  4196ab:	out    0x5f,al
  4196ad:	mov    ds,WORD PTR [esi+eax*8-0x20]
  4196b1:	aaa    
  4196b2:	mov    edx,0x5c3466f5
  4196b7:	sti    
  4196b8:	xlat   BYTE PTR ds:[ebx]
  4196b9:	or     al,0x24
  4196bb:	or     al,0xac
  4196bd:	mov    al,0xc1
  4196bf:	jp     0x419680
  4196c1:	out    0x43,eax
  4196c3:	dec    ebp
  4196c4:	nop
  4196c5:	mov    dl,0x2f
  4196c7:	sbb    ah,bl
  4196c9:	sahf   
  4196ca:	pminsw mm2,QWORD PTR ds:0x83990ffd
  4196d1:	pop    ebp
  4196d2:	mov    bl,0xc5
  4196d4:	retf   
  4196d5:	mov    edx,0xf549887d
  4196da:	pop    ds
  4196db:	or     DWORD PTR [eax+0xa],esp
  4196de:	inc    edx
  4196df:	mov    edi,0x62a898b8
  4196e4:	push   ebx
  4196e5:	pop    edx
  4196e6:	mov    ebp,0x5f3e7f54
  4196eb:	ds dec eax
  4196ed:	outs   dx,BYTE PTR ds:[esi]
  4196ee:	fdivr  DWORD PTR [eax]
  4196f0:	mov    bh,0x65
  4196f2:	jg     0x419703
  4196f4:	jb     0x41971e
  4196f6:	mov    al,0x6f
  4196f8:	add    BYTE PTR [ebx+0x2b9b3114],dh
  4196fe:	int    0xe5
  419700:	mov    bh,0x37
  419702:	push   0x7e
  419704:	add    eax,0xbd2ac828
  419709:	mov    eax,DWORD PTR [ecx]
  41970b:	fcomp  DWORD PTR [esi-0x508ae7bd]
  419711:	stos   DWORD PTR es:[edi],eax
  419712:	iret   
  419713:	ins    BYTE PTR es:[edi],dx
  419714:	lods   al,BYTE PTR ds:[esi]
  419715:	mov    ecx,0x213c8170
  41971a:	pop    ebx
  41971b:	cld    
  41971c:	push   esi
  41971d:	fwait
  41971e:	rcl    BYTE PTR [ebx-0x26],1
  419721:	pusha  
  419722:	adc    ebx,DWORD PTR [edi+edx*1+0x34b03d9]
  419729:	fnsave [ebx+0x17]
  41972c:	jle    0x41978b
  41972e:	sub    DWORD PTR [ecx-0x5c],edx
  419731:	adc    ecx,DWORD PTR [ebp+0x5a]
  419734:	push   esp
  419735:	std    
  419736:	mov    cs,ecx
  419738:	pcmpeqw mm3,mm0
  41973b:	mov    ah,0x75
  41973d:	imul   eax,DWORD PTR [ebx+0x6e],0x334d9e19
  419744:	sub    ch,ah
  419746:	adc    eax,0xc1c99906
  41974b:	adc    edx,ecx
  41974d:	std    
  41974e:	in     al,0xac
  419750:	sbb    al,0xa0
  419752:	xlat   BYTE PTR ds:[ebx]
  419753:	jl     0x4196de
  419755:	adc    bh,bh
  419757:	leave  
  419758:	ins    DWORD PTR es:[edi],dx
  419759:	xchg   ebx,eax
  41975a:	sbb    eax,0x7dfee105
  41975f:	ficom  DWORD PTR [esi-0x23f12f6a]
  419765:	xchg   ebp,eax
  419766:	adc    BYTE PTR [ecx+ebx*8+0x52],0x85
  41976b:	and    BYTE PTR [edx-0x4d3cc62],0xac
  419772:	xor    dl,bl
  419774:	mov    esi,0x47ee70d4
  419779:	lods   eax,DWORD PTR ds:[esi]
  41977a:	xchg   esp,eax
  41977b:	fistp  WORD PTR [eax]
  41977d:	shr    eax,1
  41977f:	cmp    al,0xc1
  419781:	push   0x6
  419783:	mov    ebx,ecx
  419785:	inc    eax
  419786:	inc    esi
  419787:	and    esp,DWORD PTR [ebx+eiz*1]
  41978a:	push   0xb01d7099
  41978f:	sbb    al,0x3e
  419791:	or     DWORD PTR es:[eax],edx
  419794:	aam    0xc1
  419796:	(bad)  
  419797:	popa   
  419798:	dec    eax
  41979a:	adc    BYTE PTR [ecx+0x15aa14f9],dl
  4197a0:	add    bl,BYTE PTR [eax+0x2b]
  4197a3:	jg     0x41973b
  4197a5:	mul    BYTE PTR [edi]
  4197a7:	lahf   
  4197a8:	in     al,dx
  4197a9:	jecxz  0x4197c4
  4197ab:	mov    ah,0x12
  4197ad:	(bad)  
  4197ae:	jbe    0x4197e4
  4197b0:	sti    
  4197b1:	outs   dx,BYTE PTR ds:[esi]
  4197b2:	cmp    DWORD PTR [ecx-0x7f5b5093],eax
  4197b8:	and    BYTE PTR [edx-0x7e],dl
  4197bb:	push   edi
  4197bc:	jl     0x41976c
  4197be:	mov    edx,0xa970c069
  4197c3:	pop    esp
  4197c4:	or     al,0xd4
  4197c6:	popa   
  4197c7:	mov    eax,0x3b9e5807
  4197cc:	cmc    
  4197cd:	dec    eax
  4197ce:	mov    ?,eax
  4197d0:	dec    ecx
  4197d1:	mov    al,ds:0x7a7c7696
  4197d6:	dec    ebp
  4197d8:	out    dx,al
  4197d9:	mov    bl,0x87
  4197db:	push   ebx
  4197dc:	pop    ebx
  4197dd:	in     al,dx
  4197de:	and    cl,BYTE PTR [ecx]
  4197e0:	push   ds
  4197e1:	jp     0x41976b
  4197e3:	jl     0x419799
  4197e5:	cmp    BYTE PTR [edi+0xab5017c],ch
  4197eb:	pop    ebp
  4197ec:	xor    al,0x7a
  4197ee:	lods   eax,DWORD PTR ds:[esi]
  4197ef:	add    eax,0x4452dad0
  4197f4:	and    edi,DWORD PTR [ebx-0x1158b4d5]
  4197fa:	pop    ds
  4197fb:	repz int 0xd4
  4197fe:	hlt    
  4197ff:	enter  0xf40d,0x14
  419803:	mov    bl,0x42
  419805:	cli    
  419806:	outs   dx,BYTE PTR ds:[esi]
  419807:	add    eax,0xe0c887df
  41980c:	mov    esi,0x4367164c
  419811:	adc    esi,ebx
  419813:	sub    eax,0x2013596f
  419818:	cli    
  419819:	xchg   ebx,eax
  41981a:	or     al,0xbd
  41981c:	dec    esi
  41981d:	lds    esp,FWORD PTR [eax]
  41981f:	adc    dl,BYTE PTR [edx+0xf]
  419822:	ret    
  419823:	jg     0x419888
  419825:	add    eax,0x6281ce40
  41982a:	lahf   
  41982b:	dec    ecx
  41982c:	stc    
  41982d:	mov    ch,BYTE PTR [ecx+0x6bc7467b]
  419833:	mov    bh,0xb0
  419835:	pavgw  mm4,QWORD PTR [esi+ebx*8-0x77ca5e2a]
  41983d:	mov    esp,0x9b0afda2
  419842:	sbb    edi,DWORD PTR [eax+0x6f70a795]
  419848:	test   al,0x80
  41984a:	mov    BYTE PTR [esi-0x5c0f705],0x98
  419851:	push   esp
  419852:	xor    edi,DWORD PTR [ebx+ebp*1]
  419855:	pop    ebx
  419856:	nop
  419857:	cdq    
  419858:	mov    cl,0x83
  41985a:	push   ecx
  41985b:	rol    BYTE PTR ss:[edi-0x2c],cl
  41985f:	xor    al,0x1f
  419861:	scas   al,BYTE PTR es:[edi]
  419862:	addr16 jnp 0x41987a
  419865:	push   ecx
  419866:	xchg   edi,eax
  419867:	sbb    esp,ebx
  419869:	ds add al,0x5f
  41986c:	repz xchg edi,eax
  41986e:	imul   ebp,DWORD PTR [eax-0x2499823],0xca43d4cb
  419878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419879:	xor    al,0x3c
  41987b:	in     eax,dx
  41987c:	sbb    al,ch
  41987e:	mov    dh,BYTE PTR [eax+eiz*4-0x6577c0a3]
  419885:	mov    gs,WORD PTR ds:0x755f4422
  41988b:	inc    esi
  41988c:	sub    eax,edx
  41988e:	scas   eax,DWORD PTR es:[edi]
  41988f:	out    dx,eax
  419890:	xor    edx,DWORD PTR [ecx+esi*4]
  419893:	mov    eax,0x8c839b84
  419898:	xchg   edx,eax
  419899:	test   eax,0xc4d82249
  41989e:	ja     0x41988c
  4198a0:	sub    DWORD PTR [ebp+0x24],esp
  4198a3:	stos   DWORD PTR es:[edi],eax
  4198a4:	sbb    eax,0xdffb10be
  4198a9:	sub    bl,ch
  4198ab:	sbb    DWORD PTR [edi-0x74c852c8],ebp
  4198b1:	cmp    DWORD PTR [ecx-0x1bf4425b],0x788dbfc0
  4198bb:	or     al,0x0
  4198bd:	imul   DWORD PTR [eax+0x14]
  4198c0:	int    0x48
  4198c2:	into   
  4198c3:	daa    
  4198c4:	scas   al,BYTE PTR es:[edi]
  4198c5:	stc    
  4198c6:	iret   
  4198c7:	test   al,0xcf
  4198c9:	cld    
  4198ca:	dec    edx
  4198cb:	xchg   ebx,eax
  4198cc:	cmp    BYTE PTR [ecx+0x8962dae],al
  4198d2:	daa    
  4198d3:	or     eax,0x75b69d78
  4198d8:	je     0x419875
  4198da:	pushf  
  4198db:	dec    ebp
  4198dc:	addr16 pop ebx
  4198de:	and    al,0x18
  4198e0:	mov    ecx,0x271f0561
  4198e5:	shl    BYTE PTR [eax+eiz*4],1
  4198e8:	push   0xdc11aff9
  4198ed:	xor    DWORD PTR [ecx+0x19701276],edi
  4198f3:	jmp    0x828eb278
  4198f8:	or     BYTE PTR [edi-0x29f8d9ab],bh
  4198fe:	mov    esi,DWORD PTR [ebx-0x6533a15e]
  419904:	xor    ah,BYTE PTR [ecx-0x30]
  419907:	jo     0x41994d
  419909:	xchg   ebp,eax
  41990a:	or     BYTE PTR [ecx-0x1fa49333],dh
  419910:	popa   
  419911:	repnz and DWORD PTR ds:0xc566a953,ebp
  419918:	xlat   BYTE PTR ds:[ebx]
  419919:	test   al,0x38
  41991b:	adc    eax,DWORD PTR [edx+ebx*8-0x5d]
  41991f:	jbe    0x41993b
  419921:	shl    ch,cl
  419923:	sbb    bl,0x88
  419926:	loop   0x419960
  419928:	out    dx,eax
  419929:	add    DWORD PTR [edx],ecx
  41992b:	and    ebp,DWORD PTR [edx-0x10]
  41992e:	and    eax,0xaa52ef01
  419933:	sub    DWORD PTR [edi],eax
  419935:	and    ch,BYTE PTR [eax+ebx*4]
  419938:	mov    DWORD PTR [edx],edx
  41993a:	cwde   
  41993b:	rol    DWORD PTR [esi+0x7d],1
  41993e:	fucomip st,st(3)
  419940:	xor    ah,BYTE PTR [esi]
  419942:	inc    eax
  419943:	adc    DWORD PTR [ebx+0x4094e47a],edi
  419949:	rcl    eax,1
  41994b:	push   esi
  41994c:	dec    ecx
  41994d:	hlt    
  41994e:	mov    ecx,0x78faacb0
  419953:	adc    bl,dl
  419955:	mov    ch,0x8a
  419957:	(bad)  
  419959:	mov    cl,0x23
  41995b:	jmp    0x7722106d
  419960:	(bad)
  419964:	pop    eax
  419965:	ins    DWORD PTR es:[edi],dx
  419966:	xchg   ecx,eax
  419967:	retf   
  419968:	jae    0x41991e
  41996a:	dec    eax
  41996b:	rcl    DWORD PTR [esi],cl
  41996d:	ja     0x41993e
  41996f:	rcr    BYTE PTR [edi],1
  419971:	lds    ecx,FWORD PTR [eax]
  419973:	mov    esi,0xaa061337
  419978:	or     bh,BYTE PTR [ebx+eiz*1]
  41997b:	dec    edx
  41997c:	mov    ebp,0x8d3d18b7
  419981:	sbb    BYTE PTR [ecx],0x87
  419984:	fist   DWORD PTR [ebx+ecx*4+0x7618f67e]
  41998b:	xchg   ebp,eax
  41998c:	retf   
  41998d:	jge    0x41993b
  41998f:	je     0x41996f
  419991:	fmul   QWORD PTR [eax+edx*1]
  419994:	push   ecx
  419995:	push   edx
  419996:	xchg   ecx,eax
  419997:	outs   dx,DWORD PTR ds:[esi]
  419998:	pushf  
  419999:	sar    dl,0xf6
  41999c:	mov    bh,0x77
  41999e:	fistp  WORD PTR [ecx+0x7856a70]
  4199a4:	xchg   esp,eax
  4199a5:	(bad)  
  4199a6:	adc    BYTE PTR [esi],dh
  4199a8:	sar    DWORD PTR [edx+0x288529a7],cl
  4199ae:	push   0x7d
  4199b0:	mov    ebx,0x744f4842
  4199b5:	std    
  4199b6:	fcom   DWORD PTR [ebx-0x1f]
  4199b9:	mov    edi,0x95937666
  4199be:	in     eax,dx
  4199bf:	and    cl,ch
  4199c1:	fld    DWORD PTR [eax-0x5d]
  4199c4:	add    al,0xb6
  4199c6:	in     al,0xe
  4199c8:	jb     0x419a40
  4199ca:	leave  
  4199cb:	jmp    0x4199c9
  4199cd:	push   esp
  4199ce:	mov    DWORD PTR [ecx],ecx
  4199d0:	ror    DWORD PTR [ebx],cl
  4199d2:	retf   
  4199d3:	(bad)  
  4199d4:	xor    ch,BYTE PTR [eax+0x33]
  4199d7:	mov    ebp,0x84cfab20
  4199dd:	jmp    0x4199c5
  4199df:	lea    edi,[ecx+0x7d]
  4199e2:	jle    0x4199e3
  4199e4:	dec    edi
  4199e5:	fwait
  4199e6:	xor    edx,DWORD PTR [eax-0x3b]
  4199e9:	cwde   
  4199ea:	jg     0x41997b
  4199ec:	mov    al,ds:0x17793ab9
  4199f1:	mov    WORD PTR [edx+ecx*4],cs
  4199f4:	pop    edx
  4199f5:	repz adc al,BYTE PTR [edi-0x49342386]
  4199fc:	mov    ds,WORD PTR [ebp+0x7d8db137]
  419a02:	add    esp,DWORD PTR [ebp+0x50f8f7b9]
  419a08:	add    DWORD PTR [ebx-0x7c],ecx
  419a0b:	xor    dh,BYTE PTR [edi-0x11]
  419a0e:	fs jge 0x419a09
  419a11:	and    al,0x6d
  419a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a14:	adc    al,0x71
  419a16:	pop    es
  419a17:	jb     0x419a8c
  419a19:	lock sub al,0x2f
  419a1c:	xor    ch,0xd8
  419a1f:	inc    ebp
  419a20:	mov    WORD PTR [ebx],cs
  419a22:	(bad)  
  419a23:	xchg   ebp,eax
  419a24:	mov    eax,0x7576c737
  419a29:	cmp    BYTE PTR [ecx],dl
  419a2b:	rol    BYTE PTR [edi],1
  419a2d:	nop
  419a2e:	push   0xffffffb4
  419a30:	into   
  419a31:	mov    al,ds:0xc90ba3ea
  419a36:	scas   al,BYTE PTR es:[edi]
  419a37:	sbb    al,0x93
  419a39:	lods   al,BYTE PTR gs:[esi]
  419a3b:	or     eax,0x17b9ae64
  419a40:	cwde   
  419a41:	add    edi,DWORD PTR [ebp+ecx*1-0x377b4319]
  419a48:	test   esi,edi
  419a4a:	lea    esp,[eax+0x55]
  419a4d:	push   ebx
  419a4e:	xchg   edx,eax
  419a4f:	jmp    0xfb4a:0xab9f9756
  419a56:	mov    ebp,0xf70e9e1d
  419a5b:	mov    ebp,ecx
  419a5d:	jbe    0x419a9f
  419a5f:	(bad)  
  419a61:	nop
  419a62:	shl    ecx,cl
  419a64:	pop    ss
  419a65:	xor    ah,BYTE PTR [ebx+0x4]
  419a68:	popa   
  419a69:	punpckhbw mm6,QWORD PTR [ebp+0x1c]
  419a6d:	nop
  419a6e:	(bad)
  419a71:	push   edi
  419a72:	adc    eax,0xc56ffe6e
  419a77:	pop    ds
  419a78:	cs nop
  419a7a:	les    eax,FWORD PTR [edx]
  419a7c:	ret    0xb9d6
  419a7f:	sbb    DWORD PTR [ecx+0x2c4bb9fd],esp
  419a85:	leave  
  419a86:	sbb    eax,0xca91cd5a
  419a8b:	jmp    0x855c:0x5c8fb5d2
  419a92:	test   eax,0xa8fdf1a
  419a97:	pop    ss
  419a98:	arpl   WORD PTR [esi],cx
  419a9a:	mov    esi,0xa75941e9
  419a9f:	shl    DWORD PTR [ebx+0x40],0x25
  419aa3:	mov    BYTE PTR [eax],cl
  419aa5:	in     eax,dx
  419aa6:	scas   eax,DWORD PTR es:[edi]
  419aa7:	in     al,0x71
  419aa9:	call   FWORD PTR [ebp-0x51e77818]
  419aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ab0:	sub    cl,BYTE PTR [edx+0x16]
  419ab3:	or     edi,DWORD PTR [ecx+edi*1-0x46]
  419ab7:	(bad)  
  419ab8:	in     eax,0x15
  419aba:	hlt    
  419abb:	mov    al,ds:0xab0f955e
  419ac0:	sar    edi,0xcf
  419ac3:	xchg   ah,ah
  419ac5:	xchg   dh,bl
  419ac7:	adc    bh,BYTE PTR [esi-0x64]
  419aca:	mov    edx,0xdf543ae8
  419acf:	dec    esp
  419ad0:	bound  ebx,QWORD PTR [ebp+0x293f7f72]
  419ad6:	xlat   BYTE PTR cs:[ebx]
  419ad8:	ds mov bl,0x55
  419adb:	icebp  
  419adc:	addr16 pushf 
  419ade:	add    eax,DWORD PTR [ebp+0x2a]
  419ae1:	test   al,0x72
  419ae3:	jnp    0x419b3d
  419ae5:	pop    eax
  419ae6:	sbb    ebp,eax
  419ae8:	jg     0x419a77
  419aea:	shl    DWORD PTR [esp+ebx*8-0x2e684443],0xf8
  419af2:	sub    ebp,DWORD PTR [ecx-0x60]
  419af5:	mov    ecx,0x3388c4cd
  419afa:	push   ss
  419afb:	enter  0xee6a,0x34
  419aff:	es loop 0x419ac4
  419b02:	imul   esp,ecx,0xffffffed
  419b05:	das    
  419b06:	out    dx,eax
  419b07:	loop   0x419b73
  419b09:	and    DWORD PTR [edx+0xa],ebx
  419b0c:	adc    BYTE PTR [ecx+edi*8+0x68],0xc
  419b11:	push   eax
  419b12:	jnp    0x419b83
  419b14:	cmp    BYTE PTR [ecx-0x6e],0x19
  419b18:	xor    ebp,DWORD PTR [edx+0x41fe3069]
  419b1e:	call   0xde39:0xe8cab288
  419b25:	add    DWORD PTR [edi],ecx
  419b27:	ror    DWORD PTR [ebx-0x15],cl
  419b2a:	mov    ah,0xc7
  419b2c:	sbb    eax,0xc7e853f7
  419b31:	dec    edi
  419b32:	iret   
  419b33:	cmp    BYTE PTR [esi+0x107c305d],dl
  419b39:	mov    BYTE PTR cs:[ecx-0x7],al
  419b3d:	fcom   QWORD PTR [eax+edi*4+0x45]
  419b41:	(bad)  
  419b42:	(bad)  
  419b43:	loopne 0x419ba1
  419b45:	clc    
  419b46:	inc    edi
  419b47:	out    0x7d,al
  419b49:	and    cl,BYTE PTR [edx+esi*2]
  419b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4d:	sbb    al,0x94
  419b4f:	push   ecx
  419b50:	test   DWORD PTR [eax],ecx
  419b52:	inc    edi
  419b53:	push   edi
  419b54:	xchg   esi,eax
  419b55:	sbb    cl,cl
  419b57:	inc    edx
  419b58:	stos   DWORD PTR es:[edi],eax
  419b59:	jns    0x419b76
  419b5b:	mov    edx,eax
  419b5d:	lods   eax,DWORD PTR ds:[esi]
  419b5e:	stc    
  419b5f:	pop    ebp
  419b60:	scas   al,BYTE PTR es:[edi]
  419b61:	daa    
  419b62:	xlat   BYTE PTR ds:[ebx]
  419b63:	(bad)  
  419b64:	pop    ecx
  419b65:	adc    BYTE PTR [eax+0x24],0x44
  419b69:	dec    ebx
  419b6a:	fmul   DWORD PTR es:[ecx]
  419b6d:	call   0x9839c7de
  419b72:	mov    DWORD PTR [ecx-0x66d5d477],ecx
  419b78:	sahf   
  419b79:	test   ebx,eax
  419b7b:	test   bh,ch
  419b7d:	sub    ecx,DWORD PTR [edx+0x6d]
  419b80:	xchg   BYTE PTR [ecx],al
  419b82:	in     al,0x7e
  419b84:	or     BYTE PTR [edx],dh
  419b86:	pop    esp
  419b87:	jp     0x419b73
  419b89:	and    ebp,ecx
  419b8b:	cmc    
  419b8c:	(bad)  
  419b8d:	fdivr  st(5),st
  419b8f:	inc    eax
  419b90:	test   eax,0x93ed31ab
  419b95:	test   BYTE PTR [edi+eiz*4-0x40],bh
  419b99:	jo     0x419bb9
  419b9b:	div    BYTE PTR [ebx]
  419b9d:	push   eax
  419b9e:	dec    edi
  419b9f:	push   ebx
  419ba0:	(bad)  
  419ba1:	loop   0x419bad
  419ba3:	frstor [edx+0x6e]
  419ba6:	aas    
  419ba7:	or     BYTE PTR [eax],bh
  419ba9:	stos   BYTE PTR es:[edi],al
  419baa:	mov    esp,0x5e5f4214
  419baf:	test   BYTE PTR ds:0x4364be2a,0xa
  419bb6:	cmc    
  419bb7:	aaa    
  419bb8:	xor    DWORD PTR [ebx-0x39],0xffffffb2
  419bbc:	lahf   
  419bbd:	cwde   
  419bbe:	cmp    al,0x81
  419bc0:	ja     0x419bfc
  419bc2:	sbb    eax,0x4388aaa7
  419bc7:	push   ecx
  419bc8:	push   0xffffffc9
  419bca:	dec    edx
  419bcb:	neg    BYTE PTR [edx+0x76]
  419bce:	pusha  
  419bcf:	retf   0xf0c4
  419bd2:	push   esp
  419bd3:	jmp    eax
  419bd5:	popa   
  419bd6:	xor    BYTE PTR [eax],al
  419bd8:	push   ecx
  419bd9:	sar    DWORD PTR [eax-0x14871edd],0xd
  419be0:	cld    
  419be1:	or     cl,BYTE PTR [esi+0x2dac28d2]
  419be7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419be9:	inc    edx
  419bea:	not    DWORD PTR [ebx]
  419bec:	mov    edx,0xf67cc01c
  419bf1:	add    BYTE PTR [esi+0x6e5ea8f6],dl
  419bf7:	mov    ds:0x4ae1f9e,al
  419bfc:	jle    0x419bb5
  419bfe:	jg     0x419c73
  419c00:	add    al,0xa0
  419c02:	and    BYTE PTR [edi-0x2c0b191],cl
  419c08:	arpl   WORD PTR [eax+0x6f53d146],ax
  419c0e:	std    
  419c0f:	hlt    
  419c10:	xchg   DWORD PTR [edi+0x50],ecx
  419c13:	mov    BYTE PTR [ecx+0x7ac83e2e],bl
  419c19:	bound  esp,QWORD PTR [ecx]
  419c1b:	jmp    0x16b120fe
  419c20:	dec    edi
  419c21:	sbb    cl,bl
  419c23:	xor    DWORD PTR [esi+0x22],esi
  419c26:	out    0x4c,eax
  419c28:	push   0xacccac0f
  419c2d:	adc    eax,0xbca73c42
  419c32:	adc    DWORD PTR [ecx+0x7d],ebp
  419c35:	mov    BYTE PTR [ecx+0xaf0255],ah
  419c3b:	mov    al,0x4c
  419c3d:	jmp    0x60ee:0x7127ab44
  419c44:	xor    dh,BYTE PTR [esi]
  419c46:	iret   
  419c47:	xchg   esi,eax
  419c48:	repz sahf 
  419c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4b:	in     eax,0xdf
  419c4d:	mov    WORD PTR [ebx*8-0x61b430d0],gs
  419c54:	fild   QWORD PTR [edi+eax*1]
  419c57:	std    
  419c58:	not    edx
  419c5a:	int    0x94
  419c5c:	out    0xb,eax
  419c5e:	xchg   ecx,eax
  419c5f:	add    bh,BYTE PTR [edi]
  419c61:	stos   DWORD PTR es:[edi],eax
  419c62:	jnp    0x419c64
  419c64:	xchg   esi,eax
  419c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c66:	fbstp  TBYTE PTR [esi-0x1b]
  419c69:	retf   
  419c6a:	pop    edx
  419c6b:	jno    0x419c6b
  419c6d:	fwait
  419c6e:	pop    esi
  419c6f:	mov    eax,ds:0x40f028e3
  419c74:	hlt    
  419c75:	js     0x419ccb
  419c77:	push   cs
  419c78:	adc    ebx,DWORD PTR [esi+0x7318f52b]
  419c7e:	push   edi
  419c7f:	mov    ds:0x5f445379,eax
  419c84:	pop    eax
  419c85:	dec    edi
  419c86:	sbb    BYTE PTR [edx-0x59],dh
  419c89:	in     eax,0x43
  419c8b:	xchg   ecx,esp
  419c8d:	dec    ebx
  419c8e:	iret   
  419c8f:	je     0x419ca1
  419c91:	mov    ?,WORD PTR [eax]
  419c93:	and    BYTE PTR [edi+0x44f1e6d7],dh
  419c99:	lods   al,BYTE PTR ds:[esi]
  419c9a:	aam    0x47
  419c9c:	adc    BYTE PTR [ebx-0x6f],bl
  419c9f:	mov    ds:0xd616c1df,eax
  419ca4:	mov    ecx,0x3a23c
  419ca9:	pop    es
  419caa:	test   eax,0x32378ffb
  419caf:	mov    al,ds:0xdfabdb34
  419cb4:	fwait
  419cb5:	sub    eax,0x2d855d2a
  419cba:	cmp    eax,0xed1b6704
  419cbf:	retf   0x82e6
  419cc2:	mov    ds:0x7dbc2032,eax
  419cc7:	popa   
  419cc8:	gs push edi
  419cca:	mov    bh,0xce
  419ccc:	out    0x59,eax
  419cce:	loopne 0x419d30
  419cd0:	mov    al,0xf1
  419cd2:	pop    edi
  419cd3:	inc    edx
  419cd4:	xor    DWORD PTR [edx-0x3fe43e23],ecx
  419cda:	jecxz  0x419cad
  419cdc:	cwde   
  419cdd:	push   ds
  419cde:	pop    edx
  419cdf:	repnz xor eax,0x33166b43
  419ce5:	mov    bl,BYTE PTR [esi]
  419ce7:	pop    edx
  419ce8:	sti    
  419ce9:	in     eax,dx
  419cea:	mov    ebx,edx
  419cec:	inc    ebp
  419ced:	sbb    BYTE PTR [edx],ch
  419cef:	mov    eax,0xbd55037a
  419cf4:	and    BYTE PTR [eax-0x52],0x7a
  419cf8:	xchg   esi,eax
  419cf9:	jns    0x419d51
  419cfb:	loope  0x419d60
  419cfd:	xchg   ebp,eax
  419cfe:	push   0xeb15c033
  419d03:	aaa    
  419d04:	jmp    0xa867:0x494af9e6
  419d0b:	mov    ebx,0xcfb7f194
  419d10:	mov    edi,0xe3269231
  419d15:	fld    TBYTE PTR [ecx-0x41]
  419d18:	jbe    0x419d34
  419d1a:	leave  
  419d1b:	xchg   edx,eax
  419d1c:	jge    0x419cbd
  419d1e:	dec    ecx
  419d1f:	pop    ebx
  419d20:	push   eax
  419d21:	fxtract 
  419d23:	push   esp
  419d24:	jge    0x419d40
  419d26:	sbb    ebx,DWORD PTR [eax-0x3d]
  419d29:	add    ah,dh
  419d2b:	fwait
  419d2c:	push   edx
  419d2d:	jle    0x419d95
  419d2f:	dec    edi
  419d30:	es js  0x419d7d
  419d33:	(bad)  
  419d34:	pop    ecx
  419d35:	test   al,0x66
  419d37:	jnp    0x419cf8
  419d39:	sbb    al,0xeb
  419d3b:	fcomp  QWORD PTR [ecx+0x626ae772]
  419d41:	push   es
  419d42:	add    DWORD PTR [ecx-0x6a],esp
  419d45:	test   eax,0x862f0247
  419d4a:	xchg   esi,eax
  419d4b:	and    esp,DWORD PTR [eax-0x78]
  419d4e:	push   ecx
  419d4f:	mov    ebp,DWORD PTR [eax-0x69b2dc1f]
  419d55:	lahf   
  419d56:	xor    al,0xb1
  419d58:	lock in al,0xcd
  419d5b:	xor    DWORD PTR [esi-0x5233d4e9],edx
  419d61:	sub    eax,0x1e827a7
  419d66:	mov    ah,0xac
  419d68:	das    
  419d69:	sbb    al,0xec
  419d6b:	mov    ebx,0xa36dbc91
  419d70:	pop    esp
  419d71:	cs inc ebp
  419d73:	push   ecx
  419d74:	add    dh,al
  419d76:	mov    bl,0xc6
  419d78:	ja     0x419d38
  419d7a:	dec    ebp
  419d7b:	pusha  
  419d7c:	stos   BYTE PTR es:[edi],al
  419d7d:	mov    ss,WORD PTR [ebx-0x533fd8df]
  419d83:	shr    edi,cl
  419d85:	(bad)  
  419d86:	stc    
  419d87:	loope  0x419d65
  419d89:	mov    edx,0x5705b45d
  419d8e:	jmp    0xa1d8:0x1abbf3ca
  419d95:	push   es
  419d96:	imul   ecx,DWORD PTR [ebx+0x12],0x8546587
  419d9d:	mov    gs,WORD PTR [edx]
  419d9f:	mov    edx,0xeb893e66
  419da4:	sti    
  419da5:	cmp    ecx,DWORD PTR [eax-0x24b64215]
  419dab:	out    dx,eax
  419dac:	sahf   
  419dad:	jbe    0x419d56
  419daf:	imul   esi,eax,0xf7004c9c
  419db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db6:	mov    edi,0x1692303
  419dbb:	add    BYTE PTR [edi-0x2b3b6855],bl
  419dc1:	std    
  419dc2:	xor    esp,ebx
  419dc4:	out    dx,al
  419dc5:	xor    BYTE PTR ds:0xaed6489a,dl
  419dcb:	cmp    edi,DWORD PTR [edi+0x43]
  419dce:	mov    eax,0x4ebad1fb
  419dd3:	mov    cs,WORD PTR [esi+0x28]
  419dd6:	cdq    
  419dd7:	scas   eax,DWORD PTR es:[edi]
  419dd8:	ja     0x419d90
  419dda:	into   
  419ddb:	or     ecx,DWORD PTR ss:0x7bc2663
  419de2:	data16 and al,0x64
  419de5:	pop    esi
  419de6:	int3   
  419de7:	cmc    
  419de8:	jmp    0x419e69
  419dea:	pushf  
  419deb:	(bad)  
  419dec:	stos   BYTE PTR es:[edi],al
  419ded:	rcr    BYTE PTR [esi+0x6],cl
  419df0:	(bad)  
  419df1:	mov    al,0x87
  419df3:	aam    0x5a
  419df5:	scas   eax,DWORD PTR es:[edi]
  419df6:	into   
  419df7:	cld    
  419df8:	sub    cl,ah
  419dfa:	add    ebx,DWORD PTR [edi-0x12]
  419dfd:	pushf  
  419dfe:	cdq    
  419dff:	add    ecx,DWORD PTR [ecx+0x20]
  419e02:	dec    edi
  419e03:	adc    al,0x6b
  419e05:	cmp    al,0x89
  419e07:	push   0x15
  419e09:	xchg   esp,eax
  419e0a:	xchg   edx,eax
  419e0b:	daa    
  419e0c:	push   es
  419e0d:	push   0x602c7d7
  419e12:	jmp    0x419da7
  419e14:	push   ebp
  419e15:	cmp    bl,BYTE PTR [ebp+0x7b98b672]
  419e1b:	add    edx,ebx
  419e1d:	xchg   ebx,eax
  419e1e:	(bad)  
  419e1f:	enter  0xbb10,0x8c
  419e23:	cwde   
  419e24:	jmp    0x4c2ed27b
  419e29:	test   DWORD PTR [ebx+0x55],0x507ca7e3
  419e30:	int3   
  419e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e32:	or     DWORD PTR ds:0x7a0809ac,esi
  419e38:	xor    DWORD PTR [eax-0x1e],0xffffffe8
  419e3c:	outs   dx,BYTE PTR ds:[esi]
  419e3d:	or     BYTE PTR [edx+0x4e5b5fe3],dh
  419e43:	mov    DWORD PTR [edi+0x51596d69],esi
  419e49:	xor    al,0x1
  419e4b:	pop    ebx
  419e4c:	retf   0xbdcf
  419e4f:	sub    bh,BYTE PTR gs:[edi+0x22ad87b1]
  419e56:	retf   
  419e57:	dec    ebp
  419e58:	mov    eax,0x9b43265c
  419e5d:	stos   BYTE PTR es:[edi],al
  419e5e:	and    edx,ebp
  419e60:	shl    DWORD PTR ss:[ecx],1
  419e63:	xor    cl,bl
  419e65:	jne    0x419e1d
  419e67:	and    eax,0xb2b0793c
  419e6c:	add    BYTE PTR cs:[ecx+0x5f],ch
  419e70:	adc    BYTE PTR [ebp+edx*2-0x11],bh
  419e74:	push   edx
  419e75:	xor    eax,0x582a52c1
  419e7a:	pusha  
  419e7b:	jmp    0x419e41
  419e7d:	retf   0xd42c
  419e80:	push   es
  419e81:	out    0x68,eax
  419e83:	sub    bh,bh
  419e85:	xchg   ebp,eax
  419e86:	fisub  WORD PTR [edi+0x7f]
  419e89:	stos   DWORD PTR es:[edi],eax
  419e8a:	xchg   ebp,eax
  419e8b:	push   edx
  419e8c:	jge    0x419eb4
  419e8e:	fsub   QWORD PTR [edi+0x5b]
  419e91:	les    edx,FWORD PTR [ecx+ebp*4+0x35]
  419e95:	pushf  
  419e96:	imul   esp,DWORD PTR [ecx],0xd3fd2824
  419e9c:	mov    ebx,0x3b72ec62
  419ea1:	out    dx,eax
  419ea2:	add    bh,BYTE PTR [ecx-0x767d1935]
  419ea8:	(bad)  
  419eaa:	mov    ch,0xb0
  419eac:	lahf   
  419ead:	and    BYTE PTR ds:0x439ab4f6,bl
  419eb3:	int3   
  419eb4:	inc    edi
  419eb5:	jg     0x419f0d
  419eb7:	dec    esp
  419eb8:	cli    
  419eb9:	mov    ss,WORD PTR [edx-0x313bd479]
  419ebf:	mov    ?,WORD PTR [esi-0xf9a920b]
  419ec5:	adc    eax,0x950a6486
  419eca:	call   0x980ed06b
  419ecf:	rol    DWORD PTR [esi+0x27b3b257],1
  419ed5:	and    DWORD PTR [edx+0x4cd6848a],esi
  419edb:	retf   0xce0
  419ede:	push   esp
  419edf:	arpl   WORD PTR [ebx],bp
  419ee1:	and    BYTE PTR [ebp+0x74776b70],al
  419ee7:	je     0x419ead
  419ee9:	stos   BYTE PTR es:[edi],al
  419eea:	mov    ch,bl
  419eec:	aad    0x32
  419eee:	pop    esp
  419eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef0:	mov    esi,0x629b6c6a
  419ef5:	push   es
  419ef6:	dec    edi
  419ef7:	mov    ch,0x9a
  419ef9:	mov    edi,0x8fa7c7b4
  419efe:	cmc    
  419eff:	lahf   
  419f00:	mov    ecx,0x275be8d5
  419f05:	pop    edi
  419f06:	aas    
  419f07:	mov    cl,BYTE PTR [edx]
  419f09:	or     edx,DWORD PTR [edx-0x546f8875]
  419f0f:	mov    eax,0xf41d8d1d
  419f14:	out    dx,eax
  419f15:	mov    esi,0xd2a1fa8f
  419f1a:	or     ecx,DWORD PTR [edx+0x143f14a8]
  419f20:	rol    BYTE PTR [edx],0x29
  419f23:	leave  
  419f24:	inc    esp
  419f25:	xchg   esi,eax
  419f26:	stc    
  419f27:	ins    BYTE PTR es:[edi],dx
  419f28:	or     esi,DWORD PTR [ebx-0xf7544a]
  419f2e:	pusha  
  419f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f30:	adc    cl,BYTE PTR [edi-0x13758220]
  419f36:	pop    ss
  419f37:	loopne 0x419ef0
  419f39:	es push ds
  419f3b:	loop   0x419f9b
  419f3d:	hlt    
  419f3e:	adc    eax,eax
  419f40:	hlt    
  419f41:	div    DWORD PTR [eax+edx*2+0x5]
  419f45:	or     al,0xf3
  419f47:	sbb    DWORD PTR [eax-0x4ea63d74],ebp
  419f4d:	add    esi,0x806b676c
  419f53:	xchg   esi,eax
  419f54:	mov    ecx,0x9c570ced
  419f59:	popa   
  419f5a:	aam    0xea
  419f5c:	popa   
  419f5d:	cwde   
  419f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5f:	pop    ecx
  419f60:	jne    0x419f13
  419f62:	das    
  419f63:	push   eax
  419f64:	push   ds
  419f65:	out    dx,al
  419f66:	sbb    ecx,ecx
  419f68:	(bad)  
  419f69:	mov    ecx,0xd214b8f4
  419f6e:	das    
  419f6f:	and    BYTE PTR [edx+edi*2+0xe],ch
  419f73:	mov    esp,0x22bf5984
  419f78:	pop    es
  419f79:	xor    BYTE PTR [ecx],al
  419f7b:	dec    edi
  419f7c:	icebp  
  419f7d:	aas    
  419f7e:	xor    DWORD PTR [esi+0x2d],esi
  419f81:	mov    bh,0x9
  419f83:	lods   eax,DWORD PTR ds:[esi]
  419f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f85:	cmc    
  419f86:	xchg   ecx,eax
  419f87:	and    BYTE PTR [ebx],ch
  419f89:	pop    ebx
  419f8a:	in     al,0xbc
  419f8c:	mov    eax,0xf50a91cf
  419f91:	sbb    esp,edi
  419f93:	cmc    
  419f94:	nop
  419f95:	mov    dl,BYTE PTR [ebx]
  419f97:	sbb    al,0xf7
  419f99:	in     al,0x92
  419f9b:	mov    al,0x7b
  419f9d:	xor    ecx,edi
  419f9f:	mov    ebx,0x76c4c5b5
  419fa4:	pop    edx
  419fa5:	cmp    al,0x19
  419fa7:	push   0xfffffff4
  419fa9:	(bad)  
  419faa:	lea    edi,[edi]
  419fac:	push   edx
  419fad:	fdiv   QWORD PTR [ecx+0x6]
  419fb0:	pop    ebx
  419fb1:	retf   
  419fb2:	mov    edx,0x9a27381b
  419fb7:	cmp    eax,0x6f78fcfa
  419fbc:	xchg   ebp,eax
  419fbd:	jb     0x419fa2
  419fbf:	dec    ebx
  419fc0:	ins    BYTE PTR es:[edi],dx
  419fc1:	and    BYTE PTR ds:0xbadff7ad,bh
  419fc7:	add    eax,0xae0b98f4
  419fcc:	pop    es
  419fcd:	xor    DWORD PTR [ecx+eax*2-0x67a30b2f],edi
  419fd4:	adc    BYTE PTR ds:[esi+0x7e3bb753],ah
  419fdb:	push   es
  419fdc:	sbb    ebp,DWORD PTR [edx]
  419fde:	sbb    al,0x9b
  419fe0:	mov    ds:0xb4d49501,eax
  419fe5:	xchg   edi,eax
  419fe6:	in     eax,0xb5
  419fe8:	pusha  
  419fe9:	mov    eax,0x95b22446
  419fee:	jb     0x41a05d
  419ff0:	pop    ebx
  419ff1:	je     0x419f75
  419ff3:	lods   al,BYTE PTR ds:[esi]
  419ff4:	dec    eax
  419ff5:	dec    eax
  419ff6:	sub    DWORD PTR [edx-0x14a3e2ca],0x213da395
  41a000:	xor    edi,DWORD PTR ss:[ecx+0x5e10ac22]
  41a007:	lock sub ecx,esp
  41a00a:	add    BYTE PTR [esi+0x71],ch
  41a00d:	cdq    
  41a00e:	retf   
  41a00f:	adc    bl,ch
  41a011:	test   ebp,edx
  41a013:	mov    al,0xf3
  41a015:	shr    DWORD PTR [ebx-0x22],cl
  41a018:	jnp    0x41a03d
  41a01a:	push   ecx
  41a01b:	pop    es
  41a01c:	inc    eax
  41a01d:	popf   
  41a01e:	cmp    DWORD PTR [ecx+eax*1+0x350bdf18],0x68a52c92
  41a029:	(bad)  
  41a02a:	pop    ecx
  41a02b:	ins    BYTE PTR es:[edi],dx
  41a02c:	aas    
  41a02d:	ror    DWORD PTR [edi-0xa7d27b0],0xcc
  41a034:	push   cs
  41a035:	mov    al,0x28
  41a037:	cli    
  41a038:	jle    0x41a0b1
  41a03a:	mov    edi,0xa2357507
  41a03f:	leave  
  41a040:	adc    DWORD PTR [ecx+0x104bd523],ebp
  41a046:	sbb    dh,ch
  41a048:	xchg   esp,eax
  41a049:	sub    edi,DWORD PTR ds:0xa18e7d3e
  41a04f:	and    al,0x10
  41a051:	mov    WORD PTR [eax],ds
  41a053:	pusha  
  41a054:	ss addr16 test eax,0x4990439c
  41a05b:	jne    0x41a0b9
  41a05d:	push   edx
  41a05e:	add    eax,0xf1e0673e
  41a063:	aam    0xd6
  41a065:	shr    BYTE PTR [ebx+ebp*8+0x497d0e7a],cl
  41a06c:	mov    ds:0x22fad4cd,eax
  41a071:	mov    eax,ds:0xbd644bed
  41a076:	mov    DWORD PTR [eax-0x34],eax
  41a079:	stos   DWORD PTR es:[edi],eax
  41a07a:	outs   dx,DWORD PTR ds:[esi]
  41a07b:	fst    QWORD PTR [ebx+0x6015a744]
  41a081:	xor    ebx,DWORD PTR [eax-0x40a54f9a]
  41a087:	add    BYTE PTR [esi-0x7cc9145e],0x17
  41a08e:	mov    ebx,0x3fba1afc
  41a093:	inc    eax
  41a094:	lock xchg ebp,eax
  41a096:	dec    esi
  41a097:	dec    esp
  41a098:	scas   al,BYTE PTR es:[edi]
  41a099:	js     0x41a080
  41a09b:	jns    0x41a052
  41a09d:	xlat   BYTE PTR ds:[ebx]
  41a09e:	(bad)  
  41a09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a0:	(bad)  
  41a0a1:	cmp    di,bp
  41a0a4:	pop    ecx
  41a0a5:	push   es
  41a0a6:	outs   dx,BYTE PTR ds:[esi]
  41a0a7:	mov    ds,WORD PTR [esi+0x6b5f1134]
  41a0ad:	aaa    
  41a0ae:	iret   
  41a0af:	push   ds
  41a0b0:	dec    esi
  41a0b1:	sub    eax,0x92fbe28a
  41a0b6:	das    
  41a0b7:	jbe    0x41a08b
  41a0b9:	add    eax,0xd6a19632
  41a0be:	idiv   bh
  41a0c0:	test   BYTE PTR [esi-0x67211837],ch
  41a0c6:	ins    BYTE PTR es:[edi],dx
  41a0c7:	pop    esi
  41a0c8:	xor    BYTE PTR [eax-0x79f80eb8],ch
  41a0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0cf:	popf   
  41a0d0:	and    al,0x2a
  41a0d2:	adc    bl,BYTE PTR [ebp-0xa]
  41a0d5:	push   ebp
  41a0d6:	aam    0xa3
  41a0d8:	or     ebx,DWORD PTR [edi+edi*2]
  41a0db:	loop   0x41a157
  41a0dd:	inc    ecx
  41a0de:	fsubr  DWORD PTR [ebp-0x3c5f213f]
  41a0e4:	(bad)  
  41a0e5:	aad    0x50
  41a0e7:	pop    edx
  41a0e8:	mul    al
  41a0ea:	lds    esi,FWORD PTR [ecx+0x11]
  41a0ed:	xchg   BYTE PTR [ebp+0x79],dh
  41a0f0:	dec    ecx
  41a0f1:	scas   al,BYTE PTR es:[edi]
  41a0f2:	dec    BYTE PTR [edi-0x6d]
  41a0f5:	xchg   edx,eax
  41a0f6:	and    eax,0xd8128913
  41a0fb:	ins    WORD PTR es:[edi],dx
  41a0fd:	sub    edi,DWORD PTR [edi]
  41a0ff:	mov    DWORD PTR [ecx-0x66e9e23a],esp
  41a105:	icebp  
  41a106:	push   eax
  41a107:	retf   
  41a108:	fiadd  DWORD PTR [ecx-0xc]
  41a10b:	fs push esp
  41a10d:	(bad)  
  41a10e:	pop    esi
  41a10f:	sbb    eax,esi
  41a111:	push   ds
  41a112:	cmp    al,0xa2
  41a114:	push   ds
  41a115:	into   
  41a116:	jne    0x41a0e0
  41a118:	and    eax,0xd49a8193
  41a11d:	cmp    al,0xd6
  41a11f:	push   ds
  41a120:	sbb    bh,BYTE PTR [edi+0x79]
  41a123:	mov    ebp,0xaa16974f
  41a128:	add    ebx,DWORD PTR [ebx+0x38]
  41a12b:	xor    DWORD PTR [edx],esp
  41a12d:	fdivr  st,st(4)
  41a12f:	cmp    eax,0xd696c11d
  41a134:	jl     0x41a19b
  41a136:	and    DWORD PTR [edi-0x3e4159ad],ebp
  41a13c:	and    al,0x31
  41a13e:	popf   
  41a13f:	push   es
  41a140:	xchg   esp,eax
  41a141:	xchg   esi,eax
  41a142:	stc    
  41a143:	adc    al,0x4f
  41a145:	stos   BYTE PTR es:[edi],al
  41a146:	adc    DWORD PTR [esi+0x2092228f],eax
  41a14c:	adc    eax,esp
  41a14e:	jno    0x41a1ad
  41a150:	out    0x42,al
  41a152:	in     al,0xfc
  41a154:	(bad)
  41a157:	in     al,dx
  41a158:	clc    
  41a159:	ffreep st(2)
  41a15b:	xchg   edx,eax
  41a15c:	ins    BYTE PTR es:[edi],dx
  41a15d:	retf   0x4454
  41a160:	xlat   BYTE PTR ds:[ebx]
  41a161:	fmul   DWORD PTR ds:0x203812b0
  41a167:	in     al,dx
  41a168:	sbb    DWORD PTR [edi-0x15759724],edi
  41a16e:	cs sub al,0x83
  41a171:	ret    0xb059
  41a174:	push   ds
  41a175:	xor    edx,DWORD PTR ds:0x86236d43
  41a17b:	jb     0x41a19b
  41a17d:	fiadd  WORD PTR [esi+0x29]
  41a180:	mov    ch,0xe1
  41a182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a183:	fistp  QWORD PTR [esp+edi*8+0x4d59dfa7]
  41a18a:	scas   eax,DWORD PTR es:[edi]
  41a18b:	or     esp,esi
  41a18d:	push   ss
  41a18e:	cs je  0x41a12b
  41a191:	shl    DWORD PTR [edi],cl
  41a193:	mov    cl,0x8f
  41a195:	xchg   esp,eax
  41a196:	out    dx,al
  41a197:	inc    ebx
  41a198:	mov    ebx,0x5b7d82ce
  41a19d:	stc    
  41a19e:	adc    esi,DWORD PTR ds:0xd3bc7a14
  41a1a4:	call   0x1e9276a9
  41a1a9:	fisub  DWORD PTR ds:0x12f498b1
  41a1af:	mov    ebp,0xa3facdae
  41a1b4:	jle    0x41a201
  41a1b6:	sub    eax,0xc533eb37
  41a1bb:	xlat   BYTE PTR ds:[ebx]
  41a1bc:	out    dx,eax
  41a1bd:	sub    eax,0x38f23f4c
  41a1c2:	mov    BYTE PTR [edx+0x60],0x81
  41a1c6:	xlat   BYTE PTR ds:[ebx]
  41a1c7:	mov    bl,0x93
  41a1c9:	mov    bl,BYTE PTR [esi-0x3e]
  41a1cc:	mov    bh,0x22
  41a1ce:	clc    
  41a1cf:	adc    eax,0x14aa0041
  41a1d4:	push   ds
  41a1d5:	pop    ds
  41a1d6:	sub    BYTE PTR [eax+0x15bf7ca8],0x4d
  41a1dd:	or     bh,BYTE PTR [eax-0x1f]
  41a1e0:	adc    BYTE PTR [edi-0xdb63456],0x6
  41a1e7:	imul   edx,eax,0x36
  41a1ea:	inc    eax
  41a1eb:	dec    esp
  41a1ec:	push   esi
  41a1ed:	lods   eax,DWORD PTR ds:[esi]
  41a1ee:	xchg   DWORD PTR [edx-0x35334c26],edx
  41a1f4:	xchg   edi,eax
  41a1f5:	jae    0x41a1e0
  41a1f7:	int    0x5f
  41a1f9:	clc    
  41a1fa:	jne    0x41a1b1
  41a1fc:	xor    BYTE PTR [ebp-0x7e73e96d],bh
  41a202:	not    BYTE PTR ds:0x7597c6f1
  41a208:	mov    ch,0xe7
  41a20a:	test   dh,0x3f
  41a20d:	dec    ecx
  41a20e:	in     eax,dx
  41a20f:	and    DWORD PTR [ebx-0x2e],ecx
  41a212:	lods   al,BYTE PTR ds:[esi]
  41a213:	loope  0x41a283
  41a215:	(bad)  
  41a216:	clc    
  41a217:	out    0x3d,al
  41a219:	and    eax,0xdc0309ed
  41a21e:	pop    ebp
  41a21f:	pop    esp
  41a220:	push   esi
  41a221:	inc    ah
  41a223:	lods   al,BYTE PTR ds:[esi]
  41a224:	ret    
  41a225:	xor    al,BYTE PTR [esp+eiz*2]
  41a228:	jp     0x41a23d
  41a22a:	sbb    eax,0x7bb66623
  41a22f:	clc    
  41a230:	cmp    al,0x48
  41a232:	jno    0x41a249
  41a234:	and    ebx,eax
  41a236:	mov    bl,bl
  41a238:	test   al,0x91
  41a23a:	xor    al,0x1c
  41a23c:	sub    edx,eax
  41a23e:	jmp    0x41a1f5
  41a240:	dec    esi
  41a241:	adc    edi,ebx
  41a243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a244:	les    edx,FWORD PTR [edx]
  41a246:	daa    
  41a247:	sbb    ch,BYTE PTR [edi]
  41a249:	ss push ebx
  41a24b:	jl     0x41a2a8
  41a24d:	push   cs
  41a24e:	mov    edx,0x9e998626
  41a253:	xchg   ebx,eax
  41a254:	dec    esi
  41a255:	test   DWORD PTR [edx],esp
  41a257:	je     0x41a275
  41a259:	ins    BYTE PTR es:[edi],dx
  41a25a:	in     eax,0xf
  41a25c:	ja     0x41a2b7
  41a25e:	mov    esi,0xff05da16
  41a263:	sahf   
  41a264:	sub    bh,al
  41a266:	dec    edx
  41a267:	js     0x41a234
  41a269:	in     eax,dx
  41a26a:	adc    bh,ah
  41a26c:	pop    esp
  41a26d:	ins    DWORD PTR es:[edi],dx
  41a26e:	pop    edx
  41a26f:	loope  0x41a2da
  41a271:	dec    BYTE PTR [edi+0x249d89ab]
  41a277:	xor    eax,0x7a240783
  41a27c:	sub    eax,0x391438d7
  41a281:	lock mov esp,0x3ee40352
  41a287:	mov    eax,ds:0xffb11ddc
  41a28c:	clc    
  41a28d:	jmp    0x41a2e3
  41a28f:	push   ebx
  41a290:	add    al,0x41
  41a292:	call   esi
  41a294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a295:	sahf   
  41a296:	call   0xc09295cc
  41a29b:	gs sahf 
  41a29d:	sub    al,0x20
  41a29f:	push   0xb157876a
  41a2a4:	lods   al,BYTE PTR ds:[esi]
  41a2a5:	sbb    bh,al
  41a2a7:	inc    ecx
  41a2a8:	xor    al,al
  41a2aa:	out    dx,eax
  41a2ab:	outs   dx,DWORD PTR ds:[esi]
  41a2ac:	fs mov edx,edi
  41a2af:	out    dx,al
  41a2b0:	loopne 0x41a31b
  41a2b2:	mov    cs,WORD PTR [eax-0x11]
  41a2b5:	adc    BYTE PTR [eax],cl
  41a2b7:	inc    ecx
  41a2b8:	mov    BYTE PTR [eax-0x4b],ch
  41a2bb:	popf   
  41a2bc:	add    eax,0x90cd818
  41a2c1:	push   0xf6d22406
  41a2c6:	push   ds
  41a2c7:	(bad)  
  41a2c8:	or     bl,BYTE PTR [eax*2+0x3ee90adc]
  41a2cf:	mov    esi,0x53cdd931
  41a2d4:	dec    esp
  41a2d5:	(bad)  
  41a2d7:	test   BYTE PTR [ebp-0x66],0x40
  41a2db:	dec    ecx
  41a2dc:	mov    edx,0xf25170ad
  41a2e1:	jp     0x41a354
  41a2e3:	ficomp DWORD PTR [ecx]
  41a2e5:	arpl   WORD PTR [edx],sp
  41a2e7:	and    eax,0x8b7833a6
  41a2ec:	fdivr  DWORD PTR [edi-0x24eeccee]
  41a2f2:	xlat   BYTE PTR ds:[ebx]
  41a2f3:	or     cl,BYTE PTR [edi]
  41a2f5:	mov    ds:0xb14f0e0e,al
  41a2fa:	pop    eax
  41a2fb:	jl     0x41a343
  41a2fd:	dec    edx
  41a2fe:	popf   
  41a2ff:	(bad)  
  41a300:	jnp    0x41a2e6
  41a302:	ror    BYTE PTR [ebx+0x3a805768],0x5a
  41a309:	push   esp
  41a30a:	daa    
  41a30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30c:	aam    0x3d
  41a30e:	xor    eax,0x3f86e67d
  41a313:	add    BYTE PTR ds:0xed6d84d5,dh
  41a319:	cs adc al,0x7b
  41a31c:	mov    esp,0xce51bd00
  41a321:	pushf  
  41a322:	pop    eax
  41a323:	xchg   DWORD PTR [esi],ecx
  41a325:	xor    BYTE PTR [ebp+0x795da0ea],0x10
  41a32c:	retf   
  41a32d:	sbb    BYTE PTR [edx-0x29],cl
  41a330:	mov    ebx,edi
  41a332:	jnp    0x41a38c
  41a334:	push   ecx
  41a335:	icebp  
  41a336:	ja     0x41a389
  41a338:	jae    0x41a31d
  41a33a:	ins    BYTE PTR es:[edi],dx
  41a33b:	push   0xffffff98
  41a33d:	inc    eax
  41a33e:	xor    al,cl
  41a340:	(bad)  
  41a341:	mov    al,0x81
  41a343:	outs   dx,BYTE PTR ds:[esi]
  41a344:	xchg   DWORD PTR [ecx-0x19f1eaa4],esi
  41a34a:	mov    ch,bl
  41a34c:	std    
  41a34d:	mov    ecx,0x4d61f45a
  41a352:	call   FWORD PTR [edi-0x2e2432b7]
  41a358:	adc    ecx,DWORD PTR [ebp-0x6f366b5e]
  41a35e:	mov    al,0xa1
  41a360:	fisttp DWORD PTR ds:0x7d4e44e2
  41a366:	mov    dl,0x79
  41a368:	clc    
  41a369:	cmp    esp,esi
  41a36b:	addr16 addr16 fs icebp 
  41a36f:	icebp  
  41a370:	and    eax,0xad4ae82e
  41a375:	ds out dx,al
  41a377:	clc    
  41a378:	shl    DWORD PTR [esi-0x54c7bf73],0xd5
  41a37f:	lods   al,BYTE PTR ds:[esi]
  41a380:	xchg   esp,eax
  41a381:	loope  0x41a332
  41a383:	cs call 0xcf4b2587
  41a389:	lods   al,BYTE PTR ds:[esi]
  41a38a:	and    BYTE PTR [edx],al
  41a38c:	inc    edi
  41a38d:	outs   dx,BYTE PTR ds:[esi]
  41a38e:	cmp    BYTE PTR [ebp-0x10],cl
  41a391:	retf   
  41a392:	pop    ecx
  41a393:	xchg   ebp,eax
  41a394:	dec    ebp
  41a395:	mov    esi,DWORD PTR [edi+0x70]
  41a398:	jno    0x41a334
  41a39a:	pop    ebx
  41a39b:	inc    bx
  41a39d:	mov    ds:0xc0b886cb,eax
  41a3a2:	shl    BYTE PTR [esi-0x4c],cl
  41a3a5:	jnp    0x41a372
  41a3a7:	(bad)  
  41a3a8:	hlt    
  41a3a9:	or     cl,ch
  41a3ab:	dec    ebp
  41a3ac:	push   edx
  41a3ad:	and    BYTE PTR ds:0x8b343dba,al
  41a3b3:	bound  esp,QWORD PTR ds:0x11b3598e
  41a3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ba:	shr    DWORD PTR [eax],1
  41a3bc:	xchg   esi,eax
  41a3bd:	mov    ebx,0x169d14dc
  41a3c2:	lods   al,BYTE PTR ds:[esi]
  41a3c3:	ins    BYTE PTR es:[edi],dx
  41a3c4:	mov    al,0xab
  41a3c6:	add    eax,0xd322eca5
  41a3cb:	and    BYTE PTR [eax],0x7a
  41a3ce:	xchg   ecx,eax
  41a3cf:	es push cs
  41a3d1:	and    esi,ebx
  41a3d3:	cmp    al,0x3b
  41a3d5:	dec    esp
  41a3d6:	push   es
  41a3d7:	dec    esp
  41a3d8:	mov    ds:0xb34e7ee0,al
  41a3dd:	ficom  WORD PTR [edi-0x705a0311]
  41a3e3:	in     eax,dx
  41a3e4:	inc    eax
  41a3e5:	shl    ch,cl
  41a3e7:	inc    edx
  41a3e8:	inc    eax
  41a3e9:	div    BYTE PTR ds:0xb4d99a84
  41a3ef:	cmp    edi,DWORD PTR gs:[ebx-0x30]
  41a3f3:	push   ebx
  41a3f4:	push   ebp
  41a3f5:	test   DWORD PTR [esp+ebp*8-0x2dc31da4],esi
  41a3fc:	fld    DWORD PTR [esi+0x5]
  41a3ff:	sub    DWORD PTR [eax-0x15],edx
  41a402:	(bad)  
  41a403:	cmp    ah,BYTE PTR [edi+0x38]
  41a406:	cmp    ah,al
  41a408:	inc    eax
  41a409:	cmc    
  41a40a:	idiv   BYTE PTR [ebx]
  41a40c:	aad    0x66
  41a40e:	mov    ebx,0x529c503a
  41a413:	cs (bad) 
  41a415:	mov    al,0xdf
  41a417:	(bad)  
  41a418:	inc    edi
  41a419:	pusha  
  41a41a:	(bad)  
  41a41e:	imul   esp,DWORD PTR ds:0x720545ff,0x4f
  41a425:	lods   eax,DWORD PTR ds:[esi]
  41a426:	add    esi,ebx
  41a428:	push   eax
  41a429:	sbb    al,0x12
  41a42b:	test   BYTE PTR [ebp-0x74de9faa],al
  41a431:	lods   al,BYTE PTR es:[esi]
  41a433:	out    0x29,al
  41a435:	inc    ebx
  41a436:	js     0x41a46e
  41a438:	dec    ebp
  41a439:	add    ebp,esp
  41a43b:	test   DWORD PTR [esi-0x3f],esp
  41a43e:	adc    BYTE PTR [ebx+0x7f62fc1d],bh
  41a444:	ret    0x1dac
  41a447:	cs retf 
  41a449:	xchg   edx,eax
  41a44a:	sbb    eax,0xdf94636b
  41a44f:	mov    edi,0x449a1a17
  41a454:	mov    ds:0x580bbbff,eax
  41a459:	xchg   ebp,eax
  41a45a:	shr    DWORD PTR ds:0x83d6fc5c,1
  41a460:	push   esi
  41a461:	xchg   ecx,eax
  41a462:	fincstp 
  41a464:	jl     0x41a473
  41a466:	lea    ebx,[edi]
  41a468:	dec    ecx
  41a469:	lods   al,BYTE PTR ds:[esi]
  41a46a:	jge    0x41a4df
  41a46c:	push   0x45
  41a46e:	das    
  41a46f:	sbb    al,BYTE PTR ds:0xd1feaaec
  41a475:	dec    ecx
  41a476:	iret   
  41a477:	in     eax,dx
  41a478:	pop    eax
  41a479:	pop    ds
  41a47a:	(bad)  
  41a47b:	dec    ebp
  41a47c:	cwde   
  41a47d:	(bad)  
  41a47e:	aam    0x9
  41a480:	pop    es
  41a481:	or     DWORD PTR [esp+eax*8-0x22],ebp
  41a485:	fdivp  st(7),st
  41a487:	jbe    0x41a4f0
  41a489:	stos   BYTE PTR es:[edi],al
  41a48a:	out    dx,eax
  41a48b:	cmp    BYTE PTR [eax+0x4f826298],bh
  41a491:	out    dx,al
  41a492:	out    0x8,eax
  41a494:	fsub   QWORD PTR [ecx+ebx*8+0x49]
  41a498:	out    0x12,eax
  41a49a:	sub    BYTE PTR [edx+0x70],al
  41a49d:	repnz in eax,dx
  41a49f:	ficomp DWORD PTR [eiz*2+0x612a5297]
  41a4a6:	mov    ebp,0xa54ef550
  41a4ab:	add    al,0xcc
  41a4ad:	inc    ebp
  41a4ae:	scas   eax,DWORD PTR es:[edi]
  41a4af:	lods   al,BYTE PTR ds:[esi]
  41a4b0:	(bad)
  41a4b3:	mov    ebx,0x7a7b2ddb
  41a4b8:	push   es
  41a4b9:	pop    edx
  41a4ba:	fs scas eax,DWORD PTR es:[edi]
  41a4bc:	mov    DWORD PTR [edi+0x70],ebx
  41a4bf:	(bad)  
  41a4c0:	push   ss
  41a4c1:	cwde   
  41a4c2:	mov    DWORD PTR [ecx-0x7e],ebp
  41a4c5:	mov    al,0x55
  41a4c7:	or     al,0x20
  41a4c9:	and    al,0x59
  41a4cb:	aaa    
  41a4cc:	out    0xa4,al
  41a4ce:	lock fwait
  41a4d0:	inc    esi
  41a4d1:	sbb    al,BYTE PTR [esi]
  41a4d3:	or     BYTE PTR [edx+0x370fd768],bh
  41a4d9:	icebp  
  41a4da:	scas   eax,DWORD PTR es:[edi]
  41a4db:	sub    BYTE PTR [edx],ah
  41a4dd:	aad    0xef
  41a4df:	test   al,0x6e
  41a4e1:	pop    eax
  41a4e2:	int3   
  41a4e3:	enter  0x4f19,0xe5
  41a4e7:	fcomp  QWORD PTR [ebx]
  41a4e9:	lock pushf 
  41a4eb:	or     eax,0xfdf7a7c1
  41a4f0:	icebp  
  41a4f1:	inc    eax
  41a4f2:	or     dh,bh
  41a4f4:	jp     0x41a4fe
  41a4f6:	jp     0x41a4b2
  41a4f8:	enter  0x7627,0xe6
  41a4fc:	mov    al,0xe8
  41a4fe:	stos   BYTE PTR es:[edi],al
  41a4ff:	stos   DWORD PTR es:[edi],eax
  41a500:	(bad)  
  41a501:	js     0x41a488
  41a503:	inc    edx
  41a504:	sar    DWORD PTR [ebx+0x4ca2e9bb],cl
  41a50a:	push   edx
  41a50b:	and    al,0x93
  41a50d:	enter  0xdbaa,0x76
  41a511:	pop    edi
  41a512:	mov    DWORD PTR [ebx],esp
  41a514:	and    bl,cl
  41a516:	test   al,0xa
  41a518:	pop    ds
  41a519:	cdq    
  41a51a:	fnclex 
  41a51c:	and    eax,DWORD PTR [ebx-0x75c3c629]
  41a522:	(bad)  
  41a523:	aaa    
  41a524:	aam    0x9c
  41a526:	and    BYTE PTR [ebp-0x52],ch
  41a529:	hlt    
  41a52a:	nop
  41a52b:	dec    edx
  41a52c:	inc    eax
  41a52d:	mov    BYTE PTR [edx-0x7a64d6b6],dl
  41a533:	add    eax,0x404a9688
  41a538:	adc    esp,DWORD PTR [esi]
  41a53a:	and    ecx,DWORD PTR [bx]
  41a53d:	ret    
  41a53e:	xchg   ebx,eax
  41a53f:	sub    eax,0x30ad9315
  41a544:	mov    dl,0x54
  41a546:	mov    esi,0xbb769834
  41a54b:	cmp    eax,0x29a677ac
  41a550:	mov    ebx,0xfd2c174f
  41a555:	in     al,0xe3
  41a557:	cld    
  41a558:	cmp    DWORD PTR [ebx],ecx
  41a55a:	push   eax
  41a55b:	push   ds
  41a55c:	(bad)  [ebp+0x3bf85b8f]
  41a562:	add    al,0x9c
  41a564:	int    0x8a
  41a566:	adc    DWORD PTR [edi+0x4c],esp
  41a569:	stc    
  41a56a:	cmp    eax,0x88e91ff2
  41a56f:	rcr    BYTE PTR [ebx-0x655df67a],1
  41a575:	bound  esi,QWORD PTR [eax-0x1e]
  41a578:	mov    ebx,0x7937ed36
  41a57d:	nop
  41a57e:	imul   eax,DWORD PTR [ebx+eiz*4+0x59],0xe3ee1b99
  41a586:	push   esi
  41a587:	push   es
  41a588:	cld    
  41a589:	ja     0x41a5b2
  41a58b:	mov    cl,0xdf
  41a58d:	out    0x92,eax
  41a58f:	js     0x41a54a
  41a591:	mov    ebp,0x59b51d38
  41a596:	fmul   QWORD PTR [esi-0xf]
  41a599:	mov    ds:0xd2ee696a,eax
  41a59e:	clc    
  41a59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a0:	lahf   
  41a5a1:	int    0x91
  41a5a3:	ficom  DWORD PTR ds:0x210ba9e6
  41a5a9:	jo     0x41a5a2
  41a5ab:	cdq    
  41a5ac:	and    al,0x20
  41a5ae:	(bad)  
  41a5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b0:	neg    DWORD PTR [ebx-0x6b]
  41a5b3:	(bad)  
  41a5b4:	cli    
  41a5b5:	fcomp  DWORD PTR [ecx-0x7a792aed]
  41a5bb:	xlat   BYTE PTR ds:[ebx]
  41a5bc:	in     eax,0xd6
  41a5be:	rcr    BYTE PTR [ecx-0x21],1
  41a5c1:	(bad)  
  41a5c2:	shl    BYTE PTR [edx-0x9b34345],1
  41a5c8:	mov    eax,0x7ebb4b54
  41a5cd:	lods   al,BYTE PTR ds:[esi]
  41a5ce:	and    cl,BYTE PTR [edx+0x4d]
  41a5d1:	sub    al,0xc4
  41a5d3:	mov    al,ds:0xa00b211d
  41a5d8:	sub    DWORD PTR [ecx-0x1f],ebp
  41a5db:	inc    ecx
  41a5dc:	mov    al,ds:0xf0b59095
  41a5e1:	ret    
  41a5e2:	mov    esi,0x96a3178b
  41a5e7:	not    BYTE PTR [edx-0x17512cf2]
  41a5ed:	mov    al,BYTE PTR [esi]
  41a5ef:	adc    eax,DWORD PTR [ecx+0x7d9decba]
  41a5f5:	cmp    dl,al
  41a5f7:	pop    eax
  41a5f8:	stos   BYTE PTR es:[edi],al
  41a5f9:	cwde   
  41a5fa:	rcl    DWORD PTR [ebx],0x33
  41a5fd:	in     eax,0x95
  41a5ff:	push   ds
  41a600:	jns    0x41a64d
  41a602:	loop   0x41a5c6
  41a604:	test   DWORD PTR cs:[eax+0x634212e6],esp
  41a60b:	push   edx
  41a60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60d:	icebp  
  41a60e:	leave  
  41a60f:	or     eax,0xd8ac8a25
  41a614:	clc    
  41a615:	sbb    eax,0x559c9bd3
  41a61a:	xchg   ecx,eax
  41a61b:	in     eax,dx
  41a61c:	cmp    ch,bl
  41a61e:	cli    
  41a61f:	call   0x414f4a7c
  41a624:	adc    eax,0xb875d905
  41a629:	test   DWORD PTR [ebx+0x272a41e0],0x9347dc36
  41a633:	rcr    bh,1
  41a635:	xor    DWORD PTR [edx+eiz*8-0x35dfe8f2],ebp
  41a63c:	mov    dh,0x9c
  41a63e:	fisttp DWORD PTR [ebx+0x31b1c721]
  41a644:	(bad)  
  41a645:	mov    edi,0x7b1f26da
  41a64a:	in     eax,0x15
  41a64c:	dec    esi
  41a64d:	mov    al,ds:0xc70ec0bc
  41a652:	lds    eax,FWORD PTR [edi+0xc557c34]
  41a658:	push   cs
  41a659:	(bad)  
  41a65a:	push   ebx
  41a65b:	xchg   esp,eax
  41a65c:	test   BYTE PTR [eax+0x3c2ff10d],bh
  41a662:	inc    esi
  41a663:	inc    ebx
  41a664:	sbb    BYTE PTR [edi-0xddae6cb],dh
  41a66a:	and    BYTE PTR [edi+ecx*4],dl
  41a66d:	mov    edi,DWORD PTR [edi-0x62decf9f]
  41a673:	xor    eax,0x4aed8f4
  41a678:	xchg   ebx,eax
  41a679:	sahf   
  41a67a:	sbb    DWORD PTR [ecx+0x2e],edi
  41a67d:	and    DWORD PTR [esi-0x605b4f9f],esp
  41a683:	inc    BYTE PTR [edi-0x5d]
  41a686:	xchg   edi,eax
  41a687:	aam    0x5f
  41a689:	imul   ecx,DWORD PTR [esi+0x0],0x14c92924
  41a690:	in     eax,dx
  41a691:	push   eax
  41a692:	cwde   
  41a693:	add    al,0xa7
  41a695:	lods   al,BYTE PTR ds:[esi]
  41a696:	pop    edi
  41a697:	mov    dh,0xb1
  41a699:	mov    eax,0xc761abbe
  41a69e:	push   esp
  41a69f:	xchg   ebx,eax
  41a6a0:	adc    al,0x54
  41a6a2:	stos   BYTE PTR es:[edi],al
  41a6a3:	fisubr DWORD PTR [ecx+0x71bf25d3]
  41a6a9:	int    0x31
  41a6ab:	xor    ebp,DWORD PTR [edi-0x65505bd8]
  41a6b1:	jp     0x41a64c
  41a6b3:	xchg   ecx,eax
  41a6b4:	call   DWORD PTR [esi]
  41a6b6:	pop    eax
  41a6b7:	cmp    bh,0x1
  41a6ba:	cmp    al,0xe5
  41a6bc:	gs pop ecx
  41a6be:	cmc    
  41a6bf:	(bad)  
  41a6c0:	xlat   BYTE PTR ds:[ebx]
  41a6c1:	mov    eax,0xef3c0a97
  41a6c6:	mov    ebp,0xe5eae91b
  41a6cb:	xchg   ebp,eax
  41a6cc:	or     BYTE PTR [ecx],ah
  41a6ce:	adc    dh,BYTE PTR [ecx+0x0]
  41a6d1:	and    dh,bh
  41a6d3:	aad    0x1d
  41a6d5:	mov    dh,0x94
  41a6d7:	enter  0x2fbc,0xe7
  41a6db:	sub    al,0xa1
  41a6dd:	mov    al,BYTE PTR [esi]
  41a6df:	dec    ebx
  41a6e0:	stos   BYTE PTR es:[edi],al
  41a6e1:	popf   
  41a6e2:	(bad)  
  41a6e3:	fsub   QWORD PTR [ecx]
  41a6e5:	pop    ds
  41a6e6:	stc    
  41a6e7:	jecxz  0x41a6b5
  41a6e9:	and    BYTE PTR [edi+0x2e7df24e],bh
  41a6ef:	rol    DWORD PTR [edi],0x12
  41a6f2:	mov    dh,0x47
  41a6f4:	push   edi
  41a6f5:	retf   
  41a6f6:	xchg   DWORD PTR [eax-0x106bf055],edx
  41a6fc:	pop    ebp
  41a6fd:	mov    edi,DWORD PTR [eax+0x20]
  41a700:	mov    esi,0xd015fa09
  41a705:	mov    esi,0xeba156dd
  41a70a:	sti    
  41a70b:	mov    ah,BYTE PTR [ecx-0x1a]
  41a70e:	jne    0x41a6ca
  41a710:	popf   
  41a711:	iret   
  41a712:	cmp    edi,edi
  41a714:	loopne 0x41a6b5
  41a716:	retf   0xc474
  41a719:	lods   eax,DWORD PTR ds:[esi]
  41a71a:	xor    ah,BYTE PTR [edx+0x5c]
  41a71d:	push   edx
  41a71e:	push   ebx
  41a71f:	mov    ecx,DWORD PTR [ecx+0x7f]
  41a722:	fadd   DWORD PTR [edx]
  41a724:	stc    
  41a725:	inc    ecx
  41a726:	pop    ecx
  41a727:	outs   dx,DWORD PTR ds:[esi]
  41a728:	retf   
  41a729:	clc    
  41a72a:	ss (bad) 
  41a72c:	ins    BYTE PTR es:[edi],dx
  41a72d:	push   edi
  41a72e:	out    0x39,al
  41a730:	call   0x2f3069ba
  41a735:	push   esi
  41a736:	and    DWORD PTR [ecx-0x19ecee78],ebp
  41a73c:	daa    
  41a73d:	sub    eax,0x673f63a7
  41a742:	in     al,0x2e
  41a744:	and    eax,0x484f08d5
  41a749:	das    
  41a74a:	fmul   st(3),st
  41a74c:	not    BYTE PTR [esi+0x41]
  41a74f:	ficomp WORD PTR [edx-0x44]
  41a752:	repnz add ecx,eax
  41a755:	cdq    
  41a756:	or     DWORD PTR [esi-0x5b],0xc585913b
  41a75d:	mov    ch,BYTE PTR [esi-0x7c]
  41a760:	cdq    
  41a761:	js     0x41a7a2
  41a763:	adc    esi,DWORD PTR [ebx-0x48]
  41a766:	test   eax,0xdc453371
  41a76b:	jle    0x41a764
  41a76d:	out    dx,al
  41a76e:	je     0x41a728
  41a770:	xchg   edi,eax
  41a771:	aaa    
  41a772:	loope  0x41a782
  41a774:	xchg   ecx,eax
  41a775:	xor    eax,0x2e24e0fb
  41a77a:	inc    eax
  41a77b:	xlat   BYTE PTR ds:[ebx]
  41a77c:	xor    al,0xab
  41a77e:	ins    BYTE PTR es:[edi],dx
  41a77f:	aad    0x2c
  41a781:	(bad)  
  41a782:	mov    eax,ds:0xcb5c632f
  41a787:	add    al,0x2f
  41a789:	fsubr  st,st(6)
  41a78b:	mov    ecx,ebp
  41a78d:	out    0x55,eax
  41a78f:	sub    eax,0xed662e1e
  41a794:	push   eax
  41a795:	cmp    esp,DWORD PTR [ecx+ebp*4]
  41a798:	pop    ebx
  41a799:	inc    edx
  41a79a:	jno    0x41a7f9
  41a79c:	ds or  ah,cl
  41a79f:	cs xchg eax,ecx
  41a7a2:	jg     0x41a787
  41a7a4:	cmp    esi,DWORD PTR [esi]
  41a7a6:	imul   esi,ebx,0x57
  41a7a9:	icebp  
  41a7aa:	js     0x41a73a
  41a7ac:	sbb    esi,edi
  41a7ae:	sbb    al,0xc1
  41a7b0:	ins    DWORD PTR es:[edi],dx
  41a7b1:	xor    ebp,ebx
  41a7b3:	test   eax,0xb8780466
  41a7b8:	push   esi
  41a7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ba:	or     esp,DWORD PTR [ebp-0x465a575b]
  41a7c0:	mov    ebx,0xffc01b38
  41a7c5:	dec    ebp
  41a7c6:	enter  0xffa1,0x39
  41a7ca:	xchg   esi,eax
  41a7cb:	ins    BYTE PTR es:[edi],dx
  41a7cc:	mov    cl,0xd3
  41a7ce:	cs push 0x2c
  41a7d1:	mov    ecx,0x81661daa
  41a7d6:	retf   0xa9ed
  41a7d9:	scas   al,BYTE PTR es:[edi]
  41a7da:	push   cs
  41a7db:	shl    BYTE PTR [ecx],1
  41a7dd:	push   0xffffffc5
  41a7df:	das    
  41a7e0:	pop    ebx
  41a7e1:	sar    BYTE PTR [ebx-0x68],cl
  41a7e4:	mov    eax,DWORD PTR [esi-0x32]
  41a7e7:	fwait
  41a7e8:	pop    es
  41a7e9:	jmp    0x1b82b9d2
  41a7ee:	test   DWORD PTR [esi+esi*8-0x2],0xe847af41
  41a7f6:	lods   eax,DWORD PTR ds:[esi]
  41a7f7:	(bad)  
  41a7f9:	cli    
  41a7fa:	xchg   ebx,eax
  41a7fb:	std    
  41a7fc:	adc    eax,DWORD PTR [ecx]
  41a7fe:	lods   al,BYTE PTR ds:[esi]
  41a7ff:	mov    esp,0x27d34eef
  41a804:	xor    ecx,DWORD PTR [edi]
  41a806:	out    dx,al
  41a807:	mov    ebx,0xd7118683
  41a80c:	push   ecx
  41a80d:	xchg   ebp,eax
  41a80e:	pop    esi
  41a80f:	jp     0x41a7d9
  41a811:	and    ebx,DWORD PTR [ecx+0xed367b7]
  41a817:	adc    ecx,DWORD PTR [ecx+0x14056a91]
  41a81d:	push   eax
  41a81e:	pop    ebp
  41a81f:	outs   dx,DWORD PTR ds:[esi]
  41a820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a821:	int    0x8a
  41a823:	and    bh,BYTE PTR [ebp-0x5a]
  41a826:	int3   
  41a827:	scas   al,BYTE PTR es:[edi]
  41a828:	data16 mov bh,0x70
  41a82b:	lods   eax,DWORD PTR ds:[esi]
  41a82c:	popf   
  41a82d:	jg     0x41a870
  41a82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a830:	xlat   BYTE PTR ds:[ebx]
  41a831:	daa    
  41a832:	and    DWORD PTR [ecx],ebp
  41a834:	and    bl,ah
  41a836:	cmp    bh,BYTE PTR [ebp-0x40a6ed0a]
  41a83c:	push   ebx
  41a83d:	addr16 imul esi,edx,0x15
  41a841:	fild   WORD PTR [ebx]
  41a843:	pop    edx
  41a844:	mov    DWORD PTR [ebp*2+0x6e0061bc],esi
  41a84b:	mov    al,0xc6
  41a84d:	aam    0x61
  41a84f:	pop    ebx
  41a850:	add    ebx,DWORD PTR [ebx+0x7f77e5e7]
  41a856:	sti    
  41a857:	scas   al,BYTE PTR es:[edi]
  41a858:	iret   
  41a859:	jns    0x41a8c8
  41a85b:	fs mov bh,0x76
  41a85e:	loope  0x41a7f1
  41a860:	(bad)  
  41a861:	or     ecx,DWORD PTR [edi]
  41a863:	hlt    
  41a864:	lahf   
  41a865:	call   0xd701:0xf9c08934
  41a86c:	dec    ecx
  41a86d:	mov    ebp,0x9590e033
  41a872:	mov    esp,0xd986bbe6
  41a877:	ret    
  41a878:	mov    dh,BYTE PTR [eax-0x291ab707]
  41a87e:	push   es
  41a87f:	mov    ebx,0x1a1d9544
  41a884:	adc    eax,0xd74c45f4
  41a889:	sub    ah,BYTE PTR [ecx-0x67]
  41a88c:	xchg   dl,dl
  41a88e:	cmp    BYTE PTR [eax],dh
  41a890:	mov    bh,0x5c
  41a892:	adc    BYTE PTR [ecx],dh
  41a894:	jge    0x41a8cb
  41a896:	sub    bl,dl
  41a898:	lds    esp,FWORD PTR [edx]
  41a89a:	lock mov es,WORD PTR [edx]
  41a89d:	jp     0x41a85e
  41a89f:	lock xor BYTE PTR [ebp+edi*4+0x0],0xe4
  41a8a5:	inc    ebx
  41a8a6:	push   edi
  41a8a7:	sar    ebp,1
  41a8a9:	outs   dx,BYTE PTR ds:[esi]
  41a8aa:	pusha  
  41a8ab:	push   edx
  41a8ac:	js     0x41a859
  41a8ae:	fnop   
  41a8b0:	leave  
  41a8b1:	xor    DWORD PTR [ebp+0x5a254490],esp
  41a8b7:	inc    eax
  41a8b8:	jns    0x41a933
  41a8ba:	ins    DWORD PTR es:[edi],dx
  41a8bb:	ins    BYTE PTR es:[edi],dx
  41a8bc:	pop    esp
  41a8bd:	fmul   QWORD PTR [edx-0x7]
  41a8c0:	shl    BYTE PTR [esi+eax*1-0x50],cl
  41a8c4:	xor    edx,esp
  41a8c6:	xchg   al,bh
  41a8c8:	mov    BYTE PTR fs:[edi+0x35ec98b4],al
  41a8cf:	xchg   ecx,eax
  41a8d0:	inc    ebp
  41a8d1:	out    dx,eax
  41a8d2:	mov    DWORD PTR [edx-0x4df46e46],edi
  41a8d8:	stos   BYTE PTR es:[edi],al
  41a8d9:	jae    0x41a924
  41a8db:	sub    bl,bl
  41a8dd:	sbb    edi,DWORD PTR [ecx]
  41a8df:	test   BYTE PTR [esi],bh
  41a8e1:	inc    esp
  41a8e2:	add    esp,ebx
  41a8e4:	in     eax,0x7e
  41a8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e7:	and    DWORD PTR [esi],eax
  41a8e9:	in     eax,0x94
  41a8eb:	lods   al,BYTE PTR ds:[esi]
  41a8ec:	test   eax,0xe509aab8
  41a8f1:	pop    es
  41a8f2:	mov    ecx,0x70329885
  41a8f7:	mov    WORD PTR [ecx+0x242f76bc],es
  41a8fd:	jns    0x41a889
  41a8ff:	mov    dl,0xed
  41a901:	sbb    ch,dh
  41a903:	les    ebx,FWORD PTR [edx]
  41a905:	(bad)  
  41a906:	xchg   esp,eax
  41a907:	push   ss
  41a908:	call   0x3719f31e
  41a90d:	xchg   BYTE PTR [ebp-0x518f5b80],dl
  41a913:	jmp    0x41a8ab
  41a915:	repz call DWORD PTR ds:0xf1950c90
  41a91c:	loop   0x41a925
  41a91e:	out    dx,al
  41a91f:	push   ebp
  41a920:	or     al,0x9f
  41a923:	pusha  
  41a924:	iret   
  41a925:	adc    DWORD PTR [eax],edi
  41a927:	add    edi,ebx
  41a929:	or     cl,dl
  41a92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a92c:	clc    
  41a92d:	mov    ecx,0xaebf4523
  41a932:	hlt    
  41a933:	iret   
  41a934:	push   esi
  41a935:	fadd   st(1),st
  41a937:	push   0xa114c433
  41a93c:	and    dh,BYTE PTR [ecx]
  41a93e:	test   BYTE PTR [edx-0x5b25020b],dh
  41a944:	call   0xf7c0:0xb3662048
  41a94b:	jns    0x41a9ba
  41a94d:	(bad)  
  41a94e:	pop    ebx
  41a94f:	icebp  
  41a950:	xchg   ebx,eax
  41a951:	mov    cl,al
  41a953:	aam    0x18
  41a955:	(bad)  
  41a956:	fimul  WORD PTR [ebp+ebp*2-0x8e68577]
  41a95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95e:	add    al,0xaa
  41a960:	sar    BYTE PTR [ebx+0x62],1
  41a963:	mov    edx,0x5ce845e6
  41a968:	mov    bl,al
  41a96a:	sbb    esp,DWORD PTR [ebx-0x56]
  41a96d:	or     cl,BYTE PTR [ebx-0x57]
  41a970:	push   ss
  41a971:	lock loop 0x41a90c
  41a974:	stos   BYTE PTR es:[edi],al
  41a975:	test   eax,0x9674176e
  41a97a:	gs retf 
  41a97c:	adc    al,0x16
  41a97e:	ss mov dh,0xf2
  41a981:	das    
  41a982:	push   es
  41a983:	cmp    eax,0x7db70891
  41a988:	push   0x5dabf3be
  41a98d:	dec    ebp
  41a98e:	mov    al,0xda
  41a990:	adc    al,0xd5
  41a992:	jno    0x41a99d
  41a994:	cmp    eax,DWORD PTR [esi-0x21]
  41a997:	pop    ebx
  41a998:	and    dl,dh
  41a99a:	out    0x87,eax
  41a99c:	ja     0x41a974
  41a99e:	out    0xb9,eax
  41a9a0:	rcr    ebx,1
  41a9a2:	bound  eax,QWORD PTR [ebp-0x57]
  41a9a5:	push   eax
  41a9a6:	call   0x5854b28c
  41a9ab:	sbb    BYTE PTR [esi],0x8f
  41a9ae:	cli    
  41a9af:	jne    0x41a9dc
  41a9b1:	shl    bl,1
  41a9b3:	enter  0xad52,0xfa
  41a9b7:	push   ds
  41a9b8:	mov    DWORD PTR [esi],esp
  41a9ba:	call   0x28c1:0x4551ce8
  41a9c1:	lods   eax,DWORD PTR ds:[esi]
  41a9c2:	test   dh,cl
  41a9c4:	imul   BYTE PTR ds:0x778763d9
  41a9ca:	push   0x8d9a64e7
  41a9cf:	sti    
  41a9d0:	cmp    dl,BYTE PTR gs:[ebx]
  41a9d3:	inc    edx
  41a9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d5:	mov    esp,0xaaf3fd8b
  41a9da:	add    dl,BYTE PTR [edx+0xb]
  41a9dd:	sub    eax,0xeb2b68e3
  41a9e2:	xchg   ebp,eax
  41a9e3:	les    ecx,FWORD PTR [edi+0x36]
  41a9e6:	xor    eax,0xa4164db4
  41a9eb:	imul   ebx,esp,0x23
  41a9ee:	jle    0x41a9f4
  41a9f0:	aaa    
  41a9f1:	std    
  41a9f2:	dec    esi
  41a9f3:	je     0x41a9db
  41a9f5:	outs   dx,BYTE PTR ds:[esi]
  41a9f6:	(bad)  
  41a9f7:	xchg   DWORD PTR [edx+edi*8],esp
  41a9fa:	dec    ebx
  41a9fb:	mov    ds:0x564d2099,eax
  41aa00:	fs inc edx
  41aa02:	push   edi
  41aa03:	bound  ecx,QWORD PTR [edx]
  41aa05:	push   eax
  41aa06:	icebp  
  41aa07:	mov    DWORD PTR [edi-0x77],edx
  41aa0a:	fbstp  TBYTE PTR [eax+0x32783234]
  41aa10:	dec    ebx
  41aa11:	imul   ebp,DWORD PTR [edx-0x3e],0xf45a0458
  41aa18:	and    BYTE PTR [esi-0x45],dl
  41aa1b:	push   ebx
  41aa1c:	push   esp
  41aa1d:	out    0xeb,eax
  41aa1f:	test   al,0x81
  41aa21:	rol    BYTE PTR [ebx-0x5c],0x15
  41aa25:	or     DWORD PTR [ebx+0x1e8d631c],esi
  41aa2b:	mov    ah,0x37
  41aa2d:	cwde   
  41aa2e:	aas    
  41aa2f:	inc    ebx
  41aa30:	imul   ecx,DWORD PTR [eax+ecx*4-0x6f],0xd975f152
  41aa38:	jp     0x41aa06
  41aa3a:	bound  esi,QWORD PTR [esi-0xef5438e]
  41aa40:	push   ss
  41aa41:	ret    
  41aa42:	jae    0x41aa38
  41aa44:	mov    ?,ecx
  41aa46:	aam    0x43
  41aa48:	addr16 push edx
  41aa4a:	sti    
  41aa4b:	call   0x90e874ce
  41aa50:	cld    
  41aa51:	lods   al,BYTE PTR ds:[esi]
  41aa52:	cdq    
  41aa53:	xor    al,0xb1
  41aa55:	xor    al,0xe
  41aa57:	sbb    BYTE PTR [eax+0x7e547b07],bl
  41aa5d:	sub    bl,ah
  41aa5f:	fwait
  41aa60:	and    dh,BYTE PTR [eax-0x39]
  41aa63:	fs popa 
  41aa65:	xchg   BYTE PTR [edx-0x157364b2],al
  41aa6b:	lods   eax,DWORD PTR ds:[esi]
  41aa6c:	push   ds
  41aa6d:	jb     0x41aade
  41aa6f:	jl     0x41aa8c
  41aa71:	mov    edx,0x7f4ea1b2
  41aa76:	cwde   
  41aa77:	mov    al,0x7f
  41aa79:	cmp    ebx,DWORD PTR [esi-0x22]
  41aa7c:	fbld   TBYTE PTR [eax]
  41aa7e:	mov    dl,0xa4
  41aa80:	sub    ah,BYTE PTR [edx+0x4f0ca131]
  41aa86:	shl    edi,0x72
  41aa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8a:	test   al,0x67
  41aa8c:	retf   
  41aa8d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41aa8f:	neg    DWORD PTR [esi+eiz*8]
  41aa92:	in     al,0xc3
  41aa94:	mov    bh,0x61
  41aa96:	inc    ecx
  41aa97:	fst    DWORD PTR [ecx-0x34]
  41aa9a:	push   0xf
  41aa9c:	imul   ebx,DWORD PTR [edx],0xffffff9a
  41aa9f:	fwait
  41aaa0:	pop    ss
  41aaa1:	xchg   edi,eax
  41aaa2:	fwait
  41aaa3:	cmp    DWORD PTR [eax-0x59],esi
  41aaa6:	icebp  
  41aaa7:	int3   
  41aaa8:	imul   ebx,eax,0x9bb93b29
  41aaae:	repnz in eax,0x28
  41aab1:	pop    ebp
  41aab2:	xchg   BYTE PTR [edi-0x49],bh
  41aab5:	and    eax,0xc45f27e2
  41aaba:	jb     0x41aa75
  41aabc:	ret    0x3411
  41aabf:	call   0x79728e33
  41aac4:	inc    eax
  41aac5:	ins    DWORD PTR es:[edi],dx
  41aac6:	aaa    
  41aac7:	add    al,0xc1
  41aac9:	cmp    bl,BYTE PTR [edx+ecx*4-0x5269d915]
  41aad0:	fs sub ecx,0x3ea2694e
  41aad7:	sub    al,0xee
  41aad9:	call   0xd295:0x81ed8574
  41aae0:	les    eax,FWORD PTR [esi+ecx*1+0x6c]
  41aae4:	dec    ecx
  41aae5:	fwait
  41aae6:	inc    ebx
  41aae7:	and    al,0xd
  41aae9:	in     ax,dx
  41aaeb:	cdq    
  41aaec:	push   ebp
  41aaed:	(bad)  
  41aaef:	test   al,0x15
  41aaf1:	ficom  DWORD PTR [esi]
  41aaf3:	pop    ecx
  41aaf4:	mov    ah,0xaa
  41aaf6:	or     esi,ebx
  41aaf8:	(bad)  
  41aaf9:	xchg   ecx,eax
  41aafa:	inc    ecx
  41aafb:	jmp    0x17e1:0x78f232d2
  41ab02:	lock call 0xe2e5:0xe832310b
  41ab0a:	imul   ebp,DWORD PTR [edx+0x279d0211],0x203f6f49
  41ab14:	jmp    0x1447:0x5fefcc9a
  41ab1b:	hlt    
  41ab1c:	jns    0x41ab96
  41ab1e:	xor    dh,bh
  41ab20:	xor    DWORD PTR [ebp+0x47eb9faf],0x8
  41ab27:	imul   ebp,edi,0xffffffb1
  41ab2a:	cmp    esi,ebp
  41ab2c:	ins    BYTE PTR es:[edi],dx
  41ab2d:	js     0x41ab41
  41ab2f:	sti    
  41ab30:	sbb    eax,0xc262ba5a
  41ab35:	jecxz  0x41ab89
  41ab37:	div    BYTE PTR [eax+ecx*1]
  41ab3a:	inc    esi
  41ab3b:	cmp    DWORD PTR [eiz*1-0xaae16f5],0x42c90aa4
  41ab46:	and    DWORD PTR [edi+0x1f],edi
  41ab49:	lods   eax,DWORD PTR ds:[esi]
  41ab4a:	mov    esi,0x374a8c0f
  41ab4f:	inc    eax
  41ab50:	dec    esi
  41ab51:	loop   0x41ab57
  41ab53:	jecxz  0x41ab5e
  41ab55:	jno    0x41aafd
  41ab57:	mov    WORD PTR [esi],?
  41ab59:	lock jbe 0x41abbc
  41ab5c:	jl     0x41abc3
  41ab5e:	xor    BYTE PTR [esi],0xe1
  41ab61:	out    0xc4,eax
  41ab63:	cmp    DWORD PTR [ebx-0x4c],0x26
  41ab67:	mov    ebx,0xaf452f28
  41ab6c:	pop    eax
  41ab6d:	ins    DWORD PTR es:[edi],dx
  41ab6e:	mov    bl,0xdc
  41ab70:	rcr    DWORD PTR [edi+0x10ca14ce],0xe1
  41ab77:	inc    esi
  41ab78:	es ret 0xf4a3
  41ab7c:	fneni(8087 only) 
  41ab7e:	mov    ch,0x1
  41ab80:	adc    al,0xe8
  41ab82:	cwde   
  41ab83:	xchg   esi,eax
  41ab84:	dec    esp
  41ab85:	mov    ds:0x421bdd1a,al
  41ab8a:	adc    BYTE PTR [esi-0x2f],dh
  41ab8d:	xor    eax,0xf61007e5
  41ab92:	cwde   
  41ab93:	cmp    cl,ch
  41ab95:	out    dx,eax
  41ab96:	mov    DWORD PTR [ecx],esp
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	sar    ch,cl
  41ab9b:	shr    DWORD PTR [esi+eax*1+0x77],cl
  41ab9f:	outs   dx,BYTE PTR ds:[esi]
  41aba0:	ret    0x6b72
  41aba3:	test   al,0xff
  41aba5:	adc    eax,0xfe8ef855
  41abaa:	mov    edi,0x969727e8
  41abaf:	jle    0x41ac1b
  41abb1:	dec    esp
  41abb2:	jae    0x41ab76
  41abb4:	fwait
  41abb5:	mov    ch,dl
  41abb7:	push   esi
  41abb8:	jbe    0x41abea
  41abba:	add    al,0xff
  41abbc:	and    BYTE PTR [ebx-0x2ff0d35e],0x20
  41abc3:	or     DWORD PTR ds:0x6c5bad21,ebx
  41abc9:	xor    eax,0xb3bad637
  41abce:	inc    esi
  41abcf:	push   esi
  41abd0:	jbe    0x4398b054
  41abd6:	fsubr  DWORD PTR [ebp-0x1e3d6fb6]
  41abdc:	dec    edx
  41abdd:	pushf  
  41abde:	inc    esp
  41abdf:	push   0xfc9b5f0f
  41abe4:	rcr    BYTE PTR [edi],1
  41abe6:	push   ebx
  41abe7:	jl     0x41ac13
  41abe9:	out    0x2c,al
  41abeb:	mov    dl,BYTE PTR [ebx]
  41abed:	(bad)  
  41abee:	mov    eax,0x81e9fcb6
  41abf3:	cmc    
  41abf4:	pop    esp
  41abf5:	or     edx,DWORD PTR [eax]
  41abf7:	clc    
  41abf8:	adc    eax,0xa1fe4944
  41abfd:	and    al,0xe0
  41abff:	sar    BYTE PTR [ecx+eiz*8-0x72011db8],cl
  41ac06:	test   eax,0x85cbf5c1
  41ac0b:	inc    ebp
  41ac0c:	dec    eax
  41ac0d:	js     0x41ac33
  41ac0f:	mov    eax,ds:0x9dcbf6d2
  41ac14:	(bad)  
  41ac15:	dec    esi
  41ac16:	pop    edi
  41ac17:	pusha  
  41ac18:	rol    DWORD PTR ds:0x734a783e,0xac
  41ac1f:	hlt    
  41ac20:	jnp    0x41abbb
  41ac22:	out    dx,al
  41ac23:	inc    ebx
  41ac24:	adc    al,0x79
  41ac26:	mov    dl,0x2a
  41ac28:	adc    BYTE PTR [ebp+0x13cb8751],dl
  41ac2e:	dec    eax
  41ac2f:	ins    BYTE PTR es:[edi],dx
  41ac30:	xchg   ebp,eax
  41ac31:	lea    ebx,[esi]
  41ac33:	pop    ss
  41ac34:	xchg   esp,eax
  41ac35:	mov    eax,ds:0x6fccb591
  41ac3a:	add    bh,BYTE PTR [ecx+0x5a]
  41ac3d:	inc    BYTE PTR [ecx]
  41ac3f:	pop    ebx
  41ac40:	pop    edx
  41ac41:	retf   0x455f
  41ac44:	push   ecx
  41ac45:	shr    DWORD PTR [esi+esi*2-0x69],cl
  41ac49:	add    dh,dh
  41ac4b:	cvtpi2ps xmm3,QWORD PTR [esi]
  41ac4e:	xchg   esp,eax
  41ac4f:	xchg   DWORD PTR [ecx],ecx
  41ac51:	dec    ebx
  41ac52:	add    al,0x9a
  41ac54:	inc    ebp
  41ac55:	inc    esp
  41ac56:	jg     0x41acd7
  41ac58:	addr16 jnp 0x41ac70
  41ac5b:	out    dx,eax
  41ac5c:	add    eax,0x56818d32
  41ac61:	repnz mov dh,0x41
  41ac64:	mov    ah,0x83
  41ac66:	ret    
  41ac67:	scas   eax,DWORD PTR es:[edi]
  41ac68:	push   esp
  41ac69:	inc    ebp
  41ac6a:	sbb    DWORD PTR [ebx],esp
  41ac6c:	stc    
  41ac6d:	or     edi,edx
  41ac6f:	or     DWORD PTR [eax+0x4f],eax
  41ac72:	mov    esi,0xbb15a572
  41ac77:	ja     0x41ac5a
  41ac79:	push   esp
  41ac7a:	mov    ds:0x6dacc4a9,eax
  41ac7f:	imul   ebp,DWORD PTR [esi],0xffffff9f
  41ac82:	mov    esi,0x9c954a9d
  41ac87:	mov    al,ds:0xc2000a51
  41ac8c:	jge    0x41acf2
  41ac8e:	xchg   ebx,eax
  41ac8f:	loopne 0x41acfa
  41ac91:	arpl   WORD PTR [edi-0x34],ax
  41ac94:	and    eax,ecx
  41ac96:	or     BYTE PTR [eax+eax*8-0x5c],dh
  41ac9a:	arpl   ax,bx
  41ac9c:	fisubr WORD PTR [edx-0x22fd799a]
  41aca2:	stos   DWORD PTR es:[edi],eax
  41aca3:	aas    
  41aca4:	sbb    al,0x85
  41aca6:	repz mov ah,BYTE PTR [ebx]
  41aca9:	scas   al,BYTE PTR es:[edi]
  41acaa:	jmp    0x41ac89
  41acac:	cmp    bh,0x1
  41acaf:	ret    
  41acb0:	imul   esi,DWORD PTR [ebp+0x1b],0xffffffcb
  41acb4:	mov    bh,0x67
  41acb6:	pop    eax
  41acb7:	sbb    BYTE PTR [esi],0x2f
  41acba:	jno    0x41ac77
  41acbc:	xor    BYTE PTR [eax+0x67],0x14
  41acc0:	out    dx,al
  41acc1:	mov    BYTE PTR [ecx+ecx*4-0x3bfda92c],bl
  41acc8:	xor    ch,ah
  41acca:	fldenv ds:0x850cb277
  41acd0:	cmp    BYTE PTR [ecx+0x1e260092],0x4e
  41acd7:	test   cl,bh
  41acd9:	cmp    DWORD PTR [edi+0x2258548],esp
  41acdf:	pop    eax
  41ace0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace1:	rcr    DWORD PTR ds:0xc28f3cbe,cl
  41ace7:	add    al,0xe2
  41ace9:	test   eax,0x2a6a5cd4
  41acee:	inc    ecx
  41acef:	xchg   edx,eax
  41acf0:	ds std 
  41acf2:	dec    esi
  41acf3:	dec    esp
  41acf4:	pop    esp
  41acf5:	or     bl,BYTE PTR [ebp-0x35a39239]
  41acfb:	mov    bh,0x50
  41acfd:	and    al,0xfa
  41ad00:	push   DWORD PTR [edx]
  41ad02:	ret    0x31e7
  41ad05:	adc    DWORD PTR [edx-0x4f74b611],esp
  41ad0b:	clc    
  41ad0c:	push   eax
  41ad0d:	mov    ebp,0x90a80b9e
  41ad12:	xlat   BYTE PTR ds:[ebx]
  41ad13:	aad    0x6b
  41ad15:	dec    esi
  41ad16:	leave  
  41ad17:	push   ebx
  41ad18:	scas   al,BYTE PTR es:[edi]
  41ad19:	lea    edi,[ecx]
  41ad1b:	sub    eax,DWORD PTR [edx]
  41ad1d:	push   edx
  41ad1e:	jne    0x41ad60
  41ad20:	dec    ecx
  41ad21:	popa   
  41ad22:	(bad)  
  41ad23:	adc    bh,al
  41ad25:	mov    ds:0xd2969031,eax
  41ad2a:	xchg   ebp,eax
  41ad2b:	cmp    BYTE PTR [eax-0x65],bh
  41ad2e:	sub    BYTE PTR [ebx-0x2d9b6ea3],al
  41ad34:	pop    edx
  41ad35:	stos   DWORD PTR es:[edi],eax
  41ad36:	test   BYTE PTR [edi+0x29302a90],cl
  41ad3c:	popf   
  41ad3d:	ja     0x41acc2
  41ad3f:	jp     0x41ada9
  41ad41:	push   edi
  41ad42:	sbb    al,0x54
  41ad44:	popa   
  41ad45:	jnp    0x41ad8e
  41ad47:	sub    eax,0xecf797ec
  41ad4c:	xchg   ecx,eax
  41ad4d:	jno    0x41ad63
  41ad4f:	adc    eax,0x4c40e6d3
  41ad54:	or     al,0x20
  41ad56:	lock das 
  41ad58:	pushf  
  41ad59:	inc    al
  41ad5b:	lods   al,BYTE PTR ds:[esi]
  41ad5c:	adc    ch,BYTE PTR [edx]
  41ad5e:	sub    eax,0x42fae0bb
  41ad63:	(bad)  
  41ad64:	cmp    BYTE PTR [edi+0x6ebed4cb],dl
  41ad6a:	pop    ds
  41ad6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad6c:	imul   eax,DWORD PTR [ebx+0x1473f2ac],0xf5776bb7
  41ad76:	and    BYTE PTR [ebp-0xe],cl
  41ad79:	gs popf 
  41ad7b:	shl    DWORD PTR ds:0xf7a75784,cl
  41ad81:	leave  
  41ad82:	jge    0x41ad83
  41ad84:	jp     0x41ad85
  41ad86:	ret    0x9603
  41ad89:	inc    eax
  41ad8a:	mov    esp,0x8b76f924
  41ad8f:	in     al,dx
  41ad90:	inc    esi
  41ad91:	fnstenv [ebx-0x73]
  41ad94:	push   ds
  41ad95:	xchg   esp,eax
  41ad96:	adc    esi,DWORD PTR [ebx-0x187a255e]
  41ad9c:	and    eax,0xb901595c
  41ada1:	ins    BYTE PTR es:[edi],dx
  41ada2:	enter  0xbda,0xc7
  41ada6:	fdiv   QWORD PTR [edx]
  41ada8:	push   ss
  41ada9:	rcl    BYTE PTR [esi+0x12],cl
  41adac:	fisub  WORD PTR [eax]
  41adae:	mov    ebp,0x6b6a59ac
  41adb3:	mov    DWORD PTR [ecx+edi*4+0x2a],edi
  41adb7:	neg    BYTE PTR ds:0xed2d9718
  41adbd:	inc    edi
  41adbe:	in     eax,0xe7
  41adc0:	hlt    
  41adc1:	ss cs ss mov dl,0x49
  41adc6:	data16 jno 0x41ad91
  41adc9:	shl    bh,0xb2
  41adcc:	adc    al,0x42
  41adce:	or     BYTE PTR [edi],al
  41add0:	pop    eax
  41add1:	imul   ebp
  41add3:	mov    ah,0xa8
  41add5:	dec    ebx
  41add6:	xchg   edi,eax
  41add7:	iret   
  41add8:	or     ah,0x95
  41addb:	inc    edi
  41addc:	in     eax,0x72
  41adde:	push   esp
  41addf:	xchg   al,cl
  41ade1:	pop    ebx
  41ade2:	mov    cs:0x74611a23,al
  41ade8:	scas   al,BYTE PTR es:[edi]
  41ade9:	aam    0xc1
  41adeb:	dec    esi
  41adec:	jnp    0x41ada4
  41adee:	sbb    al,0x7d
  41adf0:	add    eax,0xe6e2e01a
  41adf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf7:	aam    0xa5
  41adf9:	add    esp,DWORD PTR [edi]
  41adfb:	mov    ?,WORD PTR [edx]
  41adfd:	mov    ebp,eax
  41adff:	mov    ecx,0x52054476
  41ae04:	loop   0x41ae80
  41ae06:	ja     0x41ae65
  41ae08:	sub    bh,BYTE PTR [ebx]
  41ae0a:	ins    DWORD PTR es:[edi],dx
  41ae0b:	mov    cl,0xe0
  41ae0d:	or     dx,ax
  41ae10:	push   esi
  41ae11:	lahf   
  41ae12:	mov    bh,0x4e
  41ae14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae15:	aas    
  41ae16:	mov    edx,0x228d412a
  41ae1b:	sbb    ch,ch
  41ae1d:	shr    ah,1
  41ae1f:	je     0x41ae03
  41ae21:	outs   dx,BYTE PTR ds:[si]
  41ae23:	leave  
  41ae24:	rcl    DWORD PTR [ebp+0x1c],1
  41ae27:	jp     0x41add7
  41ae29:	fbstp  TBYTE PTR [eax+0x25af1750]
  41ae2f:	pop    ecx
  41ae30:	pop    ds
  41ae31:	mov    ds:0x76a8b75a,eax
  41ae36:	mov    ch,ah
  41ae38:	add    dl,BYTE PTR [eax+0x56]
  41ae3b:	xchg   edi,eax
  41ae3c:	jae    0x41aebd
  41ae3e:	ficom  DWORD PTR [edx+eax*4]
  41ae41:	ficomp WORD PTR [esi+0x46]
  41ae44:	nop
  41ae45:	and    BYTE PTR [ebx+0x3e42183a],0x70
  41ae4c:	pushf  
  41ae4d:	jecxz  0x41ae2a
  41ae4f:	mov    ds:0xf7d75c99,al
  41ae54:	sbb    WORD PTR [ebx+ecx*2+0x3d1ba1d9],si
  41ae5c:	cmp    eax,0x4a19b5e9
  41ae61:	add    edi,DWORD PTR [esp+ecx*1-0xd709fdf]
  41ae68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae69:	xchg   esp,eax
  41ae6a:	in     eax,0xd
  41ae6c:	aaa    
  41ae6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6e:	xor    WORD PTR ss:[esi-0x60],0x4c
  41ae74:	std    
  41ae75:	and    al,0x6b
  41ae77:	sub    bl,BYTE PTR [esi-0x74]
  41ae7a:	sub    eax,0xbbe9c9e4
  41ae7f:	jne    0x41ae0b
  41ae81:	mov    ds:0xae948bf7,eax
  41ae86:	call   0xb807:0xa9b78abf
  41ae8d:	xchg   ebx,eax
  41ae8e:	in     eax,0xae
  41ae90:	mov    edi,0xc5ef4fad
  41ae95:	loopne 0x41ae91
  41ae97:	mov    bh,BYTE PTR [ebp-0x44]
  41ae9a:	fdiv   QWORD PTR [eiz*2+0xbac1ee1]
  41aea1:	iret   
  41aea2:	cmp    BYTE PTR [eax],0x9
  41aea5:	jg     0x41aef2
  41aea7:	add    al,0x9f
  41aea9:	sbb    ch,bh
  41aeab:	out    dx,eax
  41aeac:	sub    cl,BYTE PTR [edx]
  41aeae:	xor    DWORD PTR [eax+0x49161c95],0xd8a2e206
  41aeb8:	ret    
  41aeb9:	cwde   
  41aeba:	jnp    0x41af17
  41aebc:	call   0x49bc:0x40e73c81
  41aec3:	(bad)  
  41aec5:	sub    edi,DWORD PTR [esi+esi*8-0x36]
  41aec9:	mov    esp,0xb8b9b25c
  41aece:	mov    BYTE PTR [edi-0x40],cl
  41aed1:	les    eax,FWORD PTR ss:[eax+0x634f28c8]
  41aed8:	fwait
  41aed9:	shl    BYTE PTR ds:[eax+0x6b02ce43],1
  41aee0:	jmp    0x47a1:0x8e492c88
  41aee7:	ins    DWORD PTR es:[edi],dx
  41aee8:	push   cs
  41aee9:	adc    eax,0x34448f15
  41aeee:	ins    DWORD PTR es:[edi],dx
  41aeef:	int3   
  41aef0:	icebp  
  41aef1:	xor    al,0xa
  41aef3:	cwde   
  41aef4:	dec    edi
  41aef5:	nop
  41aef6:	cs pop esi
  41aef8:	pop    ds
  41aef9:	mov    BYTE PTR [ecx],dl
  41aefb:	sbb    cl,ch
  41aefd:	jo     0x41af0c
  41aeff:	retf   0x1709
  41af02:	in     al,0x5c
  41af04:	fstp   DWORD PTR [ebx+edx*8+0x65]
  41af08:	aaa    
  41af09:	jecxz  0x41af50
  41af0b:	out    dx,al
  41af0c:	test   eax,0x92bbfcb
  41af11:	xor    BYTE PTR [edx-0x3a44d3ad],dl
  41af17:	add    DWORD PTR [ebx-0x6a],ecx
  41af1a:	adc    esi,DWORD PTR [edx-0x46c619e4]
  41af20:	inc    esi
  41af21:	jns    0x41af30
  41af23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af24:	and    al,0xd9
  41af26:	aam    0xbc
  41af28:	jge    0x41aec3
  41af2a:	(bad)  
  41af2c:	clc    
  41af2d:	add    eax,0x17c868d5
  41af32:	out    0xf6,al
  41af34:	push   0x610c3596
  41af39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af3a:	sub    bh,BYTE PTR [eax+edx*2+0x63]
  41af3e:	push   cs
  41af3f:	stos   DWORD PTR es:[edi],eax
  41af40:	lahf   
  41af41:	test   al,0x7d
  41af43:	dec    ebx
  41af44:	push   eax
  41af46:	test   BYTE PTR [ecx+0x3d08af8c],dh
  41af4c:	mov    eax,ds:0xa673926e
  41af51:	loope  0x41af57
  41af53:	ret    0xe106
  41af56:	pusha  
  41af57:	ins    BYTE PTR es:[edi],dx
  41af58:	jne    0x41aee2
  41af5a:	rcl    DWORD PTR [ebp-0x1a],0xc9
  41af5e:	push   ecx
  41af5f:	jmp    0x41af31
  41af61:	cmp    eax,0x498883be
  41af66:	cld    
  41af67:	or     eax,0xbcd19beb
  41af6c:	out    dx,al
  41af6d:	mov    al,ds:0xfdb30eeb
  41af72:	sbb    DWORD PTR [eax+0x1ddda8fa],esi
  41af78:	push   edi
  41af79:	test   DWORD PTR [edi-0x4052d899],esi
  41af7f:	jecxz  0x41afdb
  41af81:	inc    ebx
  41af82:	lods   eax,DWORD PTR ds:[esi]
  41af83:	pushf  
  41af84:	jnp    0x41af0d
  41af86:	rcl    ebx,0x3
  41af89:	jmp    0x9004:0xbbdb4466
  41af90:	repnz mov dh,0xa8
  41af93:	pop    edi
  41af94:	cmp    esp,esp
  41af96:	out    dx,eax
  41af97:	test   DWORD PTR [eax+0x2b493461],eax
  41af9d:	test   eax,0x8dc2bebf
  41afa2:	mov    ebx,0xa2daea30
  41afa7:	jecxz  0x41af94
  41afa9:	xchg   ebx,eax
  41afaa:	mov    esp,0x269cdb07
  41afaf:	imul   ebp,ecx,0xfffffff8
  41afb2:	jg     0x41b011
  41afb4:	inc    esi
  41afb5:	or     eax,0x222b96ac
  41afba:	jnp    0x41b006
  41afbc:	add    BYTE PTR [ecx-0x80],bh
  41afbf:	dec    ecx
  41afc0:	mov    ch,BYTE PTR [edx]
  41afc2:	inc    eax
  41afc3:	pop    ds
  41afc4:	sub    BYTE PTR [ebx],0xcb
  41afc7:	jno    0x41affd
  41afc9:	jbe    0x41afbd
  41afcb:	inc    ebx
  41afcc:	dec    ebp
  41afcd:	mov    ebx,0x122c0c73
  41afd2:	push   ds
  41afd3:	ror    dl,cl
  41afd5:	mov    ah,0x9f
  41afd7:	inc    ebx
  41afd8:	or     DWORD PTR [eax],esp
  41afda:	adc    dh,BYTE PTR [ebx+0x7914866d]
  41afe0:	leave  
  41afe1:	dec    ebx
  41afe2:	jno    0x41b051
  41afe4:	repz int 0xdc
  41afe7:	pop    esp
  41afe8:	or     ah,BYTE PTR [ebx+0x21edb59b]
  41afee:	and    al,0x78
  41aff0:	(bad)  
  41aff1:	out    0x11,eax
  41aff3:	imul   esi,DWORD PTR [eax],0xd1cba347
  41aff9:	and    esp,edx
  41affb:	lods   eax,DWORD PTR ds:[esi]
  41affc:	jo     0x41b030
  41affe:	mov    ds:0x37788f36,al
  41b003:	ret    0xa5a8
  41b006:	and    BYTE PTR [eax+eax*8],dl
  41b009:	push   esp
  41b00a:	scas   eax,DWORD PTR es:[edi]
  41b00b:	mov    ecx,0xeab9d7c5
  41b010:	cdq    
  41b011:	and    DWORD PTR [ebp+0x3],esp
  41b014:	sbb    cl,BYTE PTR [esi-0x5c8248]
  41b01a:	mov    ah,0x1e
  41b01c:	xchg   edi,eax
  41b01d:	sbb    DWORD PTR [esi+0x1da89ea0],ebp
  41b023:	repz loope 0x41afc5
  41b026:	loop   0x41b03c
  41b028:	pop    ds
  41b029:	in     al,0x26
  41b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02c:	adc    esi,edx
  41b02e:	pop    esi
  41b02f:	repnz or eax,0xd95743d3
  41b035:	sbb    bh,BYTE PTR [esi+0x406a5b54]
  41b03b:	(bad)  
  41b03c:	aaa    
  41b03d:	js     0x41afe4
  41b03f:	retf   0xc71e
  41b042:	call   0x6d78:0xfaeb5cdd
  41b049:	out    0xbc,eax
  41b04b:	mov    bh,dh
  41b04d:	mov    DWORD PTR [edx],esi
  41b04f:	mov    dl,0x43
  41b051:	fcom   QWORD PTR [eax-0x5661ada3]
  41b057:	push   ecx
  41b058:	jnp    0x41b035
  41b05a:	stc    
  41b05b:	mov    ebp,0x22f02443
  41b060:	mov    ds:0x6cbe5376,eax
  41b065:	sub    BYTE PTR ds:0x9bb5cab,cl
  41b06b:	cmp    eax,0x99c2d1de
  41b070:	xor    bl,BYTE PTR [edi+ecx*1+0xa24afed]
  41b077:	xor    esp,DWORD PTR [esi+0x22b8c268]
  41b07d:	lds    eax,FWORD PTR [edi]
  41b07f:	clc    
  41b080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b081:	nop
  41b082:	loope  0x41b0f2
  41b084:	inc    esi
  41b085:	xchg   ecx,eax
  41b086:	pop    esp
  41b087:	and    eax,0xca77d11b
  41b08c:	add    eax,DWORD PTR [edi-0x49]
  41b08f:	(bad)  
  41b090:	retf   
  41b091:	add    BYTE PTR [ecx+0x7],0x8f
  41b095:	js     0x41b060
  41b097:	xchg   edi,eax
  41b098:	cwde   
  41b099:	test   eax,edx
  41b09b:	push   ebp
  41b09c:	mov    esi,0x8f260cb6
  41b0a1:	cs enter 0xb7ef,0x33
  41b0a6:	jnp    0x41b060
  41b0a8:	cdq    
  41b0a9:	ret    0x2716
  41b0ac:	rcr    BYTE PTR [edx+0x12],cl
  41b0af:	pop    es
  41b0b0:	je     0x41b074
  41b0b2:	sub    DWORD PTR [ecx],0xb2c5af38
  41b0b8:	arpl   WORD PTR [ebx],si
  41b0ba:	aam    0x2a
  41b0bc:	cmc    
  41b0bd:	xchg   ebp,eax
  41b0be:	or     eax,0xa22d13c6
  41b0c3:	mov    bh,0x3d
  41b0c5:	inc    esp
  41b0c6:	fwait
  41b0c7:	jp     0x41b10d
  41b0c9:	inc    esp
  41b0ca:	hlt    
  41b0cb:	xchg   DWORD PTR [edi+0x6b],esi
  41b0ce:	mov    eax,ds:0xc0018552
  41b0d3:	rcl    DWORD PTR [eax-0x12],0x29
  41b0d7:	inc    eax
  41b0d8:	or     al,0x1d
  41b0da:	jp     0x41b0fb
  41b0dc:	(bad)
  41b0df:	xor    DWORD PTR [edi+0x4aebc24b],ecx
  41b0e5:	ds inc ecx
  41b0e7:	test   BYTE PTR [eax],0xba
  41b0ea:	in     eax,dx
  41b0eb:	dec    ebx
  41b0ec:	adc    DWORD PTR [ebp+ebp*8-0x62],edi
  41b0f0:	(bad)  
  41b0f1:	jle    0x41b08d
  41b0f3:	in     eax,dx
  41b0f4:	or     ebp,DWORD PTR [ecx]
  41b0f6:	cdq    
  41b0f7:	jl     0x41b111
  41b0f9:	pop    eax
  41b0fa:	or     DWORD PTR [ebp+0x4d],ebp
  41b0fd:	mov    edi,0x444973e3
  41b102:	hlt    
  41b103:	pop    es
  41b104:	loop   0x41b0c9
  41b106:	out    dx,eax
  41b107:	push   esp
  41b108:	mov    ebx,0x6e91073b
  41b10d:	inc    eax
  41b10e:	push   ecx
  41b10f:	push   edi
  41b110:	jo     0x41b0ae
  41b112:	push   ss
  41b113:	(bad)  
  41b114:	lods   al,BYTE PTR ds:[esi]
  41b115:	fs dec edi
  41b117:	xor    ecx,DWORD PTR [ecx+0x27]
  41b11a:	test   al,0x17
  41b11c:	test   BYTE PTR [esi+eax*1],ch
  41b11f:	jb     0x41b194
  41b121:	mov    edx,0x722494fc
  41b126:	sar    DWORD PTR [ebp+0x36f71ed3],cl
  41b12c:	fst    DWORD PTR [esp+ebx*1+0x75]
  41b130:	inc    eax
  41b131:	or     al,0x4c
  41b133:	sub    BYTE PTR [ebx],al
  41b135:	mov    ecx,DWORD PTR [ebx+esi*4+0x49971e3e]
  41b13c:	ins    DWORD PTR es:[edi],dx
  41b13d:	mov    ds:0x307ae78f,al
  41b142:	dec    ebp
  41b143:	stc    
  41b144:	test   esp,esi
  41b146:	sahf   
  41b147:	shl    BYTE PTR [ebp+0x46c0e8d3],cl
  41b14d:	pop    esi
  41b14e:	xchg   edx,eax
  41b14f:	fild   QWORD PTR [ebp-0x4e]
  41b152:	test   eax,0x93795839
  41b157:	ficom  WORD PTR [eax]
  41b159:	(bad)  
  41b15a:	(bad)  
  41b15b:	mov    dl,0x1d
  41b15d:	in     al,dx
  41b15e:	in     eax,0xfc
  41b160:	mov    ds:0xf42cacb1,eax
  41b165:	xchg   ebx,eax
  41b166:	outs   dx,BYTE PTR ds:[esi]
  41b167:	bound  esp,QWORD PTR [ebx]
  41b169:	mov    ah,0xb
  41b16b:	jno    0x41b195
  41b16d:	mov    bh,0x82
  41b16f:	ret    
  41b170:	adc    eax,0xe0c3734b
  41b175:	adc    edi,eax
  41b177:	mov    al,0xa9
  41b179:	loopne 0x41b15c
  41b17b:	xchg   esp,eax
  41b17c:	pop    edi
  41b17d:	cmp    DWORD PTR [ecx-0x38],ebp
  41b180:	lahf   
  41b181:	loop   0x41b119
  41b183:	imul   edi,esi,0xffffffee
  41b186:	test   al,0x6e
  41b188:	cmp    al,0x76
  41b18a:	les    edx,FWORD PTR [eax]
  41b18c:	outs   dx,DWORD PTR ds:[esi]
  41b18d:	push   es
  41b18e:	mov    al,cs:0x8e64fcd4
  41b194:	and    DWORD PTR [ebp+0x6af73a98],ebp
  41b19a:	cmp    ch,BYTE PTR [eax-0x76]
  41b19d:	jmp    0x6e603332
  41b1a2:	lahf   
  41b1a3:	inc    esi
  41b1a4:	out    0x9e,eax
  41b1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a7:	sbb    BYTE PTR [eax+0x17],cl
  41b1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ab:	mov    ebp,0x30b57c84
  41b1b0:	push   edx
  41b1b1:	arpl   WORD PTR [ebx],di
  41b1b3:	stc    
  41b1b4:	jecxz  0x41b18e
  41b1b6:	ret    
  41b1b7:	sub    eax,0x56873772
  41b1bc:	popa   
  41b1bd:	das    
  41b1be:	cmp    DWORD PTR [ecx+0x5e61bd2d],ebp
  41b1c4:	or     ebp,DWORD PTR [esi]
  41b1c6:	cdq    
  41b1c7:	sbb    eax,0x6e8dd2ac
  41b1cc:	scas   al,BYTE PTR es:[edi]
  41b1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ce:	dec    eax
  41b1cf:	mov    edi,DWORD PTR [edx]
  41b1d1:	jne    0x41b1c4
  41b1d3:	out    dx,eax
  41b1d4:	cdq    
  41b1d5:	lock std 
  41b1d7:	sbb    al,0x6
  41b1d9:	repnz push ebp
  41b1db:	jg     0x41b16f
  41b1dd:	inc    esp
  41b1de:	mov    ds:0xb48818e8,eax
  41b1e3:	retf   
  41b1e4:	ret    
  41b1e5:	popf   
  41b1e6:	test   DWORD PTR [eax-0x5e984d3e],0xa0c68a7f
  41b1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f1:	dec    eax
  41b1f2:	xchg   esp,eax
  41b1f3:	adc    DWORD PTR [ebp+0x76],0x26a0f05d
  41b1fa:	mov    ?,WORD PTR [esi]
  41b1fc:	in     eax,0x30
  41b1fe:	inc    ebp
  41b1ff:	dec    esp
  41b200:	sub    dh,al
  41b202:	xchg   edi,eax
  41b203:	pop    ds
  41b204:	lea    eax,[edi-0x764dd92d]
  41b20a:	and    eax,0xca884e93
  41b20f:	push   ecx
  41b210:	sub    DWORD PTR [edx-0x32],esp
  41b213:	xchg   ecx,eax
  41b214:	js     0x41b1fb
  41b216:	in     eax,dx
  41b217:	shl    BYTE PTR [esi+0x30],cl
  41b21a:	mov    esi,0xe58e995
  41b21f:	mov    BYTE PTR [eax-0x47],dh
  41b222:	jb     0x41b1a4
  41b224:	jl     0x41b28e
  41b226:	popa   
  41b227:	lea    eax,[ebp+0x7e]
  41b22a:	aaa    
  41b22b:	mov    ch,0x82
  41b22d:	out    dx,eax
  41b22e:	add    ch,BYTE PTR [edx]
  41b230:	cwde   
  41b231:	stos   DWORD PTR es:[edi],eax
  41b232:	adc    BYTE PTR [esi-0x5c],bh
  41b235:	mov    dh,0xd2
  41b237:	mov    bh,0x5d
  41b239:	dec    eax
  41b23a:	xor    DWORD PTR [eax],0xffffff9f
  41b23d:	call   0x129d:0x7bec9319
  41b244:	sbb    bl,BYTE PTR [edi]
  41b246:	jns    0x41b236
  41b248:	lea    eax,[edi-0x1a]
  41b24b:	sub    DWORD PTR [eax-0x918e3ee],ecx
  41b251:	in     al,0xf3
  41b253:	repz pop es
  41b255:	(bad)  
  41b256:	xchg   ebp,eax
  41b257:	sub    BYTE PTR [ebp+0xd],al
  41b25a:	gs retf 0xfc43
  41b25e:	add    DWORD PTR [eax-0x6015dd20],ebp
  41b264:	jle    0x41b1e8
  41b266:	pop    ebp
  41b267:	sahf   
  41b268:	pop    ecx
  41b269:	push   edx
  41b26a:	xchg   ebp,eax
  41b26b:	fiadd  DWORD PTR [ebx+ebp*1]
  41b26e:	fsubr  QWORD PTR [esi+0x6a17fe23]
  41b274:	jbe    0x41b29c
  41b276:	popf   
  41b277:	sbb    DWORD PTR [ecx-0x46f41889],edx
  41b27d:	lahf   
  41b27e:	mov    cl,0x80
  41b280:	fwait
  41b281:	enter  0x2cef,0x72
  41b285:	adc    edx,esi
  41b287:	pushf  
  41b288:	sub    edx,DWORD PTR [esi+edi*8]
  41b28b:	xchg   esi,eax
  41b28c:	jb     0x41b2f8
  41b28e:	cmp    cl,bh
  41b290:	push   edi
  41b291:	ins    BYTE PTR es:[edi],dx
  41b292:	pcmpgtd mm4,QWORD PTR [edx+0xa]
  41b296:	sahf   
  41b297:	mov    esi,ebp
  41b299:	(bad)  
  41b29a:	in     al,dx
  41b29b:	icebp  
  41b29c:	shr    BYTE PTR [ecx+0x7151e431],1
  41b2a2:	mov    eax,0x35e47978
  41b2a7:	inc    ebx
  41b2a8:	mov    ?,eax
  41b2aa:	push   eax
  41b2ab:	or     al,ah
  41b2ad:	mov    DWORD PTR [edi+0x2658cfb5],ebx
  41b2b3:	aam    0x6
  41b2b5:	mov    dl,0xef
  41b2b7:	retf   
  41b2b8:	cmp    eax,0xdf55e1ec
  41b2bd:	mov    ah,0xbe
  41b2bf:	daa    
  41b2c0:	or     al,0x8
  41b2c2:	jbe    0x41b265
  41b2c4:	je     0x41b272
  41b2c6:	jb     0x41b30a
  41b2c8:	or     al,0x90
  41b2ca:	sti    
  41b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2cc:	mov    edi,0x779bf8c9
  41b2d1:	(bad)  
  41b2d2:	loop   0x41b31c
  41b2d4:	iret   
  41b2d5:	adc    ebp,edx
  41b2d7:	jmp    0xb246cc51
  41b2dc:	icebp  
  41b2dd:	inc    ebp
  41b2de:	xlat   BYTE PTR ds:[ebx]
  41b2df:	mov    ebp,0x90445e24
  41b2e4:	gs xchg ebp,eax
  41b2e6:	nop
  41b2e7:	mov    DWORD PTR [eax+0x4c1986b9],edx
  41b2ed:	adc    eax,0xac80dc25
  41b2f2:	clc    
  41b2f3:	and    al,0x28
  41b2f5:	cmp    bh,dl
  41b2f7:	cmc    
  41b2f8:	jbe    0x41b2a1
  41b2fa:	jge    0x41b33a
  41b2fc:	int    0xd5
  41b2fe:	cmovo  ecx,DWORD PTR [ebx]
  41b301:	xor    BYTE PTR [eax+0x68],dl
  41b304:	daa    
  41b305:	inc    ebx
  41b306:	jns    0x41b326
  41b308:	mov    al,ds:0x20f279df
  41b30d:	lock fwait
  41b30f:	mov    edi,0x608db72e
  41b314:	mov    ecx,0x5676519f
  41b319:	xor    DWORD PTR [eax+0x6c605eff],ebp
  41b31f:	mov    BYTE PTR [esi+0x256cc4e],ah
  41b325:	scas   al,BYTE PTR es:[edi]
  41b326:	fisubr WORD PTR [edi]
  41b328:	pusha  
  41b329:	xor    al,0xdf
  41b32b:	jecxz  0x41b2fb
  41b32d:	cmp    al,0x60
  41b32f:	(bad)  [edi]
  41b331:	test   ebp,0x1c508170
  41b337:	add    al,0x98
  41b339:	loope  0x41b367
  41b33b:	jge    0x41b308
  41b33d:	cmc    
  41b33e:	jl     0x41b35b
  41b340:	sti    
  41b341:	mov    ch,0x27
  41b343:	loopne 0x41b361
  41b345:	push   eax
  41b346:	enter  0x9897,0xb7
  41b34a:	add    dh,BYTE PTR [ecx]
  41b34c:	cmc    
  41b34d:	stos   BYTE PTR es:[edi],al
  41b34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b34f:	sub    cl,BYTE PTR [ecx+0x7ab78641]
  41b355:	ds jnp 0x41b3c9
  41b358:	cdq    
  41b359:	pop    es
  41b35a:	das    
  41b35b:	icebp  
  41b35c:	jl     0x41b347
  41b35e:	mov    eax,ds:0x88fbeaaa
  41b363:	aam    0xfb
  41b365:	lds    eax,FWORD PTR [ecx]
  41b367:	mov    bh,0x54
  41b369:	test   BYTE PTR [edi],ch
  41b36b:	mov    edi,0xe40bcc9
  41b370:	mov    ch,0xa0
  41b372:	push   ebx
  41b373:	jl     0x41b342
  41b375:	jmp    0x3092:0xec508bce
  41b37c:	xchg   ebx,eax
  41b37d:	or     DWORD PTR [ecx-0x4458453],0x7655cd50
  41b387:	inc    esi
  41b388:	inc    edx
  41b389:	push   ss
  41b38a:	into   
  41b38b:	fucomip st,st(6)
  41b38d:	add    al,0xa6
  41b38f:	jmp    FWORD PTR [ebx+0x3ae24538]
  41b395:	aad    0xe
  41b397:	sub    BYTE PTR [ebx],cl
  41b399:	stc    
  41b39a:	lock mov ch,0xd1
  41b39d:	add    DWORD PTR [ebx+0x53],edi
  41b3a0:	mul    BYTE PTR [eax+0x7c]
  41b3a3:	ss xor eax,0xaae8dc72
  41b3a9:	int    0x44
  41b3ab:	int    0x34
  41b3ad:	xchg   ecx,eax
  41b3ae:	nop
  41b3af:	mov    al,BYTE PTR fs:[edx-0x5]
  41b3b3:	pop    ebx
  41b3b4:	ret    
  41b3b5:	lods   eax,DWORD PTR ds:[esi]
  41b3b6:	jmp    0x41b36f
  41b3b8:	mov    dh,0x3d
  41b3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3bb:	sbb    dh,BYTE PTR ds:0xfd0fb597
  41b3c1:	stos   BYTE PTR es:[edi],al
  41b3c2:	or     esi,DWORD PTR [ebp-0x5d]
  41b3c5:	xchg   DWORD PTR [eax+0x22],eax
  41b3c8:	sbb    eax,0xabd06202
  41b3cd:	jo     0x41b3b8
  41b3cf:	adc    al,0x84
  41b3d1:	mov    ch,0x95
  41b3d3:	xchg   esi,eax
  41b3d4:	in     al,0xff
  41b3d6:	std    
  41b3d7:	js     0x41b3d0
  41b3d9:	pop    esi
  41b3da:	push   cs
  41b3db:	cs dec ebx
  41b3dd:	inc    edi
  41b3de:	or     edx,0xa22710e2
  41b3e4:	sub    ebx,DWORD PTR [edx]
  41b3e6:	mov    ds:0xcc71d32d,al
  41b3eb:	sub    DWORD PTR [edi+ecx*8],ebx
  41b3ee:	aad    0x76
  41b3f0:	(bad)  
  41b3f1:	and    eax,0x5f61e40e
  41b3f6:	push   cs
  41b3f7:	loop   0x41b437
  41b3f9:	loop   0x41b3c8
  41b3fb:	sbb    ch,dl
  41b3fd:	xchg   DWORD PTR ds:0xd2d37242,ebp
  41b403:	pand   mm6,mm4
  41b406:	xchg   DWORD PTR [ecx+eax*4-0x10],esi
  41b40a:	xchg   esi,eax
  41b40b:	loop   0x41b3fe
  41b40d:	mov    bl,BYTE PTR [edi-0x10dd434d]
  41b413:	jb     0x41b45d
  41b415:	adc    eax,DWORD PTR [esi-0x7f259c8c]
  41b41b:	imul   ecx,DWORD PTR [esi+0x6d2f795c],0xffffffa6
  41b422:	imul   edx,DWORD PTR [ebx],0x45
  41b425:	inc    edx
  41b426:	inc    ebx
  41b427:	jle    0x41b40e
  41b429:	(bad)  
  41b42a:	int3   
  41b42b:	shr    DWORD PTR [edi+0x5ef3fe8],1
  41b431:	lds    edi,FWORD PTR ds:0x44915a98
  41b437:	inc    ebx
  41b438:	sbb    al,0xda
  41b43a:	in     eax,0x14
  41b43c:	in     al,dx
  41b43d:	and    DWORD PTR [edx-0x2aebcee8],ecx
  41b443:	ins    DWORD PTR es:[edi],dx
  41b444:	adc    ebx,esi
  41b446:	sbb    eax,0x7192b8f8
  41b44b:	pop    esi
  41b44c:	xchg   esp,ebx
  41b44e:	adc    al,0xb2
  41b450:	(bad)  
  41b451:	mov    dl,0x31
  41b453:	out    dx,eax
  41b454:	mov    ecx,0x33adc7eb
  41b459:	mov    esi,DWORD PTR [ebx-0x80]
  41b45c:	jle    0x41b3fd
  41b45e:	xchg   DWORD PTR [ecx],esi
  41b460:	jmp    0x41b4cc
  41b462:	jnp    0x41b4a7
  41b464:	iret   
  41b465:	sbb    al,0x23
  41b467:	loope  0x41b473
  41b469:	adc    DWORD PTR [edx+eax*8+0x5afc96b3],0x6246e
  41b474:	nop
  41b475:	dec    esi
  41b476:	mov    ds:0xe835d5c8,al
  41b47b:	imul   edi,DWORD PTR [esi+0x60],0x25c03fe8
  41b482:	jb     0x41b457
  41b484:	ja     0x41b46b
  41b486:	in     eax,dx
  41b487:	ins    BYTE PTR es:[edi],dx
  41b488:	ret    
  41b489:	shl    DWORD PTR [eax+0x5b],0xd3
  41b48d:	mov    dh,0x30
  41b48f:	clc    
  41b490:	mov    WORD PTR [ecx+ecx*4],ss
  41b493:	iret   
  41b494:	and    DWORD PTR [esi+0x3351a90c],0xff7378f
  41b49e:	(bad)  
  41b49f:	in     eax,0x57
  41b4a1:	push   edx
  41b4a2:	dec    esp
  41b4a3:	aam    0x1e
  41b4a5:	ret    
  41b4a6:	adc    DWORD PTR [edx+0x3],ecx
  41b4a9:	mov    DWORD PTR [ecx-0x7dafd016],esp
  41b4af:	xor    DWORD PTR [edx-0x76e59d5a],ebx
  41b4b5:	les    ebp,FWORD PTR ds:0x346f69e5
  41b4bb:	js     0x41b493
  41b4bd:	ins    BYTE PTR es:[edi],dx
  41b4be:	mov    WORD PTR [ecx+0x2],cs
  41b4c1:	cmp    esp,DWORD PTR [edx]
  41b4c3:	inc    ebx
  41b4c4:	test   eax,0x371df6
  41b4c9:	jmp    0xfe0d16a0
  41b4ce:	loopne 0x41b538
  41b4d0:	dec    BYTE PTR [ebx-0x22]
  41b4d3:	sbb    al,0x69
  41b4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d6:	scas   eax,DWORD PTR es:[edi]
  41b4d7:	jnp    0x41b4f1
  41b4d9:	sub    eax,0x4e0bc4e1
  41b4de:	pop    esi
  41b4df:	jns    0x41b520
  41b4e1:	push   ecx
  41b4e2:	(bad)  
  41b4e3:	push   ecx
  41b4e4:	mov    eax,0x7ad011c3
  41b4e9:	fiadd  DWORD PTR [ebx]
  41b4eb:	adc    ch,BYTE PTR [ecx-0x55]
  41b4ee:	lods   al,BYTE PTR ds:[esi]
  41b4ef:	mov    edx,0x453257a0
  41b4f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f5:	mov    ecx,0x8f6e7ec
  41b4fa:	adc    eax,0xf4267bba
  41b4ff:	into   
  41b500:	leave  
  41b501:	les    edi,FWORD PTR [edi-0x3b5846fe]
  41b507:	repnz addr16 sub dh,al
  41b50b:	fwait
  41b50c:	cmp    al,0x45
  41b50e:	add    dl,dl
  41b510:	mov    ecx,0xf38ce51b
  41b515:	xor    cl,dl
  41b517:	mov    ecx,ss
  41b519:	and    DWORD PTR [ebx],ecx
  41b51b:	xor    DWORD PTR ds:0xe4f55f64,edi
  41b521:	sbb    esp,DWORD PTR [esi+0x3c]
  41b524:	inc    edi
  41b525:	mov    bh,0x0
  41b527:	call   0x38cf6c46
  41b52c:	adc    ebx,DWORD PTR [eax]
  41b52e:	scas   al,BYTE PTR es:[edi]
  41b52f:	inc    edi
  41b530:	and    eax,0x8c79d662
  41b535:	sub    BYTE PTR [eax+0x7],dl
  41b538:	fistp  QWORD PTR [esi]
  41b53a:	(bad)  
  41b53b:	dec    ebx
  41b53c:	or     DWORD PTR [esi-0x23],0x5e
  41b540:	mov    ch,0x7
  41b542:	popf   
  41b543:	je     0x41b50c
  41b545:	pop    ecx
  41b546:	out    0xfc,al
  41b548:	imul   ecx,DWORD PTR [edx+0x63],0x3a
  41b54c:	sbb    DWORD PTR [esi-0x63291cf9],esi
  41b552:	or     eax,0x7c02b98d
  41b557:	loopne 0x41b4f0
  41b559:	mov    edi,0x4dc8593b
  41b55e:	sbb    esp,DWORD PTR [edi-0x13e72448]
  41b564:	mov    cl,0x65
  41b566:	sahf   
  41b567:	inc    BYTE PTR ds:0xc0a0a08e
  41b56e:	cmp    esi,DWORD PTR [ebx-0x4b]
  41b571:	enter  0xa87a,0xf5
  41b575:	inc    ebp
  41b576:	(bad)  
  41b578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b579:	mov    ebx,0x960843ef
  41b57e:	cmc    
  41b57f:	ficomp WORD PTR [edx+0x2e]
  41b582:	mov    ebx,0x11a94a18
  41b587:	arpl   WORD PTR [edi],bx
  41b589:	in     eax,dx
  41b58a:	xchg   ecx,eax
  41b58b:	jnp    0x41b52d
  41b58d:	mov    bh,0xa
  41b58f:	mov    WORD PTR [edi],ss
  41b591:	cmp    bl,dh
  41b593:	(bad)  [edx+esi*1]
  41b596:	mov    bh,0xe4
  41b598:	dec    ecx
  41b599:	sti    
  41b59a:	stc    
  41b59b:	imul   eax,DWORD PTR [eax-0x59],0x7e7cace8
  41b5a2:	inc    edi
  41b5a3:	pop    esi
  41b5a4:	(bad)  
  41b5a5:	(bad)  [esi]
  41b5a7:	clc    
  41b5a8:	test   bh,cl
  41b5aa:	dec    ecx
  41b5ab:	add    esp,DWORD PTR [edx]
  41b5ad:	xor    al,0xec
  41b5af:	inc    esp
  41b5b0:	mov    al,ds:0x6193aab5
  41b5b5:	fbld   TBYTE PTR [esi+ebp*8]
  41b5b8:	xchg   ebp,eax
  41b5b9:	scas   al,BYTE PTR es:[edi]
  41b5ba:	pop    esp
  41b5bb:	cmp    eax,0x282a8c1b
  41b5c0:	shl    BYTE PTR [ecx+ecx*1-0x1b],cl
  41b5c4:	add    BYTE PTR [edx],ch
  41b5c6:	lea    edi,[ebx]
  41b5c8:	(bad)  
  41b5c9:	pop    ebx
  41b5ca:	dec    esp
  41b5cb:	mov    ?,WORD PTR [esi]
  41b5cd:	mov    ds:0x62246987,eax
  41b5d2:	in     al,dx
  41b5d3:	aaa    
  41b5d4:	jmp    0xa694cc80
  41b5d9:	pop    es
  41b5da:	add    eax,0x5708bf2c
  41b5df:	add    ecx,DWORD PTR [ebx+eax*1]
  41b5e2:	xchg   BYTE PTR [edx],bh
  41b5e4:	es adc eax,0xbde118a7
  41b5ea:	add    al,0xb0
  41b5ec:	stc    
  41b5ed:	add    BYTE PTR [esi+0x661602e6],ch
  41b5f3:	dec    ecx
  41b5f4:	and    BYTE PTR [edx+0x5f],ch
  41b5f7:	popa   
  41b5f8:	mov    DWORD PTR [esi],ebx
  41b5fa:	mov    edi,0x372b7e9e
  41b5ff:	or     al,0x0
  41b601:	gs adc edi,ebx
  41b604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b605:	inc    ecx
  41b606:	(bad)  
  41b607:	sub    ebx,edx
  41b609:	bound  esi,QWORD PTR [esi]
  41b60b:	pop    es
  41b60c:	or     ebp,edi
  41b60e:	jmp    0xe6d6:0x628ff0d
  41b615:	sahf   
  41b616:	sahf   
  41b617:	push   0xffffff86
  41b619:	mov    bh,0xac
  41b61b:	bound  esp,QWORD PTR [eax+edx*8-0x76]
  41b61f:	pop    edi
  41b620:	xor    DWORD PTR [esi+0x4f],ebx
  41b623:	dec    edi
  41b624:	xchg   ebp,eax
  41b625:	jle    0x41b686
  41b627:	dec    ebp
  41b628:	ins    BYTE PTR es:[edi],dx
  41b629:	mov    edi,0x3758e728
  41b62e:	xlat   BYTE PTR ds:[ebx]
  41b62f:	loop   0x41b63a
  41b631:	push   0x23
  41b633:	xchg   edi,eax
  41b634:	mov    ds:0xbe8fd1a4,al
  41b639:	lods   eax,DWORD PTR ds:[esi]
  41b63a:	push   es
  41b63b:	add    esi,ebx
  41b63d:	pop    ebp
  41b63e:	imul   WORD PTR [ebp-0x1a]
  41b642:	shr    eax,1
  41b644:	mov    ds:0xd5d51de4,eax
  41b649:	(bad)  
  41b64a:	pop    es
  41b64b:	or     eax,0xed4d0794
  41b650:	sub    dl,BYTE PTR [ecx+ecx*2-0x7299b7a5]
  41b657:	pusha  
  41b658:	adc    cx,di
  41b65b:	aaa    
  41b65c:	gs mov ebx,0x6b9b6304
  41b662:	adc    DWORD PTR [ebp+0x10],esi
  41b665:	pop    esp
  41b666:	pop    edx
  41b667:	jnp    0x41b680
  41b669:	bound  edi,QWORD PTR [ebx+0x1f0acf63]
  41b66f:	outs   dx,DWORD PTR ds:[esi]
  41b670:	int    0xdc
  41b672:	hlt    
  41b673:	test   DWORD PTR [ecx+0x369c9d2e],edx
  41b679:	sbb    al,0x2c
  41b67b:	pop    ss
  41b67c:	mov    ecx,DWORD PTR [ecx+0x19]
  41b67f:	int    0x8f
  41b681:	stc    
  41b682:	outs   dx,BYTE PTR ds:[esi]
  41b683:	cmp    al,BYTE PTR [edi+0x7dd9e2da]
  41b689:	mov    ds:0xefaf46dd,eax
  41b68e:	push   es
  41b68f:	sub    edx,DWORD PTR [esi]
  41b691:	adc    eax,0xf92b65c8
  41b696:	aad    0x98
  41b698:	outs   dx,BYTE PTR ds:[esi]
  41b699:	loop   0x41b708
  41b69b:	aaa    
  41b69c:	mov    bh,BYTE PTR [esi-0x3e]
  41b69f:	sub    BYTE PTR [edx],0x58
  41b6a2:	and    BYTE PTR [ebx+esi*2],dh
  41b6a5:	out    dx,al
  41b6a6:	add    bh,dh
  41b6a8:	(bad)  
  41b6a9:	out    0x65,al
  41b6ab:	jb     0x41b6e7
  41b6ad:	ds (bad) 
  41b6af:	jp     0x41b725
  41b6b1:	hlt    
  41b6b2:	cmp    dl,ch
  41b6b4:	xchg   esi,eax
  41b6b5:	leave  
  41b6b6:	and    eax,0xb4186f5f
  41b6bb:	(bad)  
  41b6bc:	fild   WORD PTR [ecx-0x5399c132]
  41b6c2:	jae    0x41b67b
  41b6c4:	jae    0x41b6fc
  41b6c6:	sbb    eax,esi
  41b6c8:	mov    edx,0xe5768bb6
  41b6cd:	sbb    al,0x8c
  41b6cf:	stc    
  41b6d0:	imul   ecx,DWORD PTR [ebp+0xb],0xafe55968
  41b6d7:	lods   al,BYTE PTR ds:[esi]
  41b6d8:	cli    
  41b6d9:	sbb    ah,BYTE PTR [ecx+edx*2+0x7]
  41b6dd:	sub    edx,ebp
  41b6df:	arpl   si,ax
  41b6e1:	stos   BYTE PTR es:[edi],al
  41b6e2:	add    al,0xe6
  41b6e4:	jno    0x41b6b8
  41b6e6:	ret    0x3f9e
  41b6e9:	dec    edx
  41b6ea:	test   BYTE PTR [edx],bh
  41b6ec:	shr    BYTE PTR [edi-0x50],0xb0
  41b6f0:	cmp    edx,DWORD PTR [esi+0x600a335]
  41b6f6:	(bad)
  41b6f9:	mov    BYTE PTR [edx*1-0x8fa891],dl
  41b700:	pop    es
  41b701:	inc    esp
  41b702:	out    0xdf,eax
  41b704:	pop    ebx
  41b705:	mov    cl,0x1f
  41b707:	sahf   
  41b708:	pop    esp
  41b709:	xchg   edi,eax
  41b70a:	jge    0x41b734
  41b70c:	xchg   edx,eax
  41b70d:	inc    ebx
  41b70e:	add    cl,BYTE PTR [ecx]
  41b710:	adc    BYTE PTR [ebx+0x4e],ah
  41b713:	cmp    eax,0x40671747
  41b718:	sbb    eax,0xf34e6c83
  41b71d:	cmp    dl,BYTE PTR [edx]
  41b71f:	loopne 0x41b6bf
  41b721:	xor    al,BYTE PTR [eax+0x22b86263]
  41b727:	das    
  41b728:	mov    DWORD PTR [ecx],edi
  41b72a:	mov    bl,0xc6
  41b72c:	test   DWORD PTR [ecx-0x4a6f44d2],edx
  41b732:	repnz pop ss
  41b734:	and    eax,0xf539997f
  41b739:	in     al,0xda
  41b73b:	stos   DWORD PTR es:[edi],eax
  41b73c:	fidivr DWORD PTR ds:0x695dcb4e
  41b742:	add    esi,DWORD PTR [eax]
  41b744:	in     eax,dx
  41b745:	repnz xor al,0x4b
  41b748:	sub    dl,BYTE PTR [ebx+0x21d5ff43]
  41b74e:	icebp  
  41b74f:	test   bh,al
  41b751:	mov    ecx,0x2ce5380a
  41b756:	aas    
  41b757:	test   BYTE PTR [ecx+0x2083477f],0xb
  41b75e:	add    al,0x41
  41b760:	adc    DWORD PTR [esi-0x46b50da9],edx
  41b766:	(bad)  
  41b767:	(bad)  
  41b768:	xchg   edx,eax
  41b769:	std    
  41b76a:	mov    ah,0x2c
  41b76c:	mov    edx,0x5fcab7e
  41b771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b772:	jnp    0x41b797
  41b774:	or     BYTE PTR [ebx],ah
  41b776:	jmp    0xc219:0xb7be7fc6
  41b77d:	test   eax,0xfee0066
  41b782:	(bad)  
  41b783:	lds    eax,FWORD PTR [edx+esi*1+0x27]
  41b787:	sbb    DWORD PTR [edx-0x32],ecx
  41b78a:	dec    ecx
  41b78b:	clc    
  41b78c:	loop   0x41b801
  41b78e:	shr    BYTE PTR [ecx-0x4],1
  41b791:	push   0xffffffa1
  41b793:	add    al,0xe3
  41b795:	or     al,0xe0
  41b797:	popa   
  41b798:	push   ss
  41b799:	push   ebp
  41b79a:	mov    dl,0xfc
  41b79c:	enter  0x459f,0x31
  41b7a0:	push   ebp
  41b7a1:	daa    
  41b7a2:	cs sahf 
  41b7a4:	mov    dl,0x1b
  41b7a6:	push   ebx
  41b7a7:	(bad)  
  41b7a8:	outs   dx,DWORD PTR ds:[esi]
  41b7a9:	or     edi,DWORD PTR [ecx]
  41b7ab:	scas   eax,DWORD PTR es:[edi]
  41b7ac:	jg     0x41b807
  41b7ae:	sub    al,0x68
  41b7b0:	fld    TBYTE PTR [ebp+0x14]
  41b7b3:	mov    esi,0x47e8377b
  41b7b8:	hlt    
  41b7b9:	cmp    DWORD PTR [ebp-0x6e],esp
  41b7bc:	mov    eax,0xe0a134bf
  41b7c1:	pop    ss
  41b7c2:	data16 adc BYTE PTR ds:0x8b3f7467,al
  41b7c9:	cmp    DWORD PTR [ecx-0x7],0xfffffffd
  41b7cd:	sub    dl,0xba
  41b7d0:	push   edx
  41b7d1:	jo     0x41b7db
  41b7d3:	stos   DWORD PTR es:[edi],eax
  41b7d4:	and    eax,0xa38fd921
  41b7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7da:	(bad)  
  41b7db:	xchg   ecx,eax
  41b7dc:	call   0x8cbed540
  41b7e1:	loope  0x41b84e
  41b7e3:	loope  0x41b845
  41b7e5:	addr16 cs loop 0x41b831
  41b7e9:	fcos   
  41b7eb:	std    
  41b7ec:	imul   esp,DWORD PTR [edx+0x72953e54],0xe3c289b8
  41b7f6:	xchg   ecx,eax
  41b7f7:	(bad)  
  41b7f8:	idiv   DWORD PTR [eax]
  41b7fa:	cld    
  41b7fb:	bound  ebx,QWORD PTR [ecx]
  41b7fd:	mov    al,ds:0x9a0a02d3
  41b802:	adc    eax,0x82c27728
  41b807:	push   ss
  41b808:	leave  
  41b809:	fist   DWORD PTR [edi+edi*4+0x45]
  41b80d:	int    0xee
  41b80f:	pushf  
  41b810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b811:	jo     0x41b884
  41b813:	lds    ebp,FWORD PTR [esi+ebp*8-0x6c]
  41b817:	cmc    
  41b818:	popa   
  41b819:	adc    eax,0x9bbb7f31
  41b81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b81f:	pop    ds
  41b820:	icebp  
  41b821:	lahf   
  41b822:	dec    ebp
  41b824:	mov    ch,0x1f
  41b826:	dec    ebx
  41b827:	inc    esp
  41b828:	jg     0x41b7db
  41b82a:	sub    BYTE PTR [ecx+0x4b],bh
  41b82d:	jmp    FWORD PTR [eax-0x57d5125d]
  41b833:	lahf   
  41b834:	idiv   bh
  41b836:	imul   edx,DWORD PTR [ecx+0x7ac819d8],0xffffffb2
  41b83d:	into   
  41b83e:	push   edi
  41b83f:	ret    
  41b840:	xchg   ecx,eax
  41b841:	jmp    0xf087b872
  41b846:	xchg   ecx,eax
  41b847:	iret   
  41b848:	ret    0x468e
  41b84b:	pusha  
  41b84c:	xchg   BYTE PTR ds:0x9b42bec8,cl
  41b852:	mov    eax,ds:0xf0b05dbb
  41b857:	rol    DWORD PTR [ebx+0x70],cl
  41b85a:	add    al,0x26
  41b85c:	scas   eax,DWORD PTR es:[edi]
  41b85d:	add    bh,dl
  41b85f:	(bad)  
  41b860:	in     al,dx
  41b861:	pop    ecx
  41b862:	mov    dh,0xa2
  41b864:	or     esp,DWORD PTR [ecx]
  41b866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b867:	popa   
  41b868:	mov    cl,0x54
  41b86a:	cdq    
  41b86b:	dec    esp
  41b86c:	into   
  41b86d:	mov    ebp,0xf7fe2941
  41b872:	je     0x41b82d
  41b874:	into   
  41b875:	or     edi,ecx
  41b877:	or     BYTE PTR [ecx-0x6],ch
  41b87a:	into   
  41b87b:	cmp    al,0x2
  41b87d:	push   esi
  41b87e:	mov    al,0xff
  41b880:	adc    esp,DWORD PTR [esi+0x4e]
  41b883:	pop    edi
  41b884:	daa    
  41b885:	jae    0x41b864
  41b887:	xor    al,0xc9
  41b889:	sub    BYTE PTR [edx-0xc92e77],ah
  41b88f:	sbb    eax,ebp
  41b891:	mov    eax,ds:0xb6643042
  41b896:	test   eax,0xb90669ec
  41b89b:	or     BYTE PTR [ebx-0x7f],al
  41b89e:	hlt    
  41b89f:	or     edi,DWORD PTR [eax]
  41b8a1:	rcr    DWORD PTR [edx+ebx*2+0x10],0x82
  41b8a6:	mov    dl,0xb4
  41b8a8:	xchg   esp,eax
  41b8a9:	or     ah,BYTE PTR [ebp-0x3a]
  41b8ac:	div    DWORD PTR [edx+0x4e1f3f11]
  41b8b2:	jg     0x41b90a
  41b8b4:	jp     0x41b8f4
  41b8b6:	data16 (bad) 
  41b8b8:	sub    al,0xca
  41b8ba:	stos   DWORD PTR es:[edi],eax
  41b8bb:	sti    
  41b8bc:	ret    
  41b8bd:	inc    ebp
  41b8be:	hlt    
  41b8bf:	jmp    0x2227:0xa645aebf
  41b8c6:	stos   BYTE PTR es:[edi],al
  41b8c7:	test   BYTE PTR [edi],dh
  41b8c9:	pop    ds
  41b8ca:	push   cs
  41b8cb:	pop    esi
  41b8cc:	add    edi,edi
  41b8ce:	jp     0x41b859
  41b8d0:	push   ebp
  41b8d1:	in     eax,dx
  41b8d2:	(bad)  
  41b8d5:	push   0x13
  41b8d7:	push   eax
  41b8d8:	pop    ecx
  41b8d9:	mov    bh,0xb1
  41b8db:	sub    ch,BYTE PTR [esi+0x75ff5991]
  41b8e1:	cmp    esi,ebp
  41b8e3:	xor    bh,BYTE PTR [esi-0x13145d96]
  41b8e9:	daa    
  41b8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8eb:	inc    ecx
  41b8ec:	lods   eax,DWORD PTR ds:[esi]
  41b8ed:	mov    cl,0x9a
  41b8ef:	lods   eax,DWORD PTR ds:[esi]
  41b8f0:	pop    esi
  41b8f1:	outs   dx,DWORD PTR ds:[esi]
  41b8f2:	add    BYTE PTR [ebx+0x24c9fa86],ah
  41b8f8:	sbb    al,BYTE PTR [edx-0x25]
  41b8fb:	inc    edx
  41b8fc:	jl     0x41b8ef
  41b8fe:	jge    0x41b8ce
  41b900:	jp     0x41b8c9
  41b902:	inc    esi
  41b903:	imul   edi,edx,0x31
  41b906:	inc    ebp
  41b907:	or     BYTE PTR [edi+0x27],ch
  41b90a:	pop    edx
  41b90b:	out    0x32,eax
  41b90d:	and    al,0x14
  41b90f:	nop
  41b910:	or     eax,DWORD PTR [esi-0x23dfff2b]
  41b916:	into   
  41b917:	shr    BYTE PTR [ecx],cl
  41b919:	loop   0x41b95f
  41b91b:	icebp  
  41b91c:	xor    DWORD PTR [ecx-0x30583f04],eax
  41b922:	test   eax,0x469bad49
  41b927:	cmp    BYTE PTR [esi],bh
  41b929:	js     0x41b985
  41b92b:	jle    0x41b99f
  41b92d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b92f:	jge    0x41b8b4
  41b931:	outs   dx,BYTE PTR ds:[esi]
  41b932:	enter  0x26b9,0x39
  41b936:	jae    0x41b8bc
  41b938:	outs   dx,DWORD PTR ds:[esi]
  41b939:	fild   QWORD PTR [esi]
  41b93b:	jg     0x41b911
  41b93d:	adc    DWORD PTR ds:0x6eb4d20f,eax
  41b943:	imul   eax,DWORD PTR [edi-0x1d],0x68
  41b947:	jbe    0x41b983
  41b949:	xchg   BYTE PTR [esi+0x79dc8e43],ch
  41b94f:	jg     0x41b902
  41b951:	adc    eax,0xf4afe8
  41b956:	leave  
  41b957:	cmp    eax,0x5917f122
  41b95c:	and    edx,ebp
  41b95e:	xchg   ch,bh
  41b960:	ss call 0x60ae:0xc0cddefe
  41b968:	dec    esp
  41b969:	retf   0x7361
  41b96c:	aas    
  41b96d:	icebp  
  41b96e:	push   ebp
  41b96f:	pop    ds
  41b970:	pop    ecx
  41b971:	adc    BYTE PTR [esi],cl
  41b973:	jecxz  0x41b94e
  41b975:	(bad)  
  41b976:	or     ch,dh
  41b978:	mov    ds:0x584ef3ff,eax
  41b97d:	sub    al,0xc3
  41b97f:	pop    ecx
  41b980:	jecxz  0x41b977
  41b982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b983:	ja     0x41b9b3
  41b985:	test   BYTE PTR [ecx+0x58dc3ac3],0xf7
  41b98c:	sbb    eax,0x37aaaa50
  41b991:	xchg   ebp,eax
  41b992:	add    ebp,DWORD PTR [ecx+0x34]
  41b995:	adc    eax,0x8717ad5f
  41b99a:	mov    BYTE PTR [ebx-0x2cb35cbf],bl
  41b9a0:	jb     0x41b9bf
  41b9a2:	cld    
  41b9a3:	mov    eax,ds:0xbf7ace06
  41b9a8:	mov    bh,0x41
  41b9aa:	ds pop edi
  41b9ac:	mov    ch,0xc1
  41b9ae:	lock xlat BYTE PTR ds:[ebx]
  41b9b0:	inc    ebp
  41b9b1:	inc    ecx
  41b9b2:	and    BYTE PTR cs:[ebp+0x3f],0x40
  41b9b7:	sbb    bh,BYTE PTR [esi]
  41b9b9:	out    dx,al
  41b9ba:	aas    
  41b9bb:	mov    edx,0x3bb98098
  41b9c0:	lods   al,BYTE PTR ds:[esi]
  41b9c1:	push   esp
  41b9c2:	mov    bl,al
  41b9c4:	mov    bh,0x95
  41b9c6:	cmp    eax,0xeaf73057
  41b9cb:	mov    ds:0x9f0c84d5,al
  41b9d0:	xchg   esp,eax
  41b9d1:	cs adc al,dh
  41b9d4:	cwde   
  41b9d5:	sub    BYTE PTR [esi+0x3c],ah
  41b9d8:	outs   dx,DWORD PTR ds:[esi]
  41b9da:	xchg   DWORD PTR [eax],esp
  41b9dc:	add    ebp,ebx
  41b9de:	retf   0x9d5b
  41b9e1:	cli    
  41b9e2:	add    DWORD PTR [eax+0x23],edi
  41b9e5:	mov    eax,ds:0xc3b0eee2
  41b9ea:	mov    edi,0x9eebf788
  41b9ef:	je     0x41b97b
  41b9f1:	fs pop ds
  41b9f3:	int3   
  41b9f4:	stos   DWORD PTR es:[edi],eax
  41b9f5:	popf   
  41b9f6:	test   BYTE PTR [edx+0x33],dh
  41b9f9:	inc    edi
  41b9fa:	enter  0xcb38,0x8d
  41b9fe:	jns    0x41b9db
  41ba00:	jp     0x41ba2e
  41ba02:	push   eax
  41ba03:	and    DWORD PTR [eax+edi*2+0x1e],0x57a001f
  41ba0b:	inc    edx
  41ba0c:	jp     0x41b9d3
  41ba0e:	mov    DWORD PTR [ebx],ecx
  41ba10:	(bad)  
  41ba12:	xchg   esp,eax
  41ba13:	and    DWORD PTR [eax-0x61adfc1b],esp
  41ba19:	inc    ebx
  41ba1a:	cmp    eax,0x8aa04902
  41ba1f:	or     BYTE PTR [edi],ah
  41ba21:	inc    ebp
  41ba22:	mov    bl,0xe
  41ba24:	fwait
  41ba25:	mov    al,0xe4
  41ba27:	lahf   
  41ba28:	sbb    al,0xef
  41ba2a:	adc    esi,DWORD PTR fs:[edx-0x1f80e27d]
  41ba31:	rcl    ch,0xac
  41ba34:	scas   al,BYTE PTR es:[edi]
  41ba35:	retf   
  41ba36:	fucompp 
  41ba38:	imul   esi,DWORD PTR [esp+ebx*8],0x3b
  41ba3c:	xor    bh,BYTE PTR [edx]
  41ba3e:	and    BYTE PTR [eax+eiz*4-0x2c],ch
  41ba42:	or     eax,DWORD PTR [ebp+0x26]
  41ba45:	cmp    edx,DWORD PTR [ecx]
  41ba47:	jmp    0x6acb:0x8a22985e
  41ba4e:	add    ah,al
  41ba50:	xor    DWORD PTR [ecx+0x5e],esi
  41ba53:	jmp    0x41ba69
  41ba55:	dec    edi
  41ba56:	and    bl,dl
  41ba58:	lods   al,BYTE PTR ds:[esi]
  41ba59:	or     DWORD PTR [edi],esp
  41ba5b:	sub    BYTE PTR [eax],bh
  41ba5d:	cwde   
  41ba5e:	pusha  
  41ba5f:	pop    eax
  41ba60:	es mov al,0xb1
  41ba63:	and    DWORD PTR [ebx+eax*8-0x4fadec22],ebp
  41ba6a:	inc    esi
  41ba6b:	(bad)  
  41ba6c:	cs jo  0x41b9ef
  41ba6f:	ds dec ebx
  41ba71:	out    0x9a,al
  41ba73:	fimul  WORD PTR [edi*8+0x554f5afc]
  41ba7a:	test   esi,esi
  41ba7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba7d:	add    bh,BYTE PTR [esi+0x10]
  41ba80:	fsubr  DWORD PTR [ebx-0x5f47c5e7]
  41ba86:	xchg   esi,eax
  41ba87:	xor    al,0xfd
  41ba89:	jg     0x41ba40
  41ba8b:	mov    edi,0xb7dbe63b
  41ba90:	jg     0x41bb0c
  41ba92:	ins    BYTE PTR es:[edi],dx
  41ba93:	mov    ds:0xb9854abd,al
  41ba98:	rol    BYTE PTR [ebp-0x7b],0x24
  41ba9c:	in     al,0xb
  41ba9e:	fnstcw WORD PTR [esi-0x16]
  41baa1:	sub    eax,0xe2d5b368
  41baa6:	mov    edx,0xb3a1fded
  41baab:	fcomp  QWORD PTR [esp+eax*1]
  41baae:	adc    cl,0xd2
  41bab1:	mov    eax,0x91f6501f
  41bab6:	and    al,0x8
  41bab8:	or     BYTE PTR [edx],dl
  41baba:	mov    esp,0xb69d520a
  41babf:	call   0x4991b748
  41bac4:	pop    esi
  41bac5:	pop    esi
  41bac6:	push   esi
  41bac7:	or     BYTE PTR [esi],dl
  41bac9:	repnz (bad) 
  41bacb:	pusha  
  41bacc:	int    0xea
  41bace:	imul   edi,DWORD PTR [ebp+ebx*4-0x49],0x45
  41bad3:	cli    
  41bad4:	dec    esp
  41bad5:	lds    ebx,FWORD PTR [ebx+eax*2-0x25]
  41bad9:	icebp  
  41bada:	fsubr  DWORD PTR [ecx+0x71]
  41badd:	cmp    DWORD PTR [esi+0x75],esi
  41bae0:	mov    WORD PTR [esi+0x3c64115e],?
  41bae6:	popf   
  41bae7:	mov    bh,ch
  41bae9:	fisubr DWORD PTR [ecx]
  41baeb:	std    
  41baec:	cmp    dh,al
  41baee:	xor    al,0x71
  41baf0:	pop    ebp
  41baf1:	mov    eax,ds:0x4743b54a
  41baf6:	imul   edi,DWORD PTR [eax-0x173306af],0xe12b05b1
  41bb00:	mov    ds:0xb5d7b9ed,eax
  41bb05:	fcomi  st,st(1)
  41bb07:	pop    eax
  41bb08:	adc    al,0x84
  41bb0a:	dec    edx
  41bb0b:	fiadd  WORD PTR [edi+esi*8]
  41bb0e:	xchg   ebx,eax
  41bb0f:	loopne 0x41baff
  41bb11:	mov    ah,0x3e
  41bb13:	into   
  41bb14:	repz test BYTE PTR [eax],0xc9
  41bb18:	add    BYTE PTR [esi+0x3d401046],ah
  41bb1e:	cdq    
  41bb1f:	dec    eax
  41bb20:	adc    eax,eax
  41bb22:	xchg   esp,eax
  41bb23:	loope  0x41baed
  41bb25:	jnp    0x41bb65
  41bb27:	mov    ebx,0xf9fa8ca
  41bb2c:	xchg   ebp,eax
  41bb2d:	adc    DWORD PTR [eax+0x36],eax
  41bb30:	leave  
  41bb31:	and    al,0xe9
  41bb33:	repz jbe 0x41bb75
  41bb36:	push   edx
  41bb37:	inc    esp
  41bb38:	test   al,0xbc
  41bb3a:	mov    dl,0x75
  41bb3c:	inc    edx
  41bb3d:	xchg   esp,eax
  41bb3e:	fisub  DWORD PTR [edx]
  41bb40:	retf   
  41bb41:	dec    edx
  41bb42:	push   esi
  41bb43:	pop    ss
  41bb44:	dec    edx
  41bb45:	push   ebx
  41bb46:	add    edi,edx
  41bb48:	in     eax,0x1a
  41bb4a:	push   edx
  41bb4b:	push   ebx
  41bb4c:	push   ss
  41bb4d:	retf   0x9d5a
  41bb50:	idiv   DWORD PTR [ecx+0x8]
  41bb53:	push   cs
  41bb54:	rcr    bl,0xc5
  41bb57:	cli    
  41bb58:	ins    DWORD PTR es:[edi],dx
  41bb59:	jns    0x41bb2a
  41bb5b:	fsubr  st,st(3)
  41bb5d:	mov    DWORD PTR [edi-0x4a],eax
  41bb60:	aad    0x5f
  41bb62:	or     eax,0x19016ad7
  41bb67:	sahf   
  41bb68:	ins    BYTE PTR es:[edi],dx
  41bb69:	(bad)  
  41bb6a:	fcom   QWORD PTR [ebx+ebp*1-0x375a2f85]
  41bb71:	push   edi
  41bb72:	jmp    0x681e250a
  41bb77:	jl     0x41bb8e
  41bb79:	add    eax,0xe05a400b
  41bb7e:	jge    0x41bb71
  41bb80:	cmp    dl,BYTE PTR [eax]
  41bb82:	cmp    ebx,DWORD PTR [ebp-0xd]
  41bb85:	add    eax,DWORD PTR [edi-0x6682d7a7]
  41bb8b:	imul   edi,DWORD PTR [ecx-0x6a0aea4e],0xffffff99
  41bb92:	jle    0x41bbe5
  41bb94:	push   es
  41bb95:	mov    gs,ebx
  41bb97:	xchg   esi,eax
  41bb98:	or     eax,0x75588783
  41bb9d:	xor    al,0xc0
  41bb9f:	test   DWORD PTR [ebx],0xdb16e3d7
  41bba5:	ja     0x41bc22
  41bba7:	dec    ebx
  41bba8:	jns    0x41bbc6
  41bbaa:	std    
  41bbab:	or     dl,dl
  41bbad:	loope  0x41bb96
  41bbaf:	push   esp
  41bbb0:	test   BYTE PTR [edi-0x6b],cl
  41bbb3:	jg     0x41bb5e
  41bbb5:	ret    0xaffb
  41bbb8:	sbb    eax,0x1247f313
  41bbbd:	leave  
  41bbbe:	jg     0x41bc1c
  41bbc0:	push   ss
  41bbc1:	mov    ah,0xaa
  41bbc3:	in     al,0x2
  41bbc5:	sub    ch,BYTE PTR [edx-0x611e12ff]
  41bbcb:	pop    es
  41bbcc:	or     DWORD PTR [edi+eax*1-0x1a],ebx
  41bbd0:	psubw  mm6,QWORD PTR ds:0x675de95c
  41bbd7:	imul   BYTE PTR [edi+ebx*4-0x34]
  41bbdb:	mov    esp,ebx
  41bbdd:	pop    edx
  41bbde:	(bad)  
  41bbdf:	es out 0x72,eax
  41bbe2:	mov    cl,ah
  41bbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe5:	cmp    BYTE PTR [esi-0x52c1158a],bh
  41bbeb:	lds    ebp,FWORD PTR ds:[eax-0xf8435a8]
  41bbf2:	movlhps xmm7,xmm2
  41bbf5:	lods   al,BYTE PTR ds:[esi]
  41bbf6:	adc    cl,BYTE PTR [esi-0xfa6c405]
  41bbfc:	add    al,0x9c
  41bbfe:	xchg   esi,eax
  41bbff:	cmp    eax,0x2d011dc8
  41bc04:	ins    DWORD PTR es:[edi],dx
  41bc05:	and    cl,al
  41bc07:	idiv   DWORD PTR [edx+0x69ba23b5]
  41bc0d:	xor    DWORD PTR [esi],0xdb67e49f
  41bc13:	js     0x41bbcd
  41bc15:	out    dx,al
  41bc16:	repnz out dx,eax
  41bc18:	inc    ebx
  41bc19:	in     al,0x7e
  41bc1b:	fiadd  DWORD PTR [ecx+0x17169b03]
  41bc21:	inc    ebp
  41bc22:	xchg   DWORD PTR [edx],ebp
  41bc24:	and    ecx,DWORD PTR [esi]
  41bc26:	xlat   BYTE PTR ds:[ebx]
  41bc27:	mov    cl,0x30
  41bc29:	scas   eax,DWORD PTR es:[edi]
  41bc2a:	(bad)  
  41bc2b:	int3   
  41bc2c:	dec    edi
  41bc2d:	inc    ecx
  41bc2e:	and    dh,dh
  41bc30:	ror    dl,1
  41bc32:	dec    edi
  41bc33:	mov    ah,0x69
  41bc35:	int    0xc8
  41bc37:	pop    edi
  41bc38:	sbb    BYTE PTR [ebp+0x3e290a88],dh
  41bc3e:	add    ch,BYTE PTR [ebp-0x9]
  41bc41:	leave  
  41bc42:	test   DWORD PTR [eax-0x56],edx
  41bc45:	push   ds
  41bc46:	pusha  
  41bc47:	sub    eax,0xd125aee3
  41bc4c:	add    eax,DWORD PTR [ebp-0x4ff8da21]
  41bc52:	mov    edx,0x32cee22e
  41bc57:	jl     0x41bbeb
  41bc59:	retf   0x430
  41bc5c:	or     BYTE PTR [eax],dh
  41bc5e:	mul    DWORD PTR [eax-0x73]
  41bc61:	in     al,dx
  41bc62:	outs   dx,DWORD PTR ds:[esi]
  41bc63:	cmc    
  41bc64:	imul   ebp,DWORD PTR [eax-0x7a],0xffffffa3
  41bc68:	test   al,0xdf
  41bc6a:	inc    ebp
  41bc6b:	push   ecx
  41bc6c:	jmp    0xa97d:0x30ad3114
  41bc73:	mov    eax,0xaeed5dd7
  41bc78:	je     0x41bce0
  41bc7a:	mov    ch,0xb4
  41bc7c:	pop    ss
  41bc7d:	int    0x40
  41bc7f:	mov    ds:0x45e7cc79,al
  41bc84:	js     0x41bc17
  41bc86:	neg    DWORD PTR [edi+0x72bfc8a8]
  41bc8c:	imul   ecx
  41bc8e:	mov    dh,0x5
  41bc90:	mov    ?,WORD PTR [eax+ecx*1+0x716f5b92]
  41bc97:	(bad)  
  41bc98:	pop    edi
  41bc99:	inc    edi
  41bc9a:	pop    ecx
  41bc9b:	jns    0x41bca8
  41bc9d:	xor    BYTE PTR ds:0xc57ec038,al
  41bca3:	sbb    BYTE PTR [ebx+ebp*1+0x2f70944d],bl
  41bcaa:	cmp    edx,0x4aa7faeb
  41bcb0:	fadd   DWORD PTR [edi+0x41060315]
  41bcb6:	push   ecx
  41bcb7:	call   0x8dcc:0x88a5547
  41bcbe:	(bad)  
  41bcbf:	rol    DWORD PTR [edi+0x3f],cl
  41bcc2:	in     eax,0xf4
  41bcc4:	mov    ebx,0xf6548dd8
  41bcc9:	cmp    ah,BYTE PTR [ecx]
  41bccb:	or     al,0xb2
  41bccd:	pusha  
  41bcce:	retf   
  41bccf:	or     DWORD PTR [ebx+edi*8],0x7f
  41bcd3:	sbb    esi,DWORD PTR [edi+0x14]
  41bcd6:	jmp    0xf2d71367
  41bcdb:	mov    eax,ds:0xd965f78e
  41bce0:	adc    DWORD PTR [edi],edi
  41bce2:	test   eax,0x677c2075
  41bce7:	adc    al,BYTE PTR [ebx-0x63707273]
  41bced:	xchg   ebp,eax
  41bcee:	ja     0x41bcce
  41bcf0:	inc    edi
  41bcf1:	push   cs
  41bcf2:	mov    WORD PTR [ecx-0x57],?
  41bcf5:	cli    
  41bcf6:	dec    edx
  41bcf7:	sub    ebx,DWORD PTR [ecx+0x57]
  41bcfa:	std    
  41bcfb:	xor    BYTE PTR [ebx],dl
  41bcfd:	sub    BYTE PTR ds:0x8052a80a,0x5a
  41bd04:	add    DWORD PTR [edi],edx
  41bd06:	out    0xf2,eax
  41bd08:	xlat   BYTE PTR ds:[ebx]
  41bd09:	gs xchg ecx,eax
  41bd0b:	xchg   DWORD PTR [edi],eax
  41bd0d:	nop
  41bd0e:	addr16 push cs
  41bd10:	or     eax,0x76643bbf
  41bd15:	retf   
  41bd16:	dec    esp
  41bd17:	jns    0x41bd79
  41bd19:	mov    cl,0xe5
  41bd1b:	sbb    edi,ecx
  41bd1d:	in     al,dx
  41bd1e:	stos   DWORD PTR es:[edi],eax
  41bd1f:	(bad)  
  41bd20:	std    
  41bd21:	add    eax,0x3193aa4f
  41bd26:	pop    es
  41bd27:	or     al,0xdd
  41bd29:	int3   
  41bd2a:	sbb    ch,ch
  41bd2c:	jns    0x41bd29
  41bd2e:	sbb    BYTE PTR [ebp-0x5742d419],bh
  41bd34:	push   0xbf6a2372
  41bd39:	push   0x54
  41bd3b:	jg     0x41bd0d
  41bd3d:	and    al,0xb4
  41bd3f:	jmp    0x41bd20
  41bd41:	push   0xffffffea
  41bd43:	cli    
  41bd44:	xchg   edx,eax
  41bd45:	push   esp
  41bd46:	repnz mov esi,0xffead3b8
  41bd4c:	nop
  41bd4d:	jae    0x41bcde
  41bd4f:	js     0x41bdaf
  41bd51:	ret    
  41bd52:	or     dh,BYTE PTR ds:0x54456fd4
  41bd58:	fs cdq 
  41bd5a:	lock push ecx
  41bd5c:	xchg   edx,eax
  41bd5d:	mov    edi,0x3a2d8838
  41bd62:	push   ds
  41bd63:	pusha  
  41bd64:	mov    WORD PTR [eax-0x41],gs
  41bd67:	hlt    
  41bd68:	das    
  41bd69:	xor    BYTE PTR [ebx+eiz*2+0x4b],0x1
  41bd6e:	xchg   edx,eax
  41bd6f:	adc    BYTE PTR [ebx+0x1f],dh
  41bd72:	test   DWORD PTR [ecx+0x3dfbf2c7],ecx
  41bd78:	sar    DWORD PTR [esi-0x70],0x48
  41bd7c:	cmp    bh,ch
  41bd7e:	xlat   BYTE PTR ds:[ebx]
  41bd7f:	std    
  41bd80:	clc    
  41bd81:	in     eax,0xfd
  41bd83:	or     eax,0x7499ecb0
  41bd88:	sub    eax,0x4702da67
  41bd8d:	nop
  41bd8e:	xchg   ecx,eax
  41bd8f:	fist   DWORD PTR [ecx+0x7]
  41bd92:	sub    eax,0xf260905f
  41bd97:	mov    BYTE PTR [eax],dl
  41bd99:	(bad)  [edi]
  41bd9b:	enter  0xc4fb,0xf4
  41bd9f:	inc    DWORD PTR [edx+0x6ce58e0b]
  41bda5:	dec    ebx
  41bda6:	pusha  
  41bda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda8:	inc    ebx
  41bda9:	mov    dl,0xac
  41bdab:	xchg   ecx,eax
  41bdac:	std    
  41bdad:	(bad)  
  41bdaf:	out    dx,eax
  41bdb0:	idiv   BYTE PTR [eax-0x1c]
  41bdb3:	or     dh,ah
  41bdb5:	(bad)  
  41bdb6:	mov    ch,0xd4
  41bdb8:	inc    ebx
  41bdb9:	cld    
  41bdba:	and    ch,BYTE PTR [eax-0x3b00a836]
  41bdc0:	cli    
  41bdc1:	imul   esp,DWORD PTR [ecx+ecx*8-0x2d8ee2d1],0xdde12f
  41bdcc:	cmovle eax,DWORD PTR [eax+edx*8+0x1b]
  41bdd1:	hlt    
  41bdd2:	test   DWORD PTR [ebx],edx
  41bdd4:	pop    ss
  41bdd5:	and    eax,DWORD PTR [edi+0x428daebf]
  41bddb:	mov    bl,0x9e
  41bddd:	push   edi
  41bdde:	pushf  
  41bddf:	retf   
  41bde0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde1:	add    ebx,DWORD PTR [eax+0x4f]
  41bde4:	pop    eax
  41bde5:	in     eax,dx
  41bde6:	or     BYTE PTR [ebx+ebp*8],0x88
  41bdea:	dec    ebx
  41bdeb:	(bad)  
  41bdec:	xor    eax,0xbce1425c
  41bdf1:	xchg   ebx,eax
  41bdf2:	stc    
  41bdf3:	cmp    eax,0xb07c543a
  41bdf8:	retf   0x95ba
  41bdfb:	ins    DWORD PTR es:[edi],dx
  41bdfc:	mov    dl,0x39
  41bdfe:	cmp    DWORD PTR [ecx-0x226691a],ebx
  41be04:	adc    eax,0x3f89fd0
  41be09:	loop   0x41be0a
  41be0b:	inc    ebx
  41be0c:	cmc    
  41be0d:	jo     0x41bde1
  41be0f:	xor    DWORD PTR [ebx-0x3a8f091f],0xffffffc9
  41be16:	rol    DWORD PTR [ebx-0x142fc62],1
  41be1c:	loope  0x41bdd1
  41be1e:	pop    ebx
  41be1f:	call   0xe9e4e72b
  41be24:	cdq    
  41be25:	jmp    0x41bdef
  41be27:	sbb    BYTE PTR [edx+ecx*1-0x9],dh
  41be2b:	aad    0xbc
  41be2d:	bound  ebx,QWORD PTR [esi-0x5]
  41be30:	sbb    BYTE PTR [edx],0xaf
  41be33:	xor    eax,0x974fec89
  41be38:	push   ebp
  41be39:	jnp    0x41be38
  41be3b:	mov    eax,ds:0x1717aff6
  41be40:	outs   dx,DWORD PTR ds:[esi]
  41be41:	add    ecx,eax
  41be43:	mov    ecx,0x3cc24a28
  41be48:	ffree  st(1)
  41be4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be4b:	test   DWORD PTR [edi+0x4c9dce6d],ebp
  41be51:	push   edx
  41be52:	adc    al,0x59
  41be54:	std    
  41be55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be56:	retf   0x912e
  41be59:	inc    DWORD PTR [ebx-0x40f98a8d]
  41be5f:	ins    BYTE PTR es:[edi],dx
  41be60:	retf   0x88f8
  41be63:	add    cl,0x15
  41be66:	cdq    
  41be67:	scas   al,BYTE PTR es:[edi]
  41be68:	pop    ebp
  41be69:	pop    eax
  41be6a:	rcr    dh,0xa2
  41be6d:	xchg   ebp,eax
  41be6e:	daa    
  41be6f:	ins    DWORD PTR es:[edi],dx
  41be70:	mov    dl,0x80
  41be72:	or     ch,ah
  41be74:	arpl   WORD PTR [ebx+edx*4],di
  41be77:	jl     0x41bedd
  41be79:	cmp    BYTE PTR [edi+0x24952964],ch
  41be7f:	(bad)  
  41be80:	cmp    ecx,DWORD PTR [esi+0x6d]
  41be83:	add    eax,0x9b4d67aa
  41be88:	pop    ds
  41be89:	cmp    dl,bh
  41be8b:	mov    eax,ds:0x3130d883
  41be90:	sub    eax,0xe6ccc80f
  41be95:	fnsave [edi+0x36c1a010]
  41be9b:	jb     0x41bee5
  41be9d:	fild   DWORD PTR ds:0xb40fc13e
  41bea3:	mov    bl,0x8c
  41bea5:	outs   dx,DWORD PTR ds:[esi]
  41bea6:	xchg   edx,eax
  41bea7:	test   eax,0xe8700ae8
  41beac:	repz ja 0x41bedf
  41beaf:	shl    DWORD PTR [esi],1
  41beb1:	push   esi
  41beb2:	add    BYTE PTR [ebx+0x6fbb0a9a],dh
  41beb8:	and    DWORD PTR [ebx],0x79a352d1
  41bebe:	xchg   ebx,eax
  41bebf:	xchg   ecx,eax
  41bec0:	or     DWORD PTR [edx],eax
  41bec2:	sub    BYTE PTR [ebx],dh
  41bec4:	shr    BYTE PTR [ebp-0x7ace7834],1
  41beca:	pop    ebx
  41becb:	jle    0x41bed1
  41becd:	add    ch,BYTE PTR [ecx]
  41becf:	xchg   esp,eax
  41bed0:	daa    
  41bed1:	sub    al,0x2d
  41bed3:	leave  
  41bed4:	scas   eax,DWORD PTR es:[edi]
  41bed5:	and    esi,DWORD PTR [ecx]
  41bed7:	ds jae 0x41be5c
  41beda:	call   0xacb1:0xe81ea8ff
  41bee1:	das    
  41bee2:	inc    eax
  41bee3:	jmp    0x41be6b
  41bee5:	xchg   edx,eax
  41bee6:	jmp    0x5be9:0x3aac478d
  41beed:	ins    DWORD PTR es:[edi],dx
  41beee:	sbb    eax,0xe5c6f315
  41bef3:	clc    
  41bef4:	mov    eax,DWORD PTR [edx]
  41bef6:	call   0x3e0ad4dd
  41befb:	dec    ecx
  41befc:	and    eax,0xc9d52533
  41bf01:	ret    0xdec4
  41bf04:	add    dh,dh
  41bf06:	add    ebx,ebx
  41bf08:	sub    dh,bl
  41bf0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf0b:	arpl   WORD PTR [ebp+esi*8+0x1fca2244],si
  41bf12:	dec    esi
  41bf13:	addr16 in al,dx
  41bf15:	or     ebp,DWORD PTR [eax-0x4bbff57]
  41bf1b:	mov    BYTE PTR [edi+ebp*4],ah
  41bf1e:	icebp  
  41bf1f:	adc    DWORD PTR [ebx+0x3f],ebx
  41bf22:	adc    edi,DWORD PTR [edi]
  41bf24:	jmp    0x122cba9c
  41bf29:	aad    0xec
  41bf2b:	rcl    DWORD PTR [ebp-0x7e50870e],0x40
  41bf32:	in     eax,dx
  41bf33:	xor    eax,0x58fa5af
  41bf38:	pusha  
  41bf39:	loop   0x41bf69
  41bf3b:	push   0x1e
  41bf3d:	xchg   esp,eax
  41bf3e:	imul   ebp,edi,0xffffff95
  41bf41:	pop    edx
  41bf42:	outs   dx,BYTE PTR ds:[esi]
  41bf43:	unpckhps xmm7,XMMWORD PTR [esi-0x2f8fad86]
  41bf4a:	repz jo 0x41bef0
  41bf4d:	and    eax,DWORD PTR [si]
  41bf50:	cmp    eax,DWORD PTR [edx-0x59101e72]
  41bf56:	cmp    ebx,DWORD PTR [esi-0x1a]
  41bf59:	faddp  st(4),st
  41bf5b:	mov    bl,0xda
  41bf5d:	scas   al,BYTE PTR es:[edi]
  41bf5e:	in     eax,0xa7
  41bf60:	mov    dl,0x85
  41bf62:	add    eax,0x2713a96f
  41bf67:	test   al,0x16
  41bf69:	jb     0x41bfc3
  41bf6b:	rol    ecx,cl
  41bf6d:	xchg   ecx,eax
  41bf6e:	and    al,0xc3
  41bf70:	pop    eax
  41bf71:	sub    eax,DWORD PTR [esi-0xe]
  41bf74:	xlat   BYTE PTR ds:[ebx]
  41bf75:	xchg   ecx,eax
  41bf76:	adc    edx,ebp
  41bf78:	inc    ecx
  41bf79:	adc    eax,0xcc02afc7
  41bf7e:	or     bl,BYTE PTR [esi]
  41bf80:	xchg   DWORD PTR [ebp-0x16],ecx
  41bf83:	call   0xca1c:0xe01f9626
  41bf8a:	or     dh,bh
  41bf8c:	inc    esp
  41bf8d:	mov    esp,0xfb7ca680
  41bf92:	inc    edx
  41bf93:	xchg   ecx,eax
  41bf94:	sbb    dh,BYTE PTR [eax+0x5bd95eab]
  41bf9a:	pusha  
  41bf9b:	jle    0x41bffa
  41bf9d:	enter  0xc036,0xf5
  41bfa1:	mov    edx,0x916d8205
  41bfa6:	mov    dl,0xd7
  41bfa8:	gs sbb al,ch
  41bfab:	pusha  
  41bfac:	in     eax,dx
  41bfad:	jle    0x41bfcc
  41bfaf:	retf   0x5df4
  41bfb2:	(bad)  
  41bfb3:	push   edx
  41bfb4:	popf   
  41bfb5:	lea    ebp,[ebx+edi*2]
  41bfb8:	cmp    esi,DWORD PTR [eax-0x6479288f]
  41bfbe:	fidivr DWORD PTR [ecx+0xd]
  41bfc1:	push   esp
  41bfc2:	mov    ebx,0x1d40a232
  41bfc7:	dec    ebx
  41bfc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc9:	arpl   WORD PTR [eax+0x38],bx
  41bfcc:	out    dx,al
  41bfcd:	test   al,0x8d
  41bfcf:	popa   
  41bfd0:	mov    al,ds:0x3288a247
  41bfd5:	mov    eax,0x71bb639a
  41bfda:	push   DWORD PTR [edx-0x7388d957]
  41bfe0:	cwde   
  41bfe1:	inc    esp
  41bfe2:	stos   DWORD PTR es:[edi],eax
  41bfe3:	push   ds
  41bfe4:	jecxz  0x41c03a
  41bfe6:	and    eax,0x90695747
  41bfeb:	adc    esp,DWORD PTR [ebx]
  41bfed:	or     al,0xf9
  41bfef:	cmp    esi,DWORD PTR [edi]
  41bff1:	jbe    0x41bf73
  41bff3:	in     al,dx
  41bff4:	push   ebx
  41bff5:	push   ecx
  41bff6:	cmp    ch,dh
  41bff8:	in     eax,0x6e
  41bffa:	outs   dx,BYTE PTR ds:[esi]
  41bffb:	fdiv   QWORD PTR [edi-0x4d6ddbed]
  41c001:	pop    ds
  41c002:	sub    dl,BYTE PTR [ebx]
  41c004:	dec    edx
  41c005:	push   ebp
  41c006:	mov    cl,0x96
  41c008:	ror    BYTE PTR [ebp+0x2c],0x1
  41c00c:	adc    dl,dh
  41c00e:	mov    ds:0x46f6f6e,eax
  41c013:	sbb    DWORD PTR [ebp+0x6d],0xffffffbc
  41c017:	pop    eax
  41c018:	xor    ebp,DWORD PTR [ecx+eiz*8]
  41c01b:	test   al,0x1f
  41c01d:	fwait
  41c01e:	dec    edx
  41c01f:	push   ss
  41c020:	ficom  WORD PTR [edi+esi*1+0x73]
  41c024:	in     eax,dx
  41c025:	add    ch,dl
  41c027:	lahf   
  41c028:	jbe    0x41bfb2
  41c02a:	mov    cr2,edi
  41c02d:	repnz and bh,BYTE PTR [esi+edx*4+0x1cb2769f]
  41c035:	in     al,dx
  41c036:	sbb    BYTE PTR ds:0x10f0d660,al
  41c03c:	pop    ss
  41c03d:	mov    ds:0xade946e4,eax
  41c042:	mov    ecx,0x420096b5
  41c047:	nop
  41c048:	leave  
  41c049:	test   BYTE PTR [edx],bh
  41c04b:	test   al,0x42
  41c04d:	mov    BYTE PTR [esi+eiz*4+0x630b139c],ch
  41c054:	push   esi
  41c055:	icebp  
  41c056:	push   ss
  41c057:	in     al,dx
  41c058:	add    dl,bl
  41c05a:	cmp    DWORD PTR [edx],esp
  41c05c:	jne    0x41c08d
  41c05e:	js     0x41c048
  41c060:	ds push ebx
  41c062:	das    
  41c063:	dec    ebp
  41c064:	mov    BYTE PTR [edx+0x30],bl
  41c067:	inc    ebp
  41c068:	sahf   
  41c069:	push   ebp
  41c06a:	(bad)  
  41c06b:	or     al,0x3f
  41c06d:	push   ebp
  41c06e:	imul   ebp,DWORD PTR [edx-0x1786c500],0xab9dbca8
  41c078:	fadd   DWORD PTR [edi]
  41c07a:	cmp    BYTE PTR [ecx-0xb],ch
  41c07d:	call   0xf06c3493
  41c082:	sbb    al,0x2e
  41c084:	inc    ebx
  41c085:	(bad)  
  41c086:	repz xor bl,al
  41c089:	(bad)  
  41c08b:	cwde   
  41c08c:	xchg   esi,eax
  41c08d:	adc    esp,eax
  41c08f:	pop    ds
  41c090:	adc    eax,0xb9e4f985
  41c095:	ret    
  41c096:	lahf   
  41c097:	loope  0x41c055
  41c099:	pop    ds
  41c09a:	jp     0x41c10b
  41c09c:	xor    edi,ecx
  41c09e:	mov    DWORD PTR [eax+eiz*1-0x4b],ebp
  41c0a2:	ins    DWORD PTR es:[edi],dx
  41c0a3:	loop   0x41c06b
  41c0a5:	fsubr  DWORD PTR [ebx-0x3d]
  41c0a8:	and    dl,cl
  41c0aa:	jp     0x41c082
  41c0ac:	loop   0x41c069
  41c0ae:	sub    DWORD PTR [bp+0x30bf],ebp
  41c0b3:	cmp    edx,esp
  41c0b5:	scas   eax,DWORD PTR es:[edi]
  41c0b6:	imul   ebx,ecx,0xb34457c
  41c0bc:	repz icebp 
  41c0be:	imul   ebp,DWORD PTR [edi+0x40],0xffffff8e
  41c0c2:	test   BYTE PTR [edi-0x3a1a15b3],bh
  41c0c8:	sbb    al,0xc3
  41c0ca:	or     al,0xe5
  41c0cc:	js     0x41c076
  41c0ce:	jns    0x41c0d9
  41c0d0:	in     al,dx
  41c0d1:	sbb    BYTE PTR [edi],ah
  41c0d3:	sub    bh,bh
  41c0d5:	jmp    0xf1dfa6fa
  41c0da:	cdq    
  41c0db:	xor    eax,DWORD PTR [ebx-0x480599ba]
  41c0e1:	int3   
  41c0e2:	jle    0x41c15f
  41c0e4:	dec    ebp
  41c0e5:	cmovnp edx,ebp
  41c0e8:	gs data16 fldl2t 
  41c0ec:	sbb    al,0xbc
  41c0ee:	int3   
  41c0ef:	aaa    
  41c0f0:	pop    ds
  41c0f1:	adc    BYTE PTR [si],bl
  41c0f4:	inc    BYTE PTR [edx+0x65]
  41c0f7:	sub    bh,dl
  41c0f9:	dec    ecx
  41c0fb:	pop    edx
  41c0fc:	fldl2e 
  41c0fe:	mov    edi,0xe80f9082
  41c103:	mov    DWORD PTR [ecx-0x4d55d43c],ebp
  41c109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c10a:	mov    bl,0x11
  41c10c:	xor    cl,cl
  41c10e:	and    BYTE PTR [edx],ah
  41c110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c111:	out    dx,eax
  41c112:	add    BYTE PTR [ebx],bh
  41c114:	ins    DWORD PTR es:[edi],dx
  41c115:	fistp  QWORD PTR [edi+eiz*8-0x7fb94466]
  41c11c:	iret   
  41c11d:	pop    ss
  41c11e:	sbb    eax,0xedb59dd3
  41c123:	int    0x8f
  41c125:	sub    eax,0x5527d601
  41c12a:	jp     0x41c133
  41c12c:	pop    esi
  41c12d:	jae    0x41c163
  41c12f:	lods   eax,DWORD PTR ds:[esi]
  41c130:	imul   DWORD PTR [edx]
  41c132:	dec    edi
  41c133:	pop    ebp
  41c134:	cmp    dl,BYTE PTR ds:0x67ac1284
  41c13a:	test   al,0xd1
  41c13c:	mov    al,ds:0x3400b45c
  41c141:	add    edx,esi
  41c143:	(bad)  
  41c144:	(bad)  
  41c146:	les    ebx,FWORD PTR [ebx]
  41c148:	xchg   DWORD PTR [eax-0xe81b937],ebx
  41c14e:	xchg   edx,eax
  41c14f:	mov    edi,0x8fddd040
  41c154:	pop    esp
  41c155:	xor    al,BYTE PTR [ecx+0x15]
  41c158:	push   ebp
  41c159:	push   ds
  41c15a:	xchg   dh,dl
  41c15c:	push   ds
  41c15d:	int3   
  41c15e:	fld    DWORD PTR [edx]
  41c160:	jno    0x41c17a
  41c162:	icebp  
  41c163:	xor    BYTE PTR [esp+ebp*1],ch
  41c166:	cs push ebx
  41c168:	xchg   ebp,eax
  41c169:	popa   
  41c16a:	les    ebx,FWORD PTR [ebx]
  41c16c:	int    0xa
  41c16e:	pop    edi
  41c16f:	cmp    esi,DWORD PTR [ebx-0x74]
  41c172:	sbb    eax,0x81438007
  41c177:	and    al,0x7d
  41c179:	or     ecx,ebx
  41c17b:	arpl   di,ax
  41c17d:	test   BYTE PTR [edi-0x68],ah
  41c180:	jp     0x41c1d5
  41c182:	fs pop edi
  41c184:	or     eax,0xcec32c01
  41c189:	cwde   
  41c18a:	clc    
  41c18b:	std    
  41c18c:	out    dx,al
  41c18d:	je     0x41c163
  41c18f:	inc    ebp
  41c190:	jae    0x41c1aa
  41c192:	lock sbb eax,0xc82fdea7
  41c198:	sub    edx,DWORD PTR [ebx+0x36]
  41c19b:	inc    edi
  41c19c:	test   BYTE PTR [esi-0x17e1f598],cl
  41c1a2:	sub    edi,DWORD PTR [eax+0x57]
  41c1a5:	in     al,dx
  41c1a6:	pop    eax
  41c1a7:	inc    ebp
  41c1a8:	sbb    dl,BYTE PTR [edx-0x77af69a5]
  41c1ae:	adc    eax,0x89e4709d
  41c1b3:	dec    ecx
  41c1b4:	jmp    0xcebe:0x511f59c5
  41c1bb:	cwde   
  41c1bc:	sbb    al,0x16
  41c1be:	xor    DWORD PTR [ebx-0x78],ebx
  41c1c1:	jp     0x41c1dc
  41c1c3:	push   ss
  41c1c4:	ret    0x5763
  41c1c7:	mov    cl,0xf5
  41c1c9:	outs   dx,DWORD PTR ds:[esi]
  41c1ca:	add    al,0x9f
  41c1cc:	imul   ebp,DWORD PTR [ebx],0x42
  41c1cf:	fnstcw WORD PTR [esi+0x76]
  41c1d2:	aaa    
  41c1d3:	or     esi,ebp
  41c1d5:	sbb    eax,0x3dc49e04
  41c1da:	(bad)  
  41c1dc:	stos   DWORD PTR es:[edi],eax
  41c1dd:	add    esi,DWORD PTR [esi-0x78]
  41c1e0:	push   es
  41c1e1:	jae    0x41c1ab
  41c1e3:	jmp    0x76a9d59a
  41c1e8:	retf   
  41c1e9:	push   ecx
  41c1ea:	xchg   DWORD PTR [ebx],eax
  41c1ec:	std    
  41c1ed:	stc    
  41c1ee:	xchg   ebx,eax
  41c1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f0:	repnz or al,0x43
  41c1f3:	nop    DWORD PTR ds:0x131e6b34
  41c1fa:	sub    DWORD PTR [edi],ebp
  41c1fc:	mov    DWORD PTR ds:0x3107b73b,esi
  41c202:	adc    eax,0x8688c97d
  41c207:	dec    edi
  41c208:	mov    dh,0x63
  41c20a:	mov    ah,0xa8
  41c20c:	push   es
  41c20d:	enter  0x3d79,0x55
  41c211:	and    bh,BYTE PTR [eax-0x2ca73209]
  41c217:	push   esi
  41c218:	jge    0x41c1b5
  41c21a:	xor    edi,DWORD PTR [edi+0x76]
  41c21d:	test   DWORD PTR [edx],edx
  41c21f:	out    dx,al
  41c220:	pop    esi
  41c221:	or     al,0x18
  41c223:	sub    al,0xd6
  41c225:	pop    ds
  41c226:	nop
  41c227:	xor    bh,ch
  41c229:	cmp    ebx,DWORD PTR [ebx+ecx*2]
  41c22c:	out    0xcc,eax
  41c22e:	dec    ebx
  41c22f:	xchg   esi,eax
  41c230:	xchg   ebp,eax
  41c231:	inc    ecx
  41c232:	sbb    BYTE PTR [ebp-0x78],al
  41c235:	jbe    0x41c280
  41c237:	jmp    0x41c202
  41c239:	imul   eax,DWORD PTR [eax],0xffffff93
  41c23c:	das    
  41c23d:	in     al,dx
  41c23e:	por    mm7,mm3
  41c241:	nop
  41c242:	jae    0x41c26b
  41c244:	mov    bh,0xe9
  41c246:	ss out 0xdf,eax
  41c249:	pop    ds
  41c24a:	sub    BYTE PTR [ebx+0x4f3b6ca0],0x6b
  41c251:	push   esi
  41c252:	sti    
  41c253:	arpl   bp,bp
  41c255:	or     eax,DWORD PTR [edx-0x172fff04]
  41c25b:	dec    edx
  41c25c:	mov    al,0x5b
  41c25e:	lods   eax,DWORD PTR ds:[esi]
  41c25f:	loope  0x41c2db
  41c261:	rcr    BYTE PTR [ecx+0x77596f20],1
  41c267:	xchg   esp,eax
  41c268:	adc    edx,DWORD PTR [edx+ebx*1]
  41c26b:	aad    0x35
  41c26d:	mov    dh,0x78
  41c26f:	cmp    al,0x51
  41c271:	js     0x41c23e
  41c273:	ins    DWORD PTR es:[edi],dx
  41c274:	inc    edi
  41c275:	js     0x41c23a
  41c277:	or     al,0x29
  41c279:	test   cl,0x27
  41c27c:	dec    edx
  41c27d:	ret    0x62bc
  41c280:	shr    BYTE PTR [ecx+edx*4],cl
  41c283:	sbb    DWORD PTR [ebp-0x7423b46a],ecx
  41c289:	mov    BYTE PTR [ebx+0x35680ae6],bl
  41c28f:	shl    BYTE PTR [edx],cl
  41c291:	lods   al,BYTE PTR ds:[esi]
  41c292:	dec    esp
  41c293:	imul   esi,edi,0xffffffcd
  41c296:	fisttp WORD PTR [edx+0x1f]
  41c299:	call   0x92b0:0xada5114c
  41c2a0:	adc    al,0x28
  41c2a2:	out    0x76,eax
  41c2a4:	pop    ebp
  41c2a5:	and    DWORD PTR [esi],ebp
  41c2a7:	retf   
  41c2a8:	aad    0x63
  41c2aa:	jmp    0xdf026c9e
  41c2af:	sbb    eax,0xd763c435
  41c2b4:	or     BYTE PTR [ebx],0xac
  41c2b7:	cwde   
  41c2b8:	add    BYTE PTR [edi-0x46285860],ah
  41c2be:	jo     0x41c2a1
  41c2c0:	sub    dl,BYTE PTR [eax-0x2c]
  41c2c3:	or     al,dh
  41c2c5:	ins    BYTE PTR es:[edi],dx
  41c2c6:	lods   eax,DWORD PTR ds:[esi]
  41c2c7:	in     al,0xf1
  41c2c9:	add    bl,BYTE PTR [edx]
  41c2cb:	add    dl,dh
  41c2cd:	dec    edi
  41c2ce:	call   0xfe1794d9
  41c2d3:	retf   0x8b96
  41c2d6:	dec    eax
  41c2d7:	gs xor al,0x89
  41c2da:	(bad)  [ebp+0x31]
  41c2dd:	sub    al,0x2e
  41c2df:	xor    eax,0x9243fc62
  41c2e4:	inc    edi
  41c2e5:	es jecxz 0x41c318
  41c2e8:	xchg   esi,eax
  41c2e9:	sbb    al,0x50
  41c2eb:	pop    ecx
  41c2ec:	pop    es
  41c2ed:	jmp    0x1aae:0x54fd6e40
  41c2f4:	daa    
  41c2f5:	sbb    BYTE PTR [edi-0x44b014e1],bh
  41c2fb:	rcl    ah,1
  41c2fd:	sub    DWORD PTR [eax],ebp
  41c2ff:	push   ecx
  41c300:	xchg   edi,eax
  41c301:	xor    BYTE PTR [edi+0x15],dh
  41c304:	or     al,0xb2
  41c306:	add    al,0xef
  41c308:	jns    0x41c363
  41c30a:	loope  0x41c316
  41c30c:	in     eax,dx
  41c30d:	xor    al,0x9f
  41c30f:	and    BYTE PTR [edi-0x211f9af8],0x33
  41c316:	jmp    0x41c2bb
  41c318:	stos   BYTE PTR es:[edi],al
  41c319:	mov    bl,0x52
  41c31b:	cmp    ecx,DWORD PTR [ebx]
  41c31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c31e:	rcl    BYTE PTR [ebp+0x11f2c74c],0x1d
  41c325:	ficomp WORD PTR [ecx-0x150669cb]
  41c32b:	rcl    ebx,1
  41c32d:	mov    al,0xb9
  41c32f:	pop    eax
  41c330:	data16 (bad) 
  41c332:	fist   DWORD PTR [edx-0xf]
  41c335:	mov    edi,ecx
  41c337:	inc    ecx
  41c338:	jg     0x41c2f3
  41c33a:	push   eax
  41c33b:	div    ebp
  41c33d:	pop    ebx
  41c33e:	rcl    DWORD PTR [edi+0x20],1
  41c341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c342:	shr    DWORD PTR [ebp+0x61777216],0xfe
  41c349:	jns    0x41c3af
  41c34b:	sub    dh,BYTE PTR [esi]
  41c34d:	loope  0x41c329
  41c34f:	into   
  41c350:	jge    0x41c346
  41c352:	das    
  41c353:	fwait
  41c354:	ds jo  0x41c34e
  41c357:	mov    ebx,DWORD PTR [ebp+0x77]
  41c35a:	mov    bl,0xba
  41c35c:	mov    ah,BYTE PTR [ebx+0x48]
  41c35f:	xchg   edx,eax
  41c360:	es test eax,0x3e82da63
  41c366:	xor    al,0x55
  41c368:	iret   
  41c369:	je     0x41c34b
  41c36b:	xor    DWORD PTR [ebx-0x403e7036],0x13
  41c372:	mov    fs,edi
  41c374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c375:	push   eax
  41c376:	rcl    BYTE PTR [edx+ecx*1],0xb5
  41c37a:	push   es
  41c37b:	xor    edi,edx
  41c37d:	mov    dl,BYTE PTR [edi]
  41c37f:	inc    edx
  41c380:	inc    esp
  41c381:	(bad)  
  41c382:	pop    ss
  41c383:	fisubr WORD PTR [ebx-0x3e]
  41c386:	daa    
  41c387:	sub    bl,cl
  41c389:	or     BYTE PTR [edx-0x4e],bh
  41c38c:	mov    ds:0x10ba426e,eax
  41c391:	jo     0x41c3db
  41c393:	mov    esi,0xeaad262e
  41c398:	dec    esp
  41c399:	aas    
  41c39a:	sub    al,0xd7
  41c39c:	out    0xd0,eax
  41c39e:	ins    DWORD PTR es:[di],dx
  41c3a0:	imul   ebp,DWORD PTR [eax+eiz*2],0xa2086919
  41c3a7:	xchg   ebp,eax
  41c3a8:	sub    DWORD PTR [eax-0x20],edx
  41c3ab:	retf   
  41c3ac:	mov    eax,ds:0x69582271
  41c3b1:	lahf   
  41c3b2:	or     DWORD PTR [eax],ebx
  41c3b4:	fcmovb st,st(0)
  41c3b6:	es sbb esp,edx
  41c3b9:	and    al,0x32
  41c3bb:	or     BYTE PTR [esi],dl
  41c3bd:	(bad)  
  41c3be:	clc    
  41c3bf:	xchg   ebp,eax
  41c3c0:	arpl   WORD PTR [edi],bx
  41c3c2:	jb     0x41c3c3
  41c3c4:	push   esp
  41c3c5:	push   cs
  41c3c6:	dec    esi
  41c3c7:	outs   dx,DWORD PTR ds:[esi]
  41c3c8:	mov    dl,0xbd
  41c3ca:	or     bh,cl
  41c3cc:	xlat   BYTE PTR ds:[ebx]
  41c3cd:	sub    DWORD PTR [ecx],ebp
  41c3cf:	es pop edx
  41c3d1:	enter  0x6378,0x2b
  41c3d5:	fadd   DWORD PTR [edx]
  41c3d7:	jmp    0xa1d19bc4
  41c3dc:	xbegin 0x1c6ea28a
  41c3e2:	out    0x34,al
  41c3e4:	mov    esi,ds
  41c3e6:	aad    0xe6
  41c3e8:	mov    ebx,DWORD PTR [esi+0x0]
  41c3eb:	das    
  41c3ec:	sub    ecx,ecx
  41c3ee:	xor    DWORD PTR [esi],ebp
  41c3f0:	iret   
  41c3f1:	or     DWORD PTR [edx+eiz*8-0x3c285f8f],ecx
  41c3f8:	jns    0x41c405
  41c3fa:	dec    esi
  41c3fb:	mov    ch,0x92
  41c3fd:	mov    al,al
  41c3ff:	jmp    0x41c408
  41c401:	jb     0x41c3bb
  41c403:	mov    bh,BYTE PTR [ecx-0x3e]
  41c406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c407:	push   esp
  41c408:	jl     0x41c3e1
  41c40a:	into   
  41c40b:	out    0x1e,al
  41c40d:	dec    ecx
  41c40e:	cmp    al,0x70
  41c410:	add    BYTE PTR [ecx+0x6fc97c32],ch
  41c416:	out    0x78,eax
  41c418:	mov    ds:0xb865214b,al
  41c41d:	and    dl,BYTE PTR [ebx+0x40]
  41c420:	vmwrite ecx,DWORD PTR [ecx]
  41c423:	dec    esi
  41c424:	xchg   esp,eax
  41c425:	push   0xffffffdc
  41c427:	out    0x63,eax
  41c429:	sahf   
  41c42a:	sti    
  41c42b:	and    ebp,DWORD PTR [ebx+0x2ce3595d]
  41c431:	stos   BYTE PTR es:[edi],al
  41c432:	add    eax,0xd4fb8a1b
  41c437:	std    
  41c438:	fisub  DWORD PTR [ecx+0x28]
  41c43b:	(bad)  
  41c43c:	xor    BYTE PTR [ecx],dl
  41c43e:	xchg   DWORD PTR [ebx+0x43a22906],esp
  41c444:	(bad)  
  41c445:	bound  edx,QWORD PTR [esi+0x7d]
  41c448:	mov    dh,0x29
  41c44a:	and    al,0x8d
  41c44c:	imul   eax,DWORD PTR [ebp+0x38],0xffffff94
  41c450:	or     esi,DWORD PTR [esi+0x15]
  41c453:	cmp    dh,BYTE PTR [edi-0x5b]
  41c456:	mov    al,ds:0x1d95f3a3
  41c45b:	adc    ebx,edi
  41c45d:	fistp  DWORD PTR [edi]
  41c45f:	js     0x41c3eb
  41c461:	lods   eax,DWORD PTR ds:[esi]
  41c462:	push   es
  41c463:	nop
  41c464:	rol    BYTE PTR [ecx],cl
  41c466:	fadd   st(3),st
  41c468:	icebp  
  41c469:	in     eax,0x43
  41c46b:	pop    es
  41c46c:	jge    0x41c4bf
  41c46e:	out    dx,eax
  41c46f:	test   DWORD PTR [ebp+0x1d],0x25c77ec8
  41c476:	cld    
  41c477:	leave  
  41c478:	jg     0x41c494
  41c47a:	scas   eax,DWORD PTR es:[edi]
  41c47b:	sar    DWORD PTR [ebp+0x76],cl
  41c47e:	cmp    eax,0x4cdbdeb5
  41c483:	dec    eax
  41c484:	das    
  41c485:	inc    edi
  41c486:	sahf   
  41c487:	add    eax,edx
  41c489:	mov    edx,0x57ec78fe
  41c48e:	imul   esi,DWORD PTR [eax+eiz*8+0x7e37d544],0xa601a873
  41c499:	jne    0x41c4d7
  41c49b:	dec    ebx
  41c49c:	sbb    dl,ah
  41c49e:	fwait
  41c49f:	test   al,0x56
  41c4a1:	in     eax,dx
  41c4a2:	into   
  41c4a3:	push   cs
  41c4a4:	cmp    al,BYTE PTR [edi-0x43f1b1cb]
  41c4aa:	pop    edi
  41c4ab:	cs loope 0x41c4f8
  41c4ae:	and    eax,0x5c555657
  41c4b3:	ror    DWORD PTR [edi+eax*1-0x77e00f54],cl
  41c4ba:	ss jmp 0xc8a7:0x639e01bc
  41c4c2:	call   0x6fc5:0xe51e9a35
  41c4c9:	iret   
  41c4ca:	push   ebp
  41c4cb:	fcmovu st,st(7)
  41c4cd:	add    bh,BYTE PTR [ebp*8+0x71ba6517]
  41c4d4:	fild   QWORD PTR [esi]
  41c4d6:	clc    
  41c4d7:	xchg   edi,ecx
  41c4d9:	loop   0x41c487
  41c4db:	rcl    BYTE PTR [eax],1
  41c4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4de:	and    eax,edi
  41c4e0:	out    dx,eax
  41c4e1:	xchg   esp,eax
  41c4e2:	add    BYTE PTR [ebx],dl
  41c4e4:	push   0x37dfd953
  41c4e9:	mov    edx,ebx
  41c4eb:	mov    al,ds:0x18271279
  41c4f0:	stc    
  41c4f1:	mov    edi,0x5c583f0b
  41c4f6:	add    eax,0x13b10a8c
  41c4fb:	(bad)  
  41c4fc:	push   cs
  41c4fd:	cli    
  41c4fe:	jb     0x41c4a9
  41c500:	mov    ecx,0x6bf588d2
  41c505:	mov    ebx,0xb28be05d
  41c50a:	out    0xb1,eax
  41c50c:	cli    
  41c50d:	js     0x41c50f
  41c50f:	call   0x3f98:0x844ea574
  41c516:	push   ecx
  41c517:	call   0xc35d:0xf4a3742d
  41c51e:	lock push ecx
  41c520:	add    al,0x20
  41c522:	dec    edi
  41c523:	retf   0x8485
  41c526:	mov    dh,0xe
  41c528:	jnp    0x41c594
  41c52a:	(bad)  
  41c52b:	xor    ebx,ebp
  41c52d:	push   ss
  41c52e:	sahf   
  41c52f:	pop    es
  41c530:	fst    DWORD PTR [eax-0x6]
  41c533:	fndisi(8087 only) 
  41c535:	mov    cl,0xaa
  41c537:	and    edi,DWORD PTR [edi]
  41c539:	or     eax,0xeb86be0c
  41c53e:	icebp  
  41c53f:	test   eax,0xd764844f
  41c544:	cmp    DWORD PTR [ecx+0x70d068a0],0xfffffff3
  41c54b:	and    ebp,DWORD PTR [edx+0x51]
  41c54e:	inc    ecx
  41c54f:	aad    0xb7
  41c551:	mov    bl,0xeb
  41c553:	popf   
  41c554:	push   esi
  41c555:	mov    dl,0x42
  41c557:	jno    0x41c56d
  41c559:	cmp    eax,0xb8a01c6a
  41c55e:	or     esp,DWORD PTR [edx]
  41c560:	jmp    0x41c5d8
  41c562:	daa    
  41c563:	sti    
  41c564:	test   al,0xca
  41c566:	sbb    eax,edx
  41c568:	outs   dx,DWORD PTR ds:[esi]
  41c569:	adc    ch,0xe2
  41c56c:	fcmovne st,st(7)
  41c56e:	(bad)  
  41c56f:	xchg   BYTE PTR [ebx],al
  41c571:	or     al,0x65
  41c573:	jns    0x41c57b
  41c575:	sub    DWORD PTR [edx],eax
  41c577:	mov    ecx,0xc99ed042
  41c57c:	fcos   
  41c57e:	xor    BYTE PTR [ebp+0x30],dl
  41c581:	mov    eax,ds:0x1d7878a2
  41c586:	(bad)  
  41c587:	pop    eax
  41c588:	ins    BYTE PTR es:[edi],dx
  41c589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58a:	fstp   QWORD PTR [ecx]
  41c58c:	mov    cl,0xcf
  41c58e:	lods   eax,DWORD PTR ds:[esi]
  41c58f:	push   eax
  41c590:	not    ah
  41c592:	and    BYTE PTR [ebp+0x28718787],bl
  41c598:	loop   0x41c5c4
  41c59a:	lods   eax,DWORD PTR ds:[esi]
  41c59b:	outs   dx,BYTE PTR ds:[esi]
  41c59c:	inc    eax
  41c59d:	adc    dl,BYTE PTR [eax-0x69]
  41c5a0:	jecxz  0x41c5cd
  41c5a2:	sbb    dl,BYTE PTR [eax-0x1c7f1750]
  41c5a8:	iret   
  41c5a9:	ss add al,0xb9
  41c5ac:	or     BYTE PTR [esi+0x20f89a00],bl
  41c5b2:	and    ebx,ebp
  41c5b4:	pop    edx
  41c5b5:	fs retf 
  41c5b7:	inc    eax
  41c5b8:	cld    
  41c5b9:	xchg   ebx,eax
  41c5ba:	cdq    
  41c5bb:	jge    0x41c637
  41c5bd:	lds    edi,FWORD PTR [ebx+eiz*1]
  41c5c0:	xor    al,0x59
  41c5c2:	aas    
  41c5c3:	call   FWORD PTR [edx+0x73053e7d]
  41c5c9:	jl     0x41c569
  41c5cb:	or     ah,cl
  41c5cd:	sbb    al,0x22
  41c5cf:	add    DWORD PTR [ebx+0x20],eax
  41c5d2:	jo     0x41c62f
  41c5d4:	pop    es
  41c5d5:	sbb    al,0xd6
  41c5d7:	cmp    DWORD PTR [ecx],0x20
  41c5da:	cmp    ebp,ecx
  41c5dc:	and    al,0x65
  41c5de:	lock xchg DWORD PTR [edx],eax
  41c5e1:	mov    ebp,0xe96145f1
  41c5e6:	jl     0x41c5b4
  41c5e8:	jecxz  0x41c600
  41c5ea:	lods   eax,DWORD PTR ds:[esi]
  41c5eb:	aaa    
  41c5ec:	fnsave [edi+0x7a21abe0]
  41c5f2:	inc    ebp
  41c5f3:	pop    ecx
  41c5f4:	rcr    DWORD PTR [ebx],0xc4
  41c5f7:	xchg   ebp,eax
  41c5f8:	jmp    0xcd79:0xa5f4621e
  41c5ff:	arpl   WORD PTR [eax],ax
  41c601:	cmp    edx,DWORD PTR [ecx+0x52]
  41c604:	dec    ebx
  41c605:	jmp    0x938acf3c
  41c60a:	pop    es
  41c60b:	inc    ebp
  41c60c:	in     al,0x40
  41c60e:	jg     0x41c680
  41c610:	push   cs
  41c611:	push   ebp
  41c612:	xchg   ebx,eax
  41c613:	stos   BYTE PTR es:[edi],al
  41c614:	pop    esp
  41c615:	retf   
  41c616:	lods   eax,DWORD PTR ds:[esi]
  41c617:	(bad)  
  41c619:	jp     0x41c684
  41c61b:	pop    esi
  41c61c:	adc    al,0x71
  41c61e:	imul   esi,DWORD PTR ds:0xdb897a0d,0x61
  41c625:	mov    eax,ds:0x97236d85
  41c62a:	or     dl,ch
  41c62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62d:	push   esi
  41c62e:	ss ret 
  41c630:	dec    esp
  41c631:	xchg   esi,eax
  41c632:	pop    ebp
  41c633:	aam    0xfd
  41c635:	adc    esp,edi
  41c637:	enter  0xd5b9,0xda
  41c63b:	mov    bh,0x9a
  41c63d:	hlt    
  41c63e:	xchg   DWORD PTR [ebx],esp
  41c640:	xchg   ebp,eax
  41c641:	push   ecx
  41c642:	sbb    ecx,edx
  41c644:	fmul   st,st(0)
  41c646:	add    ecx,DWORD PTR [ecx+edi*2+0x64452190]
  41c64d:	fdivr  QWORD PTR [ebx+ebp*2]
  41c650:	push   cs
  41c651:	push   esp
  41c652:	shr    DWORD PTR [ebx-0x2814020e],0x4
  41c659:	leave  
  41c65a:	aam    0x99
  41c65c:	cli    
  41c65d:	ffreep st(7)
  41c65f:	inc    ebx
  41c660:	or     eax,0x953970cb
  41c665:	fwait
  41c666:	shl    DWORD PTR [esi-0x2a1e28c2],cl
  41c66c:	mov    ch,0xc9
  41c66e:	pop    es
  41c66f:	mov    al,0x4b
  41c671:	sti    
  41c672:	mov    ds:0x6daed72d,al
  41c677:	stos   BYTE PTR es:[edi],al
  41c678:	mov    ebx,gs
  41c67a:	jle    0x41c6a8
  41c67c:	(bad)  
  41c67d:	mov    WORD PTR ds:0x51e78e86,gs
  41c683:	call   0xb7fa913a
  41c688:	pusha  
  41c689:	dec    esi
  41c68a:	add    BYTE PTR [ecx+0x77d5510],bh
  41c690:	or     eax,0xfa59712e
  41c695:	jno    0x41c70e
  41c697:	mov    ch,0x5
  41c699:	lock jl 0x41c6ce
  41c69c:	repnz sub edi,DWORD PTR [ecx+edx*4-0x1d]
  41c6a1:	or     DWORD PTR [ecx+0x5a],edi
  41c6a4:	xchg   edx,eax
  41c6a5:	jp     0x41c690
  41c6a7:	fldenv [eax+0x4a]
  41c6aa:	jp     0x41c62e
  41c6ac:	adc    eax,DWORD PTR [ebx-0x1b]
  41c6af:	xchg   esp,eax
  41c6b0:	mov    bh,0x1c
  41c6b2:	fstp   DWORD PTR [ebp-0x26d4077c]
  41c6b8:	jb     0x41c698
  41c6ba:	test   bh,cl
  41c6bc:	xchg   esp,eax
  41c6bd:	and    DWORD PTR [ecx+0x3a34640b],0x28
  41c6c4:	sbb    eax,0x2aa2a0
  41c6c9:	pop    esi
  41c6ca:	cld    
  41c6cb:	pop    ds
  41c6cc:	sbb    eax,0xa29e7b12
  41c6d1:	imul   ebp,edx,0xf1f3ebe7
  41c6d7:	or     eax,0x281a6616
  41c6dc:	ficom  WORD PTR [ebx+0x55d97e46]
  41c6e2:	jge    0x41c6cb
  41c6e4:	cmp    bh,BYTE PTR [esi-0xfcda4e0]
  41c6ea:	mov    ah,0x37
  41c6ec:	aam    0x25
  41c6ee:	popa   
  41c6ef:	ins    BYTE PTR es:[edi],dx
  41c6f0:	sahf   
  41c6f1:	lahf   
  41c6f2:	xlat   BYTE PTR ds:[ebx]
  41c6f3:	popa   
  41c6f4:	and    ebp,DWORD PTR [edi+edx*8]
  41c6f7:	and    DWORD PTR [edi-0x6088653b],edi
  41c6fd:	sbb    DWORD PTR [eax+ecx*2+0xd],0xd2a93109
  41c705:	lds    ebx,FWORD PTR fs:[esi+0x2d]
  41c709:	xor    al,0x92
  41c70b:	dec    ebx
  41c70c:	aas    
  41c70d:	sar    DWORD PTR [eax+0x56],0x69
  41c711:	and    bh,dh
  41c713:	(bad)  
  41c714:	out    0xc8,al
  41c716:	in     eax,0x7f
  41c718:	out    0xee,al
  41c71a:	dec    esp
  41c71b:	jecxz  0x41c75b
  41c71d:	mov    bh,0xcf
  41c71f:	xchg   esi,eax
  41c720:	mov    cl,0xc5
  41c722:	addr16 stc 
  41c724:	into   
  41c725:	add    cl,bh
  41c727:	outs   dx,DWORD PTR ds:[esi]
  41c728:	clc    
  41c729:	(bad)  
  41c72a:	das    
  41c72b:	rep ins DWORD PTR es:[edi],dx
  41c72d:	pop    edx
  41c72e:	sub    al,0x9e
  41c730:	cwde   
  41c731:	xchg   esp,eax
  41c732:	xchg   esi,eax
  41c733:	and    dh,BYTE PTR [edx+edi*4+0x507136d]
  41c73a:	mov    ecx,fs
  41c73c:	in     eax,0xc9
  41c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73f:	and    ah,bl
  41c741:	repz jb 0x41c717
  41c744:	sub    DWORD PTR [eax-0x72],edx
  41c747:	mov    ch,dh
  41c749:	mov    eax,0xeb35ad9c
  41c74e:	mov    cl,0x74
  41c750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c751:	es adc al,0xbb
  41c754:	dec    esp
  41c755:	dec    edx
  41c756:	enter  0x43d3,0x8b
  41c75a:	jmp    0xcea12196
  41c75f:	out    dx,al
  41c760:	in     eax,0xa1
  41c762:	sbb    DWORD PTR [ebp-0x7cf19eda],edi
  41c768:	outs   dx,BYTE PTR ds:[esi]
  41c769:	mov    al,ds:0x98bae6d3
  41c76e:	and    ah,bh
  41c770:	jae    0x41c75f
  41c772:	rol    ebp,1
  41c774:	(bad)  
  41c775:	(bad)  
  41c776:	jge    0x41c75a
  41c778:	sbb    esp,eax
  41c77a:	out    0x9f,eax
  41c77c:	add    eax,0x8a2fa67e
  41c781:	sbb    DWORD PTR [ebp+0x242716fd],ebp
  41c787:	push   ss
  41c788:	addr16 jno 0x41c754
  41c78b:	pop    ds
  41c78c:	sbb    ecx,DWORD PTR [esi-0x2008492e]
  41c792:	mov    ah,0xdb
  41c794:	retf   0x781d
  41c797:	push   cs
  41c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c799:	inc    edi
  41c79a:	hlt    
  41c79b:	hlt    
  41c79c:	cmp    eax,ecx
  41c79e:	aam    0x11
  41c7a0:	xchg   ebx,eax
  41c7a1:	loopne 0x41c75e
  41c7a3:	adc    esp,0x4c
  41c7a6:	add    eax,0xd8fb87e1
  41c7ab:	bound  esp,QWORD PTR [edx-0x2362d439]
  41c7b1:	lea    edi,[ebx]
  41c7b3:	stc    
  41c7b4:	int3   
  41c7b5:	fiadd  WORD PTR [edi+0x6b]
  41c7b8:	daa    
  41c7b9:	mov    edi,0x30bc33ee
  41c7be:	cld    
  41c7bf:	pop    ds
  41c7c0:	rcr    BYTE PTR [esi+0x6cb5a571],0x47
  41c7c7:	sub    edi,DWORD PTR [eax+0xf]
  41c7ca:	cmc    
  41c7cb:	push   ds
  41c7cc:	xor    al,0xc5
  41c7ce:	fsub   st,st(6)
  41c7d0:	or     BYTE PTR [eax+0xe2f9b19],0xb9
  41c7d7:	je     0x41c79b
  41c7d9:	adc    dh,BYTE PTR [ebx]
  41c7db:	pop    ds
  41c7dc:	imul   esp,DWORD PTR [eax-0x1f200e2e],0x72
  41c7e3:	cmp    al,0x67
  41c7e5:	aad    0xcf
  41c7e7:	aam    0xd8
  41c7e9:	lahf   
  41c7ea:	mov    al,ds:0x10d8b08f
  41c7ef:	xchg   ah,bl
  41c7f1:	clc    
  41c7f2:	or     bl,al
  41c7f4:	sub    DWORD PTR [ebp-0x26],ecx
  41c7f7:	dec    edx
  41c7f8:	aad    0xd3
  41c7fa:	(bad)  
  41c7fb:	in     al,0xbd
  41c7fd:	mov    eax,esp
  41c7ff:	dec    esi
  41c800:	xor    DWORD PTR [eax],eax
  41c802:	int    0x5b
  41c804:	(bad)  
  41c807:	ret    
  41c808:	std    
  41c809:	add    al,0x28
  41c80b:	prefetch (bad)
  41c80c:	or     eax,0xd4204cf7
  41c811:	push   ecx
  41c812:	jp     0x41c83a
  41c814:	icebp  
  41c815:	pop    edi
  41c816:	and    al,0x26
  41c818:	dec    eax
  41c819:	dec    si
  41c81b:	or     al,ah
  41c81d:	scas   al,BYTE PTR es:[edi]
  41c81e:	add    eax,0xf5a46817
  41c823:	push   0xfffffff2
  41c825:	sbb    edi,edx
  41c827:	pop    ss
  41c828:	jge    0x41c7d7
  41c82a:	call   0x181dcce7
  41c82f:	mov    edi,DWORD PTR [eax+0x1f]
  41c832:	and    ebp,DWORD PTR [ebx-0x7c410c32]
  41c838:	arpl   WORD PTR [edx-0x5f6e81bf],dx
  41c83e:	retf   
  41c83f:	fs pop edx
  41c841:	call   0x67c0:0x32bcf662
  41c848:	cmc    
  41c849:	sub    ecx,DWORD PTR [edx]
  41c84b:	stc    
  41c84c:	(bad)  
  41c84d:	xchg   ecx,eax
  41c84e:	mov    eax,?
  41c850:	test   BYTE PTR [ebx+0x6a44dd7d],al
  41c856:	iret   
  41c857:	ret    0xc23
  41c85a:	inc    edi
  41c85b:	and    DWORD PTR [edx-0x7e],ebp
  41c85e:	pop    ds
  41c85f:	push   0x96ae59d5
  41c864:	out    dx,eax
  41c865:	mov    esp,0x1c765129
  41c86a:	shr    DWORD PTR [ebp+0x6d67294d],0x46
  41c871:	mov    esp,0x99cb3551
  41c876:	add    eax,0x483612f3
  41c87b:	and    eax,0xc88c626a
  41c880:	jae    0x41c8ca
  41c882:	add    al,BYTE PTR [esi]
  41c884:	jmp    0x4be:0xbf14198
  41c88b:	rcr    dl,cl
  41c88d:	cs daa 
  41c88f:	pop    esi
  41c890:	arpl   WORD PTR [ebp+ecx*2-0x4fa339cf],dx
  41c897:	cwde   
  41c898:	xor    esp,DWORD PTR [eax]
  41c89a:	inc    esp
  41c89b:	sub    eax,0x637d8f1e
  41c8a0:	and    DWORD PTR [ecx],0xfffffffe
  41c8a3:	sahf   
  41c8a4:	mov    ?,eax
  41c8a6:	popf   
  41c8a7:	mov    bl,0xef
  41c8a9:	fmulp  st(2),st
  41c8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ac:	and    bl,al
  41c8ae:	pusha  
  41c8af:	mov    DWORD PTR [ebx+ebx*8+0x57],ebx
  41c8b3:	cwde   
  41c8b4:	add    DWORD PTR ds:0xca78f2c,0xc105a9dc
  41c8be:	sub    bl,BYTE PTR ds:0x8b398dc
  41c8c4:	or     al,0x97
  41c8c6:	push   0x44
  41c8c8:	pop    ebx
  41c8c9:	add    eax,0xedfd4f3b
  41c8ce:	xor    BYTE PTR [esi+0x67b8d981],bh
  41c8d4:	idiv   eax
  41c8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d7:	jp     0x41c876
  41c8d9:	cmp    bl,al
  41c8db:	push   esp
  41c8dc:	sar    edx,0x42
  41c8df:	jmp    0xfafb:0x717d2a9
  41c8e6:	jle    0x41c91b
  41c8e8:	pop    edi
  41c8e9:	std    
  41c8ea:	sbb    eax,DWORD PTR [ebp+0x56]
  41c8ed:	fstp   TBYTE PTR [esi+0x78]
  41c8f0:	sti    
  41c8f1:	and    edx,ecx
  41c8f3:	and    edi,ecx
  41c8f5:	fcom   QWORD PTR [ebp+0x5e]
  41c8f8:	icebp  
  41c8f9:	in     eax,dx
  41c8fa:	mov    esi,0x9016cf79
  41c8ff:	repnz cmc 
  41c901:	enter  0xbb44,0x4b
  41c905:	daa    
  41c906:	mov    DWORD PTR [edx+esi*1+0x33875495],0x39fdd664
  41c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c912:	sahf   
  41c913:	inc    esp
  41c914:	xchg   ebp,eax
  41c915:	or     ebx,ebx
  41c917:	pop    ds
  41c918:	push   ss
  41c919:	mov    dh,0x5e
  41c91b:	sbb    esp,DWORD PTR [eax]
  41c91d:	dec    esp
  41c91e:	sbb    DWORD PTR [eax+0xc],edi
  41c921:	jecxz  0x41c8d9
  41c923:	and    ecx,DWORD PTR [edx+0x73d9bf32]
  41c929:	mov    ds:0xc4bef9c3,al
  41c92e:	hlt    
  41c92f:	pushf  
  41c930:	mov    ds:0x565a5dfc,eax
  41c935:	cmp    DWORD PTR [ecx],esi
  41c937:	jmp    0x2512:0x417aa8b8
  41c93e:	mov    ch,0x29
  41c940:	xor    DWORD PTR [eax+0x6ec9d9b8],ebp
  41c946:	cmc    
  41c947:	mov    ds:0x96729ecd,al
  41c94c:	xor    cl,cl
  41c94e:	cmp    al,0x53
  41c950:	ins    BYTE PTR es:[edi],dx
  41c951:	xchg   BYTE PTR [eax],dh
  41c953:	repnz adc ah,cl
  41c956:	sbb    DWORD PTR [edx],esi
  41c958:	mov    ch,0x5d
  41c95a:	iret   
  41c95b:	cmp    ah,BYTE PTR [ecx-0xb971fd7]
  41c961:	ins    DWORD PTR es:[edi],dx
  41c962:	or     cl,BYTE PTR [ebp+0x74cbd08e]
  41c968:	js     0x41c955
  41c96a:	mov    dl,0x1b
  41c96c:	jns    0x41c9b4
  41c96e:	rcr    ch,1
  41c970:	not    DWORD PTR [ecx+0x5920763]
  41c976:	pop    es
  41c977:	mov    ecx,0x80ff93bb
  41c97c:	or     DWORD PTR [ebp-0x2],ebx
  41c97f:	cmp    al,0x3a
  41c981:	push   ebp
  41c982:	pop    ebp
  41c983:	cdq    
  41c984:	xchg   ecx,eax
  41c985:	mov    edx,0x89d82a42
  41c98a:	lock add al,0x9a
  41c98d:	ret    
  41c98e:	popa   
  41c98f:	inc    eax
  41c990:	sahf   
  41c991:	test   bh,bl
  41c993:	bound  eax,QWORD PTR [eax]
  41c995:	ret    0xbe2c
  41c998:	ss stc 
  41c99a:	or     ebp,DWORD PTR [edi]
  41c99c:	xchg   edx,eax
  41c99d:	(bad)  
  41c99e:	adc    eax,0x437249cc
  41c9a3:	out    dx,al
  41c9a4:	in     al,dx
  41c9a5:	adc    edx,DWORD PTR [ebp+0x5c]
  41c9a8:	in     eax,dx
  41c9a9:	stc    
  41c9aa:	stos   DWORD PTR es:[edi],eax
  41c9ab:	mov    ah,0xba
  41c9ad:	mov    ss,eax
  41c9af:	or     eax,0xd8eaee89
  41c9b4:	cmc    
  41c9b5:	mov    al,0xdb
  41c9b7:	aaa    
  41c9b8:	sbb    eax,0x7b37beb5
  41c9bd:	(bad)  
  41c9be:	push   esi
  41c9bf:	sar    DWORD PTR [ebx],1
  41c9c1:	push   es
  41c9c2:	mov    esp,0xcfea69a5
  41c9c7:	sub    BYTE PTR [edi],ch
  41c9c9:	push   edx
  41c9ca:	cmp    ch,cl
  41c9cc:	js     0x41c967
  41c9ce:	inc    edi
  41c9cf:	sbb    BYTE PTR [esi],bh
  41c9d1:	imul   ecx,edx,0xeb3dd08
  41c9d7:	ret    
  41c9d8:	dec    ebx
  41c9d9:	fisub  DWORD PTR [ebp+0x76a46d83]
  41c9df:	jae    0x41ca57
  41c9e1:	pop    ss
  41c9e2:	out    dx,eax
  41c9e3:	fisub  WORD PTR [eax]
  41c9e5:	mov    eax,ds:0x9293b98b
  41c9ea:	mov    al,ds:0x23317934
  41c9ef:	push   0x8
  41c9f1:	inc    eax
  41c9f2:	sbb    cl,ch
  41c9f4:	or     dh,BYTE PTR [eax+0x77]
  41c9f7:	retf   0x9b29
  41c9fa:	jbe    0x41ca0e
  41c9fc:	pop    ds
  41c9fd:	add    al,0xde
  41c9ff:	jbe    0x41c9a8
  41ca01:	adc    esi,DWORD PTR ds:0x1545109e
  41ca07:	(bad)  
  41ca08:	iret   
  41ca09:	dec    ecx
  41ca0a:	pop    ecx
  41ca0b:	pop    ebp
  41ca0c:	repz imul ebp,edx,0x124a32ed
  41ca13:	mov    BYTE PTR [edi],ch
  41ca15:	test   al,0x59
  41ca17:	sub    eax,0xc45ef835
  41ca1c:	push   esi
  41ca1d:	inc    edi
  41ca1e:	sbb    ah,bl
  41ca20:	lock fnsave [esi+0x6a]
  41ca24:	cmp    dl,BYTE PTR [ebp-0x7a]
  41ca27:	pop    eax
  41ca28:	ins    DWORD PTR es:[edi],dx
  41ca29:	icebp  
  41ca2a:	inc    edi
  41ca2b:	shl    BYTE PTR [edi+ebx*2-0x15],1
  41ca2f:	xchg   ecx,eax
  41ca30:	call   0xa6518e90
  41ca35:	mov    edx,0xe21569c1
  41ca3a:	fld    QWORD PTR [esi+edx*1-0xf]
  41ca3e:	push   es
  41ca3f:	shl    BYTE PTR [esi-0x9],1
  41ca42:	cmp    DWORD PTR [ebp-0x503aec00],ecx
  41ca48:	icebp  
  41ca49:	stc    
  41ca4a:	push   ds
  41ca4b:	popf   
  41ca4c:	push   0xffffff8f
  41ca4e:	outs   dx,DWORD PTR fs:[esi]
  41ca50:	sbb    DWORD PTR [esi],ebp
  41ca52:	sub    esi,eax
  41ca54:	mov    ds:0xad576af,eax
  41ca59:	aaa    
  41ca5a:	push   ecx
  41ca5b:	out    dx,eax
  41ca5c:	sbb    BYTE PTR [edx+0x201f1811],0x1e
  41ca63:	imul   ebp,DWORD PTR [eax-0x1d],0xaee48fd3
  41ca6a:	sub    ecx,ebx
  41ca6c:	je     0x41c9f6
  41ca6e:	loop   0x41ca9c
  41ca70:	sbb    al,0x72
  41ca72:	(bad)  
  41ca73:	cmp    DWORD PTR [ebx+edx*1],eax
  41ca76:	push   edx
  41ca77:	pop    ss
  41ca78:	dec    edi
  41ca79:	call   0x9990:0x40651e8a
  41ca80:	addr16 pop edi
  41ca82:	(bad)
  41ca86:	loop   0x41ca61
  41ca88:	mov    esi,0x4a3aef0e
  41ca8d:	mov    cl,0xc3
  41ca8f:	inc    ecx
  41ca90:	repz inc ebx
  41ca92:	adc    BYTE PTR [eax],0x44
  41ca95:	rcl    BYTE PTR [esi-0x7f],cl
  41ca98:	jb     0x41cacb
  41ca9a:	push   0x75647cd
  41ca9f:	push   ecx
  41caa0:	xor    DWORD PTR [edi-0x28f10b4e],ebx
  41caa6:	inc    ebx
  41caa7:	xchg   ebx,eax
  41caa8:	sbb    esp,DWORD PTR [esi+0x3c]
  41caab:	sbb    esp,esp
  41caad:	(bad)  
  41caaf:	mov    dh,0xc6
  41cab1:	xchg   edx,ecx
  41cab3:	push   eax
  41cab4:	call   0x5a572a7c
  41cab9:	lods   eax,DWORD PTR ds:[esi]
  41caba:	call   eax
  41cabc:	pop    esp
  41cabd:	mov    ah,0xf2
  41cabf:	fisttp QWORD PTR [edx-0x1b8166ff]
  41cac5:	and    BYTE PTR ds:0xfd5b0842,bl
  41cacb:	dec    ebx
  41cacc:	push   eax
  41cacd:	sbb    BYTE PTR [ebp-0x68c1c44a],0xeb
  41cad4:	xchg   ebx,eax
  41cad5:	stos   BYTE PTR es:[edi],al
  41cad6:	ret    
  41cad7:	inc    edx
  41cad8:	arpl   WORD PTR [ebx+0x2d],ax
  41cadb:	pop    edx
  41cadc:	in     al,dx
  41cadd:	jmp    0x89e0b85c
  41cae2:	mov    ss,WORD PTR [ecx+0x68]
  41cae5:	sahf   
  41cae6:	in     al,0x32
  41cae8:	daa    
  41cae9:	xor    BYTE PTR [ebx+0x7a35ade5],bl
  41caef:	or     esi,DWORD PTR [ebx]
  41caf1:	cli    
  41caf2:	imul   DWORD PTR [edx]
  41caf4:	popf   
  41caf5:	shr    BYTE PTR [eax-0x3bd59060],0xd6
  41cafc:	jge    0x41cb54
  41cafe:	daa    
  41caff:	inc    edx
  41cb00:	popf   
  41cb01:	inc    ebp
  41cb02:	cmc    
  41cb03:	adc    DWORD PTR [ecx+0x13ba6432],esp
  41cb09:	jp     0x41cb6c
  41cb0b:	fld    QWORD PTR [ebx+0x63]
  41cb0e:	mov    ds:0x26c43b5,al
  41cb13:	push   ds
  41cb14:	scas   al,BYTE PTR es:[edi]
  41cb15:	sahf   
  41cb16:	jno    0x41caa3
  41cb18:	xchg   esi,eax
  41cb19:	xor    cl,ah
  41cb1b:	lods   al,BYTE PTR ds:[esi]
  41cb1c:	dec    ebp
  41cb1d:	shl    DWORD PTR [ebp+0x7e],1
  41cb20:	cmp    esp,DWORD PTR [ebx-0x7f15cf25]
  41cb26:	jns    0x41cb2f
  41cb28:	loop   0x41cb6c
  41cb2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb2b:	xchg   edx,eax
  41cb2c:	sub    DWORD PTR [esi],0xea29d6e
  41cb32:	jb     0x41cac4
  41cb34:	fild   QWORD PTR [edi]
  41cb36:	mov    esp,0x971b74f8
  41cb3b:	(bad)  
  41cb3d:	xchg   ecx,eax
  41cb3e:	push   0x519ba302
  41cb43:	dec    edx
  41cb44:	cmp    al,0x54
  41cb46:	fs sbb ecx,edx
  41cb49:	jb     0x41cb52
  41cb4b:	push   ebp
  41cb4c:	nop
  41cb4d:	sub    al,0x30
  41cb4f:	das    
  41cb50:	int    0x6c
  41cb52:	rcr    DWORD PTR [ecx],1
  41cb54:	daa    
  41cb55:	mov    edi,0x72c5dacc
  41cb5a:	xchg   DWORD PTR [edx-0x3d],esp
  41cb5d:	out    0x82,eax
  41cb5f:	mov    edi,eax
  41cb61:	inc    DWORD PTR [edx-0x241956e7]
  41cb67:	mov    ebp,0xf9f3cdd
  41cb6c:	leave  
  41cb6d:	test   BYTE PTR [eax],0xa7
  41cb70:	and    eax,DWORD PTR [eax+edi*2-0x8dea983]
  41cb77:	aad    0x47
  41cb79:	pop    ecx
  41cb7a:	inc    esp
  41cb7b:	add    DWORD PTR [esi+0x24],ebp
  41cb7e:	cmp    al,0x60
  41cb80:	dec    esi
  41cb81:	iret   
  41cb82:	in     eax,dx
  41cb83:	clc    
  41cb84:	inc    edi
  41cb85:	loope  0x41cb72
  41cb87:	mov    eax,DWORD PTR [esi]
  41cb89:	mov    BYTE PTR [eax+0xb93297a],dh
  41cb8f:	adc    esi,DWORD PTR [ebx]
  41cb91:	stos   DWORD PTR es:[edi],eax
  41cb92:	jne    0x41cb8d
  41cb94:	inc    ebx
  41cb95:	(bad)  
  41cb96:	mov    ecx,0x14bce5b2
  41cb9b:	dec    ecx
  41cb9c:	jg     0x41cbe0
  41cb9e:	iret   
  41cb9f:	icebp  
  41cba0:	aaa    
  41cba1:	sub    ch,cl
  41cba3:	lock xor al,0x21
  41cba6:	add    al,0x7a
  41cba8:	push   es
  41cba9:	jmp    0x41cb4d
  41cbab:	dec    ebx
  41cbac:	mov    ds:0x5d6f9f23,al
  41cbb1:	jb     0x41cbe5
  41cbb3:	push   0x8
  41cbb5:	jg     0x41cc08
  41cbb7:	mov    esp,0xb314840a
  41cbbc:	and    DWORD PTR [ebx-0x7],ebx
  41cbbf:	ret    
  41cbc0:	xor    cl,BYTE PTR [eax]
  41cbc2:	sub    BYTE PTR [edi-0x708ebb83],bh
  41cbc8:	fisttp DWORD PTR [edi]
  41cbca:	pushf  
  41cbcb:	cwde   
  41cbcc:	sub    ebx,0x71b759e6
  41cbd2:	mul    DWORD PTR [ebp+0x52]
  41cbd5:	xor    eax,0xa2eb9088
  41cbda:	sar    DWORD PTR [edi+0x46],1
  41cbdd:	out    dx,eax
  41cbde:	dec    ecx
  41cbdf:	or     dl,0x76
  41cbe2:	and    eax,0x56714ad9
  41cbe7:	nop
  41cbe8:	cmp    BYTE PTR [ebx+0x24],ch
  41cbeb:	add    dl,BYTE PTR [esi+0x622bb20e]
  41cbf1:	cmp    DWORD PTR ds:0x3780f41d,0xf3a60577
  41cbfb:	mov    ch,0xad
  41cbfd:	enter  0x1e90,0x8f
  41cc01:	sbb    BYTE PTR ds:0x61b7c207,dl
  41cc07:	stos   DWORD PTR es:[edi],eax
  41cc08:	cmp    esi,DWORD PTR [eax+0x6e806e24]
  41cc0e:	lods   al,BYTE PTR ds:[esi]
  41cc0f:	mov    DWORD PTR [edx],ebx
  41cc11:	pop    es
  41cc12:	icebp  
  41cc13:	fnsave [edx-0x40]
  41cc16:	cmp    ecx,DWORD PTR [ecx-0x72f38f71]
  41cc1c:	mov    dh,0xd
  41cc1e:	push   ss
  41cc1f:	out    dx,al
  41cc20:	into   
  41cc21:	sub    ebp,0xbd5c5415
  41cc27:	adc    ecx,edi
  41cc29:	dec    ebp
  41cc2a:	xchg   DWORD PTR [ebx],edx
  41cc2c:	sbb    eax,0x7c3e8e65
  41cc31:	shl    DWORD PTR [edi+0x971e5d1],cl
  41cc37:	js     0x41cbe9
  41cc39:	pop    esp
  41cc3a:	inc    edi
  41cc3b:	(bad)  
  41cc3c:	mov    bl,BYTE PTR [ecx]
  41cc3e:	sbb    eax,0xec0604b8
  41cc43:	adc    eax,0x34a7e335
  41cc48:	ss push 0x66
  41cc4b:	mov    dh,0x7b
  41cc4d:	jg     0x41ccab
  41cc4f:	fadd   st(2),st
  41cc51:	(bad)  [ecx+0x729d05ce]
  41cc57:	mov    ecx,0xc14c7d4f
  41cc5c:	jmp    0x9f4b:0xfa73dd4
  41cc63:	dec    ebx
  41cc64:	lahf   
  41cc65:	test   DWORD PTR [edi+eiz*4-0x73],0x81be8f38
  41cc6d:	xchg   edi,eax
  41cc6e:	fidivr WORD PTR [ebp+0x3b]
  41cc71:	inc    esi
  41cc72:	pop    ebp
  41cc73:	je     0x41cc7e
  41cc75:	cmp    BYTE PTR [ebx-0x1a83824d],dl
  41cc7b:	mov    eax,0xea9cc2ca
  41cc80:	fiadd  WORD PTR [edi]
  41cc82:	push   esp
  41cc83:	push   esi
  41cc84:	push   ebp
  41cc85:	xor    al,0xe1
  41cc87:	ror    ch,cl
  41cc89:	out    0xa9,al
  41cc8b:	mov    ecx,0xb2bf459f
  41cc90:	push   eax
  41cc91:	sahf   
  41cc92:	sbb    al,0x4e
  41cc94:	xchg   edi,eax
  41cc95:	mov    eax,ds:0x5d515544
  41cc9a:	adc    BYTE PTR [esi-0x6c],bh
  41cc9d:	push   es
  41cc9e:	mov    ds:0x1bf81ad7,eax
  41cca3:	mov    ah,0x5c
  41cca5:	push   es
  41cca6:	adc    DWORD PTR [ecx+0x7e],eax
  41cca9:	cmp    ch,ch
  41ccab:	repz (bad) 
  41ccad:	push   cs
  41ccae:	clc    
  41ccaf:	stc    
  41ccb0:	sub    eax,0x7e78b41b
  41ccb5:	call   0xfb4c099
  41ccba:	or     BYTE PTR [ebx],bl
  41ccbc:	dec    edx
  41ccbd:	cmp    bl,0x3b
  41ccc0:	je     0x41cc85
  41ccc2:	test   eax,0x9826da55
  41ccc7:	and    DWORD PTR [ebx+0x34],ebx
  41ccca:	retf   0xed2f
  41cccd:	and    esp,DWORD PTR [edi]
  41cccf:	inc    esp
  41ccd0:	int    0x90
  41ccd2:	mov    eax,ds:0xb6b6cff5
  41ccd7:	dec    edx
  41ccd8:	pop    esi
  41ccd9:	sbb    esp,DWORD PTR ds:0xe7224a1d
  41ccdf:	jmp    0x9766b50c
  41cce4:	push   0xffffffab
  41cce6:	out    dx,eax
  41cce7:	ja     0x41ccd3
  41cce9:	cmp    DWORD PTR [esi+0x7f],edx
  41ccec:	ja     0x41ccc5
  41ccee:	push   eax
  41ccef:	mov    ds:0xf4eabc7b,al
  41ccf4:	mov    dh,0x8c
  41ccf6:	jne    0x41cd6f
  41ccf8:	mov    bh,BYTE PTR [esi+0x1f]
  41ccfb:	cdq    
  41ccfc:	addr16 daa 
  41ccfe:	fbld   TBYTE PTR [esi-0x6c9c6a1f]
  41cd04:	cmp    BYTE PTR [ebp-0x35],dl
  41cd07:	dec    ebp
  41cd08:	pop    ebp
  41cd09:	fwait
  41cd0a:	add    al,bh
  41cd0c:	neg    bh
  41cd0e:	ss xor bl,cl
  41cd11:	call   FWORD PTR [ecx]
  41cd13:	les    ebp,FWORD PTR [ecx]
  41cd15:	jge    0x41cce7
  41cd17:	sbb    cl,BYTE PTR [esi-0xb]
  41cd1a:	popa   
  41cd1b:	xor    al,BYTE PTR [ebp+0x6e0b2e4a]
  41cd21:	or     bl,bh
  41cd23:	out    0x7e,al
  41cd25:	repnz sbb ch,bh
  41cd28:	sub    eax,0x7097eb7a
  41cd2d:	pop    esp
  41cd2e:	mov    eax,0xa94c0b4b
  41cd33:	es and ecx,esi
  41cd36:	hlt    
  41cd37:	stos   DWORD PTR es:[edi],eax
  41cd38:	mov    edi,0xcddb4550
  41cd3d:	cmp    dh,BYTE PTR [edx+0x63]
  41cd40:	add    eax,0x72caf4b6
  41cd45:	mov    al,ds:0x5a22ba48
  41cd4a:	jmp    0x9ed1:0x22ea96ef
  41cd51:	adc    edi,DWORD PTR [ebp-0x2f6748f]
  41cd57:	loopne 0x41cd97
  41cd59:	sub    bl,0x9a
  41cd5c:	push   esp
  41cd5d:	inc    edi
  41cd5e:	cwde   
  41cd5f:	lea    esp,[eax]
  41cd61:	mov    al,0x4e
  41cd63:	inc    eax
  41cd64:	ins    BYTE PTR es:[edi],dx
  41cd65:	not    bh
  41cd67:	inc    esp
  41cd68:	mov    ch,0xe9
  41cd6a:	jne    0x41cd63
  41cd6c:	jnp    0x41cda8
  41cd6e:	mov    ah,0x9e
  41cd70:	xchg   edx,eax
  41cd71:	out    dx,al
  41cd72:	mov    eax,ds:0x56bdeb9b
  41cd77:	pop    ss
  41cd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd79:	es in  al,0x45
  41cd7c:	dec    esi
  41cd7d:	or     eax,0x712a77ab
  41cd82:	(bad)  
  41cd83:	je     0x41cd70
  41cd85:	cmp    al,0x9a
  41cd87:	push   ss
  41cd88:	popa   
  41cd89:	mov    eax,0x89365c29
  41cd8e:	adc    DWORD PTR [edx+0x15],ebx
  41cd91:	add    al,0x6d
  41cd93:	mov    ebx,0xfff96ef0
  41cd98:	js     0x41cd73
  41cd9a:	xor    edx,ecx
  41cd9c:	inc    ebx
  41cd9d:	sahf   
  41cd9e:	push   ecx
  41cd9f:	push   0xbf14a917
  41cda4:	das    
  41cda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda6:	jl     0x41ce08
  41cda8:	inc    edi
  41cda9:	sub    eax,edi
  41cdab:	pop    ecx
  41cdac:	gs pop edx
  41cdae:	push   ecx
  41cdaf:	dec    edx
  41cdb0:	pop    es
  41cdb1:	push   cs
  41cdb2:	les    esp,FWORD PTR [eax]
  41cdb4:	pop    edi
  41cdb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdb6:	aam    0xf0
  41cdb8:	cdq    
  41cdb9:	jne    0x41cdfd
  41cdbb:	mov    eax,ds:0x3c204ab1
  41cdc0:	int    0xdc
  41cdc2:	sbb    eax,0xc74c87b5
  41cdc7:	fcom   DWORD PTR [edx-0x3e]
  41cdca:	dec    ebp
  41cdcb:	inc    ecx
  41cdcc:	mov    BYTE PTR [ebp*8-0x73580901],bh
  41cdd3:	pop    ss
  41cdd4:	(bad)  
  41cdd5:	xchg   esp,eax
  41cdd6:	sbb    bh,dh
  41cdd8:	pop    ss
  41cdd9:	pop    edx
  41cdda:	ds inc ebx
  41cddc:	loop   0x41cd84
  41cdde:	cld    
  41cddf:	fnclex 
  41cde1:	mov    bl,0x1b
  41cde3:	int    0xaf
  41cde5:	and    DWORD PTR [ebx-0x3a],esi
  41cde8:	call   0x7e00:0x7e16a10
  41cdef:	lods   eax,DWORD PTR ds:[esi]
  41cdf0:	inc    eax
  41cdf1:	adc    DWORD PTR [edi],eax
  41cdf3:	in     al,dx
  41cdf4:	ret    0xcc4f
  41cdf7:	fs pop edi
  41cdf9:	push   esp
  41cdfa:	loop   0x41ce41
  41cdfc:	xchg   ebx,eax
  41cdfd:	addr16 out 0x64,eax
  41ce00:	xchg   ebp,eax
  41ce01:	adc    eax,0x979546be
  41ce06:	jnp    0x41cde1
  41ce08:	(bad)  [eax-0x55]
  41ce0b:	sbb    eax,0xd214c1d7
  41ce10:	sbb    BYTE PTR [ecx-0x3a321d1a],ch
  41ce16:	ins    BYTE PTR es:[edi],dx
  41ce17:	jb     0x41cdbd
  41ce19:	fs xchg esp,eax
  41ce1b:	and    dl,BYTE PTR [ecx-0x70d8db55]
  41ce21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce22:	dec    edx
  41ce23:	ins    DWORD PTR es:[edi],dx
  41ce24:	dec    esp
  41ce25:	push   edi
  41ce26:	adc    eax,0xa8f31174
  41ce2b:	add    BYTE PTR [esi-0x7760fde7],dl
  41ce31:	dec    edi
  41ce32:	test   al,0x50
  41ce34:	push   ds
  41ce35:	or     DWORD PTR [ecx],ecx
  41ce37:	sub    ah,bl
  41ce39:	shl    esp,0x51
  41ce3c:	lock xor al,0x88
  41ce3f:	(bad)  
  41ce40:	xlat   BYTE PTR ds:[ebx]
  41ce41:	test   al,0x37
  41ce43:	mov    edx,0x73a2b1d6
  41ce48:	pop    ebx
  41ce49:	loop   0x41cea9
  41ce4b:	jno    0x41cdd5
  41ce4d:	aas    
  41ce4e:	or     al,0xa0
  41ce50:	cmp    edx,eax
  41ce52:	mov    dl,BYTE PTR [ebx]
  41ce54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce55:	(bad)  
  41ce56:	sub    cl,BYTE PTR [edi]
  41ce58:	inc    ebx
  41ce59:	cmp    ebp,ecx
  41ce5b:	sar    DWORD PTR [edx],1
  41ce5d:	cmp    bl,BYTE PTR [edx]
  41ce5f:	xchg   edi,eax
  41ce60:	das    
  41ce61:	or     al,BYTE PTR [eax+0x564a05]
  41ce67:	ins    DWORD PTR es:[edi],dx
  41ce68:	pop    ss
  41ce69:	stc    
  41ce6a:	mov    esp,0x964fad4b
  41ce6f:	cmp    al,0xc6
  41ce71:	dec    edx
  41ce72:	fsub   QWORD PTR [edi+0x29]
  41ce75:	dec    ebp
  41ce76:	mov    cl,0x6b
  41ce78:	icebp  
  41ce79:	aas    
  41ce7a:	xchg   ebp,eax
  41ce7b:	push   eax
  41ce7c:	adc    cl,BYTE PTR [ebp+0x75]
  41ce7f:	mov    ch,0x66
  41ce81:	and    eax,0x95378792
  41ce86:	sbb    DWORD PTR [ebp-0x7459f5c2],0xfffffffd
  41ce8d:	cmp    BYTE PTR [ebx],ch
  41ce8f:	jg     0x41ce37
  41ce91:	and    DWORD PTR [esi+0x2b],0x43
  41ce95:	or     ecx,ebp
  41ce97:	gs xchg esi,eax
  41ce99:	bound  edi,QWORD PTR [esi+0x557f1f2]
  41ce9f:	and    bl,BYTE PTR [ebx-0x1d5433c4]
  41cea5:	xchg   edx,eax
  41cea6:	loop   0x41cf0d
  41cea8:	ja     0x41cec5
  41ceaa:	and    edi,DWORD PTR ds:0x98c551ad
  41ceb0:	inc    edi
  41ceb1:	mov    cl,0xa
  41ceb3:	test   BYTE PTR [ecx+0x4b],cl
  41ceb6:	xlat   BYTE PTR ds:[ebx]
  41ceb7:	(bad)  
  41ceb8:	fdivr  QWORD PTR [ecx+0x16ddd8d1]
  41cebe:	cmp    ch,BYTE PTR [eax]
  41cec0:	ins    BYTE PTR es:[edi],dx
  41cec1:	imul   esp,DWORD PTR [eax-0x4a],0xffffffd7
  41cec5:	push   es
  41cec6:	push   0x5
  41cec8:	or     dl,BYTE PTR [eax+0x4e0e4c66]
  41cece:	pop    edx
  41cecf:	ins    DWORD PTR es:[edi],dx
  41ced0:	(bad)  
  41ced1:	jae    0x41ce70
  41ced3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced4:	dec    ebp
  41ced5:	scas   al,BYTE PTR es:[edi]
  41ced6:	ins    DWORD PTR es:[edi],dx
  41ced7:	dec    esi
  41ced8:	ret    
  41ced9:	mov    ebx,0xbf09449c
  41cede:	jmp    0x2589:0xc744fd72
  41cee5:	sbb    esi,edx
  41cee7:	test   BYTE PTR [eax],ch
  41cee9:	mov    cl,0xf1
  41ceeb:	sti    
  41ceec:	cld    
  41ceed:	pusha  
  41ceee:	fldenv ds:0x7c9a2470
  41cef4:	push   ss
  41cef5:	loopne 0x41cf14
  41cef7:	sub    esi,ebp
  41cef9:	cwde   
  41cefa:	lods   eax,DWORD PTR ds:[esi]
  41cefb:	fldcw  WORD PTR [eax-0x3a]
  41cefe:	sub    DWORD PTR [ecx],esi
  41cf00:	leave  
  41cf01:	outs   dx,BYTE PTR ds:[esi]
  41cf02:	mov    DWORD PTR [ecx+0x6081a0dc],0x69b5600c
  41cf0c:	mov    ebx,DWORD PTR [edx-0x2063a21b]
  41cf12:	mov    dh,BYTE PTR ds:0x1004816
  41cf18:	(bad)  
  41cf19:	outs   dx,DWORD PTR ds:[esi]
  41cf1a:	out    0xa8,eax
  41cf1c:	cmp    bl,BYTE PTR [eax]
  41cf1e:	jno    0x41cef4
  41cf20:	add    eax,0xf3a3682d
  41cf25:	jmp    0x78d9d28d
  41cf2a:	enter  0xf6c1,0xb2
  41cf2e:	inc    edx
  41cf2f:	sub    DWORD PTR [esi],esp
  41cf31:	ror    BYTE PTR [edx],0xee
  41cf34:	and    DWORD PTR [ecx+0x53],edi
  41cf37:	mov    edx,0x28f50930
  41cf3c:	mov    ds:0xbe7601e7,eax
  41cf41:	adc    DWORD PTR [eax-0x21],edx
  41cf44:	ja     0x41cf09
  41cf46:	mov    ds:0x9163d96e,eax
  41cf4b:	cmp    al,0xf5
  41cf4d:	adc    ecx,DWORD PTR [edx]
  41cf4f:	(bad)  
  41cf50:	push   0xe2d3ce60
  41cf55:	xor    ebp,DWORD PTR [ebp+0x724946ab]
  41cf5b:	cli    
  41cf5c:	mov    edi,0xf7f831c9
  41cf61:	or     ebx,DWORD PTR [eax]
  41cf63:	fld    TBYTE PTR [ebx+0x27c9541f]
  41cf69:	jle    0x41cfa9
  41cf6b:	retf   0x531a
  41cf6e:	pop    ebp
  41cf6f:	rol    DWORD PTR [ecx+edi*8+0x4c],cl
  41cf73:	lock ins BYTE PTR es:[edi],dx
  41cf75:	push   0xc815a7b0
  41cf7a:	ret    0x9c84
  41cf7d:	lahf   
  41cf7e:	icebp  
  41cf7f:	jnp    0x41cfad
  41cf81:	dec    eax
  41cf82:	mov    ds:0xf1a8a73a,al
  41cf87:	repz test DWORD PTR [eax+eiz*8+0x74],edi
  41cf8c:	sub    bl,BYTE PTR [ecx+0x2]
  41cf8f:	mov    bh,0xe5
  41cf91:	clc    
  41cf92:	fcom   QWORD PTR [esi]
  41cf94:	cmp    al,0xc5
  41cf96:	lods   eax,DWORD PTR ds:[esi]
  41cf97:	mov    esi,0xfb41fae7
  41cf9c:	ss xchg esp,eax
  41cf9e:	stc    
  41cf9f:	sbb    eax,0x61b1e2d5
  41cfa4:	sbb    al,0x82
  41cfa6:	mov    edi,0x32aca9c8
  41cfab:	imul   edi,DWORD PTR [edi],0xffffff99
  41cfae:	ins    DWORD PTR es:[edi],dx
  41cfaf:	lock popf 
  41cfb1:	xchg   ecx,eax
  41cfb2:	lods   eax,DWORD PTR ds:[esi]
  41cfb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb4:	ins    BYTE PTR es:[edi],dx
  41cfb5:	repz add BYTE PTR [edx-0x1f],0xd7
  41cfba:	xor    BYTE PTR [edx-0x6e],dh
  41cfbd:	or     bh,ah
  41cfbf:	popa   
  41cfc0:	fstp   TBYTE PTR [edi+0x21]
  41cfc3:	outs   dx,DWORD PTR ds:[esi]
  41cfc4:	das    
  41cfc5:	retf   
  41cfc6:	gs aaa 
  41cfc8:	arpl   bx,bx
  41cfca:	stos   BYTE PTR es:[edi],al
  41cfcb:	adc    cl,ch
  41cfcd:	nop
  41cfce:	call   0xa16d:0x2484d3b9
  41cfd5:	adc    esi,DWORD PTR [ebx+0x2623f7d6]
  41cfdb:	sti    
  41cfdc:	in     al,dx
  41cfdd:	sub    BYTE PTR [esp+edx*8+0x16],dl
  41cfe1:	push   ebx
  41cfe2:	aam    0x1a
  41cfe4:	push   ecx
  41cfe5:	xlat   BYTE PTR ds:[ebx]
  41cfe6:	adc    al,0xbe
  41cfe8:	nop
  41cfe9:	gs leave 
  41cfeb:	lahf   
  41cfec:	push   es
  41cfed:	call   FWORD PTR [ecx-0x451163b2]
  41cff3:	out    dx,al
  41cff4:	sbb    bh,BYTE PTR [ebp+0x66a12205]
  41cffa:	cs ss ds jnp 0x41cfac
  41cfff:	mov    ah,0x33
  41d001:	out    0xa7,eax
  41d003:	fwait
  41d004:	wbinvd 
  41d006:	adc    esi,DWORD PTR [eax]
  41d008:	push   esi
  41d009:	pop    ss
  41d00a:	aam    0x35
  41d00c:	loopne 0x41d008
  41d00e:	and    eax,0x3ed0dc52
  41d013:	jnp    0x41cfaf
  41d015:	mov    ds:0xec0f4907,eax
  41d01a:	xchg   ecx,eax
  41d01b:	cmp    DWORD PTR [esi+edi*4+0x20940ff6],esp
  41d022:	ins    DWORD PTR es:[edi],dx
  41d023:	push   eax
  41d024:	cld    
  41d025:	sahf   
  41d026:	test   al,0xf2
  41d028:	adc    esp,DWORD PTR [edi]
  41d02a:	(bad)  
  41d02b:	pop    ecx
  41d02c:	and    ah,BYTE PTR [edi+0x30cc6209]
  41d032:	repnz push 0x5a
  41d035:	or     BYTE PTR [ebp+0x74e58d57],0xc2
  41d03c:	mov    fs,WORD PTR [ebx+0x57cf3e96]
  41d042:	scas   al,BYTE PTR es:[edi]
  41d043:	push   0xfd4a6e0
  41d048:	jp     0x41d0c7
  41d04a:	lock adc DWORD PTR [ebx],0xfffffffe
  41d04e:	mov    dl,0xd6
  41d050:	adc    DWORD PTR [ebx+edx*8-0x40],edi
  41d054:	call   0xb5f3b57d
  41d059:	lods   eax,DWORD PTR ds:[esi]
  41d05a:	inc    eax
  41d05b:	push   0xc75a3348
  41d060:	xor    edx,DWORD PTR [ebp-0x78]
  41d063:	daa    
  41d064:	mov    dl,BYTE PTR [esi-0x62]
  41d067:	inc    edi
  41d068:	int3   
  41d069:	fstp   st(3)
  41d06b:	cmp    ebp,DWORD PTR [ebx+eax*4-0x5d]
  41d06f:	add    edx,DWORD PTR [ecx]
  41d071:	aad    0x5c
  41d073:	pop    edx
  41d074:	lock sbb DWORD PTR [ecx-0x3a67b78a],esp
  41d07b:	and    edx,DWORD PTR gs:[ecx-0x24e89293]
  41d082:	xchg   BYTE PTR [edx-0x3ec828ae],ah
  41d088:	imul   ebx,ebx,0xf
  41d08b:	stos   BYTE PTR es:[edi],al
  41d08c:	aaa    
  41d08d:	in     eax,0xf3
  41d08f:	out    0x6,al
  41d091:	sbb    al,bh
  41d093:	cmp    eax,0x586c80e0
  41d098:	and    ebx,DWORD PTR [ebp+0x38fed25e]
  41d09e:	stos   BYTE PTR es:[edi],al
  41d09f:	pop    eax
  41d0a0:	shl    ebp,1
  41d0a2:	lahf   
  41d0a3:	or     DWORD PTR [esi+0x7826f80f],eax
  41d0a9:	call   0xc048:0x1910d5cf
  41d0b0:	lahf   
  41d0b1:	mov    bl,0xea
  41d0b3:	loopne 0x41d121
  41d0b5:	jle    0x41d0d5
  41d0b7:	ja     0x41d09d
  41d0b9:	adc    al,0x5
  41d0bb:	inc    eax
  41d0bc:	dec    ebx
  41d0bd:	adc    BYTE PTR [eax],ch
  41d0bf:	pop    edi
  41d0c0:	xor    ch,dl
  41d0c2:	inc    esp
  41d0c3:	xor    DWORD PTR [ebp+0x65],ecx
  41d0c6:	push   ebp
  41d0c7:	jg     0x41d072
  41d0c9:	sub    BYTE PTR [eax],al
  41d0cb:	mov    esi,0xf85fcdac
  41d0d0:	cs in  eax,dx
  41d0d2:	push   esp
  41d0d3:	xor    DWORD PTR [edi-0x2e55ea2a],esp
  41d0d9:	xor    DWORD PTR [esi],edx
  41d0db:	ret    
  41d0dc:	mov    al,0xb9
  41d0de:	sar    BYTE PTR [eax-0x6ded59ee],0x4c
  41d0e5:	add    al,0xf4
  41d0e7:	cwde   
  41d0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e9:	push   esi
  41d0ea:	test   al,0x5e
  41d0ec:	mov    ah,ah
  41d0ee:	neg    BYTE PTR [edi]
  41d0f0:	fs sbb eax,0x5e54cecc
  41d0f6:	(bad)  
  41d0f7:	sahf   
  41d0f8:	repnz push cs
  41d0fa:	mov    gs,WORD PTR es:[eax+0x6c]
  41d0fe:	jp     0x41d149
  41d100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d101:	xchg   ecx,eax
  41d102:	ret    0xcc09
  41d105:	sub    al,0xeb
  41d107:	popf   
  41d108:	imul   esi,DWORD PTR [ecx+ecx*1],0x1317ab6f
  41d10f:	clc    
  41d110:	dec    ebp
  41d111:	jno    0x41d0ff
  41d113:	out    0xcb,eax
  41d115:	push   ds
  41d116:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41d118:	arpl   WORD PTR [edi+0x1c],di
  41d11b:	loope  0x41d140
  41d11d:	retf   
  41d11e:	push   edx
  41d11f:	inc    edx
  41d120:	clc    
  41d121:	add    DWORD PTR [eax+0x4c],0x96f00c63
  41d128:	sbb    ch,bl
  41d12a:	mov    edx,0xe393f172
  41d12f:	inc    edx
  41d130:	push   ds
  41d131:	mov    cl,0x28
  41d133:	pop    eax
  41d134:	cmp    BYTE PTR [edi],bl
  41d136:	xor    DWORD PTR [edi+0x5a],ebp
  41d139:	xor    BYTE PTR ds:0x94e1292d,dl
  41d13f:	or     edx,DWORD PTR [eax-0x7f]
  41d142:	ins    DWORD PTR es:[edi],dx
  41d143:	repnz pop esp
  41d145:	sahf   
  41d146:	ret    
  41d147:	popa   
  41d148:	push   es
  41d149:	nop
  41d14a:	daa    
  41d14b:	mov    ecx,0x524691c4
  41d150:	in     eax,dx
  41d151:	nop
  41d152:	(bad)  
  41d153:	lods   al,BYTE PTR ds:[esi]
  41d154:	aaa    
  41d155:	jno    0x41d163
  41d157:	dec    edx
  41d158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d159:	mov    DWORD PTR [ebp+ebx*1+0x585f7c2d],ebp
  41d160:	or     BYTE PTR [ecx+eax*4-0x2ced306e],bh
  41d167:	fabs   
  41d169:	cmp    al,0x6f
  41d16b:	mov    ah,0x70
  41d16d:	pusha  
  41d16e:	pop    esp
  41d16f:	push   ds
  41d170:	(bad)  
  41d171:	push   ecx
  41d172:	or     ebp,DWORD PTR [esi-0xee4f10c]
  41d178:	or     BYTE PTR [edx-0x467af4dc],ah
  41d17e:	test   DWORD PTR [ecx+0x4fccd64f],eax
  41d184:	ins    BYTE PTR es:[edi],dx
  41d185:	ss jnp 0x41d1b4
  41d188:	pop    esp
  41d189:	dec    ebp
  41d18a:	sbb    ebx,DWORD PTR [ecx-0x1a]
  41d18d:	mov    esp,0xea6f4983
  41d192:	(bad)  
  41d193:	pop    edx
  41d194:	or     DWORD PTR [ecx*1+0x4a9abaa8],edx
  41d19b:	pushf  
  41d19c:	jp     0x41d17a
  41d19e:	ret    0xff6c
  41d1a1:	ret    0xa7e2
  41d1a4:	stc    
  41d1a5:	ins    DWORD PTR es:[edi],dx
  41d1a6:	mov    edx,0x59bc60ac
  41d1ab:	(bad)  
  41d1ac:	xor    eax,DWORD PTR [ecx-0x3b]
  41d1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b0:	iret   
  41d1b1:	adc    DWORD PTR [ecx],esp
  41d1b3:	cmp    BYTE PTR [ebx+0x7e],dh
  41d1b6:	and    BYTE PTR [edx],al
  41d1b8:	add    ch,0x6d
  41d1bb:	enter  0xd880,0x2a
  41d1bf:	(bad)  
  41d1c0:	fwait
  41d1c1:	sub    eax,0xffffff9b
  41d1c4:	pop    eax
  41d1c5:	adc    al,0x56
  41d1c7:	repnz stos BYTE PTR es:[edi],al
  41d1c9:	ret    
  41d1ca:	sbb    eax,0x3fe478e1
  41d1cf:	push   ss
  41d1d0:	ins    DWORD PTR es:[edi],dx
  41d1d1:	icebp  
  41d1d2:	into   
  41d1d3:	mov    ah,0x5
  41d1d5:	mov    DWORD PTR [edi],esp
  41d1d7:	xchg   edx,eax
  41d1d8:	loop   0x41d22e
  41d1da:	dec    edi
  41d1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1dc:	(bad)  
  41d1dd:	jmp    0xf1b63ef9
  41d1e2:	outs   dx,BYTE PTR ds:[esi]
  41d1e3:	and    al,dh
  41d1e5:	adc    eax,0xd6e7b2dd
  41d1ea:	icebp  
  41d1eb:	test   DWORD PTR [esi+0x18],edx
  41d1ee:	lahf   
  41d1ef:	jmp    0x41d252
  41d1f1:	outs   dx,BYTE PTR ds:[esi]
  41d1f2:	mov    DWORD PTR ds:0x562c6fac,edx
  41d1f8:	call   0xe0a786d3
  41d1fd:	(bad)  
  41d1fe:	rcl    ch,1
  41d200:	push   edx
  41d201:	jle    0x41d27f
  41d203:	in     eax,dx
  41d204:	mov    ch,0x1a
  41d206:	mov    al,ds:0x4da2b200
  41d20b:	jle    0x41d26e
  41d20d:	inc    ebx
  41d20e:	dec    ebx
  41d20f:	sbb    DWORD PTR [ebp+0x6b],edi
  41d212:	jo     0x41d208
  41d214:	xor    al,0x44
  41d216:	(bad)  
  41d217:	xlat   BYTE PTR ds:[ebx]
  41d218:	xchg   DWORD PTR [eax-0x19],ebp
  41d21b:	push   eax
  41d21c:	mov    ds:0x2e507609,al
  41d221:	loopne 0x41d269
  41d223:	sbb    BYTE PTR [ecx],ah
  41d225:	into   
  41d226:	jmp    0x41d1ff
  41d228:	mov    eax,ds:0x9451abfe
  41d22d:	inc    ebp
  41d22e:	inc    edi
  41d22f:	lahf   
  41d230:	lea    esi,[edx]
  41d232:	mov    ds:0x5360cb17,eax
  41d237:	bnd jle 0x41d1d1
  41d23a:	bound  ecx,QWORD PTR [eax+0x5ca7b8bc]
  41d240:	adc    cl,ah
  41d242:	or     BYTE PTR [eax],dh
  41d244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d245:	and    ebp,DWORD PTR [edi+0x24d43772]
  41d24b:	jl     0x41d28a
  41d24d:	push   0x31
  41d24f:	xlat   BYTE PTR ds:[ebx]
  41d250:	and    DWORD PTR [eax+ecx*2],edi
  41d253:	pop    esp
  41d254:	adc    edx,DWORD PTR [eax-0x27dfaef8]
  41d25a:	scas   al,BYTE PTR es:[edi]
  41d25b:	cli    
  41d25c:	ins    BYTE PTR es:[edi],dx
  41d25d:	mov    DWORD PTR [eax-0x48],edi
  41d260:	inc    eax
  41d261:	jge    0x41d233
  41d263:	jle    0x41d268
  41d265:	stc    
  41d266:	jno    0x41d214
  41d268:	dec    ebp
  41d269:	nop
  41d26a:	jge    0x41d1fa
  41d26c:	cdq    
  41d26d:	test   dl,bl
  41d26f:	dec    edi
  41d270:	rol    DWORD PTR ss:[ebp-0x3207b5f8],1
  41d277:	push   ebp
  41d278:	inc    ebp
  41d279:	ret    0xf369
  41d27c:	jb     0x41d2be
  41d27e:	popf   
  41d27f:	clc    
  41d280:	and    eax,0x6a294c12
  41d285:	setl   BYTE PTR [eax-0x6]
  41d289:	scas   al,BYTE PTR es:[edi]
  41d28a:	sbb    DWORD PTR [ecx],ecx
  41d28c:	retf   
  41d28d:	inc    ecx
  41d28e:	jg     0x41d28a
  41d290:	mov    ch,bl
  41d292:	cmp    al,0xc9
  41d294:	mov    ?,WORD PTR [ecx]
  41d296:	jecxz  0x41d28e
  41d298:	in     al,dx
  41d299:	cwde   
  41d29a:	ja     0x41d258
  41d29c:	cmp    al,0x4e
  41d29e:	xor    eax,0x59d5016e
  41d2a3:	daa    
  41d2a4:	push   eax
  41d2a5:	adc    dh,BYTE PTR [eax-0x41e11fda]
  41d2ab:	out    0xc9,al
  41d2ad:	pop    edx
  41d2ae:	sub    BYTE PTR [edx+ebp*2+0x3829da42],ah
  41d2b5:	or     BYTE PTR [edi],ah
  41d2b7:	xor    BYTE PTR [eax-0x3fcdb5cd],bl
  41d2bd:	inc    edi
  41d2be:	mov    ebx,0x4dcfcc18
  41d2c3:	(bad)  
  41d2c4:	fisub  DWORD PTR [ebp+0x2b]
  41d2c7:	cmp    al,0xca
  41d2c9:	outs   dx,DWORD PTR ds:[esi]
  41d2ca:	repnz rcr DWORD PTR [ebx+0x1],cl
  41d2ce:	pop    es
  41d2cf:	push   esp
  41d2d0:	xchg   ebp,eax
  41d2d1:	xlat   BYTE PTR ds:[ebx]
  41d2d2:	push   esp
  41d2d3:	mov    bl,0x2c
  41d2d5:	lods   eax,DWORD PTR ds:[esi]
  41d2d6:	test   eax,0x4d37c537
  41d2db:	iret   
  41d2dc:	xchg   esi,eax
  41d2dd:	mov    ch,0x58
  41d2df:	sub    ebp,DWORD PTR [edx+ebp*1-0x3]
  41d2e3:	mov    ds:0x1c19b834,eax
  41d2e8:	pop    eax
  41d2e9:	lahf   
  41d2ea:	xor    al,0x4d
  41d2ec:	sbb    al,0x5f
  41d2ee:	loopne 0x41d350
  41d2f0:	cmp    BYTE PTR [edx],ah
  41d2f2:	lods   al,BYTE PTR ds:[esi]
  41d2f3:	test   BYTE PTR [ecx+0xe],dl
  41d2f6:	int    0x78
  41d2f8:	xor    al,0xcd
  41d2fa:	push   es
  41d2fb:	hlt    
  41d2fc:	prefetchnta BYTE PTR [ebx+eax*8-0x15d4153f]
  41d304:	add    bl,BYTE PTR [esi-0x67]
  41d307:	xchg   edx,eax
  41d308:	inc    esi
  41d309:	fmul   st(5),st
  41d30b:	out    0x5,eax
  41d30d:	fnstsw WORD PTR [esi-0x7f]
  41d310:	das    
  41d311:	(bad)  
  41d313:	add    al,0xae
  41d315:	loop   0x41d308
  41d317:	mov    ecx,ebp
  41d319:	inc    eax
  41d31a:	gs jo  0x41d2e3
  41d31d:	sbb    eax,0x52978ae
  41d322:	ret    0xcc54
  41d325:	cwde   
  41d326:	jo     0x41d38d
  41d328:	xor    al,0xb5
  41d32a:	push   es
  41d32b:	mov    dh,0xa4
  41d32d:	xor    esp,DWORD PTR [eax-0x2ad87bf8]
  41d333:	jl     0x41d384
  41d335:	adc    al,0x4d
  41d337:	mov    ds,WORD PTR [eax]
  41d339:	xlat   BYTE PTR ds:[ebx]
  41d33a:	sbb    dh,BYTE PTR [ecx]
  41d33c:	into   
  41d33d:	imul   edx,DWORD PTR ds:[ebx],0xffffff8a
  41d341:	icebp  
  41d342:	rol    DWORD PTR [edi+0x65],cl
  41d345:	lds    ecx,FWORD PTR [edi*4-0x1a09f396]
  41d34c:	cmp    al,BYTE PTR [eax-0x56]
  41d34f:	ret    0xe857
  41d352:	popf   
  41d353:	iret   
  41d354:	inc    esp
  41d355:	dec    eax
  41d356:	mov    esp,0x61515d7e
  41d35b:	dec    esp
  41d35c:	xor    DWORD PTR [edi+0x50f19bb],ebx
  41d362:	imul   esp,DWORD PTR [ecx],0xffffffb2
  41d365:	add    al,0x5a
  41d367:	mov    DWORD PTR [ecx-0x49ca6fc8],edi
  41d36d:	in     eax,0xff
  41d36f:	sub    eax,0xc83c35ad
  41d374:	mov    dh,0x27
  41d376:	shl    BYTE PTR [ebx+eax*4+0x392893b9],0xa5
  41d37e:	or     al,0x80
  41d380:	int3   
  41d381:	and    edi,DWORD PTR [esi-0x1a8a943c]
  41d387:	popf   
  41d388:	mov    al,BYTE PTR [esi]
  41d38a:	pop    es
  41d38b:	retf   0x3aee
  41d38e:	sub    ah,cl
  41d390:	and    ebx,ecx
  41d392:	xchg   ebx,eax
  41d393:	mov    WORD PTR [esi],fs
  41d395:	mov    dh,0x2e
  41d397:	inc    ecx
  41d398:	or     BYTE PTR [edi+eax*4+0x7b],ah
  41d39c:	inc    ebx
  41d39d:	jns    0x41d367
  41d39f:	aam    0x24
  41d3a1:	jmp    0x41d3ab
  41d3a3:	fdivr  st(5),st
  41d3a5:	repnz int 0x5f
  41d3a8:	fistp  QWORD PTR [ebx]
  41d3aa:	cdq    
  41d3ab:	sbb    al,0x8d
  41d3ad:	pop    ss
  41d3ae:	cmp    al,ah
  41d3b0:	daa    
  41d3b1:	stos   DWORD PTR es:[edi],eax
  41d3b2:	xchg   ebx,eax
  41d3b3:	sub    ebx,DWORD PTR [ebx+edi*1-0x32]
  41d3b7:	dec    ebp
  41d3b8:	dec    eax
  41d3b9:	pop    esp
  41d3ba:	mov    ebp,0xb26b728e
  41d3bf:	jbe    0x41d41a
  41d3c1:	fnstcw WORD PTR es:[eax-0x4e616616]
  41d3c8:	retf   0x3256
  41d3cb:	jl     0x41d3a9
  41d3cd:	xchg   ecx,eax
  41d3ce:	adc    dh,bl
  41d3d0:	sbb    ebx,ebp
  41d3d2:	pop    esi
  41d3d3:	(bad)  
  41d3d5:	movntq QWORD PTR [esi-0x2e],mm5
  41d3d9:	xchg   ecx,eax
  41d3da:	loop   0x41d3ed
  41d3dc:	add    esi,ecx
  41d3de:	mov    dh,0x46
  41d3e0:	ret    
  41d3e1:	in     eax,dx
  41d3e2:	mov    bl,0xdb
  41d3e4:	pop    ecx
  41d3e5:	test   BYTE PTR [esi],bh
  41d3e7:	mov    edx,0xd2991b0
  41d3ec:	(bad)  
  41d3ed:	call   0x85f2:0x25393430
  41d3f4:	cmp    bl,BYTE PTR [ebx+0x3bd8d7c3]
  41d3fa:	mov    ds:0x541c66e0,al
  41d3ff:	mov    al,ds:0x6a39bcd4
  41d404:	stos   DWORD PTR es:[edi],eax
  41d405:	(bad)  ds:0x9f2e3b71
  41d40b:	sub    al,0x25
  41d40d:	mov    ecx,0x61aa1186
  41d412:	adc    dh,BYTE PTR [ecx]
  41d414:	xchg   ebx,eax
  41d415:	cld    
  41d416:	out    dx,eax
  41d417:	xchg   ebp,eax
  41d418:	jge    0x41d3db
  41d41a:	or     eax,0x5a17b6da
  41d41f:	inc    esi
  41d420:	nop
  41d421:	test   eax,0x1fe313c
  41d426:	xor    BYTE PTR [ecx],dl
  41d428:	add    esp,ebp
  41d42a:	dec    edx
  41d42b:	es push ebx
  41d42d:	push   edx
  41d42e:	push   edx
  41d42f:	xor    dh,BYTE PTR [ebx]
  41d431:	shr    bh,cl
  41d433:	lods   al,BYTE PTR ds:[esi]
  41d434:	cmp    esp,esp
  41d436:	mov    gs,WORD PTR [eax+0x0]
  41d439:	add    al,0x7a
  41d43b:	inc    edi
  41d43c:	xor    DWORD PTR [edi-0x37],esp
  41d43f:	dec    edx
  41d440:	and    BYTE PTR [edx+0x2b30169e],bl
  41d446:	rcr    DWORD PTR [eax-0x55],1
  41d449:	jae    0x41d472
  41d44b:	stos   DWORD PTR es:[edi],eax
  41d44c:	(bad)  
  41d44d:	cmp    eax,0x90d175f4
  41d452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d453:	inc    ecx
  41d454:	mov    ch,0xfe
  41d456:	repz shl bh,0x59
  41d45a:	ds push 0x4548fbd7
  41d460:	pop    ss
  41d461:	test   DWORD PTR [edi],ecx
  41d463:	shl    BYTE PTR gs:[edi],1
  41d466:	cmp    bh,BYTE PTR [ecx]
  41d468:	mov    al,0xf5
  41d46a:	push   0x65
  41d46c:	mov    BYTE PTR [esi-0x48e9fdd5],dl
  41d472:	int    0xcd
  41d474:	or     al,0x11
  41d476:	pop    esi
  41d477:	mov    ebp,0x1367074c
  41d47c:	push   ebx
  41d47d:	iret   
  41d47e:	sub    BYTE PTR [esi-0x40f985d1],dh
  41d484:	cdq    
  41d485:	cmp    al,0xa1
  41d487:	aad    0x3b
  41d489:	jl     0x41d4ad
  41d48b:	or     DWORD PTR [eax-0x68],edx
  41d48e:	sti    
  41d48f:	mov    ebp,0xd39ad2f
  41d494:	stos   BYTE PTR es:[edi],al
  41d495:	cmp    eax,DWORD PTR [ebp+0x21]
  41d498:	jno    0x41d430
  41d49a:	retf   0x2f15
  41d49d:	pop    ss
  41d49e:	push   0xffffffb5
  41d4a0:	add    eax,DWORD PTR [eax-0x5d]
  41d4a3:	pop    es
  41d4a4:	ja     0x41d43a
  41d4a6:	push   es
  41d4a7:	inc    ebx
  41d4a8:	or     BYTE PTR [esi-0x7b227247],bl
  41d4ae:	mov    eax,ds:0xfd96c43c
  41d4b3:	int    0x2
  41d4b5:	out    dx,al
  41d4b6:	aaa    
  41d4b7:	jnp    0x41d50c
  41d4b9:	js     0x41d472
  41d4bb:	jle    0x41d4d5
  41d4bd:	iret   
  41d4be:	shl    DWORD PTR [edi-0x44a77a9d],0xab
  41d4c5:	jns    0x41d4d1
  41d4c7:	adc    bh,BYTE PTR [edx-0x73]
  41d4ca:	cmp    eax,0x5ea51791
  41d4cf:	or     edi,DWORD PTR [eax+0x3432df40]
  41d4d5:	call   0xf4b18cac
  41d4da:	xchg   ecx,eax
  41d4db:	jge    0x41d52b
  41d4dd:	mov    edi,?
  41d4df:	push   es
  41d4e0:	or     ch,BYTE PTR [ebx-0xd]
  41d4e3:	cwde   
  41d4e4:	enter  0xcebd,0xe6
  41d4e8:	mov    al,0x27
  41d4ea:	mov    eax,ds:0xcfe59745
  41d4ef:	cmp    al,0xc6
  41d4f1:	loop   0x41d4c2
  41d4f3:	pushf  
  41d4f4:	mov    dh,0x1c
  41d4f6:	cmp    al,dh
  41d4f8:	or     esp,DWORD PTR [esi-0x13]
  41d4fb:	mov    ds:0x30eb9b49,eax
  41d500:	mov    ds:0xd84c592e,al
  41d505:	fstp   QWORD PTR [edx-0x1b6b5df1]
  41d50b:	mov    DWORD PTR [edi-0x1f],ebx
  41d50e:	push   cs
  41d50f:	inc    esp
  41d510:	popf   
  41d511:	mov    esp,0x64ca7fbb
  41d516:	mov    edi,0x828220c2
  41d51b:	adc    DWORD PTR [ebp+0x6074f11a],ecx
  41d521:	in     eax,dx
  41d522:	shl    DWORD PTR [ebp+ebx*8+0x74],cl
  41d526:	mov    esi,0xfc1782a3
  41d52b:	ja     0x41d55b
  41d52d:	mov    bh,0x4e
  41d52f:	and    edi,DWORD PTR [edx]
  41d531:	lock jno 0x41d5a5
  41d534:	xor    BYTE PTR [ecx+0x7c],ah
  41d537:	loopne 0x41d4dc
  41d539:	sub    ah,bh
  41d53b:	mov    dh,BYTE PTR [ecx+0x56]
  41d53e:	jb     0x41d595
  41d540:	stc    
  41d541:	xchg   ebp,eax
  41d542:	ja     0x41d599
  41d544:	imul   edi,DWORD PTR [ebx-0x1da7e0ca],0x5b
  41d54b:	gs cmp al,0x73
  41d54e:	jnp    0x41d4e1
  41d550:	pop    ecx
  41d551:	cs in  al,0x83
  41d554:	call   FWORD PTR [eax+0x33]
  41d557:	es mov eax,0x3b2c3aa3
  41d55d:	int3   
  41d55e:	jecxz  0x41d509
  41d560:	dec    edi
  41d561:	push   ds
  41d562:	dec    ebx
  41d563:	clc    
  41d564:	sbb    DWORD PTR [edi],esp
  41d566:	xor    eax,0x8d3bfdca
  41d56b:	das    
  41d56c:	xchg   esp,eax
  41d56d:	push   ds
  41d56e:	cdq    
  41d56f:	push   cs
  41d570:	arpl   sp,di
  41d572:	cmp    BYTE PTR es:[esi-0x70edf5c9],cl
  41d579:	repnz repnz xchg ecx,eax
  41d57c:	jb     0x41d5d5
  41d57e:	sbb    esi,ebx
  41d580:	or     al,0x6e
  41d582:	(bad)  
  41d583:	fiadd  DWORD PTR [ecx+0x11]
  41d586:	mov    gs,WORD PTR [ecx+0x55]
  41d589:	fmul   st,st(3)
  41d58b:	jmp    0x8c2c828a
  41d590:	fst    DWORD PTR [ecx-0x13]
  41d593:	dec    esi
  41d594:	and    BYTE PTR [esp+eiz*2],dl
  41d597:	lock xor esi,DWORD PTR [ecx+esi*4]
  41d59b:	jmp    0x9be30657
  41d5a0:	fcmovb st,st(5)
  41d5a2:	push   esi
  41d5a3:	and    al,0x52
  41d5a5:	sti    
  41d5a6:	out    dx,al
  41d5a7:	pop    ds
  41d5a8:	aas    
  41d5a9:	adc    al,0x75
  41d5ab:	nop
  41d5ac:	sar    ecx,1
  41d5ae:	jb     0x41d555
  41d5b0:	xor    DWORD PTR ds:0xcf4f5787,ebp
  41d5b6:	test   al,dh
  41d5b8:	xor    BYTE PTR [eax-0xb],0x96
  41d5bc:	fs out 0x77,eax
  41d5bf:	add    BYTE PTR [edx-0x4d],dl
  41d5c2:	fs pop edx
  41d5c4:	xor    DWORD PTR [ecx-0x4be4e7a8],ecx
  41d5ca:	call   0x9b21:0x26d3344b
  41d5d1:	mov    al,ds:0xa99f7ce9
  41d5d6:	cmp    DWORD PTR [edi+edx*4-0x1f684825],0x75
  41d5de:	push   ebp
  41d5df:	push   ecx
  41d5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5e1:	fistp  QWORD PTR [ecx-0x25]
  41d5e4:	push   ss
  41d5e5:	push   edx
  41d5e6:	xor    ah,bl
  41d5e8:	call   0xc90d:0x2e9cbc0a
  41d5ef:	shl    ecx,0x72
  41d5f2:	or     BYTE PTR [ecx-0x2a],ch
  41d5f5:	retf   
  41d5f6:	dec    DWORD PTR [esi-0x7ffdf468]
  41d5fc:	es fcmove st,st(4)
  41d5ff:	lahf   
  41d600:	and    eax,0x4394a0c6
  41d605:	pushf  
  41d606:	outs   dx,BYTE PTR ds:[esi]
  41d607:	gs cmp eax,0xe71576e9
  41d60d:	xor    dh,cl
  41d60f:	mov    esi,0x33d13157
  41d614:	mov    ds:0x448286f3,al
  41d619:	cmc    
  41d61a:	enter  0x3a7a,0xe3
  41d61e:	rcl    dh,cl
  41d620:	xor    eax,0xbb996634
  41d625:	outs   dx,BYTE PTR gs:[esi]
  41d627:	(bad)  
  41d628:	out    dx,eax
  41d629:	pop    ds
  41d62a:	push   ebx
  41d62b:	jle    0x41d5b3
  41d62d:	adc    al,0x6d
  41d62f:	call   0xffdc:0xf4db3b51
  41d636:	jmp    0x3c6d:0x41a7
  41d63c:	stos   BYTE PTR es:[edi],al
  41d63d:	jb     0x41d60f
  41d63f:	(bad)  
  41d640:	xchg   edi,eax
  41d641:	out    dx,al
  41d642:	es adc eax,0x5ce4bf62
  41d648:	inc    ecx
  41d649:	push   eax
  41d64a:	addr16 add al,0x8a
  41d64d:	cmp    eax,0x99b5e88d
  41d652:	fsubr  QWORD PTR [edx+0x35]
  41d655:	xor    esp,DWORD PTR [esp+ebx*2]
  41d658:	and    al,0xde
  41d65b:	dec    esi
  41d65c:	jle    0x41d61e
  41d65e:	xchg   BYTE PTR [ecx+0x79],ah
  41d661:	(bad)  
  41d662:	fnstcw WORD PTR [ebx]
  41d664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d665:	pop    ebx
  41d666:	inc    edi
  41d667:	mov    dh,0xe
  41d669:	lahf   
  41d66a:	clc    
  41d66b:	mov    ecx,0x991c79b3
  41d670:	imul   ebx,edi,0x7f
  41d673:	stos   BYTE PTR es:[edi],al
  41d674:	push   esi
  41d675:	je     0x41d649
  41d677:	dec    ebp
  41d678:	mov    ds:0x2172a7be,eax
  41d67d:	pop    ds
  41d67e:	sbb    BYTE PTR [ecx+eax*4+0x52f1b3d4],dl
  41d685:	push   edi
  41d686:	lods   eax,DWORD PTR ds:[esi]
  41d687:	retf   0x6ee9
  41d68a:	jbe    0x41d669
  41d68c:	xchg   BYTE PTR [edi+ebx*4-0x21],dh
  41d690:	mov    eax,0x744bf688
  41d695:	sar    DWORD PTR [ecx+0x3e],1
  41d698:	int    0xe5
  41d69a:	std    
  41d69b:	aaa    
  41d69c:	inc    esi
  41d69d:	ds ss jg 0x41d702
  41d6a1:	push   ebp
  41d6a2:	adc    esi,DWORD PTR [ecx+0x77]
  41d6a5:	xor    al,0x62
  41d6a7:	mov    eax,0x905639c4
  41d6ac:	cmp    ecx,DWORD PTR [edi]
  41d6ae:	(bad)  [ebp-0x728638b5]
  41d6b4:	xchg   DWORD PTR [esi],edi
  41d6b6:	rol    BYTE PTR [edx],cl
  41d6b8:	cs xor esi,0xa71c7caf
  41d6bf:	fist   WORD PTR [edx]
  41d6c1:	cmp    eax,DWORD PTR [ebp+ecx*8-0x75869f2e]
  41d6c8:	and    bh,BYTE PTR [edi]
  41d6ca:	out    0xdc,al
  41d6cc:	pop    es
  41d6cd:	jo     0x41d725
  41d6cf:	call   FWORD PTR [edi+0x31]
  41d6d2:	daa    
  41d6d3:	jno    0x41d703
  41d6d5:	repnz add BYTE PTR [edx-0x5b330a01],dl
  41d6dc:	outs   dx,BYTE PTR ds:[esi]
  41d6dd:	fmul   DWORD PTR [eax+0x1d]
  41d6e0:	or     eax,esp
  41d6e2:	rcr    DWORD PTR [ebx],1
  41d6e4:	nop
  41d6e5:	sub    edi,DWORD PTR [edx]
  41d6e7:	retf   
  41d6e8:	jne    0x41d696
  41d6ea:	sub    BYTE PTR [eax-0x66],0xeb
  41d6ee:	inc    esi
  41d6ef:	out    0x2e,eax
  41d6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f2:	cwde   
  41d6f3:	push   0x8
  41d6f5:	rcr    DWORD PTR [edi],1
  41d6f7:	jns    0x41d720
  41d6f9:	and    BYTE PTR [eax-0x78e73e60],dh
  41d6ff:	fdivr  QWORD PTR [edx-0x7b]
  41d702:	cmp    al,BYTE PTR [ebp-0x486ae2c3]
  41d708:	and    ebp,DWORD PTR [esi+0x47]
  41d70b:	or     eax,0x9715ef4d
  41d710:	add    ch,bl
  41d712:	leave  
  41d713:	xor    DWORD PTR [esi+0x5e87b3fd],esi
  41d719:	and    DWORD PTR [ecx+0x65941dbf],ebp
  41d71f:	outs   dx,DWORD PTR ds:[esi]
  41d720:	les    esi,FWORD PTR [eax]
  41d722:	retf   0xa71a
  41d725:	lds    ebp,FWORD PTR [edx+0x25]
  41d728:	scas   eax,DWORD PTR es:[edi]
  41d729:	xor    eax,0x2b28a9e4
  41d72e:	or     DWORD PTR [ebp+0x5c],esp
  41d731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d732:	adc    BYTE PTR [edi+edx*1-0x45],ch
  41d736:	aam    0x2c
  41d738:	inc    edi
  41d739:	pop    ss
  41d73a:	jno    0x41d738
  41d73c:	and    DWORD PTR [ebp-0x39433792],edx
  41d742:	popf   
  41d743:	mov    BYTE PTR [eax-0x62587a5f],al
  41d749:	sbb    esi,DWORD PTR [edi-0x80]
  41d74c:	jnp    0x41d6dd
  41d74e:	sbb    DWORD PTR [ebx+eiz*1],ebp
  41d751:	xor    eax,0x23bb39d9
  41d756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d757:	mov    ah,0xf0
  41d759:	test   BYTE PTR [edx],0x87
  41d75c:	inc    ecx
  41d75d:	sub    ah,BYTE PTR [edx-0x62b2abab]
  41d763:	add    eax,0x532a6552
  41d768:	fmul   st,st(5)
  41d76a:	dec    eax
  41d76b:	ds lock ss or al,0xc6
  41d770:	ja     0x41d742
  41d772:	mov    bh,0x34
  41d774:	jo     0x41d7f2
  41d776:	add    BYTE PTR [edi-0x2f],0x27
  41d77a:	xor    ah,bh
  41d77c:	mov    ds:0x4d97740d,al
  41d781:	imul   edi,DWORD PTR [ecx],0x70
  41d784:	mov    esi,DWORD PTR es:[edi+ebx*4]
  41d788:	ret    
  41d789:	test   eax,0x39430c00
  41d78e:	jg     0x41d75e
  41d790:	add    DWORD PTR [edi+0x595d323d],ebp
  41d796:	adc    BYTE PTR [ebx+0x2c],cl
  41d799:	pop    es
  41d79a:	popa   
  41d79b:	cmp    BYTE PTR [ebp-0x55aa82f7],cl
  41d7a1:	mov    dh,0xfd
  41d7a3:	cmp    al,0x56
  41d7a5:	mov    WORD PTR [ecx+edi*2],?
  41d7a8:	inc    edi
  41d7a9:	mov    ds:0xabe43efb,al
  41d7ae:	xchg   esi,eax
  41d7af:	les    esp,FWORD PTR [edx]
  41d7b1:	jbe    0x80a98057
  41d7b7:	sar    DWORD PTR [ebp-0x5e],0xfa
  41d7bb:	sbb    DWORD PTR [esi],ecx
  41d7bd:	lahf   
  41d7be:	cmp    DWORD PTR [ebp+0x397f0b9b],ecx
  41d7c4:	fld    QWORD PTR [eax-0x71]
  41d7c7:	in     al,dx
  41d7c8:	test   al,0x31
  41d7ca:	repnz int 0x64
  41d7cd:	cmp    bl,BYTE PTR [edi]
  41d7cf:	fbstp  TBYTE PTR [esi+eiz*1-0x1e]
  41d7d3:	scas   al,BYTE PTR es:[edi]
  41d7d4:	dec    ebx
  41d7d5:	inc    esi
  41d7d6:	shl    ebp,1
  41d7d8:	sbb    eax,0x530ada16
  41d7dd:	scas   eax,DWORD PTR es:[edi]
  41d7de:	xor    esp,ecx
  41d7e0:	imul   ebx,DWORD PTR [esi+0x1e],0xd6ec85a7
  41d7e7:	sar    DWORD PTR [esi+ecx*4+0x68],0x59
  41d7ec:	pop    eax
  41d7ed:	popf   
  41d7ee:	sbb    edx,edx
  41d7f0:	lods   eax,DWORD PTR ds:[esi]
  41d7f1:	xchg   esp,ebp
  41d7f3:	adc    esi,eax
  41d7f5:	mov    ah,0x79
  41d7f7:	push   es
  41d7f8:	out    0x4,eax
  41d7fa:	pusha  
  41d7fb:	sar    BYTE PTR [ebx+ebp*8+0x5e],1
  41d7ff:	shl    DWORD PTR [edi+ebp*1],cl
  41d802:	adc    eax,0xaa3ad1c7
  41d807:	test   eax,0x1daa2996
  41d80c:	aad    0x17
  41d80e:	ins    BYTE PTR es:[edi],dx
  41d80f:	or     ebp,DWORD PTR [edi]
  41d811:	cs dec ebx
  41d813:	sub    al,0xeb
  41d815:	adc    BYTE PTR [eax],bh
  41d817:	dec    edx
  41d818:	xor    BYTE PTR [edi+ecx*2-0x1e6b19bd],0x8b
  41d820:	mov    esp,0x9198753f
  41d825:	jmp    0x41d89c
  41d827:	repnz pop edx
  41d829:	and    ecx,DWORD PTR [edi+ecx*4+0x5dde41f5]
  41d830:	pop    ebp
  41d831:	jecxz  0x41d7d0
  41d833:	jp     0x41d7bf
  41d835:	xor    ch,BYTE PTR [edx-0x50]
  41d838:	outs   dx,DWORD PTR ds:[esi]
  41d839:	sbb    al,0x9d
  41d83b:	mov    edx,DWORD PTR [esi+0xf]
  41d83e:	daa    
  41d83f:	ja     0x41d82c
  41d841:	rcr    esi,cl
  41d843:	lods   eax,DWORD PTR ds:[esi]
  41d844:	xchg   DWORD PTR [edi],esi
  41d846:	dec    eax
  41d847:	sub    ebx,DWORD PTR [edx+eax*1-0x7d7c99de]
  41d84e:	clc    
  41d84f:	push   es
  41d850:	mov    eax,ds:0xc13e8fd1
  41d855:	js     0x41d8c4
  41d857:	sti    
  41d858:	inc    ebx
  41d859:	clc    
  41d85a:	pop    esp
  41d85b:	xlat   BYTE PTR ds:[ebx]
  41d85c:	mov    eax,ds:0xfc2c4ea5
  41d861:	mov    esi,DWORD PTR [ebp-0x14]
  41d864:	stos   DWORD PTR es:[edi],eax
  41d865:	sub    DWORD PTR [eax-0x16fe9e3d],ebp
  41d86b:	sub    bh,BYTE PTR [ebp+0x27]
  41d86e:	and    al,0x72
  41d870:	test   al,0x1c
  41d872:	inc    edi
  41d873:	test   BYTE PTR [ebx-0x5ccf2ae9],0xa0
  41d87a:	pop    ss
  41d87b:	mov    bh,0xdb
  41d87d:	jb     0x41d88c
  41d87f:	push   edx
  41d880:	repnz mov ecx,0xfabc757d
  41d886:	js     0x41d809
  41d888:	(bad)  
  41d889:	xor    DWORD PTR [ecx],ecx
  41d88b:	xlat   BYTE PTR ds:[ebx]
  41d88c:	imul   edx,esp,0x4a389e80
  41d892:	scas   eax,DWORD PTR es:[edi]
  41d893:	pop    edx
  41d894:	mov    ecx,0xcaa9392d
  41d899:	mov    cl,0x60
  41d89b:	(bad)  
  41d89c:	mov    bl,0x5f
  41d89e:	cvtps2pi mm0,xmm2
  41d8a1:	fimul  DWORD PTR [ebp+0x565107f3]
  41d8a7:	push   edi
  41d8a8:	cs mov bh,0xd9
  41d8ab:	sbb    eax,0xe9c07203
  41d8b0:	push   ebp
  41d8b1:	jo     0x41d848
  41d8b3:	adc    eax,0x9e12d952
  41d8b8:	xor    BYTE PTR [edx+0x75],0xa0
  41d8bc:	inc    ebp
  41d8bd:	ss jl  0x41d860
  41d8c0:	mov    al,0xf5
  41d8c2:	dec    ecx
  41d8c3:	add    cl,BYTE PTR [ebp+edi*4+0x76]
  41d8c7:	fisttp DWORD PTR ds:0xee737cd3
  41d8cd:	fiadd  WORD PTR [esi-0x83db034]
  41d8d3:	stc    
  41d8d4:	(bad)  
  41d8d5:	sub    BYTE PTR [eax-0x357f93bc],dh
  41d8db:	in     al,0xc0
  41d8dd:	xor    al,0x68
  41d8df:	or     ebp,DWORD PTR [eax+0x4a6023a5]
  41d8e5:	nop
  41d8e6:	inc    ecx
  41d8e7:	jmp    0x41d89f
  41d8e9:	cmp    bl,BYTE PTR [esi]
  41d8eb:	jl     0x41d950
  41d8ed:	cdq    
  41d8ee:	push   0x42174e61
  41d8f3:	outs   dx,BYTE PTR fs:[esi]
  41d8f5:	mov    ch,0x5e
  41d8f7:	iret   
  41d8f8:	mov    ah,0x6d
  41d8fa:	adc    BYTE PTR [esi],ah
  41d8fc:	mov    edx,0xf25e7da0
  41d901:	sbb    al,0xc6
  41d903:	cmp    eax,0x1e11f2dc
  41d908:	fwait
  41d909:	mov    eax,ds:0x2160234c
  41d90e:	shl    dl,1
  41d910:	or     BYTE PTR [esi],dl
  41d912:	std    
  41d913:	inc    ebp
  41d914:	add    esi,DWORD PTR [eax+0x3d]
  41d917:	cwde   
  41d918:	sbb    ebp,DWORD PTR [ebp-0x5c8fc402]
  41d91e:	lods   al,BYTE PTR ds:[esi]
  41d91f:	out    dx,al
  41d920:	rol    BYTE PTR [eax],0xb1
  41d923:	jmp    0x41d978
  41d925:	or     edx,DWORD PTR [eax-0x2c6755d]
  41d92b:	sbb    al,0x1a
  41d92d:	div    BYTE PTR [edi+0x7eda041f]
  41d933:	mov    cl,bl
  41d935:	sar    BYTE PTR [ebx],cl
  41d937:	adc    ah,ah
  41d939:	ret    0xdcb1
  41d93c:	add    DWORD PTR [eax+0x25a89d88],eax
  41d942:	stc    
  41d943:	dec    edx
  41d944:	shr    BYTE PTR [ebp-0x3d9e549e],1
  41d94a:	pusha  
  41d94b:	push   0x1d04415b
  41d950:	dec    edx
  41d951:	stos   BYTE PTR es:[edi],al
  41d952:	inc    esp
  41d953:	dec    ecx
  41d954:	xchg   ebp,eax
  41d955:	neg    DWORD PTR [esp+ebp*8+0x51]
  41d959:	mov    edi,0x3efe999
  41d95e:	or     eax,0xa2de1625
  41d963:	xchg   esi,eax
  41d964:	jge    0x41d8e7
  41d966:	cwde   
  41d967:	xor    DWORD PTR [edx],esi
  41d969:	push   ecx
  41d96a:	xor    esi,DWORD PTR [ebx]
  41d96c:	(bad)
  41d96f:	push   ecx
  41d970:	out    0xfa,eax
  41d972:	frstor [edi+edi*4]
  41d975:	cwde   
  41d976:	jecxz  0x41d98c
  41d978:	in     eax,0xd4
  41d97a:	sbb    al,0xea
  41d97c:	jecxz  0x41d945
  41d97e:	loope  0x41d9fb
  41d980:	lods   al,BYTE PTR ds:[esi]
  41d981:	fdivr  st,st(3)
  41d983:	add    BYTE PTR [ebp-0x6f],0x6d
  41d987:	inc    cx
  41d989:	ja     0x41d999
  41d98b:	cmp    esp,DWORD PTR [eax]
  41d98d:	sbb    ebp,DWORD PTR [ecx]
  41d98f:	aas    
  41d990:	push   cs
  41d991:	mov    esi,0x3e44d9de
  41d996:	dec    ebp
  41d997:	retf   0x342
  41d99a:	std    
  41d99b:	cmc    
  41d99c:	loopne 0x41d960
  41d99e:	fbstp  TBYTE PTR [edx+0x15]
  41d9a1:	jg     0x41d9ac
  41d9a3:	loope  0x41d9ac
  41d9a5:	(bad)  [esi+edx*8+0x1e0e054c]
  41d9ac:	adc    al,dh
  41d9ae:	jmp    0x41d9ef
  41d9b0:	xchg   ebp,eax
  41d9b1:	lods   eax,DWORD PTR ds:[esi]
  41d9b2:	rcr    BYTE PTR [ecx],0xd5
  41d9b5:	cdq    
  41d9b6:	or     dl,BYTE PTR [esi+0x5c]
  41d9b9:	mov    eax,ds:0x12775c01
  41d9be:	jp     0x41d94c
  41d9c0:	in     al,dx
  41d9c1:	inc    esi
  41d9c2:	xchg   ecx,eax
  41d9c3:	pop    ds
  41d9c4:	adc    ecx,DWORD PTR [eax+0x72]
  41d9c7:	daa    
  41d9c8:	cs pop es
  41d9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9cb:	scas   al,BYTE PTR es:[edi]
  41d9cc:	div    BYTE PTR [esi-0x55]
  41d9cf:	pop    esi
  41d9d0:	mov    ecx,0x517f0a27
  41d9d5:	pcmpeqb mm7,mm6
  41d9d8:	stc    
  41d9d9:	data16 ins BYTE PTR es:[edi],dx
  41d9db:	jnp    0x41da38
  41d9dd:	xor    DWORD PTR [edi-0x1],esp
  41d9e0:	(bad)  [ebx+eiz*8-0x59]
  41d9e4:	mov    DWORD PTR ds:0xfc1b253a,esp
  41d9ea:	xchg   edx,eax
  41d9eb:	stos   BYTE PTR es:[edi],al
  41d9ec:	fstp   TBYTE PTR [ecx-0xaaeebf7]
  41d9f2:	enterw 0xe9a8,0x37
  41d9f7:	out    0xdf,eax
  41d9f9:	mov    edi,0x1bc3bc4d
  41d9fe:	jns    0x41d9f0
  41da00:	inc    edi
  41da01:	scas   eax,DWORD PTR es:[edi]
  41da02:	iret   
  41da03:	popa   
  41da04:	(bad)  
  41da05:	xchg   esi,eax
  41da06:	sbb    al,0xe0
  41da08:	mov    ch,0x34
  41da0a:	jl     0x41da3a
  41da0c:	xor    al,0x53
  41da0e:	push   ecx
  41da0f:	push   ss
  41da10:	pop    edi
  41da11:	outs   dx,BYTE PTR ds:[esi]
  41da12:	push   ds
  41da13:	scas   eax,DWORD PTR es:[edi]
  41da14:	ret    
  41da15:	mov    WORD PTR [edx-0x6a],?
  41da18:	xlat   BYTE PTR ds:[ebx]
  41da19:	jg     0x41d9e0
  41da1b:	shl    dl,1
  41da1d:	sub    eax,0x3b0e4243
  41da22:	jmp    0xd35f:0xeea10ce2
  41da29:	dec    ebx
  41da2a:	gs push ebx
  41da2c:	dec    esi
  41da2d:	sbb    DWORD PTR [ecx+ecx*8],edi
  41da30:	fild   QWORD PTR [esi]
  41da32:	adc    al,0x19
  41da34:	and    bh,dl
  41da36:	rcr    DWORD PTR [eax+0x5d],0x14
  41da3a:	loope  0x41da18
  41da3c:	sub    DWORD PTR [esi],ebp
  41da3e:	fst    QWORD PTR [ebx]
  41da40:	das    
  41da41:	mov    cl,0xf7
  41da43:	add    al,0x16
  41da45:	and    al,0x4c
  41da47:	mov    bl,0x53
  41da49:	out    dx,eax
  41da4a:	inc    esi
  41da4b:	fld    TBYTE PTR [ecx+edi*4-0x1e100461]
  41da52:	add    DWORD PTR ds:0xba9ef9d,esi
  41da58:	cmc    
  41da59:	mov    bl,0x23
  41da5b:	dec    ecx
  41da5c:	adc    bl,BYTE PTR [ecx-0x1166065]
  41da62:	nop
  41da63:	(bad)  
  41da64:	repz push eax
  41da66:	call   0x94052a2d
  41da6b:	inc    ebp
  41da6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da6d:	push   esi
  41da6e:	in     al,0x74
  41da70:	ss fwait
  41da72:	lea    edi,[eax]
  41da74:	inc    esi
  41da75:	or     dl,ch
  41da77:	or     eax,0x73dac123
  41da7c:	sub    esi,edx
  41da7e:	(bad)  
  41da7f:	mov    dh,0xb6
  41da81:	ds jb  0x41da1a
  41da84:	cs nop
  41da86:	mov    ebx,0x5b7ea6ba
  41da8b:	sbb    DWORD PTR [edi+0x39],esi
  41da8e:	stos   DWORD PTR es:[edi],eax
  41da8f:	std    
  41da90:	cmp    DWORD PTR [ebp+0x52af194b],edi
  41da96:	in     eax,0x66
  41da98:	je     0x41dac3
  41da9a:	fstp   QWORD PTR [ebx+0x6d822cce]
  41daa0:	cmp    DWORD PTR ds:0x128756c2,ebp
  41daa6:	stc    
  41daa7:	cwde   
  41daa8:	loope  0x41dae0
  41daaa:	imul   ebp,DWORD PTR [eax+0x724f1eaa],0x86e7a501
  41dab4:	add    al,0x1f
  41dab6:	fst    DWORD PTR [edi]
  41dab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab9:	ror    BYTE PTR [eax-0x5d2b98c6],0xea
  41dac0:	lods   al,BYTE PTR ds:[esi]
  41dac1:	push   cs
  41dac2:	cmp    eax,edi
  41dac4:	(bad)  
  41dac5:	fdivr  st(5),st
  41dac7:	sbb    ch,bl
  41dac9:	jns    0x41db17
  41dacb:	out    dx,eax
  41dacc:	dec    esp
  41dacd:	add    BYTE PTR [esi],0x48
  41dad0:	mov    edi,0xf3709392
  41dad5:	(bad)  
  41dad6:	leave  
  41dad7:	(bad)  
  41dad8:	sub    dl,dl
  41dada:	and    eax,0x455b102c
  41dadf:	mov    esi,0xa16bde3
  41dae4:	push   ebp
  41dae5:	sar    BYTE PTR [ecx-0x55],cl
  41dae8:	adc    al,0x1a
  41daea:	out    dx,eax
  41daeb:	adc    eax,0x8dd83e11
  41daf0:	push   0x1381211a
  41daf5:	in     al,dx
  41daf6:	out    dx,al
  41daf7:	mov    DWORD PTR [esi+0x1],0xb87e8a92
  41dafe:	outs   dx,DWORD PTR ds:[esi]
  41daff:	xchg   BYTE PTR [ebx+0xb47539b],ah
  41db05:	cmp    eax,0xce9dee00
  41db0a:	pop    ds
  41db0b:	add    DWORD PTR [esi+0x33],ebx
  41db0e:	popf   
  41db0f:	lea    ebp,[eax-0x6a]
  41db12:	repnz sbb bh,ah
  41db15:	out    0xb0,al
  41db17:	xor    esi,DWORD PTR [ebx-0x210710bc]
  41db1d:	scas   eax,DWORD PTR es:[edi]
  41db1e:	test   BYTE PTR [edx],cl
  41db20:	popf   
  41db21:	scas   eax,DWORD PTR es:[edi]
  41db22:	inc    esi
  41db23:	add    eax,0x8b1bb78a
  41db28:	sub    eax,0x1084ba2f
  41db2d:	jl     0x41dae3
  41db2f:	arpl   sp,sp
  41db31:	mov    ds:0x519f577b,eax
  41db36:	xor    edx,eax
  41db38:	retf   0xc468
  41db3b:	push   edx
  41db3c:	xor    ah,BYTE PTR [ecx+0x482649e2]
  41db42:	lds    ecx,FWORD PTR [edx+0x67]
  41db45:	sub    ch,0x7a
  41db48:	cmp    BYTE PTR [esi],bl
  41db4a:	test   DWORD PTR [edx],esp
  41db4c:	xchg   ecx,eax
  41db4d:	sti    
  41db4e:	and    esp,esi
  41db50:	fsub   DWORD PTR [edx-0x65]
  41db53:	je     0x41dba6
  41db55:	cld    
  41db56:	call   0x2b1933c1
  41db5b:	xor    al,0x82
  41db5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db5e:	jp     0x41db5d
  41db60:	adc    bh,BYTE PTR [ebx-0x7092ae2d]
  41db66:	popf   
  41db67:	out    dx,eax
  41db68:	lahf   
  41db69:	loopne 0x41db44
  41db6b:	push   ss
  41db6c:	ins    BYTE PTR es:[edi],dx
  41db6d:	imul   ecx,DWORD PTR [esi-0x1ed2d839],0xc8766318
  41db77:	call   FWORD PTR [ebp+0x27]
  41db7a:	jp     0x41db26
  41db7c:	jl     0x41dbcf
  41db7e:	xor    ebx,ebp
  41db80:	xor    eax,0x441c6309
  41db85:	inc    ecx
  41db86:	retf   
  41db87:	sub    bh,bh
  41db89:	add    ch,bh
  41db8b:	adc    DWORD PTR [ecx],0x909b5f5d
  41db91:	les    esi,FWORD PTR [ebx+edx*4+0x16]
  41db95:	inc    edi
  41db96:	inc    esi
  41db97:	cmp    dh,BYTE PTR [eax-0x6879d678]
  41db9d:	lahf   
  41db9e:	jbe    0x41dc1f
  41dba0:	sub    BYTE PTR [edx+edx*1+0x5c12de6a],bl
  41dba7:	test   eax,0xd335e317
  41dbac:	sub    dl,cl
  41dbae:	lahf   
  41dbaf:	call   FWORD PTR [edi+eax*8+0x2421f856]
  41dbb6:	mov    edi,0xf438d645
  41dbbb:	out    0x53,eax
  41dbbd:	mov    gs,esi
  41dbbf:	pop    ss
  41dbc0:	or     al,0x4b
  41dbc3:	sbb    ecx,DWORD PTR [ecx+edx*1-0x77bbe0cb]
  41dbca:	cmp    eax,0x6b5a7992
  41dbcf:	(bad)  [ebx+0x2a]
  41dbd2:	rdmsr  
  41dbd4:	cmp    bl,BYTE PTR [eax-0x42]
  41dbd7:	inc    esi
  41dbd8:	cmp    al,0x79
  41dbda:	jne    0x41db6d
  41dbdc:	cld    
  41dbdd:	xchg   ebx,eax
  41dbde:	xor    BYTE PTR [edi],bh
  41dbe0:	xlat   BYTE PTR ds:[ebx]
  41dbe1:	fst    DWORD PTR [ebp+0x11ef0381]
  41dbe7:	jno    0x41dc0d
  41dbe9:	sub    al,0xf6
  41dbeb:	cmc    
  41dbec:	daa    
  41dbed:	pop    ebp
  41dbee:	lods   eax,DWORD PTR ds:[esi]
  41dbef:	adc    bl,BYTE PTR [edx-0x62]
  41dbf2:	fild   DWORD PTR [edi]
  41dbf4:	sbb    ah,al
  41dbf6:	jo     0x41dbb4
  41dbf8:	add    al,0x93
  41dbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbfb:	inc    ebx
  41dbfc:	or     BYTE PTR [ecx-0x7b171eee],ah
  41dc02:	xchg   edi,eax
  41dc03:	mov    esp,0x9debdd7b
  41dc08:	sbb    ch,ch
  41dc0a:	fsubr  st(0),st
  41dc0c:	pmaxsw mm1,QWORD PTR [ecx+0x4bf91b85]
  41dc13:	xlat   BYTE PTR ds:[ebx]
  41dc14:	sub    al,0xc3
  41dc16:	test   eax,0xa250bfd
  41dc1b:	xor    DWORD PTR [ebx+edx*4+0x5c],edx
  41dc1f:	fstp   QWORD PTR [eax]
  41dc21:	clc    
  41dc22:	mov    eax,ds:0x61f48b
  41dc27:	es pop ds
  41dc29:	clc    
  41dc2a:	xchg   BYTE PTR [edx+0x23],cl
  41dc2d:	push   edi
  41dc2e:	lods   eax,DWORD PTR ds:[esi]
  41dc2f:	stos   DWORD PTR es:[edi],eax
  41dc30:	aam    0x9d
  41dc32:	call   0xfaf4cc7f
  41dc37:	je     0x41dc12
  41dc39:	inc    eax
  41dc3a:	rol    DWORD PTR [esp+edx*4+0x45d4a17a],0x53
  41dc42:	mov    eax,ds:0xec2d2725
  41dc47:	arpl   si,bp
  41dc49:	pop    ecx
  41dc4a:	fdiv   DWORD PTR [edx-0x6b]
  41dc4d:	adc    DWORD PTR [edx+0x33],eax
  41dc50:	push   0xffffffbe
  41dc52:	(bad)
  41dc55:	mov    bl,0x1d
  41dc57:	xchg   ebx,eax
  41dc58:	push   esi
  41dc59:	mov    ds:0x43b9564f,eax
  41dc5e:	inc    ebp
  41dc5f:	hlt    
  41dc60:	sub    ch,cl
  41dc62:	repnz leave 
  41dc64:	stos   BYTE PTR es:[edi],al
  41dc65:	stos   DWORD PTR es:[edi],eax
  41dc66:	xchg   DWORD PTR ds:0xe6fd3e6c,eax
  41dc6c:	sbb    BYTE PTR [esi],0xb9
  41dc6f:	ja     0x41dcb2
  41dc71:	lods   eax,DWORD PTR ds:[si]
  41dc73:	call   0xec08bdd
  41dc78:	in     al,0x96
  41dc7a:	cmp    cl,dh
  41dc7c:	into   
  41dc7d:	jmp    0x5ebf:0xe20b867e
  41dc84:	adc    BYTE PTR ss:[esi-0x79],cl
  41dc88:	add    al,0x2b
  41dc8a:	stos   BYTE PTR es:[edi],al
  41dc8b:	sbb    DWORD PTR [esi+0x1e1690fa],0xa3b9b3f2
  41dc95:	sub    esi,DWORD PTR [esp+eiz*8-0x50]
  41dc99:	inc    edx
  41dc9a:	mov    dl,dl
  41dc9c:	fstp   TBYTE PTR [edx+0xd]
  41dc9f:	test   al,0xa1
  41dca1:	sub    dl,dh
  41dca3:	outs   dx,DWORD PTR ds:[esi]
  41dca4:	or     edi,DWORD PTR [ebx]
  41dca6:	add    eax,0xdd92f5bb
  41dcab:	mov    dh,0x74
  41dcad:	fcom   DWORD PTR [esi+0x402cc43f]
  41dcb3:	add    BYTE PTR [edx+0x346122e0],0xc3
  41dcba:	push   0x67
  41dcbc:	pop    esp
  41dcbd:	xchg   edx,eax
  41dcbe:	aam    0x19
  41dcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc1:	mov    eax,0x4ad6008f
  41dcc6:	sub    edi,ebx
  41dcc8:	push   eax
  41dcc9:	mov    bl,BYTE PTR [esi+0x51407c0c]
  41dccf:	stos   BYTE PTR es:[edi],al
  41dcd0:	dec    edx
  41dcd1:	enter  0x3ed6,0x6f
  41dcd5:	iret   
  41dcd6:	cmp    bh,BYTE PTR [esi+ecx*8+0x11481aa7]
  41dcdd:	js     0x41dc71
  41dcdf:	sbb    esi,DWORD PTR [esi]
  41dce1:	out    dx,eax
  41dce2:	mov    edx,0xd91642df
  41dce7:	cmp    bl,BYTE PTR [eax+esi*1+0x124e912e]
  41dcee:	inc    eax
  41dcef:	retf   
  41dcf0:	mov    WORD PTR [ebp-0x5f],es
  41dcf3:	jns    0x41dcb6
  41dcf5:	aas    
  41dcf6:	iret   
  41dcf7:	ins    BYTE PTR es:[edi],dx
  41dcf8:	(bad)  
  41dcf9:	hlt    
  41dcfa:	je     0x41dcc0
  41dcfc:	retf   0xb20a
  41dcff:	cmp    eax,0xc246bbaa
  41dd04:	xlat   BYTE PTR ds:[ebx]
  41dd05:	hlt    
  41dd06:	inc    ebp
  41dd07:	stc    
  41dd08:	jle    0x41dca4
  41dd0a:	outs   dx,BYTE PTR ds:[esi]
  41dd0b:	mov    ?,WORD PTR [ecx-0x1f171e47]
  41dd11:	in     eax,dx
  41dd12:	aas    
  41dd13:	fild   QWORD PTR [esi+0x2f32a4ea]
  41dd19:	add    esp,DWORD PTR [ebp+edx*8-0x13]
  41dd1d:	ss xor al,0x97
  41dd20:	outs   dx,DWORD PTR es:[esi]
  41dd22:	dec    ebx
  41dd23:	test   DWORD PTR [edx*1-0x6a73dafb],ecx
  41dd2a:	sub    bh,bh
  41dd2c:	stos   DWORD PTR es:[edi],eax
  41dd2d:	ds lahf 
  41dd2f:	xchg   BYTE PTR [ebx-0x54],bl
  41dd32:	adc    esp,esp
  41dd34:	cmp    BYTE PTR [ebx+0x61115a59],dh
  41dd3a:	in     eax,0xb7
  41dd3c:	popf   
  41dd3d:	int3   
  41dd3e:	cs js  0x41dd57
  41dd41:	or     eax,0x50701d3a
  41dd46:	cmp    bl,BYTE PTR [edx+0x5f]
  41dd49:	add    DWORD PTR [edi+0x6a],ebp
  41dd4c:	test   BYTE PTR [edi],dl
  41dd4e:	dec    ecx
  41dd4f:	pop    esp
  41dd50:	sub    eax,0x96d60a32
  41dd55:	or     esi,esi
  41dd57:	fs cmc 
  41dd59:	ds push cs
  41dd5b:	inc    edx
  41dd5c:	sti    
  41dd5d:	call   0xaf87:0x1a70b079
  41dd64:	fadd   QWORD PTR [eax]
  41dd66:	add    esp,DWORD PTR [edx+edx*2]
  41dd69:	mov    esp,0x68ead20e
  41dd6e:	or     cl,ch
  41dd70:	lds    ebx,FWORD PTR [ebx+0x4]
  41dd73:	stos   BYTE PTR es:[edi],al
  41dd74:	test   BYTE PTR [ecx-0x3d],dl
  41dd77:	pusha  
  41dd78:	pop    edx
  41dd79:	cmp    al,0x53
  41dd7b:	xor    edx,0x53
  41dd7e:	stos   BYTE PTR es:[edi],al
  41dd7f:	mov    ah,0x3
  41dd81:	pop    eax
  41dd82:	inc    ecx
  41dd83:	(bad)  
  41dd84:	sar    DWORD PTR [esi-0x35],1
  41dd87:	add    eax,0xf093111d
  41dd8c:	into   
  41dd8d:	mov    bl,0x49
  41dd8f:	mov    edx,0xddfef71a
  41dd94:	or     ch,BYTE PTR [ebp+ebp*2-0x47fc2a7e]
  41dd9b:	out    dx,al
  41dd9c:	push   esi
  41dd9d:	add    eax,0xc7b65762
  41dda2:	pop    ds
  41dda3:	into   
  41dda4:	mov    ebp,DWORD PTR [edi-0x16]
  41dda7:	jae    0x41dd5a
  41dda9:	ds xor eax,0x707f2e59
  41ddaf:	jmp    0x41de09
  41ddb1:	adc    DWORD PTR [edi],esp
  41ddb3:	xor    BYTE PTR [edx],ch
  41ddb5:	ror    DWORD PTR [ecx+0x5ced9d48],cl
  41ddbb:	fmul   DWORD PTR ds:0x769562
  41ddc1:	mov    bh,0xa9
  41ddc3:	xchg   edx,eax
  41ddc4:	push   ecx
  41ddc5:	ret    
  41ddc6:	mov    al,0xcc
  41ddc8:	jecxz  0x41de2c
  41ddca:	(bad)  
  41ddcc:	xchg   edi,eax
  41ddcd:	hlt    
  41ddce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd0:	jno    0x41ddc5
  41ddd2:	jae    0x41dd5d
  41ddd4:	jne    0x41dde3
  41ddd6:	sub    al,BYTE PTR [ebx]
  41ddd8:	inc    ebx
  41ddd9:	out    0x43,al
  41dddb:	in     al,dx
  41dddc:	scas   al,BYTE PTR es:[edi]
  41dddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddde:	xor    al,0x6e
  41dde0:	mov    dh,0xd
  41dde2:	data16 jns 0x41de3a
  41dde5:	lods   eax,DWORD PTR ds:[esi]
  41dde6:	les    eax,FWORD PTR [esp+ecx*8-0x41]
  41ddea:	mov    dl,0x5f
  41ddec:	add    al,0xe6
  41ddee:	imul   bh
  41ddf0:	ret    0x1c70
  41ddf3:	dec    esi
  41ddf4:	push   es
  41ddf5:	push   esp
  41ddf6:	mov    ecx,0x591dcd08
  41ddfb:	push   cs
  41ddfc:	outs   dx,DWORD PTR ds:[esi]
  41ddfd:	adc    BYTE PTR [edx+ebx*2+0x2b],cl
  41de01:	mov    dh,0x94
  41de03:	add    BYTE PTR [esi+0x30],0xcf
  41de07:	jo     0x41de84
  41de09:	jle    0x41de48
  41de0b:	inc    ecx
  41de0c:	add    eax,0x77cae300
  41de11:	mov    bh,0x9f
  41de13:	call   DWORD PTR [ecx]
  41de15:	lea    ebp,[edi+0xd056f97]
  41de1b:	cld    
  41de1c:	fnstsw WORD PTR [ebx+ecx*8]
  41de1f:	sahf   
  41de20:	retf   
  41de21:	xchg   edx,eax
  41de22:	into   
  41de23:	addr16 lahf 
  41de25:	mov    esi,0xe9345881
  41de2a:	not    BYTE PTR [edi+edi*4-0x6f]
  41de2e:	cmp    BYTE PTR [edi+ebx*8+0x7adc411f],cl
  41de35:	ret    
  41de36:	mov    ds:0x61d7685e,eax
  41de3b:	test   DWORD PTR [ebx-0x155951ae],0x3913fc61
  41de45:	pop    ebp
  41de46:	div    DWORD PTR [eax-0xac1ca3b]
  41de4c:	sub    ch,0xc1
  41de4f:	rcr    DWORD PTR [edi-0x56],0xb8
  41de53:	sub    al,0xfd
  41de55:	jne    0x41dea3
  41de57:	mov    dl,0xd2
  41de59:	sbb    al,0x42
  41de5b:	nop
  41de5c:	scas   al,BYTE PTR es:[edi]
  41de5d:	outs   dx,DWORD PTR ds:[esi]
  41de5e:	lock retf 0x328a
  41de62:	sbb    BYTE PTR [ebx+0x27],cl
  41de65:	add    eax,0xa7119918
  41de6a:	int3   
  41de6b:	mov    ebx,0x98ac93e2
  41de70:	pop    ds
  41de71:	push   eax
  41de72:	sbb    al,0x1e
  41de74:	shl    al,1
  41de76:	mov    esi,0xc59d911a
  41de7b:	mov    al,0xa1
  41de7d:	lock test DWORD PTR [edx+0x25],esi
  41de81:	lods   eax,DWORD PTR ds:[esi]
  41de82:	fs and al,0x43
  41de85:	fwait
  41de86:	add    bl,0xb2
  41de89:	cmp    DWORD PTR [eax+0x72],0x1261582c
  41de90:	fiadd  DWORD PTR [edx]
  41de92:	inc    eax
  41de93:	mov    ebp,0x334264b0
  41de98:	mov    edx,0xc7b108c7
  41de9d:	aas    
  41de9e:	adc    esi,DWORD PTR [edi+0x265c3296]
  41dea4:	jp     0x41df0a
  41dea6:	pusha  
  41dea7:	ficom  DWORD PTR [edx]
  41dea9:	aad    0x51
  41deab:	push   ebx
  41deac:	jnp    0x41decc
  41deae:	adc    DWORD PTR [ecx+0x62],edi
  41deb1:	jmp    0xc688:0xbb2ede30
  41deb8:	cmc    
  41deb9:	mov    eax,ds:0xcc74f712
  41debe:	push   edi
  41debf:	jecxz  0x41df05
  41dec1:	add    al,0xfc
  41dec4:	ror    BYTE PTR [esi+0x75c237ff],1
  41deca:	mov    ?,edx
  41decc:	arpl   WORD PTR [edx-0x6c],cx
  41decf:	shl    DWORD PTR ds:[eax+0x69],cl
  41ded3:	cli    
  41ded4:	cmp    dl,dl
  41ded6:	pop    es
  41ded7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded8:	ja     0x41dea7
  41deda:	not    DWORD PTR [esi]
  41dedc:	int    0x8d
  41dede:	cmp    eax,0x8472bcb8
  41dee3:	jmp    0x41dec7
  41dee5:	xchg   BYTE PTR [esi+0x12d9581c],ch
  41deeb:	mov    es:0x3a638b75,al
  41def1:	cld    
  41def2:	js     0x41de7f
  41def4:	jg     0x41debb
  41def6:	or     DWORD PTR [ebp+eax*2-0x564c1c17],ebx
  41defd:	(bad)  
  41defe:	sbb    BYTE PTR [ebx-0x34],dl
  41df01:	sbb    al,BYTE PTR [esi-0x7f]
  41df04:	jbe    0x41de88
  41df06:	sahf   
  41df07:	(bad)  
  41df08:	xor    BYTE PTR [edi-0x59f875f6],cl
  41df0e:	stos   BYTE PTR es:[edi],al
  41df0f:	or     ah,cl
  41df11:	jmp    0x41df10
  41df13:	ins    DWORD PTR es:[edi],dx
  41df14:	das    
  41df15:	xor    ebx,eax
  41df17:	mov    ebx,0x825ffc54
  41df1c:	test   BYTE PTR [ecx+0x48],0xa4
  41df20:	stos   DWORD PTR es:[edi],eax
  41df21:	test   DWORD PTR [eax+0x5a],ecx
  41df24:	jge    0x41df93
  41df26:	sbb    al,0x24
  41df28:	imul   eax,eax,0x3e
  41df2b:	ss xchg ah,bl
  41df2e:	out    0xd0,eax
  41df30:	fst    DWORD PTR ds:0xdca83d9d
  41df36:	or     al,0x37
  41df38:	xchg   ecx,eax
  41df39:	cwde   
  41df3a:	icebp  
  41df3b:	dec    edi
  41df3c:	outs   dx,DWORD PTR gs:[esi]
  41df3e:	xor    ah,dl
  41df40:	mov    bh,0xf6
  41df42:	sbb    BYTE PTR [ebp-0xc],ch
  41df45:	sbb    DWORD PTR [edi],esi
  41df47:	out    0x53,al
  41df49:	retf   0x79d1
  41df4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df4d:	add    eax,0x2022d2fa
  41df52:	inc    ah
  41df54:	add    BYTE PTR [esi],bl
  41df56:	jb     0x41df01
  41df58:	push   0x3fe50bcc
  41df5d:	mov    al,ds:0x9d66a053
  41df62:	mov    ch,0x5a
  41df64:	inc    ecx
  41df65:	mov    edi,0x83152f3
  41df6a:	dec    ecx
  41df6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df6c:	retf   
  41df6d:	(bad)  
  41df6e:	pop    edx
  41df6f:	xchg   DWORD PTR ds:0xb66efc5,esi
  41df75:	jg     0x41df94
  41df77:	in     eax,0x11
  41df79:	pop    ebp
  41df7a:	or     BYTE PTR ds:0x45dc962d,0xce
  41df81:	cmp    esi,ebx
  41df83:	and    ebp,DWORD PTR [ecx+0x68]
  41df86:	ret    
  41df87:	adc    edi,esp
  41df89:	mov    al,0xa9
  41df8b:	ror    ebp,1
  41df8d:	cdq    
  41df8e:	aas    
  41df8f:	es out dx,eax
  41df91:	loope  0x41df99
  41df93:	jno    0x41df39
  41df95:	jno    0x41df5b
  41df97:	jge    0x41df33
  41df99:	loopne 0x41df57
  41df9b:	adc    ch,BYTE PTR [edx+0x3cbdd118]
  41dfa1:	stc    
  41dfa2:	mov    esp,0x75f1343d
  41dfa7:	xor    ebp,DWORD PTR [eax-0x77]
  41dfaa:	mov    ds:0x84a60dba,al
  41dfaf:	xchg   ebx,eax
  41dfb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb1:	lds    ebp,FWORD PTR [ebp+0x7765d053]
  41dfb7:	sbb    al,0x70
  41dfb9:	leave  
  41dfba:	mov    edx,0xf3306db6
  41dfbf:	pusha  
  41dfc0:	call   0x6009a53
  41dfc5:	fiadd  WORD PTR ds:0xf5cc145b
  41dfcb:	out    0x45,al
  41dfcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfce:	fnstcw WORD PTR [edx*2-0x3c7589b7]
  41dfd5:	out    0x6a,eax
  41dfd7:	sbb    al,0x26
  41dfd9:	shr    DWORD PTR [edi],1
  41dfdb:	int    0xe
  41dfdd:	xchg   ebx,eax
  41dfde:	jb     0x41e037
  41dfe0:	out    dx,al
  41dfe1:	ins    BYTE PTR es:[edi],dx
  41dfe2:	icebp  
  41dfe3:	fidiv  WORD PTR [ebp-0x325e242b]
  41dfe9:	xchg   ebx,eax
  41dfea:	push   eax
  41dfeb:	xchg   edx,eax
  41dfec:	aad    0x91
  41dfee:	mov    dh,0xa6
  41dff0:	(bad)  
  41dff1:	jge    0x41dff8
  41dff3:	inc    edi
  41dff4:	imul   esp,edi,0xfbdec875
  41dffa:	call   0x5256:0x958bd503
  41e001:	fwait
  41e002:	lods   al,BYTE PTR ds:[esi]
  41e003:	cdq    
  41e004:	mov    ds:0x4b54def,al
  41e009:	(bad)  
  41e00a:	loopne 0x41dfc6
  41e00c:	pop    edi
  41e00d:	push   ebx
  41e00e:	jns    0x41e02b
  41e010:	nop
  41e011:	daa    
  41e012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e013:	mov    esi,0x25bef26d
  41e018:	inc    ebx
  41e019:	test   DWORD PTR [esi],esi
  41e01b:	ficom  WORD PTR [eax-0x7a26ce3f]
  41e021:	stc    
  41e022:	pushf  
  41e023:	paddsw mm6,QWORD PTR [ebx]
  41e026:	(bad)  
  41e027:	aad    0xab
  41e029:	mov    cs,WORD PTR [edx+0x7b11df7]
  41e02f:	in     al,0xf8
  41e031:	pop    eax
  41e032:	cwde   
  41e033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e034:	cs xor eax,0x3cf189d9
  41e03a:	fdivr  QWORD PTR [esi-0x39]
  41e03d:	jmp    DWORD PTR [eax+0x61]
  41e040:	in     al,0xbd
  41e042:	jge    0x41e01a
  41e044:	mov    al,0xd6
  41e046:	mov    esp,DWORD PTR [ecx]
  41e048:	in     al,dx
  41e049:	dec    edi
  41e04a:	dec    ebx
  41e04b:	jmp    0x42f1:0x4aca6ab3
  41e052:	inc    esp
  41e053:	push   esp
  41e054:	mov    eax,0x21bac6e5
  41e059:	push   ss
  41e05a:	outs   dx,DWORD PTR ds:[esi]
  41e05b:	scas   eax,DWORD PTR es:[edi]
  41e05c:	sahf   
  41e05d:	sar    BYTE PTR [ecx+0x4ae9dfaa],0x40
  41e064:	or     BYTE PTR [ebx-0x132d0362],0xff
  41e06b:	stos   BYTE PTR es:[edi],al
  41e06c:	dec    esp
  41e06d:	fmul   QWORD PTR ds:0xdef25fcc
  41e073:	fiadd  DWORD PTR [edi]
  41e075:	loope  0x41e022
  41e077:	mov    dh,0x9e
  41e079:	adc    DWORD PTR [ebx],ebp
  41e07b:	pop    edx
  41e07c:	fwait
  41e07d:	dec    esi
  41e07e:	jle    0x41e06a
  41e080:	inc    esp
  41e081:	xchg   edi,eax
  41e082:	push   esp
  41e083:	or     dh,al
  41e085:	dec    ecx
  41e086:	call   0x3be6:0xebaa8d7f
  41e08d:	fwait
  41e08e:	pop    ebx
  41e08f:	xchg   ebx,eax
  41e090:	mov    ds:0x3ec06514,al
  41e095:	pop    edx
  41e096:	sub    al,0x64
  41e098:	adc    cl,bh
  41e09a:	jno    0x41e113
  41e09c:	jp     0x41e040
  41e09e:	mov    ebp,0x2ca26b33
  41e0a3:	popf   
  41e0a4:	sbb    ecx,DWORD PTR [eax+0x7b9ce133]
  41e0aa:	fld    QWORD PTR [ecx]
  41e0ac:	dec    eax
  41e0ad:	sbb    BYTE PTR [ecx+0xc],al
  41e0b0:	ss inc esi
  41e0b2:	mov    BYTE PTR [ebp-0x3d],bl
  41e0b5:	imul   BYTE PTR [edx+0x2]
  41e0b8:	mov    esi,0x7e0f4a7
  41e0bd:	jne    0x41e09f
  41e0bf:	into   
  41e0c0:	fxch   st(2)
  41e0c2:	sub    al,BYTE PTR [ebp+0x3315ad2c]
  41e0c8:	jmp    0x3fc0fbe0
  41e0cd:	cmp    al,BYTE PTR [ebx+0x63cf0456]
  41e0d3:	cmp    eax,0xa72ffc4f
  41e0d8:	mov    ebp,0x46b719b4
  41e0dd:	add    ebx,DWORD PTR [ebx+esi*8]
  41e0e0:	and    ecx,DWORD PTR [ecx+0x5cfb0d0a]
  41e0e6:	nop
  41e0e7:	cmp    eax,ecx
  41e0e9:	xor    ebx,DWORD PTR [eax+0x26]
  41e0ec:	lea    edx,[edi]
  41e0ee:	sbb    BYTE PTR [eax],al
  41e0f0:	sbb    al,0x40
  41e0f2:	cwde   
  41e0f3:	je     0x41e0ce
  41e0f5:	xor    al,0xd9
  41e0f7:	xor    edi,DWORD PTR [ebp+0x43]
  41e0fa:	retf   
  41e0fb:	dec    esi
  41e0fc:	ret    
  41e0fd:	jbe    0x41e0e9
  41e0ff:	rcr    BYTE PTR [ecx],1
  41e101:	in     al,0x81
  41e103:	dec    ecx
  41e104:	mov    edi,0xbbcf3737
  41e109:	sub    edi,DWORD PTR [edi]
  41e10b:	or     DWORD PTR [edx],0x2fc92ee3
  41e111:	inc    esi
  41e112:	jecxz  0x41e0c0
  41e114:	loop   0x41e181
  41e116:	retf   
  41e117:	sahf   
  41e118:	push   ss
  41e119:	test   BYTE PTR [ebx+ebx*1-0x26],al
  41e11d:	fs pop ss
  41e11f:	cld    
  41e120:	dec    esi
  41e121:	or     ebp,DWORD PTR [eax-0x7e]
  41e124:	sub    eax,0x1d78e664
  41e129:	push   esi
  41e12a:	xlat   BYTE PTR ds:[ebx]
  41e12b:	int3   
  41e12c:	pusha  
  41e12d:	test   BYTE PTR [esi+0x5],ah
  41e130:	cld    
  41e131:	and    eax,DWORD PTR [esi]
  41e133:	jno    0x41e18f
  41e135:	in     eax,dx
  41e136:	arpl   WORD PTR [ecx+0x1e8653e9],bp
  41e13c:	add    al,0x95
  41e13e:	out    0xd7,al
  41e140:	add    al,0x12
  41e142:	call   0xc25e2d96
  41e147:	stos   DWORD PTR es:[edi],eax
  41e148:	pop    ebx
  41e149:	mov    ebx,0x2698caaf
  41e14e:	pusha  
  41e14f:	sahf   
  41e150:	add    dh,BYTE PTR [ebx+ecx*8-0x1e]
  41e154:	leave  
  41e155:	add    DWORD PTR ds:0x5fe974cd,edi
  41e15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15c:	leave  
  41e15d:	add    cl,0xba
  41e160:	out    dx,eax
  41e161:	rcr    BYTE PTR [ebx+0x5ffaf6b6],cl
  41e167:	mov    esp,0xb3687827
  41e16c:	adc    BYTE PTR [ecx+0x31],ah
  41e16f:	adc    eax,DWORD PTR gs:[ecx-0x78]
  41e173:	pop    eax
  41e174:	or     DWORD PTR [edx+0x3ab275c4],edi
  41e17a:	and    eax,0x4728c771
  41e17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e180:	mov    bl,BYTE PTR ss:[ecx]
  41e183:	mov    cl,0xd6
  41e185:	jo     0x41e187
  41e187:	cmp    al,0x44
  41e189:	push   esi
  41e18a:	addr16 (bad) 
  41e18c:	loop   0x41e1db
  41e18e:	pop    ebp
  41e18f:	test   dl,ah
  41e191:	mov    bl,0xd4
  41e193:	imul   edi,ebp,0x6892eb11
  41e199:	rcl    BYTE PTR [ecx+0x328291fd],cl
  41e19f:	stos   BYTE PTR es:[edi],al
  41e1a0:	cmc    
  41e1a1:	push   0xffffffbd
  41e1a3:	pop    eax
  41e1a4:	dec    ecx
  41e1a5:	mov    ds,esi
  41e1a7:	add    dh,0x9a
  41e1aa:	or     edx,edx
  41e1ac:	mov    edi,DWORD PTR [edi-0x75]
  41e1af:	mov    bl,0xbb
  41e1b1:	int    0x35
  41e1b3:	retf   
  41e1b4:	sti    
  41e1b5:	fisttp DWORD PTR [ecx]
  41e1b7:	das    
  41e1b8:	jle    0x41e151
  41e1ba:	addr16 lock jl 0x41e1f2
  41e1be:	outs   dx,BYTE PTR ds:[esi]
  41e1bf:	sub    ch,BYTE PTR [eax+0x6f5a56cf]
  41e1c5:	cmp    BYTE PTR [ebx-0x38c535f1],ah
  41e1cb:	mov    ebx,0x534fcd6d
  41e1d0:	add    DWORD PTR [ebx-0x13],eax
  41e1d3:	sbb    eax,0x928c2b4f
  41e1d8:	mov    ebx,0x3b2d7b13
  41e1dd:	xchg   DWORD PTR [edx+0x4ab92c66],edx
  41e1e3:	lea    ebx,[eax+esi*1-0x6c]
  41e1e7:	add    BYTE PTR [ebx-0x7a7bc4f7],cl
  41e1ed:	cmc    
  41e1ee:	or     esi,DWORD PTR [edx+0x5052ae9c]
  41e1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f5:	xchg   ebp,eax
  41e1f6:	push   ebp
  41e1f7:	in     eax,dx
  41e1f8:	mov    WORD PTR [ebx],cs
  41e1fa:	adc    ebx,DWORD PTR [esp+ecx*1]
  41e1fd:	jae    0x41e25b
  41e1ff:	adc    BYTE PTR [esi-0x66],ch
  41e202:	ja     0x41e24b
  41e204:	cdq    
  41e205:	pusha  
  41e206:	ret    0xe902
  41e209:	mov    bh,0x4d
  41e20b:	lahf   
  41e20c:	xchg   ebp,eax
  41e20d:	ja     0x41e267
  41e20f:	aad    0x9
  41e211:	das    
  41e212:	push   eax
  41e213:	xchg   edi,eax
  41e214:	popf   
  41e215:	(bad)  
  41e216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e217:	sub    ebp,edx
  41e219:	cmp    BYTE PTR [ebx],cl
  41e21b:	out    0x4c,al
  41e21d:	cdq    
  41e21e:	dec    ecx
  41e21f:	xchg   BYTE PTR [eax],al
  41e221:	add    esi,DWORD PTR [eax+0x60]
  41e224:	loop   0x41e1db
  41e226:	cdq    
  41e227:	repnz fwait
  41e229:	and    ah,BYTE PTR [ebx-0x5d]
  41e22c:	and    ebx,DWORD PTR [ebp+0x39cc7005]
  41e232:	dec    edx
  41e233:	xchg   esi,eax
  41e234:	pop    ds
  41e235:	mov    edi,ecx
  41e237:	lahf   
  41e238:	pop    edi
  41e239:	std    
  41e23a:	push   edi
  41e23b:	sbb    al,0xd9
  41e23d:	mul    BYTE PTR [esp+ebx*2]
  41e240:	retf   
  41e241:	jo     0x41e234
  41e243:	dec    ecx
  41e244:	push   ss
  41e245:	sahf   
  41e246:	adc    al,0xdc
  41e248:	or     BYTE PTR [esi-0x47d5e131],0xc2
  41e24f:	mov    al,ds:0xf4c6e6a8
  41e254:	ror    bl,0xf4
  41e257:	pop    ecx
  41e258:	pop    ebp
  41e259:	sbb    DWORD PTR [ecx-0x31],edx
  41e25c:	xchg   ebp,eax
  41e25d:	xchg   edi,eax
  41e25e:	xor    al,0x4f
  41e260:	aam    0x34
  41e262:	or     ebp,DWORD PTR [esp+ebx*4+0x3ff674b1]
  41e269:	leave  
  41e26a:	ds adc eax,0x99276e78
  41e270:	jno    0x41e227
  41e272:	push   edi
  41e273:	lahf   
  41e274:	ins    BYTE PTR es:[edi],dx
  41e275:	mov    ah,dl
  41e277:	ret    
  41e278:	or     BYTE PTR [ebp-0xc09afbd],cl
  41e27e:	nop
  41e27f:	adc    eax,0xdecfa5db
  41e284:	inc    cl
  41e286:	iret   
  41e287:	and    esp,esp
  41e289:	mov    eax,0x13c9d6ad
  41e28e:	je     0x41e271
  41e290:	loop   0x41e29a
  41e292:	or     DWORD PTR [edi],esi
  41e294:	or     eax,0xbbb3e5fa
  41e299:	inc    ecx
  41e29a:	es mov ch,0x79
  41e29d:	dec    ebp
  41e29e:	adc    edx,DWORD PTR [ebx+0x7acf8b60]
  41e2a4:	and    DWORD PTR [ecx+0x5b],ebp
  41e2a7:	adc    DWORD PTR [esi],0xa9ab3496
  41e2ad:	clc    
  41e2ae:	(bad)  [ebx-0xe2ed18d]
  41e2b4:	pop    ecx
  41e2b5:	mov    WORD PTR [eax],fs
  41e2b7:	mul    edi
  41e2b9:	sar    DWORD PTR [edi+0x3e479874],cl
  41e2bf:	cs fwait
  41e2c1:	and    ebx,esp
  41e2c3:	xlat   BYTE PTR ds:[ebx]
  41e2c4:	pop    esi
  41e2c5:	mov    ecx,0xdfdc78c0
  41e2ca:	adc    bl,BYTE PTR [ecx+0x2e]
  41e2cd:	push   ecx
  41e2ce:	icebp  
  41e2cf:	scas   eax,DWORD PTR es:[edi]
  41e2d0:	aam    0x96
  41e2d2:	pop    edi
  41e2d3:	jns    0x41e29a
  41e2d5:	sbb    eax,0xeca87db4
  41e2da:	pop    ebp
  41e2db:	stc    
  41e2dc:	ret    
  41e2dd:	dec    ebp
  41e2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2df:	sub    BYTE PTR es:[ecx-0x74086994],cl
  41e2e6:	and    BYTE PTR [eax+0x7efed940],dl
  41e2ec:	push   0xa263bde
  41e2f1:	mov    ebp,0x73e3eaa8
  41e2f6:	nop
  41e2f7:	cs out dx,al
  41e2f9:	xchg   ebp,esi
  41e2fb:	sub    ebp,DWORD PTR [edi]
  41e2fd:	xchg   ebp,eax
  41e2fe:	(bad)  
  41e2ff:	aam    0x2c
  41e301:	test   eax,0x7736c2ff
  41e306:	test   al,0xff
  41e308:	mov    ah,0x32
  41e30a:	mov    ebp,0x6a3d8e67
  41e30f:	loop   0x41e305
  41e311:	jp     0x41e32a
  41e313:	in     eax,0x3a
  41e315:	mov    ds:0x7072908c,al
  41e31a:	scas   eax,DWORD PTR es:[edi]
  41e31b:	int    0x28
  41e31d:	(bad)  
  41e31e:	cmp    ebp,DWORD PTR [edx]
  41e320:	mov    DWORD PTR [edi+ebx*4-0x3eb78f6c],ebx
  41e327:	add    al,0x3a
  41e329:	inc    esp
  41e32a:	adc    edi,ecx
  41e32c:	ds adc ebp,esi
  41e32f:	fdivr  DWORD PTR [eax-0x5a]
  41e332:	mov    cl,dh
  41e334:	or     eax,0xfb36be5f
  41e339:	pop    ecx
  41e33a:	and    ebx,ebp
  41e33c:	popf   
  41e33d:	ja     0x41e39a
  41e33f:	test   BYTE PTR [edi+edi*8-0x262e71e9],cl
  41e346:	mov    WORD PTR [edi],ss
  41e348:	jne    0x41e37a
  41e34a:	es sbb eax,0x467cd12a
  41e350:	out    dx,eax
  41e351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e352:	aam    0x8b
  41e354:	sbb    ebp,DWORD PTR [ebp+0x140939ac]
  41e35a:	gs and ebx,edx
  41e35d:	leave  
  41e35e:	inc    ebp
  41e35f:	in     eax,dx
  41e360:	inc    esp
  41e361:	jne    0x41e3bb
  41e363:	clc    
  41e364:	stos   DWORD PTR es:[edi],eax
  41e365:	jg     0x41e3be
  41e367:	outs   dx,DWORD PTR ds:[esi]
  41e368:	or     BYTE PTR [ecx-0x4877b361],cl
  41e36e:	leave  
  41e36f:	dec    esp
  41e370:	lea    ebp,[edx]
  41e372:	imul   BYTE PTR ds:0x14ca53d3
  41e378:	dec    ebx
  41e379:	lods   al,BYTE PTR ds:[esi]
  41e37a:	sub    BYTE PTR [eax+0x719b47eb],cl
  41e380:	(bad)  
  41e381:	cmp    DWORD PTR ds:0xa174b371,ebx
  41e387:	pop    ecx
  41e388:	jne    0x41e352
  41e38a:	sub    al,BYTE PTR [ebx-0x7378d62]
  41e390:	(bad)  
  41e391:	cmp    edx,DWORD PTR [eax-0x3646a86d]
  41e397:	pushf  
  41e398:	cwde   
  41e399:	mov    edi,0xda687988
  41e39e:	dec    ecx
  41e39f:	cmp    DWORD PTR ds:0x3eed4f43,ebx
  41e3a5:	xlat   BYTE PTR ds:[ebx]
  41e3a6:	xor    ebp,DWORD PTR [ebx-0x53c54083]
  41e3ac:	sub    eax,0x52807cdd
  41e3b1:	stos   BYTE PTR es:[edi],al
  41e3b2:	lock scas al,BYTE PTR es:[edi]
  41e3b4:	mov    esp,0x24d9e865
  41e3b9:	pop    eax
  41e3ba:	mov    esp,0x69c190da
  41e3bf:	fdivr  DWORD PTR [esi+0x697ac9e0]
  41e3c5:	mov    cl,0x8
  41e3c7:	mov    ds:0x4105de16,eax
  41e3cc:	sbb    eax,0xfb551e80
  41e3d1:	mov    ds:0xcfd316cb,eax
  41e3d6:	stc    
  41e3d7:	mov    cl,0x4f
  41e3d9:	loopne 0x41e3a4
  41e3db:	stc    
  41e3dc:	xchg   edi,eax
  41e3dd:	rcl    BYTE PTR [edi+0x46],0x73
  41e3e1:	imul   esp
  41e3e3:	jb     0x41e36c
  41e3e5:	cmp    eax,0x3c77a2f7
  41e3ea:	das    
  41e3eb:	push   ss
  41e3ec:	xor    BYTE PTR [edi],dh
  41e3ee:	cwde   
  41e3ef:	faddp  st(4),st
  41e3f1:	fwait
  41e3f2:	add    ch,BYTE PTR [eax+0x710c4089]
  41e3f8:	lea    eax,[edi-0x46d7b9b3]
  41e3fe:	enter  0x8c8c,0xff
  41e402:	jbe    0x41e3ec
  41e404:	arpl   cx,si
  41e406:	dec    eax
  41e407:	mov    DWORD PTR [ecx+0x3f],esp
  41e40a:	(bad)  
  41e40b:	stc    
  41e40c:	adc    BYTE PTR [ebx],dh
  41e40e:	push   0x28
  41e410:	iret   
  41e411:	push   0xbad34ea5
  41e416:	int3   
  41e417:	call   0x5bc4032f
  41e41c:	sbb    BYTE PTR [ecx+0x6ed849aa],dl
  41e422:	std    
  41e423:	int    0x27
  41e425:	mov    DWORD PTR [edx+0x45],eax
  41e428:	pop    ds
  41e429:	inc    ecx
  41e42a:	or     BYTE PTR [ecx+0x216049f4],dl
  41e430:	jle    0x41e3d8
  41e432:	cmc    
  41e433:	in     eax,dx
  41e434:	push   esp
  41e435:	push   cs
  41e436:	daa    
  41e437:	(bad)  [ebp-0x2283038]
  41e43d:	mov    cl,0x98
  41e43f:	test   esp,eax
  41e441:	pop    edx
  41e442:	icebp  
  41e443:	iret   
  41e444:	add    ebp,DWORD PTR [ebp+0x2e22de8]
  41e44a:	test   DWORD PTR [ebp-0x6345c236],0x70786cb0
  41e454:	rcl    ecx,0x1d
  41e457:	mov    esi,0x92101e6a
  41e45c:	test   al,0x9f
  41e45e:	daa    
  41e45f:	xor    BYTE PTR [ebx-0x5b],al
  41e462:	ret    
  41e463:	jne    0x41e496
  41e465:	test   eax,0xa6bb7dae
  41e46a:	jo     0x41e426
  41e46c:	pop    eax
  41e46d:	ins    BYTE PTR es:[edi],dx
  41e46e:	scas   al,BYTE PTR es:[edi]
  41e46f:	lods   al,BYTE PTR ds:[esi]
  41e470:	sar    BYTE PTR [esi],cl
  41e472:	les    edi,FWORD PTR [edx+0xc]
  41e475:	cld    
  41e476:	mov    ds,WORD PTR [ebp-0x1cef1536]
  41e47c:	mov    DWORD PTR [ebx-0x5e],ecx
  41e47f:	int3   
  41e480:	push   cs
  41e481:	pop    ss
  41e482:	shr    DWORD PTR [ecx+0x7002664e],1
  41e488:	dec    ebp
  41e489:	xchg   ecx,eax
  41e48a:	(bad)  
  41e48b:	test   eax,0x46f8ccbf
  41e490:	lods   al,BYTE PTR ds:[esi]
  41e491:	mov    eax,ds:0xb80792bb
  41e496:	add    ch,BYTE PTR [esi+0x65fe33d]
  41e49c:	daa    
  41e49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e49e:	xor    DWORD PTR [ebp+0xd486f58],eax
  41e4a4:	and    cl,BYTE PTR [esi+0x7d011b59]
  41e4aa:	pop    ds
  41e4ab:	cmp    eax,0xde301aa1
  41e4b0:	sub    eax,0x77abb764
  41e4b5:	mov    dl,0x23
  41e4b7:	mov    ds:0xfc1be67a,al
  41e4bc:	add    BYTE PTR [ebx-0x751eee2d],bl
  41e4c2:	fwait
  41e4c3:	sub    al,0xdf
  41e4c5:	std    
  41e4c6:	cmp    DWORD PTR [edx],edi
  41e4c8:	dec    ecx
  41e4c9:	cli    
  41e4ca:	and    al,0xf8
  41e4cc:	ja     0x41e461
  41e4ce:	dec    ebx
  41e4cf:	gs mov cl,0xaf
  41e4d2:	in     eax,0x79
  41e4d4:	test   al,0xf4
  41e4d6:	pop    esi
  41e4d7:	ret    
  41e4d8:	pop    ds
  41e4d9:	inc    ebp
  41e4da:	push   ds
  41e4db:	and    DWORD PTR es:[eax+0x56e58f48],esi
  41e4e2:	xchg   esp,eax
  41e4e3:	pushf  
  41e4e4:	jae    0x41e504
  41e4e6:	add    DWORD PTR ds:0x5c231437,ebx
  41e4ec:	dec    edx
  41e4ed:	mov    bl,0x5f
  41e4ef:	icebp  
  41e4f0:	jns    0x41e4ae
  41e4f2:	aaa    
  41e4f3:	dec    ebp
  41e4f4:	push   es
  41e4f5:	mov    BYTE PTR [esi+0x69a960bd],0x30
  41e4fc:	cmp    BYTE PTR [edx+esi*2+0x1b],bh
  41e500:	ss xchg ebx,eax
  41e502:	out    dx,eax
  41e503:	jb     0x41e572
  41e505:	scas   eax,DWORD PTR es:[edi]
  41e506:	xor    DWORD PTR [esi+0x6a],ebx
  41e509:	or     cl,0xc8
  41e50c:	xchg   BYTE PTR [edi],dl
  41e50e:	out    dx,al
  41e50f:	cmp    DWORD PTR [edi+0x6005796b],esi
  41e515:	push   0x9ae5495a
  41e51a:	arpl   WORD PTR [esi],bx
  41e51c:	cmp    dh,al
  41e51e:	xchg   edx,eax
  41e51f:	lods   al,BYTE PTR ds:[esi]
  41e520:	dec    ebx
  41e521:	xor    al,0xdf
  41e523:	sbb    ah,0xb4
  41e526:	jge    0x41e524
  41e528:	mov    ecx,DWORD PTR [esi+0x770a191e]
  41e52e:	imul   esp,edx,0x742ee6ff
  41e534:	clc    
  41e535:	adc    esp,eax
  41e537:	fadd   DWORD PTR [ebx+0xcb68137]
  41e53d:	ds iret 
  41e53f:	xchg   esi,eax
  41e540:	inc    ebp
  41e541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e542:	outs   dx,BYTE PTR ds:[esi]
  41e543:	dec    edx
  41e544:	or     edi,DWORD PTR [ebp-0x72e4291b]
  41e54a:	out    dx,eax
  41e54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54c:	add    BYTE PTR [eax-0x3],0xdf
  41e550:	test   al,0x17
  41e552:	not    ecx
  41e554:	rcr    DWORD PTR [esi+0x64],cl
  41e557:	mov    dl,0x9d
  41e559:	popa   
  41e55a:	dec    ebp
  41e55b:	pop    eax
  41e55c:	ret    0xbc85
  41e55f:	(bad)  
  41e561:	inc    eax
  41e562:	or     DWORD PTR [edx+0x32],0x9c8201b9
  41e569:	xor    ebx,eax
  41e56b:	jae    0x41e522
  41e56d:	aam    0x43
  41e56f:	(bad)  
  41e570:	rcl    DWORD PTR [edi],cl
  41e572:	xor    eax,0x7f1d14a9
  41e577:	out    0xfe,eax
  41e579:	push   edi
  41e57a:	repz and BYTE PTR [ebx+0x40],bl
  41e57e:	lea    ebp,[esi-0x2e]
  41e581:	push   edx
  41e582:	scas   al,BYTE PTR es:[edi]
  41e583:	or     DWORD PTR [ebp+0x2a],eax
  41e586:	xor    eax,0xf039f82b
  41e58b:	xchg   edi,eax
  41e58c:	jb     0x41e554
  41e58e:	ja     0x41e595
  41e590:	jne    0x41e551
  41e592:	adc    cl,BYTE PTR [ecx-0x7e]
  41e595:	fstp   DWORD PTR [esi+0x7e89a400]
  41e59b:	cwde   
  41e59c:	jae    0x41e562
  41e59e:	lock sbb DWORD PTR [eax-0xf7d0027],esp
  41e5a5:	sbb    BYTE PTR ds:0x7ade2eff,dh
  41e5ab:	fisub  DWORD PTR [ecx-0x77]
  41e5ae:	lea    ebp,[edi]
  41e5b0:	test   BYTE PTR [eax+edi*8+0x23b27e2d],0xf1
  41e5b8:	dec    esp
  41e5b9:	cmp    esi,edx
  41e5bb:	retf   
  41e5bc:	dec    ecx
  41e5bd:	push   ds
  41e5be:	(bad)  [eax+eax*4]
  41e5c1:	push   0x5f93f462
  41e5c6:	sahf   
  41e5c7:	loope  0x41e5b4
  41e5c9:	inc    edx
  41e5ca:	hlt    
  41e5cb:	mov    bl,0xdd
  41e5cd:	xor    BYTE PTR [esi+0x14],al
  41e5d0:	inc    ebp
  41e5d1:	inc    ebp
  41e5d2:	and    BYTE PTR [ecx-0x3843324e],dh
  41e5d8:	cdq    
  41e5d9:	aas    
  41e5da:	mov    ds:0xb9fbebba,eax
  41e5df:	adc    BYTE PTR [edi-0x2809ec05],bh
  41e5e5:	daa    
  41e5e6:	add    BYTE PTR [edx+0x38],cl
  41e5e9:	gs jl  0x41e60f
  41e5ec:	jnp    0x41e657
  41e5ee:	pop    ebx
  41e5ef:	jbe    0x41e638
  41e5f1:	fistp  WORD PTR [eax-0x1787c130]
  41e5f7:	push   ss
  41e5f8:	inc    esp
  41e5f9:	dec    ebp
  41e5fa:	xor    eax,0x675620c8
  41e5ff:	xchg   edx,eax
  41e600:	sbb    al,0xc3
  41e602:	mov    ds:0xb79b7586,al
  41e607:	jb     0x41e58a
  41e609:	cmp    DWORD PTR [eax+eax*4],ecx
  41e60c:	push   cs
  41e60d:	mov    ebp,DWORD PTR [esi+0x56]
  41e610:	jmp    DWORD PTR [ebx-0x58]
  41e613:	xchg   DWORD PTR [ebp+0xc],ecx
  41e616:	push   cs
  41e617:	sub    DWORD PTR [edi-0x4b0083ea],esi
  41e61d:	push   ds
  41e61e:	out    0xe,al
  41e620:	xor    DWORD PTR [edi-0x43],edi
  41e623:	xchg   edi,eax
  41e624:	and    al,0x88
  41e626:	adc    DWORD PTR [ebx+0x25],ebp
  41e629:	jo     0x41e60a
  41e62b:	or     BYTE PTR [ebx+0x600646c9],ah
  41e631:	ins    DWORD PTR es:[edi],dx
  41e632:	xchg   edi,eax
  41e633:	push   ds
  41e634:	lods   eax,DWORD PTR ds:[esi]
  41e635:	mov    BYTE PTR [ebp-0x6b],ch
  41e638:	xchg   BYTE PTR [eax],bl
  41e63a:	pop    ebp
  41e63b:	xchg   esi,eax
  41e63c:	aam    0xc7
  41e63e:	repnz dec ebx
  41e640:	xchg   ebp,eax
  41e641:	jmp    0x41e694
  41e643:	mov    al,ds:0x91569cc2
  41e648:	xchg   edi,eax
  41e649:	cli    
  41e64a:	and    BYTE PTR [edi+0x559f52cb],0xc9
  41e651:	cmp    BYTE PTR [ebx-0x32669a7b],bl
  41e657:	mov    ecx,DWORD PTR [ecx]
  41e659:	xchg   edx,eax
  41e65a:	or     ah,BYTE PTR [ecx+0x23]
  41e65d:	rcl    BYTE PTR [edx],1
  41e65f:	jge    0x41e6d7
  41e661:	add    al,BYTE PTR [eax]
  41e663:	in     eax,0x1a
  41e665:	mov    al,0x8d
  41e667:	aam    0x9e
  41e669:	out    0x20,al
  41e66b:	mov    ch,0xc5
  41e66d:	jg     0x41e606
  41e66f:	out    dx,al
  41e670:	jl     0x41e6e1
  41e672:	xor    BYTE PTR [eax+0x7b078db4],al
  41e678:	cmc    
  41e679:	les    edx,FWORD PTR [ebp+0x21]
  41e67c:	fwait
  41e67d:	loopne 0x41e648
  41e67f:	and    al,0xea
  41e681:	jp     0x41e64e
  41e683:	bound  eax,QWORD PTR [edx]
  41e685:	jecxz  0x41e65d
  41e687:	fs mov ch,0x52
  41e68a:	xor    DWORD PTR [ecx],ecx
  41e68c:	pushf  
  41e68d:	(bad)  
  41e68e:	and    DWORD PTR [ecx-0x23e95037],edx
  41e694:	pop    edi
  41e695:	popf   
  41e696:	mov    edx,ebp
  41e698:	(bad)  
  41e699:	xchg   edx,eax
  41e69a:	std    
  41e69b:	push   esp
  41e69c:	push   esp
  41e69d:	aad    0xe5
  41e69f:	lahf   
  41e6a0:	cmp    al,BYTE PTR [ebx]
  41e6a2:	mov    dh,0xca
  41e6a4:	nop
  41e6a5:	ror    DWORD PTR [ebx],0x69
  41e6a8:	xor    cl,BYTE PTR [ebp-0x24f46a0]
  41e6ae:	stc    
  41e6af:	in     al,dx
  41e6b0:	aaa    
  41e6b1:	repz test BYTE PTR gs:[ecx+0x70],0xf7
  41e6b7:	jo     0x41e67a
  41e6b9:	xor    al,0xfc
  41e6bb:	or     al,dh
  41e6bd:	in     eax,dx
  41e6be:	nop
  41e6bf:	dec    ebp
  41e6c0:	jp     0x41e703
  41e6c2:	and    esp,DWORD PTR [ebx]
  41e6c4:	mov    eax,?
  41e6c6:	int    0xc7
  41e6c8:	mov    BYTE PTR [esi+0x66],dl
  41e6cb:	out    dx,ax
  41e6cd:	mov    dh,0xc4
  41e6cf:	pop    ds
  41e6d0:	imul   ebp,DWORD PTR [ebx],0x9c23139f
  41e6d6:	loopne 0x41e6e7
  41e6d8:	pusha  
  41e6d9:	jne    0x41e6c7
  41e6db:	dec    edx
  41e6dc:	pop    ss
  41e6dd:	stos   DWORD PTR es:[edi],eax
  41e6de:	fcmovnbe st,st(2)
  41e6e0:	xchg   edi,eax
  41e6e1:	pop    ebx
  41e6e2:	fidiv  WORD PTR [ebp+0x6c0f06dc]
  41e6e8:	sbb    eax,0xb552d12c
  41e6ed:	test   eax,0xe202bee6
  41e6f2:	loope  0x41e71c
  41e6f4:	inc    ebx
  41e6f5:	arpl   WORD PTR [ecx+0x25e18834],bp
  41e6fb:	out    dx,al
  41e6fc:	enter  0x553d,0x4f
  41e700:	(bad)
  41e703:	scas   eax,DWORD PTR es:[edi]
  41e704:	inc    ecx
  41e705:	(bad)  
  41e707:	or     dl,BYTE PTR [ecx]
  41e709:	dec    esi
  41e70a:	out    0x44,eax
  41e70c:	push   0x9
  41e70e:	xchg   ebx,eax
  41e70f:	ins    BYTE PTR es:[edi],dx
  41e710:	jo     0x41e6d5
  41e712:	jp     0x41e6b0
  41e714:	mov    ebp,0x3c25ba51
  41e719:	lahf   
  41e71a:	push   edx
  41e71b:	add    BYTE PTR [edx-0x7a],al
  41e71e:	retf   
  41e71f:	dec    ecx
  41e720:	mov    ds:0x1b20e8a0,al
  41e725:	out    0x9b,al
  41e727:	test   al,0x94
  41e729:	out    dx,eax
  41e72a:	cli    
  41e72b:	lea    ecx,[ebx+0x2857b310]
  41e731:	inc    eax
  41e732:	adc    ecx,edx
  41e734:	add    edi,DWORD PTR ds:0x77c3c31b
  41e73a:	cmp    eax,0x25606e9d
  41e73f:	or     al,0x2d
  41e741:	sti    
  41e742:	and    di,WORD PTR [eax-0x2569966]
  41e749:	pop    esi
  41e74a:	xor    ah,BYTE PTR [edx+eax*8]
  41e74d:	adc    eax,0xff22f4e
  41e752:	clc    
  41e753:	je     0x41e714
  41e755:	clc    
  41e756:	inc    ebx
  41e757:	sbb    dh,BYTE PTR [edx+0x55]
  41e75a:	push   0x52d9a499
  41e75f:	mov    bh,0x16
  41e761:	dec    BYTE PTR [edx]
  41e763:	ss sahf 
  41e765:	mov    esp,0xf6b46b26
  41e76a:	mov    ah,0x63
  41e76c:	leave  
  41e76d:	push   ss
  41e76e:	scas   al,BYTE PTR es:[edi]
  41e76f:	inc    esp
  41e770:	out    0x42,eax
  41e772:	rcr    DWORD PTR [ebp-0x78b64a1e],1
  41e778:	ds leavew 
  41e77b:	pusha  
  41e77c:	fisub  DWORD PTR [ebp+0x4b]
  41e77f:	stc    
  41e780:	sbb    BYTE PTR [edi-0x18],cl
  41e783:	ret    0x8618
  41e786:	adc    DWORD PTR [esi+0x3d25ea45],edi
  41e78c:	and    BYTE PTR [esi+ebx*2+0x19abc9b8],cl
  41e793:	enter  0x20cc,0x11
  41e797:	or     BYTE PTR [esi+0x6edc5f1c],0x2c
  41e79e:	sbb    eax,0x80faa84e
  41e7a3:	push   ecx
  41e7a4:	xchg   esp,eax
  41e7a5:	call   0xf3396cf7
  41e7aa:	adc    BYTE PTR [eax+ecx*8-0x646a798c],ch
  41e7b1:	out    0x94,eax
  41e7b3:	and    BYTE PTR [edi],al
  41e7b5:	inc    ecx
  41e7b6:	sbb    esp,DWORD PTR [ebx]
  41e7b8:	push   edi
  41e7b9:	aaa    
  41e7ba:	cmp    al,dl
  41e7bc:	add    eax,0x4827dfe1
  41e7c1:	cmc    
  41e7c2:	test   BYTE PTR [ebx-0x56e2cbd],dh
  41e7c8:	lock jo 0x41e81a
  41e7cb:	mov    ah,0x77
  41e7cd:	stos   DWORD PTR es:[edi],eax
  41e7ce:	lahf   
  41e7cf:	fwait
  41e7d0:	test   BYTE PTR [edx-0x3b423cb2],al
  41e7d6:	sbb    al,0x80
  41e7d8:	ficomp DWORD PTR [ebx+ecx*4+0x40]
  41e7dc:	sub    al,0x58
  41e7de:	push   es
  41e7df:	(bad)  
  41e7e0:	jbe    0x41e812
  41e7e2:	xchg   esi,eax
  41e7e3:	xacquire xchg BYTE PTR ds:[ecx+0xc813957],dl
  41e7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7ec:	sub    ch,BYTE PTR ds:0xcc3a4a18
  41e7f2:	(bad)  
  41e7f3:	es iret 
  41e7f5:	sub    cl,BYTE PTR [ebp-0x43250631]
  41e7fb:	or     eax,0x8373da10
  41e800:	daa    
  41e801:	mov    bh,0x82
  41e803:	xor    ah,0xa3
  41e806:	int    0x58
  41e808:	xchg   ebp,eax
  41e809:	outs   dx,DWORD PTR ds:[esi]
  41e80a:	xchg   esp,eax
  41e80b:	xchg   ecx,eax
  41e80c:	or     eax,0xb2421c27
  41e811:	rcr    DWORD PTR [ecx+0x2f],cl
  41e814:	(bad)  
  41e815:	hlt    
  41e816:	call   0x24d9:0x4baf5e18
  41e81d:	stos   BYTE PTR es:[edi],al
  41e81e:	aas    
  41e81f:	and    al,0x59
  41e821:	pop    edx
  41e822:	sub    DWORD PTR [ebx-0x2e],edx
  41e825:	scas   eax,DWORD PTR es:[edi]
  41e826:	fmul   QWORD PTR [edi-0x14]
  41e829:	sbb    DWORD PTR [edi+0x38],esi
  41e82c:	nop
  41e82d:	(bad)  
  41e82e:	fsubrp st(5),st
  41e830:	loop   0x41e846
  41e832:	das    
  41e833:	in     eax,0xf6
  41e835:	cdq    
  41e836:	xor    eax,0xf970bfc
  41e83b:	aas    
  41e83c:	and    BYTE PTR [eax],ah
  41e83e:	jns    0x41e87f
  41e840:	mov    ebx,eax
  41e842:	ret    
  41e843:	add    DWORD PTR [esi+ebx*4-0x47],ecx
  41e847:	into   
  41e848:	push   ecx
  41e849:	out    0xa,eax
  41e84b:	xchg   ebx,eax
  41e84c:	adc    bh,BYTE PTR [esp+eax*8+0x3a]
  41e850:	xlat   BYTE PTR ds:[ebx]
  41e851:	sbb    eax,0x46ed202d
  41e856:	dec    edi
  41e857:	jmp    0xee23:0x10d66088
  41e85e:	std    
  41e85f:	and    al,0x14
  41e861:	add    bh,BYTE PTR [ecx]
  41e863:	xlat   BYTE PTR ds:[ebx]
  41e864:	(bad)  
  41e865:	mov    eax,ds:0xd8446c57
  41e86a:	popf   
  41e86b:	iret   
  41e86c:	jb     0x41e8b8
  41e86e:	mov    esi,DWORD PTR [eax+0x4fd872eb]
  41e874:	loopne 0x41e855
  41e876:	xchg   ebx,eax
  41e877:	cmp    eax,0x8d7debc1
  41e87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87d:	test   DWORD PTR [eax+esi*1-0xe],eax
  41e881:	ins    DWORD PTR es:[edi],dx
  41e882:	pop    ebp
  41e883:	movntss DWORD PTR [ebp-0x6],xmm6
  41e888:	push   es
  41e889:	nop
  41e88a:	jmp    0x41e8b4
  41e88c:	pop    edi
  41e88d:	xor    dl,BYTE PTR [edx+eiz*1-0x58]
  41e891:	cmp    BYTE PTR [edi-0x744fda16],bh
  41e897:	mov    ebp,0x66077adf
  41e89c:	imul   ecx,DWORD PTR [edi],0x64
  41e89f:	ja     0x41e838
  41e8a1:	xchg   edi,eax
  41e8a2:	int3   
  41e8a3:	(bad)  
  41e8a4:	and    al,0xa9
  41e8a6:	jmp    ebp
  41e8a8:	rcl    DWORD PTR [ecx+esi*1],0xcf
  41e8ac:	bound  edx,QWORD PTR [eax]
  41e8ae:	test   al,0xf3
  41e8b0:	test   eax,0x905b23de
  41e8b5:	mov    dh,0x9f
  41e8b7:	lods   al,BYTE PTR ds:[esi]
  41e8b8:	xchg   ebx,eax
  41e8b9:	lods   eax,DWORD PTR ds:[esi]
  41e8ba:	xchg   esp,eax
  41e8bb:	inc    esp
  41e8bc:	pop    ss
  41e8bd:	mov    ecx,0xf46ca034
  41e8c2:	or     DWORD PTR [ebp+0x23ba1bb8],ebp
  41e8c8:	js     0x41e8f4
  41e8ca:	std    
  41e8cb:	jg     0x41e888
  41e8cd:	cwde   
  41e8ce:	arpl   WORD PTR [edi-0x5d],bp
  41e8d1:	mov    dl,0x97
  41e8d3:	stos   DWORD PTR es:[edi],eax
  41e8d4:	lahf   
  41e8d5:	cli    
  41e8d6:	lock in eax,dx
  41e8d8:	in     eax,dx
  41e8d9:	fsub   st,st(2)
  41e8db:	jl     0x41e8d2
  41e8dd:	lock push esi
  41e8df:	test   DWORD PTR [esi+edi*2-0x250cbdaa],0xd976b38f
  41e8ea:	call   0xd238:0xf8f875db
  41e8f1:	push   edi
  41e8f2:	pop    esp
  41e8f3:	mov    cl,0xa
  41e8f5:	xor    DWORD PTR [eax+0x22],edi
  41e8f8:	push   esp
  41e8f9:	dec    esp
  41e8fa:	stc    
  41e8fb:	pop    ebp
  41e8fc:	jae    0x41e956
  41e8fe:	add    dl,cl
  41e900:	stos   BYTE PTR es:[edi],al
  41e901:	retf   0xd63e
  41e904:	mov    dl,0xfc
  41e906:	call   0x8e5c0cf0
  41e90b:	mov    ch,0x36
  41e90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e90e:	and    ecx,eax
  41e910:	mov    eax,ds:0xdf63a529
  41e915:	push   es
  41e916:	fadd   DWORD PTR [esi+0x2f]
  41e919:	mov    BYTE PTR ds:0xcc6d7844,ah
  41e91f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e921:	pop    esp
  41e922:	xor    al,ah
  41e924:	into   
  41e925:	adc    dl,BYTE PTR [ebx+eiz*4]
  41e928:	imul   eax,DWORD PTR [ecx+edx*8+0x30],0x6d90d405
  41e930:	rcl    eax,cl
  41e932:	sub    al,0xd5
  41e934:	pop    edx
  41e935:	fld    QWORD PTR [ebx]
  41e937:	mov    dh,0x58
  41e939:	sub    ebp,0x2a8ea167
  41e93f:	mov    dl,0x31
  41e941:	call   0x36251efd
  41e946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e947:	jle    0x41e959
  41e949:	imul   edi,DWORD PTR [esi+0x6b9e0ec2],0xfffffffe
  41e950:	scas   eax,DWORD PTR es:[edi]
  41e951:	adc    ch,dl
  41e953:	cwde   
  41e954:	ins    BYTE PTR es:[edi],dx
  41e955:	sub    eax,0xf820ade2
  41e95a:	sbb    ebp,edi
  41e95c:	pop    edx
  41e95d:	das    
  41e95e:	leave  
  41e95f:	jnp    0x41e9bf
  41e961:	add    ecx,DWORD PTR [edi+ebx*1+0x5c]
  41e965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e966:	int3   
  41e967:	popf   
  41e968:	jo     0x41e997
  41e96a:	mov    ds:0x3898d03a,eax
  41e96f:	cmp    esi,DWORD PTR [edx+0x7d]
  41e972:	mov    ds:0xfb7bfa73,eax
  41e977:	aad    0x3
  41e979:	loopne 0x41e980
  41e97b:	test   DWORD PTR [ecx*2-0x346fbda8],esi
  41e982:	xor    edi,esi
  41e984:	pop    eax
  41e985:	push   ss
  41e986:	fisttp WORD PTR [esi*2+0x4f7f3c5b]
  41e98d:	mov    WORD PTR [ecx-0x28],ss
  41e990:	xchg   DWORD PTR [ecx],ebp
  41e992:	pop    ss
  41e993:	adc    ecx,ecx
  41e995:	cld    
  41e996:	pop    esi
  41e997:	jge    0x41e975
  41e999:	mov    eax,ds:0x13ce8030
  41e99e:	sub    eax,0xeeb0aa51
  41e9a3:	neg    BYTE PTR [ecx]
  41e9a5:	mov    ebx,0x95c4a9f8
  41e9aa:	inc    ecx
  41e9ab:	pop    edx
  41e9ac:	popf   
  41e9ad:	inc    eax
  41e9ae:	imul   ebp,DWORD PTR gs:[edx],0x73
  41e9b2:	add    al,0x22
  41e9b4:	lea    esp,[eax-0x39b832cf]
  41e9ba:	mov    ds:0xf52acd4a,eax
  41e9bf:	inc    ecx
  41e9c0:	pushf  
  41e9c1:	(bad)  
  41e9c2:	js     0x41e98a
  41e9c4:	lea    edi,[esi]
  41e9c6:	sub    eax,0xae94f52b
  41e9cb:	mov    ecx,0x33e66a46
  41e9d0:	out    0x93,al
  41e9d2:	aam    0xbe
  41e9d4:	jb     0x41e9c7
  41e9d6:	inc    eax
  41e9d7:	push   ds
  41e9d8:	nop
  41e9d9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e9db:	jl     0x41e9e7
  41e9dd:	adc    DWORD PTR [eax+0x2254f9d],0xffffffd2
  41e9e4:	repnz adc ah,BYTE PTR [ecx-0x21]
  41e9e8:	xlat   BYTE PTR ds:[ebx]
  41e9e9:	scas   al,BYTE PTR es:[edi]
  41e9ea:	inc    ecx
  41e9eb:	js     0x41e990
  41e9ed:	jbe    0x41e9eb
  41e9ef:	std    
  41e9f0:	sub    BYTE PTR [edi-0xf],bl
  41e9f3:	and    edi,ebx
  41e9f5:	cwde   
  41e9f6:	bound  eax,QWORD PTR [edi-0x65]
  41e9f9:	and    eax,0xb9a4fead
  41e9fe:	mov    ds:0x5f86ea5e,eax
  41ea03:	js     0x41ea06
  41ea05:	cmp    BYTE PTR [bx+di],0xc7
  41ea09:	sbb    DWORD PTR [esi-0x36],0x3d
  41ea0d:	dec    edi
  41ea0e:	bound  ebp,QWORD PTR [ebp+0x28]
  41ea11:	xchg   esi,eax
  41ea12:	loopne 0x41ea14
  41ea14:	stos   BYTE PTR es:[edi],al
  41ea15:	retf   0x408
  41ea18:	arpl   WORD PTR [edx+ecx*2+0x9],cx
  41ea1c:	das    
  41ea1d:	neg    dh
  41ea1f:	dec    eax
  41ea20:	stc    
  41ea21:	or     eax,0xceed0036
  41ea26:	jnp    0x41ea9b
  41ea28:	push   ds
  41ea29:	mov    eax,0xbdcd728
  41ea2e:	scas   al,BYTE PTR es:[edi]
  41ea2f:	retf   
  41ea30:	stos   DWORD PTR es:[edi],eax
  41ea31:	or     BYTE PTR [ebp-0xb],0xa2
  41ea35:	jg     0x41e9ce
  41ea37:	fadd   QWORD PTR [edx+0x67]
  41ea3a:	rol    dl,1
  41ea3c:	or     bh,ah
  41ea3e:	cdq    
  41ea3f:	dec    eax
  41ea40:	jb     0x41ea64
  41ea42:	out    0xd1,al
  41ea44:	mov    BYTE PTR [edx+0x35236abb],ch
  41ea4a:	mov    ds,WORD PTR [edx+0x22]
  41ea4d:	rcr    ecx,0xe2
  41ea50:	jns    0x41ea79
  41ea52:	xor    ah,BYTE PTR [esi+0x6bb7add8]
  41ea58:	loopne 0x41eac8
  41ea5a:	pop    ebx
  41ea5b:	enter  0x1b00,0xa2
  41ea5f:	aam    0x35
  41ea61:	xchg   ebx,eax
  41ea62:	int3   
  41ea63:	es dec eax
  41ea65:	rcr    BYTE PTR [eax+ecx*1+0x6223e70a],1
  41ea6c:	hlt    
  41ea6d:	pop    ebx
  41ea6e:	test   al,0xb
  41ea70:	cli    
  41ea71:	test   al,0x8b
  41ea73:	ds ret 0x2f65
  41ea77:	xor    eax,0x76a26fd5
  41ea7c:	jae    0x41ead4
  41ea7e:	sub    bl,ch
  41ea80:	mov    esi,0x8b6f6235
  41ea85:	test   BYTE PTR [edx-0x7c909e79],0x86
  41ea8c:	cli    
  41ea8d:	xor    al,0xbe
  41ea8f:	ror    DWORD PTR es:[eax+0x27],1
  41ea93:	adc    esp,DWORD PTR [ebp-0xa04de52]
  41ea99:	cmp    BYTE PTR [eax],dh
  41ea9b:	sub    eax,0xd4540d61
  41eaa0:	pop    ss
  41eaa1:	mov    edi,0x1c5407b3
  41eaa6:	rcr    DWORD PTR [ecx],0x2e
  41eaa9:	pop    ss
  41eaaa:	aas    
  41eaab:	inc    edx
  41eaac:	jmp    0x41ea5d
  41eaae:	arpl   WORD PTR [ecx-0x4ae5a99c],ax
  41eab4:	cmp    al,0x5f
  41eab6:	rol    bl,0x96
  41eab9:	stc    
  41eaba:	dec    esi
  41eabb:	call   0x57b89e4d
  41eac0:	add    bh,BYTE PTR [eax+0x375449cf]
  41eac6:	fisub  DWORD PTR [edi-0x3d772bb1]
  41eacc:	out    0x60,eax
  41eace:	mov    eax,0xa6d5bd07
  41ead3:	imul   esi,DWORD PTR [ecx-0x37025bdc],0x97286bce
  41eadd:	(bad)  
  41eade:	jge    0x41eaa2
  41eae0:	push   edx
  41eae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae2:	jg     0x41ea65
  41eae4:	and    eax,0xab3b2a39
  41eae9:	lds    esi,FWORD PTR [esi-0x30]
  41eaec:	ins    DWORD PTR es:[edi],dx
  41eaed:	call   0xec5c724c
  41eaf2:	scas   al,BYTE PTR es:[edi]
  41eaf3:	mov    eax,ds:0xaefcd516
  41eaf8:	outs   dx,BYTE PTR ds:[esi]
  41eaf9:	mov    WORD PTR [eax+eiz*2],ds
  41eafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eafd:	gs dec edx
  41eaff:	lock and eax,0xaa3c357f
  41eb05:	inc    eax
  41eb06:	xor    DWORD PTR [ebp-0x2e],esi
  41eb09:	sbb    al,0xae
  41eb0b:	pop    esi
  41eb0c:	rcl    eax,cl
  41eb0e:	adc    BYTE PTR ds:[edi],bl
  41eb11:	mov    ch,0xde
  41eb13:	or     DWORD PTR [edi+ebp*4],ecx
  41eb16:	jbe    0x41eb4a
  41eb18:	aaa    
  41eb19:	loope  0x41eb12
  41eb1b:	imul   eax,DWORD PTR [esi],0x38
  41eb1e:	in     al,dx
  41eb1f:	pop    ebp
  41eb20:	fmul   QWORD PTR [edx+ebp*4+0x16b10917]
  41eb27:	cld    
  41eb28:	or     eax,0x9c4ec2de
  41eb2d:	sbb    eax,0x577b572f
  41eb32:	fs in  eax,dx
  41eb34:	and    cl,ch
  41eb36:	fsubr  DWORD PTR [edi-0x67598675]
  41eb3c:	jbe    0x41eac0
  41eb3e:	es push eax
  41eb40:	xor    al,0x39
  41eb42:	xor    ah,BYTE PTR [edi]
  41eb44:	xor    BYTE PTR [ebp-0x56],0xba
  41eb48:	sub    DWORD PTR [ebp-0x429e8404],0xffffffb1
  41eb4f:	mov    dh,0xf8
  41eb51:	and    DWORD PTR [esi+0x19],ecx
  41eb54:	js     0x41eb86
  41eb56:	iret   
  41eb57:	cdq    
  41eb58:	test   al,0x12
  41eb5a:	cs inc ebx
  41eb5c:	inc    ecx
  41eb5d:	int3   
  41eb5e:	jns    0x41eafa
  41eb60:	mov    bh,0x43
  41eb62:	and    bh,BYTE PTR fs:[edi-0x7412d23c]
  41eb69:	cli    
  41eb6a:	inc    eax
  41eb6b:	scas   eax,DWORD PTR es:[edi]
  41eb6c:	fist   DWORD PTR [esi]
  41eb6e:	ret    
  41eb6f:	iret   
  41eb70:	jae    0x41eb4c
  41eb72:	stos   DWORD PTR es:[edi],eax
  41eb73:	and    DWORD PTR ds:0x8b793f76,ebx
  41eb79:	and    esi,edx
  41eb7b:	int3   
  41eb7c:	call   0x59:0x32cace4a
  41eb83:	mov    ebp,0x800c42d5
  41eb88:	mov    dl,0xc1
  41eb8a:	dec    edi
  41eb8b:	clc    
  41eb8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8d:	shl    edx,cl
  41eb8f:	adc    cl,BYTE PTR [ebp+0x67]
  41eb92:	jg     0x41eb2c
  41eb94:	cmc    
  41eb95:	jae    0x41ec09
  41eb97:	(bad)  
  41eb98:	stos   BYTE PTR es:[edi],al
  41eb99:	out    dx,eax
  41eb9a:	repz int 0xcc
  41eb9d:	xor    ch,bh
  41eb9f:	lea    eax,[esi]
  41eba1:	fimul  WORD PTR [edx-0x568a8bad]
  41eba7:	das    
  41eba8:	loop   0x41ec11
  41ebaa:	pop    ecx
  41ebab:	inc    ebp
  41ebac:	retf   
  41ebad:	sbb    ebp,ecx
  41ebaf:	mov    bh,ch
  41ebb1:	sahf   
  41ebb2:	sub    ebx,0x56
  41ebb5:	add    BYTE PTR [edx+0x3a36626d],dh
  41ebbb:	jp     0x41ebdc
  41ebbd:	int    0xe8
  41ebbf:	inc    edx
  41ebc0:	scas   eax,DWORD PTR es:[edi]
  41ebc1:	(bad)  
  41ebc2:	repnz fld DWORD PTR [edx-0x72]
  41ebc6:	xchg   esp,eax
  41ebc7:	dec    ecx
  41ebc8:	das    
  41ebc9:	jbe    0x41ec08
  41ebcb:	out    0x5,eax
  41ebcd:	pop    esp
  41ebce:	ss ins DWORD PTR es:[edi],dx
  41ebd0:	btc    DWORD PTR [ebx],ecx
  41ebd3:	cmp    eax,0xb3b6a269
  41ebd8:	ins    DWORD PTR es:[edi],dx
  41ebd9:	mov    ebx,0xc328ebab
  41ebde:	(bad)  
  41ebdf:	aam    0x8d
  41ebe1:	je     0x41ec11
  41ebe3:	push   edi
  41ebe4:	lods   eax,DWORD PTR ds:[esi]
  41ebe5:	ds or  al,0xf4
  41ebe8:	and    eax,0xa219ac8d
  41ebed:	pop    es
  41ebee:	mov    esp,0xdc6e3a6c
  41ebf3:	mov    DWORD PTR [edi-0x5],ebx
  41ebf6:	jo     0x41ec38
  41ebf8:	jmp    0x41ec3f
  41ebfa:	mov    eax,0xa4894fae
  41ebff:	add    bh,BYTE PTR [edi-0x624718e6]
  41ec05:	cld    
  41ec06:	dec    edi
  41ec07:	inc    ecx
  41ec08:	ins    DWORD PTR es:[edi],dx
  41ec09:	inc    eax
  41ec0a:	out    dx,eax
  41ec0b:	jl     0x41ebf5
  41ec0d:	mov    ds:0x40d466aa,al
  41ec12:	aaa    
  41ec13:	dec    eax
  41ec14:	popf   
  41ec15:	lds    edx,FWORD PTR [edx]
  41ec17:	gs mov esi,0x3a6d98c7
  41ec1d:	sbb    dl,BYTE PTR [edi-0x6f50d5b6]
  41ec23:	daa    
  41ec24:	loopne 0x41ec7d
  41ec26:	push   cs
  41ec27:	into   
  41ec28:	std    
  41ec29:	scas   eax,DWORD PTR es:[edi]
  41ec2a:	icebp  
  41ec2b:	les    eax,FWORD PTR [ecx+0x4d687853]
  41ec31:	aaa    
  41ec32:	push   es
  41ec33:	or     eax,0xfa2f0f46
  41ec38:	dec    ebp
  41ec39:	pop    ecx
  41ec3a:	call   0xb1b:0x14fb6d69
  41ec41:	(bad)  
  41ec42:	pop    esi
  41ec43:	cmc    
  41ec44:	js     0x41ec54
  41ec46:	mov    eax,0xac478db9
  41ec4b:	idiv   DWORD PTR [edi]
  41ec4d:	ror    BYTE PTR [edi+0x68137a9e],0x91
  41ec54:	jl     0x41ec0b
  41ec56:	mov    esi,0xdc3a133b
  41ec5b:	(bad)  
  41ec5c:	sbb    cl,BYTE PTR [esi-0x5d99fc0d]
  41ec62:	nop
  41ec63:	addr16 (bad) 
  41ec65:	or     ebp,DWORD PTR [ebp-0x6b]
  41ec68:	inc    edi
  41ec69:	hlt    
  41ec6a:	icebp  
  41ec6b:	xchg   edi,eax
  41ec6c:	mov    cl,0xd4
  41ec6e:	sbb    eax,DWORD PTR [ecx]
  41ec70:	pop    eax
  41ec71:	int    0xb8
  41ec73:	adc    eax,0xd08926c0
  41ec78:	sbb    DWORD PTR [ecx],0xffffffc9
  41ec7b:	jno    0x41ecc0
  41ec7d:	out    0xee,al
  41ec7f:	xor    ebx,DWORD PTR [ebp-0x54]
  41ec82:	dec    ebp
  41ec83:	ins    BYTE PTR es:[edi],dx
  41ec84:	mov    ah,0x32
  41ec86:	repnz enter 0x4ae1,0x76
  41ec8b:	push   es
  41ec8c:	push   esp
  41ec8d:	shl    BYTE PTR [edx-0x1992ed4d],cl
  41ec93:	mov    DWORD PTR [edi-0x33],edi
  41ec96:	add    ecx,DWORD PTR [edi]
  41ec98:	dec    edi
  41ec99:	xchg   DWORD PTR [ecx-0x6f9be63a],ebx
  41ec9f:	leave  
  41eca0:	mov    edi,0xdcc0529b
  41eca5:	push   edi
  41eca6:	dec    edi
  41eca7:	das    
  41eca8:	lea    esp,ss:[ebx-0x526f8700]
  41ecaf:	shl    BYTE PTR [edi-0x7b],0xaf
  41ecb3:	or     BYTE PTR [edi],0xc9
  41ecb6:	icebp  
  41ecb7:	jecxz  0x41ec8e
  41ecb9:	data16 test al,0xda
  41ecbc:	pop    es
  41ecbd:	mov    eax,0x79618992
  41ecc2:	bndldx bnd1,[ecx-0x256cdf52]
  41ecc9:	rol    DWORD PTR [edi-0x3d1af1a1],0xca
  41ecd0:	aam    0xe
  41ecd2:	push   esi
  41ecd3:	mov    ds:0x7e44678a,al
  41ecd8:	sbb    al,0xfe
  41ecda:	clc    
  41ecdb:	mov    bl,0xac
  41ecdd:	sub    eax,0x6f67e5b2
  41ece2:	clc    
  41ece3:	outs   dx,DWORD PTR ds:[esi]
  41ece4:	pop    es
  41ece5:	out    0x38,eax
  41ece7:	ins    DWORD PTR es:[edi],dx
  41ece8:	sbb    edx,DWORD PTR [ebp+0x37b97136]
  41ecee:	neg    eax
  41ecf0:	sbb    eax,0x672df54b
  41ecf5:	sbb    al,0xb5
  41ecf7:	mov    dl,0xe9
  41ecf9:	or     al,0x33
  41ecfb:	xchg   DWORD PTR ds:0x400fd0e0,ebp
  41ed01:	push   es
  41ed02:	mov    BYTE PTR [edi-0x6a],al
  41ed05:	inc    esp
  41ed06:	sub    ah,0x29
  41ed09:	sbb    DWORD PTR [edi-0x59],edx
  41ed0c:	add    BYTE PTR [ecx],cl
  41ed0e:	pop    edi
  41ed0f:	stos   BYTE PTR es:[edi],al
  41ed10:	sub    DWORD PTR [ebx+edx*4-0x6215e307],ebx
  41ed17:	fstp   DWORD PTR [ecx+0x347fb29]
  41ed1d:	cmp    edi,DWORD PTR [eax+0x1a]
  41ed20:	pusha  
  41ed21:	fsub   QWORD PTR [eax+0x7744fa72]
  41ed27:	push   ecx
  41ed28:	pop    es
  41ed29:	push   es
  41ed2a:	fisttp DWORD PTR [edx+0x18]
  41ed2d:	cld    
  41ed2e:	fsub   QWORD PTR [eax]
  41ed30:	outs   dx,BYTE PTR ds:[esi]
  41ed31:	push   es
  41ed32:	mov    esi,0x90ae40d5
  41ed37:	mov    bl,0xe6
  41ed39:	xlat   BYTE PTR ds:[ebx]
  41ed3a:	push   0x44575534
  41ed3f:	rcl    edi,1
  41ed41:	add    BYTE PTR [ebx],bl
  41ed43:	inc    BYTE PTR [esi-0x3f929476]
  41ed49:	fwait
  41ed4a:	dec    ecx
  41ed4b:	and    bl,cl
  41ed4d:	jp     0x41ed24
  41ed4f:	mov    al,BYTE PTR [ebp+eiz*8+0x79]
  41ed53:	es adc al,0x15
  41ed56:	add    eax,DWORD PTR [ebp+ebp*1-0x3ea3b7ce]
  41ed5d:	or     ch,BYTE PTR [esi-0x7314adfd]
  41ed63:	pop    ebp
  41ed64:	jnp    0x41ed23
  41ed66:	test   dl,dl
  41ed68:	adc    al,0x66
  41ed6a:	cmp    DWORD PTR [eax+edi*1-0x4d],eax
  41ed6e:	jns    0x41ed1c
  41ed70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed71:	call   0xd324115a
  41ed76:	in     al,0x21
  41ed78:	loopne 0x41ed73
  41ed7a:	pop    edi
  41ed7b:	aam    0x87
  41ed7d:	in     al,0x9
  41ed7f:	xchg   BYTE PTR [ecx],al
  41ed81:	jno    0x41edec
  41ed83:	scas   eax,DWORD PTR es:[edi]
  41ed84:	ins    BYTE PTR es:[edi],dx
  41ed85:	sub    al,0x75
  41ed87:	inc    eax
  41ed88:	arpl   WORD PTR [edi+0x60],sp
  41ed8b:	dec    eax
  41ed8c:	and    al,0x24
  41ed8e:	mov    WORD PTR [ebx+ecx*8+0x77ac351e],es
  41ed95:	push   ecx
  41ed96:	inc    eax
  41ed97:	cmp    cl,BYTE PTR [edi-0x32580c72]
  41ed9d:	mov    BYTE PTR [edi+ecx*8],ah
  41eda0:	cmp    WORD PTR [edi],dx
  41eda3:	inc    edx
  41eda4:	fnstcw WORD PTR [edx+0x5bbd289f]
  41edaa:	mov    edx,0xb767c96e
  41edaf:	fwait
  41edb0:	mov    BYTE PTR [edx],dh
  41edb2:	repz sub al,0x37
  41edb5:	out    0x3f,ax
  41edb8:	stos   DWORD PTR es:[edi],eax
  41edb9:	mov    edi,0xff1cf4c9
  41edbe:	mov    ?,ecx
  41edc0:	cmp    eax,0xce0a8422
  41edc5:	jmp    0x41ed7e
  41edc7:	or     esp,0x9fbe7c03
  41edcd:	loop   0x41ee49
  41edcf:	addr16 dec esi
  41edd1:	mov    al,0xfa
  41edd3:	sbb    al,0x5a
  41edd5:	xchg   ecx,eax
  41edd6:	loope  0x41ee0c
  41edd8:	retf   0xacc6
  41eddb:	mov    bh,0x5f
  41eddd:	sbb    BYTE PTR ds:0xc1115ac9,bl
  41ede3:	mov    WORD PTR [ebx+0x47],ds
  41ede6:	mov    ds:0x14ca7b48,al
  41edeb:	les    ebx,FWORD PTR [edx-0x24067c8e]
  41edf1:	jae    0x41ee14
  41edf3:	inc    ebx
  41edf4:	ins    DWORD PTR es:[edi],dx
  41edf5:	mov    ecx,0x312f0508
  41edfa:	jb     0x41eda8
  41edfc:	push   esp
  41edfd:	cdq    
  41edfe:	pushw  0x6102
  41ee02:	adc    ebx,DWORD PTR ds:0x986cb84e
  41ee08:	add    bl,BYTE PTR [edx-0x278cfcd3]
  41ee0e:	mov    dh,0x88
  41ee10:	sti    
  41ee11:	jmp    0xea2e3906
  41ee16:	adc    eax,0xc55ab072
  41ee1b:	pop    eax
  41ee1c:	xchg   edi,eax
  41ee1d:	xchg   edx,eax
  41ee1e:	adc    al,0x3f
  41ee20:	cmp    al,BYTE PTR [ecx-0x213d427a]
  41ee26:	add    ch,dl
  41ee28:	cmp    eax,0xb7ff03d6
  41ee2d:	add    eax,0xc1c2acb3
  41ee32:	ins    DWORD PTR es:[edi],dx
  41ee33:	push   edi
  41ee34:	test   DWORD PTR [eax-0x788aa5a4],esi
  41ee3a:	push   ebp
  41ee3b:	dec    esi
  41ee3c:	inc    ebx
  41ee3d:	iret   
  41ee3e:	jne    0x41ee6a
  41ee40:	push   esi
  41ee41:	rcl    bl,0xee
  41ee44:	scas   al,BYTE PTR es:[edi]
  41ee45:	add    DWORD PTR [ebx+0x54022cdd],ebx
  41ee4b:	sub    ecx,DWORD PTR [edi+edi*8+0x4e]
  41ee4f:	in     al,0xc0
  41ee51:	test   eax,0xb2c44243
  41ee56:	retf   0x1e99
  41ee59:	popf   
  41ee5a:	fimul  DWORD PTR [edi]
  41ee5c:	hlt    
  41ee5d:	jecxz  0x41ee0f
  41ee5f:	mov    esi,0x130b299
  41ee64:	adc    eax,0xb1aac5cf
  41ee69:	mov    ss,ebp
  41ee6b:	xchg   ebp,eax
  41ee6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6d:	aaa    
  41ee6e:	pop    ebp
  41ee6f:	mov    cl,0x2e
  41ee71:	js     0x41ee54
  41ee73:	inc    ebx
  41ee74:	pop    ecx
  41ee75:	mov    DWORD PTR [ebp*2+0x145736bb],0x8870a5b7
  41ee80:	outs   dx,DWORD PTR ds:[esi]
  41ee81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee82:	fwait
  41ee83:	rcr    BYTE PTR fs:[eax],1
  41ee86:	push   0xb848c2d9
  41ee8b:	push   ecx
  41ee8c:	loop   0x41eec5
  41ee8e:	mov    dl,0x5a
  41ee90:	sub    eax,0x4d26e22c
  41ee95:	in     al,0xff
  41ee97:	jae    0x41ee9e
  41ee99:	lock loopne 0x41ee74
  41ee9c:	gs (bad) 
  41ee9e:	adc    al,BYTE PTR [ebx-0x73]
  41eea1:	daa    
  41eea2:	out    0x28,eax
  41eea4:	mov    ebx,0xa89c596
  41eea9:	xlat   BYTE PTR ds:[ebx]
  41eeaa:	sub    bl,BYTE PTR [esi-0x76]
  41eead:	pushf  
  41eeae:	shr    BYTE PTR [edx],1
  41eeb0:	dec    ebp
  41eeb1:	clc    
  41eeb2:	cmp    DWORD PTR [edx],ebx
  41eeb4:	fcmovne st,st(2)
  41eeb6:	fdiv   QWORD PTR [esi+ebp*2-0xb]
  41eeba:	mov    edi,esi
  41eebc:	imul   ebx,DWORD PTR [ebp+0x40a33996],0xffffffc9
  41eec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec4:	xor    eax,0x1f2573b8
  41eec9:	jmp    0x4fd7:0xcd06d461
  41eed0:	int3   
  41eed1:	lods   eax,DWORD PTR ds:[esi]
  41eed2:	aam    0xe6
  41eed4:	xor    edi,DWORD PTR [eax-0x6a30cd5e]
  41eeda:	dec    esp
  41eedb:	test   DWORD PTR [esi+0x3b],ebx
  41eede:	add    BYTE PTR [ecx+0x4ab61ecb],dl
  41eee4:	add    ah,BYTE PTR [ecx]
  41eee6:	mov    DWORD PTR [ebp-0x34],ebx
  41eee9:	fild   WORD PTR [esp+edx*2+0x38363a35]
  41eef0:	(bad)  
  41eef1:	push   esp
  41eef2:	hlt    
  41eef3:	out    dx,eax
  41eef4:	outs   dx,DWORD PTR ds:[esi]
  41eef5:	push   ebx
  41eef6:	pop    esp
  41eef7:	push   0x14
  41eef9:	lods   eax,DWORD PTR ds:[esi]
  41eefa:	xor    BYTE PTR [edi+0x27],al
  41eefd:	(bad)  
  41eefe:	or     al,0xdc
  41ef00:	xor    dh,BYTE PTR [eax-0x23fda119]
  41ef06:	sahf   
  41ef07:	jl     0x41eefa
  41ef09:	and    eax,0x28b81cf
  41ef0e:	push   eax
  41ef0f:	retf   0xe32d
  41ef12:	ret    0x9c2e
  41ef15:	cmp    BYTE PTR [ecx-0x470093c],ch
  41ef1b:	adc    al,0x7c
  41ef1d:	mov    bl,0x65
  41ef1f:	xchg   esp,eax
  41ef20:	xchg   BYTE PTR [eax-0x261eccd1],dh
  41ef26:	fisttp DWORD PTR [ebp-0x1f]
  41ef29:	retf   
  41ef2a:	sbb    eax,0x348fc788
  41ef2f:	fisub  WORD PTR [eax-0x28]
  41ef32:	dec    ecx
  41ef33:	mov    dl,BYTE PTR [ebx+esi*1-0x755a0d0c]
  41ef3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef3b:	cwde   
  41ef3c:	ror    BYTE PTR [edi],cl
  41ef3e:	xlat   BYTE PTR ds:[ebx]
  41ef3f:	ins    BYTE PTR es:[edi],dx
  41ef40:	js     0x41ef7e
  41ef42:	dec    eax
  41ef43:	cs jnp 0x41ef0d
  41ef46:	dec    esp
  41ef47:	les    edx,FWORD PTR [eax]
  41ef49:	loop   0x41ef98
  41ef4b:	mov    bh,0x81
  41ef4d:	add    eax,0xb220527c
  41ef52:	(bad)  
  41ef53:	inc    eax
  41ef54:	xchg   ecx,eax
  41ef55:	adc    bl,ch
  41ef57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef58:	push   ecx
  41ef59:	pusha  
  41ef5a:	das    
  41ef5b:	xchg   ebp,eax
  41ef5c:	add    dl,BYTE PTR [edi]
  41ef5e:	mov    WORD PTR [edx-0x670ea237],fs
  41ef64:	stos   BYTE PTR es:[edi],al
  41ef65:	loopne 0x41ef66
  41ef67:	lock mov BYTE PTR [edi-0x5a6db0f1],0x61
  41ef6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef70:	je     0x41ef4a
  41ef72:	jmp    0xf726:0x3c37fabd
  41ef79:	pusha  
  41ef7a:	(bad)
  41ef7d:	stc    
  41ef7e:	outs   dx,DWORD PTR ds:[esi]
  41ef7f:	mov    al,ds:0xde085adf
  41ef84:	jmp    0x136e:0xc203b332
  41ef8b:	fistp  WORD PTR [edx]
  41ef8d:	mov    bx,0x6fa0
  41ef91:	xor    bl,BYTE PTR [edi]
  41ef93:	out    0xfc,al
  41ef95:	dec    edi
  41ef96:	jnp    0x41f00c
  41ef98:	push   eax
  41ef99:	adc    DWORD PTR [ecx-0x7b4b4c48],ebp
  41ef9f:	push   es
  41efa0:	in     eax,0x5d
  41efa2:	mov    al,ds:0x16c96607
  41efa7:	(bad)  [ebx]
  41efa9:	cmp    BYTE PTR [ecx],ch
  41efab:	sbb    eax,edx
  41efad:	mov    ah,0x4c
  41efaf:	xor    BYTE PTR [ebp-0x3c],cl
  41efb2:	in     eax,0x64
  41efb4:	or     BYTE PTR [ebx-0x3c4b59d0],al
  41efba:	push   ds
  41efbb:	jae    0x41ef89
  41efbd:	push   0xffffffd8
  41efbf:	(bad)  
  41efc0:	pop    esi
  41efc1:	gs out dx,eax
  41efc3:	sbb    eax,0x20d24d6e
  41efc8:	clc    
  41efc9:	aaa    
  41efca:	test   bh,dh
  41efcc:	dec    esp
  41efcd:	aaa    
  41efce:	into   
  41efcf:	adc    BYTE PTR [eax-0x4606a1a5],ch
  41efd5:	and    eax,0xb635343a
  41efda:	lahf   
  41efdb:	gs in  al,dx
  41efdd:	imul   ecx,DWORD PTR [edx-0x7b253580],0xffffffee
  41efe4:	int3   
  41efe5:	sahf   
  41efe6:	aad    0xac
  41efe8:	jp     0x41f069
  41efea:	jge    0x41f06a
  41efec:	sti    
  41efed:	test   eax,0xcbd2aa3a
  41eff2:	(bad)  
  41eff3:	mov    ecx,0x709ea98
  41eff8:	test   al,0xb3
  41effa:	push   ss
  41effb:	test   eax,0x6fbc52d7
  41f000:	ret    
  41f001:	jne    0x41f01d
  41f003:	(bad)  
  41f004:	sub    al,0x8a
  41f006:	popf   
  41f007:	(bad)  
  41f008:	cs ins BYTE PTR es:[edi],dx
  41f00a:	out    dx,al
  41f00b:	push   ebx
  41f00c:	or     edi,ecx
  41f00e:	clc    
  41f00f:	push   edi
  41f010:	loope  0x41f020
  41f012:	outs   dx,BYTE PTR ds:[esi]
  41f013:	ret    0x2cf5
  41f016:	xor    ebx,ecx
  41f018:	pop    ecx
  41f019:	je     0x41f02a
  41f01b:	dec    ebp
  41f01c:	adc    BYTE PTR [edi+edi*8],ch
  41f01f:	push   0x10
  41f021:	push   0x7c1c0191
  41f026:	test   al,0xe5
  41f028:	xor    al,0x58
  41f02a:	jae    0x41f03e
  41f02c:	iret   
  41f02d:	adc    BYTE PTR [eax-0x47],0x7f
  41f031:	mov    ebp,0x908404ad
  41f036:	sbb    BYTE PTR [eax+0x2a3703f7],bh
  41f03c:	add    al,0x9e
  41f03e:	cmp    cl,BYTE PTR [eax+0x6420db24]
  41f044:	sub    dh,bh
  41f046:	or     bl,BYTE PTR [ebx-0x1d]
  41f049:	mov    bl,0x7e
  41f04b:	mov    dl,0xa8
  41f04d:	sub    BYTE PTR [esi+edi*8],al
  41f050:	xor    ch,BYTE PTR [ebx+ecx*4]
  41f053:	inc    esp
  41f054:	daa    
  41f055:	mov    esi,DWORD PTR [edi-0x4a]
  41f058:	mov    al,0x3e
  41f05a:	call   0x62cb:0x44e0f12d
  41f061:	neg    DWORD PTR [esi+esi*8]
  41f064:	xchg   ebx,eax
  41f065:	cmp    al,0x62
  41f067:	dec    ecx
  41f068:	daa    
  41f069:	sub    edx,edi
  41f06b:	or     BYTE PTR [eax],al
  41f06d:	(bad)  
  41f06f:	(bad)  
  41f070:	data16 jnp 0x41f0d2
  41f073:	nop
  41f074:	xor    esi,DWORD PTR [esi-0x636e0f32]
  41f07a:	mov    ebx,0x1573ac53
  41f07f:	pop    esp
  41f080:	pop    ecx
  41f081:	cld    
  41f082:	mov    al,0x7d
  41f084:	iret   
  41f085:	fild   QWORD PTR [ebx+0x1fbc8922]
  41f08b:	pop    eax
  41f08c:	inc    edi
  41f08d:	ret    
  41f08e:	dec    ebp
  41f08f:	loopne 0x41f0c5
  41f091:	sbb    DWORD PTR [ebp+0x53],esi
  41f094:	dec    ebx
  41f095:	adc    BYTE PTR [eax+0x78],cl
  41f098:	pusha  
  41f099:	loopne 0x41f119
  41f09b:	dec    ebx
  41f09c:	ins    DWORD PTR es:[edi],dx
  41f09d:	adc    BYTE PTR [esi],cl
  41f09f:	jb     0x41f0e5
  41f0a1:	inc    edi
  41f0a2:	fcom   st(5)
  41f0a4:	stos   BYTE PTR es:[edi],al
  41f0a5:	jmp    0xdaf5:0x8adcec8f
  41f0ac:	dec    ecx
  41f0ad:	fsubr  st,st(2)
  41f0af:	sub    BYTE PTR [edx],0xd9
  41f0b2:	arpl   WORD PTR [ebx],bp
  41f0b4:	inc    ebp
  41f0b5:	sub    BYTE PTR [edi],ch
  41f0b7:	in     eax,dx
  41f0b8:	ds leave 
  41f0ba:	mov    eax,0x8b39ce0f
  41f0bf:	sub    bh,bh
  41f0c1:	xchg   ebp,eax
  41f0c2:	mov    eax,ds:0xbf4785fc
  41f0c7:	popa   
  41f0c8:	or     DWORD PTR [ecx-0x10840586],ebx
  41f0ce:	enter  0x5eb3,0x32
  41f0d2:	mov    edx,0x49b09163
  41f0d7:	mov    ebp,0xd0901992
  41f0dc:	in     al,0x5a
  41f0de:	or     bh,BYTE PTR [esi]
  41f0e0:	push   edx
  41f0e1:	add    DWORD PTR [edx-0x3f],ebx
  41f0e4:	addr16 mov edi,0x31e9ac38
  41f0ea:	scas   al,BYTE PTR es:[edi]
  41f0eb:	jp     0x41f140
  41f0ed:	cs jecxz 0x41f152
  41f0f0:	repz or eax,DWORD PTR [ecx]
  41f0f3:	sub    al,0x4a
  41f0f5:	inc    esi
  41f0f6:	pop    edi
  41f0f7:	adc    ch,bh
  41f0f9:	add    dl,BYTE PTR [ebp-0x2b]
  41f0fc:	jae    0x41f0f8
  41f0fe:	ret    
  41f0ff:	sbb    BYTE PTR [edi-0x6c],cl
  41f102:	xchg   BYTE PTR [ecx-0x6340de6d],ch
  41f108:	dec    edi
  41f109:	mov    ebp,0x6495d45d
  41f10e:	mov    eax,0x8bf5be97
  41f113:	lock or bl,BYTE PTR [esi-0x4a]
  41f117:	ror    BYTE PTR [ebx-0x4987ab92],0xa1
  41f11e:	je     0x41f19a
  41f120:	mov    ds:0x66f3517a,al
  41f125:	add    eax,0x9d0c1fff
  41f12a:	out    dx,eax
  41f12b:	push   edi
  41f12c:	scas   eax,DWORD PTR es:[edi]
  41f12d:	test   al,0x13
  41f12f:	xor    DWORD PTR [esi-0x54a25dc8],eax
  41f135:	ret    
  41f136:	or     DWORD PTR [ebp+eax*4+0x1d],eax
  41f13a:	push   eax
  41f13b:	dec    edi
  41f13c:	fdivr  DWORD PTR [ecx-0x1143a57a]
  41f142:	lock rcl BYTE PTR [esi+0x3e],1
  41f146:	jae    0x41f0f1
  41f148:	test   BYTE PTR [ebp+ecx*8-0x17],ah
  41f14c:	pop    ds
  41f14d:	out    0xe7,eax
  41f14f:	addr16 mov eax,0x84336078
  41f155:	(bad)  
  41f156:	pop    ebx
  41f157:	lea    esp,[edi]
  41f159:	and    al,0xd4
  41f15b:	rcr    BYTE PTR [ecx+esi*4-0x16e5f81a],cl
  41f162:	iret   
  41f163:	pop    edx
  41f164:	dec    edi
  41f165:	pop    ebx
  41f166:	mov    edi,0x5b6c1df3
  41f16b:	fstp   DWORD PTR [eax-0x66665f49]
  41f171:	dec    ebx
  41f172:	ret    0xb6f4
  41f175:	mov    ebp,0x77e31c9
  41f17a:	jg     0x41f154
  41f17c:	fisub  WORD PTR ds:0xe321f87c
  41f182:	out    0x3f,al
  41f184:	int    0x8c
  41f186:	cmp    edx,DWORD PTR [ebp+eiz*1+0x198fa4f1]
  41f18d:	dec    edi
  41f18e:	ds (bad) 
  41f190:	fwait
  41f191:	int    0x36
  41f193:	mov    ah,0xbf
  41f195:	loope  0x41f1c0
  41f197:	(bad)  [ebp+0x5d88eaa1]
  41f19d:	mov    ch,0x62
  41f19f:	(bad)  
  41f1a0:	xlat   BYTE PTR ds:[ebx]
  41f1a1:	xchg   ecx,eax
  41f1a2:	push   ebx
  41f1a3:	int    0xee
  41f1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a6:	mov    DWORD PTR [edx+0x3ca2af81],edx
  41f1ac:	mov    edx,0xff0de126
  41f1b1:	out    0xab,eax
  41f1b3:	jno    0x41f1fc
  41f1b5:	int3   
  41f1b6:	ret    0x3b9a
  41f1b9:	and    eax,0x44477ab0
  41f1be:	inc    ecx
  41f1bf:	les    ebx,FWORD PTR [ebp+0x7a]
  41f1c2:	adc    BYTE PTR [ecx-0x38],0xe9
  41f1c6:	dec    ebx
  41f1c7:	dec    ebp
  41f1c8:	icebp  
  41f1c9:	enterw 0xeb29,0x9e
  41f1ce:	loope  0x41f21b
  41f1d0:	imul   BYTE PTR [eax]
  41f1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1d3:	push   cs
  41f1d4:	iret   
  41f1d5:	adc    BYTE PTR ds:0x583a011b,dh
  41f1db:	push   esi
  41f1dc:	lahf   
  41f1dd:	outs   dx,BYTE PTR ds:[esi]
  41f1de:	(bad)  
  41f1df:	jns    0x41f24d
  41f1e1:	mov    ds:0xe826c150,eax
  41f1e6:	add    DWORD PTR [ecx-0x763e443c],ebp
  41f1ec:	xchg   esi,eax
  41f1ed:	sub    ch,dh
  41f1ef:	test   BYTE PTR [edx],0x26
  41f1f2:	mov    esp,0x315e7fa
  41f1f7:	cmp    ebp,DWORD PTR [ecx+0x6e]
  41f1fa:	add    ecx,eax
  41f1fc:	push   edx
  41f1fd:	aas    
  41f1fe:	sub    esi,ecx
  41f200:	js     0x41f186
  41f202:	sub    ebp,eax
  41f204:	pusha  
  41f205:	lods   al,BYTE PTR ds:[esi]
  41f206:	adc    BYTE PTR ds:0xc9f23f69,0x77
  41f20d:	mov    ebx,DWORD PTR [edi-0x57e2128c]
  41f213:	mov    ebx,0x718eeb9
  41f218:	mov    ecx,0xc117632
  41f21d:	pop    eax
  41f21e:	xor    al,0x27
  41f220:	pushf  
  41f221:	ins    BYTE PTR es:[edi],dx
  41f222:	cs (bad) 
  41f224:	call   0xed29f00b
  41f229:	mov    dh,0xad
  41f22b:	fldcw  WORD PTR [edx-0x48b36718]
  41f231:	inc    esp
  41f232:	(bad)  
  41f233:	aad    0x23
  41f235:	ret    0xaf20
  41f238:	cmc    
  41f239:	mov    ecx,0xe01fa9e3
  41f23e:	imul   DWORD PTR [eax+eiz*1+0x6b15a13e]
  41f245:	ins    DWORD PTR es:[edi],dx
  41f246:	and    al,BYTE PTR [eax-0x24928f9]
  41f24c:	pop    esi
  41f24d:	das    
  41f24e:	adc    DWORD PTR [edx+ecx*1],ecx
  41f251:	or     eax,0x4476888e
  41f256:	das    
  41f257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f258:	inc    esp
  41f259:	pop    eax
  41f25a:	xchg   ebx,eax
  41f25b:	das    
  41f25c:	pop    ds
  41f25d:	popf   
  41f25e:	in     al,0x4d
  41f260:	ja     0x41f1e7
  41f262:	push   ecx
  41f263:	dec    ebp
  41f264:	push   ss
  41f265:	daa    
  41f266:	jns    0x41f2b7
  41f268:	fwait
  41f269:	int    0x16
  41f26b:	jge    0x41f298
  41f26d:	push   ebx
  41f26e:	jg     0x41f2be
  41f270:	aad    0xfa
  41f272:	fld    QWORD PTR [ebx+0x5b814485]
  41f278:	jns    0x41f211
  41f27a:	popf   
  41f27b:	or     bl,ah
  41f27d:	mov    eax,esp
  41f27f:	dec    eax
  41f280:	push   edx
  41f281:	jne    0x41f235
  41f283:	adc    al,0xb0
  41f285:	jp     0x41f23b
  41f287:	imul   ebx,DWORD PTR [ebx-0x6beb38b1],0x532b3a8b
  41f291:	jno    0x41f303
  41f293:	ret    
  41f294:	cmc    
  41f295:	push   ds
  41f296:	fcom   QWORD PTR [ebp+0x8]
  41f299:	pop    ecx
  41f29a:	xlat   BYTE PTR ds:[ebx]
  41f29b:	or     cl,BYTE PTR [esi]
  41f29d:	add    al,0xc9
  41f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a0:	ds cmc 
  41f2a2:	mov    ch,0xb9
  41f2a4:	outs   dx,DWORD PTR ds:[esi]
  41f2a5:	sbb    dh,BYTE PTR [esi+0x21]
  41f2a8:	scas   al,BYTE PTR es:[edi]
  41f2a9:	in     al,dx
  41f2aa:	ds jp  0x41f2ea
  41f2ad:	inc    ecx
  41f2ae:	sub    eax,0xd8d7f277
  41f2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b4:	dec    ecx
  41f2b5:	cmp    BYTE PTR [ebx+eiz*1+0x4f46e50f],0xc7
  41f2bd:	data16 jns 0x41f338
  41f2c0:	pop    edx
  41f2c1:	test   eax,0x6ad8963e
  41f2c6:	xchg   DWORD PTR [edx-0x29cdde30],ebp
  41f2cc:	dec    eax
  41f2cd:	add    DWORD PTR ds:0x30028687,ebp
  41f2d3:	stos   DWORD PTR es:[edi],eax
  41f2d4:	push   edi
  41f2d5:	cmp    al,BYTE PTR [edi-0x6bc83fc4]
  41f2db:	repz (bad) 
  41f2dd:	test   eax,0x3c436e52
  41f2e2:	cmp    al,0x2f
  41f2e4:	fist   DWORD PTR [eax+0x60cbd1a8]
  41f2ea:	push   es
  41f2eb:	aad    0xac
  41f2ed:	jl     0x41f345
  41f2ef:	push   esi
  41f2f0:	jns    0x41f27b
  41f2f2:	repnz arpl WORD PTR [esi-0x3a6cb8c6],ax
  41f2f9:	inc    ecx
  41f2fa:	loope  0x41f2bb
  41f2fc:	cwde   
  41f2fd:	fwait
  41f2fe:	aam    0x62
  41f300:	add    edx,DWORD PTR [esi-0xf]
  41f303:	in     eax,dx
  41f304:	pop    esp
  41f305:	fld    DWORD PTR ds:0xd35df720
  41f30b:	and    DWORD PTR [ebx-0x10],0x65
  41f30f:	push   ebp
  41f310:	cmp    bl,bh
  41f312:	adc    ebp,DWORD PTR [eax]
  41f314:	fst    DWORD PTR [esi-0x51]
  41f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f318:	retf   0x595c
  41f31b:	xchg   edi,eax
  41f31c:	push   0x72
  41f31e:	ret    
  41f31f:	popa   
  41f320:	cmc    
  41f321:	je     0x41f2eb
  41f323:	fmul   st(7),st
  41f325:	pop    ebx
  41f326:	shl    DWORD PTR ds:0xb4d1a8b2,1
  41f32c:	inc    esp
  41f32d:	sbb    bl,BYTE PTR [ecx-0x32]
  41f330:	aad    0x97
  41f332:	into   
  41f333:	loope  0x41f35f
  41f335:	jbe    0x41f35d
  41f337:	and    DWORD PTR [edx-0x6c51f9b1],ebp
  41f33d:	cmp    eax,DWORD PTR [eax]
  41f33f:	ss (bad) 
  41f341:	in     eax,dx
  41f342:	div    DWORD PTR [eax-0x49]
  41f345:	and    DWORD PTR [eax],ebp
  41f347:	add    ecx,DWORD PTR [edi-0x2d]
  41f34a:	push   ss
  41f34b:	sub    BYTE PTR [esp+ebx*2-0x6afbae38],dl
  41f352:	fcom   QWORD PTR [edi]
  41f354:	fwait
  41f355:	add    al,0xae
  41f357:	add    al,0x8e
  41f359:	retf   
  41f35a:	inc    ebp
  41f35b:	sbb    DWORD PTR [ecx],ebx
  41f35d:	mov    BYTE PTR ds:0xde0ce756,al
  41f363:	and    edi,ecx
  41f365:	(bad)  
  41f366:	jnp    0x41f30a
  41f368:	imul   ecx,ecx,0x55b79984
  41f36e:	jmp    0xe11b817f
  41f373:	repnz lods al,BYTE PTR ds:[esi]
  41f375:	pop    edi
  41f376:	sub    al,0x5e
  41f378:	adc    BYTE PTR [edi+0xbe03b5e],0xe0
  41f37f:	sbb    eax,0x2af27bac
  41f384:	mov    esi,0x51be8684
  41f389:	xchg   edi,eax
  41f38a:	xchg   BYTE PTR [ebx+0x8],ch
  41f38d:	cmp    bh,BYTE PTR [esi+0x7b6c1889]
  41f393:	int    0xb9
  41f395:	(bad)  
  41f396:	xchg   ecx,eax
  41f397:	rcr    DWORD PTR [ebx],0xa
  41f39a:	sub    edx,0xc5fcbac5
  41f3a0:	sar    BYTE PTR [ecx],1
  41f3a2:	aaa    
  41f3a3:	clc    
  41f3a4:	mov    esi,0xc635691b
  41f3a9:	inc    ebx
  41f3aa:	stos   DWORD PTR es:[edi],eax
  41f3ab:	loope  0x41f338
  41f3ad:	aam    0xa
  41f3af:	outs   dx,DWORD PTR ds:[esi]
  41f3b0:	aam    0x64
  41f3b2:	ins    DWORD PTR es:[edi],dx
  41f3b3:	ins    DWORD PTR es:[edi],dx
  41f3b4:	fisttp WORD PTR [esi+0x52]
  41f3b7:	push   edx
  41f3b8:	cmp    eax,0x875fea04
  41f3bd:	nop
  41f3be:	lds    ebp,FWORD PTR [ecx+0x3b]
  41f3c1:	nop
  41f3c2:	or     al,0xd2
  41f3c4:	mov    ecx,0x6212a4d3
  41f3c9:	into   
  41f3ca:	lods   al,BYTE PTR ds:[esi]
  41f3cb:	retf   0xb2aa
  41f3ce:	dec    esp
  41f3cf:	(bad)  
  41f3d0:	rol    BYTE PTR [esi+ebx*8],cl
  41f3d3:	dec    ecx
  41f3d4:	test   eax,0x93b45e1b
  41f3d9:	ret    
  41f3da:	fdiv   st(1),st
  41f3dc:	fldenv [eax]
  41f3de:	stos   BYTE PTR es:[edi],al
  41f3df:	xchg   BYTE PTR [edx+0x54],dl
  41f3e2:	push   esi
  41f3e3:	frstor [ebx+0x56]
  41f3e6:	dec    eax
  41f3e7:	ja     0x41f405
  41f3e9:	fistp  WORD PTR [eax]
  41f3eb:	jmp    0x3e85962b
  41f3f0:	cmp    DWORD PTR ds:0x3e539898,edi
  41f3f6:	out    0xc1,eax
  41f3f8:	and    edx,edx
  41f3fa:	cwde   
  41f3fb:	out    dx,al
  41f3fc:	bound  esp,QWORD PTR [edx+0x68409a40]
  41f402:	inc    esp
  41f403:	outs   dx,BYTE PTR ds:[esi]
  41f404:	jae    0x41f482
  41f406:	out    0x82,eax
  41f408:	(bad)  
  41f40a:	vminpd ymm0,ymm3,YMMWORD PTR [eax+0x6b]
  41f40f:	mov    ch,ah
  41f411:	popa   
  41f412:	int3   
  41f413:	xchg   DWORD PTR ds:0x8b4cfdc7,ebx
  41f419:	inc    edx
  41f41a:	arpl   WORD PTR [ecx],si
  41f41c:	dec    edi
  41f41d:	rcl    BYTE PTR [ebp+0x31e83c0e],1
  41f423:	mov    ebp,0x78260d26
  41f428:	push   ecx
  41f429:	cmp    ebp,DWORD PTR [edx+eax*2-0x252b2283]
  41f430:	cwde   
  41f431:	iret   
  41f432:	enter  0x7a03,0x97
  41f436:	jp     0x41f497
  41f438:	stos   DWORD PTR es:[edi],eax
  41f439:	and    BYTE PTR [edx],ch
  41f43b:	adc    DWORD PTR [eax+0x155f2bb6],esp
  41f441:	xor    al,0xa5
  41f443:	test   ebp,eax
  41f445:	mov    edi,0x60db910f
  41f44a:	popf   
  41f44b:	xor    BYTE PTR [eax+0x1ee19fa6],bh
  41f451:	inc    esi
  41f452:	push   esp
  41f453:	push   edx
  41f454:	aad    0x77
  41f456:	mov    esp,0xa6f2ef56
  41f45b:	pusha  
  41f45c:	jecxz  0x41f41e
  41f45e:	mov    eax,0x1b695a37
  41f463:	mov    ah,0x32
  41f465:	icebp  
  41f466:	push   edx
  41f467:	outs   dx,DWORD PTR ds:[esi]
  41f468:	and    eax,0x537f3de2
  41f46d:	ret    0xa7de
  41f470:	sbb    eax,0x8216e826
  41f475:	xlat   BYTE PTR ds:[ebx]
  41f476:	mov    bh,BYTE PTR [ebp-0x3acba810]
  41f47c:	inc    ebx
  41f47d:	loop   0x41f498
  41f47f:	mov    esi,0xb0e8757b
  41f484:	dec    edx
  41f485:	push   esp
  41f486:	test   eax,0xbc25d986
  41f48b:	pop    edi
  41f48c:	sbb    al,0x61
  41f48e:	lods   eax,DWORD PTR ds:[esi]
  41f48f:	pop    esp
  41f490:	xchg   DWORD PTR gs:[ebp+0x6b2a875f],ebp
  41f497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f498:	pop    esp
  41f499:	cmp    BYTE PTR [edi+0x3d],cl
  41f49c:	(bad)  
  41f49d:	or     DWORD PTR [ebx+0x42],ebx
  41f4a0:	lock jmp 0x93ef:0xa9371a95
  41f4a8:	add    al,0xa2
  41f4aa:	add    DWORD PTR [edi+esi*8-0x481758c3],esp
  41f4b1:	jnp    0x41f532
  41f4b3:	lds    edi,FWORD PTR [ebx-0x4f]
  41f4b6:	sbb    DWORD PTR [esi-0x325bc18d],ebp
  41f4bc:	inc    edx
  41f4bd:	push   edx
  41f4be:	pop    ds
  41f4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c0:	fwait
  41f4c1:	hlt    
  41f4c2:	ret    
  41f4c3:	ja     0x41f493
  41f4c5:	outs   dx,BYTE PTR ds:[esi]
  41f4c6:	test   al,0x38
  41f4c8:	(bad)  
  41f4c9:	adc    DWORD PTR [edx],esi
  41f4cb:	fsubr  QWORD PTR [ecx-0x571b466a]
  41f4d1:	or     ebp,edi
  41f4d3:	pop    eax
  41f4d4:	add    al,0xa5
  41f4d6:	xlat   BYTE PTR ds:[ebx]
  41f4d7:	lods   eax,DWORD PTR ds:[esi]
  41f4d8:	push   esi
  41f4d9:	jg     0x41f532
  41f4db:	push   ecx
  41f4dc:	leave  
  41f4dd:	(bad)  
  41f4de:	bound  esi,QWORD PTR [ebx]
  41f4e0:	mov    esi,0x141c32d1
  41f4e5:	mov    ebp,0xfb98d97a
  41f4ea:	xor    esi,DWORD PTR [edi]
  41f4ec:	xchg   edx,eax
  41f4ed:	jbe    0x41f4d9
  41f4ef:	inc    edx
  41f4f0:	gs (bad) 
  41f4f2:	sbb    ebp,DWORD PTR [ebp+0x7c]
  41f4f5:	ss inc edi
  41f4f7:	rcl    DWORD PTR [edx+esi*1+0x7af89bb4],0x9e
  41f4ff:	dec    eax
  41f500:	mov    WORD PTR [edx-0x63d75238],es
  41f506:	push   esi
  41f507:	fadd   QWORD PTR [ecx-0x7632e806]
  41f50d:	and    dh,BYTE PTR [esi]
  41f50f:	xchg   esi,eax
  41f510:	add    dh,BYTE PTR [edi]
  41f512:	and    ebp,eax
  41f514:	sbb    DWORD PTR [edi],ebx
  41f516:	sbb    DWORD PTR [edx],edi
  41f518:	mov    ds:0x38cbbd84,eax
  41f51d:	jg     0x41f511
  41f51f:	frndint 
  41f521:	sahf   
  41f522:	mov    dl,0xeb
  41f524:	ficomp WORD PTR [edx+0x206985cd]
  41f52a:	ret    
  41f52b:	sub    eax,0xada6d724
  41f530:	dec    esi
  41f531:	fcom   QWORD PTR [ebx-0x11a32be1]
  41f537:	jo     0x41f57c
  41f539:	lods   al,BYTE PTR ds:[esi]
  41f53a:	out    dx,al
  41f53b:	jge    0x41f4fd
  41f53d:	scas   al,BYTE PTR es:[edi]
  41f53e:	xor    al,0x25
  41f540:	xchg   bl,bl
  41f542:	jo     0x41f4e9
  41f544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f545:	xchg   esp,eax
  41f546:	leave  
  41f547:	mov    bh,BYTE PTR [esi-0x3d]
  41f54a:	je     0x41f51c
  41f54c:	xchg   ebx,eax
  41f54d:	pushf  
  41f54e:	or     al,0x79
  41f550:	or     dh,dl
  41f552:	mov    ebx,0x5dd4a7c6
  41f557:	test   edi,0xdbc83e18
  41f55d:	daa    
  41f55e:	xchg   edx,eax
  41f55f:	out    0x61,al
  41f561:	jle    0x41f5af
  41f563:	or     DWORD PTR [ebp+0x23c54551],edx
  41f569:	inc    edi
  41f56a:	loop   0x41f51a
  41f56c:	cli    
  41f56d:	and    eax,0xc712d63a
  41f572:	or     eax,0xb569b34f
  41f577:	mov    bh,BYTE PTR [esi]
  41f579:	or     ah,al
  41f57b:	mov    al,0xee
  41f57d:	scas   al,BYTE PTR es:[edi]
  41f57e:	pop    edi
  41f57f:	adc    ebx,ecx
  41f581:	adc    DWORD PTR [edi],eax
  41f583:	in     eax,0xf0
  41f585:	inc    esp
  41f586:	call   0xf468a844
  41f58b:	(bad)  
  41f58c:	xlat   BYTE PTR ds:[ebx]
  41f58d:	cmp    eax,edx
  41f58f:	jg     0x41f55a
  41f591:	mov    DWORD PTR [edi-0x189ae936],edi
  41f597:	dec    ecx
  41f598:	out    dx,al
  41f599:	ss int 0xcc
  41f59c:	pop    es
  41f59d:	enter  0xaa6b,0x57
  41f5a1:	cs out dx,eax
  41f5a3:	sub    edi,esi
  41f5a5:	xchg   ecx,eax
  41f5a6:	push   edx
  41f5a7:	mov    esp,0xcabb4527
  41f5ac:	pop    eax
  41f5ad:	sub    BYTE PTR [ecx],0x14
  41f5b0:	fcomip st,st(6)
  41f5b2:	jecxz  0x41f592
  41f5b4:	push   es
  41f5b5:	fidiv  WORD PTR [esi+0xd]
  41f5b8:	sub    ebp,ecx
  41f5ba:	das    
  41f5bb:	add    ah,BYTE PTR [ecx-0x53]
  41f5be:	pop    esp
  41f5bf:	xor    al,0x72
  41f5c1:	mov    cx,0x1a6a
  41f5c5:	xchg   edx,eax
  41f5c6:	push   ecx
  41f5c7:	jp     0x41f59d
  41f5c9:	or     esp,esi
  41f5cb:	mov    BYTE PTR [ebp-0x3b],dl
  41f5ce:	xor    al,0xe3
  41f5d0:	sbb    eax,0xba7fa986
  41f5d5:	adc    BYTE PTR [edx+0x3b139183],ah
  41f5db:	xor    BYTE PTR [eax-0x3826511a],bl
  41f5e1:	pop    esp
  41f5e2:	dec    ebx
  41f5e3:	(bad)  
  41f5e4:	out    dx,eax
  41f5e5:	loope  0x41f65b
  41f5e7:	pop    edi
  41f5e8:	xchg   ebx,eax
  41f5e9:	pop    edx
  41f5ea:	cld    
  41f5eb:	sbb    BYTE PTR [edx],bl
  41f5ed:	ror    DWORD PTR ds:0xf8b8676c,0xc0
  41f5f4:	cmp    esp,DWORD PTR [edi+eax*2+0x390fe3f0]
  41f5fb:	pop    ss
  41f5fc:	out    0xa,al
  41f5fe:	ins    BYTE PTR es:[edi],dx
  41f5ff:	gs (bad) 
  41f601:	jg     0x41f5c4
  41f603:	mov    esp,DWORD PTR [ecx]
  41f605:	mov    bh,0xee
  41f607:	dec    esp
  41f608:	leave  
  41f609:	out    dx,al
  41f60a:	xor    DWORD PTR [ecx+0xb],esp
  41f60d:	push   eax
  41f60e:	inc    ebp
  41f60f:	adc    eax,0x4b846edf
  41f614:	frstor [ecx-0x1c7d7016]
  41f61a:	jmp    0xfe5bfe
  41f61f:	data16 fs cmp al,0x64
  41f623:	inc    edx
  41f624:	sbb    eax,0x40474517
  41f629:	stc    
  41f62a:	lods   eax,DWORD PTR ds:[esi]
  41f62b:	pop    ecx
  41f62c:	adc    ch,BYTE PTR [edx-0x78d643a1]
  41f632:	in     al,dx
  41f633:	add    BYTE PTR [edi],0x53
  41f636:	and    eax,DWORD PTR [esi+0x19]
  41f639:	aaa    
  41f63a:	rol    DWORD PTR [edi+0x54],cl
  41f63d:	add    eax,0xe6f90633
  41f642:	and    edx,eax
  41f644:	in     al,dx
  41f645:	mov    ss,WORD PTR [eax-0x2c27a4a]
  41f64b:	sub    edx,DWORD PTR [edx-0x6f07f342]
  41f651:	in     al,dx
  41f652:	(bad)  
  41f653:	lea    ecx,[edx+0xf]
  41f656:	retf   
  41f657:	fidiv  WORD PTR ss:[edi+ecx*8-0x740e2018]
  41f65f:	neg    DWORD PTR [eax-0x21d1e8ee]
  41f665:	or     BYTE PTR [ebx+0x1ea96ec4],al
  41f66b:	cmc    
  41f66c:	mov    ebx,0x211b47a8
  41f671:	aad    0x1
  41f673:	imul   edx,DWORD PTR [esp+esi*8+0x11bf1223],0x75
  41f67b:	push   ebx
  41f67c:	mov    eax,ds:0x29ed378a
  41f681:	add    ebx,DWORD PTR [ebx]
  41f683:	mov    al,BYTE PTR [eax+0xf]
  41f686:	jo     0x41f6fd
  41f688:	call   0xc6f710e4
  41f68d:	mov    bh,0xcb
  41f68f:	sbb    ch,BYTE PTR [edi-0xe1e309a]
  41f695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f696:	popa   
  41f697:	jp     0x41f714
  41f699:	xlat   BYTE PTR ds:[ebx]
  41f69a:	inc    eax
  41f69b:	sbb    ebp,ecx
  41f69d:	xchg   ebp,eax
  41f69e:	ret    0xc08b
  41f6a1:	mov    esp,0xef393d72
  41f6a6:	jecxz  0x41f67b
  41f6a8:	fcmovnb st,st(2)
  41f6aa:	add    al,0x99
  41f6ac:	xor    ch,BYTE PTR [esi]
  41f6ae:	dec    eax
  41f6af:	(bad)  
  41f6b0:	fs nop
  41f6b2:	jmp    FWORD PTR [edx+0x7e3aa919]
  41f6b8:	mov    eax,ds:0x92d2bd38
  41f6bd:	ror    DWORD PTR [ecx-0x29],cl
  41f6c0:	cmp    DWORD PTR [esi+0x7b00fc0e],ecx
  41f6c6:	pop    es
  41f6c7:	outs   dx,BYTE PTR ds:[esi]
  41f6c8:	adc    BYTE PTR [edi-0x36592651],0xe1
  41f6cf:	lods   eax,DWORD PTR ds:[esi]
  41f6d0:	loopne 0x41f697
  41f6d2:	add    ebx,ebx
  41f6d4:	sub    bl,cl
  41f6d6:	mov    al,0xcb
  41f6d8:	inc    edi
  41f6d9:	dec    edx
  41f6da:	mov    ds:0x6cac9f59,eax
  41f6df:	iret   
  41f6e0:	dec    esp
  41f6e1:	adc    al,0xbe
  41f6e3:	jmp    0x4415:0x930f7687
  41f6ea:	out    0xf3,eax
  41f6ec:	or     cl,bh
  41f6ee:	les    ecx,FWORD PTR [esi+0x10d9e1e4]
  41f6f4:	ficomp DWORD PTR [ebp+0x63]
  41f6f7:	dec    edx
  41f6f8:	and    ch,BYTE PTR [edx+eax*1]
  41f6fb:	and    eax,0x6c44bd94
  41f700:	shr    BYTE PTR [esi+edi*1],1
  41f703:	pop    ecx
  41f704:	fucomip st,st(2)
  41f706:	(bad)
  41f709:	jmp    0x41f789
  41f70b:	not    cl
  41f70d:	mov    ebx,0x42466342
  41f712:	pop    edi
  41f713:	lahf   
  41f714:	sub    al,0x46
  41f716:	xor    edi,DWORD PTR [esi-0x4cb812f2]
  41f71c:	dec    ecx
  41f71d:	arpl   dx,bx
  41f71f:	dec    ebp
  41f720:	jecxz  0x41f6eb
  41f722:	out    0xb1,eax
  41f724:	sti    
  41f725:	and    DWORD PTR [ebp+0x30],ebx
  41f728:	daa    
  41f729:	ins    DWORD PTR es:[edi],dx
  41f72a:	hlt    
  41f72b:	mov    ds:0xbdd29447,al
  41f730:	jecxz  0x41f6d7
  41f732:	addr16 (bad) 
  41f735:	jg     0x41f748
  41f737:	fstp   QWORD PTR [edi]
  41f739:	(bad)  
  41f73a:	adc    DWORD PTR [ecx+0x40],esi
  41f73d:	sbb    ebx,ebx
  41f73f:	cmp    al,0xbf
  41f741:	adc    eax,0xebeaa1fa
  41f746:	dec    esp
  41f747:	lds    edx,FWORD PTR [eax-0x53aa7879]
  41f74d:	push   edx
  41f74e:	ins    DWORD PTR es:[edi],dx
  41f74f:	lods   eax,DWORD PTR ds:[esi]
  41f750:	les    eax,FWORD PTR [ebp+0x6a3df350]
  41f756:	pop    esi
  41f757:	gs xchg esi,eax
  41f759:	cmp    esp,DWORD PTR [esi]
  41f75b:	ja     0x41f771
  41f75d:	cld    
  41f75e:	pop    ds
  41f75f:	in     eax,0x43
  41f761:	and    eax,0x8a87c1aa
  41f766:	stos   DWORD PTR es:[edi],eax
  41f767:	mov    esi,0x6fb7d48e
  41f76c:	sbb    ch,ah
  41f76e:	cli    
  41f76f:	test   eax,0xe751150d
  41f774:	jb     0x41f74f
  41f776:	das    
  41f777:	push   gs
  41f779:	not    BYTE PTR [edx-0x11]
  41f77c:	into   
  41f77d:	imul   esp,DWORD PTR [edi+ebp*4],0x26
  41f781:	and    esi,DWORD PTR [eax+0x6a]
  41f784:	arpl   WORD PTR [edx],sp
  41f786:	rcr    DWORD PTR [esi+0x28],0x8
  41f78a:	pop    es
  41f78b:	in     eax,0xe5
  41f78d:	rcl    DWORD PTR [ebx],0xd6
  41f790:	jo     0x41f746
  41f792:	aas    
  41f793:	and    BYTE PTR [ebx-0x372694fb],0x30
  41f79a:	ins    DWORD PTR es:[edi],dx
  41f79b:	jle    0x41f80a
  41f79d:	lahf   
  41f79e:	sub    BYTE PTR [edx-0x4975d670],bl
  41f7a4:	mov    ch,0xbe
  41f7a6:	jbe    0x41f791
  41f7a8:	ret    
  41f7a9:	mov    eax,0xe03eab8a
  41f7ae:	xlat   BYTE PTR ds:[ebx]
  41f7af:	sbb    BYTE PTR [ecx],dh
  41f7b1:	add    ah,BYTE PTR [eax+ebp*2]
  41f7b4:	dec    eax
  41f7b5:	out    0x3b,eax
  41f7b7:	push   ebx
  41f7b8:	cli    
  41f7b9:	adc    ah,BYTE PTR [eax+0x2f03d2fb]
  41f7bf:	in     al,0xeb
  41f7c1:	jae    0x41f77d
  41f7c3:	shl    al,cl
  41f7c5:	push   ds
  41f7c6:	push   ebp
  41f7c7:	xor    DWORD PTR [esi-0x29],eax
  41f7ca:	and    al,0x91
  41f7cc:	mov    WORD PTR [eax-0x19],cs
  41f7cf:	mov    es,WORD PTR [edx-0x59ac09b3]
  41f7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d6:	jnp    0x41f789
  41f7d8:	shr    bl,0xe2
  41f7db:	fcom   DWORD PTR [ecx]
  41f7dd:	jo     0x41f814
  41f7df:	lock call 0xd3c3db21
  41f7e5:	and    bl,bl
  41f7e7:	les    edx,FWORD PTR [esi-0x40f4000e]
  41f7ed:	lods   al,BYTE PTR ds:[esi]
  41f7ee:	daa    
  41f7ef:	push   0xcb3acd9f
  41f7f4:	loope  0x41f82b
  41f7f6:	pop    es
  41f7f7:	clc    
  41f7f8:	ret    
  41f7f9:	xchg   BYTE PTR [ecx],ah
  41f7fb:	xor    ebx,DWORD PTR ds:[esi]
  41f7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ff:	pop    edi
  41f800:	call   0x1272c24b
  41f805:	imul   ebp,ebp,0xffffffeb
  41f808:	inc    ebx
  41f809:	int3   
  41f80a:	(bad)  
  41f80b:	in     eax,dx
  41f80c:	pop    ebx
  41f80d:	mov    esp,0xdcedf14
  41f812:	ja     0x41f800
  41f814:	hlt    
  41f815:	jnp    0x41f874
  41f817:	xor    bl,cl
  41f819:	adc    ebx,esi
  41f81b:	stc    
  41f81c:	gs mov al,0xbe
  41f81f:	mov    DWORD PTR [edi+0xc],edx
  41f822:	test   eax,0xea088ab5
  41f827:	test   DWORD PTR [esi+0x627b042f],0x45beb401
  41f831:	xchg   esi,eax
  41f832:	add    ebx,DWORD PTR ds:0xb4cef8e8
  41f838:	sti    
  41f839:	mov    edi,0x9385961b
  41f83e:	aam    0x73
  41f840:	mov    ebp,0x4222d120
  41f845:	ret    
  41f846:	int3   
  41f847:	scas   al,BYTE PTR es:[edi]
  41f848:	jmp    0xcb864e67
  41f84d:	push   edx
  41f84e:	pop    eax
  41f84f:	fdiv   st,st(1)
  41f851:	shl    ecx,0x10
  41f854:	sub    ah,ch
  41f856:	(bad)  
  41f857:	dec    ebx
  41f858:	gs repz inc edi
  41f85b:	mov    ecx,0x34d644b1
  41f860:	lds    eax,FWORD PTR [edi+ebp*4-0x1b]
  41f864:	pop    edx
  41f865:	add    BYTE PTR [edi-0x5b],al
  41f868:	mov    bl,0x1f
  41f86a:	sbb    ecx,ebx
  41f86c:	xadd   BYTE PTR [edx-0x16593d98],al
  41f873:	cmp    al,al
  41f875:	sahf   
  41f876:	and    dl,BYTE PTR ds:0xff11b053
  41f87c:	xchg   BYTE PTR [eax+0xc],ch
  41f87f:	es pop edi
  41f881:	nop
  41f882:	push   ebx
  41f883:	mov    ecx,0x7917b26c
  41f888:	sbb    bh,BYTE PTR ds:0x42f92344
  41f88e:	xchg   ebx,eax
  41f88f:	sub    al,0x6
  41f891:	or     al,0x81
  41f893:	das    
  41f894:	pop    ebp
  41f895:	xchg   BYTE PTR [ebp+0x51497e4f],dl
  41f89b:	jb     0x41f859
  41f89d:	test   al,0xb0
  41f89f:	cmc    
  41f8a0:	add    dh,ah
  41f8a2:	daa    
  41f8a3:	cmp    eax,0x965f22af
  41f8a8:	in     eax,dx
  41f8a9:	mov    esp,0xa83f5d4a
  41f8ae:	push   cs
  41f8af:	not    ch
  41f8b1:	ja     0x41f8ee
  41f8b3:	push   edx
  41f8b4:	out    0xfa,al
  41f8b6:	sub    BYTE PTR [ebp+0x3d],bh
  41f8b9:	fs loopne 0x41f86e
  41f8bc:	inc    esi
  41f8bd:	cmp    DWORD PTR [ebp+0x7a3b9ac6],0xffffffb2
  41f8c4:	jmp    0x41f92d
  41f8c6:	jne    0x41f8c1
  41f8c8:	sbb    BYTE PTR ds:0x52f43d58,dh
  41f8ce:	mov    ah,0xd3
  41f8d0:	ficom  DWORD PTR [ebp-0x9]
  41f8d3:	repnz dec ebp
  41f8d5:	iret   
  41f8d6:	pop    DWORD PTR [edx]
  41f8d8:	push   esp
  41f8d9:	mov    bl,BYTE PTR [ebp-0x79]
  41f8dc:	pop    ebp
  41f8dd:	fmul   QWORD PTR [edi+0x68]
  41f8e0:	jmp    FWORD PTR [esp+edx*2+0x56ccc54e]
  41f8e7:	jnp    0x41f8d1
  41f8e9:	mov    cl,0x5b
  41f8eb:	sbb    cl,ch
  41f8ed:	lods   eax,DWORD PTR ds:[esi]
  41f8ee:	fidivr DWORD PTR [ecx-0x7]
  41f8f1:	adc    eax,ebx
  41f8f3:	loopne 0x41f8e0
  41f8f5:	cmp    al,0xc7
  41f8f7:	imul   edx,DWORD PTR [esi+0x4777daba],0xffffff8e
  41f8fe:	loope  0x41f935
  41f900:	jae    0x41f898
  41f902:	mov    cl,0x23
  41f904:	pop    esi
  41f905:	or     ah,BYTE PTR [edi-0x3a]
  41f908:	iret   
  41f909:	dec    ebp
  41f90a:	add    DWORD PTR [ebx],edx
  41f90c:	xchg   bh,cl
  41f90e:	jmp    0x38ec8e8b
  41f913:	xchg   DWORD PTR [ecx+0x53],edi
  41f916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f917:	sub    esp,edi
  41f919:	bound  ebp,QWORD PTR [edi-0x53cdfae4]
  41f91f:	jne    0x41f938
  41f921:	sbb    ch,BYTE PTR [ebx]
  41f923:	or     BYTE PTR [ebx*2+0x28a62cc6],al
  41f92a:	dec    BYTE PTR [edi+0x78]
  41f92d:	jecxz  0x41f996
  41f92f:	(bad)  
  41f930:	push   edi
  41f931:	test   BYTE PTR [edi],dl
  41f933:	mov    dl,0x3b
  41f935:	jb     0x41f8f5
  41f937:	sub    ah,BYTE PTR [esi-0x41]
  41f93a:	jns    0x41f9a3
  41f93c:	pop    esi
  41f93d:	fild   WORD PTR [edi-0x6]
  41f940:	jle    0x41f91f
  41f942:	lods   eax,DWORD PTR ds:[esi]
  41f943:	loopne 0x41f95d
  41f945:	clc    
  41f946:	lods   al,BYTE PTR ds:[esi]
  41f947:	push   ds
  41f948:	out    0x44,al
  41f94a:	push   edi
  41f94b:	dec    ebx
  41f94c:	aas    
  41f94d:	fucomi st,st(3)
  41f94f:	jle    0x41f97e
  41f951:	out    0x88,al
  41f953:	or     BYTE PTR [ecx+0x267982a8],dh
  41f959:	scas   al,BYTE PTR es:[edi]
  41f95a:	push   eax
  41f95b:	cwde   
  41f95c:	lahf   
  41f95d:	(bad)  
  41f95e:	scas   al,BYTE PTR es:[edi]
  41f95f:	inc    edi
  41f960:	mov    bh,BYTE PTR [ebp+0x4fcb498]
  41f966:	push   ecx
  41f967:	lock inc eax
  41f969:	mov    dh,0xc5
  41f96b:	lds    ebx,FWORD PTR [esi-0x2260b6e2]
  41f971:	inc    edx
  41f972:	pushf  
  41f973:	mov    WORD PTR [edx],ss
  41f975:	push   ebx
  41f976:	mov    esp,0xcbde0d35
  41f97b:	repz iret 
  41f97d:	aaa    
  41f97e:	ds jb  0x41f92b
  41f981:	div    BYTE PTR [eax]
  41f983:	sub    edi,ecx
  41f985:	shl    DWORD PTR [ecx-0x3d517d70],0xc0
  41f98c:	pop    ecx
  41f98d:	data16 adc al,BYTE PTR cs:0x26139623
  41f995:	mov    ebp,DWORD PTR [edx+0x2055be82]
  41f99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f99c:	mov    ds:0x51aac246,eax
  41f9a1:	mov    eax,0xa0f28df4
  41f9a6:	push   cs
  41f9a7:	div    BYTE PTR [eax]
  41f9a9:	sub    al,0xe9
  41f9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ac:	mov    DWORD PTR [edx-0x7c],ecx
  41f9af:	out    dx,al
  41f9b0:	enter  0x2fd0,0x48
  41f9b4:	xchg   DWORD PTR [esi-0x17],ebx
  41f9b7:	not    DWORD PTR [edx]
  41f9b9:	pop    ebx
  41f9ba:	lods   al,BYTE PTR ds:[esi]
  41f9bb:	call   0xd1e4dbc
  41f9c0:	stc    
  41f9c1:	cld    
  41f9c2:	add    DWORD PTR [ebp+0x5d],eax
  41f9c5:	cmp    ecx,DWORD PTR [edx-0x53398cf9]
  41f9cb:	out    dx,eax
  41f9cc:	cld    
  41f9cd:	in     eax,0x8a
  41f9cf:	sbb    edx,DWORD PTR [edi-0x2b]
  41f9d2:	push   es
  41f9d3:	cmp    al,0xca
  41f9d5:	call   0xb9a51166
  41f9da:	push   esi
  41f9db:	jle    0x41f99f
  41f9dd:	clc    
  41f9de:	repnz popf 
  41f9e0:	xchg   BYTE PTR ds:0x665ffb39,dh
  41f9e6:	jae    0x41fa0b
  41f9e8:	pop    ds
  41f9e9:	xor    al,0x6
  41f9eb:	cdq    
  41f9ec:	inc    edi
  41f9ed:	scas   al,BYTE PTR es:[edi]
  41f9ee:	adc    BYTE PTR [esi-0x2c766f3e],0xcb
  41f9f5:	rol    BYTE PTR [ecx+0x652305f8],0x50
  41f9fc:	pop    ecx
  41f9fd:	imul   ebx,DWORD PTR [ecx-0x30],0xfffffff6
  41fa01:	and    al,0xdc
  41fa03:	ins    BYTE PTR es:[edi],dx
  41fa04:	fwait
  41fa05:	or     BYTE PTR [edi],cl
  41fa07:	and    ah,BYTE PTR [esi+0x1107caa2]
  41fa0d:	stc    
  41fa0e:	adc    ah,dh
  41fa10:	cli    
  41fa11:	push   cs
  41fa12:	add    DWORD PTR ds:0x307c5ab3,eax
  41fa18:	js     0x41f9f4
  41fa1a:	mov    al,ds:0x11f37f0d
  41fa1f:	xchg   DWORD PTR [eax-0x517c3328],edx
  41fa25:	(bad)  
  41fa26:	push   cs
  41fa27:	das    
  41fa28:	shr    DWORD PTR [edx-0x147c244],cl
  41fa2e:	ja     0x41f9ed
  41fa30:	and    BYTE PTR [ebx-0x408164f9],0xe7
  41fa37:	bound  edx,QWORD PTR [ebx-0x778d9a25]
  41fa3d:	dec    esi
  41fa3e:	into   
  41fa3f:	cdq    
  41fa40:	pop    esp
  41fa41:	sbb    DWORD PTR ds:0xecc839a4,eax
  41fa47:	jg     0x41fa1e
  41fa49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa4a:	cli    
  41fa4b:	jmp    0xcc13d04b
  41fa50:	inc    ebx
  41fa51:	xchg   esp,eax
  41fa52:	retf   0x8ac7
  41fa55:	hlt    
  41fa56:	or     BYTE PTR [esi+0x60fab13f],al
  41fa5c:	cmp    al,0x53
  41fa5e:	mov    eax,ds:0x48ebac99
  41fa63:	shl    BYTE PTR [ecx],0xf9
  41fa66:	xor    DWORD PTR [edx-0x5bf0daf8],ecx
  41fa6c:	jne    0x41fa66
  41fa6e:	inc    edi
  41fa6f:	pop    esp
  41fa70:	or     al,0x72
  41fa72:	push   ss
  41fa73:	into   
  41fa74:	fucomip st,st(7)
  41fa76:	mov    ch,BYTE PTR [ebp+0x546d2196]
  41fa7c:	aaa    
  41fa7d:	ins    DWORD PTR es:[edi],dx
  41fa7e:	push   0x52643a99
  41fa83:	nop
  41fa84:	es aam 0x61
  41fa87:	push   0xe3b37b5a
  41fa8c:	std    
  41fa8d:	repz xor BYTE PTR [edx],al
  41fa90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa91:	or     al,0x33
  41fa93:	xor    BYTE PTR [ebp+0x460f51d7],cl
  41fa99:	sub    bh,BYTE PTR [edi+ebx*8+0x14a2ea47]
  41faa0:	retf   0x8eeb
  41faa3:	jg     0x41fa6e
  41faa5:	sub    esp,DWORD PTR ds:[ebx-0x228d2f82]
  41faac:	ins    DWORD PTR es:[edi],dx
  41faad:	fwait
  41faae:	pop    ss
  41faaf:	sub    bl,bl
  41fab1:	repnz and DWORD PTR [ecx+eiz*8-0x19],eax
  41fab6:	dec    ebp
  41fab7:	xchg   ebp,eax
  41fab8:	call   0xa42dca99
  41fabd:	cmp    ebp,DWORD PTR [edi-0xc]
  41fac0:	sub    eax,0xcbea32bd
  41fac5:	cmp    ebp,DWORD PTR es:[eax-0x6e727fe2]
  41facc:	and    al,0xce
  41face:	aas    
  41facf:	call   FWORD PTR [ebx+ebp*2]
  41fad2:	addr16 icebp 
  41fad4:	imul   esp,esp,0xffffffac
  41fad7:	pop    ebp
  41fad8:	mov    ebx,ebx
  41fada:	mov    dh,0x9d
  41fadc:	inc    esi
  41fadd:	sbb    bh,BYTE PTR [esi-0x4]
  41fae0:	je     0x41fb00
  41fae2:	mov    al,0xbc
  41fae4:	adc    BYTE PTR [edx-0x5f2c5e1a],al
  41faea:	mov    edi,0xcf9b7519
  41faef:	imul   edx,edx,0xffffffe1
  41faf2:	popa   
  41faf3:	push   ebp
  41faf4:	into   
  41faf5:	int3   
  41faf6:	mov    bh,0x98
  41faf8:	inc    ebp
  41faf9:	xchg   ecx,eax
  41fafa:	pop    ebx
  41fafb:	mov    WORD PTR [ebx],?
  41fafd:	push   0x8a9b1458
  41fb02:	aaa    
  41fb03:	add    DWORD PTR [ecx-0xafb4aa3],0xbc7500ce
  41fb0d:	sbb    edi,DWORD PTR [esi+edi*8+0x63ba4ee5]
  41fb14:	dec    ebx
  41fb15:	sbb    esp,ebx
  41fb17:	push   ss
  41fb18:	or     eax,0xe331011d
  41fb1d:	push   edi
  41fb1e:	pushf  
  41fb1f:	xor    ecx,DWORD PTR [edx-0x2b]
  41fb22:	lock (bad) 
  41fb24:	dec    esi
  41fb25:	lea    edi,[ebx-0x30]
  41fb28:	dec    edi
  41fb29:	ins    BYTE PTR es:[edi],dx
  41fb2a:	in     al,0xbc
  41fb2c:	xor    cl,BYTE PTR [ebx-0x62772026]
  41fb32:	mov    ch,0xcf
  41fb34:	push   es
  41fb35:	push   0x49e28128
  41fb3a:	cwde   
  41fb3b:	frstor [edi+ecx*4-0x51]
  41fb3f:	popf   
  41fb40:	push   eax
  41fb41:	dec    edi
  41fb42:	jmp    0x603cba00
  41fb47:	lea    esp,[eax]
  41fb49:	add    al,0xb4
  41fb4b:	addr16 mov eax,ds:0x7c85
  41fb4f:	mov    ch,0x14
  41fb51:	call   0xaba0:0x8b0b0524
  41fb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb59:	shl    DWORD PTR [esi-0x432a6bdc],1
  41fb5f:	popa   
  41fb60:	mov    ebp,0xb033d483
  41fb65:	fstp   TBYTE PTR [esi+0x1a33387b]
  41fb6b:	loope  0x41fb27
  41fb6d:	jle    0x41fb8a
  41fb6f:	adc    al,0xd6
  41fb71:	enter  0x4e9,0x10
  41fb75:	mov    cl,0xa7
  41fb77:	jae    0x41fb21
  41fb79:	out    0x62,al
  41fb7b:	adc    DWORD PTR [edi],0xffffffff
  41fb7e:	dec    eax
  41fb7f:	rcr    BYTE PTR [eax+0x2b83d9a6],0x4e
  41fb86:	js     0x41fbad
  41fb88:	xor    BYTE PTR ss:[edi-0x35],al
  41fb8c:	das    
  41fb8d:	and    eax,0x6d3a046
  41fb92:	jne    0x41fbc4
  41fb94:	dec    edx
  41fb95:	pop    edi
  41fb96:	fcom   DWORD PTR [ecx+0x5c]
  41fb99:	pop    esi
  41fb9a:	repz retf 0x6d6b
  41fb9e:	in     eax,dx
  41fb9f:	nop
  41fba0:	mov    esp,0x4ed9a39
  41fba5:	sbb    al,0x10
  41fba7:	jg     0x41fb93
  41fba9:	lds    eax,FWORD PTR [edi]
  41fbab:	test   eax,0xe445c9cb
  41fbb0:	popf   
  41fbb1:	push   ecx
  41fbb2:	push   ecx
  41fbb3:	sbb    bl,0x35
  41fbb6:	(bad)  
  41fbb7:	pop    edi
  41fbb8:	xchg   ecx,eax
  41fbb9:	ss pushf 
  41fbbb:	xchg   esi,eax
  41fbbc:	dec    ebx
  41fbbd:	int    0xf9
  41fbbf:	pop    edx
  41fbc0:	pop    ebx
  41fbc1:	adc    eax,0xc83e65a0
  41fbc6:	retf   
  41fbc7:	ret    0xd378
  41fbca:	push   edi
  41fbcb:	inc    ebx
  41fbcc:	loope  0x41fc14
  41fbce:	shl    BYTE PTR [bp+di-0x61],cl
  41fbd2:	jmp    0x41fc51
  41fbd4:	fist   DWORD PTR [ecx-0x7766473d]
  41fbda:	pusha  
  41fbdb:	pop    ebx
  41fbdc:	(bad)  
  41fbdd:	mov    esi,0xc515b1ac
  41fbe2:	mov    bh,0xdd
  41fbe4:	fst    DWORD PTR [ebx+0x0]
  41fbe7:	xor    eax,0x685ab399
  41fbec:	stc    
  41fbed:	mov    esp,0x63f697a8
  41fbf2:	icebp  
  41fbf3:	bound  ecx,QWORD PTR [ecx+0x3fb3c39f]
  41fbf9:	push   esp
  41fbfa:	jg     0x41fc11
  41fbfc:	or     DWORD PTR [edi-0x17],ebx
  41fbff:	loop   0x41fc47
  41fc01:	xor    eax,0x298e7880
  41fc06:	sub    dh,BYTE PTR [ecx+0x26]
  41fc09:	xor    BYTE PTR [eax-0x16452eb4],bh
  41fc0f:	mov    al,ds:0x12125527
  41fc14:	adc    bh,BYTE PTR [esi]
  41fc16:	rol    al,1
  41fc18:	or     eax,0xa9ffebda
  41fc1d:	ror    DWORD PTR [edi-0x4e],0xf6
  41fc21:	(bad)  
  41fc23:	mov    ds:0x53393e34,al
  41fc28:	adc    al,0xda
  41fc2a:	popf   
  41fc2b:	push   esi
  41fc2c:	jge    0x41fbeb
  41fc2e:	adc    al,0x60
  41fc30:	(bad)  
  41fc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc32:	pop    ebx
  41fc33:	call   0xaf1650f1
  41fc38:	cdq    
  41fc39:	jbe    0x41fc92
  41fc3b:	or     DWORD PTR [ebp-0x7792205f],edi
  41fc41:	lods   eax,DWORD PTR ds:[esi]
  41fc42:	mov    edx,0x47f97e6
  41fc47:	cs data16 stos BYTE PTR es:[edi],al
  41fc4a:	xchg   DWORD PTR [edi+0x79],esp
  41fc4d:	pushf  
  41fc4e:	sub    DWORD PTR [esi+0x2f],0x60
  41fc52:	je     0x41fc64
  41fc54:	mov    ch,0x2e
  41fc56:	fwait
  41fc57:	sbb    ah,cl
  41fc59:	jns    0x41fc23
  41fc5b:	pop    ecx
  41fc5c:	outs   dx,BYTE PTR ds:[esi]
  41fc5d:	daa    
  41fc5e:	cmp    eax,0x22b32854
  41fc63:	and    BYTE PTR [eax+eax*4],0xe1
  41fc67:	je     0x41fc53
  41fc69:	xor    al,0x44
  41fc6b:	and    cl,BYTE PTR [ecx+0x5d]
  41fc6e:	clc    
  41fc6f:	push   es
  41fc70:	hlt    
  41fc71:	or     eax,0x3e4c1fa3
  41fc76:	mov    ?,WORD PTR [edi-0x3e885f24]
  41fc7c:	cs mov ebp,0xbb933e64
  41fc82:	aam    0xb3
  41fc84:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41fc86:	(bad)  
  41fc87:	or     ebp,DWORD PTR [eax]
  41fc89:	pop    ebx
  41fc8a:	popfw  
  41fc8c:	mov    bl,0x83
  41fc8e:	lods   al,BYTE PTR ds:[esi]
  41fc8f:	push   eax
  41fc90:	and    edx,DWORD PTR [edx+0x2f26a6d8]
  41fc96:	lahf   
  41fc97:	pop    ds
  41fc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc99:	cld    
  41fc9a:	in     eax,dx
  41fc9b:	cmp    ecx,DWORD PTR [edx+0x68]
  41fc9e:	xchg   edi,eax
  41fc9f:	(bad)  
  41fca0:	into   
  41fca1:	(bad)  
  41fca2:	pusha  
  41fca3:	sub    DWORD PTR [eax-0x5b9b5e20],esp
  41fca9:	fsubr  DWORD PTR [ebp+0x7b]
  41fcac:	out    dx,eax
  41fcad:	sbb    DWORD PTR [edi],0x61ced3a7
  41fcb3:	jmp    0x702a:0x2b0c8f3c
  41fcba:	xor    DWORD PTR [esi-0x5c922db3],ebx
  41fcc0:	mov    esi,0x265cadeb
  41fcc5:	fsubp  st(5),st
  41fcc7:	xchg   ecx,eax
  41fcc8:	jne    0x41fcb8
  41fcca:	addr16 xchg edi,eax
  41fccc:	mov    BYTE PTR [edi+0x24],dl
  41fccf:	ins    BYTE PTR es:[edi],dx
  41fcd0:	sahf   
  41fcd1:	mov    dh,0xae
  41fcd3:	mov    WORD PTR [edx+eax*8+0x34],fs
  41fcd7:	sub    eax,0xe4db76d
  41fcdc:	cmp    BYTE PTR [ecx+0x23],al
  41fcdf:	adc    eax,eax
  41fce1:	jae    0x41fcba
  41fce3:	push   es
  41fce4:	rcr    DWORD PTR ss:[ebx],1
  41fce7:	(bad)  
  41fce8:	mov    esp,0xb0d157ca
  41fced:	clc    
  41fcee:	into   
  41fcef:	xor    dh,BYTE PTR [esi-0x55]
  41fcf2:	dec    edi
  41fcf3:	scas   eax,DWORD PTR es:[edi]
  41fcf4:	jo     0x41fd4e
  41fcf6:	pop    ebp
  41fcf7:	iret   
  41fcf8:	pop    edx
  41fcf9:	retf   
  41fcfa:	mov    dh,0xf2
  41fcfc:	bound  ebx,QWORD PTR [edi]
  41fcfe:	les    esi,FWORD PTR [ebp+0x74b0b031]
  41fd04:	xchg   BYTE PTR [ecx+0x3d],bh
  41fd07:	sub    dl,ch
  41fd09:	mov    esp,0x1eb578e9
  41fd0e:	mov    ds:0xb5526dc7,al
  41fd13:	jno    0x41fcf6
  41fd15:	lock enter 0x1f10,0x6a
  41fd1a:	sbb    al,ah
  41fd1c:	aam    0xa3
  41fd1e:	inc    esp
  41fd1f:	add    eax,0xc197e2d1
  41fd24:	xor    eax,DWORD PTR [esi]
  41fd26:	jo     0x41fcaf
  41fd28:	mov    ebx,0x6d4ee03
  41fd2d:	int    0x7a
  41fd2f:	ret    
  41fd30:	jg     0x41fd79
  41fd32:	pushf  
  41fd33:	lock sti 
  41fd35:	and    ah,BYTE PTR [ebx-0x7d]
  41fd38:	les    edx,FWORD PTR [eax+0x75]
  41fd3b:	sub    BYTE PTR [esi-0x5f749f3],cl
  41fd41:	(bad)  
  41fd42:	pop    esi
  41fd43:	sub    esp,DWORD PTR [ebx+0x5f]
  41fd46:	call   0x8a18:0x1a3674c0
  41fd4d:	pusha  
  41fd4e:	and    bh,BYTE PTR [ecx+edx*8+0x504415c8]
  41fd55:	xlat   BYTE PTR ds:[ebx]
  41fd56:	cmp    BYTE PTR ds:0x9edf2e9e,ch
  41fd5c:	hlt    
  41fd5d:	ret    0x4f41
  41fd60:	add    al,0xbe
  41fd62:	test   BYTE PTR [edx+0x16],dh
  41fd65:	jecxz  0x41fda8
  41fd67:	rcl    DWORD PTR [esi+0x7e],1
  41fd6a:	or     BYTE PTR [edx],al
  41fd6c:	es push eax
  41fd6e:	idiv   bh
  41fd70:	push   ebp
  41fd71:	setge  BYTE PTR [ebx-0x23]
  41fd75:	(bad)  
  41fd76:	(bad)  
  41fd77:	movntq (bad),mm6
  41fd78:	out    0xf6,eax
  41fd7a:	js     0x41fd1c
  41fd7c:	fwait
  41fd7d:	xchg   ecx,eax
  41fd7e:	ds int 0x51
  41fd81:	cmp    eax,0x126f9dd2
  41fd86:	pop    esi
  41fd87:	adc    DWORD PTR [esi+0x10],edx
  41fd8a:	sbb    al,0xe7
  41fd8c:	push   es
  41fd8d:	and    ecx,DWORD PTR [ecx]
  41fd8f:	addr16 (bad) 
  41fd91:	jns    0x41fd83
  41fd93:	and    DWORD PTR [ecx-0x6ec36984],ebp
  41fd99:	mov    edi,0xaf173312
  41fd9e:	mov    ebp,0x938c034d
  41fda3:	mov    dl,0x11
  41fda5:	add    DWORD PTR [ebx+eax*8-0x33316690],ecx
  41fdac:	pop    ds
  41fdad:	sbb    bl,BYTE PTR [edi+0x1f]
  41fdb0:	adc    dh,BYTE PTR [edi]
  41fdb2:	mov    ch,0xc
  41fdb4:	cmp    BYTE PTR [ebx-0x7b4d9808],ah
  41fdba:	push   edx
  41fdbb:	mov    ch,0xc4
  41fdbd:	loopne 0x41fd7e
  41fdbf:	cmp    al,0x27
  41fdc1:	inc    edx
  41fdc2:	adc    ebp,ebp
  41fdc4:	cmp    DWORD PTR [ebx-0x10],ebx
  41fdc7:	retf   0xdf99
  41fdca:	imul   esp,ebp,0x2e88e74d
  41fdd0:	and    edi,DWORD PTR [esi]
  41fdd2:	sbb    ebp,esi
  41fdd4:	pop    ecx
  41fdd5:	repnz mov cl,0x5b
  41fdd8:	out    0x78,eax
  41fdda:	imul   edx,DWORD PTR [eax],0x993e9df2
  41fde0:	outs   dx,DWORD PTR ds:[esi]
  41fde1:	in     eax,dx
  41fde2:	sub    BYTE PTR [eax+edx*1+0x6a6c37a6],ah
  41fde9:	jns    0x41fdb8
  41fdeb:	and    eax,0x5a25b2d4
  41fdf0:	dec    ebx
  41fdf1:	imul   ebp,DWORD PTR [edx+0x599412f],0x12
  41fdf8:	lods   eax,DWORD PTR ds:[esi]
  41fdf9:	push   0xffffffa0
  41fdfb:	jns    0x41fe7c
  41fdfd:	pop    eax
  41fdfe:	mov    ebp,0x9eaf52ff
  41fe03:	stos   DWORD PTR es:[edi],eax
  41fe04:	mov    ch,0xef
  41fe06:	pop    ecx
  41fe07:	xor    eax,0x31911b22
  41fe0c:	iret   
  41fe0d:	inc    ebp
  41fe0e:	push   0x9972d5bf
  41fe13:	rol    DWORD PTR [ecx],cl
  41fe15:	add    dl,bh
  41fe17:	mov    bl,0x43
  41fe19:	sbb    al,0x5e
  41fe1b:	or     BYTE PTR [ebp-0x1ab54fa5],ch
  41fe21:	out    dx,al
  41fe22:	mov    ebp,0x79eb1a03
  41fe27:	inc    esi
  41fe28:	push   ss
  41fe29:	cdq    
  41fe2a:	ja     0x41fe97
  41fe2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2d:	test   eax,0x346e5b2a
  41fe32:	add    DWORD PTR ds:[esi],esi
  41fe35:	test   eax,0xf1548819
  41fe3a:	push   eax
  41fe3b:	ret    0xcd34
  41fe3e:	mov    ah,0x1f
  41fe40:	or     dl,al
  41fe42:	mov    dh,0x7f
  41fe44:	outs   dx,DWORD PTR ds:[esi]
  41fe45:	ficomp WORD PTR ds:0xf0167303
  41fe4b:	(bad)  
  41fe4c:	lds    edi,FWORD PTR ds:0x83f7d6ff
  41fe52:	leave  
  41fe53:	sti    
  41fe54:	jmp    0x41fe85
  41fe56:	xchg   ebp,eax
  41fe57:	cmp    BYTE PTR [edi*2+0x39999517],bl
  41fe5e:	mov    ah,0x11
  41fe60:	arpl   WORD PTR [ebp-0x24],sp
  41fe63:	xor    ch,bl
  41fe65:	inc    eax
  41fe66:	xor    bl,dh
  41fe68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe69:	push   cs
  41fe6a:	(bad)  [ebp+0x72]
  41fe6d:	loop   0x41fea0
  41fe6f:	retf   
  41fe70:	js     0x41fe1b
  41fe72:	jmp    0x3f0c93d2
  41fe77:	jmp    0x9de:0xed40fad9
  41fe7e:	mov    esp,0x4e23fb29
  41fe83:	(bad)  
  41fe84:	jae    0x41ff00
  41fe86:	mov    ds:0xe6f4f102,al
  41fe8b:	mov    edx,0x3ad2b8ed
  41fe90:	add    DWORD PTR [ebp-0x68],ebx
  41fe93:	sub    ecx,ebx
  41fe95:	hlt    
  41fe96:	mov    esp,0xe874de36
  41fe9b:	(bad)  
  41fe9d:	mov    ah,0x1b
  41fe9f:	mov    ah,0x50
  41fea1:	xor    bh,dh
  41fea3:	test   esp,edi
  41fea5:	shl    ah,1
  41fea7:	cmp    DWORD PTR [edx+0x43d2c5f4],0xffffffda
  41feae:	std    
  41feaf:	or     eax,0xf5afef84
  41feb4:	fisttp DWORD PTR [esi-0x6c]
  41feb7:	dec    edi
  41feb8:	call   0x4bb5512b
  41febd:	push   ebx
  41febe:	outs   dx,BYTE PTR ds:[esi]
  41febf:	mov    ds:0x41307167,al
  41fec4:	mov    eax,0x455dab6f
  41fec9:	or     dh,BYTE PTR [edi-0x4d]
  41fecc:	mov    ebp,0x6ec36551
  41fed1:	dec    esp
  41fed2:	xchg   esi,eax
  41fed3:	pop    edx
  41fed4:	sbb    eax,0x15782cf9
  41fed9:	es sar dh,0xb1
  41fedd:	dec    esi
  41fede:	lds    ebp,FWORD PTR [edi+0x2b]
  41fee1:	jne    0x41fe95
  41fee3:	int3   
  41fee4:	pop    ss
  41fee5:	shl    BYTE PTR [ebx],0x42
  41fee8:	xor    ch,0xe5
  41feeb:	jmp    0x51f4f603
  41fef0:	and    eax,0x3523dd7
  41fef5:	or     eax,0xc7e99587
  41fefa:	icebp  
  41fefb:	mov    cl,0xff
  41fefd:	jo     0x41ff2b
  41feff:	cmp    BYTE PTR [ecx-0x30],dh
  41ff02:	jb     0x41ff0c
  41ff04:	fs mov dl,0x35
  41ff07:	mov    bh,0x8b
  41ff09:	inc    eax
  41ff0a:	inc    edx
  41ff0b:	repz xor eax,0x880dc7
  41ff11:	sbb    DWORD PTR [esi+ebp*4-0x2ec0996c],0xd84f7730
  41ff1c:	fist   WORD PTR [ebp+edx*1-0x7]
  41ff20:	push   ebp
  41ff21:	loope  0x41ff28
  41ff23:	add    eax,0x438972ed
  41ff28:	fimul  DWORD PTR [eax]
  41ff2a:	lods   eax,DWORD PTR ds:[esi]
  41ff2b:	push   es
  41ff2c:	pop    eax
  41ff2d:	xor    ah,BYTE PTR [ebp+0x5b0a671a]
  41ff33:	xor    cl,BYTE PTR [eax]
  41ff35:	enter  0xe49e,0x95
  41ff39:	xchg   BYTE PTR [ecx+eax*1-0x3d],ah
  41ff3d:	out    0x2e,eax
  41ff3f:	ds rcl esi,1
  41ff42:	test   DWORD PTR [edi+0x6d659f25],0x8c28b22d
  41ff4c:	pop    edx
  41ff4d:	js     0x41ffc8
  41ff4f:	and    edx,DWORD PTR [ecx+0x11]
  41ff52:	leave  
  41ff53:	pop    ecx
  41ff54:	push   ds
  41ff55:	add    edi,ebp
  41ff57:	or     DWORD PTR [edi],edi
  41ff59:	retf   
  41ff5a:	mov    WORD PTR [esi*8+0x2c3e0b9f],es
  41ff61:	push   ecx
  41ff62:	daa    
  41ff63:	adc    edi,eax
  41ff65:	inc    esi
  41ff66:	rcr    dl,1
  41ff68:	xor    al,0xc3
  41ff6a:	push   0xffffffa7
  41ff6c:	and    BYTE PTR [eax],ah
  41ff6e:	add    bh,BYTE PTR ss:[edx-0x37]
  41ff72:	mov    ah,0x6b
  41ff74:	js     0x41ffac
  41ff76:	and    DWORD PTR [esi-0x79],ebp
  41ff79:	mov    ch,0xd9
  41ff7b:	xchg   esp,eax
  41ff7c:	dec    esp
  41ff7d:	mov    ecx,0x365fd09c
  41ff82:	aaa    
  41ff83:	daa    
  41ff84:	adc    edi,ecx
  41ff86:	sbb    eax,0x87a9514c
  41ff8b:	xchg   edx,eax
  41ff8c:	imul   eax,edx,0x61
  41ff8f:	add    DWORD PTR [edi],esi
  41ff91:	repnz push ebx
  41ff93:	test   esp,edx
  41ff95:	xor    DWORD PTR ss:[edi+0x3d],0x43acebfb
  41ff9d:	(bad)  
  41ff9f:	aaa    
  41ffa0:	push   es
  41ffa1:	fwait
  41ffa2:	adc    edi,esp
  41ffa4:	aad    0x97
  41ffa6:	pop    esi
  41ffa7:	dec    edi
  41ffa8:	jle    0x41ffe0
  41ffaa:	mov    bl,0xd4
  41ffac:	push   esi
  41ffad:	jecxz  0x41ff31
  41ffaf:	mov    ebx,0xb86f407c
  41ffb4:	dec    ebp
  41ffb5:	jo     0x41ffbb
  41ffb7:	dec    ebx
  41ffb8:	jns    0x41ff68
  41ffba:	aas    
  41ffbb:	ficomp WORD PTR [ebx-0x235dd87c]
  41ffc1:	xchg   esi,eax
  41ffc2:	imul   ebx,DWORD PTR [ebp+0x5c],0xffffffd4
  41ffc6:	mov    bl,cl
  41ffc8:	adc    dh,BYTE PTR [esi+0x57]
  41ffcb:	test   DWORD PTR [eax+ebp*2],esi
  41ffce:	arpl   WORD PTR [edx-0x1c99d4a0],bp
  41ffd4:	clc    
  41ffd5:	push   edi
  41ffd6:	mov    cl,0x47
  41ffd8:	jbe    0x41ffcc
  41ffda:	jns    0x41ff87
  41ffdc:	cmc    
  41ffdd:	or     dl,BYTE PTR [esi+eiz*8]
  41ffe0:	in     eax,dx
  41ffe1:	mov    bh,0xd0
  41ffe3:	mov    edi,ss
  41ffe5:	xor    DWORD PTR [edi-0x56c187f2],ebx
  41ffeb:	lea    ebx,[ebx]
  41ffed:	sbb    BYTE PTR [edi-0x15],dl
  41fff0:	(bad)  
  41fff1:	cmp    edx,DWORD PTR [esi]
  41fff3:	mov    cl,0xe3
  41fff5:	mov    ch,dh
  41fff7:	xor    esi,DWORD PTR [eax-0x38390a64]
  41fffd:	retf   
  41fffe:	mov    bh,0xd6
  420000:	mov    ds:0xf5a3c2bb,eax
  420005:	icebp  
  420006:	aam    0xf8
  420008:	ret    0xc3e8
  42000b:	aas    
  42000c:	jecxz  0x420052
  42000e:	sbb    DWORD PTR [eax-0x6d],0x413a43c3
  420015:	mov    esi,0x2bb39d49
  42001a:	in     eax,dx
  42001b:	adc    esi,eax
  42001d:	fild   WORD PTR [ebp-0x4]
  420020:	lds    esi,FWORD PTR [eax+0x4269b37]
  420026:	ins    BYTE PTR es:[edi],dx
  420027:	jns    0x41ffe0
  420029:	(bad)  
  42002a:	nop
  42002b:	mov    dh,0x7e
  42002d:	outs   dx,DWORD PTR ds:[esi]
  42002e:	dec    esp
  42002f:	mov    cl,0x57
  420032:	test   al,0x66
  420034:	or     eax,0xddd9fb18
  420039:	xor    al,0x43
  42003b:	jae    0x420099
  42003d:	mov    cl,0x9b
  42003f:	inc    eax
  420040:	dec    esi
  420041:	call   0x6234ff7b
  420046:	aaa    
  420047:	leave  
  420048:	ss add bh,dl
  42004b:	test   al,0xa0
  42004d:	lods   eax,DWORD PTR ds:[esi]
  42004e:	ins    BYTE PTR es:[edi],dx
  42004f:	std    
  420050:	fstp   QWORD PTR [esp+ecx*8-0x22]
  420054:	or     dl,BYTE PTR [ecx+0x39]
  420057:	ins    DWORD PTR es:[edi],dx
  420058:	jecxz  0x41fffc
  42005a:	(bad)  
  42005b:	mov    dl,0x55
  42005d:	cmp    ebx,DWORD PTR [ecx+0x64]
  420060:	outs   dx,DWORD PTR ds:[esi]
  420061:	iret   
  420062:	(bad)  
  420063:	cdq    
  420064:	push   ebx
  420065:	fistp  WORD PTR [bp+si]
  420068:	jecxz  0x4200a0
  42006a:	gs das 
  42006c:	(bad)  
  42006d:	stc    
  42006e:	mov    al,0x8c
  420070:	xchg   esi,eax
  420071:	js     0x42006c
  420073:	aad    0x70
  420075:	sub    dh,BYTE PTR [edi]
  420077:	sub    DWORD PTR [edx+0x714cb450],ebx
  42007d:	daa    
  42007e:	xor    eax,DWORD PTR [ebp+0x69458a67]
  420084:	arpl   WORD PTR [eax],sp
  420086:	data16 add al,0xa2
  420089:	jnp    0x42006a
  42008b:	popa   
  42008c:	mov    ebx,0xb266af90
  420091:	dec    ecx
  420092:	lea    eax,[ebx]
  420094:	xchg   BYTE PTR [edx+edx*4],ch
  420097:	stc    
  420098:	pop    esi
  420099:	into   
  42009a:	repz lahf 
  42009c:	xor    DWORD PTR [esi+0x23],esi
  42009f:	retf   
  4200a0:	mov    eax,0x63430678
  4200a5:	mov    edi,0x81c12695
  4200aa:	pusha  
  4200ab:	inc    edx
  4200ac:	jmp    0xf781:0x35fb646e
  4200b3:	mov    cl,0xf9
  4200b5:	js     0x420040
  4200b7:	mov    dl,0x3e
  4200b9:	cmp    eax,0x7fefa28c
  4200be:	pop    esi
  4200bf:	fdiv   QWORD PTR [esi+0x11260762]
  4200c5:	push   ss
  4200c6:	sub    ebx,DWORD PTR [eax+eax*2-0x77dcd7dd]
  4200cd:	jmp    0xcae8:0xd3d70403
  4200d4:	test   eax,0x6a69884a
  4200d9:	jle    0x4200e2
  4200db:	xor    BYTE PTR [edi+ebp*1],dh
  4200de:	xor    bl,bh
  4200e0:	lods   al,BYTE PTR ds:[esi]
  4200e1:	cmp    BYTE PTR [ecx],al
  4200e3:	stc    
  4200e4:	daa    
  4200e5:	(bad)  
  4200e6:	push   ecx
  4200e7:	push   0xffffffa2
  4200e9:	popa   
  4200ea:	lea    ecx,[esi+0x45f69864]
  4200f0:	jmp    0x42007f
  4200f2:	aam    0xb0
  4200f4:	mov    ds:0x73202fc3,al
  4200f9:	mov    eax,0x40298365
  4200fe:	mov    esp,0x4a52335d
  420103:	into   
  420104:	call   0xafab90c6
  420109:	push   eax
  42010a:	adc    edi,DWORD PTR [ebp-0x12]
  42010d:	dec    ebp
  42010e:	in     eax,dx
  42010f:	jb     0x4200b4
  420111:	jo     0x42010f
  420113:	mov    esp,esp
  420115:	jge    0x4200ed
  420117:	inc    esi
  420118:	mov    dh,0x3c
  42011a:	sub    BYTE PTR [edi+0x46c22fff],bh
  420120:	sbb    edx,DWORD PTR [ecx+esi*8]
  420123:	mov    ebx,fs
  420125:	xchg   BYTE PTR [edx],dl
  420127:	inc    eax
  420128:	ins    DWORD PTR es:[edi],dx
  420129:	ins    DWORD PTR es:[edi],dx
  42012a:	stos   BYTE PTR es:[edi],al
  42012b:	dec    ebx
  42012c:	fisub  DWORD PTR [esi+0x2976f4c]
  420132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420133:	sbb    eax,0x555fd35
  420138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420139:	scas   eax,DWORD PTR es:[edi]
  42013a:	adc    al,0x7
  42013c:	adc    esi,DWORD PTR [edi*8+0x1227b61]
  420143:	scas   al,BYTE PTR es:[edi]
  420144:	pop    eax
  420145:	jne    0x4201aa
  420147:	mov    ah,0x65
  420149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42014a:	leave  
  42014b:	adc    DWORD PTR [edx],ebx
  42014d:	stc    
  42014e:	dec    esp
  42014f:	pop    ecx
  420150:	imul   ebx,DWORD PTR [ebx],0x81aee332
  420156:	outs   dx,BYTE PTR ds:[esi]
  420157:	sub    cl,dh
  420159:	addr16 mov ds:0x1682,al
  42015d:	fs dec edi
  42015f:	in     al,dx
  420160:	cwde   
  420161:	sbb    BYTE PTR [eax-0x7ffeb8af],ah
  420167:	cmp    ch,BYTE PTR [ecx+0xe474fec]
  42016d:	mov    bh,0xf2
  42016f:	sbb    BYTE PTR [eax+0x5],0xe
  420173:	sbb    al,0xba
  420175:	xchg   ebp,eax
  420176:	mov    dh,0x25
  420178:	push   edi
  420179:	mov    al,ds:0xb26d5c92
  42017e:	data16 aaa 
  420180:	xchg   ebp,eax
  420181:	stos   BYTE PTR es:[edi],al
  420182:	jp     0x4201c9
  420184:	add    BYTE PTR [edi+0x5a],ah
  420187:	or     BYTE PTR [esi-0x6e1cea43],cl
  42018d:	div    DWORD PTR [eax-0x3d94b8ad]
  420193:	push   edx
  420194:	add    DWORD PTR [ebx+0x66d53760],ebp
  42019a:	sar    bl,1
  42019c:	jmp    0x42018f
  42019e:	jo     0x42020a
  4201a0:	jecxz  0x420122
  4201a2:	pop    ss
  4201a3:	mov    edi,0xa7edf96c
  4201a8:	(bad)  
  4201a9:	(bad)  
  4201aa:	push   esi
  4201ab:	and    dl,BYTE PTR [edx]
  4201ad:	bound  ecx,QWORD PTR ds:0x8a1c1713
  4201b3:	out    dx,eax
  4201b4:	mov    ebx,0xe9eeb9da
  4201b9:	pop    ss
  4201ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201bb:	ret    0x68
  4201be:	data16 mov WORD PTR [eax-0x7a866068],gs
  4201c5:	inc    esi
  4201c6:	cdq    
  4201c7:	fwait
  4201c8:	or     ebx,DWORD PTR [eax+0xd4052c]
  4201ce:	mov    esi,0x79e5dbba
  4201d3:	xchg   edi,eax
  4201d4:	gs loope 0x4201cf
  4201d7:	xor    bl,cl
  4201d9:	mov    ch,BYTE PTR [eax]
  4201db:	imul   edi,DWORD PTR [eax],0x7e
  4201de:	xor    eax,DWORD PTR [esi]
  4201e0:	xchg   DWORD PTR [esi],esi
  4201e2:	(bad)  
  4201e3:	fs add al,0xbf
  4201e6:	push   0x601906e9
  4201eb:	(bad)  
  4201ec:	call   0xb21e4074
  4201f1:	arpl   WORD PTR [edi],bx
  4201f3:	mov    edx,0xfb98498
  4201f8:	dec    edx
  4201f9:	push   ecx
  4201fa:	fadd   st,st(5)
  4201fc:	jmp    0x8d50:0x213822ca
  420203:	pop    ebp
  420204:	sub    al,0x2e
  420206:	mov    edx,0x68afcd2d
  42020b:	push   esi
  42020c:	or     ebx,ebp
  42020e:	stos   BYTE PTR es:[edi],al
  42020f:	clc    
  420210:	out    0x7d,al
  420212:	gs dec esi
  420214:	into   
  420215:	add    esi,DWORD PTR [ecx]
  420217:	push   0x4d
  420219:	cmp    ah,BYTE PTR [edi-0x55de29ec]
  42021f:	mov    esi,0xd9fb493
  420224:	push   ecx
  420225:	xor    eax,0x6933e209
  42022a:	aas    
  42022b:	ins    DWORD PTR es:[edi],dx
  42022c:	pushf  
  42022d:	cwde   
  42022e:	shr    ecx,cl
  420230:	(bad)  
  420231:	fild   QWORD PTR [esi]
  420233:	aad    0xf
  420235:	and    DWORD PTR [edi*4-0x6ada252a],0x5a
  42023d:	aad    0x4a
  42023f:	push   ebx
  420240:	jae    0x420220
  420242:	loopne 0x420203
  420244:	mov    BYTE PTR [ecx],ah
  420246:	push   es
  420247:	and    ch,bl
  420249:	dec    ebp
  42024a:	retf   0x59c9
  42024d:	cmp    eax,0xe2c2ce2a
  420252:	ret    0x1f90
  420255:	stc    
  420256:	popf   
  420257:	inc    eax
  420258:	fwait
  420259:	inc    eax
  42025a:	ret    0xf9c3
  42025d:	lods   eax,DWORD PTR ds:[esi]
  42025e:	aad    0x9a
  420260:	mov    bl,0x5f
  420262:	jb     0x420284
  420264:	ror    DWORD PTR ds:0xe4e06109,0x6
  42026b:	inc    esp
  42026c:	jmp    0x4f2f4784
  420271:	adc    eax,0xb5f7ebf8
  420276:	jae    0x4202e9
  420278:	mov    esi,ebp
  42027a:	outs   dx,BYTE PTR ds:[esi]
  42027b:	in     al,dx
  42027c:	xor    BYTE PTR [esi],bl
  42027e:	mov    esp,0xe3d8f901
  420283:	cs dec esp
  420285:	sar    dl,1
  420287:	jo     0x4202c0
  420289:	call   0xac67:0x553f00f4
  420290:	popf   
  420291:	push   edx
  420292:	jle    0x4202fe
  420294:	dec    ebx
  420295:	mov    eax,0xd7113770
  42029a:	adc    DWORD PTR [eax+0x63],esp
  42029d:	loope  0x420311
  42029f:	aam    0x2e
  4202a1:	cmp    ebx,eax
  4202a3:	lock xchg DWORD PTR [edi-0x23],esp
  4202a7:	xchg   edx,eax
  4202a8:	push   esi
  4202a9:	(bad)  
  4202aa:	out    0xd,eax
  4202ac:	push   ss
  4202ad:	jge    0x4202ba
  4202af:	and    ch,BYTE PTR [ebx+ecx*1-0xba95640]
  4202b6:	xor    al,0xb9
  4202b8:	pop    ebp
  4202b9:	aaa    
  4202ba:	imul   ecx,DWORD PTR [ebx-0x74df2980],0xffffffe3
  4202c1:	pmaxsw mm6,mm6
  4202c4:	push   0xfffffff1
  4202c6:	push   0xc6b216e2
  4202cb:	fcom   DWORD PTR [esi-0x4c69d53]
  4202d1:	push   esi
  4202d2:	sar    DWORD PTR [edx-0x6d8f94b8],0xeb
  4202d9:	in     eax,dx
  4202da:	adc    eax,0x17b8a1e1
  4202df:	mov    gs,WORD PTR [eax+0x31723123]
  4202e5:	jns    0x4202f7
  4202e7:	xchg   edi,eax
  4202e8:	push   ds
  4202e9:	pop    ss
  4202ea:	or     dl,bh
  4202ec:	pop    eax
  4202ed:	push   ds
  4202ee:	pop    ds
  4202ef:	xor    BYTE PTR [ecx],bh
  4202f1:	xchg   edi,eax
  4202f2:	push   ss
  4202f3:	(bad)  
  4202f5:	push   es
  4202f6:	mov    ch,0x31
  4202f8:	xchg   ebp,eax
  4202f9:	nop
  4202fa:	int3   
  4202fb:	js     0x420298
  4202fd:	jp     0x420286
  4202ff:	mov    esi,0xb0c12db3
  420304:	push   0x2e45350e
  420309:	lock dec esi
  42030b:	int3   
  42030c:	popf   
  42030d:	mul    BYTE PTR [eax-0x5f]
  420310:	rdtsc  
  420312:	rcl    DWORD PTR [ebx],0xe7
  420315:	fidivr WORD PTR [esi]
  420317:	mov    BYTE PTR [ecx+ebp*1-0x4b30345],ch
  42031e:	add    DWORD PTR [eax],esi
  420320:	pop    edi
  420321:	retf   0x303b
  420324:	fdiv   DWORD PTR [ebx-0x71edf843]
  42032a:	add    BYTE PTR [edi-0x6444cff9],ah
  420330:	mov    al,0x41
  420332:	add    DWORD PTR [ebx-0x32],edi
  420335:	in     al,0x4b
  420337:	fwait
  420338:	pop    ebp
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	dec    edi
  42033b:	inc    edi
  42033c:	enter  0x7e38,0x2c
  420340:	jg     0x4203a6
  420342:	in     eax,0x6d
  420344:	(bad)  
  420345:	sbb    al,0x8c
  420347:	inc    eax
  420348:	pop    eax
  420349:	mov    BYTE PTR [ebx+0x5d6cb444],ah
  42034f:	or     edx,eax
  420351:	(bad)  
  420352:	ret    
  420353:	fstp   QWORD PTR [eax-0x16fa78b0]
  420359:	add    BYTE PTR [eax+0x57],cl
  42035c:	pop    esi
  42035d:	pop    es
  42035e:	aam    0x68
  420360:	sub    eax,0xc0da8006
  420365:	aam    0x99
  420367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420368:	adc    DWORD PTR ds:0x9cba0d77,0xdc23ba12
  420372:	fwait
  420373:	int    0xa9
  420375:	jmp    0x20e179be
  42037a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42037b:	js     0x42032e
  42037d:	push   ebp
  42037f:	das    
  420380:	inc    ebp
  420381:	mov    bl,0x96
  420383:	aaa    
  420384:	xchg   ecx,eax
  420385:	aad    0x91
  420387:	mov    WORD PTR [ecx+0x63],?
  42038a:	xor    eax,0x1456c27b
  42038f:	push   eax
  420390:	cmp    BYTE PTR [edx],bh
  420392:	cwde   
  420393:	retf   
  420394:	scas   al,BYTE PTR es:[edi]
  420395:	cmp    BYTE PTR [ebx],ch
  420397:	cmp    eax,0xf0b96d6e
  42039c:	jl     0x420371
  42039e:	push   ss
  42039f:	push   DWORD PTR [esi]
  4203a1:	mov    ebp,0xa31fa7e3
  4203a6:	(bad)  
  4203a7:	push   ss
  4203a8:	fdivr  DWORD PTR gs:[eax+0x2a1eac69]
  4203af:	aas    
  4203b0:	jp     0x420401
  4203b2:	sti    
  4203b3:	sti    
  4203b4:	fcomp  st(6)
  4203b6:	(bad)  
  4203b7:	and    ecx,edx
  4203b9:	or     ebp,DWORD PTR [ebx]
  4203bb:	sbb    BYTE PTR [ebx+0x6bc29b48],ah
  4203c1:	push   cs
  4203c2:	scas   eax,DWORD PTR es:[edi]
  4203c3:	ror    BYTE PTR [ebx],1
  4203c5:	(bad)  
  4203c6:	dec    eax
  4203c7:	enter  0x4560,0x8f
  4203cb:	ret    0x87cf
  4203ce:	sti    
  4203cf:	dec    edi
  4203d0:	call   0x15e6b22f
  4203d5:	nop
  4203d6:	aad    0xb7
  4203d8:	leave  
  4203d9:	mov    DWORD PTR [ebp+ebp*4-0x5a],ecx
  4203dd:	or     eax,0x9c674de3
  4203e2:	cld    
  4203e3:	dec    edx
  4203e4:	mov    edi,0xaca91b72
  4203e9:	pop    ecx
  4203ea:	mov    ebx,0x4913c1f2
  4203ef:	jbe    0x4203a6
  4203f1:	xchg   edi,eax
  4203f2:	test   eax,0x734d6716
  4203f7:	or     BYTE PTR [ecx+0x25],cl
  4203fa:	jmp    0x4cdb65a0
  4203ff:	cmc    
  420400:	mov    ds:0xfca2b023,al
  420405:	sbb    esi,DWORD PTR [edx+ebx*1]
  420408:	or     eax,DWORD PTR [ecx+0x6c10a755]
  42040e:	xchg   ecx,eax
  42040f:	cmp    DWORD PTR [esi],edi
  420411:	dec    eax
  420412:	cli    
  420413:	(bad)  
  420414:	and    DWORD PTR [edx+0x4239cf80],esp
  42041a:	ret    
  42041b:	cmp    DWORD PTR [ecx],0xf4a31b42
  420421:	gs sahf 
  420423:	call   0x29c1:0x2246d599
  42042a:	sub    ch,ah
  42042c:	push   es
  42042d:	clc    
  42042e:	jmp    0x1e0c5703
  420433:	ins    DWORD PTR es:[edi],dx
  420434:	cld    
  420435:	test   al,0x9c
  420437:	cmp    BYTE PTR [edi],al
  420439:	sbb    BYTE PTR [edi+ebp*2+0x3b],dh
  42043d:	js     0x42044a
  42043f:	xchg   BYTE PTR [edi-0x80],ch
  420442:	in     eax,0x85
  420444:	js     0x4203e8
  420446:	pop    ebx
  420447:	or     BYTE PTR [eax-0x529646a6],cl
  42044d:	xchg   ecx,eax
  42044e:	dec    ebp
  42044f:	or     eax,0xb52845ec
  420454:	sub    dh,dh
  420456:	sar    esi,1
  420458:	xchg   edx,eax
  420459:	push   ds
  42045a:	xchg   ebp,eax
  42045b:	adc    esp,edi
  42045d:	fcmovb st,st(0)
  42045f:	cmc    
  420460:	in     eax,dx
  420461:	jp     0x42049f
  420463:	cmp    al,0x95
  420465:	ret    0x602e
  420468:	scas   al,BYTE PTR es:[edi]
  420469:	dec    edx
  42046a:	in     eax,dx
  42046b:	xor    al,0x50
  42046d:	jnp    0x420478
  42046f:	push   ecx
  420470:	pop    esp
  420471:	js     0x42049d
  420473:	out    0x2f,eax
  420475:	ret    
  420476:	jnp    0x4204e8
  420478:	sub    dh,ch
  42047a:	std    
  42047b:	dec    ecx
  42047c:	(bad)  
  42047d:	loopne 0x4204a8
  42047f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420480:	sub    BYTE PTR [esi],ch
  420482:	inc    esi
  420483:	gs inc esp
  420485:	jmp    0xc004:0x6d0c151
  42048c:	and    edx,0xffffff94
  42048f:	pop    ss
  420490:	jp     0x420421
  420492:	and    eax,0x9e0b62d3
  420497:	and    esi,DWORD PTR [ecx+eiz*8+0x5c18a93f]
  42049e:	cmp    bh,BYTE PTR [ebx-0x15]
  4204a1:	js     0x42043f
  4204a3:	cmc    
  4204a4:	test   eax,0x9641cad6
  4204a9:	xlat   BYTE PTR ds:[ebx]
  4204aa:	das    
  4204ab:	test   eax,0x1cb1b7d7
  4204b0:	inc    edx
  4204b1:	(bad)  
  4204b2:	push   ss
  4204b3:	mov    ds:0x3199d6cb,al
  4204b8:	sub    al,0x1c
  4204ba:	inc    esi
  4204bb:	in     eax,dx
  4204bc:	xlat   BYTE PTR ds:[ebx]
  4204bd:	xchg   ecx,eax
  4204be:	pushf  
  4204bf:	mov    cs,ecx
  4204c1:	arpl   sp,sp
  4204c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204c4:	call   0x1117:0x5aa70c14
  4204cb:	inc    ebp
  4204cc:	jbe    0x420542
  4204ce:	int    0xd
  4204d0:	push   esp
  4204d1:	mov    ecx,0x7d09da31
  4204d6:	mov    eax,ds:0x529b8977
  4204db:	int    0xb2
  4204dd:	dec    esi
  4204de:	mov    bh,0xeb
  4204e0:	add    ebx,ebx
  4204e2:	push   ebx
  4204e3:	out    dx,al
  4204e4:	shl    DWORD PTR ds:0x84847774,0xc3
  4204eb:	push   ecx
  4204ec:	out    dx,eax
  4204ed:	sub    ah,BYTE PTR [ebx+0x7866460]
  4204f3:	out    0x9c,al
  4204f5:	push   edx
  4204f6:	mov    bh,0x2c
  4204f8:	nop
  4204f9:	fimul  DWORD PTR [ebp-0x1ed3c761]
  4204ff:	cdq    
  420500:	add    al,0x8e
  420502:	imul   esp,DWORD PTR ds:0xf8c7c967,0x68
  420509:	adc    ecx,DWORD PTR [ecx+0x7]
  42050c:	jb     0x42050a
  42050e:	stos   BYTE PTR es:[edi],al
  42050f:	jnp    0x42053d
  420511:	ins    BYTE PTR es:[edi],dx
  420512:	dec    ebx
  420513:	push   ss
  420514:	emms   
  420516:	xchg   esi,eax
  420517:	enter  0x89f8,0x57
  42051b:	in     eax,dx
  42051c:	add    al,0x3a
  42051e:	mov    ch,0x3c
  420520:	jmp    0x42056d
  420522:	inc    ecx
  420523:	inc    esp
  420524:	lea    edx,[eax+eax*8]
  420527:	mov    ds:0x4e46002,al
  42052c:	or     eax,0x9a07ae46
  420531:	lahf   
  420532:	es xor eax,0x79deb918
  420538:	sahf   
  420539:	mov    dh,0x94
  42053b:	sahf   
  42053c:	das    
  42053d:	(bad)  
  42053e:	xor    al,0x7d
  420540:	jmp    0x420545
  420542:	pop    es
  420543:	sbb    ebx,DWORD PTR [esi+esi*8-0x2b]
  420547:	(bad)
  42054a:	data16 sahf 
  42054c:	popf   
  42054d:	ret    0xb6fd
  420550:	sub    eax,ebp
  420552:	je     0x420523
  420554:	jecxz  0x4205c1
  420556:	imul   esp,DWORD PTR [ebx-0x48db7c96],0xffffffa9
  42055d:	sub    bh,BYTE PTR [edi+0x205b120c]
  420563:	push   0xbd3494fb
  420568:	cmp    bl,bl
  42056a:	mov    bh,0xbb
  42056c:	(bad)  [edx+ebp*2]
  42056f:	push   es
  420570:	or     ch,al
  420572:	ins    DWORD PTR es:[edi],dx
  420573:	push   0x42b7a0da
  420578:	mov    bl,0x29
  42057a:	mov    dh,BYTE PTR [esi-0x529b45df]
  420580:	es lods al,BYTE PTR cs:[esi]
  420583:	mov    ch,0x1f
  420585:	add    esp,DWORD PTR [ecx]
  420587:	sub    al,0x37
  420589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058a:	lahf   
  42058b:	(bad)  
  42058c:	sub    BYTE PTR [ebp+0x170268fc],bl
  420592:	mov    eax,0x357670fc
  420597:	xbegin 0x37ff366
  42059d:	sub    DWORD PTR [ebx],edx
  42059f:	test   al,0x8a
  4205a1:	out    0x10,al
  4205a3:	aam    0x1d
  4205a5:	ret    
  4205a6:	out    0x38,eax
  4205a8:	jns    0x420588
  4205aa:	fsub   QWORD PTR [ebx]
  4205ac:	addr16 dec edx
  4205ae:	arpl   WORD PTR [esi],ax
  4205b0:	in     eax,dx
  4205b1:	(bad)  
  4205b2:	pop    esp
  4205b3:	or     ebp,ebp
  4205b5:	stos   DWORD PTR es:[edi],eax
  4205b6:	fadd   QWORD PTR [esi+0x4ade0f30]
  4205bc:	mov    cl,0x94
  4205be:	imul   DWORD PTR [esi-0x21]
  4205c1:	adc    bh,BYTE PTR [ecx-0x2c]
  4205c4:	or     ah,dh
  4205c6:	outs   dx,BYTE PTR ds:[esi]
  4205c7:	mov    ebx,0xd5489649
  4205cc:	sub    eax,0x5ed052b8
  4205d1:	lds    esi,FWORD PTR [edx+0x78e2e8bb]
  4205d7:	jg     0x420638
  4205d9:	stc    
  4205da:	push   edx
  4205db:	adc    ebx,edi
  4205dd:	fcomp  QWORD PTR [edx+ecx*2-0x60ca7b27]
  4205e4:	sub    esp,DWORD PTR [ebx+0x27db8def]
  4205ea:	fidivr DWORD PTR [ebx-0x23]
  4205ed:	mov    cl,0xc2
  4205ef:	xor    eax,0xfd0df071
  4205f4:	pop    ebx
  4205f5:	dec    esi
  4205f6:	mov    dh,0x9e
  4205f8:	int    0x9d
  4205fa:	mov    cs,WORD PTR [eax-0x65]
  4205fd:	adc    cl,0x71
  420600:	(bad)  
  420601:	mov    al,ds:0x3e8e569d
  420606:	adc    DWORD PTR ss:[ebp-0x39],ebp
  42060a:	clc    
  42060b:	inc    esp
  42060c:	rcr    DWORD PTR [edx+0x3a31b5c5],cl
  420612:	pop    esi
  420613:	clc    
  420614:	retf   
  420615:	and    dl,BYTE PTR [eax]
  420617:	pop    esi
  420618:	dec    eax
  420619:	bound  ecx,QWORD PTR [ebp-0x1cef689c]
  42061f:	push   es
  420620:	push   esi
  420621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420622:	stos   DWORD PTR es:[edi],eax
  420623:	jnp    0x420635
  420625:	xor    ch,dl
  420627:	mov    ch,0xb8
  420629:	add    edi,DWORD PTR [ebp-0x1]
  42062c:	lahf   
  42062d:	xchg   edx,eax
  42062e:	mov    edx,0x32f868bf
  420633:	mov    dl,0x2b
  420635:	push   0xa364d243
  42063a:	cmp    al,0xad
  42063c:	jne    0x42067d
  42063e:	mov    ecx,0xb616bbc9
  420643:	xor    eax,0x7552212c
  420648:	arpl   WORD PTR [eax-0x3b],bx
  42064b:	push   esi
  42064c:	pop    ebp
  42064d:	dec    esp
  42064e:	les    ebp,FWORD PTR [edx-0x425d8ee5]
  420654:	dec    edi
  420655:	inc    ebx
  420656:	and    eax,0xf6be64cc
  42065b:	stc    
  42065c:	or     eax,0x165ea54e
  420661:	inc    edi
  420662:	ror    DWORD PTR ds:0xc6108963,cl
  420668:	xlat   BYTE PTR ds:[ebx]
  420669:	std    
  42066a:	out    dx,eax
  42066b:	sub    ebp,eax
  42066d:	inc    esi
  42066e:	jnp    0x420682
  420670:	pop    ebx
  420671:	push   esi
  420672:	retf   0x89a8
  420675:	push   ds
  420676:	sbb    eax,0xd0568c98
  42067b:	mov    ds:0x1002ee13,al
  420680:	aam    0xd8
  420682:	dec    esi
  420683:	test   DWORD PTR ds:0x5c5ed386,ebx
  420689:	imul   DWORD PTR [eax+0x48]
  42068c:	ret    
  42068d:	out    dx,al
  42068e:	(bad)  
  42068f:	lods   eax,DWORD PTR ds:[esi]
  420690:	sti    
  420691:	sbb    DWORD PTR [edi-0x2],0x3aef3ed7
  420698:	fcmovbe st,st(0)
  42069a:	jnp    0x420680
  42069c:	rcl    ecx,1
  42069e:	xchg   edx,eax
  42069f:	loopne 0x4206d1
  4206a1:	adc    dl,ch
  4206a3:	xor    ah,BYTE PTR [eax-0x5368e846]
  4206a9:	scas   eax,DWORD PTR es:[edi]
  4206aa:	add    al,0x98
  4206ac:	mov    WORD PTR [ebp-0x39],ss
  4206af:	lods   al,BYTE PTR ds:[esi]
  4206b0:	add    DWORD PTR [ebx],0xeaff3a4f
  4206b6:	sbb    DWORD PTR [eax+ebp*2+0x1f47f06f],esi
  4206bd:	jge    0x4206bd
  4206bf:	int    0xfb
  4206c1:	rol    bl,1
  4206c3:	push   ecx
  4206c4:	aam    0x8b
  4206c6:	xchg   esi,eax
  4206c7:	mov    eax,0xff666a47
  4206cc:	push   0x4a44a061
  4206d1:	(bad)  
  4206d2:	in     al,0x9
  4206d4:	push   edx
  4206d5:	outs   dx,DWORD PTR ds:[esi]
  4206d6:	outs   dx,BYTE PTR ds:[esi]
  4206d7:	jle    0x42073d
  4206d9:	jae    0x4206e1
  4206db:	sbb    esp,DWORD PTR [esi+0x4f]
  4206de:	sub    eax,DWORD PTR [ebx-0x7d]
  4206e1:	pop    es
  4206e2:	ss mov dl,0xee
  4206e5:	mov    dl,0xe9
  4206e7:	test   al,ah
  4206e9:	cmc    
  4206ea:	popf   
  4206eb:	mov    ch,0x82
  4206ed:	pop    esi
  4206ee:	mov    ecx,0xdca5a872
  4206f3:	out    dx,eax
  4206f4:	jge    0x4206c7
  4206f6:	shl    DWORD PTR [ebp+0x38],cl
  4206f9:	(bad)  [eax]
  4206fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206fc:	jne    0x4206b1
  4206fe:	imul   eax,DWORD PTR [eax-0x5529df08],0xffffffb1
  420705:	test   DWORD PTR [edi-0x7f],esp
  420708:	ins    BYTE PTR es:[edi],dx
  420709:	stc    
  42070a:	repz ja 0x420774
  42070d:	(bad)  
  42070e:	mov    dl,BYTE PTR [ebp-0x7606adff]
  420714:	mov    edx,0x3368a6c1
  420719:	lods   al,BYTE PTR ds:[esi]
  42071a:	icebp  
  42071b:	push   0x64
  42071d:	hlt    
  42071e:	repz mov eax,ds:0xfc8dc3d0
  420724:	pop    esi
  420725:	mov    esp,0x97c8a68a
  42072a:	dec    eax
  42072b:	jecxz  0x4206f5
  42072d:	aam    0x98
  42072f:	cmp    BYTE PTR ds:0x2adde86b,ch
  420735:	pushf  
  420736:	clc    
  420737:	jg     0x42071f
  420739:	add    esi,ebx
  42073b:	push   ss
  42073c:	aaa    
  42073d:	adc    BYTE PTR [ebx+0x60],dh
  420740:	sbb    ebp,DWORD PTR [ebp+0x9]
  420743:	int3   
  420744:	or     DWORD PTR [eax+0x25],ecx
  420747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420748:	shr    BYTE PTR [ebx],1
  42074a:	out    0x19,eax
  42074c:	mov    dl,0xfb
  42074e:	aad    0x26
  420750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420751:	aad    0xdf
  420753:	jg     0x42074f
  420755:	mov    WORD PTR [eax],?
  420757:	mov    DWORD PTR [ebp+0x6d],esp
  42075a:	shr    BYTE PTR es:[ebx+0x2c44eca2],1
  420761:	xor    eax,0x833e6132
  420766:	test   eax,0xf74106a5
  42076b:	rcr    DWORD PTR [ebx+0x151a7ee6],1
  420771:	lods   al,BYTE PTR ds:[esi]
  420772:	call   0x7d40f377
  420777:	push   ecx
  420778:	dec    eax
  420779:	retf   0x207c
  42077c:	call   0x9bdf8b03
  420781:	mov    bl,0xa0
  420783:	scas   al,BYTE PTR es:[edi]
  420784:	loope  0x42070d
  420786:	inc    edi
  420787:	(bad)  
  420788:	outs   dx,BYTE PTR ds:[esi]
  420789:	jbe    0x420755
  42078b:	mov    edi,0xd79501e5
  420790:	imul   bh
  420792:	(bad)  
  420793:	(bad)  
  420794:	mov    esi,0x739d4852
  420799:	cmp    BYTE PTR [ebx-0x51],bh
  42079c:	sub    DWORD PTR [ecx],esi
  42079e:	fnsave [esi]
  4207a0:	add    eax,0xf7e75e4a
  4207a5:	xor    eax,DWORD PTR [edx]
  4207a7:	cmp    al,0x12
  4207a9:	xchg   DWORD PTR ds:0xa2805bfc,esp
  4207af:	sub    edi,DWORD PTR [ebx+0x1e]
  4207b2:	inc    edx
  4207b3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4207b5:	push   ebp
  4207b6:	jmp    0xd990c4d1
  4207bb:	jae    0x4207fa
  4207bd:	in     al,0x13
  4207bf:	lock lods eax,DWORD PTR ds:[esi]
  4207c1:	mov    bh,0xc9
  4207c3:	pusha  
  4207c4:	jmp    0x5a54c88a
  4207c9:	pop    ds
  4207ca:	gs jmp 0xa95c:0xfcc01a18
  4207d2:	shl    BYTE PTR [ebx],1
  4207d4:	outs   dx,BYTE PTR ds:[esi]
  4207d5:	inc    eax
  4207d6:	pop    ebp
  4207d7:	add    DWORD PTR [ebx+eax*4+0x71724243],esi
  4207de:	jns    0x420824
  4207e0:	sbb    dh,BYTE PTR [edx+0x3227c7c1]
  4207e6:	sbb    DWORD PTR [ebp-0x33ad4b9e],esp
  4207ec:	xor    eax,0x32a28a6d
  4207f1:	inc    ecx
  4207f2:	push   ds
  4207f3:	inc    esi
  4207f4:	mov    ch,BYTE PTR [esi]
  4207f6:	jo     0x42085d
  4207f8:	ret    0xec3d
  4207fb:	cdq    
  4207fc:	dec    ecx
  4207fd:	shr    BYTE PTR [edx-0x70be89bf],0xd0
  420804:	std    
  420805:	inc    esi
  420806:	sti    
  420807:	fidiv  WORD PTR [ebx-0x58]
  42080a:	lods   eax,DWORD PTR ds:[esi]
  42080b:	test   eax,0xb59711b
  420810:	cld    
  420811:	or     eax,DWORD PTR [esi]
  420813:	es (bad) 
  420815:	or     eax,DWORD PTR [edi+0x48429639]
  42081b:	repnz jecxz 0x42082d
  42081e:	mov    fs,WORD PTR [ecx-0x5d]
  420821:	dec    esp
  420822:	jno    0x4207f8
  420824:	fisub  WORD PTR [edi+0x15]
  420827:	dec    edx
  420828:	mov    ebp,0xea93d513
  42082d:	mov    ds:0x7f94dd51,al
  420832:	mov    ds:0xb435ec91,eax
  420837:	push   esp
  420838:	fucomi st,st(2)
  42083a:	push   es
  42083b:	jle    0x420825
  42083d:	sub    eax,0xee0d6ac1
  420842:	jl     0x4207dd
  420844:	fdecstp 
  420846:	lods   al,BYTE PTR ds:[esi]
  420847:	cwde   
  420848:	idiv   BYTE PTR [ebp+0x7d]
  42084b:	push   edi
  42084c:	jmp    0x42087c
  42084e:	in     al,dx
  42084f:	mov    ah,BYTE PTR [ebx-0x58]
  420852:	fimul  DWORD PTR [esi]
  420854:	and    esp,edx
  420856:	sub    eax,0x19125328
  42085b:	mov    esp,0x3505303e
  420860:	hlt    
  420861:	pop    esi
  420862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420863:	repz mov WORD PTR [ebx],gs
  420866:	pushf  
  420867:	or     eax,0xb0fe8a0a
  42086c:	scas   eax,DWORD PTR es:[edi]
  42086d:	xor    al,0xfd
  42086f:	mov    ch,0xb4
  420871:	mov    esi,0x11c3d857
  420876:	mov    eax,0xf720e1e9
  42087b:	adc    esp,DWORD PTR [ebx+esi*8]
  42087e:	aad    0xba
  420880:	fild   DWORD PTR [edi]
  420882:	(bad)
  420886:	mov    ds:0x7f8a9d2,eax
  42088b:	popa   
  42088c:	pop    edx
  42088d:	test   eax,0x786246ff
  420892:	push   DWORD PTR [eax-0x78]
  420895:	les    ecx,FWORD PTR [eax+edi*4]
  420898:	push   es
  420899:	mov    ebx,DWORD PTR ds:0x3e9ee683
  42089f:	jb     0x4208f6
  4208a1:	push   esi
  4208a2:	stos   DWORD PTR es:[edi],eax
  4208a3:	call   0x897ec118
  4208a8:	push   ebx
  4208a9:	mov    WORD PTR [edi-0x67],es
  4208ac:	xchg   BYTE PTR [eax+0x4913957e],bh
  4208b2:	fsub   QWORD PTR [esi+0x26]
  4208b5:	in     al,0x11
  4208b7:	dec    ebx
  4208b8:	popf   
  4208b9:	ror    edi,1
  4208bb:	jnp    0x420920
  4208bd:	cmp    DWORD PTR [ebx],ebx
  4208bf:	jl     0x4208c7
  4208c1:	addr16 fwait
  4208c3:	xor    DWORD PTR [ebx+0x8],edi
  4208c6:	mov    ch,0x4b
  4208c8:	(bad)  
  4208c9:	cdq    
  4208ca:	lea    ebp,[eax]
  4208cc:	test   eax,0xbbf73c5
  4208d1:	lods   eax,DWORD PTR ds:[esi]
  4208d2:	pop    edi
  4208d3:	mov    dh,BYTE PTR [ebx]
  4208d5:	jb     0x420896
  4208d7:	inc    eax
  4208d8:	add    DWORD PTR [ebx+0x73],ebx
  4208db:	adc    eax,0x21518bb6
  4208e0:	xor    al,0x5
  4208e2:	or     al,0x4e
  4208e4:	dec    edi
  4208e5:	ins    BYTE PTR es:[edi],dx
  4208e6:	jno    0x4208db
  4208e8:	jmp    0x43b9500
  4208ed:	jnp    0x420956
  4208ef:	jmp    DWORD PTR [ecx+0x41]
  4208f2:	xchg   ebx,eax
  4208f3:	xlat   BYTE PTR ds:[ebx]
  4208f4:	scas   al,BYTE PTR es:[edi]
  4208f5:	xor    ecx,DWORD PTR [edi-0x46718dc3]
  4208fb:	cdq    
  4208fc:	xchg   ebp,eax
  4208fd:	mov    dh,BYTE PTR [ebx]
  4208ff:	popa   
  420900:	js     0x42096d
  420902:	and    bh,BYTE PTR [ecx+0x1218e8a2]
  420908:	mov    es,edi
  42090a:	repz and BYTE PTR [ecx-0x8dc5722],cl
  420911:	sbb    al,0x2d
  420913:	pop    esi
  420914:	cmp    eax,0xc866c1f
  420919:	scas   al,BYTE PTR es:[edi]
  42091a:	outs   dx,BYTE PTR ds:[esi]
  42091b:	popa   
  42091c:	retf   0x7a3c
  42091f:	mov    bl,0x95
  420921:	add    esi,esi
  420923:	sbb    cl,BYTE PTR [edx-0x464f7ded]
  420929:	loope  0x4209a5
  42092b:	xor    BYTE PTR [esp+edi*4+0x5f426514],cl
  420932:	clc    
  420933:	xchg   edi,eax
  420934:	gs ss push 0xa569bfb0
  42093b:	addr16 dec ebx
  42093d:	jb     0x4208f5
  42093f:	sub    esi,ebx
  420941:	pop    ebx
  420942:	and    eax,0xddc0547b
  420947:	push   0x18
  420949:	xor    bh,bh
  42094b:	leave  
  42094c:	pop    ecx
  42094d:	xchg   edi,ebx
  42094f:	xchg   ebp,eax
  420950:	pop    esp
  420951:	les    ebp,FWORD PTR [esi]
  420953:	pop    esp
  420954:	inc    edi
  420955:	sbb    ecx,DWORD PTR [edi+0x65]
  420958:	call   0x7f2b00db
  42095d:	in     eax,0xa9
  42095f:	(bad)  [edx+0x2f0c2c62]
  420965:	adc    BYTE PTR [ecx+0x26],cl
  420968:	sti    
  420969:	pop    ebx
  42096a:	and    al,0x8
  42096c:	popf   
  42096d:	jmp    0x369e:0xf3dfcf7f
  420974:	cmp    BYTE PTR [ebp+0x3ac46a28],ch
  42097a:	pop    es
  42097b:	xchg   esp,eax
  42097c:	sub    esp,DWORD PTR [eax+0x50]
  42097f:	fidiv  WORD PTR [ebp-0x41533b4a]
  420985:	mov    al,ds:0xefa6a554
  42098a:	repz std 
  42098c:	xchg   ebx,eax
  42098d:	mov    bh,0x76
  42098f:	icebp  
  420990:	pop    esp
  420991:	cmp    al,0xf9
  420993:	shl    BYTE PTR [ecx+0x70],0xd
  420997:	stc    
  420998:	mov    ebx,0xd66d2cef
  42099d:	push   edx
  42099e:	imul   ebx,DWORD PTR [esp+ebp*2-0x3d68dfc2],0x73
  4209a6:	adc    cl,BYTE PTR [eax-0x1d8c2a9b]
  4209ac:	sub    BYTE PTR [eax+eiz*4+0x4358820e],al
  4209b3:	clc    
  4209b4:	push   0xffffffa8
  4209b6:	into   
  4209b7:	les    ebp,FWORD PTR [edx+0x3d]
  4209ba:	lds    ebp,FWORD PTR [eax-0x9]
  4209bd:	(bad)  
  4209be:	stc    
  4209bf:	cli    
  4209c0:	or     bh,ch
  4209c2:	sbb    ch,BYTE PTR [ebp+0x19]
  4209c5:	xchg   edx,eax
  4209c6:	xchg   DWORD PTR [ebx+eiz*2-0x62],edx
  4209ca:	sbb    DWORD PTR [ecx-0x7d],esp
  4209cd:	pusha  
  4209ce:	xor    eax,0x3f0211a0
  4209d3:	stc    
  4209d4:	loopne 0x4209e6
  4209d6:	nop
  4209d7:	and    ebp,edx
  4209d9:	cmp    ecx,DWORD PTR [ebp+ebp*1-0x9]
  4209dd:	cmc    
  4209de:	stos   BYTE PTR es:[edi],al
  4209df:	or     BYTE PTR [esi],bh
  4209e1:	ja     0x9b22adeb
  4209e7:	(bad)  
  4209e9:	and    BYTE PTR [ebp+0xd],bl
  4209ec:	mov    bl,0xc4
  4209ee:	jne    0x42099a
  4209f0:	icebp  
  4209f1:	or     ebp,ebp
  4209f3:	out    0x9e,al
  4209f5:	mov    cl,BYTE PTR [ebp-0x57529930]
  4209fb:	(bad)  
  4209fc:	mov    edx,ds
  4209fe:	mov    edi,0x2dfc646b
  420a03:	call   0xb524:0x7291c0a7
  420a0a:	test   DWORD PTR [ebp+0x14],ebp
  420a0d:	xchg   ebx,eax
  420a0e:	lahf   
  420a0f:	jno    0x4209a1
  420a11:	neg    BYTE PTR [esp+ecx*8+0x62]
  420a15:	xchg   DWORD PTR [eax-0x2d32d36c],eax
  420a1b:	xchg   ebp,eax
  420a1c:	rol    BYTE PTR [ebp+0x38d66be],1
  420a22:	mov    ss,WORD PTR [ecx+0x79b6d4d4]
  420a28:	mov    esi,0x9818c5d2
  420a2d:	punpcklbw mm6,DWORD PTR [esi-0x35]
  420a31:	push   edi
  420a32:	push   ebp
  420a33:	or     eax,0xbb75dd07
  420a38:	and    eax,0x5062eb34
  420a3d:	out    0xd8,eax
  420a3f:	push   es
  420a40:	xchg   ecx,eax
  420a41:	fld    TBYTE PTR [ebp+0x16]
  420a44:	loope  0x420a1d
  420a46:	imul   ebx,DWORD PTR [ecx+ebx*4-0x2f],0xffffffb4
  420a4b:	popa   
  420a4c:	push   es
  420a4d:	lea    esp,fs:[ebp+0x40]
  420a51:	mov    ch,0xf9
  420a53:	stos   DWORD PTR es:[edi],eax
  420a54:	test   BYTE PTR [edi-0x3851ce48],dh
  420a5a:	repnz test BYTE PTR [ebx-0x3bfd00bf],bl
  420a61:	shr    BYTE PTR [edi],1
  420a63:	mov    al,0xc2
  420a65:	into   
  420a66:	in     al,dx
  420a67:	inc    esp
  420a68:	mov    al,0x86
  420a6a:	mov    WORD PTR [ecx+0x3ee558c0],es
  420a70:	loop   0x420a75
  420a72:	push   edi
  420a73:	(bad)  
  420a74:	in     al,0x22
  420a76:	dec    edi
  420a77:	bnd jo 0x420a88
  420a7a:	jmp    0x4789be3b
  420a7f:	jecxz  0x420a70
  420a81:	fimul  DWORD PTR [ebp+eax*8-0x1184975]
  420a88:	neg    BYTE PTR [edi-0x5c]
  420a8b:	xor    esp,ebx
  420a8d:	gs sti 
  420a8f:	push   DWORD PTR [edx]
  420a91:	outs   dx,DWORD PTR ds:[esi]
  420a92:	push   es
  420a93:	fwait
  420a94:	jl     0x420a2d
  420a96:	inc    ecx
  420a97:	stos   DWORD PTR es:[edi],eax
  420a98:	nop
  420a99:	fidivr WORD PTR [edx]
  420a9b:	aam    0x1a
  420a9d:	lods   eax,DWORD PTR ds:[esi]
  420a9e:	push   0xa227e259
  420aa3:	adc    edi,0x2579c3d
  420aa9:	test   BYTE PTR [edx-0x5d],0xb2
  420aad:	pop    edi
  420aae:	dec    edx
  420aaf:	xchg   esp,eax
  420ab0:	pop    edx
  420ab1:	jge    0x420ae2
  420ab3:	call   DWORD PTR [edx]
  420ab5:	sub    BYTE PTR [ebx+0x17],bl
  420ab8:	rol    DWORD PTR [esi],cl
  420aba:	inc    edx
  420abb:	and    cl,bl
  420abd:	mov    dh,BYTE PTR [edi-0xb3f5511]
  420ac3:	nop
  420ac4:	sbb    al,0x5c
  420ac6:	dec    esp
  420ac7:	es add eax,0xa8cef70b
  420acd:	xchg   BYTE PTR [edx],ah
  420acf:	dec    eax
  420ad0:	push   ds
  420ad1:	jecxz  0x420a99
  420ad3:	pop    esi
  420ad4:	bound  ecx,QWORD PTR [ecx+0x1]
  420ad7:	outs   dx,DWORD PTR ds:[esi]
  420ad8:	dec    esp
  420ad9:	out    0x50,al
  420adb:	cs out dx,eax
  420add:	imul   edx,DWORD PTR [esp+esi*2+0x8d4cb45],0x66a2ef68
  420ae8:	cwde   
  420ae9:	sbb    BYTE PTR [ecx-0x68],ah
  420aec:	ret    
  420aed:	adc    edi,DWORD PTR [ecx]
  420aef:	push   0xb
  420af1:	add    BYTE PTR [ebx+0x29909fb4],al
  420af7:	icebp  
  420af8:	ret    
  420af9:	dec    edx
  420afa:	push   es
  420afb:	fwait
  420afc:	and    al,0xcc
  420afe:	jnp    0x420b36
  420b00:	and    eax,DWORD PTR [ebx]
  420b02:	push   0x13
  420b04:	xor    al,0x4e
  420b06:	js     0x420b55
  420b08:	or     ch,BYTE PTR [esi]
  420b0a:	jge    0x420a9d
  420b0c:	sub    eax,0xe73a36fd
  420b11:	dec    edi
  420b12:	fadd   DWORD PTR [edi+0x3d7ef622]
  420b18:	and    eax,0xa85b7599
  420b1d:	jp     0x420ac7
  420b1f:	push   edx
  420b20:	jb     0x420ad0
  420b22:	into   
  420b23:	and    eax,0xcda7c377
  420b28:	pop    esp
  420b29:	mov    eax,ds:0xa1aa74c9
  420b2e:	jecxz  0x420b8e
  420b30:	xchg   ebx,eax
  420b31:	test   DWORD PTR [eax+0x126822b2],ebx
  420b37:	jnp    0x420b09
  420b39:	idiv   BYTE PTR [edx+edx*1]
  420b3c:	aam    0xe
  420b3e:	les    edx,FWORD PTR [ecx+0x63]
  420b41:	inc    edi
  420b42:	sub    BYTE PTR [esi],ch
  420b44:	cli    
  420b45:	dec    ecx
  420b47:	aaa    
  420b48:	repnz dec ebx
  420b4a:	mov    ch,0x85
  420b4c:	mov    ebx,0xb5bbfafb
  420b51:	leave  
  420b52:	addr16 clc 
  420b54:	cs push ebx
  420b56:	fcomp  DWORD PTR [ecx]
  420b58:	push   0x3
  420b5a:	ins    BYTE PTR es:[edi],dx
  420b5b:	div    DWORD PTR [ebp+0x763aabf1]
  420b61:	int    0x43
  420b63:	sbb    edi,esp
  420b65:	and    eax,0xf5bfb413
  420b6a:	dec    edi
  420b6b:	not    DWORD PTR [esp+ebx*4]
  420b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b70:	inc    ebx
  420b71:	add    al,BYTE PTR [edi+0x50]
  420b74:	shl    DWORD PTR [ebx-0x116e127f],cl
  420b7a:	addr16 int 0xcd
  420b7d:	aad    0x77
  420b7f:	(bad)  
  420b81:	out    dx,eax
  420b82:	inc    ebx
  420b83:	test   DWORD PTR [ebp-0x137fd720],eax
  420b89:	(bad)  
  420b8b:	and    bh,al
  420b8d:	add    al,0x34
  420b8f:	fs fs shr ch,cl
  420b93:	popa   
  420b94:	frstor [eax-0x4a]
  420b97:	(bad)  [edi+0x5a6955]
  420b9d:	inc    ebp
  420b9e:	shl    DWORD PTR [eax+0x36],cl
  420ba1:	adc    esp,ebx
  420ba3:	lds    esp,FWORD PTR [eax+0x177b3fc3]
  420ba9:	enter  0xf429,0x62
  420bad:	frstor [ebx+0x28]
  420bb0:	ret    0x985
  420bb3:	jae    0x420b41
  420bb5:	and    ecx,DWORD PTR [ebx+0x43]
  420bb8:	rcr    BYTE PTR [edx+0xc],cl
  420bbb:	fimul  WORD PTR [edi+edx*1+0x6d85ffcd]
  420bc2:	retf   
  420bc3:	sub    BYTE PTR [edx-0x33],0x50
  420bc7:	xor    DWORD PTR [eax+0x7becd99b],ebx
  420bcd:	mov    esp,0x92ca341a
  420bd2:	sub    al,0x1f
  420bd4:	jg     0x420b56
  420bd6:	push   esi
  420bd7:	mov    ds:0x77d1d0c0,al
  420bdc:	or     BYTE PTR [edi+0x3c3ba329],ah
  420be2:	push   ecx
  420be3:	pusha  
  420be4:	dec    eax
  420be5:	loope  0x420c42
  420be7:	push   edi
  420be8:	jl     0x420b90
  420bea:	adc    al,0xc3
  420bec:	jl     0x420bfa
  420bee:	jae    0x420beb
  420bf0:	iret   
  420bf1:	dec    ebx
  420bf2:	fdiv   DWORD PTR [ecx-0x2dfcf61d]
  420bf8:	xchg   edx,eax
  420bf9:	aad    0x1c
  420bfb:	daa    
  420bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bfd:	iret   
  420bfe:	stos   DWORD PTR es:[edi],eax
  420bff:	inc    eax
  420c00:	loopne 0x420bcc
  420c02:	and    eax,DWORD PTR [ebx-0x4f]
  420c05:	ret    
  420c06:	sub    esp,DWORD PTR [edi+0x3]
  420c09:	mov    ah,BYTE PTR gs:[eax-0x541db6c0]
  420c10:	js     0x420bdf
  420c12:	outs   dx,DWORD PTR ds:[esi]
  420c13:	mov    esi,0x1e38b024
  420c18:	js     0x420c21
  420c1a:	and    bl,BYTE PTR [eax-0x46]
  420c1d:	gs cmc 
  420c1f:	add    al,0x1b
  420c21:	test   eax,0xb7cf3e69
  420c26:	pop    edi
  420c27:	imul   ecx,DWORD PTR [ecx-0x3e6e3c4f],0x333a8199
  420c31:	les    ecx,FWORD PTR [ebx]
  420c33:	(bad)  [ecx-0x70]
  420c36:	(bad)  
  420c37:	mov    eax,ds:0xfb643ae2
  420c3c:	jecxz  0x420cbd
  420c3e:	es aas 
  420c40:	aaa    
  420c41:	outs   dx,BYTE PTR ds:[esi]
  420c42:	btr    DWORD PTR [ecx+0x1b1507c7],ecx
  420c49:	aam    0xef
  420c4b:	clc    
  420c4c:	std    
  420c4d:	mov    esp,0x6650c840
  420c52:	ss xor al,0xc2
  420c55:	adc    al,0xb8
  420c57:	mov    esi,0x2c85c7af
  420c5c:	pop    edi
  420c5d:	std    
  420c5e:	adc    al,0x6f
  420c60:	sbb    BYTE PTR [ecx],cl
  420c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c63:	loopne 0x420cca
  420c65:	arpl   WORD PTR [ebx+eiz*2],di
  420c68:	mov    esi,0xd22ac0da
  420c6d:	stos   DWORD PTR es:[edi],eax
  420c6e:	add    ah,BYTE PTR [edi*2-0x18d09728]
  420c75:	pop    edi
  420c76:	mov    edi,DWORD PTR [eax]
  420c78:	inc    edi
  420c79:	and    al,0xbe
  420c7b:	aam    0x16
  420c7d:	(bad)  
  420c7e:	lahf   
  420c7f:	xor    DWORD PTR [ecx-0x45be273c],esi
  420c85:	scas   eax,DWORD PTR es:[edi]
  420c86:	add    cl,BYTE PTR [ecx-0x41]
  420c89:	out    0x57,eax
  420c8b:	mov    ?,ebx
  420c8d:	mov    ch,0x64
  420c8f:	aas    
  420c90:	jle    0x420cd7
  420c92:	pop    es
  420c93:	shr    DWORD PTR [edx+esi*4],cl
  420c96:	mov    bh,0xcf
  420c98:	sti    
  420c99:	xor    al,0xcf
  420c9b:	pusha  
  420c9c:	in     al,dx
  420c9d:	push   edx
  420c9e:	xor    eax,0xda40e813
  420ca3:	outs   dx,BYTE PTR ds:[esi]
  420ca4:	pop    ebp
  420ca5:	mov    dh,0x26
  420ca7:	xor    al,0xf2
  420ca9:	test   eax,0x8b839bd9
  420cae:	and    bl,BYTE PTR [edi-0x33f05c5b]
  420cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb5:	adc    eax,0x476fddda
  420cba:	xchg   cl,dl
  420cbc:	sbb    DWORD PTR [esi+0x3b],ebx
  420cbf:	inc    edx
  420cc0:	loopne 0x420cbd
  420cc2:	sub    eax,0x55fed3b9
  420cc7:	cmp    DWORD PTR [ebx-0x28],ebp
  420cca:	dec    esi
  420ccb:	mov    esi,0x882cf125
  420cd0:	sbb    eax,ebp
  420cd2:	pushf  
  420cd3:	ins    DWORD PTR es:[edi],dx
  420cd4:	frndint 
  420cd6:	or     eax,0xa3bb832a
  420cdb:	ins    DWORD PTR es:[edi],dx
  420cdc:	pop    ds
  420cdd:	outs   dx,BYTE PTR ds:[esi]
  420cde:	jnp    0x420d46
  420ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce1:	scas   eax,DWORD PTR es:[edi]
  420ce2:	sub    al,0xd0
  420ce5:	jae    0x420d20
  420ce7:	mov    bl,0x8f
  420ce9:	out    dx,al
  420cea:	xchg   esp,eax
  420ceb:	hlt    
  420cec:	mov    bh,0x66
  420cee:	adc    esi,esi
  420cf0:	add    DWORD PTR [eax-0x54],ecx
  420cf3:	(bad)  
  420cf4:	push   cs
  420cf5:	sub    al,0x27
  420cf7:	repz sti 
  420cf9:	adc    eax,0x21eedef2
  420cfe:	sub    eax,0x429c4ccb
  420d03:	into   
  420d04:	cld    
  420d05:	test   esi,0x25871391
  420d0b:	push   es
  420d0c:	mov    BYTE PTR [ebx-0xddd1441],cl
  420d12:	addr16 (bad) 
  420d14:	fcomp  DWORD PTR [ecx-0x7d59f2dd]
  420d1a:	aam    0x9f
  420d1c:	aas    
  420d1d:	iret   
  420d1e:	xor    eax,DWORD PTR [esi]
  420d20:	mov    dl,0x82
  420d22:	and    BYTE PTR [ebx+edi*1],cl
  420d25:	nop
  420d26:	mov    dl,0xf9
  420d28:	jge    0x420d83
  420d2a:	les    dx,DWORD PTR [ecx+0x63c1dfcd]
  420d31:	sub    eax,0x23191c1f
  420d36:	push   ebp
  420d37:	push   0xb501d650
  420d3c:	jns    0x420cc3
  420d3e:	data16 (bad) 
  420d40:	rol    DWORD PTR [esi-0x69],0x6c
  420d44:	outs   dx,DWORD PTR ds:[esi]
  420d45:	mov    ds:0x668b354a,al
  420d4a:	cdq    
  420d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4c:	cs pushf 
  420d4e:	or     BYTE PTR [esi],dh
  420d50:	frstpm(287 only) 
  420d52:	mov    al,0xa
  420d54:	stc    
  420d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d56:	xchg   BYTE PTR [eiz*2-0x3a5feb1a],bl
  420d5d:	or     edx,DWORD PTR [ecx]
  420d5f:	xchg   edx,eax
  420d60:	jno    0x420d10
  420d62:	dec    eax
  420d63:	ins    DWORD PTR es:[edi],dx
  420d64:	jnp    0x420d6f
  420d66:	lds    ebp,FWORD PTR [ebx+0x50]
  420d69:	fs mov eax,0x1633d83f
  420d6f:	dec    ecx
  420d70:	mov    BYTE PTR [esi],ch
  420d72:	jae    0x420d61
  420d74:	adc    al,0xf
  420d76:	mov    al,0x15
  420d78:	sahf   
  420d79:	pop    ss
  420d7a:	xchg   ecx,eax
  420d7b:	and    al,0x91
  420d7d:	das    
  420d7e:	test   al,0x54
  420d80:	and    BYTE PTR [edi-0x3d],dl
  420d83:	das    
  420d84:	inc    ecx
  420d85:	aam    0xd4
  420d87:	cmp    DWORD PTR [esi],edi
  420d89:	repnz xchg ebx,eax
  420d8b:	cli    
  420d8c:	push   ss
  420d8d:	and    DWORD PTR [edi+0x4d8ca87e],ecx
  420d93:	cmp    bh,dl
  420d95:	lds    esp,FWORD PTR [edi-0x7f]
  420d98:	sub    DWORD PTR [esi-0x4d1ba664],esi
  420d9e:	push   edx
  420d9f:	pop    esp
  420da0:	int    0x38
  420da2:	dec    eax
  420da3:	(bad)  
  420da4:	cmc    
  420da5:	dec    edi
  420da6:	xchg   DWORD PTR [ebp+0x42d7b50d],ebx
  420dac:	(bad)  
  420dad:	popf   
  420dae:	or     al,0x7f
  420db0:	xchg   edx,eax
  420db1:	popa   
  420db2:	push   ebp
  420db3:	push   es
  420db4:	imul   esi,DWORD PTR [ebx-0x9726a17],0xffffffd4
  420dbb:	test   ah,ch
  420dbd:	mov    eax,0x67a5bee4
  420dc2:	pop    eax
  420dc3:	push   edx
  420dc4:	pmulhuw mm0,QWORD PTR ds:[eax-0x7]
  420dc9:	sub    al,0xb1
  420dcb:	pop    edi
  420dcc:	mov    cl,0x62
  420dce:	pop    ds
  420dcf:	test   al,0xa5
  420dd1:	cmp    edx,eax
  420dd3:	inc    esi
  420dd4:	and    BYTE PTR [esi+0x24d41576],bh
  420dda:	push   es
  420ddb:	sub    ecx,DWORD PTR [eax-0x7c]
  420dde:	aad    0x52
  420de0:	xchg   ebx,eax
  420de1:	std    
  420de2:	aad    0xf1
  420de4:	xchg   edx,eax
  420de5:	xchg   ecx,eax
  420de6:	mov    eax,ds:0x50ffafb1
  420deb:	and    eax,0xf1dd5c91
  420df0:	rcr    dl,cl
  420df2:	fs mov edi,0x94beb380
  420df8:	dec    ebx
  420df9:	int    0xb
  420dfb:	xchg   esi,eax
  420dfc:	imul   edx,DWORD PTR [eax],0xbc8f2f54
  420e02:	xchg   BYTE PTR ds:0x7f542e23,ah
  420e08:	cmp    eax,0xfe6a4212
  420e0d:	add    BYTE PTR [ebp-0x19f6912f],0xc2
  420e14:	xor    esp,ebx
  420e16:	out    dx,eax
  420e17:	in     eax,dx
  420e18:	loop   0x420de9
  420e1a:	lahf   
  420e1b:	fs jge 0x420df0
  420e1e:	xlat   BYTE PTR ds:[ebx]
  420e1f:	push   ebx
  420e20:	arpl   di,ax
  420e22:	retf   
  420e23:	scas   eax,DWORD PTR es:[edi]
  420e24:	jge    0x420e8a
  420e26:	mov    bh,0x36
  420e28:	test   eax,edi
  420e2a:	and    BYTE PTR [ebx],cl
  420e2c:	scas   eax,DWORD PTR es:[edi]
  420e2d:	hlt    
  420e2e:	iret   
  420e2f:	push   edi
  420e30:	inc    edx
  420e31:	fwait
  420e32:	lahf   
  420e33:	fnstsw WORD PTR [edx-0x703cc20a]
  420e39:	outs   dx,BYTE PTR ds:[esi]
  420e3a:	fs jno 0x420e9a
  420e3d:	pop    ss
  420e3e:	inc    edx
  420e3f:	test   al,0x41
  420e41:	dec    eax
  420e42:	cmp    al,dh
  420e44:	xchg   ebx,eax
  420e45:	loope  0x420e40
  420e47:	jo     0x420ebd
  420e49:	repnz neg DWORD PTR [esp+edx*1-0x35]
  420e4e:	jl     0x420e39
  420e50:	int3   
  420e51:	pop    es
  420e52:	stc    
  420e53:	adc    al,0xbd
  420e55:	andnps xmm6,xmm1
  420e58:	neg    DWORD PTR [edx]
  420e5a:	bound  eax,QWORD PTR [ecx-0x1aadcf8c]
  420e60:	inc    ebx
  420e61:	loopne 0x420e6a
  420e63:	sub    edx,DWORD PTR [eax-0x19]
  420e66:	jno    0x420e80
  420e68:	mov    esi,0x78681972
  420e6d:	xchg   ebx,eax
  420e6e:	enter  0xa46,0x57
  420e72:	sub    DWORD PTR [esp+esi*1-0x7b8d0fac],edx
  420e79:	scas   al,BYTE PTR es:[edi]
  420e7a:	(bad)  
  420e7c:	mov    dl,bh
  420e7e:	pop    ebx
  420e7f:	jmp    0x420e17
  420e81:	sbb    eax,0x38463367
  420e86:	retf   0x98a1
  420e89:	mov    ds:0x47e7aa0,eax
  420e8e:	(bad)  
  420e90:	call   0x53d6:0xe06dec0e
  420e97:	scas   eax,DWORD PTR es:[edi]
  420e98:	lods   al,BYTE PTR ds:[esi]
  420e99:	rcl    BYTE PTR [edi-0x1ba3680f],1
  420e9f:	pop    edx
  420ea0:	xchg   DWORD PTR ss:[edi],edi
  420ea3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420ea5:	mov    ecx,0x48e85862
  420eaa:	cdq    
  420eab:	dec    esi
  420eac:	ja     0x420eea
  420eae:	add    esp,DWORD PTR [edx-0x6b1bab64]
  420eb4:	push   esp
  420eb5:	mov    al,ds:0xbe5e084a
  420eba:	out    0x54,al
  420ebc:	mov    bh,0x64
  420ebe:	les    esi,FWORD PTR [ebp-0x77c66323]
  420ec4:	inc    edi
  420ec5:	adc    dh,BYTE PTR [eax]
  420ec7:	dec    edi
  420ec8:	push   es
  420ec9:	push   ss
  420eca:	fcmovne st,st(0)
  420ecc:	je     0x420f27
  420ece:	xchg   ebp,eax
  420ecf:	mov    bh,0xa
  420ed1:	out    0x49,al
  420ed3:	into   
  420ed4:	mov    ds:0xeab31cb0,al
  420ed9:	cwde   
  420eda:	int    0x87
  420edc:	cmp    ecx,DWORD PTR [ecx+ebp*2]
  420edf:	mov    DWORD PTR [edx],edi
  420ee1:	or     al,0x4e
  420ee3:	push   esi
  420ee4:	aad    0x16
  420ee6:	push   edi
  420ee7:	in     al,dx
  420ee8:	mov    eax,ds:0x86b7af1e
  420eed:	cmc    
  420eee:	jp     0x420f5f
  420ef0:	stos   DWORD PTR es:[edi],eax
  420ef1:	test   al,0x5e
  420ef3:	out    0xce,eax
  420ef5:	int3   
  420ef6:	cmp    ebp,DWORD PTR [ecx]
  420ef8:	or     BYTE PTR [esp+eiz*8],bh
  420efb:	add    ecx,DWORD PTR [ebp-0x11]
  420efe:	mov    ebp,0x99ecc73e
  420f03:	cmp    al,0xf5
  420f05:	test   DWORD PTR [esi-0x1b083cbb],esi
  420f0b:	in     al,0x29
  420f0d:	push   esp
  420f0e:	jmp    0xcfa6d25b
  420f13:	int    0x60
  420f15:	and    eax,0x590d2823
  420f1a:	test   al,0xc4
  420f1c:	fmul   st,st(2)
  420f1e:	call   0xc98a9e41
  420f23:	scas   eax,DWORD PTR es:[edi]
  420f24:	out    dx,al
  420f25:	aam    0x90
  420f27:	mov    esi,0xd88a21f5
  420f2c:	mov    edi,0x1da67298
  420f31:	mov    edi,0x42278c0e
  420f36:	adc    eax,eax
  420f38:	inc    esp
  420f39:	jbe    0x420ebc
  420f3b:	xor    ah,BYTE PTR [eax]
  420f3d:	inc    esi
  420f3e:	iret   
  420f3f:	cmc    
  420f40:	xchg   al,ah
  420f42:	xchg   ecx,eax
  420f43:	pusha  
  420f44:	lods   al,BYTE PTR ds:[esi]
  420f45:	lock (bad) 
  420f47:	jge    0x420f22
  420f49:	sub    al,0xf0
  420f4b:	jge    0x420f8e
  420f4d:	push   0x72012dcb
  420f52:	add    al,0x34
  420f54:	xor    eax,0xb48986cb
  420f59:	cmp    ch,BYTE PTR [ecx]
  420f5b:	out    dx,eax
  420f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5d:	sub    ebx,DWORD PTR [eax]
  420f5f:	stos   DWORD PTR es:[edi],eax
  420f60:	test   DWORD PTR [ebx],ebp
  420f62:	jle    0x420f51
  420f64:	inc    ecx
  420f65:	call   0x20a8:0x419fbca1
  420f6c:	(bad)  
  420f6d:	icebp  
  420f6e:	enter  0x662a,0x8f
  420f72:	ins    DWORD PTR es:[edi],dx
  420f73:	mov    esp,0x8023cc86
  420f78:	repz sti 
  420f7a:	xchg   BYTE PTR [esi+0x60],dl
  420f7d:	sub    edi,DWORD PTR [esi]
  420f7f:	mov    bl,0x3b
  420f81:	sbb    eax,0x401c9de1
  420f86:	nop
  420f87:	or     ebx,esi
  420f89:	cwde   
  420f8a:	and    DWORD PTR [ecx],ebx
  420f8c:	loop   0x421002
  420f8e:	cmp    ch,BYTE PTR ds:0xbe891abf
  420f94:	data16 xor cl,BYTE PTR [esi+0x7a]
  420f98:	add    DWORD PTR [ebx-0x15],edx
  420f9b:	sahf   
  420f9c:	xchg   bh,cl
  420f9e:	xor    eax,0x14124986
  420fa3:	(bad)  
  420fa4:	cmc    
  420fa5:	and    al,0xa3
  420fa7:	add    al,0xb0
  420fa9:	jecxz  0x420fac
  420fab:	pop    es
  420fac:	jae    0x421029
  420fae:	sub    eax,0x4aaf1847
  420fb3:	mov    BYTE PTR [ebx],cl
  420fb5:	addr16 cmp edx,esi
  420fb8:	sub    dl,ch
  420fba:	in     eax,dx
  420fbb:	jbe    0x420fe6
  420fbd:	scas   eax,DWORD PTR es:[edi]
  420fbe:	inc    ebp
  420fbf:	rol    BYTE PTR [ecx-0x22],0x52
  420fc3:	xor    ebp,edi
  420fc5:	adc    dl,cl
  420fc7:	jmp    0x420ff8
  420fc9:	repz push eax
  420fcb:	cmp    eax,DWORD PTR [edi-0x1935f673]
  420fd1:	cdq    
  420fd2:	rol    DWORD PTR [bp+di+0x5f5a],cl
  420fd7:	popa   
  420fd8:	lds    esi,FWORD PTR [eax]
  420fda:	lods   eax,DWORD PTR ds:[esi]
  420fdb:	test   DWORD PTR [edi-0x1dc46f1f],0x7128ac5c
  420fe5:	lods   al,BYTE PTR ds:[esi]
  420fe6:	mov    eax,ds:0xe1f39ebb
  420feb:	jno    0x420fec
  420fed:	mov    eax,ds:0xd8382aa9
  420ff2:	mov    ebp,0xd9843101
  420ff7:	test   eax,0x9a935de8
  420ffc:	sbb    ch,0x7d
  420fff:	fidiv  DWORD PTR [esi]
  421001:	mov    ebx,0xfcffd0c1
  421006:	jne    0x421022
  421008:	dec    esi
  421009:	inc    ebp
  42100a:	xor    cl,BYTE PTR [ebx+eiz*2-0x3e70308d]
  421011:	gs ret 0x44c1
  421015:	inc    eax
  421016:	loopne 0x420fb8
  421018:	mov    bh,0x4
  42101a:	fldenv [edx]
  42101c:	mov    ecx,0xbb99a3d6
  421021:	pop    ecx
  421022:	and    dh,BYTE PTR [ecx-0x7f]
  421025:	lds    edi,FWORD PTR [ecx+0x67]
  421028:	or     ecx,eax
  42102a:	xor    edx,DWORD PTR [edi+0x63]
  42102d:	std    
  42102e:	jnp    0x420fbb
  421030:	jae    0x420fe8
  421032:	fisub  WORD PTR [ebp+0x19b9a14f]
  421038:	mov    BYTE PTR [edx-0x378cb5a8],ah
  42103e:	test   BYTE PTR ds:[edi+0x20],al
  421042:	ror    DWORD PTR [edx],cl
  421044:	cmp    eax,0xe5837180
  421049:	mov    ah,BYTE PTR [ecx]
  42104b:	pavgw  mm1,mm5
  42104e:	xor    ecx,ebp
  421050:	pop    esi
  421051:	imul   esi,DWORD PTR [esi+eiz*8-0x3fe1861f],0xffffffb5
  421059:	dec    esp
  42105a:	mov    ah,0xd4
  42105c:	xchg   esp,eax
  42105d:	retf   
  42105e:	or     al,0xa7
  421060:	lock dec edi
  421062:	mov    ?,WORD PTR [ebx+ebp*2-0x56]
  421066:	pop    edx
  421067:	dec    esp
  421068:	add    al,0xd
  42106a:	add    al,0xc2
  42106c:	in     eax,dx
  42106d:	xlat   BYTE PTR ds:[ebx]
  42106e:	ds mov ecx,0xdc4c3131
  421074:	mov    edi,0xefdf2dc7
  421079:	stos   BYTE PTR es:[edi],al
  42107a:	loope  0x421008
  42107c:	cli    
  42107d:	add    DWORD PTR [esi+0x2350b4ad],eax
  421083:	adc    eax,0xc1e9c5a3
  421088:	nop
  421089:	jp     0x42106f
  42108b:	pop    eax
  42108c:	jp     0x421109
  42108e:	pop    esi
  42108f:	push   esp
  421090:	inc    edx
  421091:	cwde   
  421092:	jno    0x421065
  421094:	sub    DWORD PTR [ebp+0x4fba28d1],esi
  42109a:	jecxz  0x421114
  42109c:	data16 int 0x9d
  42109f:	sbb    bh,BYTE PTR [ecx]
  4210a1:	test   eax,0xfd3f0d6
  4210a6:	mov    eax,0xf6ea6d7d
  4210ab:	in     eax,0xa7
  4210ad:	sub    eax,0xfe76b592
  4210b2:	mov    cl,0x4d
  4210b4:	inc    ebp
  4210b5:	scas   eax,DWORD PTR es:[edi]
  4210b6:	stc    
  4210b7:	fistp  DWORD PTR [edi]
  4210b9:	imul   ebx,DWORD PTR [ecx-0x5f036afa],0x48
  4210c0:	jbe    0x4210d2
  4210c2:	int    0x8a
  4210c4:	mov    ?,WORD PTR [eax-0x1fbd1d31]
  4210ca:	cmc    
  4210cb:	pop    ebx
  4210cc:	cdq    
  4210cd:	(bad)  
  4210ce:	scas   al,BYTE PTR es:[edi]
  4210cf:	fdivr  DWORD PTR [eax]
  4210d1:	push   ebp
  4210d2:	mov    ah,0x32
  4210d4:	pop    ss
  4210d5:	sbb    DWORD PTR [ebx+0x26],0xfffffff1
  4210d9:	adc    eax,0x90d528e9
  4210df:	adc    eax,edx
  4210e1:	and    al,0xc5
  4210e3:	xchg   ebx,eax
  4210e4:	fnstcw WORD PTR [eax]
  4210e6:	cmp    ch,BYTE PTR [esi]
  4210e8:	dec    ecx
  4210e9:	jmp    0xe2b94431
  4210ee:	cli    
  4210ef:	retf   
  4210f0:	adc    cl,BYTE PTR ds:0xd38d67cb
  4210f6:	in     eax,0x97
  4210f8:	jmp    0x13a:0x9cacfa42
  4210ff:	xchg   edi,eax
  421100:	(bad)  
  421101:	push   esi
  421102:	(bad)  
  421104:	mov    ebp,0xc23f0b36
  421109:	repz in al,0x6
  42110c:	loop   0x421148
  42110e:	mov    ebx,0xa9a0ca79
  421113:	stos   BYTE PTR es:[edi],al
  421114:	inc    ecx
  421115:	ins    DWORD PTR es:[edi],dx
  421116:	cs popa 
  421118:	scas   eax,DWORD PTR es:[edi]
  421119:	(bad)  
  42111a:	mov    ch,0x7c
  42111c:	sar    DWORD PTR [eax],1
  42111e:	icebp  
  42111f:	adc    dh,al
  421121:	bound  ebp,QWORD PTR [eax+0x34]
  421124:	dec    esp
  421125:	fwait
  421126:	sbb    dh,cl
  421128:	in     eax,0x9
  42112a:	or     eax,0x8fae35b0
  42112f:	hlt    
  421130:	push   0xb18d65f5
  421135:	fnsave [edi+ecx*4+0x62]
  421139:	shld   ebx,ebx,0xcc
  42113d:	add    DWORD PTR [ebx+0x3e0da533],ecx
  421143:	dec    ebx
  421144:	mov    cl,0xf1
  421146:	outs   dx,BYTE PTR ds:[esi]
  421147:	xchg   edi,eax
  421148:	inc    ebp
  421149:	sti    
  42114a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114b:	pop    ss
  42114c:	retf   0x394
  42114f:	shr    DWORD PTR [ebx-0x52],cl
  421152:	call   0xde25:0x8f308b83
  421159:	bound  ecx,QWORD PTR [ebx]
  42115b:	fisub  WORD PTR [edi+0x16]
  42115e:	jno    0x421176
  421160:	cdq    
  421161:	push   ebp
  421162:	int    0xde
  421164:	les    edi,FWORD PTR [eax]
  421166:	scas   al,BYTE PTR es:[edi]
  421167:	jnp    0x4211a8
  421169:	out    0x13,eax
  42116b:	clc    
  42116c:	mov    eax,ds:0x9bcd4032
  421171:	cdq    
  421172:	sahf   
  421173:	and    bl,BYTE PTR [eax]
  421175:	xor    eax,0x1bac1bf6
  42117a:	mov    ebx,0x2390b3f5
  42117f:	fwait
  421180:	inc    esi
  421181:	sub    eax,0x901085a0
  421186:	inc    esp
  421187:	and    dl,BYTE PTR [esi+esi*2-0x4da16666]
  42118e:	or     eax,0x6001b62b
  421193:	pop    ecx
  421194:	xchg   esi,eax
  421195:	(bad)  
  421197:	mov    bl,0x88
  421199:	push   edx
  42119a:	jb     0x421132
  42119c:	jb     0x421123
  42119e:	or     al,0x88
  4211a0:	mov    bh,0x3b
  4211a2:	(bad)  
  4211a3:	fsubr  QWORD PTR [esi]
  4211a5:	ja     0x42119a
  4211a7:	push   esi
  4211a8:	jle    0x421205
  4211aa:	mov    DWORD PTR [ebx+eax*1+0x2dbf3079],0xb22a8422
  4211b5:	xchg   edi,eax
  4211b6:	adc    eax,eax
  4211b8:	inc    DWORD PTR [ebx+0x39]
  4211bb:	pop    esi
  4211bc:	(bad)  
  4211bd:	xor    esi,DWORD PTR ds:0xbe901eb
  4211c3:	std    
  4211c4:	fnstcw WORD PTR [eax-0x37]
  4211c7:	loopne 0x421246
  4211c9:	jg     0x421174
  4211cb:	and    esi,DWORD PTR [ecx-0x3e]
  4211ce:	out    0xc9,al
  4211d0:	(bad)  
  4211d1:	cmp    al,0x8a
  4211d3:	inc    ebx
  4211d4:	sti    
  4211d5:	mov    edi,0x6ea2665f
  4211da:	call   0x46ce:0xd3f605dc
  4211e1:	push   cs
  4211e2:	jns    0x4211a5
  4211e4:	cmp    al,0xf1
  4211e6:	jl     0x421234
  4211e8:	cmp    eax,0xa0fc41ae
  4211ed:	and    al,0xec
  4211ef:	jbe    0x421255
  4211f1:	adc    eax,0xc9004828
  4211f6:	test   DWORD PTR [ebp+0xa],esp
  4211f9:	in     eax,0x9d
  4211fb:	fimul  WORD PTR [eax]
  4211fd:	mov    ecx,0xda86221
  421202:	div    DWORD PTR [ecx+0x51]
  421205:	inc    DWORD PTR [ecx]
  421207:	das    
  421208:	pop    ecx
  421209:	adc    al,0x39
  42120b:	push   0x37
  42120d:	jge    0x4211e7
  42120f:	xchg   BYTE PTR [esi+0x3e],dl
  421212:	fisub  WORD PTR [ebx-0x34]
  421215:	(bad)  
  421216:	mov    al,0xb4
  421218:	inc    ecx
  421219:	data16 shl BYTE PTR [ecx],0xb8
  42121d:	into   
  42121e:	das    
  42121f:	mov    ebx,DWORD PTR [eax]
  421221:	adc    edi,esi
  421223:	cwde   
  421224:	ror    al,0xb
  421227:	push   ss
  421228:	aaa    
  421229:	cmp    cl,ah
  42122b:	or     eax,0x5bcd62e7
  421230:	jae    0x9bc57366
  421236:	sbb    eax,DWORD PTR [edx]
  421238:	push   esi
  421239:	(bad)  
  42123a:	hlt    
  42123b:	jo     0x42122e
  42123d:	jb     0x421226
  42123f:	dec    ebp
  421240:	xor    edx,DWORD PTR [ebx+0x153d6f65]
  421246:	pusha  
  421247:	xchg   esi,eax
  421248:	int3   
  421249:	mov    DWORD PTR [ebx],edi
  42124b:	mov    al,0x6e
  42124d:	inc    ecx
  42124e:	(bad)  
  42124f:	jp     0x421273
  421251:	fild   WORD PTR [eax-0x49cce13a]
  421257:	(bad)  
  421258:	in     eax,0x8
  42125a:	push   ebx
  42125b:	inc    esp
  42125c:	not    DWORD PTR [ebx-0x64]
  42125f:	mov    edx,0xfda7f839
  421264:	ss mov edi,0x76eea448
  42126a:	pop    esi
  42126b:	into   
  42126c:	sbb    dl,ah
  42126e:	jno    0x421240
  421270:	fmul   DWORD PTR [edi-0x48]
  421273:	jbe    0x4212d0
  421275:	cs stc 
  421277:	cmp    eax,0xf76014b8
  42127c:	lods   eax,DWORD PTR ds:[esi]
  42127d:	fmul   st(0),st
  42127f:	pop    eax
  421280:	scas   eax,DWORD PTR es:[edi]
  421281:	div    DWORD PTR [eax+0xb06f949]
  421287:	aam    0x5a
  421289:	arpl   WORD PTR [esi+esi*4-0x32b950f3],bx
  421290:	pop    eax
  421291:	mov    esi,0x65847848
  421296:	mov    eax,DWORD PTR [eax+0x8]
  421299:	sar    DWORD PTR [ecx-0x6b],1
  42129c:	and    al,BYTE PTR [ecx-0x3c]
  42129f:	dec    sp
  4212a1:	add    BYTE PTR [edi],0xd0
  4212a4:	sub    eax,0xa9ccb59e
  4212a9:	lea    ebp,ds:0xd8f463b9
  4212af:	push   edx
  4212b0:	ror    DWORD PTR [edi-0xc5b8b4c],0xd2
  4212b7:	cmp    eax,0x36ab2d46
  4212bc:	fwait
  4212bd:	jnp    0x4212ac
  4212bf:	add    DWORD PTR [ebx-0x16],eax
  4212c2:	rol    DWORD PTR [ecx-0x5a1e7c0e],1
  4212c8:	fmul   DWORD PTR ds:0xd4329d1e
  4212ce:	inc    ecx
  4212cf:	ffreep st(4)
  4212d1:	loopne 0x421299
  4212d3:	push   ebx
  4212d4:	jp     0x42125e
  4212d6:	push   ebp
  4212d7:	out    dx,eax
  4212d8:	sbb    edx,0xffffff94
  4212db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212dc:	cmp    al,0xb0
  4212de:	push   ebx
  4212df:	dec    eax
  4212e0:	push   ecx
  4212e1:	jge    0x421328
  4212e3:	jb     0x4212d8
  4212e5:	adc    dh,BYTE PTR [edx]
  4212e7:	imul   eax,DWORD PTR [ecx-0x26],0x768eeead
  4212ee:	int    0x95
  4212f0:	adc    al,0x7
  4212f2:	xlat   BYTE PTR ds:[ebx]
  4212f3:	push   esp
  4212f4:	add    BYTE PTR [ebx],dh
  4212f6:	cld    
  4212f7:	mov    esi,0xd98ed6e0
  4212fc:	shl    ecx,cl
  4212fe:	jo     0x42131d
  421300:	js     0x4212c7
  421302:	mov    ebx,0xc85be7e4
  421307:	popa   
  421308:	jge    0x421302
  42130a:	and    DWORD PTR [eax+0x6df2aa0c],edi
  421310:	imul   ebp,eax,0xffffff8e
  421313:	inc    edx
  421314:	sub    al,0x5e
  421316:	stos   BYTE PTR es:[edi],al
  421317:	push   esi
  421318:	dec    ecx
  421319:	and    al,0x1b
  42131b:	ror    DWORD PTR [ecx-0x9],1
  42131e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42131f:	sbb    BYTE PTR [edx+0x14],0x5d
  421323:	(bad)  
  421324:	xor    al,0x73
  421326:	jg     0x4212d0
  421328:	mov    gs,WORD PTR [esp+esi*4+0x6a]
  42132c:	call   0xfc84:0x7e8666ce
  421333:	test   eax,0x559ec0
  421338:	frstor gs:[edx]
  42133b:	mov    edx,0x7a1dac3f
  421340:	mov    bl,0xc8
  421342:	rcl    ecx,0x5b
  421345:	push   ebx
  421346:	test   al,0x23
  421348:	adc    cl,dh
  42134a:	aas    
  42134b:	jne    0x42132f
  42134d:	inc    edx
  42134e:	sub    BYTE PTR [esi-0x76687967],dh
  421354:	push   ebp
  421355:	cmp    ah,BYTE PTR [edx-0x485357a6]
  42135b:	xor    DWORD PTR [edx+eax*8+0x23],ebx
  42135f:	das    
  421360:	jmp    0x421370
  421362:	ret    0xef5b
  421365:	push   esp
  421366:	xor    eax,0x49be213
  42136b:	or     edx,edx
  42136d:	dec    eax
  42136e:	stc    
  42136f:	out    dx,al
  421370:	add    DWORD PTR [esi],ecx
  421372:	push   esp
  421373:	push   ecx
  421374:	cmp    edi,DWORD PTR [edx]
  421376:	xor    eax,0xfee4f47e
  42137b:	pusha  
  42137c:	mov    dl,ah
  42137e:	das    
  42137f:	test   DWORD PTR [esi-0x1f],0x3c4f9d0a
  421386:	test   BYTE PTR ds:0xb3aec255,cl
  42138c:	test   eax,0xe92c2241
  421391:	cmp    eax,0x2f1badce
  421396:	neg    ah
  421398:	cmp    dl,ch
  42139a:	fcmovne st,st(6)
  42139c:	(bad)  
  42139d:	mov    cl,0x6e
  42139f:	jnp    0x4213c6
  4213a1:	sbb    dl,bl
  4213a3:	popa   
  4213a4:	out    0xcc,eax
  4213a6:	dec    edx
  4213a7:	pop    ebp
  4213a9:	add    eax,0x56975102
  4213ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213af:	mov    ds,WORD PTR [ebx]
  4213b1:	pop    ds
  4213b2:	jns    0x42140a
  4213b4:	mov    bl,0x4
  4213b6:	cmp    DWORD PTR [edx],edi
  4213b8:	dec    esi
  4213b9:	cwde   
  4213ba:	dec    esi
  4213bb:	cmp    dl,bh
  4213bd:	fbld   TBYTE PTR [ebp+0x6a736858]
  4213c3:	xor    edx,edi
  4213c5:	and    esi,edx
  4213c7:	fcom   DWORD PTR [ebp-0x6c]
  4213ca:	xlat   BYTE PTR cs:[ebx]
  4213cc:	rcl    BYTE PTR [edi-0x49],cl
  4213cf:	gs enter 0x65f3,0x63
  4213d4:	outs   dx,BYTE PTR ds:[esi]
  4213d5:	mov    edi,0x208fa560
  4213da:	inc    edi
  4213db:	xchg   ebx,eax
  4213dc:	pop    ebp
  4213dd:	(bad)  
  4213de:	ins    BYTE PTR es:[edi],dx
  4213df:	mov    WORD PTR ds:[eax+0x74],?
  4213e3:	out    dx,al
  4213e4:	xchg   bl,ah
  4213e6:	cmp    BYTE PTR [esi-0x342e4859],0x6c
  4213ed:	div    DWORD PTR [edx]
  4213ef:	in     eax,dx
  4213f0:	adc    eax,0x928d5bcc
  4213f5:	and    al,BYTE PTR [edx]
  4213f7:	je     0x4213e8
  4213f9:	rcl    dl,1
  4213fb:	nop
  4213fc:	jg     0x4213c2
  4213fe:	mov    edi,DWORD PTR [esi-0x6b]
  421401:	xchg   esp,eax
  421402:	mov    dl,BYTE PTR [bx+di-0x1d]
  421406:	imul   edx,esi,0xffffff98
  421409:	(bad)  [eax+0x1]
  42140c:	outs   dx,DWORD PTR ds:[esi]
  42140d:	out    0x1e,eax
  42140f:	rcl    edi,0xae
  421412:	push   ebp
  421413:	inc    esi
  421414:	xchg   esp,eax
  421415:	int    0xea
  421417:	(bad)  
  421419:	aaa    
  42141a:	sar    ch,1
  42141c:	xor    eax,0x403ae6df
  421421:	adc    eax,0xdc24968c
  421426:	jecxz  0x42148d
  421428:	add    al,0x5b
  42142a:	xor    al,0x2c
  42142c:	xor    edi,DWORD PTR [edx+0x41]
  42142f:	adc    al,0x68
  421431:	mov    gs,WORD PTR [eax-0x6d36ba51]
  421437:	in     al,dx
  421438:	in     al,dx
  421439:	mov    ch,0x75
  42143b:	ror    bl,0x41
  42143e:	push   ss
  42143f:	push   ecx
  421440:	pop    esp
  421441:	popa   
  421442:	push   eax
  421443:	test   eax,0xa4a11723
  421448:	jb     0x42149e
  42144a:	nop
  42144b:	and    al,0x83
  42144d:	loop   0x42146b
  42144f:	mov    esp,0xc4c4492a
  421454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421455:	clc    
  421456:	jne    0x4213e1
  421458:	retf   
  421459:	adc    eax,0xa0ee6f76
  42145f:	sbb    eax,0xd5759c13
  421464:	hlt    
  421465:	push   esi
  421466:	repz dec ecx
  421468:	ins    DWORD PTR es:[edi],dx
  421469:	ja     0x421417
  42146b:	call   0x6b36:0x1da22220
  421472:	add    esp,0xffffffc1
  421475:	add    DWORD PTR [ebp+ebp*8-0x71e882d1],edx
  42147c:	sbb    al,0x99
  42147e:	adc    eax,0x1e3216d4
  421483:	das    
  421484:	imul   ecx,DWORD PTR [eax+edx*4+0x52],0x29
  421489:	dec    esi
  42148a:	idiv   BYTE PTR [esi+eiz*4+0x257be12a]
  421491:	cs jecxz 0x421480
  421494:	test   eax,0xa3cb71d6
  421499:	lods   eax,DWORD PTR ds:[esi]
  42149a:	sbb    DWORD PTR [edi+0x43fca246],0x43
  4214a1:	loopne 0x4214be
  4214a3:	jmp    0x1dd3b4fd
  4214a8:	pop    ebp
  4214a9:	mov    BYTE PTR [edi-0x5a],ch
  4214ac:	pop    ds
  4214ad:	push   ss
  4214ae:	test   al,ch
  4214b0:	mov    WORD PTR [ebx+0x1d66fc46],ds
  4214b6:	nop    edi
  4214b9:	pusha  
  4214ba:	add    eax,0x5234bc22
  4214bf:	jbe    0x421504
  4214c1:	cmp    DWORD PTR [ecx],ecx
  4214c3:	add    dl,BYTE PTR [edi-0x5e238964]
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x24a5f06d
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x5795402a
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	call   FWORD PTR [eax+0x1d]
  4217eb:	xor    ecx,ebx
  4217ed:	rcl    BYTE PTR [edx],cl
  4217ef:	adc    al,0x24
  4217f1:	jl     0x421855
  4217f3:	out    0x75,eax
  4217f5:	pop    ds
  4217f6:	jmp    0x1412:0xd173a347
  4217fd:	and    al,0x78
  4217ff:	(bad)  
  421800:	out    0x35,eax
  421802:	loopne 0x421819
  421804:	inc    edi
  421805:	mov    ds:0x1412d1cb,eax
  42180a:	and    al,0x78
  42180c:	(bad)  
  42180d:	out    0x75,eax
  42180f:	loopne 0x421826
  421811:	inc    edi
  421812:	mov    ds:0x1412d1cb,eax
  421817:	and    al,0x78
  421819:	(bad)  
  42181a:	out    0x75,eax
  42181c:	loopne 0x421833
  42181e:	inc    edi
  42181f:	mov    ds:0x1412d1cb,eax
  421824:	and    al,0x80
  421826:	(bad)  
  421827:	out    0x75,eax
  421829:	out    dx,al
  42182a:	or     bh,ch
  42182c:	lods   eax,DWORD PTR ds:[esi]
  42182d:	retf   
  42182e:	gs sbb ebx,ecx
  421831:	add    eax,0xb8ab63c0
  421836:	rol    DWORD PTR [ecx+0x2f],0xca
  42183a:	mov    eax,0x4b6662f1
  42183f:	pop    ds
  421840:	adc    BYTE PTR [esi+0x2676c018],al
  421846:	int    0xa5
  421848:	mov    esi,0x1d463466
  42184d:	inc    edx
  42184e:	xchg   ebp,eax
  42184f:	add    BYTE PTR [esi-0x1432d1cb],cl
  421855:	xchg   ebp,eax
  421856:	pop    ebp
  421857:	inc    edi
  421858:	add    al,0x15
  42185a:	or     eax,0x18ce1083
  42185f:	dec    edx
  421860:	test   eax,0x1412d1ef
  421865:	and    al,0x78
  421867:	(bad)  
  421868:	out    0x72,eax
  42186a:	jns    0x421855
  42186c:	push   ds
  42186d:	loopne 0x4218a2
  42186f:	inc    ebx
  421870:	sbb    BYTE PTR [edi-0x24],dl
  421873:	jmp    0x1f1f:0x728da468
  42187a:	mov    bh,0xdb
  42187d:	dec    ebp
  42187e:	in     al,dx
  42187f:	mov    dh,0x72
  421881:	cmp    al,BYTE PTR [edx-0x402815b3]
  421887:	xor    ecx,eax
  421889:	mov    DWORD PTR [edi+0x2d],esi
  42188c:	adc    BYTE PTR cs:[edx-0x6433808b],bl
  421893:	jle    0x42183e
  421895:	lea    ebp,[ecx]
  421897:	sbb    BYTE PTR [esi],0x6e
  42189a:	clc    
  42189b:	jae    0x42188a
  42189d:	aas    
  42189e:	sbb    BYTE PTR [edi-0x2fb416b3],al
  4218a4:	sbb    BYTE PTR [esp+ebx*8-0x16],cl
  4218a8:	push   0x1f738da4
  4218ad:	outs   dx,DWORD PTR ds:[esi]
  4218ae:	pop    edx
  4218af:	pop    ecx
  4218b0:	fld    TBYTE PTR [ebp+0x2f72a4cc]
  4218b6:	pop    ds
  4218b7:	out    0xea,eax
  4218b9:	dec    ebp
  4218ba:	and    bl,BYTE PTR [esi-0x7915263f]
  4218c0:	and    BYTE PTR cs:[edi],al
  4218c3:	out    dx,eax
  4218c4:	jg     0x421868
  4218c6:	in     eax,dx
  4218c7:	aad    0xa9
  4218c9:	xchg   ebx,eax
  4218ca:	mov    ah,0x1d
  4218cc:	push   ds
  4218cd:	data16 xor al,0xed
  4218d1:	daa    
  4218d2:	mov    DWORD PTR [esi+0x2f],esi
  4218d5:	loopne 0x42190a
  4218d7:	inc    ebx
  4218d8:	sbb    BYTE PTR [esp],dl
  4218db:	js     0x42193f
  4218dd:	out    0x75,eax
  4218df:	loopne 0x4218f6
  4218e1:	pop    ss
  4218e2:	out    0xcb,al
  4218e4:	rcr    DWORD PTR [esi+0x15],1
  4218e7:	es js  0x4218ac
  4218ea:	aaa    
  4218eb:	push   ds
  4218ec:	scas   eax,DWORD PTR es:[edi]
  4218ed:	adc    eax,0xd1cba347
  4218f2:	adc    dl,BYTE PTR [esp]
  4218f5:	cwde   
  4218f6:	(bad)  
  4218f7:	in     al,0x74
  4218f9:	jmp    0x42190f
  4218fb:	dec    ebp
  4218fc:	mov    ds:0x14163fcb,eax
  421901:	and    al,0xc4
  421903:	fs out 0x75,eax
  421906:	loopne 0x42191d
  421908:	inc    edi
  421909:	mov    dl,0x76
  42190b:	rcl    DWORD PTR [edx],1
  42190d:	adc    al,0x34
  42190f:	js     0x421973
  421911:	out    0x75,eax
  421913:	in     eax,0x15
  421915:	inc    edi
  421916:	mov    ds:0x412d18a,eax
  42191b:	and    al,0x78
  42191d:	(bad)  
  42191e:	in     eax,0x75
  421920:	loopne 0x421932
  421922:	inc    edi
  421923:	mov    ds:0x1412d1cb,al
  421928:	and    al,0x7d
  42192a:	(bad)  
  42192b:	out    0x75,al
  42192d:	loopne 0x421944
  42192f:	inc    edi
  421930:	mov    ds:0x141e81cb,eax
  421935:	and    al,0x7c
  421937:	(bad)  
  421938:	out    0x74,eax
  42193a:	add    al,0x10
  42193c:	inc    edi
  42193d:	mov    eax,ds:0x1492d1cb
  421942:	and    al,0x68
  421944:	(bad)  
  421945:	out    0x65,eax
  421947:	loopne 0x42195e
  421949:	inc    edi
  42194a:	mov    ds:0x412d1db,eax
  42194f:	and    al,0x78
  421951:	(bad)  
  421952:	out    0x75,eax
  421954:	loopne 0x42195b
  421956:	inc    edi
  421957:	mov    ds:0x1412d1cb,eax
  42195c:	and    al,0x78
  42195e:	(bad)  
  42195f:	out    0x75,eax
  421961:	adc    al,0x2c
  421963:	dec    ebx
  421964:	mov    ds:0x1412d2a2,eax
  421969:	and    al,0x88
  42196b:	imul   esp,edi,0x4715a93a
  421971:	mov    ds:0x1412d1cb,eax
  421976:	and    al,0x78
  421978:	(bad)  
  421979:	out    0x75,eax
  42197b:	loopne 0x421992
  42197d:	inc    edi
  42197e:	mov    ds:0x1412d1cb,eax
  421983:	and    al,0x78
  421985:	(bad)  
  421986:	out    0x75,eax
  421988:	loopne 0x42199f
  42198a:	inc    edi
  42198b:	mov    ds:0x1412d1cb,eax
  421990:	and    al,0x78
  421992:	(bad)  
  421993:	out    0x75,eax
  421995:	loopne 0x4219ac
  421997:	inc    edi
  421998:	mov    ds:0x1412d1cb,eax
  42199d:	and    al,0x78
  42199f:	(bad)  
  4219a0:	out    0x75,eax
  4219a2:	loopne 0x4219b9
  4219a4:	inc    edi
  4219a5:	mov    ds:0x1412d1cb,eax
  4219aa:	and    al,0x78
  4219ac:	(bad)  
  4219ad:	out    0x75,eax
  4219af:	loopne 0x4219c6
  4219b1:	inc    edi
  4219b2:	mov    ds:0x1412d1cb,eax
  4219b7:	and    al,0x78
  4219b9:	(bad)  
  4219ba:	out    0x75,eax
  4219bc:	loopne 0x4219d3
  4219be:	inc    edi
  4219bf:	mov    ds:0x1412d1cb,eax
  4219c4:	and    al,0x78
  4219c6:	(bad)  
  4219c7:	out    0x75,eax
  4219c9:	loopne 0x4219e0
  4219cb:	inc    edi
  4219cc:	mov    ds:0x1412d1cb,eax
  4219d1:	and    al,0x78
  4219d3:	(bad)  
  4219d4:	out    0x75,eax
  4219d6:	loopne 0x4219ed
  4219d8:	inc    edi
  4219d9:	lea    edi,[edi+0x24606ab4]
  4219df:	js     0x421a43
  4219e1:	out    0x95,eax
  4219e3:	jmp    0x4219fa
  4219e5:	inc    edi
  4219e6:	mov    bl,0xcb
  4219e8:	rcl    DWORD PTR [edx],1
  4219ea:	shl    BYTE PTR [eax],0x78
  4219ed:	(bad)
  4219f2:	add    ah,al
  4219f4:	stc    
  4219f5:	test   DWORD PTR [ebp+0x14],ebx
  4219f8:	and    al,0x78
  4219fa:	(bad)  
  4219fb:	out    0x75,eax
  4219fd:	rcl    BYTE PTR ds:0xa3e54347,0x61
  421a04:	inc    di
  421a06:	js     0x421a6a
  421a08:	out    0x75,eax
  421a0a:	adc    BYTE PTR ds:0xda3ba347,0x12
  421a11:	adc    al,0x7e
  421a13:	js     0x421a77
  421a15:	out    0xad,eax
  421a17:	in     al,0x15
  421a19:	inc    edi
  421a1a:	mov    ds:0x1412d1cb,eax
  421a1f:	and    al,0x78
  421a21:	(bad)  
  421a22:	out    0x75,eax
  421a24:	loopne 0x421a5b
  421a26:	inc    edi
  421a27:	mov    ds:0x1412d12b,eax
  421a2c:	and    al,0x78
  421a2e:	(bad)  
  421a2f:	out    0x75,eax
  421a31:	loopne 0x421a48
  421a33:	inc    edi
  421a34:	mov    ds:0x1412d1cb,eax
  421a39:	and    al,0x78
  421a3b:	(bad)  
  421a3c:	out    0x75,eax
  421a3e:	loopne 0x421a55
  421a40:	inc    edi
  421a41:	mov    ds:0x1412d1cb,eax
  421a46:	and    al,0x78
  421a48:	(bad)  
  421a49:	out    0x75,eax
  421a4b:	loopne 0x421a62
  421a4d:	inc    edi
  421a4e:	mov    ds:0x1412d1cb,eax
  421a53:	and    al,0x78
  421a55:	(bad)  
  421a56:	out    0x75,eax
  421a58:	loopne 0x421a6f
  421a5a:	inc    edi
  421a5b:	mov    ds:0x1412d1cb,eax
  421a60:	and    al,0x78
  421a62:	(bad)  
  421a63:	out    0x75,eax
  421a65:	loopne 0x421a7c
  421a67:	inc    edi
  421a68:	mov    ds:0x1412d1cb,eax
  421a6d:	and    al,0x78
  421a6f:	(bad)  
  421a70:	out    0x75,eax
  421a72:	loopne 0x421a89
  421a74:	inc    edi
  421a75:	mov    ds:0x1412d1cb,eax
  421a7a:	and    al,0x78
  421a7c:	(bad)  
  421a7d:	out    0x75,eax
  421a7f:	loopne 0x421a96
  421a81:	inc    edi
  421a82:	mov    ds:0x1412d1cb,eax
  421a87:	and    al,0x78
  421a89:	(bad)  
  421a8a:	out    0x75,eax
  421a8c:	loopne 0x421aa3
  421a8e:	inc    edi
  421a8f:	mov    ds:0x1412d1cb,eax
  421a94:	and    al,0x78
  421a96:	(bad)  
  421a97:	out    0x75,eax
  421a99:	loopne 0x421ab0
  421a9b:	inc    edi
  421a9c:	mov    ds:0x1412d1cb,eax
  421aa1:	and    al,0x78
  421aa3:	(bad)  
  421aa4:	out    0x75,eax
  421aa6:	loopne 0x421abd
  421aa8:	inc    edi
  421aa9:	mov    ds:0x1412d1cb,eax
  421aae:	and    al,0x78
  421ab0:	(bad)  
  421ab1:	out    0x75,eax
  421ab3:	loopne 0x421aca
  421ab5:	inc    edi
  421ab6:	mov    ds:0x1412d1cb,eax
  421abb:	and    al,0x78
  421abd:	(bad)  
  421abe:	out    0x75,eax
  421ac0:	loopne 0x421ad7
  421ac2:	inc    edi
  421ac3:	mov    ds:0x1412d1cb,eax
  421ac8:	and    al,0x78
  421aca:	(bad)  
  421acb:	out    0x75,eax
  421acd:	loopne 0x421ae4
  421acf:	inc    edi
  421ad0:	mov    ds:0x1412d1cb,eax
  421ad5:	and    al,0x78
  421ad7:	(bad)  
  421ad8:	out    0x75,eax
  421ada:	loopne 0x421af1
  421adc:	inc    edi
  421add:	mov    ds:0x1412d1cb,eax
  421ae2:	and    al,0x78
  421ae4:	(bad)  
  421ae5:	out    0x75,eax
  421ae7:	loopne 0x421afe
  421ae9:	inc    edi
  421aea:	mov    ds:0x1412d1cb,eax
  421aef:	and    al,0x78
  421af1:	(bad)  
  421af2:	out    0x75,eax
  421af4:	loopne 0x421b0b
  421af6:	inc    edi
  421af7:	mov    ds:0x1412d1cb,eax
  421afc:	and    al,0x78
  421afe:	(bad)  
  421aff:	out    0x75,eax
  421b01:	loopne 0x421b18
  421b03:	inc    edi
  421b04:	mov    ds:0x1412d1cb,eax
  421b09:	and    al,0x78
  421b0b:	(bad)  
  421b0c:	out    0x75,eax
  421b0e:	loopne 0x421b25
  421b10:	inc    edi
  421b11:	mov    ds:0x1412d1cb,eax
  421b16:	and    al,0x78
  421b18:	(bad)  
  421b19:	out    0x75,eax
  421b1b:	loopne 0x421b32
  421b1d:	inc    edi
  421b1e:	mov    ds:0x1412d1cb,eax
  421b23:	and    al,0x78
  421b25:	(bad)  
  421b26:	out    0x75,eax
  421b28:	loopne 0x421b3f
  421b2a:	inc    edi
  421b2b:	mov    ds:0x1412d1cb,eax
  421b30:	and    al,0x78
  421b32:	(bad)  
  421b33:	out    0x75,eax
  421b35:	loopne 0x421b4c
  421b37:	inc    edi
  421b38:	mov    ds:0x1412d1cb,eax
  421b3d:	and    al,0x78
  421b3f:	(bad)  
  421b40:	out    0x75,eax
  421b42:	loopne 0x421b59
  421b44:	inc    edi
  421b45:	mov    ds:0x1412d1cb,eax
  421b4a:	and    al,0x78
  421b4c:	(bad)  
  421b4d:	out    0x75,eax
  421b4f:	loopne 0x421b66
  421b51:	inc    edi
  421b52:	mov    ds:0x1412d1cb,eax
  421b57:	and    al,0x78
  421b59:	(bad)  
  421b5a:	out    0x75,eax
  421b5c:	loopne 0x421b73
  421b5e:	inc    edi
  421b5f:	mov    ds:0x1412d1cb,eax
  421b64:	and    al,0x78
  421b66:	(bad)  
  421b67:	out    0x75,eax
  421b69:	loopne 0x421b80
  421b6b:	inc    edi
  421b6c:	mov    ds:0x1412d1cb,eax
  421b71:	and    al,0x78
  421b73:	(bad)  
  421b74:	out    0x75,eax
  421b76:	loopne 0x421b8d
  421b78:	inc    edi
  421b79:	mov    ds:0x1412d1cb,eax
  421b7e:	and    al,0x78
  421b80:	(bad)  
  421b81:	out    0x75,eax
  421b83:	loopne 0x421b9a
  421b85:	inc    edi
  421b86:	mov    ds:0x1412d1cb,eax
  421b8b:	and    al,0x78
  421b8d:	(bad)  
  421b8e:	out    0x75,eax
  421b90:	loopne 0x421ba7
  421b92:	inc    edi
  421b93:	mov    ds:0x1412d1cb,eax
  421b98:	and    al,0x78
  421b9a:	(bad)  
  421b9b:	out    0x75,eax
  421b9d:	loopne 0x421bb4
  421b9f:	inc    edi
  421ba0:	mov    ds:0x1412d1cb,eax
  421ba5:	and    al,0x78
  421ba7:	(bad)  
  421ba8:	out    0x75,eax
  421baa:	loopne 0x421bc1
  421bac:	inc    edi
  421bad:	mov    ds:0x1412d1cb,eax
  421bb2:	and    al,0x78
  421bb4:	(bad)  
  421bb5:	out    0x75,eax
  421bb7:	loopne 0x421bce
  421bb9:	inc    edi
  421bba:	mov    ds:0x1412d1cb,eax
  421bbf:	and    al,0x78
  421bc1:	(bad)  
  421bc2:	out    0x75,eax
  421bc4:	loopne 0x421bdb
  421bc6:	inc    edi
  421bc7:	mov    ds:0x1412d1cb,eax
  421bcc:	and    al,0x78
  421bce:	(bad)  
  421bcf:	out    0x75,eax
  421bd1:	loopne 0x421be8
  421bd3:	inc    edi
  421bd4:	mov    ds:0x1412d1cb,eax
  421bd9:	and    al,0x78
  421bdb:	(bad)  
  421bdc:	out    0x75,eax
  421bde:	loopne 0x421bf5
  421be0:	inc    edi
  421be1:	mov    ds:0x1412d1cb,eax
  421be6:	and    al,0x78
  421be8:	bound  ecx,QWORD PTR [eax+0x6815ebdd]
  421bee:	mov    ds:0x1412c1cb,eax
  421bf3:	push   cs
  421bf4:	fidivr DWORD PTR [eax+0x381f1396]
  421bfa:	fldenv [ebx+ebx*4]
  421bfd:	cmp    al,0x24
  421bff:	cld    
  421c00:	aaa    
  421c01:	int3   
  421c02:	test   DWORD PTR [ecx+0x544f6404],0x7fc77c12
  421c0c:	lock scas al,BYTE PTR es:[edi]
  421c0e:	stc    
  421c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c10:	leave  
  421c11:	pop    ss
  421c12:	jo     0x421c3e
  421c14:	jle    0x421ba6
  421c16:	test   BYTE PTR [eax+0x5],ah
  421c19:	ss and al,0x5f
  421c1c:	lds    ebp,FWORD PTR [edi+0x20]
  421c1f:	mov    cl,0x78
  421c21:	out    dx,al
  421c22:	xchg   ecx,eax
  421c23:	test   BYTE PTR [esi+eax*1],0xa5
  421c27:	inc    esp
  421c28:	ja     0x421be6
  421c2a:	ret    
  421c2b:	into   
  421c2c:	lods   al,BYTE PTR ds:[esi]
  421c2d:	mov    BYTE PTR [edx+0x184f338c],0xfb
  421c34:	inc    eax
  421c35:	pop    eax
  421c36:	shr    eax,0x84
  421c39:	dec    edx
  421c3a:	cmp    BYTE PTR [edx],al
  421c3c:	fisttp DWORD PTR [ebp-0x6a25ae80]
  421c42:	ds dec ebx
  421c44:	call   0x7fa4:0xa54f61e8
  421c4b:	push   ebx
  421c4c:	and    DWORD PTR [edi-0x40],edi
  421c4f:	pop    ecx
  421c50:	xchg   edx,eax
  421c51:	xchg   dh,bh
  421c53:	xor    BYTE PTR [ebx+0x7a2c8f53],0x3a
  421c5a:	pop    edi
  421c5b:	ret    
  421c5c:	inc    edi
  421c5d:	ret    0x2afc
  421c60:	push   edx
  421c61:	scas   eax,DWORD PTR es:[edi]
  421c62:	add    DWORD PTR [edi],ebx
  421c64:	mov    al,0xf8
  421c66:	push   eax
  421c67:	cmp    bl,bl
  421c69:	dec    ecx
  421c6a:	push   ebx
  421c6b:	sub    eax,edx
  421c6d:	out    dx,eax
  421c6e:	jnp    0x421c55
  421c70:	std    
  421c71:	jbe    0x421c6f
  421c73:	sbb    BYTE PTR [ecx-0x20],dl
  421c76:	in     eax,dx
  421c77:	sub    ebp,DWORD PTR [eax+0x46]
  421c7a:	test   BYTE PTR [esi],al
  421c7c:	xor    esp,DWORD PTR [ebx+eiz*8]
  421c7f:	xchg   ebx,eax
  421c80:	dec    esi
  421c81:	xchg   edx,eax
  421c82:	cdq    
  421c83:	push   ebp
  421c84:	nop
  421c85:	in     eax,dx
  421c86:	stc    
  421c87:	mov    cl,0xd
  421c89:	hlt    
  421c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c8b:	fs fwait
  421c8d:	loop   0x421c9d
  421c8f:	lods   eax,DWORD PTR ds:[esi]
  421c90:	cmp    BYTE PTR ds:0xff5659ff,ch
  421c96:	(bad)  
  421c97:	(bad)  
  421c99:	inc    edi
  421c9a:	jecxz  0x421c37
  421c9c:	dec    esi
  421c9d:	dec    eax
  421c9e:	ja     0x421c6d
  421ca0:	jb     0x421c37
  421ca2:	jle    0x421c59
  421ca4:	adc    esi,ebp
  421ca6:	inc    ebx
  421ca7:	rcr    edi,1
  421ca9:	fdiv   DWORD PTR [ecx+0x7c]
  421cac:	gs mov bh,0x3d
  421caf:	mov    eax,ds:0xe644c64
  421cb4:	ret    
  421cb5:	fwait
  421cb6:	or     al,0x2e
  421cb8:	lods   al,BYTE PTR ds:[esi]
  421cb9:	cmp    esp,ecx
  421cbb:	imul   DWORD PTR [edi+0x7a]
  421cbe:	push   ebp
  421cbf:	lds    edx,FWORD PTR [esi-0xcc84b1a]
  421cc5:	iret   
  421cc6:	pop    edx
  421cc7:	loop   0x421d31
  421cc9:	push   ss
  421cca:	sbb    cl,BYTE PTR [ebx+0x3c]
  421ccd:	test   eax,0x9e365800
  421cd2:	pushf  
  421cd3:	or     BYTE PTR ds:0x48369d10,ah
  421cd9:	fisub  DWORD PTR ds:0x1a04f5ce
  421cdf:	mov    esi,0x5f9d51fe
  421ce4:	scas   al,BYTE PTR es:[edi]
  421ce5:	lahf   
  421ce6:	dec    eax
  421ce7:	or     DWORD PTR [ecx],ebp
  421ce9:	daa    
  421cea:	ja     0x421cea
  421cec:	push   cs
  421ced:	xor    BYTE PTR [edx+0x9c1a144],al
  421cf3:	aad    0x9a
  421cf5:	fisttp DWORD PTR [edx+0x2944b865]
  421cfb:	rcl    BYTE PTR [ecx-0x4a],cl
  421cfe:	cmp    DWORD PTR [edi],eax
  421d00:	xchg   ecx,eax
  421d01:	inc    ecx
  421d02:	out    dx,al
  421d03:	sbb    edi,DWORD PTR [eax]
  421d05:	retf   
  421d06:	popa   
  421d07:	fucomi st,st(4)
  421d09:	pushf  
  421d0a:	pop    eax
  421d0b:	jb     0x421d47
  421d0d:	retf   
  421d0e:	add    eax,0xaf7f7d13
  421d13:	xchg   ebx,eax
  421d14:	jo     0x421d90
  421d16:	outs   dx,DWORD PTR gs:[esi]
  421d18:	and    DWORD PTR [edx-0x6],0x2a
  421d1c:	cwde   
  421d1d:	shl    BYTE PTR [ecx+0x5b001339],cl
  421d23:	cmp    dl,BYTE PTR [edx-0x4a]
  421d26:	adc    dh,BYTE PTR [edx]
  421d28:	jo     0x421d2d
  421d2a:	fisub  DWORD PTR [ecx]
  421d2c:	ret    0x9296
  421d2f:	cmp    ebp,DWORD PTR [ecx+eiz*1]
  421d32:	xchg   edx,eax
  421d33:	hlt    
  421d34:	sbb    ebp,DWORD PTR [edi+0x498e58e6]
  421d3a:	out    dx,al
  421d3b:	mov    es,WORD PTR [edi+0x43a3ad8]
  421d41:	push   eax
  421d42:	fistp  QWORD PTR [esp]
  421d45:	mov    WORD PTR [ebx],ss
  421d47:	mov    edi,0x592461f8
  421d4c:	arpl   WORD PTR [esi+0x10],ax
  421d4f:	mov    ecx,0x3fb64b1d
  421d54:	jnp    0x421d75
  421d56:	and    dh,ah
  421d58:	cdq    
  421d59:	test   BYTE PTR [edx-0x5a9a43f3],cl
  421d5f:	inc    edi
  421d60:	(bad)  
  421d61:	dec    BYTE PTR [ebp-0xd]
  421d64:	and    al,0x58
  421d66:	or     al,0x9d
  421d68:	mov    ebp,0x716ad670
  421d6d:	pop    esp
  421d6e:	xor    eax,0x9cee58b3
  421d73:	out    0x3e,eax
  421d75:	xchg   edi,eax
  421d76:	jnp    0x421d3b
  421d78:	sbb    eax,0x58115622
  421d7d:	mov    edx,DWORD PTR [eax+0x5a15385d]
  421d83:	lahf   
  421d84:	inc    esi
  421d85:	mov    ds:0x2010082c,eax
  421d8a:	xor    esp,esp
  421d8c:	aaa    
  421d8d:	ds or  cl,ch
  421d90:	mov    dl,0xb
  421d92:	sbb    DWORD PTR ds:[edi-0x7633667c],edx
  421d99:	xchg   edi,eax
  421d9a:	dec    esp
  421d9b:	out    0xad,al
  421d9d:	mov    al,ds:0x11db8694
  421da2:	ret    
  421da3:	popf   
  421da4:	cdq    
  421da5:	ss aaa 
  421da7:	or     al,0xde
  421da9:	pop    ecx
  421daa:	mov    al,0xd
  421dac:	push   ecx
  421dad:	sub    al,BYTE PTR [edi+ebp*2+0x176aeb4f]
  421db4:	add    dh,BYTE PTR [ebx]
  421db6:	mov    bl,0xd1
  421db8:	inc    edi
  421db9:	jge    0x421d5e
  421dbb:	mov    esp,0x3bebc6b4
  421dc0:	cwde   
  421dc1:	inc    eax
  421dc2:	xor    eax,0x44046611
  421dc7:	mov    edi,0x717ab4c7
  421dcc:	mov    ?,WORD PTR [ebp-0x3]
  421dcf:	leave  
  421dd0:	and    ecx,DWORD PTR [ebx+0x3d7ecc6e]
  421dd6:	xchg   edi,eax
  421dd7:	jmp    0x12be:0x26b3
  421ddd:	pusha  
  421dde:	popf   
  421ddf:	sahf   
  421de0:	shr    ebx,0xb
  421de3:	mov    al,ds:0x18025d9e
  421de8:	stos   BYTE PTR es:[edi],al
  421de9:	ds inc edi
  421deb:	pop    ds
  421dec:	ret    
  421ded:	outs   dx,DWORD PTR ds:[esi]
  421dee:	push   esi
  421def:	lock sbb ch,BYTE PTR [edi-0x47]
  421df3:	sbb    ebp,DWORD PTR [esi+ecx*4]
  421df6:	and    ebp,DWORD PTR [esi]
  421df8:	sar    BYTE PTR [eax-0x20],cl
  421dfb:	push   0xb3d47db5
  421e00:	(bad)  [ebp*8-0x27a8f741]
  421e07:	fwait
  421e08:	cwde   
  421e09:	jae    0x421e59
  421e0b:	cmc    
  421e0c:	fs dec edi
  421e0e:	pop    ebx
  421e0f:	add    bh,BYTE PTR [ebx]
  421e11:	in     eax,0x85
  421e13:	iret   
  421e14:	pop    ecx
  421e15:	adc    BYTE PTR [ebx],cl
  421e17:	jl     0x421e1f
  421e19:	ss in  al,dx
  421e1b:	dec    esi
  421e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e1d:	mov    edi,0x2c35f37d
  421e22:	cmp    dh,bh
  421e24:	and    ebx,DWORD PTR [ecx+0x16]
  421e27:	xchg   esp,eax
  421e28:	or     dh,cl
  421e2a:	xchg   edi,eax
  421e2b:	sbb    eax,0x374bcd46
  421e30:	push   0x24
  421e32:	xor    DWORD PTR [eax+0x31],ebp
  421e35:	rcl    DWORD PTR [esi],1
  421e37:	dec    edx
  421e38:	push   0xffffff94
  421e3a:	sub    dl,BYTE PTR [edx]
  421e3c:	sub    eax,DWORD PTR [ebx]
  421e3e:	leave  
  421e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e40:	push   ebx
  421e41:	xchg   esp,eax
  421e42:	int3   
  421e43:	pop    ds
  421e44:	add    al,dl
  421e46:	xchg   ebx,eax
  421e47:	adc    eax,DWORD PTR [edx-0x8]
  421e4a:	je     0x421e89
  421e4c:	jbe    0x421e93
  421e4e:	dec    edx
  421e4f:	jo     0x421eab
  421e51:	sahf   
  421e52:	mov    BYTE PTR [ecx],ch
  421e54:	in     al,dx
  421e55:	pop    ds
  421e56:	adc    ah,BYTE PTR [ebx+0x1]
  421e59:	fcom   DWORD PTR [edx-0x234c49e7]
  421e5f:	fisubr WORD PTR [eax-0x1fdcbb14]
  421e65:	lods   eax,DWORD PTR ds:[esi]
  421e66:	scas   eax,DWORD PTR es:[edi]
  421e67:	fidivr DWORD PTR [ebx]
  421e69:	jmp    FWORD PTR [ebx]
  421e6b:	fbstp  TBYTE PTR [edi]
  421e6d:	ins    DWORD PTR es:[edi],dx
  421e6e:	push   edx
  421e6f:	test   eax,esi
  421e71:	inc    edx
  421e72:	imul   ebx,DWORD PTR [ebp+0x61],0xc58b6e42
  421e79:	jg     0x421e20
  421e7b:	clc    
  421e7c:	test   BYTE PTR [ebx+0x33],bl
  421e7f:	mov    dl,0xad
  421e81:	or     eax,0x4fb49158
  421e86:	mov    eax,ds:0xa25895ce
  421e8b:	aaa    
  421e8c:	jge    0x421e8e
  421e8e:	and    al,0x4d
  421e90:	sbb    eax,0x4876a3d1
  421e95:	mov    eax,0xea62ae63
  421e9a:	in     eax,0x7c
  421e9c:	mov    eax,ds:0x3f6b6dfd
  421ea1:	xchg   edx,eax
  421ea2:	pop    ebx
  421ea3:	scas   eax,DWORD PTR es:[edi]
  421ea4:	ja     0x421ed2
  421ea6:	into   
  421ea7:	xlat   BYTE PTR ds:[ebx]
  421ea8:	fdivp  st(3),st
  421eaa:	mov    gs:0xdcb4b2b4,al
  421eb0:	cdq    
  421eb1:	dec    ecx
  421eb2:	outs   dx,BYTE PTR ds:[esi]
  421eb3:	das    
  421eb4:	sub    edx,esi
  421eb6:	or     eax,esi
  421eb8:	pop    ds
  421eb9:	mov    al,0x9c
  421ebb:	mov    ch,0x10
  421ebd:	add    eax,0x6ce3039c
  421ec2:	rcr    DWORD PTR [edx],1
  421ec4:	add    ah,BYTE PTR [edi+0x39]
  421ec7:	push   cs
  421ec8:	stc    
  421ec9:	retf   0x5e90
  421ecc:	(bad)  
  421ecd:	jne    0x421e56
  421ecf:	(bad)  
  421ed1:	xchg   BYTE PTR [edi],dl
  421ed3:	(bad)  
  421ed4:	fcom   st(6)
  421ed6:	cli    
  421ed7:	jmp    0x421e99
  421ed9:	mov    ds:0x86d79965,al
  421ede:	pop    es
  421edf:	xor    dl,bh
  421ee1:	je     0x421e72
  421ee3:	test   BYTE PTR [ebx-0x5a],0xe0
  421ee7:	mov    BYTE PTR [ebx+eax*2],bh
  421eea:	inc    ecx
  421eeb:	std    
  421eec:	scas   eax,DWORD PTR es:[edi]
  421eed:	mov    ebp,0xb0f51a3
  421ef2:	push   ebx
  421ef3:	sbb    ecx,DWORD PTR [edx-0x1c8fad11]
  421ef9:	cdq    
  421efa:	adc    al,BYTE PTR [ebx-0x53]
  421efd:	xchg   ecx,eax
  421efe:	push   edi
  421eff:	push   es
  421f00:	push   ecx
  421f01:	mov    ecx,0xfd67b53
  421f06:	int    0xb5
  421f08:	faddp  st(3),st
  421f0a:	aam    0x91
  421f0c:	or     al,0xbb
  421f0e:	lods   al,BYTE PTR ds:[esi]
  421f0f:	jg     0x421eab
  421f11:	test   BYTE PTR [eax],bh
  421f13:	inc    ecx
  421f14:	dec    edi
  421f15:	scas   al,BYTE PTR es:[edi]
  421f16:	and    DWORD PTR [ebp-0x64],ebp
  421f19:	stc    
  421f1a:	sub    ecx,ecx
  421f1c:	or     BYTE PTR [ebp+0x2a],0x7b
  421f20:	push   0x7f
  421f22:	in     eax,dx
  421f23:	(bad)  
  421f25:	enter  0xe563,0xe5
  421f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f2a:	test   eax,0xf401593d
  421f2f:	sub    eax,DWORD PTR [ecx-0x30]
  421f32:	aad    0xd3
  421f34:	lds    ebp,FWORD PTR [edi+ebx*2+0x31]
  421f38:	stc    
  421f39:	out    0x98,eax
  421f3b:	aas    
  421f3c:	jo     0x421f5c
  421f3e:	aas    
  421f3f:	mov    bl,0x56
  421f41:	cmp    dh,bh
  421f43:	iret   
  421f44:	mov    ds:0x5f239bcc,al
  421f49:	data16 cs or dl,dl
  421f4d:	int3   
  421f4e:	fldcw  WORD PTR [edx-0x18]
  421f51:	ret    
  421f52:	adc    bl,BYTE PTR [ebx]
  421f54:	cmp    eax,0x9b6710ab
  421f59:	test   eax,0x5765cecd
  421f5e:	and    DWORD PTR [edx-0x43b6c7b3],ebp
  421f64:	fidivr DWORD PTR ds:0xb34e1aa5
  421f6a:	sub    al,0x78
  421f6c:	mov    esp,0x144ec545
  421f71:	push   0x5f
  421f73:	lock xchg DWORD PTR [eax*4+0x36de26c],edx
  421f7b:	mov    dh,0x73
  421f7d:	dec    ebx
  421f7e:	ret    0x4e58
  421f81:	stc    
  421f82:	jle    0x421fb4
  421f84:	xchg   BYTE PTR [eax],ch
  421f86:	add    ecx,DWORD PTR [edx-0x1a]
  421f89:	xor    eax,0xaf6f3825
  421f8e:	imul   ecx,DWORD PTR [esi],0x40186df1
  421f94:	sub    DWORD PTR cs:[eax-0x23],ecx
  421f98:	or     dh,BYTE PTR [ecx-0x8]
  421f9b:	mov    bh,0xe
  421f9d:	xchg   DWORD PTR [edi],edi
  421f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa0:	xor    eax,DWORD PTR [esp+esi*1]
  421fa3:	push   ebp
  421fa4:	xor    eax,edx
  421fa6:	rcr    DWORD PTR [esi-0x4017df0f],0x7d
  421fad:	pop    edx
  421fae:	jb     0x421f6f
  421fb0:	div    DWORD PTR [ecx]
  421fb2:	push   0xffffffa8
  421fb4:	in     eax,0x0
  421fb6:	es jmp 0x421f4c
  421fb9:	loope  0x421f91
  421fbb:	adc    eax,0x26b95b5a
  421fc0:	pop    es
  421fc1:	into   
  421fc2:	repnz mov bl,0x23
  421fc5:	leave  
  421fc6:	aad    0xe
  421fc8:	mov    dl,0x59
  421fca:	push   edi
  421fcb:	sub    bh,0x35
  421fce:	cs dec ebp
  421fd0:	test   eax,0x39c6f40f
  421fd5:	lods   al,BYTE PTR ds:[esi]
  421fd6:	aad    0xc
  421fd8:	inc    ebx
  421fd9:	inc    eax
  421fda:	std    
  421fdb:	out    dx,al
  421fdc:	pop    ebp
  421fdd:	scas   al,BYTE PTR es:[edi]
  421fde:	adc    al,0xed
  421fe0:	add    al,0x3
  421fe2:	retf   
  421fe3:	outs   dx,BYTE PTR ds:[esi]
  421fe4:	cmp    al,0xd3
  421fe6:	dec    esi
  421fe7:	aad    0x53
  421fe9:	outs   dx,DWORD PTR ds:[esi]
  421feb:	jnp    0x421fad
  421fed:	sub    ch,BYTE PTR [esi]
  421fef:	imul   esi,DWORD PTR [edi-0x67],0xffffff92
  421ff3:	fcomp  QWORD PTR [esp+ecx*2-0x725c9e8d]
  421ffa:	pop    es
  421ffb:	ss cli 
  421ffd:	mov    edx,0xf8c85010
  422002:	out    dx,eax
  422003:	arpl   WORD PTR [edi],bp
  422005:	inc    esp
  422006:	adc    ebx,0x14
  422009:	adc    ebx,ebp
  42200b:	jge    0x422017
  42200d:	cs inc edi
  42200f:	into   
  422010:	xor    DWORD PTR [ebp+0x6],ebx
  422013:	jl     0x422030
  422015:	ins    DWORD PTR es:[edi],dx
  422016:	add    BYTE PTR [esi+0x24c41373],ch
  42201c:	loope  0x42206b
  42201e:	xchg   ebp,eax
  42201f:	add    DWORD PTR [ebp+0x2e],ecx
  422022:	ins    DWORD PTR es:[edi],dx
  422023:	mov    eax,0xe15498ee
  422028:	adc    DWORD PTR [esi+0x79f4716a],0x5d125841
  422032:	clc    
  422033:	iret   
  422034:	into   
  422035:	mov    edx,0x35c87ef6
  42203a:	lea    esp,[ecx-0x66]
  42203d:	sbb    al,0x51
  42203f:	sub    eax,0x9b221d27
  422044:	push   ds
  422045:	scas   eax,DWORD PTR es:[edi]
  422046:	ss std 
  422048:	das    
  422049:	iret   
  42204a:	cmp    DWORD PTR [edx+eiz*1+0x3abb280d],esi
  422051:	(bad)  
  422052:	jmp    0x422012
  422054:	jo     0x4220d5
  422056:	mov    eax,edx
  422058:	sub    eax,0x97ea35d
  42205d:	pop    ss
  42205e:	jo     0x42204a
  422060:	jno    0x42201d
  422062:	sbb    esi,ecx
  422064:	lods   eax,DWORD PTR ds:[esi]
  422065:	mov    ch,al
  422067:	cwde   
  422068:	lds    edx,FWORD PTR [ebp-0x733c981f]
  42206e:	dec    ecx
  42206f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422070:	imul   ebp,DWORD PTR [edi+esi*1],0xffffff98
  422074:	and    cl,ah
  422076:	int    0x64
  422078:	(bad)  
  422079:	mov    ebx,0x91d23d57
  42207e:	push   ebx
  42207f:	push   ebp
  422080:	cmp    al,0x9
  422082:	mov    ah,0x71
  422084:	sbb    BYTE PTR [ecx-0x5efc3928],ch
  42208a:	std    
  42208b:	out    dx,al
  42208c:	aaa    
  42208d:	add    esi,DWORD PTR [ebp-0x48cb747c]
  422093:	ja     0x422023
  422095:	sbb    eax,0xa0db060a
  42209a:	(bad)  
  42209b:	out    0x60,eax
  42209d:	sbb    eax,edi
  42209f:	push   edx
  4220a0:	xchg   esp,eax
  4220a1:	dec    esi
  4220a2:	repz cmp al,BYTE PTR [edx+ebp*1-0x28]
  4220a7:	push   ebp
  4220a8:	stos   BYTE PTR es:[edi],al
  4220a9:	lods   eax,DWORD PTR ds:[esi]
  4220aa:	sbb    edi,ebx
  4220ac:	pushf  
  4220ad:	inc    edi
  4220ae:	lods   al,BYTE PTR ds:[esi]
  4220af:	arpl   WORD PTR [ebx],dx
  4220b1:	std    
  4220b2:	sub    al,0x93
  4220b4:	mov    al,ds:0x2a820cd3
  4220b9:	int    0x6b
  4220bb:	ret    
  4220bc:	sar    eax,cl
  4220be:	xchg   esi,eax
  4220bf:	daa    
  4220c0:	push   ecx
  4220c1:	add    dl,al
  4220c3:	cmp    DWORD PTR [edi+0x1],0x4acede06
  4220ca:	outs   dx,DWORD PTR ds:[esi]
  4220cb:	fsubp  st(5),st
  4220cd:	xlat   BYTE PTR ds:[ebx]
  4220ce:	and    BYTE PTR [ecx],dh
  4220d0:	add    eax,0x7d9177ee
  4220d5:	jns    0x422142
  4220d7:	jge    0x42212b
  4220d9:	and    DWORD PTR [esi-0x2d],ecx
  4220dc:	mov    esi,0xdde34497
  4220e1:	js     0x422126
  4220e3:	ins    DWORD PTR es:[edi],dx
  4220e4:	in     al,0x89
  4220e6:	les    ebp,FWORD PTR [edx+0x41]
  4220e9:	addr16 pushf 
  4220eb:	mov    ds:0xef9c0612,eax
  4220f0:	and    bh,BYTE PTR [eax]
  4220f2:	out    0x25,al
  4220f4:	pop    edx
  4220f5:	jmp    0xe1d2:0x1765598
  4220fc:	ja     0x422140
  4220fe:	inc    ecx
  4220ff:	pusha  
  422100:	dec    edx
  422101:	dec    eax
  422102:	add    BYTE PTR [ebx+0x27],dh
  422105:	pop    ds
  422106:	(bad)  
  422107:	jnp    0x4220c8
  422109:	jbe    0x422139
  42210b:	and    edi,DWORD PTR [edx]
  42210d:	cs jmp 0x2939:0x11928632
  422115:	mov    ecx,0x78c4ed5
  42211a:	test   BYTE PTR [ebx-0x12],cl
  42211d:	mov    ecx,0xa61d1a9c
  422122:	test   eax,0xe1c569d7
  422127:	push   ss
  422128:	or     eax,0xa7aed4de
  42212d:	sbb    edi,DWORD PTR [ecx-0x71]
  422130:	lahf   
  422131:	sbb    edx,ecx
  422133:	sub    al,0x3d
  422135:	add    cl,0xa1
  422138:	inc    edi
  422139:	rol    DWORD PTR [ecx-0x64],0xec
  42213d:	daa    
  42213e:	dec    eax
  42213f:	lds    edx,FWORD PTR [ebx+0x3d922aa5]
  422145:	ins    BYTE PTR es:[edi],dx
  422146:	ja     0x4220f7
  422148:	(bad)  
  422149:	sbb    eax,0xb84d097
  42214e:	je     0x42210a
  422150:	push   esp
  422151:	mov    ebx,0x9f6ca1dc
  422156:	in     eax,dx
  422157:	pop    ebx
  422158:	pushf  
  422159:	addr16 mov ds:0x7473,eax
  42215d:	jle    0x422148
  42215f:	retf   0x7f1d
  422162:	dec    esp
  422163:	pushf  
  422164:	mov    dl,0x83
  422166:	jmp    0xab8574f8
  42216b:	out    0x37,al
  42216d:	retf   
  42216e:	xchg   edi,eax
  42216f:	mov    al,0x6b
  422171:	ret    0x3c37
  422174:	cmc    
  422175:	lods   eax,DWORD PTR ds:[esi]
  422176:	mov    esp,0xf13cc7c3
  42217b:	adc    DWORD PTR [ecx-0x3d36b1fc],ecx
  422181:	ds cdq 
  422183:	push   ecx
  422184:	pusha  
  422185:	sbb    eax,0x78a99957
  42218a:	test   BYTE PTR [esi+0x72004ff5],dl
  422190:	es inc ebp
  422192:	fcmove st,st(5)
  422194:	push   0x3efba4a4
  422199:	jns    0x4221a3
  42219b:	stos   DWORD PTR es:[edi],eax
  42219c:	mov    DWORD PTR [edi+0x7c],0x6d5de3b5
  4221a3:	aam    0xd0
  4221a5:	into   
  4221a6:	js     0x422209
  4221a8:	cdq    
  4221a9:	out    dx,al
  4221aa:	push   eax
  4221ab:	inc    ebx
  4221ac:	push   cs
  4221ad:	and    dl,dl
  4221af:	fmul   QWORD PTR [bx+di+0x21]
  4221b3:	scas   al,BYTE PTR es:[edi]
  4221b4:	jae    0x422198
  4221b6:	push   0x4c
  4221b8:	adc    BYTE PTR ds:0x78f2b4b7,0xe6
  4221bf:	shl    al,cl
  4221c1:	inc    edi
  4221c2:	xchg   dl,bl
  4221c4:	push   0xd1445cfe
  4221c9:	mov    al,0xdf
  4221cb:	mov    ebp,0xfce00d71
  4221d0:	in     al,dx
  4221d1:	lea    edi,[eax]
  4221d3:	jnp    0x422192
  4221d5:	pop    ebx
  4221d6:	inc    ecx
  4221d7:	push   ecx
  4221d8:	adc    al,0xf4
  4221da:	in     eax,0xa6
  4221dc:	cdq    
  4221dd:	in     eax,0xeb
  4221df:	(bad)  
  4221e1:	bound  ebp,QWORD PTR [ebp+0x5fb650ad]
  4221e7:	inc    edx
  4221e8:	xchg   BYTE PTR [ecx+0x27],dh
  4221eb:	mov    edi,0x9a1ff657
  4221f0:	add    dh,BYTE PTR [edx-0x6b]
  4221f3:	cmp    al,0x4a
  4221f5:	adc    DWORD PTR [esp+eiz*2],esp
  4221f8:	mov    edi,ds
  4221fa:	int3   
  4221fb:	sar    DWORD PTR [esi-0x126c72c5],cl
  422201:	lds    edi,FWORD PTR [ecx+0x46]
  422204:	push   edi
  422205:	push   ss
  422206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422207:	inc    esi
  422208:	popa   
  422209:	cmp    ch,bh
  42220b:	mov    al,ds:0x8fe0fcc3
  422210:	cmp    eax,0x162279b5
  422215:	les    ebx,FWORD PTR [ebp+0x4e88cc69]
  42221b:	sbb    bl,BYTE PTR [ecx-0x43]
  42221e:	sub    dh,BYTE PTR [edi]
  422220:	dec    edx
  422221:	outs   dx,DWORD PTR ds:[esi]
  422222:	retf   
  422223:	xchg   al,dh
  422225:	jge    0x42226f
  422227:	(bad)  
  422228:	rol    DWORD PTR [esi-0x261ebd5e],1
  42222e:	clc    
  42222f:	int3   
  422230:	dec    edx
  422231:	leave  
  422232:	push   esi
  422233:	shl    BYTE PTR [ebx+0x5949154f],0x35
  42223a:	shr    BYTE PTR [ebx-0xa],1
  42223d:	jae    0x422245
  42223f:	outs   dx,DWORD PTR ds:[esi]
  422240:	cld    
  422241:	sti    
  422242:	inc    ebx
  422243:	inc    eax
  422244:	js     0x4222a5
  422246:	dec    esp
  422247:	or     BYTE PTR [ebx+0x70e8a4ce],0xdf
  42224e:	xchg   edi,eax
  42224f:	mov    ebx,0xbe0d6e80
  422254:	dec    edx
  422255:	jns    0x42222f
  422257:	cwde   
  422258:	cld    
  422259:	lock aam 0x95
  42225c:	mov    esp,0x262078b3
  422261:	xchg   ebx,eax
  422262:	xlat   BYTE PTR ds:[ebx]
  422263:	out    dx,eax
  422264:	ficomp DWORD PTR ds:0xb25f5b15
  42226a:	cwde   
  42226b:	mov    cl,0x65
  42226d:	adc    eax,DWORD PTR [ecx+0x10247216]
  422273:	jmp    0x7257:0x2ee3867a
  42227a:	add    BYTE PTR [ebx+0x6e],bh
  42227d:	xchg   DWORD PTR [edx-0x16],ebx
  422280:	fisubr DWORD PTR [ebp-0x7b]
  422283:	push   0xffffff92
  422285:	add    BYTE PTR [ebx-0xf677024],ch
  42228b:	cdq    
  42228c:	leave  
  42228d:	test   al,0x3c
  42228f:	adc    dl,BYTE PTR [ebx]
  422291:	out    dx,eax
  422292:	enter  0x23e3,0x68
  422296:	test   al,0x51
  422298:	jns    0x422277
  42229a:	jle    0x422243
  42229c:	ins    BYTE PTR es:[edi],dx
  42229d:	idiv   BYTE PTR [edx+0x19e9ee7b]
  4222a3:	mov    edx,0xcb80e88f
  4222a8:	scas   al,BYTE PTR es:[edi]
  4222a9:	out    0x61,al
  4222ab:	xor    esp,edi
  4222ad:	inc    ebx
  4222ae:	inc    eax
  4222af:	push   ebx
  4222b0:	inc    ebx
  4222b1:	push   cs
  4222b2:	mov    edx,DWORD PTR [ecx]
  4222b4:	sub    DWORD PTR [edi-0x34],eax
  4222b7:	js     0x42223c
  4222b9:	out    0x4d,al
  4222bb:	out    dx,eax
  4222bc:	out    0xe6,al
  4222be:	ret    0xab2c
  4222c1:	outs   dx,BYTE PTR es:[esi]
  4222c3:	inc    edi
  4222c4:	cdq    
  4222c5:	ds cmp al,0x94
  4222c8:	retf   
  4222c9:	fwait
  4222ca:	iret   
  4222cb:	in     eax,0x8d
  4222cd:	fidiv  WORD PTR [ebx+0x3bf9b2c4]
  4222d3:	es pop ds
  4222d5:	dec    ecx
  4222d6:	cdq    
  4222d7:	loope  0x42231c
  4222d9:	push   es
  4222da:	xchg   DWORD PTR [ebx-0x77],edi
  4222dd:	jae    0x4222bb
  4222df:	and    DWORD PTR [edi],0x98fadb73
  4222e5:	inc    esi
  4222e6:	aas    
  4222e7:	popf   
  4222e8:	mov    ch,0xb7
  4222ea:	jns    0x422364
  4222ec:	les    eax,FWORD PTR [ebx-0x63]
  4222ef:	push   ebx
  4222f0:	adc    al,0x62
  4222f2:	mov    ebx,0x1e436059
  4222f7:	cmp    al,dh
  4222f9:	ins    DWORD PTR es:[edi],dx
  4222fa:	or     ah,BYTE PTR [edi]
  4222fc:	fs mov cl,0x5b
  4222ff:	repz fwait
  422301:	sub    ebp,ebx
  422303:	ret    0x2cfd
  422306:	jbe    0x422310
  422308:	jnp    0x4222c2
  42230a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42230b:	(bad)  
  42230c:	out    dx,eax
  42230d:	adc    al,0x2c
  42230f:	mov    edx,0xe78f7a28
  422314:	and    bl,ch
  422316:	pop    es
  422317:	xchg   BYTE PTR [edx+0x1d41762b],bh
  42231d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42231f:	fdivr  DWORD PTR [ebx+0x6d]
  422322:	adc    ecx,edi
  422324:	cli    
  422325:	fadd   DWORD PTR ds:0x14c6e571
  42232b:	sub    BYTE PTR [ecx],0x1f
  42232e:	divps  xmm3,XMMWORD PTR [ebx+0x4e53f718]
  422335:	mov    ecx,0xba1cd14d
  42233a:	iret   
  42233b:	cdq    
  42233c:	rol    BYTE PTR [edx+0x3],0xb
  422340:	dec    ecx
  422341:	ret    0x15e5
  422344:	retf   
  422345:	push   ecx
  422346:	iret   
  422347:	shl    DWORD PTR [edi+0x1a0c72c8],cl
  42234d:	aas    
  42234e:	loope  0x4222ec
  422350:	addr16 aad 0x8e
  422353:	out    0x86,eax
  422355:	xchg   BYTE PTR [edx-0x70fdf09f],dl
  42235b:	mov    dh,0x9e
  42235d:	enter  0x7b55,0xe5
  422361:	pusha  
  422362:	aaa    
  422363:	push   cs
  422364:	clc    
  422365:	mov    ebx,0x7b1ab072
  42236a:	or     edi,DWORD PTR [edi]
  42236c:	dec    esp
  42236d:	repz cdq 
  42236f:	jne    0x42234b
  422371:	pop    ebp
  422372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422373:	lds    ebp,FWORD PTR ds:0x44ba7166
  422379:	sub    DWORD PTR [edx-0x8e73e41],esi
  42237f:	inc    ecx
  422380:	or     bl,BYTE PTR [eax]
  422382:	sub    ch,BYTE PTR [ecx-0x5197acc2]
  422388:	xchg   edi,eax
  422389:	ret    
  42238a:	test   BYTE PTR [ebx-0x3965e2bb],dl
  422390:	mov    eax,ds:0x3c4229a3
  422395:	fistp  WORD PTR [edx]
  422397:	or     eax,0x320271d1
  42239c:	nop
  42239d:	test   eax,0x2680275d
  4223a2:	dec    ecx
  4223a3:	xchg   edi,eax
  4223a4:	add    ch,0x5f
  4223a7:	(bad)  
  4223a8:	mov    ebp,0x9a64b5
  4223ad:	stos   BYTE PTR es:[edi],al
  4223ae:	stos   DWORD PTR es:[edi],eax
  4223af:	test   ebp,eax
  4223b1:	sbb    al,BYTE PTR [edx-0x64]
  4223b4:	mov    al,0x20
  4223b6:	ins    BYTE PTR es:[edi],dx
  4223b7:	dec    ebx
  4223b8:	inc    edi
  4223b9:	in     eax,dx
  4223ba:	mov    ds:0xd38be464,eax
  4223bf:	cmp    BYTE PTR [ecx+esi*1+0x50],dl
  4223c3:	cmc    
  4223c4:	push   edx
  4223c5:	les    ebx,FWORD PTR [ebx]
  4223c7:	mul    edx
  4223c9:	xchg   ebp,eax
  4223ca:	(bad)  
  4223cc:	(bad)  
  4223cd:	ficom  DWORD PTR [edi+0x2]
  4223d0:	mov    ds:0x9a894836,eax
  4223d5:	mov    dl,0xd3
  4223d7:	jmp    0xd07b:0x6254ca62
  4223de:	pop    esi
  4223df:	lods   al,BYTE PTR ds:[esi]
  4223e0:	lahf   
  4223e1:	sbb    al,0x78
  4223e3:	std    
  4223e4:	push   ds
  4223e5:	arpl   WORD PTR [eax],ax
  4223e7:	out    dx,al
  4223e8:	(bad)  
  4223e9:	out    0x98,al
  4223eb:	push   ss
  4223ec:	mov    ds:0x9fea2242,al
  4223f1:	mov    esi,DWORD PTR [ebx+eax*1+0xb]
  4223f5:	sub    eax,0x3ddb7751
  4223fa:	stos   BYTE PTR es:[edi],al
  4223fb:	push   edx
  4223fc:	mov    al,ds:0xc267fea
  422401:	mov    edx,DWORD PTR [eax]
  422403:	int    0x96
  422405:	mov    WORD PTR [ebp-0x73faf2dd],es
  42240b:	sbb    al,0xf8
  42240d:	sub    al,0x3d
  42240f:	imul   DWORD PTR [esi]
  422411:	fwait
  422412:	sub    BYTE PTR [edx-0x7a],dl
  422415:	scas   al,BYTE PTR es:[edi]
  422416:	es jg  0x42244e
  422419:	sbb    al,0x7
  42241b:	sub    BYTE PTR [ecx+0x69],dl
  42241e:	push   eax
  42241f:	sub    ebp,DWORD PTR [ebx+0x5]
  422422:	add    DWORD PTR [eax-0x6f],edi
  422425:	mov    ebx,0xe7d16ada
  42242a:	xchg   ecx,eax
  42242b:	fldenv [edx+0x443473ab]
  422431:	shl    BYTE PTR [edi-0x74840dd0],0x9f
  422438:	iret   
  422439:	(bad)  
  42243a:	fsubp  st(3),st
  42243c:	jbe    0x4223fd
  42243e:	in     al,dx
  42243f:	les    edi,FWORD PTR [edx]
  422441:	(bad)  
  422442:	push   esp
  422443:	jb     0x42246b
  422445:	cmp    ecx,DWORD PTR [edi+eax*4]
  422448:	pushf  
  422449:	test   eax,0xc1c280a0
  42244e:	call   0xedfe8387
  422453:	shl    ebp,0x48
  422456:	adc    ch,bl
  422458:	adc    ah,BYTE PTR [edi+0x7d]
  42245b:	test   DWORD PTR [esi+0x1],esp
  42245e:	adc    DWORD PTR [edx-0xc],ebp
  422461:	add    BYTE PTR [esi+0x7a],ah
  422464:	mov    ebp,0x193c156c
  422469:	xchg   BYTE PTR [ebx],dh
  42246b:	jmp    0x9a9b:0xf13bc8c7
  422472:	(bad)  
  422473:	dec    esp
  422474:	dec    edx
  422475:	pop    eax
  422476:	(bad)  
  422477:	lods   al,BYTE PTR ds:[esi]
  422478:	lods   al,BYTE PTR ds:[esi]
  422479:	idiv   BYTE PTR [ecx+0x496838e9]
  42247f:	rol    DWORD PTR [ecx],1
  422481:	add    eax,0x5a514190
  422486:	or     dh,ch
  422488:	pop    es
  422489:	or     al,bl
  42248b:	(bad)  
  42248d:	inc    edi
  42248e:	mov    ecx,0x1ba6d8cc
  422493:	inc    BYTE PTR [eax-0x3b]
  422496:	add    esp,DWORD PTR [ebp-0x40]
  422499:	adc    esi,DWORD PTR [esp+esi*2]
  42249c:	test   al,0x9c
  42249e:	push   cs
  42249f:	inc    ebx
  4224a0:	(bad)  
  4224a1:	out    0x3d,al
  4224a3:	xor    DWORD PTR [ebp+0x5a],eax
  4224a6:	mov    ds:0x50e5fd2c,al
  4224ab:	mov    ds:0xf566bd30,eax
  4224b0:	fs sbb edx,ebx
  4224b3:	fs loop 0x422486
  4224b6:	jno    0x422524
  4224b8:	inc    ecx
  4224b9:	loopne 0x42244c
  4224bb:	xchg   ecx,esi
  4224bd:	push   esi
  4224be:	daa    
  4224bf:	hlt    
  4224c0:	xchg   ecx,eax
  4224c1:	in     eax,0x16
  4224c3:	push   ds
  4224c4:	ins    BYTE PTR es:[edi],dx
  4224c5:	mov    ebp,0x3b3b51ee
  4224ca:	loope  0x42245f
  4224cc:	out    0xd6,al
  4224ce:	dec    ecx
  4224cf:	xchg   edx,eax
  4224d0:	xchg   DWORD PTR [edi-0x475e59dc],ebx
  4224d6:	shr    dl,0x93
  4224d9:	aaa    
  4224da:	dec    esp
  4224db:	sbb    al,0x41
  4224dd:	imul   edx,DWORD PTR [eax+0x616c6578],0x986f8603
  4224e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e8:	sbb    ebp,DWORD PTR [ebx]
  4224ea:	mov    ecx,DWORD PTR [ebx+0x5b]
  4224ed:	lods   eax,DWORD PTR ds:[esi]
  4224ee:	jecxz  0x422506
  4224f0:	not    ecx
  4224f2:	shl    DWORD PTR [ebx+0x34],0xa8
  4224f6:	lods   eax,DWORD PTR ds:[esi]
  4224f7:	sbb    eax,0xe453b76a
  4224fc:	sub    cl,BYTE PTR [edi-0x1e]
  4224ff:	jg     0x4224ba
  422501:	xor    ebx,DWORD PTR [edx+0x16]
  422504:	nop
  422505:	xchg   ecx,eax
  422506:	pop    ebp
  422507:	push   0xffffffd6
  422509:	int3   
  42250a:	scas   al,BYTE PTR es:[edi]
  42250b:	adc    edx,DWORD PTR [ebp+0x2817254]
  422511:	pop    edx
  422512:	jbe    0x4224e8
  422514:	jns    0x4224df
  422516:	xchg   edi,eax
  422517:	mov    cl,0x7a
  422519:	sub    DWORD PTR [edx],esi
  42251b:	mov    gs,WORD PTR [ebx+eax*8-0x33]
  42251f:	add    ecx,DWORD PTR [edx+edi*8-0x42a193c4]
  422526:	stc    
  422527:	cdq    
  422528:	jb     0x4224ab
  42252a:	xor    al,0xab
  42252c:	(bad)  
  42252d:	outs   dx,BYTE PTR ds:[esi]
  42252e:	fisub  WORD PTR [eax+0xe28af39]
  422534:	mov    ah,0x9a
  422536:	daa    
  422537:	mov    ah,BYTE PTR [ebx]
  422539:	adc    ah,BYTE PTR [ecx]
  42253b:	daa    
  42253c:	dec    ebx
  42253d:	mov    cl,0xd8
  42253f:	push   cs
  422540:	push   0xf0e5719e
  422545:	jmp    0x4db07e36
  42254a:	and    BYTE PTR [ebx+0x45],dh
  42254d:	jg     0x4225b4
  42254f:	ja     0x42255d
  422551:	ss xchg edi,eax
  422553:	sub    eax,0xfea9315e
  422558:	inc    edx
  422559:	add    BYTE PTR [bp+di],cl
  42255c:	sbb    bh,BYTE PTR [esp+ecx*2]
  42255f:	or     bl,BYTE PTR [esp+eax*8+0x57b6c1ea]
  422566:	pusha  
  422567:	mov    bh,BYTE PTR [eax+0x44fc1040]
  42256d:	sbb    eax,0xd95f8fee
  422572:	xchg   ecx,eax
  422573:	les    edi,FWORD PTR [edx-0x6b]
  422576:	add    eax,0x8c2ce9a0
  42257b:	sbb    ah,BYTE PTR [edi+0x34dfeb8e]
  422581:	push   cs
  422582:	jmp    esi
  422584:	push   edx
  422585:	frstor [edi+edx*4]
  422588:	or     ah,BYTE PTR fs:[ecx-0xf0c3f65]
  42258f:	adc    BYTE PTR [edi+0x62e6a3f0],bh
  422595:	dec    esi
  422596:	sbb    cl,cl
  422598:	(bad)  
  422599:	mov    al,0x83
  42259b:	clc    
  42259c:	test   DWORD PTR [edx+edx*2-0x1],0x1891a239
  4225a4:	repnz adc al,0xa8
  4225a7:	(bad)  [edi-0x77]
  4225aa:	add    dh,bl
  4225ac:	enter  0x93a5,0x38
  4225b0:	inc    eax
  4225b1:	or     eax,0x12af072b
  4225b6:	push   eax
  4225b7:	adc    eax,ebx
  4225b9:	hlt    
  4225ba:	scas   al,BYTE PTR es:[edi]
  4225bb:	xchg   esi,eax
  4225bc:	popf   
  4225bd:	rol    DWORD PTR [eax-0x33ef7eb2],1
  4225c3:	adc    al,0xbb
  4225c5:	das    
  4225c6:	and    al,0xa6
  4225c8:	dec    eax
  4225c9:	push   cs
  4225ca:	call   0x1c74:0xad8d9e24
  4225d1:	and    dl,BYTE PTR [edi]
  4225d3:	mov    ds:0x58001eb5,al
  4225d8:	shl    ebp,0xa9
  4225db:	(bad)  
  4225dd:	aaa    
  4225de:	shr    DWORD PTR [edi+0x767bef54],1
  4225e4:	data16 aas 
  4225e6:	les    esi,FWORD PTR [esi+esi*8+0x6ceff976]
  4225ed:	fisttp QWORD PTR [ecx-0x19e9986b]
  4225f3:	stos   BYTE PTR es:[edi],al
  4225f4:	sbb    al,0x29
  4225f6:	pop    ds
  4225f7:	xor    ch,cl
  4225f9:	jl     0x422586
  4225fb:	mov    edi,0x34a98c5a
  422600:	xchg   BYTE PTR [esi+eiz*8-0x7674e225],ch
  422607:	push   edi
  422608:	mov    ch,BYTE PTR ds:0x4b687ea0
  42260e:	jo     0x4225ca
  422610:	addr16 dec ecx
  422612:	add    ecx,DWORD PTR [esi+0x61]
  422615:	cwd    
  422617:	out    dx,al
  422618:	xchg   edi,eax
  422619:	mov    ch,0x4f
  42261b:	push   es
  42261c:	lock push esp
  42261e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42261f:	daa    
  422620:	(bad)  
  422621:	aas    
  422622:	adc    BYTE PTR [ecx-0x34d0e763],ch
  422628:	lods   al,BYTE PTR ds:[esi]
  422629:	inc    edi
  42262a:	sbb    BYTE PTR [ebp+edi*4-0x18],0xf5
  42262f:	adc    eax,0xae0c9a1e
  422634:	retf   
  422635:	stc    
  422636:	mov    ds,WORD PTR [eax+0x75]
  422639:	push   eax
  42263a:	adc    ecx,edx
  42263c:	inc    eax
  42263d:	mov    eax,0x509b9cff
  422642:	fimul  DWORD PTR [eax-0x1e]
  422645:	std    
  422646:	and    edx,ebp
  422648:	cli    
  422649:	shr    BYTE PTR [ebx-0xc8f46cb],cl
  42264f:	jmp    0x1dda:0x263d98c3
  422656:	gs xor al,0xd0
  42265a:	imul   ecx,DWORD PTR [ecx+0x5f],0xffffffc5
  42265e:	das    
  42265f:	lds    ecx,FWORD PTR [ebp+0x2f]
  422662:	imul   ecx,DWORD PTR [eax+0x35506ea7],0xffffff85
  422669:	mov    esp,0x51d441ee
  42266e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42266f:	fist   DWORD PTR [ebx]
  422671:	add    DWORD PTR fs:[ebx+0x3d],ebx
  422675:	fisttp DWORD PTR [ecx]
  422677:	and    al,0xc6
  422679:	inc    ecx
  42267a:	int    0x45
  42267c:	adc    eax,0xc6f9a45e
  422681:	pop    ecx
  422682:	inc    esp
  422683:	mov    ah,0x1a
  422685:	cwde   
  422686:	es cmc 
  422688:	xchg   edx,eax
  422689:	lea    eax,[edx+0x41844749]
  42268f:	jne    0x4226a9
  422691:	inc    eax
  422692:	cmp    esp,DWORD PTR [edx-0x4a]
  422695:	fs pop edi
  422697:	and    BYTE PTR [ebp+0x3a],dl
  42269a:	xor    bl,bl
  42269c:	pop    ds
  42269d:	cli    
  42269e:	mov    ecx,0xe8d1241e
  4226a3:	retf   
  4226a4:	out    0x78,al
  4226a6:	and    bh,dl
  4226a8:	cmp    al,0x4f
  4226aa:	stc    
  4226ab:	and    DWORD PTR [edi-0x3a287ea1],0xffffffc3
  4226b2:	dec    eax
  4226b3:	cmp    DWORD PTR [ecx+esi*8+0xa2ad803],esp
  4226ba:	sub    BYTE PTR [edx-0x7a9a447c],dh
  4226c0:	data16 aam 0x94
  4226c3:	jmp    0x4d4e0706
  4226c8:	test   BYTE PTR [edx+esi*8],dl
  4226cb:	jg     0x4226eb
  4226cd:	repnz mov bh,0x86
  4226d0:	xchg   edi,eax
  4226d1:	fmul   DWORD PTR [eax+0x4b]
  4226d4:	std    
  4226d5:	cdq    
  4226d6:	leave  
  4226d7:	push   ss
  4226d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d9:	jg     0x42272a
  4226db:	aad    0xcc
  4226dd:	pop    eax
  4226de:	mov    al,BYTE PTR [eax-0x68]
  4226e1:	mov    WORD PTR [ebx-0x4e],fs
  4226e4:	scas   al,BYTE PTR es:[edi]
  4226e5:	hlt    
  4226e6:	xor    esp,esp
  4226e8:	fdivr  DWORD PTR [ecx-0x53]
  4226eb:	lds    ecx,FWORD PTR [edx-0x7f2d928e]
  4226f1:	jne    0x42272c
  4226f3:	test   BYTE PTR [esi+0x72],al
  4226f6:	repnz mov dh,0x98
  4226f9:	nop
  4226fa:	addr16 shr esp,cl
  4226fd:	lahf   
  4226fe:	repnz sbb eax,0x8ce741b1
  422704:	or     BYTE PTR [ebp+0x3d1b1de2],bh
  42270a:	inc    ebp
  42270b:	xchg   esp,eax
  42270c:	xchg   ecx,eax
  42270d:	icebp  
  42270e:	xor    ah,BYTE PTR [ecx-0x7]
  422711:	je     0x422762
  422713:	xchg   DWORD PTR cs:[edi-0x16],edi
  422717:	push   ebx
  422718:	scas   al,BYTE PTR es:[edi]
  422719:	in     al,dx
  42271a:	and    BYTE PTR [eax],0x5f
  42271d:	adc    BYTE PTR [esi],al
  42271f:	inc    ebp
  422720:	sub    DWORD PTR [ecx-0x4],edi
  422723:	enterw 0x5870,0x33
  422728:	iret   
  422729:	and    cl,bl
  42272b:	jmp    0x68ba01d0
  422730:	(bad)  
  422731:	int3   
  422732:	cmp    esp,ecx
  422734:	and    al,0x43
  422736:	sti    
  422737:	xor    al,0xd5
  422739:	mov    BYTE PTR [ebx+0x488081bf],0x38
  422740:	add    BYTE PTR [esi+0x1a1199ea],0x1f
  422747:	rcr    BYTE PTR [ecx+0x49],0x30
  42274b:	retf   0x712f
  42274e:	shl    DWORD PTR [ebx+0x74bcddf5],0x35
  422755:	out    0x67,eax
  422757:	cs adc eax,0x2bffec51
  42275d:	jg     0x4226e5
  42275f:	push   edx
  422760:	fwait
  422761:	shl    BYTE PTR [esi],0x9a
  422764:	cmp    eax,0xc14cfa2c
  422769:	loop   0x4227e9
  42276b:	inc    edx
  42276c:	add    DWORD PTR [edi+edx*1],ebx
  42276f:	cli    
  422770:	add    edi,DWORD PTR [eax+0x7f0c213c]
  422776:	mov    ds:0x9fb63dcf,al
  42277b:	and    eax,0x45f21f68
  422780:	mov    ah,0xba
  422782:	jg     0x422773
  422784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422785:	es mov ebx,0x385b553
  42278b:	bnd cs jb 0x4227d5
  42278f:	(bad)
  422792:	xor    dh,0x19
  422795:	in     al,dx
  422796:	out    dx,eax
  422797:	cmp    bl,BYTE PTR [ecx]
  422799:	inc    ebx
  42279a:	xchg   BYTE PTR [esi-0x30],dl
  42279d:	std    
  42279e:	inc    esi
  42279f:	aam    0x7c
  4227a1:	fisttp WORD PTR [ecx]
  4227a3:	frstor [ebx+0x67]
  4227a6:	xchg   esp,eax
  4227a7:	enter  0xebd3,0xe5
  4227ab:	(bad)  
  4227ac:	cdq    
  4227ad:	and    cl,cl
  4227af:	ins    BYTE PTR es:[edi],dx
  4227b0:	lods   eax,DWORD PTR ds:[esi]
  4227b1:	jmp    0xb433a4e6
  4227b6:	loopne 0x42278e
  4227b8:	mov    dl,BYTE PTR [ebp+0x500e4612]
  4227be:	and    eax,0x9c94bac5
  4227c3:	jnp    0x42274b
  4227c5:	jmp    0x49e5e1ba
  4227ca:	jecxz  0x4227af
  4227cc:	adc    esi,edi
  4227ce:	jge    0x42283d
  4227d0:	lds    edi,FWORD PTR [ebp-0x4e0c7aca]
  4227d6:	add    ch,cl
  4227d8:	jb     0x422813
  4227da:	inc    esp
  4227db:	mov    ds:0x6568cf75,eax
  4227e0:	sti    
  4227e1:	mov    edx,0xd074d4e3
  4227e6:	or     BYTE PTR [eax-0x2c],0x44
  4227ea:	aaa    
  4227eb:	xor    al,BYTE PTR [ecx+edi*1]
  4227ee:	add    DWORD PTR [edi+esi*1-0x1b6cdb67],esp
  4227f5:	lock xor eax,0x7e91cdb3
  4227fb:	(bad)  
  4227fc:	cmp    eax,0xb96330a2
  422801:	mov    dl,0xf1
  422803:	shl    edi,0xb4
  422806:	jp     0x422794
  422808:	jmp    0x422836
  42280a:	(bad)  
  42280b:	jo     0x4227b6
  42280d:	jg     0x4227ad
  42280f:	popa   
  422810:	jmp    0x422891
  422812:	cmp    BYTE PTR [edx+0x345b3965],ch
  422818:	and    DWORD PTR [ebx-0x54],ebx
  42281b:	mov    ch,0x6a
  42281d:	les    esi,FWORD PTR [esi+0x9]
  422820:	and    cl,BYTE PTR [ebp+0x2a828fbc]
  422826:	fs ins BYTE PTR es:[edi],dx
  422828:	mov    esi,0xca71ee64
  42282d:	outs   dx,BYTE PTR ds:[esi]
  42282e:	dec    ebx
  42282f:	sub    ebp,ebx
  422831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422832:	sbb    BYTE PTR [esi],0x7
  422835:	adc    eax,0xe309d1e2
  42283a:	out    0x65,al
  42283c:	fst    DWORD PTR [edi]
  42283e:	pop    es
  42283f:	sar    BYTE PTR [esi-0x78],0xe5
  422843:	add    ebx,esi
  422845:	stos   BYTE PTR es:[edi],al
  422846:	add    BYTE PTR [ecx-0x49],dl
  422849:	js     0x42288f
  42284b:	xchg   ebp,eax
  42284c:	and    BYTE PTR [edx],ah
  42284e:	jmp    0x422866
  422850:	mov    dl,0x45
  422852:	js     0x4227fb
  422854:	fst    QWORD PTR [ecx+0x49]
  422857:	scas   al,BYTE PTR es:[edi]
  422858:	shl    esi,cl
  42285a:	jae    0x4227dd
  42285c:	stc    
  42285d:	and    eax,0x399f88d8
  422862:	data16 (bad) 
  422864:	cmp    eax,0xa94c0c06
  422869:	je     0x4228c6
  42286b:	mov    ah,0x87
  42286d:	sti    
  42286e:	or     BYTE PTR [ebx+esi*8+0x181a1ebd],bh
  422875:	cwde   
  422876:	fldcw  WORD PTR [ebx-0x5]
  422879:	scas   eax,DWORD PTR es:[edi]
  42287a:	dec    edi
  42287b:	pop    esi
  42287c:	pop    esi
  42287d:	inc    ecx
  42287e:	mov    ebp,0x51b01d3d
  422883:	aaa    
  422884:	push   eax
  422885:	out    0xe,al
  422887:	ret    
  422888:	ffreep st(1)
  42288a:	stos   DWORD PTR es:[edi],eax
  42288b:	push   edx
  42288c:	rol    DWORD PTR [esp-0x74a436a2],0xd0
  422894:	pop    es
  422895:	pop    edx
  422896:	adc    eax,0x1ebe30c9
  42289b:	mov    ds:0xf4bcc877,al
  4228a0:	adc    BYTE PTR [edi-0x6c],al
  4228a3:	fst    DWORD PTR [esi]
  4228a5:	loop   0x42285c
  4228a7:	mov    ds:0xa1aaa22c,al
  4228ac:	std    
  4228ad:	(bad)  
  4228ae:	out    dx,al
  4228af:	pushf  
  4228b0:	push   ebp
  4228b1:	pop    es
  4228b2:	mov    fs,WORD PTR [esi-0x18d9c903]
  4228b8:	cmp    bl,BYTE PTR [edi-0x27]
  4228bb:	clc    
  4228bc:	inc    eax
  4228bd:	push   es
  4228be:	hlt    
  4228bf:	fistp  WORD PTR [ebx-0x398e43b8]
  4228c5:	imul   ebx,edi,0xf6b4971d
  4228cb:	and    eax,DWORD PTR [esi]
  4228cd:	add    al,0x98
  4228cf:	das    
  4228d0:	xor    al,0xbe
  4228d2:	jmp    0xf7c8c128
  4228d7:	jle    0x4228c3
  4228d9:	jp     0x4228dd
  4228db:	mov    ebp,DWORD PTR [ebp+edx*2-0x17]
  4228df:	jle    0x42290e
  4228e1:	out    0x52,al
  4228e3:	aaa    
  4228e4:	lahf   
  4228e5:	xor    DWORD PTR [edx+edx*4-0x65],0x9bc703b4
  4228ed:	outs   dx,BYTE PTR ds:[esi]
  4228ee:	inc    edx
  4228ef:	or     DWORD PTR [esp+eax*1],esp
  4228f2:	mov    WORD PTR [ecx-0x4f],?
  4228f5:	mov    edx,0xa39a1791
  4228fa:	dec    ebx
  4228fb:	imul   edx,DWORD PTR [eax],0xe28c9cf4
  422901:	out    0xde,al
  422903:	add    al,0x70
  422905:	fadd   QWORD PTR [edx]
  422907:	add    ch,BYTE PTR [ebp+0x4fcaef41]
  42290d:	pop    cx
  42290f:	or     DWORD PTR [ecx],eax
  422911:	adc    BYTE PTR [edi-0x6d],dl
  422914:	fnstenv [ebx]
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
