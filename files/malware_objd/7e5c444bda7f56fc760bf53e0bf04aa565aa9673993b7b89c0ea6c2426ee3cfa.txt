
7e5c444bda7f56fc760bf53e0bf04aa565aa9673993b7b89c0ea6c2426ee3cfa.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	or     DWORD PTR ds:0x42b01c,0x3e2a
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	add    DWORD PTR ds:0x42b01c,edi
  40101c:	push   ebx
  40101d:	mov    DWORD PTR ds:0x42c000,0x10
  401027:	cmp    DWORD PTR ds:0x42c000,0x0
  40102e:	je     0x401068
  401034:	cmp    DWORD PTR ds:0x42c000,0x1d
  40103b:	jb     0x401068
  401041:	jmp    0x401056
  401046:	push   0x42a000
  40104b:	push   0x42f107
  401050:	call   DWORD PTR ds:0x43000b
  401056:	mov    ecx,DWORD PTR ds:0x42c000
  40105c:	dec    ecx
  40105d:	mov    DWORD PTR ds:0x42c000,ecx
  401063:	jmp    0x401027
  401068:	push   esi
  401069:	and    esi,DWORD PTR ds:0x42d004
  40106f:	push   edi
  401070:	and    ecx,edi
  401072:	mov    esi,0x75108a4
  401077:	sub    DWORD PTR ds:0x42c008,0x273e
  401081:	xor    eax,esi
  401083:	xor    edi,edi
  401085:	xor    edi,DWORD PTR ds:0x424a48
  40108b:	mov    ecx,DWORD PTR ds:0x424a34
  401091:	sub    ecx,edi
  401093:	or     edi,DWORD PTR [edi+ecx*1]
  401096:	mov    edi,0x3272ec
  40109b:	mov    DWORD PTR ds:0x42900c,0x18d1
  4010a5:	add    eax,edi
  4010a7:	mov    DWORD PTR [ebp-0x40],eax
  4010aa:	and    DWORD PTR ds:0x42d01c,0x0
  4010b4:	xor    ecx,ecx
  4010b6:	add    ecx,DWORD PTR ds:0x42d01c
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42d01c,ecx
  4010c3:	cmp    DWORD PTR ds:0x42d01c,0x21
  4010ca:	jle    0x4010f0
  4010d0:	jmp    0x4010e3
  4010d5:	push   0x42b000
  4010da:	push   DWORD PTR [ebp-0x10]
  4010dd:	call   DWORD PTR ds:0x43000f
  4010e3:	cmp    DWORD PTR ds:0x42d01c,0x16
  4010ea:	jb     0x4010b4
  4010f0:	mov    eax,ds:0x42f1eb
  4010f5:	sbb    ecx,DWORD PTR ds:0x42b014
  4010fb:	mov    eax,DWORD PTR [eax]
  4010fd:	and    DWORD PTR ds:0x42d00c,ecx
  401103:	mov    DWORD PTR [ebp-0x3c],eax
  401106:	or     eax,eax
  401108:	mov    eax,ds:0x42f3f3
  40110d:	mov    eax,DWORD PTR [eax]
  40110f:	mov    DWORD PTR [ebp-0x1c],eax
  401112:	adc    ecx,0x40bd
  401118:	mov    DWORD PTR [ebp-0x34],0xf89c87b0
  40111f:	and    DWORD PTR ds:0x42a018,0x0
  401129:	mov    ecx,DWORD PTR ds:0x42a018
  40112f:	inc    ecx
  401130:	mov    DWORD PTR ds:0x42a018,ecx
  401136:	cmp    DWORD PTR ds:0x42a018,0x1a
  40113d:	jg     0x40115b
  401143:	jmp    0x40114e
  401148:	call   DWORD PTR ds:0x430013
  40114e:	cmp    DWORD PTR ds:0x42a018,0x12
  401155:	jb     0x401129
  40115b:	mov    eax,DWORD PTR [ebp-0x34]
  40115e:	xor    eax,esi
  401160:	and    DWORD PTR ds:0x42a014,0x0
  40116a:	jmp    0x40117c
  40116f:	mov    ecx,DWORD PTR ds:0x42a014
  401175:	inc    ecx
  401176:	mov    DWORD PTR ds:0x42a014,ecx
  40117c:	cmp    DWORD PTR ds:0x42a014,0x17
  401183:	jae    0x4011cd
  401189:	cmp    DWORD PTR ds:0x42a014,0x9
  401190:	jbe    0x4011cd
  401196:	jmp    0x4011ae
  40119b:	push   0x42f19b
  4011a0:	push   DWORD PTR [ebp-0x10]
  4011a3:	push   0x271c
  4011a8:	call   DWORD PTR ds:0x430017
  4011ae:	cmp    DWORD PTR ds:0x42a014,0x8
  4011b5:	jne    0x4011c8
  4011bb:	mov    ecx,DWORD PTR ds:0x42a014
  4011c1:	inc    ecx
  4011c2:	mov    DWORD PTR ds:0x42a014,ecx
  4011c8:	jmp    0x40116f
  4011cd:	add    eax,edi
  4011cf:	mov    DWORD PTR [ebp-0x40],eax
  4011d2:	and    DWORD PTR ds:0x42a01c,0x0
  4011dc:	mov    ecx,DWORD PTR ds:0x42a01c
  4011e2:	inc    ecx
  4011e3:	mov    DWORD PTR ds:0x42a01c,ecx
  4011e9:	cmp    DWORD PTR ds:0x42a01c,0x19
  4011f0:	jge    0x40122b
  4011f6:	jmp    0x40121e
  4011fb:	push   DWORD PTR [ebp-0x24]
  4011fe:	push   DWORD PTR [ebp-0x18]
  401201:	push   0x42d008
  401206:	push   0x305c
  40120b:	push   0x63b3
  401210:	push   DWORD PTR [ebp-0x10]
  401213:	push   0x1042
  401218:	call   DWORD PTR ds:0x43001b
  40121e:	cmp    DWORD PTR ds:0x42a01c,0x12
  401225:	jb     0x4011dc
  40122b:	mov    eax,ds:0x42f36b
  401230:	movzx  ecx,BYTE PTR ds:0x42c01c
  401237:	and    DWORD PTR ds:0x42d010,ecx
  40123d:	mov    DWORD PTR [ebp-0x40],eax
  401240:	not    eax
  401242:	mov    eax,DWORD PTR [ebp-0x3c]
  401245:	sub    DWORD PTR ds:0x42d018,0x42c018
  40124f:	mov    DWORD PTR [ebp-0x14],eax
  401252:	mov    DWORD PTR ds:0x42c014,0x1c
  40125c:	cmp    DWORD PTR ds:0x42c014,0x0
  401263:	je     0x401299
  401269:	cmp    DWORD PTR ds:0x42c014,0x28
  401270:	jbe    0x401299
  401276:	jmp    0x401289
  40127b:	push   DWORD PTR [ebp-0x1c]
  40127e:	push   0x72ae
  401283:	call   DWORD PTR ds:0x430027
  401289:	mov    eax,ds:0x42c014
  40128e:	dec    eax
  40128f:	mov    ds:0x42c014,eax
  401294:	jmp    0x40125c
  401299:	mov    eax,DWORD PTR [ebp-0x14]
  40129c:	mov    ecx,DWORD PTR ds:0x42d014
  4012a2:	sub    DWORD PTR ds:0x42d004,ecx
  4012a8:	push   0x4
  4012aa:	or     DWORD PTR ds:0x42c004,0xf09
  4012b4:	pop    ecx
  4012b5:	sub    ecx,eax
  4012b7:	mov    eax,ds:0x424a88
  4012bc:	mov    eax,DWORD PTR [eax]
  4012be:	sbb    DWORD PTR ds:0x42c000,eax
  4012c4:	add    ecx,DWORD PTR [ebp-0x1c]
  4012c7:	sub    eax,0x251f
  4012cc:	mov    DWORD PTR [ebp-0x2c],0xf89c85f0
  4012d3:	jmp    0x40362f
  4012d8:	sbb    al,0x11
  4012da:	ja     0x4012ad
  4012dc:	imul   ecx,DWORD PTR [ebx+0x45619388],0xc
  4012e3:	push   esi
  4012e4:	xchg   DWORD PTR [edx],ebp
  4012e6:	sub    ebp,DWORD PTR [ebp+0x7a]
  4012e9:	jp     0x401365
  4012eb:	jp     0x401328
  4012ed:	pop    edi
  4012ee:	jp     0x40136a
  4012f0:	and    eax,0x1931272c
  4012f5:	xor    eax,0x3a752f1b
  4012fa:	imul   esi,DWORD PTR [esi+0x49],0x6d6a6a74
  401301:	inc    edx
  401302:	aad    0xdc
  401304:	icebp  
  401305:	pusha  
  401306:	dec    eax
  401307:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  40130b:	jo     0x40137a
  40130d:	pop    ecx
  40130e:	iret   
  40130f:	pop    ebp
  401310:	dec    edx
  401311:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401318:	jg     0x401361
  40131a:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  401321:	push   DWORD PTR [esi-0x24]
  401324:	cli    
  401325:	arpl   WORD PTR [edi+0x1e],di
  401328:	in     eax,dx
  401329:	cmp    ebp,ecx
  40132b:	mov    edx,0xde2397ed
  401330:	mov    ebp,DWORD PTR [ecx]
  401332:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401339:	fst    QWORD PTR [esp+eiz*8]
  40133c:	push   cs
  40133d:	cli    
  40133e:	sbb    BYTE PTR ss:[eax+0xc],cl
  401342:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401347:	and    edx,DWORD PTR [ecx+0x15]
  40134a:	mov    dh,0xff
  40134c:	jmp    0x42c43e9a
  401351:	enter  0xf95b,0x1a
  401355:	cli    
  401356:	js     0x401309
  401358:	jae    0x401337
  40135a:	cwde   
  40135b:	pop    edi
  40135c:	mov    esi,DWORD PTR [ecx+0x41922417]
  401362:	add    ebx,DWORD PTR [esi+0xb83823c]
  401368:	fisubr DWORD PTR ds:0x43448d62
  40136e:	fs repz iret 
  401371:	mov    ch,BYTE PTR [ecx]
  401373:	mov    eax,eax
  401375:	(bad)  
  401376:	int3   
  401377:	mov    BYTE PTR [ecx-0xc],ah
  40137a:	push   ebp
  40137b:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  40137f:	add    eax,DWORD PTR [esi+0x13]
  401382:	lods   eax,DWORD PTR ds:[esi]
  401383:	dec    ebx
  401384:	retf   0x40b7
  401387:	rcl    BYTE PTR [esi+eiz*2],1
  40138a:	std    
  40138b:	bound  esp,QWORD PTR [esi-0x4b]
  40138e:	stc    
  40138f:	push   0x1f52f8bf
  401394:	mov    cs,esi
  401396:	xor    DWORD PTR [edx],0x712e9f90
  40139c:	in     eax,dx
  40139d:	lahf   
  40139e:	(bad)  
  40139f:	adc    BYTE PTR [eax-0x53e654f1],bh
  4013a5:	push   esi
  4013a6:	or     bh,BYTE PTR [esp+edi*4+0x6e]
  4013aa:	dec    ebp
  4013ab:	sti    
  4013ac:	mov    ds:0x244e1112,eax
  4013b1:	ds call 0x1b83eef5
  4013b7:	call   0xd6b2354e
  4013bc:	mov    dh,0x49
  4013be:	push   ebp
  4013bf:	(bad)  
  4013c0:	mov    bl,0xa2
  4013c2:	into   
  4013c3:	jecxz  0x401364
  4013c5:	fwait
  4013c6:	jp     0x40142c
  4013c8:	push   ds
  4013c9:	cmp    ch,ch
  4013cb:	push   ecx
  4013cc:	inc    eax
  4013cd:	mov    esp,0x5be931ea
  4013d2:	(bad)  
  4013d3:	xor    DWORD PTR [ebx-0x50924cd1],ebp
  4013d9:	aad    0xfe
  4013db:	dec    edi
  4013dc:	sets   BYTE PTR [ebp+0x58]
  4013e0:	ins    BYTE PTR es:[edi],dx
  4013e1:	mov    ds:0xaa412367,eax
  4013e6:	mov    ecx,0x7ca444c5
  4013eb:	pushf  
  4013ec:	xchg   ecx,eax
  4013ed:	dec    ebp
  4013ee:	xchg   ecx,eax
  4013ef:	ja     0x4013ab
  4013f1:	push   esi
  4013f2:	mov    ebp,0x57512e3d
  4013f7:	xchg   BYTE PTR [esi-0x4],ah
  4013fa:	daa    
  4013fb:	pushf  
  4013fc:	lods   al,BYTE PTR ds:[esi]
  4013fd:	cli    
  4013fe:	mov    ecx,0x1c0cf860
  401403:	inc    ecx
  401404:	(bad)  
  401405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401406:	out    dx,eax
  401407:	or     ah,ch
  401409:	and    edx,DWORD PTR [ebx+0x26]
  40140c:	std    
  40140d:	pusha  
  40140e:	cmp    ebp,DWORD PTR [ebp-0x68507ba3]
  401414:	popa   
  401415:	and    eax,0x88ef13b4
  40141a:	in     eax,0x79
  40141c:	mov    esp,0x1a086fc2
  401421:	jno    0x4013bc
  401423:	mov    al,0x43
  401425:	mov    al,0xb5
  401427:	dec    edx
  401428:	dec    eax
  401429:	add    ebx,ecx
  40142b:	scas   eax,DWORD PTR es:[edi]
  40142c:	sub    eax,DWORD PTR [ecx-0x34bf89ad]
  401432:	push   ebp
  401433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401434:	and    cl,BYTE PTR [esi+0x59814937]
  40143a:	pop    es
  40143b:	aad    0xeb
  40143d:	adc    bh,BYTE PTR [ebp+0x4e]
  401440:	push   ds
  401441:	jne    0x401448
  401443:	outs   dx,BYTE PTR ds:[si]
  401445:	xor    edx,DWORD PTR [esi+0x3504f56c]
  40144b:	push   ds
  40144c:	xchg   edi,eax
  40144d:	js     0x40146b
  40144f:	push   ebp
  401450:	popa   
  401451:	mov    eax,0x8c66763e
  401456:	xlat   BYTE PTR ds:[ebx]
  401457:	(bad)  [esi]
  401459:	call   0x7055d03c
  40145e:	fcmovnbe st,st(4)
  401460:	pushf  
  401461:	ds aaa 
  401463:	mov    ds:0xb560c281,eax
  401468:	inc    edi
  401469:	dec    eax
  40146a:	(bad)  
  40146b:	mov    esp,tr1
  40146e:	push   esp
  40146f:	pop    ebx
  401470:	mov    ds:0x649a6423,al
  401475:	mov    ebx,esp
  401477:	inc    esi
  401478:	(bad)  
  401479:	stc    
  40147a:	push   ss
  40147b:	dec    ecx
  40147c:	in     eax,dx
  40147d:	clc    
  40147e:	sub    BYTE PTR [ebx+0x7f],cl
  401481:	fild   DWORD PTR [ebp+0x5f230e7e]
  401487:	jbe    0x4014b1
  401489:	scas   eax,DWORD PTR es:[edi]
  40148a:	jg     0x401477
  40148c:	inc    edx
  40148d:	sbb    ebx,esp
  40148f:	test   ebp,ebp
  401491:	push   edi
  401492:	test   eax,0xeab6747b
  401497:	sub    dh,BYTE PTR [ebx]
  401499:	test   DWORD PTR [ecx+0x6a],ecx
  40149c:	xlat   BYTE PTR ds:[ebx]
  40149d:	jg     0x4014db
  40149f:	mov    esp,0x32f677e
  4014a4:	les    edx,FWORD PTR [ebp+eax*2-0x1b]
  4014a8:	fptan  
  4014aa:	and    bl,al
  4014ac:	xor    BYTE PTR [edi+0x50],dh
  4014af:	xor    al,0x77
  4014b1:	and    eax,DWORD PTR [edi-0x3aace454]
  4014b7:	sub    eax,0x1961fad6
  4014bc:	outs   dx,BYTE PTR ds:[esi]
  4014bd:	inc    ebp
  4014be:	test   ch,dh
  4014c0:	scas   al,BYTE PTR es:[edi]
  4014c1:	mov    ds:0xd5961545,eax
  4014c6:	xchg   DWORD PTR [esp+ebp*2+0x67],esi
  4014ca:	add    eax,DWORD PTR [eax+0x326eb11b]
  4014d0:	xchg   BYTE PTR [edx],ah
  4014d2:	sub    edi,DWORD PTR [edx-0x3e89200c]
  4014d8:	push   edi
  4014d9:	(bad)  
  4014da:	mov    ecx,0xd307e071
  4014df:	xchg   ecx,eax
  4014e0:	retf   0xa9b1
  4014e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014e4:	pop    es
  4014e5:	(bad)  
  4014e7:	cmp    DWORD PTR [edx+0x14],edx
  4014ea:	push   ds
  4014eb:	sbb    bh,BYTE PTR [ebp-0x3f]
  4014ee:	xchg   ebp,eax
  4014ef:	fcom   QWORD PTR [ecx-0xc]
  4014f2:	lahf   
  4014f3:	jno    0x4014c9
  4014f5:	jns    0x4014c8
  4014f7:	xlat   BYTE PTR ds:[ebx]
  4014f8:	dec    edi
  4014f9:	push   ss
  4014fa:	dec    edi
  4014fb:	and    eax,0xdf38565f
  401500:	adc    ecx,esi
  401502:	pushf  
  401503:	sar    BYTE PTR [ecx+0x321b69fc],cl
  401509:	sub    BYTE PTR [ebp-0x640599de],ah
  40150f:	pusha  
  401510:	lahf   
  401511:	mov    DWORD PTR [ebp+0x4f],eax
  401514:	jle    0x40155e
  401516:	adc    edx,DWORD PTR [ebx]
  401518:	in     al,dx
  401519:	xchg   esi,eax
  40151a:	inc    edi
  40151b:	in     ax,0x82
  40151e:	sbb    DWORD PTR [ebx-0x249dc76a],0xacf80aaf
  401528:	xchg   bx,ax
  40152a:	outs   dx,DWORD PTR ds:[esi]
  40152b:	and    BYTE PTR [ebp*8-0x43818836],dl
  401532:	inc    DWORD PTR [esi]
  401534:	inc    edx
  401535:	add    BYTE PTR [eax+0x45791532],0x53
  40153c:	sbb    ah,dl
  40153e:	adc    ecx,edi
  401540:	adc    al,0xec
  401542:	sahf   
  401543:	test   eax,0x525d80f1
  401548:	mov    eax,ds:0x948383e7
  40154d:	or     esi,DWORD PTR [esi-0xf]
  401550:	mov    edi,0xfb390760
  401555:	ja     0x4015d1
  401557:	cmp    eax,0x467e1c17
  40155c:	push   0xfffffff3
  40155e:	pop    es
  40155f:	fsubr  QWORD PTR [ecx-0x2c1f7e62]
  401565:	pop    ss
  401566:	out    dx,al
  401567:	dec    esp
  401568:	aam    0xd3
  40156a:	xor    al,0x3c
  40156c:	mov    bh,0x2
  40156e:	pop    ss
  40156f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401570:	aam    0x6d
  401572:	inc    esi
  401573:	sub    ebp,edx
  401575:	dec    eax
  401576:	push   ss
  401577:	arpl   dx,ax
  401579:	pop    ebx
  40157a:	and    ecx,0x4c9f935e
  401580:	sub    eax,0x9b39fd74
  401585:	dec    edx
  401586:	hlt    
  401587:	leave  
  401588:	mov    ch,0xed
  40158a:	loop   0x4015f3
  40158c:	loopne 0x40159d
  40158e:	cli    
  40158f:	or     al,0x11
  401591:	loopne 0x40155c
  401593:	and    edx,edx
  401595:	test   eax,0x75e46021
  40159a:	cmp    eax,0x4e79dc10
  40159f:	jb     0x40152a
  4015a1:	pop    ebp
  4015a2:	mov    gs,WORD PTR [eax+0x70]
  4015a5:	pop    eax
  4015a6:	push   eax
  4015a7:	and    BYTE PTR [edi],ah
  4015a9:	(bad)  
  4015aa:	xor    DWORD PTR [esp+ecx*4-0x59],ecx
  4015ae:	jge    0x401542
  4015b0:	mov    dl,0xfa
  4015b2:	inc    ebp
  4015b3:	mov    ds:0x8182efac,al
  4015b8:	add    BYTE PTR [ebp+0x12],ch
  4015bb:	xor    dl,BYTE PTR [edx+0x6f]
  4015be:	in     eax,0xcf
  4015c0:	not    esi
  4015c2:	and    dh,BYTE PTR [eax+0x392a3846]
  4015c8:	rcl    DWORD PTR [edx],1
  4015ca:	test   al,0x89
  4015cc:	xchg   DWORD PTR [esi-0x7a6e70f6],ebx
  4015d2:	pop    ebx
  4015d3:	repnz inc eax
  4015d5:	dec    edx
  4015d6:	daa    
  4015d7:	or     bh,al
  4015d9:	mov    bh,0x27
  4015db:	push   0xffffffb5
  4015dd:	test   eax,0xc4415a1f
  4015e2:	(bad)  
  4015e4:	mov    eax,ds:0x35d19e28
  4015e9:	cld    
  4015ea:	call   DWORD PTR [ecx+0x72d3305f]
  4015f0:	scas   eax,DWORD PTR es:[edi]
  4015f1:	xor    BYTE PTR [esi+0x7b],dl
  4015f4:	nop
  4015f5:	sub    eax,0x3454dccd
  4015fa:	ja     0x4015b6
  4015fc:	fldcw  WORD PTR [edx]
  4015fe:	sub    ah,BYTE PTR [ecx-0x24]
  401601:	call   DWORD PTR [edi]
  401603:	jnp    0x401600
  401605:	lods   eax,DWORD PTR ds:[esi]
  401606:	or     al,0x2f
  401608:	test   DWORD PTR [edx-0x659d663e],edi
  40160e:	rcr    DWORD PTR [ebx+eiz*1-0x35],cl
  401612:	ret    
  401613:	jge    0x40164b
  401615:	xchg   esp,eax
  401616:	cmp    eax,0x5ee58f67
  40161b:	leave  
  40161c:	lock lods eax,DWORD PTR ds:[esi]
  40161e:	mov    al,ds:0x10da7777
  401623:	sti    
  401624:	or     eax,0x169f45e2
  401629:	pushf  
  40162a:	sbb    DWORD PTR [edi-0x25baae90],edx
  401630:	add    edi,DWORD PTR [ebx]
  401632:	call   0xa810df83
  401637:	cwde   
  401638:	(bad)  
  401639:	jnp    0x401611
  40163b:	xor    DWORD PTR [ecx],ebp
  40163d:	mov    ch,0xff
  40163f:	not    BYTE PTR [edi+0x1810f609]
  401645:	mov    edx,0x57553e35
  40164a:	or     eax,0x36eb52a4
  40164f:	or     al,0xa3
  401651:	test   eax,0xef378595
  401656:	inc    esi
  401657:	add    BYTE PTR [edi+0x40],0x3c
  40165b:	fisttp DWORD PTR [esi]
  40165d:	out    0xe8,al
  40165f:	pop    esi
  401660:	mov    BYTE PTR [eax-0x55],dh
  401663:	aad    0x56
  401665:	sbb    bh,cl
  401667:	push   0xffffffc7
  401669:	je     0x401643
  40166b:	ins    BYTE PTR es:[edi],dx
  40166c:	adc    esi,DWORD PTR [eax+0x48caf2eb]
  401672:	add    al,0x33
  401674:	xchg   esi,eax
  401675:	inc    ecx
  401676:	loopne 0x401607
  401678:	scas   eax,DWORD PTR es:[edi]
  401679:	lock test BYTE PTR [ecx],bh
  40167c:	je     0x401690
  40167e:	es stos DWORD PTR es:[edi],eax
  401680:	out    0xad,al
  401682:	mov    cl,0x25
  401684:	push   esi
  401685:	xor    eax,0x339ed227
  40168a:	popw   ss
  40168c:	outs   dx,DWORD PTR ds:[esi]
  40168d:	push   edx
  40168e:	mov    fs,WORD PTR [ecx-0x3f]
  401691:	das    
  401692:	xor    eax,0x1c53a2cf
  401697:	mov    ah,0x37
  401699:	js     0x40167d
  40169b:	aad    0x12
  40169d:	push   ebx
  40169e:	or     al,0x7c
  4016a0:	dec    eax
  4016a1:	or     eax,0xe3f79e58
  4016a6:	jns    0x401690
  4016a8:	out    0x3,eax
  4016aa:	cmp    ah,bh
  4016ac:	fcomp  QWORD PTR [edi+0x62e3272c]
  4016b2:	loope  0x40167d
  4016b4:	mov    esp,0xa172687f
  4016b9:	push   edi
  4016ba:	push   0xbdc78d00
  4016bf:	and    al,0xed
  4016c1:	jne    0x4016f5
  4016c3:	push   cs
  4016c4:	lods   al,BYTE PTR ds:[esi]
  4016c5:	out    dx,eax
  4016c6:	or     al,al
  4016c8:	jmp    0x4016a4
  4016ca:	clc    
  4016cb:	sub    bh,al
  4016cd:	jl     0x40169e
  4016cf:	jne    0x4016bb
  4016d1:	xchg   BYTE PTR [ebp-0x12],bh
  4016d4:	or     al,0x18
  4016d6:	out    0x86,eax
  4016d8:	test   al,0xeb
  4016da:	rcr    bl,cl
  4016dc:	(bad)  ds:0xf5385be9
  4016e2:	frstor [edx+0x59]
  4016e5:	sbb    eax,0x5bc21526
  4016ea:	or     eax,0xa916a7f7
  4016ef:	push   cs
  4016f0:	or     al,0x10
  4016f2:	loopne 0x401702
  4016f4:	fucomip st,st(4)
  4016f6:	icebp  
  4016f7:	pop    ds
  4016f8:	xchg   edi,eax
  4016f9:	xor    eax,0xe1c3877d
  4016fe:	les    edx,FWORD PTR [ecx+0x44eb244d]
  401704:	mov    DWORD PTR [esi-0x32],edx
  401707:	mov    bl,0x90
  401709:	ins    DWORD PTR es:[di],dx
  40170b:	ret    
  40170c:	inc    ebx
  40170d:	(bad)  
  40170e:	jo     0x40178c
  401710:	retf   
  401711:	sbb    al,0x5c
  401713:	fs (bad) 
  401715:	dec    ebp
  401716:	pop    esp
  401717:	xchg   ebp,eax
  401718:	(bad)  
  401719:	imul   esp,DWORD PTR [edx-0x3e],0xffffff81
  40171d:	xlat   BYTE PTR ds:[ebx]
  40171e:	cmp    al,0x92
  401720:	mov    ds:0xcec58c3e,eax
  401725:	adc    dl,BYTE PTR [esi]
  401727:	cwde   
  401728:	mov    ah,0xfd
  40172a:	add    al,0x2a
  40172c:	jmp    0x40175b
  40172e:	not    esp
  401730:	rcl    BYTE PTR [eax],1
  401732:	inc    esp
  401733:	xchg   ebp,eax
  401734:	ret    0x805b
  401737:	sti    
  401738:	push   cs
  401739:	pop    ebx
  40173a:	sar    eax,1
  40173c:	pop    eax
  40173d:	leave  
  40173e:	cdq    
  40173f:	aam    0x19
  401741:	xor    DWORD PTR [edi*4+0x5e59159e],edx
  401748:	dec    edi
  401749:	add    eax,0x4783e928
  40174e:	pop    esp
  40174f:	ret    
  401750:	inc    esp
  401751:	nop
  401752:	fwait
  401753:	mov    BYTE PTR [edi],dl
  401755:	adc    al,0x59
  401757:	inc    ecx
  401758:	cmp    DWORD PTR [ebp+ebx*2+0x7c],ebx
  40175c:	pop    ebx
  40175d:	retf   
  40175e:	add    eax,0x6f98232f
  401763:	jl     0x4017d8
  401765:	adc    ebx,DWORD PTR [ebx]
  401767:	call   0x533c:0xbf7e2b4
  40176e:	add    bh,BYTE PTR [ebx+0x3af1e6da]
  401774:	dec    ebp
  401775:	inc    ebx
  401776:	push   esi
  401777:	pop    ss
  401778:	sub    bh,bl
  40177a:	sub    eax,0xfd6b9d9b
  40177f:	jecxz  0x4017c4
  401781:	sbb    eax,0xfad9b402
  401786:	aad    0x6
  401788:	call   0xf0b2ad1c
  40178d:	psubq  xmm7,xmm6
  401791:	jbe    0x401755
  401793:	fstp   TBYTE PTR [esp+edx*1+0x1d73ebbb]
  40179a:	jmp    0xece4:0x681a576c
  4017a1:	add    al,0x77
  4017a3:	mov    dl,0x70
  4017a5:	sbb    DWORD PTR [edx+0x1770af01],ebp
  4017ab:	sbb    eax,0x4e5ccbcc
  4017b0:	mov    ebp,0xb980320
  4017b5:	fsub   QWORD PTR ds:0x379fa36f
  4017bb:	outs   dx,BYTE PTR ds:[esi]
  4017bc:	jno    0x4017e7
  4017be:	popf   
  4017bf:	mov    eax,ds:0x41ed09fd
  4017c4:	lds    ebp,FWORD PTR [ecx+eax*1+0x37]
  4017c8:	mov    al,0x47
  4017ca:	push   cs
  4017cb:	(bad)
  4017cf:	std    
  4017d0:	jp     0x36cd5c67
  4017d6:	inc    ebp
  4017d7:	pusha  
  4017d8:	aas    
  4017d9:	ror    DWORD PTR [eax],0xad
  4017dc:	js     0x4017df
  4017de:	sub    eax,0x5dbadcb5
  4017e3:	sub    BYTE PTR [edi+0x5a],bh
  4017e6:	mov    ds:0x333b4d31,al
  4017eb:	xchg   ecx,eax
  4017ec:	out    dx,al
  4017ed:	out    0x33,al
  4017ef:	or     al,0x83
  4017f1:	(bad)  
  4017f2:	cld    
  4017f3:	ins    BYTE PTR es:[edi],dx
  4017f4:	call   0xfae6:0xc1e6dc04
  4017fb:	jmp    0xbb36:0xe104c67e
  401802:	gs pop ebx
  401804:	sahf   
  401805:	cs mov edi,0x3fbba7af
  40180b:	inc    esp
  40180c:	mov    edx,eax
  40180e:	inc    ebx
  40180f:	ret    0xf61b
  401812:	call   0x8062:0x3771028c
  401819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40181a:	mov    esi,0xe80aa00e
  40181f:	adc    al,BYTE PTR [ebp+ebx*1-0x6cfd68eb]
  401826:	jnp    0x4017ef
  401828:	jno    0x401801
  40182a:	outs   dx,BYTE PTR ds:[esi]
  40182b:	push   edi
  40182c:	sbb    DWORD PTR [esp+eax*4],edi
  40182f:	in     al,0x75
  401831:	test   al,0xd4
  401833:	push   esi
  401834:	fcom   QWORD PTR [ebp-0x75408bde]
  40183a:	and    edx,DWORD PTR [edi+0x2ab93f55]
  401840:	cli    
  401841:	adc    al,0x1a
  401843:	test   eax,0x8b303293
  401848:	std    
  401849:	repnz pop esi
  40184b:	sbb    ah,dl
  40184d:	and    ch,dl
  40184f:	scas   eax,DWORD PTR es:[edi]
  401850:	(bad)  
  401851:	push   esi
  401852:	push   ds
  401853:	arpl   WORD PTR [edi+0x13],bx
  401856:	push   0xffffff95
  401858:	inc    edi
  401859:	jns    0x4017e5
  40185b:	or     DWORD PTR [edi-0x26],esp
  40185e:	mov    ch,0xe
  401860:	mov    al,0xcb
  401862:	mov    ds:0x249cf0cf,al
  401867:	or     BYTE PTR [ecx-0x61],dh
  40186a:	test   eax,0xef9caac0
  40186f:	in     al,dx
  401870:	inc    ecx
  401871:	jmp    0x4017fe
  401873:	iret   
  401874:	adc    DWORD PTR [edx],0xfe8c2921
  40187a:	push   ebp
  40187b:	adc    DWORD PTR [edx],edi
  40187d:	jbe    0x401818
  40187f:	xchg   edx,eax
  401880:	js     0x40180e
  401882:	inc    eax
  401883:	dec    edx
  401884:	call   0x3145f3b8
  401889:	push   0x4e879766
  40188e:	pop    ebx
  40188f:	mov    dl,0x13
  401891:	push   esp
  401892:	mov    ebp,0xc47b798b
  401897:	or     esp,esp
  401899:	int    0x6b
  40189b:	jl     0x4018aa
  40189d:	in     eax,0xe3
  40189f:	inc    edx
  4018a0:	pop    edi
  4018a1:	cmp    DWORD PTR [edx-0x65a84231],ebx
  4018a7:	sub    dh,dl
  4018a9:	mov    bh,BYTE PTR [eax+0x25147a99]
  4018af:	test   BYTE PTR [eax-0x59],dl
  4018b2:	pop    es
  4018b3:	out    dx,eax
  4018b4:	(bad)  [ebp+0x24]
  4018b7:	cmp    edi,DWORD PTR [eax+0x4feb8986]
  4018bd:	mov    dh,0x16
  4018bf:	push   0xf500bc44
  4018c4:	sub    DWORD PTR [edi+0x1e603643],0xffffffe4
  4018cb:	jns    0x40187f
  4018cd:	lods   al,BYTE PTR ds:[esi]
  4018ce:	test   eax,0xf7c777ab
  4018d3:	cld    
  4018d4:	mov    dl,0x25
  4018d6:	hlt    
  4018d7:	sub    dl,cl
  4018d9:	or     ebp,DWORD PTR [esi]
  4018db:	shl    edi,0x68
  4018de:	les    ecx,FWORD PTR [esp+ebp*2+0x2]
  4018e2:	add    eax,0xb9e4f42
  4018e7:	cmp    al,0x0
  4018e9:	push   edx
  4018ea:	xchg   DWORD PTR [eax],ecx
  4018ec:	mov    dh,0xd2
  4018ee:	jge    0x4018a5
  4018f0:	retf   
  4018f1:	out    dx,al
  4018f2:	inc    ebp
  4018f3:	mov    ds:0xe3db17dd,al
  4018f8:	push   ss
  4018f9:	sbb    al,0x45
  4018fb:	jecxz  0x4018b9
  4018fd:	mov    DWORD PTR [edi+0x5],esi
  401900:	push   esi
  401901:	out    dx,al
  401902:	aam    0x61
  401904:	ins    DWORD PTR es:[edi],dx
  401905:	test   eax,0x7db13522
  40190a:	lea    edx,[edx]
  40190c:	xchg   ecx,eax
  40190d:	jb     0x40192a
  40190f:	dec    ecx
  401910:	xor    esp,edx
  401912:	push   0x552c4be5
  401917:	jbe    0x40192a
  401919:	push   esp
  40191a:	or     edx,DWORD PTR [eax+0x5745ffbd]
  401920:	inc    ecx
  401921:	dec    edi
  401922:	stos   BYTE PTR es:[edi],al
  401923:	rcl    BYTE PTR [ebx],cl
  401925:	sbb    BYTE PTR [esi-0x29],0x40
  401929:	xlat   BYTE PTR gs:[ebx]
  40192b:	rcl    DWORD PTR [eax],cl
  40192d:	jbe    0x4018c5
  40192f:	xor    ebx,DWORD PTR [eax-0x61b8be61]
  401935:	cmc    
  401936:	pop    eax
  401937:	cmc    
  401938:	cmp    eax,0x517c44ee
  40193d:	jp     0x4019b5
  40193f:	mov    eax,ds:0xf75ef216
  401944:	shl    DWORD PTR [edi+0x8dd958b],cl
  40194a:	stc    
  40194b:	cmp    BYTE PTR [ebx+0x67],0x9
  40194f:	add    edi,DWORD PTR [edx]
  401951:	mov    ds:0xc35c0797,eax
  401956:	test   DWORD PTR [ebp+0x3580c9a7],esi
  40195c:	push   ebp
  40195d:	push   ecx
  40195e:	ja     0x401993
  401960:	mov    esp,0xd45dddf5
  401965:	sbb    BYTE PTR [edx+ebx*8+0x69],0x33
  40196a:	sub    cl,al
  40196c:	ds hlt 
  40196e:	stos   DWORD PTR es:[edi],eax
  40196f:	push   0x1c
  401971:	popa   
  401972:	es loop 0x401903
  401975:	ret    
  401976:	adc    BYTE PTR [ecx+0x6d8df5dd],cl
  40197c:	xchg   DWORD PTR [ecx-0x35],ebx
  40197f:	xchg   ebp,eax
  401980:	fld    QWORD PTR ds:0xd6bbbb01
  401986:	mov    ds:0x568006a0,al
  40198b:	(bad)  
  40198c:	test   BYTE PTR [ebp-0x55],bh
  40198f:	mov    ecx,0x5fcb1691
  401994:	repnz shl BYTE PTR [esi+0x1199a00d],cl
  40199b:	(bad)  
  40199c:	jmp    FWORD PTR [ebx]
  40199e:	iret   
  40199f:	icebp  
  4019a0:	or     al,0x64
  4019a2:	cmp    al,0xe1
  4019a4:	lds    edi,FWORD PTR [eax+edx*4]
  4019a7:	or     eax,ebp
  4019a9:	mov    eax,ds:0xb3fc7790
  4019ae:	sbb    eax,0x663fd6ef
  4019b3:	stos   DWORD PTR es:[edi],eax
  4019b4:	xchg   edi,eax
  4019b5:	dec    esi
  4019b6:	jo     0x4019cb
  4019b8:	jo     0x401a18
  4019ba:	fs stc 
  4019bc:	cwde   
  4019bd:	mov    cr3,edi
  4019c0:	add    al,0x43
  4019c2:	out    0xc6,al
  4019c4:	addr16 mov esi,0xb9bbeb56
  4019ca:	and    eax,0x42a1ffae
  4019cf:	ds xchg edx,eax
  4019d1:	xchg   esp,eax
  4019d2:	pop    ecx
  4019d3:	and    DWORD PTR [edx],esi
  4019d5:	jg     0x401a31
  4019d7:	test   eax,0x4924b705
  4019dc:	inc    edx
  4019dd:	mov    eax,ds:0x303b002e
  4019e2:	repnz or ebp,esi
  4019e5:	and    eax,0x1b9851ae
  4019ea:	jbe    0x4019fd
  4019ec:	xchg   edx,eax
  4019ed:	xchg   edi,eax
  4019ee:	lds    esi,FWORD PTR [esi]
  4019f0:	sub    eax,0xe4875148
  4019f5:	and    bl,BYTE PTR es:[esi-0x2f2b226a]
  4019fc:	(bad)  
  4019fd:	int    0xaa
  4019ff:	mov    esp,0x1d78dc4c
  401a04:	stos   DWORD PTR es:[edi],eax
  401a05:	push   edi
  401a06:	inc    esi
  401a07:	loope  0x401a53
  401a09:	pusha  
  401a0a:	(bad)  [edi]
  401a0c:	cli    
  401a0d:	sar    ebp,0x74
  401a10:	push   eax
  401a11:	scas   eax,DWORD PTR es:[edi]
  401a12:	add    bl,BYTE PTR [ecx+ebp*1+0xe]
  401a16:	add    DWORD PTR [eax],esp
  401a18:	mov    ah,0xe2
  401a1a:	daa    
  401a1b:	enter  0xfcde,0xd3
  401a1f:	test   eax,0xb2d1dde6
  401a24:	pop    ebp
  401a25:	pop    es
  401a26:	sbb    eax,0xcd7b92a7
  401a2b:	(bad)  
  401a2c:	jae    0x401a8a
  401a2e:	jns    0x401a4c
  401a30:	test   DWORD PTR [eax],edx
  401a32:	dec    ebp
  401a33:	add    BYTE PTR [ecx],cl
  401a35:	jnp    0x4019f0
  401a37:	test   eax,0x9c50245e
  401a3c:	jmp    0x7948:0x4124af0
  401a43:	out    dx,eax
  401a44:	push   ss
  401a45:	fsubr  QWORD PTR [ebx+0x28a6b48a]
  401a4b:	addr16 xchg edx,eax
  401a4d:	dec    edi
  401a4e:	pusha  
  401a4f:	push   eax
  401a50:	pop    eax
  401a51:	fdiv   DWORD PTR [esi]
  401a53:	sbb    dh,0xaf
  401a56:	xchg   edi,eax
  401a57:	mov    esi,0xef27fb6e
  401a5c:	xor    esi,edi
  401a5e:	sti    
  401a5f:	jae    0x401ad3
  401a61:	loope  0x401a62
  401a63:	test   eax,0xfd9216d1
  401a68:	out    dx,al
  401a69:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a6c:	shl    DWORD PTR [edi+0x36eeb107],1
  401a72:	xor    bh,BYTE PTR [edx]
  401a74:	xchg   esp,eax
  401a75:	mov    eax,ds:0xb4fc670a
  401a7a:	push   ecx
  401a7b:	inc    eax
  401a7c:	adc    ebp,DWORD PTR [esi-0x35]
  401a7f:	mov    bl,0xef
  401a81:	(bad)  
  401a82:	fdivr  DWORD PTR [esi]
  401a84:	xchg   ebp,eax
  401a85:	daa    
  401a86:	mov    al,BYTE PTR [edx]
  401a88:	mul    BYTE PTR [ebp+0x72]
  401a8b:	mov    edx,0x5f3c7d6e
  401a90:	or     BYTE PTR [esi+0x140d2c5d],ah
  401a96:	jnp    0x401a3f
  401a98:	popa   
  401a99:	pusha  
  401a9a:	mov    esp,0xfeebcbc3
  401a9f:	ins    BYTE PTR es:[edi],dx
  401aa0:	mov    esi,0x7f107b6b
  401aa5:	jns    0x401b18
  401aa7:	lock jl 0x401a9c
  401aaa:	lods   al,BYTE PTR ds:[esi]
  401aab:	push   es
  401aac:	mov    edx,0x9c9c7dd8
  401ab1:	or     DWORD PTR [ebx],ebp
  401ab3:	xchg   edx,eax
  401ab4:	out    0x28,eax
  401ab6:	pop    ecx
  401ab7:	ret    
  401ab8:	pop    edi
  401ab9:	add    eax,0xd944118
  401abe:	std    
  401abf:	sub    DWORD PTR [ebx],edx
  401ac1:	xchg   edx,eax
  401ac2:	ja     0x401ae0
  401ac4:	in     al,0x61
  401ac6:	into   
  401ac7:	dec    edi
  401ac8:	push   ebp
  401ac9:	retf   
  401aca:	push   ss
  401acb:	packuswb mm6,QWORD PTR [ebx+0x1e26bedc]
  401ad2:	enter  0xcc46,0xfe
  401ad6:	mov    ecx,0xa19ed733
  401adb:	(bad)  
  401adc:	test   BYTE PTR [edi-0x1f],0x9a
  401ae0:	in     al,0xd9
  401ae2:	jle    0x401b26
  401ae4:	cdq    
  401ae5:	mov    dh,0xeb
  401ae7:	sbb    ah,BYTE PTR [edx-0x34]
  401aea:	in     eax,dx
  401aeb:	pop    edx
  401aec:	xor    bl,dl
  401aee:	dec    ebx
  401aef:	push   cs
  401af0:	(bad)  
  401af1:	rcl    BYTE PTR [esi-0x4f77d51a],cl
  401af7:	rcr    esp,0xa5
  401afa:	jb     0x401a82
  401afc:	cmp    edi,DWORD PTR [ebx-0x25843187]
  401b02:	mov    cl,0xe
  401b04:	arpl   WORD PTR fs:[ebx],di
  401b07:	lea    esi,[esi-0x74f718e6]
  401b0d:	and    BYTE PTR [esi],dl
  401b0f:	outs   dx,DWORD PTR ds:[esi]
  401b10:	jge    0x401a94
  401b12:	test   al,0xa6
  401b14:	xor    eax,0x51a6ff0
  401b19:	jo     0x401b30
  401b1b:	mov    ds:0xad70e53f,al
  401b20:	cmp    DWORD PTR [edx],edi
  401b22:	test   eax,0x21e8053
  401b27:	in     eax,0xc0
  401b29:	ficomp DWORD PTR [edx]
  401b2b:	push   edi
  401b2c:	mov    edx,0x13fe1ca
  401b31:	cdq    
  401b32:	es imul edi,edi,0x3f
  401b36:	or     eax,0x9a81b4fd
  401b3b:	xchg   esi,eax
  401b3c:	pop    DWORD PTR [edi+0x7a]
  401b3f:	pop    ebp
  401b40:	pop    ds
  401b41:	jecxz  0x401b5f
  401b43:	add    edx,DWORD PTR [ebx-0x12d28540]
  401b49:	fdiv   QWORD PTR [eax+0x6dd7aad5]
  401b4f:	push   esp
  401b50:	lods   al,BYTE PTR ds:[esi]
  401b51:	stos   BYTE PTR es:[edi],al
  401b52:	icebp  
  401b53:	mov    dl,0x1f
  401b55:	inc    eax
  401b56:	mov    al,0x6e
  401b58:	xchg   ecx,eax
  401b59:	sysenter 
  401b5b:	inc    ecx
  401b5c:	push   ebx
  401b5d:	mov    ch,0xed
  401b5f:	pop    es
  401b60:	and    al,0x38
  401b62:	mov    dh,0x64
  401b64:	mov    edi,0x6f43e79
  401b69:	mov    ds:0x7fe5ef25,al
  401b6e:	mov    bl,0x41
  401b70:	jmp    0x5e894c8a
  401b75:	std    
  401b76:	les    ebp,FWORD PTR [esi]
  401b78:	and    eax,DWORD PTR [esi+0x63]
  401b7b:	(bad)  
  401b7c:	loope  0x401bfa
  401b7e:	adc    ch,0xfc
  401b81:	lock idiv bl
  401b84:	loop   0x401b90
  401b86:	ss (bad) 
  401b88:	mov    eax,ds:0x9b96fdad
  401b8d:	push   ds
  401b8e:	fwait
  401b8f:	sbb    ecx,esi
  401b91:	nop
  401b92:	int3   
  401b93:	retf   
  401b94:	dec    ebx
  401b95:	dec    ebx
  401b96:	test   eax,0x4451f06b
  401b9b:	pop    es
  401b9c:	pop    esp
  401b9d:	jns    0x401c10
  401b9f:	mov    ebx,0x21366b77
  401ba4:	jmp    0x401b79
  401ba6:	fisttp DWORD PTR [esi+edx*8]
  401ba9:	fbstp  TBYTE PTR [edx+0x50f0e457]
  401baf:	js     0x401b80
  401bb1:	cmp    dl,cl
  401bb3:	call   0xebedeb1d
  401bb8:	xchg   ebx,eax
  401bb9:	jb     0x401bfb
  401bbb:	out    0x8b,al
  401bbd:	stos   DWORD PTR es:[edi],eax
  401bbe:	sub    BYTE PTR ds:0xc8918d35,al
  401bc4:	adc    bh,bl
  401bc6:	fwait
  401bc7:	mov    dh,0x24
  401bc9:	jo     0x401c23
  401bcb:	or     eax,0x7a0ae9cf
  401bd0:	add    ecx,DWORD PTR [ebp-0x1c98d1b1]
  401bd6:	ja     0x401bf9
  401bd8:	pop    eax
  401bd9:	daa    
  401bda:	rcr    DWORD PTR [ebx+ecx*1],1
  401bdd:	int3   
  401bde:	adc    BYTE PTR [edi*2+0x5a15fb42],al
  401be5:	mov    ebp,0xa2d797b6
  401bea:	daa    
  401beb:	pop    esi
  401bec:	mov    edx,edi
  401bee:	push   esp
  401bef:	inc    DWORD PTR [ebp-0x5a]
  401bf2:	pop    edi
  401bf3:	and    DWORD PTR ds:0xcd7c8a11,esi
  401bf9:	pop    ecx
  401bfa:	out    0x47,eax
  401bfc:	clc    
  401bfd:	inc    ebx
  401bfe:	sahf   
  401bff:	mov    ch,0xaf
  401c01:	pop    ds
  401c02:	in     al,0x25
  401c04:	loope  0x401c74
  401c06:	sbb    DWORD PTR [eax],ecx
  401c08:	test   DWORD PTR [ebx-0x2cdd2232],edx
  401c0e:	xor    DWORD PTR [esp+edi*4],eax
  401c11:	adc    al,0xf0
  401c13:	or     ebp,edx
  401c15:	ret    0xc74f
  401c18:	mov    dh,0x7f
  401c1b:	fiadd  WORD PTR [ecx+0x50]
  401c1e:	outs   dx,BYTE PTR ds:[esi]
  401c1f:	dec    ecx
  401c20:	loop   0x401c6d
  401c22:	pop    edx
  401c23:	add    ecx,DWORD PTR [edx+0x10a7f298]
  401c29:	adc    esp,DWORD PTR [esi-0x2c]
  401c2c:	sub    esp,ebx
  401c2e:	push   edi
  401c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c30:	repnz add al,0xc2
  401c33:	mov    ds:0xc86c2a68,al
  401c38:	adc    BYTE PTR [edi-0x546abec9],al
  401c3e:	test   BYTE PTR [esi+edx*2+0x16b0e137],0x79
  401c46:	add    edi,esi
  401c48:	fmul   QWORD PTR [esi]
  401c4a:	pushf  
  401c4b:	pop    edx
  401c4c:	sbb    BYTE PTR [ebp-0x2b4008f4],bl
  401c52:	cwde   
  401c53:	push   cs
  401c54:	out    dx,eax
  401c55:	mov    cl,BYTE PTR [esi-0x66]
  401c58:	es retf 0x1435
  401c5c:	(bad)
  401c61:	shl    DWORD PTR [ebx],0x25
  401c64:	xchg   ebp,eax
  401c65:	pop    esi
  401c66:	dec    edi
  401c67:	in     eax,dx
  401c68:	cmp    al,0xb2
  401c6a:	aas    
  401c6b:	cmp    DWORD PTR [esi+0x1670936b],edi
  401c71:	test   eax,0x7990104d
  401c76:	sbb    DWORD PTR [ebp-0x2f],ebx
  401c79:	pop    ebp
  401c7a:	outs   dx,BYTE PTR ds:[esi]
  401c7b:	push   ss
  401c7c:	sahf   
  401c7d:	(bad)  
  401c7e:	imul   edx,DWORD PTR [ebx],0xffffff99
  401c81:	xlat   BYTE PTR ds:[ebx]
  401c82:	out    0xc5,al
  401c84:	hlt    
  401c85:	sbb    DWORD PTR ds:0xfebecaa4,eax
  401c8b:	dec    edi
  401c8c:	dec    esi
  401c8d:	push   esp
  401c8e:	xchg   DWORD PTR [ecx+0x22b61931],ecx
  401c94:	jmp    0x6d6d338
  401c99:	and    ecx,DWORD PTR [ebx]
  401c9b:	mov    ebp,0x2c1aaed6
  401ca0:	in     al,0xff
  401ca2:	xchg   edx,eax
  401ca3:	(bad)  
  401ca4:	into   
  401ca5:	and    ecx,DWORD PTR ds:0x8bc01a82
  401cab:	sahf   
  401cac:	leave  
  401cad:	inc    esi
  401cae:	pop    eax
  401caf:	add    ch,bl
  401cb1:	jb     0x401d10
  401cb3:	(bad)  
  401cb4:	rcr    DWORD PTR [ebp+0x31],cl
  401cb7:	shl    DWORD PTR [eax],0x7c
  401cba:	jp     0x401d0a
  401cbc:	nop
  401cbd:	jo     0x401d1c
  401cbf:	add    BYTE PTR [ebp+0x4e36227a],0xbf
  401cc6:	pop    ds
  401cc7:	hlt    
  401cc8:	jmp    0x9d3d2fbb
  401ccd:	xchg   edi,eax
  401cce:	jo     0x401c83
  401cd0:	mov    BYTE PTR [esp+esi*1-0x5e],bl
  401cd4:	mov    ds:0xf98bf205,al
  401cd9:	cli    
  401cda:	ror    esp,0xdb
  401cdd:	imul   ebx,edi,0x62569dde
  401ce3:	adc    DWORD PTR [ecx+0x20],ebp
  401ce6:	test   BYTE PTR [ecx+0x5af5eaf9],ah
  401cec:	in     al,0xb7
  401cee:	jg     0x401cfd
  401cf0:	std    
  401cf1:	es ret 0x3b37
  401cf5:	dec    edi
  401cf6:	aad    0x70
  401cf8:	pop    es
  401cf9:	jp     0x401cf2
  401cfb:	xchg   edi,eax
  401cfc:	ret    
  401cfd:	cmp    eax,0x4b9dcc62
  401d02:	aam    0x9
  401d04:	mov    esi,0x9fe723e4
  401d09:	or     eax,0xa7d19402
  401d0e:	loope  0x401d68
  401d10:	call   0x69fa:0x9a8f4ea
  401d17:	ror    ah,0x5
  401d1a:	cld    
  401d1b:	push   eax
  401d1c:	int3   
  401d1d:	jge    0x401cdc
  401d1f:	cld    
  401d20:	push   esp
  401d21:	pop    es
  401d22:	jb     0x401cd8
  401d24:	lds    eax,FWORD PTR [ebp+0x15]
  401d27:	or     al,0xa2
  401d29:	mov    edi,0xd8024b2f
  401d2e:	das    
  401d2f:	ds iret 
  401d31:	adc    DWORD PTR [ebx],0x103e52b4
  401d37:	inc    esp
  401d38:	(bad)  
  401d3a:	push   ecx
  401d3b:	or     DWORD PTR [ecx+0x6437fbd5],edx
  401d41:	sti    
  401d42:	xor    eax,0x1be344b
  401d47:	sub    DWORD PTR [edx+0xe70b18f],eax
  401d4d:	pop    ebx
  401d4e:	(bad)  
  401d4f:	xlat   BYTE PTR ds:[ebx]
  401d50:	ins    BYTE PTR es:[edi],dx
  401d51:	jo     0x401cd7
  401d53:	sbb    DWORD PTR ds:0x84c76ac0,0x4e
  401d5a:	sub    BYTE PTR [ebp-0x40],0xfd
  401d5e:	repz fs mov edx,ss
  401d62:	ja     0x401d53
  401d64:	and    eax,0xf1a8ea9d
  401d69:	pusha  
  401d6a:	adc    ah,bl
  401d6c:	cmp    al,0x27
  401d6e:	and    eax,0x6f9bf9a4
  401d73:	sahf   
  401d74:	adc    DWORD PTR [edi],ebp
  401d76:	xchg   ebx,eax
  401d77:	xor    eax,0xdce3adc5
  401d7c:	jp     0x401da1
  401d7e:	mov    esp,0x17d2eb4a
  401d83:	retf   0x613c
  401d86:	pop    ss
  401d87:	hlt    
  401d88:	lds    esi,FWORD PTR [esp+edx*8+0x5598cc55]
  401d8f:	(bad)  
  401d90:	sbb    BYTE PTR [ebx-0x19838091],dh
  401d96:	cmp    edi,esp
  401d98:	or     dl,BYTE PTR [edx]
  401d9a:	leave  
  401d9b:	mov    DWORD PTR [esi],esi
  401d9d:	ss xor ecx,ebp
  401da0:	ins    DWORD PTR es:[edi],dx
  401da1:	popa   
  401da2:	loope  0x401dd1
  401da4:	add    edi,DWORD PTR [ecx+0x0]
  401da7:	sub    eax,0xf5bf2847
  401dac:	or     DWORD PTR [ebp-0x1b6c8e65],edx
  401db2:	test   DWORD PTR [ecx+0x2145b0a1],edi
  401db8:	out    0xf8,al
  401dba:	sti    
  401dbb:	dec    esi
  401dbc:	and    al,0xa7
  401dbe:	hlt    
  401dbf:	inc    esi
  401dc0:	xchg   edi,eax
  401dc1:	retf   0x69b7
  401dc4:	ja     0x401dd6
  401dc6:	ret    0x25f3
  401dc9:	outs   dx,BYTE PTR ds:[esi]
  401dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dcb:	sti    
  401dcc:	and    eax,DWORD PTR [edi-0xc]
  401dcf:	sub    DWORD PTR [ebp+eiz*1-0x336b1bd4],esp
  401dd6:	push   ebp
  401dd7:	dec    ebx
  401dd8:	inc    eax
  401dd9:	repnz mov WORD PTR fs:[ecx+eax*8],cs
  401dde:	sahf   
  401ddf:	imul   edi,DWORD PTR [ebp+0x44],0xfefadfa1
  401de6:	adc    eax,0xe252ae74
  401deb:	sti    
  401dec:	push   ds
  401ded:	and    edi,eax
  401def:	push   0x92e5aa56
  401df4:	ins    BYTE PTR es:[edi],dx
  401df5:	pop    esp
  401df6:	aaa    
  401df7:	shr    DWORD PTR [edi-0x72],0x5d
  401dfb:	mov    eax,0x7fe4f473
  401e00:	cmc    
  401e01:	popa   
  401e02:	xchg   ebx,eax
  401e03:	iret   
  401e04:	and    eax,0xcde84fe1
  401e09:	mov    ch,0x8f
  401e0b:	lds    edx,FWORD PTR [esi+0xd12c30a]
  401e11:	jecxz  0x401dda
  401e13:	repnz pop edi
  401e15:	jae    0x401e4c
  401e17:	cmp    DWORD PTR [eax+edx*1+0x1a95d699],ecx
  401e1e:	xor    eax,DWORD PTR [eax+ebx*2]
  401e21:	xor    DWORD PTR [edx-0x705d23cf],eax
  401e27:	or     eax,0xdac598c7
  401e2c:	inc    ecx
  401e2d:	lahf   
  401e2e:	or     esp,DWORD PTR [edi-0x3e]
  401e31:	cmp    al,0xd2
  401e33:	or     al,0x7a
  401e35:	out    0x59,eax
  401e37:	shl    BYTE PTR [ecx+edx*1-0x11],0xd4
  401e3c:	add    DWORD PTR [eax-0x14d2dff3],0xfffffff8
  401e43:	int    0x6d
  401e45:	pop    es
  401e46:	cmp    dh,al
  401e48:	pop    edx
  401e49:	sub    esp,eax
  401e4b:	dec    esi
  401e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e4d:	cmp    ebp,DWORD PTR [ebx]
  401e4f:	in     eax,0xfb
  401e51:	sbb    eax,0x46db1bdd
  401e56:	inc    esi
  401e57:	int3   
  401e58:	jl     0x401eb0
  401e5a:	add    BYTE PTR [ebp+esi*1-0x32],ah
  401e5e:	scas   eax,DWORD PTR es:[edi]
  401e5f:	repnz into 
  401e61:	ja     0x401e2a
  401e63:	rcl    DWORD PTR [ecx+edx*2-0x7d6ffd8],1
  401e6a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401e6c:	jg     0x401e84
  401e6e:	dec    eax
  401e6f:	xor    al,0x95
  401e71:	retf   0xbca1
  401e74:	dec    esp
  401e75:	loope  0x401ec2
  401e77:	pop    ebp
  401e78:	popa   
  401e79:	sub    BYTE PTR [edx],bh
  401e7b:	dec    eax
  401e7c:	sub    BYTE PTR [edx-0x3e57f021],ah
  401e82:	push   es
  401e83:	push   edx
  401e84:	cdq    
  401e85:	inc    eax
  401e86:	mov    ecx,0x19e70678
  401e8b:	sti    
  401e8c:	aam    0x55
  401e8e:	jae    0x401e9d
  401e90:	add    BYTE PTR [esi-0x56ce6c02],ch
  401e96:	pop    es
  401e97:	pop    esp
  401e98:	add    BYTE PTR [ebp-0x3ccbfb31],dl
  401e9e:	enter  0x8f5c,0x83
  401ea2:	jo     0x401e3e
  401ea4:	push   0x6290c1c4
  401ea9:	sahf   
  401eaa:	adc    BYTE PTR [edi+0x418bdbde],cl
  401eb0:	xor    al,0xa
  401eb2:	bound  ecx,QWORD PTR [esi+0x22]
  401eb5:	out    dx,al
  401eb6:	lods   al,BYTE PTR ds:[esi]
  401eb7:	jo     0x401f36
  401eb9:	stos   DWORD PTR es:[edi],eax
  401eba:	mov    eax,ds:0x9b183bb8
  401ebf:	sub    edx,DWORD PTR ds:0xa11eeb51
  401ec5:	leave  
  401ec6:	jbe    0x401ed3
  401ec8:	nop
  401ec9:	frndint 
  401ecb:	mov    WORD PTR [eax-0x331d1198],?
  401ed1:	arpl   WORD PTR [ecx-0x7433d8bc],si
  401ed7:	lock mov eax,ds:0xba1aa458
  401edd:	test   BYTE PTR [edi+0x38],ch
  401ee0:	loopne 0x401f0d
  401ee2:	xor    BYTE PTR [ebx],bl
  401ee4:	test   bh,dh
  401ee6:	xchg   ebx,eax
  401ee7:	test   DWORD PTR cs:[eax+0x2b393662],esp
  401eee:	mov    DWORD PTR [edx],ecx
  401ef0:	ret    
  401ef1:	fistp  QWORD PTR [ebx+0x552cebe9]
  401ef7:	fwait
  401ef8:	push   ss
  401ef9:	inc    ebp
  401efa:	sub    al,0x7f
  401efc:	fucomip st,st(3)
  401efe:	(bad)  
  401eff:	mov    bl,0xdf
  401f01:	and    cl,al
  401f03:	in     al,dx
  401f04:	jp     0x401f50
  401f06:	fcomp  DWORD PTR [ecx+0x42]
  401f09:	inc    eax
  401f0a:	cld    
  401f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0c:	xchg   edx,eax
  401f0d:	(bad)  
  401f0e:	pop    ds
  401f0f:	jg     0x401ebf
  401f11:	inc    edi
  401f12:	mov    edx,0x10328f8
  401f17:	pop    eax
  401f18:	cmc    
  401f19:	lahf   
  401f1a:	sub    dl,bh
  401f1c:	pop    esp
  401f1d:	jb     0x401f44
  401f1f:	sti    
  401f20:	pop    eax
  401f21:	loopne 0x401f1e
  401f23:	or     esp,esp
  401f25:	mov    ebp,0xf651de1c
  401f2a:	in     al,0x3d
  401f2c:	stc    
  401f2d:	sbb    DWORD PTR [esi+0x24],ebx
  401f30:	pop    edx
  401f31:	inc    edi
  401f32:	dec    edx
  401f33:	(bad)  
  401f34:	outs   dx,DWORD PTR ds:[esi]
  401f35:	and    esi,DWORD PTR [edx]
  401f37:	(bad)  
  401f38:	jmp    0xf59ec022
  401f3d:	and    dh,bh
  401f3f:	pop    edi
  401f40:	lock gs mov ebx,0xb49dde3d
  401f47:	xchg   edx,eax
  401f48:	je     0x401f48
  401f4a:	scas   al,BYTE PTR es:[edi]
  401f4b:	mov    al,ds:0xc90ace57
  401f50:	mov    cl,0xe9
  401f52:	popa   
  401f53:	leave  
  401f54:	add    dl,BYTE PTR [ebp-0x1f4d4d4c]
  401f5a:	daa    
  401f5b:	sbb    ch,BYTE PTR [edi-0x6e68fa47]
  401f61:	retf   0xa67e
  401f64:	pop    edx
  401f65:	sbb    bl,BYTE PTR [edi]
  401f67:	xor    eax,0x82993842
  401f6c:	out    0xc7,eax
  401f6e:	mov    eax,ds:0x5da59d06
  401f73:	ret    0x40ae
  401f76:	and    ch,BYTE PTR [edi+0xa]
  401f79:	lea    edi,[edi+0x11]
  401f7c:	cmp    dh,0xf0
  401f7f:	push   ds
  401f80:	repnz cli 
  401f82:	sti    
  401f83:	push   esp
  401f84:	vpaddq xmm7,xmm2,XMMWORD PTR ss:[edi]
  401f89:	inc    esi
  401f8a:	rol    BYTE PTR [ebp+0x1e7db56c],cl
  401f90:	stos   BYTE PTR es:[edi],al
  401f91:	fucomi st,st(2)
  401f93:	rcr    dl,1
  401f95:	mov    dh,0xb4
  401f97:	cmp    eax,0xbbb2b67e
  401f9c:	or     ebp,DWORD PTR [ebp+0x795b890c]
  401fa2:	fild   QWORD PTR [eax]
  401fa4:	dec    eax
  401fa5:	mov    esp,0x48291bff
  401faa:	mov    ch,0x55
  401fac:	retf   0x9e4c
  401faf:	jmp    0x401fea
  401fb1:	outs   dx,DWORD PTR ds:[esi]
  401fb2:	loop   0x402033
  401fb4:	ret    0x97e9
  401fb7:	loope  0x40200f
  401fb9:	push   0x3e
  401fbb:	add    ecx,edi
  401fbd:	lds    esp,FWORD PTR [ecx]
  401fbf:	fiadd  WORD PTR [esi-0x10]
  401fc2:	and    al,0x47
  401fc4:	or     DWORD PTR [ebx+eax*8],0x986c4291
  401fcb:	cmp    BYTE PTR [edi+0x14854697],bh
  401fd1:	add    eax,0x3cc94a09
  401fd6:	push   edi
  401fd7:	jp     0x401fcb
  401fd9:	xchg   ebx,eax
  401fda:	aad    0x3d
  401fdc:	out    dx,al
  401fdd:	pop    edi
  401fde:	inc    edx
  401fdf:	mov    al,0xf
  401fe1:	push   esi
  401fe2:	or     esi,ecx
  401fe4:	cmp    bl,BYTE PTR [ebx+ebx*1-0x2]
  401fe8:	mov    bl,0xd1
  401fea:	jp     0x401f7f
  401fec:	test   al,0x71
  401fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fef:	inc    esp
  401ff0:	mov    dh,0xb8
  401ff2:	bound  esp,QWORD PTR [esi]
  401ff4:	sub    esi,DWORD PTR [esi+0x74]
  401ff7:	jge    0x40205f
  401ff9:	push   ss
  401ffa:	imul   BYTE PTR [ebp+0x79]
  401ffd:	mov    eax,0xcbbbb1f0
  402002:	push   edx
  402003:	imul   eax,DWORD PTR [ebx+0x75914794],0xa7774435
  40200d:	sbb    eax,ebx
  40200f:	jle    0x401fb6
  402011:	repz xchg esi,eax
  402013:	push   ds
  402014:	ret    0x47a4
  402017:	adc    BYTE PTR [esi-0x39c6ef4],bh
  40201d:	xor    al,0xcf
  40201f:	outs   dx,DWORD PTR ds:[esi]
  402020:	mov    cl,0x2e
  402022:	cmp    DWORD PTR [ebp-0x3b],edi
  402025:	pop    ds
  402026:	test   al,0x51
  402028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402029:	cmc    
  40202a:	rcl    DWORD PTR [edi+edx*1],0x22
  40202e:	sub    al,dh
  402030:	in     eax,dx
  402031:	outs   dx,BYTE PTR ds:[esi]
  402032:	inc    ebx
  402033:	xor    al,0x4f
  402035:	xor    eax,0xa7d8edf1
  40203a:	rol    BYTE PTR [ebx],1
  40203c:	inc    ecx
  40203d:	adc    al,0xb4
  40203f:	popa   
  402040:	mov    WORD PTR [ecx+ecx*8-0x16ceb296],cs
  402047:	mov    esi,DWORD PTR [ebp-0x7c80def7]
  40204d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40204e:	sbb    DWORD PTR [edi+ebx*8-0x95d05d5],0x7c20b4bb
  402059:	jg     0x402073
  40205b:	xor    cl,BYTE PTR [eax]
  40205d:	loope  0x4020d6
  40205f:	(bad)  
  402060:	mov    eax,0x8ccb3625
  402065:	add    edx,ecx
  402067:	mov    al,ds:0x5bed96eb
  40206c:	icebp  
  40206d:	inc    ebx
  40206e:	dec    esp
  40206f:	retf   
  402070:	dec    ebp
  402071:	outs   dx,DWORD PTR ds:[esi]
  402072:	out    0x18,eax
  402074:	mov    ah,0xfb
  402076:	nop
  402077:	dec    ebp
  402078:	setp   BYTE PTR ds:0x3b6b439b
  40207f:	push   edx
  402080:	adc    eax,0xb8a13b14
  402085:	adc    DWORD PTR [eax],ecx
  402087:	out    dx,al
  402088:	(bad)  
  402089:	mov    ah,0x3e
  40208b:	pop    es
  40208c:	push   0xefa8ba2f
  402091:	sar    eax,0x34
  402094:	sbb    dh,al
  402096:	std    
  402097:	dec    edx
  402098:	repz shl DWORD PTR [edx+0x43bbab0b],1
  40209f:	clc    
  4020a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a1:	pop    eax
  4020a2:	(bad)  
  4020a4:	sub    dl,ah
  4020a6:	add    al,0xd4
  4020a8:	lea    ebp,[edi]
  4020aa:	sub    DWORD PTR [ecx+0x12],0x8157c9d9
  4020b1:	jb     0x402083
  4020b3:	loopne 0x4020e0
  4020b5:	mov    ah,0x6
  4020b7:	xchg   edx,eax
  4020b8:	inc    edi
  4020b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ba:	and    DWORD PTR [ebp+0x5b018c49],edx
  4020c0:	mov    ss,eax
  4020c2:	in     al,0xfb
  4020c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c5:	sbb    DWORD PTR [edi+ebx*2],0x13bf27d4
  4020cc:	dec    ebp
  4020cd:	aas    
  4020ce:	mov    dl,0xcc
  4020d0:	pop    ebx
  4020d1:	xchg   ebx,eax
  4020d2:	je     0x40206e
  4020d4:	inc    edx
  4020d5:	aam    0xfe
  4020d7:	push   0xf
  4020d9:	mov    cl,0x2
  4020db:	mov    bh,0x98
  4020dd:	ds cdq 
  4020df:	fistp  DWORD PTR [ebx]
  4020e1:	int    0x33
  4020e3:	push   0xffffff9f
  4020e5:	jl     0x4020a4
  4020e7:	(bad)  
  4020e9:	mov    edx,0xb1c092a9
  4020ee:	js     0x402147
  4020f0:	dec    edi
  4020f1:	lods   eax,DWORD PTR ds:[esi]
  4020f2:	add    dh,BYTE PTR [ecx]
  4020f4:	mov    ebp,0xc42fb418
  4020f9:	idiv   ecx
  4020fb:	jo     0x4020d1
  4020fd:	stos   DWORD PTR es:[edi],eax
  4020fe:	sub    DWORD PTR [ecx+0x3b6da423],esp
  402104:	xor    edi,DWORD PTR ds:0x9c2a6d90
  40210a:	sub    eax,0xfc510075
  40210f:	xchg   ebp,eax
  402110:	push   ebp
  402111:	(bad)  
  402112:	jmp    0x4020ba
  402114:	cmp    al,BYTE PTR [ebp+0x3ad7f9fc]
  40211a:	cmp    ebx,DWORD PTR [ebx+ebx*2-0x72]
  40211e:	pop    eax
  40211f:	mov    al,0xe9
  402121:	(bad)  
  402122:	and    DWORD PTR [esi+eax*4],edx
  402125:	or     edx,DWORD PTR [edx+0x5230e8e5]
  40212b:	xlat   BYTE PTR ds:[ebx]
  40212c:	jle    0x402119
  40212e:	jns    0x402159
  402130:	pop    ebx
  402131:	rcr    cl,0xa2
  402134:	dec    ebx
  402135:	clc    
  402136:	and    BYTE PTR [ebx+0xf5b4a79],dl
  40213c:	inc    eax
  40213d:	stc    
  40213e:	lds    ebx,FWORD PTR [edx-0x7ea7013d]
  402144:	aas    
  402145:	test   al,0xd4
  402147:	into   
  402148:	loopne 0x4020d4
  40214a:	ja     0x402142
  40214c:	inc    edx
  40214d:	sbb    eax,0x3b389af9
  402152:	sbb    BYTE PTR [ebx],ah
  402154:	fcmovne st,st(3)
  402156:	stc    
  402157:	fucomip st,st(3)
  402159:	test   ecx,ebx
  40215b:	inc    esi
  40215c:	jb     0x4021a0
  40215e:	pushf  
  40215f:	nop
  402160:	jo     0x402163
  402162:	sti    
  402163:	ret    0x8a61
  402166:	xchg   edx,eax
  402167:	sub    dh,BYTE PTR [ebp+0x7b1bc924]
  40216d:	inc    esi
  40216e:	dec    ecx
  40216f:	cmp    eax,0x6f386bcd
  402174:	cwde   
  402175:	jg     0x402141
  402177:	loopne 0x402187
  402179:	add    eax,0x4b88a489
  40217e:	adc    al,ah
  402180:	inc    ebx
  402181:	test   BYTE PTR [edx-0xc4400bb],bh
  402187:	addr16 mov esp,0x2340df0d
  40218d:	mov    esp,0x633172c9
  402192:	pop    edx
  402193:	add    DWORD PTR [edx-0x18346482],ebp
  402199:	in     eax,0x9e
  40219b:	ficom  WORD PTR [esp+edi*1-0x6c]
  40219f:	outs   dx,BYTE PTR ds:[esi]
  4021a0:	clc    
  4021a1:	imul   ebx,DWORD PTR [ecx+0x36],0x5f
  4021a5:	inc    eax
  4021a6:	sbb    BYTE PTR [esi],bh
  4021a8:	je     0x40219d
  4021aa:	(bad)  
  4021ab:	jmp    0x78d517e6
  4021b0:	or     eax,0x76d73e2a
  4021b5:	sub    esi,DWORD PTR [edi-0x33996d1d]
  4021bb:	inc    edx
  4021bc:	jo     0x402147
  4021be:	fcom   DWORD PTR [ebp+0x46]
  4021c1:	pop    ebp
  4021c2:	pushf  
  4021c3:	cs mov eax,0xf1a8fa82
  4021c9:	data16 (bad) 
  4021cc:	mov    cs:0xdcf3b961,eax
  4021d2:	ins    BYTE PTR es:[edi],dx
  4021d3:	xor    DWORD PTR [ebx-0x3839153f],esi
  4021d9:	outs   dx,BYTE PTR ds:[esi]
  4021da:	and    BYTE PTR [esp+eax*8],cl
  4021dd:	dec    esp
  4021de:	in     eax,0x28
  4021e0:	cs xchg ecx,eax
  4021e2:	(bad)  
  4021e3:	jle    0x4021d2
  4021e5:	ret    0xb747
  4021e8:	icebp  
  4021e9:	sbb    al,0xb1
  4021eb:	scas   al,BYTE PTR es:[edi]
  4021ec:	add    al,0x50
  4021ee:	cmp    BYTE PTR [edx],dl
  4021f0:	retf   0x52c5
  4021f3:	mov    ebx,0x3c31adcb
  4021f8:	xchg   ebx,eax
  4021f9:	mov    bl,0xc4
  4021fb:	addr16 jo 0x402220
  4021fe:	(bad)  
  4021ff:	add    eax,0xf32d6722
  402204:	mov    ebp,0x814234fb
  402209:	fs leave 
  40220b:	enter  0x4286,0x4e
  40220f:	adc    al,0x71
  402211:	cs adc eax,ebp
  402214:	mov    ebp,0x647e269e
  402219:	inc    ebp
  40221a:	or     dl,BYTE PTR [ecx+0x34]
  40221d:	out    0xf1,eax
  40221f:	sub    al,0x8a
  402221:	sub    al,0x22
  402223:	xchg   ecx,eax
  402224:	mov    ebp,0xa3c6c764
  402229:	outs   dx,BYTE PTR ds:[esi]
  40222a:	fsub   DWORD PTR [eax]
  40222c:	loop   0x4021bc
  40222e:	jge    0x402258
  402230:	pop    edx
  402231:	icebp  
  402232:	jmp    0x402233
  402234:	push   ss
  402235:	int    0xf6
  402237:	loop   0x40222c
  402239:	jae    0x40220a
  40223b:	mov    fs,edx
  40223d:	mov    dl,0xbe
  40223f:	out    0x71,al
  402241:	pop    ecx
  402242:	mov    DWORD PTR [esi-0x2b],0xa91625f6
  402249:	add    ecx,DWORD PTR [edx+0x15]
  40224c:	(bad)
  40224f:	(bad)  
  402250:	(bad)  
  402252:	inc    ebp
  402253:	push   0x1a80aba4
  402258:	xchg   esi,ecx
  40225a:	jbe    0x402241
  40225c:	repnz out 0x2d,al
  40225f:	jb     0x4022d9
  402261:	xor    BYTE PTR [ebp+0x25adbb2e],0x1c
  402268:	add    DWORD PTR [ebx],esi
  40226a:	mov    ds:0xd9f6e2e5,eax
  40226f:	push   ebx
  402270:	adc    dh,dl
  402272:	dec    edx
  402273:	scas   eax,DWORD PTR es:[edi]
  402274:	pop    ebp
  402275:	imul   ebx,DWORD PTR [ebp-0x47],0xb0ea262
  40227c:	adc    bh,BYTE PTR [edi+0x700d4ca]
  402282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402283:	mov    DWORD PTR [ecx-0x39],eax
  402286:	loope  0x4022b9
  402288:	shrd   ecx,edx,cl
  40228b:	and    DWORD PTR [edi],eax
  40228d:	jb     0x4022e7
  40228f:	addr16 jg 0x402292
  402292:	inc    ecx
  402293:	das    
  402294:	lods   eax,DWORD PTR ds:[esi]
  402295:	jle    0x402237
  402297:	xchg   edi,eax
  402298:	fldenv [eax+0x76dd16c1]
  40229e:	pop    es
  40229f:	mov    cl,0x61
  4022a1:	add    DWORD PTR ds:0x5efd9766,edi
  4022a7:	adc    bl,dl
  4022a9:	adc    al,0x89
  4022ab:	sbb    ah,BYTE PTR [edi]
  4022ad:	cmp    BYTE PTR [esi+0x54e79a5b],cl
  4022b3:	xor    DWORD PTR [edx+0x41],eax
  4022b6:	mov    dl,0x82
  4022b8:	adc    al,0x4c
  4022ba:	jmp    0x4022d8
  4022bc:	and    eax,0x647860ef
  4022c1:	mov    bh,0xc8
  4022c3:	mov    al,ds:0xcde6fb44
  4022c8:	jge    0x402301
  4022ca:	sbb    esp,DWORD PTR [edi+esi*2+0x56dfbe06]
  4022d1:	aas    
  4022d2:	fnstenv [eax-0x2c16ca9f]
  4022d8:	inc    ecx
  4022d9:	in     al,0x98
  4022db:	and    ah,BYTE PTR [esp+eiz*4-0x1ddcd838]
  4022e2:	call   0x5c1d2969
  4022e7:	mov    ah,0xa1
  4022e9:	pop    eax
  4022ea:	retf   
  4022eb:	push   edi
  4022ec:	mov    ebp,0xd42eb354
  4022f1:	dec    eax
  4022f2:	call   0xbee54b45
  4022f7:	retf   
  4022f8:	xchg   cl,al
  4022fa:	sahf   
  4022fb:	jmp    0x531e01e2
  402300:	sub    BYTE PTR [ebp+0x2f],dh
  402303:	aam    0xdb
  402305:	jmp    0x4022fa
  402307:	lahf   
  402308:	call   0x48cbe671
  40230d:	jne    0x402299
  40230f:	ins    DWORD PTR es:[edi],dx
  402310:	pop    ecx
  402311:	scas   al,BYTE PTR es:[edi]
  402312:	pop    edx
  402314:	push   es
  402315:	mov    eax,0xb5b0fb0c
  40231b:	(bad)  
  40231c:	and    al,0xee
  40231e:	int3   
  40231f:	push   esi
  402320:	outs   dx,DWORD PTR ds:[esi]
  402321:	lods   al,BYTE PTR ds:[esi]
  402322:	pop    ds
  402323:	or     bl,cl
  402325:	xor    al,0xbe
  402327:	jb     0x402362
  402329:	in     eax,dx
  40232a:	cs sub al,0x23
  40232d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40232e:	inc    edi
  40232f:	inc    ecx
  402330:	mov    eax,?
  402332:	stos   DWORD PTR es:[edi],eax
  402333:	jo     0x402383
  402335:	adc    eax,0xd6a55685
  40233a:	push   0x5a13b4e
  40233f:	fwait
  402340:	mov    bl,0x68
  402342:	mov    bh,0x8a
  402344:	add    al,0xf3
  402346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402347:	dec    esi
  402348:	scas   al,BYTE PTR es:[edi]
  402349:	into   
  40234a:	push   esp
  40234b:	add    ebx,eax
  40234d:	inc    esi
  40234e:	adc    esp,DWORD PTR [edi-0x4732ce75]
  402354:	add    BYTE PTR [ebx],al
  402356:	jle    0x4023ba
  402358:	bound  esp,QWORD PTR [edx]
  40235a:	(bad)
  40235d:	dec    ebx
  40235e:	cmp    eax,DWORD PTR [ecx-0x40830b2e]
  402364:	push   esp
  402365:	mov    esp,0x3436121f
  40236a:	mov    DWORD PTR [eax+ebp*8+0x52a8372d],ebx
  402371:	enter  0x2b50,0x12
  402375:	loop   0x4023b9
  402377:	nop
  402378:	mov    edi,eax
  40237a:	jmp    0x709c:0xe4b4ba44
  402381:	sub    bl,cl
  402383:	and    eax,0x7964045a
  402388:	sbb    BYTE PTR ds:0x7e89b27a,al
  40238e:	add    edx,DWORD PTR [ecx]
  402390:	or     al,0x77
  402392:	cdq    
  402393:	adc    BYTE PTR [edx+0x12cfa649],0xdb
  40239a:	jnp    0x4023b4
  40239c:	cmp    al,0xe9
  40239e:	stos   DWORD PTR es:[edi],eax
  40239f:	(bad)
  4023a2:	jmp    0x94e0:0xfc1b6734
  4023a9:	sbb    eax,0x1f5bef73
  4023ae:	jns    0x40239d
  4023b0:	push   ss
  4023b1:	pop    ds
  4023b2:	mov    esi,0x5eb9b1d0
  4023b7:	jnp    0x402355
  4023b9:	sbb    DWORD PTR [edx+ebx*2],esp
  4023bc:	fidivr WORD PTR es:[ecx+edx*8]
  4023c0:	jb     0x40240e
  4023c2:	outs   dx,BYTE PTR ds:[esi]
  4023c3:	jp     0x4023d6
  4023c5:	push   edx
  4023c6:	xchg   ebx,eax
  4023c7:	addr16 jle 0x402370
  4023ca:	sbb    ecx,DWORD PTR [ecx]
  4023cc:	(bad)  
  4023cd:	ins    DWORD PTR es:[edi],dx
  4023ce:	xchg   ebx,eax
  4023cf:	jmp    0x93655dab
  4023d4:	nop
  4023d5:	stos   DWORD PTR es:[edi],eax
  4023d6:	aam    0xac
  4023d8:	cmp    DWORD PTR [ebx],ebp
  4023da:	inc    esi
  4023db:	mov    eax,0x3de291e4
  4023e0:	pushf  
  4023e1:	pop    ebp
  4023e2:	fadd   QWORD PTR [edx]
  4023e4:	and    al,0x62
  4023e6:	out    dx,eax
  4023e7:	cmp    BYTE PTR [ebp-0x541f50d4],ch
  4023ed:	sub    BYTE PTR [ecx],bl
  4023ef:	leave  
  4023f0:	popa   
  4023f1:	cmp    DWORD PTR [edi+0x20],esi
  4023f4:	and    dh,BYTE PTR [edx]
  4023f6:	lods   eax,DWORD PTR ds:[esi]
  4023f7:	add    BYTE PTR [ecx],0x47
  4023fa:	ds addr16 loop 0x402387
  4023fe:	mov    ds:0xadf5ae53,eax
  402403:	push   eax
  402404:	xchg   esp,eax
  402405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402406:	retf   0xbbc7
  402409:	add    BYTE PTR [edi],0x1
  40240c:	xchg   edx,eax
  40240d:	test   eax,0x58e75abc
  402412:	aam    0xf0
  402414:	push   edx
  402415:	aam    0x95
  402417:	outs   dx,BYTE PTR ds:[esi]
  402418:	arpl   WORD PTR [esi-0x27acff65],cx
  40241e:	in     al,0xb5
  402420:	xor    al,0x5
  402422:	mov    edx,0xf6d74fd6
  402427:	jle    0x40242d
  402429:	push   0x10a8574a
  40242e:	adc    BYTE PTR [esi-0x709498],0xf9
  402435:	or     esi,DWORD PTR [eax-0x54edebbc]
  40243b:	push   es
  40243c:	push   ecx
  40243d:	and    al,0xbf
  40243f:	jge    0x402442
  402441:	enter  0x85c1,0x3
  402445:	fs jae 0x402414
  402448:	cmp    edi,ecx
  40244a:	and    edi,edx
  40244c:	ins    DWORD PTR es:[edi],dx
  40244d:	adc    DWORD PTR [edi],ecx
  40244f:	or     BYTE PTR [esi+ebx*8+0xc],bl
  402453:	and    al,0x53
  402455:	sbb    eax,0x204efa55
  40245a:	and    edi,DWORD PTR [edi-0x244c0696]
  402460:	scas   al,BYTE PTR es:[edi]
  402461:	scas   al,BYTE PTR es:[edi]
  402462:	sbb    al,0x19
  402464:	test   al,0x68
  402466:	fwait
  402467:	int3   
  402468:	(bad)  
  402469:	jo     0x40240a
  40246b:	add    cl,dl
  40246d:	xchg   ebp,eax
  40246e:	adc    esp,esi
  402470:	adc    eax,esi
  402472:	daa    
  402473:	out    dx,eax
  402474:	test   eax,0x420a74af
  402479:	sbb    al,0x11
  40247b:	mov    cl,0x48
  40247d:	jne    0x402424
  40247f:	jne    0x4024cd
  402481:	pop    ss
  402482:	cmp    edi,DWORD PTR [ebp*1-0x2bb8ae4]
  402489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248a:	sar    DWORD PTR [esi],1
  40248c:	ins    DWORD PTR es:[edi],dx
  40248d:	mov    ds:0xa693d87a,eax
  402492:	mov    ds:0xaee89062,al
  402497:	xor    edx,eax
  402499:	mov    edi,0x3535e36
  40249e:	dec    eax
  40249f:	jnp    0x4024ee
  4024a1:	test   eax,0x69b29204
  4024a6:	push   edi
  4024a7:	aad    0x5c
  4024a9:	dec    ebx
  4024aa:	mov    ch,0xc8
  4024ac:	sub    bl,BYTE PTR [ebx-0x12]
  4024af:	push   edx
  4024b0:	push   eax
  4024b1:	adc    ebp,ebp
  4024b3:	dec    ecx
  4024b4:	in     eax,dx
  4024b5:	push   ds
  4024b6:	dec    ebx
  4024b7:	inc    eax
  4024b8:	sar    BYTE PTR [edx+eax*1+0x6],cl
  4024bc:	add    eax,0x58d3de9f
  4024c1:	ja     0x4024c2
  4024c3:	mov    dl,0xe4
  4024c5:	mov    ah,0x5
  4024c7:	inc    ecx
  4024c8:	inc    ecx
  4024c9:	push   ebx
  4024ca:	push   es
  4024cb:	and    eax,0xc7e65b5
  4024d0:	inc    edi
  4024d1:	sbb    dh,BYTE PTR [ecx]
  4024d3:	clc    
  4024d4:	cld    
  4024d5:	dec    edx
  4024d6:	sub    BYTE PTR [edi+0x7fa8e238],dl
  4024dc:	xchg   DWORD PTR [edi-0x602b4fdb],edx
  4024e2:	cld    
  4024e3:	jp     0x4024f6
  4024e5:	pop    eax
  4024e6:	push   esi
  4024e7:	jmp    0x402481
  4024e9:	xlat   BYTE PTR ds:[ebx]
  4024ea:	retf   0x5b4e
  4024ed:	test   eax,0x875f9f09
  4024f2:	imul   esp,DWORD PTR [edx+0x42608b6a],0x2
  4024f9:	loopne 0x40249b
  4024fb:	inc    edi
  4024fc:	(bad)  
  4024fd:	and    eax,0xcbceda04
  402502:	ret    0x3b46
  402505:	dec    ebp
  402506:	stc    
  402507:	xchg   cx,ax
  402509:	test   eax,0x3aab4402
  40250e:	aaa    
  40250f:	inc    DWORD PTR [eax-0x62]
  402512:	push   esp
  402513:	(bad)  
  402514:	cld    
  402515:	or     eax,0xa3b56909
  40251a:	dec    ebx
  40251b:	push   esi
  40251c:	add    BYTE PTR [esi],bl
  40251e:	in     al,0x19
  402520:	test   eax,0x13fd79b
  402525:	jns    0x4024cf
  402527:	push   ebx
  402528:	add    al,0xaf
  40252a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40252b:	pushf  
  40252c:	jb     0x4024e8
  40252e:	iret   
  40252f:	pop    edx
  402530:	lahf   
  402531:	pop    eax
  402532:	or     al,0x95
  402534:	leave  
  402535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402536:	xchg   ecx,eax
  402537:	and    BYTE PTR [edx],ah
  402539:	outs   dx,DWORD PTR ds:[esi]
  40253a:	and    BYTE PTR [ebp+ecx*2+0x26],bh
  40253e:	jmp    0xcbb9219c
  402543:	adc    eax,0x98f5afe3
  402548:	push   ecx
  402549:	sub    eax,0x6bc80df2
  40254e:	fimul  DWORD PTR [ecx-0x60]
  402551:	adc    bh,BYTE PTR [edi+0x5d]
  402554:	and    ecx,edx
  402556:	inc    edx
  402557:	cmp    esp,DWORD PTR [ecx+0x4c]
  40255a:	mov    dh,0x8d
  40255c:	mov    BYTE PTR [ecx-0x4d],0x77
  402560:	jo     0x402577
  402562:	jl     0x402518
  402564:	add    al,0xf
  402566:	retf   0x47fc
  402569:	stos   DWORD PTR es:[edi],eax
  40256a:	mov    eax,0xbeadd76f
  40256f:	mov    ds:0x5166e41f,al
  402574:	lea    edx,[eax-0x43265a1f]
  40257a:	sbb    eax,DWORD PTR [ebx-0x55]
  40257d:	pop    ebx
  40257e:	sbb    ebp,DWORD PTR [esp+ebp*2]
  402581:	jle    0x402540
  402583:	pop    es
  402584:	mov    ah,0x7d
  402586:	add    DWORD PTR [ebx-0x16ede828],edx
  40258c:	(bad)  
  40258d:	div    ebp
  40258f:	jmp    0x402602
  402591:	push   esi
  402592:	and    DWORD PTR [ebx+0x7b56ca2c],edi
  402598:	shr    BYTE PTR [ecx-0x73a061cd],cl
  40259e:	mov    ecx,0xe3f976f3
  4025a3:	fs out dx,al
  4025a5:	iret   
  4025a6:	and    eax,0x7ad96c40
  4025ab:	shr    dl,cl
  4025ad:	xlat   BYTE PTR ds:[ebx]
  4025ae:	mov    dh,0xd5
  4025b0:	sar    BYTE PTR [esi-0xcff3e41],0x5d
  4025b7:	stos   DWORD PTR es:[edi],eax
  4025b8:	fs (bad) 
  4025ba:	lock cmp eax,DWORD PTR [edx+0x3c]
  4025be:	sbb    BYTE PTR [eax+0x11],bh
  4025c1:	ins    DWORD PTR es:[edi],dx
  4025c2:	dec    edi
  4025c3:	jne    0x402567
  4025c5:	adc    ch,BYTE PTR [edi+0x6eac6180]
  4025cb:	xchg   DWORD PTR ds:0xdcb6328,ebp
  4025d1:	scas   al,BYTE PTR es:[edi]
  4025d2:	sbb    DWORD PTR [eax],edi
  4025d4:	dec    esi
  4025d5:	ins    BYTE PTR es:[edi],dx
  4025d6:	jp     0x40257c
  4025d8:	retf   0x475d
  4025db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025dc:	pop    esi
  4025dd:	mov    bh,0xa8
  4025df:	jp     0x40261c
  4025e1:	addr16 (bad) 
  4025e3:	push   ds
  4025e4:	sub    al,0xd
  4025e6:	mov    ds:0x5b431897,al
  4025eb:	loopne 0x402664
  4025ed:	jp     0x40264f
  4025ef:	adc    DWORD PTR [ecx-0x4cfdd760],0xc31f1d5e
  4025f9:	sub    ch,BYTE PTR [ebx+0x47]
  4025fc:	cwde   
  4025fd:	imul   edx,DWORD PTR [ebx],0x2f
  402600:	mov    ebx,0x5bf5047c
  402605:	data16 shr dh,1
  402608:	mov    es,ebx
  40260a:	pop    ebp
  40260b:	push   ebp
  40260c:	adc    BYTE PTR [ebp-0x47],al
  40260f:	sub    eax,0xb76abe8b
  402614:	or     dh,bl
  402616:	push   ebp
  402617:	cmc    
  402618:	fstp   TBYTE PTR [edi+0x26]
  40261b:	jecxz  0x4025f7
  40261d:	and    eax,0x20dc4d01
  402622:	lods   al,BYTE PTR ds:[esi]
  402623:	jns    0x402624
  402625:	(bad)
  402629:	jmp    0x781c3d0c
  40262e:	fnsave [edx]
  402630:	stos   BYTE PTR es:[edi],al
  402631:	or     al,0xde
  402633:	xchg   ecx,eax
  402634:	lahf   
  402635:	sar    DWORD PTR [ecx],1
  402637:	scas   eax,DWORD PTR es:[edi]
  402638:	mov    ah,0x3b
  40263a:	dec    edi
  40263b:	sub    BYTE PTR [eax+eax*8],ah
  40263e:	xor    eax,0xa58094b6
  402643:	xor    BYTE PTR ds:0x75907d3b,dh
  402649:	fistp  WORD PTR [ecx]
  40264b:	jmp    ebx
  40264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40264e:	mov    BYTE PTR [ebp+0x2bc46bb7],ch
  402654:	pop    edi
  402655:	dec    ebx
  402656:	and    eax,0x448c4d8f
  40265b:	jecxz  0x40260b
  40265d:	jns    0x402681
  40265f:	or     BYTE PTR [eax-0x9],0xbc
  402663:	loope  0x4026d6
  402665:	(bad)  
  402666:	mov    edi,0x67d54853
  40266b:	mov    edi,0x8bff7e56
  402670:	ja     0x4026b6
  402672:	xchg   esp,eax
  402673:	adc    al,BYTE PTR [edx+0x7edca73c]
  402679:	add    al,0x76
  40267b:	popa   
  40267c:	dec    edx
  40267d:	pop    esp
  40267e:	outs   dx,BYTE PTR ds:[esi]
  40267f:	push   eax
  402680:	sbb    al,0x53
  402682:	dec    edi
  402683:	lods   eax,DWORD PTR ds:[esi]
  402684:	add    eax,0xadf8c6cb
  402689:	retf   
  40268a:	inc    esp
  40268b:	mov    ebx,DWORD PTR ds:0xfc8e12b5
  402691:	mov    ch,0x71
  402693:	repnz (bad) 
  402695:	popa   
  402696:	dec    esp
  402697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402698:	and    BYTE PTR [ebx-0x69],bh
  40269b:	jp     0x4026cc
  40269d:	ret    0xc58e
  4026a0:	(bad)  
  4026a1:	es xchg edx,eax
  4026a3:	test   DWORD PTR [ebx+0x1e],0x6ff0cef1
  4026aa:	jmp    0xa39400ad
  4026af:	xchg   DWORD PTR [esi],ebx
  4026b1:	or     al,0x5
  4026b3:	jle    0x402675
  4026b5:	lock and BYTE PTR [edx],bh
  4026b8:	sbb    al,0x97
  4026ba:	test   DWORD PTR [edi-0x34],ebp
  4026bd:	add    edx,DWORD PTR [eax]
  4026bf:	jno    0x40270e
  4026c1:	inc    ebp
  4026c2:	loopne 0x402741
  4026c4:	outs   dx,DWORD PTR ds:[esi]
  4026c5:	push   cs
  4026c6:	inc    ecx
  4026c7:	and    cl,dh
  4026c9:	cmp    BYTE PTR [eax-0x74600c92],0x6b
  4026d0:	cld    
  4026d1:	lods   eax,DWORD PTR ds:[esi]
  4026d2:	fcom   QWORD PTR [edi]
  4026d4:	punpcklwd mm7,DWORD PTR [edx-0x1]
  4026d8:	cdq    
  4026d9:	loop   0x4026a7
  4026db:	gs fwait
  4026dd:	xor    eax,0x55e9ffd8
  4026e2:	adc    DWORD PTR [edx+0x3d],esp
  4026e5:	int    0xc5
  4026e7:	out    dx,al
  4026e8:	mov    cl,0xfa
  4026ea:	add    bl,ah
  4026ec:	adc    al,BYTE PTR [esi-0x65]
  4026ef:	call   0xc7e0:0xd81c5f94
  4026f6:	fstp   st(3)
  4026f8:	out    dx,al
  4026f9:	push   cs
  4026fa:	jo     0x40271a
  4026fc:	fnstcw WORD PTR [eax]
  4026fe:	test   ebp,esi
  402700:	mov    esp,0x81ccde6a
  402705:	fnstsw WORD PTR [ebp+0x51]
  402708:	fiadd  DWORD PTR [eax+edx*2-0xe]
  40270c:	dec    edi
  40270d:	cmp    eax,0x1937f63f
  402712:	mov    WORD PTR [eax-0x22],gs
  402715:	jns    0x402765
  402717:	push   ebx
  402718:	int    0xc6
  40271a:	loope  0x40272f
  40271c:	pop    esi
  40271d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40271e:	pop    es
  40271f:	movq   mm5,QWORD PTR [esi+0x193ce2f8]
  402726:	push   0xf3e91353
  40272b:	sub    al,0xdf
  40272d:	sbb    BYTE PTR [ebx+0x26],dh
  402730:	mov    WORD PTR [edx],cs
  402732:	data16 neg BYTE PTR [ebx+0x1f024286]
  402739:	push   ebx
  40273a:	xor    esp,ecx
  40273c:	cld    
  40273d:	pop    ebx
  40273e:	mov    ch,0x96
  402740:	lea    ecx,fs:[ebp-0xf]
  402744:	mov    bh,BYTE PTR [edi-0x58]
  402747:	cs cld 
  402749:	jne    0x4027c1
  40274b:	addr16 jno 0x40272b
  40274e:	fsubp  st(7),st
  402750:	inc    edx
  402751:	push   ecx
  402752:	sahf   
  402753:	sbb    al,0x64
  402755:	add    dh,ah
  402757:	mov    DWORD PTR [ecx+0x22803ba4],eax
  40275d:	neg    BYTE PTR [ecx]
  40275f:	pusha  
  402760:	add    dh,dl
  402762:	add    al,0x78
  402764:	and    eax,0xcf31e592
  402769:	add    DWORD PTR [esi+esi*8-0x3e91a662],esi
  402770:	std    
  402771:	test   DWORD PTR [ebx+0x2c],ebp
  402774:	test   ebx,esi
  402776:	adc    al,0xbc
  402778:	xor    edx,esi
  40277a:	mov    ds:0x8dd4aa03,eax
  40277f:	leave  
  402780:	sub    BYTE PTR [ecx-0x37d1f95f],0x8a
  402787:	jbe    0x402747
  402789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40278a:	mov    dh,0x4a
  40278c:	in     al,0x7
  40278e:	push   ecx
  40278f:	(bad)  
  402790:	ds loopne 0x40273b
  402793:	fdiv   QWORD PTR [ebp+ebx*1+0x164f3e3f]
  40279a:	mov    ds:0xbcbca9fe,eax
  40279f:	lock mul BYTE PTR [edi+ebx*1+0x6e]
  4027a4:	xor    BYTE PTR [eax-0x681f27d1],bh
  4027aa:	adc    dl,cl
  4027ac:	sub    al,0xd9
  4027ae:	sub    ah,bh
  4027b0:	int3   
  4027b1:	lods   eax,DWORD PTR ds:[esi]
  4027b2:	cmc    
  4027b3:	popf   
  4027b4:	aaa    
  4027b5:	lods   al,BYTE PTR ds:[esi]
  4027b6:	out    0xab,eax
  4027b8:	sbb    bl,bl
  4027ba:	add    eax,0x75bae0e5
  4027bf:	jbe    0x4027d0
  4027c1:	movq   mm0,QWORD PTR [esi+ebp*2+0xe]
  4027c6:	push   ebx
  4027c7:	mov    esi,0x6c55d533
  4027cc:	jae    0x402784
  4027ce:	push   0xffffffdb
  4027d0:	int    0x7e
  4027d2:	mov    bl,0xc8
  4027d4:	mov    ds:0xf5f02596,eax
  4027d9:	fidiv  WORD PTR [edx]
  4027db:	xor    DWORD PTR [edx+0x61],edi
  4027de:	mov    BYTE PTR [ecx-0x53d9e731],dh
  4027e4:	cdq    
  4027e5:	nop
  4027e6:	lahf   
  4027e7:	inc    ebx
  4027e8:	mov    ?,WORD PTR [eax+ebx*2+0x5]
  4027ec:	hlt    
  4027ed:	lods   eax,DWORD PTR ds:[esi]
  4027ee:	cwde   
  4027ef:	jnp    0x402856
  4027f1:	sub    bl,BYTE PTR [ebx]
  4027f3:	xchg   ebp,eax
  4027f4:	xchg   ebx,eax
  4027f5:	inc    edx
  4027f6:	je     0x40282b
  4027f8:	call   0x413641d1
  4027fd:	inc    esi
  4027fe:	ss sub al,0x84
  402801:	adc    BYTE PTR [edi+0x713241e],cl
  402807:	mov    ecx,0x463d22fb
  40280c:	sti    
  40280d:	call   DWORD PTR [edi]
  40280f:	mov    ah,0x32
  402811:	inc    ecx
  402812:	or     al,0x33
  402814:	popa   
  402815:	jb     0x402879
  402817:	mov    eax,ds:0x5c9053dc
  40281c:	push   esp
  40281d:	sbb    DWORD PTR [esi+0x6e2c283a],ebx
  402823:	push   esp
  402824:	imul   edi,DWORD PTR [edx],0x61
  402827:	and    dh,al
  402829:	aam    0x65
  40282b:	and    esi,edi
  40282d:	sbb    DWORD PTR [ebx],eax
  40282f:	sbb    BYTE PTR [eax+0x70],0x68
  402833:	adc    edx,DWORD PTR [esi]
  402835:	sbb    BYTE PTR [esp+esi*1+0x29],cl
  402839:	push   eax
  40283a:	fdivr  DWORD PTR [ebp+0x7d]
  40283d:	loopne 0x4027e4
  40283f:	test   DWORD PTR [edx+0x69],edx
  402842:	mov    al,ds:0x2cef12f3
  402847:	mov    edi,0x7194f04b
  40284c:	jns    0x4027db
  40284e:	adc    DWORD PTR [ebx-0x516747b8],esp
  402854:	popf   
  402855:	into   
  402856:	rol    dh,cl
  402858:	dec    edx
  402859:	das    
  40285a:	or     eax,0x15f38c05
  40285f:	ja     0x402837
  402861:	icebp  
  402862:	ret    
  402863:	push   edx
  402864:	inc    esp
  402865:	sbb    ecx,ebx
  402867:	sub    dl,dl
  402869:	sbb    DWORD PTR [eax+0x5c],ecx
  40286c:	loope  0x4028ce
  40286e:	add    DWORD PTR [esi],esp
  402870:	(bad)
  402873:	(bad)  
  402874:	jmp    0x8f29e7e4
  402879:	jp     0x402802
  40287b:	call   FWORD PTR [edx]
  40287d:	ins    BYTE PTR es:[edi],dx
  40287e:	push   0x72
  402880:	and    eax,0x97cca206
  402885:	pop    edi
  402886:	repnz std 
  402888:	xchg   esp,eax
  402889:	pop    ss
  40288a:	jecxz  0x4028a8
  40288c:	xchg   BYTE PTR [esi+0x59],dh
  40288f:	mov    esi,0xdf16a851
  402894:	or     esi,DWORD PTR [edi]
  402896:	sub    DWORD PTR [ebp-0x3],edx
  402899:	add    edx,DWORD PTR [esp+esi*1+0xe]
  40289d:	pop    ss
  40289e:	rcl    DWORD PTR [ebp+0x3d],1
  4028a1:	shr    edi,1
  4028a3:	daa    
  4028a4:	mov    esp,0xb9fd67d2
  4028a9:	rcl    BYTE PTR [ecx-0x23],0xe0
  4028ad:	inc    eax
  4028ae:	fdivr  DWORD PTR [edx+0xefb6994]
  4028b4:	push   0xf03a96fd
  4028b9:	jmp    0x45407444
  4028be:	mov    ebx,0x8ebc745b
  4028c3:	loopne 0x40293b
  4028c5:	pushf  
  4028c6:	aaa    
  4028c7:	pop    ecx
  4028c8:	cmp    DWORD PTR [edx+edi*1],edx
  4028cb:	(bad)  
  4028cc:	div    DWORD PTR [ebx+0xc349bcc]
  4028d2:	into   
  4028d3:	push   0x60
  4028d5:	jno    0x799c3c4d
  4028db:	data16 arpl WORD PTR [ebp+0xb],dx
  4028df:	out    dx,al
  4028e0:	add    DWORD PTR [edi+0x3c],edi
  4028e3:	pushf  
  4028e4:	leave  
  4028e5:	es loop 0x4028e7
  4028e8:	jbe    0x4028cb
  4028ea:	add    al,BYTE PTR [ebx-0x60a0aafc]
  4028f0:	sbb    DWORD PTR [edx],0xfffffff3
  4028f3:	push   ebp
  4028f4:	test   eax,0x65a3cf25
  4028f9:	cs push cs
  4028fb:	add    DWORD PTR [ebx-0x47],ebx
  4028fe:	jecxz  0x40297b
  402900:	(bad)  
  402901:	push   eax
  402902:	repz movsx edx,ah
  402906:	dec    ecx
  402907:	and    BYTE PTR [ebp-0x18],cl
  40290a:	cmp    DWORD PTR [ebp-0x23cfcbc1],0xcf0136db
  402914:	jns    0x4028e8
  402916:	lock aam 0x9d
  402919:	daa    
  40291a:	fbld   TBYTE PTR [ecx]
  40291c:	xchg   BYTE PTR [edx],bl
  40291e:	(bad)  
  40291f:	mov    dh,0x37
  402921:	rol    DWORD PTR [edx-0x101d5f67],cl
  402927:	or     DWORD PTR [ecx-0x45],edx
  40292a:	dec    ebp
  40292b:	data16 fs adc cl,ah
  40292f:	add    al,0x82
  402931:	int    0x2b
  402933:	pop    es
  402934:	lods   al,BYTE PTR ds:[esi]
  402935:	out    dx,eax
  402936:	(bad)  
  402937:	sti    
  402938:	ss neg BYTE PTR ss:[esi+0x40]
  40293d:	loop   0x40294d
  40293f:	adc    ebp,ebx
  402941:	jnp    0x402984
  402943:	dec    esp
  402944:	push   eax
  402945:	fs gs or al,0x69
  402949:	adc    DWORD PTR [ecx-0x20],0xffffff86
  40294d:	cli    
  40294e:	ja     0x4029c0
  402950:	xor    eax,0xeb761311
  402955:	mov    ebx,0xd4aafa31
  40295a:	sbb    ch,BYTE PTR [ebp+0x107316ec]
  402960:	xchg   ebp,eax
  402961:	fisubr WORD PTR [ebp+ecx*2+0x416b4cee]
  402968:	pop    esi
  402969:	cld    
  40296a:	hlt    
  40296b:	xor    al,0xf8
  40296d:	mov    bh,0x82
  40296f:	iret   
  402970:	popa   
  402971:	mov    ch,0x23
  402973:	mov    ch,0x48
  402975:	mov    bl,0x94
  402977:	mov    ds,WORD PTR [edi]
  402979:	mov    dl,0x6
  40297b:	in     eax,dx
  40297c:	enter  0x18,0xcf
  402980:	leave  
  402981:	push   edi
  402982:	jecxz  0x40291f
  402984:	stos   BYTE PTR es:[edi],al
  402985:	test   BYTE PTR [edi],dh
  402987:	or     cl,BYTE PTR [ebx+edx*8]
  40298a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298b:	mov    edi,0xd273d3cc
  402990:	dec    esp
  402991:	or     ebx,DWORD PTR [bx+0x405d]
  402996:	xchg   BYTE PTR [eax],bl
  402998:	sar    BYTE PTR [edx+0x16],cl
  40299b:	(bad)  
  40299c:	jno    0x402997
  40299e:	sub    al,0xc3
  4029a0:	or     eax,0x48e8fdcc
  4029a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a6:	(bad)  
  4029a7:	stc    
  4029a8:	jp     0x402a18
  4029aa:	fnstcw WORD PTR [ebp-0xb6cd935]
  4029b0:	pop    ds
  4029b1:	dec    edx
  4029b2:	or     edi,DWORD PTR [ebp+ecx*1+0x1f]
  4029b6:	dec    edi
  4029b7:	cli    
  4029b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b9:	mov    ds:0xa73a716d,al
  4029be:	aad    0x52
  4029c0:	ins    BYTE PTR es:[edi],dx
  4029c1:	sbb    al,0x30
  4029c3:	pop    ds
  4029c4:	pop    ss
  4029c5:	popf   
  4029c6:	add    eax,0xf144a47f
  4029cb:	(bad)  
  4029cc:	repnz imul BYTE PTR [edx+0x6e]
  4029d0:	aas    
  4029d1:	fwait
  4029d2:	xchg   edx,eax
  4029d3:	sbb    eax,0xb23152d9
  4029d8:	cwde   
  4029d9:	lods   al,BYTE PTR ds:[esi]
  4029da:	mov    bl,0x6f
  4029dc:	mov    ecx,0x37af436d
  4029e1:	and    BYTE PTR [esi-0x38f9f9a6],bh
  4029e7:	xor    BYTE PTR [ecx-0x77],bh
  4029ea:	xchg   esp,eax
  4029eb:	pop    esp
  4029ec:	jge    0x402a41
  4029ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ef:	int3   
  4029f0:	in     eax,dx
  4029f1:	xchg   ecx,eax
  4029f2:	(bad)  [edx]
  4029f4:	jmp    0x402a61
  4029f6:	int3   
  4029f7:	push   esp
  4029f8:	mov    al,ds:0xa7fc0c7b
  4029fd:	sub    DWORD PTR [eax+0x7a],esp
  402a00:	mov    al,ds:0x81be1da2
  402a05:	push   edi
  402a06:	pusha  
  402a07:	imul   edx,DWORD PTR ds:0x30c8c714,0x46c63300
  402a11:	mov    edi,0xe1ef9710
  402a16:	jle    0x402a17
  402a18:	xchg   ebx,eax
  402a19:	ins    DWORD PTR es:[edi],dx
  402a1a:	mov    eax,ds:0x2a0fbfa4
  402a1f:	jae    0x402a57
  402a21:	cmp    ebx,DWORD PTR [ecx+0x43da992b]
  402a27:	mov    eax,ds:0xdae96265
  402a2c:	pop    esi
  402a2d:	retf   0xc559
  402a30:	and    esi,DWORD PTR [edx]
  402a32:	clc    
  402a33:	rdmsr  
  402a35:	aaa    
  402a36:	ins    BYTE PTR es:[edi],dx
  402a37:	push   es
  402a38:	test   BYTE PTR ss:[eax],ch
  402a3b:	fisubr DWORD PTR fs:[ecx+0xf802e22]
  402a42:	lods   al,BYTE PTR ds:[esi]
  402a43:	mov    ecx,0x32d238c0
  402a48:	in     al,0xc6
  402a4a:	in     al,0xef
  402a4c:	test   DWORD PTR [eax+0x41e1bf9c],esi
  402a52:	jge    0x402a31
  402a54:	repz dec edx
  402a56:	adc    esi,DWORD PTR [edi+esi*4]
  402a59:	call   0x2acc:0xc2994c31
  402a60:	ret    0x251
  402a63:	outs   dx,DWORD PTR ds:[esi]
  402a64:	add    al,0x39
  402a66:	sbb    DWORD PTR [esi],esi
  402a68:	and    al,0x57
  402a6a:	adc    al,0x6a
  402a6c:	idiv   BYTE PTR [eax+eax*4]
  402a6f:	mul    DWORD PTR [edi]
  402a71:	es (bad) 
  402a73:	dec    eax
  402a74:	push   ebx
  402a75:	lock mov eax,ds:0xafe3696
  402a7b:	mov    edx,0x6549cec7
  402a80:	mov    ebx,0x56502b12
  402a85:	xchg   esp,eax
  402a86:	imul   edx,DWORD PTR [ebx+ebx*4-0x1c],0x3d416789
  402a8e:	cmp    DWORD PTR [ecx],eax
  402a90:	repz imul eax,DWORD PTR [ebx+0x39db627],0x33
  402a98:	scas   eax,DWORD PTR es:[edi]
  402a99:	jae    0x402ab3
  402a9b:	ret    
  402a9c:	jl     0x402ae2
  402a9e:	push   ecx
  402a9f:	out    0x80,al
  402aa1:	neg    esp
  402aa3:	jp     0x402aa0
  402aa5:	out    dx,eax
  402aa6:	sar    DWORD PTR [edi],cl
  402aa8:	(bad)  
  402aaa:	out    dx,eax
  402aab:	push   ebx
  402aac:	jmp    0x5006:0x5caa71e6
  402ab3:	cmc    
  402ab4:	push   ecx
  402ab5:	push   ebp
  402ab6:	je     0x402af3
  402ab8:	sbb    eax,0xb23018d3
  402abd:	dec    ebx
  402abe:	cwde   
  402abf:	mov    esi,DWORD PTR [edi]
  402ac1:	xor    edx,DWORD PTR [esi+ebp*8-0x43]
  402ac5:	mov    ah,0xc9
  402ac7:	jbe    0x402aeb
  402ac9:	in     al,dx
  402aca:	stc    
  402acb:	int3   
  402acc:	lock rcl BYTE PTR es:[eax-0x74],0xf7
  402ad2:	mov    ds:0x1cf54acd,al
  402ad7:	stos   BYTE PTR es:[edi],al
  402ad8:	sbb    al,BYTE PTR ds:0x955e500c
  402ade:	push   0xffffff98
  402ae0:	jmp    0x6fe63bf9
  402ae5:	mov    ecx,0x5205f068
  402aea:	mov    cl,0x43
  402aec:	inc    edi
  402aed:	sub    al,BYTE PTR ds:0xcfbf4027
  402af3:	jne    0x402aad
  402af5:	sbb    al,BYTE PTR [ecx]
  402af7:	dec    edx
  402af8:	add    DWORD PTR [eax+0x5e0db32f],edi
  402afe:	mov    bh,0x9a
  402b00:	adc    eax,0x42d0b0e0
  402b05:	jmp    0xb524:0x10d46463
  402b0c:	sbb    al,0xf9
  402b0e:	sbb    ch,BYTE PTR [edi-0x4de6b167]
  402b14:	shl    BYTE PTR [esi+0x6d],0x86
  402b18:	pop    ds
  402b19:	lods   eax,DWORD PTR ds:[esi]
  402b1a:	mov    edx,DWORD PTR [edx]
  402b1c:	fisubr WORD PTR [ebx+0x3d]
  402b1f:	xchg   ebx,eax
  402b20:	and    al,0xf4
  402b22:	sub    al,0xf9
  402b24:	add    dh,BYTE PTR [ebx]
  402b26:	popa   
  402b27:	pop    ebx
  402b28:	add    esp,esi
  402b2a:	jb     0x402b0b
  402b2c:	out    dx,eax
  402b2d:	jge    0x402b5f
  402b2f:	retf   0xef8f
  402b32:	cmp    bh,BYTE PTR [edx]
  402b34:	fwait
  402b35:	add    ecx,DWORD PTR [edi+ebp*2]
  402b38:	clc    
  402b39:	repz out dx,eax
  402b3b:	inc    eax
  402b3c:	add    ebx,esp
  402b3e:	inc    ecx
  402b3f:	ror    BYTE PTR [edi],cl
  402b41:	in     al,0x20
  402b43:	loop   0x402b97
  402b45:	rol    DWORD PTR [eax-0x17],1
  402b48:	(bad)  
  402b4a:	outs   dx,DWORD PTR ds:[esi]
  402b4b:	xor    DWORD PTR [esp+edi*1-0x2e],edx
  402b4f:	adc    eax,0xabcdd491
  402b54:	mov    edi,0x94144bd1
  402b59:	mov    bh,0xc2
  402b5b:	dec    eax
  402b5c:	jge    0x402af7
  402b5e:	cli    
  402b5f:	sar    BYTE PTR [edx+0x20],cl
  402b62:	aaa    
  402b63:	jl     0x402b59
  402b65:	sub    esi,ecx
  402b67:	je     0x402aec
  402b69:	xor    ah,BYTE PTR [esi-0x4bc22f3b]
  402b6f:	mov    dl,0xa9
  402b71:	add    eax,ebx
  402b73:	les    edi,FWORD PTR [ebx-0x70]
  402b76:	fwait
  402b77:	sti    
  402b78:	adc    eax,0xd0e92a00
  402b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7e:	aaa    
  402b7f:	loope  0x402b0f
  402b81:	je     0x402b19
  402b83:	data16 jecxz 0x402b78
  402b86:	mov    BYTE PTR [ecx+0xa],0xff
  402b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b8b:	pusha  
  402b8c:	cmp    ch,BYTE PTR [ebx-0x4209ae66]
  402b92:	mov    ah,0x42
  402b94:	cmp    ebp,ebx
  402b96:	sbb    al,0x6d
  402b98:	out    dx,al
  402b99:	aaa    
  402b9a:	fnsave [ebp-0x2facd697]
  402ba0:	loopne 0x402c10
  402ba2:	ds cld 
  402ba4:	xor    ch,dh
  402ba6:	shl    DWORD PTR [edx+ecx*1+0x5c],cl
  402baa:	pop    ebx
  402bab:	mov    edi,DWORD PTR [ecx+0x538d0afd]
  402bb1:	adc    edx,edi
  402bb3:	dec    edi
  402bb4:	pusha  
  402bb5:	sbb    ah,ch
  402bb7:	push   eax
  402bb8:	mov    bl,0x71
  402bba:	jmp    0x402b48
  402bbc:	or     BYTE PTR [edi+ebp*1],cl
  402bbf:	(bad)  
  402bc0:	pushf  
  402bc1:	push   ecx
  402bc2:	call   0x334f4bbf
  402bc7:	out    dx,eax
  402bc8:	dec    edi
  402bc9:	stos   BYTE PTR es:[edi],al
  402bca:	xchg   DWORD PTR [ebx+eiz*4],ebp
  402bcd:	out    0xef,al
  402bcf:	leave  
  402bd0:	bound  ecx,QWORD PTR [ebx]
  402bd2:	dec    ecx
  402bd3:	sub    al,0x28
  402bd5:	leave  
  402bd6:	and    DWORD PTR fs:[ebx],esp
  402bd9:	or     al,0xb1
  402bdb:	xchg   esi,eax
  402bdc:	push   ebp
  402bdd:	jns    0x402c20
  402bdf:	aam    0x62
  402be1:	lds    edi,FWORD PTR [ebx]
  402be3:	and    ch,ch
  402be5:	sub    al,0x7a
  402be7:	loopne 0x402b95
  402be9:	das    
  402bea:	call   0xcba0:0x3491b6ce
  402bf1:	std    
  402bf2:	xchg   esi,eax
  402bf3:	aaa    
  402bf4:	sub    bl,BYTE PTR [edx+esi*8]
  402bf7:	div    BYTE PTR [ecx+0x424b3099]
  402bfd:	push   0xffffff96
  402bff:	jns    0x402bbd
  402c01:	xchg   ecx,eax
  402c02:	xchg   ecx,eax
  402c03:	sbb    DWORD PTR [edx-0x2b],eax
  402c06:	int3   
  402c07:	aas    
  402c08:	dec    eax
  402c09:	and    DWORD PTR [ebx-0x6],ebx
  402c0c:	push   eax
  402c0d:	dec    ecx
  402c0e:	xlat   BYTE PTR ds:[ebx]
  402c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c10:	in     al,0x19
  402c12:	cmp    edx,edx
  402c14:	dec    ebp
  402c15:	push   esp
  402c16:	hlt    
  402c17:	loop   0x402be6
  402c19:	sbb    eax,0x4bc63282
  402c1e:	sub    al,0xfd
  402c20:	in     al,dx
  402c21:	pusha  
  402c22:	shr    ch,0x50
  402c25:	shr    cl,cl
  402c27:	add    al,0x79
  402c29:	adc    eax,0x5451522e
  402c2e:	jmp    0x402c22
  402c30:	or     BYTE PTR es:[eax-0x36477920],dl
  402c37:	fdiv   DWORD PTR [eax-0x59]
  402c3a:	loope  0x402c2f
  402c3c:	push   ds
  402c3d:	jmp    0x402c18
  402c3f:	mov    ds:0x949a07e4,eax
  402c44:	inc    esp
  402c45:	(bad)  
  402c46:	jecxz  0x402c4c
  402c48:	add    DWORD PTR [eax],0xb3a29064
  402c4e:	out    dx,eax
  402c4f:	dec    ebx
  402c50:	sub    cl,BYTE PTR [edx+0x2f2f42bc]
  402c56:	shl    bl,cl
  402c58:	xchg   ebx,eax
  402c59:	shl    DWORD PTR [edi+ebp*2+0x1],cl
  402c5d:	cwde   
  402c5e:	pop    ebp
  402c5f:	shl    BYTE PTR ds:0x7df168d3,0x57
  402c66:	mov    bh,0xa0
  402c68:	imul   ebx,DWORD PTR [esp+eiz*4+0xa],0xffffffdc
  402c6d:	into   
  402c6e:	rol    BYTE PTR [eax-0x32],0xbf
  402c72:	out    0x48,al
  402c74:	cs xchg cl,bl
  402c77:	mov    bl,0xd6
  402c79:	sub    BYTE PTR [esp+ecx*2],bl
  402c7c:	add    al,0x1f
  402c7e:	push   0x4483c5c0
  402c83:	inc    edx
  402c84:	pop    ecx
  402c85:	xor    DWORD PTR [ebp-0x1b789bc],eax
  402c8b:	clc    
  402c8c:	add    eax,0xa3caa99c
  402c91:	adc    bl,BYTE PTR [edi-0x23f5df79]
  402c97:	and    edi,edi
  402c99:	jmp    0x402c55
  402c9b:	mov    ebp,ds
  402c9d:	outs   dx,DWORD PTR ds:[esi]
  402c9e:	(bad)  
  402c9f:	std    
  402ca0:	ret    
  402ca1:	xchg   esp,eax
  402ca2:	inc    edi
  402ca3:	je     0x402c47
  402ca5:	push   edi
  402ca6:	inc    esp
  402ca7:	mov    dh,0xc3
  402ca9:	fmul   DWORD PTR [esi-0x5f]
  402cac:	and    eax,0xb7263034
  402cb1:	fadd   QWORD PTR ds:0x9409bf45
  402cb7:	cdq    
  402cb8:	fild   QWORD PTR [ebp-0x31]
  402cbb:	jp     0x402c6d
  402cbd:	repz daa 
  402cbf:	fadd   DWORD PTR [esi-0x14]
  402cc2:	cmp    edx,DWORD PTR [esi+edx*4+0x4d80dfb6]
  402cc9:	sub    esp,eax
  402ccb:	mov    DWORD PTR [ecx+0x2a],ebx
  402cce:	fistp  WORD PTR [eax]
  402cd0:	dec    ebp
  402cd1:	ret    
  402cd2:	stos   DWORD PTR es:[edi],eax
  402cd3:	pop    ds
  402cd4:	cmp    al,0xdc
  402cd6:	(bad)  [ebx+0xb]
  402cd9:	cmp    eax,0xd863f4a5
  402cde:	jns    0x402ce6
  402ce0:	xchg   ebp,eax
  402ce1:	mov    esi,0xc4205ca
  402ce6:	or     cl,BYTE PTR [ebp-0x272ec67d]
  402cec:	jp     0x402cc2
  402cee:	mov    bl,0xfb
  402cf0:	iret   
  402cf1:	in     al,0x45
  402cf3:	xor    eax,0x4646a4a6
  402cf8:	inc    edi
  402cf9:	inc    ecx
  402cfa:	lock (bad) 
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	mov    dl,0x5c
  402cff:	std    
  402d00:	add    ch,BYTE PTR [ebx]
  402d02:	(bad)  [ebp-0x1285696c]
  402d08:	pop    esi
  402d09:	iret   
  402d0a:	icebp  
  402d0b:	dec    esi
  402d0c:	pop    esp
  402d0d:	cmp    eax,0xef7372b2
  402d12:	push   ds
  402d13:	or     BYTE PTR [bx-0x7ba9],al
  402d18:	adc    DWORD PTR [ebp+0x4f],esi
  402d1b:	loope  0x402d53
  402d1d:	in     eax,0x61
  402d1f:	xchg   esi,eax
  402d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d21:	adc    DWORD PTR [ecx-0x3f],ebx
  402d24:	add    dl,bl
  402d26:	pop    edx
  402d27:	mov    ah,0xc2
  402d29:	pop    ecx
  402d2a:	push   ds
  402d2b:	retf   0xda49
  402d2e:	mov    WORD PTR [esi-0x65],es
  402d31:	hlt    
  402d32:	inc    eax
  402d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d34:	in     al,0xf0
  402d36:	cmp    BYTE PTR [ebx],bh
  402d38:	push   ss
  402d39:	setne  BYTE PTR [ecx+eiz*1]
  402d3d:	mov    al,0x4
  402d3f:	sub    edx,DWORD PTR [ecx+0x6ce2a28c]
  402d45:	int    0xbc
  402d47:	enter  0xf270,0x8a
  402d4b:	loope  0x402d95
  402d4d:	std    
  402d4e:	inc    esi
  402d4f:	fdiv   DWORD PTR [edx-0x3410c5ac]
  402d55:	(bad)  
  402d56:	lahf   
  402d57:	adc    DWORD PTR [eax+ebx*2-0x16],esp
  402d5b:	sahf   
  402d5c:	sub    DWORD PTR [ebx-0x37a19f7c],0x1d
  402d63:	push   ecx
  402d64:	mov    bl,0x3e
  402d66:	and    BYTE PTR [edi],al
  402d68:	mov    es,WORD PTR [edi]
  402d6a:	jnp    0x402d38
  402d6c:	push   ds
  402d6d:	shr    ch,0x10
  402d70:	fiadd  DWORD PTR [edi+0x7de6fe2e]
  402d76:	rcr    DWORD PTR ds:0x68ee5615,0x1
  402d7d:	test   al,0x2a
  402d7f:	aaa    
  402d80:	push   edx
  402d81:	shl    BYTE PTR [eax],0xdf
  402d84:	jp     0x402dff
  402d86:	ja     0x402e02
  402d88:	or     edi,DWORD PTR [eax]
  402d8a:	adc    cl,BYTE PTR [eax+eiz*8]
  402d8d:	adc    eax,0xe0f38000
  402d92:	clc    
  402d93:	mov    ds:0x48a67a00,eax
  402d98:	je     0x402dd5
  402d9a:	inc    esi
  402d9b:	adc    DWORD PTR [ebx],ecx
  402d9d:	sar    BYTE PTR [eax-0xe],0x4e
  402da1:	pusha  
  402da2:	adc    al,0x21
  402da4:	ds jno 0x402e07
  402da7:	repnz cs push es
  402daa:	push   ecx
  402dab:	pop    ds
  402dac:	add    cl,dl
  402dae:	ror    DWORD PTR [edx+0x63],0x80
  402db2:	mov    BYTE PTR [ebx+0x74bf76e],bh
  402db8:	sar    BYTE PTR [ebx+0x69eb532e],1
  402dbe:	pop    ecx
  402dbf:	(bad)  
  402dc0:	xor    al,0x48
  402dc2:	xchg   esp,eax
  402dc3:	icebp  
  402dc4:	cmc    
  402dc5:	pop    esi
  402dc6:	mov    dl,0x6
  402dc8:	mov    esp,0xfc4b8d4a
  402dcd:	lods   eax,DWORD PTR ds:[esi]
  402dce:	shl    esp,0xa5
  402dd1:	mov    edx,0x3ac4bfdf
  402dd6:	pop    edx
  402dd7:	mov    eax,0x7585e3ae
  402ddc:	sbb    al,0x9f
  402dde:	add    DWORD PTR [ecx],0xbcc952d5
  402de4:	loop   0x402e2c
  402de6:	mov    ebx,0x975ad4a3
  402deb:	xor    al,0x3b
  402ded:	inc    ecx
  402dee:	jo     0x402df2
  402df0:	stc    
  402df1:	cmp    dh,BYTE PTR [bp+si-0x15]
  402df5:	push   eax
  402df6:	adc    edi,edi
  402df8:	clc    
  402df9:	and    DWORD PTR [ecx+ebp*1-0x17],0x2b8af9f8
  402e01:	aas    
  402e02:	cmp    esi,esp
  402e04:	lock ins DWORD PTR es:[edi],dx
  402e06:	mov    si,ds
  402e09:	pop    ebx
  402e0a:	mov    cl,BYTE PTR [ebp-0x3f]
  402e0d:	in     al,0xb4
  402e0f:	cwde   
  402e10:	mov    ds,WORD PTR [eax+eiz*8]
  402e13:	fisub  DWORD PTR [esi+ecx*2-0x6f97258a]
  402e1a:	hlt    
  402e1b:	std    
  402e1c:	xor    al,0xd7
  402e1e:	jnp    0x402dc5
  402e20:	push   ebx
  402e21:	add    al,0x6f
  402e23:	ss xchg ebp,eax
  402e25:	jecxz  0x402e21
  402e27:	clc    
  402e28:	(bad)  [ebx+edi*8-0x49]
  402e2c:	ror    WORD PTR [edi+edi*8],cl
  402e30:	jmp    0x531e:0xfb64522d
  402e37:	aam    0x2a
  402e39:	(bad)  
  402e3b:	push   0x39
  402e3d:	inc    esi
  402e3e:	js     0x402e57
  402e40:	dec    ecx
  402e41:	out    dx,eax
  402e42:	fild   QWORD PTR [ebp-0x1c]
  402e45:	add    BYTE PTR [edi],bl
  402e47:	fild   DWORD PTR [ecx-0xd533260]
  402e4d:	pusha  
  402e4e:	jecxz  0x402e86
  402e50:	into   
  402e51:	jo     0x402e50
  402e53:	(bad)  
  402e54:	xchg   ecx,eax
  402e55:	jae    0x402dfa
  402e57:	xchg   dh,dh
  402e59:	into   
  402e5a:	jo     0x402e02
  402e5c:	mov    ah,0x69
  402e5e:	and    ch,BYTE PTR [ebp-0x7394bec1]
  402e64:	pop    ebp
  402e65:	cs mov dl,0xc7
  402e68:	dec    dh
  402e6a:	retf   
  402e6b:	aam    0xd
  402e6d:	push   es
  402e6e:	push   ebx
  402e6f:	popa   
  402e70:	jb     0x402e5c
  402e72:	pushf  
  402e73:	or     edi,ebp
  402e75:	std    
  402e76:	pop    esp
  402e77:	stc    
  402e78:	dec    eax
  402e79:	sub    DWORD PTR [ecx],edx
  402e7b:	sbb    DWORD PTR [edi+0x2f],edx
  402e7e:	mov    ds:0x9c713fad,eax
  402e83:	loop   0x402ea1
  402e85:	cdq    
  402e86:	loopne 0x402ed6
  402e88:	mov    bh,0x6
  402e8a:	sub    BYTE PTR [edi+0x2],ah
  402e8d:	retf   
  402e8e:	stos   BYTE PTR es:[edi],al
  402e8f:	dec    ebx
  402e90:	dec    ebp
  402e91:	add    BYTE PTR [esi],0x90
  402e94:	inc    ebp
  402e95:	mov    bh,0x42
  402e97:	and    BYTE PTR [eax+0x5f],ah
  402e9a:	adc    DWORD PTR [esi],ebp
  402e9c:	fidivr WORD PTR [ecx]
  402e9e:	test   eax,0xc8bb83e1
  402ea3:	pop    edx
  402ea4:	arpl   WORD PTR [esp+ebx*8-0x7d],cx
  402ea8:	popa   
  402ea9:	xchg   ebx,eax
  402eaa:	cmp    BYTE PTR [eax+ebp*8+0x15],bh
  402eae:	mov    dh,0xb4
  402eb0:	out    dx,eax
  402eb1:	outs   dx,BYTE PTR ds:[esi]
  402eb2:	inc    edx
  402eb3:	inc    ecx
  402eb4:	mov    ds:0xb509f5d9,al
  402eb9:	repnz xor DWORD PTR [esi+0x21],ebx
  402ebd:	mov    dl,0xd8
  402ebf:	mov    bh,0x3d
  402ec1:	clc    
  402ec2:	mov    eax,0xa6ffb067
  402ec7:	and    DWORD PTR [ebp+0x338c5e30],esp
  402ecd:	sar    DWORD PTR [ebx+0x75],cl
  402ed0:	or     eax,0x74bfaa5f
  402ed5:	push   0x36
  402ed7:	daa    
  402ed8:	in     eax,0x52
  402eda:	repz and al,0x11
  402edd:	loopne 0x402ed0
  402edf:	call   0xc2cc:0x833408d2
  402ee6:	jmp    0x8f2b:0x654f3c4e
  402eed:	adc    DWORD PTR [ebx-0x72160e64],ecx
  402ef3:	xchg   edx,eax
  402ef4:	loope  0x402eeb
  402ef6:	pop    eax
  402ef7:	jo     0x402eba
  402ef9:	stos   BYTE PTR es:[edi],al
  402efa:	in     eax,0xa5
  402efc:	xor    BYTE PTR [ecx+0x27],0x3f
  402f00:	(bad)  
  402f01:	pop    ecx
  402f02:	sub    BYTE PTR [edx-0x2e03c22d],bh
  402f08:	xchg   edx,eax
  402f09:	mov    WORD PTR [eax+0x337bc58],?
  402f0f:	shl    BYTE PTR [esi-0x75],1
  402f12:	lods   eax,DWORD PTR ds:[esi]
  402f13:	sub    al,0x9
  402f15:	xchg   edi,esi
  402f17:	sbb    bl,dh
  402f19:	sub    eax,0x409f4588
  402f1e:	enter  0x5a48,0xfd
  402f22:	aam    0xc2
  402f24:	mov    WORD PTR [eax+edx*1],cs
  402f27:	sbb    DWORD PTR [esp+esi*8-0x7d],edi
  402f2b:	lahf   
  402f2c:	imul   ecx,DWORD PTR [eax-0x77a4a66d],0x60
  402f33:	lahf   
  402f34:	push   0x3d
  402f36:	ss ret 
  402f38:	cmp    al,0x24
  402f3a:	sub    DWORD PTR [edi+ebx*1],ebp
  402f3d:	pop    ecx
  402f3e:	lea    ebx,[eax]
  402f40:	inc    esp
  402f41:	adc    dh,BYTE PTR [esi-0x4b]
  402f44:	and    BYTE PTR [ebx],bl
  402f46:	stos   DWORD PTR es:[edi],eax
  402f47:	push   ecx
  402f48:	and    DWORD PTR [edi+edi*1-0x578c66d3],eax
  402f4f:	fldcw  WORD PTR [eax+0x4ed03c01]
  402f55:	mov    eax,0x9bf5f131
  402f5a:	push   edx
  402f5b:	(bad)  
  402f5c:	scas   eax,DWORD PTR es:[edi]
  402f5d:	add    BYTE PTR [edi-0x79cd390],bl
  402f63:	call   0xd4f:0x6b699d4c
  402f6a:	push   es
  402f6b:	ficomp WORD PTR [edx]
  402f6d:	jg     0x402f64
  402f6f:	mov    ch,0x21
  402f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f72:	sbb    al,0x32
  402f74:	sbb    al,0xf4
  402f76:	idiv   BYTE PTR [edx]
  402f78:	push   eax
  402f79:	ret    
  402f7a:	xor    ecx,DWORD PTR [ecx-0x1c]
  402f7d:	dec    esi
  402f7e:	pop    esi
  402f7f:	imul   ebp,DWORD PTR [ebx-0x72ddebf],0xffffffb1
  402f86:	cmp    eax,0xed610e5e
  402f8b:	ins    BYTE PTR es:[edi],dx
  402f8c:	cld    
  402f8d:	add    esp,ecx
  402f8f:	jecxz  0x402fa5
  402f91:	mov    DWORD PTR [eax-0x6a971523],esi
  402f97:	mov    dl,0x98
  402f99:	and    bl,BYTE PTR [edi-0x5d]
  402f9c:	pop    ebp
  402f9d:	pop    edx
  402f9e:	shl    bl,cl
  402fa0:	(bad)  
  402fa2:	adc    eax,0xe5186b73
  402fa7:	jbe    0x403014
  402fa9:	cmp    ebp,DWORD PTR ds:0x2425a184
  402faf:	dec    esi
  402fb0:	into   
  402fb1:	sbb    al,0x4e
  402fb3:	les    ecx,FWORD PTR [ebp-0x3e58d690]
  402fb9:	mov    dh,0x2
  402fbb:	lahf   
  402fbc:	mov    ?,WORD PTR [edx+0x7a772595]
  402fc2:	enter  0xaab4,0x9c
  402fc6:	cs enter 0xd3a7,0x3a
  402fcb:	pop    ecx
  402fcc:	cmp    al,0xa6
  402fce:	mov    cl,0x75
  402fd0:	add    eax,0xd614784e
  402fd5:	rcr    edi,0x12
  402fd8:	xchg   edx,eax
  402fd9:	fadd   QWORD PTR [ebx+0x705207bb]
  402fdf:	and    BYTE PTR [esi-0x27],bl
  402fe2:	lahf   
  402fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe4:	jne    0x402f7c
  402fe6:	daa    
  402fe7:	loopne 0x403011
  402fe9:	mov    eax,0xdf678d8c
  402fee:	push   esi
  402fef:	sbb    al,0xb6
  402ff1:	fs push ecx
  402ff3:	dec    edx
  402ff4:	fsincos 
  402ff6:	pushf  
  402ff7:	push   esp
  402ff8:	sub    eax,DWORD PTR [esi+ecx*4]
  402ffb:	test   al,0x5c
  402ffd:	(bad)  
  402ffe:	out    0x6b,al
  403000:	fadd   QWORD PTR [edi-0x5cb26d69]
  403006:	cmc    
  403007:	inc    ebx
  403008:	call   0xa7f4:0x83844c64
  40300f:	sub    ah,BYTE PTR [edi+0x75129f32]
  403015:	sub    al,0x1f
  403017:	mov    bh,0xb5
  403019:	adc    al,0xc3
  40301b:	xor    BYTE PTR [esi],dl
  40301d:	repz mov ah,0xbe
  403020:	fsubr  QWORD PTR [edi-0x6a29b463]
  403026:	or     bh,BYTE PTR [eax]
  403028:	xor    eax,0xc20e9a72
  40302d:	add    eax,DWORD PTR [esi]
  40302f:	ins    DWORD PTR es:[edi],dx
  403030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403031:	into   
  403032:	xor    BYTE PTR [esi],al
  403034:	outs   dx,DWORD PTR ds:[esi]
  403035:	push   eax
  403036:	push   ecx
  403037:	jg     0x402fe4
  403039:	loope  0x40305d
  40303b:	test   eax,0xcdc26900
  403040:	xchg   esp,eax
  403041:	iret   
  403042:	or     al,0xa0
  403044:	dec    edx
  403045:	std    
  403046:	retf   
  403047:	xchg   BYTE PTR [ecx+eiz*8-0x8],bh
  40304b:	cli    
  40304c:	mov    bh,0xb2
  40304e:	mov    dl,0xec
  403050:	xchg   edx,eax
  403051:	jle    0x40307d
  403053:	pushf  
  403054:	xchg   BYTE PTR [esi+0x8],dl
  403057:	mov    DWORD PTR [edx],ebp
  403059:	and    dh,BYTE PTR [edi-0x7c]
  40305c:	jmp    0x402fe7
  40305e:	cmp    al,0xf2
  403060:	addr16 mov ds:0xed01,al
  403064:	mov    dh,0xf4
  403066:	loop   0x403017
  403068:	cs push esp
  40306a:	pop    es
  40306b:	dec    edx
  40306c:	push   0x2f
  40306e:	addr16 sbb al,0x9
  403071:	popf   
  403072:	stos   DWORD PTR es:[edi],eax
  403073:	jne    0x4030b8
  403075:	jmp    0x403018
  403077:	cdq    
  403078:	mov    edx,0x137e4452
  40307d:	inc    ebp
  40307e:	loope  0x40302e
  403080:	cmc    
  403081:	les    ecx,FWORD PTR [edi]
  403083:	xchg   esp,eax
  403084:	xchg   ebx,eax
  403085:	mov    eax,0xa79e2af4
  40308a:	push   edi
  40308b:	inc    ebx
  40308c:	jnp    0x4030a7
  40308e:	cld    
  40308f:	ror    DWORD PTR [edi-0x17],cl
  403092:	jp     0x4030e4
  403094:	push   es
  403095:	cld    
  403096:	mov    ebx,0xcea9a6be
  40309b:	mov    DWORD PTR [edi-0x16],ebp
  40309e:	scas   al,BYTE PTR es:[edi]
  40309f:	in     eax,0x8
  4030a1:	shl    DWORD PTR [ecx+0x56],cl
  4030a4:	push   ebp
  4030a5:	in     al,dx
  4030a6:	int3   
  4030a7:	stc    
  4030a8:	cmp    bl,bh
  4030aa:	adc    dl,BYTE PTR [edx+ecx*8]
  4030ad:	add    eax,0xa8233f2c
  4030b2:	mov    edi,0x744c3eda
  4030b7:	mov    esi,0xa8b3ee0f
  4030bc:	sbb    DWORD PTR [edx-0x78],esp
  4030bf:	sbb    al,BYTE PTR [edx+0x19]
  4030c2:	shr    DWORD PTR [ebx+0x20],0x2b
  4030c6:	or     eax,0x8d417c6
  4030cb:	pop    ds
  4030cc:	or     eax,0xca6d3c54
  4030d1:	out    0x87,al
  4030d3:	pushf  
  4030d4:	(bad)  
  4030d5:	je     0x4030a3
  4030d7:	out    0x14,eax
  4030d9:	push   edi
  4030da:	mov    eax,ds:0x9c6b91a9
  4030df:	add    al,0xd7
  4030e1:	cmc    
  4030e2:	mov    esp,0x9c721738
  4030e7:	push   ebx
  4030e8:	in     eax,dx
  4030e9:	loope  0x403167
  4030eb:	imul   edi,DWORD PTR [edi-0x30bc129d],0xfcf85c5
  4030f5:	cmp    cl,cl
  4030f7:	push   eax
  4030f8:	int3   
  4030f9:	pop    ecx
  4030fa:	jle    0x4030dd
  4030fc:	fsubr  QWORD PTR [edi+0x93315bb]
  403102:	(bad)  
  403104:	stos   DWORD PTR es:[edi],eax
  403105:	fimul  WORD PTR [esi+edi*4]
  403108:	ins    DWORD PTR es:[edi],dx
  403109:	sbb    ch,BYTE PTR [edx+esi*1]
  40310c:	push   edi
  40310d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310e:	dec    esp
  40310f:	lock lods al,BYTE PTR ds:[esi]
  403111:	sbb    ah,dl
  403113:	adc    DWORD PTR [eax],esp
  403115:	mov    edi,0xbe4ddfc1
  40311a:	sbb    al,0x3a
  40311c:	or     al,0xe0
  40311e:	stc    
  40311f:	or     DWORD PTR [esi-0x36],0xdf43a97f
  403126:	retf   
  403127:	sbb    esi,ebp
  403129:	arpl   WORD PTR cs:[esi+0x14a8a5be],bx
  403130:	loope  0x4030cf
  403132:	fld    QWORD PTR [edi-0x19]
  403135:	pop    eax
  403136:	jmp    0x239b9164
  40313b:	test   eax,0x15bee89e
  403140:	int3   
  403141:	pop    ebp
  403142:	jno    0x4030ec
  403144:	nop
  403145:	imul   edx,DWORD PTR [eax-0x54],0xffffffbb
  403149:	(bad)  
  40314a:	ins    BYTE PTR es:[edi],dx
  40314b:	adc    DWORD PTR [edx+0x6a],esp
  40314e:	daa    
  40314f:	push   ss
  403150:	popf   
  403151:	push   cs
  403152:	sahf   
  403153:	cmc    
  403154:	adc    BYTE PTR [ebx*4+0x53c5763d],al
  40315b:	adc    eax,0xdec683be
  403160:	sbb    BYTE PTR [ebp+0x7e],bh
  403163:	xor    DWORD PTR ds:0x7166f0b6,eax
  403169:	addr16 pop es
  40316b:	xchg   esp,eax
  40316c:	xchg   ecx,eax
  40316d:	xchg   ebx,eax
  40316e:	into   
  40316f:	scas   eax,DWORD PTR es:[edi]
  403170:	shl    bh,1
  403172:	(bad)  [ecx-0x7f]
  403175:	lds    eax,FWORD PTR [edi]
  403177:	mov    ds:0xfd4ef8d0,al
  40317c:	je     0x403121
  40317e:	mov    edi,DWORD PTR [esi]
  403180:	ds fsqrt 
  403183:	test   eax,0x8b886c85
  403188:	ds cmp al,bh
  40318b:	mov    al,0x9
  40318d:	adc    BYTE PTR [esp+ecx*1+0x26067854],0x95
  403195:	jmp    0x7fe167db
  40319a:	inc    eax
  40319b:	lahf   
  40319c:	ret    0xd9c8
  40319f:	int    0xe
  4031a1:	int3   
  4031a2:	pushf  
  4031a3:	imul   esp,DWORD PTR [edx-0x19],0x3021e4b2
  4031aa:	scas   al,BYTE PTR es:[edi]
  4031ab:	packssdw mm1,QWORD PTR [esi]
  4031ae:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4031b0:	sub    eax,0xf382afb
  4031b5:	xor    eax,0x50652216
  4031ba:	xchg   esp,eax
  4031bb:	stos   DWORD PTR es:[edi],eax
  4031bc:	cwde   
  4031bd:	aam    0x0
  4031bf:	ds int3 
  4031c1:	xchg   esp,eax
  4031c2:	pop    edx
  4031c3:	mov    ?,WORD PTR [ebp+eiz*1-0x7]
  4031c7:	xor    DWORD PTR [edx],0xfc88e2fc
  4031cd:	mov    bh,dl
  4031cf:	pop    eax
  4031d0:	das    
  4031d1:	adc    BYTE PTR [eax+0x34],al
  4031d4:	inc    edi
  4031d5:	(bad)  [ebx+eiz*8+0x1013d663]
  4031dc:	mov    ebx,0x6572b983
  4031e1:	dec    ecx
  4031e2:	addr16 aaa 
  4031e4:	out    dx,al
  4031e5:	sar    BYTE PTR [eax],1
  4031e7:	ja     0x40318b
  4031e9:	out    dx,eax
  4031ea:	lock jno 0x403231
  4031ed:	push   ebx
  4031ee:	inc    edi
  4031ef:	ja     0x403260
  4031f1:	out    dx,al
  4031f2:	ins    DWORD PTR es:[edi],dx
  4031f3:	inc    ecx
  4031f4:	cmp    eax,DWORD PTR gs:[ebx-0x48]
  4031f8:	or     al,0x91
  4031fa:	test   BYTE PTR [edx+0x7d],0x11
  4031fe:	repz push cs
  403200:	pop    ds
  403201:	fbstp  TBYTE PTR fs:[eax-0x572a2ad8]
  403208:	js     0x40318c
  40320a:	inc    ebp
  40320b:	loope  0x403284
  40320d:	mov    al,0x6d
  40320f:	mov    esp,0x6d53fa79
  403214:	or     eax,0x983137c4
  403219:	xor    BYTE PTR ds:0x49f383d7,bl
  40321f:	cmp    edi,0xffffffcb
  403222:	adc    DWORD PTR [ecx+0x38],ebx
  403225:	mov    dh,0x48
  403227:	(bad)  
  403229:	pop    edi
  40322a:	pop    ds
  40322b:	or     eax,0xe44e6afb
  403230:	push   ss
  403231:	xor    esi,DWORD PTR [ebx+0xc]
  403234:	aad    0xc5
  403236:	ror    DWORD PTR [ebx],0x4e
  403239:	xlat   BYTE PTR ds:[ebx]
  40323a:	inc    ebx
  40323b:	int    0xe8
  40323d:	outs   dx,BYTE PTR ds:[esi]
  40323e:	pusha  
  40323f:	push   edx
  403240:	out    0x7c,eax
  403242:	push   edx
  403243:	gs jb  0x40326c
  403246:	jno    0x403290
  403248:	(bad)  
  403249:	sub    al,0x1a
  40324b:	adc    DWORD PTR [edx-0x70],ebp
  40324e:	stos   BYTE PTR es:[edi],al
  40324f:	(bad)  
  403250:	nop
  403251:	inc    esi
  403252:	xor    dh,BYTE PTR [edx+0x689c1f78]
  403258:	add    BYTE PTR [ebx+0xdf89240],al
  40325e:	popf   
  40325f:	xchg   esp,eax
  403260:	add    ebp,ecx
  403262:	jbe    0x4032dd
  403264:	mul    DWORD PTR [ebx+0x2aca98f5]
  40326a:	adc    esi,esi
  40326c:	in     al,dx
  40326d:	push   ecx
  40326e:	xor    al,BYTE PTR [edi]
  403270:	sbb    al,0x80
  403272:	ret    0x6a92
  403275:	dec    edx
  403276:	mov    eax,ebx
  403278:	push   edi
  403279:	rcr    BYTE PTR [esi-0x9503c1],cl
  40327f:	(bad)  
  403280:	adc    eax,0x99b75325
  403285:	push   0xffffffc9
  403287:	jge    0x4032f4
  403289:	inc    ebx
  40328a:	mov    edi,ds
  40328c:	sbb    esp,DWORD PTR [ebx+0x70]
  40328f:	sub    eax,0x89f91969
  403294:	push   ebp
  403295:	jle    0x4032e1
  403297:	dec    ebp
  403298:	adc    esp,DWORD PTR [ebx-0x1a3ec237]
  40329e:	sbb    DWORD PTR [edi+0x27],esi
  4032a1:	gs ja  0x403239
  4032a4:	mov    ecx,0x3715f8c8
  4032a9:	sub    eax,0xce95df1a
  4032ae:	jge    0x4032bc
  4032b0:	mov    cl,0xa5
  4032b2:	jnp    0x403315
  4032b4:	jne    0x403305
  4032b6:	xchg   ecx,eax
  4032b7:	pusha  
  4032b8:	mov    dl,0x7
  4032ba:	push   eax
  4032bb:	jle    0x4032f7
  4032bd:	lea    eax,[edi]
  4032bf:	lahf   
  4032c0:	imul   ebp,DWORD PTR [esi],0xffffff96
  4032c3:	sbb    eax,0x122ffd2c
  4032c8:	or     eax,0xc611c3cc
  4032cd:	nop
  4032ce:	sub    al,0x8c
  4032d0:	mov    edi,0x110d37e
  4032d5:	jge    0x4032ae
  4032d7:	popa   
  4032d8:	out    dx,al
  4032d9:	mov    bh,0xda
  4032db:	inc    edi
  4032dc:	mov    eax,ds:0xbff2d9ee
  4032e1:	stos   BYTE PTR es:[edi],al
  4032e2:	retf   0xeb9
  4032e5:	cs xchg ebx,eax
  4032e7:	cli    
  4032e8:	jl     0x40334b
  4032ea:	adc    edx,DWORD PTR [edx-0x7b]
  4032ed:	pop    es
  4032ee:	int    0x64
  4032f0:	scas   al,BYTE PTR es:[edi]
  4032f1:	jl     0x403334
  4032f3:	mov    esp,0xf9813f38
  4032f8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4032fa:	jp     0x403283
  4032fc:	std    
  4032fd:	outs   dx,BYTE PTR ds:[esi]
  4032fe:	adc    esp,DWORD PTR [ecx-0x43]
  403301:	(bad)  
  403302:	out    0x76,al
  403304:	shr    DWORD PTR [edx-0x43c4cd4],0xba
  40330b:	fbstp  TBYTE PTR [ecx]
  40330d:	add    BYTE PTR [edx+0x42],0x62
  403311:	mov    ch,0x64
  403313:	inc    eax
  403314:	or     BYTE PTR [edi+ebx*2-0x6d8b0ea0],al
  40331b:	jp     0x403351
  40331d:	jb     0x403358
  40331f:	stos   DWORD PTR es:[edi],eax
  403320:	int    0x57
  403322:	mov    ds:0xb8c7ccf8,al
  403327:	push   es
  403328:	arpl   WORD PTR [eax+0x26],bx
  40332b:	fldcw  WORD PTR ds:0xe02e2544
  403331:	and    eax,0x4f2e1ee8
  403336:	xchg   esp,eax
  403337:	rcr    DWORD PTR cs:[eax],cl
  40333a:	push   ecx
  40333b:	sbb    esi,DWORD PTR [eax]
  40333d:	mov    eax,ds:0x76b9cf57
  403342:	pushf  
  403343:	and    eax,0x191ebf09
  403348:	cmp    al,0x2d
  40334a:	push   eax
  40334b:	pusha  
  40334c:	pop    edx
  40334d:	popa   
  40334e:	push   eax
  40334f:	xchg   BYTE PTR [edi+0x45],dl
  403352:	fisttp DWORD PTR [ebx+0x52c38663]
  403358:	inc    eax
  403359:	xlat   BYTE PTR ds:[ebx]
  40335a:	xor    eax,ebx
  40335c:	jno    0x4033a3
  40335e:	pop    ecx
  40335f:	xor    dl,dl
  403361:	mov    al,ds:0x75f24d4e
  403366:	out    dx,eax
  403367:	inc    eax
  403368:	pusha  
  403369:	jecxz  0x4033ad
  40336b:	imul   ecx,DWORD PTR [esi-0x31],0x5606c895
  403372:	jns    0x4033dd
  403374:	add    al,0x76
  403376:	pop    ecx
  403377:	sahf   
  403378:	mov    ds:0xe6e9e8a7,eax
  40337d:	in     al,0xd3
  40337f:	or     al,BYTE PTR [eax]
  403381:	cdq    
  403382:	fsubrp st(3),st
  403384:	mov    DWORD PTR [edx],ebp
  403386:	out    dx,eax
  403387:	(bad)  
  403388:	stc    
  403389:	enter  0x76d7,0x4a
  40338d:	lea    ebx,[ebx+0x75433698]
  403393:	xchg   esi,eax
  403394:	jle    0x403380
  403396:	jge    0x403356
  403398:	ins    DWORD PTR es:[edi],dx
  403399:	or     BYTE PTR [eax+0x7c9c4ed9],dl
  40339f:	pop    ebx
  4033a0:	lods   al,BYTE PTR ds:[esi]
  4033a1:	dec    ecx
  4033a2:	mov    ah,0xf
  4033a4:	sbb    al,0x1
  4033a6:	or     ebp,DWORD PTR [ebx+0x1d]
  4033a9:	xchg   edx,eax
  4033aa:	sub    BYTE PTR [ebp-0x51],ch
  4033ad:	xor    al,0xc
  4033af:	aas    
  4033b0:	adc    ah,BYTE PTR cs:[edi]
  4033b3:	push   ss
  4033b4:	fcmovu st,st(2)
  4033b6:	xor    al,0x3
  4033b8:	mov    al,0xc8
  4033ba:	fidivr DWORD PTR [ebp-0x3dcb8986]
  4033c0:	lahf   
  4033c1:	xchg   esi,eax
  4033c2:	mov    eax,0x96c6e706
  4033c7:	lods   al,BYTE PTR ds:[esi]
  4033c8:	ins    DWORD PTR es:[edi],dx
  4033c9:	pop    ecx
  4033ca:	dec    ecx
  4033cb:	and    DWORD PTR ds:0xe5e97e45,ebx
  4033d1:	leave  
  4033d2:	sub    eax,0x7b7fb559
  4033d7:	out    dx,eax
  4033d8:	mov    ?,WORD PTR [edx-0x67]
  4033db:	hlt    
  4033dc:	pop    eax
  4033dd:	repnz mov esp,0x282d2dde
  4033e3:	xchg   ebp,eax
  4033e4:	pop    DWORD PTR [ebp+ebx*2-0x5edc9395]
  4033eb:	(bad)  
  4033ec:	jp     0x4033ae
  4033ee:	adc    al,0x44
  4033f0:	in     eax,0x7e
  4033f2:	xor    cl,dl
  4033f4:	dec    eax
  4033f5:	xchg   edi,eax
  4033f6:	adc    esi,DWORD PTR [edx+0x62]
  4033f9:	mov    cl,0xdd
  4033fb:	xor    DWORD PTR [esi-0x5ae02724],ecx
  403401:	lea    ecx,[ecx]
  403403:	outs   dx,BYTE PTR ds:[esi]
  403404:	adc    al,0x63
  403406:	neg    edi
  403408:	add    al,0xce
  40340a:	aas    
  40340b:	pop    ebp
  40340c:	and    DWORD PTR [ecx+0x750f1f4c],0xffffffa2
  403413:	pop    edi
  403414:	ret    
  403415:	adc    eax,0xba4bd616
  40341a:	repnz fmul QWORD PTR [eax+0x31]
  40341e:	inc    edi
  40341f:	jne    0x4033dd
  403421:	xor    DWORD PTR [ecx+0x177fbce1],ebx
  403427:	inc    esi
  403428:	push   ecx
  403429:	out    dx,eax
  40342a:	stos   BYTE PTR es:[edi],al
  40342b:	sub    al,ch
  40342d:	cs add eax,0xcc9da036
  403433:	mov    dh,0xb2
  403435:	(bad)  
  403436:	ficom  DWORD PTR [edi]
  403438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403439:	inc    esi
  40343a:	fidivr WORD PTR [ebp+0xe2b52]
  403440:	jge    0x40342b
  403442:	(bad)  
  403443:	test   DWORD PTR [eax+eax*2],0x61a317c0
  40344a:	push   edi
  40344b:	fnstsw WORD PTR [ecx]
  40344d:	js     0x4033e9
  40344f:	adc    al,0x97
  403451:	or     al,0xba
  403453:	mov    ecx,0x5ac955c5
  403458:	cli    
  403459:	adc    dh,BYTE PTR [ecx+edx*4-0x14fba29e]
  403460:	xchg   esi,eax
  403461:	test   DWORD PTR [ebx-0x5cc1a1e2],0x1fd433d5
  40346b:	xor    al,0xc2
  40346d:	cli    
  40346e:	cmp    al,0xc5
  403470:	adc    al,0xe4
  403472:	cli    
  403473:	ins    BYTE PTR es:[edi],dx
  403474:	std    
  403475:	xor    DWORD PTR [edx],esp
  403477:	mov    ds:0xc9db2ba9,al
  40347c:	push   esi
  40347d:	xchg   ecx,eax
  40347e:	inc    eax
  40347f:	gs inc esi
  403481:	sbb    edi,DWORD PTR [ebx+eiz*8+0x42eb5bd2]
  403488:	imul   esp,DWORD PTR [edx],0x41d72c5
  40348e:	xchg   BYTE PTR [eax+0x47],dh
  403491:	mov    ch,0x75
  403493:	std    
  403494:	xchg   edx,eax
  403495:	cmp    eax,0x569db7d7
  40349a:	stos   DWORD PTR es:[edi],eax
  40349b:	sti    
  40349c:	mov    dl,0x74
  40349e:	lods   eax,DWORD PTR ds:[esi]
  40349f:	enter  0xf489,0xf3
  4034a3:	sub    DWORD PTR [ecx-0x4a889ae3],edi
  4034a9:	sbb    BYTE PTR [eax+0x76],bh
  4034ac:	dec    ecx
  4034ad:	pmulhuw mm0,QWORD PTR [ebp+ebx*4-0x3b404cbf]
  4034b5:	sbb    DWORD PTR [edx],ebp
  4034b7:	pop    ebx
  4034b8:	xchg   edi,eax
  4034b9:	sub    dh,ah
  4034bb:	mov    DWORD PTR [esi+ecx*8],0xcb8ce5d6
  4034c2:	mov    ah,0x69
  4034c4:	punpckhbw mm3,mm7
  4034c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c8:	inc    esp
  4034c9:	mov    al,0x47
  4034cb:	hlt    
  4034cc:	jg     0x403529
  4034ce:	rol    dh,1
  4034d0:	dec    BYTE PTR [ebp+0x18]
  4034d3:	pusha  
  4034d4:	fwait
  4034d5:	add    al,0xa5
  4034d7:	ja     0x4034f1
  4034d9:	mov    DWORD PTR [ebp+0x2af113d6],edx
  4034df:	int3   
  4034e0:	dec    edx
  4034e1:	mov    edi,0xf9467a4b
  4034e6:	adc    DWORD PTR [edx+0x30fb8d63],0x6ede8ae7
  4034f0:	ds push ebx
  4034f2:	xor    al,0x99
  4034f4:	(bad)  [ebx]
  4034f6:	icebp  
  4034f7:	jbe    0x4034b2
  4034f9:	push   edi
  4034fa:	(bad)  
  4034fb:	retf   0xe450
  4034fe:	xor    al,0x23
  403500:	out    dx,eax
  403501:	jecxz  0x403489
  403503:	jno    0x4034f2
  403505:	and    al,0x41
  403507:	push   0xffffffdb
  403509:	loopne 0x4034fd
  40350b:	mov    dl,0x1a
  40350d:	enter  0xbb97,0x4f
  403511:	aad    0xd3
  403513:	sbb    al,0x70
  403515:	xchg   edi,eax
  403516:	fwait
  403517:	jne    0x4034ed
  403519:	xchg   ecx,eax
  40351a:	mov    dl,0xb4
  40351c:	xchg   ecx,eax
  40351d:	imul   ecx,edi,0xe9b0aa4e
  403523:	push   esi
  403524:	dec    esp
  403525:	int    0xaa
  403527:	shl    cl,0xe0
  40352a:	pop    esi
  40352b:	xor    dh,BYTE PTR [eax-0x1e]
  40352e:	pop    ecx
  40352f:	mov    ch,BYTE PTR ds:0x819c6b3e
  403535:	out    0x25,al
  403537:	push   DWORD PTR [eax-0x3e80ec24]
  40353d:	aad    0xc6
  40353f:	jmp    0x6f42802b
  403544:	xchg   ebx,eax
  403545:	stos   DWORD PTR es:[edi],eax
  403546:	adc    bh,cl
  403548:	push   esi
  403549:	mov    dh,0xc5
  40354b:	or     BYTE PTR [eax],dh
  40354d:	repz in al,dx
  40354f:	jg     0x4035a3
  403551:	mov    edx,0x67d66d26
  403556:	push   ds
  403557:	sub    BYTE PTR [eax],dl
  403559:	mov    esp,0xeeef485c
  40355e:	ficom  DWORD PTR [esi+ebp*1-0x1aec204d]
  403565:	inc    ebp
  403566:	jp     0x403574
  403568:	les    eax,FWORD PTR [ebp-0x9]
  40356b:	adc    al,0x8f
  40356d:	jbe    0x40354d
  40356f:	mov    dl,0x3e
  403571:	mov    cl,0x5b
  403573:	pop    ecx
  403574:	jp     0x403514
  403576:	push   esi
  403577:	cmp    cl,BYTE PTR [ebx]
  403579:	sub    ch,BYTE PTR [edx]
  40357b:	ret    
  40357c:	adc    DWORD PTR [edi],ecx
  40357e:	mov    ah,0xda
  403580:	and    dh,cl
  403582:	or     eax,0x9f8a449a
  403587:	frstor [ecx-0x56]
  40358a:	stos   DWORD PTR es:[edi],eax
  40358b:	ret    0x54af
  40358e:	daa    
  40358f:	imul   edx,DWORD PTR [esp+edi*4-0x31b49d73],0xffffff90
  403597:	jb     0x403523
  403599:	inc    eax
  40359a:	aas    
  40359b:	test   al,0x8f
  40359d:	sbb    edi,DWORD PTR [esi]
  40359f:	daa    
  4035a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035a1:	and    esi,DWORD PTR [ebp-0x1e70ad5c]
  4035a7:	lods   eax,DWORD PTR ds:[esi]
  4035a8:	outs   dx,BYTE PTR ds:[esi]
  4035a9:	push   es
  4035aa:	test   DWORD PTR [edx-0x75a374f2],ebx
  4035b0:	cmp    ebx,eax
  4035b2:	cmc    
  4035b3:	xor    al,BYTE PTR [ebp-0x52361cfb]
  4035b9:	imul   esi,DWORD PTR [edi-0x447dcd2d],0x3e
  4035c0:	jae    0x4035b5
  4035c2:	pushf  
  4035c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c4:	or     BYTE PTR [esi+edi*2-0x715f8cdf],dl
  4035cb:	sub    ah,BYTE PTR [ecx-0x3f46958c]
  4035d1:	clc    
  4035d2:	aam    0xa4
  4035d4:	mov    ds:0xe240b494,eax
  4035d9:	add    eax,0xcf64edad
  4035de:	test   eax,0xc3174d4
  4035e3:	dec    esp
  4035e4:	out    dx,eax
  4035e5:	out    0x87,al
  4035e7:	cmp    ebx,DWORD PTR [edi+eax*2+0x5ed86b25]
  4035ee:	jg     0x403596
  4035f0:	jb     0x403622
  4035f2:	mov    eax,ds:0xa5632b71
  4035f7:	cmp    eax,0x7d460a28
  4035fc:	pop    edi
  4035fd:	pop    esp
  4035fe:	test   al,0xa1
  403600:	push   0x3ab09f0b
  403605:	mov    DWORD PTR [eax-0x4e628ff],ebp
  40360b:	test   DWORD PTR [eax+0x3da142d6],esi
  403611:	mov    cl,0xb5
  403613:	and    al,0x88
  403615:	iret   
  403616:	jne    0x403607
  403618:	dec    ebx
  403619:	jge    0x4035b2
  40361b:	xchg   ecx,eax
  40361c:	mov    eax,ds:0xe69ce133
  403621:	add    al,0x9
  403623:	jle    0x403695
  403625:	test   eax,0x9294b467
  40362a:	mov    ecx,0xcded91d7
  40362f:	mov    DWORD PTR [ebp-0x18],ecx
  403632:	mov    DWORD PTR [ebp-0xa0],0xf89c85bc
  40363c:	mov    eax,ds:0x429024
  403641:	add    DWORD PTR ds:0x42a014,eax
  403647:	mov    eax,DWORD PTR [ebp-0x14]
  40364a:	mov    DWORD PTR [ebp-0x9c],eax
  403650:	adc    eax,0x5b9f
  403655:	mov    eax,DWORD PTR [ebp-0x18]
  403658:	sbb    DWORD PTR ds:0x42d004,0x42c01c
  403662:	mov    DWORD PTR [ebp-0x98],eax
  403668:	mov    eax,DWORD PTR [ebp-0x2c]
  40366b:	sub    DWORD PTR ds:0x429004,0x429014
  403675:	xor    eax,esi
  403677:	sub    DWORD PTR ds:0x429000,0x42c014
  403681:	add    eax,edi
  403683:	mov    DWORD PTR [ebp-0x94],eax
  403689:	lea    eax,[ebp-0x48]
  40368c:	mov    DWORD PTR [ebp-0x90],eax
  403692:	mov    eax,DWORD PTR [ebp-0xa0]
  403698:	xor    eax,esi
  40369a:	sbb    DWORD PTR ds:0x42a014,0x429000
  4036a4:	add    eax,edi
  4036a6:	sbb    DWORD PTR ds:0x42d010,0x42c00c
  4036b0:	mov    DWORD PTR [ebp-0xa0],eax
  4036b6:	xor    DWORD PTR ds:0x42a010,0x42901c
  4036c0:	lea    eax,[ebp-0xa0]
  4036c6:	push   eax
  4036c7:	sub    DWORD PTR ds:0x42d008,ebx
  4036cd:	mov    eax,DWORD PTR [ebp+0xc]
  4036d0:	or     DWORD PTR ds:0x42d01c,0x42a01c
  4036da:	xor    eax,esi
  4036dc:	xor    DWORD PTR ds:0x429000,0x42c018
  4036e6:	add    eax,edi
  4036e8:	xor    DWORD PTR ds:0x42a008,0x7741
  4036f2:	push   eax
  4036f3:	xor    eax,eax
  4036f5:	or     eax,DWORD PTR ds:0x42901c
  4036fb:	adc    DWORD PTR ds:0x42a00c,eax
  403701:	mov    eax,ds:0x42f38b
  403706:	push   0x42f2e1
  40370b:	add    DWORD PTR ds:0x429004,0x6a27
  403715:	push   DWORD PTR [eax]
  403717:	sub    DWORD PTR ds:0x429004,0x42d008
  403721:	call   0x40cc14
  403726:	and    ecx,0x7055
  40372c:	mov    ebx,DWORD PTR [ebp-0x14]
  40372f:	mov    DWORD PTR ds:0x42b008,0x1f
  403739:	cmp    DWORD PTR ds:0x42b008,0x0
  403740:	je     0x403790
  403746:	cmp    DWORD PTR ds:0x42b008,0x10
  40374d:	jbe    0x403790
  403753:	jmp    0x403764
  403758:	push   DWORD PTR [ebp-0x18]
  40375b:	push   DWORD PTR [ebp-0xc]
  40375e:	call   DWORD PTR ds:0x43002b
  403764:	cmp    DWORD PTR ds:0x42b008,0x11
  40376b:	jne    0x40377e
  403771:	mov    ecx,DWORD PTR ds:0x42b008
  403777:	dec    ecx
  403778:	mov    DWORD PTR ds:0x42b008,ecx
  40377e:	mov    ecx,DWORD PTR ds:0x42b008
  403784:	dec    ecx
  403785:	mov    DWORD PTR ds:0x42b008,ecx
  40378b:	jmp    0x403739
  403790:	mov    eax,DWORD PTR [ebp-0x18]
  403793:	mov    DWORD PTR [ebp-0x58],eax
  403796:	mov    DWORD PTR [ebp-0x34],0xf89c8533
  40379d:	mov    ecx,0xf89c85b1
  4037a2:	mov    edx,DWORD PTR ds:0x424a08
  4037a8:	mov    edx,DWORD PTR [edx]
  4037aa:	sbb    DWORD PTR ds:0x42c00c,edx
  4037b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4037b3:	lea    eax,[ecx-0x1]
  4037b6:	or     DWORD PTR ds:0x42d014,ebx
  4037bc:	mov    DWORD PTR [ebp-0x28],eax
  4037bf:	movzx  edx,WORD PTR ds:0x42a000
  4037c6:	sub    DWORD PTR ds:0x42b018,edx
  4037cc:	mov    DWORD PTR [ebp-0x10],ecx
  4037cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4037d6:	add    DWORD PTR ds:0x42c014,0x7fdd
  4037e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037e3:	xor    ecx,esi
  4037e5:	mov    edx,0xffcd8d94
  4037ea:	sub    edx,ecx
  4037ec:	mov    ecx,0x1367
  4037f1:	mov    DWORD PTR [ebp-0xc],edx
  4037f4:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4037fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4037fe:	mov    DWORD PTR [ebp-0x3c],ebx
  403801:	cmp    ecx,eax
  403803:	je     0x405f34
  403809:	mov    eax,DWORD PTR [ebp-0x10]
  40380c:	xor    DWORD PTR ds:0x42901c,edi
  403812:	mov    ecx,DWORD PTR [ebp-0x10]
  403815:	xor    eax,esi
  403817:	add    DWORD PTR ds:0x42b014,0x42901c
  403821:	xor    ecx,esi
  403823:	add    DWORD PTR ds:0x429000,0x42c010
  40382d:	lea    ecx,[eax+ecx*1+0x64e5d8]
  403834:	mov    eax,DWORD PTR [ebp-0xc]
  403837:	dec    DWORD PTR ds:0x42c004
  40383d:	xor    edx,edx
  40383f:	sub    DWORD PTR ds:0x429008,0x6755
  403849:	div    ecx
  40384b:	dec    ecx
  40384c:	mov    eax,DWORD PTR [ebp-0x8]
  40384f:	add    DWORD PTR ds:0x429018,ecx
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    eax,esi
  40385a:	adc    DWORD PTR ds:0x42d000,0x42a010
  403864:	xor    ecx,esi
  403866:	add    DWORD PTR ds:0x42900c,0x1115
  403870:	sub    eax,ecx
  403872:	mov    DWORD PTR ds:0x429020,0x13e
  40387c:	cmp    edx,eax
  40387e:	jne    0x405e79
  403884:	add    DWORD PTR ds:0x42b000,0x4efc
  40388e:	mov    eax,DWORD PTR [ebp-0xc]
  403891:	and    DWORD PTR ds:0x42b004,0x0
  40389b:	mov    ecx,DWORD PTR ds:0x42b004
  4038a1:	inc    ecx
  4038a2:	mov    DWORD PTR ds:0x42b004,ecx
  4038a8:	cmp    DWORD PTR ds:0x42b004,0x8
  4038af:	jle    0x4038f6
  4038b5:	jmp    0x4038cf
  4038ba:	push   0x1152
  4038bf:	push   0x42c014
  4038c4:	push   0x42f035
  4038c9:	call   DWORD PTR ds:0x430033
  4038cf:	cmp    DWORD PTR ds:0x42b004,0x7
  4038d6:	jne    0x4038e9
  4038dc:	mov    ecx,DWORD PTR ds:0x42b004
  4038e2:	inc    ecx
  4038e3:	mov    DWORD PTR ds:0x42b004,ecx
  4038e9:	cmp    DWORD PTR ds:0x42b004,0x16
  4038f0:	jb     0x40389b
  4038f6:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038fd:	movzx  eax,WORD PTR ds:0x42a010
  403904:	adc    eax,DWORD PTR ds:0x42a000
  40390a:	mov    ds:0x42a010,eax
  40390f:	mov    eax,DWORD PTR [ebp-0x28]
  403912:	mov    DWORD PTR ds:0x42a01c,0x1c
  40391c:	cmp    DWORD PTR ds:0x42a01c,0x0
  403923:	je     0x403973
  403929:	cmp    DWORD PTR ds:0x42a01c,0xa
  403930:	jg     0x403973
  403936:	jmp    0x403947
  40393b:	push   DWORD PTR [ebp-0x18]
  40393e:	push   DWORD PTR [ebp-0x24]
  403941:	call   DWORD PTR ds:0x430037
  403947:	cmp    DWORD PTR ds:0x42a01c,0xb
  40394e:	jne    0x403961
  403954:	mov    ecx,DWORD PTR ds:0x42a01c
  40395a:	dec    ecx
  40395b:	mov    DWORD PTR ds:0x42a01c,ecx
  403961:	mov    ecx,DWORD PTR ds:0x42a01c
  403967:	dec    ecx
  403968:	mov    DWORD PTR ds:0x42a01c,ecx
  40396e:	jmp    0x40391c
  403973:	mov    ecx,DWORD PTR [ebp-0x18]
  403976:	xor    eax,esi
  403978:	xor    ecx,esi
  40397a:	add    eax,edi
  40397c:	sbb    DWORD PTR ds:0x42b018,0x7aac
  403986:	add    ecx,edi
  403988:	mov    BYTE PTR [ebp-0x21],dl
  40398b:	cmp    eax,ecx
  40398d:	jae    0x405e2d
  403993:	and    edx,DWORD PTR ds:0x42b010
  403999:	lea    ecx,[eax-0x3272ec]
  40399f:	xor    edx,0x10ed
  4039a5:	jmp    0x405d01
  4039aa:	sub    DWORD PTR [esi+0x66],ebp
  4039ad:	std    
  4039ae:	sbb    ebp,esi
  4039b0:	cdq    
  4039b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b2:	cld    
  4039b3:	ss scas al,BYTE PTR es:[edi]
  4039b5:	sub    esp,ebp
  4039b7:	xlat   BYTE PTR ds:[ebx]
  4039b8:	fstp   QWORD PTR [ebp+0x7a7a5f3b]
  4039be:	cmp    ebx,DWORD PTR [edi+0x7a]
  4039c1:	jp     0x403968
  4039c3:	mov    ebx,0x8f6c1660
  4039c8:	icebp  
  4039c9:	fmul   DWORD PTR [edi-0x7b]
  4039cc:	and    dl,0xfa
  4039cf:	mov    esi,0x7e8cf547
  4039d4:	xchg   esi,eax
  4039d5:	leave  
  4039d6:	jns    0x40399e
  4039d8:	daa    
  4039d9:	ret    0xa2b0
  4039dc:	imul   ebx,esp,0xffffffc4
  4039df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e0:	push   0x76
  4039e2:	xchg   ecx,eax
  4039e3:	inc    edx
  4039e4:	adc    al,0x93
  4039e6:	dec    edx
  4039e7:	adc    eax,0xf2573d4a
  4039ec:	mov    BYTE PTR [eax+0x3a1149ab],cl
  4039f2:	ss int3 
  4039f4:	push   esp
  4039f5:	inc    edx
  4039f6:	xor    DWORD PTR fs:[ecx+0x4a],ebx
  4039fa:	xchg   edi,eax
  4039fb:	jne    0x4039a3
  4039fd:	pop    ecx
  4039fe:	and    BYTE PTR [ebx+0x9],ah
  403a01:	outs   dx,BYTE PTR ds:[esi]
  403a02:	(bad)  
  403a03:	mov    cl,0xbd
  403a05:	(bad)  
  403a06:	ret    
  403a07:	arpl   bx,sp
  403a09:	test   DWORD PTR [edi-0x4748774e],0xb330c73f
  403a13:	sar    esi,0x28
  403a16:	jge    0x403a45
  403a18:	or     BYTE PTR [ecx-0x111bcf5],0xa4
  403a1f:	fxch   st(6)
  403a21:	mov    ebp,0x70e6bb02
  403a26:	cld    
  403a27:	dec    ecx
  403a28:	daa    
  403a29:	repz sbb BYTE PTR [esi],ch
  403a2c:	xchg   esp,eax
  403a2d:	bound  ecx,QWORD PTR [edi+0x5c]
  403a30:	loopne 0x403a2a
  403a32:	pusha  
  403a33:	loop   0x403a87
  403a35:	mov    ds:0x507babf5,eax
  403a3b:	dec    ebx
  403a3c:	mov    edx,0xf5df1dcf
  403a41:	les    ebx,FWORD PTR [ebx]
  403a43:	dec    ebp
  403a44:	push   ds
  403a45:	les    ebp,FWORD PTR [esi-0x1a]
  403a48:	jmp    0x4039d7
  403a4a:	push   0xffffffad
  403a4c:	sbb    al,BYTE PTR [eax+0x4cfd7525]
  403a52:	ffreep st(5)
  403a54:	pop    edi
  403a55:	push   cs
  403a56:	mov    WORD PTR [eax+0x562b086e],ss
  403a5c:	and    eax,0xeed8dd6f
  403a61:	and    ebx,DWORD PTR [esi+0x9]
  403a64:	mov    es,WORD PTR [eax-0x94cdc96]
  403a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a6b:	ds jb  0x403acd
  403a6e:	lds    edx,FWORD PTR [esi-0x2c]
  403a71:	popf   
  403a72:	cmp    bl,BYTE PTR [ebp+edi*1+0x33]
  403a76:	adc    dl,dh
  403a78:	in     al,dx
  403a79:	shl    al,1
  403a7b:	scas   eax,DWORD PTR es:[edi]
  403a7c:	retf   0xdc90
  403a7f:	dec    ecx
  403a80:	iret   
  403a81:	sub    al,0x63
  403a83:	mov    edx,0x4aa10f9c
  403a88:	jmp    0x216e:0x20481bc
  403a8f:	mov    eax,ds:0xf3cdd3cb
  403a94:	push   ecx
  403a95:	cdq    
  403a96:	mov    ds:0x5d4c1bef,eax
  403a9b:	and    ah,BYTE PTR [ebp-0x55]
  403a9e:	shl    DWORD PTR [ebp+0x5e683d36],1
  403aa4:	dec    ebp
  403aa5:	inc    edi
  403aa6:	push   esi
  403aa7:	mov    ebp,0xf7cc1b09
  403aac:	aam    0x27
  403aae:	mov    ebp,0x8054ea24
  403ab3:	test   ecx,edi
  403ab5:	mov    DWORD PTR [edi],0x484db44d
  403abb:	shr    DWORD PTR [eax-0x3d4396fb],cl
  403ac1:	daa    
  403ac2:	sub    eax,0xcf93f62
  403ac7:	test   DWORD PTR [ebp+0x2a],edi
  403aca:	and    eax,0xac532c55
  403acf:	icebp  
  403ad0:	je     0x403a8d
  403ad2:	sbb    ebp,eax
  403ad4:	lahf   
  403ad5:	push   DWORD PTR [edi]
  403ad7:	in     al,dx
  403ad8:	jmp    0x403b33
  403ada:	add    al,0xf4
  403adc:	imul   edi,edx,0xdc3943a9
  403ae2:	and    DWORD PTR [edx],esi
  403ae4:	inc    esi
  403ae5:	add    BYTE PTR [edi],ch
  403ae7:	jmp    0xd2a9392f
  403aec:	cmp    esp,DWORD PTR [ebp+0x68]
  403aef:	sahf   
  403af0:	cmp    ecx,ecx
  403af2:	sub    edx,esi
  403af4:	mov    DWORD PTR [ebx],esp
  403af6:	(bad)  
  403af7:	in     al,0x46
  403af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403afa:	dec    eax
  403afb:	arpl   WORD PTR [edi+0x60],dx
  403afe:	cmp    esp,DWORD PTR [ebx+0x38cfa472]
  403b04:	rcl    DWORD PTR [eax-0x48],1
  403b07:	xchg   esp,eax
  403b08:	inc    esp
  403b09:	add    esi,DWORD PTR [ebx+0x7b9fd27e]
  403b0f:	das    
  403b10:	mov    al,ds:0xa0bc996b
  403b15:	push   ecx
  403b16:	mov    ebx,0x3fef6760
  403b1b:	das    
  403b1c:	and    ebp,DWORD PTR [ecx-0x311482ef]
  403b22:	mov    ecx,0x8f48b950
  403b27:	arpl   WORD PTR [eiz*1-0x13b3c9ec],cx
  403b2e:	icebp  
  403b2f:	cld    
  403b30:	repnz aaa 
  403b32:	add    bh,BYTE PTR ds:0xaedf0d01
  403b38:	adc    al,0xf3
  403b3a:	int    0xe5
  403b3c:	ror    DWORD PTR [eax],1
  403b3e:	and    bl,BYTE PTR [edx+eiz*8]
  403b41:	popf   
  403b42:	outs   dx,BYTE PTR ds:[esi]
  403b43:	pop    eax
  403b44:	fdivp  st(3),st
  403b46:	ret    
  403b47:	popf   
  403b48:	ror    ah,0x54
  403b4b:	hlt    
  403b4c:	sbb    al,dl
  403b4e:	aaa    
  403b4f:	(bad)
  403b52:	jmp    0x403b4f
  403b54:	and    BYTE PTR [esi-0x769542e3],ah
  403b5a:	(bad)  
  403b5b:	and    dh,al
  403b5d:	gs dec esi
  403b5f:	xchg   ebp,eax
  403b60:	mov    eax,0xbfc2f75d
  403b65:	mov    eax,0x51053d07
  403b6a:	sub    eax,0x8b41f0fe
  403b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b70:	sub    ah,ah
  403b72:	pop    ebx
  403b73:	mov    WORD PTR [edx+0x532ce92e],?
  403b79:	in     eax,0xe4
  403b7b:	mov    fs,ebx
  403b7d:	cmp    eax,0xa53684d2
  403b82:	add    esi,ebp
  403b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b85:	in     eax,0x4c
  403b87:	xchg   bl,ch
  403b89:	add    al,0x89
  403b8b:	jns    0x403b16
  403b8d:	pop    ds
  403b8e:	jge    0x403b57
  403b90:	(bad)  
  403b91:	rol    BYTE PTR [eax],1
  403b93:	call   0x4c64:0x33bc21a
  403b9a:	loopne 0x403ba9
  403b9c:	adc    ecx,0x93f0e897
  403ba2:	xchg   WORD PTR [edx],ax
  403ba5:	xchg   ebp,ebx
  403ba7:	add    edx,DWORD PTR [ebp+esi*1+0x7680eaa]
  403bae:	add    DWORD PTR [ecx],edi
  403bb0:	jae    0x403b8f
  403bb2:	mov    DWORD PTR [ecx-0x2b],edx
  403bb5:	sbb    DWORD PTR [eax+ebp*4+0x526bf31d],eax
  403bbc:	arpl   WORD PTR [edx+0x24],bx
  403bbf:	jae    0x403bf9
  403bc1:	sbb    bh,dl
  403bc3:	pop    esi
  403bc4:	ror    ah,0x68
  403bc7:	and    ebp,DWORD PTR ds:0x48ebbe3
  403bcd:	mov    cl,0xc6
  403bcf:	mov    esi,0x11d1d99
  403bd4:	dec    ecx
  403bd5:	and    al,BYTE PTR [ebp+0x1f]
  403bd8:	push   edx
  403bd9:	add    BYTE PTR [esi],ch
  403bdb:	sub    DWORD PTR [ecx],ecx
  403bdd:	js     0x403b9e
  403bdf:	fwait
  403be0:	push   edx
  403be1:	pop    ebx
  403be2:	loope  0x403bdd
  403be4:	jmp    0x8354c170
  403be9:	inc    ecx
  403bea:	mov    bl,dl
  403bec:	jbe    0x403c2d
  403bee:	test   al,al
  403bf0:	shl    esi,1
  403bf2:	xor    al,0xb3
  403bf4:	hlt    
  403bf5:	add    esi,DWORD PTR [ecx+0x3d850f75]
  403bfb:	sti    
  403bfc:	icebp  
  403bfd:	je     0x403b9a
  403bff:	push   esp
  403c00:	sub    ebx,DWORD PTR [esi]
  403c02:	jg     0x403bcd
  403c04:	xor    al,0x33
  403c06:	mov    bl,0x1a
  403c08:	arpl   WORD PTR [ebp-0x1172c9ab],si
  403c0e:	add    dl,BYTE PTR [ecx+0x53]
  403c11:	inc    edx
  403c12:	xchg   ecx,eax
  403c13:	sti    
  403c14:	rcr    BYTE PTR ds:0x352229c8,cl
  403c1a:	scas   al,BYTE PTR es:[edi]
  403c1b:	mov    ebp,0x8eb6a6e9
  403c20:	iret   
  403c21:	pop    edx
  403c22:	jle    0x403c9e
  403c24:	hlt    
  403c25:	or     eax,0x90f00378
  403c2a:	pop    edx
  403c2b:	mov    ecx,0x493993ac
  403c30:	cmp    eax,0xfe9a717f
  403c35:	jbe    0x403c98
  403c37:	test   eax,0x19a2b074
  403c3c:	js     0x403ca5
  403c3e:	dec    esi
  403c3f:	scas   eax,DWORD PTR es:[edi]
  403c40:	repnz inc esi
  403c42:	push   0xfffffff2
  403c44:	aam    0x88
  403c46:	push   ax
  403c48:	inc    esi
  403c49:	clc    
  403c4a:	sub    DWORD PTR [ebx],edi
  403c4c:	nop
  403c4d:	adc    eax,0x426853e5
  403c52:	jg     0x403bec
  403c54:	sbb    esp,DWORD PTR [ebp+0x5a]
  403c57:	mov    esp,DWORD PTR [ecx+0x11]
  403c5a:	jno    0x403cd8
  403c5c:	dec    BYTE PTR [ebx]
  403c5e:	mov    dl,0xc0
  403c60:	ror    BYTE PTR [eax-0x2999f4bf],cl
  403c66:	repnz in eax,dx
  403c68:	mov    edx,0x99d911df
  403c6d:	push   esp
  403c6e:	aas    
  403c6f:	sbb    BYTE PTR [edx+0xd],bh
  403c72:	ret    0xe82e
  403c75:	and    BYTE PTR [esi-0x1f],0x78
  403c79:	jae    0x403cca
  403c7b:	sbb    eax,edi
  403c7d:	les    esp,FWORD PTR [edx+edi*2]
  403c80:	or     BYTE PTR [ecx+0x15],dh
  403c83:	lock gs out dx,al
  403c86:	cli    
  403c87:	aas    
  403c88:	loope  0x403c2f
  403c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c8b:	and    dh,dh
  403c8d:	ficomp DWORD PTR [edx-0x6a2150a0]
  403c93:	adc    cl,bh
  403c95:	fadd   DWORD PTR [ebp-0x1aaf10e3]
  403c9b:	add    edi,esi
  403c9d:	jb     0x403cf8
  403c9f:	push   esi
  403ca0:	imul   edx,DWORD PTR [edi],0x5038b4a4
  403ca6:	shr    DWORD PTR [ecx-0x2acab324],cl
  403cac:	int    0xf6
  403cae:	popf   
  403caf:	add    al,0x97
  403cb1:	fidivr DWORD PTR [eax]
  403cb3:	outs   dx,DWORD PTR ds:[esi]
  403cb4:	in     eax,0x33
  403cb6:	rcl    DWORD PTR [ebx+0x66],0xd6
  403cba:	(bad)  
  403cbb:	imul   BYTE PTR [ebx+0x5a3f8ffe]
  403cc1:	bound  ebp,QWORD PTR [ebp-0x27]
  403cc4:	add    esp,DWORD PTR [ebx]
  403cc6:	jp     0x403d46
  403cc8:	pushf  
  403cc9:	xchg   BYTE PTR [eax],ah
  403ccb:	out    0xee,eax
  403ccd:	gs loope 0x403ce2
  403cd0:	inc    esi
  403cd1:	xlat   BYTE PTR ds:[ebx]
  403cd2:	pop    DWORD PTR [ecx]
  403cd4:	mov    esp,0x238b7200
  403cd9:	shl    ebx,1
  403cdb:	loope  0x403d5b
  403cdd:	mov    DWORD PTR [esi+0x7480ace1],0xb16d5181
  403ce7:	push   esp
  403ce8:	(bad)  
  403ce9:	cmp    dl,bl
  403ceb:	mov    eax,ds:0x8521a54f
  403cf0:	mov    esp,0x2882776a
  403cf5:	jo     0x403cc1
  403cf7:	test   BYTE PTR [esi+0x1],dl
  403cfa:	inc    esi
  403cfb:	pop    DWORD PTR [edx+0x17]
  403cfe:	add    ch,ah
  403d00:	push   esi
  403d01:	xchg   ebp,eax
  403d02:	jns    0x403cbc
  403d04:	call   0xa299:0x87f43ecf
  403d0b:	push   ebp
  403d0c:	push   ss
  403d0d:	(bad)  
  403d0e:	cld    
  403d0f:	push   eax
  403d10:	aas    
  403d11:	push   0x2a58046e
  403d16:	sub    dh,al
  403d18:	xchg   esi,eax
  403d19:	jae    0x403d60
  403d1b:	and    DWORD PTR [edx-0x42],edx
  403d1e:	lods   al,BYTE PTR ds:[esi]
  403d1f:	xchg   ecx,eax
  403d20:	js     0x403cdf
  403d22:	sar    BYTE PTR [esi+0x5d84f54c],0x5e
  403d29:	dec    edi
  403d2a:	adc    al,0x77
  403d2c:	push   esi
  403d2d:	pop    esi
  403d2e:	jbe    0x403d7d
  403d30:	jne    0x403d7e
  403d32:	nop
  403d33:	and    eax,0xab204f2c
  403d38:	(bad)  
  403d3a:	out    0xe0,eax
  403d3c:	mov    esp,0x6581bc59
  403d41:	pop    ds
  403d42:	loop   0x403d57
  403d44:	add    al,0x8c
  403d46:	dec    ebp
  403d47:	fwait
  403d48:	pop    ecx
  403d49:	shr    DWORD PTR [eax-0x16],cl
  403d4c:	add    al,0xf4
  403d4e:	cmp    DWORD PTR [esi],edi
  403d50:	jp     0x403ce8
  403d52:	add    eax,0xc3bcbfe6
  403d57:	imul   edx,DWORD PTR [eax+0x5bac3e18],0x1f
  403d5e:	mov    dh,0x96
  403d60:	inc    esi
  403d61:	cmp    eax,0x7749f030
  403d66:	jp     0x403d36
  403d68:	imul   ebp,ebx,0xfffffffb
  403d6b:	cmp    ebp,DWORD PTR ds:0x258d2457
  403d71:	fisttp DWORD PTR [edi-0x80]
  403d74:	icebp  
  403d75:	lahf   
  403d76:	retf   
  403d77:	add    DWORD PTR [ecx],esi
  403d79:	inc    eax
  403d7a:	add    BYTE PTR [edx-0x7],dl
  403d7d:	ss xchg esi,eax
  403d7f:	jo     0x403ddc
  403d81:	ficomp DWORD PTR [eax]
  403d83:	scas   eax,DWORD PTR es:[edi]
  403d84:	or     al,0x98
  403d86:	push   ecx
  403d87:	cmp    BYTE PTR [ebx],bl
  403d89:	push   ebx
  403d8a:	inc    esp
  403d8b:	shl    dh,1
  403d8d:	in     al,0x6b
  403d8f:	xor    esi,esi
  403d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d92:	push   ebp
  403d93:	sub    ecx,edx
  403d95:	xchg   DWORD PTR [edx],edx
  403d97:	in     eax,0xfa
  403d99:	mov    edx,0x2c395a48
  403d9e:	jo     0x403dcb
  403da0:	inc    edi
  403da1:	or     BYTE PTR [edx],dh
  403da3:	and    DWORD PTR [edx-0x25232fc5],edx
  403da9:	cld    
  403daa:	jb     0x403e1e
  403dac:	scas   eax,DWORD PTR es:[edi]
  403dad:	lahf   
  403dae:	sbb    al,0x2a
  403db0:	jmp    0xa69c:0xfe325879
  403db7:	push   ebx
  403db8:	das    
  403db9:	loope  0x403d92
  403dbb:	lds    ecx,FWORD PTR [ecx]
  403dbd:	aas    
  403dbe:	mov    bh,0x6a
  403dc0:	retf   0xb396
  403dc3:	pop    esp
  403dc4:	cmp    BYTE PTR [ebx],bl
  403dc6:	aaa    
  403dc7:	and    DWORD PTR [edx-0x66],ebp
  403dca:	push   ebp
  403dcb:	(bad)  
  403dcc:	(bad)  
  403dcd:	jge    0x403d9d
  403dcf:	sub    al,0xab
  403dd1:	xchg   DWORD PTR [esi+0x3f],edi
  403dd4:	mov    ch,0xa7
  403dd6:	jo     0x403e0f
  403dd8:	(bad)  
  403dd9:	lahf   
  403dda:	sbb    al,0xb1
  403ddc:	jp     0x403dd6
  403dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ddf:	xchg   ebx,eax
  403de0:	sub    dl,BYTE PTR [eax-0x7d510d32]
  403de6:	sbb    ah,BYTE PTR [esi+0x14]
  403de9:	jo     0x403dc7
  403deb:	dec    ecx
  403dec:	fld    DWORD PTR [esi-0x477c78b1]
  403df2:	popa   
  403df3:	and    DWORD PTR [ecx+0x1c504322],esi
  403df9:	jns    0x403e2a
  403dfb:	and    DWORD PTR [edx],eax
  403dfd:	adc    eax,0x66ad81fd
  403e02:	adc    al,0xab
  403e04:	push   0xffffffc1
  403e06:	pop    edi
  403e07:	clc    
  403e08:	cmp    eax,0x43c1cdd
  403e0d:	loop   0x403e28
  403e0f:	test   BYTE PTR [edx-0x15],dl
  403e12:	xchg   ecx,eax
  403e13:	fsubr  DWORD PTR [edi+0x3e87a507]
  403e19:	hlt    
  403e1a:	sar    DWORD PTR [eax-0x619e5233],0x86
  403e21:	dec    eax
  403e22:	pop    ss
  403e23:	fucomi st,st(3)
  403e25:	pop    ds
  403e26:	(bad)  
  403e27:	dec    esp
  403e28:	sub    eax,0x8ac8896c
  403e2d:	sbb    ecx,esi
  403e2f:	sub    edi,ebx
  403e31:	cld    
  403e32:	xor    al,0x98
  403e34:	aaa    
  403e35:	arpl   di,dx
  403e37:	jle    0x403e2d
  403e39:	mov    cl,0xa8
  403e3b:	pop    ss
  403e3c:	rcl    BYTE PTR [ecx-0x17],0x73
  403e40:	call   0xec912d75
  403e45:	repnz xchg edx,eax
  403e47:	mov    al,ds:0x805206e7
  403e4c:	test   BYTE PTR [eax+0x53],bh
  403e4f:	pop    ss
  403e50:	frstor [edx]
  403e52:	push   cs
  403e53:	pop    esp
  403e54:	sbb    al,ch
  403e56:	dec    eax
  403e57:	addr16 xor dh,cl
  403e5a:	imul   edi,ebx,0x7c8acc46
  403e60:	cmc    
  403e61:	fwait
  403e62:	enter  0x6657,0xb8
  403e66:	imul   DWORD PTR ds:0xe05a170a
  403e6c:	fstp   QWORD PTR [ecx]
  403e6e:	(bad)  
  403e6f:	mov    ecx,0x247d078c
  403e74:	inc    esi
  403e75:	mov    DWORD PTR [edx],ebp
  403e77:	daa    
  403e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e79:	mov    bh,0xb0
  403e7b:	jne    0x403e0c
  403e7d:	ja     0x403ecd
  403e7f:	mov    ebx,0xa3c9b723
  403e84:	and    eax,0x81092332
  403e89:	mov    ds:0xb9bbcae3,al
  403e8e:	jl     0x403eb9
  403e90:	xchg   DWORD PTR [ecx-0x5781594c],edx
  403e96:	mov    al,ds:0xce495627
  403e9b:	xchg   ecx,eax
  403e9c:	inc    esp
  403e9d:	aaa    
  403e9e:	mov    ds:0xa20d5405,eax
  403ea4:	sub    DWORD PTR [ebx+0x2088451f],ebp
  403eaa:	les    ebp,FWORD PTR [ecx-0x76]
  403ead:	popa   
  403eae:	jbe    0x403f15
  403eb0:	dec    ebp
  403eb1:	bound  edi,QWORD PTR [ebx+0x64]
  403eb4:	xor    BYTE PTR [ebp+0x78c238e8],0xae
  403ebb:	ins    DWORD PTR es:[edi],dx
  403ebc:	int    0x67
  403ebe:	mov    ah,0xee
  403ec0:	loop   0x403e99
  403ec2:	fdiv   QWORD PTR [eax-0x3]
  403ec5:	sub    eax,0xacbf83fd
  403eca:	and    bh,ch
  403ecc:	mov    ds:0xd96a1a38,al
  403ed1:	xchg   ebp,eax
  403ed2:	rcr    BYTE PTR [eax+ebp*2-0x11],cl
  403ed6:	test   eax,0x8885c66c
  403edb:	imul   ebx,DWORD PTR [esi+0x27b83275],0x32090f8b
  403ee5:	inc    esp
  403ee6:	mov    edi,0x51281692
  403eeb:	xlat   BYTE PTR ds:[ebx]
  403eec:	mov    ds:0x72411572,al
  403ef1:	add    al,0x23
  403ef3:	jbe    0x403f3d
  403ef5:	in     al,dx
  403ef6:	cs or  eax,0x79775270
  403efc:	mov    ch,0x84
  403efe:	cli    
  403eff:	ja     0x403ece
  403f01:	loop   0x403f6a
  403f03:	in     al,0x3e
  403f05:	and    edx,esp
  403f07:	xor    dh,BYTE PTR [ebp-0x45]
  403f0a:	jns    0x403f74
  403f0c:	ja     0x403ec0
  403f0e:	or     al,0xb1
  403f10:	mov    ss,WORD PTR [esi+0x6d]
  403f13:	fadd   st(7),st
  403f15:	and    al,0x98
  403f17:	aad    0xc1
  403f19:	inc    DWORD PTR [ecx]
  403f1b:	out    dx,al
  403f1c:	repz jno 0x403efa
  403f1f:	or     eax,0x842ab770
  403f24:	adc    DWORD PTR [ebp+ecx*2+0x6c],ebx
  403f28:	aam    0xe1
  403f2a:	dec    eax
  403f2b:	xchg   ecx,eax
  403f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2d:	std    
  403f2e:	ret    0x7e7b
  403f31:	xchg   esi,eax
  403f32:	fmul   st(2),st
  403f35:	and    ecx,DWORD PTR [edx-0x7a]
  403f38:	inc    ecx
  403f39:	mov    dh,0xd7
  403f3b:	jb     0x403ef7
  403f3d:	fidiv  DWORD PTR [edx+0x5bd40e6b]
  403f43:	inc    esi
  403f44:	or     BYTE PTR [esi-0x21],bl
  403f47:	ds push 0xe7ff565d
  403f4d:	ffree  st(4)
  403f4f:	jg     0x403f5f
  403f51:	jno    0x403f13
  403f53:	les    eax,FWORD PTR [ebx]
  403f55:	push   es
  403f56:	fdivr  QWORD PTR [edx]
  403f58:	and    BYTE PTR [ecx+0x63],0xab
  403f5c:	sahf   
  403f5d:	out    dx,eax
  403f5e:	jl     0x403f56
  403f60:	ret    0x21b2
  403f63:	adc    DWORD PTR [edi+0x16339196],edi
  403f69:	cmp    eax,0x40289078
  403f6e:	js     0x403f65
  403f70:	or     ebp,0x2
  403f73:	jg     0x403f92
  403f75:	push   esi
  403f76:	xchg   esi,eax
  403f77:	adc    al,0xea
  403f79:	xchg   ebx,eax
  403f7a:	dec    ecx
  403f7b:	cmp    BYTE PTR [eax+0x6],0x18
  403f7f:	xor    eax,0xba6ba843
  403f85:	jmp    0x722b:0x394119e0
  403f8c:	mov    ebx,0x7d6fd82e
  403f91:	push   ebx
  403f92:	ins    DWORD PTR es:[edi],dx
  403f93:	pop    ss
  403f94:	bound  ecx,QWORD PTR [ecx]
  403f96:	add    al,0xd3
  403f98:	sbb    al,0xf2
  403f9a:	jne    0x403f66
  403f9c:	or     DWORD PTR [eax-0x1f825f19],edx
  403fa2:	push   di
  403fa4:	xchg   esp,eax
  403fa5:	sti    
  403fa6:	add    ebx,esp
  403fa8:	(bad)  
  403fa9:	pop    ebx
  403faa:	mov    al,0xec
  403fac:	cmp    eax,0xa5855487
  403fb1:	loop   0x403ff2
  403fb3:	and    eax,0xd9275b21
  403fb8:	push   ss
  403fb9:	jns    0x403f90
  403fbb:	fstp   QWORD PTR ds:0xeff73a12
  403fc1:	sahf   
  403fc2:	ss inc edx
  403fc4:	jnp    0x403f8e
  403fc6:	rcr    DWORD PTR [ebx+0x516cfc21],1
  403fcc:	pop    edi
  403fcd:	lds    eax,FWORD PTR [ecx-0xd]
  403fd0:	call   0x87847a2b
  403fd5:	mov    ebp,0x82ca3ba6
  403fda:	shl    DWORD PTR [esi+eiz*1],cl
  403fdd:	fiadd  DWORD PTR [ebp-0x354c78ce]
  403fe3:	test   DWORD PTR [ecx-0x28],esp
  403fe6:	pop    es
  403fe7:	adc    bl,ah
  403fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fea:	or     ch,al
  403fec:	or     edx,eax
  403fee:	loope  0x403ffa
  403ff0:	mov    edx,0x9a325bd7
  403ff5:	lods   eax,DWORD PTR ds:[esi]
  403ff6:	mov    edi,0xe4d31ecc
  403ffb:	stc    
  403ffc:	fcmovnbe st,st(6)
  403ffe:	dec    DWORD PTR [edx+edi*8+0x78]
  404002:	jle    0x40403e
  404004:	lods   eax,DWORD PTR ds:[esi]
  404005:	xchg   ebp,eax
  404006:	sahf   
  404007:	jle    0x40400b
  404009:	enter  0x13e8,0xe6
  40400d:	and    eax,0x7a07945
  404012:	inc    esi
  404013:	rcl    DWORD PTR [esi],cl
  404015:	jo     0x404040
  404017:	jb     0x404016
  404019:	sbb    cl,dl
  40401b:	adc    edx,DWORD PTR [esi]
  40401d:	sub    ecx,ecx
  40401f:	xchg   BYTE PTR [ebx],dh
  404021:	fcmovnu st,st(7)
  404023:	loopne 0x403fa8
  404025:	fmul   QWORD PTR ds:0x63820baf
  40402b:	retf   
  40402c:	adc    ecx,esi
  40402e:	cdq    
  40402f:	das    
  404030:	fdivr  st(2),st
  404032:	mov    ah,0x71
  404034:	aam    0x26
  404036:	(bad)  
  404037:	pop    ebx
  404038:	fcmove st,st(0)
  40403a:	nop
  40403b:	sub    al,0xf7
  40403d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403e:	inc    ecx
  40403f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404040:	push   ebp
  404041:	pop    ss
  404042:	inc    edx
  404043:	sub    eax,ecx
  404045:	test   al,0x17
  404047:	xchg   ecx,eax
  404048:	lds    edi,FWORD PTR [ebx-0x40]
  40404b:	dec    ecx
  40404c:	pusha  
  40404d:	xor    ecx,edi
  40404f:	rol    BYTE PTR [edx-0x500d0d5e],cl
  404055:	push   ss
  404056:	cmc    
  404057:	ret    0xb4c7
  40405a:	and    esp,ebp
  40405c:	push   eax
  40405d:	lock xchg edx,eax
  40405f:	mov    cl,0x18
  404061:	fwait
  404062:	jo     0x404040
  404064:	push   eax
  404065:	std    
  404066:	dec    edx
  404067:	mov    bh,BYTE PTR [esi]
  404069:	ss push ebx
  40406b:	sub    BYTE PTR [edx],dl
  40406d:	(bad)  
  40406e:	(bad)  
  40406f:	cld    
  404070:	loopne 0x404030
  404072:	jb     0x4040b8
  404074:	mov    bl,0xbf
  404076:	sub    al,0x1c
  404078:	sbb    al,0xbb
  40407a:	mov    eax,0x514a201
  40407f:	cmp    dh,BYTE PTR [edi]
  404081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404082:	xchg   esp,eax
  404083:	hlt    
  404084:	inc    edx
  404085:	dec    DWORD PTR [eax+0x41ec499]
  40408b:	xchg   DWORD PTR [eax+edi*1+0x1aa66cd9],eax
  404092:	pop    es
  404093:	rcl    BYTE PTR [edi],1
  404095:	rol    DWORD PTR [ecx-0x44f3cb4c],1
  40409b:	ins    DWORD PTR es:[edi],dx
  40409c:	push   ebp
  40409d:	gs fdecstp 
  4040a0:	sbb    DWORD PTR [ebx-0x7b],esi
  4040a3:	loop   0x404086
  4040a5:	dec    ebx
  4040a6:	jl     0x4040d7
  4040a8:	dec    edx
  4040a9:	or     ch,al
  4040ab:	or     ch,BYTE PTR [ebp+0x10907930]
  4040b1:	test   DWORD PTR ss:[eax+0xc76cdb4],esp
  4040b8:	fwait
  4040b9:	xchg   edx,eax
  4040ba:	push   ebp
  4040bb:	ret    
  4040bc:	inc    ebx
  4040bd:	lahf   
  4040be:	mov    bl,0x88
  4040c0:	push   0x8e66d7c7
  4040c5:	stos   DWORD PTR es:[edi],eax
  4040c6:	mov    al,0xa6
  4040c8:	mul    BYTE PTR [ebx+0x2a538af0]
  4040ce:	and    edi,ebx
  4040d0:	popf   
  4040d1:	cmp    al,ch
  4040d3:	sar    DWORD PTR [ebp+0x779c7939],1
  4040d9:	leave  
  4040da:	mov    bl,0x55
  4040dc:	out    dx,al
  4040dd:	imul   edx,DWORD PTR [eax],0xffffffff
  4040e0:	rcl    DWORD PTR [edx+0x3f7b446f],cl
  4040e6:	ds popf 
  4040e8:	test   al,0xb8
  4040ea:	push   ds
  4040eb:	push   ebp
  4040ec:	dec    eax
  4040ed:	and    al,0x47
  4040ef:	xor    ebp,DWORD PTR [ecx-0x38]
  4040f2:	in     eax,0xb0
  4040f4:	pop    ebp
  4040f5:	dec    eax
  4040f6:	fcom   DWORD PTR [eax+0x31]
  4040f9:	dec    edx
  4040fa:	leave  
  4040fb:	mov    ebx,0x4b6128a1
  404100:	adc    al,0x2c
  404102:	shl    edi,0x99
  404105:	lahf   
  404106:	jecxz  0x40412a
  404108:	jmp    0x4040e6
  40410a:	or     ebp,edi
  40410c:	jmp    0x8fd6:0x2d5f9eb3
  404113:	push   esp
  404114:	lods   al,BYTE PTR ds:[esi]
  404115:	jae    0x404121
  404117:	nop
  404118:	push   0xaf1890a
  40411d:	es mov bh,0x56
  404120:	(bad)  
  404121:	mov    WORD PTR [ebp+0x74],?
  404124:	push   es
  404125:	dec    edx
  404126:	push   ds
  404127:	nop
  404128:	ds ret 
  40412a:	xchg   esi,eax
  40412b:	mov    DWORD PTR [ebx-0xefba914],edx
  404131:	jmp    0xbaf31e91
  404136:	lahf   
  404137:	dec    eax
  404138:	leave  
  404139:	retf   
  40413a:	add    DWORD PTR ds:0x3fb168fc,esi
  404140:	dec    ebp
  404141:	nop
  404142:	out    dx,eax
  404143:	fbstp  TBYTE PTR [ebx-0x27]
  404146:	cld    
  404147:	lea    ebp,[edx]
  404149:	cmp    BYTE PTR [ecx+0x42],dl
  40414c:	cmp    ch,BYTE PTR [edx]
  40414e:	inc    edx
  40414f:	adc    ch,BYTE PTR [esi-0x46]
  404152:	mov    ch,0xf9
  404154:	or     ebx,DWORD PTR [ecx-0x71765658]
  40415a:	inc    ebp
  40415b:	push   cs
  40415c:	mov    ebp,0x4847662
  404161:	dec    ebp
  404162:	add    edi,DWORD PTR [edi+0x25f8f9f0]
  404168:	mov    eax,0xdf2ec5bd
  40416d:	call   0x7f5c:0xd2bc76c5
  404174:	dec    ecx
  404175:	and    al,0xb5
  404177:	inc    esp
  404178:	ror    BYTE PTR [eax-0x5317a980],1
  40417e:	inc    edi
  40417f:	or     edi,DWORD PTR [esi-0x5e]
  404182:	dec    ecx
  404183:	mov    edx,0xce6680f4
  404188:	dec    esi
  404189:	add    eax,0x58141f8
  40418e:	sbb    DWORD PTR [edx-0x2a],0x8122ac61
  404195:	push   edi
  404196:	test   DWORD PTR [edi+0x27],edx
  404199:	mov    ebp,0x9108fd6b
  40419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419f:	jbe    0x4041d2
  4041a1:	and    esi,eax
  4041a3:	pop    edi
  4041a4:	xchg   DWORD PTR [edi-0x6a2cf95b],edx
  4041aa:	ja     0x40414d
  4041ac:	iret   
  4041ad:	push   ds
  4041ae:	dec    ebx
  4041af:	loop   0x4041b0
  4041b1:	daa    
  4041b2:	hlt    
  4041b3:	lea    eax,[edx-0x1f]
  4041b6:	sar    BYTE PTR [edi-0x37],1
  4041b9:	or     dh,ah
  4041bb:	in     al,dx
  4041bc:	pop    esp
  4041bd:	outs   dx,BYTE PTR ds:[esi]
  4041be:	pop    edx
  4041bf:	jb     0x404141
  4041c1:	inc    eax
  4041c2:	loope  0x4041f0
  4041c4:	lods   eax,DWORD PTR ds:[esi]
  4041c5:	cwde   
  4041c6:	mov    edx,0x8a9e5756
  4041cb:	addr16 daa 
  4041cd:	imul   edi,DWORD PTR [edx-0x5cb3324b],0xffffffcc
  4041d4:	out    dx,al
  4041d5:	mov    ds:0x33c208a0,al
  4041da:	loopne 0x4041f5
  4041dc:	mov    BYTE PTR [edx-0x68],al
  4041df:	mov    ebx,0x46eaba41
  4041e4:	shr    BYTE PTR ds:0xc964afd,1
  4041ea:	(bad)  
  4041eb:	in     al,dx
  4041ec:	jb     0x4041e8
  4041ee:	out    dx,al
  4041ef:	dec    edi
  4041f0:	je     0x4041b8
  4041f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f3:	mov    esi,0x9cd13c02
  4041f8:	addr16 pop esi
  4041fa:	mov    edx,0xcdd865e4
  4041ff:	fidivr DWORD PTR [ebp+ebx*8-0x2b]
  404203:	lds    edx,FWORD PTR [ecx+edx*8]
  404206:	cwde   
  404207:	cmp    DWORD PTR [ebx-0x74],eax
  40420a:	fst    DWORD PTR [esi]
  40420c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420d:	jbe    0x4041bd
  40420f:	xchg   edi,eax
  404210:	fisubr WORD PTR [ebx]
  404212:	pop    ebx
  404213:	aad    0xea
  404215:	aam    0x2c
  404217:	ins    DWORD PTR es:[edi],dx
  404218:	jno    0x4041e3
  40421a:	dec    esi
  40421b:	mov    al,0x52
  40421d:	pop    ebp
  40421e:	sbb    DWORD PTR [esi+0x4921cc9f],ebx
  404224:	xor    eax,0x13428982
  404229:	push   edx
  40422a:	lock cdq 
  40422c:	mov    ah,0x0
  40422e:	les    edi,FWORD PTR [eax]
  404230:	sub    BYTE PTR [ecx+0x59baea64],ah
  404236:	popa   
  404237:	push   eax
  404238:	sub    BYTE PTR [edx-0x4b],0xfc
  40423c:	mov    bh,0x3c
  40423e:	push   ebx
  40423f:	test   edx,edx
  404241:	inc    edi
  404242:	xchg   edi,eax
  404243:	rcr    BYTE PTR [esi],cl
  404245:	xchg   ah,dl
  404247:	pushf  
  404248:	sti    
  404249:	and    edi,DWORD PTR [esp+ebp*2]
  40424c:	adc    bh,dh
  40424e:	stos   BYTE PTR es:[edi],al
  40424f:	jbe    0x404268
  404251:	retf   0x46ae
  404254:	and    eax,0x518de0
  404259:	jbe    0x40422e
  40425b:	or     DWORD PTR [ebx-0xac0ed6c],edi
  404261:	pop    es
  404262:	cwde   
  404263:	ud2    
  404265:	xchg   BYTE PTR [eax-0x58557eed],ah
  40426b:	cli    
  40426c:	adc    dh,ah
  40426e:	add    ebx,esp
  404270:	icebp  
  404271:	inc    eax
  404272:	sbb    esi,DWORD PTR [eax]
  404274:	out    0xfc,al
  404276:	lea    esi,[edx]
  404278:	push   ebp
  404279:	dec    edx
  40427a:	xchg   BYTE PTR [eax+0x2c],bl
  40427d:	ror    bh,cl
  40427f:	push   ds
  404280:	xchg   esi,eax
  404281:	and    DWORD PTR [ebp+0x16232090],ecx
  404287:	fwait
  404288:	mov    edx,0x2a5cb9c
  40428d:	adc    DWORD PTR [ebp-0x166f388e],esp
  404293:	lea    esp,ds:0xdbd62f81
  404299:	(bad)  
  40429a:	out    0x35,al
  40429c:	arpl   WORD PTR [ecx-0xc],bx
  40429f:	loop   0x4042e2
  4042a1:	ja     0x4042dd
  4042a3:	pop    es
  4042a4:	xchg   ebp,eax
  4042a5:	sar    BYTE PTR [eax],cl
  4042a7:	inc    esi
  4042a8:	out    0xa1,eax
  4042aa:	ds or  ebp,ecx
  4042ad:	or     dl,ch
  4042af:	adc    al,0x1c
  4042b1:	xor    al,0x81
  4042b3:	cmp    eax,0x1e1a74de
  4042b8:	(bad)  
  4042b9:	push   esi
  4042ba:	push   eax
  4042bb:	jl     0x40426a
  4042bd:	jne    0x404260
  4042bf:	in     al,dx
  4042c0:	sbb    al,0xe1
  4042c2:	or     BYTE PTR [edx-0x3d9dccbf],cl
  4042c8:	pop    es
  4042c9:	mov    ds:0x7c05fef5,eax
  4042ce:	fstp   TBYTE PTR [esi+edx*2+0x1df48b73]
  4042d5:	fwait
  4042d6:	aaa    
  4042d7:	push   edi
  4042d8:	arpl   WORD PTR [ebp+0x31a72be5],dx
  4042de:	inc    ebx
  4042df:	pop    es
  4042e0:	mov    ds:0xe0ea8099,eax
  4042e5:	mov    dh,cl
  4042e7:	ja     0x4042e3
  4042e9:	pushf  
  4042ea:	pop    ebx
  4042eb:	int    0x72
  4042ed:	push   edx
  4042ee:	stc    
  4042ef:	sub    DWORD PTR ds:0x5222b3bf,ebx
  4042f5:	dec    edx
  4042f6:	pop    es
  4042f7:	sbb    eax,0x834a5945
  4042fc:	popa   
  4042fd:	adc    BYTE PTR [edi+ecx*2],0xfd
  404301:	add    al,0xe0
  404303:	inc    esi
  404304:	push   ebp
  404305:	mov    ebp,0x626dfbed
  40430a:	pop    ecx
  40430b:	and    DWORD PTR [ebx],esi
  40430d:	push   edx
  40430e:	iret   
  40430f:	cmp    ecx,DWORD PTR [eax]
  404311:	stc    
  404312:	xor    BYTE PTR [edi+edx*2+0x6ed94d4a],dl
  404319:	mov    edx,0xca339e45
  40431e:	ds retf 
  404320:	add    BYTE PTR [ecx],dh
  404322:	push   es
  404323:	stos   DWORD PTR es:[edi],eax
  404324:	(bad)  
  404325:	ror    bh,1
  404327:	and    bh,al
  404329:	and    bh,cl
  40432b:	push   eax
  40432c:	cmp    edi,DWORD PTR [ebp+0x30]
  40432f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404330:	xchg   ecx,eax
  404331:	scas   al,BYTE PTR es:[edi]
  404332:	fs xchg cl,bl
  404335:	test   DWORD PTR [ecx-0xa],esi
  404338:	arpl   WORD PTR [ecx-0x544b070d],ax
  40433e:	jmp    0x404314
  404340:	push   eax
  404341:	or     BYTE PTR [edx],0x52
  404344:	(bad)  
  404345:	jmp    0x4042ce
  404347:	aad    0xd3
  404349:	ror    bl,cl
  40434b:	stos   BYTE PTR es:[edi],al
  40434c:	into   
  40434d:	imul   edx,DWORD PTR [edi-0x53ad8558],0xffffffcc
  404354:	popa   
  404355:	cmp    al,0xb3
  404357:	ret    
  404358:	int    0x5d
  40435a:	push   esp
  40435b:	adc    edx,DWORD PTR [ecx]
  40435d:	aad    0xb8
  40435f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404361:	sub    ch,BYTE PTR [ebx+0x2c369c3]
  404367:	inc    esp
  404368:	dec    esp
  404369:	and    al,bl
  40436b:	pop    ebx
  40436c:	lods   eax,DWORD PTR ds:[esi]
  40436d:	std    
  40436e:	bound  ebp,QWORD PTR [ecx]
  404370:	push   es
  404371:	mov    al,ds:0xd8160271
  404376:	or     eax,0x2163f883
  40437b:	xor    eax,0x803eefbe
  404380:	cmp    ebx,DWORD PTR [esi+edi*8]
  404383:	(bad)  
  404385:	sahf   
  404386:	push   ebx
  404387:	cmc    
  404388:	test   DWORD PTR [edi+0x19b68a2],ebp
  40438e:	add    eax,0x658b4470
  404393:	add    al,ch
  404395:	jp     0x404343
  404397:	xlat   BYTE PTR ds:[ebx]
  404398:	dec    edi
  404399:	pop    ds
  40439a:	shl    BYTE PTR [esp+eiz*8+0x60],0xa8
  40439f:	sub    DWORD PTR [ebx],esi
  4043a1:	les    esp,FWORD PTR ds:0xc36e4d39
  4043a7:	and    esp,DWORD PTR [ebx]
  4043a9:	fsubr  QWORD PTR [ebp+eax*2+0x7bcc2c72]
  4043b0:	sub    al,0x75
  4043b2:	lahf   
  4043b3:	in     eax,0x1f
  4043b5:	jecxz  0x4043a2
  4043b7:	and    edi,esp
  4043b9:	add    eax,0x1cc8d1a
  4043be:	scas   eax,DWORD PTR es:[edi]
  4043bf:	aas    
  4043c0:	or     eax,0x8dcca31d
  4043c5:	sar    BYTE PTR [eax+ebp*2],1
  4043c8:	les    ebp,FWORD PTR [eax]
  4043ca:	push   0x21a92943
  4043cf:	ja     0x4043b5
  4043d1:	dec    edi
  4043d2:	sub    ebp,DWORD PTR [esi+0x6b]
  4043d5:	lock call 0x21f2:0x94ee1b0
  4043dd:	dec    ebp
  4043de:	jmp    DWORD PTR [edx-0x21c78b00]
  4043e4:	mov    cs,eax
  4043e6:	stos   BYTE PTR es:[edi],al
  4043e7:	in     al,dx
  4043e8:	scas   al,BYTE PTR es:[edi]
  4043e9:	or     dh,ch
  4043eb:	out    dx,eax
  4043ec:	or     DWORD PTR cs:[edi],esi
  4043ef:	xchg   esi,eax
  4043f0:	pop    ds
  4043f1:	inc    edx
  4043f2:	ror    BYTE PTR [ecx+0x8],cl
  4043f5:	mov    bh,0xcc
  4043f7:	rcr    BYTE PTR [ebx+0x1b8b9550],1
  4043fd:	xchg   esp,eax
  4043fe:	mov    esi,0xd8182f5f
  404403:	div    DWORD PTR [edx+0x0]
  404406:	adc    DWORD PTR [edi+edi*4],esp
  404409:	stos   BYTE PTR es:[edi],al
  40440a:	inc    esi
  40440b:	mov    ds:0x40709ca9,al
  404410:	aaa    
  404411:	das    
  404412:	dec    ebx
  404413:	call   0xc8e3:0x8fa866ce
  40441a:	xor    DWORD PTR [ebx],edx
  40441c:	test   BYTE PTR [ebx-0x75],ah
  40441f:	sar    ebx,cl
  404421:	aam    0x5a
  404423:	(bad)  
  404425:	test   BYTE PTR [esi-0x2bbdc03c],ah
  40442b:	mov    edx,0xde42a568
  404430:	shr    bh,1
  404432:	dec    eax
  404433:	xor    eax,0x9c165675
  404438:	cmp    eax,0xbefa4367
  40443d:	sub    eax,0x227bee5c
  404442:	repnz int 0xac
  404445:	adc    BYTE PTR [ebx-0x6540123],dl
  40444b:	jns    0x40449b
  40444d:	cmp    DWORD PTR [esi-0x31c3b9b7],0x5317f703
  404457:	or     BYTE PTR [esi+0x73],ch
  40445a:	nop
  40445b:	ja     0x404464
  40445d:	icebp  
  40445e:	cld    
  40445f:	mov    dh,0x88
  404461:	mov    edx,0x2b0f4792
  404466:	and    al,0xe2
  404468:	mov    dh,0x25
  40446a:	sbb    ebx,eax
  40446c:	pop    ecx
  40446d:	out    dx,al
  40446e:	pop    ss
  40446f:	js     0x404443
  404471:	or     eax,0x93744af
  404476:	retf   
  404477:	inc    esp
  404478:	xlat   BYTE PTR ds:[ebx]
  404479:	(bad)  
  40447a:	xchg   ebp,eax
  40447b:	test   al,0xe4
  40447d:	pop    es
  40447e:	dec    ebx
  40447f:	mov    ecx,DWORD PTR [edi]
  404481:	es out 0xe3,eax
  404484:	mov    cl,BYTE PTR [edx-0x6b]
  404487:	xlat   BYTE PTR ds:[ebx]
  404488:	adc    BYTE PTR [ebx+ecx*2],cl
  40448b:	aam    0x19
  40448d:	cmp    BYTE PTR [edx+eax*8-0x50],dl
  404491:	aaa    
  404492:	jo     0x4044d8
  404494:	sub    eax,0x53501f69
  404499:	div    DWORD PTR [ecx+0x62]
  40449c:	(bad)  
  40449d:	cwde   
  40449e:	not    BYTE PTR [edi+ecx*1+0x6aaa50ef]
  4044a5:	inc    esp
  4044a6:	pop    es
  4044a7:	outs   dx,DWORD PTR ds:[esi]
  4044a8:	les    eax,FWORD PTR [ebp-0x5bda567c]
  4044ae:	and    DWORD PTR [edx-0x2b],eax
  4044b1:	sub    esp,DWORD PTR [edi+0x7ca1319c]
  4044b7:	mov    al,ds:0x8b5bd4f0
  4044bc:	add    cl,dh
  4044be:	adc    al,0xa1
  4044c0:	xor    al,0x8a
  4044c2:	xor    esp,DWORD PTR [ecx-0xd2bfdf5]
  4044c8:	pop    edi
  4044c9:	shl    DWORD PTR [ebx],cl
  4044cb:	out    dx,eax
  4044cc:	retf   0xca61
  4044cf:	sub    eax,0xf0550ec9
  4044d4:	adc    BYTE PTR [ebx+eax*4],0x9e
  4044d8:	mov    ds:0xf61846ff,al
  4044dd:	je     0x404526
  4044df:	pop    esp
  4044e0:	imul   ecx,DWORD PTR [ebx+0x4f],0xdedc64f3
  4044e7:	inc    esp
  4044e8:	loope  0x40454a
  4044ea:	jl     0x40446c
  4044ec:	arpl   WORD PTR [ebp+edx*1-0x293d7962],dx
  4044f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f4:	cmp    edx,DWORD PTR [ebp+0x1]
  4044f7:	(bad)  
  4044f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f9:	imul   ebx,DWORD PTR [ebx-0x6],0x8
  4044fd:	(bad)  
  4044fe:	jo     0x40452c
  404500:	pop    esi
  404501:	xchg   esp,eax
  404502:	mov    ds:0x34c3e70c,eax
  404507:	fucomp st(1)
  404509:	std    
  40450a:	and    DWORD PTR [edi+0xc8067c1],0x79
  404511:	sbb    ch,dh
  404513:	jp     0x4044d3
  404515:	pop    ecx
  404516:	mov    al,BYTE PTR [eax]
  404518:	fwait
  404519:	cmc    
  40451a:	jo     0x40449d
  40451c:	inc    esp
  40451d:	test   eax,0x90158f47
  404522:	in     al,0x39
  404524:	gs je  0x404537
  404527:	add    dl,BYTE PTR [ecx+eiz*4-0x3baaebe6]
  40452e:	leave  
  40452f:	mov    bl,0x87
  404531:	cmp    BYTE PTR [ecx+0x6765d77d],0xcd
  404538:	pop    ss
  404539:	shl    BYTE PTR [edx-0x47481147],0x24
  404540:	sbb    ecx,DWORD PTR [edi+ecx*1]
  404543:	in     al,dx
  404544:	cmp    ah,cl
  404546:	dec    ebp
  404547:	sub    BYTE PTR [ecx+esi*1-0x3a],cl
  40454b:	jmp    0x8737:0xcfecc14
  404552:	sbb    ah,BYTE PTR [ebp-0x5b754b50]
  404558:	dec    ecx
  404559:	in     eax,dx
  40455a:	sub    al,0x7b
  40455c:	sbb    DWORD PTR [esi-0x78],edi
  40455f:	cli    
  404560:	mov    BYTE PTR [edi],dl
  404562:	dec    esi
  404563:	loope  0x4044fb
  404565:	sbb    al,0xe
  404567:	xor    ecx,ebp
  404569:	sar    BYTE PTR [ebp+0x25],0x22
  40456d:	sbb    BYTE PTR [ecx-0x79819b0a],dh
  404573:	out    0xa4,eax
  404575:	cmp    BYTE PTR ds:0xcd58804a,bl
  40457b:	dec    edx
  40457c:	bound  esi,QWORD PTR [edi]
  40457e:	cmp    ecx,DWORD PTR [edx+0x62]
  404581:	(bad)
  404585:	dec    eax
  404586:	cld    
  404587:	inc    ebx
  404588:	xchg   edx,eax
  404589:	std    
  40458a:	outs   dx,DWORD PTR ds:[esi]
  40458b:	cmp    esp,DWORD PTR [eax-0x2c]
  40458e:	mov    dh,0x80
  404590:	out    0x4c,eax
  404592:	adc    ebp,DWORD PTR [edx-0x80]
  404595:	cmp    esp,DWORD PTR [ebx-0x34e798a8]
  40459b:	retf   0xd09e
  40459e:	nop
  40459f:	ret    
  4045a0:	jge    0x4045bd
  4045a2:	pushf  
  4045a3:	add    DWORD PTR [esi],edx
  4045a5:	jge    0x404552
  4045a7:	lea    ebp,[ecx]
  4045a9:	inc    ebp
  4045aa:	aam    0x32
  4045ac:	sub    al,BYTE PTR [ebx+eax*1-0x1a3ede78]
  4045b3:	fdivr  DWORD PTR ss:[edx]
  4045b6:	pop    bx
  4045b8:	imul   ebp,DWORD PTR es:[ebx-0x74e900b5],0xf70aee4d
  4045c3:	popf   
  4045c4:	dec    edx
  4045c5:	inc    eax
  4045c6:	lea    eax,ds:[edi+0x232a42bc]
  4045cd:	xchg   BYTE PTR [ebx],dh
  4045cf:	hlt    
  4045d0:	cmp    al,0x3
  4045d2:	pop    esi
  4045d3:	mov    bh,0x35
  4045d5:	mov    edi,0x4983ddbf
  4045da:	and    ch,ah
  4045dc:	mov    edx,0xd059e0e3
  4045e1:	fadd   QWORD PTR [eax+edx*4]
  4045e4:	fadd   DWORD PTR [esi]
  4045e6:	dec    ebx
  4045e7:	push   eax
  4045e8:	push   edx
  4045e9:	push   edx
  4045ea:	and    al,0x99
  4045ec:	or     edx,ecx
  4045ee:	jne    0x4045c7
  4045f0:	scas   al,BYTE PTR es:[edi]
  4045f1:	test   al,0xe6
  4045f3:	stos   BYTE PTR es:[edi],al
  4045f4:	jl     0x4045a1
  4045f6:	ror    BYTE PTR [edi],0xb1
  4045f9:	call   0x9c207077
  4045fe:	das    
  4045ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404600:	jo     0x40464d
  404602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404603:	aas    
  404604:	or     cl,BYTE PTR ds:0xedb1ccce
  40460a:	cmp    esp,DWORD PTR [ebx+0x32]
  40460d:	lds    ecx,FWORD PTR [ebx-0x1ef7b727]
  404613:	out    dx,eax
  404614:	lock xlat BYTE PTR ds:[ebx]
  404616:	leave  
  404617:	shl    DWORD PTR [ebx],0xd3
  40461a:	arpl   ax,bx
  40461c:	dec    edi
  40461d:	dec    ebx
  40461e:	inc    eax
  40461f:	test   ch,bl
  404621:	jb     0x40464b
  404623:	push   ecx
  404624:	inc    ebx
  404625:	adc    BYTE PTR [eax+0x2c0a6906],bl
  40462b:	mov    ebx,gs
  40462d:	mov    cs,WORD PTR [edx]
  40462f:	mov    DWORD PTR cs:[edx],esi
  404632:	imul   ebx
  404634:	dec    esp
  404635:	test   al,0xc0
  404637:	mov    es,WORD PTR [esi]
  404639:	sbb    eax,0x4b3c1441
  40463e:	fadd   DWORD PTR ds:0xc718d636
  404644:	nop    DWORD PTR [esp+ebx*4]
  404648:	pop    ecx
  404649:	xor    al,0x45
  40464b:	std    
  40464c:	cmp    BYTE PTR [edi-0x3e47d49e],ch
  404652:	pusha  
  404653:	sub    al,0x21
  404655:	inc    ecx
  404656:	jmp    0x4045f9
  404658:	loop   0x4046be
  40465a:	inc    ebp
  40465b:	leave  
  40465c:	pop    ebx
  40465d:	test   DWORD PTR [ebp+ebp*2+0x79],eax
  404661:	sub    BYTE PTR [ebx+0xe69e6ee],ch
  404667:	mov    ah,0x4
  404669:	pop    ds
  40466a:	sub    ecx,ebp
  40466c:	pop    eax
  40466d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466e:	or     al,0x60
  404670:	call   0x8bd18e5c
  404675:	push   ss
  404676:	dec    ebp
  404677:	retf   
  404678:	dec    edx
  404679:	xchg   edx,eax
  40467a:	imul   ebp,DWORD PTR [ebx+0x52],0xc36f123d
  404681:	daa    
  404682:	or     eax,0x7b310a43
  404687:	push   edx
  404688:	ins    BYTE PTR es:[edi],dx
  404689:	pop    ss
  40468a:	xlat   BYTE PTR ds:[ebx]
  40468b:	into   
  40468c:	out    dx,al
  40468d:	pop    ss
  40468e:	test   al,0x53
  404690:	inc    esi
  404691:	retf   
  404692:	les    esi,FWORD PTR [eax-0x223b3541]
  404698:	pop    esp
  404699:	test   al,0x6d
  40469b:	add    esp,edi
  40469d:	aas    
  40469e:	rol    BYTE PTR [edx-0xf478365],1
  4046a4:	out    dx,al
  4046a5:	into   
  4046a6:	out    dx,eax
  4046a7:	adc    al,0x9c
  4046a9:	call   0x500e7253
  4046ae:	jae    0x404661
  4046b0:	cs mov ebp,0x67a07fa7
  4046b6:	inc    esp
  4046b7:	fwait
  4046b8:	xor    dl,BYTE PTR [esi]
  4046ba:	cli    
  4046bb:	shl    bl,cl
  4046bd:	push   ecx
  4046be:	inc    esi
  4046bf:	jle    0x404706
  4046c1:	in     al,dx
  4046c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c3:	test   edx,0xd51d8637
  4046c9:	out    0xee,al
  4046cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046cc:	jbe    0x40468e
  4046ce:	ds mov edx,0x18fa8d86
  4046d4:	imul   edx,DWORD PTR [ecx+0x43],0xffffffc4
  4046d8:	daa    
  4046d9:	ins    BYTE PTR es:[edi],dx
  4046da:	cs (bad) 
  4046dc:	xor    eax,0x2b4d01a4
  4046e1:	std    
  4046e2:	cdq    
  4046e3:	cmp    bh,BYTE PTR [edi]
  4046e5:	push   ebx
  4046e6:	js     0x4046e6
  4046e8:	aad    0x21
  4046ea:	aam    0xe6
  4046ec:	jmp    0x4046f7
  4046ee:	pavgw  mm3,mm0
  4046f1:	or     al,0x7c
  4046f3:	mov    al,0x22
  4046f5:	adc    eax,0x77e83df4
  4046fa:	inc    eax
  4046fb:	stc    
  4046fc:	inc    edx
  4046fd:	sbb    BYTE PTR [edx-0x30],ah
  404700:	mov    ds:0xbbb612b3,eax
  404705:	pop    esp
  404706:	push   cs
  404707:	sbb    eax,0x460b67a9
  40470c:	ss fidiv WORD PTR cs:[edx+ecx*4]
  404711:	jns    0x4046f5
  404713:	jge    0x40470f
  404715:	dec    edi
  404716:	nop
  404717:	aaa    
  404718:	sbb    al,0x58
  40471a:	cli    
  40471b:	push   ss
  40471c:	xor    al,0xb1
  40471e:	push   ebp
  40471f:	jne    0x4046e8
  404721:	sahf   
  404722:	mov    BYTE PTR [ecx],0x8f
  404725:	and    DWORD PTR [ecx+0xfbd424d],0x5bc4012
  40472f:	or     al,0x63
  404731:	in     eax,dx
  404732:	xchg   DWORD PTR [ebp+edi*2-0x3f20b4f9],edi
  404739:	add    BYTE PTR [ecx-0x3a44e1a6],0xd2
  404740:	jecxz  0x40475f
  404742:	(bad)  [ecx+0x22c287b4]
  404748:	adc    DWORD PTR [ecx],ebp
  40474a:	adc    eax,0x2f04649b
  40474f:	mov    ebx,0xc9ff1077
  404754:	dec    esp
  404755:	fidivr WORD PTR [ecx-0x7f]
  404758:	pop    ebx
  404759:	shl    ah,cl
  40475b:	sahf   
  40475c:	addr16 sub dh,ah
  40475f:	out    0xc5,al
  404761:	and    dl,bl
  404763:	out    0xe9,eax
  404765:	inc    eax
  404766:	mov    edi,0x5ca14fbd
  40476b:	(bad)  
  40476c:	jnp    0x404766
  40476e:	cmp    eax,0x4742a4cb
  404773:	dec    edx
  404774:	fsub   QWORD PTR [eax]
  404776:	mov    al,ds:0x9a6734c4
  40477b:	dec    edx
  40477c:	inc    edi
  40477d:	push   ds
  40477e:	jmp    0xe78263e8
  404783:	and    ah,BYTE PTR [edx]
  404785:	sahf   
  404786:	out    dx,eax
  404787:	pop    ecx
  404788:	mov    ecx,0x9e4b70e2
  40478d:	sti    
  40478e:	(bad)  
  40478f:	xchg   ebp,eax
  404790:	add    dh,dl
  404792:	addr16 xchg esp,eax
  404794:	pop    edx
  404795:	enter  0xe9ae,0xbb
  404799:	cwde   
  40479a:	mov    al,0xa2
  40479c:	and    al,0xc8
  40479e:	push   cs
  40479f:	mov    dh,0x7d
  4047a1:	sub    al,0x3c
  4047a3:	dec    edx
  4047a4:	fild   WORD PTR [ecx]
  4047a6:	test   eax,0xdf4528b
  4047ab:	(bad)  
  4047ac:	outs   dx,BYTE PTR ds:[esi]
  4047ad:	cmp    eax,esp
  4047af:	(bad)  
  4047b0:	add    al,0xee
  4047b2:	(bad)  
  4047b3:	sbb    edi,DWORD PTR [esp+edx*4-0xb]
  4047b7:	mov    bh,0xf0
  4047b9:	leave  
  4047ba:	jmp    0x5a5b:0x89fd1989
  4047c1:	mov    al,ds:0x9d01c1d9
  4047c6:	jnp    0x404818
  4047c8:	imul   eax,ebp,0xd2a4c08e
  4047ce:	dec    ebx
  4047cf:	outs   dx,BYTE PTR ds:[esi]
  4047d0:	shl    DWORD PTR [esi],1
  4047d2:	cmp    eax,0x91193b35
  4047d7:	imul   edx,esi,0x17
  4047da:	out    dx,eax
  4047db:	jbe    0x4047fe
  4047dd:	add    al,0x2f
  4047df:	jmp    0xa7a0:0xd59cf8a3
  4047e6:	call   0xa173:0xad62a4a4
  4047ed:	cmp    ecx,edi
  4047ef:	xchg   ebp,eax
  4047f0:	push   ebx
  4047f1:	dec    ecx
  4047f2:	dec    edx
  4047f3:	xor    ah,BYTE PTR [esi]
  4047f5:	cmc    
  4047f6:	or     DWORD PTR [edi+0x284c5051],0xffffffc7
  4047fd:	xchg   esi,eax
  4047fe:	xchg   ebx,eax
  4047ff:	jmp    0x4047dd
  404801:	test   eax,0x390292d0
  404806:	lock jge 0x404855
  404809:	xchg   ebp,eax
  40480a:	or     BYTE PTR [edi*4-0x75230446],0xd4
  404812:	(bad)  
  404813:	sbb    ah,BYTE PTR [edi+0x7f]
  404816:	or     al,0x34
  404818:	mov    ds:0x98e4239e,al
  40481d:	xchg   esp,eax
  40481e:	dec    esp
  40481f:	fsub   QWORD PTR fs:[eax-0x22]
  404823:	dec    ebp
  404824:	and    eax,0x27a7d782
  404829:	or     eax,edx
  40482b:	in     eax,0x4f
  40482d:	loop   0x40480d
  40482f:	jl     0x4047ec
  404831:	inc    ebp
  404832:	scas   al,BYTE PTR es:[edi]
  404833:	div    BYTE PTR [ecx+eax*4+0x3da36157]
  40483a:	addr16 mov edi,0x923ec655
  404840:	ins    DWORD PTR es:[edi],dx
  404841:	add    BYTE PTR [ecx-0x11],dh
  404844:	adc    eax,DWORD PTR [edx+0x1f]
  404847:	xchg   ecx,eax
  404848:	mov    ah,0x5b
  40484a:	pop    ebx
  40484b:	out    0xd,eax
  40484d:	sub    ah,BYTE PTR [ecx-0x4d]
  404850:	shl    DWORD PTR [eax-0x3f],cl
  404853:	dec    esp
  404854:	xchg   esi,eax
  404855:	pop    ebp
  404856:	push   ss
  404857:	fimul  DWORD PTR [esi-0x14]
  40485a:	pop    es
  40485b:	(bad)  
  40485c:	jg     0x4048c9
  40485e:	xchg   edx,eax
  40485f:	cld    
  404860:	pop    esp
  404861:	sub    BYTE PTR [ecx-0x26],ch
  404864:	mov    ebx,0xfbf6f294
  404869:	jmp    FWORD PTR [ebp+0x585c1563]
  40486f:	xchg   BYTE PTR [eax-0x72d133a4],bl
  404875:	retf   0x5b5
  404878:	pop    ss
  404879:	ss adc eax,0xb1d48f7d
  40487f:	psubusw mm5,mm0
  404882:	adc    BYTE PTR [edi],ch
  404884:	sbb    eax,0x50731f40
  404889:	pop    edi
  40488a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488b:	jnp    0x4048f3
  40488d:	push   ebp
  40488e:	mov    dh,BYTE PTR [eax]
  404890:	sbb    cl,ah
  404892:	xor    bl,dh
  404894:	rol    ch,1
  404896:	jno    0x404841
  404898:	mov    edi,DWORD PTR [ebx+0x53]
  40489b:	jecxz  0x40483b
  40489d:	das    
  40489e:	(bad)  
  40489f:	xor    al,0x5b
  4048a1:	mov    ch,0x3f
  4048a3:	aas    
  4048a4:	push   ebx
  4048a5:	mov    bl,0xe
  4048a7:	jmp    0x404872
  4048a9:	test   BYTE PTR [edi+0x70],dl
  4048ac:	mov    esi,ecx
  4048ae:	mov    eax,ds:0x6372b10d
  4048b3:	dec    edx
  4048b4:	lds    eax,FWORD PTR [ebp-0x4a78400a]
  4048ba:	in     al,dx
  4048bb:	mov    DWORD PTR ds:0x2d5a7fd8,ebx
  4048c1:	inc    esp
  4048c2:	fisubr DWORD PTR [ebp+0x6fe75332]
  4048c8:	test   ah,0xcd
  4048cb:	(bad)  
  4048cc:	lods   al,BYTE PTR ds:[esi]
  4048cd:	xchg   bh,al
  4048cf:	popa   
  4048d0:	int3   
  4048d1:	inc    ebp
  4048d2:	mov    edi,0xb6c087a5
  4048d7:	into   
  4048d8:	repz cmp edi,DWORD PTR [edx]
  4048db:	and    ecx,DWORD PTR [eax]
  4048dd:	cld    
  4048de:	push   edx
  4048df:	call   0xba01f3c9
  4048e4:	pop    ebp
  4048e5:	push   edi
  4048e6:	mov    esp,0xff5836c9
  4048eb:	pop    es
  4048ec:	lods   al,BYTE PTR ds:[esi]
  4048ed:	lea    edx,[edi+0x2a]
  4048f0:	mov    ds:0x4364074b,al
  4048f5:	ja     0x4048cc
  4048f7:	adc    dh,cl
  4048f9:	in     eax,0xa4
  4048fb:	div    esp
  4048fd:	sub    eax,0xc1d050ab
  404902:	jmp    0x7e2f0784
  404907:	xchg   ebx,eax
  404908:	mov    BYTE PTR [ebx],al
  40490a:	in     eax,0xbc
  40490c:	(bad)  
  40490d:	adc    DWORD PTR [edx-0x462a32df],eax
  404913:	enter  0x2640,0x45
  404917:	cmc    
  404918:	pop    edx
  404919:	mov    dh,0x64
  40491b:	pop    ds
  40491c:	inc    eax
  40491d:	pop    ds
  40491e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491f:	pop    eax
  404920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404921:	jmp    0x8726eabc
  404926:	add    edx,DWORD PTR [ecx-0x76d4ab80]
  40492c:	mov    eax,ds:0xbf7d043a
  404931:	and    esp,esp
  404933:	popf   
  404934:	test   eax,0xd2b99935
  404939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493a:	cmp    al,0x73
  40493c:	cmp    al,0x61
  40493e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493f:	out    dx,al
  404940:	sub    al,0x80
  404943:	xchg   ecx,eax
  404944:	add    dl,dl
  404946:	adc    eax,ecx
  404948:	mov    al,0x10
  40494a:	test   al,0xdd
  40494c:	pushf  
  40494d:	ja     0x404983
  40494f:	imul   esp,DWORD PTR [eax-0x55],0xffffffb4
  404953:	mov    ds:0xb4d5e4e8,eax
  404958:	pop    ss
  404959:	mov    cl,0xff
  40495b:	mov    ds:0x8e0a422e,eax
  404960:	xor    DWORD PTR [edx+0xa],ecx
  404963:	rcr    esi,0x72
  404966:	mov    WORD PTR ds:0x6648b32f,ds
  40496c:	ss xor eax,0xa74c4301
  404972:	push   edx
  404973:	jecxz  0x404907
  404975:	or     esp,esp
  404977:	mov    DWORD PTR [ecx+0x2e7b1fd],edi
  40497d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497e:	mov    dh,0x8d
  404980:	mov    ebx,esi
  404982:	arpl   WORD PTR [edx-0x41],cx
  404985:	pop    ebp
  404986:	(bad)  
  404987:	(bad)  
  404989:	outs   dx,DWORD PTR ds:[esi]
  40498a:	loop   0x404916
  40498c:	mov    dl,BYTE PTR [esi+0x66]
  40498f:	or     DWORD PTR [esi-0x577bc808],edx
  404995:	inc    esp
  404996:	xchg   esi,eax
  404997:	int3   
  404998:	jmp    0x5967:0x367b5699
  40499f:	fbld   TBYTE PTR [edi+edi*8-0x10]
  4049a3:	push   0xb
  4049a5:	mov    dl,0x19
  4049a7:	mov    ecx,0x5f18173
  4049ac:	mov    al,ds:0xc6623249
  4049b1:	loop   0x404993
  4049b3:	rol    DWORD PTR [edx+0x675bd46a],1
  4049b9:	pop    ebp
  4049ba:	aad    0xf8
  4049bc:	xor    eax,0x20928ac4
  4049c1:	jo     0x404975
  4049c3:	(bad)  
  4049c4:	mov    DWORD PTR [ebp-0x20cfd55f],eax
  4049ca:	test   eax,0x84af7ab2
  4049cf:	bound  edi,QWORD PTR [eax+0x46d3e5b5]
  4049d5:	and    eax,0x81deab17
  4049da:	pop    esi
  4049db:	xor    eax,0x8e3dce41
  4049e0:	and    ecx,ecx
  4049e2:	add    DWORD PTR [eax+0x4e],0xffffffb0
  4049e6:	into   
  4049e7:	push   0xbb1a8c84
  4049ec:	add    BYTE PTR [ebx],bh
  4049ee:	outs   dx,DWORD PTR ds:[esi]
  4049ef:	rcl    ebp,cl
  4049f1:	iret   
  4049f2:	pop    ebx
  4049f3:	xchg   esp,eax
  4049f4:	xor    edx,ecx
  4049f6:	jp     0x404a1b
  4049f8:	mov    ah,0x76
  4049fa:	out    0xa2,al
  4049fc:	mov    dl,0xa5
  4049fe:	bound  edx,QWORD PTR [eax-0x597afebf]
  404a04:	cmp    cl,BYTE PTR [esi]
  404a06:	rcr    BYTE PTR [eax],1
  404a08:	retf   0x693a
  404a0b:	jmp    FWORD PTR [eax-0x58]
  404a0e:	xor    al,0x2b
  404a10:	cmp    BYTE PTR [ebx-0x76069a03],al
  404a16:	cdq    
  404a17:	pushf  
  404a18:	jb     0x4049f9
  404a1a:	neg    DWORD PTR [edi-0x719a0c1f]
  404a20:	jle    0x404a99
  404a22:	aaa    
  404a23:	push   cs
  404a24:	mov    cl,0x67
  404a26:	cmc    
  404a27:	dec    esi
  404a28:	and    esp,DWORD PTR [eax+0x70b5f783]
  404a2e:	sub    BYTE PTR [edi],ch
  404a30:	inc    ebx
  404a31:	add    DWORD PTR [esi],ecx
  404a33:	repz pop eax
  404a35:	popf   
  404a36:	xchg   edi,eax
  404a37:	cmp    al,0xf1
  404a39:	shl    DWORD PTR [eax],1
  404a3b:	sub    DWORD PTR [ebp+0x61a4e220],esi
  404a41:	sbb    eax,0x2bb99725
  404a46:	les    ebp,FWORD PTR [edx+0x62]
  404a49:	add    al,0x66
  404a4c:	fld    QWORD PTR [edi-0x70]
  404a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a50:	mov    bh,BYTE PTR [edi+0x77]
  404a53:	pop    edi
  404a54:	jmp    0x404a1f
  404a56:	push   eax
  404a57:	shl    DWORD PTR [esp+eiz*2+0x424177bb],0x13
  404a5f:	sbb    BYTE PTR [ebp-0x47],cl
  404a62:	add    al,0xbb
  404a64:	adc    ah,ah
  404a66:	(bad)  
  404a67:	call   0x4005657f
  404a6c:	stos   BYTE PTR es:[edi],al
  404a6d:	sbb    ecx,DWORD PTR [edi-0x303aacd2]
  404a73:	addr16 mov eax,ds:0xa4cb
  404a77:	(bad)  
  404a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a79:	xchg   edx,eax
  404a7a:	dec    ebp
  404a7b:	into   
  404a7c:	sti    
  404a7d:	mov    bh,0x1d
  404a7f:	outs   dx,BYTE PTR ds:[esi]
  404a80:	shl    DWORD PTR [esi+eiz*4-0xc],0x70
  404a85:	cmp    ebp,eax
  404a87:	add    bl,al
  404a89:	or     al,0x28
  404a8b:	jl     0x404aee
  404a8d:	sbb    al,0x35
  404a8f:	mov    ecx,0x4b732a85
  404a94:	repz xchg edx,eax
  404a96:	lods   eax,DWORD PTR ds:[esi]
  404a97:	or     BYTE PTR [ebp+ebx*2-0x22a0b4b6],ah
  404a9e:	shl    DWORD PTR [ecx],1
  404aa0:	xchg   DWORD PTR [ecx],ebx
  404aa2:	push   ss
  404aa3:	sbb    ah,BYTE PTR [ecx+0x32]
  404aa6:	jp     0x404aec
  404aa8:	xchg   ebp,eax
  404aa9:	aad    0x6a
  404aab:	inc    edi
  404aac:	inc    ebp
  404aad:	or     al,0x89
  404aaf:	sub    esi,DWORD PTR [ecx]
  404ab1:	call   0x46c68063
  404ab6:	mov    ecx,0xc31d8cbe
  404abb:	pop    ecx
  404abc:	rcl    DWORD PTR [ecx-0x7b],1
  404abf:	shl    ebx,1
  404ac1:	les    esi,FWORD PTR [ebx]
  404ac3:	pop    ecx
  404ac4:	in     al,dx
  404ac5:	loop   0x404ad7
  404ac7:	push   0x47
  404ac9:	cmc    
  404aca:	sar    DWORD PTR [ebp+ebp*1+0x61cbc494],1
  404ad1:	fsubrp st(4),st
  404ad3:	stc    
  404ad4:	or     bl,ch
  404ad6:	pop    esp
  404ad7:	cmp    edx,DWORD PTR ds:0x6340fdc9
  404add:	retf   0xe865
  404ae0:	lock fwait
  404ae2:	imul   edi,DWORD PTR [eax+0x26],0xb962de40
  404ae9:	cmp    BYTE PTR [ecx-0x7f],al
  404aec:	(bad)  
  404aed:	dec    edx
  404aee:	or     BYTE PTR [ebx-0x42d907c5],bl
  404af4:	cs pusha 
  404af6:	dec    ebp
  404af7:	aaa    
  404af8:	inc    edx
  404af9:	fs leave 
  404afb:	lea    esp,[ebp-0x1e7c0c6d]
  404b01:	aaa    
  404b02:	retf   0xfc20
  404b05:	inc    eax
  404b06:	in     al,dx
  404b07:	cdq    
  404b08:	out    0xc4,al
  404b0a:	in     eax,0xb4
  404b0c:	sub    BYTE PTR [edx],bl
  404b0e:	mov    eax,0xc534cd26
  404b13:	rcr    DWORD PTR [eax-0x72035a24],0x2e
  404b1a:	retf   
  404b1b:	add    eax,0x4710dace
  404b20:	mov    dh,0x55
  404b22:	sti    
  404b23:	mov    eax,0xbc9db128
  404b28:	jle    0x404ac4
  404b2a:	std    
  404b2b:	and    DWORD PTR [edi-0x33a05dc],esi
  404b31:	lds    eax,FWORD PTR [eax+ebp*8-0x43]
  404b35:	nop    ecx
  404b38:	add    eax,0x81c8e214
  404b3d:	rol    esp,0x59
  404b40:	adc    al,0x7a
  404b42:	arpl   WORD PTR [eax-0x62],dx
  404b45:	aad    0x85
  404b47:	and    dh,0x94
  404b4a:	ins    BYTE PTR es:[edi],dx
  404b4b:	jge    0x404b1d
  404b4d:	mov    dl,0x5a
  404b4f:	lock call 0x2a59fe0f
  404b55:	ds addr16 dec esp
  404b58:	retf   0xb686
  404b5b:	xor    DWORD PTR [ebx],edx
  404b5d:	loopne 0x404b2d
  404b5f:	pop    edi
  404b60:	jecxz  0x404b8f
  404b62:	inc    esp
  404b63:	dec    esi
  404b64:	pushf  
  404b65:	pop    edx
  404b66:	mov    cl,0x18
  404b68:	cli    
  404b69:	out    0xa2,al
  404b6b:	(bad)  
  404b6c:	(bad)  [eax+0x5b]
  404b6f:	pop    ebp
  404b70:	or     BYTE PTR [edi-0x62],bl
  404b73:	push   ss
  404b74:	adc    ebp,0x11292a04
  404b7a:	jmp    0xc7ebeac6
  404b7f:	cmovae edi,DWORD PTR [eax+0x57]
  404b83:	imul   esp,DWORD PTR [edi-0x7d],0xfffffff0
  404b87:	add    edx,0x2ebed34b
  404b8d:	cmp    BYTE PTR [esi],ch
  404b8f:	in     al,dx
  404b90:	dec    esp
  404b91:	mov    cl,0xd8
  404b93:	lea    esi,[esi]
  404b95:	mov    eax,0x36ff9717
  404b9a:	loopne 0x404bea
  404b9c:	inc    ecx
  404b9d:	mov    ds:0xabc6d64e,al
  404ba2:	sbb    edi,0xffffff82
  404ba5:	mov    ebx,0xd76d0ae
  404baa:	out    0xae,al
  404bac:	sbb    eax,ecx
  404bae:	sub    ebp,DWORD PTR [ecx+0x168018c9]
  404bb4:	psubd  mm5,QWORD PTR [ebx]
  404bb7:	xchg   edx,eax
  404bb8:	mov    eax,0xf822d1cd
  404bbd:	out    dx,eax
  404bbe:	and    BYTE PTR [ebx+ecx*4],al
  404bc1:	dec    ecx
  404bc2:	mov    bl,0x50
  404bc4:	and    ah,BYTE PTR [ecx+0x45e98c86]
  404bca:	dec    edx
  404bcb:	mov    al,ds:0xc69dff72
  404bd0:	mov    edi,0xb6f7b564
  404bd5:	sbb    esp,DWORD PTR [ebp-0x4]
  404bd8:	sub    esp,edi
  404bda:	daa    
  404bdb:	push   eax
  404bdc:	xor    DWORD PTR [esi],ebp
  404bde:	mov    al,0xb
  404be0:	nop
  404be1:	pop    eax
  404be2:	add    DWORD PTR [eax],edx
  404be4:	aad    0xb8
  404be6:	es mov edi,0x99cbfe9a
  404bec:	mov    edi,0x3ed7fc3c
  404bf1:	int3   
  404bf2:	cdq    
  404bf3:	imul   edi,ecx,0x6365778
  404bf9:	rcl    DWORD PTR [ecx],0x37
  404bfc:	data16 sub al,0x9c
  404bff:	outs   dx,BYTE PTR ds:[esi]
  404c00:	and    eax,0x7876549a
  404c05:	mov    DWORD PTR [esi],edx
  404c07:	jo     0x404c47
  404c09:	and    eax,0xb820d24f
  404c0e:	test   al,0x94
  404c10:	mov    eax,ds:0x873a95cd
  404c15:	add    esi,DWORD PTR [eax+eiz*8-0xe]
  404c19:	add    bh,BYTE PTR [edx+0x5d5bcfbd]
  404c1f:	mov    al,0xfe
  404c21:	xchg   ebx,eax
  404c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c23:	test   BYTE PTR [edx+0x36],dl
  404c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c27:	sub    DWORD PTR [ecx+0x11],0xffffffbe
  404c2b:	adc    bl,ch
  404c2d:	and    al,0x6d
  404c2f:	lods   eax,DWORD PTR ds:[esi]
  404c30:	xchg   esp,eax
  404c31:	add    esi,edi
  404c33:	icebp  
  404c34:	cmp    al,0x40
  404c36:	jo     0x404c8c
  404c38:	fnsave [esi+0x5d0616ae]
  404c3e:	push   edi
  404c3f:	dec    edi
  404c40:	inc    ebx
  404c41:	imul   ecx,DWORD PTR [edi],0xffffffff
  404c44:	adc    dh,BYTE PTR [ecx]
  404c46:	aas    
  404c47:	(bad)  
  404c48:	mov    edi,0xb0df8f6
  404c4d:	jp     0x404c4b
  404c4f:	leave  
  404c50:	cmc    
  404c51:	adc    BYTE PTR [edi-0x35],dl
  404c54:	pop    ds
  404c55:	xor    al,BYTE PTR [edi]
  404c57:	std    
  404c58:	and    BYTE PTR [edx+0x4c],dh
  404c5b:	es mov al,0x76
  404c5e:	mov    ebp,0x741b2283
  404c63:	push   0x6b
  404c65:	xlat   BYTE PTR ds:[ebx]
  404c66:	int3   
  404c67:	sub    DWORD PTR [edx],eax
  404c69:	cmp    BYTE PTR [esi-0x7533f4db],bh
  404c6f:	loopne 0x404c56
  404c71:	js     0x404c1e
  404c73:	sahf   
  404c74:	xchg   edx,eax
  404c75:	xchg   esp,eax
  404c76:	pusha  
  404c77:	xchg   edi,eax
  404c78:	sbb    eax,0xb16c7d91
  404c7d:	mov    DWORD PTR [edi+0x50],esp
  404c80:	dec    eax
  404c81:	lock test al,0xce
  404c84:	in     eax,dx
  404c85:	leave  
  404c86:	out    dx,eax
  404c87:	jl     0x404c34
  404c89:	or     al,0x97
  404c8b:	jg     0x404c34
  404c8d:	fisubr DWORD PTR [edx-0x3aa8f831]
  404c93:	push   esi
  404c94:	iret   
  404c95:	retf   
  404c96:	mov    bh,0x90
  404c98:	fisttp DWORD PTR [ecx-0x55bdd4bc]
  404c9e:	test   DWORD PTR [edi-0x19d5b130],edx
  404ca4:	sbb    dh,ah
  404ca6:	shr    BYTE PTR [esi+0x37],0xd2
  404caa:	adc    eax,0x7c255e15
  404caf:	scas   eax,DWORD PTR es:[edi]
  404cb0:	in     al,dx
  404cb1:	idiv   ebx
  404cb3:	mov    dl,0x1f
  404cb5:	aas    
  404cb6:	(bad)  
  404cb7:	stc    
  404cb8:	je     0x404d38
  404cba:	call   0xd37e:0xe01626c
  404cc1:	in     eax,0x5a
  404cc3:	xchg   esi,eax
  404cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cc5:	and    al,0x15
  404cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc8:	stos   BYTE PTR es:[edi],al
  404cc9:	mov    esp,0xceb9700e
  404cce:	(bad)  
  404ccf:	jmp    0x9d3d:0x7809c7aa
  404cd6:	dec    edx
  404cd7:	sti    
  404cd8:	out    dx,al
  404cd9:	adc    ah,BYTE PTR [edi]
  404cdb:	ja     0x404d32
  404cdd:	in     al,dx
  404cde:	or     DWORD PTR [eax+0x15724901],ecx
  404ce4:	clc    
  404ce5:	mov    eax,0x98bbeb6
  404cea:	pop    es
  404ceb:	add    ebp,DWORD PTR [ebx+0x6f]
  404cee:	imul   edi,DWORD PTR [edi-0x6c196c5e],0x2f93b15d
  404cf8:	xor    al,BYTE PTR [ebx+eax*2]
  404cfb:	iret   
  404cfc:	xlat   BYTE PTR ds:[ebx]
  404cfd:	dec    eax
  404cfe:	cwde   
  404cff:	sub    ch,ah
  404d01:	xchg   BYTE PTR [ecx+0x53],ah
  404d04:	mov    BYTE PTR [ebx-0x51],al
  404d07:	mov    bh,BYTE PTR [ecx+0x51]
  404d0a:	pop    eax
  404d0b:	cmp    edx,DWORD PTR [eax+0xc]
  404d0e:	cdq    
  404d0f:	push   ds
  404d10:	dec    BYTE PTR [edx-0x39e53862]
  404d16:	data16 aam 0x69
  404d19:	out    0x57,eax
  404d1b:	std    
  404d1c:	imul   esi,DWORD PTR [esi-0x4e],0x3d5da5f8
  404d23:	mov    bl,BYTE PTR [ecx-0x2d5e05fe]
  404d29:	pusha  
  404d2a:	int3   
  404d2b:	jb     0x404d17
  404d2d:	ret    
  404d2e:	pop    esi
  404d2f:	and    BYTE PTR [eax+eax*1+0xb811aa],ah
  404d36:	data16 add al,0x9
  404d39:	sti    
  404d3a:	and    bl,cl
  404d3c:	imul   esi,DWORD PTR ds:0xa16932a,0x1c779cf8
  404d46:	in     eax,dx
  404d47:	or     eax,0x10be713a
  404d4c:	sub    ebp,eax
  404d4e:	push   ss
  404d4f:	in     eax,dx
  404d50:	mov    ?,WORD PTR gs:[ebx-0x789c8abd]
  404d57:	fisubr WORD PTR [edx+0x31]
  404d5a:	and    edx,DWORD PTR [edi]
  404d5c:	or     DWORD PTR [ecx],ebx
  404d5e:	jbe    0x404db1
  404d60:	jmp    0x404d0f
  404d62:	push   ds
  404d63:	repz fwait
  404d65:	in     al,0xa1
  404d67:	add    dh,BYTE PTR [edx-0x694bbcf5]
  404d6d:	cli    
  404d6e:	dec    ebp
  404d6f:	rcr    DWORD PTR [edi-0x21a8c74d],1
  404d75:	sub    ch,BYTE PTR [ebp+0x570913e0]
  404d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7c:	rcr    BYTE PTR [edx-0x3d],0xf0
  404d80:	xchg   BYTE PTR [esi-0x2fcc651f],al
  404d86:	pop    es
  404d87:	fidivr DWORD PTR [ebx-0x1223c908]
  404d8d:	pop    edx
  404d8e:	int3   
  404d8f:	push   ebx
  404d90:	popa   
  404d91:	xor    eax,0xa68649f3
  404d96:	cmp    eax,0xac7e084
  404d9b:	jmp    DWORD PTR [ebx+edx*4-0x44]
  404d9f:	cli    
  404da0:	mov    dh,al
  404da2:	iret   
  404da3:	mov    DWORD PTR [edi+ebx*8+0x26],ecx
  404da7:	jmp    0x191520d3
  404dac:	sbb    DWORD PTR [ebx],0x948f1bc1
  404db2:	xor    eax,0x900fe053
  404db7:	mov    ah,bl
  404db9:	pop    es
  404dba:	and    esi,DWORD PTR [edx]
  404dbc:	outs   dx,BYTE PTR ds:[esi]
  404dbd:	call   0x934b3d74
  404dc2:	test   BYTE PTR [eax],0x1e
  404dc5:	jp     0x404df9
  404dc7:	push   edx
  404dc8:	test   BYTE PTR [edx+0x77],dl
  404dcb:	push   cs
  404dcc:	or     esi,edx
  404dce:	jmp    0x404e1f
  404dd0:	mov    BYTE PTR [ebx-0x17001c1b],dh
  404dd6:	dec    ebx
  404dd7:	call   0x64e9:0xf668c28f
  404dde:	das    
  404ddf:	pusha  
  404de0:	call   0x6a7383ac
  404de5:	mov    dl,0xbd
  404de7:	mov    eax,ds:0x91028e02
  404dec:	std    
  404ded:	push   esi
  404dee:	sbb    DWORD PTR [ebx-0x123e6c67],0x29f98c97
  404df8:	cmp    al,0xe0
  404dfa:	inc    ebx
  404dfb:	cli    
  404dfc:	cmp    bh,bl
  404dfe:	mov    dh,0xe0
  404e00:	retf   0x280a
  404e03:	mov    ebp,0x16a93d64
  404e08:	jb     0x404e06
  404e0a:	xchg   esp,eax
  404e0b:	out    0x52,eax
  404e0d:	in     eax,dx
  404e0e:	xor    BYTE PTR [eax],dl
  404e10:	adc    ebp,edi
  404e12:	jo     0x404e0a
  404e14:	test   BYTE PTR [esi+0x3a],0x32
  404e18:	inc    eax
  404e19:	mov    eax,ds:0x65ace38b
  404e1e:	xor    eax,0xdbc6bbbe
  404e23:	aas    
  404e24:	or     eax,esp
  404e26:	jmp    0x404db3
  404e28:	jo     0x404de1
  404e2a:	xchg   ebx,eax
  404e2b:	mov    dl,BYTE PTR [edx-0xc]
  404e2e:	in     eax,0xcb
  404e30:	test   DWORD PTR [edx-0x49],0x2179b408
  404e37:	call   0xafe23ab1
  404e3c:	popa   
  404e3d:	mov    dl,0x5
  404e3f:	lahf   
  404e40:	xchg   edi,eax
  404e41:	pop    ds
  404e42:	push   esi
  404e43:	and    al,cl
  404e45:	jmp    0x5ee4e96a
  404e4a:	add    BYTE PTR [esi-0x18f8a389],bl
  404e50:	outs   dx,DWORD PTR ds:[esi]
  404e51:	mov    eax,ds:0x9c5c6bd
  404e56:	dec    eax
  404e57:	jle    0x404e05
  404e59:	sbb    eax,DWORD PTR [esi-0x49]
  404e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5e:	mov    ebx,0xf2e9ef0a
  404e64:	jbe    0x404e97
  404e66:	stc    
  404e67:	and    ah,al
  404e69:	imul   ebx,DWORD PTR [eax-0x3e],0xfffffff3
  404e6d:	mul    BYTE PTR [ebp+eiz*1+0x0]
  404e71:	scas   al,BYTE PTR es:[edi]
  404e72:	push   ebx
  404e73:	cmp    edx,esp
  404e75:	fidivr WORD PTR [edx+0x6b8d4745]
  404e7b:	inc    edi
  404e7c:	dec    edi
  404e7d:	fisubr WORD PTR [edi+0x61]
  404e80:	mov    dh,BYTE PTR [eax]
  404e82:	arpl   WORD PTR [edx-0x5ce8b5cb],bp
  404e88:	loopne 0x404f06
  404e8a:	sub    eax,0x74cc76d6
  404e8f:	mov    esp,ecx
  404e91:	adc    DWORD PTR [eax-0x1e],esp
  404e94:	adc    eax,0x77b6afa7
  404e99:	inc    ecx
  404e9a:	test   DWORD PTR [edx-0x69a549e1],ecx
  404ea0:	push   esp
  404ea1:	inc    BYTE PTR cs:[eax+0x6a]
  404ea5:	in     al,0x60
  404ea7:	ins    BYTE PTR es:[edi],dx
  404ea8:	cmp    DWORD PTR [edi-0x4b],0x72a774c5
  404eaf:	pop    ebp
  404eb0:	(bad)  
  404eb1:	mov    ds:0x214d3825,eax
  404eb6:	(bad)  
  404eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb9:	imul   ebp,DWORD PTR [edi+eax*2+0x2d],0xffffffff
  404ebe:	adc    eax,0xf329b5c1
  404ec3:	idiv   BYTE PTR [esi-0x3850473a]
  404ec9:	bound  ecx,QWORD PTR [eax]
  404ecb:	jo     0x404f01
  404ecd:	or     eax,0x69fdd927
  404ed2:	mov    edx,0xa18bbc41
  404ed7:	in     eax,0x9a
  404ed9:	out    0x78,al
  404edb:	clc    
  404edc:	xchg   edx,eax
  404edd:	bnd jmp DWORD PTR [esi+0x10dee217]
  404ee4:	push   0x5f2ee8f5
  404ee9:	jno    0x404f47
  404eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eec:	scas   al,BYTE PTR es:[edi]
  404eed:	adc    ch,dl
  404eef:	push   edi
  404ef0:	pop    ebx
  404ef1:	mov    BYTE PTR [eax-0x1b],ch
  404ef4:	push   ss
  404ef5:	jl     0x404ee6
  404ef7:	sub    al,0x21
  404ef9:	call   0xd8b3:0xd306c989
  404f00:	add    BYTE PTR [ecx+0x6e],dh
  404f03:	in     eax,0x4a
  404f05:	sub    eax,0x98c7fca7
  404f0a:	jle    0x404eb6
  404f0c:	(bad)  
  404f0d:	mov    ?,WORD PTR [eax-0x27b88088]
  404f13:	or     BYTE PTR [esi],bh
  404f15:	imul   esp,DWORD PTR [ebp-0x6c],0xffffff95
  404f19:	imul   esp,DWORD PTR [ebx],0xcb991095
  404f1f:	pop    esi
  404f20:	pop    es
  404f21:	add    ch,BYTE PTR [ebp-0x10]
  404f24:	cli    
  404f25:	xor    DWORD PTR [ecx+0x29112973],ecx
  404f2b:	adc    ah,cl
  404f2d:	nop
  404f2e:	cmp    BYTE PTR [eax-0x71ae6994],bl
  404f34:	out    dx,al
  404f35:	cvtpi2ps xmm7,QWORD PTR [ecx+eax*8+0x48]
  404f3a:	jbe    0x404f99
  404f3c:	stos   BYTE PTR es:[edi],al
  404f3d:	inc    esp
  404f3e:	call   0x3a9e:0xe0f94828
  404f45:	(bad)  
  404f46:	sti    
  404f47:	loop   0x404eee
  404f49:	cmp    eax,0x704c7170
  404f4e:	mov    eax,ds:0x61d62f44
  404f53:	fsub   DWORD PTR [edx-0xd8c98aa]
  404f59:	std    
  404f5a:	jl     0x404fd3
  404f5c:	mov    dl,0xa9
  404f5e:	jg     0x404f3a
  404f60:	xor    DWORD PTR [ecx+0x19816883],0xce2512e9
  404f6a:	sub    eax,0x7dbf8a9
  404f6f:	adc    dl,BYTE PTR [edx]
  404f71:	jae    0x404fac
  404f73:	and    BYTE PTR [esi+0x344447df],ah
  404f79:	ds aas 
  404f7b:	shl    DWORD PTR [ebx],0xfc
  404f7e:	sti    
  404f7f:	mov    ecx,0x4adbee9e
  404f84:	and    BYTE PTR [ecx],cl
  404f86:	fimul  DWORD PTR [eax-0x4b]
  404f89:	dec    edi
  404f8a:	cmp    eax,0x26ce7444
  404f8f:	pop    edx
  404f90:	imul   ebp,DWORD PTR [esi-0x3f],0xffffffde
  404f94:	pop    edi
  404f95:	xchg   edx,eax
  404f96:	mov    cl,0xe0
  404f98:	cli    
  404f99:	add    al,0x5f
  404f9b:	cld    
  404f9c:	fwait
  404f9d:	pop    esi
  404f9e:	test   DWORD PTR cs:[eax+0xe],edx
  404fa2:	mov    ds:0x489c5249,al
  404fa7:	xor    BYTE PTR [edx-0x7e],ch
  404faa:	fdivr  DWORD PTR [edx-0x5b]
  404fad:	(bad)  
  404fae:	push   eax
  404faf:	ret    
  404fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb1:	out    dx,al
  404fb2:	loop   0x404fe5
  404fb4:	ret    
  404fb5:	ins    DWORD PTR es:[edi],dx
  404fb6:	jecxz  0x405024
  404fb8:	in     al,dx
  404fb9:	dec    ebx
  404fba:	hlt    
  404fbb:	inc    ebx
  404fbc:	inc    ebp
  404fbd:	jb     0x404fc4
  404fbf:	loopne 0x404fcc
  404fc1:	inc    bx
  404fc3:	jle    0x404fe6
  404fc5:	cmp    dh,0xa1
  404fc8:	inc    esi
  404fc9:	das    
  404fca:	mov    bh,0x4c
  404fcc:	sbb    BYTE PTR [ebp+0x69],dl
  404fcf:	cmp    al,0x20
  404fd1:	dec    edx
  404fd2:	jns    0x404fcd
  404fd4:	out    dx,eax
  404fd5:	mov    cs,WORD PTR [ecx-0x32e29ec2]
  404fdb:	dec    ecx
  404fdc:	jmp    0xc7af:0xf36380c2
  404fe3:	dec    ebp
  404fe4:	int3   
  404fe5:	pop    esp
  404fe6:	lods   al,BYTE PTR ds:[esi]
  404fe7:	cmc    
  404fe8:	xlat   BYTE PTR ds:[ebx]
  404fe9:	xchg   esp,eax
  404fea:	adc    bl,BYTE PTR [edx]
  404fec:	sub    eax,0xdc6cdbaa
  404ff1:	daa    
  404ff2:	jg     0x404fc9
  404ff4:	dec    edi
  404ff5:	inc    ebp
  404ff6:	out    dx,eax
  404ff7:	aaa    
  404ff8:	and    DWORD PTR [ebx],edi
  404ffa:	movq   mm3,QWORD PTR [eax+0x28b7a4f6]
  405001:	fist   WORD PTR [ecx+eax*4]
  405004:	sbb    DWORD PTR [edx-0x48],edx
  405007:	or     BYTE PTR [esi],bl
  405009:	rol    BYTE PTR [ebx-0x35ae2cea],0x37
  405010:	scas   al,BYTE PTR es:[edi]
  405011:	cmc    
  405012:	sub    DWORD PTR [ebx+0x30d72a8c],edi
  405018:	cmp    al,bh
  40501a:	push   ebx
  40501b:	xor    ebx,ebx
  40501d:	add    BYTE PTR [eax],0xd7
  405020:	xchg   DWORD PTR [ecx+0x5438e409],ebp
  405026:	sbb    BYTE PTR [edx],0x8c
  405029:	icebp  
  40502a:	xor    BYTE PTR [eax+esi*1-0xc],cl
  40502e:	jl     0x40505f
  405030:	cdq    
  405031:	sbb    edx,DWORD PTR [ebx-0x315ee860]
  405037:	mov    bh,0x14
  405039:	adc    DWORD PTR [edi+0xadc3b5c],edi
  40503f:	jg     0x405058
  405041:	sub    eax,0x70297d93
  405046:	mov    edi,0xe15249f9
  40504b:	jle    0x405006
  40504d:	sub    al,BYTE PTR [edi+0x74]
  405050:	inc    ebx
  405051:	into   
  405052:	pop    esp
  405053:	jae    0x4050a9
  405055:	rol    DWORD PTR [ebx-0x7c3222cb],1
  40505b:	lods   al,BYTE PTR ds:[esi]
  40505c:	into   
  40505d:	leave  
  40505e:	in     eax,dx
  40505f:	mov    bl,0x89
  405061:	je     0x40500f
  405063:	(bad)  
  405064:	pop    eax
  405065:	js     0x40503e
  405067:	sub    DWORD PTR [esi-0x20ab102c],esp
  40506d:	fild   QWORD PTR [esi]
  40506f:	into   
  405070:	cmp    al,0x8f
  405072:	scas   al,BYTE PTR es:[edi]
  405073:	ins    BYTE PTR es:[edi],dx
  405074:	mov    ebp,0xe2f05873
  405079:	test   eax,0x7e9d095e
  40507e:	mov    eax,ds:0xfba5997b
  405083:	repz mov eax,0xec3c8d5
  405089:	and    dl,BYTE PTR ds:0x74964bf7
  40508f:	fwait
  405090:	scas   eax,DWORD PTR es:[edi]
  405091:	jne    0x405059
  405093:	mov    bh,0x81
  405095:	push   esi
  405096:	not    dh
  405098:	dec    eax
  405099:	push   edi
  40509a:	pushf  
  40509b:	dec    edi
  40509c:	mov    ah,0x1b
  40509e:	stos   DWORD PTR es:[edi],eax
  40509f:	add    al,0x7c
  4050a1:	enter  0xcf6f,0xca
  4050a5:	sub    BYTE PTR [edi],al
  4050a7:	cmp    ah,0x7a
  4050aa:	push   ss
  4050ab:	lods   al,BYTE PTR ds:[esi]
  4050ac:	dec    eax
  4050ad:	pop    edx
  4050ae:	daa    
  4050af:	add    eax,0xbe6e331c
  4050b4:	push   esi
  4050b5:	sbb    al,0x43
  4050b7:	movq   mm0,QWORD PTR [edx+0x271e4046]
  4050be:	sahf   
  4050bf:	cmp    BYTE PTR [eax],ah
  4050c1:	mov    edx,0xf71a43fc
  4050c6:	mov    ds:0x122857c0,al
  4050cb:	sbb    eax,0xee0450aa
  4050d0:	xor    BYTE PTR [edi],0x6f
  4050d3:	jle    0x4050a2
  4050d5:	imul   esp,DWORD PTR [ecx-0x5cd019ce],0x1e793a83
  4050df:	xchg   DWORD PTR [ebx],ebx
  4050e1:	stos   BYTE PTR es:[edi],al
  4050e2:	pusha  
  4050e3:	mov    cl,0x4b
  4050e5:	mov    esi,0xb01ac725
  4050ea:	cmc    
  4050eb:	add    DWORD PTR [ecx+0x31],esi
  4050ee:	cmovo  esi,DWORD PTR [ebp-0xd]
  4050f2:	xchg   BYTE PTR [eax+0x2c],dh
  4050f5:	and    eax,0x9d07c68f
  4050fa:	push   ebp
  4050fb:	nop
  4050fc:	(bad)  
  4050fd:	leave  
  4050fe:	bound  ebp,QWORD PTR [eax]
  405100:	inc    ecx
  405101:	pop    eax
  405102:	cmp    bh,0x38
  405105:	and    bh,dl
  405107:	int    0x3c
  405109:	in     al,dx
  40510a:	push   edx
  40510b:	cmp    bl,BYTE PTR [ecx+0x409ec720]
  405111:	adc    al,0x5e
  405113:	enter  0xe52e,0x56
  405117:	arpl   WORD PTR [eax+edx*8],di
  40511a:	shr    bh,1
  40511c:	inc    esi
  40511d:	cmp    ebp,ebx
  40511f:	mov    ecx,0x6678d6db
  405124:	ret    
  405125:	push   edx
  405126:	(bad)  
  405127:	clc    
  405128:	push   es
  405129:	cs xchg esi,eax
  40512b:	mov    ebp,0xa5916a30
  405130:	xor    BYTE PTR [eax],al
  405132:	xchg   esp,eax
  405133:	addr16 in al,0x93
  405136:	mov    al,0x61
  405138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405139:	jcxz   0x40514e
  40513c:	cmp    al,0x89
  40513e:	mov    ds,WORD PTR [ecx-0x80]
  405141:	dec    esi
  405142:	jmp    FWORD PTR [ecx]
  405144:	outs   dx,BYTE PTR ds:[esi]
  405145:	mov    ebp,DWORD PTR ds:0xee5ef052
  40514b:	out    0xc7,eax
  40514d:	into   
  40514e:	cld    
  40514f:	xor    eax,0x21f5d9d4
  405154:	jbe    0x40516a
  405156:	sub    dh,BYTE PTR ds:0x6db69f6b
  40515c:	xchg   BYTE PTR [ebp+0x61],dl
  40515f:	outs   dx,DWORD PTR ds:[esi]
  405160:	clc    
  405161:	repz js 0x405179
  405164:	addr16 pushf 
  405166:	rcl    DWORD PTR [ebx],cl
  405168:	jle    0x4051af
  40516a:	fs jb  0xc8b9fff0
  405171:	xchg   edx,eax
  405172:	clc    
  405173:	jae    0x40513d
  405175:	mov    cx,0xaae0
  405179:	push   ss
  40517a:	adc    dh,BYTE PTR [ecx+0x45]
  40517d:	or     al,0xb0
  40517f:	jmp    0x14faaa11
  405184:	sub    eax,0x54be930b
  405189:	mov    DWORD PTR [ebx],eax
  40518b:	and    cl,ah
  40518d:	std    
  40518e:	mov    dh,0x15
  405190:	imul   edi,edx,0x2bd68765
  405196:	(bad)  
  405197:	ins    DWORD PTR es:[edi],dx
  405198:	sub    al,0x28
  40519a:	loope  0x405154
  40519c:	mov    eax,ds:0x462edcfa
  4051a1:	cli    
  4051a2:	mov    al,0x9b
  4051a4:	fcmove st,st(6)
  4051a6:	push   edx
  4051a7:	cwde   
  4051a8:	mov    ds:0x7b3c0590,al
  4051ad:	xor    edi,ebx
  4051af:	xlat   BYTE PTR ds:[ebx]
  4051b0:	ss sbb eax,0xa5a93cb8
  4051b6:	aaa    
  4051b7:	mov    edi,0xed5ee3a7
  4051bc:	push   ebp
  4051bd:	xor    eax,esp
  4051bf:	mov    ebx,0x38719fd4
  4051c4:	push   ds
  4051c5:	loop   0x40518d
  4051c7:	jb     0x4051c4
  4051c9:	mov    eax,ds:0xca0ab2c
  4051ce:	scas   al,BYTE PTR es:[edi]
  4051cf:	jecxz  0x405192
  4051d1:	mov    dl,BYTE PTR [edx]
  4051d3:	out    dx,eax
  4051d4:	sbb    ch,BYTE PTR [edx-0x5c75dd88]
  4051da:	cmp    bl,ch
  4051dc:	and    al,BYTE PTR [ecx+0x35]
  4051df:	cmp    DWORD PTR [ecx+0x10],ecx
  4051e2:	scas   al,BYTE PTR es:[edi]
  4051e3:	inc    ebp
  4051e4:	sbb    bh,ch
  4051e6:	lahf   
  4051e7:	loope  0x4051b7
  4051e9:	mov    cl,0x48
  4051eb:	push   0xffffffef
  4051ed:	mov    DWORD PTR [esi+eax*2-0x11bfb478],0xac26fbc7
  4051f8:	fidiv  WORD PTR [eax-0x51]
  4051fb:	aad    0x72
  4051fd:	cmp    eax,DWORD PTR [ebp-0x144f49ac]
  405203:	jnp    0x4051f8
  405205:	icebp  
  405206:	aam    0xea
  405208:	sar    DWORD PTR [edi-0x6b],cl
  40520b:	(bad)  
  40520d:	push   ebx
  40520e:	popa   
  40520f:	jecxz  0x4051ad
  405211:	jmp    0xd73:0xeafbeb87
  405218:	mov    eax,0xfcad9e3b
  40521d:	dec    eax
  40521e:	push   ebx
  40521f:	cmp    dh,dl
  405221:	out    0x35,eax
  405223:	aam    0xca
  405225:	dec    edx
  405226:	mov    edi,0xccd91557
  40522b:	cmp    al,0xb7
  40522d:	xchg   esi,eax
  40522e:	sub    ah,0x82
  405231:	add    BYTE PTR gs:[eax-0x50ad5228],dl
  405238:	cmp    eax,0x4754d6ea
  40523d:	dec    esi
  40523e:	xchg   ebp,eax
  40523f:	and    BYTE PTR [ebx-0x3cf9f5f6],bh
  405245:	cmp    dl,BYTE PTR [ebx-0x24]
  405248:	mov    ds:0xeb2a626f,eax
  40524d:	(bad)  
  40524e:	arpl   WORD PTR [ebx-0x5cabc79e],cx
  405254:	add    ebp,DWORD PTR [eax-0x2c]
  405257:	jge    0xf5d39ad2
  40525d:	or     eax,0x1b0a1dad
  405262:	idiv   BYTE PTR [edi+0x48]
  405265:	mov    ebx,0xa4f8b47a
  40526a:	daa    
  40526b:	lods   eax,DWORD PTR ds:[esi]
  40526c:	inc    edi
  40526d:	aam    0x9e
  40526f:	leave  
  405270:	fst    st(1)
  405272:	cmp    eax,0xc8931e6e
  405277:	loopne 0x405286
  405279:	fist   WORD PTR [ebp-0x6e4c508f]
  40527f:	pop    esp
  405280:	jmp    0x1bf0d513
  405285:	jns    0x4052b6
  405287:	add    al,0xe1
  405289:	repz add cl,ch
  40528c:	sbb    ah,BYTE PTR [eax-0x5b44b01c]
  405292:	sti    
  405293:	leave  
  405294:	mov    bh,0xd8
  405296:	mov    dh,0xa3
  405298:	dec    ebx
  405299:	cmp    esp,ebx
  40529b:	sbb    bl,ah
  40529d:	or     eax,edx
  40529f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a0:	push   esp
  4052a1:	pop    ds
  4052a2:	jb     0x4052e0
  4052a4:	lea    ebx,[edx*8+0x7663f541]
  4052ab:	and    BYTE PTR ds:0x84ec919a,bl
  4052b1:	out    dx,eax
  4052b2:	cdq    
  4052b3:	ret    0x5796
  4052b6:	pop    DWORD PTR [ebx+ecx*2-0x2ab84c57]
  4052bd:	cmp    DWORD PTR [esi-0x43d3dbf7],esi
  4052c3:	ins    BYTE PTR es:[edi],dx
  4052c4:	push   ecx
  4052c5:	sbb    bh,0x37
  4052c8:	mov    esi,0xdd89382a
  4052cd:	lods   al,BYTE PTR ds:[esi]
  4052ce:	repnz add eax,0xa37e7da0
  4052d4:	loopne 0x405311
  4052d6:	test   al,0xd5
  4052d8:	jg     0x405279
  4052da:	repz sub dl,0x69
  4052de:	xchg   edx,eax
  4052df:	add    edi,ebx
  4052e1:	jne    0x405333
  4052e3:	ret    
  4052e4:	mov    ecx,0xa0219525
  4052e9:	call   0xd253:0x28a57a3a
  4052f0:	in     eax,0x6c
  4052f2:	jne    0x4052d9
  4052f4:	mov    ch,0xc
  4052f6:	add    DWORD PTR [edx+edx*4],esp
  4052f9:	outs   dx,DWORD PTR ds:[esi]
  4052fa:	push   0xffffffe0
  4052fc:	sbb    dl,BYTE PTR [edi+0x2d2bbac2]
  405302:	and    BYTE PTR [esi],cl
  405304:	inc    DWORD PTR [ebx-0x6c]
  405307:	popf   
  405308:	cmp    BYTE PTR [edx+0x203139df],ch
  40530e:	shr    eax,cl
  405310:	or     BYTE PTR [edi],0xf1
  405313:	xor    DWORD PTR [edi-0x24d59042],edx
  405319:	int3   
  40531a:	add    ch,al
  40531c:	mov    ebp,0x42690bdf
  405321:	(bad)  
  405323:	jge    0x4052fe
  405325:	imul   edi,DWORD PTR [esi-0x5a],0xffffffc6
  405329:	test   DWORD PTR [ebp+0x4d4bc8fe],0x14f0c287
  405333:	fisttp QWORD PTR [esi+0x56]
  405336:	lock ja 0x40530b
  405339:	adc    al,0xd
  40533b:	cs hlt 
  40533d:	es push ebp
  40533f:	out    dx,eax
  405340:	vpcmpgtw xmm3,xmm6,xmm4
  405344:	in     eax,0x85
  405346:	mov    ds:0x256856ae,eax
  40534b:	add    eax,0x9d66956d
  405350:	out    dx,al
  405351:	jae    0x405319
  405353:	addr16 pop ebp
  405355:	jne    0x405339
  405357:	sub    al,0xec
  405359:	inc    esi
  40535a:	jo     0x4052e5
  40535c:	adc    al,cl
  40535e:	push   0x49
  405360:	icebp  
  405361:	add    eax,0x82fa8b8d
  405366:	pop    edi
  405367:	sar    DWORD PTR [eax+eax*4],1
  40536a:	or     DWORD PTR [edx+eiz*4+0x38],0x80ef8c4e
  405372:	xor    bl,BYTE PTR ds:0x72b6bc04
  405378:	test   ebp,0x2d6f2f1c
  40537e:	xchg   ebx,eax
  40537f:	into   
  405380:	mov    esi,DWORD PTR [ebp+0x6ab6c022]
  405386:	cwde   
  405387:	sub    al,0xb3
  405389:	retf   
  40538a:	jb     0x4053b4
  40538c:	stc    
  40538d:	pop    edx
  40538e:	mov    ch,0x1d
  405390:	mov    eax,0x2f391782
  405395:	mov    ds:0xdc0aadfb,al
  40539a:	cld    
  40539b:	cdq    
  40539c:	icebp  
  40539d:	ins    BYTE PTR es:[edi],dx
  40539e:	test   DWORD PTR [edi],0x741cd580
  4053a4:	or     DWORD PTR [edi+0x56],ebp
  4053a7:	loopne 0x405381
  4053a9:	adc    esp,DWORD PTR [ebp-0x34]
  4053ac:	xor    al,0x2d
  4053ae:	push   edx
  4053af:	xchg   esi,eax
  4053b0:	out    dx,al
  4053b1:	add    DWORD PTR [ebx-0x199759c0],0x363742e2
  4053bb:	frstor [ebp+0x793b37ed]
  4053c1:	mov    eax,0x77bda7cf
  4053c6:	sub    ebp,DWORD PTR [edx+edx*8+0x2d70295]
  4053cd:	or     al,0x47
  4053cf:	dec    ebx
  4053d0:	fidivr WORD PTR [esi]
  4053d2:	pop    edi
  4053d3:	test   eax,0x7bb54f92
  4053d8:	lock das 
  4053da:	push   cs
  4053db:	pop    esi
  4053dc:	lods   al,BYTE PTR ds:[esi]
  4053dd:	arpl   WORD PTR [eax],di
  4053df:	inc    eax
  4053e0:	pop    ebp
  4053e1:	sub    eax,0xdd84bc82
  4053e6:	mov    eax,0x40acd97d
  4053eb:	retf   
  4053ec:	xor    BYTE PTR [edx+0x68],0x89
  4053f0:	dec    ecx
  4053f1:	sbb    DWORD PTR ds:0xd23ccfc5,ebx
  4053f7:	lahf   
  4053f8:	mov    ds:0x61807e27,eax
  4053fd:	sub    eax,0x3537d3b1
  405402:	sti    
  405403:	in     al,0xd3
  405405:	mov    dh,0x62
  405407:	ds or  al,0x54
  40540a:	cmc    
  40540b:	and    eax,0x5684f125
  405410:	cld    
  405411:	out    dx,eax
  405412:	in     al,0x36
  405414:	fmul   QWORD PTR [ecx+ebp*8]
  405417:	dec    eax
  405418:	push   eax
  405419:	mov    edi,0xb9311f63
  40541e:	jp     0x405476
  405420:	call   0x25598fcf
  405425:	jmp    0x98b7:0xda1f5881
  40542c:	adc    al,0x81
  40542e:	or     al,0xed
  405430:	cmp    ebp,edx
  405432:	adc    eax,0x1edc54a3
  405437:	fnstsw WORD PTR [esi-0x74783972]
  40543d:	iret   
  40543e:	scas   eax,DWORD PTR es:[edi]
  40543f:	js     0x40549b
  405441:	jo     0x405499
  405443:	ret    0x1481
  405446:	stos   BYTE PTR es:[edi],al
  405447:	dec    edx
  405448:	adc    BYTE PTR [edx+0x6169ede2],bh
  40544e:	loope  0x4054ba
  405450:	(bad)  
  405451:	fwait
  405452:	sti    
  405453:	xlat   BYTE PTR ds:[ebx]
  405454:	fsub   DWORD PTR [ebx+edx*4+0x1efa1304]
  40545b:	fbstp  TBYTE PTR [ecx-0x46]
  40545e:	stos   DWORD PTR es:[edi],eax
  40545f:	push   ss
  405460:	xor    BYTE PTR [ecx],al
  405462:	mov    ch,0xc9
  405464:	mov    al,ds:0x95b8eecb
  405469:	mov    ebx,0xbfb7768
  40546e:	sbb    ecx,eax
  405470:	push   0x67
  405472:	pop    DWORD PTR [edx-0x44]
  405475:	rcr    BYTE PTR [esi],0x44
  405478:	jge    0x4054d1
  40547a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40547b:	mov    al,0xdb
  40547d:	fstp   TBYTE PTR [ebx+0x66]
  405480:	ins    DWORD PTR es:[edi],dx
  405481:	call   0x8ba55fb6
  405486:	ffreep st(5)
  405488:	jns    0x40545f
  40548a:	ror    DWORD PTR ds:0x5bee5a2d,1
  405490:	inc    ebx
  405491:	mov    edi,0xd3305b38
  405496:	inc    di
  405498:	(bad)  
  40549a:	push   ecx
  40549b:	(bad)  
  40549c:	jns    0x4054de
  40549e:	iret   
  40549f:	ss cld 
  4054a1:	(bad)  
  4054a2:	dec    eax
  4054a3:	cmp    ebx,esp
  4054a5:	xchg   ebp,eax
  4054a6:	or     eax,0xb1b5e46e
  4054ab:	adc    esi,ebp
  4054ad:	or     al,0x9
  4054af:	cmp    ebx,DWORD PTR [ebx+0x4]
  4054b2:	mov    edi,0x934cc0db
  4054b7:	inc    ebx
  4054b8:	push   esi
  4054b9:	je     0x40551f
  4054bb:	pusha  
  4054bc:	inc    ecx
  4054bd:	sub    al,0x8f
  4054bf:	add    al,0xa3
  4054c1:	sahf   
  4054c2:	leave  
  4054c3:	imul   eax,ebx,0xffffffc0
  4054c6:	fsubr  st,st(3)
  4054c8:	jb     0x40548a
  4054ca:	jle    0x40546f
  4054cc:	fsub   DWORD PTR [eax+esi*1+0x5dd37ce3]
  4054d3:	push   ss
  4054d4:	jecxz  0x40547e
  4054d6:	or     ecx,ebp
  4054d8:	dec    ebx
  4054d9:	mov    al,0x26
  4054db:	call   0x5f5e:0x4cdee1b8
  4054e2:	ins    BYTE PTR es:[edi],dx
  4054e3:	jae    0x40553c
  4054e5:	adc    DWORD PTR ds:0x6a7ad9fd,esp
  4054eb:	pushf  
  4054ec:	dec    eax
  4054ed:	test   al,0xde
  4054ef:	pop    ebp
  4054f0:	inc    ebx
  4054f1:	push   ebp
  4054f2:	dec    edx
  4054f3:	imul   eax,esi,0xb572aab
  4054f9:	enter  0x30f4,0xab
  4054fd:	inc    esp
  4054fe:	iret   
  4054ff:	adc    ebp,DWORD PTR [edi+esi*4-0x69]
  405503:	fcomp  DWORD PTR [ecx]
  405505:	scas   al,BYTE PTR es:[edi]
  405506:	push   ecx
  405507:	sbb    BYTE PTR [ebp+0x1f],0xdd
  40550b:	ds cmp al,0x6c
  40550e:	xor    DWORD PTR [eax-0x662dd2d8],edi
  405514:	lods   eax,DWORD PTR ds:[esi]
  405515:	jecxz  0x4054a4
  405517:	sub    eax,0x580496e2
  40551d:	inc    eax
  40551e:	rcl    bh,0xec
  405521:	or     cl,BYTE PTR [ebx]
  405523:	sbb    DWORD PTR [eax-0x1636e3c1],esp
  405529:	push   edi
  40552a:	aam    0xf4
  40552c:	jle    0x40553c
  40552e:	xchg   esi,eax
  40552f:	fs jl  0x405565
  405532:	mov    al,ds:0x84efbf09
  405537:	mov    ds:0x14c11aa4,eax
  40553c:	aaa    
  40553d:	cmc    
  40553e:	sbb    esi,DWORD PTR [esi-0x18]
  405541:	jae    0x4054e8
  405543:	mov    ebp,0x5691bbd9
  405548:	fistp  WORD PTR [eax+0x6d703961]
  40554e:	mov    bh,0x8b
  405550:	push   cs
  405551:	xor    eax,0x737f8335
  405556:	imul   ecx,DWORD PTR [ebp+0x2a],0x2cfd0a12
  40555d:	xchg   esp,eax
  40555e:	fsubr  st,st(3)
  405560:	sub    BYTE PTR [eax-0x3a],ah
  405563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405564:	jnp    0x405584
  405566:	jbe    0x4055ae
  405568:	not    BYTE PTR [eiz*8-0x4ea145ab]
  40556f:	mov    dl,0xe3
  405571:	pop    esp
  405572:	jno    0x40559c
  405574:	inc    esi
  405575:	or     eax,0x552fddc1
  40557a:	ins    DWORD PTR es:[edi],dx
  40557b:	dec    esp
  40557c:	and    bh,ch
  40557e:	pop    edi
  40557f:	scas   eax,DWORD PTR es:[edi]
  405580:	or     BYTE PTR [ebp-0x5c],dh
  405583:	cmp    al,0xed
  405585:	adc    ebx,DWORD PTR [eax+ecx*4]
  405588:	and    al,0x9f
  40558a:	std    
  40558b:	popf   
  40558c:	push   eax
  40558d:	test   eax,0x3944b0ee
  405592:	ja     0x405574
  405594:	or     eax,0xcd5fe42e
  405599:	(bad)  
  40559a:	test   al,0x30
  40559c:	pop    edx
  40559d:	fnstenv [esi-0x14c10c70]
  4055a3:	sub    bl,BYTE PTR [esi+0xd]
  4055a6:	add    ebx,esi
  4055a8:	lods   al,BYTE PTR ds:[esi]
  4055a9:	ror    BYTE PTR [ecx+0x15358bb6],cl
  4055af:	test   eax,0xaef079fb
  4055b4:	sub    al,0x81
  4055b6:	xor    BYTE PTR [esi],0x2e
  4055b9:	jne    0x405628
  4055bb:	pop    edi
  4055bc:	loopne 0x4055a7
  4055be:	adc    cl,BYTE PTR [eax-0x2ec45d81]
  4055c4:	xor    bh,BYTE PTR [ecx+0x28]
  4055c7:	push   0x58f20732
  4055cc:	mov    esp,0xfdd47755
  4055d1:	ret    
  4055d2:	ja     0x4055ff
  4055d4:	imul   esi,DWORD PTR [eax*2-0x7c87230c],0x7b
  4055dc:	jne    0x4055c8
  4055de:	pop    ss
  4055df:	jl     0x40557d
  4055e1:	sahf   
  4055e2:	cli    
  4055e3:	cs repnz pop eax
  4055e6:	pop    ebp
  4055e7:	xchg   edi,eax
  4055e8:	cmp    BYTE PTR [eax+0x52],ch
  4055eb:	cmp    BYTE PTR [edx*8-0x220ac77e],al
  4055f2:	dec    ecx
  4055f3:	mov    bl,0x4d
  4055f5:	cmp    edi,DWORD PTR [ebp+0x7c]
  4055f8:	inc    eax
  4055f9:	cmp    edi,ebx
  4055fb:	dec    esp
  4055fc:	pop    ebp
  4055fd:	test   DWORD PTR [eax-0x6d210932],ecx
  405603:	xor    eax,DWORD PTR [ebx]
  405605:	ret    0xc151
  405608:	retf   
  405609:	jno    0x4055a7
  40560b:	lea    esp,[eax-0x7a]
  40560e:	sbb    al,0xca
  405610:	clc    
  405611:	pop    eax
  405612:	ds push 0x9faa8cc2
  405618:	sahf   
  405619:	jg     0x405669
  40561b:	jne    0x40566e
  40561d:	push   esi
  40561e:	fiadd  WORD PTR [eax+0x2472c623]
  405624:	mov    ecx,0xf54ece6a
  405629:	ja     0x405693
  40562b:	jns    0x405697
  40562d:	fs mov edx,0x6cadc9b3
  405633:	lds    esp,FWORD PTR [esi+esi*2+0x42b7ec29]
  40563a:	jg     0x40563d
  40563c:	fwait
  40563d:	mul    BYTE PTR [ecx-0x65]
  405640:	xor    dh,BYTE PTR [eax+0x4b]
  405643:	retf   
  405644:	push   ebx
  405645:	leave  
  405646:	out    dx,eax
  405647:	inc    ebp
  405648:	ror    DWORD PTR [edx-0x32],cl
  40564b:	sar    edx,0x16
  40564e:	or     bl,BYTE PTR [ebp+0x2e]
  405651:	in     eax,0x55
  405653:	les    eax,FWORD PTR [ecx]
  405655:	imul   edi,DWORD PTR [esi],0xf4ad55fe
  40565b:	jp     0x40568e
  40565d:	or     al,0x48
  40565f:	mov    ds:0x7676359b,al
  405664:	add    cl,ch
  405666:	test   eax,0x3c909638
  40566b:	(bad)  
  40566c:	xlat   BYTE PTR ds:[ebx]
  40566d:	mov    fs,WORD PTR [ebp-0x13]
  405670:	xor    BYTE PTR [ebx-0x671a93fa],al
  405676:	mov    al,0x4c
  405678:	int    0xac
  40567a:	xor    esi,DWORD PTR [edi+0x5b334761]
  405680:	hlt    
  405681:	push   edx
  405682:	xchg   BYTE PTR [edi],cl
  405684:	lea    ebp,[edi-0x56]
  405687:	pop    esp
  405688:	add    esp,ecx
  40568a:	fst    st(6)
  40568c:	data16 mov dh,0xde
  40568f:	push   eax
  405690:	xchg   ebp,eax
  405691:	xor    eax,0xf1bdb46b
  405696:	jge    0x405635
  405698:	push   edi
  405699:	data16 je 0x4056da
  40569c:	dec    ebx
  40569d:	xchg   edx,eax
  40569e:	arpl   si,dx
  4056a0:	sub    ch,0xd5
  4056a3:	xchg   esp,eax
  4056a4:	lods   eax,DWORD PTR ds:[esi]
  4056a5:	loope  0x4056d1
  4056a7:	jmp    0x23629adc
  4056ac:	enter  0x6578,0xe7
  4056b0:	mov    ecx,0xa3670a2c
  4056b5:	adc    eax,DWORD PTR [edx+0x27]
  4056b8:	enter  0x6ebd,0x1c
  4056bc:	loopne 0x405733
  4056be:	out    dx,al
  4056bf:	mov    al,ds:0x5d2881a6
  4056c4:	dec    eax
  4056c5:	icebp  
  4056c6:	inc    ebp
  4056c7:	cmp    ecx,esp
  4056c9:	outs   dx,DWORD PTR ds:[esi]
  4056ca:	daa    
  4056cb:	clc    
  4056cc:	fwait
  4056cd:	or     BYTE PTR [ebp-0x46],0xe4
  4056d1:	xchg   ebx,eax
  4056d2:	pop    es
  4056d3:	xlat   BYTE PTR ds:[ebx]
  4056d4:	dec    esi
  4056d5:	push   0xcd70720f
  4056da:	jae    0x40572e
  4056dc:	out    0xd1,eax
  4056de:	ins    BYTE PTR es:[edi],dx
  4056df:	ret    
  4056e0:	nop
  4056e1:	add    bh,BYTE PTR [ebp-0x76c59788]
  4056e7:	and    cl,BYTE PTR [edx+esi*8]
  4056ea:	add    al,0x95
  4056ec:	mov    al,bl
  4056ee:	call   0x98ccc3dd
  4056f3:	fwait
  4056f4:	loope  0x40573c
  4056f6:	retf   0x6036
  4056f9:	xchg   DWORD PTR ss:[edx+0x1aa375c],eax
  405700:	mov    ecx,0x39ab58df
  405705:	outs   dx,BYTE PTR ds:[esi]
  405706:	repz sahf 
  405708:	icebp  
  405709:	(bad)  
  40570a:	fistp  QWORD PTR ds:0x3ee03c59
  405710:	mov    BYTE PTR [eax],ch
  405712:	cmc    
  405713:	(bad)  
  405714:	xchg   esi,eax
  405715:	in     eax,0x57
  405717:	pop    eax
  405718:	mov    ds:0xbd6847b6,al
  40571d:	into   
  40571e:	inc    edx
  40571f:	sbb    eax,0x23a5f6f8
  405724:	adc    eax,0xa749e358
  405729:	adc    DWORD PTR [edx-0x76f8e049],ebx
  40572f:	sbb    al,0xc1
  405731:	lods   al,BYTE PTR ds:[esi]
  405732:	fistp  DWORD PTR [eax-0x1ffe390]
  405738:	iret   
  405739:	inc    ecx
  40573a:	stos   DWORD PTR es:[edi],eax
  40573b:	lock sbb esp,esp
  40573e:	imul   eax,DWORD PTR [edx],0x17
  405741:	adc    BYTE PTR [esi+0x58],0x10
  405745:	ins    BYTE PTR es:[edi],dx
  405746:	pop    edi
  405747:	push   0xffffffdd
  405749:	adc    DWORD PTR [ebp+0x12cdeb1c],0xfe49c2f9
  405753:	dec    ecx
  405754:	sbb    DWORD PTR [ecx+0x29e1e2f3],eax
  40575a:	ret    0x45a9
  40575d:	mov    ds:0x4f1bb544,al
  405762:	fcomp  QWORD PTR [ebp+0xb]
  405765:	dec    ebp
  405766:	jmp    0x680:0xdc5f75d4
  40576d:	test   esp,eax
  40576f:	call   0xdfb9:0x7c5118c
  405776:	aaa    
  405777:	call   0x836b:0x89afdc8e
  40577e:	int3   
  40577f:	neg    BYTE PTR [ebp+0x19]
  405782:	adc    edx,ebx
  405784:	cmp    al,0x53
  405786:	mov    WORD PTR [esi-0x24613d63],gs
  40578c:	mov    al,ss:0xdd92faca
  405792:	pop    edi
  405793:	jmp    0x2c9ce1ba
  405798:	scas   eax,DWORD PTR es:[edi]
  405799:	xor    eax,0xfc001dbb
  40579e:	pop    eax
  40579f:	lahf   
  4057a0:	lahf   
  4057a1:	cmp    eax,0x1e9f46c0
  4057a6:	adc    al,0x87
  4057a8:	ins    DWORD PTR es:[edi],dx
  4057a9:	push   ds
  4057aa:	cmp    ecx,DWORD PTR [ecx]
  4057ac:	popa   
  4057ad:	fnstcw WORD PTR [edx]
  4057af:	xchg   ebp,eax
  4057b0:	inc    esi
  4057b1:	cmp    edi,DWORD PTR ds:0xd7fc4bed
  4057b7:	fidiv  DWORD PTR [edi+0x704f206c]
  4057bd:	sahf   
  4057be:	sar    DWORD PTR [edx+0x72ecd132],cl
  4057c4:	fidiv  DWORD PTR [ecx+0xa6557aa]
  4057ca:	add    eax,0xf4fe8207
  4057cf:	cli    
  4057d0:	jno    0x4057dd
  4057d2:	test   cl,0x9c
  4057d5:	pop    edi
  4057d6:	jecxz  0x4057ee
  4057d8:	dec    esi
  4057d9:	cmp    edx,ebx
  4057db:	js     0x405799
  4057dd:	inc    eax
  4057de:	ret    0xb146
  4057e1:	sbb    dl,BYTE PTR [edi+0x4b]
  4057e4:	rcl    BYTE PTR [esp+esi*4],1
  4057e7:	loop   0x405841
  4057e9:	xchg   ecx,eax
  4057ea:	mov    ecx,0x5165a177
  4057ef:	or     al,0xb8
  4057f1:	adc    BYTE PTR [ecx+0x41],bl
  4057f4:	cli    
  4057f5:	mov    edi,0x4b6f7077
  4057fa:	add    eax,DWORD PTR [edi+0x53]
  4057fd:	push   eax
  4057fe:	mov    ebx,es
  405800:	leave  
  405801:	pop    esp
  405802:	or     bl,BYTE PTR [ebx-0x4d]
  405805:	or     edi,0x5c
  405808:	mov    WORD PTR [ecx],?
  40580a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40580b:	ret    0xa5f2
  40580e:	mov    cl,0x90
  405810:	dec    ebp
  405811:	addr16 in al,0x42
  405814:	stos   DWORD PTR es:[edi],eax
  405815:	xor    eax,0x75311e44
  40581a:	ins    BYTE PTR es:[edi],dx
  40581b:	retf   
  40581c:	fs pop esp
  40581e:	rol    BYTE PTR [esi+ecx*1],cl
  405821:	and    eax,0x2d5a397b
  405826:	call   0x197d:0xa24bb5fa
  40582d:	cdq    
  40582e:	push   ds
  40582f:	outs   dx,DWORD PTR ds:[esi]
  405830:	mov    cl,0xd1
  405832:	es or  al,0x14
  405835:	xor    DWORD PTR [eax+0x62f5e402],0xd2c19cdf
  40583f:	sub    eax,0x80a3ea0f
  405844:	xchg   esp,eax
  405845:	js     0x4057f8
  405847:	sub    BYTE PTR [ebx-0xb],ah
  40584a:	mov    ss,WORD PTR [ecx-0x7a]
  40584d:	cmp    eax,0x47ef3eb1
  405852:	adc    esp,DWORD PTR [edx-0x2d93e210]
  405858:	pop    esi
  405859:	sbb    esp,ebx
  40585b:	mov    edx,ebx
  40585d:	push   esp
  40585e:	push   eax
  40585f:	fstp   DWORD PTR [eax]
  405861:	and    edx,DWORD PTR [ebx+0x548fe88]
  405867:	xor    eax,0xbdd60b09
  40586c:	imul   ebx,DWORD PTR [eax],0xfffffffb
  40586f:	dec    eax
  405870:	iret   
  405871:	jg     0x4058e6
  405873:	mov    esi,edi
  405875:	xchg   esi,eax
  405876:	in     eax,0xf4
  405878:	fs xchg ebx,eax
  40587a:	xlat   BYTE PTR ds:[ebx]
  40587b:	jno    0x40588a
  40587d:	pushf  
  40587e:	retf   
  40587f:	(bad)  
  405880:	sbb    cl,BYTE PTR [eax]
  405882:	pop    eax
  405883:	sbb    DWORD PTR [eax],ebp
  405885:	gs pop ss
  405887:	cs lahf 
  405889:	(bad)  
  40588a:	mov    dl,0x29
  40588c:	(bad)  
  40588d:	dec    ecx
  40588e:	and    cl,BYTE PTR [edi-0xd]
  405891:	dec    ebx
  405892:	aam    0x15
  405894:	jb     0x405819
  405896:	stos   BYTE PTR es:[edi],al
  405897:	xor    DWORD PTR [ebp-0x7c],ebp
  40589a:	xor    al,0x3d
  40589c:	inc    edx
  40589d:	mov    bh,0x2f
  40589f:	iret   
  4058a0:	mov    edi,0xcb3be4bf
  4058a5:	jmp    0x405890
  4058a7:	imul   edi,DWORD PTR [edx-0x757cf94a],0x3b
  4058ae:	and    BYTE PTR [esi-0x28],0x9c
  4058b2:	jl     0x4058c4
  4058b4:	or     eax,DWORD PTR [edx+0xe]
  4058b7:	sub    eax,0x6461e567
  4058bc:	in     al,0x3f
  4058be:	xchg   edi,eax
  4058bf:	inc    esi
  4058c0:	push   ss
  4058c1:	mov    cl,0x15
  4058c3:	ficom  WORD PTR [ecx+esi*1]
  4058c6:	mov    al,ds:0xf03479c8
  4058cb:	xchg   edi,eax
  4058cc:	fldenv [esi+eiz*1-0x4a5fb8bc]
  4058d3:	inc    esi
  4058d4:	sub    eax,0xd9872142
  4058d9:	xor    al,0x4d
  4058db:	inc    ecx
  4058dc:	cmp    al,0x48
  4058de:	sub    eax,0x7c2b8b1e
  4058e3:	and    ecx,DWORD PTR [ebx+0x1f1655c7]
  4058e9:	cmp    edx,0x15
  4058ec:	xchg   DWORD PTR [edi+0x562418ec],edx
  4058f2:	call   0x1b7c:0x237a5e7e
  4058f9:	jo     0x405903
  4058fb:	or     DWORD PTR [ecx],edx
  4058fd:	mov    eax,ds:0x8fbe7f64
  405902:	jg     0x4058e9
  405904:	lods   al,BYTE PTR ds:[esi]
  405905:	int    0x36
  405907:	(bad)  
  405908:	xchg   ecx,eax
  405909:	mov    edi,0xcd0a34d1
  40590e:	ror    DWORD PTR [ebp-0x46841f3],1
  405914:	xchg   esi,eax
  405915:	adc    DWORD PTR [ecx-0x36],eax
  405918:	inc    edx
  405919:	out    0x3c,al
  40591b:	rcl    DWORD PTR [eax+0x4583ee19],1
  405921:	test   DWORD PTR [ecx],edx
  405923:	test   eax,0xfbdcb959
  405928:	inc    ebp
  405929:	std    
  40592a:	add    eax,DWORD PTR [ecx-0xd7d3e58]
  405930:	repnz xlat BYTE PTR ds:[ebx]
  405932:	pop    esi
  405933:	and    eax,DWORD PTR [ebx+0x47]
  405936:	sbb    BYTE PTR ds:0x2753c284,ch
  40593c:	js     0x4058f9
  40593e:	aam    0xf9
  405940:	jge    0x405941
  405942:	push   esi
  405943:	and    cl,cl
  405945:	(bad)  
  405946:	ror    DWORD PTR [edi],cl
  405948:	add    al,0x3
  40594a:	je     0x405993
  40594c:	push   esi
  40594d:	xor    al,0xcb
  40594f:	pop    esi
  405950:	fidiv  DWORD PTR [edx]
  405952:	les    edi,FWORD PTR [eax+ecx*1-0x4d]
  405956:	add    esp,eax
  405958:	lahf   
  405959:	gs (bad) 
  40595b:	inc    eax
  40595c:	jns    0x405923
  40595e:	inc    ebx
  40595f:	cmp    eax,0x62d3eb16
  405964:	call   0xce3c:0x67b77f31
  40596b:	fst    DWORD PTR [ebx]
  40596d:	add    bl,BYTE PTR [eax+0x1d]
  405970:	mov    ds:0xd0df92a7,al
  405975:	cmp    bl,BYTE PTR [esi+0x21]
  405978:	pusha  
  405979:	pop    eax
  40597a:	jne    0x405961
  40597c:	xchg   esi,eax
  40597d:	jbe    0x40591b
  40597f:	mov    ah,0xe
  405981:	fsubr  DWORD PTR [esi-0x343b2ef8]
  405987:	sti    
  405988:	sbb    dl,0x48
  40598b:	iret   
  40598c:	sbb    al,ch
  40598e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598f:	jmp    0x405942
  405991:	bound  edi,QWORD PTR [edx-0x3dd8d5]
  405997:	or     eax,0xd5fe4ff
  40599c:	fidiv  WORD PTR [ecx+esi*1+0x442ad0e2]
  4059a3:	mov    ah,0xc1
  4059a5:	dec    ecx
  4059a6:	lds    esp,FWORD PTR [ebp-0x1d]
  4059a9:	dec    edx
  4059aa:	retf   0x4389
  4059ad:	sbb    ebp,ecx
  4059af:	mov    ah,0x2d
  4059b1:	push   ss
  4059b2:	outs   dx,BYTE PTR ds:[esi]
  4059b3:	jl     0x4059da
  4059b5:	int    0x80
  4059b7:	xchg   BYTE PTR [ebp-0x3b4214c],bl
  4059bd:	sub    DWORD PTR [ebp+0x37513cb1],0xffffff87
  4059c4:	jl     0x4059cf
  4059c6:	add    DWORD PTR [esi-0xd],edx
  4059c9:	in     al,0x28
  4059cb:	dec    ebp
  4059cc:	jne    0x4059f9
  4059ce:	and    ah,BYTE PTR [eax-0x25ddcb0a]
  4059d4:	cmp    ecx,edx
  4059d6:	sbb    ah,BYTE PTR ds:0x9ed47126
  4059dc:	clc    
  4059dd:	jge    0x4059a4
  4059df:	(bad)
  4059e2:	clc    
  4059e3:	pop    edx
  4059e4:	mov    ecx,DWORD PTR [eax+0x5421b617]
  4059ea:	pop    ebx
  4059eb:	out    dx,eax
  4059ec:	cdq    
  4059ed:	push   ds
  4059ee:	pop    edi
  4059ef:	(bad)  
  4059f0:	ja     0x4059f0
  4059f2:	jno    0x405980
  4059f4:	ss dec esp
  4059f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f7:	or     bh,cl
  4059f9:	cmp    cl,BYTE PTR [edi-0x38]
  4059fc:	mov    ?,edx
  4059fe:	fisttp QWORD PTR [esi]
  405a00:	iret   
  405a01:	and    esp,DWORD PTR [eax-0x65]
  405a04:	inc    esi
  405a05:	sbb    edx,edx
  405a07:	inc    edx
  405a08:	pop    ebx
  405a09:	mov    ebx,0x328ba4fd
  405a0e:	out    dx,al
  405a0f:	cwde   
  405a10:	out    dx,eax
  405a11:	hlt    
  405a12:	outs   dx,BYTE PTR ds:[esi]
  405a13:	sbb    al,BYTE PTR [ecx]
  405a15:	ret    0xddbc
  405a18:	js     0x405a0a
  405a1a:	sbb    BYTE PTR [esp+eax*1],ah
  405a1d:	xchg   edx,eax
  405a1e:	in     eax,dx
  405a1f:	fs dec eax
  405a21:	ror    WORD PTR [ecx-0x7b273d2c],1
  405a28:	std    
  405a29:	pop    ebp
  405a2a:	aaa    
  405a2b:	(bad)  
  405a2c:	push   esi
  405a2d:	dec    esp
  405a2e:	leave  
  405a2f:	cvtdq2ps xmm2,XMMWORD PTR [ecx+0x258b4a50]
  405a36:	sbb    edx,DWORD PTR [eax+0x3d59fb59]
  405a3c:	xchg   DWORD PTR [esi],ebp
  405a3e:	in     eax,dx
  405a3f:	push   0x41
  405a41:	dec    edx
  405a42:	out    dx,al
  405a43:	add    DWORD PTR [edx-0xebd6dd8],esi
  405a49:	xor    eax,0xe40891fc
  405a4e:	pop    ds
  405a4f:	into   
  405a50:	ficom  DWORD PTR [eax+edi*1-0x6]
  405a54:	lods   al,BYTE PTR ds:[esi]
  405a55:	inc    ebp
  405a56:	push   ebx
  405a57:	test   BYTE PTR [edi+0x47],bh
  405a5a:	jb     0x4059e3
  405a5c:	xchg   eax,ebx
  405a5e:	out    0x77,al
  405a60:	lods   eax,DWORD PTR ds:[esi]
  405a61:	fwait
  405a62:	jmp    0xd9e7ca23
  405a67:	mov    bh,0x49
  405a69:	(bad)  
  405a6a:	jne    0x405a8d
  405a6c:	mov    eax,0x641291c4
  405a71:	mov    eax,0x62a9ec21
  405a76:	jge    0x405a44
  405a78:	int3   
  405a79:	cmp    ch,bl
  405a7b:	inc    edx
  405a7c:	scas   al,BYTE PTR es:[edi]
  405a7d:	repnz in eax,0xf8
  405a80:	daa    
  405a81:	dec    esi
  405a82:	add    eax,0xec8f12b2
  405a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a88:	jae    0x405ad7
  405a8a:	stc    
  405a8b:	dec    edx
  405a8c:	mov    edx,0x435b10ed
  405a91:	loope  0x405ad4
  405a93:	lods   al,BYTE PTR ds:[esi]
  405a94:	sbb    al,0xb0
  405a96:	lock jmp DWORD PTR [edi+0xf3ebd9f]
  405a9d:	mov    ebp,0x4e951d4a
  405aa2:	sub    ah,BYTE PTR ds:0xcd673570
  405aa8:	sbb    eax,0x3cea0f7f
  405aad:	aaa    
  405aae:	les    ecx,FWORD PTR [eax-0x10]
  405ab1:	xlat   BYTE PTR ds:[ebx]
  405ab2:	sbb    DWORD PTR [ebp+0x6f],0xcc85e1c3
  405ab9:	pop    edi
  405aba:	dec    esi
  405abb:	adc    esp,esi
  405abd:	or     al,0xf3
  405abf:	fiadd  DWORD PTR [eax-0x5e]
  405ac2:	add    eax,eax
  405ac4:	xchg   ecx,eax
  405ac5:	sar    BYTE PTR [edx-0x28a1bc49],cl
  405acb:	xchg   DWORD PTR [ebx+0x9982d38],esi
  405ad1:	out    0xd1,eax
  405ad3:	push   ebp
  405ad4:	mov    DWORD PTR [ecx+0x4c],edx
  405ad7:	jbe    0x405b19
  405ad9:	pop    ss
  405ada:	out    dx,al
  405adb:	and    DWORD PTR [eax-0x27245e3a],eax
  405ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae2:	cli    
  405ae3:	iret   
  405ae4:	and    ebx,DWORD PTR [esi-0x59]
  405ae7:	add    al,0xac
  405ae9:	aad    0x2
  405aeb:	pop    esi
  405aec:	mov    edx,DWORD PTR [ecx+0x32f8b3af]
  405af2:	mov    cs,WORD PTR [eax-0x2397e9be]
  405af8:	add    dh,BYTE PTR [ebp+edi*1+0x57]
  405afc:	test   dl,ch
  405afe:	iret   
  405aff:	sub    ebx,DWORD PTR [esi+0x491aa2bb]
  405b05:	adc    ebx,esp
  405b07:	add    bh,ah
  405b09:	daa    
  405b0a:	imul   edx,DWORD PTR [esp+eax*1],0xdef9acd8
  405b11:	pop    edx
  405b12:	adc    bh,BYTE PTR [ebp-0x3]
  405b15:	loopne 0x405b44
  405b17:	mov    al,0x55
  405b19:	lds    esp,FWORD PTR [ebx]
  405b1b:	out    0xa8,al
  405b1d:	jmp    0xc9f7c3d3
  405b22:	in     al,0xf7
  405b24:	xchg   edx,eax
  405b25:	inc    eax
  405b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b27:	and    DWORD PTR [ecx-0x2b],ebp
  405b2a:	ins    DWORD PTR es:[edi],dx
  405b2b:	sub    BYTE PTR [ecx-0x4b],0x2f
  405b2f:	adc    ah,al
  405b31:	clc    
  405b32:	iret   
  405b33:	and    eax,0x32f8f7dc
  405b38:	push   cs
  405b39:	jecxz  0x405b69
  405b3b:	dec    edi
  405b3c:	jns    0x405b50
  405b3e:	inc    ebx
  405b3f:	data16 sub al,0xc0
  405b42:	mov    bh,0x17
  405b44:	enter  0x91d9,0x89
  405b48:	adc    DWORD PTR [ebp-0x26],0x277f929b
  405b4f:	cld    
  405b50:	xor    eax,0x938c7fad
  405b55:	aas    
  405b56:	jle    0x405b42
  405b58:	test   al,0x59
  405b5a:	stc    
  405b5b:	dec    ecx
  405b5c:	mov    esi,0xa77a7dbd
  405b61:	xchg   bh,cl
  405b63:	test   BYTE PTR [esi-0x59],ah
  405b66:	addr16 fdivrp st(7),st
  405b69:	push   ss
  405b6a:	or     DWORD PTR [edx-0x30c524e7],ebp
  405b70:	pop    es
  405b71:	mov    al,al
  405b73:	sbb    BYTE PTR [edi-0x4d9296c],0xd0
  405b7a:	ret    
  405b7b:	hlt    
  405b7c:	and    DWORD PTR [ecx+0x55],0x55
  405b80:	pop    edx
  405b81:	mov    dl,ah
  405b83:	cmp    BYTE PTR [eax],ah
  405b85:	adc    DWORD PTR [esi+edi*4],esi
  405b88:	and    BYTE PTR [ebp-0x631761c3],bh
  405b8e:	xchg   edx,esp
  405b90:	or     edi,DWORD PTR [ebp-0x40549dd3]
  405b96:	popf   
  405b97:	fdivr  st,st(7)
  405b99:	jno    0x405ba2
  405b9b:	xchg   dl,bl
  405b9d:	sub    BYTE PTR [ecx+0x2a0dc14e],ah
  405ba3:	push   ss
  405ba4:	xchg   ecx,eax
  405ba5:	fadd   DWORD PTR [edi+edi*1-0x15]
  405ba9:	pop    edi
  405baa:	shr    BYTE PTR [esi],cl
  405bac:	lds    esp,FWORD PTR [edi-0x4c]
  405baf:	out    0xd1,eax
  405bb1:	inc    ebp
  405bb2:	jmp    0x405bd9
  405bb4:	fld    DWORD PTR [edx+0x4b]
  405bb7:	outs   dx,DWORD PTR ds:[esi]
  405bb8:	fidiv  WORD PTR [eax-0x4a]
  405bbb:	and    ebx,DWORD PTR [edx+0x19]
  405bbe:	add    eax,0x99780c56
  405bc3:	gs jno 0x405c27
  405bc6:	or     bl,BYTE PTR [ebx-0x1a]
  405bc9:	repnz (bad) 
  405bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bcc:	scas   eax,DWORD PTR es:[edi]
  405bcd:	dec    ecx
  405bce:	jecxz  0x405ba9
  405bd0:	scas   eax,DWORD PTR es:[edi]
  405bd1:	cmp    BYTE PTR [esi+0x161aa999],dl
  405bd7:	mov    ds:0x6a0d00a,eax
  405bdc:	fdivr  DWORD PTR [esi-0x61]
  405bdf:	popa   
  405be0:	and    DWORD PTR [ebx+0x49090c48],ebx
  405be6:	int    0xce
  405be8:	ja     0x405bf1
  405bea:	outs   dx,DWORD PTR ds:[esi]
  405beb:	pop    esp
  405bec:	and    al,BYTE PTR [eax-0x25]
  405bef:	push   cs
  405bf0:	pop    ebp
  405bf1:	adc    al,0x47
  405bf3:	lods   eax,DWORD PTR ds:[esi]
  405bf4:	gs push es
  405bf6:	data16 jns 0x405b92
  405bf9:	adc    al,0xbc
  405bfb:	test   DWORD PTR [ecx+0x7f],ebx
  405bfe:	xchg   ebx,eax
  405bff:	popf   
  405c00:	ds xchg esp,eax
  405c02:	test   DWORD PTR [edx+0x5fccf2ed],edi
  405c08:	mov    ch,0x11
  405c0a:	inc    edi
  405c0b:	push   ebx
  405c0c:	fstp   DWORD PTR [eax-0x5465621f]
  405c12:	jne    0x405c54
  405c14:	mov    BYTE PTR [esi-0x315f1f32],ch
  405c1a:	cmc    
  405c1b:	cld    
  405c1c:	nop
  405c1d:	bnd ret 0x4549
  405c21:	jmp    0x928a3540
  405c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c27:	cld    
  405c28:	pop    ecx
  405c29:	jae    0x405c58
  405c2b:	(bad)  
  405c2c:	cmp    edx,eax
  405c2e:	test   BYTE PTR [edi],bl
  405c30:	adc    al,0xe0
  405c32:	cmc    
  405c33:	or     bl,BYTE PTR [edx+edx*2]
  405c36:	mov    cl,0x82
  405c38:	fs std 
  405c3a:	gs das 
  405c3c:	scas   eax,DWORD PTR es:[edi]
  405c3d:	mov    bl,0x29
  405c3f:	dec    esp
  405c40:	std    
  405c41:	pop    ecx
  405c42:	jp     0x405c02
  405c44:	stc    
  405c45:	xor    eax,0x41318208
  405c4a:	sbb    bh,BYTE PTR [ecx]
  405c4c:	jmp    0x642aa1c3
  405c51:	lock aaa 
  405c53:	ja     0x405c96
  405c55:	mov    eax,0xf593c2d9
  405c5a:	inc    edi
  405c5b:	adc    dh,bh
  405c5d:	(bad)  
  405c5e:	jo     0x405cd3
  405c60:	inc    ebp
  405c61:	out    0xe3,al
  405c63:	aaa    
  405c64:	add    eax,0x21c223fe
  405c69:	inc    esi
  405c6a:	shl    edi,1
  405c6c:	retf   
  405c6d:	or     al,0x7f
  405c6f:	cmp    ecx,eax
  405c71:	repnz add eax,0x4381a8e2
  405c77:	push   0xffffffcf
  405c79:	mov    ebp,0xbf1802fa
  405c7e:	push   esp
  405c7f:	(bad)  
  405c80:	test   eax,0x5892ea84
  405c85:	jb     0x405c8d
  405c87:	fs jmp 0x2bfc:0xca495781
  405c8f:	(bad)  
  405c91:	add    ch,BYTE PTR [eax+0x18af128c]
  405c97:	dec    eax
  405c98:	sbb    eax,0xe54f61f9
  405c9d:	iret   
  405c9e:	mov    bl,0x18
  405ca0:	push   ebx
  405ca1:	(bad)  [ebx-0x604c96d7]
  405ca7:	cmp    ecx,DWORD PTR cs:[ecx+esi*4]
  405cab:	test   ebp,ecx
  405cad:	rsqrtps xmm5,XMMWORD PTR [edx-0x38]
  405cb1:	xchg   esi,eax
  405cb2:	lods   eax,DWORD PTR ds:[esi]
  405cb3:	inc    edx
  405cb4:	push   0x56
  405cb6:	mov    dl,0x4
  405cb8:	mov    esi,0x3c1cb153
  405cbd:	loop   0x405cdd
  405cbf:	push   edx
  405cc0:	xor    BYTE PTR [edx+0x44],cl
  405cc3:	loop   0x405cef
  405cc5:	cld    
  405cc6:	xor    eax,0x1350b764
  405ccb:	lods   al,BYTE PTR ds:[esi]
  405ccc:	push   ecx
  405ccd:	mov    eax,ds:0xaad7dcfd
  405cd2:	and    al,0x83
  405cd4:	nop
  405cd5:	ds inc eax
  405cd7:	push   ebx
  405cd8:	xor    eax,0x66bd9d37
  405cdd:	cmp    DWORD PTR [eax-0x1],ebx
  405ce0:	inc    eax
  405ce1:	jge    0x405caa
  405ce3:	push   ds
  405ce4:	jl     0x405d32
  405ce6:	cmp    al,0x5c
  405ce8:	xchg   edx,eax
  405ce9:	int3   
  405cea:	jne    0x405d2d
  405cec:	mov    ch,0x1
  405cee:	(bad)  
  405cef:	clc    
  405cf0:	mov    al,0x57
  405cf2:	(bad)  
  405cf3:	shl    DWORD PTR [edx+0x16],1
  405cf6:	fs aas 
  405cf8:	inc    esp
  405cf9:	js     0x405cbb
  405cfb:	les    esp,FWORD PTR [ebx]
  405cfd:	xchg   ebp,eax
  405cfe:	push   ds
  405cff:	mov    DWORD PTR [edx-0x7413b277],edi
  405d05:	push   ebp
  405d06:	in     al,dx
  405d07:	xor    edx,esi
  405d09:	add    DWORD PTR ds:0x42d01c,0x429028
  405d13:	add    edx,0x7f55d8f2
  405d19:	mov    DWORD PTR ds:0x42a004,0x7cae
  405d23:	lea    ecx,[ebp+eax*4-0xb4]
  405d2a:	mov    DWORD PTR [ecx],edx
  405d2c:	mov    DWORD PTR ds:0x42d018,0x76cd
  405d36:	mov    edx,DWORD PTR [ecx]
  405d38:	mov    DWORD PTR ds:0x429024,0x63
  405d42:	cmp    edx,0x244ecb93
  405d48:	mov    DWORD PTR ds:0x42c01c,0x464d
  405d52:	jbe    0x405d6d
  405d58:	sub    DWORD PTR ds:0x42a000,0x42d004
  405d62:	add    DWORD PTR [ecx],0x405fcdc
  405d68:	jmp    0x405d7d
  405d6d:	or     DWORD PTR ds:0x42b014,0x429010
  405d77:	add    DWORD PTR [ecx],0xfdaf4324
  405d7d:	sbb    ecx,DWORD PTR ds:0x42a000
  405d83:	mov    ecx,DWORD PTR [ebp-0x18]
  405d86:	sbb    DWORD PTR ds:0x42d010,0x42c010
  405d90:	xor    ecx,esi
  405d92:	sbb    DWORD PTR ds:0x42a004,0x42d018
  405d9c:	inc    eax
  405d9d:	inc    DWORD PTR [ebp-0x14]
  405da0:	add    ecx,edi
  405da2:	mov    DWORD PTR ds:0x42d01c,0x794d
  405dac:	cmp    eax,ecx
  405dae:	mov    DWORD PTR ds:0x42b004,0x68cc
  405db8:	jb     0x405d04
  405dbe:	and    DWORD PTR ds:0x42b010,0x0
  405dc8:	jmp    0x405ddb
  405dcd:	xor    eax,eax
  405dcf:	or     eax,DWORD PTR ds:0x42b010
  405dd5:	inc    eax
  405dd6:	mov    ds:0x42b010,eax
  405ddb:	cmp    DWORD PTR ds:0x42b010,0x10
  405de2:	jae    0x405e2a
  405de8:	cmp    DWORD PTR ds:0x42b010,0xa
  405def:	jbe    0x405e2a
  405df5:	jmp    0x405e0d
  405dfa:	push   0x42f19b
  405dff:	push   DWORD PTR [ebp-0x28]
  405e02:	push   0x6b57
  405e07:	call   DWORD PTR ds:0x43003b
  405e0d:	cmp    DWORD PTR ds:0x42b010,0x9
  405e14:	jne    0x405e25
  405e1a:	mov    eax,ds:0x42b010
  405e1f:	inc    eax
  405e20:	mov    ds:0x42b010,eax
  405e25:	jmp    0x405dcd
  405e2a:	mov    dl,BYTE PTR [ebp-0x21]
  405e2d:	mov    eax,DWORD PTR [ebp-0x34]
  405e30:	xor    al,0xa4
  405e32:	or     DWORD PTR ds:0x429020,0x7a52
  405e3c:	mov    cl,0x14
  405e3e:	and    DWORD PTR ds:0x42c004,0x42a008
  405e48:	sub    cl,al
  405e4a:	add    dl,cl
  405e4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  405e4f:	xor    cl,0xa4
  405e52:	neg    DWORD PTR ds:0x42d008
  405e58:	sub    cl,0x14
  405e5b:	xor    DWORD PTR ds:0x429014,0x42b01c
  405e65:	ror    dl,cl
  405e67:	xor    eax,eax
  405e69:	mov    eax,DWORD PTR [ebp-0xc]
  405e6c:	add    DWORD PTR ds:0x42c00c,edx
  405e72:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  405e79:	and    DWORD PTR ds:0x42b000,0x0
  405e83:	jmp    0x405e96
  405e88:	xor    eax,eax
  405e8a:	add    eax,DWORD PTR ds:0x42b000
  405e90:	inc    eax
  405e91:	mov    ds:0x42b000,eax
  405e96:	cmp    DWORD PTR ds:0x42b000,0x10
  405e9d:	jae    0x405ede
  405ea3:	cmp    DWORD PTR ds:0x42b000,0x7
  405eaa:	jbe    0x405ede
  405eb0:	jmp    0x405ebe
  405eb5:	push   DWORD PTR [ebp-0x14]
  405eb8:	call   DWORD PTR ds:0x43003f
  405ebe:	cmp    DWORD PTR ds:0x42b000,0x6
  405ec5:	jne    0x405ed9
  405ecb:	xor    eax,eax
  405ecd:	xor    eax,DWORD PTR ds:0x42b000
  405ed3:	inc    eax
  405ed4:	mov    ds:0x42b000,eax
  405ed9:	jmp    0x405e88
  405ede:	mov    eax,DWORD PTR [ebp-0xc]
  405ee1:	mov    ecx,DWORD PTR [ebp-0x28]
  405ee4:	sub    eax,edi
  405ee6:	xor    eax,esi
  405ee8:	cmp    eax,ecx
  405eea:	jne    0x405f14
  405ef0:	mov    eax,DWORD PTR [ebp-0x8]
  405ef3:	mov    ecx,DWORD PTR [ebp-0x10]
  405ef6:	xor    eax,esi
  405ef8:	xor    ecx,esi
  405efa:	sub    eax,ecx
  405efc:	sub    eax,edi
  405efe:	xor    eax,esi
  405f00:	mov    DWORD PTR [ebp-0x8],eax
  405f03:	mov    eax,DWORD PTR [ebp-0x10]
  405f06:	xor    eax,esi
  405f08:	mov    ecx,0xffcd8d94
  405f0d:	sub    ecx,eax
  405f0f:	jmp    0x405f23
  405f14:	mov    eax,DWORD PTR [ebp-0x10]
  405f17:	xor    eax,esi
  405f19:	mov    ecx,0xffcd8d14
  405f1e:	sub    ecx,eax
  405f20:	add    ecx,DWORD PTR [ebp-0xc]
  405f23:	mov    DWORD PTR [ebp-0xc],ecx
  405f26:	mov    eax,DWORD PTR [ebp-0x8]
  405f29:	cmp    eax,0xf89c85b0
  405f2e:	jne    0x403809
  405f34:	mov    DWORD PTR [ebp-0x34],0x9
  405f3b:	mov    ecx,DWORD PTR [ebp+0x8]
  405f3e:	xor    ecx,esi
  405f40:	add    ecx,edi
  405f42:	jmp    0x40cbb6
  405f47:	lea    eax,[ecx+ebx*1]
  405f4a:	mov    DWORD PTR [ebp-0x2c],eax
  405f4d:	mov    eax,DWORD PTR [ebp-0x58]
  405f50:	sub    eax,ecx
  405f52:	mov    DWORD PTR [ebp-0x1c],eax
  405f55:	mov    eax,DWORD PTR [ebp-0x1c]
  405f58:	mov    DWORD PTR [ebp-0x14],eax
  405f5b:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5e:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  405f65:	mov    DWORD PTR [ebp-0x54],eax
  405f68:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x10],eax
  405f79:	jmp    0x4082d5
  405f7e:	lds    ebp,FWORD PTR [ecx]
  405f80:	lea    esi,[esi-0x7f]
  405f83:	(bad)  
  405f84:	jns    0x405fff
  405f86:	jbe    0x405ffc
  405f88:	retf   
  405f89:	mov    dh,al
  405f8b:	es pop edx
  405f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8e:	clc    
  405f8f:	xor    BYTE PTR [edx+0x7a],bh
  405f92:	cmp    ebx,DWORD PTR [edi+0x7a]
  405f95:	jp     0x405f85
  405f97:	lods   al,BYTE PTR ds:[esi]
  405f98:	jl     0x405f85
  405f9a:	fwait
  405f9b:	or     DWORD PTR [edi-0x4e330310],edi
  405fa1:	adc    DWORD PTR [edx-0x6b0337e],edi
  405fa7:	stos   BYTE PTR es:[edi],al
  405fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa9:	xchg   edi,eax
  405faa:	dec    eax
  405fab:	xor    BYTE PTR [ebp-0x5dbb38cd],ah
  405fb1:	inc    BYTE PTR [eax]
  405fb3:	loope  0x406029
  405fb5:	data16 jnp 0x406026
  405fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb9:	pop    ss
  405fba:	push   cs
  405fbb:	cmp    BYTE PTR [edx],0xa8
  405fbe:	mov    cl,0x4a
  405fc0:	fisttp WORD PTR [esi+ecx*4-0x38]
  405fc4:	jl     0x406039
  405fc6:	stos   BYTE PTR es:[edi],al
  405fc7:	shr    BYTE PTR [eax+0x48],1
  405fca:	aaa    
  405fcb:	cmp    eax,0xb80e2f6d
  405fd0:	test   BYTE PTR [edx],dl
  405fd2:	cmp    al,0xe8
  405fd4:	out    0x7f,eax
  405fd6:	push   esi
  405fd7:	int3   
  405fd8:	or     eax,0x395adf3a
  405fdd:	(bad)  
  405fde:	mov    ah,0x1a
  405fe0:	and    BYTE PTR [esi],ah
  405fe2:	sub    al,0x9d
  405fe4:	pop    ss
  405fe5:	es (bad) 
  405fe7:	ficomp DWORD PTR [edx+0x6c0a1362]
  405fed:	inc    edx
  405fee:	add    esp,DWORD PTR [edx]
  405ff0:	mov    ch,0xb2
  405ff2:	cmp    ebx,edx
  405ff4:	les    edi,FWORD PTR [edx]
  405ff6:	pop    esi
  405ff7:	xor    bh,dh
  405ff9:	ror    al,cl
  405ffb:	cmp    al,BYTE PTR [esi+0x45a02513]
  406001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406002:	push   eax
  406003:	repz add bh,BYTE PTR [ebx]
  406006:	mov    esi,0xe341945a
  40600b:	pop    DWORD PTR [edx-0x6204ec08]
  406011:	stc    
  406012:	lods   eax,DWORD PTR ds:[esi]
  406013:	daa    
  406014:	sar    BYTE PTR [ebp-0x71],1
  406017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406018:	daa    
  406019:	pop    ecx
  40601a:	scas   eax,DWORD PTR es:[edi]
  40601b:	or     bx,cx
  40601e:	sti    
  40601f:	mov    eax,0x9f96d6f6
  406024:	int    0xe0
  406026:	inc    edi
  406027:	mov    BYTE PTR [eax+0x44],ah
  40602a:	pop    ecx
  40602b:	xchg   edx,eax
  40602c:	xchg   esp,eax
  40602d:	and    al,0xa9
  40602f:	(bad)  [ebx+0x4a]
  406032:	mov    WORD PTR [edi+ebp*1],gs
  406035:	(bad)  [ebx+0x3a5bef4b]
  40603b:	stos   DWORD PTR es:[edi],eax
  40603c:	or     esp,DWORD PTR [esi-0x5f]
  40603f:	sub    ah,bh
  406041:	mov    bh,0xa8
  406043:	dec    ebx
  406044:	out    dx,al
  406045:	repnz sbb DWORD PTR [ecx],0xfffffff9
  406049:	adc    al,0x4
  40604b:	std    
  40604c:	cmp    DWORD PTR [esi+ecx*1],ebx
  40604f:	add    al,0x81
  406051:	or     ch,0x9f
  406054:	lea    esp,[ebp+0x3]
  406057:	jecxz  0x40600e
  406059:	sbb    DWORD PTR [eax],ebp
  40605b:	dec    ecx
  40605c:	ins    DWORD PTR es:[edi],dx
  40605d:	test   eax,0xcdd267dc
  406062:	aaa    
  406063:	into   
  406064:	push   edx
  406065:	dec    ebx
  406066:	loope  0x406009
  406068:	pop    DWORD PTR [eax]
  40606a:	repnz fwait
  40606c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606d:	cmp    eax,0x712580f
  406072:	call   0x17399e6b
  406077:	icebp  
  406078:	jmp    0x4abbff55
  40607d:	dec    eax
  40607e:	out    dx,eax
  40607f:	ret    0x8323
  406082:	push   cs
  406083:	adc    eax,0xd8926903
  406088:	sti    
  406089:	popa   
  40608a:	adc    ecx,DWORD PTR [edx]
  40608c:	fsub   DWORD PTR [ebp-0x6]
  40608f:	jg     0x40601b
  406091:	call   0xd78:0xf8dca39e
  406098:	fst    DWORD PTR [esi+ecx*2+0x2b]
  40609c:	or     DWORD PTR [ebx-0x433a62de],0xffffff9d
  4060a3:	lock and ah,BYTE PTR [esi]
  4060a6:	jne    0x406074
  4060a8:	jae    0x406078
  4060aa:	shl    BYTE PTR [edi+0x4d14ccd],cl
  4060b0:	fwait
  4060b1:	mov    edi,DWORD PTR [ebx]
  4060b3:	(bad)  
  4060b5:	xchg   ebp,eax
  4060b6:	popa   
  4060b7:	lds    edi,FWORD PTR [ebp+edi*8-0x612a5cde]
  4060be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060bf:	add    esi,DWORD PTR [esi-0x6db583a4]
  4060c5:	dec    ebx
  4060c6:	sbb    bh,bh
  4060c8:	in     eax,dx
  4060c9:	in     eax,0xca
  4060cb:	call   0xbcf8b4e0
  4060d0:	push   edi
  4060d1:	sbb    DWORD PTR [edi+0xf],ecx
  4060d4:	dec    edi
  4060d5:	rcr    DWORD PTR [esi],cl
  4060d7:	mov    cl,0xfe
  4060d9:	inc    edx
  4060da:	sahf   
  4060db:	shl    DWORD PTR [ebp-0x31e1a938],1
  4060e1:	adc    eax,0xa6e0a6b6
  4060e6:	add    al,0x58
  4060e8:	inc    edi
  4060e9:	jae    0x406123
  4060eb:	xchg   DWORD PTR [edx+edx*4],ecx
  4060ee:	push   edx
  4060ef:	loop   0x40610f
  4060f1:	xor    al,0xbf
  4060f3:	jne    0x4060e7
  4060f5:	or     DWORD PTR [ecx+0x38],0xd365867d
  4060fc:	test   eax,0xfcb5c903
  406101:	pop    esi
  406102:	aad    0xa4
  406104:	repnz cmp al,0xd8
  406107:	nop
  406108:	mov    edx,0x6da7bebe
  40610d:	in     eax,dx
  40610e:	inc    ebx
  40610f:	leave  
  406110:	aad    0xb1
  406112:	jo     0x4060f7
  406114:	and    BYTE PTR [ecx],bh
  406116:	idiv   BYTE PTR [ebp+0x478a89f6]
  40611c:	xchg   ebx,eax
  40611d:	pop    ss
  40611e:	adc    eax,0xbb66f8d5
  406123:	les    esi,FWORD PTR [ecx]
  406125:	jns    0x4060e4
  406127:	fwait
  406128:	or     eax,ebp
  40612a:	nop
  40612b:	jge    0x406166
  40612d:	cli    
  40612e:	pop    ebp
  40612f:	repz cmp eax,DWORD PTR [edx+edi*1]
  406133:	loop   0x4061a3
  406135:	jno    0x4061a6
  406137:	(bad)  
  406138:	jno    0x4060e3
  40613a:	pop    edx
  40613b:	jae    0x406143
  40613d:	pminub mm2,QWORD PTR [esi-0x7f409381]
  406144:	or     BYTE PTR [eax-0x4d4f33e9],al
  40614a:	xchg   ecx,eax
  40614b:	dec    esp
  40614c:	icebp  
  40614d:	cmp    ecx,DWORD PTR [ebx-0x6f7f3768]
  406153:	repz cmp BYTE PTR [ebp+0x4c],al
  406157:	mov    ds:0x18a47d89,al
  40615c:	call   0x230ae3e9
  406161:	push   ebx
  406162:	ror    DWORD PTR [eax+0x1b],1
  406165:	jb     0x406197
  406167:	fdivp  st(0),st
  406169:	popa   
  40616a:	sbb    ah,BYTE PTR [ebx]
  40616c:	sbb    bh,cl
  40616e:	sbb    DWORD PTR [ebx-0x2217ff5a],0xffffffb4
  406175:	mov    ebp,0x40de528f
  40617a:	sti    
  40617b:	out    0xba,eax
  40617d:	pop    esi
  40617e:	add    DWORD PTR [ebp-0x48],0x1ac06e43
  406185:	iret   
  406186:	test   DWORD PTR [edx+0x3421d1ee],edx
  40618c:	lea    ebx,[edx-0x3b]
  40618f:	jnp    0x406162
  406191:	and    BYTE PTR [ebp+0x6b],0x8f
  406195:	cs mov esi,0x6bf9267e
  40619b:	xor    eax,0x40a2f984
  4061a0:	and    DWORD PTR [ebx],esi
  4061a2:	dec    ebx
  4061a3:	push   0x490903bb
  4061a8:	and    al,0xcb
  4061aa:	mov    bh,0xa7
  4061ac:	mov    al,0xf
  4061ae:	jp     0x40617a
  4061b0:	popf   
  4061b1:	mov    eax,0x825ecbcd
  4061b6:	shl    BYTE PTR [eax+0x6c],1
  4061b9:	dec    ecx
  4061ba:	(bad)  
  4061bb:	jbe    0x4061f2
  4061bd:	popa   
  4061be:	sub    esp,DWORD PTR [ebx]
  4061c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c2:	and    BYTE PTR [ebx-0x1a],cl
  4061c5:	pop    edx
  4061c6:	std    
  4061c7:	dec    eax
  4061c8:	retf   
  4061c9:	imul   edx,DWORD PTR [ebp+edi*4-0x70],0xffffffa9
  4061ce:	neg    DWORD PTR [edi*4+0x20bbe0fa]
  4061d5:	(bad)  
  4061d6:	ss (bad) 
  4061d8:	jge    0x4061e5
  4061da:	xchg   esi,eax
  4061db:	push   esp
  4061dc:	and    al,BYTE PTR [ecx]
  4061de:	lds    esp,FWORD PTR [esi-0x50c34e01]
  4061e4:	ins    BYTE PTR es:[edi],dx
  4061e5:	mov    edx,0xf63478e0
  4061ea:	jl     0x406229
  4061ec:	outs   dx,BYTE PTR ds:[esi]
  4061ed:	xchg   DWORD PTR [esi+0x50],esp
  4061f0:	iret   
  4061f1:	cmp    ch,al
  4061f3:	jl     0x4061d0
  4061f5:	icebp  
  4061f6:	scas   eax,DWORD PTR es:[edi]
  4061f7:	or     DWORD PTR [ebx-0x4e],ebp
  4061fa:	std    
  4061fb:	inc    ebp
  4061fc:	or     esi,DWORD PTR [edi+0x1a]
  4061ff:	mov    eax,ds:0xf274fd1e
  406204:	mov    edi,DWORD PTR [ebp-0x38]
  406207:	lea    edx,[ecx-0x7f]
  40620a:	dec    ebp
  40620b:	adc    edx,DWORD PTR [eax+ebx*8]
  40620e:	xlat   BYTE PTR ds:[ebx]
  40620f:	idiv   eax
  406211:	outs   dx,DWORD PTR ds:[esi]
  406212:	lahf   
  406213:	fs xchg ebx,eax
  406215:	mov    DWORD PTR [ecx+0x56511b07],esi
  40621b:	and    esi,DWORD PTR [ebx-0x3809d8bd]
  406221:	push   edx
  406222:	out    0x3b,al
  406224:	push   edi
  406225:	nop
  406226:	outs   dx,DWORD PTR fs:[esi]
  406228:	cmp    eax,0xc040289a
  40622d:	cmp    DWORD PTR [edi-0x67],ebx
  406230:	arpl   WORD PTR [edx-0x5dcb9e02],di
  406236:	sub    BYTE PTR [edx+0x53],ch
  406239:	or     al,0x58
  40623b:	loope  0x406281
  40623d:	rcr    DWORD PTR [edi-0x78],0xd6
  406241:	xor    DWORD PTR [edx+0x5b],ebx
  406244:	les    esp,FWORD PTR [edi+ecx*1]
  406247:	add    eax,0x2b1f0ee9
  40624c:	inc    edi
  40624d:	mov    DWORD PTR [edx+ebx*1],0xb6d1d024
  406254:	in     al,dx
  406255:	xchg   edi,eax
  406256:	mov    eax,0xa3cd1fcd
  40625b:	pop    ebx
  40625c:	cmp    cl,BYTE PTR [ebx+edi*8-0x67]
  406260:	lods   eax,DWORD PTR ds:[esi]
  406261:	sbb    DWORD PTR [edx],0xb5e24270
  406267:	mov    ecx,0x9a876b67
  40626c:	test   BYTE PTR [edx],bl
  40626e:	dec    ebx
  40626f:	pusha  
  406270:	mov    ah,0xf4
  406272:	adc    BYTE PTR [esi+ebx*8+0x6e],al
  406276:	cmp    al,0x98
  406278:	push   ebx
  406279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40627a:	imul   edx,DWORD PTR [ecx],0x4d7a8ab0
  406280:	mov    ebx,0xffa3b09c
  406285:	iret   
  406286:	pop    ebx
  406287:	(bad)  
  406288:	xor    BYTE PTR [edx],cl
  40628a:	and    ah,BYTE PTR [ecx]
  40628c:	icebp  
  40628d:	(bad)  
  40628e:	gs lahf 
  406290:	jno    0x406223
  406292:	jg     0x406300
  406294:	std    
  406295:	call   0xfc9f722e
  40629a:	xchg   ebp,eax
  40629b:	mov    esi,DWORD PTR [esi+0x0]
  40629e:	and    eax,0xcfe7d80
  4062a3:	mov    dh,0xe1
  4062a5:	mov    ds:0xb1e71c60,al
  4062aa:	loop   0x4062c6
  4062ac:	fcomp  DWORD PTR [ebx+0x6f]
  4062af:	and    al,0x59
  4062b1:	dec    edx
  4062b2:	sbb    al,0xf3
  4062b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b5:	sub    DWORD PTR [ebp-0x62],ebp
  4062b8:	and    al,dh
  4062ba:	stos   DWORD PTR es:[edi],eax
  4062bb:	mov    ebp,0x243b87e3
  4062c0:	adc    DWORD PTR [ebx-0x67],eax
  4062c3:	xor    BYTE PTR [edx+0x202ea0c0],0x6a
  4062ca:	xor    eax,DWORD PTR [esi+0x3ae6300b]
  4062d0:	xchg   esp,eax
  4062d1:	pusha  
  4062d2:	test   DWORD PTR [ecx+0x45],ebx
  4062d5:	push   ss
  4062d6:	add    BYTE PTR [ecx+0x1d325b3d],al
  4062dc:	mov    edi,0x5ceaab8a
  4062e1:	cmc    
  4062e2:	lds    edx,FWORD PTR [edx+ebx*4]
  4062e5:	pop    DWORD PTR [edi+0x71]
  4062e8:	push   ds
  4062e9:	or     eax,0x7223dc5f
  4062ee:	and    BYTE PTR [esi+eiz*1],0x1c
  4062f2:	jbe    0x406332
  4062f4:	push   edx
  4062f5:	loopne 0x40632d
  4062f7:	xor    DWORD PTR [ebx-0x55],ecx
  4062fa:	push   edx
  4062fb:	repnz stc 
  4062fd:	mov    bl,0x6b
  4062ff:	in     al,dx
  406300:	add    bh,BYTE PTR [esi+esi*1-0x16da2a98]
  406307:	cmp    ah,BYTE PTR [ebx-0x7b]
  40630a:	nop    ebx
  40630d:	cs test al,0x7
  406310:	mov    ecx,0xe19764
  406315:	ins    DWORD PTR es:[edi],dx
  406316:	in     al,dx
  406317:	pop    esp
  406318:	test   al,0xe8
  40631a:	shl    edi,1
  40631c:	fimul  WORD PTR [eax-0x4892887d]
  406322:	in     al,0x1a
  406324:	dec    esp
  406325:	xchg   ebp,eax
  406326:	(bad)  
  406327:	and    bh,ah
  406329:	ror    BYTE PTR [eax+ecx*2+0xf],cl
  40632d:	xchg   ecx,eax
  40632e:	jae    0x4063a8
  406330:	mov    ecx,0xa9a15b2d
  406335:	jno    0x406397
  406337:	es cmp al,0x3d
  40633a:	sbb    eax,0x1c5d0823
  40633f:	int3   
  406340:	rol    BYTE PTR [ebx+0x82ad5b8],1
  406346:	jb     0x4062e6
  406348:	adc    DWORD PTR [edx+ebp*4],edi
  40634b:	out    dx,eax
  40634c:	push   eax
  40634d:	cmp    bh,BYTE PTR [eax-0x4c51f769]
  406353:	and    al,0xbf
  406355:	inc    edi
  406356:	inc    esi
  406357:	xchg   ecx,eax
  406358:	shl    DWORD PTR [eax],1
  40635a:	push   ebp
  40635b:	inc    esp
  40635c:	shl    BYTE PTR [edx-0x71],0x66
  406360:	cmp    ah,BYTE PTR [ecx-0x407c60d7]
  406366:	add    esp,DWORD PTR [ecx+0x23868230]
  40636c:	push   ecx
  40636d:	mov    bl,0x5
  40636f:	sbb    DWORD PTR [edx+0x2a98d66b],esp
  406375:	je     0x4063ce
  406377:	je     0x40630c
  406379:	pop    ds
  40637a:	adc    BYTE PTR [ebp+0x3b],dh
  40637d:	dec    ebx
  40637e:	and    cl,BYTE PTR [edi+0x2a71a61b]
  406384:	and    al,bl
  406386:	inc    esp
  406387:	xchg   DWORD PTR [ebx-0xa5c2c45],eax
  40638d:	mov    esi,DWORD PTR [edi+0x3601b226]
  406393:	inc    edi
  406394:	int    0x46
  406396:	pop    es
  406397:	ins    DWORD PTR es:[edi],dx
  406398:	cmp    al,0xdc
  40639a:	xchg   edx,eax
  40639b:	call   0xc4c50568
  4063a0:	pop    eax
  4063a1:	sub    ah,BYTE PTR [edx+0x69]
  4063a4:	pushf  
  4063a5:	ficomp DWORD PTR [esi]
  4063a7:	(bad)  
  4063a8:	std    
  4063a9:	push   ds
  4063aa:	lock or ah,dl
  4063ad:	ja     0x406389
  4063af:	or     eax,0x7a9e3c39
  4063b4:	mov    esp,0x75df4715
  4063b9:	mov    ecx,DWORD PTR [eax-0x189c7a0d]
  4063bf:	mov    eax,ds:0xbd3f5d5
  4063c4:	mov    ebx,0xf9136281
  4063c9:	dec    esp
  4063ca:	cld    
  4063cb:	push   ss
  4063cc:	inc    edi
  4063cd:	cwde   
  4063ce:	sub    bl,bh
  4063d0:	jbe    0x406354
  4063d2:	cmp    DWORD PTR [esi+eiz*2+0x45],0xffffffc0
  4063d7:	outs   dx,BYTE PTR ds:[esi]
  4063d8:	xchg   esp,eax
  4063d9:	inc    ebp
  4063da:	or     eax,0xb23eabf1
  4063df:	inc    edx
  4063e0:	mov    bh,0x80
  4063e2:	fcmovb st,st(3)
  4063e4:	sbb    dl,bh
  4063e6:	push   ebp
  4063e7:	es pop ebx
  4063e9:	mov    ebx,0x77fff2f1
  4063ee:	lea    ebx,[ebp+0x7b]
  4063f1:	ret    
  4063f2:	mov    bh,0xf3
  4063f4:	pop    ds
  4063f5:	out    dx,al
  4063f6:	xor    edi,ecx
  4063f8:	mov    ebx,0x9fda024a
  4063fd:	mov    ah,0x50
  4063ff:	add    BYTE PTR [ebp-0x12e505af],bh
  406405:	mov    dl,0x1
  406407:	ins    BYTE PTR es:[edi],dx
  406408:	sub    BYTE PTR [ecx+edi*2+0x3ed6ea4a],bh
  40640f:	jns    0x4063f4
  406411:	cmp    BYTE PTR [ebx],0x49
  406414:	push   ecx
  406415:	sub    BYTE PTR [eax+0x2ddc5500],0x6
  40641c:	dec    esp
  40641d:	nop
  40641e:	and    eax,0xc21224dd
  406423:	shl    BYTE PTR [esi+0x5b],cl
  406426:	ret    0x2e1c
  406429:	in     eax,0xbe
  40642b:	popa   
  40642c:	or     DWORD PTR [eax-0x5a889880],esi
  406432:	sub    eax,0x9b298f58
  406437:	(bad)  
  406438:	or     al,0x50
  40643a:	dec    ecx
  40643b:	aaa    
  40643c:	xor    BYTE PTR [eax],bh
  40643e:	sbb    dh,0xdb
  406441:	adc    eax,0x119bbb39
  406446:	gs nop
  406448:	mov    ds:0xce82fd94,eax
  40644d:	lahf   
  40644e:	(bad)  
  40644f:	pop    edi
  406450:	dec    edi
  406451:	xor    eax,0xc795fdd8
  406456:	xchg   ebp,eax
  406457:	loope  0x406427
  406459:	iret   
  40645a:	(bad)  
  40645b:	dec    DWORD PTR [ebp+ebp*2+0xd0724b6]
  406462:	mov    al,0x8
  406464:	shr    DWORD PTR [eax+0x1c],0xf
  406468:	add    bh,BYTE PTR [edx-0x4]
  40646b:	sbb    eax,0x2f077ea3
  406470:	pop    ebp
  406471:	xor    DWORD PTR [ebx],0x67f2e2b4
  406477:	pop    edi
  406478:	inc    ecx
  406479:	jo     0x40645f
  40647b:	cmp    al,BYTE PTR [eax]
  40647d:	push   ds
  40647e:	mov    al,0x8b
  406480:	mov    ah,0x8c
  406482:	push   edx
  406483:	pop    edx
  406484:	or     eax,0x58a7635b
  406489:	lods   eax,DWORD PTR ds:[esi]
  40648a:	mov    dl,0x10
  40648c:	cmp    edi,DWORD PTR [esi]
  40648e:	loop   0x4064b1
  406490:	mov    bh,0x91
  406492:	arpl   WORD PTR [eax+0xc],di
  406495:	dec    esp
  406496:	pop    edi
  406497:	pop    ds
  406498:	mov    bh,0x71
  40649a:	inc    ecx
  40649b:	pusha  
  40649c:	adc    al,0x2b
  40649e:	xlat   BYTE PTR ds:[ebx]
  40649f:	mov    BYTE PTR [eax+0x5a],cl
  4064a2:	loope  0x4064bc
  4064a4:	icebp  
  4064a5:	pop    ecx
  4064a6:	mov    eax,ds:0xd1d44921
  4064ab:	fild   QWORD PTR ds:0x6079ca8
  4064b1:	jl     0x40650d
  4064b3:	jmp    0x360b:0x99456390
  4064ba:	cmp    esp,DWORD PTR ds:0xb0c8d3a1
  4064c0:	inc    esp
  4064c1:	mov    dh,0xb9
  4064c3:	mov    al,ds:0xb9ac40ad
  4064c8:	dec    ecx
  4064c9:	dec    ecx
  4064ca:	add    BYTE PTR [edi+0x5],0x69
  4064ce:	mov    cl,0x1a
  4064d0:	cmp    bh,ch
  4064d2:	mov    esp,fs
  4064d4:	(bad)  
  4064d5:	dec    eax
  4064d6:	dec    ecx
  4064d7:	shl    BYTE PTR [esi-0x5a7549fd],1
  4064dd:	or     esi,DWORD PTR [ebp-0x6282ea19]
  4064e3:	in     al,0xed
  4064e5:	jmp    0x8673bc4e
  4064ea:	out    0x5b,al
  4064ec:	inc    ebp
  4064ed:	mov    dl,0x9f
  4064ef:	jno    0x406522
  4064f1:	je     0x406559
  4064f3:	pusha  
  4064f4:	mov    al,ds:0x9af3ed4e
  4064f9:	xor    al,0x55
  4064fb:	iret   
  4064fc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4064fe:	xor    DWORD PTR [esi-0x409a4883],ecx
  406504:	call   0xe7b8:0xc52dec05
  40650b:	push   0x5ec4d8ff
  406510:	stos   BYTE PTR es:[edi],al
  406511:	call   0x4a0dae70
  406516:	xchg   esi,eax
  406517:	ret    0x8c63
  40651a:	jl     0x38981002
  406520:	mov    bl,0x99
  406522:	out    0xf8,eax
  406524:	aad    0xb5
  406526:	cmp    cl,al
  406528:	dec    ebp
  406529:	xchg   ch,cl
  40652b:	iret   
  40652c:	(bad)  
  40652d:	mov    cl,0xbd
  40652f:	ds dec edx
  406531:	dec    edi
  406532:	mov    ch,0xb0
  406534:	fnstenv [edx-0x76]
  406537:	iret   
  406538:	mov    ah,0x56
  40653a:	xchg   BYTE PTR [ecx+0x7aa82f35],dh
  406540:	fldpi  
  406542:	loope  0x40653d
  406544:	int    0xcf
  406546:	ret    0x89a8
  406549:	outs   dx,DWORD PTR es:[esi]
  40654b:	sti    
  40654c:	and    edi,edi
  40654e:	in     eax,dx
  40654f:	cmc    
  406550:	fadd   QWORD PTR [edx+0x2a]
  406553:	imul   esi,DWORD PTR [eax+edi*4-0x103a3c47],0xfc89366a
  40655e:	sub    ebx,DWORD PTR [ebx+edx*2]
  406561:	test   al,0x1b
  406563:	ret    
  406564:	push   ds
  406565:	sahf   
  406566:	inc    ebx
  406567:	xchg   edx,eax
  406568:	sub    DWORD PTR ds:0x330ff2fb,edi
  40656e:	jmp    0xaeaa:0x4dffc216
  406575:	nop
  406576:	xchg   DWORD PTR [ebx+0x4c],esp
  406579:	call   0xe4c1:0xc500515d
  406580:	ds xchg cl,bl
  406583:	jmp    0x3625eafd
  406588:	fisttp WORD PTR [ebp-0x2b579a8]
  40658e:	add    ebp,DWORD PTR [esi*2-0x7abbc729]
  406595:	pop    ebp
  406596:	push   edi
  406597:	push   0x21ac0269
  40659c:	hlt    
  40659d:	add    ah,ch
  40659f:	scas   eax,DWORD PTR es:[edi]
  4065a0:	sbb    BYTE PTR [eax-0x68],ah
  4065a3:	pop    ss
  4065a4:	xor    eax,0xf7862a03
  4065a9:	rcr    ecx,0x9
  4065ac:	aaa    
  4065ad:	or     BYTE PTR [edi-0x19d943c0],dh
  4065b3:	int    0xf9
  4065b5:	pop    esi
  4065b6:	daa    
  4065b7:	jae    0x40657c
  4065b9:	mov    edx,0x2d6a88b6
  4065be:	inc    esp
  4065bf:	into   
  4065c0:	inc    ecx
  4065c1:	ins    BYTE PTR es:[edi],dx
  4065c2:	mov    ebx,0x196eca1
  4065c7:	scas   eax,DWORD PTR es:[edi]
  4065c8:	retf   0xb397
  4065cb:	and    al,0xb2
  4065cd:	mov    ebx,0xcaec290c
  4065d2:	mov    edi,0xb5ffeb59
  4065d7:	mov    dh,0xad
  4065d9:	stos   BYTE PTR es:[edi],al
  4065da:	pusha  
  4065db:	jns    0x40660b
  4065dd:	or     eax,0xd2033e1b
  4065e2:	je     0x4065d8
  4065e4:	xor    eax,0x5b32871f
  4065e9:	and    eax,0xeba69e54
  4065ee:	mov    esp,0xdf07b32e
  4065f3:	into   
  4065f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f5:	cs add eax,0x14888a90
  4065fb:	pop    edx
  4065fc:	sbb    eax,0x3d073d69
  406601:	int3   
  406602:	add    al,0xc8
  406604:	sub    eax,0x680c6fab
  406609:	enter  0x9f5c,0x29
  40660d:	out    0x15,al
  40660f:	mov    fs,ecx
  406611:	and    DWORD PTR [esi+0x4],edx
  406614:	push   0xffffffd9
  406616:	dec    ecx
  406617:	dec    edx
  406618:	inc    ebx
  406619:	lea    esp,gs:[edx+0x4abe8ff7]
  406620:	fisub  DWORD PTR [edx]
  406622:	jl     0x406689
  406624:	push   ss
  406625:	mov    ?,WORD PTR ds:[ebp+0x2e]
  406629:	das    
  40662a:	push   cs
  40662b:	and    DWORD PTR [eax-0x44],eax
  40662e:	cs ins BYTE PTR es:[edi],dx
  406630:	int    0x46
  406632:	dec    edi
  406633:	adc    eax,0xad61b23f
  406638:	or     ch,BYTE PTR [edx-0x1db7dd5c]
  40663e:	popf   
  40663f:	add    DWORD PTR [esi+0x5e],ebp
  406642:	push   eax
  406643:	push   ebx
  406644:	std    
  406645:	adc    BYTE PTR ds:0x6ab7e0d9,cl
  40664b:	and    bh,BYTE PTR ss:[esi-0x67e507c2]
  406652:	stc    
  406653:	not    BYTE PTR [ebp-0x3d53e0ea]
  406659:	enter  0xb1bc,0x88
  40665d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665f:	sub    al,al
  406661:	push   esp
  406662:	cmp    DWORD PTR [esi],eax
  406664:	fs scas al,BYTE PTR es:[edi]
  406666:	cmp    eax,0x1314fb1d
  40666b:	pop    edx
  40666c:	(bad)  
  40666d:	lods   eax,DWORD PTR ds:[esi]
  40666e:	jle    0x406600
  406670:	adc    ecx,ebx
  406672:	scas   al,BYTE PTR es:[edi]
  406673:	mov    ebp,0x2f24b347
  406678:	mov    ah,0x2c
  40667a:	in     eax,dx
  40667b:	in     eax,0x62
  40667d:	mov    ah,0x70
  40667f:	mov    ds:0xca1bd8da,eax
  406684:	xor    BYTE PTR [ebx+0x76443efa],dh
  40668a:	cli    
  40668b:	cdq    
  40668c:	scas   eax,DWORD PTR es:[edi]
  40668d:	imul   esi,DWORD PTR [edi-0x2891f63a],0xfb6ba452
  406697:	dec    edx
  406698:	test   al,0x32
  40669a:	xor    bh,cl
  40669c:	adc    edi,DWORD PTR [esi]
  40669e:	sbb    eax,0x19818f68
  4066a3:	and    al,ah
  4066a5:	rcl    DWORD PTR ds:[edi+eax*4],0xdf
  4066aa:	mov    dl,0x22
  4066ac:	lods   eax,DWORD PTR ds:[esi]
  4066ad:	ror    DWORD PTR ds:0xc5bdc172,1
  4066b3:	pop    esp
  4066b4:	sbb    DWORD PTR [edx+0x3f92d09b],esi
  4066ba:	sub    dl,bh
  4066bc:	adc    al,0x58
  4066be:	(bad)  
  4066bf:	xlat   BYTE PTR ds:[ebx]
  4066c0:	mov    esp,0xe4867dc1
  4066c5:	xor    eax,0x7d00ec59
  4066ca:	mov    es,WORD PTR ds:0xa2d0b5ea
  4066d0:	into   
  4066d1:	dec    edx
  4066d2:	ret    0xa120
  4066d5:	xchg   DWORD PTR [eax+0x28303c0f],eax
  4066db:	fstp   DWORD PTR ds:0x6556de67
  4066e1:	mov    BYTE PTR gs:[esi+0x2b9489b6],dl
  4066e8:	rol    ebx,cl
  4066ea:	enter  0x1455,0xcc
  4066ee:	xchg   esi,eax
  4066ef:	ss dec ecx
  4066f1:	in     al,0xd
  4066f3:	in     eax,dx
  4066f4:	int3   
  4066f5:	sti    
  4066f6:	pop    eax
  4066f7:	(bad)  
  4066f8:	je     0x4066f1
  4066fa:	fiadd  DWORD PTR [ebx+0x382ec683]
  406700:	jno    0x4066c5
  406702:	neg    eax
  406704:	jge    0x40677e
  406706:	mov    ebx,0xf6f2d4a6
  40670b:	mov    cl,0xf3
  40670d:	sub    bl,cl
  40670f:	outs   dx,BYTE PTR ds:[esi]
  406710:	aad    0xb5
  406712:	xchg   ebp,eax
  406713:	push   ds
  406714:	push   0x4a890863
  406719:	test   eax,0x6d27edc9
  40671e:	mov    eax,ds:0x34106032
  406723:	sub    dl,BYTE PTR [ecx-0x14]
  406726:	inc    ebx
  406727:	push   es
  406728:	and    eax,0xf9aabb29
  40672d:	fidivr DWORD PTR [esi+0xa74d6a0]
  406733:	ds xor edx,edx
  406736:	repnz aaa 
  406738:	jbe    0x40671f
  40673a:	outs   dx,BYTE PTR gs:[esi]
  40673c:	sti    
  40673d:	xor    bh,cl
  40673f:	mov    cl,0x88
  406741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406742:	in     eax,dx
  406743:	xchg   esp,eax
  406744:	out    0x5b,al
  406746:	jbe    0x4066ec
  406748:	shr    DWORD PTR [edx],0xa
  40674b:	sbb    eax,0x1236e35e
  406750:	test   DWORD PTR [esi-0x2c008b0a],edi
  406756:	jns    0x406712
  406758:	add    dh,BYTE PTR [edx*4-0x467f5e0]
  40675f:	js     0x406733
  406761:	sub    al,0x2b
  406763:	push   ecx
  406764:	inc    eax
  406765:	xor    eax,0xd7ac361a
  40676a:	mov    al,BYTE PTR [edx+0x61]
  40676d:	mov    DWORD PTR [esi],ebx
  40676f:	dec    edx
  406770:	mov    ecx,0x6cfb88c7
  406775:	jg     0x4067a2
  406777:	push   es
  406778:	mov    WORD PTR [eax-0x62],?
  40677b:	outs   dx,BYTE PTR ds:[esi]
  40677c:	mov    ebp,0x76fd2231
  406781:	(bad)  
  406782:	cli    
  406783:	xchg   BYTE PTR [esi-0x1a],bl
  406786:	and    cl,bh
  406788:	fmul   st,st(6)
  40678a:	in     al,0x44
  40678c:	push   edx
  40678d:	int3   
  40678e:	pop    esi
  40678f:	push   edx
  406790:	push   esi
  406791:	sbb    eax,0x29e4c8c7
  406796:	adc    eax,0x713b93e2
  40679b:	jns    0x4067ce
  40679d:	jne    0x4067f1
  40679f:	dec    edx
  4067a0:	ins    BYTE PTR es:[edi],dx
  4067a1:	ja     0x40672e
  4067a3:	add    ch,dl
  4067a5:	push   ss
  4067a6:	ss dec esi
  4067a8:	mov    ecx,0x59503aea
  4067ad:	or     bl,dl
  4067af:	pop    ebx
  4067b0:	pop    ebx
  4067b1:	cmp    eax,ebx
  4067b3:	mov    dh,0x24
  4067b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b6:	xor    ebx,DWORD PTR [ecx]
  4067b8:	add    eax,0x6533d775
  4067bd:	push   esi
  4067be:	cli    
  4067bf:	(bad)  
  4067c0:	mov    ebx,0x76f3bc56
  4067c5:	ret    0x5594
  4067c8:	cmp    BYTE PTR [ecx-0x3c],ch
  4067cb:	ret    
  4067cc:	outs   dx,BYTE PTR ds:[esi]
  4067cd:	dec    ecx
  4067ce:	ins    BYTE PTR es:[edi],dx
  4067cf:	inc    eax
  4067d0:	add    dh,BYTE PTR [esi]
  4067d2:	push   edi
  4067d3:	jae    0x406789
  4067d5:	aam    0x3c
  4067d7:	push   ds
  4067d8:	loop   0x406811
  4067da:	pop    edi
  4067db:	in     eax,0x86
  4067dd:	mov    ebp,0x7186d75d
  4067e2:	mov    ah,0xc1
  4067e4:	cmovp  ecx,DWORD PTR [ebx-0x12]
  4067e8:	out    0x3e,eax
  4067ea:	int    0x55
  4067ec:	cmp    BYTE PTR [ebx+0x46],bl
  4067ef:	jg     0x406863
  4067f1:	sub    eax,0xbad65c56
  4067f6:	or     eax,0x5c96af8
  4067fb:	add    DWORD PTR [esp+eax*1-0x70],ebx
  4067ff:	stos   BYTE PTR es:[edi],al
  406800:	sahf   
  406801:	lods   eax,DWORD PTR ds:[esi]
  406802:	mov    eax,ds:0xeb89c22d
  406807:	mov    eax,0x5587c332
  40680c:	in     eax,dx
  40680d:	arpl   WORD PTR [ebx+0x319627cd],bx
  406813:	sahf   
  406814:	(bad)  ds:0x20da464d
  40681a:	(bad)  [esi]
  40681c:	sbb    eax,0x669672ec
  406821:	iretw  
  406823:	addr16 pushf 
  406825:	mov    BYTE PTR [esi],al
  406827:	inc    esi
  406828:	aas    
  406829:	pusha  
  40682a:	xor    BYTE PTR [ecx],ch
  40682c:	out    dx,al
  40682d:	xchg   ecx,eax
  40682e:	outs   dx,BYTE PTR ds:[esi]
  40682f:	out    dx,al
  406830:	dec    edx
  406831:	pop    edx
  406832:	cdq    
  406833:	mov    dl,bh
  406835:	and    ebp,DWORD PTR [edx+ebx*1-0x6bae3444]
  40683c:	test   esi,ecx
  40683e:	stos   DWORD PTR es:[edi],eax
  40683f:	stc    
  406840:	cmc    
  406841:	repnz push esp
  406843:	call   0x299b:0x84e1e1f1
  40684a:	ss leave 
  40684c:	scas   al,BYTE PTR es:[edi]
  40684d:	aas    
  40684e:	sbb    ch,BYTE PTR [ebx-0x484a7f4a]
  406854:	cli    
  406855:	mov    ebp,0x2fd003bb
  40685a:	mov    bh,0xe3
  40685c:	push   es
  40685d:	out    0xc8,eax
  40685f:	jno    0x40686a
  406861:	sbb    DWORD PTR [ecx],edi
  406863:	mov    al,ds:0x94cdfc29
  406868:	xchg   ebx,eax
  406869:	lahf   
  40686a:	scas   al,BYTE PTR es:[edi]
  40686b:	adc    ebp,edi
  40686d:	cli    
  40686e:	(bad)  
  406870:	sub    BYTE PTR [ecx-0x5c4ea7a],0xa3
  406877:	retf   
  406878:	xor    eax,0x3cc51113
  40687d:	sub    eax,0x7332b348
  406882:	add    DWORD PTR [edi-0x80],ebp
  406885:	jb     0x406881
  406887:	call   0x5ce9:0xdb6559d4
  40688e:	dec    ecx
  40688f:	pop    ebp
  406890:	inc    ecx
  406891:	push   ebp
  406892:	mov    bl,0x60
  406894:	cdq    
  406895:	and    DWORD PTR [edx],ecx
  406897:	fldcw  WORD PTR [edx+edx*8-0x78]
  40689b:	fadd   QWORD PTR [esi+eax*2+0x5fb85c45]
  4068a2:	scas   al,BYTE PTR es:[edi]
  4068a3:	ins    BYTE PTR es:[edi],dx
  4068a4:	and    eax,0x1e8ea20e
  4068a9:	test   eax,0x129949d
  4068ae:	fs out dx,al
  4068b0:	div    eax
  4068b2:	ss xor eax,0x3decbfd5
  4068b8:	sub    DWORD PTR [ebx-0x5312f736],edi
  4068be:	pop    ebx
  4068bf:	stc    
  4068c0:	call   0x5a33782d
  4068c5:	in     al,dx
  4068c6:	gs lock xchg esp,eax
  4068c9:	aas    
  4068ca:	dec    DWORD PTR [edx]
  4068cc:	add    al,0x88
  4068ce:	xor    al,0x2
  4068d0:	into   
  4068d1:	fwait
  4068d2:	mov    dh,0xc7
  4068d4:	pop    es
  4068d5:	lds    eax,FWORD PTR [edx+0x64]
  4068d8:	dec    ebp
  4068d9:	pop    ebp
  4068da:	pushf  
  4068db:	sub    DWORD PTR [ebp+0x72],0x74
  4068df:	pop    ds
  4068e0:	sbb    al,BYTE PTR gs:[ebp+0x4c]
  4068e4:	cld    
  4068e5:	jmp    0xce9f:0xd02422f8
  4068ec:	sar    DWORD PTR [edi+ebp*4],1
  4068ef:	std    
  4068f0:	fadd   QWORD PTR [ecx]
  4068f2:	iret   
  4068f3:	sbb    eax,0xe9385c6a
  4068f8:	into   
  4068f9:	test   ebp,edx
  4068fb:	pop    edx
  4068fc:	jp     0x406954
  4068fe:	push   esi
  4068ff:	das    
  406900:	mov    ebp,DWORD PTR [eax]
  406902:	cs dec ecx
  406904:	scas   al,BYTE PTR es:[edi]
  406905:	jmp    0x1b37d7e9
  40690a:	loop   0x406965
  40690c:	mov    eax,ds:0x6dce7281
  406911:	fmul   DWORD PTR [ebx+0x7d]
  406914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406915:	addr16 repz (bad) 
  406918:	mov    ebp,0xe4eef243
  40691d:	or     ch,bl
  40691f:	jbe    0x406911
  406921:	hlt    
  406922:	or     al,0x66
  406924:	push   es
  406925:	(bad)  
  406926:	in     al,dx
  406927:	sub    al,0xb9
  406929:	fisub  DWORD PTR [edi-0x15]
  40692c:	and    eax,0x2e32041a
  406931:	(bad)  
  406932:	push   0x53
  406934:	and    al,0x83
  406936:	add    DWORD PTR [edi+ebx*4],esi
  406939:	or     eax,0x390d97da
  40693e:	sub    cl,BYTE PTR [eax-0x17818f9c]
  406944:	retf   
  406945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406946:	mov    eax,ds:0xe4280f94
  40694b:	push   esi
  40694c:	sar    BYTE PTR [edx-0x32a50b75],cl
  406952:	lock cmc 
  406954:	out    dx,eax
  406955:	dec    esp
  406956:	dec    eax
  406957:	(bad)  
  406958:	cli    
  406959:	sub    edi,DWORD PTR [edx-0x6167d191]
  40695f:	mov    esp,0x47e8d0e4
  406964:	or     bh,BYTE PTR [ebx+0x3cba9b7]
  40696a:	int    0x92
  40696c:	fild   DWORD PTR [esi+0x72]
  40696f:	popf   
  406970:	(bad)  
  406971:	mov    esp,0x9dd289f5
  406976:	add    al,BYTE PTR [edx]
  406978:	xchg   edi,eax
  406979:	ins    BYTE PTR es:[edi],dx
  40697a:	pusha  
  40697b:	mov    ds:0x252595ed,eax
  406980:	sahf   
  406981:	in     eax,dx
  406982:	xor    BYTE PTR [edx-0x9e447d8],dl
  406988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406989:	push   ebx
  40698a:	mov    ebp,0x8e2dad9
  40698f:	xor    DWORD PTR [eax+edi*4-0x48],0x973e62a9
  406997:	es (bad) 
  406999:	xchg   edx,eax
  40699a:	adc    al,dh
  40699c:	ror    BYTE PTR [edx+ebp*8-0x6e],0xb1
  4069a1:	dec    eax
  4069a2:	cwde   
  4069a3:	push   cs
  4069a4:	std    
  4069a5:	pop    edx
  4069a6:	and    eax,0xa49e51fa
  4069ab:	test   DWORD PTR [edi],edi
  4069ad:	cwde   
  4069ae:	fmul   QWORD PTR [ebx+0x12ff0fb3]
  4069b4:	ins    BYTE PTR es:[edi],dx
  4069b5:	pop    gs
  4069b7:	push   eax
  4069b8:	cld    
  4069b9:	aam    0x88
  4069bb:	pop    ds
  4069bc:	mov    eax,0xc82b34c9
  4069c1:	outs   dx,DWORD PTR ds:[esi]
  4069c2:	adc    DWORD PTR [edx+0x4a],edx
  4069c5:	lea    esp,[ebx-0x73]
  4069c8:	ret    0x421d
  4069cb:	xchg   BYTE PTR [esi],dh
  4069cd:	in     al,0x33
  4069cf:	push   edx
  4069d0:	jge    0x406a29
  4069d2:	pusha  
  4069d3:	test   dh,dl
  4069d5:	mov    bl,0x33
  4069d7:	call   0x50e703fc
  4069dc:	xchg   DWORD PTR [ebx-0x80],ebx
  4069df:	les    eax,FWORD PTR [edi+ebp*2]
  4069e2:	ins    BYTE PTR es:[edi],dx
  4069e3:	push   edx
  4069e4:	fcom   DWORD PTR [eax-0x6f85474c]
  4069ea:	leave  
  4069eb:	or     edi,DWORD PTR [edi+0x6c05d5cf]
  4069f1:	in     eax,dx
  4069f2:	mov    edx,0xeda0a6e3
  4069f7:	push   edi
  4069f8:	fadd   QWORD PTR [edi+0x26]
  4069fb:	fimul  WORD PTR [ebp+edx*8+0x4]
  4069ff:	test   DWORD PTR [ebx-0x70],esp
  406a02:	stos   BYTE PTR es:[edi],al
  406a03:	(bad)  
  406a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a05:	push   ss
  406a06:	sti    
  406a07:	inc    bx
  406a09:	sbb    BYTE PTR [ebx+0x7e],al
  406a0c:	ins    BYTE PTR es:[edi],dx
  406a0d:	pusha  
  406a0e:	mov    bh,0xdf
  406a10:	lods   eax,DWORD PTR cs:[esi]
  406a12:	mov    BYTE PTR [ebx+0x17],dl
  406a15:	cmp    bh,BYTE PTR [esi+0x46909af2]
  406a1b:	jmp    0x74e9:0x7447ebd4
  406a22:	dec    edx
  406a23:	xchg   ebp,eax
  406a24:	xchg   esi,eax
  406a25:	push   0xd
  406a27:	adc    DWORD PTR [edi-0x8],0x49da03a8
  406a2e:	xchg   edi,eax
  406a2f:	aas    
  406a30:	arpl   WORD PTR [esi],bp
  406a32:	xlat   BYTE PTR ds:[ebx]
  406a33:	push   0xffffffaf
  406a35:	retf   0x6356
  406a38:	scas   eax,DWORD PTR es:[edi]
  406a39:	jmp    FWORD PTR [edx]
  406a3b:	or     al,0x93
  406a3d:	es push 0x277625f1
  406a43:	mov    bl,ah
  406a45:	mov    ecx,0x35e10c26
  406a4a:	scas   al,BYTE PTR es:[edi]
  406a4b:	xchg   esp,eax
  406a4c:	mov    esi,0x4599f891
  406a51:	fs cmp eax,0x9c192af
  406a57:	repnz add al,0x2a
  406a5a:	jns    0x406a5a
  406a5c:	mov    bh,0xc4
  406a5e:	adc    ebx,ebx
  406a60:	retf   
  406a61:	int    0x7
  406a63:	push   cs
  406a64:	and    esi,DWORD PTR [eax-0x5b]
  406a67:	push   edx
  406a68:	add    eax,0x4d52f3a1
  406a6d:	out    0x75,eax
  406a6f:	push   ebx
  406a70:	cmp    BYTE PTR [esi+0x2739ff22],0xf6
  406a77:	dec    ebx
  406a78:	stc    
  406a79:	je     0x406a9b
  406a7b:	addr16 push ds
  406a7d:	jg     0x406a0b
  406a7f:	fstp   TBYTE PTR [ebx-0x7c]
  406a82:	retf   
  406a83:	push   esi
  406a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a85:	push   es
  406a86:	push   ebx
  406a87:	outs   dx,BYTE PTR ds:[esi]
  406a88:	sub    edi,ecx
  406a8a:	inc    edx
  406a8b:	iret   
  406a8c:	jbe    0x406adf
  406a8e:	cmp    al,0xd7
  406a90:	fidiv  DWORD PTR [ecx]
  406a92:	mov    ecx,0x6833afe9
  406a97:	daa    
  406a98:	(bad)  
  406a99:	ins    BYTE PTR es:[edi],dx
  406a9a:	adc    eax,0xd9e78756
  406a9f:	mov    ch,0xf4
  406aa1:	mov    al,ds:0x869089c7
  406aa6:	inc    esi
  406aa7:	mov    esp,0x7f3e8fa8
  406aac:	xchg   BYTE PTR [eax],bl
  406aae:	pop    esi
  406aaf:	and    DWORD PTR [eax-0x72],ebx
  406ab2:	push   es
  406ab3:	dec    ebp
  406ab4:	push   ds
  406ab5:	ins    BYTE PTR es:[edi],dx
  406ab6:	or     al,BYTE PTR [ebp-0x7c]
  406ab9:	into   
  406aba:	xchg   esp,eax
  406abb:	cmc    
  406abc:	adc    bh,dh
  406abe:	jge    0x406a5d
  406ac0:	inc    edx
  406ac1:	pop    ecx
  406ac2:	jne    0x406ad5
  406ac4:	sub    DWORD PTR [edx+0x17efceca],esp
  406aca:	mov    bl,0x83
  406acc:	clc    
  406acd:	ret    0x6773
  406ad0:	adc    ch,BYTE PTR [esi+0x37d45ef]
  406ad6:	push   cs
  406ad7:	jl     0x406b1c
  406ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ada:	sbb    ebx,DWORD PTR [esi-0x28]
  406add:	pusha  
  406ade:	mov    bl,0xf3
  406ae0:	repz and dh,BYTE PTR [ebp-0x70ca1020]
  406ae7:	cdq    
  406ae8:	retf   0x7236
  406aeb:	fwait
  406aec:	mov    eax,DWORD PTR [edi]
  406aee:	inc    DWORD PTR [ecx-0x60ba2d64]
  406af4:	xchg   ebx,eax
  406af5:	or     bl,BYTE PTR [ebx-0x7f]
  406af8:	add    al,BYTE PTR [ebx+edx*8-0x2e618da2]
  406aff:	or     BYTE PTR [esi],0xf4
  406b02:	mov    esp,0x6234188f
  406b07:	outs   dx,DWORD PTR ds:[esi]
  406b08:	add    eax,0x10dfc60f
  406b0d:	and    edx,esp
  406b0f:	push   esi
  406b10:	sbb    al,0xeb
  406b12:	test   al,0x36
  406b14:	call   0x93e35f87
  406b19:	scas   al,BYTE PTR es:[edi]
  406b1a:	shl    bl,0x5d
  406b1d:	imul   DWORD PTR [edi-0x5c1ff9dc]
  406b23:	int3   
  406b24:	cli    
  406b25:	call   0x1419a0d4
  406b2a:	in     eax,dx
  406b2b:	pop    ds
  406b2c:	pushf  
  406b2d:	retf   0x6235
  406b30:	add    ecx,esp
  406b32:	jbe    0x406ae8
  406b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b35:	imul   edx,DWORD PTR [edi],0x46693861
  406b3b:	leave  
  406b3c:	mov    eax,0x8c5d3c8c
  406b41:	popa   
  406b42:	or     ebp,DWORD PTR [ebp-0x2deb104]
  406b48:	out    dx,al
  406b49:	hlt    
  406b4a:	mov    bh,0x24
  406b4c:	push   0x93b30ac1
  406b51:	sbb    eax,0x28e37a9c
  406b57:	and    al,0xdf
  406b59:	(bad)  
  406b5a:	mov    ds:0x5794578a,eax
  406b5f:	jmp    0x406b7b
  406b61:	push   cs
  406b62:	dec    esp
  406b63:	pop    ss
  406b64:	icebp  
  406b65:	adc    BYTE PTR [eax+0x2a],cl
  406b68:	shl    DWORD PTR [ebp+0x6c],0x2c
  406b6c:	imul   eax,DWORD PTR [ebx-0x22d15828],0xffffffbb
  406b73:	or     esp,DWORD PTR [esi+0x30]
  406b76:	add    DWORD PTR [ecx],edi
  406b78:	inc    edi
  406b79:	mov    edi,0x11b49b8a
  406b7e:	mov    al,ds:0xe4760859
  406b83:	inc    esi
  406b84:	dec    ebx
  406b85:	and    cl,BYTE PTR [ebx+0x41]
  406b88:	bound  ebx,QWORD PTR [edx-0x71]
  406b8b:	ficomp WORD PTR [edx-0x408aa052]
  406b91:	cli    
  406b92:	push   0xffffffec
  406b94:	mov    eax,ds:0x29174868
  406b99:	aam    0x1b
  406b9b:	xchg   esp,eax
  406b9c:	fcomp  QWORD PTR [edx]
  406b9e:	repnz nop
  406ba0:	test   DWORD PTR fs:[eax],edi
  406ba3:	push   ss
  406ba4:	pop    ds
  406ba5:	sub    edi,DWORD PTR [edx]
  406ba7:	loopne 0x406b9d
  406ba9:	jmp    0x528e:0xb18712d0
  406bb0:	sub    bh,BYTE PTR [eax]
  406bb2:	addr16 dec ecx
  406bb4:	jge    0x406c10
  406bb6:	inc    esi
  406bb7:	int3   
  406bb8:	jno    0x406c22
  406bba:	sbb    eax,0x32441c63
  406bbf:	sbb    esi,DWORD PTR [ecx-0x35]
  406bc2:	aas    
  406bc3:	add    BYTE PTR [ecx+ecx*2-0x547f198a],al
  406bca:	lods   al,BYTE PTR ds:[esi]
  406bcb:	loope  0x406b81
  406bcd:	mov    al,BYTE PTR [eax]
  406bcf:	xchg   dh,bl
  406bd1:	sub    al,0x8b
  406bd3:	popa   
  406bd4:	fs addr16 jp 0x406c03
  406bd8:	and    BYTE PTR [edi],al
  406bda:	jl     0xb3695c3c
  406be0:	call   0x8c44:0x8a71a5aa
  406be7:	repz std 
  406be9:	sbb    cl,BYTE PTR [edx]
  406beb:	(bad)  
  406bec:	jmp    0xbcf65f5c
  406bf1:	xor    BYTE PTR [ebx+0x7a727b74],dl
  406bf7:	repnz xor BYTE PTR [edi],bl
  406bfa:	push   cs
  406bfb:	xor    BYTE PTR cs:[edx+0x64dbd642],0x81
  406c03:	jns    0x406c05
  406c05:	inc    esi
  406c06:	push   ecx
  406c07:	inc    ebp
  406c08:	mov    cl,0x1c
  406c0a:	pop    ebp
  406c0b:	shr    DWORD PTR [ebx-0x1b5fe154],1
  406c11:	pusha  
  406c12:	cmovb  esi,DWORD PTR [ebp-0x59]
  406c16:	adc    dh,BYTE PTR [eax+ebp*4-0x2c]
  406c1a:	cmp    ch,cl
  406c1c:	jmp    0x6d6d22bb
  406c21:	frstpm(287 only) 
  406c23:	shl    BYTE PTR [edi],1
  406c25:	xor    al,0xa8
  406c27:	add    eax,0xe38649a6
  406c2c:	xor    al,0x5d
  406c2e:	ds clc 
  406c30:	cmp    eax,0x123f9aa1
  406c35:	adc    esp,esp
  406c37:	in     al,0x23
  406c39:	lods   eax,DWORD PTR ds:[esi]
  406c3a:	jg     0x406cb6
  406c3c:	loopne 0x406c0d
  406c3e:	retf   
  406c3f:	out    0x92,eax
  406c41:	in     eax,0x96
  406c43:	and    al,0xf3
  406c45:	sbb    eax,0x62c71ce3
  406c4a:	mov    bl,0x45
  406c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4d:	inc    esi
  406c4e:	bound  edx,QWORD PTR [ebx+0x54cfccf9]
  406c54:	ja     0x406c68
  406c56:	inc    ebp
  406c57:	gs pop es
  406c59:	ss mov cl,0xd7
  406c5c:	pushf  
  406c5d:	push   0x3c7e0d7a
  406c62:	jle    0x406c93
  406c64:	cdq    
  406c65:	xchg   ebx,eax
  406c66:	fnstenv [ecx+ebx*4]
  406c69:	cld    
  406c6a:	loopne 0x406c6b
  406c6c:	cdq    
  406c6d:	mov    ds:0x5ad32642,eax
  406c72:	fst    QWORD PTR [eax+0x3e097ad1]
  406c78:	pop    ebx
  406c79:	cmp    esp,edx
  406c7b:	stos   DWORD PTR es:[edi],eax
  406c7c:	jg     0x406c91
  406c7e:	(bad)  
  406c7f:	stos   BYTE PTR es:[edi],al
  406c80:	mov    ecx,0xf897a947
  406c85:	(bad)  
  406c86:	mov    ebp,0x32863b9e
  406c8b:	lea    esp,[eax-0x5c1dcec0]
  406c91:	jns    0x406c41
  406c93:	jo     0x406c5e
  406c95:	jge    0x406cf9
  406c97:	push   edi
  406c98:	mov    eax,0x94f09277
  406c9d:	jle    0x406c63
  406c9f:	xchg   esp,eax
  406ca0:	js     0x406c8f
  406ca2:	inc    ebx
  406ca3:	jp     0x406c53
  406ca5:	aaa    
  406ca6:	push   DWORD PTR [bx+si]
  406ca9:	jp     0x406c69
  406cab:	pushf  
  406cac:	sti    
  406cad:	pand   mm3,mm2
  406cb0:	mov    edi,0x46c655c7
  406cb5:	mov    ebp,DWORD PTR [ebx+edx*4-0x6b124602]
  406cbc:	hlt    
  406cbd:	ins    BYTE PTR es:[edi],dx
  406cbe:	cmp    edi,DWORD PTR [edi+0x5c]
  406cc1:	enter  0xe489,0x50
  406cc5:	pop    edx
  406cc6:	mov    dl,0x8c
  406cc8:	retf   0x7d56
  406ccb:	xor    ebp,DWORD PTR [eax+eax*4-0xe425018]
  406cd2:	arpl   WORD PTR [eax],bp
  406cd4:	fidivr WORD PTR [eax+0x1ae590e8]
  406cda:	outs   dx,DWORD PTR ds:[esi]
  406cdb:	(bad)
  406ce0:	(bad)  
  406ce1:	mov    al,ds:0x67454dcf
  406ce6:	rol    dh,1
  406ce8:	fnstcw WORD PTR [ebx-0x2e6c88b5]
  406cee:	xor    al,0x97
  406cf0:	cmp    dl,BYTE PTR gs:[ebx-0x59667048]
  406cf7:	mov    ebx,0x2f9a0839
  406cfc:	imul   eax,DWORD PTR [edx+0x6052e58d],0x91c59a31
  406d06:	inc    esp
  406d07:	stos   DWORD PTR es:[edi],eax
  406d08:	retf   
  406d09:	mov    ah,0xcf
  406d0b:	dec    ebx
  406d0c:	inc    esp
  406d0d:	ins    BYTE PTR es:[edi],dx
  406d0e:	sbb    BYTE PTR [ecx+0x4664e8cb],0x1b
  406d15:	xor    BYTE PTR [eax-0x7169087c],ch
  406d1b:	adc    dl,bl
  406d1d:	sahf   
  406d1e:	sbb    eax,0x7445ad34
  406d23:	pop    ss
  406d24:	xor    DWORD PTR [ebx+eax*2+0x3a7d30cb],ecx
  406d2b:	cs jecxz 0x406d72
  406d2e:	test   DWORD PTR [edx],ebx
  406d30:	enter  0x7643,0x3d
  406d34:	xchg   esi,eax
  406d35:	and    BYTE PTR [ecx-0x7ef051dc],dl
  406d3b:	inc    ebp
  406d3c:	adc    DWORD PTR [edi+0x3a00cbfc],esi
  406d42:	xchg   edi,eax
  406d43:	jmp    0x406d94
  406d45:	es jmp 0x406d04
  406d48:	sbb    BYTE PTR [edi],cl
  406d4a:	add    WORD PTR ss:[ebp+0x43122a55],bx
  406d52:	shr    BYTE PTR [ecx-0x1f5b0a43],0x1b
  406d59:	xchg   esi,eax
  406d5a:	sbb    al,BYTE PTR [ebx+0x48295e5a]
  406d60:	pushf  
  406d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d62:	jo     0x406d53
  406d64:	fld    st(3)
  406d66:	xchg   esi,eax
  406d67:	in     al,dx
  406d68:	dec    ebp
  406d69:	scas   al,BYTE PTR es:[edi]
  406d6a:	jb     0x406d7f
  406d6c:	gs iret 
  406d6e:	push   edx
  406d6f:	pusha  
  406d70:	pop    ss
  406d71:	xor    eax,0xad43c15d
  406d76:	loop   0x406d92
  406d78:	sbb    ecx,DWORD PTR [eax+0x36]
  406d7b:	hlt    
  406d7c:	adc    ebp,DWORD PTR ds:0xaf1c9b75
  406d82:	ins    DWORD PTR es:[edi],dx
  406d83:	repz lahf 
  406d85:	sahf   
  406d86:	mov    bl,BYTE PTR [eax]
  406d88:	imul   eax,DWORD PTR [eax-0xd],0x19
  406d8c:	and    edi,DWORD PTR [edi]
  406d8e:	sub    al,0x39
  406d90:	sbb    DWORD PTR [edi],edx
  406d92:	cwde   
  406d93:	je     0x406d38
  406d95:	push   es
  406d96:	jle    0x318a48c0
  406d9c:	fs leave 
  406d9e:	mov    bh,ch
  406da0:	pop    ecx
  406da1:	pop    edi
  406da2:	xor    al,0x81
  406da4:	in     al,dx
  406da5:	inc    ebx
  406da6:	loope  0x406ddb
  406da8:	ins    BYTE PTR es:[edi],dx
  406da9:	or     eax,0x1370660b
  406dae:	out    0xe3,eax
  406db0:	xchg   BYTE PTR [edi-0x5c812abc],ch
  406db6:	add    ch,cl
  406db8:	cmp    dh,BYTE PTR [edx]
  406dba:	mov    cl,0xeb
  406dbc:	sahf   
  406dbd:	adc    al,BYTE PTR [ebp+0x5c]
  406dc0:	in     eax,dx
  406dc1:	jbe    0x406e02
  406dc3:	fucomp st(1)
  406dc5:	jmp    0x1646:0xecf25794
  406dcc:	arpl   dx,bx
  406dce:	imul   esp,ebx,0x6521938a
  406dd4:	out    0xc,al
  406dd6:	mov    bh,0x30
  406dd8:	sub    al,dh
  406dda:	sub    BYTE PTR [esi+edx*1+0x43],al
  406dde:	mov    BYTE PTR [edx+0x27410009],ch
  406de4:	mov    ebx,0xa331bdb
  406de9:	int3   
  406dea:	loop   0x406e4a
  406dec:	in     al,0x68
  406dee:	or     ch,BYTE PTR [edx+0x76]
  406df1:	push   es
  406df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df3:	xchg   esi,eax
  406df4:	int    0x93
  406df6:	data16 fsub st,st(0)
  406df9:	stc    
  406dfa:	loop   0x406dc2
  406dfc:	into   
  406dfd:	pop    ecx
  406dfe:	push   esp
  406dff:	imul   esp,edi,0x6d41f395
  406e05:	xor    ebp,edi
  406e07:	mov    bh,0xf4
  406e09:	xor    BYTE PTR [esi-0x1c246d74],ch
  406e0f:	lea    edi,[edi]
  406e11:	and    BYTE PTR [edx],dl
  406e13:	xchg   ebp,eax
  406e14:	jp     0x406e1d
  406e16:	pop    ds
  406e17:	xchg   ebx,eax
  406e18:	sar    ah,cl
  406e1a:	(bad)  
  406e1b:	sahf   
  406e1c:	sahf   
  406e1d:	jecxz  0x406e57
  406e1f:	jo     0x406e02
  406e21:	mov    WORD PTR [eax-0x26959fdf],ss
  406e27:	push   ebp
  406e28:	pop    es
  406e29:	fldcw  WORD PTR [ebp+ecx*8+0x5d]
  406e2d:	sub    esp,esi
  406e2f:	or     ecx,DWORD PTR [eax+ebp*1-0x1b309697]
  406e36:	shl    BYTE PTR es:[edx],1
  406e39:	adc    dh,dh
  406e3b:	jmp    0x406e4f
  406e3d:	in     eax,dx
  406e3e:	cmp    ah,0x93
  406e41:	mov    ebp,DWORD PTR [ebp+0x32418a16]
  406e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e48:	adc    BYTE PTR [ebx],0x40
  406e4b:	sub    bh,ah
  406e4d:	sub    DWORD PTR [eax],ebx
  406e4f:	leave  
  406e50:	(bad)  [eax-0x3c]
  406e53:	dec    eax
  406e54:	ja     0x406e76
  406e56:	xchg   ecx,eax
  406e57:	xlat   BYTE PTR ds:[ebx]
  406e58:	sbb    dh,BYTE PTR [esi]
  406e5a:	mov    eax,0x652e9712
  406e5f:	inc    edi
  406e60:	inc    ebx
  406e61:	in     eax,0x5e
  406e63:	or     al,0xf3
  406e65:	adc    eax,0x553bae08
  406e6a:	ret    0xcf35
  406e6d:	jmp    0x3462:0xf3f8b180
  406e74:	adc    BYTE PTR [ebx+eax*4],cl
  406e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e78:	dec    esp
  406e79:	popf   
  406e7a:	inc    edx
  406e7b:	sbb    ah,cl
  406e7d:	inc    esi
  406e7e:	jl     0x406ee2
  406e80:	test   DWORD PTR [edx-0x2ad25cb9],ebp
  406e86:	or     eax,0x28858630
  406e8b:	sub    ecx,DWORD PTR [ebp+ecx*1+0x77]
  406e8f:	sahf   
  406e90:	sub    al,0x6
  406e92:	adc    al,BYTE PTR [ebx]
  406e94:	les    edx,FWORD PTR [eax]
  406e96:	icebp  
  406e97:	mov    ch,0xf3
  406e99:	mov    esi,0xcceb86ce
  406e9e:	pusha  
  406e9f:	pop    es
  406ea0:	inc    ecx
  406ea1:	or     BYTE PTR [edi],bl
  406ea3:	xchg   edx,eax
  406ea4:	pop    esi
  406ea5:	push   0x863c2099
  406eaa:	mov    bh,BYTE PTR [edi-0x97244a6]
  406eb0:	fdiv   QWORD PTR [eax]
  406eb2:	int    0x2f
  406eb4:	dec    ebp
  406eb5:	push   0x44
  406eb7:	in     al,0xcf
  406eb9:	leave  
  406eba:	push   esi
  406ebb:	repz popf 
  406ebd:	or     esp,DWORD PTR [edi+0x62]
  406ec0:	test   al,0x27
  406ec2:	and    al,0x18
  406ec4:	repnz push ss
  406ec6:	push   eax
  406ec7:	ins    BYTE PTR es:[edi],dx
  406ec8:	rcr    BYTE PTR [ecx],1
  406eca:	das    
  406ecb:	or     BYTE PTR [eax],bh
  406ecd:	addr16 inc ebx
  406ecf:	mov    bl,0xcb
  406ed1:	lahf   
  406ed2:	push   cs
  406ed3:	push   es
  406ed4:	mov    ds:0xbf7938b6,al
  406ed9:	daa    
  406eda:	pop    es
  406edb:	inc    ebx
  406edc:	ret    
  406edd:	pop    esp
  406ede:	(bad)  
  406edf:	repz out 0x58,eax
  406ee2:	mov    ds:0x7098fb30,eax
  406ee7:	(bad)  
  406ee8:	jp     0x406ec0
  406eea:	cs test eax,esp
  406eed:	push   cs
  406eee:	mov    ah,dl
  406ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef1:	xor    BYTE PTR [edi],cl
  406ef3:	out    0x30,al
  406ef5:	loop   0x406eb0
  406ef7:	lahf   
  406ef8:	adc    DWORD PTR [esi+0x72],ebx
  406efb:	dec    edi
  406efc:	outs   dx,BYTE PTR ds:[esi]
  406efd:	pusha  
  406efe:	lods   al,BYTE PTR ds:[esi]
  406eff:	in     al,dx
  406f00:	sbb    BYTE PTR ds:0xf23855a2,bl
  406f06:	pop    esi
  406f07:	inc    eax
  406f08:	popf   
  406f09:	xchg   DWORD PTR [edi],esi
  406f0b:	cmc    
  406f0c:	and    eax,0xe37f88aa
  406f11:	pop    es
  406f12:	not    BYTE PTR [edx]
  406f14:	pop    edx
  406f15:	fst    QWORD PTR [edx+0x24bfe53e]
  406f1b:	dec    edi
  406f1c:	jns    0x406e9e
  406f1e:	push   ebp
  406f1f:	or     bl,BYTE PTR [edi]
  406f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f22:	xor    ecx,DWORD PTR [eax]
  406f24:	adc    BYTE PTR [esi-0x7a2b53f8],cl
  406f2a:	or     dh,BYTE PTR ds:0xe0be8759
  406f30:	repz sahf 
  406f32:	or     ecx,DWORD PTR [ecx+ecx*8]
  406f35:	adc    ebx,ebp
  406f37:	sahf   
  406f38:	(bad)  
  406f39:	iret   
  406f3a:	inc    edx
  406f3b:	or     DWORD PTR [esi],0x4c
  406f3e:	add    bl,BYTE PTR [edx+0x590a51b4]
  406f44:	sahf   
  406f45:	mov    eax,0x50d255a0
  406f4a:	hlt    
  406f4b:	fst    DWORD PTR [esi]
  406f4d:	stos   BYTE PTR es:[edi],al
  406f4e:	js     0x406edb
  406f50:	in     eax,dx
  406f51:	ss fs repz mov ah,0xd2
  406f56:	cmp    eax,0x74a5bf34
  406f5b:	into   
  406f5c:	add    ecx,DWORD PTR [ecx-0x13]
  406f5f:	scas   eax,DWORD PTR es:[edi]
  406f60:	stos   DWORD PTR es:[edi],eax
  406f61:	dec    ebx
  406f62:	cmc    
  406f63:	mov    WORD PTR [esi-0xe],ds
  406f66:	(bad)  
  406f67:	mov    ch,0x75
  406f69:	and    edx,edi
  406f6b:	mov    ebp,0x498d3563
  406f70:	add    eax,0xcad65400
  406f75:	dec    ebx
  406f76:	pop    eax
  406f77:	leave  
  406f78:	inc    edi
  406f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f7a:	xchg   esp,eax
  406f7b:	mov    ebx,0xc11c3f09
  406f80:	add    cl,al
  406f82:	mov    edi,0xbc2b3ec9
  406f87:	nop
  406f88:	fcomp  QWORD PTR [ebx+0x51]
  406f8b:	xchg   esi,eax
  406f8c:	xchg   esi,eax
  406f8d:	and    al,0xab
  406f8f:	lds    esp,FWORD PTR [edx+0x4e7f412f]
  406f95:	inc    esp
  406f96:	cld    
  406f97:	jmp    0x406f7b
  406f99:	mov    bh,0x1d
  406f9b:	push   0xfc41762
  406fa0:	pop    ss
  406fa1:	sub    al,0x5f
  406fa3:	mov    dh,0x74
  406fa5:	mov    al,ss:0xe22f69c2
  406fab:	jp     0x406f3a
  406fad:	xor    eax,0x2bbb470b
  406fb2:	loopne 0x406f3e
  406fb4:	push   esp
  406fb5:	mov    ah,0xf9
  406fb7:	push   0xfffffffb
  406fb9:	push   eax
  406fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbb:	lods   al,BYTE PTR ds:[esi]
  406fbc:	int3   
  406fbd:	and    bl,BYTE PTR [esi-0xa]
  406fc0:	das    
  406fc1:	and    eax,0x8484177d
  406fc6:	adc    BYTE PTR [edx+0x439ec430],dl
  406fcc:	gs dec esi
  406fce:	popf   
  406fcf:	dec    eax
  406fd0:	inc    edx
  406fd1:	mov    al,ds:0x1d3a44cd
  406fd6:	outs   dx,BYTE PTR ds:[esi]
  406fd7:	inc    esp
  406fd8:	inc    ebp
  406fd9:	pop    esi
  406fda:	retf   0x5b71
  406fdd:	jmp    0xf660:0xe38ee82c
  406fe4:	xchg   ebx,eax
  406fe5:	inc    ebp
  406fe6:	pusha  
  406fe7:	push   es
  406fe8:	bswap  ecx
  406fea:	loopne 0x406fd0
  406fec:	pushf  
  406fed:	pop    ecx
  406fee:	out    0xe7,al
  406ff0:	cli    
  406ff1:	cmp    BYTE PTR [ebp-0x74],dh
  406ff4:	ja     0x407051
  406ff6:	je     0x407027
  406ff8:	out    0x37,eax
  406ffa:	and    edx,0x6bf6195
  407000:	retf   
  407001:	rol    BYTE PTR [eax+eiz*8],1
  407004:	das    
  407005:	js     0x40700e
  407007:	or     DWORD PTR [esi],esi
  407009:	sbb    dh,BYTE PTR [edx+0x179a288b]
  40700f:	xor    esi,DWORD PTR [si+0x1c6c]
  407014:	dec    edi
  407015:	jno    0x40702f
  407017:	bound  esp,QWORD PTR [edi+0x19c37a36]
  40701d:	pusha  
  40701e:	mov    ah,0x23
  407020:	and    eax,DWORD PTR [ebp+0x630af3b4]
  407026:	push   es
  407027:	jb     0x406ff9
  407029:	popf   
  40702a:	inc    esp
  40702b:	out    dx,eax
  40702c:	imul   ecx,DWORD PTR [edi+0x70],0xffffff99
  407030:	and    eax,0xb97d8fcc
  407035:	pop    esp
  407036:	sub    ecx,DWORD PTR [ecx+0x41]
  407039:	push   esi
  40703a:	mov    WORD PTR [ecx],?
  40703c:	mov    ds:0x9107c167,eax
  407041:	ficom  DWORD PTR [eax+0x61146e4d]
  407047:	xchg   edx,eax
  407048:	int3   
  407049:	out    0x97,al
  40704b:	jle    0x407035
  40704d:	imul   ecx,DWORD PTR [eax+0x3],0xa
  407051:	mov    bl,0xef
  407053:	jmp    0xf1b88db3
  407058:	push   0x43a8b3ba
  40705d:	rol    DWORD PTR [ebp+ebp*2-0x52],0x49
  407062:	mov    dh,0x52
  407064:	mov    al,ds:0x861c367a
  407069:	sub    esi,edi
  40706b:	xchg   esp,eax
  40706c:	hlt    
  40706d:	adc    eax,0x3990c172
  407072:	hlt    
  407073:	mov    edx,DWORD PTR ds:0x3a29384e
  407079:	stos   DWORD PTR es:[edi],eax
  40707a:	jno    0x4070c7
  40707c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707d:	lods   al,BYTE PTR ds:[esi]
  40707e:	push   edi
  40707f:	add    ah,BYTE PTR [esi]
  407081:	jge    0x407052
  407083:	pop    ebx
  407084:	scas   al,BYTE PTR es:[edi]
  407085:	xchg   ecx,eax
  407086:	mov    bl,0x37
  407088:	mov    fs,esp
  40708a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708b:	sub    DWORD PTR [eax-0x3b1dcffc],esp
  407091:	cmp    eax,0xe7924079
  407096:	pusha  
  407097:	popfw  
  407099:	jecxz  0x40707e
  40709b:	std    
  40709c:	push   esi
  40709d:	cwde   
  40709e:	in     al,0x10
  4070a0:	xchg   ebp,eax
  4070a1:	outs   dx,DWORD PTR ds:[esi]
  4070a2:	cwde   
  4070a3:	and    ebx,eax
  4070a5:	ins    BYTE PTR es:[edi],dx
  4070a6:	and    DWORD PTR [ebx],eax
  4070a8:	(bad)  
  4070a9:	into   
  4070aa:	push   ss
  4070ab:	xor    ah,BYTE PTR [ebx]
  4070ad:	mov    ecx,0xa818e7f
  4070b2:	xchg   edi,eax
  4070b3:	lods   al,BYTE PTR ds:[esi]
  4070b4:	xchg   ebx,eax
  4070b5:	xor    DWORD PTR [eax],esp
  4070b7:	rcr    DWORD PTR [edx],cl
  4070b9:	xchg   ecx,eax
  4070ba:	dec    ebp
  4070bb:	sub    eax,0x66b0c255
  4070c0:	or     BYTE PTR [edx],bl
  4070c2:	jmp    0x5b5326c5
  4070c7:	inc    ebx
  4070c8:	xor    eax,DWORD PTR [eax+0x5d825beb]
  4070ce:	ins    DWORD PTR es:[edi],dx
  4070cf:	mov    ebp,0x71a5b85e
  4070d4:	jmp    0x9db3:0x9b701e46
  4070db:	icebp  
  4070dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070dd:	arpl   dx,bp
  4070df:	mov    bl,0x48
  4070e1:	arpl   cx,sp
  4070e3:	push   es
  4070e4:	jmp    0x407153
  4070e6:	jae    0x4070ce
  4070e8:	jmp    0x5ab2:0x921a0eeb
  4070ef:	es mov edi,0xb90d3af0
  4070f5:	inc    edi
  4070f6:	jo     0x4070f1
  4070f8:	pusha  
  4070f9:	sbb    al,0x82
  4070fb:	test   eax,0xa0b74acd
  407100:	stos   BYTE PTR es:[edi],al
  407101:	ss jp  0x407181
  407104:	sub    al,0xe5
  407106:	stos   DWORD PTR es:[edi],eax
  407107:	lods   eax,DWORD PTR ds:[esi]
  407108:	xchg   ebx,eax
  407109:	arpl   WORD PTR [edi-0x4a],bp
  40710c:	(bad)  
  40710e:	and    BYTE PTR [ecx],bl
  407110:	or     DWORD PTR [ebx+0x76543d44],edx
  407116:	cmc    
  407117:	cs pop edx
  407119:	(bad)  
  40711a:	std    
  40711b:	(bad)  
  40711d:	mov    WORD PTR [ecx-0x15],ss
  407120:	mov    WORD PTR [ebp-0x7a],ss
  407123:	or     al,0x78
  407125:	bound  ebp,QWORD PTR [ebx+0x1]
  407128:	(bad)  
  407129:	and    al,0x46
  40712b:	cmp    eax,DWORD PTR [edi]
  40712d:	mov    eax,ds:0x525be456
  407132:	mov    ds:0x72acfcd1,eax
  407137:	in     al,0x72
  407139:	jp     0x4071b5
  40713b:	and    ebx,DWORD PTR [edi-0x19]
  40713e:	or     al,0xcf
  407140:	out    dx,eax
  407141:	cmp    eax,0xbf5b0b9d
  407146:	mov    cr7,esi
  407149:	or     cl,ah
  40714b:	std    
  40714c:	pusha  
  40714d:	lea    esp,[ebx]
  40714f:	mov    ah,0x1f
  407151:	ja     0x4070ec
  407153:	pop    esi
  407154:	pusha  
  407155:	dec    edi
  407156:	add    esi,DWORD PTR [ecx-0x49]
  407159:	or     al,BYTE PTR [ecx]
  40715b:	or     eax,0x33f5a1f6
  407160:	call   0x4dd36bc3
  407165:	pop    es
  407166:	dec    edi
  407167:	aas    
  407168:	ss cmp al,0xd3
  40716b:	imul   ebx,DWORD PTR [edi+eiz*2-0x5e72591a]
  407173:	xchg   esp,eax
  407174:	out    dx,eax
  407175:	xchg   ebp,eax
  407176:	push   esp
  407177:	imul   eax,edx,0x7bc12e17
  40717d:	call   0x4ae45057
  407182:	data16 int3 
  407184:	fisubr DWORD PTR [esi+0x70695847]
  40718a:	inc    esp
  40718b:	fwait
  40718c:	jg     0x40717b
  40718e:	aad    0xab
  407190:	mov    esp,0x6d0bc239
  407195:	xlat   BYTE PTR ds:[ebx]
  407196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407197:	push   esp
  407198:	cli    
  407199:	leave  
  40719a:	sub    ch,dh
  40719c:	or     eax,0x8820c203
  4071a1:	lds    ecx,FWORD PTR [edx-0x69d9e5e]
  4071a7:	icebp  
  4071a8:	leave  
  4071a9:	clc    
  4071aa:	rcr    cl,0xcb
  4071ad:	sub    al,0x8a
  4071af:	push   ecx
  4071b0:	outs   dx,DWORD PTR ds:[esi]
  4071b1:	add    ah,BYTE PTR [ebx]
  4071b3:	pcmpeqd mm7,QWORD PTR [edi-0x6a]
  4071b7:	test   eax,0x109a01d8
  4071bc:	xor    al,0x2e
  4071be:	inc    esp
  4071bf:	lahf   
  4071c0:	and    DWORD PTR [ebx+0x6d12151a],ebp
  4071c6:	addr16 mov esi,0x4b5cef42
  4071cc:	inc    edi
  4071cd:	jnp    0x407153
  4071cf:	jle    0x407228
  4071d1:	mov    dh,0xd
  4071d3:	enter  0x7cdb,0xf8
  4071d7:	sbb    al,0xe
  4071d9:	add    cl,0xd
  4071dc:	(bad)  
  4071dd:	out    dx,eax
  4071de:	sub    BYTE PTR [edi-0x14],al
  4071e1:	sar    BYTE PTR [ebx-0x4a],1
  4071e4:	sbb    ebx,DWORD PTR [ebx-0x3cdea371]
  4071ea:	fild   WORD PTR [ebx+ebx*2]
  4071ed:	xor    BYTE PTR [edi+0x15],bl
  4071f0:	pop    ecx
  4071f1:	xor    edx,DWORD PTR [esi-0x5b]
  4071f4:	xchg   esp,eax
  4071f5:	sub    ebx,esi
  4071f7:	jns    0x4071e1
  4071f9:	daa    
  4071fa:	jno    0x407219
  4071fc:	mov    edi,0x21747dce
  407201:	sub    BYTE PTR [edi-0x1b],0x5e
  407205:	sbb    ch,BYTE PTR [ecx+0x1a]
  407208:	lock sbb eax,0x6735d751
  40720e:	adc    al,0x3d
  407210:	lock pop esi
  407212:	adc    eax,0x7a57a2ec
  407217:	outs   dx,BYTE PTR ds:[esi]
  407218:	js     0x40719f
  40721a:	inc    ecx
  40721b:	(bad)  [eax-0x735582b7]
  407221:	cwde   
  407222:	jne    0x40723d
  407224:	cmp    DWORD PTR [esi],0x90f79a0f
  40722a:	mov    bh,0xa6
  40722c:	sbb    esp,DWORD PTR [esi-0x365e55d8]
  407232:	stos   DWORD PTR es:[edi],eax
  407233:	js     0x407295
  407235:	mov    dl,0x1c
  407237:	hlt    
  407238:	push   ss
  407239:	daa    
  40723a:	mov    cl,0x97
  40723c:	cli    
  40723d:	push   ss
  40723e:	sbb    bl,bl
  407240:	pop    ebx
  407241:	jp     0x407261
  407243:	test   DWORD PTR [edi-0xbb69f53],ecx
  407249:	out    dx,al
  40724a:	outs   dx,BYTE PTR ds:[esi]
  40724b:	loope  0x407251
  40724d:	dec    edx
  40724e:	mov    dl,al
  407250:	lea    esi,[ebp-0x327fbe5c]
  407256:	sar    BYTE PTR [ecx+0x8ebbcdd],1
  40725c:	pop    es
  40725d:	dec    esp
  40725e:	cdq    
  40725f:	cmp    dl,cl
  407261:	push   eax
  407262:	pop    eax
  407263:	mov    WORD PTR [edx+0x1ecc0a1d],ds
  407269:	jbe    0x407259
  40726b:	sbb    ebp,edi
  40726d:	cwde   
  40726e:	loop   0x407235
  407270:	adc    BYTE PTR [esi+0x3b4b9364],bh
  407276:	sub    eax,0x2d6de2d0
  40727b:	jo     0x4072e0
  40727d:	fwait
  40727e:	and    eax,0x113b0be7
  407283:	mov    WORD PTR [ebx],ss
  407285:	push   ecx
  407286:	mov    bl,0x57
  407288:	xor    BYTE PTR [edx],ah
  40728a:	out    dx,eax
  40728b:	xor    edi,DWORD PTR [ebp+ecx*2-0x1d]
  40728f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407290:	dec    ebx
  407291:	loopne 0x407309
  407293:	add    edx,esi
  407295:	rol    DWORD PTR [ebp+0x65],1
  407298:	imul   ecx,DWORD PTR [ebp+eax*8-0x64],0xffffffe5
  40729d:	pop    ecx
  40729e:	lds    ebp,FWORD PTR [esi]
  4072a0:	jo     0x407266
  4072a2:	xchg   ecx,eax
  4072a3:	stos   DWORD PTR es:[edi],eax
  4072a4:	adc    al,0xe0
  4072a6:	(bad)  
  4072a7:	lods   al,BYTE PTR ds:[esi]
  4072a8:	dec    edx
  4072a9:	jge    0x4072e7
  4072ab:	outs   dx,BYTE PTR fs:[esi]
  4072ad:	ds cmp eax,0xaa44a19
  4072b3:	dec    ebx
  4072b4:	mov    ch,0xbd
  4072b6:	dec    esi
  4072b7:	aad    0xb5
  4072b9:	pop    esi
  4072ba:	das    
  4072bb:	cmp    BYTE PTR [ecx],ch
  4072bd:	in     al,0x13
  4072bf:	call   0x94a0:0x548d7011
  4072c6:	push   0x20
  4072c8:	(bad)  
  4072c9:	loope  0x40727e
  4072cb:	inc    edi
  4072cc:	push   0x3f
  4072ce:	test   al,0x72
  4072d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d1:	loopne 0x407332
  4072d3:	jno    0x4072d9
  4072d5:	mov    ah,0x14
  4072d7:	pusha  
  4072d8:	jg     0x40733f
  4072da:	lods   eax,DWORD PTR ds:[esi]
  4072db:	mov    ecx,0xc2a60175
  4072e0:	(bad)  
  4072e2:	test   eax,0x7449328e
  4072e7:	sbb    eax,0x7ead0d81
  4072ec:	xlat   BYTE PTR ds:[ebx]
  4072ed:	fwait
  4072ee:	ins    BYTE PTR es:[edi],dx
  4072ef:	(bad)  
  4072f0:	out    dx,al
  4072f1:	jge    0x40729a
  4072f3:	jnp    0x40735a
  4072f5:	inc    esp
  4072f6:	loop   0x4072ad
  4072f8:	mov    ah,0x18
  4072fa:	jo     0x407305
  4072fc:	int3   
  4072fd:	ja     0x407305
  4072ff:	(bad)  
  407300:	xlat   BYTE PTR ds:[ebx]
  407301:	std    
  407302:	mov    ebp,0x97e54cea
  407307:	in     al,dx
  407308:	out    dx,al
  407309:	or     DWORD PTR [eax+esi*1-0x4d],edi
  40730d:	push   esp
  40730e:	shl    DWORD PTR [edi-0x7b50a0fa],0xe
  407315:	jnp    0x40738d
  407317:	fwait
  407318:	push   ebx
  407319:	(bad)  
  40731a:	xor    DWORD PTR [eax+ebp*8-0x41392f96],ecx
  407321:	and    DWORD PTR [eax],edi
  407323:	cli    
  407324:	enter  0x42c,0xb1
  407328:	mov    BYTE PTR [esi-0x4a5f2ecb],cl
  40732e:	cmc    
  40732f:	inc    ebx
  407330:	mov    dl,BYTE PTR [eax+0x19]
  407333:	fwait
  407334:	and    DWORD PTR [edi+0x19],esi
  407337:	ret    0x8e89
  40733a:	push   ss
  40733b:	or     BYTE PTR [esi-0x1a],bl
  40733e:	aas    
  40733f:	int    0x4f
  407341:	xlat   BYTE PTR ds:[ebx]
  407342:	jns    0x40735a
  407344:	cmp    al,BYTE PTR [ebp+0x5c0feff5]
  40734a:	sub    al,0x13
  40734c:	sub    al,0x55
  40734e:	fnstenv [esi]
  407350:	sahf   
  407351:	enter  0xdccb,0xea
  407355:	add    cl,BYTE PTR [ebx]
  407357:	mov    edi,0xccf2748e
  40735c:	ja     0x40731e
  40735e:	inc    edx
  40735f:	fbstp  TBYTE PTR [esp+eiz*8-0x2f]
  407363:	call   0xc617:0xe6fa27cb
  40736a:	stos   BYTE PTR es:[edi],al
  40736b:	inc    edx
  40736c:	xchg   esp,eax
  40736d:	mov    al,ds:0xaf1cff89
  407372:	popf   
  407373:	xor    bl,bh
  407375:	xchg   ebp,eax
  407376:	and    BYTE PTR [edx-0x26],ch
  407379:	fdivr  DWORD PTR [edx+0x16c37f05]
  40737f:	xchg   ecx,eax
  407380:	lock jnp 0x4073c4
  407383:	outs   dx,BYTE PTR ds:[esi]
  407384:	or     eax,0x56869b8
  407389:	int    0xa1
  40738b:	(bad)  
  40738c:	repz xor bl,ch
  40738f:	sub    ecx,DWORD PTR [esi+0x65]
  407392:	aas    
  407393:	pop    ebx
  407394:	adc    DWORD PTR [eax],eax
  407396:	fadd   QWORD PTR [esi-0x74]
  407399:	jnp    0x407361
  40739b:	xor    DWORD PTR [esi+0x39],0x63
  40739f:	push   ecx
  4073a0:	into   
  4073a1:	retf   
  4073a2:	rcl    DWORD PTR gs:[esi],cl
  4073a5:	xchg   BYTE PTR [ecx+0x18],bl
  4073a8:	or     BYTE PTR [eax-0x39e69156],bh
  4073ae:	jb     0x407415
  4073b0:	dec    esp
  4073b1:	push   ds
  4073b2:	xor    al,0x6e
  4073b4:	sub    BYTE PTR [edi-0x65],bh
  4073b7:	jp     0x40742c
  4073b9:	or     edx,0xc93f0a93
  4073bf:	pushf  
  4073c0:	fsubr  QWORD PTR [ecx+0xef43ce5]
  4073c6:	xchg   ebp,eax
  4073c7:	jl     0x40742f
  4073c9:	lods   al,BYTE PTR fs:[esi]
  4073cb:	jle    0x40736c
  4073cd:	sub    dl,dl
  4073cf:	xchg   ebp,eax
  4073d0:	add    edi,ecx
  4073d2:	sub    al,0xb4
  4073d4:	inc    ebp
  4073d5:	iret   
  4073d6:	or     BYTE PTR [edi-0x3],al
  4073d9:	sub    BYTE PTR [edx+0x5d],cl
  4073dc:	(bad)  
  4073de:	sub    al,0xac
  4073e0:	mul    BYTE PTR [esi]
  4073e2:	es popw ss
  4073e5:	div    BYTE PTR [esi-0x7a5604e7]
  4073eb:	sub    ah,ch
  4073ed:	(bad)  
  4073ee:	ds jbe 0x4073d3
  4073f1:	dec    ebp
  4073f2:	add    DWORD PTR [ebx+esi*2+0x1f6a11c5],0xa0ebd86b
  4073fd:	push   esp
  4073fe:	ficomp WORD PTR [ebp+0x61]
  407401:	push   esi
  407402:	cmp    eax,0x2cc1a85b
  407407:	fwait
  407408:	and    al,0xfe
  40740a:	sbb    BYTE PTR [edi-0x20954c5d],cl
  407410:	xchg   esi,eax
  407411:	jbe    0x4073f1
  407413:	jge    0x407472
  407415:	xor    al,0x55
  407417:	lahf   
  407418:	pop    edx
  407419:	jmp    0x4073ef
  40741b:	or     al,0x51
  40741d:	aas    
  40741e:	ror    BYTE PTR [eax+ebp*1],cl
  407421:	jno    0x4073ea
  407423:	fsub   st,st(2)
  407425:	test   DWORD PTR [ecx-0x50c57497],0x8cf43d9f
  40742f:	adc    eax,0xb98d8387
  407434:	call   0x8556:0xc2ed8d54
  40743b:	enter  0x7c4e,0x87
  40743f:	sub    al,0x84
  407441:	ret    
  407442:	retf   
  407443:	scas   al,BYTE PTR es:[edi]
  407444:	(bad)  
  407445:	into   
  407446:	js     0x407465
  407448:	jns    0x4073fb
  40744a:	add    DWORD PTR [edx+edx*2+0x40],0x17e20efe
  407452:	ins    BYTE PTR es:[edi],dx
  407453:	pop    esp
  407454:	ds pop ebx
  407456:	pop    ecx
  407457:	ror    DWORD PTR [ebp+0x50],cl
  40745a:	and    al,0xad
  40745c:	mov    al,0x1d
  40745e:	mov    DWORD PTR [ebx-0x57dffa59],ecx
  407464:	pop    ds
  407465:	and    DWORD PTR [eax],ebp
  407467:	mov    eax,ds:0xe5d1323f
  40746c:	lahf   
  40746d:	mov    edx,0x10ad609c
  407472:	lahf   
  407473:	js     0x4074a8
  407475:	sti    
  407476:	and    eax,0xfa16671a
  40747b:	popa   
  40747c:	call   FWORD PTR [edx]
  40747e:	adc    BYTE PTR [ebp+eiz*2+0x58],dh
  407482:	in     eax,dx
  407483:	pop    es
  407484:	pop    edi
  407485:	inc    esi
  407486:	loop   0x407412
  407488:	or     bl,al
  40748a:	jmp    0xdf1431ce
  40748f:	into   
  407490:	aas    
  407491:	and    al,BYTE PTR [eax-0x36a2a182]
  407497:	test   BYTE PTR [ebx-0x107c0faf],ch
  40749d:	jecxz  0x407481
  40749f:	fnclex 
  4074a1:	into   
  4074a2:	fsin   
  4074a4:	mov    ecx,DWORD PTR [esi+0x10917bc5]
  4074aa:	(bad)
  4074ae:	enter  0x1562,0x46
  4074b2:	sahf   
  4074b3:	pop    edi
  4074b4:	out    0xfc,al
  4074b6:	hlt    
  4074b7:	sbb    eax,0x3b844fec
  4074bc:	test   eax,0x835bb4d
  4074c1:	push   ds
  4074c2:	xchg   ebx,eax
  4074c3:	les    edx,FWORD PTR [edx-0x56]
  4074c6:	loop   0x407498
  4074c8:	int3   
  4074c9:	pop    ebp
  4074ca:	push   ecx
  4074cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074cc:	mov    ds:0x75445c5d,eax
  4074d1:	and    bl,cl
  4074d3:	add    eax,0x1491f77a
  4074d8:	or     DWORD PTR [edx+0xd],edi
  4074db:	mov    ch,BYTE PTR [edx]
  4074dd:	(bad)  
  4074df:	dec    eax
  4074e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e1:	jecxz  0x40753a
  4074e3:	pop    ecx
  4074e4:	mov    eax,ds:0x3b6a679c
  4074e9:	aad    0xd1
  4074eb:	xor    DWORD PTR [ecx],ebx
  4074ed:	sbb    DWORD PTR ds:0xcb7e17ae,ecx
  4074f3:	ds ret 0x4e8c
  4074f7:	test   edi,ecx
  4074f9:	test   BYTE PTR [ecx],bl
  4074fb:	xchg   edx,eax
  4074fc:	pop    esi
  4074fd:	rcl    BYTE PTR [ebx-0x2bf06a93],cl
  407503:	xor    cl,ch
  407505:	xchg   ecx,eax
  407506:	outs   dx,DWORD PTR ds:[esi]
  407507:	in     eax,0x3d
  407509:	retf   0x9ed0
  40750c:	gs scas al,BYTE PTR es:[edi]
  40750e:	jmp    0xb554:0x846e0a9a
  407515:	jmp    FWORD PTR [ebp+0x72]
  407518:	or     BYTE PTR [ebx+0x2f690916],bl
  40751e:	sar    BYTE PTR [edx-0x31],1
  407521:	cli    
  407522:	inc    ebp
  407523:	lahf   
  407524:	or     DWORD PTR [ebx],eax
  407526:	xor    dh,BYTE PTR [ecx+0x44e2673f]
  40752c:	xchg   edx,eax
  40752d:	inc    edx
  40752e:	das    
  40752f:	dec    ebx
  407530:	hlt    
  407531:	adc    DWORD PTR [ecx+0x2e1b3948],eax
  407537:	loop   0x40751f
  407539:	jae    0x4074e6
  40753b:	jle    0x4074f9
  40753d:	adc    BYTE PTR [ebx+0x3286d440],bh
  407543:	mov    dh,0x66
  407545:	jp     0x4075a6
  407547:	rol    BYTE PTR [edi],cl
  407549:	shl    BYTE PTR [ebx+ebp*2-0x6011ad7a],0x4b
  407551:	xchg   esp,eax
  407552:	xchg   ecx,eax
  407553:	push   es
  407554:	xchg   DWORD PTR [esp+edx*8+0x17f09c45],edi
  40755b:	lds    ebx,FWORD PTR [ebx+0x4d]
  40755e:	mov    ah,0x7f
  407560:	sbb    DWORD PTR [esi],esi
  407562:	ror    BYTE PTR [edx+0x63],cl
  407565:	add    ebp,ebx
  407567:	sbb    eax,0xf8de89c8
  40756c:	cmp    eax,0x13a10a42
  407571:	jns    0x4075c0
  407573:	push   ebx
  407574:	dec    ecx
  407575:	xor    BYTE PTR [edx-0x4f],ah
  407578:	or     ebp,DWORD PTR [ecx+0x3f231e89]
  40757e:	add    BYTE PTR [esp+ecx*8-0x73825468],dl
  407585:	mov    ch,BYTE PTR [ebp+ebp*4-0x64]
  407589:	nop
  40758a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758b:	ins    DWORD PTR es:[edi],dx
  40758c:	jo     0x40759e
  40758e:	aam    0x79
  407590:	retf   
  407591:	push   esp
  407592:	fild   WORD PTR ds:0x6f30f9f7
  407598:	mov    ebx,DWORD PTR [ecx-0x2d43882d]
  40759e:	pop    eax
  40759f:	lods   al,BYTE PTR ds:[esi]
  4075a0:	jb     0x40759a
  4075a2:	cld    
  4075a3:	std    
  4075a4:	dec    esi
  4075a5:	bound  ecx,QWORD PTR [ebp-0x25f1c85a]
  4075ab:	or     DWORD PTR [ebx+edi*2+0x39],0xdd7a0de8
  4075b3:	test   BYTE PTR [eax+eax*1+0x33],dh
  4075b7:	xchg   ebp,eax
  4075b8:	and    al,0xf4
  4075ba:	cmc    
  4075bb:	imul   esp,DWORD PTR [ebp+edi*4-0x70c31da2],0xbf187323
  4075c6:	in     eax,dx
  4075c7:	adc    esi,DWORD PTR [edx]
  4075c9:	inc    edx
  4075ca:	push   ds
  4075cb:	push   0xffffffa3
  4075cd:	sub    DWORD PTR [eax-0x19],0x58795b48
  4075d4:	dec    ebp
  4075d5:	imul   esi,DWORD PTR [eax],0xac9ab5c0
  4075db:	push   edi
  4075dc:	ins    DWORD PTR es:[edi],dx
  4075dd:	pop    ss
  4075de:	out    dx,eax
  4075df:	jo     0x407576
  4075e1:	cmp    DWORD PTR [edi],ebx
  4075e3:	sub    dh,BYTE PTR [esi+0x33616d62]
  4075e9:	sub    al,0xca
  4075eb:	sbb    al,0xd2
  4075ed:	stos   BYTE PTR es:[edi],al
  4075ee:	adc    eax,0xb1e3adba
  4075f3:	push   cs
  4075f4:	retf   0x8a11
  4075f7:	rol    cl,0x80
  4075fa:	jmp    0xd5e4989b
  4075ff:	aam    0x64
  407601:	mov    bl,0xc7
  407603:	xchg   edx,eax
  407604:	inc    ebp
  407605:	pop    eax
  407606:	xlat   BYTE PTR ds:[ebx]
  407607:	mov    ds:0x8f155ebe,al
  40760c:	shl    DWORD PTR [edi],1
  40760e:	(bad)  
  40760f:	pop    ss
  407610:	sub    dh,BYTE PTR [ecx+0x53]
  407613:	xchg   ebx,eax
  407614:	int3   
  407615:	test   ecx,ebx
  407617:	rcl    DWORD PTR [edi+eax*1+0x1f],1
  40761b:	sbb    cl,bh
  40761d:	bound  ebp,QWORD PTR [ebx]
  40761f:	and    edx,ebx
  407621:	call   0xc32a8b67
  407626:	and    al,0x29
  407628:	jmp    0x40764a
  40762a:	test   DWORD PTR [esi-0x26cf4f94],ebx
  407630:	sbb    al,BYTE PTR [ebp-0x7fa254ee]
  407636:	pop    esp
  407637:	dec    edi
  407638:	mov    ebx,0xeb814fbf
  40763d:	push   esp
  40763e:	loop   0x4075f6
  407640:	dec    esi
  407641:	adc    esi,DWORD PTR [eax]
  407643:	imul   ecx,ecx,0xffffff8d
  407646:	call   0x70ee:0xdfb2a556
  40764d:	lea    esi,[ebx]
  40764f:	lds    esp,FWORD PTR [ecx+0x6e]
  407652:	dec    ebx
  407653:	stos   BYTE PTR es:[edi],al
  407654:	data16 jae 0x4075ee
  407657:	add    esp,ebx
  407659:	or     ebp,DWORD PTR [ebx]
  40765b:	lahf   
  40765c:	das    
  40765d:	or     esp,esp
  40765f:	add    BYTE PTR [eax],ah
  407661:	sub    eax,0x4bf5a4a0
  407666:	add    esi,esi
  407668:	push   edi
  407669:	adc    DWORD PTR [eax-0x504276fa],ebx
  40766f:	daa    
  407670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407671:	pusha  
  407672:	xchg   DWORD PTR [ebp-0x43],ebp
  407675:	cwde   
  407676:	mov    ecx,0x6efb9e69
  40767b:	push   ecx
  40767c:	xor    edi,eax
  40767e:	push   ds
  40767f:	xchg   edi,eax
  407680:	fimul  WORD PTR [edx]
  407682:	xchg   BYTE PTR [esi+0x6f],bh
  407685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407686:	pop    esp
  407687:	xor    ah,bh
  407689:	lahf   
  40768a:	xor    al,0xbd
  40768c:	sub    al,BYTE PTR [edx+ebx*1+0x49436fe8]
  407693:	push   esi
  407694:	xchg   edx,eax
  407695:	(bad)  
  407696:	mov    bl,0xa1
  407698:	sahf   
  407699:	mov    ebx,DWORD PTR [eax+ebx*2]
  40769c:	inc    edi
  40769d:	aaa    
  40769e:	sub    dh,BYTE PTR [edx-0x24774d9c]
  4076a4:	and    BYTE PTR [ebp-0x59b17253],bl
  4076aa:	pushf  
  4076ab:	aad    0xe1
  4076ad:	add    edi,eax
  4076af:	mov    ch,0xba
  4076b1:	mov    ds:0x7868c6d0,eax
  4076b6:	push   ebp
  4076b7:	jmp    0x4076e4
  4076b9:	xor    al,0xa6
  4076bb:	sub    al,0x50
  4076bd:	sub    DWORD PTR [eax+0x3],ebp
  4076c0:	js     0x40765b
  4076c2:	shr    DWORD PTR [edi+0x45],0x76
  4076c6:	nop
  4076c7:	pop    ds
  4076c8:	cmc    
  4076c9:	(bad)  
  4076ca:	xor    BYTE PTR [esi+0xc585a2],dl
  4076d0:	mov    al,ds:0x7b4fb88
  4076d5:	mov    al,0xd9
  4076d7:	sub    cl,ch
  4076d9:	in     al,0x55
  4076db:	dec    ecx
  4076dc:	(bad)  
  4076dd:	fwait
  4076de:	call   0x40ac231e
  4076e3:	fwait
  4076e4:	retf   0xc41c
  4076e7:	stc    
  4076e8:	popa   
  4076e9:	test   eax,0x954e154f
  4076ee:	add    al,BYTE PTR [ecx+edi*2-0x40a3b447]
  4076f5:	sub    ecx,DWORD PTR [edx+ebp*1]
  4076f8:	push   ebp
  4076f9:	cmp    eax,DWORD PTR [ebx]
  4076fb:	add    ah,bl
  4076fd:	cmp    esi,DWORD PTR [ecx+0x79]
  407700:	ins    DWORD PTR es:[edi],dx
  407701:	test   eax,0x6b3ffdaa
  407706:	xor    BYTE PTR [esi],dh
  407708:	xchg   DWORD PTR [edx+0x31130c45],esp
  40770e:	sbb    al,0xa9
  407710:	xchg   esi,eax
  407711:	aas    
  407712:	mov    al,0x43
  407714:	sbb    esi,ebx
  407716:	push   edx
  407717:	jle    0x40769a
  407719:	xchg   BYTE PTR [ecx+0xa],al
  40771c:	inc    eax
  40771d:	lods   al,BYTE PTR ds:[esi]
  40771e:	(bad)  
  40771f:	fsubr  st,st(5)
  407721:	div    bh
  407723:	cwde   
  407724:	bound  esp,QWORD PTR [edx]
  407726:	loope  0x407773
  407728:	outs   dx,BYTE PTR ds:[esi]
  407729:	xor    al,0xa9
  40772b:	test   al,0xf2
  40772d:	clc    
  40772e:	neg    DWORD PTR [ebx+0x2b]
  407731:	sub    al,0xf2
  407733:	pop    ds
  407734:	(bad)  
  407735:	hlt    
  407736:	mov    esp,0x26ea1783
  40773b:	push   eax
  40773c:	lds    ecx,FWORD PTR [edi-0x11b4157d]
  407742:	scas   al,BYTE PTR es:[edi]
  407743:	dec    eax
  407744:	scas   al,BYTE PTR es:[edi]
  407745:	bnd ret 0xa03e
  407749:	sbb    cl,dh
  40774b:	(bad)  
  40774c:	loop   0x407712
  40774e:	psraw  mm0,mm5
  407751:	and    DWORD PTR [edi],0xffffff8d
  407754:	xchg   edi,eax
  407755:	jnp    0x40774b
  407757:	cld    
  407758:	xchg   ebx,eax
  407759:	pushf  
  40775a:	sub    BYTE PTR [eax+0xa6f0dbd],al
  407760:	inc    eax
  407761:	dec    ebp
  407762:	add    DWORD PTR [edi+0x28],ecx
  407765:	adc    bl,BYTE PTR [edx-0x5f]
  407768:	dec    ebx
  407769:	retf   
  40776a:	cli    
  40776b:	sbb    al,0x18
  40776d:	sub    eax,ebp
  40776f:	xchg   ebp,eax
  407770:	nop
  407771:	mov    ah,0x59
  407773:	ins    DWORD PTR es:[edi],dx
  407774:	mov    esp,cs
  407776:	add    esp,ebp
  407778:	cmp    esi,DWORD PTR [ebx]
  40777a:	mov    ds:0xb940f4c1,eax
  40777f:	je     0x4077ea
  407781:	jmp    0xec5b:0x93eadcd1
  407788:	stc    
  407789:	pop    ebx
  40778a:	inc    edi
  40778b:	bound  ebp,QWORD PTR [ecx]
  40778d:	(bad)  
  40778e:	aas    
  40778f:	cmp    ebp,ebx
  407791:	fyl2x  
  407793:	adc    edi,DWORD PTR [ecx]
  407795:	adc    bh,dl
  407797:	mov    al,0x35
  407799:	outs   dx,DWORD PTR ds:[esi]
  40779a:	(bad)
  40779e:	and    eax,0x800f9cd1
  4077a3:	cmp    ecx,DWORD PTR [ebp+0x65]
  4077a6:	xor    eax,0x83d1343f
  4077ab:	or     edi,DWORD PTR es:0x936336cb
  4077b2:	adc    al,0x9f
  4077b4:	mov    ecx,DWORD PTR [ebx]
  4077b6:	push   edi
  4077b7:	test   ecx,edi
  4077b9:	add    eax,0x5203a772
  4077be:	dec    ebp
  4077bf:	shl    DWORD PTR [edx],1
  4077c1:	imul   edx,DWORD PTR [esp+edx*1-0x7d],0x76
  4077c6:	push   eax
  4077c7:	popf   
  4077c8:	lds    edx,FWORD PTR [edx+0x322c444b]
  4077ce:	mov    al,BYTE PTR [esi]
  4077d0:	pop    esi
  4077d1:	mov    al,0x61
  4077d3:	jnp    0x4077fe
  4077d5:	fld    DWORD PTR [ebx-0x738e22cb]
  4077db:	lock jo 0x4077d8
  4077de:	push   0xffffffeb
  4077e0:	in     eax,0x2b
  4077e2:	sbb    DWORD PTR [edi-0x2d27c5a1],ecx
  4077e8:	retf   
  4077e9:	jl     0x407803
  4077eb:	les    edi,FWORD PTR [ecx]
  4077ed:	mov    esi,0x550251fb
  4077f2:	sti    
  4077f3:	outs   dx,BYTE PTR ds:[esi]
  4077f4:	cld    
  4077f5:	mov    al,0xbe
  4077f7:	out    0xa3,eax
  4077f9:	(bad)  
  4077fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077fb:	push   cs
  4077fc:	cmp    eax,0xb3892cd9
  407801:	neg    BYTE PTR [ebx+0x52]
  407804:	jne    0x4077c1
  407806:	and    dl,cl
  407808:	into   
  407809:	popa   
  40780a:	fist   DWORD PTR [edx]
  40780c:	push   es
  40780d:	popa   
  40780e:	sbb    BYTE PTR [edx],bl
  407810:	hlt    
  407811:	hlt    
  407812:	mov    al,ds:0xceb5789b
  407817:	stos   BYTE PTR es:[edi],al
  407818:	les    edi,FWORD PTR [edx+0x17c4856d]
  40781e:	inc    ebp
  40781f:	clc    
  407820:	mov    ds:0xa17921cd,al
  407825:	ds sbb cl,bh
  407828:	xchg   edx,eax
  407829:	rol    DWORD PTR [edx-0x3d739909],cl
  40782f:	hlt    
  407830:	jmp    0xb63d7958
  407835:	xchg   BYTE PTR [ebp-0x1d3a6b66],dh
  40783b:	cmp    al,0xf0
  40783d:	outs   dx,DWORD PTR ds:[esi]
  40783e:	or     bh,BYTE PTR [ecx-0x38b735b9]
  407844:	call   DWORD PTR [edx]
  407846:	stos   DWORD PTR es:[edi],eax
  407847:	adc    esi,DWORD PTR [eax+eiz*2+0x72e640ad]
  40784e:	ret    0x7a8e
  407851:	cwde   
  407852:	jle    0x407862
  407854:	das    
  407855:	mov    dl,0x4a
  407857:	mov    bl,0x23
  40785a:	ja     0x4077dc
  40785c:	adc    cl,cl
  40785e:	scas   al,BYTE PTR es:[edi]
  40785f:	lea    ecx,[eax+0x5917be86]
  407865:	pop    ecx
  407866:	sub    DWORD PTR [eax+ebp*4+0x5e],esi
  40786a:	rcr    BYTE PTR [edi-0xe],0x9a
  40786e:	bound  edx,QWORD PTR [ecx]
  407870:	test   DWORD PTR [ecx],edi
  407872:	fsubr  st(1),st
  407874:	push   ecx
  407875:	sub    cl,BYTE PTR [eax+0x2a]
  407878:	(bad)  
  407879:	sar    DWORD PTR [eax-0x22eef224],1
  40787f:	pop    ecx
  407880:	ins    DWORD PTR es:[edi],dx
  407881:	int    0x31
  407883:	bound  edi,QWORD PTR [ebx+0x7a9d496]
  407889:	or     al,0x9
  40788b:	mov    dh,0xa8
  40788d:	test   ecx,0xaa4bee31
  407893:	dec    ecx
  407894:	or     bl,bh
  407896:	xchg   ecx,eax
  407897:	lods   al,BYTE PTR ds:[esi]
  407898:	call   eax
  40789a:	loope  0x4078ee
  40789c:	adc    BYTE PTR [edx-0x2a],dh
  40789f:	pop    ebp
  4078a0:	loop   0x4078ca
  4078a2:	jge    0x407849
  4078a4:	ja     0x4078a9
  4078a6:	jbe    0x4078ac
  4078a8:	sbb    dl,bh
  4078aa:	sbb    edi,DWORD PTR [ebx-0x5a50a96e]
  4078b0:	iret   
  4078b1:	inc    eax
  4078b2:	std    
  4078b3:	mov    BYTE PTR [edx+0x28515d70],ch
  4078b9:	jmp    DWORD PTR [eax]
  4078bb:	test   DWORD PTR [edx+0x47],edi
  4078be:	mov    ah,0x89
  4078c0:	jae    0x407916
  4078c2:	out    0xc4,al
  4078c4:	enter  0x8360,0x1f
  4078c8:	jbe    0x4078f9
  4078ca:	ss mov ebp,0x4d0c42bd
  4078d0:	inc    edx
  4078d1:	sub    DWORD PTR [ecx+0x5cab4e97],eax
  4078d7:	xchg   BYTE PTR [edx-0x598379d4],dl
  4078dd:	xchg   DWORD PTR [edi+edi*8+0x4f3852e3],edx
  4078e4:	out    0xe2,al
  4078e6:	enter  0x80e7,0xda
  4078ea:	call   0xf8c31725
  4078ef:	(bad)  [edi+0x4aad1eab]
  4078f5:	out    0xfc,al
  4078f7:	sti    
  4078f8:	or     eax,0x25a00db9
  4078fd:	adc    bl,ah
  4078ff:	mov    bl,0xf3
  407901:	mov    BYTE PTR [ebx-0x1d4c46fa],dh
  407907:	push   ds
  407908:	jbe    0x40789e
  40790a:	(bad)  
  40790c:	sub    eax,0x225ab595
  407911:	jmp    0xd5510190
  407916:	and    edi,DWORD PTR [esi]
  407918:	pushf  
  407919:	xor    al,0x0
  40791b:	mov    bh,0xa5
  40791d:	test   eax,0xd5fe2c42
  407922:	dec    edi
  407923:	jmp    FWORD PTR [edx+0x11fef729]
  407929:	loopne 0x407999
  40792b:	push   ecx
  40792c:	test   ebp,ecx
  40792e:	rcr    DWORD PTR [eax-0x58],1
  407931:	xchg   esp,eax
  407932:	and    DWORD PTR [ecx+0x5d],esi
  407935:	imul   esi,DWORD PTR [ecx],0x4d
  407938:	lods   eax,DWORD PTR ds:[esi]
  407939:	adc    DWORD PTR [ebp-0x3d],esi
  40793c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40793d:	xor    al,0xb3
  40793f:	popf   
  407940:	jmp    0x40792d
  407942:	popf   
  407943:	mov    eax,0x9073b568
  407948:	xor    esi,0xffffffcb
  40794b:	push   ecx
  40794c:	jmp    0x40791f
  40794e:	push   edi
  40794f:	call   0xa9d7491f
  407954:	sub    ch,BYTE PTR cs:[ebx-0x13]
  407958:	mov    eax,0x45e6111a
  40795d:	mov    cl,0xfd
  40795f:	data16 cmc 
  407961:	into   
  407962:	(bad)  
  407963:	pushf  
  407964:	xor    al,0xed
  407966:	int3   
  407967:	fs inc ecx
  407969:	add    al,0x94
  40796b:	frstor [esi-0x2e]
  40796e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796f:	repz leave 
  407971:	inc    esp
  407972:	ret    0xbf15
  407975:	add    ecx,DWORD PTR [esi+edx*4+0xd]
  407979:	test   dh,bh
  40797b:	push   eax
  40797c:	xchg   ebx,eax
  40797d:	add    eax,edi
  40797f:	addr16 cmp al,0x93
  407982:	lods   eax,DWORD PTR ds:[esi]
  407983:	dec    ecx
  407984:	sub    al,0xe0
  407986:	mov    edx,ecx
  407988:	sbb    eax,0xf2bcf2fd
  40798d:	sahf   
  40798e:	cvtdq2ps xmm5,XMMWORD PTR [edx+0x7267ac3a]
  407995:	fsub   DWORD PTR [edi+0x2fbbc2cc]
  40799b:	rcl    DWORD PTR [edx+edi*8],cl
  40799e:	dec    ebp
  40799f:	jb     0x407a01
  4079a1:	dec    ebp
  4079a2:	xor    esi,ebp
  4079a4:	sbb    BYTE PTR [edi],ah
  4079a6:	cmp    BYTE PTR [eax],bh
  4079a8:	add    ebx,DWORD PTR [ebx-0x5d24fb64]
  4079ae:	not    ah
  4079b0:	arpl   WORD PTR [edi+0x3b],bp
  4079b3:	stos   DWORD PTR es:[edi],eax
  4079b4:	sahf   
  4079b5:	xor    dl,BYTE PTR ds:0xb1b6ded6
  4079bb:	call   0x152fffc4
  4079c0:	fstp   QWORD PTR [ecx-0x42]
  4079c3:	dec    esp
  4079c4:	and    eax,0xf9b1053a
  4079c9:	ins    BYTE PTR es:[edi],dx
  4079ca:	out    0xf2,al
  4079cc:	pop    ss
  4079cd:	xor    ecx,DWORD PTR [eax+0x2]
  4079d0:	adc    DWORD PTR [ebx+0x1c],esi
  4079d3:	outs   dx,BYTE PTR ds:[esi]
  4079d4:	jns    0x407993
  4079d6:	push   es
  4079d7:	adc    eax,0x90e5f135
  4079dc:	and    BYTE PTR [eax-0x3a],cl
  4079df:	jo     0x407983
  4079e1:	out    dx,al
  4079e2:	lock call 0xa5a6f8aa
  4079e8:	adc    eax,0x27b3b8e
  4079ed:	or     esi,0x98d7f025
  4079f3:	daa    
  4079f4:	cmp    DWORD PTR fs:[edi+0x29cb6ced],esp
  4079fb:	jl     0x4079fd
  4079fd:	jmp    0x407a73
  4079ff:	in     eax,0xe3
  407a01:	fnstenv [eax+0x49]
  407a04:	gs inc ecx
  407a06:	inc    edx
  407a07:	mov    edi,0x2dd1a794
  407a0c:	rcr    edx,cl
  407a0e:	shl    BYTE PTR [ecx+0x2e598b55],1
  407a14:	icebp  
  407a15:	test   al,0x38
  407a17:	mov    bl,0x84
  407a19:	inc    ecx
  407a1a:	pop    ebp
  407a1b:	hlt    
  407a1c:	jge    0x4079be
  407a1e:	jge    0x407a06
  407a20:	xor    BYTE PTR [eax+eax*4-0x60],ah
  407a24:	js     0x407a65
  407a26:	fimul  DWORD PTR [ebp-0x57]
  407a29:	pop    ds
  407a2a:	retf   
  407a2b:	push   edi
  407a2c:	mov    esp,0xa3b8b605
  407a31:	xchg   esi,eax
  407a32:	mov    esp,eax
  407a34:	xchg   DWORD PTR [ebp-0x5072773e],edi
  407a3a:	push   edi
  407a3b:	adc    al,0xaf
  407a3d:	inc    esp
  407a3e:	inc    ebx
  407a3f:	add    esi,esp
  407a41:	push   esi
  407a42:	arpl   WORD PTR [edx],sp
  407a44:	adc    DWORD PTR [edi+edx*1],ebx
  407a47:	popf   
  407a48:	(bad)  
  407a49:	cwde   
  407a4a:	add    DWORD PTR [ecx],esi
  407a4c:	sbb    esp,ebx
  407a4e:	inc    ecx
  407a4f:	ss retf 0xfc6
  407a53:	push   ebx
  407a54:	div    BYTE PTR [ecx]
  407a56:	imul   esi,DWORD PTR [ebp+0x2d],0x35
  407a5a:	push   cs
  407a5b:	in     al,0x87
  407a5d:	pop    esp
  407a5e:	mov    edi,gs
  407a60:	inc    eax
  407a61:	cmp    DWORD PTR [ebx],ecx
  407a63:	fs cs fs ds popa 
  407a68:	les    ebx,FWORD PTR [edx-0x2]
  407a6b:	fsubr  DWORD PTR [ebx-0x68]
  407a6e:	daa    
  407a6f:	clc    
  407a70:	(bad)  
  407a71:	(bad)  
  407a73:	dec    esp
  407a74:	in     al,0x3c
  407a76:	mov    eax,ds:0x57f81810
  407a7b:	stc    
  407a7c:	in     eax,0x5c
  407a7e:	jne    0x407a4e
  407a80:	jp     0x407a7a
  407a82:	sub    al,0x6c
  407a84:	hlt    
  407a85:	enter  0x4963,0x91
  407a89:	loop   0x407aa9
  407a8b:	push   esp
  407a8c:	sub    esp,DWORD PTR [eax+edi*4-0x35]
  407a90:	pushf  
  407a91:	adc    al,0x41
  407a93:	and    al,0xad
  407a95:	xchg   BYTE PTR [edx],al
  407a97:	xchg   esi,eax
  407a98:	inc    eax
  407a99:	lea    ecx,[ebp+0x3984f0]
  407a9f:	jne    0x407a4b
  407aa1:	mov    edi,0x40653e39
  407aa6:	jns    0x407b1c
  407aa8:	jmp    0x407a8f
  407aaa:	lods   eax,DWORD PTR ds:[esi]
  407aab:	cmp    al,0x44
  407aad:	sbb    al,0xb2
  407ab0:	mov    ch,0x5d
  407ab2:	mov    edx,0x474dc88e
  407ab7:	(bad)  
  407ab8:	leave  
  407ab9:	adc    al,0x53
  407abb:	sbb    eax,0x2b205e54
  407ac0:	scas   al,BYTE PTR es:[edi]
  407ac1:	popf   
  407ac2:	into   
  407ac3:	adc    al,0x53
  407ac5:	pop    ss
  407ac6:	jae    0x407a90
  407ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac9:	xor    DWORD PTR [edi-0x38931906],0xffffffb2
  407ad0:	cmc    
  407ad1:	enter  0x7a9e,0xa4
  407ad5:	sbb    eax,0xcce59982
  407ada:	mov    DWORD PTR [ebp-0x315c4164],edi
  407ae0:	stos   BYTE PTR es:[edi],al
  407ae1:	aad    0x3e
  407ae3:	mov    eax,ds:0xf582d59
  407ae8:	xchg   BYTE PTR [edi+0x26de9d48],dh
  407aee:	(bad)  
  407aef:	or     eax,0x682eec07
  407af4:	fbstp  TBYTE PTR [eax-0xf]
  407af7:	sbb    al,0x5b
  407af9:	ins    DWORD PTR es:[edi],dx
  407afa:	cmp    ah,BYTE PTR [esi]
  407afc:	mov    esp,0xc2f516a6
  407b01:	cmp    al,0x1
  407b03:	push   ds
  407b04:	das    
  407b05:	mov    al,ds:0xe6b9fe02
  407b0a:	(bad)  
  407b0b:	sub    al,cl
  407b0d:	fwait
  407b0e:	imul   esp,DWORD PTR ds:0xe59ae80d,0x4d823711
  407b18:	or     eax,0xc41377ba
  407b1d:	adc    DWORD PTR [eax+0x1b2b9f85],ebp
  407b23:	mov    ebp,0x5c854f4a
  407b28:	jp     0x407ad4
  407b2a:	addr16 lahf 
  407b2c:	or     BYTE PTR gs:[esi+edx*4+0x12],bl
  407b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b32:	jne    0x407b13
  407b34:	cmp    DWORD PTR [ebx+0x3c],ebx
  407b37:	add    BYTE PTR [ebp+0x9],dh
  407b3a:	aam    0x9d
  407b3c:	jne    0x407ad3
  407b3e:	pop    esp
  407b3f:	retf   
  407b40:	jecxz  0x407b5a
  407b42:	cmp    BYTE PTR [ebx+0x5a009251],ah
  407b48:	out    0x86,eax
  407b4a:	shr    BYTE PTR [esi-0x5d],1
  407b4d:	mov    ch,0xf7
  407b4f:	pop    edi
  407b50:	pop    edi
  407b51:	ror    esi,1
  407b53:	fnstenv [eax]
  407b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b56:	push   esp
  407b57:	cmc    
  407b58:	adc    bh,BYTE PTR [edi]
  407b5a:	das    
  407b5b:	mov    bl,0x3b
  407b5d:	outs   dx,BYTE PTR ds:[esi]
  407b5e:	add    eax,0x5c33cb04
  407b63:	add    al,0xd3
  407b65:	das    
  407b66:	aam    0x33
  407b68:	pop    edi
  407b69:	packsswb mm2,QWORD PTR [edi-0x1f77d1b7]
  407b70:	rcr    DWORD PTR [esi+0x13509e2f],1
  407b76:	test   BYTE PTR [esi+0x38],cl
  407b79:	out    dx,eax
  407b7a:	jmp    0x9464:0x90686973
  407b81:	inc    esi
  407b82:	ret    
  407b83:	fwait
  407b84:	sub    al,BYTE PTR [ecx]
  407b86:	aad    0x59
  407b88:	mov    al,ds:0x8e324753
  407b8d:	pop    edx
  407b8e:	jo     0x407b26
  407b90:	jle    0x407bbd
  407b92:	mov    bl,0x8f
  407b94:	sub    esp,DWORD PTR [eax-0x3b9c40fd]
  407b9a:	mov    edx,0xeba6c6c1
  407b9f:	out    0xfd,eax
  407ba1:	and    eax,0xe841630c
  407ba6:	pop    ebp
  407ba7:	shl    ebx,1
  407ba9:	rol    DWORD PTR [edx+0x66],0xcc
  407bad:	leave  
  407bae:	sub    BYTE PTR [edi+edi*8+0xef43572],0x9f
  407bb6:	mov    eax,0xad3c558f
  407bbb:	add    edi,0x53a4acb3
  407bc1:	mov    ebx,0x707f12b8
  407bc6:	and    eax,0x84c83ff6
  407bcb:	inc    edx
  407bcc:	fwait
  407bcd:	mov    ss,WORD PTR ds:0xeceed9c9
  407bd3:	cmp    bl,cl
  407bd5:	out    0xcd,eax
  407bd7:	inc    esi
  407bd8:	xlat   BYTE PTR ds:[ebx]
  407bd9:	push   edi
  407bda:	cmc    
  407bdb:	adc    al,0x90
  407bdd:	(bad)  
  407bde:	sub    al,0x98
  407be0:	lock pop esp
  407be2:	dec    ebp
  407be3:	mov    esp,ecx
  407be5:	mov    ah,0x2d
  407be7:	add    DWORD PTR [esi],ebp
  407be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bea:	mov    ecx,0xccae87f2
  407bef:	mov    al,ds:0x835378ed
  407bf4:	inc    edx
  407bf5:	and    al,0x58
  407bf7:	ins    DWORD PTR es:[edi],dx
  407bf8:	adc    BYTE PTR [ebx],0x8d
  407bfb:	jge    0x407c49
  407bfd:	adc    eax,0x4c92f6a1
  407c02:	inc    eax
  407c03:	cs and eax,0xb93e0a78
  407c09:	(bad)  
  407c0a:	bound  esp,QWORD PTR [eax+0x7d]
  407c0d:	mov    esp,DWORD PTR [ecx]
  407c0f:	mov    ebp,0x4e310fa9
  407c14:	and    DWORD PTR [ebp-0x1a],esi
  407c17:	pop    ebp
  407c18:	ins    DWORD PTR es:[edi],dx
  407c19:	xor    al,0x7
  407c1b:	aam    0xd9
  407c1d:	push   cs
  407c1e:	mov    WORD PTR [edx-0x4b],ds
  407c21:	xchg   ecx,eax
  407c22:	dec    esp
  407c23:	mov    ds:0xa03a5929,al
  407c28:	out    0x77,eax
  407c2a:	inc    edi
  407c2b:	mov    cl,0x33
  407c2d:	mov    ds:0x79494cab,eax
  407c32:	dec    eax
  407c33:	sub    ebx,DWORD PTR [esi+0x6ccb0a2d]
  407c39:	pop    ecx
  407c3a:	rcr    DWORD PTR ds:0x164c7c3f,1
  407c40:	pop    ebp
  407c41:	(bad)  [ebp-0x753fb770]
  407c47:	lock mov bl,0xe7
  407c4a:	xor    al,0xb3
  407c4c:	add    ecx,DWORD PTR [edi-0x74]
  407c4f:	loope  0x407ccf
  407c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c52:	sar    DWORD PTR [ecx],1
  407c54:	test   eax,0xfd8e504d
  407c59:	push   es
  407c5a:	imul   edi,ebx,0xffffff9b
  407c5d:	jl     0x407cdc
  407c5f:	jmp    0x6747ff96
  407c64:	loope  0x407cb4
  407c66:	retf   0xce87
  407c69:	fldenv [ecx]
  407c6b:	push   ebp
  407c6c:	jne    0x407c6b
  407c6e:	and    BYTE PTR [esi+0x63],cl
  407c71:	sub    eax,0xf1a6e6e
  407c76:	retf   0x8386
  407c79:	inc    edx
  407c7a:	sahf   
  407c7b:	pop    ecx
  407c7c:	mov    eax,ds:0x6e4a1b6
  407c81:	mov    ah,0xe9
  407c83:	scas   al,BYTE PTR es:[edi]
  407c84:	arpl   WORD PTR [esi],bp
  407c86:	idiv   BYTE PTR [esi-0x42131d29]
  407c8c:	jb     0x407cf3
  407c8e:	rol    DWORD PTR [eax],cl
  407c90:	dec    ebx
  407c91:	cmp    ecx,DWORD PTR [edi+0x7f]
  407c94:	scas   eax,DWORD PTR es:[edi]
  407c95:	xor    al,0xb9
  407c97:	cmp    dl,BYTE PTR [ecx+0xc]
  407c9a:	in     eax,0x72
  407c9c:	xchg   ecx,eax
  407c9d:	xchg   ebx,eax
  407c9e:	lea    ebx,[edi]
  407ca0:	mov    WORD PTR [edx+0x25f915be],cs
  407ca6:	sbb    DWORD PTR [ecx-0xade9297],esp
  407cac:	ret    0xbe5e
  407caf:	mul    dh
  407cb1:	or     eax,0xf0e273b
  407cb6:	into   
  407cb7:	or     eax,DWORD PTR [esi+0x74b254ed]
  407cbd:	stos   DWORD PTR es:[edi],eax
  407cbe:	inc    edx
  407cbf:	pop    ds
  407cc0:	xor    eax,0x1939376d
  407cc5:	adc    al,0xfb
  407cc7:	inc    edi
  407cc8:	lock adc DWORD PTR es:[esp+eax*4-0x6d709b3d],esp
  407cd1:	mov    al,0xd5
  407cd3:	sar    ebx,0x22
  407cd6:	mov    ebx,0x74242074
  407cdb:	cmc    
  407cdc:	adc    DWORD PTR [ecx],edi
  407cde:	lds    ebp,FWORD PTR [esi+0x29]
  407ce1:	or     ebp,ecx
  407ce3:	mov    cl,0x14
  407ce5:	imul   esp,DWORD PTR [ecx-0x50daadc9],0x1a
  407cec:	es xor ebx,ecx
  407cef:	ins    BYTE PTR es:[edi],dx
  407cf0:	mov    cl,0x26
  407cf2:	mov    al,ch
  407cf4:	sub    ah,BYTE PTR [edx]
  407cf6:	sbb    ecx,edi
  407cf8:	pop    ecx
  407cf9:	adc    al,0x31
  407cfb:	popa   
  407cfc:	dec    esi
  407cfd:	xor    BYTE PTR [eax],dh
  407cff:	push   es
  407d00:	jmp    0x407cdd
  407d02:	adc    al,0x19
  407d04:	mov    dh,0x42
  407d06:	mov    esp,0x36ba85ae
  407d0b:	mov    al,0xb0
  407d0d:	(bad)  
  407d0e:	fidiv  WORD PTR [edi]
  407d10:	push   esp
  407d11:	call   0xaa51dc56
  407d16:	mov    WORD PTR [edi-0x1d],ds
  407d19:	sub    DWORD PTR [esi+0x20],edi
  407d1c:	test   eax,0x30a1899e
  407d21:	mov    dh,0xff
  407d23:	bound  eax,QWORD PTR [esi+eax*2+0x12]
  407d27:	rol    DWORD PTR [ebp-0x5947ae65],0x72
  407d2e:	lods   al,BYTE PTR ds:[esi]
  407d2f:	test   DWORD PTR [ebp+0x72384f1a],0x2de415fb
  407d39:	cmc    
  407d3a:	mov    esp,0x6ad22543
  407d3f:	mov    bl,0xfe
  407d41:	fst    QWORD PTR [edi-0x55]
  407d44:	mov    eax,0xcf9ae6a5
  407d49:	mov    esi,0x5842a15b
  407d4e:	stos   BYTE PTR es:[edi],al
  407d4f:	cld    
  407d50:	and    dl,ah
  407d52:	ss in  al,dx
  407d54:	cmp    BYTE PTR [ecx+0x62],bl
  407d57:	adc    al,BYTE PTR [ecx+0xb04286c]
  407d5d:	iret   
  407d5e:	jno    0x407cf5
  407d60:	je     0x407dbf
  407d62:	cld    
  407d63:	scas   al,BYTE PTR es:[edi]
  407d64:	idiv   bh
  407d66:	ret    0xa1ef
  407d69:	pop    edx
  407d6a:	outs   dx,DWORD PTR ds:[esi]
  407d6b:	in     eax,0x19
  407d6d:	sbb    DWORD PTR [edi],ebp
  407d6f:	xchg   ebx,eax
  407d70:	cmp    eax,0xd2334c27
  407d75:	pusha  
  407d76:	dec    eax
  407d77:	cmc    
  407d78:	xchg   esp,eax
  407d79:	inc    bl
  407d7b:	jecxz  0x407de5
  407d7d:	inc    edx
  407d7e:	inc    ebx
  407d7f:	mov    dl,0x81
  407d81:	scas   al,BYTE PTR es:[edi]
  407d82:	pop    esi
  407d83:	ror    BYTE PTR [ebx],1
  407d85:	push   0x17a11363
  407d8a:	add    BYTE PTR [esi+0x68d8afea],0xb0
  407d91:	jns    0x407d6f
  407d93:	rcl    DWORD PTR es:[edx*1+0x4738fea3],cl
  407d9b:	push   edi
  407d9c:	into   
  407d9d:	add    al,0xd
  407d9f:	test   DWORD PTR [edx-0x643abca3],ebp
  407da5:	push   ebx
  407da6:	icebp  
  407da7:	div    esi
  407da9:	mov    es,WORD PTR [esi]
  407dab:	mov    edi,ds
  407dad:	sbb    eax,0x2ee4666
  407db2:	lods   eax,DWORD PTR ds:[esi]
  407db3:	out    0x1,al
  407db5:	xor    eax,0xc2eac4d4
  407dba:	or     al,0xbb
  407dbc:	or     al,0x6b
  407dbe:	retf   
  407dbf:	jb     0x407e3d
  407dc1:	pop    ebx
  407dc2:	je     0x407dba
  407dc4:	(bad)  [esi+0x34]
  407dc7:	cmp    eax,0xccaa5a22
  407dcc:	jae    0x407d7c
  407dce:	out    dx,al
  407dcf:	out    dx,al
  407dd0:	xor    ecx,DWORD PTR gs:[eax-0x40]
  407dd4:	sbb    esp,DWORD PTR [edi-0x19]
  407dd7:	fst    DWORD PTR [esi+0x493ee48d]
  407ddd:	sub    eax,0xe8c8af4c
  407de2:	lods   eax,DWORD PTR ds:[esi]
  407de3:	repz iret 
  407de5:	lods   al,BYTE PTR ds:[esi]
  407de6:	or     bl,bh
  407de8:	add    BYTE PTR [edi],ah
  407dea:	les    esp,FWORD PTR [edx]
  407dec:	pop    ebx
  407ded:	rcr    BYTE PTR [eax],0x6
  407df0:	retf   0xe204
  407df3:	and    eax,DWORD PTR [ecx+edi*4+0x41]
  407df7:	dec    eax
  407df8:	or     BYTE PTR [edi],al
  407dfa:	cmp    edi,DWORD PTR [ecx-0xc]
  407dfd:	jp     0x407dc8
  407dff:	loopne 0x407e2c
  407e01:	fadd   QWORD PTR [eax+0x42]
  407e04:	push   0x75
  407e06:	loopne 0x407e59
  407e08:	jns    0x407d9f
  407e0a:	fild   QWORD PTR [eax-0x49a499a8]
  407e10:	pop    ecx
  407e11:	jo     0x407e28
  407e13:	mov    ds:0x14c01539,al
  407e18:	push   ebp
  407e19:	fistp  QWORD PTR [ebp-0x4b]
  407e1c:	add    BYTE PTR [eax],bl
  407e1e:	(bad)  
  407e20:	push   edx
  407e21:	add    edi,0xe4a04380
  407e27:	mov    dh,0xeb
  407e29:	stos   BYTE PTR es:[edi],al
  407e2a:	push   ss
  407e2b:	inc    esp
  407e2c:	inc    edx
  407e2d:	and    eax,0xd6903bb3
  407e32:	mov    ebx,0x6e51142a
  407e37:	(bad)  
  407e39:	loop   0x407dbc
  407e3b:	xor    ch,dl
  407e3d:	rcr    dl,0xd6
  407e40:	jnp    0x407e61
  407e42:	jle    0x407dc9
  407e44:	std    
  407e45:	fmul   DWORD PTR [edi-0x19]
  407e48:	jle    0x407e41
  407e4a:	adc    BYTE PTR [esi+0x62],bl
  407e4d:	popa   
  407e4e:	mov    ecx,0xc5fb588d
  407e53:	jo     0x407df1
  407e55:	les    ebp,FWORD PTR [ebx+0x59]
  407e58:	jnp    0x407e24
  407e5a:	pop    edi
  407e5b:	mov    ds:0x5f4c8483,eax
  407e60:	push   ebp
  407e61:	cld    
  407e62:	call   0xeb55:0xed4520b
  407e69:	loope  0x407e6e
  407e6b:	push   edx
  407e6c:	add    ah,bh
  407e6e:	jns    0x407ead
  407e70:	mov    edi,0x389b0f42
  407e75:	jmp    0xd3b633e8
  407e7a:	div    BYTE PTR [esi]
  407e7c:	push   0x4f
  407e7e:	add    eax,0x8c87df1
  407e83:	das    
  407e84:	iret   
  407e85:	outs   dx,BYTE PTR ds:[esi]
  407e86:	sbb    eax,0x4cc4fcfd
  407e8b:	cli    
  407e8c:	test   eax,0x1f9f1924
  407e91:	adc    eax,0x493f7735
  407e96:	mov    bl,0xf1
  407e98:	xchg   ecx,eax
  407e99:	pusha  
  407e9a:	lds    esi,FWORD PTR cs:0xa558fb03
  407ea1:	sbb    eax,0xa6b18994
  407ea6:	sbb    bh,al
  407ea8:	jp     0x407e8c
  407eaa:	mov    ecx,0x46334a94
  407eaf:	leave  
  407eb0:	cli    
  407eb1:	adc    DWORD PTR [edi-0x51a471a6],edi
  407eb7:	jns    0x407e94
  407eb9:	or     al,0xd7
  407ebb:	jmp    0x407f1a
  407ebd:	int3   
  407ebe:	(bad)
  407ec2:	inc    esp
  407ec3:	in     al,dx
  407ec4:	push   0xd6b077c9
  407ec9:	pop    eax
  407eca:	out    dx,eax
  407ecb:	outs   dx,DWORD PTR ds:[esi]
  407ecc:	cmc    
  407ecd:	sub    al,0x90
  407ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed0:	adc    edx,eax
  407ed2:	mov    esi,0x79e9e42f
  407ed7:	inc    edi
  407ed8:	push   ebx
  407ed9:	stc    
  407eda:	dec    ebx
  407edb:	cmp    eax,0x4c5546a6
  407ee0:	sahf   
  407ee1:	push   esi
  407ee2:	cs push esi
  407ee4:	mov    edx,0xc25fa947
  407ee9:	(bad)  
  407eea:	sbb    DWORD PTR [esi-0x3a49ef81],edx
  407ef0:	out    0x85,eax
  407ef2:	or     al,0x8
  407ef4:	jmp    0xb92c:0x8230e975
  407efb:	add    DWORD PTR [ecx*2-0x65857e14],0x6ec3e65d
  407f06:	mov    esi,0xa61ede52
  407f0b:	or     dl,BYTE PTR fs:[edi-0x74]
  407f0f:	mov    ebx,0xc296ddf2
  407f14:	sub    BYTE PTR [edi],0x9c
  407f17:	leave  
  407f18:	pop    ecx
  407f19:	xchg   edx,eax
  407f1a:	jne    0x407f05
  407f1c:	mov    al,0x50
  407f1e:	xchg   ebx,eax
  407f1f:	mov    esp,0xbbccb226
  407f24:	dec    eax
  407f25:	xor    DWORD PTR [edx-0x301e8d80],ecx
  407f2b:	int    0x5e
  407f2d:	add    BYTE PTR [eax],dh
  407f2f:	xor    edi,DWORD PTR [ebp-0x77]
  407f32:	mov    al,0x1d
  407f34:	inc    esp
  407f35:	add    al,0xaa
  407f37:	gs mov al,dl
  407f3a:	push   es
  407f3b:	fdivr  st,st(1)
  407f3d:	xor    al,0xd5
  407f3f:	cmp    eax,0xa7e1fc83
  407f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f45:	mov    WORD PTR [eax+0x33002a64],?
  407f4b:	pop    eax
  407f4c:	ror    BYTE PTR [eax+0x7d30d046],1
  407f52:	test   dl,bl
  407f54:	retf   0xd1a2
  407f57:	add    al,0xe3
  407f59:	in     al,dx
  407f5a:	mov    esp,ecx
  407f5c:	and    esi,ebp
  407f5e:	xor    DWORD PTR [eax-0x46],edx
  407f61:	sub    BYTE PTR [edi+0x4b9cc27],0xed
  407f68:	rcr    dh,0xc3
  407f6b:	jle    0x407fa0
  407f6d:	jno    0x407f64
  407f6f:	add    dh,bl
  407f71:	or     al,0x4c
  407f73:	push   cs
  407f74:	or     DWORD PTR [esi-0x12],esi
  407f77:	inc    esi
  407f78:	outs   dx,BYTE PTR ds:[esi]
  407f79:	cmp    al,0x5f
  407f7b:	push   0x24
  407f7d:	mov    esi,DWORD PTR [ebx-0x6ff96b53]
  407f83:	push   edi
  407f84:	add    esp,edx
  407f86:	xlat   BYTE PTR ds:[ebx]
  407f87:	icebp  
  407f88:	mov    edi,0xda9e45bf
  407f8d:	hlt    
  407f8e:	adc    dx,WORD PTR [ebp+0x64]
  407f92:	push   esi
  407f93:	hlt    
  407f94:	stos   BYTE PTR es:[edi],al
  407f95:	xchg   ebp,eax
  407f96:	jp     0x407f8b
  407f98:	push   es
  407f99:	jmp    0x930d956
  407f9e:	test   eax,0x6c30cd
  407fa3:	nop
  407fa4:	sub    ebx,DWORD PTR [ecx+0x486e991a]
  407faa:	stos   DWORD PTR es:[edi],eax
  407fab:	mov    ebx,0x8d854dd8
  407fb0:	cmp    bl,0xd4
  407fb3:	push   0x392772b8
  407fb8:	push   edx
  407fb9:	aas    
  407fba:	jo     0x408037
  407fbc:	jo     0x407f59
  407fbe:	push   eax
  407fbf:	sbb    BYTE PTR [ebx+edx*1+0x46],bl
  407fc3:	adc    al,0xc
  407fc5:	int3   
  407fc6:	mov    esp,0x4c76827d
  407fcb:	js     0x407f7f
  407fcd:	(bad)  
  407fce:	mov    cl,0x6a
  407fd0:	rdmsr  
  407fd2:	rcl    esp,cl
  407fd4:	and    al,0xac
  407fd6:	sbb    esi,esi
  407fd8:	dec    ebp
  407fd9:	pop    es
  407fda:	lods   eax,DWORD PTR ds:[esi]
  407fdb:	pop    ebp
  407fdc:	fild   WORD PTR [ebx-0x4f475422]
  407fe2:	in     al,0x92
  407fe4:	pop    ss
  407fe5:	daa    
  407fe6:	mov    eax,ds:0x4bca7a59
  407feb:	adc    edx,edi
  407fed:	pushf  
  407fee:	loope  0x40804d
  407ff0:	push   edx
  407ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff2:	jnp    0x407f8c
  407ff4:	in     al,0x7f
  407ff6:	cdq    
  407ff7:	ret    0xa540
  407ffa:	in     al,dx
  407ffb:	jbe    0x407f91
  407ffd:	aaa    
  407ffe:	pop    ebp
  407fff:	add    eax,0xefe46858
  408004:	iret   
  408005:	nop
  408006:	cmp    esp,DWORD PTR [edx]
  408008:	les    esp,FWORD PTR [ecx+0x1f]
  40800b:	mov    ecx,0xed676f62
  408010:	mov    ds:0x7fd2c9c3,al
  408015:	push   esp
  408016:	loopne 0x407ff9
  408018:	in     al,dx
  408019:	out    dx,al
  40801a:	sub    BYTE PTR [edi+0x39],al
  40801d:	loop   0x408062
  40801f:	fwait
  408020:	push   edx
  408021:	(bad)  
  408022:	stos   BYTE PTR es:[edi],al
  408023:	mov    edi,0xaf0827d0
  408028:	call   0x9f69:0x16d6e9fe
  40802f:	fsub   DWORD PTR [ebx+0x2b5730b8]
  408035:	push   0x39
  408037:	xchg   ebx,eax
  408038:	adc    dh,0x43
  40803b:	fwait
  40803c:	xor    BYTE PTR [eax+0x3d],al
  40803f:	cmc    
  408040:	cmovne ebx,DWORD PTR [edx]
  408043:	inc    ebp
  408044:	and    esi,ebp
  408046:	mov    al,0xde
  408048:	sbb    DWORD PTR [ebx],edi
  40804a:	jns    0x408019
  40804c:	aam    0x30
  40804e:	aad    0x5e
  408050:	repnz xor DWORD PTR [ecx-0x58ce4854],edx
  408057:	mov    eax,ds:0xe68fa29a
  40805c:	mov    ch,0x5b
  40805e:	leave  
  40805f:	mov    bl,0x9c
  408061:	das    
  408062:	shl    DWORD PTR [ebp-0x716b2384],cl
  408068:	ret    
  408069:	inc    cl
  40806b:	adc    ebx,DWORD PTR [esi+0x206dc0cc]
  408071:	sbb    DWORD PTR [ebx+eax*2],esp
  408074:	arpl   WORD PTR [ebx-0x3d],bx
  408077:	(bad)  
  408078:	out    0x90,eax
  40807a:	push   esp
  40807b:	fs jl  0x408048
  40807e:	loopne 0x4080bb
  408080:	fstp   TBYTE PTR [edx-0x18c9b602]
  408086:	lods   eax,DWORD PTR ds:[esi]
  408087:	push   eax
  408088:	arpl   di,bx
  40808a:	stc    
  40808b:	jnp    0x408029
  40808d:	xor    DWORD PTR [eax+0x6c],eax
  408090:	xchg   esi,eax
  408091:	sub    al,0xb4
  408093:	cdq    
  408094:	jb     0x4080d1
  408096:	jp     0x408030
  408098:	out    dx,eax
  408099:	or     al,0xdd
  40809b:	add    bl,ch
  40809d:	adc    esp,DWORD PTR ds:0x923cbef6
  4080a3:	push   es
  4080a4:	mov    ds:0x5db700f0,eax
  4080a9:	pop    es
  4080aa:	imul   ebp,DWORD PTR [ecx],0xd1c9fa02
  4080b0:	cli    
  4080b1:	cmp    eax,0x4e361967
  4080b6:	out    0x73,al
  4080b8:	lea    eax,[edx-0x7f82ac0f]
  4080be:	xchg   ebx,eax
  4080bf:	jl     0x4080c7
  4080c1:	shl    eax,0x20
  4080c4:	pop    ecx
  4080c5:	leave  
  4080c6:	lods   al,BYTE PTR ds:[esi]
  4080c7:	push   eax
  4080c8:	out    dx,eax
  4080c9:	and    ebp,DWORD PTR [esi-0x4a2ae0a9]
  4080cf:	pop    ecx
  4080d0:	in     eax,0x8f
  4080d2:	(bad)  
  4080d3:	fs cmc 
  4080d5:	imul   ebx,DWORD PTR [esi-0x6a422034],0x7fc51372
  4080df:	ret    
  4080e0:	out    dx,al
  4080e1:	(bad)  
  4080e2:	sar    eax,cl
  4080e4:	xchg   edx,eax
  4080e5:	addps  xmm7,XMMWORD PTR [esi]
  4080e8:	test   al,0x63
  4080ea:	inc    eax
  4080eb:	add    edx,DWORD PTR [edx]
  4080ed:	test   al,0x59
  4080ef:	xor    BYTE PTR [ebp-0x187c148a],0xd0
  4080f6:	fincstp 
  4080f8:	inc    esi
  4080f9:	adc    dh,BYTE PTR [ebp+0x61e4a736]
  4080ff:	inc    ebp
  408100:	xchg   edx,eax
  408101:	mov    esp,0x820c1e6c
  408106:	sar    DWORD PTR [ebx-0x7417a2ac],0x3b
  40810d:	push   0xc86958fb
  408112:	imul   edx,DWORD PTR ds:0xcacc5eb7,0x16d6fc21
  40811c:	cmc    
  40811d:	arpl   WORD PTR [ebp-0x4c750255],ax
  408123:	fwait
  408124:	cwde   
  408125:	repz in eax,0xb2
  408128:	sub    eax,0x4d2deffa
  40812d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40812e:	loop   0x4081a5
  408130:	icebp  
  408131:	aam    0x2a
  408133:	dec    esp
  408134:	adc    eax,0xd3e80ed5
  408139:	mov    edx,0xe668f0c9
  40813e:	dec    edx
  40813f:	add    DWORD PTR [ecx+0x1917b1f],edx
  408145:	enter  0x534a,0x31
  408149:	push   ebx
  40814a:	mov    bh,0x31
  40814c:	test   DWORD PTR [ecx+0x4b],ecx
  40814f:	mov    ebx,0x7c43d18e
  408154:	jno    0x40816b
  408156:	or     BYTE PTR [edx],ah
  408158:	in     eax,dx
  408159:	and    DWORD PTR [eax],ecx
  40815b:	jmp    0x955237db
  408160:	pop    edi
  408161:	xor    dh,bh
  408163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408164:	cwde   
  408165:	push   ebx
  408166:	lods   al,BYTE PTR ds:[esi]
  408167:	mov    edx,0x80b494d1
  40816c:	out    0x1e,eax
  40816e:	lahf   
  40816f:	mov    al,0x28
  408171:	jnp    0x408143
  408173:	xchg   edx,eax
  408174:	mov    BYTE PTR [ecx+0x1b],dl
  408177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408178:	ja     0x4081c4
  40817a:	push   edx
  40817b:	dec    ebx
  40817c:	aam    0x39
  40817e:	fisttp WORD PTR [ebx]
  408180:	push   ebx
  408181:	and    DWORD PTR [eax+0x7ca0db2],esi
  408187:	mov    al,ds:0x339032be
  40818c:	inc    edx
  40818d:	ins    BYTE PTR es:[edi],dx
  40818e:	arpl   sp,bp
  408190:	mov    bh,0xc8
  408192:	jns    0x4081e3
  408194:	test   eax,0xd27179a6
  408199:	xor    al,0xc
  40819b:	cmp    al,0xc2
  40819d:	dec    ecx
  40819e:	jg     0x4081fe
  4081a0:	(bad)  
  4081a1:	std    
  4081a2:	and    eax,0xa0583684
  4081a7:	mov    eax,0x773fd71d
  4081ac:	xor    BYTE PTR [ecx+0x36],cl
  4081af:	cmp    eax,0xa5d44217
  4081b4:	push   esi
  4081b5:	sbb    dh,BYTE PTR [edx]
  4081b7:	bound  ebx,QWORD PTR [eax+0x450c4c27]
  4081bd:	out    0x66,al
  4081bf:	(bad)  
  4081c0:	lock cdq 
  4081c2:	in     eax,dx
  4081c3:	dec    ebx
  4081c4:	lods   al,BYTE PTR ds:[esi]
  4081c5:	sar    DWORD PTR fs:[esi+0x1d],1
  4081c9:	pop    ss
  4081ca:	xor    ebx,DWORD PTR [edi-0xb]
  4081cd:	mov    eax,ds:0x8d523d1f
  4081d2:	loop   0x40815f
  4081d4:	mov    ah,0xc3
  4081d6:	dec    edx
  4081d7:	xchg   DWORD PTR [edi],edx
  4081d9:	daa    
  4081da:	lahf   
  4081db:	rcr    DWORD PTR [ecx+0x68],1
  4081de:	xor    eax,0xa6403024
  4081e3:	popf   
  4081e4:	push   esi
  4081e5:	inc    ebx
  4081e6:	data16 mov WORD PTR [edi+0x19],fs
  4081ea:	push   eax
  4081eb:	in     eax,dx
  4081ec:	jo     0x40818f
  4081ee:	repnz xor DWORD PTR [edi+esi*4],0xffffffe1
  4081f3:	mov    ebx,0xda414b4a
  4081f8:	jo     0x40824f
  4081fa:	jns    0x40826d
  4081fc:	cmp    DWORD PTR ds:0xaab8f3d9,eax
  408202:	jg     0x4081e6
  408204:	je     0x408279
  408206:	leave  
  408207:	pop    es
  408208:	or     cl,BYTE PTR ds:0x6225e425
  40820e:	jmp    0x408202
  408210:	jmp    0x947d:0xe7263f5f
  408217:	push   ss
  408218:	ds (bad) 
  40821a:	sahf   
  40821b:	iret   
  40821c:	out    0xf0,eax
  40821e:	pop    ebp
  40821f:	dec    edi
  408220:	adc    ecx,DWORD PTR [edi]
  408222:	sub    BYTE PTR [eax-0x6bcf55ef],ah
  408228:	xor    al,0x91
  40822a:	push   di
  40822c:	ins    BYTE PTR es:[edi],dx
  40822d:	inc    edx
  40822e:	adc    BYTE PTR [eax+0x53],dh
  408231:	mov    ebx,0xa0070c86
  408236:	add    DWORD PTR [edi-0x19],eax
  408239:	sbb    dh,bh
  40823b:	out    dx,eax
  40823c:	test   eax,0x307a413e
  408241:	xor    dl,dl
  408243:	push   es
  408244:	sub    ebp,DWORD PTR [eax-0x5d]
  408247:	js     0x4081f2
  408249:	mov    esp,0x6bfbd4e5
  40824e:	jbe    0x40822c
  408250:	xor    edx,eax
  408252:	ficomp DWORD PTR [esi+ebx*2-0x7407a58a]
  408259:	rol    BYTE PTR [edi+edi*1-0x80],0x5a
  40825e:	scas   eax,DWORD PTR es:[edi]
  40825f:	mov    ch,0xbc
  408261:	out    0xd8,al
  408263:	push   edi
  408264:	mov    dl,0x4c
  408266:	aaa    
  408267:	and    bl,ah
  408269:	int3   
  40826a:	das    
  40826b:	mov    al,ds:0xc0abd61f
  408270:	repnz mov ch,BYTE PTR [ecx]
  408273:	fisubr DWORD PTR [ebx+ebp*1-0x59838054]
  40827a:	add    bh,dh
  40827c:	repnz add eax,0x99951ab5
  408282:	in     eax,0x71
  408284:	dec    esp
  408285:	add    BYTE PTR [ecx+0x489292d2],bl
  40828b:	std    
  40828c:	lock sbb eax,0xf5a8c8e
  408292:	lds    edi,FWORD PTR [edi+0x48]
  408295:	fcomp  DWORD PTR [eax+edx*8]
  408298:	cmc    
  408299:	lods   eax,DWORD PTR ds:[esi]
  40829a:	arpl   WORD PTR [eax+0x52a0bc1],di
  4082a0:	test   DWORD PTR [eax-0x5f147e41],esp
  4082a6:	in     eax,dx
  4082a7:	lock (bad) 
  4082a9:	arpl   WORD PTR [edi],ax
  4082ab:	add    al,0x65
  4082ad:	dec    ecx
  4082ae:	or     al,BYTE PTR [esi+edx*1]
  4082b1:	or     eax,0x3e9d54ea
  4082b6:	pop    es
  4082b7:	inc    esp
  4082b8:	loop   0x408268
  4082ba:	xor    esi,DWORD PTR [ebp-0x50c8a29b]
  4082c0:	adc    al,0xa4
  4082c3:	sub    BYTE PTR [ecx+0x48],cl
  4082c6:	cwde   
  4082c7:	add    ecx,DWORD PTR [esi-0x35]
  4082ca:	cmp    BYTE PTR [edx+ecx*1-0x49],bl
  4082ce:	std    
  4082cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d0:	(bad)  
  4082d1:	xchg   ebx,eax
  4082d2:	jo     0x40834b
  4082d4:	fmul   QWORD PTR [ebx-0x39cc37bb]
  4082da:	add    eax,edi
  4082dc:	mov    DWORD PTR [ebp-0x8],eax
  4082df:	mov    DWORD PTR [ebp-0x2c],0xf89c8590
  4082e6:	mov    DWORD PTR [ebp-0x44],0xf89c85bf
  4082ed:	mov    eax,DWORD PTR [ebp-0x38]
  4082f0:	mov    edx,DWORD PTR [ebp-0x14]
  4082f3:	xor    eax,esi
  4082f5:	add    eax,edi
  4082f7:	cmp    edx,eax
  4082f9:	je     0x40cbaa
  4082ff:	mov    eax,DWORD PTR [ebp-0x20]
  408302:	xor    eax,esi
  408304:	mov    edx,0xffcd8d14
  408309:	sub    edx,eax
  40830b:	add    edx,DWORD PTR [ebp-0x14]
  40830e:	mov    eax,DWORD PTR [ebp-0x20]
  408311:	mov    ebx,DWORD PTR [ebp-0x10]
  408314:	xor    eax,esi
  408316:	add    eax,edi
  408318:	imul   eax,ebx
  40831b:	cmp    eax,edx
  40831d:	ja     0x40cba7
  408323:	jmp    0x40a67f
  408328:	iret   
  408329:	xor    ecx,DWORD PTR [esi-0x3c7071c1]
  40832f:	add    DWORD PTR [ebx],0xfffffff7
  408332:	adc    edx,ebx
  408334:	jle    0x4083a7
  408336:	or     edx,DWORD PTR [ecx+edi*4+0x3b7a7a15]
  40833d:	pop    edi
  40833e:	jp     0x4083ba
  408340:	xchg   ebx,eax
  408341:	sbb    esi,esi
  408343:	jns    0x4082cc
  408345:	sbb    ch,BYTE PTR [esi+0x6161d5fd]
  40834b:	rol    ch,1
  40834d:	clc    
  40834e:	cmp    DWORD PTR [esi],esi
  408350:	ror    BYTE PTR [eax+0x1b],0x5e
  408354:	push   0x408b66c2
  408359:	xchg   ecx,eax
  40835a:	loop   0x408300
  40835c:	mov    ah,0x7a
  40835e:	int3   
  40835f:	or     al,0x72
  408361:	mov    esp,DWORD PTR [edi-0x2d49006]
  408367:	xchg   edi,eax
  408368:	(bad)  
  408369:	sub    edi,edi
  40836b:	out    0xf9,eax
  40836d:	outs   dx,DWORD PTR ds:[esi]
  40836e:	repnz mov al,0x2a
  408371:	jle    0x40830c
  408373:	jmp    DWORD PTR [eax-0x23]
  408376:	cwde   
  408377:	cwde   
  408378:	pop    edi
  408379:	add    BYTE PTR [eax+0x3eb53f44],ah
  40837f:	adc    DWORD PTR [eax-0x36b011a4],edx
  408385:	cmp    eax,0x7d0ee60
  40838a:	sub    al,0xd6
  40838c:	push   ss
  40838d:	push   0xf4c376a
  408392:	or     BYTE PTR [eax],bl
  408394:	xchg   ebp,eax
  408395:	stc    
  408396:	mov    ebx,0x684f0110
  40839b:	(bad)  
  40839c:	or     eax,0x948ba365
  4083a1:	pop    ecx
  4083a2:	sbb    al,0xdb
  4083a4:	add    al,0x6f
  4083a6:	push   esp
  4083a7:	stc    
  4083a8:	fst    QWORD PTR [ecx+eax*8]
  4083ab:	cdq    
  4083ac:	das    
  4083ad:	das    
  4083ae:	stc    
  4083af:	arpl   WORD PTR [edx],ax
  4083b1:	(bad)  
  4083b2:	aaa    
  4083b3:	xchg   ecx,eax
  4083b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b5:	cld    
  4083b6:	shr    BYTE PTR [esi-0x4b7b67d0],cl
  4083bc:	xchg   edi,eax
  4083bd:	xchg   edx,eax
  4083be:	(bad)  
  4083bf:	retf   
  4083c0:	xor    ecx,DWORD PTR [ecx]
  4083c2:	cmp    BYTE PTR [ebx],cl
  4083c4:	xor    esi,DWORD PTR [edi]
  4083c6:	int3   
  4083c7:	das    
  4083c8:	cmp    al,0x99
  4083ca:	lahf   
  4083cb:	xchg   BYTE PTR [esi],ah
  4083cd:	jns    0x40836e
  4083cf:	add    al,BYTE PTR [ebx]
  4083d1:	ret    
  4083d2:	mov    dh,0xa5
  4083d4:	nop
  4083d5:	inc    ecx
  4083d6:	dec    ebx
  4083d7:	sub    eax,0xbc2e9d8c
  4083dc:	jmp    DWORD PTR [ebx+edi*8+0x5ee00faf]
  4083e3:	xchg   esp,eax
  4083e4:	and    eax,0x579b3c62
  4083e9:	pop    ss
  4083ea:	jle    0x40845f
  4083ec:	inc    edi
  4083ed:	push   0xa24c6091
  4083f2:	jnp    0x4083f4
  4083f4:	add    bh,0xd6
  4083f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f8:	mov    ebp,0xd3fd60cc
  4083fd:	cwde   
  4083fe:	ret    0xf31b
  408401:	mov    al,ds:0x8e359314
  408406:	ins    DWORD PTR es:[edi],dx
  408407:	xor    ecx,esi
  408409:	outs   dx,DWORD PTR ds:[esi]
  40840a:	mov    esi,0xac63c11
  40840f:	les    esp,FWORD PTR [eax+0x31ecddbb]
  408415:	jg     0x40839b
  408417:	pushf  
  408418:	jnp    0x408459
  40841a:	dec    esp
  40841b:	iret   
  40841c:	sub    DWORD PTR [ecx],esp
  40841e:	jmp    0x40845c
  408420:	cmp    al,0x5e
  408422:	icebp  
  408423:	stos   DWORD PTR es:[edi],eax
  408424:	add    bl,BYTE PTR [edx-0x83d3dcd]
  40842a:	jae    0x408409
  40842c:	enter  0x2ec,0x7d
  408430:	sti    
  408431:	mov    eax,0x31bcbf2e
  408436:	xchg   ecx,eax
  408437:	es inc esi
  408439:	xchg   edi,eax
  40843a:	jmp    0x4083eb
  40843c:	inc    eax
  40843d:	test   DWORD PTR [esi+0x31],0x8652865a
  408444:	js     0x40841d
  408446:	ins    BYTE PTR es:[edi],dx
  408447:	shl    DWORD PTR [edx],1
  408449:	int3   
  40844a:	out    0xeb,eax
  40844c:	cmp    DWORD PTR [ecx-0x29583fc8],ebp
  408452:	into   
  408453:	dec    esp
  408454:	mov    esi,0x509a3b5a
  408459:	cmp    DWORD PTR [ecx+0x4d],edx
  40845c:	mov    ch,0x5c
  40845e:	push   eax
  40845f:	pop    es
  408460:	xor    DWORD PTR [ecx-0x3fab67f7],0xb2cb442d
  40846a:	(bad)  
  40846b:	mov    dh,0x45
  40846d:	sar    DWORD PTR [edx+0x9d8a3fc],1
  408473:	aas    
  408474:	sbb    al,0xcc
  408476:	mov    ds:0x9d219913,al
  40847b:	push   edx
  40847c:	sub    DWORD PTR [ecx+0x51d32a56],eax
  408482:	jo     0x408435
  408484:	(bad)  
  408485:	lods   eax,DWORD PTR ds:[esi]
  408486:	push   ebp
  408487:	int    0x44
  408489:	mov    esp,0xdf6d4702
  40848e:	aad    0x57
  408490:	in     eax,0x22
  408492:	scas   al,BYTE PTR es:[edi]
  408493:	imul   edx,DWORD PTR [edi-0x365a04b0],0xffffffe4
  40849a:	jmp    0xacd6d2db
  40849f:	and    BYTE PTR [ecx-0x4b],ah
  4084a2:	ret    
  4084a3:	sub    esi,DWORD PTR [edx]
  4084a5:	fs ss mov esi,0x891b721f
  4084ac:	cmp    al,0x53
  4084ae:	or     eax,DWORD PTR [edi-0x3a]
  4084b1:	xchg   ebx,eax
  4084b2:	ja     0x408450
  4084b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b5:	ins    DWORD PTR es:[edi],dx
  4084b6:	sub    eax,0xd964254e
  4084bb:	dec    BYTE PTR [esi-0x7a]
  4084be:	rcl    BYTE PTR [ebx+ebp*1+0x128e6dbc],cl
  4084c5:	call   0x6819:0x981a1ed1
  4084cc:	jne    0x408479
  4084ce:	je     0x408478
  4084d0:	jo     0x408547
  4084d2:	popf   
  4084d3:	ret    
  4084d4:	jmp    0xad5591d7
  4084d9:	mov    eax,ds:0x27ef7af0
  4084de:	test   al,0x93
  4084e0:	call   0x162:0x2e902f84
  4084e7:	adc    DWORD PTR ds:0x609cd747,esi
  4084ed:	or     esp,DWORD PTR [ebp+0x2e]
  4084f0:	jno    0x40854c
  4084f2:	pop    esp
  4084f3:	adc    bl,dh
  4084f5:	hlt    
  4084f6:	scas   al,BYTE PTR es:[edi]
  4084f7:	dec    ecx
  4084f8:	inc    esi
  4084f9:	mov    ebx,0x96e103b7
  4084fe:	add    DWORD PTR [edx-0x18],ebp
  408501:	xchg   DWORD PTR [esi+0x2e620eac],esi
  408507:	mov    ds:0xc6357983,eax
  40850c:	push   esp
  40850d:	test   edi,ebx
  40850f:	mov    dl,0xd
  408511:	or     al,0xf1
  408513:	lods   al,BYTE PTR ds:[esi]
  408514:	push   ss
  408515:	in     al,dx
  408516:	popa   
  408517:	jnp    0x4084b3
  408519:	xor    DWORD PTR [ebx-0x6a],ecx
  40851c:	je     0x40850a
  40851e:	outs   dx,DWORD PTR ds:[esi]
  40851f:	ret    
  408520:	mov    ecx,0x2ea94a6e
  408525:	mov    eax,ds:0xabec231c
  40852a:	or     eax,0xe9c33fb7
  40852f:	cmp    eax,0xb7799453
  408534:	fchs   
  408536:	sub    DWORD PTR [esp+eax*4-0x4b877844],ebp
  40853d:	push   0xffffffef
  40853f:	sar    BYTE PTR [ecx-0x2e],cl
  408542:	fst    QWORD PTR [edx]
  408544:	scas   al,BYTE PTR es:[edi]
  408545:	fdivp  st(3),st
  408547:	and    cl,al
  408549:	mov    esi,0xdcea2d7a
  40854e:	ds ds push esp
  408551:	test   eax,0xdb781f57
  408556:	push   es
  408557:	adc    DWORD PTR [edx+0x43a6459],ecx
  40855d:	fcom   st(3)
  40855f:	xor    BYTE PTR [esi-0x6e],bh
  408562:	cmp    ah,ah
  408564:	das    
  408565:	mov    DWORD PTR [eax-0x52],ebp
  408568:	mov    ch,0xa5
  40856a:	aam    0xd8
  40856c:	dec    esp
  40856d:	fbld   TBYTE PTR [edx]
  40856f:	dec    eax
  408570:	cmp    ah,cl
  408572:	lahf   
  408573:	sub    al,0xc1
  408575:	mov    ebp,0x3ac07788
  40857a:	cmp    ch,dl
  40857c:	nop
  40857d:	loope  0x408558
  40857f:	inc    edx
  408580:	mov    ch,bh
  408582:	inc    esi
  408583:	inc    ebp
  408584:	ror    BYTE PTR [esi+edi*4+0x55],1
  408588:	pop    edi
  408589:	xchg   esi,eax
  40858a:	sahf   
  40858b:	out    dx,eax
  40858c:	mov    ds:0x802efc92,al
  408591:	xor    DWORD PTR [ecx+eiz*4],ebx
  408594:	clc    
  408595:	les    ebx,FWORD PTR [ecx-0x56]
  408598:	outs   dx,DWORD PTR ds:[esi]
  408599:	push   esp
  40859a:	mov    ebx,0x2213ee32
  40859f:	mov    esp,0x5e24a507
  4085a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a5:	jb     0x408562
  4085a7:	test   al,0xc8
  4085a9:	adc    edi,DWORD PTR [esi-0x268f350e]
  4085af:	adc    al,0x8a
  4085b1:	in     eax,0x23
  4085b3:	aam    0x30
  4085b5:	pop    ss
  4085b6:	ds sbb al,0x86
  4085b9:	(bad)  
  4085bb:	js     0x4085a5
  4085bd:	pusha  
  4085be:	xchg   ebx,eax
  4085bf:	push   es
  4085c0:	or     eax,0xe7005ecf
  4085c5:	std    
  4085c6:	mov    ds:0x8a3ee07e,al
  4085cb:	cmc    
  4085cc:	xor    eax,0x93b0b94b
  4085d1:	sbb    DWORD PTR [ecx+0x6234be2d],ebp
  4085d7:	fadd   QWORD PTR [eax-0x6f]
  4085da:	dec    ecx
  4085db:	(bad)  
  4085dc:	das    
  4085dd:	retf   
  4085de:	cmp    al,BYTE PTR [esi+ecx*4+0x1153cf8e]
  4085e5:	shl    DWORD PTR [edx-0x23],0xab
  4085e9:	(bad)  
  4085ea:	fsub   st(3),st
  4085ec:	add    al,0x9c
  4085ee:	add    al,0x3c
  4085f0:	xor    ecx,DWORD PTR [edx]
  4085f2:	cmp    eax,esi
  4085f4:	adc    eax,0x2fcab4eb
  4085f9:	jo     0x4085fe
  4085fb:	xchg   esi,eax
  4085fc:	inc    ecx
  4085fd:	dec    ebx
  4085fe:	dec    ebx
  4085ff:	pop    edi
  408600:	in     al,dx
  408601:	in     al,dx
  408602:	xchg   al,dh
  408604:	je     0x4085b6
  408606:	retf   0x4d8
  408609:	(bad)  
  40860a:	adc    DWORD PTR [edx-0x21aac588],esp
  408610:	and    BYTE PTR [esi],dl
  408612:	jecxz  0x4085bd
  408614:	nop
  408615:	mov    cl,0x63
  408617:	jmp    0x590f330a
  40861c:	fucom  st(0)
  40861e:	inc    eax
  40861f:	push   0x77
  408621:	arpl   WORD PTR [esi+0x5de812b3],dx
  408627:	adc    edx,edx
  408629:	push   ss
  40862a:	jbe    0x408690
  40862c:	push   es
  40862d:	fs inc eax
  40862f:	jmp    0xccfddd49
  408634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408635:	jne    0x408615
  408637:	ja     0x4085bb
  408639:	mov    cl,cl
  40863b:	mov    edi,0x9048fdcc
  408640:	push   cs
  408641:	shl    BYTE PTR [edi-0x6e093c12],1
  408647:	dec    esi
  408648:	icebp  
  408649:	and    al,0xc2
  40864b:	mov    es,WORD PTR [ebx]
  40864d:	lock ss dec esp
  408650:	add    ebx,DWORD PTR ds:0x71da6c02
  408656:	mov    ebp,0x10dd2e41
  40865b:	pusha  
  40865c:	lods   al,BYTE PTR ds:[esi]
  40865d:	mov    dh,0x24
  40865f:	jns    0x40864b
  408661:	mov    ebp,ebp
  408663:	xor    ah,BYTE PTR [edi]
  408665:	lock mov ax,ds:0x48b43560
  40866c:	inc    esi
  40866d:	loop   0x408689
  40866f:	xchg   DWORD PTR [ebp+0x2b],edx
  408672:	add    ch,BYTE PTR [ebx+0x540a6ef9]
  408678:	xor    eax,0x8bd0b8b4
  40867d:	cmp    BYTE PTR [edi-0x3a],ah
  408680:	loopne 0x4086c7
  408682:	test   BYTE PTR [ecx-0x6d39f86f],dh
  408688:	inc    esi
  408689:	cmc    
  40868a:	pop    esi
  40868b:	(bad)  
  40868c:	jo     0x408641
  40868e:	(bad)  [esi+0x6c6fa2fb]
  408694:	test   DWORD PTR [ebp-0x73],ebp
  408697:	clc    
  408698:	sbb    ah,al
  40869a:	xchg   BYTE PTR [edx+0x5d92c18a],ah
  4086a0:	popa   
  4086a1:	lea    ebx,[eax-0x78153078]
  4086a7:	ins    BYTE PTR es:[edi],dx
  4086a8:	adc    dh,BYTE PTR [ebp-0x62a142d7]
  4086ae:	(bad)  
  4086af:	jle    0x4086fb
  4086b1:	mov    ecx,0x667cc84c
  4086b6:	ss ret 0xdf8a
  4086ba:	mov    ah,0x94
  4086bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086be:	sahf   
  4086bf:	mov    ?,ecx
  4086c1:	inc    ecx
  4086c2:	pop    edx
  4086c3:	cdq    
  4086c4:	ret    0xf339
  4086c7:	scas   eax,DWORD PTR es:[edi]
  4086c8:	scas   al,BYTE PTR es:[edi]
  4086c9:	mov    al,0x56
  4086cb:	sub    DWORD PTR [edi],ecx
  4086cd:	push   es
  4086ce:	push   eax
  4086cf:	or     esp,esi
  4086d1:	fsubr  QWORD PTR [esi+0x1b]
  4086d4:	xchg   edi,ebp
  4086d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d7:	movntq QWORD PTR [edi-0xa9b15f1],mm2
  4086de:	and    edx,DWORD PTR [eax-0x1a19ce99]
  4086e4:	int    0xd
  4086e6:	ins    DWORD PTR es:[edi],dx
  4086e7:	mov    bl,0x78
  4086e9:	cmp    al,0xaa
  4086eb:	jo     0x4086d4
  4086ed:	ins    DWORD PTR es:[edi],dx
  4086ee:	mov    ds:0x78c60559,al
  4086f3:	fmul   st(2),st
  4086f5:	pop    ebx
  4086f6:	out    0x9b,al
  4086f8:	lods   eax,DWORD PTR ds:[esi]
  4086f9:	xchg   edx,eax
  4086fa:	sbb    ch,BYTE PTR [esi]
  4086fc:	adc    ah,BYTE PTR [edi]
  4086fe:	idiv   DWORD PTR [edx]
  408700:	popf   
  408701:	adc    eax,0xe5423212
  408706:	mov    ah,0x97
  408708:	mov    BYTE PTR [eax+eiz*4+0x6e],dl
  40870c:	push   0x8275b34f
  408711:	sub    esi,ebx
  408713:	add    esi,DWORD PTR [esi-0xdb255c4]
  408719:	inc    ebp
  40871a:	mov    esp,db6
  40871d:	push   eax
  40871e:	adc    bh,ah
  408720:	adc    edx,DWORD PTR [edx]
  408722:	cmp    BYTE PTR [ecx],cl
  408724:	scas   eax,DWORD PTR es:[edi]
  408725:	xor    edi,esi
  408727:	and    eax,0x3e7a7a19
  40872c:	add    BYTE PTR [ebx],0x4a
  40872f:	fs xor eax,0x883774b6
  408735:	test   ebp,eax
  408737:	cld    
  408738:	(bad)  
  408739:	aam    0x40
  40873b:	mov    ah,0xeb
  40873d:	push   ebp
  40873e:	mov    dl,0xd0
  408740:	xlat   BYTE PTR ds:[ebx]
  408741:	cmp    eax,0x7d5ebb79
  408746:	add    eax,0x3211267f
  40874b:	fwait
  40874c:	loopne 0x40871f
  40874e:	xor    cl,ch
  408750:	shl    BYTE PTR [ebx],0x3a
  408753:	out    0xa6,al
  408755:	jecxz  0x4087b9
  408757:	jne    0x4087d1
  408759:	(bad)  
  40875a:	popf   
  40875b:	jp     0x4087b6
  40875d:	leave  
  40875e:	test   DWORD PTR [edx],eax
  408760:	sub    DWORD PTR [ecx],0x7b
  408763:	cdq    
  408764:	xor    DWORD PTR [edi-0x15],ebp
  408767:	and    BYTE PTR [edi],0x45
  40876a:	(bad)  
  40876b:	ffreep st(1)
  40876d:	mov    ds:0x7eaceb55,al
  408772:	xchg   BYTE PTR [eax-0x1fd1a826],bh
  408778:	das    
  408779:	jae    0x40877a
  40877b:	jmp    0xc214:0x9ebfd54a
  408782:	lock add al,0xd5
  408785:	das    
  408786:	enter  0x4f1,0x1b
  40878a:	seto   BYTE PTR [ecx-0x15bfbac]
  408791:	or     BYTE PTR [esi],cl
  408793:	sub    edx,DWORD PTR [ebx+0x7c]
  408796:	in     al,0x50
  408798:	ds adc ch,dl
  40879b:	jno    0x408750
  40879d:	test   eax,0x566b153e
  4087a2:	mov    ds:0xbdb41dd9,eax
  4087a7:	call   0x1225:0xc39b8be9
  4087ae:	das    
  4087af:	cdq    
  4087b0:	inc    ecx
  4087b1:	mov    es,WORD PTR [ebx+edx*8+0x3]
  4087b5:	xor    DWORD PTR [edx-0x7a82c457],edi
  4087bb:	cmc    
  4087bc:	into   
  4087bd:	or     al,0xf4
  4087bf:	xor    al,0xb
  4087c1:	mov    esp,0xdd64ee40
  4087c6:	mov    dl,0xac
  4087c8:	data16 jl 0x4087da
  4087cb:	xor    al,dl
  4087cd:	jno    0x4087b3
  4087cf:	pop    ebx
  4087d0:	pop    es
  4087d1:	outs   dx,BYTE PTR ds:[esi]
  4087d2:	jmp    0x2275:0x8a36a27
  4087d9:	ins    BYTE PTR es:[edi],dx
  4087da:	inc    esi
  4087db:	jmp    0x408858
  4087dd:	or     al,0x5b
  4087df:	in     al,dx
  4087e0:	das    
  4087e1:	lods   al,BYTE PTR ds:[esi]
  4087e2:	and    eax,0xd7a8b357
  4087e7:	call   DWORD PTR [esi+edi*8]
  4087ea:	(bad)  
  4087eb:	jo     0x408866
  4087ed:	dec    ecx
  4087ee:	xor    BYTE PTR [esi+0x21],0xf
  4087f2:	inc    ecx
  4087f3:	fistp  DWORD PTR ds:[edx]
  4087f6:	loope  0x4087c5
  4087f8:	outs   dx,BYTE PTR ds:[esi]
  4087f9:	aad    0x9
  4087fb:	pop    eax
  4087fc:	lods   eax,DWORD PTR ds:[esi]
  4087fd:	mov    eax,ds:0x61ceda72
  408802:	or     al,0x48
  408804:	mov    eax,ds:0xc4cb69f4
  408809:	sub    BYTE PTR [edx+0x68],bh
  40880c:	fdivr  QWORD PTR [ebx]
  40880e:	(bad)  
  40880f:	mov    al,ds:0xdc277817
  408814:	(bad)
  408818:	pop    edi
  408819:	mov    BYTE PTR [edx-0x16],cl
  40881c:	call   esi
  40881e:	xor    eax,0x275edae0
  408823:	aam    0x79
  408825:	pop    esi
  408826:	loop   0x408808
  408828:	jo     0x4087ef
  40882a:	add    BYTE PTR [edx+0x34],ah
  40882d:	xor    DWORD PTR [eax+0x3b7dd82d],0xffffff8c
  408834:	std    
  408835:	sbb    eax,DWORD PTR [eax]
  408837:	adc    dl,BYTE PTR [ecx+0x26a46642]
  40883d:	mov    esp,0x4431042
  408842:	neg    DWORD PTR [esi+eiz*8]
  408845:	or     ch,BYTE PTR [ecx-0x160ecd7a]
  40884b:	jns    0x408818
  40884d:	sub    eax,DWORD PTR [ebx+0xd74d454]
  408853:	push   edi
  408854:	pop    ebp
  408855:	scas   al,BYTE PTR es:[edi]
  408856:	cmc    
  408857:	iret   
  408858:	mov    bl,0x4d
  40885a:	lods   eax,DWORD PTR ds:[esi]
  40885b:	(bad)  
  40885c:	icebp  
  40885d:	aas    
  40885e:	pop    ebx
  40885f:	inc    edx
  408860:	push   ebx
  408861:	pop    es
  408862:	sbb    edi,eax
  408864:	xchg   esp,eax
  408865:	cmp    ch,ah
  408867:	fwait
  408868:	retf   
  408869:	add    ch,bl
  40886b:	cdq    
  40886c:	shl    DWORD PTR [edi],cl
  40886e:	mov    ebp,0x9d88d336
  408873:	xchg   ecx,eax
  408874:	aam    0xcf
  408876:	lods   al,BYTE PTR ds:[esi]
  408877:	cdq    
  408878:	or     esi,DWORD PTR [edx]
  40887a:	jecxz  0x4088b6
  40887c:	push   es
  40887d:	arpl   cx,ax
  40887f:	dec    ecx
  408880:	xor    al,0xff
  408882:	ret    
  408883:	pop    esp
  408884:	leave  
  408885:	sub    BYTE PTR [eax-0x53],0x38
  408889:	jl     0x408907
  40888b:	inc    esi
  40888c:	dec    DWORD PTR [eax-0x43]
  40888f:	lods   al,BYTE PTR ds:[esi]
  408890:	fild   QWORD PTR [edx+ecx*8+0xc]
  408894:	mov    al,0x3a
  408896:	loop   0x408858
  408898:	adc    al,0xf
  40889a:	xchg   ebp,eax
  40889b:	cs test ah,al
  40889e:	mov    WORD PTR gs:[eax],gs
  4088a1:	adc    ecx,ebp
  4088a3:	pop    ax
  4088a5:	rcl    BYTE PTR [esi],1
  4088a7:	mov    ebp,0x4d94f4c4
  4088ac:	lea    ecx,[edx-0x4f]
  4088af:	cmp    eax,0x4b67e34
  4088b4:	adc    eax,DWORD PTR [edx+esi*1]
  4088b7:	push   eax
  4088b8:	xchg   edx,eax
  4088b9:	jmp    0xe6ac5c80
  4088be:	cmp    bh,BYTE PTR [eax-0x2ef21e4b]
  4088c4:	loop   0x4088ab
  4088c6:	xor    BYTE PTR [ebx+0x22352f5],ah
  4088cc:	cmp    al,0x36
  4088ce:	gs popa 
  4088d0:	xchg   ecx,eax
  4088d1:	inc    ebx
  4088d2:	test   eax,0x3151607b
  4088d7:	push   edi
  4088d8:	pushf  
  4088d9:	xchg   ebx,eax
  4088da:	cmp    edi,ebp
  4088dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088dd:	mov    al,0x9a
  4088df:	mov    ch,0xc6
  4088e1:	rol    ecx,1
  4088e3:	add    bh,BYTE PTR [ebx+ebx*1-0x52bc8198]
  4088ea:	or     ah,BYTE PTR [ebx]
  4088ec:	push   cs
  4088ed:	pop    ebp
  4088ee:	iret   
  4088ef:	dec    eax
  4088f0:	ds add al,bh
  4088f3:	inc    esp
  4088f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f5:	in     eax,dx
  4088f6:	lock or ebp,esi
  4088f9:	(bad)  
  4088fa:	jno    0x40895c
  4088fc:	sbb    eax,0xf8fc23a6
  408901:	mov    dh,0xb5
  408903:	stos   DWORD PTR es:[edi],eax
  408904:	shl    cl,1
  408906:	scas   eax,DWORD PTR es:[edi]
  408907:	jb     0x4088d6
  408909:	xor    al,0x74
  40890b:	lods   eax,DWORD PTR ds:[esi]
  40890c:	std    
  40890d:	imul   edi,DWORD PTR ds:0xf1eabcb3,0xba7fefb6
  408917:	inc    edi
  408918:	push   eax
  408919:	mov    al,ds:0x26d32226
  40891e:	mov    ds:0xd3d2df09,al
  408923:	pop    ds
  408924:	cmc    
  408925:	imul   esp,DWORD PTR [esi+0x32769b9d],0xdb19110f
  40892f:	(bad)  
  408930:	in     eax,0x8
  408932:	fsub   QWORD PTR [ebx-0x1a]
  408935:	sub    BYTE PTR [edx],ch
  408937:	jp     0x4088d3
  408939:	imul   esp,DWORD PTR [ebx+0x78],0x77fa274a
  408940:	cdq    
  408941:	psrld  mm4,QWORD PTR [esi+0x10af7f18]
  408948:	sub    BYTE PTR es:[edi+0x40c14159],bl
  40894f:	lock add ecx,eax
  408952:	add    dh,al
  408954:	mov    BYTE PTR [edx+0x2bf05573],ch
  40895a:	xchg   ebp,eax
  40895b:	cmp    DWORD PTR [ebp+0x2fee0b4d],esp
  408961:	mov    ds:0x62a7d35d,eax
  408966:	mov    esi,0x253bcbc1
  40896b:	cdq    
  40896c:	retf   0x9c37
  40896f:	pop    ebx
  408970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408971:	sbb    ah,BYTE PTR [ecx]
  408973:	or     bh,BYTE PTR [ebx+eax*2-0x9c46e2e]
  40897a:	mov    eax,0x443dc34f
  40897f:	jl     0x4089bb
  408981:	xor    eax,0x2ce89fc7
  408986:	mov    ebx,0xdc2a5423
  40898b:	lahf   
  40898c:	jp     0x4089dc
  40898e:	test   DWORD PTR [ecx],edx
  408990:	jg     0x408922
  408992:	arpl   WORD PTR [ebx],cx
  408994:	fsubr  st,st(2)
  408996:	xor    eax,0x6c82470c
  40899b:	fcmovu st,st(0)
  40899d:	std    
  40899e:	adc    al,0x6b
  4089a0:	push   edx
  4089a1:	inc    ecx
  4089a2:	sub    al,0x51
  4089a4:	mov    esp,0x4dc32bef
  4089a9:	std    
  4089aa:	push   es
  4089ab:	sbb    eax,0xdf0e5781
  4089b0:	(bad)  
  4089b1:	in     eax,0x11
  4089b3:	outs   dx,DWORD PTR ds:[esi]
  4089b4:	test   eax,0x6225d794
  4089b9:	dec    esp
  4089ba:	pop    ebx
  4089bb:	and    BYTE PTR [esi],dh
  4089bd:	dec    esp
  4089be:	pusha  
  4089bf:	in     eax,0xe8
  4089c1:	and    BYTE PTR [edi+0x42ca5d43],ah
  4089c7:	leave  
  4089c8:	iret   
  4089c9:	dec    edx
  4089ca:	icebp  
  4089cb:	mov    bl,0x22
  4089cd:	lds    ebp,FWORD PTR ds:0x5e110530
  4089d3:	cld    
  4089d4:	pusha  
  4089d5:	adc    eax,ecx
  4089d7:	popf   
  4089d8:	pop    ss
  4089d9:	mov    BYTE PTR [esi-0x5],dl
  4089dc:	cmp    BYTE PTR [eax-0x9],cl
  4089df:	ss sar eax,0x20
  4089e3:	retf   
  4089e4:	(bad)  
  4089e5:	push   ebp
  4089e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e7:	push   ebp
  4089e8:	arpl   WORD PTR [ebp-0x4bc09f39],si
  4089ee:	cmp    DWORD PTR [ecx-0x2b0880a1],edx
  4089f4:	pop    es
  4089f5:	xchg   ebx,eax
  4089f6:	jp     0x4089d5
  4089f8:	xor    bl,al
  4089fa:	out    0x3a,eax
  4089fc:	cmp    ebp,ebx
  4089fe:	pop    esi
  4089ff:	add    BYTE PTR [ecx+0x7145b5cb],cl
  408a05:	enter  0xdd07,0xd1
  408a09:	adc    eax,0x3e6adf57
  408a0e:	fadd   QWORD PTR [ecx+0x76]
  408a11:	lods   al,BYTE PTR ds:[esi]
  408a12:	stc    
  408a13:	add    eax,0x92e5f772
  408a18:	mov    ds:0x9a6737ca,al
  408a1d:	jmp    0x408a6c
  408a1f:	push   cs
  408a20:	and    ebp,DWORD PTR [eax]
  408a22:	jg     0x4089d4
  408a24:	into   
  408a25:	jmp    0xd7fe:0xa003cd6b
  408a2c:	outs   dx,DWORD PTR ds:[esi]
  408a2d:	adc    al,0x89
  408a2f:	inc    ebx
  408a30:	imul   esp,edx,0xffffff81
  408a33:	(bad)  
  408a34:	pop    ebx
  408a35:	mov    BYTE PTR [ebx+0x7c],ah
  408a38:	mov    cs,edi
  408a3a:	add    al,0x22
  408a3d:	fldcw  WORD PTR [eax]
  408a3f:	jge    0x408a6f
  408a41:	dec    esp
  408a42:	lods   al,BYTE PTR ds:[esi]
  408a43:	or     DWORD PTR [edi+esi*1-0x50],ebx
  408a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a48:	fcmovnu st,st(4)
  408a4a:	inc    ecx
  408a4b:	adc    BYTE PTR [esi+ebx*1+0x14f4f014],al
  408a52:	je     0x408a77
  408a54:	xchg   esp,ebp
  408a56:	jnp    0x408a5c
  408a58:	xchg   ebx,eax
  408a59:	inc    DWORD PTR [esi-0x661d9629]
  408a5f:	mov    edx,0xb90cc529
  408a64:	arpl   ax,di
  408a66:	nop
  408a67:	adc    dh,BYTE PTR [edi-0x66]
  408a6a:	adc    bl,dl
  408a6c:	aad    0xad
  408a6e:	mov    ecx,0xa60cc274
  408a73:	mov    al,0x61
  408a75:	xor    DWORD PTR [ebp-0x55805f1f],edx
  408a7b:	test   eax,0xc6ce65e
  408a80:	sbb    al,0x69
  408a82:	(bad)  
  408a83:	outs   dx,BYTE PTR ds:[esi]
  408a84:	fs jp  0x408a5a
  408a87:	sub    al,0xbc
  408a89:	in     eax,dx
  408a8a:	sbb    al,0xd0
  408a8c:	pusha  
  408a8d:	scas   eax,DWORD PTR es:[edi]
  408a8e:	mov    ebp,0xc94b1b76
  408a93:	in     eax,dx
  408a94:	mov    edi,0x49764143
  408a99:	add    DWORD PTR [ecx+0x3b],esp
  408a9c:	sub    ecx,esp
  408a9e:	ss pushf 
  408aa0:	xchg   esp,eax
  408aa1:	es pop ecx
  408aa3:	shl    DWORD PTR [edi-0x72],cl
  408aa6:	call   0xf33a:0xc4ff8379
  408aad:	stos   BYTE PTR es:[edi],al
  408aae:	mov    ebp,0x15ea4e78
  408ab3:	stc    
  408ab4:	pop    eax
  408ab5:	add    edx,DWORD PTR [esi+0x548297fa]
  408abb:	call   FWORD PTR [ebx-0x7ae2882d]
  408ac1:	mov    edi,0x271d7657
  408ac6:	sub    DWORD PTR [eax],ebp
  408ac8:	adc    al,0xeb
  408aca:	idiv   BYTE PTR [eax]
  408acc:	frstor [eax-0x1440400c]
  408ad2:	pusha  
  408ad3:	fcmovnbe st,st(1)
  408ad5:	hlt    
  408ad6:	test   eax,0x3507692b
  408adb:	push   0x72
  408add:	pop    esp
  408ade:	or     al,al
  408ae0:	dec    eax
  408ae1:	call   0x4766:0x77eb9de2
  408ae8:	in     al,dx
  408ae9:	jmp    0x408b00
  408aeb:	hlt    
  408aec:	call   0xcd42fb94
  408af1:	(bad)  
  408af2:	aaa    
  408af3:	(bad)  
  408af4:	daa    
  408af5:	jb     0x408b23
  408af7:	mov    dl,0x69
  408af9:	and    bl,BYTE PTR [edi]
  408afb:	mov    es,WORD PTR [ecx]
  408afd:	gs push eax
  408aff:	je     0x408aa3
  408b01:	cwde   
  408b02:	std    
  408b03:	push   ebp
  408b04:	pop    ecx
  408b05:	dec    edi
  408b06:	mov    eax,ds:0x33f0d79
  408b0b:	sbb    esp,ebp
  408b0d:	mov    esp,0xca0d697
  408b12:	lods   al,BYTE PTR ds:[esi]
  408b13:	cwde   
  408b14:	adc    al,0x14
  408b16:	inc    esi
  408b17:	mov    ds,WORD PTR [esi]
  408b19:	mov    dh,0xc3
  408b1b:	mov    ds:0x8efc2700,al
  408b20:	nop
  408b21:	std    
  408b22:	fisub  DWORD PTR [eax+0x3f5e7fb9]
  408b28:	mov    es,ebx
  408b2a:	jo     0x408ab9
  408b2c:	sbb    DWORD PTR [ebx+0x1e],0xfffffff6
  408b30:	(bad)  
  408b31:	jmp    0x7ad5:0xf80d2ab6
  408b38:	in     al,dx
  408b39:	xchg   ebx,eax
  408b3a:	push   edx
  408b3b:	lock and eax,0x710a93b4
  408b41:	or     edx,DWORD PTR [ecx+edi*1]
  408b44:	push   eax
  408b45:	leave  
  408b46:	mov    edx,0x723ff555
  408b4b:	jecxz  0x408b49
  408b4d:	call   0xa726942e
  408b52:	push   edi
  408b53:	popf   
  408b54:	test   BYTE PTR [ecx+0x6021163f],bh
  408b5a:	jo     0x408b45
  408b5c:	das    
  408b5d:	mov    eax,ds:0x5cf949ae
  408b62:	daa    
  408b63:	xchg   esi,eax
  408b64:	clc    
  408b65:	pop    ecx
  408b66:	inc    ecx
  408b67:	jecxz  0x408be1
  408b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6a:	mov    ds:0x907fdcfe,eax
  408b6f:	xor    al,0xc9
  408b71:	adc    al,0x61
  408b73:	scas   al,BYTE PTR es:[edi]
  408b74:	mov    ebx,0x736a2514
  408b79:	cs in  al,dx
  408b7b:	(bad)  
  408b7c:	int3   
  408b7d:	cwde   
  408b7e:	add    al,0x64
  408b80:	cli    
  408b81:	xchg   BYTE PTR ds:0x87184e9,al
  408b87:	aam    0x7
  408b89:	fcmovbe st,st(3)
  408b8b:	xchg   ebp,eax
  408b8c:	sbb    eax,esi
  408b8e:	sar    DWORD PTR [eax+0x25],0xd8
  408b92:	mov    eax,ds:0x4d0ce02d
  408b97:	add    DWORD PTR [ebp-0x25],ebp
  408b9a:	pop    ebp
  408b9b:	call   0x5189:0x4b8796dc
  408ba2:	sub    DWORD PTR [edx+0x74],edx
  408ba5:	in     al,dx
  408ba6:	mov    esp,0x16cbbdeb
  408bab:	sar    dl,cl
  408bad:	cwde   
  408bae:	fcom   QWORD PTR [esi-0x69]
  408bb1:	mov    ds:0xb6435ad2,al
  408bb6:	mov    dl,0x22
  408bb8:	xchg   edx,eax
  408bb9:	cmp    al,0xca
  408bbb:	jno    0x408b74
  408bbd:	push   ds
  408bbe:	pop    ebp
  408bbf:	push   esp
  408bc0:	into   
  408bc1:	push   ebp
  408bc2:	xor    eax,0xdea0f768
  408bc7:	aam    0xe
  408bc9:	mov    ds:0xd5cf27a8,eax
  408bce:	scas   al,BYTE PTR es:[edi]
  408bcf:	sub    ecx,ebp
  408bd1:	xor    edx,DWORD PTR [edi]
  408bd3:	fs stc 
  408bd5:	dec    edi
  408bd6:	inc    edi
  408bd7:	popf   
  408bd8:	sub    BYTE PTR [eax],bl
  408bda:	imul   esi,esp,0x309b00ca
  408be0:	out    dx,eax
  408be1:	jmp    0x12d9:0x2c55d56f
  408be8:	ins    BYTE PTR es:[edi],dx
  408be9:	xor    DWORD PTR gs:[edi+0x58],edx
  408bed:	or     BYTE PTR [edi-0x4e77647d],0xe4
  408bf4:	shr    DWORD PTR [eax+0x30aacb08],1
  408bfa:	das    
  408bfb:	inc    esi
  408bfc:	pop    ebp
  408bfd:	inc    edi
  408bfe:	sub    ch,bl
  408c00:	aas    
  408c01:	mov    esi,DWORD PTR [edx]
  408c03:	cmp    DWORD PTR [eax+0x582ad4d9],eax
  408c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0a:	int3   
  408c0b:	jge    0x408bb4
  408c0d:	inc    edi
  408c0e:	cwde   
  408c0f:	addr16 pop edi
  408c11:	jb     0x408c54
  408c13:	cmc    
  408c14:	xor    al,0xf2
  408c16:	sti    
  408c17:	out    dx,eax
  408c18:	stos   BYTE PTR es:[edi],al
  408c19:	arpl   WORD PTR [ecx],cx
  408c1b:	sub    dh,ch
  408c1d:	inc    esp
  408c1e:	rcr    ebp,cl
  408c20:	bound  edx,QWORD PTR [edx-0x35f0431f]
  408c26:	mov    eax,ds:0x3365046c
  408c2b:	or     eax,0x96df2148
  408c30:	shl    DWORD PTR [edx],0x40
  408c33:	iret   
  408c34:	rol    WORD PTR [edx],0xf6
  408c38:	cs test eax,0x1ca00f6e
  408c3e:	(bad)  [eax+esi*1+0x486d167c]
  408c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c46:	inc    esi
  408c47:	mov    bh,0xb6
  408c49:	mov    ebx,0x3044210c
  408c4e:	mov    esi,0x3817f318
  408c53:	test   ch,cl
  408c55:	add    BYTE PTR [ebx+0x4d],0x19
  408c59:	(bad)  
  408c5a:	test   DWORD PTR [esi+0x37d9ae65],eax
  408c60:	push   ecx
  408c61:	(bad)  
  408c62:	sbb    eax,0x1b14f250
  408c67:	sbb    dh,BYTE PTR [ecx+ebp*4-0x799fc441]
  408c6e:	add    eax,0x2f8bfe03
  408c73:	lahf   
  408c74:	xchg   ebp,eax
  408c75:	jge    0x408bfd
  408c77:	cli    
  408c78:	int3   
  408c79:	stos   BYTE PTR es:[edi],al
  408c7a:	mov    eax,0x62bc71b
  408c7f:	(bad)  
  408c80:	dec    ecx
  408c81:	jbe    0x408c19
  408c83:	mov    ah,0x3c
  408c85:	pusha  
  408c86:	push   cs
  408c87:	mov    DWORD PTR [edi],ecx
  408c89:	sub    eax,0x7f621f6f
  408c8e:	popa   
  408c8f:	mov    ?,WORD PTR [esi]
  408c91:	jnp    0x408c13
  408c93:	jp     0x408cf7
  408c95:	jl     0x408cf9
  408c97:	sti    
  408c98:	pop    ecx
  408c99:	xchg   edx,eax
  408c9a:	pushf  
  408c9b:	xchg   edx,edi
  408c9d:	sub    edx,edi
  408c9f:	call   0xe38f:0x7004b12f
  408ca6:	leave  
  408ca7:	pop    edx
  408ca8:	into   
  408ca9:	fldcw  WORD PTR [ecx+edx*8]
  408cac:	cmc    
  408cad:	and    al,0xd9
  408caf:	mov    bh,0xa6
  408cb1:	fild   DWORD PTR [eax]
  408cb3:	arpl   WORD PTR [edx-0x68],sp
  408cb6:	mov    BYTE PTR [ebp*8+0x391f973b],dh
  408cbd:	imul   esi,DWORD PTR [edi+edi*4-0x72],0xe
  408cc2:	fs inc ecx
  408cc4:	and    esi,DWORD PTR [ebp-0x44]
  408cc7:	rcl    DWORD PTR [ebp+0x37],1
  408cca:	outs   dx,DWORD PTR ds:[esi]
  408ccb:	cmp    ah,BYTE PTR ss:[eax+0x100eda24]
  408cd2:	sbb    al,0xd7
  408cd4:	mov    ebx,0x9e1905d0
  408cd9:	(bad)  
  408cda:	fadd   DWORD PTR [ebp+0x3017ee9a]
  408ce0:	ds cs scas eax,DWORD PTR es:[edi]
  408ce3:	pop    es
  408ce4:	mov    ah,0x31
  408ce6:	(bad)  
  408ce8:	stos   DWORD PTR es:[edi],eax
  408ce9:	out    0x22,eax
  408ceb:	mov    cl,0x86
  408ced:	aaa    
  408cee:	cmp    DWORD PTR ds:0xda8f7b62,edi
  408cf4:	fwait
  408cf5:	xor    DWORD PTR [edx],eax
  408cf7:	test   dl,dl
  408cf9:	jno    0x408cab
  408cfb:	xchg   ebx,ebx
  408cfd:	stc    
  408cfe:	in     al,dx
  408cff:	stos   BYTE PTR es:[edi],al
  408d00:	jmp    0xa17a:0xe54e366b
  408d07:	cld    
  408d08:	dec    ebp
  408d09:	xor    al,0x2f
  408d0b:	mov    ds:0x125fda89,eax
  408d10:	out    dx,eax
  408d11:	pop    ss
  408d12:	jp     0x408caa
  408d14:	or     eax,0xca0ac49f
  408d19:	cmp    al,dh
  408d1b:	jnp    0x408ce3
  408d1d:	jbe    0x408d16
  408d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d20:	(bad)  
  408d21:	aad    0x49
  408d23:	add    cl,BYTE PTR [eax+0x3274d739]
  408d29:	add    eax,0xd03ad8ab
  408d2e:	or     al,0xf4
  408d30:	xchg   ebx,eax
  408d31:	aad    0x3c
  408d33:	stos   DWORD PTR es:[edi],eax
  408d34:	in     al,dx
  408d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d36:	sar    DWORD PTR [edi+0x49],0xba
  408d3a:	mov    bl,0x6b
  408d3c:	aaa    
  408d3d:	sbb    al,0x32
  408d3f:	push   eax
  408d40:	out    dx,eax
  408d41:	jmp    0x81c2dcc5
  408d46:	jmp    0x408ccc
  408d48:	fs mov ecx,0x748c565f
  408d4e:	out    0xf6,al
  408d50:	fisub  WORD PTR [edx]
  408d52:	test   eax,0x8dbddd72
  408d57:	cmc    
  408d58:	adc    BYTE PTR [esp+ebx*8+0x3f],0x5
  408d5d:	cmc    
  408d5e:	sbb    esi,esp
  408d60:	into   
  408d61:	dec    edi
  408d62:	lods   eax,DWORD PTR ds:[esi]
  408d63:	jo     0x408d79
  408d65:	push   cs
  408d66:	mov    al,ds:0x5f90a75e
  408d6b:	mov    ecx,0xd005132b
  408d70:	mov    al,ds:0xa88b1b0
  408d75:	and    al,0x7e
  408d77:	sahf   
  408d78:	(bad)  
  408d79:	sbb    BYTE PTR ds:0xcc666f0,bh
  408d7f:	inc    esi
  408d80:	jbe    0x408d7d
  408d82:	or     dl,BYTE PTR [esi+0x7ed1edbd]
  408d88:	jb     0x408d3f
  408d8a:	repnz dec edi
  408d8c:	and    ch,bl
  408d8e:	fst    DWORD PTR [ebx]
  408d90:	ins    DWORD PTR es:[edi],dx
  408d91:	or     DWORD PTR [ebp-0x7615e935],esp
  408d97:	cmp    bl,al
  408d99:	out    0x6a,eax
  408d9b:	out    dx,al
  408d9c:	gs loop 0x408e08
  408d9f:	je     0x408d57
  408da1:	sbb    ah,dl
  408da3:	cmp    DWORD PTR [ebp-0x37],ebp
  408da6:	mov    esp,0xfd72b71f
  408dab:	jmp    0x7a06:0x8a4f81a0
  408db2:	push   eax
  408db3:	leave  
  408db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408db6:	dec    edx
  408db7:	cmp    BYTE PTR [esi],0x89
  408dba:	loopne 0x408e1c
  408dbc:	stos   BYTE PTR es:[edi],al
  408dbd:	mov    ?,esi
  408dbf:	pop    es
  408dc0:	pop    esi
  408dc1:	imul   eax,esi,0x31
  408dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc5:	xor    eax,0xba58995
  408dca:	jo     0x408d7c
  408dcc:	test   DWORD PTR [ecx],edx
  408dce:	mov    esi,0x6971b4be
  408dd3:	sub    DWORD PTR [edx-0x197a38a9],edx
  408dd9:	(bad)  
  408ddb:	mov    DWORD PTR [edx+0x58],eax
  408dde:	mov    ch,0x46
  408de0:	inc    ebx
  408de1:	push   esi
  408de2:	adc    ecx,eax
  408de4:	adc    ebx,DWORD PTR [edx-0x5f]
  408de7:	cmp    BYTE PTR [edi+0x38077e87],0x68
  408dee:	sub    eax,0xd8b68238
  408df3:	inc    esi
  408df4:	btr    DWORD PTR [edx-0x5],0x8a
  408df9:	mov    edx,0x583b8536
  408dfe:	ret    0x2fe6
  408e01:	add    al,BYTE PTR [edi+0x15]
  408e04:	adc    al,BYTE PTR [ebx-0x1b]
  408e07:	pop    esp
  408e08:	pop    esp
  408e09:	sub    DWORD PTR [esi-0x732949db],0xec18958e
  408e13:	xor    DWORD PTR [ebp+0x2a37cb39],edx
  408e19:	pusha  
  408e1a:	shl    BYTE PTR [edx-0x72],0x79
  408e1e:	sub    BYTE PTR [ecx-0x40],0xb2
  408e22:	sub    esi,DWORD PTR [ebp+0x75]
  408e25:	test   eax,0xd343ebda
  408e2a:	stos   DWORD PTR es:[edi],eax
  408e2b:	pop    es
  408e2c:	mov    edx,ebp
  408e2e:	and    al,0xac
  408e30:	mov    dl,0xae
  408e32:	ret    
  408e33:	mov    ds:0x9a63e4b0,eax
  408e38:	jg     0x408e4e
  408e3a:	jp     0x408e11
  408e3c:	jbe    0x408e1c
  408e3e:	sbb    BYTE PTR [esi-0x460379eb],bl
  408e44:	arpl   WORD PTR [edx+0x17],sp
  408e47:	sbb    eax,0x26c0ff26
  408e4c:	aas    
  408e4d:	xchg   ebx,eax
  408e4e:	(bad)  
  408e4f:	xlat   BYTE PTR ds:[ebx]
  408e50:	inc    edi
  408e51:	xchg   edx,eax
  408e52:	sub    ebx,edx
  408e54:	cmp    al,0x81
  408e56:	add    ebx,DWORD PTR [edx-0x2e]
  408e59:	out    dx,al
  408e5a:	call   FWORD PTR [eax-0x1f]
  408e5d:	lahf   
  408e5e:	popf   
  408e5f:	xchg   BYTE PTR [ebx],ah
  408e61:	xchg   ebp,eax
  408e62:	add    ebx,DWORD PTR [ecx+ecx*1+0xc]
  408e66:	or     eax,0x28af8f86
  408e6b:	sub    BYTE PTR [eax+0x129e072a],bh
  408e71:	xchg   esi,eax
  408e72:	add    eax,0xf52ac89f
  408e77:	pop    ds
  408e78:	stos   DWORD PTR es:[edi],eax
  408e79:	push   eax
  408e7a:	ins    DWORD PTR es:[edi],dx
  408e7b:	adc    BYTE PTR [edx],al
  408e7d:	cwde   
  408e7e:	adc    BYTE PTR [esi+ecx*8-0x77],bh
  408e82:	(bad)  
  408e84:	arpl   WORD PTR [ecx-0x30010825],ax
  408e8a:	rol    cl,0xc0
  408e8d:	test   eax,0x1e8101f7
  408e92:	and    al,0x3
  408e94:	cmp    ebp,DWORD PTR [ecx]
  408e96:	cdq    
  408e97:	xlat   BYTE PTR ds:[ebx]
  408e98:	add    eax,0xb39acfb7
  408e9d:	cmc    
  408e9e:	loope  0x408e78
  408ea0:	xchg   ebx,eax
  408ea1:	inc    ebp
  408ea2:	sti    
  408ea3:	sbb    al,0x2f
  408ea5:	ds popf 
  408ea7:	fs mov edx,0x856b1dbd
  408ead:	ret    
  408eae:	dec    edi
  408eaf:	fdiv   DWORD PTR [ebx-0x5e]
  408eb2:	sbb    eax,0x1bba610a
  408eb7:	daa    
  408eb8:	lahf   
  408eb9:	pop    ss
  408eba:	popa   
  408ebb:	fadd   DWORD PTR [ecx-0x71c7df8d]
  408ec1:	inc    ebx
  408ec2:	jae    0x408f1d
  408ec4:	jns    0x79280281
  408eca:	jo     0x408f40
  408ecc:	mov    esi,0x530a9650
  408ed1:	fadd   st(6),st
  408ed3:	test   eax,0x8953f045
  408ed8:	mov    bl,0x9b
  408eda:	and    DWORD PTR [edi+0x270d3eb7],eax
  408ee0:	popa   
  408ee1:	shr    bl,0x92
  408ee4:	pop    es
  408ee5:	jnp    0x408f46
  408ee7:	cwde   
  408ee8:	test   DWORD PTR [edi+ecx*4-0x3e],eax
  408eec:	out    dx,al
  408eed:	lds    esp,FWORD PTR [esi-0x16323584]
  408ef3:	int    0xb1
  408ef5:	push   ebp
  408ef6:	(bad)  
  408ef7:	in     eax,0x3f
  408ef9:	lods   eax,DWORD PTR ds:[esi]
  408efa:	and    BYTE PTR ds:0xd4acc3cd,bl
  408f00:	data16 and ah,0x12
  408f04:	or     eax,0xfb7811a7
  408f09:	pop    ds
  408f0a:	(bad)
  408f0d:	mov    ds:0xb977ba4b,al
  408f12:	(bad)
  408f17:	pop    eax
  408f18:	cmp    ebx,DWORD PTR [edx]
  408f1a:	xchg   esp,eax
  408f1b:	mov    ecx,DWORD PTR [esi]
  408f1d:	mov    al,ds:0xf48f7659
  408f22:	sbb    ebx,DWORD PTR [ebx]
  408f24:	inc    ebx
  408f25:	nop
  408f26:	push   edx
  408f27:	fs daa 
  408f29:	jg     0x408ece
  408f2b:	mov    edi,0xf6cdb3fc
  408f30:	ds cld 
  408f32:	(bad)  
  408f33:	icebp  
  408f34:	loope  0x408f05
  408f36:	hlt    
  408f37:	xchg   ebp,eax
  408f38:	push   ss
  408f39:	daa    
  408f3a:	or     edi,edx
  408f3c:	adc    esi,DWORD PTR [ecx]
  408f3e:	jb     0x408ee9
  408f40:	popf   
  408f41:	xor    ecx,eax
  408f43:	sbb    DWORD PTR [ebx-0xe],ecx
  408f46:	out    0xad,eax
  408f48:	mov    gs,WORD PTR [ebx-0x6e56509f]
  408f4e:	xchg   ebp,eax
  408f4f:	mov    ebp,DWORD PTR [ecx+0x38fe624c]
  408f55:	in     al,dx
  408f56:	sbb    ch,bl
  408f58:	push   esp
  408f59:	cmp    DWORD PTR [edi+eax*4-0x6f79d9c1],0xffffffda
  408f61:	mov    eax,0x89bde795
  408f66:	ret    0xa7f
  408f69:	or     edi,DWORD PTR [esi]
  408f6b:	arpl   WORD PTR [ebx+0x16],di
  408f6e:	std    
  408f6f:	sbb    eax,0x1a7d4d77
  408f74:	jne    0x408fb7
  408f76:	sbb    DWORD PTR [edx],0xfffffff4
  408f79:	test   DWORD PTR [ecx-0x1c],edi
  408f7c:	or     al,0x4c
  408f7e:	dec    ebp
  408f7f:	out    0xb5,eax
  408f81:	das    
  408f82:	jo     0x408ffd
  408f84:	sbb    edx,DWORD PTR [esi]
  408f86:	sti    
  408f87:	xor    DWORD PTR [ebx],0x4c085487
  408f8d:	lock push eax
  408f8f:	retf   0xa685
  408f92:	fscale 
  408f94:	shl    al,cl
  408f96:	inc    DWORD PTR [ebx-0x597b1b92]
  408f9c:	mov    eax,0xd977bf6e
  408fa1:	and    bh,ah
  408fa3:	mov    bh,0x5a
  408fa5:	inc    esp
  408fa6:	pop    es
  408fa7:	lods   eax,DWORD PTR ds:[esi]
  408fa8:	shl    eax,1
  408faa:	push   esp
  408fab:	add    edi,esp
  408fad:	sub    eax,esi
  408faf:	mov    ah,0x7c
  408fb1:	shl    edx,1
  408fb3:	dec    eax
  408fb4:	adc    ch,ah
  408fb6:	dec    ebx
  408fb7:	call   0xe113:0x7a86f8d
  408fbe:	mov    dl,0x8d
  408fc0:	outs   dx,BYTE PTR ds:[esi]
  408fc1:	out    dx,eax
  408fc2:	mov    dl,0xd5
  408fc4:	and    bh,ah
  408fc6:	dec    edx
  408fc7:	inc    esp
  408fc8:	in     al,0x6b
  408fca:	sbb    al,dl
  408fcc:	imul   esi,DWORD PTR [eax-0x60596d82],0x8
  408fd3:	fsub   QWORD PTR [eax]
  408fd5:	shl    DWORD PTR [ebx+0x3f],cl
  408fd8:	jb     0x408fff
  408fda:	push   esi
  408fdb:	dec    edi
  408fdc:	inc    ebx
  408fdd:	call   0x75246bac
  408fe2:	mov    es:0x102068b1,eax
  408fe8:	ret    0x1065
  408feb:	loopne 0x408fc0
  408fed:	les    ebp,FWORD PTR [edx-0xd3d736b]
  408ff3:	call   0x4df2dffe
  408ff8:	pop    es
  408ff9:	push   eax
  408ffa:	mov    ds,esp
  408ffc:	inc    eax
  408ffd:	in     al,dx
  408ffe:	pop    es
  408fff:	dec    ebx
  409000:	pop    esp
  409001:	(bad)  
  409002:	ror    BYTE PTR [edx-0x3b],0x6a
  409006:	ret    0x9b3b
  409009:	int3   
  40900a:	sub    BYTE PTR [ebx],ah
  40900c:	imul   ebx,DWORD PTR ds:0xecb2a670,0xffffffa5
  409013:	iret   
  409014:	jp     0x409054
  409016:	adc    BYTE PTR [ecx+0x67e6b87c],al
  40901c:	sub    al,0x26
  40901e:	mov    ecx,DWORD PTR [ebx]
  409020:	js     0x408ff4
  409022:	xchg   edx,esi
  409024:	lea    edx,[eax]
  409026:	pusha  
  409027:	stc    
  409028:	inc    edx
  409029:	int3   
  40902a:	xchg   esi,eax
  40902b:	mov    ds:0x16d62c42,al
  409030:	out    0x39,eax
  409032:	and    BYTE PTR [edx+0x5c],dh
  409035:	(bad)  
  409036:	cmp    DWORD PTR [ebp-0x27],esp
  409039:	cwde   
  40903a:	mov    al,ds:0x9bfef522
  40903f:	pop    ds
  409040:	mov    esp,0x2c8f71ce
  409045:	sahf   
  409046:	jg     0x409037
  409048:	inc    esi
  409049:	bound  edi,QWORD PTR [ebp-0x24f64d01]
  40904f:	mov    edx,0xbfdd250d
  409054:	enter  0xc26,0xd6
  409058:	jmp    0x95d2:0x1aaf7f1e
  40905f:	sbb    eax,0xbae70362
  409064:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409066:	xor    BYTE PTR [eax+0x58],0xc5
  40906a:	cmp    ebx,0xe53ce662
  409070:	dec    edx
  409071:	sub    eax,ebp
  409073:	xor    al,0x55
  409075:	mov    al,ds:0xe9c8c3ee
  40907a:	and    edx,eax
  40907c:	outs   dx,DWORD PTR ds:[esi]
  40907d:	jne    0x4090a6
  40907f:	adc    al,ah
  409081:	pop    esi
  409082:	pop    ebx
  409083:	push   eax
  409084:	fst    DWORD PTR [edi]
  409086:	mov    eax,ds:0xaec1382d
  40908b:	cmp    BYTE PTR [ebx+ecx*4+0xdfe59a],0x87
  409093:	xor    edi,DWORD PTR [eax+0x32]
  409096:	mov    edi,?
  409098:	leave  
  409099:	(bad)  
  40909a:	aad    0x34
  40909c:	or     DWORD PTR [edi-0x18],esi
  40909f:	xchg   DWORD PTR [esi+esi*2],edi
  4090a2:	cmp    DWORD PTR [ebp-0x78],edi
  4090a5:	and    cl,cl
  4090a7:	dec    edi
  4090a8:	sub    eax,0x5bb6691f
  4090ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ae:	cmc    
  4090af:	and    eax,0x6c309f7f
  4090b4:	dec    edx
  4090b5:	mov    ebp,0x5d19c798
  4090ba:	sub    al,0x6e
  4090bc:	adc    al,0x54
  4090be:	imul   eax,DWORD PTR [esi],0x75bff948
  4090c4:	lods   eax,DWORD PTR ds:[esi]
  4090c5:	or     al,0x51
  4090c7:	aas    
  4090c8:	pop    ss
  4090c9:	pop    edx
  4090ca:	or     eax,0x70377e6a
  4090cf:	cmp    ah,bh
  4090d1:	stos   BYTE PTR es:[edi],al
  4090d2:	mov    ds:0x3d8cbf42,eax
  4090d7:	jbe    0x4090b6
  4090d9:	dec    esp
  4090da:	jp     0x409099
  4090dc:	js     0x4090c7
  4090de:	je     0x4090dc
  4090e0:	retf   0x53e0
  4090e3:	mov    ch,0xe0
  4090e5:	rcr    DWORD PTR [ebp+0x5a],1
  4090e8:	fdivr  DWORD PTR [esi+0x4e]
  4090eb:	fisub  WORD PTR [esi+0x342e6856]
  4090f1:	loope  0x409158
  4090f3:	stc    
  4090f4:	cmp    al,0x33
  4090f6:	mov    ecx,0x1550c494
  4090fb:	(bad)  
  4090fc:	xchg   esp,eax
  4090fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090fe:	lock adc al,0xc3
  409101:	rcr    BYTE PTR [ebx+0x4d6a9e20],1
  409107:	mov    dh,0xa4
  409109:	adc    al,0x13
  40910b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910c:	daa    
  40910d:	imul   edx,DWORD PTR [edi],0x77
  409110:	mov    al,ds:0x1509c693
  409115:	and    BYTE PTR [ebx-0x6910904c],dl
  40911b:	xchg   esp,eax
  40911c:	cmp    edi,ebp
  40911e:	push   ebx
  40911f:	xchg   ebp,eax
  409120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409121:	sub    al,0xb0
  409123:	test   eax,0xe527217
  409128:	lds    ecx,FWORD PTR [esi+0xa]
  40912b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912c:	jmp    0x741fd396
  409131:	xor    BYTE PTR [edx],0xcf
  409134:	or     DWORD PTR [ecx-0x2e274bac],edi
  40913a:	iret   
  40913b:	scas   eax,DWORD PTR es:[edi]
  40913c:	adc    edx,edi
  40913e:	daa    
  40913f:	mov    bh,0x85
  409141:	js     0x4090e6
  409143:	iret   
  409144:	pop    eax
  409145:	add    BYTE PTR [esi+ebp*1],dl
  409148:	xchg   esp,eax
  409149:	(bad)  
  40914a:	jecxz  0x40918f
  40914c:	dec    ah
  40914e:	pusha  
  40914f:	scas   al,BYTE PTR es:[edi]
  409150:	inc    eax
  409151:	sub    dh,0x5b
  409154:	mov    dl,0x42
  409156:	retf   
  409157:	sub    esi,DWORD PTR [ebx+0x39]
  40915a:	push   esi
  40915b:	and    cl,BYTE PTR [edx-0x47]
  40915e:	pop    esi
  40915f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409160:	and    DWORD PTR [edx-0x30f67ac7],esi
  409166:	cli    
  409167:	(bad)  
  409168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409169:	xlat   BYTE PTR ds:[ebx]
  40916a:	dec    ebp
  40916b:	scas   al,BYTE PTR es:[edi]
  40916c:	pop    edx
  40916d:	mov    esp,0xb7f9f53c
  409172:	xchg   ebx,eax
  409173:	out    0x4c,al
  409175:	mov    ebp,0xd87dcedd
  40917a:	mov    ds:0x55548caa,al
  40917f:	into   
  409180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409181:	add    ah,BYTE PTR gs:[eax+eiz*2]
  409185:	retf   
  409186:	push   ds
  409187:	lahf   
  409188:	add    BYTE PTR [edi+0xf10bc84],al
  40918e:	dec    esp
  40918f:	rol    DWORD PTR [ecx+0x17],0xbf
  409193:	cmc    
  409194:	fwait
  409195:	cwde   
  409196:	mov    ch,0xc0
  409198:	add    BYTE PTR [ecx],dh
  40919a:	cmp    BYTE PTR [edx-0x1623bfce],al
  4091a0:	(bad)
  4091a4:	pushf  
  4091a5:	aaa    
  4091a6:	fld    TBYTE PTR [eax-0x19357fb9]
  4091ac:	pop    es
  4091ad:	std    
  4091ae:	inc    esi
  4091af:	xchg   DWORD PTR [eax],ecx
  4091b1:	xchg   ecx,eax
  4091b2:	rcr    cl,cl
  4091b4:	pop    ebx
  4091b5:	inc    esi
  4091b6:	mov    edx,0xabb5fc3b
  4091bb:	dec    eax
  4091bc:	in     al,0xb0
  4091be:	icebp  
  4091bf:	add    al,0xc1
  4091c1:	sbb    eax,0x14c5ad87
  4091c6:	add    BYTE PTR [edi+0x3],dh
  4091c9:	popa   
  4091ca:	les    esi,FWORD PTR [edx+0x28]
  4091cd:	pop    edx
  4091ce:	pop    ax
  4091d0:	sub    bh,0x63
  4091d3:	rol    BYTE PTR [esi-0x47],1
  4091d6:	(bad)  
  4091d7:	xor    eax,0xe4edab72
  4091dc:	enter  0x2e3d,0xbd
  4091e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091e1:	adc    BYTE PTR [ecx],0x86
  4091e4:	push   ebp
  4091e5:	or     DWORD PTR [ecx],esi
  4091e7:	retf   0x3143
  4091ea:	ds in  al,dx
  4091ec:	stos   BYTE PTR es:[edi],al
  4091ed:	outs   dx,BYTE PTR ds:[esi]
  4091ee:	sbb    BYTE PTR [edi-0x64],al
  4091f1:	popf   
  4091f2:	hlt    
  4091f3:	pushf  
  4091f4:	xor    cl,cl
  4091f6:	lods   al,BYTE PTR ds:[esi]
  4091f7:	add    bh,BYTE PTR [ecx]
  4091f9:	mov    edx,0x764b6d23
  4091fe:	dec    ecx
  4091ff:	cmp    ebp,DWORD PTR [ebx]
  409201:	pop    ebp
  409202:	aad    0x33
  409204:	scas   eax,DWORD PTR es:[edi]
  409205:	sbb    DWORD PTR [esi+0x29],ebp
  409208:	retf   0xd0d
  40920b:	(bad)  
  40920c:	popa   
  40920d:	sub    DWORD PTR [edx-0x24],ebp
  409210:	push   ds
  409211:	jp     0x409246
  409213:	mov    dh,0x9f
  409215:	adc    cl,BYTE PTR [edx-0x3990ae56]
  40921b:	pop    edx
  40921c:	not    BYTE PTR [ebp-0xfe2b421]
  409222:	fimul  WORD PTR [ecx-0x46]
  409225:	push   ss
  409226:	scas   al,BYTE PTR es:[edi]
  409227:	xchg   esp,eax
  409228:	mov    DWORD PTR [ebp+0x5f43f6d2],edi
  40922e:	inc    esi
  40922f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409230:	sub    al,0x89
  409232:	pop    ebp
  409233:	cmp    eax,0xbff2bbf7
  409238:	sbb    al,BYTE PTR [esp+esi*1+0xb]
  40923c:	xor    BYTE PTR [esp+ecx*8],al
  40923f:	test   eax,0x7155fd49
  409244:	loope  0x409224
  409246:	ss mov edi,0xc24b5872
  40924c:	xchg   BYTE PTR [esi],ah
  40924e:	pop    edi
  40924f:	xor    DWORD PTR [ecx+0x36],ebx
  409252:	fcom   QWORD PTR [edi]
  409254:	lahf   
  409255:	ret    
  409256:	xor    DWORD PTR [ebx],ebp
  409258:	push   0xcd6f7ef2
  40925d:	mov    edx,0x649e7200
  409262:	lods   al,BYTE PTR ds:[esi]
  409263:	ret    0x373e
  409266:	cmp    dl,BYTE PTR [esi]
  409268:	cmp    ebp,DWORD PTR [ebp-0x2c]
  40926b:	adc    DWORD PTR [eax+ebx*2+0x35],ecx
  40926f:	(bad)  
  409270:	pushf  
  409271:	mov    ?,WORD PTR [ecx+0x30]
  409274:	xor    ah,bh
  409276:	in     eax,dx
  409277:	push   ds
  409278:	dec    edi
  409279:	jg     0x4092bd
  40927b:	sub    edi,DWORD PTR [ecx+edx*8-0x52]
  40927f:	ficomp DWORD PTR [edi+0x5d]
  409282:	cs jo  0x4092ca
  409285:	pop    DWORD PTR [edi+0x67b8a868]
  40928b:	leave  
  40928c:	and    cl,al
  40928e:	(bad)  
  40928f:	aam    0x1f
  409291:	loope  0x4092bf
  409293:	cmp    BYTE PTR [ecx-0x2161ec32],0xce
  40929a:	test   al,0xe2
  40929c:	cmp    BYTE PTR [edx-0x19463ec],cl
  4092a2:	mov    edx,0x495cf94d
  4092a7:	ss xchg esi,eax
  4092a9:	mov    al,ds:0xd90c8a21
  4092ae:	fcom   DWORD PTR [ebx+ebx*4-0x7ab25af3]
  4092b5:	sahf   
  4092b6:	cmp    BYTE PTR [ebp+0x4e],bh
  4092b9:	add    DWORD PTR [ebx],0xeb8d8569
  4092bf:	sub    BYTE PTR [edx+0x716876b4],dl
  4092c5:	sahf   
  4092c6:	test   eax,0xdbf94201
  4092cb:	repz dec ebp
  4092cd:	pop    es
  4092ce:	or     ecx,DWORD PTR cs:[edi]
  4092d1:	or     DWORD PTR [ebx],eax
  4092d3:	inc    edx
  4092d4:	sbb    al,0x6d
  4092d6:	mov    ecx,0x110e1fc3
  4092db:	ror    DWORD PTR [eax],cl
  4092dd:	push   ebx
  4092de:	mov    eax,0xe603c0f0
  4092e3:	dec    eax
  4092e4:	jnp    0x409306
  4092e6:	mov    al,0x2a
  4092e8:	pop    ds
  4092e9:	rol    esp,1
  4092eb:	iret   
  4092ec:	aaa    
  4092ed:	inc    eax
  4092ee:	ret    0xc0c0
  4092f1:	jne    0x409367
  4092f3:	push   ecx
  4092f4:	add    ah,BYTE PTR [ecx]
  4092f6:	jle    0x409352
  4092f8:	frstor [eax+edi*4-0x26feee07]
  4092ff:	stc    
  409300:	test   BYTE PTR [eax+0x59],cl
  409303:	outs   dx,DWORD PTR ds:[esi]
  409304:	sub    DWORD PTR [edx+ebp*4+0xf],edi
  409308:	call   0xe9e7ca1d
  40930d:	inc    edi
  40930e:	popf   
  40930f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409310:	xchg   edi,eax
  409311:	inc    ebx
  409312:	cld    
  409313:	sbb    ecx,DWORD PTR [eax]
  409315:	nop
  409316:	(bad)  
  409317:	in     eax,dx
  409318:	push   es
  409319:	aam    0x77
  40931b:	lds    edx,FWORD PTR [esi]
  40931d:	push   ecx
  40931e:	sub    edi,ebx
  409320:	xchg   BYTE PTR [edx+esi*4],dh
  409323:	dec    edx
  409324:	or     eax,0x7a3184f8
  409329:	push   edx
  40932a:	adc    DWORD PTR [eax],0x9d809c0b
  409330:	xchg   DWORD PTR [ebx],ecx
  409332:	jmp    0x3222:0xeacc149c
  409339:	mov    ebx,0x7aa3074c
  40933e:	addr16 pop ss
  409340:	and    DWORD PTR [ebp-0x455f8b53],ebp
  409346:	add    esp,edi
  409348:	cmp    eax,0xde334cfd
  40934d:	and    ebx,esi
  40934f:	inc    ebp
  409350:	and    dh,dl
  409352:	jp     0x4093c4
  409354:	and    BYTE PTR [ebp+0x42],0x94
  409358:	ret    
  409359:	push   eax
  40935a:	xor    al,0x19
  40935c:	clc    
  40935d:	loope  0x4093cf
  40935f:	and    eax,0x3140ac00
  409364:	je     0x409335
  409366:	mov    esi,0xc0b541e9
  40936b:	popf   
  40936c:	mov    bl,0xc4
  40936e:	xor    cl,BYTE PTR [edi-0x15]
  409371:	dec    esi
  409372:	and    DWORD PTR [edx+edi*1],ecx
  409375:	fist   WORD PTR [ebx-0x5a]
  409378:	(bad)
  40937b:	push   edx
  40937c:	push   esi
  40937d:	push   cs
  40937e:	jp     0x409339
  409380:	and    al,0x3b
  409382:	xchg   edi,eax
  409383:	shr    BYTE PTR gs:[edi-0x32],1
  409387:	add    al,0x67
  409389:	dec    edx
  40938a:	inc    esp
  40938b:	mov    ecx,0x48fc5935
  409390:	sub    DWORD PTR [ecx+0x59],0x1cfbc9ad
  409397:	cld    
  409398:	sub    edx,edx
  40939a:	mov    esp,0x8d8953d0
  40939f:	push   0x27
  4093a1:	shl    DWORD PTR [edi-0x66],0x6e
  4093a5:	pop    ecx
  4093a6:	pop    esp
  4093a7:	jbe    0x409392
  4093a9:	or     BYTE PTR [eax-0x7fcbf152],ah
  4093af:	scas   al,BYTE PTR es:[edi]
  4093b0:	xor    bl,ch
  4093b2:	and    al,0xa3
  4093b4:	(bad)  
  4093b5:	fsubr  st(2),st
  4093b7:	add    DWORD PTR [ebx+0x6eab7925],edx
  4093bd:	jns    0x409369
  4093bf:	or     al,BYTE PTR [ecx+0x6f0e66b4]
  4093c5:	or     al,0xa2
  4093c7:	scas   eax,DWORD PTR es:[edi]
  4093c8:	jle    0x409395
  4093ca:	jmp    0x409356
  4093cc:	test   ebp,edi
  4093ce:	sahf   
  4093cf:	xor    eax,0x50f6cfbf
  4093d4:	sti    
  4093d5:	mov    edi,ecx
  4093d7:	enter  0x9375,0x5c
  4093db:	std    
  4093dc:	scas   al,BYTE PTR es:[edi]
  4093dd:	shr    bl,1
  4093df:	xor    al,0x5a
  4093e1:	lods   al,BYTE PTR ds:[esi]
  4093e2:	shr    BYTE PTR [esi-0x378e968f],cl
  4093e8:	dec    esi
  4093e9:	mov    ah,0xcb
  4093eb:	push   eax
  4093ec:	push   es
  4093ed:	bound  esp,QWORD PTR [esi+0x412b776e]
  4093f3:	retf   0xe41e
  4093f6:	lods   eax,DWORD PTR ds:[esi]
  4093f7:	pop    esi
  4093f8:	push   0x1b
  4093fa:	adc    cl,BYTE PTR [ebp-0x18]
  4093fd:	or     ecx,DWORD PTR [edi+0x40fc7758]
  409403:	mov    WORD PTR [ecx+0x6e],ds
  409406:	dec    bh
  409408:	pushf  
  409409:	xor    BYTE PTR [ebp+0x70],0x85
  40940d:	and    DWORD PTR [esi+edi*8+0x31a8fe5d],esi
  409414:	iret   
  409415:	push   ds
  409416:	inc    esp
  409417:	xchg   esi,eax
  409418:	push   esp
  409419:	cmp    eax,0x594d11b5
  40941e:	mov    edx,0x3c547e90
  409423:	fist   DWORD PTR [ebp+0x6bb50982]
  409429:	jle    0x4093bc
  40942b:	test   DWORD PTR [edx-0x1b7d7a],esp
  409431:	ror    DWORD PTR [ecx+0x29c0132],0x36
  409438:	les    ebx,FWORD PTR [ecx-0x55]
  40943b:	mov    eax,0x11e4eb38
  409440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409441:	adc    BYTE PTR [ebp-0x6a],dl
  409444:	lods   al,BYTE PTR ds:[esi]
  409445:	push   ss
  409446:	adc    esp,DWORD PTR [edx]
  409448:	sti    
  409449:	ss add edx,edi
  40944c:	jl     0x4094bb
  40944e:	stos   BYTE PTR es:[edi],al
  40944f:	cmp    cl,BYTE PTR [esi+0x55]
  409452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409453:	mov    dh,0x4a
  409455:	xchg   esi,eax
  409456:	hlt    
  409457:	int3   
  409458:	mov    cl,0xc4
  40945a:	push   ds
  40945b:	push   ss
  40945c:	in     al,dx
  40945d:	fcomp  QWORD PTR [ebx]
  40945f:	sbb    al,0x86
  409461:	sbb    DWORD PTR [esi],esp
  409463:	pushf  
  409464:	je     0x409463
  409466:	xchg   DWORD PTR [eax+ecx*8+0x4078ebef],esp
  40946d:	scas   eax,DWORD PTR es:[edi]
  40946e:	mov    esp,fs
  409470:	xor    eax,0x3f055e6a
  409475:	out    dx,eax
  409476:	add    dl,BYTE PTR [eax+ebp*1]
  409479:	xor    BYTE PTR [esi-0x5ff35373],0x79
  409480:	mov    eax,0xd76e0257
  409485:	ret    0x57
  409488:	mov    ?,WORD PTR [ebp+eax*4+0x3720ef3f]
  40948f:	inc    edi
  409490:	jno    0x409472
  409492:	arpl   WORD PTR [edi+edx*2-0x7d],ax
  409496:	cmp    eax,DWORD PTR [edx-0x2a]
  409499:	lea    edi,[eax-0x42]
  40949c:	pop    ss
  40949d:	test   DWORD PTR [edi],eax
  40949f:	icebp  
  4094a0:	pusha  
  4094a1:	pop    ebp
  4094a2:	rcl    BYTE PTR [ebx+esi*2-0x2ae78ae0],1
  4094a9:	mov    ds:0x5f354d71,eax
  4094ae:	mov    fs,WORD PTR [edx+ecx*2+0x61]
  4094b2:	push   esp
  4094b3:	xchg   ebx,eax
  4094b4:	ret    0x5841
  4094b7:	imul   eax,DWORD PTR [ebp+0x72a010e6],0xffffffa3
  4094be:	jo     0x409481
  4094c0:	push   ds
  4094c1:	push   esp
  4094c2:	out    0x6d,al
  4094c4:	test   DWORD PTR [ecx+ecx*2-0x7e02480c],ebp
  4094cb:	sub    dh,BYTE PTR [esi-0x6eaf613f]
  4094d1:	xor    eax,0x86d8160c
  4094d6:	and    ah,cl
  4094d8:	and    esi,DWORD PTR [ebx-0x5ec772f9]
  4094de:	stc    
  4094df:	ror    cl,0x28
  4094e2:	xor    esp,DWORD PTR [edi+0x66]
  4094e5:	sub    BYTE PTR [edi+0x66],bl
  4094e8:	mov    ?,WORD PTR [edi+edx*2-0x60]
  4094ec:	add    edx,edx
  4094ee:	(bad)  
  4094ef:	pop    edx
  4094f0:	aaa    
  4094f1:	call   0x8f7a:0x9a93d067
  4094f8:	dec    ebx
  4094f9:	frstor [edx+0x7e3a3951]
  4094ff:	mov    ds:0xfbec8bf3,eax
  409504:	retf   0xd6bb
  409507:	pusha  
  409508:	pop    esp
  409509:	sub    ah,BYTE PTR [edx+0x1f595028]
  40950f:	jns    0x409562
  409511:	iret   
  409512:	pop    es
  409513:	jmp    0x4094ba
  409515:	push   ebx
  409516:	xor    bl,BYTE PTR [ebp+0x49b84379]
  40951c:	dec    edx
  40951d:	mov    bl,BYTE PTR [ebx+esi*2]
  409520:	mov    dl,0xf5
  409522:	(bad)  
  409523:	mov    ds:0xffeed432,eax
  409528:	out    dx,al
  409529:	pop    edx
  40952a:	ss pop es
  40952c:	cmp    al,al
  40952e:	sahf   
  40952f:	mov    eax,0x1bc68d1b
  409534:	clc    
  409535:	test   eax,0x6e605dc1
  40953a:	mov    DWORD PTR [ebx-0x3c],esp
  40953d:	enter  0x8959,0x70
  409541:	fwait
  409542:	in     al,0x71
  409544:	cli    
  409545:	fdivp  st(5),st
  409547:	ss xchg edx,eax
  409549:	push   0xe48456da
  40954e:	xchg   ebp,eax
  40954f:	xchg   ebp,eax
  409550:	xchg   edx,eax
  409551:	into   
  409552:	fcomp  st(6)
  409554:	fsubr  QWORD PTR [ebx+0x3ebb70c3]
  40955a:	nop
  40955b:	popa   
  40955c:	add    eax,0x97bec8b5
  409561:	mov    ch,0xf7
  409563:	dec    eax
  409564:	mov    cl,0x2c
  409566:	nop
  409567:	enter  0xae4d,0x89
  40956b:	out    0x8e,al
  40956d:	add    DWORD PTR [edx+0xc],ebx
  409570:	sub    eax,0xe8823675
  409575:	outs   dx,BYTE PTR ds:[esi]
  409576:	mov    ah,0x8e
  409578:	bound  ebp,QWORD PTR [esi]
  40957a:	adc    al,BYTE PTR [esi+0x20]
  40957d:	xor    al,BYTE PTR [eax-0x1]
  409580:	into   
  409581:	dec    edi
  409582:	and    al,0x63
  409584:	lods   al,BYTE PTR ds:[esi]
  409585:	out    0xc1,al
  409587:	xchg   ebx,eax
  409588:	sbb    eax,0xffffffc8
  40958b:	or     al,BYTE PTR [edi]
  40958d:	mov    ds:0x3601b898,eax
  409592:	mov    edx,0x29ad0986
  409597:	repz jecxz 0x409524
  40959a:	and    eax,0x52f87f0c
  40959f:	push   eax
  4095a0:	and    al,ah
  4095a2:	and    ch,BYTE PTR [edi+0x4d]
  4095a5:	fsub   QWORD PTR [ebx]
  4095a7:	aaa    
  4095a8:	nop
  4095a9:	push   ebp
  4095aa:	scas   eax,DWORD PTR es:[edi]
  4095ab:	push   0xc
  4095ad:	mov    ds:0xf1cf1055,al
  4095b2:	cmp    al,0xb8
  4095b4:	xor    eax,0xc3332a02
  4095b9:	sahf   
  4095ba:	dec    esi
  4095bb:	mov    DWORD PTR [ebx],ebx
  4095bd:	popf   
  4095be:	stos   BYTE PTR es:[edi],al
  4095bf:	jbe    0x409584
  4095c1:	dec    edx
  4095c2:	or     BYTE PTR [ebp+0x55def4f5],dl
  4095c8:	lock mov cl,BYTE PTR [ebp+0x1d182b18]
  4095cf:	xchg   ecx,eax
  4095d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d1:	xchg   ebx,eax
  4095d2:	or     bl,0xec
  4095d5:	popa   
  4095d6:	add    BYTE PTR [edx+0x12d4d56c],al
  4095dc:	mov    WORD PTR [ecx-0x35],es
  4095df:	imul   edi,ecx,0xb5c00fcf
  4095e5:	in     al,0x30
  4095e7:	jbe    0x4095bc
  4095e9:	push   DWORD PTR [eax-0x1]
  4095ec:	jg     0x4095be
  4095ee:	and    al,0xce
  4095f0:	fidiv  WORD PTR [esi]
  4095f2:	imul   eax,esi,0xffffffd6
  4095f5:	jae    0x4095e8
  4095f7:	shl    DWORD PTR [ebx],0xfc
  4095fa:	sub    BYTE PTR [edx-0x4b8c1f70],ch
  409600:	pop    ds
  409601:	push   es
  409602:	test   DWORD PTR [edx],0x88009307
  409608:	(bad)  
  409609:	xchg   esp,eax
  40960a:	ja     0x40966d
  40960c:	rol    DWORD PTR [ecx],0x47
  40960f:	nop
  409610:	inc    ebx
  409611:	fdiv   DWORD PTR [esi-0x30c0168e]
  409617:	jecxz  0x40963a
  409619:	int    0xc9
  40961b:	pushf  
  40961c:	das    
  40961d:	xchg   ebp,eax
  40961e:	xlat   BYTE PTR ds:[ebx]
  40961f:	push   ecx
  409620:	add    DWORD PTR [edx+eax*4+0x46c6f0b0],edi
  409627:	(bad)  
  409628:	sub    DWORD PTR [ecx+edx*2-0x52975539],esp
  40962f:	cmp    BYTE PTR [ecx+0x16],cl
  409632:	or     al,dh
  409634:	mov    BYTE PTR [edx+0x2b95024b],cl
  40963a:	mov    al,0xcc
  40963c:	xor    eax,0x2bb5210
  409641:	jp     0x40962d
  409643:	das    
  409644:	imul   ebp,ebx,0x3b
  409647:	cmp    BYTE PTR [ecx],ch
  409649:	fsub   st(6),st
  40964b:	sub    cl,cl
  40964d:	inc    edi
  40964e:	out    0x10,eax
  409650:	leave  
  409651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409652:	push   esi
  409653:	cmp    ah,BYTE PTR [eax]
  409655:	mov    edx,0xd53f34d2
  40965a:	xchg   esp,eax
  40965b:	hlt    
  40965c:	adc    al,0x96
  40965e:	in     al,dx
  40965f:	enter  0x5af0,0x4f
  409663:	lea    ebx,ss:[ecx+eiz*8-0x9fe5272]
  40966b:	and    esp,esi
  40966d:	mov    cl,0xca
  40966f:	adc    BYTE PTR [ebx],al
  409671:	std    
  409672:	mov    al,ds:0xb72401e0
  409677:	and    al,0x83
  409679:	xchg   BYTE PTR [edx],bl
  40967b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40967c:	js     0x409640
  40967e:	ins    BYTE PTR es:[edi],dx
  40967f:	loope  0x4096e5
  409681:	xchg   DWORD PTR [esi],edx
  409683:	xor    al,0x13
  409685:	das    
  409686:	aas    
  409687:	daa    
  409688:	test   al,0x25
  40968a:	mov    ebx,0x3e82cf42
  40968f:	and    eax,0x446988cb
  409694:	add    eax,0x66d310f0
  409699:	dec    ebp
  40969a:	adc    esi,esi
  40969c:	dec    eax
  40969d:	adc    bh,BYTE PTR [ebp+0x7a]
  4096a0:	mov    al,ds:0x35aa799f
  4096a5:	lds    esp,FWORD PTR [ebx+0x180cc2e]
  4096ab:	inc    esp
  4096ac:	pop    eax
  4096ad:	xchg   edx,eax
  4096ae:	stos   DWORD PTR es:[edi],eax
  4096af:	dec    ecx
  4096b0:	sub    BYTE PTR [esi],dl
  4096b2:	retf   
  4096b3:	xor    DWORD PTR [esi-0x2c],esp
  4096b6:	into   
  4096b7:	ret    
  4096b8:	adc    DWORD PTR gs:[ecx+0x3e],edi
  4096bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096bd:	mov    BYTE PTR [ebp+ebx*8+0x93bc8e9],cl
  4096c4:	(bad)  
  4096c6:	mov    edi,esi
  4096c8:	pop    edx
  4096c9:	sub    BYTE PTR [ebx-0xa],dh
  4096cc:	dec    edx
  4096cd:	xchg   esi,eax
  4096ce:	cmp    al,0xc3
  4096d0:	or     eax,0x2c59b252
  4096d5:	mov    ebp,DWORD PTR [ecx-0x43]
  4096d8:	cmp    dh,ah
  4096da:	nop
  4096db:	mov    es,ebx
  4096dd:	lds    edx,FWORD PTR [ecx+edi*1-0x55b57a21]
  4096e4:	mov    ch,0xc1
  4096e6:	imul   edx,DWORD PTR ds:0xb8c63cb7,0xb1ab9d72
  4096f0:	imul   ebp,DWORD PTR [ecx-0x7bf35169],0xcc3a6fb
  4096fa:	ss in  eax,0x7b
  4096fd:	add    DWORD PTR ds:0xce684ce1,esp
  409703:	aas    
  409704:	scas   al,BYTE PTR es:[edi]
  409705:	iret   
  409706:	fwait
  409707:	dec    edx
  409708:	pop    ecx
  409709:	lods   al,BYTE PTR ds:[esi]
  40970b:	fcom   QWORD PTR [ebx-0x20]
  40970e:	je     0x409774
  409710:	test   DWORD PTR [ebx],ebp
  409712:	sbb    edx,DWORD PTR [ebx]
  409714:	mov    esi,edi
  409716:	xchg   esi,eax
  409717:	cmp    eax,DWORD PTR [esi]
  409719:	cli    
  40971a:	mov    ecx,0x39fabf66
  40971f:	mov    ah,0x54
  409721:	pop    ebx
  409722:	rcl    DWORD PTR ds:0x52636201,1
  409728:	aas    
  409729:	xchg   al,dh
  40972b:	repz cld 
  40972d:	mov    ch,0xb5
  40972f:	sbb    esp,DWORD PTR [edx+0x2d26c504]
  409735:	cmovg  ebp,ecx
  409738:	xchg   DWORD PTR [ebx],ebp
  40973a:	push   es
  40973b:	int    0x10
  40973d:	retf   0xaef0
  409740:	pop    ds
  409741:	mov    esi,0xde1a4197
  409746:	dec    edi
  409747:	sub    ebx,DWORD PTR [esi-0x187a9aab]
  40974d:	sbb    cl,bh
  40974f:	loope  0x40977d
  409751:	xchg   BYTE PTR [edx-0x42fbccb0],cl
  409757:	jmp    0xc1d92ec9
  40975c:	push   edi
  40975d:	jle    0x409707
  40975f:	(bad)  
  409761:	pop    eax
  409762:	pusha  
  409763:	push   0x8ed5be8b
  409768:	push   ebx
  409769:	out    dx,al
  40976a:	div    DWORD PTR ds:0xf3f867c5
  409770:	mov    bh,0xd8
  409772:	loop   0x4097d4
  409774:	cld    
  409775:	cwde   
  409776:	test   al,0x0
  409778:	sub    eax,0x8b288d17
  40977d:	jmp    0x4097ac
  40977f:	nop
  409780:	sbb    eax,0xceb85b4c
  409785:	in     al,dx
  409786:	sub    eax,0x53344195
  40978b:	push   ss
  40978c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40978d:	pop    esi
  40978e:	jle    0x40974a
  409790:	neg    BYTE PTR [eax+0x20]
  409793:	sbb    BYTE PTR [ebp-0xc],dl
  409796:	sbb    edx,esi
  409798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409799:	push   0xffffffe1
  40979b:	sub    BYTE PTR [esi],dl
  40979d:	jb     0x4097ce
  40979f:	xchg   ebp,eax
  4097a0:	sbb    dh,BYTE PTR [esi+0xc]
  4097a3:	dec    edx
  4097a4:	(bad)  
  4097a5:	pusha  
  4097a6:	dec    ebx
  4097a7:	ret    0x782a
  4097aa:	(bad)  
  4097ab:	and    edx,edi
  4097ad:	popa   
  4097ae:	sbb    al,0xb8
  4097b0:	inc    BYTE PTR [edx+0x690338ff]
  4097b6:	ja     0x409759
  4097b8:	adc    edi,DWORD PTR [ebx+0x65]
  4097bb:	fstp   TBYTE PTR [ecx-0x36]
  4097be:	adc    bh,BYTE PTR [eax]
  4097c0:	mov    al,0x31
  4097c2:	lods   al,BYTE PTR ds:[esi]
  4097c3:	shr    DWORD PTR [ebp+eax*2-0x6949836c],1
  4097ca:	jg     0x40982a
  4097cc:	inc    edx
  4097cd:	jecxz  0x40982d
  4097cf:	shl    BYTE PTR [edi],0xcd
  4097d2:	pop    esi
  4097d3:	mov    cl,0x7b
  4097d5:	sti    
  4097d6:	test   eax,0x7eb501e4
  4097db:	stos   BYTE PTR es:[edi],al
  4097dc:	loop   0x409782
  4097de:	dec    esi
  4097df:	fst    QWORD PTR [ebx]
  4097e1:	cmp    al,0xf6
  4097e3:	adc    BYTE PTR [edx-0x19],0x6c
  4097e7:	repnz and edi,ebx
  4097ea:	add    al,BYTE PTR [ebx-0x4e]
  4097ed:	pop    eax
  4097ee:	adc    DWORD PTR [esi+0x6b],0x4b
  4097f2:	xchg   ebx,eax
  4097f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f4:	clc    
  4097f5:	pop    esi
  4097f6:	enter  0x663c,0xe2
  4097fa:	jae    0x4097c8
  4097fc:	out    0x64,al
  4097fe:	imul   edx,ebp,0xfffffffd
  409801:	or     DWORD PTR [ecx+0x242297c0],edx
  409807:	call   0x52980bac
  40980c:	mov    al,0xa0
  40980e:	xchg   edx,eax
  40980f:	rol    DWORD PTR [edx-0x51af7921],0x2e
  409816:	or     edx,DWORD PTR [esi+ebp*8+0x2b]
  40981a:	mov    ds:0x668f044e,al
  40981f:	cli    
  409820:	in     al,0xe9
  409822:	mov    eax,?
  409824:	call   0x6952f3fb
  409829:	cwde   
  40982a:	xor    eax,DWORD PTR [esi+0x36]
  40982d:	ds into 
  40982f:	mov    cl,0x33
  409831:	mov    ch,0xb9
  409833:	stc    
  409834:	pusha  
  409835:	cmp    BYTE PTR [eax-0x7b],dh
  409838:	pushf  
  409839:	push   cs
  40983a:	std    
  40983b:	in     al,dx
  40983c:	imul   DWORD PTR [ebx+0x6f]
  40983f:	xor    ebx,ebp
  409841:	cld    
  409842:	dec    ebp
  409843:	gs pop es
  409845:	lahf   
  409846:	jl     0x4098b3
  409848:	sbb    esp,ebp
  40984a:	mov    ebp,0xc5afedd8
  40984f:	ins    BYTE PTR es:[edi],dx
  409850:	push   0x11da6f9c
  409855:	jle    0x4098be
  409857:	(bad)  
  409858:	cmp    BYTE PTR [esp+eiz*4],bl
  40985b:	inc    edx
  40985c:	cs inc ebp
  40985e:	adc    eax,eax
  409860:	das    
  409861:	lods   al,BYTE PTR ds:[esi]
  409862:	pop    ecx
  409863:	shl    BYTE PTR [eax],1
  409865:	dec    esi
  409867:	pop    ebp
  409868:	rol    BYTE PTR [edx+0x1be8ec3],0x0
  40986f:	mov    esp,0xf3e83a1b
  409874:	or     bl,BYTE PTR [edi+0x5f69d3bc]
  40987a:	pop    edi
  40987b:	jb     0x409884
  40987d:	add    edx,0x5b4583cf
  409883:	push   eax
  409884:	(bad)  
  409885:	jne    0x409873
  409887:	push   esi
  409888:	mov    DWORD PTR [edx-0x2d],ebp
  40988b:	xor    eax,0x74d1607
  409890:	inc    esi
  409891:	stc    
  409892:	test   ebp,ecx
  409894:	pusha  
  409895:	xchg   edx,eax
  409896:	imul   esp,DWORD PTR [esi-0x3ace4693],0x2972aea0
  4098a0:	lock push ebx
  4098a2:	push   sp
  4098a4:	scas   eax,DWORD PTR es:[edi]
  4098a5:	sbb    eax,DWORD PTR [ebp+0x49]
  4098a8:	push   ss
  4098a9:	lea    esp,[edi-0x19a8f48c]
  4098af:	mov    ecx,0x9267be01
  4098b4:	cs xlat BYTE PTR es:[ebx]
  4098b7:	addr16 pop edx
  4098b9:	add    eax,0xe06e2351
  4098be:	mov    cl,0xdc
  4098c0:	scas   al,BYTE PTR es:[edi]
  4098c1:	fidivr DWORD PTR [esi-0x50]
  4098c4:	daa    
  4098c5:	sbb    al,0x28
  4098c7:	jne    0x4098f3
  4098c9:	inc    edx
  4098ca:	rcl    BYTE PTR [eax-0x37dd01f6],cl
  4098d0:	dec    ecx
  4098d1:	mov    dh,BYTE PTR [eax-0x6d]
  4098d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098d5:	(bad)  
  4098d6:	clc    
  4098d7:	mov    eax,0xcd62bd10
  4098dc:	inc    eax
  4098dd:	fisub  DWORD PTR [ecx]
  4098df:	mov    DWORD PTR [esp+ebp*8],esp
  4098e2:	push   eax
  4098e3:	pop    ebx
  4098e4:	pop    es
  4098e5:	fbld   TBYTE PTR [edx+ebx*4]
  4098e8:	mov    dh,0xfe
  4098ea:	loope  0x40990c
  4098ec:	test   al,0xae
  4098ee:	ss int3 
  4098f0:	hlt    
  4098f1:	imul   esp,DWORD PTR ds:0x52b8e3ec,0xebabbcf3
  4098fb:	xor    eax,DWORD PTR [edx-0x28]
  4098fe:	lds    esp,FWORD PTR [esi+0x38]
  409901:	add    eax,0x3810a995
  409906:	lods   al,BYTE PTR ds:[esi]
  409907:	and    DWORD PTR [eax-0x396144cb],esi
  40990d:	pop    ebx
  40990e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990f:	in     eax,dx
  409910:	mov    al,0xcc
  409912:	aam    0xef
  409914:	mov    bh,0x76
  409916:	or     DWORD PTR [eax+0x34e86976],esi
  40991c:	int    0xea
  40991e:	xor    ebx,ebx
  409920:	cmp    BYTE PTR [eax-0x6df19cf6],0xf9
  409927:	iret   
  409928:	iret   
  409929:	mov    edx,0x4e6805d4
  40992e:	push   edx
  40992f:	fst    QWORD PTR [esi+0x60bdbef6]
  409935:	mov    BYTE PTR [edx],al
  409937:	xor    ecx,esi
  409939:	jge    0x40993c
  40993b:	xchg   ebx,eax
  40993c:	loopne 0x40995c
  40993e:	pop    esp
  40993f:	rcl    DWORD PTR [ebp-0x1],1
  409942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409943:	repnz mov dl,0xfd
  409946:	imul   esi,DWORD PTR [ebp-0x78ffd1c],0x8d98d493
  409950:	out    dx,al
  409951:	mov    eax,ds:0xfdb82e23
  409956:	std    
  409957:	jnp    0x409934
  409959:	mov    esi,0x370a5155
  40995e:	add    al,0x32
  409960:	sar    DWORD PTR [eax+0x56],0xab
  409964:	fdivr  DWORD PTR [ecx-0x61b16309]
  40996a:	and    esp,esp
  40996c:	and    eax,0xc74f8f07
  409971:	push   ds
  409972:	push   cs
  409973:	or     edx,0xe9ca4932
  409979:	in     al,dx
  40997a:	aas    
  40997b:	clc    
  40997c:	cmc    
  40997d:	ficom  DWORD PTR [esp+ebp*1+0x11]
  409981:	mov    ds:0x684572b5,eax
  409986:	adc    al,0xb4
  409988:	scas   eax,DWORD PTR es:[edi]
  409989:	gs mov bl,0x5f
  40998c:	retf   
  40998d:	lods   al,BYTE PTR ds:[esi]
  40998e:	cmp    cl,bh
  409990:	pop    edx
  409991:	mov    eax,ds:0x30ab68da
  409996:	mov    ds:0x38fe2eaa,al
  40999b:	sub    cl,BYTE PTR [ecx-0x45]
  40999e:	fiadd  WORD PTR [ebx]
  4099a0:	(bad)  
  4099a1:	jno    0x409957
  4099a3:	bound  edi,QWORD PTR [ebx-0x7e]
  4099a6:	mov    esi,0x1e0a047d
  4099ab:	mov    al,0xd5
  4099ad:	xchg   edx,eax
  4099ae:	push   ebx
  4099af:	test   BYTE PTR [ecx+0x70],cl
  4099b2:	inc    eax
  4099b3:	jnp    0x409a0e
  4099b5:	push   ss
  4099b6:	out    0x81,al
  4099b8:	or     DWORD PTR [edx],edx
  4099ba:	or     cl,cl
  4099bc:	sbb    bh,BYTE PTR [eax+edx*8]
  4099bf:	xor    ebp,DWORD PTR [ebx+0x5d51579d]
  4099c5:	dec    ebx
  4099c6:	ins    BYTE PTR es:[edi],dx
  4099c7:	not    BYTE PTR [ebx]
  4099c9:	rcl    DWORD PTR [edx],cl
  4099cb:	rcr    BYTE PTR [ebx+0x542483b1],1
  4099d1:	inc    ebp
  4099d2:	fcomi  st,st(7)
  4099d4:	test   al,0x2c
  4099d6:	gs mov dl,0xb7
  4099d9:	inc    ebp
  4099da:	shl    DWORD PTR [ebx-0x5a],cl
  4099dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099de:	cmp    esp,edi
  4099e0:	xor    al,0xb6
  4099e2:	mov    ds:0x6448fa40,al
  4099e7:	sub    al,0x13
  4099e9:	sub    BYTE PTR [edx+0x4e4664e3],0xc3
  4099f0:	mov    esi,0x8af0f1a4
  4099f5:	in     al,0x41
  4099f7:	dec    edx
  4099f8:	(bad)  
  4099f9:	sub    DWORD PTR [eax+0x405bd1ed],eax
  4099ff:	js     0x409a24
  409a01:	add    bl,BYTE PTR [edx-0x56e3f9a0]
  409a07:	data16 cmp al,BYTE PTR [eax+eiz*1]
  409a0b:	sbb    ecx,DWORD PTR [esi]
  409a0d:	sbb    eax,0x6bd05cdb
  409a12:	dec    esp
  409a13:	(bad)  
  409a14:	in     eax,0x34
  409a16:	dec    esp
  409a17:	jmp    0xb935fb59
  409a1c:	mov    ah,0xb5
  409a1e:	push   ecx
  409a1f:	inc    edx
  409a20:	shr    BYTE PTR [edx+0x7ccff32d],cl
  409a26:	mov    eax,0xf8f88ca3
  409a2b:	daa    
  409a2c:	or     al,0xc9
  409a2e:	mov    al,ds:0x46640389
  409a33:	add    ebp,edi
  409a35:	mov    eax,ds:0xac323706
  409a3a:	cli    
  409a3b:	daa    
  409a3c:	pushf  
  409a3d:	inc    edi
  409a3e:	jb     0x409abc
  409a40:	ins    BYTE PTR es:[edi],dx
  409a41:	arpl   WORD PTR [eax],dx
  409a43:	aam    0xfe
  409a45:	mov    edx,DWORD PTR [edx-0x27]
  409a48:	push   DWORD PTR [eax-0x1726a42a]
  409a4e:	xchg   DWORD PTR [ebx],edx
  409a50:	or     eax,0x96d7747a
  409a55:	jmp    0x1d31:0x9e7de41d
  409a5c:	std    
  409a5d:	sub    edi,DWORD PTR [eax+edx*4+0x37]
  409a61:	xchg   edx,eax
  409a62:	add    al,0x9b
  409a64:	jnp    0x409ad5
  409a66:	inc    BYTE PTR [ecx+edx*4-0x2c86597c]
  409a6d:	psrlw  mm2,mm6
  409a70:	mov    eax,0xe4b7452d
  409a75:	add    ebp,eax
  409a77:	call   0xf38e1dac
  409a7c:	jns    0x409ad3
  409a7e:	mov    bh,0xf0
  409a80:	test   BYTE PTR ss:[ecx],0x78
  409a84:	cmp    al,0x8a
  409a86:	xor    dl,ah
  409a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a89:	mov    ds:0x40e51161,eax
  409a8e:	outs   dx,BYTE PTR ds:[esi]
  409a8f:	ins    DWORD PTR es:[edi],dx
  409a90:	jp     0x409a8e
  409a92:	leave  
  409a93:	scas   eax,DWORD PTR es:[edi]
  409a94:	push   ss
  409a95:	cwde   
  409a96:	inc    ecx
  409a97:	jge    0x409a94
  409a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9a:	ret    0x5155
  409a9d:	mov    dl,BYTE PTR ds:[eax-0x25]
  409aa1:	inc    eax
  409aa2:	fisttp DWORD PTR [esp+ebp*4-0x6c0c578b]
  409aa9:	sub    al,0x88
  409aab:	cmp    al,0xf2
  409aad:	jns    0x409ab9
  409aaf:	and    al,0x3b
  409ab1:	mov    eax,ds:0x17d45511
  409ab6:	or     BYTE PTR [eax],al
  409ab8:	jnp    0x409a61
  409aba:	jo     0x409b18
  409abc:	cdq    
  409abd:	mov    WORD PTR [edi+0x78],ss
  409ac0:	xor    al,0x46
  409ac2:	push   ebp
  409ac3:	mov    dl,0xa4
  409ac5:	(bad)  
  409ac6:	lahf   
  409ac7:	push   0xabfb4152
  409acc:	sub    ebp,DWORD PTR [ebx+0x4ea5e38b]
  409ad2:	xor    DWORD PTR [esi],ecx
  409ad4:	jmp    0x409b50
  409ad6:	out    0xc4,al
  409ad8:	push   ebx
  409ad9:	jge    0x409a65
  409adb:	jmp    0x6e6aceb9
  409ae0:	js     0x409b5e
  409ae2:	push   ebp
  409ae3:	fdivr  st(2),st
  409ae5:	sub    eax,eax
  409ae7:	out    dx,eax
  409ae8:	outs   dx,BYTE PTR ds:[esi]
  409ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aea:	lock mov DWORD PTR [edi+edx*1+0x67b6fb31],eax
  409af2:	jmp    0x7d25946c
  409af7:	icebp  
  409af8:	push   esi
  409af9:	aad    0xa6
  409afb:	pop    ebx
  409afc:	sub    bh,cl
  409afe:	ret    0x3155
  409b01:	(bad)  
  409b02:	sar    cl,cl
  409b04:	inc    edx
  409b05:	mov    dl,0x17
  409b07:	aam    0x57
  409b09:	int3   
  409b0a:	out    dx,al
  409b0b:	mov    bl,0x7e
  409b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b0e:	xchg   ebp,eax
  409b0f:	adc    edx,DWORD PTR [eax-0x62c5799e]
  409b15:	pushf  
  409b16:	dec    edi
  409b17:	sbb    eax,esp
  409b19:	and    esi,edx
  409b1b:	xor    ah,BYTE PTR ds:0x8f6af35b
  409b21:	add    BYTE PTR [ebp+0x32d3426b],al
  409b27:	mov    ebp,esi
  409b29:	(bad)  
  409b2a:	out    0x8a,eax
  409b2c:	pop    esp
  409b2d:	sbb    DWORD PTR [edi+0x68],edi
  409b30:	retf   0xe9c
  409b33:	stc    
  409b34:	sahf   
  409b35:	add    esi,DWORD PTR [ecx+ebx*1+0x4f27f63a]
  409b3c:	repz ret 
  409b3e:	cmp    BYTE PTR [edx+eiz*2+0x6],cl
  409b42:	mov    ds:0x889a1e07,al
  409b47:	aas    
  409b48:	sahf   
  409b49:	push   esi
  409b4a:	pop    esi
  409b4b:	cmp    al,0x7a
  409b4d:	pop    edi
  409b4e:	dec    esp
  409b4f:	les    esp,FWORD PTR [edx]
  409b51:	stc    
  409b52:	and    ch,ah
  409b54:	add    eax,0x3f0b88f1
  409b59:	cmp    eax,0x38fadc3d
  409b5e:	repz xchg ecx,eax
  409b60:	popa   
  409b61:	fs mov ebp,0xc5c3ed8c
  409b67:	cmp    bl,cl
  409b69:	jp     0x409b9c
  409b6b:	call   0x3705:0x970e09b4
  409b72:	pushf  
  409b73:	pop    ss
  409b74:	lds    edi,FWORD PTR [edx+0x5b81f6b5]
  409b7a:	addr16 (bad) 
  409b7c:	addr16 fdecstp 
  409b7f:	call   0x424a:0x923e2548
  409b86:	sti    
  409b87:	lahf   
  409b88:	sbb    eax,0xca6593a3
  409b8d:	xchg   ebp,eax
  409b8e:	mov    edx,DWORD PTR [ecx-0x2117b030]
  409b94:	dec    edx
  409b95:	mov    bl,0x38
  409b97:	rcl    DWORD PTR [edi+0x1844d223],1
  409b9d:	sub    ebx,DWORD PTR [esi+0x4b]
  409ba0:	xor    bh,ch
  409ba2:	je     0x409b4d
  409ba4:	ins    BYTE PTR es:[edi],dx
  409ba5:	or     ebp,ebp
  409ba7:	dec    eax
  409ba8:	hlt    
  409ba9:	ret    
  409baa:	mov    bl,0xbb
  409bac:	sub    DWORD PTR [esi+0x1f1c0707],eax
  409bb2:	mov    eax,ds:0x94c38d55
  409bb7:	add    ebx,ecx
  409bb9:	stos   DWORD PTR es:[edi],eax
  409bba:	pop    ebx
  409bbb:	repz sub ch,BYTE PTR [edi]
  409bbe:	and    eax,0x7424284a
  409bc3:	add    ebp,DWORD PTR [ecx+0x2d28ae06]
  409bc9:	dec    ebx
  409bca:	inc    edi
  409bcb:	popa   
  409bcc:	sub    ebx,ebp
  409bce:	lock std 
  409bd0:	push   ecx
  409bd1:	loopne 0x409bec
  409bd3:	fcomi  st,st(3)
  409bd5:	mov    ?,WORD PTR [edx+0x4995ca1c]
  409bdb:	xor    DWORD PTR [esi+0x30],edx
  409bde:	cld    
  409bdf:	fbld   TBYTE PTR [edi]
  409be1:	or     eax,0xb6d268a3
  409be6:	shl    BYTE PTR [edi+0x405a278a],0x84
  409bed:	mov    ah,0x74
  409bef:	mov    ebx,0x263b03df
  409bf4:	adc    BYTE PTR [esi],al
  409bf6:	inc    ecx
  409bf7:	aad    0x2b
  409bf9:	enter  0x5d5a,0x1c
  409bfd:	data16 lahf 
  409bff:	lea    eax,[eax-0x71876db7]
  409c05:	ins    DWORD PTR es:[edi],dx
  409c06:	add    BYTE PTR ds:0xb542e184,0x8d
  409c0d:	bound  eax,QWORD PTR [edi-0x66c57abd]
  409c13:	pop    ebx
  409c14:	jmp    0x409bd9
  409c16:	jg     0x409c6e
  409c18:	test   DWORD PTR [edx],esi
  409c1a:	add    eax,0xbe4f1742
  409c1f:	cdq    
  409c20:	push   edx
  409c21:	nop
  409c22:	cld    
  409c23:	loopne 0x409c69
  409c25:	add    ch,ch
  409c27:	add    ch,BYTE PTR [edx]
  409c29:	and    DWORD PTR [ebp+0x354bc4ce],0x34
  409c30:	and    esp,DWORD PTR [ebx+0x6302bc28]
  409c36:	call   FWORD PTR [esi+0x5f]
  409c39:	jmp    0xd035457a
  409c3e:	and    DWORD PTR [edi+eax*4+0x7e],esi
  409c42:	sahf   
  409c43:	outs   dx,BYTE PTR gs:[esi]
  409c45:	mov    ds:0xa1811d6f,al
  409c4a:	xchg   edi,eax
  409c4b:	std    
  409c4c:	mov    dl,0xb7
  409c4e:	fiadd  WORD PTR [edi+ebp*4-0x4c]
  409c52:	sbb    dl,ch
  409c54:	mov    edi,0xc2d00b09
  409c59:	fstp   TBYTE PTR [ecx+0x23]
  409c5c:	fimul  WORD PTR [ebx+ecx*2-0x682f7f41]
  409c63:	and    al,0x5c
  409c65:	adc    BYTE PTR [esp+edx*4-0x38],dl
  409c69:	adc    ebp,eax
  409c6b:	hlt    
  409c6c:	xor    eax,0x853ab979
  409c71:	shr    al,cl
  409c73:	loopne 0x409c25
  409c75:	xchg   BYTE PTR [eax],ch
  409c77:	cmp    ebx,edx
  409c79:	mov    ecx,0xbc5f8701
  409c7e:	sub    al,0xd3
  409c80:	adc    al,0xdf
  409c82:	mov    eax,ds:0x678fed7a
  409c87:	xchg   esp,eax
  409c88:	out    0xfb,eax
  409c8a:	mov    bh,0x95
  409c8c:	stos   DWORD PTR es:[edi],eax
  409c8d:	inc    ebx
  409c8e:	clc    
  409c8f:	lea    ecx,[ecx-0x4]
  409c92:	(bad)  
  409c93:	clc    
  409c94:	int    0x33
  409c96:	ret    
  409c97:	push   ds
  409c98:	pop    edi
  409c99:	inc    esp
  409c9a:	cdq    
  409c9b:	pusha  
  409c9c:	cmp    esp,esp
  409c9e:	lods   eax,DWORD PTR ds:[esi]
  409c9f:	adc    esi,DWORD PTR [ebx+0x2029166b]
  409ca5:	fwait
  409ca6:	mov    ah,0xa9
  409ca8:	data16 fcom QWORD PTR [eax-0x286fb4cb]
  409caf:	in     al,dx
  409cb0:	jne    0x409c97
  409cb2:	or     ecx,DWORD PTR [edi+0x154145b1]
  409cb8:	call   0x69f8e792
  409cbd:	js     0x409ca1
  409cbf:	repnz push es
  409cc1:	test   BYTE PTR [edi],dl
  409cc3:	int    0xa2
  409cc5:	ins    DWORD PTR es:[edi],dx
  409cc6:	or     BYTE PTR [ecx-0x60],bh
  409cc9:	pop    ebp
  409cca:	sub    al,ch
  409ccc:	pop    ss
  409ccd:	xor    al,0x1b
  409ccf:	stos   DWORD PTR es:[edi],eax
  409cd0:	jg     0x409c9c
  409cd2:	lock adc BYTE PTR [edi+0x34511c78],ah
  409cd9:	fwait
  409cda:	clc    
  409cdb:	pop    ecx
  409cdc:	(bad)  
  409cde:	(bad)  
  409cdf:	jecxz  0x409c6c
  409ce1:	scas   al,BYTE PTR es:[edi]
  409ce2:	das    
  409ce3:	mov    eax,0x18a25b63
  409ce8:	mov    ecx,ss
  409cea:	mov    ebp,0x8d5ffabf
  409cef:	sbb    al,BYTE PTR [edi+0x1be8a7e5]
  409cf5:	push   edx
  409cf6:	and    DWORD PTR [ebx+0x5ddd7344],ecx
  409cfc:	mov    ds:0x6181b587,eax
  409d01:	push   ss
  409d02:	fisub  WORD PTR ds:0xcf826dd1
  409d08:	out    dx,eax
  409d09:	or     al,BYTE PTR [ebx]
  409d0b:	or     eax,0x461b58e0
  409d10:	push   0xaa411d1a
  409d15:	jge    0x409d42
  409d17:	xchg   edi,eax
  409d18:	push   esp
  409d19:	in     al,0x57
  409d1b:	ret    
  409d1c:	sbb    ebx,DWORD PTR [edx]
  409d1e:	add    eax,0xfcffda52
  409d23:	dec    edx
  409d24:	and    eax,eax
  409d26:	loop   0x409d29
  409d28:	shl    DWORD PTR [esi-0x37],cl
  409d2b:	xchg   edi,eax
  409d2c:	push   es
  409d2d:	pop    esi
  409d2e:	lods   eax,DWORD PTR ds:[esi]
  409d2f:	test   eax,0x62888df2
  409d34:	xchg   ebx,eax
  409d35:	adc    bl,dl
  409d37:	addr16 lock pop ecx
  409d3a:	icebp  
  409d3b:	dec    edx
  409d3c:	ins    DWORD PTR es:[edi],dx
  409d3d:	mov    eax,ds:0x4adbbf9f
  409d42:	mov    ebx,0xd20bcada
  409d47:	pop    es
  409d48:	add    ah,BYTE PTR [edi+0x377808a7]
  409d4e:	rol    ebp,cl
  409d50:	push   eax
  409d51:	and    al,0x8c
  409d53:	out    0x8f,al
  409d55:	dec    edx
  409d56:	jle    0x409da5
  409d58:	pop    ss
  409d59:	and    eax,0x8db2063d
  409d5e:	add    BYTE PTR [ebx+0x79],dh
  409d61:	ret    0x518d
  409d64:	cmp    ebx,DWORD PTR [ebx+0x33]
  409d67:	aad    0xf9
  409d69:	in     al,0xea
  409d6b:	gs inc ecx
  409d6d:	enter  0x2073,0x0
  409d71:	sbb    al,0x13
  409d73:	lods   al,BYTE PTR ds:[esi]
  409d74:	dec    BYTE PTR [ecx+0x73]
  409d77:	shr    BYTE PTR [ebx+0x28],0xcd
  409d7b:	add    esi,DWORD PTR [edi-0x18]
  409d7e:	popf   
  409d7f:	mov    ebx,0xf1863081
  409d84:	push   esi
  409d85:	cwde   
  409d86:	in     al,dx
  409d87:	jb     0x409df5
  409d89:	in     eax,dx
  409d8a:	in     eax,0xa6
  409d8c:	dec    edi
  409d8d:	int3   
  409d8e:	pusha  
  409d8f:	sub    al,bh
  409d91:	mov    cl,0x55
  409d93:	push   edx
  409d94:	call   0x32ae:0x38b22d5e
  409d9b:	mov    esi,0x9e13539f
  409da0:	and    DWORD PTR [ebx-0x50761f56],0x9292cd9e
  409daa:	jbe    0x409d55
  409dac:	dec    ebx
  409dad:	retf   0x65da
  409db0:	mov    bh,0xbd
  409db2:	retf   0x7fda
  409db5:	mov    cs,WORD PTR [eax-0x5b]
  409db8:	test   eax,0xab11d97d
  409dbd:	adc    esp,esp
  409dbf:	mov    ds:0x43b0b979,al
  409dc4:	stc    
  409dc5:	jecxz  0x409da6
  409dc7:	adc    BYTE PTR [eax+ebx*4-0x492bebb],dh
  409dce:	retf   
  409dcf:	pop    es
  409dd0:	add    BYTE PTR [ebx+ecx*1],bl
  409dd3:	out    dx,al
  409dd4:	(bad)  
  409dd5:	fidiv  DWORD PTR [ecx-0x9b82967]
  409ddb:	daa    
  409ddc:	inc    ecx
  409ddd:	dec    ecx
  409dde:	gs cmc 
  409de0:	ss out 0xed,al
  409de3:	mov    ch,0xf7
  409de5:	jns    0x409dcb
  409de7:	xlat   BYTE PTR ds:[ebx]
  409de8:	arpl   WORD PTR [ebx],ax
  409dea:	sahf   
  409deb:	sbb    al,0xfc
  409ded:	hlt    
  409dee:	jecxz  0x409e4c
  409df0:	mov    ds:0xf65517fd,al
  409df5:	sbb    al,0xf0
  409df7:	push   ds
  409df8:	aam    0xcd
  409dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfb:	loope  0x409e76
  409dfd:	sub    DWORD PTR [ecx],ebp
  409dff:	outs   dx,BYTE PTR ds:[esi]
  409e00:	and    eax,0xd0663867
  409e05:	xchg   ebx,eax
  409e06:	pop    ebp
  409e07:	mov    ds:0x99592d8d,eax
  409e0c:	shl    BYTE PTR [edi-0x46],cl
  409e0f:	inc    esp
  409e10:	ror    DWORD PTR [edi],1
  409e12:	fs sbb eax,ebp
  409e15:	and    eax,DWORD PTR [ecx]
  409e17:	out    0x6e,al
  409e19:	iret   
  409e1a:	mov    ah,BYTE PTR [edx]
  409e1c:	and    DWORD PTR [edx],edi
  409e1e:	add    DWORD PTR [eax],ebp
  409e20:	mov    edi,edi
  409e22:	cli    
  409e23:	add    edx,ecx
  409e25:	scas   al,BYTE PTR es:[edi]
  409e26:	or     eax,0xb5bcbdca
  409e2b:	xor    al,0xaf
  409e2d:	pusha  
  409e2e:	or     eax,DWORD PTR [esi-0x763f8e6b]
  409e34:	shr    esi,cl
  409e36:	out    dx,eax
  409e37:	push   ebp
  409e38:	cs sub eax,0xce400d0e
  409e3e:	and    ch,BYTE PTR [ebx]
  409e40:	inc    ecx
  409e41:	int    0xe2
  409e43:	push   edx
  409e44:	out    0xd0,eax
  409e46:	add    bh,BYTE PTR [edx-0x1ed06d21]
  409e4c:	gs pop es
  409e4e:	je     0x409e8c
  409e50:	mov    eax,0xdca9fcf8
  409e55:	jl     0x409e16
  409e57:	adc    ch,BYTE PTR [ebp-0x42]
  409e5a:	sub    esp,esi
  409e5c:	icebp  
  409e5d:	mov    edi,DWORD PTR [eax]
  409e5f:	jbe    0x409e57
  409e61:	(bad)  
  409e62:	ja     0x409ea1
  409e64:	outs   dx,DWORD PTR ds:[esi]
  409e65:	or     BYTE PTR [ecx],dh
  409e67:	iret   
  409e68:	mov    dh,0xbe
  409e6a:	adc    DWORD PTR [edx+0xeaea3cf],edi
  409e70:	and    ah,ch
  409e72:	push   es
  409e73:	or     DWORD PTR [ebp+edx*4+0x701ffbc1],esi
  409e7a:	adc    eax,0x46af7b0a
  409e7f:	dec    edi
  409e80:	(bad)  
  409e81:	cld    
  409e82:	inc    esp
  409e83:	jle    0x409e10
  409e85:	hlt    
  409e86:	loop   0x409e60
  409e88:	out    0xc3,eax
  409e8a:	jno    0x409e78
  409e8c:	cli    
  409e8d:	xor    ebp,DWORD PTR [edi-0x40721e36]
  409e93:	jno    0x409ef5
  409e95:	ss pusha 
  409e97:	ds retf 
  409e99:	ins    BYTE PTR es:[edi],dx
  409e9a:	ror    BYTE PTR [eax-0x1033d9aa],1
  409ea0:	scas   eax,DWORD PTR es:[edi]
  409ea1:	neg    DWORD PTR [ebp-0x1b9d3c87]
  409ea7:	mov    edx,0x4a761a9e
  409eac:	lods   al,BYTE PTR ds:[esi]
  409ead:	addr16 ret 0x5494
  409eb1:	jg     0x409ecc
  409eb3:	add    BYTE PTR [ecx+0x74e7f40d],0x53
  409eba:	in     al,dx
  409ebb:	sub    eax,0x3d3e51d4
  409ec0:	mov    cl,0x7
  409ec2:	and    ch,BYTE PTR [ecx]
  409ec4:	or     BYTE PTR [ebx],0x14
  409ec7:	add    DWORD PTR [ebp+0x296b8388],eax
  409ecd:	test   eax,0x1e418101
  409ed2:	imul   DWORD PTR [ebx+0x12c4340e]
  409ed8:	push   es
  409ed9:	out    dx,al
  409eda:	clc    
  409edb:	dec    eax
  409edc:	rcl    cl,0xb4
  409edf:	pop    edx
  409ee0:	in     al,dx
  409ee1:	ss dec ebp
  409ee3:	mov    al,0x5
  409ee5:	pop    ss
  409ee6:	imul   ebp,DWORD PTR [eax],0x39
  409ee9:	xor    ah,BYTE PTR [eax-0x3e]
  409eec:	sub    cl,bh
  409eee:	ja     0x409e7d
  409ef0:	pop    ds
  409ef1:	clc    
  409ef2:	or     esp,DWORD PTR [edx+esi*4]
  409ef5:	ja     0x409eda
  409ef7:	jecxz  0x409f47
  409ef9:	xchg   edx,eax
  409efa:	js     0x409e87
  409efc:	fsub   DWORD PTR [edx-0x557cc433]
  409f02:	mov    dh,0x5f
  409f04:	lods   al,BYTE PTR ds:[esi]
  409f05:	int3   
  409f06:	add    ecx,edx
  409f08:	outs   dx,DWORD PTR ds:[esi]
  409f09:	pop    esi
  409f0a:	adc    bh,BYTE PTR [edx]
  409f0c:	div    DWORD PTR [ecx+esi*4-0x62]
  409f10:	inc    ecx
  409f11:	xor    ebp,DWORD PTR [ebp-0x6e]
  409f14:	icebp  
  409f15:	mov    eax,es
  409f17:	clc    
  409f18:	dec    esi
  409f19:	imul   ebx,eax,0x53dbff7f
  409f1f:	add    edi,eax
  409f21:	loope  0x409eeb
  409f23:	xor    BYTE PTR [ebp+0x6c],dl
  409f26:	loope  0x409ebf
  409f28:	jnp    0x409f34
  409f2a:	add    BYTE PTR [ecx+0x2ade5aa4],al
  409f30:	ja     0x409f9c
  409f32:	jno    0x409eba
  409f34:	int3   
  409f35:	ja     0x409ef8
  409f37:	or     al,0xa1
  409f39:	push   0x2b
  409f3b:	xchg   esp,eax
  409f3c:	sar    BYTE PTR [ebp-0x7f448c13],1
  409f42:	shr    BYTE PTR [ecx+eiz*2+0x2f],cl
  409f46:	mov    dh,0xdd
  409f48:	dec    esp
  409f49:	in     eax,0xd5
  409f4b:	cmp    ebp,eax
  409f4d:	jne    0x409f31
  409f4f:	cmp    cl,BYTE PTR [edx+0x15f655cf]
  409f55:	imul   ecx,DWORD PTR [ebx+0x3a],0xffffffb0
  409f59:	int    0x3f
  409f5b:	popa   
  409f5c:	xchg   DWORD PTR [edi-0x1b3f097f],esp
  409f62:	xchg   esp,eax
  409f63:	outs   dx,BYTE PTR ds:[esi]
  409f64:	adc    esp,ebp
  409f66:	sub    BYTE PTR ds:0xe3352077,dh
  409f6c:	sub    eax,0x10d0aa9
  409f71:	xchg   DWORD PTR [ecx+0x3c],esi
  409f74:	pop    ecx
  409f75:	sbb    al,0x6a
  409f77:	cli    
  409f78:	xor    eax,0x23bd8a67
  409f7d:	rcr    DWORD PTR [edi],cl
  409f7f:	or     cl,ah
  409f81:	div    BYTE PTR [ecx+0x7d652f2c]
  409f87:	dec    ebx
  409f88:	not    BYTE PTR [eax+ecx*2+0x69038b95]
  409f8f:	jae    0x409fca
  409f91:	fyl2x  
  409f93:	icebp  
  409f94:	int    0xe0
  409f96:	enter  0x1e29,0x88
  409f9a:	inc    edx
  409f9b:	xor    BYTE PTR [ecx],ch
  409f9d:	adc    eax,0x46c5824b
  409fa2:	sbb    edi,esi
  409fa4:	jb     0x40a001
  409fa6:	xor    DWORD PTR ds:0x1698d18f,ecx
  409fac:	enter  0x1cbd,0xc4
  409fb0:	jge    0x409faa
  409fb2:	xchg   dl,ah
  409fb4:	xchg   edi,eax
  409fb5:	stos   DWORD PTR es:[edi],eax
  409fb6:	push   edi
  409fb7:	(bad)  
  409fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb9:	inc    esi
  409fba:	addr16 mov al,0x26
  409fbd:	jb     0x409fb0
  409fbf:	fisub  DWORD PTR [edx+eiz*1]
  409fc2:	outs   dx,DWORD PTR ds:[esi]
  409fc3:	cs ins BYTE PTR es:[edi],dx
  409fc5:	aam    0x4a
  409fc7:	dec    esp
  409fc8:	jecxz  0x40a03e
  409fca:	jg     0x409fe1
  409fcc:	adc    DWORD PTR [ebx+0x37118692],ebx
  409fd2:	pop    edi
  409fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd4:	(bad)  
  409fd5:	xchg   esp,eax
  409fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd7:	aas    
  409fd8:	add    DWORD PTR [edx+0x440b6bdd],0x25acc3ec
  409fe2:	loop   0x40a010
  409fe4:	test   BYTE PTR [edx-0x3d],dh
  409fe7:	add    esi,DWORD PTR [edi+0xe9e5032]
  409fed:	jb     0x40a031
  409fef:	or     edx,DWORD PTR [esp+edx*4+0x46]
  409ff3:	(bad)  
  409ff4:	into   
  409ff5:	mov    ds:0x62573f5,eax
  409ffa:	sub    BYTE PTR [eax],0xa0
  409ffd:	adc    eax,0x116aaa1b
  40a002:	lea    ebp,[edi+edi*1+0x2a387ed3]
  40a009:	retf   
  40a00a:	mov    dh,BYTE PTR [esp+ecx*4+0x3bbf4f9a]
  40a011:	mov    al,ds:0xe5ac7656
  40a016:	mov    ch,0x52
  40a018:	sbb    ebx,0x2da5b561
  40a01e:	and    eax,0xfca51fb8
  40a023:	xchg   esp,eax
  40a024:	xor    ecx,ebp
  40a026:	test   BYTE PTR [edi-0x5b25e060],dl
  40a02c:	neg    ah
  40a02e:	icebp  
  40a02f:	mov    eax,ds:0x672009cb
  40a034:	mov    eax,ds:0x5d9c362e
  40a039:	stc    
  40a03a:	hlt    
  40a03b:	add    ch,BYTE PTR [ebp-0xc636cd0]
  40a041:	dec    ebx
  40a042:	dec    ebx
  40a043:	in     al,0x98
  40a045:	inc    edi
  40a046:	jb     0x40a08e
  40a048:	inc    edx
  40a049:	mov    WORD PTR es:[ecx],ds
  40a04c:	lods   al,BYTE PTR ds:[esi]
  40a04d:	pop    es
  40a04e:	movaps XMMWORD PTR [ebp+0x37],xmm7
  40a052:	into   
  40a053:	jb     0x40a057
  40a055:	stos   BYTE PTR es:[edi],al
  40a056:	int    0xf8
  40a058:	fist   DWORD PTR [eax-0x3fdb25f6]
  40a05e:	mov    ch,BYTE PTR [edx-0x2151a4d1]
  40a064:	sbb    DWORD PTR [eax+0x59e06df5],eax
  40a06a:	push   0xf430645d
  40a06f:	cmp    bl,BYTE PTR [ecx+edx*2]
  40a072:	mov    ds:0xa14ce151,eax
  40a077:	aaa    
  40a078:	push   cs
  40a079:	jl     0x40a043
  40a07b:	mov    al,ds:0xb63c474e
  40a080:	pop    edx
  40a081:	out    0x42,eax
  40a083:	lahf   
  40a084:	jmp    0x50a5c921
  40a089:	cmp    DWORD PTR [eax-0x4a],ebp
  40a08c:	cmp    DWORD PTR [ecx+edx*1+0x33e9cfa6],eax
  40a093:	int    0x4c
  40a095:	test   eax,0xefdce1b9
  40a09a:	or     DWORD PTR [edi-0x49208456],0x2f
  40a0a1:	xchg   edi,eax
  40a0a2:	jl     0x40a0ce
  40a0a4:	mov    WORD PTR [ebx+0x52b7078a],?
  40a0aa:	test   eax,0x4f5f2d2e
  40a0af:	dec    edi
  40a0b0:	sbb    DWORD PTR [esi],ebx
  40a0b2:	push   cs
  40a0b3:	enter  0xfcb9,0x76
  40a0b7:	dec    ebp
  40a0b8:	cmp    DWORD PTR [edx-0x24],ecx
  40a0bb:	shl    DWORD PTR [edx-0x6],1
  40a0be:	je     0x40a124
  40a0c0:	int3   
  40a0c1:	adc    ebp,edi
  40a0c3:	sbb    DWORD PTR [eax+0x6bae8773],edi
  40a0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ca:	pop    esi
  40a0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0cc:	retf   0x242e
  40a0cf:	in     eax,0xe5
  40a0d1:	push   0xffffffe8
  40a0d3:	xor    eax,0xb70223a3
  40a0d8:	cdq    
  40a0d9:	or     al,0xbc
  40a0db:	dec    ebp
  40a0dc:	mov    ebp,0xfb8d214b
  40a0e1:	dec    eax
  40a0e2:	out    dx,al
  40a0e3:	ds pop esi
  40a0e5:	dec    edx
  40a0e6:	mov    edx,0xe2935280
  40a0eb:	aaa    
  40a0ec:	dec    edi
  40a0ed:	lods   eax,DWORD PTR ds:[esi]
  40a0ee:	and    eax,0x41f94275
  40a0f3:	inc    esp
  40a0f4:	popa   
  40a0f5:	ins    DWORD PTR es:[edi],dx
  40a0f6:	or     eax,0x7f872d26
  40a0fb:	shl    DWORD PTR [edi-0x51ef5a80],cl
  40a101:	or     al,0x9d
  40a103:	dec    ecx
  40a104:	fnstsw WORD PTR [eax]
  40a106:	or     al,0x43
  40a108:	cld    
  40a109:	xor    DWORD PTR [esi-0x43],eax
  40a10c:	ds scas al,BYTE PTR es:[edi]
  40a10e:	shl    BYTE PTR ds:0x1e38c9f9,1
  40a114:	fwait
  40a115:	mov    ebx,ss
  40a117:	cdq    
  40a118:	ss push cs
  40a11a:	into   
  40a11b:	sahf   
  40a11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a11d:	aas    
  40a11e:	sub    BYTE PTR [edi],cl
  40a120:	pushf  
  40a121:	xor    BYTE PTR [edi+0x3],bh
  40a124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a125:	std    
  40a126:	scas   al,BYTE PTR es:[edi]
  40a127:	sub    eax,DWORD PTR [ebp-0x3151a538]
  40a12d:	xor    DWORD PTR [eax-0x17],0xa964e7ff
  40a134:	and    dl,bl
  40a136:	popf   
  40a137:	fs jno 0x40a124
  40a13a:	xchg   ebx,eax
  40a13b:	pop    ebp
  40a13c:	fsubr  st,st(1)
  40a13e:	xor    DWORD PTR [esi+0x7dbb6590],ecx
  40a144:	into   
  40a145:	leave  
  40a146:	cmp    bl,BYTE PTR [eax-0x5709da2c]
  40a14c:	ins    BYTE PTR es:[edi],dx
  40a14d:	lock (bad) 
  40a14f:	and    DWORD PTR [ebp-0x58c6de23],edx
  40a155:	and    eax,0x169dd9ed
  40a15a:	test   DWORD PTR [edi],ebp
  40a15c:	(bad)  
  40a15d:	mov    dh,BYTE PTR [ebx]
  40a15f:	xor    eax,0x9a994910
  40a164:	aaa    
  40a165:	fld    QWORD PTR [ebp+0x48]
  40a168:	pop    ebp
  40a169:	or     DWORD PTR [edi-0x3e],0x6e
  40a16d:	shl    BYTE PTR [ebx+0x7c],0x7f
  40a171:	(bad)  
  40a172:	retf   
  40a173:	clc    
  40a174:	mov    dl,0xd3
  40a176:	xor    al,0xf7
  40a178:	inc    ebp
  40a179:	arpl   WORD PTR [edi-0x77ff4eea],bp
  40a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a180:	cmp    BYTE PTR [esp+eax*2+0x4f],ch
  40a184:	lahf   
  40a185:	retf   0x50fc
  40a188:	dec    edi
  40a189:	test   al,0x5
  40a18b:	or     DWORD PTR [ebx-0x5a],eax
  40a18e:	mov    esi,0x27b7cc7b
  40a193:	(bad)
  40a196:	mov    edi,0xff39cd34
  40a19b:	into   
  40a19c:	ins    BYTE PTR es:[edi],dx
  40a19d:	sub    dh,bl
  40a19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a0:	or     al,0x7a
  40a1a2:	push   ds
  40a1a3:	loopne 0x40a204
  40a1a5:	mov    ebx,0x1b915e62
  40a1aa:	pop    ecx
  40a1ab:	and    BYTE PTR [ebp-0x10],ah
  40a1ae:	pusha  
  40a1af:	mov    ecx,0xe5215418
  40a1b4:	cli    
  40a1b5:	ins    BYTE PTR es:[edi],dx
  40a1b6:	inc    esp
  40a1b7:	mov    dh,0xbc
  40a1b9:	lea    edx,[eax]
  40a1bb:	and    al,0x98
  40a1bd:	jnp    0x40a1d6
  40a1bf:	mov    ch,0x37
  40a1c1:	push   esi
  40a1c2:	pop    ss
  40a1c3:	mov    dh,0x1
  40a1c5:	out    0xea,eax
  40a1c7:	mov    ebx,0x6c1f6c53
  40a1cc:	mov    ds:0x14a9602c,al
  40a1d1:	xor    BYTE PTR [edi+edi*8-0x3d],cl
  40a1d5:	data16 sbb BYTE PTR [ebp+0x0],ah
  40a1d9:	fxch   st(7)
  40a1db:	gs icebp 
  40a1dd:	aad    0xaa
  40a1df:	jo     0x40a1a5
  40a1e1:	push   ss
  40a1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e3:	xchg   ebp,eax
  40a1e4:	cmp    al,0x5d
  40a1e6:	out    dx,eax
  40a1e7:	xor    al,0xbd
  40a1e9:	in     al,0x87
  40a1eb:	clc    
  40a1ec:	aad    0x6
  40a1ee:	out    0xc7,al
  40a1f0:	mul    DWORD PTR [eax-0x4a]
  40a1f3:	fild   QWORD PTR [edi+0x1de73ef4]
  40a1f9:	sub    BYTE PTR [ebx-0x4d7d64],bh
  40a1ff:	sti    
  40a200:	sahf   
  40a201:	mov    DWORD PTR [edx],edi
  40a203:	cmp    eax,0x49a54e87
  40a208:	lods   eax,DWORD PTR ds:[esi]
  40a209:	dec    eax
  40a20a:	xlat   BYTE PTR ds:[ebx]
  40a20b:	aad    0x6a
  40a20d:	pop    ebx
  40a20e:	je     0x40a260
  40a210:	test   DWORD PTR ds:0xaf985fd8,0xe71bf054
  40a21a:	leave  
  40a21b:	not    DWORD PTR [edi+eiz*1-0x2c]
  40a21f:	loop   0x40a24e
  40a221:	pop    eax
  40a222:	mov    BYTE PTR [ebx-0x36],bh
  40a225:	ficom  WORD PTR [ecx-0x32e2c1f]
  40a22b:	in     eax,dx
  40a22c:	pop    ss
  40a22d:	mov    ds:0x58004bc0,al
  40a232:	jnp    0x40a26c
  40a234:	in     eax,0xd4
  40a236:	cli    
  40a237:	fild   QWORD PTR [ebp+0xbace46b]
  40a23d:	jno    0x40a20d
  40a23f:	ins    BYTE PTR es:[edi],dx
  40a240:	or     al,0x75
  40a242:	inc    edx
  40a243:	jae    0x40a23d
  40a245:	jg     0x40a2bb
  40a247:	push   ds
  40a248:	fnstcw WORD PTR [ebp-0xc]
  40a24b:	xor    DWORD PTR [ebx],esi
  40a24d:	sub    DWORD PTR [ebx-0xa],ebp
  40a250:	cmp    eax,0x7f4380e6
  40a255:	push   0x57
  40a257:	jmp    0x64dbf1e7
  40a25c:	ja     0x40a22c
  40a25e:	fsubr  DWORD PTR ds:0x8904f84
  40a264:	call   0x3b46fca1
  40a269:	test   DWORD PTR [edx-0x62],ebp
  40a26c:	lods   al,BYTE PTR ds:[esi]
  40a26d:	xchg   BYTE PTR cs:[ecx-0x80],bh
  40a271:	scas   al,BYTE PTR es:[edi]
  40a272:	inc    ebx
  40a273:	push   edi
  40a274:	and    DWORD PTR gs:[ecx+0x169f5f5],ecx
  40a27b:	pop    ds
  40a27c:	data16 (bad) 
  40a27e:	mov    DWORD PTR [esi-0x5e],eax
  40a281:	scas   eax,DWORD PTR es:[edi]
  40a282:	aaa    
  40a283:	call   0xeb45:0x1c7d261e
  40a28a:	xor    al,0xe1
  40a28c:	das    
  40a28d:	cmp    al,0xbd
  40a28f:	xor    BYTE PTR [esi-0x35],bl
  40a292:	mov    edx,0x65d9312c
  40a297:	push   es
  40a298:	cmp    al,0xb1
  40a29a:	mov    eax,0x3b74d25d
  40a29f:	retf   
  40a2a0:	sub    edi,DWORD PTR gs:0x6c50964c
  40a2a7:	mov    ds:0xe7cc9fb1,eax
  40a2ac:	mov    WORD PTR [eax+0x39f67a0a],es
  40a2b2:	shl    DWORD PTR [ecx],cl
  40a2b4:	stos   DWORD PTR es:[edi],eax
  40a2b5:	cli    
  40a2b6:	outs   dx,DWORD PTR ds:[esi]
  40a2b7:	call   DWORD PTR [ebx+ecx*2+0x10efd3b4]
  40a2be:	mov    edi,0x570a73d
  40a2c3:	fdivr  QWORD PTR [esi+edx*2-0x7617e0ba]
  40a2ca:	enter  0x2f0c,0x40
  40a2ce:	and    al,0xa9
  40a2d0:	fst    st(3)
  40a2d2:	jae    0x40a31d
  40a2d4:	inc    ebx
  40a2d5:	add    al,0xed
  40a2d7:	lods   al,BYTE PTR ds:[esi]
  40a2d8:	dec    eax
  40a2d9:	mov    dh,0x41
  40a2db:	xlat   BYTE PTR ds:[ebx]
  40a2dc:	adc    eax,0xaa3978c9
  40a2e1:	cwde   
  40a2e2:	mov    ecx,DWORD PTR [ecx-0x1c]
  40a2e5:	shr    BYTE PTR [ebx],1
  40a2e7:	sub    edi,DWORD PTR [ebp-0x4d69ccf7]
  40a2ed:	(bad)  
  40a2ee:	jp     0x40a2c4
  40a2f0:	fild   DWORD PTR ds:[edi+ebx*8]
  40a2f4:	out    0x95,al
  40a2f6:	dec    ecx
  40a2f7:	adc    esi,DWORD PTR [ecx]
  40a2f9:	daa    
  40a2fa:	into   
  40a2fb:	xor    BYTE PTR [ebp+eiz*1-0x5640e718],bh
  40a302:	mov    cs,WORD PTR [esi]
  40a304:	(bad)  
  40a305:	jae    0x40a369
  40a307:	div    BYTE PTR [eax+0x20]
  40a30a:	sub    dl,dl
  40a30c:	and    ebx,DWORD PTR [esi-0x54]
  40a30f:	in     al,0xd1
  40a311:	loop   0x40a32c
  40a313:	or     eax,0xeb7bb193
  40a318:	leave  
  40a319:	aam    0xa2
  40a31b:	jns    0x40a2ca
  40a31d:	mov    ds:0xcd212c0,al
  40a322:	aam    0x75
  40a324:	sub    cl,al
  40a326:	xor    esi,DWORD PTR [esi+0x13]
  40a329:	inc    esp
  40a32a:	dec    edi
  40a32b:	test   eax,0xa5cd8061
  40a330:	jb     0x40a356
  40a332:	mov    eax,edi
  40a334:	xchg   edx,eax
  40a335:	pop    es
  40a336:	push   esp
  40a337:	mov    BYTE PTR [esi-0x46],bh
  40a33a:	lock dec ebp
  40a33c:	fdivr  DWORD PTR ds:0x684db03d
  40a342:	mov    cl,BYTE PTR [eax-0x21d5f863]
  40a348:	popa   
  40a349:	adc    cl,BYTE PTR [edi]
  40a34b:	jp     0x40a300
  40a34d:	addr16 loopne 0x40a321
  40a350:	aad    0x8e
  40a352:	xor    eax,esi
  40a354:	mov    bh,0x4a
  40a356:	imul   ebx,DWORD PTR [edi],0x3193e77d
  40a35c:	push   eax
  40a35d:	test   DWORD PTR [edx+0x75e29769],0x184ecb55
  40a367:	cmc    
  40a368:	mov    ebp,0x889c139b
  40a36d:	xor    DWORD PTR [edi-0x69],edx
  40a370:	hlt    
  40a371:	imul   ch
  40a373:	out    dx,al
  40a374:	in     al,dx
  40a375:	push   es
  40a376:	lea    ebx,[ecx]
  40a378:	loop   0x40a3be
  40a37a:	(bad)  
  40a37b:	and    esi,ecx
  40a37d:	cmp    al,bl
  40a37f:	in     eax,0xb5
  40a381:	lahf   
  40a382:	dec    eax
  40a383:	sbb    al,0xaf
  40a385:	xor    ecx,ebx
  40a387:	(bad)  
  40a388:	fucom  st(3)
  40a38a:	(bad)  
  40a38b:	push   esi
  40a38c:	(bad)  
  40a38e:	adc    al,BYTE PTR [esi]
  40a390:	cmp    BYTE PTR [ecx+0x7a],bh
  40a393:	xchg   ecx,esi
  40a395:	push   ds
  40a396:	or     BYTE PTR [esi],dh
  40a398:	shl    DWORD PTR [edx-0x48],0x54
  40a39c:	outs   dx,DWORD PTR ds:[esi]
  40a39d:	and    eax,0x2b2cf3c1
  40a3a2:	push   ebp
  40a3a3:	popa   
  40a3a4:	push   edx
  40a3a5:	pop    ebp
  40a3a6:	jp     0x40a339
  40a3a8:	out    0x8a,eax
  40a3aa:	mov    edi,0xbe77f0fb
  40a3af:	lods   al,BYTE PTR ds:[esi]
  40a3b0:	cmp    ecx,ecx
  40a3b2:	stos   DWORD PTR es:[edi],eax
  40a3b3:	ja     0x40a37d
  40a3b5:	rdpmc  
  40a3b7:	xlat   BYTE PTR ds:[ebx]
  40a3b8:	dec    esi
  40a3b9:	xchg   ebx,eax
  40a3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3bb:	mov    ds:0xc866d405,al
  40a3c0:	cmp    eax,0x4bf31a80
  40a3c5:	fild   DWORD PTR [ecx-0x7177d427]
  40a3cb:	(bad)  [ebx+edx*2-0x31]
  40a3cf:	or     eax,0xb1a8f41b
  40a3d4:	pop    ebp
  40a3d5:	rcr    BYTE PTR [edi],cl
  40a3d7:	int    0x56
  40a3d9:	int3   
  40a3da:	sti    
  40a3db:	dec    ebx
  40a3dc:	dec    ebx
  40a3dd:	ret    
  40a3de:	dec    ecx
  40a3df:	jg     0x40a3d7
  40a3e1:	adc    DWORD PTR [ebp-0x2498346a],eax
  40a3e7:	arpl   WORD PTR [edi+ecx*2+0x44bcd29a],di
  40a3ee:	push   0x730a5b77
  40a3f3:	cmp    dh,BYTE PTR [eax+0x46]
  40a3f6:	mov    ah,0x94
  40a3f8:	or     bh,bl
  40a3fa:	sbb    al,0x4f
  40a3fc:	jno    0x40a3a6
  40a3fe:	cmp    al,0x7e
  40a400:	lock jae 0x40a3f1
  40a403:	cdq    
  40a404:	popf   
  40a405:	lods   eax,DWORD PTR ds:[esi]
  40a406:	test   BYTE PTR [esi+0x32f0bc05],cl
  40a40c:	pop    ss
  40a40d:	fsubr  QWORD PTR [edx-0x5672544e]
  40a413:	mov    bl,0x32
  40a415:	ds in  al,0x18
  40a418:	call   0x17cf684b
  40a41d:	fs ret 
  40a41f:	in     al,0x9a
  40a421:	pop    ds
  40a422:	ficomp WORD PTR [ebx+0x54]
  40a425:	call   0xbe1afc4d
  40a42a:	and    BYTE PTR [edi+0x2f],bl
  40a42d:	into   
  40a42e:	loope  0x40a3c3
  40a430:	and    dl,BYTE PTR [ebx]
  40a432:	je     0x40a44f
  40a434:	in     eax,0x53
  40a436:	scas   al,BYTE PTR es:[edi]
  40a437:	add    al,BYTE PTR [edi+0x13]
  40a43a:	adc    BYTE PTR [edx],0x34
  40a43d:	jo     0x40a465
  40a43f:	xchg   ebp,eax
  40a440:	(bad)  
  40a441:	and    eax,0x2d5b40a3
  40a446:	in     al,dx
  40a447:	mov    eax,ebx
  40a449:	fidiv  DWORD PTR [edx]
  40a44b:	lds    ebx,FWORD PTR [esi-0x39]
  40a44e:	stc    
  40a44f:	xchg   BYTE PTR [ebp-0x59],ah
  40a452:	push   esi
  40a453:	cld    
  40a454:	mov    BYTE PTR [edx-0x3288f0ff],al
  40a45a:	cmp    al,ah
  40a45c:	sbb    eax,0x73333c5e
  40a461:	adc    eax,0x38e2d2a3
  40a466:	mov    ecx,0x648fe70c
  40a46b:	inc    ebx
  40a46c:	dec    esp
  40a46d:	mov    WORD PTR [edx+ebx*4+0x432c104b],?
  40a474:	and    al,0x51
  40a476:	jl     0x40a46a
  40a478:	jns    0x40a42d
  40a47a:	cmp    al,0x28
  40a47c:	lods   eax,DWORD PTR ds:[esi]
  40a47d:	cmp    eax,0x8508601c
  40a482:	jo     0x40a502
  40a484:	imul   edi,DWORD PTR [edi],0x20f39a14
  40a48a:	xchg   ebx,eax
  40a48b:	out    dx,al
  40a48c:	(bad)  
  40a48d:	push   ebp
  40a48e:	or     esp,DWORD PTR [ebp+0x4daf492d]
  40a494:	mov    al,ds:0x47d81ef3
  40a499:	sub    DWORD PTR [ebx+edi*8],edx
  40a49c:	lods   al,BYTE PTR ds:[esi]
  40a49d:	hlt    
  40a49e:	add    eax,0x9cbea683
  40a4a3:	cdq    
  40a4a4:	aas    
  40a4a5:	adc    ebp,DWORD PTR [edx]
  40a4a7:	inc    ebx
  40a4a8:	dec    ebx
  40a4a9:	test   BYTE PTR [ecx-0x7e],al
  40a4ac:	fadd   DWORD PTR [edi-0x3d059693]
  40a4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b3:	or     edx,DWORD PTR [edx]
  40a4b5:	repz xor eax,0x2074024f
  40a4bb:	add    eax,DWORD PTR [ebx+0x4679b86a]
  40a4c1:	imul   esp,edi,0x51
  40a4c4:	cmp    eax,0x4a19daf0
  40a4c9:	dec    ebx
  40a4ca:	mov    al,ds:0x24b3341d
  40a4cf:	clc    
  40a4d0:	test   al,0x5e
  40a4d2:	repz pop edi
  40a4d4:	and    bh,BYTE PTR [esi]
  40a4d6:	pop    ebx
  40a4d7:	cs mov esp,0x2b9c6403
  40a4dd:	(bad)  
  40a4de:	xlat   BYTE PTR ds:[ebx]
  40a4df:	imul   DWORD PTR [edi-0x523a9fff]
  40a4e5:	or     al,0x2d
  40a4e7:	sub    BYTE PTR [edi+eiz*8+0x7e],ch
  40a4eb:	add    al,0x14
  40a4ed:	xor    eax,0xcbd6a95c
  40a4f2:	xchg   ecx,eax
  40a4f3:	jecxz  0x40a529
  40a4f5:	adc    ch,BYTE PTR [edi-0x75]
  40a4f8:	popf   
  40a4f9:	sub    DWORD PTR [edi],esp
  40a4fb:	fild   DWORD PTR [eax+0x2f]
  40a4fe:	push   edi
  40a4ff:	std    
  40a500:	dec    ebx
  40a501:	xchg   esp,eax
  40a502:	idiv   al
  40a504:	cmp    BYTE PTR [esi-0x18612f78],dh
  40a50a:	jmp    0x5ac0dcfc
  40a50f:	fstp   DWORD PTR [edi]
  40a511:	mov    dh,BYTE PTR [ecx-0x6007bc2b]
  40a517:	test   DWORD PTR [ebx],0x9a6e6d49
  40a51d:	pop    esp
  40a51e:	xor    ch,ch
  40a520:	pop    ss
  40a521:	or     ebp,DWORD PTR [ebx-0x2e53ffc2]
  40a527:	das    
  40a528:	xor    dl,BYTE PTR [ecx+0x5976fc4a]
  40a52e:	leave  
  40a52f:	add    eax,0xe5c67b30
  40a534:	or     DWORD PTR [eax+esi*1],edi
  40a537:	add    ecx,DWORD PTR [ebp-0x3e147218]
  40a53d:	and    DWORD PTR [edx-0x255c3c95],ebx
  40a543:	out    0xc,al
  40a545:	stos   DWORD PTR es:[edi],eax
  40a546:	(bad)  
  40a547:	sbb    DWORD PTR [esi-0x3a23019a],ebp
  40a54d:	jle    0x40a563
  40a54f:	dec    edx
  40a550:	sub    eax,0x2056c25b
  40a555:	add    al,0x5
  40a557:	imul   edx,DWORD PTR [eax],0xdc70401
  40a55d:	in     al,0x19
  40a55f:	add    edx,DWORD PTR [edx]
  40a561:	cmp    al,0x3a
  40a563:	mov    WORD PTR [edx],fs
  40a565:	lods   al,BYTE PTR ds:[esi]
  40a566:	and    BYTE PTR [ebp*4-0x2ee3b75c],dh
  40a56d:	mov    ds:0xc29c0496,al
  40a572:	cmp    BYTE PTR [edx-0x67],dl
  40a575:	jmp    0x40a5b6
  40a577:	cmp    edi,edi
  40a579:	scas   eax,DWORD PTR es:[edi]
  40a57a:	gs jnp 0x40a5af
  40a57d:	retf   
  40a57e:	fwait
  40a57f:	xlat   BYTE PTR ds:[ebx]
  40a580:	sbb    esi,esp
  40a582:	ss fabs 
  40a585:	std    
  40a586:	pop    ebp
  40a587:	dec    edx
  40a588:	push   0x28
  40a58a:	fucomi st,st(2)
  40a58c:	push   ecx
  40a58d:	add    eax,DWORD PTR [ebp+0x16]
  40a590:	mov    ebx,0x70d2e0bb
  40a595:	jns    0x40a588
  40a597:	ror    BYTE PTR [ecx+0x26508b3],cl
  40a59d:	push   ss
  40a59e:	aas    
  40a59f:	xchg   edi,eax
  40a5a0:	add    ebx,DWORD PTR [esi-0x5b89e1a1]
  40a5a6:	in     eax,0x59
  40a5a8:	(bad)  
  40a5a9:	or     al,cl
  40a5ab:	jb     0x40a60e
  40a5ad:	shl    BYTE PTR [ebp+edi*8+0x4d],0x19
  40a5b2:	xor    al,ch
  40a5b4:	cld    
  40a5b5:	mov    BYTE PTR [ecx+0x71],0xdd
  40a5b9:	mov    dl,0x1c
  40a5bb:	ins    DWORD PTR es:[edi],dx
  40a5bc:	lds    edx,FWORD PTR [ebx+ecx*4-0x3199e9d9]
  40a5c3:	inc    ebp
  40a5c4:	dec    edx
  40a5c5:	mov    al,0xe8
  40a5c7:	je     0x40a55b
  40a5c9:	imul   esi,DWORD PTR [eax-0x4ed5e29e],0x62346a23
  40a5d3:	jg     0x40a5f7
  40a5d5:	test   al,dl
  40a5d7:	ds loope 0x40a60c
  40a5da:	loope  0x40a5b7
  40a5dc:	sub    eax,0x7f791b20
  40a5e1:	sbb    al,0xe0
  40a5e3:	inc    ebp
  40a5e4:	dec    esi
  40a5e5:	js     0x40a663
  40a5e7:	jne    0x40a62f
  40a5e9:	mov    al,ds:0xefc61b40
  40a5ee:	mov    fs,WORD PTR [ebx]
  40a5f0:	lock popf 
  40a5f2:	(bad)  
  40a5f3:	iret   
  40a5f4:	imul   ebx,DWORD PTR [ebx],0x4
  40a5f7:	hlt    
  40a5f8:	xchg   ecx,eax
  40a5f9:	inc    esp
  40a5fa:	out    0x54,al
  40a5fc:	inc    esp
  40a5fd:	in     al,0x59
  40a5ff:	add    BYTE PTR [ecx],dh
  40a601:	out    dx,eax
  40a602:	xor    DWORD PTR [eax],0x1cf2f21c
  40a608:	xor    eax,0x635697f4
  40a60d:	add    esp,DWORD PTR [edx-0x25]
  40a610:	mov    eax,ds:0x1ca61275
  40a615:	call   0x9b47:0xc1cecadc
  40a61c:	out    0x25,al
  40a61e:	clc    
  40a61f:	and    ebp,esp
  40a621:	mov    esi,0x293ca509
  40a626:	cmp    DWORD PTR [eax],ebp
  40a628:	inc    edx
  40a629:	add    DWORD PTR [eax],edi
  40a62b:	pop    esp
  40a62c:	gs stc 
  40a62e:	add    al,0x74
  40a630:	inc    ecx
  40a631:	push   0x25
  40a633:	adc    DWORD PTR [edi-0x6c],ecx
  40a636:	jnp    0x40a606
  40a638:	or     DWORD PTR [edx],edi
  40a63a:	inc    edi
  40a63b:	ret    
  40a63c:	push   ebx
  40a63d:	loop   0x40a676
  40a63f:	fldz   
  40a641:	ins    BYTE PTR es:[edi],dx
  40a642:	xchg   edi,eax
  40a643:	loop   0x40a67c
  40a645:	jo     0x40a6b2
  40a647:	aam    0xf0
  40a649:	mov    dh,0x13
  40a64b:	stos   DWORD PTR es:[edi],eax
  40a64c:	ja     0x40a624
  40a64e:	pop    ebp
  40a64f:	push   edi
  40a650:	loopne 0x40a62e
  40a652:	push   0xaf92e29d
  40a657:	mov    cl,0xaa
  40a659:	les    edx,FWORD PTR [ebx]
  40a65b:	js     0x40a65f
  40a65d:	nop
  40a65e:	cmp    al,0x68
  40a660:	cwde   
  40a661:	mov    bl,0x70
  40a663:	out    dx,al
  40a664:	xchg   esp,eax
  40a665:	add    DWORD PTR [ebx-0x5cc5e086],0x80b71559
  40a66f:	adc    al,BYTE PTR [eax]
  40a671:	inc    edx
  40a672:	mov    esp,0xd186c8a8
  40a677:	xor    BYTE PTR [ecx],ah
  40a679:	or     BYTE PTR [ebp+0x51],ah
  40a67c:	popa   
  40a67d:	dec    edi
  40a67e:	mov    edx,DWORD PTR ss:[ebp-0x10]
  40a682:	mov    eax,DWORD PTR [ebp-0x14]
  40a685:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a688:	sub    eax,edx
  40a68a:	xor    ebx,esi
  40a68c:	xor    edx,edx
  40a68e:	add    ebx,edi
  40a690:	div    ebx
  40a692:	mov    DWORD PTR [ebp-0x8],eax
  40a695:	mov    eax,DWORD PTR [ebp-0x44]
  40a698:	mov    edx,DWORD PTR [ebp-0x8]
  40a69b:	xor    eax,esi
  40a69d:	add    eax,edi
  40a69f:	cmp    edx,eax
  40a6a1:	jbe    0x40a6b1
  40a6a7:	mov    eax,DWORD PTR [ebp-0x44]
  40a6aa:	xor    eax,esi
  40a6ac:	add    eax,edi
  40a6ae:	mov    DWORD PTR [ebp-0x8],eax
  40a6b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6b4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6b7:	xor    eax,esi
  40a6b9:	add    eax,edi
  40a6bb:	imul   eax,edx
  40a6be:	mov    DWORD PTR [ebp-0x8],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x38]
  40a6c4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6c7:	jmp    0x40ca23
  40a6cc:	pop    esi
  40a6cd:	inc    esi
  40a6ce:	mov    bl,BYTE PTR [edx+eax*4]
  40a6d1:	mov    al,al
  40a6d3:	clc    
  40a6d4:	jge    0x40a746
  40a6d6:	sub    edx,DWORD PTR [ebp+0x57a74e37]
  40a6dc:	xchg   dh,dh
  40a6de:	jp     0x40a75a
  40a6e0:	cmp    ebx,DWORD PTR [edi+0x7a]
  40a6e3:	jp     0x40a6ad
  40a6e5:	(bad)  
  40a6e6:	and    eax,0x28b107d8
  40a6eb:	xchg   edi,eax
  40a6ec:	dec    esi
  40a6ed:	push   ebp
  40a6ee:	mov    dl,0x65
  40a6f0:	jp     0x40a6ee
  40a6f2:	je     0x40a6f0
  40a6f4:	jmp    0x40a728
  40a6f6:	cmc    
  40a6f7:	mov    esp,0x2d7bcf45
  40a6fc:	xor    eax,0x29611ac7
  40a701:	xor    al,0x97
  40a703:	(bad)  
  40a704:	push   edi
  40a705:	mov    ebp,0xd164ea8e
  40a70a:	sub    BYTE PTR [ebx],bl
  40a70c:	inc    ebp
  40a70d:	mov    esi,0x1184a368
  40a712:	or     BYTE PTR [ebx-0x4b],bh
  40a715:	cli    
  40a716:	sbb    al,0x26
  40a718:	fcom   QWORD PTR [ebx]
  40a71a:	xor    bh,BYTE PTR [ebx-0x7b]
  40a71d:	mov    edx,0xa6ac2299
  40a722:	ffree  st(4)
  40a724:	sub    BYTE PTR [eax-0xb7b3021],bl
  40a72a:	push   ds
  40a72b:	inc    ecx
  40a72c:	popf   
  40a72d:	mov    DWORD PTR [edi],eax
  40a72f:	jb     0x40a70f
  40a731:	stc    
  40a732:	jae    0x40a796
  40a734:	push   0x67f5ee92
  40a739:	stos   BYTE PTR es:[edi],al
  40a73a:	mov    dl,0x9c
  40a73c:	push   eax
  40a73d:	les    edi,FWORD PTR [edx-0x47a3abe2]
  40a743:	repnz arpl WORD PTR [edx-0xeecf8fa],bp
  40a74a:	cli    
  40a74b:	(bad)  
  40a74c:	imul   ecx,DWORD PTR [esi+esi*1+0x25601ba7],0x69
  40a754:	sar    bh,1
  40a756:	addr16 repnz loope 0x40a734
  40a75a:	inc    edi
  40a75b:	mov    edi,0x9ccdfe8a
  40a760:	and    ecx,DWORD PTR [ecx+0x58]
  40a763:	cmp    DWORD PTR [ebp-0x3eec9e2f],0x1deac859
  40a76d:	iret   
  40a76e:	fist   WORD PTR [edi+esi*2-0x4d937c0c]
  40a775:	jmp    0xa78da88f
  40a77a:	(bad)  
  40a77c:	jb     0x40a799
  40a77e:	sub    DWORD PTR [edx-0x7f],esp
  40a781:	aaa    
  40a782:	pop    ecx
  40a783:	add    edx,ebx
  40a785:	mov    dl,0x18
  40a787:	adc    BYTE PTR [esi],cl
  40a789:	fdivr  DWORD PTR fs:[ebp+ecx*2+0x37]
  40a78e:	scas   al,BYTE PTR es:[edi]
  40a78f:	adc    eax,0x4926e1d5
  40a794:	or     dh,BYTE PTR [ecx*2-0x24779c7f]
  40a79b:	mov    dh,0x74
  40a79d:	aaa    
  40a79e:	xor    BYTE PTR [eax],0xd8
  40a7a1:	and    edx,edx
  40a7a3:	cmp    ah,BYTE PTR [eax+0x37086556]
  40a7a9:	and    BYTE PTR [ebx+0x555cbce9],al
  40a7af:	cwde   
  40a7b0:	jns    0x40a77e
  40a7b2:	adc    bh,BYTE PTR [esi+0x43]
  40a7b5:	mov    ch,0xc2
  40a7b7:	mov    eax,ds:0x567cc891
  40a7bc:	inc    eax
  40a7bd:	int    0x24
  40a7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c0:	popa   
  40a7c1:	pop    es
  40a7c2:	push   0x28
  40a7c4:	ror    BYTE PTR [eax],0xc0
  40a7c7:	pop    es
  40a7c8:	mov    eax,0xe2f74a1
  40a7cd:	ret    0x8643
  40a7d0:	cmc    
  40a7d1:	lods   eax,DWORD PTR ds:[esi]
  40a7d2:	arpl   bx,di
  40a7d4:	jl     0x40a800
  40a7d6:	add    DWORD PTR [edi],esi
  40a7d8:	mov    WORD PTR [edx-0x29],cs
  40a7db:	je     0x40a7d5
  40a7dd:	dec    eax
  40a7de:	(bad)  
  40a7df:	dec    esp
  40a7e0:	or     eax,0x38b07212
  40a7e5:	pop    edi
  40a7e6:	sbb    BYTE PTR [edi-0x4961c43d],bh
  40a7ec:	inc    edi
  40a7ed:	add    al,0x79
  40a7ef:	ret    
  40a7f0:	mov    BYTE PTR [esi],ah
  40a7f2:	pop    ecx
  40a7f3:	xchg   ecx,eax
  40a7f4:	sti    
  40a7f5:	jl     0x40a7c6
  40a7f7:	or     eax,0xffec11da
  40a7fc:	push   cs
  40a7fd:	mov    dl,0xa8
  40a7ff:	inc    edx
  40a800:	in     al,dx
  40a801:	sbb    DWORD PTR [ebx+ebx*1-0x59],0x49
  40a806:	cmp    al,dl
  40a808:	clc    
  40a809:	out    dx,al
  40a80a:	repnz sub eax,0xcc914014
  40a810:	fild   QWORD PTR ds:0x2e4a4572
  40a816:	dec    edi
  40a817:	pushf  
  40a818:	add    ebp,DWORD PTR [ecx+0x588e06a6]
  40a81e:	push   cs
  40a81f:	xor    DWORD PTR ss:[edi],esi
  40a822:	fs mov ecx,0x44c295d2
  40a828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a829:	popa   
  40a82a:	in     eax,0xe9
  40a82c:	push   0x315a63f2
  40a831:	mov    dh,al
  40a833:	push   edi
  40a834:	add    DWORD PTR [edi+0x55159584],edx
  40a83a:	(bad)  
  40a83b:	sub    ebx,DWORD PTR [ebx]
  40a83d:	daa    
  40a83e:	and    al,0x4
  40a840:	sub    al,0xf1
  40a842:	mov    ebp,0xac4ff538
  40a847:	mov    BYTE PTR ds:0x321b33df,ch
  40a84d:	or     eax,0xdd7b203a
  40a852:	out    dx,al
  40a853:	outs   dx,DWORD PTR ds:[esi]
  40a854:	shl    ebp,cl
  40a856:	push   edi
  40a857:	mov    ebx,0x2131d816
  40a85c:	inc    ebx
  40a85d:	add    dh,BYTE PTR [ebp+0x7aa4fd7a]
  40a863:	jp     0x40a874
  40a865:	fldenv [ebp-0x65d329b7]
  40a86b:	jnp    0x40a8dd
  40a86d:	push   ecx
  40a86e:	call   0x46dbade1
  40a873:	pop    esp
  40a874:	je     0x40a88a
  40a876:	sbb    al,0x53
  40a878:	dec    ebp
  40a879:	adc    ah,bl
  40a87b:	jno    0x40a8ce
  40a87d:	mov    dl,0x27
  40a87f:	and    BYTE PTR [esi+edi*1],al
  40a882:	add    bl,BYTE PTR [ecx-0x32]
  40a885:	scas   eax,DWORD PTR es:[edi]
  40a886:	mov    al,ds:0x112ae912
  40a88b:	in     eax,0x49
  40a88d:	adc    BYTE PTR [eax-0x65672b5],dl
  40a893:	xchg   edi,eax
  40a894:	xchg   ebp,eax
  40a895:	mov    ebp,0xcb7ec914
  40a89a:	bound  esp,QWORD PTR [edi-0x3c1cbc3]
  40a8a0:	lods   al,BYTE PTR ds:[esi]
  40a8a1:	int3   
  40a8a2:	dec    esp
  40a8a3:	lock sub BYTE PTR [ebx+edx*1-0x6f],dh
  40a8a8:	aam    0xc5
  40a8aa:	dec    esp
  40a8ab:	sti    
  40a8ac:	and    DWORD PTR [eax+0x1044c353],0x4
  40a8b3:	xchg   BYTE PTR [edx+ebp*2+0x46],cl
  40a8b7:	cli    
  40a8b8:	(bad)  [ecx+0x78286c1]
  40a8be:	sti    
  40a8bf:	push   ds
  40a8c0:	cmp    cl,BYTE PTR [edx+0x3f]
  40a8c3:	(bad)  
  40a8c4:	sti    
  40a8c5:	xor    al,0xed
  40a8c7:	dec    edi
  40a8c8:	mov    WORD PTR [eiz*2-0x2bb6ae19],ss
  40a8cf:	and    al,0x6a
  40a8d1:	je     0x40a8ba
  40a8d3:	push   cs
  40a8d4:	or     bh,ch
  40a8d6:	pop    ds
  40a8d7:	dec    ebp
  40a8d8:	sbb    DWORD PTR [esi+0x69],ecx
  40a8db:	mov    edi,0x9cb63d42
  40a8e0:	add    DWORD PTR [esi+0x2149f439],eax
  40a8e6:	mov    al,ds:0xaacad43a
  40a8eb:	(bad)  
  40a8ed:	pushf  
  40a8ee:	fidiv  WORD PTR ds:0x98e887f0
  40a8f4:	dec    ecx
  40a8f5:	rcr    DWORD PTR [edi+0x57768c87],0xdc
  40a8fc:	mov    eax,ds:0x3a9d993d
  40a901:	lea    ecx,[eax+0x62]
  40a904:	outs   dx,BYTE PTR ds:[esi]
  40a905:	jge    0x40a933
  40a907:	pop    esp
  40a908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a909:	mov    ebp,0x6b4f4f3b
  40a90e:	ret    
  40a90f:	mov    esi,0xe4c44c91
  40a914:	pushf  
  40a915:	aam    0x78
  40a917:	cmp    BYTE PTR [ebx],bl
  40a919:	adc    ebp,DWORD PTR ds:0x1a2f3f70
  40a91f:	sub    bh,cl
  40a921:	inc    esp
  40a922:	adc    eax,0x752bb372
  40a927:	fsubrp st(1),st
  40a929:	fs dec ecx
  40a92b:	sub    DWORD PTR [ebp+ebp*1+0x21],esi
  40a92f:	data16 aas 
  40a931:	xor    dl,BYTE PTR [edi+0x68238517]
  40a937:	fld    DWORD PTR [eax+0x74]
  40a93a:	sub    BYTE PTR ds:0x1b090879,ch
  40a940:	repnz retf 
  40a942:	pusha  
  40a943:	push   ebx
  40a944:	das    
  40a945:	push   ebp
  40a946:	shl    BYTE PTR [edi+0x2f7ff2ff],cl
  40a94c:	ret    
  40a94d:	cwde   
  40a94e:	out    dx,eax
  40a94f:	pop    ecx
  40a950:	pop    edi
  40a951:	pop    ss
  40a952:	mov    ecx,0xbaec6b02
  40a957:	mov    eax,0xb8d02a29
  40a95c:	push   cs
  40a95d:	mov    esi,0xc22a1410
  40a962:	mov    eax,ds:0x6ce9f3fd
  40a967:	push   edx
  40a968:	je     0x40a9ca
  40a96a:	cmp    DWORD PTR [esi+ebp*4+0x38581916],esp
  40a971:	sbb    al,0x82
  40a973:	cs and ch,ah
  40a976:	mov    eax,0xaeab811
  40a97b:	jno    0x40a915
  40a97d:	ficomp DWORD PTR [ebx+0x49]
  40a980:	dec    ecx
  40a981:	inc    ebp
  40a982:	sbb    al,0x6d
  40a984:	dec    ecx
  40a985:	dec    ebp
  40a986:	fist   WORD PTR [ecx+esi*8+0x2c]
  40a98a:	inc    edx
  40a98b:	test   edi,esi
  40a98d:	or     al,0x3
  40a98f:	in     al,dx
  40a990:	push   cs
  40a991:	cs adc al,0xbf
  40a994:	add    al,0xb2
  40a996:	dec    ecx
  40a997:	dec    ebp
  40a998:	sbb    BYTE PTR [edx+0x34],dl
  40a99b:	mov    cl,0x3e
  40a99d:	xlat   BYTE PTR ds:[ebx]
  40a99e:	xchg   esp,eax
  40a99f:	fist   WORD PTR [eax+0x3e]
  40a9a2:	cmovl  esi,DWORD PTR [ecx+0x1b]
  40a9a6:	retf   
  40a9a7:	pop    ebx
  40a9a8:	fbld   TBYTE PTR [edi-0x2c]
  40a9ab:	mov    cl,0xff
  40a9ad:	dec    ebx
  40a9ae:	inc    edi
  40a9af:	cli    
  40a9b0:	clc    
  40a9b1:	and    edx,DWORD PTR [esi-0x2e]
  40a9b4:	add    ch,BYTE PTR [edi]
  40a9b6:	mov    dh,BYTE PTR [edi]
  40a9b8:	and    eax,0xa5c8d328
  40a9bd:	lods   al,BYTE PTR ds:[esi]
  40a9be:	cmp    DWORD PTR [edi],ebx
  40a9c0:	imul   BYTE PTR [esi]
  40a9c2:	push   esi
  40a9c3:	inc    DWORD PTR [ecx-0x47]
  40a9c6:	out    0x82,al
  40a9c8:	fstp   TBYTE PTR [edi]
  40a9ca:	xor    edx,ecx
  40a9cc:	dec    ebp
  40a9cd:	pushf  
  40a9ce:	jns    0x40aa4e
  40a9d0:	(bad)  
  40a9d1:	jg     0x40a9dd
  40a9d3:	jns    0x40a992
  40a9d5:	cmp    eax,0xfbc63311
  40a9da:	std    
  40a9db:	mov    eax,0xda8521d8
  40a9e0:	adc    ah,bh
  40a9e2:	je     0x40a969
  40a9e4:	je     0x40aa15
  40a9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9e7:	mov    WORD PTR ds:0x26d16ebb,ds
  40a9ed:	ret    0xe741
  40a9f0:	xor    DWORD PTR [edi+0x4d],esp
  40a9f3:	sub    BYTE PTR [edx],al
  40a9f5:	mov    dh,0xb7
  40a9f7:	inc    esi
  40a9f8:	in     al,0xdf
  40a9fa:	xchg   ebp,eax
  40a9fb:	out    dx,al
  40a9fc:	mov    dl,ch
  40a9fe:	and    eax,0x5fb4ebf8
  40aa04:	jge    0x40a9fb
  40aa06:	popa   
  40aa07:	rcl    esp,cl
  40aa09:	cmp    dh,bh
  40aa0b:	sub    al,0xd6
  40aa0d:	sub    DWORD PTR [edx-0x67],esi
  40aa10:	int3   
  40aa11:	cs jno 0x40aa65
  40aa14:	mov    ebp,0xdade2d0f
  40aa19:	sbb    DWORD PTR ds:0x5587798c,0xe9f116e0
  40aa23:	xchg   edi,eax
  40aa24:	not    DWORD PTR [ecx-0x18]
  40aa27:	inc    ebp
  40aa28:	adc    esi,DWORD PTR ss:[ebx]
  40aa2b:	and    esi,0xca007fd8
  40aa31:	lds    edi,FWORD PTR [eax-0x1a]
  40aa34:	or     ah,0x59
  40aa37:	cmp    al,0x1f
  40aa39:	mov    eax,ds:0x793c1f3e
  40aa3e:	adc    al,0xb8
  40aa40:	cld    
  40aa41:	rol    esi,0x65
  40aa44:	hlt    
  40aa45:	adc    bh,BYTE PTR [ecx-0x52]
  40aa48:	xor    al,0x3e
  40aa4a:	dec    ebx
  40aa4b:	cmp    ebp,DWORD PTR [eax]
  40aa4d:	push   ss
  40aa4e:	in     al,dx
  40aa4f:	sbb    ah,BYTE PTR [eax+0x7c]
  40aa52:	mov    bh,0x1a
  40aa54:	push   edx
  40aa55:	rol    BYTE PTR [edx-0x76effd65],1
  40aa5b:	test   eax,0x290ad928
  40aa60:	sub    bl,al
  40aa62:	jle    0x40aa10
  40aa64:	int    0x0
  40aa66:	lds    esi,FWORD PTR [edx-0x6dc05825]
  40aa6c:	bound  ecx,QWORD PTR [eax-0x3df2ad9e]
  40aa72:	ja     0x40aa80
  40aa74:	pop    ss
  40aa75:	push   0xffffff90
  40aa77:	xor    ebx,eax
  40aa79:	sbb    al,0x5e
  40aa7b:	ins    DWORD PTR es:[di],dx
  40aa7d:	mov    WORD PTR [edi],?
  40aa7f:	das    
  40aa80:	adc    edi,ecx
  40aa82:	pop    eax
  40aa83:	ins    DWORD PTR es:[edi],dx
  40aa84:	loop   0x40aa95
  40aa86:	add    al,BYTE PTR [ecx+0x71]
  40aa89:	pop    ds
  40aa8a:	dec    ebp
  40aa8b:	or     BYTE PTR [ebx-0x34],bl
  40aa8e:	arpl   sp,bp
  40aa90:	test   BYTE PTR [ebx],bl
  40aa92:	ds pop ecx
  40aa94:	sbb    eax,DWORD PTR [esi-0x75]
  40aa97:	cmp    cl,al
  40aa99:	in     eax,dx
  40aa9a:	jp     0x40aa70
  40aa9c:	leave  
  40aa9d:	push   edx
  40aa9e:	jmp    0xaf8d9f78
  40aaa3:	es ret 
  40aaa5:	sub    DWORD PTR [ecx],ecx
  40aaa7:	push   0xffffff87
  40aaa9:	cmp    dh,dh
  40aaab:	popa   
  40aaac:	and    WORD PTR [eax],si
  40aaaf:	sbb    dh,BYTE PTR ds:0x48a85f9b
  40aab5:	(bad)  
  40aab7:	inc    esi
  40aab8:	or     al,BYTE PTR [edi-0x9]
  40aabb:	pop    ebp
  40aabc:	in     eax,0x89
  40aabe:	xchg   esi,eax
  40aabf:	mov    esi,0xe7ed25a9
  40aac4:	lea    esi,[bx+di-0xba1]
  40aac9:	neg    DWORD PTR [eax-0x693df596]
  40aacf:	lds    ebx,FWORD PTR [ebx-0x11f57a02]
  40aad5:	xchg   ecx,eax
  40aad6:	sbb    BYTE PTR [edx+0x7d2a6a3e],al
  40aadc:	repz mov ch,0x2c
  40aadf:	mov    ebx,0x1ebc3193
  40aae4:	xlat   BYTE PTR ds:[ebx]
  40aae5:	repnz xor BYTE PTR [ecx],bl
  40aae8:	cmp    DWORD PTR [eax],esp
  40aaea:	lea    ebp,[ecx+eiz*8+0xf]
  40aaee:	std    
  40aaef:	push   ds
  40aaf0:	or     DWORD PTR [eax+eiz*8-0x30],0xffffffab
  40aaf5:	mov    ch,0xe2
  40aaf7:	xor    BYTE PTR [esi],dl
  40aaf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aafa:	cmp    al,0x89
  40aafc:	data16 stos BYTE PTR es:[edi],al
  40aafe:	(bad)  
  40aaff:	push   esi
  40ab00:	or     dh,BYTE PTR [ebp+0x59407392]
  40ab06:	adc    al,0x62
  40ab08:	mov    ch,0x41
  40ab0a:	ins    BYTE PTR es:[edi],dx
  40ab0b:	std    
  40ab0c:	retf   
  40ab0d:	mov    ?,WORD PTR [ecx]
  40ab0f:	cmp    DWORD PTR [esi-0x4ca2c92b],esi
  40ab15:	lock xlat BYTE PTR ds:[ebx]
  40ab17:	xor    ebx,esi
  40ab19:	dec    esi
  40ab1a:	sbb    BYTE PTR [ebp+0x2885e18d],dl
  40ab20:	cld    
  40ab21:	and    al,0xbf
  40ab23:	bnd jmp 0x40ab19
  40ab26:	dec    edx
  40ab27:	adc    BYTE PTR [edx+0x66],bh
  40ab2a:	jo     0x40ab85
  40ab2c:	mov    esi,0x67bcc9b0
  40ab31:	sub    BYTE PTR [ecx-0x7bd02e4c],ch
  40ab37:	dec    esi
  40ab38:	cmp    ah,BYTE PTR [eax-0x49]
  40ab3b:	aaa    
  40ab3c:	out    0x5d,eax
  40ab3e:	ins    DWORD PTR es:[edi],dx
  40ab3f:	popa   
  40ab40:	add    eax,ecx
  40ab42:	push   0xffffffe4
  40ab44:	xlat   BYTE PTR ds:[ebx]
  40ab45:	xchg   esp,eax
  40ab46:	mov    al,BYTE PTR ds:0x8abbe1d2
  40ab4c:	sbb    cl,BYTE PTR [esp+ecx*2-0x5e79a482]
  40ab53:	lds    edx,FWORD PTR [esp+edi*2]
  40ab56:	repnz sbb DWORD PTR [ecx],ebx
  40ab59:	outs   dx,BYTE PTR ds:[esi]
  40ab5a:	or     al,0xb7
  40ab5c:	imul   eax,DWORD PTR [edx+0x16bfa73a],0xa6398a0d
  40ab66:	add    BYTE PTR [ebp+0x6d],dh
  40ab69:	pop    edi
  40ab6a:	aaa    
  40ab6b:	cmp    al,0x42
  40ab6d:	jnp    0x40ab14
  40ab6f:	iret   
  40ab70:	stos   BYTE PTR es:[edi],al
  40ab71:	cld    
  40ab72:	push   ecx
  40ab73:	jno    0x40abe0
  40ab75:	rcr    BYTE PTR [edx-0x7dbc455a],0xbd
  40ab7c:	test   bl,bl
  40ab7e:	add    esi,DWORD PTR [ebx+ebx*4-0x617569d4]
  40ab85:	cmp    DWORD PTR [ecx-0x7b0c14bd],ebp
  40ab8b:	mov    dh,0x3b
  40ab8d:	cmp    DWORD PTR [edx-0x4bd5ed54],eax
  40ab93:	mov    edx,ebp
  40ab95:	sbb    edx,DWORD PTR [edi]
  40ab97:	inc    DWORD PTR [ebx]
  40ab99:	outs   dx,BYTE PTR ds:[esi]
  40ab9a:	pop    edi
  40ab9b:	imul   BYTE PTR [ecx+0x2831a209]
  40aba1:	xchg   DWORD PTR [edi-0xb],ebx
  40aba4:	push   ebx
  40aba5:	scas   eax,DWORD PTR es:[edi]
  40aba6:	cmp    al,0x5a
  40aba8:	mov    ds:0x1d325236,al
  40abad:	jne    0x40abbb
  40abaf:	push   ebp
  40abb0:	jmp    0x8a259222
  40abb5:	outs   dx,BYTE PTR ds:[esi]
  40abb6:	les    edi,FWORD PTR [eax+0x31]
  40abb9:	retf   0xf877
  40abbc:	repz mov ebp,0x1a25245
  40abc2:	es cmc 
  40abc4:	ds into 
  40abc6:	es mov ax,0x2dbc
  40abcb:	or     al,0xb2
  40abcd:	cmp    DWORD PTR [eax-0x24],esi
  40abd0:	jo     0x40abd6
  40abd2:	dec    ebx
  40abd3:	stos   BYTE PTR es:[edi],al
  40abd4:	das    
  40abd5:	sub    ebx,esi
  40abd7:	stc    
  40abd8:	(bad)  
  40abd9:	xchg   ecx,eax
  40abda:	adc    BYTE PTR [ebx+0xa3ab347],cl
  40abe0:	mov    bh,bl
  40abe2:	pop    esp
  40abe3:	call   FWORD PTR [edi-0x1f]
  40abe6:	daa    
  40abe7:	jno    0x40ac57
  40abe9:	repz fild WORD PTR [edi+0x7]
  40abed:	mov    BYTE PTR [ebx+esi*2-0x23e13174],ch
  40abf4:	leave  
  40abf5:	repnz fadd st(0),st
  40abf8:	pop    edx
  40abf9:	jbe    0x40ac05
  40abfb:	pop    ecx
  40abfc:	and    dh,BYTE PTR [ebp+0x31]
  40abff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac00:	cli    
  40ac01:	sub    al,0x7f
  40ac03:	inc    esp
  40ac04:	popf   
  40ac05:	loope  0x40ab9c
  40ac07:	loopne 0x40ac63
  40ac09:	dec    edx
  40ac0a:	in     eax,dx
  40ac0b:	adc    eax,ecx
  40ac0d:	sbb    eax,0x5e8d2d93
  40ac12:	arpl   di,cx
  40ac14:	mov    ah,BYTE PTR [edx]
  40ac16:	pop    edx
  40ac17:	jp     0x40ac54
  40ac19:	stc    
  40ac1a:	data16 cld 
  40ac1c:	push   eax
  40ac1d:	xchg   esi,eax
  40ac1e:	inc    DWORD PTR [ecx+0x723dad68]
  40ac24:	sbb    eax,0x8a2a19a8
  40ac29:	rcr    DWORD PTR [eax-0x2a],cl
  40ac2c:	pop    es
  40ac2d:	mov    BYTE PTR [eax-0x48],dl
  40ac30:	and    al,0x21
  40ac32:	jmp    0xd661:0xda644410
  40ac39:	icebp  
  40ac3a:	lds    edx,FWORD PTR [ebx]
  40ac3c:	idiv   BYTE PTR [esi-0xfc838cb]
  40ac42:	sbb    esi,edx
  40ac44:	test   eax,0x5ccbf6e3
  40ac49:	inc    ebp
  40ac4a:	fld    QWORD PTR [ecx+eiz*2+0x44a734e3]
  40ac51:	imul   esp,DWORD PTR [edx],0xa04b23a
  40ac57:	jecxz  0x40ac0e
  40ac59:	inc    ebx
  40ac5a:	ret    0x416b
  40ac5d:	dec    BYTE PTR [esi]
  40ac5f:	ins    DWORD PTR es:[edi],dx
  40ac60:	(bad)  
  40ac61:	xor    eax,0xf41faf3a
  40ac66:	test   al,0xb7
  40ac68:	and    DWORD PTR [edx],0xffffff8f
  40ac6b:	fdiv   st,st(7)
  40ac6d:	test   eax,0x47bcde68
  40ac72:	in     eax,0xd2
  40ac74:	adc    dl,BYTE PTR ds:0xac146526
  40ac7a:	mov    bl,0x75
  40ac7c:	and    cl,0x9
  40ac7f:	popf   
  40ac80:	adc    BYTE PTR [esi],ah
  40ac82:	pop    ecx
  40ac83:	shr    DWORD PTR [ecx+0xb7ac7a3],cl
  40ac89:	loop   0x40acaf
  40ac8b:	jns    0x40acb3
  40ac8d:	int    0xee
  40ac8f:	jnp    0x40ac79
  40ac91:	ret    
  40ac92:	enter  0xad75,0xb2
  40ac96:	jecxz  0x40ac31
  40ac98:	scas   al,BYTE PTR es:[edi]
  40ac99:	xor    bl,BYTE PTR [esi-0x2a2b52b8]
  40ac9f:	rol    ah,1
  40aca1:	inc    eax
  40aca2:	ja     0x40ac3f
  40aca4:	sbb    ah,ch
  40aca6:	fcmovne st,st(7)
  40aca8:	in     al,dx
  40aca9:	ins    BYTE PTR es:[edi],dx
  40acaa:	jmp    0x31f2:0x72256d2b
  40acb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb2:	sub    al,0x54
  40acb4:	loop   0x40ac74
  40acb6:	inc    edx
  40acb7:	push   ds
  40acb8:	mov    ebp,0xce61d1b5
  40acbd:	adc    ebp,ebx
  40acbf:	ds cli 
  40acc1:	fidivr DWORD PTR [edx]
  40acc3:	iret   
  40acc4:	and    edx,eax
  40acc6:	mov    ch,0x2a
  40acc8:	das    
  40acc9:	imul   ecx,DWORD PTR [eax+0x55e5368],0xffffffc5
  40acd0:	sbb    al,0x81
  40acd2:	pop    ebx
  40acd3:	xor    DWORD PTR [edi+0x2247002e],0x51
  40acda:	(bad)  
  40acdb:	dec    edi
  40acdc:	push   ds
  40acdd:	daa    
  40acde:	aad    0xe5
  40ace0:	retf   0xaf5a
  40ace3:	lods   al,BYTE PTR ds:[esi]
  40ace4:	xlat   BYTE PTR ds:[ebx]
  40ace5:	fabs   
  40ace7:	ficomp WORD PTR [edi]
  40ace9:	pop    eax
  40acea:	dec    ecx
  40aceb:	push   0x37163cff
  40acf0:	cmp    dh,BYTE PTR [ecx-0x70d447cd]
  40acf6:	sbb    eax,0x3fc412a4
  40acfb:	xchg   ecx,eax
  40acfc:	fmul   QWORD PTR [edi+0x37]
  40acff:	pop    ss
  40ad00:	pushf  
  40ad01:	and    al,0x8e
  40ad03:	adc    DWORD PTR [eax+ebx*4+0x77650eea],edi
  40ad0a:	and    al,cl
  40ad0c:	lea    esp,[ebp-0x5546aa7e]
  40ad12:	or     ebx,DWORD PTR [ebx+0x401b50c1]
  40ad18:	fisttp QWORD PTR [ebx+0x79b99cd7]
  40ad1e:	clc    
  40ad1f:	inc    BYTE PTR [ebx+0x55e9d976]
  40ad25:	mov    eax,0xb313a6a2
  40ad2a:	int    0x7f
  40ad2c:	clc    
  40ad2d:	push   edi
  40ad2e:	loop   0x40ad52
  40ad30:	pop    ebp
  40ad31:	into   
  40ad32:	(bad)  [edx-0x46]
  40ad35:	cli    
  40ad36:	popf   
  40ad37:	rcr    DWORD PTR [edi+ecx*2],0x70
  40ad3b:	lock push 0x5907e4c6
  40ad41:	pop    edi
  40ad42:	mov    esi,0x341c8204
  40ad47:	jae    0x40ad99
  40ad49:	inc    ebp
  40ad4a:	adc    BYTE PTR [ecx-0x4f],dl
  40ad4d:	xchg   esp,eax
  40ad4e:	jge    0x40ad78
  40ad50:	inc    ecx
  40ad51:	xor    eax,0x7bc4f164
  40ad56:	and    al,0x64
  40ad58:	and    ch,ch
  40ad5a:	ins    DWORD PTR es:[edi],dx
  40ad5b:	retf   0x7f12
  40ad5e:	mov    ds:0x19f54b25,eax
  40ad63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad64:	gs mov ss,WORD PTR cs:[ebp+0x1b]
  40ad69:	dec    edx
  40ad6a:	sar    BYTE PTR [ecx+0x13],cl
  40ad6d:	cmp    ecx,0x9e31b24b
  40ad73:	mov    dh,ch
  40ad75:	out    dx,al
  40ad76:	in     al,0x44
  40ad78:	lods   eax,DWORD PTR ds:[esi]
  40ad79:	bound  eax,QWORD PTR [eax+0x72]
  40ad7c:	cmp    esi,ebp
  40ad7e:	pushf  
  40ad7f:	sbb    ch,BYTE PTR [ecx+0x25]
  40ad82:	jmp    0x40ada5
  40ad84:	push   ss
  40ad85:	or     eax,0x95985e41
  40ad8a:	mov    BYTE PTR [ecx+ebp*2],cl
  40ad8d:	cs push edx
  40ad8f:	sub    al,0xb4
  40ad91:	shl    BYTE PTR [edx+0x47ab6871],cl
  40ad97:	sbb    ecx,edx
  40ad99:	out    0xd6,eax
  40ad9b:	push   ds
  40ad9c:	repnz (bad) 
  40ad9f:	addr16 push edi
  40ada1:	or     eax,0xb9b632c2
  40ada6:	pusha  
  40ada7:	push   ds
  40ada8:	fstp   DWORD PTR [ebp+0x2a]
  40adab:	dec    BYTE PTR [eax+esi*2-0x50]
  40adaf:	mov    edi,0x8ce01a90
  40adb4:	pushf  
  40adb5:	ret    
  40adb6:	lahf   
  40adb7:	int    0x57
  40adb9:	mov    dl,0xe3
  40adbb:	call   0xf5025264
  40adc0:	into   
  40adc1:	dec    eax
  40adc2:	xchg   esi,eax
  40adc3:	and    eax,0x4dcc4373
  40adc8:	or     eax,0x3238cfdb
  40adcd:	outs   dx,DWORD PTR ds:[esi]
  40adce:	adc    eax,0xcf8f9451
  40add3:	or     BYTE PTR [ecx+0x3c],ch
  40add6:	pop    esi
  40add7:	repnz mov ah,0x7e
  40adda:	dec    ebx
  40addb:	lea    ebp,[edx-0x12]
  40adde:	sub    esp,edx
  40ade0:	js     0x40ad77
  40ade2:	mov    al,ds:0xaba88a5f
  40ade7:	add    bl,al
  40ade9:	pop    esp
  40adea:	cdq    
  40adeb:	test   DWORD PTR [esi],esi
  40aded:	test   al,0x7d
  40adef:	sub    al,0xa1
  40adf1:	mov    ch,0xe3
  40adf3:	fidiv  WORD PTR [edi+0x34]
  40adf6:	xchg   ebp,eax
  40adf7:	div    BYTE PTR [esi+esi*8-0x20e02893]
  40adfe:	dec    esi
  40adff:	and    ecx,DWORD PTR [ecx-0xe37dd5d]
  40ae05:	sub    al,0x99
  40ae07:	rol    BYTE PTR [esi-0x59],1
  40ae0a:	sub    bl,ch
  40ae0c:	mov    dl,0x1d
  40ae0e:	scas   eax,DWORD PTR es:[edi]
  40ae0f:	cmp    esi,ecx
  40ae11:	sbb    al,0x45
  40ae13:	cdq    
  40ae14:	xor    al,0xb0
  40ae16:	and    bh,dl
  40ae18:	sbb    BYTE PTR [ebp+ecx*2-0x20],dh
  40ae1c:	inc    ebx
  40ae1d:	data16 aad 0x39
  40ae20:	mov    esi,0xa94218ac
  40ae25:	sub    BYTE PTR [ebx-0x2e],dl
  40ae28:	xchg   DWORD PTR [ebx-0x6b],ebp
  40ae2b:	scas   eax,DWORD PTR es:[edi]
  40ae2c:	mov    BYTE PTR [ecx],ah
  40ae2e:	sbb    DWORD PTR [edx*1-0x693e733d],edi
  40ae35:	jmp    0xe12f:0x742e34d8
  40ae3c:	popa   
  40ae3d:	pop    edi
  40ae3e:	or     al,0x44
  40ae40:	retf   
  40ae41:	std    
  40ae42:	jmp    0x40ae82
  40ae44:	and    DWORD PTR [ebx-0x70d6b87c],ebp
  40ae4a:	push   ecx
  40ae4b:	adc    eax,0xcd7aee3e
  40ae50:	fs pop ebx
  40ae52:	pop    edx
  40ae53:	or     DWORD PTR [ecx-0x7c],0x79f35fb
  40ae5a:	jns    0x40ae16
  40ae5c:	into   
  40ae5d:	cld    
  40ae5e:	pop    ebp
  40ae5f:	inc    ebx
  40ae60:	dec    edi
  40ae61:	lahf   
  40ae62:	fild   DWORD PTR [ebp+0x5e]
  40ae65:	mov    edx,0x9f0d0ffb
  40ae6a:	sub    al,0xa2
  40ae6c:	jne    0x40ae4e
  40ae6e:	out    0x59,eax
  40ae70:	cmp    bl,BYTE PTR [edi]
  40ae72:	scas   eax,DWORD PTR es:[edi]
  40ae73:	outs   dx,BYTE PTR ds:[esi]
  40ae74:	enter  0x9c26,0x60
  40ae78:	neg    DWORD PTR [esi-0x1f]
  40ae7b:	out    dx,al
  40ae7c:	std    
  40ae7d:	ret    0x8877
  40ae80:	sti    
  40ae81:	jg     0x40ae8d
  40ae83:	add    eax,0x9a051106
  40ae88:	out    dx,eax
  40ae89:	repnz test al,0xa5
  40ae8c:	jb     0x40ae83
  40ae8e:	shr    BYTE PTR [esi-0x3c715258],1
  40ae94:	pusha  
  40ae95:	imul   edx,DWORD PTR [ecx],0xffffff82
  40ae98:	dec    edi
  40ae99:	cmp    eax,0x564abbe0
  40ae9e:	or     ebx,ebp
  40aea0:	sbb    BYTE PTR [ecx-0x1a],ch
  40aea3:	fdiv   DWORD PTR [ebx+0x7e15e48b]
  40aea9:	pop    ecx
  40aeaa:	mov    ebx,0xd90f33d0
  40aeaf:	pop    ebp
  40aeb0:	jle    0x40aec4
  40aeb2:	aad    0x25
  40aeb4:	jge    0x40ae95
  40aeb6:	cdq    
  40aeb7:	xchg   DWORD PTR [eax+eiz*1],eax
  40aeba:	mov    eax,0xc1882df8
  40aebf:	inc    esi
  40aec0:	(bad)  
  40aec1:	in     al,0xeb
  40aec3:	(bad)  
  40aec4:	dec    edx
  40aec5:	ror    ebx,1
  40aec7:	pusha  
  40aec8:	dec    ebp
  40aec9:	fwait
  40aeca:	stos   DWORD PTR es:[edi],eax
  40aecb:	aad    0x74
  40aecd:	push   ecx
  40aece:	imul   edx,edx,0xffffff8c
  40aed1:	mov    dl,0x4e
  40aed3:	int    0xc
  40aed5:	sub    esp,DWORD PTR [eax-0x6d]
  40aed8:	mov    ds:0x794aed00,eax
  40aedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aede:	in     al,0x45
  40aee0:	sub    DWORD PTR [esi],ebx
  40aee2:	xchg   esp,eax
  40aee3:	out    dx,al
  40aee4:	xlat   BYTE PTR ds:[ebx]
  40aee5:	ss call 0x3659adcc
  40aeeb:	(bad)  
  40aeec:	jbe    0x40aede
  40aeee:	or     eax,0xd99c923d
  40aef3:	arpl   WORD PTR [edi],bx
  40aef5:	add    ch,0x3c
  40aef8:	lds    ebx,FWORD PTR [ecx-0x44]
  40aefb:	mov    ?,WORD PTR [eax+0x6a]
  40aefe:	add    cl,ch
  40af00:	or     BYTE PTR [ebp+0x6a283e2e],cl
  40af06:	js     0x40aeaf
  40af08:	not    DWORD PTR [edx+edi*2]
  40af0b:	cmp    eax,DWORD PTR [ebx]
  40af0d:	push   cs
  40af0e:	sbb    eax,0x15668df1
  40af13:	pop    ss
  40af14:	pop    esp
  40af15:	in     eax,0xf7
  40af17:	sub    BYTE PTR [ebx+0xb],al
  40af1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1b:	pop    ebx
  40af1c:	loopne 0x40aeec
  40af1e:	ret    0x10a6
  40af21:	mov    cl,0x60
  40af23:	ins    DWORD PTR es:[edi],dx
  40af24:	enter  0xf02b,0xac
  40af28:	repnz mov ah,0x58
  40af2b:	(bad)  
  40af2c:	jae    0x40af56
  40af2e:	or     esp,DWORD PTR [ebp+0x40]
  40af31:	daa    
  40af32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af33:	sbb    esi,ebp
  40af35:	stos   DWORD PTR es:[edi],eax
  40af36:	imul   ebp,DWORD PTR [edx],0xb013d818
  40af3c:	in     eax,dx
  40af3d:	lock mov ah,0x5f
  40af40:	xor    eax,0x4b8f6628
  40af45:	pop    ebx
  40af46:	add    BYTE PTR [ebp+0x50],al
  40af49:	(bad)  
  40af4b:	mov    dl,0x8b
  40af4d:	test   al,0x96
  40af4f:	mov    edx,0xc1b2c04f
  40af54:	push   eax
  40af55:	adc    BYTE PTR [ecx-0x1a],al
  40af58:	sbb    ebx,eax
  40af5a:	inc    ebx
  40af5b:	jl     0x40af70
  40af5d:	not    esi
  40af5f:	imul   edi,DWORD PTR [edi+0x1b],0xdf064b7d
  40af66:	std    
  40af67:	or     DWORD PTR [ebx+edx*1-0x3af7067f],0x42f45b7c
  40af72:	inc    ebp
  40af73:	adc    DWORD PTR [edi-0x33],edi
  40af76:	mov    WORD PTR [edx+0x7e2557c],gs
  40af7c:	and    bl,BYTE PTR [eax-0x75ef77cf]
  40af82:	pusha  
  40af83:	hlt    
  40af84:	push   ecx
  40af85:	pop    esi
  40af86:	test   BYTE PTR ds:0x2eb1046f,bh
  40af8c:	ds push ds
  40af8e:	fldcw  WORD PTR [ecx+0xa]
  40af91:	jmp    0x5c09ae3f
  40af96:	xchg   ebx,eax
  40af97:	jno    0x40af62
  40af99:	and    ebx,DWORD PTR [edx-0x62]
  40af9c:	mov    dl,BYTE PTR [ecx]
  40af9e:	inc    edi
  40af9f:	xor    DWORD PTR ds:0xdc00d1e1,eax
  40afa5:	mov    eax,ds:0x7bbb9ad2
  40afaa:	lea    esp,ds:0xb5206c00
  40afb0:	add    BYTE PTR [ebx+0x75c6ca9c],cl
  40afb6:	daa    
  40afb7:	pop    ebx
  40afb8:	jae    0x40af52
  40afba:	in     al,dx
  40afbb:	pop    eax
  40afbc:	loop   0x40afd0
  40afbe:	(bad)  
  40afbf:	sbb    DWORD PTR [edx-0x32],ecx
  40afc2:	stc    
  40afc3:	adc    al,dh
  40afc5:	call   0x6a643dd1
  40afca:	cli    
  40afcb:	and    dh,cl
  40afcd:	and    ch,BYTE PTR [edi+0x6f]
  40afd0:	fisub  WORD PTR [ecx+ebx*1-0x23]
  40afd4:	das    
  40afd5:	aaa    
  40afd6:	rcr    BYTE PTR [ebp-0x312be6f0],0x72
  40afdd:	jecxz  0x40b00c
  40afdf:	and    eax,0xd47e1313
  40afe4:	xor    BYTE PTR [edi-0x5291d697],bl
  40afea:	mov    ch,0x94
  40afec:	xchg   edi,esp
  40afee:	xchg   esi,eax
  40afef:	inc    ecx
  40aff0:	iret   
  40aff1:	int3   
  40aff2:	into   
  40aff3:	pop    ebp
  40aff4:	pop    eax
  40aff5:	xchg   ecx,eax
  40aff6:	arpl   sp,cx
  40aff8:	cmp    eax,0x75ffd445
  40affd:	xor    DWORD PTR [edx],ebx
  40afff:	test   DWORD PTR [esi+ebp*8+0x20ccc39a],ebp
  40b006:	(bad)  
  40b007:	xor    bl,cl
  40b009:	dec    ebp
  40b00a:	add    ah,al
  40b00c:	add    esi,eax
  40b00e:	sub    DWORD PTR [edx+0x57],eax
  40b011:	call   0xc293:0x60005655
  40b018:	stc    
  40b019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b01a:	mov    WORD PTR [ecx-0x16a7cd6d],ss
  40b020:	xor    esi,DWORD PTR [ebp+ebx*2+0x7f]
  40b024:	retf   0xd7ff
  40b027:	push   eax
  40b028:	xor    eax,0x676c576c
  40b02d:	pop    es
  40b02e:	mov    ah,0xe8
  40b030:	call   0x8abc2ce
  40b035:	pop    esi
  40b036:	jae    0x40b06a
  40b038:	mov    ds:0x1ba3b5d4,eax
  40b03d:	mov    esp,0x2b036280
  40b042:	aad    0x57
  40b044:	inc    esp
  40b045:	test   al,0x9d
  40b047:	mov    al,ds:0x443a610b
  40b04c:	push   0x3c50b4fe
  40b051:	jge    0x40b058
  40b053:	fmul   DWORD PTR [ecx-0x59]
  40b056:	imul   eax,DWORD PTR [ebx+0x7a],0x2ac7008f
  40b05d:	(bad)  
  40b05e:	aad    0x8e
  40b060:	in     al,0xe5
  40b062:	or     bh,BYTE PTR [ebx-0x74e5f08a]
  40b068:	inc    ebp
  40b069:	sti    
  40b06a:	add    eax,DWORD PTR [edx-0x5f]
  40b06d:	(bad)  
  40b06e:	lods   eax,DWORD PTR ds:[esi]
  40b06f:	jae    0x40b0a6
  40b071:	(bad)  
  40b072:	loop   0x40b0d4
  40b074:	xlat   BYTE PTR gs:[ebx]
  40b076:	jecxz  0x40b0ed
  40b078:	dec    ecx
  40b079:	not    BYTE PTR ds:0xa6babbf4
  40b07f:	adc    eax,0xc10a2298
  40b084:	retf   
  40b085:	mov    ecx,DWORD PTR [eax]
  40b087:	push   es
  40b088:	aam    0x5a
  40b08a:	xchg   edx,eax
  40b08b:	lds    edi,FWORD PTR [edx+0x6cda55c9]
  40b091:	inc    ecx
  40b092:	jb     0x40b047
  40b094:	lea    eax,ds:0xce9ea80a
  40b09a:	shr    BYTE PTR [esi],1
  40b09c:	xchg   ebp,eax
  40b09d:	mov    ah,0xfa
  40b09f:	retf   0xf6be
  40b0a2:	ss (bad) 
  40b0a4:	or     al,0xe3
  40b0a6:	sbb    eax,0xb799d503
  40b0ab:	cmp    DWORD PTR [edi],eax
  40b0ad:	lods   eax,DWORD PTR ds:[esi]
  40b0ae:	mov    bh,0x2a
  40b0b0:	sub    bl,ah
  40b0b2:	lds    ebx,FWORD PTR [eax-0x2eaf05eb]
  40b0b8:	inc    ecx
  40b0b9:	mov    eax,ds:0xb28b1670
  40b0be:	inc    edx
  40b0bf:	sub    al,0xf
  40b0c1:	jno    0x40b122
  40b0c3:	push   es
  40b0c4:	jmp    0x40b0e3
  40b0c6:	push   0x3ae9ac42
  40b0cb:	adc    DWORD PTR [esi],eax
  40b0cd:	out    0xc9,eax
  40b0cf:	pop    es
  40b0d0:	and    edi,DWORD PTR [ecx-0x14]
  40b0d3:	sar    DWORD PTR ds:0x15674118,1
  40b0d9:	sub    DWORD PTR [ebx],ebx
  40b0db:	or     eax,DWORD PTR [edx]
  40b0dd:	dec    esp
  40b0de:	mov    dh,0x41
  40b0e0:	cmp    BYTE PTR [ebp+0xe],dl
  40b0e3:	loope  0x40b066
  40b0e5:	fstp   TBYTE PTR [ecx]
  40b0e7:	cdq    
  40b0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0e9:	scas   eax,DWORD PTR es:[edi]
  40b0ea:	mov    ch,0x9f
  40b0ec:	sub    eax,0x2e07dbe
  40b0f1:	cmp    DWORD PTR ds:0x532b870,edx
  40b0f7:	in     al,0x76
  40b0f9:	sub    DWORD PTR [esp+ecx*1+0x29],0xc432f345
  40b101:	push   es
  40b102:	mov    ah,0x96
  40b104:	cs (bad) 
  40b106:	jge    0x40b0c0
  40b108:	pop    esp
  40b109:	dec    ebx
  40b10a:	xlat   BYTE PTR ds:[ebx]
  40b10b:	adc    eax,0xa9ec982c
  40b110:	pop    ecx
  40b111:	in     al,dx
  40b112:	dec    edx
  40b113:	adc    edi,DWORD PTR [eax]
  40b115:	adc    DWORD PTR [esi-0x31122bdb],0x50
  40b11c:	sub    al,0x58
  40b11e:	or     ecx,DWORD PTR [ebp-0x20]
  40b121:	mov    dl,bl
  40b123:	cs loope 0x40b137
  40b126:	ret    
  40b127:	jns    0x40b0c9
  40b129:	imul   eax,esi,0xc16af657
  40b12f:	ds sub esi,esp
  40b132:	pushf  
  40b133:	mov    cl,0xaa
  40b135:	aam    0xe6
  40b137:	jbe    0x40b0b9
  40b139:	mov    edx,DWORD PTR [eax]
  40b13b:	xor    ch,BYTE PTR [esp+ecx*2+0xa]
  40b13f:	outs   dx,DWORD PTR ds:[esi]
  40b140:	sbb    edx,DWORD PTR [ebx]
  40b142:	pop    ss
  40b143:	popf   
  40b144:	xor    al,0x25
  40b146:	push   ds
  40b147:	mov    WORD PTR [eax-0x10eff43e],ds
  40b14d:	xchg   BYTE PTR [edx-0x23],al
  40b150:	repnz push edx
  40b152:	bound  eax,QWORD PTR [ebx+0x6b]
  40b155:	arpl   WORD PTR [ebp-0x713958dc],ax
  40b15b:	and    eax,0x2eded107
  40b160:	in     eax,0x4b
  40b162:	fcomp  DWORD PTR [esi+0x7b]
  40b165:	jp     0x40b10d
  40b167:	sbb    DWORD PTR [ecx],edx
  40b169:	aad    0x37
  40b16b:	xor    al,0x96
  40b16d:	xchg   edi,eax
  40b16e:	push   edi
  40b16f:	mov    esi,eax
  40b171:	shl    ebp,cl
  40b173:	jl     0x40b1cd
  40b175:	(bad)  
  40b176:	ficomp WORD PTR [esi+eiz*2]
  40b179:	mov    cl,0x8a
  40b17b:	and    eax,esi
  40b17d:	arpl   bp,sp
  40b17f:	add    DWORD PTR [esi+0x61],esi
  40b182:	fdiv   QWORD PTR [esi-0x31]
  40b185:	loop   0x40b182
  40b187:	xchg   edx,eax
  40b188:	rcr    BYTE PTR [esi-0x9],1
  40b18b:	push   0xb72ace95
  40b190:	push   ds
  40b191:	pop    DWORD PTR [edi]
  40b193:	xor    al,0xa9
  40b195:	mov    ebx,edi
  40b197:	mov    eax,ds:0x34d6e36b
  40b19c:	in     al,0xfa
  40b19e:	adc    edx,edx
  40b1a0:	cmp    BYTE PTR [edx-0x11],0x1b
  40b1a4:	cmp    DWORD PTR ds:0xf7721f88,esi
  40b1aa:	stos   BYTE PTR es:[edi],al
  40b1ab:	pop    esi
  40b1ac:	lahf   
  40b1ad:	dec    BYTE PTR ss:[ecx+edx*2]
  40b1b1:	push   ecx
  40b1b2:	aaa    
  40b1b3:	mov    bl,0xd6
  40b1b5:	sub    al,0xba
  40b1b7:	sub    eax,ebp
  40b1b9:	jge    0x40b163
  40b1bb:	sbb    edi,ebx
  40b1bd:	shl    DWORD PTR [ecx+0x5ac4b1b4],cl
  40b1c3:	dec    esp
  40b1c4:	add    al,0x29
  40b1c6:	sbb    ah,bh
  40b1c8:	cmp    eax,0x3db8fb8b
  40b1cd:	mov    al,0xeb
  40b1cf:	dec    ebx
  40b1d0:	add    dh,BYTE PTR [ecx]
  40b1d2:	inc    edx
  40b1d3:	jge    0x40b159
  40b1d5:	xor    DWORD PTR ds:0x2ce8402f,0xffffffe9
  40b1dc:	outs   dx,DWORD PTR ds:[esi]
  40b1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1de:	xchg   ecx,eax
  40b1df:	xchg   ecx,eax
  40b1e0:	cmp    DWORD PTR [eax],eax
  40b1e2:	adc    DWORD PTR [esi+0x40],ebx
  40b1e5:	repnz scas al,BYTE PTR es:[edi]
  40b1e7:	sti    
  40b1e8:	mul    BYTE PTR [ebp-0x7a]
  40b1eb:	xchg   BYTE PTR [ecx],cl
  40b1ed:	in     eax,dx
  40b1ee:	jge    0x40b20d
  40b1f0:	ror    esp,0x1f
  40b1f3:	push   esi
  40b1f4:	aad    0x1b
  40b1f6:	repz cmp BYTE PTR [edx+0x49],ch
  40b1fa:	pop    ds
  40b1fb:	pop    ds
  40b1fc:	jmp    0x7188abdc
  40b201:	into   
  40b202:	jns    0x40b24d
  40b204:	and    dl,BYTE PTR [edi]
  40b206:	jg     0x40b191
  40b208:	stos   DWORD PTR es:[edi],eax
  40b209:	mov    ebx,esp
  40b20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20c:	pop    es
  40b20d:	add    DWORD PTR [ecx],esi
  40b20f:	lock loopne 0x40b1da
  40b212:	(bad)  
  40b213:	mov    ecx,0x169a1345
  40b218:	mov    ecx,0x77399a35
  40b21d:	and    dl,BYTE PTR [esi+ecx*8-0x3b1a3f8e]
  40b224:	pop    ds
  40b225:	jp     0x40b1b3
  40b227:	push   ds
  40b228:	add    edi,ebx
  40b22a:	pushf  
  40b22b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b22d:	xor    eax,0x7f2867d0
  40b232:	or     al,0x61
  40b234:	aas    
  40b235:	(bad)  
  40b239:	in     al,dx
  40b23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23b:	xchg   dh,ah
  40b23d:	mov    edx,DWORD PTR [edi-0x50508c56]
  40b243:	sub    BYTE PTR [ecx-0x37b072d2],ah
  40b249:	add    ch,bl
  40b24b:	mov    edi,0x334719b1
  40b250:	jle    0x40b29b
  40b252:	in     eax,0x82
  40b254:	add    BYTE PTR [ecx-0x4a],0x16
  40b258:	aaa    
  40b259:	mov    edx,0x428e880
  40b25e:	pop    ss
  40b25f:	shl    al,1
  40b261:	test   BYTE PTR [ebx+0x37a0c343],ch
  40b267:	sub    al,0x5e
  40b269:	or     BYTE PTR [edi+0x5f],bl
  40b26c:	adc    al,0xce
  40b26e:	inc    eax
  40b26f:	clc    
  40b270:	jo     0x40b2d2
  40b272:	lds    esp,FWORD PTR [ecx-0x20]
  40b275:	push   es
  40b276:	cmp    eax,DWORD PTR [esp+esi*1-0x71]
  40b27a:	cmp    al,0xb5
  40b27c:	pop    ecx
  40b27d:	jle    0x40b2ba
  40b27f:	fwait
  40b280:	jbe    0x40b2d0
  40b282:	scas   eax,DWORD PTR es:[edi]
  40b283:	xchg   edx,eax
  40b284:	es dec esp
  40b286:	ret    0xd818
  40b289:	mov    dl,ah
  40b28b:	adc    BYTE PTR [ebx+0x8],ch
  40b28e:	dec    ebx
  40b28f:	inc    DWORD PTR [ecx+0x11]
  40b292:	call   0x88b8080e
  40b297:	fld    QWORD PTR [eax]
  40b299:	lahf   
  40b29a:	in     eax,dx
  40b29b:	xor    BYTE PTR [edi-0x4476dfb2],bl
  40b2a1:	dec    esi
  40b2a2:	ss add eax,0xbfecd6a0
  40b2a8:	psrld  mm2,mm7
  40b2ab:	cmp    eax,0x372d8818
  40b2b0:	pop    ecx
  40b2b1:	mov    bh,0x85
  40b2b3:	xchg   dl,ah
  40b2b5:	pop    ebp
  40b2b6:	push   edi
  40b2b7:	fs rol dl,cl
  40b2ba:	div    BYTE PTR [ecx]
  40b2bc:	push   ebp
  40b2bd:	bound  edx,QWORD PTR ds:0x2d80600
  40b2c3:	ror    DWORD PTR [ebx-0x341e2f96],cl
  40b2c9:	jo     0x40b304
  40b2cb:	aam    0x10
  40b2cd:	fcomp  DWORD PTR [edx]
  40b2cf:	dec    ebx
  40b2d0:	sub    eax,0x5d4a474a
  40b2d5:	and    ebx,ecx
  40b2d7:	stos   BYTE PTR es:[edi],al
  40b2d8:	aad    0x99
  40b2da:	imul   ecx,eax,0x8c3c849a
  40b2e0:	lock jmp DWORD PTR [ebx-0x3c]
  40b2e4:	xlat   BYTE PTR ds:[ebx]
  40b2e5:	xor    al,0xc4
  40b2e7:	xchg   DWORD PTR [esi+eax*4-0x29f03b83],esp
  40b2ee:	aad    0x41
  40b2f0:	add    eax,DWORD PTR [ecx]
  40b2f2:	mov    esp,0x3d006b06
  40b2f7:	outs   dx,DWORD PTR ds:[esi]
  40b2f8:	stos   DWORD PTR es:[edi],eax
  40b2f9:	xchg   ebp,eax
  40b2fa:	cmp    DWORD PTR [ecx],0xdb8208e4
  40b300:	shl    DWORD PTR [edx],1
  40b302:	into   
  40b303:	cmp    eax,0xbe73620f
  40b308:	addr16 push ebx
  40b30a:	fs sbb eax,0x26cb61d
  40b310:	add    al,0x5b
  40b312:	out    0x3,al
  40b314:	lods   eax,DWORD PTR ds:[esi]
  40b315:	xor    bl,BYTE PTR ss:[edi+0x38]
  40b319:	cmp    eax,0xd8201948
  40b31e:	adc    eax,0x355bf32c
  40b323:	cmp    ebx,esi
  40b325:	enter  0xe6d8,0x9
  40b329:	xor    ah,BYTE PTR [edx]
  40b32b:	cmp    BYTE PTR [ecx+0x3373a5fc],cl
  40b331:	mov    cl,0x56
  40b333:	cmp    esp,DWORD PTR [edx]
  40b335:	mov    edi,esi
  40b337:	fnstcw WORD PTR [esi+0x3f2f49a9]
  40b33d:	push   esp
  40b33e:	pop    ebp
  40b33f:	mov    ebp,ss
  40b341:	outs   dx,DWORD PTR ds:[esi]
  40b342:	cmp    DWORD PTR [edi+0x659ebe],ebx
  40b348:	gs push edi
  40b34a:	push   ebp
  40b34b:	out    dx,eax
  40b34c:	ins    BYTE PTR es:[edi],dx
  40b34d:	sub    eax,0xdc85531a
  40b352:	pop    esi
  40b353:	pop    ss
  40b354:	push   ss
  40b355:	loope  0x40b373
  40b357:	sub    DWORD PTR [edi],0x2dcf0261
  40b35d:	sahf   
  40b35e:	sub    al,BYTE PTR [edx-0x37]
  40b361:	aas    
  40b362:	lea    eax,[ebx+0x5312111]
  40b368:	scas   eax,DWORD PTR es:[edi]
  40b369:	(bad)  
  40b36a:	fisttp QWORD PTR [ebp-0x4a]
  40b36d:	lahf   
  40b36e:	repnz mov eax,ds:0x9b277c7e
  40b374:	mov    ecx,0xc4ce6fa8
  40b379:	jne    0x40b3f7
  40b37b:	test   eax,0x7bbc2a97
  40b380:	dec    esi
  40b381:	adc    DWORD PTR [eax+0x4519a003],0x77
  40b388:	repnz cmp esp,DWORD PTR [ecx-0x30]
  40b38c:	mov    eax,0xff2c4f8d
  40b391:	mov    ebp,0x94a445fd
  40b396:	mov    ecx,0x67468cfc
  40b39b:	push   esi
  40b39c:	pop    esi
  40b39d:	hlt    
  40b39e:	push   cs
  40b39f:	and    esi,DWORD PTR cs:[ebp+0x4d]
  40b3a3:	push   esi
  40b3a4:	and    esp,esi
  40b3a6:	adc    BYTE PTR [ecx+0x2b91bb94],al
  40b3ac:	imul   edi,DWORD PTR ds:0xa1d6f26b,0xad63da99
  40b3b6:	push   ecx
  40b3b7:	cmp    DWORD PTR [eax+ecx*8],0xd8b91eed
  40b3be:	xchg   edi,eax
  40b3bf:	stos   DWORD PTR es:[edi],eax
  40b3c0:	sub    BYTE PTR [edi+0x45bb8780],al
  40b3c6:	test   bl,cl
  40b3c8:	(bad)  
  40b3ca:	jg     0x40b3ee
  40b3cc:	loopne 0x40b439
  40b3ce:	jmp    0xb9be043d
  40b3d3:	ss jg  0x40b39d
  40b3d6:	mov    ecx,0x550acf8e
  40b3db:	in     al,dx
  40b3dc:	gs das 
  40b3de:	mov    ch,0xd8
  40b3e0:	xor    eax,0x9aff2974
  40b3e5:	add    BYTE PTR [eax-0x72],cl
  40b3e8:	push   0xdbfa3d8b
  40b3ed:	jae    0x40b426
  40b3ef:	sub    dl,BYTE PTR [ebx]
  40b3f1:	inc    ebx
  40b3f2:	add    ecx,ebx
  40b3f4:	inc    ebx
  40b3f5:	mov    al,ds:0x718e569a
  40b3fa:	inc    ebx
  40b3fb:	mov    esp,0x37171c34
  40b400:	sbb    edx,DWORD PTR [ecx]
  40b402:	or     al,0x54
  40b404:	xchg   DWORD PTR [ebx-0x2d],ebx
  40b407:	aam    0xef
  40b409:	rol    ebx,0xae
  40b40c:	xchg   DWORD PTR [esi-0x74],edx
  40b40f:	mov    al,0x3f
  40b411:	mov    dl,0x70
  40b413:	cmp    bl,dl
  40b415:	push   ds
  40b416:	aas    
  40b417:	retf   
  40b418:	lods   eax,DWORD PTR ds:[esi]
  40b419:	popa   
  40b41a:	imul   ebp,DWORD PTR [ebx],0xffffffd7
  40b41d:	je     0x40b43e
  40b41f:	hlt    
  40b420:	loopne 0x40b447
  40b422:	shr    edi,cl
  40b424:	push   ss
  40b425:	pop    edx
  40b426:	clc    
  40b427:	mov    eax,0x3652e192
  40b42c:	cmp    cl,BYTE PTR [eax]
  40b42e:	sbb    DWORD PTR [edx+0x602766e8],esi
  40b434:	xchg   ecx,eax
  40b435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b436:	or     BYTE PTR [eax+eax*1],bh
  40b439:	pop    esi
  40b43a:	xor    BYTE PTR [esi-0x7d],0xaf
  40b43e:	call   0x838e:0xf6bff380
  40b445:	inc    edx
  40b446:	adc    dl,BYTE PTR [ebp+esi*2+0x36]
  40b44a:	and    eax,0x6c902fe3
  40b450:	shr    DWORD PTR [edi],0xfe
  40b453:	dec    esi
  40b454:	cmc    
  40b455:	push   ecx
  40b456:	xor    edi,DWORD PTR [esi]
  40b458:	(bad)  
  40b459:	jmp    0xcf8d:0x6b47c835
  40b460:	je     0x40b42b
  40b462:	mov    bl,0x80
  40b464:	ss mov ebp,0xa921712f
  40b46a:	sbb    BYTE PTR [ecx],ah
  40b46c:	or     eax,0xeb0f7976
  40b471:	pop    esi
  40b472:	pop    es
  40b473:	and    esi,0xffffffe5
  40b476:	inc    esi
  40b477:	cld    
  40b478:	jmp    0x9c39:0xb32f26f5
  40b47f:	mov    dl,0x1e
  40b481:	sbb    DWORD PTR [ebp-0x8739aa0],0x43770098
  40b48b:	push   ebp
  40b48c:	add    eax,0xeca60cda
  40b491:	jg     0x40b4a7
  40b493:	retf   
  40b494:	add    BYTE PTR [ecx+0x4b3de74e],0x7b
  40b49b:	add    al,0x1d
  40b49d:	xchg   DWORD PTR [ebp+0x24691dd9],esp
  40b4a3:	mov    dl,BYTE PTR [edi]
  40b4a5:	pusha  
  40b4a6:	lahf   
  40b4a7:	jmp    0x40b521
  40b4a9:	inc    eax
  40b4aa:	gs and cl,cl
  40b4ad:	cwde   
  40b4ae:	js     0x40b52b
  40b4b0:	push   0xffffffbc
  40b4b2:	mov    bh,BYTE PTR [esi]
  40b4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b5:	sbb    ch,bh
  40b4b7:	dec    ecx
  40b4b8:	in     al,0x6d
  40b4ba:	xor    BYTE PTR [ebx-0x21],al
  40b4bd:	pop    edi
  40b4be:	fadd   QWORD PTR [edi-0x39]
  40b4c1:	dec    edi
  40b4c2:	iret   
  40b4c3:	adc    ah,BYTE PTR [edx+0x15]
  40b4c6:	cmc    
  40b4c7:	jecxz  0x40b4f5
  40b4c9:	push   cs
  40b4ca:	jo     0x40b53d
  40b4cc:	shr    BYTE PTR [ebx+0x56],0xcd
  40b4d0:	sbb    ch,al
  40b4d2:	inc    edx
  40b4d3:	xchg   esi,eax
  40b4d4:	xchg   dl,ch
  40b4d6:	bound  ebp,QWORD PTR [ebx+eiz*4-0x2d]
  40b4da:	xor    ebx,ebp
  40b4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4dd:	or     BYTE PTR [ebx-0x77ed2444],ah
  40b4e3:	jo     0x40b479
  40b4e5:	out    dx,al
  40b4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e7:	lock xchg bh,bh
  40b4ea:	push   ss
  40b4eb:	out    dx,al
  40b4ec:	jmp    0x67033845
  40b4f1:	inc    esi
  40b4f2:	loope  0x40b553
  40b4f4:	ret    
  40b4f5:	cmc    
  40b4f6:	out    0x2d,eax
  40b4f8:	jmp    0x40b4af
  40b4fa:	mov    DWORD PTR [ecx+0x45d6f7b9],esp
  40b500:	xor    al,0xfa
  40b502:	xchg   edi,eax
  40b503:	jae    0x40b49e
  40b505:	out    0xa0,al
  40b507:	push   cs
  40b508:	jnp    0x40b50e
  40b50a:	out    dx,al
  40b50b:	rcl    ah,0xbf
  40b50e:	dec    esi
  40b50f:	sub    ebx,DWORD PTR [ebp-0x475edc76]
  40b515:	jle    0x40b53d
  40b517:	out    dx,eax
  40b518:	repz sbb eax,0xfdcb3e97
  40b51e:	dec    edi
  40b51f:	xor    dh,dh
  40b521:	push   esp
  40b522:	aam    0x9c
  40b524:	mov    ebx,0x1300cdff
  40b529:	dec    ecx
  40b52a:	inc    esi
  40b52b:	call   0x99af:0x6de23c21
  40b532:	push   0x78ada14b
  40b537:	lahf   
  40b538:	test   DWORD PTR [eax],esp
  40b53a:	aas    
  40b53b:	add    BYTE PTR [ecx-0xb],ch
  40b53e:	jno    0x40b4cf
  40b540:	push   esp
  40b541:	(bad)  
  40b542:	js     0x40b590
  40b544:	dec    ecx
  40b545:	loop   0x40b576
  40b547:	pop    ds
  40b548:	enter  0x4c61,0x68
  40b54c:	dec    esp
  40b54d:	std    
  40b54e:	jne    0x40b572
  40b550:	jns    0x40b5a3
  40b552:	pushf  
  40b553:	dec    edx
  40b554:	push   edi
  40b555:	jo     0x40b585
  40b557:	and    edi,ebx
  40b559:	xor    eax,0x804dfdf
  40b55e:	xor    eax,0x98b487cc
  40b563:	push   ecx
  40b564:	add    eax,0x3c874da8
  40b569:	cdq    
  40b56a:	jmp    0x12f:0x8453e833
  40b571:	js     0x40b5d7
  40b573:	div    DWORD PTR [eax-0x13]
  40b576:	daa    
  40b577:	or     eax,0xd00fa4d7
  40b57c:	(bad)
  40b580:	cmp    ebp,DWORD PTR [edx]
  40b582:	outs   dx,BYTE PTR ds:[esi]
  40b583:	fwait
  40b584:	mov    dh,0x75
  40b586:	(bad)  [ebp-0x7d]
  40b589:	rcr    BYTE PTR [edx+0xe2495a1],cl
  40b58f:	test   eax,0xe1dcfc5e
  40b594:	hlt    
  40b595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b596:	xor    al,0xb7
  40b598:	push   esp
  40b599:	add    edx,DWORD PTR [ebp+0x47280148]
  40b59f:	out    dx,eax
  40b5a0:	scas   eax,DWORD PTR es:[edi]
  40b5a1:	bound  esi,QWORD PTR fs:[ebx]
  40b5a4:	stos   BYTE PTR es:[edi],al
  40b5a5:	dec    esi
  40b5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a7:	(bad)  
  40b5a8:	fwait
  40b5a9:	test   ebp,0x4cc737af
  40b5af:	dec    edx
  40b5b0:	scas   al,BYTE PTR es:[edi]
  40b5b1:	sbb    dl,ch
  40b5b3:	in     eax,0x54
  40b5b5:	mov    bh,0x48
  40b5b7:	mov    ecx,0xb3364e5b
  40b5bc:	push   es
  40b5bd:	ss ret 0x8f7c
  40b5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c2:	sub    eax,0xcce527cf
  40b5c7:	mov    cl,0xaf
  40b5c9:	lds    eax,FWORD PTR [ecx]
  40b5cb:	std    
  40b5cc:	mov    ebp,0x9e367149
  40b5d1:	enter  0x2a73,0xf4
  40b5d5:	add    eax,0xe0cdd80
  40b5da:	out    dx,eax
  40b5db:	adc    BYTE PTR [edi],ah
  40b5dd:	inc    esp
  40b5de:	adc    eax,esp
  40b5e0:	out    dx,eax
  40b5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e2:	pop    edx
  40b5e3:	add    al,0x39
  40b5e5:	sub    bl,ch
  40b5e7:	data16 (bad) 
  40b5e9:	jp     0x40b56c
  40b5eb:	cli    
  40b5ec:	frstor [eax-0x58]
  40b5ef:	gs pop esi
  40b5f1:	add    DWORD PTR [eax+ebp*1-0x200df8c9],edx
  40b5f8:	stos   BYTE PTR es:[edi],al
  40b5f9:	das    
  40b5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5fb:	loope  0x40b5ea
  40b5fd:	jno    0x40b5e5
  40b5ff:	mov    ebp,0x69032ba7
  40b604:	sahf   
  40b605:	sub    eax,0x8c4dcecc
  40b60a:	mov    ch,BYTE PTR [bp-0x40]
  40b60e:	mov    dl,0xa4
  40b610:	xchg   BYTE PTR [edx-0x4d],dh
  40b613:	jnp    0x40b61c
  40b615:	test   eax,0xc3d2182a
  40b61a:	(bad)  
  40b61b:	test   eax,0x60ddbd82
  40b621:	jmp    0x40b61e
  40b623:	fsubr  DWORD PTR [ebx]
  40b625:	sub    DWORD PTR [ebx-0x49c6d794],edx
  40b62b:	cdq    
  40b62c:	dec    edi
  40b62d:	mov    ch,0xf2
  40b62f:	inc    esi
  40b630:	(bad)  
  40b631:	xchg   ebp,eax
  40b632:	add    ebp,ebx
  40b634:	imul   esp,DWORD PTR [ecx+0x7f],0x87f9e44e
  40b63b:	retf   
  40b63c:	div    dl
  40b63e:	jns    0x40b60d
  40b640:	rcl    BYTE PTR [esi-0x73d52376],cl
  40b646:	inc    edx
  40b647:	jp     0x40b660
  40b649:	retf   
  40b64a:	mov    ecx,0x389c7d43
  40b64f:	sub    DWORD PTR [eax+0x30],ecx
  40b652:	test   BYTE PTR [edx],cl
  40b654:	loop   0x40b6c3
  40b656:	add    esp,DWORD PTR [edi-0x28de857a]
  40b65c:	fbstp  TBYTE PTR [ecx+eiz*2+0x3b692bcb]
  40b663:	dec    edi
  40b664:	cmp    edx,DWORD PTR [edi-0x63]
  40b667:	cmp    esp,DWORD PTR [edi+ecx*4-0x749aade8]
  40b66e:	sbb    ebp,eax
  40b670:	sar    BYTE PTR [esi],0xd1
  40b673:	add    esi,ebx
  40b675:	cmp    eax,0x55043c3b
  40b67a:	stos   DWORD PTR es:[edi],eax
  40b67b:	in     eax,0xce
  40b67d:	stc    
  40b67e:	pop    ebx
  40b67f:	test   BYTE PTR [ebx+ebx*1-0x2c],ah
  40b683:	hlt    
  40b684:	enter  0xa81a,0xeb
  40b688:	aas    
  40b689:	mov    WORD PTR [ecx+0x7532b71e],cs
  40b68f:	pop    edi
  40b690:	mov    ds:0xad9a8787,al
  40b695:	mov    ds:0x3cd2a919,eax
  40b69a:	imul   BYTE PTR [ebx+0xe1aaf6c]
  40b6a0:	adc    ecx,edi
  40b6a2:	arpl   WORD PTR [esi-0x15],dx
  40b6a5:	jmp    0x40b71a
  40b6a7:	dec    ecx
  40b6a8:	mov    ch,0xd3
  40b6aa:	cmp    al,0x7e
  40b6ac:	dec    ebx
  40b6ad:	je     0x40b727
  40b6af:	or     DWORD PTR [ecx-0x71b79604],0xcf25ab7
  40b6b9:	pop    esi
  40b6ba:	dec    esp
  40b6bb:	dec    ebp
  40b6bc:	std    
  40b6bd:	jmp    0x8422bdf
  40b6c2:	rcr    ebx,cl
  40b6c4:	loopne 0x40b692
  40b6c6:	inc    ecx
  40b6c7:	add    DWORD PTR [eax+0x3b],ebx
  40b6ca:	adc    bl,bl
  40b6cc:	pop    ss
  40b6cd:	sbb    BYTE PTR [esi+edi*1-0x4db64975],0x6e
  40b6d5:	push   ebp
  40b6d6:	dec    eax
  40b6d7:	mov    eax,ds:0xf49f2fa6
  40b6dc:	pop    ecx
  40b6dd:	and    DWORD PTR [esi-0xcbb9a2],0x652b65f6
  40b6e7:	xchg   esi,eax
  40b6e8:	xchg   ebp,eax
  40b6e9:	and    ebp,esi
  40b6eb:	stc    
  40b6ec:	ret    
  40b6ed:	div    ebx
  40b6ef:	dec    ecx
  40b6f0:	and    eax,0xb34d035b
  40b6f5:	jmp    0xc6ed:0x978660a4
  40b6fc:	cmp    eax,0x77e070e
  40b701:	aad    0xce
  40b703:	cmp    eax,0x6ceea4b1
  40b708:	add    eax,DWORD PTR [ebx]
  40b70a:	and    DWORD PTR [ecx+edi*2-0x1cc1ceaa],0xb3589e87
  40b715:	mov    WORD PTR [ebx+0x2005a40f],ss
  40b71b:	sbb    eax,0xb46da432
  40b720:	push   ebx
  40b721:	push   edi
  40b722:	jno    0x40b737
  40b724:	pushf  
  40b725:	mov    DWORD PTR [eax+0xe59100e],edi
  40b72b:	mov    dl,0x16
  40b72d:	xchg   ebp,eax
  40b72e:	push   ebp
  40b72f:	xchg   ecx,eax
  40b730:	mov    edx,0x40c6284f
  40b735:	test   al,0x10
  40b737:	dec    ebp
  40b738:	mov    WORD PTR [edi+ebp*1+0x26],ds
  40b73c:	hlt    
  40b73d:	loope  0x40b7bd
  40b73f:	outs   dx,BYTE PTR ds:[esi]
  40b740:	addr16 dec ebp
  40b742:	adc    DWORD PTR [eax],0x62e0b16c
  40b748:	(bad)  
  40b74a:	cmp    edi,eax
  40b74c:	mov    dl,0xc4
  40b74e:	sahf   
  40b74f:	in     al,dx
  40b750:	pop    esp
  40b751:	push   esp
  40b752:	clc    
  40b753:	gs jbe 0x40b7a0
  40b756:	test   DWORD PTR ds:0x3ac4ecfb,eax
  40b75c:	ins    BYTE PTR es:[edi],dx
  40b75d:	sbb    DWORD PTR [esi+ecx*4+0x68],0xc594f2de
  40b765:	fdiv   st,st(4)
  40b767:	ja     0x40b7e4
  40b769:	inc    esi
  40b76a:	arpl   WORD PTR [edx],bx
  40b76c:	or     eax,0xc41ff007
  40b771:	dec    edx
  40b772:	mul    DWORD PTR [eax]
  40b774:	leave  
  40b775:	add    DWORD PTR [edi-0x660954e],edx
  40b77b:	jnp    0x40b70f
  40b77d:	pop    ebp
  40b77e:	call   0xe249c362
  40b783:	ja     0x40b74f
  40b785:	pop    edi
  40b786:	xchg   ecx,eax
  40b787:	imul   edx,DWORD PTR [edx+ebp*8+0x4],0x6936db21
  40b78f:	es stc 
  40b791:	in     al,dx
  40b792:	mov    esp,0x6ed6c9da
  40b797:	out    0x16,eax
  40b799:	js     0x40b750
  40b79b:	push   ebx
  40b79c:	mov    ds:0xb45b6c02,al
  40b7a1:	pop    esi
  40b7a2:	push   ss
  40b7a3:	mov    eax,DWORD PTR [edi+edx*2-0x6c25731]
  40b7aa:	(bad)  
  40b7ab:	aam    0xea
  40b7ad:	neg    BYTE PTR [esi-0x2dfe0760]
  40b7b3:	xor    dl,BYTE PTR [ebx+esi*1-0x24]
  40b7b7:	add    cl,BYTE PTR [ecx-0x4a]
  40b7ba:	adc    DWORD PTR [ecx],edi
  40b7bc:	jge    0x40b830
  40b7be:	jae    0x40b7b2
  40b7c0:	or     al,0xf0
  40b7c2:	or     DWORD PTR [esp+edi*2-0x1a],0xffffffcd
  40b7c7:	retf   
  40b7c8:	inc    edi
  40b7c9:	scas   al,BYTE PTR es:[edi]
  40b7ca:	stc    
  40b7cb:	mov    ecx,eax
  40b7cd:	sbb    dh,dh
  40b7cf:	fistp  WORD PTR [ebx-0x19445ad7]
  40b7d5:	jmp    0xa14:0x639bba67
  40b7dc:	hlt    
  40b7dd:	(bad)  
  40b7de:	xchg   ebp,eax
  40b7df:	inc    eax
  40b7e0:	int    0x58
  40b7e2:	in     al,dx
  40b7e3:	addr16 mov ch,0x8b
  40b7e6:	out    dx,eax
  40b7e7:	inc    edi
  40b7e8:	xchg   ebx,eax
  40b7e9:	add    BYTE PTR [ebx],bh
  40b7eb:	fimul  DWORD PTR [edi+0x777c6118]
  40b7f1:	lahf   
  40b7f2:	call   0xde38:0x8b8c902c
  40b7f9:	cmp    cl,dl
  40b7fb:	shl    esp,1
  40b7fd:	jmp    0xc0d1af55
  40b802:	fmul   st,st(5)
  40b804:	out    dx,al
  40b805:	imul   ecx,DWORD PTR [esi+0x5a70692d],0x53e2f1ae
  40b80f:	jg     0x40b7dd
  40b811:	push   cs
  40b812:	push   esp
  40b813:	sbb    BYTE PTR [edx],ch
  40b815:	pushf  
  40b816:	dec    ebp
  40b817:	xchg   esp,eax
  40b818:	cmp    dh,BYTE PTR [esi+eax*2+0x3]
  40b81c:	mov    WORD PTR [ebp-0x23],?
  40b81f:	out    dx,al
  40b820:	push   ss
  40b821:	aad    0x3c
  40b823:	pusha  
  40b824:	test   al,0x1c
  40b826:	xchg   esp,eax
  40b827:	lock cs pop esp
  40b82a:	fistp  DWORD PTR [edi-0xe]
  40b82d:	cs push esp
  40b82f:	out    0x3c,eax
  40b831:	cs push ecx
  40b833:	mov    ds:0x31e460a3,al
  40b838:	cs test eax,0x16de22
  40b83e:	and    eax,0x3338a4c9
  40b843:	js     0x40b85d
  40b845:	mov    al,ds:0x15bcdcda
  40b84a:	cld    
  40b84b:	mov    edx,0xa0a4aa03
  40b850:	push   ds
  40b851:	scas   al,BYTE PTR es:[edi]
  40b852:	add    eax,0xf764332b
  40b857:	int    0x82
  40b859:	in     eax,0x17
  40b85b:	adc    ch,BYTE PTR [eax+0x3fdef42f]
  40b861:	dec    eax
  40b862:	aaa    
  40b863:	sub    ecx,ebx
  40b865:	push   edi
  40b866:	shr    bh,0x8a
  40b869:	in     eax,0xbc
  40b86b:	push   0xffffff86
  40b86d:	clc    
  40b86e:	push   ebp
  40b86f:	lock (bad) 
  40b871:	xchg   esi,eax
  40b872:	inc    ebx
  40b873:	add    al,0x32
  40b875:	jmp    0x19bf:0xe4df60b9
  40b87c:	xor    ah,BYTE PTR [ebx-0x7a90f9c5]
  40b882:	fidiv  WORD PTR [edi]
  40b884:	std    
  40b885:	bound  edx,QWORD PTR [edi]
  40b887:	sub    dl,BYTE PTR [ebx]
  40b889:	mov    eax,0xd04dd454
  40b88e:	dec    esi
  40b88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b890:	sbb    al,0xc1
  40b892:	push   ds
  40b893:	cmp    eax,0x104cc91b
  40b898:	adc    ebx,DWORD PTR [edi+0x4d]
  40b89b:	rol    edx,0xae
  40b89e:	(bad)  
  40b89f:	popf   
  40b8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a1:	dec    esi
  40b8a2:	pusha  
  40b8a3:	push   esp
  40b8a4:	and    BYTE PTR [eax+ebx*2-0x4ae5c8c1],dh
  40b8ab:	adc    eax,0xa672ba4f
  40b8b0:	mov    ecx,0xb15af67a
  40b8b5:	(bad)  [ebx-0x5918be4a]
  40b8bb:	fdivr  QWORD PTR [edi-0x53]
  40b8be:	push   ebp
  40b8bf:	out    0x6,eax
  40b8c1:	call   0xe0de:0xb5c586e9
  40b8c8:	jmp    0xfc85:0x9b7c4d7a
  40b8cf:	adc    eax,0xfa2fa4df
  40b8d4:	rcr    DWORD PTR [esi-0x5f],1
  40b8d7:	add    al,0xcf
  40b8d9:	imul   eax,ecx,0x5b
  40b8dc:	mov    edi,0x872a3079
  40b8e1:	cmp    DWORD PTR [esi+0x7],ebp
  40b8e4:	lods   al,BYTE PTR ds:[esi]
  40b8e5:	xor    BYTE PTR [eax+0x7a],ch
  40b8e8:	xchg   BYTE PTR [edi+eax*8+0x13],al
  40b8ec:	or     eax,0x7fa48c25
  40b8f1:	sti    
  40b8f2:	aaa    
  40b8f3:	das    
  40b8f4:	xor    BYTE PTR [edi+0x55dfd82b],bl
  40b8fa:	mov    ebx,ebp
  40b8fc:	push   0x16
  40b8fe:	sahf   
  40b8ff:	idiv   esp
  40b901:	mov    es,ebx
  40b903:	mov    al,0x64
  40b905:	push   edi
  40b906:	and    ah,BYTE PTR [edi+0x39]
  40b909:	push   ebx
  40b90a:	dec    esp
  40b90b:	ud1    ecx,DWORD PTR [edi+0xc]
  40b90f:	sub    al,0xd0
  40b911:	jge    0x40b8be
  40b913:	pop    ebx
  40b914:	adc    DWORD PTR [edi+0x69f44a8a],ebx
  40b91a:	mov    al,ds:0x217471ac
  40b91f:	dec    ebx
  40b920:	data16 (bad) 
  40b922:	shr    BYTE PTR [edi-0x7c],cl
  40b925:	fmul   DWORD PTR fs:[ebx]
  40b928:	mov    ebx,0xe059ae3a
  40b92d:	lock jmp 0x84f9:0x553679a0
  40b935:	pop    esp
  40b936:	sbb    BYTE PTR [esi+0x12dc097e],0x45
  40b93d:	int    0x87
  40b93f:	mov    esi,0xf6604e1d
  40b944:	jp     0x40b8e7
  40b946:	rol    BYTE PTR ds:0xaa308e91,cl
  40b94c:	pushf  
  40b94d:	xor    edi,DWORD PTR [edi-0x477e455e]
  40b953:	in     eax,0x12
  40b955:	mov    dl,0x7c
  40b957:	lds    esp,FWORD PTR [edx-0x49]
  40b95a:	inc    eax
  40b95b:	rcl    DWORD PTR [ebp+0x8],0xd
  40b95f:	retf   0x4f4d
  40b962:	cs dec esp
  40b964:	pushf  
  40b965:	sti    
  40b966:	xchg   BYTE PTR [edi+0x48],bl
  40b969:	bound  esi,QWORD PTR [eax+0x3a9ef0a5]
  40b96f:	add    cl,cl
  40b971:	add    BYTE PTR [ecx+0x2f],dl
  40b974:	mov    esi,0xfc04798a
  40b979:	fs push eax
  40b97b:	pop    eax
  40b97c:	mov    cl,0x55
  40b97e:	int3   
  40b97f:	push   ds
  40b980:	push   edx
  40b981:	xchg   DWORD PTR [edx+0x77ca3416],edx
  40b987:	push   0x9585965a
  40b98c:	icebp  
  40b98d:	adc    eax,0xe62ced98
  40b992:	adc    ecx,edi
  40b994:	mov    dh,0x3c
  40b996:	adc    BYTE PTR [edi],al
  40b998:	adc    DWORD PTR [ebx+0x1204eaab],ebp
  40b99e:	ins    DWORD PTR es:[edi],dx
  40b99f:	dec    ebp
  40b9a0:	stc    
  40b9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9a2:	cmc    
  40b9a3:	scas   eax,DWORD PTR es:[edi]
  40b9a4:	xchg   ebx,eax
  40b9a5:	pause  
  40b9a7:	aaa    
  40b9a8:	sbb    ch,dl
  40b9aa:	mov    dl,0x9c
  40b9ac:	xchg   ebp,eax
  40b9ad:	scas   al,BYTE PTR es:[edi]
  40b9ae:	imul   ebp,ecx,0x7c
  40b9b1:	sub    DWORD PTR [edi+0x72],edx
  40b9b4:	jno    0x40b9f2
  40b9b6:	adc    eax,0x3c3e39e7
  40b9bb:	adc    dh,BYTE PTR [esi-0x49]
  40b9be:	cmp    al,BYTE PTR [ebx-0x27]
  40b9c1:	sbb    BYTE PTR [ebx+0x34],bh
  40b9c4:	std    
  40b9c5:	cdq    
  40b9c6:	cmp    ch,BYTE PTR [ecx-0x55edb52c]
  40b9cc:	push   edx
  40b9cd:	adc    esi,DWORD PTR [ebx]
  40b9cf:	sub    eax,DWORD PTR [esp+edi*2+0x1d]
  40b9d3:	sbb    ah,BYTE PTR [edi+eax*1-0x32]
  40b9d7:	push   cs
  40b9d8:	rol    BYTE PTR [edx],0xac
  40b9db:	clc    
  40b9dc:	leave  
  40b9dd:	arpl   ax,dx
  40b9df:	enter  0x455,0x64
  40b9e3:	push   edx
  40b9e4:	xchg   edx,eax
  40b9e5:	jb     0x40ba21
  40b9e7:	sti    
  40b9e8:	xchg   DWORD PTR [edi],eax
  40b9ea:	mov    edx,0xabc637ea
  40b9ef:	xor    ch,BYTE PTR [edi]
  40b9f1:	push   ss
  40b9f2:	ds sbb esi,ecx
  40b9f5:	mov    ds:0x878525e6,eax
  40b9fa:	(bad)  
  40b9fb:	je     0x40b97e
  40b9fd:	sub    ah,BYTE PTR ds:0x1583a73e
  40ba03:	push   0xffffffd4
  40ba05:	mov    ds:0x655f25dc,al
  40ba0a:	pop    es
  40ba0b:	stos   BYTE PTR es:[edi],al
  40ba0c:	loop   0x40ba5d
  40ba0e:	int    0x9a
  40ba10:	outs   dx,DWORD PTR ds:[esi]
  40ba11:	rol    eax,cl
  40ba13:	(bad)  
  40ba14:	cmp    bh,cl
  40ba16:	shl    DWORD PTR [edi-0x62a58192],1
  40ba1c:	or     al,0x3a
  40ba1e:	dec    esi
  40ba1f:	add    BYTE PTR [ebp+0x47],0x6
  40ba23:	aas    
  40ba24:	add    edi,DWORD PTR [ecx-0x5d]
  40ba27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba28:	clc    
  40ba29:	pushf  
  40ba2a:	jbe    0x40ba91
  40ba2c:	pushf  
  40ba2d:	addr16 in eax,dx
  40ba2f:	dec    esp
  40ba30:	mov    ebx,0xa16617c6
  40ba35:	and    ebx,DWORD PTR [edi+0x5e]
  40ba38:	test   BYTE PTR [ebx],ah
  40ba3a:	cmp    edi,DWORD PTR cs:[edx+0x6a]
  40ba3e:	xchg   ebp,eax
  40ba3f:	inc    edx
  40ba40:	int3   
  40ba41:	or     esi,ebp
  40ba43:	pop    edx
  40ba44:	mov    ds:0x214b1f1f,eax
  40ba49:	jo     0x40bab9
  40ba4b:	inc    ebp
  40ba4c:	push   edi
  40ba4d:	push   ebp
  40ba4e:	out    0xa3,al
  40ba50:	lea    ebx,[ebx]
  40ba52:	(bad)  
  40ba53:	jnp    0x40ba98
  40ba55:	nop
  40ba56:	mov    ds:0x6059d088,al
  40ba5b:	out    0xe9,al
  40ba5d:	outs   dx,BYTE PTR ds:[esi]
  40ba5e:	fimul  WORD PTR [eax]
  40ba60:	sar    BYTE PTR [ebx+eiz*2+0x7a2908d3],0x9
  40ba68:	cmp    eax,0x950be372
  40ba6d:	push   ds
  40ba6e:	retf   
  40ba6f:	sbb    DWORD PTR [ebp-0x39f62a94],esi
  40ba75:	ja     0x40ba7e
  40ba77:	and    DWORD PTR [ecx+0x60cae9c0],0x994d4ba4
  40ba81:	fcom   DWORD PTR [ebp-0xf2b0c7]
  40ba87:	cmc    
  40ba88:	dec    eax
  40ba89:	in     eax,dx
  40ba8a:	adc    BYTE PTR [edi],bh
  40ba8c:	sbb    ah,BYTE PTR [eax]
  40ba8e:	mov    eax,0xea2e86a4
  40ba93:	jnp    0x40ba5d
  40ba95:	mov    al,0x7b
  40ba97:	pop    ds
  40ba98:	cmp    al,BYTE PTR [eax-0x2f2188cf]
  40ba9e:	cmp    edx,DWORD PTR [edi-0x70]
  40baa1:	adc    eax,0xab57a463
  40baa6:	in     al,dx
  40baa7:	or     eax,0xc707c850
  40baac:	or     al,0xc7
  40baae:	ss jbe 0x40ba3b
  40bab1:	push   ecx
  40bab2:	daa    
  40bab3:	and    dl,BYTE PTR [edi]
  40bab5:	dec    bh
  40bab7:	jp     0x40bb28
  40bab9:	push   ecx
  40baba:	sub    al,0x92
  40babc:	scas   eax,DWORD PTR es:[edi]
  40babd:	test   DWORD PTR [edi],ebx
  40babf:	aas    
  40bac0:	add    DWORD PTR [ebx-0x60],ebx
  40bac3:	fldpi  
  40bac5:	inc    ebp
  40bac6:	inc    esp
  40bac7:	cli    
  40bac8:	dec    ebp
  40bac9:	sub    eax,0x4e21e6a5
  40bace:	dec    esi
  40bacf:	in     al,0xae
  40bad1:	dec    esi
  40bad2:	mov    edi,0x3379a673
  40bad7:	jne    0x40ba95
  40bad9:	mov    al,ds:0x5d8882a3
  40bade:	sar    BYTE PTR [eax-0x26],cl
  40bae1:	imul   esi,DWORD PTR [ebx-0x38007a74],0x60a2e7c3
  40baeb:	popa   
  40baec:	mov    DWORD PTR [edx-0xfd84ce9],edi
  40baf2:	add    DWORD PTR [ecx+edx*1],edx
  40baf5:	in     eax,0x59
  40baf7:	sub    dh,al
  40baf9:	es in  eax,0x98
  40bafc:	adc    BYTE PTR [edx],bh
  40bafe:	js     0x40bb40
  40bb00:	sub    BYTE PTR [eax+0x51197a19],bh
  40bb06:	pop    ecx
  40bb07:	das    
  40bb08:	cmp    eax,DWORD PTR [ebp+0x3c]
  40bb0b:	repnz fisttp QWORD PTR [edx]
  40bb0e:	jns    0x40bb51
  40bb10:	mov    ecx,0xa5501424
  40bb15:	and    DWORD PTR [esi],eax
  40bb17:	jge    0x40bb93
  40bb19:	inc    eax
  40bb1a:	enter  0xd87d,0xd3
  40bb1e:	sar    cl,0x40
  40bb21:	pop    ebx
  40bb22:	inc    edx
  40bb23:	inc    esi
  40bb24:	aas    
  40bb25:	gs push ebx
  40bb27:	pop    ss
  40bb28:	or     esp,ebx
  40bb2a:	pusha  
  40bb2b:	cmp    DWORD PTR [ebx],ebp
  40bb2d:	jnp    0x40bab1
  40bb2f:	clc    
  40bb30:	addr16 (bad) 
  40bb32:	idiv   DWORD PTR [ebp+0x58faadf5]
  40bb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb39:	retf   0x7bae
  40bb3c:	(bad)  
  40bb3d:	or     BYTE PTR ds:0x37e67158,dh
  40bb43:	sub    DWORD PTR [esi+0x152688a7],ebx
  40bb49:	sahf   
  40bb4a:	icebp  
  40bb4b:	push   cs
  40bb4c:	push   esi
  40bb4d:	xor    ebp,DWORD PTR [ebp+0x692ebafe]
  40bb53:	std    
  40bb54:	push   ebp
  40bb55:	outs   dx,BYTE PTR ds:[esi]
  40bb57:	and    DWORD PTR [esi+0x1f],ebx
  40bb5a:	mov    ah,0xca
  40bb5c:	lock call 0xde59a409
  40bb62:	lods   al,BYTE PTR ds:[esi]
  40bb63:	dec    eax
  40bb64:	jle    0x40bbdb
  40bb66:	je     0x40bbbd
  40bb68:	test   al,0xca
  40bb6a:	loop   0x40bb0b
  40bb6c:	jns    0x40bafa
  40bb6e:	add    al,0xcc
  40bb70:	jmp    0xbb6:0x3c5d2a80
  40bb77:	mov    cl,0x1
  40bb79:	add    DWORD PTR [esi-0x5f],ecx
  40bb7c:	jne    0x40bb78
  40bb7e:	xchg   ebx,eax
  40bb7f:	add    eax,0xcdbb15fb
  40bb84:	inc    ebp
  40bb85:	or     DWORD PTR [edi-0x10],0x15
  40bb89:	push   ds
  40bb8a:	imul   ebx,ebx,0xffffffcb
  40bb8d:	jg     0x40bb72
  40bb8f:	fnstcw WORD PTR [edx+0x33680821]
  40bb95:	or     ebx,DWORD PTR ds:0xe9d71ed7
  40bb9b:	test   BYTE PTR [esi],ch
  40bb9d:	adc    BYTE PTR [ebx-0x1b],bl
  40bba0:	sbb    eax,0x5f8d979b
  40bba5:	xor    eax,0x3e6936e2
  40bbaa:	scas   al,BYTE PTR es:[edi]
  40bbab:	adc    DWORD PTR [ecx],esp
  40bbad:	sub    ebp,DWORD PTR [esi-0x7442217]
  40bbb3:	fcomp  QWORD PTR [ebp+0x4c494e19]
  40bbb9:	rol    cl,1
  40bbbb:	test   BYTE PTR [ebx+0x6478df36],cl
  40bbc1:	cmp    cl,BYTE PTR [ebx+ebx*4+0x2d84ffac]
  40bbc8:	mov    ah,0x80
  40bbca:	mul    BYTE PTR [ebx]
  40bbcc:	clc    
  40bbcd:	repz imul edi,edx,0x47263fd7
  40bbd4:	xchg   ecx,eax
  40bbd5:	mov    ch,0xf4
  40bbd7:	inc    edx
  40bbd8:	cmp    al,0xc5
  40bbda:	lahf   
  40bbdb:	fdiv   QWORD PTR [ebx]
  40bbdd:	ins    BYTE PTR es:[edi],dx
  40bbde:	into   
  40bbdf:	add    edx,esi
  40bbe1:	out    0x8e,eax
  40bbe3:	sbb    esi,DWORD PTR [ebx+0x24]
  40bbe6:	sub    BYTE PTR [ebx+edi*8-0x5f7fcf2b],bh
  40bbed:	fadd   st,st(4)
  40bbef:	push   0x43
  40bbf1:	fldcw  WORD PTR [ebp+0x7e396ba8]
  40bbf7:	sbb    ebp,eax
  40bbf9:	inc    ebp
  40bbfa:	cmp    eax,0xf7cf79e9
  40bbff:	mov    al,ds:0xc7caaac6
  40bc04:	loop   0x40bbc3
  40bc06:	mov    edx,ebp
  40bc08:	adc    BYTE PTR ds:[edi+edx*1+0x2a058704],ch
  40bc10:	mov    ebp,0xcb16ee72
  40bc15:	mov    ch,0xcf
  40bc17:	jmp    0x2aa3635
  40bc1c:	mov    ecx,0x2e3bfd59
  40bc21:	ss into 
  40bc23:	nop
  40bc24:	mov    cs,WORD PTR [eax+0xb]
  40bc27:	jo     0x40bc93
  40bc29:	push   ebp
  40bc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2b:	and    esp,DWORD PTR [edx-0x24]
  40bc2e:	(bad)  
  40bc2f:	js     0x40bbbc
  40bc31:	jae    0x40bbbc
  40bc33:	pop    eax
  40bc34:	sub    al,0x20
  40bc36:	(bad)  
  40bc37:	jmp    0x40bbcd
  40bc39:	test   dl,bh
  40bc3b:	pop    edx
  40bc3c:	jae    0x40bc39
  40bc3e:	xchg   BYTE PTR [ecx-0x114a6b54],ah
  40bc44:	mov    edx,DWORD PTR [ebp+0x9]
  40bc47:	dec    edi
  40bc48:	fnsave [esi]
  40bc4a:	mov    ch,0x6a
  40bc4c:	and    al,BYTE PTR [edi-0x2f03f137]
  40bc52:	shl    DWORD PTR [edi+0x2a9daccf],0x89
  40bc59:	dec    ebp
  40bc5a:	stos   DWORD PTR es:[edi],eax
  40bc5b:	inc    esp
  40bc5c:	mov    edi,0x4ac2e154
  40bc61:	fsub   st,st(3)
  40bc63:	cmp    eax,0xf8bc2c12
  40bc68:	cld    
  40bc69:	cmc    
  40bc6a:	aas    
  40bc6b:	sbb    al,0x3f
  40bc6d:	push   eax
  40bc6e:	mov    esp,0x386b2fb9
  40bc73:	out    dx,eax
  40bc74:	outs   dx,BYTE PTR ds:[esi]
  40bc75:	jg     0x40bc09
  40bc77:	sub    al,bh
  40bc79:	rol    BYTE PTR [edi+0x46],cl
  40bc7c:	fdiv   st(7),st
  40bc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc7f:	ficom  DWORD PTR [esi+eax*2]
  40bc82:	pop    es
  40bc83:	xor    ch,dh
  40bc85:	in     eax,dx
  40bc86:	stc    
  40bc87:	jb     0x40bcb2
  40bc89:	cmp    esp,DWORD PTR [eax]
  40bc8b:	push   ss
  40bc8c:	retf   0xe91a
  40bc8f:	and    ebp,DWORD PTR [ebp-0x4b46ccf6]
  40bc95:	xchg   ebp,eax
  40bc96:	arpl   WORD PTR [ecx],bp
  40bc98:	and    BYTE PTR [esi+0x2fb6b1be],al
  40bc9e:	out    0x65,eax
  40bca0:	jb     0x40bc9c
  40bca2:	mov    eax,0x199dffbc
  40bca7:	mov    bh,0x17
  40bca9:	adc    al,0x50
  40bcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcac:	add    eax,0x310362aa
  40bcb1:	retw   0x23c5
  40bcb5:	lods   al,BYTE PTR ds:[esi]
  40bcb6:	popf   
  40bcb7:	push   es
  40bcb8:	outs   dx,BYTE PTR ds:[esi]
  40bcb9:	sub    DWORD PTR [ebx-0x3],0x85d3ffde
  40bcc0:	ss call 0xce6b6d4c
  40bcc6:	xchg   ebx,eax
  40bcc7:	lea    edi,[edx-0x2b]
  40bcca:	dec    ecx
  40bccb:	xor    BYTE PTR [eax],dh
  40bccd:	cdq    
  40bcce:	push   esi
  40bccf:	pop    es
  40bcd0:	mov    esp,0xd7638d00
  40bcd5:	out    dx,al
  40bcd6:	gs adc dl,dh
  40bcd9:	sub    DWORD PTR ds:0xf1708526,ecx
  40bcdf:	lock lods al,BYTE PTR ds:[esi]
  40bce1:	add    BYTE PTR [esi+0x4a4871ae],cl
  40bce7:	mov    ah,al
  40bce9:	loop   0x40bcdc
  40bceb:	add    al,0x4d
  40bced:	and    ebp,DWORD PTR [edi+eiz*2+0x7e3865c5]
  40bcf4:	inc    ebx
  40bcf5:	std    
  40bcf6:	repnz test al,0x40
  40bcf9:	jmp    0xf4c9b086
  40bcfe:	pop    ebx
  40bcff:	xor    cl,BYTE PTR [edx+edi*1+0x53aae73d]
  40bd06:	or     al,0xfd
  40bd08:	jae    0x40bd33
  40bd0a:	mov    dl,0xd6
  40bd0c:	sbb    eax,0x4d72e818
  40bd11:	jecxz  0x40bcb4
  40bd13:	stos   DWORD PTR es:[edi],eax
  40bd14:	cmp    al,0x5e
  40bd16:	mov    ah,0x12
  40bd19:	mov    cl,BYTE PTR [ecx+edx*2]
  40bd1c:	push   es
  40bd1d:	or     ch,BYTE PTR [ebp-0x5a]
  40bd20:	dec    bh
  40bd22:	pop    ebp
  40bd23:	fidivr WORD PTR [ebp+esi*1-0x611ad238]
  40bd2a:	xor    BYTE PTR [ecx],0x5a
  40bd2d:	ret    
  40bd2e:	ret    
  40bd2f:	aad    0x99
  40bd31:	inc    eax
  40bd32:	push   edi
  40bd33:	sti    
  40bd34:	sub    eax,0x339b560e
  40bd39:	out    0x50,eax
  40bd3b:	cmp    esi,edi
  40bd3d:	push   ds
  40bd3e:	test   dh,dl
  40bd40:	dec    ebp
  40bd41:	mov    ch,0xa0
  40bd43:	cdq    
  40bd44:	ret    
  40bd45:	push   esi
  40bd46:	lods   al,BYTE PTR ds:[esi]
  40bd47:	inc    ebp
  40bd48:	stos   BYTE PTR es:[edi],al
  40bd49:	jl     0x40bd14
  40bd4b:	mov    eax,ds:0xfb276f2f
  40bd50:	mov    ds:0x587f175,al
  40bd55:	call   0x9ed3df4b
  40bd5a:	loopne 0x40bcef
  40bd5c:	mov    edx,0x4a01b83c
  40bd61:	push   es
  40bd62:	mov    WORD PTR [esp+ecx*2+0x7fa20f02],gs
  40bd69:	jmp    0x2c9d:0x24d36a21
  40bd70:	lea    edx,[eax+0x18b9d4f5]
  40bd76:	mov    esi,0xd046964a
  40bd7b:	jno    0x40bd81
  40bd7d:	gs nop
  40bd7f:	das    
  40bd80:	test   al,0x19
  40bd82:	mov    esi,0xc4c5d1eb
  40bd87:	push   ebx
  40bd88:	popf   
  40bd89:	xor    edi,DWORD PTR [eax+0x18]
  40bd8c:	xchg   ecx,eax
  40bd8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd8e:	stc    
  40bd8f:	int    0x1c
  40bd91:	xor    edi,DWORD PTR [edx]
  40bd93:	das    
  40bd94:	jb     0x40bd38
  40bd96:	sub    ecx,DWORD PTR [eax+0x796946a8]
  40bd9c:	sbb    ah,BYTE PTR [edi+eiz*1]
  40bd9f:	popa   
  40bda0:	mov    eax,0x847e8be0
  40bda5:	jae    0x40be10
  40bda7:	pop    esi
  40bda8:	in     eax,dx
  40bda9:	push   0x29
  40bdab:	stc    
  40bdac:	aas    
  40bdad:	(bad)  
  40bdae:	int3   
  40bdaf:	mov    ds:0x9b410024,eax
  40bdb4:	adc    ch,BYTE PTR [ecx+0x5f]
  40bdb7:	add    DWORD PTR [esi-0x66],ebx
  40bdba:	cmc    
  40bdbb:	jl     0x40bd7e
  40bdbd:	pop    edx
  40bdbe:	leave  
  40bdbf:	cli    
  40bdc0:	outs   dx,DWORD PTR ds:[esi]
  40bdc1:	ins    BYTE PTR es:[edi],dx
  40bdc2:	test   al,0xa8
  40bdc4:	ror    DWORD PTR [edx-0x73a0ef83],0xaf
  40bdcb:	cmp    al,0x76
  40bdcd:	nop
  40bdce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdcf:	mov    eax,0xcccb3628
  40bdd4:	sub    eax,0xb1216aa9
  40bdd9:	pop    es
  40bdda:	pop    ebp
  40bddb:	pop    es
  40bddc:	inc    ebx
  40bddd:	nop
  40bdde:	cmp    edi,DWORD PTR [esi]
  40bde0:	push   0xffffffbf
  40bde2:	adc    BYTE PTR [bp+di+0x7c],dl
  40bde6:	dec    esi
  40bde7:	sbb    bl,BYTE PTR [ebp+0x14]
  40bdea:	sbb    bl,BYTE PTR [ebp+0x139e8b20]
  40bdf0:	mov    eax,ds:0xb617fc32
  40bdf5:	lds    esp,FWORD PTR [edx+edi*4-0x5e]
  40bdf9:	xchg   esi,eax
  40bdfa:	fist   WORD PTR [edx]
  40bdfc:	test   edx,eax
  40bdfe:	pop    ebp
  40bdff:	sti    
  40be00:	push   cs
  40be01:	xchg   edx,eax
  40be02:	mov    cl,0x36
  40be04:	adc    ebp,DWORD PTR [esi-0x57b447bc]
  40be0a:	hlt    
  40be0b:	jmp    0xf205:0x3364a7d4
  40be12:	(bad)  
  40be13:	fsubr  st,st(7)
  40be15:	xchg   DWORD PTR [eax],ecx
  40be17:	scas   eax,DWORD PTR es:[edi]
  40be18:	(bad)  
  40be19:	cmp    al,0x2
  40be1b:	fcomi  st,st(5)
  40be1d:	cs sbb eax,0x8209727b
  40be23:	xlat   BYTE PTR ds:[ebx]
  40be24:	dec    ecx
  40be25:	stos   BYTE PTR es:[edi],al
  40be26:	pop    esi
  40be27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be28:	jl     0x40be20
  40be2a:	inc    esi
  40be2b:	cmp    al,BYTE PTR [esi+0x6ecca889]
  40be31:	mov    esi,0xde588be0
  40be36:	push   es
  40be37:	mov    ds:0x4f185bcf,al
  40be3c:	add    eax,0x98064abe
  40be41:	cmc    
  40be42:	add    edi,DWORD PTR [esi+0x5ca34e25]
  40be48:	adc    al,BYTE PTR [esi-0x5379f474]
  40be4e:	pop    esp
  40be4f:	jno    0x40be90
  40be51:	stos   DWORD PTR es:[edi],eax
  40be52:	xchg   ecx,eax
  40be53:	and    al,0x6
  40be55:	sub    al,0xa2
  40be57:	jmp    0x64881d63
  40be5c:	nop
  40be5d:	jae    0x40beaa
  40be5f:	xor    edx,ebp
  40be61:	mov    bl,0x78
  40be63:	daa    
  40be64:	daa    
  40be65:	(bad)  
  40be67:	aam    0x13
  40be69:	clc    
  40be6a:	(bad)  
  40be6c:	ret    0x8393
  40be6f:	fmul   QWORD PTR [ebp+0x1ff1ab4e]
  40be75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be76:	push   ds
  40be77:	jns    0x40be57
  40be79:	xchg   edx,eax
  40be7a:	out    dx,al
  40be7b:	in     eax,dx
  40be7c:	out    dx,al
  40be7d:	pop    ds
  40be7e:	xchg   ebx,eax
  40be7f:	(bad)  
  40be80:	jno    0x40bede
  40be82:	cmp    eax,0x1c4d963
  40be87:	sub    ebx,DWORD PTR gs:[ebx-0x290d44fd]
  40be8e:	cmp    al,0xfb
  40be90:	push   0x4f5732eb
  40be95:	and    BYTE PTR [edx-0x7118d65f],bh
  40be9b:	addr16 adc cl,ah
  40be9e:	or     DWORD PTR [eax+0x47],ebx
  40bea1:	cli    
  40bea2:	push   esp
  40bea3:	pop    esp
  40bea4:	add    DWORD PTR [ecx+ecx*4-0x15],ebx
  40bea8:	add    BYTE PTR [esi],dh
  40beaa:	sbb    ebx,DWORD PTR [edi+0x24]
  40bead:	out    dx,eax
  40beae:	idiv   BYTE PTR [ebx+0x33db4a7e]
  40beb4:	sbb    dh,cl
  40beb6:	adc    eax,0x5c28bb9b
  40bebb:	sub    dh,BYTE PTR ds:[eax+ecx*2-0x26]
  40bec0:	fcomip st,st(6)
  40bec2:	xchg   ecx,eax
  40bec3:	mov    esp,ebp
  40bec5:	inc    ebx
  40bec6:	pop    edi
  40bec7:	push   edx
  40bec8:	ins    BYTE PTR es:[edi],dx
  40bec9:	jle    0x40be8b
  40becb:	loop   0x40bed6
  40becd:	xor    DWORD PTR [eax*8-0x54c3f6a0],0x9afed269
  40bed8:	adc    ebx,DWORD PTR [edx-0x40]
  40bedb:	xchg   edx,eax
  40bedc:	sti    
  40bedd:	div    ecx
  40bedf:	pop    ss
  40bee0:	or     DWORD PTR [eax+edx*8+0x1e],eax
  40bee4:	stc    
  40bee5:	cdq    
  40bee6:	div    BYTE PTR [edx]
  40bee8:	nop
  40bee9:	jl     0x40bf3b
  40beeb:	mov    ah,BYTE PTR [edi-0x7cb3d157]
  40bef1:	(bad)  
  40bef2:	fimul  WORD PTR [ebp+0x1b39015c]
  40bef8:	daa    
  40bef9:	out    dx,eax
  40befa:	push   esi
  40befb:	leave  
  40befc:	int    0x3
  40befe:	add    eax,0xf8894423
  40bf03:	jle    0x40bf62
  40bf05:	arpl   WORD PTR [ebx],si
  40bf07:	fisttp DWORD PTR [eiz*1+0x6aa055ac]
  40bf0e:	mov    cs,WORD PTR [eax+0x4c6d4b29]
  40bf14:	xlat   BYTE PTR ds:[ebx]
  40bf15:	shl    DWORD PTR [edi],cl
  40bf17:	xchg   ebp,eax
  40bf18:	repnz rol DWORD PTR [esi+0x1],1
  40bf1c:	data16 arpl WORD PTR [esi+0x48a323cc],ax
  40bf23:	ins    BYTE PTR es:[edi],dx
  40bf24:	fstp   st(5)
  40bf26:	xor    DWORD PTR [eax],ebp
  40bf28:	inc    ebp
  40bf29:	retf   0x35ef
  40bf2c:	add    DWORD PTR [eax],ebp
  40bf2e:	add    edi,DWORD PTR [edi]
  40bf30:	lock mov ebx,0xdc05eecd
  40bf36:	sbb    ebp,esp
  40bf38:	nop
  40bf39:	push   ebp
  40bf3a:	jne    0x40bfba
  40bf3c:	add    eax,0x22189195
  40bf41:	into   
  40bf42:	push   es
  40bf43:	pop    ds
  40bf44:	mov    ebx,0x8543740d
  40bf49:	inc    esi
  40bf4a:	xchg   BYTE PTR [ecx],al
  40bf4c:	and    cl,BYTE PTR [ecx+0x3d]
  40bf4f:	loopne 0x40bf6b
  40bf51:	stc    
  40bf52:	stos   DWORD PTR es:[edi],eax
  40bf53:	xchg   esi,eax
  40bf54:	enter  0x97ca,0xed
  40bf58:	sbb    DWORD PTR [ecx+edx*4-0x6103acaf],esi
  40bf5f:	enter  0x7544,0x57
  40bf63:	ins    BYTE PTR es:[edi],dx
  40bf64:	iret   
  40bf65:	mov    ch,0x2f
  40bf67:	or     ebp,edx
  40bf69:	adc    ch,BYTE PTR [ebx+0x29]
  40bf6c:	in     al,dx
  40bf6d:	xor    ah,BYTE PTR [ecx]
  40bf6f:	jle    0x40bf93
  40bf71:	and    BYTE PTR [ecx+0xce5b8a9],dh
  40bf77:	inc    edx
  40bf78:	adc    BYTE PTR ds:[ebp-0x66],al
  40bf7c:	pop    ebp
  40bf7d:	mov    eax,ds:0x6ecdaee1
  40bf82:	sbb    eax,0x6a0ae8fb
  40bf87:	loope  0x40bfb7
  40bf89:	or     bl,ah
  40bf8b:	jmp    0x19002569
  40bf90:	mov    bl,0x83
  40bf92:	ror    eax,1
  40bf94:	pminub mm0,QWORD PTR [ebp+0x23]
  40bf98:	(bad)  
  40bf99:	jp     0x40bfd3
  40bf9b:	imul   esi,ecx,0xffffffff
  40bf9e:	inc    esp
  40bf9f:	shl    bl,1
  40bfa1:	popa   
  40bfa2:	xor    al,0x96
  40bfa4:	dec    ecx
  40bfa5:	push   ss
  40bfa6:	jg     0x40bf30
  40bfa8:	jns    0x40bfec
  40bfaa:	jmp    0x100100c2
  40bfaf:	xchg   esi,eax
  40bfb0:	mov    ?,WORD PTR [edi]
  40bfb2:	ror    BYTE PTR [edi+0x7e632efd],cl
  40bfb8:	cli    
  40bfb9:	push   ds
  40bfba:	rcl    ebp,1
  40bfbc:	add    eax,0xa6d66e
  40bfc1:	and    DWORD PTR [ebp+edx*4-0x36],eax
  40bfc5:	and    al,0x7c
  40bfc7:	pop    esp
  40bfc8:	xchg   ecx,eax
  40bfc9:	jmp    0x97b2e002
  40bfce:	cmp    esi,edx
  40bfd0:	jns    0x40c013
  40bfd2:	mov    esp,0xaeb535de
  40bfd7:	or     eax,0x86650b0c
  40bfdc:	mov    ds:0x4c230ba9,al
  40bfe1:	pop    edi
  40bfe2:	nop
  40bfe3:	jmp    0x2d4f192e
  40bfe8:	mov    ds:0x35fbbde9,eax
  40bfed:	retf   
  40bfee:	mov    dh,BYTE PTR [edx]
  40bff0:	shl    DWORD PTR [esi+ebp*1+0x33713f3c],cl
  40bff7:	xor    BYTE PTR [edi+0x663b14e7],cl
  40bffd:	outs   dx,DWORD PTR ds:[esi]
  40bffe:	ret    
  40bfff:	shl    esp,cl
  40c001:	mov    edx,0x3ef641e7
  40c006:	sbb    BYTE PTR [edx-0x2e],ch
  40c009:	imul   esp,ecx,0x9a479b2e
  40c00f:	scas   al,BYTE PTR es:[edi]
  40c010:	int    0x8b
  40c012:	dec    ecx
  40c013:	mov    DWORD PTR [eax+0x23],ecx
  40c016:	fild   DWORD PTR [ebx]
  40c018:	inc    edx
  40c019:	fistp  DWORD PTR [esi+0x5160209]
  40c01f:	pop    DWORD PTR [edi+0x6f]
  40c022:	hlt    
  40c023:	(bad)  
  40c025:	test   al,0xd5
  40c027:	cmp    esi,DWORD PTR [eax-0x139d00bd]
  40c02d:	dec    ebp
  40c02e:	sub    edx,DWORD PTR [ecx+esi*4+0x45]
  40c032:	lock mov esi,0xcd8fb52a
  40c038:	sub    al,0xdf
  40c03a:	fisub  DWORD PTR [edi+edx*4+0x77c8e9d0]
  40c041:	mov    BYTE PTR [ecx+0x68],bl
  40c044:	pop    es
  40c045:	outs   dx,DWORD PTR ds:[esi]
  40c046:	pop    ebx
  40c047:	cmp    al,0x59
  40c049:	aad    0x36
  40c04b:	or     DWORD PTR [eax+0x6f],eax
  40c04e:	mov    bh,0x4e
  40c050:	sbb    cl,BYTE PTR [ebp+0x7c]
  40c053:	pop    ebp
  40c054:	or     al,0xa
  40c056:	jge    0x40c063
  40c058:	adc    esi,edx
  40c05a:	stos   BYTE PTR es:[edi],al
  40c05b:	imul   edx,DWORD PTR [edx-0x69],0x443a78ac
  40c062:	retf   0x9d55
  40c065:	aas    
  40c066:	retf   
  40c067:	add    eax,0x8d031dd
  40c06c:	dec    ebx
  40c06d:	pop    edx
  40c06e:	retf   0xc26
  40c071:	ret    0xf63f
  40c074:	mov    WORD PTR [ebx],fs
  40c076:	outs   dx,DWORD PTR ds:[esi]
  40c077:	lods   eax,DWORD PTR ds:[esi]
  40c078:	mov    al,ds:0x6d6437bf
  40c07d:	std    
  40c07e:	pop    ebx
  40c07f:	(bad)  
  40c080:	xor    ebx,eax
  40c082:	(bad)  
  40c083:	pop    esi
  40c084:	dec    ecx
  40c085:	push   ss
  40c086:	push   eax
  40c087:	sub    ecx,DWORD PTR [edi-0x67]
  40c08a:	mov    ebx,0x21eb705a
  40c08f:	scas   al,BYTE PTR es:[edi]
  40c090:	pop    esi
  40c091:	jno    0x40c070
  40c093:	and    ch,BYTE PTR [eax+0x7f9f3c66]
  40c099:	inc    edx
  40c09a:	inc    esi
  40c09b:	xor    eax,0xa1be975e
  40c0a0:	or     eax,0xb9ed9eb8
  40c0a5:	mov    edi,DWORD PTR [ecx+0x68]
  40c0a8:	pop    ebp
  40c0a9:	xchg   edx,eax
  40c0aa:	jge    0x40c06e
  40c0ac:	jle    0x40c115
  40c0ae:	add    eax,0x7983b567
  40c0b3:	lods   eax,DWORD PTR ds:[esi]
  40c0b4:	pop    ecx
  40c0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b6:	fbstp  TBYTE PTR [ebp+0x70de5f47]
  40c0bc:	pop    ebx
  40c0bd:	jb     0x40c0ee
  40c0bf:	test   BYTE PTR es:[edi+0x5d],bl
  40c0c3:	in     eax,dx
  40c0c4:	add    eax,0xd5aae0bd
  40c0c9:	popf   
  40c0ca:	daa    
  40c0cb:	adc    BYTE PTR [esi-0x42],ch
  40c0ce:	das    
  40c0cf:	fdivrp st(4),st
  40c0d1:	sub    BYTE PTR [esi],dh
  40c0d3:	and    al,0xdb
  40c0d5:	in     eax,dx
  40c0d6:	in     al,0x42
  40c0d8:	add    ebx,DWORD PTR gs:[ebx+0x7]
  40c0dc:	push   cs
  40c0dd:	fidiv  DWORD PTR [eax-0x13]
  40c0e0:	push   0x3c
  40c0e2:	add    DWORD PTR [edi],esp
  40c0e4:	push   ebp
  40c0e5:	or     BYTE PTR [esi+eax*4-0x53],dh
  40c0e9:	icebp  
  40c0ea:	or     DWORD PTR [ebx+edx*8+0xe62f433],ebx
  40c0f1:	adc    al,0x3f
  40c0f3:	ror    BYTE PTR [ebx],1
  40c0f5:	mov    ch,0x99
  40c0f7:	shr    DWORD PTR [esi+0x237fc82a],cl
  40c0fd:	dec    ebx
  40c0fe:	loopne 0x40c0ec
  40c100:	mov    ecx,0x4327026f
  40c105:	fxch   st(7)
  40c107:	lahf   
  40c108:	repz mov esi,0x82139a
  40c10e:	jg     0x40c092
  40c110:	dec    ebx
  40c111:	xchg   DWORD PTR [ebx+eax*8-0x27d04691],ebx
  40c118:	or     bl,bh
  40c11a:	scas   eax,DWORD PTR es:[edi]
  40c11b:	nop
  40c11c:	enter  0x808b,0xe0
  40c120:	in     eax,0x77
  40c122:	mov    WORD PTR [bp-0x2b],?
  40c126:	(bad)  
  40c127:	stc    
  40c128:	add    DWORD PTR [ebx],ebp
  40c12a:	and    al,0x74
  40c12c:	or     eax,0xd16f2309
  40c131:	push   esi
  40c132:	adc    DWORD PTR [esi],edx
  40c134:	push   ds
  40c135:	scas   eax,DWORD PTR es:[edi]
  40c136:	cmc    
  40c137:	jo     0x40c1b4
  40c139:	daa    
  40c13a:	scas   al,BYTE PTR es:[edi]
  40c13b:	loopne 0x40c1a3
  40c13d:	outs   dx,BYTE PTR ds:[esi]
  40c13e:	fist   DWORD PTR [ebx+edx*8+0x51]
  40c142:	push   edx
  40c143:	adc    DWORD PTR [edx-0xf5cb1ba],edx
  40c149:	(bad)  
  40c14a:	addr16 push ecx
  40c14c:	js     0x40c16c
  40c14e:	jp     0x40c109
  40c150:	fwait
  40c151:	jl     0x40c17e
  40c153:	sbb    dh,bh
  40c155:	lods   eax,DWORD PTR ds:[esi]
  40c156:	(bad)  
  40c158:	jo     0x40c17a
  40c15a:	mov    al,dl
  40c15c:	push   ebx
  40c15d:	add    DWORD PTR [ecx],ebx
  40c15f:	dec    esp
  40c160:	jns    0x40c1d9
  40c162:	lock xor bh,BYTE PTR [edi+eiz*8+0x249d8c1e]
  40c16a:	mov    dh,0xa4
  40c16c:	mov    ebx,0x4054a4a
  40c171:	sbb    edx,DWORD PTR [esi-0x38b08b0c]
  40c177:	or     DWORD PTR [eax],edx
  40c179:	popf   
  40c17a:	and    ch,BYTE PTR [ebp-0x34]
  40c17d:	loop   0x40c184
  40c17f:	dec    edx
  40c180:	jnp    0x40c19e
  40c182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c183:	add    ecx,0xe223ccc7
  40c189:	ss repz mov ah,0xf6
  40c18d:	mov    eax,ds:0x82a9f4c6
  40c192:	ja     0x40c13f
  40c194:	stc    
  40c195:	mov    ?,WORD PTR ds:0x8416cb79
  40c19b:	out    dx,eax
  40c19c:	sub    BYTE PTR [esi+0x51],dl
  40c19f:	stos   BYTE PTR es:[edi],al
  40c1a0:	mov    esi,0x4acae12f
  40c1a5:	ins    DWORD PTR es:[edi],dx
  40c1a6:	lock push edi
  40c1a8:	add    eax,0xdd751e13
  40c1ad:	stos   BYTE PTR es:[edi],al
  40c1ae:	adc    dl,BYTE PTR [edi]
  40c1b0:	pop    esi
  40c1b1:	xlat   BYTE PTR ds:[ebx]
  40c1b2:	push   esi
  40c1b3:	int    0x60
  40c1b5:	enter  0xcf12,0x7
  40c1b9:	inc    esi
  40c1ba:	jnp    0x40c15c
  40c1bc:	push   edx
  40c1bd:	mov    edi,0xecfb6aab
  40c1c2:	rcr    ah,cl
  40c1c4:	cld    
  40c1c5:	pop    edx
  40c1c6:	sbb    al,0xd3
  40c1c8:	fwait
  40c1c9:	or     al,0xaf
  40c1cb:	mov    edi,0xfa325ac8
  40c1d0:	mov    fs,WORD PTR [eax-0xe]
  40c1d3:	inc    edx
  40c1d4:	rol    BYTE PTR [eax],0xd9
  40c1d7:	int    0xd2
  40c1d9:	call   0x5528bfee
  40c1de:	and    al,0x85
  40c1e0:	inc    ecx
  40c1e1:	rol    edx,1
  40c1e3:	jno    0x40c209
  40c1e5:	into   
  40c1e6:	cmc    
  40c1e7:	xor    eax,DWORD PTR [ebp+0x67]
  40c1ea:	lods   eax,DWORD PTR ds:[esi]
  40c1eb:	retf   
  40c1ec:	push   edi
  40c1ed:	mov    DWORD PTR [edi],eax
  40c1ef:	cmp    esi,eax
  40c1f1:	(bad)  
  40c1f2:	fst    DWORD PTR [eax]
  40c1f4:	mov    ebp,0x86adea88
  40c1f9:	adc    al,BYTE PTR [eax-0x241c1aaa]
  40c1ff:	in     eax,dx
  40c200:	fld    QWORD PTR [edi+eax*2+0x32f39178]
  40c207:	sbb    BYTE PTR [edi],0x0
  40c20a:	dec    ebp
  40c20b:	mov    edi,0x8cc5b101
  40c210:	lea    eax,[ebp+0x390fba46]
  40c216:	mov    ds:0xdeeb11fc,al
  40c21b:	mov    ah,0xee
  40c21d:	iret   
  40c21e:	jb     0x40c26e
  40c220:	mov    esi,0xbdae5d37
  40c225:	into   
  40c226:	shl    BYTE PTR [edx+0x3871aa44],0xfd
  40c22d:	xchg   esp,eax
  40c22e:	jb     0x40c1c9
  40c230:	leave  
  40c231:	mov    ds:0x22cbb5ba,eax
  40c236:	lea    edi,[edx]
  40c238:	adc    BYTE PTR [edx-0x3b],bh
  40c23b:	stos   DWORD PTR es:[edi],eax
  40c23c:	xchg   esi,eax
  40c23d:	pop    es
  40c23e:	mov    eax,0x15d341ea
  40c243:	mov    cl,0x28
  40c245:	enter  0x4651,0x55
  40c249:	in     al,0x3e
  40c24b:	push   ebx
  40c24c:	xor    DWORD PTR [ebp+0x5c8f3bbc],esp
  40c252:	push   ecx
  40c253:	dec    ebp
  40c254:	mov    al,ds:0x8f192b9f
  40c259:	jno    0x40c29d
  40c25b:	not    DWORD PTR [ebx]
  40c25d:	(bad)  
  40c25e:	mov    bh,0x15
  40c260:	and    al,0xfa
  40c262:	jmp    0x2591:0xc57fdada
  40c269:	je     0x40c2df
  40c26b:	xchg   ch,al
  40c26d:	leave  
  40c26e:	add    esp,DWORD PTR [eax]
  40c270:	shl    DWORD PTR [edx],1
  40c272:	ror    BYTE PTR [edx],cl
  40c274:	cmp    ch,BYTE PTR [ebp-0x76a297f1]
  40c27a:	loope  0x40c21a
  40c27c:	mov    BYTE PTR [edi+0x162b6934],ah
  40c282:	cwde   
  40c283:	jle    0x40c233
  40c285:	out    dx,al
  40c286:	fild   QWORD PTR [edx-0x5e]
  40c289:	lahf   
  40c28a:	jp     0x40c233
  40c28c:	dec    edx
  40c28d:	xor    al,0x13
  40c28f:	test   DWORD PTR [esi-0x79d92b89],0x94097e93
  40c299:	es jge 0x40c2f7
  40c29c:	push   0x49
  40c29e:	std    
  40c29f:	push   0xfffffff5
  40c2a1:	pusha  
  40c2a2:	icebp  
  40c2a3:	adc    ah,ch
  40c2a5:	cdq    
  40c2a6:	jl     0x40c24e
  40c2a8:	xchg   DWORD PTR [edx+0x10],eax
  40c2ab:	push   0xffffffe6
  40c2ad:	jmp    edx
  40c2af:	inc    ebp
  40c2b0:	add    dh,al
  40c2b2:	mov    bl,0x6
  40c2b4:	xor    al,dl
  40c2b6:	mov    ah,0x26
  40c2b8:	and    BYTE PTR [edx+eiz*4-0x1e],ah
  40c2bc:	sub    ah,al
  40c2be:	dec    edx
  40c2bf:	addr16 mov eax,0x6547f987
  40c2c5:	jl     0x40c2df
  40c2c7:	ins    BYTE PTR es:[edi],dx
  40c2c8:	(bad)  
  40c2ca:	retf   
  40c2cb:	jnp    0x40c2d4
  40c2cd:	mov    edx,0x80cdd35e
  40c2d2:	sbb    edx,DWORD PTR [ebp+0x20b534c3]
  40c2d8:	push   ecx
  40c2d9:	daa    
  40c2da:	test   BYTE PTR [ebx+0x65ceb601],dh
  40c2e0:	pop    ss
  40c2e1:	adc    eax,0xf787adfc
  40c2e6:	out    dx,al
  40c2e7:	in     eax,0x71
  40c2e9:	and    dl,dl
  40c2eb:	cli    
  40c2ec:	jnp    0x40c277
  40c2ee:	(bad)  
  40c2ef:	and    bl,BYTE PTR [edi+0x34]
  40c2f2:	aam    0x53
  40c2f4:	pop    esp
  40c2f5:	sub    BYTE PTR [ebx+0x522bf696],0x63
  40c2fc:	mov    edi,0x3a225cea
  40c301:	ret    0xefff
  40c304:	lods   eax,DWORD PTR ds:[esi]
  40c305:	in     eax,0xfd
  40c307:	adc    DWORD PTR [ebx+0x76],ebx
  40c30a:	or     eax,0x1aef2660
  40c30f:	int3   
  40c310:	pop    esi
  40c311:	xor    edx,edi
  40c313:	addr16 push esp
  40c315:	imul   ecx,DWORD PTR [esi-0x10],0x69204d18
  40c31c:	nop
  40c31d:	ror    BYTE PTR [eax],0xfe
  40c320:	mov    dh,0x27
  40c322:	and    al,0xcb
  40c324:	mov    bl,0x7
  40c326:	pop    DWORD PTR [eax+esi*4+0x25]
  40c32a:	sub    DWORD PTR [ecx],eax
  40c32c:	jb     0x40c2c1
  40c32e:	push   es
  40c32f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c331:	stc    
  40c332:	sub    al,0x12
  40c334:	push   ds
  40c335:	mov    esp,0xe2e09386
  40c33a:	dec    esi
  40c33b:	mov    esp,0x743073e1
  40c340:	mov    ah,0x87
  40c342:	and    BYTE PTR [ebx+esi*2+0x476154ad],ch
  40c349:	push   ecx
  40c34a:	inc    esi
  40c34b:	jnp    0x40c352
  40c34d:	push   ebp
  40c34e:	push   DWORD PTR [edx-0x2c]
  40c351:	sub    dh,BYTE PTR [esp+eiz*8]
  40c354:	sbb    al,0xe9
  40c356:	sub    ebx,DWORD PTR [ecx]
  40c358:	dec    ebp
  40c359:	pop    edi
  40c35a:	(bad)  
  40c35b:	inc    ebp
  40c35c:	test   DWORD PTR [edx-0x4fb68bd],ebx
  40c362:	dec    ecx
  40c363:	jno    0x40c358
  40c365:	repz aas 
  40c367:	inc    esi
  40c368:	mov    ecx,0x10f3f1a1
  40c36d:	rol    BYTE PTR [eax-0x34],cl
  40c370:	dec    ebx
  40c371:	xor    eax,DWORD PTR ds:0x8644338d
  40c377:	inc    esp
  40c378:	out    0xd1,eax
  40c37a:	adc    eax,0xe4b30969
  40c37f:	inc    ecx
  40c380:	jmp    0x917747aa
  40c385:	ror    DWORD PTR [edi-0x28d7445c],0xdc
  40c38c:	ss cwde 
  40c38e:	adc    al,0xb6
  40c390:	call   0xc0d9a746
  40c395:	mov    al,0xf8
  40c397:	xchg   ebp,eax
  40c398:	loope  0x40c3fa
  40c39a:	(bad)  
  40c39b:	mov    ecx,0x22438e92
  40c3a0:	push   eax
  40c3a1:	xchg   ebx,eax
  40c3a2:	cmp    eax,0x92da209e
  40c3a7:	adc    dl,dl
  40c3a9:	pop    es
  40c3aa:	or     eax,DWORD PTR [edx+0x517ae8d2]
  40c3b0:	mov    al,ds:0xa5741651
  40c3b5:	or     eax,0x87b27634
  40c3ba:	js     0x40c3b3
  40c3bc:	enter  0x3f2f,0xcc
  40c3c0:	adc    BYTE PTR [eax+ebx*4-0x1a],bl
  40c3c4:	sub    eax,0x9bc1ba5
  40c3c9:	fbld   TBYTE PTR [edi+0x304b2d1d]
  40c3cf:	fwait
  40c3d0:	dec    eax
  40c3d1:	and    ebp,esi
  40c3d3:	cmp    BYTE PTR [ebx+0x65a9c910],bh
  40c3d9:	iret   
  40c3da:	sbb    eax,0x1f075a86
  40c3df:	imul   ebx,DWORD PTR [ecx-0x66],0x7f
  40c3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e4:	shr    BYTE PTR [edx],1
  40c3e6:	sub    al,0xd0
  40c3e8:	or     BYTE PTR [ecx+0x56],ah
  40c3eb:	xchg   ecx,eax
  40c3ec:	adc    DWORD PTR [edx+0x4d],0x176184ec
  40c3f3:	add    al,0x7e
  40c3f5:	xor    eax,0x79c9d374
  40c3fa:	cwde   
  40c3fb:	mov    bl,0xcd
  40c3fd:	push   ds
  40c3fe:	stos   DWORD PTR es:[edi],eax
  40c3ff:	cmp    al,0x6d
  40c401:	stos   DWORD PTR es:[edi],eax
  40c402:	dec    esi
  40c403:	gs bswap edx
  40c406:	sbb    DWORD PTR [edi],ebx
  40c408:	pop    eax
  40c409:	sti    
  40c40a:	dec    esp
  40c40b:	imul   eax,DWORD PTR [esi],0x5e85ca83
  40c411:	push   ds
  40c412:	mov    ah,0x80
  40c414:	fwait
  40c415:	mov    dl,0x2f
  40c417:	sub    dl,BYTE PTR [esi-0x4e]
  40c41a:	xlat   BYTE PTR ds:[ebx]
  40c41b:	jge    0x40c42c
  40c41d:	cli    
  40c41e:	xlat   BYTE PTR ds:[ebx]
  40c41f:	leave  
  40c420:	mov    BYTE PTR [ebx+edi*8+0x22bc329b],al
  40c427:	test   eax,ecx
  40c429:	mov    cl,0xb9
  40c42b:	xor    al,0xbf
  40c42d:	mov    al,ds:0x5fb4d09d
  40c432:	mov    bl,0x90
  40c434:	call   0x55df:0x1d0c336b
  40c43b:	les    ebx,FWORD PTR [ebx-0x20b41e91]
  40c441:	and    ebx,DWORD PTR [ebx-0x7ca6b417]
  40c447:	pushf  
  40c448:	inc    ebp
  40c449:	cs jl  0x40c3d9
  40c44c:	shl    DWORD PTR [eax+0x174b7c2d],1
  40c452:	arpl   WORD PTR [eax-0x3c2ced19],cx
  40c458:	jecxz  0x40c3e0
  40c45a:	xor    al,0x85
  40c45c:	mov    ebx,0x17a0c7b3
  40c461:	cmp    eax,esp
  40c463:	mov    ?,esp
  40c465:	test   BYTE PTR [ecx],dl
  40c467:	adc    ecx,DWORD PTR [ebp+0x46]
  40c46a:	pusha  
  40c46b:	popf   
  40c46c:	pop    esi
  40c46d:	mov    DWORD PTR [edx],0x78eb16f9
  40c473:	xchg   esi,eax
  40c474:	jnp    0x40c4ea
  40c476:	int    0x9f
  40c478:	aas    
  40c479:	dec    BYTE PTR [esi+0x6a]
  40c47c:	adc    esi,DWORD PTR [edx+0x6d]
  40c47f:	stos   DWORD PTR es:[edi],eax
  40c480:	je     0x40c4be
  40c482:	imul   edx,ebp,0xe16b552b
  40c488:	test   eax,0x10fb74fe
  40c48d:	xchg   esp,eax
  40c48e:	sahf   
  40c48f:	push   0xa5bfcabc
  40c494:	inc    eax
  40c495:	and    eax,0x76dd98f4
  40c49a:	cmp    eax,0xaa677eb6
  40c49f:	dec    ebp
  40c4a0:	fsub   QWORD PTR [ebp+edi*8-0x36]
  40c4a4:	adc    ah,BYTE PTR [ecx+0x2f5ca586]
  40c4aa:	cld    
  40c4ab:	adc    eax,0xc4ca45a1
  40c4b0:	push   edx
  40c4b1:	shl    BYTE PTR [esi-0x3a],0x17
  40c4b5:	sub    eax,0x8974b737
  40c4ba:	pop    eax
  40c4bb:	std    
  40c4bc:	xor    eax,0x5911603e
  40c4c1:	mov    bh,0x83
  40c4c3:	sub    DWORD PTR [esi],esi
  40c4c5:	inc    esp
  40c4c6:	push   0x2
  40c4c8:	xchg   DWORD PTR [edi+ebp*1+0x70f25503],esi
  40c4cf:	or     edx,DWORD PTR [ecx+0x75dd36a6]
  40c4d5:	inc    edx
  40c4d6:	inc    ecx
  40c4d7:	out    0x5b,eax
  40c4d9:	xchg   edi,eax
  40c4da:	and    ch,BYTE PTR [edi+esi*2+0x14282e02]
  40c4e1:	mov    cl,0x54
  40c4e3:	add    BYTE PTR [edi+0x62c5690b],cl
  40c4e9:	inc    esp
  40c4ea:	sub    eax,edi
  40c4ec:	cmp    BYTE PTR [ecx+0x4e],al
  40c4ef:	pusha  
  40c4f0:	daa    
  40c4f1:	dec    edx
  40c4f2:	sbb    eax,0x63855ab9
  40c4f7:	hlt    
  40c4f8:	jb     0x40c48f
  40c4fa:	jl     0x40c507
  40c4fc:	retf   
  40c4fd:	mov    WORD PTR ds:[edi-0x5a],?
  40c501:	xchg   edx,eax
  40c502:	cmp    al,0x16
  40c504:	jp     0x43ff4850
  40c50a:	out    0x25,eax
  40c50c:	xchg   esi,eax
  40c50d:	or     al,0x10
  40c50f:	xchg   edx,eax
  40c510:	cs inc eax
  40c512:	jns    0x40c54e
  40c514:	push   0xffffffdf
  40c516:	inc    edx
  40c517:	fwait
  40c518:	xor    al,BYTE PTR [edi+0x1d]
  40c51b:	xor    BYTE PTR [bp+di],al
  40c51e:	dec    ecx
  40c51f:	mov    al,0x53
  40c521:	and    ecx,DWORD PTR [edx-0x74]
  40c524:	xor    al,BYTE PTR [edx-0x73]
  40c527:	xor    DWORD PTR [ebx+ecx*2-0x37],edi
  40c52b:	xchg   ecx,eax
  40c52c:	nop
  40c52d:	dec    ecx
  40c52e:	pusha  
  40c52f:	sub    edi,ecx
  40c531:	jne    0x40c545
  40c533:	mov    ch,0x6d
  40c535:	xchg   esp,eax
  40c536:	test   eax,0xf9903f2c
  40c53b:	xor    cl,cl
  40c53d:	cmp    eax,0x9b79350a
  40c542:	subps  xmm1,XMMWORD PTR [edi-0x5efcdccb]
  40c549:	mov    esi,0x7729a816
  40c54e:	pop    ds
  40c54f:	inc    ebx
  40c550:	rcl    edx,1
  40c552:	scas   al,BYTE PTR es:[edi]
  40c553:	pop    esp
  40c554:	mov    ecx,0x9ac06f4e
  40c559:	sbb    DWORD PTR [edi-0x2d],ebp
  40c55c:	test   DWORD PTR [ebx-0x3a],esp
  40c55f:	test   DWORD PTR [eax+eiz*8],edx
  40c562:	lea    eax,[edx+0x2a]
  40c565:	mov    esi,0xf4ac38aa
  40c56a:	xor    eax,0x56141c7c
  40c56f:	ss mov ebx,0x646e8b02
  40c575:	mov    esi,0xa90842bc
  40c57a:	call   0x4f8d3b27
  40c57f:	das    
  40c580:	cmc    
  40c581:	sbb    al,0xcd
  40c583:	and    BYTE PTR [ebx+0x3e],dh
  40c586:	push   ebp
  40c587:	stc    
  40c588:	sub    BYTE PTR [ebp+eiz*8-0x3e],0x39
  40c58d:	sar    DWORD PTR [ecx-0x2319a3ba],cl
  40c593:	xor    ebp,edx
  40c595:	rcr    DWORD PTR [edx],0x6f
  40c598:	hlt    
  40c599:	adc    ebx,DWORD PTR [ecx+0x7c]
  40c59c:	test   al,0x5c
  40c59e:	aad    0xc9
  40c5a0:	mov    edi,0xfb8ee99f
  40c5a5:	outs   dx,BYTE PTR ds:[esi]
  40c5a6:	and    DWORD PTR [edi+0x24],ebp
  40c5a9:	in     eax,dx
  40c5aa:	and    dl,BYTE PTR [edx+0x1]
  40c5ad:	push   eax
  40c5ae:	mov    BYTE PTR [ecx+0x7],al
  40c5b1:	ins    BYTE PTR es:[edi],dx
  40c5b2:	stos   BYTE PTR es:[edi],al
  40c5b3:	xor    WORD PTR [ebx],bx
  40c5b6:	cmp    BYTE PTR [ebx+ecx*4],dl
  40c5b9:	mov    edi,0xe05b9a4a
  40c5be:	push   esp
  40c5bf:	mov    ah,0xb6
  40c5c1:	dec    esi
  40c5c2:	cli    
  40c5c3:	out    dx,al
  40c5c4:	xor    dh,BYTE PTR [edx+0x21]
  40c5c7:	fst    DWORD PTR [ebx+0x2daed593]
  40c5cd:	mov    ecx,DWORD PTR [esp-0x2]
  40c5d1:	rol    DWORD PTR [eax],0x2b
  40c5d4:	sub    BYTE PTR [eax+0x73],0x92
  40c5d8:	inc    edi
  40c5d9:	dec    esi
  40c5da:	ret    
  40c5db:	inc    esp
  40c5dc:	in     al,0x61
  40c5de:	fsub   st(4),st
  40c5e0:	fnstcw WORD PTR [ebp-0x243165b4]
  40c5e6:	sbb    DWORD PTR [edx+0x40c271ca],edi
  40c5ec:	shl    DWORD PTR [ebp+0x29],0xa6
  40c5f0:	mov    bl,0xed
  40c5f2:	iret   
  40c5f3:	xchg   esi,eax
  40c5f4:	ds (bad) 
  40c5f6:	mov    al,0x1b
  40c5f8:	mov    ds:0x5b7af1f3,al
  40c5fd:	imul   edx,DWORD PTR [eax+0x73],0x2035c31b
  40c604:	ss retf 
  40c606:	std    
  40c607:	retf   
  40c608:	mov    ecx,0x1cb0e173
  40c60d:	test   al,0x98
  40c60f:	inc    esp
  40c610:	inc    edx
  40c611:	test   al,0x78
  40c613:	les    esp,FWORD PTR [edx]
  40c615:	loop   0x40c5b1
  40c617:	int3   
  40c618:	or     bl,BYTE PTR [ecx-0x57]
  40c61b:	fiadd  DWORD PTR ds:0x6942b69b
  40c621:	lahf   
  40c622:	push   ebp
  40c623:	sbb    DWORD PTR [eax-0x322670f8],edi
  40c629:	jmp    0x84356354
  40c62e:	xor    BYTE PTR [esp+eax*8],dh
  40c631:	rol    DWORD PTR [edi+edi*4-0x25],0xd7
  40c636:	repnz (bad) 
  40c638:	and    BYTE PTR [ebx-0x1d53e723],cl
  40c63e:	lahf   
  40c63f:	in     eax,0xb1
  40c641:	push   ebp
  40c642:	ret    
  40c643:	call   0x9877:0xbf5b42e
  40c64a:	xchg   BYTE PTR cs:[ebx+0x13],dh
  40c64e:	mov    bl,0xe
  40c650:	inc    esi
  40c651:	into   
  40c652:	sahf   
  40c653:	mov    ebx,0x3646e878
  40c658:	add    BYTE PTR [edx+eax*1-0x55],ah
  40c65c:	dec    esp
  40c65d:	pop    es
  40c65e:	pusha  
  40c65f:	fcomip st,st(7)
  40c661:	sub    ah,BYTE PTR [ebx]
  40c663:	lds    esp,FWORD PTR [eax+esi*2+0x33]
  40c667:	adc    al,0xb7
  40c669:	in     al,0x4d
  40c66b:	inc    eax
  40c66c:	xor    ah,ch
  40c66e:	ins    BYTE PTR es:[edi],dx
  40c66f:	jmp    0x1fd0ba8
  40c674:	ss mov esi,0xde861437
  40c67a:	jmp    0x283b7d01
  40c67f:	mov    eax,ds:0xdca1b785
  40c684:	xchg   ebx,eax
  40c685:	dec    edi
  40c686:	repnz and DWORD PTR es:[ecx],ecx
  40c68a:	sbb    eax,0x29671c40
  40c68f:	sub    al,BYTE PTR [ebp+ecx*4-0x75bca0b3]
  40c696:	and    eax,0x19583390
  40c69b:	scas   al,BYTE PTR es:[edi]
  40c69c:	pop    edx
  40c69d:	pop    edi
  40c69e:	fidiv  WORD PTR [ecx-0x5313750f]
  40c6a4:	inc    ebp
  40c6a5:	or     al,0x93
  40c6a7:	scas   al,BYTE PTR es:[edi]
  40c6a8:	shl    DWORD PTR [edi],0xc
  40c6ab:	sti    
  40c6ac:	add    al,0xaf
  40c6ae:	retf   0x73ae
  40c6b1:	lahf   
  40c6b2:	std    
  40c6b3:	retf   0x1570
  40c6b6:	outs   dx,DWORD PTR ds:[esi]
  40c6b7:	and    eax,0xfbd61ca7
  40c6bc:	stc    
  40c6bd:	push   cs
  40c6be:	push   eax
  40c6bf:	mov    cl,0x6
  40c6c1:	push   es
  40c6c2:	in     al,dx
  40c6c3:	sbb    ah,BYTE PTR [eax-0x37486da]
  40c6c9:	pusha  
  40c6ca:	cmp    al,0xd2
  40c6cc:	sbb    al,0x89
  40c6ce:	imul   eax,DWORD PTR gs:[ecx+0xda11816],0xfffffff6
  40c6d6:	ret    
  40c6d7:	jae    0x40c725
  40c6d9:	nop
  40c6da:	adc    ebp,ebp
  40c6dc:	or     eax,0xcb630965
  40c6e1:	aad    0xbf
  40c6e3:	or     ebx,edx
  40c6e5:	fisub  DWORD PTR [ecx-0x33]
  40c6e8:	call   0xbba0300
  40c6ed:	and    ch,BYTE PTR [ebx+esi*1-0x4ce80db6]
  40c6f4:	xchg   BYTE PTR [ecx],bl
  40c6f6:	dec    edx
  40c6f7:	cld    
  40c6f8:	int3   
  40c6f9:	sub    eax,0x2789edcb
  40c6fe:	test   dh,bl
  40c700:	test   esi,ebp
  40c702:	retf   
  40c703:	stos   DWORD PTR es:[edi],eax
  40c704:	and    esi,DWORD PTR [edx-0x31]
  40c707:	cmp    DWORD PTR [edx+0xa],ecx
  40c70a:	cmp    DWORD PTR [eax-0x4a69f4b1],edx
  40c710:	out    0x1,eax
  40c712:	jns    0x40c741
  40c714:	xor    ah,BYTE PTR [ebx+ebp*8]
  40c717:	jnp    0x40c6bc
  40c719:	retf   0xac1b
  40c71c:	das    
  40c71d:	jbe    0x40c6fc
  40c71f:	outs   dx,DWORD PTR ds:[esi]
  40c720:	jae    0x40c797
  40c722:	imul   edi,ecx,0x9a041eb5
  40c728:	retf   
  40c729:	clts   
  40c72b:	cli    
  40c72c:	jg     0x40c775
  40c72e:	and    esi,DWORD PTR [edi+0x33]
  40c731:	f2xm1  
  40c733:	gs out 0x30,eax
  40c736:	mov    ah,0x83
  40c738:	adc    ecx,edx
  40c73a:	daa    
  40c73b:	mov    edi,0x1ce4d050
  40c740:	jns    0x40c744
  40c742:	mov    ss:0xc42eb298,eax
  40c748:	aam    0x50
  40c74a:	xchg   edx,eax
  40c74b:	mov    bh,0x1e
  40c74d:	jnp    0x40c7a6
  40c74f:	(bad)  
  40c750:	cli    
  40c751:	test   al,0x9d
  40c753:	pop    edi
  40c754:	es jo  0x40c78c
  40c757:	cmp    DWORD PTR [eax],edx
  40c759:	add    ecx,esp
  40c75b:	or     eax,0x2ee7dc16
  40c760:	or     ecx,ecx
  40c762:	or     BYTE PTR [ecx*4-0x3ac695e5],dh
  40c769:	mov    edx,0x4e3f546
  40c76e:	ins    BYTE PTR es:[edi],dx
  40c76f:	jb     0x40c7ea
  40c771:	and    BYTE PTR [esi+esi*4],bl
  40c774:	dec    ecx
  40c775:	xchg   ebx,eax
  40c776:	ret    0x1ddb
  40c779:	lock (bad) [edx-0xab17bb0]
  40c780:	mov    ch,0x9c
  40c782:	fwait
  40c783:	pushf  
  40c784:	call   0x862b:0x6e9267ce
  40c78b:	outs   dx,BYTE PTR ds:[esi]
  40c78c:	sub    BYTE PTR [eax+esi*1+0x285d2f9d],ch
  40c793:	sub    eax,0xf99e2b78
  40c798:	or     edx,DWORD PTR [edi+0x62]
  40c79b:	push   esp
  40c79c:	push   cs
  40c79d:	and    ebx,DWORD PTR [ebx+0x5f]
  40c7a0:	sub    ecx,DWORD PTR [ecx]
  40c7a2:	pop    ss
  40c7a3:	jae    0x40c726
  40c7a5:	(bad)  
  40c7a6:	out    0x53,al
  40c7a8:	xlat   BYTE PTR ds:[ebx]
  40c7a9:	inc    ecx
  40c7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ab:	adc    ch,BYTE PTR ds:0xd93796a3
  40c7b1:	xchg   ecx,eax
  40c7b2:	push   0x2d943e84
  40c7b7:	mov    edx,DWORD PTR ds:0x6cff4ba7
  40c7bd:	fs pushf 
  40c7bf:	outs   dx,DWORD PTR ds:[esi]
  40c7c0:	pop    ebx
  40c7c1:	cs mov esp,0x3abd9feb
  40c7c7:	and    ch,BYTE PTR [edi-0x63df951]
  40c7cd:	rcl    BYTE PTR [edx+eax*8+0x65b5c0ac],cl
  40c7d4:	iret   
  40c7d5:	jmp    0xa571118b
  40c7da:	fstp   QWORD PTR [ecx]
  40c7dc:	call   0x50774cd8
  40c7e1:	xchg   edx,eax
  40c7e2:	adc    dl,al
  40c7e4:	mov    al,0xaa
  40c7e6:	sub    al,0xef
  40c7e8:	inc    edx
  40c7e9:	mov    eax,0xac252ab0
  40c7ee:	fs in  al,dx
  40c7f0:	int3   
  40c7f1:	xor    eax,0xf370c54e
  40c7f6:	mov    bl,0x9
  40c7f8:	cli    
  40c7f9:	adc    eax,0x8361a3ec
  40c7fe:	adc    DWORD PTR [edi],ebx
  40c800:	int    0xd9
  40c802:	and    edi,DWORD PTR [edi+0x51]
  40c805:	fcomp  DWORD PTR [esi+0x225837c4]
  40c80b:	(bad)  [edi-0x6b]
  40c80e:	inc    esp
  40c80f:	repnz fwait
  40c811:	mov    bh,0x93
  40c813:	into   
  40c814:	and    ebp,DWORD PTR [esi+0xf]
  40c817:	inc    esi
  40c818:	jl     0x40c7f1
  40c81a:	jmp    0xe7ba:0x531b740a
  40c821:	imul   esp,DWORD PTR [edi+0x37190c52],0xffffffe1
  40c828:	inc    esi
  40c829:	(bad)  
  40c82a:	int    0xb3
  40c82c:	mov    ch,BYTE PTR [edx-0xd]
  40c82f:	pop    edx
  40c830:	arpl   WORD PTR [eax-0xa64a1d0],di
  40c836:	sub    eax,DWORD PTR [esi]
  40c838:	or     DWORD PTR [ecx-0x50],ebx
  40c83b:	dec    ecx
  40c83c:	xchg   esi,eax
  40c83d:	mov    esp,0x66d2b619
  40c842:	mov    ?,WORD PTR [edx+0xc72ab8]
  40c848:	sbb    eax,0xdcdbea70
  40c84d:	dec    ebx
  40c84e:	push   esp
  40c84f:	inc    eax
  40c850:	nop
  40c851:	dec    esp
  40c852:	inc    edx
  40c853:	sub    bh,bh
  40c855:	clc    
  40c856:	mov    dh,0x74
  40c858:	mov    dh,0x9d
  40c85a:	xchg   edx,eax
  40c85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c85c:	and    al,0xd1
  40c85e:	imul   eax,ebx,0x127ba5b1
  40c864:	adc    eax,0xbf18096f
  40c869:	push   ds
  40c86a:	sbb    eax,0xf9f7f11e
  40c86f:	mov    dh,0x1f
  40c871:	xor    ah,0xfb
  40c874:	pop    esi
  40c875:	inc    ebx
  40c876:	jmp    0xbb83:0xea28f23d
  40c87d:	push   0xe5e0ea36
  40c882:	fdivr  DWORD PTR [esp+ebx*8]
  40c885:	stos   DWORD PTR es:[edi],eax
  40c886:	lea    esi,[ebx-0x641ddc9d]
  40c88c:	(bad)  
  40c88d:	xor    dh,dl
  40c88f:	xchg   edi,eax
  40c890:	push   0x7
  40c892:	push   eax
  40c893:	jg     0x40c8ed
  40c895:	fcom   DWORD PTR [edx+0x2c26fe8a]
  40c89b:	retf   
  40c89c:	xor    eax,0x6d46ebf1
  40c8a1:	and    BYTE PTR [ebp+0x74],ah
  40c8a4:	mov    eax,ds:0xd75510db
  40c8a9:	jmp    0x5385a90f
  40c8ae:	push   esp
  40c8af:	test   eax,0x874a99d8
  40c8b4:	les    esi,FWORD PTR [esi]
  40c8b6:	cdq    
  40c8b7:	fidivr DWORD PTR [edx]
  40c8b9:	cmp    BYTE PTR [ebp+0xe],al
  40c8bc:	repnz leave 
  40c8be:	shl    DWORD PTR [edi+0x59],1
  40c8c1:	pusha  
  40c8c2:	push   0x889ea125
  40c8c7:	push   0x4e37c564
  40c8cc:	fnstenv [edi+0x57]
  40c8cf:	adc    eax,0x1bf64567
  40c8d4:	lock push eax
  40c8d6:	cmp    DWORD PTR [ebx+0x8384686],esp
  40c8dc:	test   eax,0x60d9174e
  40c8e1:	adc    al,0x32
  40c8e3:	loop   0x40c8b2
  40c8e5:	lods   eax,DWORD PTR ds:[esi]
  40c8e6:	cmp    edi,DWORD PTR [ecx-0x11]
  40c8e9:	adc    eax,DWORD PTR ds:0xe479
  40c8ee:	aaa    
  40c8ef:	fnstenv [ecx]
  40c8f1:	sbb    al,0x92
  40c8f3:	out    dx,eax
  40c8f4:	mov    ds:0xd7db45e4,al
  40c8f9:	mov    eax,0x4ed5a106
  40c8fe:	mov    ds:0x95d5c108,al
  40c903:	fcom   QWORD PTR [esi+0x75a2de53]
  40c909:	mov    WORD PTR [edx],ss
  40c90b:	in     eax,dx
  40c90c:	out    dx,eax
  40c90d:	call   0xa90f:0xbc14ab12
  40c914:	inc    al
  40c916:	jb     0x40c8dc
  40c918:	shl    BYTE PTR [ebp-0x62b0dd29],1
  40c91e:	mov    esi,0xc91cd97c
  40c923:	fcom   DWORD PTR [edi]
  40c925:	icebp  
  40c926:	in     al,dx
  40c927:	xchg   ebp,eax
  40c928:	fsub   QWORD PTR [eax+0x51]
  40c92b:	daa    
  40c92c:	hlt    
  40c92d:	mov    dl,0x15
  40c92f:	mov    dl,0xaa
  40c931:	mov    WORD PTR [edx+0x4452c1df],ds
  40c937:	in     al,dx
  40c938:	mov    WORD PTR [edx],cs
  40c93a:	lea    ecx,[ebp+0x6b478831]
  40c940:	fwait
  40c941:	lahf   
  40c942:	int3   
  40c943:	jmp    0xd265:0x52d2537a
  40c94a:	mov    eax,ds:0x9021c23f
  40c94f:	xchg   esi,eax
  40c950:	js     0x40c8e3
  40c952:	jns    0x40c907
  40c954:	in     eax,0xf6
  40c956:	loopne 0x40c996
  40c958:	jo     0x40c905
  40c95a:	pop    ds
  40c95b:	lods   eax,DWORD PTR ds:[esi]
  40c95c:	mov    dh,BYTE PTR [esi+edx*1]
  40c95f:	and    DWORD PTR [eax],ecx
  40c961:	pop    edi
  40c962:	xor    DWORD PTR fs:[ebx+0x4f],edx
  40c966:	sub    ebp,eax
  40c968:	pop    esp
  40c969:	sti    
  40c96a:	inc    edi
  40c96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c96c:	leave  
  40c96d:	mov    bh,0xd0
  40c96f:	push   0x9b7fe7ca
  40c974:	adc    al,0x97
  40c976:	or     ebp,DWORD PTR [edx]
  40c978:	enter  0x5016,0xaa
  40c97c:	pop    es
  40c97d:	imul   edx,DWORD PTR [ecx-0x46],0xffffffb9
  40c981:	xlat   BYTE PTR ds:[ebx]
  40c982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c983:	(bad)  
  40c984:	pop    esp
  40c985:	inc    eax
  40c986:	pop    ebp
  40c987:	push   esp
  40c988:	(bad)  
  40c989:	push   edi
  40c98a:	add    BYTE PTR ds:0x365a5528,0xff
  40c991:	test   BYTE PTR [ecx-0xcdfcb63],dl
  40c997:	aaa    
  40c998:	je     0x40c94e
  40c99a:	cli    
  40c99b:	jmp    0x40c96c
  40c99d:	(bad)  
  40c9a0:	neg    edi
  40c9a2:	iret   
  40c9a3:	sub    eax,0x348cca1a
  40c9a8:	sbb    eax,DWORD PTR [esi]
  40c9aa:	cmc    
  40c9ab:	pop    edi
  40c9ac:	outs   dx,BYTE PTR ds:[esi]
  40c9ad:	sub    eax,0x9a77d743
  40c9b2:	stos   BYTE PTR es:[edi],al
  40c9b3:	ds xor eax,0xcdb6aad5
  40c9b9:	xchg   edx,eax
  40c9ba:	aad    0x43
  40c9bc:	pop    ss
  40c9bd:	jne    0x40c9eb
  40c9bf:	or     DWORD PTR [edi-0x4f],0x33
  40c9c3:	(bad)  
  40c9c4:	dec    ebx
  40c9c5:	aam    0x6e
  40c9c7:	outs   dx,DWORD PTR ds:[esi]
  40c9c8:	jbe    0x40ca05
  40c9ca:	pop    edx
  40c9cb:	pop    ss
  40c9cc:	stos   DWORD PTR es:[edi],eax
  40c9cd:	mov    bl,0x39
  40c9cf:	test   DWORD PTR [edx],esp
  40c9d1:	pop    eax
  40c9d2:	ss or  al,0x4d
  40c9d5:	loop   0x40ca2d
  40c9d7:	scas   al,BYTE PTR es:[edi]
  40c9d8:	adc    DWORD PTR [esi+0xa],esp
  40c9db:	jo     0x40c9a2
  40c9dd:	clc    
  40c9de:	sahf   
  40c9df:	add    ax,WORD PTR [ebx-0x2]
  40c9e3:	popf   
  40c9e4:	(bad)  
  40c9e5:	sbb    al,0xad
  40c9e7:	(bad)  
  40c9e9:	out    0x86,al
  40c9eb:	and    DWORD PTR [ebp-0x1e],ebx
  40c9ee:	iret   
  40c9ef:	stos   BYTE PTR es:[edi],al
  40c9f0:	xchg   esi,eax
  40c9f1:	xlat   BYTE PTR ds:[ebx]
  40c9f2:	loop   0x40c980
  40c9f4:	inc    ebx
  40c9f5:	call   0x860251a9
  40c9fa:	shl    BYTE PTR [edi+0x4c],0xdb
  40c9fe:	dec    esp
  40c9ff:	cmp    esp,DWORD PTR [ecx-0x20]
  40ca02:	arpl   sp,sp
  40ca04:	je     0x40c999
  40ca06:	jnp    0x40ca4a
  40ca08:	pop    esi
  40ca09:	call   0x72c24abc
  40ca0e:	pusha  
  40ca0f:	gs inc edi
  40ca11:	adc    eax,0xaed5cf0f
  40ca16:	cmp    edx,DWORD PTR [ecx+0x5e68b4f9]
  40ca1c:	ins    BYTE PTR es:[edi],dx
  40ca1d:	stos   BYTE PTR es:[edi],al
  40ca1e:	xchg   esi,eax
  40ca1f:	push   es
  40ca20:	push   0xc633bcd8
  40ca25:	add    eax,edi
  40ca27:	cmp    edx,eax
  40ca29:	je     0x40cb90
  40ca2f:	mov    eax,DWORD PTR [ebp-0x8]
  40ca32:	mov    DWORD PTR [ebp-0x18],eax
  40ca35:	mov    eax,DWORD PTR [ebp-0x10]
  40ca38:	add    eax,DWORD PTR [ebp-0x54]
  40ca3b:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  40ca42:	mov    DWORD PTR [ebp-0x8],eax
  40ca45:	mov    eax,0xf89c85b1
  40ca4a:	mov    DWORD PTR [ebp-0x28],eax
  40ca4d:	mov    DWORD PTR [ebp-0x5c],0xf89c85b2
  40ca54:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40ca5b:	mov    DWORD PTR [ebp-0x30],eax
  40ca5e:	mov    eax,DWORD PTR [ebp-0x1c]
  40ca61:	xor    eax,esi
  40ca63:	add    eax,edi
  40ca65:	jmp    0x40cb4c
  40ca6a:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  40ca71:	mov    DWORD PTR [ebp-0x50],0xf89c858e
  40ca78:	mov    eax,DWORD PTR [ebp-0x30]
  40ca7b:	mov    edx,DWORD PTR [ebp-0xc]
  40ca7e:	xor    eax,esi
  40ca80:	add    eax,edi
  40ca82:	imul   eax,edx
  40ca85:	mov    edx,DWORD PTR [ebp-0x8]
  40ca88:	mov    al,BYTE PTR [eax+edx*1]
  40ca8b:	mov    BYTE PTR [ebp-0x1],al
  40ca8e:	mov    eax,DWORD PTR [ebp-0x30]
  40ca91:	mov    edx,DWORD PTR [ebp-0xc]
  40ca94:	xor    eax,esi
  40ca96:	add    eax,edi
  40ca98:	imul   eax,edx
  40ca9b:	mov    edx,DWORD PTR [ebp-0x5c]
  40ca9e:	xor    edx,esi
  40caa0:	add    eax,edx
  40caa2:	mov    edx,DWORD PTR [ebp-0x8]
  40caa5:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40caad:	mov    edx,DWORD PTR [ebp-0x4c]
  40cab0:	xor    edx,esi
  40cab2:	lea    eax,[edx+eax*1+0x3272ec]
  40cab9:	movzx  edx,BYTE PTR [ebp-0x1]
  40cabd:	xor    edx,eax
  40cabf:	mov    BYTE PTR [ebp-0x1],dl
  40cac2:	mov    al,BYTE PTR [ebp-0x1]
  40cac5:	mov    edx,DWORD PTR [ebp-0x30]
  40cac8:	mov    ebx,DWORD PTR [ebp-0xc]
  40cacb:	xor    edx,esi
  40cacd:	add    edx,edi
  40cacf:	imul   edx,ebx
  40cad2:	mov    ebx,DWORD PTR [ebp-0x8]
  40cad5:	mov    BYTE PTR [edx+ebx*1],al
  40cad8:	mov    eax,DWORD PTR [ebp-0x30]
  40cadb:	mov    edx,DWORD PTR [ebp-0xc]
  40cade:	xor    eax,esi
  40cae0:	add    eax,edi
  40cae2:	imul   eax,edx
  40cae5:	mov    edx,DWORD PTR [ebp-0x8]
  40cae8:	mov    al,BYTE PTR [eax+edx*1]
  40caeb:	mov    BYTE PTR [ebp-0x1],al
  40caee:	mov    eax,DWORD PTR [ebp-0x30]
  40caf1:	mov    edx,DWORD PTR [ebp-0xc]
  40caf4:	xor    eax,esi
  40caf6:	add    eax,edi
  40caf8:	imul   eax,edx
  40cafb:	mov    edx,DWORD PTR [ebp-0x28]
  40cafe:	xor    edx,esi
  40cb00:	add    eax,edx
  40cb02:	mov    edx,DWORD PTR [ebp-0x8]
  40cb05:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40cb0d:	mov    edx,DWORD PTR [ebp-0x50]
  40cb10:	xor    edx,esi
  40cb12:	lea    eax,[edx+eax*1+0x3272ec]
  40cb19:	movzx  edx,BYTE PTR [ebp-0x1]
  40cb1d:	xor    edx,eax
  40cb1f:	mov    BYTE PTR [ebp-0x1],dl
  40cb22:	mov    al,BYTE PTR [ebp-0x1]
  40cb25:	mov    edx,DWORD PTR [ebp-0x30]
  40cb28:	mov    ebx,DWORD PTR [ebp-0xc]
  40cb2b:	xor    edx,esi
  40cb2d:	add    edx,edi
  40cb2f:	imul   edx,ebx
  40cb32:	mov    ebx,DWORD PTR [ebp-0x8]
  40cb35:	mov    BYTE PTR [edx+ebx*1],al
  40cb38:	mov    eax,DWORD PTR [ebp-0x40]
  40cb3b:	mov    edx,DWORD PTR [ebp-0x28]
  40cb3e:	xor    eax,esi
  40cb40:	xor    edx,esi
  40cb42:	add    eax,edi
  40cb44:	add    edx,edi
  40cb46:	imul   eax,edx
  40cb49:	add    eax,DWORD PTR [ebp-0xc]
  40cb4c:	mov    DWORD PTR [ebp-0xc],eax
  40cb4f:	mov    eax,DWORD PTR [ebp-0xc]
  40cb52:	mov    edx,DWORD PTR [ebp-0x18]
  40cb55:	cmp    edx,eax
  40cb57:	jb     0x40ca6a
  40cb5d:	mov    eax,DWORD PTR [ebp-0x28]
  40cb60:	mov    edx,DWORD PTR [ebp-0x18]
  40cb63:	xor    eax,esi
  40cb65:	add    eax,edi
  40cb67:	imul   eax,edx
  40cb6a:	mov    edx,DWORD PTR [ebp-0x1c]
  40cb6d:	xor    edx,esi
  40cb6f:	add    edx,edi
  40cb71:	or     eax,edx
  40cb73:	mov    edx,DWORD PTR [ebp-0x20]
  40cb76:	xor    edx,esi
  40cb78:	add    eax,edx
  40cb7a:	mov    edx,DWORD PTR [ebp-0x20]
  40cb7d:	xor    edx,esi
  40cb7f:	add    eax,edx
  40cb81:	mov    edx,DWORD PTR [ebp-0x10]
  40cb84:	lea    eax,[eax+edx*1+0x64e5d8]
  40cb8b:	jmp    0x40cb9f
  40cb90:	mov    eax,DWORD PTR [ebp-0x20]
  40cb93:	mov    edx,DWORD PTR [ebp-0x10]
  40cb96:	xor    eax,esi
  40cb98:	lea    eax,[eax+edx*1+0x3272ec]
  40cb9f:	mov    DWORD PTR [ebp-0x10],eax
  40cba2:	jmp    0x4082ff
  40cba7:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cbaa:	mov    eax,DWORD PTR [ebp+0xc]
  40cbad:	xor    eax,esi
  40cbaf:	lea    ecx,[ecx+eax*1+0x3272ec]
  40cbb6:	lea    eax,[ecx-0x3272ec]
  40cbbc:	xor    eax,esi
  40cbbe:	cmp    eax,0xf89c95b0
  40cbc3:	jne    0x405f47
  40cbc9:	dec    DWORD PTR [ebp-0x34]
  40cbcc:	jne    0x405f3b
  40cbd2:	mov    eax,DWORD PTR [ebp+0x8]
  40cbd5:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edx,DWORD PTR [ebp+0x8]
  40cbdb:	xor    ecx,esi
  40cbdd:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ec]
  40cbe4:	xor    eax,esi
  40cbe6:	mov    al,BYTE PTR [eax+ebx*1+0x3272ec]
  40cbed:	xor    edx,esi
  40cbef:	mov    BYTE PTR [edx+ebx*1+0x3272ec],cl
  40cbf6:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbf9:	xor    ecx,esi
  40cbfb:	mov    BYTE PTR [ecx+ebx*1+0x3272ec],al
  40cc02:	mov    eax,DWORD PTR [ebp+0xc]
  40cc05:	xor    eax,esi
  40cc07:	add    eax,edi
  40cc09:	pop    edi
  40cc0a:	pop    esi
  40cc0b:	pop    ebx
  40cc0c:	leave  
  40cc0d:	ret    0x8
  40cc10:	xor    eax,eax
  40cc12:	inc    eax
  40cc13:	ret    
  40cc14:	push   ebp
  40cc15:	mov    ebp,esp
  40cc17:	sub    esp,0x38
  40cc1a:	mov    eax,ds:0x42d01c
  40cc1f:	sbb    DWORD PTR ds:0x42c014,eax
  40cc25:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  40cc2c:	add    eax,DWORD PTR ds:0x429018
  40cc32:	push   ebx
  40cc33:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  40cc3a:	xor    DWORD PTR ds:0x42a014,ebx
  40cc40:	mov    eax,DWORD PTR [ebp-0x4]
  40cc43:	push   esi
  40cc44:	mov    esi,DWORD PTR ds:0x429020
  40cc4a:	or     esi,DWORD PTR ds:0x42d01c
  40cc50:	mov    DWORD PTR ds:0x429020,esi
  40cc56:	mov    esi,0x75108a4
  40cc5b:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40cc65:	xor    eax,esi
  40cc67:	and    DWORD PTR ds:0x429014,0x42c01c
  40cc71:	push   edi
  40cc72:	mov    edi,0x3272ec
  40cc77:	add    eax,edi
  40cc79:	or     DWORD PTR ds:0x42b014,0x42a008
  40cc83:	mov    DWORD PTR [ebp-0x1c],eax
  40cc86:	sub    eax,DWORD PTR ds:0x42900c
  40cc8c:	mov    eax,DWORD PTR [ebp+0x14]
  40cc8f:	sbb    DWORD PTR ds:0x42c010,0x42d01c
  40cc99:	test   eax,eax
  40cc9b:	mov    DWORD PTR ds:0x42d018,0x202a
  40cca5:	je     0x40ccb9
  40ccab:	mov    eax,DWORD PTR [ebp+0x14]
  40ccae:	adc    ebx,0xa49
  40ccb4:	mov    eax,DWORD PTR [eax]
  40ccb6:	mov    DWORD PTR [ebp-0x1c],eax
  40ccb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbc:	sub    ebx,0x2794
  40ccc2:	xor    eax,esi
  40ccc4:	mov    DWORD PTR ds:0x42c008,0x10
  40ccce:	cmp    DWORD PTR ds:0x42c008,0x0
  40ccd5:	je     0x40cd41
  40ccdb:	cmp    DWORD PTR ds:0x42c008,0x9
  40cce2:	jl     0x40cd41
  40cce8:	jmp    0x40cd13
  40cced:	push   0x3f9f
  40ccf2:	push   DWORD PTR [ebp-0x20]
  40ccf5:	push   DWORD PTR [ebp-0x24]
  40ccf8:	push   0x35ef
  40ccfd:	push   DWORD PTR [ebp-0x1c]
  40cd00:	push   DWORD PTR [ebp-0x14]
  40cd03:	push   0x24ee
  40cd08:	push   0x42f016
  40cd0d:	call   DWORD PTR ds:0x430047
  40cd13:	cmp    DWORD PTR ds:0x42c008,0xa
  40cd1a:	jne    0x40cd2f
  40cd20:	xor    ebx,ebx
  40cd22:	add    ebx,DWORD PTR ds:0x42c008
  40cd28:	dec    ebx
  40cd29:	mov    DWORD PTR ds:0x42c008,ebx
  40cd2f:	mov    ebx,DWORD PTR ds:0x42c008
  40cd35:	dec    ebx
  40cd36:	mov    DWORD PTR ds:0x42c008,ebx
  40cd3c:	jmp    0x40ccce
  40cd41:	add    eax,edi
  40cd43:	adc    ebx,0x57bc
  40cd49:	mov    DWORD PTR [ebp-0x8],eax
  40cd4c:	add    DWORD PTR ds:0x42a018,edi
  40cd52:	mov    eax,DWORD PTR [ebp-0xc]
  40cd55:	xor    eax,esi
  40cd57:	add    DWORD PTR ds:0x42c008,ebx
  40cd5d:	add    eax,edi
  40cd5f:	mov    DWORD PTR [ebp-0x24],eax
  40cd62:	mov    eax,ds:0x42a018
  40cd67:	add    DWORD PTR ds:0x42c000,eax
  40cd6d:	mov    eax,DWORD PTR [ebp-0x4]
  40cd70:	xor    DWORD PTR ds:0x429020,edi
  40cd76:	xor    eax,esi
  40cd78:	add    eax,edi
  40cd7a:	or     DWORD PTR ds:0x42b010,edx
  40cd80:	mov    DWORD PTR [ebp-0x30],eax
  40cd83:	mov    ebx,DWORD PTR [ebp-0x4]
  40cd86:	add    DWORD PTR ds:0x429018,0xc83
  40cd90:	jmp    0x40f126
  40cd95:	inc    edx
  40cd96:	mov    cl,dl
  40cd98:	rol    DWORD PTR [edx+0x31793981],0x8f
  40cd9f:	sti    
  40cda0:	jne    0x40cd9a
  40cda2:	stos   DWORD PTR es:[edi],eax
  40cda3:	js     0x40cde0
  40cda5:	inc    edi
  40cda6:	retf   0x7a7a
  40cda9:	add    eax,0xae7a7a5f
  40cdae:	adc    cl,BYTE PTR [ebx]
  40cdb0:	movd   DWORD PTR [ebx],mm4
  40cdb3:	jbe    0x40cdfa
  40cdb5:	pushf  
  40cdb6:	fnstcw WORD PTR [edx-0x1c0f6790]
  40cdbc:	test   al,0x6d
  40cdbe:	push   esi
  40cdbf:	sub    ebx,DWORD PTR [eax-0x1a4ebe30]
  40cdc5:	jne    0x40cd7c
  40cdc7:	and    esi,ebp
  40cdc9:	xchg   ecx,eax
  40cdca:	mov    ebp,0x177b9ec9
  40cdcf:	ds cld 
  40cdd1:	sbb    DWORD PTR [esi+0x19],ebx
  40cdd4:	inc    ecx
  40cdd5:	fist   DWORD PTR [edi+0x3c]
  40cdd8:	mov    al,ds:0x6efa4cc9
  40cddd:	pop    edx
  40cdde:	xor    DWORD PTR [edx],ebx
  40cde0:	jnp    0x40ce0e
  40cde2:	push   esp
  40cde3:	aas    
  40cde4:	xor    eax,DWORD PTR [edx+0x792d26ec]
  40cdea:	pop    esp
  40cdeb:	jl     0x40cde4
  40cded:	out    0xd7,eax
  40cdef:	push   edx
  40cdf0:	jnp    0x40cdf7
  40cdf2:	dec    ebx
  40cdf3:	icebp  
  40cdf4:	in     al,0xa0
  40cdf6:	jl     0x40cde5
  40cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdf9:	cwde   
  40cdfa:	ja     0x40ce07
  40cdfc:	adc    esp,0xffffffd8
  40cdff:	push   es
  40ce00:	(bad)  
  40ce01:	xor    BYTE PTR [edi+edi*2],ah
  40ce04:	jne    0x40cda4
  40ce06:	dec    edx
  40ce07:	mov    ch,0x35
  40ce09:	ffreep st(6)
  40ce0b:	or     BYTE PTR [ebp-0x60c280d3],bh
  40ce11:	sub    dl,BYTE PTR [eax-0x6cd63091]
  40ce17:	pop    edx
  40ce18:	retf   
  40ce19:	loope  0x40cdb8
  40ce1b:	jle    0x40cdbb
  40ce1d:	jle    0x40ce93
  40ce1f:	(bad)  [edi-0x25]
  40ce22:	enter  0x8f1e,0xd9
  40ce26:	hlt    
  40ce27:	imul   ebp,esi,0x7afd235a
  40ce2d:	lods   al,BYTE PTR ds:[esi]
  40ce2e:	test   esp,ebx
  40ce30:	fistp  WORD PTR [edx-0x507420b2]
  40ce36:	mov    edx,gs
  40ce38:	dec    esi
  40ce39:	ds jg  0x40ce1c
  40ce3c:	xlat   BYTE PTR ds:[ebx]
  40ce3d:	add    bh,al
  40ce3f:	cmp    cl,BYTE PTR [edx+0x8f17d11]
  40ce45:	pop    ds
  40ce46:	es dec ecx
  40ce48:	and    DWORD PTR [esi-0x27],0x7d8d966d
  40ce4f:	push   esp
  40ce50:	pop    ebp
  40ce51:	xor    bl,BYTE PTR [edx]
  40ce53:	sub    eax,0xad112c82
  40ce58:	mov    esp,0xed06b017
  40ce5d:	and    WORD PTR ss:[edx-0x73],sp
  40ce62:	inc    edi
  40ce63:	cmp    eax,0xf35e6f30
  40ce68:	mov    edx,0xab8cb51b
  40ce6d:	or     BYTE PTR [ebp-0x58e30d75],al
  40ce73:	adc    BYTE PTR [edi-0x45cbdb1e],ah
  40ce79:	pop    edx
  40ce7a:	mov    fs,eax
  40ce7c:	and    al,0xe3
  40ce7e:	aas    
  40ce7f:	jbe    0x40cee6
  40ce81:	push   0x67
  40ce83:	in     al,0xf2
  40ce85:	aam    0x28
  40ce87:	dec    ecx
  40ce88:	lock sub al,0xd9
  40ce8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8c:	fwait
  40ce8d:	cmp    al,0xb4
  40ce8f:	dec    edx
  40ce90:	xchg   BYTE PTR [ebp+0x4e],al
  40ce93:	dec    edi
  40ce94:	dec    edi
  40ce95:	inc    edx
  40ce96:	lea    ecx,[edi-0x2d]
  40ce99:	outs   dx,DWORD PTR ds:[esi]
  40ce9a:	lods   eax,DWORD PTR ds:[esi]
  40ce9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce9c:	push   0x1e
  40ce9e:	or     BYTE PTR [ebp+0x7feacf9],dh
  40cea4:	cmp    ebp,eax
  40cea6:	fist   WORD PTR [ebx]
  40cea8:	adc    al,0xb1
  40ceaa:	cld    
  40ceab:	jg     0x40cf07
  40cead:	sbb    DWORD PTR [ebp+0x17],0xffffff9f
  40ceb1:	(bad)  
  40ceb2:	push   edi
  40ceb3:	mov    edi,0x37376309
  40ceb8:	or     BYTE PTR [esi+eax*1-0x3e50ecce],bl
  40cebf:	hlt    
  40cec0:	(bad)  [ecx+0x389b9eed]
  40cec6:	fimul  DWORD PTR [edx-0x71]
  40cec9:	not    DWORD PTR [edx-0x38871b84]
  40cecf:	aaa    
  40ced0:	popa   
  40ced1:	pop    ss
  40ced2:	aas    
  40ced3:	sub    eax,0x56f1f176
  40ced8:	xor    eax,0xb8bb2582
  40cedd:	sar    DWORD PTR [edx+0x7e],1
  40cee0:	mov    edi,0x2502b94b
  40cee5:	cmp    DWORD PTR [eax+0x47b0cab8],ebp
  40ceeb:	pushf  
  40ceec:	rol    cl,cl
  40ceee:	(bad)  
  40ceef:	rcr    BYTE PTR [ecx+ecx*8],1
  40cef2:	cdq    
  40cef3:	dec    edx
  40cef4:	mov    esp,0x1d32cf63
  40cef9:	inc    edi
  40cefa:	mov    edi,0x97eea9d
  40ceff:	dec    edi
  40cf00:	jnp    0x40cefc
  40cf02:	in     eax,dx
  40cf03:	pop    edi
  40cf04:	int    0x10
  40cf06:	(bad)  
  40cf07:	data16 or al,0x3a
  40cf0a:	aad    0x41
  40cf0c:	adc    BYTE PTR [esi-0xf],bh
  40cf0f:	call   0xfbc0:0x5e62caa6
  40cf16:	pushf  
  40cf17:	jg     0x40cf62
  40cf19:	test   DWORD PTR [ebx],edx
  40cf1b:	add    al,0x55
  40cf1d:	xchg   ebx,eax
  40cf1e:	adc    bh,BYTE PTR [edx+0xa]
  40cf21:	mov    ebx,0xec125ec6
  40cf26:	pop    ss
  40cf27:	xor    ch,al
  40cf29:	retf   
  40cf2a:	dec    ecx
  40cf2b:	add    eax,0x18993288
  40cf30:	mov    ds:0xb8a5f969,al
  40cf35:	inc    edx
  40cf36:	dec    edx
  40cf37:	sbb    DWORD PTR [edx],edx
  40cf39:	adc    ebp,DWORD PTR [ebx]
  40cf3b:	sub    al,0xb1
  40cf3d:	push   esi
  40cf3e:	js     0x40cf73
  40cf40:	div    BYTE PTR [ebp-0x2af8df7c]
  40cf46:	and    eax,ecx
  40cf48:	xchg   BYTE PTR [ecx],bh
  40cf4a:	mov    eax,0x9a08a61b
  40cf4f:	mov    dl,BYTE PTR [edx]
  40cf51:	ins    DWORD PTR es:[edi],dx
  40cf52:	inc    edx
  40cf53:	sbb    BYTE PTR [ebp-0x25],al
  40cf56:	test   BYTE PTR [edx],0x1c
  40cf59:	push   edx
  40cf5a:	fst    QWORD PTR [edi+0x65]
  40cf5d:	adc    BYTE PTR [eax],dh
  40cf5f:	add    al,0x38
  40cf61:	aaa    
  40cf62:	xchg   ebx,eax
  40cf63:	sar    DWORD PTR [edi+0x5],1
  40cf66:	inc    edi
  40cf67:	pop    ds
  40cf68:	sbb    eax,edx
  40cf6a:	mov    ah,0xe2
  40cf6c:	mov    dh,0x85
  40cf6e:	jnp    0x40cf00
  40cf70:	jno    0x40cfa0
  40cf72:	mov    ah,0xc5
  40cf74:	cmp    cl,BYTE PTR [eax+esi*1+0xa]
  40cf78:	(bad)  
  40cf7a:	scas   eax,DWORD PTR es:[edi]
  40cf7b:	call   0xfff1:0xd9a2876
  40cf82:	lods   eax,DWORD PTR ds:[esi]
  40cf83:	jmp    0xf0bf4dc1
  40cf88:	hlt    
  40cf89:	stc    
  40cf8a:	clc    
  40cf8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf8c:	mov    bl,0x6c
  40cf8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf8f:	pop    edx
  40cf90:	test   al,0xfa
  40cf92:	cmp    eax,0x2e23842a
  40cf97:	in     al,0xce
  40cf99:	jmp    DWORD PTR [edx-0x61]
  40cf9c:	push   ebx
  40cf9d:	jb     0x40cfa4
  40cf9f:	push   ebp
  40cfa0:	lock jno 0x40cf92
  40cfa3:	aam    0x45
  40cfa5:	jmp    0x1715f7f5
  40cfaa:	and    eax,0xd53fd5f7
  40cfaf:	icebp  
  40cfb0:	mov    bl,0xb0
  40cfb2:	xor    ah,dh
  40cfb4:	and    DWORD PTR [esi+0x6b],0xffffffa0
  40cfb8:	jae    0x40cf7a
  40cfba:	jo     0x40cf81
  40cfbc:	push   esp
  40cfbd:	xor    eax,0xe9b1018a
  40cfc2:	addr16 sub esp,esp
  40cfc5:	mov    al,0x6b
  40cfc7:	push   0xffffffe0
  40cfc9:	sub    al,0x16
  40cfcb:	push   0x381a4792
  40cfd0:	stc    
  40cfd1:	or     ah,BYTE PTR [ebx]
  40cfd3:	mov    cl,0xd0
  40cfd5:	pop    es
  40cfd6:	gs (bad) 
  40cfd9:	std    
  40cfda:	iret   
  40cfdb:	xchg   BYTE PTR ss:[ebx+0x52],dl
  40cfdf:	je     0x40d047
  40cfe1:	sbb    edx,DWORD PTR [esi+0x1b]
  40cfe4:	pop    ss
  40cfe5:	out    0x31,al
  40cfe7:	mov    esi,0xfb6a73e7
  40cfec:	cmp    bl,BYTE PTR ds:0xdd8cdb7c
  40cff2:	jmp    0x59e9:0x271d964
  40cff9:	fsub   QWORD PTR [esi-0x7198d250]
  40cfff:	(bad)  
  40d000:	or     al,0x9a
  40d002:	add    ecx,DWORD PTR [ebp-0x3df2127b]
  40d008:	lea    ecx,[ebx-0xdfaffa3]
  40d00e:	jne    0x40d07f
  40d010:	int3   
  40d011:	enter  0x2e58,0xa0
  40d015:	popa   
  40d016:	mov    ch,ah
  40d018:	enter  0x1840,0x20
  40d01c:	mov    ebx,0x6a6bca01
  40d021:	pop    esi
  40d022:	sbb    DWORD PTR gs:[ecx],0x196449a6
  40d029:	inc    ecx
  40d02a:	sub    BYTE PTR [edi-0x67],bl
  40d02d:	imul   ecx,ebp,0x52e2e654
  40d033:	scas   al,BYTE PTR es:[edi]
  40d034:	sub    ah,BYTE PTR [ecx-0x6]
  40d037:	and    al,0xbc
  40d039:	sub    eax,0xb4cc43
  40d03e:	test   DWORD PTR [edx-0x35],edx
  40d041:	push   ebx
  40d042:	lods   al,BYTE PTR ds:[esi]
  40d043:	ins    BYTE PTR es:[edi],dx
  40d044:	or     eax,0x1c811679
  40d049:	lock inc edi
  40d04b:	sub    esi,esp
  40d04d:	retf   
  40d04e:	xchg   DWORD PTR [eax+0x311b54c3],edi
  40d054:	pusha  
  40d055:	add    al,0x99
  40d057:	ins    BYTE PTR es:[edi],dx
  40d058:	and    al,0x7b
  40d05a:	pop    es
  40d05b:	mov    ah,0xc9
  40d05d:	xchg   BYTE PTR [esi+0x1c],al
  40d060:	aad    0x96
  40d062:	xor    BYTE PTR [ebp+0x2d],ch
  40d065:	jge    0x40d08a
  40d067:	xchg   edx,eax
  40d068:	sub    ebp,DWORD PTR [ebp-0x70]
  40d06b:	fist   DWORD PTR [esi]
  40d06d:	cmp    al,0x7
  40d06f:	call   0xdf1bf96b
  40d074:	xchg   ecx,eax
  40d075:	ss dec edi
  40d077:	sub    DWORD PTR [edx+0x55],esi
  40d07a:	dec    ebp
  40d07b:	sub    eax,0xc1c0d4c
  40d080:	push   esi
  40d081:	adc    eax,DWORD PTR ds:[eax+eax*8-0x1fe54775]
  40d089:	dec    esp
  40d08a:	push   ds
  40d08b:	ret    0x6d9b
  40d08e:	push   ss
  40d08f:	mov    dh,al
  40d091:	adc    eax,0xadc9ac40
  40d096:	mov    esi,DWORD PTR [ebx+0x7]
  40d099:	sbb    ah,cl
  40d09b:	ins    BYTE PTR es:[edi],dx
  40d09c:	add    eax,0xafde5259
  40d0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a2:	push   eax
  40d0a3:	jmp    0x3137:0x15fb96fc
  40d0aa:	mov    WORD PTR [edi],fs
  40d0ac:	shl    BYTE PTR [ebx+0x1c],1
  40d0af:	ins    BYTE PTR es:[edi],dx
  40d0b0:	mov    esi,0x7b479ae6
  40d0b5:	xlat   BYTE PTR ds:[ebx]
  40d0b6:	das    
  40d0b7:	js     0x40d0e2
  40d0b9:	add    edx,eax
  40d0bb:	mov    esi,0x5593462b
  40d0c0:	xor    al,0xb0
  40d0c2:	in     ax,dx
  40d0c4:	sti    
  40d0c5:	lock daa 
  40d0c7:	lea    esi,[esi+0x683f3121]
  40d0cd:	mov    esi,0xd08b5d41
  40d0d2:	cdq    
  40d0d3:	cli    
  40d0d4:	ins    BYTE PTR es:[edi],dx
  40d0d5:	pop    eax
  40d0d6:	dec    ebp
  40d0d7:	popf   
  40d0d8:	jbe    0x40d069
  40d0da:	inc    eax
  40d0db:	cwde   
  40d0dc:	adc    al,0xe4
  40d0de:	out    dx,al
  40d0df:	add    eax,0xf81571b7
  40d0e4:	sbb    BYTE PTR [edx+0x47],ah
  40d0e7:	cdq    
  40d0e8:	fwait
  40d0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ea:	je     0x40d122
  40d0ec:	fldenv [eax-0x1a]
  40d0ef:	add    eax,DWORD PTR [ebx-0x612fa846]
  40d0f5:	push   0x6428018a
  40d0fa:	imul   esi,DWORD PTR [eax-0x701669c7],0xff5828a9
  40d104:	mov    al,ds:0xf32f959a
  40d109:	aad    0xd2
  40d10b:	mov    ecx,0x1a191e49
  40d110:	push   ss
  40d111:	sub    DWORD PTR [eax-0x47f406af],edx
  40d117:	std    
  40d118:	dec    esp
  40d119:	stos   BYTE PTR es:[edi],al
  40d11a:	cmp    esi,DWORD PTR [ebx]
  40d11c:	add    bl,BYTE PTR [ebx+ebx*2]
  40d11f:	and    ebx,DWORD PTR [edx+0x58640aa9]
  40d125:	jecxz  0x40d102
  40d127:	pop    edx
  40d128:	getsec 
  40d12a:	mov    ecx,0x472e195a
  40d12f:	in     al,0xa
  40d131:	out    dx,al
  40d132:	out    0x8e,eax
  40d134:	add    ecx,DWORD PTR [ebp+0x6efc90d7]
  40d13a:	ja     0x40d196
  40d13c:	xor    DWORD PTR [ecx+0x15],ebx
  40d13f:	ja     0x40d165
  40d141:	dec    eax
  40d142:	xchg   edx,eax
  40d143:	je     0x40d0d9
  40d145:	push   0x32
  40d147:	xor    al,0xbd
  40d149:	mov    ah,0xc1
  40d14b:	pop    esp
  40d14c:	daa    
  40d14d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14e:	add    ah,BYTE PTR [edi+0x15819dbd]
  40d154:	push   ebx
  40d155:	cmp    eax,0x611b2661
  40d15a:	scas   eax,DWORD PTR es:[edi]
  40d15b:	and    al,0x1e
  40d15d:	dec    edi
  40d15e:	add    ah,ah
  40d160:	pop    ebx
  40d161:	loope  0x40d1e1
  40d163:	repz aam 0xbc
  40d166:	dec    esp
  40d167:	out    0x10,al
  40d169:	pop    ebp
  40d16a:	in     eax,0xe0
  40d16c:	jnp    0x40d120
  40d16e:	lods   eax,DWORD PTR ds:[esi]
  40d16f:	int    0x1
  40d171:	push   0xffffffcd
  40d173:	pop    es
  40d174:	mov    bh,BYTE PTR [eax]
  40d176:	data16 xor al,0x80
  40d179:	xchg   ecx,eax
  40d17a:	hlt    
  40d17b:	mov    bl,0x49
  40d17d:	jge    0x40d12e
  40d17f:	inc    ebx
  40d180:	fbstp  TBYTE PTR [edx]
  40d182:	jl     0x40d1b9
  40d184:	adc    ch,BYTE PTR [edx+0x468a3abd]
  40d18a:	and    al,0x9b
  40d18c:	stos   BYTE PTR es:[edi],al
  40d18d:	mov    ds:0xebcc631,al
  40d192:	inc    esi
  40d193:	dec    BYTE PTR [ecx]
  40d195:	jae    0x40d1f4
  40d197:	cld    
  40d198:	out    0xfc,al
  40d19a:	dec    ecx
  40d19b:	cwde   
  40d19c:	mov    esp,0xde97caf1
  40d1a1:	sub    al,0x71
  40d1a3:	test   BYTE PTR [ebx-0x2739942e],0xf3
  40d1aa:	mov    edi,0x5186d0c0
  40d1af:	js     0x40d20b
  40d1b1:	ins    BYTE PTR es:[edi],dx
  40d1b2:	jmp    0xe68f:0xefb0768a
  40d1b9:	dec    esp
  40d1ba:	mov    ch,cl
  40d1bc:	stos   BYTE PTR es:[edi],al
  40d1bd:	xchg   edx,eax
  40d1be:	xchg   ecx,eax
  40d1bf:	enter  0x4d27,0x6d
  40d1c3:	add    DWORD PTR [ecx],eax
  40d1c5:	nop
  40d1c6:	xor    bh,BYTE PTR [esi+0x58]
  40d1c9:	in     eax,dx
  40d1ca:	add    al,0x4e
  40d1cc:	inc    edx
  40d1cd:	(bad)  
  40d1ce:	pop    ecx
  40d1cf:	mov    eax,ebx
  40d1d1:	inc    ecx
  40d1d2:	sti    
  40d1d3:	or     eax,0xe98b9f98
  40d1d8:	add    BYTE PTR [esi+0x20d0ea3a],bl
  40d1de:	test   BYTE PTR [ecx],0x8f
  40d1e1:	xor    eax,0xc76c7e99
  40d1e6:	iret   
  40d1e7:	mov    al,ds:0x1ffa17a2
  40d1ec:	pop    eax
  40d1ed:	aaa    
  40d1ee:	das    
  40d1ef:	sbb    DWORD PTR [esi+0x74],esi
  40d1f2:	xchg   BYTE PTR [ecx-0x73577a77],ah
  40d1f8:	test   DWORD PTR [eax+0x2c],edx
  40d1fb:	ret    0xa5c2
  40d1fe:	stos   DWORD PTR es:[edi],eax
  40d1ff:	sbb    DWORD PTR [ebx+ebp*4],edi
  40d202:	(bad)  
  40d203:	cmp    BYTE PTR [esi],al
  40d205:	or     al,0x6
  40d207:	xchg   BYTE PTR [ebx+0x5d5b2deb],ch
  40d20d:	mov    dh,0x67
  40d20f:	repz and ecx,edx
  40d212:	sbb    DWORD PTR [edx],esi
  40d214:	ins    BYTE PTR es:[edi],dx
  40d215:	pop    es
  40d216:	outs   dx,DWORD PTR ds:[esi]
  40d217:	pop    es
  40d218:	inc    ebp
  40d219:	adc    esi,DWORD PTR [esi]
  40d21b:	jl     0x40d27b
  40d21d:	test   BYTE PTR [eax],0x16
  40d220:	or     ecx,DWORD PTR [edi]
  40d222:	out    0x67,al
  40d224:	mov    DWORD PTR [ebp-0x5a03c1ac],edi
  40d22a:	ins    BYTE PTR es:[edi],dx
  40d22b:	adc    BYTE PTR [edx],ah
  40d22d:	(bad)  
  40d22e:	cli    
  40d22f:	mov    ebp,0x26c8e8aa
  40d234:	cmp    BYTE PTR [ecx],al
  40d236:	xor    edi,DWORD PTR [esi-0x49ce716d]
  40d23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23d:	(bad)
  40d240:	and    al,0xba
  40d242:	pop    edi
  40d243:	jmp    0x40d23b
  40d245:	repz inc esi
  40d247:	inc    ecx
  40d248:	xor    cl,bh
  40d24a:	inc    esi
  40d24b:	out    dx,al
  40d24c:	idiv   BYTE PTR [ebx-0x4a2d61bd]
  40d252:	and    BYTE PTR [edi+0x49],al
  40d255:	sbb    eax,0x47d366bb
  40d25a:	std    
  40d25b:	sbb    eax,esi
  40d25d:	repz clc 
  40d25f:	ja     0x40d2d2
  40d261:	xchg   DWORD PTR [ebx],esp
  40d263:	test   DWORD PTR [edx-0x10964afe],edi
  40d269:	lods   eax,DWORD PTR ds:[esi]
  40d26a:	int    0x67
  40d26c:	inc    edx
  40d26d:	push   ds
  40d26e:	loop   0x40d2cb
  40d270:	mov    cl,0xdf
  40d272:	pop    ds
  40d273:	mov    cl,0x8
  40d275:	xor    al,0xcb
  40d277:	out    0xd8,al
  40d279:	and    bh,dl
  40d27b:	jecxz  0x40d29b
  40d27d:	dec    ecx
  40d27e:	(bad)  [esp+ebx*2+0x6c77caf8]
  40d285:	sbb    BYTE PTR [esi-0x4a],bh
  40d288:	jnp    0x40d2cf
  40d28a:	stos   BYTE PTR es:[edi],al
  40d28b:	and    cl,BYTE PTR [edi-0x7a]
  40d28e:	cld    
  40d28f:	push   ecx
  40d290:	lahf   
  40d291:	(bad)  
  40d292:	div    DWORD PTR [edx-0xa7922c6]
  40d298:	dec    edx
  40d299:	fist   DWORD PTR [eax]
  40d29b:	jae    0x40d309
  40d29d:	jne    0x40d2d1
  40d29f:	jae    0x40d234
  40d2a1:	in     al,dx
  40d2a2:	out    0x78,eax
  40d2a4:	jnp    0x40d241
  40d2a6:	push   ds
  40d2a7:	xchg   ebx,eax
  40d2a8:	movnti DWORD PTR [ecx+0x2c0f9ade],ebx
  40d2af:	out    dx,eax
  40d2b0:	inc    ebx
  40d2b1:	mov    ds:0x35fcfa93,al
  40d2b6:	gs (bad) 
  40d2b8:	jnp    0x40d329
  40d2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bb:	pop    ds
  40d2bc:	xchg   ebp,eax
  40d2bd:	pop    esp
  40d2be:	cmp    DWORD PTR [ecx+0x55],ecx
  40d2c1:	ret    0x830f
  40d2c4:	test   DWORD PTR [esi],eax
  40d2c6:	mov    dh,0x32
  40d2c8:	sbb    eax,0xb8795532
  40d2cd:	aas    
  40d2ce:	push   es
  40d2cf:	mov    al,ds:0x7ddd2d77
  40d2d4:	loopne 0x40d340
  40d2d6:	and    BYTE PTR [esi-0x50],dl
  40d2d9:	test   eax,0xc819e89e
  40d2de:	sbb    eax,0x3e81c455
  40d2e3:	and    ch,BYTE PTR [ebx-0x52]
  40d2e6:	jns    0x40d336
  40d2e8:	sub    BYTE PTR [esp+ebx*4+0x28],bl
  40d2ec:	add    al,0x95
  40d2ee:	adc    DWORD PTR [edx],esp
  40d2f0:	mov    bl,0x7f
  40d2f2:	mov    WORD PTR [ecx],cs
  40d2f4:	data16 aad 0x24
  40d2f7:	popa   
  40d2f8:	sub    cl,BYTE PTR [edi+0x4c]
  40d2fb:	mov    esi,0x2dc0339e
  40d300:	and    eax,0x2249ef27
  40d305:	adc    eax,0x3dcefd6c
  40d30a:	inc    ebp
  40d30b:	mov    edi,0x5b9a25ea
  40d310:	inc    ecx
  40d311:	call   0xb20e:0x2ac9eab1
  40d318:	ret    
  40d319:	bound  edx,QWORD PTR [ebx]
  40d31b:	stos   BYTE PTR es:[edi],al
  40d31c:	sub    al,BYTE PTR [edi-0x524e4f69]
  40d322:	add    al,0x8f
  40d324:	bound  ecx,QWORD PTR [ecx]
  40d326:	dec    ebx
  40d327:	push   ebx
  40d328:	pop    esi
  40d329:	sahf   
  40d32a:	mul    DWORD PTR [eax]
  40d32c:	pusha  
  40d32d:	xor    BYTE PTR [ebx],dl
  40d32f:	mov    esi,0x53f94f12
  40d334:	pop    ebx
  40d335:	ja     0x40d305
  40d337:	ins    DWORD PTR es:[edi],dx
  40d338:	pop    ebx
  40d339:	and    ch,BYTE PTR [esi]
  40d33b:	push   DWORD PTR [esi+0x8336979]
  40d341:	mov    ds:0xd8a4fa02,eax
  40d346:	jne    0x40d315
  40d348:	in     al,0x54
  40d34a:	mov    ch,0xb7
  40d34c:	adc    al,0xfc
  40d34e:	cmp    BYTE PTR [ecx],bh
  40d350:	xor    eax,0x7a18fce2
  40d355:	mov    edi,0x5cee21db
  40d35a:	and    eax,0xfc6af363
  40d35f:	add    ah,bl
  40d361:	aam    0xb8
  40d363:	int    0x93
  40d365:	xchg   ebp,eax
  40d366:	mov    ch,0xee
  40d368:	aam    0xf6
  40d36a:	fstp   DWORD PTR [edi-0x532f430b]
  40d370:	arpl   WORD PTR [ebx],bp
  40d372:	bswap  edx
  40d374:	mov    edx,0xc569a45c
  40d379:	cmp    DWORD PTR [ecx+0x71],edi
  40d37c:	(bad)  
  40d37e:	stc    
  40d37f:	inc    ebx
  40d380:	iret   
  40d381:	fdivr  DWORD PTR fs:[esi+0x2d1a3ef7]
  40d388:	cmp    DWORD PTR [ebx+0x24252205],esi
  40d38e:	sbb    eax,0xb8708697
  40d393:	cwde   
  40d394:	rcl    BYTE PTR [edi+0x7e598e35],0x71
  40d39b:	mov    DWORD PTR [esi],ebx
  40d39d:	(bad)  
  40d39e:	adc    bl,BYTE PTR ds:0x16026186
  40d3a4:	xchg   BYTE PTR [ecx+0x1f],cl
  40d3a7:	sbb    eax,DWORD PTR [ecx+0x5c6e0a7d]
  40d3ad:	enter  0x48c8,0x35
  40d3b1:	inc    ebx
  40d3b2:	fiadd  DWORD PTR [esi+0x16]
  40d3b5:	das    
  40d3b6:	pop    eax
  40d3b7:	cld    
  40d3b8:	sub    cl,BYTE PTR [ebx-0x76]
  40d3bb:	pop    eax
  40d3bc:	xlat   BYTE PTR ds:[ebx]
  40d3bd:	pop    eax
  40d3be:	daa    
  40d3bf:	xchg   ecx,eax
  40d3c0:	cmp    esp,ebp
  40d3c2:	or     BYTE PTR [edx-0x35],al
  40d3c5:	mov    dh,0xd4
  40d3c7:	push   ds
  40d3c8:	mov    bl,0xe0
  40d3ca:	mov    ds:0xd3bdb7e6,ax
  40d3d0:	aad    0x5d
  40d3d2:	ror    BYTE PTR [edx],1
  40d3d4:	mov    BYTE PTR [edi+ebp*8],bh
  40d3d7:	(bad)  
  40d3d8:	fwait
  40d3d9:	mov    ds:0x804e7e7,eax
  40d3de:	add    DWORD PTR [ebp-0x1eeccc3e],esi
  40d3e4:	mov    WORD PTR [ebx+0x3e7eaeac],es
  40d3ea:	mov    cs,WORD PTR [edi]
  40d3ec:	mov    esp,0xab1aeb13
  40d3f1:	jns    0x40d3d7
  40d3f3:	push   ds
  40d3f4:	mov    ebx,0x91270828
  40d3f9:	sub    eax,esi
  40d3fb:	cmovnp edx,DWORD PTR [eax+0x4d380ec4]
  40d402:	enter  0x5154,0xb4
  40d406:	dec    ecx
  40d407:	pop    edi
  40d408:	or     al,ch
  40d40a:	inc    ebx
  40d40b:	jge    0x40d439
  40d40d:	std    
  40d40e:	call   FWORD PTR [esi-0x759072c5]
  40d414:	loopne 0x40d418
  40d416:	neg    ch
  40d418:	fwait
  40d419:	inc    esi
  40d41a:	call   0x8ac0:0x51c6820f
  40d421:	jae    0x40d3ac
  40d423:	cmp    eax,0x41169ab9
  40d428:	retf   0x9543
  40d42b:	test   BYTE PTR [edx+0x68c9d483],0x62
  40d432:	pop    edx
  40d433:	push   ebx
  40d434:	sahf   
  40d435:	jne    0x40d468
  40d437:	jp     0x40d466
  40d439:	rcl    BYTE PTR [ebx],cl
  40d43b:	push   ss
  40d43c:	xor    eax,0x3f1d634f
  40d441:	or     DWORD PTR [edx+0x6af4ec18],0xc670b3bc
  40d44b:	arpl   WORD PTR [edi+0x70],si
  40d44e:	nop
  40d44f:	cmp    al,0xeb
  40d451:	jmp    0x137eebf1
  40d456:	daa    
  40d457:	pop    ds
  40d458:	xor    al,0x79
  40d45a:	jno    0x40d4b9
  40d45c:	dec    edi
  40d45d:	call   0x6672b3a7
  40d462:	(bad)  
  40d463:	adc    al,0xba
  40d465:	xor    DWORD PTR [edi+0x23af940c],0xb0c42d00
  40d46f:	lods   al,BYTE PTR ds:[esi]
  40d470:	dec    edi
  40d471:	adc    BYTE PTR [eax-0xe],ch
  40d474:	push   edx
  40d475:	idiv   dl
  40d477:	cld    
  40d478:	pop    edx
  40d479:	push   ss
  40d47a:	lds    esp,FWORD PTR [edx]
  40d47c:	sar    ch,1
  40d47e:	dec    edi
  40d47f:	or     eax,0x9769c45d
  40d484:	arpl   WORD PTR [di+0x54],bx
  40d488:	and    BYTE PTR [eax],dl
  40d48a:	sti    
  40d48b:	scas   eax,DWORD PTR es:[edi]
  40d48c:	and    bh,ah
  40d48e:	sti    
  40d48f:	pop    es
  40d490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d491:	in     al,0x98
  40d493:	push   ebp
  40d494:	ror    DWORD PTR [eax-0x2fc2690a],cl
  40d49a:	mov    edi,0xbf4cbbbb
  40d49f:	mov    bl,0x6d
  40d4a1:	xor    bh,al
  40d4a3:	(bad)  
  40d4a4:	leave  
  40d4a5:	pop    edx
  40d4a6:	dec    edi
  40d4a7:	gs jle 0x40d48b
  40d4aa:	inc    ebp
  40d4ab:	jle    0x40d4dc
  40d4ad:	std    
  40d4ae:	cmp    ch,BYTE PTR [ebx-0x25f2d310]
  40d4b4:	in     eax,0x66
  40d4b6:	push   esi
  40d4b7:	sub    cl,ch
  40d4b9:	cmp    DWORD PTR [edi],ebp
  40d4bb:	adc    BYTE PTR [edi],0xa9
  40d4be:	cwde   
  40d4bf:	jbe    0x40d451
  40d4c1:	jl     0x40d475
  40d4c3:	popf   
  40d4c4:	(bad)  
  40d4c5:	mov    esi,0xa74a3c1a
  40d4ca:	sub    ch,BYTE PTR ds:0xcd0adf8
  40d4d1:	stos   DWORD PTR es:[edi],eax
  40d4d2:	dec    esp
  40d4d3:	inc    DWORD PTR [esi]
  40d4d5:	bound  eax,QWORD PTR [ecx-0x481f34a3]
  40d4db:	push   esp
  40d4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4dd:	sub    BYTE PTR [ecx+0x5542276],ch
  40d4e3:	mov    DWORD PTR [edi-0x39],ebx
  40d4e6:	daa    
  40d4e7:	mov    ?,esi
  40d4e9:	aas    
  40d4ea:	pop    ss
  40d4eb:	test   BYTE PTR [eax+0x6b],ch
  40d4ee:	inc    ebx
  40d4ef:	in     al,dx
  40d4f0:	add    al,0x2e
  40d4f2:	fadd   QWORD PTR [esi-0x7c2a24c3]
  40d4f8:	das    
  40d4f9:	jle    0x40d515
  40d4fb:	mov    bh,0x8e
  40d4fd:	inc    ecx
  40d4fe:	cmc    
  40d4ff:	not    DWORD PTR [eax-0x21]
  40d502:	mov    bl,ch
  40d504:	jle    0x40d57e
  40d506:	mov    eax,ds:0x3ec30de1
  40d50b:	std    
  40d50c:	push   ss
  40d50d:	push   0x76adedc3
  40d512:	shr    DWORD PTR [ebp+0x35],cl
  40d515:	mov    eax,ds:0x42882cc5
  40d51a:	in     al,dx
  40d51b:	jno    0x40d55a
  40d51d:	(bad)  
  40d51e:	(bad)  
  40d520:	push   eax
  40d521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d522:	outs   dx,DWORD PTR ds:[esi]
  40d523:	outs   dx,BYTE PTR ds:[esi]
  40d524:	xor    cl,0x66
  40d527:	jb     0x40d52f
  40d529:	hlt    
  40d52a:	mov    ds:0xf915e3cb,al
  40d52f:	jns    0x40d4f7
  40d531:	pop    esp
  40d532:	dec    ebp
  40d533:	in     eax,dx
  40d534:	mov    ah,0x6c
  40d536:	mov    al,ds:0xf6ddc29c
  40d53b:	push   edi
  40d53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53d:	mov    eax,0xd1a7b1d8
  40d542:	inc    esp
  40d543:	lock dec edx
  40d545:	inc    esp
  40d546:	fs jmp 0x40d55f
  40d549:	scas   eax,DWORD PTR es:[edi]
  40d54a:	imul   BYTE PTR [ecx-0x13e38d3f]
  40d550:	jecxz  0x40d4fd
  40d552:	fwait
  40d553:	pop    edx
  40d554:	mov    esp,0x33865447
  40d559:	adc    eax,0x49492518
  40d55e:	dec    edi
  40d55f:	pop    esi
  40d560:	mov    al,ds:0x3df5def
  40d565:	pop    ebx
  40d566:	fwait
  40d567:	(bad)  
  40d568:	(bad)  
  40d569:	stos   DWORD PTR es:[edi],eax
  40d56a:	nop
  40d56b:	xchg   esp,eax
  40d56c:	shr    DWORD PTR [ebp+0x2d],0x1f
  40d570:	das    
  40d571:	lea    esp,[edi]
  40d573:	dec    edx
  40d574:	xchg   ebp,eax
  40d575:	mov    BYTE PTR [ebx],ah
  40d577:	sahf   
  40d578:	pop    edx
  40d579:	retf   
  40d57a:	fcomp  QWORD PTR [edi+0x1e]
  40d57d:	fsubr  st,st(1)
  40d57f:	pop    ds
  40d580:	add    DWORD PTR [ebx+edx*2-0xada574],eax
  40d587:	outs   dx,BYTE PTR ds:[esi]
  40d588:	icebp  
  40d589:	inc    edi
  40d58a:	or     edi,DWORD PTR [ecx-0x764d8b1d]
  40d590:	adc    BYTE PTR ds:0x2d533e39,bh
  40d596:	shl    ecx,0xd3
  40d599:	xchg   BYTE PTR [esi+eax*2],cl
  40d59c:	fadd   st,st(6)
  40d59e:	fdiv   QWORD PTR [esi]
  40d5a0:	shl    BYTE PTR [edx+0x2cedbb50],cl
  40d5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a7:	jnp    0x40d5e3
  40d5a9:	and    al,BYTE PTR [edi]
  40d5ab:	test   al,0xbe
  40d5ad:	shr    DWORD PTR [eax-0x16],cl
  40d5b0:	mov    esi,DWORD PTR [esi+0x32]
  40d5b3:	stos   BYTE PTR es:[edi],al
  40d5b4:	sub    dl,BYTE PTR [edi+ecx*4-0x2898cdd9]
  40d5bb:	pusha  
  40d5bc:	mov    bh,0xe5
  40d5be:	(bad)  
  40d5bf:	(bad)  
  40d5c0:	ds push cs
  40d5c2:	or     dh,0xae
  40d5c5:	mov    ds:0x691c323b,al
  40d5ca:	cmc    
  40d5cb:	pop    ebp
  40d5cc:	ds mov dh,0xd9
  40d5cf:	loopne 0x40d596
  40d5d1:	into   
  40d5d2:	(bad)  
  40d5d4:	ret    0x65e
  40d5d7:	inc    esi
  40d5d8:	je     0x40d579
  40d5da:	dec    ebp
  40d5db:	sub    eax,0x148bd5ef
  40d5e0:	int    0x5d
  40d5e2:	outs   dx,BYTE PTR ds:[esi]
  40d5e3:	or     eax,0xca29ee4b
  40d5e8:	repz pop ebp
  40d5ea:	shr    DWORD PTR [esi-0x3b22f425],0xc7
  40d5f1:	aaa    
  40d5f2:	lock add bl,ah
  40d5f5:	push   edi
  40d5f6:	fidiv  DWORD PTR [edi]
  40d5f8:	xchg   DWORD PTR [eax+0x7ba03aaa],eax
  40d5fe:	push   0xa5d8e204
  40d603:	jg     0x40d5ee
  40d605:	jmp    0x272b:0xae762cce
  40d60c:	push   0x26
  40d60e:	and    eax,ecx
  40d610:	push   0xd0a71fe4
  40d615:	inc    ecx
  40d616:	jb     0x40d64b
  40d618:	add    DWORD PTR ds:0xb90251d7,0xc0bbad51
  40d622:	lock leave 
  40d624:	pushf  
  40d625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d626:	jmp    0x40d698
  40d628:	jle    0x40d5e0
  40d62a:	cmp    al,0x1c
  40d62c:	pop    ebx
  40d62d:	fstp   DWORD PTR [edi-0x20]
  40d630:	xchg   DWORD PTR [eax],esi
  40d632:	es add al,0x5d
  40d635:	cmp    WORD PTR [eax+0x656774f1],0xff96
  40d63d:	repnz push edx
  40d63f:	into   
  40d640:	cwde   
  40d641:	repnz sub ecx,DWORD PTR [edi+0x76]
  40d645:	pop    esp
  40d646:	hlt    
  40d647:	aaa    
  40d648:	sbb    BYTE PTR [esi-0x3a821e74],al
  40d64e:	and    al,cl
  40d650:	push   ebp
  40d651:	jmp    esi
  40d653:	adc    esi,DWORD PTR [edi-0x22]
  40d656:	jno    0x40d61c
  40d658:	xchg   BYTE PTR [ecx+ebx*8+0x2d90ab5a],ah
  40d65f:	add    eax,0x41a18146
  40d664:	dec    esi
  40d665:	xchg   ebx,eax
  40d666:	sti    
  40d667:	or     BYTE PTR [edx-0x378d6abe],0xed
  40d66e:	mov    ecx,0xa7efc2df
  40d673:	mov    eax,0xb842a25d
  40d678:	xor    eax,0xbc983b41
  40d67d:	xchg   ebx,eax
  40d67e:	sub    DWORD PTR [ebx*4-0x5815c444],edx
  40d685:	dec    edi
  40d686:	bound  esp,QWORD PTR [ecx]
  40d688:	icebp  
  40d689:	fwait
  40d68a:	cwde   
  40d68b:	test   DWORD PTR [ebp-0x5],ebx
  40d68e:	pusha  
  40d68f:	js     0x40d703
  40d691:	fdiv   DWORD PTR [ecx+0x663a4452]
  40d697:	(bad)  
  40d698:	(bad)  
  40d699:	push   cs
  40d69a:	mov    esp,0xbb881a3d
  40d69f:	pop    ss
  40d6a0:	in     eax,dx
  40d6a1:	in     al,dx
  40d6a2:	or     bh,BYTE PTR [edx+edi*2]
  40d6a5:	sahf   
  40d6a6:	jp     0x40d6ec
  40d6a8:	sub    eax,0x5c0435cf
  40d6ad:	sbb    esi,DWORD PTR [ebx+0x44]
  40d6b0:	xchg   ebx,eax
  40d6b1:	pop    edi
  40d6b2:	sbb    al,0x3d
  40d6b4:	test   eax,0x8def7f7b
  40d6b9:	sub    al,0xc4
  40d6bb:	pop    ss
  40d6bc:	sbb    dh,BYTE PTR [eax]
  40d6be:	fwait
  40d6bf:	sbb    al,0xe7
  40d6c1:	ins    BYTE PTR es:[edi],dx
  40d6c2:	dec    ebp
  40d6c3:	dec    ebp
  40d6c4:	push   0xa3ac2a98
  40d6c9:	push   edi
  40d6ca:	add    al,al
  40d6cc:	mov    ecx,0xf2891dde
  40d6d1:	sar    DWORD PTR [esi+0x3d],cl
  40d6d4:	sbb    eax,edi
  40d6d6:	les    edx,FWORD PTR [edx+0xa]
  40d6d9:	add    cl,dh
  40d6db:	retf   
  40d6dc:	imul   edx,DWORD PTR [eax-0x5d],0x66
  40d6e0:	sbb    DWORD PTR [ebp+0x5b6c03da],edi
  40d6e6:	inc    ebx
  40d6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e8:	fmul   DWORD PTR [eax-0x4]
  40d6eb:	pop    ds
  40d6ec:	pop    ds
  40d6ed:	loopne 0x40d6d4
  40d6ef:	xchg   DWORD PTR [edx-0x5631fc46],esi
  40d6f5:	cs jne 0x40d72b
  40d6f8:	adc    DWORD PTR [esi+0x2b],esp
  40d6fb:	fldcw  WORD PTR [esi-0x71]
  40d6fe:	pop    ebx
  40d6ff:	mov    esp,DWORD PTR [ebx]
  40d701:	xchg   ebp,eax
  40d702:	adc    ebp,DWORD PTR [esi+0x52]
  40d705:	mov    BYTE PTR [ebx],al
  40d707:	vminps xmm1,xmm3,XMMWORD PTR [edx+eiz*4-0x31]
  40d70d:	inc    ebp
  40d70e:	repz mov dl,0x8b
  40d711:	cmp    al,0xf1
  40d713:	fild   QWORD PTR [edx+eiz*8]
  40d716:	push   eax
  40d717:	leave  
  40d718:	mov    edi,0x733fa29e
  40d71d:	ror    DWORD PTR ds:0xfd3a4963,cl
  40d723:	pop    edx
  40d724:	cmp    DWORD PTR [edx],0xffffffdb
  40d727:	pop    esp
  40d728:	lods   al,BYTE PTR ds:[esi]
  40d729:	dec    esp
  40d72a:	cmp    edi,ebp
  40d72c:	cmp    dh,BYTE PTR [esp+edx*4]
  40d72f:	mov    eax,0x3e87c43f
  40d734:	icebp  
  40d735:	jae    0x40d73a
  40d737:	xlat   BYTE PTR ds:[ebx]
  40d738:	fnstsw WORD PTR [eax]
  40d73a:	dec    ebp
  40d73b:	sub    DWORD PTR [ecx-0x1c],esp
  40d73e:	sub    BYTE PTR [edi-0x22efa2e5],ch
  40d744:	int    0xc1
  40d746:	in     al,dx
  40d747:	test   eax,0xa24b7f9d
  40d74c:	cli    
  40d74d:	(bad)  
  40d74e:	cld    
  40d74f:	int    0x4d
  40d751:	cmp    eax,0x35938d07
  40d756:	in     al,0x24
  40d758:	btc    DWORD PTR [esi+0x548bdac8],0x97
  40d760:	sbb    bh,cl
  40d762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d763:	sti    
  40d764:	test   al,0x41
  40d766:	cmp    BYTE PTR [eax],al
  40d768:	div    DWORD PTR [eax+0x65]
  40d76b:	xor    edi,DWORD PTR [esi+0x19053a81]
  40d771:	xor    al,BYTE PTR [edx+0x62]
  40d774:	or     dh,BYTE PTR [ebp+0x28]
  40d777:	dec    ecx
  40d778:	sbb    bl,BYTE PTR [ebx+0x32]
  40d77b:	xchg   ecx,eax
  40d77c:	out    0x52,al
  40d77e:	cmp    BYTE PTR [ecx-0x1b7e5fe3],0x4a
  40d785:	mov    ds:0x77c70372,eax
  40d78a:	cmc    
  40d78b:	add    esp,edi
  40d78d:	lods   eax,DWORD PTR ds:[esi]
  40d78e:	pop    ebp
  40d78f:	pop    ds
  40d790:	idiv   ecx
  40d792:	add    DWORD PTR [edi-0x299cf146],esp
  40d798:	xor    edi,DWORD PTR ds:0x13827fd6
  40d79e:	fsubr  st(6),st
  40d7a0:	mov    DWORD PTR [eax+0x46],edx
  40d7a3:	in     al,dx
  40d7a4:	pop    ebx
  40d7a5:	push   edx
  40d7a6:	jecxz  0x40d786
  40d7a8:	sub    al,0xa6
  40d7aa:	jae    0x40d824
  40d7ac:	cmp    al,0x85
  40d7ae:	aam    0x3e
  40d7b0:	add    al,0x92
  40d7b2:	cmp    dh,bl
  40d7b4:	jns    0x40d77c
  40d7b6:	mov    esp,0x7394fc6a
  40d7bb:	imul   eax,DWORD PTR [ecx],0xffffffb7
  40d7be:	outs   dx,BYTE PTR ds:[esi]
  40d7bf:	je     0x40d7c1
  40d7c1:	addr16 pop ebp
  40d7c3:	adc    bh,BYTE PTR [edx+ecx*1-0x3f]
  40d7c7:	(bad)  
  40d7c8:	ds retf 0x243
  40d7cc:	sbb    ebx,eax
  40d7ce:	loope  0x40d7f9
  40d7d0:	inc    edi
  40d7d1:	fstp   TBYTE PTR ds:0xe365dd87
  40d7d7:	lds    esp,FWORD PTR [ecx+0x7a]
  40d7da:	mov    DWORD PTR [edi],edi
  40d7dc:	imul   eax,DWORD PTR [esp+ebx*1+0x31],0x7e45a3cd
  40d7e4:	inc    edi
  40d7e5:	cdq    
  40d7e6:	sbb    ecx,DWORD PTR [esi+eiz*4]
  40d7e9:	pop    edi
  40d7ea:	xor    BYTE PTR [ebx-0x6d],ch
  40d7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ee:	inc    esi
  40d7ef:	xchg   esi,eax
  40d7f0:	add    al,0xd5
  40d7f2:	push   esp
  40d7f3:	xor    bl,BYTE PTR ds:[edi+0x7]
  40d7f7:	dec    eax
  40d7f8:	repnz sub al,0xaa
  40d7fb:	mov    ecx,0x38e38be7
  40d800:	stc    
  40d801:	fcom   DWORD PTR [esi-0x8]
  40d804:	pop    ecx
  40d805:	test   BYTE PTR [ebp-0x2e59cf1c],cl
  40d80b:	iret   
  40d80c:	ins    BYTE PTR es:[edi],dx
  40d80d:	gs ret 
  40d80f:	leave  
  40d810:	and    DWORD PTR [edi+0x52],eax
  40d813:	mov    ecx,0x3124ab4f
  40d818:	pop    edx
  40d819:	xchg   BYTE PTR [edi],ah
  40d81b:	push   edi
  40d81c:	stos   BYTE PTR es:[edi],al
  40d81d:	adc    eax,0xb55a2956
  40d822:	cmp    DWORD PTR [ebp-0x147f0875],esi
  40d828:	sub    al,0x72
  40d82a:	xor    DWORD PTR [ecx+eiz*4-0x10],eax
  40d82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d82f:	das    
  40d830:	sub    bh,al
  40d832:	(bad)  
  40d833:	mov    ch,0x94
  40d835:	arpl   cx,cx
  40d837:	ret    
  40d838:	mov    cl,0x58
  40d83a:	cvttps2pi mm6,xmm6
  40d83d:	sub    al,0x81
  40d83f:	and    BYTE PTR [esi+0x261512ff],bh
  40d845:	xchg   esp,eax
  40d846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d847:	push   eax
  40d848:	lea    esp,[ebx+ebp*4]
  40d84b:	or     bl,BYTE PTR [ebx-0x4eb925]
  40d851:	mov    bl,0x6f
  40d853:	leave  
  40d854:	push   ds
  40d855:	and    eax,0x70684e2d
  40d85a:	adc    ecx,ebx
  40d85c:	push   edx
  40d85d:	std    
  40d85e:	and    eax,0xb8d00449
  40d863:	sub    eax,0x5272d2d
  40d868:	cmp    al,BYTE PTR [esi-0x44de3edc]
  40d86e:	mov    ebp,0xdf9a55ab
  40d873:	mov    ds:0x3303cc83,eax
  40d878:	fld    TBYTE PTR [ebx]
  40d87a:	std    
  40d87b:	and    BYTE PTR [ebx+0x2c450ba4],dh
  40d881:	or     BYTE PTR [edi],bh
  40d883:	jp     0x40d86a
  40d885:	or     BYTE PTR fs:[edx],bl
  40d888:	xchg   BYTE PTR [ecx+0x36],bh
  40d88b:	jmp    0x40d8d8
  40d88d:	loopne 0x40d882
  40d88f:	shl    esi,cl
  40d891:	jmp    0xba4ee761
  40d896:	mov    bl,0x89
  40d898:	retf   
  40d899:	xchg   BYTE PTR [edi-0xc],bh
  40d89c:	wrmsr  
  40d89e:	sbb    ecx,DWORD PTR [edx-0x5c461072]
  40d8a4:	xor    ch,BYTE PTR [ebx-0x1e]
  40d8a7:	xchg   cx,ax
  40d8a9:	xlat   BYTE PTR ds:[ebx]
  40d8aa:	mov    eax,ds:0x3903fae2
  40d8af:	enter  0x4596,0x51
  40d8b3:	mov    fs:0x44261d96,al
  40d8b9:	(bad)  
  40d8ba:	out    0xa5,al
  40d8bc:	sub    DWORD PTR [edi+0x6a8f5ce6],edx
  40d8c2:	dec    esi
  40d8c3:	rcl    BYTE PTR [ecx],0x9f
  40d8c6:	fimul  WORD PTR [edx+0x5c3d8b26]
  40d8cc:	imul   eax,DWORD PTR [ebp+0x41963115],0xffffffd7
  40d8d3:	xor    DWORD PTR [edi+0x265c6d0f],ecx
  40d8d9:	addr16 int 0x3d
  40d8dc:	adc    al,BYTE PTR [ebx+0x7d]
  40d8df:	and    eax,0x69776ddc
  40d8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e5:	out    0x8f,eax
  40d8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e8:	leave  
  40d8e9:	and    al,0xa4
  40d8eb:	lods   eax,DWORD PTR ds:[esi]
  40d8ec:	icebp  
  40d8ed:	(bad)  [edx+0x3c434684]
  40d8f3:	jge    0x40d91c
  40d8f5:	popf   
  40d8f6:	out    dx,eax
  40d8f7:	adc    BYTE PTR [edx+0x7f9d24a3],dh
  40d8fd:	and    al,0x63
  40d8ff:	stos   DWORD PTR es:[edi],eax
  40d900:	retf   
  40d901:	xchg   DWORD PTR [ebx-0x7ef78ad0],ebp
  40d907:	mov    ds:0x78bdd8d8,al
  40d90c:	sbb    esp,DWORD PTR [ecx-0x5a]
  40d90f:	cmp    ch,ch
  40d911:	ror    BYTE PTR [edi+0x4fcb0b38],0x66
  40d918:	(bad)  
  40d919:	pushf  
  40d91a:	int3   
  40d91b:	in     eax,0xef
  40d91d:	pop    ebx
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	push   ecx
  40d920:	sbb    DWORD PTR [eax],ebp
  40d922:	call   0x5704:0x603c6693
  40d929:	mov    al,0xb7
  40d92b:	cmp    al,0x56
  40d92d:	cwde   
  40d92e:	sub    al,0x7a
  40d930:	cld    
  40d931:	aaa    
  40d932:	call   0xacb0:0x9f6235c9
  40d939:	jno    0x40d8e6
  40d93b:	test   al,al
  40d93d:	adc    eax,DWORD PTR [ebx+0x23]
  40d940:	sbb    al,0x5
  40d942:	lea    edx,[eax+ebx*8-0x6cf5dd09]
  40d949:	ja     0x40d90d
  40d94b:	test   DWORD PTR [eax],esp
  40d94d:	xor    ebp,DWORD PTR [edx]
  40d94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d950:	popf   
  40d951:	xchg   esp,eax
  40d952:	test   edx,ebp
  40d954:	and    BYTE PTR [ebx],bl
  40d956:	and    eax,0x2f739d23
  40d95b:	mov    ebx,0xe1666767
  40d960:	mov    ch,dl
  40d962:	mov    ebp,0x6b254372
  40d967:	add    ebp,esi
  40d969:	sbb    ch,BYTE PTR [ecx+0xd329c8a]
  40d96f:	dec    ecx
  40d970:	mov    edi,DWORD PTR [edx+ebx*4-0x16]
  40d974:	xor    edx,ebx
  40d976:	or     dl,ah
  40d978:	loopne 0x40d9d3
  40d97a:	adc    DWORD PTR [edx+0x72],ebp
  40d97d:	push   ecx
  40d97e:	add    DWORD PTR ss:[ebp+0x5bb41011],edx
  40d985:	les    ecx,FWORD PTR [ebp+0x24]
  40d988:	push   eax
  40d989:	xchg   edx,eax
  40d98a:	dec    ebx
  40d98b:	mov    al,ds:0xc5d89250
  40d990:	mov    esi,0x7d76c1f9
  40d995:	jge    0x40d9a3
  40d997:	cmp    bl,BYTE PTR [ebx+0x34]
  40d99a:	dec    ebx
  40d99b:	ins    DWORD PTR es:[edi],dx
  40d99c:	hlt    
  40d99d:	js     0x40d98c
  40d99f:	in     eax,dx
  40d9a0:	lods   eax,DWORD PTR ds:[esi]
  40d9a1:	in     al,dx
  40d9a2:	repnz dec eax
  40d9a4:	adc    DWORD PTR ds:0xd0388419,ebx
  40d9aa:	clc    
  40d9ab:	xor    eax,0x6ea77274
  40d9b0:	mov    dl,0x39
  40d9b2:	mov    dh,0xe1
  40d9b4:	push   esi
  40d9b5:	push   DWORD PTR [edx+0x2d127451]
  40d9bb:	out    0x78,eax
  40d9bd:	pop    ecx
  40d9be:	cs jg  0x40da0c
  40d9c1:	sar    BYTE PTR [eax+0x3e56927d],cl
  40d9c7:	cmc    
  40d9c8:	test   DWORD PTR [ecx+0x166aa7d1],ebx
  40d9ce:	outs   dx,BYTE PTR ds:[esi]
  40d9cf:	jns    0x40d9e8
  40d9d1:	and    cl,BYTE PTR es:[ecx+eiz*1+0x68]
  40d9d6:	mov    cl,0x79
  40d9d8:	mov    bl,0x4a
  40d9da:	ja     0x40da0d
  40d9dc:	(bad)  
  40d9dd:	xchg   esi,eax
  40d9de:	push   ebp
  40d9df:	mov    eax,ds:0x46fd0d3f
  40d9e4:	retf   0xf76c
  40d9e7:	imul   eax,eax,0xefa5db48
  40d9ed:	push   ebx
  40d9ee:	and    DWORD PTR [edx-0x690ad6fa],edx
  40d9f4:	test   al,0x9f
  40d9f6:	sbb    BYTE PTR [edi],dl
  40d9f8:	add    dh,dl
  40d9fa:	mov    BYTE PTR [ecx],al
  40d9fc:	retf   
  40d9fd:	pushf  
  40d9fe:	add    esp,DWORD PTR [ecx]
  40da00:	pop    edx
  40da01:	xor    DWORD PTR [eax-0x48d0f13a],edi
  40da07:	sbb    ebp,DWORD PTR [ecx-0x3b]
  40da0a:	in     al,dx
  40da0b:	call   0x1a60:0xcda90ec3
  40da12:	pop    ss
  40da13:	inc    esi
  40da14:	or     BYTE PTR [edi-0x7251998e],dh
  40da1a:	push   edx
  40da1b:	jb     0x40d9c3
  40da1d:	sbb    eax,0xb37fb795
  40da22:	xor    DWORD PTR [ebx+eax*4+0x20],esi
  40da26:	lea    esp,[esi+eiz*8+0x66d1fae7]
  40da2d:	ror    bh,1
  40da2f:	in     al,0xf9
  40da31:	xor    dx,WORD PTR [edi+0x7]
  40da35:	shl    BYTE PTR [eax-0x30],0xf7
  40da39:	mov    bh,0x41
  40da3b:	in     eax,dx
  40da3c:	xchg   DWORD PTR [ebx-0x35],eax
  40da3f:	adc    dl,ch
  40da41:	dec    edx
  40da42:	hlt    
  40da43:	or     eax,0x1b2b1622
  40da48:	nop    DWORD PTR [edi-0x32fe567]
  40da4f:	das    
  40da50:	imul   ecx,DWORD PTR [ecx+0x323ca66f],0x1c4be3c9
  40da5a:	in     al,dx
  40da5b:	dec    ecx
  40da5c:	pop    ebp
  40da5d:	add    ecx,DWORD PTR [edx-0x3a]
  40da60:	sub    al,0x6
  40da62:	push   ebx
  40da63:	scas   eax,DWORD PTR es:[edi]
  40da64:	and    eax,0xab0348a1
  40da69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6a:	mov    ah,0xd8
  40da6c:	pushf  
  40da6d:	inc    esp
  40da6e:	mov    eax,ds:0x4ef40179
  40da73:	push   es
  40da74:	scas   al,BYTE PTR es:[edi]
  40da75:	or     dl,BYTE PTR ds:0x8fe5f1cd
  40da7b:	iret   
  40da7c:	jmp    0x35e2c209
  40da81:	jge    0x40da2f
  40da83:	dec    ebx
  40da84:	repz cmp ebx,ecx
  40da87:	push   0xfbdc487c
  40da8c:	pop    eax
  40da8d:	cmp    eax,0x7899d6ca
  40da92:	cmp    DWORD PTR [ebp-0x38],esp
  40da95:	imul   DWORD PTR [edx]
  40da97:	xchg   edx,eax
  40da98:	daa    
  40da99:	hlt    
  40da9a:	jle    0x40da96
  40da9c:	xchg   esp,eax
  40da9d:	pop    ebp
  40da9e:	or     ecx,DWORD PTR [edi+0x64ca74d2]
  40daa4:	out    0xf3,eax
  40daa6:	imul   edx,DWORD PTR [ebx-0x131c6c07],0x70
  40daad:	push   esp
  40daae:	pop    ss
  40daaf:	lock and BYTE PTR [ecx+0x4c],ah
  40dab3:	pop    esi
  40dab4:	sub    DWORD PTR [ebx+0x5c5e942c],ebx
  40daba:	or     al,0x59
  40dabc:	jp     0x40db2b
  40dabe:	cmc    
  40dabf:	fadd   QWORD PTR [edx+ebx*1]
  40dac2:	dec    ebp
  40dac3:	js     0x40db23
  40dac5:	mov    esp,0xd0d2f727
  40daca:	dec    ebp
  40dacb:	cmp    eax,DWORD PTR [esi+0xf]
  40dace:	fs cli 
  40dad0:	mov    eax,ds:0x9301a9f1
  40dad5:	es pop edx
  40dad7:	dec    ebx
  40dad8:	pop    edi
  40dad9:	pop    ebx
  40dada:	adc    DWORD PTR [ebx-0x4b66bf9b],ecx
  40dae0:	and    edx,DWORD PTR es:[ebx]
  40dae3:	sub    eax,0xfcc2103a
  40dae8:	sbb    ecx,ecx
  40daea:	clc    
  40daeb:	sbb    eax,0xf48ab2d5
  40daf0:	loopne 0x40daa3
  40daf2:	pop    ecx
  40daf3:	inc    ebp
  40daf4:	mov    ebx,DWORD PTR [edx]
  40daf6:	loop   0x40da87
  40daf8:	int    0x51
  40dafa:	add    al,0x11
  40dafc:	inc    edx
  40dafd:	sbb    ebx,ebx
  40daff:	or     BYTE PTR [eax+0xb7a1b91],0x29
  40db06:	xlat   BYTE PTR ds:[ebx]
  40db07:	dec    ebx
  40db08:	or     al,0x8d
  40db0a:	inc    esi
  40db0b:	jbe    0x40db25
  40db0d:	enter  0x4626,0x7c
  40db11:	sub    dh,BYTE PTR [esi+0x1]
  40db14:	push   0x0
  40db16:	int    0x6a
  40db18:	inc    eax
  40db19:	ror    DWORD PTR [ecx],cl
  40db1b:	daa    
  40db1c:	or     edi,eax
  40db1e:	repnz scas eax,DWORD PTR es:[edi]
  40db20:	adc    al,0xac
  40db22:	sbb    edi,DWORD PTR [ebp+esi*1+0x72]
  40db26:	mov    esi,0x278c8c93
  40db2b:	mov    bh,0x41
  40db2d:	out    dx,al
  40db2e:	rcr    DWORD PTR [ebp+0x264cf792],cl
  40db34:	mov    BYTE PTR [eax+edx*8],bh
  40db37:	(bad)  
  40db39:	mov    dh,0x48
  40db3b:	scas   al,BYTE PTR es:[edi]
  40db3c:	dec    esp
  40db3d:	jmp    0x217d:0x9f01a9b8
  40db44:	punpcklbw mm2,DWORD PTR [ebx-0x33]
  40db48:	and    dh,BYTE PTR [edx+0x30b2192b]
  40db4e:	push   eax
  40db4f:	(bad)  
  40db50:	aas    
  40db51:	and    BYTE PTR [ebx],al
  40db53:	add    ebp,DWORD PTR [edx-0x1999034d]
  40db59:	(bad)  
  40db5a:	adc    cl,ch
  40db5c:	add    ecx,DWORD PTR [esi-0x30]
  40db5f:	sahf   
  40db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db61:	push   ebp
  40db62:	sub    BYTE PTR [ebp+0x2c],cl
  40db65:	jmp    0x6e9b:0x499adb9c
  40db6c:	repz mov dh,0xb0
  40db6f:	cld    
  40db70:	push   ss
  40db71:	mov    eax,0x2bb80ae7
  40db76:	sbb    al,0x72
  40db78:	fdivr  st(1),st
  40db7a:	add    eax,0x6bec9c4e
  40db7f:	daa    
  40db80:	mov    dh,dh
  40db82:	outs   dx,BYTE PTR ds:[esi]
  40db83:	lea    esi,[ecx-0x67]
  40db86:	inc    edi
  40db87:	and    eax,ebp
  40db89:	dec    esi
  40db8a:	lods   al,BYTE PTR ds:[esi]
  40db8b:	mov    esp,0x9e3e585f
  40db90:	jge    0x40db20
  40db92:	dec    ebx
  40db93:	sbb    BYTE PTR [eax],0xdf
  40db96:	jecxz  0x40db49
  40db98:	pop    es
  40db99:	add    BYTE PTR [ecx+edx*4-0x720f23d3],dl
  40dba0:	jmp    0x52fd:0x39287369
  40dba7:	pop    es
  40dba8:	dec    esi
  40dba9:	and    bh,cl
  40dbab:	and    BYTE PTR [edi+0x2fd62b6],cl
  40dbb1:	test   eax,0xcc7b7176
  40dbb6:	idiv   cl
  40dbb8:	les    ecx,FWORD PTR [ebx]
  40dbba:	ret    0xd00b
  40dbbd:	ja     0x40db4d
  40dbbf:	iret   
  40dbc0:	retf   
  40dbc1:	jle    0x40dc0e
  40dbc3:	fyl2xp1 
  40dbc5:	popa   
  40dbc6:	in     eax,0x7e
  40dbc8:	jmp    0x8add762
  40dbcd:	iret   
  40dbce:	mov    ecx,0x6777214a
  40dbd3:	inc    ebx
  40dbd4:	out    0x48,eax
  40dbd6:	xor    cl,BYTE PTR [ebx]
  40dbd8:	push   ecx
  40dbd9:	adc    DWORD PTR [edx],eax
  40dbdb:	int3   
  40dbdc:	inc    ecx
  40dbdd:	push   ebx
  40dbde:	lods   al,BYTE PTR ds:[esi]
  40dbdf:	and    ebp,DWORD PTR [ebx+0xf405c1d]
  40dbe5:	mov    edi,0x2bf5a724
  40dbea:	jle    0x40dc60
  40dbec:	jbe    0x40dbe0
  40dbee:	or     edx,edi
  40dbf0:	cwde   
  40dbf1:	rcl    BYTE PTR [ebx-0x7a963b95],cl
  40dbf7:	xor    BYTE PTR [eax+ecx*4-0x58],cl
  40dbfb:	add    DWORD PTR [ebx-0x704e40a2],esi
  40dc01:	dec    esi
  40dc02:	cwde   
  40dc03:	mov    ebp,ebp
  40dc05:	test   BYTE PTR [edx+edi*4],0xad
  40dc09:	add    ah,BYTE PTR [edx+ebp*2-0x49]
  40dc0d:	or     ebx,esp
  40dc0f:	(bad)  
  40dc10:	std    
  40dc11:	dec    ebp
  40dc12:	mov    DWORD PTR [ecx],edx
  40dc14:	mov    al,BYTE PTR [eax]
  40dc16:	sub    ax,0x6ffe
  40dc1a:	fsubr  QWORD PTR [edx-0x26]
  40dc1d:	dec    ebx
  40dc1e:	not    cl
  40dc20:	adc    DWORD PTR [esi+eiz*2+0x6d2ee2e4],esp
  40dc27:	mov    ds:0xb99c6848,eax
  40dc2c:	add    bl,cl
  40dc2e:	cmc    
  40dc2f:	mov    ds:0xddf6b68a,eax
  40dc34:	mov    BYTE PTR [edx],ch
  40dc36:	fld    DWORD PTR [eax+0x15861213]
  40dc3c:	jb     0x40dc55
  40dc3e:	add    ch,BYTE PTR [esi-0x193f85b9]
  40dc44:	xchg   ecx,eax
  40dc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc46:	mov    dl,0x4c
  40dc48:	mov    gs,WORD PTR [esp+eax*8+0x27]
  40dc4c:	push   ss
  40dc4d:	popa   
  40dc4e:	push   0x2f
  40dc50:	jo     0x40dbd4
  40dc52:	jns    0x40dcb1
  40dc54:	jecxz  0x40dc2d
  40dc56:	(bad)  
  40dc59:	push   es
  40dc5a:	ror    ch,0xa4
  40dc5d:	cmp    BYTE PTR [edi+edx*1],ch
  40dc60:	call   0x4adf2ed6
  40dc65:	jnp    0x40dcbc
  40dc67:	(bad)  
  40dc69:	fsqrt  
  40dc6b:	sub    eax,DWORD PTR [edi-0x4b]
  40dc6e:	mov    esi,0xf5fab222
  40dc73:	lods   eax,DWORD PTR ds:[esi]
  40dc74:	push   cs
  40dc75:	or     al,0xfc
  40dc77:	add    BYTE PTR [edi+ebp*4-0x5b87655],cl
  40dc7e:	data16 (bad) 
  40dc80:	idiv   DWORD PTR [edi]
  40dc82:	jns    0x40dce0
  40dc84:	push   edx
  40dc85:	mov    edi,0x90bf47dd
  40dc8a:	int3   
  40dc8b:	pop    es
  40dc8c:	and    dh,BYTE PTR [ebx+0x25]
  40dc8f:	pop    edx
  40dc90:	mov    eax,ds:0x7e36a99b
  40dc95:	mov    edi,0xf109ce3d
  40dc9a:	or     eax,0xb7f09082
  40dc9f:	push   ebx
  40dca0:	mov    al,0xc4
  40dca2:	dec    edx
  40dca3:	cmp    ch,BYTE PTR [eax]
  40dca5:	jae    0x40dc81
  40dca7:	and    eax,0xf9ff847c
  40dcac:	push   edx
  40dcad:	rol    dh,cl
  40dcaf:	stos   DWORD PTR es:[edi],eax
  40dcb0:	push   ss
  40dcb1:	out    0x7e,eax
  40dcb3:	test   BYTE PTR [ebx+0x5d],bl
  40dcb6:	dec    edi
  40dcb7:	arpl   WORD PTR ds:0x34a66f25,si
  40dcbd:	jns    0x40dc4c
  40dcbf:	pop    ds
  40dcc0:	(bad)  
  40dcc1:	enter  0x55f3,0x5d
  40dcc5:	inc    esi
  40dcc6:	mov    eax,0xb318e9ec
  40dccb:	add    eax,0xf97ae021
  40dcd0:	ins    BYTE PTR es:[edi],dx
  40dcd1:	mov    DWORD PTR [ecx+0x50],esi
  40dcd4:	neg    bl
  40dcd6:	or     eax,0x628e323d
  40dcdb:	jg     0x40dce6
  40dcdd:	jbe    0x40dd2a
  40dcdf:	dec    esp
  40dce0:	scas   al,BYTE PTR es:[edi]
  40dce1:	jl     0x40dcd1
  40dce3:	sub    BYTE PTR [edx+edi*4],0xe4
  40dce7:	sub    bh,BYTE PTR [ecx-0x50]
  40dcea:	out    dx,eax
  40dceb:	and    ecx,edx
  40dced:	test   al,0x45
  40dcef:	add    BYTE PTR [esi],cl
  40dcf1:	and    DWORD PTR [esi-0x5e],edi
  40dcf4:	add    DWORD PTR [esi-0x58],ebp
  40dcf7:	aaa    
  40dcf8:	pop    ecx
  40dcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcfa:	inc    eax
  40dcfb:	sbb    edi,0x55f93900
  40dd01:	mov    al,ds:0x6321c348
  40dd06:	imul   ecx,ebx,0x345d8a10
  40dd0c:	or     al,0x83
  40dd0e:	adc    al,0xdd
  40dd10:	add    edi,esp
  40dd12:	pop    eax
  40dd13:	fidiv  WORD PTR [edx+esi*1-0x2c417201]
  40dd1a:	and    dh,0xe2
  40dd1d:	call   0x990:0x3ac7306d
  40dd24:	sub    eax,0x638a83f
  40dd29:	cld    
  40dd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd2b:	inc    ecx
  40dd2c:	test   ebx,edi
  40dd2e:	loope  0x40dcc9
  40dd30:	fcmovb st,st(3)
  40dd32:	cdq    
  40dd33:	dec    ebx
  40dd34:	arpl   WORD PTR [edx+0x72],di
  40dd37:	shr    BYTE PTR [ebp+eiz*1-0x70],0x1c
  40dd3c:	ret    0xca5f
  40dd3f:	jp     0x40dd0b
  40dd41:	aam    0x49
  40dd43:	xchg   ebp,eax
  40dd44:	xor    eax,0x60436cc5
  40dd49:	and    ch,bh
  40dd4b:	or     eax,DWORD PTR [esp+edi*1]
  40dd4e:	shr    BYTE PTR [eax+0x6b65bb0a],0x69
  40dd55:	jnp    0x40dd69
  40dd57:	test   al,0xa
  40dd59:	cmp    al,0xd5
  40dd5b:	cmp    BYTE PTR [edx+0xd],cl
  40dd5e:	xchg   esp,eax
  40dd5f:	cdq    
  40dd60:	pop    esi
  40dd61:	aaa    
  40dd62:	js     0x40ddd8
  40dd64:	das    
  40dd65:	xlat   BYTE PTR ds:[ebx]
  40dd66:	xchg   BYTE PTR [ecx],dh
  40dd68:	mov    esp,0xed31a341
  40dd6d:	jp     0x40ddca
  40dd6f:	mov    edi,0x5dc13a61
  40dd74:	dec    esi
  40dd75:	mov    eax,0xfc51ff12
  40dd7a:	mov    edi,DWORD PTR [ebp-0x7f0c5c3a]
  40dd80:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd82:	xchg   ebp,eax
  40dd83:	cdq    
  40dd84:	sbb    al,0x52
  40dd86:	mov    eax,0x11a28361
  40dd8b:	sbb    eax,0x9eaf4cf3
  40dd90:	lods   eax,DWORD PTR ds:[esi]
  40dd91:	inc    esi
  40dd92:	adc    BYTE PTR [ebp-0x6e],ah
  40dd95:	call   edi
  40dd97:	les    edi,FWORD PTR [ebp+0x67782b5e]
  40dd9d:	fs push 0xffffffd7
  40dda0:	cmp    DWORD PTR ds:0xc18dc0a6,edx
  40dda6:	outs   dx,BYTE PTR ds:[esi]
  40dda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda8:	jo     0x40dd48
  40ddaa:	rol    BYTE PTR [eax+eax*1],0x13
  40ddae:	ss jns 0x40dd91
  40ddb1:	dec    eax
  40ddb2:	fidiv  DWORD PTR [eiz*1+0x26371bfe]
  40ddb9:	or     DWORD PTR [ecx],ecx
  40ddbb:	loope  0x40dd5e
  40ddbd:	mov    bh,bh
  40ddbf:	mov    dl,0x4d
  40ddc2:	mov    cl,0xc1
  40ddc4:	iret   
  40ddc5:	aaa    
  40ddc6:	xor    eax,0x268a19c8
  40ddcb:	and    eax,0xbac549dd
  40ddd0:	shl    DWORD PTR [edx-0x1e84a50e],cl
  40ddd6:	outs   dx,DWORD PTR ds:[esi]
  40ddd7:	add    BYTE PTR [esi-0x4],al
  40ddda:	das    
  40dddb:	dec    ebp
  40dddc:	call   0x554b8a0a
  40dde1:	push   ebp
  40dde2:	test   ecx,esp
  40dde4:	inc    ebx
  40dde5:	xchg   ecx,eax
  40dde6:	pusha  
  40dde7:	ins    BYTE PTR es:[edi],dx
  40dde8:	(bad)  
  40dde9:	mov    dl,0xc5
  40ddeb:	sahf   
  40ddec:	arpl   WORD PTR [edi+0x5b30d7af],di
  40ddf2:	sub    ah,BYTE PTR [esi]
  40ddf4:	mov    ah,0x4
  40ddf6:	call   0x84fe37f0
  40ddfb:	hlt    
  40ddfc:	leave  
  40ddfd:	and    al,0xbf
  40ddff:	sub    ebx,DWORD PTR [eax+0x60ae7b51]
  40de05:	jl     0x40de40
  40de07:	mov    dl,0x3a
  40de09:	and    esi,DWORD PTR [esi+0x3e5366fb]
  40de0f:	aad    0x24
  40de11:	xchg   BYTE PTR [esi+0x10],dh
  40de14:	ins    BYTE PTR es:[edi],dx
  40de15:	sbb    dl,BYTE PTR [edi-0x3eae6575]
  40de1b:	jae    0x40de5e
  40de1d:	xor    DWORD PTR [edi+0x336f0bb5],0x84dc6ea9
  40de27:	adc    DWORD PTR [ecx-0x1dc78544],ebx
  40de2d:	or     BYTE PTR [ebx-0x3cfb78e3],dl
  40de33:	test   DWORD PTR [eax-0xde47d1d],edi
  40de39:	pop    edx
  40de3a:	mov    ebx,0xd89d9b9
  40de3f:	push   cs
  40de40:	les    edx,FWORD PTR [edi-0x6138a70a]
  40de46:	xchg   ebp,eax
  40de47:	xor    BYTE PTR [ebp-0x45668adc],ah
  40de4d:	enter  0x52ac,0x0
  40de51:	out    dx,eax
  40de52:	inc    ecx
  40de53:	call   0x88c0:0x8a797441
  40de5a:	ins    DWORD PTR es:[edi],dx
  40de5b:	stos   DWORD PTR es:[edi],eax
  40de5c:	push   ebx
  40de5d:	rcr    dh,0xb9
  40de60:	cmp    ebx,edx
  40de62:	jb     0x40ded6
  40de64:	push   edi
  40de65:	lahf   
  40de66:	sti    
  40de67:	scas   al,BYTE PTR es:[edi]
  40de68:	shl    DWORD PTR [edi+eiz*2+0x10],cl
  40de6c:	test   al,0xf7
  40de6e:	stos   DWORD PTR es:[edi],eax
  40de6f:	cdq    
  40de70:	fstp   TBYTE PTR [ebx*1+0x5ec4c50b]
  40de77:	push   ebx
  40de78:	sub    ebx,ecx
  40de7a:	fdivp  st(6),st
  40de7c:	sbb    dh,BYTE PTR [edx+0x5616c994]
  40de82:	adc    eax,0xa5681c10
  40de87:	push   esp
  40de88:	call   0x7ae7028e
  40de8d:	xchg   esp,eax
  40de8e:	in     al,dx
  40de8f:	dec    esp
  40de90:	pushf  
  40de91:	mov    ebx,0xeff991b0
  40de96:	retf   0x4fb0
  40de99:	sbb    DWORD PTR [edi],eax
  40de9b:	imul   edi,DWORD PTR [esi-0x26],0x8c0a7336
  40dea2:	sbb    edi,DWORD PTR [ecx-0x51]
  40dea5:	hlt    
  40dea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea7:	int3   
  40dea8:	mov    ch,0x2e
  40deaa:	repz aaa 
  40deac:	mov    eax,ds:0x93e1041a
  40deb1:	add    edi,esi
  40deb3:	rcl    BYTE PTR [ebp+0x13],cl
  40deb6:	jecxz  0x40de69
  40deb8:	adc    ebx,ebx
  40deba:	std    
  40debb:	aas    
  40debc:	xchg   ecx,eax
  40debd:	(bad)  
  40debe:	sbb    edx,DWORD PTR [esi+0x2b]
  40dec1:	mov    ss,esi
  40dec3:	xor    BYTE PTR [eiz*4+0x3f12ed09],cl
  40deca:	aaa    
  40decb:	jp     0x40deed
  40decd:	outs   dx,DWORD PTR ds:[esi]
  40dece:	xchg   ecx,eax
  40decf:	popa   
  40ded0:	cdq    
  40ded1:	xor    BYTE PTR [ecx],cl
  40ded3:	or     eax,0xb5db0d6e
  40ded8:	rcl    DWORD PTR [ecx-0x6],cl
  40dedb:	jp     0x40de92
  40dedd:	mov    WORD PTR [ebp+0x6b248a95],?
  40dee3:	(bad)  
  40dee4:	call   0xee18330a
  40dee9:	mov    ebx,0xb54a3fb5
  40deee:	stc    
  40deef:	inc    ebp
  40def0:	pushf  
  40def1:	out    dx,al
  40def2:	jne    0x40deb1
  40def4:	dec    edx
  40def5:	push   edi
  40def6:	es push edi
  40def8:	mov    bl,0x8d
  40defa:	lods   eax,DWORD PTR ds:[esi]
  40defb:	push   edi
  40defc:	or     al,0x8a
  40defe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deff:	div    DWORD PTR [edi-0x7]
  40df02:	push   esi
  40df03:	sub    al,0xd2
  40df05:	pop    ebp
  40df06:	mov    ecx,0x508d68ee
  40df0b:	in     eax,0xc9
  40df0d:	aad    0x89
  40df0f:	cwde   
  40df10:	pop    ebp
  40df11:	sbb    al,0x6
  40df13:	clts   
  40df15:	js     0x40dedc
  40df17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df18:	icebp  
  40df19:	cmp    al,0xaa
  40df1b:	xor    ecx,ecx
  40df1d:	aaa    
  40df1e:	sbb    ebx,ebx
  40df20:	icebp  
  40df21:	sub    DWORD PTR [esi],ebx
  40df23:	sbb    al,0x14
  40df25:	sbb    DWORD PTR [esi+0x5],ecx
  40df28:	xchg   ebx,eax
  40df29:	jge    0x40ded0
  40df2b:	popa   
  40df2c:	adc    BYTE PTR [esi],bh
  40df2e:	sbb    eax,0x9c4e2ef1
  40df33:	sub    ebp,ebx
  40df35:	jns    0x40df9a
  40df37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df38:	sub    bl,dh
  40df3a:	push   ds
  40df3b:	in     eax,0x87
  40df3d:	pop    edx
  40df3e:	adc    BYTE PTR [eax],bl
  40df40:	push   esi
  40df41:	or     BYTE PTR [edi],cl
  40df43:	mov    ds:0xceb39f0f,eax
  40df48:	push   eax
  40df49:	call   0x54d8:0x66006210
  40df50:	jg     0x40df8d
  40df52:	sub    BYTE PTR [eax-0x9231a31],bh
  40df58:	pop    edx
  40df59:	cmp    al,al
  40df5b:	add    eax,DWORD PTR [edi]
  40df5d:	xor    ebx,DWORD PTR [ecx+0x17]
  40df60:	stos   DWORD PTR es:[edi],eax
  40df61:	pushf  
  40df62:	pop    es
  40df63:	daa    
  40df64:	fist   DWORD PTR [ebx-0x4286a08c]
  40df6a:	xchg   ebx,eax
  40df6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6c:	jecxz  0x40defa
  40df6e:	jg     0x40dfb6
  40df70:	aam    0xd6
  40df72:	fsubr  DWORD PTR [edx+ebx*2+0x50c3453c]
  40df79:	xchg   edi,eax
  40df7a:	lahf   
  40df7b:	inc    eax
  40df7c:	out    dx,al
  40df7d:	adc    BYTE PTR [ebx-0x7968b57f],cl
  40df83:	xor    esi,esp
  40df85:	and    eax,DWORD PTR [ebx+0x48]
  40df88:	daa    
  40df89:	jmp    0x40df87
  40df8b:	push   ecx
  40df8c:	shr    DWORD PTR [eax],1
  40df8e:	inc    esp
  40df8f:	dec    esi
  40df90:	outs   dx,DWORD PTR ds:[esi]
  40df91:	pop    esp
  40df92:	push   0x51
  40df94:	das    
  40df95:	popf   
  40df96:	mov    eax,ds:0x917fa51f
  40df9b:	sbb    BYTE PTR [edx+0x4d654dff],0x79
  40dfa2:	arpl   WORD PTR [edx-0x1f],bx
  40dfa5:	in     eax,dx
  40dfa6:	fwait
  40dfa7:	dec    ebx
  40dfa8:	mov    cl,BYTE PTR [eax+0x213addad]
  40dfae:	mul    BYTE PTR [esi-0x7]
  40dfb1:	dec    eax
  40dfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfb3:	into   
  40dfb4:	push   0xc
  40dfb6:	test   BYTE PTR [eax],cl
  40dfb8:	xchg   ebx,eax
  40dfb9:	shl    DWORD PTR [ecx+0x7],cl
  40dfbc:	xor    DWORD PTR [eax],0xffffffda
  40dfbf:	push   es
  40dfc0:	xchg   ecx,eax
  40dfc1:	add    DWORD PTR [ebp+0x68b6a621],esi
  40dfc7:	imul   ebp,DWORD PTR [ebp-0x7da65c],0x4e
  40dfce:	retf   0x4543
  40dfd1:	jmp    0x8cb01d91
  40dfd6:	js     0x40dfdd
  40dfd8:	sahf   
  40dfd9:	inc    esp
  40dfda:	inc    ecx
  40dfdb:	mov    bl,BYTE PTR [esi+0x2e]
  40dfde:	in     eax,dx
  40dfdf:	ret    0x6129
  40dfe2:	neg    DWORD PTR [ebx+0x46]
  40dfe5:	or     eax,0x92313a10
  40dfea:	jno    0x40e03a
  40dfec:	mov    ecx,0x6dd14b8b
  40dff1:	and    BYTE PTR [eax-0x522bf080],ch
  40dff7:	sbb    ebx,0xfffffff6
  40dffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dffb:	ret    
  40dffc:	mov    esp,0xa94bbebf
  40e001:	and    edi,edx
  40e003:	cmc    
  40e004:	idiv   DWORD PTR [ecx+ebx*4-0x649766f4]
  40e00b:	push   0xffffffbf
  40e00d:	scas   eax,DWORD PTR es:[edi]
  40e00e:	or     eax,0xd1e15b1f
  40e013:	inc    eax
  40e014:	jmp    0x4e5d:0x989de547
  40e01b:	xor    BYTE PTR ds:0xb74db6f6,dh
  40e021:	push   es
  40e022:	pop    ebx
  40e023:	call   0x3cd0:0x25be94c9
  40e02a:	jnp    0x40e00c
  40e02c:	out    dx,al
  40e02d:	xchg   esi,eax
  40e02e:	sub    BYTE PTR [eax],cl
  40e030:	ror    dl,1
  40e032:	lods   eax,DWORD PTR ds:[esi]
  40e033:	cmp    bh,BYTE PTR [edx-0x26]
  40e036:	ret    
  40e037:	ficom  WORD PTR [eax+eax*2+0x2ff3a634]
  40e03e:	ficomp DWORD PTR [eax+0x72]
  40e041:	retf   0x7564
  40e044:	sub    ebp,ebp
  40e046:	aam    0xe6
  40e048:	xchg   ebx,eax
  40e049:	pop    ds
  40e04a:	arpl   WORD PTR [ecx],bx
  40e04c:	leave  
  40e04d:	lahf   
  40e04e:	(bad)  
  40e050:	add    eax,0x7b5627af
  40e055:	daa    
  40e056:	mov    ds:0x9579ce06,eax
  40e05b:	data16 sbb dl,BYTE PTR [edi+0x664b4009]
  40e062:	xchg   dl,bl
  40e064:	xchg   esi,eax
  40e065:	repnz cmp DWORD PTR [eax-0x766f8de4],ebx
  40e06c:	fnstsw WORD PTR [edi-0x3c]
  40e06f:	pop    ebp
  40e070:	xor    al,0xf9
  40e072:	ror    BYTE PTR fs:[edi*4+0x7112644a],1
  40e07a:	cld    
  40e07b:	mov    dh,0x8c
  40e07d:	inc    esi
  40e07e:	lods   al,BYTE PTR ds:[esi]
  40e07f:	hlt    
  40e080:	mov    ch,0xae
  40e082:	leave  
  40e083:	das    
  40e084:	clc    
  40e085:	and    eax,0x8e4f4510
  40e08a:	enter  0xfe4f,0xdb
  40e08e:	mov    WORD PTR [ebp+0x40b621ea],?
  40e094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e095:	fnsave es:[ebx-0x80]
  40e099:	in     eax,dx
  40e09a:	jle    0x40e058
  40e09c:	xchg   edx,eax
  40e09d:	sub    ecx,ecx
  40e09f:	call   0x723c:0x1f475de7
  40e0a6:	mov    ebp,0x149417df
  40e0ab:	pop    edi
  40e0ac:	xchg   al,al
  40e0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0af:	mov    esp,DWORD PTR ds:[ebp+edi*1+0x564508cb]
  40e0b7:	shr    DWORD PTR [ebx-0x7f],0xa4
  40e0bb:	xor    dh,bl
  40e0bd:	bound  esi,QWORD PTR [edx]
  40e0bf:	sbb    cl,BYTE PTR [ebx+esi*8-0x52]
  40e0c3:	loope  0x40e0bd
  40e0c5:	adc    eax,0x76ae38d0
  40e0ca:	mov    edx,0xde56b79e
  40e0cf:	cmp    bl,dh
  40e0d1:	xor    DWORD PTR [edi+0xf7d130e],0x8ad82a71
  40e0db:	loopne 0x40e11f
  40e0dd:	ret    0x5a18
  40e0e0:	gs out 0x2b,al
  40e0e3:	pop    eax
  40e0e4:	sub    al,BYTE PTR [edx+0x7463bf4d]
  40e0ea:	test   dl,dh
  40e0ec:	lods   al,BYTE PTR ds:[esi]
  40e0ed:	cmp    DWORD PTR [eax+0x2ca9afec],esi
  40e0f3:	pop    es
  40e0f4:	popf   
  40e0f5:	rcl    BYTE PTR [edi-0x6a55b24d],cl
  40e0fb:	ins    BYTE PTR es:[edi],dx
  40e0fc:	es ret 0x1bea
  40e100:	inc    ebp
  40e101:	mov    BYTE PTR [ebx+0xe],ch
  40e104:	repz les esp,FWORD PTR ds:0x16b2ec98
  40e10b:	xor    edx,esp
  40e10d:	dec    esi
  40e10e:	inc    edi
  40e10f:	dec    ebx
  40e110:	xchg   ebp,eax
  40e111:	push   ebp
  40e112:	mov    esi,DWORD PTR [ebp+0x61]
  40e115:	add    BYTE PTR [edx+0x584fd705],cl
  40e11b:	fwait
  40e11c:	add    dh,BYTE PTR [ecx+ebp*2]
  40e11f:	fwait
  40e120:	xor    DWORD PTR [ebp+ebp*2+0x40],0xffffffef
  40e125:	(bad)  
  40e126:	adc    al,0x34
  40e128:	mov    eax,ds:0x98266c3
  40e12d:	cmp    eax,0xe63a5373
  40e132:	scas   eax,DWORD PTR es:[edi]
  40e133:	mov    edx,0x82c85221
  40e138:	pop    ss
  40e139:	jl     0x40e1b7
  40e13b:	lahf   
  40e13c:	cmp    DWORD PTR [edi+0x4d87fd49],esp
  40e142:	out    dx,al
  40e143:	adc    ebx,eax
  40e145:	jnp    0x40e185
  40e147:	cmp    dl,BYTE PTR [eax+edx*8-0x78d86824]
  40e14e:	mov    dh,0x12
  40e150:	lods   al,BYTE PTR ds:[esi]
  40e151:	pop    ecx
  40e152:	xor    bl,bl
  40e154:	cmp    al,0x11
  40e156:	jbe    0x40e182
  40e158:	fs aam 0xa2
  40e15b:	or     ebp,DWORD PTR [edx-0x6c]
  40e15e:	xchg   DWORD PTR [edi+0x5966a7f1],ecx
  40e164:	or     esp,DWORD PTR [edi]
  40e166:	sub    ebx,DWORD PTR [edi+0x4a62f908]
  40e16c:	lea    edi,[ebx-0x28f42d2a]
  40e172:	cmp    eax,0x4f459888
  40e177:	mov    ch,0x8b
  40e179:	pop    ebp
  40e17a:	in     al,0xdc
  40e17c:	xor    eax,0x30e243d
  40e181:	pusha  
  40e182:	mov    bl,0x1e
  40e184:	mov    ebp,ebx
  40e186:	pop    ebp
  40e187:	dec    edx
  40e188:	ficom  WORD PTR [edx-0xc4cb6d4]
  40e18e:	je     0x40e1dd
  40e190:	outs   dx,BYTE PTR ds:[esi]
  40e191:	icebp  
  40e192:	mov    bl,0xe0
  40e194:	fbld   TBYTE PTR [ebx+0x587d70d8]
  40e19a:	jne    0x40e199
  40e19c:	test   al,0x5
  40e19e:	sbb    bh,BYTE PTR [eax]
  40e1a0:	adc    DWORD PTR [edi-0x5c],ebp
  40e1a3:	xchg   edi,eax
  40e1a4:	out    0x8d,al
  40e1a6:	or     BYTE PTR [ebp-0x8],dh
  40e1a9:	popa   
  40e1aa:	pop    es
  40e1ab:	push   edx
  40e1ac:	mov    eax,0xf2bae119
  40e1b1:	in     eax,0xea
  40e1b3:	lods   al,BYTE PTR ds:[esi]
  40e1b4:	adc    BYTE PTR [edi-0x495d04bc],al
  40e1ba:	push   eax
  40e1bb:	idiv   ch
  40e1bd:	call   0x43fc:0x142e7ad0
  40e1c4:	push   es
  40e1c5:	sbb    ah,BYTE PTR [esp+eiz*8]
  40e1c8:	mov    ah,0xb
  40e1ca:	gs add al,0x41
  40e1cd:	push   ebp
  40e1ce:	dec    esi
  40e1cf:	outs   dx,DWORD PTR ds:[esi]
  40e1d0:	xor    al,0xa6
  40e1d2:	stos   DWORD PTR es:[edi],eax
  40e1d3:	push   ebp
  40e1d4:	or     edi,DWORD PTR [ebx]
  40e1d6:	jp     0x40e24b
  40e1d8:	loopne 0x40e254
  40e1da:	push   ecx
  40e1db:	and    eax,edi
  40e1dd:	arpl   WORD PTR [ecx],dx
  40e1df:	push   0x916b16e6
  40e1e4:	(bad)  
  40e1e6:	in     al,dx
  40e1e7:	adc    cl,BYTE PTR [edx]
  40e1e9:	mov    ds:0xf4f87d45,al
  40e1ee:	pop    esi
  40e1ef:	cmp    eax,0x43cdb43f
  40e1f4:	add    eax,0x3152fe7b
  40e1f9:	es aad 0x70
  40e1fc:	mov    eax,0x20f1c361
  40e201:	and    al,BYTE PTR [edx+eax*2]
  40e204:	adc    bh,BYTE PTR [ecx+eiz*1+0x71062413]
  40e20b:	fs dec ebp
  40e20d:	leave  
  40e20e:	sti    
  40e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e210:	and    bh,bl
  40e212:	push   ebp
  40e213:	push   eax
  40e214:	pop    edi
  40e215:	mov    eax,0xfa159d8e
  40e21a:	sbb    al,0xef
  40e21c:	xchg   ebp,eax
  40e21d:	xchg   BYTE PTR [eax+0x22af8379],al
  40e223:	mov    di,0x995a
  40e227:	xchg   esp,eax
  40e228:	or     eax,0xc9bbc3af
  40e22d:	and    esi,DWORD PTR [edx]
  40e22f:	push   eax
  40e230:	and    al,0x6d
  40e232:	inc    eax
  40e233:	push   esp
  40e234:	(bad)  
  40e237:	push   es
  40e238:	pushf  
  40e239:	ret    0xfab1
  40e23c:	dec    edx
  40e23d:	cs jp  0x40e263
  40e240:	sub    ah,ch
  40e242:	lods   al,BYTE PTR ds:[esi]
  40e243:	mov    edx,0x28f800cb
  40e248:	inc    esp
  40e249:	xchg   cl,ch
  40e24b:	lea    esp,[ebx+0x445a106b]
  40e251:	mov    eax,ds:0xde7ae998
  40e256:	lea    esp,[edi-0x3c577267]
  40e25c:	fsubr  st(1),st
  40e25e:	mov    edi,DWORD PTR [esi-0x1c]
  40e261:	lods   eax,DWORD PTR ds:[esi]
  40e262:	sub    BYTE PTR cs:[eax-0x4f],ah
  40e266:	pusha  
  40e267:	mov    ds:0xc5652282,eax
  40e26c:	cmc    
  40e26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e26e:	xor    DWORD PTR [edi],ebx
  40e270:	push   cs
  40e271:	pop    esi
  40e272:	lds    ebx,FWORD PTR [ebx]
  40e274:	das    
  40e275:	cmp    ah,BYTE PTR [ecx-0x47]
  40e278:	fistp  WORD PTR [eax-0x61dcd60f]
  40e27e:	stos   BYTE PTR es:[edi],al
  40e27f:	(bad)  
  40e280:	sub    bh,BYTE PTR [edi]
  40e282:	mov    al,ds:0x81ee61b4
  40e287:	xchg   esp,eax
  40e288:	out    dx,eax
  40e289:	mov    BYTE PTR [edx-0x1a],cl
  40e28c:	or     esp,DWORD PTR [edx-0x46]
  40e28f:	cmp    DWORD PTR [edx],edx
  40e291:	out    dx,eax
  40e292:	call   0x7458ea42
  40e297:	xchg   DWORD PTR [ebx+0x1a014887],ecx
  40e29d:	sub    esi,edx
  40e29f:	out    0xa6,eax
  40e2a1:	test   BYTE PTR [edi],bl
  40e2a3:	xor    al,0x70
  40e2a5:	sub    BYTE PTR [ebx+0x41],bl
  40e2a8:	call   0xb70d:0xcddc1af2
  40e2af:	inc    eax
  40e2b0:	or     DWORD PTR [ecx+0x35],ebx
  40e2b3:	stos   BYTE PTR es:[edi],al
  40e2b4:	clc    
  40e2b5:	xchg   ecx,eax
  40e2b6:	sbb    DWORD PTR [ebx+edx*8+0x9],0x6e
  40e2bb:	std    
  40e2bc:	out    dx,al
  40e2bd:	aas    
  40e2be:	pop    edi
  40e2bf:	pop    ecx
  40e2c0:	scas   al,BYTE PTR es:[edi]
  40e2c1:	cmp    eax,0xb38bb192
  40e2c6:	stos   DWORD PTR es:[edi],eax
  40e2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c8:	ins    BYTE PTR es:[edi],dx
  40e2c9:	mov    ds:0x8b25d6a3,eax
  40e2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2cf:	and    eax,0x66873c61
  40e2d4:	mov    edi,0x67bf6400
  40e2d9:	out    0x65,eax
  40e2db:	push   ecx
  40e2dc:	sub    ah,BYTE PTR [esp+esi*8]
  40e2df:	mov    DWORD PTR [esi],ecx
  40e2e1:	pop    ecx
  40e2e2:	sbb    cl,BYTE PTR [ebx]
  40e2e4:	or     eax,0xc04d937d
  40e2e9:	or     dh,BYTE PTR [edx+0x1c]
  40e2ec:	fs pop ecx
  40e2ee:	jp     0x40e303
  40e2f0:	fstp   DWORD PTR [eax+eax*4-0x5a]
  40e2f4:	dec    ebp
  40e2f5:	mov    gs,WORD PTR [ecx]
  40e2f7:	js     0x40e279
  40e2f9:	dec    ecx
  40e2fa:	cmp    ecx,DWORD PTR [edx-0x19fad56e]
  40e300:	in     eax,0xdc
  40e302:	es out 0x87,eax
  40e305:	jns    0x40e377
  40e307:	dec    edx
  40e308:	push   ss
  40e309:	cmp    bh,BYTE PTR [eax-0xb]
  40e30c:	outs   dx,DWORD PTR ds:[esi]
  40e30d:	cli    
  40e30e:	xor    ebp,edx
  40e310:	jb     0x40e309
  40e312:	aam    0xf1
  40e314:	mov    dl,0x9e
  40e316:	pop    ecx
  40e317:	daa    
  40e318:	sub    dh,BYTE PTR [esi-0x40a7a563]
  40e31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e31f:	add    eax,esp
  40e321:	push   ss
  40e322:	bnd jo 0x40e381
  40e325:	ds loop 0x40e3a5
  40e328:	xor    edx,DWORD PTR [edi]
  40e32a:	or     al,BYTE PTR ds:0x39703dd9
  40e330:	pop    ebp
  40e331:	add    dl,BYTE PTR [edx+0x671f584e]
  40e337:	ficom  DWORD PTR [eax-0x30]
  40e33a:	and    cl,cl
  40e33c:	aad    0x48
  40e33e:	and    BYTE PTR [edi-0x47],bl
  40e341:	sub    al,0x9d
  40e343:	test   al,0x75
  40e345:	sub    eax,0x29addd90
  40e34a:	mov    dl,0x76
  40e34c:	(bad)
  40e350:	and    al,0x26
  40e352:	loop   0x40e2d8
  40e354:	ficom  DWORD PTR [ebx+0x20d81b1e]
  40e35a:	add    BYTE PTR [ecx+0x25],0x69
  40e35e:	xlat   BYTE PTR ds:[ebx]
  40e35f:	test   dl,ah
  40e361:	push   ebx
  40e362:	mov    edi,0x2d77dadb
  40e367:	dec    esi
  40e368:	ficom  DWORD PTR [esi+0x18]
  40e36b:	jmp    0x40e320
  40e36d:	int3   
  40e36e:	add    BYTE PTR [edx],ch
  40e370:	mov    al,ds:0xb18fa462
  40e375:	mov    ebp,0x7f8b934b
  40e37a:	ret    
  40e37b:	xchg   ebx,eax
  40e37c:	sub    eax,0xa85d27e8
  40e381:	add    al,0xdb
  40e383:	add    al,0xe
  40e385:	call   0x713:0xa90ac75
  40e38c:	icebp  
  40e38d:	mov    ds:0x36331056,al
  40e393:	test   BYTE PTR [ebp+edx*4+0x79932ef0],0xcb
  40e39b:	or     eax,0x13baf828
  40e3a0:	xchg   esi,eax
  40e3a1:	jge    0x40e40a
  40e3a3:	or     DWORD PTR [esi-0x80],esp
  40e3a6:	jge    0x40e3b8
  40e3a8:	push   ds
  40e3a9:	jmp    0x40e3b4
  40e3ab:	sahf   
  40e3ac:	and    esp,0x5f
  40e3af:	call   0x26186b62
  40e3b4:	adc    ch,ch
  40e3b6:	or     DWORD PTR [ebp-0x2a2f7e52],ebp
  40e3bc:	mov    ebp,0xd830c32
  40e3c1:	sbb    ax,0x2cc7
  40e3c5:	or     ebp,esi
  40e3c7:	stos   DWORD PTR es:[edi],eax
  40e3c8:	ret    
  40e3c9:	daa    
  40e3ca:	in     eax,dx
  40e3cb:	mov    ?,WORD PTR [esi-0x364c5489]
  40e3d1:	push   ds
  40e3d2:	and    BYTE PTR [ebx],0x9e
  40e3d5:	jae    0x40e41d
  40e3d7:	inc    edx
  40e3d8:	data16 jne 0x40e40f
  40e3db:	jb     0x40e3a3
  40e3dd:	add    ecx,edi
  40e3df:	loope  0x40e43b
  40e3e1:	(bad)  
  40e3e2:	hlt    
  40e3e3:	fiadd  DWORD PTR [esi+esi*1]
  40e3e6:	mov    WORD PTR [edi+edi*1-0x6],ds
  40e3ea:	repnz xchg edx,eax
  40e3ec:	inc    edi
  40e3ed:	cmp    DWORD PTR [ebx+0x221a9712],ebx
  40e3f3:	and    eax,0xa660a2ce
  40e3f8:	mov    bl,0x57
  40e3fa:	into   
  40e3fb:	mov    ch,0x98
  40e3fd:	adc    dh,bl
  40e3ff:	call   0x9b3f:0x736b822
  40e406:	sub    eax,0xc32b750b
  40e40b:	in     eax,dx
  40e40c:	adc    eax,0x248acd87
  40e411:	(bad)  
  40e412:	jbe    0x40e3fe
  40e414:	jmp    0x8bd8:0xb9ad2c5b
  40e41b:	xchg   BYTE PTR [ebx+0x5c],dh
  40e41e:	bnd jae 0x40e3f8
  40e421:	fbstp  TBYTE PTR [ebx+0x7488100b]
  40e427:	adc    al,BYTE PTR [ebx]
  40e429:	dec    eax
  40e42a:	dec    edi
  40e42b:	outs   dx,DWORD PTR ds:[esi]
  40e42c:	jne    0x40e42c
  40e42e:	pop    ecx
  40e42f:	fimul  WORD PTR [esi+0x52]
  40e432:	inc    ecx
  40e433:	add    al,al
  40e435:	or     edi,DWORD PTR [esi+0x6d44e311]
  40e43b:	fsubr  DWORD PTR [edx+0x56]
  40e43e:	cmp    ch,BYTE PTR [esi+0x1f8127bc]
  40e444:	mov    eax,ds:0x4cf7a8c1
  40e449:	dec    ecx
  40e44a:	leave  
  40e44b:	ins    BYTE PTR es:[edi],dx
  40e44c:	scas   al,BYTE PTR es:[edi]
  40e44d:	push   edi
  40e44e:	sbb    BYTE PTR [eax],bl
  40e450:	jp     0x40e446
  40e452:	xchg   BYTE PTR [eax+0x30ca93f7],dh
  40e458:	mov    ebp,0xa0a2fa4d
  40e45d:	mov    ah,0x5
  40e45f:	sti    
  40e460:	push   esi
  40e461:	mov    ds:0xfc46d723,al
  40e466:	xchg   BYTE PTR [ebx],cl
  40e468:	fist   DWORD PTR [edx]
  40e46a:	and    cl,cl
  40e46c:	leave  
  40e46d:	cli    
  40e46e:	push   eax
  40e46f:	retf   
  40e470:	add    ecx,ebx
  40e472:	fidivr DWORD PTR [ecx+0x16]
  40e475:	daa    
  40e476:	fld    QWORD PTR [eax]
  40e478:	lods   al,BYTE PTR ds:[esi]
  40e479:	sahf   
  40e47a:	adc    al,0xf6
  40e47c:	mov    dl,0x19
  40e47e:	jns    0x40e456
  40e480:	jne    0x40e4ef
  40e482:	sbb    DWORD PTR [ebx-0x2e],edi
  40e485:	mov    ebx,0x1e1ef865
  40e48a:	sub    BYTE PTR [eax+edx*4+0x27],ah
  40e48e:	scas   al,BYTE PTR es:[edi]
  40e48f:	xlat   BYTE PTR ds:[ebx]
  40e490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e491:	in     al,0x80
  40e493:	ret    0x742c
  40e496:	es dec ebp
  40e498:	inc    esi
  40e499:	leave  
  40e49a:	add    esp,DWORD PTR [edi]
  40e49c:	out    dx,al
  40e49d:	push   ebp
  40e49e:	sbb    eax,0xf44045a3
  40e4a3:	jmp    0xc01b:0xb545a0da
  40e4aa:	(bad)  
  40e4ab:	jmp    0x40e4c4
  40e4ad:	imul   dh
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	fld    DWORD PTR [edx-0x102d2608]
  40e4b6:	push   ebp
  40e4b7:	push   edi
  40e4b8:	pusha  
  40e4b9:	in     eax,dx
  40e4ba:	test   al,0xa9
  40e4bc:	rcl    ah,1
  40e4be:	int    0xc4
  40e4c0:	sbb    al,0xde
  40e4c2:	push   0xfffffff4
  40e4c4:	imul   edx,DWORD PTR [ebx],0x8348b5fe
  40e4ca:	out    dx,al
  40e4cb:	xchg   DWORD PTR [edx-0x6b],ebx
  40e4ce:	clc    
  40e4cf:	and    eax,0x22222072
  40e4d4:	test   al,0x3
  40e4d6:	test   DWORD PTR [esi-0x59652f93],esi
  40e4dc:	clc    
  40e4dd:	std    
  40e4de:	cmp    ebx,DWORD PTR [esi]
  40e4e0:	inc    edx
  40e4e1:	inc    ebp
  40e4e2:	push   es
  40e4e3:	ja     0x40e481
  40e4e5:	mov    ebp,ebx
  40e4e7:	add    esp,DWORD PTR [esi+0x69]
  40e4ea:	jl     0x40e4d1
  40e4ec:	jge    0x40e480
  40e4ee:	sbb    al,0x82
  40e4f0:	ins    BYTE PTR es:[edi],dx
  40e4f1:	fld    QWORD PTR [ebx]
  40e4f3:	push   edi
  40e4f4:	fidiv  DWORD PTR [ebp+0x52059ef8]
  40e4fa:	mov    ds:0xd971124a,eax
  40e4ff:	sbb    dl,BYTE PTR [ebp-0x4e]
  40e502:	int3   
  40e503:	loope  0x40e531
  40e505:	imul   edi,ecx,0x917330be
  40e50b:	jmp    0xf77e3443
  40e510:	jae    0x40e54e
  40e512:	retf   
  40e513:	inc    edi
  40e514:	test   eax,0x8e8ba92b
  40e519:	dec    ebp
  40e51a:	mov    esp,0x44fef9bb
  40e51f:	sub    DWORD PTR [edi-0x79],edx
  40e522:	sbb    ebx,0x895490ff
  40e528:	cmp    eax,0x7746f315
  40e52d:	sbb    DWORD PTR [ecx-0x6a],edi
  40e530:	in     eax,dx
  40e531:	pop    ss
  40e532:	xchg   ebp,eax
  40e533:	in     al,0x34
  40e535:	stc    
  40e536:	mov    dh,0x58
  40e538:	scas   eax,DWORD PTR es:[edi]
  40e539:	cmp    edi,DWORD PTR [ebx+0x4d]
  40e53c:	jmp    0x40e584
  40e53e:	pop    ebp
  40e53f:	fcom   DWORD PTR [ebp+0x203dc684]
  40e545:	dec    ebx
  40e546:	inc    edx
  40e547:	xchg   esi,eax
  40e548:	cli    
  40e549:	ss dec eax
  40e54b:	push   ebx
  40e54c:	mov    ds:0x732e389e,al
  40e551:	ss mov bl,0x12
  40e554:	sub    edi,DWORD PTR [edi+0x37e512a3]
  40e55a:	cmp    al,0x82
  40e55c:	pushf  
  40e55d:	sbb    ebp,DWORD PTR [edx+eax*1]
  40e560:	push   DWORD PTR [ebx+0x40b093f1]
  40e566:	mov    esi,0x10809fa0
  40e56b:	cli    
  40e56c:	or     cl,BYTE PTR [esi+0x2d1261f9]
  40e572:	xchg   ebx,eax
  40e573:	popw   gs
  40e576:	test   ecx,ebx
  40e578:	imul   esi,DWORD PTR [edx+0x5d],0x71
  40e57c:	repnz shr BYTE PTR [ebp+0x399fd9bc],cl
  40e583:	ret    0x3295
  40e586:	or     eax,0x71478e73
  40e58b:	inc    cx
  40e58d:	imul   edi,eax,0xffffffe1
  40e590:	mov    dl,0xbe
  40e592:	retf   0xa7e4
  40e595:	xchg   esi,eax
  40e596:	mov    al,0x9c
  40e598:	inc    edi
  40e599:	jle    0x40e5df
  40e59b:	mov    gs,WORD PTR [ecx+0x32]
  40e59e:	adc    dl,BYTE PTR [edx-0x50072db2]
  40e5a4:	or     DWORD PTR [ecx-0x390bcc25],0xffffff8e
  40e5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ac:	xor    BYTE PTR [edi-0x3d49ba10],al
  40e5b2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e5b4:	(bad)  
  40e5b5:	xchg   ecx,eax
  40e5b6:	(bad)  
  40e5b7:	xchg   edi,eax
  40e5b8:	loopne 0x40e570
  40e5ba:	enter  0x23e8,0xba
  40e5be:	add    DWORD PTR [esi-0x37],0xd6288c91
  40e5c5:	push   ebx
  40e5c6:	int3   
  40e5c7:	nop
  40e5c8:	sar    DWORD PTR [edi+0x6369624d],cl
  40e5ce:	leave  
  40e5cf:	out    0x36,eax
  40e5d1:	inc    esp
  40e5d2:	pop    edi
  40e5d3:	xchg   edx,eax
  40e5d4:	repz xor ah,dl
  40e5d7:	fmul   QWORD PTR [esi-0x2e]
  40e5da:	inc    esi
  40e5db:	xchg   ebx,eax
  40e5dc:	push   ecx
  40e5dd:	stos   BYTE PTR es:[edi],al
  40e5de:	and    al,0x53
  40e5e0:	enter  0xe8e1,0xc9
  40e5e4:	pop    ss
  40e5e5:	mov    cl,0x77
  40e5e7:	cld    
  40e5e8:	popa   
  40e5e9:	test   eax,0xa6e9827d
  40e5ee:	xchg   BYTE PTR [edx+edx*8],al
  40e5f1:	cli    
  40e5f2:	int3   
  40e5f3:	ja     0x40e64c
  40e5f5:	mov    ds:0x93627d63,eax
  40e5fa:	fstp   TBYTE PTR [ebp+0x25]
  40e5fd:	test   DWORD PTR ds:0x4a1f7071,edi
  40e603:	jnp    0x40e5ea
  40e605:	cli    
  40e606:	mov    edx,0x35536348
  40e60b:	mov    BYTE PTR ds:0x2418d6c1,bl
  40e611:	dec    edi
  40e612:	out    0x34,al
  40e614:	xlat   BYTE PTR ds:[ebx]
  40e615:	cmp    BYTE PTR [edi+0x47],bl
  40e618:	dec    edx
  40e619:	addr16 pusha 
  40e61b:	pop    ds
  40e61c:	sbb    eax,0xc2302c09
  40e621:	add    al,0x3b
  40e623:	enter  0xf1e6,0x46
  40e627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e628:	mov    ch,0xf5
  40e62a:	mov    ebp,0x60d872f7
  40e62f:	xor    ebx,DWORD PTR [esi+0x28]
  40e632:	cld    
  40e633:	add    BYTE PTR [eax-0x6a52ae46],dh
  40e639:	fbstp  TBYTE PTR [esi]
  40e63b:	push   0xffffffe2
  40e63d:	mov    bl,al
  40e63f:	xor    bh,dh
  40e641:	mov    DWORD PTR fs:[edi-0x27],edx
  40e645:	xchg   edx,eax
  40e646:	add    DWORD PTR [esi-0x45],ebp
  40e649:	sahf   
  40e64a:	pushf  
  40e64b:	aaa    
  40e64c:	push   edx
  40e64e:	jae    0x40e60c
  40e650:	std    
  40e651:	jl     0x40e64c
  40e653:	out    dx,al
  40e654:	cmc    
  40e655:	inc    edx
  40e656:	fxch   st(5)
  40e658:	pusha  
  40e659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65a:	push   ds
  40e65b:	ror    BYTE PTR [esi+ecx*8+0x64a6e895],0x70
  40e663:	int    0x24
  40e665:	mov    dh,0x21
  40e667:	dec    edx
  40e668:	add    eax,0x14e9a18f
  40e66d:	mov    ebp,0x95aad692
  40e672:	(bad)  
  40e673:	fsub   QWORD PTR [ecx+0x1b4f43f7]
  40e679:	fcmove st,st(7)
  40e67b:	pop    edi
  40e67c:	(bad)  
  40e67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e67e:	xchg   ebx,eax
  40e67f:	pusha  
  40e680:	pop    ss
  40e681:	jmp    0xc073:0x61ad648f
  40e688:	shl    DWORD PTR [edi],cl
  40e68a:	mov    edx,0x652b162d
  40e68f:	clc    
  40e690:	aad    0x70
  40e692:	mov    bl,0x7e
  40e695:	ins    BYTE PTR es:[edi],dx
  40e696:	(bad)  
  40e697:	xchg   ebp,eax
  40e698:	in     eax,0xc
  40e69a:	jnp    0x40e65f
  40e69c:	push   esp
  40e69d:	nop
  40e69e:	das    
  40e69f:	sar    DWORD PTR [eax],1
  40e6a1:	dec    edx
  40e6a2:	dec    ecx
  40e6a3:	ror    DWORD PTR [edx+0x530b08ea],1
  40e6a9:	mov    es,WORD PTR [ebx-0x24]
  40e6ac:	xchg   esi,eax
  40e6ad:	mov    eax,0xbd277bd
  40e6b2:	mov    ds:0x4739465c,al
  40e6b7:	sub    al,0x7d
  40e6b9:	fbstp  TBYTE PTR [ebx+0x6807e33e]
  40e6bf:	(bad)  
  40e6c0:	jmp    0x40e6e4
  40e6c2:	push   cs
  40e6c3:	popa   
  40e6c4:	(bad)  
  40e6c5:	test   eax,0xd79a2963
  40e6ca:	pop    esp
  40e6cb:	std    
  40e6cc:	loopne 0x40e653
  40e6ce:	imul   eax,esp,0xd8ce775f
  40e6d4:	mov    bh,0x8d
  40e6d6:	in     al,dx
  40e6d7:	int3   
  40e6d8:	into   
  40e6d9:	hlt    
  40e6da:	cdq    
  40e6db:	repz not DWORD PTR [ebp+ebp*8-0x26]
  40e6e0:	lods   eax,DWORD PTR ds:[esi]
  40e6e1:	pop    ss
  40e6e2:	fwait
  40e6e3:	scas   eax,DWORD PTR es:[edi]
  40e6e4:	mov    ch,0xe0
  40e6e6:	mov    BYTE PTR [ebx+0x70454de8],ah
  40e6ec:	add    eax,DWORD PTR [ebx]
  40e6ee:	test   al,0xf8
  40e6f0:	mov    esi,DWORD PTR [ebx-0x7bc6a96c]
  40e6f6:	pop    ebx
  40e6f7:	jp     0x40e6fd
  40e6f9:	mov    esi,0xcde86c6a
  40e6fe:	add    esp,DWORD PTR [esi]
  40e700:	mov    BYTE PTR [edx],al
  40e702:	fiadd  WORD PTR [edx]
  40e704:	cmp    DWORD PTR [ebx+0x58],edi
  40e707:	or     DWORD PTR [edx-0x1],esi
  40e70a:	fmul   QWORD PTR [edx]
  40e70c:	icebp  
  40e70d:	mov    WORD PTR [eax+ecx*8],es
  40e710:	sbb    eax,0xbe4d89e8
  40e715:	inc    ebp
  40e716:	xor    al,0x13
  40e718:	in     al,0xbf
  40e71a:	push   es
  40e71b:	sbb    DWORD PTR [esi-0x5585c05d],eax
  40e721:	popf   
  40e722:	add    al,0xd2
  40e724:	(bad)  
  40e725:	jno    0x40e728
  40e727:	jns    0x40e72a
  40e729:	(bad)  [eax+eax*2]
  40e72c:	outs   dx,BYTE PTR ds:[esi]
  40e72d:	jmp    0x40e6f9
  40e72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e730:	xor    eax,0xe2be9620
  40e735:	imul   edi,DWORD PTR [esi+0x2f56dc3c],0xffffffe5
  40e73c:	xor    edx,ebx
  40e73e:	in     eax,dx
  40e73f:	cli    
  40e740:	mov    ecx,?
  40e742:	cwde   
  40e743:	xchg   edx,eax
  40e744:	dec    BYTE PTR [ecx-0x41e46136]
  40e74a:	(bad)  
  40e74b:	in     eax,dx
  40e74c:	into   
  40e74d:	sbb    eax,0x7191bbde
  40e753:	jmp    0x5c633d91
  40e758:	lea    ebx,[ecx-0x4d]
  40e75b:	(bad)  
  40e75c:	js     0x40e72a
  40e75e:	cmp    BYTE PTR [eax+0x21de6256],dh
  40e764:	sahf   
  40e765:	mov    BYTE PTR [edx],dl
  40e767:	mov    ah,BYTE PTR [ecx]
  40e769:	in     al,dx
  40e76a:	or     al,0xa8
  40e76c:	scas   al,BYTE PTR es:[edi]
  40e76d:	jnp    0x40e796
  40e76f:	retf   
  40e770:	js     0x40e726
  40e772:	xchg   ebx,eax
  40e773:	aam    0x2d
  40e775:	cmp    al,0x24
  40e777:	xor    eax,0x59d9da87
  40e77c:	iret   
  40e77d:	popa   
  40e77e:	in     al,dx
  40e77f:	outs   dx,DWORD PTR ds:[esi]
  40e780:	dec    eax
  40e781:	sar    DWORD PTR [ebp-0x5a],cl
  40e784:	(bad)
  40e788:	dec    esp
  40e789:	fisttp WORD PTR [edi]
  40e78b:	inc    esp
  40e78c:	mov    bl,0xb6
  40e78e:	fst    st(0)
  40e790:	add    edi,DWORD PTR [edx+0x70]
  40e793:	adc    BYTE PTR [ebp+0x71b9ba74],ch
  40e799:	int    0xe0
  40e79b:	adc    edi,esi
  40e79d:	out    0xc3,eax
  40e79f:	mov    ebp,0x6b351e80
  40e7a4:	ficomp DWORD PTR [edi+ebx*2]
  40e7a7:	inc    esp
  40e7a8:	xchg   edi,eax
  40e7a9:	ins    DWORD PTR es:[edi],dx
  40e7aa:	push   cs
  40e7ab:	sbb    BYTE PTR [esi-0x42a86ef3],0x4
  40e7b2:	and    al,0x19
  40e7b4:	inc    ecx
  40e7b5:	or     ecx,DWORD PTR ds:0x4979e8fc
  40e7bb:	test   BYTE PTR [edi+eiz*4+0x533e61ca],al
  40e7c2:	out    0x47,al
  40e7c4:	xchg   ecx,eax
  40e7c5:	mov    ebx,0x3b0a1f3f
  40e7ca:	adc    ah,al
  40e7cc:	mov    al,0x15
  40e7ce:	je     0x40e7c8
  40e7d0:	xchg   ebx,eax
  40e7d1:	fcmove st,st(5)
  40e7d3:	loope  0x40e7e6
  40e7d5:	rol    bh,1
  40e7d7:	push   0xd5f1cc1c
  40e7dc:	jmp    0xb63a6b47
  40e7e1:	lods   al,BYTE PTR ds:[esi]
  40e7e2:	pop    edx
  40e7e3:	mov    edi,0x8d073a72
  40e7e8:	sti    
  40e7e9:	cmp    BYTE PTR [esi-0x65],al
  40e7ec:	or     al,0xb1
  40e7ee:	sub    DWORD PTR [ecx],0x56
  40e7f1:	jl     0x40e7b0
  40e7f3:	shl    BYTE PTR [ebp-0x496c3be1],0xc8
  40e7fa:	and    al,0x4d
  40e7fc:	adc    DWORD PTR [edx],0x512be99f
  40e802:	dec    edx
  40e803:	pop    ebx
  40e804:	enter  0xc081,0x67
  40e808:	sub    al,0x30
  40e80a:	retf   
  40e80b:	and    al,0x8f
  40e80d:	inc    ebx
  40e80e:	sbb    al,0x97
  40e810:	push   eax
  40e811:	loope  0x40e822
  40e813:	mov    edi,0xa221718b
  40e818:	call   0xc6fd981f
  40e81d:	popf   
  40e81e:	std    
  40e81f:	jp     0x40e819
  40e821:	jbe    0x40e84f
  40e823:	js     0x40e7b7
  40e825:	mov    bh,0x2a
  40e827:	leave  
  40e828:	push   ebx
  40e829:	cs xor eax,0x4df7ee62
  40e82f:	rcr    BYTE PTR [ecx+0x334366bd],cl
  40e835:	mov    ds:0xea0fd666,eax
  40e83a:	add    esp,DWORD PTR [edi-0x8]
  40e83d:	cdq    
  40e83e:	mov    ah,0x6e
  40e840:	cmp    ch,dl
  40e842:	lods   eax,DWORD PTR ds:[esi]
  40e843:	pop    ecx
  40e844:	ss xor ebx,eax
  40e847:	and    edx,0x8330a862
  40e84d:	test   DWORD PTR [ebp-0x3ae72ae0],esi
  40e853:	data16 je 0x40e84d
  40e856:	lods   al,BYTE PTR ds:[esi]
  40e857:	test   DWORD PTR [ecx-0x5e23a8fe],esi
  40e85d:	(bad)  
  40e85e:	mov    dh,0xb1
  40e860:	jb     0x40e7e5
  40e862:	in     al,0x99
  40e864:	rcr    cl,cl
  40e866:	dec    edx
  40e867:	ins    DWORD PTR es:[edi],dx
  40e868:	fsub   QWORD PTR [ecx-0xe729631]
  40e86e:	mov    dh,0x3e
  40e870:	popf   
  40e871:	xor    al,0xc1
  40e874:	sbb    al,0x2c
  40e876:	gs xor ebx,edx
  40e879:	inc    ebp
  40e87a:	xchg   edx,eax
  40e87b:	push   esp
  40e87c:	inc    edx
  40e87d:	add    esi,edi
  40e87f:	or     al,0xc
  40e881:	inc    ebx
  40e882:	xchg   ebx,eax
  40e883:	mov    ebp,0x1018c514
  40e888:	mov    gs,WORD PTR [ebx+ebx*4]
  40e88b:	neg    bl
  40e88d:	sub    DWORD PTR [ebp-0x36],esp
  40e890:	push   es
  40e891:	(bad)  
  40e892:	in     eax,dx
  40e893:	add    eax,0x93cefcce
  40e898:	add    ebp,edi
  40e89a:	and    esp,ebp
  40e89c:	das    
  40e89d:	adc    al,0x4a
  40e89f:	push   0xffffffe7
  40e8a1:	push   0x69e71c79
  40e8a6:	sahf   
  40e8a7:	aad    0x78
  40e8a9:	iret   
  40e8aa:	retf   
  40e8ab:	sbb    cl,BYTE PTR [ebx]
  40e8ad:	sbb    cl,ah
  40e8af:	test   BYTE PTR [ebx-0x6a8e63b8],0x7c
  40e8b6:	sbb    dl,dh
  40e8b8:	les    eax,FWORD PTR [eax-0x13]
  40e8bb:	inc    esp
  40e8bc:	fist   DWORD PTR [eax]
  40e8be:	inc    ebp
  40e8bf:	test   BYTE PTR [ebp-0x47],ah
  40e8c2:	rol    DWORD PTR [eax-0x23],0x84
  40e8c6:	push   es
  40e8c7:	test   BYTE PTR [eax],bl
  40e8c9:	mov    ds:0x8aeea71b,al
  40e8ce:	bound  edx,QWORD PTR [ebp-0x3ed1bf62]
  40e8d4:	popa   
  40e8d5:	dec    edi
  40e8d6:	xor    BYTE PTR [ebx],ch
  40e8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8d9:	jl     0x40e879
  40e8db:	xlat   BYTE PTR ds:[ebx]
  40e8dc:	mov    bh,0xb0
  40e8de:	and    dh,BYTE PTR [ebx+0x21]
  40e8e1:	fadd   st(5),st
  40e8e3:	ins    DWORD PTR es:[edi],dx
  40e8e4:	in     eax,0x8d
  40e8e6:	test   DWORD PTR [edx+edx*1],0xb48923e2
  40e8ed:	or     DWORD PTR [edx+ebx*1+0x57],eax
  40e8f1:	jmp    0x53d83f13
  40e8f6:	lods   al,BYTE PTR ds:[esi]
  40e8f7:	mov    bh,0x36
  40e8f9:	or     ecx,edx
  40e8fb:	dec    ecx
  40e8fc:	loop   0x40e930
  40e8fe:	cwde   
  40e8ff:	mov    ds:0xfaa389fa,al
  40e904:	and    ebx,edi
  40e906:	and    al,0x96
  40e908:	mov    bh,0x32
  40e90a:	xor    edx,DWORD PTR [edi+0x1233c613]
  40e910:	pop    ds
  40e911:	and    al,0xde
  40e913:	cmc    
  40e914:	shl    DWORD PTR [edx+0x62],0xa
  40e918:	arpl   WORD PTR [ebx+0x22],di
  40e91b:	mov    edi,0x632101dc
  40e920:	cmp    edx,ebx
  40e922:	pop    ds
  40e923:	test   al,0x8f
  40e925:	sub    edi,ebp
  40e927:	(bad)  
  40e928:	shl    DWORD PTR [esi],1
  40e92a:	jae    0x40e995
  40e92c:	sub    DWORD PTR [ebp+0x1a],ebx
  40e92f:	jns    0x40e8fb
  40e931:	gs and eax,0x73e6393
  40e937:	mov    ds:0x76608375,eax
  40e93c:	aad    0x50
  40e93e:	push   edi
  40e93f:	loop   0x40e8c4
  40e941:	stos   DWORD PTR es:[edi],eax
  40e942:	rcr    BYTE PTR [esi+0x71],cl
  40e945:	cmp    eax,0x1d113a44
  40e94a:	(bad)  
  40e94b:	mov    cs,WORD PTR [esi+esi*8]
  40e94e:	and    eax,0x85e393ca
  40e953:	add    DWORD PTR [ebx-0x33],ebx
  40e956:	pop    es
  40e957:	jp     0x40e9a4
  40e959:	push   0xdb62291f
  40e95e:	add    dh,dl
  40e960:	xor    al,0xc4
  40e962:	div    eax
  40e964:	and    ah,ah
  40e966:	sar    ah,cl
  40e968:	popa   
  40e969:	dec    ebx
  40e96a:	sbb    BYTE PTR [ebx-0x44],bl
  40e96d:	fsub   QWORD PTR [ebx]
  40e96f:	hlt    
  40e970:	fsubr  st,st(4)
  40e972:	test   eax,0x236bfb8e
  40e977:	inc    edx
  40e978:	idiv   BYTE PTR [edx+0x4a373aa8]
  40e97e:	or     BYTE PTR [ecx+0x2a],bh
  40e981:	call   0xc2d:0xa84bc985
  40e988:	imul   eax,DWORD PTR [ecx],0x42
  40e98b:	adc    al,0x89
  40e98d:	cmp    BYTE PTR [edx],al
  40e98f:	xchg   DWORD PTR [eax],ebp
  40e991:	add    dh,BYTE PTR [esp+ebp*4-0x4f389e1f]
  40e998:	mov    esi,0x3b16c0fc
  40e99d:	sahf   
  40e99e:	mov    bh,dh
  40e9a0:	cmp    esp,DWORD PTR [ebp-0x43]
  40e9a3:	mov    cl,0xae
  40e9a5:	or     dh,BYTE PTR [ebx+0x6b187218]
  40e9ab:	scas   al,BYTE PTR es:[edi]
  40e9ac:	dec    ebp
  40e9ad:	pop    ss
  40e9ae:	mov    WORD PTR ds:0x76b20d51,ss
  40e9b4:	scas   eax,DWORD PTR es:[edi]
  40e9b5:	push   ecx
  40e9b6:	aad    0x3b
  40e9b8:	int3   
  40e9b9:	outs   dx,BYTE PTR ds:[esi]
  40e9ba:	sbb    ch,bh
  40e9bc:	dec    edi
  40e9bd:	push   eax
  40e9be:	xchg   DWORD PTR [edi+0x7809c523],eax
  40e9c4:	jecxz  0x40ea29
  40e9c6:	and    DWORD PTR [ecx-0x7b],0xffffffae
  40e9ca:	sub    DWORD PTR ds:0xec481359,ebx
  40e9d0:	imul   ebp,DWORD PTR [ebx+0x2c9fcd1f],0xffffffc8
  40e9d7:	or     al,0x6b
  40e9d9:	ja     0x40e9b0
  40e9db:	hlt    
  40e9dc:	sub    edi,ebx
  40e9de:	push   0xffffffad
  40e9e0:	xchg   ebp,eax
  40e9e1:	jne    0x40ea22
  40e9e3:	pop    eax
  40e9e4:	int3   
  40e9e5:	repz fdiv st(1),st
  40e9e8:	shl    BYTE PTR [ebx-0x4d8b8401],1
  40e9ee:	lods   al,BYTE PTR ds:[esi]
  40e9ef:	in     eax,0x51
  40e9f1:	mov    ecx,0x5558bf86
  40e9f6:	fistp  WORD PTR [ecx+0x5f]
  40e9f9:	sbb    esi,ebx
  40e9fb:	daa    
  40e9fc:	jnp    0x40ea1d
  40e9fe:	xor    edi,DWORD PTR [eax+0x64]
  40ea01:	shr    ch,0x61
  40ea04:	stos   BYTE PTR es:[edi],al
  40ea05:	xchg   ebx,esi
  40ea07:	repnz call 0x623a:0xc27b16c
  40ea0f:	mov    dl,0x68
  40ea11:	ret    0xc376
  40ea14:	or     ecx,ebx
  40ea16:	add    al,0x2d
  40ea18:	mov    ebp,0x3a0b67be
  40ea1d:	fiadd  WORD PTR [esi+0x2e555f7b]
  40ea23:	push   esi
  40ea24:	ret    
  40ea25:	fidivr DWORD PTR [ebx]
  40ea27:	addr16 fdivrp st(2),st
  40ea2a:	mov    ebx,DWORD PTR [ecx-0x33]
  40ea2d:	sbb    bh,ch
  40ea2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea30:	(bad)  
  40ea31:	xchg   ebx,eax
  40ea32:	repnz or al,0x4
  40ea35:	and    esi,DWORD PTR [ebp-0x19]
  40ea38:	das    
  40ea39:	js     0x40e9d2
  40ea3b:	mov    eax,0x1d69a297
  40ea40:	or     BYTE PTR [edi],al
  40ea42:	xor    ch,BYTE PTR [eax-0x54e8282]
  40ea48:	test   ebp,edx
  40ea4a:	sub    BYTE PTR [eax],bh
  40ea4c:	sar    ah,1
  40ea4e:	sbb    BYTE PTR [eax],ch
  40ea50:	ds ja  0x40eab8
  40ea53:	(bad)  
  40ea54:	stc    
  40ea55:	enter  0xd7fe,0x55
  40ea59:	(bad)  
  40ea5a:	clc    
  40ea5b:	inc    edi
  40ea5c:	dec    ecx
  40ea5d:	test   al,0xbf
  40ea5f:	clc    
  40ea60:	adc    DWORD PTR [eax-0x57cdc09e],edi
  40ea66:	ins    BYTE PTR es:[edi],dx
  40ea67:	push   cs
  40ea68:	jmp    FWORD PTR [eax-0x64]
  40ea6b:	push   eax
  40ea6c:	inc    ebp
  40ea6d:	pop    ecx
  40ea6e:	pop    eax
  40ea6f:	dec    esp
  40ea70:	sbb    cl,al
  40ea72:	ret    
  40ea73:	(bad)  
  40ea74:	xor    ch,dl
  40ea76:	pop    ss
  40ea77:	push   0xa2b77e0
  40ea7c:	mov    edx,0x99ba7fc2
  40ea81:	stos   BYTE PTR es:[edi],al
  40ea82:	inc    ebp
  40ea83:	and    DWORD PTR [edi+ebp*1+0x7],eax
  40ea87:	dec    edi
  40ea88:	cmp    BYTE PTR [esi-0x67],bl
  40ea8b:	or     DWORD PTR [edx+ebx*8-0x75c802b8],eax
  40ea92:	loope  0x40ea91
  40ea94:	jge    0x40eae7
  40ea96:	retf   
  40ea97:	fadd   DWORD PTR [ecx+ebx*1-0x4e]
  40ea9b:	(bad)  
  40ea9c:	shl    dh,cl
  40ea9e:	jne    0x40ea7d
  40eaa0:	xor    eax,DWORD PTR [ecx]
  40eaa2:	fld    DWORD PTR [ecx]
  40eaa4:	and    BYTE PTR [ebp+eax*2-0x1d2d8168],al
  40eaab:	ja     0x40eaa3
  40eaad:	mov    WORD PTR [esi-0x6b],cs
  40eab0:	or     eax,0x3f0a1e45
  40eab5:	mov    edi,0x2127518c
  40eaba:	xchg   esp,eax
  40eabb:	loop   0x40ea76
  40eabd:	adc    BYTE PTR ss:[esi-0x5eaaac76],ah
  40eac4:	jg     0x40ea85
  40eac6:	cwde   
  40eac7:	pop    esp
  40eac8:	mov    ds:0xd5e1745a,al
  40eacd:	ret    
  40eace:	js     0x40ea9a
  40ead0:	xchg   edi,eax
  40ead1:	dec    DWORD PTR [ebp-0x6ff98b05]
  40ead7:	or     al,0xf7
  40ead9:	push   ecx
  40eada:	aam    0xc8
  40eadc:	shl    edx,1
  40eade:	fsub   st,st(6)
  40eae0:	xchg   ebp,eax
  40eae1:	rcr    DWORD PTR [esp+ebx*4+0x62],1
  40eae5:	fnstenv [ebx+0x3041d072]
  40eaeb:	fwait
  40eaec:	les    edx,FWORD PTR [esi+edx*4]
  40eaef:	js     0x40ea89
  40eaf1:	cwde   
  40eaf2:	push   ds
  40eaf3:	pop    ss
  40eaf4:	(bad)  [esi+0x3b0f6bdd]
  40eafa:	daa    
  40eafb:	les    ebx,FWORD PTR [ecx+0x7b]
  40eafe:	mov    ebp,0x44e16a6d
  40eb03:	dec    ecx
  40eb04:	fdiv   st(7),st
  40eb06:	mov    edi,0x7f33a6a0
  40eb0b:	mov    ds:0xea98e4c9,eax
  40eb10:	in     al,0xb4
  40eb12:	into   
  40eb13:	push   ecx
  40eb14:	icebp  
  40eb15:	out    dx,eax
  40eb16:	xor    dh,BYTE PTR [ebx]
  40eb18:	jp     0x40eafe
  40eb1a:	test   ch,dl
  40eb1c:	add    BYTE PTR [eax-0x6fb99cac],ch
  40eb22:	mov    ds:0x4504fde6,eax
  40eb27:	sbb    ebx,DWORD PTR [ebx+0x4c085834]
  40eb2d:	xlat   BYTE PTR ds:[ebx]
  40eb2e:	aas    
  40eb2f:	test   BYTE PTR [ebx],ah
  40eb31:	cld    
  40eb32:	fiadd  DWORD PTR [ecx+0x18]
  40eb35:	inc    edi
  40eb36:	sub    esp,DWORD PTR [ecx]
  40eb38:	cmp    al,0xcc
  40eb3a:	hlt    
  40eb3b:	jae    0x40eb77
  40eb3d:	sub    al,0x26
  40eb3f:	xchg   esp,eax
  40eb40:	push   0x6cac3d8b
  40eb45:	cmp    BYTE PTR [ebx],bl
  40eb47:	mov    edx,edi
  40eb49:	mov    fs,edx
  40eb4b:	cmp    dl,BYTE PTR [edx+eax*2-0x275dc953]
  40eb52:	(bad)  
  40eb53:	(bad)  
  40eb54:	sub    ah,BYTE PTR [esi+0x13a5222e]
  40eb5a:	out    0x5b,eax
  40eb5c:	add    eax,0xf6f93183
  40eb61:	push   edi
  40eb62:	mov    eax,0x3a2425e0
  40eb67:	mov    cl,BYTE PTR [edi+eiz*4]
  40eb6a:	(bad)  
  40eb6b:	or     eax,0x9c97653e
  40eb70:	dec    ecx
  40eb71:	or     BYTE PTR [eax-0x3a],cl
  40eb74:	ret    
  40eb75:	aas    
  40eb76:	sbb    eax,0xb1aaa4bf
  40eb7b:	inc    esp
  40eb7c:	fiadd  WORD PTR [eax]
  40eb7e:	in     al,dx
  40eb7f:	(bad)  
  40eb80:	push   esp
  40eb81:	push   ds
  40eb82:	jmp    0x40eb34
  40eb84:	sbb    eax,0xf924dc4
  40eb89:	test   DWORD PTR [edx+0x2a36bf9],eax
  40eb8f:	sub    eax,0x338d84fe
  40eb94:	jle    0x40ec14
  40eb96:	cmp    ecx,ebp
  40eb98:	addr16 dec ebp
  40eb9a:	lds    esp,FWORD PTR [esi]
  40eb9c:	lahf   
  40eb9d:	sub    ch,BYTE PTR [esi]
  40eb9f:	sbb    BYTE PTR [edx+edi*1+0x31],dh
  40eba3:	ins    BYTE PTR es:[edi],dx
  40eba4:	clc    
  40eba5:	pop    eax
  40eba6:	fnstsw WORD PTR [ebp+0x5c]
  40eba9:	ja     0x40ebe6
  40ebab:	and    BYTE PTR [esi],ch
  40ebad:	and    DWORD PTR ds:0x7aa03533,esi
  40ebb3:	adc    dh,dh
  40ebb5:	pushf  
  40ebb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebb7:	and    eax,0xc651205f
  40ebbc:	les    esp,FWORD PTR [ebp-0x52ddb4c9]
  40ebc2:	cmp    DWORD PTR [ebp-0xfb466ff],esi
  40ebc8:	jg     0x40ebf3
  40ebca:	xor    DWORD PTR [eax+edi*8],0xffffff9b
  40ebce:	adc    bl,cl
  40ebd0:	mov    eax,ds:0x5e7a512a
  40ebd5:	cmp    DWORD PTR ds:0x4849a89,edx
  40ebdb:	jmp    0x40ebb6
  40ebdd:	mov    al,ds:0x35d04d22
  40ebe2:	add    bl,BYTE PTR [ebp+0x2b85d389]
  40ebe8:	pop    ebp
  40ebe9:	mov    bl,0x3b
  40ebeb:	sub    DWORD PTR [edx-0x225132d1],esi
  40ebf1:	mov    dl,0x7b
  40ebf3:	and    cl,dl
  40ebf5:	stc    
  40ebf6:	pop    esi
  40ebf7:	sbb    ebp,DWORD PTR ds:[esi]
  40ebfa:	sbb    esp,DWORD PTR [eax+0x7dccf58]
  40ec00:	in     al,dx
  40ec01:	call   0x415a002d
  40ec06:	sub    ebx,DWORD PTR [ecx+esi*1-0x32]
  40ec0a:	sbb    DWORD PTR [ecx],ebp
  40ec0c:	xor    eax,0xa45a3174
  40ec11:	mov    ch,0xdb
  40ec13:	out    dx,al
  40ec14:	sbb    al,0x32
  40ec16:	stos   BYTE PTR es:[edi],al
  40ec17:	and    al,0xf5
  40ec19:	out    dx,al
  40ec1a:	sub    BYTE PTR [ebp+0x18],0x14
  40ec1e:	push   cs
  40ec1f:	mov    ds:0x353ecd7c,eax
  40ec24:	jmp    0x235c:0xe9e2795e
  40ec2b:	aaa    
  40ec2c:	mov    WORD PTR [edx-0x1044e8c4],ds
  40ec32:	dec    edi
  40ec33:	sub    edx,DWORD PTR [edi-0x42]
  40ec36:	mov    bh,BYTE PTR [ebp+0x35644a24]
  40ec3c:	xchg   esp,eax
  40ec3d:	(bad)  
  40ec3e:	out    dx,al
  40ec3f:	xchg   edi,eax
  40ec40:	add    BYTE PTR [ebx-0x1e],0x6f
  40ec44:	cli    
  40ec45:	xchg   ebx,eax
  40ec46:	sbb    DWORD PTR [eax],edx
  40ec48:	leave  
  40ec49:	push   ebp
  40ec4a:	pushf  
  40ec4b:	je     0x40ec4c
  40ec4d:	inc    edi
  40ec4e:	add    eax,DWORD PTR [ebp+0x3c502fe8]
  40ec54:	ret    0x9f7b
  40ec57:	push   0xe28a1bd9
  40ec5c:	shr    BYTE PTR [eax-0x2],cl
  40ec5f:	es mov ecx,0x74509982
  40ec65:	fmul   DWORD PTR [edx]
  40ec67:	and    al,0x69
  40ec69:	outs   dx,BYTE PTR ds:[esi]
  40ec6a:	pop    ecx
  40ec6b:	maxps  xmm7,XMMWORD PTR [edi+0x2d]
  40ec6f:	mov    edx,0xabbaf2c9
  40ec74:	inc    ecx
  40ec75:	daa    
  40ec76:	ins    BYTE PTR es:[edi],dx
  40ec77:	int3   
  40ec78:	dec    ebx
  40ec79:	pop    ss
  40ec7a:	out    0x37,al
  40ec7c:	fidivr DWORD PTR gs:[esi+0x16]
  40ec80:	repnz loopne 0x40ec0a
  40ec83:	div    BYTE PTR [ecx]
  40ec85:	imul   ch
  40ec87:	mov    al,0x7a
  40ec89:	daa    
  40ec8a:	jmp    0x40ec91
  40ec8c:	and    esi,DWORD PTR [ecx-0xc]
  40ec8f:	mov    bl,0x36
  40ec91:	cmp    ah,BYTE PTR [eax-0x2981578a]
  40ec97:	sbb    edx,ebx
  40ec99:	rcr    DWORD PTR [ebx+edx*2-0x73],0x7e
  40ec9e:	lods   al,BYTE PTR ds:[esi]
  40ec9f:	aas    
  40eca0:	out    dx,eax
  40eca1:	push   eax
  40eca2:	dec    edx
  40eca3:	push   ebp
  40eca4:	push   ebp
  40eca5:	sbb    DWORD PTR [ebp+ecx*2-0x23ecf17b],0xffffff91
  40ecad:	push   edi
  40ecae:	cdq    
  40ecaf:	dec    esp
  40ecb0:	push   esi
  40ecb1:	clc    
  40ecb2:	mov    al,ds:0xd908193d
  40ecb7:	cmp    cl,BYTE PTR [edi-0x41]
  40ecba:	push   ebp
  40ecbb:	add    al,BYTE PTR [eax+edx*1]
  40ecbe:	jae    0x40ecfe
  40ecc0:	xlat   BYTE PTR ds:[ebx]
  40ecc1:	sti    
  40ecc2:	out    0xd9,eax
  40ecc4:	mov    eax,0x9542f245
  40ecc9:	aas    
  40ecca:	xchg   BYTE PTR [eax+0x4a],cl
  40eccd:	inc    ebp
  40ecce:	inc    edi
  40eccf:	ret    
  40ecd0:	mov    ?,esi
  40ecd2:	add    al,bh
  40ecd4:	adc    eax,0x10ed0789
  40ecd9:	int3   
  40ecda:	jns    0x40ecdd
  40ecdc:	jne    0x40ecfd
  40ecde:	jb     0x40ec68
  40ece0:	retf   
  40ece1:	push   ss
  40ece2:	push   edi
  40ece3:	inc    ebx
  40ece4:	aas    
  40ece5:	xchg   BYTE PTR [ebx-0x1e802d08],ah
  40eceb:	jle    0x40ece5
  40eced:	mov    BYTE PTR [ebx+0x76],al
  40ecf0:	fisub  WORD PTR [ebx]
  40ecf2:	push   es
  40ecf3:	adc    al,0xab
  40ecf5:	popa   
  40ecf6:	adc    DWORD PTR [ecx-0x42688dd1],ebp
  40ecfc:	pop    edx
  40ecfd:	cdq    
  40ecfe:	mov    al,0x11
  40ed00:	leave  
  40ed01:	or     eax,0x69f3a324
  40ed06:	std    
  40ed07:	add    ebx,DWORD PTR [esi]
  40ed09:	pusha  
  40ed0a:	sub    al,0xc1
  40ed0c:	dec    edi
  40ed0d:	mov    ds:0xbd5d426c,eax
  40ed12:	and    bl,BYTE PTR [ebp-0x2]
  40ed15:	mov    dh,cl
  40ed17:	daa    
  40ed18:	pushf  
  40ed19:	cmp    eax,0xcb50e03c
  40ed1e:	addr16 lahf 
  40ed20:	shl    esi,1
  40ed22:	xchg   esi,eax
  40ed23:	mov    WORD PTR [ebp-0x55],cs
  40ed26:	and    DWORD PTR [edx*8+0x42519fc8],eax
  40ed2d:	lock xchg ebx,eax
  40ed2f:	arpl   sp,bx
  40ed31:	adc    eax,esi
  40ed33:	mov    ebx,0x20ebd5b5
  40ed38:	jle    0x40edad
  40ed3a:	or     DWORD PTR [eax],eax
  40ed3c:	shl    DWORD PTR [esi-0x64],0x31
  40ed40:	sub    eax,0x60ddb106
  40ed45:	sub    ah,ch
  40ed47:	mov    ds:0x9028f747,al
  40ed4c:	add    DWORD PTR [edx-0x59],eax
  40ed4f:	or     edx,DWORD PTR [esi]
  40ed51:	xchg   esi,eax
  40ed52:	cli    
  40ed53:	mov    ebx,0xde38239d
  40ed58:	ret    0x4594
  40ed5b:	call   0x9f05:0x928cffb5
  40ed62:	jnp    0x40eceb
  40ed64:	mov    esp,0x109e72e6
  40ed69:	pop    ecx
  40ed6a:	jno    0x40ed13
  40ed6c:	mov    al,0x55
  40ed6e:	inc    esp
  40ed6f:	icebp  
  40ed70:	xor    al,0xb7
  40ed72:	aaa    
  40ed73:	push   0xe23dcbf3
  40ed78:	sar    BYTE PTR ds:0xdd1918a8,cl
  40ed7e:	push   edx
  40ed7f:	dec    esi
  40ed80:	sbb    al,0x90
  40ed82:	out    dx,al
  40ed83:	das    
  40ed84:	mov    edi,DWORD PTR [eax]
  40ed86:	or     DWORD PTR [eax-0x63],edi
  40ed89:	inc    ebx
  40ed8a:	adc    eax,0xf7be4b89
  40ed8f:	push   eax
  40ed90:	cli    
  40ed91:	xor    esi,DWORD PTR [eax-0x1b4875c1]
  40ed97:	test   DWORD PTR [edx],ecx
  40ed99:	std    
  40ed9a:	push   0x4dfde6b3
  40ed9f:	mul    DWORD PTR [ecx]
  40eda1:	(bad)  
  40eda3:	mov    esi,ecx
  40eda5:	push   0xffffffe5
  40eda7:	dec    edi
  40eda8:	shl    BYTE PTR [edx+0x385abecb],1
  40edae:	cmp    edx,DWORD PTR [esi-0x19]
  40edb1:	or     eax,0x7713f25b
  40edb6:	pop    eax
  40edb7:	inc    eax
  40edb8:	inc    edi
  40edb9:	rcr    edx,0xaf
  40edbc:	dec    ebx
  40edbd:	or     al,al
  40edbf:	dec    ebx
  40edc0:	sar    DWORD PTR [eax+0x14326c10],cl
  40edc6:	mov    ah,0x43
  40edc8:	xor    BYTE PTR [ecx],dh
  40edca:	ds sahf 
  40edcc:	mov    ds:0x671e4752,eax
  40edd1:	cmp    DWORD PTR [ecx],edi
  40edd3:	mov    ah,0xeb
  40edd5:	inc    ebp
  40edd6:	vaddpd xmm1,xmm4,XMMWORD PTR [edx]
  40edda:	or     cl,BYTE PTR [eax+0x46]
  40eddd:	call   0x3ab4:0x98a1dd
  40ede4:	sbb    eax,0x9b5614ce
  40ede9:	mov    edi,esi
  40edeb:	xor    DWORD PTR [edi+0x4edd7ab2],ecx
  40edf1:	aad    0xbd
  40edf3:	cmp    al,0xa
  40edf5:	leave  
  40edf6:	or     al,0x69
  40edf8:	leave  
  40edf9:	and    BYTE PTR [esi+0x76f6d730],dl
  40edff:	cmp    DWORD PTR [ecx],edx
  40ee01:	xchg   esi,eax
  40ee02:	mov    ebp,0x21ce9e7b
  40ee07:	call   0x3e77:0x58b29454
  40ee0e:	rol    DWORD PTR fs:[eax+0x58],cl
  40ee12:	xchg   esp,eax
  40ee13:	and    DWORD PTR [ebp+0x652cc970],ecx
  40ee19:	stos   DWORD PTR es:[edi],eax
  40ee1a:	jmp    esp
  40ee1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee1d:	mov    bh,0xa4
  40ee1f:	shl    BYTE PTR [esi],0xd4
  40ee22:	push   0xffffffc3
  40ee24:	leave  
  40ee25:	cli    
  40ee26:	jo     0x40eea6
  40ee28:	test   BYTE PTR [eax],cl
  40ee2a:	mov    edi,0x1c4fdd81
  40ee2f:	repz mov cl,0x3b
  40ee32:	ss and ah,dl
  40ee35:	ret    0x43db
  40ee38:	in     al,0x4a
  40ee3a:	out    0x90,al
  40ee3c:	and    dl,BYTE PTR [ebx+0x1a]
  40ee3f:	aam    0xf5
  40ee41:	jae    0x40ee53
  40ee43:	ds in  eax,0xfe
  40ee46:	adc    eax,0x2db85fd1
  40ee4b:	fdivrp st(1),st
  40ee4d:	int    0x7b
  40ee4f:	and    al,0x6b
  40ee51:	cmp    esp,edi
  40ee53:	push   esp
  40ee54:	loope  0x40ee78
  40ee56:	aaa    
  40ee57:	inc    edx
  40ee58:	inc    esp
  40ee59:	push   ebx
  40ee5a:	add    al,0x3d
  40ee5c:	loope  0x40ee64
  40ee5e:	loop   0x40eed7
  40ee60:	mov    ah,0x56
  40ee62:	mov    esi,?
  40ee64:	add    al,0xf5
  40ee66:	hlt    
  40ee67:	mov    edi,0x8fa5f42b
  40ee6c:	fst    QWORD PTR [esi]
  40ee6e:	push   ecx
  40ee6f:	je     0x40eea7
  40ee71:	loopne 0x40ee07
  40ee73:	sbb    cl,BYTE PTR [ecx-0x4c]
  40ee76:	pop    ecx
  40ee77:	dec    edx
  40ee79:	mov    al,0xe5
  40ee7b:	loop   0x40ee38
  40ee7d:	cmp    eax,0x481e04fb
  40ee82:	leave  
  40ee83:	jp     0x40ee88
  40ee85:	fld    TBYTE PTR [esi-0x7]
  40ee88:	xor    ah,bh
  40ee8a:	stos   DWORD PTR es:[edi],eax
  40ee8b:	mov    al,ds:0x76d9cf91
  40ee90:	dec    ecx
  40ee91:	cwde   
  40ee92:	add    DWORD PTR [esi+ebx*1-0x1599e997],esp
  40ee99:	js     0x40ee4a
  40ee9b:	mov    ds:0xa064764d,al
  40eea0:	hlt    
  40eea1:	shl    DWORD PTR [esi+edi*1-0x687814dc],0x6f
  40eea9:	xchg   BYTE PTR [ecx+0x6a],dl
  40eeac:	inc    ebp
  40eead:	jns    0x40eec1
  40eeaf:	cmp    dl,BYTE PTR [esi]
  40eeb1:	add    esi,DWORD PTR ds:0xd04585bc
  40eeb7:	rol    BYTE PTR [ebp+0x4c],1
  40eeba:	jmp    0x496337fe
  40eebf:	test   DWORD PTR [ecx+0x54f11196],0x7de7e8d8
  40eec9:	pop    ss
  40eeca:	mov    ebx,0x1b28a74c
  40eecf:	adc    bh,BYTE PTR [edx+0x73]
  40eed2:	jmp    0x5a3f6647
  40eed7:	outs   dx,BYTE PTR ds:[esi]
  40eed8:	(bad)  
  40eed9:	repnz shr BYTE PTR [ebx],1
  40eedc:	out    0x54,al
  40eede:	popa   
  40eedf:	mov    bl,BYTE PTR [ebx-0xbcc3920]
  40eee5:	jmp    0x6f95:0xddfc0514
  40eeec:	xor    eax,0x7aebb557
  40eef1:	pop    edx
  40eef2:	dec    ebp
  40eef3:	push   esi
  40eef4:	aam    0x4d
  40eef6:	loope  0x40ef63
  40eef8:	test   DWORD PTR [edx+ebp*2],0x902ade51
  40eeff:	ja     0x40ef38
  40ef01:	pop    ebp
  40ef02:	test   BYTE PTR ds:0x69196793,al
  40ef08:	mov    ebp,0x772417b9
  40ef0d:	jmp    0x17a85896
  40ef12:	jne    0x40ef52
  40ef14:	cmc    
  40ef15:	jo     0x40eea0
  40ef17:	mov    edx,0x74118bab
  40ef1c:	cmp    ecx,ebp
  40ef1e:	call   0x221712b
  40ef23:	ret    0xd37c
  40ef26:	pusha  
  40ef27:	pop    es
  40ef28:	cdq    
  40ef29:	inc    esi
  40ef2a:	pop    es
  40ef2b:	fcmovb st,st(5)
  40ef2d:	or     DWORD PTR [ecx+0x60],esi
  40ef30:	imul   esp,DWORD PTR [eax+0x2d],0x81ba4a1e
  40ef37:	add    al,0xe3
  40ef39:	popa   
  40ef3a:	lods   al,BYTE PTR ds:[esi]
  40ef3b:	loope  0x40eee6
  40ef3d:	xor    ch,BYTE PTR [esi-0x80]
  40ef40:	cmp    al,0x97
  40ef42:	int3   
  40ef43:	mov    bh,BYTE PTR [ecx]
  40ef45:	inc    ebx
  40ef46:	hlt    
  40ef47:	repz jae 0x40eece
  40ef4a:	hlt    
  40ef4b:	pop    ds
  40ef4c:	and    al,0x39
  40ef4e:	inc    edi
  40ef4f:	mov    edi,0x181f66d2
  40ef54:	pop    ds
  40ef55:	push   cs
  40ef56:	ins    BYTE PTR es:[edi],dx
  40ef57:	(bad)  
  40ef58:	push   edx
  40ef59:	sar    ch,0x9f
  40ef5c:	add    BYTE PTR es:[edi],dh
  40ef5f:	nop
  40ef60:	mov    al,0x5f
  40ef62:	adc    eax,DWORD PTR [ecx+edx*1-0x48]
  40ef66:	pop    ebp
  40ef67:	mov    esp,0xd93d2bb3
  40ef6c:	jne    0x40efaf
  40ef6e:	lock xchg edx,eax
  40ef70:	and    esi,DWORD PTR [ecx]
  40ef72:	xor    BYTE PTR [ebx-0x74],al
  40ef75:	test   BYTE PTR [ebx-0x27],bh
  40ef78:	repz fidiv DWORD PTR [edi]
  40ef7b:	in     al,0xe2
  40ef7d:	push   ecx
  40ef7e:	mov    esp,0x7a249dff
  40ef83:	mov    DWORD PTR [ebx+ebp*8-0x42e1ffda],ebp
  40ef8a:	jl     0x40ef57
  40ef8c:	and    al,cl
  40ef8e:	xor    eax,DWORD PTR [edx]
  40ef90:	mov    BYTE PTR [edi+0x5276394f],ah
  40ef96:	pushf  
  40ef97:	push   edi
  40ef98:	sahf   
  40ef99:	inc    esp
  40ef9a:	add    DWORD PTR ds:0x381265cf,edi
  40efa0:	mov    ch,0x8d
  40efa2:	outs   dx,BYTE PTR ds:[esi]
  40efa3:	pop    esp
  40efa4:	inc    eax
  40efa5:	sub    al,dl
  40efa7:	aaa    
  40efa8:	retf   0xb43c
  40efab:	push   ds
  40efac:	cld    
  40efad:	mov    al,dh
  40efaf:	sub    eax,0xfc3be2fa
  40efb4:	jmp    0x40ef3e
  40efb6:	xchg   ebp,eax
  40efb7:	repnz xchg esi,eax
  40efb9:	hlt    
  40efba:	push   edx
  40efbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbc:	repnz (bad) 
  40efbe:	xor    bh,BYTE PTR [ebx-0x10d9f136]
  40efc4:	dec    eax
  40efc5:	outs   dx,BYTE PTR ds:[esi]
  40efc6:	push   esp
  40efc7:	add    DWORD PTR [ecx+0x22],0xa
  40efcb:	mov    ebp,0xbc2b3e49
  40efd0:	push   es
  40efd1:	pop    ss
  40efd2:	xchg   ecx,eax
  40efd3:	mov    eax,0x6b3b9e96
  40efd8:	sbb    DWORD PTR [ecx+ebx*1-0x2],ecx
  40efdc:	mov    eax,0xa7d2c9a0
  40efe1:	xor    BYTE PTR [esi+edi*1+0x4c],dl
  40efe5:	call   0x3457f282
  40efea:	xlat   BYTE PTR ds:[ebx]
  40efeb:	adc    eax,0x7ab77661
  40eff0:	nop
  40eff1:	adc    bh,BYTE PTR [esi-0x56452a41]
  40eff7:	mov    ds:0x47858b69,al
  40effc:	mov    edi,0xa97ca9cf
  40f001:	or     al,0xf4
  40f003:	mov    ch,0x7d
  40f005:	mov    ch,dl
  40f007:	sbb    eax,0x64ad3e04
  40f00c:	repz pop esp
  40f00e:	dec    ecx
  40f00f:	sbb    BYTE PTR [esp+esi*8+0x1d14352d],dl
  40f016:	sub    al,0x6e
  40f018:	mov    dl,0x7e
  40f01a:	push   ds
  40f01b:	(bad)  
  40f01c:	mov    bl,0x6f
  40f01e:	mov    bl,0x29
  40f020:	cmc    
  40f021:	adc    BYTE PTR [ebx+edx*2-0x78],bh
  40f025:	inc    esp
  40f026:	lods   al,BYTE PTR ds:[esi]
  40f027:	cmp    BYTE PTR [ebx-0xe],0xf7
  40f02b:	call   0xf145:0x476be5b7
  40f032:	add    al,0x8e
  40f034:	xchg   ecx,eax
  40f035:	pop    es
  40f036:	pushf  
  40f037:	pop    edx
  40f038:	shl    DWORD PTR [esi],1
  40f03a:	xchg   ebp,eax
  40f03b:	jne    0x40f002
  40f03d:	ja     0x40f049
  40f03f:	mov    al,0xfb
  40f041:	jl     0x40eff8
  40f043:	push   ebx
  40f044:	imul   eax,DWORD PTR gs:[ebp+0xa900142],0x1f198326
  40f04f:	rcl    DWORD PTR [edi],1
  40f051:	sbb    bl,BYTE PTR [esi]
  40f053:	inc    ebx
  40f054:	mov    al,ds:0xa896e4c0
  40f059:	pop    ebx
  40f05a:	(bad)  
  40f05b:	cs stos BYTE PTR es:[edi],al
  40f05d:	or     eax,0x2142b4c0
  40f062:	fs js  0x40f099
  40f065:	jg     0x40f031
  40f067:	fldenv [ebx-0x2ef1b1d0]
  40f06d:	out    dx,al
  40f06e:	dec    ecx
  40f06f:	mov    al,0x31
  40f071:	popf   
  40f072:	sti    
  40f073:	add    dh,dl
  40f075:	(bad)  
  40f076:	aad    0x71
  40f078:	mov    cl,0xf0
  40f07a:	or     DWORD PTR [edi],ebp
  40f07c:	xchg   esp,eax
  40f07d:	sbb    DWORD PTR [ebp-0x111565e],0xffffffbf
  40f084:	dec    esi
  40f085:	jnp    0x40f085
  40f087:	je     0x40f067
  40f089:	aam    0xca
  40f08b:	imul   esp
  40f08d:	and    eax,edi
  40f08f:	push   edi
  40f090:	mov    edx,0x8841ce0d
  40f095:	imul   eax,edi,0x24a9d2d0
  40f09b:	dec    edx
  40f09c:	enter  0x38a8,0x97
  40f0a0:	popa   
  40f0a1:	in     eax,0x9a
  40f0a3:	or     eax,0xcb68fa6
  40f0a8:	xchg   ecx,eax
  40f0a9:	xchg   edx,eax
  40f0aa:	add    BYTE PTR [edi],al
  40f0ac:	call   0x689d6de5
  40f0b1:	iret   
  40f0b2:	mov    eax,ds:0x4f99931b
  40f0b7:	mov    DWORD PTR [edi+ecx*2-0x6e],edi
  40f0bb:	test   eax,0x882483f7
  40f0c1:	xchg   esi,eax
  40f0c2:	arpl   WORD PTR [edi+edi*2+0x24],dx
  40f0c6:	fmul   QWORD PTR [ebp-0x422d8575]
  40f0cc:	in     eax,0xbc
  40f0ce:	cdq    
  40f0cf:	and    eax,0x2296a675
  40f0d4:	lods   al,BYTE PTR ds:[esi]
  40f0d5:	push   ebp
  40f0d6:	(bad)  
  40f0d7:	mov    cs,WORD PTR [edx+0x5f]
  40f0da:	adc    ah,bh
  40f0dc:	(bad)  
  40f0dd:	pop    ds
  40f0de:	cmp    eax,0xd2cc50da
  40f0e3:	(bad)  
  40f0e5:	call   0xce1a2f25
  40f0ea:	mov    BYTE PTR [ebx],ch
  40f0ec:	inc    ecx
  40f0ed:	mov    al,ds:0xdf94e776
  40f0f2:	fidivr WORD PTR [edi-0xf]
  40f0f5:	pop    ebx
  40f0f6:	mov    esi,0xb202cb7
  40f0fb:	mov    bl,0xeb
  40f0fd:	por    mm3,QWORD PTR [esi-0x2c6d2cf6]
  40f104:	ret    0x6473
  40f107:	and    bh,BYTE PTR [ecx+0x4e]
  40f10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f10b:	loopne 0x40f130
  40f10d:	(bad)  [esi-0x35]
  40f110:	nop
  40f111:	out    dx,al
  40f112:	inc    ecx
  40f113:	mov    cl,0xed
  40f115:	test   al,0x47
  40f117:	cs jmp 0x40f183
  40f11a:	leave  
  40f11b:	lea    esp,[esi-0x11]
  40f11e:	xlat   BYTE PTR ds:[ebx]
  40f11f:	mov    cl,0x33
  40f121:	or     bh,ah
  40f123:	clc    
  40f124:	push   ecx
  40f125:	mov    BYTE PTR [ebx],dh
  40f127:	fiadd  WORD PTR [ecx+0x42a01005]
  40f12d:	add    BYTE PTR [eax],bl
  40f12f:	rol    BYTE PTR [edx+0x0],1
  40f132:	add    ebx,edi
  40f134:	and    DWORD PTR ds:0x42c008,0x0
  40f13e:	mov    eax,ds:0x42c008
  40f143:	inc    eax
  40f144:	mov    ds:0x42c008,eax
  40f149:	cmp    DWORD PTR ds:0x42c008,0xe
  40f150:	ja     0x40f191
  40f156:	jmp    0x40f16c
  40f15b:	push   DWORD PTR [ebp-0x28]
  40f15e:	push   0x7f19
  40f163:	push   DWORD PTR [ebp-0x28]
  40f166:	call   DWORD PTR ds:0x43004b
  40f16c:	cmp    DWORD PTR ds:0x42c008,0xd
  40f173:	jne    0x40f184
  40f179:	mov    eax,ds:0x42c008
  40f17e:	inc    eax
  40f17f:	mov    ds:0x42c008,eax
  40f184:	cmp    DWORD PTR ds:0x42c008,0x1b
  40f18b:	jb     0x40f13e
  40f191:	mov    eax,DWORD PTR [ebp-0x24]
  40f194:	sub    eax,edi
  40f196:	lea    ecx,[ebx-0x3272ec]
  40f19c:	mov    DWORD PTR ds:0x42d000,0x77e
  40f1a6:	xor    eax,esi
  40f1a8:	or     DWORD PTR ds:0x42b004,0x429020
  40f1b2:	xor    ecx,esi
  40f1b4:	mov    DWORD PTR ds:0x42c008,0x6bd4
  40f1be:	cmp    ecx,eax
  40f1c0:	mov    DWORD PTR ds:0x42901c,0x68e9
  40f1ca:	je     0x411851
  40f1d0:	and    DWORD PTR ds:0x42a01c,0x0
  40f1da:	xor    eax,eax
  40f1dc:	add    eax,DWORD PTR ds:0x42a01c
  40f1e2:	inc    eax
  40f1e3:	mov    ds:0x42a01c,eax
  40f1e8:	cmp    DWORD PTR ds:0x42a01c,0x13
  40f1ef:	jg     0x40f217
  40f1f5:	jmp    0x40f20a
  40f1fa:	push   0x42c004
  40f1ff:	push   0x42f169
  40f204:	call   DWORD PTR ds:0x43000b
  40f20a:	cmp    DWORD PTR ds:0x42a01c,0x12
  40f211:	jb     0x40f1da
  40f217:	mov    eax,DWORD PTR [ebp-0x4]
  40f21a:	xor    eax,esi
  40f21c:	sub    DWORD PTR ds:0x42d00c,0x11b5
  40f226:	add    eax,edi
  40f228:	cmp    ebx,eax
  40f22a:	jne    0x40f40e
  40f230:	push   DWORD PTR [ebp+0x8]
  40f233:	call   0x424783
  40f238:	mov    DWORD PTR [ebp-0x14],eax
  40f23b:	or     DWORD PTR ds:0x42c018,0xd46
  40f245:	mov    eax,DWORD PTR [ebp-0x4]
  40f248:	or     DWORD PTR ds:0x42d00c,ebx
  40f24e:	mov    ecx,DWORD PTR [ebp-0x14]
  40f251:	adc    DWORD PTR ds:0x429008,0x4a78
  40f25b:	xor    eax,esi
  40f25d:	xor    DWORD PTR ds:0x42b018,0x54c5
  40f267:	add    eax,edi
  40f269:	mov    DWORD PTR ds:0x42c00c,0x1824
  40f273:	cmp    ecx,eax
  40f275:	je     0x4118bc
  40f27b:	push   DWORD PTR [ebp-0x14]
  40f27e:	or     DWORD PTR ds:0x42b008,0x429004
  40f288:	push   DWORD PTR [ebp+0x8]
  40f28b:	and    DWORD PTR ds:0x42c008,0x42a014
  40f295:	call   0x424855
  40f29a:	dec    ecx
  40f29b:	mov    DWORD PTR [ebp-0x14],eax
  40f29e:	xor    DWORD PTR ds:0x42c004,ecx
  40f2a4:	mov    eax,DWORD PTR [ebp-0x4]
  40f2a7:	adc    DWORD PTR ds:0x42a008,edx
  40f2ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40f2b0:	sub    DWORD PTR ds:0x42a010,0x429020
  40f2ba:	xor    eax,esi
  40f2bc:	adc    DWORD PTR ds:0x42a010,0x42901c
  40f2c6:	add    eax,edi
  40f2c8:	mov    DWORD PTR ds:0x42b008,0x358c
  40f2d2:	cmp    ecx,eax
  40f2d4:	mov    DWORD PTR ds:0x42a018,0x235e
  40f2de:	je     0x4118bc
  40f2e4:	xor    eax,ecx
  40f2e6:	mov    eax,DWORD PTR [ebp-0x14]
  40f2e9:	mov    eax,DWORD PTR [eax+0x18]
  40f2ec:	mov    DWORD PTR [ebp-0x24],eax
  40f2ef:	sub    DWORD PTR ds:0x42b000,0x5870
  40f2f9:	mov    eax,DWORD PTR [ebp-0x14]
  40f2fc:	movzx  ecx,WORD PTR ds:0x42a010
  40f303:	sbb    DWORD PTR ds:0x42c004,ecx
  40f309:	mov    ecx,DWORD PTR [ebp+0x8]
  40f30c:	add    ecx,DWORD PTR [eax+0x20]
  40f30f:	and    DWORD PTR ds:0x42b010,0x0
  40f319:	jmp    0x40f329
  40f31e:	mov    eax,ds:0x42b010
  40f323:	inc    eax
  40f324:	mov    ds:0x42b010,eax
  40f329:	cmp    DWORD PTR ds:0x42b010,0x15
  40f330:	jae    0x40f35d
  40f336:	cmp    DWORD PTR ds:0x42b010,0x1a
  40f33d:	jb     0x40f35d
  40f343:	jmp    0x40f358
  40f348:	push   0x42b01c
  40f34d:	push   0x6b11
  40f352:	call   DWORD PTR ds:0x43000f
  40f358:	jmp    0x40f31e
  40f35d:	mov    DWORD PTR [ebp-0x2c],ecx
  40f360:	xor    DWORD PTR ds:0x42a014,edi
  40f366:	mov    eax,DWORD PTR [ebp-0x14]
  40f369:	mov    DWORD PTR ds:0x42c014,0x19
  40f373:	cmp    DWORD PTR ds:0x42c014,0x0
  40f37a:	je     0x40f3c4
  40f380:	cmp    DWORD PTR ds:0x42c014,0x5
  40f387:	jbe    0x40f3c4
  40f38d:	jmp    0x40f398
  40f392:	call   DWORD PTR ds:0x430013
  40f398:	cmp    DWORD PTR ds:0x42c014,0x6
  40f39f:	jne    0x40f3b2
  40f3a5:	mov    ecx,DWORD PTR ds:0x42c014
  40f3ab:	dec    ecx
  40f3ac:	mov    DWORD PTR ds:0x42c014,ecx
  40f3b2:	mov    ecx,DWORD PTR ds:0x42c014
  40f3b8:	dec    ecx
  40f3b9:	mov    DWORD PTR ds:0x42c014,ecx
  40f3bf:	jmp    0x40f373
  40f3c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3c7:	inc    DWORD PTR ds:0x42a014
  40f3cd:	add    ecx,DWORD PTR [eax+0x24]
  40f3d0:	sbb    DWORD PTR ds:0x42d000,0x42b014
  40f3da:	mov    DWORD PTR [ebp-0x34],ecx
  40f3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40f3e0:	mov    ecx,DWORD PTR ds:0x42c00c
  40f3e6:	sub    DWORD PTR ds:0x42a018,ecx
  40f3ec:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ef:	sub    DWORD PTR ds:0x42c008,0x42b004
  40f3f9:	add    ecx,DWORD PTR [eax+0x1c]
  40f3fc:	mov    DWORD PTR [ebp-0x14],ecx
  40f3ff:	mov    DWORD PTR ds:0x42c01c,0x38b0
  40f409:	jmp    0x411884
  40f40e:	sub    DWORD PTR ds:0x42a000,ebx
  40f414:	mov    eax,DWORD PTR [ebp-0x2c]
  40f417:	mov    ecx,DWORD PTR ds:0x42e010
  40f41d:	mov    ecx,DWORD PTR [ecx]
  40f41f:	adc    DWORD PTR ds:0x42d014,ecx
  40f425:	mov    ecx,DWORD PTR [ebp+0x8]
  40f428:	and    DWORD PTR ds:0x42a000,0x732c
  40f432:	add    ecx,DWORD PTR [eax+ebx*4]
  40f435:	add    DWORD PTR ds:0x429018,ebx
  40f43b:	mov    DWORD PTR [ebp-0x28],ecx
  40f43e:	xor    DWORD PTR ds:0x42d00c,ecx
  40f444:	mov    eax,DWORD PTR [ebp-0x4]
  40f447:	and    DWORD PTR ds:0x42a010,0x0
  40f451:	jmp    0x40f463
  40f456:	mov    ecx,DWORD PTR ds:0x42a010
  40f45c:	inc    ecx
  40f45d:	mov    DWORD PTR ds:0x42a010,ecx
  40f463:	cmp    DWORD PTR ds:0x42a010,0x13
  40f46a:	jae    0x40f497
  40f470:	cmp    DWORD PTR ds:0x42a010,0x1c
  40f477:	jle    0x40f497
  40f47d:	jmp    0x40f492
  40f482:	push   0x42f181
  40f487:	push   0x0
  40f489:	push   DWORD PTR [ebp-0x18]
  40f48c:	call   DWORD PTR ds:0x430017
  40f492:	jmp    0x40f456
  40f497:	mov    ecx,DWORD PTR [ebp-0x28]
  40f49a:	and    DWORD PTR ds:0x42b000,0x42d018
  40f4a4:	xor    eax,esi
  40f4a6:	inc    DWORD PTR ds:0x42c000
  40f4ac:	add    eax,edi
  40f4ae:	cmp    ecx,eax
  40f4b0:	jmp    0x411846
  40f4b5:	push   esp
  40f4b6:	push   edx
  40f4b7:	or     eax,0x17250f6a
  40f4bc:	inc    esp
  40f4bd:	xor    ch,dh
  40f4bf:	xor    ebx,edi
  40f4c1:	je     0x40f527
  40f4c3:	(bad)  
  40f4c4:	adc    cl,dh
  40f4c6:	scas   eax,DWORD PTR es:[edi]
  40f4c7:	jp     0x40f543
  40f4c9:	add    eax,0x867a7a5f
  40f4ce:	lods   eax,DWORD PTR ds:[esi]
  40f4cf:	mov    al,ds:0xfcdaf932
  40f4d4:	in     eax,0x45
  40f4d6:	outs   dx,DWORD PTR ds:[esi]
  40f4d7:	mov    bl,0xea
  40f4d9:	mov    cs,edi
  40f4db:	cmp    BYTE PTR [esi+0x435b3fc1],bl
  40f4e1:	push   esp
  40f4e2:	scas   al,BYTE PTR es:[edi]
  40f4e3:	mov    DWORD PTR [ecx],ebx
  40f4e5:	into   
  40f4e6:	pop    edx
  40f4e7:	jle    0x40f557
  40f4e9:	inc    ebx
  40f4ea:	cmp    DWORD PTR cs:[ebp+ebx*2-0x74],edi
  40f4ef:	test   dh,dl
  40f4f1:	nop
  40f4f2:	mov    ah,0xb8
  40f4f4:	rcr    DWORD PTR [ebx+0x21a78d47],1
  40f4fa:	test   eax,0xe824bc65
  40f4ff:	jo     0x40f516
  40f501:	pop    ebp
  40f502:	fnstsw WORD PTR [eax]
  40f504:	mov    al,ds:0xc3a33125
  40f509:	adc    BYTE PTR [ecx],dl
  40f50b:	repnz in eax,dx
  40f50d:	xchg   esp,eax
  40f50e:	mov    ds:0xbd0b8cf6,eax
  40f513:	adc    bh,ah
  40f515:	mov    cl,0x13
  40f517:	xor    eax,DWORD PTR [edx-0x3d]
  40f51a:	mov    ah,0xbb
  40f51c:	pop    esi
  40f51d:	push   edi
  40f51e:	cld    
  40f51f:	xor    ebx,DWORD PTR [ebx]
  40f521:	xchg   ebx,eax
  40f522:	ins    DWORD PTR es:[edi],dx
  40f523:	adc    eax,0x619ded72
  40f528:	sti    
  40f529:	push   eax
  40f52a:	shl    BYTE PTR [eax],0x99
  40f52d:	and    eax,0xfe44f755
  40f532:	mov    esp,0x2d4f6953
  40f537:	push   ebx
  40f538:	fnstenv [ecx+0xa]
  40f53b:	lahf   
  40f53c:	shl    BYTE PTR [edx-0x4e4a39e7],0x98
  40f543:	pop    ecx
  40f544:	sahf   
  40f545:	xchg   ebp,eax
  40f546:	mov    al,0x48
  40f548:	ror    DWORD PTR [edx],0xda
  40f54b:	add    DWORD PTR [edx+esi*4],esp
  40f54e:	popa   
  40f54f:	nop
  40f550:	(bad)  
  40f551:	repz fs xchg edx,eax
  40f554:	lods   eax,DWORD PTR ds:[esi]
  40f555:	pushf  
  40f556:	bound  edx,QWORD PTR [ebx-0x59681e45]
  40f55c:	jbe    0x40f5b4
  40f55e:	les    esp,FWORD PTR [esi]
  40f560:	hlt    
  40f561:	cli    
  40f562:	adc    al,0xca
  40f564:	mov    al,0xff
  40f566:	jae    0x40f587
  40f568:	mov    ah,0x70
  40f56a:	ss int3 
  40f56c:	scas   eax,DWORD PTR es:[edi]
  40f56d:	sti    
  40f56e:	cmp    BYTE PTR [esi-0x74],dl
  40f571:	sbb    DWORD PTR [edi-0x5],edi
  40f574:	pop    eax
  40f575:	lds    esi,FWORD PTR [ebp+0x68368f23]
  40f57b:	das    
  40f57c:	adc    ebx,ecx
  40f57e:	(bad)  
  40f57f:	xor    BYTE PTR [esi],al
  40f581:	popa   
  40f582:	adc    DWORD PTR [edi+0x2f],0x3224dc59
  40f589:	mov    fs,edx
  40f58b:	jo     0x40f594
  40f58d:	int    0x9e
  40f58f:	into   
  40f590:	and    DWORD PTR [eax],ebp
  40f592:	idiv   DWORD PTR [edx]
  40f594:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f596:	or     DWORD PTR [esi+0x72bf3127],ecx
  40f59c:	pop    es
  40f59d:	leave  
  40f59e:	pop    ecx
  40f59f:	int    0xf7
  40f5a1:	fadd   DWORD PTR [esi-0x6652c18a]
  40f5a7:	jl     0x40f596
  40f5a9:	xchg   edi,eax
  40f5aa:	push   ebx
  40f5ab:	call   0xda9c:0x3fa78b3b
  40f5b2:	sar    BYTE PTR [edx-0x60dd5a4e],0xfe
  40f5b9:	pop    edx
  40f5ba:	outs   dx,DWORD PTR ds:[esi]
  40f5bb:	xor    BYTE PTR [ecx-0x5b],dh
  40f5be:	retf   0x644a
  40f5c1:	xor    ah,dl
  40f5c3:	pop    edx
  40f5c4:	fnstcw WORD PTR ds:[eax+0x6]
  40f5c8:	(bad)  
  40f5c9:	jecxz  0x40f5a4
  40f5cb:	pop    esp
  40f5cc:	lea    ebp,[eax+0x17]
  40f5cf:	clc    
  40f5d0:	mov    bl,0x14
  40f5d2:	into   
  40f5d3:	test   BYTE PTR [edi+ebp*8],dh
  40f5d6:	shrd   ecx,ecx,0x6c
  40f5da:	mov    WORD PTR [edx+0x75d83b4d],fs
  40f5e0:	shl    DWORD PTR [eax-0x3a],0xda
  40f5e4:	leave  
  40f5e5:	xchg   DWORD PTR [eax],ebp
  40f5e7:	add    BYTE PTR [ecx-0x7c],al
  40f5ea:	xor    eax,0x47ef019c
  40f5ef:	cli    
  40f5f0:	or     al,0x87
  40f5f2:	xor    ah,dh
  40f5f4:	int    0xb5
  40f5f6:	fcmove st,st(4)
  40f5f8:	mov    ah,0x85
  40f5fa:	outs   dx,BYTE PTR ds:[esi]
  40f5fb:	ins    DWORD PTR es:[edi],dx
  40f5fc:	dec    ebx
  40f5fd:	jg     0x40f591
  40f5ff:	lock in al,0x8c
  40f602:	xchg   edx,eax
  40f603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f604:	in     al,0x16
  40f606:	int3   
  40f607:	nop
  40f608:	lahf   
  40f609:	daa    
  40f60a:	mov    eax,ds:0xd51d93c3
  40f60f:	rol    DWORD PTR [ecx+0x68],0x70
  40f613:	ja     0x40f61b
  40f615:	js     0x40f5c4
  40f617:	xor    DWORD PTR [edi+0x43],edx
  40f61a:	fmul   DWORD PTR [eax]
  40f61c:	mov    eax,ecx
  40f61e:	out    0xb1,eax
  40f620:	xlat   BYTE PTR ds:[ebx]
  40f621:	or     DWORD PTR [ebx+0x60ce223d],ebp
  40f627:	push   edx
  40f628:	sbb    BYTE PTR [edi-0x3baa9ac7],cl
  40f62e:	sbb    dl,BYTE PTR [edi]
  40f630:	scas   eax,DWORD PTR es:[edi]
  40f631:	add    cl,ch
  40f633:	jae    0x40f5f8
  40f635:	(bad)  
  40f636:	stos   BYTE PTR es:[edi],al
  40f637:	xchg   edi,eax
  40f638:	pusha  
  40f639:	cmp    eax,0xd12b7304
  40f63e:	xor    esp,DWORD PTR [eax+0x295e7c24]
  40f644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f645:	pop    es
  40f646:	jl     0x40f671
  40f648:	mov    esi,0x7f979403
  40f64d:	aaa    
  40f64e:	sub    edi,DWORD PTR [ebx+0x2c]
  40f651:	adc    bl,BYTE PTR [ebp+0x6]
  40f654:	retf   
  40f655:	mov    ebp,0x11692ea6
  40f65a:	dec    eax
  40f65b:	push   ds
  40f65c:	mov    eax,0x6d8a5129
  40f661:	(bad)  
  40f662:	repnz inc edi
  40f664:	jp     0x40f5f0
  40f666:	repz xchg ecx,eax
  40f668:	mov    esi,ecx
  40f66a:	fisub  DWORD PTR [edx-0x4fc5678e]
  40f670:	adc    DWORD PTR [edx+0x30],ebx
  40f673:	jmp    DWORD PTR [esi+0x44]
  40f676:	test   eax,0x60615fb6
  40f67b:	pop    edx
  40f67c:	stc    
  40f67d:	mov    dh,0xc4
  40f67f:	or     eax,0xc80bb2b2
  40f684:	retf   
  40f685:	push   ebp
  40f686:	xlat   BYTE PTR ds:[ebx]
  40f687:	and    BYTE PTR [ebx],dh
  40f689:	int    0x51
  40f68b:	data16 jnp 0x40f656
  40f68e:	lock adc dl,dl
  40f691:	cdq    
  40f692:	xchg   edi,eax
  40f693:	pusha  
  40f694:	cmp    eax,0x5015cc5b
  40f699:	and    dl,BYTE PTR [ecx]
  40f69b:	or     DWORD PTR [esi],eax
  40f69d:	jp     0x40f695
  40f69f:	jge    0x40f623
  40f6a1:	lods   eax,DWORD PTR ds:[esi]
  40f6a2:	xchg   esi,eax
  40f6a3:	mov    dh,0xce
  40f6a5:	imul   edx,DWORD PTR [edx-0x19],0xbf1b7c1e
  40f6ac:	cmp    DWORD PTR [esi],0xdafce1db
  40f6b2:	shl    ecx,cl
  40f6b4:	repnz xor esi,ebp
  40f6b7:	clc    
  40f6b8:	cdq    
  40f6b9:	imul   edx,DWORD PTR [ecx-0x38],0xd35b6c0f
  40f6c0:	ret    0x5597
  40f6c3:	pusha  
  40f6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c5:	sub    esp,ecx
  40f6c7:	pop    eax
  40f6c8:	sub    DWORD PTR [ecx+0x42],0x78
  40f6cc:	into   
  40f6cd:	in     eax,0x2c
  40f6cf:	loop   0x40f6ff
  40f6d1:	adc    BYTE PTR [esi],dh
  40f6d3:	outs   dx,BYTE PTR ds:[esi]
  40f6d4:	scas   eax,DWORD PTR es:[edi]
  40f6d5:	cld    
  40f6d6:	adc    DWORD PTR [ecx+edi*8-0x180beda3],esi
  40f6dd:	outs   dx,DWORD PTR ds:[esi]
  40f6de:	pop    ecx
  40f6df:	push   esp
  40f6e0:	xchg   edi,eax
  40f6e1:	call   0x8cfa1249
  40f6e6:	sbb    eax,0xa458d650
  40f6eb:	scas   eax,DWORD PTR es:[edi]
  40f6ec:	cmc    
  40f6ed:	cmp    ah,BYTE PTR [edx]
  40f6ef:	dec    ebx
  40f6f0:	adc    edi,ebx
  40f6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6f3:	mov    esi,DWORD PTR [edi]
  40f6f5:	jle    0x40f711
  40f6f7:	add    bl,dl
  40f6f9:	sub    al,BYTE PTR ds:0x965dd756
  40f6ff:	es es add dh,al
  40f703:	xor    eax,0x7476f360
  40f708:	fist   WORD PTR [ecx+0x129a7809]
  40f70e:	mov    esp,0x4c0e49dd
  40f713:	mov    al,ds:0x8b631850
  40f718:	loopne 0x40f6eb
  40f71a:	psubd  mm1,mm0
  40f71d:	(bad)  
  40f71e:	shr    BYTE PTR [edx],1
  40f720:	and    eax,DWORD PTR [eax]
  40f722:	ins    BYTE PTR es:[edi],dx
  40f723:	jo     0x40f71d
  40f725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f726:	xchg   ebx,eax
  40f727:	popa   
  40f728:	sar    ecx,cl
  40f72a:	repz cmp BYTE PTR [esi],dl
  40f72d:	test   DWORD PTR [ebx+0x61],edi
  40f730:	and    edx,DWORD PTR [edi-0x5c]
  40f733:	jmp    DWORD PTR [edi-0x55]
  40f736:	out    0x5d,eax
  40f738:	push   ss
  40f739:	(bad)  
  40f73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73b:	mov    BYTE PTR [esi],dl
  40f73d:	sahf   
  40f73e:	inc    ecx
  40f73f:	adc    eax,0xa49ece64
  40f744:	rcl    BYTE PTR [esi-0x4343f3b6],cl
  40f74a:	ins    DWORD PTR es:[edi],dx
  40f74b:	(bad)  
  40f74d:	push   ecx
  40f74e:	(bad)  
  40f74f:	repnz bound ebp,QWORD PTR [ecx+0x14]
  40f753:	les    edi,FWORD PTR [edx-0x432d3149]
  40f759:	xlat   BYTE PTR ds:[ebx]
  40f75a:	jnp    0x40f6dc
  40f75c:	cli    
  40f75d:	aas    
  40f75e:	es jae 0x40f747
  40f761:	fs retf 
  40f763:	pop    esi
  40f764:	mov    al,ds:0x740ada75
  40f769:	ja     0x40f715
  40f76b:	pop    ss
  40f76c:	sti    
  40f76d:	add    al,0xad
  40f76f:	push   DWORD PTR [eax-0x27291b23]
  40f775:	cdq    
  40f776:	mov    dl,0xe6
  40f778:	mov    ebx,0x7daff9e0
  40f77d:	std    
  40f77e:	in     al,0x66
  40f780:	mov    WORD PTR [edx],cs
  40f782:	push   edi
  40f783:	dec    ebx
  40f784:	xchg   edi,eax
  40f785:	push   ecx
  40f786:	repz aaa 
  40f788:	out    dx,eax
  40f789:	adc    eax,0x8f797e55
  40f78e:	pop    ebp
  40f78f:	nop
  40f790:	data16 loop 0x40f73d
  40f793:	jnp    0x40f759
  40f795:	jb     0x40f738
  40f797:	cmp    DWORD PTR [eax+0x79],ecx
  40f79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79b:	(bad)  
  40f79d:	sbb    BYTE PTR [edi-0x12],cl
  40f7a0:	mov    ch,0x84
  40f7a2:	inc    ebp
  40f7a3:	shl    BYTE PTR [esi],0x28
  40f7a6:	xor    DWORD PTR es:[ebp+0x6dfd98c4],edi
  40f7ad:	imul   eax,DWORD PTR [edx+ecx*8-0x4f],0xffffff87
  40f7b2:	test   BYTE PTR ds:0xf2a99ab7,0x33
  40f7b9:	xchg   edx,eax
  40f7ba:	add    esp,DWORD PTR [ebx]
  40f7bc:	pop    ss
  40f7bd:	test   ebx,eax
  40f7bf:	sub    esp,esp
  40f7c1:	scas   eax,DWORD PTR es:[edi]
  40f7c2:	ret    
  40f7c3:	mov    BYTE PTR [esi+eax*2],cl
  40f7c6:	or     ah,bh
  40f7c8:	lea    esp,[edx-0x23d3a078]
  40f7ce:	out    0xbd,al
  40f7d0:	xlat   BYTE PTR ds:[ebx]
  40f7d1:	aad    0xdf
  40f7d3:	(bad)  [eax+eax*2]
  40f7d6:	jb     0x40f809
  40f7d8:	cmp    eax,0x440e6105
  40f7dd:	jg     0x40f850
  40f7df:	pop    ebx
  40f7e0:	adc    bh,BYTE PTR [eax]
  40f7e2:	jbe    0x40f7ab
  40f7e4:	dec    ecx
  40f7e5:	(bad)  
  40f7e6:	out    0x9b,al
  40f7e8:	pusha  
  40f7e9:	jge    0x40f83f
  40f7eb:	cmp    ecx,DWORD PTR [esi-0x7d]
  40f7ee:	jns    0x40f834
  40f7f0:	int3   
  40f7f1:	shl    BYTE PTR [edi-0x4290526f],1
  40f7f7:	daa    
  40f7f8:	push   ebx
  40f7f9:	and    BYTE PTR [ebx+0x7cf5f64a],cl
  40f7ff:	into   
  40f800:	pop    ebp
  40f801:	pop    edx
  40f802:	or     al,0xfc
  40f804:	pop    esp
  40f805:	cmp    eax,0xba8ade6d
  40f80a:	(bad)  
  40f80b:	jmp    0x967e:0x19827677
  40f812:	retf   0x8c45
  40f815:	shl    ecx,cl
  40f817:	ins    BYTE PTR es:[edi],dx
  40f818:	rol    BYTE PTR [eax],0x5e
  40f81b:	(bad)  
  40f81c:	or     BYTE PTR [ecx-0x71],ah
  40f81f:	ds mov esp,0x25ca3b07
  40f825:	push   esp
  40f826:	fmul   st(4),st
  40f828:	jne    0x40f7d5
  40f82a:	arpl   WORD PTR [eax-0x2ce86e96],dx
  40f830:	or     ch,BYTE PTR [eax+0x6e]
  40f833:	xchg   BYTE PTR [ebx],al
  40f835:	add    edx,esp
  40f837:	jb     0x40f85a
  40f839:	pop    edi
  40f83a:	add    bh,BYTE PTR [ebx]
  40f83c:	rcl    DWORD PTR [esi+0x18],1
  40f83f:	xchg   edi,eax
  40f840:	in     al,dx
  40f841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f842:	push   0xffffffe1
  40f844:	outs   dx,BYTE PTR es:[esi]
  40f846:	jp     0x40f7db
  40f848:	or     edx,ecx
  40f84a:	inc    ebp
  40f84b:	jmp    DWORD PTR [eax+0x28]
  40f84e:	bswap  esp
  40f850:	sbb    esi,DWORD PTR [edx]
  40f852:	int3   
  40f853:	loop   0x40f84e
  40f855:	fsub   st(6),st
  40f857:	inc    ebp
  40f858:	pusha  
  40f859:	clc    
  40f85a:	aam    0x72
  40f85c:	inc    edx
  40f85d:	gs xor esp,edi
  40f860:	mov    edi,0xb3a7bec2
  40f865:	jbe    0x40f87d
  40f867:	aad    0x90
  40f869:	(bad)  
  40f86b:	pop    ebp
  40f86c:	imul   ebp,DWORD PTR [edi+0x4d],0x5e258a4f
  40f873:	jno    0x40f839
  40f875:	pop    edx
  40f876:	pushf  
  40f877:	hlt    
  40f878:	scas   al,BYTE PTR es:[edi]
  40f879:	mov    edi,0xf1e1ece6
  40f87e:	iret   
  40f87f:	shr    DWORD PTR [eax-0x3b5522f9],1
  40f885:	aaa    
  40f886:	rol    BYTE PTR [edx+0x49],1
  40f889:	cmp    bh,bh
  40f88b:	loopne 0x40f88d
  40f88d:	mov    DWORD PTR [eax],eax
  40f88f:	nop
  40f890:	lahf   
  40f891:	ins    BYTE PTR es:[edi],dx
  40f892:	inc    esp
  40f893:	test   DWORD PTR [ebp-0x6012004e],edi
  40f899:	jle    0x40f8e2
  40f89b:	sbb    bh,BYTE PTR [edi]
  40f89d:	add    ebp,DWORD PTR [eax+0x49fc7e56]
  40f8a3:	mov    dl,0xf4
  40f8a5:	add    eax,0xb831818d
  40f8aa:	add    al,0x9c
  40f8ac:	and    eax,0x8de07028
  40f8b1:	dec    edi
  40f8b2:	mov    ds:0x9edf28e,eax
  40f8b7:	jecxz  0x40f91e
  40f8b9:	scas   eax,DWORD PTR es:[edi]
  40f8ba:	mov    ah,0x84
  40f8bc:	push   ebx
  40f8bd:	pusha  
  40f8be:	mul    DWORD PTR [esi+0x1c]
  40f8c1:	(bad)  
  40f8c2:	not    DWORD PTR [esi-0x6ebe6272]
  40f8c8:	cli    
  40f8c9:	jle    0x40f933
  40f8cb:	mov    ebp,gs
  40f8cd:	shl    edi,cl
  40f8cf:	adc    esi,esp
  40f8d1:	inc    eax
  40f8d2:	jmp    0xd51:0x52e7d3fc
  40f8d9:	add    DWORD PTR [ebx+0x34],0x2f
  40f8dd:	out    0x1f,al
  40f8df:	fistp  DWORD PTR [ecx]
  40f8e1:	ss sbb al,0xa
  40f8e4:	dec    ecx
  40f8e5:	cld    
  40f8e6:	inc    ecx
  40f8e7:	xchg   esp,eax
  40f8e8:	jp     0x40f8bd
  40f8ea:	fisubr DWORD PTR [eax]
  40f8ec:	dec    edi
  40f8ed:	(bad)  
  40f8ee:	rcl    al,cl
  40f8f0:	scas   al,BYTE PTR es:[edi]
  40f8f1:	je     0x40f96a
  40f8f3:	rol    DWORD PTR [ebx+0x759de03e],1
  40f8f9:	mov    ?,WORD PTR [ebx-0x14]
  40f8fc:	mov    ds:0x5831308c,eax
  40f901:	mov    edi,0xf385427e
  40f906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f907:	sbb    eax,0x1392c5d1
  40f90c:	dec    ecx
  40f90d:	dec    ebx
  40f90e:	xor    ebx,edx
  40f910:	xchg   edx,eax
  40f911:	mov    esp,0x212b410f
  40f916:	sub    esi,ebp
  40f918:	daa    
  40f919:	add    DWORD PTR [eax-0x44755db1],0xffffffc4
  40f920:	mov    dh,BYTE PTR [ebx+ebp*2+0x33b5be72]
  40f927:	dec    edx
  40f928:	pop    eax
  40f929:	sbb    al,cl
  40f92b:	int    0x11
  40f92d:	je     0x40f8f8
  40f92f:	in     eax,0x59
  40f931:	dec    esp
  40f932:	nop
  40f933:	ja     0x40f90a
  40f935:	inc    DWORD PTR [esi]
  40f937:	ins    BYTE PTR es:[edi],dx
  40f938:	clc    
  40f939:	jno    0x40f8c4
  40f93b:	mov    dl,0x3c
  40f93d:	stc    
  40f93e:	push   cs
  40f93f:	aam    0x4
  40f941:	pop    edx
  40f942:	mov    ds:0x25777440,eax
  40f947:	pop    ss
  40f948:	mov    al,0xa2
  40f94a:	jg     0x40f912
  40f94c:	cmp    DWORD PTR [esi-0x659d29a2],eax
  40f952:	ds ret 
  40f954:	loopne 0x40f9a4
  40f956:	sub    dh,ch
  40f958:	pop    ecx
  40f959:	std    
  40f95a:	mov    ecx,0x57311a2c
  40f95f:	in     al,0xea
  40f961:	and    al,0xbd
  40f963:	mov    bh,0xae
  40f965:	out    dx,eax
  40f966:	test   BYTE PTR [ecx-0x39],ch
  40f969:	aad    0xca
  40f96b:	mov    ebx,0xa2c35341
  40f970:	dec    eax
  40f971:	rol    DWORD PTR [edx+ecx*8],cl
  40f974:	mov    bl,0xec
  40f976:	ja     0x40f923
  40f978:	jecxz  0x40f975
  40f97a:	fwait
  40f97b:	adc    ebp,DWORD PTR [edx]
  40f97d:	jnp    0x40f999
  40f97f:	fucom  st(7)
  40f981:	xchg   ebx,eax
  40f982:	push   ds
  40f983:	jmp    0x40f997
  40f985:	fadd   DWORD PTR [edi+0x65]
  40f988:	push   ecx
  40f989:	scas   eax,DWORD PTR es:[edi]
  40f98a:	int3   
  40f98b:	cld    
  40f98c:	shl    BYTE PTR [edi],cl
  40f98e:	adc    DWORD PTR [edi],ebx
  40f990:	popf   
  40f991:	and    dh,dh
  40f993:	push   ebx
  40f994:	cdq    
  40f995:	xor    cl,bl
  40f997:	mov    ds:0xf1cd595a,eax
  40f99c:	inc    ebp
  40f99d:	sub    al,0xd2
  40f99f:	stos   DWORD PTR es:[edi],eax
  40f9a0:	add    al,0xb8
  40f9a2:	cmc    
  40f9a3:	jo     0x40f9d7
  40f9a5:	push   0x7c
  40f9a7:	in     eax,dx
  40f9a8:	std    
  40f9a9:	or     al,0xc2
  40f9ab:	xchg   esi,eax
  40f9ac:	jne    0x40f93c
  40f9ae:	mov    ch,0x50
  40f9b0:	xchg   BYTE PTR [esi],bh
  40f9b2:	out    0x24,al
  40f9b4:	inc    ecx
  40f9b5:	mov    DWORD PTR [ebx-0x5a],ebp
  40f9b8:	mov    dh,0x45
  40f9ba:	fdivr  DWORD PTR [edx-0x13fe6e5d]
  40f9c0:	push   0xe0b2e05a
  40f9c5:	push   0xb64bcd08
  40f9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9cb:	jnp    0x40f980
  40f9cd:	cmp    BYTE PTR [ebx+ebx*4-0x488e1ac],dh
  40f9d4:	mov    al,0x87
  40f9d6:	inc    edi
  40f9d7:	repnz mov eax,0x3cd55e5f
  40f9dd:	adc    DWORD PTR [ebp-0x3a36212c],esi
  40f9e3:	fistp  WORD PTR [ebx+0x6e01a6d1]
  40f9e9:	push   ss
  40f9ea:	and    BYTE PTR [esi],ah
  40f9ec:	push   eax
  40f9ed:	mov    al,ds:0x8d0f2945
  40f9f2:	mov    ecx,0xdb454a9
  40f9f7:	push   ds
  40f9f8:	mov    cl,0x6a
  40f9fa:	rcl    edi,0xa6
  40f9fd:	jl     0x40fa4b
  40f9ff:	loopne 0x40f9f0
  40fa01:	pop    ebx
  40fa02:	adc    ch,BYTE PTR [edi+0x52e1124]
  40fa08:	mov    edx,0x29d96fd8
  40fa0d:	icebp  
  40fa0e:	pop    ebp
  40fa0f:	loopne 0x40f9c7
  40fa11:	ds test edi,ebp
  40fa14:	mov    WORD PTR [ebx+0x6e98d77f],?
  40fa1a:	adc    DWORD PTR [edi],edi
  40fa1c:	dec    esi
  40fa1d:	mov    ?,WORD PTR [edx-0x20]
  40fa20:	test   eax,0xf952b34d
  40fa25:	dec    DWORD PTR [edi+0x5d]
  40fa28:	outs   dx,DWORD PTR ds:[esi]
  40fa29:	dec    esp
  40fa2a:	cmp    BYTE PTR [eax],bh
  40fa2c:	xor    dl,bh
  40fa2e:	repnz in eax,0x1a
  40fa31:	(bad)  
  40fa32:	daa    
  40fa33:	mov    dh,0x67
  40fa35:	popa   
  40fa36:	repnz xchg esp,eax
  40fa38:	mov    bl,0x84
  40fa3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa3b:	gs retf 0x734c
  40fa3f:	ds mov ah,0x9f
  40fa42:	mov    ebx,ebp
  40fa44:	rcl    DWORD PTR [ebp-0x79],0x8e
  40fa48:	not    ebx
  40fa4a:	fxam   
  40fa4c:	and    eax,0xa37e4a9f
  40fa51:	retf   0x1e0e
  40fa54:	xchg   edi,edx
  40fa56:	test   BYTE PTR [ebx],al
  40fa58:	and    al,0x3
  40fa5a:	pop    ss
  40fa5b:	scas   al,BYTE PTR es:[edi]
  40fa5c:	je     0x40fa9d
  40fa5e:	imul   BYTE PTR [esp+edx*2-0x707b25d7]
  40fa65:	inc    esp
  40fa66:	(bad)  
  40fa67:	xchg   esi,eax
  40fa68:	into   
  40fa69:	rcl    eax,cl
  40fa6b:	jns    0x40fac1
  40fa6d:	lea    ebp,[ecx+0x43aa2219]
  40fa73:	cmp    ah,ah
  40fa75:	pop    ebx
  40fa76:	mov    dl,0x17
  40fa78:	stos   DWORD PTR es:[edi],eax
  40fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa7a:	jmp    0x40faa0
  40fa7c:	aad    0x96
  40fa7e:	mov    edi,0xc7bcfae9
  40fa83:	xchg   edi,eax
  40fa84:	push   0xffffffa5
  40fa86:	sti    
  40fa87:	cmp    eax,0xd107f1c5
  40fa8c:	inc    edi
  40fa8d:	xor    edi,DWORD PTR [ecx-0xf]
  40fa90:	pop    ds
  40fa91:	retf   0x1d44
  40fa94:	and    bl,dl
  40fa96:	jbe    0x40fa3b
  40fa98:	ficom  WORD PTR [eax+0x7d]
  40fa9b:	addr16 dec edi
  40fa9d:	mov    dl,0xd4
  40fa9f:	jle    0x40fa66
  40faa1:	mov    ebx,0x657bfc81
  40faa6:	and    eax,0x4079e417
  40faab:	cwde   
  40faac:	or     esp,DWORD PTR [ebx+0x19b860a3]
  40fab2:	fs sub eax,0x609dddc
  40fab8:	mov    cl,0x70
  40faba:	ins    DWORD PTR es:[edi],dx
  40fabb:	lock mov dl,0x19
  40fabe:	scas   eax,DWORD PTR es:[edi]
  40fabf:	fisub  WORD PTR [ebp+0x110a637a]
  40fac5:	lock out dx,al
  40fac7:	mov    ebp,0xe0167389
  40facc:	in     eax,dx
  40facd:	xchg   esp,eax
  40face:	inc    ebp
  40facf:	mov    bl,0xc0
  40fad1:	sbb    al,0xe8
  40fad3:	enter  0x2d8e,0x17
  40fad7:	push   0xffffff91
  40fad9:	addr16 fs adc cl,al
  40fadd:	imul   eax,DWORD PTR [eax+0x59dbfb09],0x3e506a08
  40fae7:	ret    0x1c31
  40faea:	out    0x7a,eax
  40faec:	bound  ebx,QWORD PTR [ecx-0x40]
  40faef:	mov    cl,0x86
  40faf1:	retf   
  40faf2:	sub    esi,DWORD PTR ds:0x9a21d9d2
  40faf8:	xor    al,0xc6
  40fafa:	out    dx,eax
  40fafb:	xor    eax,0xe49889df
  40fb00:	adc    BYTE PTR [eax+edx*4-0x5],cl
  40fb04:	loop   0x40fb3d
  40fb06:	ja     0x40fa94
  40fb08:	add    BYTE PTR ds:0xfbdda529,cl
  40fb0e:	and    ebx,esp
  40fb10:	(bad)  
  40fb12:	dec    ebp
  40fb13:	dec    esp
  40fb14:	push   edx
  40fb15:	pop    es
  40fb16:	mov    ecx,0xe79f588f
  40fb1b:	and    ecx,DWORD PTR [esi]
  40fb1d:	mov    edi,0x16c8b67
  40fb22:	xor    al,0x6d
  40fb24:	inc    ebx
  40fb26:	xchg   ebx,eax
  40fb27:	sub    al,0x8c
  40fb29:	xor    eax,0x927c1534
  40fb2e:	int    0x47
  40fb30:	xchg   edi,eax
  40fb31:	cmp    eax,0x7fe5911
  40fb36:	mov    eax,0xcebe9d9
  40fb3b:	aaa    
  40fb3c:	push   esi
  40fb3d:	cmp    DWORD PTR [ebp-0x75],esi
  40fb40:	rcl    DWORD PTR [edi],cl
  40fb42:	ss inc eax
  40fb44:	hlt    
  40fb45:	mov    BYTE PTR [ebx+0x70],bl
  40fb48:	fist   DWORD PTR [esi-0x74d99286]
  40fb4e:	lahf   
  40fb4f:	mov    al,ds:0x767228d9
  40fb54:	test   BYTE PTR [ecx],ch
  40fb56:	pusha  
  40fb57:	xchg   ecx,eax
  40fb58:	xchg   esp,eax
  40fb59:	and    DWORD PTR [ebp+0x193baea2],0x84722ee0
  40fb63:	mov    BYTE PTR ds:0x8f960b20,ch
  40fb69:	cmp    al,dh
  40fb6b:	mov    esi,0xb8af67d0
  40fb70:	(bad)  
  40fb71:	fs popf 
  40fb73:	push   ecx
  40fb74:	push   eax
  40fb75:	xor    al,0x7c
  40fb77:	ins    DWORD PTR es:[edi],dx
  40fb78:	xchg   ebx,eax
  40fb79:	jge    0x40fbd8
  40fb7b:	dec    ebx
  40fb7c:	pop    ecx
  40fb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb7e:	mov    DWORD PTR [edx-0x6f47d551],esp
  40fb84:	sar    BYTE PTR [ebp+0x71f7ed39],0x77
  40fb8b:	xor    DWORD PTR [ecx+0x36],0x2a
  40fb8f:	ss loope 0x40fb64
  40fb92:	mov    bh,0xe3
  40fb94:	cmp    BYTE PTR [ebx],bh
  40fb96:	cli    
  40fb97:	mov    ecx,0x20ec0a61
  40fb9c:	sub    DWORD PTR ds:0xd499c812,eax
  40fba2:	scas   al,BYTE PTR es:[edi]
  40fba3:	in     al,dx
  40fba4:	(bad)  
  40fba5:	sub    eax,0x41ee3e69
  40fbaa:	dec    esi
  40fbab:	and    esp,DWORD PTR [esp+ebp*8-0x29]
  40fbaf:	(bad)  
  40fbb0:	fld    QWORD PTR [ebx+0x2e68c3d3]
  40fbb6:	in     eax,0x51
  40fbb8:	in     al,dx
  40fbb9:	mov    esi,0x6dc22aee
  40fbbe:	ds cmp eax,0x1ccca986
  40fbc4:	pop    ebp
  40fbc5:	shr    BYTE PTR [eax+0x4b012834],1
  40fbcb:	out    dx,eax
  40fbcc:	dec    ecx
  40fbcd:	sub    edx,esi
  40fbcf:	push   ss
  40fbd0:	repnz add BYTE PTR [edx-0x1d],bh
  40fbd4:	ss pop edx
  40fbd6:	scas   eax,DWORD PTR es:[edi]
  40fbd7:	ret    
  40fbd8:	mov    ds,esp
  40fbda:	icebp  
  40fbdb:	test   DWORD PTR [eax-0x6f],0xae041ac8
  40fbe2:	sbb    al,0xa1
  40fbe4:	loope  0x40fb6d
  40fbe6:	sub    dh,BYTE PTR [esi-0x548d04be]
  40fbec:	popa   
  40fbed:	and    eax,0x361826a0
  40fbf2:	bound  ecx,QWORD PTR [edx+0x14db5d3b]
  40fbf8:	je     0x40fb95
  40fbfa:	pop    esi
  40fbfb:	stos   DWORD PTR es:[edi],eax
  40fbfc:	push   eax
  40fbfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbfe:	(bad)  
  40fbff:	call   0xb908:0xd79c9976
  40fc06:	dec    edx
  40fc07:	push   edx
  40fc08:	sub    al,dh
  40fc0a:	outs   dx,DWORD PTR ds:[esi]
  40fc0b:	cmp    edx,eax
  40fc0d:	push   esi
  40fc0e:	cwde   
  40fc0f:	fidiv  WORD PTR ds:0xb950eb26
  40fc15:	jp     0x40fbc0
  40fc17:	push   0x4b
  40fc19:	dec    eax
  40fc1a:	(bad)  
  40fc1b:	xchg   edx,eax
  40fc1c:	mov    ah,0xb5
  40fc1e:	cmp    DWORD PTR [esi+0x24b473f5],ecx
  40fc24:	enter  0xe24e,0x3e
  40fc28:	jmp    0x40fbcc
  40fc2a:	jne    0x40fc3d
  40fc2c:	and    edx,DWORD PTR [esi]
  40fc2e:	mov    ds,WORD PTR [ebp+0x205e9fe9]
  40fc34:	jno    0x40fbbf
  40fc36:	dec    esi
  40fc37:	leave  
  40fc38:	add    al,0xf6
  40fc3a:	jo     0x40fc29
  40fc3c:	push   cs
  40fc3d:	mov    al,ds:0xa3971fa4
  40fc42:	outs   dx,BYTE PTR ds:[esi]
  40fc43:	ja     0x40fbde
  40fc45:	sbb    ch,BYTE PTR [edi+0x3f]
  40fc48:	cmp    edx,DWORD PTR [ebp+0x1579d535]
  40fc4e:	inc    esi
  40fc4f:	int    0x53
  40fc51:	fsubr  st(5),st
  40fc53:	das    
  40fc54:	arpl   WORD PTR [edi],cx
  40fc56:	pop    ss
  40fc57:	nop
  40fc58:	push   edx
  40fc59:	icebp  
  40fc5a:	lahf   
  40fc5b:	idiv   BYTE PTR [edi-0x3483bd0a]
  40fc61:	scas   eax,DWORD PTR es:[edi]
  40fc62:	clc    
  40fc63:	adc    ah,BYTE PTR [edx+0x16]
  40fc66:	and    ebp,DWORD PTR [eax-0x7752f4e5]
  40fc6c:	sub    eax,0x9d8838db
  40fc71:	rcr    DWORD PTR [eax],cl
  40fc73:	mov    edi,0x88b66aff
  40fc78:	cdq    
  40fc79:	or     eax,0xb039c39e
  40fc7e:	out    dx,al
  40fc7f:	ds into 
  40fc81:	or     ebp,DWORD PTR [edi+0x236fd1a7]
  40fc87:	cmp    eax,0x4b56633c
  40fc8c:	ds mov esp,0x5c8741f3
  40fc92:	jne    0x40fc4e
  40fc94:	mov    BYTE PTR [ebx],bh
  40fc96:	pop    esi
  40fc97:	mov    esp,0x69817272
  40fc9c:	in     al,0x68
  40fc9e:	gs mov bh,BYTE PTR es:[edi+eax*1-0x1]
  40fca4:	sar    BYTE PTR [edx-0x48],0xe4
  40fca8:	xor    BYTE PTR [edx+0x74],al
  40fcab:	in     eax,0xd8
  40fcad:	and    DWORD PTR [edi-0x629adb5e],ebp
  40fcb3:	pop    ecx
  40fcb4:	xor    eax,0x8017250e
  40fcb9:	sub    ah,BYTE PTR [ebp+0x67a909e]
  40fcbf:	mov    ah,0xeb
  40fcc1:	push   edi
  40fcc2:	mov    edx,0x7d579e9f
  40fcc7:	sub    DWORD PTR [ebp+0x20c8ca7d],ecx
  40fccd:	js     0x40fd31
  40fccf:	leave  
  40fcd0:	iret   
  40fcd1:	in     al,dx
  40fcd2:	cwde   
  40fcd3:	xchg   edi,eax
  40fcd4:	push   esp
  40fcd6:	pop    edi
  40fcd7:	in     eax,dx
  40fcd8:	and    DWORD PTR [eax-0x612df807],esp
  40fcde:	sbb    eax,0x17e08e90
  40fce3:	pop    esi
  40fce4:	addr16 (bad) 
  40fce7:	psrad  mm5,QWORD PTR [edx-0xb0d398d]
  40fcee:	add    DWORD PTR [ecx-0xe],edi
  40fcf1:	add    eax,0x506866d8
  40fcf6:	call   0x24f59090
  40fcfb:	cmp    bl,BYTE PTR [edx]
  40fcfd:	imul   eax,DWORD PTR [eax],0xffffff8f
  40fd00:	in     al,dx
  40fd01:	std    
  40fd02:	enter  0xbe3a,0xcc
  40fd06:	jo     0x40fc97
  40fd08:	in     al,dx
  40fd09:	and    eax,0x3272d023
  40fd0e:	mov    dl,0xef
  40fd10:	call   0xd2c8:0x58f79877
  40fd17:	xor    eax,0xa0bef244
  40fd1c:	outs   dx,BYTE PTR ds:[esi]
  40fd1d:	and    DWORD PTR [ebp-0x69],esp
  40fd20:	inc    BYTE PTR [ebp+0x46]
  40fd23:	out    0xca,eax
  40fd25:	jg     0x40fd79
  40fd27:	pop    esp
  40fd28:	push   0xbdcc6862
  40fd2d:	ja     0x40fd30
  40fd2f:	mov    WORD PTR [eax*4-0x7652e746],?
  40fd36:	dec    esp
  40fd37:	adc    ebx,DWORD PTR [eax+edx*4-0x571ba8f3]
  40fd3e:	dec    esi
  40fd3f:	push   cs
  40fd40:	mov    ds:0xfb92c563,eax
  40fd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd46:	cmp    cl,dl
  40fd48:	xchg   DWORD PTR [ebx+0x5d55d43b],edi
  40fd4e:	mov    ch,0xcc
  40fd50:	fld    DWORD PTR [ebx+0x49ee1fc]
  40fd56:	dec    ecx
  40fd57:	outs   dx,DWORD PTR ds:[esi]
  40fd58:	adc    edi,DWORD PTR [edi+0x5]
  40fd5b:	mov    BYTE PTR [ecx-0x550a3fa2],ah
  40fd61:	data16 in al,0x4b
  40fd64:	mul    BYTE PTR [eax+eiz*2]
  40fd67:	imul   esp,DWORD PTR [ebp+0x4076e881],0x27c54af
  40fd71:	xchg   DWORD PTR [ebx-0x77],edx
  40fd74:	ins    DWORD PTR es:[edi],dx
  40fd75:	mov    BYTE PTR [ebx+0x31],dh
  40fd78:	xchg   ebp,eax
  40fd79:	shr    cl,cl
  40fd7b:	ret    0x24f9
  40fd7e:	(bad)  
  40fd7f:	add    al,0xe2
  40fd81:	and    esi,ecx
  40fd83:	and    edi,eax
  40fd85:	xchg   ebx,eax
  40fd86:	push   edx
  40fd87:	add    al,0x6d
  40fd89:	into   
  40fd8a:	cmp    BYTE PTR [esi+0x44],cl
  40fd8d:	dec    ebx
  40fd8e:	and    dl,BYTE PTR [edx+0x1ab1ea5a]
  40fd94:	int    0xb1
  40fd96:	pushf  
  40fd97:	fxch   st(5)
  40fd99:	xlat   BYTE PTR ds:[ebx]
  40fd9a:	(bad)  
  40fd9b:	jns    0x40fd2c
  40fd9d:	pop    ecx
  40fd9e:	push   esp
  40fd9f:	mov    dh,0x83
  40fda1:	aaa    
  40fda2:	je     0x40fddd
  40fda4:	inc    esi
  40fda5:	test   ecx,esp
  40fda7:	repz sub al,BYTE PTR gs:[edi]
  40fdab:	sub    al,0xaa
  40fdad:	jmp    0xd494:0x316a2f43
  40fdb4:	cld    
  40fdb5:	cmp    al,0x5b
  40fdb7:	cs rcl di,cl
  40fdbb:	jmp    0xcdb5:0x649d80f6
  40fdc2:	and    eax,0xbb2687e1
  40fdc7:	mov    esi,0x5c85bb54
  40fdcc:	loop   0x40fe2a
  40fdce:	imul   edi,DWORD PTR [ecx-0x16],0xffffffea
  40fdd2:	fcmove st,st(0)
  40fdd4:	jp     0x40fd69
  40fdd6:	stc    
  40fdd7:	push   ebp
  40fdd8:	int3   
  40fdd9:	push   esp
  40fdda:	mov    al,ds:0xe5d5cfaa
  40fddf:	int3   
  40fde0:	add    DWORD PTR [ebx+0x6ca8f542],0xcbf72080
  40fdea:	pop    esp
  40fdeb:	call   0xf6ec7ad2
  40fdf0:	je     0x40fdd1
  40fdf2:	rol    BYTE PTR [edx],1
  40fdf4:	push   ds
  40fdf5:	inc    ebp
  40fdf6:	imul   esi,ebp,0xa757a5b1
  40fdfc:	mov    cl,0xf2
  40fdfe:	pop    ss
  40fdff:	jp     0x40fe32
  40fe01:	and    BYTE PTR [esi+0x57],ah
  40fe04:	test   al,0x5b
  40fe06:	fdiv   st(6),st
  40fe08:	mov    ebp,0xab0b1f27
  40fe0d:	mov    ds:0x755d3ab,eax
  40fe12:	push   edx
  40fe13:	xchg   edi,eax
  40fe14:	or     dh,BYTE PTR [esi-0x3291e0f7]
  40fe1a:	sub    esp,DWORD PTR [eax]
  40fe1c:	sub    esp,ecx
  40fe1e:	mov    eax,gs
  40fe20:	loopne 0x40fdfa
  40fe22:	pop    edi
  40fe23:	jge    0x40fdb9
  40fe25:	push   0xffffff8a
  40fe27:	sub    esi,DWORD PTR [edx]
  40fe29:	inc    ecx
  40fe2a:	add    al,0xbc
  40fe2c:	arpl   WORD PTR [ebx+0x70],si
  40fe2f:	xor    BYTE PTR [edi],bl
  40fe31:	sbb    BYTE PTR [eax-0x7f07c5a3],ch
  40fe37:	or     eax,0x7b649632
  40fe3c:	push   edi
  40fe3d:	and    si,WORD PTR [esi]
  40fe40:	xchg   edi,eax
  40fe41:	es pop es
  40fe43:	test   al,0x5
  40fe45:	popf   
  40fe46:	fnstcw WORD PTR [edx-0x23]
  40fe49:	aad    0xe3
  40fe4b:	xchg   ecx,eax
  40fe4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4d:	mov    WORD PTR [ebx-0x30b3fdec],gs
  40fe53:	dec    esp
  40fe54:	aaa    
  40fe55:	dec    DWORD PTR [edx-0x2f32a4d7]
  40fe5b:	lahf   
  40fe5c:	add    DWORD PTR [edi+ebx*4],esi
  40fe5f:	scas   al,BYTE PTR es:[edi]
  40fe60:	out    dx,eax
  40fe61:	push   cs
  40fe62:	outs   dx,BYTE PTR ds:[esi]
  40fe63:	mov    dl,bl
  40fe65:	test   DWORD PTR [edx-0x67],esp
  40fe68:	jg     0x40fe2a
  40fe6a:	ja     0x40febe
  40fe6c:	jo     0x40fe31
  40fe6e:	enter  0x3f4c,0xab
  40fe72:	scas   eax,DWORD PTR es:[edi]
  40fe73:	xor    DWORD PTR ds:0xa2eda7b0,esp
  40fe79:	rol    DWORD PTR [edx],0x3c
  40fe7c:	aam    0x3
  40fe7e:	lahf   
  40fe7f:	cmp    esp,edi
  40fe81:	imul   ecx,DWORD PTR [edx-0x3c6b537],0x1e
  40fe88:	lods   al,BYTE PTR ds:[esi]
  40fe89:	in     eax,0x76
  40fe8b:	cld    
  40fe8c:	scas   eax,DWORD PTR es:[edi]
  40fe8d:	mov    bh,0x15
  40fe8f:	in     eax,0xea
  40fe91:	scas   eax,DWORD PTR es:[edi]
  40fe92:	mov    al,0xb5
  40fe94:	in     al,0xb1
  40fe96:	inc    edx
  40fe97:	stos   BYTE PTR es:[edi],al
  40fe98:	lds    esi,FWORD PTR [ebp-0x17]
  40fe9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe9c:	push   edi
  40fe9d:	add    al,0xd0
  40fe9f:	jmp    DWORD PTR [edi-0x4e]
  40fea2:	adc    DWORD PTR [edi+0x75],esi
  40fea5:	cmp    BYTE PTR [edi-0x2],ah
  40fea8:	jp     0x40fe45
  40feaa:	stos   DWORD PTR es:[edi],eax
  40feab:	cmp    eax,0x1a73a1a9
  40feb0:	add    ah,BYTE PTR [ebx-0x63]
  40feb3:	fs dec edi
  40feb5:	push   cs
  40feb6:	jo     0x40fefc
  40feb8:	cs cld 
  40feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febb:	inc    esp
  40febc:	jno    0x40fed9
  40febe:	cld    
  40febf:	cmp    DWORD PTR [eax+0x40],eax
  40fec2:	mov    ebx,0x61c76145
  40fec7:	leave  
  40fec8:	xor    eax,0xbdbb213
  40fecd:	sbb    BYTE PTR [ecx+ebx*1],cl
  40fed0:	sbb    DWORD PTR [eax],esi
  40fed2:	mov    esi,0xf81a01c5
  40fed7:	hlt    
  40fed8:	and    eax,0x8233b623
  40fedd:	sub    bh,BYTE PTR [eax+0x6a9600e7]
  40fee3:	sbb    eax,0xea50ddbf
  40fee8:	jb     0x40ff69
  40feea:	in     al,dx
  40feeb:	mov    bl,0xfd
  40feed:	idiv   esp
  40feef:	and    al,0x31
  40fef1:	cmp    eax,0x75d9cbad
  40fef6:	gs pop ebp
  40fef8:	ins    DWORD PTR es:[edi],dx
  40fef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefa:	dec    dh
  40fefc:	push   edi
  40fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefe:	and    BYTE PTR [edi-0x28e1f307],bh
  40ff04:	fcomip st,st(4)
  40ff06:	push   0x7c
  40ff08:	jb     0x40fecf
  40ff0a:	inc    ecx
  40ff0b:	(bad)  
  40ff0c:	in     al,0xb8
  40ff0e:	shl    edx,1
  40ff10:	pop    ebx
  40ff11:	add    al,0xd3
  40ff13:	mov    DWORD PTR [edi+0x44],esp
  40ff16:	mov    ch,BYTE PTR [ecx+0x17]
  40ff19:	mov    eax,0xedcc2da6
  40ff1e:	(bad)  
  40ff20:	aam    0x5c
  40ff22:	jbe    0x40ff02
  40ff24:	adc    eax,0xbb8b980b
  40ff29:	lea    edx,[esi+edx*4+0x265dab42]
  40ff30:	retf   0x20fb
  40ff33:	sub    esp,DWORD PTR [edx-0x1b]
  40ff36:	iret   
  40ff37:	call   0x5ff4:0x5af6c37d
  40ff3e:	pop    esp
  40ff3f:	scas   eax,DWORD PTR es:[edi]
  40ff40:	xchg   edx,eax
  40ff41:	stos   BYTE PTR es:[edi],al
  40ff42:	fsub   DWORD PTR [eax+edx*4-0x99b183f]
  40ff49:	pop    esi
  40ff4a:	push   ss
  40ff4b:	jns    0x40fef1
  40ff4d:	push   0xfffffffc
  40ff4f:	cmp    ecx,DWORD PTR [ebx+0x2f]
  40ff52:	push   ds
  40ff53:	pusha  
  40ff54:	sub    eax,0x370d216c
  40ff59:	mov    ecx,0x3adf1460
  40ff5e:	out    0x80,al
  40ff60:	mov    esi,0x961e2b47
  40ff65:	pop    edx
  40ff66:	lock pop ds
  40ff68:	sti    
  40ff69:	push   ecx
  40ff6a:	adc    al,cl
  40ff6c:	fs xchg esi,eax
  40ff6e:	out    0x6f,eax
  40ff70:	and    ecx,ebp
  40ff72:	scas   al,BYTE PTR es:[edi]
  40ff73:	popa   
  40ff74:	jmp    0x97e9:0xd5c769ca
  40ff7b:	in     eax,dx
  40ff7c:	xchg   DWORD PTR [eax-0x3131e27e],ebp
  40ff82:	aas    
  40ff83:	pop    eax
  40ff84:	imul   eax,DWORD PTR [ebp+0x496e8c53],0x6b35202c
  40ff8e:	mov    ch,0x2f
  40ff90:	jne    0x40ff64
  40ff92:	and    eax,0x530b124a
  40ff97:	adc    DWORD PTR [ecx+eax*8],esi
  40ff9a:	pushf  
  40ff9b:	bnd jne 0x40ffff
  40ff9e:	push   ecx
  40ff9f:	or     ecx,DWORD PTR [ecx+0x2f485f9b]
  40ffa5:	ror    DWORD PTR [edx-0x78],1
  40ffa8:	test   BYTE PTR [ecx],0x2e
  40ffab:	into   
  40ffac:	adc    BYTE PTR [ebx],bl
  40ffae:	cwde   
  40ffaf:	jp     0x40ff8b
  40ffb1:	sub    edi,esp
  40ffb3:	add    eax,esi
  40ffb5:	sub    esp,DWORD PTR [edi-0x69033c54]
  40ffbb:	push   ss
  40ffbc:	aam    0x52
  40ffbe:	dec    di
  40ffc0:	(bad)  
  40ffc1:	in     al,dx
  40ffc2:	mov    edi,0x80f6037e
  40ffc7:	or     BYTE PTR [ebx],bh
  40ffc9:	mov    ebp,ds
  40ffcb:	jne    0x410044
  40ffcd:	out    dx,al
  40ffce:	xor    al,BYTE PTR [eax]
  40ffd0:	fwait
  40ffd1:	jns    0x40ff7b
  40ffd3:	xor    DWORD PTR [edi-0x5948a52b],0x752c2e84
  40ffdd:	adc    DWORD PTR [ecx-0x2cfdea62],eax
  40ffe3:	jecxz  0x40ff75
  40ffe5:	pop    edx
  40ffe6:	inc    esp
  40ffe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe8:	xchg   ecx,eax
  40ffe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffea:	js     0x410058
  40ffec:	pextrw eax,(bad),0xc5
  40ffee:	add    dl,BYTE PTR [edi-0x3886fb0f]
  40fff4:	rol    DWORD PTR [edi+0xa],1
  40fff7:	ret    0xa172
  40fffa:	sub    DWORD PTR [edx],ebx
  40fffc:	pushf  
  40fffd:	aad    0x4d
  40ffff:	jnp    0x410053
  410001:	pop    ebp
  410002:	stos   BYTE PTR es:[edi],al
  410003:	mov    ds:0xa98d7d7a,al
  410008:	scas   eax,DWORD PTR es:[edi]
  410009:	add    edi,eax
  41000b:	xchg   DWORD PTR [ebx],esi
  41000d:	push   edi
  41000e:	xor    DWORD PTR [ecx-0x30349cde],ebx
  410014:	mov    cl,0x42
  410016:	test   BYTE PTR [ebp-0x30],cl
  410019:	push   ss
  41001a:	mov    edi,0x37266e9a
  41001f:	in     al,dx
  410020:	int3   
  410021:	aam    0x3a
  410023:	xchg   DWORD PTR [edx-0x5ddbeb9c],edi
  410029:	mov    edx,0x841bae40
  41002e:	push   0x2c9e178f
  410033:	pushf  
  410034:	xchg   ecx,eax
  410035:	iret   
  410036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410037:	cmp    dh,cl
  410039:	iret   
  41003a:	inc    ebx
  41003b:	iret   
  41003c:	xchg   edx,eax
  41003d:	iret   
  41003e:	in     al,0xfe
  410040:	mov    ecx,DWORD PTR [ebp+eiz*4+0x2f3794f9]
  410047:	sbb    eax,0x59d865a0
  41004c:	stc    
  41004d:	inc    eax
  41004e:	and    bl,dh
  410050:	daa    
  410051:	push   cs
  410052:	mov    al,ds:0x24f31821
  410057:	aas    
  410058:	add    al,0x93
  41005a:	xlat   BYTE PTR ds:[ebx]
  41005b:	push   ebp
  41005c:	gs call 0x244f:0x9d022f07
  410064:	inc    ebx
  410065:	mov    cl,ah
  410067:	xor    eax,0x169d3c0b
  41006c:	sbb    al,0x1e
  41006e:	lds    esp,FWORD PTR [edx+0x7b]
  410071:	lods   al,BYTE PTR ds:[esi]
  410072:	mov    ebx,DWORD PTR [esi]
  410074:	mov    ebx,0xbbdca513
  410079:	or     ch,bh
  41007b:	mov    BYTE PTR [ebp+0x33],dl
  41007e:	inc    esi
  41007f:	cs push esi
  410081:	push   ss
  410082:	pop    esi
  410083:	cmp    DWORD PTR [eax-0x5fea29b7],0x23
  41008a:	xor    edi,0x73
  41008d:	mov    ebx,0xbac2e1ed
  410092:	or     ebx,DWORD PTR [ebx-0x44]
  410095:	out    0xae,al
  410097:	ds adc eax,0x5063d027
  41009d:	call   0x9cd:0x71cf1bf7
  4100a4:	repz or al,0xd4
  4100a7:	pop    esp
  4100a8:	jo     0x4100b8
  4100aa:	out    dx,eax
  4100ab:	mov    ah,0x4f
  4100ad:	xchg   ebp,eax
  4100ae:	push   cs
  4100af:	xlat   BYTE PTR ds:[ebx]
  4100b0:	retf   
  4100b1:	cmc    
  4100b2:	sbb    eax,0x74945dc7
  4100b7:	das    
  4100b8:	mov    al,0x0
  4100ba:	sub    al,0x3d
  4100bc:	and    ebp,edi
  4100be:	adc    bl,BYTE PTR [ebx-0x53]
  4100c1:	in     eax,0x7e
  4100c3:	pop    ebp
  4100c4:	addr16 mov ah,0xb9
  4100c7:	jecxz  0x410075
  4100c9:	dec    eax
  4100ca:	jle    0x4100d5
  4100cc:	lahf   
  4100cd:	push   ds
  4100ce:	and    eax,0x61a626df
  4100d3:	push   edi
  4100d4:	or     edi,ebx
  4100d6:	adc    DWORD PTR [eax+esi*4],esi
  4100d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100da:	pusha  
  4100db:	jmp    0xf644:0x81f20a0e
  4100e2:	xchg   edx,eax
  4100e3:	pop    eax
  4100e4:	pop    ecx
  4100e5:	adc    al,0x8b
  4100e7:	fucomi st,st(6)
  4100e9:	ret    
  4100ea:	pop    ebx
  4100eb:	push   0xc0f57d09
  4100f0:	call   0xd19c:0xfc02a1e5
  4100f7:	push   eax
  4100f8:	dec    esi
  4100f9:	push   0x9d2dcf1e
  4100fe:	and    al,0x7f
  410100:	iret   
  410101:	ds dec esi
  410103:	push   ss
  410104:	dec    esi
  410105:	pop    ss
  410106:	mov    esp,0x8d7ddc3e
  41010b:	adc    al,0x15
  41010d:	adc    DWORD PTR [eax],ecx
  41010f:	xor    ch,dh
  410111:	pop    eax
  410112:	add    al,0xbf
  410114:	and    bh,BYTE PTR [edi-0x5]
  410117:	bound  eax,QWORD PTR [esi]
  410119:	and    eax,0x887cab37
  41011e:	xchg   ecx,eax
  41011f:	mov    ah,0x51
  410121:	lods   eax,DWORD PTR ds:[esi]
  410122:	xor    eax,eax
  410124:	loop   0x41010e
  410126:	pop    es
  410127:	cwde   
  410128:	lods   al,BYTE PTR ds:[esi]
  410129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012a:	mov    bl,0x40
  41012c:	sbb    eax,0xd4bddce9
  410131:	imul   BYTE PTR [eax+0x2e]
  410134:	sub    BYTE PTR [edi+0x56],cl
  410137:	mov    BYTE PTR [edx],cl
  410139:	dec    ebx
  41013a:	test   eax,0xe7ed479c
  41013f:	mov    esp,0x216d13ec
  410144:	add    ebx,DWORD PTR [edx]
  410146:	stc    
  410147:	mov    dh,0xe4
  410149:	out    0x29,eax
  41014b:	retf   0x7873
  41014e:	mov    eax,DWORD PTR [edi+0x5c]
  410151:	add    DWORD PTR [edi],ebx
  410153:	sahf   
  410154:	xlat   BYTE PTR ds:[ebx]
  410155:	into   
  410156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410157:	in     al,0xd0
  410159:	or     BYTE PTR [ecx],ch
  41015b:	or     BYTE PTR [ebp+0x3e8334a],cl
  410161:	cs js  0x41014f
  410164:	sub    eax,0x226b2c34
  410169:	dec    esp
  41016a:	add    bh,BYTE PTR es:[edi-0x9250f7]
  410171:	sbb    cl,BYTE PTR [edx-0x35]
  410174:	sahf   
  410175:	xchg   DWORD PTR ds:0xd5b91e6,esi
  41017b:	js     0x41019b
  41017d:	xchg   ecx,eax
  41017e:	lahf   
  41017f:	sbb    dh,ch
  410181:	jmp    0x8535:0xf350f2c3
  410188:	mov    ah,ch
  41018a:	popa   
  41018b:	mov    al,0xb8
  41018d:	xchg   ebp,eax
  41018e:	inc    ecx
  41018f:	pop    ss
  410190:	inc    esi
  410191:	hlt    
  410192:	jp     0x4101a6
  410194:	mov    al,0x7a
  410196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410197:	pushf  
  410198:	or     al,0x90
  41019a:	sub    DWORD PTR [eax-0x5f],ecx
  41019d:	pusha  
  41019e:	pop    edx
  41019f:	sbb    dh,dl
  4101a1:	outs   dx,BYTE PTR ds:[esi]
  4101a2:	lods   al,BYTE PTR ds:[esi]
  4101a3:	rol    DWORD PTR cs:[ebx],cl
  4101a6:	out    0xc6,al
  4101a8:	dec    esi
  4101a9:	popa   
  4101aa:	mov    DWORD PTR [ebx-0x4e],edx
  4101ad:	adc    al,0xbd
  4101af:	call   FWORD PTR [ecx-0x156f9ae3]
  4101b5:	mov    ch,0xc9
  4101b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b8:	push   ebp
  4101b9:	outs   dx,BYTE PTR ds:[esi]
  4101ba:	popf   
  4101bb:	aad    0xfb
  4101bd:	push   ebp
  4101be:	mov    WORD PTR [eax],?
  4101c0:	sbb    eax,ebx
  4101c2:	retf   0x736a
  4101c5:	xchg   ecx,eax
  4101c6:	inc    esi
  4101c7:	dec    edx
  4101c8:	pop    esp
  4101c9:	fnstsw WORD PTR [ecx+0x6cced5dd]
  4101cf:	inc    ebp
  4101d0:	mov    al,ds:0x7383cfc8
  4101d5:	cs ja  0x4101ae
  4101d8:	sbb    ebx,DWORD PTR [edx-0x1c]
  4101db:	push   0x7e9b6ff2
  4101e0:	mov    al,BYTE PTR [esi+0x27683a75]
  4101e6:	or     ch,BYTE PTR [edi-0x65db78ba]
  4101ec:	jns    0x410245
  4101ee:	adc    ch,BYTE PTR [ebx-0x46]
  4101f1:	xor    eax,0xf188c11a
  4101f6:	in     eax,0x17
  4101f8:	ins    DWORD PTR es:[edi],dx
  4101f9:	add    al,0xcc
  4101fb:	sub    eax,0x10be92b2
  410200:	test   ecx,ebp
  410202:	gs clc 
  410204:	loopne 0x41025e
  410206:	mov    ecx,0xd2812f5c
  41020b:	(bad)  
  41020c:	mov    ch,0xde
  41020e:	in     al,0x9
  410210:	jmp    DWORD PTR [esi+esi*8]
  410213:	mov    bh,0x27
  410215:	xor    cl,ch
  410217:	push   edi
  410218:	int3   
  410219:	mov    ch,0x8e
  41021b:	ins    DWORD PTR es:[edi],dx
  41021c:	push   ds
  41021d:	mov    ebx,DWORD PTR [edi+0x22]
  410220:	nop
  410221:	(bad)  
  410223:	and    al,0x96
  410225:	mov    eax,ds:0x3c019a40
  41022a:	ror    BYTE PTR ds:0xe5419f41,0x7a
  410231:	jb     0x4101c1
  410233:	inc    ebp
  410234:	jg     0x410276
  410236:	loop   0x4102a0
  410238:	cmp    eax,0x3d1d1233
  41023d:	repz and esp,edx
  410240:	lahf   
  410241:	xchg   ebp,eax
  410242:	imul   esp,DWORD PTR [ecx],0xffffffe7
  410245:	mov    bh,0x1e
  410247:	aad    0xe9
  410249:	aad    0x93
  41024b:	mov    ebx,0x7e49e4d7
  410250:	mov    BYTE PTR [ebx],dl
  410252:	loope  0x410262
  410254:	pop    ebx
  410255:	jne    0x410239
  410257:	lods   eax,DWORD PTR ds:[esi]
  410258:	scas   eax,DWORD PTR es:[edi]
  410259:	pop    eax
  41025a:	adc    DWORD PTR ds:0x318fc36a,ebp
  410260:	add    al,0x37
  410262:	dec    eax
  410263:	test   BYTE PTR [ebp+0x7c470b54],dl
  410269:	mov    bh,0x37
  41026b:	sub    ecx,DWORD PTR [edx+ebx*2]
  41026e:	sti    
  41026f:	stos   BYTE PTR es:[edi],al
  410270:	ja     0x4102b7
  410272:	test   BYTE PTR [esi+0x19],dl
  410275:	(bad)  
  410276:	pushf  
  410277:	adc    DWORD PTR [ebx+0x4c],esi
  41027a:	int    0x22
  41027c:	mov    ch,0x6f
  41027e:	push   ebp
  41027f:	cs fucomi st,st(1)
  410282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410283:	in     al,dx
  410284:	jmp    0xcc72fc3d
  410289:	xchg   BYTE PTR [edx-0x24],dl
  41028c:	iret   
  41028d:	pop    esi
  41028e:	repz dec eax
  410290:	cmp    BYTE PTR [ecx+0x280e9334],al
  410296:	and    BYTE PTR [ebx+ebp*8+0x4540e72a],al
  41029d:	out    0x7d,eax
  41029f:	fcomp  QWORD PTR [eax+eax*4]
  4102a2:	das    
  4102a3:	ss arpl si,cx
  4102a6:	test   al,0xb6
  4102a8:	dec    esi
  4102a9:	loope  0x4102b8
  4102ab:	dec    ecx
  4102ac:	mov    esi,0xf96a9ab4
  4102b1:	sub    al,0x53
  4102b3:	mov    ah,0xca
  4102b5:	cmp    dh,BYTE PTR [ebp+0x282efe85]
  4102bb:	xor    ebx,DWORD PTR [ecx]
  4102bd:	arpl   WORD PTR ds:0x3094e6b3,cx
  4102c3:	mov    esp,0x93a5a372
  4102c8:	pop    ebx
  4102c9:	inc    eax
  4102ca:	xor    eax,edi
  4102cc:	jns    0x41028d
  4102ce:	imul   DWORD PTR ds:0x7a35d795
  4102d4:	ins    BYTE PTR es:[edi],dx
  4102d5:	pop    ecx
  4102d6:	fnstenv [edi-0xe]
  4102d9:	push   esi
  4102da:	daa    
  4102db:	daa    
  4102dc:	xlat   BYTE PTR ds:[ebx]
  4102dd:	ss push es
  4102df:	test   BYTE PTR [ecx],cl
  4102e1:	(bad)  
  4102e2:	rcl    BYTE PTR [edi+0x41],1
  4102e5:	inc    esi
  4102e6:	not    BYTE PTR [eax+0x4a]
  4102e9:	mov    ebx,0xf21eef8f
  4102ee:	pop    ds
  4102ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f0:	in     al,dx
  4102f1:	fst    st(5)
  4102f3:	sub    DWORD PTR [edx+0x7d6f1c7],ecx
  4102f9:	pop    ebx
  4102fa:	push   edx
  4102fb:	out    0xf8,eax
  4102fd:	stos   BYTE PTR es:[edi],al
  4102fe:	mov    al,0xe6
  410300:	mov    bl,0xd1
  410302:	xlat   BYTE PTR ds:[ebx]
  410303:	fadd   QWORD PTR [eax+0x2a]
  410306:	add    DWORD PTR [eax+0x6b],eax
  410309:	or     eax,0x2e3ca9d7
  41030e:	jbe    0x4102d7
  410310:	fsub   st,st(7)
  410312:	cmc    
  410313:	sbb    al,0x7
  410315:	(bad)  
  410316:	ds xchg esp,eax
  410318:	cli    
  410319:	sub    eax,0x6d29250c
  41031e:	mov    ebp,ebp
  410320:	(bad)  
  410321:	in     al,0xa1
  410323:	or     edi,esp
  410325:	mov    ch,0x35
  410327:	adc    al,0xff
  410329:	push   es
  41032a:	xchg   ebx,eax
  41032b:	retfw  
  41032d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41032e:	or     eax,0x5464c052
  410333:	add    dl,bl
  410335:	and    BYTE PTR [edi],dl
  410337:	repz cmp eax,esp
  41033a:	adc    esp,esp
  41033c:	pop    ebp
  41033d:	popf   
  41033e:	imul   ecx,DWORD PTR [edx+0x5],0x8d52d6d2
  410345:	or     ebx,0xbc405bd4
  41034b:	stc    
  41034c:	std    
  41034d:	sbb    DWORD PTR [eax-0x73],edi
  410350:	outs   dx,DWORD PTR ds:[esi]
  410351:	out    dx,eax
  410352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410353:	jne    0x410322
  410355:	popf   
  410356:	xlat   BYTE PTR ds:[ebx]
  410357:	ins    DWORD PTR es:[edi],dx
  410358:	add    al,0x52
  41035a:	xchg   ebx,eax
  41035b:	in     al,0xf6
  41035d:	mov    edi,0xcfb3f100
  410362:	jl     0x41031f
  410364:	ret    
  410365:	leave  
  410366:	sub    eax,0xd6ca82e5
  41036b:	xchg   esp,eax
  41036c:	lea    ecx,[eax-0x16c59dfc]
  410372:	dec    edx
  410373:	cld    
  410374:	push   0x79
  410376:	sbb    bl,BYTE PTR [edx-0x751ac2af]
  41037c:	add    DWORD PTR [ecx+0x34],ebp
  41037f:	mov    bl,0xca
  410381:	mov    dh,0xc8
  410383:	and    ecx,esp
  410385:	mov    dl,0x4c
  410387:	pushf  
  410388:	jmp    0x96de53cf
  41038d:	out    0xf2,eax
  41038f:	adc    ebx,DWORD PTR [ebx]
  410391:	inc    ebp
  410392:	or     eax,0xdfd88f8d
  410397:	mov    ds:0x5caf5f4d,eax
  41039c:	(bad)  [ebx-0x1c84c374]
  4103a2:	sub    DWORD PTR [ecx+0x7e],edx
  4103a5:	push   ebp
  4103a6:	push   edx
  4103a7:	xor    al,0x34
  4103a9:	jns    0x4103b9
  4103ab:	mov    ebx,0x57ac69e4
  4103b0:	(bad)  
  4103b1:	repnz out 0xfc,eax
  4103b4:	rcl    edi,cl
  4103b6:	addr16 mov ah,ch
  4103b9:	jmp    0x51bc4386
  4103be:	je     0x41038b
  4103c0:	in     al,dx
  4103c1:	fwait
  4103c2:	xor    DWORD PTR [ecx+edx*2-0x2251711f],edx
  4103c9:	xor    edi,DWORD PTR ss:[esi+0x48]
  4103cd:	out    dx,eax
  4103ce:	jo     0x4103a8
  4103d0:	bound  ebp,QWORD PTR [ebx]
  4103d2:	mov    esi,DWORD PTR [edx+ecx*8-0x48a9747a]
  4103d9:	jo     0x4103ae
  4103db:	in     al,0xbe
  4103dd:	or     eax,0x58517aec
  4103e2:	sbb    eax,0xb7a53bd5
  4103e7:	enter  0x942e,0xed
  4103eb:	mov    cs,edx
  4103ed:	push   ecx
  4103ee:	dec    edi
  4103ef:	in     eax,dx
  4103f0:	std    
  4103f1:	es fmul st(3),st
  4103f4:	jmp    0x674380c
  4103f9:	inc    eax
  4103fa:	into   
  4103fb:	or     DWORD PTR [eax+edi*2-0x4730d3d6],ebx
  410402:	mov    ebp,0x9348b45f
  410407:	jne    0x410477
  410409:	sbb    esi,DWORD PTR [edi]
  41040b:	in     eax,dx
  41040c:	sbb    dh,BYTE PTR [edx+0x142aed42]
  410412:	sub    al,0x99
  410414:	imul   BYTE PTR [edx-0x24]
  410417:	xor    ch,BYTE PTR [esi+0x4d148da7]
  41041d:	mov    ds:0xbec39204,eax
  410422:	into   
  410423:	sti    
  410424:	test   DWORD PTR ds:0x7c5a07af,ecx
  41042a:	fisub  DWORD PTR [ebx]
  41042c:	push   edi
  41042d:	pop    ebx
  41042e:	les    eax,FWORD PTR [ebx+eiz*4-0x7]
  410432:	int3   
  410433:	sub    DWORD PTR [ecx],edi
  410435:	aad    0xb
  410437:	(bad)  
  410438:	push   esi
  410439:	push   es
  41043a:	int3   
  41043b:	inc    edi
  41043c:	xor    al,0x27
  41043e:	sbb    eax,0x6a5299f2
  410443:	jae    0x41043d
  410445:	push   0x5e
  410447:	sbb    dh,BYTE PTR [ebp-0x1402eb8d]
  41044d:	test   al,0x8a
  41044f:	inc    edi
  410450:	inc    esp
  410451:	dec    edx
  410452:	mov    cl,0x83
  410454:	mov    dh,0x6a
  410456:	out    dx,al
  410457:	dec    ebp
  410458:	push   ecx
  410459:	cmp    esp,DWORD PTR [edx]
  41045b:	cmp    BYTE PTR [edx+0x32],al
  41045e:	aad    0x1d
  410460:	mov    ch,0x5e
  410462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410463:	aad    0xb6
  410465:	add    ah,bh
  410467:	(bad)  
  410468:	(bad)  
  410469:	repz and ebp,esp
  41046c:	in     eax,0xdb
  41046e:	cmp    esp,DWORD PTR [edi+0x74af389]
  410474:	rol    DWORD PTR ss:[ecx-0x43f567c9],1
  41047b:	ficom  WORD PTR [edx+eiz*8+0x6a]
  41047f:	loop   0x410459
  410481:	mov    edi,ebp
  410483:	das    
  410484:	nop
  410485:	mov    ebx,0x71a43a8b
  41048a:	aaa    
  41048b:	out    dx,eax
  41048c:	mov    ebx,0xf1b081d9
  410491:	inc    ebp
  410492:	cmp    bh,cl
  410494:	gs push esp
  410496:	(bad)  
  410497:	out    0x98,eax
  410499:	and    esi,DWORD PTR [ebx-0x19]
  41049c:	sub    BYTE PTR [edi],bl
  41049e:	sub    bh,0xf4
  4104a1:	dec    ecx
  4104a2:	into   
  4104a3:	call   0xd258:0xb2eca28f
  4104aa:	dec    ebx
  4104ab:	test   eax,0xdbf6af00
  4104b0:	not    BYTE PTR [edi+0x5c60aab3]
  4104b6:	stos   DWORD PTR es:[edi],eax
  4104b7:	sub    DWORD PTR [ecx],edi
  4104b9:	xchg   esp,eax
  4104ba:	dec    edx
  4104bb:	xor    esp,ebp
  4104bd:	xor    eax,DWORD PTR [eax-0x505d8a2f]
  4104c3:	repz dec esp
  4104c5:	or     al,0xa2
  4104c7:	retf   
  4104c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c9:	dec    edx
  4104ca:	aaa    
  4104cb:	ja     0x4104bc
  4104cd:	adc    eax,0xdc6384b
  4104d2:	add    BYTE PTR [ecx],dl
  4104d4:	ss add al,0xe9
  4104d7:	mov    bl,0xdd
  4104d9:	mov    ds,WORD PTR [eax]
  4104db:	mov    ds:0xdc433e6b,eax
  4104e0:	pushf  
  4104e1:	out    0xcd,eax
  4104e3:	add    BYTE PTR [ecx+edi*2],dh
  4104e6:	push   edi
  4104e7:	inc    esp
  4104e8:	adc    al,0x64
  4104ea:	loopne 0x410550
  4104ec:	sbb    esp,0x6b
  4104ef:	push   ebx
  4104f0:	lods   al,BYTE PTR ds:[esi]
  4104f1:	lock mov ebp,0xcc291965
  4104f7:	imul   eax,DWORD PTR [eiz*1-0x471afb44],0x59
  4104ff:	mov    esp,0xbc5022f4
  410504:	mov    bh,dl
  410506:	ror    DWORD PTR [edx-0x79],cl
  410509:	mov    eax,0xa9b5f5c1
  41050e:	fsubr  st(4),st
  410510:	pushf  
  410511:	pop    ds
  410512:	aaa    
  410513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410514:	jl     0x410509
  410516:	xchg   ecx,eax
  410517:	or     BYTE PTR [ebx],bl
  410519:	bnd ja 0x410589
  41051c:	mov    eax,0x107fa9c6
  410521:	mov    cl,0x7c
  410523:	mov    esi,0xde6d59f2
  410528:	in     eax,dx
  410529:	or     DWORD PTR [esi-0x41],0x35a2d735
  410530:	add    al,0xcb
  410532:	loopne 0x4104ca
  410534:	jg     0x41054d
  410536:	xor    DWORD PTR [ecx+0x2b],esp
  410539:	inc    esi
  41053a:	pusha  
  41053b:	loop   0x4104ec
  41053d:	hlt    
  41053e:	iret   
  41053f:	jmp    0x4105b4
  410541:	frstor [ecx]
  410543:	add    BYTE PTR [edi-0x496042cf],ah
  410549:	dec    esi
  41054a:	add    DWORD PTR [esi+0x69],edx
  41054d:	ins    DWORD PTR es:[edi],dx
  41054e:	ja     0x410516
  410550:	push   ecx
  410551:	fcomp  QWORD PTR [ebx+0x6f]
  410554:	cwde   
  410555:	inc    BYTE PTR fs:[eax+0x57]
  410559:	xor    dh,BYTE PTR [esi+ebp*4+0x772306e7]
  410560:	fidiv  DWORD PTR [ebx-0x6711ecc]
  410566:	jne    0x410527
  410568:	outs   dx,BYTE PTR ds:[esi]
  410569:	push   edx
  41056a:	test   eax,0x882ec024
  41056f:	gs add eax,0x8ac9924b
  410575:	nop
  410576:	iret   
  410577:	and    eax,0x9fe68939
  41057c:	cld    
  41057d:	aam    0xba
  41057f:	cmp    DWORD PTR [esi+eiz*1],ecx
  410582:	mov    ebp,ebp
  410584:	inc    esi
  410585:	sbb    BYTE PTR [edi-0x7b856888],0x3e
  41058c:	(bad)  
  41058d:	jo     0x410596
  41058f:	sub    eax,0x13f55417
  410594:	imul   edx,DWORD PTR [edi+0x23],0x79
  410598:	jge    0x410537
  41059a:	adc    bl,BYTE PTR [ebx+0x12]
  41059d:	fwait
  41059e:	lods   al,BYTE PTR ds:[esi]
  41059f:	mov    dl,0x36
  4105a1:	fist   DWORD PTR [ebp+ebx*8+0x1e]
  4105a5:	sub    BYTE PTR ss:[ebx+ebp*4+0x5affb6a0],0xa1
  4105ae:	xchg   esp,eax
  4105af:	mov    cl,0xd1
  4105b1:	in     al,dx
  4105b2:	cmp    al,0x5c
  4105b4:	fistp  DWORD PTR [eax]
  4105b6:	arpl   WORD PTR [esi],si
  4105b8:	pop    eax
  4105b9:	push   ecx
  4105ba:	lock cmc 
  4105bc:	cmp    BYTE PTR [esi],ah
  4105be:	es test eax,0x5cb5a78c
  4105c4:	dec    ebx
  4105c5:	cs ins DWORD PTR es:[edi],dx
  4105c7:	dec    ecx
  4105c8:	scas   al,BYTE PTR es:[edi]
  4105c9:	sub    BYTE PTR [ebx],ah
  4105cb:	push   ebp
  4105cc:	enter  0x2d9d,0x8f
  4105d0:	adc    bh,BYTE PTR [esi]
  4105d2:	hlt    
  4105d3:	adc    eax,0x15468bfc
  4105d8:	mov    edx,0xee0162d5
  4105dd:	mov    ds:0xaf8f4fba,al
  4105e2:	je     0x4105d3
  4105e4:	retf   
  4105e5:	sar    bh,cl
  4105e7:	push   edx
  4105e8:	fs out 0x1b,eax
  4105eb:	dec    edi
  4105ec:	fld    QWORD PTR [edi+0x3d]
  4105ef:	retf   0xb503
  4105f2:	cwde   
  4105f3:	ins    BYTE PTR es:[edi],dx
  4105f4:	push   esi
  4105f5:	jbe    0x410674
  4105f7:	arpl   bx,ax
  4105f9:	push   eax
  4105fa:	pop    ebp
  4105fb:	gs dec ebp
  4105fd:	stos   DWORD PTR es:[edi],eax
  4105fe:	and    DWORD PTR [ecx+0x6e0bbc08],ebx
  410604:	fild   WORD PTR [si-0x3a]
  410608:	fsubr  st(0),st
  41060a:	sub    esi,DWORD PTR [edx-0x70]
  41060d:	and    al,0xef
  41060f:	add    al,0xfc
  410611:	pop    ebx
  410612:	pop    eax
  410613:	push   ecx
  410614:	dec    edx
  410615:	or     eax,0xf4346c2
  41061a:	cmp    al,0x16
  41061c:	gs idiv ch
  41061f:	xlat   BYTE PTR ds:[ebx]
  410620:	(bad)  [esi]
  410622:	cli    
  410623:	pop    esp
  410624:	ret    0xadf0
  410627:	aas    
  410628:	cmp    eax,0x39cd14b4
  41062d:	pushf  
  41062e:	jge    0x41064f
  410630:	and    DWORD PTR [ebp+edi*4-0x31],0x9e09b79d
  410638:	call   0xc74e:0x83d2244d
  41063f:	test   BYTE PTR [ebx+0x9],ah
  410642:	or     eax,0xdf518345
  410647:	test   DWORD PTR [edi-0x6d],ebx
  41064a:	mov    ecx,0x17dd8657
  41064f:	mov    eax,ds:0x4167c663
  410654:	and    al,0xe5
  410656:	sub    DWORD PTR [edx-0x165ed572],esi
  41065c:	ds jl  0x41063e
  41065f:	pop    ds
  410660:	mov    ah,0x53
  410662:	stos   DWORD PTR es:[edi],eax
  410663:	adc    ebx,DWORD PTR [eax-0x68]
  410666:	aaa    
  410667:	popf   
  410668:	inc    BYTE PTR [esi]
  41066a:	dec    eax
  41066b:	lock and eax,0x5a3829c2
  410671:	and    edx,DWORD PTR [ebx-0x67]
  410674:	ficom  WORD PTR [edi]
  410676:	jne    0x410671
  410678:	mov    BYTE PTR [ecx+0x57],dh
  41067b:	xchg   esp,eax
  41067c:	mov    al,0x98
  41067e:	call   0x8f2795ec
  410683:	cmp    ebp,eax
  410685:	cdq    
  410686:	stos   DWORD PTR es:[edi],eax
  410687:	jnp    0x410637
  410689:	in     eax,dx
  41068a:	mov    edi,0x4737a523
  41068f:	mov    bl,0xb8
  410691:	and    eax,0x59dd4316
  410696:	gs (bad) 
  410698:	dec    ebx
  410699:	cmp    eax,0x2150a7e3
  41069e:	shr    BYTE PTR [ecx+edx*8+0x2ca46e14],cl
  4106a5:	fidivr WORD PTR [edi+0x77]
  4106a8:	outs   dx,DWORD PTR ds:[esi]
  4106a9:	push   edx
  4106aa:	aam    0x88
  4106ac:	arpl   WORD PTR [edx-0x4b96de7d],cx
  4106b2:	add    eax,0x76a49b07
  4106b7:	cmp    esp,ebx
  4106b9:	mov    edi,0x3cee54bd
  4106be:	or     eax,0x6948a5d3
  4106c3:	fist   WORD PTR [eax-0x6d]
  4106c6:	and    BYTE PTR gs:[ebx+ecx*1],al
  4106ca:	je     0x4106fc
  4106cc:	jge    0x4106c8
  4106ce:	add    bh,BYTE PTR [esi]
  4106d0:	or     ebx,edx
  4106d2:	cdq    
  4106d3:	cmp    ebp,DWORD PTR [ebp-0x45c49264]
  4106d9:	bound  edx,QWORD PTR [eax+0x4b]
  4106dc:	ret    0x3797
  4106df:	into   
  4106e0:	push   ss
  4106e1:	xchg   DWORD PTR [esp+edi*8],eax
  4106e4:	stc    
  4106e5:	out    dx,eax
  4106e6:	push   ebx
  4106e7:	mov    edi,0x21c842fb
  4106ec:	std    
  4106ed:	leave  
  4106ee:	mov    ch,0x14
  4106f0:	jecxz  0x4106cf
  4106f2:	and    BYTE PTR [eax+0x7f7faed4],cl
  4106f8:	fidivr WORD PTR [esi+0x4e]
  4106fb:	sbb    eax,0xbb794723
  410700:	jmp    0x1511a69f
  410705:	stc    
  410706:	js     0x41070c
  410708:	jecxz  0x4106de
  41070a:	js     0x41070d
  41070c:	cmp    al,0x4c
  41070e:	loop   0x410759
  410710:	jmp    0x15f5:0x5373134f
  410717:	int3   
  410718:	stos   DWORD PTR es:[edi],eax
  410719:	jae    0x4106df
  41071b:	mov    cl,0xfa
  41071d:	cs (bad) 
  41071f:	jp     0x41078c
  410721:	out    0x1e,al
  410723:	scas   al,BYTE PTR es:[edi]
  410724:	mov    cl,0xaa
  410726:	push   ss
  410727:	outs   dx,BYTE PTR ds:[esi]
  410728:	adc    edi,edx
  41072a:	jecxz  0x4106ea
  41072c:	jne    0x410721
  41072e:	xor    cl,dl
  410730:	jle    0x410712
  410732:	or     ebx,ecx
  410734:	mov    edi,0xca56e32a
  410739:	pop    ebp
  41073a:	dec    eax
  41073b:	xchg   ebx,eax
  41073c:	xor    eax,0x164c1973
  410742:	or     cl,ah
  410744:	pop    ebx
  410745:	imul   eax,DWORD PTR [esi-0x2a],0xdeb8f85d
  41074c:	in     al,dx
  41074d:	adc    al,0x88
  41074f:	rcl    BYTE PTR [esi-0x50486cb0],1
  410755:	mov    dh,0xfe
  410757:	sub    eax,0x61ad7527
  41075c:	stc    
  41075d:	sbb    al,0xa9
  41075f:	mov    BYTE PTR [ecx],ch
  410761:	les    esp,FWORD PTR [ebp-0x7278d50c]
  410767:	xchg   edi,eax
  410768:	mov    eax,ds:0xa0b1dab5
  41076d:	dec    ebx
  41076e:	scas   eax,DWORD PTR es:[edi]
  41076f:	ins    BYTE PTR es:[edi],dx
  410770:	lods   eax,DWORD PTR es:[esi]
  410772:	test   BYTE PTR [ebx-0x40],cl
  410775:	int3   
  410776:	add    al,0x28
  410778:	inc    ebp
  410779:	xchg   ecx,eax
  41077a:	int    0x82
  41077c:	rcl    DWORD PTR [ecx],0x70
  41077f:	jb     0x410746
  410781:	iret   
  410782:	pop    eax
  410783:	and    ah,dh
  410785:	mov    edi,0xb13d408d
  41078a:	mov    al,ch
  41078c:	imul   ebx
  41078e:	icebp  
  41078f:	stc    
  410790:	hlt    
  410791:	mov    bh,0x70
  410793:	(bad)  
  410794:	pop    ss
  410795:	inc    esi
  410796:	das    
  410797:	and    BYTE PTR [ebp+ecx*8-0x6405a868],dh
  41079e:	test   esi,esi
  4107a0:	adc    ebx,DWORD PTR [esi]
  4107a2:	jo     0x41073c
  4107a4:	inc    esi
  4107a5:	mov    ds:0x56912612,eax
  4107aa:	fs xchg ebx,eax
  4107ac:	jnp    0x410733
  4107ae:	mov    ah,0x55
  4107b0:	nop
  4107b1:	mov    bl,0x89
  4107b3:	sbb    BYTE PTR [edi],0xac
  4107b6:	push   ecx
  4107b7:	cmp    edi,0x5c
  4107ba:	push   ebx
  4107bb:	add    al,0xd0
  4107bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107be:	popa   
  4107bf:	xchg   edi,eax
  4107c0:	sub    BYTE PTR [edx],dh
  4107c2:	cwde   
  4107c3:	ret    0xe9d6
  4107c6:	shr    eax,1
  4107c8:	cmp    ebx,ebx
  4107ca:	shr    DWORD PTR [ecx],1
  4107cc:	and    ebp,eax
  4107ce:	pop    ebx
  4107cf:	scas   al,BYTE PTR es:[edi]
  4107d0:	lock xchg di,ax
  4107d3:	shl    DWORD PTR [ebx+edx*4-0x4895c66d],cl
  4107da:	xchg   esi,eax
  4107db:	popa   
  4107dc:	or     al,0xe1
  4107de:	sbb    esp,DWORD PTR [ecx-0xfc6d97]
  4107e4:	mov    ebx,0x4d8450cb
  4107e9:	cmp    ah,BYTE PTR [esi]
  4107eb:	mov    esi,0x7f97a488
  4107f0:	in     al,dx
  4107f1:	ja     0x410847
  4107f3:	jnp    0x410862
  4107f5:	es pop ebp
  4107f7:	push   ds
  4107f8:	xor    BYTE PTR [ebp-0x5c788bc4],0xe4
  4107ff:	std    
  410800:	xchg   edx,eax
  410801:	lock push esi
  410803:	jae    0x41085b
  410805:	add    edi,DWORD PTR [ecx+0x60]
  410808:	arpl   WORD PTR [eax-0x4654de63],sp
  41080e:	xabort 0x63
  410811:	cdq    
  410812:	in     al,dx
  410813:	xchg   DWORD PTR [esi],edi
  410815:	stos   DWORD PTR es:[edi],eax
  410816:	mov    WORD PTR [ebx+0x39e4833],?
  41081c:	xor    BYTE PTR [ebp+0x0],0xf3
  410820:	pop    edi
  410821:	add    ebx,DWORD PTR [edi+ebx*4]
  410824:	inc    esi
  410825:	and    ch,BYTE PTR [ebp-0x36c9c110]
  41082b:	sub    ebx,ebp
  41082d:	les    ebx,FWORD PTR [edi]
  41082f:	jge    0x4107c9
  410831:	bnd js 0x4107b9
  410834:	pop    edx
  410835:	daa    
  410836:	xchg   ebp,eax
  410837:	mov    es,ebx
  410839:	cmp    ch,BYTE PTR [ecx-0x6a]
  41083c:	scas   al,BYTE PTR es:[edi]
  41083d:	call   0x542f:0x35d0d6ba
  410844:	xchg   esp,eax
  410845:	add    eax,0x8e2b9f61
  41084a:	inc    edx
  41084b:	inc    edx
  41084c:	sbb    cl,BYTE PTR [edx-0x3b7f2075]
  410852:	rcr    BYTE PTR ds:0x7c440107,0x12
  410859:	imul   ebx,DWORD PTR [ebx-0x1d90b073],0x409c0a07
  410863:	cmp    ecx,esi
  410865:	nop
  410866:	icebp  
  410867:	push   esi
  410868:	clc    
  410869:	imul   ebp
  41086b:	mov    al,cs:0xfba8720e
  410871:	ret    0x2bb
  410874:	fwait
  410875:	push   ss
  410876:	adc    eax,0xe4acfffc
  41087b:	mov    edx,0xd096f394
  410880:	xchg   edx,eax
  410881:	cmc    
  410882:	cmp    eax,0xffffff87
  410885:	xchg   esp,eax
  410886:	pop    eax
  410887:	push   eax
  410888:	push   0x34
  41088a:	jle    0x410839
  41088c:	arpl   WORD PTR [eax+0x3986ecc8],ax
  410892:	rcr    DWORD PTR [edi],0xef
  410895:	fdivr  DWORD PTR [edx]
  410897:	jne    0x41083d
  410899:	jne    0x410844
  41089b:	cld    
  41089c:	jecxz  0x41085f
  41089e:	adc    BYTE PTR [esi+ecx*4],0xbb
  4108a2:	loopne 0x41088f
  4108a4:	sti    
  4108a5:	in     eax,dx
  4108a6:	jl     0x41084f
  4108a8:	(bad)  
  4108aa:	retf   0xb24
  4108ad:	or     DWORD PTR [edi-0x7c],0xffffff8d
  4108b1:	jb     0x410869
  4108b3:	nop
  4108b4:	inc    edx
  4108b5:	clc    
  4108b6:	push   esp
  4108b7:	mov    dl,0xf8
  4108b9:	sti    
  4108ba:	fs repnz dec esi
  4108bd:	pop    ebp
  4108be:	sbb    ebx,DWORD PTR [ebp-0x7f]
  4108c1:	push   eax
  4108c2:	adc    eax,0x2baf2577
  4108c7:	out    dx,al
  4108c8:	fist   DWORD PTR [esi-0x49]
  4108cb:	sub    cl,BYTE PTR [esi-0x491d9202]
  4108d1:	sbb    BYTE PTR [ebx+0x3d],ch
  4108d4:	in     al,dx
  4108d5:	and    ebx,DWORD PTR [edx+ecx*1+0x4ccef077]
  4108dc:	pop    edi
  4108dd:	or     eax,0x68b5a3d8
  4108e2:	pop    esi
  4108e3:	sbb    BYTE PTR [ecx-0x411dd665],0x54
  4108ea:	repz sahf 
  4108ec:	mov    ch,0xfc
  4108ef:	lods   al,BYTE PTR ds:[esi]
  4108f0:	xor    ecx,DWORD PTR [esi+0x48]
  4108f3:	sbb    al,BYTE PTR [edx-0x20]
  4108f6:	fiadd  WORD PTR [esi+eiz*2+0x45c59bd]
  4108fd:	outs   dx,DWORD PTR ds:[esi]
  4108fe:	hlt    
  4108ff:	shr    ah,1
  410901:	cmp    esp,DWORD PTR [eax]
  410903:	adc    al,0x98
  410905:	jno    0x410919
  410907:	cmc    
  410908:	and    ah,BYTE PTR [ebx+0x16]
  41090b:	mov    esp,0x94c3f071
  410910:	or     BYTE PTR [ecx],dl
  410912:	lods   al,BYTE PTR ds:[esi]
  410913:	js     0x410911
  410915:	fiadd  DWORD PTR [ebx+edi*2]
  410918:	xor    ebx,edi
  41091a:	cmp    ch,al
  41091c:	xchg   DWORD PTR [edi+eiz*1-0x1f419305],eax
  410923:	sbb    DWORD PTR [edx],eax
  410925:	jle    0x41099b
  410927:	mov    ch,0x20
  410929:	aaa    
  41092a:	pop    eax
  41092b:	dec    edi
  41092c:	cld    
  41092d:	ja     0x41095d
  41092f:	push   cs
  410930:	sbb    ebp,DWORD PTR [ecx-0x5266ce7f]
  410936:	fsub   DWORD PTR [edx+eax*8+0x71]
  41093a:	or     al,0x8c
  41093c:	lahf   
  41093d:	mov    esi,0xcd45156a
  410942:	out    0x7b,al
  410944:	es pop esi
  410946:	push   cs
  410947:	neg    DWORD PTR [ebx]
  410949:	push   0xffffffd9
  41094b:	adc    dh,BYTE PTR [ebx+0x420b04ab]
  410951:	jmp    0x39b92b0b
  410956:	add    al,0x0
  410958:	stos   DWORD PTR es:[edi],eax
  410959:	jo     0x410984
  41095b:	ins    DWORD PTR es:[edi],dx
  41095c:	xor    ah,dh
  41095e:	mov    bh,0xa0
  410960:	inc    ebx
  410961:	pop    eax
  410962:	pop    eax
  410963:	out    0x8c,al
  410965:	adc    bh,BYTE PTR [esp+eax*1]
  410968:	adc    dh,BYTE PTR [edi+0x31216895]
  41096e:	aam    0x12
  410970:	shl    bh,1
  410972:	xor    al,BYTE PTR [edx]
  410974:	ins    DWORD PTR es:[edi],dx
  410975:	mov    WORD PTR [esi],gs
  410977:	outs   dx,DWORD PTR ds:[esi]
  410978:	adc    ecx,ebp
  41097a:	and    eax,0x5947ae49
  41097f:	mov    cl,0xe3
  410981:	sbb    dl,cl
  410983:	mov    al,0xa8
  410985:	addr16 and eax,0x59cb92ac
  41098b:	xchg   ecx,eax
  41098c:	add    BYTE PTR [esi],ch
  41098e:	inc    edi
  41098f:	sub    BYTE PTR [edx],ch
  410991:	repnz adc ebp,DWORD PTR [eax+0x27]
  410995:	test   al,0xb9
  410997:	mov    ebp,0xf191e3fb
  41099c:	sahf   
  41099d:	pop    ds
  41099e:	pop    ds
  41099f:	pop    ebp
  4109a0:	mov    dh,0xc3
  4109a2:	not    dh
  4109a4:	xor    ch,bl
  4109a6:	pop    ecx
  4109a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109a8:	imul   eax,edx,0xffffffc0
  4109ab:	out    0xe9,al
  4109ad:	js     0x4109e9
  4109af:	in     eax,dx
  4109b0:	cwde   
  4109b1:	mov    edx,0x283a373f
  4109b6:	push   cs
  4109b7:	enter  0x6b22,0x95
  4109bb:	mov    esi,0x5f8b9e80
  4109c0:	leave  
  4109c1:	popa   
  4109c2:	icebp  
  4109c3:	addr16 (bad) 
  4109c5:	adc    eax,DWORD PTR [esi+0x518ba8b5]
  4109cb:	mov    es:0x1f8fbad,eax
  4109d1:	jnp    0x4109be
  4109d3:	mov    BYTE PTR [ecx-0x37823f3],0x41
  4109da:	aad    0x15
  4109dc:	jmp    0x45a8:0xb9b77365
  4109e3:	(bad)  
  4109e4:	fist   DWORD PTR [edx]
  4109e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e7:	adc    al,0xe6
  4109e9:	adc    eax,DWORD PTR [eax+0x1bc5cea7]
  4109ef:	mov    ebp,0x682278b8
  4109f4:	mov    al,ds:0xe21cf1b5
  4109f9:	cmp    bh,BYTE PTR [esi+edi*1-0x14a3d731]
  410a00:	add    eax,0xe6da6bb7
  410a05:	fsubp  st(2),st
  410a07:	jge    0x4109f5
  410a09:	loop   0x4109eb
  410a0b:	inc    ecx
  410a0c:	out    0x60,eax
  410a0e:	sbb    BYTE PTR [eax+edi*4+0x53],al
  410a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a13:	ss mov ebx,0x469d22d7
  410a19:	pop    ecx
  410a1a:	into   
  410a1b:	ret    0x1c26
  410a1e:	int    0xe3
  410a20:	retf   0x96b9
  410a23:	js     0x4109dd
  410a25:	xchg   esi,eax
  410a26:	dec    ebp
  410a27:	mov    ebp,0x41edfc15
  410a2c:	test   eax,0x53684978
  410a31:	jnp    0x410a60
  410a33:	pop    ebp
  410a34:	xchg   esi,eax
  410a35:	sub    DWORD PTR ds:0xbb29b1a9,ebp
  410a3b:	loop   0x410a15
  410a3d:	mov    al,ds:0xbf21e6bf
  410a42:	push   0xfffffff1
  410a44:	popf   
  410a45:	in     eax,dx
  410a46:	test   eax,0x4e79ea65
  410a4b:	jge    0x410a24
  410a4d:	pop    esi
  410a4e:	dec    ebx
  410a4f:	ins    DWORD PTR es:[edi],dx
  410a50:	shld   DWORD PTR [esp+edx*8],edx,cl
  410a54:	daa    
  410a55:	or     eax,0x71ece842
  410a5a:	pop    ebx
  410a5b:	xor    BYTE PTR [ecx],dh
  410a5d:	ret    0xbf9e
  410a60:	imul   di,WORD PTR [esi+ecx*1-0x4b],0xfc11
  410a67:	xor    al,0x13
  410a69:	fs iret 
  410a6b:	shr    edi,0xe9
  410a6e:	inc    edx
  410a6f:	dec    edi
  410a70:	pop    es
  410a71:	popf   
  410a72:	lock adc BYTE PTR [bx+di-0x548a],al
  410a78:	push   edi
  410a79:	and    bh,al
  410a7b:	or     BYTE PTR [esi],dh
  410a7d:	jo     0x410a6d
  410a7f:	xor    eax,0xaf6cc30a
  410a84:	push   ebp
  410a85:	xor    eax,0xf2205efc
  410a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8b:	cmc    
  410a8c:	pushf  
  410a8d:	pop    ebp
  410a8e:	ret    
  410a8f:	jns    0x410a2f
  410a91:	jmp    0x410a3b
  410a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a94:	pop    ds
  410a95:	loop   0x410ae4
  410a97:	jmp    0xe3b6:0x9424f362
  410a9e:	ret    
  410a9f:	sbb    BYTE PTR [eax+eiz*1-0x6267817c],ch
  410aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa7:	rcr    ecx,cl
  410aa9:	push   esp
  410aaa:	inc    ecx
  410aab:	sbb    dh,al
  410aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aae:	and    esp,ebp
  410ab0:	and    edi,eax
  410ab2:	lea    esp,[eiz*1+0x34537004]
  410ab9:	imul   eax,esp,0x17
  410abc:	and    eax,ebx
  410abe:	fild   DWORD PTR [esp+edi*4-0x624586f2]
  410ac5:	xchg   esi,eax
  410ac6:	(bad)  
  410ac7:	jmp    0x410af0
  410ac9:	daa    
  410aca:	jmp    0x410ad2
  410acc:	inc    esp
  410acd:	cli    
  410ace:	jno    0x410ace
  410ad0:	loopne 0x410a83
  410ad2:	sub    bh,bh
  410ad4:	jbe    0x410b0f
  410ad6:	push   0x7a
  410ad8:	lea    bx,ds:0x13218a3
  410adf:	(bad)  
  410ae0:	mov    ebp,0xdee0ff83
  410ae5:	pushf  
  410ae6:	mov    al,bl
  410ae8:	repz mov bh,0x47
  410aeb:	int    0x62
  410aed:	pop    ebx
  410aee:	mov    ecx,0x8ca0e00f
  410af3:	push   ss
  410af4:	ror    BYTE PTR [ecx+0x44e97de8],cl
  410afa:	cwde   
  410afb:	jmp    0x787b32da
  410b00:	mov    ah,0xb5
  410b02:	mov    eax,0xa065bf38
  410b07:	inc    eax
  410b08:	push   esp
  410b09:	shl    DWORD PTR [eax+edi*8+0x2dd3396e],0x7f
  410b11:	mov    eax,ds:0xfc92c67f
  410b16:	mov    ecx,DWORD PTR ds:0x365e809d
  410b1c:	cli    
  410b1d:	xchg   ecx,eax
  410b1e:	sbb    edx,DWORD PTR [esp+edi*8-0x24]
  410b22:	mov    DWORD PTR [edx],edx
  410b24:	mov    dl,0xc2
  410b26:	iret   
  410b27:	aad    0x99
  410b29:	push   0xe527ece6
  410b2e:	pop    esp
  410b2f:	dec    ebp
  410b30:	jmp    0x410b1c
  410b32:	ja     0x410ae4
  410b34:	xor    edx,edx
  410b36:	js     0x410b63
  410b38:	mov    ch,0x49
  410b3a:	ss dec edx
  410b3c:	lods   al,BYTE PTR ds:[esi]
  410b3d:	aam    0xe0
  410b3f:	adc    ax,0x64e3
  410b43:	jnp    0x410b8d
  410b45:	dec    eax
  410b46:	dec    ebx
  410b47:	out    dx,al
  410b48:	dec    ebp
  410b49:	iret   
  410b4a:	sub    ecx,DWORD PTR [edi-0x4a]
  410b4d:	(bad)  
  410b4e:	dec    esp
  410b4f:	push   0x8289f4ee
  410b54:	gs jg  0x410b05
  410b57:	ds xchg edx,eax
  410b59:	jns    0x410b7d
  410b5b:	jne    0x410b0a
  410b5d:	nop
  410b5e:	je     0x410b83
  410b60:	cli    
  410b61:	cmp    esp,esi
  410b63:	xchg   ecx,eax
  410b64:	inc    edx
  410b65:	stc    
  410b66:	ds jns 0x410ba8
  410b69:	mov    ds:0xe861f653,al
  410b6e:	xor    dl,BYTE PTR [ecx-0x24]
  410b71:	sub    DWORD PTR [esi+ebp*1-0x6f],esp
  410b75:	dec    ebp
  410b76:	jmp    0x410bb3
  410b78:	adc    ebp,DWORD PTR [edx+0x1f]
  410b7b:	push   ebp
  410b7c:	xor    eax,0xd558cc16
  410b81:	jg     0x410be2
  410b83:	push   es
  410b84:	inc    eax
  410b85:	or     eax,0x8750f87a
  410b8a:	pop    ecx
  410b8b:	cmp    eax,DWORD PTR [ebx]
  410b8d:	sub    BYTE PTR [edx+0x7c],0x30
  410b91:	retf   0x8686
  410b94:	icebp  
  410b95:	jle    0x410b47
  410b97:	cdq    
  410b98:	sub    al,0x7b
  410b9a:	add    eax,0x2f0d35e2
  410b9f:	xchg   esi,eax
  410ba0:	xor    BYTE PTR cs:[edx+ebp*2],0x11
  410ba5:	loop   0x410ba8
  410ba7:	div    BYTE PTR [ecx+0x2b5bf592]
  410bad:	or     ebp,esp
  410baf:	(bad)  
  410bb0:	push   ebp
  410bb1:	mov    al,ds:0x630d63bd
  410bb6:	xchg   edx,eax
  410bb7:	fcomi  st,st(5)
  410bb9:	adc    eax,0xe6114492
  410bbe:	sbb    ebx,DWORD PTR [ebx+0x8e901ba]
  410bc4:	scas   al,BYTE PTR es:[edi]
  410bc5:	(bad)  
  410bc6:	xor    eax,0xe838ca2c
  410bcb:	nop
  410bcc:	shl    cl,1
  410bce:	scas   al,BYTE PTR es:[edi]
  410bcf:	(bad)  
  410bd1:	ret    
  410bd2:	in     al,0x8f
  410bd4:	xchg   ecx,esp
  410bd6:	imul   ebp,eax,0x3abf685a
  410bdc:	and    DWORD PTR [edi+0x15b9360b],ebp
  410be2:	dec    esi
  410be3:	jo     0x410c60
  410be5:	lods   eax,DWORD PTR ds:[esi]
  410be6:	lds    esi,FWORD PTR ds:0xfabe52e0
  410bec:	mov    esi,0x9675b24f
  410bf1:	jae    0x410b76
  410bf3:	int    0x77
  410bf5:	cld    
  410bf6:	mov    al,ah
  410bf8:	ret    0x4d93
  410bfb:	xor    bh,BYTE PTR [eax+0x2d380ec8]
  410c01:	leave  
  410c02:	jno    0x410c29
  410c04:	out    dx,eax
  410c05:	add    eax,0xe195ca52
  410c0a:	inc    esi
  410c0b:	arpl   WORD PTR [edx-0x56],bx
  410c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c0f:	int    0x99
  410c11:	cld    
  410c12:	mov    esp,0x480af79f
  410c17:	or     al,BYTE PTR [eax+0x30]
  410c1a:	cmp    eax,0x2ad908d7
  410c1f:	push   cs
  410c20:	mov    esp,0x31c46b46
  410c25:	(bad)  
  410c26:	mov    dh,0x59
  410c28:	hlt    
  410c29:	mov    ch,0x91
  410c2b:	xchg   esp,eax
  410c2c:	out    dx,eax
  410c2d:	cmp    eax,DWORD PTR [ecx+eiz*2+0x4d]
  410c31:	imul   edi,DWORD PTR [ecx-0x52de1b25],0xeed39ca4
  410c3b:	jne    0x410c1e
  410c3d:	(bad)  
  410c3e:	ficomp DWORD PTR [edi-0x9]
  410c41:	fsub   QWORD PTR [ebp-0x6a]
  410c44:	retf   0x84c7
  410c47:	aad    0x9c
  410c49:	xchg   ebp,eax
  410c4a:	and    BYTE PTR [ecx-0x54],cl
  410c4d:	xor    DWORD PTR [edi+0x10e27819],ebp
  410c53:	inc    ebp
  410c54:	adc    edi,edx
  410c56:	and    cl,BYTE PTR [edx]
  410c58:	data16 es cmp al,0x6a
  410c5c:	(bad)  
  410c5d:	mov    bh,0x3a
  410c5f:	je     0x410be9
  410c61:	pop    ecx
  410c62:	fldcw  WORD PTR [esi-0x4e]
  410c65:	cmp    eax,0x25e4522e
  410c6a:	sbb    BYTE PTR [edx+0x4b2be0cd],0x21
  410c71:	jecxz  0x410cbb
  410c73:	test   BYTE PTR [edx+0x1e],dh
  410c76:	dec    ecx
  410c77:	jns    0x410c90
  410c79:	int3   
  410c7a:	adc    BYTE PTR [edi-0x360e8203],cl
  410c80:	mov    dh,0xa5
  410c82:	jbe    0x410cdd
  410c84:	repz inc ebp
  410c86:	xchg   bh,bh
  410c88:	mov    bh,0xb6
  410c8a:	adc    dh,al
  410c8c:	sbb    DWORD PTR [ecx],0x2e2cb970
  410c92:	push   eax
  410c93:	sbb    dl,BYTE PTR [edi+esi*8+0x6403f4]
  410c9a:	jns    0x410cf0
  410c9c:	cmc    
  410c9d:	dec    esp
  410c9e:	pop    edx
  410c9f:	dec    eax
  410ca0:	xor    BYTE PTR es:[eax+0x54],ah
  410ca4:	xchg   ecx,eax
  410ca5:	cs inc esi
  410ca7:	out    dx,eax
  410ca8:	nop
  410ca9:	call   0x9cca:0xf3ed4f84
  410cb0:	pop    ecx
  410cb1:	xchg   ebx,eax
  410cb2:	stc    
  410cb3:	je     0x410d01
  410cb5:	pop    ebp
  410cb6:	jae    0x410c97
  410cb8:	add    DWORD PTR [esi+0x30a4aac],ebp
  410cbe:	mov    bh,0x3d
  410cc0:	sar    BYTE PTR [edi+0x72],1
  410cc3:	gs rol cl,cl
  410cc6:	pop    edx
  410cc7:	fld    DWORD PTR [edi-0xd9fc1fd]
  410ccd:	fsubr  st(0),st
  410ccf:	pop    ss
  410cd0:	in     al,0x35
  410cd2:	mov    al,ds:0x3435c9e1
  410cd7:	js     0x410c67
  410cd9:	into   
  410cda:	test   BYTE PTR [ebp+0x38],cl
  410cdd:	and    DWORD PTR [esi-0x68],0xffffffe1
  410ce1:	pop    esp
  410ce2:	xchg   esp,eax
  410ce3:	enter  0x85cd,0x3d
  410ce7:	fistp  QWORD PTR [ecx-0x7824c0d]
  410ced:	inc    ecx
  410cee:	cs clc 
  410cf0:	ret    
  410cf1:	test   al,0xa6
  410cf3:	and    esi,ecx
  410cf5:	int3   
  410cf6:	xchg   DWORD PTR [ebx+0x43],ebx
  410cf9:	mov    edx,0x2e98cfc3
  410cfe:	cmp    BYTE PTR [esi+0x70],0xb2
  410d02:	retf   0x20f
  410d05:	iret   
  410d06:	hlt    
  410d07:	mov    ecx,0x58930a12
  410d0c:	daa    
  410d0d:	fisub  DWORD PTR [ecx]
  410d0f:	xchg   edx,eax
  410d10:	(bad)  
  410d11:	xchg   edi,eax
  410d12:	push   0xfffffff6
  410d14:	pop    ss
  410d15:	jns    0x410d43
  410d17:	dec    eax
  410d18:	mov    ecx,0xd4903719
  410d1d:	jmp    0x410d51
  410d1f:	into   
  410d20:	adc    ebp,0x5b
  410d23:	add    DWORD PTR [edi+ecx*4+0x1d26e68],0xffffffab
  410d2b:	sahf   
  410d2c:	lods   eax,DWORD PTR ds:[esi]
  410d2d:	stos   DWORD PTR es:[edi],eax
  410d2e:	arpl   WORD PTR [edx],bx
  410d30:	ins    BYTE PTR es:[edi],dx
  410d31:	adc    dh,al
  410d33:	outs   dx,BYTE PTR ds:[esi]
  410d34:	xor    DWORD PTR [edx+0x413cb5b],edx
  410d3a:	jmp    0x50648609
  410d3f:	pop    es
  410d40:	adc    DWORD PTR [edx+ebx*8],0x36
  410d44:	jle    0x410d1b
  410d46:	jns    0x410d5a
  410d48:	clc    
  410d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4a:	ds pop ss
  410d4c:	mul    DWORD PTR [edx+ebx*4-0x71ea7b2f]
  410d53:	ror    DWORD PTR [esp+edx*8-0x194cbc17],0xba
  410d5b:	icebp  
  410d5c:	jo     0x410d39
  410d5e:	pop    ecx
  410d5f:	cmc    
  410d60:	ins    DWORD PTR es:[edi],dx
  410d61:	add    esi,DWORD PTR [edi+0x48]
  410d64:	ror    BYTE PTR [ecx-0x1576bac],0xef
  410d6b:	std    
  410d6c:	cmp    dl,BYTE PTR [esi]
  410d6e:	pop    ebx
  410d6f:	scas   eax,DWORD PTR es:[edi]
  410d70:	jl     0x410d06
  410d72:	or     ah,BYTE PTR [eax-0x6eacd27b]
  410d78:	and    BYTE PTR [ebx],dh
  410d7a:	test   BYTE PTR ds:0x7a0013f4,dh
  410d80:	cwde   
  410d81:	pop    edi
  410d82:	repz cmp BYTE PTR [ecx-0x130de354],cl
  410d89:	push   edx
  410d8a:	mov    dl,BYTE PTR [esi]
  410d8c:	(bad)
  410d90:	mov    dh,0xf8
  410d92:	adc    esi,DWORD PTR [edx+0x25]
  410d95:	add    DWORD PTR [eax+ebp*8],0xfffffffc
  410d99:	pop    ebp
  410d9a:	and    eax,0x6725abc3
  410d9f:	jbe    0x410da9
  410da1:	add    esp,DWORD PTR [edi+0x49]
  410da4:	mov    eax,0x31a556dd
  410da9:	xor    al,0x89
  410dab:	xor    al,0x86
  410dad:	jnp    0x410db4
  410daf:	inc    edx
  410db0:	sub    eax,0xa8df8602
  410db5:	mov    dh,0x5b
  410db7:	mov    ebx,DWORD PTR [ecx-0x62b217d]
  410dbd:	and    eax,eax
  410dbf:	push   ecx
  410dc0:	ficomp WORD PTR [esp+ebp*4-0x7e7f364d]
  410dc7:	mov    ebp,0xccc05c19
  410dcc:	dec    ebx
  410dcd:	pop    es
  410dce:	ret    
  410dcf:	in     al,dx
  410dd0:	inc    esi
  410dd1:	jl     0x410d73
  410dd3:	dec    edx
  410dd4:	add    eax,0x497c5493
  410dd9:	pop    ss
  410dda:	mov    ecx,0x667833c9
  410ddf:	mov    esp,0x68cc4940
  410de4:	pop    es
  410de5:	test   eax,0x2d22e8b8
  410dea:	(bad)  
  410deb:	sbb    DWORD PTR ds:0x684e5a1c,esp
  410df1:	pop    es
  410df2:	loop   0x410e0b
  410df4:	int    0xc5
  410df6:	mov    ds,WORD PTR [esi]
  410df8:	fdiv   DWORD PTR ds:0x29bad46a
  410dfe:	mov    ah,BYTE PTR [eax+0x163edda6]
  410e04:	mov    edx,DWORD PTR [edx+0x32]
  410e07:	pop    esi
  410e08:	inc    eax
  410e09:	add    eax,0x634f8402
  410e0e:	dec    ecx
  410e0f:	bound  ebx,QWORD PTR ds:0x92f88503
  410e15:	ja     0x410dab
  410e17:	int3   
  410e18:	arpl   WORD PTR [ebp+0xb],ax
  410e1b:	sub    al,0xa8
  410e1d:	mov    al,ds:0x12bf5ca1
  410e22:	fcmovb st,st(7)
  410e24:	ror    edi,1
  410e26:	push   edx
  410e27:	mov    es,WORD PTR [ebp-0x46]
  410e2a:	retf   
  410e2b:	retf   
  410e2c:	stc    
  410e2d:	(bad)  
  410e2e:	fidivr DWORD PTR es:[ebx+0x708d403]
  410e35:	je     0x410df0
  410e37:	mov    ebp,0x56dcdbaa
  410e3c:	stos   DWORD PTR es:[edi],eax
  410e3d:	xor    ebp,esi
  410e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e40:	outs   dx,BYTE PTR ds:[esi]
  410e41:	or     esp,DWORD PTR [ebp-0x4e]
  410e44:	mov    edx,DWORD PTR [eax]
  410e46:	cld    
  410e47:	std    
  410e48:	dec    esp
  410e49:	sub    eax,0x11a539b1
  410e4e:	pop    ax
  410e50:	imul   ecx,DWORD PTR [edx+0x7cb36a85],0xffffff8b
  410e57:	adc    esp,DWORD PTR [ecx-0x7affec87]
  410e5d:	mov    ?,ebx
  410e5f:	adc    DWORD PTR [ebx],eax
  410e61:	sub    edi,DWORD PTR [eax-0x7c37c70e]
  410e67:	fisubr WORD PTR [esi+eiz*8+0x4e5d2897]
  410e6e:	and    ecx,esi
  410e70:	jmp    0x623e853d
  410e75:	push   ebp
  410e76:	mov    DWORD PTR [ebx+edx*1+0x5d],eax
  410e7a:	and    DWORD PTR [ebx],ecx
  410e7c:	loop   0x410e9e
  410e7e:	gs add esi,ebp
  410e81:	xor    BYTE PTR ds:0xbcc8c1fb,ah
  410e87:	repnz lahf 
  410e89:	loopne 0x410e18
  410e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e8c:	adc    edi,DWORD PTR [eax+0x36]
  410e8f:	push   ss
  410e90:	pop    ecx
  410e91:	mov    esp,0x58fe250f
  410e96:	imul   esi,DWORD PTR [edi],0x859a9657
  410e9c:	retf   0x12fc
  410e9f:	mov    esi,0x81fa4be1
  410ea4:	fwait
  410ea5:	add    ecx,DWORD PTR [ebp-0x5a0c8d9c]
  410eab:	sub    ch,BYTE PTR [edi]
  410ead:	mov    DWORD PTR [ebx],esp
  410eaf:	jne    0x410f21
  410eb1:	xchg   ebx,eax
  410eb2:	test   eax,0xbf596f5
  410eb7:	addr16 pop edx
  410eb9:	jb     0x410eec
  410ebb:	test   DWORD PTR [ebp+0x641d43c7],edx
  410ec1:	popf   
  410ec2:	outs   dx,BYTE PTR ds:[esi]
  410ec3:	xchg   edi,eax
  410ec4:	int    0x31
  410ec6:	enter  0x609b,0x63
  410eca:	inc    esi
  410ecb:	test   ebx,edi
  410ecd:	lds    edi,FWORD PTR ds:0x9638b41d
  410ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed4:	ds in  eax,dx
  410ed6:	lods   eax,DWORD PTR ds:[esi]
  410ed7:	sahf   
  410ed8:	pop    eax
  410ed9:	stc    
  410eda:	fwait
  410edb:	push   ecx
  410edc:	int3   
  410edd:	mov    ah,0xa7
  410edf:	pop    esi
  410ee0:	adc    al,0xdd
  410ee2:	pop    esp
  410ee3:	int3   
  410ee4:	out    0x48,eax
  410ee6:	or     BYTE PTR [edi-0x39],al
  410ee9:	loope  0x410ebb
  410eeb:	in     eax,dx
  410eec:	adc    al,0x70
  410eee:	jge    0x410f11
  410ef0:	mov    ch,0x4d
  410ef2:	mov    dh,0x68
  410ef4:	lods   al,BYTE PTR ds:[esi]
  410ef5:	sar    BYTE PTR [edi],1
  410ef7:	mov    dh,0x5d
  410ef9:	(bad)  
  410efa:	call   0xaaad:0x19bf1471
  410f01:	lahf   
  410f02:	xor    ch,dh
  410f04:	inc    ebx
  410f05:	loop   0x410ec6
  410f07:	cmp    esp,esi
  410f09:	jno    0x410edd
  410f0b:	aad    0xa4
  410f0d:	add    BYTE PTR ds:0xd7fb26a5,bl
  410f13:	sub    ah,BYTE PTR [ebx-0x7]
  410f16:	pop    es
  410f17:	add    ah,dl
  410f19:	fwait
  410f1a:	cmc    
  410f1b:	xchg   ecx,eax
  410f1c:	sti    
  410f1d:	outs   dx,BYTE PTR ds:[esi]
  410f1e:	jle    0x410f26
  410f20:	aas    
  410f21:	int    0x47
  410f23:	into   
  410f24:	mov    esp,0x194906e1
  410f29:	outs   dx,BYTE PTR ds:[esi]
  410f2a:	add    cl,bh
  410f2c:	xchg   edi,eax
  410f2d:	ins    BYTE PTR es:[edi],dx
  410f2e:	leave  
  410f2f:	inc    eax
  410f30:	sub    al,0x84
  410f32:	push   edx
  410f33:	rcl    DWORD PTR [ecx+0x7837602a],cl
  410f39:	das    
  410f3a:	mov    al,0xd1
  410f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f3d:	(bad)
  410f41:	pushf  
  410f42:	dec    ebx
  410f43:	sub    DWORD PTR [edi],ebx
  410f45:	loopne 0x410ee5
  410f47:	out    0xfa,eax
  410f49:	sub    al,0x47
  410f4b:	jbe    0x410fbb
  410f4d:	rol    BYTE PTR [eax+0x53b3cdc],cl
  410f53:	outs   dx,DWORD PTR ds:[esi]
  410f54:	sbb    bh,BYTE PTR [edx]
  410f56:	push   es
  410f57:	pop    ebp
  410f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f59:	xor    al,0x55
  410f5b:	retf   
  410f5c:	dec    edx
  410f5d:	imul   esp,DWORD PTR [edi+ecx*8-0x559f5625],0x4e
  410f65:	and    dl,dh
  410f67:	pop    esp
  410f68:	test   eax,0x9e64f452
  410f6d:	rol    BYTE PTR [ecx],0x33
  410f70:	or     ebp,DWORD PTR [edx+0x2a]
  410f73:	mov    ds:0xbd5cdab4,al
  410f78:	push   ebx
  410f79:	aas    
  410f7a:	int3   
  410f7b:	clc    
  410f7c:	call   edx
  410f7e:	repz sbb eax,DWORD PTR ss:[ecx*8-0x6e51a131]
  410f87:	dec    ebp
  410f88:	ins    DWORD PTR es:[edi],dx
  410f89:	shl    DWORD PTR [ebp+ecx*2-0x75],1
  410f8d:	mov    ecx,0xa796ae82
  410f92:	sbb    eax,0x6949ff2d
  410f97:	mov    fs,WORD PTR [ebx]
  410f99:	xor    al,BYTE PTR [ebx]
  410f9b:	push   esi
  410f9c:	sahf   
  410f9d:	inc    eax
  410f9e:	xchg   ecx,eax
  410f9f:	inc    esp
  410fa0:	inc    ebx
  410fa1:	(bad)  
  410fa2:	sub    BYTE PTR [esi+0x6b16743],bh
  410fa8:	in     al,dx
  410fa9:	ins    BYTE PTR es:[edi],dx
  410faa:	xor    DWORD PTR [ebx+ebp*2-0x7cd906b5],0xffffffa5
  410fb2:	pop    ss
  410fb3:	(bad)  
  410fb5:	mov    edx,0x5ca8618d
  410fba:	mov    WORD PTR [ecx],es
  410fbc:	or     ecx,esp
  410fbe:	add    DWORD PTR [ebx+edi*8+0x43fa72b4],ecx
  410fc5:	jp     0x410fdb
  410fc7:	cwde   
  410fc8:	rol    BYTE PTR [ebx+0x2f8ba47e],0x9d
  410fcf:	mov    dl,0x7f
  410fd1:	sar    BYTE PTR [ebx-0x6c],cl
  410fd4:	cmp    al,0xb8
  410fd6:	adc    cl,BYTE PTR [esi]
  410fd8:	int    0xc8
  410fda:	cld    
  410fdb:	push   ss
  410fdc:	jb     0x41103b
  410fde:	fwait
  410fdf:	das    
  410fe0:	fnsave ss:[eax]
  410fe3:	ret    
  410fe4:	mov    DWORD PTR [esi-0x12],esi
  410fe7:	ss inc esp
  410fe9:	cli    
  410fea:	aad    0xc9
  410fec:	jecxz  0x41105d
  410fee:	lods   eax,DWORD PTR ds:[esi]
  410fef:	sar    DWORD PTR [edx],0x75
  410ff2:	xor    BYTE PTR [ebp+0x2],al
  410ff5:	pop    ebp
  410ff6:	inc    esi
  410ff7:	add    eax,0x5e3981af
  410ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ffd:	sbb    DWORD PTR [ebx+edx*8+0x6a],ebx
  411001:	mov    bh,0xcc
  411003:	push   edx
  411004:	jecxz  0x411052
  411006:	retf   0xaf2a
  411009:	pop    edi
  41100a:	fwait
  41100b:	cmp    BYTE PTR [ebx-0x7a069af1],dl
  411011:	dec    ecx
  411012:	cmp    dl,0x60
  411015:	mov    dh,0xc5
  411017:	out    0x6e,eax
  411019:	cwde   
  41101a:	push   ebp
  41101b:	cmp    bl,ch
  41101d:	mov    ds:0x38b35323,eax
  411022:	push   ss
  411023:	iret   
  411024:	fnsave [esi]
  411026:	and    eax,DWORD PTR [esi+edx*4-0x5e9fde99]
  41102d:	mov    dl,0x6
  41102f:	pop    esp
  411030:	cld    
  411031:	jp     0x411014
  411033:	sub    esi,DWORD PTR [ebx]
  411035:	js     0x410ffa
  411037:	aas    
  411038:	repnz fmul DWORD PTR ds:0x3499b6ab
  41103f:	jg     0x411022
  411041:	mov    esi,0x8361261c
  411046:	xchg   edi,eax
  411047:	je     0x4110b7
  411049:	mov    cl,0x43
  41104b:	inc    ebx
  41104c:	scas   al,BYTE PTR es:[edi]
  41104d:	mov    ds:0x2f5f752b,eax
  411052:	push   0x8c69ce21
  411057:	sbb    eax,0x3c551fe1
  41105c:	fistp  WORD PTR [edx]
  41105e:	dec    ebp
  41105f:	ja     0x4110c4
  411061:	out    0x52,eax
  411063:	sub    ebx,ebp
  411065:	pop    esi
  411066:	dec    eax
  411067:	test   eax,0x40b5e1bc
  41106c:	in     al,dx
  41106d:	cs push edx
  41106f:	inc    esp
  411070:	jmp    0x8ad81150
  411075:	push   ebp
  411076:	in     eax,0x83
  411078:	and    ebp,ebp
  41107a:	or     eax,ebx
  41107c:	pop    esi
  41107d:	ja     0x411084
  41107f:	sbb    BYTE PTR [ecx],al
  411081:	fdiv   QWORD PTR [edi+0x2d]
  411084:	xor    al,0x20
  411086:	inc    eax
  411087:	and    ah,ah
  411089:	jl     0x411096
  41108b:	jbe    0x411080
  41108d:	jae    0x411047
  41108f:	push   0xffffffaa
  411091:	mov    ebp,0xb41d4436
  411096:	mov    BYTE PTR [edi-0x4fc251b0],bh
  41109c:	arpl   WORD PTR [esi],cx
  41109e:	call   0x1464:0x53f35835
  4110a5:	push   ecx
  4110a6:	dec    esp
  4110a7:	adc    eax,0xaed7fc8f
  4110ac:	xor    al,BYTE PTR [edi]
  4110ae:	mov    bl,0x1e
  4110b0:	or     BYTE PTR ss:[edi+0x209e6f5e],cl
  4110b7:	hlt    
  4110b8:	mov    esp,0xbf2c7221
  4110bd:	dec    ebx
  4110be:	lods   al,BYTE PTR ds:[esi]
  4110bf:	inc    edx
  4110c0:	std    
  4110c1:	stc    
  4110c2:	push   ss
  4110c3:	push   edi
  4110c4:	cmp    al,BYTE PTR [edx+0x5c]
  4110c7:	int3   
  4110c8:	inc    edx
  4110c9:	and    DWORD PTR [esi-0x305e8b41],esi
  4110cf:	jno    0x411111
  4110d1:	(bad)  
  4110d2:	cmp    BYTE PTR [ebp+eax*8+0x6a],cl
  4110d6:	mov    esi,0xf878ae05
  4110db:	(bad)  
  4110dc:	inc    esp
  4110dd:	mov    WORD PTR [eax],es
  4110df:	clc    
  4110e0:	pop    esp
  4110e1:	inc    edx
  4110e2:	in     al,0xcb
  4110e4:	pop    ebx
  4110e5:	dec    edi
  4110e6:	setg   BYTE PTR [edx+0x92bc47f]
  4110ed:	xor    bl,bl
  4110ef:	push   esi
  4110f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f1:	mov    edx,0x70fabd41
  4110f6:	jle    0x411175
  4110f8:	xchg   esi,eax
  4110f9:	jo     0x411102
  4110fb:	mov    WORD PTR ds:[ebp-0x6ad55fd3],fs
  411102:	add    bh,dh
  411104:	pushf  
  411105:	xor    DWORD PTR ds:0xc017a499,esp
  41110b:	cmp    eax,0x5cf30549
  411110:	mov    edi,0x83278713
  411115:	aam    0x53
  411117:	sbb    dl,BYTE PTR [edx+0x79da5d95]
  41111d:	and    esp,ebx
  41111f:	xor    ebx,DWORD PTR [esp+edi*4-0x5ee7054e]
  411126:	adc    DWORD PTR [edi],ebx
  411128:	dec    ebx
  411129:	bound  eax,QWORD PTR [ecx]
  41112b:	sbb    al,0x55
  41112d:	fadd   st(5),st
  41112f:	mov    ebp,0xf9f58c50
  411134:	icebp  
  411135:	enter  0x3dd8,0xdc
  411139:	popa   
  41113a:	and    DWORD PTR [edx+0x3a],0xbf4d4a50
  411141:	inc    edi
  411142:	lock or eax,0x89b3b6aa
  411148:	mov    edi,0xead9758b
  41114d:	fs imul ebx,ebp,0xf41a5a8b
  411154:	add    al,0x82
  411156:	imul   edi,DWORD PTR [edi+0x15],0xe19b9aba
  41115d:	cmp    edx,ebp
  41115f:	pop    ebp
  411160:	xor    ebp,esi
  411162:	mov    esi,0x913077f8
  411167:	cmp    eax,0x2cec152
  41116c:	test   eax,0x8fbde1a0
  411171:	adc    eax,0xf02be24
  411176:	dec    esi
  411177:	nop
  411178:	sbb    edx,DWORD PTR [ebx]
  41117a:	ins    BYTE PTR es:[edi],dx
  41117b:	shr    DWORD PTR [eax-0x74dbf781],cl
  411181:	mov    bl,0x1a
  411183:	adc    dl,BYTE PTR ds:0xa57748d7
  411189:	push   ecx
  41118a:	sub    ch,cl
  41118c:	stc    
  41118d:	jns    0x411198
  41118f:	jo     0x41117a
  411191:	mov    ecx,0x8d18fc0c
  411196:	aam    0xc0
  411198:	jb     0x411140
  41119a:	rcr    BYTE PTR [ebx+edi*2],1
  41119d:	add    bh,0x7
  4111a0:	(bad)  
  4111a1:	popa   
  4111a2:	fistp  WORD PTR [ecx+0x62]
  4111a5:	out    dx,al
  4111a6:	data16 xor ah,BYTE PTR [ecx]
  4111a9:	into   
  4111aa:	inc    esp
  4111ab:	dec    esi
  4111ac:	pop    esi
  4111ad:	rcl    dh,0x0
  4111b0:	data16 jg 0x41116f
  4111b3:	sub    bl,BYTE PTR [eax-0x2f6b655d]
  4111b9:	pop    edx
  4111ba:	fisub  DWORD PTR [esi+0x3e080b15]
  4111c0:	push   ebx
  4111c1:	or     BYTE PTR [edi+0x52],0xd7
  4111c5:	pop    ecx
  4111c6:	xchg   ch,ch
  4111c8:	fist   DWORD PTR [edi-0x70ead744]
  4111ce:	jmp    0x966c:0xcf851350
  4111d5:	mov    ds:0xa354df73,al
  4111da:	(bad)  [eax]
  4111dc:	xor    ebx,ebx
  4111de:	rcr    BYTE PTR [ebx+0x1360242c],0x5a
  4111e5:	data16 mov dl,0xfa
  4111e8:	pop    edi
  4111e9:	loopne 0x411242
  4111eb:	sbb    eax,0x142f52e0
  4111f0:	js     0x411249
  4111f2:	out    dx,eax
  4111f3:	sbb    ebp,DWORD PTR [eax-0x215fb464]
  4111f9:	sahf   
  4111fa:	or     al,0x33
  4111fc:	ins    BYTE PTR es:[edi],dx
  4111fd:	outs   dx,DWORD PTR ds:[esi]
  4111fe:	inc    eax
  4111ff:	addr16 push eax
  411201:	push   ecx
  411202:	pop    ss
  411203:	xrstor [eax]
  411206:	leave  
  411207:	jmp    0xb949:0x518cdec3
  41120e:	shl    BYTE PTR [ebx-0x1c],cl
  411211:	xor    eax,0xb7f48a70
  411216:	sar    edx,cl
  411218:	push   ds
  411219:	sahf   
  41121a:	lods   al,BYTE PTR ds:[esi]
  41121b:	fimul  DWORD PTR ss:[edi]
  41121e:	xchg   edx,eax
  41121f:	(bad)  
  411220:	pop    esp
  411221:	xchg   esi,eax
  411222:	and    al,0x5b
  411224:	sti    
  411225:	imul   BYTE PTR [edx-0x64f7aa75]
  41122b:	outs   dx,DWORD PTR ds:[esi]
  41122c:	ror    BYTE PTR [ebx],cl
  41122e:	je     0x4111cf
  411230:	popf   
  411231:	sbb    al,0xfc
  411233:	dec    esp
  411234:	cmp    DWORD PTR [ecx-0x5c7f5e17],ebp
  41123a:	int3   
  41123b:	test   BYTE PTR [esi],ah
  41123d:	xchg   esp,eax
  41123e:	pop    esi
  41123f:	test   eax,0xefe7ce2c
  411244:	add    dl,BYTE PTR ds:0xd0af796e
  41124a:	idiv   DWORD PTR [esi]
  41124c:	jnp    0x41126e
  41124e:	mov    edi,0x28f56f69
  411253:	xor    eax,DWORD PTR [edx-0x5f]
  411256:	(bad)  [esi+0x20]
  411259:	mov    ebp,0xf89b6675
  41125e:	sub    bh,bh
  411260:	mov    edx,0x8a3b1d79
  411265:	mov    ds:0x1562ff98,al
  41126a:	pop    es
  41126b:	icebp  
  41126c:	inc    ebp
  41126d:	in     al,dx
  41126e:	inc    edx
  41126f:	pushf  
  411270:	xchg   ebx,eax
  411271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411272:	jbe    0x411203
  411274:	es inc esi
  411276:	dec    ebp
  411277:	jbe    0x4112d3
  411279:	add    DWORD PTR fs:[esi+0x4b],ebp
  41127d:	adc    al,0x5d
  41127f:	xor    al,BYTE PTR [edi-0x1d]
  411282:	daa    
  411283:	cmc    
  411284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411285:	cld    
  411286:	popf   
  411287:	lods   al,BYTE PTR ds:[esi]
  411288:	ja     0x4112b3
  41128a:	xor    esp,DWORD PTR [esi+0x60f5e145]
  411290:	shl    DWORD PTR [ecx-0x7fc8af8b],cl
  411296:	jge    0x41127e
  411298:	inc    edi
  411299:	or     eax,0xdd9b000
  41129e:	sub    DWORD PTR [ebx],ecx
  4112a0:	lea    ebp,[esi+ebp*4-0x162e0e26]
  4112a7:	xor    DWORD PTR [eax],ecx
  4112a9:	fsub   DWORD PTR [ecx+0x1d104613]
  4112af:	xor    DWORD PTR [ebp-0x70],0xc9ff9443
  4112b6:	cs pop esp
  4112b8:	xchg   ebp,eax
  4112b9:	(bad)  
  4112ba:	data16 std 
  4112bc:	cld    
  4112bd:	sbb    DWORD PTR [edx+0x48],0xffffff9b
  4112c1:	jge    0x4112d9
  4112c3:	out    dx,al
  4112c4:	lock sbb bh,BYTE PTR [ebx-0x58]
  4112c8:	daa    
  4112c9:	(bad)  
  4112ca:	ins    BYTE PTR es:[edi],dx
  4112cb:	js     0x411286
  4112cd:	add    dl,BYTE PTR [eax]
  4112cf:	inc    ebp
  4112d0:	scas   eax,DWORD PTR es:[edi]
  4112d1:	lds    ebp,FWORD PTR [edi]
  4112d3:	aaa    
  4112d4:	and    ch,dh
  4112d6:	jo     0x411281
  4112d8:	lds    edx,FWORD PTR [edx+esi*4-0x75b06c37]
  4112df:	or     BYTE PTR [ecx],cl
  4112e1:	ss dec eax
  4112e3:	jecxz  0x4112a3
  4112e5:	leave  
  4112e6:	add    ecx,0xffffffb5
  4112e9:	adc    DWORD PTR [ecx],ebx
  4112eb:	imul   edx,DWORD PTR [ecx+0x38782e83],0xffffffe6
  4112f2:	imul   edi,DWORD PTR [esi-0x779a6607],0x5f
  4112f9:	ja     0x4112e1
  4112fb:	jbe    0x4112f9
  4112fd:	dec    ebx
  4112fe:	push   es
  4112ff:	or     DWORD PTR [ecx],eax
  411301:	aas    
  411302:	mov    ah,0x78
  411304:	cmp    DWORD PTR [ebp+0x5],ebp
  411307:	inc    esp
  411308:	loope  0x4112d4
  41130a:	outs   dx,BYTE PTR ds:[esi]
  41130b:	shl    DWORD PTR [edi+0x746136e0],cl
  411311:	jmp    0x4112ad
  411313:	ins    BYTE PTR es:[edi],dx
  411314:	mov    dh,dl
  411316:	jp     0x4112a2
  411318:	popf   
  411319:	sub    DWORD PTR [edx],ebx
  41131b:	shr    DWORD PTR [ebx],1
  41131d:	mov    al,0x40
  41131f:	dec    edi
  411320:	and    bl,BYTE PTR [edi+0x2bb27d9c]
  411326:	xchg   esi,eax
  411327:	pop    es
  411328:	mov    esp,0xaee8048e
  41132d:	aam    0xb
  41132f:	sub    BYTE PTR [esi+0x32],bl
  411332:	dec    ecx
  411333:	cmp    ah,BYTE PTR [ecx+0x18]
  411336:	mov    esi,0x9cd8b2aa
  41133b:	icebp  
  41133c:	shl    BYTE PTR [esp+edx*1],1
  41133f:	and    eax,0x189fab1a
  411344:	inc    edi
  411345:	fmul   QWORD PTR [ebx]
  411347:	ja     0x4113bd
  411349:	xor    dh,cl
  41134b:	adc    eax,0x6d3c8861
  411350:	fistp  DWORD PTR ds:0xdb9dbff8
  411356:	pop    edx
  411357:	mov    bl,0x72
  411359:	ret    
  41135a:	(bad)  
  41135c:	rol    ch,1
  41135e:	push   0xffffffd1
  411360:	mov    DWORD PTR [edi-0x3],0xc12f6868
  411367:	adc    BYTE PTR [ecx-0x6d],dh
  41136a:	imul   ecx,DWORD PTR [edi],0xf99741de
  411370:	pop    ecx
  411371:	loope  0x4113f2
  411373:	into   
  411374:	sub    BYTE PTR [edi],al
  411376:	and    bh,dh
  411378:	iret   
  411379:	jge    0x41133b
  41137b:	lods   al,BYTE PTR ds:[esi]
  41137c:	cwde   
  41137d:	sbb    eax,0x3031054
  411382:	jmp    0x493a457b
  411387:	inc    eax
  411388:	mov    cl,0xdf
  41138a:	pop    edx
  41138b:	jmp    0xf3a6:0xebe06d08
  411392:	pop    eax
  411393:	pop    ds
  411394:	jno    0x41132e
  411396:	jmp    0x17626884
  41139b:	cli    
  41139c:	out    dx,eax
  41139d:	xor    al,BYTE PTR [edx+ebx*1-0xe2784ee]
  4113a4:	mov    ds:0x2b2bd651,eax
  4113a9:	imul   ecx,DWORD PTR [ebx+0x42775450],0x2
  4113b0:	test   al,al
  4113b2:	xor    BYTE PTR [eax-0x68],cl
  4113b5:	xchg   edi,eax
  4113b6:	or     dl,dl
  4113b8:	pop    es
  4113b9:	cdq    
  4113ba:	aam    0xc
  4113bc:	add    eax,0xa7a2684c
  4113c1:	xor    ebx,esp
  4113c3:	adc    ah,BYTE PTR [esi]
  4113c5:	es xchg edi,eax
  4113c7:	cmp    eax,0x63b0b5d9
  4113cc:	test   ecx,edx
  4113ce:	data16 fwait
  4113d0:	inc    edi
  4113d1:	add    DWORD PTR [edi],edx
  4113d3:	add    eax,0x96a32387
  4113d8:	sbb    eax,0x5c08a978
  4113dd:	inc    edx
  4113de:	xlat   BYTE PTR ds:[ebx]
  4113df:	or     al,0x89
  4113e1:	or     al,0x6e
  4113e3:	push   0xffffff91
  4113e5:	addr16 jp 0x4113e0
  4113e8:	sbb    ebp,DWORD PTR es:[ebx-0x2fb97672]
  4113ef:	push   ebx
  4113f0:	mov    ecx,0xc71dc7f0
  4113f5:	sahf   
  4113f6:	mov    BYTE PTR [esi+0x7f],0x9b
  4113fa:	sbb    ebp,DWORD PTR [ebx-0x5c]
  4113fd:	adc    al,dl
  4113ff:	pop    esp
  411400:	jns    0x41144c
  411402:	out    dx,al
  411403:	xor    eax,0xe32d9830
  411408:	in     al,dx
  411409:	mov    edx,0x96cc42fe
  41140e:	xchg   esi,eax
  41140f:	push   esi
  411410:	jne    0x4113d5
  411412:	cmp    DWORD PTR [edx-0x74],edi
  411415:	adc    edi,0xba966411
  41141b:	pop    edx
  41141c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41141d:	mul    ebp
  41141f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411420:	pop    eax
  411421:	mov    ch,BYTE PTR [edx+0x7a99bb66]
  411427:	dec    ecx
  411428:	pop    ebp
  411429:	mov    WORD PTR [ebx+edx*4+0x76a1aaa6],gs
  411430:	adc    ecx,edi
  411432:	pushf  
  411433:	int3   
  411434:	push   0x33
  411436:	jge    0x41147a
  411438:	sbb    dh,bh
  41143a:	test   al,0x6c
  41143c:	or     BYTE PTR [ebp+0x21f6f950],ah
  411442:	scas   eax,DWORD PTR es:[edi]
  411443:	sub    dh,ah
  411445:	fdivr  QWORD PTR [eax]
  411447:	mov    BYTE PTR [ebx-0x557d9a6a],dl
  41144d:	push   ss
  41144e:	sub    eax,0xda8648d9
  411453:	dec    edi
  411454:	inc    esi
  411455:	xor    al,0xd0
  411457:	in     al,dx
  411458:	sub    BYTE PTR [eax+0x18],bh
  41145b:	scas   eax,DWORD PTR es:[edi]
  41145c:	inc    ecx
  41145d:	mov    ecx,0xe10d9c20
  411462:	loope  0x4113e5
  411464:	xlat   BYTE PTR ds:[ebx]
  411465:	or     al,0xe
  411467:	pop    edx
  411468:	xlat   BYTE PTR ds:[ebx]
  411469:	and    DWORD PTR [edi],edi
  41146b:	not    DWORD PTR [edi+0x7c]
  41146e:	test   al,ah
  411470:	pusha  
  411471:	scas   eax,DWORD PTR es:[edi]
  411472:	bound  esp,QWORD PTR [edx+0x39a5642c]
  411478:	add    cl,BYTE PTR [edi+0x60]
  41147b:	add    DWORD PTR [edx+0x75bede74],ebp
  411481:	cwde   
  411482:	out    0x72,eax
  411484:	mov    ebp,0x4e4af417
  411489:	stos   BYTE PTR es:[edi],al
  41148a:	dec    edx
  41148b:	pop    edx
  41148c:	and    eax,0xacd11c68
  411491:	mov    esi,0x2b6f629b
  411496:	mov    BYTE PTR [eax-0x3],dh
  411499:	xchg   esi,eax
  41149a:	mov    ds:0x579db71b,eax
  41149f:	js     0x41149f
  4114a1:	mov    bl,0xf4
  4114a3:	mov    edi,0xb2756475
  4114a8:	inc    ebx
  4114a9:	mov    bl,ch
  4114ab:	mov    al,0x6b
  4114ad:	jecxz  0x4114bb
  4114af:	xchg   ebx,eax
  4114b0:	fs jb  0x411478
  4114b3:	or     ah,bl
  4114b5:	sub    eax,0x36bca52f
  4114ba:	jne    0x411463
  4114bc:	fmul   QWORD PTR [ebx-0x69]
  4114bf:	inc    ecx
  4114c0:	pop    esp
  4114c1:	ss mov bh,0x55
  4114c4:	stos   DWORD PTR es:[edi],eax
  4114c5:	add    eax,0x761e94c0
  4114ca:	inc    ebx
  4114cb:	inc    edx
  4114cc:	dec    ebx
  4114cd:	add    BYTE PTR [esi+0x3e8eef58],dl
  4114d3:	adc    al,bl
  4114d5:	xor    eax,0x414c8911
  4114da:	dec    ebx
  4114db:	nop
  4114dc:	pop    ecx
  4114dd:	outs   dx,BYTE PTR ds:[esi]
  4114de:	mov    bh,0x5e
  4114e0:	fisubr DWORD PTR [edi]
  4114e2:	sub    BYTE PTR [ecx],bl
  4114e4:	adc    esp,DWORD PTR [ecx-0x4675d34e]
  4114ea:	arpl   WORD PTR [esi],di
  4114ec:	scas   eax,DWORD PTR es:[edi]
  4114ed:	ins    DWORD PTR es:[edi],dx
  4114ee:	clc    
  4114ef:	ins    BYTE PTR es:[edi],dx
  4114f0:	dec    ebp
  4114f1:	out    dx,al
  4114f2:	pop    ds
  4114f3:	imul   ecx,ebx,0x3b
  4114f6:	cmp    eax,0x57836ecf
  4114fb:	add    al,0x7e
  4114fd:	(bad)  
  4114fe:	hlt    
  4114ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411500:	cmc    
  411501:	adc    ch,BYTE PTR [ebx]
  411503:	mov    ecx,eax
  411505:	pushf  
  411506:	sub    edi,DWORD PTR [edx-0x58]
  411509:	(bad)  
  41150a:	sub    eax,0x4c790487
  41150f:	add    DWORD PTR [ecx-0x65f89c45],0x70
  411516:	xor    al,0xf5
  411518:	mov    edi,ebx
  41151a:	icebp  
  41151b:	push   eax
  41151c:	sub    al,0x31
  41151e:	xchg   esp,eax
  41151f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411520:	out    dx,eax
  411521:	std    
  411522:	xor    esi,DWORD PTR [esi+ecx*4-0x17]
  411526:	loopne 0x4114c8
  411528:	ins    DWORD PTR es:[di],dx
  41152a:	test   eax,0x55aacb98
  41152f:	fcmovnu st,st(4)
  411531:	inc    ebp
  411532:	jnp    0x411552
  411534:	sub    DWORD PTR [edx],edx
  411536:	push   esi
  411537:	inc    ebp
  411538:	in     eax,dx
  411539:	clc    
  41153a:	jnp    0x4114d8
  41153c:	in     eax,dx
  41153d:	push   ebp
  41153e:	imul   ecx,DWORD PTR [esi],0xc
  411541:	pop    es
  411542:	jmp    0x411510
  411544:	or     cl,dh
  411546:	push   esi
  411547:	pusha  
  411548:	add    edx,DWORD PTR [ecx+0x73]
  41154b:	cwde   
  41154c:	xchg   ebx,eax
  41154d:	add    ebx,DWORD PTR [edx-0x55fd9a28]
  411553:	jl     0x411565
  411555:	daa    
  411556:	icebp  
  411557:	xlat   BYTE PTR ds:[ebx]
  411558:	(bad)  
  41155a:	inc    ecx
  41155b:	mov    esi,0xc7e7e34f
  411560:	jae    0x41154d
  411562:	jl     0x411590
  411564:	pushf  
  411565:	pushf  
  411566:	xchg   esi,eax
  411567:	mov    ch,0x67
  411569:	in     al,0x4c
  41156b:	add    DWORD PTR [ecx+0x5b],ecx
  41156e:	push   edx
  41156f:	xchg   DWORD PTR [ebx],esi
  411571:	and    ah,0x5c
  411574:	daa    
  411575:	sbb    al,0xe9
  411577:	add    esi,DWORD PTR [eax+0x2d]
  41157a:	sbb    cl,al
  41157c:	nop
  41157d:	mov    esi,0xa77e8f15
  411582:	cld    
  411583:	test   DWORD PTR [ebp-0x5],esp
  411586:	in     eax,0x61
  411588:	jge    0x41150e
  41158a:	pop    ds
  41158b:	add    eax,0x2c0a1ef2
  411590:	jo     0x4115d1
  411592:	dec    ebx
  411593:	pop    edi
  411594:	and    ch,BYTE PTR [ebx]
  411596:	inc    edx
  411597:	dec    esi
  411598:	dec    ecx
  41159a:	or     al,0xa
  41159c:	push   eax
  41159d:	and    DWORD PTR [esi+0x62736f7d],ecx
  4115a3:	repz jns 0x41157b
  4115a6:	xor    al,BYTE PTR [esi-0x4a]
  4115a9:	inc    ecx
  4115aa:	(bad)  
  4115ac:	push   cs
  4115ad:	bound  esi,QWORD PTR [edx+ebp*4]
  4115b0:	mov    DWORD PTR [eax-0x313eefda],0xc76db101
  4115ba:	add    al,0xc8
  4115bc:	pop    esp
  4115bd:	sub    ah,BYTE PTR [edx]
  4115bf:	call   0xdeb9e8a5
  4115c4:	pop    ecx
  4115c5:	xchg   ebx,eax
  4115c6:	les    esp,FWORD PTR [ebx]
  4115c8:	stc    
  4115c9:	pop    eax
  4115ca:	push   eax
  4115cb:	and    BYTE PTR [esi+0x5b],0x6a
  4115cf:	jae    0x4115a5
  4115d1:	pushf  
  4115d2:	daa    
  4115d3:	pusha  
  4115d4:	aam    0x6c
  4115d6:	jmp    0x411642
  4115d8:	leave  
  4115d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115da:	inc    esi
  4115db:	fsub   QWORD PTR [edx+0x7e]
  4115de:	xchg   esp,eax
  4115df:	pop    esi
  4115e0:	sub    ecx,DWORD PTR [edx+0x75]
  4115e3:	pop    ss
  4115e4:	mov    bh,0x62
  4115e6:	xor    BYTE PTR [ebp-0x2e17d267],dl
  4115ec:	adc    ch,BYTE PTR [eax-0x48]
  4115ef:	jnp    0x4115b1
  4115f1:	sub    DWORD PTR [eax],ebp
  4115f3:	inc    BYTE PTR [esi+0x72849e36]
  4115f9:	xor    BYTE PTR [esi+0x49e66208],ah
  4115ff:	fdivr  DWORD PTR [esp+edx*1-0x6c]
  411603:	cli    
  411604:	std    
  411605:	fdivr  st(6),st
  411607:	ret    0xd123
  41160a:	aaa    
  41160b:	clc    
  41160c:	and    esp,DWORD PTR [ebx]
  41160e:	test   al,0x68
  411610:	pop    ss
  411611:	mov    esp,0xe8d1aa71
  411616:	dec    ebp
  411617:	pop    ecx
  411618:	in     al,dx
  411619:	jmp    0x48fd:0x8d801f9d
  411620:	or     eax,0x83ad40ca
  411625:	add    bh,BYTE PTR [eax+ebx*2+0x12]
  411629:	jl     0x411626
  41162b:	iret   
  41162c:	or     edi,0x2f
  41162f:	pop    es
  411630:	sub    DWORD PTR [ecx],edi
  411632:	and    esi,esi
  411634:	bound  esp,QWORD PTR [eax+0x16b792a5]
  41163a:	inc    eax
  41163b:	data16 jl 0x4115dc
  41163e:	outs   dx,BYTE PTR ds:[esi]
  41163f:	sbb    DWORD PTR [ebp-0x53],eax
  411642:	adc    eax,0xc1d8a0e7
  411647:	test   BYTE PTR [eax+0x57bf64e2],bh
  41164d:	jmp    0x4115e6
  41164f:	jbe    0x4116c5
  411651:	es push ecx
  411653:	mov    ebp,0x1061068
  411658:	jne    0x411632
  41165a:	adc    eax,0xebd004af
  41165f:	adc    al,0xc1
  411661:	dec    edi
  411662:	stos   DWORD PTR es:[edi],eax
  411663:	lock mov edi,esp
  411666:	cld    
  411667:	adc    DWORD PTR [ebx],edi
  411669:	lahf   
  41166a:	add    BYTE PTR ds:0xca6e7035,cl
  411670:	push   cs
  411671:	adc    cl,bh
  411673:	push   edi
  411674:	sbb    eax,0xbd9e5bd6
  411679:	and    eax,0xf6228706
  41167e:	mov    ecx,0xbc777e29
  411683:	pop    esi
  411684:	retf   
  411685:	call   0xe622:0x490f5ed1
  41168c:	xchg   DWORD PTR [eax-0x5efd6061],ebx
  411692:	or     BYTE PTR ds:0x17285e3a,dh
  411698:	es in  eax,0x0
  41169b:	sub    cl,BYTE PTR [ebx+0x2561dfb6]
  4116a1:	data16 sahf 
  4116a3:	xchg   BYTE PTR ds:0xbd49f2cf,dl
  4116a9:	push   edi
  4116aa:	fsub   DWORD PTR [ecx+0xd]
  4116ad:	mov    eax,0x91b81646
  4116b2:	loopne 0x41165f
  4116b4:	out    dx,eax
  4116b5:	or     eax,DWORD PTR [ecx]
  4116b7:	inc    edi
  4116b8:	mov    ebp,0x17aefc67
  4116bd:	int3   
  4116be:	push   ss
  4116bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c0:	call   0xf0a0:0x8edf5b7c
  4116c7:	pop    edi
  4116c8:	sub    al,0x86
  4116ca:	pop    ebx
  4116cb:	test   BYTE PTR [edi-0x37ad0f34],0xa4
  4116d2:	ja     0x411697
  4116d4:	(bad)  [ebx]
  4116d6:	loopne 0x4116e5
  4116d8:	in     al,dx
  4116d9:	int3   
  4116da:	pop    esp
  4116db:	sub    BYTE PTR [edx-0x6c],dl
  4116de:	or     DWORD PTR [ebp+0x64],ecx
  4116e1:	mov    bl,0x51
  4116e3:	cwd    
  4116e5:	xchg   esi,eax
  4116e6:	sbb    ebx,ebx
  4116e8:	jno    0x411726
  4116ea:	mov    ebp,0x6deb87
  4116ef:	sub    eax,0xcf08dd35
  4116f4:	out    0x54,eax
  4116f6:	jbe    0x41167c
  4116f8:	push   DWORD PTR [ebx+0x62]
  4116fb:	pop    ds
  4116fc:	pushf  
  4116fd:	xchg   ebp,eax
  4116fe:	fcmovb st,st(0)
  411700:	push   ecx
  411701:	out    0xc7,al
  411703:	add    edx,0x36
  411706:	aad    0x69
  411708:	test   DWORD PTR [edx+0x61],edx
  41170b:	add    eax,0x37f5927a
  411710:	and    al,0xc4
  411712:	outs   dx,BYTE PTR ds:[esi]
  411713:	jge    0x41177c
  411715:	aad    0x24
  411717:	jbe    0x41177d
  411719:	sbb    edi,esi
  41171b:	vmaxss xmm0,xmm5,DWORD PTR [esi+0x58]
  411720:	inc    esi
  411721:	or     al,0xbf
  411723:	cwde   
  411724:	lods   eax,DWORD PTR ds:[esi]
  411725:	jns    0x41171c
  411727:	inc    esi
  411728:	mov    ebx,0xf8a49835
  41172d:	or     WORD PTR [esi+0x483259a1],dx
  411734:	mov    ch,0x99
  411736:	sahf   
  411737:	std    
  411738:	daa    
  411739:	jnp    0x4116f0
  41173b:	adc    al,0xe
  41173d:	daa    
  41173e:	retf   0xf8e3
  411741:	xchg   esi,eax
  411742:	ins    BYTE PTR es:[edi],dx
  411743:	sub    DWORD PTR [eax-0x77304e92],edi
  411749:	pop    ss
  41174a:	sbb    DWORD PTR [ebx-0x15],esp
  41174d:	fcom   DWORD PTR [edi+0x1d79f319]
  411753:	cmp    al,BYTE PTR [ebp-0x59]
  411756:	sbb    BYTE PTR [edx+0xd8d44ac],0x1d
  41175d:	mov    eax,0x6623db07
  411762:	xchg   edx,eax
  411763:	setns  BYTE PTR [ebx]
  411766:	out    0xfa,al
  411768:	lods   eax,DWORD PTR ds:[esi]
  411769:	mov    ah,0x79
  41176b:	pop    eax
  41176c:	(bad)
  41176f:	int3   
  411770:	add    eax,0x63abf2f3
  411775:	dec    esp
  411776:	js     0x4117e5
  411778:	dec    ecx
  41177a:	jbe    0x4117ef
  41177c:	and    al,0x82
  41177e:	mov    ds:0x53a2dd86,eax
  411783:	and    esi,edi
  411785:	inc    esp
  411786:	push   edx
  411787:	mov    BYTE PTR [esi],cl
  411789:	std    
  41178a:	daa    
  41178b:	mov    edi,0x66c5748e
  411790:	iret   
  411791:	lds    ecx,FWORD PTR [ebp+0x16d69ced]
  411797:	pop    esi
  411798:	arpl   WORD PTR [esi-0x6b000898],bp
  41179e:	jns    0x4117c9
  4117a0:	add    DWORD PTR [ebx-0x479b0173],esi
  4117a6:	fimul  WORD PTR [eax+0x653e6255]
  4117ac:	push   ebx
  4117ad:	retf   0x2d6f
  4117b0:	cmc    
  4117b1:	ror    BYTE PTR [ebx+0x52b9efbf],0x1e
  4117b8:	inc    ebx
  4117b9:	in     al,dx
  4117ba:	mov    edi,0x82b365a6
  4117bf:	mov    bl,0xac
  4117c1:	int    0xc8
  4117c3:	std    
  4117c4:	mov    DWORD PTR [eax+eiz*4],ebx
  4117c7:	cmp    al,0x77
  4117c9:	popf   
  4117ca:	dec    eax
  4117cb:	stc    
  4117cc:	pop    edx
  4117cd:	xchg   ecx,eax
  4117ce:	add    DWORD PTR [ecx+ebp*8],ebx
  4117d1:	aaa    
  4117d2:	retf   0x7aff
  4117d5:	ins    DWORD PTR es:[edi],dx
  4117d6:	jg     0x411795
  4117d8:	pushf  
  4117d9:	jg     0x4117b4
  4117db:	xchg   ebp,eax
  4117dc:	repnz fld DWORD PTR [ebp+0x3c]
  4117e0:	cmp    DWORD PTR [ebx-0x56],edi
  4117e3:	pop    es
  4117e4:	aas    
  4117e5:	jmp    0x411840
  4117e7:	nop
  4117e8:	jno    0x41183d
  4117ea:	inc    edi
  4117eb:	sub    al,0xe8
  4117ed:	sub    eax,0x86a81c07
  4117f2:	add    BYTE PTR [edx-0x4c552564],ch
  4117f8:	mov    al,ds:0xd230330b
  4117fd:	xlat   BYTE PTR ds:[ebx]
  4117fe:	cmp    ebp,esp
  411800:	sbb    esi,DWORD PTR [edx+ecx*8+0x1bb6b7b7]
  411807:	inc    ebx
  411808:	sub    BYTE PTR [edi+0x4c],dh
  41180b:	mov    ecx,0x180a85ce
  411810:	test   al,0x49
  411812:	and    eax,0x47240243
  411817:	out    dx,eax
  411818:	pop    eax
  411819:	jae    0x4117c3
  41181b:	push   esi
  41181c:	fisub  WORD PTR [esi]
  41181e:	scas   eax,DWORD PTR es:[edi]
  41181f:	mov    edx,0x3f7b0692
  411824:	add    eax,0x61a5bc78
  411829:	or     dl,BYTE PTR [ecx+esi*4]
  41182c:	cld    
  41182d:	mov    cl,0xe4
  41182f:	icebp  
  411830:	fwait
  411831:	repnz rcl DWORD PTR [edx+0x7],1
  411835:	mov    cl,0x97
  411837:	stos   BYTE PTR es:[edi],al
  411838:	mov    cl,0xc0
  41183a:	fcomp  QWORD PTR [eax-0x38]
  41183d:	dec    esi
  41183e:	lds    edi,FWORD PTR [ebp+0x3d401f69]
  411844:	into   
  411845:	icebp  
  411846:	je     0x411884
  41184c:	jmp    0x411875
  411851:	mov    eax,DWORD PTR [ebp-0x4]
  411854:	mov    ecx,DWORD PTR [ebp-0x8]
  411857:	xor    eax,esi
  411859:	add    eax,edi
  41185b:	cmp    ecx,eax
  41185d:	mov    eax,DWORD PTR [ebp-0x4]
  411860:	je     0x4118bf
  411866:	mov    ecx,DWORD PTR [ebp-0x30]
  411869:	xor    eax,esi
  41186b:	add    eax,edi
  41186d:	cmp    ecx,eax
  41186f:	je     0x4118c8
  411875:	lea    eax,[ebp-0x8]
  411878:	push   eax
  411879:	push   DWORD PTR [ebp-0x28]
  41187c:	push   DWORD PTR [ebp+0xc]
  41187f:	call   0x416204
  411884:	mov    eax,DWORD PTR [ebp-0x4]
  411887:	mov    ecx,DWORD PTR [ebp-0x8]
  41188a:	xor    eax,esi
  41188c:	add    eax,edi
  41188e:	cmp    ecx,eax
  411890:	je     0x4118ab
  411896:	mov    eax,DWORD PTR [ebp-0x34]
  411899:	movzx  eax,WORD PTR [eax+ebx*2]
  41189d:	mov    ecx,DWORD PTR [ebp-0x14]
  4118a0:	mov    eax,DWORD PTR [ecx+eax*4]
  4118a3:	mov    DWORD PTR [ebp-0x38],eax
  4118a6:	jmp    0x411851
  4118ab:	mov    eax,DWORD PTR [ebp-0xc]
  4118ae:	xor    eax,esi
  4118b0:	lea    ebx,[ebx+eax*1+0x3272ec]
  4118b7:	jmp    0x40f134
  4118bc:	mov    eax,DWORD PTR [ebp-0x4]
  4118bf:	xor    eax,esi
  4118c1:	add    eax,edi
  4118c3:	jmp    0x416111
  4118c8:	mov    eax,DWORD PTR [ebp-0x38]
  4118cb:	add    eax,DWORD PTR [ebp+0x8]
  4118ce:	mov    DWORD PTR [ebp-0x18],eax
  4118d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4118d4:	test   eax,eax
  4118d6:	jmp    0x413c6c
  4118db:	js     0x411873
  4118dd:	jno    0x411933
  4118df:	arpl   WORD PTR [edi+0x68fe867b],dx
  4118e5:	test   DWORD PTR [ebp-0x54b4057c],ebx
  4118eb:	dec    ecx
  4118ec:	cmp    DWORD PTR [edx+0x7a],0x5
  4118f0:	pop    edi
  4118f1:	jp     0x41196d
  4118f3:	leave  
  4118f4:	xchg   ecx,eax
  4118f5:	mov    ebx,ss
  4118f7:	add    BYTE PTR [esi-0x773201bc],cl
  4118fd:	fs pushf 
  4118ff:	xchg   ebx,eax
  411900:	dec    ecx
  411901:	sub    edx,DWORD PTR [ebx-0x35bf1d93]
  411907:	mov    ecx,0xcde8da7a
  41190c:	or     DWORD PTR [edi],esi
  41190e:	lds    esi,FWORD PTR [ebx]
  411910:	inc    esi
  411911:	push   0x0
  411913:	add    DWORD PTR [ecx],esi
  411915:	or     eax,0xdce7f63d
  41191a:	and    esp,DWORD PTR [ebx-0x3ac2bdd2]
  411920:	sbb    BYTE PTR [ecx+edx*1+0x1e],ch
  411924:	push   ebp
  411925:	stc    
  411926:	in     eax,0x15
  411928:	mov    eax,ds:0xb756dbe6
  41192d:	sar    BYTE PTR [esi+0x64a94fdf],1
  411933:	xchg   ebp,eax
  411934:	ins    DWORD PTR es:[edi],dx
  411935:	or     BYTE PTR [edx],dl
  411937:	rcr    ebp,0xd3
  41193a:	ret    
  41193b:	sub    al,BYTE PTR [eax-0x24]
  41193e:	aam    0xe2
  411940:	adc    BYTE PTR [edi+0x18b385f4],ch
  411946:	inc    ebx
  411947:	cs or  eax,0xd970c0f6
  41194d:	aaa    
  41194e:	ror    BYTE PTR ds:0xe7ea334c,1
  411954:	or     ebx,DWORD PTR es:[edx-0x2cb54822]
  41195b:	stos   BYTE PTR es:[edi],al
  41195c:	enter  0x9bb1,0x27
  411960:	cmp    al,BYTE PTR [eax+ecx*1-0x65c78c2]
  411967:	xchg   ecx,eax
  411968:	mov    ?,ebx
  41196a:	push   ebx
  41196b:	adc    al,0xa7
  41196d:	add    DWORD PTR [ecx+ebp*2+0x308097d1],esp
  411974:	inc    eax
  411975:	or     al,0x47
  411977:	jecxz  0x4119e7
  411979:	fs pusha 
  41197b:	push   edx
  41197c:	retf   0x7a3f
  41197f:	xor    edx,DWORD PTR [edx-0x597df286]
  411985:	in     al,0x16
  411987:	int    0x83
  411989:	mov    edi,0x96476856
  41198e:	cmc    
  41198f:	push   cs
  411990:	test   BYTE PTR [edi+edi*1],bh
  411993:	push   ecx
  411994:	repnz test DWORD PTR [eax+eax*1],ecx
  411998:	push   eax
  411999:	xlat   BYTE PTR ds:[ebx]
  41199a:	jno    0x411943
  41199c:	mov    eax,0x394807b2
  4119a1:	xchg   DWORD PTR [edx],edx
  4119a3:	mov    al,ds:0x901ba6b0
  4119a8:	fld    DWORD PTR [edi-0x412f604e]
  4119ae:	addr16 pop ss
  4119b0:	ret    
  4119b1:	repnz inc edx
  4119b3:	aas    
  4119b4:	push   esp
  4119b5:	jae    0x411a17
  4119b7:	adc    eax,0x67c66f88
  4119bc:	aas    
  4119bd:	add    dl,ch
  4119bf:	push   0xa9b23a5b
  4119c4:	add    edx,DWORD PTR [ebp+0x4e05f8d0]
  4119ca:	sub    BYTE PTR [esp+edx*4-0x592c0900],al
  4119d1:	das    
  4119d2:	mov    dh,0x3a
  4119d4:	cwde   
  4119d5:	xchg   ebp,eax
  4119d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d7:	xor    bh,BYTE PTR [ebp+0x43b4d0c6]
  4119dd:	neg    BYTE PTR [ecx+0x69e03b3a]
  4119e3:	push   eax
  4119e4:	out    dx,al
  4119e5:	dec    ecx
  4119e6:	adc    bl,0xd
  4119e9:	mov    al,0x56
  4119eb:	pop    ebp
  4119ec:	push   esp
  4119ed:	push   ebx
  4119ee:	cwde   
  4119ef:	dec    eax
  4119f0:	in     al,dx
  4119f1:	ret    
  4119f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f3:	test   eax,eax
  4119f5:	mov    WORD PTR [ebx-0x79],?
  4119f8:	ins    DWORD PTR es:[edi],dx
  4119f9:	xlat   BYTE PTR ds:[ebx]
  4119fa:	sub    DWORD PTR [eiz*1-0x5a79980],0x5
  411a02:	mov    cl,bl
  411a04:	aas    
  411a05:	fimul  DWORD PTR [edi+ecx*8+0x29]
  411a09:	inc    ebp
  411a0a:	cmc    
  411a0b:	push   esi
  411a0c:	mov    dl,0x3c
  411a0e:	in     eax,0x43
  411a10:	(bad)  
  411a11:	mov    bh,0xe1
  411a13:	sub    eax,0x40151793
  411a18:	mov    ecx,0xfdc11f4d
  411a1d:	dec    ebp
  411a1e:	mov    ds:0x90cc15a,al
  411a23:	fdivr  DWORD PTR [edx+edx*2]
  411a26:	je     0x411a9a
  411a28:	ret    0xfe57
  411a2b:	ja     0x411a53
  411a2d:	and    DWORD PTR [edx+0x52],ebx
  411a30:	scas   eax,DWORD PTR es:[edi]
  411a31:	fpatan 
  411a33:	pop    esi
  411a34:	jb     0x411a27
  411a36:	shr    edx,0x7f
  411a39:	add    DWORD PTR [edi-0x28],ebp
  411a3c:	pop    ss
  411a3d:	imul   esp,DWORD PTR ds:0x875f461,0xab1956d7
  411a47:	addr16 dec edx
  411a49:	stc    
  411a4a:	jmp    0x1cfd7e61
  411a4f:	sub    eax,0x5015f863
  411a54:	sub    eax,0xd189bd3a
  411a59:	push   edx
  411a5a:	out    0xd6,eax
  411a5c:	leave  
  411a5d:	adc    DWORD PTR [esi],edi
  411a5f:	fisttp QWORD PTR [edi]
  411a61:	sbb    ah,ah
  411a63:	nop
  411a64:	sub    eax,0x58db0c5c
  411a69:	cld    
  411a6a:	es test eax,0x2b6008a3
  411a70:	adc    ecx,ebp
  411a72:	dec    ebx
  411a73:	clc    
  411a74:	jg     0x411aec
  411a76:	push   ebx
  411a77:	out    dx,al
  411a78:	stc    
  411a79:	xchg   edx,eax
  411a7a:	sti    
  411a7b:	sub    DWORD PTR [ebp-0x45f4e982],ebx
  411a81:	and    esi,DWORD PTR [edi-0x75]
  411a84:	push   ds
  411a85:	and    BYTE PTR [eax-0x597495a9],ah
  411a8b:	pusha  
  411a8c:	adc    dl,0x82
  411a8f:	dec    esp
  411a90:	dec    esi
  411a91:	mov    ebx,0x656f6fd8
  411a96:	loopne 0x411afe
  411a98:	add    ah,cl
  411a9a:	ds sbb BYTE PTR cs:[ecx],ah
  411a9e:	xor    DWORD PTR [esi+0x2f],edi
  411aa1:	adc    ch,BYTE PTR [eax+0x8cd3c47]
  411aa7:	sub    DWORD PTR [edx-0x54],eax
  411aaa:	cs pop ebp
  411aac:	pusha  
  411aad:	(bad)  
  411aae:	mov    dh,0x52
  411ab0:	test   BYTE PTR [edx],al
  411ab2:	dec    esp
  411ab3:	dec    edx
  411ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab5:	call   0xe432736e
  411aba:	and    eax,0x1b665dbd
  411abf:	or     bh,BYTE PTR [ecx+0x625333be]
  411ac5:	mov    BYTE PTR [ecx],0xad
  411ac8:	and    al,0x18
  411aca:	ja     0x411aca
  411acc:	loopne 0x411a87
  411ace:	fadd   DWORD PTR [ebx+ebp*1+0x46]
  411ad2:	jmp    0x411ad2
  411ad4:	sbb    DWORD PTR [eax-0xa857f35],ebx
  411ada:	dec    ebx
  411adb:	fist   DWORD PTR [edx]
  411add:	lods   al,BYTE PTR ds:[esi]
  411ade:	arpl   di,bx
  411ae0:	les    ecx,FWORD PTR [edx]
  411ae2:	fwait
  411ae3:	push   ebx
  411ae4:	in     al,0x5d
  411ae6:	push   cs
  411ae7:	sahf   
  411ae8:	mov    cl,0xb8
  411aea:	inc    esi
  411aeb:	xor    al,0x95
  411aed:	xchg   esp,eax
  411aee:	mov    ch,0xa6
  411af0:	shl    BYTE PTR [edx+0x42],0xa7
  411af4:	fldenv ds:0x148da6c4
  411afa:	jmp    0x411b72
  411afc:	jg     0x411b10
  411afe:	dec    edi
  411aff:	push   esi
  411b00:	sub    ecx,DWORD PTR [esi-0x6a53d469]
  411b06:	das    
  411b07:	cmp    al,0x86
  411b09:	jns    0x411abf
  411b0b:	(bad)  
  411b0c:	ret    
  411b0d:	int3   
  411b0e:	(bad)  
  411b0f:	data16 mov ah,0xb7
  411b12:	int    0x89
  411b14:	call   0x5f2:0xd42807f
  411b1b:	dec    ebx
  411b1c:	jecxz  0x411ad2
  411b1e:	hlt    
  411b1f:	push   cs
  411b20:	jl     0x411ab9
  411b22:	je     0x411aa4
  411b24:	or     eax,0xd8b5a3da
  411b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b2a:	sbb    BYTE PTR [eax+ebx*2],0x12
  411b2e:	shr    BYTE PTR [edx],1
  411b30:	aas    
  411b31:	xor    al,0x30
  411b33:	bound  ebp,QWORD PTR [esi]
  411b35:	call   0x9fc7:0x95eab477
  411b3c:	inc    ebp
  411b3d:	cmp    DWORD PTR [edx-0x664c9bbf],0xe1d47e37
  411b47:	add    edx,DWORD PTR [eax]
  411b49:	jno    0x411b67
  411b4b:	lods   al,BYTE PTR ds:[esi]
  411b4c:	and    BYTE PTR [edx+0x10e4d278],ch
  411b52:	loop   0x411ad5
  411b54:	jns    0x411b73
  411b56:	sbb    ebp,ecx
  411b58:	cs xchg dh,ch
  411b5b:	loop   0x411b03
  411b5d:	sbb    cl,cl
  411b5f:	int    0x71
  411b61:	aaa    
  411b62:	and    bh,BYTE PTR [edi]
  411b64:	mov    ecx,0xc82b9cbf
  411b69:	inc    ebp
  411b6a:	into   
  411b6b:	mov    edx,0xed674131
  411b70:	fwait
  411b71:	adc    eax,0xcec22753
  411b76:	jo     0x411b85
  411b78:	test   BYTE PTR [eax],0x84
  411b7b:	push   cs
  411b7c:	xor    eax,ecx
  411b7e:	sar    DWORD PTR [edi-0x55],1
  411b81:	adc    al,0x3f
  411b83:	(bad)  
  411b84:	fdiv   DWORD PTR [edi+0x22e50ab0]
  411b8a:	inc    ebx
  411b8b:	in     eax,0x12
  411b8d:	jns    0x411b57
  411b8f:	outs   dx,BYTE PTR ds:[esi]
  411b90:	ret    0xfe0c
  411b93:	xchg   edi,eax
  411b94:	pop    edx
  411b95:	cmp    eax,DWORD PTR gs:[edx]
  411b98:	push   ebx
  411b99:	mov    ebp,0x81e7a671
  411b9e:	arpl   bx,dx
  411ba0:	mov    ah,cl
  411ba2:	xchg   DWORD PTR ds:0xd110d69d,ebx
  411ba8:	dec    edi
  411ba9:	stc    
  411baa:	pusha  
  411bab:	cmp    DWORD PTR [edx-0x32],esp
  411bae:	add    DWORD PTR [esi+ebx*4+0x31816a23],eax
  411bb5:	or     DWORD PTR [ebp-0x177f680b],edx
  411bbb:	gs ds fwait
  411bbe:	stc    
  411bbf:	aam    0x97
  411bc1:	mov    bh,0xf7
  411bc3:	stos   BYTE PTR es:[edi],al
  411bc4:	jl     0x411bb3
  411bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc7:	adc    ebx,DWORD PTR [edx-0x3c]
  411bca:	jb     0x411c03
  411bcc:	inc    edi
  411bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bce:	dec    ebx
  411bcf:	jecxz  0x411c0b
  411bd1:	inc    ecx
  411bd2:	sbb    bh,ch
  411bd4:	mov    edx,0x4e079ec7
  411bd9:	dec    eax
  411bda:	outs   dx,DWORD PTR ds:[esi]
  411bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bdc:	mov    edx,0x2fe4153b
  411be1:	adc    esp,DWORD PTR [esi]
  411be3:	jo     0x411b98
  411be5:	jns    0x411b6b
  411be7:	xchg   ebx,eax
  411be8:	pop    ds
  411be9:	push   ecx
  411bea:	and    BYTE PTR [eax-0x4164db74],dh
  411bf0:	js     0x411c08
  411bf2:	push   eax
  411bf3:	push   esi
  411bf4:	cdq    
  411bf5:	test   al,0x28
  411bf7:	xor    ah,BYTE PTR [eax+ebx*8-0x73bc0128]
  411bfe:	inc    edi
  411bff:	jae    0x411c20
  411c01:	push   ecx
  411c02:	push   edx
  411c03:	mov    al,BYTE PTR [ecx]
  411c05:	mov    esp,0x2e934644
  411c0a:	push   ss
  411c0b:	jnp    0x411bc5
  411c0d:	ror    cl,1
  411c0f:	iret   
  411c10:	jge    0x411c4c
  411c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c13:	xor    al,0x9c
  411c15:	retf   
  411c16:	inc    esp
  411c17:	fwait
  411c18:	sub    bl,BYTE PTR [ecx+0x540a81c0]
  411c1e:	mov    edx,0xa7c0a186
  411c23:	js     0x411bc8
  411c25:	sbb    DWORD PTR [eax-0x34b7f92a],esp
  411c2b:	cli    
  411c2c:	adc    eax,eax
  411c2e:	dec    edi
  411c2f:	sti    
  411c30:	jno    0x411bcc
  411c32:	xor    DWORD PTR [edi+0x6c],0x42d20e40
  411c39:	jmp    0x6eb5:0x9e08f494
  411c40:	mov    ah,0xa3
  411c42:	dec    edi
  411c43:	inc    ecx
  411c44:	das    
  411c45:	es in  eax,dx
  411c47:	int    0x67
  411c49:	repz scas al,BYTE PTR es:[edi]
  411c4b:	retf   
  411c4c:	pop    es
  411c4d:	dec    edx
  411c4e:	out    dx,al
  411c4f:	mov    edi,0x87a26d8c
  411c54:	addr16 sbb edx,DWORD PTR [bx+di]
  411c58:	ja     0x411ca1
  411c5a:	aam    0x3
  411c5c:	or     BYTE PTR [eax+0x22],cl
  411c5f:	enter  0xd24a,0xb6
  411c63:	(bad)  
  411c64:	or     eax,0x2542e374
  411c69:	jle    0x411c56
  411c6b:	jb     0x411c04
  411c6d:	jg     0x411c21
  411c6f:	stc    
  411c70:	dec    eax
  411c71:	gs or  al,0x74
  411c74:	mov    dh,BYTE PTR [ebx-0x31]
  411c77:	sbb    ebp,0x35a38014
  411c7d:	push   edx
  411c7e:	inc    eax
  411c7f:	test   BYTE PTR [eax+0x40],bl
  411c82:	jnp    0x411c29
  411c84:	icebp  
  411c85:	pop    ss
  411c86:	mov    ebp,esp
  411c88:	test   cl,dl
  411c8a:	or     BYTE PTR [esi],0x3e
  411c8d:	add    al,0x2
  411c8f:	pushf  
  411c90:	stc    
  411c91:	and    eax,0x3cba5cac
  411c96:	aad    0x13
  411c98:	push   ecx
  411c99:	call   0x381bc6f
  411c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c9f:	in     al,0xc3
  411ca1:	fst    DWORD PTR ds:0x873f07ee
  411ca7:	adc    bh,bl
  411ca9:	call   0x7872:0xb99d6ef8
  411cb0:	pushf  
  411cb1:	shl    DWORD PTR [edi],1
  411cb3:	jbe    0x411c65
  411cb5:	rcr    BYTE PTR [ebx],1
  411cb7:	mov    cl,0x27
  411cb9:	in     eax,dx
  411cba:	xchg   ebp,eax
  411cbb:	dec    ebx
  411cbc:	adc    eax,0x40d0131f
  411cc1:	sub    al,0x5d
  411cc3:	lds    esp,FWORD PTR [eax+0x9]
  411cc6:	call   0xa906:0xf859f238
  411ccd:	shl    BYTE PTR [ebx],0xf6
  411cd0:	js     0x411cd2
  411cd2:	fist   DWORD PTR [ebx-0x42]
  411cd5:	jmp    0x37f52d49
  411cda:	jbe    0x411cc7
  411cdc:	daa    
  411cdd:	cmp    esp,DWORD PTR [esi+0x1c262985]
  411ce3:	rcl    BYTE PTR [edx],cl
  411ce5:	mov    esp,0xea0af07c
  411cea:	mov    al,cl
  411cec:	js     0x411cb1
  411cee:	jno    0x411d0d
  411cf0:	into   
  411cf1:	std    
  411cf2:	xchg   ecx,eax
  411cf3:	sub    eax,0x8e96ff06
  411cf8:	pop    edi
  411cf9:	int    0x9e
  411cfb:	jle    0x411d0e
  411cfd:	enter  0x1b41,0xe
  411d01:	sub    al,BYTE PTR [ecx+0x20]
  411d04:	rcl    DWORD PTR [ebx+0x5155115a],1
  411d0a:	ds mov ebp,0xf127a22f
  411d10:	add    ebx,DWORD PTR [edx-0x3f]
  411d13:	je     0x411ce3
  411d15:	inc    esp
  411d16:	inc    esi
  411d17:	das    
  411d18:	cmp    BYTE PTR [edi],bh
  411d1a:	cmp    BYTE PTR [edx+eax*4],0xe8
  411d1e:	inc    eax
  411d1f:	pop    eax
  411d20:	add    DWORD PTR [ecx],esi
  411d22:	repnz sub DWORD PTR fs:[ebp-0x40],0x1d6db482
  411d2b:	add    DWORD PTR [eax-0x4c1af5f6],edx
  411d31:	sub    esp,DWORD PTR [edx]
  411d33:	ja     0x411cf0
  411d35:	test   DWORD PTR [esi+0x5f74af37],edx
  411d3b:	add    DWORD PTR [ebx-0x7ec74260],ecx
  411d41:	xchg   esp,eax
  411d42:	aaa    
  411d43:	(bad)
  411d46:	ror    edx,1
  411d48:	and    al,BYTE PTR [ebx]
  411d4a:	and    al,dh
  411d4c:	cmp    eax,0x7fb2863c
  411d51:	aam    0x85
  411d53:	aas    
  411d54:	inc    ebx
  411d55:	pushf  
  411d56:	or     eax,0x87ea5df9
  411d5b:	jmp    0x411d67
  411d5d:	inc    edx
  411d5e:	leave  
  411d5f:	add    ebx,0x40
  411d62:	pop    edx
  411d63:	add    edx,DWORD PTR [ecx]
  411d65:	pop    ebx
  411d66:	mov    ebx,ecx
  411d68:	jmp    0xb0307037
  411d6d:	push   esp
  411d6e:	jl     0x411d0b
  411d70:	retf   
  411d71:	push   0xf
  411d73:	int3   
  411d74:	lahf   
  411d75:	mov    ds:0xea74917e,eax
  411d7a:	ret    0x667d
  411d7d:	or     DWORD PTR [edx-0x2eddc79e],ebp
  411d83:	sub    BYTE PTR [edx+eax*1-0x6fed9484],al
  411d8a:	adc    al,0x6a
  411d8c:	push   cs
  411d8d:	and    edi,esp
  411d8f:	mov    dh,0x8d
  411d91:	in     al,dx
  411d92:	mov    bh,0xb2
  411d94:	cmp    bh,BYTE PTR [ecx+0x5b]
  411d97:	jo     0x411dea
  411d99:	nop
  411d9a:	xor    al,0x2f
  411d9c:	enter  0xe028,0x69
  411da0:	sub    BYTE PTR [ecx+0x1d],0x5d
  411da4:	xor    eax,0x384a96a1
  411da9:	dec    eax
  411daa:	mov    dh,al
  411dac:	clc    
  411dad:	jmp    0xdec8:0x30b0e5f0
  411db4:	push   edi
  411db5:	lods   al,BYTE PTR ds:[esi]
  411db6:	pop    ebp
  411db7:	out    0x4e,eax
  411db9:	popf   
  411dba:	jmp    0xfb3e:0x6025d285
  411dc1:	sub    cl,al
  411dc3:	lahf   
  411dc4:	(bad)  
  411dc5:	fldcw  WORD PTR [ecx]
  411dc7:	mov    ebp,0xb28b135c
  411dcc:	mov    edi,0xccd47df3
  411dd1:	and    ecx,DWORD PTR [eax+0x5e]
  411dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd5:	outs   dx,DWORD PTR ds:[esi]
  411dd6:	sub    dl,cl
  411dd8:	xchg   edx,eax
  411dd9:	fs xadd DWORD PTR fs:[ecx],esp
  411dde:	jno    0x411e21
  411de0:	xor    al,0xce
  411de2:	ret    
  411de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de4:	mov    bh,0x6d
  411de6:	scas   eax,DWORD PTR es:[edi]
  411de7:	in     eax,dx
  411de8:	push   es
  411de9:	fs ret 0x7a9f
  411ded:	retf   0x7b2b
  411df0:	jecxz  0x411deb
  411df2:	sbb    DWORD PTR [edi+0x71],ebx
  411df5:	inc    esp
  411df6:	add    esp,DWORD PTR [ebp-0x6c]
  411df9:	stc    
  411dfa:	not    BYTE PTR [esi]
  411dfc:	push   0x5435b790
  411e01:	mov    ch,BYTE PTR [eax-0x78]
  411e04:	ja     0x411e36
  411e06:	test   eax,0xb79fb96a
  411e0b:	mov    dl,0x7b
  411e0d:	sbb    ecx,esi
  411e0f:	leave  
  411e10:	xchg   esp,eax
  411e11:	fimul  WORD PTR [ecx]
  411e13:	sbb    bh,BYTE PTR [ebx]
  411e15:	xor    esp,ebp
  411e17:	or     eax,0x6f1aa2ee
  411e1c:	rol    BYTE PTR [eax],0x93
  411e1f:	cmc    
  411e20:	and    eax,0xb2f622be
  411e25:	dec    esi
  411e26:	push   es
  411e27:	pop    esi
  411e28:	push   eax
  411e29:	(bad)  
  411e2a:	in     al,0x4f
  411e2c:	es xchg ebp,eax
  411e2e:	unpcklps xmm7,XMMWORD PTR [ecx]
  411e31:	es and bh,dh
  411e34:	add    esp,eax
  411e36:	mov    BYTE PTR [edx-0x20086727],ah
  411e3c:	jne    0x411eb6
  411e3e:	xchg   esi,eax
  411e3f:	jle    0x411eb3
  411e41:	add    al,0xd6
  411e43:	push   ebp
  411e44:	mov    edx,0x99999e00
  411e49:	jne    0x411e44
  411e4b:	aas    
  411e4c:	cmp    eax,0xb315d82e
  411e51:	or     eax,0x241a8dbe
  411e56:	pop    ecx
  411e57:	(bad)  
  411e58:	fisubr WORD PTR [ebx]
  411e5a:	mov    ss,WORD PTR [edx]
  411e5c:	dec    ebp
  411e5d:	sbb    eax,0xb56c700
  411e62:	inc    ebx
  411e63:	sar    BYTE PTR [eax],0xbd
  411e66:	dec    esp
  411e67:	in     al,dx
  411e68:	test   eax,0x6c8e95c9
  411e6d:	scas   al,BYTE PTR es:[edi]
  411e6e:	mov    WORD PTR [edi],fs
  411e70:	cmc    
  411e71:	mov    ds:0xbf2af187,eax
  411e76:	(bad)  
  411e77:	pop    eax
  411e78:	xchg   edi,eax
  411e79:	test   ebx,eax
  411e7b:	enter  0x6e64,0xa4
  411e7f:	push   ebx
  411e80:	mov    ecx,0xc2fc72dd
  411e85:	adc    BYTE PTR [esi-0x519406cc],ah
  411e8b:	mov    bl,0x11
  411e8d:	and    BYTE PTR [ebx-0x5d],dh
  411e90:	pop    es
  411e91:	gs repnz hlt 
  411e94:	cwde   
  411e95:	push   eax
  411e96:	stos   DWORD PTR es:[edi],eax
  411e97:	mov    esp,0xc7830bfb
  411e9c:	leave  
  411e9d:	fdivr  QWORD PTR [esi+edi*8-0x730ac0a8]
  411ea4:	inc    edi
  411ea5:	xchg   ebx,eax
  411ea6:	inc    esi
  411ea7:	inc    esp
  411ea8:	inc    esp
  411ea9:	fstp   TBYTE PTR [ebp-0x3eb2dbb0]
  411eaf:	cdq    
  411eb0:	jge    0x411e8e
  411eb2:	sub    DWORD PTR [eax-0x5acdfbb8],edi
  411eb8:	dec    ebp
  411eb9:	call   0xb039:0xb36636f2
  411ec0:	(bad)  
  411ec1:	std    
  411ec2:	fidiv  DWORD PTR [ecx+0x27]
  411ec5:	(bad)  
  411ec6:	mov    ds:0x7a7f8834,al
  411ecb:	mov    esp,0x45446ca3
  411ed0:	dec    ax
  411ed2:	jecxz  0x411f20
  411ed4:	test   BYTE PTR [ecx+edx*1+0x71],bl
  411ed8:	cmp    al,0xd0
  411eda:	mov    ds,WORD PTR [esi]
  411edc:	push   ecx
  411edd:	in     al,dx
  411ede:	sub    ch,BYTE PTR [edi+eax*8+0x4b]
  411ee2:	inc    esi
  411ee3:	xor    cl,BYTE PTR [ebx-0x4a6a33aa]
  411ee9:	xchg   edi,eax
  411eea:	xor    BYTE PTR [eax+0x3a3d28d1],ah
  411ef0:	mov    eax,0xdb5d9a90
  411ef5:	popa   
  411ef6:	sbb    eax,0x80fb117
  411efb:	mov    dl,0x8
  411efd:	js     0x411f33
  411eff:	adc    al,BYTE PTR [ecx-0x37]
  411f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f03:	inc    ebx
  411f04:	push   eax
  411f05:	and    ebp,DWORD PTR [esi]
  411f07:	(bad)  
  411f08:	cmp    BYTE PTR [ebx],dh
  411f0a:	mov    ebx,0xcaa117cf
  411f0f:	push   esp
  411f10:	mov    esi,DWORD PTR [eax]
  411f12:	loop   0x411f8b
  411f14:	sbb    BYTE PTR [esi-0x2ab1d7fb],dh
  411f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1b:	push   esp
  411f1c:	pop    ecx
  411f1d:	loopne 0x411f72
  411f1f:	mov    edi,0x3967a500
  411f24:	push   cs
  411f25:	sbb    edi,DWORD PTR gs:[ebp+0x66]
  411f29:	mov    bl,0x13
  411f2b:	pushf  
  411f2c:	jne    0x411f2f
  411f2e:	inc    ecx
  411f2f:	pushf  
  411f30:	ficom  DWORD PTR [ebx-0x47]
  411f33:	pop    ds
  411f34:	nop
  411f35:	dec    ebx
  411f36:	loope  0x411f67
  411f38:	pusha  
  411f39:	mov    cl,0x3b
  411f3b:	xor    dl,dh
  411f3d:	xchg   esp,eax
  411f3e:	fwait
  411f3f:	mov    bl,0x2b
  411f41:	dec    esp
  411f42:	pop    edx
  411f43:	push   ebx
  411f44:	shr    dl,1
  411f46:	shl    DWORD PTR [ebp+esi*1-0xe],0x16
  411f4b:	add    BYTE PTR ds:0xd29323e,ah
  411f51:	lahf   
  411f52:	ja     0x411fc8
  411f54:	jae    0x411fac
  411f56:	mov    eax,0x21ae4dd3
  411f5b:	out    dx,eax
  411f5c:	out    dx,eax
  411f5d:	jns    0x411fc2
  411f5f:	push   0xffffffa8
  411f61:	in     eax,0x3e
  411f63:	call   0x59a86527
  411f68:	adc    DWORD PTR [ebp-0x26],esi
  411f6b:	pop    ds
  411f6c:	jmp    0xed39:0x8c2b3ab
  411f73:	lahf   
  411f74:	pop    ds
  411f75:	add    al,0x22
  411f77:	pop    eax
  411f78:	rol    BYTE PTR [edi+0x23b53677],0xe
  411f7f:	dec    edi
  411f80:	add    eax,0xf56d0b7
  411f85:	into   
  411f86:	arpl   WORD PTR [edi-0x35],sp
  411f89:	jnp    0x411fb1
  411f8b:	stc    
  411f8c:	repnz loop 0x411fe3
  411f8f:	jbe    0x411f48
  411f91:	call   DWORD PTR [ebx+edx*1+0x1a8bd4ef]
  411f98:	sti    
  411f99:	(bad)  
  411f9a:	mov    al,ds:0xc03ef12f
  411f9f:	fwait
  411fa0:	cs call 0x29c6:0x16b94ab3
  411fa8:	mov    bh,0x57
  411faa:	je     0x411fcc
  411fac:	or     al,0xed
  411fae:	(bad)  
  411faf:	jl     0x412002
  411fb1:	sbb    BYTE PTR [ecx-0x3e],ah
  411fb4:	gs push edx
  411fb6:	pop    ss
  411fb7:	cmp    edi,DWORD PTR [ebp+0x34a9336c]
  411fbd:	inc    eax
  411fbe:	scas   eax,DWORD PTR es:[edi]
  411fbf:	sub    eax,0xdfba9ec4
  411fc4:	push   ss
  411fc5:	sbb    ebp,DWORD PTR [esi-0x113a7670]
  411fcb:	and    esp,DWORD PTR [edx+0x20]
  411fce:	lock (bad) 
  411fd0:	mov    eax,0xc444b2f0
  411fd5:	push   cs
  411fd6:	jg     0x411f71
  411fd8:	int3   
  411fd9:	ror    BYTE PTR [eax+0x66],0x71
  411fdd:	push   ebp
  411fde:	cmp    eax,0xe3dfddb7
  411fe3:	cmp    ebx,DWORD PTR [ecx+0x36]
  411fe6:	mov    eax,0xd7c30e9a
  411feb:	inc    esp
  411fec:	add    al,BYTE PTR [ecx-0x38952e04]
  411ff2:	pop    edi
  411ff3:	sub    al,0xf7
  411ff5:	xor    ebp,eax
  411ff7:	and    al,0x82
  411ff9:	(bad)  [edi+0x55]
  411ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ffd:	push   esp
  411ffe:	dec    ecx
  411fff:	test   DWORD PTR [ebx],ecx
  412001:	push   0x710b7650
  412006:	jge    0x411faa
  412008:	jl     0x41200d
  41200a:	and    eax,0xf0dc6119
  41200f:	test   al,cl
  412011:	pop    esp
  412012:	jle    0x412008
  412014:	cdq    
  412015:	in     al,0x8c
  412017:	jp     0x411fe4
  412019:	mov    cl,cl
  41201b:	test   eax,0x8e8d1d3a
  412020:	mov    ebx,0xeeea8796
  412025:	sahf   
  412026:	data16 into 
  412028:	and    edx,ecx
  41202a:	mov    ds:0xb315741f,eax
  41202f:	fnsave [ebp+0x19dcab0c]
  412035:	jg     0x412088
  412037:	es push edx
  412039:	cmp    BYTE PTR [ebp+0x4c],ch
  41203c:	pop    ebp
  41203d:	fistp  WORD PTR [eax]
  41203f:	nop
  412040:	xor    al,0xa5
  412042:	or     DWORD PTR [esi-0x442a910e],edx
  412048:	push   cs
  412049:	mov    edx,0x9ed0416c
  41204e:	and    eax,0x60261649
  412053:	sbb    DWORD PTR [ecx-0x2cd7a87],edx
  412059:	jge    0x412086
  41205b:	cmc    
  41205c:	and    al,0x4d
  41205e:	xchg   DWORD PTR [edx],edx
  412060:	xchg   esi,eax
  412061:	mov    bh,0x9e
  412063:	or     eax,DWORD PTR [edi-0x13]
  412066:	popa   
  412067:	cmc    
  412068:	jl     0x412014
  41206a:	hlt    
  41206b:	in     al,dx
  41206c:	leave  
  41206d:	pop    ecx
  41206e:	mov    ebx,0xf10d16c7
  412073:	dec    ebx
  412074:	sbb    bl,cl
  412076:	sbb    cl,bl
  412078:	xchg   esi,eax
  412079:	aaa    
  41207a:	cmp    cl,dh
  41207c:	ret    
  41207d:	and    eax,0x17e67882
  412082:	push   eax
  412083:	cdq    
  412084:	(bad)  
  412085:	adc    DWORD PTR [edi-0x553f6463],ecx
  41208b:	icebp  
  41208c:	xchg   esp,eax
  41208d:	dec    eax
  41208e:	xchg   ebx,eax
  41208f:	(bad)  [edi-0x19]
  412092:	shl    DWORD PTR ds:0xc29682a9,1
  412098:	mov    ebx,0x3c84c868
  41209d:	pop    ebx
  41209e:	ror    dh,cl
  4120a0:	adc    ecx,ebx
  4120a2:	mov    esp,0x87a674f9
  4120a7:	push   ebx
  4120a8:	and    dl,cl
  4120aa:	lea    eax,fs:[esi+edx*2-0x74]
  4120af:	dec    edx
  4120b0:	push   edi
  4120b1:	push   edi
  4120b2:	adc    edi,DWORD PTR [edx-0x63c40cb5]
  4120b8:	pop    ds
  4120b9:	clc    
  4120ba:	scas   al,BYTE PTR es:[edi]
  4120bb:	outs   dx,BYTE PTR ds:[esi]
  4120bc:	inc    ebp
  4120bd:	jle    0x4120f4
  4120bf:	mov    DWORD PTR [ecx-0xa9b8eef],ebx
  4120c5:	cmp    BYTE PTR [esi-0x7b65873b],ch
  4120cb:	ss cmp dh,dl
  4120ce:	loope  0x412080
  4120d0:	shl    DWORD PTR [esi+0x16],0xd
  4120d4:	les    esi,FWORD PTR [esi+0x71]
  4120d7:	cmp    DWORD PTR [edx-0x64],esp
  4120da:	mov    dh,bh
  4120dc:	xchg   esp,eax
  4120dd:	mov    esi,0xba85bb77
  4120e2:	dec    esi
  4120e3:	popf   
  4120e4:	scas   eax,DWORD PTR es:[edi]
  4120e5:	dec    ebx
  4120e6:	shl    DWORD PTR [eax],0x61
  4120e9:	sti    
  4120ea:	cmp    bl,BYTE PTR [eax-0x40]
  4120ed:	int3   
  4120ee:	ja     0x41210e
  4120f0:	push   esp
  4120f1:	jns    0x41215d
  4120f3:	inc    ecx
  4120f4:	stos   DWORD PTR es:[edi],eax
  4120f5:	clc    
  4120f6:	adc    eax,0x3b18bcc9
  4120fb:	and    al,0x88
  4120fd:	mov    esi,cr7
  412100:	pop    ds
  412101:	adc    eax,0x324598e6
  412106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412107:	dec    esi
  412108:	loopne 0x412137
  41210a:	lods   al,BYTE PTR ds:[esi]
  41210b:	jo     0x4120d8
  41210d:	mov    esi,0xa464523e
  412112:	fwait
  412113:	in     eax,0x1b
  412115:	xchg   ebp,eax
  412116:	nop
  412117:	cmp    bl,BYTE PTR [ebx+0x4e957aa9]
  41211d:	jge    0x412109
  41211f:	pop    esp
  412120:	mov    bh,0x7b
  412122:	mov    al,ds:0xfb24b225
  412127:	nop
  412128:	add    eax,0xfec58d50
  41212d:	call   0xfda4f5d5
  412132:	pop    edi
  412133:	retf   
  412134:	xlat   BYTE PTR ds:[ebx]
  412135:	cdq    
  412136:	cmp    BYTE PTR [esi+ebp*4],dh
  412139:	gs movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41213c:	mov    ds,ebx
  41213e:	xchg   ebp,eax
  41213f:	xor    DWORD PTR [edi],edi
  412141:	repz inc ebp
  412143:	jae    0x4120fc
  412145:	ror    DWORD PTR [ebp+ecx*4-0x2d],cl
  412149:	mov    ds:0xac57a82e,al
  41214e:	popa   
  41214f:	push   es
  412150:	and    dl,al
  412152:	shr    BYTE PTR [esi],cl
  412154:	(bad)  
  412155:	ds jae 0x412163
  412158:	shl    BYTE PTR [edx-0x77bb5203],cl
  41215e:	cli    
  41215f:	lods   al,BYTE PTR ds:[esi]
  412160:	idiv   BYTE PTR [eax-0x1d08db2e]
  412166:	cli    
  412167:	dec    sp
  412169:	popf   
  41216a:	mov    ah,al
  41216c:	imul   esp,DWORD PTR [eax],0x17
  41216f:	mov    ah,0xab
  412171:	mov    ebp,0xcbfcbcd4
  412176:	cmc    
  412177:	loopne 0x41214e
  412179:	(bad)  
  41217a:	adc    BYTE PTR [edi+0x67c422c4],bl
  412180:	jae    0x412182
  412182:	mov    esi,0x953d8ae1
  412187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412188:	or     BYTE PTR [ebx+ebx*1],dl
  41218b:	test   eax,0x27e9c2f1
  412190:	das    
  412191:	inc    eax
  412192:	inc    esp
  412193:	or     BYTE PTR [ecx-0x59],dh
  412196:	clc    
  412197:	cdq    
  412198:	pop    ebp
  412199:	leave  
  41219a:	xchg   BYTE PTR [edi],dh
  41219c:	out    dx,al
  41219d:	xchg   BYTE PTR ds:0x8078985b,dh
  4121a3:	pop    eax
  4121a4:	and    al,0x4c
  4121a6:	inc    edi
  4121a7:	retf   0x4ea
  4121aa:	fmul   QWORD PTR [ebp-0x6a537154]
  4121b0:	enter  0x61f8,0x39
  4121b4:	hlt    
  4121b5:	or     BYTE PTR [ebp+0xb87690a],ch
  4121bb:	aam    0x7f
  4121bd:	test   DWORD PTR [esi-0x4f],ebp
  4121c0:	push   esi
  4121c1:	out    0xd1,eax
  4121c3:	rcr    BYTE PTR [edi-0x17],cl
  4121c6:	and    edi,0xdcb29c39
  4121cc:	xchg   edi,eax
  4121cd:	fsubr  DWORD PTR [ecx]
  4121cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d0:	add    esp,DWORD PTR [ebx+edx*8+0x6c]
  4121d4:	sar    BYTE PTR [ecx-0x526280f8],cl
  4121da:	lds    edi,FWORD PTR [ebp-0x7d]
  4121dd:	(bad)  
  4121df:	cmp    BYTE PTR [edx+0x5f50e369],0xed
  4121e6:	(bad)  
  4121e7:	and    eax,0x269b03af
  4121ec:	scas   al,BYTE PTR es:[edi]
  4121ed:	test   BYTE PTR [eax+0x6e71592e],bl
  4121f3:	cli    
  4121f4:	pop    esp
  4121f5:	add    ah,BYTE PTR [edx]
  4121f7:	dec    eax
  4121f8:	cmp    esi,eax
  4121fa:	xor    al,0x58
  4121fc:	mov    dh,0x7
  4121fe:	pushf  
  4121ff:	aad    0x3b
  412201:	push   eax
  412202:	or     eax,0xaee2d334
  412207:	sub    cl,ah
  412209:	jp     0x41224c
  41220b:	mov    ebp,0x3a4a87a4
  412210:	shl    BYTE PTR [ebx],cl
  412212:	lods   al,BYTE PTR ds:[esi]
  412213:	sahf   
  412214:	cs jge 0x41219e
  412217:	adc    DWORD PTR [edx-0x8],edi
  41221a:	test   eax,0xdb5249f2
  41221f:	(bad)  
  412221:	test   al,0xca
  412223:	jb     0x412279
  412225:	retf   
  412226:	add    DWORD PTR [edx-0x38694cf6],ecx
  41222c:	and    cl,BYTE PTR [edi]
  41222e:	scas   al,BYTE PTR es:[edi]
  41222f:	push   ebx
  412230:	das    
  412231:	adc    BYTE PTR [esi+0x106a89f0],dh
  412237:	js     0x4122ae
  412239:	jbe    0x41222b
  41223b:	mov    edx,0x7dd79e19
  412240:	jno    0x412218
  412242:	xor    bl,BYTE PTR [edx-0x5963a7a6]
  412248:	xor    esp,DWORD PTR [ebp-0x27bf7a80]
  41224e:	lds    esp,FWORD PTR [edx+0x6ace68d2]
  412254:	xor    eax,0xf82ef994
  412259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41225a:	loopne 0x4122d0
  41225c:	lods   eax,DWORD PTR ds:[esi]
  41225d:	jno    0x412207
  41225f:	jnp    0x412228
  412261:	dec    ebx
  412262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412263:	es adc dl,bl
  412266:	popa   
  412267:	and    BYTE PTR [ecx+0x4d],ah
  41226a:	ret    
  41226b:	js     0x4121f6
  41226d:	pusha  
  41226e:	stc    
  41226f:	jno    0x4122c9
  412271:	call   FWORD PTR [esi+0x32]
  412274:	jns    0x41229c
  412276:	jae    0x412239
  412278:	push   esp
  412279:	or     dl,BYTE PTR [ecx]
  41227b:	rcr    esi,1
  41227d:	mov    ecx,0x36ca66fe
  412282:	test   BYTE PTR [ecx+0x2047fbf6],al
  412288:	cmp    bl,BYTE PTR [eax-0x3a]
  41228b:	fs mov ch,0x7e
  41228e:	xor    bl,BYTE PTR [eax+eiz*8+0x1]
  412292:	cmp    cl,dh
  412294:	push   edi
  412295:	(bad)  
  412297:	push   es
  412298:	test   DWORD PTR [edi],eax
  41229a:	jne    0x41222f
  41229c:	(bad)  
  41229d:	sbb    al,0xd4
  41229f:	or     eax,0xf14121bf
  4122a4:	int    0xe6
  4122a6:	mov    ch,0x4b
  4122a8:	mov    esp,0xdcaa1e58
  4122ad:	mov    dl,0x4a
  4122af:	mov    ds:0x30fc8743,al
  4122b4:	stc    
  4122b5:	lods   al,BYTE PTR ds:[esi]
  4122b6:	gs inc edi
  4122b8:	inc    eax
  4122b9:	xchg   BYTE PTR [ebp+0x508fc1bf],al
  4122bf:	ds dec eax
  4122c1:	ss aad 0xb9
  4122c4:	push   ss
  4122c5:	dec    ecx
  4122c6:	xchg   BYTE PTR [eax+0x52d4220b],bh
  4122cc:	inc    edx
  4122cd:	inc    esp
  4122ce:	pushf  
  4122cf:	ror    DWORD PTR [ecx-0x4c],cl
  4122d2:	adc    BYTE PTR [ebp+0x24],ch
  4122d5:	pop    eax
  4122d6:	add    edx,DWORD PTR [ecx+0x2d7ed7c5]
  4122dc:	push   ebp
  4122dd:	push   ebx
  4122de:	cmp    BYTE PTR [esi-0x4a],0x5e
  4122e2:	adc    al,0xa7
  4122e4:	stc    
  4122e5:	pushf  
  4122e6:	mov    eax,0xb437d424
  4122eb:	pop    eax
  4122ec:	pop    ss
  4122ed:	adc    dl,al
  4122ef:	xchg   DWORD PTR [esi],ecx
  4122f1:	mov    dl,0xa3
  4122f3:	les    esp,FWORD PTR [esp+eax*2-0x39784556]
  4122fa:	sub    eax,0xf397affc
  4122ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412300:	adc    al,0x7
  412302:	push   edx
  412303:	out    0xa6,al
  412305:	lods   eax,DWORD PTR ds:[esi]
  412306:	add    dh,BYTE PTR [edi-0x6e]
  412309:	in     eax,0xa9
  41230b:	mov    ch,0x83
  41230d:	sbb    al,0x66
  41230f:	cld    
  412310:	pusha  
  412311:	add    ah,dh
  412313:	jnp    0x4122aa
  412315:	jmp    0x37bc:0x9f28468d
  41231c:	das    
  41231d:	push   ds
  41231e:	loopne 0x41230b
  412320:	cmc    
  412321:	or     BYTE PTR [eax],dh
  412323:	inc    edx
  412324:	adc    al,BYTE PTR ds:0x84e78be5
  41232a:	or     bh,bl
  41232c:	pop    edi
  41232d:	loope  0x412393
  41232f:	int    0x2f
  412331:	pop    ds
  412332:	adc    BYTE PTR [eax+0x2f7c9540],bh
  412338:	or     al,0xab
  41233a:	stc    
  41233b:	sbb    al,0x9c
  41233d:	mov    esi,0xd0979304
  412342:	mov    ch,BYTE PTR es:[ecx]
  412345:	imul   ebx,DWORD PTR [edi+0x1bf73e46],0x47
  41234c:	jb     0x4123ba
  41234e:	mov    eax,0x487dbaec
  412353:	and    al,0xa7
  412355:	add    eax,0xa477180c
  41235a:	cdq    
  41235b:	sub    BYTE PTR [esi],dh
  41235d:	mov    eax,ds:0x21faaa8d
  412362:	lods   eax,DWORD PTR ds:[esi]
  412363:	enter  0x4695,0x7b
  412367:	push   ecx
  412368:	cs push 0xd59952e7
  41236e:	je     0x412372
  412370:	dec    esp
  412371:	mov    ds:0xc54d0aed,al
  412376:	mov    WORD PTR [eax+0x12957e80],?
  41237c:	mov    al,ds:0x7b2591a3
  412381:	dec    edi
  412382:	ret    0xda31
  412385:	cdq    
  412386:	(bad)  
  412387:	in     al,0x43
  412389:	mov    edx,0x6790ac7b
  41238e:	push   ebp
  41238f:	cmp    DWORD PTR [esi+0x7],ebx
  412392:	(bad)  
  412393:	mov    al,ds:0x833685ec
  412398:	xchg   edx,eax
  412399:	repnz mov ecx,0x899f2ff4
  41239f:	repz pop edi
  4123a1:	ins    BYTE PTR es:[edi],dx
  4123a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a3:	jmp    0xd3f9013e
  4123a8:	mov    edx,0xc0949b6a
  4123ad:	inc    edi
  4123ae:	sbb    dl,bl
  4123b0:	cmp    esi,ecx
  4123b2:	xor    eax,0x6910b20e
  4123b7:	ficom  WORD PTR [edx]
  4123b9:	mov    edx,0xf166fb45
  4123be:	das    
  4123bf:	xor    al,al
  4123c1:	repz cs lock in al,dx
  4123c5:	xor    BYTE PTR [ecx],cl
  4123c7:	and    BYTE PTR ss:[edi-0x74],0xff
  4123cc:	sbb    al,0xfe
  4123ce:	xor    al,0x24
  4123d0:	mul    DWORD PTR [eax]
  4123d2:	fcomp  DWORD PTR [ecx]
  4123d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123d5:	mov    edx,0x3dd87af4
  4123da:	jb     0x41242c
  4123dc:	(bad)  
  4123de:	cli    
  4123df:	jmp    0xd0bf:0x545401c0
  4123e6:	sti    
  4123e7:	loop   0x4123e4
  4123e9:	jo     0x4123a9
  4123eb:	fdiv   QWORD PTR [ecx]
  4123ed:	push   edx
  4123ee:	(bad)  
  4123ef:	and    ebx,DWORD PTR [ecx-0x3911d461]
  4123f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f6:	cs cdq 
  4123f8:	sub    al,0xf7
  4123fa:	iret   
  4123fb:	repz cmp eax,DWORD PTR [esi-0x49c432c]
  412402:	pop    es
  412403:	lock add BYTE PTR [eax+eiz*4-0x68],0xeb
  412409:	mov    edi,0x8a2b882d
  41240e:	and    al,0x92
  412410:	and    BYTE PTR [eax],bh
  412412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412413:	int    0x72
  412415:	std    
  412416:	add    al,0x77
  412418:	xchg   DWORD PTR [eax+0x6ab5dbe5],edi
  41241e:	or     cl,BYTE PTR [ecx]
  412420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412421:	icebp  
  412422:	retf   
  412423:	aas    
  412424:	das    
  412425:	push   eax
  412426:	cwde   
  412427:	sub    BYTE PTR [edi-0x153e9e50],al
  41242d:	or     bh,BYTE PTR [ebx]
  41242f:	(bad)  
  412430:	into   
  412431:	test   BYTE PTR [esi+0x359a277a],ah
  412437:	ficomp WORD PTR [ebp-0xd]
  41243a:	lock jnp 0x412453
  41243d:	in     eax,0x73
  41243f:	outs   dx,DWORD PTR ds:[esi]
  412440:	sub    ch,BYTE PTR [edx-0x74b06a16]
  412446:	icebp  
  412447:	std    
  412448:	add    ecx,DWORD PTR [esi]
  41244a:	shl    esi,0x81
  41244d:	cli    
  41244e:	push   es
  41244f:	mov    ds,WORD PTR [ebx+ebx*1+0x6b880582]
  412456:	loopne 0x412460
  412458:	inc    esi
  412459:	xchg   ebx,eax
  41245a:	mov    WORD PTR [eax+0x7a],?
  41245d:	getsec 
  41245f:	iret   
  412460:	pop    es
  412461:	sbb    DWORD PTR [esi+0x4],0xc672f9a6
  412468:	pop    ss
  412469:	fist   WORD PTR [eax]
  41246b:	loope  0x4124db
  41246d:	enter  0x11e6,0x89
  412471:	xchg   esi,eax
  412472:	arpl   WORD PTR [eax+0x30],si
  412475:	repnz xor ebp,DWORD PTR [esi]
  412478:	fwait
  412479:	pop    es
  41247a:	mov    eax,ds:0x2c94bf1a
  41247f:	outs   dx,DWORD PTR ds:[esi]
  412480:	cld    
  412481:	hlt    
  412482:	mov    dh,0xf0
  412484:	psrld  mm7,QWORD PTR [edi]
  412487:	inc    eax
  412488:	push   0x7044544f
  41248d:	inc    edx
  41248e:	lods   eax,DWORD PTR ds:[esi]
  41248f:	mov    WORD PTR [edx+0x75bdbcd9],?
  412495:	push   eax
  412496:	fsub   st(5),st
  412498:	sub    BYTE PTR [eax-0x58266f9f],dl
  41249e:	repnz mov ds:0x9dfadd69,eax
  4124a4:	mov    edi,ecx
  4124a6:	cld    
  4124a7:	push   0x35
  4124a9:	pop    es
  4124aa:	xor    DWORD PTR [eax-0x22],ebp
  4124ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ae:	adc    esp,DWORD PTR [edx-0x4f]
  4124b1:	push   edx
  4124b2:	xchg   ebp,eax
  4124b3:	mov    bl,0x51
  4124b5:	jmp    0x29d:0x526655ce
  4124bc:	mov    dl,0x81
  4124be:	mov    eax,ds:0xcdde40f2
  4124c3:	xchg   DWORD PTR [ebp+0xbe1221a],esp
  4124c9:	jmp    0xfeab1700
  4124ce:	mov    bl,0x6d
  4124d0:	or     eax,0x6c9d626e
  4124d5:	std    
  4124d6:	mov    edi,0x364a9f5b
  4124db:	imul   ebp,edx,0x73
  4124de:	ss loope 0x41247c
  4124e1:	lahf   
  4124e2:	imul   esp,DWORD PTR [ebp+0x7d],0x51
  4124e6:	dec    ebx
  4124e7:	adc    edi,eax
  4124e9:	sub    DWORD PTR [ecx+edx*1-0x3],edi
  4124ed:	iret   
  4124ee:	xchg   esp,eax
  4124ef:	cmp    esp,esi
  4124f1:	and    DWORD PTR [edx-0x5d],ebx
  4124f4:	std    
  4124f5:	add    ebp,DWORD PTR [edx-0x5f9139c3]
  4124fb:	aaa    
  4124fc:	mov    ah,0x50
  4124fe:	xchg   ecx,eax
  4124ff:	ror    eax,0xf
  412502:	mov    DWORD PTR [edx-0x27],esp
  412505:	dec    ebx
  412506:	repz mov ecx,0xbd5a5b9e
  41250c:	jp     0x412533
  41250e:	push   edi
  41250f:	sub    ecx,esi
  412511:	int    0xf1
  412513:	xchg   ecx,eax
  412514:	or     al,0x66
  412516:	sbb    eax,0x9d959270
  41251b:	test   eax,0x7b756cb
  412520:	and    bl,BYTE PTR [ebp+0x3500c9c1]
  412526:	retf   0xce7d
  412529:	jp     0x412561
  41252b:	mov    BYTE PTR [ebx-0x3f],ch
  41252e:	call   0x9878:0x6b96b92
  412535:	push   edx
  412536:	inc    edi
  412537:	jae    0x41251a
  412539:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41253b:	lea    edi,[eax]
  41253d:	jg     0x4124f4
  41253f:	ja     0x4124e4
  412541:	mov    al,ds:0xa1a22366
  412546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412547:	mov    ch,BYTE PTR [edx-0x1f]
  41254a:	jmp    0x74085dab
  41254f:	int3   
  412550:	cmp    ch,BYTE PTR [eax+0x7c]
  412553:	dec    DWORD PTR [edi]
  412555:	xchg   cl,al
  412557:	das    
  412558:	outs   dx,DWORD PTR ds:[esi]
  412559:	int3   
  41255a:	xchg   BYTE PTR [edx],al
  41255c:	test   eax,0x235609a8
  412561:	dec    ebx
  412562:	or     BYTE PTR [eax+0x435a2467],cl
  412568:	pushf  
  412569:	sbb    bh,BYTE PTR [ecx+0x75ce8160]
  41256f:	and    DWORD PTR [edi-0x60],ecx
  412572:	iret   
  412573:	call   0x8bb5:0xf748d76d
  41257a:	daa    
  41257b:	fwait
  41257c:	(bad)  
  41257d:	pop    ebx
  41257e:	scas   eax,DWORD PTR es:[edi]
  41257f:	mov    ds:0x52f0fc72,eax
  412584:	repnz icebp 
  412586:	dec    ecx
  412587:	popa   
  412588:	mov    ah,0x2c
  41258a:	(bad)  
  41258b:	test   eax,0x9d25d815
  412590:	scas   eax,DWORD PTR es:[edi]
  412591:	jnp    0x412576
  412593:	mov    al,ds:0x72f775dd
  412598:	int3   
  412599:	inc    ebx
  41259a:	dec    ecx
  41259b:	rcr    BYTE PTR [eax+0x64],1
  41259e:	out    dx,al
  41259f:	shr    DWORD PTR [ebx],1
  4125a1:	jg     0x412609
  4125a3:	jp     0x41255b
  4125a5:	loop   0x4125d3
  4125a7:	mov    edi,cs
  4125a9:	enter  0xbb02,0xc6
  4125ad:	push   0xffffffb1
  4125af:	jnp    0x41254d
  4125b1:	and    bl,BYTE PTR [eax+0x6c]
  4125b4:	iret   
  4125b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b6:	push   ebp
  4125b7:	shr    DWORD PTR [eax],cl
  4125b9:	rol    DWORD PTR [ecx],cl
  4125bb:	(bad)
  4125be:	jo     0x4125b1
  4125c0:	shr    DWORD PTR [ecx],cl
  4125c2:	push   edi
  4125c3:	sub    ch,BYTE PTR gs:[edi]
  4125c6:	ret    
  4125c7:	jp     0x412633
  4125c9:	mov    esp,0xa4b5f00a
  4125ce:	adc    DWORD PTR [ebx],edi
  4125d0:	out    0xb,eax
  4125d2:	add    ah,cl
  4125d4:	aas    
  4125d5:	jmp    0xf9db702e
  4125da:	inc    eax
  4125db:	shl    DWORD PTR [esi+0x42],cl
  4125de:	pop    ebp
  4125df:	hlt    
  4125e0:	pop    ebp
  4125e1:	ror    DWORD PTR [edx+0x6e],1
  4125e4:	rcl    BYTE PTR [ebx+0x85c5222],cl
  4125ea:	ftst   
  4125ec:	jno    0x4125e2
  4125ee:	call   0x887:0xa842895f
  4125f5:	fsubr  QWORD PTR [ecx-0x203b4f2c]
  4125fb:	pop    ebp
  4125fc:	mov    ch,0xa9
  4125fe:	rol    BYTE PTR [ebx+0x486b8f50],0x1d
  412605:	mov    ah,0x48
  412607:	jae    0x4125ab
  412609:	outs   dx,DWORD PTR ds:[esi]
  41260a:	xor    DWORD PTR [edi],ebp
  41260c:	adc    eax,0x5edd0379
  412611:	shl    DWORD PTR [ecx-0xd],cl
  412614:	data16 icebp 
  412616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412617:	mov    WORD PTR [ebx],fs
  412619:	cdq    
  41261a:	cli    
  41261b:	cmp    ebx,edi
  41261d:	push   ebx
  41261e:	cmp    DWORD PTR [edx],esi
  412620:	jg     0x412693
  412622:	sbb    ah,dh
  412624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412625:	outs   dx,BYTE PTR ds:[esi]
  412626:	(bad)  
  412627:	(bad)  
  412628:	jmp    0xb5752e87
  41262d:	dec    esi
  41262e:	cmp    eax,0xfed8ded9
  412633:	addr16 jp 0x41266d
  412636:	test   DWORD PTR [ebx+0x1d],eax
  412639:	rcr    DWORD PTR [edx-0x27],0xaf
  41263d:	xchg   edi,eax
  41263e:	lods   al,BYTE PTR ds:[esi]
  41263f:	mov    ds:0x97754c12,eax
  412644:	adc    eax,DWORD PTR [ebx-0x1b5e70e]
  41264a:	mov    fs,ecx
  41264c:	mov    bl,ch
  41264e:	iret   
  41264f:	cdq    
  412650:	mov    ds:0x165a6c0e,eax
  412655:	cmc    
  412656:	mov    edx,0x7b7052e1
  41265b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265c:	imul   cx,WORD PTR [edx+0x71e2886a],0x2830
  412665:	adc    DWORD PTR [esi],eax
  412667:	sub    ebp,esi
  412669:	imul   edx,DWORD PTR [edx],0xc88df6ce
  41266f:	mov    ?,WORD PTR [ecx-0x35]
  412672:	sbb    al,0xbb
  412674:	loop   0x4126ad
  412676:	jns    0x412623
  412678:	push   0xa706dd81
  41267d:	fdiv   DWORD PTR [ebp-0x20]
  412680:	dec    edi
  412681:	je     0x412616
  412683:	jecxz  0x412698
  412685:	pop    edx
  412686:	outs   dx,DWORD PTR ds:[esi]
  412687:	dec    DWORD PTR [eax+0x2f261bd1]
  41268d:	arpl   WORD PTR [esi],di
  41268f:	bound  ecx,QWORD PTR [eax-0x18]
  412692:	cmc    
  412693:	mov    cl,0xf1
  412695:	and    BYTE PTR [edi],0x43
  412698:	rcr    DWORD PTR [eax-0x2b],0x4c
  41269c:	jb     0x4126d2
  41269e:	ds in  al,dx
  4126a0:	push   ds
  4126a1:	fs cmp al,0x9d
  4126a4:	pop    ecx
  4126a5:	push   ss
  4126a6:	scas   al,BYTE PTR es:[edi]
  4126a7:	xlat   BYTE PTR ds:[ebx]
  4126a8:	packuswb mm2,QWORD PTR [edi-0x1f]
  4126ac:	mov    edi,edx
  4126ae:	mov    al,BYTE PTR [edi-0x45dc1aac]
  4126b4:	stc    
  4126b5:	daa    
  4126b6:	lds    esp,FWORD PTR [edi-0x75b446cd]
  4126bc:	or     edx,esp
  4126be:	fmulp  st(0),st
  4126c0:	hlt    
  4126c1:	sahf   
  4126c2:	cmp    BYTE PTR [ebp+0x6a9a15d],bh
  4126c8:	hlt    
  4126c9:	or     BYTE PTR [ebx+0x11c8f9d0],dl
  4126cf:	dec    ebx
  4126d0:	sub    dl,BYTE PTR gs:[ebx]
  4126d3:	sbb    DWORD PTR [esi+ebx*1-0x51e71c27],esi
  4126da:	imul   ebx,ecx,0xffffffad
  4126dd:	das    
  4126de:	adc    ah,BYTE PTR [ecx-0x25544cde]
  4126e4:	and    bl,ch
  4126e6:	dec    edi
  4126e7:	ror    DWORD PTR [eax+0x27],1
  4126ea:	pushf  
  4126eb:	shl    BYTE PTR [esi+0x68],1
  4126ee:	or     BYTE PTR [edi],0x26
  4126f1:	dec    ebx
  4126f2:	rol    BYTE PTR [eiz*8+0x5a25c2a9],1
  4126f9:	mov    ebx,0xc178a9d0
  4126fe:	in     eax,dx
  4126ff:	outs   dx,BYTE PTR ds:[esi]
  412700:	push   esi
  412701:	fistp  QWORD PTR [eax+0x77]
  412704:	and    al,0xdf
  412706:	jge    0x4126fe
  412708:	popa   
  412709:	test   esi,ebp
  41270b:	out    dx,al
  41270c:	sub    DWORD PTR [esi+0x12],ecx
  41270f:	dec    esp
  412710:	or     DWORD PTR ds:0x9af81e60,esi
  412716:	gs pop ds
  412718:	fcomp  QWORD PTR [edi-0x44]
  41271b:	int3   
  41271c:	adc    BYTE PTR [eax-0x79],bl
  41271f:	cmp    ch,BYTE PTR gs:[edx]
  412722:	jp     0x4126e7
  412724:	mov    ebx,0xf0e117f4
  412729:	mov    dh,0xca
  41272b:	mov    esi,0xd8d4253a
  412730:	iret   
  412731:	jecxz  0x4126f7
  412733:	test   DWORD PTR [edx+0x2814926f],esi
  412739:	bound  esi,QWORD PTR [ecx+0x4582690d]
  41273f:	fidiv  DWORD PTR [esi-0x2e34f104]
  412745:	add    DWORD PTR [eax-0x636e5c2b],edi
  41274b:	(bad)  
  41274c:	dec    edi
  41274d:	and    bl,dl
  41274f:	push   0xffffff82
  412751:	pop    ebx
  412752:	enter  0x7383,0xb4
  412756:	inc    edx
  412757:	or     dh,al
  412759:	ret    0x79c3
  41275c:	addr16 std 
  41275e:	lods   eax,DWORD PTR ds:[esi]
  41275f:	mov    DWORD PTR [edx],ecx
  412761:	out    dx,al
  412762:	push   esp
  412763:	fsub   QWORD PTR [eax-0x16]
  412766:	js     0x41272f
  412768:	fadd   QWORD PTR ds:0x5bf81565
  41276e:	and    eax,0x88ab7072
  412773:	ins    DWORD PTR es:[edi],dx
  412774:	scas   al,BYTE PTR es:[edi]
  412775:	fst    QWORD PTR [eax+0x8]
  412778:	mov    dl,0x11
  41277a:	mov    bh,BYTE PTR [ecx-0xa]
  41277d:	xchg   ecx,eax
  41277e:	(bad)  
  41277f:	jmp    0xb7b2991c
  412784:	mov    al,0xbb
  412786:	out    dx,eax
  412787:	int    0xde
  412789:	push   ebx
  41278a:	cwde   
  41278b:	das    
  41278c:	add    eax,0x8ef0b0e2
  412791:	adc    eax,eax
  412793:	cli    
  412794:	cmp    ebx,DWORD PTR [eiz*1-0x4a7b708a]
  41279b:	call   0x4b1c:0x1bae51c9
  4127a2:	mov    ds:0x6287a1c2,eax
  4127a7:	aad    0xce
  4127a9:	sbb    DWORD PTR [edi+ecx*8],ebx
  4127ac:	or     bh,0xb0
  4127af:	add    al,0x7b
  4127b1:	sub    BYTE PTR [ecx+0x17],dl
  4127b4:	jg     0x412835
  4127b6:	repz ret 
  4127b8:	xchg   esi,eax
  4127b9:	(bad)  [edi+0x77]
  4127bc:	cmp    eax,0x16d04015
  4127c1:	aas    
  4127c2:	test   eax,0xe89eaa36
  4127c7:	jmp    0x4127f1
  4127c9:	fnsave [ecx]
  4127cb:	and    eax,0x8dbd69b3
  4127d0:	mov    esi,0x2f8c8fc0
  4127d5:	hlt    
  4127d6:	cmp    ah,BYTE PTR [eax-0x1f]
  4127d9:	pop    ds
  4127da:	push   cs
  4127db:	push   ebx
  4127dc:	xor    bh,bh
  4127de:	inc    ecx
  4127df:	xchg   BYTE PTR [edx],bl
  4127e1:	mov    ebx,DWORD PTR [esi+0x48]
  4127e4:	nop
  4127e5:	rol    BYTE PTR [edx+0x0],0xdd
  4127e9:	xlat   BYTE PTR ds:[ebx]
  4127ea:	push   ds
  4127eb:	or     al,0x9b
  4127ed:	fdivr  st,st(4)
  4127ef:	add    BYTE PTR [edi+0x53],dh
  4127f2:	mov    dh,BYTE PTR [esi]
  4127f4:	in     eax,0xd9
  4127f6:	fdiv   DWORD PTR [ebx+ebx*1]
  4127f9:	shl    BYTE PTR [ecx],1
  4127fb:	fadd   st,st(1)
  4127fd:	hlt    
  4127fe:	inc    esi
  4127ff:	lods   al,BYTE PTR ds:[esi]
  412800:	push   edi
  412801:	loop   0x41286d
  412803:	nop
  412804:	and    DWORD PTR [eax+0x7a],edx
  412807:	neg    ebp
  412809:	retf   
  41280a:	sar    DWORD PTR [ebp+0x7e],1
  41280d:	push   ds
  41280e:	mov    bl,0xf7
  412810:	in     al,dx
  412811:	das    
  412812:	cmp    DWORD PTR [edi],eax
  412814:	leave  
  412815:	push   ecx
  412816:	mov    ebp,0x267148d0
  41281b:	mov    ecx,0xb90c903b
  412820:	mov    cl,0x65
  412822:	jns    0x41284e
  412824:	jnp    0x4127aa
  412826:	btc    DWORD PTR [ecx],ebx
  412829:	mul    BYTE PTR ss:[edi]
  41282c:	mov    al,ds:0xe46240fd
  412831:	mov    dh,0x83
  412833:	shl    BYTE PTR [ebx-0x28],0x91
  412837:	enter  0x69bb,0x8b
  41283b:	dec    eax
  41283c:	rcr    DWORD PTR [edi+eax*8],cl
  41283f:	sbb    eax,0xdc027bd1
  412844:	push   ds
  412845:	mov    bl,0x3f
  412847:	and    DWORD PTR ds:[eax-0x7cfd21e],esp
  41284e:	int3   
  41284f:	pushf  
  412850:	test   eax,edi
  412852:	imul   esp,ebx,0xffffff97
  412855:	xchg   ebx,eax
  412856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412857:	pop    ebp
  412858:	fistp  QWORD PTR [edi-0x45249021]
  41285e:	adc    BYTE PTR [ebx],dh
  412860:	mov    bh,0xdb
  412862:	sbb    BYTE PTR [esi+0x5449186c],cl
  412868:	pmaxub mm4,mm5
  41286b:	sbb    DWORD PTR [ebp+edi*1-0x6],0x41
  412870:	pop    esp
  412871:	in     al,0x42
  412873:	mov    ch,cl
  412875:	fucom  st(1)
  412877:	pop    ebx
  412878:	(bad)  
  412879:	cmp    ebx,DWORD PTR [edi+0x24]
  41287c:	pop    ss
  41287d:	cwde   
  41287e:	leave  
  41287f:	jne    0x412847
  412881:	push   ss
  412882:	mul    edi
  412884:	adc    al,0x72
  412886:	and    BYTE PTR [esi+0x6ab9e1ca],cl
  41288c:	xor    eax,0x2c1aac07
  412891:	aaa    
  412892:	adc    al,0xda
  412894:	jne    0x41287a
  412896:	and    DWORD PTR [ebx],ebx
  412898:	fisub  WORD PTR [esi]
  41289a:	int3   
  41289b:	daa    
  41289c:	fdivr  st,st(4)
  41289e:	adc    DWORD PTR [eax-0x2aae0625],0x13a4911c
  4128a8:	xor    eax,0xafdcceb
  4128ad:	addr16 test eax,0x17cd92cd
  4128b3:	iret   
  4128b4:	mov    BYTE PTR [esi-0x771904d0],bl
  4128ba:	push   ss
  4128bb:	or     BYTE PTR [eax],0x8c
  4128be:	sti    
  4128bf:	push   0xcbca42ed
  4128c4:	int    0xab
  4128c6:	ret    
  4128c7:	loop   0x412907
  4128c9:	inc    eax
  4128ca:	cmc    
  4128cb:	aas    
  4128cc:	xor    esi,DWORD PTR [esi-0xc]
  4128cf:	or     ecx,DWORD PTR [esi-0x17]
  4128d2:	jns    0x4128a1
  4128d4:	or     eax,0xf1173726
  4128d9:	push   ecx
  4128da:	xchg   ecx,eax
  4128db:	xchg   esi,eax
  4128dc:	add    DWORD PTR [eax-0x5d8d0aad],ebx
  4128e2:	(bad)  
  4128e3:	hlt    
  4128e4:	in     eax,dx
  4128e5:	mov    edi,0x6ae761b9
  4128ea:	call   0xebd370db
  4128ef:	adc    BYTE PTR [edx+0x273a113f],dh
  4128f5:	mov    ch,0x41
  4128f7:	pop    esi
  4128f8:	mov    ecx,0xb1d1202a
  4128fd:	shl    DWORD PTR ds:0x91b98a58,0xf3
  412904:	sbb    eax,0xd4b65061
  412909:	inc    ebp
  41290a:	xchg   edi,eax
  41290b:	mov    edx,esi
  41290d:	hlt    
  41290e:	push   eax
  41290f:	push   0x77
  412911:	aas    
  412912:	jmp    0x4128a2
  412914:	inc    edi
  412915:	(bad)
  412918:	ins    DWORD PTR es:[edi],dx
  412919:	outs   dx,BYTE PTR ds:[esi]
  41291a:	retf   
  41291b:	sbb    ah,al
  41291d:	cmc    
  41291e:	mov    al,bh
  412920:	hlt    
  412921:	pushf  
  412922:	dec    ebp
  412923:	mov    eax,0xb0e2877d
  412928:	leave  
  412929:	mov    ecx,0x4d89e54d
  41292e:	push   cs
  41292f:	sbb    DWORD PTR [eax-0x34],0xffffffaa
  412933:	xor    cl,dl
  412935:	push   ecx
  412936:	fcomip st,st(5)
  412938:	sub    eax,0xc37e7ae5
  41293d:	cmp    BYTE PTR ss:[edx],0xaf
  412941:	inc    edx
  412942:	jmp    0x41296c
  412944:	lods   al,BYTE PTR ds:[esi]
  412945:	sbb    al,0xfd
  412947:	lds    ecx,FWORD PTR [edx+edx*2-0xdf68605]
  41294e:	add    esi,DWORD PTR [esp+ebx*8+0x19456afd]
  412955:	out    dx,eax
  412956:	pop    edx
  412957:	cmp    bl,bl
  412959:	mov    edx,0x1dbc954f
  41295e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295f:	sbb    BYTE PTR [edx+0x4d],al
  412962:	mov    bh,0x87
  412964:	loop   0x41291e
  412966:	lods   eax,DWORD PTR ds:[esi]
  412967:	(bad)  
  412968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412969:	nop
  41296a:	add    DWORD PTR [esp+ecx*1+0x0],0xaabc13c9
  412972:	ins    BYTE PTR es:[edi],dx
  412973:	xor    ebp,ebx
  412975:	adc    ch,BYTE PTR [edi]
  412977:	jge    0x4129db
  412979:	add    eax,0xbd4312cd
  41297e:	loop   0x41298d
  412980:	sbb    al,0xe1
  412982:	stos   DWORD PTR es:[edi],eax
  412983:	pop    edi
  412984:	push   ss
  412985:	jae    0x41291f
  412987:	into   
  412988:	jmp    0x5594:0xea35aae8
  41298f:	into   
  412990:	clc    
  412991:	dec    edx
  412992:	jmp    0xeaaa:0xec7ea887
  412999:	cli    
  41299a:	punpckhwd mm6,QWORD PTR [ebx]
  41299d:	mov    esp,0x2accebcc
  4129a2:	leave  
  4129a3:	pop    edi
  4129a4:	pop    ecx
  4129a5:	(bad)  
  4129a6:	retf   0xdd33
  4129a9:	adc    eax,0x788bb2c6
  4129ae:	cmc    
  4129af:	adc    DWORD PTR [eax],ebp
  4129b1:	add    eax,DWORD PTR [esi-0x6d]
  4129b4:	add    DWORD PTR [eax-0x7dec6c58],0x50
  4129bb:	push   ds
  4129bc:	stc    
  4129bd:	pop    esi
  4129be:	mov    bh,0xfa
  4129c0:	sbb    eax,0x74ed8d4
  4129c5:	ins    DWORD PTR es:[edi],dx
  4129c6:	ret    
  4129c7:	fld    TBYTE PTR [ebp-0x1e]
  4129ca:	xor    eax,0x805f526e
  4129cf:	sahf   
  4129d0:	icebp  
  4129d1:	outs   dx,BYTE PTR ds:[esi]
  4129d2:	clc    
  4129d3:	add    al,0x6b
  4129d5:	popf   
  4129d6:	or     bl,bh
  4129d8:	fucomi st,st(3)
  4129da:	aam    0x89
  4129dc:	fmul   QWORD PTR [ebp+0x27629ee6]
  4129e2:	pop    es
  4129e3:	xchg   ebp,eax
  4129e4:	in     eax,0x6c
  4129e6:	adc    BYTE PTR [edx+ebp*1],al
  4129e9:	mov    ah,0x6e
  4129eb:	outs   dx,BYTE PTR ds:[esi]
  4129ec:	or     eax,0xeb7a528c
  4129f1:	daa    
  4129f2:	inc    ebx
  4129f3:	popa   
  4129f4:	and    dl,ch
  4129f6:	mov    ss,WORD PTR [ebp+0x5715a562]
  4129fc:	mov    bh,0x80
  4129fe:	loope  0x412a19
  412a00:	dec    esi
  412a01:	sbb    BYTE PTR [edi],ch
  412a03:	mov    esi,0xcee7e0f6
  412a08:	cmp    dh,ch
  412a0a:	arpl   WORD PTR ds:[esi-0x70e812dc],bp
  412a11:	sub    ah,BYTE PTR [ecx+esi*8+0x2812c34c]
  412a18:	inc    esi
  412a19:	cld    
  412a1a:	adc    eax,0x8dc542da
  412a1f:	mov    ds:0x7b544e41,eax
  412a24:	inc    edi
  412a25:	xchg   ebx,eax
  412a26:	hlt    
  412a27:	loopne 0x412aa7
  412a29:	xor    dh,dh
  412a2b:	aad    0xa8
  412a2d:	bnd jnp 0x4129b9
  412a30:	jl     0x4129be
  412a32:	jmp    0xc79c:0xe61d6def
  412a39:	cmp    dh,BYTE PTR [edx-0x3f]
  412a3c:	pop    ds
  412a3d:	test   DWORD PTR [edi-0x7d],0x817a26ab
  412a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a45:	je     0x412a4e
  412a47:	std    
  412a48:	aam    0xce
  412a4a:	lahf   
  412a4b:	mov    edx,0xba2004fa
  412a50:	sub    esi,DWORD PTR [ebp-0x62]
  412a53:	ja     0x412aa7
  412a55:	test   eax,0xa7fb4215
  412a5a:	push   esi
  412a5b:	adc    ch,dh
  412a5d:	xor    BYTE PTR ds:0x334ab1e2,ch
  412a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a64:	es fwait
  412a66:	icebp  
  412a67:	push   esi
  412a68:	sub    DWORD PTR ds:0x93e55419,eax
  412a6e:	xor    ax,0x6dd
  412a72:	mov    edi,0x4dd9442e
  412a77:	push   ss
  412a78:	ror    DWORD PTR [ecx-0x4],0xb2
  412a7c:	xchg   esi,eax
  412a7d:	sbb    eax,0x707c4617
  412a82:	xlat   BYTE PTR ds:[ebx]
  412a83:	sbb    al,0x67
  412a85:	imul   ebx,DWORD PTR [edx-0x297aecf3],0xd070dfd6
  412a8f:	pop    eax
  412a90:	xor    eax,0x58862ca7
  412a95:	cmp    cl,BYTE PTR [edi]
  412a97:	adc    BYTE PTR ds:0xb70ba98e,ah
  412a9d:	or     eax,0x5c46eb55
  412aa2:	fdivr  DWORD PTR [esi-0x4966d87a]
  412aa8:	jnp    0x412acb
  412aaa:	sbb    ecx,DWORD PTR [ebx-0x1e]
  412aad:	pop    es
  412aae:	push   ss
  412aaf:	jg     0x412a9e
  412ab1:	dec    ecx
  412ab2:	and    BYTE PTR [edi],al
  412ab4:	push   es
  412ab5:	push   esp
  412ab6:	into   
  412ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab8:	mov    edi,0xc9bed6a4
  412abd:	jne    0x412abe
  412abf:	sbb    BYTE PTR [edi+ecx*8+0x1e],ah
  412ac3:	xlat   BYTE PTR ds:[ebx]
  412ac4:	and    BYTE PTR [esi],cl
  412ac6:	ins    BYTE PTR es:[edi],dx
  412ac7:	push   ss
  412ac8:	mov    bl,0xb9
  412aca:	xchg   DWORD PTR [ecx],eax
  412acc:	mov    cl,0x7c
  412ace:	inc    bh
  412ad0:	in     al,dx
  412ad1:	scas   eax,DWORD PTR es:[edi]
  412ad2:	sahf   
  412ad3:	sub    al,0xf4
  412ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ad6:	ret    
  412ad7:	mov    edx,0xf0d380d5
  412adc:	aad    0x92
  412ade:	pop    es
  412adf:	or     eax,0x8dadc763
  412ae4:	sar    BYTE PTR [ebx+eax*2],0x23
  412ae8:	push   0x558f35be
  412aed:	adc    bl,BYTE PTR [eax+0x12016388]
  412af3:	stos   DWORD PTR es:[edi],eax
  412af4:	sbb    ch,BYTE PTR [edx+0x14432492]
  412afa:	cmp    al,0xd5
  412afc:	xchg   ebx,eax
  412afd:	ins    BYTE PTR es:[edi],dx
  412afe:	ins    BYTE PTR es:[edi],dx
  412aff:	sbb    BYTE PTR [ecx+0x5dde2160],0x5f
  412b06:	out    0x61,eax
  412b08:	fistp  DWORD PTR [edx]
  412b0a:	adc    eax,0xd9752be9
  412b0f:	xor    bl,BYTE PTR es:[ebx]
  412b12:	inc    edx
  412b13:	push   ebx
  412b14:	ror    BYTE PTR [ecx],1
  412b16:	dec    ebp
  412b17:	jecxz  0x412b49
  412b19:	nop
  412b1a:	es (bad) 
  412b1c:	mov    ss,WORD PTR [ebp-0xa]
  412b1f:	xchg   edi,eax
  412b20:	fwait
  412b21:	push   eax
  412b22:	and    BYTE PTR [ebp+0x71275229],bh
  412b28:	mov    ebp,ebp
  412b2a:	dec    esp
  412b2b:	inc    ebp
  412b2c:	sub    eax,0x71c33512
  412b31:	add    DWORD PTR [esi],0x1fb17802
  412b37:	(bad)  
  412b38:	cmp    dh,BYTE PTR [edx]
  412b3a:	jp     0x412b54
  412b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3d:	jle    0x412af5
  412b3f:	lock and eax,0x15c122ec
  412b45:	add    esp,DWORD PTR [edi]
  412b47:	aaa    
  412b48:	lods   al,BYTE PTR ds:[esi]
  412b49:	sbb    edi,edx
  412b4b:	shr    BYTE PTR [ebp+0x1da209ad],cl
  412b51:	sub    BYTE PTR [ecx+0x33],bh
  412b54:	push   edx
  412b55:	out    0xce,eax
  412b57:	call   0xfda2:0x60b096eb
  412b5e:	js     0x412bc6
  412b60:	xor    esi,ebp
  412b62:	pop    edi
  412b63:	ret    
  412b64:	(bad)  
  412b66:	cdq    
  412b67:	cli    
  412b68:	mov    cl,bh
  412b6a:	mov    edx,0x33b4ee19
  412b6f:	jae    0x412ba9
  412b71:	jbe    0x412bae
  412b73:	test   esp,ebx
  412b75:	add    DWORD PTR [ebp-0x24],edx
  412b78:	int3   
  412b79:	xchg   esp,eax
  412b7a:	fsubr  DWORD PTR [ebp+0x40]
  412b7d:	into   
  412b7e:	into   
  412b7f:	dec    ebx
  412b80:	retf   
  412b81:	adc    al,0x4c
  412b83:	push   0x3b
  412b85:	sub    ebx,DWORD PTR [edi-0x3e136b6e]
  412b8b:	dec    ecx
  412b8c:	iret   
  412b8d:	xor    ah,bh
  412b8f:	mov    ch,0xf7
  412b91:	xor    DWORD PTR [ebx+0x49],esp
  412b94:	mov    ebp,0xb72f0f7a
  412b99:	mov    esi,0x952cc48
  412b9e:	sahf   
  412b9f:	daa    
  412ba0:	(bad)  
  412ba1:	aas    
  412ba2:	or     eax,DWORD PTR [edi+0x366c2214]
  412ba8:	je     0x412b54
  412baa:	xlat   BYTE PTR ds:[ebx]
  412bab:	(bad)  
  412bac:	popf   
  412bad:	push   ebx
  412bae:	das    
  412baf:	test   bl,ah
  412bb1:	popf   
  412bb2:	adc    DWORD PTR [ebx+0x61],edx
  412bb5:	retf   0x83af
  412bb8:	pop    edx
  412bb9:	adc    edi,DWORD PTR [edx-0x4716e8dd]
  412bbf:	inc    edx
  412bc0:	push   cs
  412bc1:	ins    DWORD PTR es:[edi],dx
  412bc2:	js     0x412be4
  412bc4:	push   0xb6179813
  412bc9:	imul   ebp,DWORD PTR [eax],0xf6ae48f1
  412bcf:	(bad)  
  412bd2:	jne    0x412ba7
  412bd4:	test   BYTE PTR [edx-0x685be360],bh
  412bda:	cli    
  412bdb:	jns    0x412b72
  412bdd:	xor    dh,BYTE PTR [ebp+0x481458a4]
  412be3:	mov    dl,ch
  412be5:	and    eax,0xdf581f5b
  412bea:	popf   
  412beb:	xchg   BYTE PTR [edi+0x58433829],dl
  412bf1:	inc    esi
  412bf2:	fwait
  412bf3:	push   esi
  412bf4:	add    eax,esp
  412bf6:	inc    ecx
  412bf7:	arpl   si,bp
  412bf9:	stos   BYTE PTR es:[edi],al
  412bfa:	jl     0x412beb
  412bfc:	ins    DWORD PTR es:[edi],dx
  412bfd:	mov    ch,0xc3
  412bff:	xor    BYTE PTR [edi+0x2e344c36],cl
  412c05:	jne    0x412c16
  412c07:	enter  0x2dbf,0xa1
  412c0b:	push   ebx
  412c0c:	jns    0x412c6f
  412c0e:	dec    edx
  412c0f:	stos   DWORD PTR es:[edi],eax
  412c10:	repnz or al,0xe1
  412c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c14:	int3   
  412c15:	loop   0x412bbf
  412c17:	mov    eax,0xdc1538bd
  412c1c:	add    DWORD PTR [esi+0x3b],ecx
  412c1f:	call   0x6cfa43b4
  412c24:	mov    dh,BYTE PTR [edx-0x49]
  412c27:	outs   dx,BYTE PTR ds:[esi]
  412c28:	out    0xb5,eax
  412c2a:	imul   esi,DWORD PTR [edi-0x5],0x29
  412c2e:	or     dl,BYTE PTR [ebx]
  412c30:	jmp    0x412c00
  412c32:	and    ch,0xc4
  412c35:	adc    BYTE PTR [ecx],dl
  412c37:	xchg   ecx,eax
  412c38:	cs cld 
  412c3a:	sub    ah,BYTE PTR [ecx-0x1e]
  412c3d:	xor    al,0xca
  412c3f:	mov    edx,0x638ced0e
  412c44:	sbb    al,0x56
  412c46:	fdiv   st(5),st
  412c48:	gs (bad) 
  412c4a:	xchg   esi,eax
  412c4b:	sbb    DWORD PTR [esi-0x71],ebp
  412c4e:	pop    eax
  412c4f:	leave  
  412c50:	pop    esp
  412c51:	jns    0x412c53
  412c53:	or     eax,DWORD PTR [esi+ecx*1]
  412c56:	dec    ebx
  412c57:	mov    ebp,0xdaf4d7fa
  412c5c:	pop    ebp
  412c5d:	aad    0x2d
  412c5f:	mov    ebx,0xef8049e3
  412c64:	ins    DWORD PTR es:[edi],dx
  412c65:	retf   
  412c66:	sar    BYTE PTR [ebx],1
  412c68:	mov    dh,0x24
  412c6a:	xchg   ecx,eax
  412c6b:	adc    ebx,edx
  412c6d:	jg     0x412c94
  412c6f:	mov    ds:0x7a6d9752,eax
  412c74:	sbb    BYTE PTR [ebx+0x44c32b12],al
  412c7a:	cmc    
  412c7b:	mov    ds,ebp
  412c7d:	jns    0x412cf0
  412c7f:	push   es
  412c80:	jmp    0x8f81:0x734afba
  412c87:	push   ds
  412c88:	bound  ecx,QWORD PTR [ebx-0x5c]
  412c8b:	pop    ss
  412c8c:	fwait
  412c8d:	sub    DWORD PTR ds:0x5cb4478,0x376e5d65
  412c97:	xor    DWORD PTR [edx-0x38a7c273],0x75eead10
  412ca1:	add    DWORD PTR [eax],ecx
  412ca3:	mov    cl,0x7d
  412ca5:	pop    edi
  412ca6:	nop
  412ca7:	(bad)  
  412ca8:	xchg   ebp,eax
  412ca9:	outs   dx,BYTE PTR ds:[esi]
  412caa:	xchg   ebx,eax
  412cab:	mov    ds,WORD PTR [eax]
  412cad:	in     al,0xd7
  412caf:	bound  eax,QWORD PTR ds:0x83af2a9e
  412cb5:	ins    BYTE PTR es:[edi],dx
  412cb6:	push   ecx
  412cb7:	(bad)  
  412cb9:	push   ds
  412cba:	outs   dx,DWORD PTR ds:[esi]
  412cbb:	mov    esi,0xa9db1ea3
  412cc0:	ficom  DWORD PTR [edx]
  412cc2:	fwait
  412cc3:	icebp  
  412cc4:	pushf  
  412cc5:	add    DWORD PTR [eax-0x484eb8b2],edx
  412ccb:	jnp    0x412cfa
  412ccd:	dec    esp
  412cce:	es scas eax,DWORD PTR es:[edi]
  412cd0:	in     al,0x58
  412cd2:	and    dh,bl
  412cd4:	and    ecx,DWORD PTR [esp+eax*8]
  412cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cd8:	sub    eax,esp
  412cda:	jecxz  0x412cd7
  412cdc:	cs pop ebp
  412cde:	pop    edi
  412cdf:	and    DWORD PTR [ecx+ebx*4+0x4b],eax
  412ce3:	sbb    edi,0x28
  412ce6:	cmp    BYTE PTR [edx-0x66],cl
  412ce9:	fcomp  QWORD PTR [esi+0xe]
  412cec:	les    edx,FWORD PTR [edi+0x5a]
  412cef:	cmc    
  412cf0:	sti    
  412cf1:	add    al,0x6b
  412cf3:	and    dl,cl
  412cf5:	push   eax
  412cf6:	adc    BYTE PTR [edx],0xad
  412cf9:	dec    edx
  412cfa:	sar    DWORD PTR [ecx],1
  412cfc:	fwait
  412cfd:	shl    DWORD PTR [edx-0x7b129f41],cl
  412d03:	mov    DWORD PTR fs:[edi-0x59c47b7f],0xa96cb25b
  412d0e:	push   edi
  412d0f:	mov    ds:0xb23756fe,eax
  412d14:	test   DWORD PTR [edx],ecx
  412d16:	mov    al,0xc8
  412d18:	jge    0x412d2f
  412d1a:	lea    ebp,[ebp+0x5cb11308]
  412d20:	test   eax,0x519ad2ea
  412d25:	or     edi,DWORD PTR [eax]
  412d27:	cld    
  412d28:	push   ecx
  412d29:	call   0x146e:0x39c5a04c
  412d30:	jns    0x412cf7
  412d32:	loope  0x412cd4
  412d34:	push   0x7856199f
  412d39:	jo     0x412d40
  412d3b:	push   0xe4a16cd3
  412d40:	xchg   esi,eax
  412d41:	mov    ebx,0x51a011f9
  412d46:	icebp  
  412d47:	pushf  
  412d48:	in     eax,dx
  412d49:	bound  esi,QWORD PTR [edi]
  412d4b:	ficom  DWORD PTR [ebx]
  412d4d:	shr    BYTE PTR [ebp-0x65],0x5
  412d51:	fldenv fs:[esi+0x4e]
  412d55:	mov    bl,0x81
  412d57:	jg     0x412d1f
  412d59:	ins    DWORD PTR es:[edi],dx
  412d5a:	xor    esi,DWORD PTR [esi*1+0x5c8e15ad]
  412d61:	gs xor edx,edi
  412d64:	inc    edx
  412d65:	call   0x9cf8a26d
  412d6a:	cmp    eax,0x46f4120b
  412d6f:	and    al,0x2c
  412d71:	jg     0x412d07
  412d73:	test   al,0xf3
  412d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d76:	daa    
  412d77:	adc    BYTE PTR [edx+0x6d],cl
  412d7a:	xor    eax,0x8721ba31
  412d7f:	inc    edi
  412d80:	dec    eax
  412d81:	jns    0x412d08
  412d83:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412d85:	(bad)  
  412d86:	imul   BYTE PTR [edx-0x52]
  412d89:	xor    edx,ecx
  412d8b:	adc    BYTE PTR [ebx+0x5c],ah
  412d8e:	ins    BYTE PTR es:[edi],dx
  412d8f:	xor    DWORD PTR ds:0xe1c4a768,eax
  412d95:	imul   ebx,DWORD PTR [ebx+0x56f7bb06],0xdd3cfafd
  412d9f:	sbb    al,0x7a
  412da1:	sub    BYTE PTR [ebp-0x4b],ch
  412da4:	adc    dl,BYTE PTR [ecx+0x7108680]
  412daa:	ret    0x4917
  412dad:	or     DWORD PTR [edi],ebp
  412daf:	xor    al,0x4b
  412db1:	sbb    bh,dh
  412db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db4:	lds    edx,FWORD PTR [edi+0x6a]
  412db7:	push   edx
  412db8:	xchg   edx,eax
  412db9:	jmp    0x7db15820
  412dbe:	aam    0x2e
  412dc0:	or     al,0x9c
  412dc2:	add    ch,BYTE PTR [edx-0x3d]
  412dc5:	xchg   edi,eax
  412dc6:	shr    BYTE PTR [ebp-0x53],0xfc
  412dca:	adc    eax,0xaf4a96bc
  412dcf:	iret   
  412dd0:	cld    
  412dd1:	frndint 
  412dd3:	nop    DWORD PTR [edx]
  412dd6:	jne    0x412dbf
  412dd8:	loopne 0x412e10
  412dda:	test   BYTE PTR [ebx-0x51db4d54],al
  412de0:	jmp    0xc3ca:0xaf4f825d
  412de7:	jno    0x412e27
  412de9:	push   ebx
  412dea:	add    BYTE PTR [eax-0x7b],0x8
  412dee:	sub    al,0x9a
  412df0:	mov    esp,0xf24b403d
  412df5:	sbb    ecx,DWORD PTR [ebx+0x7d8b46b6]
  412dfb:	icebp  
  412dfc:	cwde   
  412dfd:	jnp    0x412de8
  412dff:	jl     0x412dae
  412e01:	push   esp
  412e02:	mov    ?,WORD PTR [ebx+eax*4+0x61]
  412e06:	xor    al,0xe4
  412e08:	jbe    0x412de4
  412e0a:	lods   eax,DWORD PTR ds:[esi]
  412e0b:	cli    
  412e0c:	and    esi,DWORD PTR [ebx+0x30]
  412e0f:	sub    al,0x3
  412e11:	outs   dx,DWORD PTR ds:[esi]
  412e12:	adc    ebx,eax
  412e14:	sbb    al,0x0
  412e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e17:	int3   
  412e18:	call   0x4179213a
  412e1d:	adc    ebp,DWORD PTR [edx+eax*4-0x2]
  412e21:	shl    BYTE PTR [esi+0x579f37d],1
  412e27:	mov    ebp,0xe43484ce
  412e2c:	lods   eax,DWORD PTR ds:[esi]
  412e2d:	rcl    BYTE PTR [esi+0x49],1
  412e30:	and    BYTE PTR [edx+edx*1+0x3e54b3f3],bl
  412e37:	les    eax,FWORD PTR [edi]
  412e39:	cdq    
  412e3a:	or     DWORD PTR [eax+0x63a30f16],ecx
  412e40:	adc    DWORD PTR [esi-0x7a8d89f3],eax
  412e46:	in     eax,0x15
  412e48:	scas   al,BYTE PTR es:[edi]
  412e49:	adc    al,ch
  412e4b:	loopne 0x412e7c
  412e4d:	aam    0x5f
  412e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e50:	mov    al,0x1d
  412e52:	mov    ah,0x26
  412e54:	neg    eax
  412e56:	inc    edi
  412e57:	adc    eax,0xb51bcd1e
  412e5c:	cmp    DWORD PTR [edi-0x1e78a239],edx
  412e62:	loope  0x412dfa
  412e64:	xlat   BYTE PTR ds:[ebx]
  412e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e66:	xor    BYTE PTR ds:0x3adabde5,ah
  412e6c:	clc    
  412e6d:	icebp  
  412e6e:	sbb    al,0xe3
  412e70:	inc    eax
  412e71:	and    dh,BYTE PTR [edx-0x3bad3549]
  412e77:	(bad)  [ebp+0xa]
  412e7a:	push   esp
  412e7b:	sbb    BYTE PTR [ebx-0x17],bl
  412e7e:	cld    
  412e7f:	pop    edi
  412e80:	jns    0x412ea9
  412e82:	call   0x6fff:0x1aeea4f6
  412e89:	jg     0x412e63
  412e8b:	out    0x25,eax
  412e8d:	jmp    0xfbb5fe95
  412e92:	in     eax,0x13
  412e94:	outs   dx,DWORD PTR ds:[esi]
  412e95:	test   ebp,eax
  412e97:	mov    ebp,0xacfe24a6
  412e9c:	pop    ecx
  412e9d:	xor    bl,bh
  412e9f:	inc    ebx
  412ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea1:	test   BYTE PTR [edi+0x6b],bl
  412ea4:	mov    bh,BYTE PTR [esi+ecx*1-0x1c]
  412ea8:	pop    esi
  412ea9:	retf   
  412eaa:	mov    cl,0xd2
  412eac:	lea    edx,[esi+0x3f]
  412eaf:	xor    eax,DWORD PTR [edx]
  412eb1:	fsubr  st,st(3)
  412eb3:	out    dx,eax
  412eb4:	stos   BYTE PTR es:[edi],al
  412eb5:	enter  0xe7a6,0xf8
  412eb9:	jp     0x412e5a
  412ebb:	jns    0x412f2c
  412ebd:	mov    DWORD PTR [esi],esp
  412ebf:	fistp  DWORD PTR [ecx+0x3c7fbb4]
  412ec5:	mov    ecx,DWORD PTR ds:0xc3814368
  412ecb:	bound  esp,QWORD PTR [ebp+0x74dc7032]
  412ed1:	lds    eax,FWORD PTR [edx-0x6523f2cc]
  412ed7:	mov    ecx,DWORD PTR [edx]
  412ed9:	pop    esp
  412eda:	out    dx,al
  412edb:	dec    ebx
  412edc:	(bad)  
  412edd:	aas    
  412ede:	pop    es
  412edf:	mov    WORD PTR [ecx+0x7],fs
  412ee2:	xor    DWORD PTR [ecx],edx
  412ee4:	das    
  412ee5:	sahf   
  412ee6:	mov    WORD PTR [eax-0x36],ss
  412ee9:	jmp    0x5b1e:0x62d62581
  412ef0:	or     eax,0x3b26bea
  412ef5:	in     eax,0xb9
  412ef7:	jmp    0x412f20
  412ef9:	jmp    0xb69d9ce5
  412efe:	shl    DWORD PTR [ecx+eiz*4+0x37],cl
  412f02:	(bad)  [ebp-0x19ea529d]
  412f08:	sbb    cl,BYTE PTR [edx]
  412f0a:	mov    eax,0xc46efa86
  412f0f:	fmul   DWORD PTR [esi-0x5b5c0c84]
  412f15:	aaa    
  412f16:	leave  
  412f17:	aas    
  412f18:	retf   
  412f19:	jb     0x412f29
  412f1b:	mov    ds:0x8f5e4d7f,eax
  412f20:	and    dh,BYTE PTR [eax]
  412f22:	push   ds
  412f23:	or     DWORD PTR [edi+0x2],edi
  412f26:	sub    eax,0x8559d503
  412f2b:	out    0x5b,eax
  412f2d:	sub    eax,0xf9a7c023
  412f32:	mov    ds:0xf85dcb00,eax
  412f37:	mov    DWORD PTR [ebx],edi
  412f39:	mov    al,0x8c
  412f3b:	addr16 jmp 0x1adcb3a
  412f41:	and    eax,0x10fc91a6
  412f46:	or     al,0xf2
  412f48:	ja     0x412ef6
  412f4a:	call   0xfffae422
  412f4f:	inc    edx
  412f50:	jmp    0xfcd0044e
  412f55:	(bad)  
  412f56:	outs   dx,DWORD PTR ds:[esi]
  412f57:	ja     0x412f87
  412f59:	mov    edx,0x5355cda8
  412f5e:	(bad)  
  412f5f:	std    
  412f60:	jecxz  0x412ef3
  412f62:	lahf   
  412f63:	jns    0x412f5a
  412f65:	rcl    ebx,cl
  412f67:	dec    edi
  412f68:	imul   ecx,DWORD PTR [ecx-0x2c98b9f],0x5e
  412f6f:	dec    ebp
  412f70:	outs   dx,BYTE PTR ds:[esi]
  412f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f73:	xchg   ebp,eax
  412f74:	mov    eax,ds:0x22aecc68
  412f79:	xchg   ebx,eax
  412f7a:	pushf  
  412f7b:	enter  0x45de,0xa7
  412f7f:	adc    cl,BYTE PTR [eax+0x3c22a3f9]
  412f85:	cwde   
  412f86:	pop    es
  412f87:	inc    ecx
  412f88:	adc    DWORD PTR ds:0x28693e10,eax
  412f8e:	inc    ecx
  412f8f:	rol    BYTE PTR fs:[esp+edx*2+0x13],cl
  412f94:	jge    0x412f4b
  412f96:	xor    eax,0xb65c5345
  412f9b:	loop   0x412f8f
  412f9d:	in     eax,dx
  412f9e:	retf   
  412f9f:	xor    ecx,DWORD PTR [edx-0x3a]
  412fa2:	mov    bh,0x45
  412fa4:	dec    edx
  412fa5:	test   al,0xc7
  412fa7:	or     DWORD PTR [edx-0x41376487],esi
  412fad:	nop
  412fae:	stos   DWORD PTR es:[edi],eax
  412faf:	dec    ecx
  412fb0:	int3   
  412fb1:	ret    0xa4dc
  412fb4:	adc    al,0x2
  412fb6:	packssdw mm5,mm4
  412fb9:	(bad)  
  412fba:	clc    
  412fbb:	pop    edi
  412fbc:	jp     0x412f9f
  412fbe:	jae    0x412f89
  412fc0:	retf   0x7e66
  412fc3:	xor    BYTE PTR [edi-0x5c],bh
  412fc6:	jmp    0x9ce4af09
  412fcb:	aas    
  412fcc:	xor    edx,DWORD PTR [ebp+esi*1-0xd]
  412fd0:	mov    ax,ds:0x45011b0c
  412fd6:	addr16 jge 0x412f78
  412fd9:	mov    esi,0x38be3619
  412fde:	gs dec edi
  412fe0:	and    bh,BYTE PTR ds:0x81997f61
  412fe6:	sahf   
  412fe7:	mov    eax,0x8c08e367
  412fec:	or     DWORD PTR [ecx+0x53283cce],edi
  412ff2:	push   edi
  412ff3:	cmc    
  412ff4:	push   ebx
  412ff5:	push   es
  412ff6:	test   eax,0x54906191
  412ffb:	and    al,0x18
  412ffd:	sub    DWORD PTR [edi],0x57
  413000:	or     eax,0x15f96db
  413005:	cmp    eax,ebp
  413007:	xchg   bl,al
  413009:	test   al,0x75
  41300b:	scas   al,BYTE PTR es:[edi]
  41300c:	repz ret 0x97b3
  413010:	stos   DWORD PTR es:[edi],eax
  413011:	stos   BYTE PTR es:[edi],al
  413012:	sahf   
  413013:	or     al,0xc1
  413015:	sbb    DWORD PTR [esi+ebx*4-0x46],ebp
  413019:	ret    
  41301a:	xor    esp,DWORD PTR [ecx-0x40]
  41301d:	fcomp  QWORD PTR [ebp+0x70]
  413020:	pop    ds
  413021:	scas   al,BYTE PTR es:[edi]
  413022:	mov    esi,0xa1c9e396
  413027:	xchg   ecx,eax
  413028:	jecxz  0x413050
  41302a:	sar    BYTE PTR [ecx+ebp*1+0x9],0x17
  41302f:	jbe    0x41307c
  413031:	dec    ebp
  413032:	push   esp
  413033:	or     ebx,DWORD PTR [edx-0x74830a2d]
  413039:	push   ds
  41303a:	push   ds
  41303b:	sbb    al,BYTE PTR [ebx-0x3bfb3aa]
  413041:	mov    ebp,0x86139c3a
  413046:	pop    edx
  413047:	adc    eax,0xd35238d1
  41304c:	retf   0xc836
  41304f:	xchg   ebp,eax
  413050:	xor    BYTE PTR [eax+0x3072cb80],ch
  413056:	mov    es,eax
  413058:	sbb    al,0x9f
  41305a:	mov    bl,0xff
  41305c:	or     DWORD PTR [ebp-0x47],esp
  41305f:	adc    DWORD PTR [ecx],esi
  413061:	fwait
  413062:	and    ah,bh
  413064:	cmp    ebp,DWORD PTR [ebx]
  413066:	pop    edx
  413067:	jnp    0x4130e5
  413069:	sub    bl,BYTE PTR [eax+edx*4]
  41306c:	sbb    BYTE PTR [eax+0x6a],al
  41306f:	fdivr  st,st(4)
  413071:	pop    ds
  413072:	pop    ebp
  413074:	data16 into 
  413076:	push   esp
  413077:	lahf   
  413078:	ss jns 0x41308c
  41307b:	jnp    0x4130d2
  41307d:	xchg   esi,eax
  41307e:	mov    ecx,0x1dea509d
  413083:	mov    cl,0xe
  413085:	add    eax,0xb36dbfcc
  41308a:	fcomp  DWORD PTR [edi+0xdfa6444]
  413090:	mov    ebx,0xe66167db
  413095:	pop    es
  413096:	idiv   edi
  413098:	(bad)  
  413099:	jp     0x41305c
  41309b:	xor    eax,eax
  41309d:	sbb    al,0x34
  41309f:	icebp  
  4130a0:	xor    BYTE PTR [edi-0x55],dh
  4130a3:	push   esi
  4130a4:	mov    cl,0x7
  4130a6:	int3   
  4130a7:	xchg   esp,eax
  4130a8:	stc    
  4130a9:	cdq    
  4130aa:	dec    esi
  4130ab:	ret    0xa221
  4130ae:	pushf  
  4130af:	lods   eax,DWORD PTR ds:[esi]
  4130b0:	jbe    0x4130c3
  4130b2:	retf   
  4130b3:	sahf   
  4130b4:	fcomp  QWORD PTR [esi-0x2d3cd9ef]
  4130ba:	test   ebx,edi
  4130bc:	fidivr DWORD PTR [esi+0x5af30605]
  4130c2:	mov    ch,0xa9
  4130c4:	imul   ecx,DWORD PTR [esi],0x1a
  4130c7:	sbb    al,0xe1
  4130c9:	dec    esp
  4130ca:	aas    
  4130cb:	pop    esp
  4130cc:	sahf   
  4130cd:	mov    al,ds:0x21dc252f
  4130d2:	sub    ch,BYTE PTR [ebp+0x6b]
  4130d5:	repnz mov ds:0x6dd6e772,eax
  4130db:	popf   
  4130dc:	add    edi,DWORD PTR [edx+0x6326e161]
  4130e2:	fisub  WORD PTR [edi]
  4130e4:	mov    al,ds:0x23e94c73
  4130e9:	mov    edi,DWORD PTR [edx+0x7780c967]
  4130ef:	cmp    DWORD PTR [esi+0x6e],esi
  4130f2:	sbb    DWORD PTR [eax-0x52],eax
  4130f5:	lods   al,BYTE PTR ds:[esi]
  4130f6:	and    ebx,ecx
  4130f8:	outs   dx,BYTE PTR ds:[esi]
  4130f9:	inc    ecx
  4130fa:	aaa    
  4130fb:	adc    al,0xa7
  4130fd:	jbe    0x413124
  4130ff:	ins    BYTE PTR es:[edi],dx
  413100:	popf   
  413101:	pop    ecx
  413102:	(bad)  
  413103:	xchg   ebx,eax
  413104:	cmp    DWORD PTR [edi],0xd25c7955
  41310a:	add    ebp,ebp
  41310c:	pop    esp
  41310d:	fs pushf 
  41310f:	mov    ebx,0xca1c823
  413114:	jl     0x41313d
  413116:	fisttp DWORD PTR [ebx+edi*8]
  413119:	fucomi st,st(3)
  41311b:	or     DWORD PTR [ebx+0x69],ebx
  41311e:	push   0x4de36cbc
  413123:	sbb    al,0xa4
  413125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413126:	sub    bh,al
  413128:	(bad)  
  413129:	sar    BYTE PTR [edx+esi*2+0x9],1
  41312d:	mov    ch,0x65
  41312f:	call   0xc16716c0
  413134:	cmp    eax,0xca8604a9
  413139:	or     ebx,ebx
  41313b:	cwde   
  41313c:	mov    esp,0x63fd1839
  413141:	mulps  xmm4,XMMWORD PTR [ebx+eax*1+0x2ff51bf]
  413149:	in     al,dx
  41314a:	sub    DWORD PTR [esi+edi*4],eax
  41314d:	fdiv   DWORD PTR [edx-0x3e]
  413150:	mov    al,ds:0x8801e52d
  413155:	(bad)  
  413156:	jp     0x413191
  413158:	sub    ecx,ebp
  41315a:	jle    0x413118
  41315c:	(bad)  
  41315d:	mov    al,0x4d
  41315f:	or     BYTE PTR [ebx-0x4869a0d8],bl
  413165:	call   0xac09:0xe6c4a75d
  41316c:	add    ebp,DWORD PTR fs:[edi+0x74]
  413170:	outs   dx,BYTE PTR ds:[esi]
  413171:	pop    ebp
  413172:	ins    BYTE PTR es:[edi],dx
  413173:	(bad)  [ebp+0x73]
  413176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413177:	mov    edx,0x1cc5aa28
  41317c:	or     eax,0x759efc4e
  413181:	mov    BYTE PTR [ecx+edx*4+0x64],bh
  413185:	adc    edi,ebp
  413187:	popa   
  413188:	aam    0x77
  41318a:	in     eax,0xc2
  41318c:	call   0x5d16:0x69d5c92f
  413193:	push   ebp
  413194:	retf   
  413195:	sub    al,0x77
  413197:	push   edx
  413198:	xor    eax,DWORD PTR [esi-0x59]
  41319b:	bound  ecx,QWORD PTR [esi-0x32bd4946]
  4131a1:	pusha  
  4131a2:	arpl   WORD PTR [eax-0x3c79427],bx
  4131a8:	sbb    BYTE PTR ds:0x37b1920a,dl
  4131ae:	mov    esp,DWORD PTR [edx+0x1c8ae451]
  4131b4:	scas   eax,DWORD PTR es:[edi]
  4131b5:	and    esp,DWORD PTR [esi-0x2a2b77da]
  4131bb:	inc    esp
  4131bc:	add    eax,0xbdf19f8b
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	aas    
  4131c3:	repz mov bh,0x97
  4131c6:	xchg   edx,eax
  4131c7:	clc    
  4131c8:	mov    edi,0x2b15ee9
  4131cd:	out    dx,eax
  4131ce:	pop    eax
  4131cf:	push   ss
  4131d0:	repz dec ecx
  4131d2:	popf   
  4131d3:	mov    ebx,0x1da072b1
  4131d8:	push   ebx
  4131d9:	lock cmp ebx,eax
  4131dc:	sub    DWORD PTR [ebx],edi
  4131de:	inc    esp
  4131df:	push   0x3
  4131e1:	cmp    cl,bh
  4131e3:	or     dl,BYTE PTR [edx]
  4131e5:	jmp    0x4131bd
  4131e7:	xchg   ebp,eax
  4131e8:	sbb    ch,ch
  4131ea:	lahf   
  4131eb:	mov    bl,BYTE PTR [ecx]
  4131ed:	ret    
  4131ee:	push   DWORD PTR [ecx]
  4131f0:	popa   
  4131f1:	ins    DWORD PTR es:[edi],dx
  4131f2:	inc    edi
  4131f3:	dec    ebp
  4131f4:	jmp    0x4131ae
  4131f6:	xor    eax,0xa2ca770c
  4131fb:	cmp    DWORD PTR [edi],edx
  4131fd:	mov    dh,0x36
  4131ff:	and    DWORD PTR [ebp+0x33],ecx
  413202:	imul   ebp,DWORD PTR [edi],0xffffffe6
  413205:	cmc    
  413206:	mov    bl,0x7d
  413208:	jnp    0x4131fc
  41320a:	lods   eax,DWORD PTR ds:[esi]
  41320b:	(bad)  
  41320c:	xor    al,0x2a
  41320e:	push   0xd0e7cf52
  413213:	leave  
  413214:	mov    eax,ds:0xbc24b0c
  413219:	xor    DWORD PTR [edi+0x18faf19a],edx
  41321f:	ret    
  413220:	mov    bl,0x2f
  413222:	ss cmp al,0x70
  413225:	or     al,0xd9
  413227:	dec    ebp
  413228:	jge    0x413237
  41322a:	dec    edx
  41322b:	mov    ebp,DWORD PTR fs:[eax+0x63]
  41322f:	adc    eax,0x9514b620
  413234:	inc    ebp
  413235:	and    BYTE PTR [ecx+0x35],0xeb
  413239:	mov    WORD PTR [ecx-0x694451cd],?
  41323f:	leave  
  413240:	aas    
  413241:	inc    ebx
  413242:	xchg   BYTE PTR [ebx+esi*1+0x58],al
  413246:	mov    bh,0xba
  413248:	xchg   esi,eax
  413249:	and    BYTE PTR [esi+eax*8],dh
  41324c:	fs (bad) 
  41324e:	mov    ah,0x3f
  413250:	or     BYTE PTR [esi-0x6d3e0d23],ah
  413256:	adc    ah,ah
  413258:	add    DWORD PTR [ecx],edi
  41325a:	xchg   esi,eax
  41325b:	rol    dh,cl
  41325d:	fcom   DWORD PTR [ecx+0x46]
  413260:	push   0x6
  413262:	xchg   ebp,eax
  413263:	stc    
  413264:	ret    0xcfb4
  413267:	enter  0xc378,0x33
  41326b:	mov    DWORD PTR [eax+0x58],eax
  41326e:	jnp    0x413200
  413270:	mov    eax,ds:0x5fe070cc
  413275:	fwait
  413276:	mov    dl,0xa6
  413278:	ret    0x5440
  41327b:	lea    esp,[eax]
  41327d:	or     DWORD PTR [ebx+0x1cbf01d9],esi
  413283:	out    dx,eax
  413284:	and    eax,0xdce34484
  413289:	rol    edx,cl
  41328b:	xor    eax,0xfca49c66
  413290:	fwait
  413291:	mov    DWORD PTR [ebx+0x12],ebp
  413294:	xchg   ecx,eax
  413295:	into   
  413296:	rcl    DWORD PTR [edi],1
  413298:	pop    ds
  413299:	jmp    0xddcf:0xdd986367
  4132a0:	jmp    0x413235
  4132a2:	imul   eax,DWORD PTR [ebx+ecx*1-0x39edb1d4],0xf6374508
  4132ad:	aas    
  4132ae:	pop    ecx
  4132af:	xlat   BYTE PTR ds:[ebx]
  4132b0:	and    al,0x7c
  4132b2:	jns    0x413294
  4132b4:	mov    BYTE PTR [eax+eax*8+0x52],al
  4132b8:	fwait
  4132b9:	and    ah,dh
  4132bb:	rol    eax,0x14
  4132be:	dec    esi
  4132bf:	and    al,0x8
  4132c1:	jp     0x4132a6
  4132c3:	imul   ebx,esi,0x33
  4132c6:	ins    BYTE PTR es:[edi],dx
  4132c7:	jae    0x4132ad
  4132c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ca:	daa    
  4132cb:	out    dx,eax
  4132cc:	rcl    BYTE PTR [ebp-0x52],1
  4132cf:	jae    0x41332c
  4132d1:	stos   BYTE PTR es:[edi],al
  4132d2:	sbb    dl,BYTE PTR [edx-0x7d0f39b2]
  4132d8:	cmp    esi,DWORD PTR [ebx+0x9821f7]
  4132de:	pop    ebp
  4132df:	loopne 0x413265
  4132e1:	jmp    0x3a3c33d
  4132e6:	ret    
  4132e7:	stc    
  4132e8:	mov    edi,DWORD PTR [ebx+ebp*2-0x2295efd8]
  4132ef:	jecxz  0x413316
  4132f1:	adc    DWORD PTR [ebx-0x66742e8e],0x6a69959
  4132fb:	xor    eax,edx
  4132fd:	jns    0x4132ae
  4132ff:	leave  
  413300:	sub    ah,BYTE PTR [edx+0x1b]
  413303:	jp     0x4132aa
  413305:	jo     0x4132d3
  413307:	cmp    DWORD PTR es:[edx+0x2c],ecx
  41330b:	sbb    ah,BYTE PTR [ecx-0x66]
  41330e:	out    0xd0,eax
  413310:	daa    
  413311:	xchg   ebp,eax
  413312:	fadd   st(1),st
  413314:	jp     0x4132c4
  413316:	jmp    0x9295a4e2
  41331b:	cld    
  41331c:	cld    
  41331d:	xchg   esp,eax
  41331e:	xchg   ecx,eax
  41331f:	dec    ecx
  413320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413321:	dec    edx
  413322:	sbb    al,0x80
  413324:	cs inc ebx
  413326:	pop    ebx
  413327:	(bad)  
  413328:	dec    edx
  413329:	js     0x4132c3
  41332b:	iret   
  41332c:	or     DWORD PTR [ecx-0x5d],0x3196b9ca
  413333:	pop    esp
  413334:	jge    0x4132ff
  413336:	xchg   edi,eax
  413337:	iret   
  413338:	mov    ebx,0xd7e43a34
  41333d:	fldcw  WORD PTR [ecx+edi*8-0x49ad4811]
  413344:	xchg   ecx,eax
  413345:	gs adc eax,0x821cc148
  41334b:	jo     0x41337b
  41334d:	sub    ebp,DWORD PTR ds:0x9b9a
  413352:	or     edi,DWORD PTR [eax+0x73aa20fb]
  413358:	jecxz  0x413369
  41335a:	xor    BYTE PTR [ecx+ecx*4+0x9],al
  41335e:	sub    al,0x37
  413360:	test   BYTE PTR [bx+si],bl
  413363:	pop    ebx
  413364:	and    ecx,DWORD PTR [ecx+0x3f]
  413367:	iret   
  413368:	dec    esi
  413369:	xor    al,0xd3
  41336b:	and    DWORD PTR [edx],esp
  41336d:	cwde   
  41336e:	pop    esp
  41336f:	stos   DWORD PTR es:[edi],eax
  413370:	(bad)  
  413371:	std    
  413372:	es daa 
  413374:	icebp  
  413375:	xor    ebp,esi
  413377:	adc    BYTE PTR [ecx],dh
  413379:	je     0x413355
  41337b:	bound  edi,QWORD PTR [ebx+0x515c0ba6]
  413381:	js     0x413377
  413383:	daa    
  413384:	push   0xffffff8b
  413386:	cmp    eax,0x4d90fe44
  41338b:	push   edx
  41338c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41338d:	and    ecx,edx
  41338f:	shl    BYTE PTR [edx+0x19],cl
  413392:	sbb    BYTE PTR [edx],bl
  413394:	scas   eax,DWORD PTR es:[edi]
  413395:	sbb    eax,0xb7ce668c
  41339a:	daa    
  41339b:	daa    
  41339c:	out    dx,eax
  41339d:	inc    eax
  41339e:	dec    edi
  41339f:	clc    
  4133a0:	jmp    0x4133da
  4133a2:	(bad)  
  4133a3:	push   0xfffffff0
  4133a5:	push   ebp
  4133a6:	rcr    ebx,cl
  4133a8:	jge    0x413370
  4133aa:	dec    ecx
  4133ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ac:	push   ds
  4133ad:	mov    al,ds:0xf5d6d4ee
  4133b2:	test   DWORD PTR [ebx],ebx
  4133b4:	sub    eax,0x55e346b0
  4133b9:	inc    ecx
  4133ba:	mov    ch,0x23
  4133bc:	mov    DWORD PTR cs:[bp+si-0x38],edi
  4133c1:	adc    dl,BYTE PTR [ebx-0x53]
  4133c4:	and    eax,esi
  4133c6:	add    ecx,eax
  4133c8:	leave  
  4133c9:	jecxz  0x413392
  4133cb:	xor    eax,0x3d033e7
  4133d0:	mov    cl,0x1c
  4133d2:	and    BYTE PTR [edi+0x3a],ch
  4133d5:	dec    ebp
  4133d6:	into   
  4133d7:	fwait
  4133d8:	mov    ebx,0x90b630e3
  4133dd:	jno    0x413445
  4133df:	bsf    eax,DWORD PTR [ebx]
  4133e2:	mov    dl,0xb6
  4133e4:	sub    al,0x14
  4133e6:	inc    ebp
  4133e7:	jmp    0xdaca7aea
  4133ec:	stc    
  4133ed:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4133ef:	(bad)  
  4133f0:	jle    0x4133ab
  4133f2:	popa   
  4133f3:	test   al,0xf8
  4133f5:	bound  esp,QWORD PTR [edx+0x44ccd3f5]
  4133fb:	addr16 test eax,0x23c68d5c
  413401:	mov    DWORD PTR [edx],edx
  413403:	xchg   esp,eax
  413404:	sbb    esp,ebx
  413406:	dec    eax
  413407:	mov    WORD PTR [ebx-0x6d940cc3],ds
  41340d:	mov    esi,0x339151eb
  413412:	mov    BYTE PTR [edx],dl
  413414:	int3   
  413415:	xchg   ebp,eax
  413416:	jmp    0x7d1e:0x296ed98e
  41341d:	into   
  41341e:	daa    
  41341f:	push   esi
  413420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413421:	loopne 0x413455
  413423:	xchg   edx,eax
  413424:	jns    0x4133ce
  413426:	cmp    eax,0xe4f8701e
  41342b:	fstp   TBYTE PTR [edx]
  41342d:	pop    ebx
  41342e:	cmp    edx,DWORD PTR [ebx]
  413430:	(bad)  [eax+0x606fc273]
  413436:	sbb    eax,0xa8db83a1
  41343b:	test   al,0x6d
  41343d:	ss (bad) 
  41343f:	push   cs
  413440:	jo     0x4134a9
  413442:	in     al,0xd2
  413444:	mov    al,ds:0x6f78525a
  413449:	dec    ebx
  41344a:	dec    edx
  41344b:	shl    BYTE PTR [esi],1
  41344d:	mov    ?,WORD PTR [ebx]
  41344f:	dec    ebx
  413450:	pop    esp
  413451:	test   BYTE PTR [eax],bl
  413453:	retf   0x6129
  413456:	jge    0x41346e
  413458:	xor    ebx,edx
  41345a:	jmp    0x7ec4afef
  41345f:	addr16 mov eax,0xe725899
  413465:	pop    eax
  413466:	pop    ebx
  413467:	pushf  
  413468:	ret    0x9ae3
  41346b:	add    bl,BYTE PTR [eax]
  41346d:	in     eax,dx
  41346e:	or     BYTE PTR [edi+0x7],bh
  413471:	jp     0x4134ed
  413473:	(bad)  
  413474:	mov    esp,0xd8280c7d
  413479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41347a:	xchg   DWORD PTR [edi+0x17],edx
  41347d:	fisub  WORD PTR [eax-0x760b6236]
  413483:	fcom   st(2)
  413485:	sub    ebx,DWORD PTR [ecx+0x34310db2]
  41348b:	stc    
  41348c:	jle    0x4134fc
  41348e:	sbb    DWORD PTR [edi-0x35],edi
  413491:	push   edi
  413492:	mov    dh,0x54
  413494:	jle    0xe4a0f5a2
  41349a:	xchg   ecx,eax
  41349b:	out    dx,al
  41349c:	mov    ebp,0x20da4878
  4134a1:	sbb    esp,DWORD PTR [ebx-0x13]
  4134a4:	hlt    
  4134a5:	inc    eax
  4134a6:	xchg   ebx,eax
  4134a7:	ret    0x1622
  4134aa:	push   ecx
  4134ab:	fld    QWORD PTR [eax-0xd]
  4134ae:	adc    DWORD PTR [esi],edx
  4134b0:	xor    BYTE PTR [edx],dl
  4134b2:	sub    DWORD PTR [ebx],edx
  4134b4:	or     DWORD PTR [esi],edi
  4134b6:	(bad)  
  4134b7:	lahf   
  4134b8:	pop    esi
  4134b9:	pop    ecx
  4134ba:	sub    eax,0x4c4ce9
  4134bf:	stos   DWORD PTR es:[edi],eax
  4134c0:	or     dh,BYTE PTR [ecx-0x25]
  4134c3:	sub    ebp,esi
  4134c5:	arpl   WORD PTR [ecx],sp
  4134c7:	mov    esi,0xa1ff9d54
  4134cc:	jle    0x413519
  4134ce:	or     DWORD PTR [ebx+esi*8-0x4a],0xffffffe5
  4134d3:	mov    al,ds:0x1ff381cb
  4134d8:	std    
  4134d9:	test   BYTE PTR [eax],ch
  4134db:	xchg   ebx,eax
  4134dc:	cmc    
  4134dd:	int    0x43
  4134df:	and    DWORD PTR [ecx],0xffffffa8
  4134e2:	dec    esi
  4134e3:	sub    al,0xb6
  4134e5:	jo     0x4134b5
  4134e7:	pushf  
  4134e8:	sub    ch,dl
  4134ea:	jle    0x41355a
  4134ec:	xchg   edi,eax
  4134ed:	shl    BYTE PTR [edi+0x7a74921f],0x41
  4134f4:	xor    BYTE PTR [ebx+0x6c],ch
  4134f7:	xchg   DWORD PTR [edi+ecx*1],esp
  4134fa:	sti    
  4134fb:	jno    0x41349c
  4134fd:	or     al,0xe
  4134ff:	icebp  
  413500:	jle    0x4134d4
  413502:	sub    eax,0xd14a5da0
  413507:	jo     0x41355b
  413509:	pop    ebp
  41350a:	dec    ecx
  41350b:	xchg   DWORD PTR [ebp+0x3b],esi
  41350e:	inc    edi
  41350f:	and    al,0x9f
  413511:	jmp    0x4134ee
  413513:	push   eax
  413514:	dec    ecx
  413515:	push   es
  413516:	das    
  413517:	push   cs
  413518:	jb     0x4134d3
  41351a:	push   0xb905748b
  41351f:	inc    edx
  413520:	jbe    0x41356a
  413522:	jmp    0x50c564b
  413527:	mov    ds:0x918b8af1,eax
  41352c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352d:	lea    ebp,[edx-0x4e]
  413530:	repz test al,0x6c
  413533:	dec    esp
  413534:	jecxz  0x4135ac
  413536:	pop    es
  413537:	(bad)  
  413539:	push   ebx
  41353a:	ins    DWORD PTR es:[edi],dx
  41353b:	push   cs
  41353c:	xchg   edi,eax
  41353d:	jecxz  0x4134f8
  41353f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413540:	cmc    
  413541:	mov    DWORD PTR [eax-0x53],esi
  413544:	xchg   esi,eax
  413545:	(bad)  
  413546:	push   esi
  413547:	inc    eax
  413548:	xchg   esi,eax
  413549:	test   al,0x1c
  41354b:	pop    es
  41354c:	retf   0x6bb
  41354f:	nop
  413550:	sbb    edx,DWORD PTR [ebp+0x215e7b4]
  413556:	lods   eax,DWORD PTR ds:[esi]
  413557:	arpl   WORD PTR [edx+0x4c7ea1cc],bp
  41355d:	dec    eax
  41355e:	leave  
  41355f:	jecxz  0x413520
  413561:	xlat   BYTE PTR ds:[ebx]
  413562:	adc    al,BYTE PTR ds:0xd7215bf1
  413568:	(bad)  
  413569:	sub    dh,BYTE PTR [esi-0x70]
  41356c:	jmp    0x17304479
  413571:	and    cl,bh
  413573:	arpl   bx,dx
  413575:	popf   
  413576:	sbb    eax,DWORD PTR [ecx+edi*8-0x3f6eb157]
  41357d:	test   ecx,0xce5aa218
  413583:	in     eax,0xaf
  413585:	sbb    BYTE PTR [edx+0x644cbb2d],dh
  41358b:	push   ds
  41358c:	inc    edx
  41358d:	push   es
  41358e:	mov    cl,0x11
  413590:	adc    eax,0xcf3d1ab9
  413595:	clc    
  413596:	jmp    0x5ec0339
  41359b:	adc    eax,0x34bb67f8
  4135a0:	repnz lea edx,ds:0x945e575b
  4135a7:	cs or  eax,0xcc6ce694
  4135ad:	and    DWORD PTR [edi-0x3b],ebx
  4135b0:	or     bh,ah
  4135b2:	adc    ecx,0x9f1578cf
  4135b8:	and    esp,0x4850e12e
  4135be:	jo     0x413601
  4135c0:	test   eax,0xfd9933ed
  4135c5:	push   eax
  4135c6:	outs   dx,BYTE PTR ds:[esi]
  4135c7:	mov    WORD PTR [edx],?
  4135c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ca:	inc    edi
  4135cb:	adc    eax,0xa82577d1
  4135d0:	test   al,0x43
  4135d2:	add    cl,BYTE PTR [ebx+0x76ea53ff]
  4135d8:	sub    ebx,DWORD PTR [edx]
  4135da:	(bad)  
  4135db:	and    BYTE PTR [edx+0x1dd17feb],cl
  4135e1:	enter  0x6b7,0xe
  4135e5:	push   cs
  4135e6:	cdq    
  4135e7:	les    edi,FWORD PTR [edx-0x6f]
  4135ea:	sub    eax,0x3f0ce2d6
  4135ef:	and    bh,bh
  4135f1:	and    eax,DWORD PTR [eax]
  4135f3:	imul   dh
  4135f5:	dec    esp
  4135f6:	cmp    cl,BYTE PTR [eax-0x6f]
  4135f9:	sar    BYTE PTR [esi],1
  4135fb:	(bad)  
  4135fc:	jl     0x413601
  4135fe:	sbb    eax,esp
  413600:	shr    BYTE PTR [ecx],0xb9
  413603:	xchg   ecx,eax
  413604:	push   esi
  413605:	loope  0x4135d6
  413607:	fidiv  WORD PTR [ecx]
  413609:	sub    al,BYTE PTR [eax-0x38]
  41360c:	leave  
  41360d:	jb     0x4135a4
  41360f:	addr16 arpl bp,bx
  413612:	mov    ds:0xd5719ef9,eax
  413617:	push   ds
  413618:	pop    eax
  413619:	push   esi
  41361a:	ss test esi,ebx
  41361d:	clc    
  41361e:	jmp    0x658802d
  413623:	jb     0x413629
  413625:	int    0x77
  413627:	jmp    0xddcea164
  41362c:	xor    eax,0xa57e370b
  413631:	push   ebp
  413632:	jbe    0x4135bd
  413634:	sbb    eax,0x4bfa4fdf
  413639:	repz or DWORD PTR [ecx+0x50d3b99e],ebp
  413640:	rcl    dl,0xdf
  413643:	fucomi st,st(1)
  413645:	jo     0x41364a
  413647:	mov    eax,0xe1865db6
  41364c:	lods   eax,DWORD PTR ds:[esi]
  41364d:	pop    ebx
  41364e:	inc    edx
  41364f:	mov    BYTE PTR [ebp-0x4b6b2434],ah
  413655:	and    DWORD PTR [ecx],esi
  413657:	ins    DWORD PTR es:[edi],dx
  413658:	jnp    0x413636
  41365a:	ds sahf 
  41365c:	popf   
  41365d:	xchg   edx,eax
  41365e:	mov    ebp,0xce026a8a
  413663:	int3   
  413664:	fidiv  WORD PTR [edi-0x5f038721]
  41366a:	jg     0x4136c6
  41366c:	rcl    bl,0x59
  41366f:	jl     0x41360e
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	test   al,0x67
  413674:	mov    al,0xfb
  413676:	hlt    
  413677:	out    0x62,al
  413679:	sub    DWORD PTR [edx+0x1903e304],edx
  41367f:	cli    
  413680:	ficomp DWORD PTR [edi+0x5a]
  413683:	push   ebp
  413684:	aas    
  413685:	imul   esi,esi,0xffffffda
  413688:	outs   dx,BYTE PTR ds:[esi]
  413689:	(bad)  
  41368a:	mov    bl,0xc7
  41368c:	ds enter 0x4b15,0x87
  413691:	mov    ds:0x500d45a4,al
  413696:	sti    
  413697:	push   0x6f
  413699:	retf   0xac5e
  41369c:	mov    esp,0x2787e73f
  4136a1:	sbb    dl,dl
  4136a3:	inc    eax
  4136a4:	xchg   ecx,eax
  4136a5:	push   ds
  4136a6:	fstp   TBYTE PTR ds:0x926e2c4d
  4136ac:	inc    ecx
  4136ad:	imul   esp,esi,0xf2d696b8
  4136b3:	gs pop es
  4136b5:	daa    
  4136b6:	cld    
  4136b7:	mov    eax,0x6af4d29e
  4136bc:	cli    
  4136bd:	ror    DWORD PTR [esi+0x65],0x87
  4136c1:	sub    al,0xb2
  4136c3:	add    cl,bh
  4136c5:	push   esp
  4136c6:	adc    DWORD PTR [edi+ecx*1],0x9f7bc225
  4136cd:	rcl    DWORD PTR [edx],0x9c
  4136d0:	sub    eax,0x505441d5
  4136d5:	cmp    eax,0x92363b5f
  4136da:	push   0xffffff9f
  4136dc:	cmp    ah,dh
  4136de:	jns    0x41370b
  4136e0:	call   0xf4f74514
  4136e5:	or     al,BYTE PTR [ecx]
  4136e7:	lahf   
  4136e8:	clc    
  4136e9:	fs adc al,0xdd
  4136ec:	dec    ecx
  4136ed:	pop    DWORD PTR [edi]
  4136ef:	mov    edx,0x16100392
  4136f4:	ja     0x41375f
  4136f6:	in     al,0x1e
  4136f8:	adc    BYTE PTR [esp+ebp*2-0x1add15cb],0x55
  413700:	loop   0x413735
  413702:	and    cl,bl
  413704:	outs   dx,BYTE PTR ds:[esi]
  413705:	add    al,BYTE PTR [ecx-0x76519845]
  41370b:	loope  0x41374c
  41370d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41370e:	cmp    al,BYTE PTR [ecx+eax*8+0x51]
  413712:	(bad)  
  413713:	ins    DWORD PTR es:[edi],dx
  413714:	imul   ecx,DWORD PTR [eax-0x3cdb614e],0x47
  41371b:	and    esp,DWORD PTR [edi-0x75]
  41371e:	aam    0xd6
  413720:	dec    edi
  413721:	ret    
  413722:	int3   
  413723:	je     0x413772
  413725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413726:	data16 test al,0x74
  413729:	out    dx,al
  41372a:	outs   dx,DWORD PTR ds:[esi]
  41372b:	xor    dh,BYTE PTR [edi+0xf]
  41372e:	(bad)  
  41372f:	fild   WORD PTR [ebx-0x6c]
  413732:	mov    DWORD PTR [edi+0x38],esp
  413735:	xchg   esp,eax
  413736:	xor    BYTE PTR [eax+0x735ef5],cl
  41373c:	lock icebp 
  41373e:	pop    eax
  41373f:	pop    esp
  413740:	sti    
  413741:	dec    eax
  413742:	dec    ebx
  413743:	fs and eax,0x3b19b701
  413749:	xchg   ebx,eax
  41374a:	fnstenv [edi-0x55]
  41374d:	lods   al,BYTE PTR ds:[esi]
  41374e:	sbb    dh,bl
  413750:	cmp    al,0x20
  413752:	fucomp st(5)
  413754:	pop    ebx
  413755:	fsubr  DWORD PTR [ecx+ecx*1+0x1d]
  413759:	jecxz  0x4136e5
  41375b:	pop    eax
  41375c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41375d:	shl    DWORD PTR [esi],1
  41375f:	add    bh,bl
  413761:	jns    0x41376e
  413763:	inc    ebx
  413764:	loopne 0x4137a5
  413766:	dec    edi
  413767:	pop    ecx
  413768:	cmp    DWORD PTR [ebx-0x38dc70ef],esp
  41376e:	cmp    al,0xb2
  413770:	adc    eax,0xb3fad8ea
  413775:	ss jmp 0x41373a
  413778:	out    dx,eax
  413779:	sbb    eax,DWORD PTR [eax+0x70a9b0d2]
  41377f:	jmp    0x4137ca
  413781:	pop    esp
  413782:	fwait
  413783:	scas   al,BYTE PTR es:[edi]
  413784:	loop   0x4137fa
  413786:	pop    eax
  413787:	jecxz  0x413732
  413789:	push   0xfffffffc
  41378b:	mov    eax,0x30cee162
  413790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413791:	push   edi
  413792:	push   ds
  413793:	xchg   ebp,eax
  413794:	repz imul esp,DWORD PTR [ecx+0x15efac2e],0xd5d02451
  41379f:	imul   ecx,DWORD PTR [esi],0x3d
  4137a2:	inc    ebx
  4137a3:	push   es
  4137a4:	lock mov dh,0x3
  4137a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a9:	ins    BYTE PTR es:[edi],dx
  4137aa:	popa   
  4137ab:	xor    dh,0x2e
  4137ae:	jns    0x4137bc
  4137b0:	adc    bh,BYTE PTR [ecx-0x29]
  4137b3:	push   esp
  4137b4:	fnstenv [edi]
  4137b6:	aad    0x1d
  4137b8:	push   edx
  4137b9:	or     al,0x7f
  4137bb:	pushf  
  4137bc:	enter  0xbf67,0x5c
  4137c0:	mul    BYTE PTR [esi-0x44a8d0ba]
  4137c6:	repnz jecxz 0x413757
  4137c9:	xchg   ecx,eax
  4137ca:	popf   
  4137cb:	cld    
  4137cc:	adc    ah,ch
  4137ce:	pop    edx
  4137cf:	mov    ebp,0xb7c0e33a
  4137d4:	ret    0x1646
  4137d7:	(bad)  
  4137d8:	jg     0x41379f
  4137da:	add    ch,cl
  4137dc:	out    dx,al
  4137dd:	mov    bh,BYTE PTR [edx-0x3e]
  4137e0:	jl     0x413857
  4137e2:	fild   DWORD PTR [ecx+0x5753db04]
  4137e8:	xchg   esp,eax
  4137e9:	(bad)  
  4137eb:	sbb    dl,BYTE PTR ds:0x6df73604
  4137f1:	test   eax,0x4316321a
  4137f6:	jmp    0x4137ac
  4137f8:	repnz fstp QWORD PTR [ebp-0x3675864c]
  4137ff:	test   BYTE PTR [edi],bl
  413801:	test   DWORD PTR [eiz*2-0x37eb84c4],ebp
  413808:	fs cmc 
  41380a:	jl     0x413822
  41380c:	jmp    0x91ad6aaf
  413811:	sub    ah,dl
  413813:	xor    ah,BYTE PTR [ebx-0x16a693b]
  413819:	pop    edi
  41381a:	sbb    al,0x6f
  41381c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381d:	and    DWORD PTR [edi+edx*2-0x6f],eax
  413821:	in     al,dx
  413822:	mov    eax,ds:0x15e50e97
  413827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413828:	xor    BYTE PTR [edx],dl
  41382a:	aas    
  41382b:	loopne 0x4137c1
  41382d:	sbb    BYTE PTR [esi],dh
  41382f:	scas   eax,DWORD PTR es:[edi]
  413830:	inc    edi
  413831:	fild   WORD PTR [edx]
  413833:	mov    dh,0xb4
  413835:	rcl    BYTE PTR [esi+0x6c1775c9],0xf6
  41383c:	adc    al,al
  41383e:	jecxz  0x41384a
  413840:	cmp    al,0x8f
  413842:	mov    ds:0x5588be1d,al
  413847:	mov    dh,0x76
  413849:	xor    ebp,ecx
  41384b:	fmul   st,st(7)
  41384d:	fcmovnbe st,st(5)
  41384f:	repz aad 0x87
  413852:	or     BYTE PTR [esi+0x5f9425fa],ch
  413858:	mul    DWORD PTR [ecx]
  41385a:	rcl    DWORD PTR [edx],cl
  41385c:	mov    eax,DWORD PTR [edx+0x7e]
  41385f:	sbb    esi,DWORD PTR [edi+0x358fedbf]
  413865:	mov    esi,0x5666cb7c
  41386a:	repnz pop esi
  41386c:	fidivr WORD PTR [ebx+eiz*1-0x49e3e2d5]
  413873:	jp     0x4138a6
  413875:	xchg   esi,eax
  413876:	(bad)  
  413877:	jns    0x413870
  413879:	pop    edx
  41387a:	and    dh,cl
  41387c:	sbb    al,0x51
  41387e:	scas   al,BYTE PTR es:[edi]
  41387f:	in     al,0x2b
  413881:	inc    edx
  413882:	mov    dl,0xf
  413884:	mov    ss,WORD PTR ss:[edx-0x5d]
  413888:	cmp    bh,BYTE PTR ds:0x56951c43
  41388e:	jmp    0xa1c1:0xfd0c844c
  413895:	add    dh,bl
  413897:	mov    al,0x4f
  413899:	(bad)  
  41389a:	clc    
  41389b:	pop    es
  41389c:	jmp    0x5ce1:0x3c083f77
  4138a3:	stos   BYTE PTR es:[edi],al
  4138a4:	jecxz  0x41389a
  4138a6:	push   es
  4138a7:	lahf   
  4138a8:	add    bh,BYTE PTR [ebx+0x7c38e2de]
  4138ae:	mov    ebx,0xaa412b76
  4138b3:	push   ebx
  4138b4:	pop    ds
  4138b5:	ins    DWORD PTR es:[edi],dx
  4138b6:	popf   
  4138b7:	(bad)  [edi-0x40]
  4138ba:	stos   BYTE PTR es:[edi],al
  4138bb:	or     DWORD PTR [edx+0x609839a4],ebx
  4138c1:	das    
  4138c2:	neg    dh
  4138c4:	sub    ebp,DWORD PTR ds:0x8d2dea54
  4138ca:	jge    0x4138bf
  4138cc:	inc    ebp
  4138cd:	mov    eax,ds:0x9f0641e7
  4138d2:	push   esi
  4138d3:	int3   
  4138d4:	mov    bh,0x23
  4138d6:	iret   
  4138d7:	cmpxchg cl,cl
  4138da:	mov    bl,0xe3
  4138dc:	dec    esi
  4138dd:	dec    eax
  4138de:	call   0xd4e6c724
  4138e3:	shl    esp,0x18
  4138e6:	push   edx
  4138e7:	fs cmc 
  4138e9:	and    eax,edi
  4138eb:	mov    bh,0x2c
  4138ed:	les    ebp,FWORD PTR [eax-0x42a00024]
  4138f3:	maxps  xmm7,xmm7
  4138f6:	retf   
  4138f7:	test   BYTE PTR [ebp-0x75],ah
  4138fa:	xor    al,0xba
  4138fc:	jl     0x4138a0
  4138fe:	mov    ebx,0xd5f6eee6
  413903:	test   bh,dl
  413905:	jge    0x413957
  413907:	retf   0xfc88
  41390a:	dec    edi
  41390b:	mov    bl,cl
  41390d:	add    DWORD PTR [edx],edi
  41390f:	lods   al,BYTE PTR ds:[esi]
  413910:	jns    0x41395f
  413912:	jl     0x41394f
  413914:	pop    edx
  413915:	cli    
  413916:	jmp    0x7939:0xb2c993cd
  41391d:	es xchg esp,eax
  41391f:	xchg   ebx,eax
  413920:	icebp  
  413921:	jmp    0xc8a17642
  413926:	push   0x99b44171
  41392b:	jno    0x4138bf
  41392d:	shl    DWORD PTR [eax],0x2a
  413930:	dec    eax
  413931:	add    al,0xe2
  413933:	in     eax,0xf1
  413935:	jmp    FWORD PTR [esi]
  413937:	pop    esp
  413938:	add    al,0x9
  41393a:	mov    edx,esp
  41393c:	ffreep st(4)
  41393e:	jne    0x413950
  413940:	sbb    DWORD PTR [esp+edx*8-0x1d392d43],0x3c48ebf4
  41394b:	(bad)
  41394e:	jo     0x41398d
  413950:	int    0x8f
  413952:	out    dx,al
  413953:	mov    esp,DWORD PTR [esi+eax*1]
  413956:	push   sp
  413958:	call   0x7a4825c1
  41395d:	dec    ebp
  41395e:	dec    esp
  41395f:	jp     0x413949
  413961:	pop    edx
  413962:	xlat   BYTE PTR ds:[ebx]
  413963:	scas   eax,DWORD PTR es:[edi]
  413964:	sub    eax,0xc810400a
  413969:	hlt    
  41396a:	sbb    edi,DWORD PTR [ecx]
  41396c:	or     esp,ebp
  41396e:	push   eax
  41396f:	xchg   esi,eax
  413970:	push   ebp
  413971:	dec    ebp
  413972:	xchg   esp,eax
  413973:	mov    esi,0x75d26a93
  413978:	cmp    ebx,ecx
  41397a:	push   eax
  41397b:	mov    dh,0x28
  41397d:	(bad)  
  41397e:	jb     0x41393e
  413980:	mov    bl,0xe6
  413982:	push   0xd62e1655
  413987:	cli    
  413988:	out    dx,eax
  413989:	and    eax,0xa74c460d
  41398e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41398f:	lahf   
  413990:	fwait
  413991:	dec    edx
  413992:	pop    ss
  413993:	mov    esp,0x35e38e7
  413998:	mov    ecx,0xabb19455
  41399d:	pop    ss
  41399e:	inc    edx
  41399f:	xchg   edx,eax
  4139a0:	ss mov ebx,0xd3ddf5f1
  4139a6:	faddp  st(0),st
  4139a8:	push   0x24
  4139aa:	cmp    BYTE PTR ds:0x3e724f4d,ch
  4139b0:	call   DWORD PTR [ebp+0x7b363487]
  4139b6:	mov    edx,0x45c3dcf1
  4139bb:	sahf   
  4139bc:	outs   dx,BYTE PTR ds:[esi]
  4139bd:	mov    al,0x52
  4139bf:	cmp    BYTE PTR [edx],0xc6
  4139c2:	jmp    0x4cc519a8
  4139c7:	test   al,0x9
  4139c9:	mov    esi,0x89541ad7
  4139ce:	inc    esi
  4139cf:	bnd jl 0x41395c
  4139d2:	(bad)  
  4139d3:	js     0x41395c
  4139d5:	call   0x98a484f
  4139da:	ret    0xba8b
  4139dd:	lea    edx,[esi-0x4b748824]
  4139e3:	out    dx,al
  4139e4:	test   esi,edx
  4139e6:	push   edx
  4139e7:	jo     0x41396f
  4139e9:	sahf   
  4139ea:	ins    BYTE PTR es:[edi],dx
  4139eb:	bound  ebp,QWORD PTR [ebp+0x4]
  4139ee:	cmp    ch,bh
  4139f0:	loop   0x4139d9
  4139f2:	sub    ecx,DWORD PTR [ebx+0x6dfd9f45]
  4139f8:	mov    dh,0x4c
  4139fa:	jmp    0xfa66:0xa37a351c
  413a01:	jl     0x413998
  413a03:	mov    ah,0x27
  413a05:	dec    esi
  413a06:	mov    ecx,DWORD PTR [esi]
  413a08:	jno    0x4139e6
  413a0a:	(bad)  
  413a0b:	inc    edx
  413a0c:	in     eax,dx
  413a0d:	js     0x413a21
  413a0f:	frstor [edx-0x7e]
  413a12:	and    WORD PTR [esi+0x7d],0x59a0
  413a18:	push   esi
  413a19:	fwait
  413a1a:	out    dx,eax
  413a1b:	jb     0x413a05
  413a1d:	push   ecx
  413a1e:	jno    0x413a98
  413a20:	fsub   st,st(4)
  413a22:	mov    dh,0xbd
  413a24:	aaa    
  413a25:	adc    BYTE PTR [ebp+ebp*1+0x14],dl
  413a29:	adc    al,0x50
  413a2b:	or     ah,BYTE PTR [edx+esi*4-0x1d70a551]
  413a32:	xchg   BYTE PTR [ecx+0x4b9f83bb],dh
  413a38:	pushf  
  413a39:	jb     0x4139f7
  413a3b:	loop   0x413a93
  413a3d:	jns    0x413aaa
  413a3f:	mov    ebp,0x34cc0f1b
  413a44:	cmp    al,0x33
  413a46:	ja     0x4139d6
  413a48:	xchg   ebx,eax
  413a49:	xchg   ebx,eax
  413a4a:	dec    ebx
  413a4b:	adc    DWORD PTR [esi+0x3e],edx
  413a4e:	xchg   ebp,eax
  413a4f:	imul   DWORD PTR ds:0x2c22f2a6
  413a55:	inc    esi
  413a56:	call   0x5694:0x9d2ad112
  413a5d:	call   0xabc4f6ad
  413a62:	jno    0x4139fa
  413a64:	jmp    0xb8d49b50
  413a69:	pop    ebp
  413a6a:	mov    edi,0x757ff599
  413a6f:	sbb    bl,dl
  413a71:	push   es
  413a72:	aas    
  413a73:	push   ecx
  413a74:	mov    dh,0x98
  413a76:	retf   
  413a77:	jmp    0x9ae2def
  413a7c:	mov    dx,0x8400
  413a80:	xor    bh,BYTE PTR ss:[edi+0x33]
  413a84:	daa    
  413a85:	call   DWORD PTR [eax-0x15a6992a]
  413a8b:	cmp    al,0x87
  413a8d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413a8f:	push   ecx
  413a90:	mov    edi,0x8bd9dc7c
  413a95:	pop    esi
  413a96:	(bad)  
  413a97:	cmp    ebp,DWORD PTR [eax-0x44]
  413a9a:	jle    0x413ada
  413a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9d:	or     bl,BYTE PTR [edi+edi*4-0x27]
  413aa1:	mov    ebp,ebp
  413aa3:	fsub   st(3),st
  413aa5:	xor    BYTE PTR [edi+0x15ac9b5b],0xfc
  413aac:	cmp    al,0xd6
  413aae:	shl    esp,0xad
  413ab1:	push   esp
  413ab2:	in     al,dx
  413ab3:	push   eax
  413ab4:	mov    DWORD PTR [ebx+0x72d5a9d8],ebx
  413aba:	popf   
  413abb:	js     0x413a4c
  413abd:	inc    DWORD PTR [edx-0x8c6c539]
  413ac3:	pop    ss
  413ac4:	mov    ds:0x7415d683,eax
  413ac9:	or     cl,BYTE PTR [ebx-0x1a]
  413acc:	out    0xb3,al
  413ace:	sahf   
  413acf:	cmp    al,cl
  413ad1:	aas    
  413ad2:	sub    DWORD PTR [ecx-0x67536397],0xffffff8e
  413ad9:	pushf  
  413ada:	pop    ss
  413adb:	dec    edi
  413adc:	add    edi,eax
  413ade:	(bad)  
  413adf:	int    0x93
  413ae1:	jecxz  0x413b4f
  413ae3:	push   edi
  413ae4:	mov    esp,DWORD PTR [edi]
  413ae6:	cmp    ebx,DWORD PTR [ebx-0x3e661ba1]
  413aec:	mov    cl,0x84
  413aee:	inc    esp
  413aef:	out    0x84,eax
  413af1:	cld    
  413af2:	(bad)  
  413af3:	pusha  
  413af4:	push   cs
  413af5:	push   ebx
  413af6:	adc    eax,0x398a3a7c
  413afb:	test   BYTE PTR [eax+0x51],dh
  413afe:	test   eax,0x8446c0b2
  413b03:	sub    al,0x53
  413b05:	push   ss
  413b06:	enter  0x5ecf,0x51
  413b0a:	fwait
  413b0b:	das    
  413b0c:	xor    ecx,0x59ff1c11
  413b12:	push   edi
  413b13:	xor    al,0xd8
  413b15:	push   esp
  413b16:	mov    bh,bh
  413b18:	nop
  413b19:	mov    DWORD PTR [ecx-0x480a200e],0x7683f833
  413b23:	pop    ss
  413b24:	cs mov dh,0x81
  413b27:	push   cs
  413b28:	div    DWORD PTR [esp+ecx*4-0x16829fe0]
  413b2f:	add    bl,BYTE PTR [ebp-0x7fecd0a]
  413b35:	hlt    
  413b36:	sar    DWORD PTR [esi-0x7a7d1ea1],cl
  413b3c:	jge    0x413af4
  413b3e:	outs   dx,DWORD PTR ds:[esi]
  413b3f:	sti    
  413b40:	push   esi
  413b41:	sti    
  413b42:	adc    bl,cl
  413b44:	dec    eax
  413b45:	pop    eax
  413b46:	std    
  413b47:	xlat   BYTE PTR ds:[ebx]
  413b48:	sbb    edi,esi
  413b4a:	add    eax,0xbb85d80c
  413b4f:	aam    0xbc
  413b51:	lods   eax,DWORD PTR ds:[esi]
  413b52:	push   esi
  413b53:	fsubr  DWORD PTR [ebx]
  413b55:	mov    eax,DWORD PTR [edx]
  413b57:	lods   eax,DWORD PTR ds:[esi]
  413b58:	test   DWORD PTR [ebx],ecx
  413b5a:	push   es
  413b5b:	shl    DWORD PTR [edi],cl
  413b5d:	adc    eax,0xce98d3eb
  413b62:	mov    esi,0x334f69aa
  413b67:	in     al,0x5b
  413b69:	ja     0x413bd8
  413b6b:	out    dx,eax
  413b6c:	popa   
  413b6d:	mov    esi,0x6b480674
  413b72:	call   0x8709:0x1c1071de
  413b79:	arpl   si,cx
  413b7b:	adc    cl,dh
  413b7d:	pop    es
  413b7e:	pop    ss
  413b7f:	adc    al,0x5b
  413b81:	sub    DWORD PTR [esi+eiz*8+0x268ff158],ebp
  413b88:	pop    edi
  413b89:	or     al,0x68
  413b8b:	shr    esp,1
  413b8d:	jae    0x413b63
  413b8f:	jmp    0xe99b83be
  413b94:	inc    ebp
  413b95:	pop    esp
  413b96:	les    ecx,FWORD PTR [esi+0x35]
  413b99:	lahf   
  413b9a:	out    0x9c,al
  413b9c:	or     eax,0x29ca0b43
  413ba1:	repnz dec edi
  413ba3:	mov    ah,0xb6
  413ba5:	shr    esi,0x89
  413ba8:	push   ecx
  413ba9:	xchg   ebp,eax
  413baa:	or     BYTE PTR [edi-0x68],al
  413bad:	mov    es,WORD PTR [ebx+0x3139476b]
  413bb3:	fnstcw WORD PTR [edx+ecx*8+0x62]
  413bb7:	xchg   ebp,eax
  413bb8:	je     0x413b4f
  413bba:	cmp    al,ah
  413bbc:	xor    DWORD PTR [ebx-0x78],esi
  413bbf:	bound  esp,QWORD PTR [esi]
  413bc1:	xchg   ebp,eax
  413bc2:	idiv   DWORD PTR [ebx-0x4a]
  413bc5:	add    cl,BYTE PTR [ebx]
  413bc7:	lods   al,BYTE PTR ds:[esi]
  413bc8:	hlt    
  413bc9:	test   eax,0xbbc59d67
  413bce:	outs   dx,BYTE PTR ds:[esi]
  413bcf:	dec    ecx
  413bd0:	add    al,0xaf
  413bd2:	xchg   edi,eax
  413bd3:	les    eax,FWORD PTR gs:[ebx-0x2b6e4bf5]
  413bda:	adc    eax,0x12686fcf
  413bdf:	cmp    BYTE PTR [ebp-0x4fea9e7a],0x8c
  413be6:	es xchg ecx,eax
  413be8:	idiv   cl
  413bea:	mov    ds:0x9a292754,al
  413bef:	push   ebp
  413bf0:	in     eax,0x21
  413bf2:	mov    esp,0x7bafd7f5
  413bf7:	or     esp,DWORD PTR [ebp-0x68bfbfda]
  413bfd:	sbb    esp,DWORD PTR [ecx]
  413bff:	sbb    BYTE PTR [ecx+0x5],al
  413c02:	addr16 inc ecx
  413c04:	cli    
  413c05:	int3   
  413c06:	mov    dl,0x85
  413c08:	gs int3 
  413c0a:	push   es
  413c0b:	inc    edi
  413c0c:	jbe    0x413c6f
  413c0e:	gs dec edi
  413c10:	xchg   edx,eax
  413c11:	push   edx
  413c12:	loop   0x413c0a
  413c14:	jle    0x413c8a
  413c16:	push   ebp
  413c17:	out    0x51,eax
  413c19:	stc    
  413c1a:	and    al,0x19
  413c1c:	sub    edx,DWORD PTR [edi+ebp*2]
  413c1f:	(bad)  [edx+0x59]
  413c22:	or     DWORD PTR [edx-0x45],ebx
  413c25:	jmp    0xd080886f
  413c2a:	inc    ebp
  413c2b:	lods   al,BYTE PTR ds:[esi]
  413c2c:	push   ebx
  413c2d:	jmp    0x413c6f
  413c2f:	pop    ecx
  413c30:	dec    ebp
  413c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c32:	cli    
  413c33:	or     eax,0xadf7f2d6
  413c38:	inc    edi
  413c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3a:	imul   edx,DWORD PTR [esi+0x7607aee9],0x4a67abc9
  413c44:	ds pushf 
  413c46:	push   es
  413c47:	sub    ecx,DWORD PTR [edi-0x18]
  413c4a:	pop    ds
  413c4b:	pop    ds
  413c4c:	ss jl  0x413bd1
  413c4f:	stc    
  413c50:	scas   eax,DWORD PTR es:[edi]
  413c51:	les    esp,FWORD PTR [edx-0x277c4744]
  413c57:	or     DWORD PTR [ecx-0x5a],ecx
  413c5a:	in     al,0xb1
  413c5c:	div    BYTE PTR [esi-0x64]
  413c5f:	cmp    ebp,DWORD PTR [ecx-0x4e]
  413c62:	mov    esp,0xb7e3cc4b
  413c67:	pushf  
  413c68:	mov    edx,DWORD PTR [edx]
  413c6a:	pop    ss
  413c6b:	pop    esi
  413c6c:	je     0x41609c
  413c72:	mov    DWORD PTR [ebp-0x20],0x0
  413c79:	push   0x3
  413c7b:	xor    edx,edx
  413c7d:	pop    edx
  413c7e:	add    edx,0x8
  413c81:	push   edx
  413c82:	pop    ecx
  413c83:	push   0x6
  413c85:	dec    ecx
  413c86:	pop    ebx
  413c87:	dec    ebx
  413c88:	xchg   ebx,ecx
  413c8a:	sub    ebx,ecx
  413c8c:	xchg   ebx,ecx
  413c8e:	dec    ecx
  413c8f:	mov    eax,DWORD PTR [ebp-0x1c]
  413c92:	imul   eax,ecx
  413c95:	sub    esp,eax
  413c97:	mov    DWORD PTR [ebp-0x20],esp
  413c9a:	mov    eax,DWORD PTR [ebp-0x4]
  413c9d:	xor    eax,esi
  413c9f:	add    eax,edi
  413ca1:	jmp    0x416075
  413ca6:	mov    ecx,DWORD PTR [ebp-0xc]
  413ca9:	mov    eax,DWORD PTR [ebp+0x8]
  413cac:	mov    edx,DWORD PTR [ebp+0x14]
  413caf:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413cb3:	xor    ecx,esi
  413cb5:	add    ecx,edi
  413cb7:	xor    edx,edx
  413cb9:	div    ecx
  413cbb:	mov    ecx,DWORD PTR [ebp-0x4]
  413cbe:	xor    ecx,esi
  413cc0:	lea    eax,[ecx+eax*1+0x3272ec]
  413cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  413cca:	mov    edx,DWORD PTR [ebp-0x20]
  413ccd:	mov    DWORD PTR [edx+ecx*4],eax
  413cd0:	mov    eax,DWORD PTR [ebp-0xc]
  413cd3:	jmp    0x416069
  413cd8:	pop    es
  413cd9:	adc    al,0xab
  413cdb:	test   DWORD PTR [ebx+0x6a94fb79],ebx
  413ce1:	fadd   DWORD PTR [edx-0x36]
  413ce4:	add    DWORD PTR [ecx],edi
  413ce6:	dec    edi
  413ce7:	retf   0x64d0
  413cea:	jge    0x413d66
  413cec:	add    eax,0xc37a7a5f
  413cf1:	in     eax,dx
  413cf2:	mov    ds:0xbff343dd,eax
  413cf7:	and    eax,0x123c889b
  413cfc:	inc    edx
  413cfd:	mov    ah,0xf4
  413cff:	jne    0x413c9f
  413d01:	scas   al,BYTE PTR es:[edi]
  413d02:	xor    dh,BYTE PTR [ebx]
  413d04:	mov    al,ds:0x9747e345
  413d09:	sub    cl,bl
  413d0b:	xor    ebp,esp
  413d0d:	push   cs
  413d0e:	std    
  413d0f:	jecxz  0x413d49
  413d11:	call   DWORD PTR ss:[edi-0x7a]
  413d15:	jae    0x413cdb
  413d17:	pop    ebx
  413d18:	pop    edi
  413d19:	test   edi,esi
  413d1b:	xchg   ebp,eax
  413d1c:	pop    eax
  413d1d:	mov    esp,0x5c9f5967
  413d22:	dec    ebp
  413d23:	xlat   BYTE PTR ds:[ebx]
  413d24:	mov    ebp,0x9c13d26c
  413d29:	dec    esi
  413d2a:	outs   dx,BYTE PTR ds:[esi]
  413d2b:	jae    0x413d38
  413d2d:	or     al,0x3d
  413d2f:	cli    
  413d30:	fldenv [ebx]
  413d32:	dec    esi
  413d33:	jno    0x413cf2
  413d35:	rcl    BYTE PTR cs:[edx+edx*4+0x9d54544],0x8a
  413d3e:	(bad)  
  413d3f:	push   cs
  413d40:	mov    esp,ebp
  413d42:	sub    BYTE PTR [edi],0x87
  413d45:	imul   ecx,DWORD PTR [ebp-0x248d547e],0x5405bf2
  413d4f:	stc    
  413d50:	mov    ds:0xdcf12ec3,al
  413d55:	test   BYTE PTR [edx+edi*2],0xe7
  413d59:	stos   DWORD PTR es:[edi],eax
  413d5a:	jecxz  0x413d20
  413d5c:	pop    edx
  413d5d:	mov    bl,0xfd
  413d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d60:	imul   ebx,edi,0xffffffb4
  413d63:	(bad)  
  413d64:	idiv   BYTE PTR [ebp-0x38]
  413d67:	mov    al,ds:0xb04d7d49
  413d6c:	or     edx,DWORD PTR [ebp-0x4c9d0385]
  413d72:	sahf   
  413d73:	or     bl,cl
  413d75:	sbb    eax,DWORD PTR [edx+0x49]
  413d78:	cmp    eax,0x34599dcb
  413d7d:	int    0x26
  413d7f:	push   es
  413d80:	cmp    DWORD PTR [edi+0x7a],edx
  413d83:	push   edx
  413d84:	mov    cl,BYTE PTR [eax+0x29]
  413d87:	adc    ebx,DWORD PTR [edx+0xf]
  413d8a:	mov    edi,0x6d7126bd
  413d8f:	(bad)  
  413d90:	cmovge eax,ebx
  413d93:	push   edi
  413d94:	mov    dl,0x8c
  413d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d97:	adc    eax,0x9db72302
  413d9c:	loop   0x413d99
  413d9e:	jge    0x413df6
  413da0:	(bad)  
  413da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da2:	pop    eax
  413da3:	or     eax,0xa3dea257
  413da8:	clc    
  413da9:	mov    cl,0xe9
  413dab:	les    esi,FWORD PTR [ecx]
  413dad:	ins    DWORD PTR es:[edi],dx
  413dae:	lea    edx,[ebx-0x7ca2d1e2]
  413db4:	je     0x413d44
  413db6:	mov    edi,0x818e028
  413dbb:	or     al,0xec
  413dbd:	xlat   BYTE PTR ds:[ebx]
  413dbe:	leave  
  413dbf:	push   ecx
  413dc0:	aad    0xf4
  413dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dc3:	idiv   BYTE PTR [ecx+0x52]
  413dc6:	retf   
  413dc7:	aas    
  413dc8:	inc    eax
  413dc9:	aas    
  413dca:	js     0x413d9c
  413dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dcd:	aaa    
  413dce:	popf   
  413dcf:	(bad)  
  413dd0:	ja     0x413d82
  413dd2:	in     al,0x10
  413dd4:	pop    es
  413dd5:	jl     0x413d86
  413dd7:	das    
  413dd8:	neg    al
  413dda:	push   edx
  413ddb:	pop    edi
  413ddc:	in     al,0x3e
  413dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ddf:	mov    eax,0x48e3da4
  413de4:	(bad)  
  413de5:	std    
  413de6:	lods   eax,DWORD PTR ds:[esi]
  413de7:	in     eax,dx
  413de8:	mov    bh,0x3
  413dea:	vpcmpeqd xmm7,xmm1,XMMWORD PTR ss:[edi]
  413def:	or     ebp,DWORD PTR [eax]
  413df1:	and    bh,bl
  413df3:	aam    0xba
  413df5:	lods   al,BYTE PTR ds:[esi]
  413df6:	mov    bl,0xe9
  413df8:	sub    BYTE PTR [esi+0x2d],dl
  413dfb:	jo     0x413e50
  413dfd:	inc    ebp
  413dfe:	xchg   DWORD PTR [ebx],esi
  413e00:	and    eax,0x32f2d15c
  413e05:	fsubr  QWORD PTR [ecx+0x5a]
  413e08:	push   ss
  413e09:	neg    BYTE PTR [ebp-0x6d]
  413e0c:	cmp    edi,ebx
  413e0e:	jae    0x413d93
  413e10:	adc    al,dl
  413e12:	inc    ebp
  413e13:	test   esi,eax
  413e15:	loop   0x413e5c
  413e17:	mov    BYTE PTR [eax-0x6fecd398],ah
  413e1d:	xlat   BYTE PTR ds:[ebx]
  413e1e:	fnsave [esi+0x747781a6]
  413e24:	lods   eax,DWORD PTR ds:[esi]
  413e25:	cli    
  413e26:	into   
  413e27:	or     cl,BYTE PTR [edi-0x35e29ef1]
  413e2d:	mov    ch,0x5
  413e2f:	mov    ecx,0x145e399a
  413e34:	jne    0x413e99
  413e36:	js     0x413e10
  413e38:	add    ebx,DWORD PTR [eax-0x6273b86a]
  413e3e:	xor    DWORD PTR [ebx],esi
  413e40:	adc    bh,BYTE PTR [ecx]
  413e42:	and    BYTE PTR [ecx-0x9],dh
  413e45:	cdq    
  413e46:	inc    BYTE PTR [edx-0x2811f8aa]
  413e4c:	retf   
  413e4d:	inc    ebp
  413e4e:	inc    eax
  413e4f:	push   0x4ca25322
  413e54:	push   ebx
  413e55:	clc    
  413e56:	hlt    
  413e57:	or     BYTE PTR [eax+edi*2],cl
  413e5a:	xor    bl,dh
  413e5c:	in     eax,dx
  413e5d:	cld    
  413e5e:	ds pop ebp
  413e60:	pop    esi
  413e61:	ins    DWORD PTR es:[edi],dx
  413e62:	popf   
  413e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e64:	jnp    0x413df1
  413e66:	cmp    al,0x3c
  413e68:	ror    DWORD PTR [ecx+0x29],1
  413e6b:	es je  0x413e7f
  413e6e:	fimul  DWORD PTR [ebx+0x1dfdee36]
  413e74:	jae    0x413e55
  413e76:	loopne 0x413e37
  413e78:	sub    BYTE PTR [esi+0x44],ah
  413e7b:	loop   0x413e8c
  413e7d:	repz test BYTE PTR [edx+0x2733bcf0],cl
  413e84:	jne    0x413e16
  413e86:	daa    
  413e87:	mov    ds:0xac4faa1,al
  413e8d:	lods   al,BYTE PTR ds:[esi]
  413e8e:	test   BYTE PTR [esi+edx*2+0x50],0x2c
  413e93:	not    BYTE PTR [ebx+0x67712e95]
  413e99:	and    ebx,DWORD PTR [ecx+0x181e613d]
  413e9f:	jl     0x413ea5
  413ea1:	aas    
  413ea2:	addr16 push ecx
  413ea4:	fabs   
  413ea6:	call   0x31617f34
  413eab:	sub    edi,DWORD PTR [ecx+0x690a3ce9]
  413eb1:	jg     0x413ea5
  413eb3:	sahf   
  413eb4:	jns    0x413e9e
  413eb6:	pop    ds
  413eb7:	mov    esi,0xdf104922
  413ebc:	mov    al,ds:0xc64e4ecf
  413ec1:	mov    ebp,0x10a0b0eb
  413ec6:	mov    ah,0xbb
  413ec8:	stc    
  413ec9:	dec    eax
  413eca:	adc    ecx,DWORD PTR [edi+0x57e68873]
  413ed0:	pop    ecx
  413ed1:	and    eax,0x7ef8f3f0
  413ed6:	pusha  
  413ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed8:	fnstsw WORD PTR [ebp-0x6da2a388]
  413ede:	fst    QWORD PTR [esi-0x6eb1f710]
  413ee4:	xchg   edi,eax
  413ee5:	ins    DWORD PTR es:[edi],dx
  413ee6:	jp     0x413e6c
  413ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee9:	sub    BYTE PTR [esi],0xda
  413eec:	arpl   si,bx
  413eee:	adc    DWORD PTR [ecx+0x16],esp
  413ef1:	lds    ebp,FWORD PTR [ecx+0x4bfa7c11]
  413ef7:	mov    eax,0x7296197a
  413efc:	in     eax,0xf6
  413efe:	mov    bh,0xa4
  413f00:	add    al,0xa8
  413f02:	ret    
  413f03:	test   BYTE PTR [edx],0x59
  413f06:	dec    ecx
  413f07:	cmp    DWORD PTR [edi+0xcefd1a0],eax
  413f0d:	adc    ah,bh
  413f0f:	mul    DWORD PTR [eax+ebx*8-0x7d2f18b5]
  413f16:	cli    
  413f17:	adc    DWORD PTR [ecx+0x19],edi
  413f1a:	mov    ebp,0x6d63dc2d
  413f1f:	mov    ds:0xded4ab06,al
  413f24:	jae    0x413f4f
  413f26:	xchg   esp,eax
  413f27:	scas   eax,DWORD PTR es:[edi]
  413f28:	shr    BYTE PTR [eax+0x39212293],1
  413f2e:	in     eax,0x36
  413f30:	inc    esp
  413f31:	xchg   edi,eax
  413f32:	dec    ebx
  413f33:	ret    
  413f34:	(bad)  
  413f35:	sti    
  413f36:	mov    bl,0xe7
  413f38:	cmp    dl,bh
  413f3a:	repnz inc ebp
  413f3c:	stc    
  413f3d:	out    0xf2,al
  413f3f:	aaa    
  413f40:	adc    ch,ah
  413f42:	inc    eax
  413f43:	mov    ah,BYTE PTR ds:0x8cb33837
  413f49:	(bad)  
  413f4b:	(bad)  
  413f4c:	aam    0xc8
  413f4e:	dec    ebp
  413f4f:	js     0x413f9c
  413f51:	fild   QWORD PTR [ebx+0x21]
  413f54:	push   0x3d259993
  413f59:	xchg   esp,eax
  413f5a:	jnp    0x413f23
  413f5c:	dec    edi
  413f5d:	iret   
  413f5e:	push   cs
  413f5f:	pop    ebp
  413f60:	mov    dl,0x61
  413f62:	(bad)  
  413f63:	jnp    0x413f93
  413f65:	call   FWORD PTR [esi+eax*8-0x399c3a45]
  413f6c:	push   ss
  413f6d:	stc    
  413f6e:	jle    0x413fd1
  413f70:	bound  ecx,QWORD PTR [ecx-0x9]
  413f73:	dec    esp
  413f74:	sub    eax,0xc783ec23
  413f79:	jns    0x413f8b
  413f7b:	and    DWORD PTR [ecx-0x55],ebp
  413f7e:	xor    DWORD PTR [esi+0x3695179a],edi
  413f84:	xor    cl,ah
  413f86:	or     BYTE PTR [ecx],bl
  413f88:	mov    ah,0x33
  413f8a:	xchg   ebp,eax
  413f8b:	(bad)  
  413f8d:	fldenv [edx-0x8]
  413f90:	or     eax,0xf207aaf3
  413f95:	xor    esi,DWORD PTR [eax+edx*4+0x4f]
  413f99:	push   es
  413f9a:	mov    ebx,DWORD PTR [edx-0x53]
  413f9d:	pop    esi
  413f9e:	test   DWORD PTR [ebx-0x24],esp
  413fa1:	jl     0x413f82
  413fa3:	(bad)  
  413fa4:	bound  esi,QWORD PTR [edx+0x3f26888a]
  413faa:	adc    dl,BYTE PTR [edx-0x6e2af202]
  413fb0:	ja     0x413f40
  413fb2:	cmc    
  413fb3:	test   al,0x38
  413fb5:	cmp    dl,BYTE PTR [esi-0xcf381c4]
  413fbb:	and    dh,BYTE PTR [esi]
  413fbd:	xchg   edi,eax
  413fbe:	xor    eax,0xa40cac2a
  413fc3:	ins    BYTE PTR es:[edi],dx
  413fc4:	stos   BYTE PTR es:[edi],al
  413fc5:	dec    edx
  413fc6:	pop    ebp
  413fc7:	rcr    BYTE PTR [edx],1
  413fc9:	(bad)  
  413fcb:	std    
  413fcc:	add    DWORD PTR [edi-0x139b2],esp
  413fd2:	das    
  413fd3:	ja     0x41404a
  413fd5:	mov    bh,0x6f
  413fd7:	jno    0x413f62
  413fd9:	call   0x5853:0x7ef60b6d
  413fe0:	sbb    BYTE PTR ds:0x128ae7f4,al
  413fe6:	mov    esi,0x26163524
  413feb:	adc    eax,DWORD PTR ds:0xabbd266
  413ff1:	cmc    
  413ff2:	adc    BYTE PTR [ebx+0x2c],bh
  413ff5:	das    
  413ff6:	out    dx,eax
  413ff7:	ret    
  413ff8:	push   ss
  413ff9:	arpl   WORD PTR ds:0x931b5c22,dx
  413fff:	(bad)  
  414000:	add    BYTE PTR ss:[edi+0x745374e1],al
  414007:	stc    
  414008:	add    eax,ebx
  41400a:	jge    0x41406e
  41400c:	sub    eax,0xb2634150
  414011:	xor    dh,ch
  414013:	or     ch,bh
  414015:	add    BYTE PTR [ecx],al
  414017:	in     al,0xf9
  414019:	cmp    eax,DWORD PTR [ebp-0x6]
  41401c:	mov    edx,0x2648acd4
  414021:	dec    esp
  414022:	aad    0x34
  414024:	mov    ch,0x5a
  414026:	mov    al,0x3c
  414028:	dec    ebx
  414029:	aas    
  41402a:	(bad)  
  41402b:	xor    eax,0x4bee2098
  414030:	mov    dl,0xc8
  414032:	das    
  414033:	dec    edi
  414034:	jge    0x41407b
  414036:	cmp    eax,0xa0660bb4
  41403b:	push   es
  41403c:	mov    dl,0x8b
  41403e:	add    ecx,DWORD PTR [ecx+0x4ffc8205]
  414044:	or     eax,0x69cc7d33
  414049:	xchg   esp,eax
  41404a:	mov    ah,0x18
  41404c:	fdiv   DWORD PTR [ebp+0x1a]
  41404f:	dec    esi
  414050:	in     al,dx
  414051:	lds    eax,FWORD PTR [ebp-0x5e]
  414054:	dec    esi
  414055:	jl     0x413fee
  414057:	mov    ecx,0x6553344
  41405c:	call   0xde96:0x59584ef2
  414063:	enter  0x4c35,0xaf
  414067:	push   ebx
  414068:	fdivr  QWORD PTR [ebp+0x4e2f8408]
  41406e:	inc    ebx
  41406f:	outs   dx,DWORD PTR ds:[esi]
  414070:	jnp    0x413ffb
  414072:	jmp    0x81483835
  414077:	pop    ecx
  414078:	dec    edx
  414079:	dec    ebx
  41407a:	cmp    bl,BYTE PTR [eax]
  41407c:	and    esi,DWORD PTR [ecx-0x3d]
  41407f:	stc    
  414080:	xchg   ebx,eax
  414081:	in     al,dx
  414082:	aad    0x11
  414084:	mov    ebp,0x354b9d
  414089:	outs   dx,BYTE PTR ds:[esi]
  41408a:	pop    edi
  41408b:	es retf 
  41408d:	or     eax,0x3a58c3af
  414092:	xchg   esp,eax
  414093:	int    0x18
  414095:	or     DWORD PTR [eax],0xe9557e96
  41409b:	mov    eax,0xe9992c83
  4140a0:	push   eax
  4140a1:	test   esp,0x85abd931
  4140a7:	fsubr  st,st(2)
  4140a9:	je     0x4140d3
  4140ab:	dec    ebp
  4140ac:	xor    al,0x22
  4140af:	sub    ah,bh
  4140b1:	lea    ebx,gs:[ebp-0x41f8948d]
  4140b8:	ret    0xb766
  4140bb:	add    eax,0x5b8f065e
  4140c0:	mov    eax,ds:0x83fefe4
  4140c5:	pop    ds
  4140c6:	(bad)  
  4140c7:	cmp    bl,bl
  4140c9:	retf   
  4140ca:	mov    WORD PTR [eax+0x6b],cs
  4140cd:	fcmovnb st,st(3)
  4140cf:	in     eax,dx
  4140d0:	sub    cl,dh
  4140d2:	fwait
  4140d3:	lea    esi,[ebx-0x4a]
  4140d6:	push   eax
  4140d7:	cmp    BYTE PTR [eax-0x23],bh
  4140da:	dec    ecx
  4140db:	nop
  4140dc:	sub    eax,0x731a91b2
  4140e1:	and    DWORD PTR [ecx-0x5393fc9e],ecx
  4140e7:	jle    0x41410f
  4140e9:	es fs pop esi
  4140ec:	add    esp,ebp
  4140ee:	ret    
  4140ef:	push   ebx
  4140f0:	pop    edi
  4140f1:	or     DWORD PTR [edi+0x113e88e],ecx
  4140f7:	mov    dl,0x77
  4140f9:	mov    ebx,0x37366ae6
  4140fe:	aas    
  4140ff:	sbb    BYTE PTR [ebx],dh
  414101:	div    DWORD PTR [ecx]
  414103:	gs ins BYTE PTR es:[edi],dx
  414105:	cwde   
  414106:	sbb    esi,ebp
  414108:	loopne 0x4140b3
  41410a:	ja     0x41411a
  41410c:	sbb    eax,0xd1129f53
  414111:	add    eax,0x8e173a0e
  414116:	(bad)  
  414117:	cld    
  414118:	popf   
  414119:	call   0x14c0036d
  41411e:	scas   al,BYTE PTR es:[edi]
  41411f:	idiv   DWORD PTR [edi+0x7e]
  414122:	cli    
  414123:	mov    ds:0x489a3bf7,eax
  414128:	push   es
  414129:	pop    ds
  41412a:	add    bh,BYTE PTR ds:0x2128f79e
  414130:	cld    
  414131:	fsubrp st(5),st
  414133:	mov    edi,0xeecc35d1
  414138:	push   esp
  414139:	mov    WORD PTR [ebx+edi*2-0x5048ca5d],es
  414140:	(bad)  
  414141:	addr16 pop ebx
  414143:	adc    BYTE PTR [esi+0x2075538c],0x38
  41414a:	adc    eax,0xb464449a
  41414f:	mov    BYTE PTR [edi-0xa87258d],ah
  414155:	std    
  414156:	jmp    0xf683:0x41890fd3
  41415d:	test   BYTE PTR [ebx],bl
  41415f:	popf   
  414160:	push   edi
  414161:	jb     0x414103
  414163:	jecxz  0x4141ce
  414165:	push   edx
  414166:	stos   DWORD PTR es:[edi],eax
  414167:	fucomip st,st(6)
  414169:	aas    
  41416a:	stos   BYTE PTR es:[edi],al
  41416b:	scas   al,BYTE PTR es:[edi]
  41416c:	push   eax
  41416d:	mov    ds,WORD PTR [edi+0x45f427fb]
  414173:	sbb    eax,ecx
  414175:	push   ds
  414176:	retf   
  414177:	xor    DWORD PTR [eax+eax*8+0x78425177],ebp
  41417e:	test   BYTE PTR [esi],cl
  414180:	jo     0x414177
  414182:	jno    0x414119
  414184:	mov    esp,0x12c3b623
  414189:	push   edx
  41418a:	test   al,0xdc
  41418c:	ds nop
  41418e:	inc    ebp
  41418f:	or     dl,BYTE PTR [edx+eax*1-0x20e8d08d]
  414196:	pop    ds
  414197:	loop   0x414146
  414199:	out    0xbb,eax
  41419b:	sbb    eax,0x5739d872
  4141a0:	fwait
  4141a1:	pop    esi
  4141a2:	push   ds
  4141a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a4:	sahf   
  4141a5:	lods   eax,DWORD PTR ds:[esi]
  4141a6:	in     eax,dx
  4141a7:	push   ebx
  4141a8:	mov    ebx,0x9d141ac2
  4141ad:	pop    ebx
  4141ae:	dec    ebp
  4141af:	mov    BYTE PTR [ecx+0x76],bl
  4141b2:	fwait
  4141b3:	or     dl,BYTE PTR [ecx]
  4141b5:	push   ss
  4141b6:	pop    ebp
  4141b7:	sbb    al,BYTE PTR [esi-0x76]
  4141ba:	popf   
  4141bb:	push   ecx
  4141bc:	lahf   
  4141bd:	rcr    ch,1
  4141bf:	or     BYTE PTR [eax],al
  4141c1:	adc    edi,DWORD PTR [esi]
  4141c3:	or     al,0x9e
  4141c5:	scas   al,BYTE PTR es:[edi]
  4141c6:	mov    eax,eax
  4141c8:	lock adc eax,0x7d566041
  4141ce:	adc    eax,0x3fd88809
  4141d3:	xchg   ebx,eax
  4141d4:	mov    WORD PTR [edx+0x886f184],?
  4141da:	sahf   
  4141db:	push   esi
  4141dc:	(bad)  
  4141dd:	mov    esp,0xf306fdea
  4141e2:	(bad)  
  4141e3:	aad    0xb9
  4141e5:	and    ebx,ecx
  4141e7:	xlat   BYTE PTR ds:[ebx]
  4141e8:	cld    
  4141e9:	(bad)  
  4141eb:	repz in eax,0x2a
  4141ee:	jle    0x41422e
  4141f0:	xor    al,BYTE PTR [edx]
  4141f2:	cmp    edx,DWORD PTR [edx+0x39]
  4141f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141f6:	ret    
  4141f7:	and    al,0x76
  4141f9:	or     eax,0xfee34367
  4141fe:	bound  esp,QWORD PTR [eax-0x6d6c8423]
  414204:	out    dx,eax
  414205:	ins    BYTE PTR es:[edi],dx
  414206:	clc    
  414207:	mov    ebx,ebx
  414209:	mov    eax,0xd9ff4235
  41420e:	mov    ds:0x17d10db7,al
  414213:	loopne 0x4141a6
  414215:	and    BYTE PTR [ebx-0x3d],dl
  414218:	enter  0x4a59,0x3a
  41421c:	leave  
  41421d:	loope  0x414232
  41421f:	xor    eax,0x9e04be61
  414224:	xchg   edi,eax
  414225:	sub    eax,0x1e26410f
  41422a:	repz dec eax
  41422c:	ret    
  41422d:	xor    al,0x9e
  41422f:	inc    edx
  414230:	jp     0x414266
  414232:	mov    bl,BYTE PTR [edx]
  414234:	mov    WORD PTR [edi],gs
  414236:	jmp    0x414234
  414238:	pop    edi
  414239:	test   DWORD PTR [ebx],esp
  41423b:	push   es
  41423c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423d:	(bad)  [ebx+0x7c]
  414240:	sbb    ecx,esi
  414242:	mov    ch,0xa1
  414244:	dec    eax
  414245:	and    ebp,DWORD PTR [eax+0x14]
  414248:	nop
  414249:	and    al,0x2a
  41424b:	dec    esp
  41424c:	fisttp WORD PTR [edi+0x4722fd00]
  414252:	push   eax
  414253:	or     esi,edi
  414255:	xchg   ecx,eax
  414256:	jmp    0x4f29f453
  41425b:	pop    eax
  41425c:	in     eax,dx
  41425d:	iret   
  41425e:	out    dx,eax
  41425f:	std    
  414260:	clc    
  414261:	repz fdivr DWORD PTR [edi-0x9]
  414265:	fs sti 
  414267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414268:	push   edi
  414269:	es cs add al,0x4c
  41426d:	push   DWORD PTR [edi]
  41426f:	into   
  414270:	call   0xaf00073
  414275:	shl    DWORD PTR [ecx-0x16],0x1a
  414279:	add    eax,0x688d48e2
  41427e:	dec    esi
  41427f:	jnp    0x4142a3
  414281:	inc    ecx
  414282:	inc    esi
  414283:	mov    al,ds:0x5b4c8eab
  414288:	xchg   ebp,eax
  414289:	add    BYTE PTR [eax+edx*4],bl
  41428c:	and    al,0x36
  41428e:	mov    ch,0x17
  414290:	inc    ecx
  414291:	data16 cmp dh,BYTE PTR [esi]
  414294:	mov    BYTE PTR [edi-0x5d],dl
  414297:	iret   
  414298:	(bad)  
  414299:	dec    edi
  41429a:	push   ds
  41429b:	mov    ecx,0x8a79acae
  4142a0:	ins    DWORD PTR es:[edi],dx
  4142a1:	ss inc ecx
  4142a3:	sbb    al,0x82
  4142a5:	aad    0x57
  4142a7:	pop    esi
  4142a8:	inc    ebx
  4142a9:	adc    dl,BYTE PTR [esi+0xb959963]
  4142af:	in     al,0x34
  4142b1:	cli    
  4142b2:	pushf  
  4142b3:	cmp    BYTE PTR [edx+0x23],cl
  4142b6:	cs out dx,al
  4142b8:	push   0x6
  4142ba:	pop    ds
  4142bb:	adc    ch,BYTE PTR [edx-0x60f4e03c]
  4142c1:	scas   al,BYTE PTR es:[edi]
  4142c2:	mov    ?,WORD PTR [esi-0x3399ae29]
  4142c8:	pop    edx
  4142c9:	jecxz  0x414287
  4142cb:	push   es
  4142cc:	fdivr  DWORD PTR [ecx+0x59ee374c]
  4142d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d3:	aas    
  4142d4:	mov    bl,0x4d
  4142d6:	pop    esp
  4142d7:	push   ds
  4142d8:	rcl    DWORD PTR [ebx],0xb3
  4142db:	push   0xa0e82a45
  4142e0:	rcl    eax,1
  4142e2:	ins    BYTE PTR es:[edi],dx
  4142e3:	xor    bl,dl
  4142e5:	aas    
  4142e6:	mov    bh,0xbf
  4142e8:	dec    eax
  4142e9:	mov    bh,0x95
  4142eb:	jmp    0xc9980934
  4142f0:	add    BYTE PTR [ebx+0x496edb21],dl
  4142f6:	push   ss
  4142f7:	dec    edx
  4142f8:	jg     0x41427d
  4142fa:	pushf  
  4142fb:	or     eax,0x111085ee
  414300:	and    BYTE PTR [edx+edi*4+0x6d2b057e],dh
  414307:	cmc    
  414308:	mov    al,ds:0xa50f957e
  41430d:	inc    esi
  41430e:	clc    
  41430f:	nop
  414310:	rcr    DWORD PTR [ebx-0x7a],0x50
  414314:	fucomip st,st(6)
  414316:	imul   edx,eax,0x577e42ff
  41431c:	enter  0x949b,0x3d
  414320:	and    DWORD PTR [ebx+0x77f212e5],eax
  414326:	in     al,dx
  414327:	jecxz  0x414351
  414329:	pop    eax
  41432a:	hlt    
  41432b:	mov    edi,0xa4eb8e1b
  414330:	int3   
  414331:	add    BYTE PTR [ebx],cl
  414333:	leave  
  414334:	popf   
  414335:	repz inc ebx
  414337:	or     DWORD PTR [eax-0x2a],ebp
  41433a:	les    ecx,FWORD PTR [ebx]
  41433c:	jg     0x4142ec
  41433e:	mov    esp,0xad591e7b
  414343:	lahf   
  414344:	cmp    al,0xab
  414346:	inc    esi
  414347:	ss jmp 0x41436e
  41434a:	lahf   
  41434b:	paddsw mm0,QWORD PTR [ebp-0x63cdd2cc]
  414352:	and    BYTE PTR [edi],ch
  414354:	push   ss
  414355:	push   cs
  414356:	jne    0x414336
  414358:	cmp    bh,BYTE PTR [ecx]
  41435a:	retf   
  41435b:	inc    esi
  41435c:	fistp  DWORD PTR [edi-0x1e3e6d3d]
  414362:	mov    edi,0xedaa5465
  414367:	mov    DWORD PTR [esi+0x5e5aae96],eax
  41436d:	jle    0x414302
  41436f:	adc    BYTE PTR [edi],ch
  414371:	(bad)  
  414373:	inc    esp
  414374:	in     eax,dx
  414375:	push   ebx
  414376:	dec    edi
  414377:	mov    bl,0xd5
  414379:	popa   
  41437a:	shl    BYTE PTR [ebp-0x63],cl
  41437d:	aas    
  41437e:	sub    BYTE PTR [esi+0x6b45bbff],cl
  414384:	xchg   esp,eax
  414385:	jnp    0x4143cb
  414387:	(bad)  [ebx+ebx*4]
  41438a:	ror    ah,cl
  41438c:	sbb    ah,BYTE PTR [ecx-0x5]
  41438f:	jmp    0x8526bf00
  414394:	icebp  
  414395:	push   ebx
  414396:	out    0xaf,eax
  414398:	ins    DWORD PTR es:[edi],dx
  414399:	inc    esi
  41439a:	cmp    DWORD PTR [edx+esi*2],edi
  41439d:	stos   DWORD PTR es:[edi],eax
  41439e:	cs cwde 
  4143a0:	add    esp,ecx
  4143a2:	mov    edx,0x14aec001
  4143a7:	jbe    0x4143bd
  4143a9:	inc    edi
  4143aa:	cld    
  4143ab:	je     0x414352
  4143ad:	adc    ebp,DWORD PTR ds:0xc735c950
  4143b3:	push   cs
  4143b4:	jbe    0x414395
  4143b6:	pop    es
  4143b7:	mov    ah,0x1f
  4143b9:	pop    esi
  4143ba:	mov    bl,bl
  4143bc:	add    ebp,0x69
  4143bf:	scas   eax,DWORD PTR es:[edi]
  4143c0:	bound  esp,QWORD PTR [edx-0x38b82d23]
  4143c6:	retf   
  4143c7:	iret   
  4143c8:	mov    BYTE PTR [ebx+0x1f23eb75],ah
  4143ce:	clc    
  4143cf:	fmulp  st(1),st
  4143d1:	inc    ah
  4143d3:	adc    DWORD PTR [eax+0x1f6e2afa],esi
  4143d9:	or     ebx,DWORD PTR [edx]
  4143db:	sbb    ecx,DWORD PTR [ebp-0x26]
  4143de:	inc    esi
  4143df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143e0:	shl    BYTE PTR [ecx+0x5a],0xdd
  4143e4:	in     eax,0x1
  4143e6:	ins    BYTE PTR es:[edi],dx
  4143e7:	cdq    
  4143e8:	and    DWORD PTR [ebx+edx*4+0x6cab2b83],eax
  4143ef:	lea    esi,[eax-0x57ace231]
  4143f5:	dec    esi
  4143f6:	jl     0x414427
  4143f8:	mov    eax,0xb2a18fe0
  4143fd:	fucomi st,st(3)
  4143ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414400:	mov    ebp,0x2e006213
  414405:	add    al,0x61
  414407:	sbb    DWORD PTR [ecx],edi
  414409:	test   al,0x12
  41440b:	aas    
  41440c:	fst    DWORD PTR [esi]
  41440e:	jno    0x414449
  414410:	sbb    BYTE PTR [eax],ch
  414412:	adc    al,0xb6
  414414:	lods   eax,DWORD PTR ds:[esi]
  414415:	mov    WORD PTR [ebx-0x131b75b1],?
  41441b:	jge    0x414443
  41441d:	pmulhuw mm5,QWORD PTR [esi]
  414420:	mov    ch,0xb9
  414422:	iret   
  414423:	sub    ebp,DWORD PTR [edi]
  414425:	je     0x4143be
  414427:	scas   al,BYTE PTR es:[edi]
  414428:	sbb    ecx,DWORD PTR [esi]
  41442a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442b:	scas   al,BYTE PTR es:[edi]
  41442c:	dec    edi
  41442d:	sub    al,0x43
  41442f:	jg     0x41442c
  414431:	jle    0x41440e
  414433:	and    eax,0xd6697961
  414438:	mov    ch,0xfe
  41443a:	outs   dx,DWORD PTR fs:[esi]
  41443c:	inc    edx
  41443d:	sbb    BYTE PTR [edx+0x33],al
  414440:	mov    al,0xc1
  414442:	and    al,0x22
  414444:	mov    al,0x8f
  414446:	mov    ds:0x3a89e97e,eax
  41444b:	add    BYTE PTR ds:[ecx-0x76e37fe6],0xa7
  414453:	pop    ecx
  414454:	push   eax
  414455:	pop    ebp
  414456:	out    0xdc,al
  414458:	inc    eax
  414459:	sub    eax,0x864fbd2d
  41445e:	je     0x414455
  414460:	inc    ecx
  414462:	and    eax,0xb65aaac0
  414467:	js     0x41440f
  414469:	(bad)  
  41446a:	xchg   esp,eax
  41446b:	(bad)  
  41446c:	or     BYTE PTR [edx+edx*1-0x55],dh
  414470:	xchg   BYTE PTR [edx-0x60c92e9e],bh
  414476:	xchg   esp,eax
  414477:	outs   dx,BYTE PTR ds:[esi]
  414478:	and    BYTE PTR [edi-0x16],cl
  41447b:	out    dx,al
  41447c:	dec    DWORD PTR [ebp-0x26]
  41447f:	push   esp
  414480:	sbb    DWORD PTR [ebx],0xffffffb9
  414483:	mov    BYTE PTR [ebx],al
  414485:	jns    0x4144f4
  414487:	lds    ebx,FWORD PTR [eax+esi*1+0xf]
  41448b:	add    DWORD PTR [ebx+0x26],esp
  41448e:	and    al,0x3
  414490:	push   esi
  414491:	jmp    0xbfd364d1
  414496:	call   0x7774:0x79e50436
  41449d:	pop    ebp
  41449e:	lahf   
  41449f:	push   edx
  4144a0:	pusha  
  4144a1:	sub    eax,0x91b9341a
  4144a6:	cwde   
  4144a7:	dec    ebx
  4144a8:	cwde   
  4144a9:	or     BYTE PTR [eax+0x230c1bcc],al
  4144af:	hlt    
  4144b0:	nop
  4144b1:	(bad)  
  4144b3:	xchg   ebx,eax
  4144b4:	inc    eax
  4144b5:	mov    ds:0xd6a0aa2a,al
  4144ba:	lock ss das 
  4144bd:	jne    0x414460
  4144bf:	std    
  4144c0:	icebp  
  4144c1:	xlat   BYTE PTR ds:[ebx]
  4144c2:	jecxz  0x4144dd
  4144c4:	arpl   WORD PTR [ecx],bp
  4144c6:	test   eax,0x1fd56e04
  4144cb:	sbb    DWORD PTR [eax],ecx
  4144cd:	sbb    ecx,esp
  4144cf:	add    al,0xdf
  4144d1:	mov    edx,0xb7ff0f52
  4144d6:	stos   BYTE PTR es:[edi],al
  4144d7:	xchg   DWORD PTR [ecx+0x50f6f0f0],esi
  4144dd:	loopne 0x414500
  4144df:	aam    0xa9
  4144e1:	mov    ah,0x5a
  4144e3:	lahf   
  4144e4:	sti    
  4144e5:	cmp    BYTE PTR [edi],dl
  4144e7:	ds jl  0x414544
  4144ea:	sub    ch,cl
  4144ec:	sub    BYTE PTR [esi-0x1],0x57
  4144f0:	adc    eax,0x6bc5e19e
  4144f5:	mov    edx,0x112a6a4f
  4144fa:	enter  0xf79c,0x6d
  4144fe:	xchg   edi,eax
  4144ff:	out    0x11,eax
  414501:	lock inc eax
  414503:	fild   QWORD PTR [ebx-0x633f9314]
  414509:	mov    ebp,ebp
  41450b:	sub    DWORD PTR [ebx],0x14d00237
  414511:	mov    DWORD PTR [edi+0x1c919c29],ebx
  414517:	test   al,0x59
  414519:	out    0xdf,eax
  41451b:	or     eax,0x6ad15224
  414520:	das    
  414521:	test   eax,0x74f2b1ec
  414526:	arpl   si,ax
  414528:	sub    DWORD PTR [esi-0x5a222ec8],edx
  41452e:	ret    
  41452f:	les    edx,FWORD PTR [eax]
  414531:	outs   dx,DWORD PTR ds:[esi]
  414532:	repnz test eax,0x56ca3479
  414538:	out    0x61,eax
  41453a:	ins    DWORD PTR es:[edi],dx
  41453b:	lds    eax,FWORD PTR [ebp+0x4b]
  41453e:	mov    edx,0x6022faa5
  414543:	lahf   
  414544:	pop    ds
  414545:	push   es
  414546:	das    
  414547:	mov    ?,WORD PTR [ebx]
  414549:	fild   WORD PTR [ebx+0x9]
  41454c:	jns    0x41450f
  41454e:	xchg   edx,eax
  41454f:	push   edx
  414550:	mov    esp,0x851732cc
  414555:	nop
  414556:	pop    ecx
  414557:	dec    ecx
  414558:	sbb    BYTE PTR [ebp-0x4274ce4b],0xac
  41455f:	xchg   ebx,eax
  414560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414561:	add    bl,BYTE PTR [esi+0x719355aa]
  414567:	inc    DWORD PTR [ebp-0x9]
  41456a:	adc    esi,DWORD PTR [ebp-0x5b0d9487]
  414570:	test   DWORD PTR [ebp-0x72aca59],ecx
  414576:	les    edi,FWORD PTR [ebp-0x10550cd0]
  41457c:	inc    edi
  41457d:	adc    ebx,DWORD PTR [eax]
  41457f:	clc    
  414580:	or     bh,ah
  414582:	pop    es
  414583:	xchg   edx,eax
  414584:	sbb    DWORD PTR [esi-0x64a6e119],edx
  41458a:	mov    cl,0xeb
  41458c:	inc    esi
  41458d:	in     al,0x73
  41458f:	ja     0x414583
  414591:	dec    eax
  414592:	pusha  
  414593:	add    al,0xf1
  414595:	stc    
  414596:	or     bh,BYTE PTR [ecx-0x1c]
  414599:	rcl    BYTE PTR [ecx-0x561d8eb4],0x20
  4145a0:	(bad)  
  4145a1:	mov    ebx,0x75146dd4
  4145a6:	(bad)  
  4145a7:	popf   
  4145a8:	sub    eax,0x3647d019
  4145ad:	inc    ecx
  4145ae:	icebp  
  4145af:	neg    ah
  4145b1:	repz jns 0x4145e3
  4145b4:	mov    cl,0x10
  4145b6:	mov    dl,0xe4
  4145b8:	rol    DWORD PTR [eax+0x71431c53],cl
  4145be:	pushf  
  4145bf:	jl     0x41458a
  4145c1:	popf   
  4145c2:	cs push esi
  4145c4:	pop    ebx
  4145c5:	imul   bl
  4145c7:	fwait
  4145c8:	repnz int 0x16
  4145cb:	int    0x35
  4145cd:	ins    DWORD PTR es:[edi],dx
  4145ce:	test   BYTE PTR [edi+eiz*8-0x43e01],cl
  4145d5:	cwde   
  4145d6:	and    bh,BYTE PTR [eax+0x6a]
  4145d9:	popa   
  4145da:	lock fsubr QWORD PTR cs:[edx-0x3e]
  4145df:	inc    DWORD PTR [edx]
  4145e1:	cmp    BYTE PTR [edx],ch
  4145e3:	call   0xc4c8:0x8bcb1571
  4145ea:	rol    BYTE PTR [edi+ebx*2],cl
  4145ed:	push   eax
  4145ee:	mov    al,ds:0x64e160f4
  4145f3:	(bad)  ds:0xbd61eb65
  4145f9:	inc    edi
  4145fa:	mov    ch,BYTE PTR ds:0xf49ffd6f
  414600:	jg     0x414606
  414602:	ins    BYTE PTR es:[edi],dx
  414603:	into   
  414604:	and    eax,0x2a2dd50e
  414609:	addr16 loop 0x4145b0
  41460c:	xchg   DWORD PTR [ebx],eax
  41460e:	(bad)  
  41460f:	mov    edi,0xeabc55eb
  414614:	rcr    DWORD PTR [esi*8+0x2b7b1a03],cl
  41461b:	icebp  
  41461c:	inc    eax
  41461d:	push   edx
  41461e:	or     al,0x48
  414620:	add    ebp,esp
  414622:	add    DWORD PTR [ecx+ebx*1+0x48352a8c],eax
  414629:	hlt    
  41462a:	arpl   WORD PTR [ecx-0x32],cx
  41462d:	or     dl,BYTE PTR [ebx+0x2f85a753]
  414633:	pop    edx
  414634:	mov    ah,BYTE PTR [eax+0x281e601]
  41463a:	pusha  
  41463b:	ret    0x4d7e
  41463e:	cmp    eax,0x16cd38f1
  414643:	xchg   ebp,eax
  414644:	fucomip st,st(1)
  414646:	cli    
  414647:	xchg   esi,eax
  414648:	pop    esi
  414649:	fwait
  41464a:	ds (bad) 
  41464c:	rcr    BYTE PTR [ebx],cl
  41464e:	dec    esp
  41464f:	sbb    BYTE PTR [ebp+edx*1-0x614b5092],ah
  414656:	fisub  WORD PTR [ebx+0x72cd4a6e]
  41465c:	add    edx,DWORD PTR [ebx]
  41465e:	xchg   BYTE PTR [edi-0x6c],cl
  414661:	xlat   BYTE PTR ds:[ebx]
  414662:	mov    DWORD PTR [edx+edx*1],edx
  414665:	sub    DWORD PTR [edi-0x29],edi
  414668:	adc    BYTE PTR [edx],cl
  41466a:	mov    esi,edi
  41466c:	faddp  st(7),st
  41466e:	sub    DWORD PTR [edx+0x75],0xa45da91b
  414675:	retf   0x14b6
  414678:	cdq    
  414679:	xor    eax,0x64afb511
  41467e:	xor    bl,BYTE PTR [ebx+0x54]
  414681:	retf   0x5b74
  414684:	into   
  414685:	ins    DWORD PTR es:[edi],dx
  414686:	cmp    BYTE PTR [ebp+0x9],0x5c
  41468a:	jno    0x41466a
  41468c:	xchg   edx,eax
  41468d:	ret    0xd3a6
  414690:	popf   
  414691:	lahf   
  414692:	nop
  414693:	sar    BYTE PTR [ebx],0xd5
  414696:	xchg   esi,eax
  414697:	lods   al,BYTE PTR ds:[esi]
  414698:	jecxz  0x414627
  41469a:	aaa    
  41469b:	sahf   
  41469c:	lods   al,BYTE PTR ds:[esi]
  41469d:	addr16 leave 
  41469f:	loopne 0x41468b
  4146a1:	repnz icebp 
  4146a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a4:	and    BYTE PTR [ebx+edx*4-0xb],bl
  4146a8:	inc    esp
  4146a9:	iret   
  4146aa:	mov    edx,0xa03c8b01
  4146af:	add    ebp,DWORD PTR [eax]
  4146b1:	adc    al,0xaa
  4146b3:	and    al,0xb9
  4146b5:	ins    BYTE PTR es:[edi],dx
  4146b6:	add    ah,ch
  4146b8:	(bad)  
  4146b9:	hlt    
  4146ba:	dec    eax
  4146bc:	daa    
  4146bd:	sahf   
  4146be:	pop    ds
  4146bf:	push   esi
  4146c0:	jbe    0x414706
  4146c2:	fcomp  DWORD PTR [ebx-0x46]
  4146c5:	cmp    BYTE PTR [ebx+0x4cd29f01],0x27
  4146cc:	add    BYTE PTR [esi+0x5877bea0],ah
  4146d2:	cli    
  4146d3:	mov    al,ds:0xc1e32849
  4146d8:	jl     0x414731
  4146da:	xor    BYTE PTR [ebx],dl
  4146dc:	cmp    ch,ch
  4146de:	(bad)  
  4146df:	hlt    
  4146e0:	jne    0x4146ce
  4146e2:	rol    DWORD PTR [ecx+0x5151409b],cl
  4146e8:	mov    ah,0x84
  4146ea:	mov    ebp,0xf9941523
  4146ef:	bound  edx,QWORD PTR [eax+0xe]
  4146f2:	shr    BYTE PTR [ebx],0x88
  4146f5:	jb     0x41476a
  4146f7:	out    0xe7,al
  4146f9:	pop    ecx
  4146fa:	jmp    DWORD PTR [ebx+0x394348d9]
  414700:	outs   dx,BYTE PTR ds:[esi]
  414701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414702:	push   ecx
  414703:	xor    dl,BYTE PTR [eax]
  414705:	mov    edx,0xbe0eb9d6
  41470a:	bnd jns 0x41470b
  41470d:	js     0x41478a
  41470f:	pop    ds
  414710:	mov    ebx,0x93b8cad4
  414715:	cld    
  414716:	sbb    al,0xa2
  414718:	in     eax,0xf
  41471a:	add    DWORD PTR [edx-0x3a2d3d1],0xffffffd4
  414721:	jle    0x41471e
  414723:	add    DWORD PTR [esi-0x540f13d0],edx
  414729:	icebp  
  41472a:	stos   DWORD PTR es:[edi],eax
  41472b:	xchg   esp,eax
  41472c:	mov    esi,0xe983c564
  414731:	cmp    edx,edi
  414733:	ror    DWORD PTR [edi-0x245e1780],cl
  414739:	retf   
  41473a:	std    
  41473b:	inc    ebp
  41473c:	and    al,0x3f
  41473e:	pop    eax
  41473f:	jmp    0xd69e5fb2
  414744:	jne    0x4147b6
  414746:	inc    eax
  414747:	jo     0x4147a1
  414749:	pusha  
  41474a:	mov    BYTE PTR [edi],dl
  41474c:	mov    ah,0x2d
  41474e:	pop    ebx
  41474f:	out    dx,al
  414750:	aad    0xf4
  414752:	xor    cl,ah
  414754:	in     eax,0x1e
  414756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414757:	mov    edi,0x46e523e2
  41475c:	mov    cl,0xb3
  41475e:	ror    BYTE PTR [esp+ecx*1-0x37746beb],cl
  414765:	ret    0xcc32
  414768:	jbe    0x41470c
  41476a:	fcmovne st,st(2)
  41476c:	pop    ds
  41476d:	pop    ebp
  41476e:	sub    al,0x94
  414770:	out    dx,eax
  414771:	jecxz  0x41470e
  414773:	ins    BYTE PTR es:[edi],dx
  414774:	ret    
  414775:	or     dl,BYTE PTR [eax+eax*8-0x25]
  414779:	ret    
  41477a:	push   es
  41477b:	xor    ebx,DWORD PTR [ebx+0x3e]
  41477e:	cmp    al,0xd4
  414780:	lock jae 0x414725
  414783:	push   ecx
  414784:	adc    eax,0x2bdfe852
  414789:	cli    
  41478a:	push   ecx
  41478b:	sbb    bl,BYTE PTR [edi]
  41478d:	leave  
  41478e:	xchg   esp,eax
  41478f:	sbb    BYTE PTR [ecx-0x29],0xe8
  414793:	xchg   ebp,eax
  414794:	inc    edi
  414795:	ins    BYTE PTR es:[edi],dx
  414796:	jl     0x414770
  414798:	xchg   DWORD PTR ds:0x1d6ee472,ebx
  41479e:	leave  
  41479f:	iret   
  4147a0:	cmc    
  4147a1:	inc    edi
  4147a3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4147a5:	fcmovnbe st,st(0)
  4147a7:	mov    dh,0x23
  4147a9:	lock mov esp,0xfb85e6e1
  4147af:	and    al,al
  4147b1:	mov    edi,0x10425e55
  4147b6:	sbb    eax,0xcf576fad
  4147bb:	iret   
  4147bc:	or     dl,bl
  4147be:	add    edx,DWORD PTR [ebx-0x56]
  4147c1:	(bad)  
  4147c2:	fisub  WORD PTR [eax]
  4147c4:	inc    edx
  4147c5:	inc    edx
  4147c6:	push   cs
  4147c7:	push   es
  4147c8:	and    eax,0xec6c94ae
  4147cd:	out    0x48,al
  4147cf:	pusha  
  4147d0:	jmp    0xba5f:0x6f2321ac
  4147d7:	add    dl,BYTE PTR [edx+ebx*8-0x58ba585c]
  4147de:	xchg   ecx,eax
  4147df:	dec    eax
  4147e0:	scas   al,BYTE PTR es:[edi]
  4147e1:	retf   0xb142
  4147e4:	or     BYTE PTR [edx-0x1854bcf4],bl
  4147ea:	sub    ebx,DWORD PTR [edi-0x5c]
  4147ed:	test   DWORD PTR [edx+0x46],eax
  4147f0:	repz jecxz 0x4147af
  4147f3:	push   ebx
  4147f4:	sbb    al,0x2e
  4147f6:	inc    esp
  4147f7:	fldcw  WORD PTR [edi-0x2a6fd4e6]
  4147fd:	lods   eax,DWORD PTR ds:[esi]
  4147fe:	or     BYTE PTR [esi],0x4b
  414801:	icebp  
  414802:	arpl   ax,ax
  414804:	nop
  414805:	ret    
  414806:	xor    BYTE PTR [esi+0x21827a4a],al
  41480c:	fadd   st(4),st
  41480e:	or     dl,0xdd
  414811:	and    esp,DWORD PTR [ecx+0x6f5d3c96]
  414817:	push   edx
  414818:	stos   BYTE PTR es:[edi],al
  414819:	jmp    0xde8a:0xda6c002b
  414820:	push   edx
  414821:	enter  0x6d4c,0xc8
  414825:	(bad)  
  414826:	popa   
  414827:	push   edx
  414828:	mov    ah,0x75
  41482a:	push   edi
  41482b:	cmp    BYTE PTR [ecx+eax*2-0x73225a5e],al
  414832:	sahf   
  414833:	retf   
  414834:	add    esi,DWORD PTR [ebx+ebp*4+0x3b484342]
  41483b:	cdq    
  41483c:	mov    edx,0xe96b3b9
  414841:	mov    ah,BYTE PTR [edi-0x75acd2b2]
  414847:	pop    edx
  414848:	popa   
  414849:	and    cl,cl
  41484b:	(bad)  
  41484c:	mov    al,ds:0xc099286f
  414851:	jecxz  0x414840
  414853:	dec    ebp
  414854:	ins    BYTE PTR es:[edi],dx
  414855:	not    DWORD PTR [edx+0x52]
  414858:	cwde   
  414859:	inc    edi
  41485a:	push   ecx
  41485b:	cmp    eax,0x9b41eb6d
  414860:	(bad)  
  414861:	dec    ebx
  414862:	cld    
  414863:	adc    dh,bl
  414865:	add    al,0xa6
  414867:	sar    ebx,cl
  414869:	gs sub bl,al
  41486c:	sub    DWORD PTR [ecx],edi
  41486e:	pop    ebx
  41486f:	sbb    ebp,ecx
  414871:	sub    eax,0x6149fa6f
  414876:	mov    edi,0xcdf88998
  41487b:	int    0xcf
  41487d:	daa    
  41487e:	loope  0x414826
  414880:	sbb    al,0x67
  414882:	add    ch,cl
  414884:	test   eax,0x53a1b727
  414889:	mov    WORD PTR [ebp-0x1f],?
  41488c:	jmp    0xf1c5fbf7
  414891:	mov    ds:0xc19da002,eax
  414896:	cld    
  414897:	push   cs
  414898:	pop    esp
  414899:	(bad)  
  41489a:	adc    BYTE PTR [esi-0x67],dh
  41489d:	push   esi
  41489e:	outs   dx,BYTE PTR ds:[esi]
  41489f:	xor    eax,0x347c6050
  4148a4:	adc    edx,eax
  4148a6:	jg     0x4148bb
  4148a8:	sbb    DWORD PTR [ecx+0x7a],eax
  4148ab:	aas    
  4148ac:	mov    ds:0xfc98f4a6,al
  4148b1:	mov    ?,ecx
  4148b3:	(bad)  
  4148b4:	out    dx,eax
  4148b5:	sbb    al,0xb6
  4148b7:	cmp    DWORD PTR [eax+0x47d52b4e],ecx
  4148bd:	pop    ss
  4148be:	xor    bl,BYTE PTR [esi]
  4148c0:	mov    ecx,0x825bbc75
  4148c5:	nop
  4148c6:	sbb    BYTE PTR [edi-0x74],bl
  4148c9:	add    dh,BYTE PTR [bp-0x34e4]
  4148ce:	je     0x4148d2
  4148d0:	mov    edi,0x7ec11710
  4148d5:	push   ebx
  4148d6:	rcl    DWORD PTR [edi+0x18],1
  4148d9:	jle    0x414919
  4148db:	xor    BYTE PTR [ebx+0x490a7880],bh
  4148e1:	retf   
  4148e2:	lahf   
  4148e3:	jne    0x4148a0
  4148e5:	mov    ecx,0x52518409
  4148ea:	sahf   
  4148eb:	adc    DWORD PTR [ebx],esp
  4148ed:	inc    esp
  4148ee:	cmp    ebp,0xb2a4eabf
  4148f4:	rol    BYTE PTR [ecx+0x46],cl
  4148f7:	mov    edi,0x9157a043
  4148fc:	or     al,0xe4
  4148fe:	out    0x68,al
  414900:	out    0x0,al
  414902:	mov    edx,0xd88b24e2
  414907:	push   0xffffffd1
  414909:	cmp    esi,DWORD PTR [edi+0x7ac67a98]
  41490f:	pop    eax
  414910:	sahf   
  414911:	mov    edi,0x378471ae
  414916:	jmp    0x414993
  414918:	retf   0xa96
  41491b:	mov    cr7,ecx
  41491e:	pop    es
  41491f:	xchg   esi,eax
  414920:	mov    edi,0x253ebe9a
  414925:	pop    esi
  414926:	aaa    
  414927:	ins    DWORD PTR es:[edi],dx
  414928:	pop    eax
  414929:	stc    
  41492a:	add    eax,DWORD PTR [eax]
  41492c:	das    
  41492d:	xchg   edx,eax
  41492e:	adc    dh,BYTE PTR [esi+0x70567a1f]
  414934:	jb     0x414994
  414936:	popa   
  414937:	dec    eax
  414938:	rcl    bl,cl
  41493a:	mov    dl,0x2b
  41493c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493d:	cmovae esi,DWORD PTR [esi-0x32]
  414941:	in     al,dx
  414942:	ret    
  414943:	adc    esi,edi
  414945:	adc    bh,BYTE PTR [edx]
  414947:	call   0x4e3ec320
  41494c:	push   ds
  41494d:	js     0x4148f1
  41494f:	into   
  414950:	test   al,0xe
  414952:	dec    edi
  414953:	or     eax,0x52167149
  414958:	int    0x9f
  41495a:	cmp    esi,DWORD PTR ds:0xb2ae9846
  414960:	lock aaa 
  414962:	aas    
  414963:	mov    ds:0x284ab245,eax
  414968:	cld    
  414969:	not    ecx
  41496b:	fsub   st(4),st
  41496d:	bound  esi,QWORD PTR [ecx-0x70c90b87]
  414973:	out    dx,al
  414974:	outs   dx,BYTE PTR ds:[esi]
  414975:	(bad)  
  414976:	push   0x22858e0e
  41497b:	push   eax
  41497c:	jle    0x41490e
  41497e:	nop
  41497f:	pop    edi
  414980:	sbb    bh,cl
  414982:	into   
  414983:	mov    fs,WORD PTR [ecx+ebx*8+0x6b]
  414987:	mov    ds:0xaf047612,al
  41498c:	cwde   
  41498d:	pop    ds
  41498e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498f:	ret    0xea2d
  414992:	adc    DWORD PTR ds:0xce8c45b9,0xb20c0b64
  41499c:	mov    WORD PTR [edi],ds
  41499e:	mov    BYTE PTR [eax+0x4e4b9ce7],ch
  4149a4:	push   cs
  4149a5:	jl     0x41495f
  4149a7:	rol    BYTE PTR [edx+0x1085d9b2],1
  4149ad:	pop    ds
  4149ae:	pop    es
  4149af:	push   edx
  4149b0:	outs   dx,DWORD PTR ds:[esi]
  4149b1:	push   eax
  4149b2:	add    al,0x75
  4149b4:	cmp    DWORD PTR [ebx-0xbb87700],edi
  4149ba:	push   ebp
  4149bb:	sbb    esi,DWORD PTR [ebx-0x262874c]
  4149c1:	scas   eax,DWORD PTR es:[edi]
  4149c2:	(bad)  
  4149c3:	dec    esi
  4149c4:	sbb    BYTE PTR [ebx-0x51],ah
  4149c7:	lahf   
  4149c8:	or     al,0xec
  4149ca:	lods   eax,DWORD PTR ds:[esi]
  4149cb:	and    BYTE PTR [edx+0x5d],ch
  4149ce:	into   
  4149cf:	outs   dx,DWORD PTR ds:[si]
  4149d1:	ds scas eax,DWORD PTR es:[edi]
  4149d3:	mov    edi,0xa4043d25
  4149d8:	push   ebp
  4149d9:	add    edi,DWORD PTR [esi+0x76]
  4149dc:	push   ss
  4149dd:	adc    BYTE PTR [eax-0x7cd37598],0x6d
  4149e4:	push   0xffffffa3
  4149e6:	adc    al,0xeb
  4149e8:	mov    ds:0x39c91930,eax
  4149ed:	mov    bl,0xf3
  4149ef:	jge    0x414a14
  4149f1:	cmp    eax,0xa6c0353d
  4149f6:	loop   0x4149c4
  4149f8:	push   cs
  4149f9:	shl    BYTE PTR [eax-0x42545df0],0x34
  414a00:	inc    eax
  414a01:	push   cs
  414a02:	popa   
  414a03:	jns    0x414a10
  414a05:	stc    
  414a06:	sahf   
  414a07:	ret    
  414a08:	pop    ecx
  414a09:	cld    
  414a0a:	add    al,0x26
  414a0c:	retf   0xe39e
  414a0f:	mov    WORD PTR [ebp+0x48173519],es
  414a15:	or     BYTE PTR [ebx+0x42],0xff
  414a19:	push   0xffffffa4
  414a1b:	cli    
  414a1c:	cmp    al,0x4e
  414a1e:	add    eax,0xb52e0a88
  414a23:	bound  esp,QWORD PTR [eax]
  414a25:	sti    
  414a26:	xor    ebx,ebp
  414a28:	pop    ecx
  414a29:	cli    
  414a2a:	(bad)  
  414a2b:	jns    0x4149f4
  414a2d:	sbb    DWORD PTR [esi+0x62],0x9aa4e093
  414a34:	pusha  
  414a35:	or     eax,0x8a19bbdd
  414a3a:	imul   DWORD PTR ds:[edi-0x5f372166]
  414a41:	jo     0x4149c7
  414a43:	mov    edi,0xd2323016
  414a48:	sub    al,0xec
  414a4a:	push   ds
  414a4b:	aam    0xfb
  414a4d:	sbb    dh,BYTE PTR [ecx]
  414a4f:	inc    esp
  414a50:	jb     0x414ab2
  414a52:	pusha  
  414a53:	mov    ebx,DWORD PTR [eax-0x97ab81c]
  414a59:	sti    
  414a5a:	iret   
  414a5b:	test   DWORD PTR [edi],esi
  414a5d:	arpl   WORD PTR [ebp-0x26],ax
  414a60:	addr16 dec eax
  414a62:	test   bl,cl
  414a64:	(bad)  
  414a65:	out    dx,eax
  414a66:	xor    eax,0x2e047770
  414a6b:	jg     0x414a42
  414a6d:	xor    DWORD PTR [ebp+0x8],esp
  414a70:	loope  0x414a3f
  414a72:	in     al,dx
  414a73:	out    dx,eax
  414a74:	pop    ss
  414a75:	xor    edi,ebp
  414a77:	or     DWORD PTR [eax+0x7e],ecx
  414a7a:	mov    bh,0x46
  414a7c:	mov    ds:0x121dbec2,eax
  414a81:	jg     0x414af6
  414a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a84:	cmp    al,0xa6
  414a86:	outs   dx,BYTE PTR ds:[esi]
  414a87:	pop    eax
  414a88:	jne    0x414ac8
  414a8a:	aas    
  414a8b:	xchg   edx,eax
  414a8c:	int3   
  414a8d:	nop
  414a8e:	shl    BYTE PTR ds:0xb1980ce8,cl
  414a94:	std    
  414a95:	jno    0x414b04
  414a97:	sub    al,0xee
  414a99:	inc    ebx
  414a9a:	jp     0x414a98
  414a9c:	test   al,0xf9
  414a9e:	push   edx
  414a9f:	mov    al,ds:0xab969414
  414aa4:	mov    bl,0xcc
  414aa6:	outs   dx,DWORD PTR ds:[esi]
  414aa7:	sti    
  414aa8:	pop    ecx
  414aa9:	ins    DWORD PTR es:[edi],dx
  414aaa:	rcl    edi,cl
  414aac:	xchg   ebx,eax
  414aad:	out    dx,al
  414aae:	add    bh,BYTE PTR [esi]
  414ab0:	retf   
  414ab1:	(bad)  
  414ab2:	repnz pop ebp
  414ab4:	add    edx,esp
  414ab6:	out    dx,al
  414ab7:	lock inc ecx
  414ab9:	mov    gs,WORD PTR [eax+0x9b6f4c7]
  414abf:	test   BYTE PTR [ecx-0x5b],bl
  414ac2:	out    0x1b,al
  414ac4:	pop    es
  414ac5:	test   ebx,ecx
  414ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac8:	jmp    0x1418bf74
  414acd:	sub    al,0x0
  414acf:	pop    ss
  414ad0:	xchg   esp,eax
  414ad1:	js     0x414af0
  414ad3:	xchg   edx,eax
  414ad4:	inc    eax
  414ad5:	mov    dh,0x68
  414ad7:	cld    
  414ad8:	cdq    
  414ad9:	jbe    0x414a80
  414adb:	and    BYTE PTR [edx+eiz*2],al
  414ade:	jp     0x414abe
  414ae0:	push   esp
  414ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae2:	lods   eax,DWORD PTR ds:[esi]
  414ae3:	test   al,0xa2
  414ae5:	ins    BYTE PTR es:[edi],dx
  414ae6:	retf   
  414ae7:	(bad)  
  414ae9:	pop    eax
  414aea:	mov    edi,0xd1fef2d4
  414aef:	addr16 mov ds:0x1579,eax
  414af3:	cmp    dl,BYTE PTR [edi-0x7e51425b]
  414af9:	sub    eax,0x62727861
  414afe:	xor    dh,dh
  414b00:	sub    eax,0x1758b523
  414b05:	and    esp,DWORD PTR [edx+edi*8]
  414b08:	popf   
  414b09:	and    ebx,edx
  414b0b:	cs xchg ebp,eax
  414b0d:	mov    WORD PTR [ecx+ecx*1+0x72],gs
  414b11:	ins    BYTE PTR es:[edi],dx
  414b12:	push   es
  414b13:	sub    eax,0xaec0f65c
  414b18:	sub    al,0xc5
  414b1a:	xor    eax,0x16edef49
  414b1f:	add    eax,0x605a6162
  414b24:	or     BYTE PTR [ebp-0x74],bl
  414b27:	push   edi
  414b28:	dec    edx
  414b29:	jb     0x414b9e
  414b2b:	jl     0xd597e9c5
  414b31:	push   cs
  414b32:	aaa    
  414b33:	sub    ah,BYTE PTR [edi+ebp*4]
  414b36:	fild   DWORD PTR [ebx+ebx*2-0x72]
  414b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3b:	dec    edi
  414b3c:	jle    0x414b6d
  414b3e:	adc    dh,BYTE PTR [edi]
  414b40:	jge    0x414b35
  414b42:	(bad)  
  414b43:	mov    edx,0x28e4b45c
  414b48:	or     ecx,DWORD PTR [esi+edi*2]
  414b4b:	xchg   edx,eax
  414b4c:	(bad)  
  414b4d:	cmp    eax,ebp
  414b4f:	int3   
  414b50:	loope  0x414ada
  414b52:	push   ds
  414b53:	add    ebx,esi
  414b55:	mov    ebp,0x4aa02ec9
  414b5a:	mov    ecx,0xdcb8eb28
  414b5f:	ror    BYTE PTR [ebp+0x56495e00],cl
  414b65:	and    BYTE PTR [eax],ah
  414b67:	in     al,dx
  414b68:	pushf  
  414b69:	mov    esi,0x148384e2
  414b6e:	push   ebx
  414b6f:	fnsave [ecx+0x59]
  414b72:	add    cl,BYTE PTR [edi+0x1cb1d568]
  414b78:	int3   
  414b79:	stc    
  414b7a:	int    0xdf
  414b7c:	dec    esi
  414b7d:	sub    DWORD PTR [ebp+0x1b],eax
  414b80:	mov    ebx,0x80faf988
  414b85:	and    al,0x61
  414b87:	aaa    
  414b88:	jnp    0x414b73
  414b8a:	dec    ebx
  414b8b:	jl     0x414bf3
  414b8d:	mov    dl,0x69
  414b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b90:	jle    0x414b64
  414b92:	sbb    edi,DWORD PTR [ecx]
  414b94:	xor    DWORD PTR [edi-0x47],ecx
  414b97:	dec    ebx
  414b98:	mov    ds:0xbebb8b4e,eax
  414b9d:	fld    QWORD PTR [ebx]
  414b9f:	adc    DWORD PTR [ebx],esi
  414ba1:	pop    edx
  414ba2:	adc    bl,BYTE PTR [ebx+0x3da6b328]
  414ba8:	inc    ecx
  414ba9:	jle    0x414b7c
  414bab:	fcomp  DWORD PTR [ebx-0x26]
  414bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414baf:	fist   WORD PTR [ecx+0x3cfb16d9]
  414bb5:	test   eax,0x168f22c4
  414bba:	lock jp 0x414b72
  414bbd:	leave  
  414bbe:	add    esi,ebp
  414bc0:	test   eax,0xd77f6102
  414bc5:	out    0x10,al
  414bc7:	int    0xca
  414bc9:	ins    DWORD PTR es:[edi],dx
  414bca:	int3   
  414bcb:	sbb    al,0x69
  414bcd:	dec    ebx
  414bce:	pushf  
  414bcf:	and    dl,BYTE PTR [ebp+0x5b1c0646]
  414bd5:	mov    ch,0x20
  414bd7:	cmp    cl,cl
  414bd9:	inc    DWORD PTR [esi+0x216bafb0]
  414bdf:	push   ss
  414be0:	arpl   WORD PTR [ebx+0x25],sp
  414be3:	cdq    
  414be4:	idiv   DWORD PTR [esi-0x3d77f4df]
  414bea:	or     esi,ecx
  414bec:	jge    0x414b80
  414bee:	daa    
  414bef:	push   ss
  414bf0:	in     al,0x3f
  414bf2:	and    DWORD PTR [edi+0x5a4556df],edx
  414bf8:	shr    DWORD PTR [ebx+edx*1],0x7f
  414bfc:	push   edi
  414bfd:	mov    edi,DWORD PTR [ecx+0x92b63e2]
  414c03:	cdq    
  414c04:	(bad)  
  414c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c06:	in     al,dx
  414c07:	jg     0x414bce
  414c09:	repnz loop 0x414c19
  414c0c:	(bad)  
  414c0d:	lods   al,BYTE PTR ds:[esi]
  414c0e:	add    al,dl
  414c10:	scas   al,BYTE PTR es:[edi]
  414c11:	xor    al,0xe8
  414c13:	test   DWORD PTR [edx+edi*2+0x7c133a9d],edi
  414c1a:	or     edi,DWORD PTR cs:[edx-0x47]
  414c1e:	daa    
  414c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c20:	pop    eax
  414c21:	outs   dx,DWORD PTR ds:[esi]
  414c22:	cmp    al,BYTE PTR [eax]
  414c24:	mov    eax,0xca95aa2a
  414c29:	(bad)  
  414c2a:	ss cmc 
  414c2c:	sbb    esp,0xf0e9bf49
  414c32:	aam    0x1b
  414c34:	xchg   ebp,eax
  414c35:	sub    DWORD PTR [edi+0x17],0xd04ccb8e
  414c3c:	ds push ebp
  414c3e:	fs icebp 
  414c40:	in     al,0x2a
  414c42:	mov    esi,0xcda98a62
  414c47:	fwait
  414c48:	(bad)  
  414c49:	in     al,0x59
  414c4b:	adc    al,0x31
  414c4d:	jb     0x414c08
  414c4f:	mov    ebp,0x10c3f63a
  414c54:	ins    DWORD PTR es:[edi],dx
  414c55:	add    cl,BYTE PTR [eax+0x4f]
  414c58:	lea    esi,[ecx+0x2e38c198]
  414c5e:	push   eax
  414c5f:	mov    bh,0xe7
  414c61:	push   0x4f
  414c63:	pop    ss
  414c64:	sbb    eax,0xe06ec5fd
  414c69:	dec    eax
  414c6a:	and    eax,0xd06182b4
  414c6f:	test   eax,0xea8103a7
  414c75:	sub    al,0xec
  414c77:	xchg   ebx,eax
  414c78:	sub    eax,0x98511464
  414c7d:	pop    edi
  414c7e:	imul   ebp,DWORD PTR [edi],0x41
  414c81:	pop    ebp
  414c82:	jl     0x414cb5
  414c84:	ins    BYTE PTR es:[edi],dx
  414c85:	(bad)  
  414c87:	inc    ebp
  414c88:	adc    bl,BYTE PTR [ecx+eiz*8-0x225b5717]
  414c8f:	loop   0x414c92
  414c91:	jne    0x414cf2
  414c93:	pop    ss
  414c94:	stc    
  414c95:	push   ecx
  414c96:	cwde   
  414c97:	fidivr WORD PTR [ebp+0x31189bed]
  414c9d:	jne    0x414c83
  414c9f:	fcmovb st,st(1)
  414ca1:	arpl   WORD PTR ds:0xc166dce6,bp
  414ca7:	adc    eax,0xea042b4c
  414cac:	repnz sub eax,0x83c9774e
  414cb2:	lods   al,BYTE PTR ds:[esi]
  414cb3:	jmp    0x192ba061
  414cb8:	dec    edx
  414cb9:	pop    ecx
  414cba:	or     eax,DWORD PTR [eax+0x34]
  414cbd:	sahf   
  414cbe:	popf   
  414cbf:	jae    0x414cde
  414cc1:	hlt    
  414cc2:	jmp    0x4553b671
  414cc7:	loopne 0x414cfd
  414cc9:	sar    esi,cl
  414ccb:	jl     0x414ce1
  414ccd:	sbb    ebx,DWORD PTR ds:0xafd8468
  414cd3:	push   0xffffff80
  414cd5:	je     0x414cc7
  414cd7:	cdq    
  414cd8:	sbb    al,0xbc
  414cda:	loope  0x414cd4
  414cdc:	jmp    0x414d2a
  414cde:	adc    BYTE PTR [eax+0x6ebbfeff],ch
  414ce4:	mov    edx,cr1
  414ce7:	hlt    
  414ce8:	lahf   
  414ce9:	and    BYTE PTR [eax-0x273e2687],0xeb
  414cf0:	pop    esp
  414cf1:	loope  0x414cc8
  414cf3:	cmp    ebp,DWORD PTR [eax-0x179dafc]
  414cf9:	push   edi
  414cfa:	mov    edx,0x874c9a8b
  414cff:	dec    eax
  414d00:	mov    al,0x65
  414d02:	mov    bl,0xa3
  414d04:	lea    eax,[ebx+eax*4-0x6e]
  414d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d09:	mov    BYTE PTR [edi-0x53],dl
  414d0c:	stos   DWORD PTR es:[edi],eax
  414d0d:	mov    al,0x40
  414d0f:	leave  
  414d10:	int    0x57
  414d12:	sar    edx,cl
  414d14:	pop    ebp
  414d15:	imul   eax,ebp,0x708805ad
  414d1b:	fmul   QWORD PTR [ecx]
  414d1d:	dec    ebp
  414d1e:	cwde   
  414d1f:	inc    edx
  414d20:	sub    al,0xab
  414d22:	pop    ds
  414d23:	push   esi
  414d24:	push   cs
  414d25:	push   esi
  414d26:	pop    edi
  414d27:	push   esp
  414d28:	pop    esp
  414d29:	dec    ebp
  414d2a:	hlt    
  414d2b:	sub    al,0xe8
  414d2d:	fist   WORD PTR [ecx-0x7ab51b1d]
  414d33:	ja     0x414ce2
  414d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d36:	inc    edx
  414d37:	inc    ebx
  414d38:	addr16 into 
  414d3a:	jo     0x414ce6
  414d3c:	in     eax,0xd5
  414d3e:	ja     0x414d90
  414d40:	cs sbb eax,0xd7254c21
  414d46:	retf   
  414d47:	addps  xmm5,XMMWORD PTR [ebx+ebx*4+0x4bd41e]
  414d4f:	sbb    ecx,DWORD PTR [esi-0x4f]
  414d52:	jecxz  0x414d4a
  414d54:	test   al,0x20
  414d56:	in     al,dx
  414d57:	les    esp,FWORD PTR [edx+ebx*8+0xe]
  414d5b:	and    al,al
  414d5d:	or     al,0xa3
  414d5f:	int3   
  414d60:	ins    DWORD PTR es:[edi],dx
  414d61:	shl    ebx,cl
  414d63:	mov    ebx,0x63966762
  414d68:	add    eax,0x94b39075
  414d6d:	ja     0x414d37
  414d6f:	inc    esi
  414d70:	pop    eax
  414d71:	xor    eax,0x3dd74526
  414d76:	xor    dh,BYTE PTR [edi+esi*8]
  414d79:	ins    DWORD PTR es:[edi],dx
  414d7a:	sub    edx,DWORD PTR [eax-0x71]
  414d7d:	retf   0x42ae
  414d80:	jl     0x414d6c
  414d82:	jno    0x414df1
  414d84:	xor    esp,DWORD PTR [ebp+0x5473ffc1]
  414d8a:	fsub   QWORD PTR [esi-0x39c1bd95]
  414d90:	(bad)  
  414d91:	fadd   st(2),st
  414d93:	pushf  
  414d94:	or     dl,BYTE PTR [ecx+0x6302497c]
  414d9a:	popa   
  414d9b:	in     al,dx
  414d9c:	test   eax,0x12df60f6
  414da1:	aad    0x7b
  414da3:	pusha  
  414da4:	or     BYTE PTR [ebx+0x67ff79b9],bh
  414daa:	bound  ecx,QWORD PTR [edx]
  414dac:	xchg   ebx,eax
  414dad:	xchg   ebx,eax
  414dae:	iret   
  414daf:	sub    esi,DWORD PTR [eax]
  414db1:	inc    esp
  414db2:	nop
  414db3:	leave  
  414db4:	(bad)  
  414db5:	dec    ebx
  414db6:	mov    cl,0x5
  414db8:	cli    
  414db9:	lfs    ebx,FWORD PTR [ebx+0x1161864a]
  414dc0:	test   BYTE PTR [edi-0x25],0x68
  414dc4:	cmp    ch,BYTE PTR [eax+edx*8]
  414dc7:	and    al,0xf2
  414dc9:	jmp    0x414e2d
  414dcb:	mov    eax,0xcee8c93b
  414dd0:	jl     0x414dcb
  414dd2:	pop    edi
  414dd3:	pop    eax
  414dd4:	retf   
  414dd5:	icebp  
  414dd6:	pop    eax
  414dd7:	rol    DWORD PTR [edx*1-0x628a40b8],1
  414dde:	std    
  414ddf:	mov    ebx,0xb23f4898
  414de4:	int    0x76
  414de6:	cmc    
  414de7:	imul   eax,DWORD PTR ds:0x86fe76f1,0xffffffab
  414dee:	xchg   ebp,eax
  414def:	push   ebx
  414df0:	fisttp QWORD PTR [edx+0x6f]
  414df3:	fcom   QWORD PTR [ecx+0x7664cfb8]
  414df9:	xchg   ebx,eax
  414dfa:	push   es
  414dfb:	sbb    DWORD PTR [ebp+0x79],edi
  414dfe:	ret    
  414dff:	inc    edi
  414e00:	test   al,0x9e
  414e02:	and    DWORD PTR [eax+0x31],0xc2988b2e
  414e09:	push   ebx
  414e0a:	or     eax,0xa0824765
  414e0f:	adc    al,0x60
  414e11:	adc    edi,DWORD PTR [ebp+0x73]
  414e14:	sbb    bh,BYTE PTR [esi]
  414e16:	push   ecx
  414e17:	sub    DWORD PTR [edi-0x77],ebx
  414e1a:	not    al
  414e1c:	jno    0x414e10
  414e1e:	stos   DWORD PTR es:[edi],eax
  414e1f:	cwde   
  414e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e21:	ins    DWORD PTR es:[edi],dx
  414e22:	sbb    eax,0x48ef5291
  414e27:	add    eax,0xcdbdb633
  414e2c:	ret    
  414e2d:	jp     0x414dde
  414e2f:	fisub  DWORD PTR [ecx]
  414e31:	cld    
  414e32:	ror    BYTE PTR [edx-0x5ffa718],cl
  414e38:	mov    ebx,ecx
  414e3a:	shl    BYTE PTR [ecx],0x8
  414e3d:	jp     0x414e30
  414e3f:	sub    eax,DWORD PTR [edx]
  414e41:	inc    ecx
  414e42:	push   esp
  414e43:	imul   esp,DWORD PTR [edi-0x26],0x584a6394
  414e4a:	popf   
  414e4b:	sub    BYTE PTR [edx+0x29],al
  414e4e:	push   ds
  414e4f:	xchg   DWORD PTR gs:0xdeb98a5e,eax
  414e56:	mov    al,ds:0xf894fe75
  414e5b:	jecxz  0x414e25
  414e5d:	ret    0xfe08
  414e60:	cmp    ch,BYTE PTR [edi]
  414e62:	sbb    al,0x63
  414e64:	rcr    DWORD PTR [edi-0x632b1815],cl
  414e6a:	xchg   edi,eax
  414e6b:	int3   
  414e6c:	lods   al,BYTE PTR ds:[esi]
  414e6d:	mov    ds,WORD PTR [esi+0x4571fa48]
  414e73:	(bad)
  414e78:	push   esp
  414e79:	js     0x414e90
  414e7b:	mov    eax,ds:0x55f86fdf
  414e80:	pop    ebp
  414e81:	add    al,0xac
  414e83:	mov    eax,0x3ff0dc3f
  414e88:	fld    TBYTE PTR [edi+eiz*2+0xbb4132f]
  414e8f:	and    al,0xca
  414e91:	fnsave [esi]
  414e93:	sbb    BYTE PTR [eax-0x1a655762],dh
  414e99:	sbb    BYTE PTR [edi+0x60],dl
  414e9c:	nop
  414e9d:	lods   al,BYTE PTR ds:[esi]
  414e9e:	pop    ebx
  414e9f:	add    al,0x8
  414ea1:	in     eax,0xd7
  414ea3:	aas    
  414ea4:	retf   
  414ea5:	push   0x1586cd87
  414eaa:	mov    ecx,0x25714b97
  414eaf:	(bad)  
  414eb0:	inc    ecx
  414eb1:	push   es
  414eb2:	popf   
  414eb3:	test   DWORD PTR [ebx-0x28],ecx
  414eb6:	mov    dh,0x56
  414eb8:	and    cl,BYTE PTR [ebx+0x3]
  414ebb:	popf   
  414ebc:	test   eax,0x9b3f6b88
  414ec1:	xor    BYTE PTR [esi],0x9d
  414ec4:	xchg   ebp,eax
  414ec5:	test   DWORD PTR [edi+0x6dfbe15e],0xd21edd8e
  414ecf:	mul    BYTE PTR [ecx]
  414ed1:	ins    DWORD PTR es:[edi],dx
  414ed2:	mov    dh,0xce
  414ed4:	jne    0x414ec5
  414ed6:	cmp    dl,BYTE PTR [edx-0x50]
  414ed9:	mov    ds:0x881c1c03,eax
  414ede:	leave  
  414edf:	jp     0x414f4a
  414ee1:	pop    edx
  414ee2:	dec    esp
  414ee3:	ja     0x414f49
  414ee5:	lods   al,BYTE PTR ds:[esi]
  414ee6:	sub    eax,0xf19d32a3
  414eeb:	xchg   edx,eax
  414eec:	adc    eax,0x48d3df26
  414ef1:	(bad)  
  414ef2:	out    0xc6,al
  414ef4:	in     al,dx
  414ef5:	mov    cl,0xf8
  414ef7:	mov    al,ds:0xc8a6e4e4
  414efc:	(bad)  
  414efd:	test   al,0xb6
  414eff:	mov    ah,0xd3
  414f01:	test   BYTE PTR [ebx+0x3c],dh
  414f04:	(bad)  
  414f05:	(bad)  
  414f06:	jg     0x414f68
  414f08:	ins    DWORD PTR es:[edi],dx
  414f09:	rol    DWORD PTR [edi-0x65fcc69],1
  414f0f:	dec    edx
  414f10:	sbb    al,0x71
  414f12:	add    al,0xf9
  414f14:	in     eax,dx
  414f15:	dec    edx
  414f16:	adc    bl,ah
  414f18:	xchg   edx,eax
  414f19:	shl    BYTE PTR [esi+0x3b076ca0],0x6d
  414f20:	dec    eax
  414f21:	mov    esp,0x78546c1f
  414f26:	dec    ecx
  414f27:	jmp    0x31ef3ece
  414f2c:	les    esi,FWORD PTR [edi+0x681baad2]
  414f32:	and    eax,0x7c65f9d6
  414f37:	cmp    eax,0x3969ffc4
  414f3c:	test   al,0xe7
  414f3e:	jl     0x414f53
  414f40:	scas   eax,DWORD PTR es:[edi]
  414f41:	push   ebx
  414f42:	xlat   BYTE PTR ds:[ebx]
  414f43:	repnz std 
  414f45:	mov    dl,0xfe
  414f47:	inc    ebx
  414f48:	(bad)  
  414f49:	enter  0xfe8e,0x2c
  414f4d:	aad    0xce
  414f4f:	inc    ebp
  414f50:	lods   al,BYTE PTR ds:[esi]
  414f51:	pop    ebp
  414f52:	repnz test bl,al
  414f55:	sbb    al,0xcc
  414f57:	nop
  414f58:	mov    ss:0xbf6e7399,al
  414f5e:	dec    esi
  414f5f:	xor    BYTE PTR [esp+esi*4],0xd1
  414f63:	outs   dx,DWORD PTR ds:[esi]
  414f64:	sbb    al,0xc6
  414f66:	cmp    BYTE PTR [eax],ah
  414f68:	mov    eax,ds:0x7757c0cd
  414f6d:	push   ebx
  414f6e:	ret    
  414f6f:	xor    al,0xc1
  414f71:	lods   al,BYTE PTR ds:[esi]
  414f72:	push   ebx
  414f73:	(bad)  
  414f75:	xor    esp,ecx
  414f77:	out    0x46,eax
  414f79:	mov    cl,0x48
  414f7b:	sar    bl,cl
  414f7d:	jmp    0xe01d3eda
  414f82:	push   edx
  414f84:	std    
  414f85:	jae    0x414f61
  414f87:	ss das 
  414f89:	je     0x414ff0
  414f8b:	stc    
  414f8c:	lock jg 0x414f96
  414f8f:	call   0x5545:0x30b0ed4d
  414f96:	imul   ebx,DWORD PTR [ebp-0x43c68141],0x19
  414f9d:	fdivr  DWORD PTR [eax]
  414f9f:	shl    BYTE PTR [edx],0x39
  414fa2:	xchg   ebx,eax
  414fa3:	enter  0x6330,0x5c
  414fa7:	mov    ecx,edi
  414fa9:	or     BYTE PTR [ecx],ch
  414fab:	sbb    esp,DWORD PTR ds:0x4e05e079
  414fb1:	lea    ebp,ds:0x3930e310
  414fb7:	jl     0xb38c1db1
  414fbd:	sub    al,0x2a
  414fbf:	in     al,0x30
  414fc1:	out    0x68,eax
  414fc3:	push   ds
  414fc4:	xor    edx,DWORD PTR [ecx+0x31acdc62]
  414fca:	scas   eax,DWORD PTR es:[edi]
  414fcb:	sbb    ah,BYTE PTR [ebp+0x55da9a4b]
  414fd1:	jbe    0x414fa3
  414fd3:	popa   
  414fd4:	aas    
  414fd5:	push   eax
  414fd6:	inc    edi
  414fd7:	push   ebp
  414fd8:	jbe    0x414f94
  414fda:	lds    ecx,FWORD PTR [ebx+0x69]
  414fdd:	cs mul dl
  414fe0:	fidiv  DWORD PTR [ebp-0xb30a073]
  414fe6:	outs   dx,DWORD PTR ds:[esi]
  414fe7:	xor    eax,0x848e8f35
  414fec:	(bad)  
  414fed:	ret    0x1bf0
  414ff0:	arpl   WORD PTR [ebp+0x3de4ba40],cx
  414ff6:	sub    BYTE PTR [ebp+ebx*2+0x53],bl
  414ffa:	jl     0x41502c
  414ffc:	pop    edi
  414ffd:	or     ebp,edi
  414fff:	(bad)  
  415000:	daa    
  415001:	in     eax,dx
  415002:	pop    ecx
  415003:	pop    ebp
  415004:	push   ecx
  415005:	pop    ecx
  415006:	pushf  
  415007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415008:	aam    0xfc
  41500a:	sti    
  41500b:	inc    edi
  41500c:	test   BYTE PTR [edi+eiz*1+0x1ad841ad],dh
  415013:	jne    0x415016
  415015:	push   ecx
  415016:	xor    al,0x62
  415018:	mov    ebx,0x7e678f90
  41501d:	mov    eax,0xdb55d9
  415022:	mov    cl,0xb0
  415024:	jmp    0x4aa4:0x1e7bbf08
  41502b:	lods   eax,DWORD PTR ds:[esi]
  41502c:	mov    esi,0xba8e69c1
  415031:	(bad)
  415034:	add    edx,DWORD PTR [esi]
  415036:	sahf   
  415037:	jp     0x415012
  415039:	retf   
  41503a:	inc    esi
  41503b:	jns    0x414fe0
  41503d:	inc    esp
  41503e:	daa    
  41503f:	fnstsw WORD PTR [ecx+0x4a3b4eb1]
  415045:	mov    al,ds:0x93ad592a
  41504a:	shl    DWORD PTR [eax],cl
  41504c:	shr    BYTE PTR [ecx-0x2a],0x9d
  415050:	cld    
  415051:	dec    ecx
  415052:	xor    BYTE PTR [esi],ah
  415054:	sti    
  415055:	add    al,0xb7
  415057:	lea    ebx,[ebx+edi*4+0x13e67eb9]
  41505e:	neg    BYTE PTR [eax+0x4a]
  415061:	rol    DWORD PTR [eax],0x79
  415064:	jg     0x4150b6
  415066:	pop    es
  415067:	in     eax,0x4a
  415069:	sbb    al,0xca
  41506b:	dec    esi
  41506c:	pop    esi
  41506d:	aaa    
  41506e:	scas   al,BYTE PTR es:[edi]
  41506f:	arpl   WORD PTR [edi+esi*2+0x5a7d6b57],bx
  415076:	push   es
  415077:	xchg   ecx,eax
  415078:	xchg   edi,eax
  415079:	sbb    ah,BYTE PTR es:[edi-0x26]
  41507d:	scas   eax,DWORD PTR es:[edi]
  41507e:	pop    esi
  41507f:	xchg   ecx,eax
  415080:	(bad)  
  415081:	push   0x13
  415083:	call   0x65bd:0x31f60218
  41508a:	enter  0x7636,0xd3
  41508e:	in     eax,0x69
  415090:	sahf   
  415091:	arpl   si,bx
  415093:	xor    dl,BYTE PTR [esi+eax*4+0x770cf757]
  41509a:	retf   
  41509b:	dec    esp
  41509c:	fwait
  41509d:	inc    edi
  41509e:	(bad)  
  41509f:	jge    0x4150a2
  4150a1:	mov    bh,0x1a
  4150a3:	imul   ecx,DWORD PTR [edi],0xa14cc8fa
  4150a9:	stos   DWORD PTR es:[di],eax
  4150ab:	jbe    0x415069
  4150ad:	pop    ecx
  4150ae:	mov    al,0xbb
  4150b0:	jb     0x4150e2
  4150b2:	cli    
  4150b3:	mov    ebp,ecx
  4150b5:	or     al,0x1a
  4150b7:	fxch   st(5)
  4150b9:	stos   BYTE PTR es:[edi],al
  4150ba:	dec    ebx
  4150bb:	sbb    dh,ch
  4150bd:	repz xor esp,DWORD PTR fs:[eax+edx*8-0x49]
  4150c3:	jbe    0x415056
  4150c5:	mov    DWORD PTR [ebx+0x1089b1eb],esi
  4150cb:	or     esp,DWORD PTR [esi-0x57]
  4150ce:	or     DWORD PTR [esi+0x44347b83],esi
  4150d4:	mov    ecx,0xda3e5b46
  4150d9:	in     al,dx
  4150da:	pop    ss
  4150db:	hlt    
  4150dc:	xchg   esi,esp
  4150de:	mov    esp,DWORD PTR [edx-0x47]
  4150e1:	jecxz  0x415076
  4150e3:	mov    fs,WORD PTR [eax-0x27]
  4150e6:	lods   al,BYTE PTR ds:[esi]
  4150e7:	or     edi,DWORD PTR [ebx-0x53df8ce9]
  4150ed:	fwait
  4150ee:	mov    al,ds:0x25eae00c
  4150f3:	jmp    0x41516f
  4150f5:	es into 
  4150f7:	mov    ebp,0xf8827e2e
  4150fc:	cmp    DWORD PTR [esi],0xffffff88
  4150ff:	pop    esp
  415100:	aam    0xfe
  415102:	and    DWORD PTR [ecx+0x49],esp
  415105:	ds popa 
  415107:	(bad)  
  415108:	loopne 0x415137
  41510a:	mov    esp,0xe09e58f3
  41510f:	mov    ebp,0x80689b3a
  415114:	(bad)  
  415115:	std    
  415116:	pop    ecx
  415117:	mov    esi,0x62d8eee0
  41511c:	ror    BYTE PTR [ebp-0x7a],0x7
  415120:	mov    dl,0x2e
  415122:	sbb    al,0xa5
  415124:	xor    esi,esi
  415126:	pop    ebx
  415127:	add    al,0x11
  415129:	dec    ecx
  41512a:	loop   0x4150ed
  41512c:	dec    esi
  41512d:	out    0x41,eax
  41512f:	nop
  415130:	out    0xd9,eax
  415132:	hlt    
  415133:	bound  esi,QWORD PTR [edx+ebx*1-0x631960b4]
  41513a:	jnp    0x4150e1
  41513c:	mov    bl,BYTE PTR [ebx-0x14]
  41513f:	pop    es
  415140:	aad    0x50
  415142:	enter  0xd933,0x3b
  415146:	pop    edx
  415147:	sbb    edi,edx
  415149:	cwde   
  41514a:	push   esp
  41514b:	push   esi
  41514c:	jmp    0x5b8d:0x9074ed8b
  415153:	lds    ebp,FWORD PTR [ecx+edx*8+0x67]
  415157:	mov    es,WORD PTR [ebp-0x5c]
  41515a:	das    
  41515b:	gs aam 0xf
  41515e:	cmp    BYTE PTR [esi],bh
  415160:	jmp    0x41511b
  415162:	jnp    0x415187
  415164:	jl     0x41511b
  415166:	xchg   bl,ah
  415168:	test   DWORD PTR [edi-0x71],0x4ae84ddc
  41516f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415170:	mov    edi,0x68a20b45
  415175:	fild   QWORD PTR [eax+0x3]
  415178:	jmp    0x4151aa
  41517a:	xor    ecx,DWORD PTR [ebp+0x2f]
  41517d:	pushf  
  41517e:	sar    BYTE PTR [ecx+ebx*1-0x3a5e7b3f],cl
  415185:	mov    BYTE PTR [si-0x6c],dl
  415189:	loope  0x4151f2
  41518b:	sti    
  41518c:	adc    eax,0x8b1eb622
  415191:	scas   eax,DWORD PTR es:[edi]
  415192:	cmp    DWORD PTR [ecx-0x2b],esi
  415195:	ficomp DWORD PTR [esi]
  415197:	adc    edi,DWORD PTR [eax]
  415199:	dec    edx
  41519a:	fdivp  st(3),st
  41519c:	int    0x4c
  41519e:	fcomp  QWORD PTR [esp+edx*1]
  4151a1:	add    edi,DWORD PTR [edi+ebp*2+0x7d]
  4151a5:	dec    esp
  4151a6:	mov    eax,0xdaa3c0de
  4151ab:	fisub  WORD PTR [ebx]
  4151ad:	adc    ch,BYTE PTR [edx]
  4151af:	jno    0x41520a
  4151b1:	adc    eax,0xa91700d0
  4151b6:	addr16 cmp esi,ebx
  4151b9:	and    DWORD PTR [esi+0x5ab584bd],0xfffffff4
  4151c0:	adc    DWORD PTR [edi-0x5f],eax
  4151c3:	push   ebx
  4151c4:	xor    BYTE PTR [esi-0x4f],dl
  4151c7:	adc    ch,BYTE PTR [ebx]
  4151c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ca:	je     0x415180
  4151cc:	nop
  4151cd:	fisttp QWORD PTR [eax-0x51]
  4151d0:	cmp    BYTE PTR [ecx],0x87
  4151d3:	cdq    
  4151d4:	bound  ecx,QWORD PTR [esi]
  4151d6:	mov    WORD PTR [ecx+0x2eb742e9],?
  4151dc:	fsubr  DWORD PTR [eax-0x1f05988f]
  4151e2:	dec    esi
  4151e3:	imul   edx,DWORD PTR [edx-0x5f],0xffffffa2
  4151e7:	pop    ecx
  4151e8:	sbb    ah,BYTE PTR [ecx]
  4151ea:	dec    edx
  4151eb:	dec    ecx
  4151ec:	add    bh,BYTE PTR [ecx]
  4151ee:	idiv   DWORD PTR [esi+0x74]
  4151f1:	cld    
  4151f2:	mov    ecx,0x2d18c989
  4151f7:	stc    
  4151f8:	sub    eax,0x996771ea
  4151fd:	mov    cl,0x59
  4151ff:	jmp    0x41525a
  415201:	hlt    
  415202:	pop    ecx
  415203:	mov    bl,0x6e
  415205:	in     eax,dx
  415206:	pop    ebp
  415207:	sbb    bl,BYTE PTR [ebx+0x76871388]
  41520d:	in     eax,0x41
  41520f:	ffree  st(4)
  415211:	(bad)  
  415212:	sbb    eax,0xbd1d2e3a
  415217:	out    dx,al
  415218:	mov    bl,0x5d
  41521a:	(bad)  
  41521b:	cmc    
  41521c:	sbb    DWORD PTR [edx-0x6a854775],ecx
  415222:	outs   dx,DWORD PTR ds:[esi]
  415223:	test   al,0xac
  415225:	xchg   DWORD PTR [esi],ebp
  415227:	xlat   BYTE PTR ds:[ebx]
  415228:	ins    DWORD PTR es:[edi],dx
  415229:	lds    ecx,FWORD PTR [edx+0x5e5fd954]
  41522f:	inc    edi
  415230:	mov    ebx,0x94579edf
  415235:	sub    al,0xdc
  415238:	ja     0x41521d
  41523a:	ins    DWORD PTR es:[edi],dx
  41523b:	jnp    0x41521d
  41523d:	fstp   QWORD PTR [ebx+0x28]
  415240:	push   eax
  415241:	test   al,0x62
  415243:	mov    ds:0xe522cba,eax
  415248:	je     0x415239
  41524a:	pop    edx
  41524b:	out    0xf7,al
  41524d:	(bad)
  415250:	test   al,0x1c
  415252:	outs   dx,BYTE PTR ds:[esi]
  415253:	je     0x415297
  415255:	into   
  415256:	push   0xf1df4237
  41525b:	jno    0x41523b
  41525d:	mov    cl,0xe4
  41525f:	loop   0x4151e9
  415261:	into   
  415262:	jmp    0x41525d
  415264:	rol    BYTE PTR [ebx+eiz*4+0x3e],cl
  415268:	ins    BYTE PTR es:[edi],dx
  415269:	je     0x415277
  41526b:	fiadd  DWORD PTR [esi+ecx*8+0x6f]
  41526f:	sub    BYTE PTR [edx-0x30d59119],ch
  415275:	out    0x41,eax
  415277:	pusha  
  415278:	add    BYTE PTR [ebx],al
  41527a:	imul   ebx,DWORD PTR [edx+0x73],0xfbcc14e6
  415281:	pop    eax
  415282:	mov    al,0x82
  415284:	push   es
  415285:	mov    al,0x0
  415287:	sub    ch,BYTE PTR [edx-0x14]
  41528a:	mov    esp,0x6d6d559d
  41528f:	add    eax,0xe93f617a
  415294:	push   0x58
  415296:	shr    BYTE PTR [ecx],cl
  415298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415299:	scas   al,BYTE PTR es:[edi]
  41529a:	mov    bh,0x95
  41529c:	pop    ecx
  41529d:	fucomip st,st(1)
  41529f:	cmp    eax,0x820dc7b3
  4152a4:	jle    0x415279
  4152a6:	inc    ebp
  4152a7:	and    al,0x1a
  4152a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152aa:	sub    bl,BYTE PTR [edi]
  4152ac:	loopne 0x415321
  4152ae:	daa    
  4152af:	arpl   WORD PTR [eax-0x41],ax
  4152b2:	mov    ebp,0x1c9019d7
  4152b7:	jle    0x4152c0
  4152b9:	(bad)  
  4152ba:	shl    DWORD PTR [esi],1
  4152bc:	test   DWORD PTR [ecx+esi*2-0x2ee09146],eax
  4152c3:	jge    0x415279
  4152c5:	inc    ebx
  4152c6:	loop   0x415304
  4152c8:	or     eax,DWORD PTR [esi]
  4152ca:	test   edx,ebp
  4152cc:	lods   eax,DWORD PTR ds:[esi]
  4152cd:	rol    DWORD PTR [ecx],cl
  4152cf:	cmp    bh,BYTE PTR [ecx]
  4152d1:	mov    esp,0xbfa7acce
  4152d6:	jp     0x41527f
  4152d8:	mov    bl,0xb1
  4152da:	sar    BYTE PTR [esi-0x9],1
  4152dd:	mov    edx,0x2ad3815f
  4152e2:	loop   0x415348
  4152e4:	rol    ecx,1
  4152e6:	pop    ds
  4152e7:	sahf   
  4152e8:	pusha  
  4152e9:	out    0xf5,eax
  4152eb:	sub    al,0xc2
  4152ed:	or     DWORD PTR [eax],esi
  4152ef:	daa    
  4152f0:	inc    esi
  4152f1:	mov    DWORD PTR [edi],edx
  4152f3:	jno    0x415326
  4152f5:	add    ecx,ebx
  4152f7:	ret    
  4152f8:	hlt    
  4152f9:	repnz iret 
  4152fb:	mov    cl,0x6f
  4152fd:	std    
  4152fe:	rol    BYTE PTR [edx],1
  415300:	or     eax,0xa3f33575
  415305:	(bad)  
  415306:	iret   
  415307:	ror    edi,1
  415309:	dec    edi
  41530a:	dec    edi
  41530b:	je     0x4152b1
  41530d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41530f:	je     0x4152fc
  415311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415312:	lahf   
  415313:	push   ebx
  415314:	mov    esp,0x3a8251ec
  415319:	bound  edx,QWORD PTR [ebx-0x16]
  41531c:	jnp    0x415381
  41531e:	addr16 test eax,0x2da47d7a
  415324:	scas   al,BYTE PTR es:[edi]
  415325:	add    dh,ah
  415327:	shr    BYTE PTR [ebp-0x1980a1de],1
  41532d:	aam    0xb3
  41532f:	lods   eax,DWORD PTR ds:[esi]
  415330:	aam    0x14
  415332:	or     esi,edi
  415334:	mov    BYTE PTR [ecx+0x4b],ch
  415337:	je     0x4153b2
  415339:	cmp    DWORD PTR [ebp-0x3f295180],esi
  41533f:	adc    dl,BYTE PTR [ebp*8-0xaa48e65]
  415346:	cmp    bl,BYTE PTR [edx-0x3f818fd2]
  41534c:	out    dx,eax
  41534d:	inc    esi
  41534e:	xor    ecx,DWORD PTR [edi-0x435275f4]
  415354:	pop    edi
  415355:	mov    ss,edx
  415357:	sbb    al,0xaa
  415359:	shr    DWORD PTR [edi],1
  41535b:	fs inc ecx
  41535d:	jne    0x415373
  41535f:	cs inc ebx
  415361:	fisttp QWORD PTR [esi+0x23]
  415364:	jae    0x415393
  415366:	cmp    DWORD PTR [edi],ebp
  415368:	pop    ss
  415369:	lahf   
  41536a:	stos   BYTE PTR es:[edi],al
  41536b:	pop    ss
  41536c:	aam    0x43
  41536e:	lods   eax,DWORD PTR ds:[esi]
  41536f:	and    al,ah
  415371:	mov    dl,bl
  415373:	les    ebp,FWORD PTR [esi+0x75]
  415376:	push   edi
  415377:	sbb    al,al
  415379:	sbb    ebp,esp
  41537b:	scas   eax,DWORD PTR es:[edi]
  41537c:	xchg   esi,esp
  41537e:	xor    BYTE PTR [eax+esi*8-0x59f9ae37],ch
  415385:	jmp    0x7e4262c5
  41538a:	pop    ebp
  41538b:	push   cs
  41538c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41538d:	cmp    eax,0xbcd0452a
  415392:	shl    bl,1
  415394:	hlt    
  415395:	bound  edi,QWORD PTR [ebx]
  415397:	push   cs
  415398:	lea    ebp,[ebp+0x17e447e7]
  41539e:	std    
  41539f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a0:	rcr    dh,1
  4153a2:	xlat   BYTE PTR ds:[ebx]
  4153a3:	mov    BYTE PTR [esi],dl
  4153a5:	loopne 0x415413
  4153a7:	iret   
  4153a8:	shl    BYTE PTR [ecx-0x42],cl
  4153ab:	in     al,dx
  4153ac:	dec    esi
  4153ad:	fisub  WORD PTR [edx]
  4153af:	popa   
  4153b0:	pop    ebx
  4153b1:	cmp    esi,0x3b3c4eea
  4153b7:	repnz pop eax
  4153b9:	and    ebx,DWORD PTR [esi-0x53e9dca3]
  4153bf:	or     eax,0x896a6324
  4153c4:	ret    0xe964
  4153c7:	das    
  4153c8:	in     al,0x6a
  4153ca:	pushf  
  4153cb:	mov    ch,0x9d
  4153cd:	iret   
  4153ce:	push   eax
  4153cf:	imul   ebp,ebp,0xcef77673
  4153d5:	fwait
  4153d6:	ds pop ebp
  4153d8:	sub    al,0xf7
  4153da:	cli    
  4153db:	in     eax,dx
  4153dc:	push   0x67e6836
  4153e1:	in     eax,0x65
  4153e3:	sub    ebx,ebx
  4153e5:	(bad)  
  4153e6:	pop    ss
  4153e7:	pop    eax
  4153e8:	jb     0x415413
  4153ea:	inc    ecx
  4153eb:	(bad)  
  4153ec:	sub    al,0x91
  4153ee:	js     0x415378
  4153f0:	retf   0x397c
  4153f3:	or     DWORD PTR ds:[ebp*4+0x64840293],edx
  4153fb:	inc    ebx
  4153fc:	and    al,0xc3
  4153fe:	push   edi
  4153ff:	push   ds
  415400:	add    DWORD PTR [ecx+edx*8-0x74],0xaf49be36
  415408:	pop    es
  415409:	sub    dh,0x86
  41540c:	and    edx,DWORD PTR [edx+0x6c6ed4d3]
  415412:	loopne 0x415445
  415414:	jb     0x4153a8
  415416:	lahf   
  415417:	cdq    
  415418:	js     0x4153a5
  41541a:	pop    esi
  41541b:	sbb    BYTE PTR [ebp-0x5f],0xf7
  41541f:	aad    0x57
  415421:	add    DWORD PTR [ebp+0x38],esp
  415424:	pusha  
  415425:	mov    al,0x47
  415427:	out    0x8d,eax
  415429:	retf   
  41542a:	inc    esp
  41542b:	das    
  41542c:	shl    bl,0x77
  41542f:	adc    edi,edx
  415431:	cli    
  415432:	cmc    
  415433:	adc    bh,dl
  415435:	popa   
  415436:	in     al,0x38
  415438:	and    eax,0xffffff8b
  41543b:	mov    BYTE PTR [ecx],0x49
  41543e:	test   BYTE PTR [ebx+0x6c],cl
  415441:	and    edi,0x4f
  415444:	addr16 pop edx
  415446:	jg     0x415438
  415448:	mov    esp,0x501949f3
  41544d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544e:	inc    ecx
  41544f:	inc    edi
  415450:	in     al,dx
  415451:	scas   eax,DWORD PTR es:[edi]
  415452:	xchg   ebx,eax
  415453:	enter  0x413b,0x39
  415457:	or     DWORD PTR [ecx+edi*4],esp
  41545a:	dec    eax
  41545b:	and    al,0x3a
  41545d:	mov    dh,BYTE PTR [ecx-0x68]
  415460:	retf   
  415461:	xchg   edi,eax
  415462:	add    DWORD PTR [esi-0x6c],ebp
  415465:	rcl    ch,1
  415467:	dec    esp
  415468:	ins    DWORD PTR es:[edi],dx
  415469:	adc    bl,BYTE PTR [esi]
  41546b:	jle    0x4154b9
  41546d:	mov    edx,esp
  41546f:	es jmp 0x5c00dde4
  415475:	out    0x47,eax
  415477:	mov    ch,0x53
  415479:	iret   
  41547a:	pop    ebp
  41547b:	loopne 0x415420
  41547d:	iret   
  41547e:	pop    esi
  41547f:	(bad)  
  415480:	fcom   DWORD PTR [ebp+0x77]
  415483:	mov    cs:0x957bea2a,eax
  415489:	std    
  41548a:	adc    al,0x31
  41548c:	push   eax
  41548d:	jmp    0x172bb357
  415492:	jae    0x4154b9
  415494:	ds leave 
  415496:	mov    ebp,0x69d66a3d
  41549b:	pushf  
  41549c:	cdq    
  41549d:	imul   ebx,eax,0x34b37ee6
  4154a3:	cmp    eax,0xa651c8b5
  4154a8:	jno    0x4154bb
  4154aa:	daa    
  4154ab:	push   ds
  4154ac:	push   cs
  4154ad:	mov    dh,0x82
  4154af:	mov    cl,0xec
  4154b1:	sub    bl,BYTE PTR [eax+0x42]
  4154b4:	xchg   edi,eax
  4154b5:	or     bh,BYTE PTR [eax*2-0x7b81b2b9]
  4154bc:	pusha  
  4154bd:	jecxz  0x41547f
  4154bf:	xor    DWORD PTR [ebx-0x5b2a275d],0x40
  4154c6:	add    eax,0xac0c3533
  4154cb:	cdq    
  4154cc:	les    edx,FWORD PTR [ebx]
  4154ce:	sbb    BYTE PTR [eax],0xc5
  4154d1:	fsubr  st,st(3)
  4154d3:	and    eax,0x7ab705f8
  4154d8:	nop
  4154d9:	shl    DWORD PTR [esi+0x75],1
  4154dc:	retf   
  4154dd:	addr16 mov bh,0xc0
  4154e0:	data16 loope 0x41553c
  4154e3:	jp     0x415542
  4154e5:	fldl2e 
  4154e7:	sbb    eax,0x94ade3b4
  4154ec:	mov    eax,ds:0x62c61ea4
  4154f1:	and    DWORD PTR [ecx-0x17],esp
  4154f4:	inc    esi
  4154f5:	adc    al,0x27
  4154f7:	add    eax,0xa1f22f69
  4154fc:	push   0x105d10ec
  415501:	sbb    DWORD PTR [ebp+0x4b],edx
  415504:	aaa    
  415505:	xor    edx,esp
  415507:	sbb    cl,BYTE PTR [edi-0x4]
  41550a:	clc    
  41550b:	out    dx,eax
  41550c:	xor    cl,bl
  41550e:	push   eax
  41550f:	xor    eax,0x4554bc49
  415514:	ja     0x4154bf
  415516:	(bad)  [esi-0x6c]
  415519:	and    BYTE PTR [edi-0x63],bh
  41551c:	push   es
  41551d:	test   DWORD PTR [ecx-0x1ce8b324],edi
  415523:	inc    ecx
  415524:	or     dl,0x49
  415527:	add    esp,DWORD PTR [edx]
  415529:	push   esp
  41552a:	inc    esp
  41552b:	pusha  
  41552c:	mov    edx,0x39053cf1
  415531:	test   bl,ch
  415533:	jmp    0xc63b9be4
  415538:	push   cs
  415539:	pop    edi
  41553a:	gs sub eax,0x7cbc1ba9
  415540:	adc    al,0xff
  415542:	jmp    0x41554d
  415544:	in     al,0xdd
  415546:	push   ss
  415547:	in     al,dx
  415548:	push   bp
  41554a:	inc    esi
  41554b:	cmp    al,0x39
  41554d:	mov    esp,DWORD PTR [eax-0x3b402b30]
  415553:	(bad)  
  415554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415555:	inc    ebx
  415556:	pop    edi
  415557:	pop    ds
  415558:	data16 jecxz 0x41556e
  41555b:	xor    al,0x11
  41555d:	lods   eax,DWORD PTR ds:[esi]
  41555e:	mov    eax,0x609c09ff
  415563:	add    BYTE PTR ds:0x7569b5a8,bh
  415569:	inc    ecx
  41556a:	and    dl,BYTE PTR [edi]
  41556c:	and    ah,BYTE PTR [ecx-0x6d74a48b]
  415572:	jg     0x4155d3
  415574:	out    dx,al
  415575:	inc    ecx
  415576:	loopne 0x415504
  415578:	outs   dx,DWORD PTR ds:[esi]
  415579:	jge    0x4155aa
  41557b:	dec    ebp
  41557c:	jo     0x415541
  41557e:	cwde   
  41557f:	retf   0xed0b
  415582:	shr    ecx,cl
  415584:	sti    
  415585:	pop    ebx
  415586:	pop    ds
  415587:	xchg   esi,eax
  415588:	jl     0x4155dc
  41558a:	dec    esp
  41558b:	cli    
  41558c:	fld    QWORD PTR [esi-0x32]
  41558f:	in     al,0xd
  415591:	nop
  415592:	out    0xd4,eax
  415594:	icebp  
  415595:	jl     0x41557a
  415597:	repnz out 0xcd,al
  41559a:	jg     0x41556b
  41559c:	pop    ecx
  41559d:	mov    bl,0x42
  41559f:	mov    al,ds:0x2da38d8
  4155a4:	add    ecx,DWORD PTR [eax]
  4155a6:	lock pop eax
  4155a8:	push   ds
  4155a9:	pop    ecx
  4155aa:	fiadd  WORD PTR [esi+0x6b491668]
  4155b0:	push   ss
  4155b1:	test   ebx,0xa35d3eb
  4155b7:	imul   esp,DWORD PTR [esp+eax*1-0x6eb6bcd],0xffffff92
  4155bf:	jmp    0x6057:0x5aad7ff3
  4155c6:	ror    al,0x36
  4155c9:	scas   eax,DWORD PTR es:[edi]
  4155ca:	out    0xfc,eax
  4155cc:	stos   BYTE PTR es:[edi],al
  4155cd:	push   ebx
  4155ce:	hlt    
  4155cf:	ret    
  4155d0:	repnz add esp,DWORD PTR [edx-0x80]
  4155d4:	je     0x4155a7
  4155d6:	(bad)  
  4155d7:	lea    esp,[eax+0x18104e1c]
  4155dd:	jmp    0x415609
  4155df:	dec    ebx
  4155e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e1:	mov    ch,0x72
  4155e3:	pusha  
  4155e4:	(bad)  
  4155e6:	cld    
  4155e7:	in     eax,dx
  4155e8:	repz sar bh,0x46
  4155ec:	inc    eax
  4155ed:	inc    edi
  4155ee:	fst    DWORD PTR [ecx]
  4155f0:	mov    dl,0x3c
  4155f2:	shl    DWORD PTR [ebx+0x1a],cl
  4155f5:	popa   
  4155f6:	cs inc ebx
  4155f8:	fimul  WORD PTR [edx+edx*1-0x62]
  4155fc:	dec    esi
  4155fd:	std    
  4155fe:	icebp  
  4155ff:	or     al,0xb
  415601:	stc    
  415602:	rcr    BYTE PTR [ebp-0x452176c2],cl
  415608:	loop   0x415603
  41560a:	pop    eax
  41560b:	icebp  
  41560c:	xorps  xmm6,XMMWORD PTR [ecx+0x6c]
  415610:	mov    bl,0x88
  415612:	das    
  415613:	or     eax,0xbd888d2a
  415618:	(bad)  
  415619:	mov    ch,0xb3
  41561b:	cmp    dl,BYTE PTR ds:[esi+esi*2-0x44]
  415620:	cmp    dl,BYTE PTR [ebx+0x56]
  415623:	test   al,0x1c
  415625:	and    ch,bh
  415627:	jmp    0x6098750f
  41562c:	adc    DWORD PTR [eax+eiz*8+0xd827ebe],0xda623c46
  415637:	xchg   BYTE PTR [ebp-0x47],al
  41563a:	sub    al,0x81
  41563c:	mov    dl,0xae
  41563e:	push   ebx
  41563f:	inc    ecx
  415640:	dec    edx
  415641:	dec    DWORD PTR [ebx-0x15]
  415644:	add    eax,esp
  415646:	arpl   WORD PTR [ebp-0x54],ax
  415649:	xchg   DWORD PTR [ebx],esi
  41564b:	ss das 
  41564d:	xchg   ebp,eax
  41564e:	jns    0x41563d
  415650:	clc    
  415651:	xor    esp,ebp
  415653:	mov    edx,0x70dbcc40
  415658:	adc    eax,0x4817e16a
  41565d:	add    DWORD PTR [eax-0x55],edx
  415660:	stos   DWORD PTR es:[edi],eax
  415661:	add    ch,BYTE PTR [esi]
  415663:	and    DWORD PTR [edi],esp
  415665:	bound  edi,QWORD PTR [edx-0x36bb7934]
  41566b:	and    BYTE PTR [edi+0x34],bh
  41566e:	(bad)  
  41566f:	pushf  
  415670:	jbe    0x4156b3
  415672:	fwait
  415673:	and    esp,edi
  415675:	shr    bl,0x32
  415678:	push   ds
  415679:	rcl    DWORD PTR [ebp-0x7c6abeb2],cl
  41567f:	push   cs
  415680:	icebp  
  415681:	xor    BYTE PTR [eax-0x1d],ch
  415684:	dec    esp
  415685:	add    al,0x4b
  415687:	cmp    al,0x77
  415689:	xchg   DWORD PTR [ebx],ebp
  41568b:	shl    DWORD PTR [edx-0x9],1
  41568e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568f:	cmp    DWORD PTR [edx+0x23ddd1fa],esp
  415695:	cmp    al,0xe8
  415698:	xor    DWORD PTR [edx],edi
  41569a:	add    dl,BYTE PTR [edx+0x30]
  41569d:	aas    
  41569e:	rcr    DWORD PTR [esi],1
  4156a0:	cmp    DWORD PTR [esi],esp
  4156a2:	lods   al,BYTE PTR ds:[esi]
  4156a3:	aas    
  4156a4:	mov    edx,0x526b808a
  4156a9:	lock lods eax,DWORD PTR ds:[esi]
  4156ab:	lock scas eax,DWORD PTR es:[edi]
  4156ad:	out    dx,al
  4156ae:	ja     0x4156cc
  4156b0:	mov    ebx,0x764df5ce
  4156b5:	ins    DWORD PTR es:[edi],dx
  4156b6:	xchg   ebx,eax
  4156b7:	push   edx
  4156b8:	push   es
  4156b9:	sbb    eax,0x826ea54b
  4156be:	in     al,dx
  4156bf:	pop    ebp
  4156c0:	xor    al,0x77
  4156c2:	aas    
  4156c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c4:	xchg   edi,eax
  4156c5:	popf   
  4156c6:	retf   
  4156c7:	pushf  
  4156c8:	imul   esi,DWORD PTR [esi+0x18],0xffffffe3
  4156cc:	iretw  
  4156ce:	push   eax
  4156cf:	sub    esp,esi
  4156d1:	jae    0x41568f
  4156d3:	jle    0x4156f1
  4156d5:	adc    bh,BYTE PTR [ebx]
  4156d7:	ds call 0x7554:0xf0018ab0
  4156df:	stc    
  4156e0:	mov    al,0x7a
  4156e2:	jns    0x4156c0
  4156e4:	mov    edx,0x3da46536
  4156e9:	mov    ecx,DWORD PTR [ebp+0x21]
  4156ec:	fadd   QWORD PTR [ebp+edx*1+0x2ab3dc50]
  4156f3:	jae    0x41570c
  4156f5:	add    eax,0xbb7a118
  4156fa:	sbb    al,0xf0
  4156fc:	test   dh,cl
  4156fe:	ins    BYTE PTR es:[edi],dx
  4156ff:	clc    
  415700:	gs jmp 0x41575a
  415703:	in     eax,dx
  415704:	xchg   ecx,eax
  415705:	cmp    dl,BYTE PTR [ecx+0x63fed322]
  41570b:	or     DWORD PTR [esi+0x248b987],ebx
  415711:	sub    DWORD PTR [eax+0x5c49c58b],esi
  415717:	dec    edi
  415718:	xchg   esp,eax
  415719:	mov    eax,0xd3ce5195
  41571e:	addr16 dec ebx
  415720:	les    eax,FWORD PTR [esi+ebx*2-0x405b6801]
  415727:	mov    cl,0xfe
  415729:	or     ch,BYTE PTR [ecx-0x53]
  41572c:	push   esi
  41572d:	cmp    al,0xde
  41572f:	sbb    DWORD PTR [edx],esi
  415731:	imul   ebp,DWORD PTR [edi+0x5d89c30],0xfffffff2
  415738:	mov    BYTE PTR [esi-0x4c],ah
  41573b:	xor    ah,dl
  41573d:	push   cs
  41573e:	mov    al,BYTE PTR [ecx+0x34]
  415741:	sbb    BYTE PTR [esp+esi*2+0x27b82039],ah
  415748:	std    
  415749:	jne    0x4156fb
  41574b:	(bad)  
  41574c:	loopne 0x4156ee
  41574e:	mov    eax,0x815cfdab
  415753:	add    ebp,edi
  415755:	adc    eax,0x98c50497
  41575a:	mov    ds:0xf2966941,al
  41575f:	dec    ax
  415761:	pop    edi
  415762:	iret   
  415763:	addr16 add eax,0xa18e6488
  415769:	std    
  41576a:	xchg   esi,eax
  41576b:	sbb    ecx,DWORD PTR [edi]
  41576d:	cmp    DWORD PTR [ecx+0x3e],ebx
  415770:	std    
  415771:	mov    ebx,0xc138b049
  415776:	add    BYTE PTR ds:0xd12536e6,bl
  41577c:	add    BYTE PTR [edi-0x6a4cb534],0xdf
  415783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415784:	sbb    DWORD PTR [ecx-0x78],edx
  415787:	in     al,0xad
  415789:	jne    0x415803
  41578b:	in     al,dx
  41578c:	(bad)  
  41578d:	sbb    cl,al
  41578f:	xchg   edi,eax
  415790:	(bad)  
  415791:	adc    eax,0xb3eae344
  415796:	out    dx,al
  415797:	popa   
  415798:	fdiv   QWORD PTR [edi]
  41579a:	adc    BYTE PTR [edi-0x3f],ah
  41579d:	adc    DWORD PTR [ebp-0x3c],edi
  4157a0:	retf   
  4157a1:	mov    BYTE PTR ds:0x18689180,dl
  4157a7:	jge    0x41581a
  4157a9:	popa   
  4157aa:	and    cl,BYTE PTR [edi]
  4157ac:	mov    esp,0x72644d0d
  4157b1:	lods   al,BYTE PTR ds:[esi]
  4157b2:	in     eax,0xc6
  4157b4:	ins    BYTE PTR es:[edi],dx
  4157b5:	and    dh,BYTE PTR [edx+0x96f8d43]
  4157bb:	enter  0xe306,0x3c
  4157bf:	jns    0x415794
  4157c1:	inc    edx
  4157c2:	xor    eax,0xb8647764
  4157c7:	pop    eax
  4157c8:	pop    eax
  4157c9:	xor    DWORD PTR [ecx],esi
  4157cb:	sub    DWORD PTR [edx],esp
  4157cd:	rol    BYTE PTR [edx],0xa1
  4157d0:	test   eax,0xcc52fa0c
  4157d5:	leave  
  4157d6:	rcr    ebx,1
  4157d8:	fldenv [ebx-0x41]
  4157db:	fsubp  st(7),st
  4157dd:	mov    dl,BYTE PTR [ebx]
  4157df:	cmp    ebp,eax
  4157e1:	and    eax,0xe489cef
  4157e6:	jns    0x415864
  4157e8:	ins    BYTE PTR es:[edi],dx
  4157e9:	xor    bl,ch
  4157eb:	push   eax
  4157ec:	aam    0x6c
  4157ee:	fild   DWORD PTR [edi-0x18]
  4157f1:	(bad)  
  4157f2:	stc    
  4157f3:	and    DWORD PTR ds:0xe2c2c027,ebx
  4157f9:	add    bh,al
  4157fb:	cmp    bh,BYTE PTR [edi-0x41bdab29]
  415801:	loopne 0x415859
  415803:	xor    bh,BYTE PTR [ebp+0x3]
  415806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415807:	inc    edi
  415808:	or     eax,0x79783768
  41580d:	aad    0x75
  41580f:	addr16 addr16 into 
  415812:	clc    
  415813:	xchg   edx,eax
  415814:	push   edi
  415815:	dec    edi
  415816:	ds cdq 
  415818:	xchg   ecx,eax
  415819:	fnstcw WORD PTR [eax+0x54]
  41581c:	fcmovbe st,st(2)
  41581e:	shr    BYTE PTR [esi-0x4de1791f],cl
  415824:	fldcw  WORD PTR [eax-0x4c]
  415827:	mov    esp,0x13f4ecce
  41582c:	adc    al,0xc1
  41582e:	cdq    
  41582f:	sbb    ecx,ebx
  415831:	mov    cl,BYTE PTR [edx]
  415833:	(bad)  
  415835:	xchg   edx,eax
  415836:	mov    cl,0xec
  415838:	rcl    BYTE PTR [ebx+edi*4-0x567520a9],0x36
  415840:	in     eax,dx
  415841:	daa    
  415842:	push   esp
  415843:	sub    al,BYTE PTR [eax]
  415845:	icebp  
  415846:	mov    esi,0xa0e40c11
  41584b:	popa   
  41584c:	pop    esp
  41584d:	scas   al,BYTE PTR es:[edi]
  41584e:	sub    al,BYTE PTR [ebx]
  415850:	jl     0x415864
  415852:	shl    BYTE PTR [eax+edx*1-0x6f],0xba
  415857:	lahf   
  415858:	cli    
  415859:	xchg   BYTE PTR [esi],dl
  41585b:	pop    ebx
  41585c:	or     bh,BYTE PTR [esi]
  41585e:	repz mov ebp,0xc04f4f47
  415864:	ds dec ebp
  415866:	icebp  
  415867:	mov    cl,0xda
  415869:	mov    ah,0xb9
  41586b:	sub    BYTE PTR ds:0x4d1a1c60,dl
  415871:	vmwrite ebx,esp
  415874:	lds    edi,FWORD PTR [edx]
  415876:	mov    ch,0xd0
  415878:	scas   al,BYTE PTR es:[edi]
  415879:	test   eax,0x3c18396d
  41587e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41587f:	mov    dl,0xc
  415881:	add    BYTE PTR [edx-0x41],ah
  415884:	ret    
  415885:	pop    ebx
  415886:	jo     0x4158a2
  415888:	and    al,BYTE PTR ds:0xe75476c5
  41588e:	mov    ebp,0xb63ffbe8
  415893:	sub    DWORD PTR [edi+0x79],ecx
  415896:	cmp    dl,BYTE PTR [ecx-0x23]
  415899:	les    edi,FWORD PTR [ebp+0xc51145f]
  41589f:	out    0x39,al
  4158a1:	retf   0x2041
  4158a4:	push   ebp
  4158a5:	jg     0x415866
  4158a7:	in     al,0x8d
  4158a9:	add    ebp,esi
  4158ab:	mov    ebx,0x2b546d40
  4158b0:	xchg   edi,eax
  4158b1:	add    dh,dl
  4158b3:	cmp    al,0x4f
  4158b5:	out    0x29,eax
  4158b7:	xchg   ecx,eax
  4158b8:	inc    edx
  4158b9:	add    eax,DWORD PTR [esi]
  4158bb:	xchg   ebx,eax
  4158bc:	xchg   BYTE PTR [edi+eax*1],al
  4158bf:	or     eax,0xa1b9d4e3
  4158c4:	nop
  4158c5:	sub    eax,0xc8251165
  4158ca:	cmp    BYTE PTR fs:[eax],bl
  4158cd:	leave  
  4158ce:	shl    ebx,1
  4158d0:	retf   0xc95a
  4158d3:	retf   
  4158d4:	stc    
  4158d5:	or     edi,DWORD PTR [ebp-0x69]
  4158d8:	icebp  
  4158d9:	cwde   
  4158da:	(bad)  [esp+ebp*4-0x18b59b58]
  4158e1:	add    bl,bh
  4158e3:	fisubr DWORD PTR [ebx]
  4158e5:	(bad)  [ebp+0x41b373ef]
  4158eb:	icebp  
  4158ec:	loopne 0x415896
  4158ee:	or     al,0x49
  4158f0:	pushf  
  4158f1:	pop    ss
  4158f2:	xchg   esp,eax
  4158f3:	and    ch,bh
  4158f5:	pop    ebx
  4158f6:	icebp  
  4158f7:	sbb    dh,BYTE PTR [edx+0x569f52b]
  4158fd:	imul   eax,DWORD PTR [ecx-0x63],0x986c4022
  415904:	add    esi,esp
  415906:	shl    edi,cl
  415908:	push   0xb9e1ff39
  41590d:	out    dx,al
  41590e:	mov    al,0xd8
  415910:	cdq    
  415911:	jp     0x415985
  415913:	cmp    edi,edi
  415915:	or     BYTE PTR [ecx+0x18db0d6e],0xfb
  41591c:	pop    ss
  41591d:	xchg   ebp,eax
  41591e:	sbb    al,0xfb
  415920:	loope  0x415966
  415922:	xchg   ebx,eax
  415923:	(bad)  
  415925:	jge    0x415956
  415927:	add    DWORD PTR [edi],ebp
  415929:	cmp    bl,ah
  41592b:	jne    0x41599f
  41592d:	mov    esi,0x21ad7828
  415932:	push   eax
  415933:	ja     0x415916
  415935:	dec    eax
  415936:	push   ss
  415937:	inc    ecx
  415938:	mov    esi,0x75df87c4
  41593d:	int3   
  41593e:	pop    edi
  41593f:	jns    0x415970
  415941:	dec    ecx
  415942:	jp     0x41594f
  415944:	jno    0x41590d
  415946:	xchg   ecx,eax
  415947:	xchg   esi,eax
  415948:	inc    ebx
  415949:	and    DWORD PTR [esi+0x71],esi
  41594c:	push   ebp
  41594d:	pop    edi
  41594e:	cmp    al,0xee
  415950:	out    0x7c,eax
  415952:	jmp    0x8aea:0xa2ce45d3
  415959:	push   edi
  41595a:	test   eax,0x8799ac5b
  41595f:	outs   dx,DWORD PTR ds:[esi]
  415960:	pop    esi
  415961:	add    DWORD PTR [ecx],ebp
  415963:	xlat   BYTE PTR ds:[ebx]
  415964:	in     eax,dx
  415965:	cmc    
  415966:	dec    ebx
  415967:	xchg   esp,eax
  415968:	lea    ebx,[eax+0x67]
  41596b:	adc    eax,DWORD PTR [ebx+0x2fc50da5]
  415971:	icebp  
  415972:	repz and eax,0xdde6db0
  415978:	stc    
  415979:	mov    db1,ebx
  41597c:	test   eax,0x50074c32
  415981:	ficom  WORD PTR [edx]
  415983:	popa   
  415984:	xchg   edi,eax
  415985:	nop
  415986:	hlt    
  415987:	mov    esi,0x39a486ea
  41598c:	inc    esi
  41598d:	push   ds
  41598e:	std    
  41598f:	jb     0x415958
  415991:	or     eax,ebx
  415993:	add    al,0x79
  415995:	mov    ebx,0x41b97cf8
  41599a:	sti    
  41599b:	mov    edx,0xb0d07d73
  4159a0:	lods   eax,DWORD PTR ds:[esi]
  4159a1:	out    dx,eax
  4159a2:	xchg   edi,eax
  4159a3:	push   edi
  4159a4:	mov    edx,edx
  4159a6:	stos   BYTE PTR es:[edi],al
  4159a7:	push   ebp
  4159a8:	xchg   ebx,eax
  4159a9:	scas   al,BYTE PTR es:[edi]
  4159aa:	adc    DWORD PTR [edi],0xa8cd5f7c
  4159b0:	repnz adc bl,BYTE PTR [edx+0x7047dbba]
  4159b7:	xchg   esi,eax
  4159b8:	cmp    bl,bl
  4159ba:	call   0xed56:0xebf2285c
  4159c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159c2:	mov    WORD PTR [ebx+0x70],es
  4159c5:	sar    DWORD PTR [edx-0x3f2f3435],1
  4159cb:	scas   al,BYTE PTR es:[edi]
  4159cc:	js     0x4159b4
  4159ce:	retf   
  4159cf:	and    ebx,edi
  4159d1:	cdq    
  4159d2:	int3   
  4159d3:	xchg   edx,eax
  4159d4:	outs   dx,BYTE PTR ds:[esi]
  4159d5:	and    eax,0x87f844a4
  4159da:	popa   
  4159db:	stc    
  4159dc:	sar    BYTE PTR [ecx],0x28
  4159df:	or     DWORD PTR ss:[edi+eax*8+0x69834aaf],esp
  4159e7:	sub    esp,edi
  4159e9:	mov    esi,0xba60ff35
  4159ee:	adc    ch,BYTE PTR [bx+di+0x25]
  4159f2:	pop    ss
  4159f3:	or     ebx,esp
  4159f5:	xchg   esp,eax
  4159f6:	mov    al,ds:0x3a4cc6a8
  4159fb:	mov    cl,0x4f
  4159fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159fe:	xor    DWORD PTR [ecx],esi
  415a00:	in     eax,dx
  415a01:	add    DWORD PTR [ecx-0x3997b8f3],eax
  415a07:	xor    ecx,DWORD PTR [edi+0x48]
  415a0a:	in     al,0x75
  415a0c:	sbb    al,0x93
  415a0e:	fprem1 
  415a10:	fcom   DWORD PTR [esi+0x5eea728f]
  415a16:	adc    ebp,DWORD PTR [edi+0x15876b70]
  415a1c:	and    cl,BYTE PTR [esi+0x8268dcd]
  415a22:	add    al,BYTE PTR [edx+0x77]
  415a25:	push   0x23
  415a27:	mov    DWORD PTR [edx+0x12],0xdbdf1254
  415a2e:	pop    ebx
  415a2f:	fiadd  DWORD PTR [edi+0x76a64709]
  415a35:	aam    0xae
  415a37:	sti    
  415a38:	fist   WORD PTR [ecx-0x1a20cbc7]
  415a3e:	dec    esi
  415a3f:	add    eax,0xa8663375
  415a44:	jg     0x415a7a
  415a46:	add    ah,dl
  415a48:	push   es
  415a49:	or     al,0xe6
  415a4b:	fwait
  415a4c:	sub    BYTE PTR [edi-0x6ba260cf],bl
  415a52:	test   BYTE PTR [edi],dh
  415a54:	ret    
  415a55:	popa   
  415a56:	jns    0x415ac1
  415a58:	out    dx,eax
  415a59:	cs mov dh,0x2c
  415a5c:	rcl    DWORD PTR [eax+0x4f],cl
  415a5f:	sbb    dl,BYTE PTR [edx-0x6d]
  415a62:	pop    ebp
  415a63:	aaa    
  415a64:	dec    BYTE PTR [eax-0xe]
  415a67:	and    eax,0x810f08fb
  415a6c:	cwde   
  415a6d:	fcom   DWORD PTR [ebp-0x31]
  415a70:	inc    DWORD PTR [esi+0x60]
  415a73:	ret    0x7cc2
  415a76:	scas   eax,DWORD PTR es:[edi]
  415a77:	popa   
  415a78:	push   edi
  415a79:	loopne 0x415ae2
  415a7b:	in     al,0x9d
  415a7d:	push   eax
  415a7e:	inc    ebp
  415a7f:	ds dec ecx
  415a81:	xor    al,0x4f
  415a83:	out    0xbc,al
  415a85:	push   ds
  415a86:	das    
  415a87:	faddp  st(7),st
  415a89:	xlat   BYTE PTR ds:[ebx]
  415a8a:	jl     0x415a32
  415a8c:	push   edi
  415a8d:	ds push 0x44357488
  415a93:	addr16 xchg edi,eax
  415a95:	cdq    
  415a96:	and    al,0x25
  415a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a99:	outs   dx,DWORD PTR ds:[esi]
  415a9a:	and    DWORD PTR [ebx+0x43d9eea],ebx
  415aa0:	push   edi
  415aa1:	daa    
  415aa2:	rcl    DWORD PTR [edi],0x71
  415aa5:	es call 0xf5faa8f6
  415aab:	pop    eax
  415aac:	dec    esp
  415aad:	stc    
  415aae:	push   esi
  415aaf:	lea    ecx,[ecx-0x1664ec8]
  415ab5:	jbe    0x415b29
  415ab7:	sub    ebp,ebp
  415ab9:	add    edi,esi
  415abb:	adc    ah,BYTE PTR [esi]
  415abd:	cmp    DWORD PTR [ebx],edx
  415abf:	sbb    dh,ah
  415ac1:	sar    DWORD PTR [ecx],cl
  415ac3:	dec    ebp
  415ac4:	lods   eax,DWORD PTR ds:[esi]
  415ac5:	jle    0x415a67
  415ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac8:	ds mov esi,?
  415acb:	jle    0x415ac2
  415acd:	pop    ebx
  415ace:	pop    ecx
  415acf:	mov    edi,0xe390f5a0
  415ad4:	sbb    DWORD PTR [esi+0x4f3b7ece],ecx
  415ada:	xchg   BYTE PTR [ebx-0x23],cl
  415add:	jno    0x415aa9
  415adf:	call   DWORD PTR [ecx-0x666da104]
  415ae5:	push   ebp
  415ae6:	(bad)  
  415ae7:	push   ecx
  415ae8:	mov    bl,0xd1
  415aea:	dec    eax
  415aeb:	add    BYTE PTR [ebx],0x58
  415aee:	mov    al,ds:0xa7835f4f
  415af3:	push   cs
  415af4:	pop    ss
  415af5:	dec    ebx
  415af6:	cmp    eax,DWORD PTR [di-0x7f]
  415afa:	add    al,0x41
  415afc:	leave  
  415afd:	mov    ds:0x3822a940,eax
  415b02:	push   ebp
  415b03:	not    DWORD PTR [edx-0x2b]
  415b06:	sub    ch,BYTE PTR [eax]
  415b08:	aam    0x79
  415b0a:	out    dx,eax
  415b0b:	xchg   esi,eax
  415b0c:	call   0x9f9e126f
  415b11:	pop    ecx
  415b12:	inc    esi
  415b13:	cwde   
  415b14:	add    ebp,edi
  415b16:	jnp    0x415b64
  415b18:	add    ch,BYTE PTR [edx]
  415b1a:	fcom   DWORD PTR [esi+0x62e9db63]
  415b20:	mov    bl,0xa7
  415b22:	mov    esp,0x259d26be
  415b27:	dec    ebx
  415b28:	repnz add BYTE PTR [ecx+0x2e],bl
  415b2c:	in     eax,0xac
  415b2e:	dec    edi
  415b2f:	frndint 
  415b32:	mov    eax,0x6efc5bbf
  415b37:	sar    BYTE PTR [edi],cl
  415b39:	jnp    0x415bac
  415b3b:	push   ebx
  415b3d:	sub    BYTE PTR [ebx-0x5b],cl
  415b40:	imul   esi,DWORD PTR [esi],0x17
  415b43:	je     0x415b98
  415b45:	pop    esp
  415b46:	rcl    DWORD PTR [esi],cl
  415b48:	inc    ebp
  415b49:	sbb    al,0xcb
  415b4b:	push   esp
  415b4c:	jae    0x415aeb
  415b4e:	xchg   esi,eax
  415b4f:	div    BYTE PTR gs:[ecx]
  415b52:	leave  
  415b53:	xchg   esi,eax
  415b54:	or     eax,0x7d87b29
  415b59:	popa   
  415b5a:	sub    DWORD PTR [eax+0x5c],ebp
  415b5d:	jge    0x415b07
  415b5f:	inc    ebp
  415b60:	jg     0x415b4a
  415b62:	(bad)  
  415b63:	aad    0xbe
  415b65:	mov    ecx,0x6b943312
  415b6a:	ins    BYTE PTR es:[edi],dx
  415b6b:	cmc    
  415b6c:	js     0x415baa
  415b6e:	dec    esi
  415b6f:	mov    edx,0xfc3540dc
  415b74:	fist   DWORD PTR [eax-0x47]
  415b77:	add    al,0xe8
  415b79:	outs   dx,DWORD PTR ds:[esi]
  415b7a:	clc    
  415b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7c:	leave  
  415b7d:	js     0x415b8a
  415b7f:	nop
  415b80:	sbb    bl,BYTE PTR [edi+eax*4+0x4abcf790]
  415b87:	adc    eax,0x678c1f7b
  415b8c:	push   edi
  415b8d:	or     edx,DWORD PTR [ebp+0x73]
  415b90:	and    BYTE PTR [edi*2+0x5d88b669],ah
  415b97:	loop   0x415b20
  415b99:	push   esi
  415b9a:	aaa    
  415b9b:	mov    edx,0x6c65f4e6
  415ba0:	push   ss
  415ba1:	push   eax
  415ba2:	inc    ecx
  415ba3:	imul   ecx,DWORD PTR [edi-0x7163d7c9],0xd1278b5
  415bad:	sub    DWORD PTR [esi-0x59],edi
  415bb0:	cmp    edx,ebx
  415bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb3:	mov    esi,DWORD PTR [ecx]
  415bb5:	mov    ecx,0xd5d2e9b5
  415bba:	aas    
  415bbb:	test   DWORD PTR [eax+0x5b670777],edx
  415bc1:	jg     0x415bab
  415bc3:	mov    cl,0x6a
  415bc5:	stos   BYTE PTR es:[edi],al
  415bc6:	jle    0x415beb
  415bc8:	push   ss
  415bc9:	inc    edx
  415bca:	adc    eax,0x21a3f0d8
  415bcf:	cmp    eax,DWORD PTR [edi]
  415bd1:	xor    eax,0x85a33c0
  415bd6:	outs   dx,DWORD PTR ds:[esi]
  415bd7:	dec    ecx
  415bd8:	(bad)  
  415bd9:	sar    BYTE PTR [ebx+0x32],cl
  415bdc:	jle    0x415bff
  415bde:	loopne 0x415c43
  415be0:	bnd jnp 0x415bed
  415be3:	mov    ebx,0x1b2389b9
  415be8:	loop   0x415bd2
  415bea:	repnz into 
  415bec:	mov    ds:0x877f809b,eax
  415bf1:	scas   eax,DWORD PTR es:[edi]
  415bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf3:	mov    WORD PTR [edi*4+0xee4e828],es
  415bfa:	das    
  415bfb:	mov    ds:0xab38f8c1,eax
  415c00:	test   esi,esi
  415c02:	mov    ds:0x59c4183e,al
  415c07:	(bad)  
  415c08:	test   al,0xec
  415c0a:	sub    bh,0xfb
  415c0d:	cmp    DWORD PTR [esi+ebx*2-0x75],ebp
  415c11:	push   eax
  415c12:	sbb    dh,BYTE PTR [edi+0x3abbd5b7]
  415c18:	mov    al,0xf7
  415c1a:	pop    edi
  415c1b:	fidiv  WORD PTR [ecx]
  415c1d:	xchg   esp,eax
  415c1e:	mov    dh,0xe4
  415c20:	hlt    
  415c21:	les    ebx,FWORD PTR [ecx-0x610830fc]
  415c27:	jno    0x415c95
  415c29:	(bad)  
  415c2a:	shl    BYTE PTR [ecx+eax*4],1
  415c2d:	push   esp
  415c2e:	into   
  415c2f:	ror    bl,1
  415c31:	scas   al,BYTE PTR es:[edi]
  415c32:	outs   dx,BYTE PTR ds:[esi]
  415c33:	jae    0x415c42
  415c35:	into   
  415c36:	mov    dl,0x67
  415c38:	xchg   DWORD PTR [ecx],ecx
  415c3a:	cmp    eax,0xbf076ceb
  415c3f:	inc    esp
  415c40:	push   esp
  415c41:	push   ss
  415c42:	sbb    al,0xfe
  415c44:	into   
  415c45:	jmp    0x459f7b7b
  415c4a:	repnz push cs
  415c4c:	or     al,0x2d
  415c4e:	jno    0x415be0
  415c50:	xchg   ebp,eax
  415c51:	and    al,0x60
  415c53:	cmp    ebp,DWORD PTR [ebp+edx*4-0x37]
  415c57:	jne    0x415c5b
  415c59:	dec    eax
  415c5a:	call   0xffeafaf
  415c5f:	out    dx,al
  415c60:	mov    dl,0x65
  415c62:	jecxz  0x415c90
  415c64:	adc    BYTE PTR [ecx-0x79476fd9],0x40
  415c6b:	nop
  415c6c:	mov    cl,0x6c
  415c6e:	push   ss
  415c6f:	inc    eax
  415c70:	xchg   DWORD PTR [eax+0x15a5b345],esp
  415c76:	dec    ebx
  415c77:	xchg   edi,eax
  415c78:	pop    edx
  415c79:	retf   
  415c7a:	push   0x123f686e
  415c7f:	push   esi
  415c80:	and    ch,al
  415c82:	mov    bh,0xcb
  415c84:	ror    BYTE PTR [esi-0x49deac38],cl
  415c8a:	cmp    DWORD PTR [ecx+edi*8+0x59e92bd1],eax
  415c91:	push   eax
  415c92:	fmul   DWORD PTR [esi-0x5b1043a3]
  415c98:	fwait
  415c99:	lahf   
  415c9a:	sbb    ah,al
  415c9c:	push   ecx
  415c9d:	lods   al,BYTE PTR ds:[esi]
  415c9e:	hlt    
  415c9f:	dec    edi
  415ca0:	jno    0x415c87
  415ca2:	adc    eax,0xbf22762
  415ca7:	push   esp
  415ca8:	int3   
  415ca9:	ss and eax,0x48ab0331
  415caf:	mov    dl,0x5f
  415cb1:	jo     0x415c66
  415cb3:	mov    ebp,0x9665df72
  415cb8:	outs   dx,BYTE PTR ds:[esi]
  415cb9:	mov    ecx,0x34b68c79
  415cbe:	sub    al,0x3c
  415cc0:	clc    
  415cc1:	out    dx,al
  415cc2:	dec    esi
  415cc3:	pop    es
  415cc4:	mov    eax,0xfdb5708e
  415cc9:	cs leave 
  415ccb:	push   esi
  415ccc:	sub    eax,0xa5fb213b
  415cd1:	fbld   TBYTE PTR [ebx+0x7a]
  415cd4:	pop    es
  415cd5:	inc    ecx
  415cd6:	lds    esi,FWORD PTR [esi]
  415cd8:	adc    BYTE PTR [eax+0x17f9cb3c],bl
  415cde:	adc    BYTE PTR [esi],0x14
  415ce1:	xchg   esi,eax
  415ce2:	retf   0x775a
  415ce5:	shl    DWORD PTR [edx-0x7f59034a],1
  415ceb:	loope  0x415cf3
  415ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cee:	mov    cl,0x4b
  415cf0:	in     eax,0x26
  415cf2:	idiv   BYTE PTR ds:0x7a791f1
  415cf8:	xor    ch,BYTE PTR [edx+0x5f]
  415cfb:	cwde   
  415cfc:	fwait
  415cfd:	push   ecx
  415cfe:	or     BYTE PTR [edi+0xd5dda4c],cl
  415d04:	pop    edi
  415d05:	scas   eax,DWORD PTR es:[edi]
  415d06:	ins    DWORD PTR es:[edi],dx
  415d07:	jp     0x415d41
  415d09:	xchg   ebx,eax
  415d0a:	jns    0x415ce0
  415d0c:	iret   
  415d0d:	nop
  415d0e:	arpl   dx,bx
  415d10:	std    
  415d11:	stos   BYTE PTR es:[edi],al
  415d12:	jmp    0x415d1a
  415d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d15:	fwait
  415d16:	scas   al,BYTE PTR es:[edi]
  415d17:	clc    
  415d18:	jnp    0x415cd7
  415d1a:	(bad)  
  415d1b:	icebp  
  415d1c:	xchg   DWORD PTR [ecx+0x76],esp
  415d1f:	pop    es
  415d20:	jb     0x415d98
  415d22:	ja     0x415d82
  415d24:	out    dx,al
  415d25:	sbb    al,0x99
  415d27:	ret    
  415d28:	sbb    eax,0x48c83e5f
  415d2d:	outs   dx,DWORD PTR ds:[esi]
  415d2e:	cwde   
  415d2f:	js     0x415d99
  415d31:	cli    
  415d32:	cwde   
  415d33:	jnp    0x415d1e
  415d35:	jg     0x415d51
  415d37:	inc    eax
  415d38:	cmp    BYTE PTR [ebx],bl
  415d3a:	mov    edx,0x69e5a8e
  415d3f:	dec    eax
  415d40:	or     edx,ebx
  415d42:	sbb    eax,0x3819eef9
  415d47:	mov    ebx,0x9094ba02
  415d4c:	jbe    0x415daa
  415d4e:	test   ah,dl
  415d50:	push   cs
  415d51:	outs   dx,DWORD PTR es:[esi]
  415d53:	test   ecx,esp
  415d55:	push   es
  415d56:	loope  0x415d5f
  415d58:	xchg   DWORD PTR [ebp+0x17d32f4],edi
  415d5e:	or     eax,0xce4580e2
  415d63:	and    BYTE PTR [edx],bl
  415d65:	lods   al,BYTE PTR ds:[esi]
  415d66:	push   0xffffffee
  415d68:	mov    ds:0xa7f62e70,al
  415d6d:	dec    eax
  415d6e:	loop   0x415dd9
  415d70:	cmp    esp,DWORD PTR [ecx]
  415d72:	mov    ds:0xaede99b5,al
  415d77:	dec    eax
  415d78:	push   edx
  415d79:	fist   WORD PTR ds:0x24bbe8a8
  415d7f:	adc    edi,edx
  415d81:	xor    BYTE PTR [edx-0x10],ch
  415d84:	daa    
  415d85:	jg     0x415dad
  415d87:	arpl   WORD PTR [ecx+0x65c80424],bp
  415d8d:	add    eax,0x840d3492
  415d92:	(bad)  
  415d93:	mov    ebp,0x8fe874db
  415d98:	iret   
  415d99:	call   0x9cf3:0xd8978aad
  415da0:	cli    
  415da1:	xor    DWORD PTR [ecx],ecx
  415da3:	xchg   esp,ebx
  415da5:	jnp    0x415d78
  415da7:	xor    edi,DWORD PTR ds:0xa8817d8f
  415dad:	daa    
  415dae:	int    0x1
  415db0:	xchg   ebx,eax
  415db1:	xor    al,0xd5
  415db3:	mov    ebp,DWORD PTR [ecx]
  415db5:	fnstsw WORD PTR [ecx+0x3d26c709]
  415dbb:	xchg   esi,eax
  415dbc:	pop    edx
  415dbd:	lock sbb ebp,DWORD PTR [ebp-0x47]
  415dc1:	sbb    ch,BYTE PTR [ebp+0x6b5804e2]
  415dc7:	inc    esp
  415dc8:	arpl   WORD PTR [edi-0xbf6c6bc],dx
  415dce:	jb     0x415e27
  415dd0:	fs call 0x6e2462ec
  415dd6:	sub    al,0x65
  415dd8:	add    DWORD PTR [eax+0x4],edx
  415ddb:	xchg   ebx,eax
  415ddc:	sub    ch,BYTE PTR [eax]
  415dde:	xor    al,0x17
  415de0:	adc    esi,DWORD PTR [edi+0x42de6b88]
  415de6:	push   es
  415de7:	jnp    0x415de5
  415de9:	mov    BYTE PTR [ebx],dh
  415deb:	sar    BYTE PTR [eax+0x526fdf22],0x87
  415df2:	mov    dh,BYTE PTR [eax]
  415df4:	sbb    DWORD PTR [ecx],eax
  415df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df7:	repnz popa 
  415df9:	adc    cl,0x2b
  415dfc:	stos   BYTE PTR es:[edi],al
  415dfd:	ror    DWORD PTR [ebp-0x34d4e7f8],1
  415e03:	jmp    FWORD PTR [ecx]
  415e05:	jg     0x415e7a
  415e07:	xchg   esp,eax
  415e08:	leave  
  415e09:	lods   al,BYTE PTR ds:[esi]
  415e0a:	mov    DWORD PTR [edx-0x1e],esi
  415e0d:	out    0x9c,eax
  415e0f:	mov    DWORD PTR [ebx-0x47],0x15f9ad6d
  415e16:	sbb    al,0x3e
  415e18:	dec    ebx
  415e19:	or     al,0x1
  415e1b:	(bad)  
  415e1c:	test   eax,0xbd7e343e
  415e21:	and    al,0x96
  415e23:	jecxz  0x415e32
  415e25:	out    dx,eax
  415e26:	push   esi
  415e27:	mov    WORD PTR [esi+0xb],ds
  415e2a:	xor    BYTE PTR [ebp-0x5af65460],dl
  415e30:	pop    ss
  415e31:	and    esi,esi
  415e33:	pop    esp
  415e34:	leave  
  415e35:	add    al,0x77
  415e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e38:	sub    eax,0x76abde5a
  415e3d:	ret    0xccb4
  415e40:	jno    0x415e19
  415e42:	cmp    ebp,ebx
  415e44:	repz out 0x14,eax
  415e47:	xchg   ebx,eax
  415e48:	or     BYTE PTR [edx-0x5f],cl
  415e4b:	cmp    ch,ch
  415e4d:	pop    esi
  415e4e:	cwde   
  415e4f:	jbe    0x415e93
  415e51:	mov    al,0xdb
  415e53:	in     al,0x14
  415e55:	cs loopne 0x415e95
  415e58:	or     ebp,DWORD PTR [edi+0x17]
  415e5b:	mov    edx,?
  415e5d:	rcr    DWORD PTR [edi],0x9d
  415e60:	push   cs
  415e61:	mov    ebp,0xbb74ef31
  415e66:	gs in  eax,dx
  415e68:	adc    ah,BYTE PTR gs:[esi+0x6c]
  415e6c:	sbb    eax,0xb52d226a
  415e71:	mov    ebp,ebp
  415e73:	aad    0xe3
  415e75:	ins    DWORD PTR es:[edi],dx
  415e76:	ja     0x415e20
  415e78:	or     esp,DWORD PTR [edx]
  415e7a:	jb     0x415e44
  415e7c:	imul   ebp,DWORD PTR [eax],0x2
  415e7f:	mov    edi,0x2150dfb4
  415e84:	js     0x415e11
  415e86:	test   cl,bh
  415e88:	and    DWORD PTR [esi+0x0],0x7d
  415e8c:	dec    ecx
  415e8d:	cmp    ebp,DWORD PTR [ebp+0x7d3e6f22]
  415e93:	mov    WORD PTR [ebx+0xd],?
  415e96:	sbb    dl,bl
  415e98:	(bad)  
  415e99:	add    ah,BYTE PTR [esi-0x17]
  415e9c:	cmp    ah,BYTE PTR [ebx+0x22]
  415e9f:	push   esi
  415ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea1:	cmp    al,0xa1
  415ea3:	into   
  415ea4:	mov    eax,0x66fad07f
  415ea9:	daa    
  415eaa:	aas    
  415eab:	cmp    cl,dh
  415ead:	in     eax,0x37
  415eaf:	ins    BYTE PTR es:[edi],dx
  415eb0:	scas   eax,DWORD PTR es:[edi]
  415eb1:	ficom  WORD PTR [edi-0x7]
  415eb4:	sub    dh,dh
  415eb6:	inc    esp
  415eb7:	inc    ecx
  415eb8:	(bad)  
  415eb9:	aam    0xb9
  415ebb:	sub    BYTE PTR [edi-0x1e],ch
  415ebe:	dec    edx
  415ebf:	(bad)  [eax-0x3508fd68]
  415ec5:	addr16 sub eax,0xf29fa3ba
  415ecb:	inc    edx
  415ecc:	rcl    ebp,cl
  415ece:	pusha  
  415ecf:	cmp    DWORD PTR [ecx-0x1b6fa0a7],ebp
  415ed5:	push   ecx
  415ed6:	nop
  415ed7:	shl    BYTE PTR gs:[eax-0x60],1
  415edb:	jb     0x415e8e
  415edd:	mov    eax,DWORD PTR [eax-0x5cfbd0ba]
  415ee3:	pop    es
  415ee4:	outs   dx,BYTE PTR ds:[esi]
  415ee5:	push   edx
  415ee6:	outs   dx,BYTE PTR ds:[esi]
  415ee7:	fstp   DWORD PTR [eax+esi*2]
  415eea:	test   al,0x50
  415eec:	in     al,0x99
  415eee:	test   ah,bl
  415ef0:	sbb    al,bl
  415ef2:	cmp    eax,0x7998cdee
  415ef7:	std    
  415ef8:	adc    BYTE PTR [ecx+0x7b],al
  415efb:	xchg   esi,eax
  415efc:	stos   DWORD PTR es:[edi],eax
  415efd:	(bad)  
  415efe:	lahf   
  415eff:	adc    ebp,DWORD PTR [eax]
  415f01:	fild   DWORD PTR [edi-0x2a]
  415f04:	and    DWORD PTR [edx],ecx
  415f06:	sar    edx,cl
  415f08:	mov    bh,0xcd
  415f0a:	sahf   
  415f0b:	lds    esp,FWORD PTR [edx]
  415f0d:	inc    ebp
  415f0e:	dec    esi
  415f0f:	adc    al,0x1c
  415f11:	pop    ebp
  415f12:	clc    
  415f13:	push   ds
  415f14:	ret    0x1e0a
  415f17:	test   al,dh
  415f19:	les    ebx,FWORD PTR [ecx-0x729f3e44]
  415f1f:	dec    ecx
  415f20:	test   DWORD PTR [edx-0x73d832e8],ecx
  415f26:	adc    al,0xe9
  415f28:	jo     0x415f16
  415f2a:	push   0x6427c07f
  415f2f:	mov    WORD PTR [eax+ebp*1-0x30d7c404],?
  415f36:	xchg   esp,eax
  415f37:	inc    ebx
  415f38:	pop    ss
  415f39:	pop    ss
  415f3a:	inc    edi
  415f3b:	sub    DWORD PTR [ecx+0x40],ecx
  415f3e:	dec    ecx
  415f3f:	sbb    eax,0xbe70f2
  415f44:	and    BYTE PTR [esi],dh
  415f46:	xchg   bh,bl
  415f48:	adc    eax,0x164bfb90
  415f4d:	dec    edx
  415f4e:	jmp    0x534a:0x9afa0344
  415f55:	ins    BYTE PTR es:[edi],dx
  415f56:	pop    eax
  415f57:	ins    DWORD PTR es:[edi],dx
  415f58:	jmp    0xc71e84fe
  415f5d:	dec    edx
  415f5e:	add    bl,BYTE PTR [edi]
  415f60:	jo     0x415f39
  415f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f63:	xor    BYTE PTR [esi],bl
  415f65:	xchg   ebx,eax
  415f66:	ja     0x415ee8
  415f68:	mov    eax,0xe0a1c6b8
  415f6d:	ins    DWORD PTR es:[edi],dx
  415f6e:	mov    esi,eax
  415f70:	jge    0x415f93
  415f72:	jo     0x415f38
  415f74:	lods   eax,DWORD PTR ds:[esi]
  415f75:	xchg   ebx,eax
  415f76:	jns    0x415fb9
  415f78:	(bad)  
  415f79:	dec    edi
  415f7a:	jge    0x415f68
  415f7c:	xchg   ebx,eax
  415f7d:	jnp    0x415f0e
  415f7f:	add    ch,BYTE PTR [edx+0x1dace50f]
  415f85:	jbe    0x415fed
  415f87:	mov    ebx,0x87f13fbb
  415f8c:	pusha  
  415f8d:	fs mov ?,WORD PTR cs:[ebx+edi*8+0x1a]
  415f93:	push   edi
  415f94:	jmp    0x415f4c
  415f96:	fwait
  415f97:	push   esp
  415f98:	call   0xd49b37b2
  415f9d:	into   
  415f9e:	adc    BYTE PTR [edx+0x26],dl
  415fa1:	add    bh,BYTE PTR [eax-0xf]
  415fa4:	mov    esi,0x5fe00e52
  415fa9:	pop    eax
  415faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fac:	mov    eax,ds:0x14882bbb
  415fb1:	outs   dx,BYTE PTR ds:[esi]
  415fb2:	clc    
  415fb3:	arpl   WORD PTR [ebp-0x594da48a],dx
  415fb9:	sub    dl,cl
  415fbb:	jmp    0x6d9a4bb2
  415fc0:	lea    edx,[eax-0x3d]
  415fc3:	loop   0x415f86
  415fc5:	jle    0x41602a
  415fc7:	outs   dx,BYTE PTR ds:[esi]
  415fc8:	or     esp,ecx
  415fca:	push   esp
  415fcb:	xchg   edx,eax
  415fcc:	mov    dl,0xbe
  415fce:	dec    ecx
  415fcf:	or     bh,ch
  415fd1:	stc    
  415fd2:	fisttp WORD PTR [esi+0x1ab7e1ff]
  415fd8:	test   al,0x4b
  415fda:	push   edx
  415fdb:	fcomp  st(1)
  415fdd:	out    dx,al
  415fde:	addr16 jae 0x415fea
  415fe1:	jbe    0x416020
  415fe3:	xlat   BYTE PTR ds:[bx]
  415fe5:	arpl   WORD PTR [edi+0x60],bx
  415fe8:	dec    edx
  415fe9:	xor    eax,0x17faafac
  415fee:	fs jecxz 0x41603b
  415ff1:	xor    BYTE PTR [ecx-0x33],0x11
  415ff5:	inc    ecx
  415ff6:	dec    ebp
  415ff7:	jp     0x415fdc
  415ff9:	or     BYTE PTR [ecx],bl
  415ffb:	xlat   BYTE PTR ds:[ebx]
  415ffc:	jle    0x416072
  415ffe:	fwait
  415fff:	pop    edi
  416000:	xor    al,0x6f
  416002:	das    
  416003:	sar    ecx,1
  416005:	pop    ss
  416006:	cli    
  416007:	imul   ecx,DWORD PTR [edx+0x3828435d],0x6a
  41600e:	push   cs
  41600f:	retf   
  416010:	push   es
  416011:	mov    cl,0x9e
  416013:	fldenv [esp+ebx*4+0x4188a0ad]
  41601a:	ins    DWORD PTR es:[edi],dx
  41601b:	shl    BYTE PTR [ebx-0x3b],0x58
  41601f:	mov    ecx,0x9147064d
  416024:	inc    esp
  416025:	mov    ch,0xea
  416027:	xchg   ebp,eax
  416028:	sub    al,BYTE PTR ds:0x8cef3130
  41602e:	xchg   edx,eax
  41602f:	push   esp
  416030:	jbe    0x41606d
  416032:	xchg   ecx,eax
  416033:	lock lods al,BYTE PTR ds:[esi]
  416035:	xchg   dl,al
  416037:	in     al,0x9
  416039:	cmp    al,0x91
  41603b:	add    al,BYTE PTR [ebx]
  41603d:	fwait
  41603e:	inc    ebx
  41603f:	pushf  
  416040:	pop    eax
  416041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416042:	xchg   ecx,eax
  416043:	dec    ebp
  416044:	cmp    ebx,DWORD PTR [eax+0x9]
  416047:	mov    bl,0x89
  416049:	add    BYTE PTR [ecx+0x429b571],0xa6
  416050:	jbe    0x416062
  416052:	inc    edi
  416053:	cmp    al,0x3f
  416055:	mov    ebx,0xcd7fc9a6
  41605a:	ja     0x416076
  41605c:	fnstenv [edx+0x29]
  41605f:	and    DWORD PTR [ecx+ebx*4+0x9ff6b09],ebx
  416066:	int3   
  416067:	icebp  
  416068:	lea    ecx,[ebx-0x39ccf7b3]
  41606e:	lea    eax,[eax+ecx*1+0x3272ec]
  416075:	mov    DWORD PTR [ebp+0x8],eax
  416078:	mov    eax,DWORD PTR [ebp-0xc]
  41607b:	mov    ecx,DWORD PTR [ebp+0x14]
  41607e:	xor    eax,esi
  416080:	add    eax,edi
  416082:	imul   eax,DWORD PTR [ecx]
  416085:	mov    ecx,DWORD PTR [ebp-0x4]
  416088:	mov    edx,DWORD PTR [ebp+0x8]
  41608b:	xor    ecx,esi
  41608d:	lea    ecx,[ecx+edx*1+0x3272ec]
  416094:	cmp    ecx,eax
  416096:	jne    0x413ca6
  41609c:	mov    eax,DWORD PTR [ebp-0x4]
  41609f:	xor    eax,esi
  4160a1:	add    eax,edi
  4160a3:	mov    DWORD PTR [ebp-0x10],eax
  4160a6:	mov    ebx,0x65655
  4160ab:	add    ebx,0x3234
  4160b1:	xchg   ebx,esi
  4160b3:	xor    ebx,ebx
  4160b5:	push   esi
  4160b6:	mov    esi,ebx
  4160b8:	pop    ebx
  4160b9:	mov    edx,esi
  4160bb:	add    ebx,0x1002
  4160c1:	lea    eax,[ebp-0x18]
  4160c4:	add    edx,eax
  4160c6:	add    edx,0x5
  4160c9:	push   edx
  4160ca:	inc    esi
  4160cb:	pop    ecx
  4160cc:	dec    ecx
  4160cd:	xchg   ecx,eax
  4160ce:	dec    eax
  4160cf:	xchg   ecx,eax
  4160d0:	dec    ecx
  4160d1:	xchg   ecx,edx
  4160d3:	dec    edx
  4160d4:	push   edx
  4160d5:	mov    edx,ebx
  4160d7:	pop    ebx
  4160d8:	dec    ebx
  4160d9:	call   DWORD PTR [ebx]
  4160db:	cmp    DWORD PTR [ebp+0x10],esi
  4160de:	je     0x4160fd
  4160e4:	xchg   edx,eax
  4160e5:	push   0xb
  4160e7:	pop    ecx
  4160e8:	push   0x4
  4160ea:	pop    ebx
  4160eb:	inc    ebx
  4160ec:	xchg   ebx,ecx
  4160ee:	sub    ebx,ecx
  4160f0:	xchg   ebx,ecx
  4160f2:	dec    ecx
  4160f3:	dec    ecx
  4160f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4160f7:	imul   eax,ecx
  4160fa:	add    esp,eax
  4160fc:	xchg   edx,eax
  4160fd:	push   eax
  4160fe:	xor    ebx,ebx
  416100:	mov    edx,esp
  416102:	dec    edx
  416103:	inc    ebx
  416104:	add    ebx,DWORD PTR [edx+ebx*1]
  416107:	dec    ebx
  416108:	xor    edx,edx
  41610a:	add    DWORD PTR [ebp-0x10],ebx
  41610d:	pop    ebx
  41610e:	mov    eax,DWORD PTR [ebp-0x10]
  416111:	pop    edi
  416112:	pop    esi
  416113:	pop    ebx
  416114:	leave  
  416115:	ret    0x10
  416118:	push   ebp
  416119:	mov    ebp,esp
  41611b:	push   ecx
  41611c:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  416123:	and    eax,0x6d5c
  416128:	mov    eax,DWORD PTR [ebp-0x4]
  41612b:	or     DWORD PTR ds:0x42d00c,edx
  416131:	mov    edx,DWORD PTR [ebp+0x10]
  416134:	dec    ecx
  416135:	mov    ecx,0x75108a4
  41613a:	xor    eax,ecx
  41613c:	add    eax,0x3272ec
  416141:	adc    DWORD PTR ds:0x42b00c,0x375
  41614b:	mov    DWORD PTR [edx],eax
  41614d:	sub    DWORD PTR ds:0x42b008,ecx
  416153:	mov    eax,DWORD PTR [ebp+0xc]
  416156:	and    DWORD PTR ds:0x42b014,0x0
  416160:	xor    edx,edx
  416162:	add    edx,DWORD PTR ds:0x42b014
  416168:	inc    edx
  416169:	mov    DWORD PTR ds:0x42b014,edx
  41616f:	cmp    DWORD PTR ds:0x42b014,0xf
  416176:	ja     0x4161cd
  41617c:	jmp    0x4161a6
  416181:	push   DWORD PTR [ebp-0x28]
  416184:	push   DWORD PTR [ebp-0x18]
  416187:	push   0x42b00c
  41618c:	push   0x1f1a
  416191:	push   0x8ba1
  416196:	push   0x2c78
  41619b:	push   0x5355
  4161a0:	call   DWORD PTR ds:0x43001b
  4161a6:	cmp    DWORD PTR ds:0x42b014,0xe
  4161ad:	jne    0x4161c0
  4161b3:	mov    edx,DWORD PTR ds:0x42b014
  4161b9:	inc    edx
  4161ba:	mov    DWORD PTR ds:0x42b014,edx
  4161c0:	cmp    DWORD PTR ds:0x42b014,0x1f
  4161c7:	jb     0x416160
  4161cd:	xor    eax,ecx
  4161cf:	push   esi
  4161d0:	mov    esi,DWORD PTR [ebp+0x10]
  4161d3:	mov    edx,0x3272ec
  4161d8:	add    eax,edx
  4161da:	mov    DWORD PTR [esi+0x4],eax
  4161dd:	mov    eax,DWORD PTR [ebp+0x14]
  4161e0:	mov    esi,DWORD PTR [ebp+0x10]
  4161e3:	mov    DWORD PTR [esi+0x8],eax
  4161e6:	mov    eax,DWORD PTR [ebp+0x18]
  4161e9:	mov    esi,DWORD PTR [ebp+0x10]
  4161ec:	mov    DWORD PTR [esi+0xc],eax
  4161ef:	mov    eax,DWORD PTR [ebp+0x1c]
  4161f2:	mov    esi,DWORD PTR [ebp+0x10]
  4161f5:	mov    DWORD PTR [esi+0x10],eax
  4161f8:	mov    eax,DWORD PTR [ebp+0x8]
  4161fb:	xor    eax,ecx
  4161fd:	add    eax,edx
  4161ff:	pop    esi
  416200:	leave  
  416201:	ret    0x18
  416204:	push   ebp
  416205:	mov    ebp,esp
  416207:	sub    esp,0x9c
  41620d:	movzx  eax,BYTE PTR ds:0x429024
  416214:	sbb    eax,DWORD PTR ds:0x429000
  41621a:	mov    ds:0x429024,eax
  41621f:	mov    ecx,DWORD PTR [ebp+0x8]
  416222:	mov    eax,0x8a94
  416227:	xor    ax,WORD PTR [ecx+0x20]
  41622b:	mov    ecx,0x3b56
  416230:	xor    DWORD PTR ds:0x429008,0x611c
  41623a:	add    ax,cx
  41623d:	movzx  eax,ax
  416240:	mov    DWORD PTR [ebp-0x10],eax
  416243:	and    DWORD PTR ds:0x429014,0xd29
  41624d:	mov    BYTE PTR [ebp-0x1],0x7d
  416251:	adc    ecx,DWORD PTR ds:0x42d004
  416257:	lea    eax,[ebp-0x1]
  41625a:	mov    DWORD PTR ds:0x42b00c,0x12
  416264:	cmp    DWORD PTR ds:0x42b00c,0x0
  41626b:	je     0x4162a3
  416271:	cmp    DWORD PTR ds:0x42b00c,0x17
  416278:	jbe    0x4162a3
  41627e:	jmp    0x416291
  416283:	push   DWORD PTR [ebp-0x28]
  416286:	push   0x84ea
  41628b:	call   DWORD PTR ds:0x430027
  416291:	mov    ecx,DWORD PTR ds:0x42b00c
  416297:	dec    ecx
  416298:	mov    DWORD PTR ds:0x42b00c,ecx
  41629e:	jmp    0x416264
  4162a3:	mov    DWORD PTR [ebp-0xc],eax
  4162a6:	mov    al,BYTE PTR [ebp-0x1]
  4162a9:	sub    DWORD PTR ds:0x42a010,0x238f
  4162b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4162b6:	xor    DWORD PTR ds:0x42a01c,0x42b01c
  4162c0:	xor    al,0x79
  4162c2:	add    DWORD PTR ds:0x42c01c,0x429014
  4162cc:	sub    al,0x3
  4162ce:	add    DWORD PTR ds:0x42c01c,0x2d5e
  4162d8:	mov    BYTE PTR [ecx],al
  4162da:	and    DWORD PTR ds:0x429004,0x0
  4162e4:	xor    eax,eax
  4162e6:	xor    eax,DWORD PTR ds:0x429004
  4162ec:	inc    eax
  4162ed:	mov    ds:0x429004,eax
  4162f2:	cmp    DWORD PTR ds:0x429004,0x6
  4162f9:	jge    0x41633a
  4162ff:	jmp    0x416312
  416304:	push   DWORD PTR [ebp-0x10]
  416307:	push   0x8717
  41630c:	call   DWORD PTR ds:0x43002b
  416312:	cmp    DWORD PTR ds:0x429004,0x5
  416319:	jne    0x41632d
  41631f:	xor    eax,eax
  416321:	xor    eax,DWORD PTR ds:0x429004
  416327:	inc    eax
  416328:	mov    ds:0x429004,eax
  41632d:	cmp    DWORD PTR ds:0x429004,0x11
  416334:	jb     0x4162e4
  41633a:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  416341:	and    DWORD PTR ds:0x42d014,0x6f44
  41634b:	push   ebx
  41634c:	not    DWORD PTR ds:0x42a010
  416352:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  416359:	mov    ecx,DWORD PTR [ebp-0x18]
  41635c:	add    DWORD PTR ds:0x429010,0x796f
  416366:	push   esi
  416367:	mov    DWORD PTR ds:0x42a004,0x19
  416371:	cmp    DWORD PTR ds:0x42a004,0x0
  416378:	je     0x4163b7
  41637e:	cmp    DWORD PTR ds:0x42a004,0x28
  416385:	jl     0x4163b7
  41638b:	jmp    0x4163a5
  416390:	push   0x5678
  416395:	push   0x429018
  41639a:	push   0x42f025
  41639f:	call   DWORD PTR ds:0x430033
  4163a5:	mov    esi,DWORD PTR ds:0x42a004
  4163ab:	dec    esi
  4163ac:	mov    DWORD PTR ds:0x42a004,esi
  4163b2:	jmp    0x416371
  4163b7:	mov    eax,0x75108a4
  4163bc:	and    DWORD PTR ds:0x42b01c,0x6a8d
  4163c6:	xor    ecx,eax
  4163c8:	mov    esi,DWORD PTR ds:0x42b000
  4163ce:	xor    DWORD PTR ds:0x42a010,esi
  4163d4:	mov    esi,0x3272ec
  4163d9:	sbb    DWORD PTR ds:0x42a000,0x4a3d
  4163e3:	push   edi
  4163e4:	add    ecx,esi
  4163e6:	mov    DWORD PTR ds:0x42a018,0x89b
  4163f0:	jmp    0x41641e
  4163f5:	mov    DWORD PTR ds:0x42c010,0x3697
  4163ff:	mov    dl,BYTE PTR [ebp-0x1]
  416402:	mov    DWORD PTR ds:0x42d004,0x1aee
  41640c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  416413:	mov    DWORD PTR ds:0x42b014,0x1f71
  41641d:	inc    ecx
  41641e:	cmp    ecx,0x40
  416421:	mov    DWORD PTR ds:0x429024,0xce6
  41642b:	jb     0x4163f5
  416431:	mov    edx,DWORD PTR [ebp-0x18]
  416434:	xor    edx,eax
  416436:	add    edx,esi
  416438:	jmp    0x4164b8
  41643d:	sub    ecx,edi
  41643f:	mov    edi,DWORD PTR [ebp+0x8]
  416442:	mov    ecx,DWORD PTR ds:0x42c018
  416448:	or     DWORD PTR ds:0x42d010,ecx
  41644e:	mov    ecx,0x8a94
  416453:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416458:	mov    edi,0x3b56
  41645d:	add    DWORD PTR ds:0x42d00c,0x618e
  416467:	add    cx,di
  41646a:	adc    DWORD PTR ds:0x42a000,0x96b
  416474:	movzx  ecx,cx
  416477:	mov    DWORD PTR ds:0x42b004,0x7547
  416481:	mov    DWORD PTR [ebp-0xc],ecx
  416484:	mov    ecx,DWORD PTR [ebp+0x8]
  416487:	movzx  ecx,WORD PTR [ecx+edx*4]
  41648b:	add    DWORD PTR ds:0x42a00c,0x429020
  416495:	xor    ecx,0x8a94
  41649b:	adc    DWORD PTR ds:0x42a01c,0x473e
  4164a5:	add    ecx,edi
  4164a7:	mov    edi,0x26b3
  4164ac:	mov    edi,DWORD PTR [ebp-0xc]
  4164af:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4164b6:	inc    ecx
  4164b7:	inc    edx
  4164b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4164bb:	cmp    edx,ecx
  4164bd:	jmp    0x418820
  4164c2:	shl    al,cl
  4164c4:	inc    edi
  4164c5:	dec    ecx
  4164c6:	cmp    edi,DWORD PTR [ecx+0x7fc9f3b8]
  4164cc:	push   cs
  4164cd:	mov    eax,0x96fe499c
  4164d2:	pop    ebx
  4164d3:	cmp    BYTE PTR [ebp+0x7a],bh
  4164d6:	xor    BYTE PTR [edi+0x7a],bl
  4164d9:	jp     0x416545
  4164db:	jge    0x416488
  4164dd:	(bad)
  4164e1:	inc    ecx
  4164e2:	push   ds
  4164e3:	imul   edx,DWORD PTR [esi+ebx*2-0x7f],0xffffffed
  4164e8:	xchg   DWORD PTR ds:0xff2a02d4,eax
  4164ee:	hlt    
  4164ef:	xchg   BYTE PTR [ebx+eax*4],dh
  4164f2:	je     0x416527
  4164f4:	push   ebx
  4164f5:	pop    ebx
  4164f6:	push   edi
  4164f7:	shl    BYTE PTR [edx+0x1b8e6e87],1
  4164fd:	(bad)  
  4164fe:	jmp    0x4164b2
  416500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416501:	aas    
  416502:	out    0xa1,al
  416504:	or     eax,0x4c42a9b
  416509:	repnz out dx,al
  41650b:	sbb    DWORD PTR [edi-0x26],0xb9180fdf
  416512:	dec    ebp
  416513:	sar    DWORD PTR [ebp+0x7f5beb9c],0xc7
  41651a:	inc    edx
  41651b:	xlat   BYTE PTR ds:[ebx]
  41651c:	aas    
  41651d:	mov    bl,0xbe
  41651f:	cld    
  416520:	pop    ebp
  416521:	pop    ebx
  416522:	cli    
  416523:	(bad)  
  416524:	js     0x416588
  416526:	jns    0x4164b2
  416528:	mov    edx,0xedbfba42
  41652d:	sub    al,0x91
  41652f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416530:	les    eax,FWORD PTR [esi-0x5a897d90]
  416536:	cld    
  416537:	inc    ebp
  416538:	push   0x3520885d
  41653d:	aaa    
  41653e:	das    
  41653f:	push   ebx
  416540:	adc    ebx,DWORD PTR [esi+0xf4201ec]
  416546:	out    dx,al
  416547:	sbb    BYTE PTR [esi],0xee
  41654a:	lea    ebp,[edx]
  41654c:	cmp    al,0x6
  41654e:	push   DWORD PTR [eax-0x17bb9d3]
  416554:	sub    esi,esp
  416556:	pop    edi
  416557:	pop    ebp
  416558:	mov    ch,0x15
  41655a:	inc    esi
  41655b:	cmc    
  41655c:	xchg   edx,eax
  41655d:	(bad)  
  41655e:	sbb    al,0xb
  416560:	and    DWORD PTR [ebx],0x22
  416563:	add    DWORD PTR [eax-0x514200b4],esi
  416569:	push   ss
  41656a:	(bad)  
  41656b:	in     al,dx
  41656c:	xchg   BYTE PTR [ebx+0x1806132a],ch
  416572:	fwait
  416573:	mov    al,0xbd
  416575:	fistp  QWORD PTR [esi*4-0x29b77593]
  41657c:	je     0x41654b
  41657e:	cmc    
  41657f:	or     al,0xa8
  416581:	rcr    dh,0x83
  416584:	sbb    DWORD PTR [ebx-0x63],0xecf5c21b
  41658b:	adc    DWORD PTR [edx],0x2c
  41658e:	leave  
  41658f:	es hlt 
  416591:	les    ebx,FWORD PTR [eax+0x71]
  416594:	push   0xffd09df9
  416599:	or     bh,BYTE PTR cs:[eax+0x4b]
  41659d:	mov    ebx,0x894b3009
  4165a2:	gs inc edx
  4165a4:	ds add DWORD PTR ss:[edx+0xe961bdb],esp
  4165ac:	inc    esi
  4165ad:	adc    esp,0x35
  4165b0:	mov    ah,0x68
  4165b2:	dec    ebp
  4165b3:	das    
  4165b4:	popa   
  4165b5:	out    0xa9,eax
  4165b7:	cmp    dl,BYTE PTR ds:0xfa1e7a32
  4165bd:	add    eax,0x1d079750
  4165c2:	xchg   ebx,eax
  4165c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c4:	ror    DWORD PTR [esi-0x3c43dfd9],cl
  4165ca:	push   ebx
  4165cb:	sti    
  4165cc:	ja     0x41659e
  4165ce:	repnz sahf 
  4165d0:	add    eax,0x2f8835da
  4165d5:	fisttp QWORD PTR [edi+0x2a]
  4165d8:	in     al,0x8e
  4165da:	iret   
  4165db:	sub    ecx,edi
  4165dd:	cmp    dh,dl
  4165df:	aam    0x12
  4165e1:	mov    ebx,0xe428cf91
  4165e6:	das    
  4165e7:	and    DWORD PTR [bx+di],ebp
  4165ea:	pop    esi
  4165eb:	es call 0x1854:0xa873df0a
  4165f3:	cmp    eax,ebp
  4165f5:	icebp  
  4165f6:	mov    esp,0x61e76930
  4165fb:	mov    edx,0xd184368d
  416600:	ror    DWORD PTR [ebx],1
  416602:	outs   dx,DWORD PTR ds:[esi]
  416603:	lds    ebx,FWORD PTR [esi-0x25d7493b]
  416609:	test   DWORD PTR [ecx],eax
  41660b:	repnz add al,0x42
  41660e:	je     0x41660a
  416610:	fdivp  st(0),st
  416612:	(bad)  
  416614:	cmp    cl,BYTE PTR [eax]
  416616:	jne    0x416653
  416618:	pusha  
  416619:	outs   dx,BYTE PTR ds:[esi]
  41661a:	ins    DWORD PTR es:[edi],dx
  41661b:	xor    edx,ecx
  41661d:	adc    al,0xa4
  41661f:	mov    eax,ds:0x94a41440
  416624:	repnz adc BYTE PTR [eax+0x56],0xe4
  416629:	mov    edi,0x7c5f7b3c
  41662e:	cdq    
  41662f:	sbb    eax,DWORD PTR ds:0x46f6821d
  416635:	iret   
  416636:	imul   edx,DWORD PTR [eax+ecx*1+0x35357a73],0xffffff97
  41663e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663f:	push   es
  416640:	sub    edi,esi
  416642:	xchg   ecx,eax
  416643:	sub    esp,DWORD PTR [eax]
  416645:	enter  0x719c,0xd4
  416649:	adc    BYTE PTR [eax],cl
  41664b:	or     al,0x72
  41664d:	dec    ebp
  41664e:	ins    DWORD PTR es:[edi],dx
  41664f:	lods   al,BYTE PTR ds:[esi]
  416650:	repz call 0xd1e7b343
  416656:	mov    bh,0xb3
  416658:	sbb    eax,0x9ab13617
  41665d:	jecxz  0x416681
  41665f:	in     eax,0x4d
  416661:	push   cs
  416662:	push   ds
  416663:	mov    ch,BYTE PTR [ecx]
  416665:	stc    
  416666:	pop    ecx
  416667:	stos   BYTE PTR es:[edi],al
  416668:	test   BYTE PTR [ecx],ch
  41666a:	aad    0x2a
  41666c:	jo     0x4166d8
  41666e:	scas   eax,DWORD PTR es:[edi]
  41666f:	or     al,0x26
  416671:	gs lock dec esp
  416674:	mov    ?,WORD PTR [ecx-0x48fc54e1]
  41667a:	or     eax,0xd89be49e
  41667f:	adc    dh,BYTE PTR [esi+0x55]
  416682:	arpl   sp,dx
  416684:	pop    ds
  416685:	cmp    dl,BYTE PTR [ecx]
  416687:	mov    esi,0x52a75f98
  41668c:	ja     0x41662c
  41668e:	jnp    0x4166d9
  416690:	pop    ds
  416691:	daa    
  416692:	xchg   BYTE PTR [eax-0x4549edc3],bh
  416698:	mov    ds:0xd40160fe,eax
  41669d:	push   edi
  41669e:	jg     0x4166c9
  4166a0:	sub    BYTE PTR [ecx+0x16],bl
  4166a3:	inc    esi
  4166a4:	mov    cl,0xb4
  4166a6:	loope  0x416651
  4166a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a9:	(bad)  
  4166aa:	test   ecx,0x9b0c7d33
  4166b0:	int3   
  4166b1:	xor    al,0xa8
  4166b3:	add    DWORD PTR [ecx-0x4e],esi
  4166b6:	(bad)  [ebp-0x11cee5a3]
  4166bc:	aaa    
  4166bd:	push   eax
  4166be:	dec    edi
  4166bf:	mov    ch,0xe5
  4166c1:	pop    ds
  4166c2:	js     0x41665a
  4166c4:	cmp    ah,BYTE PTR [ebx]
  4166c6:	jae    0x416695
  4166c8:	mov    bh,dh
  4166ca:	inc    ecx
  4166cb:	jecxz  0x416691
  4166cd:	xor    bl,BYTE PTR [ecx-0x5]
  4166d0:	and    al,0xf
  4166d2:	fsubr  st,st(1)
  4166d4:	arpl   WORD PTR [eax],sp
  4166d6:	into   
  4166d7:	or     BYTE PTR [edi-0x2a487a1c],dh
  4166dd:	test   BYTE PTR [esi-0x5],0x83
  4166e1:	mov    ch,0x72
  4166e3:	fldcw  WORD PTR [eax+0x61]
  4166e6:	sar    DWORD PTR [ecx+0x1d9526a],cl
  4166ec:	xor    BYTE PTR [ebp+edi*1-0x68c9891],0xa4
  4166f4:	xchg   esi,eax
  4166f5:	xlat   BYTE PTR ds:[ebx]
  4166f6:	pop    eax
  4166f7:	push   ecx
  4166f8:	cmp    eax,0x9c3d87b0
  4166fd:	dec    esi
  4166fe:	mov    bl,0xd
  416700:	mov    bh,0x8a
  416702:	sub    DWORD PTR [ebx-0xef9d645],esp
  416708:	les    edx,FWORD PTR [ecx-0x35]
  41670b:	shl    DWORD PTR [eax],cl
  41670d:	(bad)
  416711:	cmp    edi,DWORD PTR [ecx]
  416713:	leave  
  416714:	js     0x41671c
  416716:	xchg   BYTE PTR [ecx],bl
  416718:	jne    0x416712
  41671a:	mov    esi,0x63cbe101
  41671f:	rcl    BYTE PTR [edx+0x6e63cdcc],0xcb
  416726:	jne    0x416760
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	mov    edi,0x7b723b71
  41672e:	pop    eax
  41672f:	push   0x58
  416731:	loop   0x416788
  416733:	mov    edi,0xac7a5c6f
  416738:	loopne 0x41670d
  41673a:	int3   
  41673b:	adc    esp,DWORD PTR [ebx]
  41673d:	jmp    0x8c5e2819
  416742:	and    BYTE PTR [esi+0x7ffef809],dl
  416748:	or     edi,esi
  41674a:	test   eax,0xc7d5f210
  41674f:	aaa    
  416750:	or     eax,DWORD PTR [bx+di+0x13f6]
  416755:	push   eax
  416756:	imul   ebx,eax,0xcf5e77d7
  41675c:	dec    ebp
  41675d:	out    0xd8,eax
  41675f:	call   0xf296:0x7f8b8ff0
  416766:	(bad)  
  416767:	out    dx,al
  416768:	pop    ebp
  416769:	ja     0x4167a2
  41676b:	pop    ebx
  41676c:	or     ah,BYTE PTR [ebp-0x6d]
  41676f:	iret   
  416770:	iret   
  416771:	hlt    
  416772:	sub    eax,0x1388bcb1
  416777:	pop    eax
  416778:	es add eax,0xeb87565e
  41677e:	pop    ss
  41677f:	jne    0x4167c5
  416781:	adc    edx,DWORD PTR [ebx+0x67]
  416784:	push   0x4add4f94
  416789:	xlat   BYTE PTR ds:[ebx]
  41678a:	jbe    0x4167ea
  41678c:	jge    0x416802
  41678e:	loope  0x41671f
  416790:	je     0x4167fb
  416792:	mov    cl,0x98
  416794:	add    esi,0xffffffab
  416797:	xchg   esi,eax
  416798:	xchg   ebp,eax
  416799:	jne    0x4167a3
  41679b:	xchg   esp,eax
  41679c:	mov    esi,0x175f3750
  4167a1:	(bad)  
  4167a2:	in     al,0x3c
  4167a4:	hlt    
  4167a5:	mov    BYTE PTR [ebp-0x6e91f323],bl
  4167ab:	jl     0x41673f
  4167ad:	clc    
  4167ae:	adc    BYTE PTR [ecx-0x7ef3b710],dl
  4167b4:	jnp    0x416736
  4167b6:	out    dx,eax
  4167b7:	jnp    0x4167e2
  4167b9:	fsubrp st(0),st
  4167bb:	or     al,0x8b
  4167bd:	xchg   edx,eax
  4167be:	pop    ds
  4167bf:	out    dx,al
  4167c0:	mov    dh,0x40
  4167c2:	mov    eax,ds:0x34223187
  4167c7:	sub    al,dl
  4167c9:	and    ch,dl
  4167cb:	ds or  eax,esi
  4167ce:	cli    
  4167cf:	out    dx,al
  4167d0:	push   eax
  4167d1:	xor    DWORD PTR [ecx],ecx
  4167d3:	xchg   BYTE PTR [ebx+ecx*4-0x22],bl
  4167d7:	dec    ecx
  4167d8:	mov    bh,0x79
  4167da:	cmp    eax,0xea89f9ca
  4167df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e0:	push   cs
  4167e1:	inc    ebx
  4167e2:	mov    BYTE PTR [ebx],ah
  4167e4:	lock fwait
  4167e6:	sub    bh,ah
  4167e8:	pusha  
  4167e9:	mov    WORD PTR [ebx+0x69],es
  4167ec:	call   0x74d4fb5a
  4167f1:	cld    
  4167f2:	pop    ss
  4167f3:	(bad)  
  4167f4:	dec    ebp
  4167f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f6:	push   es
  4167f7:	xor    eax,0x5ac944e3
  4167fc:	imul   ebx,edi,0x33
  4167ff:	push   esi
  416800:	addr16 ss rcr al,0xd8
  416805:	rcl    DWORD PTR [ebp-0x3215d32e],0x25
  41680c:	js     0x41687f
  41680e:	setg   BYTE PTR [esp+ebp*4+0x38]
  416813:	add    edx,esp
  416815:	pop    esp
  416816:	dec    edi
  416817:	jb     0x41684a
  416819:	mov    dh,BYTE PTR [esi]
  41681b:	mov    eax,ds:0xb9d0ac59
  416820:	inc    esi
  416821:	idiv   DWORD PTR ds:[esi+0x70e8ae30]
  416828:	pop    eax
  416829:	cmp    al,cl
  41682b:	xchg   DWORD PTR [ebx-0x32],edx
  41682e:	jno    0x41684d
  416830:	mov    esp,0xee73ac81
  416835:	fnstenv [edi+0x3d]
  416838:	fs test al,0xbb
  41683b:	popf   
  41683c:	movaps xmm2,XMMWORD PTR [ecx]
  41683f:	or     al,0x73
  416841:	inc    eax
  416842:	inc    ecx
  416843:	aaa    
  416844:	bound  edx,QWORD PTR [esi+0x43ff525d]
  41684a:	fild   QWORD PTR [ebx+0x17]
  41684d:	int    0x6f
  41684f:	mov    bl,0xf4
  416851:	add    DWORD PTR [eax-0x5b95fd71],0x59
  416858:	call   0xb739:0x7f0971bb
  41685f:	pop    ss
  416860:	and    eax,0xdf163c00
  416865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416866:	jle    0x416855
  416868:	sti    
  416869:	sub    esi,DWORD PTR [eax+0x1a]
  41686c:	call   0x18e3:0xf11986bf
  416873:	adc    DWORD PTR [ecx+0x324127e0],ecx
  416879:	dec    ecx
  41687a:	dec    edx
  41687c:	rol    edx,cl
  41687e:	loop   0x4168fc
  416880:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416882:	cwde   
  416883:	outs   dx,BYTE PTR ds:[si]
  416885:	lods   al,BYTE PTR ds:[esi]
  416886:	addr16 aad 0x23
  416889:	mov    dl,BYTE PTR [eax+0x13851bf4]
  41688f:	in     al,dx
  416890:	xchg   edi,eax
  416891:	inc    esi
  416892:	cli    
  416893:	imul   edx,DWORD PTR [eax-0x5b076fb9],0xd6a5b44f
  41689d:	shr    cl,1
  41689f:	mov    ebx,0x81ad812a
  4168a4:	sar    DWORD PTR ds:0xbd1f4d09,cl
  4168aa:	sbb    DWORD PTR [edx-0x3af62317],ecx
  4168b0:	add    eax,0xb9c72ae7
  4168b5:	cdq    
  4168b6:	mov    edx,0xcc501a27
  4168bb:	loop   0x416852
  4168bd:	ror    DWORD PTR [esi-0x38],0xe5
  4168c1:	dec    edx
  4168c2:	sub    al,0x36
  4168c4:	sbb    eax,0xc1fc7981
  4168c9:	mov    esi,0x7a62460e
  4168ce:	pop    ebx
  4168cf:	fldenv [edi]
  4168d1:	xchg   ebx,eax
  4168d2:	jne    0x416855
  4168d4:	js     0x4168ca
  4168d6:	dec    eax
  4168d7:	ficomp DWORD PTR [ecx+ebp*1+0x33]
  4168db:	jmp    0x5cc3:0xe738067b
  4168e2:	pop    esp
  4168e3:	ret    0x8424
  4168e6:	(bad)  
  4168e7:	retf   
  4168e8:	stos   DWORD PTR es:[edi],eax
  4168e9:	jecxz  0x4168cd
  4168eb:	ds call 0x1f88:0xd52213be
  4168f3:	xchg   BYTE PTR [eax+0x68f675b0],ah
  4168f9:	cmp    edx,DWORD PTR [edi]
  4168fb:	xor    al,0x69
  4168fd:	jnp    0x4168ad
  4168ff:	arpl   WORD PTR [edi-0x1ce0b224],cx
  416905:	jg     0x416894
  416907:	inc    edi
  416908:	retf   
  416909:	mov    bl,0x8b
  41690b:	sbb    al,0x3f
  41690d:	mov    esp,0xdcfdadae
  416912:	popf   
  416913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416914:	rcr    bl,cl
  416916:	jne    0x4168a1
  416918:	pop    es
  416919:	mov    bl,0x1c
  41691b:	neg    edx
  41691d:	jecxz  0x416977
  41691f:	or     al,0x1e
  416921:	call   0x6c58:0xdf14cf65
  416928:	into   
  416929:	out    0x6f,al
  41692b:	repz mov eax,ds:0xa8305ca4
  416931:	sbb    DWORD PTR [ebp+0x26],esi
  416934:	scas   al,BYTE PTR es:[edi]
  416935:	enter  0x678e,0x43
  416939:	mov    esi,0x1d0ae238
  41693e:	adc    ch,cl
  416940:	push   es
  416941:	xor    cl,BYTE PTR [ecx]
  416943:	xchg   ecx,eax
  416944:	cdq    
  416945:	in     eax,dx
  416946:	push   ebp
  416947:	jo     0x4168ff
  416949:	fdivr  QWORD PTR [edx+edx*8]
  41694c:	cmp    BYTE PTR [edi],al
  41694e:	sbb    BYTE PTR [edi-0x4e],bl
  416951:	add    BYTE PTR [edi],dl
  416953:	sar    DWORD PTR [ebp+ebp*8-0x6ca3aa28],0xa0
  41695b:	or     ah,BYTE PTR [ebp-0x20]
  41695e:	sub    al,0x4e
  416960:	es fwait
  416962:	mov    ds:0xacae6f4b,al
  416967:	outs   dx,BYTE PTR ds:[esi]
  416968:	xchg   ecx,eax
  416969:	ror    DWORD PTR [edx+esi*1-0x4b144bef],0x10
  416971:	popf   
  416972:	jecxz  0x4169c8
  416974:	call   0xd88b5747
  416979:	push   ebp
  41697a:	gs pop esp
  41697c:	pop    ss
  41697d:	xor    ch,0xc0
  416980:	mov    WORD PTR [ebx+0x59],?
  416983:	mov    al,0xfe
  416985:	xor    ah,BYTE PTR [esi+0x20]
  416988:	das    
  416989:	lods   al,BYTE PTR ds:[esi]
  41698a:	popf   
  41698b:	or     BYTE PTR ds:0xc468e722,bl
  416991:	lods   eax,DWORD PTR ds:[esi]
  416992:	xor    al,0x3e
  416994:	in     al,dx
  416995:	push   edi
  416996:	pop    ebp
  416997:	cmp    al,0xee
  416999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41699a:	jecxz  0x41698a
  41699c:	sub    eax,0x5bb91af9
  4169a1:	pushw  0xe250
  4169a5:	add    eax,0xf587c489
  4169aa:	fst    DWORD PTR [edi-0x1e75f796]
  4169b0:	std    
  4169b1:	cmp    eax,0x2a554fcc
  4169b6:	cli    
  4169b7:	ja     0x416982
  4169b9:	icebp  
  4169ba:	push   ds
  4169bb:	fcomp  st(5)
  4169bd:	jno    0x416a2e
  4169bf:	clc    
  4169c0:	push   ss
  4169c1:	pop    ds
  4169c2:	xchg   ebp,eax
  4169c3:	mov    al,0x9d
  4169c5:	xchg   edi,eax
  4169c6:	jnp    0x4169a4
  4169c8:	aam    0x68
  4169ca:	mov    ds:0x470706b7,eax
  4169cf:	test   al,0xff
  4169d1:	add    al,0xb6
  4169d3:	sahf   
  4169d4:	xchg   ebp,eax
  4169d5:	xor    bh,bl
  4169d7:	dec    eax
  4169d8:	cmp    dh,dh
  4169da:	lods   eax,DWORD PTR ds:[esi]
  4169db:	pop    edx
  4169dc:	cli    
  4169dd:	xlat   BYTE PTR ds:[ebx]
  4169de:	nop
  4169df:	stos   DWORD PTR es:[edi],eax
  4169e0:	and    DWORD PTR [ebp+0x36],0xfffffff3
  4169e4:	(bad)  
  4169e6:	jnp    0x416a59
  4169e8:	mov    edi,0x1789e53b
  4169ed:	cmp    ah,BYTE PTR [esi]
  4169ef:	aad    0x81
  4169f1:	fcom   DWORD PTR [edx]
  4169f3:	mov    ds:0x10313c68,eax
  4169f8:	rcr    DWORD PTR [edi+0x269fa407],cl
  4169fe:	adc    DWORD PTR [ecx-0x37],eax
  416a01:	dec    esp
  416a02:	cmp    al,0x4e
  416a04:	cs (bad) 
  416a06:	push   cs
  416a07:	mov    bl,0x6f
  416a09:	pushf  
  416a0a:	dec    ecx
  416a0b:	push   ds
  416a0c:	mov    bh,0x9c
  416a0e:	and    al,BYTE PTR [ebx]
  416a10:	push   esp
  416a11:	fiadd  WORD PTR [eax]
  416a13:	in     al,dx
  416a14:	in     eax,0xa0
  416a16:	add    eax,esi
  416a18:	fwait
  416a19:	mov    cl,dl
  416a1b:	jae    0x416a10
  416a1d:	inc    edi
  416a1e:	mov    bl,0x17
  416a20:	push   ecx
  416a21:	xchg   BYTE PTR [esi],cl
  416a23:	xchg   esi,eax
  416a24:	push   ebp
  416a25:	and    eax,0x4ae61cab
  416a2a:	fwait
  416a2b:	ret    
  416a2c:	push   ebx
  416a2d:	xor    edi,DWORD PTR [esp+esi*8+0x3e7543c1]
  416a34:	mov    edx,0xa187fd7a
  416a39:	ret    0x4834
  416a3c:	cmp    al,0x8
  416a3e:	rcr    DWORD PTR [esi-0x54],cl
  416a41:	clc    
  416a42:	sar    ah,cl
  416a44:	push   ds
  416a45:	adc    ebx,DWORD PTR [edx+0x3c]
  416a48:	mov    al,ds:0xf5102f38
  416a4d:	ret    0x9814
  416a50:	mov    ds:0x572d67fe,eax
  416a55:	jle    0x416aaa
  416a57:	add    esp,DWORD PTR ds:0x29bdb8c7
  416a5d:	in     eax,0xae
  416a5f:	add    eax,esi
  416a61:	sbb    eax,0x197a84bf
  416a66:	adc    BYTE PTR [eax],bl
  416a68:	mov    ecx,0xe492c48c
  416a6d:	call   0x8e55:0x210a722f
  416a74:	add    esp,ebp
  416a76:	pop    edx
  416a77:	sbb    BYTE PTR [eax-0x5b],dl
  416a7a:	mov    al,ds:0x945174dc
  416a7f:	inc    edx
  416a80:	sub    eax,0xac8688d9
  416a85:	adc    esi,0xa87e64d7
  416a8b:	mov    eax,ds:0x5c59b373
  416a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a91:	cmp    al,0x8c
  416a93:	fwait
  416a94:	test   al,0xc1
  416a96:	outs   dx,BYTE PTR ds:[esi]
  416a97:	mov    bl,0xb0
  416a99:	int    0x50
  416a9b:	mov    ebp,0x5c16f5b
  416aa0:	stos   BYTE PTR es:[edi],al
  416aa1:	adc    eax,0x88fd5b3c
  416aa6:	enter  0xcee,0x76
  416aaa:	push   edx
  416aab:	rcl    esp,1
  416aad:	and    eax,0xe3899cd4
  416ab2:	shr    DWORD PTR [edx+0x2e8ce63e],1
  416ab8:	arpl   WORD PTR ds:0xb0fa789,cx
  416abe:	sahf   
  416abf:	jae    0x416abe
  416ac1:	rcr    DWORD PTR ds:0x23e67bff,0xed
  416ac8:	adc    al,0xeb
  416aca:	sub    ah,al
  416acc:	idiv   BYTE PTR [esi]
  416ace:	sahf   
  416acf:	xor    ah,ah
  416ad1:	(bad)  
  416ad2:	cmp    ebx,eax
  416ad4:	dec    ebp
  416ad5:	(bad)  
  416ad6:	loop   0x416afd
  416ad8:	icebp  
  416ad9:	(bad)  
  416ada:	stc    
  416adb:	mov    dh,0xdc
  416add:	imul   ebx,DWORD PTR [ecx],0xffffffcc
  416ae0:	jp     0x416b4d
  416ae2:	in     eax,dx
  416ae3:	sbb    al,0xe7
  416ae5:	(bad)  
  416ae6:	pop    gs
  416ae8:	pop    esi
  416ae9:	push   0x18c3f697
  416aee:	dec    ebp
  416aef:	out    dx,al
  416af0:	in     al,0xf0
  416af2:	out    0x37,al
  416af4:	gs (bad) 
  416af6:	(bad)  [edx-0x49]
  416af9:	lds    esp,FWORD PTR [edx-0x12944a36]
  416aff:	and    eax,0xc89d4637
  416b04:	xchg   edx,eax
  416b05:	mov    dl,0x5
  416b07:	pop    ss
  416b08:	ret    0x3f63
  416b0b:	call   0x324114de
  416b10:	stc    
  416b11:	arpl   WORD PTR [edx],cx
  416b13:	test   al,0x93
  416b15:	mov    edi,0x8d8bc83c
  416b1a:	add    al,0x44
  416b1c:	fsubr  st(1),st
  416b1e:	ret    
  416b1f:	inc    ecx
  416b20:	sub    DWORD PTR [ebx],edi
  416b22:	fdiv   QWORD PTR [ebp-0x9]
  416b25:	imul   ecx,DWORD PTR ds:0xa15f4f8b,0x916fb321
  416b2f:	mov    esp,0x4c57c55c
  416b34:	add    ebx,edx
  416b36:	daa    
  416b37:	and    bl,bh
  416b39:	ins    BYTE PTR es:[edi],dx
  416b3a:	imul   esi,DWORD PTR [edx-0x760a20a5],0xffffffac
  416b41:	xor    ch,BYTE PTR [ebx]
  416b43:	jmp    0x416bc0
  416b45:	mov    ebp,0xd3d10450
  416b4a:	lea    edi,[ebx]
  416b4c:	ja     0x416ae4
  416b4e:	test   eax,0xb3d8e0c3
  416b53:	rol    BYTE PTR [esi-0x7b],1
  416b56:	sti    
  416b57:	mov    ebx,0xc2c7ff82
  416b5c:	cmp    ch,BYTE PTR [edx+0x12]
  416b5f:	(bad)  
  416b61:	pushf  
  416b62:	ds ins DWORD PTR es:[edi],dx
  416b64:	in     al,0x59
  416b66:	scas   eax,DWORD PTR es:[edi]
  416b67:	and    BYTE PTR [eax+0xbaa02c1],bh
  416b6d:	inc    edi
  416b6e:	pop    ecx
  416b6f:	or     ebp,DWORD PTR [edx]
  416b71:	pmuludq mm3,QWORD PTR [ebx+esi*2]
  416b75:	(bad)  
  416b76:	dec    esp
  416b77:	repz add cl,dh
  416b7a:	(bad)
  416b7d:	pop    ds
  416b7e:	aaa    
  416b7f:	out    0xd1,al
  416b81:	loope  0x416b46
  416b83:	xor    BYTE PTR [ecx+eax*2-0x4f7d849b],ah
  416b8a:	rol    DWORD PTR [eax-0x33c4065d],cl
  416b90:	adc    ebx,esi
  416b92:	lahf   
  416b93:	jo     0x416b17
  416b95:	mov    ds:0x7a81aecb,eax
  416b9a:	mov    al,0xcb
  416b9c:	mov    eax,ds:0x1dc1b1ca
  416ba1:	mov    edx,0x4e591b2b
  416ba6:	gs cs and edx,eax
  416baa:	stc    
  416bab:	es push 0x3b7e3634
  416bb1:	xor    edx,esi
  416bb3:	xor    BYTE PTR [ebp+esi*1-0x61],0xce
  416bb8:	mov    bl,0xe6
  416bba:	lock xchg esi,eax
  416bbc:	retf   0x682f
  416bbf:	xlat   BYTE PTR ds:[ebx]
  416bc0:	inc    edx
  416bc1:	mov    dh,0xc8
  416bc3:	dec    ebp
  416bc4:	and    BYTE PTR [edx-0x509edd2d],ah
  416bca:	add    eax,esi
  416bcc:	aaa    
  416bcd:	pop    ds
  416bce:	and    ah,BYTE PTR [edi]
  416bd0:	stos   DWORD PTR es:[edi],eax
  416bd1:	(bad)  
  416bd2:	fmul   QWORD PTR [edx+0x20]
  416bd5:	out    dx,eax
  416bd6:	fidiv  WORD PTR [ecx]
  416bd8:	mov    ah,0x1b
  416bda:	adc    al,0x87
  416bdc:	std    
  416bdd:	sub    al,0x27
  416bdf:	std    
  416be0:	xor    ecx,ebp
  416be2:	das    
  416be3:	pusha  
  416be4:	out    0xcb,eax
  416be6:	or     BYTE PTR [ecx+0x23fe1db8],0x3d
  416bed:	test   BYTE PTR [ecx-0x66],cl
  416bf0:	dec    ecx
  416bf1:	sbb    ch,BYTE PTR [edi-0x6f0087fc]
  416bf7:	hlt    
  416bf8:	outs   dx,BYTE PTR ds:[esi]
  416bf9:	push   ebx
  416bfa:	dec    edi
  416bfb:	add    esp,edx
  416bfd:	dec    eax
  416bfe:	ja     0x416ba0
  416c00:	xchg   edx,eax
  416c01:	pop    esi
  416c02:	and    dh,BYTE PTR [ebx+0x27]
  416c05:	mov    eax,ds:0x80238957
  416c0a:	jl     0x416b96
  416c0c:	mov    eax,0x66f1ebc5
  416c11:	leave  
  416c12:	jbe    0x416c79
  416c14:	shl    DWORD PTR [ebp-0x41aaced9],0x16
  416c1b:	std    
  416c1c:	loopne 0x416bbd
  416c1e:	pop    edx
  416c1f:	mov    ah,BYTE PTR [esi+0x6]
  416c22:	lds    edx,FWORD PTR [edi+0x4e]
  416c25:	popa   
  416c26:	mov    ebp,0xf987a65b
  416c2b:	test   al,0x1
  416c2d:	mov    bh,BYTE PTR [ecx+0x24]
  416c30:	add    BYTE PTR cs:[eax+0x26],dh
  416c34:	dec    ebx
  416c35:	and    al,0x94
  416c37:	or     DWORD PTR [ebp-0x110a60f6],ebp
  416c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3e:	mov    al,0x36
  416c40:	pushf  
  416c41:	arpl   WORD PTR [ecx],cx
  416c43:	pop    ecx
  416c44:	test   DWORD PTR [eax-0x6cd82682],edi
  416c4a:	and    ch,0xae
  416c4d:	mov    dl,0x1b
  416c4f:	jle    0x416bf2
  416c51:	sbb    BYTE PTR [edi+0x6653c765],bh
  416c57:	sar    BYTE PTR [esi-0x1a4e65e7],1
  416c5d:	or     BYTE PTR [esi+0x6f60f7ac],ch
  416c63:	mov    eax,0x2943a4be
  416c68:	pop    esi
  416c69:	cld    
  416c6a:	push   esi
  416c6b:	stos   BYTE PTR es:[edi],al
  416c6c:	out    0x80,al
  416c6e:	sbb    eax,0x4ef0e0ad
  416c73:	sub    edx,edx
  416c75:	xchg   ecx,eax
  416c76:	ja     0x416c10
  416c78:	pop    eax
  416c79:	xlat   BYTE PTR ds:[ebx]
  416c7a:	xchg   edx,eax
  416c7b:	sahf   
  416c7c:	mov    ecx,esp
  416c7e:	clc    
  416c7f:	push   ecx
  416c80:	adc    ecx,DWORD PTR [eax+0x7c]
  416c83:	pop    es
  416c84:	sub    edi,DWORD PTR [ecx+0x26]
  416c87:	dec    ebp
  416c88:	push   ss
  416c89:	mov    ch,0x91
  416c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8c:	icebp  
  416c8d:	pop    ecx
  416c8e:	add    dl,BYTE PTR [esi]
  416c90:	ss jmp 0xc5:0xc866e785
  416c98:	mul    BYTE PTR [eax]
  416c9a:	pop    esi
  416c9b:	xor    BYTE PTR [esi+0x71dcfbf0],dh
  416ca1:	cmp    ecx,esi
  416ca3:	outs   dx,BYTE PTR ds:[esi]
  416ca4:	push   0xffffffee
  416ca6:	(bad)  
  416ca7:	idiv   DWORD PTR [ebp-0x41]
  416caa:	inc    eax
  416cab:	loopne 0x416cae
  416cad:	sub    DWORD PTR [ebx+0x4],esi
  416cb0:	pop    esp
  416cb1:	sbb    al,0xc4
  416cb3:	mov    al,ds:0x96c5066
  416cb8:	out    0x98,eax
  416cba:	jge    0x416cca
  416cbc:	mov    al,0xe0
  416cbe:	aam    0x4a
  416cc0:	(bad)  
  416cc1:	add    DWORD PTR [esp+eiz*2],eax
  416cc4:	fsubr  DWORD PTR ss:[eax]
  416cc7:	test   DWORD PTR [esi],ecx
  416cc9:	and    cl,0x35
  416ccc:	ret    
  416ccd:	mov    ah,ah
  416ccf:	push   edi
  416cd0:	arpl   sp,si
  416cd2:	mov    bh,0xa2
  416cd4:	lock call 0x18c5:0x3a914c6f
  416cdc:	js     0x416c8f
  416cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cdf:	add    DWORD PTR [esi+0x207ac1c5],esi
  416ce5:	shr    BYTE PTR fs:[ebx],1
  416ce8:	loop   0x416cd4
  416cea:	pop    bp
  416cec:	cmp    eax,0x3145b3a5
  416cf1:	daa    
  416cf2:	add    eax,0x1e48276c
  416cf7:	adc    ebp,DWORD PTR [esi]
  416cf9:	hlt    
  416cfa:	scas   al,BYTE PTR es:[edi]
  416cfb:	repz jl 0x416cc9
  416cfe:	fadd   QWORD PTR [ebp+esi*4-0x746da8b3]
  416d05:	scas   eax,DWORD PTR es:[edi]
  416d06:	add    dl,BYTE PTR [ecx+ecx*2]
  416d09:	fistp  DWORD PTR [esi+0x57]
  416d0c:	idiv   DWORD PTR [ecx-0x5b]
  416d0f:	ds lahf 
  416d11:	fild   QWORD PTR [edi]
  416d13:	jns    0x416d74
  416d15:	imul   edx,edx,0x1bb4329c
  416d1b:	ficom  WORD PTR [edx+0x14]
  416d1e:	(bad)  
  416d1f:	repnz sti 
  416d21:	cmp    BYTE PTR [edx],dl
  416d23:	fcom   DWORD PTR [edx]
  416d25:	loopne 0x416d2c
  416d27:	push   edx
  416d28:	rol    esp,0x31
  416d2b:	mov    dh,0xee
  416d2d:	push   cs
  416d2e:	xor    dl,0x6e
  416d31:	ins    BYTE PTR es:[edi],dx
  416d32:	sahf   
  416d33:	push   esi
  416d34:	clc    
  416d35:	push   esp
  416d36:	fs sbb eax,0x4d7bc319
  416d3c:	fadd   DWORD PTR [edi-0x5a]
  416d3f:	clc    
  416d40:	sbb    al,0xae
  416d42:	sub    eax,0x6eefb00e
  416d47:	sbb    BYTE PTR [edi],bh
  416d49:	test   eax,0xec1e0753
  416d4e:	aaa    
  416d4f:	gs dec ecx
  416d51:	js     0x416da3
  416d53:	sti    
  416d54:	mov    edi,0x8d725bf
  416d59:	ret    
  416d5a:	dec    ecx
  416d5b:	jno    0x416da1
  416d5d:	and    ebx,DWORD PTR [edx+ebx*8+0x6c]
  416d61:	mov    cl,0x23
  416d63:	hlt    
  416d64:	xor    BYTE PTR [ebx-0x68],dl
  416d67:	cmp    eax,0xfb02ed6e
  416d6c:	mov    bh,0x3b
  416d6e:	fdivr  QWORD PTR ds:[ecx]
  416d71:	lock cmc 
  416d73:	mov    eax,ds:0x2041093f
  416d78:	cmp    BYTE PTR [ecx],ah
  416d7a:	mov    ch,0x22
  416d7c:	mov    edi,0xdaa0a2bd
  416d81:	scas   eax,DWORD PTR es:[edi]
  416d82:	jne    0x416d49
  416d84:	inc    esp
  416d85:	mov    dh,0x5
  416d87:	ret    
  416d88:	xor    al,0x4b
  416d8a:	fs std 
  416d8c:	fwait
  416d8d:	data16 and dl,ch
  416d90:	pop    ebp
  416d91:	les    ebp,FWORD PTR [edx+0x56]
  416d94:	sti    
  416d95:	icebp  
  416d96:	int3   
  416d97:	nop
  416d98:	clc    
  416d99:	repnz mov esp,0x8a252545
  416d9f:	jae    0x416d64
  416da1:	sbb    al,dh
  416da3:	push   eax
  416da4:	inc    esi
  416da5:	sbb    ebp,esi
  416da7:	mov    ebp,0x9f77233a
  416dac:	pop    ebx
  416dad:	retf   
  416dae:	test   al,0xf7
  416db0:	inc    ebp
  416db1:	icebp  
  416db2:	sbb    edi,DWORD PTR [eax+0x22]
  416db5:	adc    eax,0xaa893263
  416dba:	mov    ebp,0x7c8ff67b
  416dbf:	jnp    0x416dcd
  416dc1:	pop    ss
  416dc2:	rcl    BYTE PTR [esi],0x82
  416dc5:	pop    ebx
  416dc6:	sahf   
  416dc7:	and    ebx,0x3b
  416dca:	ja     0x416d80
  416dcc:	imul   esp,DWORD PTR [ebx+0x56],0x34
  416dd0:	sahf   
  416dd1:	std    
  416dd2:	mov    edx,0xe74828e3
  416dd7:	add    DWORD PTR [edx],0x5f
  416dda:	add    ebx,DWORD PTR ss:[edi-0x737f6279]
  416de1:	out    0xdc,eax
  416de3:	sub    esi,ebx
  416de5:	rol    DWORD PTR [esi],0xbc
  416de8:	cmc    
  416de9:	fist   WORD PTR [ecx+0x1b1bc39d]
  416def:	(bad)  
  416df0:	hlt    
  416df1:	mov    esp,0xc81915e
  416df6:	xor    BYTE PTR [ebx-0x63],dh
  416df9:	cs jne 0x416df1
  416dfc:	xchg   edi,eax
  416dfd:	jecxz  0x416da4
  416dff:	sbb    DWORD PTR [esp+ebp*8],0xffffffd3
  416e03:	pop    edx
  416e04:	push   cs
  416e05:	adc    DWORD PTR [ebp-0x1b],ebp
  416e08:	data16 ja 0x416dcc
  416e0b:	and    eax,0x434bc443
  416e10:	add    BYTE PTR ss:[edx+eax*8],ah
  416e14:	ds push ds
  416e16:	fdiv   QWORD PTR [eax]
  416e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e19:	es (bad) 
  416e1c:	sbb    DWORD PTR [edx-0x306c59f7],ebx
  416e22:	addr16 jno 0x416dd5
  416e25:	popf   
  416e26:	pushf  
  416e27:	ret    
  416e28:	sub    ebp,0x77
  416e2b:	jmp    0x416ddf
  416e2d:	call   ecx
  416e2f:	jb     0x416e04
  416e31:	pop    esi
  416e32:	pop    ebp
  416e33:	ds jmp 0xe9095dbe
  416e39:	into   
  416e3a:	jmp    0x6eba582e
  416e3f:	cmp    eax,0x79ce9b49
  416e44:	ins    BYTE PTR es:[edi],dx
  416e45:	mov    ds:0x487f66fd,eax
  416e4a:	or     eax,0xe1b06b1b
  416e4f:	push   0x22f5ac02
  416e54:	(bad)  
  416e55:	clc    
  416e56:	es dec esi
  416e58:	push   edx
  416e59:	mov    ch,0xca
  416e5b:	or     ecx,DWORD PTR [edi+0x45688ed9]
  416e61:	inc    esp
  416e62:	aam    0xd5
  416e64:	inc    ebx
  416e65:	dec    esi
  416e66:	jo     0x416e4a
  416e68:	shl    ebp,cl
  416e6a:	icebp  
  416e6b:	xchg   esi,eax
  416e6c:	pop    es
  416e6d:	mov    DWORD PTR [edx+edx*1-0x2b97fc11],eax
  416e74:	sbb    esp,DWORD PTR [esi]
  416e76:	or     bl,BYTE PTR [ebx+0x7a795a93]
  416e7c:	lods   al,BYTE PTR ds:[esi]
  416e7d:	(bad)  
  416e7e:	xchg   esi,eax
  416e7f:	dec    ebx
  416e80:	jne    0x416e98
  416e82:	add    eax,0x46521c38
  416e87:	mov    ebp,0x3f40f784
  416e8c:	adc    dh,bl
  416e8e:	mov    dh,0xcf
  416e90:	mov    gs,edi
  416e92:	or     DWORD PTR [esi+0x2],0xffffff9b
  416e96:	test   DWORD PTR [eax+0x15],edi
  416e99:	mov    dh,0x95
  416e9b:	sub    al,0xea
  416e9d:	iret   
  416e9e:	fld    QWORD PTR [ebx-0x3e4c548f]
  416ea4:	add    esi,DWORD PTR ss:[edx]
  416ea7:	mov    ecx,0x8677fbbb
  416eac:	add    DWORD PTR [ecx],esi
  416eae:	pop    ecx
  416eaf:	mov    esp,0x40c71b2
  416eb4:	lods   eax,DWORD PTR ds:[esi]
  416eb5:	ss xor al,0x5f
  416eb8:	pop    esp
  416eba:	push   esp
  416ebb:	not    BYTE PTR [eax-0x61baa0f7]
  416ec1:	push   0xffffffd1
  416ec3:	jge    0x416ef3
  416ec5:	gs (bad) 
  416ec7:	lods   eax,DWORD PTR ds:[esi]
  416ec8:	cmp    ebx,DWORD PTR [ebp-0x52720ab9]
  416ece:	mov    ds:0x8b4353a7,al
  416ed3:	adc    eax,0xfca9da99
  416ed8:	or     ch,BYTE PTR [edi]
  416eda:	les    edi,FWORD PTR [edx+0x7ee3802a]
  416ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee1:	cmp    BYTE PTR [ebp+0x63e84e4e],ch
  416ee7:	xchg   ebx,eax
  416ee8:	add    DWORD PTR [esp+ecx*2-0x1cd660c0],esp
  416eef:	or     BYTE PTR [ecx-0x3a],0xda
  416ef3:	sbb    al,0xdf
  416ef5:	jl     0x416e87
  416ef7:	fidiv  DWORD PTR [ebx]
  416ef9:	mov    edx,0x17b7b735
  416efe:	mov    cl,0xfc
  416f00:	mov    ecx,0x794523ef
  416f05:	jmp    0x416edf
  416f07:	inc    ebp
  416f08:	or     al,0x31
  416f0a:	add    dl,ch
  416f0c:	test   BYTE PTR [ecx+ebp*4-0x42],dh
  416f10:	jp     0x416ef6
  416f12:	les    ebp,FWORD PTR [ecx]
  416f14:	not    BYTE PTR [ebp+0x97b359]
  416f1a:	push   ebp
  416f1b:	repz sub al,0x1d
  416f1e:	add    ch,BYTE PTR [edx+0x51]
  416f21:	inc    ebx
  416f22:	int3   
  416f23:	cmp    bh,bh
  416f25:	stos   BYTE PTR es:[edi],al
  416f26:	mov    esp,0x357d71c2
  416f2b:	adc    cl,BYTE PTR [ebp-0x5cb565db]
  416f31:	pop    ds
  416f32:	rcl    eax,0x2a
  416f35:	dec    esi
  416f36:	jp     0x416f18
  416f38:	in     eax,dx
  416f39:	out    dx,al
  416f3a:	jmp    0x416ed1
  416f3c:	int    0xec
  416f3e:	sahf   
  416f3f:	ror    BYTE PTR [esp+edx*8+0x69a54077],0x74
  416f47:	test   al,0xf5
  416f49:	cmp    eax,0xf3b33cf8
  416f4e:	jecxz  0x416ef2
  416f50:	jle    0x416ef6
  416f52:	cmp    eax,0xb08ba187
  416f57:	out    dx,al
  416f58:	push   es
  416f59:	clc    
  416f5a:	xchg   edx,eax
  416f5b:	mov    ds:0x501ee03,eax
  416f60:	add    eax,0x637899f7
  416f65:	xor    DWORD PTR [ebp+ebx*2-0x6ae03794],ebx
  416f6c:	sbb    al,0xfd
  416f6e:	int    0xe6
  416f70:	add    dh,BYTE PTR [esi-0x1]
  416f73:	mov    cl,0x28
  416f75:	loope  0x416f6c
  416f77:	outs   dx,BYTE PTR ds:[esi]
  416f78:	cmp    edi,DWORD PTR [esi+edx*4+0x1692f029]
  416f7f:	add    eax,0x180a192d
  416f84:	sbb    DWORD PTR [esi+0x1b],esp
  416f87:	push   0x63cebb5b
  416f8c:	jno    0x416f4f
  416f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f8f:	push   esi
  416f90:	sub    ch,bl
  416f92:	xor    al,0x58
  416f94:	adc    al,0x8b
  416f96:	jbe    0x417016
  416f98:	pop    ss
  416f99:	sub    al,0xf1
  416f9b:	cmp    eax,DWORD PTR [ecx+eiz*8+0x77]
  416f9f:	ds push edi
  416fa1:	pop    eax
  416fa2:	jo     0x416f3a
  416fa4:	adc    DWORD PTR [edx+esi*1+0x78],ecx
  416fa8:	mov    dh,0xf6
  416faa:	add    BYTE PTR [ecx+0x625a2aa8],ah
  416fb0:	and    dl,BYTE PTR [ebx]
  416fb2:	sub    BYTE PTR [ebp-0x4b],ch
  416fb5:	imul   eax,DWORD PTR [edi+0x1f],0x71d4f19d
  416fbc:	sbb    eax,0x1ae404aa
  416fc1:	lahf   
  416fc2:	rcl    DWORD PTR [esi-0x46],cl
  416fc5:	push   esp
  416fc6:	dec    esi
  416fc7:	push   es
  416fc8:	pop    eax
  416fc9:	pop    edi
  416fca:	sar    DWORD PTR [esi],1
  416fcc:	mov    bh,BYTE PTR [ecx-0x5d]
  416fcf:	sub    eax,0xb6ae9d8
  416fd4:	jb     0x416f7e
  416fd6:	sub    BYTE PTR [ebp+0x40],al
  416fd9:	mov    eax,0xd0414973
  416fde:	push   ds
  416fdf:	sub    eax,0xa2952527
  416fe4:	aaa    
  416fe5:	jbe    0x41700a
  416fe7:	add    eax,0x7521a25f
  416fec:	lock mov DWORD PTR [eax+ebx*8],0x474bae58
  416ff4:	cmc    
  416ff5:	cli    
  416ff6:	mov    al,0x26
  416ff8:	or     eax,0xd6dc3527
  416ffd:	mov    edi,esi
  416fff:	idiv   BYTE PTR [ebp+0x704694f4]
  417005:	jmp    0xf6549725
  41700a:	fsub   DWORD PTR [ecx]
  41700c:	mov    eax,ds:0xc679469a
  417011:	bound  ebx,QWORD PTR ds:0x4415c161
  417017:	pop    ds
  417018:	dec    esi
  417019:	xlat   BYTE PTR ds:[ebx]
  41701a:	or     al,0x15
  41701c:	mov    WORD PTR [edi],cs
  41701e:	imul   edi,DWORD PTR [ebp-0x35ed5572],0xffffffff
  417025:	int    0x84
  417027:	test   al,0x93
  417029:	push   ds
  41702a:	out    dx,eax
  41702b:	cmp    BYTE PTR [eax+0x614940a2],0xfe
  417032:	adc    al,0xcd
  417034:	ror    BYTE PTR [ecx+esi*8],cl
  417037:	mov    esp,0x97418356
  41703c:	add    DWORD PTR [edx],ebx
  41703e:	sbb    BYTE PTR [edx-0x1e37f5a4],bh
  417044:	sahf   
  417045:	ins    BYTE PTR es:[edi],dx
  417046:	adc    al,0x97
  417048:	(bad)  
  417049:	mov    cl,0xb7
  41704b:	stc    
  41704c:	sub    edx,DWORD PTR [ecx-0x43]
  41704f:	pop    ds
  417050:	mov    edx,0xc784822f
  417055:	mov    ecx,esi
  417057:	jl     0x417057
  417059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41705a:	and    edi,DWORD PTR [ebp+edi*1-0x3e]
  41705e:	jae    0x417081
  417060:	mov    esi,0x9034a928
  417065:	shl    DWORD PTR [eax-0x58],1
  417068:	dec    esi
  417069:	sub    bl,ah
  41706b:	ret    0x4b2
  41706e:	jmp    0xe214:0xb334c940
  417075:	out    0x90,eax
  417077:	pushf  
  417078:	push   0xa90ef41c
  41707d:	js     0x417073
  41707f:	jae    0x4170f3
  417081:	pop    ebx
  417082:	jb     0x417011
  417084:	pop    edi
  417085:	aaa    
  417086:	jnp    0x4170a5
  417088:	inc    ecx
  417089:	xor    eax,0x8a369ba0
  41708e:	push   0x6f
  417090:	dec    ebp
  417091:	inc    edi
  417092:	shr    BYTE PTR [ebp+0x4b],cl
  417095:	and    eax,0x270e0874
  41709a:	scas   eax,DWORD PTR es:[edi]
  41709b:	fnsave [edi-0x32d3fda7]
  4170a1:	mov    dl,0xa2
  4170a3:	loopne 0x417121
  4170a5:	(bad)  
  4170a6:	mov    ebp,0x7b744206
  4170ab:	fs call 0x5c5dd5fb
  4170b1:	push   ebx
  4170b2:	rol    BYTE PTR [eax+0x7a],0xef
  4170b6:	lods   eax,DWORD PTR ds:[esi]
  4170b7:	mov    esp,0x8259d15a
  4170bc:	jl     0x417046
  4170be:	push   cs
  4170bf:	hlt    
  4170c0:	xchg   ebp,eax
  4170c1:	out    dx,eax
  4170c2:	stc    
  4170c3:	inc    esi
  4170c4:	mov    BYTE PTR [ebx],0xb4
  4170c7:	jo     0x4170ad
  4170c9:	(bad)  
  4170ca:	sbb    al,0x36
  4170cc:	mov    ecx,0xb03828ad
  4170d1:	or     ch,ah
  4170d3:	push   ebx
  4170d4:	outs   dx,BYTE PTR ds:[esi]
  4170d5:	les    edx,FWORD PTR [edx+0x6]
  4170d8:	inc    eax
  4170d9:	sti    
  4170da:	add    ebx,0x2d
  4170dd:	pop    ebx
  4170de:	icebp  
  4170df:	xor    DWORD PTR [esi+ebx*4],edi
  4170e2:	(bad)  
  4170e3:	fild   WORD PTR [ecx]
  4170e5:	dec    DWORD PTR [ebp+0x46d5330b]
  4170eb:	inc    edi
  4170ec:	pushf  
  4170ed:	pushf  
  4170ee:	inc    esp
  4170ef:	dec    eax
  4170f0:	cmp    eax,0x1fd43677
  4170f5:	ffree  st(2)
  4170f7:	leave  
  4170f8:	leave  
  4170f9:	xor    al,0x67
  4170fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fc:	inc    edx
  4170fd:	push   esp
  4170fe:	lock jmp 0x4170d4
  417101:	loop   0x4170c7
  417103:	dec    eax
  417104:	ss gs cmp dl,bl
  417108:	ds in  al,dx
  41710a:	jno    0x417173
  41710c:	and    DWORD PTR [ebp+0x41d1005d],edi
  417112:	aaa    
  417113:	icebp  
  417114:	lea    ebx,[eax+0x59]
  417117:	jno    0x41710b
  417119:	and    BYTE PTR [ebx+0x70],0x21
  41711d:	(bad)  
  41711e:	jl     0x417102
  417120:	int3   
  417121:	mov    ds:0xcbae15e6,al
  417126:	int    0xa8
  417128:	dec    esi
  417129:	ficom  DWORD PTR [ecx]
  41712b:	mov    al,0xe5
  41712d:	jp     0x4170e2
  41712f:	gs retf 
  417131:	and    al,al
  417133:	mov    ds:0x80b89a14,eax
  417138:	push   ebx
  417139:	jo     0x41713a
  41713b:	imul   esp,DWORD PTR [edi-0x6e76d75f],0x6cc38b3
  417145:	shl    BYTE PTR [eax],cl
  417147:	adc    BYTE PTR [ecx-0x14e52a2f],bl
  41714d:	xchg   esi,eax
  41714e:	ret    0xf469
  417151:	add    eax,0xb706c114
  417156:	retf   0x8a82
  417159:	ds cs enter 0x752a,0xbb
  41715f:	xor    BYTE PTR [eax-0x6b],0x96
  417163:	dec    ecx
  417164:	daa    
  417165:	add    BYTE PTR [ecx-0x72e2388f],0x7
  41716c:	lods   eax,DWORD PTR ds:[esi]
  41716d:	adc    DWORD PTR [edx+0x73],edi
  417170:	rcl    BYTE PTR [edi],1
  417172:	push   es
  417173:	xor    dl,al
  417175:	cmp    eax,0xa0e83e85
  41717a:	pop    ecx
  41717b:	(bad)  
  41717c:	jmp    0x41710c
  41717e:	push   ss
  41717f:	popa   
  417180:	pop    ecx
  417181:	lods   al,BYTE PTR ds:[esi]
  417182:	out    0x28,eax
  417184:	xchg   esp,eax
  417185:	pop    edi
  417186:	imul   ecx,DWORD PTR ss:[edx],0xbda5e162
  41718d:	arpl   bx,di
  41718f:	fnstenv [esi+0x1f]
  417192:	out    0x74,eax
  417194:	push   DWORD PTR [ebp*1-0x7ff6f48d]
  41719b:	sti    
  41719c:	cmp    bh,dh
  41719e:	in     eax,dx
  41719f:	push   cs
  4171a0:	or     eax,0x9f5a103
  4171a5:	(bad)  
  4171a6:	mov    edx,0x9bdc82
  4171ab:	dec    ebx
  4171ac:	adc    BYTE PTR [ebx-0x50496c29],bh
  4171b2:	mov    esi,0xd0b45049
  4171b7:	fnsave [ebx+0x10]
  4171ba:	retf   
  4171bb:	sbb    eax,0xe340b560
  4171c0:	pop    edi
  4171c1:	mov    ebx,0x51f95e44
  4171c6:	mov    al,ds:0xa0455b68
  4171cb:	jb     0x41723a
  4171cd:	ret    0x149a
  4171d0:	pusha  
  4171d1:	jl     0x4171c3
  4171d3:	jmp    0x4171a5
  4171d5:	leave  
  4171d6:	pop    ds
  4171d7:	sahf   
  4171d8:	cmc    
  4171d9:	fild   WORD PTR [edx+0x54]
  4171dc:	icebp  
  4171dd:	xchg   ecx,eax
  4171de:	pop    eax
  4171df:	sub    DWORD PTR [eax-0x725e3cd9],esp
  4171e5:	std    
  4171e6:	inc    ecx
  4171e7:	into   
  4171e8:	lods   al,BYTE PTR ds:[esi]
  4171e9:	(bad)  
  4171ea:	lods   al,BYTE PTR ds:[esi]
  4171eb:	cmp    cl,bl
  4171ed:	and    BYTE PTR [eax],ch
  4171ef:	stc    
  4171f0:	adc    cl,BYTE PTR [eax-0x50]
  4171f3:	test   eax,0xd36b8621
  4171f8:	sbb    edi,esp
  4171fa:	pop    edi
  4171fb:	mov    edx,0xa09f67d0
  417200:	dec    ecx
  417201:	and    ch,bh
  417203:	mov    ebp,0x138ef0e5
  417208:	fs or  ecx,esi
  41720b:	push   0xce288cc4
  417210:	scas   al,BYTE PTR es:[edi]
  417211:	gs jmp 0x41724b
  417214:	cmp    edx,ecx
  417216:	into   
  417217:	fist   DWORD PTR [esi]
  417219:	cld    
  41721a:	mov    BYTE PTR [ebx+0x4cef18ce],bl
  417220:	mov    esi,0xcb8cd1f1
  417225:	mov    eax,ds:0xcc41bd74
  41722a:	(bad)  
  41722c:	push   0x21977b5a
  417231:	arpl   WORD PTR [edx-0x4843bc48],di
  417237:	mov    al,cl
  417239:	in     eax,0xc5
  41723b:	cmp    ebp,DWORD PTR [esi-0x41]
  41723e:	mov    ah,BYTE PTR [ecx+0x6a]
  417241:	scas   eax,DWORD PTR es:[edi]
  417242:	xor    edi,DWORD PTR ds:0xfdb358f4
  417248:	jae    0x41721b
  41724a:	mov    dh,BYTE PTR [ebx+0x2e7f35c8]
  417250:	or     bh,BYTE PTR [ebx+0x21]
  417253:	dec    edx
  417254:	mov    eax,0x71e307d3
  417259:	ss xchg esi,eax
  41725b:	adc    eax,0xdb83278b
  417260:	adc    eax,0xc4b2a8d1
  417265:	push   edi
  417266:	xor    DWORD PTR [edx+0xb],eax
  417269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41726a:	xor    BYTE PTR [esi+0x324909c0],bl
  417270:	ror    BYTE PTR [edi+0x20],1
  417273:	fs lock push esp
  417276:	sub    ch,ch
  417278:	jo     0x417214
  41727a:	dec    edx
  41727b:	pop    es
  41727c:	out    dx,eax
  41727d:	pop    ebx
  41727e:	adc    BYTE PTR [eax-0x5b],cl
  417281:	ret    
  417282:	inc    ebx
  417283:	(bad)  
  417285:	rcr    BYTE PTR [edi-0x7],cl
  417288:	xchg   ecx,eax
  417289:	shl    bl,0xfb
  41728c:	jge    0x417216
  41728e:	inc    eax
  41728f:	imul   esi,DWORD PTR [esi+eiz*1-0x62],0xffffff93
  417294:	fsubr  QWORD PTR ds:0xf335e402
  41729a:	jmp    0xcd5ecfc2
  41729f:	xlat   BYTE PTR ds:[ebx]
  4172a0:	shr    DWORD PTR [bx+di],0x43
  4172a4:	jp     0x4172db
  4172a6:	sti    
  4172a7:	sub    al,0x0
  4172a9:	retf   
  4172aa:	std    
  4172ab:	jnp    0x4172dd
  4172ad:	fcmovnbe st,st(7)
  4172af:	push   esi
  4172b0:	cmp    edi,DWORD PTR [esi+0x2d]
  4172b3:	add    eax,0x4d6d507e
  4172b8:	and    cl,al
  4172ba:	pop    ecx
  4172bb:	dec    eax
  4172bc:	in     eax,0xa5
  4172be:	push   cs
  4172bf:	xchg   esi,eax
  4172c0:	clc    
  4172c1:	jmp    0x45d64d41
  4172c6:	mov    al,ds:0xfcaeab2d
  4172cb:	and    edx,DWORD PTR [eax]
  4172cd:	aam    0xa1
  4172cf:	xchg   DWORD PTR [ecx],ecx
  4172d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d2:	xor    DWORD PTR [ebx+0x3917d67f],0xf4af1d4
  4172dc:	xor    cl,BYTE PTR [edi-0x1bb0a8c3]
  4172e2:	hlt    
  4172e3:	pop    edx
  4172e4:	sub    esp,DWORD PTR [ebx-0xc2b6065]
  4172ea:	fidiv  DWORD PTR [edx+0x5d1d1705]
  4172f0:	test   edi,0x15e94e7e
  4172f6:	ja     0x417359
  4172f8:	xchg   DWORD PTR [edi-0x7b],edi
  4172fb:	pushf  
  4172fc:	imul   DWORD PTR [eax+ebp*8]
  4172ff:	push   ebp
  417300:	or     DWORD PTR [esi-0x299b88a1],edi
  417306:	pop    ds
  417307:	mov    ebx,0x558eb2d9
  41730c:	stc    
  41730d:	mov    dl,BYTE PTR [edi]
  41730f:	sbb    eax,0xf101c105
  417314:	inc    esi
  417315:	mov    ebx,0x58e37055
  41731a:	ja     0x41733a
  41731c:	push   esp
  41731d:	(bad)  
  41731e:	stc    
  41731f:	mov    al,ds:0xf3bc1402
  417324:	jno    0x41735f
  417326:	arpl   WORD PTR [ebp+0x52],ax
  417329:	retf   
  41732a:	xchg   BYTE PTR [ebx+0x2c6fcd53],dl
  417330:	jns    0x41736a
  417332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417333:	mov    dh,0xac
  417335:	and    DWORD PTR [eax+0xb868177],eax
  41733b:	push   esi
  41733c:	xchg   edi,eax
  41733d:	mov    eax,0xc18538fc
  417342:	jg     0x41737a
  417344:	mov    ecx,0xde800229
  417349:	lods   al,BYTE PTR ds:[esi]
  41734a:	rcl    BYTE PTR [ebp+ebp*2-0x55268cae],0xf7
  417352:	daa    
  417353:	mov    ebp,0x7feeeb39
  417358:	fimul  DWORD PTR [edx]
  41735a:	sahf   
  41735b:	pop    ecx
  41735c:	dec    esi
  41735d:	sahf   
  41735e:	adc    edi,esi
  417360:	pop    ebx
  417361:	imul   ebx,esi,0x6a
  417364:	call   0x6a20:0x6c6c9333
  41736b:	mov    ds:0x664bcb54,al
  417370:	inc    ebp
  417371:	dec    esp
  417372:	adc    al,0xf0
  417374:	cmp    ebx,DWORD PTR [edi+ebp*8+0x61b2e541]
  41737b:	mov    WORD PTR [esi-0x72],cs
  41737e:	xchg   esi,eax
  41737f:	imul   ebx,ebp,0x2b68bb1b
  417385:	jecxz  0x41730a
  417387:	fwait
  417388:	pop    ecx
  417389:	mov    DWORD PTR [edx-0x14088162],esi
  41738f:	retf   
  417390:	xor    edi,DWORD PTR [edx]
  417392:	dec    edi
  417393:	outs   dx,BYTE PTR ds:[esi]
  417394:	adc    esp,ecx
  417396:	mov    esp,DWORD PTR [esi-0x47]
  417399:	popf   
  41739a:	cmp    eax,0x6809eadf
  41739f:	sbb    eax,0xc3c3031b
  4173a4:	ins    BYTE PTR es:[edi],dx
  4173a5:	jbe    0x417368
  4173a7:	add    DWORD PTR [eax+0x7c870039],edx
  4173ad:	stos   DWORD PTR es:[edi],eax
  4173ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173af:	rcr    esp,0xf4
  4173b2:	add    eax,DWORD PTR [ecx-0x22420da6]
  4173b8:	jbe    0x417412
  4173ba:	mov    ebp,0x883b7438
  4173bf:	repnz mov eax,ds:0x141287e7
  4173c5:	adc    eax,0xee816a16
  4173ca:	mov    ebx,0x9453cbeb
  4173cf:	cmc    
  4173d0:	inc    esp
  4173d1:	jns    0x41743b
  4173d3:	not    BYTE PTR [ebx-0x5b]
  4173d6:	shl    BYTE PTR [esi+0x7],cl
  4173d9:	or     esp,DWORD PTR [edx+0x40c319f]
  4173df:	add    BYTE PTR [esi],ch
  4173e1:	xor    dh,BYTE PTR [ebx]
  4173e3:	dec    eax
  4173e4:	push   edx
  4173e5:	pminsw mm1,QWORD PTR [edi+0x30]
  4173e9:	js     0x41743c
  4173eb:	mov    ebp,0xabfa4209
  4173f0:	mov    cl,0xf6
  4173f2:	pushf  
  4173f3:	pop    ecx
  4173f4:	jnp    0x41737f
  4173f6:	mov    ebp,0xb34aa091
  4173fb:	add    eax,0x5a12d261
  417400:	push   ebp
  417401:	xchg   DWORD PTR [esi-0x37166ebe],esi
  417407:	inc    ecx
  417408:	push   eax
  417409:	sti    
  41740a:	jns    0x4173c1
  41740c:	aam    0xd0
  41740e:	pop    ds
  41740f:	aad    0x53
  417411:	fs retf 
  417413:	xchg   esi,eax
  417414:	cmp    DWORD PTR [edx+0x7a],esp
  417417:	or     BYTE PTR [ecx+0x4882ee69],dh
  41741d:	sbb    al,0xa4
  41741f:	adc    dh,bl
  417421:	mov    edi,0x7e6185fc
  417426:	mov    ?,WORD PTR [eax+0x5f]
  417429:	scas   eax,DWORD PTR es:[edi]
  41742a:	push   0x18
  41742c:	sub    eax,0x4c2e7dc6
  417431:	aad    0x45
  417433:	outs   dx,BYTE PTR ds:[esi]
  417434:	outs   dx,DWORD PTR ds:[esi]
  417435:	add    DWORD PTR [ebx+0x2c373e5],ebp
  41743b:	mov    dl,0x54
  41743d:	jl     0x41743e
  41743f:	outs   dx,DWORD PTR ds:[esi]
  417440:	mov    ah,BYTE PTR [ebx+edx*2+0x4d3591dc]
  417447:	loopne 0x4174b8
  417449:	cmc    
  41744a:	cmc    
  41744b:	mov    eax,0x5041a15b
  417450:	inc    ebx
  417451:	ret    0x43ce
  417454:	dec    ebp
  417455:	adc    DWORD PTR [ebp-0x5e4dffc6],esp
  41745b:	jne    0x4174d2
  41745d:	popf   
  41745e:	cmp    bl,dl
  417460:	sub    esp,DWORD PTR [ebx+ebp*1+0x13246a0]
  417467:	loopne 0x417407
  417469:	push   eax
  41746a:	sbb    bh,BYTE PTR [edi]
  41746c:	cli    
  41746d:	aas    
  41746e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746f:	xor    al,0x9d
  417471:	leave  
  417472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417473:	ss (bad) 
  417475:	adc    eax,0x1de2e7cd
  41747a:	push   ds
  41747b:	pop    ss
  41747c:	xor    BYTE PTR [ebx-0x1f],ch
  41747f:	std    
  417480:	gs cmp eax,0xbd9e6609
  417486:	mov    bl,0x2d
  417488:	ins    DWORD PTR es:[edi],dx
  417489:	lock or eax,0x5f50c225
  41748f:	mov    esp,?
  417491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417492:	fmul   QWORD PTR [esi-0x2402a615]
  417498:	sbb    eax,0xa3018ac3
  41749d:	inc    ecx
  41749e:	mov    bh,0xf9
  4174a0:	mov    esi,0xb559ce34
  4174a5:	std    
  4174a6:	xor    DWORD PTR [edx+0xca5ed58],ebp
  4174ac:	jae    0x417516
  4174ae:	inc    edx
  4174af:	xchg   edi,eax
  4174b0:	cmp    dh,al
  4174b2:	adc    al,0xca
  4174b4:	or     dh,BYTE PTR [ebx-0x19e01540]
  4174ba:	mov    dl,0xf9
  4174bc:	stos   BYTE PTR es:[edi],al
  4174bd:	mov    edx,0x4e29710b
  4174c2:	js     0x4174cc
  4174c4:	ins    DWORD PTR es:[edi],dx
  4174c5:	ins    DWORD PTR es:[edi],dx
  4174c6:	lods   al,BYTE PTR ds:[esi]
  4174c7:	lods   al,BYTE PTR ds:[esi]
  4174c8:	cs pop ebp
  4174ca:	lds    edx,FWORD PTR [eax+0x12]
  4174cd:	or     BYTE PTR [edx+edi*4],cl
  4174d0:	cdq    
  4174d1:	push   ds
  4174d2:	mov    ?,edi
  4174d4:	ins    BYTE PTR es:[edi],dx
  4174d5:	scas   al,BYTE PTR es:[edi]
  4174d6:	loopne 0x417472
  4174d8:	mov    ebp,ss
  4174da:	jae    0x4174b4
  4174dc:	dec    edx
  4174dd:	lods   eax,DWORD PTR ds:[esi]
  4174de:	pop    edx
  4174df:	or     ecx,DWORD PTR [esi]
  4174e1:	jecxz  0x4174fd
  4174e3:	mov    BYTE PTR [si-0x74],dl
  4174e7:	push   esi
  4174e8:	sahf   
  4174e9:	aad    0x2d
  4174eb:	and    cl,BYTE PTR [ebp-0x1e]
  4174ee:	popf   
  4174ef:	pop    edi
  4174f0:	mov    ebx,0x21c8ca37
  4174f5:	mov    esp,0xfcc39d6
  4174fa:	sub    BYTE PTR [esi+eax*2+0x151264fd],bl
  417501:	jge    0x41751b
  417503:	enter  0xb124,0xbe
  417507:	push   ecx
  417508:	retf   
  417509:	xor    al,0xdc
  41750b:	data16 jae 0x41757a
  41750e:	xchg   esi,eax
  41750f:	mov    esp,DWORD PTR [ebp-0x7f]
  417512:	dec    ecx
  417513:	mov    eax,ds:0x3b684f12
  417519:	cwde   
  41751a:	or     dl,BYTE PTR [esi+0x76]
  41751d:	dec    eax
  41751e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41751f:	inc    eax
  417520:	stc    
  417521:	xor    bl,BYTE PTR [edi+0x1e8d0631]
  417527:	jne    0x417514
  417529:	mov    ecx,0x9b3e9d58
  41752e:	xchg   edx,eax
  41752f:	push   edx
  417530:	sub    eax,0xe653b186
  417535:	pop    esp
  417536:	adc    ch,BYTE PTR [ebx-0x8edc3f4]
  41753c:	xor    ch,BYTE PTR [esi+eiz*4-0x52e25f59]
  417543:	das    
  417544:	fbld   TBYTE PTR [edi-0x36a827b]
  41754a:	jae    0x41756e
  41754c:	adc    eax,0x77219514
  417551:	cwde   
  417552:	jg     0x4175d3
  417554:	idiv   ebp
  417556:	ret    
  417557:	aaa    
  417558:	cwde   
  417559:	mov    dl,0x73
  41755b:	or     DWORD PTR [ebx],edx
  41755d:	loope  0x4175c2
  41755f:	mov    ah,0xb5
  417561:	pop    edi
  417562:	pop    ds
  417563:	cmp    ah,0xd0
  417566:	repz pop eax
  417568:	daa    
  417569:	mov    ds:0x1c24fc1d,al
  41756e:	sbb    ecx,DWORD PTR [eax-0x25b281ca]
  417574:	iret   
  417575:	jmp    0x417510
  417577:	ins    DWORD PTR es:[edi],dx
  417578:	mov    ds:0xc470b6a8,eax
  41757d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757e:	loop   0x4175e0
  417580:	jecxz  0x41757a
  417582:	xor    ah,ch
  417584:	mov    al,0xbd
  417586:	jne    0x4175ea
  417588:	or     al,0x9d
  41758a:	cld    
  41758b:	lahf   
  41758c:	fcmovbe st,st(0)
  41758e:	outs   dx,BYTE PTR ds:[esi]
  41758f:	(bad)  
  417590:	sbb    al,0xde
  417592:	xor    eax,edi
  417594:	mov    esi,edx
  417596:	aaa    
  417597:	mov    dh,dh
  417599:	dec    esp
  41759a:	int3   
  41759b:	push   ds
  41759c:	inc    edi
  41759d:	clc    
  41759e:	xchg   esp,eax
  41759f:	sti    
  4175a0:	xchg   esp,eax
  4175a1:	inc    edi
  4175a2:	gs ds mov cl,0xa7
  4175a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a7:	or     DWORD PTR [ecx+0x51],ebx
  4175aa:	rol    DWORD PTR [esi],cl
  4175ac:	add    al,BYTE PTR [ebx]
  4175ae:	mov    eax,ds:0x914cd58a
  4175b3:	xor    BYTE PTR ds:0x6bb90cd0,bl
  4175b9:	mov    esp,0xe1be461f
  4175be:	div    BYTE PTR [edi]
  4175c0:	jle    0x417633
  4175c2:	ins    DWORD PTR es:[edi],dx
  4175c3:	out    dx,al
  4175c4:	xchg   esi,eax
  4175c5:	aas    
  4175c6:	mov    ds:0xcbe9652a,eax
  4175cb:	(bad)  
  4175cc:	and    dl,dh
  4175ce:	jae    0x41762f
  4175d0:	jmp    0x41761b
  4175d2:	mov    bl,0xbb
  4175d4:	xchg   esi,eax
  4175d5:	add    ah,BYTE PTR [ecx]
  4175d7:	enter  0xbdc2,0x54
  4175db:	jl     0x4175db
  4175dd:	jle    0x41761a
  4175df:	lods   al,BYTE PTR ds:[esi]
  4175e0:	mov    esp,0x57b4278a
  4175e5:	jae    0x417568
  4175e7:	pushf  
  4175e8:	lods   eax,DWORD PTR ds:[esi]
  4175e9:	inc    ecx
  4175ea:	jnp    0x41757b
  4175ec:	adc    BYTE PTR ds:0x5528c377,0x85
  4175f3:	sbb    DWORD PTR [edi+0x56],esp
  4175f6:	mov    eax,0xb3b30ad
  4175fb:	ror    BYTE PTR [ebx-0x246ba790],0x75
  417602:	outs   dx,DWORD PTR ds:[esi]
  417603:	cld    
  417604:	(bad)  
  417605:	leave  
  417606:	mov    cl,0x38
  417608:	sbb    ecx,ebp
  41760a:	not    BYTE PTR [esi-0x1d]
  41760d:	sbb    esi,ebx
  41760f:	ficom  DWORD PTR [ecx-0x73]
  417612:	mov    bh,BYTE PTR ss:[edi]
  417615:	cmp    esi,DWORD PTR [ecx]
  417617:	ret    0x28f8
  41761a:	sub    bh,BYTE PTR [eax]
  41761c:	mov    ecx,0xe229a834
  417621:	das    
  417622:	dec    esp
  417623:	arpl   WORD PTR [esp+ebp*2+0x71],sp
  417627:	cmp    DWORD PTR [ebp+0x3f],esp
  41762a:	push   ss
  41762b:	xlat   BYTE PTR ds:[ebx]
  41762c:	loopne 0x4175b0
  41762e:	aaa    
  41762f:	add    edi,DWORD PTR [edi]
  417631:	stos   DWORD PTR es:[edi],eax
  417632:	pusha  
  417633:	xor    eax,0x5afba3cf
  417638:	mov    dh,al
  41763a:	and    edx,esp
  41763c:	repnz mov dh,0x83
  41763f:	push   esi
  417640:	neg    ah
  417642:	mov    DWORD PTR [ecx],eax
  417644:	mov    bl,0xcc
  417646:	lock inc esp
  417649:	cwde   
  41764a:	mov    al,ds:0x3bb963a0
  41764f:	stc    
  417650:	pop    ebx
  417651:	dec    esi
  417652:	cdq    
  417653:	push   esi
  417654:	jp     0x41764b
  417656:	dec    edx
  417657:	mov    ds:0x89bc73b8,eax
  41765c:	not    BYTE PTR [ebx+ebx*2-0x55641a62]
  417663:	xchg   esi,eax
  417664:	push   ebx
  417665:	pop    ds
  417666:	fst    st(3)
  417668:	frstor [esp+ebp*4]
  41766b:	mov    ?,WORD PTR [edx+0x363d10ce]
  417671:	into   
  417672:	hlt    
  417673:	adc    eax,0xf55ba057
  417678:	or     cl,dh
  41767a:	push   esi
  41767b:	pop    ebp
  41767c:	bound  esp,QWORD PTR [ecx+0xdbce214]
  417682:	pushf  
  417683:	imul   edx,DWORD PTR [ebp+0x5d],0xffffff94
  417687:	dec    esp
  417688:	call   0xd17955e
  41768d:	leave  
  41768e:	pinsrw mm7,ebx,0x2e
  417692:	mov    eax,0xe374c00d
  417697:	xchg   ecx,eax
  417698:	inc    edi
  417699:	push   ecx
  41769a:	sti    
  41769b:	ss push ss
  41769d:	mov    ch,0xfe
  41769f:	jmp    0x41768f
  4176a1:	aaa    
  4176a2:	mov    dl,0xf6
  4176a4:	mov    al,0xc7
  4176a6:	push   edx
  4176a7:	jne    0x417711
  4176a9:	mov    bl,0xf6
  4176ab:	lahf   
  4176ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ad:	push   ecx
  4176ae:	lods   al,BYTE PTR ds:[esi]
  4176af:	inc    edx
  4176b0:	inc    esp
  4176b1:	sub    eax,0x944c462e
  4176b6:	mov    ah,0xa0
  4176b8:	arpl   WORD PTR [edx-0x79],si
  4176bb:	and    eax,0x790c0dba
  4176c0:	mov    dh,0x83
  4176c2:	sub    eax,0xaf64513a
  4176c7:	in     al,0x57
  4176c9:	mov    dh,BYTE PTR [ecx-0x65]
  4176cc:	or     edi,DWORD PTR [ecx-0xff93d3]
  4176d2:	cmp    BYTE PTR [ebx],bh
  4176d4:	jb     0x4176af
  4176d6:	mov    edi,0xe118b76a
  4176db:	outs   dx,BYTE PTR ds:[esi]
  4176dc:	sbb    DWORD PTR [esi+eiz*2+0x10ba4369],ebp
  4176e3:	push   eax
  4176e4:	(bad)  [ebp+0x5a1bcc2e]
  4176ea:	loop   0x417688
  4176ec:	test   DWORD PTR [ecx],eax
  4176ee:	mov    ebp,0x62a8c588
  4176f3:	outs   dx,BYTE PTR ds:[esi]
  4176f4:	std    
  4176f5:	sub    ah,dh
  4176f7:	fnsave [edx-0x1e1a0047]
  4176fd:	loopne 0x41768a
  4176ff:	in     al,dx
  417700:	dec    eax
  417701:	ds cli 
  417703:	aas    
  417704:	es aam 0xf3
  417707:	dec    edx
  417708:	xchg   ebx,eax
  417709:	aad    0xf4
  41770b:	ds repnz ins BYTE PTR es:[edi],dx
  41770e:	aas    
  41770f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417710:	push   ss
  417711:	data16 fld QWORD PTR [ecx+0x5d1c25e4]
  417718:	xor    BYTE PTR [esi],bl
  41771a:	xchg   edx,eax
  41771b:	add    esi,DWORD PTR [esi]
  41771d:	dec    edi
  41771e:	pop    ds
  41771f:	dec    eax
  417720:	sbb    BYTE PTR [eax],bl
  417722:	gs in  al,0x3c
  417725:	scas   al,BYTE PTR es:[edi]
  417726:	icebp  
  417727:	sub    eax,0xa7bd06e4
  41772c:	pop    esi
  41772d:	mov    bl,BYTE PTR [ebx-0x6e4c1e3f]
  417733:	test   al,0x2a
  417735:	fdiv   QWORD PTR [ebx]
  417737:	jmp    0x417782
  417739:	jecxz  0x4177a5
  41773b:	ficom  WORD PTR [esi]
  41773d:	imul   esi,DWORD PTR [edx],0x9d54b3d9
  417743:	and    ah,dl
  417745:	imul   BYTE PTR [edi+0x34]
  417748:	shl    dh,1
  41774a:	in     eax,dx
  41774b:	ret    
  41774c:	add    BYTE PTR [edi+esi*1-0x3a],bl
  417750:	push   esi
  417751:	pushf  
  417752:	ins    DWORD PTR es:[edi],dx
  417753:	imul   edi,DWORD PTR [ebx+0x7],0xf3c556f0
  41775a:	mov    eax,ds:0xace59e9
  41775f:	cwde   
  417760:	bound  esi,QWORD PTR [esi]
  417762:	mov    eax,0x7cfd52
  417767:	sub    cl,bl
  417769:	fdivr  DWORD PTR [edi+ecx*1+0x2c3d25d9]
  417770:	lods   eax,DWORD PTR ds:[esi]
  417771:	adc    bh,ch
  417773:	outs   dx,DWORD PTR ds:[esi]
  417774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417775:	xchg   ebp,eax
  417776:	lock or DWORD PTR [esi-0x48],ebp
  41777a:	ret    0x7da1
  41777d:	loopne 0x4177e1
  41777f:	cmp    BYTE PTR [ecx-0x5250fef7],al
  417785:	sahf   
  417786:	add    eax,ebx
  417788:	sysret 
  41778a:	int    0x14
  41778c:	adc    DWORD PTR gs:[edi-0x533ce115],ebp
  417793:	sub    BYTE PTR [ebp+0x67204165],cl
  417799:	pusha  
  41779a:	into   
  41779b:	xchg   esi,eax
  41779c:	push   0xffffffa7
  41779e:	imul   esi,DWORD PTR [ebp-0xc73c06c],0x32469bbb
  4177a8:	jne    0x41779c
  4177aa:	pop    ss
  4177ab:	push   eax
  4177ac:	dec    ecx
  4177ad:	adc    BYTE PTR [ebx+0x1],bh
  4177b0:	inc    eax
  4177b1:	jb     0x417740
  4177b3:	jae    0x417823
  4177b5:	not    DWORD PTR [ebx+0x791cdcc1]
  4177bb:	sbb    ch,BYTE PTR [edx]
  4177bd:	das    
  4177be:	xor    eax,0xd4b03162
  4177c3:	repz stc 
  4177c5:	adc    BYTE PTR [edi+esi*2+0x1c],ch
  4177c9:	dec    edx
  4177ca:	gs and eax,0xf26dbe16
  4177d0:	int    0x9b
  4177d2:	xchg   ebx,eax
  4177d3:	nop
  4177d4:	mov    bh,BYTE PTR [ebp+0x7d]
  4177d7:	add    al,0xac
  4177d9:	(bad)  
  4177da:	mov    esp,0x10d2830c
  4177df:	jbe    0x4177c3
  4177e1:	aad    0x47
  4177e3:	popa   
  4177e4:	sbb    BYTE PTR [edx+0x1f041bea],dl
  4177ea:	adc    DWORD PTR [esi+0x31],edi
  4177ed:	cwde   
  4177ee:	js     0x417799
  4177f0:	cs scas al,BYTE PTR es:[edi]
  4177f2:	scas   eax,DWORD PTR es:[edi]
  4177f3:	fmul   DWORD PTR [ebx+0x78]
  4177f6:	mov    ecx,0xfe80144f
  4177fb:	hlt    
  4177fc:	xchg   edx,eax
  4177fd:	ret    0x5601
  417800:	sbb    BYTE PTR [ebx],0xdb
  417803:	mov    cl,0x6
  417805:	or     DWORD PTR gs:[esi+0x20],ebx
  417809:	push   ss
  41780a:	or     BYTE PTR [edx+edx*8+0x213bb01a],cl
  417811:	mov    WORD PTR [eax],fs
  417813:	mov    bh,0x0
  417815:	fs dec ecx
  417817:	xor    eax,0xc0d1b2f2
  41781c:	es hlt 
  41781e:	push   ebx
  41781f:	push   ebx
  417820:	fnstsw WORD PTR ds:0xc1a26c64
  417826:	xor    eax,0xaeaf6920
  41782b:	mov    ah,al
  41782d:	inc    eax
  41782e:	push   eax
  41782f:	(bad)  
  417830:	cli    
  417831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417832:	int    0xc7
  417834:	sbb    ebx,ebp
  417836:	dec    ebp
  417837:	xchg   ebx,eax
  417838:	dec    esp
  417839:	sbb    eax,0x666e1fb5
  41783e:	cmp    bh,0xac
  417841:	daa    
  417842:	leave  
  417843:	jmp    0x417814
  417845:	xor    ch,ah
  417847:	cmp    DWORD PTR [edi+0x41],edi
  41784a:	mov    esp,0x9374aa28
  41784f:	gs aad 0x8d
  417852:	loop   0x4177fc
  417854:	jle    0x41782b
  417856:	out    0x64,al
  417858:	fdiv   st(7),st
  41785a:	icebp  
  41785b:	jmp    eax
  41785d:	pusha  
  41785e:	mov    al,ds:0xb4eda6cf
  417863:	xchg   esp,eax
  417864:	xchg   ecx,eax
  417865:	adc    esi,DWORD PTR [edx+0x25]
  417868:	(bad)  
  417869:	lock xor al,0x40
  41786c:	jae    0x41781b
  41786e:	xchg   edi,eax
  41786f:	pop    edx
  417870:	jg     0x417835
  417872:	mov    esp,0x10926f53
  417877:	lahf   
  417878:	pop    ebx
  417879:	sahf   
  41787a:	lods   al,BYTE PTR ds:[esi]
  41787b:	into   
  41787c:	inc    ecx
  41787d:	adc    eax,0x84f33170
  417882:	mov    al,ah
  417884:	loope  0x41786c
  417886:	push   ebx
  417887:	aam    0x41
  417889:	outs   dx,BYTE PTR ds:[esi]
  41788a:	xchg   edx,eax
  41788b:	xor    cl,BYTE PTR [ebx+esi*2]
  41788e:	push   0x21
  417890:	outs   dx,DWORD PTR ds:[esi]
  417891:	sub    ebp,0x4fa00431
  417897:	xchg   ebp,eax
  417898:	out    dx,al
  417899:	std    
  41789a:	dec    ecx
  41789b:	inc    edx
  41789c:	sub    dh,dh
  41789e:	xor    DWORD PTR [ecx+ecx*4+0x5f4d472a],0xffffffb4
  4178a6:	iret   
  4178a7:	sbb    ebp,ebp
  4178a9:	rcr    DWORD PTR [ebx+esi*4],0xfd
  4178ad:	nop
  4178ae:	pop    es
  4178af:	rcr    BYTE PTR [edi+0x3],1
  4178b2:	fcom   st(2)
  4178b4:	jo     0x41784a
  4178b6:	push   eax
  4178b7:	sbb    esp,edx
  4178b9:	dec    ebp
  4178ba:	popa   
  4178bb:	ja     0x417888
  4178bd:	loop   0x4178c2
  4178bf:	sahf   
  4178c0:	push   ebx
  4178c1:	enter  0x531,0x40
  4178c5:	fbld   TBYTE PTR [edi+ebp*8-0x64]
  4178c9:	dec    edi
  4178ca:	mov    esp,?
  4178cc:	test   BYTE PTR [ebp-0x7],ch
  4178cf:	or     cl,al
  4178d1:	daa    
  4178d2:	inc    ebp
  4178d3:	stc    
  4178d4:	cmp    bh,BYTE PTR [edx]
  4178d6:	or     eax,0x5431325b
  4178db:	inc    ebx
  4178dc:	popf   
  4178dd:	xchg   ebx,eax
  4178de:	inc    ebx
  4178df:	scas   al,BYTE PTR es:[edi]
  4178e0:	push   esi
  4178e1:	fimul  DWORD PTR [esp+esi*8]
  4178e4:	pop    esp
  4178e5:	ds retf 
  4178e7:	outs   dx,BYTE PTR ds:[esi]
  4178e8:	fwait
  4178e9:	aam    0xaf
  4178eb:	xor    ch,cl
  4178ed:	inc    ebp
  4178ee:	retf   
  4178ef:	adc    al,bh
  4178f1:	fdivr  QWORD PTR [ecx]
  4178f3:	and    BYTE PTR [edx-0x4594f26e],al
  4178f9:	xchg   DWORD PTR [eax+0x22],edi
  4178fc:	mov    dh,0x15
  4178fe:	mov    ch,0x36
  417900:	test   BYTE PTR [esi-0x50a1f8b8],0xf
  417907:	mov    DWORD PTR [ebp+edi*1-0xaa04748],ebp
  41790e:	push   esi
  41790f:	mov    ebp,DWORD PTR [ebp-0x61116f35]
  417915:	sub    eax,0xba403342
  41791a:	popa   
  41791b:	ret    0x7569
  41791e:	stos   BYTE PTR es:[edi],al
  41791f:	ror    DWORD PTR [edi+0x62],0xd6
  417923:	dec    edx
  417924:	and    ebx,DWORD PTR [edi+edx*2]
  417927:	xchg   edi,eax
  417928:	or     eax,0xb9da98f7
  41792d:	inc    ebp
  41792e:	ins    BYTE PTR es:[edi],dx
  41792f:	je     0x417980
  417931:	pop    eax
  417932:	loopne 0x4178d5
  417934:	loop   0x41794f
  417936:	stos   DWORD PTR es:[edi],eax
  417937:	sub    BYTE PTR [edx+0x19],dl
  41793a:	mov    WORD PTR [edx+0x6c],ss
  41793d:	in     al,dx
  41793e:	je     0x4178f4
  417940:	in     eax,0xca
  417942:	outs   dx,BYTE PTR ds:[esi]
  417943:	shl    BYTE PTR [esi+0x78551efc],1
  417949:	ret    
  41794a:	mov    edi,0x76e0aa6a
  41794f:	adc    bh,BYTE PTR [ebx+eiz*4+0x5c]
  417953:	pop    ds
  417954:	or     al,0x5a
  417956:	jns    0x41790f
  417958:	fwait
  417959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41795a:	rol    DWORD PTR [ecx-0x5da3544d],cl
  417960:	into   
  417961:	ins    BYTE PTR es:[edi],dx
  417962:	daa    
  417963:	mov    dh,0x25
  417965:	adc    esi,DWORD PTR [ecx]
  417967:	aas    
  417968:	fs pop ebx
  41796a:	cli    
  41796b:	lds    eax,FWORD PTR [ebp+0x427c51fd]
  417971:	ror    DWORD PTR [eax+0x5494d47c],0x20
  417978:	cs jmp 0x4179d1
  41797b:	dec    esp
  41797c:	hlt    
  41797d:	mov    dl,0x5
  41797f:	jmp    0x4af037e
  417984:	in     eax,0xff
  417986:	lock fld TBYTE PTR [esi+0xe13c3c5]
  41798d:	mov    bx,ax
  417990:	push   es
  417991:	jmp    0x8c82:0x3e82025f
  417998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417999:	dec    esi
  41799a:	out    dx,al
  41799b:	cvttps2pi mm7,QWORD PTR [ebx]
  41799e:	cmp    edx,edx
  4179a0:	fdivp  st(4),st
  4179a2:	xor    edx,esi
  4179a4:	das    
  4179a5:	dec    esi
  4179a6:	dec    edi
  4179a7:	ds retf 
  4179a9:	cdq    
  4179aa:	(bad)  
  4179ab:	and    ebx,DWORD PTR [edx]
  4179ad:	sub    eax,0x89340777
  4179b2:	push   es
  4179b3:	cmp    cl,al
  4179b5:	xor    ebx,DWORD PTR [ecx+0x24d4a672]
  4179bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179bc:	fldcw  WORD PTR [eax-0x33aab5f2]
  4179c2:	push   ecx
  4179c3:	jmp    0xfb0f:0x1694b61a
  4179ca:	jb     0x4179a0
  4179cc:	sbb    DWORD PTR [eax],eax
  4179ce:	inc    ebp
  4179cf:	inc    eax
  4179d0:	data16 out 0x5f,al
  4179d3:	pop    ss
  4179d4:	arpl   WORD PTR [edx+ecx*8+0x1dab9e3e],si
  4179db:	jecxz  0x4179ad
  4179dd:	jl     0x4179a4
  4179df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e0:	js     0x417a04
  4179e2:	aam    0x68
  4179e4:	push   0xffffff9c
  4179e6:	mov    edi,0x39938224
  4179eb:	sahf   
  4179ec:	hlt    
  4179ed:	stos   BYTE PTR es:[edi],al
  4179ee:	xlat   BYTE PTR ds:[ebx]
  4179ef:	mov    ebx,0x5896ec58
  4179f4:	inc    ebp
  4179f5:	repz inc ebx
  4179f7:	cli    
  4179f8:	dec    edi
  4179f9:	mov    ecx,ebp
  4179fb:	mov    edx,0x837d4521
  417a00:	test   BYTE PTR [esi],ah
  417a02:	(bad)
  417a05:	sub    esp,ebx
  417a07:	aad    0xb3
  417a09:	push   esp
  417a0a:	sub    dl,dh
  417a0c:	mov    edx,0xbd2f8ca7
  417a11:	mov    DWORD PTR [edx-0xa11a1c5],0x411d7fc9
  417a1b:	sub    eax,0x64060e71
  417a20:	inc    edi
  417a21:	jo     0x417a4e
  417a23:	sahf   
  417a24:	cmc    
  417a25:	and    ch,BYTE PTR [edx+esi*8]
  417a28:	mov    bh,0x83
  417a2a:	mov    eax,ds:0x9402019c
  417a2f:	mov    dh,0x9b
  417a31:	mov    ecx,0xdcb07f89
  417a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a37:	inc    esi
  417a38:	repnz mov cl,0x84
  417a3b:	inc    edi
  417a3c:	or     al,0xa7
  417a3e:	push   0x7c
  417a40:	mov    bh,dl
  417a42:	hlt    
  417a43:	or     ch,BYTE PTR [ebx+0x68f193d9]
  417a49:	mov    al,ds:0x807762a4
  417a4e:	in     eax,dx
  417a4f:	dec    ebp
  417a50:	ins    DWORD PTR es:[edi],dx
  417a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a52:	ja     0x417aa8
  417a54:	lods   eax,DWORD PTR ds:[esi]
  417a55:	fucom  st(7)
  417a57:	or     ah,BYTE PTR [eax]
  417a59:	in     al,dx
  417a5a:	imul   ecx,DWORD PTR cs:[ebp+0x195387e7],0xb7439dd7
  417a65:	jecxz  0x417ab9
  417a67:	jmp    0x1aef6115
  417a6c:	xchg   BYTE PTR [ecx+ebx*4-0x21],cl
  417a70:	ss out dx,al
  417a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a73:	cmp    bh,BYTE PTR [edi+0x63]
  417a76:	pop    esi
  417a77:	into   
  417a78:	adc    al,0x63
  417a7a:	or     dl,BYTE PTR [eax-0x5f]
  417a7d:	(bad)  
  417a7e:	out    0x90,eax
  417a80:	clc    
  417a81:	(bad)  [ecx]
  417a83:	in     al,0xd8
  417a85:	sub    al,0x6f
  417a87:	and    dh,al
  417a89:	idiv   bh
  417a8b:	jecxz  0x417afa
  417a8d:	and    dh,BYTE PTR [ebp+0x20c408e0]
  417a93:	ret    
  417a94:	call   0x4dcd:0x8cd4ab39
  417a9b:	push   cs
  417a9c:	test   eax,0xa44f8187
  417aa1:	push   ecx
  417aa2:	mov    dh,0x86
  417aa4:	pop    es
  417aa5:	sub    eax,0x1e51fef8
  417aaa:	std    
  417aab:	sbb    dh,ah
  417aad:	push   esp
  417aae:	pop    ecx
  417aaf:	cmc    
  417ab0:	inc    eax
  417ab1:	add    eax,0x93a3d6c3
  417ab6:	mov    edi,0x313b0061
  417abb:	sub    al,0xed
  417abe:	outs   dx,DWORD PTR ds:[esi]
  417abf:	mov    bl,0x96
  417ac1:	mov    BYTE PTR [esi],bl
  417ac3:	sbb    edx,0x8300bc1
  417ac9:	and    BYTE PTR [ecx+0x25],dh
  417acc:	or     ebx,edi
  417ace:	xor    eax,0xbcace9ac
  417ad3:	cmp    eax,0x7b5d54f
  417ad8:	sub    BYTE PTR [ebx+0x687a8a6d],cl
  417ade:	shl    DWORD PTR [edx-0x5f],0x6c
  417ae2:	jne    0x417ac9
  417ae4:	ins    BYTE PTR es:[edi],dx
  417ae5:	fnstenv [ebx]
  417ae7:	dec    eax
  417ae8:	fmul   QWORD PTR [edi]
  417aea:	bound  edx,QWORD PTR [esi+0x8]
  417aed:	inc    eax
  417aee:	out    0xc6,eax
  417af0:	mov    eax,ds:0xd4db26b6
  417af5:	xor    eax,0xf5bae373
  417afa:	adc    dl,dh
  417afc:	sub    DWORD PTR [ebx-0x5f7b405e],0x1b
  417b03:	add    dh,ch
  417b05:	inc    ecx
  417b06:	lahf   
  417b07:	and    ecx,esi
  417b09:	cmp    BYTE PTR [ebx],bh
  417b0b:	adc    al,0xde
  417b0d:	jae    0x417b76
  417b0f:	mov    dl,0x72
  417b11:	sbb    ch,BYTE PTR [ecx-0x7949ca06]
  417b17:	or     bl,BYTE PTR [eax+ebp*4+0x2e]
  417b1b:	stos   DWORD PTR es:[edi],eax
  417b1c:	mov    dh,bh
  417b1e:	jno    0x417aad
  417b20:	adc    al,0x5f
  417b22:	push   ebx
  417b23:	bound  ebp,QWORD PTR [ebx-0x2e]
  417b26:	(bad)
  417b29:	mov    eax,0xd25d9bee
  417b2e:	adc    DWORD PTR [ecx],0xffffffb7
  417b31:	inc    ebx
  417b32:	pop    ds
  417b33:	out    0x47,eax
  417b35:	ja     0x417aed
  417b37:	repz das 
  417b39:	mov    dl,0xde
  417b3b:	push   edi
  417b3c:	les    ebx,FWORD PTR [ecx]
  417b3e:	lea    edi,[edi]
  417b40:	stos   BYTE PTR es:[edi],al
  417b41:	jg     0x417bae
  417b43:	adc    al,0x32
  417b45:	dec    edx
  417b46:	jmp    0x4f246f07
  417b4b:	mov    edi,0xc67fc94d
  417b50:	inc    BYTE PTR [ebp+0x5b]
  417b53:	jp     0x417b32
  417b55:	aad    0x84
  417b57:	ss xor esp,ebx
  417b5a:	inc    ebp
  417b5b:	pop    ecx
  417b5c:	dec    ebp
  417b5d:	adc    edx,0xa7385b2a
  417b63:	pop    edx
  417b64:	shr    bl,1
  417b66:	add    DWORD PTR ds:[edi-0x6f],esp
  417b6a:	arpl   WORD PTR [esi],dx
  417b6c:	mov    dl,0xd8
  417b6e:	in     eax,dx
  417b6f:	pop    edi
  417b70:	test   eax,0x3eaeef0
  417b75:	fbstp  TBYTE PTR [eax]
  417b77:	dec    ebx
  417b78:	xchg   DWORD PTR [ebp+0xb],ecx
  417b7b:	adc    eax,0x9e43c4cf
  417b80:	out    dx,eax
  417b81:	sub    BYTE PTR [edx+0x7c7a110d],0xba
  417b88:	int3   
  417b89:	xchg   edi,eax
  417b8a:	sbb    al,0xca
  417b8c:	add    BYTE PTR [edx],bh
  417b8e:	lods   eax,DWORD PTR ds:[esi]
  417b8f:	jo     0x417b44
  417b91:	ss and al,0xc7
  417b94:	(bad)  
  417b95:	and    BYTE PTR [ebx+edx*4-0x66],al
  417b99:	pop    edi
  417b9a:	mov    ebx,0xb673ed00
  417b9f:	ins    BYTE PTR es:[edi],dx
  417ba0:	jmp    0x1433350e
  417ba5:	outs   dx,BYTE PTR ds:[esi]
  417ba6:	cmp    DWORD PTR [ebp+0x62064405],0x523275b7
  417bb0:	pop    ss
  417bb1:	loopne 0x417c05
  417bb3:	not    eax
  417bb5:	out    0x6e,al
  417bb7:	aas    
  417bb8:	sbb    BYTE PTR [ebp-0x5f],ch
  417bbb:	mov    DWORD PTR [eax+ebx*4+0x54d4aa4a],esp
  417bc2:	jg     0x417bbe
  417bc4:	aas    
  417bc5:	adc    BYTE PTR [edx+0xe5ab2bf],0x85
  417bcc:	mov    fs,WORD PTR [ebp-0x647fe38]
  417bd2:	cld    
  417bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd4:	popa   
  417bd5:	cs lock int 0xe7
  417bd9:	xor    edi,DWORD PTR [ecx]
  417bdb:	es dec edi
  417bdd:	xlat   BYTE PTR ds:[ebx]
  417bde:	sub    BYTE PTR [esi+0x4d932017],0xa
  417be5:	add    ch,bl
  417be7:	(bad)  
  417be9:	inc    esp
  417bea:	jo     0x417c54
  417bec:	lahf   
  417bed:	mov    ah,0xe0
  417bef:	clc    
  417bf0:	lahf   
  417bf1:	dec    ebx
  417bf2:	out    dx,al
  417bf3:	out    dx,eax
  417bf4:	push   0x1d
  417bf6:	adc    bh,BYTE PTR [ecx-0x4]
  417bf9:	mov    eax,ds:0x6bab1805
  417bfe:	adc    BYTE PTR [ebp-0x3429acff],0x7
  417c05:	in     eax,0x5
  417c07:	xor    ecx,DWORD PTR [ebx-0xb338ab9]
  417c0d:	fidivr DWORD PTR [edi-0x77133683]
  417c13:	pop    ebx
  417c14:	or     esi,DWORD PTR [edi]
  417c16:	test   al,0xa4
  417c18:	cdq    
  417c19:	fsubr  st,st(5)
  417c1b:	push   edx
  417c1c:	daa    
  417c1d:	fisttp QWORD PTR [eax+ebp*1]
  417c20:	sub    DWORD PTR [eax+0x4b35b110],ecx
  417c26:	sub    cl,al
  417c28:	adc    al,0x51
  417c2a:	push   ebx
  417c2b:	(bad)  
  417c2d:	repnz mov esi,gs
  417c30:	xchg   esi,eax
  417c31:	mov    cl,0x22
  417c33:	popa   
  417c34:	pop    ecx
  417c35:	fldcw  WORD PTR [edi-0x7c3c2176]
  417c3b:	xchg   ebp,eax
  417c3c:	ret    0x8e1d
  417c3f:	adc    eax,0x37663d49
  417c44:	stos   DWORD PTR es:[edi],eax
  417c45:	pop    esp
  417c46:	lahf   
  417c47:	test   BYTE PTR [edi-0x782a856],bl
  417c4d:	lahf   
  417c4e:	pop    ss
  417c4f:	cmp    eax,ebp
  417c51:	icebp  
  417c52:	sub    BYTE PTR [edx],0x3
  417c55:	add    eax,0xf6daf280
  417c5a:	xor    eax,0xed0894b0
  417c5f:	cmp    eax,0x96b4f7b3
  417c64:	fimul  DWORD PTR [ecx]
  417c66:	test   al,0x97
  417c68:	int3   
  417c69:	xlat   BYTE PTR ds:[ebx]
  417c6a:	push   esi
  417c6b:	inc    edi
  417c6c:	out    0x40,eax
  417c6e:	fld    TBYTE PTR [esi+0x5f7b2d1d]
  417c74:	fistp  WORD PTR [ebx-0x6d]
  417c77:	and    eax,DWORD PTR es:[ebp+0x32]
  417c7b:	inc    eax
  417c7c:	sbb    eax,0x46643f24
  417c81:	fild   WORD PTR [ebx-0x26ad4d95]
  417c87:	jns    0x417c7a
  417c89:	out    0x2f,al
  417c8b:	cmc    
  417c8c:	imul   esi,edx,0x371dd83d
  417c92:	pushf  
  417c93:	stc    
  417c94:	aaa    
  417c95:	enter  0xa917,0x8f
  417c99:	jge    0x417c45
  417c9b:	cdq    
  417c9c:	inc    esi
  417c9d:	call   0x8005:0xe94997fb
  417ca4:	or     ah,BYTE PTR [edi+0x76361cbe]
  417caa:	xchg   BYTE PTR [ebx-0x1c],bh
  417cad:	popf   
  417cae:	lea    eax,[edx+0x63]
  417cb1:	sar    WORD PTR [ecx-0x22],cl
  417cb5:	mov    ch,0xf4
  417cb7:	inc    ebp
  417cb8:	inc    edx
  417cb9:	or     DWORD PTR [ebp-0x3cf6e045],ecx
  417cbf:	push   ds
  417cc0:	jb     0x417ce9
  417cc2:	mov    BYTE PTR [edx+edx*8+0x1299f570],al
  417cc9:	test   eax,0x1215a371
  417cce:	inc    ebx
  417ccf:	stos   DWORD PTR es:[edi],eax
  417cd0:	ret    0x168a
  417cd3:	aas    
  417cd4:	stos   DWORD PTR es:[edi],eax
  417cd5:	int3   
  417cd6:	inc    BYTE PTR ds:0x52257478
  417cdc:	(bad)  
  417cdd:	jl     0x417cac
  417cdf:	xor    eax,0xf17d6d57
  417ce4:	or     eax,0xeda662fc
  417ce9:	stos   BYTE PTR es:[edi],al
  417cea:	push   esi
  417ceb:	lahf   
  417cec:	pop    ebx
  417ced:	and    DWORD PTR [esi],esi
  417cef:	push   0x70616e52
  417cf4:	repz add bh,ah
  417cf7:	test   eax,0xbb56469b
  417cfc:	or     DWORD PTR [edx+0x598c5663],esp
  417d02:	stos   BYTE PTR es:[edi],al
  417d03:	sub    esi,eax
  417d05:	push   edi
  417d06:	sub    BYTE PTR [ebx+0x527d033],cl
  417d0c:	sbb    cl,ah
  417d0e:	jnp    0x417ca2
  417d10:	ss int3 
  417d12:	and    cl,BYTE PTR [edx-0x2fd6d983]
  417d18:	push   ecx
  417d19:	popa   
  417d1a:	rol    DWORD PTR [eax+0x4af0a3e1],cl
  417d20:	in     eax,0x4c
  417d22:	jg     0x417cd3
  417d24:	rcl    BYTE PTR [edi],0x7a
  417d27:	out    0xe,eax
  417d29:	inc    eax
  417d2a:	test   BYTE PTR [ebp+0x41],bh
  417d2d:	jae    0xd3e7c81
  417d33:	mov    dh,0xa9
  417d35:	div    DWORD PTR [eax]
  417d37:	push   es
  417d38:	(bad)  
  417d39:	mov    ah,0xd7
  417d3b:	pop    ss
  417d3c:	push   es
  417d3d:	cmp    ch,BYTE PTR [ebp+0x6b]
  417d40:	mov    esp,0x21e64308
  417d45:	mov    dl,0x3
  417d47:	mov    dh,0xb8
  417d49:	inc    edi
  417d4a:	push   ebx
  417d4b:	cmp    bh,BYTE PTR [ebp+ebx*1+0x14aa5bcf]
  417d52:	pop    eax
  417d53:	fbld   TBYTE PTR [eax+0x42979a20]
  417d59:	call   0xc472aa18
  417d5e:	(bad)  
  417d5f:	loope  0x417d01
  417d61:	add    eax,0x45a374c8
  417d66:	fst    st(4)
  417d68:	inc    esi
  417d6a:	aas    
  417d6b:	xchg   edi,eax
  417d6c:	inc    esp
  417d6d:	dec    ebx
  417d6e:	sbb    BYTE PTR [edx],bh
  417d70:	imul   esi,eax,0xb7310a5c
  417d76:	and    eax,0xf717a689
  417d7b:	jmp    0x417dd2
  417d7d:	xor    BYTE PTR [edi+0x16cc9f87],cl
  417d83:	retf   
  417d84:	fsub   DWORD PTR [edi]
  417d86:	dec    ebx
  417d87:	out    dx,al
  417d88:	aaa    
  417d89:	jno    0x417e03
  417d8b:	out    0x57,al
  417d8d:	xchg   ebx,eax
  417d8e:	push   eax
  417d8f:	sub    eax,0x87fc01a8
  417d94:	mov    eax,ds:0x126933eb
  417d99:	and    DWORD PTR [eax],esi
  417d9b:	pop    edi
  417d9c:	push   esi
  417d9d:	icebp  
  417d9e:	inc    ebp
  417d9f:	mov    ecx,esi
  417da1:	mov    esi,0xcdb0c668
  417da6:	ins    BYTE PTR es:[edi],dx
  417da7:	jl     0x417dde
  417da9:	sbb    ch,BYTE PTR [ebx+0x3f]
  417dac:	inc    edx
  417dad:	pop    ss
  417dae:	outs   dx,BYTE PTR ds:[esi]
  417daf:	sti    
  417db0:	loope  0x417e22
  417db2:	jmp    0x84d02fdd
  417db7:	(bad)  
  417db8:	(bad)  
  417db9:	stos   DWORD PTR es:[edi],eax
  417dba:	mov    dl,0x82
  417dbc:	cmp    al,0x55
  417dbe:	inc    ah
  417dc0:	cmp    dl,BYTE PTR [edx]
  417dc2:	inc    ebp
  417dc3:	push   es
  417dc4:	dec    edi
  417dc5:	add    BYTE PTR [ebp+0x3a],0xc6
  417dc9:	add    BYTE PTR [eax+0x4c],ah
  417dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dcd:	arpl   WORD PTR [bp+si],cx
  417dd0:	data16 (bad) 
  417dd3:	cmp    ebp,DWORD PTR [ebx+esi*4-0x73]
  417dd7:	xlat   BYTE PTR ds:[ebx]
  417dd8:	fwait
  417dd9:	cmp    al,0x95
  417ddb:	cdq    
  417ddc:	mov    ch,BYTE PTR [ebx+0x1a]
  417ddf:	and    al,0x2f
  417de1:	inc    ebp
  417de2:	jne    0x417da0
  417de4:	jmp    0x2aca073e
  417de9:	dec    ebx
  417dea:	imul   esp,DWORD PTR [ecx],0xeea05c87
  417df0:	xchg   esp,eax
  417df1:	stos   BYTE PTR es:[edi],al
  417df2:	jp     0x417d97
  417df4:	sti    
  417df5:	inc    ebx
  417df6:	sar    ebp,1
  417df8:	int    0x2c
  417dfa:	in     eax,0xff
  417dfc:	cmp    ecx,edx
  417dfe:	fld    DWORD PTR [esi]
  417e00:	dec    edi
  417e01:	mov    bl,0xec
  417e03:	into   
  417e04:	mov    cl,0x4b
  417e06:	jae    0x417e1a
  417e08:	(bad)
  417e0c:	cmp    esi,DWORD PTR [esi+0x34c78ffb]
  417e12:	inc    edi
  417e13:	ja     0x417e6b
  417e15:	mov    al,BYTE PTR [ebx+0x5e]
  417e18:	test   al,0x9a
  417e1a:	(bad)  
  417e1b:	mov    eax,0xb4014a7d
  417e20:	jmp    0x3ff8:0x78e556fd
  417e27:	dec    eax
  417e28:	addr16 push ss
  417e2a:	xor    BYTE PTR [ebx-0x3603886f],bh
  417e30:	retf   0x90f4
  417e33:	xor    eax,0x13e93655
  417e38:	pop    esp
  417e39:	dec    esi
  417e3a:	jnp    0x417ea6
  417e3c:	and    eax,0x72db8d8f
  417e41:	adc    DWORD PTR [esi-0x7e],0x6bab4ff1
  417e48:	jmp    0x8ba9:0xff24a45b
  417e4f:	pop    ebp
  417e50:	es daa 
  417e52:	mov    edi,DWORD PTR [ecx-0x4f6c6b87]
  417e58:	push   cs
  417e59:	ror    DWORD PTR [ecx-0x32],1
  417e5c:	rcl    esi,1
  417e5e:	test   eax,0xf04c03f5
  417e63:	leave  
  417e64:	mov    BYTE PTR [esi+0x7a4e76bb],ch
  417e6a:	arpl   WORD PTR [ecx+ebx*1+0x303bca70],bp
  417e71:	pop    eax
  417e72:	aas    
  417e73:	inc    DWORD PTR [eax]
  417e75:	jns    0x417e6a
  417e77:	lods   al,BYTE PTR ds:[esi]
  417e78:	xor    eax,0x78ca4be1
  417e7d:	xor    BYTE PTR [esp+edi*8],bh
  417e80:	mov    ecx,cs
  417e82:	xchg   ebp,eax
  417e83:	retf   0xe9ee
  417e86:	inc    edi
  417e87:	fst    QWORD PTR [edi]
  417e89:	xchg   ecx,eax
  417e8a:	in     al,dx
  417e8b:	jae    0x417ec9
  417e8d:	fist   WORD PTR [esi-0x2664789]
  417e93:	js     0x417e19
  417e95:	pop    edx
  417e96:	adc    ebp,DWORD PTR [eax]
  417e98:	inc    DWORD PTR [ebp+0x49517476]
  417e9e:	adc    edx,DWORD PTR [eax+0x6b]
  417ea1:	mov    esi,0xd068f89e
  417ea6:	dec    ebx
  417ea7:	adc    DWORD PTR [ecx+0x643240bc],ebx
  417ead:	iret   
  417eae:	pop    edx
  417eaf:	dec    edx
  417eb0:	xlat   BYTE PTR ds:[ebx]
  417eb1:	out    0x2f,al
  417eb3:	sti    
  417eb4:	call   0x9a2d:0xb74dafe4
  417ebb:	jbe    0x417e4c
  417ebd:	jl     0x417f34
  417ebf:	aaa    
  417ec0:	clc    
  417ec1:	add    al,0x46
  417ec3:	mov    al,ds:0x8f9f49ab
  417ec8:	inc    esi
  417ec9:	loop   0x417f1e
  417ecb:	pop    esi
  417ecc:	test   al,0x3d
  417ece:	dec    edx
  417ecf:	or     al,0xe7
  417ed1:	out    dx,eax
  417ed2:	aad    0x8
  417ed4:	or     ecx,DWORD PTR [ebx-0x3fd065f8]
  417eda:	nop
  417edb:	mov    esp,0x127e0fe0
  417ee0:	into   
  417ee1:	aaa    
  417ee2:	sub    al,0xa3
  417ee4:	cld    
  417ee5:	push   ss
  417ee6:	sub    al,0x25
  417ee8:	(bad)  
  417ee9:	and    eax,0x61757036
  417eee:	scas   eax,DWORD PTR es:[edi]
  417eef:	std    
  417ef0:	add    dh,BYTE PTR [esp+eiz*8+0x11c3e106]
  417ef7:	aas    
  417ef8:	and    DWORD PTR [eax-0x51],ecx
  417efb:	and    eax,0x2f60474d
  417f00:	sti    
  417f01:	xchg   ecx,eax
  417f02:	jbe    0x417f73
  417f04:	rol    BYTE PTR [ecx-0x5a],1
  417f07:	xchg   edx,eax
  417f08:	lods   eax,DWORD PTR ds:[esi]
  417f09:	pusha  
  417f0a:	cld    
  417f0b:	push   es
  417f0c:	loope  0x417f8c
  417f0e:	push   ss
  417f0f:	retf   0xa8b1
  417f12:	js     0x417edc
  417f14:	inc    esp
  417f15:	dec    ebp
  417f16:	out    0xc5,al
  417f18:	fld    DWORD PTR [eax]
  417f1a:	mov    ebx,0xdfe51cf1
  417f1f:	or     eax,0x2df8e3d0
  417f24:	in     eax,0x64
  417f26:	lahf   
  417f27:	mov    ah,0xa6
  417f29:	loope  0x417f66
  417f2b:	and    bl,cl
  417f2d:	jmp    0x417f14
  417f2f:	ss std 
  417f31:	sar    DWORD PTR [ecx],1
  417f33:	sar    DWORD PTR [ebp+0xe],0x6e
  417f37:	push   esp
  417f38:	mov    edi,0xa1df88f4
  417f3d:	enter  0x802d,0xf8
  417f41:	into   
  417f42:	adc    ah,dl
  417f44:	jge    0x417f14
  417f46:	xor    DWORD PTR [eax-0x16],0x13d75518
  417f4d:	adc    dl,ah
  417f4f:	xchg   ecx,eax
  417f50:	cs inc ebp
  417f52:	arpl   WORD PTR [edi-0x1f],bp
  417f55:	dec    ecx
  417f56:	out    dx,eax
  417f57:	mov    ds:0xe2817069,eax
  417f5c:	pushf  
  417f5d:	adc    DWORD PTR [esp+esi*1-0x6],0x85ab0a79
  417f65:	je     0x417f69
  417f67:	adc    eax,0x8b321ab1
  417f6c:	scas   al,BYTE PTR es:[edi]
  417f6d:	and    BYTE PTR [edx],dl
  417f6f:	xchg   BYTE PTR [ecx],bl
  417f71:	in     eax,dx
  417f72:	xchg   esp,eax
  417f73:	xor    al,0x86
  417f75:	and    eax,0x65512d7
  417f7a:	sub    ch,BYTE PTR [ebp-0x57]
  417f7d:	push   edi
  417f7e:	shl    DWORD PTR [ebx],cl
  417f80:	or     DWORD PTR [edi-0x32],edx
  417f83:	pop    eax
  417f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f85:	call   0xedc53f48
  417f8a:	pop    edi
  417f8b:	jbe    0x417f55
  417f8d:	xor    al,0xcd
  417f8f:	jno    0x417f66
  417f91:	mov    es,edi
  417f93:	ss jbe 0x417f17
  417f96:	rcl    BYTE PTR [edi+0x26b376fd],0x7c
  417f9d:	dec    ecx
  417f9e:	loopne 0x418009
  417fa0:	push   esp
  417fa1:	fld    QWORD PTR [esi-0x595d4a9a]
  417fa7:	and    al,0xa4
  417fa9:	cld    
  417faa:	stos   DWORD PTR es:[edi],eax
  417fab:	les    ebx,FWORD PTR [ecx+0x63b76179]
  417fb1:	test   BYTE PTR [esi+0x5138229e],dl
  417fb7:	call   0xccc0:0x2b299f6d
  417fbe:	dec    ecx
  417fbf:	mov    ah,0x32
  417fc1:	xor    eax,0x8b24c0b6
  417fc6:	xor    BYTE PTR [ecx],dh
  417fc8:	mov    ds:0xfce7f2b6,al
  417fcd:	jecxz  0x417fb4
  417fcf:	pop    esi
  417fd0:	inc    edx
  417fd1:	mov    ds:0x204ab6d4,al
  417fd6:	jg     0x417fdb
  417fd8:	add    eax,0x2ca09b98
  417fdd:	pop    eax
  417fde:	jl     0x417fdb
  417fe0:	fcomp  DWORD PTR [ecx+edi*8]
  417fe3:	outs   dx,DWORD PTR ds:[esi]
  417fe4:	call   0x9907:0x1556b5bc
  417feb:	add    BYTE PTR [ecx],ah
  417fed:	out    0xf1,al
  417fef:	(bad)  
  417ff0:	push   edi
  417ff1:	ds retf 
  417ff3:	xchg   ecx,eax
  417ff4:	sub    DWORD PTR [ecx+0x47],edx
  417ff7:	jmp    0x2fe0:0xe1d78ccb
  417ffe:	stc    
  417fff:	and    al,0x2f
  418001:	sbb    al,0xf5
  418003:	sbb    BYTE PTR [ebp+ebx*2+0x4a9e83ab],bl
  41800a:	sbb    cl,BYTE PTR [ebx]
  41800c:	or     BYTE PTR [esi],0x31
  41800f:	mov    al,0xf8
  418011:	test   al,0x64
  418013:	lea    ebp,[ecx+ebx*8+0x30fc48ff]
  41801a:	loopne 0x418086
  41801c:	cmp    bl,BYTE PTR [eax+0x24ba2e11]
  418022:	scas   eax,DWORD PTR es:[edi]
  418023:	aaa    
  418024:	sti    
  418025:	(bad)
  418029:	push   ss
  41802a:	(bad)  
  41802b:	rcr    BYTE PTR [ebp-0x7ca120fa],1
  418031:	rcl    ebx,1
  418033:	clc    
  418034:	fcmovnu st,st(0)
  418036:	mov    edx,0xede21198
  41803b:	jbe    0x417fd7
  41803d:	dec    eax
  41803e:	jp     0x41805c
  418040:	mov    ds:0x6519bb31,eax
  418045:	inc    esi
  418046:	xor    dl,BYTE PTR [eax+0x42153e2d]
  41804c:	sbb    edi,DWORD PTR [ebx]
  41804e:	sbb    BYTE PTR [ebx-0x55],0x41
  418052:	std    
  418053:	les    esi,FWORD PTR [edx+ecx*8]
  418056:	call   0x8b55:0x4694ecc6
  41805d:	out    dx,al
  41805e:	mov    bl,0x7f
  418060:	or     eax,0x25fc4059
  418065:	lods   eax,DWORD PTR ds:[esi]
  418066:	inc    eax
  418067:	(bad)  
  418068:	adc    DWORD PTR [eax+esi*4-0x16],edx
  41806c:	out    0xdd,eax
  41806e:	xor    BYTE PTR ds:[ecx+0x5],dl
  418072:	inc    edx
  418073:	xchg   ebp,eax
  418074:	out    dx,eax
  418075:	bsr    edx,DWORD PTR [edx+0x71]
  418079:	ds sbb ecx,edi
  41807c:	pusha  
  41807d:	xchg   esp,eax
  41807e:	cld    
  41807f:	jno    0x41806d
  418081:	cli    
  418082:	push   ebp
  418083:	lods   eax,DWORD PTR ds:[esi]
  418084:	xchg   edi,eax
  418085:	ja     0x418067
  418087:	test   BYTE PTR ds:0x508901f,0x2e
  41808e:	in     al,0x34
  418090:	loop   0x41805d
  418092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418093:	or     al,ah
  418095:	xchg   BYTE PTR [ecx+0x69],cl
  418098:	into   
  418099:	adc    ch,BYTE PTR [esi+ebx*2]
  41809c:	add    al,0xbe
  41809e:	xchg   DWORD PTR [edi+ebp*8],eax
  4180a1:	mov    eax,0x9c8e95b8
  4180a6:	xor    BYTE PTR [ecx-0x1a8662b2],ch
  4180ac:	push   ebp
  4180ad:	dec    eax
  4180ae:	inc    edx
  4180af:	fnstsw WORD PTR [edx-0x36a67a09]
  4180b5:	pushf  
  4180b6:	gs dec ecx
  4180b8:	ins    BYTE PTR es:[edi],dx
  4180b9:	pop    esp
  4180ba:	cmc    
  4180bb:	std    
  4180bc:	sbb    eax,0x7349aa0f
  4180c1:	inc    esi
  4180c2:	out    dx,eax
  4180c3:	jp     0x418076
  4180c5:	push   DWORD PTR [ebp+0x6230407a]
  4180cb:	cwde   
  4180cc:	retf   
  4180cd:	jg     0x4180c9
  4180cf:	jbe    0x41808a
  4180d1:	leave  
  4180d2:	pop    es
  4180d3:	mov    fs,WORD PTR [ecx-0x5fa2e01c]
  4180d9:	mov    esi,0x9a7d303f
  4180de:	lea    ebx,[ecx]
  4180e0:	sbb    eax,eax
  4180e2:	mov    ebp,edi
  4180e4:	mov    edi,0xbe60e33c
  4180e9:	cli    
  4180ea:	rcr    BYTE PTR [edx+0x69de4eb0],cl
  4180f0:	xchg   esp,eax
  4180f1:	push   ebx
  4180f2:	pop    ebx
  4180f3:	dec    ebp
  4180f4:	mov    cl,BYTE PTR [ebp+0x46]
  4180f7:	out    dx,eax
  4180f8:	jb     0x4180e2
  4180fa:	arpl   WORD PTR [edi-0x3475fc90],ax
  418100:	jecxz  0x4180c3
  418102:	imul   ebx,DWORD PTR [ecx],0x26
  418105:	rol    BYTE PTR [ecx+ebx*8-0x352804b6],cl
  41810c:	dec    DWORD PTR [eax-0xe]
  41810f:	lods   eax,DWORD PTR ds:[esi]
  418110:	int    0x60
  418112:	push   es
  418113:	mov    ss,WORD PTR [edx]
  418115:	xor    al,0x2d
  418117:	je     0x41814c
  418119:	jle    0x418107
  41811b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41811c:	mov    ah,0x12
  41811e:	pop    ebp
  41811f:	ret    0x766f
  418122:	or     BYTE PTR [edi+0x1b],dh
  418125:	mov    al,ds:0x32ea184d
  41812a:	pop    eax
  41812b:	imul   BYTE PTR [esi+ebp*8]
  41812e:	ds (bad) 
  418130:	dec    esi
  418131:	cdq    
  418132:	outs   dx,DWORD PTR ds:[esi]
  418133:	add    DWORD PTR [edx],esp
  418135:	ss retf 0xea10
  418139:	sbb    dh,cl
  41813b:	jg     0x418186
  41813d:	jae    0x418148
  41813f:	in     eax,dx
  418140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418141:	inc    cl
  418143:	mov    esp,esp
  418145:	in     eax,dx
  418146:	outs   dx,DWORD PTR ds:[esi]
  418147:	xchg   ebp,eax
  418148:	mov    ecx,edx
  41814a:	mov    cl,0x31
  41814d:	ds mov ch,0x2d
  418150:	test   eax,0x3ba390b8
  418155:	ss sti 
  418157:	adc    DWORD PTR [edi+0x21],edx
  41815a:	sbb    bh,dl
  41815c:	pop    esp
  41815d:	adc    BYTE PTR [ebx-0x38d38f72],cl
  418163:	cmp    dl,BYTE PTR [ebp-0x47]
  418166:	jl     0x4180ed
  418168:	cmc    
  418169:	push   es
  41816a:	mov    edi,0x947b1e18
  41816f:	out    0xb0,eax
  418171:	ins    BYTE PTR es:[edi],dx
  418172:	sub    al,0x9
  418174:	enter  0x1384,0x6a
  418178:	inc    edx
  418179:	xchg   edx,eax
  41817a:	mov    ecx,DWORD PTR [ebp+0x10818c4f]
  418180:	push   ebx
  418181:	add    al,0x95
  418183:	test   BYTE PTR [edx+0x71536a0],dl
  418189:	dec    edi
  41818a:	pushf  
  41818b:	int3   
  41818c:	mov    WORD PTR [eax],fs
  41818e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41818f:	(bad)  
  418191:	stc    
  418192:	pop    esp
  418193:	sub    BYTE PTR [ebp+0x2b],0x35
  418197:	cmp    al,0x4e
  418199:	repz inc DWORD PTR [ebx+0x530a989c]
  4181a0:	arpl   sp,di
  4181a2:	jp     0x4181fe
  4181a4:	sub    BYTE PTR [ebp+esi*2-0x17],al
  4181a8:	add    ebp,DWORD PTR [ebx]
  4181aa:	in     eax,0xc4
  4181ac:	jae    0x41818e
  4181ae:	arpl   WORD PTR [ebx-0x78c43735],bp
  4181b4:	jb     0x418165
  4181b6:	sar    BYTE PTR gs:[eax-0x7f],0xe5
  4181bb:	call   0xf4d1:0xbfe19e4d
  4181c2:	sbb    DWORD PTR [ebx+0x12],0x333dffd2
  4181c9:	mov    DWORD PTR ds:[edi],eax
  4181cc:	push   es
  4181cd:	xchg   edi,eax
  4181ce:	xchg   ebx,eax
  4181cf:	mov    es,eax
  4181d1:	ins    DWORD PTR es:[edi],dx
  4181d2:	dec    esp
  4181d3:	cmp    al,BYTE PTR [ebp+eiz*8-0x67c10a59]
  4181da:	push   edx
  4181db:	cmp    eax,0xb947ffa
  4181e0:	dec    ecx
  4181e1:	leave  
  4181e2:	push   esp
  4181e3:	mov    ds:0x80880386,al
  4181e8:	cli    
  4181e9:	mov    edi,0x73087800
  4181ee:	inc    ecx
  4181ef:	xchg   ebp,eax
  4181f0:	sub    al,0x8f
  4181f2:	push   ds
  4181f3:	sbb    al,0xde
  4181f5:	push   ss
  4181f6:	mov    ebx,0x152df2bd
  4181fb:	cmp    BYTE PTR [edx+0x0],bl
  4181fe:	dec    edi
  4181ff:	fwait
  418200:	test   DWORD PTR [ebp+0x32],esp
  418203:	in     eax,0x3b
  418205:	jp     0x4181e6
  418207:	mov    ch,0x89
  418209:	adc    BYTE PTR ds:0x4ad70885,bh
  41820f:	pop    esp
  418210:	loope  0x4181bd
  418212:	in     eax,dx
  418213:	imul   ebx,DWORD PTR [esi+0xdda0bf5],0x274a9f1f
  41821d:	mov    ds:0xf63a35cd,eax
  418222:	and    bl,BYTE PTR [eax-0x3f]
  418225:	cli    
  418226:	mov    esi,edx
  418228:	lahf   
  418229:	outs   dx,DWORD PTR ds:[esi]
  41822a:	scas   eax,DWORD PTR es:[edi]
  41822b:	jae    0x418212
  41822d:	mov    BYTE PTR [eax-0x5f],bl
  418230:	jecxz  0x41828c
  418232:	div    BYTE PTR [edi+0x21]
  418235:	push   cs
  418236:	fld    DWORD PTR [esi-0x76a539db]
  41823c:	loope  0x4182aa
  41823e:	adc    eax,0x6e3f96f7
  418243:	jecxz  0x418266
  418245:	jp     0x418292
  418247:	jge    0x4182ab
  418249:	lods   al,BYTE PTR ds:[esi]
  41824a:	push   edi
  41824b:	pusha  
  41824c:	rcr    ch,1
  41824e:	jge    0x41820a
  418250:	or     eax,0x1166ec0a
  418255:	or     ch,ah
  418257:	fmul   DWORD PTR [edx+0x167fca2c]
  41825d:	push   cs
  41825e:	(bad)  
  41825f:	sti    
  418260:	fnstenv [eax]
  418262:	mov    edi,0xdfe4b8a7
  418267:	dec    edx
  418268:	mov    cl,BYTE PTR [eax+0x20044a42]
  41826e:	add    edi,edi
  418270:	aad    0x78
  418272:	adc    BYTE PTR [esi+0x6d],ah
  418275:	test   eax,0x7b89ffec
  41827b:	arpl   sp,dx
  41827d:	shl    BYTE PTR [edi-0x5678c547],1
  418283:	adc    eax,0x81faa43a
  418288:	jmp    0x474290ad
  41828d:	fsubr  QWORD PTR [esi]
  41828f:	jmp    0x418301
  418291:	(bad)
  418295:	dec    esi
  418296:	pop    ebx
  418297:	mov    dh,0xce
  418299:	mov    ecx,0x52452e03
  41829e:	add    esi,ebx
  4182a0:	inc    ecx
  4182a1:	inc    edi
  4182a2:	cmp    DWORD PTR [ebx-0x6e],esi
  4182a5:	push   eax
  4182a6:	add    ah,BYTE PTR [ebx*4+0x382ef484]
  4182ad:	and    esi,DWORD PTR [esi+0x44]
  4182b0:	xchg   edx,eax
  4182b1:	mov    ecx,0x9ed97639
  4182b6:	mov    ebp,0x64f590ff
  4182bb:	cmp    eax,0x62552b10
  4182c0:	nop
  4182c1:	xchg   esi,eax
  4182c2:	dec    esp
  4182c3:	shr    BYTE PTR [ecx+eiz*4+0x31],cl
  4182c7:	test   BYTE PTR [edi-0x251931b4],dl
  4182cd:	jecxz  0x41830f
  4182cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d0:	scas   al,BYTE PTR es:[edi]
  4182d1:	jne    0x6b6e9f9f
  4182d7:	mov    BYTE PTR [ebx+0x24089353],bh
  4182dd:	cwde   
  4182de:	lea    esp,[ecx+0x6b]
  4182e1:	lds    edx,FWORD PTR [esi]
  4182e3:	adc    BYTE PTR [edi-0x7e3bec98],ah
  4182e9:	sub    eax,0x3753795d
  4182ee:	cmp    bh,ah
  4182f0:	sbb    DWORD PTR [edi+0x44],edi
  4182f3:	pop    ebx
  4182f4:	mov    dl,0xa5
  4182f6:	std    
  4182f7:	sub    ebp,eax
  4182f9:	adc    eax,0x4bc89a78
  4182fe:	call   0x69e16522
  418303:	add    BYTE PTR [eax+0x2b62e078],cl
  418309:	or     ebp,edi
  41830b:	arpl   bx,di
  41830d:	xchg   ebp,eax
  41830e:	pop    edi
  41830f:	push   eax
  418310:	sbb    esp,esp
  418312:	jno    0x4182e3
  418314:	scas   eax,DWORD PTR es:[edi]
  418315:	and    eax,0x929fd9a8
  41831a:	stos   BYTE PTR es:[edi],al
  41831b:	cmp    cl,bh
  41831d:	push   cs
  41831e:	arpl   cx,bx
  418320:	and    BYTE PTR [ecx+0x78],bl
  418323:	sub    al,0xff
  418325:	std    
  418326:	adc    al,0x0
  418328:	cdq    
  418329:	push   0x7b0a8f68
  41832e:	sub    eax,0x5cb9ed39
  418333:	rol    BYTE PTR [esi+0x3a],1
  418336:	push   0x50
  418338:	mov    al,ds:0x81e754c0
  41833d:	jae    0x418376
  41833f:	mov    bh,0x46
  418341:	das    
  418342:	inc    ecx
  418343:	jae    0x41833a
  418345:	in     eax,dx
  418346:	fcom   QWORD PTR [edi-0x56]
  418349:	push   esi
  41834a:	(bad)  
  41834b:	dec    ecx
  41834c:	jecxz  0x4182e3
  41834e:	aas    
  41834f:	jo     0x41833c
  418351:	mov    gs,WORD PTR [edi]
  418353:	mov    ds:0x23f7899d,al
  418358:	out    0x6b,al
  41835a:	cmp    BYTE PTR [esi+0x68],dl
  41835d:	pop    ds
  41835e:	pop    ebp
  41835f:	pushf  
  418360:	lods   al,BYTE PTR ds:[esi]
  418361:	xchg   ebx,eax
  418362:	dec    edx
  418363:	inc    ebp
  418364:	cli    
  418365:	sbb    al,0xbf
  418367:	jl     0x418317
  418369:	mov    al,ds:0xa9cb79f3
  41836e:	ret    
  41836f:	(bad)  
  418370:	jecxz  0x418339
  418372:	xlat   BYTE PTR ds:[ebx]
  418373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418374:	inc    eax
  418375:	aad    0xee
  418377:	sti    
  418378:	mov    dl,0x7a
  41837a:	fistp  QWORD PTR [edi+0x2dc2528c]
  418380:	push   eax
  418381:	jbe    0x418361
  418383:	inc    ebp
  418385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418386:	jns    0x41832a
  418388:	repz (bad) 
  41838a:	addr16 loop 0x41837a
  41838d:	pop    es
  41838e:	mov    ds:0x861c3e67,al
  418393:	mov    cl,0x8
  418395:	repz retf 0x3ff0
  418399:	lds    ebp,FWORD PTR [edx-0x7a]
  41839c:	ss push cs
  41839e:	repnz neg DWORD PTR [ebx+0x7d846a3b]
  4183a5:	adc    al,0xed
  4183a7:	and    edi,ebp
  4183a9:	cmp    al,0xad
  4183ab:	scas   al,BYTE PTR es:[edi]
  4183ac:	add    al,0xaf
  4183ae:	loopne 0x418341
  4183b0:	and    esi,DWORD PTR [eax+0x0]
  4183b3:	mov    dl,0x8e
  4183b5:	mov    ebx,0xb122ee80
  4183ba:	lea    ebp,[ebp+0x3ed9a969]
  4183c0:	pushf  
  4183c1:	loopne 0x41839d
  4183c3:	call   0x209e:0xdf818cf2
  4183ca:	mov    ch,BYTE PTR [esi]
  4183cc:	data16 add BYTE PTR [eax+ebp*4+0x423e824f],ah
  4183d4:	sbb    DWORD PTR [ebx+ebx*8],esi
  4183d7:	int3   
  4183d8:	sbb    ch,BYTE PTR [ebx-0x1d0f3747]
  4183de:	or     ebx,0x408560bc
  4183e4:	fistp  QWORD PTR [ecx-0x79f22f0b]
  4183ea:	ror    BYTE PTR [ebx+esi*1+0x39f82263],cl
  4183f1:	popf   
  4183f2:	arpl   WORD PTR [eax],bp
  4183f4:	iret   
  4183f5:	in     eax,dx
  4183f6:	pslld  mm1,QWORD PTR [esi+0x62cc4fd5]
  4183fd:	mov    dl,0x5e
  4183ff:	inc    esi
  418400:	clc    
  418401:	arpl   WORD PTR [edi-0x5f34ebf6],cx
  418407:	fxch   st(7)
  418409:	pop    ds
  41840a:	xchg   BYTE PTR [ecx+0x3024199a],dh
  418410:	scas   eax,DWORD PTR es:[edi]
  418411:	jg     0x4183c1
  418413:	shl    DWORD PTR [ebp+0x59],cl
  418416:	ret    0xd93a
  418419:	or     al,0x1
  41841b:	pop    esp
  41841c:	push   edi
  41841d:	sbb    eax,0x87a37787
  418422:	lods   al,BYTE PTR ds:[esi]
  418423:	and    eax,0x8a04a47f
  418428:	pop    esi
  418429:	int    0xda
  41842b:	push   eax
  41842c:	pop    ss
  41842d:	mul    BYTE PTR [esi]
  41842f:	sbb    DWORD PTR [ecx+0x2647943a],ecx
  418435:	mov    esi,0xdea300b5
  41843a:	sub    DWORD PTR [edi+0x2e94ce3d],edi
  418440:	not    DWORD PTR [ebx-0x5c]
  418443:	daa    
  418444:	sbb    DWORD PTR [ebx+edi*4+0x42],eax
  418448:	and    eax,0x9c67c975
  41844d:	repnz outs dx,BYTE PTR ds:[esi]
  41844f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418450:	inc    ebx
  418451:	pop    esi
  418452:	mov    ah,0x1e
  418454:	push   ebx
  418455:	lahf   
  418456:	int3   
  418457:	in     eax,0x1e
  418459:	popa   
  41845a:	popf   
  41845b:	out    dx,al
  41845c:	adc    eax,0xde4a6685
  418461:	leave  
  418462:	pop    ebp
  418463:	shl    DWORD PTR [edi],cl
  418465:	xor    DWORD PTR [ecx+0x6a],edx
  418468:	adc    al,0xf4
  41846a:	sub    al,0x70
  41846c:	icebp  
  41846d:	stc    
  41846e:	mov    ebx,0x65c5dd3b
  418473:	retf   0xf70a
  418476:	shl    DWORD PTR [esi],1
  418478:	jp     0x418485
  41847a:	add    DWORD PTR [esi-0x47f14953],edx
  418480:	icebp  
  418481:	mov    esi,0xc0aa6476
  418486:	lea    edi,[eax]
  418488:	cmp    ebp,DWORD PTR [edi*8+0x4c2c7df4]
  41848f:	jae    0x41848f
  418491:	pop    edi
  418492:	xor    eax,0xe037a365
  418497:	cs ds pop es
  41849a:	sbb    bl,BYTE PTR [eax]
  41849c:	push   ds
  41849d:	in     al,dx
  41849e:	sub    al,0xf0
  4184a0:	das    
  4184a1:	push   edx
  4184a2:	mov    edi,0xbd181205
  4184a7:	xchg   esp,eax
  4184a8:	inc    ecx
  4184a9:	add    eax,0x31506fa1
  4184ae:	int3   
  4184af:	jge    0x418529
  4184b1:	inc    edi
  4184b2:	pop    ecx
  4184b3:	adc    BYTE PTR [ebp+0x51fb782c],dl
  4184b9:	cdq    
  4184ba:	add    cl,BYTE PTR [ebp+0x3fd14201]
  4184c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c1:	xor    ebp,DWORD PTR [ebp+edx*1-0x3546e71]
  4184c8:	mov    edx,0x30fe8859
  4184cd:	je     0x418494
  4184cf:	pop    ds
  4184d0:	mul    eax
  4184d2:	js     0x4184f2
  4184d4:	jl     0x4184ba
  4184d6:	and    DWORD PTR [edi],ebx
  4184d8:	xchg   esp,eax
  4184d9:	and    al,0xf2
  4184db:	sbb    BYTE PTR [edi],dh
  4184dd:	repnz pop ecx
  4184df:	in     eax,dx
  4184e0:	xor    ch,dl
  4184e2:	mov    esi,0x485ae346
  4184e7:	dec    ebp
  4184e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e9:	inc    ebx
  4184ea:	xor    al,0xf6
  4184ec:	mov    BYTE PTR [edi],bl
  4184ee:	inc    edx
  4184ef:	leave  
  4184f0:	pop    eax
  4184f1:	mov    bl,0x9a
  4184f3:	stos   BYTE PTR es:[edi],al
  4184f4:	cmc    
  4184f5:	push   ecx
  4184f6:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4184f8:	clc    
  4184f9:	push   0xffffffd6
  4184fb:	pop    ebp
  4184fc:	mov    esi,edi
  4184fe:	sbb    BYTE PTR [edx+0x6aeb5484],bh
  418504:	pop    esi
  418505:	(bad)  
  418507:	and    ecx,ecx
  418509:	int3   
  41850a:	jecxz  0x418582
  41850c:	sahf   
  41850d:	into   
  41850e:	and    edi,DWORD PTR [edx+0x54eb1b8c]
  418514:	ret    
  418515:	add    BYTE PTR [ecx],dh
  418517:	in     eax,0x84
  418519:	scas   al,BYTE PTR es:[edi]
  41851a:	in     eax,0xd4
  41851c:	xor    ecx,esp
  41851e:	xchg   ebp,eax
  41851f:	lods   al,BYTE PTR ds:[esi]
  418520:	adc    bl,bh
  418522:	call   0xd2f2:0x32e7d564
  418529:	push   ds
  41852a:	xchg   esi,ebx
  41852c:	mov    ebx,0x98c1131f
  418531:	cmp    cl,BYTE PTR [edx+0x41f5c80a]
  418537:	mov    BYTE PTR [esi-0x68],cl
  41853a:	daa    
  41853b:	cmp    DWORD PTR ds:0x8991b2d1,0x28
  418542:	ins    BYTE PTR es:[edi],dx
  418543:	pusha  
  418544:	(bad)  
  418545:	pop    esp
  418546:	push   cs
  418547:	push   es
  418548:	push   esi
  418549:	dec    esp
  41854a:	sbb    al,0x75
  41854c:	jne    0x4184d4
  41854e:	dec    edi
  41854f:	ret    
  418550:	jne    0x4185aa
  418552:	lds    ebx,FWORD PTR [ecx-0x2797afaf]
  418558:	std    
  418559:	in     eax,dx
  41855a:	jmp    0x418580
  41855c:	and    al,0xa4
  41855e:	or     BYTE PTR [edi-0x1c049aba],bl
  418564:	cmp    al,0xf
  418566:	cdq    
  418567:	push   0x699e3075
  41856c:	stos   BYTE PTR es:[edi],al
  41856d:	lahf   
  41856e:	ficom  WORD PTR [ecx]
  418570:	push   ds
  418571:	pop    ebp
  418572:	mov    eax,ds:0x4b1d8b7a
  418577:	mov    ebp,0xed5280e8
  41857c:	mov    ebx,0x9c2470f4
  418581:	out    dx,al
  418582:	push   ebp
  418583:	mov    BYTE PTR [ebx-0x3d],dh
  418586:	in     al,0x25
  418588:	fs jae 0x418519
  41858b:	adc    eax,0x433f4267
  418590:	ins    DWORD PTR es:[edi],dx
  418591:	cmovae ebx,DWORD PTR [ebp-0x20]
  418595:	mov    eax,ecx
  418597:	scas   eax,DWORD PTR es:[edi]
  418598:	mov    ch,0x46
  41859a:	sbb    al,0xc6
  41859c:	push   esp
  41859d:	out    0xe0,al
  41859f:	mov    edx,0x80372bee
  4185a4:	inc    eax
  4185a5:	dec    edi
  4185a6:	in     al,0xd3
  4185a8:	mov    esp,0x575c3065
  4185ad:	pop    edi
  4185ae:	outs   dx,DWORD PTR ds:[esi]
  4185af:	adc    eax,0x81f6b6b
  4185b4:	je     0x4185c9
  4185b6:	push   esi
  4185b7:	adc    eax,0x3646a88c
  4185bc:	sbb    esi,DWORD PTR [esp+eiz*4-0x52afe38b]
  4185c3:	push   esp
  4185c4:	test   BYTE PTR [ecx+0x1008a1af],ch
  4185ca:	mov    dl,0x8c
  4185cc:	push   0xfffffffa
  4185ce:	mov    dh,0xd2
  4185d0:	not    DWORD PTR [ecx+0x53170fab]
  4185d6:	mov    esi,0xb2c7620e
  4185db:	mov    dl,0x40
  4185dd:	jo     0x41863c
  4185df:	mov    edi,0xea778c15
  4185e4:	clc    
  4185e5:	cli    
  4185e6:	xor    al,0x88
  4185e8:	sti    
  4185e9:	add    ebx,DWORD PTR [esi-0x3f]
  4185ec:	pop    ss
  4185ed:	and    ebp,ebp
  4185ef:	int3   
  4185f0:	inc    BYTE PTR [eax-0x62]
  4185f3:	push   edx
  4185f4:	mov    bl,0x78
  4185f6:	lahf   
  4185f7:	cdq    
  4185f8:	imul   esp,DWORD PTR [ebx+0x8060825],0x5
  4185ff:	imul   esp,DWORD PTR [ecx+edi*2-0x4e],0xfc20da57
  418607:	adc    esp,eax
  418609:	dec    esi
  41860a:	ds inc esp
  41860c:	sahf   
  41860d:	or     DWORD PTR [ebx],edi
  41860f:	push   edx
  418610:	xor    al,0x63
  418612:	lock pop eax
  418614:	iret   
  418615:	ss jecxz 0x41863b
  418618:	in     al,dx
  418619:	jne    0x4185d5
  41861b:	ins    BYTE PTR es:[edi],dx
  41861c:	sub    DWORD PTR [edx],esp
  41861e:	cmp    al,0xde
  418620:	pop    ebx
  418621:	push   0xffffffc5
  418623:	daa    
  418624:	mov    bh,ah
  418626:	fisubr WORD PTR [ebx-0x402a9a6f]
  41862c:	ja     0x4185ca
  41862e:	test   BYTE PTR [ecx-0x70],bh
  418631:	ror    DWORD PTR [ebp-0x1a],1
  418634:	cmp    DWORD PTR [eax],esi
  418636:	jns    0x41867f
  418638:	popa   
  418639:	imul   ebx,DWORD PTR [edi+esi*8+0x7f],0x43
  41863e:	data16 or BYTE PTR [ebp+0x69],ch
  418642:	pop    esp
  418643:	push   0x1e
  418645:	add    ah,bh
  418647:	inc    edi
  418648:	push   esp
  418649:	sub    BYTE PTR [edi-0x3b],bl
  41864c:	push   ss
  41864d:	adc    DWORD PTR [edx-0x4],ebx
  418650:	mov    ch,0xd1
  418652:	sahf   
  418653:	fwait
  418654:	and    eax,0x2d7512
  418659:	popf   
  41865a:	mov    bl,0xbb
  41865c:	ins    DWORD PTR es:[edi],dx
  41865d:	mov    bh,0xa0
  418660:	cmp    DWORD PTR [esi],ecx
  418662:	mov    edi,0xb3e92aee
  418667:	stos   DWORD PTR es:[edi],eax
  418668:	in     eax,dx
  418669:	pop    ecx
  41866a:	push   cs
  41866b:	pusha  
  41866c:	sar    DWORD PTR [eax+0x31492e41],cl
  418672:	mov    dl,0xbc
  418674:	add    sp,di
  418677:	jmp    0x418676
  418679:	mov    edi,0x557ca56a
  41867e:	clc    
  41867f:	outs   dx,BYTE PTR ds:[esi]
  418680:	jnp    0x41867e
  418682:	ret    
  418683:	aam    0x69
  418685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418686:	cmp    BYTE PTR [esi],ch
  418688:	inc    edi
  418689:	add    al,ah
  41868b:	pop    es
  41868c:	int    0xcc
  41868e:	dec    ecx
  41868f:	dec    edi
  418690:	iret   
  418691:	lock ja 0x41865a
  418694:	xor    eax,0xc8e781f3
  418699:	mov    ebp,0x10a25054
  41869e:	pop    ds
  41869f:	jb     0x4186c4
  4186a1:	ret    
  4186a2:	add    al,BYTE PTR [ebx+0x58]
  4186a5:	test   al,0xd8
  4186a7:	scas   eax,DWORD PTR es:[edi]
  4186a8:	and    DWORD PTR [esi+0x2f],eax
  4186ab:	out    dx,eax
  4186ac:	dec    ebx
  4186ad:	ss repz scas al,BYTE PTR es:[edi]
  4186b0:	int3   
  4186b1:	and    al,BYTE PTR [ebp-0x288fb001]
  4186b7:	xor    edx,esp
  4186b9:	fs fcmovnb st,st(0)
  4186bc:	in     eax,0x90
  4186be:	clc    
  4186bf:	sub    esi,0x44
  4186c2:	mov    esi,0x8704dd68
  4186c7:	jbe    0x41873b
  4186c9:	je     0x4186e6
  4186cb:	(bad)  
  4186cc:	arpl   WORD PTR [esi-0x59],cx
  4186cf:	mov    al,0x7a
  4186d1:	jns    0x4186d8
  4186d3:	icebp  
  4186d4:	test   DWORD PTR [ebp-0x6437d337],ecx
  4186da:	push   ss
  4186db:	mov    dh,ah
  4186dd:	test   al,0xfc
  4186df:	push   ds
  4186e0:	add    al,0x5b
  4186e2:	push   0x55
  4186e4:	pusha  
  4186e5:	fnstenv [edx-0xf]
  4186e8:	lock (bad) 
  4186ea:	in     eax,dx
  4186eb:	mov    bh,0x4
  4186ed:	xor    edx,DWORD PTR [edi-0x1c]
  4186f0:	movsx  eax,WORD PTR [edi]
  4186f3:	add    DWORD PTR [ebp+0x465da7c3],eax
  4186f9:	adc    BYTE PTR [ecx+0x7914e807],ah
  4186ff:	adc    esi,DWORD PTR fs:[esi]
  418702:	fist   DWORD PTR [eax-0x61]
  418705:	lahf   
  418706:	mov    ds,WORD PTR [ecx]
  418708:	jo     0x41873d
  41870a:	xor    BYTE PTR [ebx-0x60],dh
  41870d:	stos   BYTE PTR es:[edi],al
  41870e:	mov    bh,0x6d
  418710:	ins    BYTE PTR es:[edi],dx
  418711:	push   es
  418712:	pop    esp
  418713:	stos   BYTE PTR es:[edi],al
  418714:	into   
  418715:	(bad)  
  418716:	push   0x7658b863
  41871b:	pop    edx
  41871c:	or     edi,DWORD PTR [edi+0x30]
  41871f:	retf   
  418720:	leave  
  418721:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418723:	(bad)  
  418724:	cwde   
  418725:	push   edi
  418726:	ror    DWORD PTR [eax+ebx*8-0x30],0x4b
  41872b:	and    cl,al
  41872d:	aas    
  41872e:	add    ch,BYTE PTR [eax+0x7bd2f06b]
  418734:	push   edx
  418735:	test   al,0x39
  418737:	push   ss
  418738:	mov    bl,0xfe
  41873a:	and    al,0xe9
  41873c:	add    edx,DWORD PTR [edx+0x1ceadbb3]
  418742:	jmp    0x6208:0xdebc9176
  418749:	jg     0x41874f
  41874b:	cld    
  41874c:	jmp    0x4187a4
  41874e:	jb     0x4186d9
  418750:	inc    edi
  418751:	jbe    0x4187b9
  418753:	pop    edx
  418754:	dec    ebx
  418755:	test   eax,0xc024ae05
  41875a:	add    BYTE PTR [ebp-0x6adbf999],dh
  418760:	push   ebp
  418761:	cmp    DWORD PTR [esi+0x6bff5e6e],0x58
  418768:	dec    ecx
  418769:	adc    bl,ah
  41876b:	xchg   BYTE PTR ds:0xb4abb452,dh
  418771:	adc    esi,DWORD PTR ds:0xd60d731c
  418777:	mov    bh,0x1f
  418779:	outs   dx,DWORD PTR ds:[esi]
  41877a:	out    0x27,eax
  41877c:	hlt    
  41877d:	sbb    al,0x5f
  41877f:	rol    DWORD PTR [ecx+0x4cceb6ef],0xbe
  418786:	jle    0x4187ee
  418788:	inc    eax
  418789:	inc    DWORD PTR [ebx+0x5e]
  41878c:	sbb    esi,DWORD PTR [edi+ebx*2+0x54d81453]
  418793:	pop    ebp
  418794:	sahf   
  418795:	call   0x39cf0435
  41879a:	loopne 0x4187d0
  41879c:	xchg   edi,eax
  41879d:	push   esp
  41879e:	pop    esp
  41879f:	fs and al,0xb7
  4187a2:	sbb    BYTE PTR [edi],dl
  4187a4:	dec    eax
  4187a5:	mov    edi,0xda5c6064
  4187aa:	or     ecx,DWORD PTR [ebx+ebx*2]
  4187ad:	and    al,ah
  4187af:	xchg   ebp,eax
  4187b0:	push   ds
  4187b1:	mov    ds:0xdfdc5f,eax
  4187b6:	jle    0x41880f
  4187b8:	or     eax,0x60052df1
  4187bd:	jno    0x4187e4
  4187bf:	es and al,0xc8
  4187c2:	sbb    ch,ch
  4187c4:	int3   
  4187c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187c6:	imul   ebx,DWORD PTR [edi],0xb4afe066
  4187cc:	dec    edi
  4187cd:	ds push esi
  4187cf:	loop   0x41879a
  4187d1:	mul    DWORD PTR [ebp-0x16]
  4187d4:	stos   BYTE PTR es:[edi],al
  4187d5:	inc    edx
  4187d6:	mov    edi,0x281a5fb6
  4187db:	xor    DWORD PTR [ecx+0x1cd20b98],ecx
  4187e1:	mov    bl,0xc8
  4187e3:	xor    ecx,DWORD PTR [esi-0x27]
  4187e6:	cmp    eax,0xfb22d832
  4187eb:	(bad)  
  4187ec:	add    cl,ah
  4187ee:	jmp    FWORD PTR [eax-0x3d]
  4187f1:	scas   eax,DWORD PTR es:[edi]
  4187f2:	xchg   DWORD PTR [ecx],ecx
  4187f4:	jnp    0x41886b
  4187f6:	repnz or al,0x50
  4187f9:	push   ecx
  4187fa:	mov    dh,0xc4
  4187fc:	stc    
  4187fd:	jp     0x418795
  4187ff:	retf   0x2ff7
  418802:	das    
  418803:	bound  ebx,QWORD PTR [ebx+0x1fe0e529]
  418809:	jae    0x4187a2
  41880b:	jne    0x4187f4
  41880d:	push   0x9e998c36
  418812:	push   esp
  418813:	ins    DWORD PTR es:[edi],dx
  418814:	pop    edx
  418815:	ret    
  418816:	mov    eax,0xff4824e9
  41881b:	lods   eax,DWORD PTR ds:[esi]
  41881c:	test   al,0x89
  41881e:	inc    ebx
  41881f:	sub    al,0xf
  418821:	test   DWORD PTR [edi],edx
  418823:	fdiv   st(7),st
  418825:	inc    DWORD PTR [ecx+0x42b0001d]
  41882b:	add    BYTE PTR [edx],ah
  41882d:	xor    eax,DWORD PTR [eax]
  41882f:	add    BYTE PTR [ebx+0x558be84d],cl
  418835:	adc    BYTE PTR [ebx],dl
  418837:	cmp    eax,0x42a014
  41883c:	xor    ecx,eax
  41883e:	add    ecx,esi
  418840:	mov    DWORD PTR [edx],ecx
  418842:	and    DWORD PTR ds:0x42d008,0x0
  41884c:	jmp    0x41885e
  418851:	mov    ecx,DWORD PTR ds:0x42d008
  418857:	inc    ecx
  418858:	mov    DWORD PTR ds:0x42d008,ecx
  41885e:	cmp    DWORD PTR ds:0x42d008,0x1f
  418865:	jae    0x418890
  41886b:	cmp    DWORD PTR ds:0x42d008,0x2c
  418872:	ja     0x418890
  418878:	jmp    0x41888b
  41887d:	push   DWORD PTR [ebp-0x20]
  418880:	push   0x8204
  418885:	call   DWORD PTR ds:0x430037
  41888b:	jmp    0x418851
  418890:	mov    ecx,DWORD PTR [ebp-0x18]
  418893:	xor    edi,edi
  418895:	xor    edi,DWORD PTR ds:0x42a010
  41889b:	or     edi,DWORD PTR ds:0x42a008
  4188a1:	mov    DWORD PTR ds:0x42a010,edi
  4188a7:	xor    ecx,eax
  4188a9:	sub    DWORD PTR ds:0x42a008,edx
  4188af:	add    ecx,esi
  4188b1:	mov    DWORD PTR ds:0x42b010,0x12
  4188bb:	cmp    DWORD PTR ds:0x42b010,0x0
  4188c2:	je     0x41891a
  4188c8:	cmp    DWORD PTR ds:0x42b010,0x7
  4188cf:	jl     0x41891a
  4188d5:	jmp    0x4188ec
  4188da:	push   0x42f000
  4188df:	push   0x1
  4188e1:	push   0x49bf
  4188e6:	call   DWORD PTR ds:0x43003b
  4188ec:	cmp    DWORD PTR ds:0x42b010,0x8
  4188f3:	jne    0x418906
  4188f9:	mov    edi,DWORD PTR ds:0x42b010
  4188ff:	dec    edi
  418900:	mov    DWORD PTR ds:0x42b010,edi
  418906:	xor    edi,edi
  418908:	or     edi,DWORD PTR ds:0x42b010
  41890e:	dec    edi
  41890f:	mov    DWORD PTR ds:0x42b010,edi
  418915:	jmp    0x4188bb
  41891a:	mov    DWORD PTR [ebp-0xc],ecx
  41891d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  418924:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41892b:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  418932:	xor    edi,edi
  418934:	or     edi,DWORD PTR ds:0x42a008
  41893a:	adc    DWORD PTR ds:0x429018,edi
  418940:	mov    ecx,DWORD PTR [ebp-0x14]
  418943:	mov    DWORD PTR [ebp+0x8],ecx
  418946:	add    ecx,edi
  418948:	mov    ecx,DWORD PTR [ebp+0x8]
  41894b:	xor    ecx,eax
  41894d:	adc    DWORD PTR ds:0x429024,edi
  418953:	add    ecx,esi
  418955:	not    ecx
  418957:	mov    ecx,0x242ebcc
  41895c:	mov    DWORD PTR ds:0x42b00c,0x46db
  418966:	mov    edi,0xf641bc3
  41896b:	je     0x41d78a
  418971:	mov    DWORD PTR ds:0x42a00c,0x5fae
  41897b:	mov    edx,DWORD PTR [ebp+0x8]
  41897e:	and    DWORD PTR ds:0x429020,0x0
  418988:	mov    ebx,DWORD PTR ds:0x429020
  41898e:	inc    ebx
  41898f:	mov    DWORD PTR ds:0x429020,ebx
  418995:	cmp    DWORD PTR ds:0x429020,0x18
  41899c:	ja     0x4189bf
  4189a2:	jmp    0x4189b2
  4189a7:	push   0x720f
  4189ac:	call   DWORD PTR ds:0x43003f
  4189b2:	cmp    DWORD PTR ds:0x429020,0x14
  4189b9:	jb     0x418988
  4189bf:	mov    ebx,DWORD PTR [ebp-0x8]
  4189c2:	xor    edx,eax
  4189c4:	xor    ebx,eax
  4189c6:	and    DWORD PTR ds:0x429020,0x42b014
  4189d0:	sub    edx,ebx
  4189d2:	sub    edx,esi
  4189d4:	xor    edx,eax
  4189d6:	sbb    DWORD PTR ds:0x42c018,edi
  4189dc:	mov    DWORD PTR [ebp+0x8],edx
  4189df:	xor    edx,0x13c8
  4189e5:	mov    edx,DWORD PTR [ebp+0x8]
  4189e8:	and    DWORD PTR ds:0x42a008,0x0
  4189f2:	mov    ebx,DWORD PTR ds:0x42a008
  4189f8:	inc    ebx
  4189f9:	mov    DWORD PTR ds:0x42a008,ebx
  4189ff:	cmp    DWORD PTR ds:0x42a008,0x9
  418a06:	jg     0x418a5e
  418a0c:	jmp    0x418a37
  418a11:	push   DWORD PTR [ebp-0xc]
  418a14:	push   DWORD PTR [ebp-0x18]
  418a17:	push   0x8dc5
  418a1c:	push   0x3b62
  418a21:	push   DWORD PTR [ebp-0x24]
  418a24:	push   DWORD PTR [ebp-0x24]
  418a27:	push   0x13d0
  418a2c:	push   0x42f00c
  418a31:	call   DWORD PTR ds:0x430047
  418a37:	cmp    DWORD PTR ds:0x42a008,0x8
  418a3e:	jne    0x418a51
  418a44:	mov    ebx,DWORD PTR ds:0x42a008
  418a4a:	inc    ebx
  418a4b:	mov    DWORD PTR ds:0x42a008,ebx
  418a51:	cmp    DWORD PTR ds:0x42a008,0x12
  418a58:	jb     0x4189f2
  418a5e:	mov    ebx,DWORD PTR [ebp-0x58]
  418a61:	sbb    DWORD PTR ds:0x42c008,0x503f
  418a6b:	add    edx,0x5708f1
  418a71:	sub    DWORD PTR ds:0x42c01c,0x42d00c
  418a7b:	imul   edx,ebx
  418a7e:	and    ebx,DWORD PTR ds:0x42a004
  418a84:	mov    DWORD PTR [ebp-0x58],edx
  418a87:	mov    edx,DWORD PTR [ebp+0x8]
  418a8a:	and    DWORD PTR ds:0x42b004,0x0
  418a94:	jmp    0x418aa6
  418a99:	mov    ebx,DWORD PTR ds:0x42b004
  418a9f:	inc    ebx
  418aa0:	mov    DWORD PTR ds:0x42b004,ebx
  418aa6:	cmp    DWORD PTR ds:0x42b004,0x1a
  418aad:	jae    0x418add
  418ab3:	cmp    DWORD PTR ds:0x42b004,0x1b
  418aba:	ja     0x418add
  418ac0:	jmp    0x418ad8
  418ac5:	push   0x87d9
  418aca:	push   DWORD PTR [ebp-0x10]
  418acd:	push   0x6435
  418ad2:	call   DWORD PTR ds:0x43004b
  418ad8:	jmp    0x418a99
  418add:	mov    ebx,DWORD PTR [ebp-0x54]
  418ae0:	sub    DWORD PTR ds:0x42c01c,0x42d010
  418aea:	add    edx,0x64f893
  418af0:	or     edx,ebx
  418af2:	and    ebx,DWORD PTR ds:0x429000
  418af8:	mov    DWORD PTR [ebp-0x54],edx
  418afb:	mov    edx,DWORD PTR [ebp+0x8]
  418afe:	xor    DWORD PTR ds:0x42a00c,ebx
  418b04:	mov    ebx,DWORD PTR [ebp-0x50]
  418b07:	add    DWORD PTR ds:0x42a00c,0x583e
  418b11:	add    edx,ecx
  418b13:	xor    DWORD PTR ds:0x42a000,0x5790
  418b1d:	xor    edx,ebx
  418b1f:	mov    DWORD PTR [ebp-0x50],edx
  418b22:	xor    ebx,0x79bd
  418b28:	mov    edx,DWORD PTR [ebp+0x8]
  418b2b:	adc    ebx,DWORD PTR ds:0x42d014
  418b31:	mov    ebx,DWORD PTR [ebp-0x4c]
  418b34:	adc    DWORD PTR ds:0x42d010,0xcea
  418b3e:	add    edx,edi
  418b40:	and    edx,ebx
  418b42:	mov    DWORD PTR [ebp-0x4c],edx
  418b45:	xor    edx,0x6e49
  418b4b:	mov    edx,DWORD PTR [ebp+0x8]
  418b4e:	mov    ebx,DWORD PTR [ebp-0x48]
  418b51:	xor    DWORD PTR ds:0x429008,0x656f
  418b5b:	lea    edx,[ebx+edx*1+0x241fcde]
  418b62:	mov    DWORD PTR [ebp-0x48],edx
  418b65:	and    ebx,edx
  418b67:	mov    edx,DWORD PTR [ebp+0x8]
  418b6a:	adc    DWORD PTR ds:0x42b000,edx
  418b70:	mov    ebx,0xfa5e1521
  418b75:	sub    ebx,edx
  418b77:	sub    edx,DWORD PTR ds:0x42901c
  418b7d:	add    ebx,DWORD PTR [ebp-0x44]
  418b80:	inc    DWORD PTR ds:0x42d014
  418b86:	mov    DWORD PTR [ebp-0x44],ebx
  418b89:	mov    edx,DWORD PTR [ebp+0x8]
  418b8c:	xor    edx,eax
  418b8e:	xor    DWORD PTR ds:0x429000,0x14c2
  418b98:	add    edx,esi
  418b9a:	jne    0x418971
  418ba0:	jmp    0x41d78a
  418ba5:	and    DWORD PTR ds:0x42d00c,0x0
  418baf:	xor    ebx,ebx
  418bb1:	xor    ebx,DWORD PTR ds:0x42d00c
  418bb7:	inc    ebx
  418bb8:	mov    DWORD PTR ds:0x42d00c,ebx
  418bbe:	cmp    DWORD PTR ds:0x42d00c,0x28
  418bc5:	jbe    0x418bed
  418bcb:	jmp    0x418be0
  418bd0:	push   0x42a004
  418bd5:	push   0x42f169
  418bda:	call   DWORD PTR ds:0x43000b
  418be0:	cmp    DWORD PTR ds:0x42d00c,0x18
  418be7:	jb     0x418baf
  418bed:	mov    edx,DWORD PTR [ebp-0xc]
  418bf0:	mov    ebx,DWORD PTR ds:0x429014
  418bf6:	sub    ebx,DWORD PTR ds:0x429018
  418bfc:	mov    DWORD PTR ds:0x429014,ebx
  418c02:	sub    edx,esi
  418c04:	and    DWORD PTR ds:0x42c000,0x0
  418c0e:	jmp    0x418c22
  418c13:	xor    ebx,ebx
  418c15:	add    ebx,DWORD PTR ds:0x42c000
  418c1b:	inc    ebx
  418c1c:	mov    DWORD PTR ds:0x42c000,ebx
  418c22:	cmp    DWORD PTR ds:0x42c000,0x15
  418c29:	jae    0x418c70
  418c2f:	cmp    DWORD PTR ds:0x42c000,0xc
  418c36:	jg     0x418c70
  418c3c:	jmp    0x418c51
  418c41:	push   0x42a00c
  418c46:	push   0x35fa
  418c4b:	call   DWORD PTR ds:0x43000f
  418c51:	cmp    DWORD PTR ds:0x42c000,0xb
  418c58:	jne    0x418c6b
  418c5e:	mov    ebx,DWORD PTR ds:0x42c000
  418c64:	inc    ebx
  418c65:	mov    DWORD PTR ds:0x42c000,ebx
  418c6b:	jmp    0x418c13
  418c70:	xor    edx,eax
  418c72:	dec    DWORD PTR ds:0x429028
  418c78:	mov    DWORD PTR [ebp-0x5c],edx
  418c7b:	sub    ebx,DWORD PTR ds:0x42d014
  418c81:	mov    edx,DWORD PTR [ebp-0x10]
  418c84:	or     ebx,DWORD PTR ds:0x42d004
  418c8a:	mov    ebx,DWORD PTR [ebp-0x8]
  418c8d:	xor    edx,eax
  418c8f:	xor    ebx,eax
  418c91:	sub    edx,ebx
  418c93:	xor    DWORD PTR ds:0x429008,0x42b01c
  418c9d:	sub    edx,esi
  418c9f:	and    DWORD PTR ds:0x42a010,0x70aa
  418ca9:	xor    edx,eax
  418cab:	mov    DWORD PTR ds:0x42b01c,0x72e9
  418cb5:	mov    DWORD PTR [ebp-0x10],edx
  418cb8:	mov    edx,DWORD PTR [ebp-0x14]
  418cbb:	mov    DWORD PTR [ebp+0x8],edx
  418cbe:	mov    DWORD PTR ds:0x42d00c,0x2349
  418cc8:	jmp    0x418ea8
  418ccd:	mov    edx,DWORD PTR [ebp+0x8]
  418cd0:	and    DWORD PTR ds:0x42b014,0x0
  418cda:	mov    ebx,DWORD PTR ds:0x42b014
  418ce0:	inc    ebx
  418ce1:	mov    DWORD PTR ds:0x42b014,ebx
  418ce7:	cmp    DWORD PTR ds:0x42b014,0x6
  418cee:	jle    0x418d26
  418cf4:	jmp    0x418cff
  418cf9:	call   DWORD PTR ds:0x430013
  418cff:	cmp    DWORD PTR ds:0x42b014,0x5
  418d06:	jne    0x418d19
  418d0c:	mov    ebx,DWORD PTR ds:0x42b014
  418d12:	inc    ebx
  418d13:	mov    DWORD PTR ds:0x42b014,ebx
  418d19:	cmp    DWORD PTR ds:0x42b014,0x10
  418d20:	jb     0x418cda
  418d26:	mov    ebx,DWORD PTR [ebp-0x8]
  418d29:	adc    DWORD PTR ds:0x429010,0x42d018
  418d33:	xor    edx,eax
  418d35:	and    DWORD PTR ds:0x42d00c,0x4b9
  418d3f:	xor    ebx,eax
  418d41:	and    DWORD PTR ds:0x429004,0x114f
  418d4b:	sub    edx,ebx
  418d4d:	sub    edx,esi
  418d4f:	and    DWORD PTR ds:0x42d008,0x0
  418d59:	jmp    0x418d6b
  418d5e:	mov    ebx,DWORD PTR ds:0x42d008
  418d64:	inc    ebx
  418d65:	mov    DWORD PTR ds:0x42d008,ebx
  418d6b:	cmp    DWORD PTR ds:0x42d008,0x1b
  418d72:	jae    0x418da0
  418d78:	cmp    DWORD PTR ds:0x42d008,0x22
  418d7f:	jg     0x418da0
  418d85:	jmp    0x418d9b
  418d8a:	push   0x42f107
  418d8f:	push   DWORD PTR [ebp-0x10]
  418d92:	push   DWORD PTR [ebp-0x24]
  418d95:	call   DWORD PTR ds:0x430017
  418d9b:	jmp    0x418d5e
  418da0:	xor    edx,eax
  418da2:	or     DWORD PTR ds:0x429008,ecx
  418da8:	mov    DWORD PTR [ebp+0x8],edx
  418dab:	mov    edx,DWORD PTR [ebp+0x8]
  418dae:	mov    ebx,DWORD PTR [ebp-0x58]
  418db1:	sub    DWORD PTR ds:0x429020,0x34c1
  418dbb:	add    edx,0x5708f1
  418dc1:	add    DWORD PTR ds:0x42a000,0x6667
  418dcb:	imul   edx,ebx
  418dce:	movzx  ebx,BYTE PTR ds:0x42b018
  418dd5:	or     DWORD PTR ds:0x42d004,ebx
  418ddb:	mov    DWORD PTR [ebp-0x58],edx
  418dde:	mov    edx,DWORD PTR [ebp+0x8]
  418de1:	sub    DWORD PTR ds:0x429018,0x429014
  418deb:	mov    ebx,DWORD PTR [ebp-0x54]
  418dee:	xor    DWORD PTR ds:0x42d018,0x42a00c
  418df8:	add    edx,0x64f893
  418dfe:	or     edx,ebx
  418e00:	adc    DWORD PTR ds:0x42901c,ecx
  418e06:	mov    DWORD PTR [ebp-0x54],edx
  418e09:	and    DWORD PTR ds:0x42d008,0x0
  418e13:	jmp    0x418e25
  418e18:	mov    ebx,DWORD PTR ds:0x42d008
  418e1e:	inc    ebx
  418e1f:	mov    DWORD PTR ds:0x42d008,ebx
  418e25:	cmp    DWORD PTR ds:0x42d008,0x13
  418e2c:	jae    0x418e6e
  418e32:	cmp    DWORD PTR ds:0x42d008,0x22
  418e39:	jb     0x418e6e
  418e3f:	jmp    0x418e69
  418e44:	push   0x30b6
  418e49:	push   0x7ba0
  418e4e:	push   0x429014
  418e53:	push   0x2a48
  418e58:	push   DWORD PTR [ebp-0x10]
  418e5b:	push   0x4d58
  418e60:	push   DWORD PTR [ebp-0xc]
  418e63:	call   DWORD PTR ds:0x43001b
  418e69:	jmp    0x418e18
  418e6e:	mov    edx,DWORD PTR [ebp+0x8]
  418e71:	mov    ebx,DWORD PTR [ebp-0x50]
  418e74:	add    edx,ecx
  418e76:	xor    edx,ebx
  418e78:	mov    DWORD PTR [ebp-0x50],edx
  418e7b:	mov    edx,DWORD PTR [ebp+0x8]
  418e7e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418e81:	add    edx,edi
  418e83:	and    edx,ebx
  418e85:	mov    DWORD PTR [ebp-0x4c],edx
  418e88:	mov    edx,DWORD PTR [ebp+0x8]
  418e8b:	mov    ebx,DWORD PTR [ebp-0x48]
  418e8e:	lea    edx,[ebx+edx*1+0x241fcde]
  418e95:	mov    DWORD PTR [ebp-0x48],edx
  418e98:	mov    edx,DWORD PTR [ebp+0x8]
  418e9b:	mov    ebx,0xfa5e1521
  418ea0:	sub    ebx,edx
  418ea2:	add    ebx,DWORD PTR [ebp-0x44]
  418ea5:	mov    DWORD PTR [ebp-0x44],ebx
  418ea8:	mov    edx,DWORD PTR [ebp+0x8]
  418eab:	xor    edx,eax
  418ead:	add    edx,esi
  418eaf:	jne    0x418ccd
  418eb5:	mov    edx,DWORD PTR [ebp-0xc]
  418eb8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ebf:	mov    bl,BYTE PTR [ebp-0x1]
  418ec2:	cmp    dl,bl
  418ec4:	je     0x41b305
  418eca:	mov    ecx,DWORD PTR [ebp-0x5c]
  418ecd:	mov    edx,DWORD PTR [ebp-0xc]
  418ed0:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ed7:	mov    ebx,DWORD PTR [ebp+0xc]
  418eda:	xor    ecx,eax
  418edc:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  418ee3:	jne    0x41d79c
  418ee9:	mov    ecx,DWORD PTR [ebp-0x5c]
  418eec:	mov    edx,DWORD PTR [ebp+0xc]
  418eef:	xor    ecx,eax
  418ef1:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  418ef9:	mov    edx,DWORD PTR [ebp-0x18]
  418efc:	xor    edx,eax
  418efe:	add    edx,esi
  418f00:	cmp    ecx,edx
  418f02:	mov    ecx,DWORD PTR [ebp-0x14]
  418f05:	mov    DWORD PTR [ebp+0x8],ecx
  418f08:	mov    ecx,DWORD PTR [ebp+0x8]
  418f0b:	je     0x421f6a
  418f11:	xor    ecx,eax
  418f13:	add    ecx,esi
  418f15:	mov    ecx,0x242ebcc
  418f1a:	je     0x41d6f0
  418f20:	mov    edx,DWORD PTR [ebp+0x8]
  418f23:	mov    ebx,DWORD PTR [ebp-0x8]
  418f26:	xor    edx,eax
  418f28:	xor    ebx,eax
  418f2a:	sub    edx,ebx
  418f2c:	sub    edx,esi
  418f2e:	xor    edx,eax
  418f30:	mov    DWORD PTR [ebp+0x8],edx
  418f33:	mov    edx,DWORD PTR [ebp+0x8]
  418f36:	mov    ebx,DWORD PTR [ebp-0x58]
  418f39:	add    edx,0x5708f1
  418f3f:	imul   edx,ebx
  418f42:	mov    DWORD PTR [ebp-0x58],edx
  418f45:	mov    edx,DWORD PTR [ebp+0x8]
  418f48:	mov    ebx,DWORD PTR [ebp-0x54]
  418f4b:	add    edx,0x64f893
  418f51:	or     edx,ebx
  418f53:	mov    DWORD PTR [ebp-0x54],edx
  418f56:	mov    edx,DWORD PTR [ebp+0x8]
  418f59:	mov    ebx,DWORD PTR [ebp-0x50]
  418f5c:	add    edx,ecx
  418f5e:	jmp    0x41b2c1
  418f63:	stos   BYTE PTR es:[edi],al
  418f64:	fsubr  QWORD PTR [ebx-0x14]
  418f67:	sti    
  418f68:	mov    ebx,0xc4df9c99
  418f6d:	add    DWORD PTR [ecx-0x44],esi
  418f70:	(bad)  
  418f71:	sti    
  418f72:	inc    edi
  418f73:	adc    DWORD PTR ds:0x5f307a7d,ebx
  418f79:	jp     0x418ff5
  418f7b:	pop    ebp
  418f7c:	xchg   esi,eax
  418f7d:	data16 fwait
  418f7f:	sbb    eax,0x6abb0e35
  418f84:	inc    ebp
  418f85:	push   eax
  418f86:	dec    ecx
  418f87:	mov    esp,0xf2cb8987
  418f8c:	test   al,0x29
  418f8e:	scas   eax,DWORD PTR es:[edi]
  418f8f:	inc    esp
  418f90:	mov    ds:0x239bf03c,al
  418f95:	std    
  418f96:	dec    ebp
  418f97:	inc    eax
  418f98:	jo     0x418f26
  418f9a:	mov    BYTE PTR [esi],al
  418f9c:	adc    eax,0xa9e0d5d9
  418fa1:	lea    ebx,[edx-0x65]
  418fa4:	mov    eax,ds:0xb32ca85f
  418fa9:	popf   
  418faa:	dec    esi
  418fab:	fisubr DWORD PTR [esi+0x26]
  418fae:	push   es
  418faf:	mov    ch,0x74
  418fb1:	jbe    0x418f6a
  418fb3:	in     al,dx
  418fb4:	cmp    al,0x19
  418fb6:	inc    ebx
  418fb7:	cmp    al,0x78
  418fb9:	sub    eax,0xcd08a315
  418fbe:	loop   0x418fe1
  418fc0:	xor    dl,BYTE PTR [ebp+0x4f8c7ef6]
  418fc6:	inc    esp
  418fc7:	or     eax,esi
  418fc9:	jle    0x41900a
  418fcb:	(bad)  
  418fcc:	aad    0xeb
  418fce:	frstor [edi+0x5f]
  418fd1:	cli    
  418fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd3:	push   es
  418fd4:	popa   
  418fd5:	pop    ds
  418fd6:	shr    BYTE PTR [ecx-0x46552cc7],1
  418fdc:	scas   eax,DWORD PTR es:[edi]
  418fdd:	sub    DWORD PTR ds:0x48ab9f38,0x45583d21
  418fe7:	jecxz  0x419017
  418fe9:	lahf   
  418fea:	bswap  cx
  418fed:	mov    dl,0x40
  418fef:	cmp    al,0xb4
  418ff1:	jo     0x418fff
  418ff3:	pop    ecx
  418ff4:	cmp    dh,0xc5
  418ff7:	push   ebp
  418ff8:	in     eax,dx
  418ff9:	sub    al,0x93
  418ffb:	push   esi
  418ffc:	mov    ch,0x88
  418ffe:	aad    0x44
  419000:	nop
  419001:	ret    
  419002:	pop    ecx
  419003:	cmp    DWORD PTR [ecx],eax
  419005:	add    eax,0xd7788db5
  41900a:	lahf   
  41900b:	sub    DWORD PTR [eax],esi
  41900d:	pop    es
  41900e:	sub    dh,BYTE PTR [edi]
  419010:	ss push eax
  419012:	imul   ebx,DWORD PTR ds:0x1087bc50,0xd8988443
  41901c:	(bad)  
  41901d:	mov    ds:0xa11ec132,eax
  419022:	cli    
  419023:	jmp    0x379d:0x85751961
  41902a:	ss mov edi,0x54c556b3
  419030:	inc    ecx
  419031:	fisttp WORD PTR [ebx+0x11]
  419034:	jecxz  0x419093
  419036:	icebp  
  419037:	push   ebp
  419038:	sub    BYTE PTR [eax+esi*2],0xab
  41903c:	aaa    
  41903d:	xchg   edx,eax
  41903e:	scas   al,BYTE PTR es:[edi]
  41903f:	(bad)  
  419040:	rol    DWORD PTR [esi],1
  419042:	fcomp  QWORD PTR [ebp+0x2c]
  419045:	mov    esi,0xd1b52d8b
  41904a:	imul   edi,DWORD PTR [ecx+0x25b8f81f],0xade3068e
  419054:	bound  edx,QWORD PTR [esi+0x5936a3aa]
  41905a:	jae    0x41906b
  41905c:	adc    ebp,ebx
  41905e:	xor    DWORD PTR [eax],edi
  419060:	xor    DWORD PTR [ebp-0x388dd9b0],edx
  419066:	aad    0x3
  419068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419069:	rcr    DWORD PTR [eax+ebp*2+0x2fec44d4],0x88
  419071:	mov    edi,0x633169d4
  419076:	add    ebx,DWORD PTR [ecx+0x13]
  419079:	sub    al,BYTE PTR [ebx-0x5d92eab5]
  41907f:	out    dx,al
  419080:	loopne 0x419064
  419082:	into   
  419083:	push   ebp
  419084:	rcl    DWORD PTR [esi-0x7f2502bc],cl
  41908a:	ins    BYTE PTR es:[edi],dx
  41908b:	inc    edx
  41908c:	dec    ecx
  41908d:	jnp    0x41908b
  41908f:	mov    ss,WORD PTR [esi-0x7d]
  419092:	sub    ah,0x5
  419095:	sub    DWORD PTR [esi-0x14703581],edx
  41909b:	test   esi,edx
  41909d:	or     al,0x6c
  4190a0:	add    al,0xa4
  4190a2:	inc    ebp
  4190a3:	mov    cs:0x9f66af98,al
  4190a9:	not    BYTE PTR [edi-0x5f]
  4190ac:	les    edi,FWORD PTR [ebx]
  4190ae:	in     eax,0xfa
  4190b0:	aas    
  4190b1:	retf   
  4190b2:	sbb    al,BYTE PTR [edi+0x1f]
  4190b5:	inc    esi
  4190b6:	iret   
  4190b7:	leave  
  4190b8:	int    0x46
  4190ba:	push   0x69b4e541
  4190bf:	jo     0x419134
  4190c1:	dec    esp
  4190c2:	bound  ebp,QWORD PTR [ecx+0x46]
  4190c5:	jb     0x419142
  4190c7:	fst    st(0)
  4190c9:	ret    0x6cc5
  4190cc:	enter  0x7d73,0x66
  4190d0:	je     0x419054
  4190d2:	in     eax,0xd6
  4190d4:	sahf   
  4190d5:	aam    0x18
  4190d7:	xchg   DWORD PTR [edi+0x688717f8],edx
  4190dd:	cli    
  4190de:	fld    TBYTE PTR [edi]
  4190e0:	push   cs
  4190e1:	xchg   edi,eax
  4190e2:	mov    edi,0x896da73a
  4190e7:	outs   dx,DWORD PTR ds:[esi]
  4190e8:	les    ecx,FWORD PTR [ebp+edx*1-0x33]
  4190ec:	and    esi,DWORD PTR [esi]
  4190ee:	mov    bh,0x70
  4190f0:	fldenv [eax]
  4190f2:	(bad)  
  4190f4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4190f6:	(bad)  
  4190f7:	dec    esp
  4190f8:	cmp    eax,0xd5f32e9
  4190fd:	xor    al,BYTE PTR [ebp+0x1d]
  419100:	xchg   esi,eax
  419101:	mov    ch,0x8e
  419103:	xchg   esi,eax
  419104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419105:	pop    esi
  419106:	fstp   TBYTE PTR ds:0x1e33d80c
  41910c:	sbb    al,0x2c
  41910e:	push   ds
  41910f:	mov    WORD PTR [esi-0x73],?
  419112:	shl    DWORD PTR [edx+0x5d1543e6],1
  419118:	jbe    0x4190b7
  41911a:	or     cl,BYTE PTR [eax+0x2b]
  41911d:	or     al,0x3e
  41911f:	ficomp WORD PTR [eax-0x24]
  419122:	(bad)  
  419123:	stc    
  419124:	xchg   esp,eax
  419125:	jp     0x41918c
  419127:	add    al,0x26
  419129:	cwde   
  41912a:	add    al,ah
  41912c:	and    al,0x88
  41912e:	add    al,0x84
  419130:	xor    al,0xae
  419132:	jecxz  0x419150
  419134:	and    DWORD PTR [ebx+edi*2],0x595a4884
  41913b:	push   ds
  41913c:	inc    esi
  41913d:	fdiv   QWORD PTR [ebp+0x51]
  419140:	stos   DWORD PTR es:[edi],eax
  419141:	add    ah,bl
  419143:	jbe    0x419172
  419145:	push   0xffffffd0
  419147:	sbb    eax,0x5e69933f
  41914c:	push   edx
  41914d:	popf   
  41914e:	mov    al,0x28
  419150:	push   ss
  419151:	inc    edi
  419152:	jbe    0x4190e5
  419154:	lahf   
  419155:	mov    edi,0x6e898ad7
  41915a:	stos   DWORD PTR es:[edi],eax
  41915b:	repnz add esp,ecx
  41915e:	lods   eax,DWORD PTR ds:[esi]
  41915f:	repz test al,0xdf
  419162:	or     DWORD PTR [ebx],ebx
  419164:	inc    eax
  419165:	adc    ah,BYTE PTR [esi]
  419167:	cli    
  419168:	pop    es
  419169:	jge    0x419132
  41916b:	cli    
  41916c:	mov    ch,0x4f
  41916e:	push   ss
  41916f:	push   ebx
  419170:	xchg   ecx,eax
  419171:	push   ss
  419172:	aas    
  419173:	scas   al,BYTE PTR es:[edi]
  419174:	pop    edx
  419175:	lods   eax,DWORD PTR ds:[esi]
  419176:	or     al,cl
  419178:	lock add DWORD PTR [edi],edx
  41917b:	cwde   
  41917c:	mov    ah,0xb6
  41917e:	out    0x36,eax
  419180:	sub    DWORD PTR [edi+esi*1-0xe],ecx
  419184:	enter  0x49b0,0x85
  419188:	adc    bl,BYTE PTR [ebx+0x985b7c7]
  41918e:	mov    esp,0x1f5ede3c
  419193:	ret    
  419194:	shr    BYTE PTR [eax+0x7b],cl
  419197:	sbb    al,0xb8
  419199:	sub    ah,BYTE PTR [ebx]
  41919b:	jbe    0x4191a2
  41919d:	jg     0x41917d
  41919f:	shr    BYTE PTR [edx+0x42ca52a8],cl
  4191a5:	or     DWORD PTR ss:[edi],ebx
  4191a8:	adc    esi,DWORD PTR [ebx]
  4191aa:	lock mov dl,0x76
  4191ad:	shl    BYTE PTR [esi],0x14
  4191b0:	stos   BYTE PTR es:[edi],al
  4191b1:	adc    BYTE PTR [ecx-0x7a9a9bbc],al
  4191b7:	popf   
  4191b8:	jbe    0x419140
  4191ba:	call   0xa2841cb9
  4191bf:	(bad)  
  4191c0:	jbe    0x4191f0
  4191c2:	in     al,dx
  4191c3:	cmpps  xmm7,XMMWORD PTR [eax+0x14f4cf3f],0x35
  4191cb:	pushf  
  4191cc:	add    ecx,edx
  4191ce:	popa   
  4191cf:	js     0x4191c3
  4191d1:	in     al,0x8d
  4191d3:	xor    BYTE PTR [eax-0x2428632b],0x61
  4191da:	sbb    dh,ch
  4191dc:	outs   dx,DWORD PTR ds:[esi]
  4191dd:	add    BYTE PTR [edi+edx*1-0x24],ch
  4191e1:	mov    edi,0x5fe71279
  4191e6:	dec    eax
  4191e7:	jecxz  0x4191d1
  4191e9:	pop    ss
  4191ea:	mov    ch,0x7b
  4191ec:	call   0x24576a04
  4191f1:	test   BYTE PTR [ebx],ch
  4191f3:	call   0x9ab9961
  4191f8:	pusha  
  4191f9:	pop    ebx
  4191fa:	in     eax,0xd7
  4191fc:	rcr    BYTE PTR ds:0xc1a85f63,0xe9
  419203:	pop    esp
  419204:	out    0xd1,eax
  419206:	iret   
  419207:	shl    BYTE PTR [ebx+0x1f8b0506],0x6d
  41920e:	push   ebp
  41920f:	adc    ah,0xf3
  419212:	aam    0x12
  419214:	(bad)  
  419215:	in     al,dx
  419216:	mov    al,ds:0x668d8e27
  41921b:	jle    0x4191bb
  41921d:	int    0x1f
  41921f:	jg     0x4191bc
  419221:	jae    0x4191b4
  419223:	aas    
  419224:	push   0xbcbee145
  419229:	jns    0x419269
  41922b:	cs das 
  41922d:	lds    esi,FWORD PTR [ebx+eiz*1]
  419230:	bound  edi,QWORD PTR [ebx]
  419232:	pop    ebx
  419233:	repz jo 0x419234
  419236:	cwde   
  419237:	aam    0x56
  419239:	fwait
  41923a:	mov    bh,0xe2
  41923c:	hlt    
  41923d:	push   ecx
  41923e:	inc    edx
  41923f:	or     BYTE PTR [eax-0x4d],dh
  419242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419243:	dec    ebp
  419244:	std    
  419245:	cmp    BYTE PTR [eax-0x4d],0xfc
  419249:	repnz fiadd DWORD PTR [eax+edi*1+0x69]
  41924e:	fcmovu st,st(0)
  419250:	cdq    
  419251:	xor    eax,0x599bd1c6
  419256:	retf   0x710b
  419259:	mov    ah,0x95
  41925b:	sub    ax,0x3018
  41925f:	mov    ecx,esi
  419261:	sub    BYTE PTR [edx+0x70],0xd3
  419265:	push   esi
  419266:	hlt    
  419267:	pop    ecx
  419268:	pop    ebp
  419269:	xchg   ebx,edi
  41926b:	push   edx
  41926c:	test   al,0xb5
  41926e:	xchg   esp,eax
  41926f:	out    0xa4,eax
  419271:	lods   al,BYTE PTR ds:[esi]
  419272:	aaa    
  419273:	les    ebx,FWORD PTR [eax]
  419275:	stos   DWORD PTR es:[edi],eax
  419276:	dec    edx
  419277:	mov    ds:0x6c6ce900,eax
  41927c:	je     0x41924d
  41927e:	shl    DWORD PTR [eax+0x524cc084],0xef
  419285:	cmp    eax,0x8ca9bf2d
  41928a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41928b:	das    
  41928c:	cmp    DWORD PTR [eax-0xd],eax
  41928f:	int    0xe
  419291:	das    
  419292:	in     eax,0x2e
  419294:	cli    
  419295:	inc    edi
  419296:	aad    0x6b
  419298:	xor    DWORD PTR [eax],edx
  41929a:	test   DWORD PTR [esi-0x32f4ed6],0xddbbe01c
  4192a4:	add    ch,BYTE PTR [ebx+0x29]
  4192a7:	adc    al,0xe1
  4192a9:	outs   dx,BYTE PTR ds:[esi]
  4192aa:	and    BYTE PTR [edi],ch
  4192ac:	jl     0x4192e9
  4192ae:	mov    esp,?
  4192b0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4192b2:	shl    BYTE PTR [bp+di+0x33],cl
  4192b6:	lahf   
  4192b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192b8:	sbb    dh,BYTE PTR [ecx+esi*1+0x6998e252]
  4192bf:	into   
  4192c0:	mov    cl,0x21
  4192c2:	repz dec ebp
  4192c4:	test   cl,ch
  4192c6:	out    0x0,al
  4192c8:	loope  0x41924d
  4192ca:	ins    BYTE PTR es:[edi],dx
  4192cb:	jl     0x4192c0
  4192cd:	jb     0x419289
  4192cf:	aad    0x2
  4192d1:	(bad)  
  4192d2:	mov    fs,WORD PTR [edx]
  4192d4:	mov    BYTE PTR [eax],bh
  4192d6:	aaa    
  4192d7:	or     ecx,DWORD PTR [ecx-0x59]
  4192da:	mov    esp,0x1dff9671
  4192df:	jae    0x4192ba
  4192e1:	sub    eax,esi
  4192e3:	loope  0x4192fe
  4192e5:	(bad)  [esi-0x68]
  4192e8:	mov    edx,0x575b47e5
  4192ed:	ss enter 0x47fb,0xb9
  4192f2:	pop    ds
  4192f3:	imul   edx,DWORD PTR [ebp+0x5c],0x41
  4192f7:	mov    al,0x3e
  4192f9:	popf   
  4192fa:	(bad)  
  4192fb:	jnp    0x419347
  4192fd:	xor    eax,0xd69f9cc5
  419302:	inc    al
  419304:	(bad)  [edx-0x1860e5c2]
  41930a:	jmp    0xc0219058
  41930f:	xchg   ecx,eax
  419310:	mov    esp,0x955389b2
  419315:	dec    esi
  419316:	into   
  419317:	gs retf 
  419319:	dec    edi
  41931a:	cs mov eax,0xc8c4af61
  419320:	gs push 0x52
  419323:	js     0x4192c4
  419325:	and    eax,0xf96d3d90
  41932a:	pop    ebx
  41932b:	icebp  
  41932c:	xor    ah,BYTE PTR [ebp+0x21e00838]
  419332:	ins    DWORD PTR es:[edi],dx
  419333:	imul   eax,DWORD PTR [ebx-0x36c0837e],0x5ec23d51
  41933d:	xor    ah,ah
  41933f:	popf   
  419340:	pop    ds
  419341:	vmread DWORD PTR [eax+0x21b3aa65],esi
  419348:	mov    ch,0xa7
  41934a:	cmp    al,0xa8
  41934c:	stos   DWORD PTR es:[edi],eax
  41934d:	(bad)  
  41934e:	pop    edx
  41934f:	inc    edi
  419350:	mov    ebx,DWORD PTR [esp+edi*8]
  419353:	arpl   WORD PTR [eax-0x649bc068],bp
  419359:	mov    bl,0x11
  41935b:	imul   cl
  41935d:	bound  ecx,QWORD PTR [edx+0x25]
  419360:	xchg   DWORD PTR [ecx+0x1d],esi
  419363:	call   0xb6980915
  419368:	push   esi
  419369:	pop    ss
  41936a:	std    
  41936b:	jbe    0x41930e
  41936d:	inc    eax
  41936e:	pop    edx
  41936f:	inc    esp
  419370:	pop    edi
  419371:	inc    ebp
  419372:	leave  
  419373:	pop    esi
  419374:	aad    0xb2
  419376:	jg     0x4193ae
  419378:	in     al,dx
  419379:	in     eax,0x5
  41937b:	pop    edx
  41937c:	ror    cl,0x7
  41937f:	popf   
  419380:	and    BYTE PTR [esi],bl
  419382:	fisubr WORD PTR [eax]
  419384:	sub    bl,0xca
  419387:	mov    al,0x69
  419389:	or     ebp,DWORD PTR [ecx+0x6352d227]
  41938f:	neg    DWORD PTR [ecx+0x27]
  419392:	imul   ecx,ebp,0x35
  419395:	fcom   DWORD PTR [esi]
  419397:	mov    BYTE PTR [eax+0x77eb30b4],ah
  41939d:	jmp    0x5e43da82
  4193a2:	add    DWORD PTR [esp+eiz*2+0x7266d17],esi
  4193a9:	in     eax,dx
  4193aa:	out    0x82,eax
  4193ac:	push   ds
  4193ad:	(bad)  
  4193ae:	aam    0xab
  4193b0:	rol    BYTE PTR [edx],cl
  4193b2:	daa    
  4193b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b4:	fld    DWORD PTR [edx-0x353ec9e8]
  4193ba:	mov    ds:0x520dd1f3,al
  4193bf:	ins    BYTE PTR es:[edi],dx
  4193c0:	pusha  
  4193c1:	xor    ch,ah
  4193c3:	fldcw  WORD PTR ds:0x1d178ff8
  4193c9:	stos   DWORD PTR es:[edi],eax
  4193ca:	aad    0x2
  4193cc:	shl    BYTE PTR [esi+0x3fdf8f28],0x9
  4193d3:	inc    esp
  4193d4:	out    0x61,eax
  4193d6:	adc    DWORD PTR [edx],edx
  4193d8:	sbb    DWORD PTR [edi],esp
  4193da:	ja     0x419454
  4193dc:	xchg   esp,eax
  4193dd:	fisubr DWORD PTR [edi+0x57d77ad5]
  4193e3:	mov    ah,0xbc
  4193e5:	push   0xcfade87e
  4193ea:	je     0x4193bd
  4193ec:	lahf   
  4193ed:	adc    dl,ch
  4193ef:	dec    eax
  4193f0:	inc    ebp
  4193f1:	cmp    DWORD PTR [ebp+ebx*2-0x12],0x3a
  4193f6:	dec    ecx
  4193f7:	shr    BYTE PTR [edx],cl
  4193f9:	(bad)  
  4193fa:	xchg   ebp,eax
  4193fb:	xchg   edx,eax
  4193fc:	(bad)  
  4193fd:	pop    ebp
  4193fe:	test   al,0xbc
  419400:	inc    esp
  419401:	retf   
  419402:	jmp    0x1d33:0x6c9fa266
  419409:	add    al,0xf4
  41940b:	mov    esi,DWORD PTR [edi-0x21e129c]
  419411:	or     ch,BYTE PTR [eax-0x554c0a33]
  419417:	adc    eax,0x4c5f7eed
  41941c:	xchg   esp,eax
  41941d:	mov    edi,0xa03fdd5d
  419422:	icebp  
  419423:	and    eax,0x6fb2f3a1
  419428:	sub    al,0x2c
  41942a:	scas   al,BYTE PTR es:[edi]
  41942b:	jmp    0x41949e
  41942d:	loopne 0x4193f5
  41942f:	pop    eax
  419430:	mov    ch,0x8e
  419432:	push   ecx
  419433:	mov    esp,0x423a7c57
  419438:	mov    ebp,0xb2b541e2
  41943d:	and    eax,0xb8e01eee
  419442:	popa   
  419443:	sub    BYTE PTR [ebp-0x3e587925],bl
  419449:	pusha  
  41944a:	rcr    BYTE PTR [esp+ebp*8],0x7d
  41944e:	and    eax,DWORD PTR [esi+ebx*2-0x36]
  419452:	xor    ecx,esp
  419454:	and    DWORD PTR [ebx+0x3084ccfa],esp
  41945a:	mov    dh,0xac
  41945c:	lods   al,BYTE PTR ds:[esi]
  41945d:	mov    ah,0x79
  41945f:	mov    ds:0xe3dd2a12,eax
  419464:	rcr    DWORD PTR [eax-0x73],0x70
  419468:	stos   BYTE PTR es:[edi],al
  419469:	jmp    0x1b1e:0xfd22ab09
  419470:	sbb    DWORD PTR [ecx-0x6e],ebp
  419473:	ret    
  419474:	adc    al,0xc9
  419476:	jbe    0x419419
  419478:	sahf   
  419479:	or     cl,ah
  41947b:	hlt    
  41947c:	aas    
  41947d:	sbb    eax,0xa2a57b76
  419482:	pop    ebp
  419483:	add    BYTE PTR [edi+0x60b59f1a],al
  419489:	pop    edi
  41948a:	ins    BYTE PTR es:[edi],dx
  41948b:	popf   
  41948c:	pushf  
  41948d:	outs   dx,DWORD PTR ds:[esi]
  41948e:	cmp    ah,BYTE PTR [esi]
  419490:	pop    es
  419491:	scas   eax,DWORD PTR es:[edi]
  419492:	and    BYTE PTR [ecx+0x47],0x71
  419496:	test   BYTE PTR [esi+0x7d],dh
  419499:	inc    esp
  41949a:	sti    
  41949b:	cmp    esi,DWORD PTR [ecx]
  41949d:	mov    dh,0x42
  41949f:	lea    ebx,ds:0xa3519590
  4194a5:	ins    DWORD PTR es:[edi],dx
  4194a6:	(bad)  
  4194a8:	push   0x28
  4194aa:	pop    esi
  4194ab:	or     al,0x41
  4194ad:	pusha  
  4194ae:	dec    esp
  4194af:	aaa    
  4194b0:	test   al,0x5
  4194b2:	lahf   
  4194b3:	call   0x81bd:0x68396341
  4194ba:	cmp    DWORD PTR [edx+0x40d2d5a7],esp
  4194c0:	add    ch,ch
  4194c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c3:	test   BYTE PTR ds:0x70cdf2bc,dl
  4194c9:	out    0xba,eax
  4194cb:	fisttp QWORD PTR [ebp-0x30]
  4194ce:	aad    0xab
  4194d0:	imul   esp,DWORD PTR [edx-0x3aa8ba4f],0x65905971
  4194da:	shr    ecx,0x5f
  4194dd:	stc    
  4194de:	sti    
  4194df:	sub    DWORD PTR [ebp-0x3d51018b],esi
  4194e5:	pop    ecx
  4194e6:	add    BYTE PTR [edi],bl
  4194e8:	pop    ecx
  4194e9:	and    BYTE PTR [eax+esi*2],al
  4194ec:	mov    BYTE PTR [edi+0x7b],ah
  4194ef:	icebp  
  4194f0:	sub    BYTE PTR [esp+ecx*2],dl
  4194f3:	lods   al,BYTE PTR ds:[esi]
  4194f4:	aad    0xa
  4194f6:	push   sp
  4194f8:	scas   eax,DWORD PTR es:[edi]
  4194f9:	mov    edi,0x7a43c02f
  4194fe:	aam    0x6f
  419500:	mov    eax,0x897e49a0
  419505:	or     BYTE PTR [ecx+0x2223a38c],dh
  41950b:	aam    0x31
  41950d:	inc    edx
  41950e:	mov    esp,0x687cfca3
  419513:	je     0x4194e4
  419515:	lock mov bl,0x0
  419518:	clc    
  419519:	divps  xmm6,XMMWORD PTR [esi-0x555be421]
  419520:	(bad)  
  419521:	daa    
  419522:	and    BYTE PTR [eax],bl
  419524:	imul   esp,eax,0x25
  419527:	outs   dx,BYTE PTR ds:[esi]
  419528:	dec    esp
  419529:	dec    esp
  41952a:	or     edx,eax
  41952c:	sub    al,bl
  41952e:	dec    eax
  41952f:	jo     0x419583
  419531:	adc    eax,0x2aac0889
  419536:	call   0x24572a46
  41953b:	aam    0xb8
  41953d:	xor    esi,DWORD PTR [eax+0x44]
  419540:	out    0x99,eax
  419542:	mov    edi,0x792a03bd
  419547:	mov    DWORD PTR [esp+esi*4],edx
  41954a:	inc    edx
  41954b:	cmp    BYTE PTR [ebp+eax*4+0x12861a65],ah
  419552:	or     BYTE PTR [edx-0x777f604a],cl
  419558:	retf   
  419559:	fmul   st(6),st
  41955b:	fild   DWORD PTR [edi+0x24]
  41955e:	loop   0x41958a
  419560:	(bad)  
  419562:	inc    esi
  419563:	pop    ss
  419564:	psrad  mm1,mm3
  419567:	xchg   ebx,eax
  419568:	sbb    DWORD PTR [ebx-0x6ea65282],esp
  41956e:	cmp    DWORD PTR ds:0x9941a7b3,eax
  419574:	sub    dl,BYTE PTR [ecx]
  419576:	mov    ecx,0xfbb38f47
  41957b:	mov    edx,DWORD PTR [edx]
  41957d:	xchg   esi,eax
  41957e:	pop    DWORD PTR [edi-0x74]
  419581:	stos   DWORD PTR es:[edi],eax
  419582:	(bad)  
  419583:	outs   dx,BYTE PTR ds:[esi]
  419584:	hlt    
  419585:	daa    
  419586:	fwait
  419587:	mov    ecx,0x3c9598a1
  41958c:	xchg   ecx,eax
  41958d:	push   es
  41958e:	cmp    eax,esp
  419590:	in     al,dx
  419591:	cmp    DWORD PTR [ebx-0x4d396be9],ecx
  419597:	into   
  419598:	pop    ebx
  419599:	mov    esp,0x391265d4
  41959e:	shl    BYTE PTR [ebx+0x247f804f],0xa3
  4195a5:	adc    DWORD PTR [edx-0x48],0xffffffa6
  4195a9:	jno    0x4195ff
  4195ab:	pop    ecx
  4195ac:	mov    edx,0xb6e3fc64
  4195b1:	cmp    BYTE PTR [ebp+0x763d5fe0],bl
  4195b7:	in     eax,0x2f
  4195b9:	cld    
  4195ba:	xchg   DWORD PTR cs:0xf754aa30,edi
  4195c1:	mov    DWORD PTR [edx+edi*2],ecx
  4195c4:	and    eax,0x34f139cb
  4195c9:	dec    eax
  4195ca:	(bad)  
  4195cb:	in     eax,dx
  4195cc:	out    dx,al
  4195cd:	adc    BYTE PTR [esi+eax*8],cl
  4195d0:	dec    eax
  4195d1:	call   0x512ac7f2
  4195d6:	sub    DWORD PTR [edi+0x569cb3ae],0x25
  4195dd:	scas   al,BYTE PTR es:[edi]
  4195de:	mov    cl,0xd4
  4195e0:	test   DWORD PTR [esi],eax
  4195e2:	js     0x419572
  4195e4:	pusha  
  4195e5:	icebp  
  4195e6:	aad    0xdf
  4195e8:	jb     0x419625
  4195ea:	and    DWORD PTR [edi],esp
  4195ec:	pop    ebx
  4195ed:	pusha  
  4195ee:	aad    0x55
  4195f0:	pop    ebp
  4195f1:	push   ebp
  4195f2:	xor    eax,0xc399d99b
  4195f7:	es sub eax,0x8b26f140
  4195fd:	xor    DWORD PTR [ecx-0x16dffbd0],edx
  419603:	out    0x1f,al
  419605:	imul   esp,DWORD PTR [esi-0x61],0xffffffcc
  419609:	mov    ds:0xaa2fffdd,eax
  41960e:	ret    0xd0f3
  419611:	wbinvd 
  419613:	popf   
  419614:	out    0xc6,eax
  419616:	into   
  419617:	aad    0x85
  419619:	stos   DWORD PTR es:[edi],eax
  41961a:	(bad)  [edi+0x7c0b066a]
  419620:	jno    0x419605
  419622:	xor    DWORD PTR [ebx],edi
  419624:	loope  0x419694
  419626:	inc    ebx
  419627:	xchg   BYTE PTR [esi],ch
  419629:	out    0x55,eax
  41962b:	mov    esp,esi
  41962d:	fdivrp st(5),st
  41962f:	mov    ecx,0xf80b0951
  419634:	daa    
  419635:	xchg   ebx,eax
  419636:	push   eax
  419637:	(bad)  
  419638:	cmp    DWORD PTR es:[ebp-0x39],esp
  41963c:	cwde   
  41963d:	pop    eax
  41963e:	inc    edi
  41963f:	sub    al,0x2e
  419641:	pop    ds
  419642:	pop    ebp
  419643:	sub    ecx,DWORD PTR [ebp+edi*4+0x43]
  419647:	leave  
  419648:	hlt    
  419649:	loopne 0x4196bf
  41964b:	jnp    0x4195d1
  41964d:	ss int 0x11
  419650:	cld    
  419651:	push   edx
  419652:	dec    esi
  419653:	mov    eax,ds:0xb459be5a
  419658:	mov    esp,0x48becd36
  41965d:	data16 sahf 
  41965f:	xchg   edx,eax
  419660:	xchg   DWORD PTR [ebx-0x3a],ebx
  419663:	(bad)  
  419664:	(bad)  
  419665:	cmp    ch,BYTE PTR [edx-0x31]
  419668:	dec    edx
  419669:	pop    eax
  41966a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966b:	mov    ds:0x50db22c4,al
  419670:	dec    esp
  419671:	scas   eax,DWORD PTR es:[edi]
  419672:	cmp    dl,BYTE PTR [edx]
  419674:	js     0x419604
  419676:	adc    ecx,0xffffffe9
  419679:	xlat   BYTE PTR ds:[ebx]
  41967a:	or     al,0x4
  41967c:	pop    ebx
  41967d:	iret   
  41967e:	or     BYTE PTR [eax+esi*8-0x5d331c17],dl
  419685:	inc    ebx
  419686:	pushf  
  419687:	pusha  
  419688:	rcr    DWORD PTR [edx+0x6e1fe6e0],cl
  41968e:	push   esi
  41968f:	jne    0x419648
  419691:	scas   eax,DWORD PTR es:[edi]
  419692:	xchg   edx,eax
  419693:	jmp    0x41967f
  419695:	pop    es
  419696:	test   al,0x30
  419698:	jns    0x419718
  41969a:	icebp  
  41969b:	and    BYTE PTR [esi+0x35db9baa],dh
  4196a1:	fisttp WORD PTR [ecx-0x20]
  4196a5:	lahf   
  4196a6:	shl    DWORD PTR [eax+0x14897ac5],1
  4196ac:	xor    bl,bh
  4196ae:	add    bl,BYTE PTR ds:0xa8747cee
  4196b4:	mov    ch,0x79
  4196b6:	fnstcw WORD PTR [edx-0x56]
  4196b9:	pop    ebp
  4196ba:	xchg   ecx,eax
  4196bb:	in     eax,dx
  4196bc:	pop    ecx
  4196bd:	imul   ecx,DWORD PTR [ecx-0x55],0xfab04f9f
  4196c4:	mov    esp,0x75416198
  4196c9:	out    dx,al
  4196ca:	push   0xfffffffd
  4196cc:	int    0x37
  4196ce:	sbb    dl,BYTE PTR ss:[ecx+0x7c]
  4196d2:	pop    eax
  4196d3:	or     al,0x0
  4196d5:	retf   0x81e6
  4196d8:	mov    edi,0xd957639
  4196dd:	pop    ebx
  4196de:	ins    DWORD PTR es:[edi],dx
  4196df:	fsubr  st(3),st
  4196e1:	mov    eax,DWORD PTR [edi+ebp*8+0x6]
  4196e5:	or     eax,0xe896e4ce
  4196ea:	lea    ebp,[esi-0x7acc5700]
  4196f0:	std    
  4196f1:	pop    ecx
  4196f2:	dec    eax
  4196f3:	call   0xa3c6:0x6a347833
  4196fa:	push   0x55fea719
  4196ff:	fisttp DWORD PTR [ebp+0x78]
  419702:	clc    
  419703:	and    dl,BYTE PTR [ebx+0x2a]
  419706:	jno    0x4196b7
  419708:	add    al,0x46
  41970a:	cmp    DWORD PTR [ecx+ebx*4],esp
  41970d:	adc    eax,0xe3aa36f8
  419712:	cmp    eax,0x79ddf7e
  419717:	inc    edx
  419718:	cmp    dl,BYTE PTR [esp+eax*8-0x645c3e75]
  41971f:	ror    DWORD PTR [edx+ecx*1+0x3a],1
  419723:	jp     0x41971d
  419725:	xor    cl,BYTE PTR [eax-0x21]
  419728:	sbb    BYTE PTR [esi-0x74],cl
  41972b:	aad    0x25
  41972d:	div    esi
  41972f:	pop    edi
  419730:	push   edx
  419731:	cwde   
  419732:	je     0x41975e
  419734:	rep stos DWORD PTR es:[edi],eax
  419736:	mov    edi,cs
  419738:	push   eax
  419739:	mov    dh,0x4b
  41973b:	pop    eax
  41973c:	es sbb esp,esp
  41973f:	adc    al,BYTE PTR [edx]
  419741:	icebp  
  419742:	adc    esi,0x57
  419745:	test   BYTE PTR [esi-0x55],ah
  419748:	sahf   
  419749:	mov    cl,0x74
  41974b:	pop    ebx
  41974c:	jmp    0xfc7a:0x405c6885
  419753:	jg     0x419746
  419755:	mov    DWORD PTR [edi+edx*4+0x6bebec68],esi
  41975c:	mov    ds:0x6b5ef2b6,al
  419761:	mov    ch,0x7d
  419763:	lods   eax,DWORD PTR ds:[esi]
  419764:	aas    
  419765:	mov    eax,0x85137ee1
  41976a:	pusha  
  41976b:	ficomp WORD PTR [ebx-0x1f1f939]
  419771:	inc    ecx
  419772:	outs   dx,BYTE PTR ds:[esi]
  419773:	arpl   WORD PTR ds:0x8f8d263e,di
  419779:	jecxz  0x4197ee
  41977b:	fdiv   st,st(5)
  41977d:	sar    DWORD PTR [ebx+0x0],1
  419780:	and    al,0x48
  419782:	(bad)  
  419783:	popf   
  419784:	cmp    edx,eax
  419786:	add    ecx,ebp
  419788:	inc    edx
  419789:	push   eax
  41978a:	pop    eax
  41978b:	daa    
  41978c:	adc    eax,0x67eca8d6
  419791:	fstp   st(5)
  419793:	cmp    al,0x42
  419795:	pop    ecx
  419796:	scas   al,BYTE PTR es:[edi]
  419797:	push   ss
  419798:	clc    
  419799:	or     esi,DWORD PTR [esi]
  41979b:	sbb    ch,bh
  41979d:	mov    es,WORD PTR [edi+0x642fae84]
  4197a3:	pusha  
  4197a4:	sar    DWORD PTR [edx],0xc0
  4197a7:	or     edi,ebx
  4197a9:	inc    edi
  4197aa:	inc    edi
  4197ab:	les    edx,FWORD PTR [ecx+edx*8-0x5e91cba]
  4197b2:	jp     0x419795
  4197b4:	fcmovbe st,st(4)
  4197b6:	fisubr WORD PTR [eax-0x967ecdf]
  4197bc:	add    eax,0x51479330
  4197c1:	cld    
  4197c2:	push   es
  4197c3:	enter  0x6fff,0x12
  4197c7:	sub    eax,0x7a83bbc2
  4197cc:	mov    al,0x64
  4197ce:	dec    edx
  4197cf:	test   DWORD PTR [esi+eiz*4-0x705bc731],edi
  4197d6:	lods   eax,DWORD PTR ds:[esi]
  4197d7:	outs   dx,BYTE PTR ds:[esi]
  4197d8:	sti    
  4197d9:	sbb    eax,0x1b44fa20
  4197de:	in     al,0xb4
  4197e0:	and    eax,0x349cb31b
  4197e5:	and    eax,0x567f5b23
  4197ea:	cdq    
  4197eb:	push   0x33c40bea
  4197f0:	push   ebx
  4197f1:	jle    0x419773
  4197f3:	cld    
  4197f4:	adc    BYTE PTR [ebp+0x1b],0x9
  4197f8:	stc    
  4197f9:	imul   ebp,DWORD PTR cs:[edx],0x5b
  4197fd:	cld    
  4197fe:	ror    DWORD PTR [esi+0x63826d20],1
  419804:	stc    
  419805:	dec    ecx
  419806:	gs pop es
  419808:	pop    ss
  419809:	cmp    cl,cl
  41980b:	xor    DWORD PTR [eax-0xf],ebx
  41980e:	pop    eax
  41980f:	pop    ebp
  419810:	add    eax,0x90334680
  419815:	and    ebx,DWORD PTR [ebx+0x4c63aa2]
  41981b:	cmp    bl,bh
  41981d:	hlt    
  41981e:	repz or al,0x6f
  419821:	arpl   WORD PTR [ebx],bx
  419823:	inc    BYTE PTR [esi]
  419825:	sub    al,0xf1
  419827:	pop    ebp
  419828:	fidivr WORD PTR [edx]
  41982a:	mov    dl,0x55
  41982c:	int    0xf8
  41982e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41982f:	pop    ebx
  419830:	add    DWORD PTR [esi-0x7a01af47],esp
  419836:	xchg   edi,eax
  419837:	test   al,0xa8
  419839:	push   DWORD PTR [ecx+0x1c53fdc2]
  41983f:	jae    0x41982f
  419841:	or     DWORD PTR [eax+ebx*1+0x1a774ce5],esi
  419848:	adc    ebx,DWORD PTR [esi+eiz*1+0xe]
  41984c:	xchg   DWORD PTR fs:[eax],edx
  41984f:	inc    ecx
  419850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419851:	jl     0x419852
  419853:	lea    ebx,[eax]
  419855:	idiv   ah
  419857:	sbb    ch,al
  419859:	dec    ecx
  41985a:	mov    eax,0xf3b5062a
  41985f:	xchg   edi,eax
  419860:	sub    al,0x91
  419862:	shl    DWORD PTR [ebp+0x2d],1
  419865:	add    edx,DWORD PTR [esp+ebp*2+0x72]
  419869:	pop    esi
  41986a:	xchg   edi,eax
  41986b:	addr16 push esi
  41986d:	mov    bl,0x5b
  41986f:	xor    DWORD PTR [ebx+0x57],ebx
  419872:	ja     0x4198ef
  419874:	repnz cmp DWORD PTR fs:[ecx+0x45],0xa1f2ad1e
  41987d:	push   0x2bb2b1f6
  419882:	and    ebx,DWORD PTR ds:0x99f30ac5
  419888:	add    esi,ebp
  41988a:	(bad)  
  41988b:	push   cs
  41988c:	cmp    edx,DWORD PTR [esi-0x346a97e7]
  419892:	ds mov bl,0x47
  419895:	push   0xffffffd9
  419897:	push   0xb6623d08
  41989c:	dec    ebp
  41989d:	mov    eax,ds:0x642f37f9
  4198a2:	fs push 0x430c4b86
  4198a8:	pop    edx
  4198a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198aa:	cmp    bl,BYTE PTR [edi-0x37]
  4198ad:	nop
  4198ae:	push   edx
  4198af:	and    al,ah
  4198b1:	add    al,BYTE PTR [ebx+0x6c]
  4198b4:	dec    ecx
  4198b5:	dec    edx
  4198b6:	xchg   esi,ebx
  4198b8:	hlt    
  4198b9:	mov    ch,0xd1
  4198bb:	out    0xe0,al
  4198bd:	jge    0x41987c
  4198bf:	inc    edx
  4198c0:	rcl    DWORD PTR [edx+0x20],0x11
  4198c4:	mov    esp,0x5529ad39
  4198c9:	pop    ebp
  4198ca:	les    esp,FWORD PTR [edi+0x6f237eb8]
  4198d0:	repz ret 
  4198d2:	add    al,BYTE PTR [edi+0x68901970]
  4198d8:	not    DWORD PTR [eax+0x6e]
  4198db:	sti    
  4198dc:	test   BYTE PTR [eax],ah
  4198de:	nop
  4198df:	int3   
  4198e0:	add    bh,BYTE PTR [ebx+0x10910ce8]
  4198e6:	sub    al,0xf2
  4198e8:	mov    ah,BYTE PTR [esi+0x14]
  4198eb:	cdq    
  4198ec:	(bad)  
  4198ed:	xchg   ecx,eax
  4198ee:	jne    0x41991e
  4198f0:	sar    DWORD PTR [ebx],1
  4198f2:	jecxz  0x41988f
  4198f4:	ret    
  4198f5:	(bad)  
  4198f6:	jno    0x4198d9
  4198f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f9:	cmp    al,0x8a
  4198fb:	xchg   ebx,eax
  4198fc:	aas    
  4198fd:	call   0x28a4e29
  419902:	int    0xb7
  419904:	jge    0x4198a0
  419906:	lods   eax,DWORD PTR ds:[esi]
  419907:	fs inc esp
  419909:	mov    ebp,DWORD PTR [eax]
  41990b:	mov    ds:0xb7d32678,al
  419911:	fisubr WORD PTR [ebx+0x45aedd4d]
  419917:	ins    BYTE PTR es:[edi],dx
  419918:	push   esi
  419919:	sti    
  41991a:	shl    BYTE PTR [ebx+0x4e796c6f],cl
  419920:	jg     0x4198ed
  419922:	mov    al,0x4e
  419924:	out    0x3c,al
  419926:	test   DWORD PTR cs:[edx-0x5dc67503],ebx
  41992d:	dec    edi
  41992e:	ror    DWORD PTR [edi-0x18],0x29
  419932:	mov    eax,ds:0x8e0131a6
  419937:	jmp    0x4198c0
  419939:	into   
  41993a:	pop    eax
  41993b:	lods   al,BYTE PTR ds:[esi]
  41993c:	xor    ch,bl
  41993e:	push   eax
  41993f:	xor    BYTE PTR [edx-0x7c],0x5
  419943:	sahf   
  419944:	dec    ecx
  419945:	aam    0x51
  419947:	sub    bh,bh
  419949:	pop    ebp
  41994a:	fs imul edx,edx,0x9919b0e0
  419951:	jl     0x419960
  419953:	clc    
  419954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419955:	jl     0x419915
  419957:	shr    BYTE PTR [eax+0x5e],cl
  41995a:	sub    edx,DWORD PTR gs:[eax+0x72]
  41995e:	shl    DWORD PTR [ecx],cl
  419960:	mov    ebp,DWORD PTR [esi+0x2c]
  419963:	vrsqrtss xmm1,xmm1,DWORD PTR [esi+edi*8-0x2b]
  419969:	inc    edi
  41996a:	scas   al,BYTE PTR es:[edi]
  41996b:	popf   
  41996c:	push   es
  41996d:	dec    edx
  41996e:	push   0xe492fea6
  419973:	push   ebx
  419974:	dec    edx
  419975:	pop    ss
  419976:	fdivrp st(7),st
  419978:	pop    edx
  419979:	xchg   BYTE PTR [ebp-0x7abdb23a],cl
  41997f:	arpl   WORD PTR [ecx+0x47],di
  419982:	mov    ch,0x9b
  419984:	push   ss
  419985:	mov    ds:0x1ae50da3,al
  41998a:	pop    ebp
  41998b:	mov    cl,dl
  41998d:	add    al,BYTE PTR [ecx+0x1f]
  419990:	mov    ecx,0x6e78c0a1
  419995:	push   edi
  419996:	mov    ah,0x4c
  419998:	ins    DWORD PTR es:[edi],dx
  419999:	ja     0x419a12
  41999b:	adc    BYTE PTR [ebx-0x40ba82c8],cl
  4199a1:	xor    DWORD PTR [ebp+edx*4+0x5b3c5456],0x60
  4199a9:	outs   dx,DWORD PTR ss:[esi]
  4199ab:	repz lds eax,FWORD PTR [ecx-0x39]
  4199af:	scas   al,BYTE PTR es:[edi]
  4199b0:	dec    esp
  4199b1:	repnz pop esp
  4199b3:	xchg   BYTE PTR [edx],dl
  4199b5:	fs jmp 0x96a1faac
  4199bb:	mov    ds:0xc9ce86e7,eax
  4199c0:	jbe    0x41998b
  4199c2:	gs ds in al,dx
  4199c5:	xchg   ebx,eax
  4199c6:	inc    ebp
  4199c7:	arpl   WORD PTR [ecx-0x6c],bx
  4199ca:	ficomp WORD PTR [esi+0x2cf4c286]
  4199d0:	leave  
  4199d1:	test   BYTE PTR [ecx+ebx*2-0x70d2792e],bl
  4199d8:	pop    ebp
  4199d9:	push   ss
  4199da:	cmp    BYTE PTR [eax-0x17],bh
  4199dd:	sub    dh,BYTE PTR [esi+0x4b]
  4199e0:	cld    
  4199e1:	push   esi
  4199e2:	inc    ecx
  4199e3:	aad    0xa5
  4199e5:	add    cl,BYTE PTR [ebp-0x36c24b93]
  4199eb:	sub    ebp,DWORD PTR [ebx]
  4199ed:	dec    edi
  4199ee:	cmc    
  4199ef:	clc    
  4199f0:	je     0x4199d1
  4199f2:	lds    esi,FWORD PTR [edi-0x12]
  4199f5:	pop    es
  4199f6:	test   DWORD PTR [edx-0x30],edi
  4199f9:	xor    eax,0xe25f9ab5
  4199fe:	xchg   esi,eax
  4199ff:	ret    0x95ee
  419a02:	pop    ss
  419a03:	and    eax,DWORD PTR [eax]
  419a05:	std    
  419a06:	mov    dl,0xfe
  419a08:	ret    0xcac2
  419a0b:	popa   
  419a0c:	in     eax,0xd7
  419a0e:	dec    esi
  419a0f:	mov    cl,0xc6
  419a11:	xor    ch,BYTE PTR [edx]
  419a13:	pop    edi
  419a14:	jns    0x4199c9
  419a16:	dec    esp
  419a17:	stos   BYTE PTR es:[edi],al
  419a18:	mov    ds:0x90bf4e98,al
  419a1d:	ret    
  419a1e:	sub    al,0xb6
  419a20:	mov    al,0xdd
  419a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a23:	dec    eax
  419a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a25:	(bad)  
  419a26:	jl     0x419a8c
  419a28:	bound  ecx,QWORD PTR [esi+eax*4-0xd]
  419a2c:	ja     0x419a78
  419a2e:	cmp    bh,BYTE PTR [ecx]
  419a30:	(bad)
  419a33:	xor    al,0x97
  419a35:	sub    BYTE PTR [eax+edx*4],ah
  419a38:	sub    BYTE PTR [ebp+0x56],bl
  419a3b:	jle    0x419a9f
  419a3d:	daa    
  419a3e:	(bad)  
  419a3f:	out    dx,al
  419a40:	jo     0x419aa9
  419a42:	jne    0x4199e1
  419a44:	test   eax,0x1ab60ae1
  419a49:	(bad)  
  419a4a:	mov    al,0xf7
  419a4c:	push   es
  419a4d:	pop    ds
  419a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a4f:	test   al,0x3c
  419a51:	mov    bh,bh
  419a53:	or     al,0x52
  419a55:	jmp    0x419a98
  419a57:	arpl   ax,si
  419a59:	jae    0x4199f3
  419a5b:	lea    ecx,[eax-0xc947852]
  419a61:	fstp   QWORD PTR [esi+0x4b3d3c4b]
  419a67:	xor    eax,0x1cd40bd5
  419a6c:	fwait
  419a6d:	xor    DWORD PTR [esi-0x6a],ebx
  419a70:	jge    0x419a69
  419a72:	or     dl,BYTE PTR [ecx+0x3a]
  419a75:	xchg   edx,eax
  419a76:	cmp    ch,dl
  419a78:	mov    edi,DWORD PTR [edx-0x4e6b4469]
  419a7e:	and    BYTE PTR [ecx],dl
  419a80:	fbstp  TBYTE PTR [edx]
  419a82:	inc    esp
  419a83:	and    bh,bl
  419a85:	aad    0x37
  419a87:	lock pushf 
  419a89:	(bad)  
  419a8a:	xchg   edi,eax
  419a8b:	stos   DWORD PTR es:[edi],eax
  419a8c:	js     0x419a60
  419a8e:	(bad)  
  419a8f:	pusha  
  419a90:	sub    DWORD PTR [ebx],ecx
  419a92:	out    dx,al
  419a93:	out    0x9f,eax
  419a95:	push   ebp
  419a96:	inc    DWORD PTR [ebp+0x12]
  419a99:	and    al,0xd
  419a9b:	fidivr WORD PTR [esi]
  419a9d:	inc    eax
  419a9e:	nop
  419a9f:	fistp  DWORD PTR [ebx+0x7b7e2a88]
  419aa5:	mov    eax,ds:0x8c823f5f
  419aaa:	shl    ebx,1
  419aac:	(bad)  
  419aad:	into   
  419aae:	add    ch,BYTE PTR [esi+0x33]
  419ab1:	or     DWORD PTR [ebx+0x13],ecx
  419ab4:	lods   al,BYTE PTR ds:[esi]
  419ab5:	icebp  
  419ab6:	sub    al,dl
  419ab8:	mov    DWORD PTR [edi+0x130776cb],0x2da8bf26
  419ac2:	cwde   
  419ac3:	rol    BYTE PTR [edx-0x4e7fdd22],0x6b
  419aca:	into   
  419acb:	scas   eax,DWORD PTR es:[edi]
  419acc:	stos   DWORD PTR es:[edi],eax
  419acd:	pop    esi
  419ace:	cmp    DWORD PTR [esi+edx*8],esp
  419ad1:	jae    0x419adb
  419ad3:	dec    edx
  419ad4:	stc    
  419ad5:	or     esi,esp
  419ad7:	add    BYTE PTR [eax-0x464a0a5d],dl
  419add:	cmp    eax,DWORD PTR [ebp-0x1c]
  419ae0:	aaa    
  419ae1:	inc    ecx
  419ae2:	fsub   DWORD PTR [ebx-0x4936d03b]
  419ae8:	fimul  DWORD PTR [ebx]
  419aea:	ds std 
  419aec:	data16 aaa 
  419aee:	outs   dx,DWORD PTR ds:[esi]
  419aef:	(bad)  
  419af0:	out    0x7e,eax
  419af2:	mov    ds,WORD PTR [ebx+0x43]
  419af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af6:	inc    ebp
  419af7:	mov    esp,0x974a84e2
  419afc:	xor    BYTE PTR [eax-0x5f],al
  419aff:	sub    dh,BYTE PTR [ecx+0x46ad0a23]
  419b05:	push   edx
  419b06:	mov    esp,es
  419b08:	xchg   esp,eax
  419b09:	outs   dx,BYTE PTR ds:[esi]
  419b0a:	xchg   edi,eax
  419b0b:	jge    0x419ac0
  419b0d:	js     0x419b5a
  419b0f:	dec    edi
  419b10:	mov    BYTE PTR [edi],ch
  419b12:	pushf  
  419b13:	adc    esp,esi
  419b15:	sub    esi,DWORD PTR ds:0xdf62433
  419b1b:	out    0x2c,eax
  419b1d:	ror    DWORD PTR [esi-0xd],1
  419b20:	push   ebp
  419b21:	iret   
  419b22:	aad    0x8f
  419b24:	mov    eax,0xc9401084
  419b29:	mov    DWORD PTR [ecx*8+0x79523ef4],ecx
  419b30:	jge    0x419b08
  419b32:	jg     0x419b91
  419b34:	xchg   esi,eax
  419b35:	(bad)  
  419b36:	pop    ss
  419b37:	inc    bp
  419b39:	sub    ecx,ebx
  419b3b:	inc    esp
  419b3c:	xchg   edx,eax
  419b3d:	jecxz  0x419b6f
  419b3f:	std    
  419b40:	mov    dl,0x18
  419b42:	test   BYTE PTR [edx+ebx*8+0x47],bl
  419b46:	push   edi
  419b47:	and    al,0x7a
  419b49:	clc    
  419b4a:	add    dh,BYTE PTR [edi]
  419b4c:	or     dh,BYTE PTR [esi-0x37]
  419b4f:	jge    0x419b0e
  419b51:	xor    al,0x29
  419b53:	test   al,0x28
  419b55:	popa   
  419b56:	jle    0x419b54
  419b58:	je     0x419b9a
  419b5a:	sbb    al,0x65
  419b5c:	sti    
  419b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5e:	aas    
  419b5f:	push   ss
  419b60:	mov    ds:0x714b2808,al
  419b65:	dec    ecx
  419b66:	sahf   
  419b67:	mov    ebx,0x59a3e3f
  419b6c:	sti    
  419b6d:	pop    ecx
  419b6e:	add    BYTE PTR [eax+0x50],bl
  419b71:	mov    ecx,0x4fafc289
  419b76:	(bad)  
  419b77:	inc    sp
  419b79:	cs sub cl,bh
  419b7c:	shr    DWORD PTR [edx+0x3a],cl
  419b7f:	sub    BYTE PTR [ebx+edx*2+0x532519f],0x58
  419b87:	aaa    
  419b88:	loope  0x419b49
  419b8a:	ss scas al,BYTE PTR es:[edi]
  419b8c:	std    
  419b8d:	adc    DWORD PTR [ebp+0x71],0x527868df
  419b94:	inc    eax
  419b95:	lahf   
  419b96:	cmp    edi,DWORD PTR [ebp+0x28]
  419b99:	cmp    al,0x92
  419b9b:	stc    
  419b9c:	or     eax,edx
  419b9e:	adc    eax,esi
  419ba0:	xchg   esp,eax
  419ba1:	dec    ebx
  419ba2:	sub    eax,0xd0060872
  419ba7:	push   esp
  419ba8:	mov    esp,0x86bc12e
  419bad:	ja     0x419b6f
  419baf:	lods   al,BYTE PTR ds:[esi]
  419bb0:	es out dx,al
  419bb2:	and    dh,BYTE PTR [ecx]
  419bb4:	ins    DWORD PTR es:[edi],dx
  419bb5:	cli    
  419bb6:	shr    DWORD PTR [ebx],0x67
  419bb9:	(bad)  
  419bba:	jmp    0x419b55
  419bbc:	and    ecx,ebx
  419bbe:	mov    esp,0x26afba0d
  419bc3:	xor    DWORD PTR [ebx+esi*8-0x1a],0x6c297b8c
  419bcb:	mov    edi,0x6d1f70fd
  419bd0:	jp     0x419b7f
  419bd2:	and    esp,ebx
  419bd4:	dec    ebp
  419bd5:	sti    
  419bd6:	data16 jle 0x419ba9
  419bd9:	and    al,0xd9
  419bdb:	mov    WORD PTR [ebp+0x52dc043f],es
  419be1:	dec    edi
  419be2:	add    BYTE PTR [esi+esi*2+0x451b9be5],cl
  419be9:	mov    bl,0x0
  419beb:	std    
  419bec:	mov    gs,WORD PTR [esi+0x796e30c8]
  419bf2:	and    dh,ch
  419bf4:	sub    al,0x7d
  419bf6:	dec    eax
  419bf7:	outs   dx,BYTE PTR ds:[esi]
  419bf8:	pop    edi
  419bf9:	and    BYTE PTR [edi],ah
  419bfb:	pop    edx
  419bfc:	mov    cl,0x11
  419bfe:	xchg   ebp,eax
  419bff:	cld    
  419c00:	push   esi
  419c01:	jg     0x419c5a
  419c03:	sub    al,0x56
  419c05:	jge    0x419bb3
  419c07:	scas   al,BYTE PTR es:[edi]
  419c08:	into   
  419c09:	and    ebx,DWORD PTR [ecx+0x31]
  419c0c:	arpl   WORD PTR [esi+0x2a8c8352],cx
  419c12:	add    edx,esi
  419c14:	cli    
  419c15:	xor    bh,dh
  419c17:	test   DWORD PTR [eax-0x55969e10],edi
  419c1d:	pop    ss
  419c1e:	mov    ch,0x1a
  419c20:	fwait
  419c21:	pop    eax
  419c23:	or     al,0xe0
  419c25:	int    0x53
  419c27:	cmp    bh,dh
  419c29:	shr    DWORD PTR [eax],0x9
  419c2c:	sbb    bl,BYTE PTR [edi-0x11cde9d2]
  419c32:	scas   al,BYTE PTR es:[edi]
  419c33:	sbb    DWORD PTR [ebx-0x305b06a4],0x7237a3ec
  419c3d:	(bad)  
  419c3e:	pop    ds
  419c3f:	push   edx
  419c40:	xchg   ebx,eax
  419c41:	sbb    eax,0x47907485
  419c46:	mov    eax,ds:0x45b4681b
  419c4b:	psubusb mm1,QWORD PTR [edi]
  419c4e:	xchg   ecx,eax
  419c4f:	adc    BYTE PTR [eax+0x46],al
  419c52:	or     BYTE PTR [ebp+0x2522d73e],dl
  419c58:	sub    bh,BYTE PTR [edx+0x781373cf]
  419c5e:	shl    BYTE PTR [edx+0xdfa1a2c],0x32
  419c65:	iret   
  419c66:	adc    al,0xfc
  419c68:	in     eax,dx
  419c69:	imul   ecx,DWORD PTR [edx],0xffffff8e
  419c6c:	adc    al,0x74
  419c6e:	mov    dl,0xca
  419c70:	stc    
  419c71:	and    BYTE PTR [edx+0x5d],0x7d
  419c75:	stos   BYTE PTR es:[edi],al
  419c76:	inc    ecx
  419c77:	jb     0x419c25
  419c79:	loopne 0x419c06
  419c7b:	rcl    DWORD PTR [edi-0x7b],1
  419c7e:	aas    
  419c7f:	dec    esi
  419c80:	mov    eax,ds:0x41c3df38
  419c85:	push   0xffffffbe
  419c87:	push   0x6f
  419c89:	outs   dx,DWORD PTR ds:[esi]
  419c8a:	push   cs
  419c8b:	jo     0x419c1b
  419c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c8e:	fcom   QWORD PTR [ebx-0x4d40f85f]
  419c94:	sti    
  419c95:	loop   0x419c8f
  419c97:	arpl   WORD PTR [ecx+0x32],sp
  419c9a:	or     esp,esi
  419c9c:	enter  0x3490,0xd9
  419ca0:	shl    ecx,cl
  419ca2:	sbb    ebx,DWORD PTR [edi+0x44]
  419ca5:	loopne 0x419c7d
  419ca7:	sbb    ch,BYTE PTR [eax+0x6]
  419caa:	in     eax,0x95
  419cac:	aaa    
  419cad:	pop    eax
  419cae:	mov    bh,BYTE PTR [edi-0x41e657b7]
  419cb4:	push   ds
  419cb5:	call   0x17ad:0x5e1697cd
  419cbc:	jge    0x419cf0
  419cbe:	xor    ch,al
  419cc0:	push   0x6b
  419cc2:	mov    ebp,0x1bd4197e
  419cc7:	in     eax,dx
  419cc8:	(bad)  
  419cc9:	pop    ebx
  419cca:	cmp    BYTE PTR [eax+0x994c1cc],cl
  419cd0:	cmp    dl,ah
  419cd2:	mov    dh,0x64
  419cd4:	xchg   BYTE PTR [eax+0x3f],dh
  419cd7:	iret   
  419cd8:	arpl   WORD PTR [eax-0x2e],sp
  419cdb:	cwde   
  419cdc:	iret   
  419cdd:	aaa    
  419cde:	jae    0x419c7a
  419ce0:	push   ss
  419ce1:	jge    0x419d56
  419ce3:	sub    DWORD PTR [edi+0xd],edx
  419ce6:	ds pop ss
  419ce8:	push   ebp
  419ce9:	mov    dh,0xc2
  419ceb:	jmp    DWORD PTR [ecx]
  419ced:	xchg   ebx,eax
  419cee:	ss push edi
  419cf0:	sub    BYTE PTR [ecx-0x7d150937],dl
  419cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf7:	adc    eax,0xcbf57345
  419cfc:	in     eax,0xf5
  419cfe:	push   edx
  419cff:	stos   DWORD PTR es:[edi],eax
  419d00:	outs   dx,BYTE PTR ds:[esi]
  419d01:	out    dx,eax
  419d02:	inc    ebx
  419d03:	ret    
  419d04:	pop    esi
  419d05:	and    eax,0x73219791
  419d0a:	mov    al,0x3c
  419d0c:	daa    
  419d0d:	mov    eax,ds:0x41453d7e
  419d12:	xchg   BYTE PTR [eax-0x5ab54337],bh
  419d18:	not    bh
  419d1a:	mov    dh,0x70
  419d1c:	push   esi
  419d1d:	(bad)  
  419d1e:	mov    al,0x0
  419d20:	lock mov eax,ds:0xfc9363c8
  419d26:	stos   BYTE PTR es:[edi],al
  419d27:	adc    esi,ebp
  419d29:	in     eax,dx
  419d2a:	add    eax,edi
  419d2c:	xchg   ebx,eax
  419d2d:	lods   eax,DWORD PTR ds:[esi]
  419d2e:	sbb    eax,0x6e25ea2
  419d33:	mov    ebx,0xb3067321
  419d38:	loopne 0x419d40
  419d3a:	ds inc ecx
  419d3c:	jmp    0x419d1b
  419d3e:	repz or bh,ch
  419d41:	jbe    0x419cce
  419d43:	cmp    BYTE PTR [esi-0x80],dh
  419d46:	mov    DWORD PTR [ecx+0x1812b197],edx
  419d4c:	pop    edi
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	jp     0x419d1a
  419d50:	inc    edi
  419d51:	mov    WORD PTR [eax+0x217d5432],fs
  419d57:	fmul   QWORD PTR [eax]
  419d59:	dec    ecx
  419d5a:	push   ss
  419d5b:	xchg   edi,eax
  419d5c:	clc    
  419d5d:	es jmp 0x270b:0xabe77924
  419d65:	les    ebx,FWORD PTR ds:0x7cacda4d
  419d6b:	jmp    0x4e729295
  419d70:	inc    ebp
  419d71:	ss push edi
  419d73:	aas    
  419d74:	jae    0x419d30
  419d76:	fchs   
  419d78:	jle    0x419da8
  419d7a:	xchg   sp,ax
  419d7c:	enter  0x46db,0xeb
  419d80:	push   es
  419d81:	mov    ch,0x7a
  419d83:	push   edx
  419d84:	sub    edx,DWORD PTR [ecx+0x39]
  419d87:	gs dec edi
  419d89:	outs   dx,BYTE PTR ds:[esi]
  419d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8b:	rol    BYTE PTR [edi+0x352a54ec],cl
  419d91:	and    DWORD PTR [esi+0x26],ebp
  419d94:	jmp    0xf318:0x23b16b2c
  419d9b:	xor    eax,0xbd6816f6
  419da0:	rcr    DWORD PTR [ebx-0x79],1
  419da3:	fadd   DWORD PTR [edi-0x50a50ee8]
  419da9:	int3   
  419daa:	leave  
  419dab:	cmp    eax,DWORD PTR [ecx-0x31a70e4]
  419db1:	push   ss
  419db2:	mov    esp,fs
  419db4:	mov    edi,DWORD PTR [edx]
  419db6:	test   DWORD PTR [edi-0x4c],ebp
  419db9:	stos   BYTE PTR es:[edi],al
  419dba:	je     0x419dfb
  419dbc:	and    BYTE PTR [edx+0x7a3b0e39],dh
  419dc2:	outs   dx,BYTE PTR ds:[esi]
  419dc3:	mov    ds:0x44d325e6,al
  419dc8:	dec    ebp
  419dc9:	pmulhw xmm1,XMMWORD PTR [esi+eax*2+0x12]
  419dcf:	mov    esp,ebp
  419dd1:	pop    ebp
  419dd2:	xlat   BYTE PTR ds:[ebx]
  419dd3:	in     eax,dx
  419dd4:	enter  0xe06a,0x55
  419dd8:	pop    edx
  419dd9:	ss mov dl,0x76
  419ddc:	push   ss
  419ddd:	nop
  419dde:	popf   
  419ddf:	dec    esi
  419de0:	ret    0xc080
  419de3:	in     al,0xb4
  419de5:	std    
  419de6:	pop    es
  419de7:	xor    edx,DWORD PTR [edx-0x6]
  419dea:	dec    ebp
  419deb:	xor    bh,dh
  419ded:	fld    QWORD PTR [ecx]
  419def:	inc    edi
  419df0:	push   esi
  419df1:	(bad)  
  419df2:	cld    
  419df3:	mov    bh,0x42
  419df5:	mov    edi,0x7f8b9a0c
  419dfa:	push   edx
  419dfb:	mov    eax,0x377d5cf9
  419e00:	xchg   ecx,eax
  419e01:	aas    
  419e02:	mov    bl,0x4a
  419e04:	retf   0x8174
  419e07:	dec    esi
  419e08:	or     eax,0x513027a6
  419e0d:	dec    edx
  419e0e:	(bad)  
  419e0f:	test   al,0x91
  419e11:	jmp    0x419e77
  419e13:	nop
  419e14:	mov    WORD PTR [esi-0x21],0x7c97
  419e1a:	cmp    ecx,DWORD PTR [eax-0x3f2e2c85]
  419e20:	bound  ebp,QWORD PTR [ebx+0x3cfa657]
  419e26:	xchg   edi,eax
  419e27:	inc    eax
  419e28:	cmp    DWORD PTR [edx-0x3f],ebx
  419e2b:	test   BYTE PTR [edi-0x138412ad],bl
  419e31:	mov    ds:0xa4f5d8ed,eax
  419e36:	inc    esp
  419e37:	xchg   esp,eax
  419e38:	mov    ch,bh
  419e3a:	sgdtd  [eax]
  419e3d:	ja     0x419e9f
  419e3f:	mov    ebx,0x9f184664
  419e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e45:	adc    cl,ch
  419e47:	aas    
  419e48:	sti    
  419e49:	imul   ebx,ebx,0x52789a45
  419e4f:	xor    ebp,DWORD PTR [esp+ecx*8-0x2d]
  419e53:	mov    eax,fs
  419e55:	test   BYTE PTR [esi+ebx*4+0x3910c672],dl
  419e5c:	test   eax,0xd89894fc
  419e61:	add    bl,BYTE PTR [edi+ecx*8]
  419e64:	arpl   WORD PTR [ecx+esi*2+0x2d635882],di
  419e6b:	jnp    0x419ec2
  419e6d:	inc    esi
  419e6e:	mov    al,ds:0xb6ef7dd
  419e73:	sub    esi,0x784bdc93
  419e79:	test   DWORD PTR [eax+0x7a],esi
  419e7c:	and    eax,DWORD PTR [ebx-0x3f]
  419e7f:	icebp  
  419e80:	mov    WORD PTR [ebx+0x7c417437],cs
  419e86:	pop    edx
  419e87:	pop    ecx
  419e88:	scas   eax,DWORD PTR es:[edi]
  419e89:	pop    ds
  419e8a:	fdivrp st(1),st
  419e8c:	push   ecx
  419e8d:	push   edx
  419e8e:	sub    dl,BYTE PTR [ebp-0x3bd57313]
  419e94:	lds    esi,FWORD PTR [ebx-0x4c411db6]
  419e9a:	ins    BYTE PTR es:[edi],dx
  419e9b:	inc    bp
  419e9d:	mov    bl,0x9
  419e9f:	mov    ah,BYTE PTR [edi+0x7b3e9e1c]
  419ea5:	and    esp,esp
  419ea7:	pop    ebx
  419ea8:	mov    cl,BYTE PTR [bp+di-0x4c]
  419eac:	pop    esi
  419ead:	int    0x24
  419eaf:	sbb    ebp,DWORD PTR [ebp-0x7d9880e9]
  419eb5:	imul   edi,ebx,0xffffffb4
  419eb8:	mov    edx,0x837f821e
  419ebd:	imul   esp,DWORD PTR [ebx+0xb],0x23
  419ec1:	mov    bl,0xd2
  419ec3:	jg     0x419e79
  419ec5:	sbb    bh,BYTE PTR [ebx]
  419ec7:	mov    dh,0x7c
  419ec9:	in     al,dx
  419eca:	sub    al,BYTE PTR [edi-0x1006875d]
  419ed0:	lods   al,BYTE PTR ds:[esi]
  419ed1:	mov    edi,0x460b5e0b
  419ed6:	popf   
  419ed7:	pop    edi
  419ed8:	repnz mov ch,0x22
  419edb:	lods   al,BYTE PTR ds:[esi]
  419edc:	and    DWORD PTR [ebx],0xffffffd5
  419edf:	jle    0x419f3f
  419ee1:	and    esi,DWORD PTR [esi+0x345e507a]
  419ee7:	mov    edi,0x7197515b
  419eec:	mov    ds:0x4cbab0bd,al
  419ef1:	pop    es
  419ef2:	loopne 0x419ee2
  419ef4:	jb     0x419f3e
  419ef6:	add    BYTE PTR ds:[eax+0x6a],dl
  419efa:	jmp    0xdf80:0x755f0d74
  419f01:	ret    
  419f02:	ficom  WORD PTR [ebx-0x5f]
  419f05:	js     0x419ed1
  419f07:	nop
  419f08:	dec    ebx
  419f09:	push   0x6d
  419f0b:	out    dx,eax
  419f0c:	jmp    0x3e92cb86
  419f11:	dec    ecx
  419f12:	mov    al,0xdf
  419f14:	jns    0x419eb4
  419f16:	add    BYTE PTR [eax+0x2c96aa0],0x55
  419f1d:	(bad)  
  419f1e:	pusha  
  419f1f:	mov    eax,ds:0x2d5ea3ec
  419f24:	mov    bh,0x8d
  419f26:	xor    eax,0x2d35f6c6
  419f2b:	out    0xa5,al
  419f2d:	jb     0x419ed2
  419f2f:	mov    es,WORD PTR [edx-0x21f329c5]
  419f35:	inc    ecx
  419f36:	sti    
  419f37:	(bad)  
  419f39:	bound  edi,QWORD PTR [edx-0x44b6065b]
  419f3f:	clc    
  419f40:	adc    al,0x47
  419f42:	sub    eax,0x1ccddf6e
  419f47:	aad    0x34
  419f49:	daa    
  419f4a:	cld    
  419f4b:	je     0x419fb1
  419f4d:	mov    bl,0xb9
  419f4f:	inc    esi
  419f50:	es xchg ah,ah
  419f53:	mov    ecx,0xf2ffbb2d
  419f58:	scas   eax,DWORD PTR es:[edi]
  419f59:	mov    esp,0xf7082df7
  419f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f60:	bound  esi,QWORD PTR [ebx-0x5e]
  419f63:	cmp    al,0x96
  419f65:	clc    
  419f66:	jmp    0xfdc09633
  419f6b:	iret   
  419f6c:	daa    
  419f6d:	in     ax,dx
  419f6f:	pushf  
  419f70:	in     eax,dx
  419f71:	lods   eax,DWORD PTR ds:[esi]
  419f72:	xor    esi,DWORD PTR [esi]
  419f74:	cli    
  419f75:	or     eax,esp
  419f77:	mov    dl,0x76
  419f79:	fwait
  419f7a:	mov    DWORD PTR [edi-0x6290a182],edx
  419f80:	xor    al,0x7
  419f82:	xor    ch,BYTE PTR [edx+eiz*2]
  419f85:	pop    ebx
  419f86:	dec    ebx
  419f87:	mov    ah,BYTE PTR [edi]
  419f89:	gs ins BYTE PTR es:[edi],dx
  419f8b:	lahf   
  419f8c:	adc    ebx,DWORD PTR [edi]
  419f8e:	push   esi
  419f8f:	inc    ebp
  419f90:	push   ss
  419f91:	pop    ds
  419f92:	jne    0x419f97
  419f94:	adc    DWORD PTR [edi+eax*4],0x4811b154
  419f9b:	test   al,0xf1
  419f9d:	ins    BYTE PTR es:[edi],dx
  419f9e:	pop    ebp
  419f9f:	dec    edi
  419fa0:	call   0x4ad9f790
  419fa5:	call   0xc8b96df1
  419faa:	shl    bl,0xcd
  419fad:	xchg   esi,eax
  419fae:	jns    0x419fe6
  419fb0:	pop    eax
  419fb1:	pop    es
  419fb2:	cli    
  419fb3:	int    0xd
  419fb5:	int3   
  419fb6:	mov    es,WORD PTR [eax]
  419fb8:	mov    eax,ds:0x651e69f2
  419fbd:	daa    
  419fbe:	ins    BYTE PTR es:[edi],dx
  419fbf:	ret    0x1190
  419fc2:	mov    al,0xec
  419fc4:	addr16 dec edx
  419fc6:	pop    ebp
  419fc7:	sbb    cl,dh
  419fc9:	add    edx,DWORD PTR ds:0x783427a
  419fcf:	scas   eax,DWORD PTR es:[di]
  419fd1:	les    ebx,FWORD PTR [esi]
  419fd3:	push   esp
  419fd4:	pusha  
  419fd5:	cs cli 
  419fd7:	inc    esi
  419fd8:	mov    esi,0x119ab513
  419fdd:	add    bl,bl
  419fdf:	jne    0x41a05a
  419fe1:	push   ebp
  419fe2:	fs leave 
  419fe4:	stos   DWORD PTR es:[edi],eax
  419fe5:	enter  0xcaee,0x57
  419fe9:	dec    edx
  419fea:	adc    eax,0x75fac714
  419fef:	mov    dl,0xd7
  419ff1:	arpl   WORD PTR [esi],di
  419ff3:	jmp    FWORD PTR [ebp+0x38]
  419ff6:	ja     0x419ff5
  419ff8:	out    0x26,eax
  419ffa:	ins    BYTE PTR es:[edi],dx
  419ffb:	loopne 0x41a02c
  419ffd:	jg     0x419ff8
  419fff:	stc    
  41a000:	xlat   BYTE PTR ds:[ebx]
  41a001:	into   
  41a002:	icebp  
  41a003:	pop    edi
  41a004:	lods   al,BYTE PTR ds:[esi]
  41a005:	push   ds
  41a006:	dec    ebx
  41a007:	stos   DWORD PTR es:[edi],eax
  41a008:	(bad)  
  41a009:	mov    dh,0x17
  41a00b:	stos   DWORD PTR es:[edi],eax
  41a00c:	fadd   DWORD PTR [edx+0x24]
  41a00f:	or     eax,0x55cfd4da
  41a014:	iret   
  41a015:	and    dh,al
  41a017:	leave  
  41a018:	mov    ds:0xfb0742a,al
  41a01d:	(bad)  
  41a01e:	mov    al,0x62
  41a020:	int3   
  41a021:	std    
  41a022:	out    dx,al
  41a023:	dec    ecx
  41a024:	pop    esp
  41a025:	jnp    0x419fd9
  41a027:	cdq    
  41a028:	daa    
  41a029:	adc    BYTE PTR [ebx+0x116c9b60],bl
  41a02f:	lds    ebx,FWORD PTR [edi-0x21963b38]
  41a035:	in     eax,0x41
  41a037:	jg     0x419fbb
  41a039:	test   eax,0xef6643fc
  41a03e:	stos   BYTE PTR es:[edi],al
  41a03f:	jns    0x41a015
  41a041:	add    eax,0x547c0475
  41a046:	mov    ah,0x0
  41a048:	(bad)  
  41a049:	fidivr WORD PTR [esi+0x2a]
  41a04c:	aas    
  41a04d:	inc    ebx
  41a04e:	and    BYTE PTR gs:[edx],cl
  41a051:	cli    
  41a052:	arpl   di,bx
  41a054:	sar    esp,cl
  41a056:	jmp    0x41a0bb
  41a058:	pop    edi
  41a059:	(bad)  
  41a05a:	in     eax,0x98
  41a05c:	or     DWORD PTR [edi+0x1e181eae],ebx
  41a062:	hlt    
  41a063:	mov    ds:0xf26d96ff,al
  41a068:	dec    esp
  41a069:	push   ss
  41a06a:	and    eax,0x340259e
  41a06f:	and    cl,BYTE PTR [ebx+0x21]
  41a072:	call   0xe011:0xe5ef9eee
  41a079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07a:	scas   eax,DWORD PTR es:[edi]
  41a07b:	pop    ebx
  41a07c:	xor    al,0xce
  41a07e:	mov    eax,0xa3222d1e
  41a083:	push   esp
  41a084:	cmp    ecx,DWORD PTR [edi+edx*1]
  41a087:	xchg   edi,eax
  41a088:	xchg   esp,eax
  41a089:	test   BYTE PTR [esi+ecx*2+0x13],ch
  41a08d:	cmp    DWORD PTR [ecx+ebx*1-0x73],eax
  41a091:	call   0xae1:0xff862ba2
  41a098:	imul   esi,edx,0x5c3e45ed
  41a09e:	jb     0x41a10e
  41a0a0:	call   0x2aef:0x6b1c4bd7
  41a0a7:	jne    0x41a0e4
  41a0a9:	add    edi,ebp
  41a0ab:	in     al,dx
  41a0ac:	pop    es
  41a0ad:	or     ecx,DWORD PTR [eax+0x2d]
  41a0b0:	push   0x25ff8513
  41a0b5:	inc    edx
  41a0b6:	jb     0x41a0a2
  41a0b8:	adc    cl,bh
  41a0ba:	adc    bl,bh
  41a0bc:	test   edx,esi
  41a0be:	(bad)
  41a0c1:	inc    esi
  41a0c2:	and    bl,al
  41a0c4:	xlat   BYTE PTR ds:[ebx]
  41a0c5:	fsubr  DWORD PTR [edi-0x4b]
  41a0c8:	mov    al,ch
  41a0ca:	cli    
  41a0cb:	shr    DWORD PTR [edi],cl
  41a0cd:	xchg   bl,dl
  41a0cf:	cli    
  41a0d0:	loopne 0x41a063
  41a0d2:	inc    ebx
  41a0d3:	jmp    0x8c9a757c
  41a0d8:	(bad)
  41a0db:	ja     0x41a06f
  41a0dd:	mov    ds:0x19243043,eax
  41a0e2:	jg     0x41a0c8
  41a0e4:	mov    ah,0x2f
  41a0e6:	mov    esi,0x582e6c44
  41a0eb:	cld    
  41a0ec:	popa   
  41a0ed:	jp     0x41a0bd
  41a0ef:	ja     0x41a0fa
  41a0f1:	std    
  41a0f2:	add    cl,ah
  41a0f4:	in     al,dx
  41a0f5:	(bad)  
  41a0f6:	dec    ecx
  41a0f7:	pop    esp
  41a0f8:	loop   0x41a11e
  41a0fa:	out    0x7d,eax
  41a0fc:	xchg   esp,eax
  41a0fd:	mov    BYTE PTR gs:[eax-0x2b2085ed],bh
  41a104:	and    DWORD PTR [edx+0x1a5338c2],0xffffffc0
  41a10b:	push   esp
  41a10c:	jmp    0x72b23acc
  41a111:	mov    bl,0x64
  41a113:	dec    ecx
  41a114:	stos   DWORD PTR es:[edi],eax
  41a115:	clc    
  41a116:	pop    ss
  41a117:	lea    edx,[ebx]
  41a119:	or     ah,BYTE PTR [ebx*2-0x1b7d1fc9]
  41a120:	cdq    
  41a121:	sbb    eax,0xf538b2ac
  41a126:	pop    esp
  41a127:	mov    esp,0x58b4b6c7
  41a12c:	sahf   
  41a12d:	push   edx
  41a12e:	stos   BYTE PTR es:[edi],al
  41a12f:	push   0x3e9a221f
  41a134:	je     0x41a0d3
  41a136:	pop    es
  41a137:	sub    eax,0x98c631fa
  41a13c:	mov    ebp,DWORD PTR [edi-0x46902b37]
  41a142:	nop
  41a143:	xchg   ebx,eax
  41a144:	icebp  
  41a145:	inc    edx
  41a146:	mov    ss,WORD PTR ds:0xc5a81bf0
  41a14c:	mov    bl,0x87
  41a14e:	mov    cl,0x43
  41a150:	dec    ebx
  41a151:	ins    BYTE PTR es:[edi],dx
  41a152:	test   edi,edx
  41a154:	push   0xaae70072
  41a159:	sbb    eax,0x7667e73f
  41a15e:	fisttp DWORD PTR [eax-0x179cec4d]
  41a164:	adc    DWORD PTR [eax+0x67086b7c],esi
  41a16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16b:	jecxz  0x41a0fc
  41a16d:	and    al,0x85
  41a16f:	(bad)  
  41a170:	push   ebx
  41a171:	add    DWORD PTR [eax+ebp*1-0x9],esp
  41a175:	dec    esi
  41a176:	inc    eax
  41a177:	(bad)  
  41a178:	sbb    DWORD PTR [ecx],esi
  41a17a:	nop
  41a17b:	jl     0x41a128
  41a17d:	mov    cl,dh
  41a17f:	xor    DWORD PTR [edi],edx
  41a181:	dec    edx
  41a182:	and    ah,BYTE PTR [ecx]
  41a184:	fucom  st(3)
  41a186:	leave  
  41a187:	aas    
  41a188:	dec    ebx
  41a189:	adc    eax,0x7ebe315c
  41a18e:	jo     0x41a188
  41a190:	es (bad) 
  41a193:	jecxz  0x41a140
  41a195:	imul   ebx,edx,0x39
  41a198:	lods   eax,DWORD PTR ds:[esi]
  41a199:	dec    eax
  41a19a:	inc    ebp
  41a19b:	xchg   dh,bl
  41a19d:	fidiv  DWORD PTR [ebx+0x5d]
  41a1a0:	push   eax
  41a1a1:	mov    dl,0x7c
  41a1a3:	mov    esp,0xb089d03f
  41a1a8:	cmp    al,0x6b
  41a1aa:	shr    DWORD PTR [esi+ebx*4],1
  41a1ad:	nop
  41a1ae:	jp     0x41a14b
  41a1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b1:	into   
  41a1b2:	lock inc esp
  41a1b4:	test   ah,0x71
  41a1b7:	and    eax,0xa319f5e3
  41a1bc:	xchg   ebx,eax
  41a1bd:	lock loop 0x41a14d
  41a1c0:	sbb    BYTE PTR [esi+edx*1],0xd6
  41a1c4:	ret    0x243a
  41a1c7:	cli    
  41a1c8:	mov    bl,0xc4
  41a1ca:	mov    dh,0x51
  41a1cc:	sbb    eax,0x32f3a050
  41a1d1:	adc    al,0x6e
  41a1d3:	xor    eax,0x8432c8bf
  41a1d8:	sub    edi,DWORD PTR [esi]
  41a1da:	fcmovbe st,st(2)
  41a1dc:	inc    ebx
  41a1dd:	jp     0x41a1d3
  41a1df:	fisttp QWORD PTR [si-0x64]
  41a1e3:	xchg   edi,eax
  41a1e4:	mov    al,0xf3
  41a1e6:	loopne 0x41a17a
  41a1e8:	maxps  xmm1,xmm4
  41a1eb:	push   0x166745c8
  41a1f0:	int3   
  41a1f1:	inc    eax
  41a1f2:	fsubp  st(2),st
  41a1f4:	mov    edi,0xac124b66
  41a1f9:	jae    0x41a241
  41a1fb:	mov    al,ds:0x119c4fe
  41a200:	sbb    BYTE PTR [ecx+ecx*1],cl
  41a203:	mov    esi,0xe7c15d15
  41a208:	retf   
  41a209:	sub    ecx,ecx
  41a20b:	push   edi
  41a20c:	jge    0x41a231
  41a20e:	mov    BYTE PTR [ebx+0x19],dh
  41a211:	cmp    eax,0xca09c178
  41a216:	inc    ebx
  41a217:	data16 clc 
  41a219:	pop    ecx
  41a21a:	scas   eax,DWORD PTR es:[edi]
  41a21b:	pop    ebp
  41a21c:	mov    edi,0xe10f07aa
  41a221:	jl     0x41a240
  41a223:	call   DWORD PTR [eax+0x4efe4bd9]
  41a229:	dec    esi
  41a22a:	sar    BYTE PTR [eax],1
  41a22c:	cdq    
  41a22d:	fwait
  41a22e:	adc    cl,ah
  41a230:	inc    eax
  41a231:	push   es
  41a232:	mov    ebx,0x44e27c51
  41a237:	lock mov al,ds:0xdbb9f479
  41a23d:	pop    ebx
  41a23e:	popf   
  41a23f:	sub    bh,bh
  41a241:	(bad)  
  41a242:	xchg   esp,eax
  41a243:	xor    ah,BYTE PTR ds:0xb738f43
  41a249:	push   0xffffffec
  41a24b:	cmp    al,0xf9
  41a24d:	out    0x16,al
  41a24f:	sub    cl,bh
  41a251:	sub    al,0x85
  41a253:	mov    ds:0x959c4f91,eax
  41a258:	mov    ebx,0xd060f54b
  41a25d:	add    al,0x1f
  41a25f:	adc    ah,0x34
  41a262:	stos   BYTE PTR es:[edi],al
  41a263:	pop    ss
  41a264:	addr16 dec esi
  41a266:	mov    DWORD PTR [ecx+0x5f87244c],esi
  41a26c:	jns    0x41a274
  41a26e:	in     eax,dx
  41a26f:	lea    ecx,[ebx-0x2beea8]
  41a275:	jg     0x41a256
  41a277:	iret   
  41a278:	jnp    0x41a278
  41a27a:	mov    cl,0x58
  41a27c:	sbb    BYTE PTR [ebx+ecx*8-0x28],al
  41a280:	sbb    DWORD PTR [ebp+edx*8-0x9],esi
  41a284:	add    DWORD PTR [esi-0x756575b5],0x813fe746
  41a28e:	fdivr  DWORD PTR [ebx-0x4b]
  41a291:	push   esp
  41a292:	cmp    DWORD PTR [esi+0x4f],0x60
  41a296:	cmp    esp,0xd66ef03e
  41a29c:	mov    dh,0x11
  41a29e:	rcr    BYTE PTR [edi-0x9af8187],0x83
  41a2a5:	rol    DWORD PTR [edx],0xc6
  41a2a8:	pusha  
  41a2a9:	dec    esi
  41a2aa:	jns    0x41a25f
  41a2ac:	ins    BYTE PTR es:[edi],dx
  41a2ad:	lock dec edi
  41a2af:	in     al,dx
  41a2b0:	std    
  41a2b1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b3:	daa    
  41a2b4:	jb     0x41a258
  41a2b6:	fst    DWORD PTR [ebp-0x24c9896d]
  41a2bc:	add    DWORD PTR ds:0x9e91fec8,eax
  41a2c2:	mov    al,0xad
  41a2c4:	cvttps2pi mm4,QWORD PTR [edi+0x32]
  41a2c8:	sub    al,0xf1
  41a2ca:	mov    ds:0x8d143df9,eax
  41a2cf:	inc    edx
  41a2d0:	sbb    al,0xaf
  41a2d2:	sub    DWORD PTR [esi+0x38],0xffffffdd
  41a2d6:	mov    ebp,0xf26af776
  41a2db:	mov    ebx,0xcb6ddea3
  41a2e0:	adc    ebp,DWORD PTR [ebx+0x60e761cb]
  41a2e6:	and    DWORD PTR [esi],edx
  41a2e8:	in     al,0xab
  41a2ea:	sbb    ebp,0x91e7a2a3
  41a2f0:	mov    ah,0x52
  41a2f2:	lods   eax,DWORD PTR ds:[esi]
  41a2f3:	sahf   
  41a2f4:	aas    
  41a2f5:	ins    BYTE PTR es:[edi],dx
  41a2f6:	push   ecx
  41a2f7:	icebp  
  41a2f8:	call   0x91bc:0xccb68cc1
  41a2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a300:	into   
  41a301:	ins    BYTE PTR es:[edi],dx
  41a302:	push   ecx
  41a303:	mov    ebp,ds
  41a305:	xchg   ecx,eax
  41a306:	pop    edi
  41a307:	test   eax,0xb8800a5e
  41a30c:	mov    eax,0xea1e9d88
  41a311:	(bad)  
  41a312:	pop    ebp
  41a313:	cmp    DWORD PTR [ecx],eax
  41a315:	sub    al,0x76
  41a317:	in     eax,0x99
  41a319:	scas   al,BYTE PTR es:[edi]
  41a31a:	jmp    0x11bf2e55
  41a31f:	mov    edx,0xa491d236
  41a324:	ror    ecx,0xb4
  41a327:	retf   
  41a328:	adc    ah,BYTE PTR [edx+0x1c]
  41a32b:	sar    BYTE PTR [ebp+0x7],0x84
  41a32f:	xor    esi,ecx
  41a331:	fnstcw WORD PTR [ebx-0x4f3633b2]
  41a337:	ss sub al,0xca
  41a33a:	arpl   WORD PTR [ebp+ebp*1+0x1530a95],di
  41a341:	div    BYTE PTR [edx-0x5b]
  41a344:	push   es
  41a345:	gs je  0x41a38d
  41a348:	lods   al,BYTE PTR ds:[esi]
  41a349:	mov    ds:0xcc55fd8d,eax
  41a34e:	jae    0x41a315
  41a350:	add    BYTE PTR [edx-0x77c37cc0],0x95
  41a357:	arpl   bx,ax
  41a359:	(bad)  
  41a35a:	fdivr  st,st(5)
  41a35c:	cmp    esi,edi
  41a35e:	ret    
  41a35f:	push   ebx
  41a360:	mul    al
  41a362:	and    DWORD PTR [edx+esi*2-0x2219fcde],edx
  41a369:	pusha  
  41a36a:	jmp    0xc897abb3
  41a36f:	imul   ecx,DWORD PTR [ecx-0x5dbab738],0x71
  41a376:	cli    
  41a377:	pop    esp
  41a378:	imul   WORD PTR [edx-0x56ca4992]
  41a37f:	(bad)  
  41a380:	idiv   DWORD PTR [edi+ebx*8+0x16]
  41a384:	mov    bl,0xf4
  41a386:	or     ch,BYTE PTR [eax+0x449448cc]
  41a38c:	push   ebx
  41a38d:	fnstenv [edi+0x6eff1091]
  41a393:	int    0x12
  41a395:	inc    ebp
  41a396:	jno    0x41a3e7
  41a398:	or     DWORD PTR [esp+eiz*4],edi
  41a39b:	ret    
  41a39c:	ins    BYTE PTR es:[edi],dx
  41a39d:	popa   
  41a39e:	or     dh,BYTE PTR [ebp-0x399a26c1]
  41a3a4:	or     ah,ah
  41a3a6:	ret    
  41a3a7:	xchg   ecx,eax
  41a3a8:	jns    0x41a336
  41a3aa:	xor    edx,edi
  41a3ac:	xchg   ecx,eax
  41a3ad:	adc    BYTE PTR [ebp+eiz*4+0x32],0xf
  41a3b2:	dec    edi
  41a3b3:	rcr    BYTE PTR [ecx],cl
  41a3b5:	add    ch,0x26
  41a3b8:	aaa    
  41a3b9:	dec    esi
  41a3ba:	(bad)  
  41a3bb:	sub    al,0x88
  41a3bd:	ins    DWORD PTR es:[edi],dx
  41a3be:	sahf   
  41a3bf:	add    BYTE PTR [edx],0x25
  41a3c2:	leave  
  41a3c3:	xchg   esp,eax
  41a3c4:	imul   esp,esp,0xff779d05
  41a3ca:	fsubr  st,st(4)
  41a3cc:	sahf   
  41a3cd:	lahf   
  41a3ce:	cmp    esp,DWORD PTR [eax]
  41a3d0:	adc    DWORD PTR [ebp+0x58],ebp
  41a3d3:	inc    ecx
  41a3d4:	cmp    al,0xd0
  41a3d6:	in     al,0xc6
  41a3d8:	pop    edi
  41a3d9:	aaa    
  41a3da:	mov    esp,0xf0ebd30d
  41a3df:	xchg   edx,eax
  41a3e0:	inc    ebx
  41a3e1:	aas    
  41a3e2:	mov    eax,ds:0x74444ff9
  41a3e7:	jnp    0x41a3b0
  41a3e9:	inc    edi
  41a3ea:	ffreep st(6)
  41a3ec:	xchg   ebp,eax
  41a3ed:	ret    
  41a3ee:	mov    ds:0x298f33a0,al
  41a3f3:	or     DWORD PTR [edi],0xffffff97
  41a3f6:	and    DWORD PTR es:[eax],ecx
  41a3f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3fa:	add    al,0x19
  41a3fc:	push   0xc1a7f87
  41a401:	cmp    edx,ecx
  41a403:	adc    ebx,eax
  41a405:	cs mov bl,0x7b
  41a408:	pop    ss
  41a409:	inc    ebp
  41a40a:	mov    ch,0x1a
  41a40c:	adc    eax,0xceb48c2c
  41a411:	div    BYTE PTR [ecx-0x1]
  41a414:	mov    cl,0x95
  41a416:	or     al,0xeb
  41a418:	icebp  
  41a419:	xchg   esi,eax
  41a41a:	mov    ebp,0x17d8b7c0
  41a41f:	jae    0x41a452
  41a421:	mov    ebp,0xfa42d771
  41a426:	sub    esi,DWORD PTR [esp+ebp*8+0x1c]
  41a42a:	mov    WORD PTR [esi+0x29085d77],?
  41a430:	mov    al,ds:0xf5cee32f
  41a435:	push   0xffffffad
  41a437:	push   esp
  41a438:	or     eax,0x5af6e75
  41a43d:	nop
  41a43e:	pop    ds
  41a43f:	push   es
  41a440:	push   ebp
  41a441:	pop    ds
  41a442:	int3   
  41a443:	sub    al,0xf5
  41a445:	aad    0xf0
  41a447:	add    eax,DWORD PTR [edi+0x5f9a0b5b]
  41a44d:	dec    esi
  41a44e:	adc    BYTE PTR [esi+0xf],ah
  41a451:	dec    ebp
  41a452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a453:	(bad)  
  41a454:	pusha  
  41a455:	sub    cl,bl
  41a457:	push   ebx
  41a458:	and    eax,0x434aee21
  41a45d:	xchg   ebx,eax
  41a45e:	sbb    DWORD PTR [edi],ebx
  41a460:	xor    al,0x41
  41a462:	loop   0x41a48a
  41a464:	sub    ch,BYTE PTR [edi+edx*8]
  41a467:	outs   dx,DWORD PTR ds:[esi]
  41a468:	and    eax,0xab7f50e1
  41a46d:	jae    0x41a465
  41a46f:	popa   
  41a470:	push   edx
  41a471:	scas   eax,DWORD PTR es:[edi]
  41a472:	imul   edx,DWORD PTR [edx-0x6d],0xffffff9b
  41a476:	xchg   ecx,eax
  41a477:	mov    ecx,?
  41a479:	xchg   esp,eax
  41a47a:	lahf   
  41a47b:	dec    ebp
  41a47c:	rcl    DWORD PTR [esi],0xf8
  41a47f:	mov    eax,ds:0x8dba53dd
  41a484:	retf   0x4285
  41a487:	lahf   
  41a488:	adc    al,0x8d
  41a48a:	in     al,dx
  41a48b:	(bad)  
  41a48c:	data16 add bl,bl
  41a48f:	jnp    0x41a430
  41a491:	cdq    
  41a492:	shr    BYTE PTR [edx+0x693d6df6],0xa1
  41a499:	js     0x41a43c
  41a49b:	aas    
  41a49c:	mov    bh,0xe6
  41a49e:	xchg   ebx,eax
  41a49f:	stc    
  41a4a0:	adc    eax,0x3a19b89a
  41a4a5:	or     al,0x92
  41a4a7:	(bad)  
  41a4a8:	cli    
  41a4a9:	rcr    al,1
  41a4ab:	sbb    esp,DWORD PTR [ebx+0x97946a5]
  41a4b1:	adc    BYTE PTR [edi+0x53cbef6d],dh
  41a4b7:	aas    
  41a4b8:	push   ebp
  41a4b9:	iret   
  41a4ba:	sbb    ch,cl
  41a4bc:	mov    cl,0x18
  41a4be:	addr16 mov ah,0x21
  41a4c1:	int    0x2c
  41a4c3:	adc    BYTE PTR [eax+0x7d],dl
  41a4c6:	pop    esp
  41a4c7:	scas   eax,DWORD PTR es:[edi]
  41a4c8:	clc    
  41a4c9:	pop    ebp
  41a4ca:	iret   
  41a4cb:	iret   
  41a4cc:	test   BYTE PTR [edi-0x5b],dl
  41a4cf:	mov    BYTE PTR [eax-0x8],dh
  41a4d2:	(bad)  
  41a4d3:	jge    0x41a46c
  41a4d5:	(bad)  
  41a4d6:	out    0xde,al
  41a4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d9:	mov    edi,0x4ae02abb
  41a4de:	out    dx,eax
  41a4df:	fldenv [edi+edi*1+0x0]
  41a4e3:	cli    
  41a4e4:	aad    0x7
  41a4e6:	ss nop
  41a4e8:	xor    edx,DWORD PTR [ecx]
  41a4ea:	test   eax,0xcf231f75
  41a4ef:	sbb    DWORD PTR [ebx+0x7c],ecx
  41a4f2:	xchg   BYTE PTR [esi+0x71],ch
  41a4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f6:	out    dx,eax
  41a4f7:	and    ax,0x83a7
  41a4fb:	sbb    eax,0xfed0f1ea
  41a500:	cmp    BYTE PTR [ebp+0x22],al
  41a503:	xchg   BYTE PTR [edx+0x2d4eae25],cl
  41a509:	push   esi
  41a50a:	jmp    0x41a510
  41a50c:	(bad)  
  41a50d:	sbb    bh,bl
  41a50f:	pop    ecx
  41a510:	inc    edi
  41a511:	add    al,BYTE PTR [esi-0x58]
  41a514:	push   edx
  41a515:	iret   
  41a516:	mov    al,ds:0x2ab0c62b
  41a51b:	jne    0x41a4ba
  41a51d:	test   BYTE PTR [esi+0x5795d363],ch
  41a523:	sub    BYTE PTR [ebx-0x7],0x9e
  41a527:	rcl    BYTE PTR [edi-0x71],1
  41a52a:	inc    ecx
  41a52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a52c:	ficomp DWORD PTR [eax-0x7a]
  41a52f:	call   0x2462aef7
  41a534:	pop    es
  41a535:	mov    ds:0xed26e106,eax
  41a53a:	ficom  WORD PTR [eax]
  41a53c:	mov    edi,0x15a57477
  41a541:	push   esp
  41a542:	lahf   
  41a543:	pop    ecx
  41a544:	lods   al,BYTE PTR ds:[esi]
  41a545:	call   0x6571:0x5e809ddf
  41a54c:	xor    al,0x4a
  41a54e:	(bad)  
  41a54f:	sub    DWORD PTR [ebx],edx
  41a551:	sub    DWORD PTR [esi+0x62e37ed1],ecx
  41a557:	inc    eax
  41a558:	inc    esp
  41a559:	loopne 0x41a592
  41a55b:	daa    
  41a55c:	cmp    al,0xee
  41a55e:	stc    
  41a55f:	sub    al,0x1
  41a561:	add    al,0xae
  41a563:	or     eax,0xf4693cc0
  41a568:	add    al,0x40
  41a56a:	jp     0x41a5d2
  41a56c:	mov    dh,0xe2
  41a56e:	jp     0x41a562
  41a570:	mov    ch,0x72
  41a572:	scas   al,BYTE PTR es:[edi]
  41a573:	lea    eax,[edx-0x6665479d]
  41a579:	mov    bl,0xbf
  41a57b:	push   es
  41a57c:	daa    
  41a57d:	dec    ebx
  41a57e:	xor    ch,BYTE PTR [ecx]
  41a580:	fld    TBYTE PTR [esi]
  41a582:	sahf   
  41a583:	mov    dl,0xe
  41a585:	add    bh,bl
  41a587:	and    eax,0xe67c2dcd
  41a58c:	es fadd st(6),st
  41a58f:	push   eax
  41a590:	mov    ebp,0x294f4183
  41a595:	imul   esi,DWORD PTR gs:[ebp+0x782d8337],0x77
  41a59d:	xlat   BYTE PTR ds:[ebx]
  41a59e:	pop    ecx
  41a59f:	cld    
  41a5a0:	sahf   
  41a5a1:	xor    ecx,edx
  41a5a3:	mov    ah,0x53
  41a5a5:	jmp    0x7459207e
  41a5aa:	jmp    0x41a5b0
  41a5ac:	dec    esi
  41a5ad:	fcomp  DWORD PTR [edi-0x1a]
  41a5b0:	jmp    0x3683:0xdc2d89e3
  41a5b7:	fmul   st,st(0)
  41a5b9:	mov    edx,0x62b5ca1a
  41a5be:	fs ja  0x41a544
  41a5c1:	nop
  41a5c2:	and    al,0xa
  41a5c4:	dec    ebp
  41a5c5:	or     DWORD PTR [edx-0x54],0xbf3fd1c9
  41a5cc:	ficomp DWORD PTR [ebp+0x6cfca246]
  41a5d2:	rol    DWORD PTR [esp+ebx*1],0x84
  41a5d6:	adc    DWORD PTR [ebx-0x27de52b5],0x74c028cc
  41a5e0:	nop
  41a5e1:	loop   0x41a619
  41a5e3:	pushf  
  41a5e4:	xor    eax,0xbee5885
  41a5e9:	(bad)  
  41a5ea:	loope  0x41a64e
  41a5ec:	cli    
  41a5ed:	mov    esp,0xbbda7950
  41a5f2:	bound  edi,QWORD PTR [edx]
  41a5f4:	test   BYTE PTR [edx-0x4f],ah
  41a5f7:	sbb    esp,esi
  41a5f9:	test   BYTE PTR [ebp+0x14],cl
  41a5fc:	inc    esi
  41a5fd:	jns    0x41a60e
  41a5ff:	jbe    0x41a65c
  41a601:	aad    0xfb
  41a603:	loop   0x41a655
  41a605:	inc    ebx
  41a606:	loope  0x41a5c3
  41a608:	sbb    eax,0x2a723283
  41a60d:	inc    ecx
  41a60e:	push   0xfffffffd
  41a610:	xor    ecx,0x106a6f3e
  41a616:	mov    ebp,0xa8d8bd72
  41a61b:	pop    edi
  41a61c:	add    BYTE PTR [eax],bl
  41a61e:	cdq    
  41a61f:	mov    ds:0x45c67d31,eax
  41a624:	push   ecx
  41a625:	adc    BYTE PTR [ebx],0xc2
  41a628:	gs jae 0x41a62e
  41a62b:	(bad)  
  41a62c:	sub    dh,ah
  41a62e:	mov    WORD PTR [edi-0x27],gs
  41a631:	call   0x802927c5
  41a636:	sahf   
  41a637:	sbb    eax,0x8744281b
  41a63c:	ja     0x41a60e
  41a63e:	cli    
  41a63f:	jmp    0x56f:0x28f9c95f
  41a646:	imul   edi,esi,0x7
  41a649:	fiadd  DWORD PTR [edi]
  41a64b:	inc    ebx
  41a64c:	mov    ds:0x435ac040,al
  41a651:	sbb    edx,edx
  41a653:	inc    ecx
  41a654:	ins    DWORD PTR es:[edi],dx
  41a655:	std    
  41a656:	push   ds
  41a657:	inc    ebp
  41a658:	sub    al,0xea
  41a65a:	das    
  41a65b:	and    eax,0xe3ee3873
  41a660:	sub    al,0x43
  41a662:	mov    bh,0xd
  41a664:	pop    edx
  41a665:	push   esi
  41a666:	xchg   BYTE PTR [ebp+0x4a],dl
  41a669:	inc    ebx
  41a66a:	cwde   
  41a66b:	mov    al,0x53
  41a66d:	ins    DWORD PTR es:[edi],dx
  41a66e:	mov    bh,0x1a
  41a670:	gs (bad) 
  41a672:	xor    BYTE PTR [ebp+0x64efd69e],dl
  41a678:	mov    BYTE PTR [ebx-0x3c10f90],ch
  41a67e:	and    DWORD PTR [ebx+0x1d18a7cf],esp
  41a684:	cmp    al,0xbd
  41a686:	jbe    0x41a623
  41a688:	jne    0x41a622
  41a68a:	pop    ss
  41a68b:	mov    WORD PTR [edx-0x6d],cs
  41a68e:	addr16 mov esp,0xc2151108
  41a694:	push   eax
  41a695:	mov    edi,0x76dbd98b
  41a69a:	cmp    eax,0xfcbcc72f
  41a69f:	add    al,0xc
  41a6a1:	push   edx
  41a6a2:	xor    dh,bl
  41a6a4:	(bad)  
  41a6a5:	shl    BYTE PTR [ebx],cl
  41a6a7:	mov    ds:0x55e2a7bf,al
  41a6ac:	aas    
  41a6ad:	mov    esp,0x28cfa94
  41a6b2:	inc    ecx
  41a6b3:	push   edx
  41a6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b5:	cwde   
  41a6b6:	(bad)  
  41a6b7:	jo     0x41a6b8
  41a6b9:	cmp    al,0xc7
  41a6bb:	push   ds
  41a6bc:	cwde   
  41a6bd:	mov    ebp,edx
  41a6bf:	jmp    0x41a672
  41a6c1:	xchg   ecx,eax
  41a6c2:	gs and eax,0x4ddbdd3a
  41a6c8:	rol    ch,cl
  41a6ca:	imul   esp,DWORD PTR [ebp-0x1b52e336],0xffffffd2
  41a6d1:	aad    0xae
  41a6d3:	dec    ecx
  41a6d4:	ins    DWORD PTR es:[edi],dx
  41a6d5:	gs pusha 
  41a6d7:	int3   
  41a6d8:	pop    ecx
  41a6d9:	xchg   edx,eax
  41a6da:	push   0xf93b10e6
  41a6df:	mov    dh,0xc
  41a6e1:	mov    eax,0xe8c515c4
  41a6e6:	mov    ecx,eax
  41a6e8:	jmp    0xd4fa:0x87378a21
  41a6ef:	add    dl,ah
  41a6f1:	aaa    
  41a6f2:	mov    ch,0xde
  41a6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f5:	pop    eax
  41a6f6:	out    dx,eax
  41a6f7:	adc    BYTE PTR ds:0x21e05642,0xef
  41a6fe:	xor    ah,BYTE PTR [ebp+0x7]
  41a701:	cmp    eax,0xeb911501
  41a706:	cmp    BYTE PTR [ebx],cl
  41a708:	retf   
  41a709:	mov    dh,0x7d
  41a70b:	mov    WORD PTR [esi-0x53f1b33d],cs
  41a711:	dec    edx
  41a712:	adc    BYTE PTR [ecx],ch
  41a714:	loope  0x41a771
  41a716:	push   ebp
  41a717:	xchg   ebp,eax
  41a718:	sub    BYTE PTR [esi],0xd8
  41a71b:	sub    eax,0x78c0906
  41a720:	in     eax,dx
  41a721:	xor    al,0x39
  41a723:	xchg   edx,eax
  41a724:	imul   edx,DWORD PTR [ecx+0x476914c6],0x62f179c7
  41a72e:	retf   0x30ba
  41a731:	xchg   esi,eax
  41a732:	cmp    DWORD PTR [ecx-0x5ccf4fae],esi
  41a738:	push   ebp
  41a739:	lea    eax,[edi-0x17d28eec]
  41a73f:	dec    esi
  41a740:	test   BYTE PTR [esi-0x48],bh
  41a743:	mov    bh,BYTE PTR [ecx+0x3e]
  41a746:	jnp    0x41a763
  41a748:	xchg   edi,eax
  41a749:	mov    ebp,0x7ac73478
  41a74e:	mov    edi,0xb7268ca0
  41a753:	adc    BYTE PTR [ecx-0x4245c9a1],bh
  41a759:	int    0xcb
  41a75b:	sub    DWORD PTR [edx],edx
  41a75d:	jbe    0x41a7b6
  41a75f:	into   
  41a760:	fimul  WORD PTR [edx]
  41a762:	or     ecx,edi
  41a764:	xor    al,BYTE PTR ds:[edi-0x20]
  41a768:	pop    esi
  41a769:	and    eax,0xc9874f41
  41a76e:	xor    ch,BYTE PTR [esi]
  41a770:	jmp    0x31c0:0x9745db5c
  41a777:	cmp    ebx,DWORD PTR [edi]
  41a779:	sti    
  41a77a:	imul   ebx,DWORD PTR [eax],0xc63b9d33
  41a780:	inc    esi
  41a781:	or     BYTE PTR [edi],dl
  41a783:	in     eax,dx
  41a784:	xchg   edi,eax
  41a785:	sbb    BYTE PTR [ecx+ecx*8-0x4],cl
  41a789:	popf   
  41a78a:	push   ebp
  41a78b:	out    0x74,al
  41a78d:	lods   eax,DWORD PTR ds:[esi]
  41a78e:	sub    DWORD PTR ds:0x879bf8cd,edx
  41a794:	sbb    BYTE PTR [eax],0xa3
  41a797:	cli    
  41a798:	into   
  41a799:	cwde   
  41a79a:	xchg   ecx,eax
  41a79b:	(bad)  
  41a79c:	in     al,dx
  41a79d:	or     BYTE PTR [edi+0x18],al
  41a7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a1:	push   0xc1d847cc
  41a7a6:	test   DWORD PTR [ebp-0x68900b2c],ebx
  41a7ac:	xchg   esi,eax
  41a7ad:	sub    BYTE PTR [ecx+0x52],dl
  41a7b0:	add    al,0x46
  41a7b3:	mov    ecx,0xedc326d2
  41a7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b9:	fucomi st,st(5)
  41a7bb:	arpl   WORD PTR [ecx],cx
  41a7bd:	xchg   DWORD PTR [eax+0x7d],edi
  41a7c0:	sub    cl,BYTE PTR [edi]
  41a7c2:	jo     0x41a7b4
  41a7c4:	jl     0x41a7a2
  41a7c6:	or     esi,DWORD PTR [ebp-0x39]
  41a7c9:	cli    
  41a7ca:	loop   0x41a828
  41a7cc:	add    ebp,DWORD PTR [edx-0x7fe13f75]
  41a7d2:	int3   
  41a7d3:	mov    ds:0x6b5bc77f,eax
  41a7d8:	daa    
  41a7d9:	in     eax,dx
  41a7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7db:	ds cmp al,0xd6
  41a7de:	cmp    eax,0x1a32a095
  41a7e3:	out    0xcb,al
  41a7e5:	mov    edx,0x99981e62
  41a7ea:	repnz and eax,0x5b6a23b6
  41a7f0:	or     eax,0x2df12d06
  41a7f5:	add    bl,cl
  41a7f7:	into   
  41a7f8:	std    
  41a7f9:	xchg   edi,eax
  41a7fa:	(bad)  
  41a7fb:	pop    esp
  41a7fc:	not    BYTE PTR [esi-0x4]
  41a7ff:	pop    esi
  41a800:	outs   dx,BYTE PTR ds:[esi]
  41a801:	xchg   edi,eax
  41a802:	sub    al,BYTE PTR [ecx]
  41a804:	mov    dl,0x48
  41a806:	ins    DWORD PTR es:[edi],dx
  41a807:	cmp    dl,BYTE PTR [esi-0xe]
  41a80a:	mov    ds,WORD PTR [eax]
  41a80c:	sub    ebp,DWORD PTR [edi-0x7c]
  41a80f:	or     DWORD PTR [ebx-0x660ecc52],esi
  41a815:	dec    edi
  41a816:	xchg   ecx,eax
  41a817:	xchg   ecx,eax
  41a818:	add    eax,0x387a0b20
  41a81d:	or     edi,DWORD PTR [edx]
  41a81f:	jb     0x41a818
  41a821:	rcr    BYTE PTR [edi],0x0
  41a824:	add    DWORD PTR [edx],ebp
  41a826:	add    ebp,DWORD PTR [ecx]
  41a828:	loop   0x41a836
  41a82a:	sub    BYTE PTR [ebp+0x5e597976],dl
  41a830:	push   edx
  41a831:	jmp    0x11d17c0e
  41a836:	out    0xec,al
  41a838:	(bad)  
  41a839:	fmul   QWORD PTR [ecx]
  41a83b:	jecxz  0x41a7c9
  41a83d:	inc    esi
  41a83e:	fldcw  WORD PTR [esi+0x5b]
  41a841:	sbb    DWORD PTR [ecx],esi
  41a843:	adc    BYTE PTR [ebp+0x56],dh
  41a846:	imul   esp,DWORD PTR [edx],0x3f
  41a849:	cmp    esi,DWORD PTR [ecx-0x1e]
  41a84c:	sti    
  41a84d:	push   es
  41a84e:	jae    0x41a8c3
  41a850:	jle    0x41a82a
  41a852:	fwait
  41a853:	stc    
  41a854:	gs in  al,dx
  41a856:	in     eax,0x92
  41a858:	fs in  al,dx
  41a85a:	xor    esi,DWORD PTR [edi+0x7c]
  41a85d:	fsub   QWORD PTR [edx]
  41a85f:	add    BYTE PTR [ecx-0x64],bl
  41a862:	sub    eax,0xbe664954
  41a867:	add    edi,esp
  41a869:	cs sub al,0x21
  41a86c:	sub    al,0xe8
  41a86e:	mov    eax,0xe121a2ab
  41a873:	scas   al,BYTE PTR es:[edi]
  41a874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a875:	push   es
  41a876:	mov    al,0x60
  41a878:	test   BYTE PTR [eax-0x64],0x15
  41a87c:	dec    eax
  41a87d:	push   ss
  41a87e:	inc    esi
  41a87f:	add    eax,0xae72ba1b
  41a884:	lods   al,BYTE PTR ds:[esi]
  41a885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a886:	xchg   DWORD PTR [edx+0xc34467b],edx
  41a88c:	mov    esp,0x74ee5b9
  41a891:	lods   eax,DWORD PTR ds:[esi]
  41a892:	les    esi,FWORD PTR [esi+0x24]
  41a895:	aam    0x1
  41a897:	leave  
  41a898:	inc    esi
  41a899:	pop    ss
  41a89a:	xchg   edi,eax
  41a89b:	aam    0x70
  41a89d:	ss xchg ecx,eax
  41a89f:	cmp    eax,0xffdf3bb3
  41a8a4:	test   BYTE PTR [esi+0x44],dh
  41a8a7:	repz (bad) 
  41a8a9:	mov    ebx,0x3814ea44
  41a8ae:	or     eax,0x8989e086
  41a8b3:	or     eax,0x8420ef1b
  41a8b8:	sub    DWORD PTR [ecx-0x6c],esi
  41a8bb:	cdq    
  41a8bc:	xor    eax,0x234cec75
  41a8c1:	in     al,dx
  41a8c2:	dec    eax
  41a8c3:	xchg   al,dl
  41a8c5:	inc    edi
  41a8c6:	mov    dl,0x3a
  41a8c8:	fs xchg edi,eax
  41a8ca:	int    0x4
  41a8cc:	cmp    ecx,DWORD PTR [edx+ebp*4+0x41f04f1f]
  41a8d3:	out    dx,al
  41a8d4:	lea    ecx,[eax-0x40]
  41a8d7:	add    dl,ah
  41a8d9:	dec    esi
  41a8da:	add    bh,BYTE PTR [ebx+ebx*1]
  41a8dd:	adc    al,0x82
  41a8df:	xchg   ebx,eax
  41a8e0:	imul   ebp,DWORD PTR [ebp-0x5e],0x4cce2ca0
  41a8e7:	in     eax,0xbb
  41a8e9:	sub    ebp,DWORD PTR [ebx+esi*8]
  41a8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ed:	pop    ebp
  41a8ee:	popa   
  41a8ef:	cmp    al,0xd8
  41a8f1:	daa    
  41a8f2:	arpl   WORD PTR [ebp-0x4f],di
  41a8f5:	aad    0xdb
  41a8f7:	add    eax,0x1e3438f8
  41a8fc:	cmp    ch,0x31
  41a8ff:	(bad)  
  41a900:	mov    es,ebx
  41a902:	(bad)  
  41a903:	dec    ebp
  41a904:	cmp    al,0x7c
  41a906:	shl    DWORD PTR [ecx],cl
  41a908:	mov    ebp,0x626608aa
  41a90d:	adc    eax,0x73a36f0f
  41a912:	mov    dl,al
  41a914:	sbb    cl,BYTE PTR [esi-0x4a326bbf]
  41a91a:	popf   
  41a91b:	lahf   
  41a91c:	sbb    eax,0x54ff1ad2
  41a921:	mov    WORD PTR [edx-0x63],ss
  41a924:	call   0x104a7373
  41a929:	dec    esp
  41a92a:	cmp    DWORD PTR gs:[edx+ebp*1-0x51],0xc6c7ff09
  41a933:	popf   
  41a934:	push   edx
  41a935:	xchg   ecx,eax
  41a936:	in     eax,dx
  41a937:	adc    BYTE PTR [ecx],al
  41a939:	aas    
  41a93a:	jge    0x41a950
  41a93c:	js     0x41a8ee
  41a93e:	or     dh,BYTE PTR [ebx+eiz*2-0x4ec0eb13]
  41a945:	into   
  41a946:	xor    eax,0xc0df01d5
  41a94b:	jecxz  0x41a8df
  41a94d:	not    BYTE PTR [edi+0x52]
  41a950:	jnp    0x41a928
  41a952:	or     ah,BYTE PTR [ebx-0x49]
  41a955:	mov    dh,0x5c
  41a957:	rcr    DWORD PTR [esi-0x2c],1
  41a95a:	mov    bh,0x83
  41a95c:	or     ah,BYTE PTR [ebp+edi*1-0x39]
  41a960:	mov    esp,0xc4af7baa
  41a965:	sar    DWORD PTR [esi*8-0xa615731],1
  41a96c:	mov    dh,0x33
  41a96e:	ins    DWORD PTR es:[edi],dx
  41a96f:	lods   eax,DWORD PTR ds:[esi]
  41a970:	shr    BYTE PTR [ebx+eiz*1+0x59],1
  41a974:	js     0x41a96a
  41a976:	fmul   DWORD PTR [esi+0x2e]
  41a979:	and    eax,DWORD PTR ds:0xf84adea7
  41a97f:	and    al,0x4
  41a981:	and    bl,BYTE PTR [esi]
  41a983:	sub    al,0x4
  41a985:	adc    ah,BYTE PTR [eax+ebx*8]
  41a988:	in     al,dx
  41a989:	das    
  41a98a:	sbb    eax,0x2c03649e
  41a98f:	loop   0x41a9e8
  41a991:	adc    DWORD PTR [ecx+esi*1+0x7c],ebp
  41a995:	fdiv   DWORD PTR [esi]
  41a997:	mov    esp,DWORD PTR [esi-0x11]
  41a99a:	pop    edx
  41a99b:	fmul   DWORD PTR [ebx*2+0x20629596]
  41a9a2:	sbb    ch,dl
  41a9a4:	add    ecx,edx
  41a9a6:	sbb    ch,BYTE PTR [edi]
  41a9a8:	inc    esp
  41a9a9:	or     dl,BYTE PTR fs:[ebp-0x74]
  41a9ad:	push   ebp
  41a9ae:	fwait
  41a9af:	sahf   
  41a9b0:	jae    0x41a998
  41a9b2:	pop    esp
  41a9b3:	les    ecx,FWORD PTR [ecx+0x5d]
  41a9b6:	pop    ss
  41a9b7:	jmp    0x41a9b7
  41a9b9:	mov    esi,esp
  41a9bb:	push   es
  41a9bc:	push   ss
  41a9bd:	out    dx,eax
  41a9be:	cmp    edx,edi
  41a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c1:	xchg   DWORD PTR [ebx+0x474a0f7e],eax
  41a9c7:	dec    ebx
  41a9c8:	jg     0x41a979
  41a9ca:	(bad)  
  41a9cb:	xor    ah,dl
  41a9cd:	push   edx
  41a9ce:	push   esi
  41a9cf:	test   eax,0xb43b9826
  41a9d4:	shl    dl,0xa3
  41a9d7:	aaa    
  41a9d8:	cmp    eax,0xcd5be2b1
  41a9dd:	mov    eax,0xe4e15134
  41a9e2:	mov    ah,0xac
  41a9e4:	xor    DWORD PTR [esi+esi*4+0x386e5211],0x5067f5ca
  41a9ef:	and    ch,bl
  41a9f1:	add    bl,BYTE PTR ds:0x8107e409
  41a9f7:	das    
  41a9f8:	cld    
  41a9f9:	pop    ecx
  41a9fa:	(bad)  
  41a9fb:	cmp    eax,0xf3a76cc0
  41aa00:	mov    esp,0x1135be0e
  41aa05:	popf   
  41aa06:	mov    bh,0x53
  41aa08:	sti    
  41aa09:	cs xchg ebx,eax
  41aa0b:	dec    edi
  41aa0c:	and    ch,BYTE PTR [ebx-0x6cdd263e]
  41aa12:	sub    al,0x5c
  41aa14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa15:	mov    edx,0xbb69189b
  41aa1a:	repz retf 0xec5c
  41aa1e:	adc    DWORD PTR [ebp+0x6b],esi
  41aa21:	shr    BYTE PTR [ecx+0x4a200d6b],0xd
  41aa28:	ds dec edi
  41aa2a:	mov    ds:0xe2eb8e2a,al
  41aa2f:	add    BYTE PTR [esi+0x4219d92d],cl
  41aa35:	xchg   ebp,eax
  41aa36:	retf   
  41aa37:	dec    eax
  41aa38:	cmp    eax,0xb5a550b1
  41aa3d:	cli    
  41aa3e:	xor    ebx,DWORD PTR [edi+0x7b]
  41aa41:	mov    ds:0x859cb684,eax
  41aa46:	cli    
  41aa47:	paddq  mm6,mm6
  41aa4a:	call   0xdb14:0x4d59ce1
  41aa51:	jg     0x41aa7b
  41aa53:	test   DWORD PTR ds:0x9a60be8f,ebp
  41aa59:	push   ds
  41aa5a:	mov    esi,0xe48a1ebf
  41aa5f:	std    
  41aa60:	cwde   
  41aa61:	(bad)  
  41aa62:	jno    0x41aa84
  41aa64:	arpl   si,sp
  41aa66:	inc    eax
  41aa67:	scas   al,BYTE PTR es:[edi]
  41aa68:	retf   
  41aa69:	or     al,0xac
  41aa6b:	dec    edi
  41aa6c:	cmc    
  41aa6d:	push   edx
  41aa6e:	pop    esp
  41aa70:	and    BYTE PTR [edi],0x10
  41aa73:	add    eax,0x54cb38ef
  41aa78:	mov    eax,0xb23b56ba
  41aa7d:	xor    eax,0x39164da5
  41aa82:	clc    
  41aa83:	sbb    ch,BYTE PTR [esi+0x15]
  41aa86:	fnstcw WORD PTR [esi]
  41aa88:	xchg   ecx,eax
  41aa89:	jecxz  0x41aa17
  41aa8b:	stos   DWORD PTR es:[edi],eax
  41aa8c:	jae    0x41aa37
  41aa8e:	push   esp
  41aa8f:	adc    al,0xdd
  41aa91:	xor    eax,0x9660f356
  41aa96:	lock jae 0x41aa5d
  41aa99:	ins    BYTE PTR es:[edi],dx
  41aa9a:	lods   eax,DWORD PTR ds:[esi]
  41aa9b:	inc    ecx
  41aa9c:	mov    esi,0x18185f8e
  41aaa1:	nop
  41aaa2:	rcr    BYTE PTR [ecx+0x16],cl
  41aaa5:	ret    
  41aaa6:	sar    al,0x79
  41aaa9:	xor    DWORD PTR [edx+0x10],edx
  41aaac:	scas   al,BYTE PTR es:[edi]
  41aaad:	out    dx,al
  41aaae:	out    dx,al
  41aaaf:	hlt    
  41aab0:	aam    0xbe
  41aab2:	sub    edi,DWORD PTR [ebx]
  41aab4:	fs test al,0xa4
  41aab7:	repz and cl,dh
  41aaba:	pop    ecx
  41aabb:	jne    0x41aa45
  41aabd:	mov    cs,WORD PTR [ebx]
  41aabf:	sbb    eax,0x2f4e95ac
  41aac4:	mov    cl,0x27
  41aac6:	out    0xab,eax
  41aac8:	stc    
  41aac9:	popa   
  41aaca:	(bad)  
  41aacb:	out    dx,eax
  41aacc:	jl     0x41ab26
  41aace:	mov    ebp,0xbb6d89cb
  41aad3:	test   al,0xa3
  41aad5:	cmp    BYTE PTR [ecx-0x360c2267],cl
  41aadb:	sub    BYTE PTR [edi+0x680ac371],0x7e
  41aae2:	iret   
  41aae3:	jae    0x41aa67
  41aae5:	fld    QWORD PTR [ebx-0x20]
  41aae8:	xor    DWORD PTR [eax+0x17],ebx
  41aaeb:	icebp  
  41aaec:	int3   
  41aaed:	cmp    ecx,edi
  41aaef:	loop   0x41ab01
  41aaf1:	add    eax,0x5bfcd62c
  41aaf6:	jp     0x41aa80
  41aaf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaf9:	ror    BYTE PTR [edx-0x21],1
  41aafc:	repz xor DWORD PTR [eax],esp
  41aaff:	out    0x1c,eax
  41ab01:	cld    
  41ab02:	sub    DWORD PTR [esi+0x7088be69],0xffffffcd
  41ab09:	popa   
  41ab0a:	ret    
  41ab0b:	sub    eax,0xbd861c25
  41ab10:	retf   0x8e99
  41ab13:	pop    ds
  41ab14:	add    DWORD PTR [ebp+ebp*2-0x4e],edx
  41ab18:	stc    
  41ab19:	in     eax,0x4b
  41ab1b:	inc    ebx
  41ab1c:	je     0x41ab5e
  41ab1e:	adc    esp,esi
  41ab20:	and    edx,edi
  41ab22:	out    0xae,al
  41ab24:	cwde   
  41ab25:	loopne 0x41ab72
  41ab27:	push   eax
  41ab28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab29:	jle    0x41aaf9
  41ab2b:	fist   DWORD PTR [edi]
  41ab2d:	xchg   ebx,eax
  41ab2e:	(bad)  
  41ab2f:	fimul  WORD PTR [edx]
  41ab31:	jne    0x41ab3c
  41ab33:	mov    eax,0xece0594a
  41ab38:	stc    
  41ab39:	(bad)  
  41ab3c:	adc    eax,0x4302923e
  41ab41:	add    DWORD PTR [edx+edx*4+0x1b94eace],edx
  41ab48:	stc    
  41ab49:	ficom  WORD PTR [edi-0xd]
  41ab4c:	cdq    
  41ab4d:	daa    
  41ab4e:	mov    BYTE PTR [eax+0x6b],ah
  41ab51:	sub    BYTE PTR [edi-0x74],dl
  41ab54:	repnz mov dl,0xf5
  41ab57:	jbe    0x41ab27
  41ab59:	xchg   bl,al
  41ab5b:	fnstcw WORD PTR [ebp-0x81be9b3]
  41ab61:	xor    esp,DWORD PTR ds:0x7ed2667b
  41ab67:	xchg   edx,eax
  41ab68:	out    0x4e,al
  41ab6a:	jecxz  0x41ab24
  41ab6c:	pusha  
  41ab6d:	sti    
  41ab6e:	shr    DWORD PTR [ebp+edi*4+0x60],0x6e
  41ab73:	dec    edx
  41ab74:	call   0x539b:0x3184537
  41ab7b:	imul   ebx,ebx,0xffffffc9
  41ab7e:	mov    edi,0xb56854ad
  41ab83:	dec    edx
  41ab84:	loopne 0x41ab13
  41ab86:	mov    ch,0xa4
  41ab88:	inc    BYTE PTR [edi+0x29239b6f]
  41ab8e:	xor    al,0xfe
  41ab90:	dec    eax
  41ab91:	mov    es,WORD PTR [eax]
  41ab93:	dec    esi
  41ab94:	sub    eax,0xd46327f0
  41ab99:	and    BYTE PTR [ebx],al
  41ab9b:	mov    bh,0xda
  41ab9d:	js     0x41abd7
  41ab9f:	pop    ecx
  41aba0:	push   ecx
  41aba1:	fbld   TBYTE PTR [edi-0x62]
  41aba4:	push   edx
  41aba5:	mov    BYTE PTR [ecx-0x7606d142],0x4a
  41abac:	sbb    dl,BYTE PTR [bx+di]
  41abaf:	mov    eax,0xeccc5502
  41abb4:	lahf   
  41abb5:	or     DWORD PTR [ebp-0x47640c69],ebp
  41abbb:	in     eax,dx
  41abbc:	lods   eax,DWORD PTR ds:[esi]
  41abbd:	or     eax,0x545e92bc
  41abc2:	sbb    eax,0xb67950be
  41abc7:	xchg   ecx,eax
  41abc8:	jno    0x41ab6a
  41abca:	xor    DWORD PTR [edi],edx
  41abcc:	mov    edi,0x8a3a53a1
  41abd1:	push   es
  41abd2:	adc    esp,DWORD PTR [ecx+0x50f89c84]
  41abd8:	mov    ch,0x3e
  41abda:	ja     0x41abf5
  41abdc:	jmp    0xf0d2:0x10ea83ac
  41abe3:	inc    edi
  41abe4:	iret   
  41abe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe6:	pusha  
  41abe7:	push   0x141599b8
  41abec:	(bad)
  41abf0:	popa   
  41abf1:	aaa    
  41abf2:	and    DWORD PTR [edi+0x6b],edi
  41abf5:	push   ecx
  41abf6:	mov    esp,0xfd0a1069
  41abfb:	or     eax,0xcbdd9558
  41ac00:	repnz shl ch,cl
  41ac03:	pop    ds
  41ac04:	(bad)  
  41ac06:	test   eax,esp
  41ac08:	clc    
  41ac09:	out    dx,al
  41ac0a:	test   esp,edx
  41ac0c:	cmc    
  41ac0d:	sub    BYTE PTR [edx+0x6bbcd3f6],0xc5
  41ac14:	ins    BYTE PTR es:[edi],dx
  41ac15:	ja     0x41abd9
  41ac17:	and    eax,0x45d62e35
  41ac1c:	fndisi(8087 only) 
  41ac1e:	sbb    ah,bl
  41ac20:	inc    esi
  41ac21:	ret    0xa62d
  41ac24:	repz push edi
  41ac26:	in     al,dx
  41ac27:	jbe    0x41abd6
  41ac29:	retf   0x9bb7
  41ac2c:	cmp    eax,DWORD PTR [eax+edi*1]
  41ac2f:	or     eax,0x2bb9eef2
  41ac34:	sub    DWORD PTR [ebx+0x461f571b],ebp
  41ac3a:	jno    0x41ac2f
  41ac3c:	sub    esi,DWORD PTR [edx+0x1]
  41ac3f:	xchg   esp,eax
  41ac40:	test   BYTE PTR [ecx],ah
  41ac42:	(bad)  
  41ac44:	sub    DWORD PTR [esi+0x11],eax
  41ac47:	xor    dh,ch
  41ac49:	scas   eax,DWORD PTR es:[edi]
  41ac4a:	mov    bl,0x2
  41ac4c:	and    al,0xd2
  41ac4e:	add    bl,bl
  41ac50:	aaa    
  41ac51:	mov    ebx,0x2f5adcd7
  41ac56:	jbe    0x41acbd
  41ac58:	pop    edx
  41ac59:	in     al,dx
  41ac5a:	pushfw 
  41ac5c:	or     dh,BYTE PTR [edi]
  41ac5e:	mov    ebx,0x6fd5821f
  41ac63:	xchg   edi,eax
  41ac64:	outs   dx,DWORD PTR ds:[esi]
  41ac65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac66:	mov    eax,ds:0x9df45763
  41ac6b:	add    al,0x4b
  41ac6d:	mov    dl,0x5a
  41ac6f:	push   esp
  41ac70:	push   cs
  41ac71:	stc    
  41ac72:	jae    0x41ac2b
  41ac74:	mov    ebp,0xcf0fed1e
  41ac79:	call   0x1af2b239
  41ac7e:	dec    ecx
  41ac7f:	xor    al,0x89
  41ac81:	dec    edi
  41ac82:	sysenter 
  41ac84:	mov    WORD PTR [edx],cs
  41ac86:	or     esp,DWORD PTR [ecx-0x2343b1f2]
  41ac8c:	sub    esi,DWORD PTR [eax+esi*8-0x3f6b74e0]
  41ac93:	in     eax,0x96
  41ac95:	jle    0x41ac63
  41ac97:	mov    bh,0xbd
  41ac99:	xlat   BYTE PTR ds:[ebx]
  41ac9a:	out    dx,al
  41ac9b:	cld    
  41ac9c:	ds or  bl,al
  41ac9f:	outs   dx,DWORD PTR gs:[esi]
  41aca1:	inc    eax
  41aca2:	xchg   edi,eax
  41aca3:	sbb    DWORD PTR [eax],esp
  41aca5:	cld    
  41aca6:	adc    ah,bh
  41aca8:	mov    ebp,0x4ece9b75
  41acad:	fist   DWORD PTR [edi+ecx*2-0x2f]
  41acb1:	pop    esi
  41acb2:	add    al,0x60
  41acb4:	mov    dl,0x50
  41acb6:	xor    edx,DWORD PTR [eax+0x5e]
  41acb9:	jg     0x41ace7
  41acbb:	shl    DWORD PTR [edi],cl
  41acbd:	push   ds
  41acbe:	jo     0x41aca9
  41acc0:	sbb    ebp,DWORD PTR [edx]
  41acc2:	and    BYTE PTR [edx-0x6e444ad6],bl
  41acc8:	xchg   edi,eax
  41acc9:	cli    
  41acca:	xor    al,0x28
  41accc:	mov    dl,0x59
  41acce:	xor    al,0x52
  41acd0:	lods   al,BYTE PTR ds:[esi]
  41acd1:	(bad)  
  41acd2:	xchg   edi,eax
  41acd3:	cmp    cl,BYTE PTR [edi]
  41acd5:	(bad)  
  41acd6:	mov    ah,0x14
  41acd8:	loopne 0x41acdc
  41acda:	imul   edi,DWORD PTR [esp+ebx*2+0x4a28cb5],0xffffff92
  41ace2:	jns    0x41ad28
  41ace4:	add    eax,0x505708b4
  41ace9:	hlt    
  41acea:	inc    edx
  41aceb:	ds pop ebp
  41aced:	inc    edx
  41acee:	push   edi
  41acef:	fs mov ecx,0x5d18d55
  41acf5:	push   edx
  41acf6:	(bad)  
  41acf7:	(bad)  
  41acf8:	jmp    0x2a7:0x375f059d
  41acff:	adc    ebp,DWORD PTR [esi+0x47]
  41ad02:	xchg   edi,eax
  41ad03:	aad    0x9e
  41ad05:	jb     0x41ad67
  41ad07:	pop    es
  41ad08:	clc    
  41ad09:	aad    0xd2
  41ad0b:	pop    ecx
  41ad0c:	or     BYTE PTR [esp+ebx*1+0x323f6861],cl
  41ad13:	lods   al,BYTE PTR ds:[esi]
  41ad14:	xchg   edi,eax
  41ad15:	fiadd  WORD PTR [edi]
  41ad17:	xchg   edi,eax
  41ad18:	(bad)  [ebx+0x2a]
  41ad1b:	cli    
  41ad1c:	jb     0x41ad2d
  41ad1e:	(bad)  
  41ad1f:	cmp    edi,ebp
  41ad21:	mov    edi,0xec71cd55
  41ad26:	aad    0xf4
  41ad28:	lea    ebx,[eax-0x15]
  41ad2b:	sub    eax,0xeb135b58
  41ad30:	sbb    ecx,DWORD PTR [edi-0x1584515a]
  41ad36:	std    
  41ad37:	pusha  
  41ad38:	pop    edi
  41ad39:	lahf   
  41ad3a:	or     ah,BYTE PTR [eax-0x1301acb5]
  41ad40:	mov    eax,ds:0xbea6665c
  41ad45:	shr    DWORD PTR [ecx+0x24],cl
  41ad48:	mov    bh,0xc6
  41ad4a:	or     ebx,ebp
  41ad4c:	or     eax,0x5f5f6a39
  41ad51:	int3   
  41ad52:	stc    
  41ad53:	fldcw  WORD PTR [esi]
  41ad55:	mov    al,ds:0x1199bcc
  41ad5a:	fwait
  41ad5b:	in     al,dx
  41ad5c:	bound  eax,QWORD PTR [esi]
  41ad5e:	and    bh,dh
  41ad60:	pop    ds
  41ad61:	rol    DWORD PTR ss:[esi-0x4ac5c98d],cl
  41ad68:	push   ecx
  41ad69:	outs   dx,BYTE PTR ds:[esi]
  41ad6a:	outs   dx,DWORD PTR ds:[esi]
  41ad6b:	inc    esp
  41ad6c:	pop    es
  41ad6d:	mov    eax,0x9afdc610
  41ad72:	fdiv   QWORD PTR [ebx-0x6b6541d9]
  41ad78:	loopne 0x41ad67
  41ad7a:	loope  0x41adde
  41ad7c:	stc    
  41ad7d:	les    edi,FWORD PTR [esi]
  41ad7f:	lds    esp,FWORD PTR [esi]
  41ad81:	adc    ebp,DWORD PTR [esi]
  41ad83:	add    bh,BYTE PTR [esi]
  41ad85:	(bad)
  41ad88:	inc    ecx
  41ad89:	imul   edi,DWORD PTR [edx],0xffffff8c
  41ad8c:	ja     0x41ad6d
  41ad8e:	pop    edi
  41ad8f:	test   eax,0x37d7382a
  41ad94:	add    DWORD PTR [edi],edi
  41ad96:	cmc    
  41ad97:	xchg   DWORD PTR [edx+eax*1],edi
  41ad9a:	mov    bh,cl
  41ad9c:	mov    edx,0x161abba0
  41ada1:	gs ja  0x41ad73
  41ada4:	mov    esi,0x2983c45c
  41ada9:	sti    
  41adaa:	std    
  41adab:	inc    eax
  41adac:	sbb    dl,al
  41adae:	add    DWORD PTR [edx-0x23],edi
  41adb1:	mov    ds:0x7b4fd5f2,al
  41adb6:	pop    edx
  41adb7:	xchg   esi,eax
  41adb8:	push   ecx
  41adb9:	push   edi
  41adba:	in     al,dx
  41adbb:	add    dh,BYTE PTR [ebx-0x71c03e13]
  41adc1:	aam    0x4
  41adc3:	fadd   QWORD PTR [esi+0x5]
  41adc6:	mov    al,0xf
  41adc8:	jp     0x41ae11
  41adca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcb:	jecxz  0x41ada5
  41adcd:	pop    esi
  41adce:	mov    esp,0xf7779de8
  41add3:	dec    ecx
  41add4:	das    
  41add5:	mov    dl,0x7c
  41add7:	or     DWORD PTR [eax-0x1820437a],esi
  41addd:	test   eax,0x543fbb72
  41ade2:	dec    bx
  41ade4:	pop    eax
  41ade5:	or     eax,0xc918f056
  41adea:	and    ch,BYTE PTR [eax-0x1f]
  41aded:	pop    edx
  41adee:	ss mov ebx,0x181ff65a
  41adf4:	ins    DWORD PTR es:[edi],dx
  41adf5:	add    eax,0x39e4af8a
  41adfa:	jle    0x41ad81
  41adfc:	rol    DWORD PTR [edi+0x39],0xf1
  41ae00:	fucomip st,st(1)
  41ae02:	(bad)  
  41ae03:	sar    DWORD PTR [eax],1
  41ae05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae06:	cli    
  41ae07:	out    dx,al
  41ae08:	out    dx,al
  41ae09:	hlt    
  41ae0a:	int    0xec
  41ae0c:	mov    eax,0xd5c2d8c0
  41ae12:	mov    gs,WORD PTR [esi-0x4cabf716]
  41ae18:	(bad)  
  41ae19:	jp     0x41add0
  41ae1b:	rcl    DWORD PTR [ebp-0x3a7f9cec],1
  41ae21:	or     BYTE PTR [edx-0xfeb2495],0xf3
  41ae28:	push   ds
  41ae29:	dec    edi
  41ae2a:	and    dh,cl
  41ae2c:	mov    edx,DWORD PTR [edx]
  41ae2e:	sahf   
  41ae2f:	adc    BYTE PTR [edi+0x3a],al
  41ae32:	or     bh,BYTE PTR [esi]
  41ae34:	repnz inc ecx
  41ae36:	inc    eax
  41ae37:	xchg   ecx,eax
  41ae38:	jmp    0xdf8f:0xa7772d25
  41ae3f:	pop    ebx
  41ae40:	out    dx,al
  41ae41:	ficom  WORD PTR [ebx-0xec96d7]
  41ae47:	iret   
  41ae48:	clc    
  41ae49:	and    DWORD PTR [ebx],edi
  41ae4b:	(bad)  
  41ae4c:	pop    ebx
  41ae4d:	push   0xffffffd6
  41ae4f:	ds test eax,0x24f368d5
  41ae55:	outs   dx,DWORD PTR ds:[esi]
  41ae56:	sahf   
  41ae57:	push   ebx
  41ae58:	fstp   DWORD PTR [ebp+ebx*2+0x61]
  41ae5c:	push   ebx
  41ae5d:	lds    eax,FWORD PTR [edi-0x4d]
  41ae60:	xor    eax,0x5b71ddc8
  41ae65:	jmp    0x41ae59
  41ae67:	pusha  
  41ae68:	repz aad 0xc3
  41ae6b:	dec    ebx
  41ae6c:	lea    esi,[ebx-0x50c3923e]
  41ae72:	adc    al,0xab
  41ae74:	out    0xf6,eax
  41ae76:	dec    esp
  41ae77:	pop    ss
  41ae78:	hlt    
  41ae79:	inc    edx
  41ae7a:	je     0x41ae95
  41ae7c:	(bad)  
  41ae7d:	cmp    BYTE PTR [esi+edi*8],bh
  41ae80:	mov    dh,BYTE PTR [ebx-0x904f774]
  41ae86:	nop
  41ae87:	pusha  
  41ae88:	mov    bh,0xd1
  41ae8a:	(bad)  
  41ae8b:	fsub   QWORD PTR [edx]
  41ae8d:	adc    eax,0x4a9c3ad7
  41ae92:	pop    ebx
  41ae93:	add    bp,WORD PTR [ebx+0x25567cf8]
  41ae9a:	sti    
  41ae9b:	pop    eax
  41ae9c:	push   esi
  41ae9d:	inc    ecx
  41ae9e:	paddd  mm4,QWORD PTR ss:[eax]
  41aea2:	repz add BYTE PTR es:[eax-0x3caef7fe],cl
  41aeaa:	out    0x63,al
  41aeac:	gs jae 0x41aedc
  41aeaf:	inc    esp
  41aeb0:	or     al,0xf3
  41aeb2:	cmp    edi,edx
  41aeb4:	fst    QWORD PTR [ebx-0x77]
  41aeb7:	psrlw  mm3,QWORD PTR [ecx+0x75ce14f]
  41aebe:	xchg   esi,eax
  41aebf:	nop
  41aec0:	lods   eax,DWORD PTR ds:[esi]
  41aec1:	mov    ch,0xb0
  41aec3:	in     eax,dx
  41aec4:	xchg   esi,eax
  41aec5:	jle    0x41aee0
  41aec7:	jge    0x41aecd
  41aec9:	ret    
  41aeca:	in     eax,dx
  41aecb:	inc    edi
  41aecc:	pop    ecx
  41aecd:	aam    0x5b
  41aecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed0:	jg     0x41aead
  41aed2:	and    BYTE PTR [ebx+0x19652ac2],0xdf
  41aed9:	pop    ss
  41aeda:	sbb    eax,esp
  41aedc:	mov    WORD PTR [ebp+0x48],gs
  41aedf:	ror    DWORD PTR [edi],0x1
  41aee2:	psubusb mm3,QWORD PTR [ecx+0x618cda03]
  41aee9:	cmp    DWORD PTR [edx+0x24],esp
  41aeec:	call   0x304c:0x2f014eff
  41aef3:	gs nop
  41aef5:	int    0x4b
  41aef7:	sbb    eax,0xefdb96bd
  41aefc:	and    eax,0x5531bf59
  41af01:	(bad)  
  41af02:	js     0x41af25
  41af04:	mov    ds:0x41d16f1a,al
  41af09:	aam    0x5b
  41af0b:	call   0x4841:0xa11ba302
  41af12:	call   0xfe78:0xf2cc39ad
  41af19:	int3   
  41af1a:	test   al,0xef
  41af1c:	popa   
  41af1d:	jge    0x41af5a
  41af1f:	in     eax,0x8e
  41af21:	ror    DWORD PTR [ebx-0x15c98985],cl
  41af27:	cmc    
  41af28:	in     al,dx
  41af29:	arpl   si,si
  41af2b:	lock xchg esp,eax
  41af2d:	dec    esi
  41af2e:	xchg   BYTE PTR [ebx-0x31d193e1],bh
  41af34:	lock mov BYTE PTR ds:0x4551dd7d,bh
  41af3b:	(bad)  
  41af3d:	push   edi
  41af3e:	pop    edx
  41af3f:	inc    edx
  41af40:	add    BYTE PTR [edi+0x3f],bl
  41af43:	mov    gs,WORD PTR [ecx-0x21]
  41af46:	inc    edx
  41af47:	dec    esi
  41af48:	into   
  41af49:	ror    BYTE PTR [esi],0x0
  41af4c:	jne    0x41af6c
  41af4e:	enter  0xe375,0xb4
  41af52:	jo     0x41af48
  41af54:	idiv   ch
  41af56:	pushf  
  41af57:	stos   BYTE PTR es:[edi],al
  41af58:	xor    BYTE PTR [ebx-0x76],0x12
  41af5c:	jne    0x41aefb
  41af5e:	pop    edi
  41af5f:	and    ah,bh
  41af61:	dec    ebp
  41af62:	mov    ch,0x67
  41af64:	loop   0x41af5e
  41af66:	imul   edx,ebx,0x70
  41af69:	mov    cl,0x7c
  41af6b:	in     al,0xc0
  41af6d:	cli    
  41af6e:	xchg   esi,eax
  41af6f:	jle    0x41afa6
  41af71:	dec    ecx
  41af72:	inc    edi
  41af73:	nop
  41af74:	mov    bh,0x81
  41af76:	or     cl,BYTE PTR [eax+0x5adf78a9]
  41af7c:	test   al,0x60
  41af7e:	in     al,dx
  41af7f:	les    esi,FWORD PTR [ebp+0x6d91fe1f]
  41af85:	xor    eax,DWORD PTR [eax+0x66]
  41af88:	imul   esp,DWORD PTR [ecx],0xc3f9a51b
  41af8e:	mov    ah,0xe9
  41af90:	js     0x41af1d
  41af92:	fs lock out 0xa4,al
  41af96:	pop    DWORD PTR ds:0xc588fc4c
  41af9c:	mov    ch,0x9b
  41af9e:	jecxz  0x41af48
  41afa0:	pushf  
  41afa1:	aam    0x60
  41afa3:	inc    ecx
  41afa4:	sub    dl,dh
  41afa6:	xchg   ebp,eax
  41afa7:	dec    edx
  41afa8:	scas   al,BYTE PTR es:[edi]
  41afa9:	jl     0x41af4b
  41afab:	iret   
  41afac:	pusha  
  41afad:	retf   0xbb27
  41afb0:	iret   
  41afb1:	mov    WORD PTR [edx],fs
  41afb3:	adc    al,0x50
  41afb5:	ret    0xeefe
  41afb8:	jl     0x41af97
  41afba:	(bad)  
  41afbb:	fwait
  41afbc:	jecxz  0x41afac
  41afbe:	mov    ecx,0x68016310
  41afc3:	ins    DWORD PTR es:[edi],dx
  41afc4:	sub    ebp,edi
  41afc6:	out    dx,al
  41afc7:	dec    esi
  41afc8:	inc    edi
  41afc9:	std    
  41afca:	jnp    0x41af77
  41afcc:	sbb    BYTE PTR [ebx-0x75],0x2e
  41afd0:	or     ebx,0x7bee78de
  41afd6:	outs   dx,DWORD PTR ds:[esi]
  41afd7:	push   eax
  41afd8:	stos   BYTE PTR es:[edi],al
  41afd9:	push   ebp
  41afda:	mov    al,0x4e
  41afdc:	mov    bl,0xae
  41afde:	test   al,0xf0
  41afe0:	out    dx,eax
  41afe1:	icebp  
  41afe2:	outs   dx,DWORD PTR ds:[esi]
  41afe3:	fld    DWORD PTR [eax+0x22]
  41afe6:	in     al,dx
  41afe7:	fwait
  41afe8:	jne    0x41afc7
  41afea:	jnp    0x41b014
  41afec:	xor    bl,BYTE PTR [eax+0xa5ab9e1]
  41aff2:	mov    edx,0xaf57069c
  41aff7:	hlt    
  41aff8:	mov    esi,DWORD PTR [eax+edi*2-0x41106b46]
  41afff:	cmp    DWORD PTR [ebp+0x7b4c6c76],eax
  41b005:	daa    
  41b006:	push   cs
  41b007:	repz (bad) 
  41b009:	dec    di
  41b00b:	or     DWORD PTR [esi-0x33],ebx
  41b00e:	out    0xf7,al
  41b010:	jle    0x41b07f
  41b012:	sbb    BYTE PTR [ecx],dh
  41b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b015:	data16 sahf 
  41b017:	xor    edi,edx
  41b019:	xor    eax,0xd0a472b5
  41b01e:	dec    esi
  41b01f:	or     ebx,DWORD PTR [edx+0x2e]
  41b022:	aam    0x95
  41b024:	out    dx,eax
  41b025:	mov    eax,ds:0xb90812d6
  41b02a:	ret    
  41b02b:	xor    ch,BYTE PTR [edi-0xe]
  41b02e:	and    eax,0xca873a01
  41b033:	push   ebx
  41b034:	xchg   esi,eax
  41b035:	dec    esi
  41b036:	sub    edx,DWORD PTR es:[esi+esi*2]
  41b03a:	test   DWORD PTR [eax-0x434ca6b4],ebp
  41b040:	shr    BYTE PTR [edi+0x1386a860],cl
  41b046:	inc    edx
  41b047:	pop    esi
  41b048:	jmp    0x41b054
  41b04a:	retf   
  41b04b:	jo     0x41b036
  41b04d:	or     ah,BYTE PTR [ebp-0x13]
  41b050:	ss (bad) 
  41b052:	mul    DWORD PTR [eax+edx*2-0x80]
  41b056:	sub    DWORD PTR [esi],0x7
  41b059:	sub    al,0xd1
  41b05b:	call   0x94be:0x1783e81b
  41b062:	lahf   
  41b063:	mov    cl,0xea
  41b065:	test   DWORD PTR [edx+esi*1-0x63],eax
  41b069:	mov    al,ds:0xc559db07
  41b06e:	lahf   
  41b06f:	or     dh,BYTE PTR ds:0x159a0de9
  41b075:	xchg   ebx,eax
  41b076:	test   eax,0xecbec9db
  41b07b:	mov    al,0x3b
  41b07d:	add    dh,BYTE PTR ds:0xf59316bb
  41b083:	retf   
  41b084:	outs   dx,DWORD PTR ds:[esi]
  41b085:	adc    BYTE PTR [eax+0x2603d0d3],bh
  41b08b:	xchg   BYTE PTR [ebp-0x63c626b9],dl
  41b091:	imul   eax,DWORD PTR [edi-0xe],0x10
  41b095:	mov    BYTE PTR [bp+si+0x45f4],dl
  41b09a:	mul    DWORD PTR [eax]
  41b09c:	add    cl,BYTE PTR ss:[edi-0xb8d01f0]
  41b0a3:	push   ebx
  41b0a4:	xor    DWORD PTR [esi],0xffffffb3
  41b0a7:	jecxz  0x41b11c
  41b0a9:	in     al,0x66
  41b0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ac:	mov    edi,0xa42a5eaf
  41b0b1:	add    dl,cl
  41b0b3:	fild   WORD PTR [edx+edx*2+0x57]
  41b0b7:	jno    0x41b0e8
  41b0b9:	dec    eax
  41b0ba:	adc    BYTE PTR [edx-0x18],bl
  41b0bd:	cmp    bh,al
  41b0bf:	pop    ss
  41b0c0:	xor    eax,0xda1ac0d4
  41b0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c6:	stos   DWORD PTR es:[edi],eax
  41b0c7:	jmp    0x41b0d1
  41b0c9:	push   ecx
  41b0ca:	push   edx
  41b0cb:	ret    
  41b0cc:	dec    edi
  41b0cd:	lahf   
  41b0ce:	iret   
  41b0cf:	data16 (bad) 
  41b0d1:	mov    eax,0x3eb8add7
  41b0d6:	or     esp,ecx
  41b0d8:	add    ecx,ecx
  41b0da:	xor    eax,0xbe97f864
  41b0df:	out    0xea,al
  41b0e1:	mov    cl,0x78
  41b0e3:	das    
  41b0e4:	sub    DWORD PTR [edi+eiz*8-0x3e3121a3],ebx
  41b0eb:	jmp    0x2820:0xbbe836de
  41b0f2:	test   bh,cl
  41b0f4:	jo     0x41b09b
  41b0f6:	enter  0xba8d,0x68
  41b0fa:	add    eax,DWORD PTR [ebp-0x4ba254e]
  41b100:	fstp   QWORD PTR [ebx-0x19195e9d]
  41b106:	retf   0x2e93
  41b109:	add    cl,BYTE PTR [ebx-0x6c7961f9]
  41b10f:	cli    
  41b110:	icebp  
  41b111:	dec    esp
  41b112:	mov    ebx,0x56a1ea1b
  41b117:	ja     0x41b118
  41b119:	aam    0x55
  41b11b:	xor    esi,DWORD PTR [ebx+0x3f946b8]
  41b121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b122:	ror    BYTE PTR [eax+0x4c],cl
  41b125:	mov    ebx,0xa7884aec
  41b12a:	push   ds
  41b12b:	mov    bh,0xf0
  41b12d:	push   0x5f18d7f9
  41b132:	lock dec eax
  41b134:	sbb    edi,DWORD PTR [ecx]
  41b136:	mov    BYTE PTR [ebx+0xdb3ce1e],dl
  41b13c:	inc    esi
  41b13d:	fistp  WORD PTR [esp+ebp*2-0x589ea1db]
  41b144:	shr    WORD PTR [ecx-0x67],cl
  41b148:	sbb    eax,0x36dcd32e
  41b14d:	jg     0x41b194
  41b14f:	xchg   ebx,eax
  41b150:	and    al,0x5b
  41b152:	out    dx,al
  41b153:	or     al,bl
  41b155:	jp     0x41b110
  41b157:	mov    WORD PTR [eax],?
  41b159:	push   esi
  41b15a:	mov    eax,0x318676b
  41b15f:	aaa    
  41b160:	adc    BYTE PTR [edx],bh
  41b162:	xchg   ebp,eax
  41b163:	fs jo  0x41b15d
  41b166:	and    eax,0xcf5001a6
  41b16b:	mov    al,0xf3
  41b16d:	lahf   
  41b16e:	stc    
  41b16f:	dec    ebx
  41b170:	add    al,0x14
  41b172:	or     al,0x7d
  41b174:	imul   ebp,DWORD PTR [edx-0x62],0x98362954
  41b17b:	adc    al,0xb3
  41b17d:	sbb    al,0x17
  41b17f:	outs   dx,BYTE PTR ds:[esi]
  41b180:	or     bl,bl
  41b182:	cli    
  41b183:	shl    edx,cl
  41b185:	(bad)
  41b188:	fwait
  41b189:	iret   
  41b18a:	sub    ebp,DWORD PTR [ebx-0x65]
  41b18d:	inc    edx
  41b18e:	sub    al,0xc3
  41b190:	and    al,0xbe
  41b192:	cli    
  41b193:	xchg   DWORD PTR [edx],ebx
  41b195:	adc    edx,edx
  41b197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b198:	bound  esp,QWORD PTR [edx]
  41b19a:	into   
  41b19b:	neg    DWORD PTR [ecx-0x707cb2af]
  41b1a1:	out    0x2f,al
  41b1a3:	sahf   
  41b1a4:	cmc    
  41b1a5:	fist   DWORD PTR [ebp+0x5a757d3c]
  41b1ab:	inc    esp
  41b1ac:	sub    eax,0xadca0de7
  41b1b1:	push   ds
  41b1b2:	pop    ebx
  41b1b3:	dec    edx
  41b1b4:	or     esp,DWORD PTR [ecx+0x69aeada0]
  41b1ba:	lds    edi,FWORD PTR [ebp-0x2b]
  41b1bd:	sub    DWORD PTR [ebx-0x4f76143a],0x60808349
  41b1c7:	adc    eax,0xfabb536e
  41b1cc:	push   ss
  41b1cd:	pop    ds
  41b1ce:	add    BYTE PTR [edx],bh
  41b1d0:	sbb    DWORD PTR [ecx+0x4fabb57c],0x6903eb5c
  41b1da:	sub    dh,BYTE PTR [edi+eax*4+0x28fa3f48]
  41b1e1:	out    0xce,al
  41b1e3:	mov    esp,0x20c8f796
  41b1e8:	and    al,0xbf
  41b1ea:	imul   ecx
  41b1ec:	push   cs
  41b1ed:	loope  0x41b218
  41b1ef:	popf   
  41b1f0:	cmp    ah,BYTE PTR [ebp+edx*2+0x7e]
  41b1f4:	loope  0x41b256
  41b1f6:	xor    edx,DWORD PTR [ebp+ebx*1+0x4fdf4a6e]
  41b1fd:	call   0x6a7e:0x9dfaccf4
  41b204:	rcl    DWORD PTR [ecx+0x4256a665],1
  41b20a:	jns    0x41b27f
  41b20c:	cli    
  41b20d:	nop
  41b20e:	mov    ds:0x759c35c3,eax
  41b213:	jg     0x41b1b8
  41b215:	xor    eax,0x70c629f3
  41b21a:	mov    ah,0x99
  41b21c:	in     eax,0x76
  41b21e:	adc    bh,BYTE PTR [esi+0x6091012d]
  41b224:	jg     0x41b288
  41b226:	sub    dh,ch
  41b228:	retf   
  41b229:	pop    eax
  41b22a:	mov    eax,ds:0x678b58e
  41b22f:	enter  0x925,0xf9
  41b233:	clc    
  41b234:	pusha  
  41b235:	ss jmp 0x823d:0xe78203b7
  41b23d:	lea    ebx,[edx+edx*2+0xe]
  41b241:	(bad)  
  41b242:	lods   al,BYTE PTR ds:[esi]
  41b243:	sti    
  41b244:	mov    eax,edx
  41b246:	iret   
  41b247:	jp     0x41b290
  41b249:	test   BYTE PTR [esi+0x28252d25],dl
  41b24f:	lock stos BYTE PTR es:[edi],al
  41b251:	mov    DWORD PTR ss:[ebx],ebx
  41b254:	shl    BYTE PTR [eax-0xbad755],cl
  41b25a:	and    eax,0x13961610
  41b25f:	sub    al,0xb4
  41b261:	pop    ss
  41b262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b263:	pop    ss
  41b264:	jmp    0x4abef51f
  41b269:	dec    ecx
  41b26a:	and    BYTE PTR [ebx-0x2b51cd7a],dl
  41b270:	xchg   ebp,eax
  41b271:	fadd   DWORD PTR [esi-0x2b]
  41b274:	mov    ecx,ebx
  41b276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b277:	int    0x44
  41b279:	sbb    BYTE PTR [edi+0x2e8fdc26],cl
  41b27f:	nop
  41b280:	imul   edi,eax,0xbc3c471d
  41b286:	out    0x5e,eax
  41b288:	xor    BYTE PTR [edi+0x1c],bl
  41b28b:	out    dx,al
  41b28c:	mov    WORD PTR [ebx],es
  41b28e:	add    ebx,DWORD PTR [ebp-0x4c49ad96]
  41b294:	gs push eax
  41b296:	inc    edi
  41b297:	add    al,0x9
  41b299:	mov    DWORD PTR [ebx+0x7c],esp
  41b29c:	or     BYTE PTR [ecx+0xcb1efb0],ch
  41b2a2:	mov    eax,0x642751d9
  41b2a7:	jmp    0x5a67ecd0
  41b2ac:	sub    eax,0x6ee84974
  41b2b1:	pusha  
  41b2b2:	in     eax,dx
  41b2b3:	mov    ah,0xe7
  41b2b5:	mov    WORD PTR [edi+0x7b7d5a7c],cs
  41b2bb:	adc    al,0x24
  41b2bd:	jle    0x41b337
  41b2bf:	add    BYTE PTR [ebx+0x5589d333],ah
  41b2c5:	mov    al,0x8b
  41b2c7:	push   ebp
  41b2c8:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41b2ce:	and    edx,ebx
  41b2d0:	mov    DWORD PTR [ebp-0x4c],edx
  41b2d3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2d6:	mov    ebx,DWORD PTR [ebp-0x48]
  41b2d9:	lea    edx,[ebx+edx*1+0x241fcde]
  41b2e0:	mov    DWORD PTR [ebp-0x48],edx
  41b2e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2e6:	mov    ebx,0xfa5e1521
  41b2eb:	sub    ebx,edx
  41b2ed:	add    ebx,DWORD PTR [ebp-0x44]
  41b2f0:	mov    DWORD PTR [ebp-0x44],ebx
  41b2f3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2f6:	xor    edx,eax
  41b2f8:	add    edx,esi
  41b2fa:	jne    0x418f20
  41b300:	jmp    0x41d6f0
  41b305:	mov    edx,DWORD PTR [ebp-0x14]
  41b308:	mov    DWORD PTR [ebp+0x8],edx
  41b30b:	jmp    0x41d6e3
  41b310:	mov    edx,DWORD PTR [ebp+0x8]
  41b313:	mov    ebx,DWORD PTR [ebp-0x8]
  41b316:	xor    edx,eax
  41b318:	xor    ebx,eax
  41b31a:	sub    edx,ebx
  41b31c:	sub    edx,esi
  41b31e:	xor    edx,eax
  41b320:	mov    DWORD PTR [ebp+0x8],edx
  41b323:	mov    edx,DWORD PTR [ebp+0x8]
  41b326:	mov    ebx,DWORD PTR [ebp-0x58]
  41b329:	jmp    0x41d68c
  41b32e:	popa   
  41b32f:	cmc    
  41b330:	cwde   
  41b331:	mov    eax,0xd7017b98
  41b336:	pop    ecx
  41b337:	popa   
  41b338:	mov    edx,DWORD PTR [eax]
  41b33a:	dec    ecx
  41b33b:	dec    edi
  41b33c:	xor    BYTE PTR [ebx],bh
  41b33e:	xlat   BYTE PTR ds:[ebx]
  41b33f:	(bad)  
  41b340:	jge    0x41b3bc
  41b342:	xor    BYTE PTR [edi+0x7a],bl
  41b345:	jp     0x41b396
  41b347:	leave  
  41b348:	mov    bh,0xe
  41b34a:	sbb    edi,DWORD PTR cs:[ebx-0x78]
  41b34e:	call   0x2286fada
  41b353:	stos   BYTE PTR es:[edi],al
  41b354:	jg     0x41b380
  41b356:	inc    ebx
  41b357:	inc    edi
  41b358:	and    BYTE PTR ds:0x20b0e203,bh
  41b35e:	ins    BYTE PTR es:[edi],dx
  41b35f:	adc    DWORD PTR [ebx],ebp
  41b361:	fwait
  41b362:	ret    0x2b3
  41b365:	add    al,0x1
  41b367:	dec    esp
  41b368:	jb     0x41b31b
  41b36a:	add    eax,0xb37140fb
  41b36f:	xchg   esi,eax
  41b370:	mov    ds:0x58a090b1,al
  41b375:	int3   
  41b376:	cmc    
  41b377:	jne    0x41b305
  41b379:	mov    esp,0x3c376506
  41b37e:	in     al,0x70
  41b380:	pop    ds
  41b381:	mov    ebp,0xb9dd352b
  41b386:	div    BYTE PTR [ebx+0x3a95c05b]
  41b38c:	(bad)  
  41b38d:	outs   dx,BYTE PTR ds:[esi]
  41b38e:	in     eax,dx
  41b38f:	ins    BYTE PTR es:[edi],dx
  41b390:	call   0x2474cc3d
  41b395:	cwde   
  41b396:	ja     0x41b39a
  41b398:	dec    esi
  41b399:	loop   0x41b37a
  41b39b:	sub    bl,BYTE PTR ds:0x75ca3be0
  41b3a1:	xchg   edx,eax
  41b3a2:	pop    ds
  41b3a3:	jl     0x41b3c2
  41b3a5:	xchg   esp,eax
  41b3a6:	mov    WORD PTR [eax],es
  41b3a8:	sbb    BYTE PTR [edi-0x4c],dl
  41b3ab:	nop
  41b3ac:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b3ae:	cmp    al,0x78
  41b3b0:	mov    edi,0xcfee5147
  41b3b5:	inc    esi
  41b3b6:	mov    ebp,0x2fdd1437
  41b3bb:	mov    ecx,0x12f1abf0
  41b3c0:	adc    eax,0xc97dd60f
  41b3c5:	mov    ?,WORD PTR [edx+0x1f]
  41b3c8:	sbb    ah,BYTE PTR [edi-0x1990224d]
  41b3ce:	or     al,0x2a
  41b3d0:	cli    
  41b3d1:	or     bh,BYTE PTR [si]
  41b3d4:	sti    
  41b3d5:	jb     0x41b3c1
  41b3d7:	je     0x41b397
  41b3d9:	pop    ds
  41b3da:	or     BYTE PTR [esi],cl
  41b3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3dd:	inc    ebx
  41b3de:	inc    ebx
  41b3df:	ds jne 0x41b3e8
  41b3e2:	mov    edi,0x84dd6300
  41b3e7:	push   ds
  41b3e8:	icebp  
  41b3e9:	aaa    
  41b3ea:	xor    ch,BYTE PTR [edi-0x4]
  41b3ed:	or     ebp,DWORD PTR [esp+ecx*8]
  41b3f0:	lea    edi,[ebx+0x2a]
  41b3f3:	cld    
  41b3f4:	pop    esp
  41b3f5:	jns    0x41b3aa
  41b3f7:	std    
  41b3f8:	jns    0x41b443
  41b3fa:	inc    DWORD PTR [edx+0x22a4cec2]
  41b400:	scas   eax,DWORD PTR es:[edi]
  41b401:	out    dx,eax
  41b402:	rcl    BYTE PTR [ebx+0x21],1
  41b405:	(bad)  
  41b406:	jno    0x41b473
  41b408:	ror    DWORD PTR [esi-0x45],cl
  41b40b:	sbb    DWORD PTR [ebp+0x46],edx
  41b40e:	dec    eax
  41b40f:	inc    edi
  41b410:	add    eax,0xf56195a4
  41b415:	jle    0x41b40e
  41b417:	sbb    eax,0x6efd8a68
  41b41c:	(bad)  
  41b41d:	cld    
  41b41e:	adc    cl,BYTE PTR [ecx+0x5798665c]
  41b424:	fcmovnb st,st(3)
  41b426:	(bad)  
  41b427:	sahf   
  41b428:	add    al,0x8f
  41b42a:	cdq    
  41b42b:	jns    0x41b417
  41b42d:	pop    ebx
  41b42e:	sbb    bh,BYTE PTR [esi]
  41b430:	or     DWORD PTR [eax+0x78],esp
  41b433:	hlt    
  41b434:	leave  
  41b435:	xchg   esi,eax
  41b436:	(bad)  
  41b437:	stc    
  41b438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b439:	in     al,0x12
  41b43b:	mov    ch,0x18
  41b43d:	xchg   dh,cl
  41b43f:	jmp    0x86a6:0x16f3bfaf
  41b446:	push   0xe1fbf5a0
  41b44b:	inc    ecx
  41b44c:	xor    DWORD PTR [ecx+0x3f],ebx
  41b44f:	or     eax,0xa8dfb67a
  41b454:	xlat   BYTE PTR ds:[ebx]
  41b455:	aas    
  41b456:	xchg   ebx,eax
  41b457:	xlat   BYTE PTR ds:[ebx]
  41b458:	nop
  41b459:	xor    BYTE PTR [esi-0x1e7b96b8],ch
  41b45f:	in     al,dx
  41b460:	xor    DWORD PTR [ebp+0x518ab954],esi
  41b466:	push   ss
  41b467:	mov    ecx,0x8d2ada09
  41b46c:	push   cs
  41b46d:	loop   0x41b403
  41b46f:	add    eax,ecx
  41b471:	test   eax,0x2e5aff93
  41b476:	(bad)  
  41b478:	mov    edx,0x64665d5c
  41b47d:	sti    
  41b47e:	hlt    
  41b47f:	outs   dx,BYTE PTR ss:[esi]
  41b481:	icebp  
  41b482:	and    bh,al
  41b484:	pop    es
  41b485:	mov    ah,0x78
  41b487:	mov    ecx,0x31d63603
  41b48c:	sub    dl,ch
  41b48e:	cmp    BYTE PTR [edx],dl
  41b490:	adc    BYTE PTR ds:[edx],ah
  41b493:	mov    BYTE PTR [edi],0x26
  41b496:	fsubr  QWORD PTR [esi+0x66]
  41b499:	cdq    
  41b49a:	push   ss
  41b49b:	xor    BYTE PTR [edx-0x69],cl
  41b49e:	fcmovb st,st(0)
  41b4a0:	push   ebp
  41b4a1:	dec    edi
  41b4a2:	int    0xe5
  41b4a4:	push   edx
  41b4a5:	add    al,0xee
  41b4a7:	push   0xffffffd6
  41b4a9:	add    BYTE PTR [edx+ebp*4+0x482cf122],bl
  41b4b0:	sub    BYTE PTR [edx+0x2402cb01],bh
  41b4b6:	fidivr DWORD PTR [ebp-0x6a]
  41b4b9:	call   0xcb5b4ad7
  41b4be:	push   0x3c
  41b4c0:	mov    edi,0x423e2c04
  41b4c5:	xchg   DWORD PTR [eax+0xf4af6cc],ecx
  41b4cb:	cs pop esi
  41b4cd:	(bad)  
  41b4ce:	mov    al,cl
  41b4d0:	in     eax,0x80
  41b4d2:	ror    DWORD PTR [ecx+0x71],1
  41b4d5:	mov    cs,edi
  41b4d7:	adc    BYTE PTR [ebx+ebp*8],al
  41b4da:	fdiv   DWORD PTR [ecx]
  41b4dc:	pusha  
  41b4dd:	shr    ebp,1
  41b4df:	xchg   esp,eax
  41b4e0:	outs   dx,BYTE PTR ds:[esi]
  41b4e1:	cwde   
  41b4e2:	mov    edx,0xc15db0be
  41b4e7:	xchg   ecx,eax
  41b4e8:	push   edi
  41b4e9:	mov    ah,0x22
  41b4eb:	xchg   ecx,eax
  41b4ec:	mov    cs,WORD PTR ds:0x6e38b33d
  41b4f2:	mov    ebp,0x868a5e6d
  41b4f7:	call   0x5aa37657
  41b4fc:	xchg   esi,eax
  41b4fd:	mov    ebp,0x167fdae5
  41b502:	xchg   esi,eax
  41b503:	jmp    0x6d19:0xeca9ed85
  41b50a:	mov    esi,0x2fe679e3
  41b50f:	push   esi
  41b510:	dec    esi
  41b511:	mov    dl,al
  41b513:	sub    edi,esp
  41b515:	popf   
  41b516:	sub    DWORD PTR [edi],ebx
  41b518:	mov    ch,0x2a
  41b51a:	sbb    DWORD PTR [eax],ebp
  41b51c:	push   ebp
  41b51d:	mov    gs,WORD PTR [ecx]
  41b51f:	jge    0x41b51e
  41b521:	lock bound ebx,QWORD PTR [ebx-0x1b]
  41b525:	(bad)  
  41b526:	loop   0x41b4f9
  41b528:	dec    eax
  41b529:	sub    eax,0x628aa654
  41b52e:	push   0x54
  41b530:	(bad)  
  41b531:	leave  
  41b532:	mov    dh,0x67
  41b534:	mov    edi,0xf70c7956
  41b539:	sbb    eax,0xfb419ad7
  41b53e:	int3   
  41b53f:	or     esi,DWORD PTR [esi]
  41b541:	rcr    BYTE PTR [edi+0x47],1
  41b544:	out    0xc,al
  41b546:	(bad)  
  41b547:	mov    dl,0x4
  41b549:	push   es
  41b54a:	mov    bl,0xe5
  41b54c:	out    dx,eax
  41b54d:	inc    ebx
  41b54e:	jle    0x41b4fb
  41b550:	mov    ch,0x19
  41b552:	shl    DWORD PTR [esi+0x23e2cf50],1
  41b558:	push   edx
  41b559:	and    eax,0xc64793ef
  41b55e:	xor    DWORD PTR [ebx+0x4],ebp
  41b561:	mov    cl,0xef
  41b563:	and    DWORD PTR [eax],0xdf1811a2
  41b569:	aad    0xbc
  41b56b:	ret    0xca14
  41b56e:	loope  0x41b527
  41b570:	xlat   BYTE PTR ds:[ebx]
  41b571:	push   cs
  41b572:	std    
  41b573:	xchg   BYTE PTR [esi-0x74f65a01],cl
  41b579:	jp     0x41b54a
  41b57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b57c:	call   0xe08c6ab2
  41b581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b582:	add    DWORD PTR [eax-0x2d],esp
  41b585:	push   eax
  41b586:	fcomp  DWORD PTR [eax-0x9]
  41b589:	(bad)  
  41b58a:	adc    ebx,DWORD PTR [esi+0x32]
  41b58d:	ins    BYTE PTR es:[edi],dx
  41b58e:	xchg   esp,eax
  41b58f:	cmp    al,0xe2
  41b591:	les    ebx,FWORD PTR [esp+esi*1-0x1e90f357]
  41b598:	in     eax,dx
  41b599:	pusha  
  41b59a:	jo     0x41b560
  41b59c:	(bad)  
  41b59d:	sti    
  41b59e:	into   
  41b59f:	(bad)  
  41b5a0:	repnz not BYTE PTR [esi]
  41b5a3:	sub    al,0x6b
  41b5a5:	pop    esp
  41b5a6:	sbb    ch,BYTE PTR ds:0xe2b1d78d
  41b5ac:	mov    bh,0x78
  41b5ae:	mov    al,0x67
  41b5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b1:	sub    eax,0x7544b3de
  41b5b6:	ficomp DWORD PTR [ebx+0x50]
  41b5b9:	mov    bl,0xa8
  41b5bb:	or     edi,DWORD PTR [edx+0x685a228f]
  41b5c1:	out    0xcf,eax
  41b5c3:	sahf   
  41b5c4:	cmc    
  41b5c5:	push   ebx
  41b5c6:	push   eax
  41b5c7:	in     al,dx
  41b5c8:	or     ch,ah
  41b5ca:	or     BYTE PTR [esi],dh
  41b5cc:	xchg   esi,eax
  41b5cd:	xlat   BYTE PTR ds:[ebx]
  41b5ce:	push   eax
  41b5cf:	inc    ecx
  41b5d0:	cli    
  41b5d1:	sub    DWORD PTR [ebp-0x2c],edi
  41b5d4:	mov    cl,0x7c
  41b5d6:	lods   eax,DWORD PTR ds:[esi]
  41b5d7:	dec    esi
  41b5d8:	add    ebp,DWORD PTR [edi-0x25]
  41b5db:	(bad)  cs:[eax+eax*2-0x29c1e701]
  41b5e3:	fidivr WORD PTR [ebx]
  41b5e5:	daa    
  41b5e6:	mov    bl,BYTE PTR [ebx]
  41b5e8:	aaa    
  41b5e9:	dec    eax
  41b5ea:	out    dx,al
  41b5eb:	nop
  41b5ec:	xor    ebx,DWORD PTR ds:0x552299fb
  41b5f2:	repnz mul DWORD PTR [edi+0x8115d5e]
  41b5f9:	imul   eax,edx,0xffffff89
  41b5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5fd:	and    eax,0x1f776301
  41b602:	pop    ebx
  41b603:	add    al,0xef
  41b605:	nop
  41b606:	mov    al,0x2b
  41b608:	jmp    0x798a:0x45eaa761
  41b60f:	and    al,0xea
  41b611:	(bad)  
  41b612:	ins    DWORD PTR es:[edi],dx
  41b613:	mov    ds:0xccef7881,eax
  41b618:	push   es
  41b619:	(bad)
  41b61c:	add    bh,BYTE PTR es:[ebp-0x6dcac6c9]
  41b623:	dec    edi
  41b624:	daa    
  41b625:	nop
  41b626:	mov    eax,gs
  41b628:	push   ds
  41b629:	mov    edi,0x9f1d9130
  41b62e:	ds add esp,edi
  41b631:	fld    st(0)
  41b633:	ret    
  41b634:	lahf   
  41b635:	mov    dl,0xd1
  41b637:	or     eax,0x718d9d18
  41b63c:	imul   eax,DWORD PTR [eax],0xffffff81
  41b63f:	xchg   esp,eax
  41b640:	loope  0x41b5cf
  41b642:	mov    edi,0x16cb8e6a
  41b647:	push   edi
  41b648:	sub    eax,0xe6876b09
  41b64d:	mov    dh,0x6
  41b64f:	cs mov ecx,0x48efea76
  41b655:	inc    ecx
  41b656:	pop    ds
  41b657:	leave  
  41b658:	jae    0x41b5dc
  41b65a:	(bad)  
  41b65b:	int3   
  41b65c:	fistp  QWORD PTR es:[eax-0x3fd745df]
  41b663:	jg     0x41b676
  41b665:	call   0xfd954899
  41b66a:	mov    ebp,0xaaedd019
  41b66f:	inc    ecx
  41b670:	ins    DWORD PTR es:[edi],dx
  41b671:	out    0x6c,eax
  41b673:	lds    eax,FWORD PTR [esi+0x43]
  41b676:	dec    eax
  41b677:	mov    bh,0x10
  41b679:	aam    0xce
  41b67b:	cwde   
  41b67c:	xchg   edx,eax
  41b67d:	mov    esp,0xf21999ea
  41b682:	adc    BYTE PTR [eax-0x1c5fa49c],dh
  41b688:	push   es
  41b689:	shl    DWORD PTR [esi],1
  41b68b:	inc    esp
  41b68c:	jp     0x41b6b3
  41b68e:	push   esp
  41b68f:	fidiv  DWORD PTR [ebx]
  41b691:	inc    ecx
  41b692:	fmul   DWORD PTR [eax+0x22]
  41b695:	dec    esi
  41b696:	test   BYTE PTR [eax],ch
  41b698:	adc    BYTE PTR [bx+si],al
  41b69b:	pushf  
  41b69c:	fcom   st(6)
  41b69e:	in     al,dx
  41b69f:	out    0x4,eax
  41b6a1:	mov    esi,0x97ad0270
  41b6a6:	cmp    al,0x68
  41b6a8:	dec    edi
  41b6a9:	outs   dx,DWORD PTR ds:[esi]
  41b6aa:	fcmovnu st,st(7)
  41b6ac:	icebp  
  41b6ad:	mov    ah,0xda
  41b6af:	push   edx
  41b6b0:	ins    BYTE PTR es:[edi],dx
  41b6b1:	popa   
  41b6b2:	sub    al,0x18
  41b6b4:	repz sub BYTE PTR [eax],dl
  41b6b7:	inc    ebx
  41b6b8:	dec    edx
  41b6b9:	lds    eax,FWORD PTR [esi-0x53]
  41b6bc:	push   cs
  41b6bd:	jno    0x41b72f
  41b6bf:	jge    0x41b696
  41b6c1:	adc    bl,BYTE PTR [edx]
  41b6c3:	mov    ds:0x89c9d030,al
  41b6c8:	add    DWORD PTR [ebx],eax
  41b6ca:	fld    QWORD PTR [ebx+0x181842c1]
  41b6d0:	lods   al,BYTE PTR ds:[esi]
  41b6d1:	inc    edi
  41b6d2:	rcl    DWORD PTR [edi+edi*4-0x6f596b9],cl
  41b6d9:	pop    esi
  41b6da:	mov    ds:0x5830c3cd,eax
  41b6df:	pushf  
  41b6e0:	inc    ecx
  41b6e1:	shl    BYTE PTR [esi+esi*1+0x5d490ec7],cl
  41b6e8:	jge    0x41b70f
  41b6ea:	icebp  
  41b6eb:	out    dx,eax
  41b6ec:	iret   
  41b6ed:	lds    edx,FWORD PTR [edx+0xe1c92e0]
  41b6f3:	push   edx
  41b6f4:	lods   al,BYTE PTR ds:[esi]
  41b6f5:	fcmovbe st,st(1)
  41b6f7:	test   al,0xf3
  41b6f9:	inc    ecx
  41b6fa:	lds    ebx,FWORD PTR [edx+0x57e396f6]
  41b700:	leave  
  41b701:	dec    edi
  41b702:	sub    eax,0xcff50bb5
  41b707:	mov    cl,BYTE PTR [edx-0x30]
  41b70a:	cmp    eax,0x48eb6ff
  41b70f:	mov    esp,ss
  41b711:	rcl    BYTE PTR [eax-0xcefe5ef],1
  41b717:	adc    ebx,DWORD PTR [ecx+0x56]
  41b71a:	or     BYTE PTR [edx+eax*2+0x20],bh
  41b71e:	ret    
  41b71f:	push   edi
  41b720:	sbb    ebx,edi
  41b722:	xchg   edi,eax
  41b723:	imul   ecx,DWORD PTR [esi],0xa2255b6a
  41b729:	fsubr  QWORD PTR [edi]
  41b72b:	inc    edi
  41b72c:	pop    ds
  41b72d:	js     0x41b72f
  41b72f:	mov    WORD PTR [ebp+0x6cf76985],fs
  41b735:	mov    cl,BYTE PTR [ecx+edi*1]
  41b738:	and    DWORD PTR [edx],esi
  41b73a:	adc    ecx,DWORD PTR gs:[ecx]
  41b73d:	or     eax,DWORD PTR [esi]
  41b73f:	fld    QWORD PTR [esi]
  41b741:	int    0x28
  41b743:	(bad)  
  41b745:	mov    ch,BYTE PTR ds:[edx-0x4cfd0f11]
  41b74c:	xor    eax,0xb05ada34
  41b751:	adc    bh,BYTE PTR [esi-0x3d]
  41b754:	lahf   
  41b755:	sbb    bh,ah
  41b757:	call   0x602f:0x75524822
  41b75e:	loopne 0x41b78e
  41b760:	neg    edx
  41b762:	mov    bh,0x5f
  41b764:	fiadd  WORD PTR [edi-0x555baa06]
  41b76a:	loopne 0x41b777
  41b76c:	xor    eax,DWORD PTR ds:0x2ed57921
  41b772:	jg     0x41b755
  41b774:	xchg   ecx,eax
  41b775:	int    0x28
  41b777:	cld    
  41b778:	mov    bl,0x43
  41b77a:	repz (bad) 
  41b77c:	cli    
  41b77d:	(bad)  
  41b77e:	pop    ss
  41b77f:	test   BYTE PTR [ecx-0x63],0xcc
  41b783:	pop    esp
  41b784:	push   ebx
  41b785:	gs xchg ebx,eax
  41b787:	cwde   
  41b788:	aaa    
  41b789:	pusha  
  41b78a:	adc    eax,0xcd2e16c6
  41b78f:	iret   
  41b790:	adc    al,0xf1
  41b792:	sbb    al,BYTE PTR [edx+0x3c]
  41b795:	es and al,0xfb
  41b798:	out    dx,al
  41b799:	add    al,0x2d
  41b79c:	mov    ds,WORD PTR [ebx-0x3503ed63]
  41b7a2:	bound  esp,QWORD PTR [eax-0x19]
  41b7a5:	xor    eax,0x1536249
  41b7aa:	test   esp,ebp
  41b7ac:	ror    BYTE PTR [eax+ebp*2],1
  41b7af:	or     DWORD PTR [bx-0x68],0x825ce0c5
  41b7b7:	add    DWORD PTR [ebx],ebp
  41b7b9:	sub    al,0xc4
  41b7bb:	cdq    
  41b7bc:	lahf   
  41b7bd:	xchg   esi,eax
  41b7be:	xor    BYTE PTR [ecx+0x3300b25e],0x8e
  41b7c5:	pop    esp
  41b7c6:	mov    bh,0x57
  41b7c8:	sbb    eax,0x9567ca97
  41b7cd:	iret   
  41b7ce:	pop    ebp
  41b7cf:	sub    DWORD PTR [edi],ebp
  41b7d1:	xchg   ecx,eax
  41b7d2:	pop    esp
  41b7d3:	inc    esi
  41b7d4:	pop    ecx
  41b7d5:	leave  
  41b7d6:	imul   eax,DWORD PTR [edi+0x51d90cbd],0xb471d4fe
  41b7e0:	add    DWORD PTR [edi+0x2a],0x1a011fa5
  41b7e7:	hlt    
  41b7e8:	adc    eax,DWORD PTR [ecx+0x9]
  41b7eb:	inc    esi
  41b7ec:	jbe    0x41b802
  41b7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ef:	fld    QWORD PTR [edx+0x5eaf2b8b]
  41b7f5:	test   esp,eax
  41b7f7:	(bad)  
  41b7f8:	ficom  WORD PTR [ebx+0x6b07511b]
  41b7fe:	sbb    BYTE PTR [ebx-0x1aea7dc6],ah
  41b804:	dec    ebp
  41b805:	test   DWORD PTR [ebp-0x41973ecb],ecx
  41b80b:	outs   dx,DWORD PTR ds:[esi]
  41b80c:	jo     0x41b7cb
  41b80e:	in     al,0xab
  41b810:	mov    eax,0x1aec1d8c
  41b815:	aam    0xb6
  41b817:	cmp    DWORD PTR [esi+edi*4-0x3a],eax
  41b81b:	jne    0x41b7b7
  41b81d:	dec    eax
  41b81e:	pop    esi
  41b81f:	sbb    DWORD PTR [ecx+0x161910d0],eax
  41b825:	push   esp
  41b826:	sub    eax,0xacd36b80
  41b82b:	or     dl,dl
  41b82d:	popa   
  41b82e:	lea    edi,[edx+ecx*2+0x75]
  41b832:	clc    
  41b833:	test   DWORD PTR [edi+eax*1-0x6],eax
  41b837:	aaa    
  41b838:	test   eax,0x642b9c6f
  41b83d:	rcl    BYTE PTR [eax+0x572b4692],1
  41b843:	loope  0x41b893
  41b845:	pop    ebp
  41b846:	lea    edx,[ebx+edi*8-0x2e]
  41b84a:	repnz out 0xce,al
  41b84d:	xchg   edx,eax
  41b84e:	xor    al,0x63
  41b850:	xchg   edx,eax
  41b851:	xchg   ebx,eax
  41b852:	mov    dl,0xcd
  41b854:	cld    
  41b855:	xchg   esi,eax
  41b856:	cmp    DWORD PTR [edi+0x2ca4ed89],edi
  41b85c:	nop
  41b85d:	call   0x3a9e6fdd
  41b862:	in     eax,dx
  41b863:	xchg   DWORD PTR [ebx+ebp*2],ecx
  41b866:	(bad)  
  41b867:	or     al,BYTE PTR [eax+0x4a4383f4]
  41b86d:	aam    0xd2
  41b86f:	and    edi,DWORD PTR [ecx]
  41b871:	inc    edx
  41b872:	clc    
  41b873:	jmp    0xa3850f6b
  41b878:	cmc    
  41b879:	add    al,0x5a
  41b87b:	fdiv   DWORD PTR [ecx-0x2]
  41b87e:	push   0xffffff81
  41b880:	mov    eax,ds:0xa4549f81
  41b885:	inc    esp
  41b886:	hlt    
  41b887:	neg    BYTE PTR ds:0x740ea5f
  41b88d:	jb     0x41b86c
  41b88f:	sbb    ch,0xd2
  41b892:	rcl    BYTE PTR [esi+0x57575657],cl
  41b898:	inc    esi
  41b899:	call   0xd6f466e4
  41b89e:	add    al,0x31
  41b8a0:	call   0x78ddd2f0
  41b8a5:	sar    BYTE PTR [edx+0x9be3d2d],1
  41b8ab:	mov    esp,0x51c58632
  41b8b0:	adc    al,bl
  41b8b2:	inc    eax
  41b8b3:	popf   
  41b8b4:	xor    eax,0xfcb85c33
  41b8b9:	jne    0x41b877
  41b8bb:	push   esi
  41b8bc:	lea    esp,[ecx-0x1f4bd969]
  41b8c2:	cmp    cl,ah
  41b8c4:	inc    eax
  41b8c5:	or     al,0x7f
  41b8c7:	xchg   edx,eax
  41b8c8:	xor    esi,DWORD PTR [edx+0x49]
  41b8cb:	jg     0x41b8fe
  41b8cd:	call   0xf50c7194
  41b8d2:	dec    eax
  41b8d3:	inc    esp
  41b8d4:	mov    esp,0x5447da4e
  41b8d9:	daa    
  41b8da:	sbb    eax,0xd2ac345b
  41b8df:	mov    ?,WORD PTR ds:0xb0c4128
  41b8e5:	(bad)  
  41b8e6:	mov    al,0xcc
  41b8e8:	jp     0x41b963
  41b8ea:	pop    bp
  41b8ec:	(bad)  
  41b8ed:	out    0x3a,eax
  41b8ef:	neg    bl
  41b8f1:	cwde   
  41b8f2:	fild   DWORD PTR [ecx+ebp*2-0x4b]
  41b8f6:	push   0x3473c7f
  41b8fb:	push   eax
  41b8fc:	pop    DWORD PTR [edx-0x6]
  41b8ff:	lods   al,BYTE PTR ds:[si]
  41b901:	jmp    0x5f17:0x77990a39
  41b908:	shl    DWORD PTR [eax],1
  41b90a:	fdivrp st(3),st
  41b90c:	push   ebp
  41b90d:	dec    esp
  41b90e:	iret   
  41b90f:	and    DWORD PTR [edi+0x4a],ecx
  41b912:	push   es
  41b913:	fwait
  41b914:	push   es
  41b915:	dec    eax
  41b916:	and    eax,0x7a0e8412
  41b91b:	jecxz  0x41b8ee
  41b91d:	sub    ah,dl
  41b91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b920:	mov    ch,BYTE PTR cs:[esi]
  41b923:	adc    eax,0xe07982d0
  41b928:	addr16 mov al,0x14
  41b92b:	xchg   edi,eax
  41b92c:	test   eax,0x7a0d759e
  41b931:	and    ch,BYTE PTR [edx-0x67bc955]
  41b937:	push   0xc96a04b7
  41b93c:	loope  0x41b940
  41b93e:	mov    esi,0x5042d2e3
  41b943:	arpl   WORD PTR [ebp+0x1ea232c1],si
  41b949:	fiadd  WORD PTR [eax]
  41b94b:	push   0xa996d416
  41b950:	push   eax
  41b951:	dec    eax
  41b952:	dec    DWORD PTR es:[ebp-0x3b]
  41b956:	dec    eax
  41b957:	mov    bh,dh
  41b959:	inc    ecx
  41b95a:	cmp    edi,DWORD PTR [ebp+0x74777259]
  41b960:	ficom  DWORD PTR [edx]
  41b962:	xor    eax,0xbd636af0
  41b967:	sahf   
  41b968:	out    0xbd,eax
  41b96a:	jns    0x41b952
  41b96c:	push   ecx
  41b96d:	add    al,0x6a
  41b96f:	pop    es
  41b970:	or     al,0x95
  41b972:	pop    ds
  41b973:	test   dh,cl
  41b975:	(bad)  
  41b977:	or     eax,DWORD PTR [edx+0x53]
  41b97a:	add    ecx,ecx
  41b97c:	mov    cl,0x7d
  41b97e:	test   al,0x8b
  41b980:	cwde   
  41b981:	fs in  eax,0x25
  41b984:	dec    eax
  41b985:	mov    dh,0x0
  41b987:	and    cl,dl
  41b989:	imul   esp,ebp,0x4d96c5b5
  41b98f:	sbb    BYTE PTR [ebp+eiz*1-0x1e],0x42
  41b994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b995:	je     0x41b97c
  41b997:	push   eax
  41b998:	fdivr  DWORD PTR [ecx-0x10]
  41b99b:	fld    TBYTE PTR [esi+0x54cfe7fc]
  41b9a1:	shl    DWORD PTR [eax+0x2b],0xc9
  41b9a5:	mov    eax,ds:0xe2af83a1
  41b9aa:	pop    edx
  41b9ab:	mov    edi,0xb8502ea8
  41b9b0:	int    0xc1
  41b9b2:	imul   esi,DWORD PTR [ecx],0x42
  41b9b5:	test   BYTE PTR [ebx-0x86cc8e3],dl
  41b9bb:	xor    DWORD PTR [ecx],0xc
  41b9be:	jo     0x41b94a
  41b9c0:	jg     0x41b9e6
  41b9c2:	pop    ecx
  41b9c3:	shl    DWORD PTR [esi-0x25],0x48
  41b9c7:	add    eax,0xdb64ed8a
  41b9cc:	push   ecx
  41b9cd:	sub    eax,0xf8d1ce43
  41b9d2:	daa    
  41b9d3:	stc    
  41b9d4:	or     eax,0x60bf1d4e
  41b9d9:	fisttp DWORD PTR [eax-0x20]
  41b9dc:	rcr    BYTE PTR [ecx-0x37],0x8f
  41b9e0:	adc    eax,0x5d93c518
  41b9e5:	stos   BYTE PTR es:[edi],al
  41b9e6:	inc    esi
  41b9e7:	inc    ebx
  41b9e8:	jg     0x41ba4d
  41b9ea:	sbb    bl,dl
  41b9ec:	mov    eax,ds:0xdb303167
  41b9f1:	push   ebx
  41b9f2:	inc    eax
  41b9f3:	pop    esp
  41b9f4:	xor    edx,DWORD PTR ds:0xd9020634
  41b9fa:	inc    ecx
  41b9fb:	std    
  41b9fc:	inc    edx
  41b9fd:	push   esi
  41b9fe:	outs   dx,BYTE PTR ds:[esi]
  41b9ff:	push   esi
  41ba00:	mov    eax,ds:0x7f4e0818
  41ba05:	dec    eax
  41ba06:	test   ax,0xce99
  41ba0a:	sbb    DWORD PTR [eax-0x30a56c32],esp
  41ba10:	adc    dl,BYTE PTR [edx-0x5ed472ad]
  41ba16:	mov    al,ds:0x12ae6f82
  41ba1b:	mov    ecx,0x6aed1dc7
  41ba20:	or     al,0xf7
  41ba22:	retf   0x1c9e
  41ba25:	sub    eax,0xba3ff27a
  41ba2a:	loopne 0x41ba42
  41ba2c:	ds xchg edi,eax
  41ba2e:	xchg   ebx,eax
  41ba2f:	jle    0x41baa2
  41ba31:	rcl    BYTE PTR [eax-0x6e],cl
  41ba34:	loope  0x41ba50
  41ba36:	rcr    BYTE PTR [edi],0x84
  41ba39:	shr    DWORD PTR [ebp+0x68e05dd3],cl
  41ba3f:	jge    0x41ba6e
  41ba41:	jg     0x41b9f3
  41ba43:	test   BYTE PTR [ebx+0x3e],bl
  41ba46:	jg     0x41b9d6
  41ba48:	xchg   ebx,eax
  41ba49:	xlat   BYTE PTR ds:[ebx]
  41ba4a:	adc    al,0xab
  41ba4c:	in     al,dx
  41ba4d:	in     eax,dx
  41ba4e:	or     DWORD PTR gs:0x464f4cca,0x5c
  41ba56:	xchg   ecx,eax
  41ba57:	and    ecx,esp
  41ba59:	addr16 pop esp
  41ba5b:	add    BYTE PTR [edi-0x6e],0x86
  41ba5f:	pop    ebp
  41ba60:	test   eax,0x55a8c6dd
  41ba65:	mov    bl,0x36
  41ba67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba68:	inc    ebx
  41ba69:	das    
  41ba6a:	dec    esi
  41ba6b:	mov    bh,0xc6
  41ba6d:	jle    0x41babd
  41ba6f:	jne    0x41ba04
  41ba71:	es push edi
  41ba73:	or     cl,BYTE PTR [edx+ebp*1-0x38a91050]
  41ba7a:	dec    ebp
  41ba7b:	add    DWORD PTR [ecx-0x3314b680],ebx
  41ba81:	(bad)  
  41ba82:	jnp    0x41bac7
  41ba84:	jae    0x41ba6b
  41ba86:	shr    DWORD PTR [ebx],0xe4
  41ba89:	mov    BYTE PTR [ebx-0x17],bh
  41ba8c:	xor    al,0x70
  41ba8e:	cld    
  41ba8f:	jl     0x41ba77
  41ba91:	add    eax,0xabf81e3d
  41ba96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba97:	loope  0x41ba21
  41ba99:	push   ebp
  41ba9a:	sbb    al,0xa5
  41ba9c:	and    ebp,ebx
  41ba9e:	jbe    0x41bad9
  41baa0:	ret    
  41baa1:	repz push esi
  41baa3:	mov    BYTE PTR [ebx+ebx*1+0x161e9a25],cl
  41baaa:	mov    DWORD PTR ds:0x436067b7,0xd6b613fa
  41bab4:	stos   BYTE PTR es:[edi],al
  41bab5:	cli    
  41bab6:	add    dl,dh
  41bab8:	sbb    cl,BYTE PTR [ecx]
  41baba:	inc    ebp
  41babb:	aaa    
  41babc:	adc    ch,bl
  41babe:	mov    BYTE PTR [edx],dh
  41bac0:	push   0x6c
  41bac2:	xchg   esp,eax
  41bac3:	cmp    eax,DWORD PTR [edi+esi*1+0x26]
  41bac7:	xlat   BYTE PTR ds:[ebx]
  41bac8:	dec    eax
  41bac9:	lea    edi,[ebx+edx*4]
  41bacc:	sar    BYTE PTR [edx+0x69b50cfc],cl
  41bad2:	and    DWORD PTR [ecx-0x4dbca6a0],ecx
  41bad8:	ret    
  41bad9:	mov    dl,ah
  41badb:	mov    ds:0x1b33a6e2,eax
  41bae0:	clc    
  41bae1:	cli    
  41bae2:	xchg   edx,eax
  41bae3:	push   ebp
  41bae4:	mov    cl,0x49
  41bae6:	xlat   BYTE PTR ds:[ebx]
  41bae7:	lods   al,BYTE PTR ds:[esi]
  41bae8:	adc    eax,0xd6dd7b32
  41baed:	xchg   BYTE PTR [edi],dh
  41baef:	push   ebx
  41baf0:	xor    al,0xa1
  41baf2:	adc    ch,BYTE PTR [esi+edx*2+0x97003f4]
  41baf9:	mov    cl,0x5e
  41bafb:	jl     0x41bb19
  41bafd:	fisttp QWORD PTR [ecx+0x11]
  41bb00:	fidiv  DWORD PTR [eax]
  41bb02:	jp     0x41babf
  41bb04:	out    0x71,al
  41bb06:	loopne 0x41bad4
  41bb08:	(bad)  
  41bb09:	iret   
  41bb0a:	fisttp DWORD PTR [ebp+0x36]
  41bb0d:	test   eax,0xdb63155c
  41bb12:	out    dx,al
  41bb13:	push   edi
  41bb14:	out    0x96,al
  41bb16:	inc    ecx
  41bb17:	adc    ebx,DWORD PTR [ebp-0x67]
  41bb1a:	push   0x71
  41bb1c:	div    ebx
  41bb1e:	push   cs
  41bb1f:	and    eax,0xeabd789c
  41bb24:	mov    ds:0x31b8d594,al
  41bb29:	shr    DWORD PTR [eax+edi*8-0xc9310e4],0x66
  41bb31:	fwait
  41bb32:	imul   edi,edi,0x24
  41bb35:	push   ebp
  41bb36:	jecxz  0x41bb8b
  41bb38:	call   0x11990d12
  41bb3d:	ss in  eax,dx
  41bb3f:	xor    al,0xa6
  41bb41:	and    al,0xc1
  41bb43:	je     0x41bb4a
  41bb45:	pushf  
  41bb46:	or     DWORD PTR [edi],ebp
  41bb48:	fadd   QWORD PTR [ebp+0x52]
  41bb4b:	jmp    0xf53f:0xbdde2dcb
  41bb52:	cdq    
  41bb53:	mov    dh,0xb4
  41bb55:	ror    ecx,1
  41bb57:	sub    al,0x61
  41bb59:	inc    ecx
  41bb5a:	outs   dx,BYTE PTR ds:[esi]
  41bb5b:	push   eax
  41bb5c:	or     cl,cl
  41bb5e:	jmp    0x41bb96
  41bb60:	pusha  
  41bb61:	xchg   esp,eax
  41bb62:	cli    
  41bb63:	(bad)  
  41bb65:	xchg   ecx,eax
  41bb66:	stos   DWORD PTR es:[edi],eax
  41bb67:	jne    0x41bbd5
  41bb69:	(bad)  
  41bb6a:	sub    edx,DWORD PTR [edx+edx*2-0x3c96f233]
  41bb71:	push   esi
  41bb72:	ror    BYTE PTR [ebp+0x1d],cl
  41bb75:	dec    ebx
  41bb76:	jnp    0x41bb5c
  41bb78:	dec    esp
  41bb79:	iret   
  41bb7a:	pop    ds
  41bb7b:	into   
  41bb7c:	sbb    ah,BYTE PTR [ebp+0x67120b9c]
  41bb82:	jl     0x41bb59
  41bb84:	sub    ch,ch
  41bb86:	mov    bl,0xb2
  41bb88:	cmp    BYTE PTR [eax],ch
  41bb8a:	lea    eax,[edx-0x39]
  41bb8d:	int    0x57
  41bb8f:	outs   dx,DWORD PTR ds:[esi]
  41bb90:	mov    edi,0x495775f
  41bb95:	dec    ebp
  41bb96:	adc    eax,0x86bbbb48
  41bb9b:	mov    ah,0xb6
  41bb9d:	fwait
  41bb9e:	repnz push esp
  41bba0:	push   esp
  41bba1:	test   al,0x88
  41bba3:	cmp    esp,ebx
  41bba5:	mov    eax,ds:0x4b42a828
  41bbaa:	xlat   BYTE PTR ds:[ebx]
  41bbab:	pop    ebx
  41bbac:	stos   DWORD PTR es:[edi],eax
  41bbad:	aaa    
  41bbae:	xchg   edx,eax
  41bbaf:	and    al,0xa4
  41bbb1:	test   eax,0xe5935761
  41bbb6:	imul   esi,DWORD PTR [ebp+0x7b3e2fab],0xffffffee
  41bbbd:	repnz cs cmp al,0x7b
  41bbc1:	pop    ecx
  41bbc2:	push   esi
  41bbc3:	mov    bh,0x43
  41bbc5:	stos   DWORD PTR es:[edi],eax
  41bbc6:	aaa    
  41bbc7:	jo     0x41bc45
  41bbc9:	aam    0x46
  41bbcb:	faddp  st(4),st
  41bbcd:	pusha  
  41bbce:	les    edx,FWORD PTR [eax+0x225b6d00]
  41bbd4:	sahf   
  41bbd5:	out    dx,al
  41bbd6:	xchg   ebp,eax
  41bbd7:	xchg   esp,eax
  41bbd8:	cmp    dh,BYTE PTR [ebx+eax*8-0x1e]
  41bbdc:	in     eax,dx
  41bbdd:	sub    eax,0x5141e5ef
  41bbe2:	inc    ecx
  41bbe3:	sbb    eax,ebp
  41bbe5:	add    DWORD PTR [eax],0xffffff92
  41bbe8:	gs pop esp
  41bbea:	sub    al,0x41
  41bbec:	mov    esp,0xc7711848
  41bbf1:	jle    0x41bb7b
  41bbf3:	pop    ds
  41bbf4:	add    esi,DWORD PTR [ebx-0x22]
  41bbf7:	mov    WORD PTR [ebp+0xf37e2ef],?
  41bbfd:	jg     0x41bc72
  41bbff:	mov    ecx,0x70b08094
  41bc04:	mov    ds:0x41dbce6e,al
  41bc09:	vmwrite ebp,ecx
  41bc0c:	xor    eax,0xb8b0b3d3
  41bc11:	gs jb  0x41bb9a
  41bc14:	mov    ecx,0xb6004c0d
  41bc19:	jns    0x41bc01
  41bc1b:	and    bh,BYTE PTR [esi+0xd]
  41bc1e:	xor    eax,0x2f3f5984
  41bc23:	fisubr DWORD PTR [ebx+0x70fac049]
  41bc29:	icebp  
  41bc2a:	and    bl,ah
  41bc2c:	push   ecx
  41bc2d:	push   ecx
  41bc2e:	je     0x41bc47
  41bc30:	das    
  41bc31:	jns    0x41bc4f
  41bc33:	lods   eax,DWORD PTR ds:[esi]
  41bc34:	ror    DWORD PTR [ecx],0x8a
  41bc37:	cmp    eax,0x88a4adad
  41bc3c:	in     eax,dx
  41bc3d:	pop    ebx
  41bc3e:	aas    
  41bc3f:	enter  0xb3c,0x83
  41bc43:	test   al,0xea
  41bc45:	dec    ebx
  41bc46:	pop    ecx
  41bc47:	xchg   esp,eax
  41bc48:	adc    eax,0xe53ebf21
  41bc4d:	inc    edi
  41bc4e:	jnp    0x41bc7b
  41bc50:	sbb    eax,0x61d0ba3a
  41bc55:	stos   BYTE PTR es:[edi],al
  41bc56:	xchg   ecx,eax
  41bc57:	popf   
  41bc58:	inc    esi
  41bc59:	mov    edi,0x5c346951
  41bc5e:	sbb    DWORD PTR [edx-0x3976d4f5],edx
  41bc64:	xchg   ebx,eax
  41bc65:	jmp    0x9cba34c2
  41bc6a:	int    0xf6
  41bc6c:	ds sub eax,0x4fc022e7
  41bc72:	jl     0x41bc81
  41bc74:	dec    esi
  41bc75:	fist   WORD PTR [edx+0x11]
  41bc78:	mov    ebx,0xb352a29c
  41bc7d:	mov    bl,0x38
  41bc7f:	retf   
  41bc80:	mov    ebx,0x77fb609f
  41bc85:	add    BYTE PTR [ecx+ebp*4-0x6b],ah
  41bc89:	xchg   ecx,eax
  41bc8a:	mov    ebx,0x60562a46
  41bc8f:	int3   
  41bc90:	pop    esi
  41bc91:	add    ecx,DWORD PTR [esi+0x447f39f7]
  41bc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc98:	mov    dh,0x10
  41bc9a:	into   
  41bc9b:	lock ss (bad) 
  41bc9e:	adc    edi,DWORD PTR [edi]
  41bca0:	xchg   ebp,eax
  41bca1:	into   
  41bca2:	cmp    BYTE PTR ds:0xe7e88023,bl
  41bca8:	rol    esi,0x63
  41bcab:	hlt    
  41bcac:	stc    
  41bcad:	std    
  41bcae:	cmp    eax,0x1ba9077c
  41bcb3:	out    dx,al
  41bcb4:	mov    ecx,0x2f417b3f
  41bcb9:	(bad)  
  41bcba:	(bad)  
  41bcbb:	mov    ebp,0x6252230
  41bcc0:	add    BYTE PTR [edi],0xeb
  41bcc3:	push   ds
  41bcc4:	inc    eax
  41bcc5:	mov    ebx,0x7c415866
  41bcca:	dec    esp
  41bccb:	jno    0x41bc99
  41bccd:	loop   0x41bd29
  41bccf:	xor    eax,0xef3b14dd
  41bcd4:	xor    eax,0x9b05ca04
  41bcd9:	in     eax,0xd1
  41bcdb:	loopne 0x41bceb
  41bcdd:	pop    edi
  41bcde:	cmp    BYTE PTR [esi],dl
  41bce0:	adc    al,0xeb
  41bce2:	call   0x70239d9a
  41bce7:	(bad)  
  41bce8:	(bad)  
  41bce9:	es adc al,0x24
  41bcec:	push   es
  41bced:	push   es
  41bcee:	mov    dh,BYTE PTR [ecx+0x4]
  41bcf1:	aas    
  41bcf2:	add    BYTE PTR [edi+0x51],al
  41bcf5:	push   eax
  41bcf6:	je     0x41bcfd
  41bcf8:	retf   0x6997
  41bcfb:	mov    dl,BYTE PTR [esi-0x2b]
  41bcfe:	(bad)  
  41bcff:	data16 cli 
  41bd01:	xor    ah,BYTE PTR [eax-0x59]
  41bd04:	dec    ebx
  41bd05:	jg     0x41bd58
  41bd07:	pop    es
  41bd08:	in     eax,0xf8
  41bd0a:	out    dx,eax
  41bd0b:	bound  ebx,QWORD PTR [eax-0xc5c5e4c]
  41bd11:	xchg   edx,eax
  41bd12:	xchg   ebp,eax
  41bd13:	imul   ebp,DWORD PTR [ebx+0x72dc88f7],0xedea3411
  41bd1d:	cdq    
  41bd1e:	mov    eax,0x9288fc9e
  41bd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd24:	imul   BYTE PTR [ecx-0x2c]
  41bd27:	push   cs
  41bd28:	pop    edi
  41bd29:	hlt    
  41bd2a:	nop
  41bd2b:	retf   
  41bd2c:	push   es
  41bd2d:	sub    ah,BYTE PTR [ecx+0x85803d]
  41bd33:	enter  0x4088,0xfd
  41bd37:	in     al,0xf5
  41bd39:	xchg   edx,eax
  41bd3a:	xchg   edi,eax
  41bd3b:	outs   dx,BYTE PTR ds:[esi]
  41bd3c:	mov    esi,0xb1a3d535
  41bd41:	ret    
  41bd42:	xchg   esp,eax
  41bd43:	xchg   esi,eax
  41bd44:	dec    esi
  41bd45:	push   edx
  41bd46:	xchg   BYTE PTR [ebx-0x11b56abf],bl
  41bd4c:	sub    DWORD PTR [ecx+0x3],0xffffffbd
  41bd50:	ficomp WORD PTR [eax-0x4e7dad4d]
  41bd56:	mov    edx,0x5f7db8a8
  41bd5b:	jl     0x41bdb7
  41bd5d:	test   cl,ch
  41bd5f:	sbb    esi,ecx
  41bd61:	adc    bl,cl
  41bd63:	int3   
  41bd64:	xor    BYTE PTR ds:0x8808e99e,bl
  41bd6a:	ja     0x41bd62
  41bd6c:	lds    esi,FWORD PTR [esi+0x75]
  41bd6f:	push   es
  41bd70:	fcmovnbe st,st(1)
  41bd72:	mov    al,al
  41bd74:	push   DWORD PTR [ebx+0x1e]
  41bd77:	push   ss
  41bd78:	mov    ch,0x7f
  41bd7a:	mov    ecx,0xfa9a6f9a
  41bd7f:	(bad)  
  41bd80:	fbld   TBYTE PTR [esi-0x1]
  41bd83:	fcmovb st,st(1)
  41bd85:	lea    esp,[ebx]
  41bd87:	mov    esi,0xe14e3cd3
  41bd8c:	loop   0x41bd6a
  41bd8e:	push   edx
  41bd8f:	imul   esi,edi,0xf75a64fc
  41bd95:	call   0xfae080e6
  41bd9a:	jmp    0x41bdce
  41bd9c:	push   ecx
  41bd9d:	rol    DWORD PTR [ebp+0x15d02a47],0xe3
  41bda4:	cvtps2pi mm4,xmm0
  41bda7:	rcr    BYTE PTR [ebx-0x34],1
  41bdaa:	jmp    0x1a69821e
  41bdaf:	sahf   
  41bdb0:	inc    esp
  41bdb1:	ins    BYTE PTR es:[edi],dx
  41bdb2:	jl     0x41be09
  41bdb4:	outs   dx,DWORD PTR ds:[esi]
  41bdb5:	rcr    dh,1
  41bdb7:	jae    0x41bdfd
  41bdb9:	repz lock or eax,0xf977ec30
  41bdc0:	and    edx,DWORD PTR [edi]
  41bdc2:	mov    ebx,0x9a4966d0
  41bdc7:	xor    cl,BYTE PTR [edi-0x4f]
  41bdca:	push   eax
  41bdcb:	shl    BYTE PTR [ebp+0x7e],1
  41bdce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdcf:	(bad)  
  41bdd0:	xor    cl,BYTE PTR [edx-0x6173c315]
  41bdd6:	inc    ebp
  41bdd7:	adc    dl,ch
  41bdd9:	mov    edx,0x57ceb76a
  41bdde:	sub    al,0xc3
  41bde0:	in     eax,0xd8
  41bde2:	mov    ds:0xae40db79,eax
  41bde7:	pop    eax
  41bde8:	push   ebx
  41bde9:	out    dx,eax
  41bdea:	and    BYTE PTR ds:0xc6757540,bl
  41bdf0:	jo     0x41bde7
  41bdf2:	stc    
  41bdf3:	xor    DWORD PTR ds:0xde8ef1bd,0xffffff93
  41bdfa:	and    BYTE PTR [ecx],al
  41bdfc:	xor    cl,BYTE PTR [ebx+0x4a434a08]
  41be02:	imul   eax,DWORD PTR [ecx-0x101ab55a],0xdb16926b
  41be0c:	sbb    BYTE PTR [ebp+0x5523a2c4],dl
  41be12:	dec    esp
  41be13:	rcl    dl,0xbb
  41be16:	sbb    DWORD PTR [esi-0x73],ecx
  41be19:	jb     0x41bdb0
  41be1b:	fmulp  st(2),st
  41be1d:	mov    ch,0xa0
  41be1f:	add    cl,bl
  41be21:	mov    cl,0x41
  41be23:	push   ecx
  41be24:	int    0xa0
  41be26:	add    al,0xd1
  41be28:	mov    ebp,0xf9d3ab4e
  41be2d:	mov    al,ds:0xbdf1bc3e
  41be32:	out    dx,al
  41be33:	sub    dh,BYTE PTR [edx+0x1]
  41be36:	cmp    BYTE PTR [ecx],al
  41be38:	or     eax,0xa38f14cb
  41be3d:	pop    ebx
  41be3e:	inc    esp
  41be3f:	int3   
  41be40:	lods   al,BYTE PTR ds:[esi]
  41be41:	push   edi
  41be42:	(bad)  
  41be43:	cmc    
  41be44:	mov    dh,0x6f
  41be46:	jno    0x41bddc
  41be48:	xor    DWORD PTR [ebp+0x49],esp
  41be4b:	call   0x97a0f857
  41be50:	int3   
  41be51:	jmp    0x41bdf6
  41be53:	sti    
  41be54:	in     al,dx
  41be55:	and    al,0xc7
  41be57:	dec    eax
  41be58:	add    dl,BYTE PTR [esi]
  41be5a:	test   DWORD PTR [edi],eax
  41be5c:	xlat   BYTE PTR ds:[ebx]
  41be5d:	test   DWORD PTR [esp+esi*4+0x61],ebx
  41be61:	shl    BYTE PTR [eax+ebp*4-0x30],cl
  41be65:	and    esp,ebx
  41be67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be68:	popf   
  41be69:	stos   BYTE PTR es:[edi],al
  41be6a:	in     al,0x7c
  41be6c:	push   esp
  41be6d:	in     al,dx
  41be6e:	(bad)  
  41be6f:	adc    al,BYTE PTR ds:0xfe33e750
  41be75:	adc    ah,BYTE PTR [ecx+edx*1+0x1b744b1f]
  41be7c:	adc    DWORD PTR [eax],ebp
  41be7e:	icebp  
  41be7f:	pop    ecx
  41be80:	cmp    DWORD PTR [edx],esp
  41be82:	iret   
  41be83:	cld    
  41be84:	push   esp
  41be85:	xchg   edx,eax
  41be86:	xchg   ebx,eax
  41be87:	cmp    al,BYTE PTR [edi+0x23]
  41be8a:	stos   BYTE PTR es:[edi],al
  41be8b:	retf   
  41be8c:	and    al,0x7c
  41be8e:	div    BYTE PTR [ecx-0x531d201f]
  41be94:	push   0x2e
  41be96:	ret    0xfa6a
  41be99:	cld    
  41be9a:	add    al,0xdc
  41be9c:	sar    DWORD PTR [esi],cl
  41be9e:	out    0x1d,eax
  41bea0:	cwde   
  41bea1:	sbb    BYTE PTR [edi+edx*8],dh
  41bea4:	push   cs
  41bea5:	loope  0x41be55
  41bea7:	push   esp
  41bea8:	pop    ecx
  41bea9:	arpl   WORD PTR ds:0xf8f79868,sp
  41beaf:	mov    ds:0x65b7411d,eax
  41beb4:	dec    eax
  41beb5:	aaa    
  41beb6:	sbb    ah,BYTE PTR [ecx]
  41beb8:	push   edi
  41beb9:	jmp    0x41bea5
  41bebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bebc:	popa   
  41bebd:	sub    al,0x94
  41bebf:	(bad)  
  41bec0:	stc    
  41bec1:	cwde   
  41bec2:	js     0x41be9d
  41bec4:	shl    BYTE PTR [eax+eax*8],cl
  41bec7:	out    0xaf,al
  41bec9:	lods   al,BYTE PTR ds:[esi]
  41beca:	shr    bl,0x58
  41becd:	in     eax,0x91
  41becf:	adc    ebp,esi
  41bed1:	mov    ch,0x68
  41bed3:	aaa    
  41bed4:	hlt    
  41bed5:	lea    esi,[ecx+ebx*1-0x13]
  41bed9:	es cmp eax,0x3ca9de7b
  41bedf:	neg    DWORD PTR [esi+0x6c]
  41bee2:	xchg   ch,ah
  41bee4:	rcr    dh,cl
  41bee6:	sbb    eax,0xcd764cf4
  41beeb:	loopne 0x41be95
  41beed:	add    eax,0x4b06578c
  41bef2:	mov    BYTE PTR [ebx+0x719295d6],dh
  41bef8:	repnz add DWORD PTR [esi],0xdb9bc6c
  41beff:	mov    dh,0xc4
  41bf01:	lea    edx,[ecx]
  41bf03:	xchg   ecx,eax
  41bf04:	mov    bl,0xce
  41bf06:	sbb    BYTE PTR [ecx+eax*4],cl
  41bf09:	push   edi
  41bf0a:	cmc    
  41bf0b:	dec    ebp
  41bf0c:	shl    BYTE PTR ds:0x9f212c3a,0x3a
  41bf13:	cmp    dl,cl
  41bf15:	fs jmp 0x41bf70
  41bf18:	aas    
  41bf19:	fisub  DWORD PTR ds:0xd9e20ca3
  41bf1f:	ins    BYTE PTR es:[edi],dx
  41bf20:	nop
  41bf21:	sub    esp,DWORD PTR [ecx-0x6d4f43b1]
  41bf27:	pop    ecx
  41bf28:	int    0x53
  41bf2a:	adc    DWORD PTR [ebx],esi
  41bf2c:	enter  0x85b1,0xb7
  41bf30:	fwait
  41bf31:	fs push esi
  41bf33:	jmp    0x54448cb2
  41bf38:	xlat   BYTE PTR ds:[ebx]
  41bf39:	pop    ss
  41bf3a:	in     eax,0x3f
  41bf3c:	push   0xffffff8f
  41bf3e:	fsubr  QWORD PTR [edi+0x19efaaee]
  41bf44:	dec    esp
  41bf45:	cmp    ebx,DWORD PTR [ecx-0x43]
  41bf48:	and    BYTE PTR [ebx-0x387dd960],bl
  41bf4e:	pop    ebp
  41bf4f:	jl     0x41bf85
  41bf51:	jmp    0xb204531
  41bf56:	test   BYTE PTR [eax+esi*2-0x5241f3c9],cl
  41bf5d:	xor    BYTE PTR [esi+edi*4+0x1b481172],ch
  41bf64:	adc    bh,ah
  41bf66:	sbb    eax,0x197c2de2
  41bf6b:	xor    edx,DWORD PTR [eax-0x79]
  41bf6e:	adc    al,BYTE PTR [ebp+0x50]
  41bf71:	popa   
  41bf72:	data16 fsub DWORD PTR [ebp+eax*8+0x55ea10be]
  41bf7a:	out    dx,eax
  41bf7b:	(bad)  
  41bf7c:	out    dx,al
  41bf7d:	repz dec edi
  41bf7f:	jg     0x41bfbf
  41bf81:	dec    ebx
  41bf82:	mov    ah,0x7b
  41bf84:	fisub  WORD PTR [ebx]
  41bf86:	pop    edx
  41bf87:	jno    0x41bfd9
  41bf89:	mov    ch,0xd1
  41bf8b:	pop    es
  41bf8c:	xchg   ebx,eax
  41bf8d:	push   es
  41bf8e:	enter  0x2875,0x2e
  41bf92:	in     al,0x79
  41bf94:	ret    
  41bf95:	fwait
  41bf96:	and    DWORD PTR [esi],0x24
  41bf99:	inc    ecx
  41bf9a:	pop    ebx
  41bf9b:	push   cs
  41bf9c:	pusha  
  41bf9d:	xchg   esp,eax
  41bf9e:	cmc    
  41bf9f:	add    al,al
  41bfa1:	add    DWORD PTR [ecx+0x66009c0e],edi
  41bfa7:	rcl    edx,0xba
  41bfaa:	xchg   ecx,eax
  41bfab:	test   DWORD PTR [ebx+0x7f9d7716],edi
  41bfb1:	push   ebp
  41bfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfb3:	jp     0x41c031
  41bfb5:	xor    DWORD PTR [ebx],esp
  41bfb7:	popf   
  41bfb8:	push   0xffffffc9
  41bfba:	fidivr WORD PTR [edi+0x2234b8d0]
  41bfc0:	dec    edx
  41bfc1:	std    
  41bfc2:	stos   BYTE PTR es:[edi],al
  41bfc3:	int3   
  41bfc4:	pop    eax
  41bfc5:	sbb    ebp,DWORD PTR [eax+eax*8-0x482682eb]
  41bfcc:	rcr    BYTE PTR [edx+0x7b],1
  41bfcf:	sbb    edx,edx
  41bfd1:	xchg   ebx,eax
  41bfd2:	aaa    
  41bfd3:	mov    edx,0x3dac0d96
  41bfd8:	and    BYTE PTR fs:[edi-0x3ec3ec5a],ah
  41bfdf:	sub    ebp,esi
  41bfe1:	pop    edx
  41bfe2:	inc    edx
  41bfe3:	xrelease xchg DWORD PTR ds:0x92be25fd,ebp
  41bfea:	or     BYTE PTR [edi+0x7d60555c],al
  41bff0:	mov    edx,0xefc4273c
  41bff5:	loopne 0x41c070
  41bff7:	loope  0x41c03e
  41bff9:	icebp  
  41bffa:	or     eax,0xbe541f6
  41bfff:	dec    ebx
  41c000:	add    ebp,0x6d
  41c003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c004:	(bad)  
  41c005:	lock jge 0x41c07c
  41c008:	and    DWORD PTR [ecx+0x5b],edx
  41c00b:	lds    ebp,FWORD PTR [ecx]
  41c00d:	mov    dh,0x91
  41c00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c010:	shl    bh,cl
  41c012:	sub    BYTE PTR [ebp-0x4a639a0],0x94
  41c019:	enter  0x81ff,0xdc
  41c01d:	mov    ch,cl
  41c01f:	mov    edi,DWORD PTR [esp+ecx*8-0x4e]
  41c023:	add    BYTE PTR [edx+0x79],cl
  41c026:	push   0x451cca81
  41c02b:	xchg   ecx,eax
  41c02c:	push   esp
  41c02d:	lds    eax,FWORD PTR [edi]
  41c02f:	push   edx
  41c030:	mov    BYTE PTR [esi+0x48751df9],cl
  41c036:	not    ebx
  41c038:	ret    0x8a1b
  41c03b:	mov    dh,BYTE PTR [edx-0x13]
  41c03e:	jmp    0xe189f8a2
  41c043:	cmp    cl,bl
  41c045:	jecxz  0x41c01f
  41c047:	adc    bh,ah
  41c049:	sub    BYTE PTR [ebx+edx*8+0x4c220d71],ch
  41c050:	sahf   
  41c051:	xor    BYTE PTR [eax-0x6ca61bce],bl
  41c057:	(bad)  
  41c058:	jg     0x41c081
  41c05a:	jae    0x41c002
  41c05c:	mov    ebx,0x274cbaa3
  41c061:	push   es
  41c062:	aaa    
  41c063:	push   es
  41c064:	jne    0x41c034
  41c066:	scas   eax,DWORD PTR es:[edi]
  41c067:	(bad)  
  41c068:	adc    ah,ah
  41c06a:	int    0xc5
  41c06c:	sub    edx,esi
  41c06e:	cmp    al,0x29
  41c070:	cmp    edx,DWORD PTR [eax]
  41c072:	inc    esi
  41c073:	sbb    bl,bh
  41c075:	add    dl,BYTE PTR [edx]
  41c077:	xchg   edx,eax
  41c078:	mov    ebx,0xdb32fd0d
  41c07d:	sbb    BYTE PTR [esi+0x6cbde8f8],dl
  41c083:	inc    ecx
  41c084:	or     DWORD PTR [ecx+0x33],0xffffffd0
  41c088:	mov    al,0xc5
  41c08a:	mov    cl,0x98
  41c08c:	mov    ch,0x54
  41c08e:	or     DWORD PTR [esi-0x2e9e5e28],0x83609145
  41c098:	aaa    
  41c099:	fcomp  st(0)
  41c09b:	fimul  DWORD PTR [esi+ecx*2]
  41c09e:	and    esi,DWORD PTR ds:0xc588ec22
  41c0a4:	xchg   BYTE PTR [edx+ebx*1+0x5221a17],bh
  41c0ab:	add    DWORD PTR [esi+0x2444aa19],edi
  41c0b1:	push   0x72673b13
  41c0b6:	add    eax,0x1ebde4dc
  41c0bb:	in     al,dx
  41c0bc:	jp     0x41c0cd
  41c0be:	cmp    DWORD PTR ds:0xa4ad34d9,ebp
  41c0c4:	ss pop esp
  41c0c6:	cmp    dl,al
  41c0c8:	fadd   st,st(1)
  41c0ca:	mov    ss,WORD PTR [ebx+0x73b5fec8]
  41c0d0:	shr    DWORD PTR [edi+0xb4f87b6],0xe8
  41c0d7:	test   BYTE PTR [ecx],0xfb
  41c0da:	pop    ds
  41c0db:	in     eax,dx
  41c0dc:	inc    edx
  41c0dd:	rcr    BYTE PTR [esi-0x60fd94ce],0x9b
  41c0e4:	pop    ecx
  41c0e5:	out    0xff,al
  41c0e7:	gs (bad) 
  41c0ea:	out    dx,eax
  41c0eb:	mov    bl,0x9f
  41c0ed:	fwait
  41c0ee:	jbe    0x41c0d7
  41c0f0:	xor    BYTE PTR [ecx+0x29204ffa],cl
  41c0f6:	xchg   ebp,eax
  41c0f7:	out    dx,eax
  41c0f8:	lods   al,BYTE PTR ds:[esi]
  41c0f9:	(bad)  
  41c0fa:	scas   al,BYTE PTR es:[edi]
  41c0fb:	scas   eax,DWORD PTR es:[edi]
  41c0fc:	xor    BYTE PTR [edi+0x22],ch
  41c0ff:	les    esp,FWORD PTR [ebx+0x24]
  41c102:	inc    ecx
  41c103:	pop    es
  41c104:	or     BYTE PTR [ebx],cl
  41c106:	jno    0x41c0c2
  41c108:	and    edx,ebp
  41c10a:	sub    DWORD PTR [ebp-0x19],edi
  41c10d:	add    BYTE PTR cs:[edx],bh
  41c110:	fiadd  WORD PTR [esp+edx*4]
  41c113:	ds pop eax
  41c115:	mov    eax,ds:0x2b4c216a
  41c11a:	mov    esi,edx
  41c11c:	xchg   ebx,eax
  41c11d:	cmp    BYTE PTR [esi+edi*1],0x36
  41c121:	dec    esp
  41c122:	lea    esi,[ecx+0x35]
  41c125:	(bad)
  41c128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c129:	mov    DWORD PTR [ecx+edx*1-0x4ee0ca51],ebp
  41c130:	in     eax,0x34
  41c132:	add    eax,0x5c3fcbf4
  41c137:	test   BYTE PTR cs:0xba83d52c,ch
  41c13e:	jae    0x41c0cd
  41c140:	push   0xed97307b
  41c145:	xor    ebx,DWORD PTR [eax+ecx*4]
  41c148:	lahf   
  41c149:	out    dx,eax
  41c14a:	sbb    eax,0x9aa6e214
  41c14f:	lock jo 0x41c16f
  41c152:	jns    0x41c107
  41c154:	jp     0x41c14b
  41c156:	ret    
  41c157:	scas   al,BYTE PTR es:[edi]
  41c158:	nop    DWORD PTR [edx+0x1fbba4d4]
  41c15f:	imul   DWORD PTR [esi]
  41c161:	popf   
  41c162:	jnp    0x41c10e
  41c164:	xor    BYTE PTR [edi],dl
  41c166:	outs   dx,DWORD PTR ds:[esi]
  41c167:	fwait
  41c168:	inc    ebx
  41c169:	adc    eax,0x431668a5
  41c16e:	jae    0x41c17c
  41c170:	sbb    BYTE PTR [edi-0x55],al
  41c173:	sub    BYTE PTR [ebx-0x1d],bh
  41c176:	push   ecx
  41c177:	push   cs
  41c178:	mov    ah,0xdf
  41c17a:	mov    edi,esi
  41c17c:	jle    0x41c1d2
  41c17e:	xor    BYTE PTR [ecx+0x5d],dl
  41c181:	sbb    dh,dh
  41c183:	dec    ebx
  41c184:	push   cs
  41c185:	retf   
  41c186:	pop    esp
  41c187:	sub    DWORD PTR [ebx+0x32],ebp
  41c18a:	cld    
  41c18b:	push   es
  41c18c:	adc    ch,BYTE PTR [esi]
  41c18e:	(bad)  
  41c18f:	out    dx,eax
  41c190:	sub    BYTE PTR [ebx-0x27e513bb],0xd5
  41c197:	(bad)  
  41c198:	hlt    
  41c199:	ja     0x41c1b8
  41c19b:	sub    al,0x65
  41c19d:	je     0x41c1b4
  41c19f:	aam    0x1f
  41c1a1:	std    
  41c1a2:	stc    
  41c1a3:	or     ebx,DWORD PTR [eax]
  41c1a5:	(bad)  
  41c1a6:	mov    al,ds:0xdf93e0da
  41c1ab:	inc    esp
  41c1ac:	xor    ebp,DWORD PTR [ebp+0x17]
  41c1af:	dec    edx
  41c1b0:	pop    edi
  41c1b1:	mov    dl,0xcf
  41c1b3:	cmp    bh,BYTE PTR [bp+si-0x53]
  41c1b7:	mov    eax,0x91d250bb
  41c1bc:	xor    bl,0xfd
  41c1bf:	cdq    
  41c1c0:	lock push esi
  41c1c2:	push   es
  41c1c3:	xchg   edi,eax
  41c1c4:	jge    0x41c1d6
  41c1c6:	jo     0x41c22a
  41c1c8:	or     cl,bl
  41c1ca:	and    BYTE PTR [ecx],dl
  41c1cc:	mov    esi,0x7ac2e3bc
  41c1d1:	les    edi,FWORD PTR [ecx+0x76]
  41c1d4:	xchg   BYTE PTR [esi-0x64a35f20],dh
  41c1da:	imul   ecx,DWORD PTR [ebx+0x1f863fed],0x12
  41c1e1:	mov    ebp,0xd81d8673
  41c1e6:	push   0xb80ff7db
  41c1eb:	xchg   edx,eax
  41c1ec:	pop    ss
  41c1ed:	cmp    DWORD PTR [ebp-0x1c9efbe8],edx
  41c1f3:	icebp  
  41c1f4:	sub    esp,ebx
  41c1f6:	sub    eax,0xf20aef9a
  41c1fb:	pop    eax
  41c1fc:	sbb    bh,BYTE PTR [eax]
  41c1fe:	xchg   esi,ebx
  41c200:	pop    ecx
  41c201:	mov    ds:0xeb737ee0,eax
  41c206:	(bad)  
  41c207:	in     eax,dx
  41c208:	popf   
  41c209:	call   0x9d5a:0xd846cd64
  41c210:	mov    edx,0x5bbf8667
  41c215:	stos   BYTE PTR es:[edi],al
  41c216:	xor    al,0x0
  41c218:	loope  0x41c1bb
  41c21a:	in     al,0xb6
  41c21c:	add    dh,ch
  41c21e:	jae    0x41c1af
  41c220:	nop
  41c221:	mul    edi
  41c223:	fneni(8087 only) 
  41c225:	pop    esi
  41c226:	sub    al,0x9f
  41c228:	xor    dl,BYTE PTR [edx]
  41c22a:	dec    edi
  41c22b:	adc    eax,0x2afb8b98
  41c230:	rol    DWORD PTR [ecx-0x5c],cl
  41c233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c234:	cmc    
  41c235:	adc    cl,BYTE PTR [edx]
  41c237:	mov    esi,0x7d363dfa
  41c23c:	mov    BYTE PTR [ebx],dl
  41c23e:	mov    gs,edx
  41c240:	inc    ebx
  41c241:	mov    al,ds:0xbb920fb4
  41c246:	daa    
  41c247:	and    al,0xa5
  41c249:	test   BYTE PTR [edx-0x34],cl
  41c24c:	mov    al,ds:0x6da60a0
  41c251:	scas   eax,DWORD PTR es:[edi]
  41c252:	sqrtps xmm6,XMMWORD PTR [ecx-0x79]
  41c256:	outs   dx,BYTE PTR ds:[esi]
  41c257:	pop    edi
  41c258:	imul   esp,DWORD PTR [edi],0xffffffab
  41c25b:	(bad)  
  41c25c:	mov    cl,0xfb
  41c25e:	cmp    al,0xa
  41c260:	or     esp,esi
  41c262:	aam    0x71
  41c264:	jle    0x41c2a4
  41c266:	pop    ds
  41c267:	aam    0xd7
  41c269:	arpl   WORD PTR [eax+ebp*8+0x716f87b1],di
  41c270:	add    ebp,DWORD PTR [ecx]
  41c272:	icebp  
  41c273:	imul   edi,ebp,0xd84b77db
  41c279:	mov    al,ds:0x9d7e57b3
  41c27e:	sti    
  41c27f:	out    0xae,eax
  41c281:	pop    DWORD PTR [ebp-0x14fca9d0]
  41c287:	push   edx
  41c288:	jne    0x41c26c
  41c28a:	mov    eax,0xfa428ba7
  41c28f:	inc    edi
  41c290:	fcom   DWORD PTR [ebx+ebx*4+0x4964f8f6]
  41c297:	ret    0x8577
  41c29a:	adc    al,0x48
  41c29c:	je     0x41c2f2
  41c29e:	sbb    al,BYTE PTR [esi+0x114922f0]
  41c2a4:	pop    ebp
  41c2a5:	cld    
  41c2a6:	jl     0x41c288
  41c2a8:	int    0x1a
  41c2aa:	in     al,0x60
  41c2ac:	push   0xac47320a
  41c2b1:	or     DWORD PTR [ecx-0x621fc18d],esp
  41c2b7:	fst    QWORD PTR [ebx-0x14ef29fe]
  41c2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2be:	mov    cl,0x31
  41c2c0:	frstor [ecx+0x73957259]
  41c2c6:	add    cl,ch
  41c2c8:	bound  esp,QWORD PTR es:[eax+0x61]
  41c2cc:	xchg   edi,eax
  41c2cd:	xchg   ebp,eax
  41c2ce:	pusha  
  41c2cf:	clc    
  41c2d0:	and    DWORD PTR [ebx-0x4b],ecx
  41c2d3:	div    DWORD PTR [esp+edx*2]
  41c2d6:	mov    ds:0xa94fc1e6,al
  41c2db:	cmp    eax,0xf1dd0b65
  41c2e0:	stos   DWORD PTR es:[edi],eax
  41c2e1:	or     BYTE PTR [ebx+esi*2-0x548b362e],cl
  41c2e8:	xchg   ecx,eax
  41c2e9:	sub    eax,0xc8dec0fa
  41c2ee:	ds pop ebp
  41c2f0:	nop
  41c2f1:	int3   
  41c2f2:	(bad)  
  41c2f3:	mov    ecx,0x2c6b1e77
  41c2f8:	adc    DWORD PTR [edi+0x43],ebp
  41c2fb:	adc    eax,0xd506b958
  41c300:	push   ecx
  41c301:	push   edi
  41c302:	xor    BYTE PTR [edi],cl
  41c304:	jp     0x41c2c0
  41c306:	mov    edx,0x7fc8bfc
  41c30b:	mov    cs,WORD PTR [esi]
  41c30d:	add    eax,0xa7a14d70
  41c312:	inc    ebx
  41c313:	cmp    BYTE PTR [eax-0x4],bl
  41c316:	test   BYTE PTR [edx-0x12040288],dl
  41c31c:	mov    dh,0x9d
  41c31e:	sbb    eax,esi
  41c320:	(bad)  
  41c322:	popa   
  41c323:	test   al,0xc1
  41c325:	mov    cl,0x5c
  41c327:	rcr    DWORD PTR ds:0x9b8c0362,0xab
  41c32e:	mov    dl,0x8a
  41c330:	sti    
  41c331:	(bad)  
  41c333:	sahf   
  41c334:	mov    bh,BYTE PTR [ebx-0x4a]
  41c337:	call   0xf8ef39c2
  41c33c:	dec    ebx
  41c33d:	repnz cmp al,0xe9
  41c340:	mov    cl,0x71
  41c342:	and    eax,0x880d6fe5
  41c347:	mov    esp,0x7d5e8d48
  41c34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34d:	jns    0x41c352
  41c34f:	pop    edx
  41c350:	inc    eax
  41c351:	test   bh,0x6f
  41c354:	ds mov dh,0x45
  41c357:	sub    al,0xf4
  41c359:	inc    eax
  41c35a:	pop    es
  41c35b:	mov    al,ds:0x73bf06ef
  41c360:	xchg   ebp,eax
  41c361:	push   0x6
  41c363:	xchg   ebx,eax
  41c364:	inc    esi
  41c365:	(bad)  
  41c366:	aaa    
  41c367:	cdq    
  41c368:	push   edx
  41c369:	sbb    DWORD PTR [edi+0x21ea08b1],ebp
  41c36f:	mov    BYTE PTR [esi],ah
  41c371:	mov    esi,0x2aec28a7
  41c376:	mov    bh,0xb5
  41c378:	in     al,dx
  41c379:	mov    WORD PTR [esi-0x2568921f],ds
  41c37f:	loope  0x41c3b3
  41c381:	push   ecx
  41c382:	pop    eax
  41c383:	pop    edi
  41c384:	dec    edi
  41c385:	arpl   WORD PTR [ebx+0x7c],bp
  41c388:	fiadd  DWORD PTR [edx-0x7b]
  41c38b:	in     eax,dx
  41c38c:	(bad)  
  41c38d:	aam    0xe8
  41c38f:	bound  edi,QWORD PTR [ebp-0x68]
  41c392:	jbe    0x41c389
  41c394:	dec    ebx
  41c395:	inc    edi
  41c396:	sti    
  41c397:	mov    cs,WORD PTR ds:0xad649579
  41c39d:	retf   
  41c39e:	push   ds
  41c39f:	arpl   WORD PTR [edx+0x4d],dx
  41c3a2:	mov    ebp,0xc7305fb2
  41c3a7:	xchg   al,bl
  41c3a9:	repnz sti 
  41c3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ac:	xchg   edi,ebx
  41c3ae:	ds pushf 
  41c3b0:	add    al,0xbd
  41c3b2:	les    esp,FWORD PTR [edx+0x53]
  41c3b5:	loopne 0x41c40d
  41c3b7:	icebp  
  41c3b8:	xchg   edx,eax
  41c3b9:	sbb    ch,BYTE PTR [ebx+ecx*2]
  41c3bc:	call   0x6cf1:0xb57fa346
  41c3c3:	xor    al,0xde
  41c3c5:	sub    dh,dl
  41c3c7:	mov    al,0xd3
  41c3c9:	popf   
  41c3ca:	mov    ecx,0x62418ea2
  41c3cf:	inc    esp
  41c3d0:	sbb    DWORD PTR [ecx+0x3785c6b2],ebp
  41c3d6:	test   BYTE PTR [ebx-0x34567a73],ah
  41c3dc:	imul   esp,DWORD PTR ds:0x139344be,0x5a
  41c3e3:	int    0x1
  41c3e5:	popa   
  41c3e6:	mov    esi,0x664a9af5
  41c3ec:	adc    eax,0xce825364
  41c3f1:	mov    bh,0xba
  41c3f3:	sbb    al,0x27
  41c3f5:	data16 mov bl,0x60
  41c3f8:	shl    DWORD PTR [esi+eiz*8],1
  41c3fb:	(bad)  
  41c3fc:	gs cmp al,bh
  41c3ff:	popa   
  41c400:	cmp    BYTE PTR [edi-0x29f948e2],cl
  41c406:	rcl    DWORD PTR ds:0x86a0624,0x8b
  41c40d:	scas   al,BYTE PTR es:[edi]
  41c40e:	adc    eax,0xc517cd84
  41c413:	xor    eax,DWORD PTR ds:0xf2270926
  41c419:	and    eax,0x58dbedf0
  41c41e:	out    dx,al
  41c41f:	pop    es
  41c420:	mov    DWORD PTR [edx+0x6fde4fb6],ebx
  41c426:	mov    bl,0x84
  41c428:	shl    BYTE PTR [ebx+edx*1+0x1],1
  41c42c:	dec    ebp
  41c42d:	or     ecx,esp
  41c42f:	xchg   ebx,eax
  41c430:	sub    esp,DWORD PTR [edi+0x78]
  41c433:	mov    ch,0xc3
  41c435:	and    esp,0x1e958486
  41c43b:	jl     0x41c494
  41c43d:	hlt    
  41c43e:	rcr    BYTE PTR [ecx-0x6c],cl
  41c441:	es xchg ecx,eax
  41c443:	and    al,0xff
  41c445:	hlt    
  41c446:	push   0x1ee40a6
  41c44b:	mov    ds:0x8d99185e,al
  41c450:	aaa    
  41c451:	jmp    0xf4e7:0x7a93662
  41c458:	inc    ebp
  41c459:	mov    dh,0xb4
  41c45b:	mov    WORD PTR [edi-0x1f3c4b3a],ss
  41c461:	icebp  
  41c462:	xchg   ebx,eax
  41c463:	push   cs
  41c464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c465:	inc    ebp
  41c466:	fistp  DWORD PTR [esi]
  41c468:	mov    ebp,0xfd57d862
  41c46d:	jp     0x41c44b
  41c46f:	and    edi,esp
  41c471:	jbe    0x41c470
  41c473:	fsubrp st(5),st
  41c475:	ret    0x277e
  41c478:	mov    cx,0x5c5a
  41c47c:	pushf  
  41c47d:	ds repz loope 0x41c4d8
  41c481:	dec    eax
  41c482:	xor    eax,0x5bcde57b
  41c487:	into   
  41c488:	jg     0x41c46b
  41c48a:	dec    ebx
  41c48b:	das    
  41c48c:	xchg   edi,eax
  41c48d:	in     al,dx
  41c48e:	(bad)  
  41c48f:	repz or al,0x5c
  41c492:	dec    eax
  41c493:	std    
  41c494:	sub    ebx,DWORD PTR [ecx]
  41c496:	(bad)  
  41c497:	inc    DWORD PTR [esi+0x629d3688]
  41c49d:	stc    
  41c49e:	xchg   ecx,eax
  41c49f:	pushf  
  41c4a0:	jbe    0x41c49e
  41c4a2:	test   al,0xec
  41c4a4:	loop   0x41c522
  41c4a6:	aad    0x5e
  41c4a8:	(bad)  
  41c4a9:	xor    dh,dh
  41c4ab:	sbb    bl,BYTE PTR [esi+0x225716c9]
  41c4b1:	in     al,dx
  41c4b2:	jnp    0x41c491
  41c4b4:	or     al,0x6b
  41c4b6:	lods   al,BYTE PTR ds:[esi]
  41c4b7:	dec    ebp
  41c4b8:	shr    DWORD PTR [esp+eax*1+0x51],0xfb
  41c4bd:	clc    
  41c4be:	call   0x57cc:0xd7490fd4
  41c4c5:	inc    edx
  41c4c6:	or     bl,ch
  41c4c8:	mov    bh,0xc
  41c4ca:	xchg   bl,dh
  41c4cc:	cs inc ebx
  41c4ce:	lods   al,BYTE PTR ds:[esi]
  41c4cf:	cwde   
  41c4d0:	aam    0x8e
  41c4d2:	sti    
  41c4d3:	lea    esi,[esi]
  41c4d5:	dec    eax
  41c4d6:	popa   
  41c4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d8:	or     eax,0xd24e49e2
  41c4dd:	mov    ecx,0x4b3399f
  41c4e2:	gs jbe 0x41c49e
  41c4e5:	add    eax,DWORD PTR [eax]
  41c4e7:	rol    bl,cl
  41c4e9:	pop    esi
  41c4ea:	in     eax,dx
  41c4eb:	mov    bl,0xb3
  41c4ed:	adc    dh,dl
  41c4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f0:	in     eax,dx
  41c4f1:	mov    eax,0xaaf907e1
  41c4f6:	(bad)  
  41c4f7:	scas   eax,DWORD PTR es:[edi]
  41c4f8:	mov    ds:0xf2106c6d,eax
  41c4fd:	sub    ebp,eax
  41c4ff:	out    0xfb,al
  41c501:	fistp  WORD PTR ds:0xfccd7c
  41c507:	in     al,0xc2
  41c509:	jge    0x41c523
  41c50b:	ret    
  41c50c:	adc    al,0x49
  41c50e:	lds    ebx,FWORD PTR [ebx]
  41c510:	std    
  41c511:	or     dh,cl
  41c513:	loope  0x41c57f
  41c515:	add    eax,0x2983c1ef
  41c51a:	fst    QWORD PTR [edx-0x2c529ce1]
  41c520:	xchg   ecx,eax
  41c521:	int3   
  41c522:	mov    bh,0xd
  41c524:	push   esi
  41c525:	enter  0x3c25,0x49
  41c529:	jp     0x41c588
  41c52b:	sub    al,0x29
  41c52d:	xor    al,0x31
  41c52f:	(bad)  
  41c530:	(bad)  
  41c531:	adc    DWORD PTR [esp-0x35033f22],ebx
  41c538:	xor    eax,0x95e2594
  41c53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53e:	je     0x41c541
  41c540:	dec    ebx
  41c541:	add    edx,esp
  41c543:	push   ss
  41c544:	addr16 js 0x41c55e
  41c547:	adc    eax,DWORD PTR [eax]
  41c549:	rcr    DWORD PTR [edx-0x62cd5143],0xa1
  41c550:	les    ebp,FWORD PTR [edx-0x7d]
  41c553:	xchg   esi,eax
  41c554:	xor    cl,bh
  41c556:	adc    DWORD PTR [edx],0xbcdfa369
  41c55c:	sbb    eax,0x116ee82f
  41c561:	adc    al,0x5d
  41c563:	fnstsw WORD PTR ds:0x8c494a8c
  41c569:	je     0x41c4ff
  41c56b:	pop    ebx
  41c56c:	in     al,dx
  41c56d:	inc    sp
  41c56f:	test   eax,0xc64ac426
  41c574:	mov    dh,0x6f
  41c576:	sub    DWORD PTR [edi+edx*2+0x27cbf5fa],0x7d
  41c57e:	xor    al,0x75
  41c580:	mov    ecx,0x511f731d
  41c585:	outs   dx,BYTE PTR ds:[esi]
  41c586:	mov    esp,0x2d96268d
  41c58b:	xor    DWORD PTR [eax+0x6f],edi
  41c58e:	stos   DWORD PTR es:[edi],eax
  41c58f:	cmp    al,ah
  41c591:	sub    DWORD PTR [esi+eax*4+0x6a21015e],edx
  41c598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c599:	add    al,0x3c
  41c59b:	xor    ch,BYTE PTR [eax]
  41c59d:	fisub  WORD PTR [ebp+0x4c]
  41c5a0:	dec    ecx
  41c5a1:	xchg   DWORD PTR [ebx-0x7],esp
  41c5a4:	inc    ebx
  41c5a6:	cdq    
  41c5a7:	out    dx,eax
  41c5a8:	lea    ebp,[edx+0x6]
  41c5ab:	or     esp,ebp
  41c5ad:	xor    bx,bp
  41c5b0:	inc    ecx
  41c5b1:	aad    0x8a
  41c5b3:	sbb    esi,eax
  41c5b5:	mov    bh,0xa0
  41c5b7:	inc    esi
  41c5b8:	push   esp
  41c5b9:	leave  
  41c5ba:	inc    ebx
  41c5bb:	lea    eax,[ebx]
  41c5bd:	xor    eax,0x900553e8
  41c5c2:	fidivr WORD PTR ds:0x1bc4ad3
  41c5c8:	dec    DWORD PTR [esi+eax*4]
  41c5cb:	mov    ah,0xe2
  41c5cd:	fistp  WORD PTR [eax+0x5818819d]
  41c5d3:	mov    cl,0x70
  41c5d5:	add    BYTE PTR [ecx+0x3a],dh
  41c5d8:	test   bh,bl
  41c5da:	mov    WORD PTR gs:[edi-0x3c],ds
  41c5de:	pushf  
  41c5df:	xchg   ecx,eax
  41c5e0:	popf   
  41c5e1:	pop    ss
  41c5e2:	xchg   DWORD PTR [esi-0x4dd1eb26],ecx
  41c5e8:	sbb    BYTE PTR [ebp+0x7ddfddb1],0x61
  41c5ef:	and    edx,eax
  41c5f1:	inc    esi
  41c5f2:	mov    ah,0x5a
  41c5f4:	mov    esp,0x853f0a2b
  41c5f9:	sbb    ah,BYTE PTR [edx-0x25]
  41c5fc:	out    0xf0,eax
  41c5fe:	inc    esi
  41c5ff:	pop    ds
  41c600:	pop    edx
  41c601:	std    
  41c602:	inc    esi
  41c603:	sbb    bh,BYTE PTR [edx-0x2c]
  41c606:	mov    ebx,0x13965856
  41c60b:	adc    eax,DWORD PTR [ecx-0x5327b156]
  41c611:	in     eax,0xf9
  41c613:	aas    
  41c614:	sar    dl,0x35
  41c617:	ret    
  41c618:	jne    0x41c612
  41c61a:	adc    DWORD PTR [eax+ecx*8],eax
  41c61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61e:	sti    
  41c61f:	jle    0x41c627
  41c621:	loopne 0x41c5c5
  41c623:	(bad)  
  41c624:	mov    bl,0x6b
  41c626:	sbb    esp,ecx
  41c628:	inc    edx
  41c629:	(bad)  
  41c62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c62c:	push   ds
  41c62d:	or     eax,0x161a9c24
  41c632:	dec    eax
  41c633:	retf   0x1327
  41c636:	push   0xffffffef
  41c638:	sar    ah,1
  41c63a:	fldcw  WORD PTR [esi+0x3a]
  41c63d:	fwait
  41c63e:	(bad)  
  41c63f:	jb     0x41c6b0
  41c641:	dec    esp
  41c642:	ins    BYTE PTR es:[edi],dx
  41c643:	mov    bl,0x29
  41c645:	int    0x1a
  41c647:	sub    edi,DWORD PTR [edx+esi*8]
  41c64a:	or     eax,DWORD PTR [ecx-0x530d195f]
  41c650:	or     BYTE PTR [edi-0x6683b443],dl
  41c656:	cmp    DWORD PTR [edx],edi
  41c658:	push   0x72
  41c65a:	int    0x7d
  41c65c:	push   ss
  41c65d:	push   cs
  41c65e:	es ret 0xbae0
  41c662:	mov    ebp,0x453b37c8
  41c667:	add    BYTE PTR [esi-0x5b69e88a],ah
  41c66d:	mov    cl,0xc4
  41c66f:	mov    ds:0xbe9810ad,al
  41c674:	cmp    BYTE PTR [ebp+0x23eb38e7],0xc0
  41c67b:	js     0x41c6ec
  41c67d:	mov    esp,0xae703209
  41c682:	push   0xe
  41c684:	sbb    esi,esp
  41c686:	and    BYTE PTR [edx-0x563c6d5b],al
  41c68c:	jge    0x41c6d8
  41c68e:	ds iret 
  41c690:	and    eax,0x124f1fdb
  41c695:	jge    0x41c6d0
  41c697:	push   ss
  41c698:	inc    esi
  41c699:	shl    DWORD PTR [edi+0x360a513e],1
  41c69f:	mov    eax,ds:0xc43b93b4
  41c6a4:	jae    0x41c63e
  41c6a6:	mov    ds:0xa3f4a355,al
  41c6ab:	inc    esi
  41c6ac:	mov    edi,DWORD PTR [esi+0x7]
  41c6af:	dec    edx
  41c6b0:	xchg   DWORD PTR [ecx+0x36],ebx
  41c6b3:	(bad)  [ebx]
  41c6b5:	push   0xa4953108
  41c6ba:	sub    cl,BYTE PTR ds:0xa0d4103e
  41c6c0:	mov    ebx,0x40ed7645
  41c6c5:	sub    DWORD PTR [ecx-0x69a54b36],ebx
  41c6cb:	jns    0x41c6c7
  41c6cd:	xchg   edi,eax
  41c6ce:	sahf   
  41c6cf:	imul   ecx,DWORD PTR [ebp+eax*8-0x67cc2a81],0xffffffe0
  41c6d7:	out    dx,eax
  41c6d8:	shl    edx,1
  41c6da:	and    ebx,esi
  41c6dc:	xchg   edi,eax
  41c6dd:	ds sub ch,0x31
  41c6e1:	jg     0x41c6ed
  41c6e3:	and    DWORD PTR ds:0x23807b4a,0xf9cf117e
  41c6ed:	leave  
  41c6ee:	pop    ecx
  41c6ef:	out    dx,eax
  41c6f0:	sbb    edi,DWORD PTR [edi-0x48]
  41c6f3:	add    ch,BYTE PTR [eax+0x31]
  41c6f6:	xchg   dh,dl
  41c6f8:	in     al,0x11
  41c6fa:	push   ecx
  41c6fb:	scas   eax,DWORD PTR es:[edi]
  41c6fc:	jb     0x41c684
  41c6fe:	ror    bh,1
  41c700:	das    
  41c701:	jle    0x41c6e6
  41c703:	leave  
  41c704:	bound  ecx,QWORD PTR [esi-0x1d]
  41c707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c708:	shl    ebx,cl
  41c70a:	aas    
  41c70b:	imul   ebx,DWORD PTR [ebp+0x2826a2b8],0xdd553493
  41c715:	pop    ecx
  41c716:	idiv   edi
  41c718:	sub    dh,BYTE PTR [edx+esi*8]
  41c71b:	jne    0x41c73b
  41c71d:	fdiv   DWORD PTR [eax+eax*8-0x5c]
  41c721:	mov    ds:0x3446a6bd,eax
  41c726:	xchg   BYTE PTR [ebp-0x3bd40398],al
  41c72c:	cmc    
  41c72d:	jg     0x41c7ae
  41c72f:	and    edi,DWORD PTR [eax]
  41c731:	mov    ebx,0x3725041a
  41c736:	ret    0x1b4a
  41c739:	cmp    ebp,edi
  41c73b:	in     eax,dx
  41c73c:	jno    0x41c6cf
  41c73e:	(bad)  
  41c741:	dec    edi
  41c742:	in     al,dx
  41c743:	outs   dx,DWORD PTR ds:[esi]
  41c744:	xchg   ebp,eax
  41c745:	dec    ecx
  41c746:	lahf   
  41c747:	std    
  41c748:	dec    ecx
  41c749:	clc    
  41c74a:	adc    eax,DWORD PTR [edx-0x62f181d3]
  41c750:	test   eax,0x18af871b
  41c755:	xchg   edx,eax
  41c756:	clc    
  41c757:	jl     0x41c734
  41c759:	pop    ecx
  41c75a:	ins    DWORD PTR es:[edi],dx
  41c75b:	rcr    edx,cl
  41c75d:	cwde   
  41c75e:	push   edx
  41c75f:	xchg   edi,eax
  41c760:	inc    eax
  41c761:	retf   0x7450
  41c764:	or     BYTE PTR [edi-0x254e52ce],bh
  41c76a:	sbb    al,0xd5
  41c76c:	scas   al,BYTE PTR es:[edi]
  41c76d:	cli    
  41c76e:	das    
  41c76f:	loope  0x41c71b
  41c771:	pop    es
  41c772:	xchg   esi,eax
  41c773:	jge    0x41c7b9
  41c775:	pop    esp
  41c777:	and    al,0x53
  41c779:	xor    cl,BYTE PTR ds:0x51ee18dc
  41c77f:	add    al,BYTE PTR [eax]
  41c781:	div    BYTE PTR [eax]
  41c783:	inc    eax
  41c784:	clc    
  41c785:	jp     0x41c7a2
  41c787:	cld    
  41c788:	xchg   ebp,eax
  41c789:	nop
  41c78a:	setnp  BYTE PTR [eax+eiz*2-0x38]
  41c78f:	clc    
  41c790:	push   edi
  41c791:	(bad)  
  41c793:	cs jg  0x41c764
  41c796:	sbb    DWORD PTR ds:0xc3d88f56,esp
  41c79c:	push   ebx
  41c79d:	js     0x41c800
  41c79f:	push   0xfaa16dfe
  41c7a4:	cdq    
  41c7a5:	mov    edi,0x24631887
  41c7aa:	dec    ebx
  41c7ab:	ja     0x41c73e
  41c7ad:	cmp    ecx,ebp
  41c7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b0:	inc    esp
  41c7b1:	cmp    DWORD PTR [eax-0x48],esi
  41c7b4:	mov    dh,0xe6
  41c7b6:	sub    eax,0xbc5e7133
  41c7bb:	jge    0x41c835
  41c7bd:	imul   ebp,esp,0xa1393e94
  41c7c3:	test   al,al
  41c7c5:	inc    esi
  41c7c6:	gs push ss
  41c7c8:	enter  0x5e47,0x1f
  41c7cc:	mov    bl,0x3e
  41c7ce:	int    0x73
  41c7d0:	adc    al,0x24
  41c7d2:	imul   edx,ecx,0xffffffbb
  41c7d5:	stc    
  41c7d6:	mov    al,0x1d
  41c7d8:	sub    al,0xdc
  41c7da:	add    BYTE PTR [ebx-0x2fd7424],al
  41c7e0:	push   edx
  41c7e1:	clc    
  41c7e2:	pop    ecx
  41c7e3:	into   
  41c7e4:	aas    
  41c7e5:	ss pop eax
  41c7e7:	ja     0x41c78e
  41c7e9:	or     eax,0xdf72126c
  41c7ee:	jne    0x41c7c0
  41c7f0:	or     edi,DWORD PTR [ebx+0x43]
  41c7f3:	(bad)  
  41c7f4:	push   cs
  41c7f5:	adc    DWORD PTR [esi-0x60f6f927],0xbd6a6cf0
  41c7ff:	std    
  41c800:	shr    DWORD PTR [edi+0x7c],0x9b
  41c804:	pop    edx
  41c805:	popf   
  41c806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c807:	stos   DWORD PTR es:[edi],eax
  41c808:	rcl    DWORD PTR [ebx],0xe4
  41c80b:	push   edx
  41c80c:	in     al,0x55
  41c80e:	std    
  41c80f:	cmp    esp,DWORD PTR [ebp+0x6cda279a]
  41c815:	mov    al,ds:0x19b22e8c
  41c81a:	sub    DWORD PTR [edi+0x1a],edx
  41c81d:	push   ebx
  41c81e:	or     ebp,esp
  41c820:	(bad)  
  41c821:	fisttp QWORD PTR ds:0x2d8c3aae
  41c827:	pop    edx
  41c828:	loopne 0x41c896
  41c82a:	inc    edi
  41c82b:	cld    
  41c82c:	mov    bh,0xb3
  41c82e:	cld    
  41c82f:	neg    DWORD PTR [edi]
  41c831:	fidivr WORD PTR [edi+edx*1]
  41c834:	loopne 0x41c822
  41c836:	out    dx,eax
  41c837:	and    BYTE PTR [ecx+ebx*8],dl
  41c83a:	jmp    0x41c821
  41c83c:	pop    edi
  41c83d:	and    edx,eax
  41c83f:	cmp    BYTE PTR [ecx+0x72],ah
  41c842:	pmulhuw mm4,QWORD PTR [ebp-0x75]
  41c846:	dec    esp
  41c847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c848:	or     eax,0xd555323c
  41c84d:	jp     0x41c7ff
  41c84f:	(bad)  
  41c850:	jl     0x41c88b
  41c852:	inc    ebx
  41c853:	in     eax,0x42
  41c855:	lahf   
  41c856:	xor    edi,DWORD PTR [ecx-0x2e9064fe]
  41c85c:	mov    cl,0xb3
  41c85e:	loope  0x41c807
  41c860:	inc    esi
  41c861:	aaa    
  41c862:	aaa    
  41c863:	mov    bh,0xc2
  41c865:	adc    eax,DWORD PTR ds:0xa184c35b
  41c86b:	dec    edx
  41c86c:	mov    ?,WORD PTR [ebx-0x3fdf58f6]
  41c872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c873:	sub    esp,DWORD PTR [esp+ebp*2+0x55]
  41c877:	(bad)  
  41c878:	mov    edi,0xd9bf1ffe
  41c87d:	int3   
  41c87e:	mov    ds:0x5bd161e5,eax
  41c883:	push   ebx
  41c884:	fisubr DWORD PTR [ebx]
  41c886:	fist   DWORD PTR [eax+0x4b]
  41c889:	jns    0x41c8c7
  41c88b:	mov    edi,0xe4682636
  41c890:	mov    ecx,0x83a39387
  41c895:	adc    cl,BYTE PTR [edx-0x6ebe0edc]
  41c89b:	idiv   DWORD PTR [eax-0x17309a84]
  41c8a1:	stos   DWORD PTR es:[edi],eax
  41c8a2:	(bad)  
  41c8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a4:	pushf  
  41c8a5:	xor    DWORD PTR [edx+0x74e01e2],ebx
  41c8ab:	add    eax,DWORD PTR [eax+ebx*4]
  41c8ae:	add    BYTE PTR [eax],ah
  41c8b0:	inc    esi
  41c8b1:	push   0xfffffffa
  41c8b3:	push   edi
  41c8b4:	ss out 0x73,eax
  41c8b7:	das    
  41c8b8:	ficomp WORD PTR [ebp-0x13a978b7]
  41c8be:	inc    edx
  41c8bf:	lods   eax,DWORD PTR ds:[esi]
  41c8c0:	out    dx,al
  41c8c1:	mov    bl,0x81
  41c8c3:	in     al,dx
  41c8c4:	and    dh,BYTE PTR [edx-0x7b83eddf]
  41c8ca:	mov    dh,0x50
  41c8cc:	test   DWORD PTR [edx-0x4a18d0d1],edx
  41c8d2:	fadd   QWORD PTR [ecx]
  41c8d4:	imul   ebp,DWORD PTR [esi],0xe904636f
  41c8da:	(bad)  [edi]
  41c8dc:	xor    DWORD PTR [eax+0xfa3ad52],ecx
  41c8e2:	dec    edx
  41c8e3:	mov    ah,0x7e
  41c8e5:	push   ebx
  41c8e6:	into   
  41c8e7:	add    al,0xb8
  41c8e9:	jge    0x41c913
  41c8eb:	(bad)  [eax-0x2d05c73c]
  41c8f1:	rol    BYTE PTR [edx-0x26],0x10
  41c8f5:	mov    edi,0x8750a77f
  41c8fa:	push   eax
  41c8fb:	test   DWORD PTR [ebx-0x631f992e],edi
  41c901:	loop   0x41c943
  41c903:	mov    ecx,0x919b4a6d
  41c908:	pop    edi
  41c909:	add    al,0x80
  41c90b:	pop    es
  41c90c:	mov    bl,0x7c
  41c90e:	jg     0x41c941
  41c910:	(bad)  
  41c911:	push   ebx
  41c912:	and    BYTE PTR [edx+0x7e66901f],0x13
  41c919:	xor    bh,BYTE PTR [ebp+0x2a2267f1]
  41c91f:	cmp    edx,ecx
  41c921:	retf   0xda79
  41c924:	cwde   
  41c925:	sbb    eax,DWORD PTR [ebp-0x4d22de12]
  41c92b:	loope  0x41c974
  41c92d:	data16 int 0xae
  41c930:	push   ecx
  41c931:	and    cl,bh
  41c933:	mov    al,0xb4
  41c935:	cmp    DWORD PTR [eax-0x5cb06730],edi
  41c93b:	pop    edx
  41c93c:	scas   eax,DWORD PTR es:[edi]
  41c93d:	jae    0x41c93c
  41c93f:	clc    
  41c940:	mov    ah,0x18
  41c942:	in     eax,0xec
  41c944:	rcr    ah,1
  41c946:	xchg   ecx,eax
  41c947:	ficom  WORD PTR [ecx+0x45]
  41c94a:	sti    
  41c94b:	jge    0x41c902
  41c94d:	outs   dx,DWORD PTR ds:[esi]
  41c94e:	push   ecx
  41c94f:	push   ebx
  41c950:	(bad)  
  41c951:	push   edi
  41c952:	mov    edi,0x503e284b
  41c957:	push   ebp
  41c958:	cmp    eax,0x7ce3eb6e
  41c95d:	iret   
  41c95e:	scas   al,BYTE PTR es:[edi]
  41c95f:	xchg   ah,cl
  41c961:	loope  0x41c9d7
  41c963:	sub    cl,0x17
  41c966:	dec    edi
  41c967:	mov    al,ds:0xe3d678ed
  41c96c:	ja     0x41c950
  41c96e:	cmp    BYTE PTR [eax+0x3b6623f],dl
  41c974:	xor    bl,dl
  41c976:	(bad)  
  41c977:	sub    BYTE PTR ds:0xc499b34e,ch
  41c97d:	cmp    al,0x85
  41c97f:	mov    BYTE PTR ds:0xaff1bb36,bl
  41c985:	int3   
  41c986:	pop    ebp
  41c987:	in     eax,0x15
  41c989:	sub    ebx,DWORD PTR [edi+0x20b407ef]
  41c98f:	std    
  41c990:	and    BYTE PTR [eax+0x68],dl
  41c993:	cdq    
  41c994:	xor    al,0x8a
  41c996:	jmp    0x41c9f1
  41c998:	xchg   ebx,eax
  41c999:	xchg   esi,eax
  41c99a:	mov    edx,0x2c40c661
  41c99f:	push   cs
  41c9a0:	xchg   dl,ch
  41c9a2:	mov    bl,0x78
  41c9a4:	(bad)  
  41c9a5:	leave  
  41c9a6:	stc    
  41c9a7:	mov    edx,0x26d1c5f2
  41c9ac:	scas   al,BYTE PTR es:[edi]
  41c9ad:	in     al,0xc9
  41c9af:	adc    edi,DWORD PTR [ebp+0x41]
  41c9b2:	xor    al,0xde
  41c9b4:	adc    BYTE PTR [esi+0x68],dl
  41c9b7:	add    DWORD PTR [esi],ecx
  41c9b9:	mov    ss,eax
  41c9bb:	ret    0xb33d
  41c9be:	jb     0x41c99e
  41c9c0:	sub    al,0xd5
  41c9c2:	sub    dl,ch
  41c9c4:	or     al,0x1d
  41c9c6:	pop    esp
  41c9c7:	mov    al,ds:0xe43c8bd9
  41c9cc:	pop    esp
  41c9cd:	pop    es
  41c9ce:	and    edx,esi
  41c9d0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c9d2:	js     0x41c959
  41c9d4:	mov    ch,0x52
  41c9d6:	mov    esp,0x8eeabb92
  41c9db:	or     al,0xa4
  41c9dd:	mov    ah,0xcc
  41c9df:	sub    al,0xbe
  41c9e1:	add    al,0x93
  41c9e3:	pop    esp
  41c9e4:	xchg   ecx,eax
  41c9e5:	pop    ebx
  41c9e6:	(bad)  
  41c9e7:	pop    edi
  41c9e8:	shl    ch,1
  41c9ea:	cmp    al,0x7c
  41c9ec:	jmp    0x1940:0xee79be1c
  41c9f3:	loope  0x41c9ee
  41c9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f6:	loope  0x41c9b5
  41c9f8:	mov    dl,0xc7
  41c9fa:	cmp    BYTE PTR [eax+0x76],0xda
  41c9fe:	mov    ch,BYTE PTR [esi-0x51a151ac]
  41ca04:	call   FWORD PTR [ecx]
  41ca06:	ins    DWORD PTR es:[edi],dx
  41ca07:	outs   dx,DWORD PTR ds:[esi]
  41ca08:	ror    DWORD PTR [edi],cl
  41ca0a:	or     ah,bl
  41ca0c:	ret    0x2832
  41ca0f:	xchg   ebx,eax
  41ca10:	pop    ecx
  41ca11:	sahf   
  41ca12:	add    DWORD PTR [edx+0x3d],ebx
  41ca15:	ins    DWORD PTR es:[edi],dx
  41ca16:	in     eax,dx
  41ca17:	pop    ss
  41ca18:	loop   0x41ca0f
  41ca1a:	rcr    BYTE PTR [ebx+ebx*1+0x24bcf1c8],0x0
  41ca22:	add    DWORD PTR [esi+0x68],0xffffffcb
  41ca26:	adc    edi,DWORD PTR [esp+eax*4+0x34208f9e]
  41ca2d:	aam    0x3a
  41ca2f:	inc    DWORD PTR [edx+0x359030f6]
  41ca35:	iret   
  41ca36:	fstp   DWORD PTR [ebx-0x69dba2bb]
  41ca3c:	and    bh,BYTE PTR ds:0xdd1ed33d
  41ca42:	das    
  41ca43:	fninit 
  41ca45:	daa    
  41ca46:	mov    eax,ds:0xf1f611c1
  41ca4b:	cmp    esp,DWORD PTR [edx]
  41ca4d:	dec    esi
  41ca4e:	jge    0x41ca7f
  41ca50:	iret   
  41ca51:	mov    dl,0x90
  41ca53:	rcr    BYTE PTR [ecx-0x11],1
  41ca56:	mov    ebp,0x13957b85
  41ca5b:	or     BYTE PTR [esi-0x53],al
  41ca5e:	call   0xc2244fd7
  41ca63:	mov    BYTE PTR [ebp+ebp*2-0x3011f05],al
  41ca6a:	lds    esp,FWORD PTR [ecx+0x3b]
  41ca6d:	ss jbe 0x41ca17
  41ca70:	lods   eax,DWORD PTR ds:[esi]
  41ca71:	fiadd  DWORD PTR [edi-0x5]
  41ca74:	(bad)  
  41ca75:	jl     0x41ca91
  41ca77:	jns    0x41cac1
  41ca79:	(bad)  
  41ca7a:	jg     0x41ca5b
  41ca7c:	pminub mm5,QWORD PTR [eax-0x60665a5f]
  41ca83:	ror    esp,0x92
  41ca86:	repnz push es
  41ca88:	je     0x41ca56
  41ca8a:	leave  
  41ca8b:	loopne 0x41ca1c
  41ca8d:	and    esp,esi
  41ca8f:	xchg   BYTE PTR [ebx],cl
  41ca91:	mov    bh,0xb2
  41ca93:	mov    dh,BYTE PTR [ebx+0x38]
  41ca96:	sti    
  41ca97:	mov    al,ds:0xea083595
  41ca9c:	clc    
  41ca9d:	out    0x21,al
  41ca9f:	or     BYTE PTR [ebx+0x2e],dl
  41caa2:	mov    eax,ds:0x11164132
  41caa7:	inc    esi
  41caa8:	inc    ecx
  41caa9:	push   ds
  41caaa:	pusha  
  41caab:	fadd   DWORD PTR [edx]
  41caad:	fadd   DWORD PTR [esp+ebp*4-0x7247c078]
  41cab4:	cmp    eax,0xf37d35a6
  41cab9:	sub    DWORD PTR [ecx*4-0x3dab7670],0x42a9e68c
  41cac4:	xchg   ecx,eax
  41cac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac6:	push   0x54ef41e5
  41cacb:	push   edi
  41cacc:	outs   dx,BYTE PTR ds:[esi]
  41cacd:	into   
  41cace:	pop    ds
  41cacf:	mov    al,fs:0x9700c599
  41cad5:	pop    edi
  41cad6:	arpl   WORD PTR [edi+0x3e],bp
  41cad9:	aam    0xc5
  41cadb:	fld    DWORD PTR [esi+ebx*4]
  41cade:	xchg   edx,eax
  41cadf:	pop    edx
  41cae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae1:	dec    edi
  41cae2:	test   al,0x7f
  41cae4:	push   cs
  41cae5:	add    BYTE PTR [eax],cl
  41cae7:	in     al,dx
  41cae8:	mov    esp,0x1a678dfc
  41caed:	push   0x51
  41caef:	repnz pop ecx
  41caf1:	jmp    0x41cab9
  41caf3:	jae    0x41cb0e
  41caf5:	aas    
  41caf6:	enter  0x816a,0x4f
  41cafa:	cmp    BYTE PTR [edi-0x62],al
  41cafd:	jnp    0x41cb12
  41caff:	push   edi
  41cb00:	push   0xd813c10c
  41cb05:	push   edx
  41cb06:	add    ch,BYTE PTR [ecx+0x52]
  41cb09:	xor    al,0x32
  41cb0b:	push   esp
  41cb0c:	out    0x8e,al
  41cb0e:	cli    
  41cb0f:	and    DWORD PTR [edi+0x72],ebx
  41cb12:	fs xchg ebx,eax
  41cb14:	cmc    
  41cb15:	or     al,0x6b
  41cb17:	mov    bl,0x79
  41cb19:	adc    dl,ah
  41cb1b:	lahf   
  41cb1c:	into   
  41cb1d:	pop    edi
  41cb1e:	addr16 (bad) 
  41cb20:	mov    BYTE PTR [edi-0x7f828c6b],dl
  41cb26:	pop    esp
  41cb27:	xchg   BYTE PTR [ebp+0x61fd188b],bl
  41cb2d:	inc    ebp
  41cb2e:	jp     0x41cb12
  41cb30:	fst    DWORD PTR [edx-0x86d141e]
  41cb36:	test   ch,al
  41cb38:	retf   
  41cb39:	icebp  
  41cb3a:	add    al,0xef
  41cb3c:	and    ch,dl
  41cb3e:	mov    esp,0x4dac2b5c
  41cb43:	xchg   edx,eax
  41cb44:	xor    DWORD PTR gs:[edi+0x4f119a56],0xd33f39aa
  41cb4f:	lahf   
  41cb50:	shl    edi,0xbb
  41cb53:	or     BYTE PTR [esi-0x54],0xd6
  41cb57:	hlt    
  41cb58:	cmp    BYTE PTR [ecx+0x7ec186f0],cl
  41cb5e:	xor    BYTE PTR [edx-0x285cfccf],dh
  41cb64:	leave  
  41cb65:	inc    edi
  41cb66:	fcomi  st,st(6)
  41cb68:	push   eax
  41cb69:	(bad)  
  41cb6a:	fucomip st,st(0)
  41cb6c:	mov    ebp,0xf948a138
  41cb71:	test   ch,cl
  41cb73:	ins    BYTE PTR es:[edi],dx
  41cb74:	xor    eax,0x5fda181b
  41cb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7a:	push   es
  41cb7b:	jecxz  0x41cbd1
  41cb7d:	sub    ebp,ebx
  41cb7f:	(bad)  
  41cb80:	sub    dh,BYTE PTR [edx+0x4b]
  41cb83:	add    edx,DWORD PTR [esi-0x188595af]
  41cb89:	test   al,0xf8
  41cb8b:	ss jae 0x41cbb6
  41cb8e:	dec    edx
  41cb8f:	pop    ds
  41cb90:	cwde   
  41cb91:	imul   esi,DWORD PTR [edx-0x71],0x75
  41cb95:	xor    ecx,DWORD PTR [ebp+0x52808863]
  41cb9b:	add    ebx,DWORD PTR ds:0x91b20438
  41cba1:	lea    edx,[edx+0x70]
  41cba4:	adc    BYTE PTR [ecx-0x33],ch
  41cba7:	sub    DWORD PTR [ebx+edx*8+0x72abed82],eax
  41cbae:	fistp  WORD PTR [ebp-0x7b]
  41cbb1:	loopne 0x41cb68
  41cbb3:	xor    eax,0x23d02c54
  41cbb8:	pop    ss
  41cbb9:	sahf   
  41cbba:	pushf  
  41cbbb:	sub    ecx,DWORD PTR [eax-0x3a]
  41cbbe:	sub    BYTE PTR [edx+0x3556c853],al
  41cbc4:	ja     0x41cb5f
  41cbc6:	fdivr  DWORD PTR es:[esi-0x44]
  41cbca:	int    0x14
  41cbcc:	or     ecx,DWORD PTR [edi+0x3140a2aa]
  41cbd2:	imul   DWORD PTR [ebx+0x47]
  41cbd5:	inc    ebp
  41cbd6:	mov    cl,0x11
  41cbd8:	and    dh,BYTE PTR [esp+edx*8+0x43846cdb]
  41cbdf:	push   es
  41cbe0:	add    eax,0x9e7e5e2e
  41cbe5:	xor    bh,BYTE PTR [ebx]
  41cbe7:	push   eax
  41cbe8:	call   0xdcf:0xd1f9c3de
  41cbef:	or     eax,0x4d620cb
  41cbf4:	sbb    al,0xca
  41cbf6:	inc    esp
  41cbf7:	shl    DWORD PTR [edx-0x20],1
  41cbfa:	shl    DWORD PTR [ecx+eiz*2-0x47],1
  41cbfe:	out    0x13,al
  41cc00:	pushf  
  41cc01:	rcl    DWORD PTR [ebx+0x4c],cl
  41cc04:	push   es
  41cc05:	loope  0x41cba1
  41cc07:	mov    ebp,0xa1327d5a
  41cc0c:	cmp    BYTE PTR [ecx-0x20ab60bd],dh
  41cc12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc13:	in     al,0xa6
  41cc15:	dec    esi
  41cc16:	jmp    0x41cbc8
  41cc18:	(bad)  
  41cc1a:	fdivr  st(3),st
  41cc1c:	jge    0x41cbb0
  41cc1e:	inc    ebx
  41cc1f:	and    eax,0x5ee767d7
  41cc24:	mov    ebp,DWORD PTR [edx]
  41cc26:	adc    eax,0x79c4512d
  41cc2b:	rcl    BYTE PTR cs:[ebx+0x33],0xcd
  41cc30:	int    0xe5
  41cc32:	in     al,dx
  41cc33:	test   DWORD PTR [ecx-0x29],esp
  41cc36:	mov    edx,0x66f0b312
  41cc3b:	jmp    0xe094:0x9a198a1f
  41cc42:	stc    
  41cc43:	stc    
  41cc44:	xor    ecx,DWORD PTR [edi+eiz*2]
  41cc47:	sbb    DWORD PTR [eax+0x444f34f0],edi
  41cc4d:	ins    BYTE PTR es:[edi],dx
  41cc4e:	fcom   QWORD PTR [edx]
  41cc50:	in     al,0xbd
  41cc52:	(bad)  
  41cc53:	xor    esp,esp
  41cc55:	retf   
  41cc56:	inc    esi
  41cc57:	xchg   edi,eax
  41cc58:	and    edi,eax
  41cc5a:	xor    al,cl
  41cc5c:	mov    edx,0x1b218225
  41cc61:	lods   al,BYTE PTR ds:[esi]
  41cc62:	in     al,0x1c
  41cc64:	mov    bh,BYTE PTR [eax]
  41cc66:	fsubrp st(2),st
  41cc68:	icebp  
  41cc69:	or     eax,DWORD PTR ds:0x802e460c
  41cc6f:	imul   esp,DWORD PTR ds:0x31988c78,0x83869274
  41cc79:	mov    ds:0x7cfa21c,al
  41cc7e:	test   BYTE PTR [edi+0x40b6da1a],bl
  41cc84:	popa   
  41cc85:	mov    edi,DWORD PTR [edx-0x324a5350]
  41cc8b:	mov    ebp,0x7f663716
  41cc90:	mov    bl,0xeb
  41cc92:	or     cl,ch
  41cc94:	sbb    eax,DWORD PTR [esi]
  41cc96:	js     0x41ccc4
  41cc98:	retf   
  41cc99:	out    dx,al
  41cc9a:	jmp    0x41cc46
  41cc9c:	push   ss
  41cc9d:	xchg   BYTE PTR [ebx],al
  41cc9f:	or     al,0xb1
  41cca1:	xor    ch,BYTE PTR [ecx+0x6f88be3a]
  41cca7:	dec    esi
  41cca8:	xor    eax,0xe29e98a2
  41ccad:	test   DWORD PTR [edx],ebx
  41ccaf:	sub    BYTE PTR [ecx-0x28a7fd81],0x80
  41ccb6:	in     al,dx
  41ccb7:	pusha  
  41ccb8:	mov    esp,0x10ed5bab
  41ccbd:	xor    ebx,ebp
  41ccbf:	cli    
  41ccc0:	les    esi,FWORD PTR cs:[esi]
  41ccc3:	fs call 0xb5cf5941
  41ccc9:	cwde   
  41ccca:	jnp    0x41cd07
  41cccc:	cmp    DWORD PTR [edi-0x2dde3da9],0xd2aa167
  41ccd6:	sahf   
  41ccd7:	bound  edx,QWORD PTR [eax]
  41ccd9:	leave  
  41ccda:	mov    dh,0x11
  41ccdc:	cdq    
  41ccdd:	dec    esi
  41ccde:	lahf   
  41ccdf:	mov    eax,ds:0x167ae584
  41cce4:	sti    
  41cce5:	popa   
  41cce6:	pop    eax
  41cce7:	out    0x3f,eax
  41cce9:	adc    DWORD PTR [ebx],ebp
  41cceb:	inc    eax
  41ccec:	test   eax,0x3980738f
  41ccf1:	adc    eax,0xcdac839
  41ccf6:	pop    edi
  41ccf7:	out    dx,eax
  41ccf8:	addr16 nop
  41ccfa:	sbb    eax,0xfe10e786
  41ccff:	lods   al,BYTE PTR ds:[esi]
  41cd00:	xchg   ecx,eax
  41cd01:	sbb    ch,BYTE PTR [edx-0x38]
  41cd04:	dec    ebx
  41cd05:	loope  0x41cd24
  41cd07:	mov    ah,0xc5
  41cd09:	jmp    0x8dab:0x68d93c5
  41cd10:	pop    esi
  41cd11:	fadd   QWORD PTR [ecx-0x2e925980]
  41cd17:	cmc    
  41cd18:	or     ah,BYTE PTR [esi]
  41cd1a:	test   eax,0x3e2292e3
  41cd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd20:	pop    ebx
  41cd21:	loopne 0x41ccc3
  41cd23:	and    BYTE PTR [ebx],cl
  41cd25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd27:	jbe    0x41cd40
  41cd29:	or     BYTE PTR [ecx],ah
  41cd2b:	test   BYTE PTR [esi+0x7fc182ea],ch
  41cd31:	or     dh,cl
  41cd33:	jnp    0x41ccf7
  41cd35:	mov    esi,eax
  41cd37:	cmc    
  41cd38:	ret    
  41cd39:	sub    BYTE PTR [edi+0xf2f19a6],dh
  41cd3f:	adc    al,0x75
  41cd41:	xchg   edx,eax
  41cd42:	data16 jp 0x41cd69
  41cd45:	pusha  
  41cd46:	out    0x90,eax
  41cd48:	popf   
  41cd49:	retf   
  41cd4a:	push   ecx
  41cd4b:	(bad)  
  41cd4c:	lds    edx,FWORD PTR [ebx]
  41cd4e:	cdq    
  41cd4f:	mov    ebp,0x97e93ecd
  41cd54:	jo     0x41cd40
  41cd56:	subps  xmm7,XMMWORD PTR [eax+0x1e]
  41cd5a:	(bad)  
  41cd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd5c:	jl     0x41cd2d
  41cd5e:	mov    ds:0x3b0f669,eax
  41cd63:	ds mov ecx,0x193af1ca
  41cd69:	bnd call 0x9479169c
  41cd6f:	pop    es
  41cd70:	data16 sub al,0x17
  41cd73:	stos   BYTE PTR es:[edi],al
  41cd74:	inc    ebp
  41cd75:	cli    
  41cd76:	rol    DWORD PTR ds:0xffb2a612,cl
  41cd7c:	pop    edx
  41cd7d:	fbstp  TBYTE PTR [ecx+ebx*2]
  41cd80:	repnz pop ss
  41cd82:	jge    0x41cd0f
  41cd84:	adc    ah,BYTE PTR [ebx-0x11729b4e]
  41cd8a:	dec    edx
  41cd8b:	and    eax,0x4804f9a3
  41cd90:	es (bad) 
  41cd92:	ss push 0x7e9529c4
  41cd98:	pop    ebx
  41cd99:	shl    ch,0x86
  41cd9c:	stos   DWORD PTR es:[edi],eax
  41cd9d:	aaa    
  41cd9e:	fsubrp st(6),st
  41cda0:	gs sti 
  41cda2:	jne    0x41cd28
  41cda4:	rep ins DWORD PTR es:[edi],dx
  41cda6:	mov    ecx,0xe950aa71
  41cdab:	fstp   DWORD PTR [edx]
  41cdad:	shl    DWORD PTR [edi],1
  41cdaf:	dec    ebp
  41cdb0:	call   0x1e3b:0xe36f5232
  41cdb7:	call   FWORD PTR [ecx-0x1bd5060f]
  41cdbd:	adc    BYTE PTR [esi+edx*4-0x45],bh
  41cdc1:	dec    edx
  41cdc2:	retf   0x5a97
  41cdc5:	call   0x95be:0x557421dd
  41cdcc:	sbb    al,0xf4
  41cdce:	jno    0x41cddf
  41cdd0:	leave  
  41cdd1:	imul   edx,DWORD PTR [edi+0x1de0a0ae],0xe28fa852
  41cddb:	xor    al,0xd0
  41cddd:	pop    es
  41cdde:	repz hlt 
  41cde0:	sbb    DWORD PTR [edi-0x156def21],0xc80ca519
  41cdea:	ret    
  41cdeb:	xchg   edx,eax
  41cdec:	hlt    
  41cded:	pop    ss
  41cdee:	jle    0x41cd70
  41cdf0:	icebp  
  41cdf1:	popa   
  41cdf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdf3:	mov    ah,0xbe
  41cdf5:	mov    eax,esi
  41cdf7:	ins    DWORD PTR es:[edi],dx
  41cdf8:	hlt    
  41cdf9:	bound  edx,QWORD PTR [eax]
  41cdfb:	sub    eax,0x2fb8b3ea
  41ce00:	cmp    eax,DWORD PTR ds:0x82893f75
  41ce06:	fist   DWORD PTR [edi+0x6e79e3ab]
  41ce0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce0d:	inc    esi
  41ce0e:	shl    DWORD PTR [edi-0x38400600],1
  41ce14:	sti    
  41ce15:	ret    0xb5d
  41ce18:	into   
  41ce19:	out    dx,al
  41ce1a:	cwde   
  41ce1b:	stc    
  41ce1c:	enter  0x78b4,0x46
  41ce20:	js     0x41cde5
  41ce22:	rol    BYTE PTR [esi],1
  41ce24:	int    0x10
  41ce26:	xor    BYTE PTR [ebx-0x3409c56a],bl
  41ce2c:	out    dx,eax
  41ce2d:	sub    al,0x9
  41ce2f:	sub    BYTE PTR [ebx],0x74
  41ce32:	jne    0x41cddf
  41ce34:	imul   ebp,DWORD PTR [esi-0x1bbd2e8],0x422d706e
  41ce3e:	adc    edx,DWORD PTR [ecx]
  41ce40:	daa    
  41ce41:	xor    bh,dl
  41ce43:	xlat   BYTE PTR ds:[ebx]
  41ce44:	pop    es
  41ce45:	pop    ds
  41ce46:	sbb    eax,0xba8a9440
  41ce4b:	add    al,0xd9
  41ce4d:	xchg   BYTE PTR [esi+edi*2],bh
  41ce50:	rcr    BYTE PTR [edi+0x3e],0xf7
  41ce54:	into   
  41ce55:	loopne 0x41ce09
  41ce57:	mov    cl,cl
  41ce59:	stos   BYTE PTR es:[edi],al
  41ce5a:	add    eax,0xf4dafc8c
  41ce5f:	mov    edx,DWORD PTR [edx-0x37]
  41ce62:	(bad)  
  41ce63:	jle    0x41cedf
  41ce65:	cwde   
  41ce66:	inc    edi
  41ce67:	push   0xffffffde
  41ce69:	in     eax,0x22
  41ce6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6c:	(bad)  
  41ce6d:	sbb    al,0xba
  41ce6f:	mov    cl,0x3b
  41ce71:	sbb    eax,0xed28927b
  41ce76:	test   BYTE PTR [ecx-0x657992ab],ch
  41ce7c:	dec    esp
  41ce7d:	push   edx
  41ce7e:	mov    ds:0x318b5f41,eax
  41ce83:	addr16 mov bh,0xa0
  41ce86:	(bad)  
  41ce87:	out    dx,eax
  41ce88:	bound  eax,QWORD PTR [eax+esi*2-0x74e41fe6]
  41ce8f:	(bad)  
  41ce91:	mov    bh,0xaa
  41ce93:	scas   eax,DWORD PTR es:[edi]
  41ce94:	call   0x814ed72d
  41ce99:	cs int3 
  41ce9b:	(bad)  
  41ce9c:	pop    edx
  41ce9d:	mov    edx,0xea5e1c
  41cea2:	mov    bh,0xc5
  41cea4:	(bad)  
  41cea5:	inc    eax
  41cea6:	fdiv   QWORD PTR [edi+eiz*1]
  41cea9:	sbb    DWORD PTR [edi],0x6d
  41ceac:	int    0xdd
  41ceae:	xor    ah,cl
  41ceb0:	xor    al,0xd8
  41ceb2:	lock aaa 
  41ceb4:	ret    0xc383
  41ceb7:	ja     0x41ced2
  41ceb9:	xor    BYTE PTR [edx+0x31],ch
  41cebc:	and    al,0x6f
  41cebe:	pop    edx
  41cebf:	or     DWORD PTR [esi+0x9231cc],esi
  41cec5:	mov    eax,ds:0x126d1866
  41ceca:	jbe    0x41cee6
  41cecc:	scas   eax,DWORD PTR es:[edi]
  41cecd:	pop    ebx
  41cece:	pop    ecx
  41cecf:	lea    esi,[edx-0x1ea6b3fb]
  41ced5:	addr16 add al,0xb6
  41ced8:	mov    ebp,DWORD PTR [esi+0x7b]
  41cedb:	int    0x5d
  41cedd:	stos   DWORD PTR es:[edi],eax
  41cede:	ror    DWORD PTR [ebx],1
  41cee0:	dec    ecx
  41cee1:	jbe    0x41cf4d
  41cee3:	jg     0x41ced8
  41cee5:	add    BYTE PTR ds:0x5aa43328,al
  41ceeb:	or     dh,BYTE PTR [ecx]
  41ceed:	lods   al,BYTE PTR ds:[esi]
  41ceee:	xor    edi,ecx
  41cef0:	push   es
  41cef1:	and    edx,DWORD PTR [edi]
  41cef3:	xchg   ebp,eax
  41cef4:	pop    DWORD PTR [ebx-0x36460971]
  41cefa:	sahf   
  41cefb:	cdq    
  41cefc:	(bad)  
  41cefe:	pinsrw mm6,WORD PTR [ebx-0x45],0xa6
  41cf03:	enter  0x15a3,0x56
  41cf07:	mov    BYTE PTR [ebx],ch
  41cf09:	mov    edi,0xed0fcc75
  41cf0e:	mul    ebx
  41cf10:	adc    BYTE PTR [ecx+ebx*1+0x78196b84],bl
  41cf17:	jl     0x41ced5
  41cf19:	jmp    0x5dc1:0xd70563ea
  41cf20:	call   0x2a53cec4
  41cf25:	xor    ah,BYTE PTR [eax+0x68]
  41cf28:	push   ss
  41cf29:	fisttp DWORD PTR [eax-0xd327940]
  41cf2f:	das    
  41cf30:	or     cl,BYTE PTR [edx]
  41cf32:	mov    BYTE PTR [edi+0x66],cl
  41cf35:	mov    al,0xa4
  41cf37:	push   esp
  41cf38:	mov    al,ds:0x9cf9ceaa
  41cf3d:	cmp    ah,ch
  41cf3f:	repnz frstor [ebx-0x18]
  41cf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf44:	stos   BYTE PTR es:[edi],al
  41cf45:	jae    0x41cf0f
  41cf47:	sub    esi,0x6e
  41cf4a:	loope  0x41cedd
  41cf4c:	pop    ecx
  41cf4d:	sahf   
  41cf4e:	cmc    
  41cf4f:	clc    
  41cf50:	xchg   ebx,eax
  41cf51:	lahf   
  41cf52:	push   ebx
  41cf53:	pop    es
  41cf54:	push   ebp
  41cf55:	int3   
  41cf56:	mov    ebx,0x88658453
  41cf5b:	out    0x82,eax
  41cf5d:	rcr    cl,cl
  41cf5f:	and    eax,0x352ce1f8
  41cf64:	lds    edi,FWORD PTR [edi]
  41cf66:	pop    ebp
  41cf67:	ds nop
  41cf69:	xchg   esi,eax
  41cf6a:	push   edi
  41cf6b:	push   edx
  41cf6c:	xchg   ebx,eax
  41cf6d:	adc    esp,edx
  41cf6f:	mov    dh,0x24
  41cf71:	xor    ch,BYTE PTR [eax]
  41cf73:	mov    ch,0xfe
  41cf75:	pop    ds
  41cf76:	call   0x6f41:0x6d1947c0
  41cf7d:	clc    
  41cf7e:	xchg   ebx,eax
  41cf7f:	xchg   edx,eax
  41cf80:	jo     0x41cfdd
  41cf82:	mov    al,dh
  41cf84:	xor    edi,eax
  41cf86:	fild   WORD PTR [eax]
  41cf88:	or     BYTE PTR [edi],bh
  41cf8a:	scas   al,BYTE PTR es:[edi]
  41cf8b:	mov    esi,0xff0957aa
  41cf90:	push   edx
  41cf91:	xor    DWORD PTR [ebx],edi
  41cf93:	daa    
  41cf94:	mov    eax,ds:0xf988ebed
  41cf99:	movzx  esi,WORD PTR [eax+edx*1-0x1f36eab2]
  41cfa1:	enter  0x3a58,0xc
  41cfa5:	imul   ebx,DWORD PTR [edx],0xc8f2906d
  41cfab:	sti    
  41cfac:	pop    esp
  41cfad:	inc    edx
  41cfae:	sbb    al,0x6f
  41cfb0:	enter  0xcd4f,0xcb
  41cfb4:	pusha  
  41cfb5:	cs dec ebp
  41cfb7:	rcr    BYTE PTR [ebp-0x63],cl
  41cfba:	dec    esp
  41cfbb:	cmp    esi,ebp
  41cfbd:	push   ds
  41cfbe:	test   BYTE PTR [edi-0x304b627f],0x70
  41cfc5:	adc    eax,0x2c1e8516
  41cfca:	mov    dh,0x9f
  41cfcc:	in     eax,0x86
  41cfce:	pushf  
  41cfcf:	add    BYTE PTR [ebx],dh
  41cfd1:	and    BYTE PTR [eax+0x49ea3790],al
  41cfd7:	push   ebp
  41cfd8:	pop    eax
  41cfd9:	and    BYTE PTR [ebx-0x6c8bcf0f],bh
  41cfdf:	call   0x5370:0x422191df
  41cfe6:	mov    bh,0x92
  41cfe8:	mov    ebp,0x49ec8f7
  41cfed:	add    ebx,DWORD PTR ds:[ebx+0x50f35a17]
  41cff4:	sub    ebp,DWORD PTR es:0x7721bf7
  41cffb:	retf   
  41cffc:	jno    0x41cf88
  41cffe:	dec    ebx
  41cfff:	ret    0x5990
  41d002:	stos   DWORD PTR es:[edi],eax
  41d003:	aas    
  41d004:	pop    edi
  41d005:	inc    ebp
  41d006:	sub    edx,0xffffff89
  41d009:	call   0x37d431fd
  41d00e:	or     DWORD PTR [edx+0x47f5da1a],0xffffffcb
  41d015:	sbb    eax,0x17a93519
  41d01a:	adc    DWORD PTR [eax+0x51],ecx
  41d01d:	enter  0x788f,0xdc
  41d021:	push   esp
  41d022:	dec    edx
  41d023:	das    
  41d024:	adc    al,0x37
  41d026:	and    BYTE PTR [esi],ah
  41d028:	loopne 0x41cfcf
  41d02a:	lods   al,BYTE PTR ds:[esi]
  41d02b:	and    DWORD PTR [esi],ecx
  41d02d:	dec    edx
  41d02e:	dec    eax
  41d02f:	xchg   esp,eax
  41d030:	jnp    0x41d064
  41d032:	xchg   ecx,eax
  41d033:	call   0x937e:0xac92015
  41d03a:	sub    dl,BYTE PTR ss:[edi-0x9d4f055]
  41d041:	call   0xacd53904
  41d046:	sbb    al,0x93
  41d048:	in     al,0x12
  41d04a:	loopne 0x41d068
  41d04c:	adc    bl,ah
  41d04e:	dec    edx
  41d04f:	inc    esi
  41d050:	adc    BYTE PTR [edx+0x750716ef],0xfa
  41d057:	adc    eax,0x9205b14c
  41d05c:	sub    dh,dh
  41d05e:	inc    edx
  41d05f:	cdq    
  41d060:	cdq    
  41d061:	in     al,0x3b
  41d063:	(bad)  
  41d064:	icebp  
  41d065:	lods   eax,DWORD PTR ds:[esi]
  41d066:	retf   
  41d067:	adc    ch,BYTE PTR [edx]
  41d069:	or     edx,ebp
  41d06b:	mov    esp,0xae1f0959
  41d070:	js     0x41d0ee
  41d072:	clc    
  41d073:	test   BYTE PTR [eax],bh
  41d075:	imul   eax,DWORD PTR [ecx-0x4dcd5a1],0xffffffce
  41d07c:	pop    edx
  41d07d:	cdq    
  41d07e:	in     eax,dx
  41d07f:	lods   al,BYTE PTR ds:[esi]
  41d080:	jnp    0x41d02c
  41d082:	add    bh,BYTE PTR [ecx]
  41d084:	iret   
  41d085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d086:	sub    BYTE PTR [esi+0x4c9b7bc5],0x29
  41d08d:	gs pop es
  41d08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d090:	adc    DWORD PTR [eax+0x7e],0xe1b2e1ee
  41d097:	push   cs
  41d098:	sbb    edx,DWORD PTR [ebp-0x6c]
  41d09b:	int3   
  41d09c:	adc    ebx,DWORD PTR [ebp-0x3c]
  41d09f:	and    ebp,edx
  41d0a1:	xor    DWORD PTR [esi-0x736d0cfb],ebp
  41d0a7:	fsubr  QWORD PTR [ecx+0x56]
  41d0aa:	add    BYTE PTR [esp+edx*4+0x4f],dh
  41d0ae:	retf   0x8048
  41d0b1:	jb     0x41d091
  41d0b3:	aas    
  41d0b4:	out    dx,al
  41d0b5:	scas   eax,DWORD PTR es:[edi]
  41d0b6:	mov    ds:0x84ede1b6,eax
  41d0bb:	or     eax,0x2a652e75
  41d0c0:	or     eax,0xa88fc7a2
  41d0c5:	add    ebp,esi
  41d0c7:	lea    esp,[esi-0x3df5faa1]
  41d0cd:	xchg   edx,eax
  41d0ce:	imul   esp,DWORD PTR [edi+0x267a755d],0xffffffb3
  41d0d5:	inc    edi
  41d0d6:	cmp    bl,BYTE PTR [edi+0x15]
  41d0d9:	xor    ch,BYTE PTR [eax+0x7d]
  41d0dc:	xchg   BYTE PTR [ecx+0x67],cl
  41d0df:	ror    DWORD PTR ss:[ebx-0x10035691],1
  41d0e6:	idiv   BYTE PTR [edi-0x42095fb2]
  41d0ec:	cmp    DWORD PTR [ebp-0x7189dff0],ebp
  41d0f2:	jno    0x41d079
  41d0f4:	adc    DWORD PTR [ebx+0x52f2b53d],ebx
  41d0fa:	(bad)  
  41d0fb:	push   ss
  41d0fc:	sub    dh,BYTE PTR [ecx-0x73]
  41d0ff:	ror    esi,0xd5
  41d102:	test   ch,ch
  41d104:	pop    edx
  41d105:	imul   edx,DWORD PTR [edi],0xfffffff3
  41d108:	pop    esp
  41d109:	gs test eax,0x5a38c7ec
  41d10f:	dec    ebx
  41d110:	lds    edi,FWORD PTR [edx-0x49fe99db]
  41d116:	push   ss
  41d117:	sub    bl,BYTE PTR [edi]
  41d119:	sub    BYTE PTR [ebp+0x5a8f3f41],al
  41d11f:	inc    DWORD PTR [ecx-0x1791e9c9]
  41d125:	out    dx,eax
  41d126:	mov    cs,WORD PTR [eax-0x2]
  41d129:	adc    al,0x8a
  41d12b:	leave  
  41d12c:	and    DWORD PTR [esi-0x16],0xffffffcb
  41d130:	outs   dx,BYTE PTR ds:[esi]
  41d131:	inc    ebx
  41d132:	jg     0x41d149
  41d134:	mov    al,ds:0xe99dea6d
  41d139:	rdtsc  
  41d13b:	cmp    cl,0xb0
  41d13e:	sbb    edx,edx
  41d140:	cld    
  41d141:	dec    ecx
  41d142:	ret    0xdc0d
  41d145:	fld    DWORD PTR [esi-0x2f6f1701]
  41d14b:	scas   al,BYTE PTR es:[edi]
  41d14c:	push   eax
  41d14d:	mov    dh,0xb2
  41d14f:	ret    
  41d150:	mov    ebx,0x2edcbe3b
  41d155:	xor    al,0x7b
  41d157:	mov    edx,0x537f6be7
  41d15c:	push   edx
  41d15d:	inc    eax
  41d15e:	inc    eax
  41d15f:	enter  0x2bb0,0x28
  41d163:	test   eax,0x2b4cacdf
  41d168:	jbe    0x41d150
  41d16a:	push   edx
  41d16b:	or     eax,0xf011ed9d
  41d170:	pushf  
  41d171:	add    ch,BYTE PTR [esi+0x2c]
  41d174:	jg     0x41d16a
  41d176:	pop    esi
  41d177:	push   edx
  41d178:	retf   0x297a
  41d17b:	push   es
  41d17c:	int    0xb6
  41d17e:	shr    DWORD PTR [ecx+0x1c666e2],1
  41d184:	or     BYTE PTR [esi*1-0x14b3e782],bh
  41d18b:	jb     0x41d17f
  41d18d:	call   0x7cd7f031
  41d192:	shr    BYTE PTR [edx+esi*1-0x24728f0a],cl
  41d199:	xchg   DWORD PTR [ebx-0x9bb9eee],esi
  41d19f:	sub    al,cl
  41d1a1:	dec    edx
  41d1a2:	mov    ch,0xee
  41d1a4:	div    BYTE PTR [edx+0x3e]
  41d1a7:	push   esi
  41d1a8:	cmp    edi,DWORD PTR [edx-0x47fd94a9]
  41d1ae:	jno    0x41d1a2
  41d1b0:	imul   edi,DWORD PTR [eax+0x7e],0x3bde45a7
  41d1b7:	arpl   WORD PTR [esi+ecx*8+0x2b],dx
  41d1bb:	or     dl,BYTE PTR fs:[edx]
  41d1be:	xor    bh,0x59
  41d1c1:	pop    eax
  41d1c2:	cdq    
  41d1c3:	push   edi
  41d1c4:	or     eax,0x4921d0d1
  41d1c9:	and    al,0x52
  41d1cb:	jecxz  0x41d195
  41d1cd:	ds pop es
  41d1cf:	xchg   esi,eax
  41d1d0:	mov    ds:0xd50387d3,al
  41d1d5:	jge    0x41d20f
  41d1d7:	jo     0x41d1b8
  41d1d9:	jg     0x41d1f9
  41d1db:	out    0x52,al
  41d1dd:	lahf   
  41d1de:	pop    ss
  41d1df:	adc    cl,BYTE PTR [edx+0x3272eb5e]
  41d1e5:	es into 
  41d1e7:	pusha  
  41d1e8:	ret    0xe8f7
  41d1eb:	cdq    
  41d1ec:	mov    edi,ebp
  41d1ee:	mov    ebp,0xd7b1ef7c
  41d1f3:	test   eax,0xa4871923
  41d1f8:	pop    edi
  41d1f9:	mov    edi,0x56ddaf8e
  41d1fe:	sub    ebp,ebp
  41d200:	icebp  
  41d201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d202:	sbb    dl,cl
  41d204:	pusha  
  41d205:	ficomp WORD PTR [edi]
  41d207:	jbe    0x41d1c6
  41d209:	mov    al,ds:0x977b0c3d
  41d20e:	add    al,0x26
  41d210:	in     al,0xac
  41d212:	les    ebx,FWORD PTR [esi-0x4d]
  41d215:	jnp    0x41d26e
  41d217:	or     ch,bl
  41d219:	add    al,0x2c
  41d21b:	in     al,0xaa
  41d21d:	sti    
  41d21e:	cmp    dl,BYTE PTR [ebx]
  41d220:	xchg   ecx,eax
  41d221:	or     DWORD PTR [eax-0x2febdceb],ebx
  41d227:	cmp    eax,0x633b0489
  41d22c:	dec    ebp
  41d22d:	jg     0x41d258
  41d22f:	sbb    eax,0xa22f104e
  41d234:	fs jg  0x41d1d6
  41d237:	imul   ebx,DWORD PTR [eax+0x5c3ff5a7],0xffffffb7
  41d23e:	daa    
  41d23f:	mov    esi,0xf97b6d72
  41d244:	mov    bl,0x6b
  41d246:	test   edi,esp
  41d248:	(bad)  
  41d24a:	arpl   WORD PTR [esi+ebp*2-0x76f406e9],ax
  41d251:	(bad)  
  41d252:	adc    eax,0xed780694
  41d257:	aam    0x52
  41d259:	int3   
  41d25a:	lahf   
  41d25b:	dec    edx
  41d25c:	cmp    ecx,DWORD PTR [edx+esi*8+0x56]
  41d260:	mov    WORD PTR [esi-0x642712fa],gs
  41d266:	sahf   
  41d267:	mov    ds:0x69e0a30a,al
  41d26c:	lods   eax,DWORD PTR ds:[esi]
  41d26d:	loopne 0x41d24a
  41d26f:	jns    0x41d20b
  41d271:	push   ecx
  41d272:	push   esp
  41d273:	clc    
  41d274:	inc    ebx
  41d275:	dec    ebx
  41d276:	mov    ah,0x98
  41d278:	xchg   esi,eax
  41d279:	adc    DWORD PTR [edi],ebp
  41d27b:	pop    ss
  41d27c:	out    dx,eax
  41d27d:	in     eax,dx
  41d27e:	ins    DWORD PTR es:[edi],dx
  41d27f:	test   DWORD PTR ds:0x9a495813,ecx
  41d285:	dec    esi
  41d286:	fisttp WORD PTR [ebp+0x48]
  41d289:	dec    edx
  41d28a:	xchg   edi,eax
  41d28b:	push   ebx
  41d28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d28d:	scas   eax,DWORD PTR es:[edi]
  41d28e:	pop    eax
  41d28f:	pushf  
  41d290:	loop   0x41d2b3
  41d292:	les    esi,FWORD PTR [esi-0x2917155f]
  41d298:	out    dx,al
  41d299:	clc    
  41d29a:	pop    ecx
  41d29b:	fmul   QWORD PTR [esi+edi*1+0x5cd0d692]
  41d2a2:	sahf   
  41d2a3:	retf   0x858e
  41d2a6:	retf   0xfe3
  41d2a9:	add    al,0xf7
  41d2ab:	mov    WORD PTR [edx],ds
  41d2ad:	(bad)  
  41d2ae:	and    DWORD PTR [ebp+0x1],ebp
  41d2b1:	loopne 0x41d2a2
  41d2b3:	pop    esi
  41d2b4:	xchg   BYTE PTR [edi+eiz*1-0x2a5e57bf],al
  41d2bb:	jmp    0x41d27c
  41d2bd:	mov    ecx,0x1c9eadcf
  41d2c2:	add    al,0x17
  41d2c4:	pop    ss
  41d2c5:	fstp   TBYTE PTR [ecx+0x9]
  41d2c8:	mov    esi,DWORD PTR [ebp-0x36]
  41d2cb:	outs   dx,BYTE PTR ds:[esi]
  41d2cd:	push   eax
  41d2ce:	fwait
  41d2cf:	std    
  41d2d0:	stos   DWORD PTR es:[edi],eax
  41d2d1:	dec    ebp
  41d2d2:	les    ecx,FWORD PTR [ebx]
  41d2d4:	dec    ebx
  41d2d5:	scas   eax,DWORD PTR es:[edi]
  41d2d6:	imul   DWORD PTR [edi+eiz*8+0x1165daca]
  41d2dd:	cmp    ch,BYTE PTR [esp+esi*2]
  41d2e0:	inc    ebx
  41d2e1:	fistp  QWORD PTR [edx-0x7d]
  41d2e4:	add    BYTE PTR [edi-0x75e47fe],cl
  41d2ea:	fist   DWORD PTR [edx+0x47]
  41d2ed:	mov    ebp,0xbb811b69
  41d2f2:	add    ah,BYTE PTR [ebx+0x4c]
  41d2f5:	cmp    BYTE PTR [edi+ebx*2-0x5d4ae710],cl
  41d2fc:	cwde   
  41d2fd:	fwait
  41d2fe:	sahf   
  41d2ff:	jecxz  0x41d301
  41d301:	inc    edi
  41d302:	dec    esi
  41d303:	pushf  
  41d304:	fucomi st,st(2)
  41d306:	fnstcw WORD PTR [ecx-0x2]
  41d309:	xchg   ecx,eax
  41d30a:	push   esi
  41d30b:	mov    eax,0xfb2d9d50
  41d310:	inc    ebp
  41d311:	inc    ebx
  41d312:	popf   
  41d313:	ret    0x970b
  41d316:	repnz rcr ebp,0xea
  41d31a:	sbb    eax,0x5c315008
  41d31f:	pop    es
  41d320:	add    al,0x6b
  41d322:	jl     0x41d2f8
  41d324:	dec    eax
  41d325:	mov    eax,0x31fe7eb0
  41d32a:	dec    esp
  41d32b:	fdivr  st,st(5)
  41d32d:	jmp    0x41d373
  41d32f:	mov    ds:0xcc291dd5,eax
  41d334:	inc    edx
  41d335:	int3   
  41d336:	push   cs
  41d337:	out    0xa8,al
  41d339:	cld    
  41d33a:	and    cl,ah
  41d33c:	add    BYTE PTR [ebx],al
  41d33e:	sar    BYTE PTR [edx],0xa
  41d341:	scas   ax,WORD PTR es:[edi]
  41d343:	imul   edi,DWORD PTR [edx-0x640e043f],0x1b
  41d34a:	idiv   DWORD PTR [ecx]
  41d34c:	fnstcw WORD PTR [ecx-0x100805ce]
  41d352:	or     DWORD PTR ss:[ebx+0x36],0xffffff97
  41d357:	inc    ecx
  41d358:	sbb    eax,0x94c59dbb
  41d35d:	inc    esi
  41d35e:	dec    ebx
  41d35f:	push   ebp
  41d360:	scas   al,BYTE PTR es:[edi]
  41d361:	mov    DWORD PTR [esp+ecx*1],ebp
  41d364:	xchg   esi,eax
  41d365:	frstor [esi-0x7cf672e5]
  41d36b:	(bad)  
  41d36c:	pop    ds
  41d36d:	(bad)  
  41d36e:	lods   eax,DWORD PTR ds:[esi]
  41d36f:	cdq    
  41d370:	add    bl,BYTE PTR [esi]
  41d372:	adc    DWORD PTR [ebx-0x7a],ebx
  41d375:	sub    BYTE PTR [ebx],dh
  41d377:	jnp    0x41d3c8
  41d379:	test   DWORD PTR [eax],edx
  41d37b:	sub    eax,0x23c07895
  41d380:	fidiv  WORD PTR [ecx-0x3a]
  41d383:	loopne 0x41d319
  41d385:	push   edx
  41d386:	or     cl,dl
  41d388:	sub    eax,0xe4c149ee
  41d38d:	out    dx,al
  41d38e:	pop    ecx
  41d38f:	add    eax,0xc6e0cc06
  41d394:	mov    ah,0xa3
  41d396:	dec    edi
  41d397:	and    ebx,DWORD PTR [eax+0x49]
  41d39a:	outs   dx,BYTE PTR ds:[esi]
  41d39b:	pop    ebp
  41d39c:	(bad)  
  41d39d:	mov    ds:0x27b18525,eax
  41d3a2:	jo     0x41d3cc
  41d3a4:	in     eax,dx
  41d3a5:	mov    al,ds:0x14b0c601
  41d3aa:	dec    ebp
  41d3ab:	dec    ebx
  41d3ac:	loop   0x41d351
  41d3ae:	icebp  
  41d3af:	lods   eax,DWORD PTR ds:[esi]
  41d3b0:	ret    0x10e0
  41d3b3:	add    edx,eax
  41d3b5:	aam    0x38
  41d3b7:	rcl    DWORD PTR [eax],1
  41d3b9:	stos   DWORD PTR es:[edi],eax
  41d3ba:	ins    BYTE PTR es:[edi],dx
  41d3bb:	xor    ecx,DWORD PTR [ebx]
  41d3bd:	adc    BYTE PTR [edx-0x7dcb25b7],bh
  41d3c3:	pop    DWORD PTR [esi-0x1f]
  41d3c6:	inc    ebx
  41d3c7:	daa    
  41d3c8:	jns    0x41d3aa
  41d3ca:	int    0x56
  41d3cc:	pushf  
  41d3cd:	xchg   BYTE PTR [edx],dh
  41d3cf:	adc    ah,BYTE PTR [eax-0xa]
  41d3d2:	ja     0x41d42a
  41d3d4:	push   edx
  41d3d5:	(bad)  
  41d3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d7:	loop   0x41d445
  41d3d9:	xchg   WORD PTR [edx+0x44411d2],cx
  41d3e0:	aas    
  41d3e1:	test   eax,0x522c5b0a
  41d3e6:	xchg   BYTE PTR [edx+0x21],ch
  41d3e9:	jbe    0x41d39b
  41d3eb:	xor    eax,0xe2496cc1
  41d3f0:	in     eax,0xbc
  41d3f2:	sub    eax,0xbf7e6bdf
  41d3f7:	js     0x41d3ff
  41d3f9:	and    ecx,ebx
  41d3fb:	or     al,0x67
  41d3fd:	fadd   DWORD PTR [edi]
  41d3ff:	loopne 0x41d3a6
  41d401:	ret    0x63c9
  41d404:	mov    esp,0x7c73b14b
  41d409:	cmp    al,0xd5
  41d40b:	ret    
  41d40c:	or     dl,0x87
  41d40f:	ss lahf 
  41d411:	jno    0x41d3f2
  41d413:	push   cs
  41d414:	xor    BYTE PTR [edx-0x38],bl
  41d417:	jecxz  0x41d3ca
  41d419:	push   ecx
  41d41a:	fiadd  WORD PTR [ecx+0x6f]
  41d41d:	jmp    0xdc728006
  41d422:	sub    eax,0x663f89d8
  41d427:	adc    ah,dl
  41d429:	cmp    DWORD PTR [edx],esp
  41d42b:	pop    esi
  41d42c:	out    dx,al
  41d42d:	xchg   esp,eax
  41d42e:	call   0x4ed65ffc
  41d433:	push   edx
  41d434:	(bad)  
  41d436:	push   ebx
  41d437:	sub    al,0x7d
  41d439:	(bad)  
  41d43b:	pop    esi
  41d43c:	ins    DWORD PTR es:[edi],dx
  41d43d:	jp     0x41d49f
  41d43f:	in     eax,dx
  41d440:	sub    bh,BYTE PTR [edi-0x3f]
  41d443:	ja     0x41d458
  41d445:	in     eax,dx
  41d446:	cmp    DWORD PTR [ebx],0xffffff94
  41d449:	pop    ds
  41d44a:	inc    edi
  41d44b:	jecxz  0x41d443
  41d44d:	outs   dx,BYTE PTR ds:[esi]
  41d44e:	pop    ebx
  41d44f:	sar    DWORD PTR [esi-0x30],1
  41d452:	push   eax
  41d453:	ins    BYTE PTR es:[edi],dx
  41d454:	ret    0x7364
  41d457:	or     al,0x2d
  41d459:	mov    esp,0x75917ca8
  41d45e:	inc    eax
  41d45f:	sbb    dl,bl
  41d461:	xchg   esi,eax
  41d462:	pushf  
  41d463:	xor    eax,0x1e7cfdc3
  41d468:	ds (bad) 
  41d46b:	mov    BYTE PTR [esi-0x20430bd9],0x2c
  41d472:	pminsw mm6,mm6
  41d475:	sbb    ah,bh
  41d477:	in     al,dx
  41d478:	aam    0x79
  41d47a:	pop    esi
  41d47b:	push   cs
  41d47c:	inc    esp
  41d47d:	jns    0x41d4ab
  41d47f:	sub    bh,bh
  41d481:	lahf   
  41d482:	mov    al,ds:0x6212429d
  41d487:	and    eax,DWORD PTR [ecx+ebp*2]
  41d48a:	dec    ebp
  41d48b:	mov    ecx,0x6838c4a4
  41d490:	dec    ebx
  41d491:	xor    DWORD PTR [edi-0x758e2c7c],edi
  41d497:	pop    ebp
  41d498:	xchg   BYTE PTR [ebx-0x1f],dl
  41d49b:	shl    BYTE PTR ds:0x24e6ac71,cl
  41d4a1:	mov    edi,0xf979262c
  41d4a6:	inc    esp
  41d4a7:	je     0x41d48b
  41d4a9:	push   ds
  41d4aa:	dec    ebx
  41d4ab:	in     al,0xf1
  41d4ad:	rcl    ah,1
  41d4af:	mov    dh,BYTE PTR [esi+0xb]
  41d4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b3:	inc    edx
  41d4b4:	mov    edi,0x6e7ef8a5
  41d4b9:	add    ecx,DWORD PTR [ebx+esi*2-0x4a]
  41d4bd:	xchg   esp,eax
  41d4be:	jb     0x41d50e
  41d4c0:	loop   0x41d475
  41d4c2:	cwde   
  41d4c3:	ds out dx,al
  41d4c5:	(bad)  
  41d4c6:	shl    BYTE PTR [edi-0x217d667c],1
  41d4cc:	in     al,dx
  41d4cd:	xor    ah,ah
  41d4cf:	dec    eax
  41d4d0:	jne    0x41d50d
  41d4d2:	add    edx,edi
  41d4d4:	dec    esi
  41d4d5:	mov    WORD PTR [ecx+eiz*2+0x56],es
  41d4d9:	shl    DWORD PTR [ebx-0x51faa81f],0x11
  41d4e0:	gs ror cl,cl
  41d4e3:	and    esi,DWORD PTR [esi]
  41d4e5:	pop    edx
  41d4e6:	out    0xeb,eax
  41d4e8:	push   esp
  41d4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ea:	sbb    dl,0x9f
  41d4ed:	fsubr  st,st(4)
  41d4ef:	stc    
  41d4f0:	out    0xe7,eax
  41d4f2:	clc    
  41d4f3:	add    DWORD PTR [edx+0x5d],ebx
  41d4f6:	adc    DWORD PTR [esi+0xa],ebp
  41d4f9:	fdiv   DWORD PTR [eax-0x1b]
  41d4fc:	mov    bh,0xb4
  41d4fe:	push   0xffffffe1
  41d500:	loop   0x41d4cf
  41d502:	addr16 xchg esp,eax
  41d504:	pop    edi
  41d505:	loope  0x41d54b
  41d507:	xor    ah,BYTE PTR [esi]
  41d509:	lods   eax,DWORD PTR ds:[esi]
  41d50a:	scas   al,BYTE PTR es:[edi]
  41d50b:	call   FWORD PTR [edx+0x61933d13]
  41d511:	or     BYTE PTR [esi+0x1b7f336e],al
  41d517:	jbe    0x41d586
  41d519:	jl     0x41d4bc
  41d51b:	pop    eax
  41d51c:	jecxz  0x41d4c1
  41d51e:	jl     0x41d519
  41d520:	out    0xb2,eax
  41d522:	out    dx,al
  41d523:	jns    0x41d4b7
  41d525:	sub    ebx,DWORD PTR [edi+edx*1+0x643236c1]
  41d52c:	add    eax,0x15a2204e
  41d531:	fsub   QWORD PTR [eax+0x4f]
  41d534:	rcr    edi,1
  41d536:	jb     0x41d59d
  41d538:	mov    esi,0xda30711d
  41d53d:	arpl   bx,ax
  41d53f:	cmc    
  41d540:	jmp    0xfafb871a
  41d545:	or     DWORD PTR [esi+0x0],ecx
  41d548:	sub    ah,BYTE PTR [ebx]
  41d54a:	in     al,dx
  41d54b:	add    eax,0x7e16689
  41d550:	adc    al,0x58
  41d552:	push   ebx
  41d553:	push   edx
  41d554:	jo     0x41d51b
  41d556:	adc    BYTE PTR ds:0xe4f079de,al
  41d55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d55d:	xchg   BYTE PTR [ecx+0x74],dh
  41d560:	mov    ds:0xdb0a63a7,eax
  41d565:	(bad)  
  41d566:	push   esp
  41d567:	cld    
  41d568:	push   es
  41d569:	jge    0x41d5e3
  41d56b:	call   0x70de8e33
  41d570:	sbb    BYTE PTR [esi-0x7d],cl
  41d573:	aas    
  41d574:	dec    ebx
  41d575:	jne    0x41d586
  41d577:	test   cl,ch
  41d579:	mov    bl,0xd8
  41d57b:	call   0xdd69f60a
  41d580:	adc    al,0xc2
  41d582:	int    0x70
  41d584:	inc    esi
  41d585:	push   ecx
  41d586:	mov    ecx,0x8df6f3f9
  41d58b:	mov    esi,0x21b55b99
  41d590:	sub    edi,DWORD PTR [ebp+0x1b]
  41d593:	jmp    0x5a1f20ef
  41d598:	mov    eax,ds:0xb83b4d8
  41d59e:	shr    dh,0xe2
  41d5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a2:	repz dec esp
  41d5a4:	and    BYTE PTR [edi+0x6480ff30],bh
  41d5aa:	push   cs
  41d5ab:	ja     0x41d536
  41d5ad:	imul   esi,DWORD PTR [edi+0x13],0xef55c7db
  41d5b4:	xlat   BYTE PTR ds:[ebx]
  41d5b5:	stc    
  41d5b6:	add    DWORD PTR [ebx+0x65],ecx
  41d5b9:	ss jo  0x41d5ca
  41d5bc:	mov    ds:0xe4b60092,eax
  41d5c1:	cdq    
  41d5c2:	pop    esp
  41d5c3:	ret    
  41d5c4:	inc    edx
  41d5c5:	pop    eax
  41d5c6:	mov    eax,ds:0x3b1780eb
  41d5cb:	mov    ch,BYTE PTR [edi+0x3f]
  41d5ce:	jecxz  0x41d612
  41d5d0:	sbb    eax,esp
  41d5d2:	pop    ss
  41d5d3:	add    al,0xd7
  41d5d5:	push   esi
  41d5d6:	sahf   
  41d5d7:	loope  0x41d5c6
  41d5d9:	pop    esi
  41d5da:	add    eax,0xb8ecd1cd
  41d5df:	cmp    BYTE PTR [ecx+0x3da50f73],ah
  41d5e5:	(bad)  
  41d5e7:	and    eax,0xddb0c34b
  41d5ec:	fnstenv [ebx]
  41d5ee:	jl     0x41d5d8
  41d5f0:	xor    eax,0xf72c7f88
  41d5f5:	retf   
  41d5f6:	jb     0x41d5b2
  41d5f8:	test   BYTE PTR [ecx-0x4aaf848b],dh
  41d5fe:	or     eax,0x52d3955e
  41d603:	bound  ebx,QWORD PTR [ecx+0x6b]
  41d606:	adc    esi,DWORD PTR [edi+ebx*8]
  41d609:	icebp  
  41d60a:	push   edi
  41d60b:	dec    DWORD PTR [ecx-0x4a89594a]
  41d611:	push   0x55
  41d613:	inc    edx
  41d614:	clc    
  41d615:	(bad)  
  41d616:	jl     0x41d692
  41d618:	fstp   TBYTE PTR [esi-0x3bdf00b0]
  41d61e:	int    0xc4
  41d620:	sbb    al,0x2d
  41d622:	add    eax,0x690446ef
  41d627:	xor    al,0x83
  41d629:	neg    ah
  41d62b:	arpl   WORD PTR [ebx-0x1],bp
  41d62e:	shl    al,cl
  41d630:	pop    edx
  41d631:	imul   al
  41d633:	lahf   
  41d634:	ret    0xafa5
  41d637:	lock lahf 
  41d639:	mov    esi,0x17ea8247
  41d63e:	ret    0x427a
  41d641:	mov    dl,0x0
  41d643:	fcom   QWORD PTR fs:[edx-0x2f]
  41d647:	aas    
  41d648:	hlt    
  41d649:	cmc    
  41d64a:	je     0x41d6ca
  41d64c:	mov    cl,0x91
  41d64e:	inc    eax
  41d64f:	into   
  41d650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d651:	(bad)  
  41d652:	or     eax,0x3beec5a
  41d657:	rol    DWORD PTR [eax+0x4091730],0xd7
  41d65e:	cmp    bl,dl
  41d660:	adc    bh,BYTE PTR [eax+0x4fafb0c2]
  41d666:	xchg   esp,eax
  41d667:	push   ss
  41d668:	xor    cl,bh
  41d66a:	or     cl,al
  41d66c:	or     ch,BYTE PTR [ebp+edx*4+0x37468ac0]
  41d673:	jnp    0x41d685
  41d675:	dec    bx
  41d677:	out    0xd4,eax
  41d679:	pop    ebx
  41d67a:	jmp    0x16ecf0b1
  41d67f:	loope  0x41d625
  41d681:	xor    BYTE PTR [edx],0x57
  41d684:	cmp    BYTE PTR [ebx],cl
  41d686:	lods   al,BYTE PTR ds:[esi]
  41d687:	dec    esp
  41d688:	xlat   BYTE PTR ds:[ebx]
  41d689:	out    dx,eax
  41d68a:	xor    al,0xdd
  41d68c:	add    edx,0x5708f1
  41d692:	imul   edx,ebx
  41d695:	mov    DWORD PTR [ebp-0x58],edx
  41d698:	mov    edx,DWORD PTR [ebp+0x8]
  41d69b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d69e:	add    edx,0x64f893
  41d6a4:	or     edx,ebx
  41d6a6:	mov    DWORD PTR [ebp-0x54],edx
  41d6a9:	mov    edx,DWORD PTR [ebp+0x8]
  41d6ac:	mov    ebx,DWORD PTR [ebp-0x50]
  41d6af:	add    edx,ecx
  41d6b1:	xor    edx,ebx
  41d6b3:	mov    DWORD PTR [ebp-0x50],edx
  41d6b6:	mov    edx,DWORD PTR [ebp+0x8]
  41d6b9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d6bc:	add    edx,edi
  41d6be:	and    edx,ebx
  41d6c0:	mov    DWORD PTR [ebp-0x4c],edx
  41d6c3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6c6:	mov    ebx,DWORD PTR [ebp-0x48]
  41d6c9:	lea    edx,[ebx+edx*1+0x241fcde]
  41d6d0:	mov    DWORD PTR [ebp-0x48],edx
  41d6d3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6d6:	mov    ebx,0xfa5e1521
  41d6db:	sub    ebx,edx
  41d6dd:	add    ebx,DWORD PTR [ebp-0x44]
  41d6e0:	mov    DWORD PTR [ebp-0x44],ebx
  41d6e3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6e6:	xor    edx,eax
  41d6e8:	add    edx,esi
  41d6ea:	jne    0x41b310
  41d6f0:	mov    edx,DWORD PTR [ebp-0x14]
  41d6f3:	mov    DWORD PTR [ebp+0x8],edx
  41d6f6:	jmp    0x41d76b
  41d6fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d6fe:	mov    ebx,DWORD PTR [ebp-0x8]
  41d701:	xor    edx,eax
  41d703:	xor    ebx,eax
  41d705:	sub    edx,ebx
  41d707:	sub    edx,esi
  41d709:	xor    edx,eax
  41d70b:	mov    DWORD PTR [ebp+0x8],edx
  41d70e:	mov    edx,DWORD PTR [ebp+0x8]
  41d711:	mov    ebx,DWORD PTR [ebp-0x58]
  41d714:	add    edx,0x5708f1
  41d71a:	imul   edx,ebx
  41d71d:	mov    DWORD PTR [ebp-0x58],edx
  41d720:	mov    edx,DWORD PTR [ebp+0x8]
  41d723:	mov    ebx,DWORD PTR [ebp-0x54]
  41d726:	add    edx,0x64f893
  41d72c:	or     edx,ebx
  41d72e:	mov    DWORD PTR [ebp-0x54],edx
  41d731:	mov    edx,DWORD PTR [ebp+0x8]
  41d734:	mov    ebx,DWORD PTR [ebp-0x50]
  41d737:	add    edx,ecx
  41d739:	xor    edx,ebx
  41d73b:	mov    DWORD PTR [ebp-0x50],edx
  41d73e:	mov    edx,DWORD PTR [ebp+0x8]
  41d741:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d744:	add    edx,edi
  41d746:	and    edx,ebx
  41d748:	mov    DWORD PTR [ebp-0x4c],edx
  41d74b:	mov    edx,DWORD PTR [ebp+0x8]
  41d74e:	mov    ebx,DWORD PTR [ebp-0x48]
  41d751:	lea    edx,[ebx+edx*1+0x241fcde]
  41d758:	mov    DWORD PTR [ebp-0x48],edx
  41d75b:	mov    edx,DWORD PTR [ebp+0x8]
  41d75e:	mov    ebx,0xfa5e1521
  41d763:	sub    ebx,edx
  41d765:	add    ebx,DWORD PTR [ebp-0x44]
  41d768:	mov    DWORD PTR [ebp-0x44],ebx
  41d76b:	mov    edx,DWORD PTR [ebp+0x8]
  41d76e:	xor    edx,eax
  41d770:	add    edx,esi
  41d772:	jne    0x41d6fb
  41d778:	mov    edx,DWORD PTR [ebp-0x8]
  41d77b:	mov    ebx,DWORD PTR [ebp-0xc]
  41d77e:	xor    edx,eax
  41d780:	lea    edx,[edx+ebx*1+0x3272ec]
  41d787:	mov    DWORD PTR [ebp-0xc],edx
  41d78a:	mov    edx,DWORD PTR [ebp-0x10]
  41d78d:	xor    edx,eax
  41d78f:	add    edx,esi
  41d791:	jne    0x418ba5
  41d797:	jmp    0x421f74
  41d79c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d79f:	mov    DWORD PTR [ebp+0x8],ecx
  41d7a2:	jmp    0x41d81b
  41d7a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7aa:	mov    edx,DWORD PTR [ebp-0x8]
  41d7ad:	xor    ecx,eax
  41d7af:	xor    edx,eax
  41d7b1:	sub    ecx,edx
  41d7b3:	sub    ecx,esi
  41d7b5:	xor    ecx,eax
  41d7b7:	mov    DWORD PTR [ebp+0x8],ecx
  41d7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7bd:	mov    edx,DWORD PTR [ebp-0x58]
  41d7c0:	add    ecx,0x5708f1
  41d7c6:	imul   ecx,edx
  41d7c9:	mov    DWORD PTR [ebp-0x58],ecx
  41d7cc:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7cf:	mov    edx,DWORD PTR [ebp-0x54]
  41d7d2:	add    ecx,0x64f893
  41d7d8:	or     ecx,edx
  41d7da:	mov    DWORD PTR [ebp-0x54],ecx
  41d7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7e0:	mov    edx,DWORD PTR [ebp-0x50]
  41d7e3:	add    ecx,0x242ebcc
  41d7e9:	xor    ecx,edx
  41d7eb:	mov    DWORD PTR [ebp-0x50],ecx
  41d7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7f1:	mov    edx,DWORD PTR [ebp-0x4c]
  41d7f4:	add    ecx,edi
  41d7f6:	and    ecx,edx
  41d7f8:	mov    DWORD PTR [ebp-0x4c],ecx
  41d7fb:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7fe:	mov    edx,DWORD PTR [ebp-0x48]
  41d801:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d808:	mov    DWORD PTR [ebp-0x48],ecx
  41d80b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d80e:	mov    edx,0xfa5e1521
  41d813:	sub    edx,ecx
  41d815:	add    edx,DWORD PTR [ebp-0x44]
  41d818:	mov    DWORD PTR [ebp-0x44],edx
  41d81b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d81e:	xor    ecx,eax
  41d820:	add    ecx,esi
  41d822:	jne    0x41d7a7
  41d828:	jmp    0x421f80
  41d82d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d830:	mov    edx,DWORD PTR [ebp-0x8]
  41d833:	xor    ecx,eax
  41d835:	xor    edx,eax
  41d837:	sub    ecx,edx
  41d839:	sub    ecx,esi
  41d83b:	xor    ecx,eax
  41d83d:	mov    DWORD PTR [ebp+0x8],ecx
  41d840:	mov    ecx,DWORD PTR [ebp+0x8]
  41d843:	mov    edx,DWORD PTR [ebp-0x58]
  41d846:	add    ecx,0x5708f1
  41d84c:	imul   ecx,edx
  41d84f:	mov    DWORD PTR [ebp-0x58],ecx
  41d852:	mov    ecx,DWORD PTR [ebp+0x8]
  41d855:	mov    edx,DWORD PTR [ebp-0x54]
  41d858:	jmp    0x41fbbb
  41d85d:	bound  ecx,QWORD PTR [ebp+0x70]
  41d860:	push   0x43623b4b
  41d865:	fsub   QWORD PTR [ecx]
  41d867:	xchg   BYTE PTR [edi+0x9],ah
  41d86a:	push   esi
  41d86b:	aas    
  41d86c:	fimul  WORD PTR [ebp+0x307a7dd3]
  41d872:	pop    edi
  41d873:	jp     0x41d8ef
  41d875:	(bad)  
  41d877:	dec    eax
  41d878:	xchg   DWORD PTR [ebx-0x46],eax
  41d87b:	ja     0x41d800
  41d87d:	xchg   DWORD PTR [edi],esp
  41d87f:	shl    DWORD PTR [ebx-0xd],0x45
  41d883:	rcr    BYTE PTR [eax-0x58211e07],0xd7
  41d88a:	dec    esp
  41d88b:	mov    DWORD PTR [edx],ebx
  41d88d:	shl    DWORD PTR [esi-0x7618cbf3],0x86
  41d894:	mov    WORD PTR [esi],gs
  41d896:	jmp    DWORD PTR [ebx-0x65f65dbc]
  41d89c:	ja     0x41d918
  41d89e:	lock (bad) 
  41d8a0:	jne    0x41d8db
  41d8a2:	dec    si
  41d8a4:	sbb    DWORD PTR [edi],esi
  41d8a6:	bound  ecx,QWORD PTR [esi+0x42]
  41d8a9:	bound  edi,QWORD PTR [edx+eax*1]
  41d8ac:	push   edi
  41d8ad:	and    ah,BYTE PTR [ecx+ecx*8]
  41d8b0:	arpl   WORD PTR [ecx-0x218af7d],dx
  41d8b6:	inc    edx
  41d8b7:	xchg   BYTE PTR [esi+0x5b1bc3c4],bh
  41d8bd:	jge    0x41d893
  41d8bf:	jmp    0x41d8df
  41d8c1:	outs   dx,BYTE PTR ds:[esi]
  41d8c2:	test   eax,0x2d3914d4
  41d8c7:	jbe    0x41d939
  41d8c9:	es jp  0x41d8ca
  41d8cc:	mov    dl,0xe
  41d8ce:	retf   0x8c4f
  41d8d1:	shr    edi,1
  41d8d3:	pop    ecx
  41d8d4:	retf   
  41d8d5:	or     DWORD PTR [ebx-0x45],ecx
  41d8d8:	push   ds
  41d8d9:	mov    bl,0xcc
  41d8db:	fild   QWORD PTR [edi+0x67]
  41d8de:	pop    esi
  41d8df:	in     eax,dx
  41d8e0:	mov    esp,0xb4c48f0
  41d8e5:	xchg   edi,eax
  41d8e6:	imul   ecx,DWORD PTR ds:0xbf89771e,0x26
  41d8ed:	clc    
  41d8ee:	inc    esp
  41d8ef:	xor    cl,BYTE PTR [edi]
  41d8f1:	and    al,0xf
  41d8f3:	jg     0x41d8a3
  41d8f5:	fisttp WORD PTR [edx]
  41d8f7:	int3   
  41d8f8:	pop    esp
  41d8f9:	jnp    0x41d8d3
  41d8fb:	sbb    al,0xce
  41d8fd:	(bad)  
  41d8fe:	les    esp,FWORD PTR [ecx-0x26]
  41d901:	mov    esp,0xbcb7580d
  41d906:	ficom  DWORD PTR [ebp-0x27]
  41d909:	add    esi,DWORD PTR [edi]
  41d90b:	mov    edi,0x51e84e8c
  41d910:	shl    DWORD PTR [eax-0x3ce465d9],1
  41d916:	fldenv [ecx]
  41d918:	pop    esp
  41d919:	retf   
  41d91a:	cli    
  41d91b:	xchg   ebp,eax
  41d91c:	xor    bl,BYTE PTR [edi+0x21]
  41d91f:	ret    
  41d920:	mov    ebx,0x66809bac
  41d925:	packssdw mm7,QWORD PTR [esi-0x7198f292]
  41d92c:	stos   DWORD PTR es:[edi],eax
  41d92d:	mov    ch,0x71
  41d92f:	mov    esp,0x17eab2da
  41d934:	loopne 0x41d93f
  41d936:	outs   dx,BYTE PTR ds:[esi]
  41d937:	int3   
  41d938:	adc    dh,BYTE PTR [ebp+0x58359d49]
  41d93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d940:	retf   0xdce8
  41d943:	mov    ds:0x6e82eb3f,al
  41d948:	pop    ds
  41d949:	xchg   edx,eax
  41d94a:	jmp    0xf6f088f4
  41d94f:	pop    ebx
  41d950:	rcl    esp,0x35
  41d953:	dec    al
  41d955:	repnz cli 
  41d957:	xor    al,0x3e
  41d959:	aaa    
  41d95a:	sbb    ebx,esi
  41d95c:	and    eax,0xb3b2b983
  41d961:	push   esp
  41d962:	fwait
  41d963:	cmp    edx,DWORD PTR [edi+0x2f1bcfac]
  41d969:	addr16 jno 0x41d9dd
  41d96c:	xchg   ebx,eax
  41d96d:	inc    BYTE PTR [ebx]
  41d96f:	dec    ecx
  41d970:	add    ch,dl
  41d972:	loopne 0x41d948
  41d974:	adc    BYTE PTR [esi+ebp*4-0x5dd6cd98],bh
  41d97b:	mov    DWORD PTR [ecx-0x22],esp
  41d97e:	das    
  41d97f:	fwait
  41d980:	jp     0x41d9b8
  41d982:	not    ebp
  41d984:	jno    0x41d993
  41d986:	inc    ax
  41d988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d989:	stos   BYTE PTR es:[edi],al
  41d98a:	js     0x41d9e5
  41d98c:	retf   0x4cad
  41d98f:	push   esi
  41d990:	and    BYTE PTR [edi],0x91
  41d993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d994:	lods   eax,DWORD PTR ds:[esi]
  41d995:	jg     0x41d933
  41d997:	aad    0xa1
  41d999:	daa    
  41d99a:	in     eax,0xde
  41d99c:	push   ss
  41d99d:	aad    0x73
  41d99f:	ds pop ebx
  41d9a1:	pop    ds
  41d9a2:	retf   0xfe8d
  41d9a5:	(bad)  
  41d9a6:	test   al,0x33
  41d9a8:	jl     0x41d92d
  41d9aa:	and    eax,0x44a85f9e
  41d9af:	out    dx,eax
  41d9b0:	mov    ah,BYTE PTR [ebp+edi*2-0x3]
  41d9b4:	jmp    0xb20788fe
  41d9b9:	jl     0x41d944
  41d9bb:	inc    edx
  41d9bc:	es adc esp,edi
  41d9bf:	inc    ecx
  41d9c0:	shr    BYTE PTR es:[esi],cl
  41d9c3:	dec    esi
  41d9c4:	test   al,0x5e
  41d9c6:	loope  0x41d9f9
  41d9c8:	aas    
  41d9c9:	outs   dx,DWORD PTR ds:[esi]
  41d9ca:	lea    edi,[edi+0x19864653]
  41d9d0:	fldenv [edx+ebp*4]
  41d9d3:	gs retf 
  41d9d5:	sahf   
  41d9d6:	add    DWORD PTR [ebx*4-0x5c85cd09],0x471acd60
  41d9e1:	dec    ecx
  41d9e2:	xor    dh,BYTE PTR [ecx+0x6cd1a764]
  41d9e8:	lea    ebx,[esi-0x40190313]
  41d9ee:	cld    
  41d9ef:	mov    bl,0xb1
  41d9f1:	mov    cl,BYTE PTR [ebp-0x1c830a53]
  41d9f7:	call   0xc30d:0x42653548
  41d9fe:	in     eax,dx
  41d9ff:	aam    0xe9
  41da01:	leave  
  41da02:	cs mov ah,0x73
  41da05:	xchg   ecx,eax
  41da06:	xor    DWORD PTR [eax+0x603edfd4],ebp
  41da0c:	xor    dh,0x23
  41da0f:	in     al,0xe7
  41da11:	sbb    BYTE PTR [ebp+0xd],dh
  41da14:	sbb    BYTE PTR [ebx-0x1c45d42a],dl
  41da1a:	loope  0x41da60
  41da1c:	adc    eax,0xcfd21902
  41da21:	pop    esi
  41da22:	out    dx,al
  41da23:	inc    edx
  41da24:	or     al,0xd9
  41da26:	dec    esp
  41da27:	push   esi
  41da28:	test   BYTE PTR [eax+0x25],al
  41da2b:	je     0x41d9f8
  41da2d:	sbb    al,0x96
  41da2f:	pop    ds
  41da30:	inc    bp
  41da32:	inc    edi
  41da33:	xor    al,0x26
  41da35:	xor    eax,0x769902c3
  41da3a:	dec    ebx
  41da3b:	lock push ss
  41da3d:	es push ebp
  41da3f:	in     eax,dx
  41da40:	test   esi,eax
  41da42:	lock clc 
  41da44:	in     al,0x4e
  41da46:	pop    ss
  41da47:	call   0x4f9d:0xbc4cbaa6
  41da4e:	pop    edx
  41da4f:	iret   
  41da50:	addr16 mov ds:0x1433,eax
  41da54:	iret   
  41da55:	xor    DWORD PTR [edx+0x33],edx
  41da58:	and    DWORD PTR [edx+0x66],esp
  41da5b:	sub    al,0x63
  41da5d:	xchg   ebp,eax
  41da5e:	mov    al,ds:0xd458a2d0
  41da63:	int3   
  41da64:	push   ss
  41da65:	retf   0x330b
  41da68:	jns    0x41dabc
  41da6a:	scas   al,BYTE PTR es:[edi]
  41da6b:	xlat   BYTE PTR ds:[ebx]
  41da6c:	xchg   BYTE PTR [eax-0xd76a3f4],dh
  41da72:	xchg   ebp,eax
  41da73:	jae    0x41dacd
  41da75:	repz push ecx
  41da77:	cld    
  41da78:	lea    edx,[edx+0xe]
  41da7b:	sar    DWORD PTR [eax+0x56fd19ba],0xcb
  41da82:	jae    0x41daee
  41da84:	cdq    
  41da85:	daa    
  41da86:	shl    dh,1
  41da88:	cmp    eax,0x84e61643
  41da8d:	adc    eax,0x63a54f57
  41da92:	jbe    0x41daed
  41da94:	push   esi
  41da95:	pop    ecx
  41da96:	fdivrp st(0),st
  41da98:	jge    0x41da81
  41da9a:	inc    esp
  41da9b:	rol    DWORD PTR [ebp+0x1c],0xe9
  41da9f:	jecxz  0x41da22
  41daa1:	sub    eax,0xf060fe06
  41daa6:	repz loop 0x41da65
  41daa9:	gs jne 0x41dae2
  41daac:	jae    0x41db2d
  41daae:	mov    bl,0x9d
  41dab0:	mov    ecx,ecx
  41dab2:	std    
  41dab3:	dec    esi
  41dab4:	cmp    al,0x91
  41dab6:	das    
  41dab7:	sbb    al,0x34
  41dab9:	cmp    esp,DWORD PTR [eax]
  41dabb:	and    edi,DWORD PTR [ebx+0x3c260533]
  41dac1:	repnz pop ss
  41dac3:	pop    ecx
  41dac4:	icebp  
  41dac5:	adc    eax,0x9b3d8586
  41daca:	cmp    DWORD PTR gs:[esi-0x1f],eax
  41dace:	push   eax
  41dacf:	xchg   DWORD PTR [ebx+0x7e],ebp
  41dad2:	inc    ebp
  41dad3:	add    dl,BYTE PTR [ebx]
  41dad5:	pop    esi
  41dad6:	xor    DWORD PTR [eax+esi*4-0x13],ecx
  41dada:	stos   DWORD PTR es:[edi],eax
  41dadb:	xchg   edx,eax
  41dadc:	aad    0xc3
  41dade:	cld    
  41dadf:	retf   0xe4bc
  41dae2:	in     al,0xbb
  41dae4:	mov    cs,WORD PTR [ebx]
  41dae6:	mov    ah,0xcf
  41dae8:	adc    BYTE PTR [ecx+0x1e],cl
  41daeb:	ins    DWORD PTR es:[edi],dx
  41daec:	pop    edi
  41daed:	add    BYTE PTR [eax-0x23],cl
  41daf0:	hlt    
  41daf1:	mov    bl,0x2e
  41daf3:	loopne 0x41db0e
  41daf5:	mov    ebp,0x7ef10973
  41dafa:	mov    ebx,0x11f78def
  41daff:	mov    ah,0xe4
  41db01:	lock stos DWORD PTR es:[edi],eax
  41db03:	push   ebp
  41db04:	loope  0x41db3e
  41db06:	jae    0x41dab2
  41db08:	loope  0x41db2f
  41db0a:	push   edx
  41db0b:	scas   al,BYTE PTR es:[edi]
  41db0c:	in     al,0xcc
  41db0e:	adc    al,0x81
  41db10:	sub    ch,BYTE PTR [eax+0x7d6ef618]
  41db16:	mov    ebp,ds
  41db18:	sub    DWORD PTR [edx-0x7acc48f7],ecx
  41db1e:	and    DWORD PTR [esi],0xf5745170
  41db24:	xor    eax,0xeb096dfc
  41db29:	(bad)  
  41db2a:	sbb    bh,cl
  41db2c:	test   DWORD PTR [edi-0x1ee4605c],edi
  41db32:	pop    esi
  41db33:	mov    ds:0x108a5052,al
  41db38:	in     eax,0x32
  41db3a:	test   DWORD PTR [edx-0x19],ecx
  41db3d:	cli    
  41db3e:	aas    
  41db3f:	outs   dx,BYTE PTR ds:[esi]
  41db40:	fsubr  QWORD PTR [ebx-0x4d27c8ee]
  41db46:	idiv   BYTE PTR [ebp-0x22]
  41db49:	ss in  al,0xa
  41db4c:	lahf   
  41db4d:	jae    0x41daf4
  41db4f:	add    edi,DWORD PTR [eax-0x7505f9c2]
  41db55:	jne    0x41db68
  41db57:	xchg   DWORD PTR [edi],ebp
  41db59:	sbb    BYTE PTR [ecx+0x54be2fb],cl
  41db5f:	jnp    0x41db79
  41db61:	int    0x90
  41db63:	loop   0x41db95
  41db65:	and    DWORD PTR [esi-0x46],ebp
  41db68:	xchg   al,ah
  41db6a:	xchg   ebp,eax
  41db6b:	leave  
  41db6c:	hlt    
  41db6d:	imul   eax,DWORD PTR [eax],0xf1c9fc40
  41db73:	daa    
  41db74:	add    al,0xbe
  41db76:	ret    0xd33f
  41db79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db7a:	dec    edx
  41db7b:	jne    0x41db8d
  41db7d:	in     al,0xe8
  41db7f:	pop    cx
  41db81:	add    ecx,DWORD PTR [ecx+0x49]
  41db84:	aaa    
  41db85:	cli    
  41db86:	sbb    BYTE PTR [ebx+edx*4-0x12f887c5],bh
  41db8d:	mov    al,0x13
  41db8f:	adc    eax,0xa2db4a5a
  41db94:	jbe    0x41db97
  41db96:	fcomp  QWORD PTR [eax-0x74bcc9fe]
  41db9c:	xchg   ecx,eax
  41db9d:	sub    eax,0x444c3f99
  41dba2:	jbe    0x41db34
  41dba4:	(bad)  
  41dba6:	adc    ebx,ebx
  41dba8:	push   ds
  41dba9:	ins    DWORD PTR es:[edi],dx
  41dbaa:	inc    esp
  41dbab:	fdivrp st(3),st
  41dbad:	xchg   al,bh
  41dbaf:	sub    eax,0x63f251c1
  41dbb4:	neg    DWORD PTR [ebx-0x74398557]
  41dbba:	je     0x41dba5
  41dbbc:	or     dl,ch
  41dbbe:	sbb    DWORD PTR [eax-0x15],eax
  41dbc1:	add    eax,0xa553a3f2
  41dbc6:	pushf  
  41dbc7:	stc    
  41dbc8:	mov    ch,0xf0
  41dbca:	jp     0x41dbfe
  41dbcc:	inc    ebp
  41dbcd:	pop    ebp
  41dbce:	pop    ecx
  41dbcf:	dec    ebp
  41dbd0:	out    0x71,al
  41dbd2:	into   
  41dbd3:	xchg   ecx,eax
  41dbd4:	mov    edi,fs
  41dbd6:	jno    0x41dc19
  41dbd8:	xchg   BYTE PTR fs:[eax-0x789f2eb0],cl
  41dbdf:	inc    ebp
  41dbe0:	and    DWORD PTR [ebx+0x63],esp
  41dbe3:	(bad)  
  41dbe4:	aas    
  41dbe5:	add    dh,BYTE PTR ds:0xdd3b9fa6
  41dbeb:	dec    ecx
  41dbec:	sar    DWORD PTR [ebp+0x652ae8ca],cl
  41dbf2:	retf   0x2099
  41dbf5:	dec    edi
  41dbf6:	xchg   edi,eax
  41dbf7:	or     eax,edx
  41dbf9:	xchg   ebp,edx
  41dbfb:	pop    edi
  41dbfc:	and    al,0xe9
  41dbfe:	loop   0x41dba1
  41dc00:	mov    esp,0x24a56e8d
  41dc05:	sbb    ebx,DWORD PTR [eax]
  41dc07:	jmp    0x41dc30
  41dc09:	in     eax,0x85
  41dc0b:	ins    BYTE PTR es:[edi],dx
  41dc0c:	and    edi,edx
  41dc0e:	int    0xd
  41dc10:	push   ebx
  41dc11:	repz das 
  41dc13:	jp     0x41dbcc
  41dc15:	mov    esp,0xefa4d888
  41dc1a:	pop    ds
  41dc1b:	lea    eax,[esi-0x3e21c931]
  41dc21:	and    ecx,DWORD PTR [esi+0xc007f06]
  41dc27:	mov    ah,0x15
  41dc29:	test   esi,ebx
  41dc2b:	fist   DWORD PTR [esi-0x5f105a6a]
  41dc31:	cmp    cl,bh
  41dc33:	je     0x41dc8f
  41dc35:	or     edx,DWORD PTR [edx+0x39]
  41dc38:	mov    ch,0xea
  41dc3a:	popf   
  41dc3b:	cmp    cl,BYTE PTR [edx+0x2d21f62a]
  41dc41:	adc    DWORD PTR [eax-0x3f],ebx
  41dc44:	jmp    0x65dc:0x7ebe7915
  41dc4b:	or     BYTE PTR [ebx],al
  41dc4d:	sub    al,0xba
  41dc4f:	push   ss
  41dc50:	aas    
  41dc51:	sbb    eax,0x94036796
  41dc56:	test   al,0x4
  41dc58:	aas    
  41dc59:	or     ch,BYTE PTR [esi+0x5780d7f8]
  41dc5f:	add    al,BYTE PTR [esi+0x3a]
  41dc62:	cmp    eax,0x3ee572aa
  41dc67:	fwait
  41dc68:	or     eax,0x8d0adb09
  41dc6d:	jle    0x41dc58
  41dc6f:	xor    BYTE PTR [edx+eax*4-0x45],0xd1
  41dc74:	cmp    al,0x34
  41dc76:	sub    eax,0x8671c503
  41dc7b:	fwait
  41dc7c:	push   ss
  41dc7d:	xchg   edi,eax
  41dc7e:	inc    ecx
  41dc7f:	aas    
  41dc80:	push   ss
  41dc81:	fcmovb st,st(5)
  41dc83:	stos   DWORD PTR es:[edi],eax
  41dc84:	lods   eax,DWORD PTR ds:[esi]
  41dc85:	push   ds
  41dc86:	adc    bh,BYTE PTR es:[ebx+0x74]
  41dc8a:	inc    esi
  41dc8b:	mov    ebp,0xcf449552
  41dc90:	xchg   ecx,eax
  41dc91:	mov    ecx,0x410e4d12
  41dc96:	pop    esp
  41dc97:	mov    cl,0x2
  41dc99:	ins    DWORD PTR es:[edi],dx
  41dc9a:	push   ebx
  41dc9b:	mov    WORD PTR [edi+0x30],?
  41dc9e:	vhsubpd ymm5,ymm2,YMMWORD PTR [eax+0x6bbbfc17]
  41dca6:	mov    DWORD PTR [esp+esi*4-0x12],0x3e1b81fd
  41dcae:	add    eax,0xc4cf173a
  41dcb3:	sub    al,0x68
  41dcb5:	mov    eax,0x56f0d1b6
  41dcba:	aam    0x8b
  41dcbc:	ja     0x41dccd
  41dcbe:	sub    dl,BYTE PTR [esi+0x3a]
  41dcc1:	outs   dx,BYTE PTR ds:[esi]
  41dcc2:	es adc al,0x70
  41dcc5:	and    ebx,esi
  41dcc7:	lock or eax,0x18843f44
  41dccd:	sub    edi,edx
  41dccf:	xor    al,0xaf
  41dcd1:	fld    DWORD PTR [ecx]
  41dcd3:	retf   0x1ce1
  41dcd6:	jmp    0x87695a53
  41dcdb:	fistp  QWORD PTR [esi+edx*1-0x654fedd7]
  41dce2:	arpl   WORD PTR [ebx],cx
  41dce4:	arpl   WORD PTR ds:0xf42b09a5,si
  41dcea:	je     0x41dc72
  41dcec:	push   ecx
  41dced:	loop   0x41dc95
  41dcef:	pop    eax
  41dcf0:	dec    ebx
  41dcf1:	cmc    
  41dcf2:	addr16 (bad) 
  41dcf4:	jns    0x41dcd8
  41dcf6:	mov    ch,0xb2
  41dcf8:	jae    0x41dc9b
  41dcfa:	test   al,0x93
  41dcfc:	pop    ebx
  41dcfd:	add    DWORD PTR [ebx*1+0x146b36b9],ebx
  41dd04:	sbb    DWORD PTR [ecx+0x5afe0962],ebp
  41dd0a:	cmp    edx,edi
  41dd0c:	out    dx,eax
  41dd0d:	mov    ebp,fs
  41dd0f:	in     eax,0x11
  41dd11:	in     eax,0x5f
  41dd13:	in     al,dx
  41dd14:	push   0xffffffb7
  41dd16:	pop    ss
  41dd17:	xlat   BYTE PTR ds:[ebx]
  41dd18:	(bad)
  41dd1b:	xchg   esi,eax
  41dd1c:	pop    ebx
  41dd1d:	repz test BYTE PTR [ebp-0x1f],0xd4
  41dd22:	rol    DWORD PTR gs:[ecx+0x685701a7],1
  41dd29:	ins    DWORD PTR es:[edi],dx
  41dd2a:	popf   
  41dd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2c:	aaa    
  41dd2d:	sahf   
  41dd2e:	fucom  st(2)
  41dd30:	mov    ss,esi
  41dd32:	test   ecx,ecx
  41dd34:	lock pop ds
  41dd36:	cmp    BYTE PTR [ecx-0x7a],0x8a
  41dd3a:	sub    al,0x94
  41dd3c:	sbb    BYTE PTR [ebx],ah
  41dd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd3f:	mov    ebp,0x4dd44763
  41dd44:	jne    0x41dd0c
  41dd46:	ret    
  41dd47:	mov    ebx,0x2036add2
  41dd4c:	lods   al,BYTE PTR ds:[esi]
  41dd4d:	jge    0x41dd83
  41dd4f:	mov    al,BYTE PTR [ebx+0x3b]
  41dd52:	pop    ss
  41dd53:	imul   edi,DWORD PTR [eax],0x53
  41dd56:	push   esp
  41dd57:	leave  
  41dd58:	aad    0x6
  41dd5a:	cdq    
  41dd5b:	les    ebp,FWORD PTR [ebx]
  41dd5d:	fdiv   st(4),st
  41dd5f:	jbe    0x41dd60
  41dd61:	aad    0x2a
  41dd63:	stos   DWORD PTR es:[edi],eax
  41dd64:	popf   
  41dd65:	cmp    ebx,DWORD PTR [eax+0x38466731]
  41dd6b:	(bad)  
  41dd6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd6d:	pop    esp
  41dd6e:	adc    ebp,DWORD PTR [ecx]
  41dd70:	aas    
  41dd71:	cwde   
  41dd72:	imul   ebp,ebx,0xfffffff5
  41dd75:	stos   BYTE PTR es:[edi],al
  41dd76:	test   al,0x56
  41dd78:	jb     0x41dd27
  41dd7a:	adc    bh,BYTE PTR [esi]
  41dd7c:	stc    
  41dd7d:	push   edi
  41dd7e:	xor    al,0x5
  41dd80:	out    dx,eax
  41dd81:	pop    esi
  41dd82:	mov    ah,0xb6
  41dd84:	push   edi
  41dd85:	stos   DWORD PTR es:[edi],eax
  41dd86:	div    esp
  41dd88:	sti    
  41dd89:	fdivr  st,st(4)
  41dd8b:	dec    edi
  41dd8c:	not    DWORD PTR [eax-0x34]
  41dd8f:	inc    edx
  41dd90:	xor    al,0xe
  41dd92:	inc    esi
  41dd93:	dec    eax
  41dd94:	jg     0x41ddb4
  41dd96:	cmp    al,0x94
  41dd98:	cmp    al,0x2c
  41dd9a:	inc    ebx
  41dd9b:	jae    0x41dded
  41dd9d:	outs   dx,BYTE PTR ds:[esi]
  41dd9e:	jp     0x41dd9c
  41dda0:	sub    dl,BYTE PTR [edi+edi*8+0x21]
  41dda4:	dec    esi
  41dda5:	ret    
  41dda6:	or     bh,bl
  41dda8:	cmp    al,0x37
  41ddaa:	ret    0x55cd
  41ddad:	jmp    0x4826:0x6be64f63
  41ddb4:	lea    ecx,[ebp-0x7]
  41ddb7:	inc    ebx
  41ddb8:	leave  
  41ddb9:	es in  eax,dx
  41ddbb:	dec    edi
  41ddbc:	ss inc ebx
  41ddbe:	mov    al,BYTE PTR ds:0x2eac3347
  41ddc4:	jns    0x41dd86
  41ddc6:	lds    esp,FWORD PTR ds:0x1f68fcfd
  41ddcc:	popf   
  41ddcd:	ds leave 
  41ddcf:	std    
  41ddd0:	rcl    DWORD PTR [ebp-0x509917be],0x1b
  41ddd7:	pop    ebx
  41ddd8:	inc    edi
  41ddd9:	shl    BYTE PTR ds:0x323e525c,1
  41dddf:	xchg   esp,eax
  41dde0:	dec    ebp
  41dde1:	imul   BYTE PTR [ebx]
  41dde3:	push   ecx
  41dde4:	push   0x9118fcca
  41dde9:	in     eax,dx
  41ddea:	cmp    dl,al
  41ddec:	xor    esp,DWORD PTR ds:0xae90de42
  41ddf2:	fsubr  QWORD PTR [ecx-0x5f]
  41ddf5:	clc    
  41ddf6:	mov    bl,0x9
  41ddf8:	or     edx,esi
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	cmp    eax,0xca1004f
  41de00:	or     BYTE PTR [esi],dh
  41de02:	add    BYTE PTR [esi+0x65],bl
  41de05:	jmp    0xde56:0xd2233610
  41de0c:	mov    edx,0x6aae359b
  41de11:	dec    ebx
  41de12:	xchg   ecx,eax
  41de13:	jle    0x41de08
  41de15:	rcr    BYTE PTR [eax+0x246985b],cl
  41de1b:	pop    ebp
  41de1c:	sub    al,0x9d
  41de1e:	scas   al,BYTE PTR es:[edi]
  41de1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de20:	inc    eax
  41de21:	mov    ds:0xcf69db32,al
  41de26:	in     al,dx
  41de27:	and    DWORD PTR [ecx-0x61fc4ee],edx
  41de2d:	cmp    eax,0xa17a63fb
  41de32:	mov    ebx,0x3051153f
  41de37:	ins    DWORD PTR es:[edi],dx
  41de38:	mov    ebx,DWORD PTR [edx*8-0x4c80bc53]
  41de3f:	in     eax,0xd4
  41de41:	jmp    0x8fd5:0xd49a70ee
  41de48:	repz int 0x35
  41de4b:	out    dx,al
  41de4c:	xchg   ecx,eax
  41de4d:	call   0x69e6ea0a
  41de52:	or     DWORD PTR [ebx+eiz*1],edi
  41de55:	sbb    al,0x3c
  41de57:	and    eax,0xf20b5463
  41de5c:	inc    esp
  41de5d:	adc    eax,0x9b0fcbe1
  41de62:	js     0x41de94
  41de64:	ins    BYTE PTR es:[edi],dx
  41de65:	jle    0x41de68
  41de67:	js     0x41dee6
  41de69:	mov    ebp,0xa346f995
  41de6e:	pop    esp
  41de6f:	xchg   edx,eax
  41de70:	sub    al,0x5b
  41de72:	pop    esp
  41de73:	and    BYTE PTR [ebx+0x5e95ca0e],bl
  41de79:	mov    esp,0x8820d5d1
  41de7e:	daa    
  41de7f:	fsub   DWORD PTR [esi-0x5811f4e4]
  41de85:	push   0x9f4459a9
  41de8a:	lods   al,BYTE PTR ds:[esi]
  41de8b:	in     al,0x9d
  41de8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8e:	aaa    
  41de8f:	loope  0x41de50
  41de91:	test   eax,0x1c25357c
  41de96:	inc    esi
  41de97:	fs js  0x41defe
  41de9a:	xchg   ebp,eax
  41de9b:	inc    esi
  41de9c:	xchg   ebx,eax
  41de9d:	(bad)  
  41de9e:	sub    bl,BYTE PTR [edi]
  41dea0:	sbb    BYTE PTR [edx+0x18],dl
  41dea3:	(bad)  
  41dea4:	ds sbb al,0xb7
  41dea7:	push   esi
  41dea8:	loop   0x41de5a
  41deaa:	rcr    DWORD PTR [esi-0x15573027],1
  41deb0:	xlat   BYTE PTR ds:[ebx]
  41deb1:	ins    DWORD PTR es:[edi],dx
  41deb2:	sbb    esi,eax
  41deb4:	lds    eax,FWORD PTR [eax-0x62cc7f9a]
  41deba:	or     DWORD PTR [edi+0x3b],edx
  41debd:	or     eax,DWORD PTR [ebx+0x2]
  41dec0:	lods   al,BYTE PTR ds:[esi]
  41dec1:	dec    edi
  41dec2:	pop    ss
  41dec3:	mov    eax,0x64710211
  41dec8:	push   edx
  41dec9:	pop    eax
  41deca:	mov    eax,0x4b3a2e09
  41decf:	adc    eax,0x5f3df4a0
  41ded4:	mov    ch,0x8
  41ded6:	scas   al,BYTE PTR es:[edi]
  41ded7:	daa    
  41ded8:	ins    BYTE PTR es:[edi],dx
  41ded9:	mov    ebx,esp
  41dedb:	xchg   edx,eax
  41dedc:	jns    0x41df09
  41dede:	cld    
  41dedf:	pop    ecx
  41dee0:	mov    BYTE PTR [esi+esi*8],ah
  41dee3:	xchg   dl,cl
  41dee5:	mov    edi,0x77da1384
  41deea:	imul   edi,DWORD PTR [edx+0x604dd146],0xffffff9b
  41def1:	sub    DWORD PTR ds:0xa9d63cfa,ebx
  41def7:	pop    edx
  41def8:	xchg   edi,eax
  41def9:	or     DWORD PTR [eax+0x46],0x34
  41defd:	mov    bl,0x54
  41deff:	xchg   BYTE PTR [esi-0x7f],bl
  41df02:	fbstp  TBYTE PTR [esi-0x654a1606]
  41df08:	(bad)  
  41df09:	popf   
  41df0a:	and    eax,0x9b75b36b
  41df0f:	cld    
  41df10:	shl    DWORD PTR [ebp+0x46],0x1e
  41df14:	out    0x9d,al
  41df16:	pop    ds
  41df17:	pop    es
  41df18:	jne    0x41df75
  41df1a:	lods   eax,DWORD PTR ds:[esi]
  41df1b:	cdq    
  41df1c:	or     al,0x2c
  41df1e:	add    DWORD PTR [ebx+ebp*4+0x71116c4],ebp
  41df25:	and    ch,dl
  41df27:	into   
  41df28:	popf   
  41df29:	xor    BYTE PTR [esi+0x3aa6578a],dh
  41df2f:	sti    
  41df30:	ficomp WORD PTR [eax-0x2c6c84ed]
  41df36:	mov    bh,0xe8
  41df38:	jge    0x41df98
  41df3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3b:	lock out dx,al
  41df3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3e:	jo     0x41deca
  41df40:	push   ecx
  41df41:	mov    ds:0x99018add,al
  41df46:	shr    DWORD PTR [ecx-0x621a3adf],cl
  41df4c:	ror    DWORD PTR [esi-0x2d],1
  41df4f:	inc    esi
  41df50:	xchg   ebx,eax
  41df51:	ja     0x41df1a
  41df53:	clc    
  41df54:	mov    ds:0x2a141bd2,al
  41df59:	or     cl,BYTE PTR [edx]
  41df5b:	push   ecx
  41df5c:	ror    BYTE PTR [edx-0x2b97870],0x44
  41df63:	std    
  41df64:	sbb    al,0xbb
  41df66:	push   0xffffffa8
  41df68:	adc    bh,bh
  41df6a:	mov    WORD PTR [eax+0x7609bdcb],ds
  41df70:	retf   0xbde3
  41df73:	and    eax,0xf4e4d152
  41df78:	(bad)  [edi]
  41df7a:	ss stos DWORD PTR es:[edi],eax
  41df7c:	mov    ds:0x7008ffb9,eax
  41df81:	push   ecx
  41df82:	inc    ecx
  41df83:	jl     0x41df55
  41df85:	es sbb al,0x5b
  41df88:	fbstp  TBYTE PTR [edx+0x39]
  41df8b:	sahf   
  41df8c:	xor    al,0x5e
  41df8e:	mov    esp,0x124df1a6
  41df93:	sub    esp,DWORD PTR [edx]
  41df95:	fisubr DWORD PTR [ebx]
  41df97:	sahf   
  41df98:	mov    dh,0xc3
  41df9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9b:	xor    eax,DWORD PTR [esi]
  41df9d:	and    eax,eax
  41df9f:	fild   WORD PTR [ebx+edi*1]
  41dfa2:	loopne 0x41dfd3
  41dfa4:	mov    ebp,0x6c213507
  41dfa9:	push   ss
  41dfaa:	mov    al,0x2f
  41dfac:	ret    0x44e2
  41dfaf:	lea    edx,[ebx]
  41dfb1:	mov    DWORD PTR es:[esi+esi*1-0xf2c9d4d],ebp
  41dfb9:	jle    0x41e01f
  41dfbb:	cmp    bl,0xfe
  41dfbe:	ja     0x41df4b
  41dfc0:	test   al,0xb8
  41dfc2:	(bad)  
  41dfc3:	push   edi
  41dfc4:	inc    ecx
  41dfc5:	mov    eax,ds:0x798a153d
  41dfca:	(bad)  
  41dfcb:	pushf  
  41dfcc:	add    DWORD PTR [ecx+0x32ee6834],edi
  41dfd2:	push   ebp
  41dfd3:	stos   BYTE PTR es:[edi],al
  41dfd4:	or     eax,0x9d5ee8cd
  41dfd9:	mov    bh,0x79
  41dfdb:	or     eax,0xced7edf2
  41dfe0:	cmp    BYTE PTR [edx],cl
  41dfe2:	or     BYTE PTR [ecx+0x6491eb1e],dh
  41dfe8:	mov    al,ds:0xfdadd9de
  41dfed:	jge    0x41e064
  41dfef:	cld    
  41dff0:	fs sbb al,0x0
  41dff3:	push   ss
  41dff4:	mov    bh,0xfa
  41dff6:	sbb    edi,DWORD PTR [eax+edi*2+0x5c06c7c]
  41dffd:	lods   al,BYTE PTR ds:[esi]
  41dffe:	jmp    0x7ed7:0xeb5ea623
  41e005:	loopne 0x41e074
  41e007:	jo     0x41dffd
  41e009:	or     BYTE PTR [esi+0x9],bh
  41e00c:	push   esp
  41e00d:	and    cl,ah
  41e00f:	test   BYTE PTR [esi+edi*2-0x5a],0x86
  41e014:	retf   
  41e015:	mov    al,0x96
  41e017:	outs   dx,DWORD PTR ds:[esi]
  41e018:	dec    esp
  41e019:	imul   ebp,DWORD PTR [edx+0x6dcd99b5],0x4e
  41e020:	fsubrp st(5),st
  41e022:	cmp    eax,0x409e110
  41e027:	mov    bh,0x50
  41e029:	add    BYTE PTR [edx+0x779db9d9],ah
  41e02f:	push   esp
  41e030:	xor    DWORD PTR [ecx-0x6d],ebp
  41e033:	or     eax,0xee8bf769
  41e039:	mov    edx,0xc15d2ff9
  41e03f:	repz stc 
  41e041:	mov    ch,0x94
  41e043:	outs   dx,DWORD PTR ds:[esi]
  41e044:	or     eax,0xd26630cd
  41e049:	adc    DWORD PTR [ecx],esi
  41e04b:	leave  
  41e04c:	dec    edi
  41e04d:	xor    dl,dh
  41e04f:	dec    eax
  41e050:	dec    ebp
  41e051:	xchg   ebp,eax
  41e052:	leave  
  41e053:	inc    ebp
  41e054:	dec    esi
  41e055:	loopne 0x41e0d1
  41e057:	test   eax,0xb9a884ad
  41e05c:	sti    
  41e05d:	add    al,0xf0
  41e05f:	cmp    DWORD PTR [ecx+0x3c39c410],ecx
  41e065:	and    eax,0xe807b6d7
  41e06a:	xor    esi,DWORD PTR ds:0x19839850
  41e070:	sub    eax,0x1e6bce12
  41e075:	lahf   
  41e076:	inc    ebx
  41e077:	or     ch,dl
  41e079:	mov    edi,DWORD PTR [bx+si-0x78]
  41e07d:	div    BYTE PTR [ebx]
  41e07f:	pop    esi
  41e080:	sub    al,0xf0
  41e082:	xchg   DWORD PTR [esi],ebp
  41e084:	jge    0x41e102
  41e086:	loopne 0x41e0fa
  41e088:	dec    eax
  41e089:	mov    ?,ecx
  41e08b:	jg     0x41e00f
  41e08d:	add    DWORD PTR [edx-0x5e8f63d4],esp
  41e093:	mov    ebp,0x66e420a3
  41e098:	cld    
  41e099:	add    al,0x22
  41e09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09c:	mov    ds:0x3dab0227,eax
  41e0a1:	out    dx,al
  41e0a2:	xor    dh,BYTE PTR [edi+0x5b01f770]
  41e0a8:	xor    BYTE PTR [ecx+0x7ddecfdf],bl
  41e0ae:	jo     0x41e0fc
  41e0b0:	inc    ebx
  41e0b1:	cmp    DWORD PTR [edx],eax
  41e0b3:	outs   dx,DWORD PTR ds:[esi]
  41e0b4:	pop    edx
  41e0b5:	cmp    BYTE PTR [edi],bl
  41e0b7:	mov    ds:0x745b4310,eax
  41e0bc:	jmp    FWORD PTR [eax]
  41e0be:	xor    BYTE PTR [esi],0xf
  41e0c1:	or     DWORD PTR [ebp-0x5a],0x2e
  41e0c5:	mov    edi,0x4ff9c068
  41e0ca:	cmp    dl,BYTE PTR [edx]
  41e0cc:	(bad)  [eax]
  41e0ce:	clc    
  41e0cf:	pop    ss
  41e0d0:	or     DWORD PTR ds:0x643617de,edi
  41e0d6:	aas    
  41e0d7:	add    al,0xd4
  41e0d9:	repz mov ch,0x92
  41e0dc:	lods   eax,DWORD PTR ds:[esi]
  41e0dd:	add    edx,esp
  41e0df:	jmp    0x41e0c7
  41e0e1:	or     eax,0x8074f65e
  41e0e6:	cld    
  41e0e7:	jbe    0x41e0d7
  41e0e9:	mov    ecx,0xc2459fe1
  41e0ee:	add    esi,DWORD PTR [edi-0x3af757f4]
  41e0f4:	bound  esi,QWORD PTR [eax-0x323438c5]
  41e0fa:	iret   
  41e0fb:	mov    ecx,0xd2483a14
  41e100:	ins    BYTE PTR es:[edi],dx
  41e101:	xchg   edi,eax
  41e102:	mov    ch,BYTE PTR [ebp+eiz*8-0x68bd259]
  41e109:	(bad)  [eax+0x30]
  41e10c:	adc    BYTE PTR [ebx+0x3e],bl
  41e10f:	(bad)  
  41e110:	je     0x41e125
  41e112:	outs   dx,DWORD PTR ds:[esi]
  41e113:	push   0x1536f0fb
  41e118:	fnsave [ebx+0x27cd24ab]
  41e11e:	test   BYTE PTR ds:0x39ef8fec,bl
  41e124:	xor    ebp,edi
  41e126:	outs   dx,BYTE PTR ds:[esi]
  41e127:	sti    
  41e128:	call   0xa904122f
  41e12d:	(bad)
  41e130:	dec    edx
  41e131:	mov    ecx,0xb1526bf8
  41e136:	pop    edx
  41e137:	push   eax
  41e139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e13a:	pop    eax
  41e13b:	cmp    bl,dl
  41e13d:	mov    esp,0x3f42783d
  41e142:	mov    eax,ds:0x1aec826
  41e147:	aaa    
  41e148:	xor    DWORD PTR [ebx],0x326ae592
  41e14e:	dec    ebx
  41e14f:	(bad)  
  41e150:	sub    edx,ebx
  41e152:	mov    ch,cl
  41e154:	loop   0x41e16f
  41e156:	push   ss
  41e157:	fimul  DWORD PTR [ebx+ebp*4-0x4c]
  41e15b:	mov    ch,0x5c
  41e15d:	loopne 0x41e149
  41e15f:	out    0x97,eax
  41e161:	jbe    0x41e151
  41e163:	push   es
  41e164:	dec    esp
  41e165:	pop    DWORD PTR [ecx]
  41e167:	in     al,dx
  41e168:	shr    BYTE PTR [ecx],1
  41e16a:	loope  0x41e1a9
  41e16c:	jae    0x41e1cc
  41e16e:	inc    esi
  41e16f:	addr16 jle 0x41e117
  41e172:	sti    
  41e173:	ret    0xbde4
  41e176:	neg    BYTE PTR [ecx+ecx*1]
  41e179:	xchg   ah,ah
  41e17b:	cld    
  41e17c:	mov    dh,0xe1
  41e17e:	mov    esi,ds
  41e180:	xor    eax,0xef175d4c
  41e185:	pop    edi
  41e186:	ins    DWORD PTR es:[edi],dx
  41e187:	add    DWORD PTR [esi],eax
  41e189:	jno    0x41e181
  41e18b:	fisttp WORD PTR [edx+0x6f]
  41e18e:	mov    WORD PTR ds:0xe1a91f9f,es
  41e194:	fdivp  st(4),st
  41e196:	push   edi
  41e197:	xchg   esp,eax
  41e198:	or     BYTE PTR ds:0xc021446c,dl
  41e19e:	repnz or BYTE PTR [ebx],0x6e
  41e1a2:	add    al,0x7a
  41e1a4:	loop   0x41e1da
  41e1a6:	dec    ebp
  41e1a7:	(bad)  
  41e1a8:	sti    
  41e1a9:	push   0xce8ea25b
  41e1ae:	mov    eax,0x8a23d747
  41e1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b4:	inc    esi
  41e1b5:	dec    esi
  41e1b6:	jge    0x41e21f
  41e1b8:	rol    BYTE PTR [ebx+ecx*4+0x28],cl
  41e1bc:	pop    ebp
  41e1bd:	in     al,0x59
  41e1bf:	adc    eax,DWORD PTR [eax]
  41e1c1:	sbb    ebx,DWORD PTR [edx+0x5e]
  41e1c4:	inc    edi
  41e1c5:	push   0xffffffcb
  41e1c7:	outs   dx,BYTE PTR ds:[esi]
  41e1c8:	ds into 
  41e1ca:	xor    DWORD PTR [ebp+0x3f],eax
  41e1cd:	loopne 0x41e1cd
  41e1cf:	pop    ds
  41e1d0:	and    ebp,esi
  41e1d2:	xchg   ebp,eax
  41e1d3:	push   ecx
  41e1d4:	ds add al,dh
  41e1d7:	shl    BYTE PTR [edi+0x3c],0xd
  41e1db:	add    eax,DWORD PTR [eax]
  41e1dd:	mov    esi,DWORD PTR [edx]
  41e1df:	and    DWORD PTR [eax],0x15
  41e1e2:	jge    0x41e1e0
  41e1e4:	inc    eax
  41e1e5:	scas   eax,DWORD PTR es:[edi]
  41e1e6:	adc    edi,DWORD PTR ds:0xd5ea15b4
  41e1ec:	sub    DWORD PTR [ebx+eiz*4],edx
  41e1ef:	repnz add BYTE PTR ds:[ecx-0x5afdbc67],0xf7
  41e1f8:	cld    
  41e1f9:	jp     0x41e226
  41e1fb:	pop    esi
  41e1fc:	call   0xcc86:0x2b4212f8
  41e203:	adc    eax,0x8b03aac1
  41e208:	sub    al,0xf0
  41e20a:	mov    dh,0xf9
  41e20c:	mov    dh,0x43
  41e20e:	ins    DWORD PTR es:[edi],dx
  41e20f:	sar    edx,1
  41e211:	mov    cl,0x18
  41e213:	jne    0x41e288
  41e215:	or     DWORD PTR [eax-0x4277026e],0x16
  41e21c:	in     al,0xd5
  41e21e:	scas   al,BYTE PTR es:[edi]
  41e21f:	jmp    0x544a333b
  41e224:	(bad)  
  41e225:	sti    
  41e226:	sbb    DWORD PTR [ebp+0x1f],0x65
  41e22a:	xor    ebx,DWORD PTR [esi*2+0x79311b53]
  41e231:	jge    0x41e230
  41e233:	sbb    eax,0x1bc5f09d
  41e238:	mov    cs,WORD PTR [esi+0x59]
  41e23b:	cs mov ebp,0x59e6a3cc
  41e241:	retf   
  41e242:	in     al,0x6a
  41e244:	xchg   ecx,eax
  41e245:	lea    ebx,[edx+0x51771851]
  41e24b:	daa    
  41e24c:	ficom  DWORD PTR [esi-0x50]
  41e24f:	or     al,0x9f
  41e251:	cdq    
  41e252:	push   ds
  41e253:	cmp    esp,edx
  41e255:	mov    DWORD PTR [ebp-0x5d717e64],edx
  41e25b:	rcl    DWORD PTR [edi],cl
  41e25d:	fmul   st(3),st
  41e25f:	mov    es,WORD PTR [eax]
  41e261:	(bad)  
  41e262:	xchg   edx,eax
  41e263:	xchg   esp,eax
  41e264:	nop
  41e265:	mov    ch,0x6d
  41e267:	adc    ebp,DWORD PTR [esp+esi*8]
  41e26a:	in     al,dx
  41e26b:	rcr    ebp,1
  41e26d:	push   0x8eb041ae
  41e272:	lods   al,BYTE PTR ds:[esi]
  41e273:	enter  0xb761,0xc5
  41e277:	stc    
  41e278:	ret    0xcd8d
  41e27b:	pop    ss
  41e27c:	shr    DWORD PTR [eax],1
  41e27e:	mov    bl,0x55
  41e280:	xchg   ebx,eax
  41e281:	les    ebp,FWORD PTR [esi-0xe]
  41e284:	in     al,dx
  41e285:	xchg   DWORD PTR [ecx],edx
  41e287:	es mov dh,0xd
  41e28a:	xor    BYTE PTR [eax-0x5cb2f2a3],bh
  41e290:	neg    ecx
  41e292:	dec    esp
  41e293:	xchg   ebx,eax
  41e294:	shr    BYTE PTR [ebx],1
  41e296:	enter  0xbf5d,0x4d
  41e29a:	pop    es
  41e29b:	and    dh,BYTE PTR [esi-0x4e]
  41e29e:	std    
  41e29f:	cmp    DWORD PTR [ebp-0x41],esp
  41e2a2:	sahf   
  41e2a3:	or     al,0x68
  41e2a5:	jg     0x41e288
  41e2a7:	sahf   
  41e2a8:	and    BYTE PTR [eax-0x3ef3435c],ah
  41e2ae:	mov    ds:0x4169d958,eax
  41e2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b4:	sbb    edx,edi
  41e2b6:	add    eax,0x6b58a4e
  41e2bb:	push   0xffffffdf
  41e2bd:	ret    
  41e2be:	rcr    dh,0x18
  41e2c1:	cwde   
  41e2c2:	ficomp DWORD PTR [esi+0x18]
  41e2c5:	std    
  41e2c6:	mov    BYTE PTR ds:0x4ae2011b,0x4
  41e2cd:	(bad)  
  41e2ce:	mov    ah,0x89
  41e2d0:	sbb    eax,0x20cf5b9b
  41e2d5:	inc    sp
  41e2d7:	add    eax,DWORD PTR [edi+0x3bb7315]
  41e2dd:	jbe    0x41e279
  41e2df:	ret    
  41e2e0:	arpl   WORD PTR [eax-0xb],di
  41e2e3:	cli    
  41e2e4:	les    edx,FWORD PTR [edi+eax*1]
  41e2e7:	dec    edx
  41e2e8:	ficom  WORD PTR [ebp-0x2d3813db]
  41e2ee:	dec    DWORD PTR [esi+0x2623d8d6]
  41e2f4:	setns  BYTE PTR [edx+0xd]
  41e2f8:	sbb    eax,0x3dbd423f
  41e2fd:	into   
  41e2fe:	push   edx
  41e2ff:	push   cs
  41e300:	inc    edx
  41e301:	in     al,0x6a
  41e303:	xor    BYTE PTR [ecx],0xc3
  41e306:	jae    0x41e37f
  41e308:	inc    esi
  41e309:	pop    ds
  41e30a:	add    al,dh
  41e30c:	popa   
  41e30d:	pop    edi
  41e30e:	repnz addr16 out 0x5a,al
  41e312:	push   ss
  41e313:	cmp    BYTE PTR [ebx],dh
  41e315:	outs   dx,DWORD PTR ds:[esi]
  41e316:	leave  
  41e317:	dec    esp
  41e318:	pop    ebx
  41e319:	ret    
  41e31a:	fist   DWORD PTR [edi+0x74ad4920]
  41e320:	add    al,BYTE PTR [esi+0x6]
  41e323:	leave  
  41e324:	push   esp
  41e325:	mov    ds:0x53e7f5a4,al
  41e32a:	retf   0xce1b
  41e32d:	sub    BYTE PTR [ecx-0x24],dl
  41e330:	dec    esp
  41e331:	loope  0x41e327
  41e333:	ror    edx,cl
  41e335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e336:	sub    DWORD PTR [edi+0x413d0ff],ecx
  41e33c:	xor    ah,BYTE PTR [ebx+esi*1+0x16]
  41e340:	ja     0x41e351
  41e342:	inc    edi
  41e343:	in     eax,0x95
  41e345:	bound  ebx,QWORD PTR [esp+ebx*1]
  41e348:	shrd   DWORD PTR [ecx+0x12],esp,0x59
  41e34d:	pop    esi
  41e34e:	push   edi
  41e34f:	pop    ebp
  41e350:	js     0x41e2d9
  41e352:	scas   al,BYTE PTR es:[edi]
  41e353:	sahf   
  41e354:	(bad)  
  41e355:	stos   DWORD PTR es:[edi],eax
  41e356:	cmp    eax,0xcbebefa0
  41e35b:	mov    ch,BYTE PTR [edi-0x68]
  41e35e:	jmp    0x41e3c0
  41e360:	xlat   BYTE PTR ds:[ebx]
  41e361:	je     0x41e3b8
  41e363:	push   edi
  41e364:	enter  0x7a3,0x7f
  41e368:	sbb    esp,DWORD PTR [edx-0x5e15a88]
  41e36e:	add    eax,0xeb9a8dae
  41e373:	test   eax,0x59201722
  41e378:	out    0x4e,eax
  41e37a:	cld    
  41e37b:	or     ch,BYTE PTR [ecx]
  41e37d:	mov    eax,0x973f5efe
  41e382:	sub    al,0xc3
  41e384:	dec    ebx
  41e385:	out    dx,al
  41e386:	outs   dx,BYTE PTR ds:[esi]
  41e387:	lahf   
  41e388:	pop    eax
  41e389:	pop    eax
  41e38a:	adc    ah,BYTE PTR [ebx+esi*8]
  41e38d:	stc    
  41e38e:	ret    0x267a
  41e391:	rcl    BYTE PTR [ebp+0x675a9153],1
  41e397:	xchg   DWORD PTR [eax-0x681c39a4],ecx
  41e39d:	sub    eax,0x1d3c0824
  41e3a2:	pop    ebx
  41e3a3:	pop    ss
  41e3a4:	push   edx
  41e3a5:	pop    eax
  41e3a6:	rol    ah,cl
  41e3a8:	(bad)  [eax+ebx*2]
  41e3ab:	dec    ebx
  41e3ac:	mov    edx,0x77c3b18
  41e3b1:	cdq    
  41e3b2:	mov    ah,0x69
  41e3b4:	xor    ecx,eax
  41e3b6:	repz add DWORD PTR [esi-0x10],eax
  41e3ba:	jl     0x41e3ff
  41e3bc:	jae    0x41e360
  41e3be:	mov    BYTE PTR [edi+0x20659af1],bl
  41e3c4:	jnp    0x41e3d7
  41e3c6:	and    al,0x35
  41e3c8:	ss fucomip st,st(3)
  41e3cb:	push   edx
  41e3cc:	push   ebp
  41e3cd:	fwait
  41e3ce:	jmp    0x41e362
  41e3d0:	ins    BYTE PTR es:[edi],dx
  41e3d1:	mov    eax,ds:0x66e7057a
  41e3d6:	mov    bl,0x40
  41e3d8:	push   ebp
  41e3d9:	imul   esp,DWORD PTR [ebx+0x28],0x1e
  41e3dd:	in     eax,0xa3
  41e3df:	mov    bh,0x32
  41e3e1:	pushf  
  41e3e2:	or     BYTE PTR [eax+esi*2-0x4c92db60],ah
  41e3e9:	push   esi
  41e3ea:	hlt    
  41e3eb:	mov    ds:0xe6adaead,eax
  41e3f0:	iret   
  41e3f1:	inc    edx
  41e3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f3:	sti    
  41e3f4:	cmp    al,0x26
  41e3f6:	xchg   esp,eax
  41e3f7:	xor    BYTE PTR [ecx+0x26],dl
  41e3fa:	mov    dh,0xe8
  41e3fc:	dec    ebx
  41e3fd:	xor    al,0xcf
  41e3ff:	xor    al,ah
  41e401:	sbb    ecx,DWORD PTR [edx+0x2b]
  41e404:	sub    al,ah
  41e406:	and    bl,BYTE PTR [bx+si-0x1e]
  41e40a:	int3   
  41e40b:	mov    ah,0x12
  41e40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40e:	out    0x56,eax
  41e410:	cmp    eax,0x5ab7c820
  41e415:	jl     0x41e39a
  41e417:	ffreep st(5)
  41e419:	mov    BYTE PTR [edi],bl
  41e41b:	lods   eax,DWORD PTR ds:[esi]
  41e41c:	inc    esi
  41e41d:	dec    edx
  41e41e:	sub    ecx,DWORD PTR [eax+eax*4+0x61]
  41e422:	xor    eax,DWORD PTR [ebx-0x4190f1c6]
  41e428:	out    0x3c,eax
  41e42a:	push   edx
  41e42b:	mov    al,ds:0xef04385f
  41e430:	sub    eax,0x31263ee8
  41e435:	ret    
  41e436:	test   al,0x34
  41e438:	dec    edx
  41e439:	in     eax,0xc5
  41e43b:	push   ss
  41e43c:	aaa    
  41e43d:	scas   eax,DWORD PTR es:[edi]
  41e43e:	sbb    eax,eax
  41e440:	ins    BYTE PTR es:[edi],dx
  41e441:	fwait
  41e442:	push   esi
  41e443:	pop    es
  41e444:	(bad)  
  41e445:	or     BYTE PTR [esi],cl
  41e447:	jnp    0x41e472
  41e449:	fwait
  41e44a:	imul   esi
  41e44c:	(bad)  
  41e44d:	sub    edi,DWORD PTR [edi+esi*1-0x60]
  41e451:	int    0x98
  41e453:	(bad)  
  41e454:	outs   dx,DWORD PTR ds:[esi]
  41e455:	retf   0x5864
  41e458:	sub    eax,0x8d4b7af4
  41e45d:	xchg   sp,ax
  41e45f:	bound  ebx,QWORD PTR [esi]
  41e461:	pop    ss
  41e462:	cld    
  41e463:	nop
  41e464:	pop    edx
  41e465:	rcl    DWORD PTR [ebp+0x1],0x80
  41e469:	in     al,0xd
  41e46b:	jl     0x41e4c2
  41e46d:	cwde   
  41e46e:	(bad)
  41e474:	mov    eax,0x702d9c7f
  41e479:	push   cs
  41e47a:	xor    ah,0xfa
  41e47d:	cwde   
  41e47e:	add    cl,BYTE PTR ds:0x59107c6e
  41e484:	jnp    0x41e48b
  41e486:	data16 js 0x41e4ba
  41e489:	in     eax,0xb5
  41e48b:	sub    eax,0x167f53b5
  41e490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e491:	pop    ecx
  41e492:	xor    edx,DWORD PTR [edx-0x64]
  41e495:	adc    al,0x1e
  41e497:	xchg   ebx,eax
  41e498:	mov    ebp,0xe7adb2a0
  41e49d:	xchg   edi,eax
  41e49e:	mov    ch,0xe4
  41e4a0:	outs   dx,DWORD PTR ds:[esi]
  41e4a1:	sub    cl,dl
  41e4a3:	dec    ebp
  41e4a4:	lock in al,dx
  41e4a6:	inc    edi
  41e4a7:	xchg   esp,eax
  41e4a8:	fild   WORD PTR [ebp+0x69]
  41e4ab:	cmp    BYTE PTR [esi+0x1034d61b],cl
  41e4b1:	out    0x41,eax
  41e4b3:	rcl    DWORD PTR [esi],0xa3
  41e4b6:	sub    ebx,DWORD PTR [eax]
  41e4b8:	into   
  41e4b9:	inc    esi
  41e4ba:	or     ah,bl
  41e4bc:	clc    
  41e4bd:	inc    ecx
  41e4be:	test   al,0xfb
  41e4c0:	(bad)  
  41e4c2:	pop    eax
  41e4c3:	add    al,0xb5
  41e4c5:	adc    BYTE PTR es:[ebp+0x51],bl
  41e4c9:	popa   
  41e4ca:	jmp    0x94bec5d0
  41e4cf:	aas    
  41e4d0:	xchg   ebx,eax
  41e4d1:	pushf  
  41e4d2:	or     BYTE PTR [ebx-0x790f91c7],bl
  41e4d8:	psrlq  mm0,mm7
  41e4db:	jge    0x41e468
  41e4dd:	xchg   edi,eax
  41e4de:	sbb    ebx,ebx
  41e4e0:	(bad)  
  41e4e1:	mov    ch,0x69
  41e4e3:	cmp    esp,0x2a80fd22
  41e4e9:	jg     0x41e518
  41e4eb:	loopne 0x41e4e5
  41e4ed:	inc    ecx
  41e4ee:	jo     0x41e4bd
  41e4f0:	sbb    BYTE PTR [ebx-0x776a20dc],ah
  41e4f6:	dec    ebp
  41e4f7:	pop    edx
  41e4f8:	jmp    0xc9d69691
  41e4fd:	jmp    0x41e563
  41e4ff:	ins    DWORD PTR es:[edi],dx
  41e500:	stc    
  41e501:	xor    BYTE PTR [edi-0x57a62fe0],bl
  41e507:	mov    ds:0xe7346335,ax
  41e50d:	mov    DWORD PTR [edx+0x37],eax
  41e510:	(bad)  
  41e511:	push   esi
  41e512:	add    BYTE PTR ds:0x18e9e6bb,0xad
  41e519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e51a:	xor    al,0xf6
  41e51c:	lea    esp,[ebp+0x5934c7c5]
  41e522:	retf   
  41e523:	lahf   
  41e524:	or     ebx,DWORD PTR [edi-0x3]
  41e527:	xchg   edi,eax
  41e528:	push   es
  41e529:	dec    edx
  41e52a:	and    BYTE PTR [ecx],ah
  41e52c:	out    dx,eax
  41e52d:	call   FWORD PTR [ebx+0x3078fd35]
  41e533:	es mov edi,0x72ff0125
  41e539:	jne    0x41e532
  41e53b:	(bad)  ds:0x6b5121de
  41e541:	ins    DWORD PTR es:[edi],dx
  41e542:	pop    esi
  41e543:	icebp  
  41e544:	pop    eax
  41e545:	xor    dl,0x12
  41e548:	test   eax,0xaa4015bf
  41e54d:	mov    edx,0x40f41b5b
  41e552:	ror    dh,0xa3
  41e555:	xor    al,0x5a
  41e557:	popa   
  41e558:	lahf   
  41e559:	mov    eax,0x9ad7d537
  41e55e:	mov    edx,0x62d933e0
  41e563:	pop    ebx
  41e564:	mov    ecx,fs
  41e566:	mov    ecx,0x8040865a
  41e56b:	xor    dl,BYTE PTR [edi+0x8]
  41e56e:	jl     0x41e588
  41e570:	xlat   BYTE PTR ds:[ebx]
  41e571:	enter  0xd166,0x2a
  41e575:	add    al,0x9a
  41e577:	mov    ch,0xd4
  41e579:	add    eax,0x266140be
  41e57e:	xor    eax,0xa64049c7
  41e583:	push   edx
  41e584:	(bad)  
  41e585:	out    0x1e,al
  41e587:	jo     0x41e5ec
  41e589:	lahf   
  41e58a:	pop    es
  41e58b:	jecxz  0x41e5bd
  41e58d:	into   
  41e58e:	inc    esi
  41e58f:	stos   BYTE PTR es:[edi],al
  41e590:	loop   0x41e56b
  41e592:	outs   dx,DWORD PTR ds:[esi]
  41e593:	sub    eax,DWORD PTR [ebx]
  41e595:	xlat   BYTE PTR ds:[ebx]
  41e596:	(bad)  
  41e597:	in     al,0xf0
  41e599:	mov    eax,0x773bf3bc
  41e59e:	sbb    al,0x58
  41e5a0:	jae    0x41e608
  41e5a2:	add    DWORD PTR [edx-0x7d],ebx
  41e5a5:	scas   al,BYTE PTR es:[edi]
  41e5a6:	test   eax,0x2804d9cf
  41e5ab:	mov    ds:0xef604109,eax
  41e5b0:	in     al,dx
  41e5b1:	pop    ebp
  41e5b2:	add    cl,ah
  41e5b4:	and    cl,bl
  41e5b6:	pop    esi
  41e5b7:	mov    ds:0x2485421d,eax
  41e5bc:	dec    ebx
  41e5bd:	add    DWORD PTR [ecx],ebx
  41e5bf:	leave  
  41e5c0:	in     eax,dx
  41e5c1:	pushf  
  41e5c2:	clc    
  41e5c3:	in     eax,0xf4
  41e5c5:	mov    ecx,DWORD PTR [edx-0x7e759010]
  41e5cb:	repnz imul ecx,DWORD PTR [esp+ebx*1+0x555ba532],0x54c5f6fd
  41e5d7:	in     eax,dx
  41e5d8:	push   esp
  41e5d9:	inc    edi
  41e5da:	or     al,0xdf
  41e5dc:	xor    bl,ah
  41e5de:	pop    esp
  41e5df:	jge    0x41e5ec
  41e5e1:	push   ss
  41e5e2:	jns    0x41e64b
  41e5e4:	in     al,dx
  41e5e5:	xor    esp,edi
  41e5e7:	aaa    
  41e5e8:	jbe    0x41e59d
  41e5ea:	retf   
  41e5eb:	xchg   edx,eax
  41e5ec:	jo     0x41e5e7
  41e5ee:	inc    ecx
  41e5ef:	ins    DWORD PTR es:[edi],dx
  41e5f0:	(bad)  
  41e5f1:	mov    dh,0x53
  41e5f3:	cmc    
  41e5f4:	lods   al,BYTE PTR ds:[esi]
  41e5f5:	leave  
  41e5f6:	hlt    
  41e5f7:	adc    dl,ah
  41e5f9:	add    dh,bh
  41e5fb:	mov    bl,0x65
  41e5fd:	(bad)  
  41e5fe:	pcmpgtw mm5,mm7
  41e601:	cmp    eax,0xe2114287
  41e606:	std    
  41e607:	lods   al,BYTE PTR ds:[esi]
  41e608:	xor    dh,ch
  41e60a:	cmc    
  41e60b:	xor    DWORD PTR [eax+eax*4+0x693ae0a6],edi
  41e612:	add    bl,cl
  41e614:	int    0x23
  41e616:	pop    edi
  41e617:	scas   al,BYTE PTR es:[edi]
  41e618:	or     esi,ecx
  41e61a:	fdivrp st(4),st
  41e61c:	data16 jg 0x41e69b
  41e61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e620:	lock retf 0xbec0
  41e624:	inc    esi
  41e625:	sub    bl,al
  41e627:	mov    eax,ds:0x7468b29a
  41e62c:	inc    ebp
  41e62d:	sbb    edi,esp
  41e62f:	ror    ebp,1
  41e631:	jb     0x41e65b
  41e633:	pop    edx
  41e634:	daa    
  41e635:	xlat   BYTE PTR ds:[ebx]
  41e636:	ret    
  41e637:	lods   al,BYTE PTR ds:[esi]
  41e638:	pop    esi
  41e639:	test   bl,0x3b
  41e63c:	pop    eax
  41e63d:	jecxz  0x41e6ad
  41e63f:	sbb    al,BYTE PTR [ecx+0x4c7036cf]
  41e645:	shl    DWORD PTR [eax],cl
  41e647:	or     DWORD PTR [edi+ebp*8-0x10],eax
  41e64b:	pop    es
  41e64c:	repnz xchg esi,eax
  41e64e:	aam    0xe1
  41e650:	jmp    0xbb48:0xb4f77304
  41e657:	add    eax,0xa4d68e4a
  41e65c:	and    bh,BYTE PTR [ebx-0x35]
  41e65f:	ins    DWORD PTR es:[edi],dx
  41e660:	shl    BYTE PTR [esi+ebx*1],cl
  41e663:	sbb    cl,bh
  41e665:	fisub  WORD PTR [edi+0x6b08d5cf]
  41e66b:	aad    0x1f
  41e66d:	cld    
  41e66e:	std    
  41e66f:	jmp    0x41e63c
  41e671:	lds    esi,FWORD PTR [ebx-0x7fd167c1]
  41e677:	or     BYTE PTR [eax-0xb778d5c],al
  41e67d:	imul   edx,DWORD PTR [eax-0x8],0x33
  41e681:	aad    0x15
  41e683:	inc    ebp
  41e684:	add    esi,0xffffffc5
  41e687:	outs   dx,BYTE PTR ds:[esi]
  41e688:	shl    DWORD PTR [ebp+edx*4-0x5f7c482a],0x5f
  41e690:	iret   
  41e691:	xchg   edx,eax
  41e692:	dec    dl
  41e694:	cmp    ebx,esp
  41e696:	aaa    
  41e697:	les    esi,FWORD PTR [edx-0xba270a1]
  41e69d:	into   
  41e69e:	scas   eax,DWORD PTR es:[edi]
  41e69f:	cmp    BYTE PTR [ecx-0x45],ch
  41e6a2:	test   edi,esp
  41e6a4:	loopne 0x41e67d
  41e6a6:	push   ebp
  41e6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6a9:	jbe    0x41e69f
  41e6ab:	lahf   
  41e6ac:	sahf   
  41e6ad:	xor    DWORD PTR [eiz*1+0x5b68538c],ebx
  41e6b4:	dec    eax
  41e6b5:	or     BYTE PTR [edi-0x408a9956],bl
  41e6bb:	data16 jo 0x41e690
  41e6be:	cwde   
  41e6bf:	xchg   esp,eax
  41e6c0:	fcom   DWORD PTR [ebx]
  41e6c2:	inc    ecx
  41e6c3:	or     ch,0x19
  41e6c6:	popa   
  41e6c7:	mov    dl,cl
  41e6c9:	out    0x5b,al
  41e6cb:	and    al,0xec
  41e6cd:	dec    edx
  41e6ce:	inc    esp
  41e6cf:	iret   
  41e6d0:	push   ds
  41e6d1:	out    0x5e,eax
  41e6d3:	cs or  dl,ch
  41e6d6:	frstor [esi+edx*8-0x53]
  41e6da:	xchg   ecx,eax
  41e6db:	cmp    al,0xd
  41e6dd:	repnz out 0x52,al
  41e6e0:	push   ebx
  41e6e1:	aaa    
  41e6e2:	(bad)  
  41e6e4:	mov    eax,0x79b336a
  41e6e9:	push   ecx
  41e6ea:	mov    BYTE PTR [edx+0x3b34080d],0x6c
  41e6f1:	pop    esi
  41e6f2:	(bad)  
  41e6f3:	sub    eax,0x76b52e45
  41e6f8:	mov    BYTE PTR [ebx+0x33],ch
  41e6fb:	fs repz mov ebp,esi
  41e6ff:	(bad)  
  41e701:	rol    esi,1
  41e703:	xchg   esp,eax
  41e704:	sbb    ebx,edx
  41e706:	lahf   
  41e707:	retf   0xd51f
  41e70a:	(bad)  
  41e70b:	cld    
  41e70c:	scas   eax,DWORD PTR es:[edi]
  41e70d:	xchg   DWORD PTR [ebx+0x15c09925],eax
  41e713:	stos   BYTE PTR es:[edi],al
  41e714:	cwde   
  41e715:	hlt    
  41e716:	test   al,0xbe
  41e718:	add    dh,BYTE PTR [ecx-0x28]
  41e71b:	xchg   esi,eax
  41e71c:	dec    esi
  41e71d:	jno    0x41e6f7
  41e71f:	icebp  
  41e720:	in     al,0xe3
  41e722:	jno    0x41e760
  41e724:	inc    ebx
  41e725:	dec    ebp
  41e726:	inc    edx
  41e727:	jae    0x41e7a8
  41e729:	das    
  41e72a:	jbe    0x41e784
  41e72c:	mov    edi,0x51d3b592
  41e731:	fwait
  41e732:	loope  0x41e6d5
  41e734:	fcom   DWORD PTR [ebx+edi*2]
  41e737:	add    al,0xac
  41e739:	inc    esp
  41e73a:	cmp    al,0x12
  41e73c:	int    0xf2
  41e73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73f:	test   DWORD PTR [ecx],esi
  41e741:	xchg   esi,eax
  41e742:	push   cs
  41e743:	outs   dx,BYTE PTR ss:[esi]
  41e745:	sbb    BYTE PTR [edx+0x120944cc],bh
  41e74b:	add    al,0x44
  41e74d:	icebp  
  41e74e:	sar    BYTE PTR [ebp+0x4e23d777],cl
  41e754:	mov    ds:0xca5f7d92,eax
  41e759:	inc    esp
  41e75a:	bound  eax,QWORD PTR [ecx]
  41e75c:	adc    eax,esi
  41e75e:	pop    edx
  41e75f:	pop    eax
  41e760:	adc    BYTE PTR [esi+edx*8+0x4b],dl
  41e764:	cmp    edi,DWORD PTR [edi-0x37]
  41e767:	or     eax,0x49ae31a0
  41e76c:	mov    ebx,ebp
  41e76e:	lods   eax,DWORD PTR ds:[esi]
  41e76f:	xchg   ecx,eax
  41e770:	nop
  41e771:	scas   al,BYTE PTR es:[edi]
  41e772:	mov    ecx,0xcfa80019
  41e777:	(bad)  
  41e778:	stc    
  41e779:	xchg   ebp,eax
  41e77a:	jmp    DWORD PTR [edi-0x76]
  41e77d:	push   edx
  41e77e:	cld    
  41e77f:	cdq    
  41e780:	imul   bl
  41e782:	fisttp WORD PTR [esi+0x3a]
  41e785:	xor    DWORD PTR [esi],esi
  41e787:	xchg   esi,eax
  41e788:	(bad)  
  41e789:	sbb    bl,BYTE PTR [edx]
  41e78b:	xchg   esp,eax
  41e78c:	push   edx
  41e78d:	and    ecx,DWORD PTR [ecx+ebx*2-0x4]
  41e791:	shr    ecx,1
  41e793:	into   
  41e794:	sub    edi,DWORD PTR ds:0x3480d75b
  41e79a:	jg     0x41e749
  41e79c:	pop    esi
  41e79d:	cmp    al,0x61
  41e79f:	mov    ecx,0x62f71177
  41e7a4:	mov    ebx,0x6c97d21
  41e7a9:	dec    ebp
  41e7aa:	and    BYTE PTR [esi],cl
  41e7ac:	and    bh,BYTE PTR [ebp-0x2a]
  41e7af:	pop    es
  41e7b0:	push   eax
  41e7b1:	mov    edx,0x9ce9995
  41e7b6:	stc    
  41e7b7:	adc    eax,0xa8e01b42
  41e7bc:	dec    eax
  41e7bd:	int    0x5
  41e7bf:	adc    ebp,DWORD PTR [eax+0x3b]
  41e7c2:	clc    
  41e7c3:	dec    esi
  41e7c4:	and    al,0x45
  41e7c6:	push   es
  41e7c7:	add    al,cl
  41e7c9:	mov    DWORD PTR [edx+eax*1],ebp
  41e7cc:	loopne 0x41e77f
  41e7ce:	nop
  41e7cf:	fidiv  WORD PTR [ebp+edx*1+0x77]
  41e7d3:	or     eax,0x8c0b5327
  41e7d8:	(bad)  
  41e7d9:	add    dh,ah
  41e7db:	cmp    bh,0xfd
  41e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7df:	jmp    0x41e7bf
  41e7e1:	mov    cl,0xf9
  41e7e3:	stos   BYTE PTR es:[edi],al
  41e7e4:	sub    dl,BYTE PTR [esi]
  41e7e6:	pop    esi
  41e7e7:	test   ebp,esi
  41e7e9:	mov    bl,0xd5
  41e7eb:	(bad)  
  41e7ec:	in     eax,dx
  41e7ed:	add    ch,BYTE PTR [ebp-0x6990356b]
  41e7f3:	(bad)  
  41e7f4:	adc    eax,0x4b7e950f
  41e7f9:	push   es
  41e7fa:	outs   dx,DWORD PTR ds:[esi]
  41e7fb:	xchg   edi,eax
  41e7fc:	sbb    DWORD PTR [esi-0xd],0xede56e4c
  41e803:	inc    ecx
  41e804:	mov    esi,0xb1e448b6
  41e809:	not    BYTE PTR [eax+0x63]
  41e80c:	push   esp
  41e80d:	mov    eax,0x3c209590
  41e812:	(bad)  
  41e813:	data16 daa 
  41e815:	cld    
  41e816:	sbb    BYTE PTR [ecx-0x64912f51],cl
  41e81c:	jb     0x41e80c
  41e81e:	sub    DWORD PTR [ebp-0x11157de2],0xffffffcd
  41e825:	aad    0x90
  41e827:	or     al,0x46
  41e829:	xor    al,0x8d
  41e82b:	jp     0x41e7c7
  41e82d:	pop    es
  41e82e:	jnp    0x41e869
  41e830:	mov    ebx,DWORD PTR [esi]
  41e832:	xlat   BYTE PTR ds:[ebx]
  41e833:	hlt    
  41e834:	sbb    ecx,DWORD PTR [esi]
  41e836:	inc    ebp
  41e837:	inc    esp
  41e838:	inc    ebx
  41e839:	mov    cs,WORD PTR [eax]
  41e83b:	das    
  41e83c:	cmp    al,0xf1
  41e83e:	stc    
  41e83f:	js     0x41e88f
  41e841:	fdiv   QWORD PTR [esi+0x66]
  41e844:	(bad)  
  41e845:	adc    eax,0x5de7ca02
  41e84a:	jge    0x41e898
  41e84c:	mov    esp,0x832e3d95
  41e851:	cld    
  41e852:	and    bl,BYTE PTR [ebx+0x6]
  41e855:	cmc    
  41e856:	or     ecx,DWORD PTR [edi]
  41e858:	jmp    0x41ef:0x446e2cbf
  41e85f:	jb     0x41e895
  41e861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e862:	dec    edx
  41e863:	jg     0x41e8d8
  41e865:	shl    esi,cl
  41e867:	dec    esi
  41e868:	sbb    al,0x58
  41e86a:	mov    al,0x8
  41e86c:	jecxz  0x41e8df
  41e86e:	mov    DWORD PTR [edi],edx
  41e870:	or     DWORD PTR [eax+0x54],eax
  41e873:	shl    bl,0xce
  41e876:	push   es
  41e877:	pushw  0x75
  41e87a:	gs clc 
  41e87c:	call   0x4033:0x4c123977
  41e883:	mov    edi,0xf664fc85
  41e888:	loope  0x41e811
  41e88a:	cmp    DWORD PTR [esi+ecx*1],0x5d89bab8
  41e891:	inc    bx
  41e893:	js     0x41e830
  41e895:	xor    ah,al
  41e897:	pop    eax
  41e898:	xlat   BYTE PTR ds:[ebx]
  41e899:	loopne 0x41e8a3
  41e89b:	stc    
  41e89c:	iret   
  41e89d:	inc    ebp
  41e89e:	ret    
  41e89f:	popa   
  41e8a0:	loop   0x41e8ae
  41e8a2:	popf   
  41e8a3:	inc    ebp
  41e8a4:	out    dx,eax
  41e8a5:	iret   
  41e8a6:	push   edx
  41e8a7:	test   BYTE PTR [ecx],bh
  41e8a9:	xor    ecx,DWORD PTR [edx-0x2454f1db]
  41e8af:	pop    eax
  41e8b0:	push   ecx
  41e8b1:	xor    bl,ah
  41e8b3:	bound  ebp,QWORD PTR [esi+0x15]
  41e8b6:	daa    
  41e8b7:	hlt    
  41e8b8:	mov    cl,BYTE PTR [edi+0x19]
  41e8bb:	jno    0x41e87e
  41e8bd:	mov    al,ds:0x75b7cf18
  41e8c2:	sbb    ebx,DWORD PTR [edi]
  41e8c4:	pop    ds
  41e8c5:	cmp    BYTE PTR [edx+eax*1+0x6dcb4b25],dl
  41e8cc:	push   esp
  41e8cd:	mov    WORD PTR [esi+eiz*2+0x1f8f7784],ss
  41e8d4:	lahf   
  41e8d5:	mov    ah,0x83
  41e8d7:	xchg   edi,eax
  41e8d8:	sub    eax,0xc55615a5
  41e8dd:	sub    bh,dh
  41e8df:	mov    dh,0x1e
  41e8e1:	push   ss
  41e8e2:	in     al,0x2e
  41e8e4:	or     eax,0xe6ffc49c
  41e8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ea:	inc    edx
  41e8eb:	sahf   
  41e8ec:	or     eax,0xd270cc67
  41e8f1:	lods   eax,DWORD PTR ds:[esi]
  41e8f2:	cmp    eax,0x6f03a887
  41e8f7:	xchg   ebp,eax
  41e8f8:	sbb    bl,ah
  41e8fa:	fadd   DWORD PTR [esi+0x67]
  41e8fd:	mov    esi,DWORD PTR [esi+ebx*8+0x49]
  41e901:	jbe    0x41e954
  41e903:	call   0x7f845f1e
  41e908:	adc    ebx,DWORD PTR [edi]
  41e90a:	popf   
  41e90b:	stos   DWORD PTR es:[edi],eax
  41e90c:	mov    esp,edx
  41e90e:	stos   DWORD PTR es:[edi],eax
  41e90f:	mov    eax,ds:0x5dac0396
  41e914:	cmp    BYTE PTR [edi],ch
  41e916:	retf   
  41e917:	dec    ebx
  41e918:	xor    ecx,0x38
  41e91b:	add    eax,0xfa93c89e
  41e920:	mov    esi,0x31bf3163
  41e925:	ret    
  41e926:	xor    BYTE PTR [ebx+eiz*2-0x6b118551],0x57
  41e92e:	mov    ah,dh
  41e930:	mov    eax,ds:0x78385d5a
  41e935:	addr16 imul ebx,edi,0x409d7dda
  41e93c:	test   DWORD PTR [edx],edi
  41e93e:	std    
  41e93f:	fwait
  41e940:	pop    ebx
  41e941:	mov    ecx,0x8159c866
  41e946:	stos   BYTE PTR es:[edi],al
  41e947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e948:	xor    al,0xb3
  41e94a:	mov    bh,0xca
  41e94c:	outs   dx,BYTE PTR ds:[esi]
  41e94d:	(bad)  
  41e94e:	loopne 0x41e9ca
  41e950:	or     ebx,DWORD PTR [edx]
  41e952:	jle    0x41e96e
  41e954:	(bad)  
  41e955:	sahf   
  41e956:	arpl   si,cx
  41e958:	and    BYTE PTR [eax-0x3d],dl
  41e95b:	xlat   BYTE PTR ds:[ebx]
  41e95c:	int3   
  41e95d:	retf   
  41e95e:	xor    DWORD PTR [ebx],0xb26cf0f1
  41e964:	sbb    edi,DWORD PTR [ebx-0x22]
  41e967:	push   ss
  41e968:	jle    0x41e964
  41e96a:	leave  
  41e96b:	dec    eax
  41e96c:	lods   al,BYTE PTR ds:[esi]
  41e96d:	lods   eax,DWORD PTR ds:[esi]
  41e96e:	test   al,0x12
  41e970:	ror    BYTE PTR [ebp-0x23],0xad
  41e974:	sbb    DWORD PTR [edi],0xffffffae
  41e977:	dec    esp
  41e978:	loope  0x41e956
  41e97a:	std    
  41e97b:	test   ax,0x217e
  41e97f:	icebp  
  41e980:	and    al,0x5b
  41e983:	inc    ebp
  41e984:	mov    ss,esp
  41e986:	sub    al,ah
  41e988:	mov    bl,0x9
  41e98a:	xchg   esp,eax
  41e98b:	push   0xffffff94
  41e98d:	adc    BYTE PTR [eax],al
  41e98f:	pop    edx
  41e990:	ins    BYTE PTR es:[edi],dx
  41e991:	add    ebx,DWORD PTR [ecx+0x6d]
  41e994:	mov    bh,0xb3
  41e996:	cwde   
  41e997:	add    BYTE PTR [eax+0x30a31e08],bl
  41e99d:	(bad)  
  41e99e:	hlt    
  41e99f:	psraw  mm3,mm7
  41e9a2:	test   bh,ch
  41e9a4:	sub    BYTE PTR [edi],0xf5
  41e9a7:	pop    esi
  41e9a8:	mov    eax,0x7124adf3
  41e9ad:	jo     0x41e9d3
  41e9af:	mov    ch,bl
  41e9b1:	loope  0x41e988
  41e9b3:	mov    dh,0xd0
  41e9b5:	push   eax
  41e9b6:	leave  
  41e9b7:	and    edi,DWORD PTR [edx+0x10bce8ae]
  41e9bd:	rcr    DWORD PTR [ebp+esi*2+0x29530c3c],cl
  41e9c4:	out    dx,al
  41e9c5:	ja     0x41e994
  41e9c7:	jmp    0xf503:0xcc762958
  41e9ce:	out    dx,eax
  41e9cf:	stos   DWORD PTR es:[edi],eax
  41e9d0:	jbe    0x41e98d
  41e9d2:	mov    al,ds:0x1f9abfe4
  41e9d7:	sbb    DWORD PTR [edx+0x7a],0x79
  41e9db:	mov    ah,0x63
  41e9dd:	jecxz  0x41e9d7
  41e9df:	and    al,0xa4
  41e9e1:	xchg   ebx,eax
  41e9e2:	outs   dx,DWORD PTR ds:[esi]
  41e9e3:	mov    bl,dl
  41e9e5:	xor    eax,0x9d234060
  41e9ea:	push   eax
  41e9eb:	sbb    BYTE PTR [esi],al
  41e9ed:	sahf   
  41e9ee:	adc    BYTE PTR [edi-0x6],dl
  41e9f1:	push   ds
  41e9f2:	adc    DWORD PTR [ebp-0x11aa96bf],ecx
  41e9f8:	sar    DWORD PTR [ebx+0x5987cab7],0xcf
  41e9ff:	fistp  WORD PTR [eax-0x764f314b]
  41ea05:	inc    ebx
  41ea06:	add    BYTE PTR ds:0x17060c36,bh
  41ea0c:	rcl    BYTE PTR [edi-0x55],0xef
  41ea10:	adc    BYTE PTR [esi+0x175d475b],bh
  41ea16:	cdq    
  41ea17:	cmp    ebp,ebp
  41ea19:	pop    ecx
  41ea1a:	pop    esp
  41ea1b:	mov    BYTE PTR [ecx-0x60],bl
  41ea1e:	sub    esp,DWORD PTR [eax+0x21]
  41ea21:	fldcw  WORD PTR [esi+0x51]
  41ea24:	(bad)  
  41ea25:	aas    
  41ea26:	shr    DWORD PTR [ebp-0x5f],0x2a
  41ea2a:	mov    es,WORD PTR [ecx-0x518e202f]
  41ea30:	jmp    0xacb73bb8
  41ea35:	gs mov ecx,0x5efeb4ef
  41ea3b:	ret    
  41ea3c:	sahf   
  41ea3d:	add    al,0xa4
  41ea3f:	add    al,0xd1
  41ea41:	aaa    
  41ea42:	mov    dh,0xf5
  41ea44:	and    esi,DWORD PTR [esi]
  41ea46:	fild   WORD PTR [edi-0x5289a875]
  41ea4c:	dec    edi
  41ea4d:	mov    edi,0x1edc4d82
  41ea52:	sbb    DWORD PTR [edx+0x62920746],edx
  41ea58:	xor    BYTE PTR [edi+0x23],0x1f
  41ea5c:	imul   esp
  41ea5e:	pop    esp
  41ea5f:	add    eax,0xb29b744b
  41ea64:	dec    esi
  41ea65:	retf   
  41ea66:	xchg   esp,eax
  41ea67:	dec    edi
  41ea68:	xor    esi,DWORD PTR [esi]
  41ea6a:	pop    edx
  41ea6b:	test   BYTE PTR [edx-0x6e],ch
  41ea6e:	int3   
  41ea6f:	iret   
  41ea70:	push   edx
  41ea71:	mov    esi,0x619021b4
  41ea76:	cmp    esp,ecx
  41ea78:	in     eax,0x13
  41ea7a:	inc    ecx
  41ea7b:	std    
  41ea7c:	sub    cl,BYTE PTR [ebx]
  41ea7e:	cdq    
  41ea7f:	cwde   
  41ea80:	and    ah,al
  41ea82:	sbb    al,0xd6
  41ea84:	add    al,0xb2
  41ea86:	push   ss
  41ea87:	stos   BYTE PTR es:[edi],al
  41ea88:	test   BYTE PTR cs:[esi-0x57161e0e],cl
  41ea8f:	jle    0x41ea83
  41ea91:	mov    DWORD PTR [edx],edi
  41ea93:	gs xchg edi,eax
  41ea95:	fs iret 
  41ea97:	sti    
  41ea98:	push   cs
  41ea99:	outs   dx,DWORD PTR ds:[esi]
  41ea9a:	repnz add bl,BYTE PTR [ebx-0x3d57f77e]
  41eaa1:	in     al,0x12
  41eaa3:	mov    dl,0x2a
  41eaa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa6:	jbe    0x41ead0
  41eaa8:	mov    ebp,0x8fd8ab3f
  41eaad:	mov    bl,0x8a
  41eaaf:	add    dl,ch
  41eab1:	pop    eax
  41eab2:	jmp    0x94dbe0e2
  41eab7:	sub    DWORD PTR [ecx],ebx
  41eab9:	add    esi,ebp
  41eabb:	push   esp
  41eabc:	jno    0x41eb2a
  41eabe:	add    al,BYTE PTR [eax-0x7d]
  41eac1:	arpl   WORD PTR [esi],bp
  41eac3:	jg     0x41eb24
  41eac5:	repnz or al,BYTE PTR [ebp+0x74]
  41eac9:	outs   dx,DWORD PTR ds:[esi]
  41eaca:	inc    esi
  41eacb:	popa   
  41eacc:	(bad)  
  41eacd:	cmp    ecx,DWORD PTR [eax+esi*4+0x20]
  41ead1:	stos   BYTE PTR es:[edi],al
  41ead2:	pop    es
  41ead3:	das    
  41ead4:	push   ebp
  41ead5:	mov    edi,0x2933d567
  41eada:	sub    esi,ebx
  41eadc:	push   0xa6abca4f
  41eae1:	in     eax,dx
  41eae2:	adc    eax,0x70b46ffe
  41eae7:	inc    esp
  41eae8:	push   ebx
  41eae9:	sbb    BYTE PTR [edx+edi*1],bh
  41eaec:	jo     0x41eb55
  41eaee:	ss lahf 
  41eaf0:	xor    edx,ebp
  41eaf2:	mov    esi,0x95a622ef
  41eaf7:	cmc    
  41eaf8:	inc    BYTE PTR [edi]
  41eafa:	test   eax,0xb46437f7
  41eaff:	mov    ds:0x520aafc4,al
  41eb04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb05:	out    dx,al
  41eb06:	dec    ebx
  41eb07:	pop    ds
  41eb08:	push   ds
  41eb09:	jno    0x41eb20
  41eb0b:	pop    eax
  41eb0c:	xor    bl,dl
  41eb0e:	dec    ecx
  41eb0f:	das    
  41eb10:	mov    ?,WORD PTR [edi]
  41eb12:	fwait
  41eb13:	mov    ds:0xaf8af842,al
  41eb18:	enter  0x93bc,0x9b
  41eb1c:	jge    0x41eb12
  41eb1e:	adc    DWORD PTR [bp+0x7f],esp
  41eb22:	sub    esi,esi
  41eb24:	cmovae ebx,edx
  41eb27:	retf   0x3b33
  41eb2a:	stc    
  41eb2b:	outs   dx,DWORD PTR ds:[esi]
  41eb2c:	out    dx,eax
  41eb2d:	rcr    DWORD PTR [edx-0x24bb399d],cl
  41eb33:	mov    ebx,0x658481d3
  41eb38:	or     bl,BYTE PTR [ecx-0x34a03684]
  41eb3e:	pushf  
  41eb3f:	mov    ds:0x25bacbfa,al
  41eb44:	and    eax,DWORD PTR [edx]
  41eb46:	sti    
  41eb47:	outs   dx,DWORD PTR ds:[esi]
  41eb48:	xchg   edi,eax
  41eb49:	and    al,0x1d
  41eb4b:	push   esi
  41eb4c:	pushf  
  41eb4d:	pop    ebx
  41eb4e:	neg    BYTE PTR es:[esi-0x63]
  41eb52:	add    ah,BYTE PTR [edx+0x55a08f7b]
  41eb58:	fisttp QWORD PTR [ecx+0x49]
  41eb5b:	pop    ecx
  41eb5c:	cmp    BYTE PTR [eax-0x7c],ch
  41eb5f:	pop    DWORD PTR [edx+esi*2+0x3b]
  41eb63:	cs push ss
  41eb65:	mov    ds:0x78cef2b5,al
  41eb6a:	pop    ss
  41eb6b:	pop    esp
  41eb6c:	xor    ecx,DWORD PTR [ecx]
  41eb6e:	ror    DWORD PTR [ebp-0x72],1
  41eb71:	icebp  
  41eb72:	xchg   ebx,eax
  41eb73:	xchg   esi,eax
  41eb74:	cmp    BYTE PTR [edi+esi*4+0x41],bl
  41eb78:	cli    
  41eb79:	or     al,0xf5
  41eb7b:	int    0xad
  41eb7d:	ret    0x9efd
  41eb80:	jmp    0x5c30dc96
  41eb85:	dec    BYTE PTR [eax+0x32]
  41eb88:	not    ebx
  41eb8a:	cmp    eax,0x86e88e04
  41eb8f:	mov    edi,0x9f4318f
  41eb94:	sub    eax,0x9ca40d0f
  41eb99:	cmp    edx,DWORD PTR [eax]
  41eb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9c:	and    ah,BYTE PTR [ebx-0x69c1bdea]
  41eba2:	in     eax,0xae
  41eba4:	pusha  
  41eba5:	cld    
  41eba6:	mov    dl,0x6f
  41eba8:	mov    ebp,0x5b968899
  41ebad:	pop    ds
  41ebae:	dec    esp
  41ebaf:	dec    esp
  41ebb0:	bound  edx,QWORD PTR [ecx+0x5693aedb]
  41ebb6:	(bad)  
  41ebb7:	fwait
  41ebb8:	(bad)  
  41ebb9:	leave  
  41ebba:	xor    esp,DWORD PTR [edi]
  41ebbc:	fmul   st(3),st
  41ebbe:	(bad)  
  41ebbf:	out    dx,eax
  41ebc0:	mov    esi,0x60fdee85
  41ebc5:	sub    edx,DWORD PTR [ebp+0x43]
  41ebc8:	pop    edi
  41ebc9:	pushf  
  41ebca:	loope  0x41ebff
  41ebcc:	mov    al,ds:0xda3fabd5
  41ebd1:	push   0x41
  41ebd3:	and    ebx,DWORD PTR [edi-0x5c]
  41ebd6:	inc    edi
  41ebd7:	cdq    
  41ebd8:	jae    0x41ebb2
  41ebda:	daa    
  41ebdb:	dec    eax
  41ebdc:	inc    esi
  41ebdd:	inc    edi
  41ebde:	jl     0x41ec4f
  41ebe0:	mul    DWORD PTR [edx]
  41ebe2:	and    edi,esp
  41ebe4:	push   cs
  41ebe5:	dec    edx
  41ebe6:	push   edi
  41ebe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe8:	fwait
  41ebe9:	jp     0x41ec13
  41ebeb:	xchg   esp,eax
  41ebec:	stc    
  41ebed:	out    dx,eax
  41ebee:	xchg   ecx,eax
  41ebef:	aaa    
  41ebf0:	out    dx,al
  41ebf1:	xchg   esi,eax
  41ebf2:	and    BYTE PTR [edi-0x340c79a1],dl
  41ebf8:	xchg   ebx,eax
  41ebf9:	scas   eax,DWORD PTR es:[edi]
  41ebfa:	imul   esp,DWORD PTR [edi-0x38],0xffffffd2
  41ebfe:	(bad)  
  41ebff:	cs repnz stos DWORD PTR es:[edi],eax
  41ec02:	je     0x41ec5e
  41ec04:	cmp    DWORD PTR [ebx],ebx
  41ec06:	test   al,0x99
  41ec08:	and    eax,0xb0cd6b8
  41ec0d:	int    0x3a
  41ec0f:	jl     0x41ec82
  41ec11:	fsubr  st,st(5)
  41ec13:	xor    ah,BYTE PTR [ebx-0x55289de7]
  41ec19:	addps  xmm6,XMMWORD PTR [esi]
  41ec1c:	scas   eax,DWORD PTR es:[edi]
  41ec1d:	fs inc ebp
  41ec1f:	adc    al,0xba
  41ec21:	mov    eax,ds:0x5039f268
  41ec26:	leave  
  41ec27:	int    0x88
  41ec29:	inc    ebp
  41ec2a:	and    ebx,DWORD PTR [ebx-0x474328e9]
  41ec30:	add    BYTE PTR [ebp+0x2d],0xbd
  41ec34:	xor    cl,BYTE PTR [eax]
  41ec36:	cdq    
  41ec37:	dec    edx
  41ec38:	sbb    edi,DWORD PTR [eax-0x1e3c7436]
  41ec3e:	clc    
  41ec3f:	dec    ebx
  41ec40:	ss addr16 sbb al,0xb3
  41ec44:	xchg   edx,eax
  41ec45:	scas   eax,DWORD PTR es:[edi]
  41ec46:	test   al,0x32
  41ec48:	mov    esp,0x4c4be5ba
  41ec4d:	or     ebx,esp
  41ec4f:	dec    esi
  41ec50:	adc    ebx,0xffffff8e
  41ec53:	dec    esi
  41ec54:	ins    BYTE PTR es:[edi],dx
  41ec55:	(bad)  
  41ec56:	(bad)  
  41ec58:	fimul  DWORD PTR [ebx-0x441d9ef8]
  41ec5e:	jb     0x41ecac
  41ec60:	push   esp
  41ec61:	aaa    
  41ec62:	int3   
  41ec63:	out    0x0,eax
  41ec65:	mov    al,BYTE PTR ds:0x324bc33b
  41ec6b:	mov    DWORD PTR [edx-0x18398103],edx
  41ec71:	ja     0x41eced
  41ec73:	pop    ss
  41ec74:	inc    edx
  41ec75:	(bad)  
  41ec76:	lock scas eax,DWORD PTR es:[edi]
  41ec78:	fidivr WORD PTR [edi]
  41ec7a:	sbb    al,0x1c
  41ec7c:	cs in  eax,dx
  41ec7e:	and    dl,ah
  41ec80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec81:	nop
  41ec82:	mov    bl,0xa1
  41ec84:	movzx  esi,BYTE PTR [ecx+0x4e]
  41ec88:	jnp    0x41ec3f
  41ec8a:	test   BYTE PTR [edi],bh
  41ec8c:	ins    BYTE PTR es:[edi],dx
  41ec8d:	pop    esp
  41ec8e:	push   ecx
  41ec8f:	fbld   TBYTE PTR [ebx-0x49]
  41ec92:	mov    ds:0xccedb32f,eax
  41ec97:	adc    edi,0xa622d94f
  41ec9d:	pop    esp
  41ec9e:	push   ebx
  41ec9f:	js     0x41ecde
  41eca1:	int    0x9f
  41eca3:	inc    edx
  41eca4:	add    eax,0xde60ce1e
  41eca9:	(bad)  
  41ecaa:	adc    dh,BYTE PTR [edx-0x79f80f45]
  41ecb0:	aad    0x11
  41ecb2:	pop    edi
  41ecb3:	das    
  41ecb4:	jge    0x41ec7a
  41ecb6:	in     eax,dx
  41ecb7:	xchg   DWORD PTR [eax],ecx
  41ecb9:	fbstp  TBYTE PTR [ebp-0x3f]
  41ecbc:	jbe    0x41ecb3
  41ecbe:	int    0x5e
  41ecc0:	nop
  41ecc1:	add    esp,edx
  41ecc3:	adc    esi,esp
  41ecc5:	in     al,dx
  41ecc6:	mov    bl,0xb7
  41ecc8:	(bad)  
  41ecc9:	popf   
  41ecca:	ds jne 0x41ecdf
  41eccd:	ss imul eax,edx,0x282d439c
  41ecd4:	out    0x10,eax
  41ecd6:	retf   0xa36d
  41ecd9:	imul   ebx,esi,0x8
  41ecdc:	loope  0x41ecaa
  41ecde:	jo     0x41ec74
  41ece0:	sbb    cl,bh
  41ece2:	and    al,0xd3
  41ece4:	rol    BYTE PTR ds:0xb0d5aa2d,0x9a
  41eceb:	xchg   DWORD PTR [edx],eax
  41eced:	lds    ebp,FWORD PTR [ebx-0x31c63756]
  41ecf3:	pop    edx
  41ecf4:	ffreep st(5)
  41ecf6:	jp     0x41eccd
  41ecf8:	add    eax,0xe00811ab
  41ecfd:	add    DWORD PTR [esp+ebp*4],edx
  41ed00:	out    0xbc,eax
  41ed02:	xchg   ebx,eax
  41ed03:	test   DWORD PTR [ebp+0x23b24df2],esp
  41ed09:	jne    0x41ed82
  41ed0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed0c:	jp     0x41ecbd
  41ed0e:	scas   al,BYTE PTR es:[edi]
  41ed0f:	dec    ecx
  41ed10:	sbb    DWORD PTR [edi],esi
  41ed12:	mov    ah,0xfb
  41ed14:	mov    cl,0x78
  41ed16:	pop    edx
  41ed17:	jmp    0xe5e6:0xbade65d5
  41ed1e:	dec    edx
  41ed1f:	jbe    0x41ed7c
  41ed21:	lods   eax,DWORD PTR ds:[esi]
  41ed22:	pop    ds
  41ed23:	test   DWORD PTR [eax+0x29da036a],ebp
  41ed29:	daa    
  41ed2a:	push   ss
  41ed2b:	ret    
  41ed2c:	pop    ebp
  41ed2d:	lods   al,BYTE PTR ds:[esi]
  41ed2e:	ins    BYTE PTR es:[edi],dx
  41ed2f:	xor    al,0x94
  41ed31:	es dec ebx
  41ed33:	inc    edx
  41ed34:	or     eax,DWORD PTR [esi]
  41ed36:	mov    al,0x49
  41ed38:	aaa    
  41ed39:	popa   
  41ed3a:	jle    0x41ed7a
  41ed3c:	inc    ebx
  41ed3d:	add    BYTE PTR [ebx],dh
  41ed3f:	or     al,0xc
  41ed41:	cmp    eax,0x5296eb04
  41ed46:	call   0x6e28:0x67f439b
  41ed4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed4e:	add    dh,BYTE PTR [edx+0x280f73e0]
  41ed54:	loopne 0x41ed7b
  41ed56:	leave  
  41ed57:	adc    al,0x82
  41ed59:	adc    ecx,esp
  41ed5b:	bound  edx,QWORD PTR [ecx-0x3a]
  41ed5e:	jae    0x41ed97
  41ed60:	sbb    dh,BYTE PTR [eax-0x4d1b67e4]
  41ed66:	and    BYTE PTR [ebx+0x6],bh
  41ed69:	add    ah,bh
  41ed6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed6c:	bound  ecx,QWORD PTR [edx+0x1a]
  41ed6f:	test   eax,0xcc88955b
  41ed74:	lds    edx,FWORD PTR ds:0x5a3a4910
  41ed7a:	daa    
  41ed7b:	xor    al,0x3e
  41ed7d:	mov    bl,dl
  41ed7f:	adc    al,0xc3
  41ed81:	jmp    0xdcba:0x2e9305e5
  41ed88:	cld    
  41ed89:	pop    esp
  41ed8a:	inc    edx
  41ed8b:	ss push ebx
  41ed8d:	jl     0x41ed1e
  41ed8f:	cwde   
  41ed90:	es dec eax
  41ed92:	xchg   esp,eax
  41ed93:	and    al,0x70
  41ed95:	xor    al,0x49
  41ed97:	xchg   BYTE PTR [ebx-0x30f907f9],dh
  41ed9d:	sub    BYTE PTR [edi-0x52690e7b],0xb1
  41eda4:	std    
  41eda5:	in     eax,0x9f
  41eda7:	xor    al,0xb9
  41eda9:	cmp    DWORD PTR ss:[eax-0x4223e634],0x68
  41edb1:	hlt    
  41edb2:	inc    edi
  41edb3:	jno    0x41ed44
  41edb5:	push   ebx
  41edb6:	inc    esp
  41edb7:	sbb    al,cl
  41edb9:	or     DWORD PTR ds:0xb2c1f0b4,ebx
  41edbf:	xchg   esi,eax
  41edc0:	cmp    al,0xde
  41edc2:	ss nop
  41edc4:	nop
  41edc5:	xchg   edi,eax
  41edc6:	inc    esi
  41edc7:	in     al,0xf5
  41edc9:	fiadd  DWORD PTR [edx-0x316d8a43]
  41edcf:	xchg   BYTE PTR [ebx],dl
  41edd1:	pop    edx
  41edd2:	cmp    eax,0x95b4c502
  41edd7:	in     eax,dx
  41edd8:	je     0x41ee16
  41edda:	or     al,0xb6
  41eddc:	sub    eax,0xaedc7c4d
  41ede1:	push   ebp
  41ede2:	push   cs
  41ede3:	stos   BYTE PTR es:[edi],al
  41ede4:	(bad)  
  41ede5:	mov    eax,0x8135d0e3
  41edea:	or     eax,0x69fd2373
  41edef:	daa    
  41edf0:	int    0x10
  41edf2:	out    0xea,eax
  41edf4:	cdq    
  41edf5:	fild   WORD PTR [edx+0x66dad47]
  41edfb:	add    esp,ebp
  41edfd:	jnp    0x41ee3e
  41edff:	mov    ch,0x89
  41ee01:	pop    edi
  41ee02:	inc    ebp
  41ee03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee04:	repnz xlat BYTE PTR cs:[ebx]
  41ee07:	jns    0x41ee77
  41ee09:	pop    ebx
  41ee0a:	jae    0x41edac
  41ee0c:	xchg   esp,eax
  41ee0d:	sbb    eax,DWORD PTR [ecx+0x4e4e37bd]
  41ee13:	loope  0x41ee6e
  41ee15:	daa    
  41ee16:	pop    ebp
  41ee17:	lahf   
  41ee18:	push   0xffffffce
  41ee1a:	lock jnp 0x41edc8
  41ee1d:	xor    cl,cl
  41ee1f:	inc    eax
  41ee20:	out    dx,al
  41ee21:	jnp    0x41ee67
  41ee23:	ret    0x385d
  41ee26:	out    dx,eax
  41ee27:	sbb    eax,0x7badbe94
  41ee2c:	and    esp,DWORD PTR [eax]
  41ee2e:	sub    DWORD PTR [edx],ebx
  41ee30:	mov    ebp,0x9b010d3b
  41ee35:	sub    DWORD PTR [esp+edx*8+0x29fd3d72],esp
  41ee3c:	icebp  
  41ee3d:	(bad)  
  41ee3e:	fbstp  TBYTE PTR ds:0xfb4404a4
  41ee44:	stc    
  41ee45:	sub    ecx,DWORD PTR [esi+eiz*4]
  41ee48:	out    dx,eax
  41ee49:	ins    DWORD PTR es:[edi],dx
  41ee4a:	(bad)  
  41ee4b:	int3   
  41ee4c:	loopne 0x41ee9e
  41ee4e:	mov    BYTE PTR [ecx+0x4295c773],dl
  41ee54:	mov    cl,0x6
  41ee56:	scas   al,BYTE PTR es:[edi]
  41ee57:	inc    edx
  41ee58:	push   cs
  41ee59:	add    DWORD PTR [ebx+0x484b09a6],0xffffffbb
  41ee60:	and    eax,DWORD PTR [eax+0x48]
  41ee63:	stos   DWORD PTR es:[edi],eax
  41ee64:	inc    ebx
  41ee65:	mov    al,ds:0xffef4120
  41ee6a:	sahf   
  41ee6b:	mov    edx,0x6eb32608
  41ee70:	jp     0x41ee00
  41ee72:	add    esi,esp
  41ee74:	stos   DWORD PTR es:[edi],eax
  41ee75:	fld    DWORD PTR [edx-0x5458a9b9]
  41ee7b:	es xchg esp,eax
  41ee7d:	and    al,0xf
  41ee7f:	dec    edi
  41ee80:	fs jb  0x41eee7
  41ee83:	loopne 0x41ee21
  41ee85:	xor    DWORD PTR [esi+0x23f5ddca],ebx
  41ee8b:	retf   0x20d4
  41ee8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8f:	mov    dh,0x57
  41ee91:	or     BYTE PTR [eax+0x53018e34],dh
  41ee97:	add    ebp,DWORD PTR [edi+0x59]
  41ee9a:	test   DWORD PTR [edx-0x9],esi
  41ee9d:	in     al,dx
  41ee9e:	leave  
  41ee9f:	test   DWORD PTR [eax-0x48],esi
  41eea2:	jmp    0xf8df:0xa5770221
  41eea9:	push   0x6c
  41eeab:	fiadd  WORD PTR [edi]
  41eead:	ja     0x41ee92
  41eeaf:	(bad)  
  41eeb0:	fnstsw WORD PTR [ebp-0x21]
  41eeb3:	pusha  
  41eeb4:	add    eax,0xea84f794
  41eeb9:	js     0x41ee3e
  41eebb:	dec    eax
  41eebc:	scas   eax,DWORD PTR es:[edi]
  41eebd:	jns    0x41ee4c
  41eebf:	xchg   edx,eax
  41eec0:	out    dx,eax
  41eec1:	xor    eax,0xdbb3bfa3
  41eec6:	sub    ah,BYTE PTR [ecx+eiz*2-0x4083a0d1]
  41eecd:	stos   BYTE PTR es:[edi],al
  41eece:	mov    ebx,0xa150b266
  41eed3:	mov    al,ds:0xda5164be
  41eed8:	cs pop ecx
  41eeda:	mov    esp,0xcb8af5e3
  41eedf:	sti    
  41eee0:	push   edi
  41eee1:	pusha  
  41eee2:	xor    ebp,DWORD PTR [esi+ebp*8]
  41eee5:	(bad)  
  41eee7:	out    dx,al
  41eee8:	xchg   ebp,eax
  41eee9:	jmp    0xa048:0xea0449eb
  41eef0:	lods   al,BYTE PTR ds:[esi]
  41eef1:	sbb    al,0xf2
  41eef3:	jecxz  0x41ef2c
  41eef5:	lahf   
  41eef6:	dec    esp
  41eef7:	addr16 or ch,dl
  41eefa:	sub    al,ah
  41eefc:	shl    BYTE PTR [ecx+eiz*4+0x1c769d3c],cl
  41ef03:	pop    esp
  41ef04:	imul   ebp,eax,0xffffffd2
  41ef07:	in     al,dx
  41ef08:	ja     0x41ef11
  41ef0a:	cwde   
  41ef0b:	das    
  41ef0c:	bnd jb 0x41eeb2
  41ef0f:	test   DWORD PTR [esi+edx*1-0x6b],eax
  41ef13:	inc    esp
  41ef14:	aam    0xaf
  41ef16:	fadd   st,st(6)
  41ef18:	pop    eax
  41ef19:	xor    eax,edx
  41ef1b:	rcl    BYTE PTR gs:[ecx],cl
  41ef1e:	jne    0x41ef36
  41ef20:	push   es
  41ef21:	pusha  
  41ef22:	arpl   WORD PTR [esi+0x566237b6],ax
  41ef28:	jb     0x41efa1
  41ef2a:	mov    ds:0xb62d5d8a,al
  41ef2f:	fistp  WORD PTR [edi]
  41ef31:	cmp    esp,DWORD PTR [ebx]
  41ef33:	addr16 dec ebp
  41ef35:	pop    ebp
  41ef36:	out    0xc3,eax
  41ef38:	sar    bl,1
  41ef3a:	or     DWORD PTR [edi+0x8a99bd4],eax
  41ef40:	ins    WORD PTR es:[edi],dx
  41ef42:	adc    bl,BYTE PTR [edi+ecx*4]
  41ef45:	lods   al,BYTE PTR ds:[esi]
  41ef46:	push   edi
  41ef47:	jmp    0x428bd12a
  41ef4c:	push   cs
  41ef4d:	jp     0x41ef5c
  41ef4f:	icebp  
  41ef50:	pop    eax
  41ef51:	call   0x55ae:0x8667f3d
  41ef58:	jp     0x41eefa
  41ef5a:	vpmulhw ymm3,ymm2,YMMWORD PTR [eax+0x19]
  41ef5f:	inc    edx
  41ef60:	nop
  41ef61:	pop    ebx
  41ef62:	bound  ecx,QWORD PTR [eax-0x1f0da41a]
  41ef68:	inc    ebx
  41ef69:	mov    ch,0x3a
  41ef6b:	inc    esi
  41ef6c:	(bad)  
  41ef6d:	fidiv  WORD PTR [ebx]
  41ef6f:	fild   QWORD PTR [esi+0x7b299958]
  41ef75:	and    al,0x75
  41ef77:	sbb    eax,0x2d01e6b2
  41ef7c:	xchg   esp,eax
  41ef7d:	sbb    dl,BYTE PTR [edi+0x7471aac6]
  41ef83:	ja     0x41ef85
  41ef85:	xor    ah,al
  41ef87:	out    0x70,al
  41ef89:	cmp    BYTE PTR [ebx+0x69],dl
  41ef8c:	sbb    bh,BYTE PTR [ebx-0x7a]
  41ef8f:	xor    eax,0x1d29da70
  41ef94:	adc    BYTE PTR [esi-0x6941906a],0xa
  41ef9b:	cmp    al,0x1f
  41ef9e:	adc    eax,0xbe2037
  41efa3:	les    edi,FWORD PTR [edi+0x24316907]
  41efa9:	mov    cl,0x88
  41efab:	jnp    0x41efde
  41efad:	clc    
  41efae:	ds push ebp
  41efb0:	imul   edi,DWORD PTR [ecx-0x7a],0x9
  41efb4:	in     eax,0x57
  41efb6:	pop    es
  41efb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb8:	inc    esp
  41efb9:	cmp    DWORD PTR [edi+0x9],edi
  41efbc:	add    al,0xbc
  41efbe:	push   0xffffffc0
  41efc0:	nop
  41efc1:	fdiv   DWORD PTR [edi-0x154c30fe]
  41efc7:	jecxz  0x41efe3
  41efc9:	jmp    0xf12a:0x9157854b
  41efd0:	je     0x41f008
  41efd2:	inc    eax
  41efd3:	adc    ebp,DWORD PTR [edx-0x687a49d0]
  41efd9:	add    dh,BYTE PTR [edi+0x2a]
  41efdc:	jae    0x41ef83
  41efde:	je     0x41efd5
  41efe0:	or     al,0x4d
  41efe2:	or     eax,0xbbbf98dd
  41efe7:	mov    es,WORD PTR [edx+edi*8-0x34]
  41efeb:	mov    ah,0xcd
  41efed:	push   es
  41efee:	sub    eax,0xb8f7abd2
  41eff3:	or     esp,ebp
  41eff5:	out    dx,eax
  41eff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff7:	or     esp,ecx
  41eff9:	mov    bh,0xe3
  41effb:	(bad)  
  41effc:	adc    al,ah
  41effe:	ins    BYTE PTR es:[edi],dx
  41efff:	ds iret 
  41f001:	es jae 0x41f002
  41f004:	cmp    BYTE PTR [ecx],dh
  41f006:	or     edx,DWORD PTR [edi+edi*8+0x1b]
  41f00a:	adc    bl,BYTE PTR [ebx+0x1bee2fdd]
  41f010:	or     ecx,esi
  41f012:	add    ecx,DWORD PTR [edi+0x4d31f857]
  41f018:	dec    edx
  41f019:	ins    DWORD PTR es:[edi],dx
  41f01a:	cmp    ah,BYTE PTR [edx]
  41f01c:	je     0x41efc9
  41f01e:	adc    eax,0xe84fc3b2
  41f023:	inc    esi
  41f024:	fnstenv [ebp+0x0]
  41f027:	xchg   edx,eax
  41f028:	mov    WORD PTR [ecx+0x74b651db],es
  41f02e:	push   0x1d14c0f9
  41f033:	push   0x16f4f85e
  41f038:	jne    0x41f067
  41f03a:	fwait
  41f03b:	loopne 0x41f096
  41f03d:	dec    ecx
  41f03e:	mov    ebx,0xcfad5124
  41f043:	mov    esi,0x6e9c988e
  41f048:	lods   eax,DWORD PTR ds:[esi]
  41f049:	mov    ss,WORD PTR [ebx]
  41f04b:	aam    0xbc
  41f04d:	cs mov al,0xfe
  41f050:	add    bh,bl
  41f052:	mov    al,ds:0x3dc7b20a
  41f057:	mov    ebx,0x261cee46
  41f05c:	push   es
  41f05d:	and    BYTE PTR [ebx+0x8],al
  41f060:	cmp    ebx,DWORD PTR [esi-0x57]
  41f063:	cmp    DWORD PTR [ecx+0x51],eax
  41f066:	inc    ecx
  41f067:	or     DWORD PTR [ebx+esi*2-0x2a1a56ab],0x65
  41f06f:	js     0x41f0a3
  41f071:	retf   
  41f072:	inc    edi
  41f073:	out    dx,eax
  41f074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f075:	push   ecx
  41f076:	je     0x41f0b9
  41f078:	or     ebp,edx
  41f07a:	mov    esi,0xe8be1b75
  41f07f:	fdivr  QWORD PTR [ebx]
  41f081:	ins    DWORD PTR es:[edi],dx
  41f082:	adc    al,0x8c
  41f084:	jne    0x41f07a
  41f086:	xchg   esp,eax
  41f087:	pop    esp
  41f088:	push   esi
  41f089:	fbstp  TBYTE PTR [ecx]
  41f08b:	xor    ecx,DWORD PTR [ebx]
  41f08d:	push   ecx
  41f08e:	in     al,0x63
  41f090:	sub    BYTE PTR [eax+0x3],dh
  41f093:	mov    ebx,esp
  41f095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f096:	imul   ecx,DWORD PTR [edi+ecx*4+0x41],0xdba98207
  41f09e:	mov    edx,0xaf41b382
  41f0a3:	sub    ebx,DWORD PTR [esi-0x65]
  41f0a6:	xor    eax,0x49b3a3db
  41f0ab:	and    BYTE PTR [esi-0x28da3a87],al
  41f0b1:	test   edx,ecx
  41f0b3:	cmc    
  41f0b4:	mov    edx,0xd3a73f70
  41f0b9:	xchg   ebp,eax
  41f0ba:	sub    al,0x1c
  41f0bc:	jno    0x41f0fc
  41f0be:	loope  0x41f0f3
  41f0c0:	or     al,0x6f
  41f0c2:	cmp    dl,al
  41f0c4:	sub    eax,0x49a5a08c
  41f0c9:	cmp    ah,BYTE PTR [eax+0x5d2f5938]
  41f0cf:	sahf   
  41f0d0:	mov    bh,0xdd
  41f0d2:	retf   
  41f0d3:	add    eax,0x369736a4
  41f0d8:	jnp    0x41f0f2
  41f0da:	stos   DWORD PTR es:[edi],eax
  41f0db:	pusha  
  41f0dc:	fst    QWORD PTR [esi+0x355f6f0d]
  41f0e2:	ds call 0x8a7b:0x51db1df4
  41f0ea:	lds    esp,FWORD PTR ds:0x1b344f93
  41f0f0:	(bad)  
  41f0f1:	ret    0x2fde
  41f0f4:	xchg   edx,eax
  41f0f5:	and    bl,bl
  41f0f7:	dec    esi
  41f0f8:	push   ds
  41f0f9:	fdivp  st(1),st
  41f0fb:	ja     0x41f08c
  41f0fd:	cld    
  41f0fe:	mov    bl,0x31
  41f100:	cmovle edi,DWORD PTR [ebx-0x3b]
  41f104:	fcmovu st,st(0)
  41f106:	imul   eax,DWORD PTR [ebp+0x16],0xf1f81bff
  41f10d:	sbb    cl,BYTE PTR es:[edi+0x4eb2854e]
  41f114:	jecxz  0x41f0ab
  41f116:	rol    DWORD PTR [ecx+0x14830b3a],cl
  41f11c:	fmul   QWORD PTR [esi-0x2fffb05f]
  41f122:	or     al,0xf8
  41f124:	or     al,0x6b
  41f126:	add    BYTE PTR [ebp+0x1b],bl
  41f129:	mov    cl,0xa0
  41f12b:	xlat   BYTE PTR ds:[ebx]
  41f12c:	call   0x3ba:0xf1a3e01
  41f133:	jge    0x41f164
  41f135:	std    
  41f136:	ins    BYTE PTR es:[edi],dx
  41f137:	fwait
  41f138:	inc    edi
  41f139:	add    esi,DWORD PTR [ebx+ecx*2-0x71075af]
  41f140:	push   ebp
  41f141:	pop    esp
  41f142:	pop    ebp
  41f143:	xchg   ecx,eax
  41f144:	jno    0x41f16f
  41f146:	arpl   WORD PTR [esi+0x71d883aa],dx
  41f14c:	scas   eax,DWORD PTR es:[edi]
  41f14d:	call   0x1081:0xe2c04392
  41f154:	stc    
  41f155:	imul   ebp,DWORD PTR [ecx+0x35],0x5ea0ef0f
  41f15c:	shl    DWORD PTR [eax-0x265ca752],0xfe
  41f163:	bound  ebp,QWORD PTR [esi-0x73]
  41f166:	dec    esp
  41f167:	push   edi
  41f168:	ror    ebp,0xab
  41f16b:	scas   al,BYTE PTR es:[edi]
  41f16c:	jo     0x41f124
  41f16e:	pop    esp
  41f16f:	pop    edx
  41f170:	add    BYTE PTR [ecx],al
  41f172:	sbb    DWORD PTR [edi+0x27],edx
  41f175:	xlat   BYTE PTR ds:[ebx]
  41f176:	or     bh,BYTE PTR [edi]
  41f178:	in     eax,dx
  41f179:	push   es
  41f17a:	inc    eax
  41f17b:	inc    edx
  41f17c:	fistp  QWORD PTR [ecx-0x11ba79b3]
  41f182:	mov    al,0xfe
  41f184:	(bad)  
  41f186:	in     al,0xd8
  41f188:	adc    DWORD PTR [edx],edx
  41f18a:	js     0x41f11a
  41f18c:	xchg   ebp,eax
  41f18d:	sub    BYTE PTR [ecx-0xc],bl
  41f190:	xor    DWORD PTR [edx-0x40],eax
  41f193:	push   0xdaab7ccd
  41f198:	mov    ebp,0xed2987bf
  41f19d:	xchg   esp,eax
  41f19e:	or     ebx,DWORD PTR [edi]
  41f1a0:	inc    edi
  41f1a1:	cld    
  41f1a2:	out    0xb1,eax
  41f1a4:	mov    eax,ds:0xd76020d
  41f1a9:	mov    ch,0x22
  41f1ab:	inc    ebx
  41f1ac:	mov    eax,ds:0xbef30ffe
  41f1b1:	adc    eax,0x43c085f1
  41f1b6:	lea    ebp,[eax+0x6f]
  41f1b9:	out    0xf6,eax
  41f1bb:	out    0x31,al
  41f1bd:	test   edi,0x92b1e56a
  41f1c3:	iret   
  41f1c4:	jmp    0x41f180
  41f1c6:	pop    eax
  41f1c7:	add    BYTE PTR [ebp+edi*8+0x67],ch
  41f1cb:	or     edx,0xffffffda
  41f1ce:	mov    esp,0x923bfb61
  41f1d3:	aad    0xff
  41f1d5:	shr    BYTE PTR [esi],1
  41f1d7:	lods   al,BYTE PTR ds:[esi]
  41f1d8:	stc    
  41f1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1da:	outs   dx,DWORD PTR ds:[esi]
  41f1db:	or     eax,0xd4d9153b
  41f1e0:	loope  0x41f260
  41f1e2:	fisubr WORD PTR [ecx]
  41f1e4:	add    ah,ch
  41f1e6:	mov    DWORD PTR [eax+eiz*1+0x54993621],edi
  41f1ed:	prefetchnta BYTE PTR [esi-0x59c6e2d8]
  41f1f4:	ret    
  41f1f5:	popa   
  41f1f6:	push   edi
  41f1f7:	dec    esi
  41f1f8:	inc    eax
  41f1f9:	data16 lock int3 
  41f1fc:	pop    esp
  41f1fd:	and    BYTE PTR [ebp-0x331441cb],cl
  41f203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f204:	imul   esi,DWORD PTR [ebp+0x66],0x2a
  41f208:	neg    DWORD PTR [eax]
  41f20a:	ds pop ebp
  41f20c:	adc    eax,0xa45ab24
  41f211:	bound  ecx,QWORD PTR [edx+esi*8+0x72]
  41f215:	jne    0x41f1b7
  41f217:	xor    ch,BYTE PTR [ebx]
  41f219:	mov    ebp,0xa560a4c5
  41f21e:	test   BYTE PTR [ecx+ebx*8],0xc
  41f222:	in     eax,0xf7
  41f224:	stos   DWORD PTR es:[edi],eax
  41f225:	into   
  41f226:	mov    esp,0x44898308
  41f22b:	fiadd  DWORD PTR [esi+0x2163545f]
  41f231:	and    BYTE PTR [ebx],0x47
  41f234:	popa   
  41f235:	cmp    ebx,esi
  41f237:	div    DWORD PTR [eax+0x29]
  41f23a:	or     al,0x24
  41f23c:	loop   0x41f220
  41f23e:	and    eax,0x872d28f5
  41f243:	retf   
  41f244:	stos   DWORD PTR es:[edi],eax
  41f245:	and    dl,bh
  41f247:	mov    bl,0xff
  41f249:	(bad)  
  41f24a:	sub    eax,0x268db547
  41f24f:	scas   eax,DWORD PTR es:[edi]
  41f250:	arpl   WORD PTR [ebp+0x557896dc],bp
  41f256:	scas   al,BYTE PTR es:[edi]
  41f257:	xchg   DWORD PTR [eax+0x76ab33f8],ebp
  41f25d:	mov    al,0xf9
  41f25f:	adc    al,0xb2
  41f261:	(bad)  
  41f262:	out    dx,eax
  41f263:	cmp    BYTE PTR [esi+0x1b],cl
  41f266:	loope  0x41f276
  41f268:	xchg   ebp,eax
  41f269:	xchg   esi,eax
  41f26a:	into   
  41f26b:	or     DWORD PTR [ecx],edi
  41f26d:	les    ebp,FWORD PTR [edi-0x22]
  41f270:	das    
  41f271:	cld    
  41f272:	(bad)  
  41f273:	shl    BYTE PTR [ebx],1
  41f275:	push   cs
  41f276:	pop    ecx
  41f277:	into   
  41f278:	pop    ss
  41f279:	outs   dx,DWORD PTR ds:[esi]
  41f27a:	cmp    BYTE PTR [esi-0x4e],cl
  41f27d:	fs push 0x7018f221
  41f283:	ja     0x41f255
  41f285:	mov    bl,0xc5
  41f287:	shr    DWORD PTR [ecx],1
  41f289:	mov    esi,0x587f3268
  41f28e:	inc    edx
  41f28f:	push   ds
  41f290:	jnp    0x41f213
  41f292:	mov    esi,DWORD PTR [esi]
  41f294:	clc    
  41f295:	into   
  41f296:	out    0x42,eax
  41f298:	mov    edi,0xb0424fd4
  41f29d:	jnp    0x41f25a
  41f29f:	mov    esi,0xea0c4752
  41f2a4:	add    eax,0xa66eaab
  41f2a9:	xchg   edx,eax
  41f2aa:	mov    al,ds:0xcb079526
  41f2af:	stos   DWORD PTR es:[edi],eax
  41f2b0:	jnp    0x41f252
  41f2b2:	sbb    cl,al
  41f2b4:	xlat   BYTE PTR ds:[ebx]
  41f2b5:	sub    BYTE PTR [eax+0x1e85db09],ch
  41f2bb:	rcl    DWORD PTR [eax-0x6a],0x2a
  41f2bf:	mov    ds:0xc09ec982,eax
  41f2c4:	xchg   ecx,eax
  41f2c5:	out    0x74,al
  41f2c7:	pop    eax
  41f2c8:	jmp    0x415334f7
  41f2cd:	dec    eax
  41f2ce:	sub    eax,0x9c044046
  41f2d3:	xchg   edi,eax
  41f2d4:	cmp    ebp,edx
  41f2d6:	jle    0x41f2b9
  41f2d8:	aad    0xc
  41f2da:	out    dx,eax
  41f2db:	cmp    edx,ebp
  41f2dd:	int    0x51
  41f2df:	into   
  41f2e0:	and    BYTE PTR [eax],bl
  41f2e2:	test   ecx,esi
  41f2e4:	or     BYTE PTR [ecx+edi*4-0x2b05f0b2],ah
  41f2eb:	stos   BYTE PTR es:[edi],al
  41f2ec:	arpl   WORD PTR [edx],sp
  41f2ee:	mov    ?,ebx
  41f2f0:	add    bh,ah
  41f2f2:	add    bl,BYTE PTR [edi+0x33]
  41f2f5:	push   eax
  41f2f6:	out    0x1b,al
  41f2f8:	adc    ah,al
  41f2fa:	test   al,0x38
  41f2fc:	out    dx,al
  41f2fd:	mov    ds:0xfca57efb,al
  41f302:	push   es
  41f303:	ds xchg edx,eax
  41f305:	dec    ecx
  41f306:	sub    ah,ah
  41f308:	repz and ch,dh
  41f30b:	sbb    DWORD PTR [esi],0x2f
  41f30e:	sbb    BYTE PTR [edx+ebp*4-0x1b18f1e7],ah
  41f315:	fwait
  41f316:	sbb    edi,ecx
  41f318:	aaa    
  41f319:	call   0xaf0:0x16726d14
  41f320:	je     0x41f35a
  41f322:	or     ebp,esp
  41f324:	mov    dh,0x92
  41f326:	call   0x762eb180
  41f32b:	sub    al,0x6d
  41f32d:	shl    ah,1
  41f32f:	aas    
  41f330:	mov    ebp,0x175a79d5
  41f335:	mov    dh,0x8
  41f337:	xlat   BYTE PTR ds:[ebx]
  41f338:	ja     0x41f3af
  41f33a:	push   0xffffff95
  41f33c:	jg     0x41f2e2
  41f33e:	dec    ecx
  41f33f:	and    bl,BYTE PTR [eax-0x39]
  41f342:	push   ebp
  41f343:	jne    0x41f35c
  41f345:	add    al,0xf0
  41f347:	gs push ebx
  41f349:	pushf  
  41f34a:	cmp    ah,BYTE PTR [ebx-0x1e]
  41f34d:	lods   al,BYTE PTR ds:[esi]
  41f34e:	add    dh,BYTE PTR [ecx-0x76]
  41f351:	push   cs
  41f352:	ins    DWORD PTR es:[edi],dx
  41f353:	sahf   
  41f354:	(bad)  
  41f355:	jne    0x41f34d
  41f357:	fidiv  DWORD PTR [esi-0x4af7040c]
  41f35d:	pop    edi
  41f35e:	push   0xfffffffb
  41f360:	lods   al,BYTE PTR ds:[esi]
  41f361:	inc    ebx
  41f362:	stos   BYTE PTR es:[edi],al
  41f363:	mov    ds:0xea1395f2,eax
  41f368:	nop
  41f369:	mov    edx,gs
  41f36b:	(bad)  
  41f36d:	iret   
  41f36e:	mov    ds:0x4ddec9f4,eax
  41f373:	jno    0x41f3ca
  41f375:	cld    
  41f376:	mov    WORD PTR [eax+edx*1],ss
  41f379:	imul   ecx,ebx,0x71
  41f37c:	loopne 0x41f3db
  41f37e:	cwde   
  41f37f:	and    ebp,DWORD PTR [esi-0x4e]
  41f382:	mov    ds:0xb445082b,al
  41f387:	leave  
  41f388:	dec    eax
  41f389:	xor    eax,0x63e86760
  41f38e:	into   
  41f38f:	push   edx
  41f390:	in     eax,0x6f
  41f392:	cli    
  41f393:	adc    al,0xe1
  41f395:	xchg   DWORD PTR [ebp-0x60],ebp
  41f398:	jl     0x41f326
  41f39a:	xor    esp,DWORD PTR [ebp+0x3f]
  41f39d:	call   0x87f0410e
  41f3a2:	jecxz  0x41f3a4
  41f3a4:	fmul   st(5),st
  41f3a6:	push   ds
  41f3a7:	cmp    al,0xe0
  41f3a9:	adc    DWORD PTR [esi-0x56],edi
  41f3ac:	lea    ecx,[ebx-0x31135c65]
  41f3b2:	div    BYTE PTR [edi+ebx*4+0x38]
  41f3b6:	aad    0x77
  41f3b8:	mov    ecx,0x85185c0e
  41f3bd:	jl     0x41f3f1
  41f3bf:	xlat   BYTE PTR ds:[ebx]
  41f3c0:	mov    edx,0x882ec485
  41f3c5:	add    eax,0x2cbfe9d0
  41f3ca:	jne    0x41f3de
  41f3cc:	xor    eax,0x74df1662
  41f3d1:	je     0x41f37b
  41f3d3:	pusha  
  41f3d4:	add    edi,DWORD PTR [ebx+ecx*8-0x464bb817]
  41f3db:	in     eax,dx
  41f3dc:	add    ah,BYTE PTR [esi+0xe01cb4d]
  41f3e2:	retf   0xb93c
  41f3e5:	push   es
  41f3e6:	dec    ecx
  41f3e7:	or     BYTE PTR [ebx-0x7c],bl
  41f3ea:	das    
  41f3eb:	stos   DWORD PTR es:[edi],eax
  41f3ec:	jne    0x41f418
  41f3ee:	sahf   
  41f3ef:	mov    ebp,0x70664e1e
  41f3f4:	pop    ss
  41f3f5:	sub    eax,0xaa330032
  41f3fa:	ret    
  41f3fb:	clc    
  41f3fc:	lahf   
  41f3fd:	and    dl,BYTE PTR [ebx-0x79]
  41f400:	retf   0x2dcd
  41f403:	add    eax,0x987fae29
  41f408:	shl    bh,0x1
  41f40b:	icebp  
  41f40c:	popf   
  41f40d:	sar    DWORD PTR [ecx-0x242b7af5],0x45
  41f414:	rcl    DWORD PTR [ebx+0x28621911],cl
  41f41a:	aaa    
  41f41b:	imul   ebp,DWORD PTR [ebx],0xffffff82
  41f41e:	pop    ds
  41f41f:	dec    eax
  41f420:	div    edi
  41f422:	mov    cl,0x59
  41f424:	std    
  41f425:	nop
  41f426:	repz mov al,0xa5
  41f429:	je     0x41f465
  41f42b:	inc    edx
  41f42c:	arpl   WORD PTR ds:0x8d064ccb,si
  41f432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f433:	xor    cl,ah
  41f435:	(bad)  
  41f436:	sti    
  41f437:	jmp    0x41f408
  41f439:	or     edx,DWORD PTR [edi*4-0x6299132b]
  41f440:	add    BYTE PTR [ebx+0x3b],0xee
  41f444:	mov    ch,0x42
  41f446:	or     ebx,DWORD PTR [eax+0x13]
  41f449:	jae    0x41f3d0
  41f44b:	rcr    BYTE PTR [ebp+0x5d],0xd3
  41f44f:	pop    ds
  41f450:	pop    edi
  41f451:	stos   BYTE PTR es:[edi],al
  41f452:	sbb    al,0xf4
  41f454:	js     0x41f43b
  41f456:	and    ebp,DWORD PTR [ebx+0x38e0c7b5]
  41f45c:	mov    ds:0x70dee992,eax
  41f461:	sar    bl,cl
  41f463:	pop    eax
  41f464:	xchg   ecx,eax
  41f465:	lea    edx,[ecx-0x44198b67]
  41f46b:	fst    QWORD PTR [ebp+0x4738f67a]
  41f471:	out    dx,al
  41f472:	inc    ebp
  41f473:	add    BYTE PTR [ecx],ah
  41f475:	shl    BYTE PTR [edx-0x4b43e0f8],0x3d
  41f47c:	jae    0x41f471
  41f47e:	(bad)  
  41f47f:	imul   ecx,DWORD PTR [eax],0x89279f27
  41f485:	and    edi,DWORD PTR [edi-0x1]
  41f488:	aad    0x76
  41f48a:	pop    esp
  41f48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48c:	test   BYTE PTR [ecx],cl
  41f48e:	les    ebp,FWORD PTR [ebp+0x18]
  41f491:	and    eax,0x8fc504b1
  41f496:	push   ds
  41f497:	call   0x9afe:0xb28f906d
  41f49e:	cmp    eax,0x3c9ec075
  41f4a3:	test   BYTE PTR [edi+0x1e],cl
  41f4a6:	(bad)  
  41f4a7:	mov    ds:0x33784dcd,al
  41f4ac:	jg     0x41f508
  41f4ae:	mov    edi,0x2ceb57bb
  41f4b3:	dec    eax
  41f4b4:	es push ss
  41f4b6:	cmp    DWORD PTR [edx+ecx*1],esi
  41f4b9:	addr16 sub eax,0x4dbe7225
  41f4bf:	stos   DWORD PTR es:[edi],eax
  41f4c0:	mov    al,cl
  41f4c2:	mov    ebp,0x6a5de41b
  41f4c7:	lea    esi,[ecx]
  41f4c9:	shl    DWORD PTR [esi+0x3b3261e6],1
  41f4cf:	mov    cl,0xdc
  41f4d1:	xchg   esi,eax
  41f4d2:	or     DWORD PTR [edx-0x16],ecx
  41f4d5:	mov    edx,0x67b1be83
  41f4da:	adc    esp,ebp
  41f4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4dd:	cmp    al,dh
  41f4df:	das    
  41f4e0:	adc    al,0x7
  41f4e2:	arpl   WORD PTR [esi-0x3228749c],dx
  41f4e8:	mov    esi,0xfc82169a
  41f4ed:	mov    ebx,0x4d1da281
  41f4f2:	pop    eax
  41f4f3:	mov    esp,eax
  41f4f5:	cmp    eax,0x85295700
  41f4fa:	push   dx
  41f4fc:	inc    ecx
  41f4fd:	ror    BYTE PTR [esi],1
  41f4ff:	mov    eax,ds:0x3aa1b90e
  41f504:	mov    edi,0x52f40e34
  41f509:	xor    al,BYTE PTR [eax-0x61]
  41f50c:	fnstsw WORD PTR [esi+0x4a]
  41f50f:	and    BYTE PTR [eax],dl
  41f511:	xor    eax,0xba27dc49
  41f516:	and    ebp,DWORD PTR [edi-0x54f3aeb7]
  41f51c:	or     esi,DWORD PTR [ecx]
  41f51e:	data16 jae 0x41f4f0
  41f521:	das    
  41f522:	xchg   ebx,eax
  41f523:	(bad)  
  41f524:	push   ebx
  41f525:	cmp    ebx,DWORD PTR [edx-0x4e]
  41f528:	pop    DWORD PTR [edx+0x3a33bdd1]
  41f52e:	mov    cl,0xf5
  41f530:	push   ds
  41f531:	adc    ah,BYTE PTR [eax]
  41f533:	aaa    
  41f534:	push   ds
  41f535:	ret    0x97e5
  41f538:	cwde   
  41f539:	into   
  41f53a:	dec    esi
  41f53b:	leave  
  41f53c:	lods   al,BYTE PTR ds:[esi]
  41f53d:	xor    al,0x63
  41f53f:	or     eax,0x6a7e45a5
  41f544:	popf   
  41f545:	stos   BYTE PTR es:[edi],al
  41f546:	scas   al,BYTE PTR es:[edi]
  41f547:	loopne 0x41f5bd
  41f549:	adc    ch,BYTE PTR [esi-0x4f]
  41f54c:	sbb    BYTE PTR [eax],ch
  41f54e:	mov    esp,0x584ac99b
  41f553:	aam    0x68
  41f555:	pop    ds
  41f556:	enter  0xf2d6,0x26
  41f55a:	and    edi,DWORD PTR [edx]
  41f55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55d:	and    BYTE PTR es:[ecx-0x7],al
  41f561:	out    0x70,eax
  41f563:	push   0x20
  41f565:	lea    ebx,[ebp+0x22]
  41f568:	sahf   
  41f569:	pop    esi
  41f56a:	(bad)  
  41f56b:	mov    cs,WORD PTR [ebp+0x22]
  41f56e:	add    eax,0x688ced0e
  41f573:	xor    DWORD PTR [edi-0x504d567a],ecx
  41f579:	mov    DWORD PTR [ebx+ebx*2],edi
  41f57c:	pop    ss
  41f57d:	scas   eax,DWORD PTR es:[edi]
  41f57e:	sbb    ebp,ecx
  41f580:	mov    ds:0x5b8b1c9b,al
  41f585:	test   DWORD PTR [edx],eax
  41f587:	adc    BYTE PTR [eax-0x67e78a5a],bl
  41f58d:	add    DWORD PTR [ebx-0x63aca61f],eax
  41f593:	scas   al,BYTE PTR es:[edi]
  41f594:	call   0xb6993f64
  41f599:	mov    dl,0xdc
  41f59b:	inc    eax
  41f59c:	pop    edi
  41f59d:	shl    BYTE PTR [edi+esi*8+0x7a],0xe7
  41f5a2:	iret   
  41f5a3:	jmp    0x41f5c6
  41f5a5:	repz pop edx
  41f5a7:	mov    edi,DWORD PTR [edi-0x2b69db03]
  41f5ad:	dec    eax
  41f5ae:	and    al,0xf8
  41f5b0:	xchg   edx,eax
  41f5b1:	xor    ch,BYTE PTR [ebx+0x3801de86]
  41f5b7:	clc    
  41f5b8:	daa    
  41f5b9:	(bad)  
  41f5ba:	shr    ebx,1
  41f5bc:	(bad)  [ebp-0x40]
  41f5bf:	popa   
  41f5c0:	cmp    al,0x10
  41f5c2:	aam    0xf8
  41f5c4:	mov    eax,0xbb363d3d
  41f5c9:	mov    DWORD PTR [ebx+0x27],esp
  41f5cc:	ret    0x1a29
  41f5cf:	(bad)  
  41f5d0:	(bad)  
  41f5d1:	push   0x78937fe2
  41f5d6:	mov    bh,0xda
  41f5d8:	daa    
  41f5d9:	sub    al,0x49
  41f5db:	ins    BYTE PTR es:[edi],dx
  41f5dc:	mov    edi,0x1504fa15
  41f5e1:	mov    esi,ecx
  41f5e3:	stos   DWORD PTR es:[edi],eax
  41f5e4:	adc    DWORD PTR [esi-0x6ff7a2c4],ecx
  41f5ea:	imul   esp,ebx,0xffffffc5
  41f5ed:	xchg   ebp,eax
  41f5ee:	inc    ebp
  41f5ef:	inc    esi
  41f5f0:	or     al,0xa4
  41f5f2:	mov    BYTE PTR [esi+0x25],cl
  41f5f5:	retf   0x14d1
  41f5f8:	in     al,dx
  41f5f9:	mov    esi,0xbd421c2f
  41f5fe:	xchg   edx,eax
  41f5ff:	in     al,dx
  41f600:	fstp   TBYTE PTR [edx+0x6f6cbd7e]
  41f606:	inc    edx
  41f607:	xor    DWORD PTR [ebx-0x9f08f3b],edx
  41f60d:	scas   eax,DWORD PTR es:[edi]
  41f60e:	mov    edx,0xdf06b39
  41f613:	sbb    BYTE PTR [eax+0x221b0613],bh
  41f619:	inc    edx
  41f61a:	inc    eax
  41f61b:	hlt    
  41f61c:	sbb    BYTE PTR ds:0xe084047c,0x86
  41f623:	xlat   BYTE PTR ds:[ebx]
  41f624:	mov    al,0x36
  41f626:	jg     0x41f5ff
  41f628:	or     DWORD PTR [ebx-0x6b72819f],eax
  41f62e:	sub    DWORD PTR [edx],0xb5b42546
  41f634:	sub    eax,0xd3b22b3a
  41f639:	(bad)  
  41f63a:	jnp    0x41f6af
  41f63c:	stos   BYTE PTR es:[edi],al
  41f63d:	mov    cl,0xa7
  41f63f:	jg     0x41f66e
  41f641:	push   ds
  41f642:	rcl    dh,cl
  41f644:	adc    DWORD PTR [esi+0xb],eax
  41f647:	sub    BYTE PTR [edi],dl
  41f649:	jno    0x41f633
  41f64b:	ret    
  41f64c:	dec    ebx
  41f64d:	jnp    0x41f6aa
  41f64f:	jmp    0xe73e5247
  41f654:	adc    eax,0x3d9bebbe
  41f659:	call   0x9c60:0xcb4f20d4
  41f660:	mov    cl,0x6b
  41f662:	sub    ecx,DWORD PTR [ebp+0x2b]
  41f665:	ins    BYTE PTR es:[edi],dx
  41f666:	dec    ebp
  41f667:	pop    esp
  41f668:	mov    gs,WORD PTR [ebx]
  41f66a:	out    dx,eax
  41f66b:	das    
  41f66c:	leave  
  41f66d:	xchg   DWORD PTR ds:0x632f2d16,edx
  41f673:	fdiv   QWORD PTR [eax]
  41f675:	fsubr  DWORD PTR [ebx+0x4b]
  41f678:	dec    eax
  41f679:	push   cs
  41f67a:	cmp    eax,0xbef04910
  41f67f:	shl    BYTE PTR [edx+edx*2-0x273878ce],1
  41f686:	push   esi
  41f687:	aaa    
  41f688:	mov    al,ds:0x834c26b1
  41f68d:	mov    ah,0x81
  41f68f:	popf   
  41f690:	xchg   ecx,eax
  41f691:	push   es
  41f692:	das    
  41f693:	ja     0x41f705
  41f695:	imul   ebx,ebp,0x181da30f
  41f69b:	ret    
  41f69c:	cli    
  41f69d:	mov    edi,0xf98aa27e
  41f6a2:	repnz cmp eax,0x9b47eaf6
  41f6a8:	inc    esi
  41f6a9:	pop    DWORD PTR [edx-0xc]
  41f6ac:	pop    esp
  41f6ad:	call   0xf980:0x7fb8506f
  41f6b4:	jno    0x41f65a
  41f6b6:	mov    ds:0xc7302f74,al
  41f6bb:	test   DWORD PTR [ecx+0x33],ebx
  41f6be:	mov    ds:0xd239d3bb,al
  41f6c3:	mov    dl,BYTE PTR [edi+0x664999b7]
  41f6c9:	cli    
  41f6ca:	push   cs
  41f6cb:	cdq    
  41f6cc:	retf   0x6278
  41f6cf:	out    0xa3,al
  41f6d1:	loop   0x41f6b4
  41f6d3:	jg     0x41f736
  41f6d5:	ins    DWORD PTR es:[edi],dx
  41f6d6:	xchg   edi,eax
  41f6d7:	icebp  
  41f6d8:	cs fs mov bh,0xcf
  41f6dc:	pop    ecx
  41f6dd:	dec    eax
  41f6de:	sbb    eax,DWORD PTR [edi-0x29538995]
  41f6e4:	je     0x41f671
  41f6e6:	jp     0x41f71e
  41f6e8:	cs pop ebx
  41f6ea:	rcl    DWORD PTR [esi+0x7e2a1ff3],0xd8
  41f6f1:	xor    ecx,DWORD PTR [eax+0x4b]
  41f6f4:	(bad)  
  41f6f5:	aam    0x7e
  41f6f7:	adc    BYTE PTR [ecx],bh
  41f6f9:	fs mov ch,0xa1
  41f6fc:	sub    dh,BYTE PTR [edx+0x61]
  41f6ff:	mov    ebp,ecx
  41f701:	cwde   
  41f702:	jmp    0x92288525
  41f707:	jg     0x41f6fa
  41f709:	mov    WORD PTR [edx],fs
  41f70b:	mov    dl,0xc
  41f70d:	jg     0x41f6f7
  41f70f:	adc    DWORD PTR [eax+0x5ff60da7],ebp
  41f715:	mov    dh,0xbd
  41f717:	jb     0x41f783
  41f719:	mov    ss,WORD PTR [ebx+0x594fcbdd]
  41f71f:	pop    esi
  41f720:	dec    ebp
  41f721:	xor    BYTE PTR [ebx+0x14],dl
  41f724:	and    BYTE PTR [edi+0x4116c474],dh
  41f72a:	push   cs
  41f72b:	dec    ebx
  41f72c:	outs   dx,BYTE PTR ds:[esi]
  41f72d:	mov    ch,0x73
  41f72f:	int3   
  41f730:	jb     0x41f782
  41f732:	and    ah,ah
  41f734:	push   eax
  41f735:	sbb    al,0x8e
  41f737:	push   cs
  41f738:	leave  
  41f739:	mov    BYTE PTR [ecx+0x42f7e82f],ch
  41f73f:	lods   eax,DWORD PTR ds:[esi]
  41f740:	mov    al,ds:0xa86cdf7a
  41f745:	cmp    BYTE PTR [ecx+0x677b9766],0xb2
  41f74c:	jmp    0x5e88e8a8
  41f751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f752:	jg     0x41f6fd
  41f754:	dec    eax
  41f755:	(bad)  
  41f756:	jno    0x41f710
  41f758:	cwde   
  41f759:	out    dx,al
  41f75a:	fs adc al,0x10
  41f75d:	cmp    DWORD PTR [esi-0x30],esp
  41f760:	stc    
  41f761:	xchg   edx,eax
  41f762:	xchg   DWORD PTR [esi+eiz*2-0x2a0240a4],edi
  41f769:	inc    ebx
  41f76a:	sbb    al,0x78
  41f76c:	ficom  WORD PTR [ebx+0x4c]
  41f76f:	push   esi
  41f770:	pop    edx
  41f771:	lds    esp,FWORD PTR [edx+0x37]
  41f774:	add    BYTE PTR [esi-0x23],dl
  41f777:	sub    al,0xea
  41f779:	outs   dx,BYTE PTR ds:[esi]
  41f77a:	push   0x9e74343
  41f77f:	mov    edi,0xb2c1074f
  41f784:	mov    esi,ebp
  41f786:	sub    BYTE PTR [esi+0x1b],ch
  41f789:	dec    esi
  41f78a:	stos   BYTE PTR es:[edi],al
  41f78b:	jb     0x41f7c1
  41f78d:	sub    ebp,DWORD PTR [esi+0x6e]
  41f790:	mov    eax,0xa9a5e567
  41f795:	(bad)  
  41f796:	mov    cl,0xf9
  41f798:	mov    edx,0x8592da2f
  41f79d:	repnz xchg edx,eax
  41f79f:	das    
  41f7a0:	adc    BYTE PTR [ecx+0x47445adb],ah
  41f7a6:	lock sub al,0x7d
  41f7a9:	pushf  
  41f7aa:	pushf  
  41f7ab:	inc    bl
  41f7ad:	test   al,0x83
  41f7af:	sti    
  41f7b0:	dec    BYTE PTR [edx-0x7dc0c101]
  41f7b6:	and    DWORD PTR [ecx-0x5],0xffffffa6
  41f7ba:	cmp    DWORD PTR [edi+0x42],ebp
  41f7bd:	call   0x89a8:0x2474607
  41f7c4:	ds xchg ecx,eax
  41f7c6:	mov    ah,0xcd
  41f7c8:	or     al,0x75
  41f7ca:	xor    bh,bl
  41f7cc:	call   0x4e4:0x6f9ca8cd
  41f7d3:	out    dx,al
  41f7d4:	dec    edx
  41f7d5:	xor    esi,0x12cccad2
  41f7db:	sahf   
  41f7dc:	jns    0x41f7cf
  41f7de:	and    DWORD PTR [ecx-0x3c158b07],0x55
  41f7e5:	ins    DWORD PTR es:[edi],dx
  41f7e6:	mov    ecx,0x5b241afd
  41f7eb:	int    0xa7
  41f7ed:	ds fs fwait
  41f7f0:	aas    
  41f7f1:	jmp    0xe2d4:0xeef35d91
  41f7f8:	add    cl,BYTE PTR [ecx+0x172c3b60]
  41f7fe:	adc    BYTE PTR [ecx],cl
  41f800:	add    edx,0x12384692
  41f806:	fidiv  WORD PTR ds:0x1feeba5c
  41f80c:	loop   0x41f810
  41f80e:	adc    ebp,DWORD PTR [ebp+0x580f7db7]
  41f814:	xchg   ebx,eax
  41f815:	jl     0x41f7e7
  41f817:	sub    DWORD PTR [ecx+0x1141b642],esi
  41f81d:	xchg   dl,ah
  41f81f:	cdq    
  41f820:	loope  0x41f7d2
  41f822:	xor    al,BYTE PTR [ebx]
  41f824:	je     0x41f7cc
  41f826:	aad    0xf8
  41f828:	and    DWORD PTR [edx+0x3b5346bd],eax
  41f82e:	lahf   
  41f82f:	xor    eax,0x931c7222
  41f834:	mov    ah,0xe6
  41f836:	inc    ebx
  41f837:	mov    gs,WORD PTR [edx]
  41f839:	loopne 0x41f7bf
  41f83b:	(bad)  
  41f83c:	cmp    al,0xdf
  41f83e:	push   0xffffffc4
  41f840:	jecxz  0x41f83e
  41f842:	ror    DWORD PTR [esi+0x611b3527],0xd7
  41f849:	dec    ebx
  41f84a:	ja     0x41f813
  41f84c:	adc    eax,0xaf420a57
  41f851:	mov    fs,edx
  41f853:	inc    eax
  41f854:	sub    DWORD PTR [edx-0x275f20b4],ecx
  41f85a:	ds int 0x9f
  41f85d:	ins    DWORD PTR es:[edi],dx
  41f85e:	xchg   esp,eax
  41f85f:	ins    DWORD PTR es:[edi],dx
  41f860:	test   BYTE PTR [eax+eiz*4-0x46],dh
  41f864:	xchg   DWORD PTR [esi],esp
  41f866:	retf   0x7e60
  41f869:	dec    edx
  41f86a:	xor    dh,BYTE PTR [eax+ebx*8-0x5bf9e78f]
  41f871:	mov    al,0xb9
  41f873:	aaa    
  41f874:	mov    esi,0xf706a6c0
  41f879:	mov    ah,0xf8
  41f87b:	pop    edx
  41f87c:	fmul   QWORD PTR [edi+esi*1-0x6]
  41f880:	addr16 into 
  41f882:	dec    edx
  41f883:	(bad)  
  41f884:	clc    
  41f885:	stos   BYTE PTR es:[edi],al
  41f886:	mov    WORD PTR [ebx],gs
  41f888:	mov    WORD PTR [edi+0x73405153],?
  41f88e:	xchg   edi,eax
  41f88f:	mov    al,0x8c
  41f891:	mov    eax,0x5998bd23
  41f896:	sbb    bh,0xf0
  41f899:	fwait
  41f89a:	sub    ebx,eax
  41f89c:	test   al,0x76
  41f89e:	xchg   BYTE PTR [edi+eax*2-0x45e0c90c],al
  41f8a5:	js     0x41f84d
  41f8a7:	inc    ebp
  41f8a8:	adc    DWORD PTR [esi-0x290ef9d5],0x39
  41f8af:	xchg   esi,eax
  41f8b0:	es or  eax,0xf0f21d59
  41f8b6:	nop
  41f8b7:	sbb    esi,DWORD PTR [eax+esi*1-0x2f77b0bb]
  41f8be:	cmp    BYTE PTR ds:[ecx-0x74],dh
  41f8c2:	call   0x98b0632c
  41f8c7:	cmp    dl,bl
  41f8c9:	add    eax,DWORD PTR ds:0xa6a5145
  41f8cf:	shr    bl,0xd6
  41f8d2:	adc    DWORD PTR [eax],ebp
  41f8d4:	fs fwait
  41f8d6:	(bad)  
  41f8d7:	push   0xb0e83eb2
  41f8dc:	loope  0x41f87a
  41f8de:	icebp  
  41f8df:	dec    edx
  41f8e0:	int3   
  41f8e1:	push   esp
  41f8e2:	imul   edi,DWORD PTR [esi-0x5ff69947],0x8
  41f8e9:	or     eax,0xb873090c
  41f8ee:	es inc edi
  41f8f0:	scas   eax,DWORD PTR es:[edi]
  41f8f1:	fs in  eax,dx
  41f8f3:	sbb    edi,DWORD PTR [ebx+esi*8-0x67]
  41f8f7:	sbb    ch,bh
  41f8f9:	add    ecx,DWORD PTR [edx-0x10]
  41f8fc:	xchg   esp,eax
  41f8fd:	ins    BYTE PTR es:[edi],dx
  41f8fe:	mov    edi,ecx
  41f900:	jecxz  0x41f8f2
  41f902:	mov    bl,0x40
  41f904:	xor    al,0x14
  41f906:	adc    eax,0xaae193e0
  41f90b:	cmp    eax,0x9cec7895
  41f910:	pop    ss
  41f911:	push   ecx
  41f912:	push   ecx
  41f913:	push   0x7
  41f915:	xor    ecx,ebx
  41f917:	cmp    al,0x5f
  41f919:	dec    ecx
  41f91a:	rol    ebx,0x48
  41f91d:	in     al,0x7
  41f91f:	and    al,0xe2
  41f921:	xlat   BYTE PTR ds:[ebx]
  41f922:	ficomp WORD PTR [esi]
  41f924:	punpckldq mm6,DWORD PTR [eax+0x6362fddb]
  41f92b:	enter  0x360f,0x23
  41f92f:	cs and DWORD PTR gs:[eax-0x594d6c34],edi
  41f937:	ss ja  0x41f9a1
  41f93a:	adc    ebp,DWORD PTR [ebx+0x3cc671ac]
  41f940:	add    DWORD PTR [esi],ecx
  41f942:	sub    al,0xdf
  41f944:	jp     0x41f8dc
  41f946:	push   0x78f59d88
  41f94b:	mov    BYTE PTR [ecx-0x2d94f538],ch
  41f951:	add    edx,ebp
  41f953:	mov    ebx,edi
  41f955:	xchg   edx,eax
  41f956:	inc    eax
  41f957:	aam    0x32
  41f959:	inc    ecx
  41f95a:	std    
  41f95b:	add    DWORD PTR [edx-0x53],edx
  41f95e:	and    ch,BYTE PTR [ebx]
  41f960:	mov    al,0xe2
  41f962:	outs   dx,DWORD PTR ds:[esi]
  41f963:	test   al,0xf2
  41f965:	mov    edi,edx
  41f967:	bound  esi,QWORD PTR [esi+0x32]
  41f96a:	sbb    BYTE PTR [ecx+0x20],0x5e
  41f96e:	sar    DWORD PTR [ecx-0x14],0xb
  41f972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f973:	pop    es
  41f974:	loopne 0x41f90c
  41f976:	in     eax,0xd1
  41f978:	xor    cl,BYTE PTR [esp+edx*1]
  41f97b:	pop    edx
  41f97d:	not    BYTE PTR [ebp+0x2b]
  41f980:	sub    eax,0x1cb2068
  41f985:	xor    esi,esp
  41f987:	or     DWORD PTR [edi+ecx*8+0x6],0xf
  41f98c:	cli    
  41f98d:	cwde   
  41f98e:	and    ebx,ebx
  41f990:	pop    es
  41f991:	jbe    0x41fa0b
  41f993:	out    0x20,eax
  41f995:	sbb    al,0x6a
  41f997:	mov    dl,BYTE PTR [eax]
  41f999:	push   ebx
  41f99a:	call   0x834dec7a
  41f99f:	jp     0x41f963
  41f9a1:	jl     0x41f986
  41f9a3:	xor    bh,BYTE PTR [esi+0x22b941e6]
  41f9a9:	xchg   esi,eax
  41f9aa:	repnz into 
  41f9ac:	ja     0x41f9f1
  41f9ae:	mov    ds:0xadc1d992,al
  41f9b3:	jmp    FWORD PTR ds:0x510b334f
  41f9b9:	inc    esi
  41f9ba:	inc    esp
  41f9bb:	xlat   BYTE PTR ss:[ebx]
  41f9bd:	jmp    0x41f94d
  41f9bf:	sbb    BYTE PTR [edi-0x3d],dh
  41f9c2:	es jbe 0x41fa1e
  41f9c5:	pop    ebp
  41f9c6:	or     edi,esi
  41f9c8:	push   edi
  41f9c9:	cpuid  
  41f9cb:	xchg   esi,eax
  41f9cc:	push   esp
  41f9cd:	xor    edx,ebp
  41f9cf:	jle    0x41f9b1
  41f9d1:	fwait
  41f9d2:	je     0x41fa10
  41f9d4:	xor    DWORD PTR [ebx-0x5cc30124],ebp
  41f9da:	mov    ds:0xccfc804b,al
  41f9df:	lea    ebx,[eax]
  41f9e1:	or     BYTE PTR [ecx+esi*1],dl
  41f9e4:	inc    eax
  41f9e5:	inc    esp
  41f9e6:	sub    DWORD PTR ds:0xf15bac14,0xffffffb4
  41f9ed:	jg     0x41f970
  41f9ef:	xchg   esi,eax
  41f9f0:	jl     0x41f9f9
  41f9f2:	cmp    dh,BYTE PTR [ebx]
  41f9f4:	fucomp st(1)
  41f9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f7:	jg     0x41f9bb
  41f9f9:	pop    ebx
  41f9fa:	adc    DWORD PTR [ebp-0x3e],edx
  41f9fd:	mov    ch,0x39
  41f9ff:	out    dx,al
  41fa00:	shl    BYTE PTR [edx-0x685d18d2],1
  41fa06:	outs   dx,DWORD PTR ds:[esi]
  41fa07:	add    BYTE PTR [eax-0x22],ch
  41fa0a:	sbb    DWORD PTR [edx+0x53026594],edx
  41fa10:	pop    es
  41fa11:	(bad)  
  41fa12:	xchg   BYTE PTR [ebx],ah
  41fa14:	push   edi
  41fa15:	jmp    0x74bde2c2
  41fa1a:	add    DWORD PTR [ebp+0x12ce57e8],ebx
  41fa20:	in     al,dx
  41fa21:	sub    edi,DWORD PTR [eax]
  41fa23:	push   esi
  41fa24:	ficomp WORD PTR [ebx-0x7ea315cb]
  41fa2a:	jns    0x41f9ef
  41fa2c:	sbb    al,0x2f
  41fa2e:	and    eax,0x83416129
  41fa33:	lods   al,BYTE PTR ds:[esi]
  41fa34:	adc    eax,0x43b4b03e
  41fa39:	or     DWORD PTR [edx-0x6114c881],esi
  41fa3f:	dec    edi
  41fa40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa41:	mov    ch,0x1d
  41fa43:	inc    edi
  41fa44:	mov    ds:0x319b7983,al
  41fa49:	dec    edx
  41fa4a:	js     0x41fa90
  41fa4c:	bound  esp,QWORD PTR [ebp+0x3c]
  41fa4f:	xchg   BYTE PTR [ebx+0x16],bl
  41fa52:	push   ebp
  41fa53:	loopne 0x41fa08
  41fa55:	js     0x41fa75
  41fa57:	push   ecx
  41fa58:	jl     0x41fa8f
  41fa5a:	rcl    BYTE PTR [esi-0x6fd0853],0x37
  41fa61:	(bad)  
  41fa62:	mov    ds:0xce2f5e90,al
  41fa67:	xor    BYTE PTR [ebx-0x4d],al
  41fa6a:	daa    
  41fa6b:	outs   dx,BYTE PTR ds:[esi]
  41fa6c:	push   es
  41fa6d:	inc    esi
  41fa6e:	lods   eax,DWORD PTR ds:[esi]
  41fa6f:	xor    al,0x84
  41fa71:	or     al,0x95
  41fa73:	sar    DWORD PTR [esi-0x5d],cl
  41fa76:	adc    eax,0xdd089e58
  41fa7b:	mov    gs,WORD PTR [esp+ebp*4+0x70]
  41fa7f:	xor    al,0x6c
  41fa81:	sbb    DWORD PTR [edi+0x69],edi
  41fa84:	mov    eax,ds:0x150ddebf
  41fa89:	xchg   edx,eax
  41fa8a:	into   
  41fa8b:	push   esp
  41fa8c:	(bad)  
  41fa8d:	ins    BYTE PTR es:[edi],dx
  41fa8e:	call   0xe066:0xc13b3736
  41fa95:	sub    edi,esi
  41fa97:	sbb    eax,0xe1e53224
  41fa9c:	add    esp,esp
  41fa9e:	inc    esi
  41fa9f:	in     eax,0x8f
  41faa1:	xchg   edx,eax
  41faa2:	mov    cs,WORD PTR [esi]
  41faa4:	test   eax,0xfdf53837
  41faa9:	mov    eax,eax
  41faab:	adc    bh,BYTE PTR [edi+0x24edaaaf]
  41fab1:	(bad)  
  41fab2:	scas   eax,DWORD PTR es:[edi]
  41fab3:	mov    eax,0xb20027e9
  41fab8:	dec    ebp
  41fab9:	adc    al,BYTE PTR [ebx+0x2a]
  41fabc:	daa    
  41fabd:	imul   esi,DWORD PTR [eax],0x570d1e89
  41fac3:	inc    edi
  41fac4:	idiv   BYTE PTR ds:[ecx]
  41fac7:	das    
  41fac8:	in     al,0xa5
  41faca:	inc    ebx
  41facb:	jg     0x41fb2d
  41facd:	(bad)  
  41face:	ss push es
  41fad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad1:	repnz pushf 
  41fad3:	xor    BYTE PTR [edi-0x5a6eeb68],bl
  41fad9:	and    al,BYTE PTR [esi+0x7828fa18]
  41fadf:	add    eax,0xda2fc9b1
  41fae4:	xchg   esi,eax
  41fae5:	and    eax,0x5a33c1b6
  41faea:	test   DWORD PTR [ebp+0x33],0xd7868250
  41faf1:	enter  0x3935,0x44
  41faf5:	dec    ebx
  41faf6:	lock add DWORD PTR [edx-0x80],ecx
  41fafa:	retf   
  41fafb:	dec    ebx
  41fafc:	add    al,0xc5
  41fafe:	sub    eax,0x8e56aa01
  41fb03:	inc    edi
  41fb04:	adc    BYTE PTR [ebp-0x12ad9e21],0x8
  41fb0b:	clc    
  41fb0c:	jge    0x41fb2a
  41fb0e:	xchg   ebx,eax
  41fb0f:	and    DWORD PTR [esi+0x5d],ebx
  41fb12:	outs   dx,BYTE PTR ds:[esi]
  41fb13:	test   al,0x21
  41fb15:	add    eax,0x5fd5c573
  41fb1a:	mov    eax,0xa2d57125
  41fb1f:	fdivr  QWORD PTR [esi-0x66]
  41fb22:	js     0x41faec
  41fb24:	xor    eax,0x843dc274
  41fb29:	cmp    cl,BYTE PTR [ebp-0x77]
  41fb2c:	or     eax,0x441494a5
  41fb31:	xchg   ebx,eax
  41fb32:	cmp    ah,BYTE PTR ds:0x172c6d1a
  41fb38:	xor    eax,0xb2486e4b
  41fb3d:	add    eax,0x5b26be93
  41fb42:	cld    
  41fb43:	adc    eax,0x90f38df4
  41fb48:	xor    al,0x4c
  41fb4a:	daa    
  41fb4b:	push   cs
  41fb4c:	inc    ebp
  41fb4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb4e:	pop    ebx
  41fb4f:	jle    0x41fb31
  41fb51:	or     DWORD PTR [ebx],esp
  41fb53:	jne    0x41fb4f
  41fb55:	mov    eax,ds:0xdcdef2b5
  41fb5a:	icebp  
  41fb5b:	jmp    0xa4e8:0xb0476051
  41fb62:	xchg   ebx,eax
  41fb63:	lock loope 0x41fb2d
  41fb66:	push   ecx
  41fb67:	jecxz  0x41fb8f
  41fb69:	inc    BYTE PTR [edi+0x5]
  41fb6c:	jo     0x41fba0
  41fb6e:	test   BYTE PTR [edx+0x11],0xc0
  41fb72:	imul   esp,DWORD PTR [ebx],0xffffff8d
  41fb75:	pop    edi
  41fb76:	test   DWORD PTR ds:0x777c40b9,ebp
  41fb7c:	mov    al,ds:0x35d6b69b
  41fb81:	pop    edi
  41fb82:	pop    ss
  41fb83:	adc    eax,0x5c039711
  41fb88:	jae    0x41fb2d
  41fb8a:	adc    al,0x43
  41fb8c:	std    
  41fb8d:	dec    edi
  41fb8e:	sub    eax,0x30526f18
  41fb93:	(bad)  
  41fb94:	mov    ebp,0x2cb0344a
  41fb99:	out    0xa7,al
  41fb9b:	jo     0x41fb82
  41fb9d:	es mov esi,0x778124ba
  41fba3:	jmp    0x209e9f95
  41fba8:	or     eax,0x63ac1f10
  41fbad:	sbb    DWORD PTR [esi-0x2d0e46cd],ebx
  41fbb3:	sub    ah,bh
  41fbb5:	dec    ebp
  41fbb6:	sbb    BYTE PTR [edi+ebx*8+0x61],0x13
  41fbbb:	add    ecx,0x64f893
  41fbc1:	or     ecx,edx
  41fbc3:	mov    DWORD PTR [ebp-0x54],ecx
  41fbc6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc9:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcc:	add    ecx,0x242ebcc
  41fbd2:	xor    ecx,edx
  41fbd4:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbda:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdd:	add    ecx,edi
  41fbdf:	and    ecx,edx
  41fbe1:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe7:	mov    edx,DWORD PTR [ebp-0x48]
  41fbea:	lea    ecx,[edx+ecx*1+0x241fcde]
  41fbf1:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf7:	mov    edx,0xfa5e1521
  41fbfc:	sub    edx,ecx
  41fbfe:	add    edx,DWORD PTR [ebp-0x44]
  41fc01:	mov    DWORD PTR [ebp-0x44],edx
  41fc04:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc07:	jmp    0x421f6a
  41fc0c:	loope  0x41fbd6
  41fc0e:	xchg   ecx,eax
  41fc0f:	xchg   DWORD PTR [ebx-0x79],edi
  41fc12:	fisttp DWORD PTR [eax+0x539e7a01]
  41fc18:	push   ebp
  41fc19:	fldenv [ecx+0x7db74322]
  41fc1f:	jp     0x41fc51
  41fc21:	pop    edi
  41fc22:	jp     0x41fc9e
  41fc24:	aam    0x2a
  41fc26:	cmp    al,0x88
  41fc28:	out    0xbb,eax
  41fc2a:	dec    ebx
  41fc2b:	or     DWORD PTR [edx],0xdfec54c1
  41fc31:	and    BYTE PTR [esi-0x7e],dh
  41fc34:	jecxz  0x41fc11
  41fc36:	daa    
  41fc37:	sar    BYTE PTR [edx],1
  41fc39:	xchg   edi,eax
  41fc3a:	mov    dh,0x83
  41fc3c:	lahf   
  41fc3d:	aas    
  41fc3e:	mov    cl,0xa4
  41fc40:	outs   dx,BYTE PTR ds:[esi]
  41fc41:	imul   edx,DWORD PTR [edi],0x2b9aec46
  41fc47:	xchg   edx,eax
  41fc48:	lods   al,BYTE PTR ds:[esi]
  41fc49:	sti    
  41fc4a:	pusha  
  41fc4b:	dec    ecx
  41fc4c:	das    
  41fc4d:	gs cld 
  41fc4f:	retf   
  41fc50:	add    BYTE PTR [edx+edx*8+0xeabaec1],bl
  41fc57:	dec    ebx
  41fc58:	es adc eax,0x2fc06a15
  41fc5e:	lods   eax,DWORD PTR ds:[esi]
  41fc5f:	jle    0x41fc05
  41fc61:	push   DWORD PTR [ecx]
  41fc63:	mov    ebp,0x58bd90a8
  41fc68:	shl    DWORD PTR [ebx-0x34],0xb0
  41fc6c:	mov    ebx,DWORD PTR [eax+0x5663c781]
  41fc72:	cs sbb eax,0xf9fb3edf
  41fc78:	jbe    0x41fcf1
  41fc7a:	jge    0x41fc52
  41fc7c:	xor    BYTE PTR [ecx],cl
  41fc7e:	dec    edx
  41fc7f:	iret   
  41fc80:	xor    al,BYTE PTR [ebx+esi*8]
  41fc83:	pushf  
  41fc84:	add    dh,BYTE PTR [edi-0x55]
  41fc87:	jae    0x41fce1
  41fc89:	daa    
  41fc8a:	retf   0xab04
  41fc8d:	xchg   ebx,eax
  41fc8e:	pop    ecx
  41fc8f:	sti    
  41fc90:	test   bl,cl
  41fc92:	ret    
  41fc93:	pop    ds
  41fc94:	retf   0x62cd
  41fc97:	push   eax
  41fc98:	or     DWORD PTR [ebx-0x4b],0xa062d75c
  41fc9f:	xchg   BYTE PTR [bx],ah
  41fca2:	retf   0x7a21
  41fca5:	mov    dh,0xb9
  41fca7:	jmp    0x41fc2a
  41fca9:	cmp    BYTE PTR [ebx+edx*8+0x12],ah
  41fcad:	mov    edx,0x1291bc7a
  41fcb2:	pushf  
  41fcb3:	sub    cl,bl
  41fcb5:	push   eax
  41fcb6:	jae    0x41fc7e
  41fcb8:	push   cs
  41fcb9:	rol    BYTE PTR [eax+0x52],0xfc
  41fcbd:	cdq    
  41fcbe:	idiv   BYTE PTR [ebx]
  41fcc0:	jmp    0x41fcaf
  41fcc2:	sbb    BYTE PTR [esi-0x2f9758e3],bl
  41fcc8:	sbb    BYTE PTR [edx],cl
  41fcca:	jns    0x41fd2a
  41fccc:	das    
  41fccd:	sti    
  41fcce:	scas   al,BYTE PTR es:[edi]
  41fccf:	or     al,0x5e
  41fcd1:	push   eax
  41fcd2:	fcmovu st,st(7)
  41fcd4:	adc    dl,BYTE PTR [eax-0x41]
  41fcd7:	fdiv   DWORD PTR ds:0xb5c7cca7
  41fcdd:	loopne 0x41fd07
  41fcdf:	cmp    BYTE PTR [esi-0x3e0cf15f],bh
  41fce5:	xlat   BYTE PTR ds:[ebx]
  41fce6:	je     0x41fd59
  41fce8:	fild   QWORD PTR [esi-0x80]
  41fceb:	loopne 0x41fd0f
  41fced:	inc    ecx
  41fcee:	pop    esp
  41fcef:	cld    
  41fcf0:	and    edi,esp
  41fcf2:	test   al,0xc7
  41fcf4:	aam    0x1c
  41fcf6:	les    ebx,FWORD PTR [eax+edx*2]
  41fcf9:	or     BYTE PTR [edx],dh
  41fcfb:	outs   dx,BYTE PTR ds:[esi]
  41fcfc:	mov    eax,ds:0x127990c6
  41fd01:	scas   eax,DWORD PTR es:[edi]
  41fd02:	ins    DWORD PTR es:[edi],dx
  41fd03:	in     eax,dx
  41fd04:	imul   DWORD PTR [edx+0x54]
  41fd07:	or     al,0xeb
  41fd09:	or     al,0xe6
  41fd0b:	dec    ebp
  41fd0c:	mov    edx,0x314e093a
  41fd11:	xor    bl,0x68
  41fd14:	aaa    
  41fd15:	loopne 0x41fd6a
  41fd17:	and    eax,0xaa5fb83f
  41fd1c:	pop    ecx
  41fd1d:	sub    esp,esp
  41fd1f:	sbb    al,0xf
  41fd21:	(bad)  
  41fd22:	fld    QWORD PTR ds:0x8625f867
  41fd28:	daa    
  41fd29:	(bad)  
  41fd2a:	mov    edi,0x1f52cdbe
  41fd2f:	aaa    
  41fd30:	into   
  41fd31:	sub    eax,0x8d4160f6
  41fd36:	or     al,0x24
  41fd38:	int    0xaf
  41fd3a:	out    dx,eax
  41fd3b:	sbb    ebx,edx
  41fd3d:	dec    esi
  41fd3e:	xchg   ebp,eax
  41fd3f:	(bad)  
  41fd40:	pop    ecx
  41fd41:	aaa    
  41fd42:	pop    ss
  41fd43:	lea    esp,[edi+0xc]
  41fd46:	pop    esp
  41fd47:	ja     0x41fd20
  41fd49:	stc    
  41fd4a:	imul   ecx,DWORD PTR [edx+0x5ad665e8],0xb734205a
  41fd54:	call   0x6b7d:0x73af9cfe
  41fd5b:	xor    eax,0x111e0472
  41fd60:	jmp    0xf268b8a8
  41fd65:	pop    esi
  41fd66:	fwait
  41fd67:	sbb    DWORD PTR ds:0x2e293363,0xe14a24ba
  41fd71:	cs cmc 
  41fd73:	push   es
  41fd74:	out    dx,al
  41fd75:	repz sahf 
  41fd77:	aaa    
  41fd78:	mov    ah,0x67
  41fd7a:	stos   DWORD PTR es:[edi],eax
  41fd7b:	out    dx,al
  41fd7c:	cmc    
  41fd7d:	add    eax,ecx
  41fd7f:	or     DWORD PTR [ecx-0x62],esp
  41fd82:	dec    esi
  41fd83:	test   eax,0x614a6dcb
  41fd88:	leave  
  41fd89:	push   eax
  41fd8a:	dec    esi
  41fd8b:	popf   
  41fd8c:	es test al,0xc6
  41fd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd90:	js     0x41fdf4
  41fd92:	pop    ebx
  41fd93:	xchg   bl,ah
  41fd95:	retf   0xdead
  41fd98:	jo     0x41fda2
  41fd9a:	sub    BYTE PTR gs:[ebx+0x6c7fb1eb],0x48
  41fda2:	xor    esp,DWORD PTR [eax-0xb63d49]
  41fda8:	frstor [edi-0x8]
  41fdab:	sub    al,0x42
  41fdad:	adc    dh,dh
  41fdaf:	or     bh,BYTE PTR [ebp+edi*2-0x75]
  41fdb3:	data16 adc al,0x86
  41fdb6:	inc    ebx
  41fdb7:	jmp    0x11b7:0x9f3cbe68
  41fdbe:	inc    eax
  41fdbf:	jle    0x41fe1d
  41fdc1:	push   eax
  41fdc2:	test   DWORD PTR [edx],0xd3c46e23
  41fdc8:	sbb    dl,BYTE PTR [ecx+ecx*2-0x8]
  41fdcc:	data16 and bh,ch
  41fdcf:	mov    ecx,0x6a5970cf
  41fdd4:	repnz sbb dh,al
  41fdd7:	jns    0x41fde3
  41fdd9:	int    0x8e
  41fddb:	mov    BYTE PTR [edi+0x5c49650c],bh
  41fde1:	mov    edx,0x5d845652
  41fde6:	lahf   
  41fde7:	adc    eax,0xc2872b83
  41fdec:	push   edi
  41fded:	out    dx,al
  41fdee:	aad    0xf6
  41fdf0:	sub    DWORD PTR [edx-0x51],esi
  41fdf3:	mov    BYTE PTR [esp+eiz*8-0x22],ah
  41fdf7:	shr    BYTE PTR [edx+0x79acc989],cl
  41fdfd:	add    DWORD PTR [eax+eax*4+0x4877a9a4],0x1de0fe74
  41fe08:	stos   DWORD PTR es:[edi],eax
  41fe09:	and    esp,0xcef5917e
  41fe0f:	aam    0xf9
  41fe11:	retw   0x7db4
  41fe15:	sub    BYTE PTR [ebx+edi*4+0x224beef8],0x8c
  41fe1d:	or     eax,0x49693e36
  41fe22:	pop    ebp
  41fe23:	push   edx
  41fe24:	cmp    eax,0xe273022c
  41fe29:	push   0xd413d8be
  41fe2e:	loop   0x41fe43
  41fe30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe31:	rcl    DWORD PTR [ebp+0x73],cl
  41fe34:	xchg   ebp,eax
  41fe35:	in     al,0x61
  41fe37:	call   0xc534:0xd998fb48
  41fe3e:	push   cs
  41fe3f:	dec    ebp
  41fe40:	out    0xf,eax
  41fe42:	ds test al,0x63
  41fe45:	outs   dx,BYTE PTR ds:[esi]
  41fe46:	mov    eax,DWORD PTR [ecx+ebp*8]
  41fe49:	fstp   QWORD PTR [esi]
  41fe4b:	xor    DWORD PTR [edx+0x34],0x73
  41fe4f:	and    esi,eax
  41fe51:	iret   
  41fe52:	pushf  
  41fe53:	dec    edx
  41fe54:	out    dx,al
  41fe55:	dec    ebx
  41fe56:	mov    ds:0xe83fe0e2,eax
  41fe5b:	pop    eax
  41fe5c:	jle    0x41fe22
  41fe5e:	jle    0x41fe61
  41fe60:	cld    
  41fe61:	dec    ebx
  41fe62:	dec    eax
  41fe63:	dec    edi
  41fe64:	les    edx,FWORD PTR [esi+0x73]
  41fe67:	shr    DWORD PTR [edi+0x64],1
  41fe6a:	int    0x77
  41fe6c:	sar    BYTE PTR [ebp-0x13],0x64
  41fe70:	pop    ebp
  41fe71:	int    0x77
  41fe73:	repnz mov bl,0x1f
  41fe76:	test   bl,dh
  41fe78:	nop
  41fe79:	jmp    0xdce3:0x586f25fb
  41fe80:	mov    edi,0x55c728c6
  41fe85:	mov    ?,ecx
  41fe87:	cmp    dl,BYTE PTR [eax+0x3118ab6e]
  41fe8d:	inc    ecx
  41fe8e:	push   esi
  41fe8f:	cmp    BYTE PTR [edi],ah
  41fe91:	mov    al,ds:0xae987665
  41fe96:	lea    esi,[ecx+eiz*4]
  41fe99:	sub    BYTE PTR [edi-0x35301e51],dl
  41fe9f:	mov    ebx,esp
  41fea1:	dec    edx
  41fea2:	sub    DWORD PTR [esi],eax
  41fea4:	punpckldq mm3,DWORD PTR [ebp-0x335a0c28]
  41feab:	outs   dx,DWORD PTR ds:[esi]
  41feac:	cmc    
  41fead:	ins    DWORD PTR es:[edi],dx
  41feae:	retf   
  41feaf:	jne    0x41fef5
  41feb1:	pop    esp
  41feb2:	mov    ?,esp
  41feb4:	jg     0x41fe47
  41feb6:	arpl   WORD PTR [ecx],di
  41feb8:	pop    eax
  41feb9:	pop    DWORD PTR [edx]
  41febb:	dec    ebx
  41febc:	sub    eax,0xcbab680b
  41fec1:	adc    eax,0x38e3b9ef
  41fec6:	and    DWORD PTR [ebp-0x1e],0x1d15b310
  41fecd:	push   ebx
  41fece:	mov    gs,WORD PTR [esi-0x33]
  41fed1:	daa    
  41fed2:	push   ecx
  41fed3:	jbe    0x41fe95
  41fed5:	lds    esi,FWORD PTR [ebp-0x1b]
  41fed8:	ret    0x26a7
  41fedb:	inc    ecx
  41fedc:	ret    0xd7c3
  41fedf:	add    cl,bl
  41fee1:	mov    DWORD PTR [ebp+0x7d],edx
  41fee4:	jae    0x41fe6e
  41fee6:	xchg   esp,eax
  41fee7:	in     eax,0x7
  41fee9:	clc    
  41feea:	rcr    DWORD PTR ds:0x81bef09d,cl
  41fef0:	pop    ebp
  41fef1:	test   BYTE PTR [edi-0x37],dh
  41fef4:	adc    dh,bl
  41fef6:	mov    ecx,DWORD PTR [ebp+0x5e8eba6c]
  41fefc:	pop    es
  41fefd:	add    al,0x3
  41feff:	mov    BYTE PTR [edi],dl
  41ff01:	push   ebp
  41ff02:	out    dx,eax
  41ff03:	pop    eax
  41ff04:	fs mov esp,0xc8e84fd4
  41ff0a:	sbb    edx,ebp
  41ff0c:	popf   
  41ff0d:	xor    al,0xd6
  41ff0f:	inc    edx
  41ff10:	mov    edi,0x4c7e4698
  41ff15:	sub    al,bh
  41ff17:	sar    BYTE PTR [ecx-0xa],cl
  41ff1a:	xor    ecx,DWORD PTR [ecx]
  41ff1c:	push   ebp
  41ff1d:	int    0x7a
  41ff1f:	adc    cl,0x8c
  41ff22:	data16 arpl WORD PTR [edi],si
  41ff25:	adc    al,0xd9
  41ff27:	cli    
  41ff28:	clc    
  41ff29:	aaa    
  41ff2a:	sti    
  41ff2b:	add    ebp,esp
  41ff2d:	mov    eax,DWORD PTR [edi-0x15]
  41ff30:	push   ecx
  41ff31:	sub    al,0x76
  41ff33:	push   ecx
  41ff34:	ins    DWORD PTR es:[edi],dx
  41ff35:	mov    ebp,0x60574834
  41ff3a:	add    ecx,DWORD PTR [ebp-0x45]
  41ff3d:	or     edi,edi
  41ff3f:	ror    DWORD PTR [eax+esi*1-0x2],0x17
  41ff44:	sbb    bl,BYTE PTR [edi]
  41ff46:	in     al,dx
  41ff47:	in     al,dx
  41ff48:	stc    
  41ff49:	test   BYTE PTR [eax],ch
  41ff4b:	mov    esp,0xcc86d034
  41ff50:	mov    eax,0x1934e190
  41ff55:	fs sub al,0x23
  41ff58:	or     bh,BYTE PTR [esi]
  41ff5a:	mul    BYTE PTR [esi-0x1d]
  41ff5d:	daa    
  41ff5e:	jge    0x41ff1b
  41ff60:	mov    bl,0x5b
  41ff62:	sbb    ebp,esi
  41ff64:	das    
  41ff65:	sub    DWORD PTR es:[eax],esi
  41ff68:	outs   dx,DWORD PTR ds:[esi]
  41ff69:	mov    edi,0xfb760eb0
  41ff6e:	pop    edx
  41ff6f:	pusha  
  41ff70:	das    
  41ff71:	pop    ss
  41ff72:	outs   dx,DWORD PTR ds:[esi]
  41ff73:	dec    esi
  41ff74:	add    bh,BYTE PTR [edi]
  41ff76:	and    edi,DWORD PTR [ecx+0x7e]
  41ff79:	mov    ebp,0x58fc2d83
  41ff7e:	cmp    ebx,0xffffff85
  41ff81:	adc    eax,esp
  41ff83:	mov    ebp,0x1afc103b
  41ff88:	adc    al,0xca
  41ff8a:	xchg   ah,al
  41ff8c:	mov    al,ds:0x4b444c3c
  41ff91:	xchg   edx,eax
  41ff92:	hlt    
  41ff93:	out    dx,al
  41ff94:	imul   edx,DWORD PTR [ecx-0xa],0x21edd86f
  41ff9b:	xchg   BYTE PTR [esi+0x5c4c354e],ah
  41ffa1:	sti    
  41ffa2:	popf   
  41ffa3:	xchg   edi,eax
  41ffa4:	fwait
  41ffa5:	sub    esp,DWORD PTR [ebx-0xac4ef27]
  41ffab:	(bad)  
  41ffac:	adc    esp,ebp
  41ffae:	inc    ebx
  41ffaf:	ror    DWORD PTR [ecx+0x19],cl
  41ffb2:	push   eax
  41ffb3:	out    dx,al
  41ffb4:	cmp    DWORD PTR [eax],0x59
  41ffb7:	or     al,0x78
  41ffb9:	test   al,0x78
  41ffbb:	pop    ebp
  41ffbc:	mov    cl,0x8a
  41ffbe:	inc    edx
  41ffbf:	xor    al,0x5c
  41ffc1:	push   ebp
  41ffc2:	mov    ebx,DWORD PTR [ebx-0x274938c5]
  41ffc8:	daa    
  41ffc9:	lock jl 0x41ff65
  41ffcc:	and    ebp,DWORD PTR [edi]
  41ffce:	xor    ebp,esp
  41ffd0:	xchg   edi,eax
  41ffd1:	push   ebx
  41ffd2:	shl    DWORD PTR [eax+eiz*4-0x77],cl
  41ffd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd7:	jmp    0x860886d3
  41ffdc:	add    DWORD PTR [ecx+0x10],eax
  41ffdf:	mov    ebx,0x3bb95c06
  41ffe4:	inc    eax
  41ffe5:	clc    
  41ffe6:	in     al,dx
  41ffe7:	mov    edi,DWORD PTR [eax-0x63d80e8d]
  41ffed:	pop    ebp
  41ffee:	test   DWORD PTR [eax+0x16bcdec0],esi
  41fff4:	mov    dh,0x1d
  41fff6:	xor    eax,0x261ce063
  41fffb:	(bad)  [esi-0x1f]
  41fffe:	nop
  41ffff:	and    eax,0xabd238aa
  420004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420005:	add    dl,BYTE PTR [ebp-0x1b9e53dc]
  42000b:	sbb    edx,DWORD PTR [ebp+0x5a]
  42000e:	hlt    
  42000f:	data16 stc 
  420011:	popa   
  420012:	bound  eax,QWORD PTR [ecx+edx*8-0x5a536783]
  420019:	(bad)  
  42001a:	data16 (bad) 
  42001d:	adc    al,BYTE PTR [esi+ecx*4-0x68]
  420021:	popa   
  420022:	lds    esi,FWORD PTR [edi]
  420024:	pusha  
  420025:	and    BYTE PTR [edx+0x6bb0c146],bh
  42002b:	mov    al,ds:0xe86f9d04
  420030:	sar    DWORD PTR [ecx],1
  420032:	xor    eax,0x1c2471c7
  420037:	sub    ah,BYTE PTR [eax+0x62]
  42003a:	or     DWORD PTR [esi+edi*1+0x57fda781],0xa6b48a3d
  420045:	addr16 (bad) 
  420047:	sub    DWORD PTR [eax],esp
  420049:	(bad)  
  42004a:	(bad)  
  42004b:	arpl   WORD PTR [ebx+0x6],dx
  42004e:	cmp    ecx,edi
  420050:	cli    
  420051:	jbe    0x420020
  420053:	xchg   ecx,eax
  420054:	je     0x420061
  420056:	imul   ebx,DWORD PTR [edx-0x4f],0xe9712bf5
  42005d:	inc    esp
  42005e:	pop    edi
  42005f:	push   eax
  420060:	dec    esp
  420061:	inc    edx
  420062:	jmp    0xa328:0x1a3d075e
  420069:	lods   eax,DWORD PTR ds:[esi]
  42006a:	sub    eax,0x37f653ce
  42006f:	addr16 mov ah,cl
  420072:	push   0x97593649
  420077:	mov    esp,ebp
  420079:	test   al,0x92
  42007b:	cdq    
  42007c:	or     esi,DWORD PTR ds:0x60ec2204
  420082:	out    0x3c,al
  420084:	cmp    eax,0x7c4a3339
  420089:	push   eax
  42008a:	jbe    0x4200b2
  42008c:	xchg   edx,eax
  42008d:	sbb    al,0x89
  420090:	clc    
  420091:	and    bh,BYTE PTR [edx-0xa]
  420094:	jo     0x4200a4
  420096:	fisub  WORD PTR [eax+0x58]
  420099:	retf   
  42009a:	cmp    esi,eax
  42009c:	inc    ebp
  42009d:	and    ebp,DWORD PTR [ebx-0x2f]
  4200a0:	ror    BYTE PTR [edx-0x323f29a8],0xfd
  4200a7:	mov    eax,0xff9bc2df
  4200ac:	xor    BYTE PTR [ecx-0x31ce7adf],ah
  4200b2:	lea    ecx,[ebx-0x55d34229]
  4200b8:	cli    
  4200b9:	test   eax,0xe2ebce1a
  4200be:	sahf   
  4200bf:	and    DWORD PTR [ecx+0x3908ee6f],esi
  4200c5:	lock inc edx
  4200c7:	(bad)
  4200cc:	fld    TBYTE PTR ds:0x8d80bb
  4200d2:	mov    ebx,0xc52f49ac
  4200d7:	sbb    DWORD PTR [esi+eiz*2-0x3e0d81cf],esp
  4200de:	pop    ebx
  4200df:	loopne 0x4200e6
  4200e1:	sub    eax,0x67bbcb19
  4200e6:	or     ebp,DWORD PTR [edx]
  4200e8:	push   ebp
  4200e9:	xchg   DWORD PTR [edx-0x3],esp
  4200ec:	fwait
  4200ed:	cmp    DWORD PTR [esi+0x3967bb2b],0xbf262f09
  4200f7:	in     eax,0x97
  4200f9:	add    al,bh
  4200fb:	ret    0xa6d6
  4200fe:	hlt    
  4200ff:	ja     0x420091
  420101:	sub    dh,BYTE PTR ds:0x282ca4b3
  420107:	push   es
  420108:	jl     0x42017c
  42010a:	ins    BYTE PTR es:[edi],dx
  42010b:	shr    BYTE PTR [edi+0x7a],0xf7
  42010f:	or     BYTE PTR [ebx],ch
  420111:	sbb    ch,BYTE PTR [eax+0xd3efd4b]
  420117:	pop    ebx
  420118:	addr16 mov ecx,0x76e25807
  42011e:	cmp    DWORD PTR [edi-0x6c],eax
  420121:	push   0xad578980
  420126:	loopne 0x42011b
  420128:	aam    0xfd
  42012a:	pushf  
  42012b:	inc    ebp
  42012c:	icebp  
  42012d:	(bad)  [esi-0x59]
  420130:	ds cmc 
  420132:	imul   edx,DWORD PTR [edi],0xf5ed9428
  420138:	or     eax,ebp
  42013a:	scas   eax,DWORD PTR es:[edi]
  42013b:	sub    DWORD PTR [esi+0xd214313],ebx
  420141:	ret    0x98c8
  420144:	in     al,dx
  420145:	sbb    ch,bl
  420147:	jo     0x4200fd
  420149:	sub    DWORD PTR [edx-0x187cc911],ecx
  42014f:	jge    0x420158
  420151:	xor    edi,DWORD PTR [ecx]
  420153:	push   edi
  420154:	jno    0x42014f
  420156:	add    eax,0x2a3ae8c9
  42015b:	jmp    0x4b97:0xd8e828c9
  420162:	push   esp
  420163:	mov    esp,0x198e38eb
  420168:	mov    eax,0xc99ae6ec
  42016d:	or     ebx,ebx
  42016f:	hlt    
  420170:	imul   ebp,DWORD PTR [ebp-0x58],0xfffffffd
  420174:	test   dl,bh
  420176:	test   al,0xa8
  420178:	jo     0x4201b9
  42017a:	shr    BYTE PTR [si],1
  42017d:	xor    al,0xf6
  42017f:	and    al,BYTE PTR [eax]
  420181:	lds    ebp,FWORD PTR [ebx-0x14]
  420184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420185:	ficom  WORD PTR [ebx+esi*1+0x65c4d00c]
  42018c:	rcr    DWORD PTR [eax],1
  42018e:	out    0x91,al
  420190:	push   edi
  420191:	cmp    BYTE PTR [edi+eiz*2+0x1e],dl
  420195:	mov    eax,ds:0xfd7c0b12
  42019a:	scas   al,BYTE PTR es:[edi]
  42019b:	jo     0x42015e
  42019d:	jp     0x4201d4
  42019f:	fisub  DWORD PTR [edi+eax*1-0x62e6fbf5]
  4201a6:	les    esp,FWORD PTR [esi+0x72]
  4201a9:	adc    al,0xbf
  4201ab:	or     al,0x94
  4201ad:	xor    DWORD PTR [edx+ecx*4-0x32],eax
  4201b1:	leave  
  4201b2:	fcmovu st,st(5)
  4201b4:	mov    esp,0xa30d4d89
  4201b9:	cmp    eax,0x713085f0
  4201be:	mov    al,0xb2
  4201c0:	jb     0x42015b
  4201c2:	sahf   
  4201c3:	dec    ebx
  4201c4:	bound  edi,QWORD PTR [edx+edi*4+0x38]
  4201c8:	jb     0x42021d
  4201ca:	pop    edi
  4201cb:	fild   DWORD PTR [ecx-0x65dd571]
  4201d1:	fimul  WORD PTR [edx-0x61]
  4201d4:	test   eax,0x724c5e7e
  4201d9:	adc    ch,BYTE PTR [esi+edi*4-0x3]
  4201dd:	imul   BYTE PTR [ecx]
  4201df:	push   0xb
  4201e1:	mov    eax,0x4b59d42
  4201e6:	push   esi
  4201e7:	jae    0x420228
  4201e9:	adc    bl,dl
  4201eb:	fidivr WORD PTR [edi-0x1b0b7065]
  4201f1:	mov    edx,0xeb6d411b
  4201f6:	cmp    BYTE PTR [esi+esi*4-0x50d740c0],0x6a
  4201fe:	mov    dh,0xe9
  420200:	adc    edi,ebx
  420202:	xchg   BYTE PTR [edi+0x3b],dh
  420205:	inc    ecx
  420206:	xor    al,0x7d
  420208:	mov    BYTE PTR [ebx],0x6c
  42020b:	push   es
  42020c:	add    al,0x4e
  42020e:	mov    cl,0xa1
  420210:	sub    DWORD PTR [edi],edi
  420212:	mov    al,0x83
  420214:	pop    ecx
  420215:	sbb    dh,BYTE PTR [esi+eax*2+0x44e0a6b3]
  42021c:	xchg   ebp,eax
  42021d:	clc    
  42021e:	repnz push 0xffffff87
  420221:	xchg   esi,eax
  420222:	lock sar DWORD PTR [ecx],1
  420225:	in     eax,0x46
  420227:	clc    
  420228:	mov    eax,0x95c4f807
  42022d:	pop    es
  42022e:	retf   0x16cb
  420231:	sbb    ah,ch
  420233:	jbe    0x420257
  420235:	inc    edx
  420236:	sbb    DWORD PTR [edi-0x45],ebx
  420239:	inc    edx
  42023a:	mov    ds:0x8575a673,eax
  42023f:	push   edi
  420240:	dec    ecx
  420241:	lock cmc 
  420243:	inc    eax
  420244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420245:	sti    
  420246:	mov    dh,0xd2
  420248:	sbb    eax,0x8193ac77
  42024d:	mov    esi,DWORD PTR [ecx+eax*1]
  420250:	xchg   al,al
  420252:	dec    edi
  420253:	push   esi
  420254:	sub    al,BYTE PTR [esi+0x2de5ed67]
  42025a:	dec    edx
  42025b:	ja     0x4201ed
  42025d:	int3   
  42025e:	sub    al,0xde
  420260:	test   BYTE PTR [ebp-0x53213c0b],dl
  420266:	shr    BYTE PTR [ebx],cl
  420268:	sahf   
  420269:	call   0x9a98:0xbd57deb8
  420270:	out    dx,al
  420271:	mov    bh,0xee
  420273:	push   cs
  420274:	jmp    0xd9892b36
  420279:	sbb    bl,ch
  42027b:	mov    ah,BYTE PTR [ecx]
  42027d:	sub    eax,edx
  42027f:	push   esp
  420280:	cld    
  420281:	xchg   ecx,eax
  420282:	push   ecx
  420283:	sti    
  420284:	cmp    esi,DWORD PTR [ecx]
  420286:	retf   0xf38b
  420289:	cli    
  42028a:	inc    ecx
  42028b:	stos   DWORD PTR es:[edi],eax
  42028c:	jae    0x420234
  42028e:	or     DWORD PTR [eax+0x157900f4],ebp
  420294:	lods   eax,DWORD PTR ds:[esi]
  420295:	out    0x7e,eax
  420297:	scas   eax,DWORD PTR es:[edi]
  420298:	push   ebx
  420299:	paddusw mm1,mm5
  42029c:	inc    ebp
  42029d:	or     ecx,DWORD PTR es:[edx]
  4202a0:	inc    esp
  4202a1:	cwde   
  4202a2:	xchg   ecx,eax
  4202a3:	xor    DWORD PTR [edx+edi*4],ecx
  4202a6:	mov    eax,0x3ec8421a
  4202ab:	mov    ah,0x8e
  4202ad:	mov    ds:0xb0e6e6f5,eax
  4202b2:	in     eax,dx
  4202b3:	(bad)  
  4202b6:	lahf   
  4202b7:	aad    0x68
  4202b9:	in     al,dx
  4202ba:	imul   ecx,DWORD PTR [eax+0x51],0x27
  4202be:	aaa    
  4202bf:	sbb    ebx,DWORD PTR [edx]
  4202c1:	pushf  
  4202c2:	push   edi
  4202c3:	inc    eax
  4202c4:	pop    eax
  4202c5:	mov    ah,0x3f
  4202c7:	in     eax,0x35
  4202c9:	outs   dx,BYTE PTR ds:[esi]
  4202ca:	mov    WORD PTR [eax],gs
  4202cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202cd:	(bad)  
  4202ce:	pop    ss
  4202cf:	xor    al,0xe9
  4202d1:	retf   0x3068
  4202d4:	call   0xbd66:0x8b46615e
  4202db:	scas   eax,DWORD PTR es:[edi]
  4202dc:	inc    ebp
  4202dd:	mov    bl,0x6b
  4202df:	cs xchg esp,eax
  4202e1:	pop    ebp
  4202e2:	(bad)  
  4202e3:	dec    eax
  4202e4:	pop    es
  4202e5:	arpl   WORD PTR [edi+0x13fa46e8],si
  4202eb:	jno    0x4202a1
  4202ed:	add    BYTE PTR [ebx],0x59
  4202f0:	repnz retf 
  4202f2:	cmp    dl,al
  4202f4:	ret    
  4202f5:	gs jp  0x42034d
  4202f8:	dec    esi
  4202f9:	mov    eax,0x3f96e7b7
  4202fe:	(bad)  
  4202ff:	mov    edx,0x3d72070c
  420304:	rcr    edi,0x89
  420307:	mov    BYTE PTR [ebp+0x3],ah
  42030a:	sahf   
  42030b:	fisttp QWORD PTR [edi+0x61]
  42030e:	pushw  ss
  420310:	cmp    ebx,DWORD PTR [edx-0xf]
  420313:	mov    DWORD PTR [esi+0x27],ecx
  420316:	jle    0x4202cc
  420318:	cld    
  420319:	mov    edi,0xbe6ae787
  42031e:	jae    0x420381
  420320:	adc    ecx,DWORD PTR [ecx]
  420322:	push   eax
  420323:	clc    
  420324:	xchg   esp,eax
  420325:	adc    al,0xd6
  420327:	pop    eax
  420328:	daa    
  420329:	arpl   WORD PTR [eax],di
  42032b:	test   DWORD PTR [edx+edx*2+0x6],eax
  42032f:	jp     0x4202ff
  420331:	mov    al,0x20
  420333:	aad    0x27
  420335:	daa    
  420336:	out    0x77,eax
  420338:	cld    
  420339:	dec    ecx
  42033a:	mov    bh,0x78
  42033c:	ins    BYTE PTR es:[edi],dx
  42033d:	rol    esp,cl
  42033f:	int    0x86
  420341:	and    cl,BYTE PTR [eax+edx*8+0x8cb7adc]
  420348:	not    BYTE PTR [edx]
  42034a:	mov    esi,0x834571bf
  42034f:	sahf   
  420350:	scas   al,BYTE PTR es:[edi]
  420351:	add    BYTE PTR [ecx-0x56],al
  420354:	lea    esp,[ecx-0x1e103455]
  42035a:	ret    0x1f46
  42035d:	das    
  42035e:	sbb    ch,BYTE PTR [edi-0x5e05556e]
  420364:	dec    esp
  420365:	mov    bh,0x1b
  420367:	push   ss
  420368:	xchg   esp,eax
  420369:	or     DWORD PTR ds:0xe608ed1c,esi
  42036f:	aaa    
  420370:	and    bh,cl
  420372:	and    BYTE PTR [ebx],al
  420374:	aad    0x79
  420376:	add    eax,0x3a26eed1
  42037b:	cmp    BYTE PTR [eax+0x40],ah
  42037e:	sub    al,BYTE PTR [edx-0x20]
  420381:	and    BYTE PTR [eax+ecx*2+0x79],al
  420385:	cdq    
  420386:	pop    esi
  420387:	int3   
  420388:	adc    cl,BYTE PTR [edi]
  42038a:	mov    ch,0xec
  42038c:	inc    ecx
  42038d:	sbb    al,0xb
  42038f:	adc    BYTE PTR [edx],ch
  420391:	arpl   WORD PTR [ebx],si
  420393:	ret    0xf16e
  420396:	sbb    DWORD PTR [eax-0x796c69a5],esi
  42039c:	ja     0x420408
  42039e:	mov    ds:0x24ec9eba,eax
  4203a3:	dec    ebp
  4203a4:	dec    esp
  4203a5:	xor    eax,edi
  4203a7:	mov    ecx,0x93661f90
  4203ac:	dec    edx
  4203ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ae:	(bad)  
  4203b0:	push   0xffffffd4
  4203b2:	int3   
  4203b3:	push   esp
  4203b4:	and    ebx,eax
  4203b6:	int    0x58
  4203b8:	pop    ebx
  4203b9:	gs loope 0x420399
  4203bc:	jg     0x4203b8
  4203be:	out    dx,eax
  4203bf:	push   0xffffff8f
  4203c1:	inc    esi
  4203c2:	js     0x420433
  4203c4:	jbe    0x42035b
  4203c6:	adc    bh,BYTE PTR [eax-0x5f]
  4203c9:	cli    
  4203ca:	mov    eax,0xc835ad1e
  4203cf:	pop    edi
  4203d0:	pop    esi
  4203d1:	push   es
  4203d2:	pop    es
  4203d3:	jns    0x420405
  4203d5:	jp     0x420416
  4203d7:	jge    0x42043c
  4203d9:	mov    eax,0x9df6ff71
  4203de:	sub    bh,BYTE PTR [eax-0x6a]
  4203e1:	sbb    BYTE PTR [edx+0x5a],bh
  4203e4:	inc    ebp
  4203e5:	push   esp
  4203e6:	in     eax,0xe8
  4203e8:	mov    esp,0xf45a75b1
  4203ed:	punpckhwd mm1,QWORD PTR [esi]
  4203f0:	arpl   WORD PTR [ecx-0x7bfc234d],bx
  4203f6:	adc    esi,DWORD PTR [edx-0x2d060a0e]
  4203fc:	xchg   esp,eax
  4203fd:	inc    ebx
  4203fe:	mov    ecx,0xdcc3d9d7
  420403:	pop    edx
  420404:	xor    BYTE PTR [edx],bl
  420406:	(bad)  
  420407:	in     al,0x83
  420409:	test   BYTE PTR ds:0x2d5d7d7b,ch
  42040f:	fild   WORD PTR [ebx]
  420411:	mov    bl,0x6
  420413:	mov    edx,0xa74bd119
  420418:	(bad)  
  42041a:	shl    BYTE PTR [ecx],0x35
  42041d:	imul   ecx,DWORD PTR [eax+eax*2],0xf8925ce8
  420424:	addr16 mov cl,0x52
  420427:	(bad)  
  420428:	pop    ds
  420429:	pop    ecx
  42042a:	fsubr  DWORD PTR [eax]
  42042c:	mov    ebp,0x347dc44f
  420431:	in     al,0xdd
  420433:	test   BYTE PTR [edx+ebp*1],ah
  420436:	jb     0x42047e
  420438:	retf   0xb640
  42043b:	sub    BYTE PTR [esi],0x6b
  42043e:	dec    edx
  42043f:	fldenv [ebp+0x3b6f8752]
  420445:	mov    WORD PTR [ebx+ebx*1+0x3a],ss
  420449:	cmc    
  42044a:	and    al,0x62
  42044c:	fwait
  42044d:	push   edx
  42044e:	sbb    BYTE PTR [eax+edi*1+0x50],cl
  420452:	adc    bl,bl
  420454:	inc    eax
  420455:	or     DWORD PTR [ecx-0x5fc14036],0xf8c27afe
  42045f:	jle    0x420428
  420461:	sub    dh,BYTE PTR [ecx-0x766224f8]
  420467:	mov    ch,0x99
  420469:	hlt    
  42046a:	lock pop edi
  42046c:	adc    al,0x54
  42046e:	add    BYTE PTR [ebx],dl
  420470:	mov    eax,DWORD PTR [edi+0x1a5c3bbd]
  420476:	push   eax
  420477:	ds adc ebx,0x5c
  42047b:	adc    BYTE PTR [eax-0x7a55505d],ah
  420481:	ficomp WORD PTR [ebx+eiz*4-0x65]
  420485:	(bad)  
  420487:	adc    DWORD PTR [edx+0x7c],edi
  42048a:	dec    ecx
  42048b:	gs jge 0x4204d8
  42048e:	mov    ?,WORD PTR [ebx-0x342fc661]
  420494:	int    0x98
  420496:	test   al,0xfc
  420498:	dec    esi
  420499:	and    eax,0x1aa9d0a0
  42049e:	sub    dl,BYTE PTR [eax+0x5f513b26]
  4204a4:	push   0xffffffe9
  4204a6:	pop    ebx
  4204a7:	jns    0x42042a
  4204a9:	stc    
  4204aa:	lods   al,BYTE PTR ds:[esi]
  4204ab:	stos   BYTE PTR es:[edi],al
  4204ac:	(bad)  
  4204ad:	outs   dx,BYTE PTR ds:[esi]
  4204ae:	pop    ebp
  4204af:	push   cs
  4204b0:	hlt    
  4204b1:	or     dh,BYTE PTR [ecx]
  4204b3:	cwde   
  4204b4:	push   ss
  4204b5:	stos   DWORD PTR es:[edi],eax
  4204b6:	cld    
  4204b7:	pop    eax
  4204b8:	adc    eax,0x5128e62
  4204bd:	aad    0x1e
  4204bf:	addr16 sbb eax,0xb362a61d
  4204c5:	xor    ch,BYTE PTR [ebp+eax*4+0x69]
  4204c9:	and    eax,0xc0b3192
  4204ce:	jmp    0x7ae8d0fb
  4204d3:	cmp    al,0xb6
  4204d5:	stos   BYTE PTR es:[edi],al
  4204d6:	test   eax,0xf6b8704a
  4204db:	xor    BYTE PTR [eax-0x30aa1238],cl
  4204e1:	sbb    BYTE PTR [edi+0x15],ch
  4204e4:	stc    
  4204e5:	pop    edx
  4204e6:	test   eax,0x512aadad
  4204eb:	aaa    
  4204ec:	and    al,0xf0
  4204ee:	pop    ecx
  4204ef:	or     esp,DWORD PTR [edi]
  4204f1:	and    edx,edx
  4204f3:	fst    QWORD PTR [edx]
  4204f5:	xor    eax,0x4797247b
  4204fa:	or     edi,esi
  4204fc:	dec    esp
  4204fd:	jb     0x420544
  4204ff:	pop    es
  420500:	add    cl,BYTE PTR [ebp-0x6597386a]
  420506:	xchg   edi,eax
  420507:	push   ds
  420508:	pop    eax
  420509:	push   edi
  42050a:	ja     0x4204b8
  42050c:	dec    ebp
  42050d:	das    
  42050e:	push   cs
  42050f:	xchg   edi,eax
  420510:	retf   0xbf86
  420513:	int3   
  420514:	and    al,BYTE PTR [esi-0x19223248]
  42051a:	lfs    ebx,FWORD PTR [bp+si+0x8d8]
  420520:	sub    edi,edx
  420522:	jge    0x4204c6
  420524:	pop    ds
  420525:	(bad)  
  420527:	aaa    
  420528:	adc    al,ah
  42052a:	jne    0x420563
  42052c:	lods   eax,DWORD PTR ds:[esi]
  42052d:	nop
  42052e:	xor    BYTE PTR [esi],dl
  420530:	or     dh,BYTE PTR [ebp+0x79b59b9]
  420536:	mov    cl,0x51
  420538:	add    dl,BYTE PTR [edi+0x173b09c4]
  42053e:	xchg   esp,eax
  42053f:	fisttp WORD PTR [ecx]
  420541:	lds    edi,FWORD PTR [esi+0x36e7e918]
  420547:	nop
  420548:	adc    al,0x4c
  42054a:	push   ds
  42054b:	jmp    0x4205b9
  42054d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42054e:	das    
  42054f:	pop    edi
  420550:	shl    esp,cl
  420552:	ins    BYTE PTR es:[edi],dx
  420553:	sbb    cl,BYTE PTR [edi-0xc]
  420556:	xchg   edx,eax
  420557:	repnz jmp 0xeb53:0x79d4c03
  42055f:	mov    eax,ds:0x72ad1a40
  420564:	sub    eax,0x8599375e
  420569:	dec    eax
  42056a:	xor    DWORD PTR [ecx],ecx
  42056c:	cdq    
  42056d:	ja     0x420540
  42056f:	sar    ch,cl
  420571:	rcr    BYTE PTR [esi],cl
  420573:	loop   0x42055f
  420575:	mov    ebx,0xaa4c16e0
  42057a:	fwait
  42057b:	les    eax,FWORD PTR [ebx+0x624e76c3]
  420581:	test   eax,0x58096a6b
  420586:	mov    ax,ax
  420589:	mov    al,0xa5
  42058b:	retf   0xf000
  42058e:	jecxz  0x42057c
  420590:	mov    dh,bh
  420592:	lds    esp,FWORD PTR [esi+0x22259763]
  420598:	nop
  420599:	pushf  
  42059a:	loope  0x420597
  42059c:	push   ebx
  42059d:	xor    eax,edx
  42059f:	lods   al,BYTE PTR ds:[esi]
  4205a0:	aad    0x54
  4205a2:	dec    edx
  4205a3:	mov    edi,0x192968eb
  4205a8:	mov    ecx,0x570991a0
  4205ad:	mov    dh,BYTE PTR [eax-0x33382779]
  4205b3:	fs mov esp,0x28ccac6b
  4205b9:	xor    eax,DWORD PTR [ebx+0xe]
  4205bc:	xchg   DWORD PTR [eax-0x6a559856],esp
  4205c2:	inc    ebx
  4205c3:	loope  0x42054d
  4205c5:	ds push ebx
  4205c7:	enter  0xb723,0x2b
  4205cb:	lea    esp,[ecx]
  4205cd:	call   0xd71baab6
  4205d2:	xchg   edi,eax
  4205d3:	mov    esi,0xd37f5a7e
  4205d8:	shr    BYTE PTR [ebx-0x4a],cl
  4205db:	test   ecx,eax
  4205dd:	mov    eax,ds:0x4a24511d
  4205e2:	clc    
  4205e3:	dec    edx
  4205e4:	(bad)  
  4205e5:	inc    ecx
  4205e6:	retf   
  4205e7:	jo     0x42058b
  4205e9:	and    edi,edi
  4205eb:	loopne 0x4205f9
  4205ed:	scas   eax,DWORD PTR es:[edi]
  4205ee:	(bad)  
  4205f0:	mov    es,WORD PTR [edx]
  4205f2:	iret   
  4205f3:	pop    ebp
  4205f4:	add    eax,DWORD PTR [ebx-0x10]
  4205f7:	addr16 mov edi,0x959ff628
  4205fd:	xor    edx,DWORD PTR [ebp+0x5dd46cd]
  420603:	adc    BYTE PTR [ebx],bl
  420605:	fmul   QWORD PTR [esi+0x28]
  420608:	lds    eax,FWORD PTR [ebx]
  42060a:	add    ebx,DWORD PTR ds:0x98b5b289
  420610:	dec    edx
  420611:	(bad)  
  420612:	push   eax
  420613:	pushf  
  420614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420615:	pop    es
  420616:	sbb    DWORD PTR [ebx*4+0x4423aca9],eax
  42061d:	lods   eax,DWORD PTR ds:[esi]
  42061e:	pop    ebx
  42061f:	stos   BYTE PTR es:[edi],al
  420620:	mov    eax,0x38b9c0f7
  420625:	xlat   BYTE PTR ds:[ebx]
  420626:	fistp  WORD PTR [edx-0x2e935c87]
  42062c:	das    
  42062d:	nop
  42062e:	add    eax,0x9cd696b9
  420633:	cmc    
  420634:	std    
  420635:	aaa    
  420636:	pusha  
  420637:	clc    
  420638:	xchg   DWORD PTR [esi+0x29],esi
  42063b:	dec    ebp
  42063c:	jmp    0x420692
  42063e:	jecxz  0x420613
  420640:	inc    ebx
  420641:	mov    ch,0x3e
  420643:	pop    ebx
  420644:	sub    edi,ebp
  420646:	test   BYTE PTR [edi-0x48340eae],0xe8
  42064d:	repnz sub eax,0x2e5af67e
  420653:	cs adc edx,0xa8b2dccc
  42065a:	cmp    eax,0x43e70385
  42065f:	loope  0x420672
  420661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420662:	std    
  420663:	lock sti 
  420665:	lods   eax,DWORD PTR ds:[esi]
  420666:	and    eax,0x306684f3
  42066b:	jae    0x420611
  42066d:	pop    esi
  42066e:	jecxz  0x4206e4
  420670:	dec    edi
  420671:	fisubr WORD PTR [edi-0x2e153fea]
  420677:	inc    ecx
  420678:	cmp    BYTE PTR [ecx],cl
  42067a:	daa    
  42067b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42067c:	loopne 0x4206c7
  42067e:	sbb    eax,DWORD PTR ds:[ebx+0x2d]
  420682:	fwait
  420683:	push   0x1cb6dfd6
  420688:	cmp    eax,0xebac8372
  42068d:	(bad)  
  42068f:	test   eax,0x6884f461
  420694:	retf   0xa4a0
  420697:	aam    0x97
  420699:	sbb    al,0x73
  42069b:	sahf   
  42069c:	and    DWORD PTR [ebp+0x689049fb],ebx
  4206a2:	jns    0x420701
  4206a4:	cmp    al,0x1e
  4206a6:	retf   
  4206a7:	cs dec ecx
  4206a9:	or     eax,DWORD PTR [edi]
  4206ab:	es js  0x4206eb
  4206ae:	push   ebx
  4206af:	mov    bh,0xbb
  4206b1:	cmp    eax,0x278767e
  4206b6:	or     al,0xcf
  4206b8:	aam    0x92
  4206ba:	pop    esi
  4206bb:	test   al,0xbf
  4206bd:	lods   al,BYTE PTR ds:[esi]
  4206be:	push   es
  4206bf:	fidivr DWORD PTR [ebx+0x7b2e5b3c]
  4206c5:	mov    al,0xb5
  4206c7:	imul   edx,DWORD PTR [ebp-0x57],0x47134e14
  4206ce:	fldlg2 
  4206d0:	cmc    
  4206d1:	add    DWORD PTR [eax+eax*2],esp
  4206d4:	sub    eax,0x4a0539d6
  4206d9:	add    bl,dl
  4206db:	pop    edi
  4206dc:	(bad)  
  4206dd:	in     al,0x53
  4206df:	arpl   WORD PTR [edi],di
  4206e1:	ror    BYTE PTR [esi*1-0x374c6ddb],cl
  4206e8:	inc    esi
  4206e9:	rcr    BYTE PTR [edi],1
  4206eb:	iret   
  4206ec:	adc    cl,cl
  4206ee:	lea    edx,[eax-0x7991b44d]
  4206f4:	pop    edx
  4206f5:	ins    BYTE PTR es:[edi],dx
  4206f6:	pop    sp
  4206f8:	cmp    BYTE PTR [esi],0x6e
  4206fb:	int    0xda
  4206fd:	ficomp WORD PTR [edi-0x50]
  420700:	pop    ss
  420701:	cmc    
  420702:	xchg   edi,eax
  420703:	popf   
  420704:	inc    edx
  420705:	enter  0x1054,0xa3
  420709:	js     0x4206ec
  42070b:	xor    DWORD PTR [esi-0x2845542e],0x66b90b90
  420715:	ret    0x10de
  420718:	xlat   BYTE PTR ds:[ebx]
  420719:	mov    al,ds:0x44f97b48
  42071e:	outs   dx,BYTE PTR ds:[esi]
  42071f:	cwde   
  420720:	imul   eax,DWORD PTR [edi],0x1cd9f10c
  420726:	shr    esp,cl
  420728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420729:	inc    ecx
  42072a:	and    BYTE PTR [edi],ch
  42072c:	push   edi
  42072d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072e:	into   
  42072f:	dec    ecx
  420730:	push   ebx
  420731:	aam    0xf9
  420733:	out    dx,eax
  420734:	xor    eax,0x4cb1ae3d
  420739:	sbb    ecx,ebx
  42073b:	mov    dl,0xed
  42073d:	push   0xffffffec
  42073f:	mov    ecx,0x6eaa7050
  420744:	aaa    
  420745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420746:	and    ch,dh
  420748:	sbb    BYTE PTR [edx+edi*8+0x28],ch
  42074c:	or     DWORD PTR [edi-0x55978271],0xffffff9c
  420753:	fdiv   st,st(4)
  420755:	jo     0x4207d4
  420757:	mov    ebx,0xf04eadb5
  42075c:	add    eax,0xfcb7be9b
  420761:	dec    esi
  420762:	fmul   DWORD PTR [edx+edi*4]
  420765:	fcom   QWORD PTR [edi-0x38]
  420768:	(bad)  
  420769:	cld    
  42076a:	test   BYTE PTR [ebx-0x33e266b9],cl
  420770:	daa    
  420771:	mov    al,ds:0x386d092b
  420776:	hlt    
  420777:	fwait
  420778:	aaa    
  420779:	dec    ebx
  42077a:	add    DWORD PTR [ecx+0x3dda7065],ecx
  420780:	test   eax,0x15a00cfc
  420785:	jl     0x4207df
  420787:	sub    al,0x12
  420789:	and    eax,0xbe9bed29
  42078e:	inc    esi
  42078f:	push   0xffffffd6
  420791:	test   BYTE PTR [ebp-0x1b89b20d],bh
  420797:	aad    0xaf
  420799:	div    BYTE PTR [edi-0x5f]
  42079c:	popa   
  42079d:	in     eax,0x9b
  42079f:	rcr    ecx,0xc4
  4207a2:	xchg   edx,eax
  4207a3:	mov    ebx,0xc2d1018f
  4207a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207a9:	lods   al,BYTE PTR ds:[esi]
  4207aa:	es sub al,0x45
  4207ad:	xchg   ebx,eax
  4207ae:	mov    edx,0x5001deeb
  4207b3:	jge    0x420739
  4207b5:	pop    ds
  4207b6:	scas   eax,DWORD PTR es:[edi]
  4207b7:	inc    esi
  4207b8:	xor    DWORD PTR [esi+ecx*8+0x38f1078b],edx
  4207bf:	repnz or edx,DWORD PTR [edi+esi*1]
  4207c3:	xchg   ecx,eax
  4207c4:	test   eax,0x7ca49156
  4207c9:	mov    dl,cl
  4207cb:	data16 or BYTE PTR [eax-0x1b],bh
  4207cf:	(bad)  
  4207d0:	mov    eax,0xfc77c818
  4207d5:	and    al,0xd3
  4207d7:	imul   ebp,DWORD PTR [ebx+0x23],0x156d6e91
  4207de:	call   0x84cbfe71
  4207e3:	adc    DWORD PTR [ebx+0x2b059a16],eax
  4207e9:	xchg   ebp,eax
  4207ea:	sbb    esp,ecx
  4207ec:	(bad)  [eax+0x23663bf6]
  4207f2:	pushf  
  4207f3:	xchg   edi,eax
  4207f4:	imul   edx,DWORD PTR [edi-0x42],0x39b61168
  4207fb:	jmp    0xea0344cb
  420800:	je     0x420850
  420802:	dec    edx
  420803:	xchg   edi,eax
  420804:	sar    cl,1
  420806:	lock cmc 
  420808:	dec    edx
  420809:	loopne 0x420799
  42080b:	cdq    
  42080c:	call   0x892d1f36
  420811:	call   0xd059:0xa972a359
  420818:	push   cs
  420819:	shr    BYTE PTR [edi-0x35],1
  42081c:	jl     0x420858
  42081e:	fucomp st(7)
  420820:	in     al,0xa5
  420822:	jle    0x4207f8
  420824:	xchg   edi,eax
  420825:	repz aaa 
  420827:	xor    al,0x3
  420829:	mov    ebx,0x5b6a0910
  42082e:	loop   0x42083d
  420830:	or     ebx,DWORD PTR [edx-0x54a7f652]
  420836:	inc    esi
  420837:	shl    DWORD PTR [ebx-0x26],1
  42083a:	arpl   bx,sp
  42083c:	add    DWORD PTR [esi-0x67d05913],eax
  420842:	jae    0x420890
  420844:	push   ebp
  420845:	sbb    eax,0xe7080814
  42084a:	lods   al,BYTE PTR ds:[esi]
  42084b:	pop    ebp
  42084c:	inc    esi
  42084d:	mov    dl,0x8f
  42084f:	fwait
  420850:	aam    0x2d
  420852:	repz or BYTE PTR [ebx],bh
  420855:	xchg   ebp,eax
  420856:	jne    0x42086c
  420858:	push   ds
  420859:	jmp    0x9e934ba7
  42085e:	mov    ebp,0x8ffa809d
  420863:	lahf   
  420864:	jmp    0x9403c938
  420869:	pop    es
  42086a:	xor    BYTE PTR [edx-0x5e],ah
  42086d:	adc    ch,BYTE PTR [ecx-0x42]
  420870:	iret   
  420871:	dec    edi
  420872:	dec    ecx
  420873:	pop    ss
  420874:	jl     0x420872
  420876:	mov    bl,0x6c
  420878:	jne    0x420817
  42087a:	sub    eax,0x806a64fe
  42087f:	fcom   st(3)
  420881:	enter  0x9f44,0xe1
  420885:	fdiv   QWORD PTR fs:[ebp-0x6e153bd2]
  42088c:	or     al,BYTE PTR [ecx]
  42088e:	mov    ax,0x2317
  420892:	(bad)  
  420894:	jl     0x4208bf
  420896:	add    ebx,DWORD PTR [ecx-0x31]
  420899:	xchg   ecx,eax
  42089a:	pop    edi
  42089b:	xchg   edi,eax
  42089c:	cmc    
  42089d:	mov    ds:0x84ec9534,eax
  4208a2:	out    0xa1,al
  4208a4:	cmp    esp,DWORD PTR [edx+0x15]
  4208a7:	sti    
  4208a8:	xor    edi,DWORD PTR [eax-0x53]
  4208ab:	xor    ebx,DWORD PTR [edi-0x719530a7]
  4208b1:	dec    edx
  4208b2:	cmp    eax,DWORD PTR [ecx-0x59]
  4208b5:	ret    0x1f94
  4208b8:	clc    
  4208b9:	ins    BYTE PTR es:[edi],dx
  4208ba:	in     al,0xc8
  4208bc:	(bad)  
  4208bd:	fsubp  st(7),st
  4208bf:	push   esi
  4208c0:	mov    ds:0xbdfd63ce,eax
  4208c5:	lods   eax,DWORD PTR ds:[esi]
  4208c6:	xor    ch,bl
  4208c8:	(bad)  
  4208c9:	aad    0xde
  4208cb:	retf   
  4208cc:	sbb    BYTE PTR [esp+eax*4+0x3e],bh
  4208d0:	pop    eax
  4208d1:	jecxz  0x42088f
  4208d3:	mov    bh,0x59
  4208d5:	ret    
  4208d6:	call   DWORD PTR [esi+0x7d]
  4208d9:	cmp    DWORD PTR [ebp+0x43bb43d0],ecx
  4208df:	xchg   ebx,eax
  4208e0:	mov    esi,esi
  4208e2:	inc    eax
  4208e3:	clc    
  4208e4:	pop    edx
  4208e5:	xor    BYTE PTR [edi-0x65009560],0xfb
  4208ec:	iret   
  4208ed:	inc    DWORD PTR [ecx+eiz*8-0x7f64aa3d]
  4208f4:	sbb    ecx,DWORD PTR [edi]
  4208f6:	jns    0x42087b
  4208f8:	pop    eax
  4208f9:	mov    ds,WORD PTR [edi]
  4208fb:	sbb    BYTE PTR [esi],ch
  4208fd:	push   ecx
  4208fe:	ss (bad) 
  420900:	sub    dh,ch
  420902:	mov    edi,0x74d70063
  420907:	inc    edx
  420908:	inc    esi
  420909:	adc    ah,BYTE PTR [esi-0xe]
  42090c:	rcr    DWORD PTR [ebx-0x71],cl
  42090f:	push   esp
  420910:	or     BYTE PTR [esi+0x1e504397],al
  420916:	push   ebx
  420917:	aas    
  420918:	dec    edx
  420919:	dec    edx
  42091a:	mov    esi,0xcad268f3
  42091f:	mov    ds:0x27a6e3d0,eax
  420924:	jo     0x420992
  420926:	xlat   BYTE PTR ds:[ebx]
  420927:	push   esi
  420928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420929:	xor    ah,ah
  42092b:	mov    ebp,ebp
  42092d:	inc    esp
  42092e:	add    ebp,eax
  420930:	repnz fs dec edi
  420933:	xor    ecx,ebp
  420935:	pop    esp
  420936:	push   ebp
  420937:	inc    ecx
  420938:	(bad)  
  420939:	ror    DWORD PTR [esi-0x49],cl
  42093c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42093d:	shl    DWORD PTR [ebx],1
  42093f:	xchg   al,bh
  420941:	mov    ah,0x2b
  420943:	or     ebx,DWORD PTR [esp+ecx*1+0x1c7c28a8]
  42094a:	adc    bl,BYTE PTR [ebp-0x70c16a96]
  420950:	fs sbb al,0x78
  420953:	xchg   esp,eax
  420954:	mov    ebx,0x259b0621
  420959:	popf   
  42095a:	pop    es
  42095b:	xchg   edi,eax
  42095c:	pop    ebx
  42095d:	or     DWORD PTR [ebx+ecx*8-0x22b036af],esp
  420964:	xor    ebx,DWORD PTR [esi]
  420966:	inc    ebx
  420967:	test   eax,0xe0a9c523
  42096c:	js     0x4209e9
  42096e:	dec    ebx
  42096f:	outs   dx,BYTE PTR ds:[esi]
  420970:	pop    eax
  420971:	jmp    0xae6a79de
  420976:	iret   
  420977:	sub    ebp,DWORD PTR [ecx]
  420979:	inc    ecx
  42097a:	or     DWORD PTR [ecx+0xa0f58da],0xa4cf26b9
  420984:	adc    DWORD PTR [ebp+edi*2+0x4d],esi
  420988:	dec    edi
  420989:	imul   eax,DWORD PTR [esi+0x46fc2b91],0x706ed25a
  420993:	fwait
  420994:	mov    dl,0x7a
  420996:	imul   ah
  420998:	in     eax,dx
  420999:	fldl2e 
  42099b:	add    al,0x8b
  42099d:	lods   al,BYTE PTR ds:[esi]
  42099e:	iret   
  42099f:	sbb    BYTE PTR [esi+0x1b1fef22],dh
  4209a5:	int    0xdb
  4209a7:	test   al,0xfd
  4209a9:	icebp  
  4209aa:	es inc ebp
  4209ac:	cmc    
  4209ad:	sti    
  4209ae:	fistp  DWORD PTR [edx+0x23e86f29]
  4209b4:	sub    ch,BYTE PTR [eax]
  4209b6:	out    0x94,al
  4209b8:	mov    BYTE PTR [edi+0x15],dh
  4209bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209bc:	inc    ecx
  4209bd:	cmp    al,bh
  4209bf:	dec    ecx
  4209c0:	pop    esi
  4209c1:	mov    bl,0x13
  4209c3:	loope  0x420a25
  4209c5:	add    DWORD PTR [ebx-0x13],ebp
  4209c8:	cmp    ebx,ecx
  4209ca:	fstp   QWORD PTR [eax]
  4209cc:	ins    BYTE PTR es:[edi],dx
  4209cd:	jge    0x4209c8
  4209cf:	lea    ebx,[ecx]
  4209d1:	sub    dl,BYTE PTR ds:0x5161b3c9
  4209d7:	sub    BYTE PTR [ebx+esi*4+0x34],dl
  4209db:	mov    edi,0x9b937e8f
  4209e0:	in     al,0x27
  4209e2:	push   es
  4209e3:	pop    es
  4209e4:	pop    ss
  4209e5:	and    edi,ecx
  4209e7:	push   ds
  4209e8:	add    eax,0xf4d88aa3
  4209ed:	aaa    
  4209ee:	lods   al,BYTE PTR ds:[esi]
  4209ef:	sub    al,0x12
  4209f1:	mov    edx,eax
  4209f3:	mov    esi,esi
  4209f5:	dec    edx
  4209f6:	in     eax,dx
  4209f7:	or     DWORD PTR [eax-0x1d12d84f],ebp
  4209fd:	mov    bh,BYTE PTR [eax-0x14c108e]
  420a03:	ja     0x4209ec
  420a05:	int    0xc0
  420a07:	push   cs
  420a08:	dec    ebx
  420a09:	xor    ebp,DWORD PTR [esi]
  420a0b:	adc    ecx,edx
  420a0d:	mov    eax,0x7870331
  420a12:	jns    0x420a23
  420a14:	fstp   DWORD PTR [ebp+edi*8-0x52c6ea74]
  420a1b:	adc    bl,BYTE PTR [edi+0x60aadb36]
  420a21:	or     eax,0xd42636e9
  420a26:	mov    al,0xb3
  420a28:	or     BYTE PTR [ebp-0x5e],0x8e
  420a2c:	popf   
  420a2d:	popa   
  420a2e:	jmp    0x420a19
  420a30:	gs out 0x6a,eax
  420a33:	add    eax,0x547bcd99
  420a38:	push   ebp
  420a39:	pop    ebx
  420a3a:	xor    BYTE PTR [esi],0x41
  420a3d:	pop    ebp
  420a3e:	call   0x2da487ff
  420a43:	mov    ah,0x26
  420a45:	push   cs
  420a46:	pop    ss
  420a47:	pop    esp
  420a48:	pusha  
  420a49:	or     dl,BYTE PTR ds:0xc79cc4cd
  420a4f:	push   cs
  420a50:	xor    eax,DWORD PTR [edx+eax*8+0x920715c]
  420a57:	or     eax,ebp
  420a59:	cs fwait
  420a5b:	scas   al,BYTE PTR es:[edi]
  420a5c:	out    dx,al
  420a5d:	mov    ebp,0x8a40302d
  420a62:	pop    ecx
  420a63:	lods   al,BYTE PTR ds:[esi]
  420a64:	adc    ch,BYTE PTR [esi]
  420a66:	in     eax,0x46
  420a68:	jns    0x420a2c
  420a6a:	push   esp
  420a6b:	mov    eax,0x9161c44b
  420a70:	call   0x947d:0xe76cab6b
  420a77:	mov    dl,0x64
  420a79:	out    0x66,eax
  420a7b:	scas   eax,DWORD PTR es:[edi]
  420a7c:	fidiv  DWORD PTR [eax+0x3b0230f]
  420a82:	adc    DWORD PTR [ebx+0x38],ebx
  420a85:	push   esp
  420a86:	sub    al,0xbd
  420a88:	fimul  WORD PTR [eax]
  420a8a:	out    0xf7,al
  420a8c:	cld    
  420a8d:	rcr    BYTE PTR [edi],1
  420a8f:	retf   
  420a90:	test   eax,0x3ef6400a
  420a95:	ins    WORD PTR es:[edi],dx
  420a97:	sbb    BYTE PTR [ecx],0xb2
  420a9a:	xor    eax,DWORD PTR [edx+0x7d]
  420a9d:	icebp  
  420a9e:	dec    eax
  420a9f:	or     bl,BYTE PTR [ebx]
  420aa1:	mul    cl
  420aa3:	inc    ebp
  420aa4:	sbb    edi,ebx
  420aa6:	cdq    
  420aa7:	sar    BYTE PTR [eax-0x2fe445e5],1
  420aad:	mov    ch,0x67
  420aaf:	fucom  st(5)
  420ab1:	jb     0x420a7d
  420ab3:	(bad)  
  420ab4:	mov    edx,0x2230d7bc
  420ab9:	out    dx,eax
  420aba:	xchg   esp,eax
  420abb:	push   ebx
  420abc:	xor    ecx,DWORD PTR [eax]
  420abe:	jp     0x420a8d
  420ac0:	fbld   TBYTE PTR [ebx+0x65]
  420ac3:	dec    esp
  420ac4:	mov    eax,0x69aaa6e6
  420ac9:	jg     0x420a9f
  420acb:	add    ebp,DWORD PTR [esi]
  420acd:	ret    
  420ace:	add    eax,0xb44850ca
  420ad3:	add    al,0xb6
  420ad5:	cmp    DWORD PTR [eax+ebp*4-0x5e8e69d4],ebp
  420adc:	mov    ss,esi
  420ade:	and    ebp,DWORD PTR [esi]
  420ae0:	mov    esp,0x2e55a79a
  420ae5:	outs   dx,BYTE PTR ds:[esi]
  420ae6:	lods   al,BYTE PTR ds:[esi]
  420ae7:	ja     0x420af0
  420ae9:	mov    dh,0x56
  420aeb:	repz out dx,eax
  420aed:	sbb    eax,0xb1403e4b
  420af2:	lahf   
  420af3:	or     al,0xf1
  420af5:	xchg   esi,eax
  420af6:	or     al,0x6f
  420af8:	rol    ecx,1
  420afa:	pop    es
  420afb:	mov    ds,WORD PTR [ecx-0x7b]
  420afe:	out    0x74,eax
  420b00:	mov    edx,0x1430b0e3
  420b05:	shl    DWORD PTR [ebp+0x7e],1
  420b08:	cmp    al,0x82
  420b0a:	scas   eax,DWORD PTR es:[edi]
  420b0b:	mov    WORD PTR [ecx+esi*4-0x5c],fs
  420b0f:	jl     0x420ada
  420b11:	sar    ebp,cl
  420b13:	and    esp,DWORD PTR [edx+0x21]
  420b16:	iret   
  420b17:	les    ebp,FWORD PTR [esi+edx*4]
  420b1a:	test   DWORD PTR [eax+0x64],0x1b12bb92
  420b21:	jae    0x420afb
  420b23:	pusha  
  420b24:	ss clc 
  420b26:	dec    eax
  420b27:	and    al,0x2f
  420b29:	or     eax,0x55e7cdc7
  420b2e:	das    
  420b2f:	shl    ch,cl
  420b31:	inc    esi
  420b32:	out    dx,eax
  420b33:	mov    eax,0xc96fd3e6
  420b38:	or     DWORD PTR [esi-0x7b],eax
  420b3b:	adc    DWORD PTR [ebp+0x3a],edx
  420b3e:	loope  0x420b7e
  420b40:	outs   dx,BYTE PTR ds:[esi]
  420b41:	out    dx,eax
  420b42:	and    al,0xb1
  420b44:	cdq    
  420b45:	fwait
  420b46:	call   0x8464:0x550a3786
  420b4d:	retf   0x6b6
  420b50:	mov    dl,0x5
  420b52:	xor    edi,DWORD PTR [ecx]
  420b54:	data16 cli 
  420b56:	popa   
  420b57:	clc    
  420b58:	fadd   DWORD PTR ds:0x9840dd85
  420b5e:	pusha  
  420b5f:	(bad)  
  420b60:	sbb    eax,0x74abd15d
  420b65:	repz rol edx,1
  420b68:	jmp    0x4c37592a
  420b6d:	clc    
  420b6e:	out    0x32,eax
  420b70:	stc    
  420b71:	push   edx
  420b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b73:	aaa    
  420b74:	ret    
  420b75:	jae    0x420bd0
  420b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b78:	mov    cl,0xc1
  420b7a:	popf   
  420b7b:	fs mov dl,0x59
  420b7e:	jno    0x420be1
  420b80:	mov    WORD PTR [esi+esi*1+0x8],ds
  420b84:	cmp    DWORD PTR [esi],esi
  420b86:	mov    eax,0x7b9aa721
  420b8b:	xchg   ecx,eax
  420b8c:	ins    DWORD PTR es:[edi],dx
  420b8d:	test   al,0x19
  420b8f:	adc    BYTE PTR [ebp+0x740d2f82],dl
  420b95:	or     eax,0xc8785336
  420b9a:	pop    edx
  420b9b:	call   0x5d14e45a
  420ba0:	mov    al,ds:0xe27f7e21
  420ba5:	push   0x14
  420ba7:	mov    edx,0xd4d80e13
  420bac:	push   ecx
  420bad:	ror    BYTE PTR [edi-0x3e3da197],0xa0
  420bb4:	inc    edx
  420bb5:	jb     0x420b4a
  420bb7:	ja     0x420b76
  420bb9:	jle    0x420c1d
  420bbb:	aam    0x56
  420bbd:	mov    ebx,0xba7999ae
  420bc2:	pushf  
  420bc3:	mov    al,ds:0x5d2615a2
  420bc8:	out    dx,eax
  420bc9:	xchg   esi,eax
  420bca:	add    DWORD PTR [ebx+ebp*4+0x7c2f07d0],ebp
  420bd1:	ins    DWORD PTR es:[edi],dx
  420bd2:	mov    bh,0x9b
  420bd4:	push   esp
  420bd5:	aaa    
  420bd6:	cmp    al,0x10
  420bd8:	jmp    0x420c09
  420bda:	inc    DWORD PTR [esi]
  420bdc:	and    BYTE PTR [eax+0x367bc022],cl
  420be2:	push   cs
  420be3:	or     al,0xe1
  420be5:	cwde   
  420be6:	aaa    
  420be7:	sbb    eax,0xfd210bc4
  420bec:	jecxz  0x420b7d
  420bee:	cmp    BYTE PTR [ebp-0x49efdaa],cl
  420bf4:	mov    ds:0xd83b91a0,al
  420bf9:	push   ebp
  420bfa:	out    dx,eax
  420bfb:	or     edx,DWORD PTR [ebx+0x73]
  420bfe:	fnsave [ebp-0x35]
  420c01:	add    eax,0x9474cb67
  420c06:	push   ecx
  420c07:	add    edi,DWORD PTR [esi+0x24]
  420c0a:	dec    edi
  420c0b:	arpl   WORD PTR [ebx-0x7a],dx
  420c0e:	cmp    al,0xb
  420c10:	mov    ebx,0xf8a59ee2
  420c15:	outs   dx,DWORD PTR ds:[esi]
  420c16:	add    bl,cl
  420c18:	aaa    
  420c19:	mov    al,ds:0x99369cd8
  420c1e:	pop    ebx
  420c1f:	pop    esi
  420c20:	fstp   TBYTE PTR [ecx+0x7c]
  420c23:	lods   eax,DWORD PTR ds:[esi]
  420c24:	or     eax,0xf2747705
  420c29:	es xchg edx,eax
  420c2b:	fstp   QWORD PTR [edi+0x0]
  420c2e:	out    0x7e,eax
  420c30:	bsf    edi,DWORD PTR [ecx]
  420c33:	cmp    al,0xf
  420c35:	pop    esp
  420c36:	out    dx,eax
  420c37:	push   esi
  420c38:	retf   
  420c39:	lds    ebp,FWORD PTR [edx+eiz*2-0x43]
  420c3d:	mov    cl,0xc
  420c3f:	xlat   BYTE PTR ds:[ebx]
  420c40:	push   ebp
  420c41:	aas    
  420c42:	fwait
  420c43:	aas    
  420c44:	jnp    0x420c5b
  420c46:	add    eax,0xab211835
  420c4b:	jno    0x420c67
  420c4d:	xor    al,0x91
  420c4f:	(bad)  
  420c50:	popf   
  420c51:	cmp    BYTE PTR [edi],ch
  420c53:	ins    DWORD PTR es:[edi],dx
  420c54:	out    0xaa,eax
  420c56:	(bad)  
  420c57:	cmp    edi,esi
  420c59:	fdivr  DWORD PTR [esi]
  420c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5c:	mov    dl,0x31
  420c5e:	add    edi,DWORD PTR [edi]
  420c60:	dec    ebp
  420c61:	mov    eax,ds:0xaeff4f6a
  420c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c67:	cwde   
  420c68:	adc    bl,BYTE PTR [esi-0x9]
  420c6b:	sub    bl,BYTE PTR [eax+0x10dfa6f8]
  420c71:	jo     0x420cba
  420c73:	sahf   
  420c74:	mov    DWORD PTR [esi+0x20],ebx
  420c77:	mov    cl,0x6a
  420c79:	dec    edi
  420c7a:	frstor [edx-0x2a]
  420c7d:	mov    edx,0xfe77aaac
  420c82:	retf   0x8053
  420c85:	scas   al,BYTE PTR es:[edi]
  420c86:	pop    edx
  420c87:	fst    DWORD PTR [edx*1-0x1c9f7de0]
  420c8e:	int3   
  420c8f:	clc    
  420c90:	adc    al,0x22
  420c92:	ficom  WORD PTR [edx+esi*2-0x614cf08d]
  420c99:	jecxz  0x420c63
  420c9b:	inc    esi
  420c9c:	add    ebp,ebx
  420c9e:	and    BYTE PTR [eax-0x7f],ah
  420ca1:	ret    
  420ca2:	or     al,0x40
  420ca4:	dec    eax
  420ca5:	in     al,0x4
  420ca7:	enter  0x1a48,0xe9
  420cab:	dec    edi
  420cac:	stos   BYTE PTR es:[edi],al
  420cad:	lahf   
  420cae:	fbld   TBYTE PTR [esi]
  420cb0:	push   esi
  420cb1:	test   DWORD PTR [esi-0x1b],ecx
  420cb4:	aas    
  420cb5:	or     DWORD PTR [ecx-0x22],ebp
  420cb8:	mov    bl,0xb2
  420cba:	xchg   bh,al
  420cbc:	cmp    DWORD PTR [esi+0x6e66d19b],esp
  420cc2:	addr16 and cl,dl
  420cc5:	cmp    ecx,edi
  420cc7:	lahf   
  420cc8:	call   0x3b00:0x444f4a5f
  420ccf:	sub    bl,bh
  420cd1:	test   eax,0xdd2cdf66
  420cd6:	inc    esi
  420cd7:	jbe    0x420d42
  420cd9:	dec    ebx
  420cda:	and    ch,BYTE PTR [edx]
  420cdc:	mov    eax,edi
  420cde:	cs jmp 0x567a:0x25c66dd3
  420ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce7:	pop    ebp
  420ce8:	test   ah,ch
  420cea:	jge    0x420c76
  420cec:	push   ecx
  420ced:	stos   DWORD PTR es:[edi],eax
  420cee:	fadd   st(5),st
  420cf0:	mov    dl,bl
  420cf2:	push   edx
  420cf3:	je     0x420d35
  420cf5:	cmp    ebx,ebp
  420cf7:	ficomp DWORD PTR [ecx-0x490a1426]
  420cfd:	test   al,0x70
  420cff:	rol    BYTE PTR [eax+0x27],0x3d
  420d03:	popa   
  420d04:	add    DWORD PTR [edx+0x19],esp
  420d07:	and    esi,DWORD PTR [ebx-0x54]
  420d0a:	or     al,0xad
  420d0c:	push   cs
  420d0d:	dec    edi
  420d0e:	clc    
  420d0f:	sbb    al,0x95
  420d11:	data16 cli 
  420d13:	pop    ss
  420d14:	dec    edi
  420d15:	gs leave 
  420d17:	sub    eax,0x2432e866
  420d1c:	jno    0x420d4a
  420d1e:	cmp    eax,0x24f3ea13
  420d23:	outs   dx,DWORD PTR ds:[esi]
  420d24:	xchg   edx,eax
  420d25:	dec    ebp
  420d26:	mov    ah,0xc5
  420d28:	mov    ebx,0xfaf9a379
  420d2d:	inc    edi
  420d2e:	aas    
  420d2f:	dec    ecx
  420d30:	mov    WORD PTR [edx+edi*8],gs
  420d33:	pop    edi
  420d34:	sar    DWORD PTR [esi+esi*2],1
  420d37:	inc    ebp
  420d38:	push   ecx
  420d39:	das    
  420d3a:	in     eax,0x0
  420d3c:	or     DWORD PTR [edx],edx
  420d3e:	jbe    0x420d37
  420d40:	dec    esp
  420d41:	dec    esi
  420d42:	adc    ch,cl
  420d44:	mov    eax,0x73561b8c
  420d49:	jl     0x420d64
  420d4b:	adc    ah,BYTE PTR ds:0xd875fe55
  420d51:	mov    dh,0x69
  420d53:	rol    DWORD PTR [edx+edi*4],cl
  420d56:	dec    edi
  420d57:	mov    ch,0x40
  420d59:	(bad)  
  420d5a:	shl    ah,cl
  420d5c:	clc    
  420d5d:	(bad)  [esp+edi*1+0x7b]
  420d61:	or     al,0x7
  420d63:	je     0x420d6b
  420d65:	sub    al,0xe
  420d67:	push   edi
  420d68:	xchg   DWORD PTR [edi+esi*2-0x64],edi
  420d6c:	or     cl,BYTE PTR [ebx-0x77455684]
  420d72:	jg     0x420d2c
  420d74:	out    dx,al
  420d75:	arpl   WORD PTR [ecx+0x9c30daa],sp
  420d7b:	fsub   QWORD PTR [ebx-0x3e]
  420d7e:	push   edi
  420d7f:	mov    bh,0xc6
  420d81:	sub    ebx,0x36a5f8ab
  420d87:	mov    ah,0x2c
  420d89:	ins    DWORD PTR es:[edi],dx
  420d8a:	push   ds
  420d8b:	mov    dl,0x10
  420d8d:	jne    0x420d70
  420d8f:	mov    ah,0x33
  420d91:	aaa    
  420d92:	pop    eax
  420d93:	ins    BYTE PTR es:[edi],dx
  420d94:	xchg   esp,eax
  420d95:	jbe    0x420d2a
  420d97:	cdq    
  420d98:	outs   dx,BYTE PTR ds:[esi]
  420d99:	das    
  420d9a:	inc    ebx
  420d9b:	jl     0x420d31
  420d9d:	sbb    bh,BYTE PTR [ebp+0x15419f24]
  420da3:	mov    al,ds:0x4cd117fd
  420da8:	mov    esp,0x8d16e964
  420dad:	icebp  
  420dae:	std    
  420daf:	test   ah,0xe7
  420db2:	rcl    BYTE PTR [esi-0x42449afb],cl
  420db8:	mov    ebp,0xea29c2fb
  420dbd:	push   cs
  420dbe:	ds dec eax
  420dc0:	scas   al,BYTE PTR es:[edi]
  420dc1:	call   0xe2a481e7
  420dc6:	mov    BYTE PTR [eax-0x15],0x51
  420dca:	mov    dl,0xd5
  420dcc:	mov    edi,0x91fc487b
  420dd1:	sbb    al,0xd3
  420dd3:	data16 (bad) 
  420dd5:	es popf 
  420dd7:	test   DWORD PTR [eax+ecx*2+0xa],esp
  420ddb:	pop    edx
  420ddc:	mov    ebx,0x9f5fcdfa
  420de1:	sbb    al,0x21
  420de3:	inc    eax
  420de4:	outs   dx,BYTE PTR ds:[esi]
  420de5:	xchg   edx,eax
  420de6:	sbb    al,0x92
  420de8:	pop    ds
  420de9:	jnp    0x420db7
  420deb:	pop    ebp
  420dec:	add    BYTE PTR [edx-0x4d],0x72
  420df0:	bound  ebp,QWORD PTR [edi+ecx*4+0x3e]
  420df4:	inc    esi
  420df5:	shl    DWORD PTR [ecx-0x70fb7121],0x7
  420dfc:	push   0xffffffa7
  420dfe:	cld    
  420dff:	test   BYTE PTR [ecx+0x35a24f22],dl
  420e05:	jns    0x420dea
  420e07:	test   eax,0x6a732da1
  420e0c:	push   esp
  420e0d:	push   edx
  420e0e:	outs   dx,BYTE PTR ds:[esi]
  420e0f:	pop    ss
  420e10:	stos   DWORD PTR es:[edi],eax
  420e11:	cmp    ecx,DWORD PTR [eax]
  420e13:	adc    eax,DWORD PTR [edi]
  420e15:	jg     0x420e26
  420e17:	icebp  
  420e18:	repz mov eax,0xc67cbaa9
  420e1e:	mov    dh,BYTE PTR [eax+0x1]
  420e21:	cmp    al,0x8e
  420e23:	jecxz  0x420e46
  420e25:	xor    BYTE PTR [edx+eax*2],0xee
  420e29:	retf   
  420e2a:	mov    edi,0xe7cd521f
  420e2f:	repz jb 0x420e8d
  420e32:	or     BYTE PTR [esi-0x67e32efe],cl
  420e38:	(bad)  
  420e39:	js     0x420e3d
  420e3b:	jp     0x420dcd
  420e3d:	push   ds
  420e3e:	sti    
  420e3f:	imul   ecx,DWORD PTR [ebx+edx*8+0xb],0xffffffa8
  420e44:	inc    ebp
  420e45:	add    BYTE PTR [edi+0x342026a7],dl
  420e4b:	cmp    ah,BYTE PTR [edx-0x1db7f8b1]
  420e51:	mov    al,BYTE PTR [ebx]
  420e53:	ss xchg ebp,eax
  420e55:	or     al,0x19
  420e57:	cwde   
  420e58:	and    al,0xc5
  420e5a:	aam    0x6c
  420e5c:	push   cs
  420e5d:	or     DWORD PTR [edi+ebp*8+0x316d707c],esi
  420e64:	and    BYTE PTR [eax],0x5e
  420e67:	push   0x33827ce
  420e6c:	mov    edi,0x29fc3c01
  420e71:	jbe    0x420e4e
  420e73:	push   ebp
  420e74:	dec    ecx
  420e75:	in     al,0x8a
  420e77:	jge    0x420ea3
  420e79:	nop
  420e7a:	popf   
  420e7b:	xchg   esi,eax
  420e7c:	jl     0x420edd
  420e7e:	pop    eax
  420e7f:	push   ecx
  420e80:	cli    
  420e81:	or     cl,BYTE PTR [edx-0x69e25db4]
  420e87:	mov    eax,0x8179978e
  420e8c:	mov    ds:0x411fec48,eax
  420e91:	pop    esp
  420e92:	out    dx,eax
  420e93:	pop    ds
  420e94:	fist   WORD PTR [edx]
  420e96:	int3   
  420e97:	mov    esi,0x65555f80
  420e9c:	xchg   ebp,eax
  420e9d:	xchg   ecx,eax
  420e9e:	mov    edi,0x165a777f
  420ea3:	pusha  
  420ea4:	imul   edi,DWORD PTR [ebp+0x5a],0x1b
  420ea8:	jb     0x420eb7
  420eaa:	xchg   BYTE PTR [edx-0x31ea4558],dh
  420eb0:	mov    ?,ebp
  420eb2:	cmp    BYTE PTR [eax+eiz*4+0x37db723f],cl
  420eb9:	(bad)  
  420eba:	call   0x40a:0x6630f7df
  420ec1:	data16 outs dx,BYTE PTR ds:[esi]
  420ec3:	ja     0x420f29
  420ec5:	push   edi
  420ec6:	mov    ch,bh
  420ec8:	cmp    dh,BYTE PTR [ebx-0x75]
  420ecb:	ds hlt 
  420ecd:	jne    0x420f38
  420ecf:	or     BYTE PTR [ecx+0x62],0xcd
  420ed3:	jnp    0x420ebb
  420ed5:	cs mov esp,0x2649751
  420edb:	iret   
  420edc:	pop    edi
  420edd:	pop    ebx
  420ede:	lods   al,BYTE PTR ds:[esi]
  420edf:	ret    0xe40
  420ee2:	add    eax,0xaf9d2c
  420ee7:	scas   al,BYTE PTR es:[edi]
  420ee8:	ins    DWORD PTR es:[edi],dx
  420ee9:	jmp    0x420f69
  420eeb:	dec    ebp
  420eec:	mov    al,ds:0x395e0fa3
  420ef1:	fst    st(3)
  420ef3:	mov    edi,0xc27b1f66
  420ef8:	and    eax,0x2a3ff120
  420efd:	jl     0x420f5e
  420eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f00:	outs   dx,DWORD PTR ds:[esi]
  420f01:	popa   
  420f02:	or     al,0x1a
  420f04:	xchg   DWORD PTR [edi+edx*4],esi
  420f07:	pop    eax
  420f08:	pop    edx
  420f09:	push   es
  420f0a:	or     BYTE PTR [eax+edx*8],cl
  420f0d:	or     DWORD PTR [ebp-0x3c076f44],0x10
  420f14:	jge    0x420ec5
  420f16:	or     ebx,edi
  420f18:	daa    
  420f19:	call   0x75a5:0x54b90ff8
  420f20:	inc    edi
  420f21:	lods   al,BYTE PTR ds:[esi]
  420f22:	or     DWORD PTR [eax+0x2490028b],ebx
  420f28:	mov    esp,DWORD PTR [eax+0x48]
  420f2b:	fnstenv [eax-0x743e6310]
  420f31:	sub    al,0xfe
  420f33:	or     BYTE PTR ds:0x6db3ce52,bl
  420f39:	jecxz  0x420f28
  420f3b:	mov    edi,0x1a71b765
  420f40:	push   DWORD PTR gs:[ecx-0x644dd1a5]
  420f47:	cdq    
  420f48:	mov    al,0x8d
  420f4a:	xchg   ebx,eax
  420f4b:	in     al,dx
  420f4c:	int    0x69
  420f4e:	jge    0x420f3c
  420f50:	sub    BYTE PTR [ebx],dl
  420f52:	in     al,0x84
  420f54:	xchg   DWORD PTR [ebx],edi
  420f56:	add    BYTE PTR [ebp-0x4c1e2413],bh
  420f5c:	ret    0xdecb
  420f5f:	je     0x420f23
  420f61:	les    esi,FWORD PTR ds:0x385dccc6
  420f67:	inc    edi
  420f68:	mov    bl,0xa7
  420f6a:	jno    0x420efe
  420f6c:	mov    eax,0xff60bc45
  420f71:	pop    ds
  420f72:	sub    al,0x8d
  420f74:	call   0xc6a8:0xb5a20c18
  420f7b:	cli    
  420f7c:	push   eax
  420f7d:	or     DWORD PTR [edx-0x5e],edi
  420f80:	mov    bl,0xde
  420f82:	arpl   WORD PTR [edi-0x399193b7],sp
  420f88:	add    dl,dl
  420f8a:	sbb    BYTE PTR [ecx+0x3e],bh
  420f8d:	ins    DWORD PTR es:[edi],dx
  420f8e:	call   0x1f37:0x2f568f82
  420f95:	push   es
  420f96:	mov    BYTE PTR [edi-0x39dabe88],ch
  420f9c:	ja     0x420f98
  420f9e:	ret    0x7a71
  420fa1:	cmp    al,BYTE PTR [edx+0x56]
  420fa4:	pushf  
  420fa5:	push   edx
  420fa6:	jl     0x420f31
  420fa8:	dec    esp
  420fa9:	outs   dx,DWORD PTR ds:[esi]
  420faa:	mov    al,0x8
  420fac:	adc    ch,dl
  420fae:	das    
  420faf:	shl    BYTE PTR [edx+0x1416500c],cl
  420fb5:	xchg   edx,eax
  420fb6:	loope  0x421021
  420fb8:	shl    bh,0x3
  420fbb:	mov    cs,WORD PTR [ecx-0x7e]
  420fbe:	mov    ds:0x9c37a128,al
  420fc3:	out    dx,eax
  420fc4:	std    
  420fc5:	ret    
  420fc6:	sahf   
  420fc7:	mov    eax,ecx
  420fc9:	aas    
  420fca:	jg     0x42100c
  420fcc:	(bad)  
  420fce:	repnz push esp
  420fd0:	pop    es
  420fd1:	push   es
  420fd2:	and    BYTE PTR [esi+0x3475b32d],al
  420fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd9:	dec    ecx
  420fda:	ror    BYTE PTR [edx+0xe20ef86],cl
  420fe0:	js     0x420fc2
  420fe2:	add    al,0x65
  420fe4:	psubusb mm5,QWORD PTR [edi]
  420fe7:	hlt    
  420fe8:	sub    ebp,DWORD PTR [ebp-0x5e]
  420feb:	mov    edi,0xd62ee64f
  420ff0:	lahf   
  420ff1:	(bad)  [ecx-0x73]
  420ff4:	sbb    DWORD PTR [eax+ebp*2-0x49ed39bf],ebp
  420ffb:	dec    ebp
  420ffc:	jg     0x421021
  420ffe:	push   ecx
  420fff:	dec    esi
  421001:	jb     0x42101f
  421003:	es pop eax
  421005:	xchg   edi,eax
  421006:	iret   
  421007:	gs out 0x63,al
  42100a:	add    dl,BYTE PTR [ebx+0x49dfe44f]
  421010:	gs xchg ebx,eax
  421012:	sub    edi,eax
  421014:	imul   edi,DWORD PTR [ebx+0x6d95b24e],0x58
  42101b:	es ins BYTE PTR es:[edi],dx
  42101d:	(bad)
  421021:	jb     0x421081
  421023:	jg     0x420fc7
  421025:	das    
  421026:	pop    ecx
  421027:	add    al,0xb0
  421029:	retf   0x6be2
  42102c:	xor    ebx,esp
  42102e:	retf   0x17d6
  421031:	jl     0x42105c
  421033:	inc    esi
  421034:	sub    DWORD PTR [edx-0x64],0x8187aaeb
  42103b:	mov    ebx,0x45841874
  421040:	in     al,dx
  421041:	loop   0x421089
  421043:	push   ss
  421044:	(bad)  
  421046:	enter  0x5be5,0x68
  42104a:	sub    eax,0xd543590b
  42104f:	outs   dx,BYTE PTR ds:[esi]
  421050:	push   ebp
  421051:	mov    al,0x95
  421053:	inc    edi
  421054:	mov    ss,WORD PTR [eax]
  421056:	pop    ss
  421057:	push   edi
  421058:	adc    ebp,esi
  42105a:	cmc    
  42105b:	and    DWORD PTR [ecx-0x5f],esp
  42105e:	mov    ebx,0x7cfb7baf
  421063:	mov    ebx,0x5207c547
  421068:	pop    ecx
  421069:	loop   0x420fff
  42106b:	push   0xc548f14
  421070:	adc    BYTE PTR [ebp+esi*1-0x3a],ah
  421074:	or     al,0xc7
  421076:	ret    
  421077:	fnstcw WORD PTR [ecx-0x70]
  42107a:	(bad)  
  42107b:	cs mov bx,0x673
  421080:	xor    eax,0x127d8ee4
  421085:	out    0xf1,eax
  421087:	mov    al,0x40
  421089:	inc    eax
  42108a:	and    DWORD PTR [ecx],esp
  42108c:	fisttp WORD PTR [ecx+edi*2]
  42108f:	pop    es
  421090:	pusha  
  421091:	push   ebp
  421092:	dec    eax
  421093:	in     eax,dx
  421094:	sbb    al,0x5d
  421096:	xchg   esp,eax
  421097:	int    0x5
  421099:	stos   BYTE PTR es:[edi],al
  42109a:	pop    es
  42109b:	pusha  
  42109c:	mov    WORD PTR [eax],?
  42109e:	push   ss
  42109f:	push   ebp
  4210a0:	mov    dl,0x70
  4210a2:	xor    al,0xc
  4210a4:	or     BYTE PTR [edx-0x37],bl
  4210a7:	cmp    BYTE PTR [ebp+0x15c2593d],dl
  4210ad:	jne    0x421054
  4210af:	jno    0x4210d9
  4210b1:	shl    DWORD PTR [ebp+0x69],0xf3
  4210b5:	mov    edx,edi
  4210b7:	fcmovnbe st,st(3)
  4210b9:	sub    eax,0x1f001c8d
  4210be:	dec    edx
  4210bf:	xor    ah,bl
  4210c1:	cs pop edx
  4210c3:	sbb    eax,DWORD PTR [ecx+eax*8]
  4210c6:	push   es
  4210c7:	dec    ecx
  4210c8:	ins    DWORD PTR es:[edi],dx
  4210c9:	aas    
  4210ca:	adc    cl,BYTE PTR [ebx-0x13cf701d]
  4210d0:	xor    esp,eax
  4210d2:	or     eax,0xc21e9c25
  4210d7:	fsub   DWORD PTR ds:0x582cd1d9
  4210dd:	ret    0x761b
  4210e0:	and    al,0xef
  4210e2:	loope  0x4210a4
  4210e4:	cmp    ebx,esp
  4210e6:	xchg   esp,eax
  4210e7:	fwait
  4210e8:	and    ah,BYTE PTR ds:0xa301295b
  4210ee:	xchg   edx,eax
  4210ef:	and    eax,0xee48a265
  4210f4:	fisubr DWORD PTR [esi+ebx*8+0x316646f7]
  4210fb:	mov    bh,0xa3
  4210fd:	int    0x3
  4210ff:	lea    ebx,[esi+0x3e724488]
  421105:	push   0xd289c0
  42110a:	sub    bl,BYTE PTR [eax+0x6]
  42110d:	mov    bl,dl
  42110f:	push   eax
  421110:	fidivr DWORD PTR [ecx+0x4f]
  421113:	in     eax,0xe0
  421115:	les    edi,FWORD PTR [esi-0x78]
  421118:	xchg   edi,eax
  421119:	sub    BYTE PTR [esi-0x32],dh
  42111c:	mov    dl,0x81
  42111e:	and    DWORD PTR [edx-0x3d483a7f],0xe73f4cf2
  421128:	fbld   TBYTE PTR [eax+0xc]
  42112b:	shl    ebp,cl
  42112d:	jne    0x4210c2
  42112f:	cld    
  421130:	pop    ss
  421131:	das    
  421132:	pop    ebp
  421133:	cs fwait
  421135:	push   edx
  421136:	add    al,0xe0
  421138:	push   es
  421139:	out    0xd0,al
  42113b:	xchg   esi,eax
  42113c:	jb     0x42115c
  42113e:	lock jmp 0xfaca:0x78f5f789
  421146:	stc    
  421147:	sar    al,0xe4
  42114a:	fiadd  DWORD PTR [esi]
  42114c:	imul   edi,DWORD PTR [eax-0x5bcf23a],0x11
  421153:	sub    eax,0x587a09ad
  421158:	cmp    ebp,esp
  42115a:	and    eax,0xdedde21f
  42115f:	pushf  
  421160:	jmp    FWORD PTR [esi]
  421162:	iret   
  421163:	out    dx,eax
  421164:	mov    ds:0x3cf45a3a,al
  421169:	mov    al,ds:0x6cfbb727
  42116e:	xor    eax,0x49242117
  421173:	cli    
  421174:	pusha  
  421175:	sub    al,0xdd
  421177:	in     al,dx
  421178:	pop    ebx
  421179:	push   esp
  42117a:	cmp    edx,DWORD PTR [edi+0x6c]
  42117d:	imul   ecx,DWORD PTR [eax+eiz*8-0x44],0x45b471e3
  421185:	adc    DWORD PTR [esi],edi
  421187:	(bad)  
  421188:	in     al,0x27
  42118a:	out    0x15,al
  42118c:	repnz imul esi,DWORD PTR [ebp-0x512ea5ff],0xffffffb1
  421194:	add    DWORD PTR [ebx-0x59],0x484acad
  42119b:	in     eax,0x6e
  42119d:	dec    ebp
  42119e:	push   ebx
  42119f:	mov    bh,BYTE PTR [edx+eax*2+0x3c]
  4211a3:	mov    cl,0x22
  4211a5:	sub    eax,0x7afb94
  4211aa:	lds    edx,FWORD PTR [eax+0x33]
  4211ad:	or     esi,esp
  4211af:	stos   BYTE PTR es:[edi],al
  4211b0:	data16 loopne 0x42115b
  4211b3:	in     eax,dx
  4211b4:	jo     0x421216
  4211b6:	jno    0x4211a7
  4211b8:	(bad)  
  4211b9:	les    esi,FWORD PTR [eax-0x3f]
  4211bc:	ss push edi
  4211be:	dec    edx
  4211bf:	jns    0x42120c
  4211c1:	jns    0x421229
  4211c3:	xchg   ebx,eax
  4211c4:	sub    esi,DWORD PTR [esi-0x14]
  4211c7:	adc    bl,al
  4211c9:	inc    esp
  4211ca:	mov    ?,WORD PTR [edx-0x28]
  4211cd:	(bad)  [ebx-0x38ef48b2]
  4211d3:	or     DWORD PTR [esp+ebp*1+0x1a5d348f],esp
  4211da:	enter  0x89cd,0xa7
  4211de:	int    0x6b
  4211e0:	sub    DWORD PTR [esi+0x35],edx
  4211e3:	jmp    0x4211d0
  4211e5:	pushf  
  4211e6:	jmp    0x140e:0x4b5ee8a3
  4211ed:	push   esp
  4211ee:	mov    bh,0xe8
  4211f0:	ins    BYTE PTR es:[edi],dx
  4211f1:	push   cs
  4211f2:	xchg   esp,eax
  4211f3:	push   ecx
  4211f4:	inc    ebx
  4211f5:	pusha  
  4211f6:	and    eax,0xb17ce632
  4211fb:	aad    0x12
  4211fd:	push   edi
  4211fe:	push   edi
  4211ff:	dec    ebx
  421200:	pusha  
  421201:	aad    0x68
  421203:	mov    ds:0x61d687e1,al
  421208:	daa    
  421209:	je     0x4211ee
  42120b:	sbb    DWORD PTR [ebx+edx*4],eax
  42120e:	adc    al,0x66
  421210:	ret    
  421211:	mov    al,0xce
  421213:	push   ss
  421214:	(bad)  
  421215:	inc    eax
  421216:	mov    DWORD PTR [esi+0x7d],edx
  421219:	dec    edx
  42121a:	outs   dx,BYTE PTR ds:[esi]
  42121b:	fisub  DWORD PTR ds:0x6d4e99a0
  421221:	std    
  421222:	mov    ebx,0x9999966
  421227:	mov    dl,0xf7
  421229:	xlat   BYTE PTR ds:[ebx]
  42122a:	retf   
  42122b:	adc    eax,0xb508eae5
  421230:	aam    0x4c
  421232:	xor    eax,0x4c273ac0
  421237:	jmp    0xdfb73186
  42123c:	pop    ebp
  42123d:	call   0x612b:0xac446558
  421244:	imul   ecx,DWORD PTR [eax-0x7407d5a6],0xc0d5072f
  42124e:	outs   dx,DWORD PTR ds:[esi]
  42124f:	adc    DWORD PTR [eax+ecx*1+0x9154ae6],edx
  421256:	outs   dx,DWORD PTR ds:[esi]
  421257:	mov    cl,0xd6
  421259:	stos   DWORD PTR es:[edi],eax
  42125a:	push   esi
  42125b:	inc    esi
  42125c:	and    al,0xe2
  42125e:	lock jae 0x4211f1
  421261:	or     edi,esp
  421263:	sbb    DWORD PTR [ebx],ebx
  421265:	xor    ch,BYTE PTR [eax+0x68]
  421268:	cmp    ebx,DWORD PTR [edi-0x76c29347]
  42126e:	into   
  42126f:	ins    DWORD PTR es:[edi],dx
  421270:	add    eax,0x8a5a4a12
  421275:	aas    
  421276:	or     bl,BYTE PTR [edi-0x5e2d1547]
  42127c:	aam    0xab
  42127e:	xchg   edx,eax
  42127f:	imul   eax,DWORD PTR [esi],0xfa50de06
  421285:	pop    ss
  421286:	pop    ds
  421287:	xor    ecx,ecx
  421289:	mov    esi,0xe9d2de29
  42128e:	cs xchg ebx,eax
  421290:	lea    esi,[eax-0xb]
  421293:	dec    esi
  421294:	inc    ebp
  421295:	mov    DWORD PTR [ecx-0x15cbd1bf],esp
  42129b:	in     eax,dx
  42129c:	dec    ah
  42129e:	iret   
  42129f:	jo     0x421278
  4212a1:	mov    ds,WORD PTR [ebx+0x42]
  4212a4:	das    
  4212a5:	icebp  
  4212a6:	pop    esp
  4212a7:	cmp    al,0x97
  4212a9:	mov    BYTE PTR [edx-0x26],cl
  4212ac:	es (bad) 
  4212ae:	aaa    
  4212af:	cmp    al,0x27
  4212b1:	aad    0xd8
  4212b3:	pop    ebp
  4212b4:	in     al,0x92
  4212b6:	es xchg esi,eax
  4212b8:	lds    esp,FWORD PTR [eax]
  4212ba:	or     DWORD PTR [edx+0x21c24a72],0xf8846593
  4212c4:	dec    ebx
  4212c5:	and    al,0x20
  4212c7:	imul   ecx,esi,0x3a
  4212ca:	test   BYTE PTR [edx+0x6ac200c4],al
  4212d0:	adc    BYTE PTR [edi-0x5a],al
  4212d3:	mov    al,0x8a
  4212d5:	inc    esi
  4212d6:	adc    ebp,DWORD PTR [ebp+edx*2-0x23]
  4212da:	pop    ecx
  4212db:	mov    ch,0x0
  4212dd:	sub    DWORD PTR ds:0x330089f9,ebp
  4212e3:	(bad)  
  4212e4:	cwde   
  4212e5:	cwde   
  4212e6:	clc    
  4212e7:	pop    ecx
  4212e8:	mov    bl,0x7
  4212ea:	mov    eax,ds:0xe5330270
  4212ef:	sti    
  4212f0:	mov    dh,0x75
  4212f2:	(bad)  
  4212f3:	stc    
  4212f4:	cmp    eax,0xb74f7bf2
  4212f9:	jb     0x421358
  4212fb:	cmp    bh,BYTE PTR [ebx+0x4c]
  4212fe:	and    eax,0xe92c3b82
  421303:	aad    0xad
  421305:	ins    DWORD PTR es:[edi],dx
  421306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421307:	(bad)
  42130a:	pop    esp
  42130b:	icebp  
  42130c:	shl    DWORD PTR [ecx],cl
  42130e:	retf   
  42130f:	or     BYTE PTR [eax-0x2b],al
  421312:	push   ecx
  421313:	int    0xe
  421315:	xchg   esp,eax
  421316:	jne    0x421343
  421318:	xor    BYTE PTR [eax+ebx*2-0x4e],al
  42131c:	aad    0xa0
  42131e:	lock das 
  421320:	xor    eax,0xe0ac3dc0
  421325:	and    bl,0xb4
  421328:	sub    eax,DWORD PTR [ebp-0x2bf75d8b]
  42132e:	sub    DWORD PTR [edi],esp
  421330:	mov    dl,0xcd
  421332:	lds    edx,FWORD PTR [esi+ebp*1+0x32]
  421336:	fs jl  0x4212ee
  421339:	add    DWORD PTR [ebx-0xb],eax
  42133c:	(bad)  
  42133d:	pushf  
  42133e:	repz add ch,bl
  421341:	pop    eax
  421342:	iret   
  421343:	ins    BYTE PTR es:[edi],dx
  421344:	push   cs
  421345:	sbb    DWORD PTR [ebp+0x34729772],0x7a33fe01
  42134f:	pop    eax
  421350:	jmp    0x373a:0xc85fd1fb
  421357:	adc    dh,BYTE PTR [eax+ebp*4]
  42135a:	mov    edi,0xd79307e1
  42135f:	mov    al,0x50
  421361:	mov    bl,0x82
  421363:	(bad)  
  421364:	mov    bh,0x68
  421366:	call   0xb072:0x7e8e0809
  42136d:	out    0x25,eax
  42136f:	xlat   BYTE PTR ds:[ebx]
  421370:	xlat   BYTE PTR ds:[ebx]
  421371:	pop    ebp
  421372:	push   edi
  421373:	adc    al,ah
  421375:	retf   
  421376:	inc    ebp
  421377:	loop   0x42139f
  421379:	jmp    0x5581:0x1ba6a6fb
  421380:	mov    dl,0x94
  421382:	pop    es
  421383:	jnp    0x42138c
  421385:	int3   
  421386:	sub    eax,0x62
  421389:	sub    BYTE PTR [ebx-0x15],ah
  42138c:	test   DWORD PTR [edx-0x135656a2],ebp
  421392:	sahf   
  421393:	inc    ecx
  421394:	dec    ebp
  421395:	mov    edx,0xe9182b83
  42139a:	sbb    cl,BYTE PTR [edi+0x29]
  42139d:	mov    al,0x8b
  42139f:	cdq    
  4213a0:	sub    al,0x60
  4213a2:	inc    ebp
  4213a3:	bound  ebx,QWORD PTR [eax]
  4213a5:	cs ds push ecx
  4213a8:	pop    ss
  4213a9:	ins    DWORD PTR es:[edi],dx
  4213aa:	pop    edx
  4213ab:	pop    ss
  4213ac:	adc    DWORD PTR [esi+0x7],eax
  4213af:	test   ch,dh
  4213b1:	pop    esp
  4213b2:	cmp    DWORD PTR [esi-0x4386ac],0xfffffff1
  4213b9:	dec    ebx
  4213ba:	sub    al,0x76
  4213bc:	mov    edx,0xb296072e
  4213c1:	into   
  4213c2:	mov    al,ds:0x8009da0d
  4213c7:	cmp    al,0x40
  4213c9:	inc    esi
  4213ca:	arpl   WORD PTR [ebx+0x7c],cx
  4213cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ce:	gs push 0x797c36e8
  4213d4:	test   eax,ebp
  4213d6:	sub    bh,BYTE PTR [eax]
  4213d8:	add    edi,eax
  4213da:	xor    bl,bl
  4213dc:	adc    edx,DWORD PTR [esi+0x7c689708]
  4213e2:	push   eax
  4213e3:	dec    ebx
  4213e4:	or     esi,esi
  4213e6:	dec    edx
  4213e7:	push   ebx
  4213e8:	in     eax,dx
  4213e9:	les    edi,FWORD PTR [ecx]
  4213eb:	retf   
  4213ec:	or     ah,al
  4213ee:	mov    BYTE PTR [eax-0x71],ch
  4213f1:	push   esi
  4213f2:	sub    al,0x5c
  4213f4:	cmp    DWORD PTR ds:0x529ccc05,edi
  4213fa:	pop    ebp
  4213fb:	inc    ebp
  4213fc:	jl     0x4213d2
  4213fe:	sahf   
  4213ff:	icebp  
  421400:	test   al,0x3f
  421402:	sbb    ecx,DWORD PTR [ecx-0x1a]
  421405:	ins    DWORD PTR es:[edi],dx
  421406:	int3   
  421407:	cmp    ebp,0xc4074a86
  42140d:	mov    ds:0xcc17c5a1,eax
  421412:	rcr    esi,cl
  421414:	xor    ah,0xe6
  421417:	cmp    DWORD PTR [esi],0x28
  42141a:	in     eax,dx
  42141b:	sub    BYTE PTR [eax],0xd7
  42141e:	jp     0x421444
  421420:	mov    edx,0x51268295
  421425:	ja     0x4213d6
  421427:	xchg   ebx,eax
  421428:	xor    BYTE PTR [eax-0x747c101d],cl
  42142e:	out    0x6,eax
  421430:	fbstp  TBYTE PTR [edx+0x75]
  421433:	or     eax,0x9be1ef9a
  421438:	ret    
  421439:	xchg   ecx,eax
  42143a:	cmp    dh,bh
  42143c:	sub    eax,DWORD PTR [edi+0x6f796d6e]
  421442:	mov    dh,0x7a
  421444:	jb     0x421420
  421446:	or     esi,DWORD PTR [ebp-0x54396809]
  42144c:	or     esi,esi
  42144e:	add    al,0x28
  421450:	push   eax
  421451:	popa   
  421452:	jle    0x42141a
  421454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421455:	cmp    al,0xda
  421457:	popa   
  421458:	xchg   ebp,eax
  421459:	inc    eax
  42145a:	sub    ch,BYTE PTR [edi]
  42145c:	xchg   esi,eax
  42145d:	sub    al,0x34
  42145f:	dec    ecx
  421460:	jge    0x42143e
  421462:	adc    DWORD PTR [ebx+0x3a],0x39cb240d
  421469:	lds    edx,FWORD PTR [ecx-0x562b366e]
  42146f:	xor    al,0x79
  421471:	shl    bl,1
  421473:	sahf   
  421474:	xlat   BYTE PTR ds:[ebx]
  421475:	gs dec ebx
  421477:	out    dx,al
  421478:	lods   al,BYTE PTR ds:[esi]
  421479:	add    dl,BYTE PTR [ebx-0x3eff9af9]
  42147f:	(bad)  
  421480:	mov    ds:0x997b074d,al
  421485:	out    dx,al
  421486:	mul    eax
  421488:	pop    edi
  421489:	mul    DWORD PTR [ebp+0x32]
  42148c:	xor    DWORD PTR [esi-0x3f9d41b3],ebx
  421492:	mov    dl,0xe7
  421494:	div    BYTE PTR [esi-0x35]
  421497:	jmp    0x421517
  421499:	cmc    
  42149a:	mov    esi,0x3f49dd91
  42149f:	and    ebx,DWORD PTR [edx-0xd]
  4214a2:	pop    edx
  4214a3:	inc    DWORD PTR ss:[ecx+eiz*8+0x21efea78]
  4214ab:	scas   eax,DWORD PTR es:[edi]
  4214ac:	adc    DWORD PTR [edi],esi
  4214ae:	ret    
  4214af:	add    DWORD PTR [esi-0x6],ebp
  4214b2:	in     eax,dx
  4214b3:	inc    eax
  4214b4:	fld    TBYTE PTR [eax]
  4214b6:	(bad)  
  4214b7:	and    ebp,DWORD PTR [edi]
  4214b9:	mov    esi,0xc34b88bd
  4214be:	sub    ecx,DWORD PTR [ebp+0x1877d4b7]
  4214c4:	stos   DWORD PTR es:[edi],eax
  4214c5:	cdq    
  4214c6:	xchg   edi,eax
  4214c7:	js     0x42152d
  4214c9:	add    eax,0xb74702fb
  4214ce:	fist   DWORD PTR [ecx]
  4214d0:	into   
  4214d1:	mov    ah,0x66
  4214d3:	inc    ebx
  4214d4:	test   al,0xcc
  4214d6:	rcr    DWORD PTR [ecx+0x2d],0x98
  4214da:	(bad)  
  4214db:	mov    al,0xe1
  4214dd:	fldenv [edi]
  4214df:	adc    esi,DWORD PTR [edx-0x7f]
  4214e2:	fisubr DWORD PTR [edi]
  4214e4:	and    bh,BYTE PTR [edx-0x5a57035a]
  4214ea:	pop    esp
  4214eb:	mov    eax,0x50cc4e61
  4214f0:	adc    DWORD PTR [ecx+0x43e1d583],edi
  4214f6:	mov    esp,0x6b9d7fbe
  4214fb:	push   ecx
  4214fc:	out    0xc1,eax
  4214fe:	jo     0x4214b3
  421500:	cld    
  421501:	js     0x4214cf
  421503:	stc    
  421504:	shl    BYTE PTR [ecx+0x2583a9d],0xe3
  42150b:	pushf  
  42150c:	inc    esi
  42150d:	adc    ebx,edi
  42150f:	dec    ecx
  421510:	cmp    edx,DWORD PTR [ebx]
  421512:	xor    edx,ebx
  421514:	bound  esi,QWORD PTR [esi+0x24]
  421517:	enter  0xa2d7,0x4d
  42151b:	out    0xf5,eax
  42151d:	push   0xffffffb7
  42151f:	xchg   edx,eax
  421520:	ins    BYTE PTR es:[edi],dx
  421521:	pop    ss
  421522:	pop    edi
  421523:	jle    0x421525
  421525:	out    0x7e,eax
  421527:	add    al,0xbd
  421529:	push   0xfffffff7
  42152b:	jl     0x83b9
  421530:	es xor ah,ah
  421533:	retf   0x4c5b
  421536:	and    edi,DWORD PTR [edx-0x5bc43499]
  42153c:	jno    0x421559
  42153e:	cmp    eax,0x51b56f8b
  421543:	jmp    0x42153f
  421545:	fisubr WORD PTR [ebx+0xb]
  421548:	outs   dx,BYTE PTR ds:[esi]
  421549:	stos   BYTE PTR es:[edi],al
  42154a:	retf   0x78e
  42154d:	shl    BYTE PTR [esi],cl
  42154f:	retf   0x1b07
  421552:	mov    edi,DWORD PTR [ebp+0x25]
  421555:	dec    ebx
  421556:	sub    edx,DWORD PTR [ecx+0x5b53cd5f]
  42155c:	lods   al,BYTE PTR ds:[esi]
  42155d:	cmp    eax,esp
  42155f:	shl    BYTE PTR [ebp+0x5596763],cl
  421565:	sti    
  421566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421567:	cmp    DWORD PTR [edi+0x65b5ed55],ebx
  42156d:	cmp    BYTE PTR [edx+0x7],bh
  421570:	loope  0x421563
  421572:	dec    eax
  421573:	push   eax
  421574:	leave  
  421575:	imul   ecx,ecx,0x57c346e4
  42157b:	retf   
  42157c:	cdq    
  42157d:	push   edx
  42157e:	pop    ss
  42157f:	sbb    cl,BYTE PTR [edx+0x3b8b31db]
  421585:	jge    0x4215b7
  421587:	mov    edx,0xd84b1c32
  42158c:	in     al,0x4d
  42158e:	mov    esp,0x79990755
  421593:	mov    bl,BYTE PTR [eax+ebp*1-0x3]
  421597:	pop    esi
  421598:	pop    edx
  421599:	icebp  
  42159a:	arpl   si,cx
  42159c:	sbb    cl,BYTE PTR fs:[edx]
  42159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a0:	sti    
  4215a1:	sbb    eax,0xf0cc418b
  4215a6:	pop    ecx
  4215a7:	mov    dh,BYTE PTR [ebp-0x1759b3fb]
  4215ad:	jmp    0xeda05a3a
  4215b2:	out    dx,eax
  4215b3:	sub    esi,DWORD PTR [ebp+edi*2+0x3a3200bb]
  4215ba:	retf   0x53e2
  4215bd:	push   0x62
  4215bf:	aam    0x9e
  4215c1:	pop    ebp
  4215c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c3:	xor    eax,0xde12344f
  4215c8:	pop    edi
  4215c9:	push   ebx
  4215ca:	ins    BYTE PTR es:[edi],dx
  4215cb:	jbe    0x4215b7
  4215cd:	jb     0x42156c
  4215cf:	dec    edi
  4215d0:	or     al,BYTE PTR [esi-0x5]
  4215d3:	mov    dh,0xcd
  4215d5:	out    dx,al
  4215d6:	xor    bl,BYTE PTR [ecx]
  4215d8:	test   DWORD PTR [ebx+0x61ebc26b],ebp
  4215de:	cwde   
  4215df:	fsubrp st(4),st
  4215e1:	xchg   ebx,eax
  4215e2:	bound  esi,QWORD PTR [edx+0x28cfb9fb]
  4215e8:	ficom  DWORD PTR [esi+0x65191484]
  4215ee:	xchg   ebx,eax
  4215ef:	xchg   ebp,eax
  4215f0:	dec    edi
  4215f1:	sub    DWORD PTR [edi],edi
  4215f3:	rcr    DWORD PTR [edx+eax*2+0x360f9856],1
  4215fa:	data16 mov BYTE PTR [esi-0x5e],bh
  4215fe:	add    BYTE PTR [eax-0x72],bl
  421601:	sub    cl,dl
  421603:	ds mov edx,0x8f69c369
  421609:	dec    esp
  42160a:	mov    bh,0x15
  42160c:	lds    esi,FWORD PTR [ebx+0x64]
  42160f:	sbb    al,0xc2
  421611:	dec    ecx
  421612:	and    al,BYTE PTR [edi+0x266f5d67]
  421618:	jge    0x4215f2
  42161a:	adc    BYTE PTR [eax+0x54af6644],bh
  421620:	movq   mm2,QWORD PTR [eax+edx*8+0x7d]
  421625:	fs push ebp
  421627:	adc    BYTE PTR [ebx+0x750be076],dh
  42162d:	fs lahf 
  42162f:	jb     0x42169c
  421631:	pusha  
  421632:	pop    eax
  421633:	pop    es
  421634:	mov    esp,0xce668d7c
  421639:	das    
  42163a:	jb     0x421642
  42163c:	cmp    al,0x9b
  42163e:	lahf   
  42163f:	and    ah,dh
  421641:	dec    ebx
  421642:	sub    eax,0x993fd43f
  421647:	add    DWORD PTR [edx-0x22],edx
  42164a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42164b:	test   eax,0x9a5ef4b2
  421650:	inc    ebp
  421651:	mov    ah,0x69
  421653:	aaa    
  421654:	stc    
  421655:	xor    cl,dl
  421657:	sub    al,BYTE PTR [edx]
  421659:	and    BYTE PTR ds:0xa1322c0f,0x66
  421660:	mov    edx,0x23a327d0
  421665:	(bad)  
  421666:	push   ebx
  421667:	scas   al,BYTE PTR es:[edi]
  421668:	add    eax,0x6ffd47cf
  42166d:	and    al,0xf2
  42166f:	ret    0x9650
  421672:	in     eax,dx
  421673:	sub    DWORD PTR cs:[eax+0x7d],edx
  421677:	and    al,0x63
  421679:	cmp    DWORD PTR [ecx+edx*8+0x76],esi
  42167d:	pop    esp
  42167e:	jge    0x421632
  421680:	xchg   esp,eax
  421681:	test   al,0xe5
  421683:	xor    eax,0x3826ce5e
  421688:	xchg   ch,dh
  42168a:	or     ah,BYTE PTR [edi-0x714143d4]
  421690:	inc    ebp
  421691:	jecxz  0x4216e8
  421693:	jne    0x4216de
  421695:	inc    edx
  421696:	inc    ebp
  421697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421698:	mov    ebp,esp
  42169a:	jns    0x421701
  42169c:	ret    0xa227
  42169f:	pop    esp
  4216a0:	imul   edi,DWORD PTR [esi-0x2002ec71],0x462d314
  4216aa:	sub    ch,0x4b
  4216ad:	lds    ebx,FWORD PTR [esi]
  4216af:	(bad)  
  4216b1:	jp     0x4216d4
  4216b3:	lea    edi,[ebx]
  4216b5:	xor    bh,BYTE PTR [eax]
  4216b7:	jp     0x4216d9
  4216b9:	and    bh,BYTE PTR [edi-0x2b]
  4216bc:	mov    ch,0x1c
  4216be:	xchg   ecx,eax
  4216bf:	daa    
  4216c0:	mov    ds:0x3e82cc1d,al
  4216c5:	mov    ds:0x2e54651c,eax
  4216ca:	outs   dx,DWORD PTR ds:[esi]
  4216cb:	imul   ebx,DWORD PTR [ebx],0xf7e6edb0
  4216d1:	dec    ebx
  4216d2:	adc    DWORD PTR [ebp+0x6],0xb
  4216d6:	shl    DWORD PTR [edi+0x3e],cl
  4216d9:	dec    edi
  4216da:	sbb    eax,0x3f582a8e
  4216df:	mov    dh,0x41
  4216e1:	outs   dx,DWORD PTR ds:[esi]
  4216e2:	(bad)  
  4216e3:	jg     0x4216de
  4216e5:	adc    ebp,DWORD PTR [edx]
  4216e7:	mov    al,ds:0xa7ac35cb
  4216ec:	xchg   ecx,eax
  4216ed:	add    BYTE PTR [eax+eiz*1+0x6598efdd],cl
  4216f4:	lds    ecx,FWORD PTR [ecx+0x2433cf48]
  4216fa:	dec    ecx
  4216fb:	leave  
  4216fc:	pusha  
  4216fd:	ja     0x421694
  4216ff:	addr16 adc eax,0x7c180b7
  421705:	cmp    bh,BYTE PTR [eax+edx*1+0x28ba65a7]
  42170c:	js     0x4216c4
  42170e:	xchg   ecx,eax
  42170f:	lods   eax,DWORD PTR ds:[esi]
  421710:	adc    DWORD PTR [ecx-0x4512f25d],ecx
  421716:	adc    DWORD PTR [ebp+0x3f],ebp
  421719:	xchg   ebp,eax
  42171a:	pop    edx
  42171b:	sbb    edx,DWORD PTR [ebx]
  42171d:	adc    dh,ch
  42171f:	xchg   edi,eax
  421720:	stos   DWORD PTR es:[edi],eax
  421721:	jnp    0x42170a
  421723:	inc    edi
  421724:	pop    es
  421725:	jnp    0x421721
  421727:	outs   dx,DWORD PTR ds:[esi]
  421728:	sub    dl,BYTE PTR [ebx-0x1a]
  42172b:	adc    ebp,ebp
  42172d:	out    dx,al
  42172e:	mov    dh,BYTE PTR [esi-0x52331ff3]
  421734:	inc    eax
  421735:	and    al,0x8d
  421737:	std    
  421738:	jno    0x421718
  42173a:	or     BYTE PTR [eax-0x5cdfdfe9],bh
  421740:	jp     0x421759
  421742:	std    
  421743:	mov    esi,0xaf2e9b71
  421748:	adc    dl,BYTE PTR [eax+0x23]
  42174b:	xor    eax,0xa84d5147
  421750:	cwde   
  421751:	fidivr DWORD PTR [ecx-0x2b3a1df0]
  421757:	push   edi
  421758:	jg     0x42176c
  42175a:	repz sub al,0x32
  42175d:	fist   WORD PTR [edx-0x70]
  421760:	call   0xdd12:0xbec139fe
  421767:	sti    
  421768:	les    esi,FWORD PTR [ebx-0x366c35f3]
  42176e:	clc    
  42176f:	sub    DWORD PTR ds:0x2fd96abe,0x103cd096
  421779:	into   
  42177a:	mov    dl,0x1a
  42177c:	xor    bh,BYTE PTR [eax+0x62465028]
  421782:	cmp    cl,BYTE PTR [ebx+0x13ac0247]
  421788:	push   esp
  421789:	sbb    DWORD PTR [ecx],esi
  42178b:	out    0x78,eax
  42178d:	retf   0x40e0
  421790:	push   ebp
  421791:	fidivr WORD PTR [ecx+esi*2]
  421794:	dec    esi
  421795:	ds ss inc sp
  421799:	retf   
  42179a:	test   DWORD PTR [ebx-0x4461c4dd],edx
  4217a0:	jno    0x421817
  4217a2:	sbb    BYTE PTR fs:[edx+0x19],dl
  4217a6:	cmp    DWORD PTR [ebx],ebp
  4217a8:	or     BYTE PTR [esi-0x1f],dh
  4217ab:	pop    esp
  4217ac:	sti    
  4217ad:	je     0x42177b
  4217af:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217b1:	ret    0x1c6e
  4217b4:	pop    esp
  4217b5:	and    BYTE PTR [edx+edx*1+0x2f],bl
  4217b9:	cs ins BYTE PTR es:[edi],dx
  4217bb:	push   eax
  4217bc:	arpl   WORD PTR [eax-0x5a85993e],sp
  4217c2:	push   esi
  4217c3:	repz pop es
  4217c5:	scas   al,BYTE PTR es:[edi]
  4217c6:	lea    edi,[edi]
  4217c8:	fiadd  WORD PTR [ecx+edi*1-0x59]
  4217cc:	sti    
  4217cd:	cld    
  4217ce:	lods   al,BYTE PTR ds:[esi]
  4217cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217d0:	or     al,ch
  4217d2:	or     dh,cl
  4217d4:	or     ch,BYTE PTR [ebp+0x5d]
  4217d7:	adc    al,0x85
  4217d9:	push   esi
  4217da:	enter  0x5105,0x40
  4217de:	add    BYTE PTR [edx+edi*1-0x695ff87f],al
  4217e5:	xchg   BYTE PTR [ebx+0x27],bl
  4217e8:	cs or  eax,0x8a733c
  4217ee:	push   edi
  4217ef:	jecxz  0x4217e5
  4217f1:	inc    edx
  4217f2:	pop    ss
  4217f3:	ins    DWORD PTR es:[edi],dx
  4217f4:	not    BYTE PTR ds:0x15b95eb1
  4217fa:	adc    DWORD PTR [edi+0x1c],ebp
  4217fd:	dec    esi
  4217fe:	inc    ebx
  4217ff:	mov    eax,ds:0xd9311001
  421804:	in     al,0x88
  421806:	aad    0xaf
  421808:	inc    eax
  421809:	and    DWORD PTR [esi+0x5b50b56e],0xf279560
  421813:	ffree  st(1)
  421815:	fidivr DWORD PTR [ebp-0x36]
  421818:	in     eax,dx
  421819:	repz test eax,0xe10c252a
  42181f:	pop    ds
  421820:	out    0x10,al
  421822:	sar    BYTE PTR [esi+0x5f],cl
  421825:	xor    edx,eax
  421827:	jecxz  0x42186c
  421829:	cmp    BYTE PTR [ecx+0x26],bh
  42182c:	mov    eax,0x76c55672
  421831:	and    ecx,edi
  421833:	js     0x4217c7
  421835:	and    DWORD PTR [edi-0x412bacda],edi
  42183b:	xor    BYTE PTR [ebx+esi*1],al
  42183e:	push   0x72843893
  421843:	inc    ebp
  421844:	and    dh,BYTE PTR [ebp-0x267ccf85]
  42184a:	popa   
  42184b:	loope  0x421809
  42184d:	(bad)  
  42184e:	jmp    0x1841:0xc385b403
  421855:	cli    
  421856:	test   BYTE PTR [edx],ch
  421858:	sbb    eax,0x1dcf2b71
  42185d:	add    al,bh
  42185f:	out    dx,eax
  421860:	inc    esp
  421861:	push   0x2326b320
  421866:	int3   
  421867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421868:	add    eax,0xfdbb562c
  42186d:	or     al,BYTE PTR [ecx-0x2a]
  421870:	pushf  
  421871:	sti    
  421872:	pop    edi
  421873:	xchg   esi,eax
  421874:	int3   
  421875:	(bad)  
  421876:	fldcw  WORD PTR [esi-0x5e7b4a24]
  42187c:	std    
  42187d:	loop   0x42188e
  42187f:	scas   al,BYTE PTR es:[edi]
  421880:	adc    al,0x19
  421882:	sbb    eax,0x4e7fcfce
  421887:	ss or  al,0xe5
  42188a:	add    al,0x8e
  42188c:	cmp    ebp,esi
  42188e:	cmp    eax,0xffa312fa
  421893:	rol    BYTE PTR [esi+ebx*4+0x61],cl
  421897:	add    al,0x27
  421899:	not    esi
  42189b:	adc    esp,ebp
  42189d:	test   BYTE PTR [ebp-0x7e11e865],ch
  4218a3:	test   eax,0xeb0dfce
  4218a8:	enter  0x7cbc,0x1c
  4218ac:	test   DWORD PTR [edi+ebp*4+0x34361d77],ebp
  4218b3:	dec    ecx
  4218b4:	daa    
  4218b5:	rcl    DWORD PTR [ecx-0xb06bbaf],1
  4218bb:	lods   al,BYTE PTR ds:[esi]
  4218bc:	push   ecx
  4218bd:	shl    BYTE PTR [ebp*4+0x135048ce],1
  4218c4:	xor    al,dl
  4218c6:	leave  
  4218c7:	pop    es
  4218c8:	and    eax,0x8968eb1b
  4218cd:	mov    dh,0x21
  4218cf:	mov    bl,0x6a
  4218d1:	jb     0x421877
  4218d3:	jbe    0x42193f
  4218d5:	pop    ecx
  4218d6:	inc    ecx
  4218d7:	jns    0x421870
  4218d9:	add    DWORD PTR [ebp-0x5709c328],esp
  4218df:	push   0x8f8191a8
  4218e4:	jne    0x4218c0
  4218e6:	xlat   BYTE PTR ds:[ebx]
  4218e7:	loopne 0x421875
  4218e9:	pop    ebx
  4218ea:	fistp  QWORD PTR [esi]
  4218ec:	fdivr  DWORD PTR ds:[ecx-0x24]
  4218f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218f1:	push   ebx
  4218f2:	fwait
  4218f3:	int3   
  4218f4:	or     edx,DWORD PTR [ecx]
  4218f6:	mov    eax,0xfa51cf0f
  4218fb:	pop    DWORD PTR [edx]
  4218fd:	fistp  WORD PTR [ebx-0x8413ebb]
  421903:	xlat   BYTE PTR ds:[ebx]
  421904:	es (bad) 
  421906:	xor    DWORD PTR [edi+0x659c5000],esi
  42190c:	popf   
  42190d:	push   ebp
  42190e:	div    BYTE PTR cs:[edx]
  421911:	mov    al,0x75
  421913:	push   si
  421915:	or     al,0x79
  421917:	out    0x91,al
  421919:	push   ebx
  42191a:	mov    dh,BYTE PTR [edi-0x10]
  42191d:	add    ecx,DWORD PTR [edi-0x2c]
  421920:	xor    al,0x48
  421922:	ror    BYTE PTR [ebp+ebp*2+0x2fcc8000],cl
  421929:	mov    ebp,ebx
  42192b:	sbb    DWORD PTR [ebp+0x62b3e816],esp
  421931:	sub    DWORD PTR [edx],esp
  421933:	push   0xd6833d2b
  421938:	xchg   esp,eax
  421939:	jb     0x4218ef
  42193b:	(bad)  
  42193c:	pop    edx
  42193d:	mov    al,0xb1
  42193f:	sub    dl,cl
  421941:	jbe    0x42190e
  421943:	jae    0x421964
  421945:	and    eax,0x339f0ce8
  42194a:	in     eax,0xc6
  42194c:	shl    BYTE PTR [ebx-0x60],cl
  42194f:	cmp    BYTE PTR [ebp+ebx*1-0x4f],cl
  421953:	mov    bl,BYTE PTR [ecx+ecx*4-0x4839e69f]
  42195a:	xchg   ebx,eax
  42195b:	bound  edi,QWORD PTR [ecx-0x516926f4]
  421961:	repnz sub DWORD PTR [edi+0x4],edi
  421965:	scas   eax,DWORD PTR es:[edi]
  421966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421967:	pop    esi
  421968:	mov    esi,0x764018a2
  42196d:	push   ds
  42196e:	jns    0x421916
  421970:	in     eax,dx
  421971:	test   al,0xc3
  421973:	dec    eax
  421974:	add    al,0xb
  421976:	dec    ebx
  421977:	test   DWORD PTR [ebp-0x45],eax
  42197a:	in     eax,dx
  42197b:	mov    ds:0x22952398,al
  421980:	sub    al,0xcb
  421982:	mov    ebx,0x487f436a
  421987:	fs and eax,0xfd723df7
  42198d:	xlat   BYTE PTR ds:[ebx]
  42198e:	outs   dx,BYTE PTR ds:[esi]
  42198f:	daa    
  421990:	fsubr  QWORD PTR [edi+0x12]
  421993:	mov    ah,0x81
  421995:	jl     0x4219b8
  421997:	or     al,0xcd
  421999:	xor    BYTE PTR [edx+0x10],dl
  42199c:	pop    ebp
  42199d:	test   BYTE PTR [ebx+eax*2-0x27],0x37
  4219a2:	push   edi
  4219a3:	or     eax,0x50dedb47
  4219a8:	fwait
  4219a9:	test   DWORD PTR [ecx+0x3],esp
  4219ac:	ret    
  4219ad:	mov    es,WORD PTR ds:0x94724eff
  4219b3:	push   edx
  4219b4:	nop
  4219b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b6:	outs   dx,DWORD PTR ds:[esi]
  4219b7:	push   es
  4219b8:	cmc    
  4219b9:	es adc eax,0xaa346af
  4219bf:	and    DWORD PTR [eax+0x67],edi
  4219c2:	pop    edi
  4219c3:	ins    DWORD PTR es:[edi],dx
  4219c4:	pop    edi
  4219c5:	test   edi,ebp
  4219c7:	mov    ds:0xe9fdf89d,al
  4219cc:	add    dh,BYTE PTR [edi+0x5b]
  4219cf:	push   ds
  4219d0:	lods   al,BYTE PTR ds:[esi]
  4219d1:	mov    edi,DWORD PTR [edi+0x1b]
  4219d4:	std    
  4219d5:	fld    QWORD PTR [eax]
  4219d7:	fld    TBYTE PTR [edi+esi*4]
  4219da:	sti    
  4219db:	jae    0x421a19
  4219dd:	jl     0x421a56
  4219df:	and    DWORD PTR [edi],ebx
  4219e1:	aas    
  4219e2:	(bad)  [ecx+0x34d849c]
  4219e8:	clc    
  4219e9:	sbb    BYTE PTR [esi+ebx*4],bl
  4219ec:	int3   
  4219ed:	add    al,0xf3
  4219ef:	pop    ds
  4219f0:	out    dx,al
  4219f1:	loopne 0x4219d8
  4219f3:	ins    DWORD PTR es:[edi],dx
  4219f4:	test   al,0x52
  4219f6:	sbb    eax,0xfb2cea73
  4219fb:	cmc    
  4219fc:	cli    
  4219fd:	add    DWORD PTR [ecx-0x4bf18308],0xffffffb8
  421a04:	mov    edi,0x75b7b9ca
  421a09:	mov    esp,0x5a98c7b
  421a0e:	mov    ecx,0x6c3e957f
  421a13:	int    0x7b
  421a15:	sbb    DWORD PTR [ebx+esi*1+0x1e],ebx
  421a19:	fwait
  421a1a:	sub    eax,0xbb2739e2
  421a1f:	mov    bh,bl
  421a21:	pop    edi
  421a22:	mov    ch,0x86
  421a24:	in     al,dx
  421a25:	and    al,BYTE PTR [ebp+0x32ea257f]
  421a2b:	mov    DWORD PTR gs:[edi],ecx
  421a2e:	sub    DWORD PTR [edx],ebp
  421a30:	mov    ecx,esp
  421a32:	pop    ds
  421a33:	test   BYTE PTR fs:[ebx-0x2eeb7778],ah
  421a3a:	sbb    DWORD PTR [edi-0x48f25f4f],edx
  421a40:	cld    
  421a41:	xchg   edx,eax
  421a42:	fldlg2 
  421a44:	mov    ds:0xb4a64ba1,al
  421a49:	mov    dl,BYTE PTR [edi-0x638891f0]
  421a4f:	sbb    al,0xca
  421a51:	xchg   edx,eax
  421a52:	pusha  
  421a53:	xchg   edx,eax
  421a54:	pop    ebx
  421a56:	call   0x3b800f1b
  421a5b:	in     eax,dx
  421a5c:	xor    eax,0x8f42396b
  421a61:	mov    cs,WORD PTR [ebp+0xbff82c8]
  421a67:	pop    ds
  421a68:	cwde   
  421a69:	and    al,0x41
  421a6b:	pop    ds
  421a6c:	inc    eax
  421a6d:	call   0xc9c956b7
  421a72:	jo     0x421a5d
  421a74:	popa   
  421a75:	ror    DWORD PTR [esi],0x6b
  421a78:	pop    ebx
  421a79:	popf   
  421a7a:	call   0x46ac:0x549db8d5
  421a81:	test   ecx,edi
  421a83:	adc    ebp,DWORD PTR [ebp-0x74]
  421a86:	jl     0x421a63
  421a88:	push   edi
  421a89:	push   0xffffffc2
  421a8b:	in     al,0x49
  421a8d:	call   0xdb22:0x411d7de6
  421a94:	loop   0x421b06
  421a96:	or     dl,bl
  421a98:	mov    eax,0x9c1a2b65
  421a9d:	int3   
  421a9e:	push   es
  421a9f:	xor    bl,bl
  421aa1:	cdq    
  421aa2:	mov    ebp,DWORD PTR [ebx]
  421aa4:	inc    edx
  421aa5:	in     eax,0xd7
  421aa7:	aaa    
  421aa8:	xchg   ebp,eax
  421aa9:	lds    ecx,FWORD PTR [ecx-0x1d68833d]
  421aaf:	lds    esp,FWORD PTR [edi-0x48]
  421ab2:	mov    bl,0xf1
  421ab4:	xor    BYTE PTR [esi-0x67],bl
  421ab7:	push   eax
  421ab8:	int    0x3d
  421aba:	pop    ecx
  421abb:	leave  
  421abc:	xor    ebx,edx
  421abe:	push   0x4fd061cf
  421ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac4:	adc    bl,ch
  421ac6:	xor    eax,0xf1811b4d
  421acb:	(bad)  
  421acd:	pop    edx
  421ace:	pushw  cs
  421ad0:	and    eax,0xe3a9c4c0
  421ad5:	fidivr WORD PTR [eax-0x7f]
  421ad8:	cmp    ebp,DWORD PTR ds:0x535c1f13
  421ade:	sub    al,0x7a
  421ae0:	retf   
  421ae1:	xchg   esp,eax
  421ae2:	add    al,0xd7
  421ae4:	mov    esp,0xf42086a3
  421ae9:	in     eax,dx
  421aea:	dec    edx
  421aeb:	das    
  421aec:	xchg   ebp,eax
  421aed:	or     cl,BYTE PTR [edi]
  421aef:	mov    eax,ds:0xa297dd9
  421af4:	and    BYTE PTR [ecx],cl
  421af6:	ins    BYTE PTR es:[edi],dx
  421af7:	push   eax
  421af8:	mov    bl,0x94
  421afa:	fucomi st,st(6)
  421afc:	or     esp,DWORD PTR [ebp-0x34]
  421aff:	je     0x421b48
  421b01:	addr16 dec ecx
  421b03:	sbb    eax,0x147292be
  421b08:	fcom   DWORD PTR ds:0xfc4fb691
  421b0e:	mov    ebx,0xa175e270
  421b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b14:	sub    bh,BYTE PTR [ecx]
  421b16:	jl     0x421abc
  421b18:	xchg   BYTE PTR [ebp-0x784b7694],bl
  421b1e:	xchg   esi,eax
  421b1f:	(bad)  
  421b20:	xor    ebp,DWORD PTR [ebx-0x6e]
  421b23:	jl     0x421ac1
  421b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b26:	sbb    DWORD PTR [esi+0x64a4f79d],0xffffffc2
  421b2d:	dec    esp
  421b2e:	pop    ds
  421b2f:	cmp    bh,BYTE PTR gs:[ebx]
  421b32:	xchg   ebx,eax
  421b33:	cmp    DWORD PTR [ebx+0x23fadf5a],eax
  421b39:	pop    esp
  421b3a:	inc    edx
  421b3b:	in     eax,dx
  421b3c:	cmp    al,0xe7
  421b3e:	inc    ebx
  421b3f:	dec    edi
  421b40:	retf   0xe4a6
  421b43:	or     eax,edi
  421b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b46:	ja     0x421b1c
  421b48:	jbe    0x421b14
  421b4a:	jle    0x421b32
  421b4c:	ss cs push 0xd931e51a
  421b53:	or     eax,0x74469512
  421b58:	xchg   ecx,eax
  421b59:	(bad)
  421b5e:	adc    ebp,edx
  421b60:	cdq    
  421b61:	jp     0x421bd7
  421b63:	mov    al,0x70
  421b65:	test   BYTE PTR [eax+0x76],cl
  421b68:	std    
  421b69:	std    
  421b6a:	add    BYTE PTR [ebx+ebx*8-0x57],bl
  421b6e:	sub    al,0x3a
  421b70:	imul   esi,DWORD PTR [edi+edi*1-0x55],0x6644e636
  421b78:	mov    esp,0xed9b3942
  421b7d:	hlt    
  421b7e:	push   ds
  421b7f:	add    eax,0x8471b841
  421b84:	pop    edi
  421b85:	add    ecx,DWORD PTR [ebx]
  421b87:	xchg   esp,eax
  421b88:	aaa    
  421b89:	idiv   BYTE PTR [edx+ecx*2-0x4f]
  421b8d:	mov    dh,0xe1
  421b8f:	rcl    BYTE PTR [ecx-0x3e],cl
  421b92:	(bad)  
  421b93:	retf   
  421b94:	inc    eax
  421b95:	outs   dx,BYTE PTR ds:[esi]
  421b96:	mov    esp,0x92cf5446
  421b9b:	lods   eax,DWORD PTR ds:[esi]
  421b9c:	leave  
  421b9d:	jo     0x421b94
  421b9f:	inc    esi
  421ba0:	in     al,0xb1
  421ba2:	outs   dx,BYTE PTR ds:[esi]
  421ba3:	arpl   WORD PTR ds:0x8ad6096b,dx
  421ba9:	jmp    0x7a53:0xa3ef0440
  421bb0:	pop    es
  421bb1:	sti    
  421bb2:	mov    al,0xef
  421bb4:	enter  0xa1f3,0x2d
  421bb8:	inc    edi
  421bb9:	nop
  421bba:	ret    
  421bbb:	adc    BYTE PTR [edi-0x346fd96],al
  421bc1:	ins    BYTE PTR es:[edi],dx
  421bc2:	mov    eax,ds:0x9e5f28c5
  421bc7:	sub    BYTE PTR [edi-0x74],ah
  421bca:	xor    dh,BYTE PTR [eax]
  421bcc:	cld    
  421bcd:	mov    ebp,0xd61b2fb0
  421bd2:	adc    DWORD PTR [edx+edx*8],esp
  421bd5:	daa    
  421bd6:	or     BYTE PTR [esi-0xf1cb74b],0x66
  421bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bde:	inc    eax
  421bdf:	cmp    ebx,ebx
  421be1:	mov    ecx,0xd35028d3
  421be6:	xor    BYTE PTR es:[edx+0xf470922],ch
  421bed:	jmp    0xbb713fd9
  421bf2:	fidivr DWORD PTR [eax*2-0x4149955d]
  421bf9:	jbe    0x421c19
  421bfb:	xchg   edx,eax
  421bfc:	iret   
  421bfd:	sbb    DWORD PTR [edx],eax
  421bff:	fs aaa 
  421c01:	add    esi,DWORD PTR [ebp+0x2ece8109]
  421c07:	xor    BYTE PTR ds:0xa8cd6b86,ch
  421c0d:	aas    
  421c0e:	cld    
  421c0f:	rol    DWORD PTR [ebx],1
  421c11:	sbb    edx,edx
  421c13:	xlat   BYTE PTR ds:[ebx]
  421c14:	inc    edi
  421c15:	icebp  
  421c16:	pop    edx
  421c17:	sahf   
  421c18:	pop    ebp
  421c19:	nop
  421c1a:	mov    bl,0x54
  421c1c:	fs jg  0x421ba8
  421c1f:	jb     0x421c47
  421c21:	retf   0x6154
  421c24:	mov    ds:0xa63ed41e,al
  421c29:	xlat   BYTE PTR ds:[ebx]
  421c2a:	mov    edi,0xf7ee89ba
  421c2f:	fcomip st,st(5)
  421c31:	pop    ebp
  421c32:	inc    edx
  421c33:	jg     0x421c94
  421c35:	mov    esi,0x5c654ff9
  421c3a:	fnstcw WORD PTR [edx+0x33c70bfc]
  421c40:	stc    
  421c41:	mov    edx,ecx
  421c43:	sub    cl,BYTE PTR [ecx+0x72]
  421c46:	inc    edx
  421c47:	popf   
  421c48:	mov    dl,0x4f
  421c4a:	and    DWORD PTR [ebx-0x4e4d269d],ebp
  421c50:	xchg   edx,eax
  421c51:	and    DWORD PTR [ebp-0x2a],esi
  421c54:	sub    DWORD PTR [esi],ecx
  421c56:	mov    al,ds:0x6af2a569
  421c5b:	jl     0x421c67
  421c5d:	shl    BYTE PTR [edx-0x4085f667],cl
  421c63:	stc    
  421c64:	inc    ebp
  421c65:	mov    esi,ss
  421c67:	nop
  421c68:	imul   ebp,DWORD PTR [edi],0x58
  421c6b:	inc    ecx
  421c6c:	aas    
  421c6d:	sti    
  421c6e:	pop    ebp
  421c6f:	aad    0x4
  421c71:	lock fsub QWORD PTR [ecx]
  421c74:	test   DWORD PTR [ebx+0x26],0x9443f3c0
  421c7b:	cmc    
  421c7c:	mov    dh,0x35
  421c7e:	add    al,0x60
  421c80:	jne    0x421c65
  421c82:	ret    
  421c83:	add    DWORD PTR fs:[eax],eax
  421c86:	or     dl,bl
  421c88:	mov    esp,0xe685bc4e
  421c8d:	push   eax
  421c8e:	or     BYTE PTR [edi+0x501557b0],bl
  421c94:	mov    ebx,0xb755e428
  421c99:	dec    esp
  421c9a:	stos   DWORD PTR es:[edi],eax
  421c9b:	pop    ds
  421c9c:	outs   dx,BYTE PTR ds:[esi]
  421c9d:	lods   al,BYTE PTR ds:[esi]
  421c9e:	and    al,0x15
  421ca0:	aad    0x50
  421ca2:	iret   
  421ca3:	data16 aaa 
  421ca5:	call   0xd5dc:0x7b235af9
  421cac:	pop    ebx
  421cad:	mov    cl,bh
  421caf:	xor    ch,dh
  421cb1:	add    bl,BYTE PTR [edi-0xbb8bd62]
  421cb7:	adc    ebp,ebx
  421cb9:	push   ecx
  421cba:	adc    cl,al
  421cbc:	popf   
  421cbd:	retf   
  421cbe:	cmp    al,0x72
  421cc0:	stos   DWORD PTR es:[edi],eax
  421cc1:	xor    eax,0xc9c32274
  421cc6:	(bad)  
  421cc7:	iret   
  421cc8:	add    al,0x2e
  421cca:	sub    BYTE PTR [esi],dh
  421ccc:	aam    0xea
  421cce:	ss jl  0x421cc4
  421cd1:	sub    al,0x6c
  421cd3:	ins    DWORD PTR es:[edi],dx
  421cd4:	push   ebp
  421cd5:	fwait
  421cd6:	ds in  al,dx
  421cd8:	sub    eax,0xb0287717
  421cdd:	test   BYTE PTR [edx+0x5b],ah
  421ce0:	cmp    bh,BYTE PTR [esi+0x493b21fa]
  421ce6:	xchg   ebp,eax
  421ce7:	(bad)  [ebp+ebx*4+0x1f70ac1f]
  421cee:	pushf  
  421cef:	push   edi
  421cf0:	mov    ebx,0x912d41f7
  421cf5:	add    cl,ch
  421cf7:	sahf   
  421cf8:	mov    ah,0x8d
  421cfa:	and    bh,ch
  421cfc:	xchg   ecx,eax
  421cfd:	xchg   DWORD PTR [edi+0x25879d67],edx
  421d03:	push   ebp
  421d04:	pusha  
  421d05:	mov    ds:0x59177561,al
  421d0a:	pop    es
  421d0b:	int3   
  421d0c:	aam    0x40
  421d0e:	push   ebx
  421d0f:	cs mov esp,0xe707c6d8
  421d15:	cmp    al,BYTE PTR [edi+0x1f]
  421d18:	mov    al,0x84
  421d1a:	sbb    ebp,DWORD PTR [edx+0x7d]
  421d1d:	dec    esp
  421d1e:	or     BYTE PTR [edx+0x1],0xd6
  421d22:	test   BYTE PTR [eax+0x64],bl
  421d25:	sbb    dh,BYTE PTR [eax+0x2b]
  421d28:	lds    edx,FWORD PTR [esi-0x14cb3dc7]
  421d2e:	mov    ah,0x7a
  421d30:	ret    0xf122
  421d33:	mov    esi,0x1c8646b4
  421d38:	clc    
  421d39:	push   0xffffffab
  421d3b:	std    
  421d3c:	aas    
  421d3d:	push   ss
  421d3e:	ins    DWORD PTR es:[edi],dx
  421d3f:	or     BYTE PTR [ecx-0x52d6170d],ch
  421d45:	mov    ds:0x30f1ff9,al
  421d4a:	xchg   esp,eax
  421d4b:	ret    0xa2fe
  421d4e:	add    dl,BYTE PTR [edx+0x29]
  421d51:	cld    
  421d52:	inc    eax
  421d53:	mov    bl,0x40
  421d55:	scas   al,BYTE PTR es:[edi]
  421d56:	cmp    BYTE PTR [edi-0x1a],0xc1
  421d5a:	leave  
  421d5b:	ins    BYTE PTR es:[edi],dx
  421d5c:	les    esi,FWORD PTR [eax+0x14e2109d]
  421d62:	xchg   edi,eax
  421d63:	inc    esi
  421d64:	fcom   QWORD PTR [edi-0x772a1d5f]
  421d6a:	loope  0x421cf5
  421d6c:	xor    ecx,edi
  421d6e:	inc    eax
  421d6f:	call   FWORD PTR [ebx]
  421d71:	sbb    al,0x2d
  421d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d74:	stos   DWORD PTR es:[edi],eax
  421d75:	hlt    
  421d76:	or     DWORD PTR [ebp+0x5864275c],ebx
  421d7c:	mov    cl,0xc9
  421d7e:	loopne 0x421d7a
  421d80:	stos   BYTE PTR es:[edi],al
  421d81:	sbb    al,bl
  421d83:	mov    edi,0xc0bafa99
  421d88:	dec    ebp
  421d89:	mov    eax,0xfcf0ef0d
  421d8e:	mov    fs,ebp
  421d90:	adc    DWORD PTR es:[eax-0x73],esi
  421d94:	(bad)  
  421d95:	xor    ebp,DWORD PTR [esi-0x619e4493]
  421d9b:	test   al,0x24
  421d9d:	sub    DWORD PTR [edi+0x42de4d41],esi
  421da3:	sub    ch,BYTE PTR [ecx]
  421da5:	out    0x78,al
  421da7:	not    BYTE PTR [ebp-0x321f9a36]
  421dad:	imul   esp,DWORD PTR [edx],0x4a878110
  421db3:	push   ebp
  421db4:	cmp    esi,DWORD PTR [eax]
  421db6:	jbe    0x421e0f
  421db8:	call   0x618c:0xf37efe67
  421dbf:	ficom  DWORD PTR [ebx-0x6e]
  421dc2:	outs   dx,BYTE PTR ds:[esi]
  421dc3:	jno    0x421ded
  421dc5:	cwde   
  421dc6:	aaa    
  421dc7:	fldenv [esi-0xd]
  421dca:	iret   
  421dcb:	shl    DWORD PTR [edi-0x72],cl
  421dce:	xor    eax,0xedc031e3
  421dd3:	fimul  WORD PTR [ecx]
  421dd5:	(bad)  
  421dd6:	aad    0xf4
  421dd8:	add    BYTE PTR [edi-0x2f],0x53
  421ddc:	ins    DWORD PTR es:[edi],dx
  421ddd:	arpl   WORD PTR [edx],bp
  421ddf:	or     edx,ecx
  421de1:	repnz pop edx
  421de3:	fiadd  WORD PTR [ebx+0x144b2a0d]
  421de9:	and    esp,0x60
  421dec:	sbb    eax,0x78be1cd2
  421df1:	iret   
  421df2:	push   ds
  421df3:	push   0x5fc0a625
  421df8:	pop    ds
  421df9:	iret   
  421dfa:	inc    ebp
  421dfb:	xchg   DWORD PTR [esi-0x6d6e56e8],esi
  421e01:	call   0xaf50:0x99511454
  421e08:	pop    ecx
  421e09:	xchg   ebx,eax
  421e0a:	aaa    
  421e0b:	jp     0x421da2
  421e0d:	xchg   edi,eax
  421e0e:	fsub   st(6),st
  421e10:	jp     0x421e80
  421e12:	(bad)  
  421e13:	mov    ds,WORD PTR [edi]
  421e15:	jbe    0x421dab
  421e17:	lods   eax,DWORD PTR ds:[esi]
  421e18:	ins    BYTE PTR es:[edi],dx
  421e19:	(bad)  
  421e1b:	loop   0x421e11
  421e1d:	sub    al,0xcb
  421e1f:	pop    ds
  421e20:	out    dx,al
  421e21:	stc    
  421e22:	daa    
  421e23:	neg    DWORD PTR [esi+edx*4-0x900d735]
  421e2a:	hlt    
  421e2b:	cli    
  421e2c:	sbb    eax,0xa8877354
  421e31:	jns    0x421e00
  421e33:	fwait
  421e34:	imul   ebp,DWORD PTR [esi+0x77],0xffffffdd
  421e38:	jno    0x421eae
  421e3a:	xchg   DWORD PTR [esi-0x53],esi
  421e3d:	xlat   BYTE PTR ds:[ebx]
  421e3e:	test   BYTE PTR ds:0xd166f999,dl
  421e44:	call   0x69cb:0xb37387f0
  421e4b:	repnz call 0x6de3:0xef8530a2
  421e53:	cmc    
  421e54:	jg     0x421e4b
  421e56:	inc    ebp
  421e57:	in     eax,dx
  421e58:	hlt    
  421e59:	mov    dh,0x2d
  421e5b:	jle    0x421ea6
  421e5d:	hlt    
  421e5e:	inc    edx
  421e5f:	or     BYTE PTR [ebx],0x7e
  421e62:	popa   
  421e63:	in     al,0x2e
  421e65:	sar    edi,cl
  421e67:	pop    eax
  421e68:	call   0xb5373749
  421e6d:	(bad)  
  421e6e:	not    ebx
  421e70:	mov    cl,0x7b
  421e72:	mov    bh,0x1
  421e74:	(bad)  
  421e75:	pushf  
  421e76:	call   0x58179546
  421e7b:	out    0x8d,eax
  421e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e7e:	fisubr DWORD PTR ds:[ebx+0x4430843b]
  421e85:	inc    ebp
  421e86:	mov    ah,0x45
  421e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e89:	bound  esp,QWORD PTR [edx+0x2c]
  421e8c:	cmp    ebx,esi
  421e8e:	aad    0xa1
  421e90:	push   ds
  421e91:	jns    0x421e4e
  421e93:	xor    DWORD PTR [edx],esi
  421e95:	mov    BYTE PTR [ebp+0x598f286f],dl
  421e9b:	dec    ebx
  421e9c:	arpl   dx,si
  421e9e:	or     al,0x75
  421ea0:	adc    ah,BYTE PTR [ecx+0x22]
  421ea3:	repz and esp,edx
  421ea6:	mov    ah,0xa0
  421ea8:	sub    al,BYTE PTR [edi-0x6d]
  421eab:	out    dx,al
  421eac:	jmp    0x421eb3
  421eae:	and    DWORD PTR [ecx],ebp
  421eb0:	add    BYTE PTR [ecx+eax*1],cl
  421eb3:	xchg   esp,eax
  421eb4:	xchg   edx,eax
  421eb5:	mov    DWORD PTR [edi+0x5fe3e8c],edx
  421ebb:	out    0xd9,al
  421ebd:	and    ecx,DWORD PTR [edx-0x54]
  421ec0:	jae    0x421e8b
  421ec2:	and    ah,BYTE PTR [eax+eiz*8-0x7b580e4]
  421ec9:	aaa    
  421eca:	pop    edi
  421ecb:	cmp    al,0x52
  421ecd:	mov    edx,0xcdd7a0c7
  421ed2:	add    eax,0x850e6773
  421ed7:	sub    eax,0x11bda15d
  421edc:	lds    edx,FWORD PTR [eax]
  421ede:	ja     0x421eec
  421ee0:	out    0x18,eax
  421ee2:	pushf  
  421ee3:	mov    edi,ebx
  421ee5:	jl     0x421f25
  421ee7:	push   0xfffffff6
  421ee9:	or     DWORD PTR [edx+0x44],0x6e89f804
  421ef0:	inc    edi
  421ef1:	cmp    bl,BYTE PTR [edi+esi*4+0x40b816f5]
  421ef8:	jae    0x421eaa
  421efa:	imul   esi,DWORD PTR [esi-0x47],0xffffff91
  421efe:	les    ebp,FWORD PTR [eax]
  421f00:	push   ebx
  421f01:	in     al,0x65
  421f03:	in     al,dx
  421f04:	push   esi
  421f05:	mov    edi,DWORD PTR ds:0x4117c2ff
  421f0b:	lods   al,BYTE PTR ds:[esi]
  421f0c:	jns    0x421efc
  421f0e:	jns    0x421f0f
  421f10:	iretw  
  421f12:	shl    dh,1
  421f14:	les    eax,FWORD PTR [esi+0x2a]
  421f17:	jmp    0x421ef9
  421f19:	push   0xffffff83
  421f1b:	xchg   esp,eax
  421f1c:	sbb    dl,BYTE PTR [eax-0x2ef3258f]
  421f22:	leave  
  421f23:	inc    edi
  421f24:	inc    ecx
  421f25:	(bad)  
  421f26:	sub    eax,0x5ac30a28
  421f2b:	jae    0x421f62
  421f2d:	or     BYTE PTR [edx-0x9],bl
  421f30:	imul   eax,ecx,0x6802a6a4
  421f36:	je     0x421f54
  421f38:	out    dx,eax
  421f39:	push   ss
  421f3a:	fcomp  QWORD PTR [ecx]
  421f3c:	mov    ds:0x5b5c4609,eax
  421f41:	mov    BYTE PTR [esi],dh
  421f43:	lods   eax,DWORD PTR ds:[esi]
  421f44:	outs   dx,DWORD PTR ds:[esi]
  421f45:	fistp  DWORD PTR [esi+0x3f09bcf8]
  421f4b:	jb     0x421f1f
  421f4d:	adc    al,ah
  421f4f:	rol    BYTE PTR [eax+0x162e391d],0x82
  421f56:	sbb    ch,BYTE PTR [ebx-0x4f0ef758]
  421f5c:	sbb    edx,esi
  421f5e:	iret   
  421f5f:	(bad)  
  421f60:	cmc    
  421f61:	(bad)  
  421f62:	lods   al,BYTE PTR ds:[esi]
  421f63:	sbb    bl,BYTE PTR [esi+0x33]
  421f66:	icebp  
  421f67:	pop    esi
  421f68:	popa   
  421f69:	ss xor ecx,eax
  421f6c:	add    ecx,esi
  421f6e:	jne    0x41d82d
  421f74:	mov    ecx,DWORD PTR [ebp-0x8]
  421f77:	xor    ecx,eax
  421f79:	mov    eax,DWORD PTR [ebp+0x10]
  421f7c:	add    ecx,esi
  421f7e:	mov    DWORD PTR [eax],ecx
  421f80:	pop    edi
  421f81:	pop    esi
  421f82:	pop    ebx
  421f83:	leave  
  421f84:	ret    0xc
  421f87:	push   ebp
  421f88:	mov    ebp,esp
  421f8a:	sub    esp,0x7c
  421f8d:	push   esi
  421f8e:	sbb    esi,esi
  421f90:	push   edi
  421f91:	mov    eax,ds:0x42f36b
  421f96:	adc    esi,esi
  421f98:	mov    DWORD PTR [ebp-0x24],eax
  421f9b:	and    eax,DWORD PTR ds:0x42b008
  421fa1:	mov    eax,ds:0x42f477
  421fa6:	adc    edi,0x31bd
  421fac:	mov    DWORD PTR [ebp-0x34],eax
  421faf:	mov    eax,ds:0x4249fc
  421fb4:	mov    esi,DWORD PTR ds:0x424a94
  421fba:	sub    eax,esi
  421fbc:	or     eax,DWORD PTR [eax+esi*1]
  421fbf:	and    DWORD PTR [ebp-0x30],0x0
  421fc3:	sub    esi,DWORD PTR ds:0x42d014
  421fc9:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  421fd0:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  421fd7:	mov    eax,DWORD PTR [ebp-0x10]
  421fda:	mov    ecx,DWORD PTR [ebp-0x10]
  421fdd:	not    edi
  421fdf:	sub    eax,ecx
  421fe1:	mov    esi,DWORD PTR ds:0x429020
  421fe7:	xor    DWORD PTR ds:0x42a018,esi
  421fed:	mov    DWORD PTR [ebp-0x10],eax
  421ff0:	inc    DWORD PTR ds:0x42900c
  421ff6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  421ffd:	xor    edi,edi
  421fff:	xor    edi,DWORD PTR ds:0x42e004
  422005:	mov    edi,DWORD PTR [edi]
  422007:	sub    DWORD PTR ds:0x42901c,edi
  42200d:	mov    eax,DWORD PTR [ebp-0x18]
  422010:	mov    DWORD PTR ds:0x429028,0x1d
  42201a:	cmp    DWORD PTR ds:0x429028,0x0
  422021:	je     0x422077
  422027:	cmp    DWORD PTR ds:0x429028,0x4
  42202e:	jbe    0x422077
  422034:	jmp    0x422049
  422039:	push   0x1746
  42203e:	push   0x4baa
  422043:	call   DWORD PTR ds:0x430027
  422049:	cmp    DWORD PTR ds:0x429028,0x5
  422050:	jne    0x422063
  422056:	mov    esi,DWORD PTR ds:0x429028
  42205c:	dec    esi
  42205d:	mov    DWORD PTR ds:0x429028,esi
  422063:	xor    esi,esi
  422065:	add    esi,DWORD PTR ds:0x429028
  42206b:	dec    esi
  42206c:	mov    DWORD PTR ds:0x429028,esi
  422072:	jmp    0x42201a
  422077:	mov    ecx,DWORD PTR [ebp-0x18]
  42207a:	sub    eax,ecx
  42207c:	mov    DWORD PTR [ebp-0x18],eax
  42207f:	sub    edi,DWORD PTR ds:0x42d018
  422085:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  42208c:	mov    eax,DWORD PTR [ebp-0xc]
  42208f:	mov    ecx,DWORD PTR [ebp-0xc]
  422092:	or     esi,0x5a7b
  422098:	sub    eax,ecx
  42209a:	mov    DWORD PTR [ebp-0xc],eax
  42209d:	jmp    0x422e6d
  4220a2:	lea    esp,[ebx-0x440791fa]
  4220a8:	test   DWORD PTR [ebx-0x537f27ca],eax
  4220ae:	in     eax,dx
  4220af:	add    ecx,esi
  4220b1:	inc    ecx
  4220b2:	stc    
  4220b3:	mov    BYTE PTR [ebp+0x7a],bh
  4220b6:	iret   
  4220b7:	imul   edi,DWORD PTR [edx+0x7a],0x329b4114
  4220be:	push   edi
  4220bf:	scas   al,BYTE PTR es:[edi]
  4220c0:	push   ecx
  4220c1:	jnp    0x4220b5
  4220c3:	or     ebx,ebp
  4220c5:	imul   ebp,DWORD PTR [edx+0x51c97f16],0xd9bbfd8a
  4220cf:	mov    bl,0x51
  4220d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d2:	in     eax,0x4c
  4220d4:	out    dx,eax
  4220d5:	or     DWORD PTR [edi-0x5c4937ea],0xffffffef
  4220dc:	pop    esp
  4220dd:	addr16 or al,0xdf
  4220e0:	pop    esi
  4220e1:	ret    
  4220e2:	mov    bh,0x4c
  4220e4:	and    DWORD PTR [esi+0x384132d2],ebx
  4220ea:	push   ebp
  4220eb:	arpl   WORD PTR [eax-0x2],si
  4220ee:	div    DWORD PTR [edx+0x6c]
  4220f1:	xchg   BYTE PTR [edx],bh
  4220f3:	inc    esp
  4220f4:	xchg   ebp,eax
  4220f5:	call   0x25d5:0x9aa64e
  4220fc:	xor    al,0x78
  4220fe:	cs stos DWORD PTR es:[edi],eax
  422100:	adc    DWORD PTR [esi-0x475fdf35],ecx
  422106:	or     al,0x80
  422108:	ins    DWORD PTR es:[edi],dx
  422109:	push   esp
  42210a:	test   DWORD PTR [edi+0x63],esp
  42210d:	add    DWORD PTR [eax+edx*8],ebx
  422110:	int    0x94
  422112:	xor    DWORD PTR [ecx+0x43603778],ebx
  422118:	out    0xa6,al
  42211a:	mov    cl,0xdc
  42211c:	xor    eax,0x4116ff5f
  422121:	push   ecx
  422122:	out    0x93,eax
  422124:	mov    bh,0x28
  422126:	push   ebp
  422127:	push   eax
  422128:	push   ebp
  422129:	inc    esi
  42212a:	sub    DWORD PTR [eax],ebp
  42212c:	dec    edi
  42212d:	(bad)  
  42212e:	imul   edx,edx,0xfffffff1
  422131:	icebp  
  422132:	push   esi
  422133:	add    DWORD PTR [ebx-0x4431e7e7],0x7b03925e
  42213d:	test   DWORD PTR [ebp-0x3ece28b5],ebp
  422143:	xor    eax,0xe8c1eb73
  422148:	pop    ebp
  42214a:	aam    0xa8
  42214c:	into   
  42214d:	mov    edi,0x2ae8adda
  422152:	mov    ebx,ebx
  422154:	in     al,0x40
  422156:	jns    0x4221b0
  422158:	jbe    0x422167
  42215a:	or     dl,BYTE PTR ds:0x3bdc6e89
  422160:	sbb    DWORD PTR [ecx+0x33],edi
  422163:	aad    0x23
  422165:	jne    0x4221be
  422167:	sub    eax,0xddcc08b8
  42216c:	cwde   
  42216d:	or     cl,BYTE PTR [ecx+0x47]
  422170:	in     al,dx
  422171:	xchg   ecx,eax
  422172:	ror    BYTE PTR [eax],1
  422174:	leave  
  422175:	mov    ebx,DWORD PTR [edx-0xd]
  422178:	cmp    bl,BYTE PTR [ecx+edx*4-0x6e642400]
  42217f:	pop    eax
  422180:	mov    DWORD PTR [esi],0x2b89e5dd
  422186:	inc    edx
  422187:	dec    ecx
  422188:	dec    ebx
  422189:	icebp  
  42218a:	or     edx,ecx
  42218c:	call   0x466c:0xa8a7621d
  422193:	je     0x4221c8
  422195:	cmp    DWORD PTR [ebx-0x1f8d6833],edi
  42219b:	add    BYTE PTR [ebx+0x3a],0x11
  42219f:	pop    edx
  4221a0:	cmp    DWORD PTR [ebx+esi*4+0x26c1180d],esi
  4221a7:	cwde   
  4221a8:	sbb    dh,dh
  4221aa:	not    DWORD PTR ds:0xb95439e
  4221b0:	add    al,0x5f
  4221b2:	xor    bl,BYTE PTR [ebx]
  4221b4:	(bad)  
  4221b5:	jge    0x422230
  4221b7:	mov    edi,0x946010cd
  4221bc:	sub    DWORD PTR [esi+0x761ea79b],0xa6e5266e
  4221c6:	mov    fs,ebx
  4221c8:	mov    al,0xa0
  4221ca:	adc    esp,eax
  4221cc:	add    dl,BYTE PTR [edx+0x4b]
  4221cf:	imul   DWORD PTR ss:[eax]
  4221d2:	ins    BYTE PTR es:[edi],dx
  4221d3:	(bad)  
  4221d4:	xor    al,0x2a
  4221d6:	addr16 rdpmc 
  4221d9:	dec    esp
  4221da:	div    dl
  4221dc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4221de:	div    DWORD PTR [ebx+0x3c]
  4221e1:	jno    0x42224e
  4221e3:	cmp    al,0x8d
  4221e5:	xchg   esp,eax
  4221e6:	pusha  
  4221e7:	out    dx,al
  4221e8:	test   eax,0x10e2425
  4221ed:	inc    esi
  4221ee:	jmp    0xfe7a41f8
  4221f3:	or     eax,0x86fad219
  4221f8:	jb     0x4221cc
  4221fa:	xchg   DWORD PTR [eax-0x2],edi
  4221fd:	cmp    BYTE PTR [ecx],dl
  4221ff:	push   edx
  422200:	lea    esi,[edi+0x600fb52e]
  422206:	sbb    eax,0xe2dfd23c
  42220b:	mov    WORD PTR [eax],fs
  42220d:	add    eax,0xd5c697ce
  422212:	pop    ds
  422213:	jmp    0x422250
  422215:	sub    ax,0x37a6
  42221a:	cwde   
  42221b:	xchg   ebx,eax
  42221c:	adc    dl,BYTE PTR [edi+0x209ad014]
  422222:	scas   al,BYTE PTR es:[edi]
  422223:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  422225:	gs jg  0x422257
  422228:	sti    
  422229:	or     DWORD PTR [ecx+0x69],0x18
  42222d:	rol    BYTE PTR [ecx],cl
  42222f:	shr    al,0x6b
  422232:	fist   DWORD PTR [ebx]
  422234:	push   ebp
  422235:	pop    esp
  422236:	stc    
  422237:	fcos   
  422239:	or     eax,0xda5539cb
  42223e:	inc    esp
  42223f:	and    eax,0xd663e23b
  422244:	jns    0x42228f
  422246:	jne    0x4222b1
  422248:	inc    edx
  422249:	arpl   WORD PTR [esi+0x7ac3c875],si
  42224f:	xchg   cx,ax
  422251:	mov    ebp,0x4822ce9c
  422256:	das    
  422257:	test   DWORD PTR [esi+0x4ee70923],0x788aec09
  422261:	sub    esi,edx
  422263:	gs adc bl,ah
  422266:	xor    al,0xc3
  422268:	ds mov edx,0x95e12dff
  42226e:	test   eax,0x63f73e3
  422273:	push   ds
  422274:	pop    ds
  422275:	jae    0x422268
  422277:	ja     0x4222e1
  422279:	fldl2t 
  42227b:	adc    BYTE PTR es:[esi],0x62
  42227f:	les    edi,FWORD PTR [edi+0x5a]
  422282:	ret    0xf490
  422285:	enter  0x1ef4,0xa7
  422289:	je     0x422249
  42228b:	neg    BYTE PTR [ebx+0x34d54760]
  422291:	and    bh,BYTE PTR [eax+0x16725d33]
  422297:	mov    esi,0xec86ec5
  42229c:	sub    eax,0x18f15279
  4222a1:	xor    ecx,DWORD PTR [esi+edx*1+0x37463ed5]
  4222a8:	mov    dh,0xdb
  4222aa:	push   edx
  4222ab:	je     0x4222ec
  4222ad:	sbb    al,0x83
  4222af:	sahf   
  4222b0:	jno    0x4222b8
  4222b2:	cmp    DWORD PTR [ecx],0x72
  4222b5:	pop    es
  4222b6:	out    dx,eax
  4222b7:	(bad)  
  4222b8:	pop    eax
  4222b9:	jne    0x422281
  4222bb:	out    dx,eax
  4222bc:	sub    eax,0xa36f38f2
  4222c1:	jg     0x4222d0
  4222c3:	and    DWORD PTR [ebp-0x7daf0d32],0x74
  4222ca:	xlat   BYTE PTR ds:[ebx]
  4222cb:	fist   WORD PTR ds:0x1e88ffd3
  4222d1:	lds    esp,FWORD PTR [eax+ebx*4+0x62]
  4222d5:	cmp    eax,0x78e1fca0
  4222da:	add    cl,BYTE PTR [esi+0x55]
  4222dd:	push   ebp
  4222de:	xor    BYTE PTR [esi-0x66ff7662],bl
  4222e4:	sar    dh,cl
  4222e6:	xor    al,0xde
  4222e8:	adc    DWORD PTR [ebx-0x59],0xffd8cec5
  4222ef:	aaa    
  4222f0:	xor    DWORD PTR [esp+ebx*4],0x467bdffb
  4222f7:	or     eax,0x91ac6b65
  4222fc:	mov    al,ds:0x3bb945b8
  422301:	(bad)  
  422302:	sub    BYTE PTR [ecx+eax*2],ah
  422305:	jnp    0x4222ea
  422307:	loope  0x422331
  422309:	bound  esi,QWORD PTR [ecx-0x80]
  42230c:	mov    ds:0xe0329a96,eax
  422311:	dec    ecx
  422312:	int3   
  422313:	push   eax
  422314:	shl    BYTE PTR [edx-0x76],1
  422317:	test   al,0xcf
  422319:	fincstp 
  42231b:	fstp   st(3)
  42231d:	add    bh,BYTE PTR [ecx-0x102eec81]
  422323:	daa    
  422324:	and    dl,al
  422326:	stos   DWORD PTR es:[edi],eax
  422327:	add    DWORD PTR [ebp-0x2],ecx
  42232a:	mov    edi,0xc8485ccb
  42232f:	and    edi,esp
  422331:	outs   dx,BYTE PTR ds:[esi]
  422332:	in     eax,dx
  422333:	mov    edi,0x595b12b4
  422338:	or     BYTE PTR [ecx-0x33477fc9],0xb1
  42233f:	mov    esi,0xb417b57c
  422344:	sub    esp,esp
  422346:	xchg   ebx,eax
  422347:	ins    BYTE PTR es:[edi],dx
  422348:	pop    ecx
  422349:	cmp    BYTE PTR [ebx],al
  42234b:	jb     0x4222e4
  42234d:	pop    esi
  42234e:	dec    edi
  42234f:	fwait
  422350:	pop    edi
  422351:	dec    esi
  422352:	jg     0x422329
  422354:	sar    DWORD PTR [esp+esi*1+0x73],1
  422358:	jno    0x42239e
  42235a:	repz aas 
  42235c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42235d:	mov    dh,0x4
  42235f:	sub    DWORD PTR [edx],edi
  422361:	clts   
  422363:	loope  0x422368
  422365:	add    al,0x1
  422367:	sbb    BYTE PTR [eax],dh
  422369:	dec    edx
  42236a:	mov    edi,0xbb035b05
  42236f:	sub    dh,BYTE PTR [esi]
  422371:	adc    al,0xe8
  422373:	(bad)  
  422374:	test   BYTE PTR [ebp+0x63],0x1a
  422378:	fmul   DWORD PTR [ebp+0x686d5268]
  42237e:	xor    DWORD PTR [edi+0x58],ecx
  422381:	stos   BYTE PTR es:[edi],al
  422382:	xor    BYTE PTR [esi-0x18c08b76],al
  422388:	cmp    eax,0xfec8e023
  42238d:	push   ds
  42238e:	and    edx,ebx
  422390:	pop    ss
  422391:	xor    eax,DWORD PTR [ebx+ecx*1-0x33124df3]
  422398:	js     0x42234f
  42239a:	ins    DWORD PTR es:[edi],dx
  42239b:	pushf  
  42239c:	push   esi
  42239d:	sti    
  42239e:	je     0x4223f4
  4223a0:	addr16 ret 
  4223a2:	push   es
  4223a3:	(bad)  
  4223a4:	ror    DWORD PTR [ebp+0x211eda15],1
  4223aa:	pushw  cs
  4223ac:	push   esp
  4223ad:	jbe    0x422404
  4223af:	lods   eax,DWORD PTR ds:[esi]
  4223b0:	scas   eax,DWORD PTR es:[edi]
  4223b1:	stos   BYTE PTR es:[edi],al
  4223b2:	xor    al,0xa6
  4223b4:	mov    edx,0xde5ed51b
  4223b9:	(bad)  
  4223ba:	push   cs
  4223bb:	xchg   edi,eax
  4223bc:	lea    si,[edi]
  4223bf:	dec    esi
  4223c0:	retf   0x53f4
  4223c3:	test   BYTE PTR [edx-0x63],dl
  4223c6:	int    0x43
  4223c8:	push   ebx
  4223c9:	mov    al,ds:0x1d598631
  4223ce:	aaa    
  4223cf:	sub    ecx,esi
  4223d1:	mov    dh,0x5a
  4223d3:	pop    ebp
  4223d4:	adc    dl,ch
  4223d6:	pop    ebx
  4223d7:	push   ebx
  4223d8:	xor    ebx,esp
  4223da:	sbb    ecx,DWORD PTR [ecx-0x7e]
  4223dd:	mov    ebx,0x943790c1
  4223e2:	fidivr DWORD PTR [ecx+0x725ca4a5]
  4223e8:	adc    al,0xb6
  4223ea:	push   ds
  4223eb:	push   0xffffff9d
  4223ed:	adc    eax,0x184bf992
  4223f2:	mov    dh,ah
  4223f4:	cmc    
  4223f5:	daa    
  4223f6:	das    
  4223f7:	in     al,dx
  4223f8:	xchg   ebx,eax
  4223f9:	scas   al,BYTE PTR es:[edi]
  4223fa:	and    DWORD PTR [ebx],0x7
  4223fd:	jmp    0x6f9c:0xafd721ae
  422404:	xor    BYTE PTR [ebx-0x305fe393],0x4
  42240b:	push   ss
  42240c:	in     eax,0xd5
  42240e:	pop    es
  42240f:	sub    al,0x53
  422411:	ret    
  422412:	sbb    DWORD PTR [esi+0x3a],ebx
  422415:	mov    ebp,0x324f9e1
  42241a:	fnstsw WORD PTR [eax]
  42241c:	mov    cl,0x85
  42241e:	push   ebx
  42241f:	test   al,0xd0
  422421:	repz leave 
  422423:	fld    DWORD PTR [ebx]
  422425:	push   esi
  422426:	(bad)
  422429:	cli    
  42242a:	cmp    eax,0xbc6bb392
  42242f:	xchg   ecx,eax
  422430:	push   cs
  422431:	inc    eax
  422432:	inc    ecx
  422433:	and    al,0x9f
  422435:	in     eax,dx
  422436:	sbb    cl,BYTE PTR [esi+0x38]
  422439:	and    eax,0x231184ba
  42243e:	sub    al,0x3f
  422440:	cmp    eax,0x93e53166
  422445:	mov    eax,ds:0xb8cd7784
  42244a:	movups XMMWORD PTR [ecx-0x3e],xmm0
  42244e:	rcl    BYTE PTR [edi+0x4a0b3da3],cl
  422454:	sar    BYTE PTR [ebp-0x5c],0xa3
  422458:	xor    eax,0xe897097c
  42245e:	pop    edi
  42245f:	jo     0x42240b
  422461:	jno    0x4224db
  422463:	bound  eax,QWORD PTR [edi]
  422465:	sahf   
  422466:	inc    ebp
  422467:	fidivr DWORD PTR [eax]
  422469:	lods   eax,DWORD PTR ds:[esi]
  42246a:	jno    0x422423
  42246c:	adc    cl,BYTE PTR [ebx]
  42246e:	adc    DWORD PTR [edx-0x19],esi
  422471:	aad    0xa3
  422473:	jge    0x4224ad
  422475:	fldcw  WORD PTR [edi-0x33]
  422478:	sbb    eax,esi
  42247a:	popf   
  42247b:	ins    BYTE PTR es:[edi],dx
  42247c:	jno    0x42249f
  42247e:	cmp    al,0xfe
  422480:	xchg   edi,eax
  422481:	fidiv  DWORD PTR ds:0x77be36d7
  422487:	fcmovnbe st,st(7)
  422489:	aad    0x4d
  42248b:	(bad)  
  42248c:	out    0x3a,eax
  42248e:	xchg   esi,eax
  42248f:	pop    DWORD PTR [eax+edx*8+0x4f]
  422493:	and    ecx,DWORD PTR [esi+ebx*8]
  422496:	sub    BYTE PTR [esi-0x3058000e],al
  42249c:	sub    ecx,DWORD PTR [edi+ebp*4+0x20cf53f2]
  4224a3:	adc    ah,bh
  4224a5:	inc    esi
  4224a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224a7:	div    BYTE PTR [edx+0x17776102]
  4224ad:	pop    edi
  4224ae:	jb     0x4224b9
  4224b0:	jecxz  0x422462
  4224b2:	loope  0x422503
  4224b4:	nop
  4224b5:	mov    esi,ebx
  4224b7:	leave  
  4224b8:	int3   
  4224b9:	add    ah,BYTE PTR [eax]
  4224bb:	or     eax,0xc7c35871
  4224c0:	fs jnp 0x422487
  4224c3:	add    DWORD PTR [edx-0x7b],ebp
  4224c6:	xor    ah,BYTE PTR [edx+edx*2-0x27]
  4224ca:	jnp    0x42251b
  4224cc:	outs   dx,BYTE PTR ds:[esi]
  4224cd:	jl     0x4224f5
  4224cf:	mov    ebx,0x911e90bc
  4224d4:	ror    dl,0x36
  4224d7:	inc    ebx
  4224d8:	sub    esp,DWORD PTR [ecx+ebp*2]
  4224db:	pop    eax
  4224dc:	fwait
  4224dd:	pop    eax
  4224de:	addr16 call 0x2f658bb2
  4224e4:	rcr    DWORD PTR ds:0x6f73ad38,0x62
  4224eb:	cmp    esp,esp
  4224ed:	retf   
  4224ee:	jge    0x422567
  4224f0:	popa   
  4224f1:	or     BYTE PTR [edx-0x5e],0x7
  4224f5:	je     0x422531
  4224f7:	inc    eax
  4224f8:	loop   0x4224ec
  4224fa:	pop    esp
  4224fb:	pop    ebp
  4224fc:	and    ecx,DWORD PTR [eax]
  4224fe:	psllw  mm5,QWORD PTR [eax+0x2a]
  422502:	lahf   
  422503:	icebp  
  422504:	xchg   ebp,eax
  422505:	mov    eax,0x74d572f
  42250a:	into   
  42250b:	jmp    0x4224ef
  42250d:	cli    
  42250e:	add    eax,ebp
  422510:	push   0x49193681
  422515:	mov    cl,BYTE PTR [edx+0x4d0e4936]
  42251b:	xchg   ebp,eax
  42251c:	bound  esp,QWORD PTR [ebp-0x6c]
  42251f:	dec    eax
  422520:	mov    bh,0x7f
  422522:	sbb    eax,0xbf7e9551
  422527:	(bad)  
  422528:	push   ss
  422529:	std    
  42252a:	sahf   
  42252b:	jl     0x4224ba
  42252d:	pop    ss
  42252e:	dec    esi
  42252f:	sbb    BYTE PTR [bx-0x6ca8],bl
  422534:	mov    eax,ds:0x32ac8ebd
  422539:	xchg   edi,eax
  42253a:	and    DWORD PTR ss:[edi],eax
  42253d:	mov    esp,0xdb8d15ec
  422542:	and    esp,DWORD PTR [ecx]
  422544:	sar    ebp,cl
  422546:	(bad)  
  422547:	scas   al,BYTE PTR es:[edi]
  422548:	fidiv  DWORD PTR [edi]
  42254a:	in     al,0xd2
  42254c:	cmp    bh,BYTE PTR [ecx]
  42254e:	jnp    0x4224d5
  422550:	clc    
  422551:	std    
  422552:	cmp    BYTE PTR [edi-0x4229b4c2],cl
  422558:	and    dl,BYTE PTR [edi-0x1b398f04]
  42255e:	sbb    bh,ch
  422560:	mov    BYTE PTR [esi+ebp*1],bh
  422563:	xchg   al,dh
  422565:	in     al,dx
  422566:	(bad)  
  422567:	pusha  
  422568:	mov    ah,0x80
  42256a:	cmove  edi,DWORD PTR ds:0x123f2271
  422571:	dec    ebp
  422572:	neg    BYTE PTR [ecx]
  422574:	xchg   esi,eax
  422575:	push   si
  422577:	or     al,0xbe
  422579:	mov    esi,0x86cfa251
  42257e:	inc    eax
  42257f:	shl    BYTE PTR [ebp+0x2668422b],0x22
  422586:	les    edi,FWORD PTR [ebx+esi*4+0x13]
  42258a:	adc    DWORD PTR [esi+0x5b],esp
  42258d:	jg     0x4225b9
  42258f:	mov    ds:0x983396fe,eax
  422594:	jmp    0x9117:0x76e2b85e
  42259b:	into   
  42259c:	sub    edi,ebp
  42259e:	pop    edx
  42259f:	sbb    eax,0x953d5550
  4225a4:	inc    BYTE PTR [esi]
  4225a6:	dec    eax
  4225a7:	or     dh,0x4e
  4225aa:	mov    eax,fs
  4225ac:	xor    BYTE PTR [eax+eiz*1+0x25ebfcef],dh
  4225b3:	fisub  DWORD PTR [ebp-0xad3e0ba]
  4225b9:	out    dx,al
  4225ba:	pop    edx
  4225bb:	pop    edx
  4225bc:	sub    ch,ch
  4225be:	(bad)  
  4225bf:	jmp    0x270feecf
  4225c4:	or     BYTE PTR [eax+0x352ead1a],0xee
  4225cb:	sbb    dl,ch
  4225cd:	inc    ebp
  4225ce:	sub    esp,DWORD PTR [ebp+0x32]
  4225d1:	outs   dx,DWORD PTR ds:[esi]
  4225d2:	xchg   BYTE PTR [edi-0x511c2664],dl
  4225d8:	xchg   ebp,eax
  4225d9:	stc    
  4225da:	xchg   BYTE PTR [edi+0x1e498c2a],ah
  4225e0:	jo     0x422575
  4225e2:	sub    eax,0xbd32ec22
  4225e7:	add    al,0xa6
  4225e9:	lea    ebx,[eax]
  4225eb:	(bad)  
  4225ec:	sub    edi,DWORD PTR [ecx-0x2d]
  4225ef:	and    edx,ebp
  4225f1:	inc    ebp
  4225f2:	pusha  
  4225f3:	enter  0x7a25,0x43
  4225f7:	and    al,0xc3
  4225f9:	xchg   edi,eax
  4225fa:	mov    DWORD PTR [esi+0x66bf2e32],edx
  422600:	dec    eax
  422601:	test   DWORD PTR [ebp+eax*8+0x69],ecx
  422605:	mov    dl,BYTE PTR [ebx+0x604e155f]
  42260b:	mov    dl,0x72
  42260d:	jns    0x4225de
  42260f:	dec    edx
  422610:	sbb    ah,ah
  422612:	push   edi
  422613:	inc    ecx
  422614:	sub    bh,BYTE PTR [ebx+0x63]
  422617:	cld    
  422618:	xor    al,0x4b
  42261a:	cmp    DWORD PTR [ebx-0x6c],edx
  42261d:	adc    dh,BYTE PTR [ebx]
  42261f:	jns    0x4225f2
  422621:	repnz dec esi
  422623:	aaa    
  422624:	mov    ecx,0x40b52081
  422629:	sbb    eax,0xf7d84c78
  42262e:	mov    ebx,0x4a99fe72
  422633:	lds    edx,FWORD PTR [edx]
  422635:	addr16 cmp al,0x6b
  422638:	cwde   
  422639:	cmp    BYTE PTR ds:0x54089083,cl
  42263f:	xor    esp,DWORD PTR [ecx+0x39]
  422642:	mov    ds:0x9dabe614,al
  422647:	in     al,dx
  422648:	push   eax
  422649:	push   edx
  42264a:	loopne 0x42267c
  42264c:	adc    ecx,DWORD PTR [ebx-0x29]
  42264f:	dec    ebx
  422650:	adc    cl,BYTE PTR [edi]
  422652:	inc    edx
  422653:	jnp    0x4226c1
  422655:	pop    es
  422656:	(bad)  
  422657:	fiadd  WORD PTR [edi+esi*4]
  42265a:	lods   al,BYTE PTR ds:[esi]
  42265b:	mov    edx,0xf6d0a48c
  422660:	xchg   esp,eax
  422661:	std    
  422662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422663:	sbb    al,0x11
  422665:	cld    
  422666:	jb     0x422641
  422668:	cmp    al,0x89
  42266a:	dec    esi
  42266b:	jb     0x4225f9
  42266d:	ja     0x4226d6
  42266f:	cs push 0x29e9ede8
  422675:	xchg   DWORD PTR [eax+0x59],esi
  422678:	hlt    
  422679:	xchg   edx,eax
  42267a:	je     0x422638
  42267c:	or     ebx,0x74
  42267f:	pop    esp
  422680:	jge    0x4226c0
  422682:	push   ss
  422683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422684:	(bad)  
  422685:	aam    0xed
  422687:	pop    ds
  422688:	rcl    BYTE PTR [edx+0x33],cl
  42268b:	ficomp DWORD PTR [edi]
  42268d:	daa    
  42268e:	and    ah,ch
  422690:	push   eax
  422691:	add    dh,dh
  422693:	sar    BYTE PTR ds:0x7bd0d988,0xcf
  42269a:	mov    esp,0xfb93b44
  42269f:	mov    dl,0x9b
  4226a1:	not    DWORD PTR [ecx]
  4226a3:	dec    ebp
  4226a4:	js     0x42267e
  4226a6:	sbb    DWORD PTR [edx-0x37],eax
  4226a9:	lock or DWORD PTR [eax-0x3f],0x76
  4226ae:	ds shr bl,0x30
  4226b2:	inc    ebp
  4226b3:	lods   al,BYTE PTR ds:[esi]
  4226b4:	dec    edi
  4226b5:	addr16 jmp 0x422723
  4226b8:	xor    eax,ebp
  4226ba:	enter  0x56f2,0x23
  4226be:	jle    0x422669
  4226c0:	mov    ebx,0xeece6fa4
  4226c5:	loope  0x4226f4
  4226c7:	nop
  4226c8:	dec    ebp
  4226c9:	in     al,dx
  4226ca:	test   BYTE PTR [ecx+0x56],cl
  4226cd:	push   edi
  4226ce:	or     al,bh
  4226d0:	fadd   DWORD PTR ds:0x38393059
  4226d6:	pop    esi
  4226d7:	jge    0x42266b
  4226d9:	pop    esp
  4226da:	jb     0x42274b
  4226dc:	inc    edi
  4226dd:	fidivr WORD PTR [ebx]
  4226df:	in     al,dx
  4226e0:	sbb    cl,bh
  4226e2:	and    cl,dh
  4226e4:	test   BYTE PTR [ebp+0x79],bh
  4226e7:	xor    DWORD PTR [ecx-0x38],0x79efe0b6
  4226ee:	push   edx
  4226ef:	mov    eax,0x7b914d54
  4226f4:	bound  ebp,QWORD PTR [edx-0x474b06e4]
  4226fa:	cdq    
  4226fb:	mov    ah,cl
  4226fd:	mov    esp,0x299dd7b8
  422702:	mov    ecx,0x3f186dba
  422707:	cwde   
  422708:	pop    edx
  422709:	mov    al,0x85
  42270b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270c:	mov    dh,0xa5
  42270e:	mov    cl,0xd7
  422710:	in     eax,0x86
  422712:	add    dh,cl
  422714:	jno    0x4226f1
  422716:	push   edx
  422717:	add    BYTE PTR [ebx-0x44],0x96
  42271b:	rcl    DWORD PTR [esi-0x2d8c67b3],0x9f
  422722:	pop    ecx
  422723:	push   esp
  422724:	add    bl,BYTE PTR [ecx-0x32]
  422727:	push   ebx
  422728:	jne    0x4226b8
  42272a:	clc    
  42272b:	mov    edi,0x24be408d
  422730:	adc    BYTE PTR [ebp+0x2a],0x7e
  422734:	clc    
  422735:	push   esi
  422736:	scas   eax,DWORD PTR es:[edi]
  422737:	bound  esp,QWORD PTR ds:0x23586ada
  42273d:	mov    ecx,0x71afb332
  422742:	pop    esp
  422743:	jl     0x42270b
  422745:	mov    BYTE PTR [edx],0x4c
  422748:	sbb    BYTE PTR [ebx+0x50],cl
  42274b:	retf   
  42274c:	push   0x7557eaa0
  422751:	mov    ecx,0x909d51b6
  422756:	scas   eax,DWORD PTR es:[edi]
  422757:	popa   
  422758:	adc    al,0x62
  42275a:	adc    ebp,eax
  42275c:	(bad)  
  42275d:	rcl    BYTE PTR [edi-0x2471925b],cl
  422763:	addr16 push ebx
  422765:	mov    DWORD PTR [ebx+0x12a5ecaa],edx
  42276b:	ror    DWORD PTR [ebx],0x77
  42276e:	pushf  
  42276f:	rcl    al,1
  422771:	leave  
  422772:	and    eax,0x96280779
  422777:	fwait
  422778:	adc    ebp,ecx
  42277a:	pop    ebx
  42277b:	push   ebp
  42277c:	stos   DWORD PTR es:[edi],eax
  42277d:	popw   ss
  42277f:	fwait
  422780:	xchg   edi,edi
  422782:	mov    ebp,DWORD PTR [edi]
  422784:	aas    
  422785:	cmp    al,0x49
  422787:	adc    BYTE PTR [ebx],dh
  422789:	into   
  42278a:	cmc    
  42278b:	sub    ch,BYTE PTR [esi+0x7bfe96d3]
  422791:	gs xor al,0x28
  422794:	rol    BYTE PTR [esi+0xa],cl
  422797:	cmp    eax,0x38f4a8ca
  42279c:	sub    eax,ebx
  42279e:	push   0xffffffe2
  4227a0:	mov    bh,0x99
  4227a2:	add    dl,BYTE PTR [ecx-0x1e497800]
  4227a8:	lea    eax,[ebx+0x27ccda2c]
  4227ae:	scas   al,BYTE PTR es:[edi]
  4227af:	pop    ebp
  4227b0:	sub    al,0x2f
  4227b2:	mov    eax,0x488636a3
  4227b7:	dec    edx
  4227b8:	mov    eax,ds:0xde3ed0d9
  4227bd:	aaa    
  4227be:	inc    edi
  4227bf:	sar    DWORD PTR [ecx-0x5560394e],0x3d
  4227c6:	or     eax,0x7fb96775
  4227cb:	inc    ecx
  4227cc:	out    0x8f,al
  4227ce:	jp     0x4227f7
  4227d0:	inc    esi
  4227d1:	test   eax,0xac12889c
  4227d6:	cmp    BYTE PTR [edi-0x4569ca76],ah
  4227dc:	(bad)  
  4227dd:	jp     0x422804
  4227df:	outs   dx,BYTE PTR ds:[esi]
  4227e0:	cmp    eax,DWORD PTR [ebx+0x56e38081]
  4227e6:	cli    
  4227e7:	adc    ebx,DWORD PTR fs:[edi+0x75a9b54b]
  4227ee:	lods   al,BYTE PTR ds:[esi]
  4227ef:	cmc    
  4227f0:	lods   al,BYTE PTR ds:[esi]
  4227f1:	adc    ah,BYTE PTR [eax-0x20bf9821]
  4227f7:	out    dx,eax
  4227f8:	or     al,BYTE PTR [ebx]
  4227fa:	mov    ah,0x70
  4227fc:	(bad)  [edx]
  4227fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ff:	in     eax,dx
  422800:	mov    ebp,0x81a1e94b
  422805:	xchg   esp,eax
  422806:	cmp    al,0xcf
  422808:	dec    DWORD PTR [esi]
  42280a:	xor    BYTE PTR [edi-0x54b09f50],ah
  422810:	pop    esp
  422811:	adc    eax,0x6a6b8e48
  422816:	ds int 0xeb
  422819:	xchg   BYTE PTR [ebp+0x6b6e81d6],bl
  42281f:	pop    eax
  422820:	sub    BYTE PTR [ebp+eiz*8+0x364da81c],ch
  422827:	push   ecx
  422828:	into   
  422829:	dec    ebp
  42282a:	or     al,0x25
  42282c:	push   es
  42282d:	mov    ah,0xcc
  42282f:	hlt    
  422830:	cmc    
  422831:	mov    dh,0x62
  422833:	out    0x19,eax
  422835:	aad    0x1d
  422837:	pusha  
  422838:	outs   dx,DWORD PTR ds:[esi]
  422839:	pop    esp
  42283a:	mov    DWORD PTR [eax-0x70068e3c],ebp
  422840:	inc    ax
  422842:	repz xchg edi,eax
  422844:	loopne 0x4228a9
  422846:	jnp    0x4227e6
  422848:	jb     0x4228bf
  42284a:	push   ebx
  42284b:	mov    dh,0x9a
  42284d:	pop    esp
  42284f:	mov    ch,0x69
  422851:	xchg   esi,eax
  422852:	inc    esp
  422853:	out    dx,al
  422854:	xor    edx,edi
  422856:	and    DWORD PTR [edi],0x40
  422859:	adc    BYTE PTR [esi+0x6c5f9b49],cl
  42285f:	cli    
  422860:	mov    al,ds:0x875a366c
  422865:	and    edi,eax
  422867:	sub    BYTE PTR [ebx+0x20],dl
  42286a:	pop    eax
  42286b:	xchg   BYTE PTR [eax-0x6829468e],bl
  422871:	mov    ebx,0x2a6a8325
  422876:	(bad)  
  422877:	mov    dx,0x890
  42287b:	clc    
  42287c:	shr    BYTE PTR [ebp*4+0x3c2f6595],0x3a
  422884:	add    esp,DWORD PTR [ebx+0x3d90c2f9]
  42288a:	and    BYTE PTR [esi-0x61a20007],cl
  422890:	dec    eax
  422891:	or     al,0x5b
  422893:	shl    DWORD PTR [esi-0x66c65e23],cl
  422899:	aaa    
  42289a:	xor    edi,ecx
  42289c:	sub    al,bl
  42289e:	jo     0x42291b
  4228a0:	(bad)  
  4228a1:	sub    al,al
  4228a3:	fdiv   DWORD PTR [eax+ebx*1+0x2fc0deda]
  4228aa:	fistp  QWORD PTR [edx]
  4228ac:	or     al,0x9
  4228ae:	scas   al,BYTE PTR es:[edi]
  4228af:	pop    edx
  4228b0:	mov    ds:0xa265d7d9,eax
  4228b5:	xchg   edi,eax
  4228b6:	or     eax,0x5041a14c
  4228bb:	test   al,0xa2
  4228bd:	xor    esi,DWORD PTR [edx+0x4825901b]
  4228c3:	sbb    DWORD PTR [ecx-0x3a],esp
  4228c6:	sub    dl,dh
  4228c8:	mov    bl,0xd3
  4228ca:	xchg   edx,eax
  4228cb:	or     BYTE PTR [bx+di-0x1],bh
  4228cf:	jge    0x422931
  4228d1:	cmc    
  4228d2:	nop
  4228d3:	inc    eax
  4228d4:	(bad)  
  4228d5:	jmp    0x3632aef5
  4228da:	inc    esp
  4228db:	or     DWORD PTR [eax],edx
  4228dd:	mov    ds:0xd6ca0574,eax
  4228e2:	lahf   
  4228e3:	std    
  4228e4:	sub    edi,DWORD PTR [edx-0x6a35eb5d]
  4228ea:	push   ecx
  4228eb:	adc    edi,ebp
  4228ed:	jb     0x42295e
  4228ef:	jne    0x42296b
  4228f1:	dec    edx
  4228f2:	xchg   esp,eax
  4228f3:	not    DWORD PTR [esp+eax*4+0x21e22909]
  4228fa:	fwait
  4228fb:	xchg   DWORD PTR [edi],edx
  4228fd:	mov    ch,0xdc
  4228ff:	imul   ecx,DWORD PTR [ebp-0x3a],0x8
  422903:	sbb    DWORD PTR [ebp+0x331a6565],ebp
  422909:	or     eax,0x73e767ed
  42290e:	mov    esi,DWORD PTR [edi-0x39f0a4c3]
  422914:	xchg   ebp,eax
  422915:	xchg   esp,eax
  422916:	cli    
  422917:	repnz push ss
  422919:	mov    ebx,0x1d9e0280
  42291e:	push   ecx
  42291f:	sbb    DWORD PTR [ecx+0x598cce2a],edi
  422925:	sub    ch,cl
  422927:	inc    eax
  422928:	(bad)  
  422929:	mov    dh,0xef
  42292b:	inc    ebx
  42292c:	xchg   ebp,eax
  42292d:	repz lahf 
  42292f:	mov    ebx,0x7aa48583
  422934:	pop    ecx
  422935:	jl     0x4228fc
  422937:	(bad)  
  422938:	xchg   esp,eax
  422939:	mov    esp,0xbf67963f
  42293e:	fwait
  42293f:	jno    0x4229af
  422941:	lock lea edx,[eax]
  422944:	jmp    0xd1f9a16c
  422949:	cmp    dh,BYTE PTR [edx+0x67]
  42294c:	mov    al,ds:0x11ed8dd7
  422951:	push   0xffffffef
  422953:	push   eax
  422954:	mov    ebp,0x8690d3c3
  422959:	pushf  
  42295a:	aaa    
  42295b:	dec    edx
  42295c:	test   al,0xb
  42295e:	stc    
  42295f:	inc    ebp
  422960:	retf   0xd8e3
  422963:	add    BYTE PTR [ecx+0x6c],ah
  422966:	leave  
  422967:	mov    ebp,0x8836a456
  42296c:	xchg   edx,eax
  42296d:	rcl    BYTE PTR [ecx+0x23],cl
  422970:	inc    eax
  422971:	call   0x66c3:0xb26ae54a
  422978:	mov    eax,ds:0xe48a6cb3
  42297d:	out    dx,al
  42297e:	repz in al,0xd
  422981:	cmp    eax,0x36423839
  422986:	or     esi,esi
  422988:	dec    esp
  422989:	jbe    0x4229de
  42298b:	arpl   WORD PTR [eax-0x2f],sp
  42298e:	repnz push es
  422990:	inc    edx
  422991:	sub    ebx,edi
  422993:	rcr    DWORD PTR [ebx],0xfe
  422996:	lahf   
  422997:	add    DWORD PTR [esi-0x3997fd1b],ebx
  42299d:	mov    es,WORD PTR [edi+0x5acfe7fd]
  4229a3:	push   ecx
  4229a4:	cs push cs
  4229a6:	jle    0x422993
  4229a8:	and    ecx,ebx
  4229aa:	inc    ecx
  4229ab:	je     0x4229f5
  4229ad:	pop    esi
  4229ae:	dec    esp
  4229af:	mov    bh,0x85
  4229b1:	nop
  4229b2:	pushf  
  4229b3:	push   esi
  4229b4:	mov    ds:0xa6431bee,eax
  4229b9:	and    al,0x44
  4229bb:	add    ebp,ecx
  4229bd:	adc    al,dl
  4229bf:	loopne 0x4229f2
  4229c1:	sbb    DWORD PTR [edi+0x26],ebx
  4229c4:	cmp    BYTE PTR [edi],ah
  4229c6:	inc    ebp
  4229c7:	div    BYTE PTR [eax]
  4229c9:	mov    ecx,0x19b17e54
  4229ce:	ss aad 0x40
  4229d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d2:	arpl   WORD PTR [edi-0x33df0074],bp
  4229d8:	pop    eax
  4229d9:	scas   al,BYTE PTR es:[edi]
  4229da:	and    DWORD PTR [esi-0x36605455],ebx
  4229e0:	and    BYTE PTR [eax],dh
  4229e2:	mov    bl,0x1
  4229e4:	xchg   edi,eax
  4229e5:	shl    BYTE PTR [ecx-0x334190ab],cl
  4229eb:	(bad)  
  4229ec:	(bad)  
  4229ed:	test   BYTE PTR [eax+0xd32d99a],0xfa
  4229f4:	jmp    0x9dfb:0xd85b4426
  4229fb:	rcl    DWORD PTR [ebp-0x21],cl
  4229fe:	(bad)  
  4229ff:	jmp    0xbcbb81a1
  422a04:	scas   eax,DWORD PTR es:[edi]
  422a05:	mov    eax,0xda8967df
  422a0a:	call   0x49d0:0x2e5300c7
  422a11:	mov    edx,0x6f70f84
  422a16:	fucomip st,st(3)
  422a18:	pop    esi
  422a19:	sub    esp,DWORD PTR [esp+ecx*4]
  422a1c:	or     bh,bl
  422a1e:	mov    dl,0xa2
  422a20:	pop    esp
  422a21:	cdq    
  422a22:	ins    BYTE PTR es:[edi],dx
  422a23:	jmp    DWORD PTR [ebx-0x7ee5b2d7]
  422a29:	adc    eax,0x2b87404d
  422a2e:	sub    al,0xcc
  422a30:	sub    al,0x5b
  422a32:	cmp    DWORD PTR [edx+0x1427c619],0x50d73ff2
  422a3c:	jnp    0x4229c7
  422a3e:	ins    BYTE PTR es:[edi],dx
  422a3f:	mov    eax,ds:0xac72d8cc
  422a44:	lods   eax,DWORD PTR ds:[esi]
  422a45:	dec    eax
  422a46:	inc    esp
  422a47:	cli    
  422a48:	out    0xb2,eax
  422a4a:	dec    edx
  422a4b:	repnz int 0xe1
  422a4e:	(bad)  
  422a4f:	push   cs
  422a50:	arpl   sp,bx
  422a52:	xchg   ebx,eax
  422a53:	dec    ebp
  422a54:	push   ss
  422a55:	mov    eax,0xb158d48a
  422a5a:	inc    ebx
  422a5b:	call   0x3de8fc86
  422a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a61:	test   bl,dl
  422a63:	jb     0x422aa8
  422a65:	xlat   BYTE PTR ds:[ebx]
  422a66:	in     eax,dx
  422a67:	stc    
  422a68:	lods   al,BYTE PTR ds:[esi]
  422a69:	fsub   DWORD PTR [ebx]
  422a6b:	and    eax,0x6d2a3a3
  422a70:	or     cl,al
  422a72:	enter  0xbef5,0xb7
  422a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a77:	pop    eax
  422a78:	or     ah,0x6
  422a7b:	jno    0x4229ff
  422a7d:	or     eax,0x60a1c0b3
  422a82:	mov    ebx,0xec88429c
  422a87:	jns    0x422aa0
  422a89:	xchg   ebx,eax
  422a8a:	(bad)  
  422a8b:	xchg   esi,eax
  422a8c:	dec    esi
  422a8d:	add    al,BYTE PTR [ecx+0x5d]
  422a90:	sub    DWORD PTR [edx-0x534c6010],esi
  422a96:	jne    0x422b0a
  422a98:	push   ebp
  422a99:	jg     0x422acd
  422a9b:	and    al,BYTE PTR fs:[esi-0x68944ee7]
  422aa2:	mov    bl,0xd1
  422aa4:	jge    0x422b16
  422aa6:	cmp    DWORD PTR [ebp+edx*8-0xe228b37],0xaa1b66c9
  422ab1:	repnz mov fs,ecx
  422ab4:	test   DWORD PTR [edx+0x7f9b86eb],ebx
  422aba:	(bad)  
  422abb:	mov    ds:0x4416ec0c,eax
  422ac0:	out    dx,al
  422ac1:	(bad)  
  422ac2:	ficomp DWORD PTR [ebp-0x7c6b5331]
  422ac8:	mov    ds:0xca471738,al
  422acd:	pop    esi
  422ace:	out    0xd8,eax
  422ad0:	cmc    
  422ad1:	ss (bad) 
  422ad3:	into   
  422ad4:	ficom  DWORD PTR [ebx]
  422ad6:	or     edi,ecx
  422ad8:	in     eax,0xe5
  422ada:	fisubr DWORD PTR ds:0xd791d25c
  422ae0:	dec    esp
  422ae1:	aaa    
  422ae2:	test   BYTE PTR [ebx-0x23],cl
  422ae5:	add    eax,0x2243232e
  422aea:	mov    edi,DWORD PTR [edx+0x46]
  422aed:	sti    
  422aee:	sub    eax,0x81afcf20
  422af3:	mov    ds:0xcaf9976b,eax
  422af8:	jnp    0x422ad5
  422afa:	stos   DWORD PTR es:[edi],eax
  422afb:	(bad)  
  422afd:	out    dx,eax
  422afe:	pusha  
  422aff:	xchg   BYTE PTR [edx],al
  422b01:	fcmovnbe st,st(4)
  422b03:	jne    0x422a87
  422b05:	xchg   esi,eax
  422b06:	lods   al,BYTE PTR ds:[esi]
  422b07:	jecxz  0x422af8
  422b09:	cdq    
  422b0a:	add    ebx,DWORD PTR [ebx-0x68]
  422b0d:	stc    
  422b0e:	fcom   QWORD PTR [ecx-0x30]
  422b11:	rcl    BYTE PTR [esp+ebp*1-0x49],0xcb
  422b16:	outs   dx,DWORD PTR ss:[esi]
  422b18:	aaa    
  422b19:	mov    al,ds:0x10b4dd96
  422b1e:	mov    esp,0x6aeb9e4a
  422b23:	xor    al,0x84
  422b25:	sub    eax,0x9e2fc241
  422b2a:	jmp    0x422b17
  422b2c:	and    bl,ah
  422b2e:	mov    ebp,0x589796b7
  422b33:	and    eax,0x868920c5
  422b38:	push   edi
  422b39:	jae    0x422b6b
  422b3b:	shl    DWORD PTR [eax],0xa3
  422b3e:	sbb    bh,cl
  422b40:	adc    eax,0xb56aa10c
  422b45:	xchg   ecx,eax
  422b46:	scas   al,BYTE PTR es:[edi]
  422b47:	sub    al,0x5
  422b49:	fadd   QWORD PTR [eax-0x6fb3665e]
  422b4f:	dec    eax
  422b50:	or     BYTE PTR [ebx+edi*8],0x16
  422b54:	cmp    DWORD PTR [edi-0x41ea2229],ebp
  422b5a:	jge    0x422baf
  422b5c:	mov    DWORD PTR [edi+0x77],0xe9e582c0
  422b63:	xchg   ebp,eax
  422b64:	cmp    al,0x9a
  422b66:	and    eax,0x19a8615b
  422b6b:	xchg   ebx,eax
  422b6c:	lods   eax,DWORD PTR ds:[esi]
  422b6d:	std    
  422b6e:	mov    ecx,0x5a4bc42b
  422b73:	mov    eax,0x333180fc
  422b78:	cmc    
  422b79:	sbb    bh,BYTE PTR [edx-0x67]
  422b7c:	in     al,dx
  422b7d:	cwde   
  422b7e:	sbb    eax,0xa5e40d21
  422b83:	test   BYTE PTR [eax+eax*8-0x1e9f306a],ch
  422b8a:	push   ebp
  422b8b:	inc    edx
  422b8c:	scas   al,BYTE PTR es:[edi]
  422b8d:	xchg   edx,eax
  422b8e:	add    esi,edi
  422b90:	mov    ah,0xb1
  422b92:	je     0x422be2
  422b94:	cld    
  422b95:	add    BYTE PTR [esi],0x73
  422b98:	jecxz  0x422bf4
  422b9a:	add    al,0x63
  422b9c:	out    0xb5,al
  422b9e:	lods   al,BYTE PTR ds:[esi]
  422b9f:	retf   0xf9d
  422ba2:	sbb    cl,BYTE PTR [edx-0x4e332e9c]
  422ba8:	arpl   WORD PTR [ecx-0x46],bp
  422bab:	jecxz  0x422bba
  422bad:	mov    dh,BYTE PTR [edi-0x87b359]
  422bb3:	mov    eax,0x1abfb0c0
  422bb8:	mov    al,ds:0xc7c6d29a
  422bbd:	xchg   ebx,eax
  422bbe:	mov    dl,ah
  422bc0:	bswap  esp
  422bc2:	and    BYTE PTR [eax-0x12],cl
  422bc5:	iret   
  422bc6:	cmp    edi,edi
  422bc8:	(bad)  
  422bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bca:	dec    ecx
  422bcb:	aas    
  422bcc:	adc    BYTE PTR [esp+ebp*4],ch
  422bcf:	shrd   DWORD PTR [ecx-0x57ed6c4c],esi,cl
  422bd6:	cmp    eax,0xdf05e64b
  422bdb:	not    dl
  422bdd:	push   ds
  422bde:	xchg   ecx,eax
  422bdf:	inc    ebx
  422be0:	sbb    DWORD PTR [edi-0xc],esp
  422be3:	fld    DWORD PTR [edi*8-0x74fa7fc6]
  422bea:	xor    eax,0xbd345d17
  422bef:	imul   ebp,DWORD PTR [ecx+esi*8+0x49],0x62
  422bf4:	popa   
  422bf5:	sbb    BYTE PTR [esi],ah
  422bf7:	push   0xffffffc7
  422bf9:	mov    ch,0x90
  422bfb:	stos   DWORD PTR es:[edi],eax
  422bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bfd:	xchg   DWORD PTR [edi-0x2b],ebx
  422c00:	sub    edi,DWORD PTR [esi]
  422c02:	lods   al,BYTE PTR ds:[esi]
  422c03:	into   
  422c04:	mov    bl,dl
  422c06:	mov    ecx,0xc20c4e09
  422c0b:	imul   eax,edx,0xae6a5ab1
  422c11:	push   0xc1462919
  422c16:	adc    eax,DWORD PTR ss:[edi-0x37]
  422c1a:	daa    
  422c1b:	out    0x1d,eax
  422c1d:	dec    eax
  422c1e:	out    0x4d,eax
  422c20:	ss dec esp
  422c22:	add    BYTE PTR [edi],dl
  422c24:	push   esp
  422c25:	and    esp,DWORD PTR [eax+0x7a16d3ec]
  422c2b:	fcomp  QWORD PTR [ebp+0xe72c5f8]
  422c31:	sbb    BYTE PTR [ecx-0x6b1cab4f],0x7d
  422c38:	push   esi
  422c39:	popf   
  422c3a:	cmp    DWORD PTR [di],edi
  422c3d:	data16 std 
  422c3f:	inc    al
  422c41:	call   0x7a518e7e
  422c46:	pop    ebp
  422c47:	aas    
  422c48:	and    eax,0x53ebbb40
  422c4d:	ins    BYTE PTR es:[edi],dx
  422c4e:	xor    DWORD PTR [ebp-0x6d],ecx
  422c51:	xchg   ecx,eax
  422c52:	xchg   ebx,eax
  422c53:	aad    0x9f
  422c55:	add    dh,BYTE PTR [eax+edx*8]
  422c58:	jne    0x422c12
  422c5a:	shr    BYTE PTR [eax],0xde
  422c5d:	test   eax,0xfb390088
  422c62:	cmp    eax,0x3afb83b1
  422c67:	jne    0x422cdb
  422c69:	ss call 0x9a9e7a7d
  422c6f:	mov    al,0x89
  422c71:	ja     0x422c63
  422c73:	push   ecx
  422c74:	loop   0x422c87
  422c76:	aam    0xfd
  422c78:	iret   
  422c79:	dec    sp
  422c7b:	test   edi,edx
  422c7d:	cmp    BYTE PTR [ebx],bl
  422c7f:	js     0x422caa
  422c81:	pop    ds
  422c82:	xor    ebp,0x16
  422c85:	sbb    al,0x9c
  422c87:	adc    DWORD PTR [ebx+edi*8+0x8],esi
  422c8b:	scas   al,BYTE PTR es:[edi]
  422c8c:	jno    0x422c52
  422c8e:	bound  edi,QWORD PTR [esi]
  422c90:	aam    0x61
  422c92:	push   edx
  422c93:	and    al,0xcb
  422c95:	mov    cl,0x79
  422c97:	sub    DWORD PTR [edi-0x23],edx
  422c9a:	aaa    
  422c9b:	mov    edx,0xd2576c13
  422ca0:	inc    esi
  422ca1:	aad    0x3c
  422ca3:	mov    esp,0xa2e09c53
  422ca8:	mov    ecx,0xb374da42
  422cad:	pusha  
  422cae:	inc    eax
  422caf:	rol    DWORD PTR [esi-0x4bc03d12],1
  422cb5:	sub    eax,0xdc4e73f7
  422cba:	les    ebp,FWORD PTR [ecx-0xe]
  422cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cbe:	loope  0x422c6a
  422cc0:	retf   
  422cc1:	fadd   st,st(1)
  422cc3:	jp     0x422c8f
  422cc5:	inc    ebx
  422cc6:	jmp    0x8a15:0x9c5ed45f
  422ccd:	or     ecx,DWORD PTR [ebp+0x377188eb]
  422cd3:	das    
  422cd4:	pop    ebp
  422cd5:	and    BYTE PTR cs:[ebp+0x1541a9f9],0x88
  422cdd:	vmread DWORD PTR [ecx],ebp
  422ce0:	lahf   
  422ce1:	and    edx,esp
  422ce3:	mov    eax,0xffac476f
  422ce8:	in     eax,dx
  422ce9:	push   es
  422cea:	pop    esp
  422ceb:	push   ss
  422cec:	mov    ecx,0xa1be1e4f
  422cf1:	push   ebx
  422cf2:	mov    ebx,DWORD PTR [ecx-0x22]
  422cf5:	(bad)  
  422cf6:	jmp    0x3bdf:0x97e47edc
  422cfd:	push   ds
  422cfe:	add    al,0x6d
  422d00:	pop    es
  422d01:	ja     0x422cb9
  422d03:	mov    bh,0x4c
  422d05:	add    bh,bl
  422d07:	cs ja  0x422d30
  422d0a:	imul   edi,ebx,0xffffffb9
  422d0d:	xor    al,ch
  422d0f:	iret   
  422d10:	push   0x94121317
  422d15:	retf   
  422d16:	push   0x6c12cda9
  422d1b:	xor    BYTE PTR [eax],bh
  422d1d:	cli    
  422d1e:	or     cl,bh
  422d20:	shl    al,0xa
  422d23:	test   eax,0x66193d2a
  422d28:	das    
  422d29:	arpl   WORD PTR [edi],si
  422d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d2c:	jmp    0xe90a50b
  422d31:	mov    al,ds:0xa5586b38
  422d36:	fs mov esp,0x51e24eaa
  422d3c:	mov    fs,WORD PTR [edx+0x62]
  422d3f:	out    dx,eax
  422d40:	scas   eax,DWORD PTR es:[edi]
  422d41:	repz retf 0xa93c
  422d45:	and    cl,BYTE PTR [edx+0x22642f67]
  422d4b:	(bad)  
  422d4c:	pop    edi
  422d4d:	ffree  st(6)
  422d4f:	mov    dh,0x20
  422d51:	in     eax,0x7d
  422d53:	cmp    eax,DWORD PTR [ebp+0x7]
  422d56:	lds    esi,FWORD PTR [esi+ebp*2-0x24]
  422d5a:	pop    esi
  422d5b:	clc    
  422d5c:	mov    edi,eax
  422d5e:	loopne 0x422d84
  422d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d61:	dec    esi
  422d62:	dec    edx
  422d63:	adc    eax,0x879fcc82
  422d68:	in     al,0xbf
  422d6a:	ins    BYTE PTR es:[edi],dx
  422d6b:	mov    bl,BYTE PTR [ebp-0x2cfcf4c]
  422d71:	mov    esp,0x9ab83c48
  422d76:	bound  esi,QWORD PTR [edi+0x31]
  422d79:	push   cs
  422d7a:	ja     0x422db8
  422d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d7e:	xor    eax,0x22979b93
  422d83:	shl    BYTE PTR [ebx+0x2d77599],0xce
  422d8a:	or     al,0xa6
  422d8c:	xor    DWORD PTR [eax+ecx*2],eax
  422d8f:	in     eax,0xcd
  422d91:	mov    bh,0x78
  422d93:	mov    eax,ds:0xc2f9bb39
  422d98:	int3   
  422d99:	sahf   
  422d9a:	pusha  
  422d9b:	cs in  al,0xd8
  422d9e:	paddsw mm2,mm3
  422da1:	cmp    BYTE PTR [ebx+0x23],0x32
  422da5:	ins    DWORD PTR es:[edi],dx
  422da6:	sti    
  422da7:	stc    
  422da8:	fisttp QWORD PTR [ebp-0x1a39603b]
  422dae:	mov    esi,0xbe07e308
  422db3:	sbb    ecx,DWORD PTR [ebx]
  422db5:	jge    0x422d76
  422db7:	nop
  422db8:	pop    edi
  422db9:	pop    esi
  422dba:	push   eax
  422dbb:	popa   
  422dbc:	and    al,0xc
  422dbe:	test   DWORD PTR [ecx+0x67],edi
  422dc1:	(bad)  
  422dc2:	out    0xb0,eax
  422dc4:	xor    BYTE PTR [ebp+0x2134114a],ah
  422dca:	in     al,0x89
  422dcc:	icebp  
  422dcd:	or     BYTE PTR [ebx+0x34304a90],al
  422dd3:	mov    esp,0x5ef4eed5
  422dd8:	test   DWORD PTR [esi],ebp
  422dda:	test   BYTE PTR [edi-0x48f10a85],0x29
  422de1:	(bad)  
  422de2:	shl    al,1
  422de4:	push   ss
  422de5:	je     0x422d75
  422de7:	pop    ds
  422de8:	ds push 0x2d
  422deb:	int    0x46
  422ded:	loopne 0x422def
  422def:	sub    BYTE PTR [ebx+0x1fcbf05d],0x54
  422df6:	mov    DWORD PTR [esi-0x7b],edx
  422df9:	call   0xfd0e:0x22a93fb8
  422e00:	ins    DWORD PTR es:[edi],dx
  422e01:	jmp    0x50a6:0x12377bc1
  422e08:	fs xchg ebp,eax
  422e0a:	sar    BYTE PTR [edx+0xe],1
  422e0d:	pop    edi
  422e0e:	or     ah,BYTE PTR [ebx+esi*2+0x2c54e3de]
  422e15:	aam    0x14
  422e17:	xchg   edx,eax
  422e18:	inc    esi
  422e19:	mov    eax,0x8c1e732d
  422e1e:	fisttp DWORD PTR [eax+0x54]
  422e21:	call   0xd556:0xab60e9c0
  422e28:	icebp  
  422e29:	mov    al,0x9a
  422e2b:	icebp  
  422e2c:	or     al,0xfb
  422e2e:	xchg   ebp,eax
  422e2f:	sbb    eax,0xe9b31d71
  422e34:	cdq    
  422e35:	jnp    0x422ded
  422e37:	loope  0x422ea1
  422e39:	push   ds
  422e3a:	sub    ch,BYTE PTR [ebx-0x28eb1ef0]
  422e40:	dec    edx
  422e41:	add    bl,BYTE PTR [esi]
  422e43:	sub    bl,BYTE PTR [ebp+0x25b53fc4]
  422e49:	cmp    BYTE PTR [eax+0xf8c1e08],dl
  422e4f:	push   esi
  422e50:	not    DWORD PTR [edi+0x4a591741]
  422e56:	mov    esp,0x13178843
  422e5b:	xchg   esp,eax
  422e5c:	add    DWORD PTR [edx-0x1c],esp
  422e5f:	pop    es
  422e60:	lock xchg esp,eax
  422e62:	jb     0x422e5e
  422e64:	or     ebx,DWORD PTR fs:[esi]
  422e67:	mov    ?,WORD PTR [ecx+0x4626e12e]
  422e6d:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  422e74:	or     esi,edi
  422e76:	mov    eax,DWORD PTR [ebp-0x1c]
  422e79:	and    DWORD PTR ds:0x42d01c,0x0
  422e83:	mov    edi,DWORD PTR ds:0x42d01c
  422e89:	inc    edi
  422e8a:	mov    DWORD PTR ds:0x42d01c,edi
  422e90:	cmp    DWORD PTR ds:0x42d01c,0x21
  422e97:	jle    0x422ebd
  422e9d:	jmp    0x422eb0
  422ea2:	push   DWORD PTR [ebp-0xc]
  422ea5:	push   0x261c
  422eaa:	call   DWORD PTR ds:0x43002b
  422eb0:	cmp    DWORD PTR ds:0x42d01c,0x1f
  422eb7:	jb     0x422e83
  422ebd:	mov    ecx,DWORD PTR [ebp-0x1c]
  422ec0:	movzx  edi,WORD PTR ds:0x42901c
  422ec7:	adc    DWORD PTR ds:0x42c010,edi
  422ecd:	sub    eax,ecx
  422ecf:	xor    esi,esi
  422ed1:	xor    esi,DWORD PTR ds:0x42d004
  422ed7:	sub    DWORD PTR ds:0x42c01c,esi
  422edd:	mov    DWORD PTR [ebp-0x1c],eax
  422ee0:	mov    DWORD PTR ds:0x42c00c,0x19
  422eea:	cmp    DWORD PTR ds:0x42c00c,0x0
  422ef1:	je     0x422f44
  422ef7:	cmp    DWORD PTR ds:0x42c00c,0x3
  422efe:	jb     0x422f44
  422f04:	jmp    0x422f1c
  422f09:	push   DWORD PTR [ebp-0x1c]
  422f0c:	push   0x42d010
  422f11:	push   0x42f0a7
  422f16:	call   DWORD PTR ds:0x430033
  422f1c:	cmp    DWORD PTR ds:0x42c00c,0x4
  422f23:	jne    0x422f34
  422f29:	mov    eax,ds:0x42c00c
  422f2e:	dec    eax
  422f2f:	mov    ds:0x42c00c,eax
  422f34:	mov    eax,ds:0x42c00c
  422f39:	dec    eax
  422f3a:	mov    ds:0x42c00c,eax
  422f3f:	jmp    0x422eea
  422f44:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  422f4b:	mov    eax,DWORD PTR [ebp-0x20]
  422f4e:	and    DWORD PTR ds:0x429000,edx
  422f54:	mov    ecx,DWORD PTR [ebp-0x20]
  422f57:	mov    edi,DWORD PTR ds:0x42a004
  422f5d:	sub    edi,DWORD PTR ds:0x42c01c
  422f63:	mov    DWORD PTR ds:0x42a004,edi
  422f69:	sub    eax,ecx
  422f6b:	mov    DWORD PTR [ebp-0x20],eax
  422f6e:	mov    eax,DWORD PTR [ebp-0x2c]
  422f71:	sbb    DWORD PTR ds:0x42b018,edx
  422f77:	mov    ecx,DWORD PTR [ebp-0x20]
  422f7a:	or     DWORD PTR ds:0x42d008,ecx
  422f80:	mov    esi,0x75108a4
  422f85:	xor    eax,esi
  422f87:	mov    DWORD PTR ds:0x42c01c,0x12
  422f91:	cmp    DWORD PTR ds:0x42c01c,0x0
  422f98:	je     0x422fea
  422f9e:	cmp    DWORD PTR ds:0x42c01c,0x7
  422fa5:	ja     0x422fea
  422fab:	jmp    0x422fbc
  422fb0:	push   DWORD PTR [ebp-0x1c]
  422fb3:	push   DWORD PTR [ebp-0x20]
  422fb6:	call   DWORD PTR ds:0x430037
  422fbc:	cmp    DWORD PTR ds:0x42c01c,0x8
  422fc3:	jne    0x422fd6
  422fc9:	mov    edi,DWORD PTR ds:0x42c01c
  422fcf:	dec    edi
  422fd0:	mov    DWORD PTR ds:0x42c01c,edi
  422fd6:	xor    edi,edi
  422fd8:	xor    edi,DWORD PTR ds:0x42c01c
  422fde:	dec    edi
  422fdf:	mov    DWORD PTR ds:0x42c01c,edi
  422fe5:	jmp    0x422f91
  422fea:	mov    edi,0x3272ec
  422fef:	add    eax,edi
  422ff1:	or     eax,ecx
  422ff3:	mov    DWORD PTR [ebp-0x20],eax
  422ff6:	mov    eax,DWORD PTR [ebp-0x4]
  422ff9:	mov    ecx,DWORD PTR [ebp-0x4]
  422ffc:	sub    eax,ecx
  422ffe:	mov    DWORD PTR [ebp-0x4],eax
  423001:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  423008:	mov    eax,DWORD PTR [ebp-0xc]
  42300b:	xor    eax,esi
  42300d:	add    eax,edi
  42300f:	push   eax
  423010:	mov    eax,DWORD PTR [ebp-0x10]
  423013:	xor    eax,esi
  423015:	add    eax,edi
  423017:	push   eax
  423018:	mov    eax,DWORD PTR [ebp-0x4]
  42301b:	xor    eax,esi
  42301d:	add    eax,edi
  42301f:	push   eax
  423020:	lea    eax,[ebp-0x7c]
  423023:	push   eax
  423024:	push   DWORD PTR [ebp-0x2c]
  423027:	push   DWORD PTR [ebp-0x28]
  42302a:	call   0x416118
  42302f:	test   eax,eax
  423031:	je     0x42305f
  423037:	lea    eax,[ebp-0x7c]
  42303a:	push   eax
  42303b:	mov    eax,DWORD PTR [ebp-0x28]
  42303e:	xor    eax,esi
  423040:	add    eax,edi
  423042:	push   eax
  423043:	mov    eax,DWORD PTR [ebp-0x24]
  423046:	add    eax,0xaa
  42304b:	push   eax
  42304c:	mov    eax,DWORD PTR [ebp-0x24]
  42304f:	mov    eax,DWORD PTR [eax+0x198]
  423055:	push   DWORD PTR [eax]
  423057:	call   0x40cc14
  42305c:	mov    DWORD PTR [ebp-0x14],eax
  42305f:	lea    eax,[ebp+0x4]
  423062:	mov    DWORD PTR [ebp-0x30],eax
  423065:	mov    eax,DWORD PTR [ebp-0x14]
  423068:	test   eax,eax
  42306a:	je     0x4230d2
  423070:	lea    eax,[ebp-0x8]
  423073:	mov    DWORD PTR [ebp-0x38],eax
  423076:	mov    eax,DWORD PTR [ebp-0x34]
  423079:	mov    DWORD PTR [ebp-0x8],eax
  42307c:	mov    eax,DWORD PTR [ebp-0x8]
  42307f:	mov    ecx,DWORD PTR [ebp-0x14]
  423082:	sub    eax,ecx
  423084:	mov    DWORD PTR [ebp-0x8],eax
  423087:	mov    ecx,DWORD PTR [ebp-0x4]
  42308a:	xor    ecx,esi
  42308c:	mov    eax,0xffcd8d14
  423091:	sub    eax,ecx
  423093:	add    DWORD PTR [ebp-0x8],eax
  423096:	mov    eax,DWORD PTR [ebp-0x8]
  423099:	mov    ecx,DWORD PTR [ebp-0x14]
  42309c:	mov    DWORD PTR [ecx+0x1],eax
  42309f:	mov    eax,DWORD PTR [ebp-0x14]
  4230a2:	push   DWORD PTR [ebp-0x24]
  4230a5:	mov    BYTE PTR [eax],0xe9
  4230a8:	mov    eax,ds:0x42f1e7
  4230ad:	push   DWORD PTR [eax]
  4230af:	push   DWORD PTR ds:0x42f443
  4230b5:	push   DWORD PTR ds:0x42f1ef
  4230bb:	push   DWORD PTR ds:0x42f423
  4230c1:	push   DWORD PTR ds:0x42fe03
  4230c7:	push   DWORD PTR [ebp-0x28]
  4230ca:	push   DWORD PTR [ebp-0x2c]
  4230cd:	mov    eax,DWORD PTR [ebp-0x14]
  4230d0:	call   eax
  4230d2:	mov    eax,DWORD PTR [ebp-0x30]
  4230d5:	mov    ecx,DWORD PTR ds:0x42f3e7
  4230db:	add    DWORD PTR [eax],ecx
  4230dd:	pop    edi
  4230de:	pop    esi
  4230df:	leave  
  4230e0:	ret    
  4230e1:	push   ebp
  4230e2:	mov    ebp,esp
  4230e4:	sub    esp,0x18
  4230e7:	add    ecx,0x1177
  4230ed:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  4230f4:	lea    eax,[ebp+0x14]
  4230f7:	mov    DWORD PTR [ebp-0x4],eax
  4230fa:	xor    edx,edx
  4230fc:	add    edx,DWORD PTR ds:0x42a01c
  423102:	add    DWORD PTR ds:0x42a018,edx
  423108:	push   esi
  423109:	mov    esi,0xf89c85b0
  42310e:	mov    DWORD PTR [ebp-0xc],esi
  423111:	movzx  ecx,BYTE PTR ds:0x42c004
  423118:	add    DWORD PTR ds:0x42a008,ecx
  42311e:	lea    eax,[ebp-0xc]
  423121:	or     ecx,0x71b1
  423127:	mov    DWORD PTR [ebp-0x14],eax
  42312a:	mov    eax,DWORD PTR [ebp-0xc]
  42312d:	and    edx,DWORD PTR ds:0x42c008
  423133:	mov    edx,DWORD PTR [ebp-0x14]
  423136:	sbb    DWORD PTR ds:0x42b014,edi
  42313c:	mov    ecx,0x75108a4
  423141:	adc    DWORD PTR ds:0x42d008,0x42fa
  42314b:	xor    eax,ecx
  42314d:	sub    DWORD PTR ds:0x42a014,0x42d00c
  423157:	add    eax,0x3272ec
  42315c:	mov    DWORD PTR [edx],eax
  42315e:	adc    edx,eax
  423160:	mov    eax,ds:0x42f1e3
  423165:	mov    edx,DWORD PTR [ebp-0x4]
  423168:	mov    eax,DWORD PTR [eax]
  42316a:	sbb    DWORD PTR ds:0x42d000,0x2503
  423174:	add    eax,DWORD PTR [edx]
  423176:	movzx  edx,BYTE PTR ds:0x42b00c
  42317d:	add    edx,DWORD PTR ds:0x42b01c
  423183:	mov    DWORD PTR ds:0x42b00c,edx
  423189:	push   edi
  42318a:	mov    DWORD PTR ds:0x42901c,0x390b
  423194:	mov    DWORD PTR [ebp-0x8],eax
  423197:	and    edi,edx
  423199:	mov    edi,DWORD PTR [ebp+0x8]
  42319c:	adc    eax,eax
  42319e:	mov    eax,ds:0x42f36b
  4231a3:	mov    eax,DWORD PTR [eax+0x198]
  4231a9:	and    DWORD PTR ds:0x42c000,0x0
  4231b3:	mov    edx,DWORD PTR ds:0x42c000
  4231b9:	inc    edx
  4231ba:	mov    DWORD PTR ds:0x42c000,edx
  4231c0:	cmp    DWORD PTR ds:0x42c000,0x20
  4231c7:	jb     0x4231f1
  4231cd:	jmp    0x4231e4
  4231d2:	push   0x42f169
  4231d7:	push   0x0
  4231d9:	push   0x64f9
  4231de:	call   DWORD PTR ds:0x43003b
  4231e4:	cmp    DWORD PTR ds:0x42c000,0x15
  4231eb:	jb     0x4231b3
  4231f1:	xor    edi,ecx
  4231f3:	mov    edx,DWORD PTR ds:0x42c01c
  4231f9:	add    DWORD PTR ds:0x42d00c,edx
  4231ff:	mov    edx,0x3272ec
  423204:	adc    DWORD PTR ds:0x42d00c,0x354a
  42320e:	add    edi,edx
  423210:	cmp    DWORD PTR [eax],edi
  423212:	mov    DWORD PTR ds:0x42c018,0xd0b
  42321c:	je     0x423233
  423222:	mov    eax,DWORD PTR [eax]
  423224:	mov    DWORD PTR ds:0x42a010,0x6032
  42322e:	jmp    0x4235e3
  423233:	mov    eax,DWORD PTR [ebp+0x18]
  423236:	mov    DWORD PTR ds:0x42d008,0x3f3a
  423240:	cmp    eax,esi
  423242:	jne    0x42325c
  423248:	push   0xf89c85b1
  42324d:	mov    DWORD PTR ds:0x429004,0x3d8f
  423257:	jmp    0x4235d2
  42325c:	mov    esi,DWORD PTR [ebp+0x18]
  42325f:	mov    eax,0xf89c85b2
  423264:	mov    DWORD PTR ds:0x42d00c,0x2c1e
  42326e:	cmp    esi,eax
  423270:	mov    DWORD PTR ds:0x429008,0x446d
  42327a:	jne    0x4235c2
  423280:	mov    eax,DWORD PTR [ebp+0x10]
  423283:	xor    DWORD PTR ds:0x42d000,0x2610
  42328d:	xor    eax,ecx
  42328f:	add    eax,edx
  423291:	and    DWORD PTR ds:0x42c014,0x0
  42329b:	jmp    0x4232ad
  4232a0:	mov    esi,DWORD PTR ds:0x42c014
  4232a6:	inc    esi
  4232a7:	mov    DWORD PTR ds:0x42c014,esi
  4232ad:	cmp    DWORD PTR ds:0x42c014,0x17
  4232b4:	jae    0x4232dc
  4232ba:	cmp    DWORD PTR ds:0x42c014,0x1d
  4232c1:	ja     0x4232dc
  4232c7:	jmp    0x4232d7
  4232cc:	push   0x54c4
  4232d1:	call   DWORD PTR ds:0x43003f
  4232d7:	jmp    0x4232a0
  4232dc:	mov    DWORD PTR [ebp-0x18],eax
  4232df:	mov    eax,DWORD PTR [ebp+0xc]
  4232e2:	add    DWORD PTR ds:0x42a004,0x5855
  4232ec:	mov    esi,DWORD PTR [ebp-0x8]
  4232ef:	and    DWORD PTR ds:0x42c018,0x829
  4232f9:	xor    eax,ecx
  4232fb:	adc    DWORD PTR ds:0x42d000,0x54e9
  423305:	add    eax,edx
  423307:	imul   eax,DWORD PTR [esi]
  42330a:	mov    esi,DWORD PTR [ebp+0x8]
  42330d:	xor    esi,ecx
  42330f:	and    DWORD PTR ds:0x42b014,0x42901c
  423319:	add    esi,edx
  42331b:	cmp    esi,eax
  42331d:	not    DWORD PTR ds:0x42d018
  423323:	mov    eax,DWORD PTR [ebp-0x4]
  423326:	mov    DWORD PTR ds:0x42d00c,0x5bdb
  423330:	push   ebx
  423331:	mov    DWORD PTR ds:0x429014,0x4e26
  42333b:	je     0x423384
  423341:	adc    DWORD PTR ds:0x42b014,ecx
  423347:	mov    esi,DWORD PTR [ebp-0x18]
  42334a:	add    DWORD PTR [eax],esi
  42334c:	sub    DWORD PTR ds:0x429018,edi
  423352:	mov    eax,DWORD PTR [ebp-0x4]
  423355:	and    DWORD PTR ds:0x429014,0x244e
  42335f:	mov    esi,DWORD PTR [ebp+0xc]
  423362:	xor    esi,ecx
  423364:	adc    DWORD PTR ds:0x42a010,0x1100
  42336e:	add    esi,edx
  423370:	imul   esi,DWORD PTR [eax]
  423373:	mov    DWORD PTR [eax],esi
  423375:	mov    DWORD PTR ds:0x42b008,0x673b
  42337f:	jmp    0x423393
  423384:	adc    DWORD PTR ds:0x42a000,0x51cf
  42338e:	mov    esi,DWORD PTR [ebp+0x14]
  423391:	xor    DWORD PTR [eax],esi
  423393:	mov    eax,DWORD PTR [ebp-0x4]
  423396:	add    DWORD PTR ds:0x42b004,ebx
  42339c:	mov    edi,DWORD PTR [ebp+0x10]
  42339f:	mov    esi,DWORD PTR ds:0x42b014
  4233a5:	xor    DWORD PTR ds:0x42d010,esi
  4233ab:	xor    edi,ecx
  4233ad:	mov    esi,0xffcd8d14
  4233b2:	mov    ebx,esi
  4233b4:	and    DWORD PTR ds:0x42c004,0x42c010
  4233be:	sub    ebx,edi
  4233c0:	add    DWORD PTR [eax],ebx
  4233c2:	movzx  edi,WORD PTR ds:0x42a004
  4233c9:	adc    DWORD PTR ds:0x42b00c,edi
  4233cf:	mov    eax,DWORD PTR [ebp-0x4]
  4233d2:	or     edi,0x4676
  4233d8:	mov    edi,DWORD PTR [ebp-0x8]
  4233db:	adc    DWORD PTR ds:0x42b010,0x66f8
  4233e5:	add    edi,DWORD PTR [eax]
  4233e7:	mov    DWORD PTR [ebp-0x8],edi
  4233ea:	and    DWORD PTR ds:0x429008,0x0
  4233f4:	jmp    0x423406
  4233f9:	mov    edi,DWORD PTR ds:0x429008
  4233ff:	inc    edi
  423400:	mov    DWORD PTR ds:0x429008,edi
  423406:	cmp    DWORD PTR ds:0x429008,0x1e
  42340d:	jae    0x42346c
  423413:	cmp    DWORD PTR ds:0x429008,0xe
  42341a:	jbe    0x42346c
  423420:	jmp    0x42344b
  423425:	push   DWORD PTR [ebp-0x10]
  423428:	push   DWORD PTR [ebp-0x10]
  42342b:	push   0x1905
  423430:	push   0x5e48
  423435:	push   DWORD PTR [ebp-0x14]
  423438:	push   DWORD PTR [ebp-0xc]
  42343b:	push   0x1ad8
  423440:	push   0x42f0bb
  423445:	call   DWORD PTR ds:0x430047
  42344b:	cmp    DWORD PTR ds:0x429008,0xd
  423452:	jne    0x423467
  423458:	xor    edi,edi
  42345a:	or     edi,DWORD PTR ds:0x429008
  423460:	inc    edi
  423461:	mov    DWORD PTR ds:0x429008,edi
  423467:	jmp    0x4233f9
  42346c:	mov    eax,DWORD PTR [ebp+0xc]
  42346f:	mov    edi,DWORD PTR [ebp+0xc]
  423472:	and    DWORD PTR ds:0x429028,0x2929
  42347c:	xor    edi,ecx
  42347e:	sbb    DWORD PTR ds:0x42c000,0x429018
  423488:	xor    eax,ecx
  42348a:	lea    eax,[eax+edi*1+0x64e5d8]
  423491:	xor    edi,DWORD PTR ds:0x42b008
  423497:	mov    edi,DWORD PTR [ebp+0xc]
  42349a:	xor    edi,ecx
  42349c:	add    edi,edx
  42349e:	imul   eax,edi
  4234a1:	mov    edi,DWORD PTR [ebp+0xc]
  4234a4:	xor    edi,ecx
  4234a6:	sub    edi,eax
  4234a8:	mov    eax,DWORD PTR [ebp-0x4]
  4234ab:	add    edi,edx
  4234ad:	cmp    DWORD PTR [eax],edi
  4234af:	mov    eax,DWORD PTR [ebp-0x4]
  4234b2:	mov    edi,DWORD PTR [ebp+0x10]
  4234b5:	jg     0x4234c8
  4234bb:	xor    edi,ecx
  4234bd:	mov    ebx,esi
  4234bf:	sub    ebx,edi
  4234c1:	add    DWORD PTR [eax],ebx
  4234c3:	jmp    0x4234ce
  4234c8:	xor    edi,ecx
  4234ca:	add    edi,edx
  4234cc:	add    DWORD PTR [eax],edi
  4234ce:	mov    eax,DWORD PTR [ebp-0x8]
  4234d1:	mov    edi,DWORD PTR [ebp-0x10]
  4234d4:	mov    eax,DWORD PTR [eax]
  4234d6:	xor    edi,ecx
  4234d8:	add    edi,0x3272eb
  4234de:	not    edi
  4234e0:	and    eax,edi
  4234e2:	movsx  di,BYTE PTR [eax+0x1]
  4234e7:	mov    ebx,0x3b56
  4234ec:	sub    di,bx
  4234ef:	mov    ebx,0x8a94
  4234f4:	xor    di,bx
  4234f7:	mov    ebx,0x4f90
  4234fc:	cmp    di,bx
  4234ff:	jne    0x423527
  423505:	movsx  di,BYTE PTR [eax]
  423509:	mov    ebx,0x3b56
  42350e:	sub    di,bx
  423511:	mov    ebx,0x8a94
  423516:	xor    di,bx
  423519:	mov    ebx,0x4e63
  42351e:	cmp    di,bx
  423521:	je     0x423537
  423527:	mov    edi,DWORD PTR [ebp-0x10]
  42352a:	xor    edi,ecx
  42352c:	mov    ebx,esi
  42352e:	sub    ebx,edi
  423530:	add    eax,ebx
  423532:	jmp    0x4234e2
  423537:	mov    esi,DWORD PTR [ebp-0x14]
  42353a:	mov    esi,DWORD PTR [esi]
  42353c:	mov    edi,DWORD PTR [eax+0x3c]
  42353f:	lea    esi,[edi+esi*8+0x78]
  423543:	mov    esi,DWORD PTR [esi+eax*1]
  423546:	mov    DWORD PTR [ebp-0x8],esi
  423549:	mov    esi,DWORD PTR [ebp+0x8]
  42354c:	xor    esi,ecx
  42354e:	add    esi,edx
  423550:	mov    DWORD PTR [ebp-0x14],esi
  423553:	mov    esi,DWORD PTR [ebp+0x8]
  423556:	mov    edi,DWORD PTR [ebp-0x8]
  423559:	xor    esi,ecx
  42355b:	add    esi,edx
  42355d:	pop    ebx
  42355e:	cmp    edi,esi
  423560:	jne    0x42357e
  423566:	mov    eax,DWORD PTR [ebp+0xc]
  423569:	xor    eax,ecx
  42356b:	mov    ecx,DWORD PTR [ebp-0x8]
  42356e:	add    eax,edx
  423570:	imul   eax,ecx
  423573:	mov    DWORD PTR [ebp-0x8],eax
  423576:	push   DWORD PTR [ebp+0x18]
  423579:	jmp    0x4235d2
  42357e:	mov    ecx,DWORD PTR [ebp-0x8]
  423581:	add    ecx,eax
  423583:	mov    DWORD PTR [ebp-0x14],ecx
  423586:	mov    ecx,DWORD PTR [ebp-0x14]
  423589:	mov    ecx,DWORD PTR [ecx+0xc]
  42358c:	movsx  cx,BYTE PTR [ecx+eax*1]
  423591:	mov    edx,0x3b56
  423596:	sub    cx,dx
  423599:	mov    edx,0x8a94
  42359e:	xor    cx,dx
  4235a1:	mov    edx,0x4e61
  4235a6:	cmp    cx,dx
  4235a9:	jne    0x423576
  4235af:	mov    ecx,DWORD PTR ds:0x42f36b
  4235b5:	mov    ecx,DWORD PTR [ecx+0x198]
  4235bb:	mov    DWORD PTR [ecx],eax
  4235bd:	jmp    0x4235e3
  4235c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4235c5:	cmp    ecx,0xf89c85b1
  4235cb:	jne    0x4235e3
  4235d1:	push   eax
  4235d2:	push   DWORD PTR [ebp+0x14]
  4235d5:	push   DWORD PTR [ebp+0x10]
  4235d8:	push   DWORD PTR [ebp+0xc]
  4235db:	push   DWORD PTR [ebp+0x8]
  4235de:	call   0x4230e1
  4235e3:	pop    edi
  4235e4:	pop    esi
  4235e5:	leave  
  4235e6:	ret    0x14
  4235e9:	push   ebp
  4235ea:	mov    ebp,esp
  4235ec:	sub    esp,0x70
  4235ef:	push   edi
  4235f0:	push   0x42f47b
  4235f5:	and    DWORD PTR ds:0x42d004,0x1ec1
  4235ff:	call   DWORD PTR ds:0x43002f
  423605:	mov    edi,DWORD PTR ds:0x42d014
  42360b:	sbb    DWORD PTR ds:0x42b014,edi
  423611:	mov    edi,DWORD PTR ds:0x43004f
  423617:	sbb    DWORD PTR ds:0x42a014,0x42c000
  423621:	push   0x42f49b
  423626:	call   edi
  423628:	adc    DWORD PTR ds:0x429004,0x5ead
  423632:	test   eax,eax
  423634:	je     0x423676
  42363a:	push   0x0
  42363c:	adc    DWORD PTR ds:0x42d000,0x42c004
  423646:	push   0x0
  423648:	add    DWORD PTR ds:0x42b008,0x118d
  423652:	push   0x42f50b
  423657:	and    DWORD PTR ds:0x42900c,0x1fff
  423661:	call   DWORD PTR ds:0x43001f
  423667:	mov    DWORD PTR ds:0x42a01c,0x2e2c
  423671:	jmp    0x42455e
  423676:	push   esi
  423677:	xor    esi,esi
  423679:	or     esi,DWORD PTR ds:0x42c000
  42367f:	sub    esi,DWORD PTR ds:0x42901c
  423685:	mov    DWORD PTR ds:0x42c000,esi
  42368b:	mov    esi,DWORD PTR ds:0x430043
  423691:	add    DWORD PTR ds:0x429024,0x42a000
  42369b:	lea    eax,[ebp-0x70]
  42369e:	push   eax
  42369f:	xor    DWORD PTR ds:0x42b010,0x42a00c
  4236a9:	push   0x42f4d7
  4236ae:	dec    DWORD PTR ds:0x42900c
  4236b4:	call   esi
  4236b6:	test   eax,eax
  4236b8:	mov    DWORD PTR ds:0x42b018,0x2e12
  4236c2:	je     0x4236dc
  4236c8:	push   0x42f54b
  4236cd:	mov    DWORD PTR ds:0x42c014,0x3c92
  4236d7:	jmp    0x423777
  4236dc:	sbb    DWORD PTR ds:0x429020,0x6e1f
  4236e6:	push   0x42f563
  4236eb:	call   edi
  4236ed:	test   eax,eax
  4236ef:	mov    DWORD PTR ds:0x42b010,0x136e
  4236f9:	je     0x423727
  4236ff:	adc    DWORD PTR ds:0x42c010,0x42a008
  423709:	push   0x0
  42370b:	push   0x0
  42370d:	push   0x42f5d3
  423712:	add    DWORD PTR ds:0x42b004,0x42c014
  42371c:	call   DWORD PTR ds:0x43001f
  423722:	jmp    0x42455d
  423727:	xor    DWORD PTR ds:0x429014,0x61d8
  423731:	lea    eax,[ebp-0x70]
  423734:	sbb    DWORD PTR ds:0x42c01c,0x42d004
  42373e:	push   eax
  42373f:	neg    DWORD PTR ds:0x42c018
  423745:	push   0x42f59f
  42374a:	call   esi
  42374c:	sbb    DWORD PTR ds:0x429020,0x42a000
  423756:	test   eax,eax
  423758:	mov    DWORD PTR ds:0x42b014,0x3bd8
  423762:	je     0x42378c
  423768:	or     DWORD PTR ds:0x42a000,0x5797
  423772:	push   0x42f613
  423777:	sub    DWORD PTR ds:0x429020,0x7429
  423781:	call   DWORD PTR ds:0x430023
  423787:	jmp    0x42455d
  42378c:	mov    DWORD PTR [ebp-0x2c],0x0
  423793:	mov    eax,ds:0x42d018
  423798:	sbb    eax,DWORD PTR ds:0x42c018
  42379e:	mov    ds:0x42d018,eax
  4237a3:	mov    eax,DWORD PTR [ebp-0x20]
  4237a6:	mov    DWORD PTR [ebp-0x20],eax
  4237a9:	mov    DWORD PTR ds:0x42a004,0x1b
  4237b3:	cmp    DWORD PTR ds:0x42a004,0x0
  4237ba:	je     0x423811
  4237c0:	cmp    DWORD PTR ds:0x42a004,0x2
  4237c7:	jbe    0x423811
  4237cd:	jmp    0x4237e3
  4237d2:	push   DWORD PTR [ebp-0x28]
  4237d5:	push   0x7240
  4237da:	push   DWORD PTR [ebp-0x1c]
  4237dd:	call   DWORD PTR ds:0x43004b
  4237e3:	cmp    DWORD PTR ds:0x42a004,0x3
  4237ea:	jne    0x4237ff
  4237f0:	xor    edx,edx
  4237f2:	add    edx,DWORD PTR ds:0x42a004
  4237f8:	dec    edx
  4237f9:	mov    DWORD PTR ds:0x42a004,edx
  4237ff:	mov    edx,DWORD PTR ds:0x42a004
  423805:	dec    edx
  423806:	mov    DWORD PTR ds:0x42a004,edx
  42380c:	jmp    0x4237b3
  423811:	mov    ecx,0xf89c85b0
  423816:	mov    DWORD PTR [ebp-0x4],ecx
  423819:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  423820:	lea    eax,[ebp-0x14]
  423823:	adc    edi,edi
  423825:	mov    DWORD PTR [ebp-0x2c],eax
  423828:	lea    eax,[ebp-0x18]
  42382b:	sbb    edi,0x185f
  423831:	mov    DWORD PTR [ebp-0x24],eax
  423834:	inc    edi
  423835:	mov    eax,ds:0x42f36b
  42383a:	mov    eax,DWORD PTR [eax+0x1c8]
  423840:	add    DWORD PTR ds:0x42b014,edi
  423846:	mov    eax,DWORD PTR [eax]
  423848:	mov    edx,DWORD PTR [ebp-0x24]
  42384b:	mov    edi,0x75108a4
  423850:	mov    DWORD PTR ds:0x42b004,0x30ab
  42385a:	xor    eax,edi
  42385c:	sbb    DWORD PTR ds:0x42c000,0x429024
  423866:	push   ebx
  423867:	sub    ebx,0x6eba
  42386d:	mov    ebx,0x3272ec
  423872:	adc    DWORD PTR ds:0x42d018,0x42c01c
  42387c:	add    eax,ebx
  42387e:	mov    DWORD PTR ds:0x42d008,0x4b8b
  423888:	mov    DWORD PTR [edx],eax
  42388a:	mov    eax,0x64e4
  42388f:	mov    eax,ds:0x42fed3
  423894:	cmp    eax,0x434cdbf8
  423899:	jne    0x4239b1
  42389f:	mov    eax,DWORD PTR [ebp-0x4]
  4238a2:	inc    DWORD PTR ds:0x429014
  4238a8:	mov    edx,DWORD PTR ds:0x42f36b
  4238ae:	and    DWORD PTR ds:0x429024,0x0
  4238b8:	mov    esi,DWORD PTR ds:0x429024
  4238be:	inc    esi
  4238bf:	mov    DWORD PTR ds:0x429024,esi
  4238c5:	cmp    DWORD PTR ds:0x429024,0xa
  4238cc:	jg     0x42390e
  4238d2:	jmp    0x4238e7
  4238d7:	push   0x42c018
  4238dc:	push   0x42f19b
  4238e1:	call   DWORD PTR ds:0x43000b
  4238e7:	cmp    DWORD PTR ds:0x429024,0x9
  4238ee:	jne    0x423901
  4238f4:	mov    esi,DWORD PTR ds:0x429024
  4238fa:	inc    esi
  4238fb:	mov    DWORD PTR ds:0x429024,esi
  423901:	cmp    DWORD PTR ds:0x429024,0x12
  423908:	jb     0x4238b8
  42390e:	mov    edx,DWORD PTR [edx+0x198]
  423914:	and    DWORD PTR ds:0x429008,edx
  42391a:	xor    eax,edi
  42391c:	or     esi,DWORD PTR ds:0x42901c
  423922:	add    eax,ebx
  423924:	xor    esi,0x27f0
  42392a:	mov    DWORD PTR [edx],eax
  42392c:	mov    eax,ds:0x42b01c
  423931:	adc    eax,DWORD PTR ds:0x42a008
  423937:	mov    ds:0x42b01c,eax
  42393c:	mov    eax,DWORD PTR [ebp-0x4]
  42393f:	sbb    esi,0x278
  423945:	xor    eax,edi
  423947:	mov    DWORD PTR ds:0x42a004,0x14
  423951:	cmp    DWORD PTR ds:0x42a004,0x0
  423958:	je     0x4239aa
  42395e:	cmp    DWORD PTR ds:0x42a004,0x3
  423965:	ja     0x4239aa
  42396b:	jmp    0x42397e
  423970:	push   0x42d01c
  423975:	push   DWORD PTR [ebp-0x20]
  423978:	call   DWORD PTR ds:0x43000f
  42397e:	cmp    DWORD PTR ds:0x42a004,0x4
  423985:	jne    0x423998
  42398b:	mov    esi,DWORD PTR ds:0x42a004
  423991:	dec    esi
  423992:	mov    DWORD PTR ds:0x42a004,esi
  423998:	mov    esi,DWORD PTR ds:0x42a004
  42399e:	dec    esi
  42399f:	mov    DWORD PTR ds:0x42a004,esi
  4239a5:	jmp    0x423951
  4239aa:	add    eax,ebx
  4239ac:	mov    ds:0x42fed3,eax
  4239b1:	movzx  eax,WORD PTR ds:0x42d008
  4239b8:	and    DWORD PTR ds:0x429028,eax
  4239be:	mov    eax,ds:0x42f36b
  4239c3:	mov    eax,DWORD PTR [eax+0x18c]
  4239c9:	adc    DWORD PTR ds:0x429014,0x7baf
  4239d3:	mov    eax,DWORD PTR [eax]
  4239d5:	mov    DWORD PTR ds:0x42b004,0x12
  4239df:	cmp    DWORD PTR ds:0x42b004,0x0
  4239e6:	je     0x423a30
  4239ec:	cmp    DWORD PTR ds:0x42b004,0x5
  4239f3:	ja     0x423a30
  4239f9:	jmp    0x423a04
  4239fe:	call   DWORD PTR ds:0x430013
  423a04:	cmp    DWORD PTR ds:0x42b004,0x6
  423a0b:	jne    0x423a1e
  423a11:	mov    esi,DWORD PTR ds:0x42b004
  423a17:	dec    esi
  423a18:	mov    DWORD PTR ds:0x42b004,esi
  423a1e:	mov    esi,DWORD PTR ds:0x42b004
  423a24:	dec    esi
  423a25:	mov    DWORD PTR ds:0x42b004,esi
  423a2b:	jmp    0x4239df
  423a30:	mov    DWORD PTR [ebp-0x34],eax
  423a33:	and    DWORD PTR ds:0x42900c,0x0
  423a3d:	jmp    0x423a4f
  423a42:	mov    esi,DWORD PTR ds:0x42900c
  423a48:	inc    esi
  423a49:	mov    DWORD PTR ds:0x42900c,esi
  423a4f:	cmp    DWORD PTR ds:0x42900c,0x1b
  423a56:	jae    0x423a9f
  423a5c:	cmp    DWORD PTR ds:0x42900c,0xb
  423a63:	jl     0x423a9f
  423a69:	jmp    0x423a7e
  423a6e:	push   0x42f14f
  423a73:	push   0x1
  423a75:	push   DWORD PTR [ebp-0x24]
  423a78:	call   DWORD PTR ds:0x430017
  423a7e:	cmp    DWORD PTR ds:0x42900c,0xa
  423a85:	jne    0x423a9a
  423a8b:	xor    esi,esi
  423a8d:	add    esi,DWORD PTR ds:0x42900c
  423a93:	inc    esi
  423a94:	mov    DWORD PTR ds:0x42900c,esi
  423a9a:	jmp    0x423a42
  423a9f:	mov    eax,0xf89c85bc
  423aa4:	or     DWORD PTR ds:0x42b000,ecx
  423aaa:	mov    DWORD PTR [ebp-0x24],eax
  423aad:	mov    DWORD PTR [ebp-0x24],eax
  423ab0:	xor    DWORD PTR ds:0x42d018,ecx
  423ab6:	mov    DWORD PTR [ebp-0x24],eax
  423ab9:	dec    esi
  423aba:	mov    DWORD PTR [ebp-0x24],ecx
  423abd:	or     esi,DWORD PTR ds:0x42c000
  423ac3:	mov    DWORD PTR [ebp-0x38],eax
  423ac6:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  423acd:	adc    DWORD PTR ds:0x42901c,ecx
  423ad3:	mov    esi,DWORD PTR [ebp-0x4]
  423ad6:	sbb    DWORD PTR ds:0x429004,0x42b01c
  423ae0:	xor    esi,edi
  423ae2:	add    esi,ebx
  423ae4:	jmp    0x423c33
  423ae9:	mov    eax,DWORD PTR [ebp-0x8]
  423aec:	add    DWORD PTR ds:0x42b008,0x42d014
  423af6:	xor    eax,edi
  423af8:	sub    DWORD PTR ds:0x429004,0x42b014
  423b02:	lea    eax,[eax+esi*1+0x3272ec]
  423b09:	and    DWORD PTR ds:0x42d00c,0x42a00c
  423b13:	push   eax
  423b14:	mov    DWORD PTR ds:0x42c018,0x956
  423b1e:	mov    eax,DWORD PTR [ebp-0x24]
  423b21:	add    DWORD PTR ds:0x42b018,0x42d004
  423b2b:	xor    eax,edi
  423b2d:	and    DWORD PTR ds:0x42d010,0x42b01c
  423b37:	lea    eax,[ebp+eax*1+0x3272f4]
  423b3e:	xor    DWORD PTR ds:0x42b018,0x429018
  423b48:	push   eax
  423b49:	adc    DWORD PTR ds:0x42a014,0x1370
  423b53:	mov    eax,ds:0x42f36b
  423b58:	add    DWORD PTR ds:0x42d014,0xcb6
  423b62:	push   DWORD PTR [eax+0x1bc]
  423b68:	call   0x424563
  423b6d:	and    DWORD PTR ds:0x429004,0x0
  423b77:	mov    eax,ds:0x429004
  423b7c:	inc    eax
  423b7d:	mov    ds:0x429004,eax
  423b82:	cmp    DWORD PTR ds:0x429004,0x7
  423b89:	jl     0x423bde
  423b8f:	jmp    0x423bb9
  423b94:	push   0x50e0
  423b99:	push   DWORD PTR [ebp-0x10]
  423b9c:	push   0x429008
  423ba1:	push   DWORD PTR [ebp-0x18]
  423ba4:	push   0x60f5
  423ba9:	push   0x7920
  423bae:	push   0x2e0e
  423bb3:	call   DWORD PTR ds:0x43001b
  423bb9:	cmp    DWORD PTR ds:0x429004,0x6
  423bc0:	jne    0x423bd1
  423bc6:	mov    eax,ds:0x429004
  423bcb:	inc    eax
  423bcc:	mov    ds:0x429004,eax
  423bd1:	cmp    DWORD PTR ds:0x429004,0x11
  423bd8:	jb     0x423b77
  423bde:	mov    eax,DWORD PTR [ebp-0x8]
  423be1:	xor    eax,edi
  423be3:	mov    DWORD PTR ds:0x42d004,0x15
  423bed:	cmp    DWORD PTR ds:0x42d004,0x0
  423bf4:	je     0x423c2c
  423bfa:	cmp    DWORD PTR ds:0x42d004,0x20
  423c01:	jle    0x423c2c
  423c07:	jmp    0x423c18
  423c0c:	push   DWORD PTR [ebp-0x1c]
  423c0f:	push   DWORD PTR [ebp-0x14]
  423c12:	call   DWORD PTR ds:0x430027
  423c18:	xor    ecx,ecx
  423c1a:	add    ecx,DWORD PTR ds:0x42d004
  423c20:	dec    ecx
  423c21:	mov    DWORD PTR ds:0x42d004,ecx
  423c27:	jmp    0x423bed
  423c2c:	lea    esi,[esi+eax*1+0x3272ec]
  423c33:	neg    eax
  423c35:	mov    eax,DWORD PTR [ebp-0x8]
  423c38:	adc    DWORD PTR ds:0x42d000,0x333b
  423c42:	mov    ecx,DWORD PTR [ebp-0x8]
  423c45:	xor    DWORD PTR ds:0x42d014,0x42a014
  423c4f:	xor    ecx,edi
  423c51:	and    DWORD PTR ds:0x42d00c,0x42b018
  423c5b:	xor    eax,edi
  423c5d:	add    eax,ecx
  423c5f:	mov    ecx,DWORD PTR [ebp-0x8]
  423c62:	and    DWORD PTR ds:0x42a008,0x42d00c
  423c6c:	xor    ecx,edi
  423c6e:	mov    DWORD PTR ds:0x42b008,0x48ca
  423c78:	lea    eax,[eax+ecx*1+0x9758c4]
  423c7f:	mov    DWORD PTR ds:0x42a01c,0x2b5
  423c89:	cmp    esi,eax
  423c8b:	mov    DWORD PTR ds:0x42b01c,0x6741
  423c95:	jbe    0x423ae9
  423c9b:	mov    eax,DWORD PTR [ebp+0xc]
  423c9e:	mov    ds:0x42f1ef,eax
  423ca3:	sub    ecx,ecx
  423ca5:	mov    eax,DWORD PTR [ebp+0x10]
  423ca8:	sub    ecx,DWORD PTR ds:0x42d018
  423cae:	mov    ds:0x42f443,eax
  423cb3:	mov    eax,ds:0x42f1ef
  423cb8:	or     DWORD PTR ds:0x42c008,ebx
  423cbe:	mov    ecx,DWORD PTR [ebp-0x2c]
  423cc1:	add    DWORD PTR ds:0x429014,0xb75
  423ccb:	sub    eax,ebx
  423ccd:	add    DWORD PTR ds:0x42b000,0x59bf
  423cd7:	xor    eax,edi
  423cd9:	mov    DWORD PTR ds:0x42c014,0x601c
  423ce3:	mov    DWORD PTR [ecx],eax
  423ce5:	not    eax
  423ce7:	mov    eax,DWORD PTR [ebp-0x20]
  423cea:	mov    DWORD PTR ds:0x429000,0x4eb8
  423cf4:	cmp    eax,0xf89c85b0
  423cf9:	jne    0x4240f8
  423cff:	xor    DWORD PTR ds:0x42a004,0x4e87
  423d09:	lea    eax,[ebp-0x10]
  423d0c:	mov    DWORD PTR [ebp-0x40],eax
  423d0f:	sbb    DWORD PTR ds:0x42900c,0x429018
  423d19:	lea    eax,[ebp+0x4]
  423d1c:	mov    DWORD PTR [ebp-0x10],eax
  423d1f:	or     DWORD PTR ds:0x42c000,0x26f1
  423d29:	mov    eax,DWORD PTR [ebp-0x10]
  423d2c:	test   eax,eax
  423d2e:	je     0x4244b5
  423d34:	add    DWORD PTR ds:0x42b00c,0x193f
  423d3e:	push   0x42f62b
  423d43:	call   DWORD PTR ds:0x43004f
  423d49:	add    DWORD PTR ds:0x42c010,0x3f0d
  423d53:	test   eax,eax
  423d55:	mov    DWORD PTR ds:0x42c010,0x4f7a
  423d5f:	je     0x423d7d
  423d65:	push   0x0
  423d67:	push   0x0
  423d69:	mov    DWORD PTR ds:0x42b00c,0x5e6e
  423d73:	push   0x42f69b
  423d78:	jmp    0x424529
  423d7d:	or     DWORD PTR ds:0x42d004,0x382d
  423d87:	lea    eax,[ebp-0x70]
  423d8a:	add    DWORD PTR ds:0x42d004,0x42b01c
  423d94:	push   eax
  423d95:	xor    DWORD PTR ds:0x42b00c,0x6609
  423d9f:	push   0x42f667
  423da4:	or     DWORD PTR ds:0x42d000,0x2f88
  423dae:	call   DWORD PTR ds:0x430043
  423db4:	or     DWORD PTR ds:0x429000,0x1a50
  423dbe:	test   eax,eax
  423dc0:	je     0x423de4
  423dc6:	mov    DWORD PTR ds:0x42c008,0x985
  423dd0:	push   0x42f6db
  423dd5:	mov    DWORD PTR ds:0x42b000,0x1ac7
  423ddf:	jmp    0x42454c
  423de4:	and    DWORD PTR ds:0x42b008,0x0
  423dee:	jmp    0x423e02
  423df3:	xor    esi,esi
  423df5:	xor    esi,DWORD PTR ds:0x42b008
  423dfb:	inc    esi
  423dfc:	mov    DWORD PTR ds:0x42b008,esi
  423e02:	cmp    DWORD PTR ds:0x42b008,0x1c
  423e09:	jae    0x423e34
  423e0f:	cmp    DWORD PTR ds:0x42b008,0x27
  423e16:	jbe    0x423e34
  423e1c:	jmp    0x423e2f
  423e21:	push   DWORD PTR [ebp-0x24]
  423e24:	push   0x545e
  423e29:	call   DWORD PTR ds:0x43002b
  423e2f:	jmp    0x423df3
  423e34:	mov    eax,DWORD PTR [ebp-0xc]
  423e37:	not    eax
  423e39:	mov    eax,DWORD PTR [ebp-0x8]
  423e3c:	sbb    DWORD PTR ds:0x429018,0x42d000
  423e46:	mov    eax,DWORD PTR [ebp-0x4]
  423e49:	mov    DWORD PTR ds:0x429014,0x18
  423e53:	cmp    DWORD PTR ds:0x429014,0x0
  423e5a:	je     0x423e99
  423e60:	cmp    DWORD PTR ds:0x429014,0x23
  423e67:	jbe    0x423e99
  423e6d:	jmp    0x423e87
  423e72:	push   0x8e6d
  423e77:	push   0x42a018
  423e7c:	push   0x42f09c
  423e81:	call   DWORD PTR ds:0x430033
  423e87:	mov    ecx,DWORD PTR ds:0x429014
  423e8d:	dec    ecx
  423e8e:	mov    DWORD PTR ds:0x429014,ecx
  423e94:	jmp    0x423e53
  423e99:	mov    DWORD PTR [ebp+0xc],eax
  423e9c:	xor    ecx,ecx
  423e9e:	or     ecx,DWORD PTR ds:0x4249f4
  423ea4:	mov    ecx,DWORD PTR [ecx]
  423ea6:	sbb    DWORD PTR ds:0x429014,ecx
  423eac:	mov    eax,eax
  423eae:	mov    eax,ds:0x42f36b
  423eb3:	mov    eax,DWORD PTR [eax+0x1c8]
  423eb9:	not    DWORD PTR ds:0x42c01c
  423ebf:	mov    eax,DWORD PTR [eax]
  423ec1:	add    DWORD PTR ds:0x429024,ebx
  423ec7:	cdq    
  423ec8:	mov    esi,0xfabdbedd
  423ecd:	dec    ecx
  423ece:	add    eax,esi
  423ed0:	mov    ecx,0x2e63
  423ed5:	adc    edx,0xffffffff
  423ed8:	and    DWORD PTR [ebp-0x38],0x0
  423edc:	and    DWORD PTR ds:0x42d000,0x0
  423ee6:	jmp    0x423ef8
  423eeb:	mov    ecx,DWORD PTR ds:0x42d000
  423ef1:	inc    ecx
  423ef2:	mov    DWORD PTR ds:0x42d000,ecx
  423ef8:	cmp    DWORD PTR ds:0x42d000,0x11
  423eff:	jae    0x423f46
  423f05:	cmp    DWORD PTR ds:0x42d000,0x7
  423f0c:	jb     0x423f46
  423f12:	jmp    0x423f25
  423f17:	push   0x182f
  423f1c:	push   DWORD PTR [ebp-0x20]
  423f1f:	call   DWORD PTR ds:0x430037
  423f25:	cmp    DWORD PTR ds:0x42d000,0x6
  423f2c:	jne    0x423f41
  423f32:	xor    ecx,ecx
  423f34:	add    ecx,DWORD PTR ds:0x42d000
  423f3a:	inc    ecx
  423f3b:	mov    DWORD PTR ds:0x42d000,ecx
  423f41:	jmp    0x423eeb
  423f46:	xor    edx,0x0
  423f49:	and    DWORD PTR ds:0x42d010,0x0
  423f53:	jmp    0x423f65
  423f58:	mov    ecx,DWORD PTR ds:0x42d010
  423f5e:	inc    ecx
  423f5f:	mov    DWORD PTR ds:0x42d010,ecx
  423f65:	cmp    DWORD PTR ds:0x42d010,0x17
  423f6c:	jae    0x423f99
  423f72:	cmp    DWORD PTR ds:0x42d010,0x26
  423f79:	jl     0x423f99
  423f7f:	jmp    0x423f94
  423f84:	push   0x42f181
  423f89:	push   0x0
  423f8b:	push   DWORD PTR [ebp-0x20]
  423f8e:	call   DWORD PTR ds:0x43003b
  423f94:	jmp    0x423f58
  423f99:	mov    DWORD PTR [ebp-0x24],edx
  423f9c:	mov    DWORD PTR ds:0x42b000,0x1d
  423fa6:	cmp    DWORD PTR ds:0x42b000,0x0
  423fad:	je     0x423ffa
  423fb3:	cmp    DWORD PTR ds:0x42b000,0xb
  423fba:	jbe    0x423ffa
  423fc0:	jmp    0x423fce
  423fc5:	push   DWORD PTR [ebp-0x20]
  423fc8:	call   DWORD PTR ds:0x43003f
  423fce:	cmp    DWORD PTR ds:0x42b000,0xc
  423fd5:	jne    0x423fe8
  423fdb:	mov    edx,DWORD PTR ds:0x42b000
  423fe1:	dec    edx
  423fe2:	mov    DWORD PTR ds:0x42b000,edx
  423fe8:	mov    edx,DWORD PTR ds:0x42b000
  423fee:	dec    edx
  423fef:	mov    DWORD PTR ds:0x42b000,edx
  423ff5:	jmp    0x423fa6
  423ffa:	mov    edx,DWORD PTR [ebp+0xc]
  423ffd:	mov    DWORD PTR [ebp-0x3c],edx
  424000:	and    DWORD PTR ds:0x42c018,0x0
  42400a:	mov    ecx,DWORD PTR ds:0x42c018
  424010:	inc    ecx
  424011:	mov    DWORD PTR ds:0x42c018,ecx
  424017:	cmp    DWORD PTR ds:0x42c018,0xa
  42401e:	ja     0x424078
  424024:	jmp    0x424051
  424029:	push   0x3e21
  42402e:	push   0x8ac9
  424033:	push   DWORD PTR [ebp-0x24]
  424036:	push   DWORD PTR [ebp-0x20]
  424039:	push   0x8a2e
  42403e:	push   DWORD PTR [ebp-0x10]
  424041:	push   0x6472
  424046:	push   0x42f0d5
  42404b:	call   DWORD PTR ds:0x430047
  424051:	cmp    DWORD PTR ds:0x42c018,0x9
  424058:	jne    0x42406b
  42405e:	mov    ecx,DWORD PTR ds:0x42c018
  424064:	inc    ecx
  424065:	mov    DWORD PTR ds:0x42c018,ecx
  42406b:	cmp    DWORD PTR ds:0x42c018,0x10
  424072:	jb     0x42400a
  424078:	mov    ecx,0x8a29a137
  42407d:	xor    eax,ecx
  42407f:	add    DWORD PTR [ebp-0x3c],esi
  424082:	mov    edx,DWORD PTR [ebp-0x3c]
  424085:	adc    DWORD PTR [ebp-0x38],0xffffffff
  424089:	xor    edx,ecx
  42408b:	mov    DWORD PTR [ebp-0x30],edx
  42408e:	mov    edx,DWORD PTR [ebp-0x38]
  424091:	xor    edx,0x0
  424094:	mov    DWORD PTR [ebp-0x2c],edx
  424097:	cmp    DWORD PTR [ebp-0x30],eax
  42409a:	jne    0x4240ab
  4240a0:	mov    eax,DWORD PTR [ebp-0x24]
  4240a3:	cmp    edx,eax
  4240a5:	je     0x4240d8
  4240ab:	mov    eax,ds:0x42f36b
  4240b0:	mov    eax,DWORD PTR [eax+0x1c0]
  4240b6:	mov    eax,DWORD PTR [eax]
  4240b8:	xor    edx,edx
  4240ba:	add    eax,esi
  4240bc:	adc    edx,0xffffffff
  4240bf:	xor    eax,ecx
  4240c1:	xor    edx,0x0
  4240c4:	cmp    eax,0x70941fe9
  4240c9:	jne    0x4244b5
  4240cf:	cmp    edx,0xffffffff
  4240d2:	jne    0x4244b5
  4240d8:	mov    eax,ds:0x42f3e7
  4240dd:	mov    edx,DWORD PTR ds:0x42f3ef
  4240e3:	xor    eax,edx
  4240e5:	mov    ds:0x42f3e7,eax
  4240ea:	mov    edx,DWORD PTR ds:0x42f3e7
  4240f0:	mov    eax,DWORD PTR [ebp-0x10]
  4240f3:	jmp    0x424475
  4240f8:	mov    eax,DWORD PTR [ebp-0x14]
  4240fb:	cmp    eax,0xf89c85b1
  424100:	je     0x42419f
  424106:	mov    eax,DWORD PTR [ebp-0x4]
  424109:	mov    ecx,DWORD PTR [ebp-0x18]
  42410c:	xor    eax,edi
  42410e:	add    eax,ebx
  424110:	cmp    eax,ecx
  424112:	je     0x42419f
  424118:	push   0x42fba3
  42411d:	call   DWORD PTR ds:0x43004f
  424123:	test   eax,eax
  424125:	je     0x424139
  42412b:	push   0x0
  42412d:	push   0x0
  42412f:	push   0x42fc13
  424134:	jmp    0x424529
  424139:	lea    eax,[ebp-0x70]
  42413c:	push   eax
  42413d:	push   0x42fbdf
  424142:	call   DWORD PTR ds:0x430043
  424148:	test   eax,eax
  42414a:	je     0x42415a
  424150:	push   0x42fc53
  424155:	jmp    0x42454c
  42415a:	mov    eax,ds:0x42f36b
  42415f:	mov    eax,DWORD PTR [eax+0x194]
  424165:	mov    ecx,DWORD PTR [eax]
  424167:	mov    eax,DWORD PTR [ecx+0x3c]
  42416a:	push   DWORD PTR ds:0x42f443
  424170:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424174:	push   DWORD PTR ds:0x42f1ef
  42417a:	add    eax,ecx
  42417c:	mov    ecx,DWORD PTR ds:0x42f36b
  424182:	mov    ecx,DWORD PTR [ecx+0x194]
  424188:	push   DWORD PTR [ecx]
  42418a:	call   eax
  42418c:	mov    ecx,DWORD PTR ds:0x42f36b
  424192:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424198:	mov    DWORD PTR [ecx],eax
  42419a:	jmp    0x4244b5
  42419f:	push   0x42f6f3
  4241a4:	call   DWORD PTR ds:0x43004f
  4241aa:	test   eax,eax
  4241ac:	je     0x4241c0
  4241b2:	push   0x0
  4241b4:	push   0x0
  4241b6:	push   0x42f763
  4241bb:	jmp    0x424529
  4241c0:	mov    esi,DWORD PTR ds:0x430043
  4241c6:	lea    eax,[ebp-0x70]
  4241c9:	push   eax
  4241ca:	push   0x42f72f
  4241cf:	call   esi
  4241d1:	test   eax,eax
  4241d3:	je     0x4241e3
  4241d9:	push   0x42f7a3
  4241de:	jmp    0x42454c
  4241e3:	mov    eax,DWORD PTR [ebp-0x4]
  4241e6:	mov    ecx,DWORD PTR [ebp-0x34]
  4241e9:	xor    eax,edi
  4241eb:	add    eax,ebx
  4241ed:	cmp    eax,ecx
  4241ef:	jne    0x4242cc
  4241f5:	mov    eax,DWORD PTR [ebp-0x4]
  4241f8:	mov    ecx,DWORD PTR ds:0x42f36b
  4241fe:	mov    ecx,DWORD PTR [ecx+0x198]
  424204:	xor    eax,edi
  424206:	add    eax,ebx
  424208:	cmp    eax,DWORD PTR [ecx]
  42420a:	jne    0x42426b
  424210:	push   0x42f7bb
  424215:	call   DWORD PTR ds:0x43004f
  42421b:	test   eax,eax
  42421d:	je     0x424231
  424223:	push   0x0
  424225:	push   0x0
  424227:	push   0x42f82b
  42422c:	jmp    0x424529
  424231:	lea    eax,[ebp-0x70]
  424234:	push   eax
  424235:	push   0x42f7f7
  42423a:	call   esi
  42423c:	test   eax,eax
  42423e:	je     0x42424e
  424244:	push   0x42f86b
  424249:	jmp    0x42454c
  42424e:	mov    eax,DWORD PTR [ebp-0x4]
  424251:	push   0xf89c85b0
  424256:	xor    eax,edi
  424258:	add    eax,ebx
  42425a:	push   eax
  42425b:	push   0xf89c85bc
  424260:	push   DWORD PTR [ebp-0x8]
  424263:	push   DWORD PTR [ebp-0x4]
  424266:	call   0x4230e1
  42426b:	push   0x42f883
  424270:	call   DWORD PTR ds:0x43004f
  424276:	test   eax,eax
  424278:	je     0x42428c
  42427e:	push   0x0
  424280:	push   0x0
  424282:	push   0x42f8f3
  424287:	jmp    0x424529
  42428c:	lea    eax,[ebp-0x70]
  42428f:	push   eax
  424290:	push   0x42f8bf
  424295:	call   esi
  424297:	test   eax,eax
  424299:	je     0x4242a9
  42429f:	push   0x42f933
  4242a4:	jmp    0x42454c
  4242a9:	push   DWORD PTR [ebp-0x8]
  4242ac:	push   DWORD PTR [ebp-0x4]
  4242af:	call   0x401000
  4242b4:	mov    eax,DWORD PTR [ebp-0x4]
  4242b7:	xor    eax,edi
  4242b9:	add    eax,ebx
  4242bb:	mov    ds:0x42f3ef,eax
  4242c0:	mov    eax,DWORD PTR [ebp-0x4]
  4242c3:	xor    eax,edi
  4242c5:	add    eax,ebx
  4242c7:	mov    ds:0x42f3e7,eax
  4242cc:	lea    eax,[ebp-0x1c]
  4242cf:	mov    DWORD PTR [ebp-0x44],eax
  4242d2:	lea    eax,[ebp+0x4]
  4242d5:	push   0x42f94b
  4242da:	mov    DWORD PTR [ebp-0x1c],eax
  4242dd:	call   DWORD PTR ds:0x43004f
  4242e3:	test   eax,eax
  4242e5:	je     0x4242f9
  4242eb:	push   0x0
  4242ed:	push   0x0
  4242ef:	push   0x42f9bb
  4242f4:	jmp    0x424529
  4242f9:	lea    eax,[ebp-0x70]
  4242fc:	push   eax
  4242fd:	push   0x42f987
  424302:	call   esi
  424304:	test   eax,eax
  424306:	je     0x424316
  42430c:	push   0x42f9fb
  424311:	jmp    0x42454c
  424316:	mov    eax,DWORD PTR [ebp-0x1c]
  424319:	test   eax,eax
  42431b:	je     0x4244b5
  424321:	push   0x42fa13
  424326:	call   DWORD PTR ds:0x43004f
  42432c:	test   eax,eax
  42432e:	je     0x424342
  424334:	push   0x0
  424336:	push   0x0
  424338:	push   0x42fa83
  42433d:	jmp    0x424529
  424342:	mov    esi,DWORD PTR ds:0x430043
  424348:	lea    eax,[ebp-0x70]
  42434b:	push   eax
  42434c:	push   0x42fa4f
  424351:	call   esi
  424353:	test   eax,eax
  424355:	je     0x424365
  42435b:	push   0x42fac3
  424360:	jmp    0x42454c
  424365:	mov    DWORD PTR [ebp-0x48],0xf152c39
  42436c:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  424373:	mov    DWORD PTR [ebp-0x50],0x373fc08
  42437a:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  424381:	call   0x421f87
  424386:	push   0x42fadb
  42438b:	call   DWORD PTR ds:0x43004f
  424391:	test   eax,eax
  424393:	je     0x4243a7
  424399:	push   0x0
  42439b:	push   0x0
  42439d:	push   0x42fb4b
  4243a2:	jmp    0x424529
  4243a7:	lea    eax,[ebp-0x70]
  4243aa:	push   eax
  4243ab:	push   0x42fb17
  4243b0:	call   esi
  4243b2:	test   eax,eax
  4243b4:	je     0x4243c4
  4243ba:	push   0x42fb8b
  4243bf:	jmp    0x42454c
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    eax,DWORD PTR [ebp-0x8]
  4243ca:	mov    eax,DWORD PTR [ebp-0x4]
  4243cd:	mov    DWORD PTR [ebp+0xc],eax
  4243d0:	mov    eax,eax
  4243d2:	mov    eax,ds:0x42f36b
  4243d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4243dd:	mov    eax,DWORD PTR [eax]
  4243df:	cdq    
  4243e0:	mov    esi,0xfabdbedd
  4243e5:	add    eax,esi
  4243e7:	adc    edx,0xffffffff
  4243ea:	and    DWORD PTR [ebp-0x38],0x0
  4243ee:	xor    edx,0x0
  4243f1:	mov    DWORD PTR [ebp-0x24],edx
  4243f4:	mov    edx,DWORD PTR [ebp+0xc]
  4243f7:	mov    DWORD PTR [ebp-0x3c],edx
  4243fa:	mov    ecx,0x8a29a137
  4243ff:	xor    eax,ecx
  424401:	add    DWORD PTR [ebp-0x3c],esi
  424404:	mov    edx,DWORD PTR [ebp-0x3c]
  424407:	adc    DWORD PTR [ebp-0x38],0xffffffff
  42440b:	xor    edx,ecx
  42440d:	mov    DWORD PTR [ebp-0x30],edx
  424410:	mov    edx,DWORD PTR [ebp-0x38]
  424413:	xor    edx,0x0
  424416:	mov    DWORD PTR [ebp-0x2c],edx
  424419:	cmp    DWORD PTR [ebp-0x30],eax
  42441c:	jne    0x42442d
  424422:	mov    eax,DWORD PTR [ebp-0x24]
  424425:	cmp    edx,eax
  424427:	je     0x42445a
  42442d:	mov    eax,ds:0x42f36b
  424432:	mov    eax,DWORD PTR [eax+0x1c0]
  424438:	mov    eax,DWORD PTR [eax]
  42443a:	xor    edx,edx
  42443c:	add    eax,esi
  42443e:	adc    edx,0xffffffff
  424441:	xor    eax,ecx
  424443:	xor    edx,0x0
  424446:	cmp    eax,0x70941fe9
  42444b:	jne    0x4244b5
  424451:	cmp    edx,0xffffffff
  424454:	jne    0x4244b5
  42445a:	mov    eax,ds:0x42f3e7
  42445f:	mov    edx,DWORD PTR ds:0x42f3ef
  424465:	xor    eax,edx
  424467:	mov    ds:0x42f3e7,eax
  42446c:	mov    edx,DWORD PTR ds:0x42f3e7
  424472:	mov    eax,DWORD PTR [ebp-0x1c]
  424475:	add    DWORD PTR [eax],edx
  424477:	mov    edx,DWORD PTR [ebp+0xc]
  42447a:	mov    eax,ds:0x42f3e7
  42447f:	xor    edx,edi
  424481:	add    edx,ebx
  424483:	xor    ebx,ebx
  424485:	add    edx,esi
  424487:	adc    ebx,0xffffffff
  42448a:	xor    edi,edi
  42448c:	xor    edx,ecx
  42448e:	xor    ebx,0x0
  424491:	add    eax,esi
  424493:	adc    edi,0xffffffff
  424496:	xor    eax,ecx
  424498:	xor    edi,0x0
  42449b:	cmp    eax,edx
  42449d:	jne    0x4244b5
  4244a3:	cmp    edi,ebx
  4244a5:	jne    0x4244b5
  4244ab:	mov    eax,ds:0x42f3e7
  4244b0:	mov    ds:0x42f3ef,eax
  4244b5:	mov    edi,DWORD PTR ds:0x43004f
  4244bb:	push   0x42fc6b
  4244c0:	call   edi
  4244c2:	test   eax,eax
  4244c4:	je     0x4244d8
  4244ca:	push   0x0
  4244cc:	push   0x0
  4244ce:	push   0x42fcdb
  4244d3:	jmp    0x424529
  4244d8:	mov    esi,DWORD PTR ds:0x430043
  4244de:	lea    eax,[ebp-0x70]
  4244e1:	push   eax
  4244e2:	push   0x42fca7
  4244e7:	call   esi
  4244e9:	test   eax,eax
  4244eb:	je     0x4244fb
  4244f1:	push   0x42fd1b
  4244f6:	jmp    0x42454c
  4244fb:	mov    eax,ds:0x42f36b
  424500:	push   0x4
  424502:	add    eax,0x1cc
  424507:	push   eax
  424508:	lea    eax,[ebp-0xc]
  42450b:	push   eax
  42450c:	call   0x424563
  424511:	push   0x42fd33
  424516:	call   edi
  424518:	test   eax,eax
  42451a:	je     0x424534
  424520:	push   0x0
  424522:	push   0x0
  424524:	push   0x42fda3
  424529:	call   DWORD PTR ds:0x43001f
  42452f:	jmp    0x42455c
  424534:	lea    eax,[ebp-0x70]
  424537:	push   eax
  424538:	push   0x42fd6f
  42453d:	call   esi
  42453f:	test   eax,eax
  424541:	je     0x424557
  424547:	push   0x42fde3
  42454c:	call   DWORD PTR ds:0x430023
  424552:	jmp    0x42455c
  424557:	mov    eax,DWORD PTR [ebp-0xc]
  42455a:	mov    eax,DWORD PTR [eax]
  42455c:	pop    ebx
  42455d:	pop    esi
  42455e:	pop    edi
  42455f:	leave  
  424560:	ret    0xc
  424563:	push   ebp
  424564:	mov    ebp,esp
  424566:	sub    esp,0x10
  424569:	add    edx,0x3c01
  42456f:	mov    eax,0xf89c85b0
  424574:	and    ecx,edx
  424576:	mov    DWORD PTR [ebp-0x4],eax
  424579:	mov    ecx,DWORD PTR ds:0x424a48
  42457f:	mov    edx,DWORD PTR ds:0x42e010
  424585:	sub    edx,ecx
  424587:	xor    ecx,DWORD PTR [ecx+edx*1]
  42458a:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  424591:	xor    edx,edx
  424593:	xor    edx,DWORD PTR ds:0x42b01c
  424599:	adc    DWORD PTR ds:0x429028,edx
  42459f:	mov    ecx,DWORD PTR [ebp-0x4]
  4245a2:	and    DWORD PTR ds:0x42d018,0x0
  4245ac:	jmp    0x4245be
  4245b1:	mov    edx,DWORD PTR ds:0x42d018
  4245b7:	inc    edx
  4245b8:	mov    DWORD PTR ds:0x42d018,edx
  4245be:	cmp    DWORD PTR ds:0x42d018,0x1d
  4245c5:	jae    0x4245f3
  4245cb:	cmp    DWORD PTR ds:0x42d018,0x20
  4245d2:	jg     0x4245f3
  4245d8:	jmp    0x4245ee
  4245dd:	push   DWORD PTR [ebp-0x20]
  4245e0:	push   DWORD PTR [ebp-0x28]
  4245e3:	push   0x1361
  4245e8:	call   DWORD PTR ds:0x43004b
  4245ee:	jmp    0x4245b1
  4245f3:	push   esi
  4245f4:	dec    esi
  4245f5:	mov    edx,0x75108a4
  4245fa:	xor    DWORD PTR ds:0x42a00c,ebx
  424600:	xor    ecx,edx
  424602:	or     DWORD PTR ds:0x429010,0x14eb
  42460c:	mov    esi,0x3272ec
  424611:	push   edi
  424612:	dec    DWORD PTR ds:0x429018
  424618:	mov    edi,DWORD PTR [ebp+0x10]
  42461b:	adc    DWORD PTR ds:0x42d018,0x42901c
  424625:	add    ecx,esi
  424627:	cmp    ecx,edi
  424629:	mov    DWORD PTR ds:0x42d000,0x260f
  424633:	je     0x42477d
  424639:	mov    ecx,DWORD PTR [ebp-0x4]
  42463c:	adc    DWORD PTR ds:0x42a01c,0x4985
  424646:	mov    edi,DWORD PTR [ebp+0x10]
  424649:	add    DWORD PTR ds:0x42b000,0x42c018
  424653:	xor    eax,eax
  424655:	or     DWORD PTR ds:0x42a004,0x42c000
  42465f:	xor    ecx,edx
  424661:	or     DWORD PTR ds:0x42b018,0x42c004
  42466b:	add    ecx,esi
  42466d:	xor    DWORD PTR ds:0x42d004,0x429014
  424677:	add    edi,0xfabdbedd
  42467d:	mov    DWORD PTR ds:0x42c01c,0x199c
  424687:	adc    eax,0xffffffff
  42468a:	sbb    DWORD PTR ds:0x42a010,0x429004
  424694:	xor    eax,0x0
  424697:	xor    DWORD PTR ds:0x429008,0x429004
  4246a1:	mov    DWORD PTR [ebp-0xc],eax
  4246a4:	mov    eax,ds:0x42d000
  4246a9:	xor    DWORD PTR ds:0x42c010,eax
  4246af:	push   ebx
  4246b0:	sub    DWORD PTR ds:0x42a01c,0x1608
  4246ba:	xor    ebx,ebx
  4246bc:	sub    eax,DWORD PTR ds:0x42a000
  4246c2:	xor    edi,0x8a29a137
  4246c8:	add    eax,DWORD PTR ds:0x42b01c
  4246ce:	mov    eax,ecx
  4246d0:	sbb    DWORD PTR ds:0x42a010,0x7666
  4246da:	add    eax,0xfabdbedd
  4246df:	mov    DWORD PTR ds:0x42b000,0x3a3b
  4246e9:	adc    ebx,0xffffffff
  4246ec:	xor    eax,0x8a29a137
  4246f1:	xor    ebx,0x0
  4246f4:	cmp    eax,edi
  4246f6:	jne    0x42470f
  4246fc:	cmp    ebx,DWORD PTR [ebp-0xc]
  4246ff:	je     0x424777
  424705:	jmp    0x42470f
  42470a:	mov    esi,0x3272ec
  42470f:	mov    eax,DWORD PTR [ebp-0x4]
  424712:	mov    edi,DWORD PTR [ebp-0x8]
  424715:	xor    edi,edx
  424717:	add    edi,esi
  424719:	mov    esi,DWORD PTR [ebp+0x8]
  42471c:	imul   edi,ecx
  42471f:	mov    ebx,DWORD PTR [ebp+0xc]
  424722:	xor    eax,edx
  424724:	add    eax,ecx
  424726:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  42472d:	mov    BYTE PTR [edi+esi*1],al
  424730:	mov    eax,DWORD PTR [ebp-0x8]
  424733:	mov    esi,DWORD PTR [ebp+0x10]
  424736:	xor    eax,edx
  424738:	xor    ebx,ebx
  42473a:	add    esi,0xfabdbedd
  424740:	adc    ebx,0xffffffff
  424743:	lea    ecx,[ecx+eax*1+0x3272ec]
  42474a:	xor    edi,edi
  42474c:	xor    esi,0x8a29a137
  424752:	xor    ebx,0x0
  424755:	mov    eax,ecx
  424757:	add    eax,0xfabdbedd
  42475c:	adc    edi,0xffffffff
  42475f:	xor    eax,0x8a29a137
  424764:	xor    edi,0x0
  424767:	cmp    eax,esi
  424769:	jne    0x42470a
  42476f:	cmp    edi,ebx
  424771:	jne    0x42470a
  424777:	mov    eax,0xf89c85b1
  42477c:	pop    ebx
  42477d:	pop    edi
  42477e:	pop    esi
  42477f:	leave  
  424780:	ret    0xc
  424783:	push   ebp
  424784:	mov    ebp,esp
  424786:	push   ecx
  424787:	xor    DWORD PTR ds:0x42d000,edi
  42478d:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  424794:	and    DWORD PTR ds:0x42d018,0x0
  42479e:	jmp    0x4247ae
  4247a3:	mov    eax,ds:0x42d018
  4247a8:	inc    eax
  4247a9:	mov    ds:0x42d018,eax
  4247ae:	cmp    DWORD PTR ds:0x42d018,0x14
  4247b5:	jae    0x4247e2
  4247bb:	cmp    DWORD PTR ds:0x42d018,0x20
  4247c2:	jg     0x4247e2
  4247c8:	jmp    0x4247dd
  4247cd:	push   0x42d008
  4247d2:	push   0x42f14f
  4247d7:	call   DWORD PTR ds:0x43000b
  4247dd:	jmp    0x4247a3
  4247e2:	mov    eax,DWORD PTR [ebp+0x8]
  4247e5:	movsx  eax,BYTE PTR [eax]
  4247e8:	mov    edx,0x3272ec
  4247ed:	or     DWORD PTR ds:0x42a010,ebx
  4247f3:	sub    eax,edx
  4247f5:	mov    ecx,0x75108a4
  4247fa:	dec    DWORD PTR ds:0x429008
  424800:	xor    eax,ecx
  424802:	mov    DWORD PTR ds:0x429024,0x52d3
  42480c:	cmp    eax,0xf89c85c5
  424811:	mov    DWORD PTR ds:0x42d004,0x21a1
  42481b:	jne    0x42484a
  424821:	mov    eax,DWORD PTR [ebp+0x8]
  424824:	push   esi
  424825:	mov    esi,DWORD PTR [ebp+0x8]
  424828:	add    esi,DWORD PTR [eax+0x3c]
  42482b:	mov    DWORD PTR [ebp+0x8],esi
  42482e:	mov    eax,DWORD PTR [ebp-0x4]
  424831:	mov    esi,DWORD PTR [ebp+0x8]
  424834:	xor    eax,ecx
  424836:	add    eax,edx
  424838:	cmp    DWORD PTR [esi+0x54],eax
  42483b:	pop    esi
  42483c:	je     0x42484a
  424842:	mov    eax,DWORD PTR [ebp+0x8]
  424845:	jmp    0x424851
  42484a:	mov    eax,DWORD PTR [ebp-0x4]
  42484d:	xor    eax,ecx
  42484f:	add    eax,edx
  424851:	leave  
  424852:	ret    0x4
  424855:	push   ebp
  424856:	mov    ebp,esp
  424858:	sub    esp,0xc
  42485b:	sbb    ecx,0x4428
  424861:	push   esi
  424862:	add    esi,0x35e8
  424868:	mov    esi,0xf89c85b0
  42486d:	or     DWORD PTR ds:0x42d008,edi
  424873:	mov    DWORD PTR [ebp-0x8],esi
  424876:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  42487d:	push   edi
  42487e:	and    DWORD PTR ds:0x42c004,0x0
  424888:	mov    edx,DWORD PTR ds:0x42c004
  42488e:	inc    edx
  42488f:	mov    DWORD PTR ds:0x42c004,edx
  424895:	cmp    DWORD PTR ds:0x42c004,0x8
  42489c:	jl     0x4248de
  4248a2:	jmp    0x4248b7
  4248a7:	push   0x429014
  4248ac:	push   0x86a8
  4248b1:	call   DWORD PTR ds:0x43000f
  4248b7:	cmp    DWORD PTR ds:0x42c004,0x7
  4248be:	jne    0x4248d1
  4248c4:	mov    edx,DWORD PTR ds:0x42c004
  4248ca:	inc    edx
  4248cb:	mov    DWORD PTR ds:0x42c004,edx
  4248d1:	cmp    DWORD PTR ds:0x42c004,0x14
  4248d8:	jb     0x424888
  4248de:	mov    eax,eax
  4248e0:	xor    eax,eax
  4248e2:	or     eax,DWORD PTR ds:0x429028
  4248e8:	adc    eax,DWORD PTR ds:0x42a000
  4248ee:	mov    ds:0x429028,eax
  4248f3:	mov    eax,DWORD PTR [ebp-0x4]
  4248f6:	mov    edi,DWORD PTR [ebp-0x8]
  4248f9:	not    edx
  4248fb:	mov    ecx,0x75108a4
  424900:	mov    DWORD PTR ds:0x42c01c,0x19
  42490a:	cmp    DWORD PTR ds:0x42c01c,0x0
  424911:	je     0x42495b
  424917:	cmp    DWORD PTR ds:0x42c01c,0x3
  42491e:	jg     0x42495b
  424924:	jmp    0x42492f
  424929:	call   DWORD PTR ds:0x430013
  42492f:	cmp    DWORD PTR ds:0x42c01c,0x4
  424936:	jne    0x424949
  42493c:	mov    edx,DWORD PTR ds:0x42c01c
  424942:	dec    edx
  424943:	mov    DWORD PTR ds:0x42c01c,edx
  424949:	mov    edx,DWORD PTR ds:0x42c01c
  42494f:	dec    edx
  424950:	mov    DWORD PTR ds:0x42c01c,edx
  424956:	jmp    0x42490a
  42495b:	xor    eax,ecx
  42495d:	xor    DWORD PTR ds:0x429018,0x18a1
  424967:	xor    edi,ecx
  424969:	mov    DWORD PTR ds:0x42b010,0x4247
  424973:	mov    edx,0x3272ec
  424978:	add    edi,edx
  42497a:	add    eax,edx
  42497c:	imul   eax,edi
  42497f:	mov    edi,DWORD PTR [ebp+0xc]
  424982:	cmp    edi,eax
  424984:	je     0x4249d9
  42498a:	mov    DWORD PTR [ebp-0xc],esi
  42498d:	mov    eax,DWORD PTR [ebp-0xc]
  424990:	mov    esi,DWORD PTR [ebp+0xc]
  424993:	xor    eax,ecx
  424995:	lea    eax,[eax*8+0x19397d8]
  42499c:	mov    eax,DWORD PTR [esi+eax*1]
  42499f:	mov    DWORD PTR [ebp+0xc],eax
  4249a2:	mov    eax,DWORD PTR [ebp-0x4]
  4249a5:	mov    esi,DWORD PTR [ebp-0x8]
  4249a8:	xor    eax,ecx
  4249aa:	xor    esi,ecx
  4249ac:	add    esi,edx
  4249ae:	add    eax,edx
  4249b0:	imul   eax,esi
  4249b3:	mov    esi,DWORD PTR [ebp+0xc]
  4249b6:	cmp    esi,eax
  4249b8:	je     0x4249d9
  4249be:	mov    eax,DWORD PTR [ebp-0x4]
  4249c1:	xor    eax,ecx
  4249c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4249c6:	add    eax,edx
  4249c8:	imul   eax,ecx
  4249cb:	add    eax,DWORD PTR [ebp+0x8]
  4249ce:	mov    DWORD PTR [ebp+0xc],eax
  4249d1:	mov    eax,DWORD PTR [ebp+0xc]
  4249d4:	jmp    0x4249ea
  4249d9:	mov    eax,DWORD PTR [ebp-0x4]
  4249dc:	mov    esi,DWORD PTR [ebp-0x8]
  4249df:	xor    esi,ecx
  4249e1:	xor    eax,ecx
  4249e3:	add    esi,edx
  4249e5:	add    eax,edx
  4249e7:	imul   eax,esi
  4249ea:	pop    edi
  4249eb:	pop    esi
  4249ec:	leave  
  4249ed:	ret    0x8
  4249f0:	add    BYTE PTR [eax-0x6ffbffbe],dl
  4249f6:	inc    edx
  4249f7:	add    BYTE PTR [eax],cl
  4249f9:	nop
  4249fa:	inc    edx
  4249fb:	add    BYTE PTR [eax+edx*4],cl
  4249fe:	inc    edx
  4249ff:	add    BYTE PTR [eax],dl
  424a01:	nop
  424a02:	inc    edx
  424a03:	add    BYTE PTR [eax+edx*4],dl
  424a06:	inc    edx
  424a07:	add    BYTE PTR [eax],bl
  424a09:	nop
  424a0a:	inc    edx
  424a0b:	add    BYTE PTR [eax+edx*4],bl
  424a0e:	inc    edx
  424a0f:	add    BYTE PTR [eax],ah
  424a11:	nop
  424a12:	inc    edx
  424a13:	add    BYTE PTR [eax+edx*4],ah
  424a16:	inc    edx
  424a17:	add    BYTE PTR [eax],ch
  424a19:	nop
  424a1a:	inc    edx
  424a1b:	add    BYTE PTR [eax],al
  424a1d:	mov    al,0x42
  424a1f:	add    BYTE PTR [eax+esi*4],al
  424a22:	inc    edx
  424a23:	add    BYTE PTR [eax],cl
  424a25:	mov    al,0x42
  424a27:	add    BYTE PTR [eax+esi*4],cl
  424a2a:	inc    edx
  424a2b:	add    BYTE PTR [eax],dl
  424a2d:	mov    al,0x42
  424a2f:	add    BYTE PTR [eax+esi*4],dl
  424a32:	inc    edx
  424a33:	add    BYTE PTR [eax],bl
  424a35:	mov    al,0x42
  424a37:	add    BYTE PTR [eax+esi*4],bl
  424a3a:	inc    edx
  424a3b:	add    BYTE PTR [eax],al
  424a3d:	mov    al,ds:0xa0040042
  424a42:	inc    edx
  424a43:	add    BYTE PTR [eax],cl
  424a45:	mov    al,ds:0xa00c0042
  424a4a:	inc    edx
  424a4b:	add    BYTE PTR [eax],dl
  424a4d:	mov    al,ds:0xa0140042
  424a52:	inc    edx
  424a53:	add    BYTE PTR [eax],bl
  424a55:	mov    al,ds:0xa01c0042
  424a5a:	inc    edx
	...
  424a63:	add    BYTE PTR [eax+0x4d300b],ah
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    BYTE PTR [edx],al
  424a6d:	add    BYTE PTR [eax],al
  424a6f:	add    BYTE PTR [esi],dh
  424a71:	add    BYTE PTR [eax],al
  424a73:	add    BYTE PTR [eax-0x5ffffdb6],ah
  424a79:	add    al,BYTE PTR ds:[eax]
  424a7c:	add    al,al
  424a7e:	inc    edx
  424a7f:	add    BYTE PTR [eax+eax*8],al
  424a82:	inc    edx
  424a83:	add    BYTE PTR [eax],cl
  424a85:	rol    BYTE PTR [edx+0x0],0xc
  424a89:	rol    BYTE PTR [edx+0x0],0x10
  424a8d:	rol    BYTE PTR [edx+0x0],0x14
  424a91:	rol    BYTE PTR [edx+0x0],0x18
  424a95:	rol    BYTE PTR [edx+0x0],0x1c
  424a99:	rol    BYTE PTR [edx+0x0],0x0
  424a9d:	add    BYTE PTR [eax],al
  424a9f:	add    BYTE PTR [edx+0x53],dl
  424aa2:	inc    esp
  424aa3:	push   ebx
  424aa4:	push   ebp
  424aa5:	arpl   WORD PTR [eax-0x4fc21d17],ax
  424aab:	inc    edx
  424aac:	xchg   DWORD PTR [edi],edi
  424aae:	enter  0x90b7,0xf8
  424ab2:	jnp    0x424b0f
  424ab4:	add    DWORD PTR [eax],eax
  424ab6:	add    BYTE PTR [eax],al
  424ab8:	inc    ebp
  424ab9:	cmp    bl,BYTE PTR [esp+eax*2+0x65]
  424abd:	ins    BYTE PTR es:[edi],dx
  424abe:	gs je  0x424b26
  424ac1:	and    BYTE PTR [ecx+eiz*2+0x74],al
  424ac5:	popa   
  424ac6:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424aca:	pop    esp
  424acb:	inc    ecx
  424acc:	data16 je 0x424b34
  424acf:	jb     0x424b21
  424ad1:	popa   
  424ad2:	jb     0x424b48
  424ad4:	jns    0x424ad6
  424ad6:	mov    edx,DWORD PTR [ebp-0x14]
  424ad9:	sub    esp,0x108
  424adf:	push   ebx
  424ae0:	mov    eax,ebx
  424ae2:	xchg   ecx,eax
  424ae3:	mov    eax,DWORD PTR [ebp+0x8]
  424ae6:	cmp    eax,0xf89c85b0
  424aeb:	jne    0x424f72
  424af1:	mov    eax,DWORD PTR [ebp+0xc]
  424af4:	cmp    eax,0xf89c85b1
  424af9:	jne    0x424f72
  424aff:	mov    eax,DWORD PTR [ebp+0x24]
  424b02:	mov    DWORD PTR [ebp-0x4],eax
  424b05:	mov    BYTE PTR [ebp-0x18],0x13
  424b09:	mov    BYTE PTR [ebp-0x17],0x1e
  424b0d:	mov    BYTE PTR [ebp-0x16],0x15
  424b11:	mov    BYTE PTR [ebp-0x15],0x4f
  424b15:	mov    BYTE PTR [ebp-0x14],0x4c
  424b19:	mov    BYTE PTR [ebp-0x13],0x7a
  424b1d:	mov    BYTE PTR [ebp-0x20],0x1
  424b21:	mov    BYTE PTR [ebp-0x1f],0xf
  424b25:	mov    BYTE PTR [ebp-0x1e],0x11
  424b29:	mov    BYTE PTR [ebp-0x1d],0xc
  424b2d:	mov    BYTE PTR [ebp-0x1c],0x4f
  424b31:	mov    BYTE PTR [ebp-0x1b],0x4c
  424b35:	mov    BYTE PTR [ebp-0x1a],0x7a
  424b39:	mov    BYTE PTR [ebp-0x28],0xf
  424b3d:	mov    BYTE PTR [ebp-0x27],0x12
  424b41:	mov    BYTE PTR [ebp-0x26],0x16
  424b45:	mov    BYTE PTR [ebp-0x25],0x3
  424b49:	mov    BYTE PTR [ebp-0x24],0x1d
  424b4d:	mov    BYTE PTR [ebp-0x23],0xa
  424b51:	push   esi
  424b52:	mov    BYTE PTR [ebp-0x22],0x15
  424b56:	mov    BYTE PTR [ebp-0x21],0x7a
  424b5a:	xor    esi,esi
  424b5c:	mov    eax,0xfd
  424b61:	lea    ecx,[ebp+esi*1-0x18]
  424b65:	movzx  edx,BYTE PTR [ecx]
  424b68:	xor    edx,0x79
  424b6b:	add    edx,eax
  424b6d:	inc    esi
  424b6e:	mov    BYTE PTR [ecx],dl
  424b70:	cmp    esi,0x6
  424b73:	jb     0x424b61
  424b75:	xor    esi,esi
  424b77:	lea    ecx,[ebp+esi*1-0x20]
  424b7b:	movzx  edx,BYTE PTR [ecx]
  424b7e:	xor    edx,0x79
  424b81:	add    edx,eax
  424b83:	inc    esi
  424b84:	mov    BYTE PTR [ecx],dl
  424b86:	cmp    esi,0x7
  424b89:	jb     0x424b77
  424b8b:	xor    esi,esi
  424b8d:	lea    ecx,[ebp+esi*1-0x28]
  424b91:	movzx  edx,BYTE PTR [ecx]
  424b94:	xor    edx,0x79
  424b97:	add    edx,eax
  424b99:	inc    esi
  424b9a:	mov    BYTE PTR [ecx],dl
  424b9c:	cmp    esi,0x8
  424b9f:	jb     0x424b8d
  424ba1:	lea    eax,[ebp-0x2c]
  424ba4:	mov    DWORD PTR [ebp-0x8],eax
  424ba7:	mov    ecx,DWORD PTR [ebp-0x8]
  424baa:	mov    eax,0x7113fcce
  424baf:	mov    DWORD PTR [ecx],eax
  424bb1:	mov    ecx,DWORD PTR [ebp-0x2c]
  424bb4:	push   edi
  424bb5:	mov    esi,0x4e3e
  424bba:	mov    ebx,0x3272ec
  424bbf:	cmp    ecx,eax
  424bc1:	jne    0x424c8c
  424bc7:	lea    eax,[esi+0x29]
  424bca:	mov    WORD PTR [ebp-0x78],ax
  424bce:	mov    eax,esi
  424bd0:	mov    WORD PTR [ebp-0x76],ax
  424bd4:	add    eax,0x3b
  424bd7:	mov    WORD PTR [ebp-0x74],ax
  424bdb:	lea    eax,[esi-0x6]
  424bde:	mov    WORD PTR [ebp-0x72],ax
  424be2:	add    eax,0x47
  424be5:	mov    ecx,eax
  424be7:	lea    eax,[esi-0x1d]
  424bea:	mov    WORD PTR [ebp-0x66],ax
  424bee:	mov    eax,esi
  424bf0:	mov    WORD PTR [ebp-0x64],ax
  424bf4:	add    eax,0xffffffe4
  424bf7:	mov    WORD PTR [ebp-0x62],ax
  424bfb:	mov    eax,0x44b
  424c00:	mov    WORD PTR [ebp-0x60],ax
  424c04:	mov    eax,0x5664
  424c09:	mov    WORD PTR [ebp-0x5e],ax
  424c0d:	mov    eax,0x6104
  424c12:	mov    WORD PTR [ebp-0x5c],ax
  424c16:	lea    eax,[ebp-0xe0]
  424c1c:	push   eax
  424c1d:	mov    eax,DWORD PTR [ebp+0xc]
  424c20:	mov    edi,0x75108a4
  424c25:	xor    eax,edi
  424c27:	add    eax,ebx
  424c29:	push   eax
  424c2a:	mov    WORD PTR [ebp-0x70],cx
  424c2e:	lea    ecx,[esi-0x1a]
  424c31:	mov    edx,ecx
  424c33:	lea    eax,[ebp-0x78]
  424c36:	push   eax
  424c37:	mov    eax,DWORD PTR [ebp-0x4]
  424c3a:	mov    eax,DWORD PTR [eax+0x198]
  424c40:	mov    WORD PTR [ebp-0x6e],dx
  424c44:	mov    edx,0x4f82
  424c49:	mov    WORD PTR [ebp-0x6c],dx
  424c4d:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  424c54:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  424c5b:	mov    DWORD PTR [ebp-0xe0],0x1
  424c65:	mov    DWORD PTR [ebp-0xdc],0x255
  424c6f:	push   DWORD PTR [eax]
  424c71:	mov    eax,DWORD PTR [ebp+0x10]
  424c74:	call   eax
  424c76:	mov    DWORD PTR [ebp-0x8],eax
  424c79:	mov    eax,DWORD PTR [ebp-0x8]
  424c7c:	test   eax,eax
  424c7e:	je     0x424c91
  424c80:	xor    DWORD PTR ds:0x76586876,0x87687666
  424c8a:	jmp    0x424c91
  424c8c:	mov    edi,0x75108a4
  424c91:	mov    eax,DWORD PTR [ebp-0x4]
  424c94:	mov    ecx,DWORD PTR [eax+0x18c]
  424c9a:	xor    eax,eax
  424c9c:	cmp    DWORD PTR [ecx],eax
  424c9e:	jne    0x424f0d
  424ca4:	mov    ecx,DWORD PTR [ebp-0x4]
  424ca7:	mov    ecx,DWORD PTR [ecx+0x17c]
  424cad:	mov    DWORD PTR [ecx],eax
  424caf:	mov    ecx,DWORD PTR [ebp-0x4]
  424cb2:	mov    ecx,DWORD PTR [ecx+0x180]
  424cb8:	mov    DWORD PTR [ecx],eax
  424cba:	mov    eax,0x4e69
  424cbf:	mov    WORD PTR [ebp-0x9c],ax
  424cc6:	mov    eax,esi
  424cc8:	mov    WORD PTR [ebp-0x9a],ax
  424ccf:	mov    eax,0x4e79
  424cd4:	mov    WORD PTR [ebp-0x98],ax
  424cdb:	add    eax,0xffffffc0
  424cde:	mov    WORD PTR [ebp-0x96],ax
  424ce5:	mov    eax,0x4f8e
  424cea:	mov    WORD PTR [ebp-0x94],ax
  424cf1:	mov    eax,0x4e3a
  424cf6:	mov    WORD PTR [ebp-0x92],ax
  424cfd:	add    eax,0x45
  424d00:	mov    WORD PTR [ebp-0x90],ax
  424d07:	mov    eax,0x4e24
  424d0c:	mov    WORD PTR [ebp-0x8e],ax
  424d13:	mov    eax,esi
  424d15:	mov    WORD PTR [ebp-0x8c],ax
  424d1c:	mov    eax,0x4e25
  424d21:	mov    WORD PTR [ebp-0x8a],ax
  424d28:	mov    eax,0x99f9
  424d2d:	mov    WORD PTR [ebp-0x88],ax
  424d34:	mov    eax,0x8d6a
  424d39:	mov    WORD PTR [ebp-0x86],ax
  424d40:	mov    eax,0xd66f
  424d45:	mov    WORD PTR [ebp-0x84],ax
  424d4c:	mov    eax,0xd78b
  424d51:	mov    WORD PTR [ebp-0x82],ax
  424d58:	mov    eax,0x27b4
  424d5d:	mov    WORD PTR [ebp-0x80],ax
  424d61:	mov    eax,0x47b4
  424d66:	mov    WORD PTR [ebp-0x7e],ax
  424d6a:	mov    eax,0x4e3b
  424d6f:	push   0x8
  424d71:	mov    WORD PTR [ebp-0x7c],ax
  424d75:	mov    DWORD PTR [ebp-0x10],0x316120f
  424d7c:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424d83:	lea    eax,[ebp-0x10]
  424d86:	pop    ecx
  424d87:	mov    dl,BYTE PTR [eax]
  424d89:	xor    dl,0x79
  424d8c:	sub    dl,0x3
  424d8f:	mov    BYTE PTR [eax],dl
  424d91:	inc    eax
  424d92:	dec    ecx
  424d93:	jne    0x424d87
  424d95:	lea    eax,[ebp-0x10]
  424d98:	mov    DWORD PTR [ebp-0xdc],eax
  424d9e:	lea    eax,[ebp-0xe0]
  424da4:	push   eax
  424da5:	mov    eax,DWORD PTR [ebp+0xc]
  424da8:	xor    eax,edi
  424daa:	add    eax,ebx
  424dac:	push   eax
  424dad:	mov    eax,DWORD PTR [ebp-0x4]
  424db0:	add    eax,0x66
  424db3:	push   eax
  424db4:	mov    eax,DWORD PTR [ebp-0x4]
  424db7:	mov    eax,DWORD PTR [eax+0x198]
  424dbd:	mov    DWORD PTR [ebp-0xe0],0x1
  424dc7:	push   DWORD PTR [eax]
  424dc9:	mov    eax,DWORD PTR [ebp+0x10]
  424dcc:	call   eax
  424dce:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd1:	xor    ecx,edi
  424dd3:	add    ecx,ebx
  424dd5:	mov    DWORD PTR [ebp-0x8],eax
  424dd8:	cmp    eax,ecx
  424dda:	jne    0x424df5
  424ddc:	mov    eax,ds:0x33730bcf
  424de1:	or     eax,0x22150bce
  424de6:	mov    ds:0x33730bcf,eax
  424deb:	add    eax,0x3372e92e
  424df0:	mov    ds:0x33730bcf,eax
  424df5:	mov    ecx,0x4f96
  424dfa:	mov    eax,ecx
  424dfc:	mov    WORD PTR [ebp-0x40],ax
  424e00:	mov    eax,0x4e63
  424e05:	mov    edx,eax
  424e07:	mov    WORD PTR [ebp-0x3e],dx
  424e0b:	lea    edx,[ecx+0x5]
  424e0e:	mov    WORD PTR [ebp-0x3c],dx
  424e12:	add    edx,0xffffffe8
  424e15:	mov    WORD PTR [ebp-0x3a],dx
  424e19:	lea    edx,[ecx-0x9]
  424e1c:	mov    WORD PTR [ebp-0x38],dx
  424e20:	add    edx,0xfffffffb
  424e23:	mov    WORD PTR [ebp-0x36],dx
  424e27:	lea    edx,[ecx+0x21]
  424e2a:	mov    WORD PTR [ebp-0x34],dx
  424e2e:	mov    WORD PTR [ebp-0x32],cx
  424e32:	mov    ecx,esi
  424e34:	mov    WORD PTR [ebp-0x30],cx
  424e38:	lea    ecx,[edx-0x1]
  424e3b:	mov    edx,ecx
  424e3d:	mov    WORD PTR [ebp-0x54],dx
  424e41:	mov    edx,eax
  424e43:	mov    WORD PTR [ebp-0x52],dx
  424e47:	add    edx,0x18
  424e4a:	mov    WORD PTR [ebp-0x50],dx
  424e4e:	mov    WORD PTR [ebp-0x4e],ax
  424e52:	add    eax,0xa
  424e55:	mov    WORD PTR [ebp-0x4c],ax
  424e59:	mov    eax,0x4e68
  424e5e:	mov    WORD PTR [ebp-0x4a],ax
  424e62:	lea    eax,[ecx-0x1f]
  424e65:	mov    WORD PTR [ebp-0x48],ax
  424e69:	mov    WORD PTR [ebp-0x46],cx
  424e6d:	mov    WORD PTR [ebp-0x44],si
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	movzx  ecx,WORD PTR [ebp-0x54]
  424e78:	xor    eax,edi
  424e7a:	add    eax,ebx
  424e7c:	xor    eax,ecx
  424e7e:	mov    WORD PTR [ebp-0x54],ax
  424e82:	mov    eax,DWORD PTR [ebp+0x8]
  424e85:	movzx  ecx,WORD PTR [ebp-0x40]
  424e89:	xor    eax,edi
  424e8b:	add    eax,ebx
  424e8d:	xor    eax,ecx
  424e8f:	mov    WORD PTR [ebp-0x40],ax
  424e93:	xor    eax,eax
  424e95:	mov    WORD PTR [ebp-0xf4],ax
  424e9c:	mov    WORD PTR [ebp-0x108],ax
  424ea3:	mov    edi,DWORD PTR [ebp+0x24]
  424ea6:	lea    eax,[ebp-0xf4]
  424eac:	lea    edx,[ebp-0x54]
  424eaf:	mov    DWORD PTR [ebp-0xe0],0x2
  424eb9:	mov    DWORD PTR [ebp-0xdc],eax
  424ebf:	call   0x4278d5
  424ec4:	mov    DWORD PTR [ebp-0xd8],eax
  424eca:	lea    eax,[ebp-0xe0]
  424ed0:	push   eax
  424ed1:	mov    eax,DWORD PTR [ebp+0xc]
  424ed4:	xor    eax,0x75108a4
  424ed9:	add    eax,ebx
  424edb:	push   eax
  424edc:	lea    eax,[ebp-0x9c]
  424ee2:	push   eax
  424ee3:	push   DWORD PTR [ebp-0x8]
  424ee6:	mov    eax,DWORD PTR [ebp+0x10]
  424ee9:	call   eax
  424eeb:	mov    edi,DWORD PTR [ebp+0x24]
  424eee:	lea    eax,[ebp-0x108]
  424ef4:	lea    edx,[ebp-0x40]
  424ef7:	mov    DWORD PTR [ebp-0xdc],eax
  424efd:	call   0x4278d5
  424f02:	mov    DWORD PTR [ebp-0xd8],eax
  424f08:	mov    edi,0x75108a4
  424f0d:	mov    eax,DWORD PTR [ebp+0x14]
  424f10:	push   DWORD PTR [ebp-0x4]
  424f13:	push   DWORD PTR [ebp+0x20]
  424f16:	push   DWORD PTR [ebp+0x1c]
  424f19:	push   DWORD PTR [ebp+0x18]
  424f1c:	push   DWORD PTR [ebp+0x10]
  424f1f:	push   DWORD PTR [ebp+0x8]
  424f22:	push   DWORD PTR [ebp+0xc]
  424f25:	call   0x426172
  424f2a:	test   eax,eax
  424f2c:	je     0x424f70
  424f2e:	add    DWORD PTR [ebp-0x4],eax
  424f31:	push   DWORD PTR [ebp-0x4]
  424f34:	lea    esi,[ebp+0x4]
  424f37:	call   0x425360
  424f3c:	mov    eax,DWORD PTR [ebp-0x4]
  424f3f:	mov    eax,DWORD PTR [eax+0x1c8]
  424f45:	mov    eax,DWORD PTR [eax]
  424f47:	xor    eax,edi
  424f49:	add    eax,ebx
  424f4b:	mov    eax,DWORD PTR [ebp-0x4]
  424f4e:	jne    0x424f66
  424f50:	mov    ecx,DWORD PTR [ebp-0x4]
  424f53:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424f59:	push   DWORD PTR [ecx]
  424f5b:	mov    eax,DWORD PTR [eax+0x1d8]
  424f61:	call   DWORD PTR [eax+0x28]
  424f64:	jmp    0x424f70
  424f66:	mov    eax,DWORD PTR [eax+0x17c]
  424f6c:	mov    eax,DWORD PTR [eax]
  424f6e:	add    DWORD PTR [esi],eax
  424f70:	pop    edi
  424f71:	pop    esi
  424f72:	pop    ebx
  424f73:	leave  
  424f74:	ret    0x20
  424f77:	push   edi
  424f78:	push   esi
  424f79:	push   ebx
  424f7a:	push   ebp
  424f7b:	mov    ebp,esp
  424f7d:	mov    eax,DWORD PTR [ebp+0x24]
  424f80:	add    DWORD PTR [ebp+0x28],eax
  424f83:	push   eax
  424f84:	cld    
  424f85:	mov    esi,DWORD PTR [ebp+0x18]
  424f88:	add    DWORD PTR [ebp+0x1c],esi
  424f8b:	push   esi
  424f8c:	mov    esi,DWORD PTR [ebp+0x14]
  424f8f:	lods   eax,DWORD PTR ds:[esi]
  424f90:	xchg   edx,eax
  424f91:	push   edx
  424f92:	mov    cl,BYTE PTR [esi-0x2]
  424f95:	or     eax,0xffffffff
  424f98:	shl    eax,cl
  424f9a:	not    eax
  424f9c:	push   eax
  424f9d:	mov    cl,dh
  424f9f:	or     eax,0xffffffff
  424fa2:	shl    eax,cl
  424fa4:	not    eax
  424fa6:	push   eax
  424fa7:	add    cl,dl
  424fa9:	mov    edi,esi
  424fab:	sub    esp,0xc
  424fae:	sub    eax,eax
  424fb0:	inc    eax
  424fb1:	push   eax
  424fb2:	push   eax
  424fb3:	push   eax
  424fb4:	push   eax
  424fb5:	push   eax
  424fb6:	push   edi
  424fb7:	sub    esi,esi
  424fb9:	push   esi
  424fba:	or     ebx,0xffffffff
  424fbd:	mov    eax,0x300
  424fc2:	shl    eax,cl
  424fc4:	lea    ecx,[eax+0x736]
  424fca:	mov    eax,0x4000400
  424fcf:	shr    ecx,1
  424fd1:	rep stos DWORD PTR es:[edi],eax
  424fd3:	push   0x5
  424fd5:	pop    ecx
  424fd6:	call   0x4252c1
  424fdb:	loop   0x424fd6
  424fdd:	lea    esi,[esi]
  424fdf:	lea    edi,[edi]
  424fe1:	mov    edi,DWORD PTR [ebp-0x4]
  424fe4:	mov    eax,DWORD PTR [ebp-0x10]
  424fe7:	sub    edi,DWORD PTR [ebp+0x24]
  424fea:	and    eax,edi
  424fec:	mov    DWORD PTR [ebp-0x18],eax
  424fef:	mov    al,0x0
  424ff1:	call   0x4252d9
  424ff6:	jne    0x425091
  424ffc:	mov    cl,BYTE PTR [ebp-0xc]
  424fff:	and    edi,DWORD PTR [ebp-0x14]
  425002:	shl    edi,cl
  425004:	sub    cl,0x8
  425007:	neg    cl
  425009:	shr    esi,cl
  42500b:	pop    eax
  42500c:	add    edi,esi
  42500e:	pop    esi
  42500f:	lea    edi,[edi+edi*2]
  425012:	shl    edi,0x8
  425015:	cmp    al,0x7
  425017:	pop    edx
  425018:	lea    ecx,[esi+edi*2+0xe6c]
  42501f:	push   ecx
  425020:	push   esi
  425021:	mov    esi,0x100
  425026:	push   eax
  425027:	mov    al,0x1
  425029:	jb     0x42505f
  42502b:	mov    edi,DWORD PTR [ebp-0x4]
  42502e:	sub    edi,DWORD PTR [ebp-0x24]
  425031:	movzx  edi,BYTE PTR [edi]
  425034:	mov    ebp,DWORD PTR [ebp-0x34]
  425037:	shl    edi,1
  425039:	mov    ecx,esi
  42503b:	and    esi,edi
  42503d:	add    ecx,esi
  42503f:	lea    ebp,[ebp+ecx*2+0x0]
  425043:	call   0x4252f8
  425048:	mov    ecx,eax
  42504a:	shr    esi,0x8
  42504d:	and    ecx,0x1
  425050:	cmp    esi,ecx
  425052:	mov    esi,0x100
  425057:	jne    0x425067
  425059:	cmp    eax,esi
  42505b:	jb     0x425034
  42505d:	jmp    0x425073
  42505f:	mov    ebp,DWORD PTR [ebp-0x34]
  425062:	call   0x4252f8
  425067:	inc    eax
  425068:	inc    esi
  425069:	sub    eax,0x1
  42506c:	sub    esi,0x1
  42506f:	cmp    eax,esi
  425071:	jb     0x42505f
  425073:	pop    edx
  425074:	inc    edx
  425075:	cmp    edx,0x5
  425078:	dec    edx
  425079:	mov    ecx,edx
  42507b:	jb     0x42508c
  42507d:	inc    edx
  42507e:	cmp    edx,0xb
  425081:	dec    edx
  425082:	mov    cl,0x4
  425084:	dec    cl
  425086:	jb     0x42508c
  425088:	mov    cl,0x7
  42508a:	dec    cl
  42508c:	sub    edx,ecx
  42508e:	push   edx
  42508f:	jmp    0x4250e0
  425091:	mov    al,0xc1
  425093:	dec    al
  425095:	call   0x4252e9
  42509a:	jne    0x4250b0
  42509c:	pop    eax
  42509d:	pop    edi
  42509e:	pop    edx
  42509f:	pop    ecx
  4250a0:	pop    edx
  4250a1:	pop    ecx
  4250a2:	push   DWORD PTR [esp]
  4250a5:	push   ecx
  4250a6:	push   edx
  4250a7:	mov    edx,0x664
  4250ac:	mov    cl,0x0
  4250ae:	jmp    0x425123
  4250b0:	mov    al,0xcd
  4250b2:	dec    al
  4250b4:	call   0x4252e9
  4250b9:	jne    0x4250e9
  4250bb:	mov    al,0xf1
  4250bd:	dec    al
  4250bf:	call   0x4252d9
  4250c4:	jne    0x425119
  4250c6:	pop    eax
  4250c7:	cmp    al,0x7
  4250c9:	mov    al,0x9
  4250cb:	jb     0x4250cf
  4250cd:	mov    al,0xb
  4250cf:	push   eax
  4250d0:	mov    esi,DWORD PTR [ebp-0x4]
  4250d3:	sub    esi,DWORD PTR [ebp-0x24]
  4250d6:	cmp    esi,DWORD PTR [ebp+0x24]
  4250d9:	jb     0x4252b0
  4250df:	lods   al,BYTE PTR ds:[esi]
  4250e0:	mov    edi,DWORD PTR [ebp-0x4]
  4250e3:	stos   BYTE PTR es:[edi],al
  4250e4:	jmp    0x425277
  4250e9:	mov    al,0xd8
  4250eb:	call   0x4252e9
  4250f0:	mov    esi,DWORD PTR [ebp-0x28]
  4250f3:	je     0x425110
  4250f5:	mov    al,0xe4
  4250f7:	call   0x4252e9
  4250fc:	mov    esi,DWORD PTR [ebp-0x2c]
  4250ff:	je     0x42510a
  425101:	mov    esi,DWORD PTR [ebp-0x30]
  425104:	mov    ecx,DWORD PTR [ebp-0x2c]
  425107:	mov    DWORD PTR [ebp-0x30],ecx
  42510a:	mov    ecx,DWORD PTR [ebp-0x28]
  42510d:	mov    DWORD PTR [ebp-0x2c],ecx
  425110:	mov    ecx,DWORD PTR [ebp-0x24]
  425113:	mov    DWORD PTR [ebp-0x28],ecx
  425116:	mov    DWORD PTR [ebp-0x24],esi
  425119:	pop    eax
  42511a:	pop    edi
  42511b:	pop    ecx
  42511c:	mov    edx,0xa68
  425121:	mov    cl,0x8
  425123:	add    edx,edi
  425125:	push   edx
  425126:	push   edi
  425127:	cmp    al,0x7
  425129:	mov    al,cl
  42512b:	jb     0x42512f
  42512d:	add    al,0x3
  42512f:	push   eax
  425130:	mov    ebp,DWORD PTR [ebp-0x34]
  425133:	call   0x4252f6
  425138:	jne    0x42514e
  42513a:	mov    eax,DWORD PTR [ebp-0x18]
  42513d:	mov    edi,DWORD PTR [ebp-0x34]
  425140:	shl    eax,0x3
  425143:	sub    ecx,ecx
  425145:	push   0x8
  425147:	pop    esi
  425148:	lea    edi,[edi+eax*2+0x4]
  42514c:	jmp    0x425183
  42514e:	mov    ebp,DWORD PTR [ebp-0x34]
  425151:	add    ebp,0x2
  425154:	call   0x4252f6
  425159:	jne    0x425173
  42515b:	mov    eax,DWORD PTR [ebp-0x18]
  42515e:	mov    edi,DWORD PTR [ebp-0x34]
  425161:	shl    eax,0x3
  425164:	push   0x8
  425166:	pop    ecx
  425167:	push   0x8
  425169:	pop    esi
  42516a:	lea    edi,[edi+eax*2+0x104]
  425171:	jmp    0x425183
  425173:	mov    edi,0x204
  425178:	add    edi,DWORD PTR [ebp-0x34]
  42517b:	push   0x10
  42517d:	pop    ecx
  42517e:	mov    esi,0x100
  425183:	mov    DWORD PTR [ebp-0x1c],ecx
  425186:	sub    eax,eax
  425188:	inc    eax
  425189:	mov    ebp,edi
  42518b:	call   0x4252f8
  425190:	mov    ecx,eax
  425192:	sub    ecx,esi
  425194:	jb     0x425189
  425196:	add    DWORD PTR [ebp-0x1c],ecx
  425199:	cmp    DWORD PTR [ebp-0x3c],0x4
  42519d:	jae    0x425253
  4251a3:	add    DWORD PTR [ebp-0x3c],0x7
  4251a7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251aa:	cmp    ecx,0x4
  4251ad:	jb     0x4251b2
  4251af:	push   0x3
  4251b1:	pop    ecx
  4251b2:	mov    edi,DWORD PTR [ebp-0x38]
  4251b5:	shl    ecx,0x6
  4251b8:	sub    eax,eax
  4251ba:	inc    eax
  4251bb:	push   0x40
  4251bd:	pop    esi
  4251be:	lea    edi,[edi+ecx*2+0x360]
  4251c5:	mov    ebp,edi
  4251c7:	call   0x4252f8
  4251cc:	mov    ecx,eax
  4251ce:	sub    ecx,esi
  4251d0:	jb     0x4251c5
  4251d2:	mov    DWORD PTR [ebp-0x18],ecx
  4251d5:	mov    DWORD PTR [ebp-0x24],ecx
  4251d8:	cmp    ecx,0x4
  4251db:	jb     0x425250
  4251dd:	mov    esi,ecx
  4251df:	and    DWORD PTR [ebp-0x24],0x1
  4251e3:	shr    esi,1
  4251e5:	or     DWORD PTR [ebp-0x24],0x2
  4251e9:	dec    esi
  4251ea:	cmp    ecx,0xe
  4251ed:	jae    0x425208
  4251ef:	mov    eax,0x2af
  4251f4:	sub    eax,ecx
  4251f6:	mov    ecx,esi
  4251f8:	shl    BYTE PTR [ebp-0x24],cl
  4251fb:	add    eax,DWORD PTR [ebp-0x24]
  4251fe:	shl    eax,1
  425200:	add    eax,DWORD PTR [ebp-0x38]
  425203:	mov    DWORD PTR [ebp-0x34],eax
  425206:	jmp    0x425235
  425208:	sub    esi,0x4
  42520b:	call   0x4252b5
  425210:	shr    ebx,1
  425212:	shl    DWORD PTR [ebp-0x24],1
  425215:	cmp    DWORD PTR [ebp-0x20],ebx
  425218:	jb     0x425220
  42521a:	inc    DWORD PTR [ebp-0x24]
  42521d:	sub    DWORD PTR [ebp-0x20],ebx
  425220:	dec    esi
  425221:	jne    0x42520b
  425223:	mov    eax,0x644
  425228:	add    eax,DWORD PTR [ebp-0x38]
  42522b:	mov    DWORD PTR [ebp-0x34],eax
  42522e:	shl    DWORD PTR [ebp-0x24],0x4
  425232:	push   0x4
  425234:	pop    esi
  425235:	sub    edi,edi
  425237:	inc    edi
  425238:	mov    eax,edi
  42523a:	mov    ebp,DWORD PTR [ebp-0x34]
  42523d:	call   0x4252f8
  425242:	test   al,0x1
  425244:	je     0x425249
  425246:	or     DWORD PTR [ebp-0x24],edi
  425249:	shl    edi,1
  42524b:	dec    esi
  42524c:	jne    0x42523a
  42524e:	jmp    0x425250
  425250:	inc    DWORD PTR [ebp-0x24]
  425253:	mov    ecx,DWORD PTR [ebp-0x1c]
  425256:	add    ecx,0x2
  425259:	mov    edi,DWORD PTR [ebp-0x4]
  42525c:	mov    eax,edi
  42525e:	sub    eax,DWORD PTR [ebp+0x24]
  425261:	cmp    DWORD PTR [ebp-0x24],eax
  425264:	ja     0x4252b0
  425266:	mov    esi,edi
  425268:	sub    esi,DWORD PTR [ebp-0x24]
  42526b:	mov    edx,DWORD PTR [ebp+0x28]
  42526e:	lods   al,BYTE PTR ds:[esi]
  42526f:	stos   BYTE PTR es:[edi],al
  425270:	cmp    edi,edx
  425272:	jae    0x425277
  425274:	dec    ecx
  425275:	jne    0x42526e
  425277:	mov    DWORD PTR [ebp-0x4],edi
  42527a:	movzx  esi,al
  42527d:	cmp    edi,DWORD PTR [ebp+0x28]
  425280:	jb     0x424fe1
  425286:	call   0x4252b5
  42528b:	sub    eax,eax
  42528d:	lea    ebp,[esp+0x3c]
  425291:	mov    edx,DWORD PTR [ebp+0x20]
  425294:	mov    esi,DWORD PTR [ebp-0x8]
  425297:	sub    esi,DWORD PTR [ebp+0x18]
  42529a:	mov    DWORD PTR [edx],esi
  42529c:	mov    edx,DWORD PTR [ebp+0x2c]
  42529f:	mov    edi,DWORD PTR [ebp-0x4]
  4252a2:	sub    edi,DWORD PTR [ebp+0x24]
  4252a5:	mov    DWORD PTR [edx],edi
  4252a7:	leave  
  4252a8:	pop    ebx
  4252a9:	pop    esi
  4252aa:	pop    edi
  4252ab:	ret    0x1c
  4252ae:	pop    esi
  4252af:	pop    eax
  4252b0:	sub    eax,eax
  4252b2:	inc    eax
  4252b3:	jmp    0x42528d
  4252b5:	cmp    ebx,0x1000000
  4252bb:	jb     0x4252be
  4252bd:	ret    
  4252be:	shl    ebx,0x8
  4252c1:	push   esi
  4252c2:	mov    esi,DWORD PTR [ebp-0x8]
  4252c5:	cmp    esi,DWORD PTR [ebp+0x1c]
  4252c8:	jae    0x4252ae
  4252ca:	mov    eax,DWORD PTR [ebp-0x20]
  4252cd:	shl    eax,0x8
  4252d0:	lods   al,BYTE PTR ds:[esi]
  4252d1:	mov    DWORD PTR [ebp-0x20],eax
  4252d4:	mov    DWORD PTR [ebp+0x74],esi
  4252d7:	aas    
  4252d8:	or     bl,BYTE PTR [edx-0xf5ef3e3]
  4252de:	add    al,0x6
  4252e0:	inc    esi
  4252e1:	mov    ecx,DWORD PTR [ecx+0x689540d]
  4252e7:	pop    edx
  4252e8:	(bad)  
  4252e9:	mov    eax,ds:0xd8904f0
  4252ee:	or     al,0x9a
  4252f0:	pop    ebp
  4252f1:	adc    al,0x9e
  4252f3:	pop    ebx
  4252f4:	or     eax,0x9e04d983
  4252f9:	pop    ebx
  4252fa:	or     eax,0x837a8683
  4252ff:	add    DWORD PTR [ebx-0x6544967b],0x1b
  425306:	retf   
  425307:	repz push es
  425309:	dec    ebx
  42530a:	retf   
  42530b:	ret    
  42530c:	xchg   ebx,eax
  42530d:	stc    
  42530e:	sbb    ecx,ebx
  425310:	cmp    ebp,DWORD PTR [ecx-0x44]
  425313:	cwde   
  425314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425315:	or     BYTE PTR [ebx],0xcb
  425318:	repz push es
  42531a:	dec    edx
  42531b:	xchg   ebx,eax
  42531c:	xchg   esp,eax
  42531d:	sub    ecx,ebx
  42531f:	ret    
  425320:	call   0x683:0x2df2a11a
  425327:	push   esi
  425328:	cdq    
  425329:	mov    eax,ds:0x1bf518e2
  42532e:	retf   
  42532f:	ret    
  425330:	imul   esi,DWORD PTR [ecx-0x7c09c966],0xd9838393
  42533a:	sbb    BYTE PTR [esi],al
  42533c:	push   esi
  42533d:	lea    ecx,[edi-0x7b]
  425340:	sbb    eax,0x9e048983
  425345:	pop    ebx
  425346:	retf   
  425347:	add    ecx,DWORD PTR [edx]
  425349:	push   es
  42534a:	pop    eax
  42534b:	(bad)  
  42534c:	aad    0x1b
  42534e:	retf   
  42534f:	ret    
  425350:	fnstenv [esi]
  425352:	dec    edi
  425353:	aad    0x2d
  425355:	add    DWORD PTR [ebx],0xffffffc0
  425358:	add    eax,0x1
  42535b:	lea    ebp,[esp+0x40]
  42535f:	ret    
  425360:	push   ebp
  425361:	mov    ebp,esp
  425363:	sub    esp,0x12c
  425369:	push   ebx
  42536a:	push   esi
  42536b:	push   edi
  42536c:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  425373:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42537a:	mov    eax,DWORD PTR [ebp+0x8]
  42537d:	mov    DWORD PTR [ebp+0x8],eax
  425380:	mov    ecx,DWORD PTR [ebp-0x10]
  425383:	mov    ebx,0x75108a4
  425388:	xor    ecx,ebx
  42538a:	mov    eax,0x3272ec
  42538f:	add    ecx,eax
  425391:	mov    DWORD PTR [ebp-0x2c],ecx
  425394:	mov    ecx,DWORD PTR [ebp-0x10]
  425397:	xor    ecx,ebx
  425399:	add    ecx,eax
  42539b:	mov    DWORD PTR [ebp-0x3c],ecx
  42539e:	mov    ecx,DWORD PTR [ebp-0x10]
  4253a1:	xor    ecx,ebx
  4253a3:	add    ecx,eax
  4253a5:	mov    DWORD PTR [ebp-0x40],ecx
  4253a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4253ab:	xor    ecx,ebx
  4253ad:	add    ecx,eax
  4253af:	mov    DWORD PTR [ebp-0xd8],ecx
  4253b5:	mov    DWORD PTR [ebp-0x50],0xf89f05b0
  4253bc:	mov    DWORD PTR [ebp-0x40],0xf89cb5b0
  4253c3:	mov    DWORD PTR [ebp-0x54],0xf89c85bc
  4253ca:	push   0x25
  4253cc:	pop    ecx
  4253cd:	mov    DWORD PTR [ebp-0x38],ecx
  4253d0:	mov    DWORD PTR [ebp-0x38],ecx
  4253d3:	push   0x65
  4253d5:	pop    ecx
  4253d6:	mov    DWORD PTR [ebp-0x38],ecx
  4253d9:	mov    DWORD PTR [ebp-0x38],ecx
  4253dc:	mov    DWORD PTR [ebp-0x38],0x4d
  4253e3:	mov    DWORD PTR [ebp-0x38],0x43
  4253ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4253ed:	xor    ecx,ebx
  4253ef:	add    ecx,eax
  4253f1:	mov    DWORD PTR [ebp-0x38],ecx
  4253f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4253f7:	xor    ecx,ebx
  4253f9:	add    ecx,eax
  4253fb:	mov    DWORD PTR [ebp-0x38],ecx
  4253fe:	mov    DWORD PTR [ebp-0x28],0x258
  425405:	mov    DWORD PTR [ebp-0x20],0x36
  42540c:	mov    DWORD PTR [ebp-0x14],0x7a
  425413:	lea    edi,[ebp-0x10c]
  425419:	lea    esi,[ebp-0x12c]
  42541f:	call   0x4260e1
  425424:	dec    DWORD PTR [ebp-0x14]
  425427:	jne    0x425413
  425429:	dec    DWORD PTR [ebp-0x20]
  42542c:	jne    0x42540c
  42542e:	dec    DWORD PTR [ebp-0x28]
  425431:	jne    0x425405
  425433:	mov    DWORD PTR [ebp-0x28],0x400e
  42543a:	mov    eax,DWORD PTR [ebp-0x10]
  42543d:	xor    eax,ebx
  42543f:	mov    esi,0x3272ec
  425444:	add    eax,esi
  425446:	mov    DWORD PTR [ebp-0x1c],eax
  425449:	mov    eax,DWORD PTR [ebp-0x10]
  42544c:	and    DWORD PTR [ebp-0x94],0x0
  425453:	xor    eax,ebx
  425455:	add    eax,esi
  425457:	mov    DWORD PTR [ebp-0x34],eax
  42545a:	mov    eax,fs:0x18
  425460:	mov    DWORD PTR [ebp-0x94],eax
  425466:	mov    eax,DWORD PTR [eax+0x30]
  425469:	mov    DWORD PTR [ebp-0xcc],eax
  42546f:	mov    eax,DWORD PTR [eax+0xc]
  425472:	mov    DWORD PTR [ebp-0xc0],eax
  425478:	mov    eax,DWORD PTR [ebp+0x8]
  42547b:	lea    ecx,[ebp-0x94]
  425481:	mov    DWORD PTR [eax+0x1a0],ecx
  425487:	mov    eax,DWORD PTR [ebp+0x8]
  42548a:	lea    ecx,[ebp-0xcc]
  425490:	mov    DWORD PTR [eax+0x1a4],ecx
  425496:	mov    eax,DWORD PTR [ebp+0x8]
  425499:	push   DWORD PTR [ebp+0x8]
  42549c:	lea    ecx,[ebp-0xc0]
  4254a2:	mov    DWORD PTR [eax+0x1a8],ecx
  4254a8:	call   0x4278a6
  4254ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4254b0:	xor    ecx,ebx
  4254b2:	add    ecx,esi
  4254b4:	cmp    ecx,eax
  4254b6:	je     0x425839
  4254bc:	mov    eax,DWORD PTR [ebp+0x8]
  4254bf:	mov    eax,DWORD PTR [eax+0x194]
  4254c5:	mov    ecx,DWORD PTR [eax]
  4254c7:	mov    eax,DWORD PTR [ebp+0x8]
  4254ca:	mov    eax,DWORD PTR [eax+0x194]
  4254d0:	mov    eax,DWORD PTR [eax]
  4254d2:	add    eax,DWORD PTR [ecx+0x3c]
  4254d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4254d8:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4254de:	lea    edx,[ebp-0xec]
  4254e4:	push   edx
  4254e5:	mov    edx,DWORD PTR [ebp+0x8]
  4254e8:	mov    edx,DWORD PTR [edx+0x18c]
  4254ee:	mov    edx,DWORD PTR [edx]
  4254f0:	add    edx,DWORD PTR [eax+0x88]
  4254f6:	push   0x4
  4254f8:	push   DWORD PTR [eax+0x8c]
  4254fe:	push   edx
  4254ff:	call   DWORD PTR [ecx+0x1c]
  425502:	push   DWORD PTR [ebp+0x8]
  425505:	xor    eax,eax
  425507:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  425511:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  42551b:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  425525:	mov    BYTE PTR [ebp-0x9c],0x7a
  42552c:	lea    edi,[ebp-0x9b]
  425532:	stos   DWORD PTR es:[edi],eax
  425533:	stos   WORD PTR es:[edi],ax
  425535:	stos   BYTE PTR es:[edi],al
  425536:	xor    eax,eax
  425538:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  425542:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  42554c:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  425556:	mov    BYTE PTR [ebp-0xb0],0x7a
  42555d:	lea    edi,[ebp-0xaf]
  425563:	stos   DWORD PTR es:[edi],eax
  425564:	stos   WORD PTR es:[edi],ax
  425566:	stos   BYTE PTR es:[edi],al
  425567:	mov    edi,DWORD PTR [ebp+0x8]
  42556a:	mov    eax,DWORD PTR [ebp+0x8]
  42556d:	mov    edx,DWORD PTR [eax+0x1b8]
  425573:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  42557a:	mov    DWORD PTR [ebp-0x64],0x150a091f
  425581:	mov    WORD PTR [ebp-0x60],0x7a3d
  425587:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  425591:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  42559b:	mov    DWORD PTR [ebp-0x88],0x281d120a
  4255a5:	mov    DWORD PTR [ebp-0x84],0xc110901
  4255af:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  4255b6:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  4255bd:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  4255c4:	mov    DWORD PTR [ebp-0x74],0x281d120a
  4255cb:	mov    DWORD PTR [ebp-0x70],0xc110901
  4255d2:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  4255d9:	call   0x4278d5
  4255de:	push   eax
  4255df:	mov    eax,DWORD PTR [ebp+0x8]
  4255e2:	mov    eax,DWORD PTR [eax+0x1a8]
  4255e8:	push   DWORD PTR [eax]
  4255ea:	call   0x427576
  4255ef:	test   eax,eax
  4255f1:	jne    0x425643
  4255f3:	mov    eax,DWORD PTR [ebp+0x8]
  4255f6:	mov    eax,DWORD PTR [eax+0x1d8]
  4255fc:	mov    edi,DWORD PTR [ebp+0x8]
  4255ff:	add    eax,0x4
  425602:	mov    DWORD PTR [ebp-0x24],eax
  425605:	mov    eax,DWORD PTR [ebp+0x8]
  425608:	mov    edx,DWORD PTR [eax+0x1b8]
  42560e:	call   0x4278d5
  425613:	push   eax
  425614:	mov    eax,DWORD PTR [ebp-0x24]
  425617:	call   DWORD PTR [eax]
  425619:	test   eax,eax
  42561b:	jne    0x425643
  42561d:	mov    eax,DWORD PTR [ebp+0x8]
  425620:	mov    eax,DWORD PTR [eax+0x1d8]
  425626:	mov    edi,DWORD PTR [ebp+0x8]
  425629:	add    eax,0x10
  42562c:	mov    DWORD PTR [ebp-0x24],eax
  42562f:	mov    eax,DWORD PTR [ebp+0x8]
  425632:	mov    edx,DWORD PTR [eax+0x1b8]
  425638:	call   0x4278d5
  42563d:	push   eax
  42563e:	mov    eax,DWORD PTR [ebp-0x24]
  425641:	call   DWORD PTR [eax]
  425643:	mov    eax,DWORD PTR [ebp-0x10]
  425646:	mov    ecx,DWORD PTR [ebp-0x28]
  425649:	xor    eax,ebx
  42564b:	add    eax,esi
  42564d:	cmp    eax,ecx
  42564f:	je     0x425812
  425655:	mov    eax,DWORD PTR [ebp-0x18]
  425658:	xor    eax,ebx
  42565a:	mov    ecx,0xffcd8d14
  42565f:	sub    ecx,eax
  425661:	add    ecx,DWORD PTR [ebp-0x28]
  425664:	mov    eax,DWORD PTR [ebp-0x1c]
  425667:	cmp    eax,ecx
  425669:	ja     0x425812
  42566f:	mov    DWORD PTR [ebp-0x20],0x0
  425676:	push   DWORD PTR [ebp+0x8]
  425679:	mov    edi,DWORD PTR [ebp+0x8]
  42567c:	mov    eax,DWORD PTR [ebp+0x8]
  42567f:	mov    edx,DWORD PTR [eax+0x1b4]
  425685:	call   0x4278d5
  42568a:	push   eax
  42568b:	mov    eax,DWORD PTR [ebp+0x8]
  42568e:	mov    eax,DWORD PTR [eax+0x1a8]
  425694:	push   DWORD PTR [eax]
  425696:	call   0x427576
  42569b:	mov    ecx,DWORD PTR [ebp+0x8]
  42569e:	mov    ecx,DWORD PTR [ecx+0x19c]
  4256a4:	mov    DWORD PTR [ecx],eax
  4256a6:	mov    eax,DWORD PTR [ebp+0x8]
  4256a9:	mov    edi,DWORD PTR [eax+0x1d8]
  4256af:	mov    esi,DWORD PTR [ebp+0x8]
  4256b2:	xor    eax,eax
  4256b4:	lea    edx,[ebp-0x7c]
  4256b7:	call   0x42790b
  4256bc:	push   eax
  4256bd:	mov    eax,DWORD PTR [ebp+0x8]
  4256c0:	mov    eax,DWORD PTR [eax+0x19c]
  4256c6:	push   DWORD PTR [eax]
  4256c8:	call   DWORD PTR [edi+0x8]
  4256cb:	mov    DWORD PTR [ebp-0x24],eax
  4256ce:	mov    eax,DWORD PTR [ebp+0x8]
  4256d1:	mov    edi,DWORD PTR [eax+0x1d8]
  4256d7:	mov    esi,DWORD PTR [ebp+0x8]
  4256da:	xor    eax,eax
  4256dc:	lea    edx,[ebp-0x90]
  4256e2:	call   0x42790b
  4256e7:	push   eax
  4256e8:	mov    eax,DWORD PTR [ebp+0x8]
  4256eb:	mov    eax,DWORD PTR [eax+0x19c]
  4256f1:	push   DWORD PTR [eax]
  4256f3:	call   DWORD PTR [edi+0x8]
  4256f6:	mov    eax,DWORD PTR [ebp+0x8]
  4256f9:	mov    edi,DWORD PTR [eax+0x1d8]
  4256ff:	mov    esi,DWORD PTR [ebp+0x8]
  425702:	xor    eax,eax
  425704:	lea    edx,[ebp-0xa8]
  42570a:	call   0x42790b
  42570f:	push   eax
  425710:	mov    eax,DWORD PTR [ebp+0x8]
  425713:	mov    eax,DWORD PTR [eax+0x19c]
  425719:	push   DWORD PTR [eax]
  42571b:	call   DWORD PTR [edi+0x8]
  42571e:	and    DWORD PTR [ebp-0x8],0x0
  425722:	mov    DWORD PTR [ebp-0x44],eax
  425725:	mov    eax,DWORD PTR [ebp-0x8]
  425728:	and    eax,0x7
  42572b:	add    eax,0x31
  42572e:	push   eax
  42572f:	call   DWORD PTR [ebp-0x24]
  425732:	test   eax,eax
  425734:	je     0x425778
  425736:	mov    eax,DWORD PTR [ebp-0x8]
  425739:	push   0x19
  42573b:	xor    edx,edx
  42573d:	pop    ecx
  42573e:	div    ecx
  425740:	add    dl,0x41
  425743:	movzx  eax,dl
  425746:	push   eax
  425747:	call   DWORD PTR [ebp-0x44]
  42574a:	test   eax,eax
  42574c:	jne    0x425778
  42574e:	mov    eax,DWORD PTR [ebp+0x8]
  425751:	mov    edi,DWORD PTR [eax+0x1d8]
  425757:	mov    esi,DWORD PTR [ebp+0x8]
  42575a:	xor    eax,eax
  42575c:	lea    edx,[ebp-0x68]
  42575f:	call   0x42790b
  425764:	push   eax
  425765:	mov    eax,DWORD PTR [ebp+0x8]
  425768:	mov    eax,DWORD PTR [eax+0x198]
  42576e:	push   DWORD PTR [eax]
  425770:	call   DWORD PTR [edi+0x8]
  425773:	mov    DWORD PTR [ebp-0x14],eax
  425776:	jmp    0x42577c
  425778:	and    DWORD PTR [ebp-0x14],0x0
  42577c:	inc    DWORD PTR [ebp-0x8]
  42577f:	cmp    DWORD PTR [ebp-0x8],0x10
  425783:	jb     0x425725
  425785:	mov    eax,DWORD PTR [ebp-0x18]
  425788:	mov    esi,DWORD PTR [ebp+0x8]
  42578b:	xor    eax,ebx
  42578d:	mov    edi,0x3272ec
  425792:	add    eax,edi
  425794:	lea    edx,[ebp-0x10c]
  42579a:	call   0x42790b
  42579f:	push   eax
  4257a0:	mov    eax,DWORD PTR [ebp-0x10]
  4257a3:	mov    esi,DWORD PTR [ebp+0x8]
  4257a6:	xor    eax,ebx
  4257a8:	add    eax,edi
  4257aa:	lea    edx,[ebp-0x12c]
  4257b0:	call   0x42790b
  4257b5:	push   eax
  4257b6:	call   DWORD PTR [ebp-0x14]
  4257b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4257bc:	xor    ecx,ebx
  4257be:	add    ecx,edi
  4257c0:	cmp    ecx,eax
  4257c2:	jne    0x4257cb
  4257c4:	mov    DWORD PTR [ebp-0x20],0x1
  4257cb:	mov    eax,DWORD PTR [ebp-0x18]
  4257ce:	mov    ecx,DWORD PTR [ebp-0x1c]
  4257d1:	xor    eax,ebx
  4257d3:	lea    eax,[eax+ecx*1+0x3272ec]
  4257da:	mov    DWORD PTR [ebp-0x1c],eax
  4257dd:	mov    eax,DWORD PTR [ebp-0x20]
  4257e0:	test   eax,eax
  4257e2:	je     0x4257f6
  4257e4:	mov    eax,DWORD PTR [ebp-0x18]
  4257e7:	mov    ecx,DWORD PTR [ebp-0x34]
  4257ea:	xor    eax,ebx
  4257ec:	lea    eax,[eax+ecx*1+0x3272ec]
  4257f3:	mov    DWORD PTR [ebp-0x34],eax
  4257f6:	mov    eax,DWORD PTR [ebp-0x18]
  4257f9:	xor    eax,ebx
  4257fb:	mov    ecx,0xffcd8d14
  425800:	sub    ecx,eax
  425802:	add    ecx,DWORD PTR [ebp-0x28]
  425805:	mov    eax,DWORD PTR [ebp-0x1c]
  425808:	cmp    eax,ecx
  42580a:	jbe    0x42566f
  425810:	mov    esi,edi
  425812:	mov    eax,DWORD PTR [ebp-0x34]
  425815:	mov    ecx,DWORD PTR [ebp-0x1c]
  425818:	cmp    ecx,eax
  42581a:	jne    0x42582d
  42581c:	push   DWORD PTR [ebp+0x8]
  42581f:	lea    eax,[ebp-0x3c]
  425822:	push   eax
  425823:	call   0x42837b
  425828:	mov    DWORD PTR [ebp-0x2c],eax
  42582b:	jmp    0x425839
  42582d:	mov    eax,DWORD PTR [ebp-0x2c]
  425830:	mov    ecx,DWORD PTR [ebp-0x18]
  425833:	xor    ecx,ebx
  425835:	add    ecx,esi
  425837:	xor    DWORD PTR [eax],ecx
  425839:	mov    eax,DWORD PTR [ebp-0x10]
  42583c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42583f:	xor    eax,ebx
  425841:	add    eax,esi
  425843:	cmp    eax,ecx
  425845:	je     0x425fbf
  42584b:	mov    eax,DWORD PTR [ebp-0x10]
  42584e:	mov    ecx,DWORD PTR [ebp-0x3c]
  425851:	xor    eax,ebx
  425853:	add    eax,esi
  425855:	cmp    eax,ecx
  425857:	je     0x425fbf
  42585d:	mov    eax,DWORD PTR [ebp-0x10]
  425860:	xor    eax,ebx
  425862:	add    eax,esi
  425864:	jmp    0x425882
  425866:	mov    edi,DWORD PTR [ebp-0x2c]
  425869:	mov    cl,al
  42586b:	and    cl,0x1f
  42586e:	or     dl,0xff
  425871:	sub    dl,cl
  425873:	add    BYTE PTR [edi+eax*1],dl
  425876:	mov    ecx,DWORD PTR [ebp-0x18]
  425879:	xor    ecx,ebx
  42587b:	lea    eax,[eax+ecx*1+0x3272ec]
  425882:	mov    ecx,DWORD PTR [ebp-0x3c]
  425885:	cmp    eax,ecx
  425887:	jb     0x425866
  425889:	mov    eax,DWORD PTR [ebp-0x3c]
  42588c:	mov    DWORD PTR [ebp-0x28],eax
  42588f:	mov    eax,DWORD PTR [ebp-0x2c]
  425892:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  425899:	mov    DWORD PTR [ebp-0xd4],eax
  42589f:	mov    edi,0xf89c85b1
  4258a4:	mov    DWORD PTR [ebp-0x30],edi
  4258a7:	mov    eax,DWORD PTR [ebp-0x34]
  4258aa:	xor    eax,ebx
  4258ac:	add    eax,esi
  4258ae:	mov    DWORD PTR [ebp-0xc],eax
  4258b1:	mov    eax,DWORD PTR [ebp-0x34]
  4258b4:	xor    eax,ebx
  4258b6:	add    eax,esi
  4258b8:	mov    DWORD PTR [ebp-0x8],eax
  4258bb:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  4258c2:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  4258c9:	mov    eax,DWORD PTR [ebp-0x34]
  4258cc:	mov    ecx,DWORD PTR [ebp-0x28]
  4258cf:	xor    eax,ebx
  4258d1:	add    eax,esi
  4258d3:	cmp    ecx,eax
  4258d5:	je     0x425ad4
  4258db:	jmp    0x425ab0
  4258e0:	mov    ecx,DWORD PTR [ebp-0xc]
  4258e3:	mov    eax,DWORD PTR [ebp-0x28]
  4258e6:	sub    eax,ecx
  4258e8:	mov    ecx,DWORD PTR [ebp-0x44]
  4258eb:	xor    ecx,ebx
  4258ed:	add    ecx,esi
  4258ef:	xor    edx,edx
  4258f1:	div    ecx
  4258f3:	mov    DWORD PTR [ebp-0x8],eax
  4258f6:	mov    eax,DWORD PTR [ebp-0x4c]
  4258f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4258fc:	xor    eax,ebx
  4258fe:	add    eax,esi
  425900:	cmp    ecx,eax
  425902:	jbe    0x42590e
  425904:	mov    eax,DWORD PTR [ebp-0x4c]
  425907:	xor    eax,ebx
  425909:	add    eax,esi
  42590b:	mov    DWORD PTR [ebp-0x8],eax
  42590e:	mov    eax,DWORD PTR [ebp-0x44]
  425911:	mov    ecx,DWORD PTR [ebp-0x8]
  425914:	xor    eax,ebx
  425916:	add    eax,esi
  425918:	imul   eax,ecx
  42591b:	mov    DWORD PTR [ebp-0x8],eax
  42591e:	mov    eax,DWORD PTR [ebp-0x34]
  425921:	mov    ecx,DWORD PTR [ebp-0x8]
  425924:	xor    eax,ebx
  425926:	add    eax,esi
  425928:	cmp    ecx,eax
  42592a:	je     0x425a9e
  425930:	mov    eax,DWORD PTR [ebp-0x8]
  425933:	mov    DWORD PTR [ebp-0x14],eax
  425936:	mov    eax,DWORD PTR [ebp-0xc]
  425939:	add    eax,DWORD PTR [ebp-0xd4]
  42593f:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  425946:	mov    DWORD PTR [ebp-0x20],edi
  425949:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  425953:	mov    DWORD PTR [ebp-0x8],eax
  425956:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42595d:	mov    DWORD PTR [ebp-0x1c],edi
  425960:	mov    eax,DWORD PTR [ebp-0x24]
  425963:	xor    eax,ebx
  425965:	add    eax,esi
  425967:	jmp    0x425a5d
  42596c:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  425976:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  425980:	mov    eax,DWORD PTR [ebp-0x1c]
  425983:	mov    ecx,DWORD PTR [ebp-0x48]
  425986:	xor    eax,ebx
  425988:	add    eax,esi
  42598a:	imul   eax,ecx
  42598d:	mov    ecx,DWORD PTR [ebp-0x8]
  425990:	mov    al,BYTE PTR [eax+ecx*1]
  425993:	mov    BYTE PTR [ebp-0x2],al
  425996:	mov    eax,DWORD PTR [ebp-0x1c]
  425999:	mov    ecx,DWORD PTR [ebp-0x48]
  42599c:	xor    eax,ebx
  42599e:	add    eax,esi
  4259a0:	imul   eax,ecx
  4259a3:	mov    ecx,DWORD PTR [ebp-0xe8]
  4259a9:	xor    ecx,ebx
  4259ab:	add    eax,ecx
  4259ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4259b0:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  4259b8:	mov    ecx,DWORD PTR [ebp-0xe0]
  4259be:	xor    ecx,ebx
  4259c0:	lea    eax,[ecx+eax*1+0x3272ec]
  4259c7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4259cb:	xor    ecx,eax
  4259cd:	mov    BYTE PTR [ebp-0x2],cl
  4259d0:	mov    al,BYTE PTR [ebp-0x2]
  4259d3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4259d6:	mov    edx,DWORD PTR [ebp-0x48]
  4259d9:	xor    ecx,ebx
  4259db:	add    ecx,esi
  4259dd:	imul   ecx,edx
  4259e0:	mov    edx,DWORD PTR [ebp-0x8]
  4259e3:	mov    BYTE PTR [ecx+edx*1],al
  4259e6:	mov    eax,DWORD PTR [ebp-0x1c]
  4259e9:	mov    ecx,DWORD PTR [ebp-0x48]
  4259ec:	xor    eax,ebx
  4259ee:	add    eax,esi
  4259f0:	imul   eax,ecx
  4259f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4259f6:	mov    al,BYTE PTR [eax+ecx*1]
  4259f9:	mov    BYTE PTR [ebp-0x2],al
  4259fc:	mov    eax,DWORD PTR [ebp-0x1c]
  4259ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425a02:	xor    eax,ebx
  425a04:	add    eax,esi
  425a06:	imul   eax,ecx
  425a09:	mov    ecx,DWORD PTR [ebp-0x20]
  425a0c:	xor    ecx,ebx
  425a0e:	add    eax,ecx
  425a10:	mov    ecx,DWORD PTR [ebp-0x8]
  425a13:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425a1b:	mov    ecx,DWORD PTR [ebp-0xc4]
  425a21:	xor    ecx,ebx
  425a23:	lea    eax,[ecx+eax*1+0x3272ec]
  425a2a:	movzx  ecx,BYTE PTR [ebp-0x2]
  425a2e:	xor    ecx,eax
  425a30:	mov    BYTE PTR [ebp-0x2],cl
  425a33:	mov    al,BYTE PTR [ebp-0x2]
  425a36:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a39:	mov    edx,DWORD PTR [ebp-0x48]
  425a3c:	xor    ecx,ebx
  425a3e:	add    ecx,esi
  425a40:	imul   ecx,edx
  425a43:	mov    edx,DWORD PTR [ebp-0x8]
  425a46:	mov    BYTE PTR [ecx+edx*1],al
  425a49:	mov    eax,DWORD PTR [ebp-0x38]
  425a4c:	mov    ecx,DWORD PTR [ebp-0x20]
  425a4f:	xor    eax,ebx
  425a51:	xor    ecx,ebx
  425a53:	add    eax,esi
  425a55:	add    ecx,esi
  425a57:	imul   eax,ecx
  425a5a:	add    eax,DWORD PTR [ebp-0x48]
  425a5d:	mov    DWORD PTR [ebp-0x48],eax
  425a60:	mov    eax,DWORD PTR [ebp-0x48]
  425a63:	mov    ecx,DWORD PTR [ebp-0x14]
  425a66:	cmp    ecx,eax
  425a68:	jb     0x42596c
  425a6e:	mov    eax,DWORD PTR [ebp-0x20]
  425a71:	mov    ecx,DWORD PTR [ebp-0x14]
  425a74:	xor    eax,ebx
  425a76:	add    eax,esi
  425a78:	imul   eax,ecx
  425a7b:	mov    ecx,DWORD PTR [ebp-0x24]
  425a7e:	xor    ecx,ebx
  425a80:	add    ecx,esi
  425a82:	or     eax,ecx
  425a84:	mov    ecx,DWORD PTR [ebp-0x30]
  425a87:	xor    ecx,ebx
  425a89:	add    eax,ecx
  425a8b:	mov    ecx,DWORD PTR [ebp-0x30]
  425a8e:	xor    ecx,ebx
  425a90:	add    eax,ecx
  425a92:	mov    ecx,DWORD PTR [ebp-0xc]
  425a95:	lea    eax,[eax+ecx*1+0x64e5d8]
  425a9c:	jmp    0x425aad
  425a9e:	mov    eax,DWORD PTR [ebp-0x30]
  425aa1:	mov    ecx,DWORD PTR [ebp-0xc]
  425aa4:	xor    eax,ebx
  425aa6:	lea    eax,[eax+ecx*1+0x3272ec]
  425aad:	mov    DWORD PTR [ebp-0xc],eax
  425ab0:	mov    eax,DWORD PTR [ebp-0x30]
  425ab3:	xor    eax,ebx
  425ab5:	mov    ecx,0xffcd8d14
  425aba:	sub    ecx,eax
  425abc:	add    ecx,DWORD PTR [ebp-0x28]
  425abf:	mov    eax,DWORD PTR [ebp-0x30]
  425ac2:	mov    edx,DWORD PTR [ebp-0xc]
  425ac5:	xor    eax,ebx
  425ac7:	add    eax,esi
  425ac9:	imul   eax,edx
  425acc:	cmp    eax,ecx
  425ace:	jbe    0x4258e0
  425ad4:	mov    eax,DWORD PTR [ebp-0x10]
  425ad7:	mov    ecx,DWORD PTR [ebp-0x3c]
  425ada:	mov    eax,DWORD PTR [ebp+0x8]
  425add:	mov    edx,DWORD PTR [ebp-0x54]
  425ae0:	mov    eax,DWORD PTR [eax+0x1d8]
  425ae6:	xor    edx,ebx
  425ae8:	add    edx,esi
  425aea:	push   edx
  425aeb:	mov    edx,DWORD PTR [ebp-0x40]
  425aee:	xor    edx,ebx
  425af0:	add    edx,esi
  425af2:	push   edx
  425af3:	push   ecx
  425af4:	mov    DWORD PTR [ebp-0x38],ecx
  425af7:	mov    ecx,DWORD PTR [ebp-0x10]
  425afa:	xor    ecx,ebx
  425afc:	add    ecx,esi
  425afe:	push   ecx
  425aff:	call   DWORD PTR [eax+0x14]
  425b02:	mov    edi,eax
  425b04:	mov    eax,DWORD PTR [ebp-0x10]
  425b07:	xor    eax,ebx
  425b09:	add    eax,esi
  425b0b:	cmp    eax,edi
  425b0d:	je     0x425b68
  425b0f:	mov    eax,DWORD PTR [ebp-0x10]
  425b12:	jmp    0x425b35
  425b14:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b17:	xor    eax,ebx
  425b19:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  425b20:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  425b27:	mov    ecx,DWORD PTR [ebp-0x18]
  425b2a:	xor    ecx,ebx
  425b2c:	lea    eax,[ecx+eax*1+0x3272ec]
  425b33:	xor    eax,ebx
  425b35:	mov    ecx,DWORD PTR [ebp-0x3c]
  425b38:	sub    ecx,esi
  425b3a:	xor    ecx,ebx
  425b3c:	cmp    eax,ecx
  425b3e:	jne    0x425b14
  425b40:	mov    eax,DWORD PTR [ebp+0x8]
  425b43:	mov    ecx,DWORD PTR [ebp-0x50]
  425b46:	mov    eax,DWORD PTR [eax+0x1d8]
  425b4c:	xor    ecx,ebx
  425b4e:	add    ecx,esi
  425b50:	push   ecx
  425b51:	mov    ecx,DWORD PTR [ebp-0x10]
  425b54:	xor    ecx,ebx
  425b56:	add    ecx,esi
  425b58:	push   ecx
  425b59:	push   DWORD PTR [ebp-0x2c]
  425b5c:	call   DWORD PTR [eax+0x18]
  425b5f:	mov    eax,DWORD PTR [ebp-0x38]
  425b62:	mov    DWORD PTR [ebp-0x2c],edi
  425b65:	mov    DWORD PTR [ebp-0x3c],eax
  425b68:	mov    eax,DWORD PTR [ebp-0x2c]
  425b6b:	mov    DWORD PTR [ebp-0x14],eax
  425b6e:	mov    eax,DWORD PTR [ebp-0x18]
  425b71:	mov    ecx,DWORD PTR [ebp-0x10]
  425b74:	xor    eax,ebx
  425b76:	add    eax,esi
  425b78:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  425b7f:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425b86:	jmp    0x425bb9
  425b88:	mov    edx,DWORD PTR [ebp-0x14]
  425b8b:	mov    edi,ecx
  425b8d:	xor    edi,ebx
  425b8f:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  425b96:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  425b9e:	xor    cl,0x79
  425ba1:	sub    cl,0x3
  425ba4:	movzx  ecx,cl
  425ba7:	cmp    edx,ecx
  425ba9:	jne    0x425bc3
  425bab:	mov    ecx,DWORD PTR [ebp-0x18]
  425bae:	xor    ecx,ebx
  425bb0:	lea    ecx,[ecx+edi*1+0x3272ec]
  425bb7:	xor    ecx,ebx
  425bb9:	cmp    ecx,0xf89c85b8
  425bbf:	jne    0x425b88
  425bc1:	jmp    0x425bca
  425bc3:	mov    eax,DWORD PTR [ebp-0x10]
  425bc6:	xor    eax,ebx
  425bc8:	add    eax,esi
  425bca:	mov    ecx,DWORD PTR [ebp-0x10]
  425bcd:	xor    ecx,ebx
  425bcf:	add    ecx,esi
  425bd1:	cmp    ecx,eax
  425bd3:	je     0x425d49
  425bd9:	mov    eax,DWORD PTR [ebp-0x14]
  425bdc:	mov    eax,DWORD PTR [eax+0x8]
  425bdf:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  425be6:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  425bed:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  425bf4:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  425bfb:	mov    DWORD PTR [ebp-0x20],eax
  425bfe:	mov    eax,DWORD PTR [ebp+0x8]
  425c01:	mov    ecx,DWORD PTR [ebp-0x24]
  425c04:	xor    ecx,ebx
  425c06:	add    ecx,esi
  425c08:	push   ecx
  425c09:	mov    ecx,DWORD PTR [ebp-0x44]
  425c0c:	mov    eax,DWORD PTR [eax+0x1d8]
  425c12:	xor    ecx,ebx
  425c14:	add    ecx,esi
  425c16:	push   ecx
  425c17:	mov    ecx,DWORD PTR [ebp-0x40]
  425c1a:	xor    ecx,ebx
  425c1c:	add    ecx,esi
  425c1e:	push   ecx
  425c1f:	mov    ecx,DWORD PTR [ebp-0xc]
  425c22:	xor    ecx,ebx
  425c24:	add    ecx,esi
  425c26:	push   ecx
  425c27:	call   DWORD PTR [eax+0x14]
  425c2a:	mov    edi,eax
  425c2c:	mov    eax,DWORD PTR [ebp+0x8]
  425c2f:	mov    ecx,DWORD PTR [ebp-0x24]
  425c32:	mov    eax,DWORD PTR [eax+0x1d8]
  425c38:	xor    ecx,ebx
  425c3a:	add    ecx,esi
  425c3c:	push   ecx
  425c3d:	mov    ecx,DWORD PTR [ebp-0x44]
  425c40:	xor    ecx,ebx
  425c42:	add    ecx,esi
  425c44:	push   ecx
  425c45:	mov    ecx,DWORD PTR [ebp-0xc]
  425c48:	push   DWORD PTR [ebp-0x20]
  425c4b:	xor    ecx,ebx
  425c4d:	add    ecx,esi
  425c4f:	push   ecx
  425c50:	call   DWORD PTR [eax+0x14]
  425c53:	mov    ecx,DWORD PTR [ebp-0xc]
  425c56:	xor    ecx,ebx
  425c58:	add    ecx,esi
  425c5a:	mov    DWORD PTR [ebp-0x24],eax
  425c5d:	cmp    ecx,edi
  425c5f:	je     0x425fec
  425c65:	mov    ecx,DWORD PTR [ebp-0xc]
  425c68:	xor    ecx,ebx
  425c6a:	add    ecx,esi
  425c6c:	cmp    ecx,eax
  425c6e:	je     0x425fec
  425c74:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  425c7b:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425c82:	mov    ecx,DWORD PTR [ebp-0x40]
  425c85:	xor    cl,0xa4
  425c88:	sub    cl,0x14
  425c8b:	mov    BYTE PTR [edi],cl
  425c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  425c90:	xor    cl,0xa4
  425c93:	sub    cl,0x14
  425c96:	mov    BYTE PTR [edi+0x1],cl
  425c99:	mov    ecx,DWORD PTR [ebp-0x54]
  425c9c:	xor    cl,0xa4
  425c9f:	sub    cl,0x14
  425ca2:	mov    BYTE PTR [edi+0x2],cl
  425ca5:	and    DWORD PTR [ebp-0xc8],0x0
  425cac:	and    DWORD PTR [ebp-0xdc],0x0
  425cb3:	lea    ecx,[ebp-0xdc]
  425cb9:	push   ecx
  425cba:	push   DWORD PTR [ebp-0x20]
  425cbd:	push   eax
  425cbe:	lea    eax,[ebp-0xc8]
  425cc4:	push   eax
  425cc5:	mov    eax,DWORD PTR [ebp-0x14]
  425cc8:	push   DWORD PTR [eax+0xc]
  425ccb:	mov    eax,DWORD PTR [ebp-0x2c]
  425cce:	add    eax,0x10
  425cd1:	push   eax
  425cd2:	push   edi
  425cd3:	call   0x424f77
  425cd8:	mov    DWORD PTR [ebp-0x40],eax
  425cdb:	mov    eax,DWORD PTR [ebp+0x8]
  425cde:	mov    ecx,DWORD PTR [ebp-0x50]
  425ce1:	mov    eax,DWORD PTR [eax+0x1d8]
  425ce7:	xor    ecx,ebx
  425ce9:	add    ecx,esi
  425ceb:	push   ecx
  425cec:	mov    ecx,DWORD PTR [ebp-0xc]
  425cef:	xor    ecx,ebx
  425cf1:	add    ecx,esi
  425cf3:	push   ecx
  425cf4:	push   edi
  425cf5:	call   DWORD PTR [eax+0x18]
  425cf8:	mov    eax,DWORD PTR [ebp-0x40]
  425cfb:	add    eax,0xffcd8d14
  425d00:	xor    eax,ebx
  425d02:	cmp    eax,0xf89c85b0
  425d07:	mov    eax,DWORD PTR [ebp+0x8]
  425d0a:	mov    eax,DWORD PTR [eax+0x1d8]
  425d10:	mov    ecx,DWORD PTR [ebp-0x50]
  425d13:	jne    0x425d36
  425d15:	xor    ecx,ebx
  425d17:	add    ecx,esi
  425d19:	push   ecx
  425d1a:	mov    ecx,DWORD PTR [ebp-0xc]
  425d1d:	xor    ecx,ebx
  425d1f:	add    ecx,esi
  425d21:	push   ecx
  425d22:	push   DWORD PTR [ebp-0x2c]
  425d25:	call   DWORD PTR [eax+0x18]
  425d28:	mov    eax,DWORD PTR [ebp-0x24]
  425d2b:	mov    DWORD PTR [ebp-0x2c],eax
  425d2e:	mov    eax,DWORD PTR [ebp-0x20]
  425d31:	mov    DWORD PTR [ebp-0x3c],eax
  425d34:	jmp    0x425d49
  425d36:	xor    ecx,ebx
  425d38:	add    ecx,esi
  425d3a:	push   ecx
  425d3b:	mov    ecx,DWORD PTR [ebp-0xc]
  425d3e:	xor    ecx,ebx
  425d40:	add    ecx,esi
  425d42:	push   ecx
  425d43:	push   DWORD PTR [ebp-0x24]
  425d46:	call   DWORD PTR [eax+0x18]
  425d49:	mov    eax,DWORD PTR [ebp-0x3c]
  425d4c:	mov    DWORD PTR [ebp-0x34],eax
  425d4f:	mov    eax,DWORD PTR [ebp-0x2c]
  425d52:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425d59:	mov    DWORD PTR [ebp-0x40],eax
  425d5c:	mov    edi,0xf89c85b1
  425d61:	mov    DWORD PTR [ebp-0x30],edi
  425d64:	mov    eax,DWORD PTR [ebp-0x28]
  425d67:	xor    eax,ebx
  425d69:	add    eax,esi
  425d6b:	mov    DWORD PTR [ebp-0xc],eax
  425d6e:	mov    eax,DWORD PTR [ebp-0x28]
  425d71:	xor    eax,ebx
  425d73:	add    eax,esi
  425d75:	mov    DWORD PTR [ebp-0x14],eax
  425d78:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425d7f:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425d86:	mov    eax,DWORD PTR [ebp-0x28]
  425d89:	mov    ecx,DWORD PTR [ebp-0x34]
  425d8c:	xor    eax,ebx
  425d8e:	add    eax,esi
  425d90:	cmp    ecx,eax
  425d92:	je     0x425f88
  425d98:	jmp    0x425f64
  425d9d:	mov    ecx,DWORD PTR [ebp-0xc]
  425da0:	mov    eax,DWORD PTR [ebp-0x34]
  425da3:	sub    eax,ecx
  425da5:	mov    ecx,DWORD PTR [ebp-0x44]
  425da8:	xor    ecx,ebx
  425daa:	add    ecx,esi
  425dac:	xor    edx,edx
  425dae:	div    ecx
  425db0:	mov    DWORD PTR [ebp-0x14],eax
  425db3:	mov    eax,DWORD PTR [ebp-0x24]
  425db6:	mov    ecx,DWORD PTR [ebp-0x14]
  425db9:	xor    eax,ebx
  425dbb:	add    eax,esi
  425dbd:	cmp    ecx,eax
  425dbf:	jbe    0x425dcb
  425dc1:	mov    eax,DWORD PTR [ebp-0x24]
  425dc4:	xor    eax,ebx
  425dc6:	add    eax,esi
  425dc8:	mov    DWORD PTR [ebp-0x14],eax
  425dcb:	mov    eax,DWORD PTR [ebp-0x44]
  425dce:	mov    ecx,DWORD PTR [ebp-0x14]
  425dd1:	xor    eax,ebx
  425dd3:	add    eax,esi
  425dd5:	imul   eax,ecx
  425dd8:	mov    DWORD PTR [ebp-0x14],eax
  425ddb:	mov    eax,DWORD PTR [ebp-0x28]
  425dde:	mov    ecx,DWORD PTR [ebp-0x14]
  425de1:	xor    eax,ebx
  425de3:	add    eax,esi
  425de5:	cmp    ecx,eax
  425de7:	je     0x425f52
  425ded:	mov    eax,DWORD PTR [ebp-0x14]
  425df0:	mov    DWORD PTR [ebp-0x20],eax
  425df3:	mov    eax,DWORD PTR [ebp-0xc]
  425df6:	add    eax,DWORD PTR [ebp-0x40]
  425df9:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425e00:	mov    DWORD PTR [ebp-0x14],edi
  425e03:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425e0a:	mov    DWORD PTR [ebp-0x1c],eax
  425e0d:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425e14:	mov    DWORD PTR [ebp-0x8],edi
  425e17:	mov    eax,DWORD PTR [ebp-0x4c]
  425e1a:	xor    eax,ebx
  425e1c:	add    eax,esi
  425e1e:	jmp    0x425f11
  425e23:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  425e2d:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425e37:	mov    eax,DWORD PTR [ebp-0x8]
  425e3a:	mov    ecx,DWORD PTR [ebp-0x18]
  425e3d:	xor    eax,ebx
  425e3f:	add    eax,esi
  425e41:	imul   eax,ecx
  425e44:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e47:	mov    al,BYTE PTR [eax+ecx*1]
  425e4a:	mov    BYTE PTR [ebp-0x1],al
  425e4d:	mov    eax,DWORD PTR [ebp-0x8]
  425e50:	mov    ecx,DWORD PTR [ebp-0x18]
  425e53:	xor    eax,ebx
  425e55:	add    eax,esi
  425e57:	imul   eax,ecx
  425e5a:	mov    ecx,DWORD PTR [ebp-0x54]
  425e5d:	xor    ecx,ebx
  425e5f:	add    eax,ecx
  425e61:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e64:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425e6c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425e72:	xor    ecx,ebx
  425e74:	lea    eax,[ecx+eax*1+0x3272ec]
  425e7b:	movzx  ecx,BYTE PTR [ebp-0x1]
  425e7f:	xor    ecx,eax
  425e81:	mov    BYTE PTR [ebp-0x1],cl
  425e84:	mov    al,BYTE PTR [ebp-0x1]
  425e87:	mov    ecx,DWORD PTR [ebp-0x8]
  425e8a:	mov    edx,DWORD PTR [ebp-0x18]
  425e8d:	xor    ecx,ebx
  425e8f:	add    ecx,esi
  425e91:	imul   ecx,edx
  425e94:	mov    edx,DWORD PTR [ebp-0x1c]
  425e97:	mov    BYTE PTR [ecx+edx*1],al
  425e9a:	mov    eax,DWORD PTR [ebp-0x8]
  425e9d:	mov    ecx,DWORD PTR [ebp-0x18]
  425ea0:	xor    eax,ebx
  425ea2:	add    eax,esi
  425ea4:	imul   eax,ecx
  425ea7:	mov    ecx,DWORD PTR [ebp-0x1c]
  425eaa:	mov    al,BYTE PTR [eax+ecx*1]
  425ead:	mov    BYTE PTR [ebp-0x1],al
  425eb0:	mov    eax,DWORD PTR [ebp-0x8]
  425eb3:	mov    ecx,DWORD PTR [ebp-0x18]
  425eb6:	xor    eax,ebx
  425eb8:	add    eax,esi
  425eba:	imul   eax,ecx
  425ebd:	mov    ecx,DWORD PTR [ebp-0x14]
  425ec0:	xor    ecx,ebx
  425ec2:	add    eax,ecx
  425ec4:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ec7:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425ecf:	mov    ecx,DWORD PTR [ebp-0xd0]
  425ed5:	xor    ecx,ebx
  425ed7:	lea    eax,[ecx+eax*1+0x3272ec]
  425ede:	movzx  ecx,BYTE PTR [ebp-0x1]
  425ee2:	xor    ecx,eax
  425ee4:	mov    BYTE PTR [ebp-0x1],cl
  425ee7:	mov    al,BYTE PTR [ebp-0x1]
  425eea:	mov    ecx,DWORD PTR [ebp-0x8]
  425eed:	mov    edx,DWORD PTR [ebp-0x18]
  425ef0:	xor    ecx,ebx
  425ef2:	add    ecx,esi
  425ef4:	imul   ecx,edx
  425ef7:	mov    edx,DWORD PTR [ebp-0x1c]
  425efa:	mov    BYTE PTR [ecx+edx*1],al
  425efd:	mov    eax,DWORD PTR [ebp-0x38]
  425f00:	mov    ecx,DWORD PTR [ebp-0x14]
  425f03:	xor    eax,ebx
  425f05:	xor    ecx,ebx
  425f07:	add    eax,esi
  425f09:	add    ecx,esi
  425f0b:	imul   eax,ecx
  425f0e:	add    eax,DWORD PTR [ebp-0x18]
  425f11:	mov    DWORD PTR [ebp-0x18],eax
  425f14:	mov    eax,DWORD PTR [ebp-0x18]
  425f17:	mov    ecx,DWORD PTR [ebp-0x20]
  425f1a:	cmp    ecx,eax
  425f1c:	jb     0x425e23
  425f22:	mov    eax,DWORD PTR [ebp-0x14]
  425f25:	mov    ecx,DWORD PTR [ebp-0x20]
  425f28:	xor    eax,ebx
  425f2a:	add    eax,esi
  425f2c:	imul   eax,ecx
  425f2f:	mov    ecx,DWORD PTR [ebp-0x4c]
  425f32:	xor    ecx,ebx
  425f34:	add    ecx,esi
  425f36:	or     eax,ecx
  425f38:	mov    ecx,DWORD PTR [ebp-0x30]
  425f3b:	xor    ecx,ebx
  425f3d:	add    eax,ecx
  425f3f:	mov    ecx,DWORD PTR [ebp-0x30]
  425f42:	xor    ecx,ebx
  425f44:	add    eax,ecx
  425f46:	mov    ecx,DWORD PTR [ebp-0xc]
  425f49:	lea    eax,[eax+ecx*1+0x64e5d8]
  425f50:	jmp    0x425f61
  425f52:	mov    eax,DWORD PTR [ebp-0x30]
  425f55:	mov    ecx,DWORD PTR [ebp-0xc]
  425f58:	xor    eax,ebx
  425f5a:	lea    eax,[eax+ecx*1+0x3272ec]
  425f61:	mov    DWORD PTR [ebp-0xc],eax
  425f64:	mov    eax,DWORD PTR [ebp-0x30]
  425f67:	xor    eax,ebx
  425f69:	mov    ecx,0xffcd8d14
  425f6e:	sub    ecx,eax
  425f70:	add    ecx,DWORD PTR [ebp-0x34]
  425f73:	mov    eax,DWORD PTR [ebp-0x30]
  425f76:	mov    edx,DWORD PTR [ebp-0xc]
  425f79:	xor    eax,ebx
  425f7b:	add    eax,esi
  425f7d:	imul   eax,edx
  425f80:	cmp    eax,ecx
  425f82:	jbe    0x425d9d
  425f88:	push   DWORD PTR [ebp+0x8]
  425f8b:	mov    eax,DWORD PTR [ebp+0x8]
  425f8e:	push   DWORD PTR [eax+0x1cc]
  425f94:	lea    eax,[ebp-0xd8]
  425f9a:	push   eax
  425f9b:	mov    eax,DWORD PTR [ebp+0x8]
  425f9e:	mov    eax,DWORD PTR [eax+0x1c4]
  425fa4:	push   DWORD PTR [eax]
  425fa6:	mov    eax,DWORD PTR [ebp+0x8]
  425fa9:	mov    eax,DWORD PTR [eax+0x1c0]
  425faf:	push   DWORD PTR [eax]
  425fb1:	push   DWORD PTR [ebp-0x3c]
  425fb4:	push   DWORD PTR [ebp-0x2c]
  425fb7:	call   0x426a4e
  425fbc:	mov    DWORD PTR [ebp-0x40],eax
  425fbf:	mov    eax,DWORD PTR [ebp-0x10]
  425fc2:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fc5:	xor    eax,ebx
  425fc7:	add    eax,esi
  425fc9:	cmp    eax,ecx
  425fcb:	je     0x425fec
  425fcd:	mov    eax,DWORD PTR [ebp+0x8]
  425fd0:	mov    ecx,DWORD PTR [ebp-0x50]
  425fd3:	mov    eax,DWORD PTR [eax+0x1d8]
  425fd9:	xor    ecx,ebx
  425fdb:	add    ecx,esi
  425fdd:	push   ecx
  425fde:	mov    ecx,DWORD PTR [ebp-0x10]
  425fe1:	xor    ecx,ebx
  425fe3:	add    ecx,esi
  425fe5:	push   ecx
  425fe6:	push   DWORD PTR [ebp-0x2c]
  425fe9:	call   DWORD PTR [eax+0x18]
  425fec:	pop    edi
  425fed:	pop    esi
  425fee:	pop    ebx
  425fef:	leave  
  425ff0:	ret    0x4
  425ff3:	push   ebp
  425ff4:	mov    ebp,esp
  425ff6:	push   ecx
  425ff7:	push   ecx
  425ff8:	lea    eax,[ebp-0x8]
  425ffb:	mov    DWORD PTR [ebp-0x4],eax
  425ffe:	push   esi
  425fff:	mov    esi,DWORD PTR [ebp-0x4]
  426002:	mov    eax,0xf881ba2e
  426007:	mov    DWORD PTR [esi],eax
  426009:	mov    esi,DWORD PTR [ebp-0x8]
  42600c:	cmp    esi,eax
  42600e:	pop    esi
  42600f:	jne    0x426019
  426011:	mov    BYTE PTR [ecx+0xa],0x7a
  426015:	mov    BYTE PTR [edx+0x8],0x2f
  426019:	mov    BYTE PTR [edx+0xa],0x7a
  42601d:	mov    BYTE PTR [ecx+0x2],0x8
  426021:	leave  
  426022:	ret    
  426023:	push   ebp
  426024:	mov    ebp,esp
  426026:	push   ecx
  426027:	push   ecx
  426028:	lea    eax,[ebp-0x8]
  42602b:	mov    DWORD PTR [ebp-0x4],eax
  42602e:	mov    edx,DWORD PTR [ebp-0x4]
  426031:	mov    eax,0xf88b0bca
  426036:	mov    DWORD PTR [edx],eax
  426038:	mov    edx,DWORD PTR [ebp-0x8]
  42603b:	cmp    edx,eax
  42603d:	jne    0x42604e
  42603f:	mov    eax,DWORD PTR [ebp+0x8]
  426042:	mov    BYTE PTR [ecx+0x9],0xe
  426046:	mov    BYTE PTR [eax+0x7],0x57
  42604a:	mov    BYTE PTR [ecx+0x6],0xf
  42604e:	mov    BYTE PTR [ecx+0x3],0x1e
  426052:	leave  
  426053:	ret    0x4
  426056:	push   ebp
  426057:	mov    ebp,esp
  426059:	push   ecx
  42605a:	push   ecx
  42605b:	lea    eax,[ebp-0x8]
  42605e:	mov    DWORD PTR [ebp-0x4],eax
  426061:	mov    edx,DWORD PTR [ebp-0x4]
  426064:	mov    eax,0x7e0da2e
  426069:	mov    DWORD PTR [edx],eax
  42606b:	mov    edx,DWORD PTR [ebp-0x8]
  42606e:	cmp    edx,eax
  426070:	jne    0x426076
  426072:	mov    BYTE PTR [ecx+0x7],0x57
  426076:	mov    eax,DWORD PTR [ebp+0x8]
  426079:	mov    BYTE PTR [ecx+0x1],0x15
  42607d:	mov    BYTE PTR [eax+0x9],0x2e
  426081:	leave  
  426082:	ret    0x4
  426085:	push   ebp
  426086:	mov    ebp,esp
  426088:	push   ecx
  426089:	push   ecx
  42608a:	lea    eax,[ebp-0x8]
  42608d:	mov    DWORD PTR [ebp-0x4],eax
  426090:	push   esi
  426091:	mov    esi,DWORD PTR [ebp-0x4]
  426094:	mov    eax,0x7060e3f
  426099:	mov    DWORD PTR [esi],eax
  42609b:	mov    esi,DWORD PTR [ebp-0x8]
  42609e:	cmp    esi,eax
  4260a0:	pop    esi
  4260a1:	jne    0x4260ad
  4260a3:	mov    BYTE PTR [edx+0x4],0xb
  4260a7:	mov    WORD PTR [ecx+0x3],0xb1e
  4260ad:	mov    BYTE PTR [edx],0x3f
  4260b0:	leave  
  4260b1:	ret    
  4260b2:	push   ebp
  4260b3:	mov    ebp,esp
  4260b5:	push   ecx
  4260b6:	push   ecx
  4260b7:	lea    eax,[ebp-0x8]
  4260ba:	mov    DWORD PTR [ebp-0x4],eax
  4260bd:	mov    edx,DWORD PTR [ebp-0x4]
  4260c0:	mov    eax,0xf8870b3e
  4260c5:	mov    DWORD PTR [edx],eax
  4260c7:	mov    edx,DWORD PTR [ebp-0x8]
  4260ca:	cmp    edx,eax
  4260cc:	jne    0x4260d9
  4260ce:	mov    eax,DWORD PTR [ebp+0x8]
  4260d1:	mov    BYTE PTR [ecx+0x8],0xf
  4260d5:	mov    BYTE PTR [eax+0x1],0x15
  4260d9:	mov    BYTE PTR [ecx+0x5],0x3
  4260dd:	leave  
  4260de:	ret    0x4
  4260e1:	push   esi
  4260e2:	mov    ecx,edi
  4260e4:	call   0x4260b2
  4260e9:	mov    edx,edi
  4260eb:	mov    ecx,esi
  4260ed:	mov    BYTE PTR [esi],0x1f
  4260f0:	call   0x426085
  4260f5:	push   esi
  4260f6:	mov    ecx,edi
  4260f8:	mov    BYTE PTR [esi+0x5],0x3
  4260fc:	call   0x426056
  426101:	push   esi
  426102:	mov    BYTE PTR [esi+0x6],0xf
  426106:	call   0x426023
  42610b:	mov    BYTE PTR [esi+0x2],0x8
  42610f:	mov    edx,esi
  426111:	jmp    0x425ff3
  426116:	push   ebp
  426117:	mov    ebp,esp
  426119:	push   ecx
  42611a:	mov    ecx,DWORD PTR [edx+0x194]
  426120:	push   esi
  426121:	mov    esi,DWORD PTR [ebp+0x8]
  426124:	mov    esi,DWORD PTR [esi]
  426126:	mov    DWORD PTR [ecx],esi
  426128:	mov    ecx,DWORD PTR [edx+0x194]
  42612e:	mov    ecx,DWORD PTR [ecx]
  426130:	mov    esi,DWORD PTR [edx+0x190]
  426136:	mov    DWORD PTR [esi],ecx
  426138:	mov    eax,DWORD PTR [edx+0x194]
  42613e:	mov    ecx,DWORD PTR [eax]
  426140:	mov    ecx,DWORD PTR [ecx+0x3c]
  426143:	add    ecx,DWORD PTR [eax]
  426145:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  42614c:	mov    eax,DWORD PTR [ebp-0x4]
  42614f:	movzx  ecx,WORD PTR [ecx+0x16]
  426153:	xor    eax,0x75108a4
  426158:	add    eax,0x3272ec
  42615d:	pop    esi
  42615e:	test   ecx,eax
  426160:	je     0x42616e
  426162:	mov    eax,DWORD PTR [edx+0x1c8]
  426168:	mov    DWORD PTR [eax],0xf89c85b1
  42616e:	leave  
  42616f:	ret    0x4
  426172:	push   ebp
  426173:	mov    ebp,esp
  426175:	sub    esp,0x70
  426178:	and    DWORD PTR [ebp-0x20],0x0
  42617c:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  426183:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  42618a:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  426191:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426198:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42619f:	mov    eax,DWORD PTR [ebp+0x20]
  4261a2:	mov    eax,DWORD PTR [eax+0x194]
  4261a8:	mov    DWORD PTR [ebp-0xc],eax
  4261ab:	mov    eax,DWORD PTR [ebp+0x20]
  4261ae:	push   ebx
  4261af:	push   esi
  4261b0:	mov    esi,DWORD PTR [eax+0x190]
  4261b6:	mov    eax,DWORD PTR [ebp+0x20]
  4261b9:	mov    eax,DWORD PTR [eax+0x18c]
  4261bf:	mov    DWORD PTR [ebp-0x8],eax
  4261c2:	mov    eax,DWORD PTR [eax]
  4261c4:	push   edi
  4261c5:	mov    DWORD PTR [ebp-0x4],esi
  4261c8:	test   eax,eax
  4261ca:	jne    0x4261d7
  4261cc:	push   DWORD PTR [ebp+0x1c]
  4261cf:	mov    edx,DWORD PTR [ebp+0x20]
  4261d2:	call   0x426116
  4261d7:	mov    eax,DWORD PTR [esi]
  4261d9:	mov    ebx,DWORD PTR [esi]
  4261db:	add    ebx,DWORD PTR [eax+0x3c]
  4261de:	mov    eax,DWORD PTR [ebp+0xc]
  4261e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4261e4:	mov    ecx,DWORD PTR [ecx]
  4261e6:	mov    esi,0x75108a4
  4261eb:	xor    eax,esi
  4261ed:	mov    edi,0x3272ec
  4261f2:	add    eax,edi
  4261f4:	cmp    eax,ecx
  4261f6:	jne    0x42642e
  4261fc:	mov    eax,DWORD PTR [ebp-0xc]
  4261ff:	mov    eax,DWORD PTR [eax]
  426201:	mov    DWORD PTR [ebp-0x10],eax
  426204:	mov    eax,DWORD PTR [ebx+0x50]
  426207:	mov    DWORD PTR [ebp-0x68],eax
  42620a:	mov    eax,DWORD PTR [ebp-0x18]
  42620d:	xor    eax,esi
  42620f:	add    eax,edi
  426211:	mov    DWORD PTR [ebp-0x64],eax
  426214:	mov    eax,DWORD PTR [ebp-0x14]
  426217:	and    DWORD PTR [ebp-0x6c],0x0
  42621b:	xor    eax,esi
  42621d:	add    eax,edi
  42621f:	mov    DWORD PTR [ebp-0x60],eax
  426222:	lea    eax,[ebp-0x70]
  426225:	push   eax
  426226:	mov    eax,DWORD PTR [ebp+0x8]
  426229:	xor    eax,esi
  42622b:	add    eax,edi
  42622d:	push   eax
  42622e:	mov    eax,DWORD PTR [ebp+0x20]
  426231:	add    eax,0xaa
  426236:	push   eax
  426237:	mov    eax,DWORD PTR [ebp+0x20]
  42623a:	mov    eax,DWORD PTR [eax+0x198]
  426240:	mov    DWORD PTR [ebp-0x70],0x4
  426247:	push   DWORD PTR [eax]
  426249:	mov    eax,DWORD PTR [ebp+0x10]
  42624c:	call   eax
  42624e:	mov    ecx,DWORD PTR [ebp-0xc]
  426251:	mov    ecx,DWORD PTR [ecx]
  426253:	mov    edx,DWORD PTR [ebp-0x8]
  426256:	mov    DWORD PTR [ebp-0x6c],eax
  426259:	mov    DWORD PTR [ebp+0x1c],eax
  42625c:	mov    DWORD PTR [edx],ecx
  42625e:	mov    ecx,DWORD PTR [ebp-0x4]
  426261:	mov    DWORD PTR [ecx],eax
  426263:	mov    eax,DWORD PTR [ebx+0x50]
  426266:	mov    DWORD PTR [ebp-0x68],eax
  426269:	mov    eax,DWORD PTR [ebp-0x1c]
  42626c:	xor    eax,esi
  42626e:	add    eax,edi
  426270:	mov    DWORD PTR [ebp-0x64],eax
  426273:	lea    eax,[ebp-0x20]
  426276:	mov    DWORD PTR [ebp-0x60],eax
  426279:	lea    eax,[ebp-0x70]
  42627c:	push   eax
  42627d:	mov    eax,DWORD PTR [ebp+0x8]
  426280:	xor    eax,esi
  426282:	add    eax,edi
  426284:	push   eax
  426285:	mov    eax,DWORD PTR [ebp+0x20]
  426288:	add    eax,0xee
  42628d:	push   eax
  42628e:	mov    eax,DWORD PTR [ebp+0x20]
  426291:	mov    eax,DWORD PTR [eax+0x198]
  426297:	mov    DWORD PTR [ebp-0x70],0x4
  42629e:	push   DWORD PTR [eax]
  4262a0:	mov    eax,DWORD PTR [ebp+0x10]
  4262a3:	call   eax
  4262a5:	test   eax,eax
  4262a7:	je     0x4262cc
  4262a9:	and    DWORD PTR [ebp+0xc],0x0
  4262ad:	cmp    DWORD PTR [ebx+0x50],0x0
  4262b1:	jbe    0x4262cc
  4262b3:	mov    eax,DWORD PTR [ebp+0x1c]
  4262b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4262b9:	sub    ecx,eax
  4262bb:	mov    dl,BYTE PTR [ecx+eax*1]
  4262be:	inc    DWORD PTR [ebp+0xc]
  4262c1:	mov    BYTE PTR [eax],dl
  4262c3:	mov    edx,DWORD PTR [ebp+0xc]
  4262c6:	inc    eax
  4262c7:	cmp    edx,DWORD PTR [ebx+0x50]
  4262ca:	jb     0x4262bb
  4262cc:	mov    edx,DWORD PTR [ebp+0x1c]
  4262cf:	mov    ecx,DWORD PTR [edx+0x3c]
  4262d2:	add    ecx,edx
  4262d4:	mov    eax,DWORD PTR [ecx+0xa0]
  4262da:	mov    ebx,DWORD PTR [ecx+0x28]
  4262dd:	add    eax,edx
  4262df:	sub    edx,DWORD PTR [ebp-0x10]
  4262e2:	add    ebx,DWORD PTR [ebp+0x1c]
  4262e5:	mov    DWORD PTR [ebp+0xc],edx
  4262e8:	mov    DWORD PTR [ebp-0x2c],ecx
  4262eb:	mov    DWORD PTR [ebp-0x14],ebx
  4262ee:	mov    DWORD PTR [ebp-0x8],0x0
  4262f5:	jmp    0x426371
  4262f7:	add    edx,0xfffffff8
  4262fa:	shr    edx,1
  4262fc:	mov    DWORD PTR [ebp-0x18],edx
  4262ff:	je     0x42635d
  426301:	lea    edx,[eax+0x8]
  426304:	mov    DWORD PTR [ebp-0x4],edx
  426307:	mov    edx,DWORD PTR [ebp-0x18]
  42630a:	mov    DWORD PTR [ebp-0x18],edx
  42630d:	mov    edx,DWORD PTR [ebp-0x4]
  426310:	movzx  edx,WORD PTR [edx]
  426313:	mov    DWORD PTR [ebp-0x24],edx
  426316:	and    edx,0xfff
  42631c:	mov    DWORD PTR [ebp-0x28],edx
  42631f:	mov    edx,DWORD PTR [ebp-0x24]
  426322:	shr    edx,0xc
  426325:	add    edx,0xffcd8d14
  42632b:	xor    edx,esi
  42632d:	cmp    edx,0xf89c85b3
  426333:	jne    0x426354
  426335:	mov    edx,DWORD PTR [ebp-0x28]
  426338:	add    edx,DWORD PTR [ebp+0x1c]
  42633b:	mov    ebx,DWORD PTR [eax]
  42633d:	cmp    DWORD PTR [ebx+edx*1],0x0
  426341:	je     0x426351
  426343:	mov    ecx,DWORD PTR [ebp+0xc]
  426346:	add    ecx,DWORD PTR [ebx+edx*1]
  426349:	mov    ebx,DWORD PTR [eax]
  42634b:	mov    DWORD PTR [edx+ebx*1],ecx
  42634e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426351:	mov    ebx,DWORD PTR [ebp-0x14]
  426354:	add    DWORD PTR [ebp-0x4],0x2
  426358:	dec    DWORD PTR [ebp-0x18]
  42635b:	jne    0x42630d
  42635d:	mov    edx,DWORD PTR [ebp-0xc]
  426360:	add    DWORD PTR [ebp-0x8],edx
  426363:	mov    edx,DWORD PTR [ebp-0x8]
  426366:	cmp    edx,DWORD PTR [ecx+0xa4]
  42636c:	jae    0x42637f
  42636e:	add    eax,DWORD PTR [ebp-0xc]
  426371:	mov    edx,DWORD PTR [eax+0x4]
  426374:	mov    DWORD PTR [ebp-0xc],edx
  426377:	test   edx,edx
  426379:	jne    0x4262f7
  42637f:	mov    eax,DWORD PTR [ebp-0x10]
  426382:	mov    DWORD PTR [ebp-0x6c],eax
  426385:	mov    DWORD PTR [ebp-0x70],0x4
  42638c:	mov    eax,DWORD PTR [ecx+0x50]
  42638f:	mov    DWORD PTR [ebp-0x68],eax
  426392:	mov    eax,DWORD PTR [ebp-0x1c]
  426395:	xor    eax,esi
  426397:	add    eax,edi
  426399:	mov    DWORD PTR [ebp-0x64],eax
  42639c:	lea    eax,[ebp-0x20]
  42639f:	mov    DWORD PTR [ebp-0x60],eax
  4263a2:	lea    eax,[ebp-0x70]
  4263a5:	push   eax
  4263a6:	mov    eax,DWORD PTR [ebp+0x8]
  4263a9:	xor    eax,esi
  4263ab:	add    eax,edi
  4263ad:	push   eax
  4263ae:	mov    eax,DWORD PTR [ebp+0x20]
  4263b1:	add    eax,0xee
  4263b6:	push   eax
  4263b7:	mov    eax,DWORD PTR [ebp+0x20]
  4263ba:	mov    eax,DWORD PTR [eax+0x198]
  4263c0:	push   DWORD PTR [eax]
  4263c2:	mov    eax,DWORD PTR [ebp+0x10]
  4263c5:	call   eax
  4263c7:	mov    eax,DWORD PTR [ebp+0x20]
  4263ca:	mov    eax,DWORD PTR [eax+0x180]
  4263d0:	add    eax,DWORD PTR [ebp+0xc]
  4263d3:	mov    ecx,DWORD PTR [ebp+0xc]
  4263d6:	push   DWORD PTR [ebp+0x18]
  4263d9:	mov    DWORD PTR [eax],ecx
  4263db:	push   DWORD PTR [ebp+0x14]
  4263de:	push   DWORD PTR [ebp+0x1c]
  4263e1:	call   ebx
  4263e3:	mov    ecx,DWORD PTR [ebp+0xc]
  4263e6:	add    ecx,DWORD PTR [ebp+0x20]
  4263e9:	lea    eax,[ebp+0x4]
  4263ec:	mov    DWORD PTR [ebp+0x20],ecx
  4263ef:	mov    ecx,DWORD PTR [ebp+0x20]
  4263f2:	mov    ecx,DWORD PTR [ebp+0x20]
  4263f5:	mov    edx,DWORD PTR [ecx+0x190]
  4263fb:	mov    ecx,DWORD PTR [ebp+0x20]
  4263fe:	mov    ecx,DWORD PTR [ecx+0x18c]
  426404:	mov    esi,DWORD PTR [ecx]
  426406:	cmp    DWORD PTR [eax],esi
  426408:	jb     0x426429
  42640a:	mov    esi,DWORD PTR [edx]
  42640c:	mov    edi,DWORD PTR [edx]
  42640e:	mov    esi,DWORD PTR [esi+0x3c]
  426411:	lea    esi,[edi+esi*1+0x50]
  426415:	mov    edi,DWORD PTR [ecx]
  426417:	add    edi,DWORD PTR [esi]
  426419:	cmp    DWORD PTR [eax],edi
  42641b:	jae    0x426429
  42641d:	mov    esi,DWORD PTR [ecx]
  42641f:	mov    ecx,DWORD PTR [eax]
  426421:	mov    edx,DWORD PTR [edx]
  426423:	sub    ecx,esi
  426425:	add    edx,ecx
  426427:	mov    DWORD PTR [eax],edx
  426429:	mov    eax,DWORD PTR [ebp+0xc]
  42642c:	jmp    0x426430
  42642e:	xor    eax,eax
  426430:	pop    edi
  426431:	pop    esi
  426432:	pop    ebx
  426433:	leave  
  426434:	ret    0x1c
  426437:	push   ebp
  426438:	mov    ebp,esp
  42643a:	sub    esp,0x1c
  42643d:	push   esi
  42643e:	mov    esi,eax
  426440:	mov    eax,DWORD PTR [ecx+0x190]
  426446:	cmp    DWORD PTR [eax],0x0
  426449:	je     0x426559
  42644f:	test   edx,edx
  426451:	je     0x426559
  426457:	test   esi,esi
  426459:	je     0x426559
  42645f:	mov    eax,DWORD PTR [esi+0x88]
  426465:	test   eax,eax
  426467:	je     0x426554
  42646d:	cmp    DWORD PTR [esi+0x8c],0x10
  426474:	je     0x426554
  42647a:	cmp    DWORD PTR [esi+0x34],edx
  42647d:	je     0x426554
  426483:	mov    esi,DWORD PTR [ecx+0x18c]
  426489:	and    DWORD PTR [ebp-0x10],0x0
  42648d:	mov    ecx,edx
  42648f:	sub    ecx,DWORD PTR [esi]
  426491:	add    eax,edx
  426493:	movzx  edx,WORD PTR [eax+0xc]
  426497:	mov    DWORD PTR [ebp-0x1c],ecx
  42649a:	movzx  ecx,WORD PTR [eax+0xe]
  42649e:	add    ecx,edx
  4264a0:	je     0x426554
  4264a6:	lea    ecx,[eax+0x14]
  4264a9:	push   ebx
  4264aa:	mov    DWORD PTR [ebp-0x18],ecx
  4264ad:	mov    esi,0x7fffffff
  4264b2:	push   edi
  4264b3:	test   DWORD PTR [ecx],esi
  4264b5:	je     0x426536
  4264b7:	mov    edx,DWORD PTR [ecx]
  4264b9:	and    DWORD PTR [ebp-0xc],0x0
  4264bd:	and    edx,esi
  4264bf:	add    edx,eax
  4264c1:	movzx  edi,WORD PTR [edx+0xe]
  4264c5:	movzx  ebx,WORD PTR [edx+0xc]
  4264c9:	add    edi,ebx
  4264cb:	je     0x426536
  4264cd:	lea    ecx,[edx+0x14]
  4264d0:	mov    DWORD PTR [ebp-0x14],ecx
  4264d3:	test   DWORD PTR [ecx],esi
  4264d5:	je     0x426518
  4264d7:	mov    ecx,DWORD PTR [ecx]
  4264d9:	and    DWORD PTR [ebp-0x8],0x0
  4264dd:	and    ecx,esi
  4264df:	add    ecx,eax
  4264e1:	movzx  edi,WORD PTR [ecx+0xe]
  4264e5:	movzx  ebx,WORD PTR [ecx+0xc]
  4264e9:	add    edi,ebx
  4264eb:	je     0x426518
  4264ed:	lea    edi,[ecx+0x14]
  4264f0:	mov    DWORD PTR [ebp-0x4],edi
  4264f3:	mov    edi,DWORD PTR [ebp-0x4]
  4264f6:	mov    edi,DWORD PTR [edi]
  4264f8:	test   edi,edi
  4264fa:	je     0x426502
  4264fc:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264ff:	add    DWORD PTR [edi+eax*1],ebx
  426502:	movzx  edi,WORD PTR [ecx+0xe]
  426506:	movzx  ebx,WORD PTR [ecx+0xc]
  42650a:	inc    DWORD PTR [ebp-0x8]
  42650d:	add    DWORD PTR [ebp-0x4],0x8
  426511:	add    edi,ebx
  426513:	cmp    DWORD PTR [ebp-0x8],edi
  426516:	jb     0x4264f3
  426518:	movzx  edi,WORD PTR [edx+0xe]
  42651c:	movzx  ebx,WORD PTR [edx+0xc]
  426520:	mov    ecx,DWORD PTR [ebp-0x14]
  426523:	inc    DWORD PTR [ebp-0xc]
  426526:	add    ecx,0x8
  426529:	add    edi,ebx
  42652b:	mov    DWORD PTR [ebp-0x14],ecx
  42652e:	cmp    DWORD PTR [ebp-0xc],edi
  426531:	jb     0x4264d3
  426533:	mov    ecx,DWORD PTR [ebp-0x18]
  426536:	movzx  edx,WORD PTR [eax+0xe]
  42653a:	movzx  edi,WORD PTR [eax+0xc]
  42653e:	inc    DWORD PTR [ebp-0x10]
  426541:	add    ecx,0x8
  426544:	add    edx,edi
  426546:	mov    DWORD PTR [ebp-0x18],ecx
  426549:	cmp    DWORD PTR [ebp-0x10],edx
  42654c:	jb     0x4264b3
  426552:	pop    edi
  426553:	pop    ebx
  426554:	xor    eax,eax
  426556:	inc    eax
  426557:	jmp    0x42655b
  426559:	xor    eax,eax
  42655b:	pop    esi
  42655c:	leave  
  42655d:	ret    
  42655e:	push   ebp
  42655f:	mov    ebp,esp
  426561:	mov    ecx,DWORD PTR [ecx+0x190]
  426567:	mov    eax,DWORD PTR [ebp+0xc]
  42656a:	sub    esp,0x10
  42656d:	push   ebx
  42656e:	xor    ebx,ebx
  426570:	push   esi
  426571:	push   edi
  426572:	cmp    DWORD PTR [ecx],ebx
  426574:	je     0x4265fc
  42657a:	cmp    eax,ebx
  42657c:	je     0x4265fc
  42657e:	cmp    DWORD PTR [eax+0x78],ebx
  426581:	jne    0x426588
  426583:	xor    eax,eax
  426585:	inc    eax
  426586:	jmp    0x4265fe
  426588:	mov    eax,DWORD PTR [eax+0x78]
  42658b:	add    eax,DWORD PTR [ebp+0x8]
  42658e:	mov    ecx,DWORD PTR [eax+0x1c]
  426591:	mov    edx,DWORD PTR [eax+0x24]
  426594:	mov    esi,DWORD PTR [eax+0x14]
  426597:	mov    edi,DWORD PTR [eax+0x18]
  42659a:	add    ecx,DWORD PTR [ebp+0x8]
  42659d:	add    edx,DWORD PTR [ebp+0x8]
  4265a0:	mov    DWORD PTR [ebp-0x4],esi
  4265a3:	cmp    esi,edi
  4265a5:	ja     0x4265aa
  4265a7:	mov    DWORD PTR [ebp-0x4],edi
  4265aa:	mov    DWORD PTR [ebp-0x8],ebx
  4265ad:	cmp    DWORD PTR [ebp-0x4],ebx
  4265b0:	jbe    0x426583
  4265b2:	cmp    ebx,DWORD PTR [eax+0x14]
  4265b5:	jae    0x4265bd
  4265b7:	movzx  esi,WORD PTR [edx+ebx*2]
  4265bb:	jmp    0x4265bf
  4265bd:	mov    esi,ebx
  4265bf:	lea    esi,[ecx+esi*4]
  4265c2:	mov    edi,DWORD PTR [esi]
  4265c4:	test   edi,edi
  4265c6:	je     0x4265f1
  4265c8:	add    edi,DWORD PTR [ebp+0x8]
  4265cb:	mov    DWORD PTR [ebp-0x10],edi
  4265ce:	cmp    edi,eax
  4265d0:	jbe    0x4265e2
  4265d2:	mov    ebx,DWORD PTR [ebp+0xc]
  4265d5:	mov    ebx,DWORD PTR [ebx+0x7c]
  4265d8:	add    ebx,eax
  4265da:	cmp    edi,ebx
  4265dc:	jae    0x4265e2
  4265de:	mov    esi,DWORD PTR [esi]
  4265e0:	jmp    0x4265ea
  4265e2:	sub    edi,DWORD PTR [ebp+0x8]
  4265e5:	mov    DWORD PTR [esi],edi
  4265e7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ea:	test   esi,esi
  4265ec:	je     0x4265fc
  4265ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4265f1:	inc    ebx
  4265f2:	mov    DWORD PTR [ebp-0x8],ebx
  4265f5:	cmp    ebx,DWORD PTR [ebp-0x4]
  4265f8:	jb     0x4265b2
  4265fa:	jmp    0x426583
  4265fc:	xor    eax,eax
  4265fe:	pop    edi
  4265ff:	pop    esi
  426600:	pop    ebx
  426601:	leave  
  426602:	ret    0x8
  426605:	push   ebp
  426606:	mov    ebp,esp
  426608:	sub    esp,0x2c
  42660b:	mov    edx,0xf89c85b0
  426610:	mov    DWORD PTR [ebp-0x4],edx
  426613:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42661a:	mov    eax,DWORD PTR [ebp-0x4]
  42661d:	mov    ecx,DWORD PTR [ebp-0x4]
  426620:	mov    ecx,DWORD PTR [ebp-0x4]
  426623:	mov    ecx,DWORD PTR [ebp-0x4]
  426626:	mov    ecx,DWORD PTR [ebp-0x4]
  426629:	mov    ecx,DWORD PTR [ebp-0x4]
  42662c:	push   ebx
  42662d:	mov    ebx,DWORD PTR [ebp+0x10]
  426630:	push   esi
  426631:	mov    esi,0x75108a4
  426636:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  42663d:	mov    ecx,DWORD PTR [ebp-0x4]
  426640:	mov    ebx,DWORD PTR [ebx+0x190]
  426646:	push   edi
  426647:	mov    edi,0x3272ec
  42664c:	xor    ecx,esi
  42664e:	xor    eax,esi
  426650:	add    eax,edi
  426652:	add    ecx,edi
  426654:	mov    DWORD PTR [ebp-0x18],eax
  426657:	cmp    ecx,DWORD PTR [ebx]
  426659:	je     0x4268da
  42665f:	mov    ebx,DWORD PTR [ebp-0x4]
  426662:	mov    ecx,DWORD PTR [ebp+0xc]
  426665:	xor    ebx,esi
  426667:	add    ebx,edi
  426669:	cmp    ebx,ecx
  42666b:	je     0x4268da
  426671:	mov    ebx,DWORD PTR [ebp-0x4]
  426674:	mov    ecx,DWORD PTR [ecx+0x80]
  42667a:	xor    ebx,esi
  42667c:	add    ebx,edi
  42667e:	cmp    ecx,ebx
  426680:	je     0x4268d5
  426686:	add    ecx,DWORD PTR [ebp+0x8]
  426689:	mov    DWORD PTR [ebp-0x2c],ecx
  42668c:	mov    ebx,edx
  42668e:	xor    ebx,esi
  426690:	add    ebx,edi
  426692:	mov    DWORD PTR [ebp-0x10],ebx
  426695:	mov    ebx,DWORD PTR [ebp-0x10]
  426698:	cmp    ebx,edx
  42669a:	je     0x4266ae
  42669c:	mov    edx,DWORD PTR [ebp-0x10]
  42669f:	mov    ebx,DWORD PTR [ebp-0x4]
  4266a2:	imul   edx,edx,0x14
  4266a5:	xor    ebx,esi
  4266a7:	add    ebx,edi
  4266a9:	cmp    DWORD PTR [edx+ecx*1],ebx
  4266ac:	jne    0x4266c5
  4266ae:	mov    edx,DWORD PTR [ebp-0x10]
  4266b1:	mov    ebx,DWORD PTR [ebp-0x4]
  4266b4:	imul   edx,edx,0x14
  4266b7:	xor    ebx,esi
  4266b9:	add    ebx,edi
  4266bb:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4266bf:	je     0x4268c7
  4266c5:	mov    eax,DWORD PTR [ebp-0x4]
  4266c8:	mov    ebx,DWORD PTR [ebp-0x4]
  4266cb:	mov    eax,DWORD PTR [ebp-0x10]
  4266ce:	imul   eax,eax,0x14
  4266d1:	add    eax,ecx
  4266d3:	mov    ecx,DWORD PTR [eax+0x10]
  4266d6:	add    ecx,DWORD PTR [ebp+0x8]
  4266d9:	xor    ebx,esi
  4266db:	mov    DWORD PTR [ebp-0x1c],ecx
  4266de:	mov    ecx,DWORD PTR [ebp-0x4]
  4266e1:	mov    edx,DWORD PTR [ebp-0x4]
  4266e4:	xor    ecx,esi
  4266e6:	add    ecx,edi
  4266e8:	xor    edx,esi
  4266ea:	mov    DWORD PTR [ebp-0x24],ecx
  4266ed:	mov    ecx,DWORD PTR [eax]
  4266ef:	add    edx,edi
  4266f1:	add    ebx,edi
  4266f3:	cmp    ecx,edx
  4266f5:	je     0x4266fd
  4266f7:	add    ecx,DWORD PTR [ebp+0x8]
  4266fa:	mov    DWORD PTR [ebp-0x24],ecx
  4266fd:	mov    ecx,DWORD PTR [ebp-0x4]
  426700:	xor    ecx,esi
  426702:	add    ecx,DWORD PTR [eax+0xc]
  426705:	mov    eax,DWORD PTR [ebp+0x8]
  426708:	lea    eax,[ecx+eax*1+0x3272ec]
  42670f:	mov    DWORD PTR [ebp+0xc],eax
  426712:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  426719:	mov    eax,DWORD PTR [ebp+0x10]
  42671c:	push   DWORD PTR [ebp+0xc]
  42671f:	mov    eax,DWORD PTR [eax+0x1d8]
  426725:	call   DWORD PTR [eax]
  426727:	mov    ecx,DWORD PTR [ebp-0x4]
  42672a:	xor    ecx,esi
  42672c:	add    ecx,edi
  42672e:	mov    DWORD PTR [ebp-0xc],eax
  426731:	cmp    ecx,eax
  426733:	jne    0x426747
  426735:	mov    eax,DWORD PTR [ebp+0x10]
  426738:	push   DWORD PTR [ebp+0xc]
  42673b:	mov    eax,DWORD PTR [eax+0x1d8]
  426741:	call   DWORD PTR [eax+0xc]
  426744:	mov    DWORD PTR [ebp-0xc],eax
  426747:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  42674e:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  426755:	mov    eax,DWORD PTR [ebp-0x4]
  426758:	xor    eax,esi
  42675a:	add    eax,edi
  42675c:	cmp    eax,DWORD PTR [ebp-0xc]
  42675f:	jne    0x426784
  426761:	mov    eax,DWORD PTR [ebp-0x8]
  426764:	mov    ecx,DWORD PTR [ebp-0x20]
  426767:	xor    eax,esi
  426769:	xor    ecx,esi
  42676b:	lea    ebx,[ebx+eax*1+0x3272ec]
  426772:	mov    eax,DWORD PTR [ebp+0x10]
  426775:	mov    eax,DWORD PTR [eax+0x1d8]
  42677b:	add    ecx,edi
  42677d:	imul   ecx,ebx
  426780:	push   ecx
  426781:	call   DWORD PTR [eax+0x24]
  426784:	mov    eax,DWORD PTR [ebp-0x4]
  426787:	xor    eax,esi
  426789:	add    eax,edi
  42678b:	cmp    eax,DWORD PTR [ebp-0xc]
  42678e:	jne    0x42679f
  426790:	mov    eax,DWORD PTR [ebp-0x28]
  426793:	xor    eax,esi
  426795:	add    eax,edi
  426797:	cmp    ebx,eax
  426799:	jbe    0x426719
  42679f:	mov    eax,DWORD PTR [ebp-0x4]
  4267a2:	xor    eax,esi
  4267a4:	add    eax,edi
  4267a6:	cmp    eax,DWORD PTR [ebp-0xc]
  4267a9:	jne    0x4267c2
  4267ab:	mov    eax,DWORD PTR [ebp-0x8]
  4267ae:	mov    ecx,DWORD PTR [ebp-0x18]
  4267b1:	xor    eax,esi
  4267b3:	lea    eax,[ecx+eax*1+0x3272ec]
  4267ba:	mov    DWORD PTR [ebp-0x18],eax
  4267bd:	jmp    0x4268b1
  4267c2:	mov    DWORD PTR [ebp-0x14],0x1121b28
  4267c9:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  4267d0:	mov    ebx,DWORD PTR [ebp-0x4]
  4267d3:	xor    ebx,esi
  4267d5:	add    ebx,edi
  4267d7:	jmp    0x42689e
  4267dc:	mov    eax,DWORD PTR [ebp-0x4]
  4267df:	xor    eax,esi
  4267e1:	add    eax,edi
  4267e3:	mov    DWORD PTR [ebp-0x14],eax
  4267e6:	mov    eax,DWORD PTR [ebp-0x4]
  4267e9:	xor    eax,esi
  4267eb:	add    eax,edi
  4267ed:	mov    DWORD PTR [ebp+0xc],eax
  4267f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4267f3:	mov    eax,DWORD PTR [ebp-0x24]
  4267f6:	xor    ecx,esi
  4267f8:	add    ecx,edi
  4267fa:	cmp    ecx,eax
  4267fc:	je     0x426804
  4267fe:	mov    eax,DWORD PTR [eax+ebx*4]
  426801:	mov    DWORD PTR [ebp-0x14],eax
  426804:	mov    eax,DWORD PTR [ebp-0x1c]
  426807:	mov    eax,DWORD PTR [eax+ebx*4]
  42680a:	mov    DWORD PTR [ebp+0xc],eax
  42680d:	mov    eax,DWORD PTR [ebp-0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x14]
  426813:	xor    eax,esi
  426815:	add    eax,edi
  426817:	cmp    eax,ecx
  426819:	je     0x426844
  42681b:	mov    eax,DWORD PTR [ebp-0x4]
  42681e:	mov    ecx,DWORD PTR [ebp-0x14]
  426821:	xor    eax,esi
  426823:	add    eax,edi
  426825:	shr    ecx,0x1f
  426828:	cmp    eax,ecx
  42682a:	je     0x426844
  42682c:	mov    ecx,DWORD PTR [ebp-0x14]
  42682f:	mov    eax,DWORD PTR [ebp+0x10]
  426832:	mov    eax,DWORD PTR [eax+0x1d8]
  426838:	movzx  ecx,cx
  42683b:	push   ecx
  42683c:	push   DWORD PTR [ebp-0xc]
  42683f:	call   DWORD PTR [eax+0x8]
  426842:	jmp    0x42685d
  426844:	mov    eax,DWORD PTR [ebp+0xc]
  426847:	add    eax,DWORD PTR [ebp+0x8]
  42684a:	mov    ecx,DWORD PTR [ebp+0x10]
  42684d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  426853:	add    eax,0x2
  426856:	push   eax
  426857:	push   DWORD PTR [ebp-0xc]
  42685a:	call   DWORD PTR [ecx+0x8]
  42685d:	mov    DWORD PTR [ebp+0xc],eax
  426860:	mov    eax,DWORD PTR [ebp-0x4]
  426863:	mov    ecx,DWORD PTR [ebp+0xc]
  426866:	xor    eax,esi
  426868:	add    eax,edi
  42686a:	cmp    eax,ecx
  42686c:	mov    eax,DWORD PTR [ebp-0x8]
  42686f:	jne    0x426882
  426871:	mov    ecx,DWORD PTR [ebp-0x18]
  426874:	xor    eax,esi
  426876:	lea    eax,[ecx+eax*1+0x3272ec]
  42687d:	mov    DWORD PTR [ebp-0x18],eax
  426880:	jmp    0x426892
  426882:	mov    ecx,DWORD PTR [ebp+0xc]
  426885:	xor    eax,esi
  426887:	add    eax,edi
  426889:	imul   eax,ecx
  42688c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42688f:	mov    DWORD PTR [ecx+ebx*4],eax
  426892:	mov    eax,DWORD PTR [ebp-0x8]
  426895:	xor    eax,esi
  426897:	lea    ebx,[ebx+eax*1+0x3272ec]
  42689e:	mov    eax,DWORD PTR [ebp-0x4]
  4268a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268a4:	xor    eax,esi
  4268a6:	add    eax,edi
  4268a8:	cmp    DWORD PTR [ecx+ebx*4],eax
  4268ab:	jne    0x4267dc
  4268b1:	mov    edx,DWORD PTR [ebp-0x10]
  4268b4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268b7:	mov    eax,DWORD PTR [ebp-0x18]
  4268ba:	sub    edx,0x3272eb
  4268c0:	xor    edx,esi
  4268c2:	jmp    0x42668c
  4268c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4268ca:	xor    ecx,esi
  4268cc:	add    ecx,edi
  4268ce:	cmp    eax,ecx
  4268d0:	mov    eax,DWORD PTR [ebp-0x4]
  4268d3:	jne    0x4268dd
  4268d5:	mov    eax,DWORD PTR [ebp-0x8]
  4268d8:	jmp    0x4268dd
  4268da:	mov    eax,DWORD PTR [ebp-0x4]
  4268dd:	xor    eax,esi
  4268df:	add    eax,edi
  4268e1:	pop    edi
  4268e2:	pop    esi
  4268e3:	pop    ebx
  4268e4:	leave  
  4268e5:	ret    0xc
  4268e8:	push   ebp
  4268e9:	mov    ebp,esp
  4268eb:	sub    esp,0x28
  4268ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4268f5:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4268fc:	mov    eax,DWORD PTR [ebp+0xc]
  4268ff:	mov    DWORD PTR [ebp+0xc],eax
  426902:	push   esi
  426903:	mov    eax,eax
  426905:	mov    eax,DWORD PTR [ebp-0x4]
  426908:	mov    esi,DWORD PTR [ebp+0x8]
  42690b:	mov    ecx,0x75108a4
  426910:	xor    eax,ecx
  426912:	mov    edx,0x3272ec
  426917:	add    eax,edx
  426919:	cmp    esi,eax
  42691b:	je     0x426a42
  426921:	mov    eax,DWORD PTR [ebp+0x8]
  426924:	mov    esi,DWORD PTR [ebp+0x8]
  426927:	add    esi,DWORD PTR [eax+0x3c]
  42692a:	push   edi
  42692b:	mov    DWORD PTR [ebp+0xc],esi
  42692e:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  426935:	mov    eax,DWORD PTR [ebp-0x1c]
  426938:	mov    esi,DWORD PTR [ebp-0x4]
  42693b:	mov    edi,DWORD PTR [ebp+0xc]
  42693e:	xor    esi,ecx
  426940:	xor    eax,ecx
  426942:	add    esi,edx
  426944:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  42694b:	je     0x426a3c
  426951:	mov    esi,DWORD PTR [ebp+0xc]
  426954:	mov    eax,DWORD PTR [ebp+0x8]
  426957:	add    eax,DWORD PTR [esi+0xa0]
  42695d:	mov    esi,DWORD PTR [ebp+0x8]
  426960:	mov    edi,DWORD PTR [ebp+0xc]
  426963:	sub    esi,DWORD PTR [edi+0x34]
  426966:	mov    edi,DWORD PTR [ebp-0x4]
  426969:	xor    edi,ecx
  42696b:	add    edi,edx
  42696d:	mov    DWORD PTR [ebp-0x24],esi
  426970:	cmp    esi,edi
  426972:	je     0x426a3c
  426978:	mov    esi,DWORD PTR [ebp-0x4]
  42697b:	xor    esi,ecx
  42697d:	add    esi,edx
  42697f:	mov    DWORD PTR [ebp-0x8],esi
  426982:	push   ebx
  426983:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  42698a:	jmp    0x426a26
  42698f:	mov    esi,DWORD PTR [ebp-0x4]
  426992:	xor    esi,ecx
  426994:	lea    edi,[ebx-0x8]
  426997:	add    esi,edx
  426999:	shr    edi,1
  42699b:	cmp    esi,edi
  42699d:	jae    0x426a0c
  42699f:	sub    edi,esi
  4269a1:	lea    ebx,[eax+esi*2+0x8]
  4269a5:	mov    DWORD PTR [ebp-0x18],edi
  4269a8:	movzx  esi,WORD PTR [ebx]
  4269ab:	and    esi,0xfff
  4269b1:	mov    DWORD PTR [ebp-0x14],esi
  4269b4:	mov    edi,DWORD PTR [ebp-0x14]
  4269b7:	mov    esi,DWORD PTR [eax]
  4269b9:	sub    esi,edx
  4269bb:	add    edi,esi
  4269bd:	movzx  esi,WORD PTR [ebx]
  4269c0:	shr    esi,0xc
  4269c3:	xor    edi,ecx
  4269c5:	mov    DWORD PTR [ebp-0x20],edi
  4269c8:	mov    DWORD PTR [ebp-0x14],esi
  4269cb:	mov    esi,DWORD PTR [ebp-0x20]
  4269ce:	mov    edi,DWORD PTR [ebp+0x8]
  4269d1:	xor    esi,ecx
  4269d3:	lea    esi,[esi+edi*1+0x3272ec]
  4269da:	mov    DWORD PTR [ebp-0x20],esi
  4269dd:	mov    esi,DWORD PTR [ebp-0x10]
  4269e0:	mov    edi,DWORD PTR [ebp-0x14]
  4269e3:	xor    esi,ecx
  4269e5:	add    esi,edx
  4269e7:	cmp    edi,esi
  4269e9:	jne    0x426a01
  4269eb:	mov    esi,DWORD PTR [ebp-0x10]
  4269ee:	mov    edi,DWORD PTR [ebp-0x14]
  4269f1:	xor    esi,ecx
  4269f3:	add    esi,edx
  4269f5:	cmp    edi,esi
  4269f7:	jne    0x426a01
  4269f9:	mov    esi,DWORD PTR [ebp-0x20]
  4269fc:	mov    edi,DWORD PTR [ebp-0x24]
  4269ff:	add    DWORD PTR [esi],edi
  426a01:	add    ebx,0x2
  426a04:	dec    DWORD PTR [ebp-0x18]
  426a07:	jne    0x4269a8
  426a09:	mov    ebx,DWORD PTR [ebp-0xc]
  426a0c:	add    DWORD PTR [ebp-0x8],ebx
  426a0f:	mov    esi,DWORD PTR [ebp-0x1c]
  426a12:	mov    edi,DWORD PTR [ebp-0x8]
  426a15:	mov    ebx,DWORD PTR [ebp+0xc]
  426a18:	xor    esi,ecx
  426a1a:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  426a21:	jae    0x426a3b
  426a23:	add    eax,DWORD PTR [ebp-0xc]
  426a26:	mov    esi,DWORD PTR [ebp-0x4]
  426a29:	mov    ebx,DWORD PTR [eax+0x4]
  426a2c:	xor    esi,ecx
  426a2e:	add    esi,edx
  426a30:	mov    DWORD PTR [ebp-0xc],ebx
  426a33:	cmp    ebx,esi
  426a35:	jne    0x42698f
  426a3b:	pop    ebx
  426a3c:	mov    eax,DWORD PTR [ebp-0x28]
  426a3f:	pop    edi
  426a40:	jmp    0x426a45
  426a42:	mov    eax,DWORD PTR [ebp-0x4]
  426a45:	xor    eax,ecx
  426a47:	add    eax,edx
  426a49:	pop    esi
  426a4a:	leave  
  426a4b:	ret    0x8
  426a4e:	push   ebp
  426a4f:	mov    ebp,esp
  426a51:	sub    esp,0xd8
  426a57:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426a5e:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  426a65:	mov    eax,DWORD PTR [ebp-0x4]
  426a68:	push   ebx
  426a69:	push   esi
  426a6a:	mov    esi,0x75108a4
  426a6f:	xor    eax,esi
  426a71:	push   edi
  426a72:	mov    edi,0x3272ec
  426a77:	add    eax,edi
  426a79:	mov    DWORD PTR [ebp-0x18],eax
  426a7c:	mov    eax,DWORD PTR [ebp-0x4]
  426a7f:	xor    eax,esi
  426a81:	add    eax,edi
  426a83:	mov    DWORD PTR [ebp-0x8],eax
  426a86:	mov    ebx,DWORD PTR [ebp+0x20]
  426a89:	mov    eax,DWORD PTR [ebp-0x1c]
  426a8c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426a8f:	xor    eax,ecx
  426a91:	mov    DWORD PTR [ebp-0x1c],eax
  426a94:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  426a9b:	mov    eax,DWORD PTR [ebp-0xc]
  426a9e:	mov    ecx,DWORD PTR [ebp-0xc]
  426aa1:	xor    eax,ecx
  426aa3:	mov    DWORD PTR [ebp-0xc],eax
  426aa6:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  426aad:	mov    eax,DWORD PTR [ebp-0x10]
  426ab0:	mov    ecx,DWORD PTR [ebp-0x10]
  426ab3:	xor    eax,ecx
  426ab5:	mov    DWORD PTR [ebp-0x10],eax
  426ab8:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  426abf:	mov    eax,DWORD PTR [ebp-0x28]
  426ac2:	mov    ecx,DWORD PTR [ebp-0x28]
  426ac5:	xor    eax,ecx
  426ac7:	mov    DWORD PTR [ebp-0x28],eax
  426aca:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  426ad1:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  426ad8:	mov    eax,DWORD PTR [ebp+0x8]
  426adb:	test   eax,eax
  426add:	je     0x426f68
  426ae3:	mov    eax,DWORD PTR [ebp+0xc]
  426ae6:	test   eax,eax
  426ae8:	je     0x426f68
  426aee:	mov    eax,DWORD PTR [ebp+0x18]
  426af1:	test   eax,eax
  426af3:	je     0x426f68
  426af9:	mov    eax,DWORD PTR [ebp+0x20]
  426afc:	mov    ecx,DWORD PTR [ebp+0x8]
  426aff:	xor    eax,0x8a4
  426b04:	add    eax,0x72ec
  426b09:	cmp    WORD PTR [ecx],ax
  426b0c:	jne    0x426f68
  426b12:	mov    eax,DWORD PTR [ebp-0x4]
  426b15:	xor    eax,esi
  426b17:	add    eax,edi
  426b19:	mov    DWORD PTR [ebp-0x30],eax
  426b1c:	mov    eax,DWORD PTR [ebp-0x4]
  426b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	add    eax,DWORD PTR [ecx+0x3c]
  426b28:	mov    DWORD PTR [ebp+0xc],eax
  426b2b:	mov    eax,DWORD PTR [eax+0x50]
  426b2e:	test   eax,eax
  426b30:	je     0x426f68
  426b36:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  426b3d:	mov    eax,DWORD PTR [ebp-0x2c]
  426b40:	xor    eax,esi
  426b42:	add    eax,edi
  426b44:	mov    DWORD PTR [ebp-0x2c],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x4]
  426b4a:	mov    eax,DWORD PTR [ebx+0x190]
  426b50:	mov    ecx,DWORD PTR [eax]
  426b52:	mov    ecx,DWORD PTR [ecx+0x3c]
  426b55:	add    ecx,DWORD PTR [eax]
  426b57:	mov    eax,DWORD PTR [ebp-0x4]
  426b5a:	mov    eax,DWORD PTR [ebx+0x18c]
  426b60:	mov    edx,DWORD PTR [eax]
  426b62:	mov    DWORD PTR [ebp-0x20],ecx
  426b65:	mov    DWORD PTR [ebp+0x20],edx
  426b68:	cmp    edx,edx
  426b6a:	jne    0x426b9e
  426b6c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426b72:	lea    edx,[ebp-0x18]
  426b75:	push   edx
  426b76:	mov    edx,DWORD PTR [ebp-0xc]
  426b79:	xor    edx,esi
  426b7b:	add    edx,edi
  426b7d:	push   edx
  426b7e:	push   DWORD PTR [ecx+0x50]
  426b81:	push   DWORD PTR [ebp+0x20]
  426b84:	call   DWORD PTR [eax+0x1c]
  426b87:	mov    eax,DWORD PTR [ebp-0x20]
  426b8a:	mov    ecx,DWORD PTR [eax+0x54]
  426b8d:	mov    eax,DWORD PTR [eax+0x50]
  426b90:	sub    eax,ecx
  426b92:	add    ecx,DWORD PTR [ebp+0x20]
  426b95:	push   ecx
  426b96:	call   0x427505
  426b9b:	mov    edx,DWORD PTR [ebp+0x20]
  426b9e:	mov    eax,DWORD PTR [ebx+0x194]
  426ba4:	mov    DWORD PTR [eax],edx
  426ba6:	mov    eax,DWORD PTR [ebp+0xc]
  426ba9:	push   DWORD PTR [eax+0x54]
  426bac:	push   DWORD PTR [ebp+0x8]
  426baf:	push   edx
  426bb0:	call   0x4273fb
  426bb5:	mov    ecx,DWORD PTR [ebp+0x20]
  426bb8:	mov    eax,DWORD PTR [ecx+0x3c]
  426bbb:	add    eax,ecx
  426bbd:	movzx  ecx,WORD PTR [eax+0x14]
  426bc1:	lea    ecx,[ecx+eax*1+0x18]
  426bc5:	mov    DWORD PTR [ebp+0x18],ecx
  426bc8:	mov    ecx,DWORD PTR [ebp-0x4]
  426bcb:	movzx  edx,WORD PTR [eax+0x6]
  426bcf:	xor    ecx,esi
  426bd1:	add    ecx,edi
  426bd3:	mov    DWORD PTR [ebp+0xc],eax
  426bd6:	cmp    edx,ecx
  426bd8:	je     0x426c85
  426bde:	mov    ecx,DWORD PTR [ebp-0x4]
  426be1:	xor    ecx,esi
  426be3:	add    ecx,edi
  426be5:	mov    DWORD PTR [ebp-0x8],ecx
  426be8:	mov    ecx,DWORD PTR [ebp-0x24]
  426beb:	movzx  edx,WORD PTR [eax+0x6]
  426bef:	xor    ecx,esi
  426bf1:	sub    edx,ecx
  426bf3:	sub    edx,edi
  426bf5:	cmp    DWORD PTR [ebp-0x8],edx
  426bf8:	ja     0x426c85
  426bfe:	mov    edx,DWORD PTR [ebp+0x18]
  426c01:	add    edx,0x8
  426c04:	mov    DWORD PTR [ebp+0x18],edx
  426c07:	jmp    0x426c0c
  426c09:	mov    edx,DWORD PTR [ebp+0x18]
  426c0c:	mov    eax,DWORD PTR [eax+0x38]
  426c0f:	lea    ecx,[eax-0x1]
  426c12:	mov    DWORD PTR [ebp-0x38],eax
  426c15:	mov    eax,DWORD PTR [edx]
  426c17:	test   eax,ecx
  426c19:	je     0x426c22
  426c1b:	not    ecx
  426c1d:	and    eax,ecx
  426c1f:	add    eax,DWORD PTR [ebp-0x38]
  426c22:	mov    ecx,DWORD PTR [edx+0x4]
  426c25:	add    ecx,DWORD PTR [ebp+0x20]
  426c28:	push   ecx
  426c29:	call   0x427505
  426c2e:	mov    edx,DWORD PTR [ebp-0x4]
  426c31:	mov    eax,DWORD PTR [ebp+0x18]
  426c34:	mov    ecx,DWORD PTR [eax+0x8]
  426c37:	xor    edx,esi
  426c39:	add    edx,edi
  426c3b:	cmp    ecx,edx
  426c3d:	je     0x426c56
  426c3f:	push   ecx
  426c40:	mov    ecx,DWORD PTR [ebp+0x8]
  426c43:	add    ecx,DWORD PTR [eax+0xc]
  426c46:	mov    eax,DWORD PTR [eax+0x4]
  426c49:	add    eax,DWORD PTR [ebp+0x20]
  426c4c:	push   ecx
  426c4d:	push   eax
  426c4e:	call   0x4273fb
  426c53:	mov    eax,DWORD PTR [ebp+0x18]
  426c56:	mov    ecx,DWORD PTR [ebp-0x24]
  426c59:	mov    edx,DWORD PTR [ebp-0x8]
  426c5c:	add    eax,0x28
  426c5f:	xor    ecx,esi
  426c61:	lea    ecx,[edx+ecx*1+0x3272ec]
  426c68:	mov    edx,DWORD PTR [ebp+0xc]
  426c6b:	mov    DWORD PTR [ebp+0x18],eax
  426c6e:	mov    eax,DWORD PTR [ebp-0x24]
  426c71:	movzx  edx,WORD PTR [edx+0x6]
  426c75:	xor    eax,esi
  426c77:	sub    edx,eax
  426c79:	mov    eax,DWORD PTR [ebp+0xc]
  426c7c:	sub    edx,edi
  426c7e:	mov    DWORD PTR [ebp-0x8],ecx
  426c81:	cmp    ecx,edx
  426c83:	jbe    0x426c09
  426c85:	mov    edx,DWORD PTR [ebx+0x18c]
  426c8b:	mov    ecx,DWORD PTR [ebp+0x20]
  426c8e:	cmp    ecx,DWORD PTR [edx]
  426c90:	jne    0x426cb9
  426c92:	mov    eax,DWORD PTR [ebx+0x1d8]
  426c98:	lea    edx,[ebp-0x18]
  426c9b:	push   edx
  426c9c:	mov    edx,DWORD PTR [ebp-0x10]
  426c9f:	xor    edx,esi
  426ca1:	add    edx,edi
  426ca3:	push   edx
  426ca4:	mov    edx,DWORD PTR [ebp-0x20]
  426ca7:	push   DWORD PTR [edx+0x54]
  426caa:	push   ecx
  426cab:	call   DWORD PTR [eax+0x1c]
  426cae:	test   eax,eax
  426cb0:	je     0x426f59
  426cb6:	mov    eax,DWORD PTR [ebp+0xc]
  426cb9:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426cbf:	mov    ecx,DWORD PTR [ecx]
  426cc1:	xor    ecx,esi
  426cc3:	add    ecx,edi
  426cc5:	je     0x426e84
  426ccb:	mov    eax,DWORD PTR [ebp-0x4]
  426cce:	xor    eax,esi
  426cd0:	add    eax,edi
  426cd2:	and    DWORD PTR [ebp+0x8],0x0
  426cd6:	mov    DWORD PTR [ebp-0x14],eax
  426cd9:	mov    ecx,0xf89c8524
  426cde:	mov    eax,0xf89c85dc
  426ce3:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  426cea:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  426cf1:	mov    DWORD PTR [ebp-0x50],eax
  426cf4:	mov    DWORD PTR [ebp-0x4c],ecx
  426cf7:	mov    DWORD PTR [ebp-0x48],ecx
  426cfa:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  426d01:	mov    edx,DWORD PTR [ebp+0x8]
  426d04:	mov    ecx,0x8a4
  426d09:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426d0e:	mov    edx,0x72ec
  426d13:	add    cx,dx
  426d16:	mov    edx,DWORD PTR [ebp+0x8]
  426d19:	inc    DWORD PTR [ebp+0x8]
  426d1c:	cmp    DWORD PTR [ebp+0x8],0x6
  426d20:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426d28:	jb     0x426d01
  426d2a:	mov    ecx,0xf89c8522
  426d2f:	mov    DWORD PTR [ebp-0xb0],eax
  426d35:	mov    DWORD PTR [ebp-0x9c],eax
  426d3b:	mov    DWORD PTR [ebp-0x74],eax
  426d3e:	mov    DWORD PTR [ebp-0x70],eax
  426d41:	lea    eax,[ecx+0x1]
  426d44:	mov    edx,0xf89c85fe
  426d49:	mov    DWORD PTR [ebp-0x64],eax
  426d4c:	mov    DWORD PTR [ebp-0x60],eax
  426d4f:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426d59:	mov    DWORD PTR [ebp-0xac],ecx
  426d5f:	mov    DWORD PTR [ebp-0xa8],edx
  426d65:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  426d6f:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426d79:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426d83:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  426d8d:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426d97:	mov    DWORD PTR [ebp-0x8c],ecx
  426d9d:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426da7:	mov    DWORD PTR [ebp-0x84],edx
  426dad:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426db4:	mov    DWORD PTR [ebp-0x7c],ecx
  426db7:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  426dbe:	mov    DWORD PTR [ebp-0x6c],ecx
  426dc1:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426dc8:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  426dcf:	xor    eax,eax
  426dd1:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426dd8:	xor    cl,0xa4
  426ddb:	sub    cl,0x14
  426dde:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426de5:	inc    eax
  426de6:	cmp    eax,0x17
  426de9:	jb     0x426dd1
  426deb:	mov    eax,DWORD PTR [ebx+0x1d8]
  426df1:	lea    ecx,[ebp-0xc0]
  426df7:	push   ecx
  426df8:	call   DWORD PTR [eax+0x4]
  426dfb:	mov    ecx,DWORD PTR [ebx+0x1d8]
  426e01:	lea    edx,[ebp-0xd8]
  426e07:	push   edx
  426e08:	push   eax
  426e09:	call   DWORD PTR [ecx+0x8]
  426e0c:	mov    DWORD PTR [ebp-0x40],eax
  426e0f:	lea    eax,[ebp-0x14]
  426e12:	push   eax
  426e13:	mov    eax,DWORD PTR [ebx+0x18c]
  426e19:	push   DWORD PTR [eax]
  426e1b:	mov    eax,DWORD PTR [ebp-0x40]
  426e1e:	call   eax
  426e20:	mov    eax,DWORD PTR [ebp-0x4]
  426e23:	xor    eax,esi
  426e25:	add    eax,edi
  426e27:	mov    DWORD PTR [ebp-0x34],eax
  426e2a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e2d:	mov    eax,DWORD PTR [ebp-0x14]
  426e30:	xor    ecx,esi
  426e32:	add    ecx,edi
  426e34:	cmp    eax,ecx
  426e36:	je     0x426e81
  426e38:	mov    DWORD PTR [ebp-0x3c],eax
  426e3b:	jmp    0x426e4c
  426e3d:	mov    eax,DWORD PTR [eax]
  426e3f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426e42:	mov    DWORD PTR [ebp-0x14],eax
  426e45:	mov    eax,DWORD PTR [ebp-0x14]
  426e48:	cmp    eax,ecx
  426e4a:	je     0x426e59
  426e4c:	mov    edx,DWORD PTR [eax+0x18]
  426e4f:	mov    ecx,DWORD PTR [ebx+0x18c]
  426e55:	cmp    edx,DWORD PTR [ecx]
  426e57:	jne    0x426e3d
  426e59:	mov    ecx,DWORD PTR [ebx+0x18c]
  426e5f:	mov    edx,DWORD PTR [eax+0x18]
  426e62:	cmp    edx,DWORD PTR [ecx]
  426e64:	jne    0x426e81
  426e66:	mov    ecx,DWORD PTR [ebx+0x190]
  426e6c:	mov    edx,DWORD PTR [ebp-0x20]
  426e6f:	mov    edx,DWORD PTR [edx+0x28]
  426e72:	add    edx,DWORD PTR [ecx]
  426e74:	mov    DWORD PTR [eax+0x1c],edx
  426e77:	mov    eax,DWORD PTR [ebp-0x24]
  426e7a:	xor    eax,esi
  426e7c:	add    eax,edi
  426e7e:	mov    DWORD PTR [ebp-0x34],eax
  426e81:	mov    eax,DWORD PTR [ebp+0xc]
  426e84:	push   ebx
  426e85:	push   eax
  426e86:	push   DWORD PTR [ebp+0x20]
  426e89:	call   0x426605
  426e8e:	test   eax,eax
  426e90:	je     0x426f59
  426e96:	push   DWORD PTR [ebp+0xc]
  426e99:	mov    ecx,ebx
  426e9b:	push   DWORD PTR [ebp+0x20]
  426e9e:	call   0x42655e
  426ea3:	test   eax,eax
  426ea5:	je     0x426f59
  426eab:	mov    eax,DWORD PTR [ebp+0xc]
  426eae:	mov    edx,DWORD PTR [ebp+0x20]
  426eb1:	mov    ecx,ebx
  426eb3:	call   0x426437
  426eb8:	test   eax,eax
  426eba:	je     0x426f59
  426ec0:	push   ebx
  426ec1:	push   DWORD PTR [ebp+0x20]
  426ec4:	call   0x4268e8
  426ec9:	test   eax,eax
  426ecb:	je     0x426f59
  426ed1:	mov    eax,DWORD PTR [ebx+0x18c]
  426ed7:	mov    edx,DWORD PTR [ebp+0x20]
  426eda:	cmp    edx,DWORD PTR [eax]
  426edc:	jne    0x426ef8
  426ede:	mov    eax,DWORD PTR [ebx+0x1d8]
  426ee4:	lea    ecx,[ebp-0x18]
  426ee7:	push   ecx
  426ee8:	push   DWORD PTR [ebp-0x18]
  426eeb:	mov    ecx,DWORD PTR [ebp-0x20]
  426eee:	push   DWORD PTR [ecx+0x54]
  426ef1:	push   edx
  426ef2:	call   DWORD PTR [eax+0x1c]
  426ef5:	mov    edx,DWORD PTR [ebp+0x20]
  426ef8:	mov    eax,DWORD PTR [ebx+0x1c8]
  426efe:	mov    eax,DWORD PTR [eax]
  426f00:	xor    eax,esi
  426f02:	add    eax,edi
  426f04:	je     0x426f3d
  426f06:	mov    ecx,DWORD PTR [ebp+0xc]
  426f09:	mov    eax,DWORD PTR [ecx+0x28]
  426f0c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426f13:	mov    esi,DWORD PTR [ebp+0x8]
  426f16:	push   DWORD PTR [ebp+0x14]
  426f19:	xor    esi,0x8a4
  426f1f:	push   DWORD PTR [ebp+0x10]
  426f22:	add    esi,0x72ec
  426f28:	or     WORD PTR [ecx+0x16],si
  426f2c:	add    eax,edx
  426f2e:	push   edx
  426f2f:	call   eax
  426f31:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  426f3b:	jmp    0x426f47
  426f3d:	mov    eax,DWORD PTR [ebp+0xc]
  426f40:	mov    eax,DWORD PTR [eax+0x28]
  426f43:	add    eax,edx
  426f45:	call   eax
  426f47:	mov    DWORD PTR [ebp-0x8],eax
  426f4a:	mov    eax,DWORD PTR [ebp-0x8]
  426f4d:	mov    ecx,DWORD PTR [ebp+0x1c]
  426f50:	mov    DWORD PTR [ecx],eax
  426f52:	mov    DWORD PTR [ebp-0x30],0x1
  426f59:	cmp    DWORD PTR [ebp-0x30],0x0
  426f5d:	jne    0x426f63
  426f5f:	and    DWORD PTR [ebp+0x20],0x0
  426f63:	mov    eax,DWORD PTR [ebp+0x20]
  426f66:	jmp    0x426f6a
  426f68:	xor    eax,eax
  426f6a:	pop    edi
  426f6b:	pop    esi
  426f6c:	pop    ebx
  426f6d:	leave  
  426f6e:	ret    0x1c
  426f71:	push   ebp
  426f72:	mov    ebp,esp
  426f74:	movzx  edx,WORD PTR [ecx+0x6]
  426f78:	movzx  eax,WORD PTR [ecx+0x14]
  426f7c:	push   ebx
  426f7d:	push   edi
  426f7e:	xor    edi,edi
  426f80:	lea    eax,[eax+ecx*1+0x18]
  426f84:	test   edx,edx
  426f86:	je     0x426fa7
  426f88:	mov    ecx,DWORD PTR [eax+0xc]
  426f8b:	lea    ebx,[ecx+esi*1]
  426f8e:	cmp    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f9f
  426f93:	mov    ebx,DWORD PTR [eax+0x8]
  426f96:	add    ebx,ecx
  426f98:	add    ebx,esi
  426f9a:	cmp    DWORD PTR [ebp+0x8],ebx
  426f9d:	jb     0x426fa9
  426f9f:	add    eax,0x28
  426fa2:	inc    edi
  426fa3:	cmp    edi,edx
  426fa5:	jb     0x426f88
  426fa7:	xor    eax,eax
  426fa9:	pop    edi
  426faa:	pop    ebx
  426fab:	pop    ebp
  426fac:	ret    0x4
  426faf:	push   ebp
  426fb0:	mov    ebp,esp
  426fb2:	sub    esp,0x34
  426fb5:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  426fbc:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426fc3:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426fca:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  426fd1:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426fd8:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  426fdf:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426fe6:	mov    DWORD PTR [ebp-0x10],eax
  426fe9:	mov    eax,DWORD PTR [ebp+0x8]
  426fec:	mov    DWORD PTR [ebp-0x14],eax
  426fef:	mov    eax,DWORD PTR [ebp-0xc]
  426ff2:	push   ebx
  426ff3:	mov    ecx,0x75108a4
  426ff8:	xor    eax,ecx
  426ffa:	push   esi
  426ffb:	mov    esi,DWORD PTR [ebp-0x10]
  426ffe:	mov    edx,0x3272ec
  427003:	add    eax,edx
  427005:	push   edi
  427006:	cmp    esi,eax
  427008:	je     0x4271e7
  42700e:	mov    eax,DWORD PTR [ebp-0xc]
  427011:	mov    esi,DWORD PTR [ebp-0x14]
  427014:	xor    eax,ecx
  427016:	add    eax,edx
  427018:	cmp    esi,eax
  42701a:	je     0x4271e7
  427020:	mov    eax,DWORD PTR [ebp-0xc]
  427023:	xor    eax,ecx
  427025:	add    eax,edx
  427027:	mov    DWORD PTR [ebp-0x24],eax
  42702a:	mov    eax,DWORD PTR [ebp-0xc]
  42702d:	xor    eax,ecx
  42702f:	add    eax,edx
  427031:	mov    DWORD PTR [ebp-0x28],eax
  427034:	mov    edi,DWORD PTR [ebp-0x20]
  427037:	mov    ebx,DWORD PTR [ebp-0x8]
  42703a:	mov    esi,0x8a4
  42703f:	xor    edi,esi
  427041:	mov    eax,0x72ec
  427046:	xor    ebx,esi
  427048:	add    edi,eax
  42704a:	add    ebx,eax
  42704c:	sub    ebx,edi
  42704e:	mov    WORD PTR [ebp-0x8],bx
  427052:	jmp    0x427117
  427057:	mov    edi,DWORD PTR [ebp-0xc]
  42705a:	mov    bx,WORD PTR [ebp-0x4]
  42705e:	xor    edi,esi
  427060:	add    edi,eax
  427062:	cmp    bx,di
  427065:	je     0x427159
  42706b:	mov    edi,DWORD PTR [ebp-0xc]
  42706e:	mov    ebx,DWORD PTR [ebp+0xc]
  427071:	xor    edi,ecx
  427073:	add    edi,edx
  427075:	cmp    ebx,edi
  427077:	mov    di,WORD PTR [ebp-0x4]
  42707b:	mov    bx,WORD PTR [ebp+0x8]
  42707f:	je     0x4270ea
  427081:	cmp    bx,di
  427084:	je     0x4270f3
  427086:	mov    edi,DWORD PTR [ebp-0x20]
  427089:	mov    bx,WORD PTR [ebp+0x8]
  42708d:	xor    edi,esi
  42708f:	add    edi,eax
  427091:	cmp    bx,di
  427094:	jb     0x4270b4
  427096:	mov    edi,DWORD PTR [ebp-0x2c]
  427099:	mov    bx,WORD PTR [ebp+0x8]
  42709d:	xor    edi,esi
  42709f:	add    edi,eax
  4270a1:	cmp    bx,di
  4270a4:	ja     0x4270b4
  4270a6:	movzx  edi,WORD PTR [ebp+0x8]
  4270aa:	movzx  ebx,WORD PTR [ebp-0x8]
  4270ae:	add    edi,ebx
  4270b0:	mov    WORD PTR [ebp+0x8],di
  4270b4:	mov    edi,DWORD PTR [ebp-0x20]
  4270b7:	mov    bx,WORD PTR [ebp-0x4]
  4270bb:	xor    edi,esi
  4270bd:	add    edi,eax
  4270bf:	cmp    bx,di
  4270c2:	jb     0x4270e2
  4270c4:	mov    edi,DWORD PTR [ebp-0x2c]
  4270c7:	mov    bx,WORD PTR [ebp-0x4]
  4270cb:	xor    edi,esi
  4270cd:	add    edi,eax
  4270cf:	cmp    bx,di
  4270d2:	ja     0x4270e2
  4270d4:	movzx  edi,WORD PTR [ebp-0x4]
  4270d8:	movzx  ebx,WORD PTR [ebp-0x8]
  4270dc:	add    edi,ebx
  4270de:	mov    WORD PTR [ebp-0x4],di
  4270e2:	mov    di,WORD PTR [ebp-0x4]
  4270e6:	mov    bx,WORD PTR [ebp+0x8]
  4270ea:	cmp    bx,di
  4270ed:	jne    0x4271e7
  4270f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4270f6:	mov    ebx,DWORD PTR [ebp-0x10]
  4270f9:	xor    edi,ecx
  4270fb:	lea    edi,[edi+ebx*1+0x3272ec]
  427102:	mov    DWORD PTR [ebp-0x10],edi
  427105:	mov    edi,DWORD PTR [ebp-0x1c]
  427108:	mov    ebx,DWORD PTR [ebp-0x14]
  42710b:	xor    edi,ecx
  42710d:	lea    edi,[edi+ebx*1+0x3272ec]
  427114:	mov    DWORD PTR [ebp-0x14],edi
  427117:	mov    edi,DWORD PTR [ebp-0x24]
  42711a:	mov    ebx,DWORD PTR [ebp-0x10]
  42711d:	mov    di,WORD PTR [ebx+edi*2]
  427121:	mov    WORD PTR [ebp+0x8],di
  427125:	mov    edi,DWORD PTR [ebp-0x28]
  427128:	mov    ebx,DWORD PTR [ebp-0x14]
  42712b:	mov    di,WORD PTR [ebx+edi*2]
  42712f:	mov    WORD PTR [ebp-0x4],di
  427133:	mov    edi,DWORD PTR [ebp-0xc]
  427136:	mov    bx,WORD PTR [ebp+0x8]
  42713a:	xor    edi,esi
  42713c:	add    edi,eax
  42713e:	cmp    bx,di
  427141:	jne    0x427057
  427147:	mov    eax,DWORD PTR [ebp-0x18]
  42714a:	mov    esi,DWORD PTR [ebp-0xc]
  42714d:	xor    eax,ecx
  42714f:	add    eax,edx
  427151:	imul   eax,esi
  427154:	mov    DWORD PTR [ebp-0xc],eax
  427157:	jmp    0x42716b
  427159:	mov    eax,DWORD PTR [ebp-0xc]
  42715c:	mov    esi,DWORD PTR [ebp-0x18]
  42715f:	xor    eax,ecx
  427161:	lea    eax,[eax+esi*1+0x3272ec]
  427168:	mov    DWORD PTR [ebp-0x18],eax
  42716b:	mov    eax,DWORD PTR [ebp-0x24]
  42716e:	sub    eax,edx
  427170:	xor    eax,ecx
  427172:	mov    DWORD PTR [ebp-0x30],eax
  427175:	mov    eax,DWORD PTR [ebp-0x28]
  427178:	sub    eax,edx
  42717a:	xor    eax,ecx
  42717c:	mov    DWORD PTR [ebp-0x34],eax
  42717f:	mov    eax,DWORD PTR [ebp-0x34]
  427182:	mov    esi,DWORD PTR [ebp-0x1c]
  427185:	xor    esi,ecx
  427187:	add    esi,edx
  427189:	xor    eax,ecx
  42718b:	add    eax,0x3272ec
  427190:	imul   esi,eax
  427193:	mov    eax,DWORD PTR [ebp-0x14]
  427196:	movzx  eax,WORD PTR [esi+eax*1]
  42719a:	mov    esi,DWORD PTR [ebp-0x30]
  42719d:	mov    edi,DWORD PTR [ebp-0x1c]
  4271a0:	xor    esi,ecx
  4271a2:	add    esi,edx
  4271a4:	xor    edi,ecx
  4271a6:	add    edi,edx
  4271a8:	imul   edi,esi
  4271ab:	mov    esi,DWORD PTR [ebp-0x10]
  4271ae:	movzx  esi,WORD PTR [edi+esi*1]
  4271b2:	sub    eax,edx
  4271b4:	sub    esi,edx
  4271b6:	xor    eax,ecx
  4271b8:	xor    esi,ecx
  4271ba:	cmp    esi,eax
  4271bc:	jne    0x4271e7
  4271be:	mov    eax,DWORD PTR [ebp-0x30]
  4271c1:	mov    esi,DWORD PTR [ebp-0x1c]
  4271c4:	xor    eax,ecx
  4271c6:	add    eax,0x3272ec
  4271cb:	xor    esi,ecx
  4271cd:	add    esi,edx
  4271cf:	imul   esi,eax
  4271d2:	mov    eax,DWORD PTR [ebp-0x10]
  4271d5:	movzx  eax,WORD PTR [esi+eax*1]
  4271d9:	mov    esi,DWORD PTR [ebp-0xc]
  4271dc:	sub    eax,edx
  4271de:	xor    eax,ecx
  4271e0:	cmp    eax,esi
  4271e2:	mov    eax,DWORD PTR [ebp-0xc]
  4271e5:	je     0x4271ea
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	pop    edi
  4271eb:	xor    eax,ecx
  4271ed:	pop    esi
  4271ee:	add    eax,edx
  4271f0:	pop    ebx
  4271f1:	leave  
  4271f2:	ret    0x8
  4271f5:	push   ebp
  4271f6:	mov    ebp,esp
  4271f8:	push   ecx
  4271f9:	mov    cx,WORD PTR [eax]
  4271fc:	push   esi
  4271fd:	mov    esi,0x3b56
  427202:	sub    cx,si
  427205:	mov    esi,0x8a94
  42720a:	xor    cx,si
  42720d:	mov    esi,0x4e3e
  427212:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427219:	mov    edx,0xf89c85b0
  42721e:	cmp    cx,si
  427221:	je     0x427280
  427223:	push   ebx
  427224:	push   edi
  427225:	movzx  ecx,cx
  427228:	mov    edi,0xffcd8d14
  42722d:	mov    esi,0x75108a4
  427232:	mov    ebx,0x4f92
  427237:	cmp    cx,bx
  42723a:	jne    0x42723f
  42723c:	mov    DWORD PTR [ebp-0x4],edx
  42723f:	lea    edx,[edi+0x1]
  427242:	xor    edx,esi
  427244:	mov    edi,edx
  427246:	xor    edi,esi
  427248:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  427250:	mov    ebx,0x3b56
  427255:	sub    cx,bx
  427258:	mov    ebx,0x8a94
  42725d:	xor    cx,bx
  427260:	mov    ebx,0x4e3e
  427265:	cmp    cx,bx
  427268:	jne    0x427232
  42726a:	mov    ecx,DWORD PTR [ebp-0x4]
  42726d:	pop    edi
  42726e:	pop    ebx
  42726f:	cmp    ecx,0xf89c85b7
  427275:	je     0x427280
  427277:	xor    ecx,esi
  427279:	lea    eax,[eax+ecx*2+0x64e5da]
  427280:	pop    esi
  427281:	leave  
  427282:	ret    
  427283:	push   ebp
  427284:	mov    ebp,esp
  427286:	push   ecx
  427287:	push   esi
  427288:	push   edi
  427289:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427290:	mov    esi,0xf89c85b0
  427295:	call   0x4271f5
  42729a:	mov    edi,eax
  42729c:	mov    al,BYTE PTR [edi]
  42729e:	add    al,0x3
  4272a0:	xor    al,0x79
  4272a2:	cmp    al,0x7a
  4272a4:	je     0x427307
  4272a6:	mov    eax,edi
  4272a8:	mov    edx,0xffcd8d14
  4272ad:	mov    ecx,0x75108a4
  4272b2:	push   ebx
  4272b3:	mov    ax,WORD PTR [eax]
  4272b6:	mov    ebx,0x3b56
  4272bb:	sub    ax,bx
  4272be:	mov    ebx,0x8a94
  4272c3:	xor    ax,bx
  4272c6:	mov    ebx,0x4e4c
  4272cb:	cmp    ax,bx
  4272ce:	jne    0x4272d3
  4272d0:	mov    DWORD PTR [ebp-0x4],esi
  4272d3:	lea    esi,[edx+0x1]
  4272d6:	xor    esi,ecx
  4272d8:	mov    edx,esi
  4272da:	xor    edx,ecx
  4272dc:	lea    eax,[edi+edx*2+0x64e5d8]
  4272e3:	mov    bl,BYTE PTR [eax]
  4272e5:	add    bl,0x3
  4272e8:	xor    bl,0x79
  4272eb:	cmp    bl,0x7a
  4272ee:	jne    0x4272b3
  4272f0:	mov    eax,DWORD PTR [ebp-0x4]
  4272f3:	pop    ebx
  4272f4:	cmp    eax,0xf89c85b7
  4272f9:	je     0x427307
  4272fb:	xor    eax,ecx
  4272fd:	xor    ecx,ecx
  4272ff:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  427307:	mov    eax,edi
  427309:	pop    edi
  42730a:	pop    esi
  42730b:	leave  
  42730c:	ret    
  42730d:	push   ebp
  42730e:	mov    ebp,esp
  427310:	push   ecx
  427311:	push   esi
  427312:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427319:	mov    esi,0xf89c85b0
  42731e:	call   0x4271f5
  427323:	mov    cx,WORD PTR [eax]
  427326:	mov    edx,0x3b56
  42732b:	sub    cx,dx
  42732e:	mov    edx,0x8a94
  427333:	xor    cx,dx
  427336:	mov    edx,0x4e3e
  42733b:	cmp    cx,dx
  42733e:	je     0x427397
  427340:	push   ebx
  427341:	push   edi
  427342:	movzx  ecx,cx
  427345:	mov    edx,0xffcd8d14
  42734a:	mov    edi,0x75108a4
  42734f:	mov    ebx,0x4e4c
  427354:	cmp    cx,bx
  427357:	jne    0x42735c
  427359:	mov    DWORD PTR [ebp-0x4],esi
  42735c:	lea    esi,[edx+0x1]
  42735f:	xor    esi,edi
  427361:	mov    edx,esi
  427363:	xor    edx,edi
  427365:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42736d:	mov    ebx,0x3b56
  427372:	sub    cx,bx
  427375:	mov    ebx,0x8a94
  42737a:	xor    cx,bx
  42737d:	mov    ebx,0x4e3e
  427382:	cmp    cx,bx
  427385:	jne    0x42734f
  427387:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42738e:	pop    edi
  42738f:	pop    ebx
  427390:	je     0x427397
  427392:	xor    eax,eax
  427394:	inc    eax
  427395:	jmp    0x427399
  427397:	xor    eax,eax
  427399:	pop    esi
  42739a:	leave  
  42739b:	ret    
  42739c:	push   ebp
  42739d:	mov    ebp,esp
  42739f:	push   ecx
  4273a0:	mov    eax,DWORD PTR [ebp+0x8]
  4273a3:	movzx  ecx,WORD PTR [eax]
  4273a6:	push   esi
  4273a7:	lea    eax,[ecx-0x3b56]
  4273ad:	mov    esi,0x8a94
  4273b2:	push   edi
  4273b3:	xor    eax,esi
  4273b5:	mov    edi,0x4e3e
  4273ba:	mov    DWORD PTR [ebp-0x4],edx
  4273bd:	cmp    ax,di
  4273c0:	je     0x4273ed
  4273c2:	mov    eax,DWORD PTR [ebp+0x8]
  4273c5:	sub    eax,edx
  4273c7:	mov    DWORD PTR [ebp+0x8],eax
  4273ca:	jmp    0x4273cf
  4273cc:	mov    eax,DWORD PTR [ebp+0x8]
  4273cf:	mov    WORD PTR [edx],cx
  4273d2:	add    edx,0x2
  4273d5:	movzx  edi,WORD PTR [eax+edx*1]
  4273d9:	mov    ecx,edi
  4273db:	add    edi,0xffffc4aa
  4273e1:	xor    edi,esi
  4273e3:	mov    eax,0x4e3e
  4273e8:	cmp    di,ax
  4273eb:	jne    0x4273cc
  4273ed:	xor    eax,eax
  4273ef:	pop    edi
  4273f0:	mov    WORD PTR [edx],ax
  4273f3:	mov    eax,DWORD PTR [ebp-0x4]
  4273f6:	pop    esi
  4273f7:	leave  
  4273f8:	ret    0x4
  4273fb:	push   ebp
  4273fc:	mov    ebp,esp
  4273fe:	sub    esp,0x18
  427401:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  427408:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42740f:	mov    ecx,DWORD PTR [ebp-0x8]
  427412:	push   esi
  427413:	mov    eax,0x75108a4
  427418:	xor    ecx,eax
  42741a:	mov    esi,0x3272ec
  42741f:	add    ecx,esi
  427421:	mov    DWORD PTR [ebp-0x4],ecx
  427424:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42742b:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  427432:	push   edi
  427433:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  42743a:	jmp    0x4274db
  42743f:	mov    ecx,DWORD PTR [ebp-0x4]
  427442:	mov    edx,DWORD PTR [ebp+0x10]
  427445:	sub    edx,ecx
  427447:	mov    ecx,DWORD PTR [ebp-0xc]
  42744a:	xor    ecx,eax
  42744c:	add    ecx,esi
  42744e:	cmp    edx,ecx
  427450:	jbe    0x42746d
  427452:	mov    edx,DWORD PTR [ebp-0x4]
  427455:	add    edx,DWORD PTR [ebp+0x8]
  427458:	mov    ecx,DWORD PTR [ebp-0x4]
  42745b:	add    ecx,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ecx]
  427460:	mov    DWORD PTR [edx],edi
  427462:	mov    ecx,DWORD PTR [ecx+0x4]
  427465:	mov    DWORD PTR [edx+0x4],ecx
  427468:	mov    ecx,DWORD PTR [ebp-0xc]
  42746b:	jmp    0x4274ba
  42746d:	mov    ecx,DWORD PTR [ebp-0x4]
  427470:	mov    edx,DWORD PTR [ebp+0x10]
  427473:	sub    edx,ecx
  427475:	mov    ecx,DWORD PTR [ebp-0x10]
  427478:	xor    ecx,eax
  42747a:	add    ecx,esi
  42747c:	cmp    edx,ecx
  42747e:	mov    ecx,DWORD PTR [ebp-0x4]
  427481:	jbe    0x427495
  427483:	add    ecx,DWORD PTR [ebp+0x8]
  427486:	mov    edx,DWORD PTR [ebp-0x4]
  427489:	add    edx,DWORD PTR [ebp+0xc]
  42748c:	mov    edx,DWORD PTR [edx]
  42748e:	mov    DWORD PTR [ecx],edx
  427490:	mov    ecx,DWORD PTR [ebp-0x10]
  427493:	jmp    0x4274ba
  427495:	mov    edx,DWORD PTR [ebp+0x10]
  427498:	sub    edx,ecx
  42749a:	mov    ecx,DWORD PTR [ebp-0x14]
  42749d:	xor    ecx,eax
  42749f:	add    ecx,esi
  4274a1:	cmp    edx,ecx
  4274a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4274a6:	jbe    0x4274cb
  4274a8:	add    ecx,DWORD PTR [ebp+0x8]
  4274ab:	mov    edx,DWORD PTR [ebp-0x4]
  4274ae:	add    edx,DWORD PTR [ebp+0xc]
  4274b1:	mov    dx,WORD PTR [edx]
  4274b4:	mov    WORD PTR [ecx],dx
  4274b7:	mov    ecx,DWORD PTR [ebp-0x14]
  4274ba:	mov    edx,DWORD PTR [ebp-0x4]
  4274bd:	xor    ecx,eax
  4274bf:	lea    ecx,[ecx+edx*1+0x3272ec]
  4274c6:	mov    DWORD PTR [ebp-0x4],ecx
  4274c9:	jmp    0x4274db
  4274cb:	add    ecx,DWORD PTR [ebp+0x8]
  4274ce:	mov    edx,DWORD PTR [ebp-0x4]
  4274d1:	add    edx,DWORD PTR [ebp+0xc]
  4274d4:	mov    dl,BYTE PTR [edx]
  4274d6:	mov    BYTE PTR [ecx],dl
  4274d8:	inc    DWORD PTR [ebp-0x4]
  4274db:	mov    ecx,DWORD PTR [ebp-0x18]
  4274de:	mov    edx,DWORD PTR [ebp+0x10]
  4274e1:	xor    ecx,eax
  4274e3:	add    ecx,esi
  4274e5:	imul   ecx,edx
  4274e8:	mov    edx,DWORD PTR [ebp-0x8]
  4274eb:	mov    edi,DWORD PTR [ebp-0x4]
  4274ee:	xor    edx,eax
  4274f0:	lea    edx,[edx+edi*1+0x3272ec]
  4274f7:	cmp    edx,ecx
  4274f9:	jb     0x42743f
  4274ff:	pop    edi
  427500:	pop    esi
  427501:	leave  
  427502:	ret    0xc
  427505:	push   ebp
  427506:	mov    ebp,esp
  427508:	sub    esp,0xc
  42750b:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  427512:	push   esi
  427513:	mov    esi,eax
  427515:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42751c:	mov    edx,DWORD PTR [ebp-0x4]
  42751f:	mov    eax,0x75108a4
  427524:	xor    edx,eax
  427526:	mov    ecx,0x3272ec
  42752b:	add    edx,ecx
  42752d:	cmp    esi,edx
  42752f:	je     0x427571
  427531:	push   ebx
  427532:	push   edi
  427533:	mov    edx,DWORD PTR [ebp-0x8]
  427536:	mov    ebx,DWORD PTR [ebp+0x8]
  427539:	xor    edx,eax
  42753b:	mov    edi,0xffcd8d14
  427540:	sub    edi,edx
  427542:	add    esi,edi
  427544:	lea    edx,[esi-0x3272ec]
  42754a:	xor    edx,eax
  42754c:	mov    DWORD PTR [ebp-0xc],edx
  42754f:	mov    edx,DWORD PTR [ebp-0x4]
  427552:	mov    edi,DWORD PTR [ebp-0xc]
  427555:	xor    dl,0xa4
  427558:	sub    dl,0x14
  42755b:	xor    edi,eax
  42755d:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  427564:	mov    edx,DWORD PTR [ebp-0x4]
  427567:	xor    edx,eax
  427569:	add    edx,ecx
  42756b:	cmp    esi,edx
  42756d:	jne    0x427533
  42756f:	pop    edi
  427570:	pop    ebx
  427571:	pop    esi
  427572:	leave  
  427573:	ret    0x4
  427576:	push   ebp
  427577:	mov    ebp,esp
  427579:	sub    esp,0x21c
  42757f:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  427586:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42758d:	mov    eax,DWORD PTR [ebp+0x10]
  427590:	mov    eax,DWORD PTR [ebp-0x4]
  427593:	mov    ecx,DWORD PTR [ebp+0x8]
  427596:	push   esi
  427597:	push   edi
  427598:	mov    edi,0x75108a4
  42759d:	xor    eax,edi
  42759f:	mov    esi,0x3272ec
  4275a4:	add    eax,esi
  4275a6:	cmp    eax,ecx
  4275a8:	mov    eax,DWORD PTR [ebp-0x4]
  4275ab:	jne    0x4275b6
  4275ad:	xor    eax,edi
  4275af:	add    eax,esi
  4275b1:	jmp    0x427662
  4275b6:	mov    ecx,DWORD PTR [ebp+0xc]
  4275b9:	xor    eax,edi
  4275bb:	add    eax,esi
  4275bd:	cmp    eax,ecx
  4275bf:	jne    0x4275c6
  4275c1:	mov    eax,DWORD PTR [ebp-0x4]
  4275c4:	jmp    0x4275ad
  4275c6:	lea    eax,[ebp-0x21c]
  4275cc:	mov    DWORD PTR [ebp-0x8],eax
  4275cf:	mov    eax,DWORD PTR [ebp+0xc]
  4275d2:	mov    DWORD PTR [ebp-0x10],eax
  4275d5:	mov    eax,DWORD PTR [ebp-0x4]
  4275d8:	xor    eax,edi
  4275da:	add    eax,esi
  4275dc:	mov    DWORD PTR [ebp+0x10],eax
  4275df:	mov    eax,DWORD PTR [ebp+0xc]
  4275e2:	push   ebx
  4275e3:	call   0x42730d
  4275e8:	mov    ebx,eax
  4275ea:	mov    eax,DWORD PTR [ebp+0x8]
  4275ed:	mov    eax,DWORD PTR [eax+0x14]
  4275f0:	jmp    0x42764a
  4275f2:	mov    eax,DWORD PTR [ebp+0xc]
  4275f5:	sub    eax,0x8
  4275f8:	mov    DWORD PTR [ebp-0xc],eax
  4275fb:	mov    eax,DWORD PTR [ebp-0xc]
  4275fe:	mov    eax,DWORD PTR [eax+0x28]
  427601:	call   0x4271f5
  427606:	mov    DWORD PTR [ebp+0x10],eax
  427609:	push   DWORD PTR [ebp+0x10]
  42760c:	mov    edx,DWORD PTR [ebp-0x8]
  42760f:	call   0x42739c
  427614:	mov    eax,DWORD PTR [ebp-0x4]
  427617:	xor    eax,edi
  427619:	add    eax,esi
  42761b:	cmp    eax,ebx
  42761d:	jne    0x427627
  42761f:	mov    eax,DWORD PTR [ebp-0x8]
  427622:	call   0x427283
  427627:	mov    eax,DWORD PTR [ebp-0x14]
  42762a:	xor    eax,edi
  42762c:	add    eax,esi
  42762e:	push   eax
  42762f:	push   DWORD PTR [ebp-0x10]
  427632:	mov    eax,DWORD PTR [ebp-0x8]
  427635:	call   0x426faf
  42763a:	mov    ecx,DWORD PTR [ebp-0x4]
  42763d:	xor    ecx,edi
  42763f:	add    ecx,esi
  427641:	cmp    eax,ecx
  427643:	je     0x427668
  427645:	mov    eax,DWORD PTR [ebp+0xc]
  427648:	mov    eax,DWORD PTR [eax]
  42764a:	mov    DWORD PTR [ebp+0xc],eax
  42764d:	mov    eax,DWORD PTR [ebp+0x8]
  427650:	mov    ecx,DWORD PTR [ebp+0xc]
  427653:	add    eax,0x14
  427656:	cmp    ecx,eax
  427658:	jne    0x4275f2
  42765a:	mov    eax,DWORD PTR [ebp-0x4]
  42765d:	xor    eax,edi
  42765f:	add    eax,esi
  427661:	pop    ebx
  427662:	pop    edi
  427663:	pop    esi
  427664:	leave  
  427665:	ret    0xc
  427668:	mov    eax,DWORD PTR [ebp-0xc]
  42766b:	mov    eax,DWORD PTR [eax+0x18]
  42766e:	jmp    0x427661
  427670:	push   ebp
  427671:	mov    ebp,esp
  427673:	mov    eax,DWORD PTR [ebp+0xc]
  427676:	sub    esp,0x10
  427679:	cmp    DWORD PTR [ebp+0x8],0x0
  42767d:	push   ebx
  42767e:	push   esi
  42767f:	push   edi
  427680:	je     0x427735
  427686:	test   eax,eax
  427688:	je     0x427735
  42768e:	movzx  eax,WORD PTR [eax+0x20]
  427692:	mov    ecx,eax
  427694:	mov    DWORD PTR [ebp-0x10],eax
  427697:	xor    edx,edx
  427699:	and    DWORD PTR [ebp-0x8],edx
  42769c:	mov    eax,0x8a94
  4276a1:	xor    ecx,eax
  4276a3:	add    ecx,0x3b56
  4276a9:	mov    DWORD PTR [ebp-0xc],ecx
  4276ac:	and    DWORD PTR [ebp-0x4],0x0
  4276b0:	xor    ecx,ecx
  4276b2:	push   0x7c
  4276b4:	pop    edi
  4276b5:	cmp    cx,WORD PTR [ebp-0xc]
  4276b9:	jae    0x42771f
  4276bb:	lea    esi,[edx-0x3b56]
  4276c1:	xor    esi,eax
  4276c3:	movzx  ecx,WORD PTR [ebp-0x4]
  4276c7:	mov    ebx,DWORD PTR [ebp+0xc]
  4276ca:	lea    ecx,[ebx+ecx*4]
  4276cd:	cmp    WORD PTR [ecx+0x2],si
  4276d1:	jne    0x42770a
  4276d3:	movzx  ecx,WORD PTR [ecx]
  4276d6:	mov    edi,0x4e3e
  4276db:	cmp    cx,di
  4276de:	jne    0x4276ec
  4276e0:	mov    ebx,DWORD PTR [ebp+0x8]
  4276e3:	movzx  edi,dx
  4276e6:	cmp    BYTE PTR [edi+ebx*1],0x0
  4276ea:	je     0x427719
  4276ec:	mov    ebx,DWORD PTR [ebp+0x8]
  4276ef:	movzx  edi,dx
  4276f2:	movsx  di,BYTE PTR [edi+ebx*1]
  4276f7:	mov    ebx,0x3b56
  4276fc:	sub    di,bx
  4276ff:	xor    di,ax
  427702:	cmp    cx,di
  427705:	je     0x427719
  427707:	push   0x7a
  427709:	pop    edi
  42770a:	inc    DWORD PTR [ebp-0x4]
  42770d:	mov    cx,WORD PTR [ebp-0xc]
  427711:	cmp    WORD PTR [ebp-0x4],cx
  427715:	jb     0x4276c3
  427717:	jmp    0x42771f
  427719:	inc    DWORD PTR [ebp-0x8]
  42771c:	push   0x7d
  42771e:	pop    edi
  42771f:	mov    esi,DWORD PTR [ebp+0x8]
  427722:	movzx  ecx,dx
  427725:	cmp    BYTE PTR [ecx+esi*1],0x0
  427729:	je     0x42773e
  42772b:	inc    edx
  42772c:	cmp    edi,0x7a
  42772f:	jne    0x4276ac
  427735:	xor    eax,eax
  427737:	pop    edi
  427738:	pop    esi
  427739:	pop    ebx
  42773a:	leave  
  42773b:	ret    0x8
  42773e:	mov    ecx,DWORD PTR [ebp-0x8]
  427741:	add    ecx,0xffffc4aa
  427747:	xor    cx,ax
  42774a:	xor    eax,eax
  42774c:	cmp    cx,WORD PTR [ebp-0x10]
  427750:	sete   al
  427753:	jmp    0x427737
  427755:	push   ebp
  427756:	mov    ebp,esp
  427758:	sub    esp,0x50
  42775b:	push   edi
  42775c:	mov    edi,eax
  42775e:	mov    eax,DWORD PTR [edi+0x1a8]
  427764:	cmp    DWORD PTR [eax],0x0
  427767:	jne    0x427770
  427769:	xor    eax,eax
  42776b:	jmp    0x4278a1
  427770:	push   DWORD PTR [ebp+0x8]
  427773:	push   0x2c
  427775:	pop    eax
  427776:	call   0x427505
  42777b:	mov    edx,DWORD PTR [edi+0x1ac]
  427781:	lea    eax,[edi+0x22]
  427784:	mov    DWORD PTR [ebp-0x4c],eax
  427787:	lea    eax,[edi+0x44]
  42778a:	mov    DWORD PTR [ebp-0x48],eax
  42778d:	lea    eax,[edi+0x66]
  427790:	mov    DWORD PTR [ebp-0x44],eax
  427793:	lea    eax,[edi+0x88]
  427799:	mov    DWORD PTR [ebp-0x40],eax
  42779c:	lea    eax,[edi+0xaa]
  4277a2:	mov    DWORD PTR [ebp-0x3c],eax
  4277a5:	lea    eax,[edi+0xcc]
  4277ab:	mov    DWORD PTR [ebp-0x38],eax
  4277ae:	lea    eax,[edi+0xee]
  4277b4:	mov    DWORD PTR [ebp-0x34],eax
  4277b7:	lea    eax,[edi+0x110]
  4277bd:	mov    DWORD PTR [ebp-0x30],eax
  4277c0:	lea    eax,[edi+0x132]
  4277c6:	mov    DWORD PTR [ebp-0x2c],eax
  4277c9:	lea    eax,[edi+0x154]
  4277cf:	push   edi
  4277d0:	mov    DWORD PTR [ebp-0x50],edi
  4277d3:	mov    DWORD PTR [ebp-0x28],eax
  4277d6:	call   0x4278d5
  4277db:	push   eax
  4277dc:	mov    eax,DWORD PTR [edi+0x1a8]
  4277e2:	push   DWORD PTR [eax]
  4277e4:	call   0x427576
  4277e9:	mov    DWORD PTR [ebp-0x10],eax
  4277ec:	test   eax,eax
  4277ee:	je     0x4278a1
  4277f4:	mov    ecx,DWORD PTR [eax+0x3c]
  4277f7:	push   ebx
  4277f8:	push   esi
  4277f9:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4277fd:	add    esi,eax
  4277ff:	mov    edi,DWORD PTR [esi+0x24]
  427802:	mov    ecx,DWORD PTR [esi+0x1c]
  427805:	mov    edx,DWORD PTR [esi+0x20]
  427808:	mov    ebx,DWORD PTR [esi+0x18]
  42780b:	add    edi,eax
  42780d:	mov    DWORD PTR [ebp-0x20],edi
  427810:	mov    edi,DWORD PTR [esi+0x14]
  427813:	add    ecx,eax
  427815:	add    edx,eax
  427817:	mov    DWORD PTR [ebp-0xc],ecx
  42781a:	mov    DWORD PTR [ebp-0x1c],edx
  42781d:	mov    DWORD PTR [ebp-0x8],edi
  427820:	cmp    edi,ebx
  427822:	ja     0x427827
  427824:	mov    DWORD PTR [ebp-0x8],ebx
  427827:	xor    ebx,ebx
  427829:	mov    DWORD PTR [ebp-0x18],ebx
  42782c:	cmp    DWORD PTR [ebp-0x8],ebx
  42782f:	jbe    0x42789f
  427831:	jmp    0x427836
  427833:	mov    edx,DWORD PTR [ebp-0x1c]
  427836:	mov    edi,DWORD PTR [ebp-0x20]
  427839:	movzx  edi,WORD PTR [edi+ebx*2]
  42783d:	cmp    ebx,DWORD PTR [esi+0x18]
  427840:	jae    0x42789f
  427842:	cmp    edi,DWORD PTR [esi+0x14]
  427845:	jae    0x42789f
  427847:	mov    ebx,DWORD PTR [edx+ebx*4]
  42784a:	mov    edx,DWORD PTR [ebp+0x8]
  42784d:	mov    edi,DWORD PTR [ecx+edi*4]
  427850:	mov    DWORD PTR [ebp-0x4],edx
  427853:	lea    edx,[ebp-0x50]
  427856:	add    ebx,eax
  427858:	add    edi,eax
  42785a:	sub    edx,DWORD PTR [ebp+0x8]
  42785d:	mov    DWORD PTR [ebp-0x14],0xb
  427864:	mov    DWORD PTR [ebp-0x24],edx
  427867:	mov    edx,DWORD PTR [ebp-0x4]
  42786a:	cmp    DWORD PTR [edx],0x0
  42786d:	jne    0x42788a
  42786f:	mov    eax,DWORD PTR [ebp-0x24]
  427872:	push   DWORD PTR [eax+edx*1]
  427875:	push   ebx
  427876:	call   0x427670
  42787b:	mov    ecx,DWORD PTR [ebp-0xc]
  42787e:	test   eax,eax
  427880:	je     0x427887
  427882:	mov    eax,DWORD PTR [ebp-0x4]
  427885:	mov    DWORD PTR [eax],edi
  427887:	mov    eax,DWORD PTR [ebp-0x10]
  42788a:	add    DWORD PTR [ebp-0x4],0x4
  42788e:	dec    DWORD PTR [ebp-0x14]
  427891:	jne    0x427867
  427893:	mov    ebx,DWORD PTR [ebp-0x18]
  427896:	inc    ebx
  427897:	mov    DWORD PTR [ebp-0x18],ebx
  42789a:	cmp    ebx,DWORD PTR [ebp-0x8]
  42789d:	jb     0x427833
  42789f:	pop    esi
  4278a0:	pop    ebx
  4278a1:	pop    edi
  4278a2:	leave  
  4278a3:	ret    0x4
  4278a6:	push   ebp
  4278a7:	mov    ebp,esp
  4278a9:	mov    eax,DWORD PTR [ebp+0x8]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [eax+0x1d8]
  4278b3:	lea    esi,[eax+0x198]
  4278b9:	mov    eax,DWORD PTR [ebp+0x8]
  4278bc:	call   0x427755
  4278c1:	mov    ecx,DWORD PTR [esi]
  4278c3:	mov    DWORD PTR [ecx],eax
  4278c5:	mov    eax,DWORD PTR [esi]
  4278c7:	xor    ecx,ecx
  4278c9:	cmp    DWORD PTR [eax],ecx
  4278cb:	pop    esi
  4278cc:	setne  cl
  4278cf:	mov    eax,ecx
  4278d1:	pop    ebp
  4278d2:	ret    0x4
  4278d5:	mov    ecx,DWORD PTR [edi+0x188]
  4278db:	push   ebx
  4278dc:	jmp    0x4278f1
  4278de:	xor    eax,0x8a94
  4278e3:	add    eax,0x3b56
  4278e8:	mov    WORD PTR [ecx],ax
  4278eb:	add    ecx,0x2
  4278ee:	add    edx,0x2
  4278f1:	movzx  eax,WORD PTR [edx]
  4278f4:	mov    ebx,0x4e3e
  4278f9:	cmp    ax,bx
  4278fc:	jne    0x4278de
  4278fe:	xor    eax,eax
  427900:	mov    WORD PTR [ecx],ax
  427903:	mov    eax,DWORD PTR [edi+0x188]
  427909:	pop    ebx
  42790a:	ret    
  42790b:	push   edi
  42790c:	mov    edi,eax
  42790e:	mov    eax,DWORD PTR [esi+0x188]
  427914:	shl    edi,0x6
  427917:	add    eax,edi
  427919:	jmp    0x427925
  42791b:	xor    cl,0x79
  42791e:	sub    cl,0x3
  427921:	mov    BYTE PTR [eax],cl
  427923:	inc    eax
  427924:	inc    edx
  427925:	mov    cl,BYTE PTR [edx]
  427927:	cmp    cl,0x7a
  42792a:	jne    0x42791b
  42792c:	mov    BYTE PTR [eax],0x0
  42792f:	mov    eax,DWORD PTR [esi+0x188]
  427935:	add    eax,edi
  427937:	pop    edi
  427938:	ret    
  427939:	push   ebp
  42793a:	mov    ebp,esp
  42793c:	sub    esp,0x14
  42793f:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  427946:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  42794d:	mov    eax,DWORD PTR [ebx]
  42794f:	mov    DWORD PTR [ebp-0x8],eax
  427952:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427959:	push   esi
  42795a:	push   edi
  42795b:	mov    DWORD PTR [ebp-0x14],0xead71890
  427962:	mov    edi,DWORD PTR [ebp-0x4]
  427965:	mov    ecx,DWORD PTR [ebp-0x10]
  427968:	mov    eax,0x75108a4
  42796d:	xor    edi,eax
  42796f:	mov    edx,0x3272ec
  427974:	xor    ecx,eax
  427976:	add    edi,edx
  427978:	add    ecx,edx
  42797a:	imul   edi,ecx
  42797d:	jmp    0x4279c5
  42797f:	mov    ecx,DWORD PTR [ebp-0x8]
  427982:	mov    esi,DWORD PTR [ebp-0x4]
  427985:	xor    ecx,eax
  427987:	xor    esi,eax
  427989:	add    ecx,edx
  42798b:	add    esi,edx
  42798d:	test   esi,ecx
  42798f:	mov    esi,DWORD PTR [ebp-0x8]
  427992:	mov    ecx,DWORD PTR [ebp-0x4]
  427995:	je     0x4279ac
  427997:	xor    ecx,eax
  427999:	xor    esi,eax
  42799b:	add    ecx,edx
  42799d:	add    esi,edx
  42799f:	shr    esi,cl
  4279a1:	mov    ecx,DWORD PTR [ebp-0x14]
  4279a4:	xor    ecx,eax
  4279a6:	add    ecx,edx
  4279a8:	xor    esi,ecx
  4279aa:	jmp    0x4279b6
  4279ac:	xor    esi,eax
  4279ae:	xor    ecx,eax
  4279b0:	add    esi,edx
  4279b2:	add    ecx,edx
  4279b4:	shr    esi,cl
  4279b6:	mov    DWORD PTR [ebp-0x8],esi
  4279b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4279bc:	xor    ecx,eax
  4279be:	lea    edi,[edi+ecx*1+0x3272ec]
  4279c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4279c8:	mov    esi,DWORD PTR [ebp-0x4]
  4279cb:	xor    esi,eax
  4279cd:	xor    ecx,eax
  4279cf:	sub    ecx,esi
  4279d1:	cmp    edi,ecx
  4279d3:	jbe    0x42797f
  4279d5:	mov    eax,DWORD PTR [ebp-0x8]
  4279d8:	pop    edi
  4279d9:	mov    DWORD PTR [ebx],eax
  4279db:	mov    eax,DWORD PTR [ebp-0x8]
  4279de:	pop    esi
  4279df:	leave  
  4279e0:	ret    
  4279e1:	push   ebp
  4279e2:	mov    ebp,esp
  4279e4:	sub    esp,0x38
  4279e7:	push   ebx
  4279e8:	mov    ebx,0xf89c85b0
  4279ed:	mov    DWORD PTR [ebp-0x4],ebx
  4279f0:	lea    eax,[ebx+0x1]
  4279f3:	push   esi
  4279f4:	mov    DWORD PTR [ebp-0x24],eax
  4279f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4279fa:	mov    edx,DWORD PTR [ebp+0x8]
  4279fd:	mov    esi,0x75108a4
  427a02:	push   edi
  427a03:	xor    ecx,esi
  427a05:	mov    edi,0x3272ec
  427a0a:	add    ecx,edi
  427a0c:	cmp    edx,ecx
  427a0e:	je     0x427b74
  427a14:	mov    ecx,DWORD PTR [ebp-0x4]
  427a17:	mov    edx,DWORD PTR [ebp+0xc]
  427a1a:	xor    ecx,esi
  427a1c:	add    ecx,edi
  427a1e:	cmp    edx,ecx
  427a20:	je     0x427b74
  427a26:	mov    ecx,DWORD PTR [ebp+0x10]
  427a29:	mov    DWORD PTR [ebp-0x14],ecx
  427a2c:	mov    ecx,DWORD PTR [ebp+0xc]
  427a2f:	mov    edx,DWORD PTR [ebp+0x8]
  427a32:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  427a39:	mov    DWORD PTR [ebp-0x1c],eax
  427a3c:	mov    DWORD PTR [ebp-0x10],ebx
  427a3f:	mov    DWORD PTR [ebp+0xc],eax
  427a42:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  427a49:	mov    eax,DWORD PTR [ebp+0xc]
  427a4c:	xor    eax,esi
  427a4e:	mov    DWORD PTR [ebp-0x20],ecx
  427a51:	sub    ecx,eax
  427a53:	sub    ecx,edi
  427a55:	mov    DWORD PTR [ebp+0x8],ecx
  427a58:	mov    DWORD PTR [ebp-0xc],edx
  427a5b:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  427a62:	jmp    0x427b64
  427a67:	mov    eax,DWORD PTR [ebp+0xc]
  427a6a:	mov    ecx,DWORD PTR [ebp+0xc]
  427a6d:	xor    eax,esi
  427a6f:	xor    ecx,esi
  427a71:	lea    ecx,[eax+ecx*1+0x64e5d8]
  427a78:	mov    eax,DWORD PTR [ebp+0x8]
  427a7b:	xor    edx,edx
  427a7d:	div    ecx
  427a7f:	mov    eax,DWORD PTR [ebp+0x10]
  427a82:	mov    ecx,DWORD PTR [ebp+0xc]
  427a85:	xor    eax,esi
  427a87:	xor    ecx,esi
  427a89:	sub    eax,ecx
  427a8b:	cmp    edx,eax
  427a8d:	jne    0x427b23
  427a93:	mov    eax,DWORD PTR [ebp+0x8]
  427a96:	mov    ecx,DWORD PTR [ebp-0xc]
  427a99:	mov    dl,BYTE PTR [eax+ecx*1]
  427a9c:	mov    eax,DWORD PTR [ebp-0x10]
  427a9f:	mov    ecx,DWORD PTR [ebp-0x8]
  427aa2:	xor    eax,esi
  427aa4:	xor    ecx,esi
  427aa6:	add    eax,edi
  427aa8:	add    ecx,edi
  427aaa:	cmp    eax,ecx
  427aac:	jae    0x427af4
  427aae:	lea    ecx,[eax-0x3272ec]
  427ab4:	mov    DWORD PTR [ebp-0x4],ecx
  427ab7:	mov    ebx,DWORD PTR [ebp-0x4]
  427aba:	xor    ebx,esi
  427abc:	add    ebx,0x7f55d8f2
  427ac2:	lea    ecx,[ebp+eax*4-0x38]
  427ac6:	mov    DWORD PTR [ecx],ebx
  427ac8:	mov    ebx,DWORD PTR [ecx]
  427aca:	cmp    ebx,0x244ecb93
  427ad0:	jbe    0x427ada
  427ad2:	add    DWORD PTR [ecx],0x405fcdc
  427ad8:	jmp    0x427ae0
  427ada:	add    DWORD PTR [ecx],0xfdaf4324
  427ae0:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae3:	xor    ecx,esi
  427ae5:	inc    eax
  427ae6:	inc    DWORD PTR [ebp-0x4]
  427ae9:	add    ecx,edi
  427aeb:	cmp    eax,ecx
  427aed:	jb     0x427ab7
  427aef:	mov    ebx,0xf89c85b0
  427af4:	cmp    DWORD PTR [ebp-0x14],0x0
  427af8:	jne    0x427b02
  427afa:	xor    dl,0x79
  427afd:	sub    dl,0x3
  427b00:	jmp    0x427b18
  427b02:	mov    eax,DWORD PTR [ebp-0x18]
  427b05:	xor    al,0xa4
  427b07:	mov    cl,0x14
  427b09:	sub    cl,al
  427b0b:	add    dl,cl
  427b0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  427b10:	xor    cl,0xa4
  427b13:	sub    cl,0x14
  427b16:	ror    dl,cl
  427b18:	xor    eax,eax
  427b1a:	mov    eax,DWORD PTR [ebp+0x8]
  427b1d:	mov    ecx,DWORD PTR [ebp-0xc]
  427b20:	mov    BYTE PTR [eax+ecx*1],dl
  427b23:	mov    eax,DWORD PTR [ebp+0x8]
  427b26:	mov    ecx,DWORD PTR [ebp-0x10]
  427b29:	sub    eax,edi
  427b2b:	xor    eax,esi
  427b2d:	cmp    eax,ecx
  427b2f:	jne    0x427b52
  427b31:	mov    eax,DWORD PTR [ebp+0x10]
  427b34:	mov    ecx,DWORD PTR [ebp+0xc]
  427b37:	xor    eax,esi
  427b39:	xor    ecx,esi
  427b3b:	sub    eax,ecx
  427b3d:	mov    ecx,DWORD PTR [ebp-0x20]
  427b40:	sub    eax,edi
  427b42:	xor    eax,esi
  427b44:	mov    DWORD PTR [ebp+0x10],eax
  427b47:	mov    eax,DWORD PTR [ebp+0xc]
  427b4a:	xor    eax,esi
  427b4c:	sub    ecx,eax
  427b4e:	sub    ecx,edi
  427b50:	jmp    0x427b61
  427b52:	mov    eax,DWORD PTR [ebp+0xc]
  427b55:	xor    eax,esi
  427b57:	mov    ecx,0xffcd8d14
  427b5c:	sub    ecx,eax
  427b5e:	add    ecx,DWORD PTR [ebp+0x8]
  427b61:	mov    DWORD PTR [ebp+0x8],ecx
  427b64:	mov    eax,DWORD PTR [ebp+0x10]
  427b67:	cmp    eax,ebx
  427b69:	jne    0x427a67
  427b6f:	mov    eax,DWORD PTR [ebp-0x24]
  427b72:	jmp    0x427b77
  427b74:	mov    eax,DWORD PTR [ebp-0x4]
  427b77:	xor    eax,esi
  427b79:	add    eax,edi
  427b7b:	pop    edi
  427b7c:	pop    esi
  427b7d:	pop    ebx
  427b7e:	leave  
  427b7f:	ret    0xc
  427b82:	push   ebp
  427b83:	mov    ebp,esp
  427b85:	sub    esp,0x420
  427b8b:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  427b92:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427b99:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  427ba0:	push   ebx
  427ba1:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  427ba8:	mov    eax,DWORD PTR [ebp-0x14]
  427bab:	push   esi
  427bac:	mov    esi,0x75108a4
  427bb1:	push   edi
  427bb2:	xor    eax,esi
  427bb4:	mov    edi,0x3272ec
  427bb9:	add    eax,edi
  427bbb:	mov    DWORD PTR [ebp-0x8],eax
  427bbe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  427bc5:	mov    DWORD PTR [ebp-0x4],0xead71890
  427bcc:	mov    DWORD PTR [ebp-0x10],0x8
  427bd3:	mov    ecx,ecx
  427bd5:	mov    eax,DWORD PTR [ebp-0xc]
  427bd8:	mov    ecx,DWORD PTR [ebp-0x14]
  427bdb:	xor    eax,esi
  427bdd:	xor    ecx,esi
  427bdf:	add    eax,edi
  427be1:	add    ecx,edi
  427be3:	imul   eax,ecx
  427be6:	jmp    0x427c19
  427be8:	mov    eax,DWORD PTR [ebp-0x4]
  427beb:	sub    eax,edi
  427bed:	xor    eax,esi
  427bef:	mov    DWORD PTR [ebp-0x8],eax
  427bf2:	lea    ebx,[ebp-0x8]
  427bf5:	call   0x427939
  427bfa:	mov    DWORD PTR [ebp-0x8],eax
  427bfd:	mov    eax,DWORD PTR [ebp-0x8]
  427c00:	mov    ecx,DWORD PTR [ebp-0x4]
  427c03:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427c0a:	mov    eax,DWORD PTR [ebp-0xc]
  427c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  427c10:	xor    eax,esi
  427c12:	lea    eax,[eax+ecx*1+0x3272ec]
  427c19:	mov    DWORD PTR [ebp-0x4],eax
  427c1c:	mov    eax,DWORD PTR [ebp-0x18]
  427c1f:	mov    ecx,DWORD PTR [ebp-0xc]
  427c22:	xor    ecx,esi
  427c24:	xor    eax,esi
  427c26:	sub    eax,ecx
  427c28:	mov    ecx,DWORD PTR [ebp-0x4]
  427c2b:	cmp    ecx,eax
  427c2d:	jbe    0x427be8
  427c2f:	mov    eax,DWORD PTR [ebp-0x1c]
  427c32:	xor    eax,esi
  427c34:	add    eax,edi
  427c36:	mov    DWORD PTR [ebp-0x8],eax
  427c39:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  427c40:	mov    ebx,ebx
  427c42:	jmp    0x427ca5
  427c44:	mov    ecx,DWORD PTR [ebp-0x20]
  427c47:	mov    eax,DWORD PTR [ebp-0x8]
  427c4a:	xor    ecx,esi
  427c4c:	add    ecx,edi
  427c4e:	shr    eax,cl
  427c50:	mov    DWORD PTR [ebp-0x4],eax
  427c53:	mov    eax,DWORD PTR [ebp+0x8]
  427c56:	mov    cl,BYTE PTR [eax]
  427c58:	mov    BYTE PTR [ebp+0xb],cl
  427c5b:	mov    cl,BYTE PTR [ebp+0xb]
  427c5e:	mov    edx,DWORD PTR [ebp-0x8]
  427c61:	movzx  ecx,cl
  427c64:	xor    ecx,edx
  427c66:	mov    DWORD PTR [ebp+0x8],ecx
  427c69:	mov    ecx,DWORD PTR [ebp-0x18]
  427c6c:	mov    edx,DWORD PTR [ebp+0x8]
  427c6f:	xor    ecx,esi
  427c71:	add    ecx,edi
  427c73:	and    ecx,edx
  427c75:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427c7c:	mov    edx,DWORD PTR [ebp-0x4]
  427c7f:	xor    ecx,edx
  427c81:	mov    DWORD PTR [ebp-0x8],ecx
  427c84:	mov    ecx,DWORD PTR [ebp-0xc]
  427c87:	xor    ecx,esi
  427c89:	lea    eax,[eax+ecx*1+0x3272ec]
  427c90:	mov    DWORD PTR [ebp+0x8],eax
  427c93:	mov    eax,DWORD PTR [ebp-0xc]
  427c96:	xor    eax,esi
  427c98:	mov    ecx,0xffcd8d14
  427c9d:	sub    ecx,eax
  427c9f:	add    ecx,DWORD PTR [ebp-0x10]
  427ca2:	mov    DWORD PTR [ebp-0x10],ecx
  427ca5:	mov    eax,DWORD PTR [ebp-0x14]
  427ca8:	mov    ecx,DWORD PTR [ebp-0x10]
  427cab:	xor    eax,esi
  427cad:	add    eax,edi
  427caf:	cmp    ecx,eax
  427cb1:	jne    0x427c44
  427cb3:	mov    eax,DWORD PTR [ebp-0x1c]
  427cb6:	mov    ecx,DWORD PTR [ebp-0x8]
  427cb9:	xor    eax,esi
  427cbb:	add    eax,edi
  427cbd:	pop    edi
  427cbe:	pop    esi
  427cbf:	xor    eax,ecx
  427cc1:	pop    ebx
  427cc2:	leave  
  427cc3:	ret    0x4
  427cc6:	push   ebp
  427cc7:	mov    ebp,esp
  427cc9:	mov    eax,DWORD PTR [ebp+0x1c]
  427ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  427ccf:	mov    edx,DWORD PTR [ebp+0x10]
  427cd2:	mov    eax,DWORD PTR [eax+0x190]
  427cd8:	mov    eax,DWORD PTR [eax]
  427cda:	sub    esp,0x64
  427cdd:	push   ebx
  427cde:	push   esi
  427cdf:	push   edi
  427ce0:	mov    edi,0x75108a4
  427ce5:	xor    ecx,edi
  427ce7:	mov    ebx,0x3272ec
  427cec:	add    ecx,ebx
  427cee:	cmp    ecx,edx
  427cf0:	jne    0x427d01
  427cf2:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  427cfc:	jmp    0x4281fd
  427d01:	mov    ecx,DWORD PTR [ebp+0x8]
  427d04:	mov    esi,DWORD PTR [ebp+0x14]
  427d07:	mov    edx,DWORD PTR [esi]
  427d09:	xor    ecx,edi
  427d0b:	add    ecx,ebx
  427d0d:	cmp    edx,ecx
  427d0f:	je     0x4281b8
  427d15:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d18:	mov    DWORD PTR [ebp-0x1c],eax
  427d1b:	mov    DWORD PTR [ebp+0x1c],ecx
  427d1e:	mov    ecx,DWORD PTR [ebp+0x18]
  427d21:	mov    eax,DWORD PTR [esi]
  427d23:	mov    DWORD PTR [ebp-0x20],eax
  427d26:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  427d2d:	mov    edx,0xf89c85b1
  427d32:	mov    DWORD PTR [ebp-0x8],edx
  427d35:	mov    eax,DWORD PTR [ebp+0x1c]
  427d38:	mov    DWORD PTR [ebp+0x1c],eax
  427d3b:	mov    eax,DWORD PTR [ebp+0x1c]
  427d3e:	mov    eax,DWORD PTR [eax+0x190]
  427d44:	mov    eax,DWORD PTR [eax]
  427d46:	mov    DWORD PTR [ebp-0x24],ecx
  427d49:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d4c:	mov    ecx,DWORD PTR [ecx+0x190]
  427d52:	mov    ecx,DWORD PTR [ecx]
  427d54:	add    ecx,DWORD PTR [eax+0x3c]
  427d57:	mov    DWORD PTR [ebp+0x10],ecx
  427d5a:	mov    eax,DWORD PTR [ebp+0x8]
  427d5d:	xor    eax,edi
  427d5f:	add    eax,ebx
  427d61:	mov    DWORD PTR [ebp-0x4],eax
  427d64:	mov    eax,DWORD PTR [ebp+0x8]
  427d67:	xor    eax,edi
  427d69:	add    eax,ebx
  427d6b:	mov    DWORD PTR [ebp+0x18],eax
  427d6e:	mov    eax,DWORD PTR [ebp+0x10]
  427d71:	mov    eax,DWORD PTR [eax+0x50]
  427d74:	sub    eax,0xc
  427d77:	mov    DWORD PTR [ebp-0x28],eax
  427d7a:	mov    eax,DWORD PTR [ebp+0x10]
  427d7d:	mov    eax,DWORD PTR [eax+0x38]
  427d80:	mov    ecx,DWORD PTR [ebp+0x10]
  427d83:	dec    eax
  427d84:	test   DWORD PTR [ecx+0x54],eax
  427d87:	mov    eax,DWORD PTR [ebp+0x10]
  427d8a:	je     0x427da4
  427d8c:	mov    eax,DWORD PTR [eax+0x38]
  427d8f:	mov    ecx,DWORD PTR [ebp+0x10]
  427d92:	mov    ecx,DWORD PTR [ecx+0x54]
  427d95:	dec    eax
  427d96:	not    eax
  427d98:	and    ecx,eax
  427d9a:	mov    eax,DWORD PTR [ebp+0x10]
  427d9d:	mov    eax,DWORD PTR [eax+0x38]
  427da0:	add    eax,ecx
  427da2:	jmp    0x427da7
  427da4:	mov    eax,DWORD PTR [eax+0x54]
  427da7:	mov    DWORD PTR [ebp+0x1c],eax
  427daa:	mov    eax,DWORD PTR [ebp+0x8]
  427dad:	xor    eax,edi
  427daf:	add    eax,ebx
  427db1:	mov    DWORD PTR [ebp+0x18],eax
  427db4:	mov    eax,DWORD PTR [ebp+0x8]
  427db7:	xor    eax,edi
  427db9:	add    eax,ebx
  427dbb:	mov    DWORD PTR [ebp+0x18],eax
  427dbe:	mov    eax,DWORD PTR [ebp+0x8]
  427dc1:	mov    ecx,DWORD PTR [ebp-0x24]
  427dc4:	xor    eax,edi
  427dc6:	add    eax,ebx
  427dc8:	mov    DWORD PTR [ecx],eax
  427dca:	mov    DWORD PTR [ebp+0x18],edx
  427dcd:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427dd4:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427ddb:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427de2:	mov    eax,DWORD PTR [ebp-0x8]
  427de5:	mov    ecx,DWORD PTR [ebp+0x1c]
  427de8:	xor    eax,edi
  427dea:	add    eax,ebx
  427dec:	imul   eax,ecx
  427def:	mov    ecx,DWORD PTR [ebp+0x8]
  427df2:	mov    edx,DWORD PTR [ebp-0x28]
  427df5:	xor    ecx,edi
  427df7:	lea    ecx,[ecx+edx*1+0x3272ec]
  427dfe:	cmp    eax,ecx
  427e00:	jae    0x4281b1
  427e06:	mov    eax,DWORD PTR [ebp+0x8]
  427e09:	xor    eax,edi
  427e0b:	add    eax,ebx
  427e0d:	mov    DWORD PTR [ebp+0x18],eax
  427e10:	mov    eax,DWORD PTR [ebp+0x1c]
  427e13:	add    eax,DWORD PTR [ebp-0x1c]
  427e16:	mov    DWORD PTR [ebp-0x4],eax
  427e19:	push   DWORD PTR [ebp-0x4]
  427e1c:	mov    esi,DWORD PTR [ebp-0x1c]
  427e1f:	mov    ecx,DWORD PTR [ebp+0x10]
  427e22:	call   0x426f71
  427e27:	mov    DWORD PTR [ebp+0xc],eax
  427e2a:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  427e31:	mov    eax,DWORD PTR [ebp-0x18]
  427e34:	xor    eax,edi
  427e36:	lea    ecx,[ebp-0x40]
  427e39:	add    eax,ebx
  427e3b:	push   ecx
  427e3c:	call   0x427505
  427e41:	mov    eax,DWORD PTR [ebp+0xc]
  427e44:	test   eax,eax
  427e46:	je     0x427e96
  427e48:	mov    eax,DWORD PTR [ebp-0x18]
  427e4b:	xor    eax,edi
  427e4d:	add    eax,ebx
  427e4f:	push   eax
  427e50:	push   DWORD PTR [ebp+0xc]
  427e53:	lea    eax,[ebp-0x40]
  427e56:	push   eax
  427e57:	call   0x4273fb
  427e5c:	mov    eax,DWORD PTR [ebp-0x4]
  427e5f:	mov    DWORD PTR [ebp-0x18],eax
  427e62:	mov    eax,DWORD PTR [ebp-0x18]
  427e65:	mov    ecx,DWORD PTR [ebp-0x1c]
  427e68:	sub    eax,ecx
  427e6a:	mov    DWORD PTR [ebp-0x18],eax
  427e6d:	mov    eax,DWORD PTR [ebp+0xc]
  427e70:	mov    ecx,DWORD PTR [ebp+0xc]
  427e73:	mov    eax,DWORD PTR [eax+0x10]
  427e76:	add    eax,DWORD PTR [ecx+0xc]
  427e79:	mov    ecx,DWORD PTR [ebp-0x18]
  427e7c:	cmp    ecx,eax
  427e7e:	jb     0x427e96
  427e80:	mov    eax,DWORD PTR [ebp+0xc]
  427e83:	mov    eax,DWORD PTR [eax+0xc]
  427e86:	mov    ecx,DWORD PTR [ebp+0xc]
  427e89:	add    eax,DWORD PTR [ecx+0x8]
  427e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  427e8f:	sub    eax,ecx
  427e91:	jmp    0x428184
  427e96:	push   0xc
  427e98:	push   DWORD PTR [ebp-0x4]
  427e9b:	lea    eax,[ebp-0x4c]
  427e9e:	push   eax
  427e9f:	call   0x4273fb
  427ea4:	mov    eax,0xf89c85b0
  427ea9:	mov    DWORD PTR [ebp-0x2c],eax
  427eac:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427eb3:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427eba:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  427ec1:	lea    ecx,[ebp-0x2c]
  427ec4:	mov    DWORD PTR [ebp-0xc],ecx
  427ec7:	lea    ecx,[ebp-0x30]
  427eca:	mov    DWORD PTR [ebp-0x10],ecx
  427ecd:	lea    ecx,[ebp-0x34]
  427ed0:	mov    DWORD PTR [ebp+0xc],ecx
  427ed3:	lea    ecx,[ebp-0x38]
  427ed6:	mov    DWORD PTR [ebp-0x14],ecx
  427ed9:	mov    ecx,DWORD PTR [ebp+0x8]
  427edc:	xor    ecx,edi
  427ede:	add    ecx,ebx
  427ee0:	mov    DWORD PTR [ebp-0x18],ecx
  427ee3:	jmp    0x4280df
  427ee8:	cmp    eax,0xf89c85b2
  427eed:	je     0x4280f1
  427ef3:	mov    ecx,DWORD PTR [ebp-0x8]
  427ef6:	xor    ecx,edi
  427ef8:	mov    esi,eax
  427efa:	add    ecx,ebx
  427efc:	mov    DWORD PTR [ebp+0x18],ecx
  427eff:	mov    eax,DWORD PTR [ebp-0x18]
  427f02:	xor    esi,edi
  427f04:	lea    eax,[eax+esi*1+0x3272ec]
  427f0b:	mov    DWORD PTR [ebp-0x18],eax
  427f0e:	mov    eax,DWORD PTR [ebp-0x8]
  427f11:	mov    ecx,DWORD PTR [ebp-0x18]
  427f14:	xor    eax,edi
  427f16:	add    eax,ebx
  427f18:	cmp    ecx,eax
  427f1a:	jne    0x427f2f
  427f1c:	mov    eax,DWORD PTR [ebp+0x8]
  427f1f:	xor    eax,edi
  427f21:	add    eax,ebx
  427f23:	push   eax
  427f24:	push   0xc
  427f26:	lea    eax,[ebp-0x4c]
  427f29:	push   eax
  427f2a:	call   0x4279e1
  427f2f:	mov    eax,DWORD PTR [ebp-0xc]
  427f32:	mov    eax,DWORD PTR [eax]
  427f34:	xor    eax,edi
  427f36:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427f3d:	mov    ecx,DWORD PTR [ebp+0x8]
  427f40:	xor    ecx,edi
  427f42:	movzx  eax,al
  427f45:	add    ecx,ebx
  427f47:	cmp    eax,ecx
  427f49:	je     0x4280c7
  427f4f:	mov    eax,DWORD PTR [ebp-0x10]
  427f52:	mov    eax,DWORD PTR [eax]
  427f54:	xor    eax,edi
  427f56:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427f5d:	mov    ecx,DWORD PTR [ebp+0x8]
  427f60:	xor    ecx,edi
  427f62:	movzx  eax,al
  427f65:	add    ecx,ebx
  427f67:	cmp    eax,ecx
  427f69:	je     0x4280c7
  427f6f:	mov    eax,DWORD PTR [ebp+0xc]
  427f72:	mov    eax,DWORD PTR [eax]
  427f74:	xor    eax,edi
  427f76:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427f7d:	mov    ecx,DWORD PTR [ebp+0x8]
  427f80:	xor    ecx,edi
  427f82:	movzx  eax,al
  427f85:	add    ecx,ebx
  427f87:	cmp    eax,ecx
  427f89:	je     0x4280c7
  427f8f:	mov    eax,DWORD PTR [ebp-0x14]
  427f92:	mov    eax,DWORD PTR [eax]
  427f94:	xor    eax,edi
  427f96:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427f9d:	mov    ecx,DWORD PTR [ebp+0x8]
  427fa0:	xor    ecx,edi
  427fa2:	movzx  eax,al
  427fa5:	add    ecx,ebx
  427fa7:	cmp    eax,ecx
  427fa9:	je     0x4280c7
  427faf:	mov    eax,DWORD PTR [ebp-0x10]
  427fb2:	mov    eax,DWORD PTR [eax]
  427fb4:	xor    eax,edi
  427fb6:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427fbd:	mov    ecx,DWORD PTR [ebp-0xc]
  427fc0:	mov    ecx,DWORD PTR [ecx]
  427fc2:	xor    ecx,edi
  427fc4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427fcb:	xor    al,cl
  427fcd:	mov    ecx,DWORD PTR [ebp+0xc]
  427fd0:	mov    ecx,DWORD PTR [ecx]
  427fd2:	xor    ecx,edi
  427fd4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427fdb:	or     al,cl
  427fdd:	mov    ecx,DWORD PTR [ebp-0xc]
  427fe0:	mov    ecx,DWORD PTR [ecx]
  427fe2:	xor    ecx,edi
  427fe4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427feb:	cmp    cl,al
  427fed:	jne    0x4280c7
  427ff3:	mov    eax,DWORD PTR [ebp+0xc]
  427ff6:	mov    eax,DWORD PTR [eax]
  427ff8:	xor    eax,edi
  427ffa:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428001:	mov    ecx,DWORD PTR [ebp-0x10]
  428004:	mov    ecx,DWORD PTR [ecx]
  428006:	xor    ecx,edi
  428008:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42800f:	xor    al,cl
  428011:	mov    ecx,DWORD PTR [ebp-0x14]
  428014:	mov    ecx,DWORD PTR [ecx]
  428016:	xor    ecx,edi
  428018:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42801f:	or     al,cl
  428021:	mov    ecx,DWORD PTR [ebp-0x10]
  428024:	mov    ecx,DWORD PTR [ecx]
  428026:	xor    ecx,edi
  428028:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42802f:	cmp    cl,al
  428031:	jne    0x4280c7
  428037:	mov    eax,DWORD PTR [ebp-0x14]
  42803a:	mov    eax,DWORD PTR [eax]
  42803c:	xor    eax,edi
  42803e:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428045:	mov    ecx,DWORD PTR [ebp+0xc]
  428048:	mov    ecx,DWORD PTR [ecx]
  42804a:	xor    ecx,edi
  42804c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428053:	xor    al,cl
  428055:	mov    ecx,DWORD PTR [ebp-0xc]
  428058:	mov    ecx,DWORD PTR [ecx]
  42805a:	xor    ecx,edi
  42805c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428063:	or     al,cl
  428065:	mov    ecx,DWORD PTR [ebp+0xc]
  428068:	mov    ecx,DWORD PTR [ecx]
  42806a:	xor    ecx,edi
  42806c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428073:	cmp    cl,al
  428075:	jne    0x4280c7
  428077:	mov    eax,DWORD PTR [ebp-0x14]
  42807a:	mov    eax,DWORD PTR [eax]
  42807c:	xor    eax,edi
  42807e:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428085:	mov    ecx,DWORD PTR [ebp-0xc]
  428088:	mov    ecx,DWORD PTR [ecx]
  42808a:	xor    ecx,edi
  42808c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428093:	xor    al,cl
  428095:	mov    ecx,DWORD PTR [ebp-0x10]
  428098:	mov    ecx,DWORD PTR [ecx]
  42809a:	xor    ecx,edi
  42809c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280a3:	or     al,cl
  4280a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4280a8:	mov    ecx,DWORD PTR [ecx]
  4280aa:	xor    ecx,edi
  4280ac:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4280b3:	cmp    cl,al
  4280b5:	jne    0x4280c7
  4280b7:	lea    eax,[ebp-0x4c]
  4280ba:	push   eax
  4280bb:	call   0x427b82
  4280c0:	mov    ecx,DWORD PTR [ebp-0x44]
  4280c3:	cmp    eax,ecx
  4280c5:	je     0x4280d1
  4280c7:	mov    eax,DWORD PTR [ebp+0x8]
  4280ca:	xor    eax,edi
  4280cc:	add    eax,ebx
  4280ce:	mov    DWORD PTR [ebp+0x18],eax
  4280d1:	mov    eax,DWORD PTR [ebp-0x8]
  4280d4:	xor    eax,edi
  4280d6:	lea    eax,[eax+esi*1+0x3272ec]
  4280dd:	xor    eax,edi
  4280df:	mov    ecx,DWORD PTR [ebp+0x8]
  4280e2:	mov    edx,DWORD PTR [ebp+0x18]
  4280e5:	xor    ecx,edi
  4280e7:	add    ecx,ebx
  4280e9:	cmp    edx,ecx
  4280eb:	je     0x427ee8
  4280f1:	mov    eax,DWORD PTR [ebp+0x8]
  4280f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4280f7:	xor    eax,edi
  4280f9:	add    eax,ebx
  4280fb:	cmp    ecx,eax
  4280fd:	jne    0x428110
  4280ff:	mov    eax,DWORD PTR [ebp-0x8]
  428102:	mov    ecx,DWORD PTR [ebp+0x1c]
  428105:	xor    eax,edi
  428107:	lea    eax,[eax+ecx*1+0x3272ec]
  42810e:	jmp    0x428187
  428110:	push   0x18
  428112:	push   DWORD PTR [ebp-0x4]
  428115:	lea    eax,[ebp-0x64]
  428118:	push   eax
  428119:	call   0x4273fb
  42811e:	mov    eax,DWORD PTR [ebp+0x8]
  428121:	mov    ecx,DWORD PTR [ebp-0x18]
  428124:	xor    eax,edi
  428126:	add    eax,ebx
  428128:	cmp    eax,ecx
  42812a:	je     0x42813f
  42812c:	mov    eax,DWORD PTR [ebp+0x8]
  42812f:	xor    eax,edi
  428131:	add    eax,ebx
  428133:	push   eax
  428134:	push   0x18
  428136:	lea    eax,[ebp-0x64]
  428139:	push   eax
  42813a:	call   0x4279e1
  42813f:	mov    eax,DWORD PTR [ebp-0x4]
  428142:	add    eax,0x18
  428145:	mov    DWORD PTR [ebp+0x18],eax
  428148:	push   DWORD PTR [ebp-0x50]
  42814b:	push   DWORD PTR [ebp+0x18]
  42814e:	mov    eax,DWORD PTR [ebp-0x54]
  428151:	add    eax,DWORD PTR [ebp-0x20]
  428154:	push   eax
  428155:	call   0x4273fb
  42815a:	mov    eax,DWORD PTR [ebp+0x8]
  42815d:	mov    ecx,DWORD PTR [ebp-0x18]
  428160:	xor    eax,edi
  428162:	add    eax,ebx
  428164:	cmp    eax,ecx
  428166:	je     0x428179
  428168:	push   0x0
  42816a:	push   DWORD PTR [ebp-0x50]
  42816d:	mov    eax,DWORD PTR [ebp-0x54]
  428170:	add    eax,DWORD PTR [ebp-0x20]
  428173:	push   eax
  428174:	call   0x4279e1
  428179:	mov    eax,DWORD PTR [ebp-0x24]
  42817c:	mov    ecx,DWORD PTR [ebp-0x50]
  42817f:	add    DWORD PTR [eax],ecx
  428181:	mov    eax,DWORD PTR [ebp-0x50]
  428184:	add    eax,DWORD PTR [ebp+0x1c]
  428187:	mov    DWORD PTR [ebp+0x1c],eax
  42818a:	mov    eax,DWORD PTR [ebp-0x8]
  42818d:	mov    ecx,DWORD PTR [ebp+0x1c]
  428190:	xor    eax,edi
  428192:	add    eax,ebx
  428194:	imul   eax,ecx
  428197:	mov    ecx,DWORD PTR [ebp+0x8]
  42819a:	mov    edx,DWORD PTR [ebp-0x28]
  42819d:	xor    ecx,edi
  42819f:	lea    ecx,[ecx+edx*1+0x3272ec]
  4281a6:	cmp    eax,ecx
  4281a8:	jb     0x427e06
  4281ae:	mov    esi,DWORD PTR [ebp+0x14]
  4281b1:	mov    eax,DWORD PTR [ebp-0x20]
  4281b4:	mov    DWORD PTR [esi],eax
  4281b6:	jmp    0x4281fd
  4281b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4281bb:	mov    edx,DWORD PTR [ebp+0xc]
  4281be:	xor    ecx,edi
  4281c0:	xor    edx,edi
  4281c2:	add    ecx,ebx
  4281c4:	add    edx,ebx
  4281c6:	cmp    ecx,edx
  4281c8:	jne    0x4281dc
  4281ca:	mov    eax,ds:0x7f642ddf
  4281cf:	imul   eax,eax,0x9f15fcce
  4281d5:	mov    ds:0x7f642ddf,eax
  4281da:	jmp    0x4281fd
  4281dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4281df:	xor    ecx,edi
  4281e1:	add    ecx,ebx
  4281e3:	cmp    eax,ecx
  4281e5:	je     0x4281f3
  4281e7:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  4281f1:	jmp    0x4281fd
  4281f3:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4281fd:	pop    edi
  4281fe:	pop    esi
  4281ff:	pop    ebx
  428200:	leave  
  428201:	ret    0x18
  428204:	push   ebp
  428205:	mov    ebp,esp
  428207:	and    esp,0xfffffff8
  42820a:	mov    eax,DWORD PTR [ebp+0x20]
  42820d:	sub    esp,0x14
  428210:	push   ebx
  428211:	mov    ebx,DWORD PTR [ebp+0x14]
  428214:	push   esi
  428215:	push   edi
  428216:	cmp    eax,0xf89c85b0
  42821b:	jne    0x428227
  42821d:	push   0xf89c85b1
  428222:	jmp    0x428359
  428227:	mov    eax,DWORD PTR [ebp+0x20]
  42822a:	cmp    eax,0xf89c85b1
  42822f:	jne    0x42823b
  428231:	push   0xf89c85b2
  428236:	jmp    0x428359
  42823b:	mov    eax,DWORD PTR [ebp+0x20]
  42823e:	cmp    eax,0xf89c85b2
  428243:	jne    0x42824f
  428245:	push   0xf89c85b3
  42824a:	jmp    0x428359
  42824f:	mov    eax,DWORD PTR [ebp+0x20]
  428252:	cmp    eax,0xf89c85b3
  428257:	jne    0x428263
  428259:	push   0xf89c85bc
  42825e:	jmp    0x428359
  428263:	mov    ecx,DWORD PTR [ebp+0x20]
  428266:	mov    eax,0xf89c85bf
  42826b:	cmp    ecx,eax
  42826d:	jne    0x428329
  428273:	mov    eax,DWORD PTR [ebp+0x10]
  428276:	mov    DWORD PTR [esp+0xc],eax
  42827a:	mov    eax,DWORD PTR [ebp+0x18]
  42827d:	mov    DWORD PTR [esp+0x14],eax
  428281:	mov    eax,DWORD PTR [ebp+0xc]
  428284:	mov    DWORD PTR [esp+0x18],eax
  428288:	mov    eax,DWORD PTR [ebp+0x8]
  42828b:	mov    DWORD PTR [esp+0x10],eax
  42828f:	mov    eax,DWORD PTR [esp+0x10]
  428293:	mov    ecx,DWORD PTR [esp+0x14]
  428297:	mov    edi,0x75108a4
  42829c:	xor    eax,edi
  42829e:	mov    esi,0x3272ec
  4282a3:	add    eax,esi
  4282a5:	mov    DWORD PTR [ecx],eax
  4282a7:	mov    eax,DWORD PTR [esp+0xc]
  4282ab:	mov    eax,DWORD PTR [eax+0x194]
  4282b1:	mov    ecx,DWORD PTR [eax]
  4282b3:	mov    eax,DWORD PTR [esp+0xc]
  4282b7:	mov    eax,DWORD PTR [eax+0x194]
  4282bd:	mov    eax,DWORD PTR [eax]
  4282bf:	add    eax,DWORD PTR [ecx+0x3c]
  4282c2:	mov    ecx,DWORD PTR [esp+0xc]
  4282c6:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4282cc:	mov    ecx,DWORD PTR [ecx+0x14]
  4282cf:	push   0x4
  4282d1:	push   0x3000
  4282d6:	push   DWORD PTR [eax+0x50]
  4282d9:	push   0x0
  4282db:	call   ecx
  4282dd:	mov    DWORD PTR [ebx],eax
  4282df:	mov    eax,DWORD PTR [esp+0x10]
  4282e3:	push   DWORD PTR [esp+0xc]
  4282e7:	xor    eax,edi
  4282e9:	add    eax,esi
  4282eb:	mov    DWORD PTR [esp+0x20],eax
  4282ef:	lea    eax,[esp+0x20]
  4282f3:	push   eax
  4282f4:	push   ebx
  4282f5:	push   DWORD PTR [esp+0x20]
  4282f9:	push   DWORD PTR [esp+0x28]
  4282fd:	push   DWORD PTR [esp+0x24]
  428301:	call   0x427cc6
  428306:	mov    eax,DWORD PTR [esp+0x10]
  42830a:	mov    ecx,DWORD PTR [ebx]
  42830c:	xor    eax,edi
  42830e:	add    eax,esi
  428310:	cmp    ecx,eax
  428312:	je     0x428370
  428314:	mov    eax,DWORD PTR [esp+0x18]
  428318:	mov    ecx,DWORD PTR [esp+0x14]
  42831c:	xor    eax,edi
  42831e:	add    eax,esi
  428320:	imul   eax,DWORD PTR [esp+0x1c]
  428325:	mov    DWORD PTR [ecx],eax
  428327:	jmp    0x428370
  428329:	mov    ecx,DWORD PTR [ebp+0x20]
  42832c:	cmp    ecx,0xf89c85bc
  428332:	jne    0x42833b
  428334:	push   0xf89c85bd
  428339:	jmp    0x428359
  42833b:	mov    ecx,DWORD PTR [ebp+0x20]
  42833e:	cmp    ecx,0xf89c85bd
  428344:	jne    0x42834d
  428346:	push   0xf89c85be
  42834b:	jmp    0x428359
  42834d:	mov    ecx,DWORD PTR [ebp+0x20]
  428350:	cmp    ecx,0xf89c85be
  428356:	jne    0x428370
  428358:	push   eax
  428359:	push   DWORD PTR [ebp+0x1c]
  42835c:	push   DWORD PTR [ebp+0x18]
  42835f:	push   ebx
  428360:	push   DWORD PTR [ebp+0x10]
  428363:	push   DWORD PTR [ebp+0xc]
  428366:	push   DWORD PTR [ebp+0x8]
  428369:	call   0x428204
  42836e:	mov    DWORD PTR [ebx],eax
  428370:	mov    eax,DWORD PTR [ebx]
  428372:	pop    edi
  428373:	pop    esi
  428374:	pop    ebx
  428375:	mov    esp,ebp
  428377:	pop    ebp
  428378:	ret    0x1c
  42837b:	push   ebp
  42837c:	mov    ebp,esp
  42837e:	sub    esp,0xc
  428381:	mov    eax,0xf89c85b0
  428386:	mov    DWORD PTR [ebp-0x8],eax
  428389:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  428390:	mov    ecx,DWORD PTR [ebp-0x8]
  428393:	xor    ecx,0x75108a4
  428399:	add    ecx,0x3272ec
  42839f:	mov    DWORD PTR [ebp-0x4],ecx
  4283a2:	mov    ecx,DWORD PTR [ebp+0xc]
  4283a5:	push   eax
  4283a6:	mov    DWORD PTR [ebp+0xc],ecx
  4283a9:	push   DWORD PTR [ebp+0xc]
  4283ac:	lea    eax,[ebp-0x4]
  4283af:	push   DWORD PTR [ebp+0x8]
  4283b2:	push   eax
  4283b3:	push   DWORD PTR [ebp+0xc]
  4283b6:	push   DWORD PTR [ebp-0xc]
  4283b9:	push   DWORD PTR [ebp-0x8]
  4283bc:	call   0x428204
  4283c1:	mov    DWORD PTR [ebp-0x4],eax
  4283c4:	mov    eax,DWORD PTR [ebp-0x4]
  4283c7:	leave  
  4283c8:	ret    0x8
