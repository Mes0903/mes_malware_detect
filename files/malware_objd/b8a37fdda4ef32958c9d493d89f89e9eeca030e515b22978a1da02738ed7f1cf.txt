
b8a37fdda4ef32958c9d493d89f89e9eeca030e515b22978a1da02738ed7f1cf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebp+0x1],dl
  401003:	add    BYTE PTR [esi-0x26ffbecb],dl
  401009:	pop    es
  40100a:	je     0x40105c
  40100c:	in     al,0xd
  40100e:	arpl   WORD PTR [ecx-0x46],ax
  401011:	push   es
  401012:	jb     0x401079
  401014:	lds    edx,FWORD PTR [ecx]
  401016:	add    BYTE PTR [eax],al
  401018:	ror    BYTE PTR ds:0xbca6461,cl
  40101e:	bound  esi,QWORD PTR [edx-0x49]
  401021:	adc    BYTE PTR [ecx+0x45],bh
  401024:	scas   al,BYTE PTR es:[edi]
  401025:	and    eax,DWORD PTR [eax]
  401027:	add    dl,dl
  401029:	or     eax,0xbca6461
  40102e:	bound  esi,QWORD PTR [edx+0x77]
  401031:	adc    BYTE PTR [ecx+0x45],bh
  401034:	mov    ?,WORD PTR ds:0x7590000
  40103a:	je     0x401089
  40103c:	imul   eax,DWORD PTR [esi],0x2a7b6c75
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	jb     0x401054
  401046:	gs inc ecx
  401048:	xchg   esi,eax
  401049:	bound  eax,QWORD PTR [eax]
  40104b:	add    BYTE PTR [ebp+0x10],dl
  40104e:	gs popa 
  401050:	dec    edx
  401051:	pop    es
  401052:	inc    esi
  401053:	imul   edi,DWORD PTR [edx],0x32004107
  401059:	adc    DWORD PTR [edx+esi*2+0x35],esi
  40105d:	add    esi,DWORD PTR [ecx+eax*2-0x6a]
  401061:	bound  eax,QWORD PTR [eax]
  401063:	add    BYTE PTR [ecx+0x7],dl
  401066:	je     0x4010bf
	...
  401078:	add    BYTE PTR [eax],al
  40107a:	das    
  40107b:	or     al,0x64
  40107d:	outs   dx,DWORD PTR ds:[esi]
  40107e:	and    DWORD PTR [ecx],edx
  401080:	inc    esp
  401081:	imul   eax,DWORD PTR [esi+eax*1],0x10f97463
  401088:	jns    0x4010cb
  40108a:	xchg   esi,eax
  40108b:	bound  eax,QWORD PTR [eax]
  40108d:	add    cl,dl
  40108f:	add    eax,0x7014d74
  401094:	jne    0x401102
  401096:	repz sub ah,BYTE PTR [ecx+0x6e]
  40109a:	cli    
  40109b:	push   cs
  40109c:	gs push edi
  40109e:	xchg   esi,eax
  40109f:	bound  eax,QWORD PTR [eax]
  4010a1:	add    BYTE PTR [edx-0x5dffbfa0],bl
  4010a7:	pusha  
  4010a8:	inc    eax
  4010a9:	add    BYTE PTR [edx+0x60],bh
  4010ac:	inc    eax
  4010ad:	add    BYTE PTR [edx-0x21ffbfa0],al
  4010b3:	pusha  
  4010b4:	inc    eax
  4010b5:	add    dl,al
  4010b7:	pusha  
  4010b8:	inc    eax
  4010b9:	add    BYTE PTR [esi-0x61ffbfa0],dh
  4010bf:	pusha  
  4010c0:	inc    eax
  4010c1:	add    BYTE PTR [ecx+0x5],bl
  4010c4:	je     0x401116
  4010c6:	test   BYTE PTR [ebx],cl
  4010c8:	arpl   WORD PTR [ecx+0x7a],ax
  4010cb:	push   es
  4010cc:	jb     0x401133
  4010ce:	test   DWORD PTR [edi],ecx
  4010d0:	add    BYTE PTR [eax],al
  4010d2:	bound  ecx,QWORD PTR [ebx]
  4010d4:	popa   
  4010d5:	fs pop edx
  4010d7:	or     DWORD PTR [edx+0x72],esp
  4010da:	ja     0x4010ec
  4010dc:	jns    0x401123
	...
  4010ee:	add    BYTE PTR [eax],al
  4010f0:	pop    esi
  4010f1:	and    DWORD PTR [eax],eax
  4010f3:	add    BYTE PTR ds:0x336e7205,bh
  4010f9:	push   cs
  4010fa:	xor    esi,DWORD PTR [edx]
  4010fc:	jo     0x401104
  4010fe:	ins    BYTE PTR es:[edi],dx
  4010ff:	ins    BYTE PTR es:[edi],dx
  401100:	xchg   esi,eax
  401101:	bound  eax,QWORD PTR [eax]
  401103:	add    BYTE PTR [ebx+0xf],al
  401106:	jbe    0x40116b
  401108:	and    al,0x16
  40110a:	cs xor cl,BYTE PTR fs:[esi]
  40110e:	add    BYTE PTR [eax],al
  401110:	sub    eax,DWORD PTR ds:0x16fb736d
  401116:	add    BYTE PTR [eax],al
  401118:	sti    
  401119:	pcmpeqd mm4,QWORD PTR [ebx+0x4]
  40111d:	pop    ss
  40111e:	cs fs jmp 0x6d06:0x300000e
  401127:	arpl   si,sp
  401129:	sbb    DWORD PTR [eax],eax
  40112b:	add    al,cl
  40112d:	or     DWORD PTR [edx+0x74],esi
  401130:	jecxz  0x401133
  401132:	ins    BYTE PTR es:[edi],dx
  401133:	inc    ecx
  401134:	ret    0x6f0e
  401137:	arpl   WORD PTR [esi-0x17ffff9e],dx
  40113d:	or     DWORD PTR [edx+0x74],esi
  401140:	ret    
  401141:	add    DWORD PTR [ecx+eax*2-0x3e],ebp
  401145:	push   cs
  401146:	outs   dx,DWORD PTR ds:[esi]
  401147:	arpl   WORD PTR [esi-0x34ffff9e],dx
  40114d:	or     al,0x6d
  40114f:	popa   
  401150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401151:	xor    al,0x69
  401153:	add    BYTE PTR gs:[eax],al
	...
  401166:	mov    DWORD PTR [ebx],ebp
  401168:	inc    si
  40116a:	jg     0x40117a
  40116c:	add    BYTE PTR gs:[eax+0x9],ch
  401170:	jb     0x4011e6
  401172:	add    DWORD PTR [ecx],0x6c
  401175:	push   eax
  401176:	or     esi,DWORD PTR fs:[ebp+eiz*2+0x75]
  40117b:	push   ss
  40117c:	add    BYTE PTR [eax],al
  40117e:	dec    esi
  40117f:	add    eax,0xe577061
  401184:	ins    BYTE PTR es:[edi],dx
  401185:	outs   dx,DWORD PTR ds:[esi]
  401186:	xor    eax,0x3d000062
  40118b:	add    eax,0xe3b6e72
  401190:	xor    esi,DWORD PTR [edx]
  401192:	push   0x966c6c06
  401197:	bound  eax,QWORD PTR [eax]
  401199:	add    BYTE PTR [ecx+0x5],dl
  40119c:	je     0x4011ee
  40119e:	and    al,0xb
  4011a0:	arpl   WORD PTR [ebp+0x25],sp
  4011a3:	cmovs  esp,DWORD PTR [ebp-0x9]
  4011a7:	adc    al,BYTE PTR [eax]
  4011a9:	add    BYTE PTR [esi-0x69febb9e],dl
  4011af:	mov    esi,0x8c969059
  4011b4:	add    eax,DWORD PTR [eax]
  4011b6:	xchg   esi,eax
  4011b7:	xchg   DWORD PTR [ebx],eax
  4011b9:	add    BYTE PTR [esi-0x69ff0468],dl
  4011bf:	push   ebx
  4011c0:	add    eax,DWORD PTR [eax]
  4011c2:	xchg   esi,eax
  4011c3:	mov    eax,DWORD PTR [ebx]
  4011c5:	add    BYTE PTR [esi+0x44b],dl
	...
  4011db:	add    BYTE PTR [esi-0x69fffc75],dl
  4011e1:	mov    eax,DWORD PTR [ebx]
  4011e3:	add    BYTE PTR [esi-0x69fffc75],dl
  4011e9:	mov    eax,DWORD PTR [ebx]
  4011eb:	add    BYTE PTR [esi-0x69fffc75],dl
  4011f1:	mov    eax,DWORD PTR [ebx]
  4011f3:	add    BYTE PTR [esi-0x69fffc75],dl
  4011f9:	mov    eax,DWORD PTR [ebx]
  4011fb:	add    BYTE PTR [esi-0x69fffbf5],dl
  401201:	sbb    DWORD PTR [edx],0xaf8b88ba
  401207:	or     ebx,esp
  401209:	stos   BYTE PTR es:[edi],al
  40120a:	mov    ebx,0x25c65a01
  40120f:	push   esp
  401210:	outs   dx,BYTE PTR ds:[esi]
  401211:	bound  esi,QWORD PTR [edi+0x20]
  401214:	popfw  
  401216:	push   0x67
  401218:	inc    esp
  401219:	stos   BYTE PTR es:[edi],al
  40121a:	push   0x69aa3520
  40121f:	outs   dx,BYTE PTR ds:[esi]
  401220:	xor    DWORD PTR [edi+0x6b336223],esi
  401226:	jbe    0x40129d
  401228:	inc    eax
  401229:	imul   ebp,DWORD PTR [ebp+0x6e],0x76
  40122d:	mov    edi,0x9e76534a
  401232:	push   0x64
  401234:	xor    ebx,DWORD PTR [ecx+0x629c0d08]
  40123a:	int    0x3
  40123c:	xchg   esi,eax
  40123d:	(bad)  
  40123e:	jmp    0x401246
	...
  40124f:	add    BYTE PTR [eax],al
  401251:	add    BYTE PTR [esi-0x69bf469e],dl
  401257:	bound  ebx,QWORD PTR [ebp+0x4b629504]
  40125d:	xchg   BYTE PTR [ebx],bl
  40125f:	sub    ecx,ebp
  401261:	add    edx,DWORD PTR [esi-0x69fc169e]
  401267:	bound  ecx,QWORD PTR [ecx]
  401269:	add    al,0xa1
  40126b:	arpl   dx,si
  40126d:	add    al,0x94
  40126f:	push   esp
  401270:	jmp    0xe9a2a96e
  401275:	dec    ebp
  401276:	xchg   esi,eax
  401277:	(bad)  
  401278:	jmp    0x55a2a880
  40127d:	in     eax,dx
  40127e:	xchg   esi,eax
  40127f:	(bad)  
  401280:	jmp    0xe9a2a898
  401285:	adc    edx,DWORD PTR [edi+0x5603e962]
  40128b:	(bad)  
  40128c:	jmp    0xe9a2a8a4
  401291:	add    eax,0x3ed6296
  401296:	xchg   esi,eax
  401297:	(bad)  
  401298:	jmp    0xeda2a8a0
  40129d:	add    edx,DWORD PTR [esi-0x69fc169e]
  4012a3:	(bad)  
  4012a4:	jmp    0xe9a2aa1c
  4012a9:	add    eax,0xeddc6296
  4012ae:	xchg   edi,eax
  4012af:	(bad)  
  4012b0:	jmp    0x4012b5
  4012b2:	xchg   esi,eax
  4012b3:	(bad)  
  4012b4:	jmp    0x4012bc
	...
  4012c5:	add    BYTE PTR [eax],al
  4012c7:	add    BYTE PTR [esi-0x69ec169e],ah
  4012cd:	(bad)  
  4012ce:	jmp    0xe9a298d6
  4012d3:	adc    edx,DWORD PTR [esi-0x6a16ff9e]
  4012d9:	bound  eax,QWORD PTR [eax]
  4012db:	fst    DWORD PTR [ebp-0x6a16ff9e]
  4012e1:	bound  eax,QWORD PTR [eax]
  4012e3:	jmp    0xd40757d
  4012e8:	out    0x61,eax
  4012ea:	add    BYTE PTR [ecx],ah
  4012ec:	xchg   ebp,eax
  4012ed:	bound  eax,QWORD PTR [eax]
  4012ef:	jmp    0xe9407589
  4012f4:	xchg   ebp,eax
  4012f5:	bound  eax,QWORD PTR [eax]
  4012f7:	jmp    0xe9407591
  4012fc:	xchg   ebp,eax
  4012fd:	bound  eax,QWORD PTR [eax]
  4012ff:	jmp    0xe9407599
  401304:	xchg   ebp,eax
  401305:	bound  eax,QWORD PTR [eax]
  401307:	jmp    0xe94075a1
  40130c:	xchg   ebp,eax
  40130d:	bound  eax,QWORD PTR [eax]
  40130f:	jmp    0xe94075a9
  401314:	xchg   ebp,eax
  401315:	bound  eax,QWORD PTR [eax]
  401317:	jmp    0xe94075b1
  40131c:	xchg   ebp,eax
  40131d:	bound  eax,QWORD PTR [eax]
  40131f:	jmp    0xe94075b9
  401324:	xchg   ebp,eax
  401325:	bound  eax,QWORD PTR [eax]
  401327:	jmp    0xe94075c1
	...
  40133c:	add    BYTE PTR [eax],al
  40133e:	xchg   ebp,eax
  40133f:	bound  eax,QWORD PTR [eax]
  401341:	jmp    0xe94075db
  401346:	xchg   ebp,eax
  401347:	bound  eax,QWORD PTR [eax]
  401349:	jmp    0xe94075e3
  40134e:	xchg   ebp,eax
  40134f:	bound  eax,QWORD PTR [eax]
  401351:	and    DWORD PTR [ebp+0x61],ebp
  401354:	add    BYTE PTR [ebp-0x6b],ch
  401357:	bound  eax,QWORD PTR [eax]
  401359:	jmp    0xe94075f3
  40135e:	xchg   ebp,eax
  40135f:	bound  eax,QWORD PTR [eax]
  401361:	add    BYTE PTR [edi-0x50ffff9d],bh
  401367:	arpl   WORD PTR [eax],ax
  401369:	add    BYTE PTR [edi+0x7f000063],ch
  40136f:	arpl   WORD PTR [eax],ax
  401371:	add    BYTE PTR [ecx+0x7],ah
  401374:	gs js  0x4013a2
  401377:	arpl   WORD PTR [eax],ax
  401379:	add    ah,dh
  40137b:	pop    DWORD PTR [eax]
  40137d:	add    BYTE PTR [edi+0x73],bh
  401380:	add    BYTE PTR [eax],al
  401382:	jg     0x40131d
  401384:	add    BYTE PTR [eax],al
  401386:	outs   dx,DWORD PTR ds:[esi]
  401387:	pop    ebp
  401388:	add    BYTE PTR [eax],al
  40138a:	outs   dx,DWORD PTR ds:[esi]
  40138b:	arpl   WORD PTR [eax],ax
  40138d:	add    BYTE PTR [edi],bh
  40138f:	arpl   WORD PTR [eax],ax
  401391:	add    BYTE PTR [edi],bh
  401393:	arpl   WORD PTR [eax],ax
  401395:	add    BYTE PTR [edi-0x6e9fffa2],cl
  40139b:	adc    BYTE PTR [ecx+eiz*2-0x35],ah
  40139f:	add    eax,DWORD PTR [eax]
	...
  4013b1:	add    BYTE PTR [eax],al
  4013b3:	add    BYTE PTR [edi],bh
  4013b5:	add    BYTE PTR fs:[eax],al
  4013b8:	das    
  4013b9:	jae    0x4013bc
  4013bb:	add    BYTE PTR [edi],ch
  4013bd:	pop    ebp
  4013be:	add    BYTE PTR [eax],al
  4013c0:	jmp    DWORD PTR [edx+0x1]
  4013c3:	add    bh,bh
  4013c5:	bound  eax,QWORD PTR [eax]
  4013c7:	add    bh,ch
  4013c9:	bound  eax,QWORD PTR [eax]
  4013cb:	add    bh,ch
  4013cd:	bound  eax,QWORD PTR [eax]
  4013cf:	add    BYTE PTR [edi-0x3ebfffa2],bh
  4013d5:	ss popa 
  4013d7:	je     0x401367
  4013d9:	pop    esi
  4013da:	add    BYTE PTR [eax],al
  4013dc:	out    0x20,eax
  4013de:	add    BYTE PTR [eax],al
  4013e0:	mov    edi,0xbf000142
  4013e5:	sbb    al,0x0
  4013e7:	add    BYTE PTR [edi-0x69fffea4],ch
  4013ed:	mov    DWORD PTR [ebx],eax
  4013ef:	add    BYTE PTR [esi-0x69fffc77],dl
  4013f5:	mov    DWORD PTR [ebx],eax
  4013f7:	add    BYTE PTR [esi-0x29fffc37],dl
  4013fd:	mov    BYTE PTR [ebx],al
  4013ff:	add    BYTE PTR [esi-0x69fffc75],dl
  401405:	mov    eax,DWORD PTR [ebx]
  401407:	add    BYTE PTR [esi-0x69fffc75],dl
  40140d:	(bad)  
  40140e:	mov    esp,gs
  401410:	(bad)  
  401411:	mov    dh,0x13
  401413:	inc    eax
  401414:	xchg   esi,eax
  401415:	arpl   WORD PTR [ebp+0x1],si
	...
  401428:	add    BYTE PTR [eax],al
  40142a:	push   ebp
  40142b:	xchg   ebp,eax
  40142c:	div    DWORD PTR [ebp-0x72]
  40142f:	loope  0x401433
  401431:	push   0xffffff96
  401433:	arpl   WORD PTR [edx+ebx*8-0x3d33746a],di
  40143a:	call   0x2a24:0x2a8b508b
  401441:	adc    dh,dl
  401443:	mov    edi,ebx
  401445:	jb     0x4013de
  401447:	enter  0x83f7,0xa3
  40144b:	xchg   ebx,eax
  40144c:	add    esi,DWORD PTR [ebp+ecx*4+0x0]
  401450:	push   ecx
  401451:	or     BYTE PTR ds:0x9e75f6ba,bl
  401457:	mov    esp,0xc9cf0852
  40145c:	add    BYTE PTR [eax],al
  40145e:	arpl   WORD PTR [eax],ax
  401460:	call   0x6d33eee8
  401465:	dec    edi
  401466:	xchg   BYTE PTR [ebx+0x4],cl
  401469:	clc    
  40146a:	fs mov al,dl
  40146d:	(bad)  
  40146e:	fst    DWORD PTR [esi+0x135b8f07]
  401474:	mov    edi,0xe962ca45
  401479:	add    edx,DWORD PTR [esi-0x71ae8d9e]
  40147f:	jmp    0x95d67e7f
  401484:	aam    0x13
  401486:	test   eax,0x2bf7450f
  40148b:	call   0x0:0x713e
	...
  40149e:	add    BYTE PTR [eax],al
  4014a0:	mov    ss,WORD PTR [ebp-0x5fa0f065]
  4014a6:	fld    QWORD PTR [ebx]
  4014a8:	jecxz  0x401493
  4014aa:	adc    eax,0x919a5a83
  4014af:	jge    0x401457
  4014b1:	and    ch,cl
  4014b3:	sti    
  4014b4:	in     al,0x63
  4014b6:	sub    dh,bh
  4014b8:	push   ecx
  4014b9:	pop    ds
  4014ba:	add    DWORD PTR [esi+edx*4],eax
  4014bd:	(bad)  
  4014be:	jmp    0xe9d6e881
  4014c3:	add    edx,DWORD PTR [esi-0x61ae9d9e]
  4014c9:	jmp    0x9b1b9dc9
  4014ce:	cmp    DWORD PTR [edx-0x6c],ebp
  4014d1:	xchg   ebp,eax
  4014d2:	pop    esp
  4014d3:	clc    
  4014d4:	xor    DWORD PTR [edi],ecx
  4014d6:	shl    esi,1
  4014d8:	mov    ds:0x8a51c66a,eax
  4014dd:	jmp    0xa0901106
  4014e2:	in     eax,dx
  4014e3:	add    ebp,DWORD PTR [ebx-0x17]
  4014e6:	mov    ebp,0x1199d282
  4014eb:	ret    0x22a6
  4014ee:	jmp    0xaaa399ee
  4014f3:	neg    cl
  4014f5:	push   ds
  4014f6:	xchg   ecx,eax
  4014f7:	add    edx,DWORD PTR [esi+0x5bbee962]
  4014fd:	xchg   esi,eax
  4014fe:	jmp    0xa2ab06
  401503:	bound  eax,QWORD PTR [eax]
	...
  401515:	add    BYTE PTR [esi+0x6a],ah
  401518:	mov    ebx,ebx
  40151a:	push   ds
  40151b:	pop    ds
  40151c:	clc    
  40151d:	mov    ecx,0xd4ff632f
  401522:	rcl    DWORD PTR [ebp+esi*2+0x80ea851],0x4e
  40152a:	inc    edi
  40152b:	outs   dx,BYTE PTR ds:[esi]
  40152c:	(bad)  
  40152d:	mov    esp,0x3e878a8d
  401532:	mov    al,ds:0xe6625094
  401537:	push   0xffffff8b
  401539:	(bad)  
  40153b:	bound  ebp,QWORD PTR [edx-0x17]
  40153e:	mov    BYTE PTR [esi],cl
  401540:	cld    
  401541:	push   ds
  401542:	push   es
  401543:	fwait
  401544:	call   FWORD PTR [ebp+ebx*4-0x320aad6d]
  40154b:	out    0x55,eax
  40154d:	add    DWORD PTR [ebp+ebp*1+0xd45c20c],edx
  401554:	push   es
  401555:	ret    0xaa55
  401558:	ret    0x95e1
  40155b:	fiadd  DWORD PTR [ecx]
  40155d:	jmp    0xac0977f7
  401562:	mov    ah,BYTE PTR [edx+0x55]
  401565:	bound  edi,QWORD PTR [esi]
  401567:	loopne 0x40152d
  401569:	int    0xba
  40156b:	inc    ebx
  40156c:	adc    DWORD PTR [ecx],ebp
  40156e:	call   0xff94:0x56e8729a
  401575:	cmp    al,0xaa
  401577:	xchg   ebx,eax
  401578:	jne    0x40155b
	...
  40158a:	add    BYTE PTR [eax],al
  40158c:	std    
  40158d:	sbb    bh,bh
  40158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401590:	or     ebp,DWORD PTR [eax-0x40]
  401593:	adc    al,0x96
  401595:	test   eax,0xe795e5c2
  40159a:	push   ebp
  40159b:	loope  0x4015bb
  40159d:	jno    0x40152c
  40159f:	add    BYTE PTR [edx-0x1d00af66],dh
  4015a5:	outs   dx,DWORD PTR ds:[esi]
  4015a6:	push   DWORD PTR [ebp-0x45]
  4015a9:	mov    ?,WORD PTR [ebp+0x8]
  4015ac:	cmp    BYTE PTR [eax],dh
  4015ae:	or     al,0x85
  4015b0:	outs   dx,DWORD PTR ds:[esi]
  4015b1:	push   ss
  4015b2:	adc    ecx,DWORD PTR [ebx+0x453b8bf2]
  4015b8:	scas   eax,DWORD PTR es:[edi]
  4015b9:	add    al,0x7
  4015bb:	mov    eax,0x5fbe
  4015c0:	inc    esp
  4015c1:	xchg   esp,eax
  4015c2:	sub    al,al
  4015c4:	inc    esp
  4015c5:	pusha  
  4015c6:	sub    eax,eax
  4015c8:	mov    dh,0xa0
  4015ca:	or     al,0x0
  4015cc:	and    ch,dl
  4015ce:	in     al,dx
  4015cf:	xor    DWORD PTR [ebx-0xd97a966],0x6f
  4015d6:	inc    eax
  4015d7:	add    BYTE PTR [edi-0x673cfef0],al
  4015dd:	loope  0x40165c
  4015df:	or     al,0x6f
  4015e1:	add    eax,DWORD PTR [esi]
  4015e3:	sbb    edx,0x67
  4015e6:	add    BYTE PTR [ebp+0x40],dh
  4015e9:	dec    edx
  4015ea:	rcr    BYTE PTR [esi+0x76],0xa0
  4015ee:	or     al,0x0
	...
  401600:	add    BYTE PTR [eax],al
  401602:	lods   al,BYTE PTR ds:[esi]
  401603:	or     al,0x10
  401605:	add    dl,ah
  401607:	push   0x5f3f01b8
  40160c:	add    BYTE PTR [esi-0xa],bl
  40160f:	mov    al,ds:0x4a4000c
  401614:	or     al,0xc7
  401616:	jb     0x4015b2
  401618:	add    BYTE PTR [eax],al
  40161a:	call   FWORD PTR [esi-0x75]
  40161d:	push   ebp
  40161e:	imul   ecx
  401620:	adc    cl,BYTE PTR [ebp-0xaf654e]
  401626:	mov    ds:0x96ff566e,al
  40162b:	jbe    0x401639
  40162d:	inc    DWORD PTR [ecx+ebx*4+0x7e]
  401631:	rcr    BYTE PTR [edi-0x7c],0x28
  401635:	sar    BYTE PTR [eax],0xd2
  401638:	ror    DWORD PTR [esi+edx*4],0x8
  40163c:	jbe    0x40163a
  40163e:	xchg   esi,eax
  40163f:	mov    ?,esp
  401641:	sub    dl,dh
  401643:	call   0x4588:0x898ac2ca
  40164a:	mov    dl,0x87
  40164c:	repz sub DWORD PTR [ebx-0x67],edx
  401650:	outs   dx,BYTE PTR ds:[esi]
  401651:	(bad)  
  401652:	fimul  WORD PTR [ecx-0xc69fffd]
  401658:	retf   0xa2c2
  40165b:	jnp    0x4016ab
  40165d:	mov    edi,DWORD PTR [edx-0x5]
  401660:	mov    esi,0xf44971f8
  401665:	push   0x0
	...
  401676:	add    BYTE PTR [eax],al
  401678:	xchg   edx,eax
  401679:	lea    eax,[ebx+0x0]
  40167c:	outs   dx,BYTE PTR ds:[esi]
  40167d:	out    dx,al
  40167e:	add    al,bl
  401680:	imul   esp,esi,0xf5966a03
  401686:	add    BYTE PTR [edx-0x6a],ch
  401689:	cmc    
  40168a:	add    BYTE PTR [eax-0x6a],ch
  40168d:	jnp    0x401692
  40168f:	or     BYTE PTR [ecx+0x17],0xb
  401693:	call   0x44e7af
  401698:	cmova  esi,eax
  40169b:	inc    eax
  40169c:	stos   DWORD PTR es:[edi],eax
  40169d:	jg     0x40165b
  40169f:	ret    0x7b9e
  4016a2:	pop    ebp
  4016a3:	add    BYTE PTR [ebx],dl
  4016a5:	aas    
  4016a6:	in     al,dx
  4016a7:	push   eax
  4016a8:	scas   al,BYTE PTR es:[edi]
  4016a9:	jnp    0x4016be
  4016ab:	add    BYTE PTR [esi-0x60776fa],dl
  4016b1:	shl    bl,0x50
  4016b4:	add    DWORD PTR [ebx+0x1c],esp
  4016b7:	lock out dx,al
  4016b9:	add    eax,0x5d9604b6
  4016be:	test   eax,0x14919879
  4016c3:	lock out dx,al
  4016c5:	das    
  4016c6:	sahf   
  4016c7:	add    al,0x96
  4016c9:	cmp    eax,0x5ad4bda9
  4016ce:	jmp    0x5cca5ac5
  4016d3:	mov    DWORD PTR [esi+0x66f36681],edi
  4016d9:	xchg   ecx,eax
  4016da:	aam    0xff
	...
  4016ec:	add    BYTE PTR [eax],al
  4016ee:	mov    ecx,0xa9f35673
  4016f3:	in     eax,0xcc
  4016f5:	jmp    0x40168d
  4016f7:	pop    ss
  4016f8:	test   ebx,esi
  4016fa:	and    ecx,DWORD PTR [esi+0x62693b51]
  401700:	jmp    0xe9a2aeb0
  401705:	add    ecx,DWORD PTR [edi-0x5c]
  401708:	icebp  
  401709:	add    esp,ebx
  40170b:	fisttp QWORD PTR ds:0xa974195c
  401711:	add    ebp,DWORD PTR [esi+0x14]
  401714:	call   0xeb3c78df
  401719:	pop    ebp
  40171a:	xchg   esi,eax
  40171b:	xchg   ecx,eax
  40171c:	je     0x401719
  40171e:	cmp    DWORD PTR [esi-0x64b60d0c],edi
  401724:	sub    ecx,DWORD PTR [eax]
  401726:	xchg   esi,eax
  401727:	aaa    
  401728:	jb     0x401709
  40172a:	scas   al,BYTE PTR es:[edi]
  40172b:	(bad)  
  40172c:	sti    
  40172d:	inc    ebx
  40172e:	xchg   esi,eax
  40172f:	mov    bl,BYTE PTR [ebx+0x5]
  401732:	push   ebp
  401733:	xchg   ecx,eax
  401734:	inc    ebx
  401735:	add    al,0xac
  401737:	(bad)  
  401738:	(bad)  
  401739:	js     0x4016c9
  40173b:	jp     0x4017ab
  40173d:	lock adc DWORD PTR [ecx+0x65d3a000],edx
  401744:	add    BYTE PTR [ecx+eax*4],dl
  401747:	jle    0x4016cc
  401749:	lods   eax,DWORD PTR ds:[esi]
  40174a:	in     eax,dx
  40174b:	stc    
  40174c:	ret    
  40174d:	sti    
  40174e:	push   ebp
  40174f:	(bad)  
  401750:	clc    
  401751:	sbb    eax,DWORD PTR [eax]
	...
  401763:	add    BYTE PTR [ebx+0x5e8effa5],dl
  401769:	pop    esi
  40176a:	(bad)  
  40176b:	sub    al,0xea
  40176d:	test   al,0x45
  40176f:	jge    0x401706
  401771:	bound  eax,QWORD PTR [eax]
  401773:	jmp    0xf53f79e3
  401778:	ror    DWORD PTR [edi+0x2ddf175],0xfd
  40177f:	pop    esi
  401780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401781:	fcom   QWORD PTR [ebp-0x1f]
  401784:	sub    BYTE PTR [edi+edi*8-0x2c],dh
  401788:	mov    cl,0x90
  40178a:	jne    0x4017cd
  40178c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40178d:	push   ss
  40178e:	or     BYTE PTR [esi],bh
  401790:	jmp    0x4017fc
  401792:	leave  
  401793:	sub    ecx,DWORD PTR [ebp+0x61625490]
  401799:	sti    
  40179a:	(bad)  
  40179b:	stc    
  40179c:	aad    0x62
  40179e:	clc    
  40179f:	fwait
  4017a0:	call   0x758f:0x9583ffa3
  4017a7:	loope  0x4017e6
  4017a9:	mov    ebp,0x9a6406ff
  4017ae:	ret    0x95e5
  4017b1:	xor    eax,0x35c8058b
  4017b6:	adc    al,0x6a
  4017b8:	jae    0x40181c
  4017ba:	jne    0x4017a9
  4017bc:	cld    
  4017bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017be:	adc    cl,ch
  4017c0:	es push ss
  4017c2:	adc    dh,dl
  4017c4:	mov    eax,ds:0x54ff5e
	...
  4017d9:	add    BYTE PTR [edx],ah
  4017db:	mov    ah,dh
  4017dd:	add    BYTE PTR [edx-0x6e],dl
  4017e0:	dec    DWORD PTR [ebx+0x2216aaa]
  4017e6:	ss test eax,0xdaa0010
  4017ec:	in     al,dx
  4017ed:	sub    DWORD PTR [ebx],0xffffff93
  4017f0:	push   DWORD PTR [ebp+0x3]
  4017f3:	cs add al,0x8d
  4017f6:	mov    edx,0x8aff5092
  4017fb:	mov    fs,edi
  4017fd:	ret    
  4017fe:	adc    BYTE PTR [edx+0x627a8bff],dl
  401804:	cmp    DWORD PTR [eax],0xffffffbf
  401807:	pop    ss
  401808:	pop    es
  401809:	mov    edi,DWORD PTR [edx-0x6e]
  40180c:	bswap  eax
  40180e:	fs push 0xa866c02b
  401814:	or     BYTE PTR [eax],al
  401816:	jmp    0xff92:0x7b83ec0e
  40181d:	jne    0x4017c2
  40181f:	sub    eax,0x913a8d02
  401824:	push   eax
  401825:	dec    DWORD PTR [edx-0x75]
  401828:	out    0x97,eax
  40182a:	mov    al,0x91
  40182c:	dec    DWORD PTR [ebx+0x38828f2a]
  401832:	jg     0x40184b
  401834:	or     BYTE PTR [edi],cl
  401836:	enter  0xfe27,0x86
  40183a:	mov    ebx,0x2b02ad
	...
  40184f:	add    BYTE PTR [edi+0x3f08c2cb],ch
  401855:	cmp    BYTE PTR [ebx-0x3654314],cl
  40185b:	dec    edx
  40185d:	(bad)
  401861:	sub    bh,bh
  401863:	push   eax
  401864:	push   eax
  401865:	sbb    BYTE PTR [eax],cl
  401867:	call   0x313c02
  40186c:	and    DWORD PTR [esi+eax*2],eax
  40186f:	or     al,0x15
  401871:	popa   
  401872:	add    al,0x74
  401874:	cwde   
  401875:	cmp    BYTE PTR [ecx+0x5a40945],0x2b
  40187c:	(bad)  
  40187d:	rol    ebp,0x8
  401880:	xchg   esi,eax
  401881:	dec    esi
  401882:	jge    0x401870
  401884:	sbb    eax,0xac831456
  401889:	jns    0x401901
  40188b:	add    al,0xcf
  40188d:	mov    edx,0x8dd8ffff
  401892:	(bad)  
  401893:	dec    BYTE PTR [ebx-0x6f]
  401896:	fneni(8087 only) 
  401898:	retf   0xf017
  40189b:	or     edx,esi
  40189d:	xchg   ebp,eax
  40189e:	cld    
  40189f:	mov    ah,BYTE PTR [ebx-0x77]
  4018a2:	enter  0x9602,0x79
  4018a6:	add    eax,DWORD PTR [eax]
  4018a8:	mov    ebp,0xa1015d85
  4018ad:	mov    ch,0xff
  4018af:	(bad)  
  4018b0:	and    edx,DWORD PTR [ecx+0x51db]
	...
  4018c6:	xchg   edx,eax
  4018c7:	dec    ebp
  4018c8:	lock leave 
  4018ca:	push   esp
  4018cb:	mov    BYTE PTR [ebx],al
  4018cd:	push   ebp
  4018ce:	or     eax,0x7ac48450
  4018d3:	into   
  4018d4:	jl     0x40194b
  4018d6:	mov    ds:0xd38d03f1,al
  4018db:	ja     0x401930
  4018dd:	(bad)  
  4018de:	jmp    0x40186b
  4018e0:	pop    ecx
  4018e1:	jmp    ebx
  4018e3:	xchg   ebx,eax
  4018e4:	(bad)  [eax+0xb037c6b]
  4018ea:	push   esi
  4018eb:	adc    BYTE PTR [ecx],cl
  4018ed:	add    ebx,0x7f
  4018f0:	add    dh,BYTE PTR [ebp-0x6f]
  4018f3:	bound  edx,QWORD PTR [edx]
  4018f5:	(bad)  
  4018f6:	rcr    BYTE PTR [ebx-0x2669ff55],1
  4018fc:	sub    al,0xf0
  4018fe:	xchg   ebp,eax
  4018ff:	xchg   edx,eax
  401900:	add    BYTE PTR [ecx-0x7a],cl
  401903:	pop    ss
  401904:	call   0x6803:0xe96297ac
  40190b:	fwait
  40190c:	stos   DWORD PTR es:[edi],eax
  40190d:	add    BYTE PTR [esi+0x17e06237],dl
  401913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401914:	and    edi,ebp
  401916:	icebp  
  401917:	lea    edi,[edx]
  401919:	sbb    ecx,ebp
  40191b:	clc    
  40191c:	call   0xeb38af7a
  401921:	pop    ecx
  401922:	xchg   esi,eax
  401923:	clc    
  401924:	jmp    0xe9a2af84
  401929:	ret    
	...
  40193a:	add    BYTE PTR [eax],al
  40193c:	leave  
  40193d:	pop    ss
  40193e:	in     eax,0xdb
  401940:	pop    eax
  401941:	mov    bh,0xe9
  401943:	add    ecx,DWORD PTR [edi]
  401945:	sub    BYTE PTR [ebp+0x44],ah
  401948:	sub    dh,BYTE PTR [ecx]
  40194a:	pop    esi
  40194b:	jns    0x4018eb
  40194d:	jp     0x401969
  40194f:	out    dx,al
  401950:	mov    eax,ds:0x9e49268d
  401955:	(bad)  
  401956:	jmp    0x9519af5e
  40195b:	sti    
  40195c:	sbb    al,0x70
  40195e:	fs dec ecx
  401960:	jle    0x401994
  401962:	rol    DWORD PTR [ebx-0x7f169d6a],0x1b
  401969:	or     bl,BYTE PTR [esi]
  40196b:	out    dx,eax
  40196c:	imul   esi,DWORD PTR [edx],0x8d8e7916
  401972:	mov    ebx,0x10f14ff
  401977:	add    al,0xcb
  401979:	popa   
  40197a:	stos   BYTE PTR es:[edi],al
  40197b:	fisubr DWORD PTR [esi+0x2d7c008d]
  401981:	fild   WORD PTR [ebp-0x72d78f]
  401987:	cmp    DWORD PTR [ecx+0x17],eax
  40198a:	cld    
  40198b:	rol    edx,1
  40198d:	(bad)  
  40198e:	call   esi
  401990:	sbb    al,0xcd
  401992:	je     0x40197f
  401994:	cmp    al,0xcf
  401996:	(bad)  
  401997:	cmp    al,0x6
  401999:	jp     0x401994
  40199b:	xchg   ebp,eax
  40199c:	xchg   ebp,eax
  40199d:	bound  ecx,QWORD PTR [ebx+0xaa]
	...
  4019af:	add    BYTE PTR [eax],al
  4019b1:	add    BYTE PTR [ebx+ebx*4-0x3e],cl
  4019b5:	loope  0x40194c
  4019b7:	aaa    
  4019b8:	mov    edx,DWORD PTR [ebp-0x610759ec]
  4019be:	outs   dx,BYTE PTR ds:[esi]
  4019bf:	pop    esi
  4019c0:	call   0xffcd0620
  4019c5:	pusha  
  4019c6:	dec    esi
  4019c7:	mov    al,bh
  4019c9:	sub    al,0xc6
  4019cb:	popa   
  4019cc:	add    cl,ch
  4019ce:	xchg   ebp,eax
  4019cf:	lea    esi,[ebp-0x1b]
  4019d2:	frstor [edx-0x27579103]
  4019d8:	push   ebp
  4019d9:	cmc    
  4019da:	sub    al,0x70
  4019dc:	push   0xffffffe9
  4019de:	dec    edi
  4019df:	(bad)  
  4019e0:	(bad)  
  4019e1:	fdiv   QWORD PTR [ecx-0x57ae8a74]
  4019e7:	push   ss
  4019e8:	or     BYTE PTR [esi+0xe],al
  4019eb:	pop    edi
  4019ec:	call   FWORD PTR [ebx-0x1e3d6667]
  4019f2:	xchg   ebp,eax
  4019f3:	xor    eax,0xa7143d8b
  4019f8:	clc    
  4019f9:	fimul  WORD PTR cs:[edx+0x6295e900]
  401a00:	(bad)  
  401a01:	lods   al,BYTE PTR ds:[esi]
  401a02:	jno    0x401a67
  401a04:	add    cl,ch
  401a06:	xchg   ebp,eax
  401a07:	xlat   BYTE PTR ds:[ebx]
  401a08:	push   ebp
  401a09:	add    BYTE PTR [edi+0x9],al
  401a0c:	adc    cl,BYTE PTR [ebp+0x6a5077f2]
  401a12:	cs jge 0x401a8a
  401a15:	cld    
	...
  401a26:	add    BYTE PTR [eax],al
  401a28:	sub    BYTE PTR [eax+edi*8],dl
  401a2b:	call   edx
  401a2d:	mov    ?,esi
  401a2f:	push   edx
  401a30:	and    ecx,DWORD PTR [ebx]
  401a32:	inc    ebp
  401a33:	clc    
  401a34:	mul    BYTE PTR [eax+0x9620004]
  401a3a:	in     al,dx
  401a3b:	push   0xfffffffe
  401a3d:	or     al,0x45
  401a3f:	or     al,0xaf
  401a41:	jge    0x401ab8
  401a43:	or     bh,dl
  401a45:	cmp    eax,0xc828fffc
  401a4a:	ret    0xff08
  401a4d:	xor    al,0x8b
  401a4f:	in     al,dx
  401a50:	test   DWORD PTR [edx-0x73],ebx
  401a53:	inc    ebp
  401a54:	sti    
  401a55:	das    
  401a56:	push   DWORD PTR [ebp-0x9]
  401a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a5a:	sub    bh,ah
  401a5c:	sbb    BYTE PTR [esi-0x37],bh
  401a5f:	ret    0x5fc7
  401a62:	push   ebp
  401a63:	mov    ebx,DWORD PTR [ebx]
  401a65:	loop   0x401ae4
  401a67:	or     al,0xaf
  401a69:	adc    edx,DWORD PTR [ebx+eax*4]
  401a6c:	mov    edx,0xb974006f
  401a71:	jle    0x401ae8
  401a73:	adc    BYTE PTR [eax+0x13],cl
  401a76:	or     al,0xff
  401a78:	ret    0xe787
  401a7b:	or     ebx,ebx
  401a7d:	jge    0x401a7e
  401a7f:	leave  
  401a80:	mov    ebp,0xf4550062
  401a85:	cmp    bh,0x75
  401a88:	pop    edi
  401a89:	jle    0x401b00
  401a8b:	or     BYTE PTR [eax],al
	...
  401a9d:	add    BYTE PTR [edi-0x7700002e],al
  401aa3:	loope  0x401b22
  401aa5:	adc    BYTE PTR [esi+0x15147779],dl
  401aab:	fdivp  st(7),st
  401aad:	inc    ebp
  401aaf:	xchg   ebx,eax
  401ab0:	in     al,dx
  401ab1:	jne    0x401a59
  401ab3:	mov    WORD PTR [esi+0xc],?
  401ab6:	inc    ecx
  401ab7:	push   cs
  401ab8:	sti    
  401ab9:	out    0x1,eax
  401abb:	jl     0x401aa9
  401abd:	call   FWORD PTR [edi-0x49]
  401ac0:	(bad)  
  401ac1:	inc    edx
  401ac3:	adc    bh,bl
  401ac5:	and    DWORD PTR [ebx-0x738bfc7b],0xffffff9c
  401acc:	jbe    0x401ada
  401ace:	(bad)  
  401acf:	nop
  401ad0:	xlat   BYTE PTR ds:[ebx]
  401ad1:	add    BYTE PTR [esi-0x29d4fe50],dl
  401ad7:	push   0xbc8a75ed
  401adc:	jbe    0x401ae6
  401ade:	(bad)  
  401adf:	daa    
  401ae0:	in     al,dx
  401ae1:	(bad)  
  401ae2:	jmp    0x9648dcb8
  401ae7:	dec    esi
  401ae8:	jns    0x401ad6
  401aea:	adc    eax,0x4bff145e
  401aef:	xchg   esi,eax
  401af0:	in     al,dx
  401af1:	jne    0x401a8d
  401af3:	or     al,0x76
  401af5:	or     BYTE PTR [esi-0x46001345],ch
  401afb:	(bad)  
  401afd:	(bad)  
  401afe:	sub    ecx,DWORD PTR [ecx+0x75ec]
	...
  401b14:	call   0xebff:0xae08762c
  401b1b:	call   FWORD PTR [ecx-0x69f33ebf]
  401b21:	out    0x78,al
  401b23:	in     al,dx
  401b24:	mov    edi,ecx
  401b26:	sti    
  401b27:	out    0x81,eax
  401b29:	push   edx
  401b2a:	in     al,dx
  401b2b:	jmp    esi
  401b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b2e:	sti    
  401b2f:	addr16 mov ebp,0x9642d162
  401b35:	mov    DWORD PTR [ebx+edi*8-0x13e9e187],edx
  401b3c:	pop    ecx
  401b3d:	std    
  401b3e:	call   0x119ae72f
  401b43:	pop    ds
  401b44:	dec    ecx
  401b45:	mov    bh,dh
  401b47:	pop    eax
  401b48:	xchg   esp,eax
  401b49:	xlat   BYTE PTR ds:[ebx]
  401b4a:	lods   al,BYTE PTR ds:[esi]
  401b4b:	dec    ecx
  401b4d:	mov    DWORD PTR [ebx+edi*8+0x39],esi
  401b51:	push   esi
  401b52:	out    0xeb,al
  401b54:	sub    ebp,edi
  401b56:	jmp    0xa3eb:0x3972db78
  401b5d:	pop    edx
  401b5e:	shl    DWORD PTR [ecx],0x11
  401b61:	mov    al,dh
  401b63:	dec    esp
  401b64:	fbld   TBYTE PTR [ebp+ebp*8-0x3a2294fd]
  401b6b:	xchg   edx,edx
  401b6d:	xchg   BYTE PTR [esi-0x1c85618f],ch
  401b73:	in     eax,dx
  401b74:	jmp    0x80ee02
	...
  401b89:	add    BYTE PTR [edx+0x15e82cdb],dl
  401b8f:	and    ch,bl
  401b91:	sti    
  401b92:	aas    
  401b93:	bound  eax,QWORD PTR [esi-0xb76658f]
  401b99:	sti    
  401b9a:	mov    ecx,0xb9eb7076
  401b9f:	mov    esp,esi
  401ba1:	out    0xb1,eax
  401ba3:	psllw  mm3,mm3
  401ba6:	int    0x88
  401ba8:	pop    esi
  401ba9:	jmp    0x401b4c
  401bab:	psraw  mm3,mm3
  401bae:	add    BYTE PTR [esi+0x1f1deb4e],0x45
  401bb5:	mov    ebp,0x50e95a54
  401bba:	or     eax,0x566a0076
  401bbf:	mov    es,edi
  401bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc2:	and    DWORD PTR [edx+0x0],0x45d795e9
  401bc9:	sbb    eax,0xe17589ca
  401bce:	cmp    eax,0x95e9d42e
  401bd3:	ffreep st(0)
  401bd5:	sub    DWORD PTR [esi+0x5df17589],0x2cf6f97e
  401bdf:	fild   DWORD PTR [ebp-0xf]
  401be2:	cmp    al,0xf
  401be4:	cld    
  401be5:	rcr    DWORD PTR [esi+0x20e900b5],1
  401beb:	leave  
  401bec:	je     0x401bed
	...
  401bfe:	add    BYTE PTR [eax],al
  401c00:	sub    al,0xf
  401c02:	clc    
  401c03:	cmp    DWORD PTR [eax+0x62],esi
  401c06:	call   0xa2b343
  401c0b:	jo     0x401c63
  401c0d:	mov    ?,edi
  401c0f:	cmp    al,0xee
  401c11:	jns    0x401c1c
  401c13:	call   0x80ea:0x1cff6295
  401c1a:	mov    ebx,0x8b88eca2
  401c1f:	sub    al,0xe6
  401c21:	pop    eax
  401c22:	enter  0xe596,0x31
  401c26:	(bad)  
  401c27:	cld    
  401c28:	int    0x80
  401c2a:	push   0x7f
  401c2c:	lods   al,BYTE PTR ds:[esi]
  401c2d:	mov    cl,cl
  401c2f:	stos   DWORD PTR es:[edi],eax
  401c30:	mov    ecx,0xc9625488
  401c35:	in     al,0xc4
  401c37:	pop    ecx
  401c38:	aam    0x1e
  401c3a:	hlt    
  401c3b:	jmp    0x64407ed5
  401c40:	push   esi
  401c41:	xchg   BYTE PTR [eax+0x4e],dl
  401c44:	push   es
  401c45:	pop    ebx
  401c46:	call   0xf0fd4b
  401c4b:	add    dl,bh
  401c4d:	mov    ds:0x12c04d78,eax
  401c52:	or     al,ch
  401c54:	inc    ecx
  401c55:	ja     0x401c56
  401c57:	jmp    esi
  401c59:	and    bh,al
  401c5b:	add    DWORD PTR [edx],0x7c
  401c5e:	add    al,0x72
  401c60:	push   ebx
  401c61:	loope  0x401cd0
  401c63:	clc    
	...
  401c74:	add    BYTE PTR [eax],al
  401c76:	cmp    edi,DWORD PTR [ebp+0x75]
  401c79:	cld    
  401c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c7b:	jmp    0x74bf:0x892f00d2
  401c82:	std    
  401c83:	jl     0x401cfa
  401c85:	clc    
  401c86:	(bad)  
  401c88:	add    al,ch
  401c8a:	ds mov edi,edi
  401c8d:	push   DWORD PTR [eax]
  401c8f:	int3   
  401c90:	not    eax
  401c92:	mov    dh,0x47
  401c94:	hlt    
  401c95:	jmp    FWORD PTR [edx+0x7a]
  401c98:	call   0x9f4a32
  401c9d:	jmp    0x401c88
  401c9f:	jp     0x401d16
  401ca1:	or     bh,dl
  401ca3:	inc    edi
  401ca4:	sti    
  401ca5:	inc    DWORD PTR [eax+0x66]
  401ca8:	ror    cl,0x3d
  401cab:	arpl   WORD PTR [eax],ax
  401cad:	jmp    0x401ca8
  401caf:	data16 ror cl,0x2d
  401cb3:	arpl   WORD PTR [eax],ax
  401cb5:	push   0xffffffbd
  401cb7:	and    eax,0x8bcafffc
  401cbc:	out    0xf0,eax
  401cbe:	pop    ss
  401cbf:	jp     0x401cc0
  401cc1:	(bad)  
  401cc2:	push   0xffffff8e
  401cc4:	add    DWORD PTR [eax],eax
  401cc6:	mov    edi,0x4f458d63
  401ccb:	push   DWORD PTR cs:[ebp-0x59]
  401ccf:	stos   DWORD PTR es:[edi],eax
  401cd0:	sar    bl,cl
  401cd2:	xchg   esi,eax
  401cd3:	xor    cl,ch
  401cd5:	adc    DWORD PTR [ebx],0x2a
  401cd8:	add    al,0x74
	...
  401cea:	add    BYTE PTR [eax],al
  401cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ced:	nop
  401cee:	mov    ebx,0x6f4ddb3b
  401cf3:	pop    es
  401cf4:	ds jp  0x401cfa
  401cf7:	add    BYTE PTR [esi+0x562b0224],dl
  401cfd:	je     0x401d05
  401cff:	sub    edx,DWORD PTR [esi+0x52]
  401d02:	mov    BYTE PTR [esi+edx*4],0xc6
  401d06:	jl     0x401cf4
  401d08:	adc    eax,0xd38dec3d
  401d0d:	pop    ebp
  401d0e:	push   esp
  401d0f:	dec    ebx
  401d11:	xchg   ecx,eax
  401d12:	fisttp DWORD PTR [eax+0x65]
  401d15:	jns    0x401d1a
  401d17:	test   DWORD PTR [esi+0x11],edx
  401d1a:	sbb    al,0xff
  401d1c:	mov    ds:0x1ed8db91,eax
  401d21:	test   al,0xe8
  401d23:	mov    ebx,edx
  401d25:	mov    cl,0xe8
  401d27:	jne    0x401d3b
  401d29:	mov    eax,ds:0x7996d212
  401d2e:	cld    
  401d2f:	mov    edi,0x75e8ad8a
  401d34:	mov    dl,al
  401d36:	outs   dx,BYTE PTR ds:[esi]
  401d37:	clc    
  401d38:	inc    esi
  401d39:	mov    eax,ds:0x79960b17
  401d3e:	call   0xe930ffb8
  401d43:	rcl    DWORD PTR [esi-0x618a1787],1
  401d49:	loope  0x401cfd
  401d4b:	cli    
  401d4c:	leave  
  401d4d:	fistp  QWORD PTR [edx+0xc2]
	...
  401d5f:	add    BYTE PTR [eax],al
  401d61:	add    BYTE PTR [esi-0x5574b187],cl
  401d67:	sti    
  401d68:	mov    esi,0xcca445e8
  401d6d:	lea    edx,[ebx+0x62]
  401d70:	gs push ebx
  401d72:	mov    eax,ds:0x9edbf10c
  401d77:	mov    bl,0xe9
  401d79:	add    ebx,DWORD PTR [ebx]
  401d7b:	mov    ds:0x63417bde,eax
  401d80:	jmp    0xf1509e88
  401d85:	fist   DWORD PTR [edx]
  401d87:	mov    esi,DWORD PTR [esi]
  401d89:	call   0xe8753dad
  401d8e:	jecxz  0x401d16
  401d90:	adc    DWORD PTR [esi-0x3169cb9],esp
  401d96:	sbb    DWORD PTR [esi+0x6d],edx
  401d99:	xchg   DWORD PTR [esi-0x2c85169e],edx
  401d9f:	xchg   edx,eax
  401da0:	push   es
  401da1:	outs   dx,BYTE PTR ds:[esi]
  401da2:	dec    edx
  401da3:	jnp    0x401dd0
  401da5:	ficom  DWORD PTR [esi-0x6540959e]
  401dab:	pop    edi
  401dac:	jmp    0x39a2e3b4
  401db1:	fsub   st(7),st
  401db3:	(bad)  
  401db4:	jmp    0xc5602cbc
  401db9:	out    0x8b,eax
  401dbb:	mov    es,ecx
  401dbd:	xchg   edi,eax
  401dbe:	jmp    DWORD PTR [edx-0x17]
  401dc1:	sbb    dl,0x5e
  401dc4:	in     al,0x3
	...
  401dd6:	add    BYTE PTR [eax],al
  401dd8:	xchg   esi,eax
  401dd9:	jb     0x401dc4
  401ddb:	push   ebx
  401ddc:	(bad)  
  401ddd:	bnd jmp 0x2d1bb3e6
  401de3:	fsubr  QWORD PTR [edx+eiz*2-0x62]
  401de7:	jno    0x401dd3
  401de9:	test   DWORD PTR [eax+esi*8],ebx
  401dec:	ror    DWORD PTR [edi],1
  401dee:	and    edi,0x8d919243
  401df4:	scas   eax,DWORD PTR es:[edi]
  401df5:	(bad)  
  401df6:	jmp    0xaef07d
  401dfb:	pusha  
  401dfc:	push   edi
  401dfd:	mov    bh,bh
  401dff:	hlt    
  401e00:	mov    cl,0x7a
  401e02:	cmp    BYTE PTR gs:[edx-0x622b009e],bl
  401e09:	jge    0x401d9b
  401e0b:	push   ebx
  401e0c:	jns    0x401d93
  401e0e:	push   0xffffffe1
  401e10:	in     eax,dx
  401e11:	push   edi
  401e12:	sub    BYTE PTR [eax-0xe8a7a6b],ch
  401e18:	pop    ebp
  401e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1a:	cld    
  401e1b:	ss jns 0x401e77
  401e1e:	fsubr  DWORD PTR [esi]
  401e20:	out    0x8e,eax
  401e22:	call   FWORD PTR [ebp+ebx*2+0x711dba7d]
  401e29:	test   DWORD PTR [ebx],esp
  401e2b:	xor    DWORD PTR [ecx],edi
  401e2d:	psubb  mm1,QWORD PTR [esi]
  401e30:	(bad)  
  401e31:	jp     0x401e32
  401e33:	jl     0x401e72
  401e35:	jge    0x401e17
  401e37:	std    
  401e38:	xor    BYTE PTR [ebp+0x1123],al
	...
  401e4e:	cmp    DWORD PTR [edi],ecx
  401e50:	in     al,dx
  401e51:	add    DWORD PTR [ecx+0x38e90062],ebx
  401e57:	psubsb mm2,mm1
  401e5a:	and    BYTE PTR [ebp+0xef8e9ff],al
  401e60:	or     cl,al
  401e62:	loop   0x401dee
  401e64:	inc    esi
  401e66:	jl     0x401e09
  401e68:	pop    ebx
  401e69:	mov    al,0xd7
  401e6b:	pop    ebp
  401e6c:	add    BYTE PTR [ebp*2-0x15d37c8a],bl
  401e73:	test   BYTE PTR [ebx-0xf],dh
  401e76:	clc    
  401e77:	push   cs
  401e78:	or     BYTE PTR [ecx-0x16ff4c6a],dl
  401e7e:	lods   al,BYTE PTR ds:[esi]
  401e7f:	mov    ds:0x84c9abc9,al
  401e84:	push   esp
  401e85:	add    BYTE PTR [ebp+ebp*4-0x75],al
  401e89:	inc    ebp
  401e8a:	(bad)  
  401e8b:	popa   
  401e8c:	add    BYTE PTR [eax],0xbf
  401e8f:	pusha  
  401e90:	push   eax
  401e91:	push   0x7f
  401e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e94:	repnz shr BYTE PTR [edi-0x4c3d36a0],1
  401e9b:	pusha  
  401e9c:	push   ebp
  401e9d:	mov    ebx,ebx
  401e9f:	adc    al,0xfc
  401ea1:	mov    ebx,DWORD PTR [edx-0x78]
  401ea4:	mov    cl,BYTE PTR [ebp-0x75]
  401ea7:	or     DWORD PTR [esi],0x2a6ae51
  401ead:	sub    edi,DWORD PTR [edi+0x59ab90]
	...
  401ec3:	add    ah,bh
  401ec5:	jle    0x401eca
  401ec7:	repz lds ebx,FWORD PTR [ecx+ecx*8]
  401ecb:	ret    0x6067
  401ece:	push   ebp
  401ecf:	mov    ebx,DWORD PTR [ebx+0x1a8b5715]
  401ed5:	mov    ebx,?
  401ed7:	mov    eax,edx
  401ed9:	xchg   DWORD PTR [edx+0x2815f4d],ecx
  401edf:	repz jecxz 0x401efe
  401ee2:	pop    esi
  401ee3:	leave  
  401ee4:	jge    0x401e71
  401ee6:	call   DWORD PTR [esp+eiz*4-0x56]
  401eea:	push   esi
  401eeb:	push   edi
  401eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eed:	repz pop es
  401eef:	cld    
  401ef0:	je     0x401f3d
  401ef2:	adc    BYTE PTR [ebx],ch
  401ef4:	aas    
  401ef5:	or     bh,BYTE PTR [ebp+0xc]
  401ef8:	int3   
  401ef9:	pusha  
  401efa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401efc:	add    al,0xc9
  401efe:	jne    0x401f01
  401f00:	mov    edi,0x3dc95e1d
  401f05:	mov    edi,edi
  401f07:	push   esp
  401f08:	fs stos BYTE PTR es:[edi],al
  401f0a:	add    esp,0xfffffffb
  401f0d:	adc    al,0x57
  401f0f:	push   ebx
  401f10:	xchg   esi,eax
  401f11:	popa   
  401f12:	add    al,BYTE PTR [ecx]
  401f14:	xchg   esi,eax
  401f15:	jns    0x401efb
  401f17:	jne    0x401ea7
  401f19:	icebp  
  401f1a:	xchg   ebx,eax
  401f1b:	(bad)  
  401f1c:	mov    ecx,0x9e7d7904
  401f21:	xor    al,0x3d
  401f23:	sub    eax,esp
  401f25:	push   edx
  401f26:	add    al,0x1
	...
  401f38:	add    BYTE PTR [eax],al
  401f3a:	xchg   esi,eax
  401f3b:	jns    0x401fb8
  401f3d:	adc    al,0x5c
  401f3f:	and    eax,edx
  401f41:	loop   0x401ed2
  401f43:	add    BYTE PTR [edi+0x8],ah
  401f46:	sar    DWORD PTR [eax+edi*2+0x3f339275],1
  401f4d:	(bad)  
  401f4e:	xchg   esi,eax
  401f4f:	jo     0x401f0c
  401f51:	sub    ecx,DWORD PTR [ebp-0x1]
  401f54:	(bad)  
  401f55:	cmp    bl,BYTE PTR [esi]
  401f57:	mov    esi,0x3bdb00e4
  401f5c:	jp     0x401f62
  401f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f5f:	jns    0x401f9f
  401f61:	(bad)  
  401f62:	mov    eax,ds:0x1cfe4f23
  401f67:	jge    0x401f92
  401f69:	mov    BYTE PTR [edx+0x394579a0],bl
  401f6f:	adc    DWORD PTR [eax],eax
  401f71:	cmp    dl,bh
  401f73:	shl    BYTE PTR [esi],1
  401f75:	adc    BYTE PTR [edi+esi*2-0x47df36e8],ah
  401f7c:	outs   dx,BYTE PTR ds:[esi]
  401f7d:	aad    0xbd
  401f7f:	inc    esp
  401f80:	inc    esi
  401f81:	leave  
  401f82:	aam    0x7c
  401f84:	add    edx,DWORD PTR [ebp+0x1d]
  401f87:	lds    eax,FWORD PTR [eax+0x4e67fec4]
  401f8d:	push   edi
  401f8e:	stc    
  401f8f:	dec    ebp
  401f90:	cld    
  401f91:	pop    edx
  401f92:	sbb    al,0x78
  401f94:	jnp    0x401fdb
  401f96:	jmp    0x401f96
  401f98:	aas    
  401f99:	add    DWORD PTR [esi],ecx
  401f9b:	bound  ebp,QWORD PTR [eax+ebp*8]
	...
  401fae:	add    BYTE PTR [eax],al
  401fb0:	or     eax,0x1d3d2687
  401fb5:	or     eax,0x8a53bce5
  401fba:	jmp    0x72a2b5c2
  401fbf:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401fc1:	jg     0x401fec
  401fc3:	out    0x5b,al
  401fc5:	test   esi,esp
  401fc7:	lods   eax,DWORD PTR ds:[esi]
  401fc8:	push   ebx
  401fc9:	test   esi,ebx
  401fcb:	lods   eax,DWORD PTR ds:[esi]
  401fcc:	mov    cl,BYTE PTR [edx+0x71]
  401fcf:	dec    esi
  401fd0:	cdq    
  401fd1:	popa   
  401fd2:	mov    ah,0xe7
  401fd4:	mov    eax,ds:0x1ce7acb8
  401fd9:	push   edi
  401fda:	adc    DWORD PTR [ebx+ebp*8-0x80],edi
  401fde:	imul   BYTE PTR [ebp+0xf717fd3]
  401fe4:	scas   al,BYTE PTR es:[edi]
  401fe5:	jno    0x402066
  401fe7:	ds push 0xffffffed
  401fea:	xchg   esp,eax
  401feb:	in     al,0xe
  401fed:	push   edi
  401fee:	loope  0x402069
  401ff0:	ret    
  401ff1:	sub    ebx,0xfded504e
  401ff7:	sub    DWORD PTR ds:0xaa331128,ebx
  401ffd:	xor    al,BYTE PTR [esi]
  401fff:	ds test DWORD PTR ds:[ecx],ebp
  402003:	jns    0x401fe0
  402005:	jg     0x402068
  402007:	add    BYTE PTR [eax+ebp*1],bl
  40200a:	in     eax,dx
  40200b:	jp     0x401fe2
  40200d:	arpl   WORD PTR [esi+0x42],ax
  402010:	mov    ebp,0x10abab
	...
  402025:	add    BYTE PTR [esi+0x17f06217],dl
  40202b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202c:	mov    ebp,0x1a8201e2
  402031:	das    
  402032:	fucomp st(7)
  402034:	and    al,0xe0
  402036:	inc    esi
  402037:	add    DWORD PTR [eax],0xa38a9a3c
  40203d:	cdq    
  40203e:	call   0x96ea:0x85a98562
  402045:	jmp    0x1d3f82df
  40204a:	call   0x8981:0xb5972f8a
  402051:	sub    al,0xde
  402053:	xor    DWORD PTR [ebp+0x7d],0xe9cf0ac2
  40205a:	xchg   ebp,eax
  40205b:	ins    DWORD PTR es:[edi],dx
  40205c:	shl    ch,0x34
  40205f:	jmp    0x4020a6
  402061:	pop    ecx
  402062:	mov    ch,0xf7
  402064:	repz push ecx
  402066:	cld    
  402067:	cmp    bh,0x56
  40206a:	sbb    esp,DWORD PTR [edi]
  40206c:	clc    
  40206d:	dec    esi
  40206e:	fbstp  TBYTE PTR [esi-0x1]
  402071:	mov    esp,0x3975815d
  402076:	sub    dh,0xfe
  402079:	ss jne 0x401ffd
  40207c:	jne    0x4020ab
  40207e:	jb     0x4020a8
  402080:	iret   
  402081:	jmp    0xedb5a21b
  402086:	cmp    eax,0xe9cf34
	...
  40209b:	add    BYTE PTR [ebp-0x6e6b00ee],dl
  4020a1:	out    dx,eax
  4020a2:	test   DWORD PTR [edi],edx
  4020a4:	xor    al,0x81
  4020a6:	call   FWORD PTR [ecx-0x90138c3]
  4020ac:	xor    al,0x81
  4020ae:	jne    0x4020a5
  4020b0:	xor    al,0xf7
  4020b2:	div    DWORD PTR [esi+ecx*1-0x70]
  4020b6:	(bad)  
  4020b7:	fdivrp st(4),st
  4020b9:	adc    eax,ebp
  4020bb:	xlat   BYTE PTR ds:[ebx]
  4020bc:	test   DWORD PTR [eax+0x6a5eceff],0x9ea800e8
  4020c6:	(bad)  
  4020c7:	inc    DWORD PTR [ebp+0x6e]
  4020ca:	push   0x279718
  4020cf:	jmp    FWORD PTR [edx+0x3593e86e]
  4020d5:	test   bh,bh
  4020d7:	or     edx,edi
  4020d9:	xor    DWORD PTR [ebp-0xc],0x20
  4020dd:	sbb    bh,al
  4020df:	jmp    FWORD PTR [edx+0x1583e86e]
  4020e5:	test   bh,bh
  4020e7:	and    esi,edi
  4020e9:	xor    DWORD PTR [ebp-0x8],0x17
  4020ed:	sar    ch,0xff
  4020f0:	xor    BYTE PTR [ebp+esi*2-0x81db8f8],al
  4020f7:	push   eax
  4020f9:	lock ret 
  4020fb:	pop    ebx
  4020fc:	mov    dh,0xa5
  4020fe:	or     BYTE PTR [eax],al
	...
  402110:	add    BYTE PTR [eax],al
  402112:	dec    edx
  402113:	icebp  
  402114:	in     al,dx
  402115:	sub    DWORD PTR [ebx+0x3a8b5797],0x78
  40211c:	or     al,al
  40211e:	sub    ebp,DWORD PTR [edx-0x39]
  402121:	add    BYTE PTR [edi+0x64],ch
  402124:	add    BYTE PTR [eax],al
  402126:	inc    esp
  402127:	test   DWORD PTR [ebx+0x7565977d],eax
  40212d:	pop    es
  40212e:	in     eax,0x63
  402130:	add    al,BYTE PTR [eax]
  402132:	das    
  402133:	xchg   ecx,eax
  402134:	jae    0x75419d4c
  40213a:	cmp    dh,bl
  40213c:	add    BYTE PTR [ecx],al
  40213e:	aas    
  40213f:	fs jmp 0x402144
  402142:	push   esp
  402143:	mov    dh,0x81
  402145:	retf   0x6696
  402148:	add    al,BYTE PTR [eax]
  40214a:	and    BYTE PTR [edi],0xfc
  40214d:	push   eax
  40214e:	xchg   esi,eax
  40214f:	cmp    ebp,DWORD PTR [esi+0x0]
  402152:	add    DWORD PTR [edi],edx
  402154:	adc    bh,bh
  402156:	xor    DWORD PTR [ecx-0x15],0xffffffd0
  40215a:	loope  0x4020e5
  40215c:	add    ecx,DWORD PTR [ebx]
  40215e:	(bad)  
  40215f:	ds jno 0x4020ef
  402162:	pop    ebx
  402163:	mov    cl,0x34
  402165:	push   0xffffff96
  402167:	test   BYTE PTR [esi-0xc],0x66
  40216b:	push   ebx
  40216c:	add    al,0xff
  40216e:	inc    ebx
  40216f:	jns    0x402151
  402171:	jne    0x402135
  402173:	loope  0x402112
  402175:	iret   
	...
  402186:	add    BYTE PTR [eax],al
  402188:	xchg   esi,eax
  402189:	mov    DWORD PTR [eax+eax*8],ecx
  40218c:	sub    ecx,DWORD PTR [ebp-0x7b]
  40218f:	jge    0x40213f
  402191:	mov    DWORD PTR [edi+0x46],edx
  402194:	adc    eax,0x2301d78f
  402199:	pop    DWORD PTR [ebp+edi*2+0x3a578a8e]
  4021a0:	sbb    eax,0xe640dbce
  4021a5:	and    DWORD PTR [edx-0x3],eax
  4021a8:	jns    0x4021d2
  4021aa:	(bad)  
  4021ab:	clc    
  4021ac:	and    eax,esi
  4021ae:	fist   DWORD PTR [eax-0x3f]
  4021b1:	mov    ds:0x50966a03,eax
  4021b6:	push   edi
  4021b7:	adc    BYTE PTR [ecx-0x22],bl
  4021ba:	fucomip st,st(0)
  4021bc:	sbb    edx,DWORD PTR [eax+0x4]
  4021bf:	add    BYTE PTR [ebp-0x16f5a7b7],bl
  4021c5:	popa   
  4021c6:	sub    ebp,edi
  4021c8:	cmp    DWORD PTR [eax+0x2d],ebp
  4021cb:	(bad)  
  4021cc:	cmp    eax,0x82458c8d
  4021d1:	test   bl,al
  4021d3:	je     0x402170
  4021d5:	nop
  4021d6:	push   esi
  4021d7:	clc    
  4021d8:	or     DWORD PTR [edx-0x17],esp
  4021db:	loopne 0x402168
  4021dd:	jle    0x4021b0
  4021df:	push   0xffffffd9
  4021e1:	popa   
  4021e2:	jmp    0xa9aafb73
  4021e7:	push   esi
  4021e8:	call   0x0:0xfc44e3
	...
  4021fb:	add    BYTE PTR [eax],al
  4021fd:	add    BYTE PTR [edi+0x538cd6f3],dl
  402203:	pop    edx
  402204:	sub    DWORD PTR [ecx+eiz*8],esi
  402207:	hlt    
  402208:	aam    0xe0
  40220a:	arpl   WORD PTR [edx-0x5a],dx
  40220d:	push   esi
  40220e:	mov    ds:0xbe0c147f,al
  402213:	inc    eax
  402214:	xchg   esi,eax
  402215:	loopne 0x4021d8
  402217:	push   ds
  402218:	mov    al,ds:0x1c62a2c5
  40221d:	(bad)  
  40221e:	ret    0xfce0
  402221:	or     edx,DWORD PTR [edi+0x2b83e962]
  402227:	imul   ebp,DWORD PTR [esi+0x16],0x3a8497c
  40222e:	and    DWORD PTR [eax],ebp
  402230:	icebp  
  402231:	ins    DWORD PTR es:[edi],dx
  402232:	xchg   esi,eax
  402233:	jge    0x402211
  402235:	test   DWORD PTR [eax+0x3e0f8f8],0x9e56466f
  40223f:	mov    dh,BYTE PTR ds:0x207e69e1
  402245:	lds    eax,FWORD PTR [esi+0xdc40262]
  40224b:	xchg   ebx,eax
  40224c:	cmp    ch,ah
  40224e:	(bad)  
  402250:	jmp    0x3d3b858
  402255:	push   esp
  402256:	xchg   edx,eax
  402257:	jecxz  0x402274
  402259:	adc    ah,BYTE PTR [esp+ecx*8]
  40225c:	add    eax,0xd8542482
  402261:	repnz add BYTE PTR [eax],al
	...
  402274:	xchg   BYTE PTR [eax+0x570c0700],al
  40227a:	test   ecx,ebx
  40227c:	mov    ah,0x23
  40227e:	add    bh,ah
  402280:	(bad)  
  402282:	fldcw  WORD PTR [edx+0x3eece9cf]
  402288:	or     eax,0x42d60828
  40228d:	jmp    0xf210:0x301cf57d
  402294:	(bad)  
  402296:	pop    ss
  402297:	bound  ebp,QWORD PTR [edx]
  402299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40229a:	jmp    0x9aa6:0x256587e1
  4022a1:	bound  eax,QWORD PTR [eax]
  4022a3:	jb     0x402243
  4022a5:	out    0x10,eax
  4022a7:	or     BYTE PTR [ebx+0x62],bl
  4022aa:	xor    ebp,DWORD PTR [ebx+0x7ee88051]
  4022b0:	jmp    0x5562:0x86abc91d
  4022b7:	bound  esp,QWORD PTR [esi-0x72137cef]
  4022bd:	bound  esi,QWORD PTR [ebp-0x12]
  4022c0:	pop    eax
  4022c1:	daa    
  4022c2:	or     BYTE PTR [edx+edi*4+0x23],ch
  4022c6:	add    BYTE PTR [edx-0x9],ch
  4022c9:	outs   dx,BYTE PTR ds:[esi]
  4022ca:	add    ah,dl
  4022cc:	nop
  4022cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ce:	inc    ebp
  4022cf:	cmc    
  4022d0:	push   es
  4022d1:	dec    edx
  4022d2:	inc    ecx
  4022d3:	jmp    0x41481a20
	...
  4022e8:	add    BYTE PTR [eax],al
  4022ea:	sub    DWORD PTR [edi-0x65f31700],0x8aa19cff
  4022f4:	xor    eax,0x362922c
  4022f9:	xor    ebp,edx
  4022fb:	adc    eax,ebp
  4022fd:	into   
  4022fe:	pop    ecx
  4022ff:	jge    0x402300
  402301:	add    BYTE PTR [esi+edi*4+0x302775ff],ah
  402308:	call   0xa69d4c
  40230d:	jmp    DWORD PTR [edx-0x4417ac93]
  402313:	xchg   ebx,eax
  402314:	add    BYTE PTR [eax],al
  402316:	test   BYTE PTR [eax+0x692dc95b],ah
  40231c:	add    BYTE PTR [ebp+0x74],dl
  40231f:	lea    edx,[ebx-0x7d]
  402322:	pop    edx
  402323:	outs   dx,BYTE PTR ds:[esi]
  402324:	add    BYTE PTR [ebp-0x10],dh
  402327:	mov    ds:0x497a0845,eax
  40232c:	inc    ecx
  40232d:	add    BYTE PTR [edx+eax*1+0xc],ch
  402331:	add    BYTE PTR [edx-0x44ba389b],dh
  402337:	shr    DWORD PTR [eax],1
  402339:	inc    ecx
  40233a:	scas   eax,DWORD PTR es:[edi]
  40233b:	fwait
  40233c:	jne    0x402346
  40233e:	pop    ss
  40233f:	mov    ah,cl
  402341:	add    BYTE PTR [edi-0x5d002719],bh
  402347:	ins    BYTE PTR es:[edi],dx
  402348:	call   0xa11f2e
  40234d:	add    eax,DWORD PTR [eax]
	...
  40235f:	add    BYTE PTR [edi],al
  402361:	and    BYTE PTR [ebx-0x18],dl
  402364:	in     al,0x98
  402366:	(bad)  
  402367:	inc    DWORD PTR [eax+edi*4]
  40236a:	push   DWORD PTR [ebp+0x77]
  40236d:	xor    eax,ebp
  40236f:	jmp    0x40230c
  402371:	pop    edi
  402372:	add    bh,bh
  402374:	xor    ch,BYTE PTR [ebx+edx*2-0x18]
  402378:	(bad)  
  402379:	stos   DWORD PTR es:[edi],eax
  40237a:	add    BYTE PTR [eax],al
  40237c:	test   al,0x1a
  40237e:	or     al,ch
  402380:	out    0x98,eax
  402382:	(bad)  
  402383:	inc    esp
  402385:	mov    al,ds:0x677dc95b
  40238a:	add    BYTE PTR [ebp-0x6a],dl
  40238d:	add    bh,ch
  40238f:	adc    DWORD PTR [edx+0x6e],0x36
  402393:	push   0x38a9b
  402398:	ds xor eax,0x321ffda
  40239e:	dec    eax
  40239f:	cld    
  4023a0:	adc    eax,0x57291fcf
  4023a5:	mov    DWORD PTR [ebx],eax
  4023a7:	jne    0x40233d
  4023a9:	nop
  4023aa:	idiv   dh
  4023ac:	mov    edx,DWORD PTR [ebp-0x7693ff96]
  4023b2:	fdiv   QWORD PTR [ebp-0x62]
  4023b5:	(bad)  
  4023b7:	inc    DWORD PTR [ebx-0x69bed583]
  4023bd:	push   cs
  4023be:	les    edi,FWORD PTR [ecx+0x4e]
  4023c1:	int3   
  4023c2:	push   edi
  4023c3:	cld    
	...
  4023d4:	add    BYTE PTR [eax],al
  4023d6:	mov    esi,0xc9ffd95d
  4023db:	les    eax,FWORD PTR [edi-0x4]
  4023de:	xchg   esi,eax
  4023df:	mov    DWORD PTR [ebx],eax
  4023e1:	add    cl,bh
  4023e3:	dec    ecx
  4023e4:	sub    eax,DWORD PTR [ecx-0x6a]
  4023e7:	shr    BYTE PTR [edi],1
  4023e9:	mov    eax,DWORD PTR [ecx+0x7b0846f0]
  4023ef:	hlt    
  4023f0:	pop    esp
  4023f1:	call   FWORD PTR [ecx+0xb0441b2]
  4023f7:	popa   
  4023f8:	push   0x0
  4023fa:	sbb    eax,edi
  4023fc:	or     edx,DWORD PTR [eax-0x12]
  4023ff:	add    eax,0x2c96412a
  402404:	adc    ch,al
  402406:	shl    DWORD PTR [ebx],cl
  402408:	(bad)  
  40240a:	popf   
  40240b:	dec    ecx
  40240c:	pop    eax
  40240d:	add    eax,0xebdfce0f
  402412:	mov    cs,WORD PTR [eax]
  402414:	lds    eax,FWORD PTR [edx*1-0x3cfc199e]
  40241b:	lods   al,BYTE PTR ds:[esi]
  40241c:	jb     0x402465
  40241e:	inc    edx
  40241f:	sbb    esp,DWORD PTR [eax]
  402421:	ret    0x6292
  402424:	mov    ah,0x88
  402426:	inc    edx
  402427:	(bad)  
  402429:	inc    edi
  40242a:	sahf   
  40242b:	sub    DWORD PTR [bx+si-0x65],ebx
  40242f:	loop   0x4023e2
  402431:	add    esp,DWORD PTR [ebx-0x69fbce98]
  402437:	(bad)  
  402438:	jmp    0x402475
	...
  402449:	add    BYTE PTR [eax],al
  40244b:	add    bh,bl
  40244d:	lahf   
  40244e:	in     eax,0x3
  402450:	ins    BYTE PTR es:[edi],dx
  402451:	bound  eax,QWORD PTR [ebx+0x4]
  402454:	ins    BYTE PTR es:[edi],dx
  402455:	pop    edi
  402456:	inc    ebx
  402457:	add    al,0x7c
  402459:	bound  edx,QWORD PTR [ecx-0x7c]
  40245c:	xchg   esi,eax
  40245d:	(bad)  
  40245e:	jmp    0xc1aa903f
  402463:	in     al,0xcd
  402465:	popa   
  402466:	jmp    0xa98712f3
  40246b:	inc    eax
  40246c:	inc    edx
  40246d:	addr16 cmp ch,ah
  402470:	mov    eax,0xfe03e9a6
  402475:	pusha  
  402476:	jmp    0xb057ba7e
  40247b:	rcl    DWORD PTR [edx-0x4d76eb9e],0xe6
  402482:	sub    al,0xc
  402484:	lea    esp,[edx+0x3b1606f5]
  40248a:	jmp    0xe9fac3e5
  40248f:	add    edx,DWORD PTR [esi-0x6d3edf9e]
  402495:	bound  ecx,QWORD PTR [esi+0x56]
  402498:	sahf   
  402499:	mov    bh,BYTE PTR [ebx]
  40249b:	enter  0x6296,0x6a
  40249f:	(bad)  [ecx-0x11]
  4024a2:	jmp    ebx
  4024a4:	sub    al,0x53
  4024a6:	add    cl,ch
  4024a8:	xchg   ebp,eax
  4024a9:	imul   edx,DWORD PTR [ebp-0x3f4f65d7],0x12
	...
  4024bf:	add    BYTE PTR [eax],al
  4024c1:	add    BYTE PTR [eax-0x6a16ff46],bl
  4024c7:	(bad)  
  4024c8:	leave  
  4024c9:	sub    ebx,DWORD PTR [ecx+0x39725562]
  4024cf:	out    0xc4,al
  4024d1:	std    
  4024d2:	scas   al,BYTE PTR es:[edi]
  4024d3:	bound  ebp,QWORD PTR [edx-0x17]
  4024d6:	cmp    dh,al
  4024d8:	pop    es
  4024d9:	add    esi,ebx
  4024db:	lods   eax,DWORD PTR ds:[esi]
  4024dc:	add    cl,ch
  4024de:	cwde   
  4024df:	mov    ds:0x12ca1374,al
  4024e4:	call   0xffb9fd73
  4024e9:	pusha  
  4024ea:	push   edi
  4024eb:	jbe    0x402545
  4024ed:	sbb    ebp,ecx
  4024ef:	out    dx,eax
  4024f0:	sti    
  4024f1:	mov    esi,0x79e86a47
  4024f6:	leave  
  4024f7:	bound  eax,QWORD PTR [eax]
  4024f9:	loop   0x4024d0
  4024fb:	out    dx,eax
  4024fc:	or     esp,DWORD PTR [esi+0x19e87667]
  402502:	loopne 0x40257d
  402504:	inc    edx
  402506:	aad    0x8d
  402508:	add    esp,DWORD PTR [edx+0x57]
  40250b:	jbe    0x4024d6
  40250d:	stos   DWORD PTR es:[edi],eax
  40250e:	xchg   esi,eax
  40250f:	bound  edx,QWORD PTR [ebp+0x72]
  402512:	scas   al,BYTE PTR es:[edi]
  402513:	adc    eax,0xc8e148b
  402518:	adc    BYTE PTR [edx],bl
  40251a:	sbb    dh,0xfa
  40251d:	ins    WORD PTR es:[edi],dx
  40251f:	or     al,0x0
  402521:	rcl    DWORD PTR [ebp+0xc3030c],cl
	...
  402537:	add    BYTE PTR [ebp-0x6a3efcf4],dl
  40253d:	bound  eax,QWORD PTR [eax]
  40253f:	add    bh,bh
  402541:	popf   
  402542:	jne    0x40254c
  402544:	(bad)  
  402545:	dec    ecx
  402546:	retf   
  402547:	add    BYTE PTR [edi-0x1a],ch
  40254a:	add    eax,DWORD PTR [eax+0xb]
  40254d:	xor    DWORD PTR [edx+0x0],ebp
  402550:	jge    0x656ff0c2
  402556:	mov    DWORD PTR [ebx+0x33],eax
  402559:	pop    es
  40255a:	add    BYTE PTR [edx+0x3f],ch
  40255d:	pop    es
  40255e:	add    BYTE PTR [edx+0x3d],ch
  402561:	pop    es
  402562:	add    bh,bh
  402564:	fmul   QWORD PTR [esi+ebx*2+0xb652fcb]
  40256b:	ror    BYTE PTR [ebx-0x4bc76b4],0x6
  402572:	add    BYTE PTR [edx-0x11],ch
  402575:	push   es
  402576:	add    BYTE PTR [edx-0x15],ch
  402579:	xor    al,0xe8
  40257b:	dec    edi
  40257c:	xor    al,0x65
  40257e:	add    BYTE PTR [ecx-0x3ff49944],cl
  402584:	stos   BYTE PTR es:[edi],al
  402585:	inc    edx
  402586:	push   DWORD PTR [ebx-0x15]
  402589:	mov    edx,?
  40258b:	retf   0x64bf
  40258e:	push   DWORD PTR [ebx]
  402590:	daa    
  402591:	mov    dl,cl
  402593:	add    BYTE PTR [edi+0x20ff03a3],ch
  402599:	pushf  
  40259a:	(bad)  
  40259b:	jmp    0x40259d
	...
  4025ad:	add    dl,dl
  4025af:	fwait
  4025b0:	xor    ebp,eax
  4025b2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b4:	add    BYTE PTR [eax],al
  4025b6:	clc    
  4025b7:	pop    edi
  4025b8:	(bad)  
  4025b9:	jmp    DWORD PTR [eax]
  4025bb:	pushf  
  4025bc:	sub    eax,eax
  4025be:	inc    esi
  4025bf:	and    DWORD PTR [eax],ecx
  4025c1:	(bad)  
  4025c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025c4:	pop    ebx
  4025c5:	leave  
  4025c6:	lods   eax,DWORD PTR ds:[esi]
  4025c7:	imul   eax,DWORD PTR [eax],0x55
  4025ca:	xchg   esi,eax
  4025cb:	add    al,0xe7
  4025cd:	push   ebx
  4025ce:	sbb    eax,0xad830bc7
  4025d3:	and    BYTE PTR [edi+0x17],cl
  4025d6:	popa   
  4025d7:	mov    ebp,0x448fe80b
  4025dc:	add    eax,DWORD PTR [eax]
  4025de:	push   ecx
  4025df:	mov    ebp,0x33fbe7ff
  4025e4:	add    eax,DWORD PTR [eax]
  4025e6:	inc    ecx
  4025e7:	popf   
  4025e8:	jmp    0x402590
  4025ea:	dec    esp
  4025eb:	mov    al,BYTE PTR [ebx]
  4025ed:	pop    ebx
  4025ee:	pop    edi
  4025ef:	dec    esp
  4025f0:	(bad)  
  4025f1:	inc    edx
  4025f3:	hlt    
  4025f4:	out    0x81,al
  4025f6:	pop    edx
  4025f7:	push   0xffffffea
  4025f9:	call   FWORD PTR [ecx]
  4025fb:	fdiv   DWORD PTR [edx]
  4025fd:	adc    ebx,0xffffffbc
  402600:	sub    eax,DWORD PTR [ecx-0x6a]
  402603:	mov    DWORD PTR [edi+0x15],ecx
  402606:	add    DWORD PTR [edi+0x15],ecx
  402609:	sub    BYTE PTR [edi-0x77],dl
  40260c:	jmp    0x402598
  40260e:	out    dx,eax
  40260f:	test   al,0xd9
  402611:	mov    DWORD PTR [eax],0x0
	...
  402623:	add    BYTE PTR [ebx-0x69bed484],dl
  402629:	mov    DWORD PTR [ebx],eax
  40262b:	add    BYTE PTR [esi+0x7e37170c],dl
  402631:	dec    edx
  402632:	add    al,0x0
  402634:	inc    edx
  402635:	jbe    0x40260f
  402637:	xor    eax,0x429189
  40263c:	scas   al,BYTE PTR es:[edi]
  40263d:	pop    ebp
  40263e:	(bad)  
  402640:	mov    cl,0xc0
  402642:	push   DWORD PTR [esi]
  402644:	jle    0x402690
  402646:	add    al,0x0
  402648:	xchg   esi,eax
  402649:	mov    DWORD PTR [ebx],eax
  40264b:	lea    edx,[ebx]
  40264d:	cli    
  40264e:	call   0xec99b852
  402653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402654:	xchg   BYTE PTR [edx+0x66],ah
  402657:	fst    DWORD PTR [ebx]
  402659:	fisttp QWORD PTR [ebp-0x17]
  40265c:	jns    0x4026d5
  40265e:	mov    ecx,0x4e720ceb
  402663:	fstp   DWORD PTR [ebx]
  402665:	sbb    eax,0x3bee3445
  40266a:	adc    DWORD PTR [ebx-0x6a],eax
  40266d:	or     ch,bl
  40266f:	add    edx,DWORD PTR [esi+0x5d7141e2]
  402675:	(bad)  
  402676:	jmp    0x64a77c87
  40267b:	cmp    eax,0xc0e96297
  402680:	sbb    ebp,DWORD PTR [esi-0x2]
  402683:	fsubr  DWORD PTR [ecx]
  402685:	(bad)  
  402686:	jmp    0x40268e
	...
  402697:	add    BYTE PTR [eax],al
  402699:	add    BYTE PTR [esi+0x29dc649f],dl
  40269f:	ja     0x402697
  4026a1:	fsub   DWORD PTR [ecx-0x6992169e]
  4026a7:	or     al,0xe9
  4026a9:	ins    DWORD PTR es:[edi],dx
  4026aa:	xchg   esi,eax
  4026ab:	or     al,0xe9
  4026ad:	xchg   BYTE PTR [ebx],dl
  4026af:	jp     0x402677
  4026b1:	fdiv   st,st(1)
  4026b3:	adc    DWORD PTR [esi+edi*2-0x16],ebx
  4026b7:	xchg   dh,al
  4026b9:	fadd   DWORD PTR [esi+0x77]
  4026bc:	je     0x40268d
  4026be:	jmp    0x4c18dd39
  4026c3:	jbe    0x402686
  4026c5:	frstor ss:[ecx-0x17]
  4026c9:	or     al,0xd6
  4026cb:	data16 fs hlt 
  4026ce:	xchg   esi,eax
  4026cf:	(bad)  
  4026d0:	jmp    0x288a4440
  4026d5:	add    al,0x3e
  4026d7:	cmp    edx,ecx
  4026d9:	inc    edx
  4026da:	xchg   esi,eax
  4026db:	mov    bh,dh
  4026dd:	xlat   BYTE PTR ds:[ebx]
  4026de:	cdq    
  4026df:	jbe    0x4026e1
  4026e1:	loop   0x402738
  4026e3:	data16 test BYTE PTR [eax-0x6b],bh
  4026e7:	bound  eax,QWORD PTR [eax]
  4026e9:	jb     0x402730
  4026eb:	call   0x76ae8475
  4026f0:	(bad)  
  4026f1:	mov    ecx,0x4dbc8aab
  4026f6:	dec    esi
  4026f7:	jbe    0x402704
  4026f9:	sub    DWORD PTR [esi+0xe9dade],ecx
	...
  40270f:	add    BYTE PTR [ebp+0x356c8962],dl
  402715:	xchg   bh,bh
  402717:	cs adc al,ah
  40271a:	call   0x50b68535
  40271f:	xchg   ecx,eax
  402720:	scas   al,BYTE PTR es:[edi]
  402721:	dec    edx
  402722:	inc    ecx
  402723:	jmp    0xff20d776
  402728:	inc    ecx
  402729:	jbe    0x402793
  40272b:	jmp    0x4026c2
  40272d:	bound  eax,QWORD PTR [eax-0x85f9ef]
  402733:	neg    BYTE PTR [ebp+0x28650fa2]
  402739:	arpl   WORD PTR [eax],ax
  40273b:	jmp    0xee41a254
  402740:	jnp    0x402718
  402742:	add    cl,ch
  402744:	xchg   ebp,eax
  402745:	adc    bh,bh
  402747:	xchg   esp,eax
  402748:	cli    
  402749:	test   edi,edi
  40274b:	(bad)  
  40274c:	stos   BYTE PTR es:[edi],al
  40274d:	jne    0x402704
  40274f:	mov    ecx,0xc1ff75f1
  402754:	shr    DWORD PTR [esi-0x1],cl
  402757:	scas   al,BYTE PTR es:[edi]
  402758:	pop    ds
  402759:	loopne 0x402743
  40275b:	xchg   esi,eax
  40275c:	jmp    0x615177d6
  402761:	dec    edx
  402762:	inc    ecx
  402763:	jmp    0x7f20d730
  402768:	shl    DWORD PTR [ebp+0x68],0x0
  40276c:	lods   eax,DWORD PTR ds:[esi]
  40276d:	popa   
  40276e:	add    BYTE PTR [eax-0x4d9f9],al
	...
  402784:	add    BYTE PTR [eax],al
  402786:	or     BYTE PTR [edx-0x40],ch
  402789:	je     0x40273e
  40278b:	loope  0x40274a
  40278d:	call   0x23fb57a
  402792:	popa   
  402793:	pop    eax
  402794:	push   eax
  402795:	push   eax
  402796:	cli    
  402797:	jecxz  0x402795
  402799:	out    dx,eax
  40279a:	fmul   DWORD PTR [ebp-0x59d817b0]
  4027a0:	add    BYTE PTR [eax],al
  4027a2:	(bad)  
  4027a3:	jmp    0x8e19242d
  4027a8:	call   DWORD PTR [eax+0x78]
  4027ab:	shr    esp,cl
  4027ad:	out    dx,eax
  4027ae:	js     0x40273d
  4027b0:	call   0xffcdcb84
  4027b5:	pop    eax
  4027b6:	mov    bl,dl
  4027b8:	call   0x50cdc0ac
  4027bd:	jmp    DWORD PTR [edx-0x76]
  4027c0:	out    dx,eax
  4027c1:	call   FWORD PTR [eax]
  4027c3:	mov    DWORD PTR [esp+esi*8+0x19e88c08],edi
  4027ca:	pop    es
  4027cb:	mov    edi,?
  4027cd:	jmp    0x40275e
  4027cf:	jmp    0x402756
  4027d1:	cld    
  4027d2:	enter  0xff8b,0x50
  4027d6:	xlat   BYTE PTR ds:[ebx]
  4027d7:	pop    ebx
  4027d8:	leave  
  4027d9:	add    bh,bh
  4027db:	and    BYTE PTR [eax-0x73],dl
  4027de:	jb     0x40276d
  4027e0:	out    dx,eax
  4027e1:	call   FWORD PTR [eax]
  4027e3:	xor    edi,edi
  4027e5:	mov    ch,0xdb
  4027e7:	jnp    0x4027e8
  4027e9:	inc    DWORD PTR [eax]
	...
  4027fb:	add    bh,dl
  4027fd:	icebp  
  4027fe:	repz (bad) 
  402800:	clc    
  402801:	mov    dl,dh
  402803:	neg    DWORD PTR [eax]
  402805:	mov    edi,?
  402807:	mov    ch,0x96
  402809:	jmp    0x4027f1
  40280b:	jmp    FWORD PTR [ecx-0x5e08211e]
  402811:	fcmovnbe st,st(6)
  402813:	test   DWORD PTR [edx+0x7fffd6e3],esp
  402819:	xor    eax,0x589ffd5
  40281e:	push   eax
  40281f:	cld    
  402820:	outs   dx,BYTE PTR ds:[esi]
  402821:	dec    esp
  402822:	retf   0x9600
  402825:	pop    DWORD PTR [ebx]
  402827:	jmp    FWORD PTR [ebx]
  402829:	sbb    ah,dh
  40282b:	jmp    FWORD PTR [ecx+0x22]
  40282e:	xor    esi,esp
  402830:	popa   
  402831:	sbb    eax,0xef590069
  402836:	out    0xef,al
  402838:	push   ecx
  402839:	sub    eax,0x454243eb
  40283e:	(bad)  
  40283f:	lea    ebx,[ebx]
  402841:	data16 out 0xff,al
  402844:	cmp    DWORD PTR [edx+0x5d26b5d6],edi
  40284a:	(bad)  
  40284b:	(bad)  
  40284c:	ds cmp ah,cl
  40284f:	add    BYTE PTR [esi-0x32873cfa],dl
  402855:	je     0x4027e6
  402857:	lock add DWORD PTR [ebp-0x2b],ebp
  40285b:	call   0x159cc9
	...
  402870:	add    BYTE PTR [eax],al
  402872:	sysret 
  402874:	in     al,dx
  402875:	out    dx,eax
  402876:	stc    
  402877:	xchg   esp,eax
  402878:	aad    0xb5
  40287a:	(bad)  
  40287b:	pushf  
  40287c:	aad    0xff
  40287e:	inc    BYTE PTR [ecx*8+0x11e8e1ff]
  402885:	sub    BYTE PTR [edi-0x77],dl
  402888:	aam    0xb5
  40288a:	mov    edx,0xbeffd59c
  40288f:	pop    es
  402890:	int3   
  402891:	add    BYTE PTR [esi+0x42c3f262],dl
  402897:	push   edi
  402898:	jb     0x402821
  40289a:	mov    esi,0x1dd59683
  40289f:	jae    0x402903
  4028a1:	pop    ss
  4028a2:	gs dec edx
  4028a4:	sub    BYTE PTR [eiz*4+0x7a8f7ebe],al
  4028ab:	xor    DWORD PTR [esi-0x2b],0x7e
  4028af:	or     DWORD PTR [ecx+0x6ce59604],esp
  4028b5:	loopne 0x402920
  4028b7:	jae    0x402917
  4028b9:	xor    al,0x71
  4028bb:	lods   eax,DWORD PTR ds:[esi]
  4028bc:	inc    ebp
  4028bd:	in     eax,0x69
  4028bf:	jae    0x402902
  4028c1:	push   ebx
  4028c2:	dec    edi
  4028c3:	(bad)  
  4028c4:	jmp    0xb23a7f47
  4028c9:	aam    0xb
  4028cb:	xchg   BYTE PTR [esi-0x2b],al
  4028ce:	dec    ecx
  4028cf:	mov    ch,BYTE PTR [edi]
  4028d1:	out    0x41,al
  4028d3:	jae    0x402945
  4028d5:	jg     0x4028d7
	...
  4028e7:	add    BYTE PTR [esi],ch
  4028e9:	sbb    DWORD PTR [esi],0xffffffd5
  4028ec:	xor    DWORD PTR [ebp+0x7329e501],ebp
  4028f2:	add    DWORD PTR [esi],edx
  4028f4:	sub    DWORD PTR [ebx+0x6],esi
  4028f7:	mov    eax,ds:0x3a84a61
  4028fc:	adc    DWORD PTR [ebp+0x7309e50d],ebp
  402902:	add    DWORD PTR [ebx],esp
  402904:	into   
  402905:	popa   
  402906:	jmp    0x22dff13
  40290b:	mov    DWORD PTR [ebx],esp
  40290d:	mov    al,dh
  40290f:	aam    0xe9
  402911:	out    0xd9,al
  402913:	mov    BYTE PTR [ebx-0x69bceed5],ah
  402919:	outs   dx,DWORD PTR ds:[esi]
  40291a:	test   esp,edx
  40291c:	or     edi,DWORD PTR [esi+0x0]
  40291f:	(bad)  
  402920:	loop   0x402994
  402922:	call   0xa1f708
  402927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402928:	or     BYTE PTR [edx-0x11],dh
  40292b:	sahf   
  40292c:	retf   0x5a89
  40292f:	xchg   edx,eax
  402931:	jb     0x402932
  402933:	push   esp
  402934:	mov    ecx,0xad86ff82
  402939:	and    ch,dh
  40293b:	jle    0x4029a7
  40293d:	adc    bl,BYTE PTR [esi-0x60]
  402940:	push   esi
  402941:	sbb    BYTE PTR [ebx-0x17a51083],cl
  402947:	push   edx
  402948:	dec    ebx
  402949:	jb     0x40294a
  40294b:	jb     0x40294d
	...
  40295d:	add    BYTE PTR ds:0xbd783572,ah
  402963:	and    eax,DWORD PTR [eax]
  402965:	pop    esi
  402966:	xchg   edi,eax
  402967:	jno    0x4029de
  402969:	icebp  
  40296a:	adc    ah,BYTE PTR ds:0xd3407004
  402970:	sub    BYTE PTR [eax-0x1a3d646b],ch
  402976:	xchg   ebp,eax
  402977:	pop    ss
  402978:	mov    edx,DWORD PTR ds:0xb6f8a716
  40297e:	repnz daa 
  402980:	clc    
  402981:	jmp    0x6a408c1b
  402986:	enter  0x5a,0x7d
  40298a:	daa    
  40298b:	jno    0x402a02
  40298d:	in     eax,dx
  40298e:	jmp    0x67a:0x958307f7
  402995:	repz in eax,0x71
  402998:	mov    DWORD PTR [esi+eiz*8],ebp
  40299b:	jge    0x4029a4
  40299d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40299e:	pop    edi
  40299f:	outs   dx,BYTE PTR ds:[esi]
  4029a0:	add    cl,ch
  4029a2:	xchg   ebp,eax
  4029a3:	bound  ecx,QWORD PTR [ebx+0x413a6b0c]
  4029a9:	add    bh,ch
  4029ab:	nop
  4029ac:	adc    ecx,DWORD PTR [ebx+0x473b927a]
  4029b2:	mov    ebx,0x7ac7090a
  4029b7:	sahf   
  4029b8:	add    DWORD PTR [eax],eax
  4029ba:	scas   eax,DWORD PTR es:[edi]
  4029bb:	gs jmp 0x4029c4
  4029be:	and    al,0x55
  4029c0:	or     edi,edi
	...
  4029d2:	add    BYTE PTR [eax],al
  4029d4:	mov    cl,BYTE PTR [edi+0x67077d83]
  4029da:	jne    0x4029e4
  4029dc:	adc    BYTE PTR [esp+edi*8],cl
  4029df:	call   0x3fbfe1
  4029e4:	hlt    
  4029e5:	sbb    edi,eax
  4029e7:	pop    edi
  4029e8:	ss test al,0x8
  4029eb:	add    BYTE PTR [eax],bh
  4029ed:	lock cmp al,0x91
  4029f0:	xchg   DWORD PTR [edi],esp
  4029f2:	add    bl,ch
  4029f4:	ja     0x402a22
  4029f6:	mov    edi,DWORD PTR [edi]
  4029f8:	xlat   BYTE PTR ds:[ebx]
  4029f9:	sbb    eax,0x71d0fff6
  4029fe:	(bad)  
  4029ff:	jne    0x40298c
  402a01:	popf   
  402a02:	add    eax,0x279791
  402a07:	add    BYTE PTR [edi],ch
  402a09:	add    BYTE PTR gs:[edi+0x6c],bl
  402a0d:	sub    ecx,DWORD PTR [ebx+0x6a2ae8ec]
  402a13:	add    BYTE PTR [eax+0x78e8080b],al
  402a19:	lahf   
  402a1a:	(bad)  
  402a1b:	jmp    DWORD PTR [esi+ebx*4-0x72f88a01]
  402a22:	and    al,bh
  402a24:	jmp    DWORD PTR [ebx+eax*4-0x8]
  402a28:	out    dx,al
  402a29:	or     cl,BYTE PTR [edi]
  402a2b:	push   edi
  402a2c:	outs   dx,DWORD PTR ds:[esi]
  402a2d:	push   esp
  402a2e:	and    dh,BYTE PTR [ebp-0x19]
  402a31:	mov    al,ds:0x7a96778d
  402a36:	jle    0x402a00
	...
  402a48:	add    BYTE PTR [eax],al
  402a4a:	in     eax,0xe6
  402a4c:	xor    ch,BYTE PTR [eax-0x6a]
  402a4f:	push   edx
  402a50:	inc    ebp
  402a51:	add    BYTE PTR [ecx-0x6d],ch
  402a54:	outs   dx,BYTE PTR ds:[esi]
  402a55:	enter  0x7b96,0xfe
  402a59:	mov    edi,0x40c9874a
  402a5e:	xchg   edx,eax
  402a5f:	jnp    0x402abe
  402a61:	pop    esp
  402a62:	cmp    al,0x7b
  402a64:	cmp    ch,al
  402a66:	sbb    ebx,eax
  402a68:	add    eax,DWORD PTR [eax]
  402a6a:	lea    edi,[ebx+0x7ad00557]
  402a70:	add    ebp,ebx
  402a72:	xchg   ebp,eax
  402a73:	(bad)  
  402a74:	or     al,BYTE PTR [eax]
  402a76:	loope  0x402a59
  402a78:	mov    dl,0xc6
  402a7a:	xchg   esi,eax
  402a7b:	jns    0x402a03
  402a7d:	clc    
  402a7e:	xchg   ebp,eax
  402a7f:	nop
  402a80:	push   es
  402a81:	(bad)  
  402a82:	cdq    
  402a83:	jns    0x402b03
  402a85:	(bad)  
  402a86:	enter  0xbcb8,0xc2
  402a8a:	call   0xc6fd:0x6a8b3879
  402a91:	cld    
  402a92:	sbb    eax,0x9604ffc7
  402a97:	mov    DWORD PTR [ebx],eax
  402a99:	add    dh,ah
  402a9b:	and    ecx,eax
  402a9d:	cmc    
  402a9e:	cmp    DWORD PTR [ecx+0x7c],ecx
  402aa1:	inc    ebp
  402aa2:	xor    dl,BYTE PTR [ecx+0x58]
  402aa5:	or     al,0x29
  402aa7:	iret   
  402aa8:	iret   
  402aa9:	jmp    FWORD PTR [ebx+0xf4db81]
	...
  402abf:	add    BYTE PTR [ebx],ah
  402ac1:	imul   edx,edx,0xd2898bff
  402ac7:	jne    0x402a63
  402ac9:	js     0x402b22
  402acb:	cld    
  402acc:	out    dx,al
  402acd:	add    DWORD PTR [eax],ecx
  402acf:	add    BYTE PTR [esi-0xda8199e],dl
  402ad5:	jp     0x402b50
  402ad7:	xlat   BYTE PTR ds:[ebx]
  402ad8:	jmp    0x9306cb4c
  402add:	bound  edi,QWORD PTR [edx]
  402adf:	pop    esp
  402ae0:	mov    ebx,0xbe04283a
  402ae5:	xchg   ebx,eax
  402ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae7:	add    al,0x96
  402ae9:	pop    ebx
  402aea:	test   eax,0x91dba458
  402aef:	pop    esp
  402af0:	scas   eax,DWORD PTR es:[edi]
  402af1:	cmp    ch,BYTE PTR [eax]
  402af3:	add    al,0x45
  402af5:	jp     0x402aa8
  402af7:	retf   0x6296
  402afa:	dec    edx
  402afb:	shr    BYTE PTR [esi+0x21],1
  402afe:	jmp    0x7256002f
  402b03:	loopne 0x402aed
  402b05:	adc    edx,DWORD PTR [esi]
  402b07:	rol    DWORD PTR [ebx],1
  402b09:	pop    ebx
  402b0a:	sbb    DWORD PTR [edi+0x73e96258],0x8dca28d
  402b14:	ror    DWORD PTR [ebx],1
  402b16:	mov    edi,0xe95a54ba
  402b1b:	jl     0x402b00
  402b1d:	pop    edx
  402b1e:	jns    0x402b9d
  402b20:	shl    BYTE PTR ds:[edx+0x57],cl
	...
  402b34:	add    BYTE PTR [eax],al
  402b36:	mov    ds:0xfd0293b,al
  402b3b:	outs   dx,DWORD PTR ds:[esi]
  402b3c:	rol    DWORD PTR ss:[ecx-0x2e],1
  402b40:	cmp    esp,DWORD PTR [edx+0x3e6e226]
  402b46:	stos   BYTE PTR es:[edi],al
  402b47:	dec    ecx
  402b48:	mov    dh,0x34
  402b4a:	ds in  eax,0x2f
  402b4d:	add    al,0x96
  402b4f:	pop    ebx
  402b50:	sub    DWORD PTR [edi-0x6f],edx
  402b53:	cpuid  
  402b55:	xor    edi,ebx
  402b57:	mov    ds:0x681f03f1,eax
  402b5c:	add    BYTE PTR [edx-0x34],ch
  402b5f:	gs jmp 0x402b79
  402b62:	or     ah,BYTE PTR [ecx+0x0]
  402b65:	jmp    0x3f9b3aff
  402b6a:	sub    eax,0xa8e908a4
  402b6f:	fucomi st,st(4)
  402b71:	bound  edx,QWORD PTR [eax+0x5a]
  402b74:	or     ebp,DWORD PTR [ecx+0x1806569]
  402b7a:	xchg   edx,eax
  402b7b:	cmc    
  402b7c:	or     BYTE PTR [ecx-0x6b],dh
  402b7f:	bound  eax,QWORD PTR [eax]
  402b81:	jmp    0xe944cf82
  402b86:	xchg   edx,eax
  402b87:	xchg   esp,eax
  402b88:	jmp    0x402b80
  402b8a:	adc    eax,0x991d5c2a
  402b8f:	loop   0x402bc9
  402b91:	mov    esi,0xe8ba6740
  402b96:	xchg   ebp,eax
  402b97:	bound  eax,QWORD PTR [eax]
  402b99:	xchg   edx,eax
	...
  402baa:	add    BYTE PTR [eax],al
  402bac:	nop
  402bad:	test   al,0x0
  402baf:	jmp    0x69808e49
  402bb4:	lea    esp,[edx+0x75]
  402bb7:	dec    ebp
  402bb8:	repnz mov al,ds:0x62912bc9
  402bbe:	push   ebp
  402bbf:	bound  eax,QWORD PTR [ecx+0x16]
  402bc2:	push   esi
  402bc3:	mov    edx,0xec0c27da
  402bc8:	xchg   ebp,eax
  402bc9:	data16 add cl,ch
  402bcc:	add    al,0x83
  402bce:	push   eax
  402bcf:	inc    ecx
  402bd0:	or     esi,DWORD PTR [edi-0x1]
  402bd3:	cs mov edx,0xb2418b6a
  402bd9:	test   DWORD PTR [edi],0xeb5e6872
  402bdf:	jmp    0x402bda
  402be1:	sbb    ecx,DWORD PTR [ebx]
  402be3:	and    cl,al
  402be5:	add    BYTE PTR [bx+si],0xd9
  402be9:	outs   dx,DWORD PTR ds:[esi]
  402bea:	je     0x402be1
  402bec:	add    al,0xa9
  402bee:	je     0x402bf2
  402bf0:	push   ebx
  402bf1:	sub    BYTE PTR [ebx],ch
  402bf3:	rcl    BYTE PTR [ebp-0x1c],0xc9
  402bf7:	jne    0x402bda
  402bf9:	jmp    0x3de987c0
  402bfe:	leave  
  402bff:	ret    0x61f7
  402c02:	push   ebx
  402c03:	push   esi
  402c04:	push   es
  402c05:	pop    ebx
  402c06:	add    BYTE PTR [eax],al
  402c08:	mov    edi,0x6fd232f1
  402c0d:	push   ecx
  402c0e:	fist   DWORD PTR [eax+0x0]
	...
  402c20:	add    BYTE PTR [eax],al
  402c22:	sbb    esi,edi
  402c24:	push   cs
  402c25:	mov    dh,0xef
  402c27:	idiv   BYTE PTR [ebx]
  402c29:	sub    ebp,DWORD PTR [edi]
  402c2b:	or     eax,DWORD PTR [esi]
  402c2d:	nop
  402c2e:	cmp    al,0xa0
  402c30:	ds nop
  402c32:	ins    BYTE PTR es:[edi],dx
  402c33:	push   edx
  402c34:	das    
  402c35:	nop
  402c36:	and    BYTE PTR [eax+edx*4-0x7d],0x3d
  402c3b:	pop    ebp
  402c3c:	nop
  402c3d:	inc    ebx
  402c3e:	dec    ebx
  402c3f:	push   ecx
  402c40:	nop
  402c41:	jl     0x402cb8
  402c43:	pop    ebp
  402c44:	cmp    DWORD PTR [eax+0x4045a68],edx
  402c4a:	jl     0x402bfd
  402c4c:	inc    ebx
  402c4d:	cmp    al,0x3e
  402c4f:	icebp  
  402c50:	jnp    0x402c5d
  402c52:	mov    edi,DWORD PTR [eax]
  402c54:	nop
  402c55:	jg     0x402cc8
  402c57:	dec    ebp
  402c58:	inc    ecx
  402c59:	nop
  402c5a:	cmp    al,0xb1
  402c5c:	inc    ebx
  402c5d:	cmp    al,0x5e
  402c5f:	icebp  
  402c60:	jnp    0x402c6c
  402c62:	dec    ebx
  402c63:	sbb    edx,DWORD PTR [eax+0x474d327f]
  402c69:	add    ebp,DWORD PTR [edi+0x21]
  402c6c:	rol    edx,0x31
  402c6f:	xor    DWORD PTR [ecx+0x64196c1],0xffffff8b
  402c76:	push   esp
  402c77:	mov    WORD PTR [ebx+0x3a72fec1],?
  402c7d:	nop
  402c7e:	sbb    eax,0x5d5e7430
  402c83:	cmp    BYTE PTR [ecx],bh
  402c85:	mov    eax,DWORD PTR [eax]
	...
  402c97:	add    dl,ch
  402c99:	(bad)  
  402c9a:	ss push esi
  402c9c:	repnz out dx,eax
  402c9e:	push   edi
  402c9f:	or     BYTE PTR [esi],al
  402ca1:	lock dec edi
  402ca3:	adc    BYTE PTR [esi],al
  402ca5:	add    BYTE PTR [eax+0xc],al
  402ca8:	push   es
  402ca9:	dec    eax
  402caa:	stos   DWORD PTR es:[edi],eax
  402cab:	jecxz  0x402d21
  402cad:	or     esi,DWORD PTR [eax+edx*4]
  402cb0:	mov    esi,0xc1ffcf28
  402cb5:	or     cl,BYTE PTR [eax-0x667cc737]
  402cbb:	sar    DWORD PTR [esi-0x4bbc8c8e],0xc2
  402cc2:	jae    0x402d1d
  402cc4:	push   es
  402cc5:	clc    
  402cc6:	les    eax,FWORD PTR [esi+eax*1]
  402cc9:	clc    
  402cca:	fild   DWORD PTR [esi+eiz*1]
  402ccd:	gs scas al,BYTE PTR es:[edi]
  402ccf:	nop
  402cd0:	sbb    eax,0xe15e73b9
  402cd5:	push   eax
  402cd6:	mov    ebp,0x38798ac2
  402cdb:	mov    eax,DWORD PTR [edx+0x68ecc6fb]
  402ce1:	or     eax,0x30ad53ce
  402ce6:	add    BYTE PTR [ebp+0x5a],0xaa
  402cea:	pop    ebx
  402ceb:	add    eax,0xff03ba7f
  402cf0:	cmp    DWORD PTR [edi+0x1c],0x41
  402cf4:	xchg   esi,eax
  402cf5:	and    DWORD PTR [esi],esp
  402cf7:	(bad)  
  402cf8:	xchg   esi,eax
  402cf9:	jns    0x402cf5
  402cfb:	mov    edi,0x0
	...
  402d0c:	add    BYTE PTR [eax],al
  402d0e:	stos   DWORD PTR es:[edi],eax
  402d0f:	(bad)  
  402d10:	retf   
  402d11:	into   
  402d12:	mov    ds:0x92581e52,eax
  402d17:	clc    
  402d18:	jmp    0x94abc376
  402d1d:	sti    
  402d1e:	adc    dh,dh
  402d20:	add    al,0xdb
  402d22:	mov    ds:0x8d03e9a4,al
  402d27:	mov    ds:0x6b55047c,al
  402d2c:	je     0x402cfd
  402d2e:	(bad)  
  402d2f:	jnp    0x402cdd
  402d31:	add    al,0x96
  402d33:	push   edi
  402d34:	ret    0x1afd
  402d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d38:	jmp    0x651dc340
  402d3d:	rcl    eax,1
  402d3f:	imul   eax,esi,0x34
  402d42:	ds callw 0xc34a
  402d47:	jp     0x402cdc
  402d49:	enter  0x6296,0xe2
  402d4d:	ret    
  402d4e:	mov    eax,ds:0x960455e6
  402d53:	(bad)  
  402d54:	fadd   QWORD PTR [edi]
  402d56:	xchg   edi,eax
  402d57:	(bad)  
  402d58:	jmp    0xea023e59
  402d5d:	add    edx,DWORD PTR [esi+0x137ee8f8]
  402d63:	outs   dx,DWORD PTR ds:[esi]
  402d64:	jg     0x402d33
  402d66:	adc    DWORD PTR [edx],0x62528d81
  402d6c:	jmp    0x67af48ef
  402d71:	int    0x0
	...
  402d83:	add    BYTE PTR [ecx+0x12],ch
  402d86:	push   ecx
  402d87:	inc    esp
  402d88:	pusha  
  402d89:	imul   edx,DWORD PTR [esi-0x7],0x19
  402d8d:	cmc    
  402d8e:	in     al,dx
  402d8f:	pop    ebx
  402d90:	sbb    eax,0x1b03a83a
  402d95:	in     eax,0x3a
  402d97:	into   
  402d98:	inc    ecx
  402d99:	imul   eax,DWORD PTR [eax],0xffffff99
  402d9c:	pop    ebp
  402d9d:	mov    esi,esi
  402d9f:	arpl   WORD PTR cs:[ebx+0x75],bp
  402da3:	icebp  
  402da4:	gs jp  0x402dcb
  402da7:	push   ss
  402da8:	push   ebx
  402da9:	imul   ebp,ebx,0xffffffe6
  402dac:	dec    edx
  402dad:	cmc    
  402dae:	pop    es
  402daf:	pop    esp
  402db0:	sbb    DWORD PTR [edi-0x2],ebp
  402db3:	push   es
  402db4:	fist   DWORD PTR [ecx]
  402db6:	call   0xffab15f9
  402dbb:	pusha  
  402dbc:	adc    DWORD PTR [esi-0x2],edi
  402dbf:	out    dx,al
  402dc0:	loop   0x402db9
  402dc2:	call   DWORD PTR [edx-0x6e]
  402dc5:	clc    
  402dc6:	add    DWORD PTR [ebx-0x66],edx
  402dc9:	clc    
  402dca:	add    al,BYTE PTR [ecx-0x6e]
  402dcd:	bound  eax,QWORD PTR [eax]
  402dcf:	test   eax,0xc7ecb4e2
  402dd4:	fisubr DWORD PTR [edx-0x18]
  402dd7:	int    0xd6
  402dd9:	popa   
  402dda:	add    BYTE PTR [eax+0x50],ah
  402ddd:	push   0x40
  402ddf:	xor    eax,0xf9756bc2
  402de4:	(bad)  
  402de6:	or     ebx,DWORD PTR [esi+0x0]
	...
  402df8:	add    BYTE PTR [eax],al
  402dfa:	dec    eax
  402dfb:	push   0xffffffe8
  402dfd:	(bad)  
  402dfe:	mov    ebx,0x3d62ff6a
  402e03:	push   0x75
  402e05:	sub    DWORD PTR [ebp-0x73],0x5d95e9c3
  402e0c:	(bad)  
  402e0e:	jle    0x402e79
  402e10:	mov    ch,0x7d
  402e12:	arpl   WORD PTR [edx-0x1],bp
  402e15:	push   ecx
  402e16:	cwde   
  402e17:	sahf   
  402e18:	add    cl,ch
  402e1a:	push   edx
  402e1b:	mov    al,0xec
  402e1d:	push   edi
  402e1e:	dec    edx
  402e1f:	push   0xffffffe8
  402e21:	and    DWORD PTR [edi+0x6a],esp
  402e24:	inc    DWORD PTR [eax]
  402e26:	les    esp,FWORD PTR [edx+0x696dc95b]
  402e2c:	call   DWORD PTR [esp+esi*4-0x77]
  402e30:	add    esp,0xffff9773
  402e36:	in     al,dx
  402e37:	xchg   esi,eax
  402e38:	jne    0x402e46
  402e3a:	adc    BYTE PTR [eax],0x8
  402e3d:	push   0x414d2a
  402e42:	mov    al,ds:0x3e291a50
  402e47:	callw  0x3904
  402e4b:	sahf   
  402e4c:	dec    DWORD PTR [ebx]
  402e4e:	scas   eax,DWORD PTR es:[edi]
  402e4f:	data16 test dl,bl
  402e52:	jmp    DWORD PTR [ebp+0x0]
  402e55:	sub    edx,esp
  402e57:	jmp    0x402ddd
  402e59:	out    dx,eax
  402e5a:	rcr    DWORD PTR [ebp+0x50ff],0x0
	...
  402e6d:	add    BYTE PTR [eax],al
  402e6f:	add    BYTE PTR [edi+0x62],dl
  402e72:	add    DWORD PTR [eax],eax
  402e74:	mov    edi,0xbfc3e48d
  402e79:	gs or  eax,eax
  402e7c:	mov    al,0xe9
  402e7e:	mov    esp,0x3d65af00
  402e83:	add    al,0xbe
  402e85:	add    BYTE PTR gs:[edi],cl
  402e88:	cmp    al,dl
  402e8a:	add    BYTE PTR [eax],al
  402e8c:	scas   eax,DWORD PTR es:[edi]
  402e8d:	jmp    0xe9ba:0x865ffc44
  402e94:	and    BYTE PTR [ebp-0x63df7a73],bl
  402e9a:	(bad)  
  402e9b:	call   FWORD PTR [edi+0xfd4f86]
  402ea1:	sahf   
  402ea2:	or     eax,eax
  402ea4:	push   0xffffff81
  402ea6:	mov    eax,DWORD PTR [bx+0x1f]
  402eab:	(bad)  
  402eac:	cli    
  402ead:	(bad)  
  402eae:	(bad)  
  402eaf:	call   DWORD PTR [esi+0x3ee83410]
  402eb5:	push   cs
  402eb6:	retf   
  402eb7:	dec    DWORD PTR [ecx-0x5a]
  402eba:	sti    
  402ebb:	dec    edi
  402ebc:	cs ins BYTE PTR es:[edi],dx
  402ebe:	sar    edi,1
  402ec0:	cmp    DWORD PTR [ebx+edi*8],esp
  402ec3:	(bad)  
  402ec4:	stos   DWORD PTR es:[edi],eax
  402ec5:	cmp    DWORD PTR [eax-0x7b],0x39
  402ec9:	inc    ecx
  402eca:	retf   
  402ecb:	inc    esi
  402ecd:	push   ebx
  402ece:	mov    edx,0x345019f5
  402ed3:	inc    DWORD PTR [eax]
	...
  402ee5:	add    BYTE PTR [ebx+0x70e83457],cl
  402eeb:	push   esp
  402eec:	retf   
  402eed:	dec    DWORD PTR [ebp-0x6acafc5]
  402ef3:	in     eax,0xc6
  402ef5:	call   0xb90cb
  402efa:	pop    ds
  402efb:	ss int3 
  402efd:	and    DWORD PTR [ebx-0x7d],0x3
  402f01:	je     0x402f57
  402f03:	(bad)  
  402f04:	aas    
  402f05:	hlt    
  402f06:	cbw    
  402f08:	push   eax
  402f09:	cld    
  402f0a:	mov    esi,0x9600c050
  402f0f:	inc    dl
  402f11:	js     0x402e97
  402f13:	mov    al,0x50
  402f15:	hlt    
  402f16:	mov    esi,0x9600c67c
  402f1b:	je     0x402ee0
  402f1d:	je     0x402f97
  402f1f:	sub    ecx,ebx
  402f21:	jne    0x402ec1
  402f23:	loop   0x402f2a
  402f25:	repnz xchg ecx,eax
  402f27:	fnstcw WORD PTR [esi-0x28]
  402f2a:	out    dx,al
  402f2b:	loopne 0x402f7d
  402f2d:	clc    
  402f2e:	in     eax,0x49
  402f30:	fsubr  QWORD PTR [esp+eax*4]
  402f33:	icebp  
  402f34:	leave  
  402f35:	(bad)  
  402f36:	jmp    0x402f25
  402f38:	(bad)  
  402f3a:	push   esp
  402f3b:	arpl   cx,bp
  402f3d:	add    ecx,DWORD PTR ds:0xe3caed1e
  402f43:	push   0x66
  402f45:	add    edi,DWORD PTR [esi]
  402f47:	call   0x0:0xca58
	...
  402f5a:	add    BYTE PTR [eax],al
  402f5c:	dec    ecx
  402f5d:	push   0x392ec7bc
  402f62:	push   eax
  402f63:	retf   0xdc39
  402f66:	sub    ch,BYTE PTR [esi]
  402f68:	pop    edi
  402f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f6a:	loope  0x402f6f
  402f6c:	ret    
  402f6d:	fist   DWORD PTR ds:0xf0e60d32
  402f73:	fiadd  WORD PTR [edi+0x1c01020f]
  402f79:	and    al,ch
  402f7b:	jnp    0x402f0e
  402f7d:	pop    ds
  402f7e:	imul   ecx,DWORD PTR [edx],0x29f3ed96
  402f84:	dec    ecx
  402f85:	pop    ds
  402f86:	imul   ecx,DWORD PTR [edx],0x8302eeb6
  402f8c:	test   eax,0x16df5d55
  402f91:	sub    bl,dh
  402f93:	dec    edi
  402f94:	mul    dl
  402f96:	push   ss
  402f97:	sti    
  402f98:	inc    ebp
  402f99:	mov    esp,DWORD PTR [edx+0x47]
  402f9c:	sahf   
  402f9d:	addr16 cmp al,0xfc
  402fa0:	mov    ecx,0x9604abdd
  402fa5:	jecxz  0x402f58
  402fa7:	add    al,0x28
  402fa9:	aas    
  402faa:	imul   ecx,DWORD PTR [eax+0x6e],0x8b4fc967
  402fb1:	loop   0x402fd0
  402fb3:	or     al,0x99
  402fb5:	push   ebp
  402fb6:	sbb    eax,0xd0e711fa
  402fbb:	enter  0xee9c,0xed
  402fbf:	add    DWORD PTR [eax],0x0
	...
  402fd2:	add    ch,BYTE PTR [ebx]
  402fd4:	jle    0x402fd1
  402fd6:	add    ah,BYTE PTR [eax+0x0]
  402fd9:	scas   eax,DWORD PTR es:[edi]
  402fda:	(bad)  
  402fdb:	sub    bh,bh
  402fdd:	jmp    0xec2b942c
  402fe2:	inc    edx
  402fe3:	xchg   esi,eax
  402fe4:	pop    edi
  402fe5:	xor    BYTE PTR [eax+0x5e],dl
  402fe8:	add    BYTE PTR [edx+edx*8+0x36258376],bh
  402fef:	adc    eax,DWORD PTR [ebx+0x41381204]
  402ff5:	jmp    0x6a521e8f
  402ffa:	cdq    
  402ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ffc:	cs test al,0x95
  402fff:	bound  esi,QWORD PTR [eax+esi*8+0x1a]
  403003:	and    eax,0x62d4cfa4
  403008:	add    BYTE PTR [esi+edx*4+0x4cb2c03b],bl
  40300f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403010:	or     cl,ch
  403012:	mov    ds:0xc9a4c78b,al
  403017:	popa   
  403018:	add    cl,ch
  40301a:	xchg   ebp,eax
  40301b:	aad    0x45
  40301d:	icebp  
  40301e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301f:	addr16 jne 0x403013
  403022:	inc    ebx
  403023:	(bad)  
  403024:	push   esp
  403026:	or     eax,0xd2e94138
  40302b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40302c:	je     0x403060
  40302e:	jmp    0xd0db:0x95e9c1ef
  403035:	ins    BYTE PTR es:[edi],dx
	...
  403046:	add    BYTE PTR [eax],al
  403048:	js     0x4030b8
  40304a:	push   eax
  40304b:	inc    ebx
  40304c:	jp     0x403062
  40304e:	call   esp
  403050:	or     DWORD PTR [eax],edi
  403052:	inc    ecx
  403053:	jmp    0xd0b4d6fa
  403058:	(bad)  
  403059:	sbb    al,0xe4
  40305b:	call   0x8e4092f5
  403060:	fsubr  DWORD PTR [edx-0x71]
  403063:	add    BYTE PTR [edx-0x48a007a],dh
  403069:	jmp    0xc:0x1cfcec44
  403070:	arpl   WORD PTR [ecx-0x3a],bp
  403073:	inc    ebp
  403074:	mov    edi,0x6f00005f
  403079:	xchg   DWORD PTR [edi],eax
  40307b:	mov    DWORD PTR [edx],0x3f000092
  403081:	bound  ebp,QWORD PTR [edx+0x0]
  403084:	bound  ebp,QWORD PTR gs:[edx+0x10]
  403088:	stos   BYTE PTR es:[edi],al
  403089:	and    al,0xe4
  40308b:	push   eax
  40308c:	push   ebp
  40308d:	(bad)  
  40308e:	push   DWORD PTR [ebp+0x63]
  403091:	call   0xb00:0x2149bc15
  403098:	outs   dx,DWORD PTR ds:[esi]
  403099:	adc    eax,0x1c7c4301
  40309e:	hlt    
  40309f:	add    BYTE PTR [ebx],ah
  4030a1:	push   0xfffffffe
  4030a3:	jne    0x4030a8
  4030a5:	mov    DWORD PTR [edx-0x749e103f],ebx
  4030ab:	ret    
	...
  4030bc:	add    BYTE PTR [eax],al
  4030be:	add    al,0xa9
  4030c0:	ret    0xff08
  4030c3:	xor    al,0x8b
  4030c5:	in     al,dx
  4030c6:	clc    
  4030c7:	adc    ecx,DWORD PTR [eax]
  4030c9:	call   0x40d031
  4030ce:	jg     0x4030fe
  4030d0:	call   0xffde2075
  4030d5:	push   eax
  4030d6:	fcom   DWORD PTR [ebx]
  4030d8:	or     BYTE PTR [eax-0x19],dl
  4030db:	mov    edi,0x39bf00c1
  4030e0:	leave  
  4030e1:	ret    0x61b3
  4030e4:	push   ebp
  4030e5:	mov    ecx,DWORD PTR [ebx]
  4030e7:	loop   0x4030ad
  4030e9:	cld    
  4030ea:	pop    esp
  4030eb:	loope  0x40316a
  4030ed:	or     BYTE PTR [esi-0x42f8af85],dl
  4030f3:	mov    ebx,0x7754c92b
  4030f8:	add    ebp,DWORD PTR [ebx]
  4030fa:	pop    ebp
  4030fb:	push   ecx
  4030fc:	add    al,0x6a
  4030fe:	xchg   esi,eax
  4030ff:	popa   
  403100:	add    al,0x6a
  403102:	xchg   esi,eax
  403103:	popa   
  403104:	(bad)  
  403105:	(bad)  
  403106:	jmp    0x40317b
  403108:	pop    ecx
  403109:	add    ah,ch
  40310b:	jnp    0x4030e8
  40310d:	les    edx,FWORD PTR [edi+0x7b]
  403110:	add    ecx,DWORD PTR [ebx]
  403112:	push   esi
  403113:	(bad)  
  403114:	adc    cl,BYTE PTR [ecx+0x75c71fdb]
  40311a:	cmp    dl,BYTE PTR [ebx]
  40311c:	lock xor DWORD PTR cs:[ebx+edi*8],ebp
  403121:	mov    edi,0x0
	...
  403132:	add    BYTE PTR [eax],al
  403134:	mov    ds:0xacd87b5f,al
  403139:	jnp    0x403194
  40313b:	add    BYTE PTR [ecx],bl
  40313d:	into   
  40313e:	(bad)  
  40313f:	push   ebx
  403140:	jl     0x40318e
  403142:	(bad)  
  403143:	jne    0x4030e3
  403145:	loope  0x40314a
  403147:	push   0xffffff96
  403149:	push   ebx
  40314a:	ins    DWORD PTR es:[edi],dx
  40314b:	rcl    DWORD PTR [esi+0x6bbffa7b],0x83
  403152:	xor    ch,al
  403154:	(bad)  
  403155:	imul   eax,esi,0xffffffff
  403158:	lods   eax,DWORD PTR ds:[esi]
  403159:	mov    al,ds:0xb23dc37a
  40315e:	rol    DWORD PTR [esi+edx*4],0x26
  403162:	jnp    0x403150
  403164:	adc    eax,0x6550d7bf
  403169:	dec    edx
  40316a:	xor    dl,BYTE PTR [edi+0x60]
  40316d:	lock aas 
  40316f:	or     al,0x23
  403171:	add    eax,DWORD PTR [ebx+0x787b9600]
  403177:	adc    al,0xdb
  403179:	popa   
  40317a:	jmp    0x72a2c782
  40317f:	stos   DWORD PTR es:[edi],eax
  403180:	sbb    eax,0x90dba89b
  403185:	fldenv [eax+ebx*8]
  403188:	or     eax,0x7f02f0e6
  40318d:	popf   
  40318e:	out    0x83,al
  403190:	adc    eax,0x6d1ab680
  403195:	loopne 0x403209
  403197:	or     eax,DWORD PTR [eax]
	...
  4031a9:	add    ah,ah
  4031ab:	push   esp
  4031ac:	jmp    0x9603:0xe9231eca
  4031b3:	aaa    
  4031b4:	sub    al,BYTE PTR [edx]
  4031b6:	dec    esi
  4031b7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4031b9:	xlat   BYTE PTR ds:[ebx]
  4031ba:	(bad)  
  4031bc:	add    DWORD PTR [ecx-0x3d],edi
  4031bf:	jb     0x4031e7
  4031c1:	std    
  4031c2:	xchg   esi,eax
  4031c3:	aas    
  4031c4:	lods   al,BYTE PTR ds:[esi]
  4031c5:	pop    esi
  4031c6:	push   ecx
  4031c7:	sbb    eax,0x95ed7ce5
  4031cc:	push   ss
  4031cd:	mov    esi,0xa71f5ad0
  4031d2:	dec    esp
  4031d3:	retf   
  4031d4:	cs cmp eax,0x11b4ec9a
  4031da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031db:	arpl   WORD PTR [edi+edx*8-0x7],di
  4031df:	in     eax,dx
  4031e0:	lock js 0x40323e
  4031e3:	jb     0x40317e
  4031e5:	fild   DWORD PTR [ebx-0x1dfc169e]
  4031eb:	test   eax,0x629603ed
  4031f0:	jb     0x403239
  4031f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f3:	outs   dx,DWORD PTR ds:[esi]
  4031f4:	mov    WORD PTR [esi],fs
  4031f6:	imul   ecx,DWORD PTR [eax],0x995e2930
  4031fc:	stos   DWORD PTR es:[edi],eax
  4031fd:	clc    
  4031fe:	mov    ecx,0x15d8720e
  403203:	lahf   
  403204:	add    BYTE PTR [ebp+0x1a500b78],dh
  40320a:	adc    BYTE PTR gs:[ebx+0x1c],cl
	...
  40321d:	add    BYTE PTR [eax],al
  40321f:	add    BYTE PTR [esi+0xef17dd8],bl
  403225:	push   ds
  403226:	adc    BYTE PTR [eax-0x37],ah
  403229:	mov    sp,si
  40322c:	inc    BYTE PTR [ebx]
  40322e:	add    al,0x72
  403230:	ret    
  403231:	pop    edx
  403232:	mov    edx,DWORD PTR [esi]
  403234:	outs   dx,BYTE PTR ds:[esi]
  403235:	fdivr  st,st(1)
  403237:	mov    edx,0xbafb3f5f
  40323c:	dec    edi
  40323d:	aad    0x84
  40323f:	out    dx,al
  403240:	int    0xbe
  403242:	push   0x36
  403244:	xchg   edi,eax
  403245:	pop    esp
  403246:	shr    DWORD PTR [ecx],0x4b
  403249:	pusha  
  40324a:	ret    
  40324b:	bound  ecx,QWORD PTR [edi+0x2f]
  40324e:	stc    
  40324f:	or     cl,BYTE PTR [edx+0x2f]
  403252:	stc    
  403253:	ins    BYTE PTR es:[edi],dx
  403254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403255:	dec    ebx
  403256:	push   esi
  403257:	jle    0x403244
  403259:	jns    0x40325e
  40325b:	xchg   edi,eax
  40325c:	and    DWORD PTR [edx-0x6d690a3e],esp
  403262:	mov    esp,DWORD PTR [ecx]
  403264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403265:	and    edx,DWORD PTR [bp+di]
  403268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403269:	lea    ebx,[di+0xb]
  40326d:	mov    BYTE PTR [eax-0x37],dh
  403270:	cdq    
  403271:	pop    edi
  403272:	dec    esi
  403273:	icebp  
  403274:	aam    0xa0
  403276:	adc    edx,ebp
  403278:	das    
  403279:	xlat   BYTE PTR ds:[ebx]
  40327a:	cli    
  40327b:	mov    edx,0x1af93ecd
  403280:	retf   0x9cd4
  403283:	inc    BYTE PTR [eax]
	...
  403295:	add    bl,ch
  403297:	xchg   ebx,eax
  403298:	mov    ebp,0xc0496a8
  40329d:	test   al,0xd6
  40329f:	dec    ebx
  4032a0:	add    eax,DWORD PTR [eax]
  4032a2:	imul   cl
  4032a4:	clc    
  4032a5:	xor    edx,ebp
  4032a7:	inc    ecx
  4032a8:	sti    
  4032a9:	xor    esp,ebp
  4032ab:	jmp    0x403230
  4032ad:	pop    es
  4032ae:	and    BYTE PTR [esi+0x7b],ch
  4032b1:	cmc    
  4032b2:	lods   al,BYTE PTR ds:[esi]
  4032b3:	and    al,0x10
  4032b5:	sar    DWORD PTR [edi],0x5f
  4032b8:	add    al,bl
  4032ba:	hlt    
  4032bb:	sub    dh,BYTE PTR [ebx]
  4032bd:	stc    
  4032be:	dec    esp
  4032bf:	cs xor edi,ecx
  4032c2:	add    dl,dl
  4032c4:	pop    ss
  4032c5:	sub    bh,BYTE PTR [ecx]
  4032c7:	fild   WORD PTR [edi+0x3]
  4032ca:	mov    DWORD PTR [edx-0x40],edx
  4032cd:	ret    0x6343
  4032d0:	ror    BYTE PTR [ebx+0x23fb72f7],1
  4032d6:	mov    ch,0x72
  4032d8:	sti    
  4032d9:	lea    esi,[ebx-0x60b9edaa]
  4032df:	inc    BYTE PTR [edx]
  4032e1:	dec    esi
  4032e2:	aaa    
  4032e3:	and    eax,0x1c3c11c1
  4032e8:	mov    edi,edx
  4032ea:	sub    al,0x2e
  4032ec:	and    edi,ecx
  4032ee:	sbb    al,0x2e
  4032f0:	lea    ebx,[eax+edx*4-0x4db96a9b]
  4032f7:	bound  ebx,QWORD PTR [esi+0x1c]
	...
  40330a:	add    BYTE PTR [eax],al
  40330c:	mov    esi,0xc6031622
  403311:	(bad)  
  403313:	xor    edx,DWORD PTR [ebp-0x6acc047e]
  403319:	fadd   DWORD PTR [edi+eax*1+0x6980cd87]
  403320:	in     al,dx
  403321:	lahf   
  403322:	and    cl,al
  403324:	das    
  403325:	outs   dx,BYTE PTR ds:[esi]
  403326:	add    eax,ebx
  403328:	inc    esp
  403329:	and    DWORD PTR [ebx],esi
  40332b:	stc    
  40332c:	xchg   esi,eax
  40332d:	ins    BYTE PTR es:[edi],dx
  40332e:	mov    esp,0x98bebf33
  403333:	pop    ss
  403334:	jmp    0x95cb7b59
  403339:	jns    0x403323
  40333b:	rcl    ah,0x47
  40333e:	push   es
  40333f:	ror    BYTE PTR ds:0x75faf714,1
  403345:	add    eax,0xcf23faf7
  40334a:	adc    esi,DWORD PTR [ecx+0x3c2f8ed]
  403350:	shl    BYTE PTR [ebx],1
  403352:	(bad)
  403356:	int    0x8b
  403358:	ins    BYTE PTR es:[edi],dx
  403359:	sbb    al,0xbb
  40335b:	and    ebp,DWORD PTR [edi+0x1c]
  40335e:	mov    ebx,0x8130028d
  403363:	xlat   BYTE PTR ds:[ebx]
  403364:	mov    edx,0x825e07d2
  403369:	mov    al,bh
  40336b:	push   ss
  40336c:	xchg   ebp,eax
  40336d:	xchg   edx,eax
  40336e:	(bad)  
  40336f:	stc    
	...
  403380:	add    BYTE PTR [eax],al
  403382:	test   DWORD PTR [ebp-0x5a7a0519],esi
  403388:	xchg   ecx,eax
  403389:	test   BYTE PTR [ecx-0x426fea93],bl
  40338f:	dec    esp
  403390:	dec    ecx
  403391:	xor    BYTE PTR [edi-0x75],dl
  403394:	or     eax,DWORD PTR [ebx]
  403396:	push   ebp
  403397:	aam    0xbf
  403399:	xor    ecx,DWORD PTR [edi]
  40339b:	sub    al,0xbb
  40339d:	xor    ecx,DWORD PTR [edi]
  40339f:	(bad)  
  4033a0:	cwde   
  4033a1:	pop    ss
  4033a2:	and    eax,0x95fd9afa
  4033a7:	add    edi,esi
  4033a9:	rcl    ah,0x4e
  4033ac:	push   es
  4033ad:	rcr    BYTE PTR ds:0xb5faf653,1
  4033b3:	push   ebp
  4033b4:	idiv   dl
  4033b6:	or     esp,DWORD PTR [edx+0x75]
  4033b9:	adc    ah,BYTE PTR [eax]
  4033bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033bc:	pusha  
  4033bd:	push   0xffffff95
  4033bf:	mov    al,0x11
  4033c1:	(bad)
  4033c4:	jmp    0x75bb:0xfa5c0dcd
  4033cb:	pop    ebx
  4033cc:	cli    
  4033cd:	mov    ebx,0xe4d5fe1b
  4033d2:	cdq    
  4033d3:	push   ss
  4033d4:	and    BYTE PTR [edi],al
  4033d6:	cmp    BYTE PTR [esi+0x63a8c6a8],bl
  4033dc:	ror    BYTE PTR [esi-0x196d6b71],0x7f
  4033e3:	xchg   esp,eax
  4033e4:	nop
  4033e5:	nop
	...
  4033f6:	add    BYTE PTR [eax],al
  4033f8:	adc    ch,BYTE PTR [eax+0xb]
  4033fb:	jmp    0x4a2a8c93
  403400:	xchg   edx,eax
  403401:	and    DWORD PTR [ecx+0x62239508],ebp
  403407:	mov    esi,0xbd0a5aa5
  40340c:	test   DWORD PTR [ebx+0x6c],ebx
  40340f:	xchg   edi,eax
  403410:	mov    eax,ds:0x56439aa2
  403415:	fs mov bh,0x1b
  403418:	push   edi
  403419:	and    eax,0xec4606f0
  40341e:	inc    eax
  40341f:	imul   BYTE PTR [edi]
  403421:	test   BYTE PTR [edx],dh
  403423:	imul   BYTE PTR [ecx]
  403425:	out    dx,al
  403426:	pop    esp
  403427:	adc    al,bh
  403429:	mov    esp,0xb094e9c7
  40342e:	int    0xc4
  403430:	xlat   BYTE PTR ds:[ebx]
  403431:	jo     0x40341d
  403433:	int    0xd
  403435:	pop    ebp
  403436:	fidivr DWORD PTR [ebp+esi*4+0x23bdba5a]
  40343d:	(bad)  
  40343e:	(bad)  [ebp-0x2f]
  403441:	sbb    BYTE PTR [eax],al
  403443:	add    BYTE PTR [eax-0x7ed53e80],bl
  403449:	arpl   cx,bx
  40344b:	jb     0x40345a
  40344d:	xchg   esp,eax
  40344e:	sti    
  40344f:	or     cl,BYTE PTR [eax]
  403451:	xchg   esp,eax
  403452:	stc    
  403453:	fs push cs
  403455:	push   0x35c6f95d
  40345a:	add    ebp,DWORD PTR [edi]
	...
  40346c:	add    BYTE PTR [eax],al
  40346e:	mov    fs,WORD PTR [ecx]
  403470:	shl    ah,0x92
  403473:	and    ecx,DWORD PTR [ebx+0x2357abb2]
  403479:	mov    al,0xa3
  40347b:	pop    esp
  40347c:	lea    edi,[ebp-0x51]
  40347f:	mov    bl,0x14
  403481:	and    eax,0xc1566390
  403486:	push   esp
  403487:	and    al,0x9
  403489:	jmp    0x8333:0xbaf7eb65
  403490:	sti    
  403491:	mov    edx,0xe68bed2d
  403496:	adc    al,0x48
  403498:	mov    eax,ds:0x3cb09391
  40349d:	sub    BYTE PTR [ebp+0x70],dl
  4034a0:	add    esi,DWORD PTR [ebx]
  4034a2:	sbb    ebx,DWORD PTR [ebx+esi*1+0x50]
  4034a6:	cmp    edx,DWORD PTR [edi+0x33]
  4034a9:	push   ebx
  4034aa:	or     esi,edi
  4034ac:	push   ds
  4034ad:	xor    ebx,esi
  4034af:	xor    ah,bh
  4034b1:	jmp    0x637e:0x2ac172b7
  4034b8:	fldenv [edx-0x23]
  4034bb:	xchg   edx,eax
  4034bc:	sti    
  4034bd:	retf   0x9353
  4034c0:	stc    
  4034c1:	ins    BYTE PTR es:[edi],dx
  4034c2:	push   ds
  4034c3:	addr16 out 0x24,al
  4034c6:	xor    eax,0xf1a70381
  4034cb:	and    eax,eax
  4034cd:	add    BYTE PTR [edx],al
  4034cf:	retw   
  4034d1:	mov    eax,DWORD PTR [eax]
	...
  4034e3:	add    BYTE PTR [ebp+edx*2+0x55e623f7],dl
  4034ea:	cli    
  4034eb:	lea    eax,[ebx+0x79]
  4034ee:	(bad)  
  4034ef:	pop    es
  4034f0:	mov    al,0x25
  4034f2:	add    edx,DWORD PTR [esi+0x77]
  4034f5:	and    eax,edx
  4034f7:	or     DWORD PTR [edx+esi*1+0x209cf88b],ebp
  4034fe:	and    edi,ebx
  403500:	lods   al,BYTE PTR ds:[esi]
  403501:	sbb    cl,BYTE PTR [ebp+0xce9b88c]
  403507:	aad    0xe3
  403509:	gs dec esi
  40350b:	or     al,0xee
  40350d:	and    ecx,DWORD PTR [esi]
  40350f:	add    eax,DWORD PTR [ebp-0x11]
  403512:	stc    
  403513:	xor    esi,DWORD PTR [esi]
  403515:	inc    edi
  403516:	div    DWORD PTR [ebx]
  403518:	and    eax,0xfa1f9bed
  40351d:	jne    0x403579
  40351f:	inc    ebp
  403520:	jl     0x4034e6
  403522:	and    cl,al
  403524:	cmp    al,0x76
  403526:	add    ebx,ecx
  403528:	hlt    
  403529:	sbb    BYTE PTR [ebx],dh
  40352b:	sti    
  40352c:	dec    esp
  40352d:	and    BYTE PTR [ebx],dh
  40352f:	stc    
  403530:	retf   0x6e5
  403533:	add    eax,0x3a906e6
  403538:	icebp  
  403539:	push   ebp
  40353a:	rol    al,0x32
  40353d:	addr16 ret 
  40353f:	mov    edx,esp
  403541:	push   esi
  403542:	mul    DWORD PTR [ebx]
  403544:	(bad)  
  403545:	push   esi
  403546:	cli    
  403547:	lea    eax,[eax]
	...
  403559:	add    bl,al
  40355b:	jp     0x403555
  40355d:	mov    ds:0x56031d58,eax
  403562:	pop    es
  403563:	and    edx,eax
  403565:	or     esp,edi
  403567:	xor    DWORD PTR [ebx-0x42c76908],ecx
  40356d:	and    edi,ebp
  40356f:	cmp    BYTE PTR [ebx-0x25aadd73],bh
  403575:	add    bh,BYTE PTR [ecx-0x1c]
  403578:	add    ecx,DWORD PTR [esi-0x7e]
  40357b:	mov    al,dl
  40357d:	push   cs
  40357e:	xchg   ebp,eax
  40357f:	or     DWORD PTR [edx+edi*8-0x81cbd7b],0x9c914185
  40358a:	mov    eax,ds:0xb2a50c1
  40358f:	dec    ecx
  403590:	pop    ebp
  403591:	xor    bh,dl
  403593:	or     BYTE PTR [eax],bl
  403595:	add    ecx,edi
  403597:	sar    BYTE PTR [ebp-0x45a763cd],1
  40359d:	lea    edx,[edx]
  40359f:	inc    ebp
  4035a0:	inc    ecx
  4035a1:	cmp    DWORD PTR [esp+eax*1+0xaa24603],ecx
  4035a8:	les    eax,FWORD PTR [edx*4-0x3a0474f8]
  4035af:	repnz repnz mul DWORD PTR [ebx]
  4035b3:	mov    edi,0x5a608117
  4035b8:	xchg   BYTE PTR [ebx],al
  4035ba:	enter  0xc42b,0xc2
	...
  4035ce:	add    BYTE PTR [eax],al
  4035d0:	lea    ecx,[eax-0x2d]
  4035d3:	mov    ecx,DWORD PTR [esi+0x78]
  4035d6:	mov    ebx,0x90ce4c33
  4035db:	pcmpeqb mm5,QWORD PTR [edx]
  4035de:	mov    al,ds:0xeefd956d
  4035e3:	rcl    BYTE PTR [edi+0x3b],0x2
  4035e7:	retf   0xa11d
  4035ea:	repz mul DWORD PTR [ebp-0x6e]
  4035ee:	xchg   ecx,eax
  4035ef:	pushf  
  4035f0:	jns    0x403631
  4035f2:	sti    
  4035f3:	in     al,0x13
  4035f5:	(bad)  
  4035f6:	jmp    0x9517:0x2a23ce5d
  4035fd:	cmp    esp,DWORD PTR [edx-0x43]
  403600:	lds    ebx,FWORD PTR [eax-0x26]
  403603:	mov    edx,0x47ede623
  403608:	cld    
  403609:	sbb    eax,DWORD PTR [ebp+0x3]
  40360c:	pop    eax
  40360d:	data16 sub ah,al
  403610:	xchg   edx,eax
  403611:	popa   
  403612:	sub    cl,BYTE PTR [ebx-0xd1f6f33]
  403618:	shr    esi,0x74
  40361b:	push   ss
  40361c:	out    dx,eax
  40361d:	sub    al,0xb7
  40361f:	dec    edx
  403620:	xchg   ebp,eax
  403621:	mov    ah,0xf9
  403623:	(bad)  
  403624:	aam    0x68
  403626:	jmp    0x65ba:0xfa5a1dd3
  40362d:	pop    eax
  40362e:	(bad)
  403633:	jnp    0x403635
	...
  403645:	add    BYTE PTR [eax+0x57203760],cl
  40364b:	and    bh,cl
  40364d:	add    cl,BYTE PTR [eax+ebp*8-0x6e]
  403651:	repnz adc DWORD PTR [eax+0x7c129090],0x1d297ff9
  40365c:	jmp    0x9516:0xaa21ae5d
  403663:	cmp    DWORD PTR [edx-0x44],esp
  403666:	test   DWORD PTR [eax+0x1a],ebx
  403669:	mov    ebx,0xc5e5e71b
  40366e:	shl    bh,0x0
  403671:	add    edx,eax
  403673:	xchg   esi,eax
  403674:	sub    bl,al
  403676:	call   0x4090:0x2d8a2a5f
  40367d:	repnz sub esi,ebp
  403680:	call   FWORD PTR [eax+eax*4+0x58]
  403684:	daa    
  403685:	mov    BYTE PTR [edi],bh
  403687:	pusha  
  403688:	push   ss
  403689:	sub    bh,dl
  40368b:	add    edi,DWORD PTR [bx+di]
  40368e:	or     al,0x5b
  403690:	xor    edx,DWORD PTR [edx]
  403692:	add    al,0x5a
  403694:	lea    ebx,[ebp-0x60]
  403697:	in     eax,0x2f
  403699:	push   ss
  40369a:	rcr    DWORD PTR [edi+0x4e],0xed
  40369e:	fisub  DWORD PTR [ecx]
  4036a0:	adc    dl,ch
  4036a2:	iret   
  4036a3:	out    0xf9,eax
  4036a5:	mov    edx,0x74f9900d
	...
  4036ba:	add    BYTE PTR [eax],al
  4036bc:	idiv   BYTE PTR [ebx+0x5]
  4036bf:	cld    
  4036c0:	or     eax,0x9a370367
  4036c5:	and    ebx,eax
  4036c7:	not    BYTE PTR [esi-0x583f74c7]
  4036cd:	pop    ecx
  4036ce:	xor    eax,edx
  4036d0:	adc    edi,esp
  4036d2:	push   es
  4036d3:	lock lds esi,FWORD PTR [esi]
  4036d6:	fldl2e 
  4036d8:	fild   DWORD PTR [esi+0x5f9ea9c1]
  4036de:	ret    
  4036df:	jb     0x403720
  4036e1:	(bad)  
  4036e2:	stc    
  4036e3:	fidivr DWORD PTR ds:0x38f693ed
  4036e9:	stc    
  4036ea:	fimul  DWORD PTR [edi-0x57cf4b69]
  4036f0:	push   esp
  4036f1:	add    ebx,DWORD PTR [bx+di+0x5a0f]
  4036f6:	xor    esi,DWORD PTR [edx+0x47]
  4036f9:	pop    ecx
  4036fa:	lea    esi,[ebp-0x65]
  4036fd:	pop    edx
  4036fe:	jl     0x40368b
  403700:	mov    ds:0x55154e5f,eax
  403705:	and    DWORD PTR [eax],edx
  403707:	jmp    0x172c:0xf9e75f
  40370e:	xor    edi,ecx
  403710:	mov    dl,0x2
  403712:	pop    ds
  403713:	gs stc 
  403715:	retf   0x3c4
  403718:	and    DWORD PTR [edi-0x3f],esp
  40371b:	ret    
  40371c:	or     BYTE PTR [edx-0x27],ah
  40371f:	mov    edi,0x0
	...
  403730:	add    BYTE PTR [eax],al
  403732:	mov    al,ds:0xdcffff1d
  403737:	sbb    BYTE PTR [ebx],cl
  403739:	sti    
  40373a:	int3   
  40373b:	pop    ss
  40373c:	lea    eax,[eax+edi*8-0x14d6dd5e]
  403743:	popa   
  403744:	push   es
  403745:	shr    DWORD PTR [edi-0x7f3cfc9c],0x1d
  40374c:	(bad)  
  40374d:	push   DWORD PTR [eax-0x48f407af]
  403753:	push   ecx
  403754:	cli    
  403755:	lea    edi,[ebx]
  403757:	jbe    0x4036f0
  403759:	call   DWORD PTR [ebp-0x4ca9fc5f]
  40375f:	pop    ds
  403760:	ret    0xac0a
  403763:	cs mov edi,0xff1de0ff
  403769:	xor    eax,DWORD PTR [ebx+ebp*2-0x6]
  40376d:	xor    esi,DWORD PTR [edi]
  40376f:	jmp    0x431846ff
  403774:	xchg   ebx,eax
  403775:	stos   DWORD PTR es:[edi],eax
  403776:	ins    BYTE PTR es:[edi],dx
  403777:	test   al,0x38
  403779:	sar    DWORD PTR [esi],0x67
  40377c:	add    ecx,edx
  40377e:	rcl    BYTE PTR [esi],1
  403780:	(bad)  
  403781:	jmp    eax
  403783:	push   edx
  403784:	test   DWORD PTR [ebx],0x8df952e6
  40378a:	jecxz  0x403802
  40378c:	cmp    DWORD PTR [eax+0x5e0319cc],esp
  403792:	dec    ebx
  403793:	and    eax,0x15c3
	...
  4037a8:	xchg   esi,eax
  4037a9:	dec    esp
  4037aa:	fidivr DWORD PTR [edi-0x4356cf]
  4037b0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4037b2:	or     bl,bh
  4037b4:	mov    gs:0x8c91848e,al
  4037ba:	pop    edx
  4037bb:	pop    ebx
  4037bc:	jnp    0x40380a
  4037be:	inc    ebp
  4037bf:	xor    bh,dl
  4037c1:	mov    eax,DWORD PTR ds:0xbcb8d503
  4037c7:	(bad)  
  4037c8:	stc    
  4037c9:	jo     0x4037bb
  4037cb:	clc    
  4037cc:	popf   
  4037cd:	jae    0x4037bf
  4037cf:	cli    
  4037d0:	sbb    edi,DWORD PTR [eax+0x47d29214]
  4037d6:	mov    WORD PTR [ebx],es
  4037d8:	inc    eax
  4037d9:	aas    
  4037da:	ret    0x9cc2
  4037dd:	dec    esp
  4037de:	sar    DWORD PTR [edi-0x44bf37],cl
  4037e4:	test   DWORD PTR [edi+ecx*1-0x6],eax
  4037e8:	test   DWORD PTR [ebx],esi
  4037ea:	mov    DWORD PTR [ecx+eiz*4-0x56104f5a],ecx
  4037f1:	dec    esp
  4037f2:	dec    ecx
  4037f3:	sub    bh,dl
  4037f5:	or     cl,BYTE PTR [ebx]
  4037f7:	add    ecx,esp
  4037f9:	sar    BYTE PTR [ebx-0x8f76e01],1
  4037ff:	neg    DWORD PTR [ebp+0x13f9f702]
  403805:	xlat   BYTE PTR ds:[ebx]
  403806:	sbb    edx,ecx
  403808:	fcmovnb st,st(7)
  40380a:	add    DWORD PTR [ebx],0x0
	...
  40381c:	add    BYTE PTR [eax],al
  40381e:	sar    BYTE PTR [edi],1
  403820:	(bad)
  403824:	fdivr  QWORD PTR [edi-0x44279f]
  40382a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382b:	aad    0xf
  40382d:	sti    
  40382e:	test   edx,edx
  403830:	mov    DWORD PTR [ecx+edx*4-0x11c6499e],eax
  403837:	enter  0x41ea,0x76
  40383b:	and    ebp,DWORD PTR [ecx]
  40383d:	add    dl,BYTE PTR [ebp+0x29bb8e25]
  403843:	pop    ecx
  403844:	inc    esi
  403845:	neg    DWORD PTR [esi]
  403847:	ins    DWORD PTR es:[edi],dx
  403848:	inc    ecx
  403849:	neg    DWORD PTR [edi+eiz*8]
  40384c:	pop    esp
  40384d:	adc    esi,esi
  40384f:	aas    
  403850:	std    
  403851:	mov    ecx,0xc4e5b095
  403856:	aam    0x6b
  403858:	jmp    0xf1bb:0x165939d3
  40385f:	xchg   esp,eax
  403860:	adc    cl,BYTE PTR [edi]
  403862:	in     al,dx
  403863:	xchg   esp,eax
  403864:	add    DWORD PTR [ecx+0x46d56912],ecx
  40386a:	xchg   edi,eax
  40386b:	add    eax,0x23ae49ea
  403870:	sub    BYTE PTR [ebx],cl
  403872:	xchg   ebp,eax
  403873:	sub    al,0xa6
  403875:	mov    edx,0xf6de58c1
  40387a:	shr    DWORD PTR [eax+edx*8-0xa],0xaf
  40387f:	out    0x6c,al
  403881:	sbb    al,BYTE PTR [eax]
	...
  403893:	add    bh,dh
  403895:	jb     0x403888
  403897:	dec    ecx
  403898:	xchg   ebp,eax
  403899:	mov    eax,0x6ed5c4f5
  40389e:	jmp    0x89ba:0xae5851dc
  4038a5:	xchg   esp,eax
  4038a6:	mov    ds:0xa0947d0e,eax
  4038ab:	mov    BYTE PTR [edx],dl
  4038ad:	pusha  
  4038ae:	imul   edi,DWORD PTR [ecx],0xffffffc5
  4038b1:	dec    edi
  4038b2:	jmp    0x9501:0xa9218641
  4038b9:	and    edi,DWORD PTR [esi]
  4038bb:	mov    edx,0x76005859
  4038c0:	dec    eax
  4038c1:	pop    ebx
  4038c2:	or     esi,DWORD PTR [ecx+0x40]
  4038c5:	pop    ebp
  4038c6:	lea    edi,[ebp-0x5c]
  4038c9:	(bad)  
  4038ca:	repnz and edi,DWORD PTR [edi+0x5b055663]
  4038d1:	and    eax,0x1845ea0a
  4038d6:	inc    DWORD PTR [esi-0x24]
  4038d9:	push   edi
  4038da:	xor    eax,DWORD PTR [edx-0x78]
  4038dd:	pop    esp
  4038de:	xor    esi,DWORD PTR [ecx]
  4038e0:	push   ds
  4038e1:	out    0xe,eax
  4038e3:	jb     0x4038c8
  4038e5:	das    
  4038e6:	sub    ch,dl
  4038e8:	dec    edi
  4038e9:	push   0xffffffc1
  4038eb:	sub    BYTE PTR [ebx+eiz*2+0x582c56ca],cl
  4038f2:	dec    DWORD PTR [esi]
  4038f4:	loopne 0x403945
  4038f6:	or     eax,DWORD PTR [eax]
	...
  403908:	add    BYTE PTR [eax],al
  40390a:	call   0x7c9dc668
  40390f:	icebp  
  403910:	shr    BYTE PTR [edi+0x0],cl
  403913:	fs pop esi
  403915:	(bad)
  403918:	adc    eax,0x7cebdcea
  40391d:	icebp  
  40391e:	xchg   esp,eax
  40391f:	pop    edi
  403920:	add    DWORD PTR [esi],esi
  403922:	xchg   esi,eax
  403923:	popa   
  403924:	dec    edi
  403925:	loope  0x4038bb
  403927:	scas   eax,DWORD PTR es:[edi]
  403928:	or     al,0xc6
  40392a:	pop    ecx
  40392b:	push   esi
  40392c:	lea    esi,[edi]
  40392e:	push   edx
  40392f:	addr16 mov esi,esp
  403932:	push   ebx
  403933:	push   edi
  403934:	call   DWORD PTR [ebx]
  403936:	in     eax,dx
  403937:	mov    ebx,0x29dc4658
  40393c:	ret    0x95ed
  40393f:	lods   eax,DWORD PTR ds:[esi]
  403940:	mov    eax,DWORD PTR [ebp+0x36f81e1b]
  403946:	les    esi,FWORD PTR [ebx+0x1ab200c7]
  40394c:	add    BYTE PTR [eax],al
  40394e:	outs   dx,DWORD PTR ds:[esi]
  40394f:	arpl   di,di
  403951:	jne    0x40398e
  403953:	jmp    0x650f:0x56f0f844
  40395a:	out    dx,al
  40395b:	bound  eax,QWORD PTR [ecx]
  40395d:	and    esi,edx
  40395f:	add    edi,0x41783305
  403965:	add    BYTE PTR [esi+0x70efcdc5],dh
  40396b:	push   edi
  40396c:	pop    ss
  40396d:	add    BYTE PTR gs:[eax],al
	...
  403980:	out    dx,al
  403981:	(bad)  
  403982:	(bad)  
  403983:	fadd   QWORD PTR [ebp-0x24fa390a]
  403989:	ja     0x4039cc
  40398b:	add    BYTE PTR [ecx],ah
  40398d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40398e:	xor    dl,BYTE PTR [eax]
  403990:	mov    al,0x57
  403992:	pop    ds
  403993:	gs ds arpl ax,si
  403997:	loope  0x403946
  403999:	sbb    eax,0x97641ceb
  40399e:	or     BYTE PTR [ebx],al
  4039a0:	xor    cl,BYTE PTR [edi]
  4039a2:	push   0x40
  4039a4:	pop    ss
  4039a5:	aaa    
  4039a6:	fs inc ecx
  4039a8:	mov    edi,0xe663e8b2
  4039ad:	sbb    edi,edi
  4039af:	xor    DWORD PTR [edx+0x1a],0x40
  4039b3:	call   0x409cb3
  4039b8:	cmp    al,0x80
  4039ba:	clc    
  4039bb:	inc    eax
  4039bc:	pop    esp
  4039bd:	cmp    al,0x8b
  4039bf:	pop    ebp
  4039c0:	xlat   BYTE PTR ds:[ebx]
  4039c1:	ffree  st(2)
  4039c3:	inc    eax
  4039c4:	hlt    
  4039c5:	xchg   esp,eax
  4039c6:	or     BYTE PTR [ebx],al
  4039c8:	mov    dl,0x1a
  4039ca:	push   ebx
  4039cb:	push   0x417553
  4039d0:	mov    edi,0x96e93c06
  4039d5:	in     al,dx
  4039d6:	mov    bh,0x1
  4039d8:	retf   
  4039d9:	out    0xc0,eax
  4039db:	cmp    DWORD PTR [edx+0x16004366],0xffffffc9
  4039e2:	lods   al,BYTE PTR ds:[esi]
  4039e3:	aaa    
	...
  4039f4:	add    BYTE PTR [eax],al
  4039f6:	enter  0x8430,0xeb
  4039fa:	sahf   
  4039fb:	dec    edi
  4039fc:	or     eax,0x1e27f580
  403a01:	inc    ecx
  403a02:	xchg   esi,eax
  403a03:	dec    ebx
  403a04:	inc    esp
  403a05:	js     0x403a2f
  403a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a08:	mov    WORD PTR [eax],es
  403a0a:	xchg   esi,eax
  403a0b:	dec    ebx
  403a0c:	jl     0x4039d6
  403a0e:	and    DWORD PTR [ebp+0xf94ebb8],ebx
  403a14:	or     eax,0x1df03580
  403a19:	inc    ecx
  403a1a:	xchg   esi,eax
  403a1b:	dec    ebx
  403a1c:	inc    esp
  403a1d:	js     0x403a27
  403a1f:	sar    DWORD PTR [esi],1
  403a21:	or     al,0x3f
  403a23:	push   esp
  403a24:	add    eax,DWORD PTR [eax]
  403a26:	xchg   esi,eax
  403a27:	cmp    ch,dl
  403a29:	div    edi
  403a2b:	xor    al,0xcb
  403a2d:	bswap  esp
  403a2f:	test   al,0x23
  403a31:	gs push edi
  403a33:	dec    ebx
  403a34:	mov    dl,BYTE PTR ds:0x41e672
  403a3a:	mov    esi,0x960002f3
  403a3f:	jmp    0x158a:0x4b576513
  403a46:	mov    ah,BYTE PTR [esi+0x371d0045]
  403a4c:	sbb    esp,DWORD PTR [ebp+0x57]
  403a4f:	dec    ebx
  403a50:	push   es
  403a51:	enter  0x1189,0x7
  403a55:	leave  
  403a56:	xor    eax,0x41203b
	...
  403a6b:	add    BYTE PTR [esi-0x4ebee3e],dl
  403a71:	bound  ebp,QWORD PTR [eax]
  403a73:	add    al,0xf
  403a75:	add    DWORD PTR [bx+di],esp
  403a78:	xlat   BYTE PTR ds:[ebx]
  403a79:	bound  ecx,QWORD PTR [eax+0x18]
  403a7c:	repz mov ds:0x828b8ae9,eax
  403a82:	or     al,0x45
  403a84:	xchg   esi,eax
  403a85:	gs mov cl,0x7
  403a88:	pop    esp
  403a89:	add    ebp,edx
  403a8b:	and    bh,dl
  403a8d:	bound  esp,QWORD PTR [eax+0x11]
  403a90:	jbe    0x403a51
  403a92:	test   al,0x3
  403a94:	lods   al,BYTE PTR ds:[esi]
  403a95:	outs   dx,BYTE PTR ds:[esi]
  403a96:	pop    esi
  403a97:	xor    DWORD PTR [esi-0x28df0636],eax
  403a9d:	bound  eax,QWORD PTR [ecx-0x6f]
  403aa0:	cs push ebp
  403aa2:	inc    esi
  403aa3:	pop    ebx
  403aa4:	mov    eax,0xa2c230b5
  403aa9:	bound  ebx,QWORD PTR [edx+ecx*4-0x43db1f06]
  403ab0:	aas    
  403ab1:	pop    edx
  403ab2:	es mov bh,0xf9
  403ab5:	call   0xbfbb039e
  403aba:	test   al,0x3
  403abc:	sbb    eax,0x7b2c1c6e
  403ac1:	mov    ds:0x64ce06e9,eax
  403ac6:	xor    ecx,DWORD PTR [ebp+0x208d279a]
  403acc:	push   edi
  403acd:	bound  esp,QWORD PTR [eax+0x10]
	...
  403ae0:	add    BYTE PTR [eax],al
  403ae2:	ror    ecx,cl
  403ae4:	dec    esp
  403ae5:	inc    ebp
  403ae6:	xchg   esi,eax
  403ae7:	mov    ds:0x21efd954,eax
  403aec:	(bad)  
  403aed:	mov    dh,0xa9
  403aef:	call   0xbc7ec3d8
  403af4:	sub    BYTE PTR [ecx*1-0x7c09392],al
  403afb:	mov    eax,ds:0x6084e900
  403b00:	(bad)  
  403b01:	std    
  403b02:	mov    ds:0x89da00a1,eax
  403b07:	in     eax,0x23
  403b09:	pop    es
  403b0a:	(bad)  [edx+0x33]
  403b0d:	stos   DWORD PTR es:[edi],eax
  403b0e:	inc    edx
  403b0f:	and    ecx,DWORD PTR [ecx+0x66bf0ee5]
  403b15:	sub    BYTE PTR [edx+0x1c9775a1],dl
  403b1b:	jbe    0x403b2d
  403b1d:	or     al,0xd3
  403b1f:	bound  ecx,QWORD PTR [ebx+0x41bd91b4]
  403b25:	jmp    0xc458d136
  403b2a:	fisub  DWORD PTR [edx-0x1]
  403b2d:	sbb    al,0x8e
  403b2f:	mov    ebp,0x9e18e941
  403b34:	cld    
  403b35:	inc    esi
  403b36:	es je  0x403b9e
  403b39:	test   al,0x95
  403b3b:	jecxz  0x403b81
  403b3d:	xor    DWORD PTR [edx+0x482eff46],ecx
  403b43:	call   0x40ae1d
	...
  403b58:	cmp    BYTE PTR [edx+edx*8-0x36],cl
  403b5c:	xor    eax,DWORD PTR [eax+0x209c1555]
  403b62:	add    esp,ebp
  403b64:	push   cs
  403b65:	iret   
  403b66:	gs test al,0x95
  403b69:	pop    edi
  403b6a:	inc    ebp
  403b6b:	add    DWORD PTR [esi+0x6f6b78f9],edx
  403b71:	push   ebx
  403b72:	jne    0x403b61
  403b74:	sbb    ebx,DWORD PTR [esi+0x568170f8]
  403b7a:	shl    DWORD PTR [edi+0x62fde788],0xe7
  403b81:	and    ebx,eax
  403b83:	in     al,0x96
  403b85:	cmp    al,BYTE PTR [ecx+0x0]
  403b88:	pop    edx
  403b89:	sub    bh,BYTE PTR [ecx-0xf2af14]
  403b8f:	mov    edi,DWORD PTR [ecx]
  403b91:	jmp    0x1afa6f6c
  403b96:	xor    eax,edx
  403b98:	ins    BYTE PTR es:[edi],dx
  403b99:	push   ebx
  403b9a:	mov    esp,es
  403b9c:	call   0x516:0xba03009f
  403ba3:	mov    eax,ds:0xff6e3714
  403ba8:	pop    edx
  403ba9:	or     ecx,DWORD PTR [edi+0x7ce71745]
  403baf:	cld    
  403bb0:	(bad)  
  403bb1:	adc    ebx,DWORD PTR [esi]
  403bb3:	mov    esi,DWORD PTR [ecx+0x6cc1f2e9]
  403bb9:	push   ebx
  403bba:	add    bl,al
	...
  403bcc:	add    BYTE PTR [eax],al
  403bce:	inc    BYTE PTR [ebx+0xdd3b9d0]
  403bd4:	(bad)  
  403bd5:	push   DWORD PTR [ebp+edx*1+0x69d3558b]
  403bdc:	inc    ebp
  403bdd:	cld    
  403bde:	pushf  
  403bdf:	and    eax,0x20f4c623
  403be4:	add    eax,DWORD PTR [edx+eiz*2]
  403be7:	jb     0x403c4f
  403be9:	inc    ecx
  403bea:	out    dx,eax
  403beb:	popa   
  403bec:	inc    ebp
  403bed:	clc    
  403bee:	cli    
  403bef:	sub    bh,BYTE PTR [ebx+ebx*1-0x38af290]
  403bf6:	inc    eax
  403bf7:	xchg   ebx,eax
  403bf8:	clc    
  403bf9:	mov    DWORD PTR [edx],edx
  403bfb:	or     eax,ecx
  403bfd:	(bad)  
  403bfe:	icebp  
  403bff:	jmp    0x200cc801
  403c04:	ret    
  403c05:	add    eax,0x754136ac
  403c0a:	add    al,0xd8
  403c0c:	in     al,dx
  403c0d:	call   eax
  403c0f:	or     eax,0xc096c68b
  403c14:	int3   
  403c15:	xor    ebx,DWORD PTR [ebx+0x25]
  403c18:	lock rcl DWORD PTR [ebp-0x79b79bb],0x7a
  403c20:	add    al,0x3
  403c22:	rcl    DWORD PTR [ebx],cl
  403c24:	(bad)  
  403c25:	aad    0x57
  403c27:	sahf   
  403c28:	retf   0x3ff
  403c2b:	or     BYTE PTR [ebp+eax*2-0x3c92c92],al
	...
  403c42:	add    BYTE PTR [eax],al
  403c44:	push   edi
  403c45:	add    dl,BYTE PTR ds:0xb0c5608b
  403c4b:	rcl    DWORD PTR [ebp+0x3f],0x0
  403c4f:	fcom   st(7)
  403c51:	push   esi
  403c52:	rol    DWORD PTR [ecx],cl
  403c54:	stos   DWORD PTR es:[edi],eax
  403c55:	sub    ebx,DWORD PTR [esi]
  403c57:	inc    ecx
  403c58:	xchg   esi,eax
  403c59:	cmp    ch,dh
  403c5b:	adc    esi,DWORD PTR [ebx+0x730102fa]
  403c61:	arpl   WORD PTR [edi],bx
  403c63:	inc    ecx
  403c64:	xchg   esi,eax
  403c65:	les    edi,FWORD PTR [esi]
  403c67:	cld    
  403c68:	xchg   edi,eax
  403c69:	inc    esi
  403c6a:	pop    ss
  403c6b:	xlat   BYTE PTR gs:[ebx]
  403c6d:	cmp    ecx,DWORD PTR [eax-0x1c4f1bb]
  403c73:	pop    ds
  403c74:	jae    0x403c70
  403c76:	add    cl,cl
  403c78:	aad    0xf6
  403c7a:	xchg   esp,ebp
  403c7c:	stc    
  403c7d:	out    dx,al
  403c7e:	or     ch,al
  403c80:	addr16 ret 0x3
  403c84:	adc    eax,0xb875b474
  403c89:	pusha  
  403c8a:	cs or  dh,ch
  403c8d:	cmc    
  403c8e:	jns    0x403c90
  403c90:	xchg   esi,eax
  403c91:	push   esp
  403c92:	ret    
  403c93:	jne    0x403c26
  403c95:	xchg   ebx,eax
  403c96:	mov    ah,0xff
  403c98:	rol    DWORD PTR [eax-0x59],0x13
  403c9c:	or     eax,0x6002963
  403ca1:	pop    esi
  403ca2:	test   eax,0xd60a9139
  403ca7:	mov    bl,0x0
	...
  403cb9:	add    BYTE PTR [ecx+0xd08c251],ah
  403cbf:	arpl   WORD PTR [edx+0x4],si
  403cc2:	pop    edi
  403cc3:	and    al,0xe5
  403cc5:	add    esp,ebx
  403cc7:	ffree  st(4)
  403cc9:	xchg   DWORD PTR [edx+0x52],ebx
  403ccc:	sbb    dh,bh
  403cce:	pop    esp
  403ccf:	mov    esp,0xbc971def
  403cd4:	jmp    0x403c71
  403cd6:	lods   al,BYTE PTR ds:[esi]
  403cd7:	or     ebp,ecx
  403cd9:	add    edx,DWORD PTR ds:0x94398e4a
  403cdf:	cmp    eax,0xbc6e7f0b
  403ce4:	fld    DWORD PTR [eax-0x63e6ad2d]
  403cea:	push   cs
  403ceb:	dec    eax
  403cec:	outs   dx,BYTE PTR ds:[esi]
  403ced:	mov    bl,0xb0
  403cef:	sub    DWORD PTR [ebx+esi*4+0x41726294],ebp
  403cf6:	xchg   al,ch
  403cf8:	and    ebp,DWORD PTR [edx]
  403cfa:	setg   BYTE PTR [ebx-0x79]
  403cfe:	fwait
  403cff:	pop    esi
  403d00:	jmp    0xa41dd83c
  403d05:	(bad)  
  403d06:	cld    
  403d07:	jo     0x403d73
  403d09:	xor    DWORD PTR [edx+0x14fdb462],edx
  403d0f:	iret   
  403d10:	icebp  
  403d11:	add    ebp,DWORD PTR [ebx+0x66]
  403d14:	adc    ch,cl
  403d16:	cld    
  403d17:	pusha  
  403d18:	push   ss
  403d19:	cmp    DWORD PTR [esi+0xb27d3a],ecx
	...
  403d2f:	add    cl,bl
  403d31:	push   eax
  403d32:	push   0xffffffac
  403d34:	rcl    esi,1
  403d36:	jmp    0x403cd6
  403d38:	mov    ds:0x9abffdb,al
  403d3d:	mov    esp,0x524f5c10
  403d42:	push   eax
  403d43:	cmp    dl,BYTE PTR [edx]
  403d45:	inc    esi
  403d46:	mov    eax,0xf7e595e9
  403d4b:	(bad)  
  403d4c:	pop    esi
  403d4d:	pop    edx
  403d4e:	push   ebx
  403d4f:	rol    esp,0x9
  403d52:	add    cl,ch
  403d54:	mov    BYTE PTR ds:0x19d8aa8b,ch
  403d5a:	ret    0x95e5
  403d5d:	mov    ch,0x8b
  403d5f:	mov    ebp,0x2483b7e0
  403d64:	mov    ah,BYTE PTR [edx+0x75]
  403d67:	repnz std 
  403d69:	popa   
  403d6a:	add    cl,ch
  403d6c:	xchg   ebp,eax
  403d6d:	scas   eax,DWORD PTR es:[edi]
  403d6e:	pop    ebx
  403d6f:	mov    al,ds:0x72005f53
  403d74:	xchg   BYTE PTR [esi-0x45],bl
  403d77:	jmp    0x340a011
  403d7c:	call   0x754f:0xdcd9754f
  403d83:	icebp  
  403d84:	or     eax,0x95e9b813
  403d89:	in     eax,0xbf
  403d8b:	xlat   BYTE PTR ds:[ebx]
  403d8c:	mov    DWORD PTR [ebx-0x8],esp
  403d8f:	add    bh,cl
  403d91:	jb     0x403d16
  403d93:	les    eax,FWORD PTR [eax]
	...
  403da5:	add    BYTE PTR [ebp+0x78e67562],ah
  403dab:	popa   
  403dac:	add    cl,ch
  403dae:	xchg   ebp,eax
  403daf:	cmp    eax,DWORD PTR [edx]
  403db1:	inc    edx
  403db2:	retf   
  403db3:	fcmovnb st,st(2)
  403db5:	(bad)  
  403db6:	pusha  
  403db7:	sbb    edx,eax
  403db9:	in     eax,dx
  403dba:	xchg   ebp,eax
  403dbb:	mov    ch,0x8b
  403dbd:	add    eax,0xff4271a
  403dc2:	and    al,0x50
  403dc4:	inc    DWORD PTR [eax]
  403dc6:	push   edx
  403dc7:	dec    edi
  403dc8:	mov    es,WORD PTR [ebp-0xed3d]
  403dce:	jo     0x403daa
  403dd0:	idiv   esi
  403dd2:	test   al,0x11
  403dd4:	add    BYTE PTR [eax],al
  403dd6:	mov    edi,0xcb85c763
  403ddb:	adc    al,0xff
  403ddd:	jmp    FWORD PTR [esi+0x3a000063]
  403de3:	out    0xff,eax
  403de5:	(bad)  
  403de6:	pop    eax
  403de7:	adc    edi,edi
  403de9:	jne    0x403d72
  403deb:	loop   0x403dec
  403ded:	mov    edx,?
  403def:	or     bh,dh
  403df1:	jmp    FWORD PTR [eax]
  403df3:	mov    dh,0x6a
  403df5:	add    BYTE PTR [ebp+0xb858d66],al
  403dfb:	adc    al,0xff
  403dfd:	call   FWORD PTR [edi+0x7be80070]
  403e03:	mov    esi,0xfebc0000
  403e08:	(bad)  
  403e09:	je     0x403e0b
	...
  403e1b:	add    BYTE PTR [ebx],dh
  403e1d:	dec    esi
  403e1e:	mov    edi,0xbf563375
  403e23:	jmp    0x403e57
  403e25:	mov    ebx,0x633f0001
  403e2a:	leave  
  403e2b:	ret    0x6327
  403e2e:	push   ebp
  403e2f:	mov    ebx,ebx
  403e31:	in     eax,0xc3
  403e33:	cld    
  403e34:	fsubr  QWORD PTR ds:0x12356ada
  403e3a:	jne    0x403e44
  403e3c:	addr16 iret 
  403e3e:	(bad)  
  403e3f:	dec    eax
  403e41:	dec    ebp
  403e42:	mov    edi,0x5a6d2374
  403e47:	call   DWORD PTR [edx]
  403e49:	dec    ebx
  403e4a:	out    0x7f,eax
  403e4c:	mov    BYTE PTR [ecx],dl
  403e4e:	dec    DWORD PTR [ebx]
  403e50:	xchg   esi,eax
  403e51:	jns    0x403e8a
  403e53:	add    ch,ch
  403e55:	add    al,0x1d
  403e57:	add    BYTE PTR [edx+edi*1],bh
  403e5a:	jle    0x403ea1
  403e5c:	leave  
  403e5d:	call   0x61ceb411
  403e62:	pop    es
  403e63:	mov    eax,0xc0863996
  403e68:	xor    BYTE PTR [ecx+0x7d],ch
  403e6b:	inc    ebp
  403e6c:	add    BYTE PTR [ecx+0x3b2bff47],0x74
  403e73:	add    DWORD PTR ds:0xa48b0096,ecx
  403e79:	mov    cl,0x4
  403e7b:	push   0xffffff97
  403e7d:	mov    esi,0xff46
	...
  403e92:	out    0x14,al
  403e94:	ss or  al,0x79
  403e97:	push   0x14
  403e99:	(bad)  
  403e9a:	jmp    0x403ef3
  403e9c:	fwait
  403e9d:	mov    eax,0x3bafed4a
  403ea2:	fisttp DWORD PTR [ebx+0x35]
  403ea5:	add    ch,BYTE PTR [ebp+0x48]
  403ea8:	xchg   bl,bl
  403eaa:	retf   0x7cb7
  403ead:	ret    
  403eae:	in     eax,dx
  403eaf:	adc    al,ch
  403eb1:	adc    al,0x96
  403eb3:	outs   dx,BYTE PTR ds:[esi]
  403eb4:	jge    0x403ea2
  403eb6:	pop    ss
  403eb7:	or     BYTE PTR [ebx],al
  403eb9:	clc    
  403eba:	xor    ebp,eax
  403ebc:	push   esp
  403ebd:	sub    ecx,DWORD PTR [ebp+0x32]
  403ec0:	dec    ebp
  403ec1:	jmp    FWORD PTR [ebx+0x19189b43]
  403ec7:	popf   
  403ec8:	mov    al,0xb
  403eca:	(bad)  
  403ecb:	movaps xmm5,XMMWORD PTR [edx+0x6c]
  403ecf:	mov    WORD PTR [esi],?
  403ed1:	or     dh,ch
  403ed3:	inc    ecx
  403ed4:	mov    al,0xff
  403ed6:	stc    
  403ed7:	inc    eax
  403ed8:	ret    
  403ed9:	jne    0x403e6f
  403edb:	bound  edx,QWORD PTR [edx]
  403edd:	pop    eax
  403ede:	pop    ss
  403edf:	sar    cl,1
  403ee1:	add    ecx,DWORD PTR [esi-0x6ec6169e]
  403ee7:	or     ch,cl
  403ee9:	sti    
  403eea:	ror    DWORD PTR [ebp+0x12],1
  403eed:	add    al,0x1d
  403eef:	test   al,0xd9
  403ef1:	sbb    eax,0x8664b296
	...
  403f06:	add    BYTE PTR [eax],al
  403f08:	xchg   esi,eax
  403f09:	dec    edx
  403f0a:	out    dx,al
  403f0b:	scas   eax,DWORD PTR es:[edi]
  403f0c:	inc    esi
  403f0d:	dec    ebp
  403f0e:	pop    esp
  403f0f:	cld    
  403f10:	mov    cl,0xc9
  403f12:	xchg   esi,eax
  403f13:	add    al,0x96
  403f15:	out    0xa8,eax
  403f17:	sub    eax,0x38fd3994
  403f1c:	xchg   ebp,eax
  403f1d:	mov    eax,ds:0xd9d9e7d2
  403f22:	adc    eax,DWORD PTR [eax]
  403f24:	or     eax,0xe6044370
  403f29:	fbld   TBYTE PTR [ebx+0x4]
  403f2c:	outs   dx,BYTE PTR ds:[esi]
  403f2d:	dec    ebp
  403f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2f:	push   esp
  403f30:	imul   edx,edi,0x72c4aeed
  403f36:	xor    ebp,ebx
  403f38:	shl    BYTE PTR [edx+0x6a],cl
  403f3b:	xor    DWORD PTR [esi-0x2afd039e],esp
  403f41:	cmp    ebp,esp
  403f43:	mov    BYTE PTR [ebp-0x2a],bl
  403f46:	push   eax
  403f47:	jnp    0x403f9e
  403f49:	test   eax,0x62a2c2a0
  403f4e:	mov    esp,0x24e13a7a
  403f53:	lods   al,BYTE PTR ds:[esi]
  403f54:	leave  
  403f55:	xchg   ecx,eax
  403f56:	push   esi
  403f57:	sbb    dl,BYTE PTR [esi-0x61c6b14b]
  403f5d:	cmp    bl,BYTE PTR [edx]
  403f5f:	retf   
  403f60:	or     DWORD PTR [ebp+0x26],ecx
  403f63:	dec    ecx
  403f64:	add    ah,BYTE PTR [edx+0x0]
  403f67:	jmp    0x94cba201
	...
  403f7c:	add    BYTE PTR [eax],al
  403f7e:	in     eax,dx
  403f7f:	xlat   BYTE PTR ds:[ebx]
  403f80:	adc    DWORD PTR [edi+ebx*2+0x4a],esi
  403f84:	push   eax
  403f85:	xchg   ebx,eax
  403f86:	cdq    
  403f87:	fild   WORD PTR [ebp+edx*1+0x42]
  403f8b:	dec    ebp
  403f8c:	jne    0x403f6f
  403f8e:	add    BYTE PTR [eax-0x30ed51f4],dh
  403f94:	cld    
  403f95:	in     al,dx
  403f96:	mov    edi,0xbf7d0a5d
  403f9b:	fistp  QWORD PTR [ecx+esi*8-0x6b]
  403f9f:	xlat   BYTE PTR ds:[ebx]
  403fa0:	leave  
  403fa1:	sbb    dl,dl
  403fa3:	cmp    BYTE PTR ds:0xbfe0d872,al
  403fa9:	jmp    0xb595:0xe5c21b48
  403fb0:	mov    edx,ebp
  403fb2:	adc    al,0x27
  403fb4:	hlt    
  403fb5:	sbb    ch,cl
  403fb7:	mov    edx,0x6295f398
  403fbc:	call   0xff8c799f
  403fc1:	jo     0x403fa1
  403fc3:	dec    esi
  403fc4:	lea    esp,[esi+ebx*1]
  403fc7:	mov    bl,0xe8
  403fc9:	aad    0x4c
  403fcb:	dec    esp
  403fcc:	(bad)  
  403fcd:	ficomp DWORD PTR [ecx+edi*4+0x1e]
  403fd1:	adc    ecx,DWORD PTR [esp+eax*8+0x0]
  403fd5:	adc    DWORD PTR [ebp+0x1fcff62],0x4c
  403fdc:	jne    0x403fbf
  403fde:	or     eax,0x66fde7
	...
  403ff3:	add    al,bh
  403ff5:	in     eax,0xbf
  403ff7:	out    dx,al
  403ff8:	sbb    DWORD PTR [ebx+0x4b95e901],edx
  403ffe:	jne    0x404055
  404000:	sub    eax,0x5000dadf
  404005:	cld    
  404006:	cmp    al,0x0
  404008:	push   ebp
  404009:	pop    edi
  40400a:	add    BYTE PTR [esi-0x16],dh
  40400d:	out    dx,al
  40400e:	sbb    eax,DWORD PTR [ecx]
  404010:	call   FWORD PTR [edi-0x1]
  404013:	jne    0x403fa0
  404015:	out    0x59,eax
  404017:	inc    DWORD PTR [eax-0x43f7b04]
  40401d:	and    edi,edi
  40401f:	jne    0x403fcc
  404021:	out    0x8c,eax
  404023:	fst    QWORD PTR [eax-0x34aa7504]
  404029:	leave  
  40402a:	adc    ch,BYTE PTR [edx-0x51]
  40402d:	addr16 xor al,0x21
  404030:	mov    edi,0xb375ff5f
  404035:	std    
  404036:	je     0x40402c
  404038:	shl    BYTE PTR [eax-0x19538f4],0xff
  40403f:	(bad)  
  404040:	jg     0x4040a1
  404042:	push   0x9fa4c1
  404047:	dec    edx
  404049:	adc    ch,al
  40404b:	sbb    ecx,edi
  40404d:	data16 add BYTE PTR [ebx+0x74],dl
  404051:	pop    ds
  404052:	je     0x40408a
  404054:	in     al,0xfe
  404056:	rol    DWORD PTR [bx+si],0x0
	...
  40406a:	inc    esp
  40406b:	mov    al,ds:0xca7fe800
  404070:	add    BYTE PTR [eax],al
  404072:	cmp    al,0xf7
  404074:	push   esi
  404075:	inc    edi
  404076:	les    ebx,FWORD PTR ds:0x5f5e94b9
  40407c:	add    BYTE PTR [eax-0x4751eece],dh
  404082:	retf   
  404083:	outs   dx,DWORD PTR ds:[esi]
  404084:	add    BYTE PTR [eax],al
  404086:	test   BYTE PTR [edi],bl
  404088:	mov    BYTE PTR [edi-0x40],0x66
  40408c:	push   edi
  40408d:	push   ebx
  40408e:	xchg   esi,eax
  40408f:	mov    eax,ds:0x3996b5b1
  404094:	jp     0x4040db
  404096:	push   cs
  404097:	add    al,0xc5
  404099:	inc    edi
  40409a:	add    DWORD PTR [esi],edi
  40409c:	dec    esp
  40409d:	pop    ebx
  40409e:	outs   dx,BYTE PTR ds:[esi]
  40409f:	push   0xffffffd9
  4040a1:	inc    eax
  4040a2:	xchg   esi,eax
  4040a3:	jl     0x4040dc
  4040a5:	cld    
  4040a6:	dec    BYTE PTR [eax+0x8960077]
  4040ac:	clc    
  4040ad:	mov    edi,0xf877fd62
  4040b2:	ds mov bl,cl
  4040b5:	inc    eax
  4040b6:	xchg   esi,eax
  4040b7:	jno    0x40409e
  4040b9:	mov    bl,0x96
  4040bb:	cmp    DWORD PTR [eax],eax
  4040bd:	clc    
  4040be:	popa   
  4040bf:	cld    
  4040c0:	ja     0x4040a1
  4040c2:	out    dx,eax
  4040c3:	mov    ah,0x13
  4040c5:	add    BYTE PTR [esi-0xf0e0217],dl
  4040cb:	add    BYTE PTR [edi+0x11],dl
	...
  4040dd:	add    BYTE PTR [eax],al
  4040df:	add    BYTE PTR [esi+0x58c0d839],dl
  4040e5:	sub    DWORD PTR [ebp-0x63931f00],0xac098467
  4040ef:	mov    esp,ebx
  4040f1:	sub    edi,eax
  4040f3:	shr    edx,1
  4040f5:	aas    
  4040f6:	jp     0x4040fa
  4040f8:	jge    0x404134
  4040fa:	push   ebx
  4040fb:	call   0xffec1f67
  404100:	mov    ecx,0xa3ff43f9
  404105:	js     0x404150
  404107:	inc    ebx
  404109:	(bad)  
  40410a:	fwait
  40410b:	and    eax,0x83acc963
  404110:	mov    ebx,0x997703d3
  404115:	add    BYTE PTR [esi-0x8],al
  404118:	xchg   esi,eax
  404119:	(bad)  
  40411a:	jmp    0xd489d782
  40411f:	stos   DWORD PTR es:[edi],eax
  404120:	sbb    eax,edx
  404122:	pop    ebp
  404123:	lods   al,BYTE PTR ds:[esi]
  404124:	mov    ebx,DWORD PTR [edx+0x41]
  404127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404128:	or     ecx,DWORD PTR [edx+0x46]
  40412b:	lods   al,BYTE PTR ds:[esi]
  40412c:	mov    ecx,DWORD PTR [esi+0x51]
  40412f:	xchg   ah,bl
  404131:	dec    ecx
  404132:	ss clc 
  404134:	xor    eax,edx
  404136:	jmp    0x4040d0
  404138:	lea    ebx,[ebp+0x29]
  40413b:	aaa    
  40413c:	mov    ebp,ebx
  40413e:	mov    bl,0xb7
  404140:	or     eax,0x361675
	...
  404155:	add    BYTE PTR [edx-0x36486bb7],ah
  40415b:	mov    ah,0xbd
  40415d:	xchg   dh,dl
  40415f:	retf   0x68e4
  404162:	xchg   edi,eax
  404163:	(bad)  
  404164:	jmp    0xf5f05e6c
  404169:	ja     0x4040ef
  40416b:	dec    ecx
  40416c:	pop    esp
  40416d:	mov    al,0xa1
  40416f:	mov    ah,0xf1
  404171:	stos   BYTE PTR es:[edi],al
  404172:	and    eax,DWORD PTR [esi-0x3f]
  404175:	jg     0x4041eb
  404177:	dec    ecx
  404178:	into   
  404179:	jg     0x4041d0
  40417b:	test   eax,0x5654bd22
  404180:	jmp    0x6a764ed5
  404185:	shl    BYTE PTR [esi],0xb1
  404188:	sbb    bl,bh
  40418a:	dec    esp
  40418b:	mov    edx,0x4961e3e9
  404190:	xchg   ecx,eax
  404191:	xor    BYTE PTR [ecx+ecx*2-0x6a],0x7d
  404196:	fild   DWORD PTR [esi+0x1]
  404199:	add    al,0x76
  40419b:	(bad)  
  40419c:	jmp    0x7e85013c
  4041a1:	stos   DWORD PTR es:[edi],eax
  4041a2:	setg   BYTE PTR [eax]
  4041a5:	cmp    eax,0xe9206292
  4041aa:	xchg   ebp,eax
  4041ab:	cmp    ch,BYTE PTR [ebx+ecx*2-0x13]
  4041af:	dec    eax
  4041b0:	mov    DWORD PTR [ecx+esi*4-0x7cd68329],esp
  4041b7:	xchg   BYTE PTR [eax],al
  4041b9:	jmp    0x4041be
	...
  4041ca:	add    BYTE PTR [eax],al
  4041cc:	xchg   ebp,eax
  4041cd:	xchg   ebp,eax
  4041ce:	sar    BYTE PTR [edx],0x60
  4041d1:	and    DWORD PTR [ebp+0x29],eax
  4041d4:	out    dx,al
  4041d5:	dec    eax
  4041d6:	(bad)  
  4041d7:	jmp    0x2f14e0b0
  4041dc:	popf   
  4041dd:	bound  eax,QWORD PTR [eax]
  4041df:	cs push edi
  4041e1:	push   edx
  4041e2:	(bad)  
  4041e3:	(bad)  
  4041e4:	xchg   ebp,eax
  4041e5:	(bad)  
  4041e6:	call   FWORD PTR [ecx+edi*8-0x2c6bb28]
  4041ed:	into   
  4041ee:	mov    ah,0x76
  4041f0:	push   edi
  4041f1:	lea    esp,ss:[ebp+edx*8-0x6a16974f]
  4041f9:	bound  eax,QWORD PTR [eax+0x75499583]
  4041ff:	icebp  
  404200:	std    
  404201:	add    esi,DWORD PTR [ecx+ebp*8+0x5dc05d95]
  404208:	xchg   esp,eax
  404209:	jecxz  0x404287
  40420b:	mov    ecx,0xd005cd95
  404210:	aas    
  404211:	arpl   WORD PTR [eax],ax
  404213:	jmp    0xb6f0e06c
  404218:	pushf  
  404219:	bound  eax,QWORD PTR [eax]
  40421b:	pop    esp
  40421c:	(bad)  
  40421d:	adc    dl,BYTE PTR [eax-0x5a]
  404220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404221:	push   es
  404222:	push   0x806295e9
  404227:	fs (bad) 
  404229:	and    dl,BYTE PTR [eax-0x7f]
  40422c:	jle    0x40423c
	...
  404242:	das    
  404243:	dec    ecx
  404244:	mov    edi,0xa8e73275
  404249:	add    BYTE PTR [edi],bh
  40424b:	mov    eax,DWORD PTR fs:[ebp+0x63]
  40424f:	and    DWORD PTR [eax],eax
  404251:	add    BYTE PTR [edx+0x7bb9c07a],ch
  404257:	pop    esi
  404258:	add    BYTE PTR [eax],al
  40425a:	lods   al,BYTE PTR ds:[esi]
  40425b:	push   ds
  40425c:	rep stos BYTE PTR es:[edi],al
  40425e:	mov    al,0xa2
  404260:	sar    BYTE PTR [edi+ebp*8],0x63
  404264:	add    bh,bh
  404266:	inc    edx
  404267:	mov    eax,0x245b458f
  40426c:	inc    ebp
  40426d:	aam    0xb8
  40426f:	pop    esp
  404270:	add    BYTE PTR [eax],al
  404272:	mov    al,0xa2
  404274:	lock (bad) 
  404276:	fsub   DWORD PTR [ebx+0x0]
  404279:	lea    eax,[edx]
  40427b:	and    al,0x50
  40427d:	push   0xffffffbf
  40427f:	gs add bh,bh
  404282:	inc    edx
  404283:	mov    edi,0x638331e8
  404288:	add    BYTE PTR [ebx],cl
  40428a:	jg     0x404303
  40428c:	push   es
  40428d:	cmp    DWORD PTR [edx],0x33
  404290:	add    BYTE PTR [ebp-0x53],dh
  404293:	out    0x5f,al
  404295:	inc    DWORD PTR [edx-0x6]
  404298:	(bad)  
  404299:	jne    0x4042ce
  40429b:	data16 fld TBYTE PTR [ebx]
  40429e:	mov    esi,0x1b75ff5e
  4042a3:	out    0xc9,al
  4042a5:	mov    bl,0x0
	...
  4042b7:	add    BYTE PTR [edi+0x63],ch
  4042ba:	add    esp,0x4f
  4042bd:	dec    edx
  4042be:	mov    dh,0x45
  4042c0:	pop    es
  4042c1:	scas   al,BYTE PTR es:[edi]
  4042c2:	push   0x0
  4042c4:	cmp    BYTE PTR [edi-0x4],dh
  4042c7:	call   0x3f3ad5
  4042cc:	xchg   esi,eax
  4042cd:	inc    esp
  4042ce:	ret    
  4042cf:	jne    0x404265
  4042d1:	in     al,0xee
  4042d3:	mov    bl,bl
  4042d5:	mov    eax,ds:0xf0fa75a9
  4042da:	and    al,0xb2
  4042dc:	xchg   esi,eax
  4042dd:	cmp    DWORD PTR [ebx-0x1],edx
  4042e0:	mov    ds:0xde75a975,eax
  4042e5:	mov    al,0x4f
  4042e7:	sti    
  4042e8:	sbb    DWORD PTR [eax+0x3b8bbffd],ebp
  4042ee:	pushf  
  4042ef:	adc    BYTE PTR [ecx],cl
  4042f1:	cs adc edi,edi
  4042f4:	mov    ecx,DWORD PTR [ebp-0x58]
  4042f7:	jne    0x404337
  4042f9:	mov    cl,0xef
  4042fb:	cld    
  4042fc:	icebp  
  4042fd:	(bad)  
  4042fe:	jge    0x4042d8
  404300:	jmp    0x9428ae12
  404305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404306:	add    al,0x0
  404308:	fldln2 
  40430a:	outs   dx,BYTE PTR ds:[esi]
  40430b:	call   0xffe99d93
  404310:	leave  
  404311:	in     eax,dx
  404312:	callw  0x9d91
  404316:	test   eax,0xa7cdb9ff
  40431b:	call   0x404320
	...
  40432c:	add    BYTE PTR [eax],al
  40432e:	xchg   ebx,eax
  40432f:	pop    edx
  404330:	test   eax,0x4d7c1dff
  404335:	pop    edi
  404336:	iret   
  404337:	cli    
  404338:	idiv   bh
  40433a:	inc    edx
  40433b:	aam    0x97
  40433d:	sbb    DWORD PTR [edx+0x30],0x7c
  404341:	inc    ebp
  404342:	call   0x2f4:0x9874c340
  404349:	add    BYTE PTR [esi-0x2438fcc5],dl
  40434f:	lsl    eax,WORD PTR [eax]
  404352:	xchg   esi,eax
  404353:	cmp    esi,DWORD PTR [esi+0x45]
  404356:	bound  esp,QWORD PTR [ebx+0x39]
  404359:	test   eax,0x2e9e56e3
  40435e:	sahf   
  40435f:	cmp    al,BYTE PTR [eax]
  404361:	stos   BYTE PTR es:[edi],al
  404362:	dec    ecx
  404363:	inc    esi
  404364:	push   0x26
  404366:	inc    edx
  404367:	arpl   bp,di
  404369:	adc    BYTE PTR [edx+eiz*2+0x45a22e7e],ch
  404370:	cld    
  404371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404372:	lods   eax,DWORD PTR ds:[esi]
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	test   al,0x21
  404377:	mov    bl,0x66
  404379:	sbb    bh,BYTE PTR cs:[ebx]
  40437c:	cmp    DWORD PTR [ebx-0x454eb9ef],esp
  404382:	aam    0x5a
  404384:	jmp    0x6a7750d7
  404389:	mov    edi,0x3e26bcfa
  40438e:	repnz arpl cx,bp
  404391:	and    DWORD PTR [eax],eax
	...
  4043a3:	add    cl,dl
  4043a5:	lahf   
  4043a6:	das    
  4043a7:	or     DWORD PTR [esi+0x5376edb8],edx
  4043ad:	inc    esi
  4043ae:	mov    ecx,0xe963161b
  4043b3:	add    edi,DWORD PTR [esi]
  4043b5:	inc    ebp
  4043b6:	push   cs
  4043b7:	add    edx,DWORD PTR [esi-0x4e0483bb]
  4043bd:	repz cmp DWORD PTR [ebx],eax
  4043c0:	xchg   esi,eax
  4043c1:	sbb    ebp,DWORD PTR [ebx]
  4043c3:	jmp    FWORD PTR [ecx+0x159762ae]
  4043c9:	pop    ds
  4043ca:	xchg   ebp,eax
  4043cb:	dec    edi
  4043cc:	inc    ebp
  4043cd:	sbb    eax,0x62965824
  4043d2:	jmp    0x416a08da
  4043d7:	add    al,0xa6
  4043d9:	(bad)  
  4043da:	jmp    0xbe82637a
  4043df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e0:	pop    ds
  4043e1:	lahf   
  4043e2:	add    BYTE PTR [ecx-0x16ef9d76],ch
  4043e8:	xchg   ebp,eax
  4043e9:	cmp    cl,BYTE PTR [ecx+ecx*4+0x24894531]
  4043f0:	ret    0xba
  4043f3:	stc    
  4043f4:	xchg   ebp,eax
  4043f5:	(bad)  
  4043f6:	call   0xff853e09
  4043fb:	jo     0x4043d4
  4043fd:	push   es
  4043fe:	(bad)  
  4043ff:	cld    
  404400:	icebp  
  404401:	or     bh,BYTE PTR [ecx+ebp*8]
  404404:	xchg   ebp,eax
  404405:	bound  esi,QWORD PTR [ebx]
  404407:	test   eax,0x0
	...
  404418:	add    BYTE PTR [eax],al
  40441a:	in     eax,0xf7
  40441c:	(bad)  
  40441d:	lods   al,BYTE PTR ds:[esi]
  40441e:	fld    DWORD PTR [ebp+0x4595e900]
  404424:	jne    0x40444f
  404426:	sbb    DWORD PTR [edi+0xac74ed4],0x1d45ac8f
  404430:	inc    ebp
  404431:	and    DWORD PTR [ecx],edi
  404433:	push   ebp
  404434:	add    cl,ch
  404436:	sub    BYTE PTR [edi+0x44e92ef4],bl
  40443c:	push   DWORD PTR [edi+edx*2+0x1e]
  404440:	push   eax
  404441:	xchg   ecx,eax
  404442:	xchg   ebp,eax
  404443:	bound  eax,QWORD PTR [eax]
  404445:	imul   ebp,DWORD PTR [edx+eiz*2+0x3cbd94ff],0x62923bb5
  404450:	or     ebp,DWORD PTR [ecx]
  404452:	pop    sp
  404454:	xor    DWORD PTR [ecx+ebx*8+0x61],0x75
  404459:	in     al,0x2
  40445b:	inc    edi
  40445c:	add    cl,ch
  40445e:	xchg   ebp,eax
  40445f:	sbb    eax,0x54389945
  404464:	add    cl,ch
  404466:	push   cs
  404467:	sahf   
  404468:	mov    al,0x39
  40446a:	cmp    esi,ecx
  40446c:	mov    esp,0x5ee700
  404471:	add    bh,bh
  404473:	retf   0xc445
  404476:	(bad)  
  404477:	out    0x8f,al
  404479:	mov    dl,0x6f
  40447b:	pusha  
  40447c:	or     eax,eax
	...
  40448e:	add    BYTE PTR [eax],al
  404490:	jp     0x4044f3
  404492:	jmp    0xa0846f
  404497:	mov    edi,DWORD PTR [edx-0x4a]
  40449a:	mov    BYTE PTR [eax],0x2f
  40449d:	retf   
  40449e:	jge    0x404464
  4044a0:	(bad)  
  4044a1:	cmp    edi,edi
  4044a3:	(bad)  
  4044a4:	aas    
  4044a5:	push   ecx
  4044a6:	mov    edi,0x4504d5f3
  4044ab:	(bad)  
  4044ac:	repz pop edi
  4044ae:	add    BYTE PTR [eax],al
  4044b0:	mov    al,0x92
  4044b2:	mov    eax,0xc7103a8f
  4044b7:	inc    ebp
  4044b8:	(bad)  
  4044b9:	cld    
  4044ba:	push   cs
  4044bb:	add    bh,ch
  4044bd:	add    al,0x45
  4044bf:	hlt    
  4044c0:	push   eax
  4044c1:	dec    esp
  4044c2:	(bad)  
  4044c3:	inc    DWORD PTR [edx-0x2aaf3b5e]
  4044c9:	pop    edi
  4044ca:	push   0x0
  4044cc:	mov    al,0x92
  4044ce:	mov    esp,0xd22be8
  4044d3:	add    ah,al
  4044d5:	pop    ds
  4044d6:	je     0x4044de
  4044d8:	cmp    al,0x7a
  4044da:	aam    0x0
  4044dc:	sub    ah,BYTE PTR [ebx-0x17]
  4044df:	mov    WORD PTR [edi+0x2aff005f],gs
  4044e5:	outs   dx,DWORD PTR ds:[esi]
  4044e6:	push   DWORD PTR [ebp+0x7f]
  4044e9:	cld    
  4044ea:	je     0x4044a4
  4044ec:	pop    ss
  4044ed:	or     ebp,DWORD PTR [edx]
  4044ef:	inc    ecx
  4044f0:	scas   eax,DWORD PTR es:[edi]
  4044f1:	(bad)  
  4044f2:	je     0x4044b0
	...
  404504:	add    BYTE PTR [eax],al
  404506:	addr16 adc eax,0x399600b1
  40450c:	add    ah,0xaa
  40450f:	and    al,0x6c
  404511:	inc    ebp
  404512:	pop    edx
  404513:	imul   ebx,DWORD PTR [edx],0xc48e7100
  404519:	call   0xffe5568b
  40451e:	(bad)  
  40451f:	stc    
  404520:	add    ch,BYTE PTR cs:[ebp-0x65]
  404524:	jnp    0x40456b
  404526:	or     ah,ah
  404528:	cs mov ah,0x3e
  40452b:	call   0xbc2e:0xd441ffa6
  404532:	cs jno 0x4045a9
  404535:	add    BYTE PTR [esi-0x158a5a97],dl
  40453b:	retf   
  40453c:	das    
  40453d:	mov    ah,0x2e
  40453f:	outs   dx,DWORD PTR ds:[esi]
  404540:	stos   DWORD PTR es:[edi],eax
  404541:	call   FWORD PTR [ecx]
  404543:	push   eax
  404544:	ret    
  404545:	jne    0x4044db
  404547:	mov    al,0xf3
  404549:	or     BYTE PTR [ebx-0x558bfcb7],0x94
  404550:	das    
  404551:	adc    cl,bh
  404553:	add    eax,0xcd6bfef7
  404558:	pushf  
  404559:	inc    eax
  40455a:	out    dx,eax
  40455b:	mov    esp,DWORD PTR [ebp+0x10dd60b]
  404561:	jmp    0x4044e4
  404563:	ror    ah,1
  404565:	or     ebp,ebp
  404567:	in     al,dx
  404568:	adc    DWORD PTR [ebp+0x0],ecx
	...
  40457a:	add    BYTE PTR [eax],al
  40457c:	push   ebx
  40457d:	popf   
  40457e:	push   esp
  40457f:	dec    DWORD PTR [ebx+0x4d]
  404582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404583:	jne    0x404587
  404585:	jno    0x404592
  404587:	sti    
  404588:	mov    cl,0x43
  40458a:	js     0x404564
  40458c:	test   eax,0xa7e86fc5
  404591:	mov    DWORD PTR [eax+eax*1],eax
  404594:	cdq    
  404595:	popa   
  404596:	pop    esp
  404597:	les    edi,FWORD PTR [esi+0x54]
  40459a:	mov    esi,0x5c4289a4
  40459f:	push   0xa4ae6c6e
  4045a4:	jns    0x4045e8
  4045a6:	cmp    al,0x6c
  4045a8:	jle    0x40460e
  4045aa:	sahf   
  4045ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ac:	imul   esp,esi,0xb6965833
  4045b2:	loope  0x404558
  4045b4:	jecxz  0x4045c4
  4045b6:	xchg   ecx,eax
  4045b7:	mov    al,0x70
  4045b9:	inc    edx
  4045ba:	sahf   
  4045bb:	js     0x404612
  4045bd:	sahf   
  4045be:	ss mov ebx,0x4ee95354
  4045c4:	or     eax,0x2ebf6a4f
  4045c9:	xchg   esi,eax
  4045ca:	ror    al,cl
  4045cc:	adc    eax,0xaa03e5c0
  4045d1:	mov    al,0x6a
  4045d3:	xchg   BYTE PTR es:[edx-0x23],ah
  4045d7:	cmp    esp,DWORD PTR [ebx]
  4045d9:	test   al,0x5d
  4045db:	push   ebx
  4045dc:	or     DWORD PTR [eax+0x9be5],edi
	...
  4045f2:	or     dh,bl
  4045f4:	call   0xc16358fc
  4045f9:	repz lock mov bh,0xed
  4045fd:	fwait
  4045fe:	adc    bl,BYTE PTR [ecx]
  404600:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404602:	push   gs
  404604:	xor    DWORD PTR [ebx+eiz*2+0x166113e],esp
  40460b:	arpl   cx,bp
  40460d:	clc    
  40460e:	or     DWORD PTR [edi+0x524ba4f0],esi
  404614:	push   cs
  404615:	cs mov esi,0x9e2e0692
  40461b:	dec    edx
  40461c:	jmp    0xcd62:0x41a9a5
  404623:	inc    ecx
  404624:	jne    0x404613
  404626:	cld    
  404627:	or     BYTE PTR [edi+0x754195e9],ch
  40462d:	in     eax,dx
  40462e:	cmp    eax,0x35d6d89a
  404633:	in     eax,dx
  404634:	ret    0x4b32
  404637:	and    al,0xc
  404639:	jmp    0x692c33ec
  40463e:	pop    esi
  40463f:	mov    dl,0xfe
  404641:	mov    dh,0x35
  404643:	out    dx,eax
  404644:	test   BYTE PTR [ebx],bh
  404646:	xor    al,0x41
  404648:	(bad)  
  404649:	cmp    DWORD PTR [edx-0x6a16fe9d],eax
  40464f:	dec    edx
  404650:	arpl   WORD PTR [eax-0x66],bx
  404653:	(bad)  
  404654:	leave  
  404655:	stos   BYTE PTR es:[edi],al
	...
  404666:	add    BYTE PTR [eax],al
  404668:	jg     0x404657
  40466a:	jmp    0x4046d6
  40466c:	ja     0x4046d8
  40466e:	add    ch,dh
  404670:	xchg   esp,eax
  404671:	in     eax,0x7c
  404673:	fst    DWORD PTR [ebp+0x7f6e19b6]
  404679:	push   esi
  40467a:	(bad)  
  40467b:	fcomp  QWORD PTR [ebp+0x3543da4a]
  404681:	inc    ecx
  404682:	(bad)  
  404683:	fadd   QWORD PTR ds:0x34dd7540
  404689:	mov    bh,0x8
  40468b:	push   ecx
  40468c:	cwde   
  40468d:	sbb    eax,0x23db3eff
  404692:	adc    cl,ch
  404694:	sahf   
  404695:	in     eax,dx
  404696:	jmp    0x404702
  404698:	mov    bh,0x6a
  40469a:	add    BYTE PTR [ebp-0x12831c2f],bl
  4046a0:	xchg   ebp,eax
  4046a1:	mov    dh,0x16
  4046a3:	push   ss
  4046a4:	lahf   
  4046a5:	push   edx
  4046a6:	call   DWORD PTR [ebp+ecx*4+0x7500ae4a]
  4046ad:	add    eax,0x7122ffff
  4046b2:	push   DWORD PTR [ebp-0x49]
  4046b5:	or     al,0x5
  4046b7:	fld    TBYTE PTR [eax-0x743d36fd]
  4046bd:	fs push ebp
  4046bf:	mov    ebx,DWORD PTR [ebx-0x17]
  4046c2:	ret    
  4046c3:	lock push 0xa8e80c5b
  4046c9:	pop    es
  4046ca:	(bad)  
  4046cb:	inc    DWORD PTR [eax]
	...
  4046dd:	add    dh,ah
  4046df:	stos   BYTE PTR es:[edi],al
  4046e0:	or     al,0x83
  4046e2:	stos   BYTE PTR es:[edi],al
  4046e3:	push   edx
  4046e4:	add    BYTE PTR [ecx+eax*4+0x3],dh
  4046e8:	jne    0x4046f6
  4046ea:	push   edi
  4046eb:	xor    edx,esp
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	jo     0x4046b1
  4046f1:	je     0x404770
  4046f3:	rol    DWORD PTR [eax+esi*8+0x7f],1
  4046f7:	add    esi,DWORD PTR [ebp+0xc]
  4046fa:	pop    ss
  4046fb:	out    0xe2,al
  4046fd:	call   FWORD PTR [eax]
  4046ff:	jno    0x4046c1
  404701:	je     0x4046f0
  404703:	out    0x7c,al
  404705:	cld    
  404706:	das    
  404707:	adc    BYTE PTR fs:[eax],al
  40470a:	sbb    al,0x44
  40470c:	(bad)  
  40470d:	jne    0x40478a
  40470f:	add    al,0x75
  404711:	clc    
  404712:	addr16 cmp ah,dh
  404715:	jmp    FWORD PTR [eax+0x70]
  404718:	shl    BYTE PTR [ebp-0x2],0x4
  40471c:	jne    0x40472e
  40471e:	pop    eax
  40471f:	pop    edx
  404720:	cld    
  404721:	jmp    DWORD PTR [edx]
  404723:	fdiv   st(6),st
  404725:	jne    0x40471e
  404727:	or     ecx,DWORD PTR [edi-0x1]
  40472a:	test   al,0x4
  40472c:	lea    eax,[ebp-0x51]
  40472f:	jae    0x404719
  404731:	loopne 0x4046cf
  404733:	add    al,0xff
  404735:	call   DWORD PTR [esi-0x1017f122]
  40473b:	mov    fs,WORD PTR [edx+0xf8bdfff]
	...
  404751:	add    BYTE PTR [eax],al
  404753:	add    BYTE PTR [ebx-0x4c],al
  404756:	scas   eax,DWORD PTR es:[edi]
  404757:	sbb    edx,0x39
  40475a:	mov    eax,ds:0xb1618a75
  40475f:	loop   0x4046f2
  404761:	dec    eax
  404762:	mov    eax,DWORD PTR [ebp-0x66]
  404765:	int3   
  404766:	pop    ds
  404767:	or     al,0x96
  404769:	popf   
  40476a:	dec    ecx
  40476b:	inc    DWORD PTR [ebx]
  40476d:	push   ds
  40476e:	stos   DWORD PTR es:[edi],eax
  40476f:	pop    edx
  404770:	je     0x40479a
  404772:	mov    eax,ds:0xd575560b
  404777:	mov    ebx,ds
  404779:	stc    
  40477a:	xor    edi,edi
  40477c:	jecxz  0x40479b
  40477e:	stos   DWORD PTR es:[edi],eax
  40477f:	adc    DWORD PTR ds:0x560ba108,esi
  404785:	push   ebp
  404786:	in     eax,0x80
  404788:	ret    
  404789:	aad    0x3
  40478b:	add    BYTE PTR [esi+0x31111449],ah
  404791:	ds repz (bad) 
  404794:	mov    ds:0x1e75a1bd,eax
  404799:	mov    eax,0xbe2e0817
  40479e:	mov    ds:0x47b611ff,al
  4047a3:	lock xchg cx,ax
  4047a6:	and    ah,bl
  4047a8:	add    DWORD PTR [eax-0x5e758a5f],ebx
  4047ae:	dec    ecx
  4047af:	(bad)  
  4047b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b2:	retf   
  4047b3:	ret    0x499a
  4047b6:	mov    eax,DWORD PTR ss:[eax]
	...
  4047c9:	add    dl,dh
  4047cb:	retf   
  4047cc:	enter  0x45f0,0x64
  4047d0:	mov    ebp,0xf1624bff
  4047d5:	stos   DWORD PTR es:[edi],eax
  4047d6:	pop    ds
  4047d7:	inc    esp
  4047d8:	push   ds
  4047d9:	mov    eax,ds:0x84e1a50f
  4047de:	cmp    ebp,DWORD PTR [edx-0x17]
  4047e1:	pop    ss
  4047e2:	pop    eax
  4047e3:	aas    
  4047e4:	jl     0x4047f1
  4047e6:	mov    esi,0xa1a10834
  4047eb:	push   0x29
  4047ed:	sbb    BYTE PTR [ebp+ebp*8-0x5d],ah
  4047f1:	xchg   ebx,eax
  4047f2:	out    0x3d,al
  4047f4:	pop    esp
  4047f5:	or     al,0x7e
  4047f7:	bswap  ebx
  4047f9:	mov    al,ds:0x17a96a81
  4047fe:	mov    ah,0xe3
  404800:	dec    ebx
  404801:	mov    al,ds:0x3d96296
  404806:	in     eax,0x52
  404808:	mov    esi,0x3c3e6216
  40480d:	pushf  
  40480e:	outs   dx,BYTE PTR ds:[esi]
  40480f:	jle    0x4047d8
  404811:	mov    al,ds:0x17a96a51
  404816:	xchg   edi,eax
  404817:	mov    eax,ds:0x9346466c
  40481c:	cmp    ebp,0xa08e3e34
  404822:	stos   DWORD PTR es:[edi],eax
  404823:	push   0xffffff91
  404825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404826:	dec    edx
  404827:	ds jle 0x4047b6
  40482a:	push   ebp
  40482b:	call   0x0:0xc5a0
	...
  40483e:	add    BYTE PTR [eax],al
  404840:	xchg   edx,eax
  404841:	bound  edx,QWORD PTR [ecx*4+0x572ce402]
  404848:	or     BYTE PTR [esi],bh
  40484a:	pop    esi
  40484b:	enter  0xfb1b,0x56
  40484f:	mov    al,ds:0x3e962f9
  404854:	xchg   esi,eax
  404855:	jmp    0x22dd5805
  40485a:	mov    ch,0x6
  40485c:	push   ss
  40485d:	jnp    0x40485f
  40485f:	jmp    0xb229afe4
  404864:	xchg   esp,eax
  404865:	bound  eax,QWORD PTR [eax]
  404867:	mov    al,es:0xee48e86e
  40486d:	cmp    eax,0xb7d5e2ff
  404872:	jno    0xe981d709
  404878:	div    BYTE PTR [edi+0x1db7110c]
  40487e:	push   esi
  404880:	in     eax,dx
  404881:	outs   dx,DWORD PTR ds:[esi]
  404882:	push   0xa28168
  404887:	out    0xaf,al
  404889:	outs   dx,BYTE PTR ds:[esi]
  40488a:	call   0xff7d829d
  40488f:	pusha  
  404890:	psubd  mm7,mm5
  404893:	into   
  404894:	adc    edx,ecx
  404896:	ds call 0x64cdab31
  40489c:	push   esp
  40489d:	cmp    al,0xff
  40489f:	mov    dh,0xa2
  4048a1:	dec    edx
  4048a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a3:	lea    eax,[eax]
	...
  4048b5:	add    BYTE PTR [ecx],dh
  4048b7:	cmp    eax,0x3c546c8d
  4048bc:	call   FWORD PTR [esi+0x51b53d8a]
  4048c2:	sbb    BYTE PTR ds:0xef581ff,bh
  4048c8:	add    cl,ch
  4048ca:	sbb    ah,bh
  4048cc:	mov    ebx,0x403d017f
  4048d1:	out    0x11,al
  4048d3:	pop    eax
  4048d4:	add    ecx,ebp
  4048d6:	xchg   ebp,eax
  4048d7:	out    dx,eax
  4048d8:	xchg   esp,eax
  4048d9:	sub    ebp,DWORD PTR [eax]
  4048db:	cmp    eax,0x529456ff
  4048e0:	add    cl,ch
  4048e2:	xchg   ebp,eax
  4048e3:	ins    DWORD PTR es:[edi],dx
  4048e4:	test   BYTE PTR [edx-0x66],ch
  4048e7:	bound  eax,QWORD PTR [eax]
  4048e9:	add    BYTE PTR [edx-0x60],ah
  4048ec:	sub    al,0x50
  4048ee:	(bad)  
  4048ef:	push   ebx
  4048f0:	sub    al,0x41
  4048f2:	out    dx,eax
  4048f3:	or     BYTE PTR [ebp+ebp*4-0x3ff49f41],bh
  4048fa:	sub    ch,BYTE PTR [edx-0x17]
  4048fd:	int3   
  4048fe:	scas   eax,DWORD PTR es:[edi]
  4048ff:	pusha  
  404900:	add    BYTE PTR [ebp-0x1dfc6],cl
  404906:	mov    al,ds:0xf2c41d3
  40490b:	mov    DWORD PTR [ecx+0x2c],edi
  40490e:	out    dx,al
  40490f:	pusha  
  404910:	call   0xa69bb4
  404915:	or     edi,DWORD PTR [edi+0xe90559]
	...
  40492b:	add    BYTE PTR [eax],ah
  40492d:	pusha  
  40492e:	add    BYTE PTR [eax],al
  404930:	pusha  
  404931:	pop    ebx
  404932:	or     al,0xe8
  404934:	bound  eax,QWORD PTR [esi]
  404936:	(bad)  
  404937:	push   DWORD PTR [eax+eiz*1+0x75]
  40493b:	(bad)  
  40493d:	out    0x27,eax
  40493f:	inc    ecx
  404940:	outs   dx,DWORD PTR ds:[esi]
  404941:	fnsave [esp+ecx*1+0x57]
  404945:	mov    edx,0x900ffdf
  40494a:	or     ch,BYTE PTR [edx+0x3f]
  40494d:	fnsave [esp+ecx*1+0x27]
  404951:	out    dx,al
  404952:	fdivp  st(7),st
  404954:	and    bl,dl
  404956:	xchg   esp,eax
  404957:	ret    0xdd21
  40495a:	dec    BYTE PTR [ebp+0x5051328d]
  404960:	pop    es
  404961:	repnz fdivp st(7),st
  404964:	mov    al,ds:0xe775ff6f
  404969:	fdiv   QWORD PTR [esp+edx*1+0x70]
  40496d:	pop    edx
  40496e:	adc    BYTE PTR [eax+0x60],dl
  404971:	pop    edx
  404972:	or     al,ch
  404974:	xchg   esi,eax
  404975:	cdq    
  404976:	popf   
  404977:	push   ecx
  404979:	mov    eax,ds:0xa4e9dbc6
  40497e:	stos   BYTE PTR es:[edi],al
  40497f:	pusha  
  404980:	adc    ecx,DWORD PTR [eax]
  404982:	out    dx,eax
  404983:	mov    BYTE PTR [ebx],dl
  404985:	mov    esi,0xc8d1ff9d
  40498a:	and    BYTE PTR [eax],dl
  40498c:	xchg   esi,eax
  40498d:	fiadd  WORD PTR [eax]
  40498f:	jmp    0x404991
	...
  4049a1:	add    BYTE PTR [esp+ebx*2-0x6146efe8],ah
  4049a8:	push   edi
  4049a9:	(bad)  
  4049aa:	mov    cl,0x6c
  4049ac:	stos   DWORD PTR es:[edi],eax
  4049ad:	inc    edx
  4049ae:	clc    
  4049af:	dec    ecx
  4049b0:	add    ecx,DWORD PTR [ebx]
  4049b2:	(bad)  
  4049b3:	mov    ch,0xe0
  4049b5:	addr16 or eax,0x91004422
  4049bb:	mov    dh,0xf
  4049bd:	call   0xffdd6e84
  4049c2:	adc    esi,0x1479fe57
  4049c8:	xor    al,0xe8
  4049ca:	repnz or al,0x9d
  4049cd:	inc    esi
  4049cf:	enter  0x181f,0x96
  4049d3:	jne    0x4049e5
  4049d5:	jmp    ebx
  4049d7:	sbb    eax,0x41cbff33
  4049dc:	pushf  
  4049dd:	push   ebp
  4049de:	scas   al,BYTE PTR es:[edi]
  4049df:	ror    BYTE PTR [edi],1
  4049e1:	dec    ebx
  4049e3:	xor    eax,0x41c3ff33
  4049e8:	stos   DWORD PTR es:[edi],eax
  4049e9:	push   esp
  4049ea:	xor    ebp,esp
  4049ec:	pushf  
  4049ed:	call   0xffdd4aa5
  4049f2:	adc    eax,esi
  4049f4:	ret    0x19fe
  4049f7:	mov    ah,0x34
  4049f9:	dec    DWORD PTR [ebx-0x73]
  4049fc:	sahf   
  4049fd:	dec    DWORD PTR [ecx]
  4049ff:	bound  edx,QWORD PTR [ecx-0x47]
  404a02:	xor    ah,BYTE PTR [edx-0x17]
  404a05:	xchg   BYTE PTR [eax],al
	...
  404a17:	add    dh,dl
  404a19:	push   0x6c
  404a1b:	xchg   ebx,eax
  404a1c:	lock cmp cl,BYTE PTR [esi-0x63]
  404a20:	and    edi,esi
  404a22:	inc    esi
  404a23:	popf   
  404a24:	loope  0x404a6f
  404a26:	das    
  404a27:	jo     0x4049bf
  404a29:	bound  esi,QWORD PTR [esi]
  404a2b:	push   edi
  404a2c:	push   cs
  404a2d:	cmp    al,0x2e
  404a2f:	popf   
  404a30:	mov    esi,0xc19d4274
  404a35:	sub    BYTE PTR [ebx],ch
  404a37:	clc    
  404a38:	mov    ecx,0x3cb06295
  404a3d:	bound  ecx,QWORD PTR [esi]
  404a3f:	pop    ss
  404a40:	cmp    BYTE PTR [ebx],0x7c
  404a43:	repz mov al,ds:0x239cedb4
  404a49:	push   0x1
  404a4b:	fst    QWORD PTR [ebx+0x54caee3a]
  404a51:	push   ebx
  404a52:	jmp    0xde87578d
  404a57:	push   ss
  404a58:	mov    cl,BYTE PTR [edx+0x32]
  404a5b:	mov    ebp,0xc3e23a71
  404a60:	loop   0x404aba
  404a62:	(bad)  
  404a63:	push   ss
  404a64:	xchg   BYTE PTR [edx+0x3a3891d1],dl
  404a6a:	mov    dh,0x33
  404a6c:	push   ecx
  404a6d:	mov    al,0xd1
  404a6f:	pushf  
  404a70:	ret    
  404a71:	dec    esi
  404a72:	cmp    DWORD PTR [ebp+0x5d916acb],ebx
  404a78:	cmp    DWORD PTR [edx],edi
  404a7a:	xchg   esi,eax
  404a7b:	stos   DWORD PTR es:[edi],eax
	...
  404a8c:	add    BYTE PTR [eax],al
  404a8e:	cmp    al,0x1d
  404a90:	mov    ds,WORD PTR [edi+ebx*2-0x34fc22db]
  404a97:	in     eax,dx
  404a98:	mov    WORD PTR [ebx+eiz*4-0x5789ffb2],ds
  404a9f:	push   edx
  404aa0:	push   esp
  404aa2:	cdq    
  404aa3:	int3   
  404aa4:	sbb    ah,BYTE PTR [esi-0x58]
  404aa7:	push   0xffffffe8
  404aa9:	mov    al,ds:0x56ff3a1a
  404aae:	mov    BYTE PTR [esi-0x1],cl
  404ab1:	aam    0xe5
  404ab3:	cmp    BYTE PTR [ebp-0xb],dh
  404ab6:	scas   eax,DWORD PTR es:[edi]
  404ab7:	test   edi,edi
  404ab9:	mov    ah,0x8d
  404abb:	dec    edx
  404abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abd:	xor    bh,BYTE PTR ss:[edx]
  404ac0:	push   DWORD PTR [ecx+eax*8+0x22f97538]
  404ac7:	mov    al,0xc
  404ac9:	xchg   ebx,eax
  404aca:	mov    ecx,0xfde17538
  404acf:	aad    0xfe
  404ad1:	push   cs
  404ad2:	or     ch,BYTE PTR [edx+eax*8]
  404ad5:	fst    DWORD PTR [ebp+0x160d8b8f]
  404adb:	pop    ds
  404adc:	lock call 0x9f1e:0x122b91cb
  404ae4:	or     al,0xe6
  404ae6:	push   0xffffffe8
  404ae8:	inc    esp
  404ae9:	loope  0x404b08
  404aeb:	scas   eax,DWORD PTR es:[edi]
  404aec:	or     BYTE PTR [esi-0x29],ah
  404aef:	ss (bad) 
  404af1:	and    al,0x0
	...
  404b03:	add    BYTE PTR [esi],al
  404b05:	bound  eax,QWORD PTR [eax]
  404b07:	jmp    0xbd7d30a1
  404b0c:	push   0xffffffa2
  404b0e:	add    cl,ch
  404b10:	mov    eax,ds:0x9a2c8396
  404b15:	bound  esi,QWORD PTR [edi+edi*1+0xf]
  404b19:	lahf   
  404b1a:	lock cmp DWORD PTR [eax+0x63],ebp
  404b1e:	push   0xffffffe9
  404b20:	and    DWORD PTR [edx-0x7d],0xc
  404b24:	and    bh,BYTE PTR [ecx]
  404b26:	jae    0x404b28
  404b28:	xor    bl,ah
  404b2a:	je     0x404b3c
  404b2c:	add    al,0x60
  404b2e:	push   0x0
  404b30:	xchg   ebp,eax
  404b31:	pop    esi
  404b32:	lea    eax,[ebp-0x79]
  404b35:	outs   dx,BYTE PTR ds:[esi]
  404b36:	call   DWORD PTR ds:0x40467b
  404b3c:	add    al,0x25
  404b3e:	je     0x404b6f
  404b40:	jl     0x404b9d
  404b42:	hlt    
  404b43:	add    bl,al
  404b45:	inc    ebp
  404b46:	mov    al,BYTE PTR [ebp-0x15]
  404b49:	out    0x4c,eax
  404b4b:	lock xchg esp,eax
  404b4d:	data16 ja 0x404b67
  404b50:	cld    
  404b51:	ror    BYTE PTR [edx+0x7ce98375],1
  404b57:	or     BYTE PTR [ebx+ebp*4-0x10],al
  404b5b:	jecxz  0x404b0a
  404b5d:	iret   
  404b5e:	mov    ds:0xff61028b,eax
  404b63:	jne    0x404af4
  404b65:	in     eax,dx
  404b66:	(bad)  
  404b67:	inc    BYTE PTR [eax]
	...
  404b79:	add    BYTE PTR [edx],ah
  404b7b:	jmp    0x5e848367
  404b80:	add    BYTE PTR [ebx+0x5b5e7bbc],cl
  404b86:	mov    dh,0x20
  404b88:	or     al,0x0
  404b8a:	ret    0xebe7
  404b8d:	xor    DWORD PTR [ebx],0xffffffd0
  404b90:	push   edx
  404b91:	push   esi
  404b92:	mov    al,0x86
  404b94:	sbb    al,0x2f
  404b96:	mov    esi,0x499e85e
  404b9b:	add    BYTE PTR fs:[ebx-0x3badac9],cl
  404ba2:	aas    
  404ba3:	add    BYTE PTR fs:[eax],al
  404ba6:	xor    al,0x24
  404ba8:	je     0x404be8
  404baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bab:	data16 das 
  404bad:	inc    ecx
  404bae:	das    
  404baf:	jno    0x404b99
  404bb1:	inc    ebp
  404bb2:	xchg   esi,eax
  404bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb4:	add    eax,DWORD PTR [eax]
  404bb6:	popf   
  404bb7:	or     DWORD PTR [edi],ecx
  404bb9:	das    
  404bba:	or     eax,0x69292bba
  404bbf:	mov    al,BYTE PTR [ebx+edx*2]
  404bc2:	(bad)  
  404bc3:	cmc    
  404bc4:	ins    DWORD PTR es:[edi],dx
  404bc5:	add    BYTE PTR [esi-0x5f8b3cbc],dl
  404bcb:	mov    ah,0x9b
  404bcd:	lea    edx,[ebx-0x6b]
  404bd0:	xor    ebp,eax
  404bd2:	mov    bl,0xe4
  404bd4:	add    al,BYTE PTR [eax]
  404bd6:	inc    esi
  404bd7:	test   al,0xb2
  404bd9:	and    DWORD PTR [ebx-0x63],0x3
  404bdd:	je     0x404bdf
	...
  404bef:	add    BYTE PTR [ecx+eiz*8+0x49960003],cl
  404bf6:	cmp    bl,BYTE PTR [esi+0x6d]
  404bf9:	add    dh,0xb8
  404bfc:	xchg   esi,eax
  404bfd:	dec    ecx
  404bfe:	add    eax,DWORD PTR [eax]
  404c00:	pop    ecx
  404c01:	idiv   DWORD PTR ds:0x8df6d5c9
  404c07:	in     al,dx
  404c08:	adc    eax,0x6383937e
  404c0d:	fucomp st(0)
  404c0f:	inc    eax
  404c10:	xchg   esi,eax
  404c11:	dec    ecx
  404c12:	movlps xmm2,QWORD PTR ds:0xd72e82ee
  404c19:	dec    ecx
  404c1a:	add    esi,DWORD PTR [edi+ecx*4-0x34]
  404c1e:	xlat   BYTE PTR ds:[ebx]
  404c1f:	sub    DWORD PTR [eax-0x14fffb76],0x48
  404c26:	pop    ebx
  404c27:	add    DWORD PTR [esi+0x55c90349],edx
  404c2d:	scas   al,BYTE PTR es:[edi]
  404c2e:	aas    
  404c2f:	cli    
  404c30:	push   eax
  404c31:	dec    ecx
  404c32:	add    eax,esi
  404c34:	(bad)  
  404c35:	dec    edx
  404c36:	add    eax,esi
  404c38:	(bad)  
  404c39:	dec    ebx
  404c3a:	add    eax,esi
  404c3c:	(bad)  
  404c3d:	(bad)  
  404c3e:	jmp    0x5803:0xe5a25003
  404c45:	mov    ds:0x9d1afeec,al
  404c4a:	xchg   ebp,eax
  404c4b:	xor    al,0xac
  404c4d:	bound  edx,QWORD PTR [ebx]
  404c4f:	add    al,0xac
  404c51:	bound  edx,QWORD PTR [ebx]
  404c53:	add    al,0x0
	...
  404c65:	add    BYTE PTR [edx+eiz*2+0x3],bh
  404c69:	add    al,0x7e
  404c6b:	sub    bl,0x3
  404c6e:	xchg   esi,eax
  404c6f:	int3   
  404c70:	or     DWORD PTR [esi],ebp
  404c72:	xchg   esp,eax
  404c73:	in     eax,0xa3
  404c75:	popf   
  404c76:	inc    esi
  404c77:	aaa    
  404c78:	cld    
  404c79:	pop    ss
  404c7a:	mov    eax,0xd60ce9a1
  404c7f:	lods   al,BYTE PTR ds:[esi]
  404c80:	jmp    0x404c4c
  404c82:	aad    0x1e
  404c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c85:	xchg   ebx,eax
  404c86:	xchg   esi,eax
  404c87:	(bad)  
  404c88:	jmp    0x39dd6790
  404c8d:	xor    al,0xc1
  404c8f:	lods   al,BYTE PTR ds:[esi]
  404c90:	sbb    eax,0xf437962e
  404c95:	add    DWORD PTR [eax-0x29f3165f],0xffffffac
  404c9c:	out    0xc0,al
  404c9e:	pop    ebx
  404c9f:	xor    ch,cl
  404ca1:	add    edx,DWORD PTR [esi-0x75f1019e]
  404ca7:	fdivr  QWORD PTR ss:[edi-0x48]
  404cab:	mov    ds:0x32db8ce9,eax
  404cb0:	mov    al,0xc4
  404cb2:	jecxz  0x404c9d
  404cb4:	int3   
  404cb5:	test   BYTE PTR [edx-0x15],bl
  404cb8:	arpl   WORD PTR [esi],di
  404cba:	push   ds
  404cbb:	xchg   ebx,eax
  404cbc:	inc    ecx
  404cbd:	mov    ah,0xb0
  404cbf:	mov    ds:0x3cd7abe9,eax
  404cc4:	mov    esi,0x69e698
  404cc9:	test   eax,0x0
	...
  404cda:	add    BYTE PTR [eax],al
  404cdc:	cdq    
  404cdd:	pop    esp
  404cde:	sub    DWORD PTR [edx+edx*1],0x4f
  404ce2:	ja     0x404cf6
  404ce4:	adc    DWORD PTR [eax+0x550239f0],esp
  404cea:	stos   DWORD PTR es:[edi],eax
  404ceb:	jmp    0x12002c85
  404cf0:	pop    esp
  404cf1:	gs mov dh,0x2c
  404cf4:	call   DWORD PTR [edx+0x34d0370f]
  404cfa:	push   eax
  404cfb:	out    0x67,al
  404cfd:	lahf   
  404cfe:	std    
  404cff:	sbb    DWORD PTR [edi-0x3a9abb14],ecx
  404d05:	gs mov dh,0xa4
  404d08:	adc    dl,BYTE PTR [ebx+0x38a89f0f]
  404d0e:	push   eax
  404d0f:	fiadd  WORD PTR [edi-0x61]
  404d12:	stc    
  404d13:	cdq    
  404d14:	mov    gs,esp
  404d16:	inc    esp
  404d17:	inc    ecx
  404d18:	test   DWORD PTR [ebp-0x49],esp
  404d1b:	lods   al,BYTE PTR ds:[esi]
  404d1c:	daa    
  404d1d:	xchg   ebx,eax
  404d1e:	pcmpeqd mm0,QWORD PTR [eax-0x77d9afd2]
  404d25:	xor    ch,BYTE PTR [eax+0x34]
  404d28:	mov    edi,0x686400a2
  404d2d:	out    0x4f,al
  404d2f:	add    esi,ebp
  404d31:	or     BYTE PTR [eax],al
  404d33:	jmp    0x6c746c4a
  404d38:	shl    dh,1
  404d3a:	dec    edi
  404d3b:	add    DWORD PTR [esi],ecx
  404d3d:	or     al,0x0
  404d3f:	jmp    0x404d44
	...
  404d50:	add    BYTE PTR [eax],al
  404d52:	(bad)
  404d55:	jne    0x404d19
  404d57:	retf   0xfd0
  404d5a:	(bad)  [edx-0x18]
  404d5d:	cwde   
  404d5e:	ss xor eax,0x1ae1c1ff
  404d64:	inc    DWORD PTR [eax]
  404d66:	push   eax
  404d67:	daa    
  404d68:	ret    
  404d69:	push   ebp
  404d6a:	les    ecx,FWORD PTR [edx]
  404d6c:	add    esp,0xfffecd93
  404d72:	pushf  
  404d73:	test   DWORD PTR [edx+0x0],ebp
  404d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d77:	pop    esi
  404d78:	push   DWORD PTR [ebp+0x27]
  404d7b:	or     DWORD PTR [esi-0x7732ff2b],esp
  404d81:	inc    ebp
  404d82:	adc    eax,DWORD PTR [esi-0x73ffffff]
  404d88:	push   DWORD PTR [ebp+0x7]
  404d8b:	or     edi,esp
  404d8d:	aam    0x80
  404d8f:	int    0x67
  404d91:	pushf  
  404d92:	out    dx,eax
  404d93:	pusha  
  404d94:	add    BYTE PTR [ebp-0x8196],cl
  404d9a:	push   eax
  404d9b:	outs   dx,BYTE PTR ds:[esi]
  404d9c:	call   0xff0df51c
  404da1:	(bad)  
  404da2:	jp     0x404e22
  404da4:	(bad)  
  404da5:	call   DWORD PTR [eax-0x46]
  404da8:	add    BYTE PTR [eax],al
  404daa:	mov    edi,0x806084e9
  404daf:	int    0xfe
  404db1:	push   eax
  404db2:	push   edi
  404db3:	out    dx,eax
  404db4:	test   al,0x0
	...
  404dc6:	add    BYTE PTR [eax],al
  404dc8:	scas   eax,DWORD PTR es:[edi]
  404dc9:	inc    edi
  404dca:	enter  0x6d2b,0xeb
  404dce:	mov    esp,0xfecd8074
  404dd3:	jmp    0x404d71
  404dd5:	loopne 0x404e15
  404dd7:	add    BYTE PTR [edx],bl
  404dd9:	bound  edi,QWORD PTR [edx+0x607f01]
  404ddf:	or     ebp,DWORD PTR [ebp+0x78c60352]
  404de5:	pusha  
  404de6:	inc    edi
  404de7:	inc    ecx
  404de8:	out    dx,al
  404de9:	(bad)  
  404dea:	jg     0x404dec
  404dec:	jg     0x404e4e
  404dee:	jb     0x404dd5
  404df0:	xchg   esi,eax
  404df1:	inc    eax
  404df2:	ret    
  404df3:	je     0x404d7d
  404df5:	mov    eax,ds:0x49960078
  404dfa:	mov    BYTE PTR [ebp-0x6a0b4a],al
  404e00:	out    0xec,al
  404e02:	invd   
  404e04:	lods   eax,DWORD PTR cs:[esi]
  404e06:	scas   eax,DWORD PTR es:[edi]
  404e07:	(bad)  
  404e08:	cmp    ecx,edx
  404e0a:	push   es
  404e0b:	push   0xffffff96
  404e0d:	dec    edi
  404e0e:	add    al,0xff
  404e10:	mov    ds:0x4aa9ab41,eax
  404e15:	in     eax,0x95
  404e17:	call   0xffd62d67
  404e1c:	data16 mov ah,0x10
  404e1f:	or     dh,bh
  404e21:	data16 mov al,0xff
  404e24:	add    DWORD PTR [edx+0x4],esp
  404e27:	add    al,0x96
  404e29:	dec    ecx
  404e2a:	stos   DWORD PTR es:[edi],eax
  404e2b:	jmp    0x404e30
	...
  404e3c:	add    BYTE PTR [eax],al
  404e3e:	leave  
  404e3f:	xchg   esp,eax
  404e40:	xchg   esi,eax
  404e41:	mov    DWORD PTR [ebx],edx
  404e43:	out    dx,al
  404e44:	xchg   ebp,eax
  404e45:	jmp    ecx
  404e47:	and    DWORD PTR [esi-0x69b669fd],edx
  404e4d:	mov    ch,0x72
  404e4f:	je     0x404de7
  404e51:	(bad)  
  404e52:	ds inc edi
  404e54:	repz inc ecx
  404e57:	and    DWORD PTR [ebx],eax
  404e59:	add    al,0x96
  404e5b:	dec    ecx
  404e5c:	stos   DWORD PTR es:[edi],eax
  404e5d:	push   edx
  404e5e:	dec    DWORD PTR [ecx+0x3]
  404e61:	push   eax
  404e62:	test   eax,0xa1ff3796
  404e67:	fs xchg esi,eax
  404e69:	jne    0x404df9
  404e6b:	push   ecx
  404e6c:	and    esp,edx
  404e6e:	xchg   ecx,eax
  404e6f:	xor    al,0x2a
  404e71:	call   DWORD PTR [ebp+0x4bff0349]
  404e77:	in     eax,0x95
  404e79:	(bad)  
  404e7a:	jns    0x404ede
  404e7c:	push   ecx
  404e7d:	add    eax,DWORD PTR [esi-0x69d4169e]
  404e83:	pop    esi
  404e84:	jmp    0x80c9bc8c
  404e89:	add    al,0x96
  404e8b:	xchg   edx,eax
  404e8c:	(bad)  
  404e8d:	dec    edi
  404e8e:	repnz xor edi,DWORD PTR [esi-0x1e52b66b]
  404e95:	stos   DWORD PTR es:[edi],eax
  404e96:	jg     0x404ea6
  404e98:	scas   al,BYTE PTR es:[edi]
  404e99:	xchg   ebp,eax
  404e9a:	cs sbb eax,0x923195a4
  404ea0:	sahf   
  404ea1:	sldt   WORD PTR [eax]
	...
  404eb4:	sahf   
  404eb5:	dec    edx
  404eb6:	pushf  
  404eb7:	mov    cl,0x21
  404eb9:	xor    eax,DWORD PTR [ecx-0x79cce7cd]
  404ebf:	xchg   DWORD PTR [ebx],ebx
  404ec1:	call   0xb401:0x9209957e
  404ec8:	mov    al,0xa1
  404eca:	jmp    0x667e727a
  404ecf:	xchg   ebp,eax
  404ed0:	pop    ds
  404ed1:	fnsave [esp+edx*4+0x576a32e9]
  404ed8:	dec    edx
  404ed9:	xor    ecx,DWORD PTR [esi-0x6b]
  404edc:	xchg   esi,eax
  404edd:	scas   al,BYTE PTR es:[edi]
  404ede:	lods   al,BYTE PTR ds:[esi]
  404edf:	adc    BYTE PTR [ebx],0x9a
  404ee2:	ds xchg ebp,eax
  404ee4:	leave  
  404ee5:	dec    ebp
  404ee6:	mov    ebx,0x90dd14d7
  404eeb:	xchg   esp,eax
  404eec:	mov    ecx,0xeb94ed32
  404ef1:	cdq    
  404ef2:	push   ds
  404ef3:	xchg   ebp,eax
  404ef4:	test   eax,0xae0b9c32
  404ef9:	out    dx,eax
  404efa:	cmp    DWORD PTR [ebp+0x3c53de99],edx
  404f00:	xchg   ecx,eax
  404f01:	xor    bh,dh
  404f03:	(bad)  
  404f04:	push   DWORD PTR [ecx]
  404f06:	add    dh,dh
  404f08:	nop
  404f09:	pop    edx
  404f0a:	call   0xff729657
  404f0f:	out    0xe0,al
  404f11:	mov    bh,bh
  404f13:	fiadd  WORD PTR [edx]
  404f15:	xor    dh,BYTE PTR [ebp+0x3d]
	...
  404f27:	add    BYTE PTR [eax],al
  404f29:	add    BYTE PTR [ebx],cl
  404f2b:	xor    bh,bh
  404f2d:	into   
  404f2e:	mov    BYTE PTR [edx-0x18],bl
  404f31:	mov    eax,DWORD PTR [esi]
  404f33:	xor    bh,bh
  404f35:	rcl    BYTE PTR [ecx-0x65bcff44],cl
  404f3b:	xor    DWORD PTR [ebp-0x1f],esi
  404f3e:	in     eax,dx
  404f3f:	not    edx
  404f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f42:	or     dh,BYTE PTR [edx]
  404f44:	mov    ch,0x35
  404f46:	add    esi,DWORD PTR [edx]
  404f48:	inc    DWORD PTR [ecx-0x7100e712]
  404f4e:	add    bh,al
  404f50:	pop    ebx
  404f51:	xchg   BYTE PTR [edx],ch
  404f53:	xor    ch,al
  404f55:	mov    DWORD PTR [ebx],edi
  404f57:	xor    bh,bh
  404f59:	ret    0xbb3e
  404f5c:	sbb    al,0xbe
  404f5e:	push   esp
  404f5f:	(bad)  
  404f60:	call   0xa2cd36
  404f65:	jo     0x404fcf
  404f67:	jle    0x404f68
  404f69:	push   esi
  404f6a:	or     ah,dh
  404f6c:	mov    esp,0xff3202fd
  404f71:	jmp    0xf1a8a017
  404f76:	mov    dl,0xa2
  404f78:	add    BYTE PTR [esi],dh
  404f7a:	push   eax
  404f7b:	jle    0x404f7c
  404f7d:	and    bh,BYTE PTR cs:[ebx]
  404f80:	or     eax,0xb629551
  404f85:	sub    DWORD PTR [ecx-0x3a8372a4],ebx
  404f8b:	xor    bh,bh
  404f8d:	push   cs
	...
  404f9e:	add    BYTE PTR [eax],al
  404fa0:	addr16 xor eax,edx
  404fa3:	add    BYTE PTR [edx+ebx*2],bh
  404fa6:	(bad)  [ebp+0x7b]
  404fa9:	call   0xd5c88032
  404fae:	(bad)  
  404faf:	push   eax
  404fb0:	xchg   edi,eax
  404fb1:	sbb    BYTE PTR [edi+0x244f7f00],ah
  404fb7:	(bad)  
  404fb8:	repnz push ss
  404fba:	(bad)  
  404fbb:	dec    DWORD PTR [eax+0x76]
  404fbe:	push   DWORD PTR [ebp+0x77]
  404fc1:	int    0x44
  404fc3:	rcr    DWORD PTR [eax-0x2b],cl
  404fc6:	(bad)  
  404fc7:	jne    0x404fd4
  404fc9:	aad    0x74
  404fcb:	or     BYTE PTR [edi-0x21],dl
  404fce:	sar    bh,cl
  404fd0:	call   0xfe09ab49
  404fd5:	pop    ecx
  404fd6:	add    BYTE PTR [ebp-0x5c],dl
  404fd9:	add    al,BYTE PTR [ecx-0x132e83c]
  404fdf:	(bad)  
  404fe0:	mov    edx,0x1850fc9b
  404fe5:	dec    ebx
  404fe6:	or     al,0xff
  404fe8:	inc    edx
  404fe9:	aas    
  404fea:	sub    BYTE PTR [ecx-0x11],al
  404fed:	int3   
  404fee:	mov    ecx,0xb64efa8
  404ff3:	shr    al,0xd9
  404ff6:	out    0x0,al
  404ff8:	jmp    DWORD PTR [edi+eax*8+0x45]
  404ffc:	inc    edi
  404ffd:	data16 add BYTE PTR [eax],al
  405000:	out    dx,eax
  405001:	sbb    eax,DWORD PTR [ebp-0xc]
	...
  405014:	add    BYTE PTR [eax],al
  405016:	pop    eax
  405017:	pop    ebp
  405018:	add    BYTE PTR [eax],al
  40501a:	in     eax,0x64
  40501c:	push   0x0
  40501e:	cmp    bl,bl
  405020:	jmp    0x405019
  405022:	push   0xbf6a4fd5
  405027:	loope  0x40506d
  405029:	hlt    
  40502a:	out    dx,eax
  40502b:	loope  0x404fb1
  40502d:	hlt    
  40502e:	xchg   esi,eax
  40502f:	push   eax
  405030:	xchg   ebx,eax
  405031:	inc    DWORD PTR [esi+0x60]
  405034:	sbb    eax,edi
  405036:	xchg   ecx,eax
  405037:	scas   eax,DWORD PTR es:[edi]
  405038:	(bad)
  40503c:	add    al,0x0
  40503e:	lea    edi,[ecx+0x18]
  405041:	add    eax,0x4a76f
  405046:	xchg   esi,eax
  405047:	mov    esp,0x1161ec50
  40504c:	xchg   edx,eax
  40504d:	add    edx,ebp
  40504f:	inc    edi
  405050:	xchg   BYTE PTR [ebp-0x6de696],bh
  405056:	cdq    
  405057:	ins    DWORD PTR es:[edi],dx
  405058:	or     edi,edi
  40505a:	shl    DWORD PTR [ecx],cl
  40505c:	sahf   
  40505d:	mov    dh,0xae
  40505f:	fsub   st,st(1)
  405061:	inc    eax
  405062:	xchg   esi,eax
  405063:	mov    cs,WORD PTR [eax-0x6df6d60c]
  405069:	push   eax
  40506a:	ds mov esi,0x4496005b
  405070:	ret    
  405071:	je     0x40501a
  405073:	mov    cs,WORD PTR [eax-0x6e16f618]
  405079:	push   eax
	...
  40508a:	add    BYTE PTR [eax],al
  40508c:	sbb    eax,edi
  40508e:	xchg   edi,eax
  40508f:	test   DWORD PTR [ecx],0x83ff33b9
  405095:	or     eax,0x528c3592
  40509a:	inc    ebp
  40509b:	add    dh,bh
  40509d:	xchg   ecx,eax
  40509e:	stos   DWORD PTR es:[edi],eax
  40509f:	jmp    ecx
  4050a1:	inc    esp
  4050a2:	ret    
  4050a3:	je     0x4050ec
  4050a5:	ret    0xf088
  4050a8:	leave  
  4050a9:	test   al,0x92
  4050ab:	push   0xbea23997
  4050b0:	shr    esi,0xfa
  4050b3:	out    0x54,eax
  4050b5:	dec    ebx
  4050b6:	xchg   edx,eax
  4050b7:	call   DWORD PTR ds:0xa19f6463
  4050bd:	das    
  4050be:	push   ds
  4050bf:	add    al,0x2b
  4050c1:	pop    esi
  4050c2:	add    DWORD PTR [ebx],0xffffff99
  4050c5:	mov    ch,0xe1
  4050c7:	fwait
  4050c8:	rcl    DWORD PTR [esi+eax*1],0x92
  4050cc:	jge    0x40512a
  4050ce:	xchg   ebx,eax
  4050cf:	add    al,0x81
  4050d1:	mov    ch,0xe1
  4050d3:	fwait
  4050d4:	mov    ch,0x14
  4050d6:	out    dx,al
  4050d7:	xchg   ecx,eax
  4050d8:	jno    0x4050cf
  4050da:	rcr    BYTE PTR [ecx+0x57de2f69],1
  4050e0:	data16 aaa 
  4050e2:	(bad)  
  4050e3:	xchg   ecx,eax
  4050e4:	pop    ecx
  4050e5:	mov    ch,0xe1
  4050e7:	fist   DWORD PTR [esi+eax*8]
  4050eb:	xchg   ecx,eax
  4050ec:	dec    ecx
  4050ed:	cmc    
  4050ee:	mov    eax,0x99
	...
  4050ff:	add    BYTE PTR [eax],al
  405101:	add    BYTE PTR [ecx+0x2f],al
  405104:	ror    DWORD PTR ds:0x91ae2f63,0xdb
  40510b:	sub    dl,BYTE PTR [eax-0x61d0d724]
  405111:	xchg   ecx,eax
  405112:	stos   DWORD PTR es:[edi],eax
  405113:	cs add edi,0xbae961f1
  40511a:	aam    0x59
  40511c:	jmp    0x687e6e57
  405121:	enter  0x36fa,0x76
  405125:	xchg   ecx,eax
  405126:	or     esp,DWORD PTR [ebp-0x4b0ecb93]
  40512c:	cmc    
  40512d:	nop
  40512e:	mov    ds:0x9643104c,eax
  405133:	cmp    al,BYTE PTR [ebp-0x1d9d6997]
  405139:	ret    
  40513a:	mov    eax,ds:0x960299e5
  40513f:	bound  esp,QWORD PTR [esi]
  405141:	inc    edi
  405142:	mov    esi,0x95e90061
  405147:	(bad)  
  405148:	(bad)  
  405149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40514a:	or     DWORD PTR [edi],ebp
  40514c:	pop    es
  40514d:	jmp    0x93410de7
  405152:	xchg   ebp,eax
  405153:	mov    esp,0xdd958300
  405158:	inc    esp
  405159:	adc    eax,0xfd84dfca
  40515e:	cs call FWORD PTR cs:[ecx-0x90747da]
	...
  405176:	add    BYTE PTR [eax],al
  405178:	mov    al,ds:0xfe6fe82e
  40517d:	bound  eax,QWORD PTR [eax]
  40517f:	repnz push ebp
  405181:	mov    bh,0x5
  405183:	rcr    BYTE PTR [edi+0x63],1
  405186:	add    cl,ch
  405188:	jge    0x405163
  40518a:	daa    
  40518b:	sub    BYTE PTR [edx+0x2df5752d],bl
  405191:	add    al,0xd8
  405193:	mov    esi,0x998b9326
  405198:	mov    eax,0x6b6f3e7
  40519d:	cs push eax
  40519f:	cmp    ecx,DWORD PTR [edx]
  4051a1:	aam    0xd7
  4051a3:	sahf   
  4051a4:	push   es
  4051a5:	fadd   QWORD PTR [ecx+ebx*4-0x7e00d202]
  4051ac:	ds pop ss
  4051ae:	inc    DWORD PTR [esi-0x4e979d55]
  4051b4:	mul    BYTE PTR [edx+0x32607600]
  4051ba:	imul   DWORD PTR [esi+0x6]
  4051bd:	cs xor eax,0xa2cd03
  4051c3:	push   ecx
  4051c4:	cs push ss
  4051c6:	call   DWORD PTR [esi+0x5c]
  4051c9:	out    0xe3,eax
  4051cb:	push   esi
  4051cc:	es cs push 0x0
  4051d0:	mov    edi,0xee2fd149
  4051d5:	popa   
  4051d6:	push   DWORD PTR [ebp-0x13581]
	...
  4051ec:	add    BYTE PTR [eax],al
  4051ee:	adc    BYTE PTR [ecx+ebx*1],0x29
  4051f2:	(bad)  
  4051f3:	popa   
  4051f4:	call   0xff12bac2
  4051f9:	mov    DWORD PTR [edx],ebp
  4051fb:	int    0xf6
  4051fd:	jmp    DWORD PTR [eax-0x4a97ffb1]
  405203:	inc    edx
  405204:	inc    eax
  405205:	add    BYTE PTR [eax-0x7f080f69],al
  40520b:	(bad)  
  40520d:	xor    eax,0x400845
  405212:	inc    edi
  405213:	mov    edi,edx
  405215:	inc    DWORD PTR [eax-0x51]
  405218:	test   eax,ebp
  40521a:	cmp    ch,bl
  40521c:	inc    BYTE PTR [ebx-0x905de]
  405222:	push   eax
  405223:	data16 je 0x40526f
  405226:	lods   al,BYTE PTR ds:[esi]
  405227:	xchg   ebx,eax
  405228:	in     al,dx
  405229:	test   DWORD PTR [eax],0x7f73ffdd
  40522f:	loope  0x4051ed
  405231:	call   0x13f2f3e
  405236:	mov    edx,DWORD PTR ds:0xcc2f0067
  40523c:	mov    ebp,0xe72eaaff
  405241:	out    dx,al
  405242:	das    
  405243:	(bad)  
  405245:	dec    edx
  405247:	add    dh,bh
  405249:	inc    DWORD PTR [eax+0x170874dd]
  40524f:	mov    al,ds:0xffd1
	...
  405264:	jo     0x405243
  405266:	mov    ah,0xe8
  405268:	dec    eax
  405269:	(bad)  
  40526b:	call   DWORD PTR [esi-0x751804f2]
  405271:	push   0xffffff8f
  405273:	dec    ecx
  405275:	lods   eax,DWORD PTR ds:[esi]
  405276:	test   al,0xf7
  405278:	shr    DWORD PTR [ebx-0x71],0x75
  40527c:	mov    fs,WORD PTR [ebx+0x7bb1d0e6]
  405282:	(bad)  
  405283:	mov    ch,0xb2
  405285:	dec    ebx
  405286:	(bad)  
  405287:	jmp    FWORD PTR [esi-0x660048f6]
  40528d:	push   ebx
  40528e:	pop    ecx
  40528f:	in     al,dx
  405290:	mov    DWORD PTR [ebp-0x71],ebx
  405293:	call   0xffcfa04b
  405298:	xor    DWORD PTR [edi-0x64],0x9b3579f7
  40529f:	sbb    cl,BYTE PTR [edx+0x3d]
  4052a2:	mov    ?,edi
  4052a4:	and    ecx,DWORD PTR [edx]
  4052a6:	xchg   esi,eax
  4052a7:	jmp    DWORD PTR [ecx+0xd]
  4052aa:	sbb    BYTE PTR [eax],cl
  4052ac:	outs   dx,BYTE PTR ds:[esi]
  4052ad:	fisttp WORD PTR [edi+edi*8-0xfa7e2af]
  4052b4:	inc    ecx
  4052b5:	and    eax,0xd597e88e
  4052ba:	(bad)  
  4052bb:	(bad)  
  4052bc:	cmp    DWORD PTR [edi-0x74],edi
  4052bf:	jmp    0xffce4eb6
  4052c4:	sub    DWORD PTR [edi-0x70],ecx
  4052c7:	call   0x4052cc
	...
  4052d8:	add    BYTE PTR [eax],al
  4052da:	int    0xa3
  4052dc:	add    eax,DWORD PTR [eax]
  4052de:	dec    edi
  4052df:	clc    
  4052e0:	cli    
  4052e1:	jmp    FWORD PTR [edx-0x40]
  4052e4:	lahf   
  4052e5:	adc    edx,0xffffffe5
  4052e8:	sbb    BYTE PTR [eax],al
  4052ea:	ins    BYTE PTR es:[edi],dx
  4052eb:	cmp    cl,BYTE PTR [esi-0xe1e718b]
  4052f1:	shl    cl,1
  4052f3:	mov    esp,0x62ea457c
  4052f8:	ror    ebx,1
  4052fa:	mov    al,0xa1
  4052fc:	jmp    0x419ab68f
  405301:	daa    
  405302:	shr    BYTE PTR [ebx],1
  405304:	dec    esi
  405305:	sbb    esp,DWORD PTR [ecx+0x7b]
  405308:	test   al,0x3
  40530a:	shl    DWORD PTR [ebp+0x2c619bf1],0x36
  405311:	mov    ?,WORD PTR [esi]
  405313:	mov    bl,0xfe
  405315:	inc    esp
  405316:	xchg   esi,eax
  405317:	sub    ebx,DWORD PTR [ebx+edi*8-0x71e39147]
  40531e:	cdq    
  40531f:	mov    edx,0x62d6de76
  405324:	push   cs
  405325:	sbb    BYTE PTR [esi-0x7e6f29c6],bl
  40532b:	sub    edi,esi
  40532d:	pop    ss
  40532e:	jp     0x40535b
  405330:	jl     0x40532d
  405332:	jns    0x405387
  405334:	sbb    BYTE PTR [esi+0x8ab1969],cl
  40533a:	xchg   esi,eax
  40533b:	xchg   ebp,eax
  40533c:	jb     0x4052de
	...
  40534e:	add    BYTE PTR [eax],al
  405350:	out    dx,al
  405351:	(bad)  
  405352:	jmp    0x546b63f3
  405357:	add    BYTE PTR [ecx-0x4b],cl
  40535a:	icebp  
  40535b:	fwait
  40535c:	mov    dl,0x35
  40535e:	mov    esi,0xe1204f8d
  405363:	add    ecx,ebx
  405365:	xlat   BYTE PTR ds:[ebx]
  405366:	mov    esp,0xe95eab81
  40536b:	cld    
  40536c:	adc    eax,0x9603e880
  405371:	sub    ebx,DWORD PTR [eax+eax*1]
  405374:	inc    BYTE PTR [edi+0x57098daf]
  40537a:	test   eax,0x72baa617
  40537f:	fcom   QWORD PTR [esi+0x62]
  405382:	add    BYTE PTR [esi-0x77],dh
  405385:	pop    esi
  405386:	call   0xff6b76ad
  40538b:	jo     0x4053e6
  40538d:	pop    esi
  40538e:	push   0xffffffe9
  405390:	jge    0x4053f8
  405392:	xor    BYTE PTR [eax+0x190fba95],ch
  405398:	push   ebp
  405399:	(bad)  
  40539a:	(bad)  
  40539b:	cld    
  40539c:	scas   eax,DWORD PTR es:[edi]
  40539d:	jns    0x4053e0
  40539f:	jmp    0x3716e7c1
  4053a4:	and    edx,DWORD PTR [edi-0x40]
  4053a7:	mov    ch,0xbb
  4053a9:	call   0x2ee8:0x5e892650
  4053b0:	loopne 0x4053dc
  4053b2:	(bad)  
  4053b3:	mov    ecx,0x0
	...
  4053c4:	add    BYTE PTR [eax],al
  4053c6:	lds    ebp,FWORD PTR [ecx]
  4053c8:	jne    0x4053ab
  4053ca:	sub    eax,0x1306fed4
  4053cf:	cmp    esp,DWORD PTR [ecx]
  4053d1:	sbb    cl,BYTE PTR [ebx]
  4053d3:	sub    ch,al
  4053d5:	aad    0x26
  4053d7:	sub    bh,bh
  4053d9:	adc    DWORD PTR [ebp-0x2ae6fb46],0x62
  4053e0:	push   0xa345ee
  4053e5:	inc    ecx
  4053e6:	xchg   esp,eax
  4053e7:	bound  eax,QWORD PTR [eax]
  4053e9:	imul   ebp,DWORD PTR ds:0x12c6d649,0x2835c05e
  4053f3:	call   0x56e8:0x5688b650
  4053fa:	jecxz  0x405425
  4053fc:	(bad)  
  4053fd:	cmp    DWORD PTR [edx+0x29],ebp
  405400:	jne    0x4053f3
  405402:	std    
  405403:	mov    edi,edi
  405405:	xchg   esi,eax
  405406:	and    bh,BYTE PTR [ebx]
  405408:	jmp    0xe86a6ec8
  40540d:	add    BYTE PTR [ebx],dl
  40540f:	hlt    
  405410:	(bad)  
  405411:	jmp    DWORD PTR [ebp+0x2f04685e]
  405417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405418:	add    BYTE PTR [eax+0x2d],ch
  40541b:	push   ss
  40541c:	inc    eax
  40541d:	add    BYTE PTR [eax+0x10],bh
  405420:	sbb    DWORD PTR [ecx],ebp
  405422:	cs callw 0xe70c
  405427:	(bad)  
  405428:	dec    BYTE PTR [ebx]
	...
  40543a:	add    BYTE PTR [eax],al
  40543c:	jg     0x40548f
  40543e:	push   ds
  40543f:	push   eax
  405440:	pop    ds
  405441:	xlat   BYTE PTR ds:[ebx]
  405442:	je     0x405450
  405444:	addr16 ja 0x40541d
  405447:	jmp    FWORD PTR [eax+0x75]
  40544a:	push   eax
  40544b:	jmp    edx
  40544d:	sub    eax,0xd67820e7
  405452:	(bad)  
  405453:	call   0x3f4797
  405458:	xchg   edi,eax
  405459:	mov    dl,dl
  40545b:	call   FWORD PTR [eax+0x7368004b]
  405461:	adc    eax,0x13270040
  405466:	das    
  405467:	inc    ecx
  405468:	jg     0x4054b7
  40546a:	add    al,BYTE PTR [eax]
  40546c:	jg     0x405453
  40546e:	out    0xad,eax
  405470:	and    bl,ch
  405472:	dec    BYTE PTR [ebx]
  405474:	das    
  405475:	push   edx
  405476:	push   ds
  405477:	push   eax
  405478:	(bad)  
  405479:	fnsave [esp+ecx*1+0x57]
  40547d:	inc    esp
  40547e:	aad    0xff
  405480:	pop    eax
  405481:	outs   dx,BYTE PTR ds:[esi]
  405482:	push   eax
  405483:	inc    DWORD PTR [edx-0x161718da]
  405489:	fdiv   st(6),st
  40548b:	call   0x3f44f7
  405490:	pop    es
  405491:	push   ecx
  405492:	sar    bh,cl
  405494:	clc    
  405495:	inc    ebp
  405496:	in     al,0x2f
  405498:	xchg   esi,eax
  405499:	jp     0x40549f
  40549b:	inc    DWORD PTR [ebx+0x59b07]
	...
  4054b1:	add    al,ch
  4054b3:	fisttp WORD PTR [edx+0x11a86650]
  4054b9:	or     dh,bh
  4054bb:	test   DWORD PTR [ecx+0x32e2e9ff],0x8bbfe1d2
  4054c5:	jne    0x405451
  4054c7:	xchg   ebx,eax
  4054c8:	cmp    edx,edx
  4054ca:	ror    DWORD PTR [edi+0x3b9ec2bd],1
  4054d0:	xor    BYTE PTR [ebx-0xb3f444e],cl
  4054d6:	sub    al,0x3b
  4054d8:	sbb    eax,0xfae5b102
  4054dd:	out    0x27,eax
  4054df:	dec    eax
  4054e0:	mov    edi,edi
  4054e2:	psadbw mm0,QWORD PTR [esi+0x33a9368]
  4054e9:	add    BYTE PTR [esi-0x3],bh
  4054ec:	mov    ah,0xff
  4054ee:	mov    ebx,eax
  4054f0:	inc    ecx
  4054f1:	clc    
  4054f2:	out    dx,al
  4054f3:	xor    eax,0x28960004
  4054f8:	adc    al,bh
  4054fa:	jle    0x40547e
  4054fc:	add    BYTE PTR [bp-0x3cbc],dl
  405501:	je     0x40548d
  405503:	jle    0x405505
  405505:	add    DWORD PTR [esi+0x510d1239],edx
  40550b:	xchg   DWORD PTR [edi+edi*8-0x7764be3d],ecx
  405512:	inc    eax
  405513:	and    DWORD PTR [edx+0xeb],ecx
	...
  405525:	add    BYTE PTR [eax],al
  405527:	add    BYTE PTR [esi+0x3ef80fe8],cl
  40552d:	out    dx,al
  40552e:	mov    bl,0xff
  405530:	sub    DWORD PTR [esp+ebx*8-0x409d2519],esp
  405537:	mov    bl,BYTE PTR [ecx]
  405539:	xchg   ebx,eax
  40553a:	sahf   
  40553b:	adc    BYTE PTR [esi+0x98a073a],bl
  405541:	sub    BYTE PTR [ebx],al
  405543:	out    dx,al
  405544:	stc    
  405545:	outs   dx,BYTE PTR ds:[esi]
  405546:	lahf   
  405547:	mov    bh,cl
  405549:	pop    ebx
  40554a:	test   eax,0x79ba8a0f
  40554f:	ficom  DWORD PTR [esi+0x62]
  405552:	sbb    DWORD PTR [edi+ecx*8+0x468a660d],ebx
  405559:	daa    
  40555a:	aam    0xfb
  40555c:	mov    ecx,0xc98a5797
  405561:	mov    esp,0x10ab9c0a
  405566:	inc    esi
  405567:	mov    cl,BYTE PTR [ebp+0x39efb522]
  40556d:	xor    al,BYTE PTR [esi]
  40556f:	inc    ebp
  405570:	xchg   esi,eax
  405571:	xchg   edx,eax
  405572:	inc    ecx
  405573:	pop    ebp
  405574:	retf   
  405575:	daa    
  405576:	xor    ebx,DWORD PTR es:[ecx-0x39640e53]
  40557d:	sub    BYTE PTR [esi],dl
  40557f:	mov    bh,ah
  405581:	inc    esi
  405582:	add    DWORD PTR [ecx-0x1f9d895],edx
  405588:	cmp    DWORD PTR [esi+0x1bd5],ebp
	...
  40559e:	data16 ja 0x405549
  4055a1:	add    eax,esi
  4055a3:	cmp    ah,BYTE PTR [edx-0x50]
  4055a6:	popa   
  4055a7:	daa    
  4055a8:	cmp    DWORD PTR [ecx-0xc2ea51d],ecx
  4055ae:	push   ebx
  4055af:	daa    
  4055b0:	(bad)  
  4055b1:	push   ds
  4055b2:	xchg   esi,eax
  4055b3:	mov    edx,0x62d6d9d0
  4055b8:	push   ecx
  4055b9:	stc    
  4055ba:	imul   esp,DWORD PTR [ecx+0x4c6b88e9],0x62d50000
  4055c4:	call   0xff673c22
  4055c9:	cmp    DWORD PTR [edi],ecx
  4055cb:	lods   eax,DWORD PTR ds:[esi]
  4055cc:	or     BYTE PTR [ecx-0x6900dadb],dl
  4055d2:	test   al,0x62
  4055d4:	push   0xa1e5e5
  4055d9:	adc    edi,edi
  4055db:	jbe    0x40561e
  4055dd:	jmp    0xc05ac300
  4055e2:	push   esp
  4055e3:	(bad)  
  4055e4:	call   0xff6787e2
  4055e9:	repnz aad 0xad
  4055ec:	push   ss
  4055ed:	jo     0x405580
  4055ef:	cs (bad) 
  4055f1:	fcomp  QWORD PTR [ecx]
  4055f3:	daa    
  4055f4:	jne    0x4055d7
  4055f6:	sbb    eax,0xf46fcf1
  4055fb:	daa    
  4055fc:	jne    0x405633
  4055fe:	adc    ch,BYTE PTR [eax-0x2f]
  405601:	add    BYTE PTR ss:[eax],al
	...
  405614:	pop    ds
  405615:	mov    esp,0x770cc100
  40561a:	inc    ecx
  40561b:	jmp    0xa870ca9d
  405620:	xchg   ebp,eax
  405621:	and    eax,0xa36cf335
  405626:	add    BYTE PTR [ecx],al
  405628:	dec    edi
  405629:	adc    bh,bh
  40562b:	push   es
  40562c:	ret    0x7525
  40562f:	icebp  
  405630:	or     eax,0x1ef6fd03
  405635:	mov    ecx,0x76618100
  40563a:	inc    ecx
  40563b:	jmp    0x2870c6bd
  405640:	call   0xa3:0x6cf33525
  405647:	shr    DWORD PTR [esi],0x12
  40564a:	inc    DWORD PTR [eax]
  40564c:	push   eax
  40564d:	daa    
  40564e:	mov    edi,0x45a94974
  405653:	hlt    
  405654:	loopne 0x4056aa
  405656:	hlt    
  405657:	jmp    FWORD PTR [edx+0x26]
  40565a:	out    0x60,eax
  40565c:	repnz (bad) 
  40565f:	jmp    FWORD PTR [edx+0x4fede7d2]
  405665:	(bad)  
  405667:	push   0xffffffef
  405669:	dec    ecx
  40566a:	stc    
  40566b:	das    
  40566c:	scas   al,BYTE PTR es:[edi]
  40566d:	pop    esi
  40566e:	push   0xa12f0f
  405673:	push   0x800061fd
	...
  405688:	add    BYTE PTR [eax],al
  40568a:	pop    ss
  40568b:	retf   
  40568c:	sar    bh,cl
  40568e:	jo     0x405701
  405690:	push   DWORD PTR [ebp-0x39]
  405693:	leave  
  405694:	dec    edi
  405695:	std    
  405696:	pusha  
  405697:	fisubr DWORD PTR [ecx+0x0]
  40569a:	xlat   BYTE PTR ds:[ebx]
  40569b:	and    eax,0x49af412f
  4056a0:	wrmsr  
  4056a2:	(bad)  
  4056a3:	popa   
  4056a4:	push   0x8061bf02
  4056a9:	call   0x3f452d
  4056ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056af:	and    DWORD PTR [esi+edx*1+0x6],esi
  4056b3:	gs hlt 
  4056b5:	jmp    FWORD PTR [edx]
  4056b7:	aad    0xfe
  4056b9:	jne    0x405732
  4056bb:	leave  
  4056bc:	adc    ch,bh
  4056be:	nop
  4056bf:	(bad)  
  4056c1:	jne    0x40572e
  4056c3:	enter  0xd09d,0x60
  4056c7:	(bad)  [ecx+0x0]
  4056ca:	pop    ss
  4056cb:	fsubr  DWORD PTR [esi]
  4056cd:	inc    ecx
  4056ce:	outs   dx,DWORD PTR ds:[esi]
  4056cf:	dec    ecx
  4056d0:	xor    dh,BYTE PTR [eax]
  4056d2:	jle    0x405732
  4056d4:	push   0x33b9602
  4056d9:	sub    BYTE PTR [esi],0xdb
  4056dc:	mov    dl,0xff
  4056de:	cmp    DWORD PTR [ebx-0x79],ecx
  4056e1:	jne    0x405681
  4056e3:	adc    eax,DWORD PTR ds:0x19ec29fd
  4056e9:	add    BYTE PTR [esi+0x40d33f],ch
	...
  4056ff:	add    BYTE PTR [esi+0x572fd253],dl
  405705:	cmp    ebx,DWORD PTR [ebx]
  405707:	add    dl,BYTE PTR [esi+0x17e8833b]
  40570d:	call   0xfbce5698
  405712:	movhps xmm3,QWORD PTR [edi]
  405715:	jle    0x4056a7
  405717:	jmp    DWORD PTR [ebx-0x59]
  40571a:	xchg   DWORD PTR [ebp-0x72],esi
  40571d:	jecxz  0x4056e0
  40571f:	cld    
  405720:	fnstcw WORD PTR [ebx-0x6d358a79]
  405726:	aaa    
  405727:	ror    cl,1
  405729:	mov    eax,DWORD PTR [edi+0x1193c275]
  40572f:	or     BYTE PTR [esi-0x4e004688],ch
  405735:	jno    0x4056f9
  405737:	add    al,0x96
  405739:	(bad)  
  40573a:	jns    0x405728
  40573c:	cmp    eax,DWORD PTR cs:[ebx]
  40573f:	out    dx,eax
  405740:	fdivr  DWORD PTR [ebx+0x11]
  405743:	or     al,0x91
  405745:	iret   
  405746:	cli    
  405747:	out    0xa1,eax
  405749:	inc    edi
  40574a:	xchg   edi,edi
  40574c:	dec    edi
  40574d:	js     0x40574b
  40574f:	jmp    edx
  405751:	mov    al,0x98
  405753:	sbb    DWORD PTR [edx+0x6e],0x7569ff86
  40575a:	cmp    DWORD PTR [eax+0x863560],0x3e96296
	...
  405774:	add    BYTE PTR [eax],al
  405776:	sbb    eax,0x9faed9e
  40577b:	scas   eax,DWORD PTR es:[edi]
  40577c:	in     al,dx
  40577d:	cmp    DWORD PTR [esi+0x62],0x54
  405781:	add    DWORD PTR [edi],ebp
  405783:	mov    ch,al
  405785:	add    edx,DWORD PTR [esi+0x31f83423]
  40578b:	xor    eax,0x58218693
  405790:	test   eax,0x25ba8910
  405795:	fcom   DWORD PTR [esi+0x62]
  405798:	sahf   
  405799:	adc    BYTE PTR [edx+0x1b2623a],bl
  40579f:	and    al,0x82
  4057a1:	clc    
  4057a2:	jno    0x405785
  4057a4:	aam    0x44
  4057a6:	xchg   esi,eax
  4057a7:	and    esi,esp
  4057a9:	div    ecx
  4057ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ac:	call   0xd84b:0x63d9e186
  4057b3:	and    esp,DWORD PTR [esi+0x1b]
  4057b6:	nop
  4057b7:	popa   
  4057b8:	jmp    0x2b1e72c0
  4057bd:	test   ecx,eax
  4057bf:	and    edi,DWORD PTR [ecx+0x4613c29b]
  4057c5:	xchg   BYTE PTR [ebx],ah
  4057c7:	fisubr WORD PTR [edx]
  4057c9:	test   DWORD PTR [ecx-0x147966dd],ebp
  4057cf:	jmp    0x64d9:0x3a99862e
  4057d6:	xchg   esi,eax
  4057d7:	bound  esi,QWORD PTR [eax-0x80]
	...
  4057ea:	add    BYTE PTR [eax],al
  4057ec:	dec    edx
  4057ed:	and    al,0x16
  4057ef:	xchg   dh,dl
  4057f1:	push   ebx
  4057f2:	mov    dl,BYTE PTR gs:[esi+0xb78e962]
  4057f9:	and    bh,bh
  4057fb:	test   DWORD PTR [ecx+0x2b],ebp
  4057fe:	add    bl,ch
  405800:	gs and edi,edi
  405803:	jmp    0x2bce1591
  405808:	outs   dx,BYTE PTR ds:[esi]
  405809:	xchg   ebx,eax
  40580a:	push   0xa26e56
  40580f:	ror    DWORD PTR [ecx+0x2],0x0
  405813:	jmp    0xecb53b56
  405818:	or     al,0xf1
  40581a:	(bad)  
  40581b:	call   0xabd52db5
  405820:	sbb    BYTE PTR [ebx],ah
  405822:	call   FWORD PTR [esp+edx*8+0x76]
  405826:	push   eax
  405827:	adc    DWORD PTR [ebp+0x2de94176],ebx
  40582d:	xor    ah,BYTE PTR [eax-0x3fa86a17]
  405833:	adc    al,0xf9
  405835:	cmp    DWORD PTR [ecx+ebp*8+0x72686295],edx
  40583c:	retf   0xa1
  40583f:	jbe    0x4057d2
  405841:	push   esi
  405842:	call   0xff637cbd
  405847:	je     0x40588a
  405849:	and    dh,bh
  40584b:	pop    esi
  40584c:	adc    edx,ebp
  40584e:	push   ecx
  40584f:	add    eax,0x0
	...
  405860:	add    BYTE PTR [eax],al
  405862:	test   BYTE PTR [edx+0x230712e8],dl
  405868:	call   FWORD PTR [ecx-0x66ef52e6]
  40586e:	adc    ch,BYTE PTR [ebp+0x23a44108]
  405874:	jmp    FWORD PTR [esi]
  405876:	cli    
  405877:	imul   ecx,edi,0x26
  40587a:	sbb    ecx,DWORD PTR [esi]
  40587c:	arpl   WORD PTR [esp+edx*8+0x4e],bp
  405880:	mov    DWORD PTR [esi+eiz*8+0x20],ebp
  405884:	dec    DWORD PTR [esi]
  405886:	call   0xff66:0x3e0030a0
  40588d:	mov    ch,0xa3
  40588f:	call   0xafd85892
  405894:	mov    eax,ds:0xbf1b6f00
  405899:	je     0x40581c
  40589b:	jle    0x405828
  40589d:	sub    BYTE PTR [esi+0x66],bh
  4058a0:	push   DWORD PTR [ebp+0x3b]
  4058a3:	(bad)  
  4058a4:	test   al,0xd2
  4058a6:	dec    eax
  4058a7:	out    0xfe,eax
  4058a9:	mov    ch,0xb3
  4058ab:	out    0xfe,eax
  4058ad:	dec    DWORD PTR [edi-0x172d0f02]
  4058b3:	out    0x4f,al
  4058b5:	push   eax
  4058b6:	lods   al,BYTE PTR ds:[esi]
  4058b7:	push   0x19b30010
  4058bc:	addr16 pop ebp
  4058be:	out    dx,eax
  4058bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c0:	add    BYTE PTR [eax+0x17],dl
  4058c3:	lahf   
  4058c4:	mov    eax,ds:0x0
	...
  4058d5:	add    BYTE PTR [eax],al
  4058d7:	add    bh,ch
  4058d9:	cli    
  4058da:	add    al,0xb8
  4058dc:	(bad)  
  4058dd:	add    BYTE PTR gs:[eax],al
  4058e0:	mov    ch,0x1b
  4058e2:	mov    edi,0xff53f674
  4058e7:	jne    0x4058e0
  4058e9:	std    
  4058ea:	xchg   ebp,eax
  4058eb:	(bad)  
  4058ec:	cmp    dh,ah
  4058ee:	out    0xd1,eax
  4058f0:	jns    0x4058d8
  4058f2:	dec    BYTE PTR [ebp-0x1dcce]
  4058f8:	dec    eax
  4058f9:	push   ebp
  4058fa:	push   DWORD PTR [ebp-0x117e5]
  405900:	inc    edi
  405901:	pop    esi
  405902:	mov    al,ds:0xc0a0af00
  405907:	rdmsr  
  405909:	adc    eax,0xe6b8fffe
  40590e:	mov    ah,0xbc
  405910:	test   eax,0x96e8fee6
  405915:	xor    eax,0x70960063
  40591a:	dec    esi
  40591b:	mov    eax,0xe8846870
  405920:	aaa    
  405921:	push   ecx
  405922:	test   bh,bh
  405924:	dec    edi
  405925:	dec    ebp
  405926:	idiv   edi
  405928:	ret    0x9784
  40592b:	sbb    DWORD PTR [edx+0x7],0x4b
  40592f:	inc    ebp
  405930:	dec    edx
  405931:	or     eax,DWORD PTR [ebx]
  405933:	add    BYTE PTR [esi+0x2e0bf938],dl
  405939:	fcom   DWORD PTR [ebp-0x1]
	...
  40594c:	add    BYTE PTR [eax],al
  40594e:	xor    DWORD PTR [ebx+eax*2],edx
  405951:	je     0x4058df
  405953:	xchg   edx,eax
  405954:	leave  
  405955:	sti    
  405956:	and    DWORD PTR [esi+0x14],ebx
  405959:	jmp    DWORD PTR [ebx-0x1bea9431]
  40595f:	mov    DWORD PTR [edx-0x7f89f6b0],0x82c973e8
  405969:	dec    DWORD PTR [ecx]
  40596b:	inc    esi
  40596c:	sub    BYTE PTR [edx-0x69],0xe8
  405970:	clc    
  405971:	sti    
  405972:	jmp    0xab28648c
  405977:	cdq    
  405978:	cmp    edi,0xffffffd9
  40597b:	adc    eax,0x596be87f
  405980:	cmp    edi,0xffffffdf
  405983:	dec    esp
  405984:	adc    BYTE PTR [eax],al
  405986:	imul   eax,DWORD PTR [eax+esi*2-0x7d452d7f],0xffffffff
  40598e:	mov    cl,0x34
  405990:	add    ebp,DWORD PTR [edx-0x6b]
  405993:	pusha  
  405994:	stc    
  405995:	pop    es
  405996:	scas   al,BYTE PTR es:[edi]
  405997:	fimul  WORD PTR [ebp-0x1]
  40599a:	cdq    
  40599b:	or     ecx,0xed62fefb
  4059a1:	add    al,0x96
  4059a3:	bound  ebp,QWORD PTR [ecx+ecx*4-0x77]
  4059a7:	and    DWORD PTR [esi],edx
  4059a9:	and    esi,0xa
  4059ac:	xor    eax,0xf26296a3
  4059b1:	inc    ebx
	...
  4059c2:	add    BYTE PTR [eax],al
  4059c4:	cdq    
  4059c5:	out    0x49,al
  4059c7:	add    al,0x96
  4059c9:	bound  esi,QWORD PTR [edi+eax*1+0x12e96297]
  4059d0:	sbb    ebx,edi
  4059d2:	call   0x54caefda
  4059d7:	xor    al,0xd7
  4059d9:	bound  esp,QWORD PTR [eax+ecx*4+0x41]
  4059dd:	and    esi,ecx
  4059df:	add    dh,0xa
  4059e2:	mov    dl,BYTE PTR [ecx+ebp*1+0x20]
  4059e6:	jo     0x405970
  4059e8:	and    DWORD PTR es:[esi-0x4729e67e],esi
  4059ef:	adc    DWORD PTR [ecx],0x97081120
  4059f5:	(bad)  
  4059f6:	jmp    0x9758758b
  4059fb:	cmp    cl,0xb2
  4059fe:	add    DWORD PTR [ecx-0x14165e42],edx
  405a04:	pop    ds
  405a05:	push   ebx
  405a06:	sub    BYTE PTR [esi+ebp*2],al
  405a09:	jecxz  0x4059c3
  405a0b:	(bad)  
  405a0c:	fld    DWORD PTR [edi]
  405a0e:	arpl   WORD PTR [edx+0x43f26296],sp
  405a14:	inc    edx
  405a15:	jno    0x4059ea
  405a17:	add    edx,DWORD PTR [ebx]
  405a19:	out    0x5d,al
  405a1b:	cmp    DWORD PTR [ecx+0x2b82b91f],0xab9d516a
  405a25:	pop    ds
  405a26:	add    BYTE PTR ds:[eax],0x0
	...
  405a3a:	jmp    0x405a4e
  405a3c:	add    BYTE PTR [edi],dh
  405a3e:	adc    al,0x20
  405a40:	push   0x629ae5
  405a45:	je     0x405a65
  405a47:	pop    ss
  405a48:	(bad)  
  405a49:	push   ds
  405a4a:	adc    al,0xb2
  405a4c:	push   0xa1ad64
  405a51:	add    DWORD PTR [edi],0x7de94152
  405a57:	in     al,0x2f
  405a59:	test   al,0x95
  405a5b:	or     cl,BYTE PTR [edi+0x56]
  405a5e:	xchg   ebp,eax
  405a5f:	bound  ecx,QWORD PTR [ebx]
  405a61:	sub    DWORD PTR [ecx+0x72],ecx
  405a64:	push   0xffffffe9
  405a66:	sbb    ch,ah
  405a68:	neg    bh
  405a6a:	pop    ss
  405a6b:	pop    ds
  405a6c:	push   eax
  405a6d:	(bad)  
  405a6e:	inc    ecx
  405a6f:	addr16 call 0xff600ba3
  405a75:	(bad)  
  405a76:	loope  0x405a89
  405a78:	(bad)  
  405a79:	mov    esi,0xa47d0a17
  405a7e:	pop    ss
  405a7f:	pop    ds
  405a80:	push   0x2
  405a82:	and    BYTE PTR ds:0x6b17a6d1,0xc0
  405a89:	adc    eax,0xd9648ab6
  405a8e:	aam    0x1e
  405a90:	dec    edi
  405a91:	adc    eax,0xc286ff31
  405a97:	mov    BYTE PTR [eax],al
  405a99:	sbb    DWORD PTR [edi],edx
  405a9b:	xchg   ebp,eax
  405a9c:	or     BYTE PTR [ecx+0x0],al
	...
  405aae:	add    BYTE PTR [eax],al
  405ab0:	mov    al,ds:0x426eff1d
  405ab5:	mov    eax,0x8a1766cd
  405aba:	push   ebx
  405abb:	sbb    ebp,edx
  405abd:	push   ds
  405abe:	imul   esi,ebx,0x41089516
  405ac4:	add    BYTE PTR [eax],ah
  405ac6:	inc    DWORD PTR [eax]
  405ac8:	push   eax
  405ac9:	push   cs
  405aca:	push   edx
  405acb:	xor    dh,ch
  405acd:	bound  ebp,QWORD PTR [edx+0x23]
  405ad0:	pusha  
  405ad1:	pop    ss
  405ad2:	pop    es
  405ad3:	call   0x3f3bbc
  405ad8:	daa    
  405ad9:	aaa    
  405ada:	das    
  405adb:	inc    ecx
  405adc:	outs   dx,DWORD PTR ds:[esi]
  405add:	adc    BYTE PTR [ebx],bl
  405adf:	call   FWORD PTR [edx]
  405ae1:	push   0xffffffe8
  405ae3:	mov    WORD PTR [ecx-0x1500011d],fs
  405ae9:	popf   
  405aea:	push   DWORD PTR [ebp+0x67]
  405aed:	mov    bl,BYTE PTR [edx+ecx*8-0x3d371ca0]
  405af4:	cmp    esp,DWORD PTR [edx+0x55]
  405af7:	mov    esp,DWORD PTR [ebx+0xa]
  405afa:	(bad)  
  405afb:	call   DWORD PTR [eax+0x24]
  405afe:	push   DWORD PTR [ebp+0x33]
  405b01:	jecxz  0x405b77
  405b03:	or     BYTE PTR [edi-0x6f],dl
  405b06:	out    dx,al
  405b07:	call   DWORD PTR [eax-0x57]
  405b0a:	ret    0x2f08
  405b0d:	xor    eax,0xa5acec8a
  405b12:	clc    
  405b13:	mov    DWORD PTR [eax],0x0
	...
  405b25:	add    BYTE PTR [edx-0x1e],bh
  405b2b:	popa   
  405b2c:	lea    eax,[ebp+0x23]
  405b2f:	xor    ah,BYTE PTR [edi-0x63]
  405b32:	fbld   TBYTE PTR [eax]
  405b34:	(bad)  
  405b35:	dec    BYTE PTR [edx-0xaca008e]
  405b3b:	dec    eax
  405b3c:	inc    ecx
  405b3d:	add    BYTE PTR [edi],al
  405b3f:	fwait
  405b40:	iret   
  405b41:	jmp    DWORD PTR [eax+0x6e]
  405b44:	shl    BYTE PTR [ecx+eiz*8-0x18],0x44
  405b49:	clc    
  405b4a:	out    0x60,eax
  405b4c:	add    bh,ch
  405b4e:	and    ebx,esp
  405b50:	je     0x405b4e
  405b52:	xchg   esi,eax
  405b53:	mov    ah,0xf6
  405b55:	div    DWORD PTR [ecx+0x4ce80b36]
  405b5b:	mov    ch,0x80
  405b5d:	jmp    DWORD PTR [ecx-0x2417852a]
  405b63:	inc    edi
  405b64:	cmp    bh,0x5f
  405b67:	dec    ecx
  405b68:	or     eax,DWORD PTR [eax]
  405b6a:	jecxz  0x405afc
  405b6c:	outs   dx,DWORD PTR ds:[esi]
  405b6d:	sbb    DWORD PTR [edx-0x49],0x4c79ff81
  405b74:	xchg   BYTE PTR [eax+0x806c70],bh
  405b7a:	xchg   esi,eax
  405b7b:	or     eax,DWORD PTR [ebx]
  405b7d:	mov    ebx,ebx
  405b7f:	(bad)  
  405b81:	shl    dl,0xe
  405b84:	cmp    DWORD PTR [eax],0xffffff96
  405b87:	xchg   esi,eax
  405b88:	push   es
  405b89:	jmp    0x405b8e
	...
  405b9a:	add    BYTE PTR [eax],al
  405b9c:	xchg   edx,eax
  405b9d:	or     al,BYTE PTR [ebx]
  405b9f:	add    BYTE PTR [ecx-0x4a],al
  405ba2:	adc    al,0xff
  405ba4:	ret    
  405ba5:	pop    es
  405ba6:	imul   ebp,DWORD PTR [ecx],0x46
  405ba9:	sub    al,0x7f
  405bab:	push   eax
  405bac:	(bad)  
  405bad:	and    al,0xf9
  405baf:	pop    es
  405bb0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405bb2:	jg     0x405bb3
  405bb4:	sbb    DWORD PTR [ebx],esp
  405bb6:	sti    
  405bb7:	retf   
  405bb8:	adc    esp,ecx
  405bba:	jmp    0x405c37
  405bbc:	mov    edx,0x8bff044a
  405bc1:	packssdw mm1,QWORD PTR ds:0x897ef3e6
  405bc8:	sbb    esi,DWORD PTR [ebx+0x72e9ff7e]
  405bce:	add    DWORD PTR ds:[esi-0x2b7a6ff5],edx
  405bd5:	xchg   esp,eax
  405bd6:	jg     0x405bd7
  405bd8:	data16 jecxz 0x405b63
  405bdb:	int3   
  405bdc:	leave  
  405bdd:	popa   
  405bde:	xchg   cx,ax
  405be0:	sbb    esp,DWORD PTR [eax]
  405be2:	pop    edi
  405be3:	jg     0x405b9e
  405be5:	mov    cl,0x56
  405be7:	mov    ecx,0x7f4e1bee
  405bec:	mov    esi,0x96046422
  405bf1:	jmp    0x405c56
  405bf3:	rcr    BYTE PTR [eax-0x5f3bc9e4],0xe6
  405bfa:	test   DWORD PTR [esi+edx*4],eax
  405bfd:	bound  esi,QWORD PTR [ecx+ebx*4+0x0]
	...
  405c11:	add    BYTE PTR [ebp+ebx*1+0x1e],dl
  405c15:	jg     0x405b98
  405c17:	popa   
  405c18:	stc    
  405c19:	add    edx,DWORD PTR [esi+0x1af79562]
  405c1f:	imul   BYTE PTR [edx]
  405c21:	jle    0x405c84
  405c23:	sbb    al,0x6c
  405c25:	ret    0xb2ad
  405c28:	xor    esi,0x6be9a17d
  405c2e:	cs (bad) 
  405c30:	call   0x5462e938
  405c35:	add    ch,BYTE PTR ds:0x549864b9
  405c3b:	sbb    eax,0xa11b7ece
  405c40:	adc    eax,0xd99b9d4
  405c45:	lds    ebx,FWORD PTR [ecx]
  405c47:	add    al,0x37
  405c49:	mov    eax,ds:0x43e26296
  405c4e:	and    DWORD PTR [eax-0x6e],0xffffffc3
  405c52:	adc    dh,dh
  405c54:	stos   BYTE PTR es:[edi],al
  405c55:	jge    0x405c50
  405c57:	sbb    esp,DWORD PTR [ecx+eax*8-0x43]
  405c5b:	jmp    0x1c2913c3
  405c60:	xchg   bl,ch
  405c62:	or     al,0x4b
  405c64:	sub    BYTE PTR [ecx+ebx*8],al
  405c67:	xchg   ebp,eax
  405c68:	add    ch,ah
  405c6a:	cmp    eax,0x486ecf99
  405c6f:	sbb    esi,DWORD PTR [ebp-0xe4bc63]
  405c75:	mov    ecx,0x0
	...
  405c86:	add    BYTE PTR [eax],al
  405c88:	sub    eax,0x3056cf21
  405c8d:	sbb    esi,DWORD PTR [ebp-0x7]
  405c90:	lds    eax,FWORD PTR [ebx]
  405c92:	mov    eax,0x501b2036
  405c97:	cdq    
  405c98:	sbb    BYTE PTR [ebp+0x1c3a4108],dl
  405c9e:	jmp    FWORD PTR [esi]
  405ca0:	std    
  405ca1:	aam    0xca
  405ca3:	es add dh,ch
  405ca6:	test   BYTE PTR [ebx],ch
  405ca8:	sti    
  405ca9:	sbb    edi,edi
  405cab:	mov    ecx,0xfbbd5f0
  405cb0:	call   0x371644d0
  405cb5:	bound  eax,QWORD PTR [eax]
  405cb7:	fs aad 0x6b
  405cba:	test   DWORD PTR [ebp-0x1100e430],ecx
  405cc0:	add    esi,ebx
  405cc2:	std    
  405cc3:	out    0xc3,al
  405cc5:	or     bl,BYTE PTR [edi]
  405cc7:	jl     0x405c5b
  405cc9:	(bad)  
  405cca:	call   FWORD PTR [edx+esi*8-0x453100e5]
  405cd1:	in     al,0xca
  405cd3:	(bad)  
  405cd4:	mov    ds:0x95edc229,eax
  405cd9:	mov    ch,0x8b
  405cdb:	lds    edx,FWORD PTR [edi]
  405cdd:	es cld 
  405cdf:	scas   al,BYTE PTR es:[edi]
  405ce0:	add    DWORD PTR [edi-0x18],esp
  405ce3:	stos   BYTE PTR es:[edi],al
  405ce4:	push   ebx
  405ce5:	sbb    edi,edi
  405ce7:	jo     0x405cba
  405ce9:	push   ss
  405cea:	or     ebp,DWORD PTR [ecx+0x0]
	...
  405cfc:	add    BYTE PTR [eax],al
  405cfe:	mov    ds:0x95e98be6,eax
  405d03:	bound  ebp,QWORD PTR [eax+0x0]
  405d06:	cld    
  405d07:	dec    esi
  405d08:	inc    ecx
  405d09:	add    BYTE PTR [eax+0x13],bl
  405d0c:	sti    
  405d0d:	call   0x400956
  405d12:	scas   eax,DWORD PTR es:[edi]
  405d13:	push   cs
  405d14:	and    esi,DWORD PTR [edx]
  405d16:	out    dx,al
  405d17:	pop    esi
  405d18:	push   eax
  405d19:	jmp    edx
  405d1b:	callw  0xa6b3
  405d1f:	popf   
  405d20:	(bad)  
  405d21:	call   0x40071d
  405d26:	mov    DWORD PTR [esi-0x6250becf],0xbcd7fc75
  405d30:	into   
  405d31:	(bad)  
  405d32:	mov    eax,0x5d24672e
  405d37:	and    eax,0x11984fff
  405d3c:	pop    es
  405d3d:	call   0x3ff54e
  405d42:	xchg   edi,eax
  405d43:	aas    
  405d44:	retf   
  405d45:	call   FWORD PTR [eax+0x2e320006]
  405d4b:	push   WORD PTR [ebp+0x4b]
  405d4f:	mov    ?,WORD PTR [ecx+0x509738ce]
  405d55:	push   0x415493
  405d5a:	jg     0x405cf3
  405d5c:	jne    0x405d66
  405d5e:	push   edi
  405d5f:	xor    al,0xfd
  405d61:	inc    DWORD PTR [eax]
	...
  405d73:	add    BYTE PTR [eax-0x72],bl
  405d76:	push   es
  405d77:	retf   
  405d78:	pop    eax
  405d79:	xchg   edi,eax
  405d7a:	push   0xff251d1b
  405d7f:	(bad)  
  405d80:	shl    dl,cl
  405d82:	out    0x98,eax
  405d84:	sub    DWORD PTR [edi+0x4aa750ff],edx
  405d8a:	xor    al,BYTE PTR [ecx-0x11]
  405d8d:	xor    eax,0x39675fe
  405d92:	imul   esi,DWORD PTR [ecx],0xffffffe8
  405d95:	call   0xd63c4615
  405d9a:	jnp    0x405d9b
  405d9c:	(bad)  [esi]
  405d9e:	jg     0x405d88
  405da0:	repz lds edi,FWORD PTR [ebx-0x1]
  405da4:	(bad)  
  405da6:	or     al,BYTE PTR [eax]
  405da8:	imul   edx,DWORD PTR [edi+ebp*2-0x2b482d7d],0x69
  405db0:	xchg   esi,eax
  405db1:	and    eax,0x323ff07
  405db6:	imul   edi,esi,0xffffffd9
  405db9:	mov    al,ds:0x5753897c
  405dbe:	mov    BYTE PTR ds:0xffc363c5,bh
  405dc4:	or     DWORD PTR [ecx],ecx
  405dc6:	add    esi,DWORD PTR [ebp+edi*4-0xd]
  405dca:	xchg   ebp,eax
  405dcb:	xor    bh,dl
  405dcd:	or     edx,esp
  405dcf:	out    0xdf,eax
  405dd1:	mov    es,WORD PTR [ebx]
  405dd3:	add    BYTE PTR [ebp+0x1df74b],bl
	...
  405de9:	add    cl,cl
  405deb:	jae    0x405ddc
  405ded:	rcr    DWORD PTR [ecx+0x18],cl
  405df0:	pop    es
  405df1:	ror    dl,0x37
  405df4:	shl    DWORD PTR [edi+0x72],cl
  405df7:	ffree  st(1)
  405df9:	call   ecx
  405dfb:	add    cl,dh
  405dfd:	pop    es
  405dfe:	sar    BYTE PTR cs:[eax-0x1],1
  405e02:	xor    DWORD PTR [ebx],esp
  405e04:	(bad)
  405e08:	js     0x405e3d
  405e0a:	push   esi
  405e0b:	loop   0x405e87
  405e0d:	call   FWORD PTR [ecx]
  405e0f:	fdiv   DWORD PTR [ebp-0x52]
  405e12:	into   
  405e13:	or     al,dh
  405e15:	les    edi,FWORD PTR [ebp+esi*1+0x7a]
  405e19:	jne    0x405da9
  405e1b:	bound  edx,QWORD PTR [ecx-0x61e7078b]
  405e21:	out    dx,al
  405e22:	mov    ah,0x19
  405e24:	sbb    al,0xc
  405e26:	inc    BYTE PTR [eax]
  405e28:	(bad)  
  405e29:	jnp    0x405e0c
  405e2b:	mov    esp,ebp
  405e2d:	jp     0x405e92
  405e2f:	push   0xffffff91
  405e31:	pop    ecx
  405e32:	rcr    BYTE PTR [eax],1
  405e34:	jbe    0x405e24
  405e36:	jae    0x405e51
  405e38:	hlt    
  405e39:	or     ebp,DWORD PTR [esi-0x468498cc]
  405e3f:	mov    DWORD PTR [esi+0x56625734],eax
  405e45:	icebp  
  405e46:	xchg   ecx,eax
  405e47:	or     ah,BYTE PTR [eax+edi*2+0x50d118a1]
	...
  405e5e:	add    BYTE PTR [eax],al
  405e60:	mov    ds:0x6b0b7ae9,ax
  405e66:	inc    ecx
  405e67:	cmp    al,0x8b
  405e69:	sbb    BYTE PTR [esi],ch
  405e6b:	in     al,dx
  405e6c:	mov    WORD PTR [ecx-0x58],ss
  405e6f:	add    edi,DWORD PTR [ecx-0x72]
  405e72:	icebp  
  405e73:	imul   edi,DWORD PTR [ebp-0x184e9eb],0x59
  405e7a:	fadd   st,st(4)
  405e7c:	popa   
  405e7d:	sbb    DWORD PTR [ebx+ecx*1+0x6e],edi
  405e81:	jns    0x405e7f
  405e83:	jp     0x405ed6
  405e85:	mov    eax,DWORD PTR [esi-0x119d28cc]
  405e8b:	lock cdq 
  405e8d:	or     bh,al
  405e8f:	js     0x405eca
  405e91:	sbb    BYTE PTR [ecx-0x67],dl
  405e94:	addr16 mov eax,ds:0x7ae9
  405e98:	mov    ds:0x22ffc16a,eax
  405e9d:	sbb    dh,al
  405e9f:	jp     0x405e44
  405ea1:	push   ss
  405ea2:	mov    esi,0xa99f0
  405ea7:	xor    edx,DWORD PTR [ebp+0x17]
  405eaa:	dec    DWORD PTR [esi]
  405eac:	push   ebx
  405ead:	and    al,0x4
  405eaf:	jmp    0x6b2c4b9a
  405eb4:	out    dx,al
  405eb5:	imul   eax,DWORD PTR [eax],0x1d
  405eb8:	test   BYTE PTR [edi],dl
  405eba:	jne    0x405eb5
  405ebc:	pop    esp
  405ebd:	lea    ecx,[esi+eax*4]
  405ec0:	out    0x5f,al
  405ec2:	call   0x405f7a
	...
  405ed3:	add    BYTE PTR [eax],al
  405ed5:	add    BYTE PTR [eax+0x17],al
  405ed8:	push   DWORD PTR [esi-0x3a]
  405edb:	imul   ebp,eax,0xffffff91
  405ede:	push   edx
  405edf:	pop    ss
  405ee0:	push   DWORD PTR [eax]
  405ee2:	push   ebx
  405ee3:	data16 add BYTE PTR [eax+eiz*1+0x212d8307],dh
  405eeb:	mov    WORD PTR [eax],es
  405eed:	dec    esi
  405eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eef:	jae    0x405ef0
  405ef1:	mov    esp,0xed751785
  405ef6:	std    
  405ef7:	xor    ah,cl
  405ef9:	ss or  al,0x6c
  405efc:	shl    BYTE PTR [ebp+0x2544ea69],0x6d
  405f03:	out    dx,al
  405f04:	xor    DWORD PTR [eax+0x15751795],ebp
  405f0a:	std    
  405f0b:	test   eax,0x8adc0ecd
  405f10:	add    cl,ch
  405f12:	in     al,dx
  405f13:	fmul   DWORD PTR [edi-0x2]
  405f16:	inc    ecx
  405f17:	pop    edi
  405f18:	call   0xff582b69
  405f1d:	xor    ebp,0xbee94153
  405f23:	(bad)  
  405f24:	cld    
  405f25:	sar    DWORD PTR [ebp+eiz*1-0x1],1
  405f29:	(bad)  
  405f2a:	cmp    ah,BYTE PTR [edx+0x0]
  405f2d:	mov    esi,0xffb1dc
  405f32:	pop    edx
  405f33:	callw  0xafc1
  405f37:	cdq    
  405f38:	jmp    FWORD PTR [eax+0x0]
	...
  405f4b:	add    BYTE PTR [eax+edx*2],dl
  405f4e:	inc    ecx
  405f4f:	add    BYTE PTR [eax],dh
  405f51:	pop    es
  405f52:	sti    
  405f53:	call   0x3fff54
  405f58:	xchg   DWORD PTR [eax+0x0],esp
  405f5b:	out    dx,eax
  405f5c:	inc    ecx
  405f5d:	cs (bad) 
  405f5f:	jne    0x405f58
  405f61:	mov    ch,BYTE PTR [edi-0x1]
  405f64:	adc    BYTE PTR [ecx-0x79ac8a01],bl
  405f6a:	pop    esi
  405f6b:	leave  
  405f6c:	inc    eax
  405f6d:	cdq    
  405f6e:	leave  
  405f6f:	ret    0x62df
  405f72:	push   ebp
  405f73:	mov    esp,DWORD PTR [ebx+0x6]
  405f76:	mov    bh,0x32
  405f78:	(bad)  
  405f79:	(bad)  
  405f7a:	push   DWORD PTR [ebp-0x4d]
  405f7d:	mov    ch,cl
  405f7f:	int3   
  405f80:	push   eax
  405f81:	cdq    
  405f82:	push   DWORD PTR [ebp-0x41]
  405f85:	xor    ah,bh
  405f87:	xor    al,0xc2
  405f89:	fwait
  405f8a:	(bad)  
  405f8b:	dec    DWORD PTR [edx+0x66]
  405f8e:	push   eax
  405f8f:	dec    DWORD PTR [edx+0x6a]
  405f92:	call   0xffdc0fd5
  405f97:	push   0x414cbb
  405f9c:	add    BYTE PTR ds:0xaab8e80b,0xff
  405fa3:	call   DWORD PTR [eax-0x58aff0fb]
  405fa9:	ins    BYTE PTR es:[edi],dx
  405faa:	int    0xff
  405fac:	inc    eax
  405fad:	fwait
  405fae:	jne    0x405fc4
	...
  405fc0:	add    BYTE PTR [eax],al
  405fc2:	pop    ds
  405fc3:	fwait
  405fc4:	jne    0x405fce
  405fc6:	outs   dx,BYTE PTR ds:[si]
  405fc8:	(bad)  
  405fc9:	call   DWORD PTR [eax-0x57]
  405fcc:	ret    0x9610
  405fcf:	or     ecx,esi
  405fd1:	mov    dh,BYTE PTR [edx]
  405fd3:	mov    DWORD PTR [edi],edi
  405fd5:	cld    
  405fd6:	sbb    DWORD PTR [edi+0x8],edx
  405fd9:	call   0xffb82644
  405fde:	popf   
  405fdf:	retf   
  405fe0:	out    dx,al
  405fe1:	dec    ecx
  405fe2:	(bad)  
  405fe4:	js     0x40604e
  405fe6:	xchg   esi,eax
  405fe7:	or     ebp,DWORD PTR [eax-0x42]
  405fea:	jle    0x405f7a
  405fec:	xor    eax,0xedec9641
  405ff1:	sti    
  405ff2:	loope  0x406062
  405ff4:	or     al,0xe8
  405ff6:	or     eax,0x3eff77dd
  405ffb:	or     al,BYTE PTR [ebx]
  405ffd:	out    dx,eax
  405ffe:	or     BYTE PTR [esp+eiz*4+0x32],ah
  406002:	push   edi
  406003:	or     edi,DWORD PTR [eax+0x75]
  406006:	mov    edx,0xbe07ee7c
  40600b:	sub    eax,0x23a9ff78
  406010:	add    eax,0xeae5b100
  406015:	stos   BYTE PTR es:[edi],al
  406016:	fs retf 0xff02
  40601a:	or     ebx,DWORD PTR [eax+0x78]
  40601d:	jne    0x405fbd
  40601f:	mov    ds:0x4481fee2,eax
  406024:	js     0x40609b
	...
  406036:	add    BYTE PTR [eax],al
  406038:	jp     0x4060ad
  40603a:	mov    ah,0xc8
  40603c:	jno    0x4060b2
  40603e:	dec    edx
  40603f:	ret    0xb9e
  406042:	into   
  406043:	mov    dh,BYTE PTR [edx-0x78]
  406046:	aas    
  406047:	cld    
  406048:	in     al,dx
  406049:	or     ebp,ebp
  40604b:	add    al,0x51
  40604d:	mov    cs,WORD PTR [ebx]
  40604f:	call   0xffb8a6b7
  406054:	movsx  esi,BYTE PTR [esi+0x68]
  406058:	mov    al,0x62
  40605a:	sbb    eax,ebp
  40605c:	xor    DWORD PTR [ebp+0xd],edi
  40605f:	xor    dl,bh
  406061:	(bad)  
  406062:	(bad)  
  406063:	xor    DWORD PTR [ebx+ecx*2+0x28],edi
  406067:	add    al,0x19
  406069:	(bad)  
  40606a:	icebp  
  40606b:	imul   eax,DWORD PTR [eax+0x14],0xffffffbe
  40606f:	ja     0x4060ef
  406071:	call   0x3229:0x7d01c4fb
  406078:	push   edi
  406079:	bound  esp,QWORD PTR [esi+0x284b8c31]
  40607f:	add    al,0xe9
  406081:	mov    fs,ecx
  406083:	imul   ecx,DWORD PTR [eax],0x14
  406086:	mov    ?,WORD PTR [edi+0x6e]
  406089:	xchg   edi,eax
  40608a:	mov    ebx,0xcd7cd1c4
  40608f:	xor    DWORD PTR [edi+0x62],edx
  406092:	jbe    0x4060c5
  406094:	pushf  
  406095:	dec    ebx
  406096:	sub    BYTE PTR [ecx+edi*4],al
  406099:	mov    ?,ecx
  40609b:	imul   eax,DWORD PTR [eax],0x0
	...
  4060ae:	xor    BYTE PTR [esi+ebx*2],dl
  4060b1:	ja     0x4060f1
  4060b3:	call   0x7ce225d2
  4060b8:	std    
  4060b9:	xor    DWORD PTR [edi+0x62],edx
  4060bc:	inc    esi
  4060bd:	xor    DWORD PTR [ecx+ecx*2-0x7176fc58],ebp
  4060c4:	loope  0x406131
  4060c6:	clc    
  4060c7:	adc    al,0x2e
  4060c9:	ja     0x4060b9
  4060cb:	jl     0x4060a8
  4060cd:	les    esi,FWORD PTR [ecx+0x7c]
  4060d0:	mov    ebx,0x1662d731
  4060d5:	xor    DWORD PTR [ecx+ecx*2-0x58],edi
  4060d9:	add    ebx,DWORD PTR [ecx-0x72]
  4060dc:	icebp  
  4060dd:	imul   esp,eax,0x14
  4060e0:	(bad)  
  4060e1:	jbe    0x4060a1
  4060e3:	call   0x9b67:0x145abb00
  4060ea:	xchg   DWORD PTR [ecx+0x7866e600],esp
  4060f0:	sub    DWORD PTR [eax],ebp
  4060f2:	xchg   edx,eax
  4060f3:	adc    esi,DWORD PTR [ebp-0x1f]
  4060f6:	lods   eax,DWORD PTR ds:[esi]
  4060f7:	dec    esp
  4060f8:	dec    dh
  4060fa:	mov    al,ds:0xdafb7d8a
  4060ff:	adc    esp,DWORD PTR [edi+0x1b]
  406102:	les    esp,FWORD PTR [ecx+0x78c6b600]
  406108:	sub    DWORD PTR [eax],ebp
  40610a:	xchg   edx,eax
  40610b:	adc    esi,DWORD PTR [ebp-0xf]
  40610e:	jge    0x406184
  406110:	(bad)  
  406111:	sahf   
	...
  406122:	add    BYTE PTR [eax],al
  406124:	pusha  
  406125:	mov    cl,BYTE PTR [edx+0x6713dadb]
  40612b:	cmp    esp,DWORD PTR [ecx+eiz*4+0x78868600]
  406132:	sub    DWORD PTR [eax],ebp
  406134:	xchg   edx,eax
  406135:	adc    esi,DWORD PTR [ebp-0x1f]
  406138:	sub    eax,0x406efe5c
  40613d:	mov    ah,BYTE PTR [esi+0x1b]
  406140:	fist   DWORD PTR [ebx]
  406142:	addr16 or eax,0xc100a164
  406148:	xchg   edi,eax
  406149:	bound  eax,QWORD PTR [eax]
  40614b:	imul   esp,DWORD PTR [eax],0xf851088d
  406151:	adc    eax,0x8b7d3eff
  406156:	xor    ch,BYTE PTR [eax-0x4bf756b]
  40615c:	push   edx
  40615d:	adc    esp,DWORD PTR [edi-0x15]
  406160:	xchg   ebp,eax
  406161:	bound  eax,QWORD PTR [eax-0x17a499e2]
  406167:	xor    esi,ebx
  406169:	adc    edi,edi
  40616b:	sbb    DWORD PTR [esi+0x51],0x73f0041
  406172:	sub    esi,DWORD PTR [edx]
  406174:	(bad)  
  406175:	pop    esi
  406176:	push   0x805f2f02
  40617b:	inc    edx
  40617d:	addr16 call 0xffcd9c44
  406183:	push   0x4150a5
	...
  406198:	add    BYTE PTR [eax],al
  40619a:	xlat   BYTE PTR ds:[ebx]
  40619b:	dec    edx
  40619c:	xor    al,BYTE PTR [ecx+0x2f]
  40619f:	pop    es
  4061a0:	add    DWORD PTR [eax],eax
  4061a2:	(bad)  
  4061a3:	fdivp  st(6),st
  4061a5:	jne    0x4061ae
  4061a7:	xchg   DWORD PTR [edx+0x688d48fd],ebp
  4061ad:	data16 std 
  4061af:	pop    ds
  4061b0:	jmp    DWORD PTR [edi-0x53]
  4061b3:	push   eax
  4061b4:	inc    ecx
  4061b5:	add    BYTE PTR [edi+0x6f000060],al
  4061bb:	lea    esi,[ebp+0x8]
  4061be:	pop    ss
  4061bf:	icebp  
  4061c0:	cld    
  4061c1:	call   FWORD PTR [eax]
  4061c3:	push   es
  4061c4:	ja     0x4061f8
  4061c6:	jle    0x406226
  4061c8:	push   0xff1ffd52
  4061cd:	lods   eax,DWORD PTR ds:[si]
  4061cf:	pop    esi
  4061d0:	add    BYTE PTR [eax-0x17f8fcc8],al
  4061d6:	retf   
  4061d7:	mov    edi,edi
  4061d9:	call   edi
  4061db:	or     esi,DWORD PTR [ecx]
  4061dd:	inc    ecx
  4061de:	scas   eax,DWORD PTR es:[edi]
  4061df:	push   es
  4061e0:	push   ecx
  4061e1:	xor    bh,BYTE PTR [esi]
  4061e3:	pushw  0x7f02
  4061e7:	data16 cmp bh,0x42
  4061eb:	pop    esi
  4061ec:	call   0xffd80c56
  4061f1:	push   0x4154e5
  4061f6:	pop    es
  4061f7:	xor    al,0x31
  4061f9:	inc    ecx
  4061fa:	xchg   esi,eax
  4061fb:	sti    
  4061fc:	jmp    0x0:0x1
	...
  40620f:	add    BYTE PTR [esi-0x34007d05],dl
  406215:	adc    ebp,DWORD PTR [ebx+0x4e]
  406218:	dec    ebx
  406219:	adc    DWORD PTR [edx+ebp*2-0x64],esi
  40621d:	sbb    dh,ch
  40621f:	pop    es
  406220:	add    esi,DWORD PTR cs:[ebp-0x1]
  406224:	xor    DWORD PTR [esi+0x13a3ff21],esi
  40622a:	imul   edi,edi,0x23
  40622d:	cmp    DWORD PTR [edx+ebp*2+0x7a],esi
  406231:	and    dh,ch
  406233:	pop    es
  406234:	dec    dh
  406236:	jne    0x406237
  406238:	or     ecx,edx
  40623a:	in     eax,dx
  40623b:	sti    
  40623c:	add    DWORD PTR [edi+0xc],ecx
  40623f:	call   0xffb429c5
  406244:	fistp  QWORD PTR [ebp-0x6bbd0002]
  40624a:	and    DWORD PTR [bp+di+0x7],0x3
  40624f:	je     0x4062c6
  406251:	arpl   WORD PTR [ecx+0x32],bx
  406254:	push   edi
  406255:	sti    
  406256:	jae    0x4062cd
  406258:	call   0xd398:0xc1c9f4f3
  40625f:	addr16 xchg esi,eax
  406261:	sti    
  406262:	arpl   WORD PTR [esi+0x7ee8846],di
  406268:	mov    esi,0xa1ff6ac5
  40626d:	mov    ds:0xa099c648,eax
  406272:	jmp    0x40625f
	...
  406284:	add    BYTE PTR [eax],al
  406286:	les    edi,FWORD PTR [edx+0x3ff02]
  40628c:	imul   ebx,DWORD PTR [ebp+0x4c],0x58
  406290:	je     0x4062e2
  406292:	out    dx,al
  406293:	cli    
  406294:	add    ch,bh
  406296:	xor    BYTE PTR [edx-0x47],ah
  406299:	je     0x40627e
  40629b:	pop    edx
  40629c:	adc    DWORD PTR [edx+0x6b16116e],ebx
  4062a2:	sub    al,0x28
  4062a4:	push   cs
  4062a5:	je     0x406265
  4062a7:	adc    DWORD PTR [ebx+0x741049c2],edi
  4062ad:	pop    es
  4062ae:	cs dec esi
  4062b0:	and    esi,DWORD PTR [ecx+edi*1-0x4e]
  4062b4:	add    DWORD PTR [ecx],0xd4a70196
  4062ba:	sub    BYTE PTR [edi-0x561a40f],dl
  4062c0:	aad    0x73
  4062c2:	(bad)  cs:[esi-0x54e4ee8d]
  4062c9:	cld    
  4062ca:	or     DWORD PTR [esi-0x68fe9f8e],esi
  4062d0:	in     eax,0x5b
  4062d2:	iret   
  4062d3:	sbb    ebp,DWORD PTR [esi+0x1d229d73]
  4062d9:	push   cs
  4062da:	jle    0x40630e
  4062dc:	fcmovnb st,st(4)
  4062de:	loope  0x406280
  4062e0:	adc    edx,0xd48e10cf
  4062e6:	popa   
  4062e7:	adc    esp,edi
  4062e9:	sti    
	...
  4062fa:	add    BYTE PTR [eax],al
  4062fc:	mov    cl,0x7d
  4062fe:	jle    0x406373
  406300:	sar    ecx,0x14
  406303:	dec    edx
  406304:	mov    ecx,0x9e46a010
  406309:	bound  edi,QWORD PTR [esi+edi*2+0x6424e4ba]
  406310:	sub    al,0x62
  406312:	push   esi
  406313:	stc    
  406314:	mov    DWORD PTR [ecx],edx
  406316:	aam    0xff
  406318:	nop
  406319:	push   esi
  40631a:	jecxz  0x406338
  40631c:	xlat   BYTE PTR ds:[ebx]
  40631d:	bound  edx,QWORD PTR [ecx-0x25]
  406320:	dec    esi
  406321:	adc    BYTE PTR [eax],al
  406323:	ss sti 
  406325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406326:	hlt    
  406327:	ret    
  406328:	xchg   ebp,eax
  406329:	pcmpeqw mm7,mm5
  40632c:	in     al,0x95
  40632e:	or     al,0x1e
  406330:	lahf   
  406331:	ins    BYTE PTR es:[edi],dx
  406332:	sub    DWORD PTR [eax+0x2040fa95],ebp
  406338:	lds    ecx,FWORD PTR [edi]
  40633a:	mov    DWORD PTR [ecx+edi*4+0x3efe007c],ebp
  406341:	js     0x406342
  406343:	jl     0x40637e
  406345:	adc    DWORD PTR ds:0xa192d3,esi
  40634b:	ror    DWORD PTR [eax-0x5d2100e7],1
  406351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406352:	clc    
  406353:	fs dec esi
  406355:	or     BYTE PTR [eax-0x32],dl
  406358:	push   cs
  406359:	ins    BYTE PTR es:[edi],dx
  40635a:	(bad)  
  40635b:	cmp    al,0x96
  40635d:	sysexit 
  40635f:	jecxz  0x406361
	...
  406371:	add    BYTE PTR [edx-0x5f3eff5f],ah
  406377:	sbb    edi,edi
  406379:	scas   al,BYTE PTR es:[edi]
  40637a:	jb     0x406321
  40637c:	lock adc edx,DWORD PTR [edx+0x64c9750f]
  406383:	xchg   ebp,eax
  406384:	or     al,0x96
  406386:	sahf   
  406387:	ins    BYTE PTR es:[edi],dx
  406388:	sub    DWORD PTR [eax],ebp
  40638a:	call   0x890f:0x44b1fcfa
  406391:	and    al,0x36
  406393:	fld    QWORD PTR [ecx+ecx*4-0x1b]
  406397:	adc    BYTE PTR [ebp-0x3b],dh
  40639a:	and    al,0x95
  40639c:	or     al,0x66
  40639e:	outs   dx,BYTE PTR ds:[esi]
  40639f:	ins    BYTE PTR es:[edi],dx
  4063a0:	sub    DWORD PTR [eax+0x21e4fa95],ebp
  4063a6:	and    al,0xf
  4063a8:	mov    DWORD PTR [ecx+edi*8-0x2cff831d],esp
  4063af:	arpl   WORD PTR [edi],cx
  4063b1:	test   bl,ch
  4063b3:	arpl   WORD PTR [eax],ax
  4063b5:	add    ah,ch
  4063b7:	adc    dh,bh
  4063b9:	add    BYTE PTR [eax-0x19],dl
  4063bc:	mov    DWORD PTR [eax],eax
  4063be:	jg     0x406423
  4063c0:	cmp    DWORD PTR [ebp-0x75],0x63
  4063c4:	je     0x40c7b9
  4063ca:	mov    al,ds:0xcaff270a
  4063cf:	or     esp,edi
  4063d1:	sub    ch,BYTE PTR [ebp-0x6c]
  4063d4:	(bad)  
  4063d5:	inc    DWORD PTR [eax]
	...
  4063e7:	add    BYTE PTR [edx+0x3775ff7f],bh
  4063ed:	stos   DWORD PTR es:[edi],eax
  4063ee:	add    edx,0x75ff9130
  4063f4:	aaa    
  4063f5:	xchg   ecx,eax
  4063f6:	jne    0x406400
  4063f8:	push   edi
  4063f9:	or     al,0xc1
  4063fb:	jmp    eax
  4063fd:	nop
  4063fe:	jne    0x4063f4
  406400:	rcl    BYTE PTR [esi],1
  406402:	pop    es
  406403:	call   0x400c6c
  406408:	outs   dx,BYTE PTR ds:[esi]
  406409:	jmp    DWORD PTR [esi]
  40640b:	adc    edi,edi
  40640d:	cmp    DWORD PTR [esi+0x7591e275],0x71700f0
  406417:	call   0x400cb4
  40641c:	adc    al,0x64
  40641e:	push   DWORD PTR [ebp+0x27]
  406421:	xchg   ecx,eax
  406422:	jne    0x406414
  406424:	inc    eax
  406425:	pop    ss
  406426:	pop    es
  406427:	call   0x400910
  40642c:	inc    eax
  40642d:	pop    ss
  40642e:	jmp    0x40642f
  406430:	retf   0xe70a
  406433:	cmp    al,0x6d
  406435:	xchg   ecx,eax
  406436:	inc    DWORD PTR [ebx+0x673696]
  40643c:	or     dl,BYTE PTR [edi]
  40643e:	test   BYTE PTR [ebp+0x76],bh
  406441:	add    dh,dh
  406443:	push   cs
  406444:	or     eax,0xc6ff66c7
  406449:	push   esp
  40644a:	test   DWORD PTR [edi],0x0
	...
  40645c:	add    BYTE PTR [eax],al
  40645e:	jle    0x40649b
  406460:	inc    ebx
  406461:	jmp    FWORD PTR [ecx+0x71]
  406464:	(bad)  
  406465:	imul   edx,DWORD PTR [esi+0x6e07f76c],0x51ff43af
  40646f:	pop    ebp
  406470:	div    ebx
  406472:	and    BYTE PTR ds:[esi-0x1],al
  406476:	inc    ecx
  406477:	or     eax,0x382efbf6
  40647c:	inc    esi
  40647d:	push   DWORD PTR [ecx]
  40647f:	std    
  406480:	cmc    
  406481:	idiv   DWORD PTR [esi]
  406483:	adc    BYTE PTR [esi-0x1],al
  406486:	and    DWORD PTR ds:0x82eeff6,ebp
  40648c:	inc    esi
  40648d:	call   DWORD PTR [ecx]
  40648f:	sbb    eax,0xfffeebf6
  406494:	inc    ebp
  406495:	inc    DWORD PTR [ecx]
  406497:	int    0xf5
  406499:	jecxz  0x406489
  40649b:	xlat   BYTE PTR ds:[ebx]
  40649c:	inc    esi
  40649d:	push   ecx
  40649f:	ret    0x2444
  4064a2:	xchg   esi,eax
  4064a3:	dec    esi
  4064a4:	jge    0x406492
  4064a6:	pop    ss
  4064a7:	enter  0xf772,0xd9
  4064ab:	hlt    
  4064ac:	ficom  DWORD PTR [edx]
  4064ae:	xchg   esi,eax
  4064af:	mov    WORD PTR [ecx-0x3e37cf98],?
  4064b5:	(bad)  
  4064b6:	cmp    DWORD PTR [eax+0x35],eax
  4064b9:	inc    ecx
  4064ba:	xchg   esi,eax
  4064bb:	arpl   dx,bx
  4064bd:	xor    dl,BYTE PTR [edi-0x5]
  4064c0:	fimul  DWORD PTR [ebx+0x0]
	...
  4064d3:	add    BYTE PTR [ebp+0x62],ah
  4064d6:	test   al,0x3
  4064d8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4064da:	sbb    al,bl
  4064dc:	cdq    
  4064dd:	test   DWORD PTR [eax+0x4e62d734],edi
  4064e3:	neg    BYTE PTR [ebp+0x79fbbc0d]
  4064e9:	jnp    0x40652a
  4064eb:	jo     0x406566
  4064ed:	jp     0x4064c9
  4064ef:	add    eax,DWORD PTR [ecx-0x5a573f34]
  4064f5:	mov    ds:0x5137dbe9,eax
  4064fa:	test   al,0x3
  4064fc:	out    dx,al
  4064fd:	hlt    
  4064fe:	fld    st(2)
  406500:	push   ecx
  406501:	test   DWORD PTR [edi-0x6e9d28cc],ecx
  406507:	cmc    
  406508:	test   BYTE PTR [ebx+0x510fdbe9],ah
  40650e:	test   al,0x3
  406510:	xor    DWORD PTR [edi+0x5aa370dd],edx
  406516:	shr    DWORD PTR [ebx],1
  406518:	and    BYTE PTR ds:0x6285dcde,cl
  40651e:	(bad)  
  40651f:	scas   al,BYTE PTR es:[edi]
  406520:	jle    0x406587
  406522:	adc    eax,0xbf8509c5
  406527:	xor    edx,DWORD PTR [edi+0x62]
  40652a:	push   ecx
  40652b:	imul   eax,ebp,0xd4dbe9a3
  406531:	push   eax
  406532:	sub    BYTE PTR [esi+edi*2],al
  406535:	rcr    cl,1
  406537:	les    eax,FWORD PTR [eax]
	...
  406549:	add    cl,ah
  40654b:	test   BYTE PTR [ebp-0x699da8cd],dh
  406551:	stc    
  406552:	popf   
  406553:	or     eax,0x5eb1fc14
  406558:	xchg   DWORD PTR [edi-0x3f],ebp
  40655b:	fisub  WORD PTR [ebx]
  40655d:	jo     0x4065c5
  40655f:	or     eax,0xbb1fc00
  406564:	xor    eax,0xa38ad3
  406569:	push   ecx
  40656a:	in     eax,0xf3
  40656c:	(bad)  
  40656d:	call   0xd3b5320e
  406572:	fsub   DWORD PTR [ebp+0x6295e9f8]
  406578:	add    BYTE PTR [esi],ch
  40657a:	dec    edi
  40657b:	adc    bh,bh
  40657d:	out    0x95,al
  40657f:	bound  ebp,QWORD PTR [edx-0x17]
  406582:	dec    edi
  406583:	or     al,0x69
  406585:	jmp    0xaccc71d9
  40658a:	jmp    0xdea4f341
  40658f:	adc    edi,edi
  406591:	push   ss
  406592:	push   0xd
  406594:	jne    0x4065a7
  406596:	mov    ecx,0xc311fc95
  40659b:	hlt    
  40659c:	(bad)  
  40659d:	call   0xebb431de
  4065a2:	int3   
  4065a3:	mov    ds:0xa18a6268,al
  4065a8:	add    dh,ah
  4065aa:	push   ds
  4065ab:	pop    eax
  4065ac:	call   0x40663f
	...
  4065bd:	add    BYTE PTR [eax],al
  4065bf:	add    al,dl
  4065c1:	or     edi,edi
  4065c3:	bound  esp,QWORD PTR [ebp-0x23]
  4065c6:	test   ch,dl
  4065c8:	or     BYTE PTR [ebx],0xff
  4065cb:	sbb    esp,esp
  4065cd:	add    esi,esp
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d0:	push   0x656c890b
  4065d5:	adc    edi,edi
  4065d7:	scas   al,BYTE PTR es:[edi]
  4065d8:	js     0x4065af
  4065da:	out    dx,eax
  4065db:	sahf   
  4065dc:	jo     0x4065e9
  4065de:	call   DWORD PTR [edx+ebx*8]
  4065e1:	add    esi,ebp
  4065e3:	xchg   edi,eax
  4065e4:	inc    eax
  4065e5:	or     edi,edi
  4065e7:	push   esp
  4065e8:	inc    ebp
  4065e9:	adc    edi,edi
  4065eb:	add    BYTE PTR [eax],bl
  4065ed:	test   al,0xe2
  4065ef:	ret    
  4065f0:	cmp    BYTE PTR [edi+edi*8+0x45],bh
  4065f4:	daa    
  4065f5:	test   al,0x95
  4065f7:	jmp    DWORD PTR [edx+0x212fe87b]
  4065fd:	pop    edi
  4065fe:	add    cl,cl
  406600:	ins    DWORD PTR es:[edi],dx
  406601:	pop    es
  406602:	call   DWORD PTR [esp+esi*8-0x55]
  406606:	add    esp,0xffffffdb
  406609:	sub    edi,edi
  40660b:	imul   esi,DWORD PTR [ecx+0x7c],0x94e70875
  406612:	sar    bh,0xa8
  406615:	mov    es,WORD PTR [ebp-0x4]
  406618:	push   edi
  406619:	or     eax,0x7c6f4132
  40661e:	jne    0x406628
  406620:	xchg   esp,edx
  406622:	std    
  406623:	inc    DWORD PTR [eax]
	...
  406635:	add    BYTE PTR [eax+0x6467ff29],ch
  40663b:	push   eax
  40663c:	inc    ecx
  40663d:	add    BYTE PTR [edi],ah
  40663f:	or     eax,0x7c2f4132
  406644:	xor    eax,0xff26561a
  406649:	out    0x6f,eax
  40664b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40664c:	(bad)  
  40664d:	jmp    DWORD PTR [edi+ebx*4]
  406650:	je     0x406661
  406652:	pop    edi
  406653:	ss (bad) 
  406655:	jne    0x40664e
  406657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406658:	xchg   ebp,eax
  406659:	cld    
  40665a:	fdivr  DWORD PTR [eax+ebp*8-0x7b]
  40665e:	sub    al,0x7d
  406660:	jmp    FWORD PTR [edx-0x11]
  406663:	mov    WORD PTR es:[eax],gs
  406666:	mov    esi,0xec216866
  40666b:	pop    ds
  40666c:	(bad)  
  40666d:	inc    dl
  40666f:	pop    eax
  406670:	sub    DWORD PTR [ecx-0x11],eax
  406673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406674:	xchg   dh,al
  406676:	xchg   esi,eax
  406677:	hlt    
  406678:	ins    BYTE PTR es:[edi],dx
  406679:	or     edx,esi
  40667b:	je     0x40667a
  40667d:	dec    edi
  40667e:	data16 in al,0xf6
  406681:	pop    es
  406682:	scas   al,BYTE PTR es:[edi]
  406683:	outs   dx,DWORD PTR ds:[esi]
  406684:	jo     0x406685
  406686:	mov    cl,0xe0
  406688:	enter  0xa9c2,0x7b
  40668c:	(bad)  
  40668e:	cmp    DWORD PTR [eax+0x31],eax
  406691:	inc    ecx
  406692:	xchg   esi,eax
  406693:	xor    ebp,edi
  406695:	xor    dl,bh
  406697:	sti    
  406698:	fiadd  DWORD PTR [ecx]
	...
  4066aa:	add    BYTE PTR [eax],al
  4066ac:	xchg   esi,eax
  4066ad:	sti    
  4066ae:	sub    al,0xe3
  4066b1:	cmp    DWORD PTR [ebp-0x1],ebp
  4066b4:	lea    edi,[ebx]
  4066b6:	clc    
  4066b7:	push   cs
  4066b8:	(bad)  
  4066b9:	jmp    0x406726
  4066bb:	jne    0x40665b
  4066bd:	mov    ds:0x4161fbc2,eax
  4066c2:	pop    esp
  4066c3:	xor    dl,BYTE PTR [ebp+0x69]
  4066c6:	ins    DWORD PTR es:[edi],dx
  4066c7:	push   0xffffff96
  4066c9:	jecxz  0x406748
  4066cb:	sub    bh,dl
  4066cd:	sti    
  4066ce:	fisub  DWORD PTR [eax]
  4066d0:	test   DWORD PTR [edx-0x46b97fe],edi
  4066d6:	add    al,BYTE PTR [eax-0xbb37c2]
  4066dc:	sub    DWORD PTR ds:0x4b917443,eax
  4066e2:	aam    0xfe
  4066e4:	mov    ds:0x12195b13,eax
  4066e9:	xor    DWORD PTR [eax+ebp*8-0x61],ebp
  4066ed:	mov    esp,0x56cff6b
  4066f2:	ins    BYTE PTR es:[edi],dx
  4066f3:	jne    0x406683
  4066f5:	xor    ebp,ecx
  4066f7:	sti    
  4066f8:	icebp  
  4066f9:	rcr    al,1
  4066fb:	and    ch,cl
  4066fd:	dec    esi
  4066fe:	cld    
  4066ff:	out    0x66,eax
  406701:	bound  esp,QWORD PTR [ebp-0x2832694]
  406707:	ins    BYTE PTR es:[edi],dx
  406708:	dec    ebx
  406709:	pop    edx
  40670a:	and    ebp,0x6c8e09cd
	...
  406720:	add    BYTE PTR [eax],al
  406722:	dec    ebx
  406723:	push   es
  406724:	xchg   dh,dh
  406726:	xchg   ecx,eax
  406727:	cli    
  406728:	push   ds
  406729:	inc    esp
  40672a:	mov    cl,0x9
  40672c:	mov    al,ds:0x14629241
  406731:	jns    0x4066e5
  406733:	in     eax,0x2c
  406735:	outs   dx,DWORD PTR ds:[esi]
  406736:	inc    eax
  406737:	mov    cl,0xd3
  406739:	add    edi,esp
  40673b:	popa   
  40673c:	push   esi
  40673d:	not    BYTE PTR [ecx-0x7ebc1706]
  406743:	or     DWORD PTR [eax-0x3a],esi
  406746:	jge    0x406725
  406748:	repz xor BYTE PTR [esi-0x5487165d],bh
  40674f:	push   ecx
  406750:	add    ebx,eax
  406752:	popa   
  406753:	mov    esi,esp
  406755:	add    esp,edx
  406757:	xchg   ebp,eax
  406758:	xchg   ecx,eax
  406759:	or     ecx,DWORD PTR [edx+0x31d4e9a3]
  40675f:	lahf   
  406760:	je     0x406765
  406762:	xchg   esi,eax
  406763:	pop    ebp
  406764:	sub    edi,esi
  406766:	cwde   
  406767:	mov    al,0x11
  406769:	fistp  DWORD PTR [ebp+0x9]
  40676c:	not    dl
  40676e:	mov    cl,0x62
  406770:	jmp    0x1dba47d1
  406775:	xor    bh,dl
  406777:	bound  edi,QWORD PTR [ecx]
  406779:	imul   ecx,DWORD PTR [ebx-0xf313ea6],0x8
  406780:	into   
  406781:	pop    esp
  406782:	sbb    BYTE PTR [esi+eax*8],ah
  406785:	imul   eax,DWORD PTR [eax],0x0
	...
  406798:	outs   dx,BYTE PTR ds:[esi]
  406799:	inc    eax
  40679a:	cmc    
  40679b:	(bad)  
  40679c:	icebp  
  40679d:	scas   eax,DWORD PTR es:[edi]
  40679e:	add    cl,al
  4067a0:	test   edi,ebp
  4067a2:	(bad)  
  4067a3:	call   0x6b43088
  4067a8:	les    eax,FWORD PTR [eax]
  4067aa:	cmp    ch,BYTE PTR [ebp+0x150093d]
  4067b0:	xchg   edx,eax
  4067b1:	(bad)  
  4067b2:	out    dx,eax
  4067b3:	dec    edi
  4067b4:	loop   0x40680a
  4067b6:	xor    al,0x28
  4067b8:	xchg   edx,eax
  4067b9:	mov    dl,0xff
  4067bb:	hlt    
  4067bc:	lods   eax,DWORD PTR ds:[esi]
  4067bd:	add    BYTE PTR [esi+ecx*4],ch
  4067c0:	cmp    eax,0x5811e809
  4067c5:	or     edi,edi
  4067c7:	push   edx
  4067c8:	xchg   ebx,eax
  4067c9:	mov    al,ds:0x8d9a1f80
  4067ce:	cli    
  4067cf:	scas   eax,DWORD PTR es:[edi]
  4067d0:	icebp  
  4067d1:	push   ebx
  4067d2:	rcl    BYTE PTR [eax+0x46ff07ed],0x0
  4067d9:	mov    ecx,0xd766e637
  4067de:	(bad)  
  4067df:	mov    esp,0xe17507f1
  4067e4:	mov    ebp,0xed26bece
  4067e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067ea:	pop    esi
  4067eb:	xor    al,bl
  4067ed:	pop    esi
  4067ee:	add    BYTE PTR [eax+ecx*8-0x6a16980a],bh
  4067f5:	idiv   DWORD PTR [ebp+0x41546791]
  4067fb:	jmp    0x406800
	...
  40680c:	add    BYTE PTR [eax],al
  40680e:	mov    esp,0x26f60c8d
  406813:	pusha  
  406814:	call   0xff481c1f
  406819:	push   ecx
  40681a:	xchg   ebx,eax
  40681b:	(bad)  
  40681c:	out    dx,eax
  40681d:	lahf   
  40681e:	in     eax,dx
  40681f:	lods   al,BYTE PTR ds:[esi]
  406820:	xor    al,0x28
  406822:	xchg   edx,eax
  406823:	pop    es
  406824:	jne    0x406803
  406826:	ins    BYTE PTR es:[edi],dx
  406827:	lea    ecx,[eax]
  406829:	add    bh,ah
  40682b:	lods   eax,DWORD PTR ds:[esi]
  40682c:	out    0xff,al
  40682e:	xor    BYTE PTR [edi-0x3e],al
  406831:	or     bh,bh
  406833:	xor    cl,BYTE PTR [edx+0xb1330ec]
  406839:	call   0x400cea
  40683e:	les    esp,FWORD PTR [ebx+0x1e971a74]
  406844:	xor    eax,DWORD PTR [ecx-0x51]
  406847:	xor    esp,edi
  406849:	fsubr  st,st(2)
  40684b:	jl     0x40684c
  40684d:	push   eax
  40684e:	(bad)  
  40684f:	jnp    0x4068c6
  406851:	or     BYTE PTR [edi],dl
  406853:	jmp    0xab716856
  406858:	(bad)  
  406859:	shl    DWORD PTR [eax],0x7c
  40685c:	leave  
  40685d:	ret    0x6387
  406860:	push   ebp
  406861:	mov    edx,ebx
  406863:	loopne 0x406828
  406865:	cld    
  406866:	push   ebp
  406867:	arpl   WORD PTR [edx+0x8],bp
  40686a:	rcl    BYTE PTR [edx],1
  40686c:	pop    es
  40686d:	call   0x3f2249
	...
  406882:	add    BYTE PTR [eax],al
  406884:	mul    BYTE PTR [edx]
  406886:	sti    
  406887:	push   0x6f
  406889:	sub    esi,DWORD PTR [edx]
  40688b:	xor    eax,0x6068632e
  406890:	imul   ebx,DWORD PTR [esi],0xffffffff
  406893:	(bad)  
  406894:	push   0x55
  406896:	sub    DWORD PTR [ecx+0x2f],eax
  406899:	stos   DWORD PTR es:[edi],eax
  40689a:	mov    esi,0xb7c90c4
  40689f:	shr    BYTE PTR [ebx+0x3e685057],0x63
  4068a6:	out    dx,eax
  4068a7:	mov    esi,0x8757bff
  4068ac:	inc    edi
  4068ad:	jmp    ecx
  4068af:	push   eax
  4068b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068b2:	mov    es,ecx
  4068b4:	xchg   esi,eax
  4068b5:	xor    BYTE PTR [ecx+0x6a],ch
  4068b8:	xchg   esi,eax
  4068b9:	mov    eax,ds:0xf9573535
  4068be:	fiadd  DWORD PTR [edx+ebp*4-0x5c00fbc6]
  4068c5:	xor    ebx,DWORD PTR [edx]
  4068c7:	inc    ecx
  4068c8:	xchg   esi,eax
  4068c9:	and    DWORD PTR [ecx-0x3c],edi
  4068cc:	fnstcw WORD PTR [edi+0xd4abffc]
  4068d2:	shl    DWORD PTR [edi-0x69],cl
  4068d5:	stc    
  4068d6:	push   edi
  4068d7:	mov    esi,0x7eed866
  4068dc:	scas   al,BYTE PTR es:[edi]
  4068dd:	dec    esi
  4068de:	push   DWORD PTR gs:[ecx-0x563f3710]
  4068e5:	(bad)  
  4068e6:	fdivp  st(7),st
	...
  4068f8:	add    BYTE PTR [eax],al
  4068fa:	cmp    DWORD PTR [edi+ebp*1],edi
  4068fd:	inc    ecx
  4068fe:	xchg   esi,eax
  4068ff:	xor    DWORD PTR [eax+0x67fbd734],ebp
  406905:	xor    eax,0xffc362ac
  40690a:	jns    0x406928
  40690c:	aas    
  40690d:	(bad)  
  40690e:	jns    0x406921
  406910:	inc    ebx
  406911:	je     0x4068b4
  406913:	jmp    0x4068e7
  406915:	(bad)  
  406916:	jecxz  0x40691b
  406918:	pop    ebx
  406919:	or     ah,BYTE PTR [ecx+0x35]
  40691c:	imul   ebp,eax,0xff693aa3
  406922:	mov    esp,0x8342dafb
  406927:	mov    edx,0x30396802
  40692c:	ret    0x38ff
  40692f:	(bad)  
  406930:	or     al,0x29
  406932:	xlat   BYTE PTR ds:[ebx]
  406933:	sti    
  406934:	pop    edx
  406935:	ss push edx
  406937:	or     eax,0x90560b68
  40693c:	clc    
  40693d:	dec    edi
  40693e:	(bad)  
  40693f:	(bad)  
  406940:	out    0xee,al
  406942:	cdq    
  406943:	cli    
  406944:	enter  0x969,0x6
  406948:	sar    esp,0xd6
  40694b:	add    eax,0x7df9ddce
  406950:	xor    eax,0x5162572f
  406955:	and    BYTE PTR [ebx-0x5497165d],ah
  40695b:	push   0xc300
	...
  406970:	fscale 
  406972:	hlt    
  406973:	aas    
  406974:	rol    DWORD PTR ds:0x554243f2,1
  40697a:	cmp    esp,edx
  40697c:	ror    BYTE PTR [edi+0x5005be1],0x86
  406983:	push   0x68a903be
  406988:	test   eax,0x2b68d578
  40698d:	pop    edx
  40698e:	or     DWORD PTR [ebx-0x68],0xafdd6605
  406995:	add    eax,0x1471fbd4
  40699a:	push   edi
  40699b:	push   0x690a7881
  4069a0:	add    ebx,DWORD PTR [ebx+0x51]
  4069a3:	aas    
  4069a4:	jo     0x4069ab
  4069a6:	ds push 0xee3606e3
  4069ac:	cdq    
  4069ad:	cli    
  4069ae:	imul   BYTE PTR [ecx+0x45300559]
  4069b4:	call   0x9c05:0x3a7cb462
  4069bb:	idiv   DWORD PTR [ecx]
  4069bd:	or     ah,BYTE PTR ds:0x29593968
  4069c3:	out    dx,eax
  4069c4:	jecxz  0x406a40
  4069c6:	pushf  
  4069c7:	xlat   BYTE PTR cs:[ebx]
  4069c9:	bound  eax,QWORD PTR [eax]
  4069cb:	cdq    
  4069cc:	mov    ebp,0xb1eec3d7
  4069d1:	mov    dl,0x50
  4069d3:	cmp    DWORD PTR [eax],eax
	...
  4069e5:	add    dl,dh
  4069e7:	add    al,0xff
  4069e9:	into   
  4069ea:	xor    BYTE PTR [edx+0x58],bh
  4069ed:	sbb    al,0xdb
  4069ef:	add    al,0x4f
  4069f1:	into   
  4069f2:	pop    es
  4069f3:	pop    ebp
  4069f4:	call   0xff45e113
  4069f9:	and    edx,ecx
  4069fb:	popa   
  4069fc:	add    dh,al
  4069fe:	cmp    BYTE PTR [edx+0x67],bh
  406a01:	hlt    
  406a02:	rol    BYTE PTR [edi+ecx*2],cl
  406a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a06:	(bad)  
  406a07:	pop    esp
  406a08:	call   0xff45a0eb
  406a0d:	xor    edx,esp
  406a0f:	bound  eax,QWORD PTR [eax]
  406a11:	jle    0x406a03
  406a13:	jns    0x406a8a
  406a15:	mov    esp,0x7e4f04da
  406a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1b:	pop    esp
  406a1c:	call   0xff45a0e3
  406a21:	or     ecx,0xd366fec4
  406a27:	and    BYTE PTR [eax],cl
  406a29:	jmp    0x6b2c4394
  406a2e:	(bad)  
  406a2f:	push   es
  406a30:	push   0xffffffe9
  406a32:	pop    edi
  406a33:	pop    ebx
  406a34:	(bad)  
  406a35:	mov    esp,0x7c78fc6d
  406a3a:	icebp  
  406a3b:	add    ecx,DWORD PTR [ecx+0x1a78f9ac]
  406a41:	cs addr16 pop esp
  406a44:	call   0xff4423b2
  406a49:	xchg   ebx,eax
	...
  406a5a:	add    BYTE PTR [eax],al
  406a5c:	je     0x406a61
  406a5e:	jne    0x406a41
  406a60:	fisttp QWORD PTR [edi+edi*8+0x1c78b10e]
  406a67:	add    BYTE PTR [eax+0x1be80711],bl
  406a6d:	jge    0x406a6e
  406a6f:	jmp    FWORD PTR [eax]
  406a71:	adc    edi,ebx
  406a73:	jmp    DWORD PTR [edx+0x3a93e707]
  406a79:	jge    0x406a7a
  406a7b:	leave  
  406a7c:	cmp    eax,0x7454ff04
  406a81:	stos   DWORD PTR es:[edi],eax
  406a82:	push   0x0
  406a84:	push   edi
  406a85:	shl    BYTE PTR [ecx+eax*2],1
  406a88:	jmp    DWORD PTR [edi]
  406a8a:	lahf   
  406a8b:	xor    eax,0x35ff5ebe
  406a90:	lds    esp,FWORD PTR [esi+0x41]
  406a93:	add    bh,dl
  406a95:	or     al,0xc2
  406a97:	(bad)  
  406a98:	clc    
  406a99:	or     BYTE PTR [edi-0x1d03d8c],bh
  406a9f:	jne    0x406a60
  406aa1:	jl     0x406b18
  406aa3:	or     al,0x7f
  406aa5:	jnp    0x406b1c
  406aa7:	or     BYTE PTR [edi],al
  406aa9:	shl    bl,cl
  406aab:	jmp    FWORD PTR [eax]
  406aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aae:	fidivr WORD PTR [edi+0x6a7c28]
  406ab4:	xchg   edi,eax
  406ab5:	shl    BYTE PTR [ecx+eax*2],1
  406ab8:	jg     0x406ae1
  406aba:	lahf   
  406abb:	xor    eax,0x2685f3e
	...
  406ad0:	add    BYTE PTR [eax],al
  406ad2:	outs   dx,DWORD PTR ds:[esi]
  406ad3:	pop    edi
  406ad4:	sub    al,0xcf
  406ad7:	mov    eax,ds:0x9f64ffff
  406adc:	je     0x406af3
  406ade:	(bad)  
  406ae0:	jne    0x406af2
  406ae2:	test   al,0x12
  406ae4:	or     edx,DWORD PTR [eax-0x58]
  406ae7:	adc    al,BYTE PTR [edi]
  406ae9:	call   0x400eaa
  406aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aef:	in     al,dx
  406af0:	mov    esi,0x666c96ff
  406af5:	jne    0x406a9d
  406af7:	push   esp
  406af8:	lock or edi,DWORD PTR [esi-0x69becf5d]
  406aff:	add    al,0xef
  406b01:	pop    es
  406b02:	cs inc ebx
  406b04:	pop    edi
  406b05:	call   FWORD PTR [ecx]
  406b07:	inc    edx
  406b08:	inc    ecx
  406b09:	or     al,0x96
  406b0b:	inc    esi
  406b0c:	jns    0x406afa
  406b0e:	adc    eax,0x966a67bd
  406b13:	lahf   
  406b14:	cli    
  406b15:	inc    BYTE PTR [ebx+0x32be5b01]
  406b1b:	sbb    al,0x65
  406b1d:	mov    DWORD PTR [ebx-0x3b],edx
  406b20:	(bad)  
  406b22:	loope  0x406b3f
  406b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b25:	push   0xffc20e17
  406b2a:	shl    BYTE PTR [ebp-0x4],1
  406b2d:	out    0x36,eax
  406b2f:	in     al,0x64
  406b31:	jmp    FWORD PTR [esi]
  406b33:	cli    
  406b34:	add    ch,bh
	...
  406b46:	add    BYTE PTR [eax],al
  406b48:	clc    
  406b49:	pusha  
  406b4a:	js     0x406b81
  406b4c:	push   edi
  406b4d:	stc    
  406b4e:	arpl   WORD PTR [ebp-0x62],si
  406b51:	icebp  
  406b52:	mov    ch,0xfe
  406b54:	mov    eax,ds:0x9a75658b
  406b59:	jae    0x406b4a
  406b5b:	pop    es
  406b5c:	jle    0x406b9c
  406b5e:	test   al,0xff
  406b60:	mov    DWORD PTR [ebx],esi
  406b62:	inc    edx
  406b63:	add    al,0x96
  406b65:	mov    esi,0x4817ec77
  406b6a:	dec    esp
  406b6b:	div    DWORD PTR [ecx-0x57]
  406b6e:	ja     0x406bb5
  406b70:	push   0xffffffdc
  406b72:	arpl   WORD PTR [ebp-0x6e],si
  406b75:	cmp    BYTE PTR [edi],ch
  406b77:	sbb    ch,BYTE PTR [edi+0x2be802ca]
  406b7d:	arpl   WORD PTR [eax+0x4],di
  406b80:	xchg   esi,eax
  406b81:	ins    DWORD PTR es:[edi],dx
  406b82:	sub    ebp,esi
  406b84:	sbb    bl,BYTE PTR [ebx]
  406b86:	call   0xa46a018e
  406b8b:	imul   edx,DWORD PTR [esi+0x5103e962],0xffffffa8
  406b92:	cmc    
  406b93:	fs cdq 
  406b95:	(bad)  
  406b96:	jmp    0xe9cc8574
  406b9b:	fst    DWORD PTR [ecx]
  406b9d:	mov    ecx,gs
  406b9f:	jbe    0x406bf4
  406ba1:	idiv   BYTE PTR [eax]
  406ba3:	ja     0x406bc0
  406ba5:	neg    ebp
  406ba7:	fs stc 
  406ba9:	xchg   edx,eax
  406baa:	into   
  406bab:	out    dx,al
	...
  406bbc:	add    BYTE PTR [eax],al
  406bbe:	jmp    0xfea8a7c4
  406bc3:	mov    DWORD PTR [eax+0x3],ebx
  406bc6:	xchg   esi,eax
  406bc7:	ins    DWORD PTR es:[edi],dx
  406bc8:	test   eax,0x520b92ef
  406bcd:	add    dl,BYTE PTR [esi+0x7e791162]
  406bd3:	mov    ds:0x6e4b64e9,eax
  406bd8:	cmp    DWORD PTR [ecx-0x2c],0x1cd38e01
  406bdf:	adc    esi,DWORD PTR [esi+edi*2-0x5e]
  406be3:	stc    
  406be4:	jge    0x406c4a
  406be6:	inc    esi
  406be7:	xchg   esp,eax
  406be8:	sub    ecx,0x7a6e01d7
  406bee:	sbb    esi,edx
  406bf0:	pop    ebp
  406bf1:	mov    DWORD PTR fs:[edx],ecx
  406bf4:	cmp    DWORD PTR [ebp+0x3c30181],esp
  406bfa:	out    dx,al
  406bfb:	outs   dx,DWORD PTR ds:[esi]
  406bfc:	pop    ss
  406bfd:	ret    
  406bfe:	jno    0x406c00
  406c00:	jl     0x406c75
  406c02:	popa   
  406c03:	add    DWORD PTR [esi],edi
  406c05:	fs stos DWORD PTR es:[edi],eax
  406c07:	pop    esp
  406c08:	add    BYTE PTR [eax],al
  406c0a:	push   ebp
  406c0b:	add    edi,esp
  406c0d:	sbb    esp,edx
  406c0f:	add    edi,edi
  406c11:	jo     0x406bdb
  406c13:	push   es
  406c14:	neg    DWORD PTR [esi]
  406c16:	mov    edx,0x9281008c
  406c1b:	cmp    BYTE PTR [ecx-0x17],al
  406c1e:	mov    edx,0xfeefb7
	...
  406c33:	add    BYTE PTR [ebp-0x704b00ff],dh
  406c39:	dec    ebx
  406c3a:	inc    ecx
  406c3b:	jmp    0xef0120fd
  406c40:	jne    0x406c2d
  406c42:	test   ch,dl
  406c44:	ins    DWORD PTR es:[edi],dx
  406c45:	add    edi,edi
  406c47:	push   ebx
  406c48:	call   0xfe00:0xd31f168a
  406c4f:	xchg   esp,eax
  406c50:	dec    edx
  406c51:	stc    
  406c52:	inc    dh
  406c54:	jne    0x406c8d
  406c56:	sbb    dl,BYTE PTR [eax]
  406c58:	fild   DWORD PTR [eax]
  406c5a:	out    0x5d,eax
  406c5c:	push   ebx
  406c5d:	add    edi,edi
  406c5f:	pusha  
  406c60:	pop    ds
  406c61:	or     dh,bh
  406c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c64:	xor    eax,0x7211008c
  406c69:	cmp    BYTE PTR [ecx-0x17],al
  406c6c:	xor    al,0xb7
  406c6e:	out    dx,eax
  406c6f:	xchg   esi,eax
  406c70:	xor    eax,0xabbcff01
  406c75:	dec    ecx
  406c76:	inc    ecx
  406c77:	jmp    0x7701e4a9
  406c7c:	xor    eax,0xed8984eb
  406c81:	(bad)  
  406c82:	(bad)  
  406c83:	je     0x406ca4
  406c85:	sbb    esi,edi
  406c87:	pop    esi
  406c88:	cmc    
  406c89:	xchg   edx,eax
  406c8a:	push   0xa19c1b
  406c8f:	dec    esi
  406c90:	psllq  mm6,mm6
  406c93:	add    al,dl
  406c95:	cmp    edi,0x35
	...
  406ca8:	add    BYTE PTR [eax],al
  406caa:	jne    0x406cfb
  406cac:	inc    ecx
  406cad:	add    bh,dl
  406caf:	mov    bh,0xbf
  406cb1:	inc    DWORD PTR [eax-0x698b3f91]
  406cb7:	out    0xbc,eax
  406cb9:	fsubr  DWORD PTR [eax+0x1a04ff83]
  406cbf:	hlt    
  406cc0:	std    
  406cc1:	xor    al,dl
  406cc3:	jmp    0x83d164a3
  406cc8:	push   eax
  406cc9:	call   0x3f2f1d
  406cce:	xchg   esp,eax
  406ccf:	cli    
  406cd0:	or     eax,eax
  406cd2:	mov    ebp,DWORD PTR [ecx+0x50]
  406cd5:	call   0x3f2ee5
  406cda:	cmp    bl,ch
  406cdc:	fcomi  st,st(7)
  406cde:	loopne 0x406c64
  406ce0:	adc    eax,0x8363ff00
  406ce5:	mov    ebp,0xffff9cdb
  406cea:	out    dx,eax
  406ceb:	pop    ss
  406cec:	and    DWORD PTR fs:[edx-0x71],0xfffffff7
  406cf1:	inc    DWORD PTR [eax]
  406cf3:	fs je  0x406d52
  406cf6:	cmp    al,0xc2
  406cf8:	out    0xf7,eax
  406cfa:	and    BYTE PTR [ebp+0xe7c7400],al
  406d00:	(bad)  
  406d01:	push   DWORD PTR [eax]
  406d03:	sar    esi,0x75
  406d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d07:	mov    ebp,DWORD PTR [ebx-0x46]
  406d0a:	and    BYTE PTR [edi+edi*8+0xb5],al
	...
  406d1d:	add    BYTE PTR [eax],al
  406d1f:	add    BYTE PTR [ebx],dl
  406d21:	popf   
  406d22:	(bad)  
  406d23:	inc    DWORD PTR [eax]
  406d25:	sbb    eax,DWORD PTR [edi]
  406d27:	call   0x3f4a5c
  406d2c:	loopne 0x406d08
  406d2e:	out    0xf7,eax
  406d30:	xchg   esi,eax
  406d31:	cwde   
  406d32:	(bad)  
  406d33:	(bad)  
  406d34:	jmp    0x406d37
  406d36:	imul   esi,DWORD PTR [ecx-0x9d57d4],0x2b
  406d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d3e:	pop    edx
  406d3f:	call   FWORD PTR [ecx+0x38]
  406d42:	fadd   DWORD PTR [edi]
  406d44:	ds in  al,dx
  406d46:	pushf  
  406d47:	dec    DWORD PTR [ecx+0x48]
  406d4a:	cwde   
  406d4b:	loopne 0x406d96
  406d4d:	pusha  
  406d4e:	(bad)  
  406d4f:	inc    ebx
  406d51:	add    DWORD PTR [ebx-0x6b],ebp
  406d54:	in     al,dx
  406d55:	outs   dx,DWORD PTR ds:[esi]
  406d56:	(bad)  
  406d57:	jmp    ebx
  406d59:	inc    esp
  406d5a:	pop    edx
  406d5b:	jmp    DWORD PTR [ecx]
  406d5d:	add    bh,dl
  406d5f:	pop    es
  406d60:	cs cs popf 
  406d63:	call   DWORD PTR [ecx]
  406d65:	adc    BYTE PTR [edi+0x610801e4],dl
  406d6b:	call   0xffa14b97
  406d70:	stc    
  406d71:	(bad)  [edi-0x9]
  406d74:	icebp  
  406d75:	das    
  406d76:	ins    BYTE PTR es:[edi],dx
  406d77:	xchg   BYTE PTR [ebx],ch
  406d79:	sub    BYTE PTR [ecx-0x1],ah
  406d7c:	sub    edx,DWORD PTR [ecx]
  406d7e:	pop    ecx
  406d7f:	(bad)  
  406d80:	fldenv [eax]
  406d82:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  406d95:	add    cl,dl
  406d97:	iret   
  406d98:	pusha  
  406d99:	mov    ch,0xb6
  406d9b:	fbld   TBYTE PTR [eax-0x1]
  406d9e:	scas   al,BYTE PTR es:[edi]
  406d9f:	pop    eax
  406da0:	lahf   
  406da1:	(bad)  
  406da2:	mov    ecx,0xa9f096d7
  406da7:	out    dx,eax
  406da8:	pusha  
  406da9:	call   0xffa213e1
  406dae:	mov    eax,ds:0x61e95c45
  406db3:	ja     0x406e16
  406db5:	call   DWORD PTR [ecx+0x39e85ef7]
  406dbb:	arpl   WORD PTR [esi+0x4],si
  406dbe:	xchg   esi,eax
  406dbf:	sub    ebp,DWORD PTR [ebx]
  406dc1:	or     al,0x96
  406dc3:	xchg   edi,eax
  406dc4:	bound  esi,QWORD PTR [eax+0x15]
  406dc7:	daa    
  406dc8:	push   ecx
  406dc9:	out    dx,al
  406dca:	imul   ecx,DWORD PTR [edx+esi*8+0x516aeb60],0x35fe1fd9
  406dd5:	mov    ebx,ebx
  406dd7:	(bad)  
  406dd8:	pop    ebx
  406dd9:	mov    DWORD PTR [ecx-0x6d],0xa38b3591
  406de0:	jmp    0xa87869d0
  406de5:	add    esi,DWORD PTR [ecx]
  406de7:	cmp    bl,dh
  406de9:	sub    dl,bh
  406deb:	bound  edx,QWORD PTR [ecx]
  406ded:	sbb    eax,0xcfdfe56
  406df2:	push   esi
  406df3:	ja     0x406dd3
  406df5:	mov    bl,0x79
  406df7:	arpl   cx,bp
  406df9:	jo     0x406dfb
	...
  406e0b:	add    BYTE PTR [eax-0x2],cl
  406e0e:	pop    ebx
  406e0f:	pop    esp
  406e10:	data16 std 
  406e12:	push   ebx
  406e13:	or     al,0xee
  406e15:	shl    BYTE PTR [esi-0x1ef50ea0],0x9e
  406e1c:	jmp    0xea06e21e
  406e21:	xchg   edx,eax
  406e22:	push   ecx
  406e23:	arpl   WORD PTR [ebx+0x13ebe9a3],sp
  406e29:	cmp    BYTE PTR [eax],ch
  406e2b:	add    al,0xc9
  406e2d:	aaa    
  406e2e:	add    ebp,DWORD PTR [ebx]
  406e30:	push   edi
  406e31:	bound  edx,QWORD PTR [ecx-0x6a0229f8]
  406e37:	or     al,0xd6
  406e39:	jbe    0x406e31
  406e3b:	mov    bl,0x31
  406e3d:	pusha  
  406e3e:	jmp    0xf43e4eb3
  406e43:	pop    ebx
  406e44:	inc    esi
  406e45:	std    
  406e46:	(bad)  
  406e47:	sti    
  406e48:	popf   
  406e49:	or     ch,BYTE PTR [esi-0x71]
  406e4c:	idiv   ch
  406e4e:	out    0x3d,eax
  406e50:	and    ebp,edi
  406e52:	(bad)  
  406e53:	shl    esp,1
  406e55:	aaa    
  406e56:	inc    ecx
  406e57:	jmp    0x4148e652
  406e5c:	dec    esi
  406e5d:	(bad)  
  406e5e:	inc    BYTE PTR [esi-0xa]
  406e61:	ja     0x406e5f
  406e63:	ds inc eax
  406e65:	gs call 0xff3da25e
  406e6b:	and    bl,dl
  406e6d:	data16 add BYTE PTR [eax+eax*1+0x0],bh
	...
  406e81:	add    BYTE PTR [edx],dl
  406e83:	push   cs
  406e84:	and    DWORD PTR ds:0x16fef579,0xb9fca720
  406e8e:	mov    dh,0x77
  406e90:	or     al,0x6
  406e92:	mov    BYTE PTR [eax+0x29],bl
  406e95:	test   al,0x95
  406e97:	or     bh,ch
  406e99:	addr16 xchg ebp,eax
  406e9b:	bound  ecx,QWORD PTR [ebx]
  406e9d:	sub    DWORD PTR [esi-0x6a173f19],esp
  406ea3:	(bad)  
  406ea4:	(bad)  
  406ea5:	and    al,0x5a
  406ea7:	bound  eax,QWORD PTR [eax]
  406ea9:	jmp    0xd5859443
  406eae:	dec    ecx
  406eaf:	gs add cl,ch
  406eb2:	out    dx,eax
  406eb3:	cld    
  406eb4:	push   0x68fcefe9
  406eb9:	jmp    0x1a3515e4
  406ebe:	daa    
  406ebf:	out    0xf3,eax
  406ec1:	sahf   
  406ec2:	popa   
  406ec3:	std    
  406ec4:	dec    edi
  406ec5:	sahf   
  406ec6:	fcomip st,st(4)
  406ec8:	(bad)  
  406ec9:	sbb    al,0x36
  406ecb:	or     cl,bh
  406ecd:	pop    edi
  406ece:	xchg   edx,eax
  406ecf:	bound  ecx,QWORD PTR [ebx]
  406ed1:	add    bh,ch
  406ed3:	sbb    DWORD PTR [ecx+ebp*8],eax
  406ed6:	xor    esp,DWORD PTR [edi+0x0]
  406ed9:	add    BYTE PTR [edi+0x7f4127e7],dl
  406edf:	popf   
  406ee0:	jne    0x406eee
  406ee2:	out    0x90,eax
  406ee4:	mov    edi,0xff
	...
  406ef5:	add    BYTE PTR [eax],al
  406ef7:	add    al,bl
  406ef9:	mov    dh,0x89
  406efb:	sar    dl,1
  406efd:	jmp    0x9c1966f5
  406f02:	push   eax
  406f03:	push   edx
  406f04:	mov    DWORD PTR [eax-0x12670041],0x9b90f084
  406f0e:	(bad)  
  406f0f:	call   0x3f4b5b
  406f14:	and    eax,0x614e6860
  406f19:	daa    
  406f1a:	(bad)  
  406f1b:	(bad)  
  406f1c:	rcl    BYTE PTR [esi-0x64670009],cl
  406f22:	xor    eax,0xff27461a
  406f27:	out    0x57,eax
  406f29:	(bad)  
  406f2b:	push   DWORD PTR [esi-0x17]
  406f2e:	jecxz  0x406f27
  406f30:	clc    
  406f31:	pushf  
  406f32:	push   0x0
  406f34:	addr16 push ebx
  406f36:	ss inc ecx
  406f38:	out    dx,eax
  406f39:	pushf  
  406f3a:	mov    ch,0xf0
  406f3c:	rcr    BYTE PTR [edi+edi*8+0x27f882ff],1
  406f43:	inc    ecx
  406f44:	out    dx,eax
  406f45:	xchg   DWORD PTR [edx],ebx
  406f47:	mov    edi,0x85899d18
  406f4c:	fist   DWORD PTR [edi+edi*8+0x686655ff]
  406f53:	inc    eax
  406f54:	loope  0x406f7c
  406f56:	(bad)  
  406f57:	(bad)  
  406f58:	bound  ecx,QWORD PTR [edi+0xfff7]
	...
  406f6e:	xchg   esi,eax
  406f6f:	aam    0x5d
  406f71:	xor    eax,0xffc4228c
  406f76:	mov    ecx,0x99ff9ce5
  406f7b:	jb     0x406f05
  406f7d:	loopne 0x406f08
  406f7f:	je     0x406fdf
  406f81:	push   0xffffff96
  406f83:	popa   
  406f84:	leave  
  406f85:	xor    eax,0xb55e09d7
  406f8a:	xchg   BYTE PTR [esi+ebx*2-0x5a18e01],dl
  406f91:	sub    bh,dl
  406f93:	or     DWORD PTR [ebx-0x22],ebp
  406f96:	and    BYTE PTR [esi+ebx*2+0x56911389],ah
  406f9d:	call   DWORD PTR [ecx+0x1f]
  406fa0:	add    ebp,DWORD PTR [eax-0x1f]
  406fa3:	repz ret 
  406fa5:	inc    DWORD PTR [eax-0x62]
  406fa8:	push   ebx
  406fa9:	idiv   DWORD PTR [ecx]
  406fab:	pop    esp
  406fac:	pop    esi
  406fad:	xor    eax,0xffc4228c
  406fb2:	xor    DWORD PTR [ecx-0x63],ecx
  406fb5:	jmp    DWORD PTR [ecx]
  406fb7:	jb     0x406f41
  406fb9:	fsub   QWORD PTR [ecx]
  406fbb:	cld    
  406fbc:	pop    esp
  406fbd:	adc    DWORD PTR [ebx+0x6d],0x56
  406fc1:	dec    DWORD PTR [ecx]
  406fc3:	or     edi,edx
  406fc5:	fs adc eax,0xf9f76fc6
  406fcb:	sbb    eax,DWORD PTR [esp+esi*2]
  406fce:	push   edx
  406fcf:	mov    BYTE PTR [edi+0xe8],bl
	...
  406fe1:	add    BYTE PTR [eax],al
  406fe3:	add    cl,ah
  406fe5:	sub    ebx,DWORD PTR [ebp+0x0]
  406fe8:	push   0x58
  406fea:	in     al,dx
  406feb:	(bad)  
  406fec:	fldcw  WORD PTR [ebx]
  406fee:	sahf   
  406fef:	dec    DWORD PTR [ebx+0x1]
  406ff2:	imul   eax,DWORD PTR [ebx],0xe
  406ff5:	int3   
  406ff6:	pop    esp
  406ff7:	dec    DWORD PTR [ebx]
  406ff9:	bound  edx,QWORD PTR [ebp-0x620546ab]
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	cdq    
  407001:	or     bh,BYTE PTR [esi]
  407003:	pushf  
  407004:	test   eax,0xae978dfa
  407009:	repnz test DWORD PTR [ebp-0x67],ebx
  40700d:	je     0x407000
  40700f:	imul   ebx,edi,0xffffffba
  407012:	jne    0x407071
  407014:	mov    DWORD PTR [eax-0x57eaa7c],esi
  40701a:	xlat   BYTE PTR gs:[ebx]
  40701c:	xchg   ecx,eax
  40701d:	or     ah,BYTE PTR [edx]
  40701f:	pushf  
  407020:	jno    0x40701c
  407022:	push   ebp
  407023:	xchg   edi,eax
  407024:	jbe    0x407018
  407026:	dec    ebp
  407027:	pop    ebp
  407028:	popa   
  407029:	jo     0x40701c
  40702b:	imul   ebp,DWORD PTR [ebx+0x515d3dba],0xffffffb0
  407032:	adc    al,0x55
  407034:	dec    ecx
  407035:	cli    
  407036:	sub    eax,0x60a99d7
  40703b:	pushf  
  40703c:	cmp    edx,edi
  40703e:	sbb    eax,0x15f23a97
  407043:	pop    ebp
  407044:	ds dec esp
  407046:	push   edx
  407047:	pop    ebp
	...
  407058:	add    BYTE PTR [eax],al
  40705a:	and    edx,edi
  40705c:	cmp    esi,DWORD PTR [eax+0x21]
  40705f:	cli    
  407060:	std    
  407061:	imul   esi,DWORD PTR [eax+0x95cf5bd],0xffffffb0
  407068:	add    BYTE PTR [ebp+0x1],dl
  40706b:	cli    
  40706c:	shl    al,1
  40706e:	cmp    al,0xfa
  407070:	fstp   QWORD PTR [ebx+ebp*1+0x3]
  407074:	ficomp WORD PTR [ecx+ebp*8+0xa]
  407078:	loope  0x407012
  40707a:	loope  0x407075
  40707c:	lds    edx,FWORD PTR [esi+0x5cbdf1ba]
  407082:	mov    esi,0x6a72fff7
  407087:	stc    
  407088:	(bad)  
  407089:	je     0x4070f0
  40708b:	icebp  
  40708c:	(bad)  
  40708d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708e:	pop    edx
  40708f:	outs   dx,DWORD PTR ds:[esi]
  407090:	or     BYTE PTR [ecx-0x69010776],dl
  407096:	dec    edx
  407097:	scas   eax,DWORD PTR es:[edi]
  407098:	out    dx,eax
  407099:	xchg   esi,eax
  40709a:	inc    edx
  40709b:	stc    
  40709c:	out    0x8d,eax
  40709e:	(bad)  
  40709f:	stc    
  4070a0:	(bad)  
  4070a1:	jle    0x4070fb
  4070a3:	icebp  
  4070a4:	call   0xff3a58d0
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	push   0x917e7fd
  4070af:	bound  eax,QWORD PTR [eax]
  4070b1:	xor    bh,dl
  4070b3:	push   0x0
  4070b5:	mov    esp,0x2583061e
  4070ba:	ror    DWORD PTR [eax+eax*1+0xd3],0x0
	...
  4070ce:	add    BYTE PTR [eax],al
  4070d0:	mov    ecx,edi
  4070d2:	je     0x4070c5
  4070d4:	mov    ebp,0xea36b6f0
  4070d9:	jmp    0x40711f
  4070db:	sub    eax,0xa836842d
  4070e0:	xchg   ebp,eax
  4070e1:	stc    
  4070e2:	je     0x4070d5
  4070e4:	mov    ebp,0xca16fcf0
  4070e9:	stc    
  4070ea:	je     0x4070f9
  4070ec:	ret    0x86f
  4070ef:	adc    DWORD PTR [edx+edi*4-0x2],esi
  4070f3:	(bad)  
  4070f4:	pop    edi
  4070f5:	and    al,0x4
  4070f7:	jmp    0x692c5d3c
  4070fc:	pop    ecx
  4070fd:	adc    dh,bh
  4070ff:	out    0x5d,al
  407101:	out    0x44,eax
  407103:	(bad)  [edx]
  407105:	clc    
  407106:	je     0x4070ed
  407108:	dec    esp
  407109:	das    
  40710a:	sbb    al,BYTE PTR [eax]
  40710c:	(bad)  
  40710e:	out    0x0,al
  407110:	retf   
  407111:	jmp    0xa5057115
  407116:	jne    0x40cfe1
  40711c:	clc    
  40711d:	and    dh,bh
  40711f:	add    BYTE PTR [edi+0x7ac70064],ch
  407125:	xchg   edx,eax
  407126:	inc    DWORD PTR [edi]
  407128:	mov    edi,0x95006a64
  40712d:	pop    esi
  40712e:	push   0x0
  407130:	test   DWORD PTR [esi-0x73],ebx
  407133:	inc    ebp
	...
  407144:	add    BYTE PTR [eax],al
  407146:	or     ebp,DWORD PTR [edi-0x6bf47a75]
  40714c:	(bad)  
  40714d:	call   FWORD PTR [edi-0xf078a65]
  407153:	adc    ebx,edi
  407155:	call   0x405c63
  40715a:	je     0x407100
  40715c:	je     0x407163
  40715e:	(bad)  
  40715f:	cdq    
  407160:	add    DWORD PTR [eax],eax
  407162:	outs   dx,DWORD PTR ds:[esi]
  407163:	or     al,0x8a
  407165:	sub    dh,bh
  407167:	arpl   di,di
  407169:	jne    0x40719e
  40716b:	mov    ecx,ds
  40716d:	mov    ebp,0xd08b9b70
  407172:	ret    0xf3e1
  407175:	not    DWORD PTR [eax-0x68adaf65]
  40717b:	cld    
  40717c:	mov    esp,0x84e590ff
  407181:	lock sbb BYTE PTR [ebp+0xbff6aff],bl
  407188:	mov    esi,0xff643e36
  40718d:	mov    ch,0xff
  40718f:	xchg   esp,eax
  407190:	(bad)  
  407191:	push   eax
  407193:	push   edx
  407194:	sbb    ch,BYTE PTR [ecx]
  407196:	mov    esi,0x9625e85e
  40719b:	into   
  40719c:	pop    ecx
  40719d:	dec    DWORD PTR [edi]
  40719f:	jg     0x407200
  4071a1:	neg    ecx
  4071a3:	and    ch,ch
  4071a5:	(bad)  
  4071a6:	cmp    DWORD PTR [ecx+0x11],edi
  4071a9:	inc    ecx
	...
  4071ba:	add    BYTE PTR [eax],al
  4071bc:	xchg   esi,eax
  4071bd:	mov    al,0x8f
  4071bf:	lock leave 
  4071c1:	enter  0xff59,0x83
  4071c5:	arpl   WORD PTR ds:0x1d19641,bp
  4071cb:	mov    ebp,0x858bd0a9
  4071d0:	mov    dl,0xd0
  4071d2:	pop    ecx
  4071d3:	jmp    FWORD PTR [ecx+ecx*1]
  4071d6:	jmp    0x40718c
  4071d8:	enter  0x44a,0xff
  4071dc:	inc    ebx
  4071dd:	jns    0x407231
  4071df:	inc    DWORD PTR [ecx-0x50e5ef78]
  4071e5:	retf   0xe802
  4071e8:	jg     0x4071bf
  4071ea:	pop    ecx
  4071eb:	call   FWORD PTR [edi]
  4071ed:	xchg   BYTE PTR [ebx-0x9],ch
  4071f0:	popa   
  4071f1:	test   al,0xed
  4071f3:	push   ecx
  4071f5:	dec    ebx
  4071f6:	adc    DWORD PTR [ecx-0x6a],eax
  4071f9:	cmp    BYTE PTR [eax+0x5a3041f0],dl
  4071ff:	dec    DWORD PTR [ebx-0x69bed3ed]
  407205:	push   ecx
  407206:	dec    esi
  407207:	mov    esp,0x858c5831
  40720c:	ss pop eax
  40720e:	pop    edx
  40720f:	call   DWORD PTR [ebx]
  407211:	jle    0x407242
  407213:	neg    DWORD PTR [ecx]
  407215:	pusha  
  407216:	mov    bl,0x67
  407218:	dec    esp
  407219:	scas   eax,DWORD PTR es:[edi]
  40721a:	ret    
  40721b:	dec    DWORD PTR [eax]
  40721d:	ss push ebx
  40721f:	test   DWORD PTR [eax],0x0
	...
  407231:	add    BYTE PTR [ecx],al
  407233:	or     BYTE PTR [ecx+0x35],bl
  407236:	pushf  
  407237:	bound  edx,QWORD PTR [eax]
  407239:	ret    
  40723a:	icebp  
  40723b:	(bad)  
  40723c:	nop
  40723d:	cwde   
  40723e:	jmp    0x6a845439
  407243:	pop    ecx
  407244:	push   0xffffff97
  407246:	ret    0xc5ee
  407249:	pop    ecx
  40724a:	call   0x6be7:0x8658d96d
  407251:	cmp    cl,cl
  407253:	imul   BYTE PTR [ebp+0x606cb1b4]
  407259:	pop    ecx
  40725a:	mov    cl,0xa
  40725c:	cmc    
  40725d:	or     al,0xd6
  40725f:	ins    DWORD PTR es:[edi],dx
  407260:	out    dx,eax
  407261:	mov    bl,0xb9
  407263:	mov    BYTE PTR [eax+0x59],dl
  407266:	cdq    
  407267:	push   ds
  407268:	ins    BYTE PTR es:[edi],dx
  407269:	cmp    BYTE PTR [ecx-0x7610820a],cl
  40726f:	imul   al
  407271:	xchg   BYTE PTR [ebx],bl
  407273:	adc    esi,DWORD PTR [esi+0x59]
  407276:	jns    0x40720b
  407278:	rol    DWORD PTR [eax-0x58],1
  40727b:	mov    ds:0xf32358e9,eax
  407280:	pop    ebp
  407281:	pop    ecx
  407282:	popa   
  407283:	not    BYTE PTR [ebx]
  407285:	(bad)  
  407286:	scas   al,BYTE PTR es:[edi]
  407287:	mov    ds:0xb6ec6be9,eax
  40728c:	cmp    eax,0x10e01f59
  407291:	push   ecx
  407292:	inc    ecx
  407293:	imul   BYTE PTR [ecx-0x69]
	...
  4072a6:	add    BYTE PTR [eax],al
  4072a8:	xor    ch,dh
  4072aa:	and    eax,0x65659659
  4072af:	jge    0x407247
  4072b1:	(bad)  
  4072b2:	jmp    0x1647563b
  4072b7:	pop    ecx
  4072b8:	sbb    DWORD PTR [ebx-0xa],esp
  4072bb:	jg     0x4072dd
  4072bd:	arpl   cx,bp
  4072bf:	add    edx,DWORD PTR ds:0x6700ffb8
  4072c5:	cmc    
  4072c6:	(bad)  
  4072c7:	jmp    0xe9c1515a
  4072cc:	xchg   ebp,eax
  4072cd:	bound  ebp,QWORD PTR [eax-0x7]
  4072d0:	xchg   ebp,eax
  4072d1:	add    eax,0x5dd0d6be
  4072d6:	call   0xff367b53
  4072db:	(bad)  
  4072dc:	and    BYTE PTR [edi],al
  4072de:	idiv   DWORD PTR [esi-0x1e8b0a92]
  4072e4:	sub    eax,0x5eaeb4ff
  4072e9:	cmc    
  4072ea:	mov    ah,0x91
  4072ec:	inc    esi
  4072ed:	cmc    
  4072ee:	(bad)  
  4072ef:	sahf   
  4072f0:	fcomp  DWORD PTR [ebp-0x18]
  4072f3:	mov    esi,0x8efef610
  4072f8:	or     bh,bh
  4072fa:	test   BYTE PTR [esi-0xe8b0a12],0xfd
  407301:	sub    esi,DWORD PTR [ebp-0x4b0a218a]
  407307:	(bad)  
  407308:	out    0xf5,al
  40730a:	(bad)  
  40730b:	data16 add BYTE PTR [eax],al
	...
  40731e:	pusha  
  40731f:	pop    ebp
  407320:	call   0xff358be5
  407325:	push   esi
  407326:	adc    BYTE PTR [edx],al
  407328:	test   DWORD PTR [esi-0x42],0xbdf174f5
  40732f:	(bad)  
  407330:	mov    ah,0x3e
  407332:	out    dx,al
  407333:	loope  0x4072f1
  407335:	adc    esi,esp
  407337:	cmc    
  407338:	(bad)  
  407339:	jmp    0x64c3cb87
  40733e:	gs in  eax,dx
  407340:	(bad)  
  407341:	push   ds
  407342:	sub    DWORD PTR [esi+0x12],ebp
  407345:	bound  esp,QWORD PTR [eax-0x41f108e6]
  40734b:	cmc    
  40734c:	das    
  40734d:	add    BYTE PTR [eax-0x1917f8dc],bl
  407353:	jecxz  0x407353
  407355:	call   DWORD PTR [edi+eiz*2+0x26e8006a]
  40735c:	pop    es
  40735d:	call   0x3f46fc
  407362:	enter  0xe3d2,0xf7
  407366:	enter  0xe88c,0x89
  40736a:	pop    es
  40736b:	(bad)  
  40736c:	(bad)  
  40736d:	call   DWORD PTR [edx-0x76]
  407370:	idiv   edi
  407372:	or     BYTE PTR [esi-0x72f74782],al
  407378:	push   DWORD PTR [ebp-0x5b29]
  40737e:	pop    es
  40737f:	adc    DWORD PTR [edi+0xff],esi
	...
  407391:	add    BYTE PTR [eax],al
  407393:	add    BYTE PTR [eax],cl
  407395:	lea    esi,[ebp-0x72ff20]
  40739b:	call   0x3f4a37
  4073a0:	sbb    dl,dl
  4073a2:	xlat   BYTE PTR ds:[ebx]
  4073a3:	test   DWORD PTR [eax],0xc75de88c
  4073a9:	mov    edi,edi
  4073ab:	inc    edx
  4073ad:	mov    ?,edi
  4073af:	(bad)  
  4073b0:	clc    
  4073b1:	xchg   BYTE PTR [edx-0x48],dl
  4073b4:	enter  0xff8b,0x45
  4073b8:	mov    DWORD PTR [ebp-0x7437022b],0x86db75ff
  4073c2:	pushf  
  4073c3:	mov    bh,BYTE PTR [edi]
  4073c5:	pusha  
  4073c6:	leave  
  4073c7:	ret    0x6037
  4073ca:	push   ebp
  4073cb:	mov    edi,DWORD PTR [ebx-0x21]
  4073ce:	ret    
  4073cf:	cld    
  4073d0:	add    eax,0x880d6a60
  4073d5:	adc    DWORD PTR [edi],eax
  4073d7:	call   0xffd05972
  4073dc:	sbb    DWORD PTR [ebx-0x6581043f],eax
  4073e2:	push   cs
  4073e3:	inc    ecx
  4073e4:	xchg   esi,eax
  4073e5:	hlt    
  4073e6:	iret   
  4073e7:	pop    es
  4073e8:	out    dx,al
  4073e9:	outs   dx,BYTE PTR ds:[esi]
  4073ea:	pop    eax
  4073eb:	(bad)  
  4073ec:	stc    
  4073ed:	add    al,0xd0
  4073ef:	sti    
  4073f0:	icebp  
  4073f1:	xchg   esi,eax
  4073f2:	or     al,0xe8
  4073f4:	sbb    edi,ecx
  4073f6:	push   ebp
  4073f7:	inc    DWORD PTR [eax]
	...
  407409:	add    bh,cl
  40740b:	(bad)  
  40740c:	(bad)  
  40740d:	inc    DWORD PTR [edx-0x80]
  407410:	addr16 sbb edx,0xc9ff4dad
  407417:	xchg   al,al
  407419:	sti    
  40741a:	data16 lods al,BYTE PTR ds:[esi]
  40741c:	iret   
  40741d:	or     edi,DWORD PTR [ecx+0x5728f8ee]
  407423:	or     DWORD PTR [ebx+0x52],ebp
  407426:	sbb    al,0xa
  407428:	add    ecx,DWORD PTR [ebx]
  40742a:	(bad)  
  40742b:	cld    
  40742c:	jg     0x40748d
  40742e:	xchg   esp,eax
  40742f:	or     DWORD PTR [ebx],eax
  407431:	(bad)  
  407432:	fndisi(8087 only) 
  407434:	add    al,BYTE PTR [eax]
  407436:	xchg   esi,eax
  407437:	or     DWORD PTR [esi],edi
  407439:	inc    ebp
  40743a:	mov    ch,BYTE PTR [esi+edi*8-0x1]
  40743e:	jns    0x40749f
  407440:	add    al,0x6a
  407442:	xchg   esi,eax
  407443:	lsl    ebp,WORD PTR [edx-0x6a]
  407447:	xchg   al,al
  407449:	repz (bad) 
  40744b:	jle    0x4073cd
  40744d:	hlt    
  40744e:	popa   
  40744f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407450:	push   esi
  407451:	push   eax
  407452:	push   ecx
  407453:	mov    dh,0x5a
  407455:	inc    ebx
  407457:	xor    eax,0x90c246b
  40745c:	add    ecx,DWORD PTR [ebx]
  40745e:	push   esi
  40745f:	lods   eax,DWORD PTR ds:[esi]
  407460:	(bad)  
  407461:	call   0x42bd6da
  407466:	xchg   esi,eax
  407467:	mov    dh,BYTE PTR [edx+0x2b]
  40746a:	xlat   BYTE PTR ds:[ebx]
  40746b:	bound  edx,QWORD PTR [esi]
  40746d:	rol    BYTE PTR [eax],1
	...
  40747f:	add    BYTE PTR [ebp+0x119aa60a],cl
  407485:	repz jno 0x4074bb
  407488:	sbb    ebx,ebp
  40748a:	hlt    
  40748b:	dec    ebp
  40748c:	add    ebx,esi
  40748e:	cwde   
  40748f:	mov    cl,0xf1
  407491:	in     eax,0x31
  407493:	push   esi
  407494:	icebp  
  407495:	call   0xf321c905
  40749a:	fld    QWORD PTR [edi+0x55de261b]
  4074a0:	fst    DWORD PTR [ecx-0x5e7734bf]
  4074a6:	jmp    0xb63277ff
  4074ab:	push   ebp
  4074ac:	shl    edx,0xfb
  4074af:	stc    
  4074b0:	outs   dx,BYTE PTR ds:[esi]
  4074b1:	mov    eax,ds:0xb8206be9
  4074b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b7:	push   ebp
  4074b8:	pop    ds
  4074b9:	fld    QWORD PTR [ebp+ecx*2+0x402f2a1]
  4074c0:	cs xchg ebx,eax
  4074c2:	(bad)  
  4074c3:	ret    0xf191
  4074c6:	cmp    edx,DWORD PTR [ecx+eax*4-0xe]
  4074ca:	jge    0x407521
  4074cc:	retf   
  4074cd:	dec    esp
  4074ce:	rol    dl,0x79
  4074d1:	or     bh,cl
  4074d3:	cdq    
  4074d4:	jno    0x4074c8
  4074d6:	outs   dx,DWORD PTR ds:[esi]
  4074d7:	jg     0x407553
  4074d9:	cli    
  4074da:	pop    ebp
  4074db:	push   ebp
  4074dc:	in     al,dx
  4074dd:	(bad)
  4074e2:	jmp    0x40753b
	...
  4074f3:	add    BYTE PTR [eax],al
  4074f5:	add    BYTE PTR [ebx],cl
  4074f7:	repz cmp eax,0xf3f24955
  4074fd:	stc    
  4074fe:	outs   dx,BYTE PTR ds:[esi]
  4074ff:	mov    ds:0x94ade900,eax
  407504:	mov    edx,0x84dbcb2e
  407509:	adc    ebx,ebx
  40750b:	icebp  
  40750c:	(bad)  
  40750d:	xchg   ebx,eax
  40750e:	xchg   ebp,eax
  40750f:	jp     0x407580
  407511:	ficom  WORD PTR [edx+esi*8-0x3]
  407515:	push   esp
  407516:	push   0xfffffff9
  407518:	inc    BYTE PTR [esi]
  40751a:	arpl   WORD PTR [edi],si
  40751c:	sbb    dl,al
  40751e:	aam    0xf1
  407520:	out    0xbd,al
  407522:	pop    ds
  407523:	repnz (bad) 
  407525:	pusha  
  407526:	jno    0x40752a
  407528:	mul    esi
  40752a:	inc    edx
  40752b:	fild   WORD PTR [ecx+eax*8+0x39fef152]
  407532:	jmp    0xb4f1:0x9a28377b
  407539:	mov    ecx,0xbefef15a
  40753e:	nop
  40753f:	dec    esp
  407540:	sub    DWORD PTR [eax],ebp
  407542:	xchg   edx,eax
  407543:	cli    
  407544:	adc    BYTE PTR [ebx+0x4a],dh
  407547:	icebp  
  407548:	or     ch,BYTE PTR [ecx+0x5c8354d9]
  40754e:	pop    ebp
  40754f:	stc    
  407550:	(bad)  
  407551:	xchg   esi,eax
  407552:	cdq    
  407553:	jbe    0x40755f
  407555:	mov    fs,WORD PTR [ebp+0xa584e1]
	...
  40756b:	add    dl,bl
  40756d:	icebp  
  40756e:	(bad)  
  40756f:	xchg   edx,eax
  407570:	vpshlw ymm9,xmm7,xmm2
  407575:	icebp  
  407576:	(bad)  
  407577:	aam    0x95
  407579:	bound  eax,QWORD PTR [eax]
  40757b:	mov    ecx,0x5eb614fd
  407580:	retf   0x84df
  407583:	cmp    edx,ecx
  407585:	icebp  
  407586:	(bad)  
  407587:	mov    ecx,0x37933d
  40758c:	(bad)  
  40758d:	push   DWORD PTR fs:[ebp-0x6181]
  407594:	and    BYTE PTR [eax+0x1a],0x29
  407598:	(bad)  
  407599:	fs call 0xffd72c6c
  40759f:	or     ebp,DWORD PTR [edi+0x21]
  4075a2:	adc    al,BYTE PTR [ebx-0x8ca3e]
  4075a8:	mov    al,ds:0x900a73f1
  4075ad:	push   ebp
  4075ae:	pop    DWORD PTR [ebp-0x6155]
  4075b4:	xchg   esp,eax
  4075b5:	pop    ebx
  4075b6:	mov    DWORD PTR [ebp-0x6175],0x64ff
  4075c0:	lahf   
  4075c1:	mov    cs,WORD PTR [esi-0x7c6b3f4a]
  4075c7:	mov    ebp,0xffff8cdb
  4075cc:	mov    edi,0x833e18
	...
  4075e1:	add    BYTE PTR [edx+0x2a],al
  4075e4:	idiv   edi
  4075e6:	add    BYTE PTR [eax+0x75],ch
  4075e9:	ss push ebp
  4075eb:	lea    ax,[ebp-0x731d]
  4075f2:	pop    edi
  4075f3:	xchg   ebp,eax
  4075f4:	mov    ch,0xe4
  4075f6:	clc    
  4075f7:	xchg   esp,eax
  4075f8:	(bad)  
  4075f9:	call   0x3fb63b
  4075fe:	test   BYTE PTR [esp+esi*2-0x342e13f7],ah
  407605:	test   DWORD PTR [eax],0x4a750094
  40760b:	xchg   ebp,eax
  40760c:	mov    ch,0xe4
  40760e:	enter  0xff93,0xe8
  407612:	pop    ds
  407613:	retf   0xfffe
  407616:	xchg   esi,eax
  407617:	inc    eax
  407618:	mov    esp,esp
  40761a:	dec    ecx
  40761b:	mov    eax,ds:0xf9960053
  407620:	add    al,BYTE PTR [ebx-0xa459fd]
  407626:	cmp    edx,edi
  407628:	(bad)  
  407629:	push   0x15
  40762b:	jg     0x40768d
  40762d:	imul   DWORD PTR [ecx]
  40762f:	dec    ecx
  407630:	add    al,0x74
  407632:	mov    ah,0x7c
  407634:	xchg   ecx,eax
  407635:	call   0x93cf5b
  40763a:	mov    dh,BYTE PTR [edx+0x589601da]
  407640:	xchg   edx,eax
  407641:	dec    DWORD PTR [ebx+0xa75af1]
	...
  407657:	add    BYTE PTR [ecx+edi*8+0x51],al
  40765b:	jmp    FWORD PTR [ebx]
  40765d:	out    dx,al
  40765e:	pop    ecx
  40765f:	(bad)  
  407660:	jmp    0xee484e6d
  407665:	add    al,0x95
  407667:	(bad)  
  407668:	fstp   DWORD PTR [eax]
  40766a:	cwde   
  40766b:	call   0xff929739
  407670:	inc    ebx
  407671:	icebp  
  407672:	pop    edx
  407673:	in     eax,dx
  407674:	add    al,0xb1
  407676:	push   ecx
  407677:	inc    DWORD PTR [ebx]
  407679:	(bad)  
  40767a:	pop    ecx
  40767b:	push   DWORD PTR [ecx-0x5e1b6840]
  407681:	enter  0xff51,0x2b
  407685:	icebp  
  407686:	pop    edx
  407687:	lods   eax,DWORD PTR ds:[esi]
  407688:	in     al,0xd8
  40768a:	push   ecx
  40768b:	dec    DWORD PTR [ebx-0x43]
  40768e:	pop    ecx
  40768f:	dec    DWORD PTR [ecx+0x6e07d7e8]
  407695:	push   edx
  407696:	xchg   esi,eax
  407697:	(bad)  
  407698:	jns    0x407712
  40769a:	cwde   
  40769b:	loopne 0x407706
  40769d:	adc    BYTE PTR [edx-0x1],0xe3
  4076a1:	(bad)  
  4076a3:	pop    ebx
  4076a4:	and    esi,DWORD PTR [ebp+ebx*2+0x4cb55952]
  4076ab:	pop    edx
  4076ac:	push   ecx
  4076ad:	out    dx,eax
  4076ae:	inc    eax
  4076af:	dec    edx
  4076b0:	add    ebp,edi
  4076b2:	inc    ebp
  4076b3:	push   edx
  4076b4:	or     edi,esi
  4076b6:	xor    eax,0x74fa3952
  4076bb:	cwde   
	...
  4076cc:	add    BYTE PTR [eax],al
  4076ce:	xor    edi,ebp
  4076d0:	sub    eax,0x25f73e98
  4076d5:	push   edx
  4076d6:	cs mov cl,0x53
  4076d9:	push   edx
  4076da:	sbb    edi,ebp
  4076dc:	pop    ebx
  4076dd:	arpl   WORD PTR [ecx],cx
  4076df:	out    dx,eax
  4076e0:	or     eax,0x5b5305b
  4076e5:	push   edx
  4076e6:	add    DWORD PTR [ebp-0x1106a608],esi
  4076ec:	add    BYTE PTR [esi+0x2b],ch
  4076ef:	out    dx,eax
  4076f0:	in     eax,dx
  4076f1:	push   ecx
  4076f2:	push   ebx
  4076f3:	jmp    0x51dd:0xeee394cf
  4076fa:	arpl   si,bp
  4076fc:	shl    BYTE PTR [edi+0x19],0x62
  407700:	jmp    0xe99a4b3f
  407705:	mov    dh,0xc
  407707:	(bad)  
  407708:	imul   ecx,DWORD PTR [eax-0x3e],0xa3dde97b
  40770f:	out    dx,eax
  407710:	xor    edi,esp
  407712:	mov    cl,0xbc
  407714:	pop    edx
  407715:	push   ecx
  407716:	mov    eax,ds:0x2e5023d8
  40771b:	(bad)  
  40771c:	jmp    0xa2bbc781
  407721:	sbb    dl,bh
  407723:	bound  edx,QWORD PTR [ecx]
  407725:	sub    al,0xc8
  407727:	mov    ds:0x5b0350e9,eax
  40772c:	add    BYTE PTR [ecx+0x6eff0c49],al
	...
  407742:	add    BYTE PTR [eax],al
  407744:	jmp    0x3dfa6ff0
  407749:	inc    esp
  40774a:	aaa    
  40774b:	test   al,0x95
  40774d:	jp     0x407735
  40774f:	pop    ds
  407750:	push   ebp
  407751:	out    dx,al
  407752:	std    
  407753:	adc    al,0x38
  407755:	cmp    eax,DWORD PTR [ecx-0x17]
  407758:	fisttp QWORD PTR [eax+0x59e73eb8]
  40775e:	sar    BYTE PTR [ebp+0x3544db7f],0x4a
  407765:	arpl   WORD PTR [eax],ax
  407767:	push   ss
  407768:	add    al,0xee
  40776a:	je     0x40775d
  40776c:	mov    ebp,0x6716b0b5
  407771:	in     eax,dx
  407772:	je     0x407785
  407774:	addr16 ja 0x40776b
  407777:	push   es
  407778:	jmp    0x255f5fe2
  40777d:	out    dx,al
  40777e:	(bad)  
  40777f:	test   al,0xf1
  407782:	out    0xd1,eax
  407784:	add    dh,ch
  407786:	(bad)  
  407787:	push   ecx
  407788:	xor    BYTE PTR ds:0x7746e941,0x8
  40778f:	shl    DWORD PTR [edi-0x12],0xfe
  407793:	into   
  407794:	data16 ja 0x407793
  407797:	(bad)  
  407798:	call   0x20806002
  40779d:	out    dx,al
  40779e:	(bad)  
  40779f:	mov    al,ds:0x1400665b
  4077a4:	sub    edi,esi
  4077a6:	sub    BYTE PTR [ebp+0x0],0x0
	...
  4077b9:	add    BYTE PTR [ecx+0x78],dl
  4077bc:	add    BYTE PTR [ebx],dl
  4077be:	xchg   edi,eax
  4077bf:	in     eax,dx
  4077c0:	je     0x4077a3
  4077c2:	in     eax,dx
  4077c3:	inc    eax
  4077c4:	mov    dl,0x8e
  4077c6:	out    0xdb,al
  4077c8:	inc    esp
  4077c9:	add    BYTE PTR [ebx],bl
  4077cb:	or     edi,edi
  4077cd:	dec    DWORD PTR [eax]
  4077cf:	shl    DWORD PTR [edi+0x7b],cl
  4077d2:	xor    BYTE PTR [eax],ah
  4077d4:	jmp    DWORD PTR [edi-0x10]
  4077d7:	dec    edx
  4077d8:	inc    ecx
  4077d9:	add    al,bh
  4077db:	adc    al,0x7
  4077dd:	call   0x3fb0a7
  4077e2:	call   0x634072fb
  4077e7:	jmp    0x92fdbbd2
  4077ec:	dec    ecx
  4077ee:	ins    DWORD PTR es:[edi],dx
  4077ef:	add    BYTE PTR gs:[ebp-0x4c],dl
  4077f3:	lea    eax,[ebx-0xf0843c]
  4077f9:	imul   ebx,DWORD PTR [edi],0x87087592
  4077ff:	jp     0x4077b2
  407801:	jmp    FWORD PTR [eax+0x17fc4568]
  407807:	popa   
  407808:	add    bh,ch
  40780a:	pop    ecx
  40780b:	or     DWORD PTR [eax+0x68612e37],edx
  407811:	xchg   esi,eax
  407812:	xor    BYTE PTR [eax],ah
  407814:	(bad)  
  407815:	(bad)  
  407816:	(bad)  
  407817:	jmp    0x9d172802
  40781c:	jmp    FWORD PTR [edx+0x0]
	...
  40782f:	add    bh,ch
  407831:	or     dl,dl
  407833:	aaa    
  407834:	jle    0x40789c
  407836:	push   0xff27a0b9
  40783b:	inc    dl
  40783d:	cli    
  40783e:	daa    
  40783f:	inc    ecx
  407840:	scas   eax,DWORD PTR es:[edi]
  407841:	mov    BYTE PTR [esi+0xb9ce8b7],dl
  407847:	shl    BYTE PTR [ebx+0x3a],0x68
  40784b:	scas   eax,DWORD PTR es:[edi]
  40784c:	shl    BYTE PTR ds:0x74fff,0xb7
  407853:	call   DWORD PTR [esi-0x69984c2c]
  407859:	stc    
  40785a:	pop    ebp
  40785b:	mov    esi,0x41178aee
  407860:	xchg   esi,eax
  407861:	dec    ecx
  407862:	dec    edi
  407863:	jne    0x407803
  407865:	loope  0x407880
  407867:	fldcw  WORD PTR [ecx+0x7d]
  40786a:	pop    esp
  40786b:	push   esi
  40786c:	sub    al,BYTE PTR [ebp-0x721c00b1]
  407872:	dec    edi
  407873:	jne    0x407813
  407875:	mov    eax,ds:0x9d49b13d
  40787a:	cmp    eax,0xb7f99ac2
  40787f:	mov    ch,BYTE PTR [edx]
  407881:	jns    0x4078cb
  407883:	cld    
  407884:	enter  0xd8cc,0xff
  407888:	mov    edi,0x8e754e0a
  40788d:	push   ecx
  40788e:	(bad)  [eax+0x457d4d19]
	...
  4078a4:	add    BYTE PTR [eax],al
  4078a6:	adc    al,BYTE PTR [ecx-0x4541cce7]
  4078ac:	add    cl,BYTE PTR [ebx+0x411aacc3]
  4078b2:	xchg   esi,eax
  4078b3:	jns    0x4078c4
  4078b5:	add    BYTE PTR [edx-0x40],ch
  4078b8:	fcmovu st,st(6)
  4078ba:	mov    eax,ds:0xee5702ba
  4078bf:	leave  
  4078c0:	test   BYTE PTR [eax],al
  4078c2:	xchg   esi,eax
  4078c3:	lock inc edx
  4078c5:	je     0x407942
  4078c7:	sub    ebx,DWORD PTR [ebx+edx*8+0xb]
  4078cb:	sbb    eax,0xecae684e
  4078d0:	ret    
  4078d1:	dec    DWORD PTR [ecx+0x11]
  4078d4:	push   ecx
  4078d5:	mov    bh,0xb1
  4078d7:	mov    ah,0xb2
  4078d9:	addr16 xchg esi,eax
  4078db:	stc    
  4078dc:	pop    ebp
  4078dd:	mov    esi,0xd8a66246
  4078e2:	xchg   ecx,eax
  4078e3:	cli    
  4078e4:	ret    0x9138
  4078e7:	jmp    0x407869
  4078e9:	pop    edx
  4078ea:	inc    ebp
  4078eb:	jmp    0x40787a
  4078ed:	pop    edx
  4078ee:	xchg   edi,eax
  4078ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078f0:	imul   ecx,DWORD PTR ds:0xc5837596,0x8ca92f6d
  4078fa:	imul   ebp,ebx,0xbc644e6d
  407900:	and    BYTE PTR [edi],al
  407902:	jecxz  0x4078b9
  407904:	pop    ebp
  407905:	fmul   DWORD PTR [ebp-0x15]
  407908:	(bad)  
	...
  40791a:	add    BYTE PTR [eax],al
  40791c:	xor    DWORD PTR [ebx-0x74beb168],esp
  407922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407923:	cmp    al,0x54
  407925:	jmpw   0x95e1
  407929:	(bad)  
  40792a:	imul   eax,DWORD PTR [edi+0x2a],0x87d9e978
  407931:	jmp    0x4078ce
  407933:	sti    
  407934:	xor    ecx,edi
  407936:	pop    eax
  407937:	dec    esi
  407938:	adc    ecx,ebx
  40793a:	stos   DWORD PTR es:[edi],eax
  40793b:	dec    edi
  40793c:	jle    0x4079a0
  40793e:	jmp    0x5bab9a1
  407943:	push   ss
  407944:	push   edi
  407945:	bound  edx,QWORD PTR [ecx-0x165e56ae]
  40794b:	dec    esi
  40794c:	arpl   WORD PTR [edx+0x1],bx
  40794f:	xchg   esp,eax
  407950:	mov    esi,0x634de5ea
  407955:	out    dx,al
  407956:	fst    st(7)
  407958:	cdq    
  407959:	cli    
  40795a:	loop   0x4078ee
  40795c:	leave  
  40795d:	jmp    0x791c:0x629a429f
  407964:	stos   BYTE PTR es:[edi],al
  407965:	loopne 0x40790b
  407967:	xor    BYTE PTR [ecx+0x29b5ffea],ch
  40796d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40796e:	cld    
  40796f:	sbb    DWORD PTR [ebx+0x75],edx
  407972:	or     al,0xa6
  407974:	or     DWORD PTR [eax+0x29],0xccfa9a28
  40797b:	ins    BYTE PTR es:[edi],dx
  40797c:	xchg   edx,eax
  40797d:	bound  ecx,QWORD PTR [ebx]
  40797f:	test   eax,0x0
	...
  407990:	add    BYTE PTR [eax],al
  407992:	sbb    edi,0xffffffa0
  407995:	call   0x2507dc2f
  40799a:	loop   0x4079fe
  40799c:	add    cl,ch
  40799e:	xchg   ebp,eax
  40799f:	and    DWORD PTR [ebp+0x75],eax
  4079a2:	shl    DWORD PTR [ecx+0x0],cl
  4079a5:	jmp    0xe9a963e9
  4079aa:	outs   dx,DWORD PTR ds:[esi]
  4079ab:	jmp    0xb9f4:0x9fc8e968
  4079b2:	rcr    bh,0xf3
  4079b5:	ds retf 
  4079b7:	jmp    0xf289b80b
  4079bc:	(bad)  
  4079bd:	mov    esp,0x649efad9
  4079c2:	call   0xe95f:0x3e290b62
  4079c9:	test   DWORD PTR [edx+eiz*2+0x3a8e8100],edx
  4079d0:	inc    ecx
  4079d1:	jmp    0x114ce928
  4079d6:	push   esp
  4079d7:	mov    al,0xfe
  4079d9:	(bad)  
  4079da:	and    eax,0x1164cfdd
  4079df:	out    dx,eax
  4079e0:	imul   dh
  4079e2:	push   edx
  4079e3:	xchg   edx,eax
  4079e4:	push   edx
  4079e5:	rol    DWORD PTR [edi],1
  4079e7:	mov    cl,0xfe
  4079e9:	fimul  WORD PTR [edi+ebx*8-0x11]
  4079ed:	ficomp WORD PTR [edx-0x17]
  4079f0:	out    0xe1,eax
  4079f2:	es jmp 0x0:0xfe
	...
  407a06:	add    BYTE PTR [eax],al
  407a08:	gs pop esi
  407a0a:	push   0xff259719
  407a0f:	(bad)  
  407a10:	sub    dl,BYTE PTR [ebp-0x690f0009]
  407a16:	xor    eax,0xff24c61a
  407a1b:	out    0x87,eax
  407a1d:	iret   
  407a1e:	(bad)  
  407a1f:	push   esi
  407a21:	loopne 0x407a06
  407a23:	not    DWORD PTR [eax]
  407a25:	xchg   esi,eax
  407a26:	push   0x0
  407a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a29:	in     eax,dx
  407a2a:	ss inc ecx
  407a2c:	jg     0x4079c4
  407a2e:	mov    ch,0xf0
  407a30:	call   0x2b4079cb
  407a35:	sti    
  407a36:	daa    
  407a37:	inc    ecx
  407a38:	outs   dx,DWORD PTR ds:[esi]
  407a39:	(bad)  
  407a3a:	jmp    0xd385:0x8996f0b5
  407a41:	mov    ?,edi
  407a43:	call   DWORD PTR [ebp+0x65]
  407a46:	push   0xff259710
  407a4b:	(bad)  
  407a4c:	stos   BYTE PTR es:[edi],al
  407a4d:	xchg   ebp,eax
  407a4e:	idiv   edi
  407a50:	pusha  
  407a51:	xchg   esi,eax
  407a52:	xor    eax,0xff25961a
  407a57:	out    0x63,eax
  407a59:	sar    dh,1
  407a5b:	inc    DWORD PTR [esi-0x5f081820]
  407a61:	xchg   esi,eax
  407a62:	lea    eax,[ebp-0x714d]
  407a68:	pop    ds
  407a69:	or     eax,0x3821
	...
  407a7e:	ds push DWORD PTR gs:[ebp-0x6b11]
  407a86:	lock dec esi
  407a88:	sbb    ch,BYTE PTR [ecx]
  407a8a:	scas   al,BYTE PTR es:[edi]
  407a8b:	pop    esi
  407a8c:	call   0xffdda53a
  407a91:	or     edx,DWORD PTR [esi+0x1518cfbb]
  407a97:	(bad)  
  407a98:	daa    
  407a99:	idiv   DWORD PTR [ecx-0x798affe1]
  407a9f:	test   al,0x13
  407aa1:	(bad)  
  407aa2:	adc    ebx,DWORD PTR [ebx]
  407aa4:	push   ebx
  407aa5:	jmp    DWORD PTR [ecx-0x1b89a3b6]
  407aab:	mov    edi,0xf4aaeb4a
  407ab0:	inc    edx
  407ab1:	je     0x407a43
  407ab3:	sub    DWORD PTR [edx+ebp*2+0x44],ebx
  407ab7:	(bad)  [edx-0x39]
  407aba:	adc    ebx,edx
  407abc:	push   edx
  407abd:	push   DWORD PTR [ecx+0xf]
  407ac0:	add    eax,DWORD PTR [eax]
  407ac2:	xchg   esi,eax
  407ac3:	jl     0x407a4e
  407ac5:	in     al,0x69
  407ac7:	jns    0x407b14
  407ac9:	add    dl,ah
  407acb:	test   al,0x85
  407acd:	mov    ebp,0xff4b9142
  407ad2:	xchg   esi,eax
  407ad3:	add    eax,0xa20382b9
  407ad8:	push   ebx
  407ad9:	(bad)  
  407ada:	cmp    edx,edi
  407adc:	into   
  407add:	inc    esp
  407ade:	mov    esi,0xef02f9
	...
  407af3:	add    al,ch
  407af5:	xor    cl,dl
  407af7:	pop    es
  407af8:	cmp    ebx,DWORD PTR cs:[edx-0x6ebee601]
  407aff:	in     al,dx
  407b00:	or     DWORD PTR [ecx+0x4b],ecx
  407b03:	inc    DWORD PTR [ebx+0x31155b01]
  407b09:	pop    ecx
  407b0a:	dec    ebx
  407b0b:	inc    DWORD PTR [ebx+0x52]
  407b0e:	push   ebx
  407b0f:	push   ecx
  407b11:	call   0xf93e82e5
  407b16:	cdq    
  407b17:	jmp    ecx
  407b19:	clc    
  407b1a:	(bad)  
  407b1b:	in     al,0xe1
  407b1d:	(bad)  
  407b1e:	out    0x4a,al
  407b20:	shr    DWORD PTR [ebp-0xf],1
  407b23:	pop    ebx
  407b24:	iret   
  407b25:	mov    eax,0xadc14ad5
  407b2a:	enter  0xb952,0xe7
  407b2e:	(bad)
  407b31:	cli    
  407b32:	outs   dx,DWORD PTR ds:[esi]
  407b33:	cdq    
  407b34:	test   eax,0xba90b5e7
  407b39:	out    dx,eax
  407b3a:	lods   eax,DWORD PTR ds:[esi]
  407b3b:	dec    edx
  407b3c:	scas   al,BYTE PTR es:[edi]
  407b3d:	in     eax,dx
  407b3e:	push   edi
  407b3f:	dec    edx
  407b40:	xchg   ecx,eax
  407b41:	out    0x53,eax
  407b43:	push   edi
  407b44:	and    edi,0xb16c5b95
  407b4a:	lea    ecx,[edx+0x79]
  407b4d:	lods   eax,DWORD PTR ds:[esi]
  407b4e:	nop
  407b4f:	push   edx
  407b50:	jno    0x407b39
  407b52:	nop
  407b53:	sub    ah,BYTE PTR [edi]
  407b55:	out    0x75,eax
  407b57:	dec    edx
	...
  407b68:	add    BYTE PTR [eax],al
  407b6a:	sub    esi,edx
  407b6c:	jne    0x407bb8
  407b6e:	pop    ecx
  407b6f:	cli    
  407b70:	cmp    al,0x94
  407b72:	push   ecx
  407b73:	out    0x5d,eax
  407b75:	rol    BYTE PTR [ecx-0x7],0xc6
  407b79:	dec    ecx
  407b7a:	inc    ecx
  407b7b:	out    0x4d,eax
  407b7d:	sar    BYTE PTR ds:0x967fe6fa,1
  407b83:	bound  esi,QWORD PTR [eax]
  407b85:	inc    ebp
  407b86:	sahf   
  407b87:	bound  ebx,QWORD PTR [esi+edi*2+0x4724e332]
  407b8e:	lods   al,BYTE PTR ds:[esi]
  407b8f:	bound  edx,QWORD PTR [ebx-0xe92ef0a]
  407b95:	pop    ebx
  407b96:	lock mov bh,0x15
  407b99:	dec    edx
  407b9a:	setge  BYTE PTR ds:0xa82aafdb
  407ba1:	add    esi,ecx
  407ba3:	ins    BYTE PTR es:[edi],dx
  407ba4:	icebp  
  407ba5:	pop    ebx
  407ba6:	sub    al,0xff
  407ba9:	cmc    
  407baa:	dec    edi
  407bab:	out    0x74,eax
  407bad:	in     eax,dx
  407bae:	dec    edi
  407baf:	ins    DWORD PTR es:[edi],dx
  407bb0:	or     cl,dl
  407bb2:	lds    esi,FWORD PTR [edi+0x248ddefe]
  407bb8:	add    al,0xe9
  407bba:	lock fucomi st,st(3)
  407bbd:	push   0x56
  407bbf:	out    0x69,al
  407bc1:	jmp    0x353fce99
  407bc6:	stos   BYTE PTR es:[edi],al
  407bc7:	(bad)  
  407bc8:	mov    ah,0x87
  407bca:	dec    edi
  407bcb:	out    0x88,eax
  407bcd:	and    al,0x0
	...
  407bdf:	add    BYTE PTR [esi+0x7a],cl
  407be2:	add    cl,ch
  407be4:	out    dx,al
  407be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407be6:	addr16 xor eax,0x100a39a
  407bec:	inc    eax
  407bed:	cs inc ecx
  407bef:	jmp    0x9148ebc2
  407bf4:	pop    ecx
  407bf5:	adc    bh,bh
  407bf7:	jle    0x407bd8
  407bf9:	outs   dx,DWORD PTR ds:[esi]
  407bfa:	cld    
  407bfb:	jbe    0x407c4e
  407bfd:	pop    esi
  407bfe:	call   0xff26789a
  407c03:	xor    al,bl
  407c05:	pop    esi
  407c06:	add    BYTE PTR [edx+ecx*8+0x722d80f6],dh
  407c0d:	in     eax,dx
  407c0e:	dec    BYTE PTR [esi-0x3f]
  407c11:	lahf   
  407c12:	cld    
  407c13:	cdq    
  407c14:	fisubr WORD PTR [edi+0xc]
  407c17:	ds cdq 
  407c19:	dec    eax
  407c1a:	sub    DWORD PTR [eax+0x6a98fa95],ebp
  407c20:	xchg   edx,eax
  407c21:	bound  ecx,QWORD PTR [ebx]
  407c23:	sub    DWORD PTR [edi],ecx
  407c25:	(bad)  
  407c27:	call   0xad07dec1
  407c2c:	dec    ebp
  407c2d:	bound  eax,QWORD PTR [eax]
  407c2f:	jmp    0x8599c9
  407c34:	repz call 0x69ff:0x7ff0007
  407c3c:	out    dx,eax
  407c3d:	pop    es
  407c3e:	jmp    FWORD PTR [ecx-0x11]
  407c41:	ins    BYTE PTR es:[edi],dx
  407c42:	inc    ebp
  407c43:	hlt    
	...
  407c54:	add    BYTE PTR [eax],al
  407c56:	(bad)  
  407c57:	ins    DWORD PTR es:[edi],dx
  407c58:	test   esp,esi
  407c5a:	loopne 0x407bf6
  407c5c:	call   DWORD PTR [eax-0x18]
  407c5f:	adc    al,0xf7
  407c61:	jmp    DWORD PTR [edx-0x66]
  407c64:	call   0xa1b8d4
  407c69:	or     edi,edi
  407c6b:	adc    eax,0x603fe904
  407c70:	add    BYTE PTR [eax],al
  407c72:	push   edi
  407c73:	sub    BYTE PTR [bx+di+0x7f],al
  407c77:	call   0xffb4:0x6b270c75
  407c7e:	sub    BYTE PTR [ecx+0x64dad089],dh
  407c84:	hlt    
  407c85:	neg    DWORD PTR [eax]
  407c87:	call   0xffb3:0x1b075250
  407c8e:	call   0xe13101fb
  407c93:	call   0xfffe:0xd193e8ff
  407c9a:	mov    edx,0xe8f7d864
  407c9f:	call   0x41:0x595d6850
  407ca6:	fcom   st(4)
  407ca8:	out    dx,eax
  407ca9:	imul   DWORD PTR [eax-0x66]
  407cac:	push   DWORD PTR ds:0x414845
  407cb2:	xlat   BYTE PTR ds:[ebx]
  407cb3:	sub    dh,BYTE PTR [ebx-0x7a974701]
  407cb9:	in     al,0x0
	...
  407ccb:	add    BYTE PTR [eax-0x69950066],ah
  407cd1:	sti    
  407cd2:	ficomp DWORD PTR [edi-0x42]
  407cd5:	mov    edx,0xeb2bff02
  407cda:	dec    esi
  407cdb:	(bad)  
  407cdc:	jmp    0xaf5a89c4
  407ce1:	mov    edx,0x2827e802
  407ce6:	dec    eax
  407ce7:	call   FWORD PTR [edi]
  407ce9:	jbe    0x407d43
  407ceb:	test   ecx,0x39ffda03
  407cf1:	mov    ds:0x1496410c,al
  407cf6:	xchg   ecx,eax
  407cf7:	lock test eax,0x63ff471b
  407cfd:	add    DWORD PTR [ecx+eax*2],ebx
  407d00:	xchg   esi,eax
  407d01:	and    esi,DWORD PTR [ebx-0x4d]
  407d04:	cdq    
  407d05:	mov    bl,0x7c
  407d07:	test   DWORD PTR [esi-0x3b],edi
  407d0a:	inc    esi
  407d0b:	call   FWORD PTR [ebx]
  407d0d:	jg     0x407d37
  407d0f:	test   DWORD PTR [ecx-0x2984c33],0x70ffc411
  407d19:	daa    
  407d1a:	push   esp
  407d1b:	imul   DWORD PTR [ecx+0x65]
  407d1e:	inc    edi
  407d1f:	xor    eax,0xffc4227c
  407d24:	jno    0x407d10
  407d26:	xchg   ecx,eax
  407d27:	call   DWORD PTR [ecx-0xf]
  407d2a:	inc    edx
  407d2b:	je     0x407cdc
  407d2d:	js     0x407cb8
  407d2f:	fadd   QWORD PTR [eax]
	...
  407d41:	add    BYTE PTR [ecx-0x73],cl
  407d44:	inc    edi
  407d45:	add    al,0xc3
  407d47:	jmp    0x7761ad91
  407d4c:	imul   DWORD PTR fs:[ecx]
  407d4f:	and    eax,0x6963e7b4
  407d54:	inc    edi
  407d55:	jmp    FWORD PTR ds:0x8abffa0e
  407d5b:	(bad)  
  407d5c:	out    dx,eax
  407d5d:	mov    bl,0xf1
  407d5f:	xor    DWORD PTR [ecx+0x47],ebx
  407d62:	add    DWORD PTR [esp+ebp*2],ebx
  407d65:	fs add esp,esp
  407d68:	or     eax,0xe8e3f1f1
  407d6d:	sub    BYTE PTR [ebx],0xff
  407d70:	cmc    
  407d71:	inc    esi
  407d72:	loope  0x407dd6
  407d74:	jge    0x407d3b
  407d76:	adc    al,0xa6
  407d78:	cld    
  407d79:	dec    esi
  407d7a:	shl    ebx,1
  407d7c:	call   0x9c1fc050
  407d81:	pop    ebx
  407d82:	leave  
  407d83:	jecxz  0x407d5a
  407d85:	add    eax,DWORD PTR [edx+0x76]
  407d88:	inc    ebx
  407d89:	add    al,0x23
  407d8b:	fisub  WORD PTR [eax+0x18e3a94e]
  407d91:	inc    edi
  407d92:	jmp    0x407d92
  407d94:	mov    ebp,0x1afa9946
  407d99:	xor    DWORD PTR [ecx+0x243f1e3],edx
  407d9f:	(bad)
  407da3:	jmp    0x407d3a
  407da5:	inc    esi
	...
  407db6:	add    BYTE PTR [eax],al
  407db8:	xchg   esi,eax
  407db9:	outs   dx,BYTE PTR ds:[esi]
  407dba:	and    bl,ah
  407dbc:	jno    0x407da1
  407dbe:	xchg   ebp,eax
  407dbf:	test   DWORD PTR [ecx+0x6d],ebp
  407dc2:	icebp  
  407dc3:	pop    ebx
  407dc4:	stc    
  407dc5:	mov    dh,0x75
  407dc7:	inc    esi
  407dc8:	pop    ecx
  407dc9:	lods   eax,DWORD PTR ds:[esi]
  407dca:	jl     0x407e1a
  407dcc:	push   ecx
  407dcd:	jecxz  0x407e34
  407dcf:	rcl    BYTE PTR [ecx+0x4197a1fa],1
  407dd5:	jecxz  0x407e2c
  407dd7:	nop
  407dd8:	cs jmp 0x407e28
  407ddb:	inc    esi
  407ddc:	xor    DWORD PTR [ebp-0xf],ebp
  407ddf:	pop    ebx
  407de0:	sti    
  407de1:	mov    ch,0x3d
  407de3:	inc    esi
  407de4:	and    DWORD PTR [ebp-0x1c37ef01],ebp
  407dea:	(bad)  
  407deb:	cs es (bad) 
  407dee:	mul    BYTE PTR [esi]
  407df0:	push   eax
  407df1:	jecxz  0x407e67
  407df3:	icebp  
  407df4:	pop    ebp
  407df5:	jne    0x407da3
  407df7:	push   ss
  407df8:	push   eax
  407df9:	jecxz  0x407daf
  407dfb:	or     DWORD PTR [eax-0x1d],esp
  407dfe:	inc    BYTE PTR [esi]
  407e00:	(bad)  
  407e01:	pop    edx
  407e02:	call   0xff2387d7
  407e07:	test   BYTE PTR [ecx],0xfe
  407e0a:	imul   dh
  407e0c:	pop    ebx
  407e0d:	cli    
  407e0e:	xchg   esp,eax
  407e0f:	xchg   esi,eax
  407e10:	push   ebx
  407e11:	jecxz  0x407e11
  407e13:	xchg   esp,eax
  407e14:	pop    esi
  407e15:	jmp    0x407e15
  407e17:	(bad)  
  407e18:	pop    edx
  407e19:	fsubr  DWORD PTR [esi+0xce]
	...
  407e2b:	add    BYTE PTR [eax],al
  407e2d:	add    BYTE PTR [ebx-0x1d],bl
  407e30:	mov    ah,0xd1
  407e32:	pop    ebx
  407e33:	jecxz  0x407e33
  407e35:	rcr    ebx,1
  407e37:	mov    bl,0xfe
  407e39:	mov    dh,0x53
  407e3b:	lods   eax,DWORD PTR ds:[esi]
  407e3c:	out    dx,eax
  407e3d:	mov    dh,0xdb
  407e3f:	loope  0x407e28
  407e41:	sbb    eax,0x9efee223
  407e46:	inc    ecx
  407e47:	(bad)  
  407e49:	sub    edx,eax
  407e4b:	loope  0x407e4b
  407e4d:	mov    fs,WORD PTR [ecx-0x22]
  407e50:	out    0x47,eax
  407e52:	adc    eax,0xd4b00063
  407e57:	push   0x0
  407e59:	sbb    al,0xdf
  407e5b:	into   
  407e5c:	and    BYTE PTR [ebp-0xa8b1e1a],0xed
  407e63:	cmp    BYTE PTR [eax+0x44eb95e9],al
  407e69:	push   ecx
  407e6a:	rcl    DWORD PTR [edi-0x8],cl
  407e6d:	inc    ecx
  407e6e:	clc    
  407e6f:	adc    bh,bh
  407e71:	add    al,dl
  407e73:	pop    ebp
  407e74:	inc    ebp
  407e75:	cld    
  407e76:	pusha  
  407e77:	mov    cl,0xfa
  407e79:	(bad)  
  407e7a:	fisubr DWORD PTR ds:0x3df375ff
  407e80:	pop    ss
  407e81:	mov    ebx,0xc00b27b0
  407e86:	sub    ebp,DWORD PTR [eax-0x77]
  407e89:	inc    ebp
  407e8a:	fwait
  407e8b:	mov    esp,0x323a8cfe
  407e90:	push   eax
  407e91:	inc    DWORD PTR [eax]
	...
  407ea3:	add    BYTE PTR [edx+0x29],ch
  407ea6:	call   0xff680a26
  407eab:	or     ebp,DWORD PTR [edi-0x4097d84e]
  407eb1:	aad    0xed
  407eb3:	mov    esi,0xe806b0b0
  407eb8:	push   ss
  407eb9:	sti    
  407eba:	(bad)  
  407ebb:	jmp    eax
  407ebd:	mov    al,0xf6
  407ebf:	dec    DWORD PTR [edx-0x26]
  407ec2:	std    
  407ec3:	jne    0x407e6c
  407ec5:	cmp    eax,0x26e0abc1
  407eca:	push   DWORD PTR [ebp-0x25]
  407ecd:	es jne 0x407ecc
  407ed0:	inc    eax
  407ed1:	mov    al,0x6
  407ed3:	call   0x3f79c4
  407ed8:	and    BYTE PTR [eax-0x8ec1706],dh
  407ede:	(bad)  
  407edf:	push   DWORD PTR [esi]
  407ee1:	and    ecx,DWORD PTR [eax]
  407ee3:	add    BYTE PTR [edx+0x3b83ec5b],cl
  407ee9:	cmp    eax,0xd95aff56
  407eee:	out    0xad,al
  407ef0:	mov    WORD PTR [esi],fs
  407ef2:	dec    DWORD PTR [ebx]
  407ef4:	jg     0x407ea6
  407ef6:	add    ebx,DWORD PTR [esi-0x7a]
  407ef9:	and    ecx,DWORD PTR [eax]
  407efb:	add    BYTE PTR [esi-0x391041ba],dl
  407f01:	xor    dh,cl
  407f03:	or     edi,DWORD PTR [esi]
  407f05:	or     BYTE PTR [edi+0xff],cl
	...
  407f17:	add    BYTE PTR [eax],al
  407f19:	add    BYTE PTR [ecx],ah
  407f1b:	aam    0x42
  407f1d:	movlps xmm6,QWORD PTR ds:0x90960003
  407f24:	into   
  407f25:	sti    
  407f26:	(bad)  
  407f27:	xchg   ebx,eax
  407f28:	xchg   ebp,eax
  407f29:	inc    DWORD PTR [ecx]
  407f2b:	push   edx
  407f2c:	mov    esi,0x46fdf9eb
  407f31:	jmp    FWORD PTR [ebx-0x21]
  407f34:	inc    edx
  407f35:	jne    0x407f25
  407f37:	jb     0x407f8b
  407f39:	scas   al,BYTE PTR es:[edi]
  407f3a:	loope  0x407f1b
  407f3c:	jbe    0x407fb3
  407f3e:	jmp    0xc213:0xa67ba63
  407f45:	jmp    DWORD PTR [ebx-0x4d]
  407f48:	les    eax,FWORD PTR [eax-0x3ff2346a]
  407f4e:	inc    ebx
  407f4f:	int    0x2d
  407f51:	cmp    eax,0xb3abbb1d
  407f56:	outs   dx,BYTE PTR ds:[esi]
  407f57:	mov    al,BYTE PTR [eax+ebp*8]
  407f5a:	sbb    esp,DWORD PTR [eax+0x1b950004]
  407f60:	lea    esi,[ebp+0x7e]
  407f63:	and    al,BYTE PTR [edi+0x38]
  407f66:	xlat   BYTE PTR ds:[ebx]
  407f67:	leave  
  407f68:	fsub   st,st(7)
  407f6a:	mov    eax,ds:0x8d00044a
  407f6f:	or     DWORD PTR [ecx-0x732a82ff],edi
  407f75:	adc    BYTE PTR [eax-0x36],dl
  407f78:	add    dl,BYTE PTR [eax-0x3c]
  407f7b:	pusha  
  407f7c:	mov    ecx,0xe7
	...
  407f8d:	add    BYTE PTR [eax],al
  407f8f:	add    BYTE PTR [ecx-0x21],bl
  407f92:	or     ch,al
  407f94:	dec    edi
  407f95:	push   eax
  407f96:	inc    ebx
  407f97:	(bad)  
  407f98:	in     al,dx
  407f99:	(bad)  
  407f9b:	mov    esp,DWORD PTR [esi-0x3cfbe11e]
  407fa1:	adc    al,0xc1
  407fa3:	add    al,0x86
  407fa5:	iret   
  407fa6:	mov    es,WORD PTR [ebx-0x5d]
  407fa9:	push   0x51
  407fab:	push   eax
  407fac:	in     al,dx
  407fad:	fistp  QWORD PTR ds:0x35dea343
  407fb3:	mov    ecx,0xbb3dffd
  407fb8:	(bad)  
  407fb9:	(bad)  
  407fba:	push   edx
  407fbb:	inc    ebx
  407fbc:	add    eax,esp
  407fbe:	xchg   ebx,eax
  407fbf:	das    
  407fc0:	out    dx,al
  407fc1:	lea    eax,[edi+0x43]
  407fc4:	icebp  
  407fc5:	in     eax,dx
  407fc6:	mov    ds:0x99ca4633,eax
  407fcb:	ja     0x407fae
  407fcd:	fist   WORD PTR [ecx]
  407fcf:	add    al,0x38
  407fd1:	test   eax,0x35960c2a
  407fd6:	bound  esi,QWORD PTR [eax]
  407fd8:	adc    eax,0xc1ade4a7
  407fdd:	dec    ecx
  407fde:	hlt    
  407fdf:	inc    edx
  407fe0:	inc    ebx
  407fe1:	push   0xffffffc1
  407fe3:	(bad)  
  407fe4:	cld    
  407fe5:	(bad)  
  407fe7:	mov    WORD PTR [ebx-0x22],ss
  407fea:	push   eax
  407feb:	test   BYTE PTR [esi+0x21],bl
  407fee:	jmp    0xc1aaa335
  407ff3:	push   0x0
	...
  408005:	add    BYTE PTR [edx-0x76525221],dl
  40800b:	inc    edi
  40800c:	ret    
  40800d:	sti    
  40800e:	(bad)  
  40800f:	bound  edx,QWORD PTR [ecx]
  408011:	dec    edx
  408012:	mov    esi,0xab42e921
  408017:	jl     0x407fd9
  408019:	les    ebp,FWORD PTR [ecx-0x39]
  40801c:	test   BYTE PTR [ebx+0x61],dh
  40801f:	fcomip st,st(1)
  408021:	inc    ebx
  408022:	loop   0x4080a0
  408024:	add    BYTE PTR [ecx],al
  408026:	ret    
  408027:	call   0x98c7:0xc765e941
  40802e:	aam    0xdf
  408030:	dec    edi
  408031:	mov    ecx,0x410855d4
  408036:	js     0x408018
  408038:	dec    BYTE PTR [esi+0x7d]
  40803b:	test   al,0xac
  40803d:	inc    esi
  40803e:	aam    0x4c
  408040:	sbb    dl,BYTE PTR [ecx-0x79]
  408043:	adc    al,0xff
  408045:	mov    al,ss:0x3a0473a2
  40804b:	(bad)  
  40804c:	aaa    
  40804d:	test   al,0x95
  40804f:	xor    ch,al
  408051:	dec    edx
  408052:	sbb    bh,0xfe
  408055:	add    DWORD PTR [edx-0x3a16be66],0x543897c6
  40805f:	fisttp WORD PTR [edi-0x67]
  408062:	push   esp
  408063:	push   ebp
  408064:	or     BYTE PTR [ecx],al
  408066:	dec    eax
  408067:	loopne 0x408067
  408069:	out    dx,al
	...
  40807a:	add    BYTE PTR [eax],al
  40807c:	jl     0x408076
  40807e:	lods   al,BYTE PTR ds:[esi]
  40807f:	out    0x57,al
  408081:	dec    esp
  408082:	sbb    al,0xd1
  408084:	xor    al,0x11
  408086:	call   esi
  408088:	mov    ds:0xfa0473a2,eax
  40808d:	std    
  40808e:	aaa    
  40808f:	sub    BYTE PTR [edx+0x253ae832],bl
  408095:	(bad)  
  408097:	inc    ecx
  408098:	std    
  408099:	call   0x5867:0xc665e941
  4080a0:	xlat   BYTE PTR ds:[ebx]
  4080a1:	fisttp QWORD PTR [edi+0x39]
  4080a4:	xlat   BYTE PTR ds:[ebx]
  4080a5:	push   edi
  4080a6:	or     BYTE PTR [ecx-0x710122e5],al
  4080ac:	mov    edx,0x1800ad44
  4080b1:	and    al,0x6a
  4080b3:	and    eax,DWORD PTR [edi]
  4080b5:	push   ecx
  4080b6:	mov    cl,0xff
  4080b8:	enter  0xc06f,0x74
  4080bc:	push   edx
  4080bd:	or     bl,BYTE PTR [eax+edi*1-0x17af9e12]
  4080c4:	in     al,dx
  4080c5:	push   eax
  4080c6:	(bad)  
  4080c7:	call   DWORD PTR [edi+0x49]
  4080ca:	cmp    BYTE PTR [ecx+0x3f],al
  4080cd:	mov    dl,0xe6
  4080cf:	cmp    BYTE PTR [esi-0xaf00dd],bl
  4080d5:	and    dh,BYTE PTR [ebp+0x8]
  4080d8:	push   edi
  4080d9:	mov    bh,0xfc
  4080db:	(bad)  
  4080dc:	mov    eax,0xad368e
	...
  4080f1:	add    BYTE PTR [eax-0x648a00dd],bh
  4080f7:	and    esi,DWORD PTR [ebp+0x8]
  4080fa:	xchg   edi,eax
  4080fb:	dec    ecx
  4080fc:	stos   BYTE PTR es:[edi],al
  4080fd:	call   FWORD PTR [eax-0x10fb3dd7]
  408103:	mov    ah,0x89
  408105:	in     al,dx
  408106:	outs   dx,BYTE PTR ds:[esi]
  408107:	sub    bl,ah
  408109:	test   eax,0xbb458d22
  40810f:	mov    cl,0xfd
  408111:	jne    0x4080d2
  408113:	and    dh,BYTE PTR [ebp+0xc]
  408116:	out    0x12,eax
  408118:	jle    0x40811a
  40811a:	mov    edi,0x320fc06e
  40811f:	jecxz  0x408121
  408121:	add    BYTE PTR [edi-0x5007bad6],ch
  408127:	popa   
  408128:	add    BYTE PTR [eax],al
  40812a:	inc    eax
  40812b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40812c:	repnz push DWORD PTR [eax+0x61]
  408130:	add    BYTE PTR [edx+0x6f],ch
  408133:	ud0    ebp,DWORD PTR [ecx+0x6f]
  408137:	ud0    ecx,DWORD PTR [esi+edx*4+0x1b50388e]
  40813f:	inc    esi
  408140:	aaa    
  408141:	mul    DWORD PTR [ecx-0x1c]
  408144:	sar    dh,cl
  408146:	jecxz  0x40812b
  408148:	aas    
  408149:	jne    0x40819d
  40814b:	jecxz  0x40810e
  40814d:	jle    0x4080e5
  40814f:	retf   
  408150:	or     eax,eax
  408152:	retf   0x29ce
  408155:	add    DWORD PTR [eax],0x0
	...
  408167:	add    BYTE PTR [edi+0x1d6802cb],dl
  40816d:	arpl   bx,ax
  40816f:	jmp    FWORD PTR [eax]
  408171:	mov    dh,0x12
  408173:	call   0xff80dd32
  408178:	(bad)  
  408179:	push   eax
  40817a:	push   ebx
  40817b:	lea    ebx,[ebx]
  40817d:	lahf   
  40817e:	cmp    bh,bh
  408180:	or     ebx,edi
  408182:	aam    0xe7
  408184:	push   0x3b
  408186:	inc    eax
  408187:	dec    DWORD PTR [edi]
  408189:	inc    esi
  40818a:	xor    esi,edi
  40818c:	icebp  
  40818d:	jae    0x4081ba
  40818f:	stos   BYTE PTR es:[edi],al
  408190:	cmp    ch,BYTE PTR [eax+eax*2+0x6a]
  408194:	xchg   esi,eax
  408195:	repz cmp al,0x38
  408198:	push   edi
  408199:	retf   
  40819a:	aas    
  40819b:	mov    ch,0xc6
  40819d:	fstp   TBYTE PTR [esi]
  40819f:	dec    ecx
  4081a1:	push   ebp
  4081a2:	psubsb mm6,mm3
  4081a5:	repz dec DWORD PTR ds:[edi]
  4081a9:	inc    esi
  4081aa:	sub    bh,dh
  4081ac:	mov    cl,0xb3
  4081ae:	test   eax,0xfbc831ff
  4081b3:	inc    eax
  4081b4:	xchg   esi,eax
  4081b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b6:	js     0x4081a8
  4081b8:	mov    eax,ds:0xbff3f1b
  4081bd:	(bad)  
  4081be:	sub    dl,BYTE PTR [edx-0x76c0f2c7]
  4081c4:	sbb    esp,DWORD PTR [ebx-0x77]
  4081c7:	aaa    
  4081c8:	jns    0x4081a6
  4081ca:	adc    al,BYTE PTR [eax+eax*1]
	...
  4081dd:	add    dh,bh
  4081df:	enter  0xc4d0,0x69
  4081e3:	fst    QWORD PTR [ebx+0x34]
  4081e6:	imul   ebx,esp,0x6ee33f85
  4081ec:	xchg   ecx,eax
  4081ed:	mov    bh,0x0
  4081ef:	fdiv   QWORD PTR [ebp-0x73]
  4081f2:	adc    ecx,edi
  4081f4:	jne    0x408235
  4081f6:	inc    ecx
  4081f7:	dec    ecx
  4081f8:	jmp    0xa8dbc8a8
  4081fd:	add    esi,DWORD PTR [ecx]
  4081ff:	push   ss
  408200:	pop    ecx
  408201:	aaa    
  408202:	sub    esp,ebx
  408204:	dec    ebp
  408205:	mov    ecx,0x6ea4ca8d
  40820a:	sbb    esp,ebx
  40820c:	outs   dx,DWORD PTR ds:[esi]
  40820d:	mov    esi,edi
  40820f:	shl    DWORD PTR ds:0xc1627c3f,cl
  408215:	adc    BYTE PTR [edi+0x433ee921],bh
  40821b:	rcl    DWORD PTR ds:0x9bdbf13f,cl
  408221:	paddd  mm4,QWORD PTR [ecx]
  408224:	ds aas 
  408226:	loope  0x408211
  408228:	imul   esp,DWORD PTR [eax-0x1f],0xffffffdb
  40822c:	std    
  40822d:	adc    BYTE PTR [ebx],0xc7
  408230:	std    
  408231:	ds leave 
  408233:	bound  esi,QWORD PTR [esp+ecx*1+0x15]
  408237:	push   ds
  408238:	leave  
  408239:	ss mov ecx,0x3ab7e8db
  40823f:	fist   WORD PTR [ebx+0x2f]
	...
  408251:	add    BYTE PTR [eax],al
  408253:	add    BYTE PTR [ecx+0x2a03cddb],ah
  408259:	ds push 0xffffff80
  40825c:	scas   al,BYTE PTR es:[edi]
  40825d:	sar    DWORD PTR [ebp+0x56963e],cl
  408263:	sbb    bh,BYTE PTR [edx]
  408265:	(bad)  
  408267:	mov    esi,0xf174dc03
  40826c:	lods   eax,DWORD PTR ds:[esi]
  40826d:	push   edi
  40826e:	test   al,0x9e
  408270:	mov    al,0xdb
  408272:	mov    ah,0x85
  408274:	mov    al,ds:0x1e8efedb
  408279:	arpl   ax,bp
  40827b:	mov    dh,0xed
  40827d:	(bad)  
  40827f:	jle    0x40824f
  408281:	retf   0x76f6
  408284:	mov    bl,bl
  408286:	je     0x408269
  408288:	ins    DWORD PTR es:[edi],dx
  408289:	mov    eax,ds:0xdb7866a7
  40828e:	mov    ah,0x45
  408290:	push   0xee56fedb
  408295:	(bad)  
  408296:	call   0xff1c3035
  40829b:	inc    esi
  40829c:	sahf   
  40829d:	ret    0x3ef6
  4082a0:	rcr    bl,1
  4082a2:	je     0x408285
  4082a4:	mov    ebp,0xc02ea805
  4082a9:	(bad)  [ebp+eax*2+0x1efedbc0]
  4082b0:	cs arpl ax,bp
  4082b3:	jle    0x408332
  4082b5:	(bad)  
  4082b7:	push   cs
	...
  4082c8:	add    BYTE PTR [eax],al
  4082ca:	pop    esi
  4082cb:	(bad)  
  4082cc:	test   BYTE PTR [esi],0x98
  4082cf:	retf   0x52a0
  4082d2:	nop
  4082d3:	(bad)  
  4082d5:	cmp    al,0x75
  4082d7:	sar    esi,cl
  4082d9:	out    dx,al
  4082da:	ins    BYTE PTR es:[edi],dx
  4082db:	hlt    
  4082dc:	stos   BYTE PTR es:[edi],al
  4082dd:	out    0x7b,al
  4082df:	(bad)  [ebp+ecx*8-0x3e012495]
  4082e6:	pop    ds
  4082e7:	pop    es
  4082e8:	dec    esi
  4082ea:	arpl   WORD PTR ds:0x9cd800e8,dx
  4082f0:	(bad)  
  4082f1:	call   0x3fcef5
  4082f6:	inc    eax
  4082f7:	push   edx
  4082f8:	fdivr  st(7),st
  4082fa:	xor    BYTE PTR [eax-0x681b8a18],bl
  408300:	(bad)  
  408301:	dec    edx
  408303:	mov    ?,edi
  408305:	inc    DWORD PTR [eax]
  408307:	cwde   
  408308:	jne    0x408316
  40830a:	adc    BYTE PTR [edx],dl
  40830c:	pop    es
  40830d:	call   0x401b64
  408312:	rcl    BYTE PTR [ecx-0x10],1
  408315:	test   eax,0xd459e897
  40831b:	xchg   edi,eax
  40831c:	(bad)  
  40831d:	(bad)  
  40831e:	jmp    0xff97:0xd151e99d
  408325:	dec    DWORD PTR [edx-0x66]
  408328:	call   0xa6d5d0
  40832d:	leave  
	...
  40833e:	add    BYTE PTR [eax],al
  408340:	ins    DWORD PTR es:[edi],dx
  408341:	jb     0x408343
  408343:	push   ebp
  408344:	test   BYTE PTR [edx+0xcc3c483],dl
  40834a:	jmp    FWORD PTR [ecx-0x17]
  40834d:	xchg   esi,eax
  40834e:	jne    0x408358
  408350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408351:	or     esp,DWORD PTR [edi+0x44ed90ff]
  408357:	cld    
  408358:	pop    ss
  408359:	outs   dx,DWORD PTR ds:[esi]
  40835a:	cmp    DWORD PTR [ecx-0x11],eax
  40835d:	or     eax,0xe5ef0001
  408362:	(bad)  
  408363:	jne    0x40832c
  408365:	(bad)  
  408366:	idiv   ebp
  408368:	rcl    BYTE PTR [esi-0x5af9e898],0xfe
  40836f:	(bad)  
  408370:	call   0x7596:0xbf41297c
  408377:	or     BYTE PTR [esi-0x5e02d95d],dl
  40837d:	test   al,0x3b
  40837f:	jne    0x40831b
  408381:	mov    al,ds:0x997e07b5
  408386:	ins    BYTE PTR es:[edi],dx
  408387:	dec    DWORD PTR [ecx-0x69fbbefe]
  40838d:	outs   dx,BYTE PTR ds:[esi]
  40838e:	mov    esp,ebp
  408390:	pop    ss
  408391:	pop    es
  408392:	pop    edi
  408393:	div    DWORD PTR [ecx-0x8]
  408396:	lea    eax,[ebp+0x6a]
  408399:	fwait
  40839a:	cmp    eax,0xb5e88675
  40839f:	or     ebp,DWORD PTR [esi-0x79]
  4083a2:	mov    edi,0xff
	...
  4083b3:	add    BYTE PTR [eax],al
  4083b5:	add    BYTE PTR [ecx-0x2c],dl
  4083b8:	inc    edx
  4083b9:	movlps QWORD PTR [ecx+0x960002],xmm2
  4083c0:	(bad)  
  4083c1:	not    DWORD PTR [esi+0x590002cb]
  4083c7:	(bad)  
  4083c8:	call   DWORD PTR ss:[ecx-0x6995fd35]
  4083cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d0:	add    ch,BYTE PTR [edx-0x6a]
  4083d3:	mov    ch,0x2
  4083d5:	lea    ebx,[ebx-0x71]
  4083d8:	ror    DWORD PTR [ebx+edx*1+0x1ff3497],cl
  4083df:	sti    
  4083e0:	cmp    esi,DWORD PTR [ebp-0x2]
  4083e3:	jg     0x40839b
  4083e5:	sti    
  4083e6:	(bad)  
  4083e7:	sar    BYTE PTR [ebp+0x42c3e9ff],1
  4083ed:	je     0x40838a
  4083ef:	bound  eax,QWORD PTR [edx-0x553469ff]
  4083f5:	mov    bh,BYTE PTR [esi+0xa]
  4083f8:	add    edi,edi
  4083fa:	inc    ebx
  4083fb:	mov    ebx,0xc7f0392a
  408400:	cmp    dl,BYTE PTR [eax+0xd]
  408403:	bound  edi,QWORD PTR [ecx-0x2a31e477]
  408409:	cmp    ebp,DWORD PTR [ecx+0x6f2c3b31]
  40840f:	or     dh,cl
  408411:	cmp    ecx,DWORD PTR [edi]
  408413:	fistp  QWORD PTR [eax-0x2f276ecd]
  408419:	mov    ebx,0x0
	...
  40842a:	add    BYTE PTR [eax],al
  40842c:	aas    
  40842d:	fdiv   DWORD PTR [ebp+0x134081ae]
  408433:	std    
  408434:	(bad)  
  408435:	bound  esp,QWORD PTR [esi-0x622f998f]
  40843b:	cmp    ebp,DWORD PTR [ecx+0x4e]
  40843e:	in     eax,0x2b
  408440:	adc    al,0x6
  408442:	mov    ?,WORD PTR [ebx]
  408444:	pmaxub mm1,QWORD PTR [ebx+esi*1+0x412d851]
  40844c:	mov    esi,0x41c4b040
  408451:	fnstenv [ebx]
  408453:	xor    al,0x41
  408455:	fsub   DWORD PTR [ebp+0x3b]
  408458:	stos   DWORD PTR es:[edi],eax
  408459:	push   cx
  40845b:	mov    ds:0x8d55d7fa,eax
  408460:	sbb    eax,ebx
  408462:	push   ebp
  408463:	cmp    ebx,DWORD PTR [ecx]
  408465:	dec    ebp
  408466:	jmp    0xa8d9da16
  40846b:	add    ecx,DWORD PTR [ecx]
  40846d:	push   cs
  40846e:	cmp    DWORD PTR [ebx],esi
  408470:	add    eax,ebx
  408472:	sub    eax,0xb4ca8db1
  408477:	push   0x816fd7f1
  40847c:	cli    
  40847d:	iret   
  40847e:	adc    eax,0x81626c3b
  408483:	leave  
  408484:	sahf   
  408485:	and    ecx,ebp
  408487:	cmp    cl,BYTE PTR [ebx]
  408489:	shl    ebp,cl
  40848b:	cmp    cl,cl
  40848d:	xlat   BYTE PTR ds:[ebx]
  40848e:	(bad)  
  40848f:	jnp    0x408491
	...
  4084a1:	add    BYTE PTR [ecx+0x7d3c30ca],bl
  4084a7:	xlat   BYTE PTR ds:[ebx]
  4084a8:	mov    BYTE PTR [ebp+edi*2-0x31],ch
  4084ac:	(bad)  
  4084ad:	fdivp  st(3),st
  4084af:	xlat   BYTE PTR ds:[ebx]
  4084b0:	pop    dx
  4084b2:	mov    ds:0x26ce0022,eax
  4084b7:	shl    dh,cl
  4084b9:	(bad)  
  4084ba:	int3   
  4084bb:	xlat   BYTE PTR ds:[ebx]
  4084bc:	je     0x4084ab
  4084be:	mov    ebp,0xbcb6ad70
  4084c3:	jmp    0xd805124c
  4084c8:	(bad)  
  4084c9:	push   0xffffffee
  4084cb:	mov    esi,0x62ac9ef6
  4084d0:	jne    0x4084b2
  4084d2:	sbb    BYTE PTR ds:0xd79c96e0,dl
  4084d8:	(bad)  
  4084d9:	cld    
  4084da:	mul    bl
  4084dc:	mov    esp,0xfed7848d
  4084e1:	jmp    0x2cc3bfd7
  4084e6:	ins    DWORD PTR es:[edi],dx
  4084e7:	iret   
  4084e8:	(bad)  
  4084e9:	xchg   bp,ax
  4084eb:	dec    esi
  4084ec:	push   ebx
  4084ed:	rcl    DWORD PTR [ebp+0x5c97ef62],1
  4084f3:	dec    ebp
  4084f4:	or     BYTE PTR [ecx+0x45],al
  4084f7:	std    
  4084f8:	inc    BYTE PTR [esi-0x34]
  4084fb:	or     eax,0xd7cc36ec
  408500:	(bad)  
  408501:	mov    esp,0x87a3ca8d
	...
  408516:	add    BYTE PTR [eax],al
  408518:	mov    esp,0xbd5cfed7
  40851d:	iret   
  40851e:	(bad)  
  40851f:	push   ds
  408520:	lods   al,BYTE PTR ds:[esi]
  408521:	dec    ebp
  408522:	or     BYTE PTR [ecx],al
  408524:	pop    es
  408525:	add    bh,bh
  408527:	push   cs
  408528:	pushf  
  408529:	or     eax,0x98d000e4
  40852e:	(bad)  
  40852f:	inc    DWORD PTR [edx+0x6b]
  408532:	call   0xffdcd6bf
  408537:	inc    DWORD PTR [edx-0x4700087d]
  40853d:	cwde   
  40853e:	jne    0x408548
  408540:	(bad)  
  408541:	pop    ss
  408542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408543:	dec    eax
  408545:	cwde   
  408546:	mov    ch,0xdc
  408548:	rcr    BYTE PTR [eax+0x66d2ffff],0xe8
  40854f:	ins    BYTE PTR es:[edi],dx
  408550:	adc    DWORD PTR [edi+edi*8-0x87cfd01],ebx
  408557:	jmp    FWORD PTR [eax]
  408559:	xchg   DWORD PTR [esi-0x57],esi
  40855c:	cmp    BYTE PTR [edi+edi*8-0x6be04b],bl
  408563:	call   DWORD PTR [edi]
  408565:	or     BYTE PTR [eax-0x4a63f701],ch
  40856b:	in     al,dx
  40856c:	rcr    BYTE PTR [ebx+0x499fe8ff],1
  408572:	(bad)  
  408573:	dec    eax
  408575:	inc    ebp
  408576:	call   0xe8dc2e72
  40857b:	push   ebp
	...
  40858c:	add    BYTE PTR [eax],al
  40858e:	push   es
  40858f:	pushf  
  408590:	(bad)  
  408591:	inc    DWORD PTR [edx]
  408593:	cmp    esi,edi
  408595:	dec    eax
  408597:	xchg   BYTE PTR [edx-0x57],cl
  40859a:	enter  0xff9b,0xb5
  40859e:	iret   
  40859f:	xchg   ebx,eax
  4085a0:	(bad)  
  4085a1:	dec    eax
  4085a3:	add    eax,0x6a42ff0b
  4085a8:	call   0xffdc2eea
  4085ad:	call   DWORD PTR [edx-0x72]
  4085b0:	idiv   edi
  4085b2:	mov    BYTE PTR [esi+0x6c96a92e],al
  4085b8:	cmp    edi,edi
  4085ba:	push   ebx
  4085bb:	jae    0x4085e8
  4085bd:	push   ecx
  4085be:	rcr    BYTE PTR [ecx+edi*1-0x1],1
  4085c2:	inc    ebx
  4085c3:	xlat   BYTE PTR ds:[ebx]
  4085c4:	sub    bh,BYTE PTR [eax+0x3d]
  4085c7:	retf   
  4085c8:	add    cl,cl
  4085ca:	aam    0xb7
  4085cc:	add    dl,BYTE PTR [ebp+0x1d]
  4085cf:	mov    al,0x83
  4085d1:	les    ebp,FWORD PTR [edx-0x7695fbcf]
  4085d7:	lods   al,BYTE PTR ds:[esi]
  4085d8:	lods   eax,DWORD PTR ds:[esi]
  4085d9:	pop    es
  4085da:	scas   al,BYTE PTR es:[edi]
  4085db:	mov    esp,DWORD PTR [edx-0x1]
  4085de:	xchg   ecx,eax
  4085df:	push   edx
  4085e0:	mov    esi,0xfa4bfefb
  4085e5:	inc    eax
  4085e6:	xchg   esi,eax
  4085e7:	or     al,0xee
  4085e9:	sbb    DWORD PTR [edi-0x1400fb76],ebp
  4085ef:	shr    DWORD PTR [edx],cl
  4085f1:	test   BYTE PTR [eax],0x0
	...
  408604:	imul   esi,esp,0x37
  408607:	push   0xffc1b216
  40860c:	icebp  
  40860d:	leave  
  40860e:	add    al,BYTE PTR [eax]
  408610:	push   ss
  408611:	fsubr  QWORD PTR [ebp+0x35df3e07]
  408617:	inc    DWORD PTR [ecx+0x4c]
  40861a:	scas   al,BYTE PTR es:[edi]
  40861b:	sti    
  40861c:	cmp    esi,ecx
  40861e:	or     ch,al
  408620:	(bad)
  408623:	call   FWORD PTR [edi-0x77]
  408626:	(bad)  
  408627:	dec    edx
  408629:	inc    eax
  40862a:	daa    
  40862b:	adc    DWORD PTR [edx-0x69],0x4e11ff30
  408632:	mov    esi,0xae9466fb
  408637:	lgdtd  [esi]
  40863a:	pop    es
  40863b:	call   0x4396df
  408640:	popf   
  408641:	bound  ebp,QWORD PTR [ecx]
  408643:	or     BYTE PTR [ebx],dl
  408645:	in     eax,0xe8
  408647:	add    edx,DWORD PTR [esi-0x69c45463]
  40864d:	(bad)  
  40864e:	jmp    0xfd5f5f56
  408653:	aaa    
  408654:	xchg   ecx,eax
  408655:	(bad)  
  408656:	jmp    0xe98b4808
  40865b:	lods   eax,DWORD PTR ds:[esi]
  40865c:	mov    ecx,0x5b86e94a
  408661:	into   
  408662:	cmp    BYTE PTR [ecx+0x37d5ce13],cl
	...
  408678:	add    BYTE PTR [eax],al
  40867a:	mov    eax,ds:0xa1b1d631
  40867f:	aam    0x53
  408681:	cmp    BYTE PTR [esi-0x2a],bh
  408684:	inc    edx
  408685:	add    al,0x96
  408687:	addr16 test eax,0x1bc797b0
  40868d:	mov    DWORD PTR [ebx],edx
  40868f:	(bad)  
  408690:	mov    ch,0x37
  408692:	jno    0x4086c7
  408694:	je     0x408617
  408696:	(bad)  
  408697:	int3   
  408698:	popf   
  408699:	aaa    
  40869a:	(bad)  
  40869b:	rcr    DWORD PTR [ebx],cl
  40869d:	adc    al,0x59
  40869f:	dec    esi
  4086a0:	(bad)  [ebx]
  4086a2:	rol    BYTE PTR [edi],1
  4086a4:	xchg   BYTE PTR [edi],dh
  4086a6:	pop    ds
  4086a7:	fidivr WORD PTR [eax+0x2f]
  4086aa:	inc    ecx
  4086ab:	aam    0xe1
  4086ad:	inc    ebx
  4086ae:	ret    0x6a80
  4086b1:	jns    0x4086f5
  4086b3:	int3   
  4086b4:	gs aaa 
  4086b6:	xchg   esi,eax
  4086b7:	dec    esi
  4086b8:	add    BYTE PTR [ecx+eiz*1+0x197645d4],ch
  4086bf:	push   cs
  4086c0:	cmp    eax,0x45d4112f
  4086c5:	jno    0x4086cd
  4086c7:	int3   
  4086c8:	cmp    eax,0x4e0137
  4086cd:	loope  0x40867c
  4086cf:	mov    ds:0xd3a92ec8,eax
  4086d4:	mov    ah,0x19
  4086d6:	mov    ecx,0xf911fed3
  4086db:	sti    
  4086dc:	(bad)  
  4086dd:	push   ss
	...
  4086ee:	add    BYTE PTR [eax],al
  4086f0:	mov    eax,ds:0x1a02f81d
  4086f5:	aam    0x74
  4086f7:	add    eax,0xe97a567a
  4086fc:	xchg   ebp,eax
  4086fd:	test   eax,0x2d95e5c1
  408702:	mov    edi,ebp
  408704:	adc    al,0x9f
  408706:	sti    
  408707:	push   ebx
  408708:	xchg   edx,eax
  408709:	dec    eax
  40870a:	sbb    dh,bl
  40870c:	out    0x5b,al
  40870e:	call   0xff13be40
  408713:	pusha  
  408714:	push   esi
  408715:	xlat   BYTE PTR ds:[ebx]
  408716:	mov    WORD PTR [bp+si+0x22],cs
  40871b:	mov    esi,0x28297986
  408720:	xchg   edx,eax
  408721:	shl    DWORD PTR [ecx+eiz*8-0x43],cl
  408725:	jge    0x408726
  408727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408728:	mov    al,ds:0x5ae0a54a
  40872d:	shl    DWORD PTR [esi-0x15],cl
  408730:	xchg   ebp,eax
  408731:	bound  eax,QWORD PTR [eax-0x17a4f972]
  408737:	fiadd  DWORD PTR [eax-0x37ee012d]
  40873d:	cdq    
  40873e:	inc    ecx
  40873f:	jmp    0xc05b14c4
  408744:	pop    edx
  408745:	sar    ebp,cl
  408747:	fcomp  QWORD PTR [ebp+0x685dffca]
  40874d:	shl    DWORD PTR [edi-0x69],cl
  408750:	sbb    ah,BYTE PTR [edx]
  408752:	add    cl,al
	...
  408764:	add    BYTE PTR [eax],al
  408766:	xchg   edi,eax
  408767:	bound  eax,QWORD PTR [eax]
  408769:	add    BYTE PTR [edi-0x74],bh
  40876c:	jne    0x408776
  40876e:	addr16 jge 0x40876f
  408771:	inc    eax
  408773:	mov    WORD PTR [ebp-0x4],?
  408776:	rcl    BYTE PTR [edx],0x7
  408779:	call   0x3fc94b
  40877e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40877f:	and    DWORD PTR [eax+eax*1],eax
  408782:	sbb    ch,al
  408784:	jmp    0x408785
  408786:	sub    bl,BYTE PTR [ebx-0x18]
  408789:	hlt    
  40878a:	fs mov edi,?
  40878d:	or     ebp,DWORD PTR [edi+0x3]
  408790:	cmp    BYTE PTR [eax-0x6c],ch
  408793:	(bad)  
  408794:	aas    
  408795:	add    BYTE PTR [edi],cl
  408797:	xchg   DWORD PTR [ecx+0x508cb0ab],ecx
  40879d:	push   eax
  40879e:	inc    edi
  40879f:	pop    esi
  4087a0:	add    bh,ch
  4087a2:	add    DWORD PTR [esi],eax
  4087a4:	loopne 0x4087df
  4087a6:	mov    esi,0xcaff5066
  4087ab:	pop    esi
  4087ac:	call   0xffd8bb01
  4087b1:	pop    eax
  4087b2:	xlat   BYTE PTR ds:[ebx]
  4087b3:	gs add bh,ch
  4087b6:	add    edi,edi
  4087b8:	in     al,0x39
  4087ba:	mov    esi,0x8aff5066
  4087bf:	pop    esi
  4087c0:	call   0xffd8bb01
  4087c5:	call   0x3fb761
	...
  4087da:	add    BYTE PTR [eax],al
  4087dc:	push   es
  4087dd:	and    eax,0xdbaa0008
  4087e2:	jmp    0x408767
  4087e4:	jmp    0x408770
  4087e6:	push   0x0
  4087e8:	xchg   ebp,eax
  4087e9:	ins    DWORD PTR es:[edi],dx
  4087ea:	push   DWORD PTR [ebp+0x27]
  4087ed:	jle    0x408779
  4087ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f0:	rcl    BYTE PTR [edi+0x37964589],0xaa
  4087f7:	sbb    DWORD PTR [ecx],edx
  4087f9:	mov    bh,0xa
  4087fb:	call   0xff75b123
  408800:	ins    BYTE PTR es:[edi],dx
  408801:	pop    esp
  408802:	xor    eax,0x89238e75
  408807:	push   ecx
  408809:	sub    BYTE PTR [edx+0xaeee91b],0xe8
  408810:	pop    ss
  408811:	jno    0x408848
  408813:	(bad)  
  408814:	fldz   
  408816:	dec    DWORD PTR ss:[ebx-0x3d]
  40881a:	sub    ah,BYTE PTR [edx+esi*8-0x2b36ca98]
  408821:	mov    DWORD PTR [edx],0x81680d55
  408827:	les    esi,FWORD PTR [edx-0x41f45240]
  40882d:	sbb    al,0x69
  40882f:	jmp    DWORD PTR [ecx+0x120f42d4]
  408835:	fld    QWORD PTR [edx]
  408837:	add    BYTE PTR [esi+0x15fbbe42],dl
  40883d:	es adc al,0x0
	...
  408850:	add    BYTE PTR [eax],al
  408852:	or     al,dl
  408854:	xor    esi,DWORD PTR [ebp-0x5a]
  408857:	sbb    BYTE PTR [esi+0x68a47efb],ch
  40885d:	jmp    FWORD PTR [ecx+0x52]
  408860:	mov    esi,0xf8c9eefb
  408865:	inc    eax
  408866:	xchg   esi,eax
  408867:	clc    
  408868:	lods   eax,DWORD PTR ds:[esi]
  408869:	sti    
  40886a:	ds dec eax
  40886c:	imul   edi,edi,0xffac6b49
  408872:	inc    ecx
  408873:	loopne 0x4088e9
  408875:	push   eax
  408876:	cmp    esi,ecx
  408878:	or     ch,al
  40887a:	push   ebp
  40887b:	add    esi,DWORD PTR [edi+edi*8]
  40887e:	bound  edi,QWORD PTR ds:0xd0d1215d
  408885:	out    dx,eax
  408886:	pop    edi
  408887:	and    ebp,ecx
  408889:	xor    al,0x8b
  40888b:	into   
  40888c:	inc    eax
  40888d:	popf   
  40888e:	aas    
  40888f:	rol    DWORD PTR [ebp-0x2d],1
  408892:	jns    0x4088f7
  408894:	jmp    0x3672c0bd
  408899:	scas   al,BYTE PTR es:[edi]
  40889a:	cdq    
  40889b:	mov    edx,0xd0e94b8a
  4088a0:	adc    BYTE PTR [eax+0x38],dh
  4088a3:	rcr    DWORD PTR ds:0xa88c7fab,1
  4088a9:	add    edx,ecx
  4088ab:	push   esi
  4088ac:	or     eax,0x5fc532b
  4088b1:	xor    al,0x66
  4088b3:	cmp    ch,cl
  4088b5:	add    eax,DWORD PTR [eax]
	...
  4088c7:	add    BYTE PTR [ecx+0x2b34990f],ch
  4088cd:	pop    edx
  4088ce:	add    DWORD PTR [edx+0x1ce5d0de],eax
  4088d4:	add    al,0x8
  4088d6:	fidiv  WORD PTR [ebx]
  4088d8:	cs sbb eax,0xd191c513
  4088de:	push   ebx
  4088df:	xor    BYTE PTR [esi-0x79],bh
  4088e2:	xchg   ebx,eax
  4088e3:	xor    eax,DWORD PTR [ecx-0x69faaecd]
  4088e9:	mov    edi,0x5670d476
  4088ee:	loope  0x40890b
  4088f0:	neg    BYTE PTR [edx+0x526e33a5]
  4088f6:	inc    edi
  4088f7:	xor    ebx,DWORD PTR [ecx-0x30]
  4088fa:	sbb    esi,DWORD PTR [eax]
  4088fc:	cmp    al,BYTE PTR ds:[edi+0x33]
  408900:	dec    ecx
  408901:	call   0x2072:0x359600aa
  408908:	adc    eax,0x1074ffa7
  40890d:	shr    BYTE PTR [eax-0x2d],1
  408910:	fs push ebp
  408912:	or     BYTE PTR [ecx-0x5f],dl
  408915:	add    edi,edi
  408917:	pop    esi
  408918:	fwait
  408919:	and    eax,0x3c95c3fc
  40891e:	sbb    cl,BYTE PTR [esi+0x4f]
  408921:	push   0xcfc50be8
  408926:	(bad)  
  408927:	rcl    DWORD PTR [ebp+0x36233c],cl
	...
  40893d:	add    BYTE PTR [edi],ch
  40893f:	push   0xcfa4d7e8
  408944:	(bad)  
  408945:	xchg   ebx,eax
  408946:	xchg   ebp,eax
  408947:	cmp    al,0x1c
  408949:	push   ds
  40894a:	pop    ds
  40894b:	push   0xcf84e3e8
  408950:	inc    BYTE PTR [ecx-0x16be75d3]
  408956:	and    ebp,DWORD PTR [edx-0x1]
  408959:	je     0x408918
  40895b:	(bad)  
  40895c:	cli    
  40895d:	mul    DWORD PTR [edi+ecx*8+0x67]
  408961:	cmp    DWORD PTR [ebx-0x46acffde],0x7df174d0
  40896b:	mov    esi,0x3ac4d6fd
  408970:	push   0x68cf5313
  408975:	in     eax,0xc4
  408977:	push   ebp
  408978:	or     cl,dl
  40897a:	out    0xd0,al
  40897c:	(bad)  
  40897d:	mov    dh,0xa4
  40897f:	push   ebp
  408980:	cld    
  408981:	scas   al,BYTE PTR es:[edi]
  408982:	cs addr16 call 0xff1082a4
  408989:	mov    al,0xd3
  40898b:	data16 add BYTE PTR [ecx+edx*8],bh
  40898f:	mov    esi,0xd7ada580
  408994:	inc    BYTE PTR [eax]
  408996:	sbb    dl,ah
  408998:	inc    esp
  408999:	cld    
  40899a:	lahf   
  40899b:	xchg   ebx,eax
  40899c:	jne    0x4089ae
  40899e:	test   al,0xa
  4089a0:	or     ebp,eax
	...
  4089b2:	add    BYTE PTR [eax],al
  4089b4:	out    0xfa,eax
  4089b6:	(bad)  
  4089b7:	jmp    DWORD PTR [ebx+eiz*1]
  4089ba:	jne    0x40efb0
  4089c0:	rcr    BYTE PTR [edx+0x62ff00f6],0x0
  4089c7:	(bad)  
  4089c8:	xor    dl,BYTE PTR [edi+0x62ef07ff]
  4089ce:	push   0x0
  4089d0:	aad    0x62
  4089d2:	push   0x0
  4089d4:	aad    0x62
  4089d6:	lea    eax,[ebp-0x7d]
  4089d9:	mov    bl,0x8b
  4089db:	test   DWORD PTR [ebx+0xfffff8c],eax
  4089e1:	xchg   esp,eax
  4089e2:	jne    0x4089dc
  4089e4:	cwde   
  4089e5:	or     bh,bl
  4089e7:	call   0x3f84b1
  4089ec:	les    esp,FWORD PTR [edx]
  4089ee:	je     0x4089f5
  4089f0:	xchg   esi,eax
  4089f1:	int    0xff
  4089f3:	(bad)  
  4089f4:	mov    edi,0x6e2889ea
  4089f9:	push   WORD PTR [ebp-0x61]
  4089fd:	push   0x2d
  4089ff:	test   eax,0x8b509468
  408a04:	dec    edi
  408a05:	dec    esi
  408a06:	test   esp,esi
  408a08:	inc    eax
  408a09:	xchg   esp,eax
  408a0a:	call   DWORD PTR [eax-0x63]
  408a0d:	outs   dx,BYTE PTR ds:[esi]
  408a0e:	sbb    eax,0x899428a9
  408a13:	test   DWORD PTR [edi],ebp
  408a15:	mov    edi,?
  408a17:	inc    DWORD PTR [eax]
	...
  408a29:	add    BYTE PTR [edi],al
  408a2b:	sbb    BYTE PTR [edi+edi*8+0x67feecf8],ah
  408a32:	xchg   esi,eax
  408a33:	cld    
  408a34:	in     eax,dx
  408a35:	inc    eax
  408a36:	xchg   esi,eax
  408a37:	fdiv   QWORD PTR [esi-0x10]
  408a3a:	dec    ecx
  408a3b:	in     eax,0x30
  408a3d:	inc    ebx
  408a3f:	mov    edi,0x54fe761a
  408a44:	xor    DWORD PTR [ecx-0xc6afed],ecx
  408a4a:	and    DWORD PTR [edx-0x7dba97fe],esi
  408a50:	ret    
  408a51:	call   DWORD PTR [eax]
  408a53:	out    dx,eax
  408a54:	xor    esi,edi
  408a56:	or     DWORD PTR ds:0x33927531,ebx
  408a5c:	int    0xa7
  408a5e:	stc    
  408a5f:	mov    WORD PTR [ebx-0x7b],?
  408a62:	dec    BYTE PTR [ecx+esi*1+0x203f15ff]
  408a69:	mul    ecx
  408a6b:	test   BYTE PTR [esp+esi*2],al
  408a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a6f:	repz add al,BYTE PTR [eax]
  408a72:	shl    DWORD PTR ds:0xfa8c8e9c,0x2
  408a79:	dec    DWORD PTR [ebx]
  408a7b:	js     0x408ab6
  408a7d:	(bad)  
  408a7e:	mov    ecx,0xbe07b5cc
  408a83:	pusha  
  408a84:	cmp    edi,edi
  408a86:	test   eax,0xb10001e3
  408a8b:	add    eax,0x989b
	...
  408aa0:	pop    esp
  408aa1:	jp     0x408aa7
  408aa3:	dec    DWORD PTR [ebx-0x59]
  408aa6:	aaa    
  408aa7:	dec    DWORD PTR [ecx+0x6e07b59c]
  408aad:	call   0x38ba89eb
  408ab2:	outs   dx,BYTE PTR ds:[esi]
  408ab3:	call   0x709f21
  408ab8:	loop   0x408a85
  408aba:	call   0xee71:0x966261ff
  408ac1:	fucom  st(2)
  408ac3:	ret    0xcc51
  408ac6:	pop    ebx
  408ac7:	sbb    eax,DWORD PTR [ecx-0x33]
  408aca:	lea    esi,[eax]
  408acc:	retf   
  408acd:	pop    edx
  408ace:	xchg   ecx,eax
  408acf:	jne    0x408b20
  408ad1:	int    0x7d
  408ad3:	fwait
  408ad4:	xchg   esi,eax
  408ad5:	bound  eax,QWORD PTR [esi-0x4d14418f]
  408adb:	ret    0xcc21
  408ade:	fwait
  408adf:	sbb    esp,DWORD PTR [ecx]
  408ae1:	int    0x5d
  408ae3:	xor    BYTE PTR [ebx-0x2072bea6],cl
  408ae9:	int3   
  408aea:	dec    ebp
  408aeb:	xor    BYTE PTR [ebx-0x42],cl
  408aee:	cmp    eax,0x28b9f930
  408af3:	addr16 icebp 
  408af5:	int3   
  408af6:	xor    eax,0x2dd4fe76
  408afb:	xor    dh,ch
  408afd:	push   ss
  408afe:	dec    ebp
  408aff:	xor    cl,bl
  408b01:	int3   
  408b02:	push   ebx
  408b03:	xor    eax,DWORD PTR [eax]
	...
  408b15:	add    cl,cl
  408b17:	int3   
  408b18:	adc    eax,0xe5e4330
  408b1d:	mov    dh,0x99
  408b1f:	mov    edx,0xccb9313c
  408b24:	std    
  408b25:	jne    0x408acd
  408b27:	aam    0xf5
  408b29:	das    
  408b2a:	mov    esi,0xa13044ea
  408b2f:	int3   
  408b30:	sub    ebp,DWORD PTR [edi+ebp*4]
  408b33:	cdq    
  408b34:	fisubr WORD PTR [edi]
  408b36:	xchg   ecx,eax
  408b37:	int3   
  408b38:	pop    ebx
  408b39:	xor    BYTE PTR [esi-0x40],bh
  408b3c:	push   esi
  408b3d:	add    al,0x96
  408b3f:	cdq    
  408b40:	stos   BYTE PTR es:[edi],al
  408b41:	add    BYTE PTR [esi+0x71207235],dl
  408b47:	push   esi
  408b48:	add    ch,ah
  408b4a:	lea    ebx,[ecx+0x57b1aea7]
  408b50:	rcr    BYTE PTR ds:0xe3a3446b,0x5a
  408b57:	int3   
  408b58:	dec    esi
  408b59:	sbb    DWORD PTR [eax+0x4],0x1c6a8eff
  408b60:	push   0xbdbb95e9
  408b65:	adc    DWORD PTR [ecx+0x45e94188],esi
  408b6b:	int    0x74
  408b6d:	loope  0x408bec
  408b6f:	test   ecx,ecx
  408b71:	imul   bp,WORD PTR [edx],0xe868
  408b76:	xchg   ebp,eax
  408b77:	mov    ebx,0xc1bd
	...
  408b8c:	sbb    cl,BYTE PTR [ecx-0x331a16bf]
  408b92:	je     0x408b85
  408b94:	popf   
  408b95:	jno    0x408b60
  408b97:	sar    DWORD PTR ds:[edx-0x344672c4],0xc8
  408b9f:	sub    esp,edx
  408ba1:	retf   
  408ba2:	push   ebx
  408ba3:	jb     0x408b5b
  408ba5:	ffreep st(3)
  408ba7:	sbb    eax,0xe96a34e8
  408bac:	das    
  408bad:	imul   edi,edi,0x5cc3bd94
  408bb3:	dec    eax
  408bb4:	imul   ecx,ebx,0xd781a488
  408bba:	xor    al,0xba
  408bbc:	int    0x22
  408bbe:	add    BYTE PTR [edx-0x59],ah
  408bc1:	xchg   esp,eax
  408bc2:	sub    BYTE PTR [eax],ch
  408bc4:	xchg   edx,eax
  408bc5:	loop   0x408c05
  408bc7:	jmp    0xe9fb6b5c
  408bcc:	xchg   ebp,eax
  408bcd:	bound  ebp,QWORD PTR [eax+0x65]
  408bd0:	outs   dx,DWORD PTR ds:[esi]
  408bd1:	and    al,BYTE PTR [eax]
  408bd3:	add    BYTE PTR [ecx+0x7f76b06e],bl
  408bd9:	pop    edi
  408bda:	or     eax,eax
  408bdc:	stos   DWORD PTR es:[edi],eax
  408bdd:	or     al,0x3f
  408bdf:	and    BYTE PTR [edi+0x5f],0xf
  408be3:	test   al,ch
  408be5:	pop    edi
  408be6:	add    BYTE PTR [eax],al
  408be8:	(bad)  
  408be9:	out    dx,al
  408bea:	cmp    BYTE PTR [edx],0x7e
  408bed:	callw  0x8cde
	...
  408c01:	add    BYTE PTR [ebx+0x2c5a0066],ch
  408c07:	and    DWORD PTR [eax-0x18],edx
  408c0a:	mov    BYTE PTR [edx-0x1],0xff
  408c0e:	(bad)  
  408c0f:	mov    dh,0x66
  408c11:	add    BYTE PTR [edi],ch
  408c13:	ins    BYTE PTR es:[edi],dx
  408c14:	mov    esi,0x3fb9a068
  408c19:	add    BYTE PTR [edi+0x7c],cl
  408c1c:	jne    0x408c26
  408c1e:	push   edi
  408c1f:	fld    st(7)
  408c21:	call   DWORD PTR [eax-0x69]
  408c24:	add    di,bp
  408c27:	imul   edi,DWORD PTR [esi+0x3fb97668],0x0
  408c2e:	(bad)  
  408c30:	jne    0x408c3a
  408c32:	push   edi
  408c33:	in     eax,0xc7
  408c35:	push   DWORD PTR [eax-0x4f5c4d99]
  408c3b:	jl     0x408c28
  408c3d:	inc    ebx
  408c3e:	pop    ss
  408c3f:	sti    
  408c40:	cmp    BYTE PTR [ecx-0x51],al
  408c43:	mov    bl,0xe6
  408c45:	inc    ecx
  408c46:	cmp    DWORD PTR [edi+0x0],ebx
  408c49:	or     edi,DWORD PTR [edi+0x13]
  408c4c:	xor    edx,DWORD PTR [esi-0x69]
  408c4f:	add    ebp,DWORD PTR [edi+edi*8+0x684eafb0]
  408c56:	scas   eax,DWORD PTR es:[edi]
  408c57:	pop    esi
  408c58:	out    dx,eax
  408c59:	mov    esi,0x413a47e7
  408c5e:	xchg   esi,eax
  408c5f:	mov    ebx,0xc40bfed2
  408c64:	sbb    dl,BYTE PTR [ebp+0x0]
	...
  408c77:	add    BYTE PTR [esi-0x5f],cl
  408c7a:	sub    al,0x58
  408c7c:	(bad)  
  408c7d:	mov    edx,0x2428ef02
  408c82:	mov    edi,DWORD PTR [edx]
  408c84:	xlat   BYTE PTR ds:[ebx]
  408c85:	mov    ebx,0xd3e3fed2
  408c8a:	sbb    al,BYTE PTR [ecx+0x5e]
  408c8d:	jmp    0x1cfc74be
  408c92:	sub    eax,0xc4bb2dff
  408c97:	jg     0x408d11
  408c99:	mov    ebx,0x47d8f9b5
  408c9e:	icebp  
  408c9f:	mov    edi,0xff2d50ef
  408ca4:	and    DWORD PTR [esi+0x5e],ecx
  408ca7:	cmp    BYTE PTR [ecx+0x114585d0],dl
  408cad:	sub    DWORD PTR ds:0xb730ac6a,ebp
  408cb3:	pop    es
  408cb4:	out    dx,al
  408cb5:	jl     0x408ce5
  408cb7:	(bad)  
  408cb8:	stc    
  408cb9:	mov    ch,0xdf
  408cbb:	(bad)  
  408cbc:	imul   edx,ebx,0x1a
  408cbf:	mov    ecx,0x6a2d90e8
  408cc4:	cmp    BYTE PTR [eax-0x49],0x7
  408cc8:	out    dx,al
  408cc9:	xor    BYTE PTR [esi],ch
  408ccb:	call   ecx
  408ccd:	repz jne 0x408d0a
  408cd0:	push   edi
  408cd1:	mov    ebx,0xa29c352b
  408cd6:	sar    edi,0xb8
  408cd9:	inc    esi
  408cda:	sti    
  408cdb:	out    0x0,eax
	...
  408ced:	add    BYTE PTR [edi-0x3a],ah
  408cf0:	sub    edi,edi
  408cf2:	ds xchg dl,ch
  408cf5:	inc    eax
  408cf6:	xchg   esi,eax
  408cf7:	jecxz  0x408cf9
  408cf9:	add    BYTE PTR [esi+0xb2c6962],dl
  408cff:	pop    ebx
  408d00:	ror    DWORD PTR [ebx+ecx*4],1
  408d03:	leave  
  408d04:	aad    0x2c
  408d06:	or     eax,edi
  408d08:	int    0xb6
  408d0a:	xchg   ecx,eax
  408d0b:	mov    edx,0xc971636a
  408d10:	sbb    eax,0xeca45ece
  408d15:	add    ecx,ebx
  408d17:	fnstsw WORD PTR [edx+eax*4+0x2c9db252]
  408d1e:	push   ecx
  408d1f:	xlat   BYTE PTR ds:[ebx]
  408d20:	and    esi,DWORD PTR [eax]
  408d22:	out    0xc9,al
  408d24:	sbb    edx,DWORD PTR [ecx+eax*2]
  408d27:	dec    edi
  408d28:	fstp   QWORD PTR [ebx]
  408d2a:	ror    BYTE PTR [edi-0x17],1
  408d2d:	add    ebx,DWORD PTR [ebp-0x2b79125e]
  408d33:	fs jmp 0x715fe63c
  408d39:	add    edx,DWORD PTR [esi+0x5b44e962]
  408d3f:	into   
  408d40:	pop    ebp
  408d41:	add    al,0x96
  408d43:	(bad)  
  408d45:	add    ebp,DWORD PTR [edx+eiz*2-0x3d]
  408d49:	add    ebp,DWORD PTR [edx+eiz*2+0x74]
  408d4d:	(bad)  
  408d4e:	in     eax,0x31
  408d50:	ins    BYTE PTR es:[edi],dx
  408d51:	xchg   BYTE PTR [eax],al
	...
  408d63:	add    dl,ah
  408d65:	shl    BYTE PTR ds:0xb3c9462c,1
  408d6b:	sub    ebx,ecx
  408d6d:	dec    esi
  408d6e:	and    eax,0xe94fae1b
  408d73:	add    ebx,DWORD PTR [ebp-0x50f9635e]
  408d79:	pop    esi
  408d7a:	jmp    0x408d7f
  408d7c:	xchg   esi,eax
  408d7d:	cmp    dh,BYTE PTR [edx-0x25]
  408d80:	push   esi
  408d81:	(bad)  
  408d82:	(bad)  
  408d83:	mov    ch,0x99
  408d85:	mov    edx,0xc93bb1ff
  408d8a:	(bad)  
  408d8b:	cdq    
  408d8c:	push   ds
  408d8d:	mov    dl,0x8c
  408d8f:	ins    BYTE PTR es:[edi],dx
  408d90:	(bad)  
  408d91:	iret   
  408d92:	(bad)  
  408d93:	fisub  WORD PTR [edx+0x32]
  408d96:	call   0xff08819d
  408d9b:	pusha  
  408d9c:	pop    ss
  408d9d:	shl    esi,cl
  408d9f:	(bad)  
  408da0:	mov    ebp,0xbd8b80ba
  408da5:	(bad)  
  408da6:	imul   ebp,ecx,0x2839acfd
  408dac:	xchg   edx,eax
  408dad:	(bad)  
  408dae:	mov    ah,0x99
  408db0:	test   edi,eax
  408db2:	(bad)  
  408db3:	sahf   
  408db4:	pop    es
  408db5:	pop    esp
  408db6:	call   0xff084528
  408dbb:	pusha  
  408dbc:	pop    ss
  408dbd:	mov    edi,0x3c7d86f6
  408dc2:	add    BYTE PTR [ecx],dl
  408dc4:	jbe    0x408d52
  408dc6:	inc    ecx
  408dc7:	jmp    0x408dcc
	...
  408dd8:	add    BYTE PTR [eax],al
  408dda:	ins    BYTE PTR es:[edi],dx
  408ddb:	or     eax,0xc76d76f0
  408de0:	(bad)  
  408de1:	fmul   QWORD PTR [ecx]
  408de3:	shr    BYTE PTR [eax-0x7c],0xbd
  408de7:	(bad)  
  408de8:	mov    BYTE PTR [esi+ebx*4-0x31],ch
  408dec:	dec    BYTE PTR [esi+0x18]
  408def:	enter  0x5466,0x0
  408df3:	and    eax,DWORD PTR [eax]
  408df5:	ds addr16 shl dh,cl
  408df9:	lods   eax,DWORD PTR ss:[esi]
  408dfb:	(bad)  
  408dfc:	je     0x408ddb
  408dfe:	jge    0x408e18
  408e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e01:	es jge 0x408ddd
  408e04:	test   BYTE PTR [ecx],dl
  408e06:	test   edi,eax
  408e08:	inc    BYTE PTR [ebx-0x2c09c56b]
  408e0e:	rol    bh,cl
  408e10:	std    
  408e11:	add    BYTE PTR [edx-0x72],dh
  408e14:	idiv   edi
  408e16:	test   al,0x7c
  408e18:	jne    0x408e26
  408e1a:	xchg   edi,eax
  408e1b:	iret   
  408e1c:	mov    ds:0x8546a8ff,eax
  408e21:	fdiv   QWORD PTR [eax+0x7c]
  408e24:	dec    DWORD PTR [ebp-0x87c0e]
  408e2a:	push   0xa40666b3
  408e2f:	popf   
  408e30:	(bad)  
  408e31:	(bad)  
  408e32:	repnz xchg ebx,eax
  408e34:	idiv   edi
  408e36:	sub    BYTE PTR [ebp+esi*1+0x1a],bh
  408e3a:	xchg   esi,eax
  408e3b:	popf   
  408e3c:	(bad)  
  408e3d:	out    0x0,eax
	...
  408e4f:	add    BYTE PTR [edi],bh
  408e51:	inc    edx
  408e52:	(bad)  
  408e53:	inc    DWORD PTR [ebx+eiz*1+0x74]
  408e57:	sbb    DWORD PTR [edx+edi*1+0x7c28f7e0],edi
  408e5e:	add    al,0x75
  408e60:	aas    
  408e61:	jl     0x408e93
  408e63:	pop    edx
  408e65:	sbb    esi,edi
  408e67:	jmp    FWORD PTR [eax-0x3122194d]
  408e6d:	jl     0x408e6e
  408e6f:	jmp    0x408eb4
  408e71:	enter  0x74be,0x1
  408e75:	mov    bl,0xe6
  408e77:	rcr    DWORD PTR [esi],1
  408e79:	jl     0x408e7a
  408e7b:	(bad)  
  408e7c:	jb     0x408e99
  408e7e:	idiv   edi
  408e80:	dec    eax
  408e81:	jb     0x408e83
  408e83:	add    bh,bh
  408e85:	dec    ecx
  408e86:	test   eax,edx
  408e88:	mov    al,ds:0xd750ff7c
  408e8d:	ins    DWORD PTR es:[edi],dx
  408e8e:	cmp    eax,DWORD PTR [ecx-0x11]
  408e91:	jnp    0x408e48
  408e93:	lock mov al,0x7c
  408e96:	(bad)  
  408e97:	jmp    DWORD PTR [edx]
  408e99:	iret   
  408e9a:	out    0xc5,al
  408e9c:	xchg   esi,eax
  408e9d:	adc    eax,0x3e0fff2a
  408ea2:	dec    edi
  408ea3:	div    DWORD PTR [ecx-0x4d4279a1]
  408ea9:	iret   
  408eaa:	sub    bh,bh
  408eac:	xchg   esi,eax
  408ead:	sar    BYTE PTR [esi-0x65],0x96
  408eb1:	mov    ecx,0x8302
	...
  408ec6:	push   ebx
  408ec7:	mov    al,0x30
  408ec9:	dec    DWORD PTR [ecx+0x1083f7bc]
  408ecf:	mov    esp,0xd7150002
  408ed4:	sbb    esi,edi
  408ed6:	jno    0x408e75
  408ed8:	add    ecx,DWORD PTR [edi]
  408eda:	adc    bh,BYTE PTR [ebx]
  408edc:	add    al,0x0
  408ede:	xchg   esi,eax
  408edf:	and    edx,DWORD PTR [eax+eax*1]
  408ee2:	imul   esi,DWORD PTR [esi],0xf39e7529
  408ee8:	daa    
  408ee9:	popf   
  408eea:	dec    ecx
  408eeb:	in     eax,0x28
  408eed:	mov    ch,0x32
  408eef:	in     eax,0x28
  408ef1:	(bad)  
  408ef2:	cmp    DWORD PTR [edi-0x4],ebp
  408ef5:	out    0xc6,eax
  408ef7:	cmp    eax,0x8f29ff29
  408efc:	sbb    al,0xf7
  408efe:	and    DWORD PTR [ebp+0x29],ecx
  408f01:	jne    0x408e91
  408f03:	jecxz  0x408eca
  408f05:	popf   
  408f06:	adc    DWORD PTR ds:0x2cf2b529,edi
  408f0c:	sub    edi,edi
  408f0e:	add    DWORD PTR [edi+0x35c2e7fa],esp
  408f14:	sub    edi,edi
  408f16:	icebp  
  408f17:	inc    esi
  408f18:	dec    esp
  408f19:	imul   ecx
  408f1b:	test   BYTE PTR [ecx],ch
  408f1d:	jne    0x408ead
  408f1f:	and    eax,DWORD PTR [eax-0x63]
  408f22:	fnstenv [ecx+ebp*1-0x4b]
  408f26:	repnz bound ebx,QWORD PTR [esi]
  408f29:	sub    DWORD PTR [eax],eax
	...
  408f3b:	add    cl,cl
  408f3d:	lds    edx,FWORD PTR [ebx+0x776ab9fb]
  408f43:	sub    DWORD PTR [ecx-0x56afb41f],edi
  408f49:	lds    eax,FWORD PTR ds:0x6a692204
  408f4f:	addr16 (bad) 
  408f51:	int    0xf5
  408f53:	sub    BYTE PTR [edx+0x1b7cdb4f],dl
  408f59:	scas   al,BYTE PTR es:[edi]
  408f5a:	(bad)  [eax]
  408f5c:	mov    ebp,eax
  408f5e:	sbb    BYTE PTR [ecx],ch
  408f60:	or     ebx,DWORD PTR [ebx-0x3f]
  408f63:	(bad)  
  408f64:	sbb    eax,ebp
  408f66:	int    0x1c
  408f68:	pushf  
  408f69:	cmp    cl,ch
  408f6b:	sub    bl,ah
  408f6d:	pop    edx
  408f6e:	sar    DWORD PTR [ebx+0x3],1
  408f71:	lds    esi,FWORD PTR [ebp-0x4a41dcd8]
  408f77:	sub    BYTE PTR [ecx-0x46],dl
  408f7a:	pushf  
  408f7b:	arpl   WORD PTR [ecx-0x3b],cx
  408f7e:	popf   
  408f7f:	outs   dx,BYTE PTR ds:[esi]
  408f80:	xor    cl,ch
  408f82:	xchg   ebp,eax
  408f83:	sub    BYTE PTR [esi],ch
  408f85:	mov    ebx,0xc5312848
  408f8a:	cmp    ebx,DWORD PTR [ebx]
  408f8c:	and    ebp,eax
  408f8e:	jge    0x408fab
  408f90:	inc    eax
  408f91:	add    dh,BYTE PTR [esi+0x28]
  408f94:	sbb    DWORD PTR [edi],ecx
  408f96:	lea    esi,[eax]
  408f98:	adc    ebp,eax
  408f9a:	push   eax
  408f9b:	push   esp
  408f9c:	lds    ebx,FWORD PTR ss:[ebp+0x28]
	...
  408fb0:	add    BYTE PTR [eax],al
  408fb2:	dec    ebx
  408fb3:	scas   al,BYTE PTR es:[edi]
  408fb4:	pop    ebp
  408fb5:	sub    cl,bh
  408fb7:	mov    ecx,0xc4f16320
  408fbc:	inc    ebp
  408fbd:	outs   dx,BYTE PTR ds:[esi]
  408fbe:	out    0xcc,al
  408fc0:	cmp    eax,0x4ee128
  408fc5:	in     eax,0xae
  408fc7:	dec    edi
  408fc8:	or     BYTE PTR [ecx+0x3c],al
  408fcb:	(bad)  
  408fcc:	(bad)  
  408fcd:	es jle 0x408fdf
  408fd0:	lock push ss
  408fd2:	outs   dx,BYTE PTR ds:[esi]
  408fd3:	(bad)
  408fd6:	xor    eax,0xf00efec5
  408fdb:	int3   
  408fdc:	call   0xff060015
  408fe1:	(bad)  
  408fe2:	repz enter 0xffe7,0xe2
  408fe7:	(bad)  
  408fe8:	(bad)  
  408fe9:	and    bl,bl
  408feb:	push   esi
  408fec:	add    BYTE PTR [ecx*1-0x515a7d49],bh
  408ff3:	cmp    BYTE PTR [eax],al
  408ff5:	inc    ebx
  408ff6:	mov    es,ebx
  408ff8:	je     0x408fdb
  408ffa:	lea    eax,[ebx*4+0x44d9b1c6]
  409001:	mov    ebp,0x283b6802
  409006:	xchg   edx,eax
  409007:	ret    
  409008:	xor    al,0xd3
  40900a:	jb     0x40902f
  40900c:	add    BYTE PTR [esi+0x1be85c07],ah
  409012:	outs   dx,DWORD PTR ds:[esi]
  409013:	ret    
  409014:	inc    BYTE PTR [ecx]
	...
  409026:	add    BYTE PTR [eax],al
  409028:	mov    es,WORD PTR [edi+0x620de941]
  40902e:	add    cl,ch
  409030:	adc    eax,0x7df174c4
  409035:	inc    edx
  409036:	std    
  409037:	jbe    0x4090aa
  409039:	ret    
  40903a:	je     0x4090a9
  40903c:	mov    ecx,0x6351084d
  409041:	in     eax,0xfe
  409043:	pop    esi
  409044:	ret    
  409045:	mov    al,ds:0xd8e6e903
  40904a:	jmp    0x4090b4
  40904c:	push   esi
  40904d:	into   
  40904e:	std    
  40904f:	add    BYTE PTR [eax+0x7b],dl
  409052:	push   0x0
  409054:	lds    ebx,FWORD PTR [edx-0x1]
  409057:	jne    0x409050
  409059:	addr16 jb 0x408ff9
  40905c:	cmp    BYTE PTR [ebx-0x77],0x45
  409060:	jae    0x409048
  409062:	add    al,BYTE PTR [ecx]
  409064:	scas   eax,DWORD PTR es:[edi]
  409065:	pop    edi
  409066:	lea    eax,[ebp-0x8368]
  40906c:	out    dx,eax
  40906d:	shl    BYTE PTR [bx+di-0x41],cl
  409071:	pop    edi
  409072:	or     eax,eax
  409074:	sub    ebp,DWORD PTR [ebx+0x5fae043b]
  40907a:	add    BYTE PTR [edi+0x5a],dh
  40907d:	out    0x32,eax
  40907f:	cmp    edi,DWORD PTR [esi+0x68858d5e]
  409085:	jge    0x409086
  409087:	(bad)  
  409088:	mov    edi,0xa3a966
	...
  40909d:	add    BYTE PTR [eax+0x7c],ah
  4090a0:	push   eax
  4090a1:	push   0xbeef5f7f
  4090a6:	jg     0x409123
  4090a8:	jne    0x4090b2
  4090aa:	push   edi
  4090ab:	add    cl,0xff
  4090ae:	add    BYTE PTR [edi-0xa],ah
  4090b1:	lahf   
  4090b2:	lock jnp 0x4090b4
  4090b5:	jne    0x4090da
  4090b7:	jl     0x40912e
  4090b9:	or     BYTE PTR [edi],dl
  4090bb:	out    0x9b,al
  4090bd:	jmp    DWORD PTR [eax]
  4090bf:	xchg   dl,al
  4090c1:	add    al,0x3f
  4090c3:	mov    dl,0x89
  4090c5:	in     al,dx
  4090c6:	lods   al,BYTE PTR ds:[esi]
  4090c7:	cmp    esp,0x6a
  4090ca:	das    
  4090cb:	jmp    0xc74b8fec
  4090d0:	out    0xd,al
  4090d2:	adc    bh,BYTE PTR [edi+edi*8-0x77]
  4090d6:	cmp    bh,BYTE PTR [ebx+0x68]
  4090d9:	add    BYTE PTR [esi+0x7ebe15b9],dl
  4090df:	imul   ecx
  4090e1:	inc    eax
  4090e2:	xchg   esi,eax
  4090e3:	mov    cl,0xb4
  4090e5:	cmp    dl,BYTE PTR [edi-0x47]
  4090e8:	and    eax,0x50218e75
  4090ed:	(bad)  
  4090ee:	shl    DWORD PTR [ebx+0x26],1
  4090f1:	jne    0x4090bd
  4090f3:	jnp    0x4090a5
  4090f5:	pop    es
  4090f6:	scas   al,BYTE PTR es:[edi]
  4090f7:	xchg   edx,eax
  4090f8:	xchg   edi,edi
  4090fa:	mov    ecx,0x96044181
  4090ff:	push   cs
  409100:	jp     0x4090ee
	...
  409112:	add    BYTE PTR [eax],al
  409114:	pop    ss
  409115:	jne    0x409166
  409117:	mul    DWORD PTR [ecx-0x65ba893d]
  40911d:	call   0xd0e70647
  409122:	scas   al,BYTE PTR es:[edi]
  409123:	or     edi,DWORD PTR [esi-0x60]
  409126:	mov    dl,0xff
  409128:	xor    DWORD PTR [ebp-0x5fecf0be],0x8960002
  409132:	mov    edi,0x2cb96f7
  409137:	add    BYTE PTR [ecx-0x79],bl
  40913a:	xor    bh,bh
  40913c:	xchg   ecx,eax
  40913d:	retf   
  40913e:	add    ch,BYTE PTR [edx-0x6a]
  409141:	and    eax,0x55966a04
  409146:	add    al,0x8d
  409148:	fcmovnbe st,st(7)
  40914a:	ror    DWORD PTR [ebx+edx*1+0x31ff2ce0],cl
  409151:	jl     0x409178
  409153:	jne    0x409183
  409155:	jmp    0xa6f8d08
  40915a:	mov    bl,0xff
  40915c:	sbb    ebp,eax
  40915e:	inc    edx
  40915f:	je     0x4090fc
  409161:	loop   0x4091cf
  409163:	add    DWORD PTR [esi+0xc9be962],edx
  409169:	mov    ebp,DWORD PTR [eax-0x6c806fd]
  40916f:	sbb    edi,edi
  409171:	add    al,0x4e
  409173:	and    eax,0x7718ed46
	...
  409188:	add    BYTE PTR [eax],al
  40918a:	sbb    esi,DWORD PTR [edi+0x12d92535]
  409190:	fwait
  409191:	sbb    ebp,edi
  409193:	add    al,0x2e
  409195:	and    eax,0x2d18e81f
  40919a:	rol    ecx,0x10
  40919d:	aad    0x18
  40919f:	ret    0x7715
  4091a2:	sbb    eax,ebx
  4091a4:	adc    eax,0x9112a925
  4091a9:	retf   
  4091aa:	pop    esp
  4091ab:	and    ebp,ecx
  4091ad:	and    al,0xe3
  4091af:	mov    dl,0xfd
  4091b1:	and    al,0x91
  4091b3:	shl    DWORD PTR [ebx-0x9],0x71
  4091b7:	(bad)  
  4091b8:	mov    esp,DWORD PTR [ecx+eax*4]
  4091bb:	jmp    0x409220
  4091bd:	pop    ds
  4091be:	add    ecx,0x497199d5
  4091c4:	dec    eax
  4091c5:	jmp    0x6f06f4a0
  4091ca:	mov    cx,0x24bd
  4091ce:	pop    ecx
  4091cf:	aaa    
  4091d0:	in     eax,0x1b
  4091d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d3:	add    al,0xae
  4091d5:	and    al,0x1f
  4091d7:	out    0x94,eax
  4091d9:	sub    al,0x41
  4091db:	rcl    DWORD PTR [edx],0x4
  4091de:	scas   al,BYTE PTR es:[edi]
  4091df:	inc    edi
  4091e0:	rol    dl,cl
  4091e2:	xor    eax,eax
  4091e4:	push   ebx
  4091e5:	xor    esp,DWORD PTR [ecx]
  4091e7:	rol    DWORD PTR [ebp-0x6e9154dc],0x2c
	...
  4091fe:	add    BYTE PTR [eax],al
  409200:	test   eax,0xe78c75ff
  409206:	out    0x76,eax
  409208:	mov    dl,0xc1
  40920a:	imul   ebp,ecx,0xa83b4f1d
  409210:	xchg   ebp,eax
  409211:	shl    DWORD PTR [ecx+ebx*2+0x4efec1c2],0x38
  409219:	ins    DWORD PTR es:[edi],dx
  40921a:	call   0xff020644
  40921f:	jo     0x409279
  409221:	sahf   
  409222:	div    BYTE PTR [esi]
  409224:	jp     0x409272
  409226:	add    cl,al
  409228:	icebp  
  409229:	jnp    0x40926c
  40922b:	jmp    0x173089aa
  409230:	jb     0x4091f3
  409232:	(bad)  
  409233:	pushf  
  409234:	test   eax,0x7248c0c8
  409239:	ror    DWORD PTR [eax-0x146b294],0xfe
  409240:	inc    al
  409242:	xor    WORD PTR [esi+0x23],di
  409246:	add    dh,ch
  409248:	sti    
  409249:	mov    dl,0xf6
  40924b:	out    0xb5,al
  40924d:	mov    edi,0x8aded74
  409252:	mov    eax,ds:0x84e9b5d6
  409257:	mov    ch,0x8d
  409259:	mov    edi,0xc6f76afe
  40925e:	idiv   BYTE PTR [esi+0x307462b5]
	...
  409274:	add    BYTE PTR [eax],al
  409276:	sbb    esi,edi
  409278:	jmp    0x409230
  40927a:	jne    0x40923b
  40927c:	call   FWORD PTR [edx+ebp*1]
  40927f:	in     eax,0xbc
  409281:	xchg   ecx,eax
  409282:	popf   
  409283:	mov    edi,0x4909e9fe
  409288:	push   0xbdcf95f9
  40928d:	add    BYTE PTR [eax],bl
  40928f:	fiadd  DWORD PTR [esi]
  409291:	call   0x3fd39c
  409296:	mov    BYTE PTR [ecx],bl
  409298:	in     al,dx
  409299:	idiv   DWORD PTR [eax-0x7d]
  40929c:	push   DWORD PTR [ebp+0x7]
  40929f:	mov    WORD PTR ds:0xff83589b,?
  4092a5:	mov    ch,0x57
  4092a7:	pop    ebx
  4092a8:	(bad)  
  4092a9:	call   FWORD PTR [eax-0x27]
  4092ac:	push   es
  4092ad:	call   0x3fd23a
  4092b2:	cwde   
  4092b3:	sbb    eax,esp
  4092b5:	test   DWORD PTR [eax+0x53b5ff83],0x78ffff5b
  4092bf:	fld    DWORD PTR [esi]
  4092c1:	call   0x3fd34e
  4092c6:	mov    BYTE PTR [ecx],bl
  4092c8:	fdiv   st,st(7)
  4092ca:	cwde   
  4092cb:	cmp    edi,0x75
  4092ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092cf:	mov    ecx,DWORD PTR ds:0xff84989b
  4092d5:	mov    ch,0xab
  4092d7:	pop    ebx
  4092d8:	(bad)  
  4092d9:	inc    DWORD PTR [eax]
	...
  4092eb:	add    BYTE PTR [eax-0x26],bh
  4092ee:	push   es
  4092ef:	call   0x3fd06c
  4092f4:	pop    eax
  4092f5:	sbb    dl,ah
  4092f7:	test   DWORD PTR [eax-0x7c],0x8b7775ff
  4092fe:	icebp  
  4092ff:	call   0x5c53:0xb5ff8458
  409306:	(bad)  
  409307:	call   DWORD PTR [edi+0x60]
  40930a:	popf   
  40930b:	(bad)  
  40930c:	clc    
  40930d:	xor    DWORD PTR [ebp-0x7bdf14],0xffffffe8
  409314:	pop    ds
  409315:	loop   0x409315
  409317:	call   DWORD PTR [esi+0x21e857d8]
  40931d:	lock and eax,ebp
  409320:	cmp    eax,DWORD PTR [esi+0x22]
  409323:	call   FWORD PTR [ecx]
  409325:	jbe    0x409366
  409327:	not    DWORD PTR [ecx]
  409329:	cmp    BYTE PTR [ebx],ch
  40932b:	fisubr DWORD PTR [ebx]
  40932d:	push   eax
  40932e:	and    bh,bh
  409330:	dec    ebx
  409331:	and    DWORD PTR [edx],ebx
  409333:	(bad)  
  409334:	stc    
  409335:	adc    BYTE PTR [edx-0x63],dl
  409338:	icebp  
  409339:	pop    ss
  40933a:	and    dh,BYTE PTR [ebp-0xdde83e]
  409340:	out    dx,al
  409341:	mov    WORD PTR [eax+0x587fd9ff],es
  409347:	lock leave 
  409349:	ja     0x40936d
  40934b:	inc    DWORD PTR [ebx-0x63]
  40934e:	and    DWORD PTR [ebp+0x0],esi
	...
  409361:	add    BYTE PTR [esi-0x4601f5af],cl
  409367:	pop    edi
  409368:	and    dh,BYTE PTR [ebp-0xdda05a]
  40936e:	mov    esi,0xa1ff8020
  409373:	addr16 enter 0xaff7,0xc3
  409378:	and    bh,bh
  40937a:	xchg   ecx,eax
  40937b:	mov    ch,0x96
  40937d:	sti    
  40937e:	jle    0x40933a
  409380:	mov    al,0xff
  409382:	xor    ebx,0x76960c45
  409388:	(bad)  
  409389:	in     al,dx
  40938a:	adc    eax,0x966a2010
  40938f:	and    DWORD PTR [ecx],eax
  409391:	(bad)  
  409392:	jmp    0x409347
  409394:	sub    bh,BYTE PTR [edx-0x76df0304]
  40939a:	fcomi  st,st(7)
  40939c:	stos   DWORD PTR es:[edi],eax
  40939d:	or     BYTE PTR [ebp-0x7400fb76],0x62
  4093a4:	add    ebp,ebx
  4093a6:	(bad)  
  4093a7:	bound  ebx,QWORD PTR [esi-0x57356669]
  4093ad:	pop    ds
  4093ae:	sub    DWORD PTR [esi+0x235d8300],edi
  4093b4:	jmp    0xe9a32b64
  4093b9:	adc    DWORD PTR [ecx],0x38
  4093bc:	loope  0x4093e9
  4093be:	cmp    al,al
  4093c0:	ins    DWORD PTR es:[edi],dx
  4093c1:	and    DWORD PTR [ecx],eax
  4093c3:	cmp    BYTE PTR [ebp+0x21],ah
	...
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	sub    DWORD PTR [edx+0x51],0x4f
  4093dc:	or     al,0xbe
  4093de:	push   ebp
  4093df:	dec    ebx
  4093e0:	aam    0x66
  4093e2:	jmp    0x6a0fa09d
  4093e7:	dec    eax
  4093e8:	ficom  DWORD PTR [esi+edx*4]
  4093eb:	lods   eax,DWORD PTR ds:[esi]
  4093ec:	ror    DWORD PTR [ebx+0x9],1
  4093ef:	and    DWORD PTR [ebx+0x6a],eax
  4093f2:	inc    ecx
  4093f3:	mov    cl,0x1f
  4093f5:	mov    esi,0xbe538b25
  4093fa:	jno    0x4093d3
  4093fc:	mov    ch,BYTE PTR fs:[eax-0x297fe2fd]
  409403:	jmp    0x40945b
  409405:	bound  ebp,QWORD PTR [ecx-0x1f]
  409408:	cdq    
  409409:	xor    DWORD PTR [eax-0x57869f55],ecx
  40940f:	add    esp,eax
  409411:	retf   0xb134
  409414:	cmp    DWORD PTR [ebp+0x7954ac38],0xcac90428
  40941e:	xor    BYTE PTR [eax+0xd32bd69],0x56
  409425:	aaa    
  409426:	in     eax,dx
  409427:	or     al,0x44
  409429:	adc    edi,DWORD PTR ss:[edx-0x71005bc7]
  409430:	jbe    0x4093ef
  409432:	addr16 xchg edx,eax
  409434:	bound  esp,QWORD PTR [edx]
  409436:	add    BYTE PTR [ecx],bh
  409438:	push   0xffffffc7
  40943a:	lahf   
  40943b:	sahf   
	...
  40944c:	add    BYTE PTR [eax],al
  40944e:	jbe    0x409462
  409450:	push   0xbdcd95e9
  409455:	add    DWORD PTR [ecx+edi*2+0x41],ebx
  409459:	jmp    0xf1b55043
  40945e:	mov    ebp,0xb676c10f
  409463:	retf   0x4dd8
  409466:	mov    dh,0xbd
  409468:	jmp    0x8e9:0x3e3ccfe8
  40946f:	mov    ebx,0xfcc25545
  409474:	mov    eax,0xfebdb64e
  409479:	cmp    esp,DWORD PTR [edi+0x7a]
  40947c:	pop    es
  40947d:	mov    ah,0x16
  40947f:	mov    ebp,0x37763574
  409484:	or     BYTE PTR [ecx-0x18],al
  409487:	(bad)  
  409489:	es (bad) 
  40948b:	push   ds
  40948c:	leave  
  40948d:	sub    ebx,DWORD PTR [ecx+0x79625562]
  409493:	loope  0x409458
  409495:	or     eax,0x60c3776
  40949a:	add    BYTE PTR [ebp-0x18],ah
  40949d:	lds    ecx,FWORD PTR [esi]
  40949f:	mov    esp,0xb85060fe
  4094a4:	(bad)  
  4094a5:	je     0x409448
  4094a7:	mov    ebx,0xd6adf174
  4094ac:	xchg   ebx,eax
  4094ad:	ficom  WORD PTR [ecx+0xe54ce7]
	...
  4094c3:	add    BYTE PTR [edx+eiz*4+0x7a152b73],bl
  4094ca:	add    BYTE PTR [eax],al
  4094cc:	fwait
  4094cd:	sar    ebp,0x75
  4094d0:	adc    ecx,DWORD PTR [edi+0x5c009c95]
  4094d6:	push   eax
  4094d7:	dec    DWORD PTR [edx-0xc8a00ae]
  4094dd:	idiv   ch
  4094df:	jne    0x409508
  4094e1:	mov    ah,cl
  4094e3:	xchg   esi,eax
  4094e4:	add    BYTE PTR [edx+ebx*2-0x75],bl
  4094e8:	adc    BYTE PTR [edx-0x7d],0x39
  4094ec:	das    
  4094ed:	fisttp DWORD PTR [eax]
  4094ef:	push   edx
  4094f0:	daa    
  4094f1:	cld    
  4094f2:	call   0xebeb:0xbec780ff
  4094f9:	loopne 0x409577
  4094fb:	adc    bh,ch
  4094fd:	rol    DWORD PTR [esi],cl
  4094ff:	mov    edi,DWORD PTR [edx]
  409501:	mov    al,0xfd
  409503:	jne    0x409548
  409505:	jmp    0x409506
  409507:	mov    ch,BYTE PTR [ebp-0x50d4fd79]
  40950d:	sub    eax,0xfabf0cc2
  409512:	mov    esp,ebp
  409514:	sbb    cl,0xa
  409517:	dec    DWORD PTR [edx]
  409519:	push   0x5b39b9e8
  40951e:	(bad)  
  40951f:	dec    DWORD PTR [edx]
  409521:	ins    BYTE PTR es:[edi],dx
  409522:	push   eax
  409523:	dec    DWORD PTR [edx]
  409525:	push   0x31e8
	...
  40953a:	sub    BYTE PTR [ebx-0x1],bl
  40953d:	leave  
  40953e:	ins    DWORD PTR es:[edi],dx
  40953f:	outs   dx,BYTE PTR ds:[esi]
  409540:	add    BYTE PTR [ebp+0x4],dl
  409543:	jae    0x4094c8
  409545:	les    edi,FWORD PTR [edi-0x13acaa0c]
  40954b:	add    DWORD PTR [edi],eax
  40954d:	add    bl,bl
  40954f:	mov    al,0x81
  409551:	jge    0x4094d6
  409553:	pop    edi
  409554:	je     0x409562
  409556:	xchg   esi,eax
  409557:	dec    eax
  409558:	mov    al,ds:0x615960f
  40955d:	sbb    ebx,0xffffff9d
  409560:	add    dh,BYTE PTR [ebp-0x61]
  409563:	push   eax
  409564:	inc    esp
  409565:	pop    ebx
  409566:	jmp    0xa702e2be
  40956b:	leave  
  40956c:	mov    DWORD PTR [ebp-0x76],eax
  40956f:	dec    eax
  409570:	and    eax,DWORD PTR [edi]
  409572:	adc    eax,0xa200105e
  409577:	int    0x9
  409579:	shr    BYTE PTR [edx-0x4240163e],0x84
  409580:	mov    esi,0x298d4c8
  409585:	mov    edx,DWORD PTR [ebx-0x63]
  409588:	and    eax,0x13a04899
  40958e:	xchg   esi,eax
  40958f:	popf   
  409590:	push   es
  409591:	or     edx,esi
  409593:	xchg   esp,eax
  409594:	or     ebp,DWORD PTR [ebx]
  409596:	(bad)  
  409597:	out    dx,eax
  409598:	mov    ebp,0xf386cf5d
  40959d:	inc    DWORD PTR [eax]
	...
  4095af:	add    BYTE PTR [eax+eax*4+0x4ca2751e],ch
  4095b6:	enter  0x15bf,0xe
  4095ba:	inc    ebx
  4095bb:	or     eax,ecx
  4095bd:	cmc    
  4095be:	inc    edx
  4095bf:	call   0xff5e758e
  4095c4:	mov    dl,0x31
  4095c6:	enter  0x1dc3,0xd6
  4095ca:	inc    esi
  4095cb:	mov    esi,0xffc38fbb
  4095d0:	fisubr WORD PTR [edi-0x4369fffe]
  4095d6:	mov    eax,DWORD PTR gs:[ebx]
  4095d9:	les    ecx,FWORD PTR [ecx+0x65bc924d]
  4095df:	(bad)  
  4095e0:	shl    DWORD PTR [edx-0x27],cl
  4095e3:	mov    ah,0x70
  4095e5:	xor    BYTE PTR [ecx-0x3f611ce3],ch
  4095eb:	inc    esp
  4095ec:	cmp    edi,DWORD PTR [edx-0x611ce233]
  4095f2:	rol    BYTE PTR [ecx+0x1dbdba2d],1
  4095f8:	ret    
  4095f9:	data16 mov WORD PTR [ecx],0x23e6
  4095ff:	inc    esp
  409600:	popf   
  409601:	mov    ecx,0xeb3e441b
  409606:	sbb    DWORD PTR ds:0x482bec29,0x4823ec22
  409610:	or     esi,DWORD PTR [eax]
  409612:	jns    0x40959d
	...
  409624:	add    BYTE PTR [eax],al
  409626:	xchg   ebx,eax
  409627:	sahf   
  409628:	aas    
  409629:	hlt    
  40962a:	or     DWORD PTR [edx-0x6c5ef18],edi
  409630:	sbb    ecx,0x56
  409633:	bound  esp,QWORD PTR [eax-0x169d69f7]
  409639:	adc    BYTE PTR [edx],dh
  40963b:	out    dx,al
  40963c:	fisttp DWORD PTR [ebx]
  40963e:	or     eax,0x3210dd28
  409643:	call   0xb9a6b9f3
  409648:	mov    bl,0x43
  40964a:	leave  
  40964b:	das    
  40964c:	sub    eax,0x2dff312c
  409651:	sbb    eax,0x2c2d2fb9
  409656:	fstp   QWORD PTR fs:0x9be7aa1d
  40965d:	adc    edx,DWORD PTR [ebx]
  40965f:	cmp    BYTE PTR [ecx],ah
  409661:	pop    ebx
  409662:	xchg   BYTE PTR [edx-0x17],ah
  409665:	add    eax,DWORD PTR [ebp+0x69976bfe]
  40966b:	sti    
  40966c:	jmp    eax
  40966e:	xchg   ebp,eax
  40966f:	bound  eax,QWORD PTR [eax]
  409671:	cli    
  409672:	icebp  
  409673:	dec    esp
  409674:	add    DWORD PTR [eax+ebx*2-0x5f],esi
  409678:	dec    edi
  409679:	sar    DWORD PTR [edi+0xee8ffe6],1
  40967f:	das    
  409680:	adc    BYTE PTR [edx-0x8],ah
  409683:	push   esp
  409684:	rcl    esi,0x96
  409687:	ins    DWORD PTR es:[edi],dx
  409688:	push   DWORD PTR ds:0x0
	...
  40969a:	add    BYTE PTR [eax],al
  40969c:	repz retf 
  40969e:	push   cs
  40969f:	fs pop eax
  4096a1:	ror    DWORD PTR [edi+0x17],0x0
  4096a5:	sar    DWORD PTR [edx+0x76],0x95
  4096a9:	bound  eax,QWORD PTR [ebx+0xb299da7]
  4096af:	xchg   esi,eax
  4096b0:	or     dh,al
  4096b2:	push   cs
  4096b3:	push   edi
  4096b4:	push   ebx
  4096b5:	mov    eax,0x319d8182
  4096ba:	add    dl,dl
  4096bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096bd:	lea    esi,[ebp-0x27]
  4096c0:	(bad)  
  4096c1:	enter  0xe969,0x2f
  4096c5:	mov    ecx,0xb93fe968
  4096ca:	push   esp
  4096cb:	pop    esi
  4096cc:	add    BYTE PTR [ecx+0x6a],ch
  4096cf:	jmp    0x10275003
  4096d4:	es mov ecx,0x2e55f2fe
  4096da:	sub    DWORD PTR [ecx+0x53d3c105],ebx
  4096e0:	mov    ds:0xfc118ab9,al
  4096e5:	dec    edx
  4096e6:	add    BYTE PTR [ebx-0x48acec6b],dl
  4096ec:	mov    ch,BYTE PTR [edi]
  4096ee:	adc    BYTE PTR [ebx+0x1004c95],al
  4096f4:	cwde   
  4096f5:	dec    esp
  4096f6:	add    BYTE PTR [eax],al
  4096f8:	jg     0x409765
  4096fa:	shl    BYTE PTR [ebp-0x79],0xf3
  4096fe:	out    0x9d,al
	...
  409710:	add    BYTE PTR [eax],al
  409712:	in     eax,0x56
  409714:	jmp    FWORD PTR [ebx]
  409716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409717:	jmp    0xc2c7:0xfcd85bc2
  40971e:	outs   dx,DWORD PTR ds:[esi]
  40971f:	fs push ebp
  409721:	mov    ebx,DWORD PTR [ebx-0x20]
  409724:	ret    
  409725:	lock mov al,ds:0x58db29ef
  40972b:	ror    BYTE PTR [edx],cl
  40972d:	inc    DWORD PTR [edx-0x1dfe179a]
  409733:	pop    ebx
  409734:	call   DWORD PTR [eax-0x18]
  409737:	rol    DWORD PTR [esi],1
  409739:	call   0x3fcc0f
  40973e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40973f:	push   esi
  409740:	pop    eax
  409741:	add    eax,DWORD PTR [edi]
  409743:	push   0xe97074c0
  409748:	inc    esp
  409749:	hlt    
  40974a:	scas   eax,DWORD PTR es:[edi]
  40974b:	pop    ebx
  40974c:	jne    0x40975a
  40974e:	mov    cl,dl
  409750:	push   es
  409751:	call   0x3ff0aa
  409756:	jbe    0x4096f9
  409758:	cli    
  409759:	lea    eax,[edx+0x54]
  40975c:	push   eax
  40975d:	inc    edx
  40975f:	pop    edi
  409760:	push   DWORD PTR [ebp-0x9]
  409763:	mov    ebx,DWORD PTR [ecx-0x76a4b703]
  409769:	inc    ebp
  40976a:	push   edi
  40976b:	pop    ebx
  40976c:	jne    0x40975e
  40976e:	mov    cl,dl
  409770:	idiv   bh
  409772:	add    ch,BYTE PTR [eax-0x1]
  409775:	jne    0x409777
	...
  409787:	add    BYTE PTR [ebx-0x7a],ch
  40978a:	adc    esi,edi
  40978c:	js     0x4097e9
  40978e:	mov    ebx,eax
  409790:	mov    cl,dl
  409792:	cli    
  409793:	call   0xffbd352e
  409798:	cdq    
  409799:	push   0xa57ef791
  40979e:	jl     0x40979f
  4097a0:	mov    ebx,edx
  4097a2:	add    dl,BYTE PTR [edi-0x7f]
  4097a5:	ss or  ebp,eax
  4097a8:	sbb    bl,BYTE PTR cs:[ebx]
  4097ab:	call   FWORD PTR ds:0x5f5ebe0c
  4097b1:	or     ecx,DWORD PTR [ebx]
  4097b3:	add    bl,cl
  4097b5:	inc    esp
  4097b6:	daa    
  4097b7:	sbb    ebx,0xffffff95
  4097ba:	add    BYTE PTR [edx+0x77],dh
  4097bd:	mov    al,ds:0x6e490f8f
  4097c2:	or     al,0xe8
  4097c4:	pop    ss
  4097c5:	adc    eax,0x6e39ff1a
  4097ca:	hlt    
  4097cb:	(bad)  
  4097cc:	stos   DWORD PTR es:[edi],eax
  4097cd:	mov    cl,0x2a
  4097cf:	scas   eax,DWORD PTR es:[edi]
  4097d0:	sub    ebx,eax
  4097d2:	sbb    edi,edi
  4097d4:	stos   DWORD PTR es:[edi],eax
  4097d5:	mov    ecx,0xe18e7519
  4097da:	pop    esi
  4097db:	std    
  4097dc:	adc    eax,esp
  4097de:	sbb    DWORD PTR [ebp-0x5a],esi
  4097e1:	cmp    BYTE PTR [eax+0x1b82ee07],dl
  4097e7:	(bad)  
  4097e8:	stc    
  4097e9:	inc    ebx
  4097ea:	mov    al,0x13
	...
  4097fc:	add    BYTE PTR [eax],al
  4097fe:	pop    ds
  4097ff:	retf   
  409800:	sbb    DWORD PTR [ebp-0x7a],esi
  409803:	sbb    BYTE PTR [eax+0x1841ee07],dl
  409809:	(bad)  
  40980a:	(bad)  [ebx-0x68]
  40980d:	or     edx,DWORD PTR [ebp+0x43fef0f7]
  409813:	cdq    
  409814:	sbb    DWORD PTR [ebp-0x72],esi
  409817:	and    DWORD PTR [ebx+0x1a87b9fc],ebx
  40981d:	jne    0x4097a5
  40981f:	bound  esp,QWORD PTR [esi]
  409821:	nop
  409822:	xchg   ecx,eax
  409823:	retf   0x188b
  409826:	mov    eax,ds:0x899015b6
  40982b:	dec    esp
  40982c:	icebp  
  40982d:	sbb    cl,BYTE PTR [ebx]
  40982f:	imul   edx,DWORD PTR [ecx],0x6e
  409832:	and    dh,BYTE PTR [esi+0x530b19fd]
  409838:	test   BYTE PTR [edi+0x6fccca91],0x71
  40983f:	mov    dh,0xaf
  409841:	inc    esi
  409842:	xchg   BYTE PTR [edx+0x34],ah
  409845:	lea    esi,[edx-0x4a]
  409848:	pop    ebx
  409849:	or     ah,ch
  40984b:	arpl   si,cx
  40984d:	(bad)  
  40984e:	cdq    
  40984f:	retf   0x7074
  409852:	dec    ecx
  409853:	mov    dh,0xbd
  409855:	(bad)  
  409856:	lea    esi,[ebp-0x41d1f3c5]
  40985c:	scas   al,BYTE PTR es:[edi]
  40985d:	sbb    DWORD PTR [ecx],esi
  40985f:	jmp    0x0:0xf43b
	...
  409872:	add    BYTE PTR [eax],al
  409874:	push   ds
  409875:	popa   
  409876:	sahf   
  409877:	(bad)  
  409878:	lea    esi,[ebp-0x71d1f3e5]
  40987e:	mov    ds,WORD PTR [ecx]
  409880:	adc    edx,ebp
  409882:	sbb    esi,eax
  409884:	push   ds
  409885:	popa   
  409886:	jle    0x409817
  409888:	lea    esi,[ebp-0x6211f405]
  40988e:	outs   dx,BYTE PTR ds:[esi]
  40988f:	sbb    ecx,esi
  409891:	jmp    0x615f9451
  409896:	xor    BYTE PTR [esi-0x76],al
  409899:	bound  edi,QWORD PTR [esp+ecx*4+0x2824e1ea]
  4098a0:	push   0xa58f460d
  4098a5:	dec    eax
  4098a6:	call   0xaae3c3
  4098ab:	inc    ecx
  4098ac:	rcl    ecx,cl
  4098ae:	(bad)  
  4098af:	cs (bad) 
  4098b1:	das    
  4098b2:	adc    al,0x26
  4098b4:	sbb    DWORD PTR [esi-0x18],ebx
  4098b7:	push   ebp
  4098b8:	sub    esi,DWORD PTR [ebp-0x347d9d02]
  4098be:	cmp    ch,al
  4098c0:	xchg   ebp,eax
  4098c1:	bound  ecx,QWORD PTR [ebx+0x37e079ac]
  4098c7:	jmp    0xc029f6dc
  4098cc:	xchg   esp,eax
  4098cd:	bound  eax,QWORD PTR [eax]
  4098cf:	xor    DWORD PTR es:[ecx+0x6295e8ff],edi
  4098d6:	lea    esp,[eax+eax*1]
	...
  4098e9:	add    BYTE PTR [esi+0x12],bh
  4098ec:	call   FWORD PTR [esi+eiz*2-0x4c]
  4098f0:	je     0x4098eb
  4098f2:	scas   al,BYTE PTR es:[edi]
  4098f3:	das    
  4098f4:	or     cl,dl
  4098f6:	mov    ds:0x12befeb4,eax
  4098fb:	mov    edx,0x629e3482
  409900:	je     0x40990c
  409902:	add    al,ch
  409904:	cmp    ch,BYTE PTR [eax]
  409906:	xchg   edx,eax
  409907:	mov    ch,0x74
  409909:	popf   
  40990a:	ins    DWORD PTR es:[edi],dx
  40990b:	call   0x69d6827a
  409910:	rcl    BYTE PTR [ecx+ebx*4],0x4a
  409914:	clc    
  409915:	ret    0xb4d4
  409918:	std    
  409919:	hlt    
  40991a:	test   eax,0x920278ca
  40991f:	bound  ecx,QWORD PTR [ecx+0x6c9be24]
  409925:	cs sub cl,cl
  409928:	(bad)  
  409929:	call   0xd4c3fbc3
  40992e:	mov    cl,0x62
  409930:	je     0x409923
  409932:	std    
  409933:	popa   
  409934:	add    BYTE PTR [eax],al
  409936:	pusha  
  409937:	sbb    edi,edi
  409939:	jne    0x4098ee
  40993b:	mov    BYTE PTR [edi-0x6b],al
  40993e:	sbb    BYTE PTR [edx-0x1],0x75
  409942:	sbb    DWORD PTR [edx+0x75],0xc
  409946:	xchg   DWORD PTR [ebx],edi
  409948:	xchg   ebp,eax
  409949:	inc    DWORD PTR [eax+0x8b88]
	...
  40995f:	add    BYTE PTR [edi-0x74ba74a0],ch
  409965:	fbstp  TBYTE PTR [edi]
  409967:	add    BYTE PTR [edx],cl
  409969:	mov    ch,0xe7
  40996b:	xchg   BYTE PTR [edi+0x60],ch
  40996e:	add    bh,al
  409970:	sub    bl,BYTE PTR [eax+0x0]
  409973:	add    BYTE PTR [edi+0x60],bh
  409976:	mov    DWORD PTR [ebp+0x4b],0x6f00005f
  40997d:	jne    0x4099c4
  40997f:	lock outs dx,DWORD PTR ds:[esi]
  409981:	pusha  
  409982:	add    BYTE PTR [eax],al
  409984:	repnz mov eax,ds:0xa1c250ee
  40998a:	repnz push eax
  40998c:	mov    dl,0xa1
  40998e:	not    BYTE PTR [eax+0x0]
  409991:	rcl    BYTE PTR [edx],cl
  409993:	jmp    FWORD PTR [edx+0x66]
  409996:	call   0xff8c8b7c
  40999b:	add    DWORD PTR [edx+0x3c74008a],0xffffffe1
  4099a2:	jl     0x40999c
  4099a4:	jmp    ebx
  4099a6:	sub    eax,DWORD PTR [ebx+0x75005292]
  4099ac:	stc    
  4099ad:	loopne 0x409a2b
  4099af:	lock out dx,eax
  4099b1:	jecxz  0x4099d2
  4099b3:	(bad)  
  4099b4:	jmp    0x3d87:0xe375ff57
  4099bb:	xchg   ebp,eax
  4099bc:	inc    eax
  4099bd:	dec    ebx
  4099be:	push   DWORD PTR [ebp-0x6a]
  4099c1:	adc    eax,0x7517
	...
  4099d6:	mov    ds:0xc994d221,al
  4099db:	sbb    al,0x17
  4099dd:	jne    0x4099a5
  4099df:	je     0x409972
  4099e1:	or     ebp,DWORD PTR [esi-0x4e008e9c]
  4099e7:	test   BYTE PTR [ecx+0x7a95bef7],dl
  4099ed:	jmp    DWORD PTR [ecx-0x510c6eac]
  4099f3:	popf   
  4099f4:	jp     0x4099f5
  4099f6:	xchg   ecx,eax
  4099f7:	fs xchg ecx,eax
  4099f9:	out    dx,eax
  4099fa:	jle    0x4099a1
  4099fc:	jp     0x4099fd
  4099fe:	add    DWORD PTR [edx+ecx*1],0xa94689ff
  409a05:	(bad)  
  409a06:	jno    0x4099cc
  409a08:	cmp    DWORD PTR [ebp+0x7a],0xec1d8ec9
  409a0f:	leave  
  409a10:	adc    eax,0x6ea18a75
  409a15:	xchg   esp,eax
  409a16:	push   ecx
  409a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a18:	test   al,0xff
  409a1a:	dec    eax
  409a1b:	jbe    0x409a25
  409a1d:	call   0xff56a72e
  409a22:	lods   al,BYTE PTR ds:[esi]
  409a23:	leave  
  409a24:	adc    eax,0x82a1a275
  409a29:	xchg   esp,eax
  409a2a:	sub    esp,edi
  409a2c:	adc    eax,0x25d12275
  409a31:	xchg   edi,eax
  409a32:	sbb    esp,ecx
  409a34:	les    ecx,FWORD PTR [edx]
  409a36:	or     BYTE PTR [edi+edi*2+0xbd],dl
	...
  409a49:	add    BYTE PTR [eax],al
  409a4b:	add    BYTE PTR [eax],cl
  409a4d:	fcom   QWORD PTR ds:0x40f2605f
  409a53:	adc    BYTE PTR [esi+0x15ec8b56],dl
  409a59:	std    
  409a5a:	push   ds
  409a5b:	push   esi
  409a5c:	jmp    0xee4c76c2
  409a61:	retf   0x166d
  409a64:	fld1   
  409a66:	stos   DWORD PTR es:[edi],eax
  409a67:	unpckhps xmm6,XMMWORD PTR ds:0x6844f355
  409a6e:	add    DWORD PTR [esi+edx*4],0xceb5e962
  409a75:	lahf   
  409a76:	loopne 0x409a7b
  409a78:	mov    cl,0x2c
  409a7a:	loope  0x409aa7
  409a7c:	or     edx,ecx
  409a7e:	and    eax,0x211cd916
  409a83:	add    al,0x96
  409a85:	(bad)  
  409a86:	jmp    0xb8eb7613
  409a8b:	push   ss
  409a8c:	add    ebx,DWORD PTR [ebx+0x11]
  409a8f:	fisub  WORD PTR [edi]
  409a91:	mov    dl,0xfd
  409a93:	mov    edx,ebx
  409a95:	scas   al,BYTE PTR es:[edi]
  409a96:	imul   ebx,DWORD PTR [eax+0x7756369],0x2e53015
  409aa0:	in     al,0x68
  409aa2:	push   0xffffff97
  409aa4:	pop    ebp
  409aa5:	imul   ebx,DWORD PTR [edi+0xa],0x3e9640e
  409aac:	xchg   esi,eax
  409aad:	adc    BYTE PTR [eax+0x42],dh
	...
  409abf:	add    BYTE PTR [eax],al
  409ac1:	add    BYTE PTR [esi+0x41bf6c62],cl
  409ac7:	adc    esi,DWORD PTR [esi-0x53456671]
  409acd:	jae    0x409af8
  409acf:	mov    dl,0x69
  409ad1:	xchg   edi,eax
  409ad2:	sub    DWORD PTR [ebx+0x15],esp
  409ad5:	add    BYTE PTR [ebp+0x4e0a1ca2],cl
  409adb:	fs jmp 0xb05130e4
  409ae1:	inc    edx
  409ae2:	mov    fs,WORD PTR [edx+0x6a]
  409ae5:	xchg   edi,eax
  409ae6:	std    
  409ae7:	addr16 add bl,bh
  409aea:	jmp    0x183c:0x227144de
  409af1:	adc    WORD PTR [edx-0x18],bp
  409af5:	shl    DWORD PTR [edi-0x4f],0xfe
  409af9:	adc    DWORD PTR fs:[edx+0x6a194e4f],edi
  409b00:	call   0xfef1e036
  409b05:	jo     0x409b00
  409b07:	(bad)
  409b0a:	sbb    BYTE PTR [eax],ch
  409b0c:	clc    
  409b0d:	cdq    
  409b0e:	xor    BYTE PTR [edi],0x8
  409b11:	adc    DWORD PTR [ebx-0x2d],edx
  409b14:	(bad)  
  409b15:	push   ds
  409b16:	or     eax,0x5164e428
  409b1b:	mov    ecx,0xb089834f
  409b20:	je     0x409b13
  409b22:	lods   eax,DWORD PTR ds:[esi]
  409b23:	jl     0x409ab7
  409b25:	inc    BYTE PTR [eax]
	...
  409b37:	add    BYTE PTR [edx+0x25f144df],ah
  409b3d:	mov    al,0x74
  409b3f:	loope  0x409afe
  409b41:	xchg   ebp,eax
  409b42:	stc    
  409b43:	out    0x8a,al
  409b45:	in     eax,0x7c
  409b47:	lds    edx,FWORD PTR [edi+esi*1-0x46ef9be2]
  409b4e:	dec    edi
  409b4f:	into   
  409b50:	sbb    BYTE PTR [ebp-0x4e71c302],ch
  409b56:	je     0x409b49
  409b58:	ins    DWORD PTR es:[edi],dx
  409b59:	add    ch,bh
  409b5b:	mov    dh,0x8a
  409b5d:	fild   WORD PTR [ecx+esi*4-0x1b]
  409b61:	scas   eax,DWORD PTR es:[edi]
  409b62:	je     0x409b55
  409b64:	ins    DWORD PTR es:[edi],dx
  409b65:	add    edx,edi
  409b67:	sahf   
  409b68:	and    ch,0x7c
  409b6b:	xchg   ecx,eax
  409b6c:	xchg   ebp,eax
  409b6d:	aaa    
  409b6e:	or     dl,BYTE PTR [ecx-0x6b]
  409b71:	bound  eax,QWORD PTR [eax]
  409b73:	add    bh,ch
  409b75:	test   bh,0xc2
  409b78:	pop    es
  409b79:	lea    eax,gs:[ebp+0x67]
  409b7d:	cmc    
  409b7e:	std    
  409b7f:	jne    0x409bfc
  409b81:	push   esi
  409b82:	jne    0x409b90
  409b84:	js     0x409b66
  409b86:	push   es
  409b87:	call   0x3ff3fb
  409b8c:	cmp    al,0xd8
  409b8e:	test   BYTE PTR [eax],0xe2
  409b91:	pop    edx
  409b92:	mov    eax,0x64af00
  409b97:	pop    esi
  409b98:	xchg   BYTE PTR [ebx],ah
  409b9a:	or     BYTE PTR [eax],al
	...
  409bac:	add    BYTE PTR [eax],al
  409bae:	cmp    dh,al
  409bb0:	not    BYTE PTR [eax+0x78]
  409bb3:	loopne 0x409bbb
  409bb5:	call   0x3fcf71
  409bba:	and    al,0x55
  409bbc:	jmp    0xa51bbc
  409bc1:	jmp    DWORD PTR [edx]
  409bc3:	pop    esp
  409bc4:	call   0xff9779b0
  409bc9:	cmp    esi,DWORD PTR [edx]
  409bcb:	pusha  
  409bcc:	jne    0x409bd3
  409bce:	xchg   esi,eax
  409bcf:	pop    esi
  409bd0:	add    BYTE PTR [eax],al
  409bd2:	jg     0x409bb7
  409bd4:	jl     0x409bd2
  409bd6:	jno    0x409bae
  409bd8:	and    cl,BYTE PTR [ebp-0xafa14e]
  409bde:	repnz scas al,BYTE PTR es:[edi]
  409be0:	out    0xd,al
  409be2:	into   
  409be3:	push   ebx
  409be4:	dec    DWORD PTR [ebp-0xafa18e]
  409bea:	sub    BYTE PTR [esi+0x53e53ae6],0xff
  409bf1:	lea    esi,[edx+0x5e]
  409bf4:	push   eax
  409bf5:	inc    DWORD PTR [edx-0xad11952]
  409bfb:	push   ebx
  409bfc:	dec    DWORD PTR [ebp+0x500c7e96]
  409c02:	or     DWORD PTR [edi-0x4],edx
  409c05:	out    0xe5,eax
  409c07:	in     al,0x12
  409c09:	dec    DWORD PTR [edi]
  409c0b:	xchg   DWORD PTR [ecx*4-0x14bcea5],edx
	...
  409c22:	add    BYTE PTR [eax],al
  409c24:	arpl   cx,ax
  409c26:	sbb    al,ah
  409c28:	fisttp QWORD PTR [eax+0x13]
  409c2b:	mov    DWORD PTR [ebx+0x1d],edx
  409c2e:	add    DWORD PTR [ebp-0x32],0x9e7511e9
  409c35:	and    DWORD PTR [ecx-0x5],ebx
  409c38:	shr    DWORD PTR [eax],0x7d
  409c3b:	inc    ebp
  409c3c:	scas   al,BYTE PTR es:[edi]
  409c3d:	cmp    al,0x91
  409c3f:	out    dx,eax
  409c40:	xchg   esi,eax
  409c41:	in     eax,dx
  409c42:	xchg   ebp,eax
  409c43:	sub    BYTE PTR [ebx],0x6d
  409c46:	add    al,0x74
  409c48:	xor    edi,DWORD PTR [ecx+edx*4]
  409c4b:	out    0x96,eax
  409c4d:	aad    0xa9
  409c4f:	adc    BYTE PTR [ebx],0x52
  409c52:	add    al,0x74
  409c54:	mul    ecx
  409c56:	add    edi,DWORD PTR [edi+edx*8]
  409c59:	mov    ecx,0x51867511
  409c5e:	dec    edi
  409c5f:	push   0xbffdb996
  409c64:	jecxz  0x409c05
  409c66:	call   0xe3ff:0x47a9def
  409c6d:	mov    DWORD PTR [edx],ebx
  409c6f:	stos   BYTE PTR es:[edi],al
  409c70:	mov    esi,0x560b02b9
  409c75:	push   ss
  409c76:	add    DWORD PTR [eax+0x3e],ebp
  409c79:	fs (bad) 
  409c7d:	jbe    0x409c93
  409c7f:	call   0x44bd93
  409c84:	popf   
  409c85:	stc    
  409c86:	xchg   esi,eax
  409c87:	sub    eax,0x0
	...
  409c98:	add    BYTE PTR [eax],al
  409c9a:	scas   al,BYTE PTR es:[edi]
  409c9b:	(bad)  
  409c9c:	jmp    0x9e30c5a4
  409ca1:	cwde   
  409ca2:	popf   
  409ca3:	mov    edx,0xaf09761b
  409ca8:	lea    ebx,[eax-0x4510f]
  409cae:	icebp  
  409caf:	popf   
  409cb0:	pop    edx
  409cb1:	adc    dh,cl
  409cb3:	scas   al,BYTE PTR es:[edi]
  409cb4:	sti    
  409cb5:	pop    ds
  409cb6:	jmp    0xd75c79ef
  409cbb:	shl    DWORD PTR [ebp+0x12],cl
  409cbe:	fnstenv [ecx+edx*2]
  409cc1:	adc    cl,BYTE PTR [ebx+0x5e]
  409cc4:	inc    ecx
  409cc5:	pop    ecx
  409cc6:	and    al,0xaf
  409cc8:	dec    ebp
  409cc9:	adc    cl,BYTE PTR [ebx-0x4e]
  409ccc:	push   eax
  409ccd:	inc    esi
  409cce:	and    ebp,DWORD PTR [edi-0x41d4edc3]
  409cd4:	inc    eax
  409cd5:	dec    esi
  409cd6:	add    ebp,DWORD PTR [edi-0x45d4edd3]
  409cdc:	adc    BYTE PTR [esi+0x3],dl
  409cdf:	scas   eax,DWORD PTR es:[edi]
  409ce0:	sbb    eax,0x113014c1
  409ce5:	add    eax,DWORD PTR [edx]
  409ce7:	pop    ebx
  409ce8:	loop   0x409d03
  409cea:	xchg   ecx,eax
  409ceb:	out    0xfd,eax
  409ced:	adc    BYTE PTR [ecx-0x52],bh
  409cf0:	jno    0x409cba
  409cf2:	imul   ecx,DWORD PTR ds:0x629e4520,0xe2727e94
  409cfc:	lods   al,BYTE PTR ds:[esi]
  409cfd:	adc    BYTE PTR [eax],al
	...
  409d0f:	add    BYTE PTR [ecx+0x38],bl
  409d12:	in     eax,dx
  409d13:	sbb    ebx,ebp
  409d15:	jmp    0xd153:0xa29d11d5
  409d1c:	adc    ch,BYTE PTR [eax]
  409d1e:	lds    esi,FWORD PTR [ecx+esi*1+0x31116c94]
  409d25:	scas   al,BYTE PTR es:[edi]
  409d26:	(bad)  
  409d27:	cmp    eax,DWORD PTR [esi+0x7ddd74ad]
  409d2d:	cmc    
  409d2e:	lea    esp,[esi+0x15c05987]
  409d34:	pop    es
  409d35:	lods   eax,DWORD PTR ds:[esi]
  409d36:	je     0x409d19
  409d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d39:	aaa    
  409d3a:	cld    
  409d3b:	or     DWORD PTR [edi],0xfb86feb0
  409d41:	in     eax,dx
  409d42:	je     0x409d1d
  409d44:	or     eax,0x44860eae
  409d49:	lods   eax,DWORD PTR ds:[esi]
  409d4a:	je     0x409d29
  409d4c:	xchg   BYTE PTR [edi],dh
  409d4e:	or     BYTE PTR [ecx+0x74],dl
  409d51:	cmc    
  409d52:	(bad)  
  409d53:	pop    esi
  409d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d55:	aaa    
  409d56:	cld    
  409d57:	inc    ecx
  409d58:	pop    edx
  409d59:	fdivp  st(6),st
  409d5b:	dec    esi
  409d5c:	jge    0x409cfe
  409d5e:	pop    es
  409d5f:	jmp    0x692c7664
  409d64:	pop    esi
  409d65:	idiv   ch
  409d67:	xchg   DWORD PTR ss:[ebp-0x527b8e7c],esp
  409d6e:	(bad)  
  409d6f:	jmp    0x72410009
	...
  409d84:	add    BYTE PTR [eax],al
  409d86:	pop    ecx
  409d87:	pop    ecx
  409d88:	or     ebp,DWORD PTR [ecx]
  409d8a:	cs data16 adc cl,0x95
  409d8f:	aaa    
  409d90:	add    eax,0x624510
  409d95:	jmp    0x14cd520
  409d9a:	xchg   esi,eax
  409d9b:	add    bh,bh
  409d9d:	out    dx,al
  409d9e:	(bad)  
  409d9f:	in     eax,dx
  409da0:	je     0x409d98
  409da2:	std    
  409da3:	sub    BYTE PTR [eax+ebp*1],ch
  409da6:	call   0x97fb:0xade574ad
  409dad:	into   
  409dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409daf:	mov    ecx,0xe1e7000c
  409db4:	sub    eax,DWORD PTR [ecx+0x3f]
  409db7:	push   edx
  409db8:	jne    0x409dc6
  409dba:	push   edi
  409dbb:	aas    
  409dbc:	cwde   
  409dbd:	push   eax
  409dbf:	daa    
  409dc0:	test   DWORD PTR [eax+0x68ff51f1],edi
  409dc6:	icebp  
  409dc7:	pop    edi
  409dc8:	add    BYTE PTR [eax],al
  409dca:	jb     0x409db0
  409dcc:	sar    esi,0x10
  409dcf:	push   edx
  409dd0:	push   eax
  409dd1:	call   0x3fd1b3
  409dd6:	and    ah,0xc1
  409dd9:	(bad)  
  409dda:	pusha  
  409ddb:	push   edx
  409ddc:	push   eax
  409ddd:	jmp    FWORD PTR [edx+0x70fffe19]
  409de3:	dec    ecx
  409de4:	dec    esi
  409de5:	mov    di,0x8960
  409de9:	test   DWORD PTR [eax],eax
	...
  409dfb:	add    BYTE PTR [ebx],ah
  409dfd:	push   ebx
  409dfe:	(bad)  
  409dff:	(bad)  
  409e00:	out    dx,eax
  409e01:	popa   
  409e02:	test   bl,dh
  409e04:	scas   eax,DWORD PTR es:[edi]
  409e05:	pusha  
  409e06:	add    BYTE PTR [ebp-0x1d8b6],cl
  409e0c:	pusha  
  409e0d:	dec    edx
  409e0e:	add    dl,BYTE PTR [eax]
  409e10:	scas   eax,DWORD PTR es:[edi]
  409e11:	pusha  
  409e12:	add    BYTE PTR [edx+esi*8+0x2b],dh
  409e16:	inc    edx
  409e17:	sub    al,0x4f
  409e19:	enter  0x2c75,0x3e
  409e1d:	pusha  
  409e1e:	call   0xa0b74e
  409e23:	or     ebp,DWORD PTR [edi-0x3916fc2c]
  409e29:	pop    edi
  409e2a:	add    BYTE PTR [eax],al
  409e2c:	repnz xor al,0xc2
  409e2f:	(bad)  
  409e30:	jo     0x409e8e
  409e32:	lea    eax,[edx-0x7d]
  409e35:	mul    BYTE PTR [esi+0x79]
  409e38:	mov    ds:0x96e7fea5,eax
  409e3d:	ret    
  409e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e3f:	inc    DWORD PTR [ecx-0x3f]
  409e42:	inc    edx
  409e43:	jne    0x409dd8
  409e45:	xchg   edx,eax
  409e46:	jg     0x409e48
  409e48:	xchg   esi,eax
  409e49:	mov    ecx,0xa19a750d
  409e4e:	lahf   
  409e4f:	sahf   
  409e50:	and    ebp,edi
  409e52:	cli    
  409e53:	mov    edi,0x8a9ab4a3
  409e58:	mov    esi,0x83ff047a
  409e5d:	lds    ebx,FWORD PTR [edx]
  409e5f:	or     DWORD PTR [eax],eax
	...
  409e71:	add    BYTE PTR [esi],bl
  409e73:	fisttp QWORD PTR [esi]
  409e75:	jmp    0x409e03
  409e77:	dec    edi
  409e78:	add    al,0xff
  409e7a:	imul   edi,DWORD PTR [ebp+0x3501fd1a],0xf
  409e81:	lea    ecx,[ebx]
  409e83:	clc    
  409e84:	or     eax,0xb236d9ff
  409e89:	sub    esp,DWORD PTR [ecx+ebp*8+0x1a]
  409e8d:	inc    ecx
  409e8e:	cs adc eax,0x96c1500f
  409e94:	repnz dec edi
  409e96:	mov    ecx,0xace7faee
  409e9b:	imul   ecx,DWORD PTR [edi],0xffffffff
  409e9e:	mov    esi,0xa1ff76b5
  409ea3:	and    bl,al
  409ea5:	mov    WORD PTR [ebp+edx*4+0x7b],ss
  409ea9:	test   DWORD PTR [edx+0x4b],ecx
  409eac:	ud0    ecx,DWORD PTR [ecx+0x4bfef2ce]
  409eb3:	adc    eax,0x5179ff0e
  409eb8:	dec    edi
  409eb9:	xchg   si,ax
  409ebb:	mov    ecx,0xa1e2bff9
  409ec0:	call   0xe3ff:0x2faae8a
  409ec7:	(bad)  
  409ec8:	cmc    
  409ec9:	sbb    eax,DWORD PTR [edi]
  409ecb:	rcr    ebp,cl
  409ecd:	push   cs
  409ece:	dec    ecx
  409ecf:	cmc    
  409ed0:	pushf  
  409ed1:	or     eax,0x1c38ab41
	...
  409ee6:	add    BYTE PTR [eax],al
  409ee8:	aas    
  409ee9:	rol    ebp,cl
  409eeb:	push   cs
  409eec:	(bad)  
  409eed:	adc    bh,BYTE PTR [esi+0x48ba9198]
  409ef3:	push   cs
  409ef4:	and    DWORD PTR [ebx-0x54fae940],ebp
  409efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409efb:	sbb    BYTE PTR [ebx],0xa0
  409efe:	sahf   
  409eff:	push   cs
  409f00:	or     DWORD PTR [edx],edx
  409f02:	xchg   esi,eax
  409f03:	pop    eax
  409f04:	inc    edx
  409f05:	lods   al,BYTE PTR ds:[esi]
  409f06:	lea    ecx,[esi]
  409f08:	out    dx,al
  409f09:	cmp    al,0xc
  409f0b:	add    al,0x96
  409f0d:	in     eax,0xa8
  409f0f:	(bad)  
  409f10:	adc    cl,BYTE PTR [edx+0x76]
  409f13:	push   cs
  409f14:	loope  0x409ec0
  409f16:	xor    ecx,DWORD PTR [edi-0x28]
  409f19:	stos   BYTE PTR es:[edi],al
  409f1a:	sbb    esi,DWORD PTR gs:[esi]
  409f1d:	inc    ebp
  409f1e:	jmp    0x91356826
  409f23:	or     eax,0x4640aac1
  409f28:	and    eax,0xd43c45ab
  409f2d:	pop    ebp
  409f2e:	jmp    0x67febbeb
  409f33:	inc    edi
  409f34:	out    0xab,al
  409f36:	sub    eax,0x60e4d10e
  409f3b:	or     eax,0x3e8aa91
  409f40:	xchg   esi,eax
  409f41:	bound  esp,QWORD PTR [edx-0x38]
  409f44:	lea    ebx,[ebp+0x29]
  409f47:	xchg   edi,eax
  409f48:	xchg   edx,eax
  409f49:	loop   0x409f0b
  409f4b:	add    eax,DWORD PTR [eax]
	...
  409f5d:	add    bl,ch
  409f5f:	pop    edi
  409f60:	adc    ah,bh
  409f62:	xchg   esi,eax
  409f63:	bound  eax,QWORD PTR [eax]
  409f65:	jmp    0xa86ccd67
  409f6a:	xchg   ebp,eax
  409f6b:	test   eax,0x73adf574
  409f70:	xchg   edi,eax
  409f71:	ficomp WORD PTR [ebx-0x6f6e7b25]
  409f77:	test   eax,0x634841fe
  409f7c:	add    cl,ch
  409f7e:	mov    al,0xdf
  409f80:	sar    DWORD PTR [edi-0x3eb05665],0xbd
  409f87:	aad    0xfe
  409f89:	scas   al,BYTE PTR es:[edi]
  409f8a:	cdq    
  409f8b:	ffreep st(1)
  409f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8e:	mov    ds:0x619e4fa9,eax
  409f93:	jmp    0x5e4:0xba9396fd
  409f9a:	xchg   edx,eax
  409f9b:	bound  ecx,QWORD PTR [ecx-0x157b994]
  409fa1:	jle    0x409f75
  409fa3:	pop    eax
  409fa4:	test   BYTE PTR [edi+0x5c00629a],ch
  409faa:	popa   
  409fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fac:	std    
  409fad:	mov    ds:0x95f901b1,ax
  409fb3:	bound  eax,QWORD PTR [eax]
  409fb5:	out    0x19,al
  409fb7:	(bad)  
  409fb9:	call   0x2bd57753
  409fbe:	mov    al,ds:0x6cfea9
	...
  409fd3:	add    ah,dl
  409fd5:	jge    0x40a027
  409fd7:	ror    DWORD PTR [edx],0x7e
  409fda:	inc    ecx
  409fdb:	jmp    0xe9a48a5d
  409fe0:	xchg   ebp,eax
  409fe1:	pop    ebp
  409fe2:	rcl    BYTE PTR [edi+edx*4+0x96474bd],0xa5
  409fea:	std    
  409feb:	push   cs
  409fec:	mov    edx,edi
  409fee:	inc    ecx
  409fef:	add    BYTE PTR [ebx-0xb],cl
  409ff2:	data16 jns 0x40a050
  409ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff6:	(bad)  
  409ff7:	out    0xc9,eax
  409ff9:	cli    
  409ffa:	(bad)  
  409ffb:	push   DWORD PTR [ebp+eiz*1+0x75]
  409fff:	add    ah,BYTE PTR [edx+edi*8-0x75]
  40a003:	xchg   ebp,eax
  40a004:	std    
  40a005:	push   esi
  40a006:	(bad)  
  40a007:	(bad)  
  40a008:	mov    edx,0xb2892aa3
  40a00d:	adc    esi,edi
  40a00f:	call   FWORD PTR [eax-0x33]
  40a012:	mov    DWORD PTR [eax],ebp
  40a014:	jle    0x40a074
  40a016:	push   DWORD PTR [ebp+0x3b]
  40a019:	dec    ebp
  40a01a:	cdq    
  40a01b:	xchg   esi,eax
  40a01c:	call   0x73f69f76
  40a021:	push   edi
  40a022:	(bad)  
  40a023:	dec    edi
  40a025:	inc    esi
  40a026:	loope  0x409fbe
  40a028:	sub    BYTE PTR [esi-0x77],dl
  40a02b:	test   DWORD PTR [edi+0x57],ebx
  40a02e:	(bad)  
  40a02f:	dec    DWORD PTR [edi-0x41c3f93a]
  40a035:	pop    esi
  40a036:	push   DWORD PTR [ebp+0x0]
	...
  40a048:	add    BYTE PTR [eax],al
  40a04a:	lahf   
  40a04b:	push   edi
  40a04c:	(bad)  
  40a04d:	call   DWORD PTR [edi]
  40a04f:	shl    BYTE PTR [ebx+0x0],cl
  40a052:	mov    edi,0xcc74bea9
  40a057:	int3   
  40a058:	or     al,0x3c
  40a05a:	out    dx,al
  40a05b:	push   DWORD PTR fs:[ebp-0xa8e1]
  40a062:	pop    eax
  40a063:	rol    BYTE PTR [esi],1
  40a065:	call   0x3ff840
  40a06a:	push   edi
  40a06b:	sbb    dl,BYTE PTR [edx-0x7ad79701]
  40a071:	ret    0x56b9
  40a074:	call   DWORD PTR [eax-0x58]
  40a077:	adc    BYTE PTR [esi+edi*8-0x17f3af6a],bh
  40a07e:	(bad)  
  40a07f:	fld    QWORD PTR [edx]
  40a081:	add    BYTE PTR [ebx],bl
  40a083:	jp     0x40a081
  40a085:	test   bl,dl
  40a087:	test   al,0xa
  40a089:	jmp    DWORD PTR [ecx+0x67]
  40a08c:	dec    edi
  40a08d:	(bad)  
  40a08e:	pop    ecx
  40a08f:	mov    ecx,0xb9ba2419
  40a094:	add    bh,bh
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	or     bh,bh
  40a09a:	inc    ecx
  40a09b:	mov    ds:0x9939927e,al
  40a0a0:	cmp    al,0xc2
  40a0a2:	sahf   
  40a0a3:	mov    ecx,0xe93a8aaf
  40a0a8:	nop
  40a0a9:	or     ebp,DWORD PTR [esi]
  40a0ab:	add    eax,0xff72
	...
  40a0c0:	sbb    ebp,eax
  40a0c2:	inc    edx
  40a0c3:	je     0x40a066
  40a0c5:	imul   esi,DWORD PTR [esi+edi*8-0x54e54e7d],0xe80ad100
  40a0d0:	outs   dx,DWORD PTR ds:[esi]
  40a0d1:	sub    ecx,DWORD PTR [ebx]
  40a0d3:	(bad)  
  40a0d4:	(bad)  
  40a0d6:	sti    
  40a0d7:	inc    DWORD PTR [edx+0x34]
  40a0da:	sbb    BYTE PTR [ebx-0x61d226],al
  40a0e0:	outs   dx,DWORD PTR ds:[esi]
  40a0e1:	call   0x8f7f:0x119e7509
  40a0e8:	leave  
  40a0e9:	or     BYTE PTR [ebp+0x45],bh
  40a0ec:	ret    0xeca3
  40a0ef:	inc    BYTE PTR [ebx-0x3f]
  40a0f2:	sbb    bh,BYTE PTR [edi+0x6a0b20b1]
  40a0f8:	jne    0x40a162
  40a0fa:	xchg   ecx,eax
  40a0fb:	pop    es
  40a0fc:	scas   al,BYTE PTR es:[edi]
  40a0fd:	es or  edi,edi
  40a100:	cdq    
  40a101:	mov    ds:0x630bfee6,eax
  40a106:	icebp  
  40a107:	sbb    edi,DWORD PTR ds:0xec0b1da7
  40a10d:	bound  eax,QWORD PTR [ecx-0x16de422d]
  40a113:	fwait
  40a114:	mov    DWORD PTR [esi-0x58],esp
  40a117:	add    ebp,DWORD PTR [ecx+0x6d]
  40a11a:	jecxz  0x40a0f8
  40a11c:	(bad)  
  40a11d:	bound  eax,QWORD PTR [ecx]
  40a11f:	xlat   BYTE PTR ds:[ebx]
  40a120:	add    ah,BYTE PTR [edi+0xfeed]
	...
  40a136:	adc    DWORD PTR [esi],ebp
  40a138:	std    
  40a139:	mov    bl,0xb1
  40a13b:	pop    eax
  40a13c:	sbb    eax,0xd61741c5
  40a141:	nop
  40a142:	xchg   ecx,eax
  40a143:	mov    edx,0xa73107a7
  40a148:	rol    BYTE PTR [esi],1
  40a14a:	add    al,0xa7
  40a14c:	mov    ebp,0x293f219d
  40a151:	enter  0x62d6,0x41
  40a155:	in     al,dx
  40a156:	int    0x21
  40a158:	jmp    0xd08d6467
  40a15d:	les    eax,FWORD PTR [ecx]
  40a15f:	mov    edi,0xa6f970ec
  40a164:	loope  0x40a1a9
  40a166:	push   0x4e
  40a168:	sbb    DWORD PTR [ebx+ebx*4+0x46042866],ebx
  40a16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a170:	sti    
  40a171:	sti    
  40a172:	icebp  
  40a173:	shr    DWORD PTR [edx+ecx*1-0x2f],cl
  40a177:	mov    ecx,0xa6c9743c
  40a17c:	rol    BYTE PTR [ebx],cl
  40a17e:	sub    al,0x62
  40a180:	shl    DWORD PTR [ebp-0x6416de83],0xb1
  40a187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a188:	call   0x54c96010
  40a18d:	or     ah,BYTE PTR [ecx+0x929005a]
  40a193:	adc    DWORD PTR [eax-0x67],0xffffffad
  40a197:	and    eax,0x269b
	...
  40a1ac:	pushf  
  40a1ad:	pop    ecx
  40a1ae:	rcl    BYTE PTR [ebp-0x1897e98f],0x51
  40a1b5:	and    eax,DWORD PTR [eax]
  40a1b7:	mov    ecx,0x11082f9c
  40a1bc:	xor    DWORD PTR [edx-0x3b830102],ebp
  40a1c2:	nop
  40a1c3:	test   BYTE PTR [edi-0x63a76746],0xa5
  40a1ca:	(bad)  
  40a1cb:	pop    esp
  40a1cc:	sahf   
  40a1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ce:	je     0x40a1c1
  40a1d0:	popf   
  40a1d1:	push   esi
  40a1d2:	(bad)  
  40a1d3:	(bad)  
  40a1d4:	(bad)  
  40a1d5:	fwait
  40a1d6:	shl    ebp,0x95
  40a1d9:	jnp    0xebdfb7b4
  40a1df:	mov    dh,0x8f
  40a1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e2:	mov    WORD PTR [esi+ecx*4],gs
  40a1e5:	adc    bh,bh
  40a1e7:	xor    al,0xa
  40a1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ea:	je     0x40a1e1
  40a1ec:	lods   eax,DWORD PTR ds:[esi]
  40a1ed:	nop
  40a1ee:	(bad)  
  40a1ef:	jmp    0xe700fb89
  40a1f4:	js     0x40a18f
  40a1f6:	(bad)  
  40a1f7:	call   0x81853f91
  40a1fc:	xchg   edx,eax
  40a1fd:	bound  eax,QWORD PTR [eax]
  40a1ff:	jmp    0x7734c15a
  40a204:	xchg   edi,eax
  40a205:	bound  eax,QWORD PTR [eax]
  40a207:	add    ebx,DWORD PTR [edx-0x6a2cffc8]
  40a20d:	cmp    BYTE PTR [eax],al
  40a20f:	ins    BYTE PTR es:[edi],dx
	...
  40a220:	add    BYTE PTR [eax],al
  40a222:	add    DWORD PTR [edx-0x51c69bb1],esi
  40a228:	test   BYTE PTR [esi-0x61],0x12
  40a22c:	inc    DWORD PTR [eax]
  40a22e:	jmp    0xa446:0x6375ff59
  40a235:	arpl   WORD PTR [edi+0x4bc00b61],bp
  40a23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a23c:	out    0x8e,eax
  40a23e:	jg     0x40a2a1
  40a240:	add    BYTE PTR [eax+0x4],ch
  40a243:	xchg   DWORD PTR [edi],edi
  40a245:	add    BYTE PTR [eax-0x4717f12b],ah
  40a24b:	xor    bh,bh
  40a24d:	dec    DWORD PTR [edi]
  40a24f:	ror    BYTE PTR es:[ebp-0x8ad06],1
  40a256:	pusha  
  40a257:	icebp  
  40a258:	push   eax
  40a259:	call   0x3fd4e6
  40a25e:	(bad)  
  40a25f:	and    al,0xf0
  40a261:	mul    DWORD PTR [eax+0x5a]
  40a264:	call   0xff9b6076
  40a269:	push   0x3f
  40a26b:	leave  
  40a26c:	xchg   esi,eax
  40a26d:	cmp    al,0x7e
  40a26f:	pop    esi
  40a270:	push   DWORD PTR [ebp-0xae21]
  40a276:	loopne 0x40a24b
  40a278:	or     ch,al
  40a27a:	out    dx,eax
  40a27b:	xor    al,0xff
  40a27d:	inc    DWORD PTR [esi+0x20f7ec24]
  40a283:	pop    edx
  40a284:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  40a297:	add    BYTE PTR [ebx],dl
  40a299:	push   edx
  40a29a:	(bad)  
  40a29b:	(bad)  
  40a29c:	call   esp
  40a29e:	adc    DWORD PTR [eax-0x2],ebp
  40a2a1:	pusha  
  40a2a2:	out    dx,eax
  40a2a3:	mov    esi,0xf7ec1460
  40a2a8:	pusha  
  40a2a9:	pop    edx
  40a2aa:	push   DWORD PTR [ebp-0x49]
  40a2ad:	dec    eax
  40a2ae:	xchg   edi,eax
  40a2af:	mov    dl,0x30
  40a2b1:	pop    edx
  40a2b2:	push   DWORD PTR [ebp-0xadad]
  40a2b8:	xchg   esi,eax
  40a2b9:	and    edi,DWORD PTR [eax+edx*4]
  40a2bc:	mov    cl,0x13
  40a2be:	or     BYTE PTR [ebp-0xf79c5a],dh
  40a2c4:	mov    eax,ds:0x23fef6ed
  40a2c9:	ret    
  40a2ca:	sbb    dh,BYTE PTR [eax]
  40a2cc:	xchg   ecx,eax
  40a2cd:	jne    0x40a2d7
  40a2cf:	inc    DWORD PTR [ebx+0x4a]
  40a2d2:	adc    bh,bh
  40a2d4:	adc    DWORD PTR [edx+0x58],0x84d7990
  40a2db:	inc    ebp
  40a2dc:	outs   dx,BYTE PTR ds:[esi]
  40a2dd:	arpl   WORD PTR [edi+0x85d69fe],di
  40a2e3:	jne    0x40a347
  40a2e5:	push   edx
  40a2e6:	or     ah,BYTE PTR [edx-0x6a]
  40a2e9:	mov    ecx,0xb9a2c239
  40a2ee:	lods   eax,DWORD PTR ds:[esi]
  40a2ef:	mov    bh,BYTE PTR [edx]
  40a2f1:	cmp    eax,DWORD PTR [eax-0x18]
  40a2f4:	dec    ecx
  40a2f5:	test   DWORD PTR [esi],eax
  40a2f7:	(bad)  
  40a2f8:	ror    DWORD PTR [ebp+0xfeb3],cl
	...
  40a30e:	stos   DWORD PTR es:[edi],eax
  40a30f:	test   eax,0x919a7505
  40a314:	and    ah,BYTE PTR [edx-0x6a]
  40a317:	mov    ecx,0x3689bff9
  40a31c:	out    0x0,al
  40a31e:	xchg   esi,eax
  40a31f:	mov    ecx,0xba0e453d
  40a324:	add    al,BYTE PTR [eax]
  40a326:	xchg   esi,eax
  40a327:	cld    
  40a328:	shl    bl,0xf9
  40a32b:	mov    ah,0x2
  40a32d:	add    BYTE PTR [ecx+edi*4-0x68],bh
  40a331:	(bad)  
  40a332:	jg     0x40a2ed
  40a334:	cwde   
  40a335:	call   DWORD PTR [edx]
  40a337:	jg     0x40a349
  40a339:	push   eax
  40a33a:	or     esi,DWORD PTR [edi]
  40a33c:	adc    bh,dh
  40a33e:	shl    DWORD PTR [esp+esi*4],1
  40a341:	inc    BYTE PTR [ebx+0x62]
  40a344:	popa   
  40a345:	pop    es
  40a346:	dec    ebx
  40a347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a348:	push   eax
  40a349:	push   ecx
  40a34a:	xor    al,0x62
  40a34c:	jmp    0xe46f954b
  40a351:	sbb    al,0xb7
  40a353:	(bad)  
  40a354:	jmp    0x1117d15c
  40a359:	lds    ebx,FWORD PTR [ecx+0x79f3bba4]
  40a35f:	mov    bl,BYTE PTR [ecx+0x7]
  40a362:	mov    DWORD PTR [edx],edx
  40a364:	jb     0x40a39a
  40a366:	adc    ebx,ebp
  40a368:	adc    al,0xf
  40a36a:	jns    0x40a30f
  40a36c:	mov    eax,0x799a79b1
  40a371:	pop    es
	...
  40a382:	add    BYTE PTR [eax],al
  40a384:	imul   ebx,ecx,0xa369146b
  40a38a:	std    
  40a38b:	sbb    edi,DWORD PTR [eax-0x2e]
  40a38e:	cmc    
  40a38f:	push   es
  40a390:	mov    esp,0x49038362
  40a395:	in     eax,dx
  40a396:	fmul   DWORD PTR [esi]
  40a398:	inc    ecx
  40a399:	mov    ds:0xba8d90dd,eax
  40a39e:	or     al,0x73
  40a3a0:	xor    DWORD PTR [ebx-0x54c57fa1],esp
  40a3a6:	lds    eax,FWORD PTR [esi]
  40a3a8:	and    ebp,ebp
  40a3aa:	int3   
  40a3ab:	push   cs
  40a3ac:	sbb    DWORD PTR [ebx-0x5cd0c040],esp
  40a3b2:	lods   eax,DWORD PTR ds:[esi]
  40a3b3:	cli    
  40a3b4:	dec    ecx
  40a3b5:	or     dh,BYTE PTR cs:[esi+ecx*1-0x6f16f23]
  40a3bd:	mov    ds:0xaafe5095,al
  40a3c2:	lea    eax,[esi]
  40a3c4:	(bad)  
  40a3c5:	pusha  
  40a3c6:	pop    esp
  40a3c7:	push   es
  40a3c8:	loope  0x40a420
  40a3ca:	test   eax,0x3a518f
  40a3cf:	jmp    0x40a366
  40a3d1:	mov    bl,0xbd
  40a3d3:	add    DWORD PTR [esi-0x6716be9b],edi
  40a3d9:	in     eax,dx
  40a3da:	out    0x56,eax
  40a3dc:	nop
  40a3dd:	mov    ds:0xbaaddcfe,eax
  40a3e2:	xchg   edi,eax
  40a3e3:	xchg   ebp,eax
  40a3e4:	nop
  40a3e5:	mov    ds:0xeb67,eax
	...
  40a3fa:	xchg   ebp,eax
  40a3fb:	mov    bl,0xbd
  40a3fd:	rol    ecx,1
  40a3ff:	gs inc ecx
  40a401:	jmp    0x37287b9e
  40a406:	nop
  40a407:	mov    eax,ds:0x8a7d9cfe
  40a40c:	jg     0x40a463
  40a40e:	nop
  40a40f:	mov    eax,ds:0x9195e967
  40a414:	mov    ebp,0x415e0581
  40a419:	jmp    0xf7287bb6
  40a41e:	xchg   ebx,eax
  40a41f:	mov    eax,ds:0x8a4d7cfe
  40a424:	addr16 xor eax,0x7de7a190
  40a42a:	retf   
  40a42b:	mov    eax,ds:0x8ec9defe
  40a430:	not    dh
  40a432:	fwait
  40a433:	mov    cl,BYTE PTR [eax-0x15e6ca2]
  40a439:	jl     0x40a3c5
  40a43b:	cdq    
  40a43c:	(bad)  
  40a43d:	mov    esi,0xb60c1793
  40a442:	and    DWORD PTR [edx-0x18],ebp
  40a445:	mov    WORD PTR [eax+0x51a6fea1],ss
  40a44b:	xchg   edx,eax
  40a44c:	neg    BYTE PTR [esi+0x666c8a93]
  40a452:	fwait
  40a453:	mov    eax,ds:0x8b9a24fe
  40a458:	lock add BYTE PTR [ecx],bl
  40a45b:	push   0xffff
	...
  40a470:	loop   0x40a4db
  40a472:	call   0xa7432e
  40a477:	leave  
  40a478:	std    
  40a479:	call   0xc483:0x7a4454fe
  40a480:	pop    ebx
  40a481:	cld    
  40a482:	(bad)  
  40a483:	imul   ebx,DWORD PTR [ebp+0x57087567],0x58ff8ae7
  40a48d:	sbb    eax,0x65c7fc45
  40a492:	add    bh,ch
  40a494:	or     edi,edi
  40a496:	outs   dx,BYTE PTR ds:[esi]
  40a497:	cmp    al,0x3e
  40a499:	gs push 0xfea47b80
  40a49f:	(bad)  
  40a4a0:	and    bl,BYTE PTR [ebp+0x67d347e6]
  40a4a6:	jmp    FWORD PTR [eax-0x9]
  40a4a9:	stos   BYTE PTR es:[edi],al
  40a4aa:	aas    
  40a4ab:	add    BYTE PTR [eax+0x2e2918b1],bl
  40a4b1:	push   DWORD PTR gs:[ebp+0x37]
  40a4b5:	jge    0x40a447
  40a4b7:	std    
  40a4b8:	cmp    BYTE PTR [esi+0x68],ah
  40a4bb:	mov    BYTE PTR [ebx-0x5b],bh
  40a4be:	(bad)  
  40a4bf:	addr16 sub eax,0x48800065
  40a4c5:	lock push es
  40a4c7:	call   0x400ea5
  40a4cc:	(bad)  
  40a4cd:	or     bh,BYTE PTR [ecx+eax*2]
  40a4d0:	das    
  40a4d1:	std    
	...
  40a4e6:	jmp    esp
  40a4e8:	(bad)  
  40a4e9:	jne    0x40a4e2
  40a4eb:	jl     0x40a548
  40a4ed:	(bad)  
  40a4ee:	cmp    BYTE PTR [esi+0x68],ah
  40a4f1:	(bad)  
  40a4f3:	mov    ds:0x8d9667fe,eax
  40a4f8:	add    al,BYTE PTR [eax]
  40a4fa:	push   ss
  40a4fb:	lock lea eax,[edi]
  40a4fe:	out    dx,al
  40a4ff:	push   ecx
  40a500:	push   es
  40a501:	(bad)  
  40a502:	fstp   DWORD PTR [edi]
  40a504:	mov    ?,ebx
  40a506:	rcr    DWORD PTR [ebp+0x3f61e7fa],1
  40a50c:	add    al,0xff
  40a50e:	iret   
  40a50f:	dec    esp
  40a510:	(bad)  
  40a511:	jmp    DWORD PTR [edx+0x14]
  40a514:	pop    ss
  40a515:	jmp    FWORD PTR [ebx]
  40a517:	xchg   DWORD PTR [edx],ebx
  40a519:	sbb    DWORD PTR ds:0xd60b0430,eax
  40a51f:	fmulp  st(1),st
  40a521:	addr16 inc ebx
  40a523:	sahf   
  40a524:	sar    edi,0xe1
  40a527:	and    DWORD PTR [ebp-0x6e],edx
  40a52a:	mov    DWORD PTR [ecx-0x4d],edx
  40a52d:	dec    edi
  40a52e:	out    dx,al
  40a52f:	mov    DWORD PTR [edx],eax
  40a531:	out    dx,eax
  40a532:	cmp    dl,dh
  40a534:	retf   0xd73c
  40a537:	mov    DWORD PTR [edx+0x1a81e3fe],esi
  40a53d:	jne    0x40a564
  40a53f:	imul   eax,DWORD PTR [eax+ebx*2],0xef028aee
  40a546:	adc    dl,ah
  40a548:	mov    ebx,0x3c
	...
  40a559:	add    BYTE PTR [eax],al
  40a55b:	add    bh,dl
  40a55d:	mov    DWORD PTR [edx-0x156e3402],esi
  40a563:	pusha  
  40a564:	add    eax,0x23e802c1
  40a569:	or     BYTE PTR [ebx],al
  40a56b:	call   FWORD PTR [edi-0x34]
  40a56e:	or     eax,DWORD PTR [eax]
  40a570:	retf   
  40a571:	adc    al,0xf0
  40a573:	adc    BYTE PTR [edx-0x22],0x6d
  40a577:	add    BYTE PTR [esp+ebp*2+0x3],bh
  40a57b:	jne    0x40a51b
  40a57d:	mov    eax,ds:0x63018ab2
  40a582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a583:	lea    edx,[edx-0x62]
  40a586:	adc    bl,BYTE PTR [esi]
  40a588:	icebp  
  40a589:	adc    eax,0xa002ebe1
  40a58e:	lea    eax,[ebx]
  40a590:	ins    BYTE PTR es:[edi],dx
  40a591:	inc    ebx
  40a592:	xchg   BYTE PTR [ecx-0x72],bh
  40a595:	mov    dh,BYTE PTR [ecx+0x3]
  40a598:	rcr    DWORD PTR [edi+0x15c92002],1
  40a59e:	loope  0x40a58b
  40a5a0:	push   ss
  40a5a1:	mov    al,ds:0x15b90365
  40a5a6:	pop    ebp
  40a5a7:	add    ebp,DWORD PTR [ebx]
  40a5a9:	push   0x41
  40a5ab:	int    0x1c
  40a5ad:	mov    al,ds:0x66d7cd4d
  40a5b2:	jmp    0x99cfb30f
  40a5b7:	retf   0x6f9a
  40a5ba:	test   BYTE PTR [esi+edx*4+0x62],0xe9
  40a5bf:	add    eax,DWORD PTR [eax]
	...
  40a5d1:	add    BYTE PTR [esi+0x303424b],dl
  40a5d7:	imul   edx,DWORD PTR [ecx],0x37
  40a5da:	shl    DWORD PTR [edx-0x17],1
  40a5dd:	mov    es,edx
  40a5df:	push   0x6a
  40a5e1:	cld    
  40a5e2:	xchg   edi,eax
  40a5e3:	sbb    al,bl
  40a5e5:	push   es
  40a5e6:	inc    esi
  40a5e7:	jecxz  0x40a5fb
  40a5e9:	push   es
  40a5ea:	mov    eax,0xea5fb2e1
  40a5ef:	adc    eax,0x645969e4
  40a5f4:	inc    ebp
  40a5f5:	add    al,0x39
  40a5f7:	adc    eax,0x3f5bebed
  40a5fc:	jmp    0xbd76404
  40a601:	inc    ebp
  40a602:	xchg   esi,eax
  40a603:	or     cl,BYTE PTR [ebp+0x41]
  40a606:	xlat   BYTE PTR ds:[ebx]
  40a607:	(bad)  
  40a609:	cdq    
  40a60a:	sub    DWORD PTR [edi-0x5d674a01],ebx
  40a610:	jae    0x40a656
  40a612:	xchg   ebp,eax
  40a613:	adc    eax,0x969ea608
  40a618:	cmp    al,0x28
  40a61a:	call   0x74a2:0x98edc3e3
  40a621:	xor    al,0x95
  40a623:	jne    0x40a629
  40a625:	(bad)  
  40a626:	push   edx
  40a627:	bound  esp,QWORD PTR [ebx+0x2154ee]
  40a62d:	push   0x56
  40a62f:	outs   dx,DWORD PTR ds:[esi]
  40a630:	aas    
  40a631:	sub    BYTE PTR [edx+0xf17562],bl
	...
  40a647:	add    BYTE PTR [ebp+esi*2+0x625b1cf8],dl
  40a64e:	jmp    0x40a660
  40a650:	cmp    BYTE PTR [edx+0x6a],ah
  40a653:	call   0x64ffbec
  40a658:	push   ebx
  40a659:	(bad)  
  40a65a:	call   esp
  40a65c:	popf   
  40a65d:	pop    esp
  40a65e:	inc    ecx
  40a65f:	jmp    0xe24c4874
  40a664:	push   ebp
  40a665:	adc    ah,BYTE PTR [ecx]
  40a667:	es mov esi,0x95a83f6d
  40a66d:	popf   
  40a66e:	adc    al,0xf9
  40a670:	xlat   BYTE PTR ds:[ebx]
  40a671:	and    eax,DWORD PTR [eax]
  40a673:	push   0x59
  40a675:	(bad)  
  40a676:	(bad)  
  40a677:	fcomp  QWORD PTR [ebp+0x5f]
  40a67a:	inc    ecx
  40a67b:	jmp    0xb6500ddc
  40a680:	shl    BYTE PTR [edx+0x0],cl
  40a683:	jmp    0xe92c091d
  40a688:	shr    cl,cl
  40a68a:	ret    0x5d42
  40a68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a68e:	pop    es
  40a68f:	jmp    0xe5005a6
  40a694:	aad    0x62
  40a696:	add    BYTE PTR [eax],al
  40a698:	pop    ebx
  40a699:	inc    ebx
  40a69a:	push   DWORD PTR ds:0x412300
  40a6a0:	inc    eax
  40a6a1:	jbe    0x40a6b3
  40a6a3:	ds scas al,BYTE PTR es:[edi]
  40a6a5:	add    sp,0xffeb
  40a6a9:	bound  edx,QWORD PTR ds:0xf8
	...
  40a6bb:	add    BYTE PTR [eax],al
  40a6bd:	add    dl,dl
  40a6bf:	and    BYTE PTR [eax],al
  40a6c1:	(bad)  
  40a6c2:	cli    
  40a6c3:	jb     0x40a704
  40a6c5:	inc    ecx
  40a6c6:	out    dx,eax
  40a6c7:	popa   
  40a6c8:	add    BYTE PTR [eax],al
  40a6ca:	out    dx,eax
  40a6cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6cc:	push   ebx
  40a6cd:	mov    esp,DWORD PTR [ebx]
  40a6cf:	call   0xefed9796
  40a6d4:	inc    ebx
  40a6d5:	or     BYTE PTR [ecx+eiz*4+0x1d2c0b72],dh
  40a6dc:	or     al,0x0
  40a6de:	retf   
  40a6df:	cmp    BYTE PTR fs:[eax],0xbf
  40a6e3:	adc    al,0x7
  40a6e5:	sub    ebp,DWORD PTR [edi+0x3f]
  40a6e8:	leave  
  40a6e9:	ret    0x61a7
  40a6ec:	cmp    BYTE PTR [eax],0x51
  40a6ef:	adc    eax,0x72828310
  40a6f4:	aas    
  40a6f5:	inc    ecx
  40a6f6:	outs   dx,DWORD PTR ds:[esi]
  40a6f7:	popa   
  40a6f8:	jne    0x40a701
  40a6fa:	mov    eax,fs:0x6ebdc959
  40a700:	add    BYTE PTR [eax+0x3e74e347],al
  40a706:	hlt    
  40a707:	xor    eax,0x84ec4a0c
  40a70c:	add    DWORD PTR [ebx],ecx
  40a70e:	lods   eax,DWORD PTR ds:[esi]
  40a70f:	adc    eax,0x6dc28306
  40a714:	add    DWORD PTR [ebp+0x3b],esi
  40a717:	dec    esi
  40a718:	shr    bl,0x8b
  40a71b:	arpl   WORD PTR [ebp+0xc],cx
  40a71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a71f:	and    al,0xc
  40a721:	add    eax,0x0
	...
  40a732:	add    BYTE PTR [eax],al
  40a734:	xchg   esi,eax
  40a735:	mov    eax,DWORD PTR [esi]
  40a737:	add    BYTE PTR [esi-0x39fe1d36],dl
  40a73d:	mov    bl,0x1c
  40a73f:	lea    edx,[ecx]
  40a741:	fcom   QWORD PTR [edx-0x75]
  40a744:	arpl   WORD PTR [ebx+0x56015044],ax
  40a74a:	adc    BYTE PTR [edx-0x12],dl
  40a74d:	fstp   QWORD PTR [edx+0x5d22f1fe]
  40a753:	leave  
  40a754:	aam    0x82
  40a756:	add    ch,BYTE PTR [ebx]
  40a758:	mov    ebp,0xd90c75eb
  40a75d:	popf   
  40a75e:	or     ch,BYTE PTR [edx-0x6a]
  40a761:	jno    0x40a767
  40a763:	jmp    DWORD PTR [ebx-0x69bec1e9]
  40a769:	or     bh,al
  40a76b:	jge    0x1fa61ebc
  40a771:	(bad)  
  40a772:	(bad)  
  40a773:	imul   ebx,DWORD PTR [edx+0x46f04606],0x998bf623
  40a77d:	and    ebp,DWORD PTR [ebp+0x0]
  40a780:	and    eax,edi
  40a782:	repnz dec edi
  40a784:	mov    edi,ebx
  40a786:	(bad)  
  40a787:	(bad)  
  40a788:	stos   DWORD PTR es:[edi],eax
  40a789:	mov    ebp,0x8964140
  40a78e:	(bad)  
  40a78f:	or     ebx,DWORD PTR [ebp+0x1b337649]
  40a795:	iret   
  40a796:	repnz add BYTE PTR [eax],0x0
	...
  40a7aa:	fiadd  WORD PTR [ebp+0x107d7402]
  40a7b0:	inc    ebx
  40a7b1:	or     dh,dl
  40a7b3:	stc    
  40a7b4:	jmp    0x5e8a:0xfe951ab4
  40a7bb:	aas    
  40a7bc:	inc    esi
  40a7bd:	lock cmp DWORD PTR [ebx+0x59],esp
  40a7c1:	or     al,0xc5
  40a7c3:	fwait
  40a7c4:	pop    eax
  40a7c5:	or     BYTE PTR [esi],bh
  40a7c7:	mov    eax,0x920ff64
  40a7cc:	jmp    0x18d37a61
  40a7d1:	jmp    FWORD PTR [edx-0x69bb009e]
  40a7d7:	fild   QWORD PTR [esp+ecx*1+0x79ae616c]
  40a7de:	cli    
  40a7df:	fwait
  40a7e0:	sti    
  40a7e1:	add    esi,DWORD PTR [eax-0x2a7d16df]
  40a7e7:	push   0x62
  40a7e9:	ret    
  40a7ea:	cmp    al,0xa9
  40a7ec:	stos   BYTE PTR es:[edi],al
  40a7ed:	or     al,0x96
  40a7ef:	xor    eax,0x15d0f072
  40a7f4:	in     eax,dx
  40a7f5:	inc    BYTE PTR [edx+0x6a]
  40a7f8:	jbe    0x40a813
  40a7fa:	cdq    
  40a7fb:	pop    ebx
  40a7fc:	sub    BYTE PTR [edx*1-0x4eac0f59],al
  40a803:	adc    eax,0x6a22feed
  40a808:	push   esi
  40a809:	sbb    DWORD PTR [ebp+0x3a85b],edx
	...
  40a81f:	add    BYTE PTR ds:0xea8af0a7,dl
  40a825:	jb     0x40a897
  40a827:	add    ch,dh
  40a829:	test   eax,0x3596102a
  40a82e:	(bad)  
  40a82f:	lock adc al,0xa6
  40a832:	adc    bh,bh
  40a834:	jmp    0x159b:0x703116e
  40a83b:	or     edx,DWORD PTR [esi+0x15]
  40a83e:	in     eax,0xcc
  40a840:	push   edi
  40a841:	jb     0x40a82c
  40a843:	dec    dl
  40a845:	outs   dx,BYTE PTR ds:[esi]
  40a846:	adc    eax,esp
  40a848:	sti    
  40a849:	call   0xe573:0xa28cf5ff
  40a850:	dec    edx
  40a851:	mov    eax,ds:0x1630e90f
  40a856:	adc    al,0xde
  40a858:	scas   al,BYTE PTR es:[edi]
  40a859:	jb     0x40a843
  40a85b:	lods   al,BYTE PTR ds:[esi]
  40a85c:	xchg   esi,eax
  40a85d:	fwait
  40a85e:	(bad)  
  40a85f:	loop   0x40a8b6
  40a861:	push   ss
  40a862:	add    al,0xb0
  40a864:	xlat   BYTE PTR ds:[ebx]
  40a865:	push   0x0
  40a867:	push   ecx
  40a868:	add    eax,0x6de9415d
  40a86d:	loopne 0x40a8ac
  40a86f:	sub    BYTE PTR [edx-0xf807476],dl
  40a875:	fwait
  40a876:	or     ch,BYTE PTR [ecx-0x65979492]
  40a87c:	mov    ds:0x7e010021,eax
  40a881:	pop    esp
  40a882:	inc    ecx
  40a883:	jmp    0x40a888
	...
  40a894:	add    BYTE PTR [eax],al
  40a896:	mov    ebp,0xc87e9619
  40a89b:	addr16 shl dh,0x19
  40a89f:	int3   
  40a8a0:	add    cl,ch
  40a8a2:	xchg   ebp,eax
  40a8a3:	in     eax,dx
  40a8a4:	inc    esp
  40a8a5:	gs inc ebp
  40a8a7:	fwait
  40a8a8:	je     0x40a897
  40a8aa:	test   al,0x75
  40a8ac:	repz pop ss
  40a8ae:	pop    ebx
  40a8af:	bound  eax,QWORD PTR [ebx-0x3f9872db]
  40a8b5:	neg    BYTE PTR [esi]
  40a8b7:	icebp  
  40a8b8:	add    cl,ch
  40a8ba:	xchg   ebp,eax
  40a8bb:	or     al,0x0
  40a8bd:	fs into 
  40a8bf:	call   0xe683:0x278c34f
  40a8c6:	fisub  DWORD PTR [edx-0x1]
  40a8c9:	xchg   esp,eax
  40a8ca:	imul   ebx,DWORD PTR [ecx+0x23a31214],0x76516a00
  40a8d4:	or     eax,DWORD PTR [eax]
  40a8d6:	jg     0x40a940
  40a8d8:	test   DWORD PTR [edx+0x3e],ebp
  40a8db:	data16 add bh,bh
  40a8de:	ret    0xfd9d
  40a8e1:	adc    eax,0x415728
  40a8e6:	mov    esp,0x378302aa
  40a8eb:	or     esi,DWORD PTR [ebp+eax*1+0x56]
  40a8ef:	cmp    eax,DWORD PTR [ecx]
  40a8f1:	add    BYTE PTR [edi],ch
  40a8f3:	jmp    0xcf09d3b
  40a8f8:	add    bh,bh
	...
  40a90a:	add    BYTE PTR [eax],al
  40a90c:	ret    0xe696
  40a90f:	adc    al,0x48
  40a911:	cwde   
  40a912:	std    
  40a913:	or     ebp,DWORD PTR [edi]
  40a915:	push   0x65fe3984
  40a91a:	add    BYTE PTR [ebx+0xefe9a8a],al
  40a920:	jae    0x40a969
  40a922:	add    DWORD PTR [eax],eax
  40a924:	out    dx,eax
  40a925:	in     eax,0x36
  40a927:	add    al,cl
  40a929:	loope  0x40a94f
  40a92b:	add    DWORD PTR [edi-0x5d74af9b],edi
  40a931:	call   0xff8b:0x9175240
  40a938:	cmp    BYTE PTR [ecx+ecx*4],bh
  40a93b:	inc    ebp
  40a93c:	inc    edi
  40a93d:	xchg   edi,eax
  40a93e:	jae    0x40a934
  40a940:	dec    eax
  40a941:	adc    eax,ebp
  40a943:	push   edx
  40a944:	push   edi
  40a945:	icebp  
  40a946:	mov    edi,edi
  40a948:	fcomp  DWORD PTR [edi+0x657ff043]
  40a94e:	add    BYTE PTR [eax],al
  40a950:	mov    al,0x21
  40a952:	in     al,dx
  40a953:	add    BYTE PTR [edi+0x65],ch
  40a956:	add    BYTE PTR [ebx+0x413f6a7a],al
  40a95c:	jg     0x40a9c3
  40a95e:	jne    0x40a9b2
  40a960:	xchg   esi,eax
  40a961:	jecxz  0x40a95d
  40a963:	xlat   BYTE PTR ds:[ebx]
  40a965:	mov    ebp,edx
  40a967:	sub    edx,esi
  40a969:	mov    eax,DWORD PTR [edx]
  40a96b:	push   eax
  40a96c:	mov    esi,0x413d63
	...
  40a981:	add    BYTE PTR [esi+0x2ee87590],dl
  40a987:	ja     0x40a9e8
  40a989:	add    BYTE PTR [esi-0x718c3d6c],dl
  40a98f:	xor    edi,ebp
  40a991:	xlat   BYTE PTR ds:[ebx]
  40a993:	mov    ebp,edx
  40a995:	or     eax,0x50028bba
  40a99a:	jle    0x40a93c
  40a99c:	cmp    eax,DWORD PTR [ecx-0x6a]
  40a99f:	fdiv   DWORD PTR [ebp-0x18]
  40a9a2:	out    dx,al
  40a9a3:	sbb    bl,BYTE PTR [esi+0x0]
  40a9a6:	xchg   esi,eax
  40a9a7:	test   dl,al
  40a9a9:	jae    0x40a94f
  40a9ab:	jae    0x40a9b2
  40a9ad:	inc    eax
  40a9ae:	push   edi
  40a9af:	mov    ebp,edx
  40a9b1:	icebp  
  40a9b2:	cmp    eax,0x6e50028b
  40a9b7:	add    BYTE PTR [edx+0x41],0x96
  40a9bb:	loopne 0x40aa32
  40a9bd:	call   0x9ed880
  40a9c2:	xchg   esi,eax
  40a9c3:	in     al,0x1a
  40a9c5:	push   0x434ba6
  40a9ca:	mov    esi,0x96005822
  40a9cf:	fld    TBYTE PTR [edx+0x10]
  40a9d2:	push   esi
  40a9d3:	retf   0xff02
  40a9d6:	and    esp,DWORD PTR [ebx]
  40a9d8:	jmp    0x40aa53
  40a9da:	xrelease mov DWORD PTR [edx],eax
  40a9dd:	or     edx,DWORD PTR [esi-0x31]
  40a9e0:	ins    BYTE PTR es:[edi],dx
  40a9e1:	(bad)  
  40a9e2:	fist   DWORD PTR [ebp+0x53]
  40a9e5:	push   0x0
	...
  40a9f7:	add    BYTE PTR [edi+0x7ef87648],dl
  40a9fd:	arpl   WORD PTR [edx+0x1d9868fd],si
  40aa03:	jbe    0x40aa6f
  40aa05:	xor    eax,DWORD PTR [ecx]
  40aa07:	inc    esi
  40aa08:	pop    ebx
  40aa09:	cwde   
  40aa0a:	or     eax,0x7392da8a
  40aa0f:	inc    esi
  40aa10:	inc    edx
  40aa11:	xor    edx,DWORD PTR [ebx-0xef1beff]
  40aa17:	jmp    0xe30:0xfbed9886
  40aa1e:	fst    QWORD PTR [esi+edi*1+0x4c]
  40aa22:	fdiv   st(3),st
  40aa24:	and    dl,ch
  40aa26:	sub    ebp,eax
  40aa28:	adc    al,0x16
  40aa2a:	rol    DWORD PTR [edx+ecx*4],0x4e
  40aa2e:	push   0x79
  40aa30:	cli    
  40aa31:	bound  esi,QWORD PTR ds:0xe9626e2a
  40aa37:	jmp    0x98fe:0xc33983b
  40aa3e:	outs   dx,BYTE PTR ds:[esi]
  40aa3f:	sti    
  40aa40:	call   0xe12cbddc
  40aa45:	or     eax,0xdf42ebe1
  40aa4a:	(bad)  
  40aa4b:	sti    
  40aa4c:	ror    BYTE PTR ds:0x6a42fb79,1
  40aa52:	xchg   ecx,eax
  40aa53:	dec    esi
  40aa54:	sbb    DWORD PTR [eax-0x79bd048b],ebx
  40aa5a:	ins    DWORD PTR es:[edi],dx
  40aa5b:	jno    0x40aa5d
	...
  40aa6d:	add    BYTE PTR [esi-0x577cda76],bl
  40aa73:	xchg   edi,eax
  40aa74:	pop    ebp
  40aa75:	jno    0x40aa1d
  40aa77:	mov    ah,BYTE PTR [ebp+ecx*4+0x714d9798]
  40aa7e:	or     BYTE PTR [edx-0x68777254],0x3d
  40aa85:	jno    0x40aaf5
  40aa87:	mov    bh,bh
  40aa89:	hlt    
  40aa8a:	or     ebx,DWORD PTR [eax-0x6afbbf02]
  40aa90:	(bad)  
  40aa91:	es ins DWORD PTR es:[edi],dx
  40aa93:	push   cs
  40aa94:	cld    
  40aa95:	push   ds
  40aa96:	xchg   DWORD PTR [edi-0x1c6a57c3],ecx
  40aa9c:	ret    
  40aa9d:	in     eax,0x3d
  40aa9f:	lock sti 
  40aaa1:	push   es
  40aaa2:	dec    ebp
  40aaa3:	stos   BYTE PTR es:[edi],al
  40aaa4:	rcr    ecx,0x95
  40aaa7:	sub    eax,0xce1058b
  40aaac:	add    dh,ch
  40aaae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaaf:	push   0xffffffe8
  40aab1:	call   0x343d:0x72fe981e
  40aab8:	call   0xa363b6
  40aabd:	loop   0x40aa94
  40aabf:	adc    bl,BYTE PTR [ebx]
  40aac1:	jmp    0x4f15:0xdbeb1ed0
  40aac8:	or     eax,0x37e2973d
  40aacd:	jecxz  0x40ab35
  40aacf:	pop    ebp
  40aad0:	(bad)  
  40aad1:	jmp    0x40aad6
	...
  40aae2:	add    BYTE PTR [eax],al
  40aae4:	xchg   ebp,eax
  40aae5:	mov    eax,DWORD PTR [ecx]
  40aae7:	xchg   edx,eax
  40aae8:	xchg   esi,eax
  40aae9:	sub    bh,BYTE PTR [ebx]
  40aaeb:	stos   BYTE PTR es:[edi],al
  40aaec:	pusha  
  40aaed:	mov    WORD PTR [edx-0x3e568f56],cs
  40aaf3:	in     eax,dx
  40aaf4:	xchg   ebp,eax
  40aaf5:	sub    eax,0xa3188d8b
  40aafa:	mov    bl,0x1e
  40aafc:	mov    ebp,0x810c0d
  40ab01:	in     eax,0xfe
  40ab03:	cbw    
  40ab05:	mov    ds:0xa93ce474,al
  40ab0a:	sar    ecx,0x95
  40ab0d:	xchg   edi,eax
  40ab0e:	je     0x40aaed
  40ab10:	jge    0x40aaf3
  40ab12:	stos   DWORD PTR es:[edi],eax
  40ab13:	add    al,dl
  40ab15:	cwde   
  40ab16:	or     eax,eax
  40ab18:	dec    ebx
  40ab19:	arpl   WORD PTR [edi-0x37],bx
  40ab1c:	lods   eax,DWORD PTR ds:[esi]
  40ab1d:	jno    0x40ab1f
  40ab1f:	jmp    FWORD PTR [edx]
  40ab21:	push   WORD PTR [ebp+0x6f]
  40ab25:	mov    ch,BYTE PTR [ecx-0x5]
  40ab28:	sbb    BYTE PTR [eax+0x317f458b],0xff
  40ab2f:	jne    0x40aba4
  40ab31:	mov    bh,BYTE PTR [edi]
  40ab33:	(bad)  
  40ab34:	nop
  40ab35:	cwde   
  40ab36:	or     eax,eax
  40ab38:	xor    BYTE PTR [esi],dl
  40ab3a:	cli    
  40ab3b:	add    ch,BYTE PTR [edi]
  40ab3d:	(bad)  
  40ab3e:	push   DWORD PTR [ebp+0x43]
  40ab41:	pushf  
  40ab42:	jae    0x40ab3c
  40ab44:	inc    edi
  40ab45:	popf   
  40ab46:	xchg   edx,eax
  40ab47:	inc    DWORD PTR [eax]
	...
  40ab59:	add    BYTE PTR [eax+0x68],al
  40ab5c:	ror    BYTE PTR [edi],0xab
  40ab5f:	mov    ebx,0xe8ff0000
  40ab64:	inc    ebx
  40ab65:	in     al,dx
  40ab66:	test   BYTE PTR [esi+0x6aef3f7e],dl
  40ab6c:	test   cl,cl
  40ab6e:	in     eax,dx
  40ab6f:	popa   
  40ab70:	add    BYTE PTR [edi-0x29],dl
  40ab73:	and    eax,0xea30ffff
  40ab78:	inc    ebx
  40ab79:	rol    BYTE PTR [eax],1
  40ab7b:	push   es
  40ab7c:	shr    BYTE PTR [eax+0x78],1
  40ab7f:	pop    ebx
  40ab80:	inc    ecx
  40ab81:	add    BYTE PTR [edi],dl
  40ab83:	jbe    0x40abe0
  40ab85:	add    BYTE PTR [edi+0x1f75ff31],bh
  40ab8b:	pop    es
  40ab8c:	jnp    0x40abcd
  40ab8e:	outs   dx,BYTE PTR ds:[esi]
  40ab8f:	pop    esi
  40ab90:	call   0x9f2fac
  40ab95:	push   eax
  40ab96:	xor    BYTE PTR ds:0x5ac068d0,al
  40ab9c:	inc    ecx
  40ab9d:	add    BYTE PTR [esi-0x69a4f4dd],dl
  40aba3:	mov    ebx,DWORD PTR [ecx+ebx*2-0x63]
  40aba7:	dec    ebx
  40aba8:	jo     0x40abb6
  40abaa:	lea    edi,[ecx+0x70]
  40abad:	or     BYTE PTR [ebp-0xc7af6be],cl
  40abb3:	mov    DWORD PTR [edx],eax
  40abb5:	add    BYTE PTR [ebp+0x59096f52],bl
  40abbb:	mov    esi,0xae
	...
  40abd0:	xchg   esi,eax
  40abd1:	mov    eax,DWORD PTR [edx]
  40abd3:	jmp    0x40ab6e
  40abd5:	cmp    al,0x3f
  40abd7:	mov    ah,0x96
  40abd9:	mov    eax,DWORD PTR [edx]
  40abdb:	add    BYTE PTR [edx-0x28],al
  40abde:	ret    0x39b8
  40abe1:	mov    edi,?
  40abe3:	(bad)  
  40abe4:	and    al,0x55
  40abe6:	cmp    al,0x7
  40abe8:	mov    ds:0x2e44bf8b,eax
  40abed:	mov    eax,DWORD PTR [edx]
  40abef:	add    BYTE PTR [esi-0x5effc7f5],dl
  40abf5:	dec    DWORD PTR [ebx+0x2]
  40abf8:	xchg   esi,eax
  40abf9:	mov    ecx,DWORD PTR [edi-0x18]
  40abfc:	loope  0x40abd2
  40abfe:	idiv   esi
  40ac00:	cmovbe ecx,eax
  40ac03:	xor    BYTE PTR [ebx-0x5d],0x2
  40ac07:	jne    0x40abc0
  40ac09:	jae    0x40ac7c
  40ac0b:	sub    al,0x57
  40ac0d:	mov    esi,edi
  40ac0f:	je     0x40abdb
  40ac11:	loop   0x40abbc
  40ac13:	pop    ecx
  40ac14:	xchg   esi,eax
  40ac15:	mov    ecx,DWORD PTR [ebx]
  40ac17:	rcr    BYTE PTR [ecx-0x69fdf9fa],0x8b
  40ac1e:	mov    edi,0x289ae44
  40ac23:	add    BYTE PTR [esi-0x69fdfe1e],dl
  40ac29:	(bad)  
  40ac2a:	jmp    0xe7caceb3
  40ac2f:	outs   dx,BYTE PTR ds:[esi]
  40ac30:	mov    ebx,ebp
  40ac32:	rcr    edi,cl
	...
  40ac44:	add    BYTE PTR [eax],al
  40ac46:	pop    eax
  40ac47:	push   ds
  40ac48:	inc    ecx
  40ac49:	add    eax,0xeae96296
  40ac4e:	dec    ebx
  40ac4f:	(bad)  
  40ac50:	jmp    0x4156c158
  40ac55:	add    eax,0x766063eb
  40ac5a:	jbe    0x40abf8
  40ac5c:	stos   DWORD PTR es:[edi],eax
  40ac5d:	jmp    0x40abf3
  40ac5f:	(bad)  
  40ac60:	jmp    0xe8031b68
  40ac65:	add    edx,DWORD PTR [esi-0x6b147421]
  40ac6b:	or     eax,0xb6c28af6
  40ac70:	and    eax,0xe95f2e3e
  40ac75:	add    edx,DWORD PTR [esi-0x69fda377]
  40ac7b:	bound  ebp,QWORD PTR [edx+0x79]
  40ac7e:	cs pop edi
  40ac80:	push   esp
  40ac81:	pop    es
  40ac82:	movhps xmm6,QWORD PTR [ecx-0x1c75a541]
  40ac89:	add    edx,DWORD PTR [esi-0x68902f9e]
  40ac8f:	(bad)  
  40ac90:	jmp    0xebcb2717
  40ac95:	push   es
  40ac96:	sbb    eax,DWORD PTR [ebx]
  40ac98:	call   0x242a42a0
  40ac9d:	rcl    BYTE PTR [esi+edx*1],1
  40aca0:	push   ebp
  40aca1:	add    al,0x62
  40aca3:	imul   ebp,DWORD PTR [esi-0x169f41bf],0x3
	...
  40acb9:	add    BYTE PTR [eax],al
  40acbb:	add    BYTE PTR [esi+0x5abeed87],dl
  40acc1:	mov    ah,dh
  40acc3:	add    edx,DWORD PTR [esi+0x57ae0062]
  40acc9:	mov    ds:0x6295e8ff,al
  40acce:	(bad)  
  40accf:	lods   al,BYTE PTR ds:[esi]
  40acd0:	int    0x93
  40acd2:	(bad)  
  40acd3:	jmp    0x2d85486d
  40acd8:	call   0xbc1e:0x48e90062
  40acdf:	jmp    0x26410f79
  40ace4:	xlat   BYTE PTR ds:[ebx]
  40ace5:	(bad)  
  40ace7:	call   0xb5400f81
  40acec:	dec    ecx
  40aced:	jnp    0x40ad01
  40acef:	daa    
  40acf0:	imul   edx,DWORD PTR [eax+ecx*4+0x749455a4],0xfe5b4235
  40acfb:	push   cs
  40acfc:	inc    ecx
  40acfd:	jmp    0x11d4:0xe493144
  40ad04:	aas    
  40ad05:	xchg   esi,eax
  40ad06:	(bad)  
  40ad07:	mul    BYTE PTR [edx]
  40ad09:	push   ds
  40ad0a:	les    ebp,FWORD PTR [edx+0x6f]
  40ad0d:	addr16 aas 
  40ad0f:	sub    BYTE PTR [edx-0x55c48a9e],bl
  40ad15:	call   0x300c:0x8a9a283e
  40ad1c:	xchg   edx,eax
  40ad1d:	bound  edx,QWORD PTR [eax+0x51]
	...
  40ad30:	add    BYTE PTR [eax],al
  40ad32:	add    dl,BYTE PTR [ecx+eax*2-0x17]
  40ad36:	add    BYTE PTR [esi],cl
  40ad38:	rol    cl,0x38
  40ad3b:	cmp    DWORD PTR [eax],eax
  40ad3d:	jmp    0x1b44fde
  40ad42:	jb     0x40acd7
  40ad44:	sub    BYTE PTR ds:[edx-0x65ce0f76],dl
  40ad4b:	bound  edx,QWORD PTR [eax+0x1]
  40ad4e:	rcl    DWORD PTR [ebx+0x41],0x0
  40ad52:	scas   eax,DWORD PTR es:[edi]
  40ad53:	mov    esi,DWORD PTR [ebx-0x40]
  40ad56:	daa    
  40ad57:	lock pop eax
  40ad59:	add    BYTE PTR [edi-0x128b3f99],bh
  40ad5f:	push   es
  40ad60:	pop    es
  40ad61:	inc    eax
  40ad62:	out    dx,al
  40ad63:	pop    esi
  40ad64:	call   0x9f853e
  40ad69:	push   eax
  40ad6a:	push   edi
  40ad6b:	xchg   ecx,eax
  40ad6c:	ds inc ecx
  40ad6e:	jg     0x40ad09
  40ad70:	jae    0x40ad32
  40ad72:	out    0x0,eax
  40ad74:	pop    edx
  40ad75:	add    BYTE PTR [edi+0x7d],ch
  40ad78:	push   ss
  40ad79:	push   0x41264f
  40ad7e:	xlat   BYTE PTR ds:[ebx]
  40ad7f:	int3   
  40ad80:	push   esi
  40ad81:	add    BYTE PTR [edi+0x36],ch
  40ad84:	push   0x272f10
  40ad89:	push   DWORD PTR [edx]
  40ad8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad8c:	out    0x5d,al
  40ad8e:	add    eax,0x6f0b0066
  40ad93:	adc    ah,BYTE PTR [edx-0x1]
	...
  40ada6:	add    BYTE PTR [eax],al
  40ada8:	ret    0xe69d
  40adab:	mov    eax,ds:0x50006607
  40adb0:	cmp    BYTE PTR [edx],al
  40adb2:	enter  0x89e8,0x8c
  40adb6:	std    
  40adb7:	jmp    DWORD PTR [esi+0x72ffbc51]
  40adbd:	mov    ds:0x66c78de6,al
  40adc2:	add    BYTE PTR [eax-0x28],dl
  40adc5:	add    esp,eax
  40adc7:	call   0x3e39c1
  40adcc:	jbe    0x40ae1f
  40adce:	mov    eax,0xfea6ba83
  40add3:	jae    0x40ad98
  40add5:	loop   0x40ae52
  40add7:	mov    eax,0x682e01ef
  40addc:	xchg   esi,eax
  40addd:	jnp    0x40ade1
  40addf:	out    dx,eax
  40ade0:	or     cl,ah
  40ade2:	outs   dx,BYTE PTR ds:[esi]
  40ade3:	or     BYTE PTR [esi-0x46017f0a],ch
  40ade9:	adc    BYTE PTR [edi-0x40],ch
  40adec:	mov    cl,0x8e
  40adee:	or     ch,al
  40adf0:	push   edx
  40adf1:	pop    es
  40adf2:	cmc    
  40adf3:	(bad)  
  40adf4:	mov    eax,ds:0x23feb6ae
  40adf9:	xchg   ebx,eax
  40adfa:	jmp    0x3fe:0xf5381a38
  40ae01:	hlt    
  40ae02:	hlt    
  40ae03:	je     0x40ad93
  40ae05:	xor    esp,DWORD PTR [esi]
  40ae07:	test   BYTE PTR [ecx+0x50],bh
  40ae0a:	cmc    
  40ae0b:	je     0x40ae0d
	...
  40ae1d:	add    BYTE PTR [esi+0x23],dl
  40ae20:	cmp    DWORD PTR [edi+0x74f54069],eax
  40ae26:	dec    esi
  40ae27:	jae    0x40ae5a
  40ae29:	xchg   DWORD PTR [ecx+0x70],ebx
  40ae2c:	cmc    
  40ae2d:	je     0x40ae89
  40ae2f:	arpl   WORD PTR [ecx],bp
  40ae31:	xchg   DWORD PTR [ecx+0x60],ecx
  40ae34:	cmc    
  40ae35:	je     0x40ae39
  40ae37:	jae    0x40ae5a
  40ae39:	xchg   DWORD PTR [ecx],edi
  40ae3b:	nop
  40ae3c:	repz je 0x40ae2d
  40ae3f:	bound  ebx,QWORD PTR [ecx]
  40ae41:	xchg   DWORD PTR [ecx],ebp
  40ae43:	and    bh,0xc
  40ae46:	adc    eax,0xa305ec06
  40ae4b:	mov    BYTE PTR [ebx+0x27cfe44],bh
  40ae51:	add    BYTE PTR [esi-0x69178a04],dl
  40ae57:	dec    edi
  40ae58:	xor    al,0x68
  40ae5a:	sbb    DWORD PTR [edi+0x43],0xc84df100
  40ae61:	out    0x21,eax
  40ae63:	jae    0x40ae69
  40ae65:	add    BYTE PTR [ebp-0x6e91569e],cl
  40ae6b:	test   eax,0x6296ec23
  40ae70:	jmp    0xcdd6ec78
  40ae75:	inc    edx
  40ae76:	xchg   esi,eax
  40ae77:	xchg   ecx,eax
  40ae78:	sti    
  40ae79:	(bad)  
  40ae7a:	mov    cl,0xf0
  40ae7c:	and    BYTE PTR [esi+edx*4],al
  40ae7f:	pop    ebp
  40ae80:	test   eax,0x6e
	...
  40ae91:	add    BYTE PTR [eax],al
  40ae93:	add    BYTE PTR [ecx-0x6813dc57],dl
  40ae99:	(bad)  
  40ae9a:	jmp    0x2d5747a2
  40ae9f:	jmp    0x40af04
  40aea1:	jmp    0x54cea2fb
  40aea6:	sub    DWORD PTR [edx-0xbba6f80],edi
  40aeac:	xchg   ecx,eax
  40aeae:	add    ch,bh
  40aeb0:	mov    al,ds:0x68f684e5
  40aeb5:	nop
  40aeb6:	sub    eax,0x5c7b466e
  40aebb:	jge    0x40af15
  40aebd:	nop
  40aebe:	sbb    eax,0x447b426e
  40aec3:	jge    0x40af0d
  40aec5:	nop
  40aec6:	pop    ebx
  40aec7:	ds inc esi
  40aec9:	xor    edx,DWORD PTR [ecx]
  40aecb:	ror    DWORD PTR ds:0xa0eafd90,1
  40aed1:	mov    ebp,esi
  40aed3:	repz enter 0x2a99,0x13
  40aed8:	xchg   esi,eax
  40aed9:	xor    eax,0xa716e072
  40aede:	xchg   esp,eax
  40aedf:	repnz adc BYTE PTR [eax-0x6ebe7653],dl
  40aee6:	int    0xf3
  40aee8:	add    DWORD PTR [eax+0x260d03e8],edx
  40aeee:	aad    0xfe
  40aef0:	xor    DWORD PTR [edi],edx
  40aef2:	add    ah,ch
  40aef4:	adc    eax,0x340058
	...
  40af09:	add    BYTE PTR [edi-0x6a170b87],cl
  40af0f:	(bad)  
  40af10:	call   DWORD PTR [esi+ebp*4]
  40af13:	jp     0x40af72
  40af15:	js     0x40aedc
  40af17:	nop
  40af18:	or     ch,BYTE PTR [ecx+0x5685f3f]
  40af1e:	jbe    0x40af41
  40af20:	add    BYTE PTR [esi+0x2f],bh
  40af23:	jbe    0x40af0d
  40af25:	jb     0x40af52
  40af27:	nop
  40af28:	inc    BYTE PTR [edx+0x1580fa97]
  40af2e:	push   ebx
  40af2f:	(bad)  
  40af30:	call   esp
  40af32:	test   eax,0x8560eb7a
  40af37:	nop
  40af38:	mov    BYTE PTR [edx+esi*1-0x73],ah
  40af3c:	inc    BYTE PTR [esi-0x26]
  40af3f:	push   eax
  40af40:	add    ecx,ebp
  40af42:	xchg   ebp,eax
  40af43:	fld    QWORD PTR [ebx+ebp*1-0x66016f9c]
  40af4a:	cmp    eax,0x65268603
  40af4f:	fiadd  WORD PTR [ebx+ebp*1-0x46016fbc]
  40af56:	inc    esp
  40af57:	(bad)  
  40af58:	mov    bh,0xf
  40af5a:	inc    ebp
  40af5b:	nop
  40af5c:	out    0x49,eax
  40af5e:	frstor [edx+0x0]
  40af61:	jo     0x40af82
  40af63:	retf   
  40af64:	std    
  40af65:	mul    BYTE PTR [edi+ecx*2]
  40af68:	pcmpgtw mm7,mm5
  40af6b:	popa   
  40af6c:	add    cl,ch
	...
  40af7e:	add    BYTE PTR [eax],al
  40af80:	push   ss
  40af81:	test   cl,0xdf
  40af84:	add    al,0x90
  40af86:	imul   bl
  40af88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af89:	bound  eax,QWORD PTR [eax]
  40af8b:	jmp    0xc39624
  40af90:	out    dx,eax
  40af91:	bound  eax,QWORD PTR [eax]
  40af93:	lea    edi,[ebp-0x5797afbe]
  40af99:	inc    edx
  40af9a:	inc    ecx
  40af9b:	add    bh,dl
  40af9d:	std    
  40af9e:	push   esi
  40af9f:	add    bh,ch
  40afa1:	(bad)  
  40afa2:	mov    esi,0x47adba75
  40afa7:	add    DWORD PTR [edi-0x126a729e],edi
  40afad:	nop
  40afae:	std    
  40afaf:	inc    DWORD PTR [edx+0x25]
  40afb2:	sub    al,0x50
  40afb4:	xchg   ebp,edi
  40afb6:	sub    eax,DWORD PTR [ecx-0x41]
  40afb9:	stos   BYTE PTR es:[edi],al
  40afba:	pop    edx
  40afbb:	push   edi
  40afbc:	scas   eax,DWORD PTR es:[edi]
  40afbd:	bound  ecx,QWORD PTR [ebx]
  40afbf:	sar    BYTE PTR [edx+0x7e2ce959],0x62
  40afc6:	add    bh,bh
  40afc8:	push   0x76
  40afca:	call   0xfdd1af89
  40afcf:	or     ebp,DWORD PTR [edi-0x1b97f0f6]
  40afd5:	imul   eax,DWORD PTR [ecx+0x0],0xe8140aa0
  40afdc:	or     BYTE PTR [edi],cl
  40afde:	(bad)  
  40afdf:	inc    DWORD PTR [edi+ecx*4+0x68]
	...
  40aff6:	mov    al,0xa
  40aff8:	adc    al,0xe8
  40affa:	hlt    
  40affb:	push   cs
  40affc:	(bad)  
  40affd:	jmp    edx
  40afff:	jmp    0x528b:0x9090fec0
  40b006:	arpl   WORD PTR [eax],di
  40b008:	push   eax
  40b009:	call   0x3ebebe
  40b00e:	push   DWORD PTR [ecx]
  40b010:	push   DWORD PTR [ebp+0x1f]
  40b013:	xchg   ebx,eax
  40b014:	jae    0x40b022
  40b016:	lock adc eax,0xa896e808
  40b01c:	icebp  
  40b01d:	inc    BYTE PTR [ecx]
  40b01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b020:	mov    BYTE PTR [ecx+edi*8-0x6923255c],al
  40b027:	jnp    0x40b02b
  40b029:	lea    edx,[edi+eiz*2+0x7b]
  40b02d:	test   BYTE PTR [edx],ch
  40b02f:	mov    esi,0x396efef0
  40b034:	xor    DWORD PTR [ecx-0x6a],eax
  40b037:	in     al,dx
  40b038:	mov    dh,0xb3
  40b03a:	enter  0xf0f4,0xe7
  40b03e:	fwait
  40b03f:	push   ebx
  40b040:	add    al,0x0
  40b042:	lea    edi,[ebx+0x103e2e77]
  40b048:	sbb    al,0x41
  40b04a:	xchg   esi,eax
  40b04b:	adc    al,0x77
  40b04d:	adc    al,0xae
  40b04f:	adc    al,0x7c
  40b051:	(bad)  
  40b052:	cdq    
  40b053:	add    al,0xb7
  40b055:	mov    bl,0x90
  40b057:	sub    al,0xf1
  40b059:	dec    edi
	...
  40b06a:	add    BYTE PTR [eax],al
  40b06c:	jle    0x40b0e2
  40b06e:	jnp    0x40b06e
  40b070:	or     ebx,0x24a674ef
  40b076:	ja     0x40b084
  40b078:	(bad)  
  40b079:	dec    esp
  40b07a:	ja     0x40b084
  40b07c:	jle    0x40b0d2
  40b07e:	in     al,dx
  40b07f:	(bad)  
  40b080:	popa   
  40b081:	and    edi,DWORD PTR [ecx]
  40b083:	test   DWORD PTR [ecx+0x44],ebx
  40b086:	icebp  
  40b087:	mov    ah,0xa
  40b089:	ins    DWORD PTR es:[edi],dx
  40b08a:	icebp  
  40b08b:	(bad)  
  40b08c:	ds stos DWORD PTR es:[edi],eax
  40b08e:	pop    eax
  40b08f:	add    BYTE PTR [esi-0x3bfe1408],dl
  40b095:	scas   eax,DWORD PTR es:[edi]
  40b096:	jnp    0x40b02c
  40b098:	jmp    0x856b:0x95feef8c
  40b09f:	jmp    0x39c29638
  40b0a4:	push   0x94775a62
  40b0a9:	jns    0x40b0d3
  40b0ab:	pop    esp
  40b0ac:	addr16 dec ebp
  40b0ae:	sub    BYTE PTR [ecx+eax*1],al
  40b0b1:	xlat   BYTE PTR ds:[ebx]
  40b0b2:	xchg   esp,eax
  40b0b3:	icebp  
  40b0b4:	clc    
  40b0b5:	mov    eax,ss
  40b0b7:	nop
  40b0b8:	dec    eax
  40b0b9:	(bad)  
  40b0ba:	jmp    0xf6702f12
  40b0bf:	inc    edx
  40b0c0:	xchg   esi,eax
  40b0c1:	lea    esi,[ebx-0x49]
  40b0c4:	fisttp DWORD PTR [ebp+eiz*4-0x16cadc25]
  40b0cb:	add    esp,DWORD PTR [esi-0x6]
  40b0ce:	add    dh,BYTE PTR [ecx]
	...
  40b0e0:	add    BYTE PTR [eax],al
  40b0e2:	push   edi
  40b0e3:	bound  ecx,QWORD PTR [esi-0x7a73fa4a]
  40b0e9:	lock mov ecx,0x9604160e
  40b0ef:	sub    BYTE PTR [eax],dl
  40b0f1:	std    
  40b0f2:	loope  0x40b10a
  40b0f4:	loope  0x40b0f2
  40b0f6:	(bad)  
  40b0f7:	push   ss
  40b0f8:	in     eax,dx
  40b0f9:	cld    
  40b0fa:	pop    esi
  40b0fb:	pop    ss
  40b0fc:	subps  xmm3,XMMWORD PTR ds:0x8103a83b
  40b103:	push   ss
  40b104:	cmc    
  40b105:	fcomi  st,st(2)
  40b107:	fiadd  DWORD PTR [ebp-0x10]
  40b10a:	jo     0x40b0e2
  40b10c:	je     0x40b0ff
  40b10e:	push   0x32db988c
  40b113:	fld    TBYTE PTR ds:0x9b8bc9f0
  40b119:	adc    edx,DWORD PTR [ecx+0x16]
  40b11c:	in     eax,dx
  40b11d:	push   ebx
  40b11e:	dec    ecx
  40b11f:	push   ss
  40b120:	loope  0x40b0fd
  40b122:	push   ebp
  40b123:	mov    DWORD PTR ds:0x6cc631f0,ecx
  40b129:	lock xor dh,bl
  40b12c:	arpl   bp,ax
  40b12e:	sub    ecx,DWORD PTR [edi+edi*8-0x4b743b0b]
  40b135:	sub    eax,0xd1fe8d27
  40b13a:	popf   
  40b13b:	xor    al,0x0
  40b13d:	jmp    0x6c4f7d60
  40b142:	jle    0x40b0d0
  40b144:	dec    dh
	...
  40b156:	add    BYTE PTR [eax],al
  40b158:	jmp    0x2086d33
  40b15d:	(bad)  
  40b15e:	out    0xef,eax
  40b160:	inc    ebx
  40b161:	bound  eax,QWORD PTR [eax]
  40b163:	mov    dh,0x1f
  40b165:	aam    0xfd
  40b167:	scas   al,BYTE PTR es:[edi]
  40b168:	jmp    0xc1ae25f0
  40b16d:	mov    eax,cs
  40b16f:	stos   DWORD PTR es:[edi],eax
  40b170:	mov    ds:0xb6625562,al
  40b175:	mov    WORD PTR [ebp+ebx*8-0x58],?
  40b179:	push   ss
  40b17a:	adc    BYTE PTR [esi-0xb00a1d1],al
  40b180:	lods   eax,DWORD PTR ds:[esi]
  40b181:	add    ebx,0x74
  40b184:	mov    cl,0x8c
  40b186:	enter  0x96ab,0x62
  40b18a:	push   ebp
  40b18b:	jb     0x40b203
  40b18d:	loopne 0x40b152
  40b18f:	pop    ecx
  40b190:	loope  0x40b11d
  40b192:	je     0x40b179
  40b194:	pop    ebp
  40b195:	add    eax,0x58694e89
  40b19a:	sar    BYTE PTR [esi+ebx*4-0x69d436d5],0x62
  40b1a2:	(bad)  
  40b1a3:	mov    esp,0x60547a85
  40b1a8:	imul   ecx,DWORD PTR [edx+ecx*1+0x5f65cf29],0x575430
  40b1b3:	push   ss
  40b1b4:	mov    edi,0xb8f0e85e
  40b1b9:	mov    esi,?
	...
  40b1cb:	add    BYTE PTR [eax],al
  40b1cd:	add    BYTE PTR [edi+ebx*4],ah
  40b1d0:	jae    0x40b1e1
  40b1d2:	pop    es
  40b1d3:	or     BYTE PTR [edi],ah
  40b1d5:	inc    ecx
  40b1d6:	das    
  40b1d7:	jl     0x40b24c
  40b1d9:	or     al,0x97
  40b1db:	aam    0x85
  40b1dd:	(bad)  
  40b1de:	clc    
  40b1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e0:	or     BYTE PTR [edx-0x1],ch
  40b1e3:	jnp    0x40b258
  40b1e5:	or     al,0xd7
  40b1e7:	call   0xe09b171
  40b1ec:	inc    esp
  40b1ed:	hlt    
  40b1ee:	inc    edi
  40b1ef:	outs   dx,DWORD PTR ds:[esi]
  40b1f0:	aas    
  40b1f1:	inc    ecx
  40b1f2:	(bad)  
  40b1f3:	jnp    0x40b268
  40b1f5:	hlt    
  40b1f6:	xlat   BYTE PTR ds:[ebx]
  40b1f7:	fadd   DWORD PTR [ebp+0x440e28ff]
  40b1fd:	clc    
  40b1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ff:	test   al,0xfb
  40b201:	add    BYTE PTR [edi+0x288403a6],bh
  40b207:	jl     0x40b190
  40b209:	inc    ebp
  40b20a:	or     esp,DWORD PTR [edi]
  40b20c:	add    BYTE PTR [eax],dl
  40b20e:	mov    edi,0x3cf8e85e
  40b213:	jl     0x40b212
  40b215:	mov    DWORD PTR [edx-0x6a],esi
  40b218:	std    
  40b219:	jne    0x40b242
  40b21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b21c:	test   al,0x88
  40b21e:	clc    
  40b21f:	js     0x40b22a
  40b221:	sar    BYTE PTR [eax-0x1e],0xbb
  40b225:	add    BYTE PTR [edi+0x66],ch
  40b228:	push   DWORD PTR [ebp-0x19]
  40b22b:	sub    eax,0x667ffde8
  40b230:	push   DWORD PTR [ebp+0x0]
	...
  40b243:	add    BYTE PTR [ebx+0x6f5580ad],ch
  40b249:	cmp    ax,0x6d
  40b24d:	mov    DWORD PTR [esp+eiz*4-0x74ff99c1],eax
  40b254:	sub    bh,BYTE PTR [edx+0x7e]
  40b257:	aas    
  40b258:	xchg   esi,eax
  40b259:	jnp    0x40b258
  40b25b:	sbb    DWORD PTR [esi],0x7c
  40b25e:	add    al,BYTE PTR [eax]
  40b260:	mov    esi,0x96412d9b
  40b265:	lock fidivr DWORD PTR [ecx]
  40b268:	enter  0x27b,0xb
  40b26c:	push   esi
  40b26d:	adc    BYTE PTR [esi-0x1],dh
  40b270:	mov    eax,DWORD PTR [ebx+0x7b99ff5b]
  40b276:	add    bh,bh
  40b278:	mov    ebp,DWORD PTR [ebx+0x3aae8d5b]
  40b27e:	add    al,0x68
  40b280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b281:	pusha  
  40b282:	inc    ebx
  40b283:	add    BYTE PTR [ecx-0x4d],al
  40b286:	xor    dl,BYTE PTR [ebp-0x6a]
  40b289:	jnp    0x40b282
  40b28b:	mov    edi,0x74ed7362
  40b290:	into   
  40b291:	jne    0x40b296
  40b293:	push   0x41a87e
  40b298:	imul   esp,ebx,0x7b965536
  40b29e:	jg     0x40b297
  40b2a0:	xchg   edi,eax
  40b2a1:	xchg   BYTE PTR ds:0xed0b23ff,dh
  40b2a7:	je     0x40b2a9
	...
  40b2b9:	add    BYTE PTR [edx-0x667a161d],ch
  40b2bf:	clc    
  40b2c0:	push   ebx
  40b2c1:	mov    esp,DWORD PTR [esi+0x34]
  40b2c4:	sti    
  40b2c5:	jg     0x40b293
  40b2c7:	pop    eax
  40b2c8:	ja     0x40b2cd
  40b2ca:	pop    eax
  40b2cb:	jge    0x40b31b
  40b2cd:	inc    edx
  40b2ce:	lea    ecx,[ebp+0x78]
  40b2d1:	add    eax,0x75046516
  40b2d6:	js     0x40b320
  40b2d8:	ja     0x40b2ea
  40b2da:	(bad)  
  40b2db:	push   eax
  40b2dc:	ja     0x40b2e6
  40b2de:	outs   dx,BYTE PTR ds:[esi]
  40b2df:	inc    eax
  40b2e0:	out    dx,al
  40b2e1:	(bad)  
  40b2e2:	push   ecx
  40b2e3:	bound  edx,QWORD PTR [ecx]
  40b2e5:	xor    DWORD PTR ds:0x93d91d89,edx
  40b2eb:	mov    DWORD PTR [ebx+0x190f3913],ebx
  40b2f1:	in     eax,dx
  40b2f2:	stos   BYTE PTR es:[edi],al
  40b2f3:	pop    edx
  40b2f4:	adc    DWORD PTR [edx-0x100276d5],esi
  40b2fa:	mov    fs:0x8918ed2f,al
  40b300:	in     eax,dx
  40b301:	icebp  
  40b302:	inc    ebx
  40b303:	dec    edx
  40b304:	out    dx,al
  40b305:	cld    
  40b306:	adc    bh,dl
  40b308:	fucomp st(4)
  40b30a:	add    BYTE PTR [ecx+0x5af1f85b],cl
  40b310:	push   0xffffffec
  40b312:	lock mov BYTE PTR [ebx],bh
  40b315:	hlt    
  40b316:	icebp  
  40b317:	bound  ebp,QWORD PTR [edx-0x14]
  40b31a:	loopne 0x40b2a4
  40b31c:	cmp    ebp,esp
	...
  40b32e:	add    BYTE PTR [eax],al
  40b330:	icebp  
  40b331:	mov    ch,BYTE PTR [edx-0x14]
  40b334:	ror    BYTE PTR [eax-0x6d4e0fe5],1
  40b33a:	push   0xffffffec
  40b33c:	ror    BYTE PTR [eax+0xeb9141b],0xdd
  40b343:	in     al,dx
  40b344:	sub    bl,BYTE PTR [edx-0x6f]
  40b347:	jno    0x40b2f1
  40b349:	mov    BYTE PTR [ebp+0x4c],bh
  40b34c:	iret   
  40b34d:	mov    ds:0xdd4303e4,eax
  40b352:	jl     0x40b2d4
  40b354:	push   ebp
  40b355:	jnp    0x40b3bc
  40b357:	jbe    0x40b2fb
  40b359:	xchg   ebx,edx
  40b35b:	adc    ebp,DWORD PTR [esi-0x6]
  40b35e:	mov    ebx,0x295b9603
  40b363:	ja     0x40b32e
  40b365:	cld    
  40b366:	call   0xa88861c6
  40b36b:	add    esp,DWORD PTR [ecx+0xe]
  40b36e:	add    cl,bl
  40b370:	push   0xf
  40b372:	or     al,0x41
  40b374:	adc    bl,bh
  40b376:	(bad)  
  40b377:	es dec esi
  40b379:	enter  0xa873,0xe5
  40b37d:	xor    ch,al
  40b37f:	pushf  
  40b380:	mov    ecx,0x55e2fe88
  40b385:	adc    al,0x31
  40b387:	jo     0x40b359
  40b389:	jp     0x40b3f4
  40b38b:	jecxz  0x40b3ca
  40b38d:	ja     0x40b314
  40b38f:	imul   BYTE PTR ds:0x75c05d
	...
  40b3a5:	add    BYTE PTR [esi+0x62017487],bl
  40b3ab:	jp     0x40b330
  40b3ad:	addr16 in eax,dx
  40b3af:	mov    BYTE PTR [edi-0x2a],cl
  40b3b2:	xchg   DWORD PTR [edx+0x4f],edi
  40b3b5:	into   
  40b3b6:	addr16 pop edx
  40b3b8:	call   0xfec9afcf
  40b3bd:	shr    DWORD PTR [ebp-0x1c],1
  40b3c0:	(bad)  
  40b3c1:	mov    dh,0xed
  40b3c3:	push   cs
  40b3c4:	call   0xff24f98a
  40b3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ca:	jmp    0xffff:0xad9e8211
  40b3d1:	loopne 0x40b368
  40b3d3:	(bad)  
  40b3d4:	call   0xfec9cbe7
  40b3d9:	jo     0x40b432
  40b3db:	mov    cl,BYTE PTR [esp-0x300e852]
  40b3e2:	test   DWORD PTR [edi-0x3292228c],eax
  40b3e8:	push   ebx
  40b3e9:	jmp    0xd5010f83
  40b3ee:	add    eax,0x925944a0
  40b3f3:	bound  eax,QWORD PTR [eax]
  40b3f5:	jmp    0x134d24e
  40b3fa:	shl    BYTE PTR [ebx+0x0],1
  40b3fd:	add    BYTE PTR [ebp+0x63],al
  40b400:	push   0x0
  40b402:	push   ebp
  40b403:	arpl   WORD PTR [edx+0x0],bp
  40b406:	repnz and esp,esi
  40b409:	push   eax
	...
  40b41a:	add    BYTE PTR [eax],al
  40b41c:	jo     0x40b42f
  40b41e:	clc    
  40b41f:	jmp    FWORD PTR [edx]
  40b421:	xchg   ebx,eax
  40b422:	std    
  40b423:	jne    0x40b3c8
  40b425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b426:	mov    ss,WORD PTR [edi+edi*1+0x63]
  40b42a:	or     eax,eax
  40b42c:	stos   DWORD PTR es:[edi],eax
  40b42d:	pop    ebp
  40b42e:	jmp    0x40b46a
  40b430:	pop    es
  40b431:	or     BYTE PTR [edi],ah
  40b433:	inc    ecx
  40b434:	das    
  40b435:	jl     0x40b4aa
  40b437:	adc    BYTE PTR [edi-0xf007c2c],dl
  40b43d:	jnp    0x40b4b2
  40b43f:	clc    
  40b440:	mov    edi,0xe085ffa6
  40b445:	jnp    0x40b3ce
  40b447:	inc    ebp
  40b448:	xor    edi,DWORD PTR [ebx+esi*2+0x18]
  40b44c:	rcl    BYTE PTR [ecx],1
  40b44e:	adc    al,0xff
  40b450:	stos   BYTE PTR es:[edi],al
  40b451:	stos   BYTE PTR es:[edi],al
  40b452:	std    
  40b453:	jne    0x40b448
  40b455:	jnp    0x40b4ca
  40b457:	or     bh,dl
  40b459:	push   ebp
  40b45a:	(bad)  
  40b45b:	push   eax
  40b45d:	jnp    0x40b4d2
  40b45f:	in     al,dx
  40b460:	daa    
  40b461:	lods   al,BYTE PTR ds:[esi]
  40b462:	jg     0x40b463
  40b464:	and    BYTE PTR [ebx+eax*2-0x10],bh
  40b468:	adc    al,0xdc
  40b46a:	std    
  40b46b:	jne    0x40b480
  40b46d:	stos   DWORD PTR es:[edi],eax
  40b46e:	cmp    dl,BYTE PTR [edi+ebp*4+0x62]
  40b472:	push   DWORD PTR [ebp+0x27]
  40b475:	stos   DWORD PTR es:[edi],eax
  40b476:	fadd   DWORD PTR [ecx-0x3d388700]
  40b47c:	mov    esp,DWORD PTR [edx+0x55]
  40b47f:	mov    eax,DWORD PTR [eax]
	...
  40b491:	add    bl,dl
  40b493:	faddp  st(2),st
  40b495:	hlt    
  40b496:	xchg   esi,eax
  40b497:	sub    eax,0x7bfcfeea
  40b49c:	pop    esp
  40b49d:	and    al,0x69
  40b49f:	(bad)  
  40b4a0:	cli    
  40b4a1:	out    0x5f,eax
  40b4a3:	(bad)  
  40b4a4:	jmp    0xe6f7c4a7
  40b4a9:	(bad)  
  40b4aa:	fwait
  40b4ab:	sub    BYTE PTR [ecx],0x41
  40b4ae:	xchg   esi,eax
  40b4af:	jnp    0x40b4b3
  40b4b1:	add    BYTE PTR [esi+0x38f67ff6],dl
  40b4b7:	ins    DWORD PTR es:[edi],dx
  40b4b8:	jmp    0x9600:0x37fbe4f
  40b4bf:	jae    0x40b537
  40b4c1:	push   ebx
  40b4c2:	xchg   esi,eax
  40b4c3:	jnp    0x40b51f
  40b4c5:	rcr    DWORD PTR [ecx-0x46],1
  40b4c8:	add    ch,BYTE PTR [eax-0x21]
  40b4cb:	mov    ah,0x43
  40b4cd:	add    BYTE PTR [esi-0x68],bh
  40b4d0:	sub    BYTE PTR [ecx-0x6a],al
  40b4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d4:	sbb    ch,BYTE PTR cs:[edi+0x6bff043a]
  40b4db:	sbb    edx,0xffffffa7
  40b4de:	call   0xc7a89d7f
  40b4e3:	test   BYTE PTR [ecx+0x0],al
  40b4e6:	outs   dx,BYTE PTR ds:[esi]
  40b4e7:	ret    0x4128
  40b4ea:	xchg   esi,eax
  40b4eb:	and    esp,ebp
  40b4ed:	ds push edi
  40b4ef:	jnp    0x40b54b
  40b4f1:	add    dl,BYTE PTR [esi+0xfe827b]
	...
  40b507:	add    BYTE PTR [ebx-0x7d],al
  40b50a:	fimul  DWORD PTR [ebx-0x73172b50]
  40b510:	adc    eax,DWORD PTR ds:0x6ba1feea
  40b516:	fcom   QWORD PTR ds:0xff027b45
  40b51c:	or     edi,eax
  40b51e:	call   0x51a35397
  40b523:	rol    DWORD PTR [ebx],cl
  40b525:	xchg   BYTE PTR [ebp-0x45],bl
  40b528:	push   edi
  40b529:	pop    esi
  40b52a:	jmp    0x67b6d27d
  40b52f:	shl    BYTE PTR [ebp-0x7c],0x45
  40b533:	jmp    0x1f141827
  40b538:	pop    ecx
  40b539:	psraw  mm3,mm3
  40b53c:	mov    DWORD PTR [esi+ebp*1],0x251f1ee9
  40b543:	pop    esi
  40b544:	pushf  
  40b545:	jp     0x40b4e4
  40b547:	jle    0x40b581
  40b549:	test   ecx,esp
  40b54b:	ret    
  40b54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54d:	ds adc edx,0x53e92368
  40b554:	outs   dx,BYTE PTR cs:[esi]
  40b556:	fs jmp 0x3c1e774
  40b55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b55d:	jne    0x40b58d
  40b55f:	pop    esp
  40b560:	mov    ds:0x66042822,eax
  40b565:	test   DWORD PTR [ebx-0x4],edx
  40b568:	icebp  
  40b569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56a:	mov    ebp,eax
	...
  40b57c:	add    BYTE PTR [eax],al
  40b57e:	lock jns 0x40b561
  40b581:	sub    al,0x84
  40b584:	lods   eax,DWORD PTR ds:[esi]
  40b585:	dec    BYTE PTR [ebp+eax*2+0x62970428]
  40b58c:	jmp    0xb61fd894
  40b591:	jmp    0x5c793a5e
  40b596:	call   0x3ac6:0xae03e963
  40b59d:	add    al,0x96
  40b59f:	cli    
  40b5a0:	mov    bh,0x28
  40b5a2:	push   edi
  40b5a3:	bound  edx,QWORD PTR [ecx]
  40b5a5:	mov    ebx,0x5be92360
  40b5aa:	mov    ch,0x44
  40b5ac:	add    BYTE PTR [eax],ch
  40b5ae:	call   0x21:0xacd33483
  40b5b5:	lock pop dx
  40b5b8:	call   0xfec62618
  40b5bd:	rol    DWORD PTR [ebp+eax*2+0x41],0xe9
  40b5c2:	int    0x99
  40b5c4:	ds test al,0x95
  40b5c7:	cli    
  40b5c8:	loop   0x40b5c8
  40b5ca:	aam    0x62
  40b5cc:	push   0x806295eb
  40b5d1:	cs mov eax,0x383fe85a
  40b5d7:	test   esi,edi
  40b5d9:	ins    BYTE PTR es:[edi],dx
  40b5da:	mov    eax,0x3e16fd8c
  40b5df:	adc    al,0xe8
  40b5e1:	mov    DWORD PTR [eax],eax
	...
  40b5f3:	add    bl,al
  40b5f5:	bound  eax,QWORD PTR [eax]
  40b5f7:	push   es
  40b5f8:	mov    al,0x86
  40b5fa:	(bad)  
  40b5fb:	je     0x40b61a
  40b5fd:	jl     0x40b619
  40b5ff:	ja     0x40b5ff
  40b601:	test   al,cl
  40b603:	sub    ecx,DWORD PTR [ecx]
  40b605:	test   BYTE PTR [ebx+0x72],dl
  40b608:	fsubrp st(2),st
  40b60a:	ret    
  40b60b:	aad    0xf0
  40b60d:	test   dh,bh
  40b60f:	inc    ebx
  40b610:	call   0xe85a:0x67ce25f8
  40b617:	test   DWORD PTR [edi-0x7d],ebp
  40b61a:	(bad)  
  40b61b:	jo     0x40b674
  40b61d:	xchg   dh,al
  40b61f:	in     al,dx
  40b620:	int3   
  40b621:	inc    esp
  40b622:	inc    ecx
  40b623:	jmp    0xe94118bd
  40b628:	ds fdivrp st(6),st
  40b62b:	lahf   
  40b62c:	mov    cl,0x84
  40b62e:	dec    edi
  40b62f:	add    DWORD PTR [esi-0x3216ff9f],edx
  40b635:	dec    ebp
  40b636:	push   edx
  40b637:	add    BYTE PTR [edi+0x6f30685f],ch
  40b63d:	sbb    eax,0x1f616800
  40b642:	inc    ecx
  40b643:	add    BYTE PTR [edi+0x6f413d7f],dl
  40b649:	jl     0x40b67e
  40b64b:	sbb    ah,BYTE PTR [esi+0x52ff001d]
  40b651:	xchg   esi,esp
  40b653:	imul   ebx,edx,0x7b
  40b656:	std    
  40b657:	push   0x0
	...
  40b668:	add    BYTE PTR [eax],al
  40b66a:	pop    edi
  40b66b:	pop    ds
  40b66c:	inc    ecx
  40b66d:	add    BYTE PTR [edi+0x65],al
  40b670:	inc    eax
  40b671:	inc    ecx
  40b672:	aas    
  40b673:	daa    
  40b674:	jecxz  0x40b6b5
  40b676:	(bad)  
  40b677:	pop    esi
  40b678:	push   0x805f2f02
  40b67d:	jmp    DWORD PTR [edx]
  40b67f:	xchg   esi,esp
  40b681:	dec    edi
  40b682:	mov    bh,BYTE PTR [ebx-0x3]
  40b685:	lea    esi,[edx-0x6700038d]
  40b68b:	cs call 0x9fb56a
  40b691:	call   DWORD PTR [edx-0x88a0285]
  40b697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b698:	xchg   edx,eax
  40b699:	jge    0x40b693
  40b69b:	jnp    0x40b664
  40b69d:	ret    0x5ef3
  40b6a0:	push   ebp
  40b6a1:	mov    ebx,ebx
  40b6a3:	ffree  st(2)
  40b6a5:	hlt    
  40b6a6:	fnstcw WORD PTR [ebx-0x3]
  40b6a9:	push   0xffffffef
  40b6ab:	sub    BYTE PTR [edi],ah
  40b6ad:	jmp    DWORD PTR [edx-0x75ca197a]
  40b6b3:	jnp    0x40b6b2
  40b6b5:	mov    DWORD PTR [edx+0x7a],esi
  40b6b8:	lds    eax,FWORD PTR ds:0x413bc4
  40b6be:	scas   eax,DWORD PTR es:[edi]
  40b6bf:	pop    esi
  40b6c0:	add    BYTE PTR [eax],al
  40b6c2:	xchg   esi,eax
  40b6c3:	(bad)  
  40b6c4:	jg     0x40b6bc
  40b6c6:	test   al,0xd3
  40b6c8:	in     eax,0x4f
  40b6ca:	cs jne 0x40b6d0
	...
  40b6dd:	add    BYTE PTR [eax],al
  40b6df:	add    BYTE PTR [esi-0x69af6a0f],dl
  40b6e5:	mov    ebx,DWORD PTR [edx+0x4a]
  40b6e8:	(bad)  
  40b6e9:	dec    edx
  40b6ea:	add    al,0x68
  40b6ec:	fcmove st,st(3)
  40b6ee:	inc    ebx
  40b6ef:	add    dh,ch
  40b6f1:	sub    al,0x26
  40b6f3:	inc    ecx
  40b6f4:	xchg   esi,eax
  40b6f5:	sbb    BYTE PTR [eax],dh
  40b6f7:	sbb    bh,BYTE PTR [edi-0x1400fd36]
  40b6fd:	jae    0x40b6d9
  40b6ff:	jecxz  0x40b75b
  40b701:	inc    ecx
  40b702:	out    0x67,al
  40b704:	fmul   st(3),st
  40b706:	inc    ebx
  40b707:	add    BYTE PTR [esi-0x69bebd39],bh
  40b70d:	shl    ecx,cl
  40b70f:	xlat   BYTE PTR ds:[ebx]
  40b711:	mov    ebx,DWORD PTR [edx+0x2]
  40b714:	xchg   esi,eax
  40b715:	mov    eax,DWORD PTR [edx-0x257c5c02]
  40b71b:	(bad)  
  40b71c:	and    ch,BYTE PTR [ecx-0x1a]
  40b71f:	mov    WORD PTR [ebx],ss
  40b721:	jns    0x40b706
  40b723:	(bad)  
  40b724:	adc    esp,ebx
  40b726:	ficom  DWORD PTR [ecx+0x67]
  40b729:	mov    eax,DWORD PTR [edx]
  40b72b:	dec    DWORD PTR [ebx-0x718b1b79]
  40b731:	xchg   ebx,eax
  40b732:	idiv   BYTE PTR [ecx+esi*8-0x68]
  40b736:	mov    edx,0x4d8b92c1
  40b73b:	mov    esi,edx
  40b73d:	or     al,al
  40b73f:	repz fadd st,st(0)
  40b742:	in     al,0x69
	...
  40b754:	add    BYTE PTR [eax],al
  40b756:	xchg   esi,eax
  40b757:	and    eax,0x8343ff1c
  40b75c:	fisubr DWORD PTR [ebp-0x1a599dbe]
  40b762:	push   cs
  40b763:	sub    BYTE PTR [ebp-0x29926543],bl
  40b769:	inc    edx
  40b76a:	xchg   esi,eax
  40b76b:	(bad)  
  40b76c:	jmp    0x6c304d74
  40b771:	in     eax,dx
  40b772:	fwait
  40b773:	cmp    DWORD PTR [ebp+0x54],0x3e866fe
  40b77a:	xchg   esi,eax
  40b77b:	mov    al,al
  40b77d:	push   edx
  40b77e:	xchg   esi,eax
  40b77f:	(bad)  
  40b781:	popa   
  40b782:	(bad)  
  40b783:	and    ebp,ecx
  40b785:	pop    ebx
  40b786:	int3   
  40b787:	and    ch,BYTE PTR [eax+0xd85fe03]
  40b78d:	inc    ebx
  40b78e:	xchg   esi,eax
  40b78f:	cmp    ebx,0xe923af09
  40b795:	in     al,0xca
  40b797:	push   0x41
  40b799:	inc    edi
  40b79a:	dec    edx
  40b79b:	sub    DWORD PTR ds:0xa822b45c,0xa91cae03
  40b7a5:	inc    edx
  40b7a6:	xchg   esi,eax
  40b7a7:	or     cl,BYTE PTR [edx]
  40b7a9:	and    eax,0x18162d7
  40b7ae:	xchg   esi,eax
  40b7af:	bound  ebp,QWORD PTR [ecx-0x1b]
  40b7b2:	mov    ds:0x1243116a,al
  40b7b7:	xor    ebp,0x76
	...
  40b7c9:	add    BYTE PTR [eax],al
  40b7cb:	add    BYTE PTR [edx],dl
  40b7cd:	jns    0x40b7bd
  40b7cf:	in     al,0x0
  40b7d1:	adc    dl,cl
  40b7d3:	mov    eax,0xe4e96249
  40b7d8:	push   0x7e
  40b7da:	aad    0x6e
  40b7dc:	sahf   
  40b7dd:	mov    ah,BYTE PTR [esi+0x67]
  40b7e0:	loope  0x40b762
  40b7e2:	scas   eax,DWORD PTR es:[edi]
  40b7e3:	rcl    DWORD PTR [ebp-0x4286eb9e],0xe4
  40b7ea:	jmp    FWORD PTR [ecx+esi*4-0x62bcfff6]
  40b7f1:	xor    DWORD PTR [ecx+esi*8-0x23],0xba9e7c4a
  40b7f9:	jmp    0x62904d42
  40b7fe:	push   0x235566
  40b803:	adc    DWORD PTR [ecx],ebp
  40b805:	and    al,BYTE PTR [ecx-0x17]
  40b808:	jp     0x40b841
  40b80a:	sbb    al,al
  40b80c:	aam    0x62
  40b80e:	call   0xfec1cc8c
  40b813:	repnz push ebp
  40b815:	hlt    
  40b816:	sbb    BYTE PTR [ecx+0x460062cd],bh
  40b81c:	xor    ecx,DWORD PTR [eax]
  40b81e:	xchg   edi,eax
  40b81f:	test   eax,0x465062d4
  40b824:	call   0xf6afa093
  40b829:	cmp    dh,0x41
  40b82c:	(bad)  
  40b82d:	std    
  40b82e:	(bad)  
  40b82f:	add    BYTE PTR cs:[eax],al
	...
  40b842:	fbld   TBYTE PTR [edx+0x68]
  40b845:	ja     0x40b81c
  40b847:	and    DWORD PTR [eax],eax
  40b849:	xchg   ecx,eax
  40b84a:	shl    BYTE PTR [edx],0x41
  40b84d:	jmp    0xc05aef84
  40b852:	aam    0x62
  40b854:	call   0xfec1cc9e
  40b859:	repnz aad 0xf3
  40b85c:	sbb    BYTE PTR [ecx-0x1ff9d93],bl
  40b862:	cmp    cl,BYTE PTR [eax]
  40b864:	xchg   edi,eax
  40b865:	sub    DWORD PTR [ebx+0x62],edx
  40b868:	push   eax
  40b869:	fimul  WORD PTR [edi+0x6a]
  40b86c:	call   0xfec1e9a3
  40b871:	ror    DWORD PTR ds:0xd000fefe,0x83
  40b878:	jae    0x40b876
  40b87a:	adc    BYTE PTR [edx],bl
  40b87c:	or     al,ch
  40b87e:	add    eax,0xf6ffff20
  40b883:	test   al,0x2
  40b885:	add    BYTE PTR [edx-0x11],bh
  40b888:	jmp    0x9557:0x5482fb83
  40b88f:	pushw  0x2a
  40b892:	adc    BYTE PTR [edx],bl
  40b894:	or     al,ch
  40b896:	xor    ebx,DWORD PTR [edi]
  40b898:	(bad)  
  40b899:	inc    DWORD PTR [esi]
  40b89b:	sub    bh,ah
  40b89d:	push   0x7f
  40b89f:	mov    esp,DWORD PTR [edi+0x983f082]
  40b8a5:	rol    BYTE PTR [eax],0x0
	...
  40b8b8:	pop    ebx
  40b8b9:	jle    0x40b909
  40b8bb:	push   0xbeef637f
  40b8c0:	push   edi
  40b8c1:	(bad)  
  40b8c2:	ds inc ecx
  40b8c4:	outs   dx,DWORD PTR ds:[esi]
  40b8c5:	xor    edi,edi
  40b8c7:	jne    0x40b930
  40b8c9:	mov    ecx,DWORD PTR [edi]
  40b8cb:	mov    ds:0x3de68390,eax
  40b8d0:	add    DWORD PTR [ebp+edi*8+0x28584a8b],eax
  40b8d7:	inc    ecx
  40b8d8:	das    
  40b8d9:	lock cmp esi,DWORD PTR [edi]
  40b8dc:	inc    edi
  40b8dd:	add    BYTE PTR es:[eax+0x45746340],al
  40b8e4:	pop    ss
  40b8e5:	(bad)  
  40b8e6:	ds inc ecx
  40b8e8:	das    
  40b8e9:	cmp    al,0xe8
  40b8eb:	mov    ebp,0xb00632f
  40b8f0:	mov    edi,0x97561f1a
  40b8f5:	xchg   BYTE PTR [ebp+0x6832f0ff],al
  40b8fb:	add    bh,bh
  40b8fd:	jae    0x40b8bb
  40b8ff:	push   0x4142ed96
  40b904:	xchg   esi,eax
  40b905:	cmp    ebx,esp
  40b907:	je     0x40b897
  40b909:	xchg   ecx,eax
  40b90a:	mov    ah,0xa1
  40b90c:	sar    DWORD PTR [edi-0x47b40216],1
  40b912:	loope  0x40b8fe
  40b914:	xchg   edi,eax
  40b915:	inc    edi
  40b916:	test   BYTE PTR ds:0x45de5e96,bh
	...
  40b92c:	add    BYTE PTR [eax],al
  40b92e:	mov    dl,0x9b
  40b930:	ret    0xa9b8
  40b933:	xlat   BYTE PTR ds:[ebx]
  40b934:	loope  0x40b934
  40b936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b937:	sbb    eax,DWORD PTR ds:[edi]
  40b93a:	and    esp,DWORD PTR [edx+eiz*8]
  40b93d:	je     0x40b8d1
  40b93f:	std    
  40b940:	push   edi
  40b941:	or     BYTE PTR [esi+0x52],bh
  40b944:	pop    edi
  40b945:	inc    DWORD PTR [ecx+0x54c9426d]
  40b94b:	nop
  40b94c:	add    dl,BYTE PTR [ebp+0x1d]
  40b94f:	xor    BYTE PTR [esi+0x39be6ac3],al
  40b955:	push   0xffffff96
  40b957:	mov    eax,ds:0x73e3ff2d
  40b95c:	jmp    0xd388:0xe23cccf9
  40b963:	aaa    
  40b964:	mov    ?,WORD PTR [eax*4+0xd004563]
  40b96b:	xchg   DWORD PTR [ecx],ebx
  40b96d:	sub    bh,dl
  40b96f:	mov    eax,DWORD PTR [edx+0x47df963e]
  40b975:	push   0x43cc5a
  40b97a:	rcl    DWORD PTR [ebx+0x22],0x50
  40b97e:	xchg   esi,eax
  40b97f:	mov    ecx,DWORD PTR ds:0x389482c0
  40b985:	call   0xff22bdfe
  40b98a:	bound  dx,DWORD PTR [ecx+0x4]
  40b98e:	xchg   esi,eax
  40b98f:	lea    ebx,[esi+0x6c]
	...
  40b9a1:	add    BYTE PTR [eax],al
  40b9a3:	add    BYTE PTR [eax],ah
  40b9a5:	and    ebp,DWORD PTR [eax]
  40b9a7:	add    al,0x46
  40b9a9:	jge    0x40b9fe
  40b9ab:	or     al,0xee
  40b9ad:	push   ss
  40b9ae:	mov    esp,ecx
  40b9b0:	ror    BYTE PTR [edx+0x7dc95f68],1
  40b9b6:	rol    DWORD PTR [ebx],0x58
  40b9b9:	loop   0x40b9a9
  40b9bb:	add    eax,DWORD PTR [ebx+0x78]
  40b9be:	cs loopne 0x40ba25
  40b9c1:	mov    ds:0x7da8e15f,al
  40b9c6:	xchg   ebp,eax
  40b9c7:	(bad)  
  40b9c8:	repz cmp ah,dh
  40b9cb:	push   esi
  40b9cc:	fnstsw WORD PTR [ebp-0x5]
  40b9cf:	fist   WORD PTR [eax+0x6debf0f7]
  40b9d5:	clc    
  40b9d6:	jne    0x40b9b9
  40b9d8:	loopne 0x40b9f6
  40b9da:	mov    al,ds:0xbc6295c6
  40b9df:	mov    WORD PTR [ebp-0x1f],?
  40b9e2:	and    al,0xe0
  40b9e4:	jmp    DWORD PTR [edx-0x3d]
  40b9e7:	das    
  40b9e8:	popa   
  40b9e9:	mul    eax
  40b9eb:	jmp    0x40b9c8
  40b9ed:	clc    
  40b9ee:	inc    ebp
  40b9ef:	loope  0x40ba0f
  40b9f1:	daa    
  40b9f2:	cmp    eax,0xe908966e
  40b9f7:	imul   ebp,DWORD PTR [edx+0x22],0xffffffa8
  40b9fb:	add    ebp,DWORD PTR [esi+0x1603e962]
  40ba01:	mov    dh,BYTE PTR [eax-0x1e82d77d]
  40ba07:	ret    
	...
  40ba18:	add    BYTE PTR [eax],al
  40ba1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1b:	pop    ebp
  40ba1c:	mov    ecx,0x5e428eb
  40ba21:	loope  0x40ba84
  40ba23:	or     ch,cl
  40ba25:	add    edi,ecx
  40ba27:	mov    ebx,0x3cd280ff
  40ba2c:	inc    ecx
  40ba2d:	jmp    0xf1b537f7
  40ba32:	std    
  40ba33:	and    DWORD PTR [eax+0xc84f6de],0xfe7bf754
  40ba3d:	push   esp
  40ba3e:	idiv   BYTE PTR [ebx+0x74]
  40ba41:	icebp  
  40ba42:	mov    ebp,0xb6be79fc
  40ba47:	test   eax,0x1795edc1
  40ba4c:	mov    edi,DWORD PTR [ebp+0x13fba112]
  40ba52:	call   0xe86a:0x409e2d08
  40ba59:	int    0x43
  40ba5b:	jge    0x40ba5b
  40ba5d:	pusha  
  40ba5e:	push   eax
  40ba5f:	jle    0x40bac8
  40ba61:	jmp    0x11fe45fb
  40ba66:	and    BYTE PTR [ebx],0x41
  40ba69:	jmp    0x2882195b
  40ba6e:	xchg   edx,eax
  40ba6f:	jnp    0x40bae5
  40ba71:	icebp  
  40ba72:	jge    0x40b9fc
  40ba74:	mov    al,ds:0x747d765e
  40ba79:	push   ebp
  40ba7a:	jbe    0x40ba73
  40ba7c:	pop    es
  40ba7d:	inc    ecx
	...
  40ba8e:	add    BYTE PTR [eax],al
  40ba90:	sar    al,1
  40ba92:	inc    BYTE PTR [esi+0x5c]
  40ba95:	mov    ds:0xe780e903,al
  40ba9a:	jmp    0x40bb06
  40ba9c:	pop    ecx
  40ba9d:	js     0x40bb08
  40ba9f:	jmp    0x9d40074f
  40baa4:	popf   
  40baa5:	mov    ch,al
  40baa7:	mov    al,ds:0xac887d36
  40baac:	inc    ecx
  40baad:	add    al,0x0
  40baaf:	jmp    0xa878da
  40bab4:	loopne 0x40bad6
  40bab6:	inc    ecx
  40bab7:	add    BYTE PTR [edi],ah
  40bab9:	pop    esp
  40baba:	inc    ecx
  40babb:	inc    ecx
  40babc:	out    dx,eax
  40babd:	xor    BYTE PTR [ebx+0x8],0x97
  40bac1:	rcr    BYTE PTR [edi+0xef8ff],1
  40bac7:	add    al,bl
  40bac9:	fsub   QWORD PTR [esi+0x32]
  40bacc:	scas   al,BYTE PTR es:[edi]
  40bacd:	and    eax,0x258b6800
  40bad2:	inc    ecx
  40bad3:	add    al,bl
  40bad5:	sbb    DWORD PTR [eax],ecx
  40bad7:	call   0x3e8011
  40badc:	or     BYTE PTR [edx],bl
  40bade:	cld    
  40badf:	inc    DWORD PTR [edx+0x76f3e86e]
  40bae5:	fwait
  40bae6:	std    
  40bae7:	leave  
  40bae8:	std    
  40bae9:	push   0x0
  40baeb:	push   ebp
  40baec:	xor    al,0x72
  40baee:	add    esp,0x1053e80b
	...
  40bb04:	add    BYTE PTR [eax],al
  40bb06:	add    al,0x71
  40bb08:	push   0xfc29fa00
  40bb0d:	push   eax
  40bb0e:	or     BYTE PTR [edx],bl
  40bb10:	or     BYTE PTR [edx+0x6f],ch
  40bb13:	pushf  
  40bb14:	jae    0x40bb26
  40bb16:	clc    
  40bb17:	xor    BYTE PTR [eax*4-0x74d8e641],bl
  40bb1e:	and    bl,BYTE PTR [ebx+0x96f6a8e]
  40bb24:	add    BYTE PTR [eax-0x28],ch
  40bb27:	pop    edi
  40bb28:	add    BYTE PTR [eax],al
  40bb2a:	mov    BYTE PTR [ecx],bl
  40bb2c:	or     al,0x6a
  40bb2e:	mov    BYTE PTR [ebx+0x5f550470],bl
  40bb34:	push   0x0
  40bb36:	xchg   ebp,ecx
  40bb38:	dec    ebx
  40bb39:	add    BYTE PTR [edi],bh
  40bb3b:	out    dx,eax
  40bb3c:	std    
  40bb3d:	jne    0x40bad5
  40bb3f:	push   ebp
  40bb40:	in     al,dx
  40bb41:	pop    edi
  40bb42:	enter  0x289,0xc9
  40bb46:	aam    0x74
  40bb48:	add    dl,BYTE PTR [ebp+0x1d]
  40bb4b:	ins    DWORD PTR es:[edi],dx
  40bb4c:	add    ebx,0x2
  40bb4f:	add    BYTE PTR [ecx],bh
  40bb51:	adc    al,0xd
  40bb53:	xchg   edi,eax
  40bb54:	push   0xe04e2300
  40bb59:	dec    edi
  40bb5a:	jmp    0x6c3fcb74
  40bb5f:	sub    DWORD PTR [eax+0x0],0xfef815d9
  40bb66:	fs push ecx
  40bb68:	mov    DWORD PTR [edi+0x0],edi
	...
  40bb7a:	add    BYTE PTR [eax],al
  40bb7c:	inc    ebx
  40bb7d:	mov    edx,DWORD PTR fs:[edx+eax*8+0x18]
  40bb82:	imul   eax,DWORD PTR [eax],0xff6a892c
  40bb88:	xchg   ebp,eax
  40bb89:	mov    DWORD PTR [edx],eax
  40bb8b:	jmp    DWORD PTR [ebx]
  40bb8d:	jns    0x40bbf7
  40bb8f:	jmp    DWORD PTR [ecx-0x6995f7aa]
  40bb95:	pop    edi
  40bb96:	add    al,0xe8
  40bb98:	in     eax,dx
  40bb99:	cs add al,0x0
  40bb9c:	es stc 
  40bb9e:	push   edi
  40bb9f:	cld    
  40bba0:	outs   dx,BYTE PTR ds:[esi]
  40bba1:	sahf   
  40bba2:	dec    esp
  40bba3:	add    BYTE PTR [esi-0x69f03f3e],dl
  40bba9:	mov    dh,0x89
  40bbab:	jmp    0x40bc16
  40bbad:	(bad)  
  40bbb1:	jae    0x40bb9d
  40bbb3:	push   edx
  40bbb4:	fisubr WORD PTR [eax]
  40bbb6:	fdivp  st(6),st
  40bbb8:	retf   
  40bbb9:	outs   dx,DWORD PTR ds:[esi]
  40bbba:	jmp    0x36d1:0x28bdb97
  40bbc1:	or     eax,0x48e601c3
  40bbc6:	pop    eax
  40bbc7:	or     al,0x31
  40bbc9:	arpl   WORD PTR [ebx+edi*8-0x215f0ccf],bx
  40bbd0:	and    BYTE PTR [edx-0x65],bh
  40bbd3:	neg    DWORD PTR [eax]
  40bbd5:	lock clc 
  40bbd7:	fimul  WORD PTR [edx-0x719eeea6]
  40bbdd:	jns    0x40bbdc
  40bbdf:	retf   
	...
  40bbf0:	add    BYTE PTR [eax],al
  40bbf2:	xlat   BYTE PTR ds:[ebx]
  40bbf3:	dec    esi
  40bbf4:	jmp    0xedc7c931
  40bbf9:	push   edi
  40bbfa:	sahf   
  40bbfb:	jns    0x40bc58
  40bbfd:	cld    
  40bbfe:	icebp  
  40bbff:	pop    esp
  40bc00:	popa   
  40bc01:	fucom  st(0)
  40bc03:	jns    0x40bc60
  40bc05:	adc    dh,ch
  40bc07:	out    0x1c,eax
  40bc09:	add    al,0x96
  40bc0b:	and    bl,BYTE PTR [ecx]
  40bc0d:	fld    QWORD PTR [edx+0x66]
  40bc10:	mov    esi,0xf18a9e57
  40bc15:	pop    ebx
  40bc16:	mov    ecx,0x8a57ad79
  40bc1b:	jns    0x40bc38
  40bc1d:	hlt    
  40bc1e:	test   al,0xef
  40bc20:	add    ah,ch
  40bc22:	jb     0x40bc1e
  40bc24:	xchg   ebp,eax
  40bc25:	(bad)  
  40bc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc28:	hlt    
  40bc29:	add    ebp,ebx
  40bc2b:	in     eax,dx
  40bc2c:	xchg   esp,eax
  40bc2d:	adc    DWORD PTR [ebp-0x72],0x79
  40bc31:	fld    QWORD PTR [eax+0xafbfb79]
  40bc37:	fucomip st,st(0)
  40bc39:	fbstp  TBYTE PTR [eax+0x79]
  40bc3c:	mov    eax,0x516ae2dc
  40bc41:	mov    esi,0xdd557963
  40bc46:	loop   0x40bca2
  40bc48:	pop    esp
  40bc49:	xchg   DWORD PTR [ecx+0x71],edx
  40bc4c:	inc    ebp
  40bc4d:	fstp   st(1)
  40bc4f:	jns    0x40bc04
  40bc51:	cmovno ebp,edi
  40bc54:	jmp    eax
	...
  40bc66:	add    BYTE PTR [eax],al
  40bc68:	sub    eax,0x532eff55
  40bc6d:	or     eax,DWORD PTR [eax]
  40bc6f:	xchg   ebx,eax
  40bc70:	xchg   ebp,eax
  40bc71:	or     bh,bh
  40bc73:	jmp    0x6e92:0x6c8d6295
  40bc7a:	dec    BYTE PTR [esi]
  40bc7c:	retf   0xff0c
  40bc7f:	push   es
  40bc80:	popa   
  40bc81:	push   edx
  40bc82:	push   0xffffffe9
  40bc84:	outs   dx,DWORD PTR ds:[esi]
  40bc85:	(bad)  
  40bc86:	call   0xa322e6
  40bc8b:	sbb    DWORD PTR es:[ecx+0x68cae6f2],ecx
  40bc92:	add    cl,ch
  40bc94:	xchg   ebp,eax
  40bc95:	mov    eax,ds:0x77c6dd84
  40bc9a:	(bad)  
  40bc9b:	jmp    0x40bc32
  40bc9d:	bound  eax,QWORD PTR [eax]
  40bc9f:	scas   al,BYTE PTR es:[edi]
  40bca0:	adc    BYTE PTR [ecx-0xe],dh
  40bca3:	mov    esi,0xe9fe78e2
  40bca8:	xchg   ebp,eax
  40bca9:	mov    eax,ds:0x77c6ad84
  40bcae:	(bad)  
  40bcaf:	jmp    0x72411f49
  40bcb4:	push   0x2ffb8b5a
  40bcb9:	bound  ecx,QWORD PTR [ebp-0x18a9a9c]
  40bcbf:	xchg   ch,al
  40bcc1:	in     eax,0x84
  40bcc3:	lea    esp,[esi+0x79]
  40bcc6:	(bad)  
  40bcc7:	sbb    DWORD PTR [ecx],ecx
  40bcc9:	(bad)  
  40bccb:	jp     0x40bccd
	...
  40bcdd:	add    BYTE PTR [edx+0x79],dl
  40bce0:	dec    edi
  40bce1:	data16 rcl BYTE PTR [edx-0x1],0xd4
  40bce6:	xchg   ecx,eax
  40bce7:	ja     0x40bd5d
  40bce9:	loope  0x40bcda
  40bceb:	(bad)  
  40bcec:	call   esp
  40bcee:	dec    ebp
  40bcef:	jns    0x40bd42
  40bcf1:	add    bl,bh
  40bcf3:	loop   0x40bcb0
  40bcf5:	call   0x13e5376
  40bcfa:	xor    al,ah
  40bcfc:	sbb    al,BYTE PTR [ecx]
  40bcfe:	aas    
  40bcff:	cmp    DWORD PTR fs:[ebp-0x26d7d],0x2f
  40bd07:	test   BYTE PTR [bx],cl
  40bd0a:	cs fs add bh,al
  40bd0e:	jp     0x40bcbf
  40bd10:	icebp  
  40bd11:	call   DWORD PTR [eax-0x3e10ff9d]
  40bd17:	or     ecx,DWORD PTR [ebx+0x41]
  40bd1a:	cs lea eax,fs:[ebp-0x26801]
  40bd22:	scas   eax,DWORD PTR es:[edi]
  40bd23:	xchg   BYTE PTR [edx],dl
  40bd25:	dec    esp
  40bd26:	out    dx,eax
  40bd27:	arpl   WORD PTR [ebp-0x38dfc440],ax
  40bd2d:	test   DWORD PTR [ebx],ecx
  40bd2f:	nop
  40bd30:	std    
  40bd31:	(bad)  
  40bd32:	mov    esi,0x67beef63
  40bd37:	cmp    DWORD PTR [ecx+0x41],eax
  40bd3a:	scas   eax,DWORD PTR es:[edi]
  40bd3b:	jmp    0x50fd:0x9c030083
	...
  40bd52:	add    BYTE PTR [eax],al
  40bd54:	pop    es
  40bd55:	xchg   edx,eax
  40bd56:	dec    ecx
  40bd57:	add    BYTE PTR [edi-0x338b411e],ch
  40bd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd5e:	adc    esp,0x2c
  40bd61:	fwait
  40bd62:	std    
  40bd63:	add    bh,BYTE PTR [edi-0x74]
  40bd66:	mov    esp,0x411e8a68
  40bd6b:	add    dl,dh
  40bd6d:	loope  0x40bd6d
  40bd6f:	sti    
  40bd70:	add    BYTE PTR [esi+ecx*2+0x27a9e8],bl
  40bd77:	add    dl,bh
  40bd79:	sahf   
  40bd7a:	or     eax,0x3ec9685
  40bd7f:	add    BYTE PTR [esi-0x28bf745f],dl
  40bd85:	mov    DWORD PTR [edi-0x24d2697c],eax
  40bd8b:	(bad)  
  40bd8c:	out    0x21,al
  40bd8e:	mov    bl,0x4b
  40bd90:	xchg   esi,eax
  40bd91:	mov    DWORD PTR ds:0x85daa2c0,ecx
  40bd97:	cmp    al,0x4a
  40bd99:	retf   0x43
  40bd9c:	xchg   esi,eax
  40bd9d:	cmp    BYTE PTR [esi-0x80],0x96
  40bda1:	mov    DWORD PTR [edx],eax
  40bda3:	inc    DWORD PTR [ebx+0x51]
  40bda6:	xlat   BYTE PTR ds:[ebx]
  40bda7:	inc    BYTE PTR [ecx]
  40bda9:	or     BYTE PTR [ecx-0x268ffa21],al
  40bdaf:	(bad)  
  40bdb0:	sub    esi,DWORD PTR [ebp-0x2b]
  40bdb3:	(bad)  
  40bdb4:	jmp    0x1243da8
	...
  40bdc9:	add    ch,ah
  40bdcb:	xchg   edi,eax
  40bdcc:	(bad)  [ebx+edx*1-0x2e012a4f]
  40bdd3:	cmp    BYTE PTR [esi+0x1],ch
  40bdd6:	cmp    al,0x89
  40bdd8:	ins    BYTE PTR es:[edi],dx
  40bdd9:	add    BYTE PTR [ecx+ecx*4],ch
  40bddc:	ins    BYTE PTR es:[edi],dx
  40bddd:	add    BYTE PTR [ebx],cl
  40bddf:	push   es
  40bde0:	jecxz  0x40bdd4
  40bde2:	mov    cl,0xc7
  40bde4:	xor    bh,bh
  40bde6:	xor    DWORD PTR [ebp+0x74964143],0xffffffc2
  40bded:	jae    0x40be40
  40bdef:	ror    BYTE PTR [edi+0x14],1
  40bdf2:	xchg   ecx,eax
  40bdf3:	btc    edx,esi
  40bdf6:	mov    ebp,ebx
  40bdf8:	fnstenv [edx+eiz*2+0x79fed9f9]
  40bdff:	ja     0x40bdf3
  40be01:	(bad)  
  40be02:	sub    edx,eax
  40be04:	aad    0xfe
  40be06:	imul   esp,DWORD PTR [ebx+0x51],0x5d7662de
  40be0d:	fisub  DWORD PTR [edx]
  40be0f:	xchg   edi,eax
  40be10:	pop    ecx
  40be11:	ficom  DWORD PTR [eax-0x75]
  40be14:	cs dec ebp
  40be16:	xchg   esi,eax
  40be17:	bound  edx,QWORD PTR [edx-0x8]
  40be1a:	inc    eax
  40be1b:	lock aam 0xda
  40be1e:	add    cl,BYTE PTR [ebx+0x7630da39]
  40be24:	jae    0x40be0d
  40be26:	and    al,0x76
  40be28:	and    eax,0x1e52aada
  40be2d:	nop
	...
  40be3e:	add    BYTE PTR [eax],al
  40be40:	inc    ebp
  40be41:	jb     0x40be58
  40be43:	(bad)  
  40be45:	xchg   ebx,eax
  40be46:	or     ebx,edx
  40be48:	or     BYTE PTR [esi+0x3b],dh
  40be4b:	out    0x4,eax
  40be4d:	jbe    0x40be4c
  40be4f:	jmp    0xa0df:0x3e929e5
  40be56:	aam    0x3
  40be58:	inc    ebx
  40be59:	jmp    0xbb164432
  40be5e:	xor    eax,0x624e428d
  40be63:	mul    BYTE PTR [edx]
  40be65:	and    BYTE PTR [ecx-0x399dc3cc],dl
  40be6b:	dec    edi
  40be6c:	xchg   edx,eax
  40be6d:	jne    0x40bea2
  40be6f:	or     al,0x2c
  40be71:	bound  esi,QWORD PTR [esi+0x1a758a4f]
  40be77:	xor    BYTE PTR [ebx],dl
  40be79:	mov    ds:0x1fd9301b,eax
  40be7e:	pop    ebp
  40be7f:	add    al,0x96
  40be81:	(bad)  
  40be82:	jmp    0x61fba913
  40be87:	neg    BYTE PTR [edx]
  40be89:	pop    ds
  40be8a:	inc    ebp
  40be8b:	xor    al,0x13
  40be8d:	pop    ds
  40be8e:	test   eax,0x52ec34
  40be93:	jbe    0x40be76
  40be95:	mov    edx,0xe19e1bfe
  40be9a:	jl     0x40be41
  40be9c:	call   0xfea2:0xc16c26ee
  40bea3:	fadd   QWORD PTR [eax]
	...
  40beb5:	add    BYTE PTR [ecx+0x74],al
  40beb8:	je     0x40beb3
  40beba:	outs   dx,BYTE PTR ds:[esi]
  40bebb:	sub    al,0xff
  40bebd:	mov    esp,0xf1747599
  40bec2:	sub    eax,0x4f36fc91
  40bec7:	je     0x40beff
  40bec9:	inc    ecx
  40beca:	mov    cl,0x29
  40becc:	add    cl,ch
  40bece:	sbb    bl,BYTE PTR [ebx+eax*1+0x74b6d11e]
  40bed5:	aaa    
  40bed6:	add    ebp,DWORD PTR [edx+ecx*4+0x11e82db4]
  40bedd:	push   es
  40bede:	push   ecx
  40bedf:	mov    edx,0x158d9bfe
  40bee4:	leave  
  40bee5:	sub    ebp,edx
  40bee7:	je     0x40bf3c
  40bee9:	(bad)  
  40beea:	(bad)  
  40beeb:	loope  0x40beb0
  40beed:	loope  0x40beae
  40beef:	jae    0x40beef
  40bef1:	or     ecx,DWORD PTR ss:[esi]
  40bef4:	adc    BYTE PTR [edx-0x35],ah
  40bef7:	in     eax,0x84
  40bef9:	shr    edi,1
  40befb:	jae    0x40befb
  40befd:	sbb    DWORD PTR [eax],esi
  40beff:	(bad)  
  40bf00:	push   DWORD PTR [edx+ecx*4]
  40bf03:	or     BYTE PTR [eax],al
  40bf05:	mov    dh,0x60
  40bf07:	push   edx
  40bf08:	call   FWORD PTR [ebx]
  40bf0a:	mov    ds,edi
  40bf0c:	mov    edi,0x849d371c
  40bf11:	popf   
  40bf12:	mov    edi,0x95e9fe73
  40bf17:	bound  eax,QWORD PTR [eax]
  40bf19:	bound  eax,QWORD PTR [eax]
	...
  40bf2b:	add    al,bh
  40bf2d:	imul   edi,ebp,0x0
  40bf30:	sbb    BYTE PTR [ebx-0xb15ed77],bl
  40bf36:	cli    
  40bf37:	(bad)  
  40bf38:	call   0xf2ce0dd7
  40bf3d:	pop    edi
  40bf3e:	(bad)  
  40bf3f:	(bad)  
  40bf40:	clc    
  40bf41:	das    
  40bf42:	push   0x10
  40bf44:	mov    eax,0xe8fef6e4
  40bf49:	call   0xfcbb:0xdf6b52fd
  40bf50:	fstp   DWORD PTR [edx+0x3e0300fd]
  40bf56:	lea    edi,[ebp-0x264c1]
  40bf5c:	js     0x40bf82
  40bf5e:	adc    bh,bh
  40bf60:	add    bl,BYTE PTR [edi+edx*2-0x1]
  40bf64:	add    ch,BYTE PTR [eax-0x18]
  40bf67:	adc    ebp,DWORD PTR [eax-0x4f7c0266]
  40bf6d:	outs   dx,DWORD PTR ds:[esi]
  40bf6e:	std    
  40bf6f:	lea    ebx,[ebx-0x7d000267]
  40bf75:	sub    ecx,0xf70474aa
  40bf7b:	(bad)  
  40bf7c:	clc    
  40bf7d:	mov    ecx,DWORD PTR [ecx-0x92e07ee]
  40bf83:	(bad)  
  40bf84:	mov    eax,0xb752fd8b
  40bf89:	sub    al,0xc9
  40bf8b:	ret    0x5feb
  40bf8e:	push   ebp
  40bf8f:	mov    eax,DWORD PTR [eax]
	...
  40bfa1:	add    bl,ch
  40bfa3:	ffree  st(2)
  40bfa5:	clc    
  40bfa6:	stc    
  40bfa7:	mov    edi,ebp
  40bfa9:	push   edi
  40bfaa:	xor    al,0x31
  40bfac:	or     al,0x8b
  40bfae:	int    0xea
  40bfb0:	cmp    eax,0xfffffff9
  40bfb3:	mov    edi,ebp
  40bfb5:	push   eax
  40bfb6:	test   DWORD PTR [esi+0x6a],ebx
  40bfb9:	add    BYTE PTR [esi-0x76f3af34],dl
  40bfbf:	aaa    
  40bfc0:	sbb    al,0x85
  40bfc2:	push   esi
  40bfc3:	jbe    0x40bffa
  40bfc5:	(bad)  
  40bfc6:	shl    ebp,cl
  40bfc8:	add    eax,DWORD PTR [eax]
  40bfca:	xchg   esi,eax
  40bfcb:	mov    DWORD PTR [edx-0x76],esi
  40bfce:	add    esi,ecx
  40bfd0:	aad    0xfe
  40bfd2:	popa   
  40bfd3:	lock icebp 
  40bfd5:	mov    ebx,ss
  40bfd7:	adc    eax,0xd1b8d34
  40bfdc:	(bad)  
  40bfdd:	dec    BYTE PTR [ecx-0x47]
  40bfe0:	push   0xdbf64110
  40bfe5:	std    
  40bfe6:	cmp    DWORD PTR [edi+edx*8],esi
  40bfe9:	push   ecx
  40bfea:	mov    ds:0x2a7c8319,al
  40bfef:	mov    DWORD PTR [edx+0x73],esi
  40bff2:	jbe    0x40bfe2
  40bff4:	cwde   
  40bff5:	sti    
  40bff6:	sbb    BYTE PTR [edi+edx*8-0x71],dl
  40bffa:	adc    esi,edx
  40bffc:	push   es
  40bffd:	inc    DWORD PTR [ebx-0x7117d27f]
  40c003:	pop    esp
  40c004:	xlat   BYTE PTR ds:[ebx]
  40c005:	inc    BYTE PTR [eax]
	...
  40c017:	add    BYTE PTR ds:0xf18ff43c,dl
  40c01d:	mov    ebp,0x62638fd6
  40c022:	je     0x40c00e
  40c024:	and    al,0xf0
  40c026:	outs   dx,DWORD PTR ds:[esi]
  40c027:	neg    eax
  40c029:	xchg   ebx,eax
  40c02a:	aad    0x8a
  40c02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02d:	mov    WORD PTR [edi-0x2a5c3709],cs
  40c033:	(bad)  
  40c034:	fs jno 0x40c06c
  40c037:	leave  
  40c038:	aam    0x70
  40c03a:	add    dl,BYTE PTR [ebp+0x1d]
  40c03d:	popf   
  40c03e:	add    ebx,0x74d74ae6
  40c044:	xchg   edx,eax
  40c045:	bound  edx,QWORD PTR [ecx-0x169db134]
  40c04b:	or     dl,BYTE PTR [esi-0x8]
  40c04e:	jmp    0x40c085
  40c050:	pop    edi
  40c051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c052:	fadd   QWORD PTR [ebx]
  40c054:	sub    DWORD PTR [bx+di-0x3d],0xffffff97
  40c059:	fstp   QWORD PTR [eax+0x187eda88]
  40c05f:	xor    ch,BYTE PTR [ecx-0x8]
  40c062:	fsub   st(3),st
  40c064:	cmc    
  40c065:	loopne 0x40c0cc
  40c067:	(bad)  
  40c068:	lods   al,BYTE PTR ds:[esi]
  40c069:	fwait
  40c06a:	outs   dx,DWORD PTR ds:[esi]
  40c06b:	dec    eax
  40c06c:	push   0x7e
  40c06e:	loop   0x40c07d
  40c070:	cdq    
  40c071:	mov    eax,0x64322ca4
  40c076:	lods   al,BYTE PTR ds:[esi]
  40c077:	scas   eax,DWORD PTR es:[edi]
  40c078:	(bad)  
  40c079:	in     eax,0x3f
  40c07b:	out    dx,eax
	...
  40c08c:	add    BYTE PTR [eax],al
  40c08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08f:	jae    0x40c092
  40c091:	into   
  40c092:	push   ds
  40c093:	clc    
  40c094:	sbb    dl,ch
  40c096:	jns    0x40c0d0
  40c098:	test   BYTE PTR [ebp+0x330d40d5],0x7e
  40c09f:	push   edx
  40c0a0:	stos   DWORD PTR es:[edi],eax
  40c0a1:	inc    esp
  40c0a2:	xchg   esi,eax
  40c0a3:	fbld   TBYTE PTR [ebx+0x147a51bb]
  40c0a9:	dec    esp
  40c0aa:	xchg   esi,eax
  40c0ab:	bound  ebp,QWORD PTR [edx-0x41]
  40c0ae:	popf   
  40c0af:	fild   QWORD PTR [ebx+0x737159bb]
  40c0b5:	mov    bl,0xf9
  40c0b7:	fisub  DWORD PTR [ecx-0x2b]
  40c0ba:	fcomp  st(3)
  40c0bc:	and    esi,DWORD PTR [ebx+ebx*2+0x47f0d6e5]
  40c0c3:	xchg   ebp,eax
  40c0c4:	addr16 pop edi
  40c0c6:	jmp    0x3371:0x9603e871
  40c0cd:	mov    al,0x39
  40c0cf:	push   edx
  40c0d0:	add    BYTE PTR [ebx],ch
  40c0d2:	push   ebp
  40c0d3:	bound  ecx,QWORD PTR [ebp-0x17de1ddc]
  40c0d9:	gs dec ebp
  40c0db:	bound  eax,QWORD PTR [eax]
  40c0dd:	push   0x56
  40c0df:	pop    ebp
  40c0e0:	lea    ebp,[edx+ecx*2]
  40c0e3:	and    edi,edi
  40c0e5:	adc    al,0x4a
  40c0e7:	mov    DWORD PTR [edi+0x2],edx
  40c0ea:	arpl   WORD PTR [eax-0x78],si
  40c0ed:	and    al,0x2a
  40c0ef:	fiadd  WORD PTR [ebp+eiz*4+0x0]
	...
  40c103:	add    BYTE PTR [edx-0xd668b8f],ah
  40c109:	push   edi
  40c10a:	inc    edx
  40c10b:	test   al,0x95
  40c10d:	jno    0x40c143
  40c10f:	add    edi,DWORD PTR [ebp+0x23]
  40c112:	add    BYTE PTR [ecx-0x49],al
  40c115:	in     al,dx
  40c116:	dec    BYTE PTR [esi-0x71]
  40c119:	mov    ds:0x71ab6d0e,al
  40c11e:	(bad)  
  40c11f:	jmp    0x6b08e740
  40c124:	rcr    DWORD PTR [esi-0x1c5e2201],0xff
  40c12b:	call   0xedb532c5
  40c130:	std    
  40c131:	fs dec ecx
  40c133:	jmp    0x6b2054cd
  40c138:	fisub  DWORD PTR [edx-0x77]
  40c13b:	lods   al,BYTE PTR ds:[esi]
  40c13c:	and    eax,0x1aed7470
  40c141:	es mov ah,0xf6
  40c144:	pop    eax
  40c145:	sahf   
  40c146:	mov    fs,WORD PTR [ebp+edx*8+0x12b1746f]
  40c14d:	les    esp,FWORD PTR es:[esi-0x17005170]
  40c154:	xchg   ebp,eax
  40c155:	bound  eax,QWORD PTR [ebx+0x4148de0c]
  40c15b:	add    BYTE PTR [edi+0x42507464],ch
  40c161:	xor    BYTE PTR [eax+0x6a655550],bh
	...
  40c177:	add    BYTE PTR [eax],al
  40c179:	add    BYTE PTR [ebp+0x66],dl
  40c17c:	lea    eax,[ebp+0x3f]
  40c17f:	xor    eax,0x3102006a
  40c184:	rcl    BYTE PTR [eax+0x20],0x81
  40c188:	cli    
  40c189:	sub    BYTE PTR [esi+0x7bc00b66],ch
  40c18f:	push   edx
  40c190:	cmp    DWORD PTR [ebp-0x4d],0x63
  40c194:	je     0x40c1c2
  40c196:	cld    
  40c197:	sbb    BYTE PTR [eax],dl
  40c199:	add    BYTE PTR [ebx+0x5c],ch
  40c19c:	mov    edx,DWORD PTR [ebp+0x5f]
  40c19f:	push   cs
  40c1a0:	mov    DWORD PTR [edx],0x75ff66b0
  40c1a6:	aaa    
  40c1a7:	xchg   edi,eax
  40c1a8:	jae    0x40c162
  40c1aa:	shl    BYTE PTR [eax],1
  40c1ac:	mov    esp,0x6867faff
  40c1b1:	add    edi,DWORD PTR [edi]
  40c1b3:	xchg   DWORD PTR [eax+ebp*8-0x27625],edi
  40c1ba:	jo     0x40c1dc
  40c1bc:	mov    esp,0x2e65e8
  40c1c1:	add    BYTE PTR [eax+0x53e8c820],dh
  40c1c7:	sbb    eax,0x2090ffff
  40c1cc:	shr    al,1
  40c1ce:	dec    ebx
  40c1cf:	sbb    eax,0x9d11ffff
  40c1d4:	ror    BYTE PTR [edi+edi*8],0x40
  40c1d8:	mov    ebp,esp
  40c1da:	ins    BYTE PTR es:[edi],dx
  40c1db:	scas   eax,DWORD PTR es:[edi]
  40c1dc:	(bad)  
  40c1dd:	lea    eax,[eax]
	...
  40c1ef:	add    BYTE PTR [edx-0x1c97b16e],ch
  40c1f5:	and    eax,0x23960041
  40c1fa:	or     DWORD PTR [edx-0x6a],ebp
  40c1fd:	and    DWORD PTR [eax-0x2586a8c0],esi
  40c203:	mov    ebp,0x8502795e
  40c208:	(bad)  
  40c209:	mov    BYTE PTR [edx-0x41],bh
  40c20c:	xchg   esi,eax
  40c20d:	jns    0x40c211
  40c20f:	mov    eax,DWORD PTR [ebx-0x3b]
  40c212:	jle    0x40c225
  40c214:	and    eax,DWORD PTR [esi-0x34]
  40c217:	dec    edi
  40c218:	mov    DWORD PTR [esi-0x30],ecx
  40c21b:	(bad)  
  40c21c:	in     al,0x7d
  40c21e:	xchg   DWORD PTR [edi-0x8e0e77],edi
  40c224:	jno    0x40c29f
  40c226:	test   DWORD PTR [esi+ebp*2+0x79],edi
  40c22a:	add    DWORD PTR [edx+ecx*1+0x51000279],eax
  40c231:	mov    esi,0x7951ffb6
  40c236:	add    al,bh
  40c238:	shl    DWORD PTR [ecx],cl
  40c23a:	add    al,0x0
  40c23c:	xchg   esi,eax
  40c23d:	jns    0x40c208
  40c23f:	inc    esp
  40c240:	push   cx
  40c242:	add    al,0x0
  40c244:	xchg   esi,eax
  40c245:	dec    eax
  40c246:	dec    ecx
  40c247:	int3   
  40c248:	xchg   esi,eax
  40c249:	jns    0x40c24d
  40c24b:	add    BYTE PTR ds:0x848acad6,cl
  40c251:	test   BYTE PTR [eax-0x34],0x0
	...
  40c265:	add    BYTE PTR [esi-0x2],ah
  40c268:	dec    eax
  40c269:	shl    BYTE PTR [esi-0x1d],1
  40c26c:	add    edi,edi
  40c26e:	mov    edx,DWORD PTR [ecx-0x2d]
  40c271:	push   ecx
  40c272:	mov    dh,BYTE PTR [edx+eax*8+0x74]
  40c276:	dec    edx
  40c277:	cld    
  40c278:	push   eax
  40c279:	int3   
  40c27a:	xchg   edi,eax
  40c27b:	out    dx,al
  40c27c:	inc    eax
  40c27d:	and    DWORD PTR [ebx+0x55],0x4
  40c281:	je     0x40c2d3
  40c283:	bound  edx,QWORD PTR [ecx+0x0]
  40c286:	push   esp
  40c287:	and    ecx,ebp
  40c289:	rol    BYTE PTR [edx-0x6a],cl
  40c28c:	ror    al,0x59
  40c28f:	(bad)  
  40c290:	jmp    0xf336bc93
  40c295:	imul   ebx,ecx,0x1f03e961
  40c29b:	and    eax,0xa798dea1
  40c2a0:	and    edi,DWORD PTR [ecx+ebx*4-0x6efc1792]
  40c2a7:	clc    
  40c2a8:	mov    al,0xd2
  40c2aa:	add    dl,BYTE PTR [edi+0x7a8e5895]
  40c2b0:	xchg   al,dl
  40c2b2:	js     0x40c322
  40c2b4:	test   DWORD PTR [eax+0x4a],ebx
  40c2b7:	jnp    0x40c28f
  40c2b9:	cmp    edx,DWORD PTR [esi+0x3e506a62]
  40c2bf:	arpl   bp,si
  40c2c1:	sti    
  40c2c2:	pop    eax
  40c2c3:	clc    
  40c2c4:	inc    eax
  40c2c5:	fistp  DWORD PTR [ecx+0x3e91a]
	...
  40c2db:	add    BYTE PTR ds:0x3e3861df,bh
  40c2e1:	(bad)  
  40c2e3:	rol    dl,cl
  40c2e5:	push   0x45
  40c2e7:	xor    eax,0xcf93d99e
  40c2ec:	sbb    al,0x51
  40c2ee:	ss pop eax
  40c2f0:	and    ch,BYTE PTR [esi-0x66]
  40c2f3:	sti    
  40c2f4:	dec    esi
  40c2f5:	mov    eax,ds:0xd96b03ec
  40c2fa:	or     al,0x86
  40c2fc:	aad    0x82
  40c2fe:	mov    esi,0xab12c286
  40c303:	inc    esp
  40c304:	xchg   esi,eax
  40c305:	bound  edi,QWORD PTR [ecx+esi*8-0x28]
  40c309:	addr16 cdq 
  40c30b:	inc    ebp
  40c30c:	push   edi
  40c30d:	bound  eax,QWORD PTR [eax]
  40c30f:	call   0x2f4125a9
  40c314:	mov    eax,ds:0xf2e94120
  40c319:	fs data16 test al,0x7c
  40c31d:	pusha  
  40c31e:	sub    DWORD PTR [edi+0xf830498],0xffffff92
  40c325:	div    edx
  40c327:	push   0xffffffa1
  40c329:	fisubr WORD PTR ds:0xf629228
  40c32f:	ins    DWORD PTR es:[edi],dx
  40c330:	shr    DWORD PTR [ebp-0x2],cl
  40c333:	jmp    0xd7c8f24a
  40c338:	aam    0x62
  40c33a:	add    dh,ch
  40c33c:	adc    DWORD PTR [edi-0x1],edi
  40c33f:	call   0x40c344
	...
  40c350:	add    BYTE PTR [eax],al
  40c352:	xchg   ebp,eax
  40c353:	loope  0x40c391
  40c355:	lea    ebx,[edx-0x6916ffdd]
  40c35b:	out    0xe0,al
  40c35d:	jmp    0x2d0825f7
  40c362:	inc    esi
  40c363:	ins    DWORD PTR es:[edi],dx
  40c364:	(bad)  
  40c365:	jmp    0x618568ff
  40c36a:	call   0xfc26:0xc8e90062
  40c371:	mov    ecx,0xb9f826c0
  40c376:	(bad)  [edx+0x68]
  40c379:	fsub   DWORD PTR [bp+di]
  40c37c:	add    BYTE PTR [esi],bh
  40c37e:	and    ebp,esp
  40c380:	sub    eax,0xc05995a8
  40c385:	ficom  WORD PTR [ecx]
  40c387:	mov    bh,0xff
  40c389:	call   0x21bda523
  40c38e:	xchg   edx,eax
  40c38f:	pop    ebp
  40c390:	test   BYTE PTR [ebp-0x66],al
  40c393:	bound  eax,QWORD PTR [eax]
  40c395:	push   0x49
  40c397:	outs   dx,BYTE PTR ds:[esi]
  40c398:	(bad)  
  40c399:	(bad)  
  40c39a:	call   0xff416483
  40c39f:	pusha  
  40c3a0:	mov    esi,DWORD PTR [ebp-0x15]
  40c3a3:	xchg   DWORD PTR [eax+0x5660ef00],eax
  40c3a9:	mov    esi,DWORD PTR [ecx+0x38187493]
  40c3af:	and    al,0xf0
  40c3b1:	jmp    DWORD PTR [ecx+0x72]
  40c3b4:	lea    eax,[ebp+0x0]
	...
  40c3c7:	add    bl,ah
  40c3c9:	or     BYTE PTR [edx+eax*2+0x7e],dl
  40c3cd:	callw  0x35a8
  40c3d1:	data16 add cl,dl
  40c3d4:	iret   
  40c3d5:	in     eax,0xbe
  40c3d7:	add    dh,BYTE PTR [esi]
  40c3d9:	and    al,0xe0
  40c3db:	push   0x4124d3
  40c3e0:	clc    
  40c3e1:	and    al,0xe4
  40c3e3:	(bad)  
  40c3e4:	mov    dl,0x82
  40c3e6:	(bad)  
  40c3e7:	jmp    FWORD PTR [edi+0x60]
  40c3ea:	lea    eax,[ebp+0x7]
  40c3ed:	xor    BYTE PTR [edx+0x1],ch
  40c3f0:	test   DWORD PTR [esi+0x6a],esp
  40c3f3:	add    dl,bh
  40c3f5:	and    al,0xe0
  40c3f7:	push   eax
  40c3f8:	xchg   ebp,eax
  40c3f9:	lea    ax,[ebp-0x11]
  40c3fd:	das    
  40c3fe:	call   DWORD PTR ds:0x4147eb
  40c404:	xor    al,0xa0
  40c406:	jb     0x40c435
  40c408:	lods   al,BYTE PTR ds:[esi]
  40c409:	sbb    al,0xec
  40c40b:	add    bl,dh
  40c40d:	cmp    bh,BYTE PTR [eax+0x603f01]
  40c413:	or     ebp,DWORD PTR [edi+0x13]
  40c416:	push   ss
  40c417:	jmp    edx
  40c419:	addr16 std 
  40c41b:	jne    0x40c3c4
  40c41d:	xchg   edx,eax
  40c41e:	jae    0x40c40c
  40c420:	test   al,0x9
  40c422:	or     BYTE PTR [eax-0x6a],ch
  40c425:	jge    0x40c429
  40c427:	out    dx,eax
  40c428:	cmp    BYTE PTR [edx-0x5],ah
  40c42b:	clc    
	...
  40c43c:	add    BYTE PTR [eax],al
  40c43e:	icebp  
  40c43f:	shl    BYTE PTR fs:[edx+edi*8+0x51],1
  40c444:	xchg   esi,eax
  40c445:	inc    esp
  40c446:	xchg   esi,eax
  40c447:	jns    0x40c479
  40c449:	dec    DWORD PTR [ebx+0x71]
  40c44c:	add    ch,0x9a
  40c44f:	clc    
  40c450:	push   eax
  40c451:	clc    
  40c452:	xchg   esi,eax
  40c453:	adc    eax,0x798082fd
  40c458:	std    
  40c459:	test   BYTE PTR [ecx],ch
  40c45b:	pushf  
  40c45c:	into   
  40c45d:	(bad)  
  40c45e:	mov    cl,0x2e
  40c460:	sar    dh,1
  40c462:	cmp    ebp,0x1d
  40c465:	inc    ecx
  40c466:	xchg   esi,eax
  40c467:	push   ebx
  40c468:	mov    ebp,0x377992c1
  40c46d:	mov    eax,DWORD PTR [edx-0x3083808]
  40c473:	jns    0x40c4cd
  40c475:	das    
  40c476:	or     DWORD PTR [esi-0x4],0xcf4a37e7
  40c47d:	(bad)  
  40c47e:	pop    ds
  40c47f:	sar    BYTE PTR ds:[edi-0x55],1
  40c483:	enter  0x4144,0x96
  40c487:	jns    0x40c4e0
  40c489:	sub    esi,ebp
  40c48b:	rol    DWORD PTR [ecx+eax*2-0x6a],1
  40c48f:	xchg   ecx,eax
  40c490:	jae    0x40c4d2
  40c492:	xlat   BYTE PTR ds:[ebx]
  40c493:	jns    0x40c46f
  40c495:	in     al,0xc0
  40c497:	adc    al,0xcf
  40c499:	test   BYTE PTR [esi-0x6b],dl
  40c49c:	sub    ebp,DWORD PTR [eax+0x4a]
  40c49f:	mov    edx,0x43
	...
  40c4b4:	mov    esi,0x964144e8
  40c4b9:	and    DWORD PTR [edx-0x39c3e683],esi
  40c4bf:	add    al,0xe5
  40c4c1:	popa   
  40c4c2:	test   al,0x44
  40c4c4:	xchg   esi,eax
  40c4c5:	popa   
  40c4c6:	push   0x11
  40c4c8:	fisub  WORD PTR [eax]
  40c4ca:	test   al,0x3
  40c4cc:	xchg   esi,eax
  40c4cd:	not    dl
  40c4cf:	(bad)  
  40c4d0:	pop    edx
  40c4d1:	push   0xffffffe8
  40c4d3:	add    edx,DWORD PTR [esi+0x51c3d262]
  40c4d9:	adc    bl,BYTE PTR [ecx-0x6595bd80]
  40c4df:	into   
  40c4e0:	stos   BYTE PTR es:[edi],al
  40c4e1:	mov    ah,BYTE PTR [edi]
  40c4e3:	inc    ebp
  40c4e4:	xchg   esi,eax
  40c4e5:	in     eax,0xa8
  40c4e7:	dec    esp
  40c4e8:	xchg   esp,eax
  40c4e9:	ja     0x40c4e1
  40c4eb:	cmp    BYTE PTR [edx],0x6a
  40c4ee:	call   0xdeb8594b
  40c4f3:	into   
  40c4f4:	and    ch,BYTE PTR [edx-0x43]
  40c4f7:	pop    eax
  40c4f8:	mov    ?,WORD PTR [edx+0x3a]
  40c4fb:	retf   
  40c4fc:	cwde   
  40c4fd:	push   0x61
  40c4ff:	cmp    BYTE PTR [esi+0x2cefade],cl
  40c505:	imul   ebx,DWORD PTR [ebp+0x1b698e31],0xfffffffc
  40c50c:	jno    0x40c52b
  40c50e:	mov    esi,cs
  40c510:	jo     0x40c57c
  40c512:	sti    
  40c513:	sti    
  40c514:	jno    0x40c554
  40c516:	jg     0x40c4e6
	...
  40c528:	add    BYTE PTR [eax],al
  40c52a:	pusha  
  40c52b:	push   0xfffffffb
  40c52d:	iret   
  40c52e:	pop    eax
  40c52f:	lock loopne 0x40c50d
  40c532:	in     eax,0xf3
  40c534:	gs into 
  40c536:	pop    esi
  40c537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c538:	in     al,0x3
  40c53a:	jmp    0x40c519
  40c53c:	inc    esp
  40c53d:	adc    BYTE PTR [ebp+0x73],0xb6
  40c541:	(bad)
  40c545:	call   DWORD PTR [eax+0x65]
  40c548:	jmp    0xa35b50
  40c54d:	ss mov esi,0x596de85a
  40c553:	bound  eax,QWORD PTR [eax]
  40c555:	push   0xffffffdd
  40c557:	bound  esi,QWORD PTR [edi-0x10]
  40c55a:	pushf  
  40c55b:	mov    ds:0x9babb65a,al
  40c560:	shl    ecx,0x95
  40c563:	xchg   ebx,eax
  40c564:	out    0x72,eax
  40c566:	scas   al,BYTE PTR es:[edi]
  40c567:	push   esi
  40c568:	mov    ebx,ebp
  40c56a:	pop    esp
  40c56b:	xchg   ecx,eax
  40c56c:	push   cs
  40c56d:	imul   ebp,DWORD PTR [edi],0x6a
  40c570:	(bad)  
  40c571:	jmp    0x7248b3c2
  40c576:	pop    ecx
  40c577:	pop    edx
  40c578:	jmp    0x40c5bd
  40c57a:	cmp    ch,bl
  40c57c:	add    eax,0x7239e669
  40c581:	jecxz  0x40c598
  40c583:	outs   dx,BYTE PTR ds:[esi]
  40c584:	cmp    BYTE PTR [esi],bh
  40c586:	xchg   ecx,eax
  40c587:	loop   0x40c574
  40c589:	stc    
  40c58a:	mov    esi,0xb5804c
	...
  40c59f:	add    BYTE PTR [ebp-0xc],dl
  40c5a2:	or     al,0x69
  40c5a4:	popw   ds
  40c5a6:	ja     0x40c599
  40c5a8:	adc    eax,0x4e69407d
  40c5ad:	pop    ebx
  40c5ae:	jmp    0x40c590
  40c5b0:	sahf   
  40c5b1:	mov    ds:0x9bc02e5a,al
  40c5b6:	shl    ecx,0x95
  40c5b9:	es xor bl,bh
  40c5bc:	pop    ebp
  40c5bd:	sub    eax,0x3691fe39
  40c5c2:	xor    BYTE PTR [edx-0x24bed2b5],al
  40c5c8:	dec    edi
  40c5c9:	sub    eax,0x369bd646
  40c5ce:	inc    ecx
  40c5cf:	in     eax,dx
  40c5d0:	aas    
  40c5d1:	jl     0x40c5db
  40c5d3:	add    bl,BYTE PTR [edx+0xc]
  40c5d6:	pop    edi
  40c5d7:	add    cl,dh
  40c5d9:	stos   DWORD PTR es:[edi],eax
  40c5da:	ror    BYTE PTR [eax],0x2f
  40c5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5de:	fiadd  WORD PTR [esi*1+0x7c4ba8a1]
  40c5e5:	mov    al,ds:0x11540b00
  40c5ea:	mov    ds:0xfd693a8b,al
  40c5ef:	xor    BYTE PTR [eax+0x21],dh
  40c5f2:	clc    
  40c5f3:	dec    DWORD PTR [edx]
  40c5f5:	ins    DWORD PTR es:[edi],dx
  40c5f6:	lea    eax,[ebp-0x6d]
  40c5f9:	lahf   
  40c5fa:	inc    ebx
  40c5fb:	hlt    
  40c5fc:	out    dx,eax
  40c5fd:	add    BYTE PTR fs:[eax],al
  40c600:	ins    BYTE PTR es:[edi],dx
  40c601:	pop    ecx
  40c602:	cld    
  40c603:	sub    BYTE PTR [eax],al
	...
  40c615:	add    dh,bh
  40c617:	add    BYTE PTR fs:[ecx+ecx*4-0x17],dh
  40c61c:	inc    ebx
  40c61d:	lock jg 0x40c62c
  40c620:	add    DWORD PTR [edx-0x51],ebp
  40c623:	or     al,BYTE PTR [eax]
  40c625:	push   0xffffffbf
  40c627:	or     al,BYTE PTR [eax]
  40c629:	lea    edi,[edx-0x6a]
  40c62c:	dec    esi
  40c62d:	dec    edx
  40c62f:	cwde   
  40c630:	es inc ecx
  40c632:	scas   eax,DWORD PTR es:[edi]
  40c633:	imul   edi,DWORD PTR [esi+0x7be38574],0x34107ff4
  40c63d:	mov    edi,DWORD PTR [edx+0x1f4d8b62]
  40c643:	pop    ebx
  40c644:	or     BYTE PTR [edi+0x55],dh
  40c647:	cwde   
  40c648:	mov    DWORD PTR [ebp-0x15],esi
  40c64b:	jmp    0xe3f0:0x28e4087b
  40c652:	ins    DWORD PTR es:[edi],dx
  40c653:	xchg   ebx,eax
  40c654:	mov    ds:0xff627a8b,al
  40c659:	jne    0x40c64a
  40c65b:	out    0xfe,al
  40c65d:	(bad)  
  40c65e:	push   0xffffff90
  40c660:	out    0xe3,al
  40c662:	xchg   esi,eax
  40c663:	mov    esp,0x7aee0002
  40c668:	add    al,BYTE PTR [eax]
  40c66a:	xchg   esi,eax
  40c66b:	les    ebp,FWORD PTR [ebx]
  40c66d:	pop    esi
  40c66e:	dec    edi
  40c66f:	cmp    al,0xfb
  40c671:	jmp    FWORD PTR [ecx+edi*1+0x28]
  40c675:	pop    edi
  40c676:	jo     0x40c6ba
  40c678:	rol    DWORD PTR [edi],0x0
	...
  40c68b:	add    BYTE PTR [esi+0x15eb77a6],dl
  40c691:	ds ret 
  40c693:	addr16 xchg esi,eax
  40c695:	cdq    
  40c696:	add    al,BYTE PTR [eax]
  40c698:	(bad)  
  40c699:	sbb    BYTE PTR [ecx-0x1],dl
  40c69c:	jmp    0x6f3d0c93
  40c6a1:	jns    0x40c6c5
  40c6a3:	add    BYTE PTR [esi-0x2e8e6e9f],dl
  40c6a9:	js     0x40c723
  40c6ab:	inc    esp
  40c6ac:	into   
  40c6ad:	adc    DWORD PTR [eax+eiz*1],eax
  40c6b0:	xchg   esi,eax
  40c6b1:	jns    0x40c68d
  40c6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b4:	inc    esp
  40c6b5:	nop
  40c6b6:	retf   0x5b88
  40c6b9:	lea    ebx,[ebx+0x0]
  40c6bc:	jbe    0x40c737
  40c6be:	add    ch,al
  40c6c0:	(bad)  
  40c6c1:	sub    ecx,ebx
  40c6c3:	dec    BYTE PTR [edi]
  40c6c5:	aaa    
  40c6c6:	aam    0x67
  40c6c8:	xchg   esi,eax
  40c6c9:	pop    ecx
  40c6ca:	add    al,0x0
  40c6cc:	jle    0x40c6c2
  40c6ce:	push   ebp
  40c6cf:	inc    DWORD PTR [ecx-0x1113bf0e]
  40c6d5:	jns    0x40c6f9
  40c6d7:	add    BYTE PTR [esi+0x697249e1],dl
  40c6dd:	loopne 0x40c75b
  40c6df:	inc    esp
  40c6e0:	outs   dx,BYTE PTR ds:[esi]
  40c6e1:	push   ecx
  40c6e2:	add    al,0x20
  40c6e4:	xchg   esi,eax
  40c6e5:	jns    0x40c6c1
  40c6e7:	jo     0x40c6ad
  40c6e9:	clc    
  40c6ea:	retf   0xd388
  40c6ed:	bound  ecx,QWORD PTR [ebp-0x35]
	...
  40c700:	add    BYTE PTR [eax],al
  40c702:	retf   0xd152
  40c705:	scas   al,BYTE PTR es:[edi]
  40c706:	xlat   BYTE PTR ds:[ebx]
  40c707:	and    ecx,ebp
  40c709:	retf   0x66aa
  40c70c:	inc    eax
  40c70d:	jnp    0x40c6e4
  40c70f:	(bad)  
  40c710:	jmp    0x3e971c9b
  40c715:	push   ecx
  40c716:	xchg   dl,bh
  40c718:	inc    esi
  40c719:	inc    esi
  40c71a:	push   edi
  40c71b:	bound  ebp,QWORD PTR [esi]
  40c71d:	push   ecx
  40c71e:	push   cs
  40c71f:	jp     0x40c6c5
  40c721:	aas    
  40c722:	xchg   esi,eax
  40c723:	bound  ebp,QWORD PTR [edx-0x40]
  40c726:	lea    esp,[edi-0x65]
  40c729:	repz jns 0x40c78f
  40c72c:	stos   BYTE PTR es:[edi],al
  40c72d:	inc    esp
  40c72e:	xchg   esi,eax
  40c72f:	addr16 jnp 0x40c701
  40c732:	stc    
  40c733:	clc    
  40c734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c735:	add    edx,DWORD PTR [esi-0x2f07d31d]
  40c73b:	in     al,dx
  40c73c:	fcomp  DWORD PTR [ebx+0x74]
  40c73f:	and    ebp,DWORD PTR [eax]
  40c741:	add    al,0xc1
  40c743:	in     al,dx
  40c744:	fcomp  st(3)
  40c746:	arpl   WORD PTR [esi],bx
  40c748:	jmp    0xdcdedc50
  40c74d:	retf   0x5222
  40c750:	push   ecx
  40c751:	adc    DWORD PTR [ebp+0x21],edx
  40c754:	jmp    0xc0b6ea23
  40c759:	inc    esi
  40c75a:	fisub  DWORD PTR [edx-0x17]
  40c75d:	xchg   BYTE PTR [ebp+0x57],dl
  40c760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c761:	push   eax
  40c762:	xchg   edx,eax
  40c763:	cli    
  40c764:	xor    DWORD PTR [edi+0x0],eax
	...
  40c777:	add    bh,dl
  40c779:	bound  edx,QWORD PTR [esi-0x278481b0]
  40c77f:	aas    
  40c780:	xchg   esi,eax
  40c781:	bound  ebp,QWORD PTR [edx-0x41]
  40c784:	lea    esp,[ebp-0xd]
  40c787:	repz icebp 
  40c789:	or     eax,0x62db2a00
  40c78e:	push   esp
  40c790:	imul   edi,DWORD PTR [esi+0x1c],0x836295ad
  40c797:	and    eax,0x55fffc41
  40c79c:	(bad)  
  40c79d:	data16 (bad) 
  40c79f:	aam    0x21
  40c7a1:	gs xor al,0xe3
  40c7a4:	and    BYTE PTR [ebx],0x0
  40c7a7:	push   ecx
  40c7a8:	in     al,0xf1
  40c7aa:	(bad)  
  40c7ab:	ss xchg edx,eax
  40c7ad:	push   ds
  40c7ae:	loopne 0x40c773
  40c7b0:	xchg   ebp,eax
  40c7b1:	gs je  0x40c7d5
  40c7b4:	int3   
  40c7b5:	out    dx,al
  40c7b6:	or     ebx,DWORD PTR [esi]
  40c7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b9:	dec    eax
  40c7ba:	sub    DWORD PTR [eax-0x6a3f856b],ebp
  40c7c0:	fsub   QWORD PTR [eax+ecx*4-0x54]
  40c7c4:	cmp    esp,edi
  40c7c6:	(bad)  
  40c7c7:	std    
  40c7c8:	dec    ecx
  40c7c9:	outs   dx,BYTE PTR ds:[esi]
  40c7ca:	(bad)  
  40c7cb:	jl     0x40c796
  40c7cd:	fs xor al,0xd3
  40c7d0:	stos   BYTE PTR es:[edi],al
  40c7d1:	and    eax,DWORD PTR [eax]
  40c7d3:	shl    DWORD PTR [ebx],1
  40c7d5:	repnz (bad) 
  40c7d7:	fidivr WORD PTR ds:0x43d81e
	...
  40c7ed:	add    BYTE PTR [edx-0x20268b9b],bl
  40c7f3:	out    dx,al
  40c7f4:	out    0xc6,eax
  40c7f6:	xchg   ecx,eax
  40c7f7:	dec    eax
  40c7f8:	sub    DWORD PTR [eax],ebp
  40c7fa:	xchg   edx,eax
  40c7fb:	jp     0x40c791
  40c7fd:	cmp    eax,0x2488645f
  40c802:	inc    esi
  40c803:	sti    
  40c804:	jmp    DWORD PTR [ebp+0x14fe76d1]
  40c80a:	pop    edx
  40c80b:	fs xor al,0xf3
  40c80e:	mov    WORD PTR [ebx],fs
  40c810:	add    BYTE PTR [ecx+0xfeeedf],al
  40c816:	sbb    cl,ch
  40c818:	inc    ebx
  40c819:	shr    dl,1
  40c81b:	and    eax,0x15c850c0
  40c820:	in     al,0xff
  40c822:	inc    edx
  40c823:	ins    DWORD PTR es:[edi],dx
  40c824:	std    
  40c825:	xor    eax,0x414995
  40c82a:	out    0x3,eax
  40c82c:	je     0x40c82d
  40c82e:	enter  0x43e9,0xcc
  40c832:	mov    esp,0x2800e01d
  40c837:	in     eax,0xb5
  40c839:	add    BYTE PTR [edi],ch
  40c83b:	popa   
  40c83c:	cmp    DWORD PTR [ebp-0x4d],0x5e
  40c840:	je     0x4126d0
  40c846:	ins    BYTE PTR es:[edi],dx
  40c847:	sbb    eax,0xe4e800d0
  40c84c:	mov    eax,ds:0x8d60ff00
  40c851:	inc    ebp
	...
  40c862:	add    BYTE PTR [eax],al
  40c864:	mov    bl,0x2e
  40c866:	push   DWORD PTR [ebp-0x7d]
  40c869:	xchg   BYTE PTR [esi-0x3],cl
  40c86c:	fcomp  DWORD PTR [ecx-0x1b473ff7]
  40c872:	lea    eax,[eax]
  40c874:	mov    edi,0xf37d8360
  40c879:	pusha  
  40c87a:	je     0x4129b2
  40c880:	cmp    ah,BYTE PTR [eax+ecx*8]
  40c883:	push   eax
  40c884:	fcom   DWORD PTR [ebx]
  40c886:	shr    al,1
  40c888:	popf   
  40c889:	fwait
  40c88a:	std    
  40c88b:	jmp    DWORD PTR [eax+eiz*4+0x1cfc7572]
  40c892:	enter  0xc300,0x9
  40c896:	push   0xbc8b6f10
  40c89b:	jmp    DWORD PTR [edx-0x6989199a]
  40c8a1:	pop    esi
  40c8a2:	leave  
  40c8a3:	(bad)  
  40c8a4:	imul   ecx,DWORD PTR [edi-0x1c],0xda71ebfe
  40c8ab:	int3   
  40c8ac:	jmp    0x40c892
  40c8ae:	(bad)  
  40c8af:	dec    bl
  40c8b1:	int    0xc7
  40c8b3:	je     0x40c853
  40c8b5:	loope  0x40c87b
  40c8b7:	ins    BYTE PTR es:[edi],dx
  40c8b8:	inc    ecx
  40c8b9:	std    
  40c8ba:	(bad)  
  40c8bb:	je     0x40c91b
  40c8bd:	add    eax,0xc53e084e
  40c8c2:	push   ebp
  40c8c3:	jmp    FWORD PTR [ecx]
  40c8c5:	adc    eax,0xc44e
	...
  40c8da:	and    DWORD PTR [edi+0x71a3feae],esp
  40c8e0:	fidivr DWORD PTR [ebx+eax*4+0x2c]
  40c8e4:	enter  0x83fe,0x41
  40c8e8:	enter  0xe674,0x3c
  40c8ec:	dec    esi
  40c8ed:	or     dh,ch
  40c8ef:	aam    0x55
  40c8f1:	push   ecx
  40c8f3:	clc    
  40c8f4:	inc    ebp
  40c8f5:	int3   
  40c8f6:	xchg   esi,eax
  40c8f7:	int    0xed
  40c8f9:	and    BYTE PTR [ebx+0x39],0xff
  40c8fd:	je     0x40c888
  40c8ff:	lock cmp eax,0xc7a9d1cc
  40c905:	je     0x40c8a5
  40c907:	popa   
  40c908:	and    ebp,DWORD PTR [ebp-0x3f]
  40c90b:	jl     0x40c8e7
  40c90d:	or     DWORD PTR [ecx+edi*2],ebp
  40c910:	lds    esi,FWORD PTR [esi+ebx*4-0x5f]
  40c914:	out    dx,eax
  40c915:	ins    BYTE PTR es:[edi],dx
  40c916:	test   eax,0xa274c694
  40c91b:	xchg   ecx,eax
  40c91c:	sub    BYTE PTR [edi-0x67],0xa4
  40c920:	(bad)  
  40c921:	je     0x40c8b1
  40c923:	mov    eax,ds:0xb489704a
  40c928:	(bad)  
  40c929:	je     0x40c8b5
  40c92b:	bound  edx,QWORD PTR [ecx-0x629bf9ad]
  40c931:	(bad)  
  40c932:	jmp    0x8d63:0xe65b8072
  40c939:	(bad)  
  40c93a:	jmp    0x0:0x639076
	...
  40c94d:	add    BYTE PTR [eax],al
  40c94f:	add    dh,ah
  40c951:	arpl   WORD PTR [ebp-0x39],di
  40c954:	retf   0x807a
  40c957:	sub    eax,esi
  40c959:	arpl   WORD PTR [ebp-0x39],bp
  40c95c:	retf   0x507e
  40c95f:	xor    eax,esi
  40c961:	arpl   WORD PTR [ebp-0x39],bx
  40c964:	stos   BYTE PTR es:[edi],al
  40c965:	add    BYTE PTR [eax+0x3b],0xa6
  40c969:	arpl   WORD PTR [ebp-0x39],cx
  40c96c:	stos   BYTE PTR es:[edi],al
  40c96d:	xchg   BYTE PTR [eax+0x43],dl
  40c970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c971:	arpl   WORD PTR ds:0x408a8ac7,di
  40c977:	or     eax,DWORD PTR [esi-0x7538d29d]
  40c97d:	mov    ss,WORD PTR [eax]
  40c97f:	adc    eax,DWORD PTR [esi+0x6ac71d63]
  40c985:	xchg   edx,eax
  40c986:	add    BYTE PTR [ebx],bl
  40c988:	data16 arpl WORD PTR ds:0x10966ac7,cx
  40c98f:	and    esp,DWORD PTR [esi+0x63]
  40c992:	std    
  40c993:	mov    esp,0x30e955d7
  40c998:	sbb    eax,0xb9c06776
  40c99d:	push   0xffffffe5
  40c99f:	(bad)  
  40c9a0:	or     bl,BYTE PTR ds:0xecb133dd
  40c9a6:	in     al,0xc6
  40c9a8:	bound  ecx,QWORD PTR [eax+0x0]
  40c9ab:	inc    ebp
  40c9ac:	xchg   esi,eax
  40c9ad:	jp     0x40c9fb
  40c9af:	inc    edx
  40c9b0:	xchg   esi,eax
  40c9b1:	(bad)  
  40c9b3:	ret    
	...
  40c9c4:	add    BYTE PTR [eax],al
  40c9c6:	mov    al,ds:0x92dd00e7
  40c9cb:	bound  eax,QWORD PTR [eax]
  40c9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ce:	(bad)  
  40c9cf:	pop    edx
  40c9d0:	add    ecx,ebp
  40c9d2:	xchg   ebp,eax
  40c9d3:	(bad)  
  40c9d4:	lds    esp,FWORD PTR [esi+eax*2]
  40c9d7:	popa   
  40c9d8:	push   es
  40c9d9:	jmp    0x3419673
  40c9de:	call   0x43ef:0x921300cc
  40c9e5:	jne    0x40c96c
  40c9e7:	out    dx,eax
  40c9e8:	cmp    DWORD PTR [ecx+0x58],0x61
  40c9ec:	(bad)  
  40c9ed:	sbb    DWORD PTR [ecx-0x29],ebx
  40c9f0:	clc    
  40c9f1:	data16 out 0x5e,al
  40c9f4:	jmp    0xa39e10
  40c9f9:	loop   0x40ca50
  40c9fb:	(bad)  
  40c9fc:	add    eax,DWORD PTR [eax-0x10]
  40c9ff:	popa   
  40ca00:	(bad)  
  40ca01:	jmp    0xa869b7c3
  40ca06:	xchg   ebp,eax
  40ca07:	popa   
  40ca08:	je     0x40c9ef
  40ca0a:	in     eax,dx
  40ca0b:	mov    edx,0xb1d82e71
  40ca10:	mov    DWORD PTR [ecx],edi
  40ca12:	jle    0x40c9fa
  40ca14:	lock push ss
  40ca16:	fsub   DWORD PTR [eax+0x51]
  40ca19:	mov    ebx,0xe71aacd
  40ca1e:	fsubr  st,st(2)
  40ca20:	adc    DWORD PTR [ecx],0xffffffc8
  40ca23:	pusha  
  40ca24:	(bad)  
  40ca25:	adc    DWORD PTR [eax],edi
  40ca27:	sar    ch,1
  40ca29:	test   BYTE PTR [eax],0x0
	...
  40ca3c:	inc    ecx
  40ca3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3e:	lock cdq 
  40ca40:	pop    ebp
  40ca41:	xor    DWORD PTR [ebx+0x28],eax
  40ca44:	xchg   edx,eax
  40ca45:	popa   
  40ca46:	mov    ah,0xd1
  40ca48:	jecxz  0x40caaa
  40ca4a:	(bad)  
  40ca4b:	(bad)  
  40ca4c:	cdq    
  40ca4d:	jl     0x40ca76
  40ca4f:	sub    BYTE PTR [edx+0x5d009c4a],bl
  40ca55:	daa    
  40ca56:	dec    DWORD PTR [ecx-0x8c506]
  40ca5c:	inc    eax
  40ca5d:	jecxz  0x40ca1b
  40ca5f:	in     al,dx
  40ca60:	dec    eax
  40ca61:	daa    
  40ca62:	inc    DWORD PTR [eax]
  40ca64:	fwait
  40ca65:	mov    WORD PTR [ecx+0x73620f7d],es
  40ca6b:	dec    ecx
  40ca6c:	hlt    
  40ca6d:	loope  0x40ca58
  40ca6f:	not    DWORD PTR [eax]
  40ca71:	daa    
  40ca72:	push   DWORD PTR [eax]
  40ca74:	loopne 0x40ca57
  40ca76:	jmp    0x81689b72
  40ca7b:	mov    ebp,0xffff2f13
  40ca80:	pop    ss
  40ca81:	arpl   WORD PTR [eax],ax
  40ca83:	add    BYTE PTR [ecx+0x5b],bl
  40ca86:	mov    DWORD PTR [ebp-0xd01d],0x63d7
  40ca90:	aam    0x4c
  40ca92:	dec    DWORD PTR [ebp-0xd03d]
  40ca98:	shl    cl,1
  40ca9a:	jmp    0xff688b96
  40ca9f:	mov    ch,0x0
	...
  40cab1:	add    BYTE PTR [edi+0x2f],dl
  40cab4:	(bad)  
  40cab5:	push   DWORD PTR [eax+0x37e808b1]
  40cabb:	sub    edi,edi
  40cabd:	(bad)  
  40cabe:	jl     0x40caa9
  40cac0:	jmp    0xfe685bbc
  40cac5:	je     0x40ca79
  40cac7:	daa    
  40cac8:	mov    ch,0xec
  40caca:	enter  0xff25,0xe8
  40cace:	jecxz  0x40ca85
  40cad0:	std    
  40cad1:	push   DWORD PTR [eax-0x4f081611]
  40cad7:	and    eax,0x276011e6
  40cadc:	(bad)  
  40cadd:	call   DWORD PTR [esi-0x5e092602]
  40cae3:	das    
  40cae4:	lds    esi,FWORD PTR [esi+ecx*4+0x33]
  40cae8:	fdivp  st(5),st
  40caea:	xchg   ecx,eax
  40caeb:	and    ebp,eax
  40caed:	mov    ah,0x7e
  40caef:	and    ebp,eax
  40caf1:	(bad)  
  40caf2:	outs   dx,BYTE PTR ds:[esi]
  40caf3:	adc    dl,BYTE PTR [edi+edi*8+0x79]
  40caf7:	or     DWORD PTR [edi],edi
  40caf9:	clc    
  40cafa:	jg     0x40cb01
  40cafc:	(bad)  
  40cafd:	(bad)  
  40cafe:	imul   edi,ecx,0x8c6efc4e
  40cb04:	inc    ecx
  40cb05:	add    BYTE PTR [esi-0x69f83fee],dl
  40cb0b:	jbe    0x40cb84
  40cb0d:	jmp    0x40cb24
  40cb0f:	push   cs
  40cb10:	(bad)  
  40cb11:	imul   edx,DWORD PTR [esi+0xff1463],0x0
	...
  40cb27:	add    bl,al
  40cb29:	push   ecx
  40cb2a:	fimul  DWORD PTR [ecx]
  40cb2c:	ret    0xc4c0
  40cb2f:	mov    bl,dl
  40cb31:	mov    ch,0x59
  40cb33:	mov    ecx,0xff020ad4
  40cb38:	mov    ds:0x10a2da51,eax
  40cb3d:	mov    eax,ds:0x9583fec4
  40cb42:	les    esi,FWORD PTR [esi+ecx*4-0x5f]
  40cb46:	push   cs
  40cb47:	ins    BYTE PTR es:[edi],dx
  40cb48:	stc    
  40cb49:	mov    BYTE PTR [edx+0x2f499ac1],bh
  40cb4f:	mov    edi,edx
  40cb51:	int3   
  40cb52:	mov    ebp,0x581848fb
  40cb57:	add    BYTE PTR [edx+ebx*1-0x3b],ch
  40cb5b:	je     0x40cafb
  40cb5d:	jno    0x40cb0b
  40cb5f:	push   0xffffffc9
  40cb61:	pop    eax
  40cb62:	js     0x40cba8
  40cb64:	ret    0xec4
  40cb67:	xor    ebp,DWORD PTR [esi+0x62]
  40cb6a:	sub    BYTE PTR [ebx*1+0x56ec169e],al
  40cb71:	bound  esp,QWORD PTR [edi+0x3]
  40cb74:	xchg   esi,eax
  40cb75:	(bad)  
  40cb76:	and    al,0x2c
  40cb78:	sub    al,0xa3
  40cb7a:	sub    BYTE PTR [ecx+ebp*8],al
  40cb7d:	dec    edx
  40cb7e:	fadd   QWORD PTR [esi+edx*4+0x62]
  40cb82:	loop   0x40cb47
  40cb84:	add    eax,0xb8ac1580
  40cb89:	fisub  DWORD PTR [esi+0xc3]
	...
  40cb9b:	add    BYTE PTR [eax],al
  40cb9d:	add    cl,ah
  40cb9f:	retf   0x3e7
  40cba2:	jns    0x40cbc4
  40cba4:	add    BYTE PTR [eax],bh
  40cba6:	aad    0xa1
  40cba8:	out    0x53,eax
  40cbaa:	pop    ecx
  40cbab:	aad    0xef
  40cbad:	stos   DWORD PTR es:[edi],eax
  40cbae:	xchg   bl,dh
  40cbb0:	jle    0x40cb75
  40cbb2:	xor    DWORD PTR [ebp+0x4b40c305],edi
  40cbb8:	jmp    0xe7e0e206
  40cbbd:	cmp    BYTE PTR [eax+ebp*4],ch
  40cbc0:	pop    ebx
  40cbc1:	imul   ecx
  40cbc3:	sbb    BYTE PTR [edi-0x3d],dl
  40cbc6:	and    BYTE PTR [edi+0x5a],bl
  40cbc9:	jb     0x40cc2c
  40cbcb:	addr16 mov esp,0x3bd5107e
  40cbd1:	ret    
  40cbd2:	sub    BYTE PTR [edx+0x3f],0x7d
  40cbd6:	ins    BYTE PTR es:[edi],dx
  40cbd7:	pop    edi
  40cbd8:	das    
  40cbd9:	arpl   WORD PTR [eax+0x29],bx
  40cbdc:	sub    cl,BYTE PTR [eax]
  40cbde:	xchg   esi,eax
  40cbdf:	mov    ch,0x72
  40cbe1:	mov    al,0x14
  40cbe3:	adc    BYTE PTR es:[edi-0x27],dl
  40cbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe8:	(bad)  
  40cbea:	xchg   esi,eax
  40cbeb:	(bad)  
  40cbec:	out    0xca,eax
  40cbee:	pop    edx
  40cbef:	pop    esi
  40cbf0:	call   0xa361f8
  40cbf5:	bound  ecx,QWORD PTR [edi+0x6e]
  40cbf8:	xor    DWORD PTR [ecx+0x1207d595],0x42d28bda
	...
  40cc12:	add    BYTE PTR [eax],al
  40cc14:	(bad)  [eax]
  40cc16:	or     eax,0x6220e9
  40cc1b:	jmp    0x6aa117b5
  40cc20:	(bad)  
  40cc21:	jb     0x40cc23
  40cc23:	xor    eax,0xd943e99f
  40cc28:	adc    dh,BYTE PTR [esi-0x3]
  40cc2b:	xor    al,0xa6
  40cc2d:	pop    ebp
  40cc2e:	je     0x40cc21
  40cc30:	cmp    eax,0x549e692d
  40cc35:	loope  0x40cc30
  40cc37:	loopne 0x40cbd7
  40cc39:	addr16 pop es
  40cc3b:	and    al,0x1a
  40cc3d:	dec    ecx
  40cc3e:	inc    edi
  40cc3f:	sbb    DWORD PTR [edi],edi
  40cc41:	(bad)  
  40cc43:	jle    0x40cc99
  40cc45:	imul   eax,DWORD PTR [ebx+0x71],0xffffffdd
  40cc49:	or     eax,DWORD PTR [ecx+0x736295e9]
  40cc4f:	jmp    0x40cc51
  40cc51:	xchg   ecx,eax
  40cc52:	and    DWORD PTR [edx-0x63],0xce6213d7
  40cc59:	pop    edx
  40cc5a:	mov    dh,BYTE PTR [ecx+ebx*8-0x62d45b94]
  40cc61:	and    esp,ecx
  40cc63:	icebp  
  40cc64:	sbb    ah,BYTE PTR [edi+0x5e5e60f8]
  40cc6a:	jmp    0x4e72:0xf8a708da
  40cc71:	pop    esi
  40cc72:	push   cs
  40cc73:	inc    ebp
  40cc74:	shl    DWORD PTR [edi+edi*4+0x9],cl
	...
  40cc88:	add    BYTE PTR [eax],al
  40cc8a:	mov    ebx,gs
  40cc8c:	inc    ebx
  40cc8d:	adc    DWORD PTR [edx],ecx
  40cc8f:	mov    bh,0xfc
  40cc91:	add    ah,bh
  40cc93:	in     al,0xfa
  40cc95:	or     DWORD PTR [ecx-0x1],eax
  40cc98:	mov    al,BYTE PTR [ebp-0x45]
  40cc9b:	in     al,0x35
  40cc9d:	add    BYTE PTR [edx+0x6b],al
  40cca0:	sub    eax,eax
  40cca2:	test   BYTE PTR [ebx+ebp*8],dh
  40cca5:	push   es
  40cca6:	and    al,0xa5
  40cca8:	clc    
  40cca9:	mov    esp,DWORD PTR [edx+0x22]
  40ccac:	pop    ebx
  40ccad:	leave  
  40ccae:	in     eax,dx
  40ccaf:	jb     0x40ccb1
  40ccb1:	push   ebp
  40ccb2:	add    al,0x13
  40ccb4:	add    esp,0x43
  40ccb7:	shl    DWORD PTR [ecx+0x66],0xae
  40ccbb:	data16 aaa 
  40ccbd:	inc    ebp
  40ccbe:	pop    ebx
  40ccbf:	fwait
  40ccc0:	push   es
  40ccc1:	sub    edi,DWORD PTR [edi]
  40ccc3:	sub    eax,eax
  40ccc5:	adc    BYTE PTR [edi+0x22],bh
  40ccc8:	xor    eax,0xa19164
  40cccd:	call   0x3e5a5a
  40ccd2:	(bad)  
  40ccd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd4:	clc    
  40ccd5:	lea    esi,[edx+0x22]
  40ccd8:	dec    esi
  40ccd9:	call   0x3e57b9
  40ccde:	test   al,0x95
  40cce0:	adc    al,0xff
  40cce2:	push   edx
  40cce3:	ins    DWORD PTR es:[edi],dx
  40cce4:	std    
  40cce5:	jne    0x40cc9e
  40cce7:	and    esi,DWORD PTR [ebp+0x8]
  40ccea:	xlat   BYTE PTR ds:[ebx]
  40cceb:	leave  
  40ccec:	inc    WORD PTR [eax]
	...
  40ccff:	add    al,cl
  40cd01:	outs   dx,DWORD PTR ds:[esi]
  40cd02:	ror    BYTE PTR [edi],0x83
  40cd05:	enter  0xfffd,0xff
  40cd09:	and    DWORD PTR [ebp+0xc],esi
  40cd0c:	enter  0xf895,0xff
  40cd10:	inc    edx
  40cd11:	sbb    eax,0x2222f9e6
  40cd16:	dec    DWORD PTR [ebx+0x45396d32]
  40cd1c:	xchg   esi,eax
  40cd1d:	pop    ebx
  40cd1e:	adc    DWORD PTR [ebx+0x24b32],eax
  40cd24:	rcr    ebp,1
  40cd26:	adc    eax,0xaa5343ff
  40cd2b:	mov    eax,ds:0x88c15439
  40cd30:	push   ebx
  40cd31:	push   edi
  40cd32:	lods   eax,DWORD PTR ds:[esi]
  40cd33:	jae    0x40cce6
  40cd35:	xchg   ebp,eax
  40cd36:	mov    eax,0x46cfc42a
  40cd3b:	hlt    
  40cd3c:	test   eax,0x5766286d
  40cd41:	dec    ebx
  40cd42:	or     eax,0xad480ad2
  40cd47:	addr16 cld 
  40cd49:	dec    ecx
  40cd4a:	push   edx
  40cd4b:	dec    DWORD PTR [ebx]
  40cd4d:	inc    edx
  40cd4e:	stos   BYTE PTR es:[edi],al
  40cd4f:	mov    dl,dh
  40cd51:	or     al,0xc1
  40cd53:	(bad)  
  40cd54:	jmp    0x40cdb3
  40cd56:	shl    DWORD PTR [esi+ebx*4-0xf],0x34
  40cd5b:	addr16 popa 
  40cd5d:	cmc    
  40cd5e:	mov    WORD PTR [edx+eax*4-0x38],ss
  40cd62:	sti    
  40cd63:	inc    DWORD PTR [eax]
	...
  40cd75:	add    dl,cl
  40cd77:	inc    edi
  40cd78:	lods   eax,DWORD PTR ds:[esi]
  40cd79:	inc    edi
  40cd7a:	pop    ds
  40cd7b:	xchg   DWORD PTR [eax+0x2a6d938a],edi
  40cd81:	inc    ecx
  40cd82:	xchg   esi,eax
  40cd83:	enter  0x3aa,0xc7
  40cd87:	les    esi,FWORD PTR [esi]
  40cd89:	adc    al,0xc7
  40cd8b:	mov    esp,0x3f21f836
  40cd90:	or     ch,al
  40cd92:	jno    0x40cdb8
  40cd94:	sar    esi,0x6f
  40cd97:	push   eax
  40cd98:	ret    0x9474
  40cd9b:	mov    al,0xe6
  40cd9d:	push   eax
  40cd9e:	add    DWORD PTR [edi],ebx
  40cda0:	mov    edx,0xa98d83fe
  40cda5:	jns    0x40ce22
  40cda7:	bound  esp,QWORD PTR [esi]
  40cda9:	shr    al,0xd5
  40cdac:	sbb    ebp,DWORD PTR [ebx-0x3fe9399b]
  40cdb2:	call   0xe9d4:0x9843e762
  40cdb9:	lods   al,BYTE PTR ds:[esi]
  40cdba:	xchg   ecx,eax
  40cdbb:	fistp  QWORD PTR [edi+esi*4-0x3f]
  40cdbf:	(bad)  
  40cdc0:	ins    DWORD PTR es:[edi],dx
  40cdc1:	lods   al,BYTE PTR ds:[esi]
  40cdc2:	mov    eax,ds:0xb9bf755b
  40cdc7:	pusha  
  40cdc8:	dec    ebx
  40cdc9:	mov    edi,0xc02523a8
  40cdce:	mov    eax,ds:0xd03e85b
  40cdd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdd4:	repz (bad) 
  40cdd6:	xchg   ecx,eax
  40cdd7:	pop    ebx
  40cdd8:	call   0x40cde0
	...
  40cde9:	add    BYTE PTR [eax],al
  40cdeb:	add    BYTE PTR [esi+0x79bc355b],dl
  40cdf1:	fld    QWORD PTR [ebx-0x41]
  40cdf4:	js     0x40cddd
  40cdf6:	and    al,0xc0
  40cdf8:	pop    esi
  40cdf9:	and    al,bh
  40cdfb:	add    eax,ebx
  40cdfd:	out    0x8b,eax
  40cdff:	push   edi
  40ce00:	or     eax,0x1982e3a5
  40ce05:	push   0x37
  40ce07:	lods   al,BYTE PTR ds:[esi]
  40ce08:	ror    dh,cl
  40ce0a:	xchg   BYTE PTR [edi+0x397f5a1c],bh
  40ce10:	xchg   edx,eax
  40ce11:	jmp    0x40ce01
  40ce13:	mov    esi,0x475e72c2
  40ce18:	call   0xeed6:0x960fe4df
  40ce1f:	mov    esi,0x47646eaa
  40ce24:	mov    ?,WORD PTR [edx+0x4a9e394e]
  40ce2a:	pop    edx
  40ce2b:	xor    BYTE PTR [ecx],cl
  40ce2d:	pop    ebx
  40ce2e:	jae    0x40ce79
  40ce30:	stos   BYTE PTR es:[edi],al
  40ce31:	jmp    0x62bebf36
  40ce36:	add    cl,ch
  40ce38:	xchg   ebp,eax
  40ce39:	mov    ebx,0x62822bc7
  40ce3e:	push   ebx
  40ce3f:	jb     0x40ce67
  40ce41:	loopne 0x40ce07
  40ce43:	sbb    eax,0x2614b60d
  40ce48:	xchg   esp,eax
  40ce49:	bound  eax,QWORD PTR [eax]
  40ce4b:	jmp    0xf71355e5
	...
  40ce60:	add    BYTE PTR [eax],al
  40ce62:	dec    esi
  40ce63:	outs   dx,BYTE PTR ds:[esi]
  40ce64:	(bad)  
  40ce65:	call   0x554e30ff
  40ce6a:	aam    0xdf
  40ce6c:	jnp    0x40ce63
  40ce6e:	xchg   ebp,eax
  40ce6f:	aad    0x11
  40ce71:	ficomp WORD PTR [esi+0x76]
  40ce74:	push   0xffffffea
  40ce76:	outs   dx,DWORD PTR ds:[esi]
  40ce77:	bound  ebp,QWORD PTR [edx-0x17]
  40ce7a:	cmp    eax,0x48c6fdea
  40ce7f:	dec    ebx
  40ce80:	sub    bl,ch
  40ce82:	xchg   ebp,eax
  40ce83:	bound  eax,QWORD PTR [ecx+0x7363a634]
  40ce89:	or     dh,BYTE PTR [ecx]
  40ce8b:	iret   
  40ce8c:	adc    BYTE PTR [esi-0x53179552],ah
  40ce92:	mov    ebx,0xce60fe59
  40ce97:	push   esi
  40ce98:	(bad)  
  40ce99:	adc    al,0xae
  40ce9b:	int3   
  40ce9c:	add    BYTE PTR [ebx],dl
  40ce9e:	sahf   
  40ce9f:	out    0x43,eax
  40cea1:	jge    0x40ce88
  40cea3:	dec    edx
  40cea4:	data16 jbe 0x40ce9f
  40cea7:	pop    eax
  40cea8:	call   0xa36696
  40cead:	push   0xffffffd6
  40ceaf:	data16 add dl,ah
  40ceb2:	xor    al,0x59
  40ceb4:	je     0x40ceaf
  40ceb6:	fmul   st,st(6)
  40ceb8:	or     BYTE PTR [ecx-0x38],al
  40cebb:	sar    ch,0x0
  40cebe:	push   eax
  40cebf:	out    0x44,al
  40cec1:	cld    
  40cec2:	rcr    BYTE PTR [edx+0x6a14],0x0
	...
  40ced5:	add    BYTE PTR [eax],al
  40ced7:	add    bh,ch
  40ced9:	mov    eax,DWORD PTR [ecx*4-0x17b1e5c6]
  40cee0:	icebp  
  40cee1:	sbb    bh,bh
  40cee3:	inc    DWORD PTR [esi-0x10fffed0]
  40cee9:	in     al,0x7c
  40ceeb:	or     al,0xbc
  40ceed:	call   0x36a:0x754aff20
  40cef4:	rcl    BYTE PTR [ecx+0x7f4be808],0xfd
  40cefb:	inc    eax
  40cefd:	xchg   ecx,eax
  40cefe:	adc    al,0x6a
  40cf00:	mov    esp,0xaf6a008b
  40cf05:	or     eax,0x17c0ff16
  40cf0a:	jmp    0xa64dc0
  40cf0f:	adc    edx,0x72
  40cf12:	add    al,0x75
  40cf14:	mov    WORD PTR [edi],ss
  40cf16:	jne    0x40cf28
  40cf18:	inc    eax
  40cf19:	xchg   ecx,eax
  40cf1a:	or     al,ch
  40cf1c:	inc    ebx
  40cf1d:	cmp    ebp,0xfca1e6ff
  40cf23:	dec    DWORD PTR [edx-0x6aff9586]
  40cf29:	push   0xffffff8b
  40cf2b:	inc    ebp
  40cf2c:	and    ebp,DWORD PTR [esi+0x1711efe8]
  40cf32:	(bad)  
  40cf33:	jmp    0x4134ff
  40cf38:	lods   al,BYTE PTR ds:[esi]
  40cf39:	cdq    
  40cf3a:	or     al,0x5
	...
  40cf4c:	add    BYTE PTR [eax],al
  40cf4e:	sub    ch,BYTE PTR [esi-0x3]
  40cf51:	jne    0x40cf82
  40cf53:	mov    eax,DWORD PTR [esi]
  40cf55:	dec    DWORD PTR [edx+0x6d]
  40cf58:	call   0xbd6a65b2
  40cf5d:	dec    BYTE PTR [esi+0x4a]
  40cf60:	add    al,BYTE PTR [eax]
  40cf62:	xchg   esi,eax
  40cf63:	mov    dl,0x27
  40cf65:	add    DWORD PTR [esi-0x75837eb5],edx
  40cf6b:	dec    ecx
  40cf6c:	aaa    
  40cf6d:	and    cl,dh
  40cf6f:	or     eax,0x809e6a12
  40cf74:	xor    eax,0x2442ee08
  40cf79:	(bad)  
  40cf7a:	fldcw  WORD PTR [edi+0x35]
  40cf7d:	adc    al,0x3c
  40cf7f:	dec    esp
  40cf80:	sub    BYTE PTR [eax],al
  40cf82:	cmp    al,0x4b
  40cf84:	stos   BYTE PTR es:[edi],al
  40cf85:	stos   DWORD PTR es:[edi],eax
  40cf86:	rcl    BYTE PTR [edi-0x43],0xe8
  40cf8a:	push   ebx
  40cf8b:	dec    edx
  40cf8c:	add    al,BYTE PTR [eax]
  40cf8e:	adc    eax,0x23070dc6
  40cf93:	imul   edi,DWORD PTR [ebx+0xcb58674],0xffffffff
  40cf9a:	and    eax,DWORD PTR [ebx-0x56]
  40cf9d:	adc    eax,edi
  40cf9f:	sub    BYTE PTR [ebp+0x283603fe],bh
  40cfa5:	add    ebp,esp
  40cfa7:	dec    ecx
  40cfa8:	sub    BYTE PTR [eax],al
  40cfaa:	outs   dx,BYTE PTR ds:[esi]
  40cfab:	enter  0xfebb,0x71
  40cfaf:	and    ebx,DWORD PTR ds:0x1
	...
  40cfc1:	add    BYTE PTR [eax],al
  40cfc3:	add    BYTE PTR [esi-0x6d837eb7],dl
  40cfc9:	push   ecx
  40cfca:	aaa    
  40cfcb:	sbb    al,0x51
  40cfcd:	xchg   eax,eax
  40cfcf:	call   DWORD PTR [ecx+0x4a]
  40cfd2:	add    bh,bh
  40cfd4:	ret    
  40cfd5:	xor    eax,0x3dac0028
  40cfda:	pop    DWORD PTR [edx+edi*1+0x7a]
  40cfde:	lods   al,BYTE PTR ds:[esi]
  40cfdf:	arpl   WORD PTR [eax],si
  40cfe1:	leave  
  40cfe2:	mov    esp,0xe7632be8
  40cfe7:	add    edx,DWORD PTR [esi-0x70f0231d]
  40cfed:	int    0xf3
  40cfef:	les    ebx,FWORD PTR [edx+0x56]
  40cff2:	jmp    0x46a365fa
  40cff7:	ss stos BYTE PTR es:[edi],al
  40cff9:	int3   
  40cffa:	out    0x29,eax
  40cffc:	xchg   edx,eax
  40cffd:	in     eax,0xac
  40cfff:	mov    edi,0xbdaa4a61
  40d004:	call   0xe218e160
  40d009:	push   edi
  40d00a:	call   0xe1a72a8f
  40d00f:	ss pushf 
  40d011:	sbb    ch,al
  40d013:	add    edx,DWORD PTR [esi-0x3e37ef9e]
  40d019:	push   edi
  40d01a:	call   0xe2a70a9f
  40d01f:	ss pushf 
  40d021:	sbb    ch,al
  40d023:	add    edx,DWORD PTR [esi+0x7fd062]
	...
  40d039:	add    BYTE PTR [ecx+0x1a86e857],ah
  40d03f:	data16 jecxz 0x40d077
  40d042:	jmp    0x40d0af
  40d044:	mov    ecx,0x44e1e730
  40d049:	or     BYTE PTR [esi+0x5022762],dl
  40d04f:	stos   DWORD PTR es:[edi],eax
  40d050:	mov    dh,0x31
  40d052:	mov    ds:0x14b024e7,al
  40d057:	lds    ebx,FWORD PTR [ebx-0x6c3ab8f8]
  40d05d:	mov    ebx,0x86804ee2
  40d062:	mov    edi,0xd28d8f57
  40d067:	pop    edx
  40d068:	xchg   DWORD PTR [ecx],esi
  40d06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d06b:	push   edi
  40d06c:	cmc    
  40d06d:	scas   eax,DWORD PTR es:[edi]
  40d06e:	cmp    ch,cl
  40d070:	add    BYTE PTR [ecx-0x13],dh
  40d073:	int    0x8
  40d075:	and    DWORD PTR [edi-0x2299023d],0x93d314cd
  40d07f:	push   edi
  40d080:	je     0x40d0df
  40d082:	dec    ebp
  40d083:	into   
  40d084:	clc    
  40d085:	inc    ecx
  40d086:	jecxz  0x40d0dd
  40d088:	inc    BYTE PTR [esi+0x3d]
  40d08b:	into   
  40d08c:	clc    
  40d08d:	push   ecx
  40d08e:	std    
  40d08f:	enter  0x36fd,0x72
  40d093:	bound  eax,QWORD PTR [eax]
  40d095:	jmp    0x6aa21c2f
  40d09a:	lahf   
  40d09b:	or     bx,WORD PTR [ebx+0x0]
	...
  40d0ae:	add    BYTE PTR [eax],al
  40d0b0:	inc    esi
  40d0b1:	imul   edx,edx,0xffffff9c
  40d0b4:	push   0xffffffe1
  40d0b6:	jnp    0x40d095
  40d0b8:	xchg   ebp,eax
  40d0b9:	bound  eax,QWORD PTR [eax-0x11]
  40d0bc:	mov    BYTE PTR [edx-0x186e8b03],ch
  40d0c2:	inc    ebx
  40d0c3:	std    
  40d0c4:	sbb    dh,al
  40d0c6:	hlt    
  40d0c7:	fadd   st(2),st
  40d0c9:	(bad)
  40d0cc:	dec    si
  40d0ce:	jmp    0xfe9838d9
  40d0d3:	pusha  
  40d0d4:	(bad)  
  40d0d5:	pop    edx
  40d0d6:	(bad)  
  40d0d7:	push   esp
  40d0d8:	mov    ds:0x3cbd7455,al
  40d0dd:	iret   
  40d0de:	clc    
  40d0df:	mov    esi,0x13e86ac6
  40d0e4:	mov    dh,0x55
  40d0e6:	(bad)  
  40d0e7:	scas   al,BYTE PTR es:[edi]
  40d0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0e9:	outs   dx,BYTE PTR ds:[esi]
  40d0ea:	push   0xffffffe8
  40d0ec:	sbb    al,0xcf
  40d0ee:	hlt    
  40d0ef:	sahf   
  40d0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f1:	pop    edx
  40d0f2:	jmp    0xfe95e016
  40d0f7:	mov    es,WORD PTR [esi+0x1300e95a]
  40d0fd:	xchg   ebp,edi
  40d0ff:	call   edi
  40d101:	pop    esi
  40d102:	add    BYTE PTR [eax],al
  40d104:	aas    
  40d105:	add    eax,0x623fb805
  40d10a:	add    BYTE PTR [eax],al
  40d10c:	popw   ds
  40d10e:	push   cs
  40d10f:	add    dl,ah
  40d111:	in     al,0xe9
  40d113:	push   esi
	...
  40d124:	add    BYTE PTR [eax],al
  40d126:	jl     0x40d0c2
  40d128:	or     BYTE PTR [eax],al
  40d12a:	loop   0x40d18e
  40d12c:	pop    esi
  40d12d:	leave  
  40d12e:	lods   eax,DWORD PTR ds:[esi]
  40d12f:	push   ebp
  40d130:	dec    BYTE PTR [edx+0xae96a42]
  40d136:	test   al,0x53
  40d138:	out    0xb9,al
  40d13a:	(bad)  
  40d13b:	sbb    bh,bh
  40d13d:	xor    DWORD PTR [ecx-0x10c17cab],0xffffff92
  40d144:	out    dx,eax
  40d145:	push   DWORD PTR [edx]
  40d147:	push   0xffffffe8
  40d149:	test   eax,0x5eff1916
  40d14e:	xchg   BYTE PTR [edi],bl
  40d150:	add    al,BYTE PTR [eax]
  40d152:	and    ah,ch
  40d154:	jmp    0x89aad3e4
  40d159:	push   ebp
  40d15a:	retf   
  40d15b:	in     al,0x1
  40d15d:	nop
  40d15e:	sub    al,0x8d
  40d160:	adc    BYTE PTR [eax],al
  40d162:	inc    ebx
  40d163:	arpl   WORD PTR [ecx+0x2e1a8f55],cx
  40d169:	(bad)  
  40d16a:	jge    0x40d14a
  40d16c:	jl     0x40d182
  40d16e:	outs   dx,DWORD PTR ds:[esi]
  40d16f:	test   DWORD PTR [eax],ecx
  40d171:	mov    esp,DWORD PTR [edx-0x7c8f028e]
  40d177:	jmp    0x7400:0x76ba82ff
  40d17e:	data16 out 0x54,al
  40d181:	sbb    BYTE PTR [edi-0x697d0015],bl
  40d187:	dec    ecx
  40d188:	or     cl,cl
	...
  40d19a:	add    BYTE PTR [eax],al
  40d19c:	push   esp
  40d19d:	dec    edi
  40d19e:	add    dl,BYTE PTR [ebp+0xd]
  40d1a1:	out    dx,eax
  40d1a2:	add    ebx,0x5a
  40d1a5:	ins    BYTE PTR es:[edi],dx
  40d1a6:	push   edx
  40d1a7:	mov    ebx,ebx
  40d1a9:	cmp    eax,ecx
  40d1ab:	jmp    FWORD PTR [ecx]
  40d1ad:	dec    ebx
  40d1ae:	add    al,BYTE PTR [eax]
  40d1b0:	or     eax,0x96c70606
  40d1b5:	dec    ebx
  40d1b6:	add    al,BYTE PTR [eax]
  40d1b8:	xchg   esi,eax
  40d1b9:	enter  0x835,0x96
  40d1bd:	or     ch,BYTE PTR cs:[ebx]
  40d1c0:	(bad)  
  40d1c1:	cld    
  40d1c2:	pop    eax
  40d1c3:	leave  
  40d1c4:	aam    0x46
  40d1c6:	add    bh,bh
  40d1c8:	imul   eax,DWORD PTR [ebx-0x56],0xffffffff
  40d1cc:	jbe    0x40d152
  40d1ce:	mov    bh,0xa
  40d1d0:	(bad)  
  40d1d1:	cmc    
  40d1d2:	or     DWORD PTR [ebx],ebp
  40d1d4:	(bad)  
  40d1d5:	adc    al,0x59
  40d1d7:	leave  
  40d1d8:	aam    0x3e
  40d1da:	add    cl,BYTE PTR [ecx+0x74b77353]
  40d1e0:	mov    ?,WORD PTR [ebx+0xe]
  40d1e3:	arpl   WORD PTR [ecx-0x55bb3ead],di
  40d1e9:	dec    ecx
  40d1ea:	add    al,BYTE PTR [eax]
  40d1ec:	xchg   esi,eax
  40d1ed:	mov    dh,0x3d
  40d1ef:	in     al,dx
  40d1f0:	inc    esi
  40d1f1:	into   
  40d1f2:	ds hlt 
  40d1f4:	inc    esi
  40d1f5:	xor    al,0x2f
  40d1f7:	or     BYTE PTR [esi+0x15],bh
  40d1fa:	mov    esp,0x3d7389fe
  40d1ff:	in     al,dx
	...
  40d210:	add    BYTE PTR [eax],al
  40d212:	or     DWORD PTR [eax-0x7b],edx
  40d215:	jl     0x40d199
  40d217:	dec    edx
  40d218:	cs add al,0x9d
  40d21b:	imul   DWORD PTR ds:0x5809bd08
  40d221:	pop    edi
  40d222:	dec    edi
  40d223:	arpl   WORD PTR [ecx+0x24879607],bp
  40d229:	test   al,0x1e
  40d22b:	sahf   
  40d22c:	jg     0x40d1b0
  40d22e:	retf   0xe84a
  40d231:	add    esi,esi
  40d233:	(bad)  
  40d234:	std    
  40d235:	or     ebp,DWORD PTR [ebp+0x22]
  40d238:	push   ds
  40d239:	pop    ecx
  40d23a:	pop    edi
  40d23b:	and    esp,esp
  40d23d:	add    ebx,DWORD PTR ds:0x41c27f9e
  40d243:	popa   
  40d244:	mov    bh,0xab
  40d246:	cs retf 
  40d248:	pop    esi
  40d249:	mov    eax,0x8c539e1e
  40d24e:	add    DWORD PTR [eiz*4-0x17abfe61],ebx
  40d255:	add    ebp,ebp
  40d257:	(bad)  
  40d258:	ins    BYTE PTR es:[edi],dx
  40d259:	ds out 0xb2,al
  40d25c:	fs ds loop 0x40d212
  40d260:	cs mov cs,WORD PTR cs:[edx-0x59]
  40d265:	mov    ebp,0x467353d8
  40d26a:	(bad)  
  40d26b:	xchg   edi,eax
  40d26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d26d:	stos   DWORD PTR es:[edi],eax
  40d26e:	inc    eax
  40d26f:	pop    esi
  40d270:	loop   0x40d247
  40d272:	inc    ebp
  40d273:	jb     0x40d27b
  40d275:	add    BYTE PTR cs:[eax],al
	...
  40d288:	mov    edx,0xb12b484a
  40d28d:	push   ebx
  40d28e:	ret    
  40d28f:	ret    
  40d290:	dec    ebx
  40d291:	mov    bl,0x20
  40d293:	lds    ecx,FWORD PTR [ebp-0x51b6ef9e]
  40d299:	push   ebx
  40d29a:	and    eax,0x54df3ca0
  40d29f:	lods   al,BYTE PTR ds:[esi]
  40d2a0:	mov    ebp,ecx
  40d2a2:	in     eax,0x82
  40d2a4:	add    cl,BYTE PTR [edi-0x18]
  40d2a7:	xor    BYTE PTR [edi-0x21],dl
  40d2aa:	cmp    al,0xac
  40d2ac:	jno    0x40d27c
  40d2ae:	add    bh,ch
  40d2b0:	adc    al,0xd6
  40d2b2:	hlt    
  40d2b3:	jmp    0x1d3e455e
  40d2b8:	push   ds
  40d2b9:	cmp    esi,DWORD PTR [eax+0x11]
  40d2bc:	or     DWORD PTR [edx+ebp*1-0x57],edx
  40d2c0:	loopne 0x40d275
  40d2c2:	(bad)  
  40d2c3:	stos   DWORD PTR es:[edi],eax
  40d2c4:	mov    fs,WORD PTR [edx-0x7f]
  40d2c7:	add    al,0xf6
  40d2c9:	push   edx
  40d2ca:	jne    0x40d2b0
  40d2cc:	add    ch,al
  40d2ce:	add    cl,ch
  40d2d0:	xchg   ebp,eax
  40d2d1:	out    0x43,eax
  40d2d3:	fld1   
  40d2d5:	int    0xe4
  40d2d7:	jbe    0x40d26b
  40d2d9:	out    0x43,eax
  40d2db:	inc    ebp
  40d2dc:	(bad)  [edx]
  40d2de:	add    edi,DWORD PTR [ecx+0x4e68c23d]
  40d2e4:	dec    ecx
  40d2e5:	jmp    0x72dc:0xd60d2543
	...
  40d2fc:	add    BYTE PTR [eax],al
  40d2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ff:	push   esi
  40d300:	jmp    0x5726:0xd0e87e91
  40d307:	inc    edx
  40d308:	add    ecx,ebp
  40d30a:	xchg   ebp,eax
  40d30b:	bound  ecx,QWORD PTR [ebx-0x745d0a5c]
  40d311:	lods   al,BYTE PTR ds:[esi]
  40d312:	stc    
  40d313:	mov    ds:0x6a870e52,al
  40d318:	call   0xfe94d033
  40d31d:	repnz aad 0xce
  40d320:	or     al,0x6a
  40d322:	outs   dx,DWORD PTR ds:[esi]
  40d323:	dec    esi
  40d324:	add    DWORD PTR [ebp-0x5d],esi
  40d327:	fistp  QWORD PTR [ebx-0x37]
  40d32a:	xchg   ebp,eax
  40d32b:	int    0x26
  40d32d:	push   0xffffffce
  40d32f:	inc    edx
  40d330:	add    DWORD PTR [ebp-0x66],ebx
  40d333:	push   ecx
  40d334:	je     0x40d2ff
  40d336:	sub    eax,0x50006868
  40d33b:	sbb    edi,edi
  40d33d:	jne    0x40d352
  40d33f:	(bad)  
  40d340:	daa    
  40d341:	(bad)  
  40d342:	and    BYTE PTR [ecx],bl
  40d344:	push   DWORD PTR [ebp+0x33]
  40d347:	(bad)  
  40d348:	repz xor BYTE PTR [bx+di],bl
  40d34c:	sub    eax,eax
  40d34e:	xchg   ecx,eax
  40d34f:	mov    ecx,0x6633c2c7
  40d354:	mov    DWORD PTR [ebp+0xf],eax
  40d357:	mov    ebp,0xe50b4dfe
  40d35c:	jl     0x40d342
  40d35e:	aas    
  40d35f:	add    BYTE PTR [esi],0x83
	...
  40d372:	add    BYTE PTR [eax],al
  40d374:	and    al,BYTE PTR [edx]
  40d376:	(bad)  
  40d377:	je     0x40d34c
  40d379:	fadd   QWORD PTR [esp+ecx*1-0x50]
  40d37d:	xchg   edx,eax
  40d37e:	fmul   QWORD PTR [edi-0x38ae701]
  40d384:	push   edi
  40d385:	sbb    al,0x67
  40d387:	call   DWORD PTR [eax-0x33]
  40d38a:	add    BYTE PTR [eax],al
  40d38c:	out    dx,eax
  40d38d:	gs pop esi
  40d38f:	pop    edi
  40d390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d391:	and    ecx,DWORD PTR [edx]
  40d393:	add    BYTE PTR [edx],cl
  40d395:	fucomp st(1)
  40d397:	cmp    DWORD PTR [ebx+0x3283571d],0x76
  40d39e:	add    BYTE PTR [ebp-0x3b],dh
  40d3a1:	int    0x0
  40d3a3:	add    BYTE PTR [edi+0x6dc95d65],bh
  40d3a9:	popa   
  40d3aa:	add    bh,bh
  40d3ac:	add    dh,BYTE PTR [esi+0x29]
  40d3af:	shl    BYTE PTR [edx+eiz*4],cl
  40d3b2:	adc    bh,dh
  40d3b4:	fidiv  DWORD PTR [ecx+0x66]
  40d3b7:	inc    ecx
  40d3b8:	scas   eax,DWORD PTR es:[edi]
  40d3b9:	fiadd  WORD PTR [eax+esi*8+0x45]
  40d3bd:	data16 std 
  40d3bf:	jne    0x40d430
  40d3c1:	pop    ss
  40d3c2:	jne    0x40d3cc
  40d3c4:	xchg   esi,eax
  40d3c5:	and    ebx,DWORD PTR [ebx]
  40d3c7:	pop    edi
  40d3c8:	and    DWORD PTR [eax],0x3ba67c80
  40d3ce:	das    
  40d3cf:	or     al,0xfc
  40d3d1:	cmp    ch,BYTE PTR [eax]
  40d3d3:	imul   ecx,DWORD PTR fs:[esi+0xe80c],0x0
	...
  40d3ea:	mov    fs,WORD PTR [eax-0x4d]
  40d3ed:	(bad)  
  40d3ee:	pop    ecx
  40d3ef:	outs   dx,BYTE PTR ds:[esi]
  40d3f0:	adc    bh,bh
  40d3f2:	retf   
  40d3f3:	push   ebx
  40d3f4:	stos   BYTE PTR es:[edi],al
  40d3f5:	dec    edx
  40d3f6:	mov    ah,0xf8
  40d3f8:	mov    bl,0x88
  40d3fa:	fcmovnu st,st(7)
  40d3fc:	mov    bl,0x74
  40d3fe:	mov    ds:0x3e082de8,al
  40d403:	sub    esp,DWORD PTR [eax]
  40d405:	jmp    FWORD PTR [ecx]
  40d407:	fsubr  DWORD PTR ds:0xa562114
  40d40d:	call   0xfef5f1a5
  40d412:	pop    ds
  40d413:	push   es
  40d414:	mov    edx,0xb54f83fe
  40d419:	je     0x40d3a9
  40d41b:	mov    ds:0xa7f960ab,eax
  40d420:	mov    bl,0x74
  40d422:	mov    dl,BYTE PTR [eax+0x31fe082d]
  40d428:	and    bh,bh
  40d42a:	loope  0x40d3ef
  40d42c:	cmp    eax,0x2431514
  40d431:	je     0x40d3d5
  40d433:	mov    esp,0xef9bfc35
  40d438:	push   es
  40d439:	add    DWORD PTR [ebx+0x5f],0xfffffffd
  40d43d:	jae    0x40d3d0
  40d43f:	xor    al,0xc2
  40d441:	pop    esi
  40d442:	fistp  QWORD PTR [eax+edx*1+0x0]
  40d446:	neg    esi
  40d448:	sbb    eax,DWORD PTR [ecx-0x6a]
  40d44b:	push   0xffffffac
  40d44d:	cmp    BYTE PTR [eax],al
	...
  40d45f:	add    BYTE PTR [ebx+0x62],dl
  40d462:	fild   QWORD PTR ds:0x54a77b99
  40d468:	pop    edi
  40d469:	and    eax,0xce1503fc
  40d46e:	retf   
  40d46f:	inc    BYTE PTR [edx]
  40d471:	popa   
  40d472:	(bad)  
  40d473:	mov    cl,BYTE PTR cs:[edi+0x35]
  40d477:	or     al,0x7e
  40d479:	loop   0x40d4c3
  40d47b:	mov    ch,0x60
  40d47d:	fisub  DWORD PTR [esp+ecx*8]
  40d480:	icebp  
  40d481:	(bad)  
  40d482:	out    0x2,eax
  40d484:	xchg   esi,eax
  40d485:	cmp    ah,bh
  40d487:	sbb    al,0x49
  40d489:	push   eax
  40d48a:	popa   
  40d48b:	ds dec edx
  40d48d:	jl     0x40d41d
  40d48f:	test   al,0xa7
  40d491:	dec    edi
  40d492:	std    
  40d493:	rdtsc  
  40d495:	(bad)  
  40d496:	out    dx,eax
  40d497:	stos   DWORD PTR es:[edi],eax
  40d498:	sbb    eax,edx
  40d49a:	jbe    0x40d450
  40d49c:	or     al,0xb6
  40d49e:	jae    0x40d42a
  40d4a0:	xchg   ebp,eax
  40d4a1:	or     al,0xaf
  40d4a3:	clc    
  40d4a4:	xchg   edx,eax
  40d4a5:	dec    edx
  40d4a6:	fisubr DWORD PTR [edx-0x7f0459e4]
  40d4ac:	leave  
  40d4ad:	(bad)  
  40d4ae:	aam    0x4
  40d4b0:	stc    
  40d4b1:	aad    0x3b
  40d4b3:	stos   DWORD PTR es:[edi],eax
  40d4b4:	xlat   BYTE PTR ds:[ebx]
  40d4b5:	enter  0xb43e,0xbc
  40d4b9:	and    dl,BYTE PTR [edi-0x18892836]
  40d4bf:	sbb    BYTE PTR [edx+0x4e],0xed
  40d4c3:	add    al,0x0
	...
  40d4d5:	add    BYTE PTR [ebx],bl
  40d4d7:	or     al,ch
  40d4d9:	add    edx,DWORD PTR [esi+0x33a8167b]
  40d4df:	(bad)  [edi+ebp*4+0x41670c]
  40d4e6:	pop    ebx
  40d4e7:	push   edx
  40d4e8:	xchg   edx,eax
  40d4e9:	add    eax,DWORD PTR [esi+0x4f]
  40d4ec:	add    DWORD PTR [ebp+ecx*4+0x3a],edi
  40d4f0:	sub    DWORD PTR [edi+0x5cfe50e2],ecx
  40d4f6:	scas   al,BYTE PTR es:[edi]
  40d4f7:	dec    edi
  40d4f8:	je     0x40d4eb
  40d4fa:	sub    eax,0x45d65f71
  40d4ff:	fiadd  DWORD PTR [ebx-0x63]
  40d502:	cwde   
  40d503:	(bad)  
  40d504:	std    
  40d505:	cmp    al,0x8e
  40d507:	dec    edi
  40d508:	je     0x40d4fb
  40d50a:	or     eax,0x25b6f89a
  40d50f:	fmul   QWORD PTR [ebx-0x2b]
  40d512:	adc    BYTE PTR [edx+0x4f951c00],cl
  40d518:	je     0x40d4af
  40d51a:	sub    bh,BYTE PTR [ebp+0x7c059666]
  40d520:	shr    BYTE PTR [esi],0xfb
  40d523:	and    BYTE PTR ds:0x18d5e4e9,dl
  40d529:	jle    0x40d59a
  40d52b:	jbe    0x40d52a
  40d52d:	cld    
  40d52e:	loope  0x40d57f
  40d530:	je     0x40d50f
  40d532:	in     al,0xd5
  40d534:	or     BYTE PTR [ecx+0x29],dl
  40d537:	dec    ebp
  40d538:	(bad)  
  40d539:	pop    esi
	...
  40d54a:	add    BYTE PTR [eax],al
  40d54c:	or     DWORD PTR [edi],ecx
  40d54e:	je     0x40d536
  40d550:	inc    esp
  40d551:	(bad)  
  40d552:	hlt    
  40d553:	inc    ecx
  40d554:	dec    ebp
  40d555:	enter  0x46fd,0xd1
  40d559:	push   cs
  40d55a:	pop    esi
  40d55b:	xor    al,dl
  40d55d:	jb     0x40d55f
  40d55f:	scas   al,BYTE PTR es:[edi]
  40d560:	lock int 0xf8
  40d563:	mov    ebx,0x1745016
  40d568:	add    eax,0x8f1e14d6
  40d56d:	sbb    bh,dh
  40d56f:	pushf  
  40d570:	ror    DWORD PTR [edi+0x74],0xe1
  40d574:	sbb    eax,0x9800fec5
  40d579:	adc    ecx,DWORD PTR [ebx]
  40d57b:	sar    BYTE PTR [eax-0x50feb027],0x62
  40d582:	std    
  40d583:	jne    0x40d528
  40d585:	jmp    0xc02b:0x11786613
  40d58c:	enter  0xc00f,0x14
  40d590:	outs   dx,DWORD PTR ds:[esi]
  40d591:	out    dx,eax
  40d592:	cmp    eax,DWORD PTR [ecx]
  40d594:	outs   dx,DWORD PTR ds:[esi]
  40d595:	bound  eax,QWORD PTR [ecx+0xd635b7d]
  40d59b:	test   DWORD PTR [ebx+0x67],esp
  40d59e:	add    BYTE PTR [eax],al
  40d5a0:	xchg   esp,eax
  40d5a1:	adc    ecx,ebp
  40d5a3:	and    al,0x6e
  40d5a5:	bound  eax,QWORD PTR [eax]
  40d5a7:	mov    edx,DWORD PTR [edx-0x4afb74f6]
  40d5ad:	fs inc ebx
  40d5af:	lock add BYTE PTR [eax],al
	...
  40d5c2:	xchg   ebp,eax
  40d5c3:	push   ax
  40d5c5:	jmp    DWORD PTR [edx+0x7a74e64e]
  40d5cb:	adc    edi,edi
  40d5cd:	push   0x3f
  40d5cf:	adc    DWORD PTR [ebp+0x14],esi
  40d5d2:	test   al,0x8a
  40d5d4:	or     al,ch
  40d5d6:	int3   
  40d5d7:	or     bh,bh
  40d5d9:	inc    DWORD PTR [edx+eiz*4+0x66b68314]
  40d5e0:	jae    0x40d5f1
  40d5e2:	push   0xb7e8f48a
  40d5e7:	jp     0x40d5e6
  40d5e9:	inc    DWORD PTR [esi+eiz*1+0x75bdc95f]
  40d5f0:	add    BYTE PTR [ebx],cl
  40d5f2:	jge    0x40d589
  40d5f4:	add    ebp,ecx
  40d5f6:	fwait
  40d5f7:	popa   
  40d5f8:	add    BYTE PTR [eax],al
  40d5fa:	inc    esi
  40d5fb:	call   0x1475:0x10bf6aec
  40d602:	xchg   esi,eax
  40d603:	je     0x40d63d
  40d605:	or     BYTE PTR [esi-0x4e014518],ch
  40d60b:	rol    BYTE PTR [eax+0x14],1
  40d60e:	adc    eax,0x91750223
  40d613:	push   esp
  40d614:	ss hlt 
  40d616:	scas   al,BYTE PTR es:[edi]
  40d617:	mov    bl,0x28
  40d619:	call   DWORD PTR [ecx+0x5f5ec470]
  40d61f:	stc    
  40d620:	sbb    BYTE PTR [eax],al
  40d622:	sub    DWORD PTR [esi+0x28],0x66
	...
  40d635:	add    BYTE PTR [eax],al
  40d637:	add    bh,dl
  40d639:	cmp    eax,DWORD PTR [ecx+0x45d07e44]
  40d63f:	call   0xc1420959
  40d644:	jbe    0x40d684
  40d646:	fst    st(1)
  40d648:	pop    ds
  40d649:	cld    
  40d64a:	add    al,0x0
  40d64c:	xchg   esi,eax
  40d64d:	in     al,dx
  40d64e:	mov    cl,0x82
  40d650:	ds push esp
  40d652:	jnp    0x40d698
  40d654:	ss mov eax,0xc075e81d
  40d65a:	inc    ebp
  40d65b:	in     al,dx
  40d65c:	ins    DWORD PTR es:[edi],dx
  40d65d:	jle    0x40d5fb
  40d65f:	jbe    0x40d5f5
  40d661:	lock fldcw WORD PTR [edx]
  40d664:	inc    esp
  40d665:	rol    BYTE PTR [ebp-0x14],0x6d
  40d669:	xchg   BYTE PTR [edx+ecx*4-0x3f7c4c9d],ah
  40d670:	mov    ch,0xb8
  40d672:	cdq    
  40d673:	add    ecx,DWORD PTR [ecx]
  40d675:	stos   BYTE PTR es:[edi],al
  40d676:	add    edx,DWORD PTR [ebp-0xa]
  40d679:	rcl    DWORD PTR [ebp-0x1c],0x1d
  40d67d:	(bad)  
  40d67e:	cdq    
  40d67f:	cmp    dl,BYTE PTR [ebx-0x59]
  40d682:	xor    eax,DWORD PTR ds:0xeaa1fe0d
  40d688:	xchg   ebp,eax
  40d689:	rol    BYTE PTR [ebp-0x1c],0xd1
  40d68d:	popa   
  40d68e:	pushf  
  40d68f:	pop    ss
  40d690:	leave  
  40d691:	(bad)  
  40d692:	or     edx,DWORD PTR [ecx+eax*8-0x2a]
  40d696:	fistp  WORD PTR [ebx-0x4ef0ab0a]
	...
  40d6ac:	add    BYTE PTR [eax],al
  40d6ae:	pushf  
  40d6af:	and    bh,BYTE PTR [ebp+0x0]
  40d6b2:	test   eax,0x839bf3d6
  40d6b7:	(bad)  
  40d6b8:	div    BYTE PTR [eax-0x4570dd94]
  40d6be:	push   edi
  40d6bf:	ja     0x40d6a8
  40d6c1:	jp     0x40d695
  40d6c3:	cs jae 0x40d699
  40d6c6:	adc    ah,BYTE PTR [esi-0x59f4ac45]
  40d6cc:	scas   eax,DWORD PTR es:[edi]
  40d6cd:	push   ebx
  40d6ce:	les    edi,FWORD PTR [edx]
  40d6d0:	bound  ebp,QWORD PTR [eax+ebp*2+0x4646714c]
  40d6d7:	dec    esp
  40d6d8:	cmp    eax,0xbc571d0
  40d6dd:	mov    cl,0x50
  40d6df:	loopne 0x40d705
  40d6e1:	aam    0x49
  40d6e3:	sar    ah,1
  40d6e5:	test   dl,al
  40d6e7:	sub    ch,al
  40d6e9:	aaa    
  40d6ea:	mov    eax,ds:0x30d8154b
  40d6ef:	(bad)  
  40d6f0:	lahf   
  40d6f1:	mov    al,0xa2
  40d6f3:	pop    esi
  40d6f4:	jle    0x40d72c
  40d6f6:	mov    cs,WORD PTR [ebx+0x1d]
  40d6f9:	or     al,0x19
  40d6fb:	(bad)  
  40d6fc:	(bad)  
  40d6fd:	fwait
  40d6fe:	xchg   edi,eax
  40d6ff:	inc    edi
  40d700:	addr16 mov al,0x50
  40d703:	xchg   esp,ebx
  40d705:	stos   DWORD PTR es:[edi],eax
  40d706:	nop
  40d707:	loopne 0x40d743
  40d709:	mov    cl,0xf8
  40d70b:	dec    ebx
  40d70c:	dec    edi
  40d70d:	ss jmp 0x0:0x272c3a
	...
  40d721:	add    BYTE PTR [eax],al
  40d723:	add    cl,ch
  40d725:	dec    ebx
  40d726:	add    BYTE PTR [edx],0x96
  40d729:	bound  eax,QWORD PTR [eax]
  40d72b:	jmp    0xd603f076
  40d730:	xchg   ebp,eax
  40d731:	mov    ch,0x89
  40d733:	adc    eax,0xf1744b6e
  40d738:	sbb    eax,0x6167350
  40d73d:	les    ebp,FWORD PTR [edx+ebp*4+0x7cfd6254]
  40d744:	lods   eax,DWORD PTR ds:[esi]
  40d745:	inc    ebx
  40d746:	cmp    al,0xb6
  40d748:	xchg   ebp,eax
  40d749:	bound  ecx,QWORD PTR [ecx]
  40d74b:	sub    DWORD PTR [eax+0x65],esp
  40d74e:	pop    ebp
  40d74f:	and    BYTE PTR [ebx+0x63],bl
  40d752:	add    BYTE PTR [edi+0x54fd6292],ch
  40d758:	add    BYTE PTR [ebx-0x2e],0x5b
  40d75c:	sub    DWORD PTR [esi+edi*4+0x7f],ecx
  40d760:	aad    0xa1
  40d762:	add    dh,al
  40d764:	scas   eax,DWORD PTR es:[edi]
  40d765:	pop    edx
  40d766:	push   ebp
  40d767:	rcr    DWORD PTR [ebx+0x5ce90094],1
  40d76d:	or     esi,DWORD PTR [esp+eiz*8-0x20]
  40d771:	sbb    ebx,eax
  40d773:	icebp  
  40d774:	xchg   ebp,eax
  40d775:	dec    esi
  40d776:	xor    ch,BYTE PTR [ecx-0x6901b34d]
  40d77c:	jmp    0x991286d1
  40d781:	aad    0xe0
  40d783:	xchg   BYTE PTR [edi+0x5a],ch
  40d786:	call   0x40d790
	...
  40d797:	add    BYTE PTR [eax],al
  40d799:	add    BYTE PTR [edi],bl
  40d79b:	dec    ebx
  40d79c:	(bad)  
  40d79d:	loop   0x40d7f4
  40d79f:	(bad)  
  40d7a0:	add    ecx,DWORD PTR [esi]
  40d7a2:	push   ebx
  40d7a3:	and    DWORD PTR [ecx],ecx
  40d7a5:	jmp    0xa8830457
  40d7aa:	xchg   ebp,eax
  40d7ab:	dec    ebx
  40d7ac:	je     0x40d78f
  40d7ae:	sbb    eax,0x95e93417
  40d7b3:	push   edi
  40d7b4:	rol    BYTE PTR [eax],0x2a
  40d7b7:	dec    esi
  40d7b8:	push   DWORD PTR [ebp-0xd]
  40d7bb:	retf   
  40d7bc:	add    al,0x6c
  40d7be:	leave  
  40d7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c0:	add    BYTE PTR [eax+0x56],ch
  40d7c3:	lahf   
  40d7c4:	aas    
  40d7c5:	add    BYTE PTR [eax-0x77],dh
  40d7c8:	or     al,ch
  40d7ca:	pop    ebp
  40d7cb:	dec    ecx
  40d7cc:	(bad)  
  40d7cd:	push   DWORD PTR [esi+ebx*1-0x765ff68b]
  40d7d4:	or     al,0x8f
  40d7d6:	mov    edx,0xaf41668e
  40d7db:	data16 clc 
  40d7dd:	inc    ebx
  40d7de:	out    dx,al
  40d7df:	pop    esi
  40d7e0:	std    
  40d7e1:	jne    0x40d85a
  40d7e3:	out    dx,al
  40d7e4:	xchg   ebp,eax
  40d7e5:	xor    eax,0xc009667f
  40d7ea:	jmp    0x4c9:0x7375ff47
  40d7f1:	je     0x40d7cc
  40d7f3:	lahf   
  40d7f4:	add    BYTE PTR [eax+0x667e],bh
  40d7fa:	add    BYTE PTR [edi],0xc0
  40d7fd:	or     BYTE PTR [eax],al
	...
  40d80f:	add    BYTE PTR [edi-0x55],ch
  40d812:	mov    esp,ebp
  40d814:	mov    esp,0x8856f221
  40d819:	data16 test al,0x43
  40d81c:	outs   dx,BYTE PTR ds:[esi]
  40d81d:	pop    esi
  40d81e:	std    
  40d81f:	jne    0x40d858
  40d821:	out    dx,al
  40d822:	xor    DWORD PTR [esi],0x3f
  40d825:	or     ax,ax
  40d828:	sub    ah,BYTE PTR [eax+0x5d]
  40d82b:	pop    esi
  40d82c:	out    0x23,al
  40d82e:	add    al,BYTE PTR [eax]
  40d830:	outs   dx,DWORD PTR ds:[esi]
  40d831:	int    0xed
  40d833:	mov    eax,DWORD PTR [edx]
  40d835:	dec    esi
  40d836:	jmp    0x40d839
  40d838:	sbb    esp,esi
  40d83a:	cmp    eax,DWORD PTR [eax]
  40d83c:	jmp    0x42e5:0x9668a1fb
  40d843:	inc    ecx
  40d844:	xchg   esi,eax
  40d845:	cwde   
  40d846:	cmp    BYTE PTR [eax],cl
  40d848:	(bad)  
  40d849:	sbb    esi,esp
  40d84b:	jmp    ecx
  40d84d:	push   esp
  40d84e:	ret    0x9074
  40d851:	lock dec ebx
  40d853:	leave  
  40d854:	aam    0x3f
  40d856:	add    cl,BYTE PTR [ebx+0x219b534b]
  40d85c:	push   ss
  40d85d:	sub    ebp,edi
  40d85f:	jae    0x40d800
  40d861:	mov    ebx,0x4f2a0cee
  40d866:	cmp    BYTE PTR [esi],0x9c
  40d869:	(bad)  
  40d86a:	(bad)  
  40d86b:	jg     0x40d8ce
  40d86d:	add    al,0x36
  40d86f:	or     dl,BYTE PTR [esi]
  40d871:	adc    DWORD PTR [ecx+0x74],edx
	...
  40d884:	add    BYTE PTR [eax],al
  40d886:	fwait
  40d887:	mov    ebx,0x3d035fee
  40d88c:	les    eax,FWORD PTR [esi]
  40d88e:	mov    dh,0x80
  40d890:	test   BYTE PTR [esi],bh
  40d892:	xchg   esi,eax
  40d893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d894:	leave  
  40d895:	(bad)  
  40d896:	fist   DWORD PTR [edi]
  40d898:	add    eax,0xc53b9600
  40d89d:	inc    esp
  40d89e:	pop    esi
  40d89f:	cmp    eax,DWORD PTR [edx]
  40d8a1:	add    BYTE PTR [esi+0x3d082dc4],dl
  40d8a7:	test   BYTE PTR [esi+edi*1-0x7d28998f],al
  40d8ae:	ret    
  40d8af:	out    0x4,eax
  40d8b1:	jne    0x40d857
  40d8b3:	call   0x3bd8d0fd
  40d8b8:	add    al,BYTE PTR [eax]
  40d8ba:	mov    ds:0x2244c53f,eax
  40d8bf:	cmp    al,BYTE PTR [edx]
  40d8c1:	add    BYTE PTR [esi+0x5bf70fe4],dl
  40d8c7:	rol    DWORD PTR [ecx],cl
  40d8c9:	add    BYTE PTR [esi-0x73c9189e],dl
  40d8cf:	and    bh,ah
  40d8d1:	jecxz  0x40d8a3
  40d8d3:	sahf   
  40d8d4:	push   ebx
  40d8d5:	add    al,0x96
  40d8d7:	(bad)  
  40d8d8:	out    0x83,eax
  40d8da:	test   al,0xa6
  40d8dc:	mov    esp,0x3f9ee106
  40d8e1:	cdq    
  40d8e2:	nop
  40d8e3:	and    DWORD PTR [ebp-0x17b72e55],ebp
  40d8e9:	add    eax,DWORD PTR [eax]
	...
  40d8fb:	add    BYTE PTR ds:0x4b0323c7,dl
  40d901:	gs and eax,0x67a17605
  40d907:	in     eax,dx
  40d908:	mov    cl,0xcd
  40d90a:	push   edi
  40d90b:	jns    0x40d937
  40d90d:	pop    edx
  40d90e:	adc    dl,BYTE PTR [eax]
  40d910:	push   ss
  40d911:	mov    edi,eax
  40d913:	ss and dl,0x76
  40d917:	add    dh,BYTE PTR [esi+0x7d54d7cd]
  40d91d:	popa   
  40d91e:	jno    0x40d964
  40d920:	xchg   edi,eax
  40d921:	(bad)  
  40d923:	inc    esp
  40d924:	push   ss
  40d925:	mov    bh,ah
  40d927:	imul   ebp,DWORD PTR ss:[eax-0x77e9bae2],0xffffffe7
  40d92f:	ss inc ecx
  40d931:	and    BYTE PTR ds:0xe84859b8,ah
  40d937:	add    ebx,DWORD PTR ds:0xca78dfce
  40d93d:	pop    edx
  40d93e:	xchg   edx,eax
  40d93f:	loope  0x40d902
  40d941:	xchg   ebx,ecx
  40d943:	ss call 0x93ce:0x3103ef20
  40d94b:	push   ebp
  40d94c:	ds jl  0x40d8d4
  40d94f:	lods   al,BYTE PTR ds:[esi]
  40d950:	and    BYTE PTR [edi+eiz*4+0x36],bl
  40d954:	nop
  40d955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d956:	add    BYTE PTR [edi],dl
  40d958:	dec    ebp
  40d959:	and    al,BYTE PTR ds:0x47508ee9
  40d95f:	data16 add BYTE PTR [eax],al
	...
  40d972:	pop    eax
  40d973:	dec    esi
  40d974:	inc    esi
  40d975:	imul   ebp,edx,0x42307547
  40d97b:	iret   
  40d97c:	hlt    
  40d97d:	mov    bh,0xd
  40d97f:	pop    esp
  40d980:	inc    BYTE PTR [esi+0x32]
  40d983:	test   eax,0x63d7305e
  40d988:	add    BYTE PTR [esi+ecx*2+0xd25823b],bl
  40d98f:	scas   al,BYTE PTR es:[edi]
  40d990:	push   ebp
  40d991:	push   0x70
  40d993:	outs   dx,BYTE PTR ds:[esi]
  40d994:	add    BYTE PTR [ebp+0x153be4bc],dl
  40d99a:	int    0xa2
  40d99c:	add    cl,ch
  40d99e:	pusha  
  40d99f:	pusha  
  40d9a0:	pop    ebp
  40d9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a2:	fsub   QWORD PTR [ecx]
  40d9a4:	adc    ecx,ebp
  40d9a6:	push   ds
  40d9a7:	sahf   
  40d9a8:	adc    al,0xb0
  40d9aa:	cwde   
  40d9ab:	mov    dh,0x66
  40d9ad:	test   al,0x95
  40d9af:	push   edi
  40d9b0:	or     DWORD PTR [edx+0x2000629b],0x2866d297
  40d9ba:	call   0x62:0x93768157
  40d9c1:	add    BYTE PTR [edi-0x6dd79932],dl
  40d9c7:	push   edi
  40d9c8:	and    DWORD PTR [edx-0x65],0xd75c0062
  40d9cf:	dec    esi
  40d9d0:	push   ecx
  40d9d1:	je     0x40d9aa
  40d9d3:	dec    edx
  40d9d4:	push   ecx
  40d9d5:	ins    BYTE PTR es:[edi],dx
	...
  40d9e6:	add    BYTE PTR [eax],al
  40d9e8:	xlat   BYTE PTR ds:[ebx]
  40d9e9:	inc    esi
  40d9ea:	push   ecx
  40d9eb:	xchg   esi,eax
  40d9ec:	daa    
  40d9ed:	mov    ebx,0x47922866
  40d9f2:	je     0x40d9f4
  40d9f4:	aas    
  40d9f5:	jmp    0x40d9b2
  40d9f7:	clc    
  40d9f8:	cwde   
  40d9f9:	sti    
  40d9fa:	mov    WORD PTR [ebp+0x17],es
  40d9fd:	scas   al,BYTE PTR es:[edi]
  40d9fe:	mov    eax,DWORD PTR [ebp-0x75]
  40da01:	scas   al,BYTE PTR es:[edi]
  40da02:	mov    eax,DWORD PTR [ebp+0x5f]
  40da05:	scas   al,BYTE PTR es:[edi]
  40da06:	std    
  40da07:	xor    eax,0x3f80e3
  40da0c:	dec    eax
  40da0d:	xchg   ecx,eax
  40da0e:	adc    al,ch
  40da10:	adc    esi,esi
  40da12:	(bad)  
  40da13:	jmp    FWORD PTR [edx-0x5f]
  40da16:	fcom   QWORD PTR [eax+0x6a]
  40da19:	mov    eax,ds:0xa13a50e0
  40da1e:	in     al,0x50
  40da20:	js     0x40da73
  40da22:	outs   dx,BYTE PTR ds:[esi]
  40da23:	data16 out dx,al
  40da25:	(bad)  
  40da26:	std    
  40da27:	jne    0x40d9e8
  40da29:	jmp    0x75fe:0xfb88f887
  40da30:	xchg   ebx,eax
  40da31:	retf   
  40da32:	inc    esp
  40da33:	aam    0x98
  40da35:	xchg   ecx,eax
  40da36:	fmul   QWORD PTR [edi+0x45c71af2]
  40da3c:	scas   eax,DWORD PTR es:[edi]
  40da3d:	pop    esi
  40da3e:	add    BYTE PTR [eax],al
  40da40:	jg     0x40da0d
  40da42:	inc    esp
  40da43:	int3   
  40da44:	mov    edi,0x6f69ff64
  40da49:	push   0x6a00
	...
  40da5e:	jg     0x40dac8
  40da60:	add    BYTE PTR [ebp-0xb1cd4e],cl
  40da66:	inc    edx
  40da67:	(bad)  
  40da68:	and    eax,0xbe456f41
  40da6d:	movnti DWORD PTR [edi+0x1],eax
  40da71:	add    BYTE PTR [edi],bh
  40da73:	fnstsw WORD PTR [eax+edx*8+0x2f]
  40da77:	dec    ecx
  40da78:	add    BYTE PTR [eax],0x2e
  40da7b:	bound  eax,QWORD PTR [eax]
  40da7d:	mov    edx,DWORD PTR [esi-0x24c54782]
  40da83:	(bad)  
  40da85:	xchg   BYTE PTR [edx],ch
  40da87:	cmp    al,0x2
  40da89:	add    BYTE PTR [edx],bl
  40da8b:	shl    DWORD PTR [eax],1
  40da8d:	rcr    BYTE PTR ds:0x5b8ac64f,1
  40da93:	out    0xa6,eax
  40da95:	add    DWORD PTR ds:0xca74aad8,eax
  40da9b:	mov    ah,0x40
  40da9d:	in     al,0xf1
  40da9f:	es shl bh,cl
  40daa2:	leave  
  40daa3:	imul   eax,DWORD PTR [eax+eax*1],0xffa61f15
  40daaa:	mov    BYTE PTR [edi+0x3bd1ffb7],bh
  40dab0:	xchg   DWORD PTR [esi+eax*8+0x3b],edi
  40dab4:	sti    
  40dab5:	sbb    edx,0x3b
  40dab8:	add    al,BYTE PTR [eax]
  40daba:	adc    eax,0xa0ff9de7
  40dabf:	mov    bh,0x6b
  40dac1:	inc    DWORD PTR [eax]
	...
  40dad3:	add    BYTE PTR [ecx-0x5d8b54c5],ch
  40dad9:	jae    0x40db46
  40dadb:	pusha  
  40dadc:	cdq    
  40dadd:	inc    esp
  40dade:	jp     0x40db24
  40dae0:	pop    esi
  40dae1:	dec    esp
  40dae2:	cs cld 
  40dae4:	mov    esi,ecx
  40dae6:	mov    ecx,0x9d280bfe
  40daeb:	fcomip st,st(7)
  40daed:	and    al,0xa8
  40daef:	addr16 cdq 
  40daf1:	ja     0x40db34
  40daf3:	add    BYTE PTR [esi-0x59],bh
  40daf6:	idiv   bh
  40daf8:	popa   
  40daf9:	imul   ebx,DWORD PTR [edi+eax*1],0xffffffd2
  40dafd:	jp     0x40db03
  40daff:	dec    ebx
  40db01:	add    ebx,DWORD PTR [ebp+0x23b822d]
  40db07:	or     edx,DWORD PTR [esi+0x62]
  40db0a:	sbb    ecx,DWORD PTR [esi+ebp*4]
  40db0d:	push   esp
  40db0e:	and    eax,DWORD PTR [ebx-0x6a]
  40db11:	cmp    bl,BYTE PTR [eax]
  40db13:	imul   BYTE PTR [ecx]
  40db15:	inc    ebp
  40db16:	cmp    BYTE PTR [eax+edx*4],bl
  40db19:	sahf   
  40db1a:	sub    BYTE PTR [ecx+ebx*1],al
  40db1d:	iret   
  40db1e:	scas   eax,DWORD PTR es:[edi]
  40db1f:	pushf  
  40db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db21:	mov    fs,edi
  40db23:	add    ebx,DWORD PTR [ebp+0x6e0bf422]
  40db29:	ins    BYTE PTR es:[edi],dx
  40db2a:	stos   DWORD PTR es:[edi],eax
  40db2b:	inc    edx
  40db2c:	xchg   esi,eax
  40db2d:	cmp    dh,BYTE PTR [ebp+esi*8+0x1bb844f1]
  40db34:	sbb    BYTE PTR [esi+0x3a8],0x0
	...
  40db47:	add    BYTE PTR [eax],al
  40db49:	add    cl,ah
  40db4b:	into   
  40db4c:	das    
  40db4d:	pushf  
  40db4e:	jecxz  0x40dae0
  40db50:	out    0x3,eax
  40db52:	popf   
  40db53:	and    bh,BYTE PTR [ebp-0x189dc1c2]
  40db59:	cwde   
  40db5a:	add    eax,DWORD PTR [ebp-0x63]
  40db5d:	div    DWORD PTR [ecx-0x4f5742f9]
  40db63:	inc    esp
  40db64:	fstp   QWORD PTR [ebx]
  40db66:	xor    BYTE PTR [ebx+0x562aa8e7],ah
  40db6c:	addps  xmm7,XMMWORD PTR [edx]
  40db6f:	inc    ebp
  40db70:	jmp    FWORD PTR [eax+0x2ef7470a]
  40db76:	add    BYTE PTR [ebp+esi*2-0x9],0x79
  40db7b:	das    
  40db7c:	inc    ebp
  40db7d:	test   eax,0xb4554478
  40db82:	jo     0x40db52
  40db84:	mov    edi,0xbf56e2a8
  40db89:	rol    edx,0x43
  40db8c:	(bad)  
  40db8d:	test   al,0xe2
  40db8f:	ds mov edi,0x144722e
  40db95:	cmp    al,0x4e
  40db97:	cmp    al,0xb9
  40db99:	or     al,0xef
  40db9b:	inc    esp
  40db9c:	(bad)  
  40db9d:	sbb    al,0xfa
  40db9f:	cmp    esi,eax
  40dba1:	or     edi,edi
  40dba3:	inc    esp
  40dba4:	pop    esi
  40dba5:	aaa    
  40dba6:	in     eax,dx
  40dba7:	and    DWORD PTR [ecx],edx
  40dba9:	jmp    0x6b2db37e
	...
  40dbbe:	add    BYTE PTR [eax],al
  40dbc0:	fnstcw WORD PTR [ebx]
  40dbc2:	cmp    ah,0xa1
  40dbc5:	pop    ebp
  40dbc6:	or     eax,0x61a26c
  40dbcb:	jmp    0xba357a58
  40dbd0:	sbb    BYTE PTR [esi-0x61974608],0xfc
  40dbd7:	mov    ecx,0xd4fd608b
  40dbdc:	test   DWORD PTR [edx],edi
  40dbde:	and    BYTE PTR [esi],bh
  40dbe0:	cs inc ebp
  40dbe2:	cmp    BYTE PTR [ebp+edi*8+0x26c0d62],0x44
  40dbea:	(bad)  
  40dbeb:	jmp    0x7735aade
  40dbf0:	js     0x40dc44
  40dbf2:	imul   esi,DWORD PTR [esi],0x1600a15a
  40dbf8:	js     0x40dc4c
  40dbfa:	jmp    0xfe8487c2
  40dbff:	repnz aad 0x54
  40dc02:	and    DWORD PTR [ecx],0xffffff95
  40dc05:	bound  eax,QWORD PTR [eax]
  40dc07:	fs enter 0x514e,0x5c
  40dc0c:	ror    BYTE PTR [edx+0x51],0x74
  40dc10:	xlat   BYTE PTR ds:[ebx]
  40dc11:	inc    esi
  40dc12:	push   ecx
  40dc13:	push   ebx
  40dc14:	call   0xf73d:0xdf97443
  40dc1b:	into   
  40dc1c:	cmp    eax,esp
  40dc1e:	jnp    0x40dc20
  40dc20:	push   edi
  40dc21:	pop    ebp
  40dc22:	or     eax,0x85
	...
  40dc33:	add    BYTE PTR [eax],al
  40dc35:	add    BYTE PTR [edi],dl
  40dc37:	pop    esi
  40dc38:	add    BYTE PTR [eax],al
  40dc3a:	add    BYTE PTR [ecx-0x60f2970c],dl
  40dc40:	aas    
  40dc41:	add    BYTE PTR [edi],ah
  40dc43:	dec    ebp
  40dc44:	xor    BYTE PTR [eax],al
  40dc46:	aas    
  40dc47:	dec    eax
  40dc48:	mov    esi,0xfdbfba0f
  40dc4d:	jmp    FWORD PTR [edi]
  40dc4f:	retf   0xf444
  40dc52:	jg     0x40dc1d
  40dc54:	inc    esp
  40dc55:	clc    
  40dc56:	scas   eax,DWORD PTR es:[edi]
  40dc57:	leave  
  40dc58:	inc    esp
  40dc59:	cld    
  40dc5a:	scas   eax,DWORD PTR es:[edi]
  40dc5b:	push   0x6f0aff01
  40dc60:	call   0xff3c3616
  40dc65:	adc    edx,0xfffffff6
  40dc68:	std    
  40dc69:	push   cs
  40dc6a:	jp     0x40dc4b
  40dc6c:	std    
  40dc6d:	(bad)  
  40dc6e:	out    dx,eax
  40dc6f:	mov    DWORD PTR [esp+esi*8+0x50],0x63458f4e
  40dc77:	leave  
  40dc78:	inc    esp
  40dc79:	hlt    
  40dc7a:	das    
  40dc7b:	retf   0xf844
  40dc7e:	pop    ds
  40dc7f:	retf   0xfc44
  40dc82:	jmp    FWORD PTR [eax+0x4]
  40dc85:	dec    DWORD PTR [edx]
  40dc87:	outs   dx,DWORD PTR ds:[esi]
  40dc88:	call   0xff3c6616
  40dc8d:	adc    DWORD PTR [edx],0xfffffff7
  40dc90:	add    BYTE PTR [ebp-0x10],dh
  40dc93:	add    eax,DWORD PTR ds:0xa7196c
  40dc99:	inc    DWORD PTR [eax]
	...
  40dcab:	add    BYTE PTR [eax+0x7ac7ff09],al
  40dcb1:	jbe    0x40dd19
  40dcb3:	inc    ecx
  40dcb4:	outs   dx,DWORD PTR ds:[esi]
  40dcb5:	or     edi,edi
  40dcb7:	call   DWORD PTR [eax+0x1]
  40dcba:	add    eax,0x43b19674
  40dcbf:	add    BYTE PTR [ecx+0x31],ah
  40dcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc3:	(bad)  
  40dcc4:	pop    ecx
  40dcc5:	jg     0x40dc77
  40dcc7:	out    0x94,eax
  40dcc9:	jmp    DWORD PTR [esi-0x6370ae02]
  40dccf:	add    BYTE PTR [esi+0x7b83024b],dl
  40dcd5:	push   edi
  40dcd6:	push   ds
  40dcd7:	inc    ecx
  40dcd8:	xchg   esi,eax
  40dcd9:	loopne 0x40dd08
  40dcdb:	sub    DWORD PTR ds:0xd7663217,edx
  40dce1:	dec    ebx
  40dce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce3:	jae    0x40dd5b
  40dce5:	int3   
  40dce6:	call   0x4cb555e
  40dceb:	inc    DWORD PTR [edx+0x4bf01a20]
  40dcf1:	mov    WORD PTR [ecx*4-0xae6cad],es
  40dcf8:	imul   ebp,DWORD PTR [edi-0x67658b5a],0x30
  40dcff:	or     dh,ch
  40dd01:	inc    ebx
  40dd02:	stos   BYTE PTR es:[edi],al
  40dd03:	(bad)  
  40dd04:	fnstenv [edx-0x41]
  40dd07:	setbe  dh
  40dd0a:	jp     0x40dcf7
  40dd0c:	adc    eax,0xfe9590
	...
  40dd21:	add    BYTE PTR [ebx+0x43],cl
  40dd24:	call   0x8669:0xa6885f9c
  40dd2b:	into   
  40dd2c:	inc    eax
  40dd2d:	lock inc esi
  40dd2f:	pop    eax
  40dd30:	xor    BYTE PTR [eax],cl
  40dd32:	scas   al,BYTE PTR es:[edi]
  40dd33:	cmp    BYTE PTR [edx-0x1],cl
  40dd36:	cdq    
  40dd37:	xor    al,0xc2
  40dd39:	je     0x40dcd5
  40dd3b:	jb     0x40dcfc
  40dd3d:	pop    es
  40dd3e:	xchg   esi,eax
  40dd3f:	in     eax,0x11
  40dd41:	push   0x450c24
  40dd46:	or     esp,DWORD PTR [edx+0x2c]
  40dd49:	mov    ah,0xe1
  40dd4b:	dec    edx
  40dd4c:	xlat   BYTE PTR ds:[ebx]
  40dd4d:	inc    ebp
  40dd4e:	imul   eax,DWORD PTR [ecx-0x1d],0xa066eac3
  40dd55:	ret    0x6291
  40dd58:	scas   al,BYTE PTR es:[edi]
  40dd59:	aas    
  40dd5a:	inc    edx
  40dd5b:	arpl   di,sp
  40dd5d:	add    edx,DWORD PTR [esi-0x2e67d311]
  40dd63:	inc    ecx
  40dd64:	xor    eax,0x418731fc
  40dd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6a:	xor    BYTE PTR [ebp-0x59],ch
  40dd6d:	xor    BYTE PTR [eax+0x219814e5],dl
  40dd73:	mov    dh,0xe5
  40dd75:	fcomp  st(1)
  40dd77:	sub    ch,BYTE PTR [edx-0x2d4eee04]
  40dd7d:	mov    edx,0x9c9866fc
  40dd82:	test   BYTE PTR [ebx+0x28],ah
  40dd85:	stc    
	...
  40dd96:	add    BYTE PTR [eax],al
  40dd98:	cmp    DWORD PTR [edi+0x3a154c5e],esi
  40dd9e:	jmp    0xe83b70d1
  40dda3:	add    edx,DWORD PTR [edi-0x6954959e]
  40dda9:	mov    dh,0xed
  40ddab:	fcom   DWORD PTR [ecx]
  40ddad:	sub    ebp,DWORD PTR [edx]
  40ddaf:	cld    
  40ddb0:	leave  
  40ddb1:	add    ecx,esp
  40ddb3:	sbb    eax,0x3f5c6257
  40ddb8:	stos   BYTE PTR es:[edi],al
  40ddb9:	xchg   ecx,eax
  40ddba:	es das 
  40ddbc:	sahf   
  40ddbd:	dec    edx
  40ddbe:	in     eax,dx
  40ddbf:	dec    ecx
  40ddc0:	test   eax,0x96ac6b40
  40ddc5:	mov    dh,0xe4
  40ddc7:	and    BYTE PTR [ecx+0x14fd7c63],0xbe
  40ddce:	or     eax,DWORD PTR [ebx+eax*1]
  40ddd1:	imul   eax,DWORD PTR [eax],0xc32b55c2
  40ddd7:	loope  0x40dd6e
  40ddd9:	in     eax,dx
  40ddda:	inc    ebx
  40dddb:	aad    0xc5
  40dddd:	aas    
  40ddde:	je     0x40ddd1
  40dde0:	or     eax,0x3ad6584d
  40dde5:	in     eax,0xf8
  40dde7:	call   0xc1c24395
  40ddec:	xchg   edi,eax
  40dded:	mov    ch,0x6
  40ddef:	push   0x70
  40ddf1:	dec    esi
  40ddf2:	add    DWORD PTR [eax+eax*2],edi
  40ddf5:	(bad)  
  40ddf6:	shl    BYTE PTR [eax+0x74006857],0x0
	...
  40de0d:	add    BYTE PTR [eax+0x4e],dh
  40de10:	push   ecx
  40de11:	sahf   
  40de12:	js     0x40de7e
  40de14:	call   0xfe80aab9
  40de19:	loop   0x40de70
  40de1b:	mov    bh,0x6
  40de1d:	push   0xffffffb8
  40de1f:	dec    esi
  40de20:	add    esp,esi
  40de22:	or     ecx,DWORD PTR [ebp+0x67d7a0c0]
  40de28:	add    BYTE PTR [eax+edi*4+0x4e],bl
  40de2c:	push   ecx
  40de2d:	data16 shr BYTE PTR [edx-0x18],0x8c
  40de32:	pop    esp
  40de33:	aas    
  40de34:	(bad)  
  40de35:	push   0x2d
  40de37:	xor    BYTE PTR [ebx-0x19],0x16
  40de3b:	mov    edi,0x6880e9ec
  40de40:	sub    DWORD PTR [ecx],ebp
  40de42:	or     al,0x22
  40de44:	or     ecx,ebp
  40de46:	dec    eax
  40de47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de48:	in     al,dx
  40de49:	cdq    
  40de4a:	repnz mov dh,0x8
  40de4d:	adc    DWORD PTR ds:0x161efd9b,eax
  40de53:	cmp    BYTE PTR [ecx],ah
  40de55:	pushf  
  40de56:	mov    ds:0x94fd7be4,eax
  40de5b:	mov    ch,0x6
  40de5d:	add    BYTE PTR [ebx+eiz*1-0x37],ah
  40de61:	ret    0x6387
  40de64:	mov    eax,DWORD PTR [ebp-0x65]
  40de67:	xchg   ebx,eax
  40de68:	std    
  40de69:	jne    0x40dee2
  40de6b:	(bad)  [edx+0x59]
  40de6e:	js     0x40de73
  40de70:	cmp    eax,0x0
	...
  40de83:	add    BYTE PTR [edi-0x357cf9a7],bl
  40de89:	repnz std 
  40de8b:	je     0x40defe
  40de8d:	push   eax
  40de8e:	mov    esi,0x6dfdc9
  40de93:	lea    esi,[edx-0xe]
  40de96:	dec    ebp
  40de97:	push   0xffffff8f
  40de99:	add    esi,DWORD PTR [ebp+0x8]
  40de9c:	push   edi
  40de9d:	adc    DWORD PTR [edi-0x1],0xfffffff8
  40dea1:	rol    BYTE PTR [esp+ebp*8+0x6f],1
  40dea5:	add    esi,DWORD PTR [ebp+0x8]
  40dea8:	pop    ss
  40dea9:	repz push ebp
  40deab:	dec    DWORD PTR [eax]
  40dead:	out    0xf5,eax
  40deaf:	add    DWORD PTR ds:0xfcf88170,ecx
  40deb5:	pop    ebx
  40deb6:	push   es
  40deb7:	or     DWORD PTR [edx],0xf
  40deba:	(bad)  
  40debb:	je     0x40deae
  40debd:	dec    edi
  40debe:	mov    esi,0x6ebdc9
  40dec3:	mov    ds:0x3f88c7,eax
  40dec8:	jp     0x40de73
  40deca:	in     al,dx
  40decb:	push   eax
  40decc:	aad    0x4a
  40dece:	push   DWORD PTR [ebp-0x39]
  40ded1:	or     cl,BYTE PTR [eax+0x59]
  40ded4:	mov    BYTE PTR [ebx],al
  40ded6:	lds    ax,DWORD PTR [eax-0x5a]
  40deda:	add    BYTE PTR [ebp+0x6a4e0ef2],cl
  40dee0:	mov    esi,0x880c7503
  40dee5:	pop    ecx
  40dee6:	or     al,ch
	...
  40def8:	add    BYTE PTR [eax],al
  40defa:	xchg   esi,eax
  40defb:	in     eax,0x97
  40defd:	(bad)  
  40defe:	cdq    
  40deff:	add    esi,0x8ede9607
  40df05:	jmp    0x40df1c
  40df07:	mov    BYTE PTR [eax+0x3237db8c],ah
  40df0d:	call   0xfee3b601
  40df12:	jno    0x40deb3
  40df14:	mov    al,ds:0xaa4fe3fe
  40df19:	dec    esi
  40df1a:	leave  
  40df1b:	adc    al,0xa3
  40df1d:	or     dl,BYTE PTR [esi-0x68]
  40df20:	adc    edi,edi
  40df22:	retf   
  40df23:	xor    esp,DWORD PTR [ebx-0x20ebb58c]
  40df29:	std    
  40df2a:	inc    ecx
  40df2b:	cmc    
  40df2c:	push   cs
  40df2d:	rol    bl,0x4b
  40df30:	mov    ds:0x21d43274,eax
  40df35:	push   ebp
  40df36:	sub    ebp,ebx
  40df38:	int3   
  40df39:	rcl    DWORD PTR [edx+0x2a8b394b],0xed
  40df40:	sbb    BYTE PTR [esi+edi*8],cl
  40df43:	clc    
  40df44:	and    edi,edi
  40df46:	or     DWORD PTR [ecx],esi
  40df48:	ret    0xb573
  40df4b:	mov    ah,0x18
  40df4d:	adc    BYTE PTR [esi-0x1d],ah
  40df50:	retf   
  40df51:	pusha  
  40df52:	icebp  
  40df53:	les    esi,FWORD PTR [ecx]
  40df55:	push   0x42021e
  40df5a:	loope  0x40df7a
  40df5c:	cli    
  40df5d:	inc    BYTE PTR [eax]
	...
  40df6f:	add    BYTE PTR [ebx+0x37],ah
  40df72:	xor    bh,bh
  40df74:	dec    ebx
  40df75:	xor    ebp,DWORD PTR [edx-0x5d82e91b]
  40df7b:	out    0x3,eax
  40df7d:	xlat   BYTE PTR ds:[ebx]
  40df7e:	mov    ds:0xf589cffe,al
  40df83:	dec    DWORD PTR [edx+0x62]
  40df86:	jb     0x40df37
  40df88:	xor    DWORD PTR [edx-0x19],esp
  40df8b:	mov    dl,0xe3
  40df8d:	retf   0x4695
  40df90:	push   edi
  40df91:	bound  ecx,QWORD PTR [esi]
  40df93:	sbb    BYTE PTR [edx+0x2a2e1c8],ah
  40df99:	imul   ecx,DWORD PTR [edi],0x53
  40df9c:	cmp    BYTE PTR ds:0x62962af7,0xfe
  40dfa3:	pusha  
  40dfa4:	stc    
  40dfa5:	in     eax,0x2a
  40dfa7:	inc    ebx
  40dfa8:	xchg   esi,eax
  40dfa9:	cmp    eax,0x58ec1055
  40dfae:	(bad)  
  40dfaf:	pop    ss
  40dfb0:	mov    cs,WORD PTR [edx+0x71]
  40dfb3:	mov    eax,ds:0x4503d50
  40dfb8:	xchg   esi,eax
  40dfb9:	dec    ebp
  40dfba:	jle    0x40dfe8
  40dfbc:	shl    BYTE PTR [ecx-0x48c6fbd8],0xdb
  40dfc3:	sub    eax,0xc1d3d92
  40dfc8:	ds loopne 0x40df69
  40dfcb:	mov    eax,ds:0x3e7ca20
  40dfd0:	sub    esp,edi
  40dfd2:	dec    DWORD PTR [eax+0x0]
	...
  40dfe4:	add    BYTE PTR [eax],al
  40dfe6:	push   esp
  40dfe7:	mov    ds:0x6e82a0e7,eax
  40dfec:	adc    DWORD PTR [eax],eax
  40dfee:	add    DWORD PTR [edi+0x3d6cabdf],esi
  40dff4:	outs   dx,DWORD PTR ds:[esi]
  40dff5:	mov    eax,ds:0xb0e76279
  40dffa:	sub    ecx,edx
  40dffc:	fld    QWORD PTR [edi+edx*2+0x62]
  40e000:	push   esi
  40e001:	pop    ss
  40e002:	mov    cl,al
  40e004:	or     ah,BYTE PTR [ecx+0x384f6a4a]
  40e00a:	leave  
  40e00b:	cmp    al,0x3f
  40e00d:	sub    al,0x96
  40e00f:	bound  eax,QWORD PTR [eax]
  40e011:	inc    esi
  40e012:	xor    al,0xc5
  40e014:	test   DWORD PTR [edx-0x63029dac],ebp
  40e01a:	cdq    
  40e01b:	enter  0x1e21,0x89
  40e01f:	push   0xffffffe8
  40e021:	aam    0xf6
  40e023:	cmp    edi,esi
  40e025:	and    BYTE PTR [eax+0x64],bl
  40e028:	add    BYTE PTR [edx+ebx*1+0x36258248],bl
  40e02f:	retf   0x8300
  40e032:	arpl   WORD PTR ds:0xae3de174,di
  40e038:	pop    edx
  40e039:	out    0x36,al
  40e03b:	jmp    0x40e080
  40e03d:	(bad)  [ebp-0x6dd7bba5]
  40e043:	cmp    esi,DWORD PTR [ecx+eiz*8-0x3]
  40e047:	scas   al,BYTE PTR es:[edi]
  40e048:	std    
  40e049:	mov    BYTE PTR [eax],0x0
	...
  40e05c:	idiv   BYTE PTR [esp+esi*2]
  40e05f:	mov    ebp,0xc108b6f6
  40e064:	pushf  
  40e065:	cwde   
  40e066:	std    
  40e067:	scas   al,BYTE PTR es:[edi]
  40e068:	pop    esp
  40e069:	and    al,BYTE PTR ds:0xece760e9
  40e06f:	push   0x59
  40e071:	cmp    BYTE PTR [ebx-0x17],ch
  40e074:	imul   ebp,DWORD PTR [edi-0x3],0x14
  40e078:	mov    ds:0x37231c4a,al
  40e07d:	cmp    eax,0xc4362488
  40e082:	cs sub eax,0xf4fd6255
  40e088:	popf   
  40e089:	dec    edx
  40e08a:	sbb    eax,0xfe3d3666
  40e08f:	aam    0x1
  40e091:	cmp    eax,0xa42de174
  40e096:	pop    edx
  40e097:	dec    esi
  40e098:	imul   BYTE PTR [edx]
  40e09a:	ret    
  40e09b:	add    BYTE PTR [ebx+0x538b535f],bh
  40e0a1:	out    0xc1,al
  40e0a3:	clc    
  40e0a4:	aad    0x5f
  40e0a6:	push   0x34
  40e0a8:	adc    BYTE PTR [eax+ecx*1-0x18],0x83
  40e0ad:	js     0x40e0ac
  40e0af:	jmp    DWORD PTR [esi]
  40e0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b2:	cld    
  40e0b3:	push   0x3fa3c7
  40e0b8:	mov    al,ds:0xa4e80854
  40e0bd:	add    edi,edi
  40e0bf:	inc    DWORD PTR [eax]
	...
  40e0d1:	add    BYTE PTR ds:0x2b58685f,ah
  40e0d7:	mov    al,ds:0xa33b6800
  40e0dc:	aas    
  40e0dd:	add    BYTE PTR [eax+0x19],dh
  40e0e0:	sbb    BYTE PTR [ecx],ch
  40e0e2:	scas   al,BYTE PTR es:[edi]
  40e0e3:	callw  0x818c
  40e0e7:	(bad)  
  40e0e9:	or     edi,edi
  40e0eb:	pop    ecx
  40e0ec:	cmp    eax,0x65de7a89
  40e0f1:	mov    BYTE PTR ds:0x2f6800a6,dl
  40e0f7:	pop    edi
  40e0f8:	in     eax,dx
  40e0f9:	mov    esi,0x41415cd7
  40e0fe:	aas    
  40e0ff:	fdiv   QWORD PTR [eax+edi*8+0x0]
  40e103:	pop    ecx
  40e104:	or     al,ch
  40e106:	lahf   
  40e107:	pop    ebx
  40e108:	std    
  40e109:	call   DWORD PTR [edi-0xbf4812]
  40e10f:	xchg   BYTE PTR [eax],al
  40e111:	add    BYTE PTR [eax],dl
  40e113:	pushf  
  40e114:	xchg   DWORD PTR gs:[ebp+eiz*4-0x29150100],ebp
  40e11c:	(bad)  
  40e11d:	jne    0x40e106
  40e11f:	push   es
  40e120:	je     0x40e1a1
  40e122:	inc    eax
  40e123:	(bad)  
  40e125:	jne    0x40e0bd
  40e127:	xchg   ecx,eax
  40e128:	lods   al,BYTE PTR ds:[esi]
  40e129:	dec    ecx
  40e12a:	jb     0x40e0d8
  40e12c:	popf   
  40e12d:	inc    BYTE PTR [ebx-0x5b]
  40e130:	popf   
  40e131:	je     0x40e0c1
  40e133:	xchg   ecx,eax
  40e134:	pop    edi
  40e135:	pop    eax
	...
  40e146:	add    BYTE PTR [eax],al
  40e148:	mov    ecx,0x9ac1cb73
  40e14d:	dec    ecx
  40e14e:	cmp    DWORD PTR [ebx-0x4373846],ecx
  40e154:	sub    al,0x49
  40e156:	sub    BYTE PTR ds:0xe809dd99,dh
  40e15c:	div    edx
  40e15e:	sahf   
  40e15f:	(bad)  
  40e160:	pop    ds
  40e161:	pop    es
  40e162:	sahf   
  40e163:	addr16 cli 
  40e165:	inc    DWORD PTR [eax+eax*1+0x79]
  40e169:	mov    bh,0x9
  40e16b:	call   0xfee02b66
  40e170:	imul   edx,DWORD PTR [edi+0x33ebfea0],0x10bf8baa
  40e17a:	lahf   
  40e17b:	enter  0x4054,0x2
  40e17f:	push   ebp
  40e180:	sbb    eax,0x42c38310
  40e185:	xchg   esi,eax
  40e186:	add    al,0x6a
  40e188:	xor    al,0x18
  40e18b:	or     BYTE PTR [esi],bh
  40e18d:	cmp    al,0x3d
  40e18f:	jmp    FWORD PTR [ecx]
  40e191:	mov    bl,0x48
  40e193:	cld    
  40e194:	scas   al,BYTE PTR es:[edi]
  40e195:	dec    ax
  40e197:	inc    ecx
  40e198:	xchg   esi,eax
  40e199:	rcr    BYTE PTR [eax],1
  40e19b:	or     dh,bh
  40e19d:	clc    
  40e19e:	fwait
  40e19f:	dec    BYTE PTR [ecx]
  40e1a1:	loope  0x40e1bb
  40e1a3:	cld    
  40e1a4:	add    DWORD PTR [edi],ebp
  40e1a6:	or     ch,al
  40e1a8:	pop    ebp
  40e1a9:	push   edx
  40e1aa:	popf   
  40e1ab:	inc    BYTE PTR [eax]
	...
  40e1bd:	add    bh,bl
  40e1bf:	or     eax,0x62430006
  40e1c4:	jb     0x40e175
  40e1c6:	adc    al,0x1f
  40e1c8:	pop    esp
  40e1c9:	sub    DWORD PTR [esi+0x4a9f1ecc],edx
  40e1cf:	push   0x3f
  40e1d1:	sahf   
  40e1d2:	popa   
  40e1d3:	cmp    DWORD PTR [edi-0x74],eax
  40e1d6:	pop    edx
  40e1d7:	rcl    BYTE PTR ss:[esi],1
  40e1da:	push   edx
  40e1db:	mov    ds:0x6a2a9ee7,eax
  40e1e0:	aas    
  40e1e1:	popf   
  40e1e2:	stos   BYTE PTR es:[edi],al
  40e1e3:	cmp    DWORD PTR [edi],esp
  40e1e5:	sahf   
  40e1e6:	sub    dh,BYTE PTR [esi]
  40e1e8:	pop    ds
  40e1e9:	sbb    BYTE PTR [esi-0x6ec33db6],cl
  40e1ef:	cmp    DWORD PTR [ecx],esp
  40e1f1:	rcl    DWORD PTR [ebp+0x6d8a9c62],0xe5
  40e1f8:	and    ebx,DWORD PTR [edi-0x247e9d11]
  40e1fe:	jo     0x40e1af
  40e200:	fild   QWORD PTR [ebx-0x621965a5]
  40e206:	push   cs
  40e207:	lahf   
  40e208:	fld    TBYTE PTR [ecx+ebx*8]
  40e20b:	sahf   
  40e20c:	sub    BYTE PTR [ecx+edx*2],al
  40e20f:	scas   eax,DWORD PTR es:[edi]
  40e210:	fild   QWORD PTR [ebx-0x6238c8a6]
  40e216:	inc    eax
  40e217:	scas   eax,DWORD PTR es:[edi]
  40e218:	mov    ebx,0xbf6ac29d
  40e21d:	fwait
  40e21e:	leave  
  40e21f:	cmp    DWORD PTR [edi+0xcb],ebp
	...
  40e231:	add    BYTE PTR [eax],al
  40e233:	add    BYTE PTR [edi+0x5e],dl
  40e236:	out    0x36,eax
  40e238:	or     eax,0x8a179f46
  40e23d:	dec    edx
  40e23e:	push   ebx
  40e23f:	cmp    eax,0xc3e33911
  40e244:	test   DWORD PTR [edi+0xf],edx
  40e247:	jb     0x40e29e
  40e249:	mov    ds:0x91ee33e7,eax
  40e24e:	add    BYTE PTR [esi],dl
  40e250:	adc    edi,DWORD PTR [eax]
  40e252:	push   ecx
  40e253:	outs   dx,BYTE PTR ds:[esi]
  40e254:	adc    DWORD PTR [edx+0x50],0xe86a8966
  40e25b:	push   esi
  40e25c:	and    BYTE PTR [eax],bh
  40e25e:	inc    BYTE PTR [ecx+0x5f]
  40e261:	popf   
  40e262:	std    
  40e263:	dec    esi
  40e264:	frstor [edx]
  40e266:	or     eax,0xeced88e9
  40e26b:	push   0xffffffce
  40e26d:	xor    BYTE PTR [esi-0x3d],dl
  40e270:	xchg   ebp,eax
  40e271:	int3   
  40e272:	aaa    
  40e273:	sub    DWORD PTR cs:[edx-0x18],0xfe395d95
  40e27b:	jo     0x40e2ce
  40e27d:	ss mov dl,ah
  40e280:	data16 cmp BYTE PTR [edi],0xe9
  40e284:	adc    eax,0xa17d0079
  40e289:	retf   0xa587
  40e28c:	aam    0x62
  40e28e:	push   ebp
  40e28f:	add    ebx,ecx
  40e291:	xchg   BYTE PTR [eax],al
  40e293:	jmp    0x46b60536
	...
  40e2a8:	add    BYTE PTR [eax],al
  40e2aa:	stos   DWORD PTR es:[edi],eax
  40e2ab:	dec    edx
  40e2ac:	fild   DWORD PTR [ebp-0x5]
  40e2af:	cmp    BYTE PTR [edx],cl
  40e2b1:	test   eax,0x24878da9
  40e2b6:	sub    bh,BYTE PTR [ecx]
  40e2b8:	je     0x40e27b
  40e2ba:	outs   dx,DWORD PTR ds:[esi]
  40e2bb:	pop    esp
  40e2bc:	std    
  40e2bd:	xor    al,0x8a
  40e2bf:	dec    edx
  40e2c0:	xchg   DWORD PTR [esi+0x34fe3912],esi
  40e2c6:	or     cl,dl
  40e2c8:	sbb    al,0xa6
  40e2ca:	mov    BYTE PTR [edx-0x18],ch
  40e2cd:	and    bl,bh
  40e2cf:	cmp    dh,bh
  40e2d1:	xchg   esi,eax
  40e2d2:	test   al,0x3a
  40e2d4:	imul   ecx,edx,0x2a
  40e2d7:	scas   eax,DWORD PTR es:[edi]
  40e2d8:	or     BYTE PTR [eax],al
  40e2da:	daa    
  40e2db:	mov    ch,bh
  40e2dd:	(bad)  
  40e2de:	js     0x40e26b
  40e2e0:	pushf  
  40e2e1:	inc    esp
  40e2e2:	mov    esi,0x6775fd5e
  40e2e7:	or     esi,DWORD PTR [ebp+0x5e]
  40e2ea:	js     0x40e2c2
  40e2ec:	or     al,al
  40e2ee:	ret    
  40e2ef:	xor    DWORD PTR [esi-0x1],ecx
  40e2f2:	repnz fisttp DWORD PTR [ebp-0x1]
  40e2f6:	loop   0x40e363
  40e2f8:	call   0xff178469
  40e2fd:	call   0x3e5c71
  40e302:	push   0x27e8f850
  40e307:	jns    0x40e306
  40e309:	(bad)  
  40e30a:	jnp    0x40e31e
  40e30c:	mov    esi,0xb9
	...
  40e31d:	add    BYTE PTR [eax],al
  40e31f:	add    BYTE PTR [eax-0x2a],bh
  40e322:	(bad)  
  40e323:	jmp    FWORD PTR [ebp+0x220735c5]
  40e329:	(bad)  
  40e32b:	jne    0x40e2c8
  40e32d:	(bad)  
  40e32e:	je     0x40e338
  40e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e331:	cmp    BYTE PTR [esi-0x1],dl
  40e334:	push   0x73c2c77b
  40e339:	arpl   WORD PTR [ebx-0x75],dx
  40e33c:	dec    ebx
  40e33d:	(bad)  [esp+ecx*1+0x47]
  40e341:	cld    
  40e342:	pop    ebx
  40e343:	jmp    FWORD PTR [eax+0x67]
  40e346:	shl    BYTE PTR [edx+edi*1-0x75],0xa9
  40e34b:	inc    esp
  40e34c:	outs   dx,BYTE PTR ds:[esi]
  40e34d:	pop    esi
  40e34e:	push   eax
  40e34f:	call   0x3e5fd0
  40e354:	(bad)  
  40e355:	(bad)  [eax+edx*1-0x71]
  40e359:	(bad)  [eax+ecx*1+0x7]
  40e35d:	cmp    ah,dl
  40e35f:	(bad)  
  40e360:	clc    
  40e361:	add    eax,0xd0965a6c
  40e366:	cdq    
  40e367:	enter  0x14d4,0x2
  40e36b:	push   ebp
  40e36c:	or     eax,0xfec385cd
  40e371:	dec    edi
  40e372:	add    BYTE PTR cs:[ebx+esi*8-0x66],bh
  40e377:	je     0x40e317
  40e379:	loope  0x40e304
  40e37b:	push   esi
  40e37c:	loope  0x40e33d
  40e37e:	mov    eax,DWORD PTR [edx+ebx*8-0x4d]
  40e382:	xlat   BYTE PTR ds:[ebx]
  40e383:	xor    al,BYTE PTR [eax]
	...
  40e395:	add    BYTE PTR [esi+0xa],bh
  40e398:	add    al,BYTE PTR [eax+0x590e4989]
  40e39e:	cs out 0x40,eax
  40e3a1:	inc    ecx
  40e3a2:	xchg   esi,eax
  40e3a3:	shr    BYTE PTR [ecx+0x24982d9],1
  40e3a9:	or     edx,esi
  40e3ab:	in     al,dx
  40e3ac:	aad    0x56
  40e3ae:	scas   al,BYTE PTR es:[edi]
  40e3af:	jge    0x40e3d6
  40e3b1:	call   FWORD PTR [ecx-0x3b8c3dcd]
  40e3b7:	ret    0xf83f
  40e3ba:	mov    edi,ecx
  40e3bc:	cdq    
  40e3bd:	imul   ebx,DWORD PTR [esp+ebx*2-0x4191f7f1],0x2d71fe99
  40e3c8:	adc    eax,edi
  40e3ca:	cld    
  40e3cb:	daa    
  40e3cc:	fwait
  40e3cd:	je     0x40e35d
  40e3cf:	adc    ebx,DWORD PTR ds:0x9b1559ff
  40e3d5:	je     0x40e425
  40e3d7:	mov    ds:0x43c3fee5,al
  40e3dc:	stos   BYTE PTR es:[edi],al
  40e3dd:	imul   eax,DWORD PTR [ecx+0x1d],0xffffff9b
  40e3e1:	inc    bl
  40e3e3:	and    ebp,DWORD PTR [edx-0x65133003]
  40e3e9:	sti    
  40e3ea:	or     ebx,DWORD PTR gs:[ebp-0x2]
  40e3ee:	and    DWORD PTR [ebx-0x5a],esp
  40e3f1:	call   0xfd8b:0x2e00527
  40e3f8:	xchg   esi,eax
  40e3f9:	adc    BYTE PTR [eax],al
	...
  40e40b:	add    BYTE PTR [edx],cl
  40e40d:	ss adc eax,0x1ec1ee0c
  40e413:	fwait
  40e414:	clc    
  40e415:	xchg   ebp,eax
  40e416:	mov    al,0xc5
  40e418:	xchg   ebp,eax
  40e419:	bound  ebx,QWORD PTR [edi+ecx*4]
  40e41c:	std    
  40e41d:	loope  0x40e3c2
  40e41f:	xchg   edi,eax
  40e420:	dec    eax
  40e421:	enter  0x2de7,0x9d
  40e425:	xor    eax,0x5fbe0bd5
  40e42a:	mov    esi,0xa4ebc89a
  40e42f:	xchg   edi,eax
  40e430:	or     al,0x78
  40e432:	cli    
  40e433:	jmp    0x40e48b
  40e435:	bound  esp,QWORD PTR [edi-0x26]
  40e438:	mov    cl,0xb1
  40e43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e43b:	sub    esp,eax
  40e43d:	sahf   
  40e43e:	test   al,0x3
  40e440:	dec    ecx
  40e441:	dec    edx
  40e442:	mov    eax,0xf33599e7
  40e447:	ret    
  40e448:	add    eax,0x4abbe82
  40e44d:	ret    0x9a0e
  40e450:	mov    WORD PTR [edx],fs
  40e452:	jl     0x40e450
  40e454:	leave  
  40e455:	retf   0x3e7
  40e458:	xor    esp,0xa3d5c37f
  40e45e:	out    0x33,eax
  40e460:	popa   
  40e461:	scas   eax,DWORD PTR es:[edi]
  40e462:	out    dx,eax
  40e463:	stos   DWORD PTR es:[edi],eax
  40e464:	div    BYTE PTR [esi+ebx*8+0x30e73999]
  40e46b:	cdq    
  40e46c:	dec    eax
  40e46d:	ss sbb eax,esp
	...
  40e480:	add    BYTE PTR [eax],al
  40e482:	(bad)  
  40e483:	xor    al,0xc7
  40e485:	cdq    
  40e486:	cmp    BYTE PTR [eax],dh
  40e488:	mov    ds,esp
  40e48a:	cwde   
  40e48b:	scas   eax,DWORD PTR es:[edi]
  40e48c:	add    BYTE PTR [ecx-0x510351f1],ch
  40e492:	xchg   ecx,eax
  40e493:	push   0xffffffe8
  40e495:	fwait
  40e496:	fs xor eax,0x22dd3efe
  40e49c:	add    eax,0xece9b8e9
  40e4a1:	push   0xffffffd6
  40e4a3:	cmp    al,0x82
  40e4a5:	les    ebx,FWORD PTR [ebp-0x6a16c07c]
  40e4ab:	scas   eax,DWORD PTR es:[edi]
  40e4ac:	add    al,0xa0
  40e4ae:	shr    BYTE PTR [eax+0x0],1
  40e4b1:	add    ebx,DWORD PTR [edx-0x12cff38]
  40e4b7:	xor    esi,DWORD PTR [ebp+ebp*8-0x7d]
  40e4bb:	bound  ebp,QWORD PTR [edx-0x17]
  40e4be:	std    
  40e4bf:	jle    0x40e4ea
  40e4c1:	jmp    0x4184d05b
  40e4c6:	pop    ds
  40e4c7:	scas   al,BYTE PTR es:[edi]
  40e4c8:	clc    
  40e4c9:	push   ecx
  40e4ca:	fs fwait
  40e4cc:	std    
  40e4cd:	ss sbb eax,0x912efc9e
  40e4d3:	cmp    bh,dh
  40e4d5:	pushf  
  40e4d6:	add    ebx,ecx
  40e4d8:	std    
  40e4d9:	push   ds
  40e4da:	mov    eax,ds:0xbbe96a66
  40e4df:	(bad)  
  40e4e0:	call   0xfe7557ca
  40e4e5:	je     0x40e4e7
	...
  40e4f7:	add    BYTE PTR [ecx-0x6a6caed2],bh
  40e4fd:	enter  0x8300,0x63
  40e501:	retf   0xee00
  40e504:	nop
  40e505:	ss (bad) 
  40e507:	cld    
  40e508:	jge    0x40e48e
  40e50a:	aas    
  40e50b:	jmp    0x614ed8e0
  40e510:	sbb    eax,0x12e9fe34
  40e515:	(bad)  
  40e516:	hlt    
  40e517:	add    ah,al
  40e519:	sub    eax,0x6fef458d
  40e51e:	push   0x0
  40e520:	aad    0x2c
  40e522:	push   0x41d3d700
  40e527:	inc    ecx
  40e528:	das    
  40e529:	(bad)  [esp+esi*8+0x30]
  40e52d:	outs   dx,BYTE PTR ds:[esi]
  40e52e:	adc    BYTE PTR [ebp-0xa2a7c1],al
  40e534:	stos   BYTE PTR es:[edi],al
  40e535:	into   
  40e536:	in     eax,0xab
  40e538:	lahf   
  40e539:	fsin   
  40e53b:	mov    DWORD PTR [edx-0x143ff4fa],edi
  40e541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e542:	std    
  40e543:	jne    0x40e55c
  40e545:	or     ch,ch
  40e547:	pop    eax
  40e548:	jo     0x40e524
  40e54a:	mov    BYTE PTR [ebp+0x63],al
  40e54d:	fidiv  DWORD PTR [eax+esi*8+0x57]
  40e551:	lea    ecx,[edi-0x1]
  40e554:	push   eax
  40e555:	fidiv  DWORD PTR [eax+ebp*8+0x50]
  40e559:	fs in  al,dx
  40e55b:	inc    DWORD PTR [eax]
	...
  40e56d:	add    dl,ch
  40e56f:	iret   
  40e570:	in     eax,0x2c
  40e572:	push   cs
  40e573:	(bad)  
  40e575:	or     ebp,DWORD PTR [edi+0x63]
  40e578:	sbb    DWORD PTR [eax-0x51],ebp
  40e57b:	pop    edi
  40e57c:	in     eax,dx
  40e57d:	mov    esi,0xe80864b0
  40e582:	push   0xffffff84
  40e584:	std    
  40e585:	call   DWORD PTR [eax-0x500179c]
  40e58b:	sti    
  40e58c:	(bad)  
  40e58d:	jne    0x40e5f6
  40e58f:	pop    es
  40e590:	pop    ebp
  40e591:	push   ebp
  40e592:	pusha  
  40e593:	retf   
  40e594:	(bad)  
  40e595:	jne    0x40e5fa
  40e597:	or     BYTE PTR [eax+ebx*2+0x75fecb70],dl
  40e59e:	outs   dx,DWORD PTR ds:[esi]
  40e59f:	push   es
  40e5a0:	sti    
  40e5a1:	dec    edi
  40e5a2:	xchg   esi,eax
  40e5a3:	or     al,0x96
  40e5a5:	mov    ch,bl
  40e5a7:	or     eax,0x7639118a
  40e5ac:	nop
  40e5ad:	inc    ah
  40e5af:	xor    DWORD PTR [edi+0x1a212a74],edx
  40e5b5:	pop    eax
  40e5b6:	and    DWORD PTR [esp+ecx*8],eax
  40e5b9:	ror    DWORD PTR [edx+0x28b3149],0xd4
  40e5c0:	(bad)  
  40e5c2:	dec    BYTE PTR [edi+0x4001ff38]
  40e5c8:	ret    0xaf73
  40e5cb:	push   ecx
  40e5cc:	retf   0x5743
  40e5cf:	dec    ecx
  40e5d0:	xor    ch,al
	...
  40e5e2:	add    BYTE PTR [eax],al
  40e5e4:	inc    esi
  40e5e5:	dec    ebp
  40e5e6:	xchg   ebp,eax
  40e5e7:	inc    BYTE PTR [esi+0x61]
  40e5ea:	inc    ebx
  40e5eb:	mov    edi,0x2a4956
  40e5f0:	xchg   esi,eax
  40e5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f2:	push   esi
  40e5f3:	addr16 mov dh,0x4
  40e5f6:	inc    ebp
  40e5f7:	add    BYTE PTR [esi-0x5c],ah
  40e5fa:	invd   
  40e5fc:	scas   al,BYTE PTR es:[edi]
  40e5fd:	adc    BYTE PTR [ebx],bl
  40e5ff:	push   DWORD PTR [ecx-0x56a82a70]
  40e605:	imul   edx,DWORD PTR [ebp+0x7ea19274],0x5b
  40e60c:	cdq    
  40e60d:	jnp    0x40e618
  40e60f:	ror    BYTE PTR [edx],0x13
  40e612:	sub    dl,cl
  40e614:	sar    dl,cl
  40e616:	add    DWORD PTR [eax+0x6e],edx
  40e619:	xor    eax,0xcc79ff36
  40e61e:	sub    DWORD PTR [ecx+0x31],eax
  40e621:	cld    
  40e622:	add    DWORD PTR [eax-0x6a],ebp
  40e625:	cmp    esp,DWORD PTR [edi+0x405beebd]
  40e62b:	inc    ecx
  40e62c:	xchg   esi,eax
  40e62d:	bound  esi,QWORD PTR [edi]
  40e62f:	xchg   edi,eax
  40e630:	retf   0xcf5a
  40e633:	ror    ah,cl
  40e635:	xor    edi,edx
  40e637:	stos   DWORD PTR es:[edi],eax
  40e638:	(bad)
  40e63c:	dec    esi
  40e63d:	and    eax,0xddcb03f0
  40e642:	retf   
  40e643:	adc    BYTE PTR [ebp+0x2f],0x42
  40e647:	add    al,0x0
	...
  40e659:	add    BYTE PTR [esi+ebp*2+0x3a8e10ae],ch
  40e660:	aam    0x30
  40e662:	adc    DWORD PTR [edx],esi
  40e664:	jno    0x40e6a6
  40e666:	or     bh,BYTE PTR [ebp+0x5a8a96f1]
  40e66c:	jg     0x40e681
  40e66e:	stc    
  40e66f:	xor    DWORD PTR [edi-0xace4ad7],eax
  40e675:	or     edi,esi
  40e677:	enter  0x9676,0xe0
  40e67b:	mov    esp,0x5a6296cb
  40e680:	dec    edi
  40e681:	aaa    
  40e682:	shl    DWORD PTR [ecx],1
  40e684:	pop    edi
  40e685:	xchg   esi,eax
  40e686:	inc    edx
  40e687:	cs push edi
  40e689:	adc    BYTE PTR [esi-0x46cf59c6],cl
  40e68f:	xor    DWORD PTR [ecx],esi
  40e691:	rcl    DWORD PTR [ebp-0x42756b9e],0x31
  40e698:	mov    ebp,0x8b5aae07
  40e69d:	xchg   esi,eax
  40e69e:	cwde   
  40e69f:	pop    ebp
  40e6a0:	daa    
  40e6a1:	btc    DWORD PTR [edx+0x62d73f16],0xb7
  40e6a9:	stos   DWORD PTR es:[edi],eax
  40e6aa:	and    cl,BYTE PTR [ebp-0x453669f2]
  40e6b0:	out    0x3,eax
  40e6b2:	xor    eax,0xa3d3098f
  40e6b8:	add    cl,ch
  40e6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6bb:	xor    DWORD PTR [ecx+eiz*8+0x0],esi
	...
  40e6cf:	add    BYTE PTR ds:0x2be67cc6,ch
  40e6d5:	dec    ecx
  40e6d6:	nop
  40e6d7:	and    esi,DWORD PTR ss:[eax]
  40e6da:	enter  0x92ab,0x62
  40e6de:	push   ebx
  40e6df:	(bad)  
  40e6e0:	out    dx,al
  40e6e1:	jecxz  0x40e6a7
  40e6e3:	lds    edi,FWORD PTR [edx+eiz*2+0x6a]
  40e6e7:	cld    
  40e6e8:	add    dh,BYTE PTR [esi-0x6a383ef8]
  40e6ee:	std    
  40e6ef:	scas   al,BYTE PTR es:[edi]
  40e6f0:	or     eax,0xc13fca6
  40e6f5:	xor    BYTE PTR [ecx+esi*8+0x3d],dh
  40e6f9:	sti    
  40e6fa:	std    
  40e6fb:	xchg   esi,eax
  40e6fc:	sub    edi,DWORD PTR [ebx+0x5a898e21]
  40e702:	call   0xfe70f250
  40e707:	adc    ebp,esi
  40e709:	das    
  40e70a:	je     0x40e6ed
  40e70c:	sub    eax,0x36efdd7
  40e711:	xor    BYTE PTR [ebp+eiz*2+0x2b],dh
  40e715:	mov    dh,0x8
  40e717:	push   ecx
  40e718:	rcl    DWORD PTR [ebp+edi*8+0x522cd56],1
  40e71f:	jmp    0x6b2dc48c
  40e724:	(bad)  
  40e725:	cmp    BYTE PTR [esi-0x2d],dl
  40e728:	xchg   ebp,eax
  40e729:	mov    esp,0x5a91363e
  40e72e:	call   0xfe7250ec
  40e733:	jo     0x40e735
	...
  40e745:	add    cl,dl
  40e747:	cs mov bl,ah
  40e74a:	data16 mov BYTE PTR [edi],bh
  40e74d:	jmp    0x95415867
  40e752:	mov    edx,0x420012ba
  40e757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e758:	add    BYTE PTR [edi-0x79],dl
  40e75b:	mov    DWORD PTR [eax],ebp
  40e75d:	add    BYTE PTR [edi+0x5b],ch
  40e760:	shl    BYTE PTR [ebp+edx*2+0x7f],0xe8
  40e765:	(bad)  
  40e767:	aad    0xfe
  40e769:	or     edi,edi
  40e76b:	pop    edi
  40e76c:	and    BYTE PTR [ecx+0x65ce72],cl
  40e772:	das    
  40e773:	pop    es
  40e774:	mov    esp,0x3f713468
  40e779:	add    al,ch
  40e77b:	pusha  
  40e77c:	clc    
  40e77d:	jmp    DWORD PTR [edx+0x5e]
  40e780:	call   0xff164c4d
  40e785:	push   DWORD PTR [edx-0x3e0e1a32]
  40e78b:	aad    0xfe
  40e78d:	cld    
  40e78e:	fsub   QWORD PTR [ebx]
  40e790:	mov    ecx,0xfed708ff
  40e795:	repnz dec ecx
  40e797:	or     eax,DWORD PTR [edi]
  40e799:	jne    0x40e7f1
  40e79b:	(bad)  
  40e79c:	je     0x40e79a
  40e79e:	push   0x81e80860
  40e7a3:	jb     0x40e7a2
  40e7a5:	(bad)  
  40e7a6:	fcomp  DWORD PTR [eax+eax*8]
  40e7a9:	add    al,0x0
	...
  40e7bb:	add    BYTE PTR [edi+0x2cec8980],bh
  40e7c1:	out    dx,eax
  40e7c2:	loope  0x40e81b
  40e7c4:	aad    0x63
  40e7c6:	push   0x3f
  40e7c8:	pop    eax
  40e7c9:	pusha  
  40e7ca:	or     al,ch
  40e7cc:	push   edi
  40e7cd:	jb     0x40e7cc
  40e7cf:	push   DWORD PTR [esi]
  40e7d1:	jo     0x40e7cf
  40e7d3:	mov    ebp,DWORD PTR [edx+0x7f412612]
  40e7d9:	jecxz  0x40e819
  40e7db:	add    BYTE PTR [ebx],ah
  40e7dd:	outs   dx,BYTE PTR ds:[esi]
  40e7de:	push   0x42fe9620
  40e7e3:	add    cl,ah
  40e7e5:	popa   
  40e7e6:	inc    eax
  40e7e7:	sub    DWORD PTR [esi-0x1d3ff6c7],edx
  40e7ed:	adc    ebp,DWORD PTR ds:0x94d9f8e8
  40e7f3:	dec    BYTE PTR [ebp+0x1f200d79]
  40e7f9:	jle    0x40e787
  40e7fb:	addr16 xchg esi,eax
  40e7fd:	cmp    DWORD PTR [ebx+0x4762aebd],esp
  40e803:	inc    ecx
  40e804:	xchg   esi,eax
  40e805:	and    BYTE PTR [eax],bl
  40e807:	clc    
  40e808:	xor    DWORD PTR [esi-0x4],ebp
  40e80b:	out    0xc6,eax
  40e80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80e:	xchg   ecx,eax
  40e80f:	(bad)  
  40e810:	and    DWORD PTR [esi-0x74],ebp
  40e813:	out    0x9f,eax
  40e815:	push   edi
  40e816:	xchg   ecx,eax
  40e817:	(bad)  
  40e818:	adc    cl,BYTE PTR [edx+eax*8]
  40e81b:	mov    eax,0xfe91d009
	...
  40e830:	add    BYTE PTR [eax],al
  40e832:	add    al,0xa7
  40e834:	int3   
  40e835:	push   es
  40e836:	adc    DWORD PTR [edx-0x2769ffe4],0x52
  40e83d:	addr16 mov edi,0x6e004386
  40e843:	mov    ebx,0xc0964147
  40e848:	pop    ss
  40e849:	or     BYTE PTR [esi-0x3600f0ea],bh
  40e84f:	adc    al,BYTE PTR [edx]
  40e851:	push   0x44fe84
  40e856:	dec    BYTE PTR cs:[eax+0x41]
  40e85a:	xchg   esi,eax
  40e85b:	test   al,0xd7
  40e85d:	sbb    DWORD PTR [edi-0x6],edi
  40e860:	add    eax,ebp
  40e862:	dec    ebx
  40e863:	rcl    BYTE PTR [edx-0x61f9f002],cl
  40e869:	imul   edx,DWORD PTR [esi-0x2d2d709e],0xe31be7a3
  40e873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e874:	test   al,0x3
  40e876:	jns    0x40e8f0
  40e878:	icebp  
  40e879:	(bad)  
  40e87b:	bound  ecx,QWORD PTR [edi]
  40e87d:	iret   
  40e87e:	into   
  40e87f:	sub    eax,0x36da7cff
  40e884:	add    BYTE PTR [ebx],0xee
  40e887:	cdq    
  40e888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e889:	inc    esp
  40e88a:	xchg   esi,eax
  40e88b:	mov    edx,0x62d74944
  40e890:	(bad)  
  40e892:	lahf   
  40e893:	jnp    0x40e8bd
  40e895:	add    al,0x0
	...
  40e8a7:	add    BYTE PTR [esi],ch
  40e8a9:	test   BYTE PTR [eax],dh
  40e8ab:	xchg   ebx,eax
  40e8ac:	xor    ah,bl
  40e8ae:	sub    al,0x94
  40e8b0:	sbb    ch,BYTE PTR [eax-0x6951cc3d]
  40e8b6:	sub    al,0x45
  40e8b8:	xchg   esi,eax
  40e8b9:	mov    edx,0x6257490c
  40e8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8bf:	fsubr  DWORD PTR [edi-0x11fbd785]
  40e8c5:	xor    BYTE PTR [bp+di-0x2408],dl
  40e8ca:	and    al,0x9c
  40e8cc:	adc    al,0xb0
  40e8ce:	jnp    0x40e8d3
  40e8d0:	bound  ebx,QWORD PTR [edx+0x62e6106a]
  40e8d6:	sti    
  40e8d7:	inc    ebp
  40e8d8:	adc    eax,0x4a037bb0
  40e8dd:	outs   dx,BYTE PTR ds:[esi]
  40e8de:	iret   
  40e8df:	add    al,0x96
  40e8e1:	cmp    eax,0x5a4a929e
  40e8e6:	aas    
  40e8e7:	aaa    
  40e8e8:	fs sub eax,0x362a924f
  40e8ee:	inc    edi
  40e8ef:	sbb    BYTE PTR [esi-0x5eca6cc6],bl
  40e8f5:	sub    eax,0x327e3601
  40e8fa:	(bad)  
  40e8fb:	mov    ah,0x8d
  40e8fd:	inc    ebp
  40e8fe:	mov    eax,ds:0xfe2c24bb
  40e903:	xchg   esp,eax
  40e904:	and    DWORD PTR [esp+esi*2],ebp
  40e907:	loope  0x40e926
  40e909:	(bad)  
  40e90a:	push   edx
  40e90b:	push   cs
	...
  40e91c:	add    BYTE PTR [eax],al
  40e91e:	add    al,0x2c
  40e920:	je     0x40e92f
  40e922:	add    al,0xb6
  40e924:	call   0xe89b7327
  40e929:	xchg   edx,eax
  40e92a:	mov    ds:0xa9eefe2d,eax
  40e92f:	ds jmp 0xfe6e6ab2
  40e935:	fisubr WORD PTR [ecx-0x7e9a16ca]
  40e93b:	sub    eax,0x3289cefe
  40e940:	jmp    0xfe6e4ab2
  40e945:	mov    esi,0x35e93a89
  40e94a:	popa   
  40e94b:	sub    eax,0x2ea9aefe
  40e950:	(bad)  
  40e951:	sbb    al,0xa
  40e953:	inc    ebp
  40e954:	out    dx,al
  40e955:	cmp    esp,DWORD PTR [edi]
  40e957:	sub    al,0x5e
  40e959:	mov    al,ds:0x340060d0
  40e95e:	jae    0x40e999
  40e960:	sub    BYTE PTR [ebp+0x1300bb06],0x5a
  40e967:	sub    eax,0xd2fde174
  40e96c:	push   edx
  40e96d:	outs   dx,BYTE PTR ds:[esi]
  40e96e:	daa    
  40e96f:	fiadd  DWORD PTR [ebx+0x65]
  40e972:	test   al,0x62
  40e974:	push   0xffffffe9
  40e976:	popf   
  40e977:	rol    DWORD PTR [ebx-0x58],cl
  40e97a:	xchg   ebp,eax
  40e97b:	mov    edx,0xe295e900
  40e980:	call   0x40e985
	...
  40e991:	add    BYTE PTR [eax],al
  40e993:	add    bl,dh
  40e995:	js     0x40e994
  40e997:	jmp    DWORD PTR [eax+eiz*1-0x3700dc8e]
  40e99e:	add    bl,BYTE PTR [edi-0x40]
  40e9a1:	ror    DWORD PTR [edx],1
  40e9a3:	shr    BYTE PTR [ebx],0x39
  40e9a6:	dec    esi
  40e9a7:	push   0xbeed606f
  40e9ac:	pop    ss
  40e9ad:	lods   al,BYTE PTR ds:[esi]
  40e9ae:	inc    esp
  40e9af:	inc    ecx
  40e9b0:	jg     0x40ea22
  40e9b2:	std    
  40e9b3:	jne    0x40ea1c
  40e9b5:	enter  0x79f0,0x60
  40e9b9:	shl    ebp,cl
  40e9bb:	sbb    eax,0xfffed2fa
  40e9c0:	retf   0xfedb
  40e9c3:	jne    0x40ea0c
  40e9c5:	enter  0x528d,0x60
  40e9c9:	ror    eax,cl
  40e9cb:	ret    0x602b
  40e9ce:	push   ebx
  40e9cf:	mov    esi,ebx
  40e9d1:	out    0xc1,al
  40e9d3:	cld    
  40e9d4:	mov    BYTE PTR [eax+eax*1+0x6a],cl
  40e9d8:	outs   dx,BYTE PTR ds:[esi]
  40e9d9:	shl    DWORD PTR [eax+ecx*1+0x57],1
  40e9dd:	pop    ss
  40e9de:	push   eax
  40e9df:	inc    DWORD PTR [eax-0x57]
  40e9e2:	inc    esp
  40e9e3:	cld    
  40e9e4:	test   BYTE PTR [ebx+esi*1],bl
  40e9e7:	sub    BYTE PTR [esi-0x10c07f9a],ch
  40e9ed:	push   ebx
  40e9ee:	inc    eax
  40e9ef:	push   0x3fa4b0
  40e9f4:	mov    dh,cl
  40e9f6:	jnp    0x40ea1f
	...
  40ea08:	add    BYTE PTR [eax],al
  40ea0a:	out    dx,eax
  40ea0b:	pop    edi
  40ea0c:	or     eax,eax
  40ea0e:	fild   DWORD PTR [esi+0x57]
  40ea11:	call   0x3e5b74
  40ea16:	les    ebx,FWORD PTR [edi]
  40ea18:	jb     0x40ea33
  40ea1a:	inc    DWORD PTR [edi+0x0]
  40ea1d:	add    BYTE PTR [esi-0x1498b05c],dl
  40ea23:	push   es
  40ea24:	inc    ebx
  40ea25:	add    BYTE PTR [esi-0x5c],al
  40ea28:	push   ss
  40ea29:	or     BYTE PTR [esi-0x6600f544],ch
  40ea2f:	mov    eax,ds:0x7c91534c
  40ea34:	lea    esi,[edx]
  40ea36:	push   esi
  40ea37:	ret    0xfe90
  40ea3a:	or     DWORD PTR [ebx+edx*4-0x53],0xc0173cbe
  40ea42:	jno    0x40ea1a
  40ea44:	(bad)  
  40ea45:	(bad)  
  40ea46:	jecxz  0x40ea79
  40ea48:	call   0x4f5e:0x8e2cc41f
  40ea4f:	ja     0x40ea56
  40ea51:	add    bl,ch
  40ea53:	rcr    BYTE PTR [ebp+0x36455282],0x6a
  40ea5a:	xchg   esi,eax
  40ea5b:	pop    DWORD PTR [edx-0x1]
  40ea5e:	ret    
  40ea5f:	inc    ecx
  40ea60:	call   0xd388:0x8e1cc7c1
  40ea67:	and    eax,0x51653c7a
  40ea6c:	inc    ebx
	...
  40ea7d:	add    BYTE PTR [eax],al
  40ea7f:	add    BYTE PTR [esi],dl
  40ea81:	xor    al,0x2
  40ea83:	je     0x40eadb
  40ea85:	mov    eax,ds:0x395744c7
  40ea8a:	aaa    
  40ea8b:	call   0x430f23
  40ea90:	(bad)  
  40ea91:	stc    
  40ea92:	sbb    BYTE PTR [ebx],ah
  40ea94:	dec    ecx
  40ea95:	loope  0x40ea6b
  40ea97:	pop    ebp
  40ea98:	jmp    0x6b00e480
  40ea9d:	inc    edx
  40ea9e:	xor    ch,BYTE PTR [eax-0x6a]
  40eaa1:	cmp    DWORD PTR [edi+0x47cd3ebd],ebx
  40eaa7:	inc    ecx
  40eaa8:	xchg   esi,eax
  40eaa9:	bound  esi,QWORD PTR [edi+0x4f5a4a8e]
  40eaaf:	out    dx,al
  40eab0:	sub    edx,DWORD PTR ds:[edi-0x64]
  40eab4:	pop    edi
  40eab5:	xchg   esi,eax
  40eab6:	dec    esi
  40eab7:	(bad)  
  40eab8:	lods   eax,DWORD PTR ds:[esi]
  40eab9:	outs   dx,BYTE PTR ds:[esi]
  40eaba:	daa    
  40eabb:	dec    ebp
  40eabc:	mov    al,ds:0xa78f3f2a
  40eac1:	sti    
  40eac2:	out    dx,eax
  40eac3:	push   es
  40eac4:	or     esp,DWORD PTR [ebx]
  40eac6:	ret    0x71e2
  40eac9:	fistp  QWORD PTR [edi+0x275e808e]
  40eacf:	sbb    BYTE PTR [edx-0x28b6c246],dh
  40ead5:	bound  esi,QWORD PTR [edi+0x68a8e9b]
  40eadb:	(bad)  
  40eadc:	sar    DWORD PTR [edx-0x1696fc19],1
  40eae2:	jg     0x40eaa3
	...
  40eaf4:	add    BYTE PTR [eax],al
  40eaf6:	fisub  DWORD PTR [ebx-0x4fb6cc19]
  40eafc:	out    dx,eax
  40eafd:	fwait
  40eafe:	ss stos DWORD PTR es:[edi],eax
  40eb00:	fimul  WORD PTR [esi-0x70c4a7cf]
  40eb06:	xor    BYTE PTR [ebp-0x753d63f6],bh
  40eb0c:	(bad)  
  40eb0d:	mov    cs,WORD PTR [edx+eiz*1+0x8b1e834]
  40eb14:	sub    eax,0xbf929645
  40eb19:	cdq    
  40eb1a:	pusha  
  40eb1b:	sub    DWORD PTR [edi-0x189d91cd],esp
  40eb21:	sahf   
  40eb22:	cmp    edi,DWORD PTR [ebx+0x625748a3]
  40eb28:	aaa    
  40eb29:	(bad)  
  40eb2a:	bound  ebx,QWORD PTR [edx-0x71]
  40eb2d:	push   ecx
  40eb2e:	imul   ebp,DWORD PTR [ecx],0x95bb9b7f
  40eb34:	add    BYTE PTR [esi+0x20],dh
  40eb37:	sub    DWORD PTR [ebp+ebp*2+0x18],esi
  40eb3b:	scas   eax,DWORD PTR es:[edi]
  40eb3c:	or     BYTE PTR [ecx-0x76],dl
  40eb3f:	xchg   ebx,eax
  40eb40:	std    
  40eb41:	pop    esi
  40eb42:	push   0x95edc31b
  40eb47:	(bad)
  40eb4b:	es icebp 
  40eb4d:	je     0x40eb9d
  40eb4f:	xor    dl,BYTE PTR [ecx+0x3e]
  40eb52:	jle    0x40ebaa
  40eb54:	call   0xfe6aadf7
  40eb59:	loop   0x40eb5b
	...
  40eb6b:	add    BYTE PTR [ebp-0x4b],dl
  40eb6e:	xor    ch,BYTE PTR [edx-0x5a]
  40eb71:	add    edx,DWORD PTR es:[edi+0x1143dc74]
  40eb78:	mov    ebx,0x77bd38e3
  40eb7d:	scas   al,BYTE PTR es:[edi]
  40eb7e:	pop    ss
  40eb7f:	push   es
  40eb80:	jle    0x40ebd4
  40eb82:	std    
  40eb83:	je     0x40ebe2
  40eb85:	inc    ecx
  40eb86:	daa    
  40eb87:	cdq    
  40eb88:	and    BYTE PTR [eax],ch
  40eb8a:	(bad)  
  40eb8b:	je     0x40eba6
  40eb8d:	sub    BYTE PTR [ecx+eiz*8+0x13],dh
  40eb91:	scas   al,BYTE PTR es:[edi]
  40eb92:	or     cl,dl
  40eb94:	js     0x40eb28
  40eb96:	std    
  40eb97:	(bad)  
  40eb98:	mov    cl,0x9e
  40eb9a:	lock cmp DWORD PTR [edx],ecx
  40eb9d:	out    dx,al
  40eb9e:	push   edi
  40eb9f:	(bad)  
  40eba0:	adc    ebx,DWORD PTR [edx]
  40eba2:	ret    
  40eba3:	in     eax,dx
  40eba4:	xchg   ebp,eax
  40eba5:	(bad)
  40eba9:	and    eax,0xbc9243f9
  40ebae:	inc    ecx
  40ebaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb0:	test   eax,0xc251e85a
  40ebb5:	sub    esi,edi
  40ebb7:	pusha  
  40ebb8:	pop    ecx
  40ebb9:	es imul ebp,ecx,0xffffff8f
  40ebbd:	bound  ebp,QWORD PTR [eax+0x0]
  40ebc0:	or     esp,DWORD PTR [ecx+0x6487003f]
  40ebc6:	add    BYTE PTR [eax],al
  40ebc8:	aas    
  40ebc9:	(bad)  
  40ebca:	outs   dx,DWORD PTR ds:[esi]
  40ebcb:	push   esi
  40ebcc:	cmp    bh,dl
  40ebce:	or     al,al
	...
  40ebe0:	add    BYTE PTR [eax],al
  40ebe2:	jecxz  0x40ebf9
  40ebe4:	mov    DWORD PTR [ebp+0x37],eax
  40ebe7:	inc    esi
  40ebe8:	cmp    BYTE PTR [esi-0x2],al
  40ebeb:	fs std 
  40ebed:	jne    0x40ec36
  40ebef:	(bad)  
  40ebf0:	fbld   TBYTE PTR ds:0xc00964af
  40ebf6:	jecxz  0x40ec39
  40ebf8:	push   DWORD PTR [ebp-0x39]
  40ebfb:	mov    BYTE PTR [edx],0x5d
  40ebfe:	mov    eax,0x8d684dd5
  40ec03:	sbb    bh,BYTE PTR [esi]
  40ec05:	add    BYTE PTR [edi],ah
  40ec07:	fs add bh,ch
  40ec0a:	leave  
  40ec0b:	dec    esp
  40ec0c:	add    BYTE PTR [eax-0x68],dl
  40ec0f:	dec    edi
  40ec10:	or     al,ch
  40ec12:	daa    
  40ec13:	dec    esi
  40ec14:	std    
  40ec15:	inc    DWORD PTR [edi+0x48ff5335]
  40ec1b:	xlat   BYTE PTR ds:[ebx]
  40ec1c:	je     0x40ec16
  40ec1e:	xchg   edi,eax
  40ec1f:	sub    eax,0xd738ff53
  40ec24:	je     0x40ec22
  40ec26:	pop    eax
  40ec27:	push   ecx
  40ec28:	or     al,ch
  40ec2a:	mov    ch,0x73
  40ec2c:	std    
  40ec2d:	push   esi
  40ec2f:	and    DWORD PTR [edx],eax
  40ec31:	add    BYTE PTR [edx-0xc7c1657],al
  40ec37:	xlat   BYTE PTR ds:[ebx]
  40ec38:	add    BYTE PTR [di-0x66],dl
  40ec3c:	std    
  40ec3d:	jne    0x40ec36
  40ec3f:	retf   
  40ec40:	sub    edx,DWORD PTR [eax+0x38]
  40ec43:	xlat   BYTE PTR ds:[ebx]
  40ec44:	mov    BYTE PTR [ebp+0x0],al
	...
  40ec57:	add    BYTE PTR [ebx],bl
  40ec59:	dec    esp
  40ec5a:	add    BYTE PTR [eax],al
  40ec5c:	xchg   esi,eax
  40ec5d:	loopne 0x40ecaa
  40ec5f:	addr16 pop ebp
  40ec61:	jg     0x40eca4
  40ec63:	add    BYTE PTR [esi+0x79],ch
  40ec66:	inc    esi
  40ec67:	inc    ecx
  40ec68:	xchg   esi,eax
  40ec69:	test   al,0x16
  40ec6b:	or     BYTE PTR [esi-0x3600eb59],bh
  40ec71:	mov    eax,0x6c1fc16
  40ec76:	cli    
  40ec77:	out    0x49,eax
  40ec79:	jmp    0x7c20eb0a
  40ec7e:	add    eax,0x9dc44300
  40ec83:	sbb    dl,0xa1
  40ec86:	sbb    DWORD PTR [eax],eax
  40ec88:	xchg   esi,eax
  40ec89:	cwde   
  40ec8a:	dec    ebx
  40ec8b:	dec    BYTE PTR [ebx]
  40ec8d:	inc    edx
  40ec8e:	call   0xbfe:0x8c78d942
  40ec95:	lea    esi,cs:[esi+ecx*4+0x51]
  40ec9a:	addr16 dec esi
  40ec9c:	jno    0x40ecee
  40ec9e:	mov    WORD PTR [esi+eax*4+0x58],?
  40eca2:	push   ss
  40eca3:	or     BYTE PTR [esi-0x50],ch
  40eca6:	cmp    al,0xff
  40eca8:	pop    ecx
  40eca9:	sub    BYTE PTR [eax+ebx*1],dl
  40ecac:	push   ecx
  40ecad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecae:	cmc    
  40ecaf:	inc    bl
  40ecb1:	inc    ecx
  40ecb2:	call   0xc67:0x8a40d154
  40ecb9:	jg     0x40ecfe
	...
  40eccb:	add    BYTE PTR [eax],al
  40eccd:	add    BYTE PTR [ecx],dh
  40eccf:	xchg   ah,dh
  40ecd1:	out    0x73,eax
  40ecd3:	pop    esi
  40ecd4:	add    al,0x0
  40ecd6:	(bad)  
  40ecd7:	stc    
  40ecd8:	pcmpgtw mm5,QWORD PTR [esi-0x69bebd4b]
  40ecdf:	and    DWORD PTR [edx],ecx
  40ece1:	and    edx,DWORD PTR [esi-0x1bb82c7]
  40ece7:	popa   
  40ece8:	vmread DWORD PTR [ebx-0x5f],edx
  40ecec:	out    0x8a,eax
  40ecee:	push   0x52
  40ecf0:	jg     0x40ecf5
  40ecf2:	mov    bl,0x62
  40ecf4:	out    0xfe,eax
  40ecf6:	and    DWORD PTR [esi+0x2a5306ed],ebp
  40ecfc:	jno    0x40ed3f
  40ecfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecff:	daa    
  40ed00:	std    
  40ed01:	repz mov cl,0xc4
  40ed04:	add    cl,BYTE PTR [ebx-0x74a01d40]
  40ed0a:	inc    ebp
  40ed0b:	outs   dx,BYTE PTR ds:[esi]
  40ed0c:	jo     0x40ed4f
  40ed0e:	mov    dl,0xb9
  40ed10:	call   0x4f28a618
  40ed15:	adc    DWORD PTR [esi-0x66c5cac6],ecx
  40ed1b:	es aas 
  40ed1d:	adc    DWORD PTR [edx+0x71fbbd25],esp
  40ed23:	jg     0x40ecc3
  40ed25:	mov    al,BYTE PTR [eax+0x78879d26]
  40ed2b:	mov    al,0xef
  40ed2d:	fwait
  40ed2e:	sub    BYTE PTR [ebp+0x8b16],dl
	...
  40ed44:	push   0xea8aefb0
  40ed49:	dec    esi
  40ed4a:	push   es
  40ed4b:	adc    DWORD PTR [esi+0x513a1f3a],ecx
  40ed51:	es and esi,eax
  40ed54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed55:	bound  edx,QWORD PTR [esi+edi*2-0x74541dd3]
  40ed5c:	jecxz  0x40ed3f
  40ed5e:	sbb    al,0x78
  40ed60:	and    DWORD PTR [ebx-0x595dfc19],0x6a
  40ed67:	enter  0x7519,0x28
  40ed6b:	add    al,0x96
  40ed6d:	scas   al,BYTE PTR es:[edi]
  40ed6e:	cmp    al,BYTE PTR [edi+0x10126d2]
  40ed74:	push   ebx
  40ed75:	bound  eax,QWORD PTR [eax]
  40ed77:	xor    eax,0xa5441da0
  40ed7c:	xchg   ebp,eax
  40ed7d:	bound  eax,QWORD PTR [eax]
  40ed7f:	jmp    0xea398c58
  40ed84:	xchg   ebp,eax
  40ed85:	bound  eax,QWORD PTR [eax]
  40ed87:	pop    esp
  40ed88:	push   esi
  40ed89:	es push ecx
  40ed8b:	je     0x40ede3
  40ed8d:	sub    dl,BYTE PTR [ecx+0x13]
  40ed90:	call   0xfd62:0x532f53ba
  40ed97:	aam    0x3d
  40ed99:	ja     0x40edda
  40ed9b:	jmp    0xaab5d358
  40eda0:	sbb    BYTE PTR [edi+0x6799e9f8],ah
  40eda6:	or     esp,0x0
	...
  40edb8:	add    BYTE PTR [eax],al
  40edba:	sbb    DWORD PTR [esi],esp
  40edbc:	jb     0x40edbc
  40edbe:	sbb    BYTE PTR [esi-0x7080ad04],ch
  40edc4:	mov    edi,edi
  40edc6:	sbb    al,0xaf
  40edc8:	sbb    BYTE PTR [esi],ch
  40edca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edcb:	inc    esi
  40edcc:	std    
  40edcd:	lahf   
  40edce:	jge    0x40edf4
  40edd0:	ja     0x40edab
  40edd2:	sbb    al,0xae
  40edd4:	or     BYTE PTR [ecx],al
  40edd6:	aas    
  40edd7:	daa    
  40edd8:	dec    BYTE PTR [esi]
  40edda:	scas   eax,DWORD PTR es:[edi]
  40eddb:	and    eax,0x1f10014c
  40ede0:	add    eax,0x12a9e6a
  40ede5:	jge    0x40ed7d
  40ede7:	loope  0x40ee27
  40ede9:	jmp    0x5d3efb94
  40edee:	push   cs
  40edef:	and    al,0x14
  40edf1:	ins    DWORD PTR es:[edi],dx
  40edf2:	dec    esp
  40edf3:	mov    ds:0x22ed3700,al
  40edf8:	add    eax,0xecd970e9
  40edfd:	add    BYTE PTR [edx+eiz*1+0x653853f2],ch
  40ee04:	clc    
  40ee05:	add    bh,bh
  40ee07:	pusha  
  40ee08:	add    bh,al
  40ee0a:	mov    edx,0xeffffdd2
  40ee0f:	pusha  
  40ee10:	std    
  40ee11:	jne    0x40ee02
  40ee13:	test   eax,0x4d2efc44
  40ee18:	cld    
  40ee19:	push   0xffffffef
  40ee1b:	inc    esi
  40ee1c:	add    BYTE PTR [edx+0x0],ch
	...
  40ee2f:	add    bh,ch
  40ee31:	inc    esi
  40ee32:	add    bh,bh
  40ee34:	retf   0xfedc
  40ee37:	jne    0x40edec
  40ee39:	inc    esi
  40ee3a:	add    BYTE PTR [edx-0x51],ch
  40ee3d:	enter  0x22c9,0xaf
  40ee41:	pusha  
  40ee42:	or     eax,eax
  40ee44:	retf   
  40ee45:	adc    ecx,DWORD PTR [esi+0x50]
  40ee48:	push   edi
  40ee49:	jl     0x40ee9a
  40ee4b:	call   DWORD PTR [eax-0x57]
  40ee4e:	inc    esp
  40ee4f:	clc    
  40ee50:	test   BYTE PTR [esi+0x0],0x6a
  40ee54:	jg     0x40eec7
  40ee56:	std    
  40ee57:	jne    0x40ee20
  40ee59:	fnstenv [esp+edi*8-0x50]
  40ee5d:	push   ebx
  40ee5e:	or     al,0x6a
  40ee60:	outs   dx,DWORD PTR ds:[esi]
  40ee61:	inc    esi
  40ee62:	add    al,ch
  40ee64:	fnstcw WORD PTR [esi+edi*8]
  40ee67:	push   DWORD PTR [eax+eiz*1+0x75]
  40ee6b:	seto   BYTE PTR [ebx-0x8]
  40ee6f:	call   0x3e5fbf
  40ee74:	js     0x40eed9
  40ee76:	clc    
  40ee77:	add    BYTE PTR [edi],bh
  40ee79:	pusha  
  40ee7a:	add    BYTE PTR [ebx+0x73fdd7b2],al
  40ee80:	sbb    ecx,0x55500874
  40ee86:	clc    
  40ee87:	call   0x25d022
  40ee8c:	and    DWORD PTR [ecx-0x3e],eax
  40ee8f:	jae    0x40eeea
  40ee91:	dec    ecx
  40ee92:	xchg   DWORD PTR [eax+eax*1+0x0],esi
	...
  40eea6:	sahf   
  40eea7:	adc    DWORD PTR ds:0x2b399622,eax
  40eead:	add    edx,edi
  40eeaf:	shr    BYTE PTR [ecx-0x36465316],0xc
  40eeb6:	imul   ebx,DWORD PTR ds:0x68e9ffc0,0xffffff9c
  40eebd:	in     eax,dx
  40eebe:	mov    bh,0x39
  40eec0:	add    cl,BYTE PTR [ebx]
  40eec2:	(bad)  
  40eec3:	and    eax,0xd1664fef
  40eec8:	(bad)  
  40eec9:	dec    edi
  40eeca:	leave  
  40eecb:	lods   al,BYTE PTR ds:[esi]
  40eecc:	jp     0x40ef12
  40eece:	retf   0x3152
  40eed1:	inc    DWORD PTR [ebx-0x7b]
  40eed4:	xor    al,0xe8
  40eed6:	xchg   ecx,eax
  40eed7:	jmp    0x8042:0x33bdfe88
  40eede:	pop    esi
  40eedf:	cmp    DWORD PTR [edi],ecx
  40eee1:	rcr    DWORD PTR [ecx+0x57e789e6],1
  40eee7:	leave  
  40eee8:	mov    dh,bh
  40eeea:	sbb    eax,0x4f5a8df6
  40eeef:	ja     0x40eee6
  40eef1:	jmp    edx
  40eef3:	mov    al,0x95
  40eef5:	sbb    BYTE PTR [edx+0x6d],0x2f
  40eef9:	push   edi
  40eefa:	adc    eax,0xd727860e
  40eeff:	cmp    DWORD PTR [edx],eax
  40ef01:	jne    0x40ee93
  40ef03:	cld    
  40ef04:	daa    
  40ef05:	leave  
  40ef06:	push   esp
  40ef07:	xor    eax,0x8d02
	...
  40ef1c:	shr    DWORD PTR [ecx],cl
  40ef1e:	xor    edi,edi
  40ef20:	retf   
  40ef21:	add    eax,0x62e0309a
  40ef26:	out    0x87,al
  40ef28:	pushf  
  40ef29:	and    ch,bh
  40ef2b:	jg     0x40efa7
  40ef2d:	popa   
  40ef2e:	out    0x3,eax
  40ef30:	pop    ss
  40ef31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef32:	retf   
  40ef33:	add    al,0x96
  40ef35:	push   edx
  40ef36:	out    0xf6,eax
  40ef38:	adc    al,0x4b
  40ef3a:	call   0x3d648542
  40ef3f:	mov    BYTE PTR [eax],al
  40ef41:	lods   eax,DWORD PTR ds:[esi]
  40ef42:	scas   eax,DWORD PTR es:[edi]
  40ef43:	pushf  
  40ef44:	cmp    eax,0x9c87a689
  40ef49:	and    ch,bh
  40ef4b:	adc    BYTE PTR [ebp-0x1efc189f],0xac
  40ef52:	mov    eax,DWORD PTR [edi+0x16102a62]
  40ef58:	pop    eax
  40ef59:	mov    eax,ds:0x23e49be7
  40ef5e:	ja     0x40eee7
  40ef60:	push   cs
  40ef61:	popf   
  40ef62:	jnp    0x40eeeb
  40ef64:	inc    edx
  40ef65:	adc    DWORD PTR es:[bp-0x4147],ebp
  40ef6b:	cmp    eax,0xc43f6257
  40ef70:	mov    ds:0x527d4f22,eax
  40ef75:	cmp    al,BYTE PTR [edi+0x11]
  40ef78:	xchg   edx,eax
  40ef79:	and    dh,BYTE PTR [ebp-0x52630e75]
  40ef7f:	inc    esp
	...
  40ef90:	add    BYTE PTR [eax],al
  40ef92:	xchg   esi,eax
  40ef93:	or     bh,BYTE PTR [ebp-0x7a]
  40ef96:	js     0x40efba
  40ef98:	jno    0x40efdb
  40ef9a:	jp     0x40ef82
  40ef9c:	pushf  
  40ef9d:	xchg   edi,eax
  40ef9e:	imul   esi,DWORD PTR [ecx+0x6b],0xe822615d
  40efa5:	sbb    dl,0xa
  40efa8:	call   0xe84305a3
  40efad:	add    edx,DWORD PTR [esi+0x217400e5]
  40efb3:	and    cl,BYTE PTR [edi]
  40efb5:	gs (bad) 
  40efb7:	and    esi,edi
  40efb9:	jmp    0xd22986d6
  40efbe:	and    al,0x43
  40efc0:	add    cl,ch
  40efc2:	pushf  
  40efc3:	xchg   esi,eax
  40efc4:	call   0xc92e032b
  40efc9:	cwde   
  40efca:	xor    dh,BYTE PTR [ebx-0x3057f017]
  40efd0:	cmp    al,0xf9
  40efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd3:	push   0x3c
  40efd5:	lock mov BYTE PTR [esi+0x2c],ah
  40efd9:	(bad)  [esi+eiz*2]
  40efdc:	sub    al,0x28
  40efde:	xchg   esi,eax
  40efdf:	ins    BYTE PTR es:[edi],dx
  40efe0:	adc    BYTE PTR [ebp+0x690a93c5],0x11
  40efe7:	pop    ebx
  40efe8:	jne    0x40efd6
  40efea:	adc    eax,0xcb92310e
  40efef:	mov    eax,ds:0x261a28ec
  40eff4:	or     ebp,DWORD PTR [ecx+0x0]
	...
  40f006:	add    BYTE PTR [eax],al
  40f008:	cmc    
  40f009:	or     ch,BYTE PTR gs:0x3009aa4f
  40f010:	xchg   BYTE PTR [eax],dh
  40f012:	pop    eax
  40f013:	pusha  
  40f014:	pop    esi
  40f015:	ds (bad) 
  40f017:	aam    0xfd
  40f019:	lock inc ebx
  40f01b:	dec    ecx
  40f01c:	push   eax
  40f01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f01e:	fsubr  st,st(1)
  40f020:	xchg   ebp,eax
  40f021:	bound  eax,QWORD PTR [eax]
  40f023:	fs (bad) 
  40f025:	ss push ecx
  40f027:	ret    
  40f028:	xchg   edx,eax
  40f029:	mov    WORD PTR [eax],es
  40f02b:	xchg   ebx,eax
  40f02c:	xchg   ebp,eax
  40f02d:	mov    WORD PTR [eax],es
  40f02f:	xchg   ebx,eax
  40f030:	xchg   ebp,eax
  40f031:	out    dx,eax
  40f032:	inc    ebx
  40f033:	xor    eax,0xd1421a5
  40f038:	cmp    eax,0x440000a2
  40f03d:	and    eax,0x6abc2272
  40f042:	fadd   DWORD PTR [eax]
  40f044:	ret    
  40f045:	or     edi,edi
  40f047:	jne    0x40efec
  40f049:	call   0x7179c8c2
  40f04e:	in     al,0xff
  40f050:	ret    0xfefa
  40f053:	jne    0x40f08c
  40f055:	std    
  40f056:	mov    esp,0xfee748fc
  40f05b:	jne    0x40f094
  40f05d:	(bad)  
  40f05e:	xchg   ebp,eax
  40f05f:	and    bh,bh
  40f061:	fs std 
  40f063:	jne    0x40f040
  40f065:	std    
  40f066:	ja     0x40f0b7
  40f068:	sub    bh,ah
  40f06a:	(bad)  
  40f06b:	jne    0x40f06d
	...
  40f07d:	add    BYTE PTR [edi],al
  40f07f:	(bad)  
  40f080:	outs   dx,DWORD PTR ds:[esi]
  40f081:	dec    edi
  40f082:	or     bh,ah
  40f084:	(bad)  
  40f085:	jne    0x40f09a
  40f087:	(bad)  
  40f088:	addr16 dec edi
  40f08a:	or     bh,ah
  40f08c:	mov    WORD PTR [ebp+0x4f],es
  40f08f:	push   esi
  40f090:	call   0xff289325
  40f095:	pop    edi
  40f096:	test   eax,0xaf0cbfdd
  40f09b:	dec    edi
  40f09c:	mov    esp,ebp
  40f09e:	cmp    al,0x22
  40f0a0:	cli    
  40f0a1:	push   0xffffffbf
  40f0a3:	jp     0x40f0e8
  40f0a5:	inc    edx
  40f0a7:	sbb    al,0xe6
  40f0a9:	cmp    ebx,0x4289fee5
  40f0af:	call   0xfcc866b2
  40f0b4:	pop    ds
  40f0b5:	std    
  40f0b6:	enter  0x67e5,0x5
  40f0ba:	xlat   BYTE PTR ds:[ebx]
  40f0bb:	mov    al,ds:0x19b8ff52
  40f0c0:	mov    esi,0x68546974
  40f0c5:	not    DWORD PTR [esi-0x11ffbbb0]
  40f0cb:	or     DWORD PTR [edx],eax
  40f0cd:	out    dx,eax
  40f0ce:	adc    dl,dh
  40f0d0:	xor    DWORD PTR [esi-0x29],eax
  40f0d3:	or     DWORD PTR [edx],esi
  40f0d5:	dec    ebx
  40f0d7:	add    DWORD PTR [edx-0x7aef3bc3],ebx
  40f0dd:	out    0x8b,eax
  40f0df:	pop    eax
  40f0e0:	cmp    esi,0x0
	...
  40f0f3:	add    BYTE PTR [ecx],ch
  40f0f5:	mov    bh,0x88
  40f0f7:	(bad)  
  40f0f8:	stos   DWORD PTR es:[edi],eax
  40f0f9:	add    DWORD PTR [edx-0x7acf3579],ebx
  40f0ff:	enter  0xdd4,0x2
  40f103:	push   ebp
  40f104:	sbb    eax,0x2c3812e
  40f109:	sbb    DWORD PTR [edx],0x83476c00
  40f10f:	je     0x40f0af
  40f111:	icebp  
  40f112:	fmul   DWORD PTR [ebx-0x17]
  40f115:	add    BYTE PTR [ebx+0x44],bh
  40f118:	loop   0x40f09e
  40f11a:	(bad)  
  40f11b:	xor    ch,BYTE PTR [esi-0x6e7ffbb6]
  40f121:	or     DWORD PTR [esi],ecx
  40f123:	push   ecx
  40f124:	ds mov esi,0x8096413b
  40f12a:	pushf  
  40f12b:	jne    0x40f1a4
  40f12d:	or     DWORD PTR [edx],eax
  40f12f:	or     edx,esi
  40f131:	cmp    eax,0x3199eb00
  40f136:	outs   dx,DWORD PTR ds:[esi]
  40f137:	inc    ebp
  40f138:	push   edi
  40f139:	or     DWORD PTR ds:0x46a33e8,ebp
  40f13f:	add    BYTE PTR [ebp-0x1edcf2b7],bl
  40f145:	mov    cl,0x79
  40f147:	push   edi
  40f148:	sbb    DWORD PTR [eax-0x8],0x323302bf
  40f14f:	push   0x94e76296
  40f154:	sub    ecx,DWORD PTR [edx+0x3d43]
	...
  40f16a:	xlat   BYTE PTR ds:[ebx]
  40f16b:	bound  esi,QWORD PTR [edi-0x951d7c]
  40f171:	or     al,0xc5
  40f173:	pop    ds
  40f174:	pop    es
  40f175:	fwait
  40f176:	imul   DWORD PTR [edi+0x533d83fe]
  40f17c:	daa    
  40f17d:	dec    edx
  40f17e:	cmp    BYTE PTR [edi],bl
  40f180:	out    dx,eax
  40f181:	and    DWORD PTR [edi],0xffffffd0
  40f184:	pop    ds
  40f185:	or     esp,DWORD PTR [ebx+0x1df9decf]
  40f18b:	pop    ds
  40f18c:	pop    ebp
  40f18d:	or     al,0x2e
  40f18f:	sbb    eax,DWORD PTR [bp+di-0x40f0]
  40f194:	mov    al,0x46
  40f196:	xchg   ebp,eax
  40f197:	bound  edx,QWORD PTR [edi+ecx*4]
  40f19a:	in     eax,dx
  40f19b:	loopne 0x40f148
  40f19d:	push   esp
  40f19e:	add    BYTE PTR [edi],bl
  40f1a0:	scas   eax,DWORD PTR es:[edi]
  40f1a1:	xchg   ecx,eax
  40f1a2:	pop    edx
  40f1a3:	push   ds
  40f1a4:	cmp    BYTE PTR [ebx-0x6618d9e],al
  40f1aa:	lea    ecx,[edx]
  40f1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ad:	and    al,0x96
  40f1af:	(bad)  
  40f1b1:	inc    ebx
  40f1b2:	mov    al,ds:0x9605bce5
  40f1b7:	bound  esp,QWORD PTR [esi-0x189e3637]
  40f1bd:	add    edx,DWORD PTR [esi-0x4f8bdad9]
  40f1c3:	out    0x3,ax
  40f1c6:	cmp    al,0x62
  40f1c8:	rol    DWORD PTR [ebx],1
  40f1ca:	sub    al,0x62
  40f1cc:	rol    DWORD PTR [ebx],0x0
	...
  40f1df:	add    BYTE PTR [ebx],cl
  40f1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e2:	push   edi
  40f1e3:	aam    0x22
  40f1e5:	call   0x1ec96d21
  40f1ea:	cwde   
  40f1eb:	or     BYTE PTR [edx],0x1b
  40f1ee:	add    DWORD PTR [esi],esi
  40f1f0:	jg     0x40f20c
  40f1f2:	jmp    0xa3ac46
  40f1f7:	repnz aad 0x91
  40f1fa:	add    edx,DWORD PTR [eax]
  40f1fc:	loop   0x40f260
  40f1fe:	add    cl,ch
  40f200:	ins    DWORD PTR es:[edi],dx
  40f201:	jmp    0x1dd69a2e
  40f206:	je     0x40f1e1
  40f208:	mov    ebp,0x14fe5022
  40f20d:	scas   al,BYTE PTR es:[edi]
  40f20e:	mov    DWORD PTR [ecx],ebx
  40f210:	daa    
  40f211:	out    0xf0,eax
  40f213:	not    BYTE PTR [ebx*1-0x2d45c4af]
  40f21a:	dec    edi
  40f21b:	ficom  WORD PTR [ebx+ebp*8]
  40f21e:	add    ebp,0xffffff9c
  40f221:	sbb    al,0xfe
  40f223:	rcr    DWORD PTR [esp+ebp*4-0x58d93903],0xf4
  40f22b:	sbb    edx,esi
  40f22d:	arpl   WORD PTR [ebp+0x28],ax
  40f230:	xchg   edx,eax
  40f231:	sbb    eax,0x1c6cbdb4
  40f236:	(bad)  
  40f237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f238:	out    dx,al
  40f239:	imul   ebp,eax,0xfe1ccaf1
  40f23f:	pusha  
  40f240:	push   cs
  40f241:	test   BYTE PTR ss:[esi+0x0],0x0
	...
  40f255:	add    BYTE PTR [esp+ecx*4],dl
  40f258:	add    BYTE PTR [ecx],dl
  40f25a:	cdq    
  40f25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f25c:	aas    
  40f25d:	jmp    0x7f2dc976
  40f262:	adc    al,0x1d
  40f264:	(bad)  
  40f265:	hlt    
  40f266:	mov    eax,ds:0x14b9ec0a
  40f26b:	sbb    eax,0x142d6488
  40f270:	(bad)  
  40f271:	push   esi
  40f272:	stos   DWORD PTR es:[edi],eax
  40f273:	sbb    eax,0xa25cf766
  40f278:	add    BYTE PTR [eax],al
  40f27a:	rcr    dl,1
  40f27c:	jmp    0xff21b378
  40f281:	jne    0x40f2f6
  40f283:	mov    edi,ecx
  40f285:	push   eax
  40f286:	shl    al,0x88
  40f289:	test   DWORD PTR [ebx-0xd000168],ebx
  40f28f:	jmp    0x684d:0xe080f7d1
  40f296:	adc    DWORD PTR [eax],ebp
  40f298:	inc    ecx
  40f299:	add    BYTE PTR [eax+0x40f7e9da],dl
  40f29f:	jecxz  0x40f29f
  40f2a1:	jne    0x40f2d6
  40f2a3:	mov    DWORD PTR [edi+0xae34050],ebp
  40f2a9:	ror    bl,0x79
  40f2ac:	cmp    DWORD PTR [ebp-0x16515],0xff0e142b
  40f2b6:	scas   eax,DWORD PTR es:[edi]
  40f2b7:	repz test al,ah
	...
  40f2ca:	add    BYTE PTR [eax],al
  40f2cc:	dec    eax
  40f2cd:	jecxz  0x40f2cd
  40f2cf:	push   eax
  40f2d0:	out    0x62,eax
  40f2d2:	dec    ebx
  40f2d3:	inc    DWORD PTR [eax-0x71]
  40f2d6:	adc    DWORD PTR [ebx],ecx
  40f2d8:	aas    
  40f2d9:	sbb    al,BYTE PTR [eax+edx*2]
  40f2dc:	pop    es
  40f2dd:	pop    ss
  40f2de:	dec    ebp
  40f2df:	inc    DWORD PTR [eax]
  40f2e1:	stos   DWORD PTR es:[edi],eax
  40f2e2:	test   al,ah
  40f2e4:	clc    
  40f2e5:	loop   0x40f2e5
  40f2e7:	adc    eax,0x6a0060bf
  40f2ec:	mov    edi,0x6e471d08
  40f2f1:	data16 std 
  40f2f3:	mov    ch,0x13
  40f2f5:	fwait
  40f2f6:	(bad)  
  40f2f7:	inc    DWORD PTR [eax+0x15]
  40f2fa:	or     ch,al
  40f2fc:	ret    
  40f2fd:	xor    bh,bh
  40f2ff:	jmp    DWORD PTR [esi]
  40f301:	in     eax,0xd9
  40f303:	not    DWORD PTR [esi-0x6996804c]
  40f309:	and    DWORD PTR [ebx],edi
  40f30b:	inc    edi
  40f30c:	xlat   BYTE PTR ds:[ebx]
  40f30d:	or     DWORD PTR [ecx+0x7f5572b4],eax
  40f313:	(bad)  
  40f314:	jns    0x40f2f5
  40f316:	or     eax,0x80f9c7e8
  40f31b:	(bad)  
  40f31c:	pop    ds
  40f31d:	(bad)  
  40f31e:	push   esp
  40f31f:	mul    BYTE PTR [ecx+0x7d]
  40f322:	cmp    DWORD PTR [esi+edi*1-0x69018083],0x3c
  40f32a:	xchg   BYTE PTR [ebx+0x68020996],dl
	...
  40f340:	add    BYTE PTR [eax],al
  40f342:	fcmovb st,st(4)
  40f344:	ret    0xaff
  40f347:	iret   
  40f348:	jne    0x40f399
  40f34a:	xor    DWORD PTR [edi+0x5c],edx
  40f34d:	imul   BYTE PTR [ecx]
  40f34f:	add    eax,0x3ca46b6a
  40f354:	or     DWORD PTR [edx],0x8300be56
  40f35a:	xchg   ebx,eax
  40f35b:	xor    eax,0x88807402
  40f360:	mov    esi,0x80dd09e3
  40f365:	inc    DWORD PTR [ebp-0x1437c5a]
  40f36b:	aam    0x80
  40f36d:	(bad)  
  40f36e:	xchg   esi,eax
  40f36f:	jge    0x40f359
  40f371:	xchg   BYTE PTR [bx+di],cl
  40f374:	jno    0x40f333
  40f376:	fnstcw WORD PTR [esi+0xc]
  40f379:	call   0xfec035c2
  40f37e:	leave  
  40f37f:	pop    esi
  40f380:	imul   esi,esi,0x74809cc1
  40f386:	mov    fs,ecx
  40f388:	inc    edi
  40f389:	dec    eax
  40f38a:	mov    cl,0x8c
  40f38c:	xor    BYTE PTR [edx+esi*4-0x5f7fa19e],0x1b
  40f394:	aad    0xb
  40f396:	scas   al,BYTE PTR es:[edi]
  40f397:	fisub  DWORD PTR [eax-0x2ae46f80]
  40f39d:	ja     0x40f327
  40f39f:	aad    0x1f
  40f3a1:	js     0x40f323
  40f3a3:	sbb    edi,DWORD PTR [edi]
  40f3a5:	test   BYTE PTR [eax],0x0
	...
  40f3b8:	xchg   ecx,eax
  40f3b9:	or     dh,BYTE PTR [ebx+0x2f1b70ca]
  40f3bf:	mov    dh,0x49
  40f3c1:	adc    esp,DWORD PTR [edi]
  40f3c3:	and    BYTE PTR [eax-0x6b],0xef
  40f3c7:	imul   esp,DWORD PTR [eax+0x508016a9],0xffffffd5
  40f3ce:	sub    edi,DWORD PTR [eax+0x48]
  40f3d1:	sbb    eax,DWORD PTR [edi]
  40f3d3:	neg    BYTE PTR [ecx+0x38ca730a]
  40f3d9:	sbb    esi,edi
  40f3db:	mov    ch,0x61
  40f3dd:	adc    ebp,edi
  40f3df:	jg     0x40f409
  40f3e1:	xchg   ebp,eax
  40f3e2:	out    dx,eax
  40f3e3:	imul   esp,DWORD PTR [edx+0x187fdea9],0xffffffd5
  40f3ea:	scas   eax,DWORD PTR es:[edi]
  40f3eb:	ja     0x40f3fd
  40f3ed:	sbb    eax,eax
  40f3ef:	xchg   DWORD PTR [ebp+0x1b],ebx
  40f3f2:	(bad)  
  40f3f3:	jg     0x40f43f
  40f3f5:	or     dh,BYTE PTR [edi+0x3409f87f]
  40f3fb:	shl    al,1
  40f3fd:	sbb    ch,BYTE PTR [edi-0x58ed3247]
  40f403:	jg     0x40f3fe
  40f405:	nop
  40f406:	sub    edi,DWORD PTR [edi-0x28]
  40f409:	sbb    bl,BYTE PTR [ebp+0x68]
  40f40c:	enter  0x8f1a,0x6c
  40f410:	xor    ebp,DWORD PTR [esi-0x2b3f807a]
  40f416:	xchg   edi,eax
  40f417:	ja     0x40f3d1
  40f419:	sbb    al,BYTE PTR [ecx]
  40f41b:	add    DWORD PTR [eax],0x0
	...
  40f42d:	add    ch,cl
  40f42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f430:	std    
  40f431:	outs   dx,BYTE PTR ds:[esi]
  40f432:	sub    esi,edx
  40f434:	in     al,dx
  40f435:	pop    esi
  40f436:	and    DWORD PTR [esi+edi*8],ebx
  40f439:	aam    0x89
  40f43b:	sbb    esi,DWORD PTR [ecx+eiz*8-0x3]
  40f43f:	pop    ds
  40f440:	cld    
  40f441:	dec    esi
  40f442:	or     DWORD PTR [ecx],ebx
  40f444:	mov    ah,0x55
  40f446:	or     DWORD PTR [ecx],ebx
  40f448:	(bad)  
  40f449:	push   ecx
  40f44a:	mov    ecx,0xf136fda6
  40f44f:	sahf   
  40f450:	clc    
  40f451:	inc    eax
  40f452:	int3   
  40f453:	push   ss
  40f454:	(bad)  
  40f455:	es loope 0x40f3e6
  40f458:	cld    
  40f459:	adc    DWORD PTR [ebx],ecx
  40f45b:	js     0x40f45d
  40f45d:	jmp    0xe94e1844
  40f462:	outs   dx,BYTE PTR ds:[esi]
  40f463:	in     eax,dx
  40f464:	in     al,dx
  40f465:	push   0xffffffce
  40f467:	add    eax,0xa9b9a48c
  40f46c:	push   0xa35804
  40f471:	cmp    ebx,0xa0e93f9f
  40f477:	mov    cs,WORD PTR [ecx+edx*8]
  40f47a:	jo     0x40f425
  40f47c:	std    
  40f47d:	(bad)  
  40f47e:	pushf  
  40f47f:	and    dh,BYTE PTR [ebp+0x42]
  40f482:	loop   0x40f468
  40f484:	jnp    0x40f44b
  40f486:	cdq    
  40f487:	(bad)  
  40f488:	pop    ebp
  40f489:	mov    esi,0xb143e9c5
  40f48e:	sbb    dl,BYTE PTR [edi+0xb5f8]
	...
  40f4a4:	xchg   edx,eax
  40f4a5:	bound  eax,QWORD PTR [eax]
  40f4a7:	pop    ds
  40f4a8:	cdq    
  40f4a9:	and    DWORD PTR [ecx+eiz*4+0x61],eax
  40f4ad:	bound  eax,QWORD PTR [eax]
  40f4af:	jmp    0x153e97f0
  40f4b4:	dec    edx
  40f4b5:	xor    ebp,0xfe1f7100
  40f4bb:	mov    WORD PTR [edx-0x76],?
  40f4be:	dec    ebp
  40f4bf:	call   0x416ca7
  40f4c4:	cmp    al,0xa1
  40f4c6:	or     DWORD PTR [edx-0x51],ebp
  40f4c9:	repnz inc esp
  40f4cb:	in     al,0xdf
  40f4cd:	or     eax,0x653e46ac
  40f4d2:	std    
  40f4d3:	jne    0x40f540
  40f4d5:	(bad)  
  40f4d6:	fisttp DWORD PTR [esi-0x28]
  40f4d9:	cwde   
  40f4da:	or     al,al
  40f4dc:	inc    ebx
  40f4dd:	jno    0x40f52f
  40f4df:	push   0xbeed657e
  40f4e4:	sets   BYTE PTR [eax+ecx*1-0x79]
  40f4e9:	ret    0xff6c
  40f4ec:	js     0x40f47b
  40f4ee:	stos   DWORD PTR es:[edi],eax
  40f4ef:	dec    ebx
  40f4f0:	test   al,0x98
  40f4f2:	dec    BYTE PTR [ebp-0x59]
  40f4f5:	in     al,0x7c
  40f4f7:	clc    
  40f4f8:	das    
  40f4f9:	sbb    dh,BYTE PTR [esi-0xd33018]
  40f4ff:	push   DWORD PTR [esi-0x5d]
  40f502:	add    eax,0xe9ec0200
  40f507:	add    DWORD PTR [eax],0x0
	...
  40f51a:	repz loope 0x40f584
  40f51d:	add    ch,al
  40f51f:	pop    ds
  40f520:	push   DWORD PTR [ebp-0x9]
  40f523:	mov    WORD PTR [edi-0x776927b8],?
  40f529:	inc    ebp
  40f52a:	fild   DWORD PTR ds:0x5eae46ca
  40f530:	std    
  40f531:	xor    eax,0x3f4bc5
  40f536:	cmp    BYTE PTR [ecx],dl
  40f538:	push   es
  40f539:	call   0x3fd73d
  40f53e:	xchg   DWORD PTR [edx+0xb964143],esi
  40f544:	jmp    0x4bfe:0x820b9601
  40f54b:	adc    ebp,DWORD PTR [edx-0x23]
  40f54e:	mov    edx,0x6bfe7b97
  40f553:	xor    eax,0x8896412b
  40f558:	cmc    
  40f559:	pop    es
  40f55a:	scas   al,BYTE PTR es:[edi]
  40f55b:	jno    0x40f5d8
  40f55d:	(bad)  
  40f55e:	cdq    
  40f55f:	xor    al,BYTE PTR [eax]
  40f561:	add    BYTE PTR [esi-0x618b8477],dl
  40f567:	mov    eax,ds:0xa181ff20
  40f56c:	jnp    0x40f5e2
  40f56e:	jp     0x40f5c9
  40f570:	cmc    
  40f571:	pop    es
  40f572:	jle    0x40f508
  40f574:	int3   
  40f575:	(bad)  
  40f576:	imul   eax,DWORD PTR [ebx+0x42],0x88d69603
  40f57d:	jmp    0x40f57f
	...
  40f58f:	add    BYTE PTR ds:0xe955603e,dl
  40f595:	jecxz  0x40f598
  40f597:	push   0xffffffde
  40f599:	push   0xbe2e07f5
  40f59e:	leave  
  40f59f:	(bad)  
  40f5a0:	cmp    DWORD PTR [ebx-0x30ea043b],edx
  40f5a6:	inc    ecx
  40f5a7:	sub    eax,0xf0209d7
  40f5ac:	sbb    cl,bh
  40f5ae:	add    al,BYTE PTR [eax]
  40f5b0:	xchg   esi,eax
  40f5b1:	mov    WORD PTR [esi],?
  40f5b3:	(bad)  
  40f5b4:	ror    BYTE PTR [edx+0x4],0x0
  40f5b8:	cdq    
  40f5b9:	jge    0x40f5fc
  40f5bb:	add    BYTE PTR [esi-0x35c37ef7],dl
  40f5c1:	addr16 sar edi,0xf1
  40f5c5:	add    BYTE PTR [esi+0x20997b2],al
  40f5cb:	and    DWORD PTR [ebx+0x572d7762],0x62
  40f5d2:	out    0xc,eax
  40f5d4:	sbb    al,cl
  40f5d6:	call   0xcd248bde
  40f5db:	xchg   edi,eax
  40f5dc:	jae    0x40f57f
  40f5de:	out    0x3,eax
  40f5e0:	mov    esi,ebx
  40f5e2:	pusha  
  40f5e3:	add    dl,BYTE PTR [esi+0xe3e6a62]
  40f5e9:	dec    ecx
  40f5ea:	sub    BYTE PTR [esi+edx*4],al
  40f5ed:	imul   ecx,DWORD PTR [bx+0x6296],0xffffffe7
  40f5f3:	add    BYTE PTR [eax],0x0
	...
  40f606:	shl    dh,cl
  40f608:	add    eax,0xdf1789c3
  40f60d:	xchg   DWORD PTR [eax],eax
  40f60f:	(bad)  
  40f610:	out    0x3,eax
  40f612:	adc    eax,0xd72d2f55
  40f617:	(bad)  
  40f618:	out    0xc,eax
  40f61a:	adc    dl,BYTE PTR [eax+ebp*8-0x3c7569fd]
  40f621:	(bad)  
  40f622:	(bad)  
  40f623:	bound  edx,QWORD PTR [ecx+0x276d5103]
  40f629:	sub    eax,0xc66062d7
  40f62e:	dec    ecx
  40f62f:	jecxz  0x40f5b5
  40f631:	jnp    0x40f66c
  40f633:	push   0x6296db63
  40f638:	out    0x28,eax
  40f63a:	and    BYTE PTR [eax+0x1729f5ee],dh
  40f640:	std    
  40f641:	aas    
  40f642:	imul   esp,DWORD PTR [ecx+0x6b018ee7],0xffffffdd
  40f649:	icebp  
  40f64a:	xchg   edx,eax
  40f64b:	or     DWORD PTR [esi],edx
  40f64d:	add    eax,0xd2726296
  40f652:	(bad)  
  40f653:	jmp    0x40f686
  40f655:	in     al,dx
  40f656:	sbb    al,0x9c
  40f658:	add    BYTE PTR [ebp+0x1b],al
  40f65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65c:	hlt    
  40f65d:	loop   0x40f6bb
  40f65f:	push   0x62930484
  40f664:	add    BYTE PTR [eax-0x16ff9e64],dl
	...
  40f67a:	add    BYTE PTR [eax],al
  40f67c:	mov    ebp,0x9a2845b7
  40f681:	pop    ss
  40f682:	ss xchg ecx,eax
  40f684:	jae    0x40f6fc
  40f686:	add    cl,ch
  40f688:	mov    al,ds:0x266c0e22
  40f68d:	pop    ss
  40f68e:	(bad)  
  40f68f:	jmp    0xe9498eac
  40f694:	mov    esi,ds
  40f696:	jmp    0x9dde:0xfd6295e9
  40f69d:	or     ah,BYTE PTR [ecx-0x5d]
  40f6a0:	cld    
  40f6a1:	adc    al,0x88
  40f6a3:	lods   al,BYTE PTR ds:[esi]
  40f6a4:	add    eax,0xecf17615
  40f6a9:	mov    ?,eax
  40f6ab:	ss gs push 0xffffffe8
  40f6af:	addr16 push eax
  40f6b1:	adc    eax,0x9d6a91fe
  40f6b6:	aas    
  40f6b7:	jmp    0x2318588
  40f6bc:	mov    ebx,0x90e90078
  40f6c1:	and    cl,BYTE PTR [esi]
  40f6c3:	ins    BYTE PTR es:[edi],dx
  40f6c4:	push   es
  40f6c5:	push   ss
  40f6c6:	(bad)  
  40f6c7:	jmp    0xacce0d0f
  40f6cc:	mov    ebp,0xb9a48ba5
  40f6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d2:	push   0xffffffe9
  40f6d4:	sub    edx,DWORD PTR [esi]
  40f6d6:	push   esp
  40f6d7:	fisub  WORD PTR [esi-0x6dd7d0da]
  40f6dd:	imul   eax,eax,0xde
	...
  40f6ef:	add    BYTE PTR [eax],al
  40f6f1:	add    BYTE PTR [ecx-0x10ffff14],al
  40f6f7:	popa   
  40f6f8:	mov    eax,DWORD PTR [ebp-0x25]
  40f6fb:	xor    edi,edi
  40f6fd:	jne    0x40f6d6
  40f6ff:	cwde   
  40f700:	je     0x40f6ee
  40f702:	xor    BYTE PTR [ebx-0x70],dh
  40f705:	cs scas al,BYTE PTR es:[edi]
  40f707:	pop    esi
  40f708:	or     eax,eax
  40f70a:	stos   DWORD PTR es:[edi],eax
  40f70b:	push   ss
  40f70c:	lea    eax,[ebp+0x1f]
  40f70f:	xor    ch,BYTE PTR [eax+0x0]
  40f712:	xchg   ebp,eax
  40f713:	pop    esi
  40f714:	push   0x7
  40f716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f717:	pop    esi
  40f718:	std    
  40f719:	jne    0x40f736
  40f71b:	cdq    
  40f71c:	adc    al,0x94
  40f71e:	rcr    DWORD PTR [esi],1
  40f720:	dec    BYTE PTR [edx]
  40f722:	out    dx,eax
  40f723:	add    eax,0x81baff54
  40f728:	in     eax,0xe8
  40f72a:	inc    esi
  40f72b:	cwde   
  40f72c:	dec    BYTE PTR [ecx+0x458cad3a]
  40f732:	iret   
  40f733:	xor    edi,edi
  40f735:	jne    0x40f6ea
  40f737:	pop    es
  40f738:	(bad)  
  40f739:	imul   edi,DWORD PTR [eax+0x7],0xb52afefe
  40f740:	(bad)  
  40f741:	adc    eax,0x3f4bcb
  40f746:	mov    eax,fs:0x61272971
  40f74c:	add    bh,ch
  40f74e:	loope  0x40f6e8
  40f750:	je     0x40f75a
  40f752:	xchg   edi,eax
  40f753:	push   ecx
  40f754:	inc    esi
  40f755:	inc    DWORD PTR [eax]
	...
  40f767:	add    BYTE PTR [eax+0x30087398],dl
  40f76d:	adc    al,BYTE PTR [edx]
  40f76f:	jmp    FWORD PTR [edx-0x6a71797]
  40f775:	xchg   edi,eax
  40f776:	(bad)  
  40f777:	(bad)  
  40f778:	mov    edx,0x5375fe7e
  40f77d:	fwait
  40f77e:	je     0x40f788
  40f780:	xchg   esi,eax
  40f781:	and    ecx,edi
  40f783:	inc    ebp
  40f784:	add    DWORD PTR [eax+edi*2],esp
  40f787:	je     0x40f763
  40f789:	xor    al,BYTE PTR [eax+ecx*2+0x7477d3f1]
  40f790:	repnz retf 
  40f792:	or     eax,0x44ab098
  40f797:	push   0xffffff96
  40f799:	mov    esp,0xdd1ebed
  40f79e:	xchg   esi,eax
  40f79f:	sub    eax,0x74790b57
  40f7a4:	(bad)  
  40f7a5:	loop   0x40f786
  40f7a7:	dec    eax
  40f7a8:	mov    ecx,0x86c683db
  40f7ad:	xchg   esp,eax
  40f7ae:	vunpckhps xmm1,xmm1,XMMWORD PTR [esi]
  40f7b2:	outs   dx,BYTE PTR ds:[esi]
  40f7b3:	call   DWORD PTR [eax-0x66029382]
  40f7b9:	jnp    0x40f824
  40f7bb:	mov    ah,0x90
  40f7bd:	mov    ch,0x77
  40f7bf:	imul   edx,DWORD PTR [esi-0x7e081254],0xd72d4a0f
  40f7c9:	or     DWORD PTR [ecx+0x74],edi
	...
  40f7dc:	add    BYTE PTR [eax],al
  40f7de:	jb     0x40f835
  40f7e0:	in     eax,dx
  40f7e1:	pop    es
  40f7e2:	jle    0x40f774
  40f7e4:	ret    0x61fe
  40f7e7:	in     eax,0xd7
  40f7e9:	enter  0x654,0x2
  40f7ed:	push   ebp
  40f7ee:	sbb    eax,0x6ac38166
  40f7f3:	jne    0x40f86c
  40f7f5:	(bad)  
  40f7f6:	adc    edi,DWORD PTR [edi-0x68c6b08b]
  40f7fc:	add    eax,0x2aff6bff
  40f801:	inc    ecx
  40f802:	xchg   esi,eax
  40f803:	popa   
  40f804:	sti    
  40f805:	sbb    dl,BYTE PTR [esi-0x763ff2f7]
  40f80b:	bound  ebp,QWORD PTR [eax+ebp*4-0x6a]
  40f80f:	(bad)  
  40f810:	out    0x40,eax
  40f812:	push   edx
  40f813:	sbb    ch,al
  40f815:	add    edx,DWORD PTR [esi+0x5bea662]
  40f81b:	adc    al,0xef
  40f81d:	add    edx,DWORD PTR [esi-0x16121878]
  40f823:	mov    edi,esp
  40f825:	in     eax,dx
  40f826:	loope  0x40f80e
  40f828:	and    al,0x70
  40f82a:	dec    ecx
  40f82b:	in     eax,0x6c
  40f82d:	outs   dx,DWORD PTR ds:[esi]
  40f82e:	enter  0x9f13,0xd3
  40f832:	enter  0x8f8d,0x78
  40f836:	dec    edx
  40f837:	push   ss
  40f838:	add    dh,0x9c
  40f83b:	(bad)  
  40f83c:	out    0xc,eax
  40f83e:	(bad)  
  40f83f:	mov    fs,esp
  40f841:	push   0x0
	...
  40f853:	add    BYTE PTR [edi],ah
  40f855:	popa   
  40f856:	out    0x3,eax
  40f858:	cs out 0xbf,eax
  40f85b:	ret    0x1499
  40f85e:	fld    QWORD PTR [edi]
  40f860:	jle    0x40f7f4
  40f862:	stos   DWORD PTR es:[edi],eax
  40f863:	js     0x40f7ed
  40f865:	mov    dl,0x62
  40f867:	push   ebx
  40f868:	adc    bl,ch
  40f86a:	push   ebx
  40f86b:	jo     0x40f8e5
  40f86d:	adc    ebx,DWORD PTR [eax-0x547d862b]
  40f873:	js     0x40f8dd
  40f875:	jmp    0x13a94fe6
  40f87a:	das    
  40f87b:	imul   esp,DWORD PTR [ebx],0xffffffaa
  40f87e:	es js  0x40f840
  40f881:	bound  ecx,QWORD PTR [edi-0x185e2f72]
  40f887:	js     0x40f893
  40f889:	ss pop ss
  40f88b:	js     0x40f8c5
  40f88d:	adc    edi,DWORD PTR [ebp-0x185e80e3]
  40f893:	imul   esp,ebx,0xffffffa6
  40f896:	add    dh,dh
  40f898:	test   eax,0xa9f983ea
  40f89d:	adc    al,0xfe
  40f89f:	push   ebx
  40f8a0:	call   0xff12:0xd3269a8a
  40f8a7:	pushf  
  40f8a8:	pop    esi
  40f8a9:	or     al,0xfe
  40f8ab:	into   
  40f8ac:	or     DWORD PTR [esi+0x1a],0xe612db10
  40f8b3:	popa   
  40f8b4:	fst    QWORD PTR [ebx]
  40f8b6:	(bad)  
  40f8b7:	pusha  
	...
  40f8c8:	add    BYTE PTR [eax],al
  40f8ca:	pop    ss
  40f8cb:	pop    es
  40f8cc:	imul   BYTE PTR [esi+0x11008961]
  40f8d2:	sub    DWORD PTR [edi+edi*1-0x2331bf17],ebx
  40f8d9:	sahf   
  40f8da:	dec    ecx
  40f8db:	adc    al,0xfe
  40f8dd:	aam    0x9f
  40f8df:	dec    ecx
  40f8e0:	aas    
  40f8e1:	jmp    0x7e8a9223
  40f8e6:	and    edx,ebp
  40f8e8:	add    DWORD PTR [ecx+0x3fe1431],0xffffff92
  40f8ef:	mov    ah,BYTE PTR [esi+ebp*4-0x6b00eda6]
  40f8f6:	out    dx,al
  40f8f7:	sbb    dh,bh
  40f8f9:	push   esi
  40f8fa:	or     DWORD PTR [edi+0x1a],edx
  40f8fd:	add    BYTE PTR [ebx+0x12],dl
  40f900:	out    0xa5,al
  40f902:	pop    esp
  40f903:	adc    esi,edi
  40f905:	jo     0x40f91e
  40f907:	push   es
  40f908:	div    BYTE PTR [esi]
  40f90a:	jmp    0x2b01f98a
  40f90f:	test   eax,0xd6c8e93f
  40f914:	fcom   QWORD PTR [esi]
  40f916:	rcl    DWORD PTR [eax],0xfe
  40f919:	fcomp  QWORD PTR [edi-0x5216c0c5]
  40f91f:	dec    edi
  40f920:	dec    ecx
  40f921:	add    BYTE PTR [eax-0x607a7767],bl
  40f927:	cmp    esi,0xe9cbacff
  40f92d:	test   DWORD PTR [eax],0x0
	...
  40f93f:	add    BYTE PTR [eax],ch
  40f941:	cdq    
  40f942:	std    
  40f943:	jae    0x40f911
  40f945:	(bad)  
  40f946:	std    
  40f947:	(bad)  
  40f948:	fcom   st(7)
  40f94a:	(bad)  
  40f94b:	jne    0x40f944
  40f94d:	jge    0x40f8e1
  40f94f:	inc    esp
  40f950:	enter  0xfe98,0xb5
  40f954:	das    
  40f955:	cmp    esi,0x61328ff
  40f95b:	call   0x3fcb30
  40f960:	sub    bl,dl
  40f962:	jmp    0xfed9f25e
  40f967:	jne    0x40f930
  40f969:	jge    0x40f943
  40f96b:	inc    esp
  40f96c:	sub    BYTE PTR [ecx-0x7ee84a02],bl
  40f972:	(bad)  
  40f973:	call   FWORD PTR [eax]
  40f975:	adc    eax,DWORD PTR [esi]
  40f977:	call   0x3fcb60
  40f97c:	sub    dl,dl
  40f97e:	loope  0x40f977
  40f980:	sub    BYTE PTR [eax+0x7d8775fe],bl
  40f986:	mov    esp,0xfe98e844
  40f98b:	mov    ch,0xcf
  40f98d:	cmp    dh,0xff
  40f990:	enter  0x612,0xe8
  40f994:	or     cl,dl
  40f996:	(bad)  
  40f997:	jmp    FWORD PTR [eax-0x5708262e]
  40f99d:	cwde   
  40f99e:	(bad)  
  40f99f:	jne    0x40fa18
  40f9a1:	jge    0x40fa20
  40f9a3:	inc    BYTE PTR [eax]
	...
  40f9b5:	add    BYTE PTR [eax-0x68],bh
  40f9b8:	(bad)  
  40f9b9:	mov    ch,0x8b
  40f9bb:	cmp    dh,0xff
  40f9be:	xchg   esi,eax
  40f9bf:	arpl   WORD PTR [edx+0x76603946],bp
  40f9c5:	mov    ah,0x26
  40f9c7:	adc    BYTE PTR [esi+edi*8+0x3e],dh
  40f9cb:	fwait
  40f9cc:	mov    esi,0xae1821fe
  40f9d1:	jmp    0x40f9f4
  40f9d3:	add    BYTE PTR [edi+eiz*8+0x2b],dh
  40f9d7:	inc    eax
  40f9d8:	jae    0x40f9d8
  40f9da:	or     esi,esi
  40f9dc:	ins    BYTE PTR es:[edi],dx
  40f9dd:	test   BYTE PTR [ecx],0x38
  40f9e0:	ins    DWORD PTR es:[edi],dx
  40f9e1:	mov    DWORD PTR [ecx+0x20],edx
  40f9e4:	je     0x40f9e4
  40f9e6:	sub    ebx,DWORD PTR [edi]
  40f9e8:	ins    BYTE PTR es:[edi],dx
  40f9e9:	(bad)  
  40f9ea:	jmp    0xe187ee21
  40f9ef:	xlat   BYTE PTR ds:[ebx]
  40f9f0:	jae    0x40f9a6
  40f9f2:	not    bh
  40f9f4:	jae    0x40f9f4
  40f9f6:	mov    esi,0xc9febb6e
  40f9fb:	out    dx,eax
  40f9fc:	mov    ebp,0x765aaff7
  40fa01:	(bad)  
  40fa02:	mov    ecx,0xbefbeddf
  40fa07:	test   al,0x19
  40fa09:	add    BYTE PTR [esi-0x69f8bd2e],dl
  40fa0f:	outs   dx,BYTE PTR ds:[esi]
  40fa10:	xchg   ebx,ebp
  40fa12:	adc    eax,0x966978c7
  40fa17:	xor    ecx,ebx
  40fa19:	inc    BYTE PTR [eax]
	...
  40fa2b:	add    BYTE PTR [ebx],al
  40fa2d:	adc    ch,BYTE PTR [edx-0x7b]
  40fa30:	fidivr DWORD PTR [eax-0x622c778d]
  40fa36:	in     al,dx
  40fa37:	jne    0x40fa12
  40fa39:	mov    edx,0x11e3ff01
  40fa3e:	push   0x7
  40fa40:	pusha  
  40fa41:	pop    ecx
  40fa42:	jae    0x40fa42
  40fa44:	jecxz  0x40fa83
  40fa46:	jae    0x40fabc
  40fa48:	sahf   
  40fa49:	bound  ecx,QWORD PTR [edi]
  40fa4b:	mov    bl,0xd5
  40fa4d:	nop    DWORD PTR [ebx+0x57]
  40fa51:	addr16 out 0xce,eax
  40fa54:	or     al,0xff
  40fa56:	push   0x40
  40fa58:	and    eax,0x3e077d10
  40fa5d:	inc    esi
  40fa5e:	fild   WORD PTR [ebx]
  40fa60:	xchg   esi,eax
  40fa61:	pop    ebx
  40fa62:	daa    
  40fa63:	out    dx,eax
  40fa64:	xchg   ebp,eax
  40fa65:	sbb    DWORD PTR [edx],ebp
  40fa67:	or     BYTE PTR [esi-0x1eba2f1],dl
  40fa6d:	jne    0x40fa6e
  40fa6f:	add    edx,DWORD PTR [esi-0x6a1158a5]
  40fa75:	sbb    DWORD PTR [edx+0x2cd99607],ebp
  40fa7b:	jl     0x40fa65
  40fa7d:	xchg   ebp,eax
  40fa7e:	mov    edi,0xb6a78a6b
  40fa83:	je     0x40fa93
  40fa85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa86:	stos   DWORD PTR es:[edi],eax
  40fa87:	je     0x40fad3
  40fa89:	push   cs
  40fa8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa8b:	out    dx,al
  40fa8c:	ror    DWORD PTR [edi],0x15
  40fa8f:	adc    al,0x0
	...
  40faa1:	add    BYTE PTR [esi-0x478ac5e0],ch
  40faa7:	pop    ebx
  40faa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa9:	out    dx,eax
  40faaa:	ins    BYTE PTR es:[edi],dx
  40faab:	fldcw  WORD PTR [eax+esi*2]
  40faae:	aas    
  40faaf:	bound  ebp,QWORD PTR [esi+edi*4-0x5b]
  40fab3:	mov    dl,0x76
  40fab5:	out    dx,al
  40fab6:	popf   
  40fab7:	cli    
  40fab8:	mov    ecx,0xf30f90e7
  40fabd:	inc    ebx
  40fabe:	add    eax,0xa603cf49
  40fac3:	call   DWORD PTR [ebp+0x3f5b0274]
  40fac9:	rcl    esp,cl
  40facb:	cmova  esi,DWORD PTR [edx+eiz*8+0x5e]
  40fad0:	ds out dx,al
  40fad2:	cdq    
  40fad3:	cli    
  40fad4:	add    BYTE PTR [esi+0x2efe1056],cl
  40fada:	inc    eax
  40fadb:	adc    edi,esi
  40fadd:	pushf  
  40fade:	rcl    DWORD PTR [eax],0x74
  40fae1:	icebp  
  40fae2:	lods   eax,DWORD PTR ds:[esi]
  40fae3:	jle    0x40fb26
  40fae5:	push   ss
  40fae6:	ret    0x7410
  40fae9:	or     eax,0x646c5bd
  40faee:	mov    ds:0x95edc31a,al
  40faf3:	mov    ch,0x89
  40faf5:	add    eax,0x97d52316
  40fafa:	mov    dl,BYTE PTR [esi-0x64022ef4]
  40fb00:	std    
  40fb01:	fiadd  WORD PTR [ecx]
  40fb03:	iret   
  40fb04:	jae    0x40faf2
	...
  40fb16:	add    BYTE PTR [eax],al
  40fb18:	out    0x19,eax
  40fb1a:	ret    
  40fb1b:	fst    QWORD PTR [ebp-0x3d46bc23]
  40fb21:	pcmpeqb mm5,mm5
  40fb24:	cmp    eax,0x65b64c6a
  40fb29:	pop    esp
  40fb2a:	rcr    dh,0x19
  40fb2d:	das    
  40fb2e:	add    ecx,ebp
  40fb30:	xchg   ebp,eax
  40fb31:	pcmpeqb mm3,QWORD PTR [ebp-0x69b9199e]
  40fb38:	inc    ebp
  40fb39:	fiadd  DWORD PTR [ebx+0x7d]
  40fb3c:	and    eax,0xaf86fc96
  40fb41:	cli    
  40fb42:	std    
  40fb43:	hlt    
  40fb44:	sub    eax,0x252faa07
  40fb49:	adc    BYTE PTR [edx-0x5e050e0c],cl
  40fb4f:	jmp    0x38a95de9
  40fb54:	dec    ebp
  40fb55:	mov    ds:0x15ddbf00,eax
  40fb5a:	sbb    ecx,ebp
  40fb5c:	xchg   ebp,eax
  40fb5d:	pop    ecx
  40fb5e:	rol    BYTE PTR [eax],0x2a
  40fb61:	pop    ebx
  40fb62:	out    0x98,eax
  40fb64:	outs   dx,DWORD PTR ds:[esi]
  40fb65:	bound  eax,QWORD PTR [eax]
  40fb67:	mov    ebx,DWORD PTR [edi-0x1b82ed2]
  40fb6d:	popa   
  40fb6e:	call   0xa343ac
  40fb73:	add    ebx,DWORD PTR [edi+0x17e8748f]
  40fb79:	xchg   DWORD PTR [esi+0x41],eax
	...
  40fb8c:	add    BYTE PTR [eax],al
  40fb8e:	aas    
  40fb8f:	sub    al,0xe6
  40fb91:	shl    DWORD PTR [edi],cl
  40fb93:	bound  eax,QWORD PTR [eax]
  40fb95:	or     ebp,DWORD PTR [edi+0xb]
  40fb98:	add    bl,ch
  40fb9a:	cdq    
  40fb9b:	(bad)  
  40fb9c:	or     eax,0x88852a88
  40fba1:	inc    ebp
  40fba2:	fld    TBYTE PTR [ecx]
  40fba4:	jecxz  0x40fbed
  40fba6:	scas   al,BYTE PTR es:[edi]
  40fba7:	push   si
  40fba9:	call   0x4155d3
  40fbae:	hlt    
  40fbaf:	mov    eax,ds:0x32c40274
  40fbb4:	mov    esi,eax
  40fbb6:	inc    edi
  40fbb7:	test   DWORD PTR [esi+0x41],eax
  40fbba:	out    dx,eax
  40fbbb:	test   eax,0x61bf16fb
  40fbc0:	add    eax,esi
  40fbc2:	inc    esi
  40fbc3:	or     bl,dl
  40fbc5:	push   0x41190e
  40fbca:	jns    0x40fb7a
  40fbcc:	xchg   ebp,eax
  40fbcd:	sbb    BYTE PTR [edi-0x553ff69f],bh
  40fbd3:	addr16 jmp 0x88b22114
  40fbd9:	push   ebp
  40fbda:	clc    
  40fbdb:	mov    es,WORD PTR [eax+ebx*8-0xc]
  40fbdf:	sbb    ah,dl
  40fbe1:	(bad)  
  40fbe2:	jg     0x40fc45
  40fbe4:	mov    DWORD PTR [ebp-0x29],eax
  40fbe7:	fwait
  40fbe8:	std    
  40fbe9:	call   DWORD PTR [esi+0x71dbf8b4]
  40fbef:	ss pop edx
  40fbf1:	inc    BYTE PTR [eax]
	...
  40fc03:	add    bl,ah
  40fc05:	adc    ebx,DWORD PTR [edx-0x6e]
  40fc08:	pusha  
  40fc09:	dec    esp
  40fc0a:	jb     0x40fb95
  40fc0c:	ret    
  40fc0d:	cwde   
  40fc0e:	jle    0x40fc54
  40fc10:	cmp    al,BYTE PTR [ebx+0x4ce38a11]
  40fc16:	jle    0x40fc5c
  40fc18:	pop    esi
  40fc19:	xchg   ebx,eax
  40fc1a:	adc    DWORD PTR [eax-0x7afd0488],eax
  40fc20:	retf   0x725c
  40fc23:	(bad)  
  40fc24:	sub    DWORD PTR [esi-0x3a0818a3],ecx
  40fc2a:	jb     0x40fc2a
  40fc2c:	or     edi,DWORD PTR [esi+0x43fe4f71]
  40fc32:	mov    esi,0x53009fe
  40fc37:	pop    esi
  40fc38:	iret   
  40fc39:	mov    eax,0x80630000
  40fc3e:	pusha  
  40fc3f:	(bad)  
  40fc40:	imul   ebp,DWORD PTR [edi],0x5a
  40fc43:	aam    0x5f
  40fc45:	and    al,0x70
  40fc47:	or     dl,dh
  40fc49:	push   esi
  40fc4a:	sbb    DWORD PTR [eax+0x22],ebp
  40fc4d:	cmp    al,0xc1
  40fc4f:	jmp    DWORD PTR [ecx+0x23]
  40fc52:	fisttp WORD PTR [eax-0x37]
  40fc55:	ret    
  40fc56:	aam    0x67
  40fc58:	nop
  40fc59:	leave  
  40fc5a:	(bad)  
  40fc5b:	push   DWORD PTR [ecx]
  40fc5d:	sti    
  40fc5e:	add    edi,ebp
  40fc60:	lock bound eax,QWORD PTR [ebp+0x46]
  40fc64:	push   edi
  40fc65:	sti    
  40fc66:	sar    esi,1
	...
  40fc78:	add    BYTE PTR [eax],al
  40fc7a:	sub    edx,DWORD PTR [ebx]
  40fc7c:	pop    edx
  40fc7d:	sub    DWORD PTR [esi],0xefe76f94
  40fc83:	inc    esi
  40fc84:	outs   dx,DWORD PTR ds:[esi]
  40fc85:	(bad)  
  40fc86:	pop    edi
  40fc87:	arpl   WORD PTR [ecx],bp
  40fc89:	cld    
  40fc8a:	xor    DWORD PTR [edi+0x27146072],0x7a71de54
  40fc94:	mov    eax,ds:0x4f5ae270
  40fc99:	in     eax,dx
  40fc9a:	xlat   BYTE PTR ds:[ebx]
  40fc9b:	or     edi,DWORD PTR [edi]
  40fc9d:	jnp    0x40fc71
  40fc9f:	push   cs
  40fca0:	ret    0x510d
  40fca3:	xchg   esi,eax
  40fca4:	fistp  WORD PTR [ebx-0xe]
  40fca7:	or     esp,DWORD PTR [edi]
  40fca9:	jno    0x40fc5a
  40fcab:	aas    
  40fcac:	push   ds
  40fcad:	not    DWORD PTR [ecx+0x307172fa]
  40fcb3:	or     al,0x82
  40fcb5:	movaps XMMWORD PTR [esi+0xc065bef],xmm2
  40fcbc:	push   DWORD PTR [eax-0x4f]
  40fcbf:	(bad)  
  40fcc0:	out    0x60,eax
  40fcc2:	push   ebx
  40fcc3:	jnp    0x40fcf3
  40fcc5:	leave  
  40fcc6:	push   esi
  40fcc7:	bound  ecx,QWORD PTR [edi-0x48]
  40fcca:	pop    eax
  40fccb:	mov    eax,ds:0x5a8270e7
  40fcd0:	mov    edi,0xcf0b7c26
  40fcd5:	jo     0x40fd39
  40fcd7:	push   cs
  40fcd8:	(bad)  
  40fcd9:	neg    BYTE PTR [ecx+0xc63dfa]
	...
  40fcef:	add    al,bl
  40fcf1:	or     esp,DWORD PTR [ecx+0x14629545]
  40fcf7:	jge    0x40fcb6
  40fcf9:	loope  0x40fca6
  40fcfb:	dec    ebx
  40fcfc:	enter  0x9f0b,0x7e
  40fd00:	push   edx
  40fd01:	push   cs
  40fd02:	cmp    BYTE PTR [ecx+0x2a],dh
  40fd05:	pop    esi
  40fd06:	mov    ?,esi
  40fd08:	xchg   ecx,eax
  40fd09:	cli    
  40fd0a:	sub    ebx,DWORD PTR [ecx]
  40fd0c:	xchg   esi,eax
  40fd0d:	(bad)  
  40fd0f:	inc    ebx
  40fd10:	mov    ch,ah
  40fd12:	add    BYTE PTR [ecx-0x59ff9d6c],ch
  40fd18:	push   eax
  40fd19:	adc    eax,DWORD PTR [ecx]
  40fd1b:	jmp    0xa5065fb5
  40fd20:	add    DWORD PTR ds:0x7895e906,ecx
  40fd26:	add    bl,al
  40fd28:	xchg   ebp,eax
  40fd29:	js     0x40fd2b
  40fd2b:	rcl    DWORD PTR [ebp+0x453543dd],cl
  40fd31:	fiadd  WORD PTR [ebx-0x1f331c3]
  40fd37:	cdq    
  40fd38:	(bad)  
  40fd39:	xchg   esi,eax
  40fd3a:	clc    
  40fd3b:	es dec eax
  40fd3d:	pop    es
  40fd3e:	jmp    0xa39c3a
  40fd43:	loop   0x40fd1a
  40fd45:	pop    DWORD PTR [ebx]
  40fd47:	add    BYTE PTR [edx],dl
  40fd49:	bound  eax,QWORD PTR [eax]
  40fd4b:	jmp    0xa869d58d
  40fd50:	xchg   ebp,eax
  40fd51:	or     esi,DWORD PTR [ebp+eiz*8+0x0]
	...
  40fd65:	add    BYTE PTR [ebp+0x4a],ch
  40fd68:	dec    eax
  40fd69:	out    dx,al
  40fd6a:	jns    0x40fd07
  40fd6c:	mov    DWORD PTR [ecx-0x290b19e9],edi
  40fd72:	imul   ecx,DWORD PTR [ecx+edx*2],0x483a523b
  40fd79:	into   
  40fd7a:	jns    0x40fd56
  40fd7c:	and    DWORD PTR [ecx-0x2e01f397],0xffffffe9
  40fd83:	sahf   
  40fd84:	std    
  40fd85:	mov    dh,0xec
  40fd87:	or     ah,BYTE PTR [esi-0x22]
  40fd8a:	or     eax,0xffa600a2
  40fd8f:	xor    dh,dh
  40fd91:	sahf   
  40fd92:	sub    DWORD PTR [esp+esi*2],ecx
  40fd95:	loope  0x40fde4
  40fd97:	loope  0x40fdde
  40fd99:	mov    ?,WORD PTR [ecx]
  40fd9b:	fiadd  DWORD PTR [ebx-0x16ce100]
  40fda1:	inc    DWORD PTR [ebp-0x48e7979a]
  40fda7:	pop    ds
  40fda8:	(bad)  
  40fda9:	inc    dl
  40fdab:	xchg   esi,eax
  40fdac:	idiv   bh
  40fdae:	clc    
  40fdaf:	jns    0x40fe25
  40fdb1:	or     bh,ah
  40fdb3:	add    DWORD PTR [edi-0x1],eax
  40fdb6:	enter  0x8487,0xec
  40fdba:	sar    BYTE PTR [ecx-0x2],0x6a
  40fdbe:	outs   dx,DWORD PTR ds:[esi]
  40fdbf:	and    DWORD PTR cs:[eax+0x2e],ecx
  40fdc3:	data16 std 
  40fdc5:	mov    ch,0xa7
  40fdc7:	xchg   ecx,eax
  40fdc8:	(bad)  
  40fdc9:	inc    DWORD PTR [eax]
	...
  40fddb:	add    BYTE PTR [eax+0xb],bh
  40fdde:	push   es
  40fddf:	call   0x401eef
  40fde4:	(bad)  
  40fde5:	frstpm(287 only) 
  40fde7:	test   DWORD PTR [eax+0x7b858c79],0xfffffe91
  40fdf1:	sub    eax,0x65ee4828
  40fdf6:	std    
  40fdf7:	mov    ch,0xa7
  40fdf9:	xchg   ecx,eax
  40fdfa:	(bad)  
  40fdfb:	(bad)  
  40fdfc:	clc    
  40fdfd:	or     al,BYTE PTR [esi]
  40fdff:	call   0x401faf
  40fe04:	xchg   dl,bl
  40fe06:	loope  0x40fdff
  40fe08:	enter  0x6778,0x0
  40fe0c:	push   edi
  40fe0d:	dec    ebx
  40fe0e:	dec    eax
  40fe0f:	inc    ecx
  40fe10:	out    dx,eax
  40fe11:	js     0x40fdc7
  40fe13:	fsub   DWORD PTR [eax]
  40fe15:	jns    0x40fe15
  40fe17:	call   DWORD PTR [edx+0x7011e606]
  40fe1d:	jns    0x40fe1d
  40fe1f:	mov    DWORD PTR [edx],esi
  40fe21:	test   esi,esi
  40fe23:	call   FWORD PTR [eax]
  40fe25:	in     eax,0xbc
  40fe27:	lock xchg esi,eax
  40fe29:	call   0x6fd7fc9c
  40fe2e:	fld    DWORD PTR [edx-0x189101d]
  40fe34:	cdq    
  40fe35:	sti    
  40fe36:	cmc    
  40fe37:	popa   
  40fe38:	adc    eax,0x89f6594e
  40fe3d:	js     0x40fe40
  40fe3f:	je     0x40fe41
	...
  40fe51:	add    bh,bl
  40fe53:	xor    eax,DWORD PTR [edx]
  40fe55:	add    BYTE PTR [ecx-0x17],ch
  40fe58:	outs   dx,BYTE PTR ds:[esi]
  40fe59:	je     0x40fde1
  40fe5b:	mov    ds:0x98693fd5,eax
  40fe60:	outs   dx,BYTE PTR ds:[esi]
  40fe61:	mov    ah,0x66
  40fe63:	dec    eax
  40fe64:	outs   dx,BYTE PTR ds:[esi]
  40fe65:	(bad)  
  40fe66:	pop    ecx
  40fe67:	into   
  40fe68:	adc    eax,ebp
  40fe6a:	(bad)  
  40fe6b:	mov    edx,0x8e49fe6e
  40fe70:	pop    ebp
  40fe71:	test   BYTE PTR [ecx+0x40],0x6e
  40fe75:	je     0x40fe1d
  40fe77:	jae    0x40fe00
  40fe79:	aas    
  40fe7a:	xor    DWORD PTR [eax+0x6e],esi
  40fe7d:	mov    ah,0x3e
  40fe7f:	jo     0x40feef
  40fe81:	(bad)  
  40fe82:	and    DWORD PTR [esi-0x44f517ef],eax
  40fe88:	outs   dx,BYTE PTR ds:[esi]
  40fe89:	(bad)  
  40fe8a:	adc    DWORD PTR [esi+0x4d],eax
  40fe8d:	test   BYTE PTR [ecx],0xf8
  40fe90:	imul   esi,DWORD PTR [edx+edi*8-0x60193d9],0xffffffad
  40fe98:	adc    al,0xe8
  40fe9a:	bound  edi,QWORD PTR [ebx]
  40fe9c:	imul   edi,esi,0xffffffe9
  40fe9f:	in     eax,dx
  40fea0:	fs mul cl
  40fea3:	pop    ds
  40fea4:	ins    BYTE PTR es:[edi],dx
  40fea5:	je     0x40fe2d
  40fea7:	xor    ebx,ebx
  40fea9:	aas    
  40feaa:	ror    edi,1
  40feac:	imul   esi,DWORD PTR [esi+eiz*4-0x48],0xffffffb5
  40feb1:	xlat   BYTE PTR ds:[ebx]
  40feb2:	leave  
  40feb3:	popa   
  40feb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb5:	ins    DWORD PTR es:[edi],dx
	...
  40fec6:	add    BYTE PTR [eax],al
  40fec8:	mov    eax,0x275bef8e
  40fecd:	or     BYTE PTR [edi-0x50315793],dl
  40fed3:	jne    0x40fe75
  40fed5:	or     BYTE PTR [eax+0x7f0954e1],dl
  40fedb:	ins    DWORD PTR es:[edi],dx
  40fedc:	dec    edx
  40fedd:	adc    edi,DWORD PTR [edi+0x6d]
  40fee0:	mov    bl,bh
  40fee2:	xadd   DWORD PTR [eax+0x6db76708],eax
  40fee9:	adc    BYTE PTR [edi+0x6d],bl
  40feec:	jns    0x40fe84
  40feee:	stos   BYTE PTR es:[edi],al
  40feef:	ins    BYTE PTR es:[edi],dx
  40fef0:	push   0x685c9508
  40fef5:	or     BYTE PTR [edi+0x5c],al
  40fef8:	xlat   BYTE PTR ds:[ebx]
  40fef9:	mov    ds:0xce506d3e,eax
  40fefe:	dec    ebx
  40feff:	jne    0x40ff49
  40ff01:	or     BYTE PTR [eax+0x35],al
  40ff04:	aad    0x7
  40ff06:	daa    
  40ff07:	ins    DWORD PTR es:[edi],dx
  40ff08:	add    al,BYTE PTR [ebx]
  40ff0a:	pop    ss
  40ff0b:	ins    DWORD PTR es:[edi],dx
  40ff0c:	xor    bl,bh
  40ff0e:	ret    
  40ff0f:	shr    BYTE PTR [eax],0x8
  40ff12:	xsaves [ecx]
  40ff15:	cli    
  40ff16:	mov    dh,0x6d
  40ff18:	sbb    BYTE PTR [eax],cl
  40ff1a:	push   esi
  40ff1c:	or     eax,0x96167dfb
  40ff21:	bound  esp,QWORD PTR [eax]
  40ff23:	inc    edx
  40ff24:	lea    esp,[edx+0x3c]
  40ff27:	jns    0x40ff16
  40ff29:	jecxz  0x40fece
  40ff2b:	outs   dx,DWORD PTR ds:[esi]
	...
  40ff3c:	add    BYTE PTR [eax],al
  40ff3e:	jg     0x40ffa2
  40ff40:	inc    ecx
  40ff41:	mov    ecx,0x5bdf8de8
  40ff46:	mov    ds:0xe6cc6a2,eax
  40ff4b:	sahf   
  40ff4c:	mov    ebx,0x5a4a6c
  40ff51:	inc    ecx
  40ff52:	outs   dx,DWORD PTR ds:[esi]
  40ff53:	mov    al,ds:0x4e32e93f
  40ff58:	sbb    dl,al
  40ff5a:	aam    0x7
  40ff5c:	out    0x95,al
  40ff5e:	inc    eax
  40ff5f:	or     dh,bh
  40ff61:	xchg   esi,eax
  40ff62:	mov    al,ds:0xda82685f
  40ff67:	mov    ds:0x62941100,al
  40ff6c:	add    BYTE PTR [ecx-0x13],ch
  40ff6f:	add    esp,edi
  40ff71:	jbe    0x40ff6d
  40ff73:	or     BYTE PTR [ebp+ebp*2-0xe],dh
  40ff77:	mov    cs,WORD PTR [eax]
  40ff79:	push   ecx
  40ff7a:	fs inc edi
  40ff7c:	std    
  40ff7d:	pop    esi
  40ff7e:	lods   al,BYTE PTR ds:[esi]
  40ff7f:	and    DWORD PTR ds:0xecdc40e9,eax
  40ff85:	push   0xffffffd9
  40ff87:	or     ebp,DWORD PTR [ebx-0x17]
  40ff8a:	aas    
  40ff8b:	fwait
  40ff8c:	std    
  40ff8d:	mov    ah,0x4d
  40ff8f:	push   ebx
  40ff91:	idiv   BYTE PTR [edx-0x4e5b77f8]
  40ff97:	jg     0x40ff99
  40ff99:	jmp    0xaba9c578
  40ff9e:	in     eax,dx
  40ff9f:	mov    eax,ds:0x8100
	...
  40ffb4:	call   0xb32a3f57
  40ffb9:	mov    cs,WORD PTR [eax]
  40ffbb:	adc    eax,ebp
  40ffbd:	jg     0x40ffbc
  40ffbf:	(bad)  
  40ffc0:	jge    0x40ff50
  40ffc2:	cld    
  40ffc3:	test   BYTE PTR [ebx],0x5f
  40ffc6:	call   0xfe48d5a2
  40ffcb:	mov    al,0x50
  40ffcd:	arpl   WORD PTR [eax],ax
  40ffcf:	xor    al,0x71
  40ffd1:	sti    
  40ffd2:	jg     0x40ff81
  40ffd4:	inc    edx
  40ffd5:	adc    dh,bh
  40ffd7:	into   
  40ffd8:	pop    edi
  40ffd9:	sahf   
  40ffda:	cld    
  40ffdb:	add    BYTE PTR [edi+0x7b],bh
  40ffde:	je     0x40ffec
  40ffe0:	adc    BYTE PTR [ecx],dl
  40ffe2:	push   es
  40ffe3:	call   0x41720b
  40ffe8:	mov    ah,0xa2
  40ffea:	push   cs
  40ffeb:	test   DWORD PTR [edx-0x7ffffa4],edi
  40fff1:	and    dh,dh
  40fff3:	add    BYTE PTR [edi+0x7ac70062],bh
  40fff9:	xchg   edx,eax
  40fffa:	inc    BYTE PTR [edi]
  40fffc:	scas   eax,DWORD PTR es:[edi]
  40fffd:	bound  ebp,QWORD PTR [edx+0x0]
  410000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410001:	pop    esi
  410002:	push   0x0
  410004:	xchg   ebp,eax
  410005:	pop    esi
  410006:	mov    eax,DWORD PTR [ebp+0xb]
  410009:	das    
  41000a:	lea    eax,[ebp-0x16e25]
  410010:	das    
  410011:	jns    0x410087
  410013:	clc    
  410014:	rcl    BYTE PTR [ebx],0xfa
  410017:	call   0x41001c
	...
  410028:	add    BYTE PTR [eax],al
  41002a:	loope  0x41009e
  41002c:	add    BYTE PTR [eax],al
  41002e:	mov    fs:0x96e60571,al
  410034:	add    BYTE PTR [eax],al
  410036:	aas    
  410037:	sub    cl,BYTE PTR [ebx-0x29e11d8]
  41003d:	jne    0x410082
  41003f:	stos   BYTE PTR es:[edi],al
  410040:	rol    BYTE PTR [ebp-0x70],1
  410043:	jns    0x410092
  410045:	mov    ebp,DWORD PTR [edi-0x75]
  410048:	test   ah,dh
  41004a:	mov    BYTE PTR [ecx-0x2],bh
  41004d:	push   eax
  41004e:	std    
  41004f:	test   eax,0x791045c0
  410054:	mov    BYTE PTR [ebp-0x16e59],al
  41005a:	xchg   edi,eax
  41005b:	jno    0x41009f
  41005d:	push   eax
  41005f:	daa    
  410060:	(bad)  
  410061:	addr16 dec ebx
  410063:	mov    BYTE PTR [eax+0x0],0x96
  410067:	sub    al,0xb1
  410069:	xlat   BYTE PTR ds:[ebx]
  41006a:	jmp    0x643f6b83
  41006f:	adc    ebx,DWORD PTR [edx+0x19]
  410072:	pop    ebx
  410073:	les    ebp,FWORD PTR [edx-0x78]
  410076:	adc    ecx,esp
  410078:	jb     0x410078
  41007a:	shl    DWORD PTR [ecx+0x540d6804],0xc3
  410081:	push   DWORD PTR [eax-0x5609b652]
  410087:	in     al,dx
  410088:	push   0x74
  41008a:	mov    fs,ebx
  41008c:	push   0x43
	...
  41009e:	add    BYTE PTR [eax],al
  4100a0:	cdq    
  4100a1:	fdivr  QWORD PTR [esp+eax*4-0x7e]
  4100a5:	mov    WORD PTR [edx-0x2],gs
  4100a8:	cld    
  4100a9:	sti    
  4100aa:	fstp   DWORD PTR [edi-0xfbc532]
  4100b0:	inc    ebx
  4100b1:	mov    ds:0xa471fe72,eax
  4100b6:	lock pop es
  4100b8:	jle    0x410051
  4100ba:	mov    ebp,0x808261fe
  4100bf:	out    0x61,eax
  4100c1:	pushf  
  4100c2:	push   0xffffff8c
  4100c4:	sbb    esp,DWORD PTR [edi+0x72]
  4100c7:	dec    BYTE PTR [ecx-0x15]
  4100ca:	fnstcw WORD PTR [eax-0xfe4532]
  4100d0:	add    esp,DWORD PTR [ebx+0x6431fe72]
  4100d6:	lock pop es
  4100d8:	ds aaa 
  4100da:	mov    ebp,0x808221fe
  4100df:	jecxz  0x410102
  4100e1:	pop    esp
  4100e2:	push   0x69
  4100e4:	xchg   esi,eax
  4100e5:	repz aaa 
  4100e7:	inc    edi
  4100e8:	push   edi
  4100e9:	sti    
  4100ea:	push   0xffffffb4
  4100ec:	fimul  WORD PTR [ebx]
  4100ee:	push   0x5c61f9fe
  4100f3:	cld    
  4100f4:	stc    
  4100f5:	mov    edx,0xdae86923
  4100fa:	ins    BYTE PTR es:[edi],dx
  4100fb:	fs call 0x12b8d005
  410101:	xor    bh,BYTE PTR [edi+0x69]
	...
  410113:	add    BYTE PTR [eax],al
  410115:	add    al,dl
  410117:	mov    cl,0x4f
  410119:	bound  edx,QWORD PTR [ecx-0x5d]
  41011c:	out    0x68,eax
  41011e:	or     ch,BYTE PTR [edx]
  410120:	mov    bh,0x69
  410122:	mov    eax,0xb9fc1d04
  410127:	fisub  DWORD PTR [ebx]
  410129:	imul   ebp,DWORD PTR [eax-0x57af9326],0xda858f04
  410133:	adc    DWORD PTR [edi+0x69],edi
  410136:	nop
  410137:	arpl   bx,si
  410139:	fcom   QWORD PTR [esi+eax*8]
  41013c:	xor    DWORD PTR [ecx-0x80],0x4
  410140:	call   0xa520f934
  410145:	pop    esp
  410146:	push   0xe2045f04
  41014b:	test   eax,0xf39603bf
  410150:	lea    ebp,[ecx-0x1e]
  410153:	jb     0x4101a4
  410155:	cmp    BYTE PTR [edx+0x2693f03],dl
  41015b:	adc    edi,DWORD PTR [edi]
  41015d:	imul   eax,DWORD PTR [eax+0x4],0x432e13b5
  410164:	in     eax,0x68
  410166:	xor    BYTE PTR [edx*2+0x17042058],al
  41016d:	imul   ebp,DWORD PTR [edx+0x5815ff72],0x4a690703
  410177:	sti    
  410178:	imul   BYTE PTR [eax+0x0]
	...
  41018b:	add    BYTE PTR [eax],cl
  41018d:	add    al,0x1
  41018f:	jl     0x410136
  410191:	cli    
  410192:	add    al,0xaf
  410194:	outs   dx,BYTE PTR ds:[esi]
  410195:	add    al,0xfe
  410197:	pushf  
  410198:	pop    ecx
  410199:	or     al,0xfe
  41019b:	fidivr WORD PTR [esi-0x32]
  41019e:	in     al,0xde
  4101a0:	outs   dx,BYTE PTR ds:[esi]
  4101a1:	add    al,0xfe
  4101a3:	push   esp
  4101a4:	cmp    dl,0xc4
  4101a7:	add    al,0x3f
  4101a9:	add    al,0xfe
  4101ab:	je     0x4101e2
  4101ad:	or     al,0xfe
  4101af:	mov    dh,0x2e
  4101b1:	mov    ss,WORD PTR [eax]
  4101b3:	shl    DWORD PTR [ebx],0x46
  4101b6:	std    
  4101b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b8:	sbb    al,bh
  4101ba:	rcl    BYTE PTR [esi+0x1d01043e],1
  4101c0:	jne    0x41023c
  4101c2:	(bad)  
  4101c3:	call   0xfd3ec706
  4101c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c9:	cli    
  4101ca:	push   0xffffffbc
  4101cc:	inc    BYTE PTR [esi+edi*8]
  4101cf:	cmp    al,0xe5
  4101d1:	or     al,0xfe
  4101d3:	outs   dx,BYTE PTR ds:[esi]
  4101d4:	out    dx,al
  4101d5:	into   
  4101d6:	aam    0x5e
  4101d8:	inc    BYTE PTR [esi+edi*8]
  4101db:	aam    0x85
  4101dd:	cli    
  4101de:	mov    WORD PTR [edi+ebp*8],ss
  4101e1:	add    al,0xfe
  4101e3:	aam    0x85
  4101e5:	add    esi,DWORD PTR [ecx+eiz*1+0x3efe04c6]
  4101ec:	cmp    BYTE PTR [ebx-0x18],bl
  4101ef:	add    DWORD PTR [eax],eax
	...
  410201:	add    BYTE PTR [esp+eax*1+0x2ae82efe],ch
  410208:	mul    BYTE PTR [esi]
  41020a:	mov    esi,0xbea9affb
  41020f:	add    al,0xfe
  410211:	pop    esp
  410212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410213:	or     al,0xfe
  410215:	push   cs
  410216:	mov    ebp,0x980040bd
  41021b:	jp     0x41021b
  41021d:	mov    ch,0x9b
  41021f:	xchg   edx,eax
  410220:	(bad)  
  410221:	call   DWORD PTR [edi-0x1700c22a]
  410227:	jp     0x4101dd
  410229:	call   0xe93f7cfe
  41022e:	outs   dx,DWORD PTR ds:[esi]
  41022f:	push   ds
  410230:	(bad)  
  410231:	dec    eax
  410233:	shl    cl,1
  410235:	test   eax,0x7f85e57a
  41023b:	jnp    0x41023b
  41023d:	inc    DWORD PTR [edx+0x7e]
  410240:	idiv   bh
  410242:	or     BYTE PTR [esi+0x7ae84077],ah
  410248:	(bad)  
  410249:	mov    ch,0xf3
  41024b:	jb     0x41024b
  41024d:	inc    DWORD PTR [edi]
  41024f:	sub    edi,DWORD PTR [esi]
  410251:	dec    DWORD PTR [eax]
  410253:	jnp    0x410299
  410255:	clc    
  410256:	push   ss
  410257:	js     0x410255
  410259:	call   FWORD PTR [eax]
  41025b:	mov    dh,BYTE PTR [esp+edi*8+0x27]
  41025f:	ror    BYTE PTR [edi],1
  410261:	add    BYTE PTR [edi+0x3f],ch
  410264:	mov    edi,0xc
	...
  410275:	add    BYTE PTR [eax],al
  410277:	add    BYTE PTR [edi+0x13],ch
  41027a:	mov    ebp,esp
  41027c:	cld    
  41027d:	mov    ds:0x1c7f6af9,al
  410282:	dec    ebp
  410283:	inc    DWORD PTR [edx-0x2]
  410286:	in     eax,0x81
  410288:	mov    cl,BYTE PTR [ecx-0x75fd7602]
  41028e:	(bad)  
  41028f:	jne    0x4102d8
  410291:	push   ds
  410292:	push   esi
  410293:	dec    eax
  410294:	out    dx,al
  410295:	gs std 
  410297:	xor    eax,0x3f5f65
  41029c:	xchg   ecx,ebp
  41029e:	cld    
  41029f:	dec    DWORD PTR [eax-0x69f78b77]
  4102a5:	jecxz  0x410270
  4102a7:	inc    edi
  4102a8:	xlat   BYTE PTR ds:[ebx]
  4102a9:	or     ebx,edx
  4102ab:	add    DWORD PTR [esi+0x1be7820b],edx
  4102b1:	jmp    DWORD PTR [esi-0x2]
  4102b4:	add    DWORD PTR [edi+0x65],edi
  4102b7:	inc    BYTE PTR [ebx-0x4c6ca5fd]
  4102bd:	or     BYTE PTR [edi-0x38],ah
  4102c0:	aam    0x7
  4102c2:	add    dl,BYTE PTR [ebp+0xd]
  4102c5:	sub    BYTE PTR [ebx-0x32c6253d],al
  4102cb:	imul   edx,DWORD PTR [esi+0x43feb695],0x833559f3
  4102d5:	mov    eax,0xcf538866
  4102da:	jp     0x410310
	...
  4102ec:	add    BYTE PTR [eax],al
  4102ee:	gs adc eax,ebp
  4102f1:	call   FWORD PTR [edi+ebx*1]
  4102f4:	das    
  4102f5:	sub    BYTE PTR [edi+0xb],dl
  4102f8:	cmp    BYTE PTR [esi],0x96
  4102fb:	push   edi
  4102fc:	mov    edi,0xc3338567
  410301:	jmp    eax
  410303:	shr    edx,cl
  410305:	adc    DWORD PTR [esi+0x2bffb0b],edx
  41030b:	xor    esp,ecx
  41030d:	out    0x10,eax
  41030f:	mov    dl,0x66
  410311:	inc    dh
  410313:	adc    eax,DWORD PTR [edx]
  410315:	add    BYTE PTR [ecx-0x27],dh
  410318:	fsincos 
  41031a:	into   
  41031b:	retf   0x5001
  41031e:	push   ecx
  41031f:	mov    esi,0x2726e7f9
  410324:	addr16 (bad) 
  410326:	cs ja  0x41034f
  410329:	(bad)  
  41032a:	cmp    DWORD PTR [esp+eax*1-0x1a9de9ba],esp
  410331:	add    esp,DWORD PTR [ebx+0x6467a5fc]
  410337:	and    dl,BYTE PTR [ecx+0x66]
  41033a:	sbb    BYTE PTR [ecx],al
  41033c:	(bad)  
  41033e:	inc    ebx
  41033f:	cmp    ch,dh
  410341:	lock dec esp
  410343:	add    DWORD PTR [ebp+0x67],esi
  410346:	add    BYTE PTR [edi-0x21],dh
  410349:	pop    ebx
  41034a:	mov    eax,ds:0x5065ee3f
  41034f:	mov    al,ds:0x42b0
	...
  410364:	xchg   ebp,eax
  410365:	bound  esi,QWORD PTR [ecx+edi*2]
  410368:	in     eax,dx
  410369:	in     al,0xab
  41036b:	push   0xb541626f
  410370:	shl    BYTE PTR [esi-0x11],1
  410373:	pop    ebx
  410374:	(bad)  
  410376:	mov    esi,0xb3a70e65
  41037b:	fidivr DWORD PTR [ecx+0x56bb0088]
  410381:	bound  ecx,QWORD PTR [edi]
  410383:	sti    
  410384:	pop    esi
  410385:	mov    ds:0x5c6a64e7,eax
  41038a:	rol    dl,0x99
  41038d:	or     BYTE PTR [eax-0x3e],ch
  410390:	nop
  410391:	add    bl,dh
  410393:	inc    ebx
  410394:	add    eax,0x81dc175a
  410399:	add    BYTE PTR [edi+0x203cf1a6],al
  41039f:	ret    
  4103a0:	jno    0x410352
  4103a2:	out    dx,ax
  4103a4:	xchg   ecx,eax
  4103a5:	or     bh,bh
  4103a7:	fbld   TBYTE PTR [eax+0x0]
  4103aa:	inc    eax
  4103ab:	mov    ecx,0xdc4eff98
  4103b0:	push   ecx
  4103b1:	add    BYTE PTR [edi-0x5a],dl
  4103b4:	mov    cl,0x3c
  4103b6:	mov    al,0xc2
  4103b8:	inc    ecx
  4103b9:	mov    BYTE PTR [eax],al
  4103bb:	clc    
  4103bc:	cld    
  4103bd:	mov    ds:0x68412e00,al
  4103c2:	call   0xfe424d7e
  4103c7:	push   ds
	...
  4103d8:	add    BYTE PTR [eax],al
  4103da:	xor    esp,edi
  4103dc:	std    
  4103dd:	pushf  
  4103de:	sbb    eax,0x7acda608
  4103e3:	add    al,cl
  4103e5:	sub    edx,DWORD PTR [esi+0x5e725362]
  4103eb:	in     al,0xc4
  4103ed:	cmc    
  4103ee:	retf   
  4103ef:	cwde   
  4103f0:	push   0xffffffe9
  4103f2:	iret   
  4103f3:	scas   eax,DWORD PTR es:[edi]
  4103f4:	std    
  4103f5:	pop    esp
  4103f6:	jmp    0x8800:0x7b1d4807
  4103fd:	sub    al,0x6e
  4103ff:	in     al,dx
  410400:	xor    ebx,DWORD PTR [edx]
  410402:	mov    dl,0xa1
  410404:	add    BYTE PTR [edx+0x70],dh
  410407:	aaa    
  410408:	sub    BYTE PTR [eax],ch
  41040a:	call   0x68a6:0xa9e93de2
  410411:	and    ch,ch
  410413:	mov    ds:0xed4a3e00,al
  410418:	psubsw mm2,QWORD PTR [ebp-0x6ce23f95]
  41041f:	cwde   
  410420:	call   0xfe41517d
  410425:	sbb    DWORD PTR [edx-0x1],ebp
  410428:	std    
  410429:	mov    ?,WORD PTR [ebx]
  41042b:	xchg   DWORD PTR [ecx+0x20],edx
  41042e:	push   ebp
  41042f:	dec    DWORD PTR [ebp+0x6e]
  410432:	and    BYTE PTR [edi-0x18],0x8a
  410436:	jbe    0x410438
  410438:	(bad)  
  410439:	push   ecx
  41043a:	stos   BYTE PTR es:[edi],al
  41043b:	cmp    eax,0x56fd
	...
  410450:	mov    esi,0x7b694662
  410455:	bound  esi,QWORD PTR [ebx+0x0]
  410458:	aad    0xbd
  41045a:	stc    
  41045b:	xor    ebp,DWORD PTR [edi-0x34]
  41045e:	(bad)  
  41045f:	inc    DWORD PTR [eax+0x27aeef86]
  410465:	(bad)  
  410466:	je     0x410423
  410468:	jo     0x41047a
  41046a:	cli    
  41046b:	dec    DWORD PTR [edx]
  41046d:	sti    
  41046e:	in     eax,0x2b
  410470:	inc    ebx
  410471:	xchg   dh,bh
  410473:	pop    edi
  410474:	inc    ecx
  410475:	cmp    al,0xbf
  410477:	add    al,0xff
  410479:	das    
  41047a:	mov    ebp,esp
  41047c:	ins    BYTE PTR es:[edi],dx
  41047d:	aas    
  41047e:	stc    
  41047f:	push   esi
  410480:	sbb    BYTE PTR [ecx],bl
  410482:	(bad)  
  410483:	imul   ecx,DWORD PTR [esi],0xc7087486
  410489:	scas   al,BYTE PTR es:[edi]
  41048a:	cmp    bh,bh
  41048c:	shr    ah,0x44
  41048f:	cld    
  410490:	je     0x4104eb
  410492:	xor    DWORD PTR [eax],ebp
  410494:	jle    0x4104fc
  410496:	mov    DWORD PTR ds:0x3f4ac8,edi
  41049c:	das    
  41049d:	inc    ebx
  41049e:	add    BYTE PTR [edx+ebp*2+0xe],dh
  4104a2:	pop    edi
  4104a3:	dec    ecx
  4104a4:	jle    0x41050c
  4104a6:	push   ebp
  4104a7:	call   0x3efa5b
  4104ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ad:	mov    ds:0x8e591f71,al
  4104b2:	xor    cl,BYTE PTR [eax+0x0]
	...
  4104c5:	add    BYTE PTR [eax],ah
  4104c7:	or     BYTE PTR [ebp+0x68],0x7f
  4104cb:	(bad)  
  4104cc:	in     eax,dx
  4104cd:	mov    esi,0x414917a7
  4104d2:	outs   dx,DWORD PTR ds:[esi]
  4104d3:	mov    dl,0xfe
  4104d5:	jne    0x41054e
  4104d7:	mov    ah,BYTE PTR [ebx+eiz*2]
  4104da:	lock and ebp,0xfe818151
  4104e1:	jmp    0x410479
  4104e3:	or     cl,al
  4104e5:	jg     0x410477
  4104e7:	or     ebx,ecx
  4104e9:	stc    
  4104ea:	shl    BYTE PTR [edi+0x3cffc015],1
  4104f0:	popa   
  4104f1:	(bad)  
  4104f2:	cmp    DWORD PTR [edx],edi
  4104f4:	mov    dl,0x37
  4104f6:	cdq    
  4104f7:	mov    dh,0x9e
  4104f9:	(bad)  
  4104fa:	mov    ds:0x8e746147,eax
  4104ff:	push   ebx
  410500:	scas   eax,DWORD PTR es:[edi]
  410501:	cmp    bl,BYTE PTR [ecx]
  410503:	push   ebp
  410504:	rcr    DWORD PTR [ebp-0x21],0x49
  410508:	or     BYTE PTR [eax],al
  41050a:	arpl   WORD PTR [eax+0x70],si
  41050d:	sbb    dl,0xff
  410510:	jmp    0x410511
  410512:	outs   dx,DWORD PTR ds:[esi]
  410513:	fldenv [edx+0x74]
  410516:	sahf   
  410517:	arpl   cx,dx
  410519:	cmp    ch,cl
  41051b:	add    al,0x8d
  41051d:	inc    esp
  41051e:	loop   0x4104b3
  410520:	loopne 0x41056a
  410522:	push   edi
  410523:	or     esp,DWORD PTR [ebx+0x74]
  410526:	sahf   
  410527:	and    edx,eax
  410529:	fild   WORD PTR [eax]
	...
  41053b:	add    cl,cl
  41053d:	and    al,0x63
  41053f:	je     0x410503
  410541:	mov    esp,0x31ae07d8
  410546:	sbb    eax,0x43c2b1ff
  41054b:	add    edx,DWORD PTR [esi+0x15eb8d3e]
  410551:	enter  0x565d,0x2e
  410555:	ret    0x3f3b
  410558:	xchg   esi,eax
  410559:	rcl    ebx,cl
  41055b:	add    BYTE PTR [ebp-0x1c],dl
  41055e:	dec    edx
  41055f:	inc    esp
  410560:	or     BYTE PTR [ebx],0x2
  410563:	add    BYTE PTR [esi-0x28b78acc],dl
  410569:	or     esp,DWORD PTR [ebx+0x74]
  41056c:	sahf   
  41056d:	bound  esi,QWORD PTR [esi+0x8]
  410570:	outs   dx,BYTE PTR ds:[esi]
  410571:	test   al,0xa8
  410573:	add    esi,edx
  410575:	ret    
  410576:	pop    ss
  410577:	add    al,0x96
  410579:	bound  esp,QWORD PTR [edi-0x25]
  41057c:	xchg   edi,eax
  41057d:	bound  edi,QWORD PTR [ebx-0x1088bef5]
  410583:	imul   ebp,DWORD PTR [edi+esi*1+0x36],0x62
  410588:	ds mov edx,0xa9603e7
  41058e:	(bad)  
  41058f:	retf   0xfd20
  410592:	push   ds
  410593:	fcom   DWORD PTR [ecx+0x111c060a]
  410599:	std    
  41059a:	dec    edx
  41059b:	addr16 pop edi
  41059d:	mov    ds:0xe7e7,eax
	...
  4105b2:	add    BYTE PTR [edi],dh
  4105b4:	out    0x3,eax
  4105b6:	xchg   esi,eax
  4105b7:	bound  esp,QWORD PTR [edx+0x47]
  4105ba:	jne    0x4105b9
  4105bc:	mov    ah,0x3
  4105be:	xchg   esi,eax
  4105bf:	(bad)  
  4105c0:	out    0xb6,eax
  4105c2:	push   ecx
  4105c3:	mov    al,BYTE PTR [ebp+edi*1-0x3dc09d67]
  4105ca:	in     al,dx
  4105cb:	mov    eax,ds:0xeb35b3e7
  4105d0:	or     al,0x4
  4105d2:	xchg   esi,eax
  4105d3:	(bad)  
  4105d4:	out    0x60,eax
  4105d6:	inc    edx
  4105d7:	push   0xffffffb6
  4105d9:	stc    
  4105da:	push   ss
  4105db:	cmp    eax,0x6269c402
  4105e0:	sbb    eax,DWORD PTR [ecx]
  4105e2:	adc    eax,0x8ed7f7fa
  4105e7:	and    eax,0x6296602d
  4105ec:	out    0x3,eax
  4105ee:	jge    0x410642
  4105f0:	xchg   BYTE PTR [edi],dl
  4105f2:	jp     0x41059d
  4105f4:	sub    BYTE PTR [ecx+edi*2],al
  4105f7:	add    BYTE PTR ss:[ecx-0x7eff5ca0],al
  4105fe:	sub    esi,DWORD PTR ds:0x201b66fd
  410604:	sbb    DWORD PTR [edx+0x4f],edx
  410607:	xchg   edi,eax
  410608:	mov    DWORD PTR [ebp+0x23],eax
  41060b:	xchg   edi,eax
  41060c:	or     al,0x62
  41060e:	push   ecx
  41060f:	ins    BYTE PTR es:[edi],dx
  410610:	std    
  410611:	mov    ebx,0x8180eb8d
	...
  410626:	add    BYTE PTR [eax],al
  410628:	xchg   edx,eax
  410629:	bound  eax,QWORD PTR [eax]
  41062b:	ss dec eax
  41062d:	push   0xfbde698d
  410632:	std    
  410633:	jmp    0x6e5177ee
  410638:	adc    dh,BYTE PTR [eax-0x206a1700]
  41063e:	cmp    eax,DWORD PTR [ecx]
  410640:	fsub   DWORD PTR [edx+0x52e9e900]
  410646:	std    
  410647:	mov    ah,0x71
  410649:	test   eax,0x3676e93f
  41064e:	call   0xe63cdaf6
  410653:	add    DWORD PTR [edi-0x5],edi
  410656:	std    
  410657:	mov    eax,ds:0xe9006295
  41065c:	adc    BYTE PTR [edx],ah
  41065e:	and    eax,0x3ecb1e9
  410663:	jmp    0x6a4168fd
  410668:	dec    esi
  410669:	pop    edi
  41066a:	xor    esi,0xee836b95
  410670:	ss cld 
  410672:	std    
  410673:	jb     0x41064d
  410675:	neg    DWORD PTR [ebp-0x50]
  410678:	push   ebx
  410679:	pop    edi
  41067a:	add    BYTE PTR [edi],bh
  41067c:	sub    BYTE PTR [eax],0xda
  41067f:	sub    DWORD PTR [edx+0x6e0072fa],edx
  410685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410686:	dec    BYTE PTR [ebx-0x7409b1ba]
	...
  41069c:	add    BYTE PTR [eax],al
  41069e:	ss pop es
  4106a0:	jle    0x41064a
  4106a2:	dec    ebp
  4106a3:	pusha  
  4106a4:	mov    ecx,ecx
  4106a6:	pop    ecx
  4106a7:	out    dx,al
  4106a8:	enter  0x97eb,0xed
  4106ac:	enter  0x8103,0xee
  4106b0:	enter  0xb450,0xa8
  4106b4:	in     eax,0xa7
  4106b6:	dec    ecx
  4106b7:	pop    edi
  4106b8:	add    BYTE PTR [ebx-0x3675487a],cl
  4106be:	cmp    al,0xa5
  4106c0:	mov    cl,cl
  4106c2:	or     DWORD PTR [esi-0xa],ebp
  4106c5:	jne    0x41065a
  4106c7:	and    ebx,eax
  4106c9:	push   ebp
  4106ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106cb:	mov    esp,DWORD PTR [ebp+0x8]
  4106ce:	retf   
  4106cf:	pop    ds
  4106d0:	(bad)  
  4106d1:	imul   DWORD PTR ds:0x84ffc160
  4106d7:	and    al,0x6
  4106d9:	or     ebp,DWORD PTR [edi+0x2eb0a13]
  4106df:	add    DWORD PTR ds:0x7e1ef7fe,0xf419ef38
  4106e9:	leave  
  4106ea:	sub    eax,0x3455006a
  4106ef:	jb     0x410673
  4106f1:	(bad)
  4106f5:	xor    bl,bh
  4106f7:	and    eax,0x657df7fe
  4106fc:	sar    edi,0x0
  4106ff:	sub    edx,esi
	...
  410711:	add    BYTE PTR [eax],al
  410713:	add    BYTE PTR [edi-0x2bd4ffa2],bh
  410719:	rol    BYTE PTR [esp+edi*8+0x5f],1
  41071d:	fwait
  41071e:	je     0x410728
  410720:	xchg   esi,eax
  410721:	jecxz  0x41079a
  410723:	or     eax,0xbf890b96
  410728:	(bad)  
  410729:	mov    dh,0x5e
  41072b:	je     0x4106bb
  41072d:	shl    DWORD PTR [edi],cl
  41072f:	xor    al,0x71
  410731:	jno    0x4106be
  410733:	inc    esp
  410734:	outs   dx,BYTE PTR ds:[esi]
  410735:	dec    esp
  410736:	mov    ah,0xe7
  410738:	repnz aas 
  41073a:	pop    ebp
  41073b:	dec    BYTE PTR [edi]
  41073d:	mov    edi,0x8fcbfe55
  410742:	ins    BYTE PTR es:[edi],dx
  410743:	push   ebx
  410744:	fwait
  410745:	or     eax,DWORD PTR [edx]
  410747:	or     edx,DWORD PTR [esi-0x48]
  41074a:	cmc    
  41074b:	inc    bl
  41074d:	mov    ds:0xdc2a745d,eax
  410752:	imul   eax,DWORD PTR [edi-0x1a2b796],0x416c3fab
  41075c:	mov    ecx,DWORD PTR [ebx]
  41075e:	add    bh,bh
  410760:	mov    eax,DWORD PTR [ebx]
  410762:	push   0xfffffff3
  410764:	ret    
  410765:	push   0xf783825d
  41076a:	add    DWORD PTR [eax+ebx*4-0x2d],esi
  41076e:	add    DWORD PTR [ebx+0x57],ecx
  410771:	or     ebx,DWORD PTR [edi+0x74]
  410774:	loop   0x4107d9
  410776:	xchg   ecx,eax
  410777:	or     eax,0x0
	...
  410788:	add    BYTE PTR [eax],al
  41078a:	xchg   esi,eax
  41078b:	or     ecx,DWORD PTR [ebx]
  41078d:	shl    BYTE PTR [edx-0x2],0x9a
  410791:	add    BYTE PTR [esi+0x43ff020b],dl
  410797:	punpckhdq mm0,QWORD PTR ds:0x8a5f2082
  41079e:	aad    0x44
  4107a0:	dec    ebx
  4107a1:	rcr    DWORD PTR [edx-0x457546f5],0xa3
  4107a8:	sahf   
  4107a9:	fist   DWORD PTR [esi+0x62]
  4107ac:	out    0x5b,eax
  4107ae:	daa    
  4107af:	arpl   WORD PTR [edx-0x20906fa2],bp
  4107b5:	imul   edi,DWORD PTR [edx-0x10a171d0],0x6a
  4107bc:	lar    ebp,WORD PTR [esi-0x15a1185d]
  4107c3:	push   0x7f
  4107c5:	fsub   QWORD PTR [ecx-0x66169107]
  4107cb:	mov    cl,BYTE PTR [edx]
  4107cd:	sub    al,0xd7
  4107cf:	bound  ebx,QWORD PTR [esi-0x28]
  4107d2:	cdq    
  4107d3:	or     al,dl
  4107d5:	sbb    ecx,DWORD PTR [ecx-0x7]
  4107d8:	dec    esi
  4107d9:	fcomp  DWORD PTR [ecx+0x3860340a]
  4107df:	stc    
  4107e0:	jg     0x4107e6
  4107e2:	xchg   esi,eax
  4107e3:	(bad)  
  4107e4:	out    0x4c,eax
  4107e6:	push   edi
  4107e7:	pop    esi
  4107e8:	out    0xb8,eax
  4107ea:	or     al,0x6
  4107ec:	imul   eax,DWORD PTR [edi+0x0],0x0
	...
  410800:	and    DWORD PTR [edx+0x62d140e4],ecx
  410806:	psrlw  mm2,QWORD PTR [esi-0x75a1f0db]
  41080d:	pushw  es
  41080f:	fcom   DWORD PTR [ecx-0xee687f6]
  410815:	clc    
  410816:	cs enter 0x62ed,0xe7
  41081b:	add    edx,DWORD PTR [esi+0x495c2ce7]
  410821:	mov    dl,bl
  410823:	retf   0x6256
  410826:	mov    edi,0xcef9514a
  41082b:	or     esi,edx
  41082d:	ins    DWORD PTR es:[edi],dx
  41082e:	or     DWORD PTR [esp+edx*1+0x2af4bf77],esi
  410835:	push   eax
  410836:	add    BYTE PTR [ebx-0x5e],al
  410839:	test   al,0xfd
  41083b:	xor    al,0x86
  41083d:	or     bl,ch
  41083f:	loop   0x41087b
  410841:	clc    
  410842:	or     DWORD PTR [ecx+0x2cc5616e],ebp
  410848:	div    bh
  41084a:	std    
  41084b:	jmp    0xc2a512e5
  410850:	(bad)  
  410852:	mov    DWORD PTR [esi+esi*8],esp
  410855:	sub    al,bl
  410857:	loope  0x4107ee
  410859:	lea    ecx,[ecx+0x6080277d]
  41085f:	inc    esp
  410860:	push   edx
  410861:	clc    
  410862:	cmc    
  410863:	fild   DWORD PTR [eax]
	...
  410875:	add    BYTE PTR [ebx+eiz*1-0x770fd02],dl
  41087c:	jae    0x41085f
  41087e:	lods   eax,DWORD PTR ds:[esi]
  41087f:	mov    al,ds:0x6cdb46fd
  410884:	shr    dh,0x19
  410887:	into   
  410888:	add    cl,ch
  41088a:	xchg   ebp,eax
  41088b:	div    DWORD PTR [ebx-0x1f]
  41088e:	lods   eax,DWORD PTR ds:[esi]
  41088f:	sti    
  410890:	xor    ah,BYTE PTR [esi]
  410892:	mov    ebx,0x9894c06c
  410897:	or     DWORD PTR [ebx-0x29d6a17],ecx
  41089d:	xchg   esp,eax
  41089e:	xchg   ecx,eax
  41089f:	div    DWORD PTR [ebx-0xf]
  4108a2:	ins    DWORD PTR es:[edi],dx
  4108a3:	cmp    ch,0xfe
  4108a6:	push   edx
  4108a7:	clc    
  4108a8:	jae    0x41088b
  4108aa:	jge    0x4108dc
  4108ac:	cmp    ch,dh
  4108ae:	inc    edx
  4108af:	ins    BYTE PTR es:[edi],dx
  4108b0:	rcr    BYTE PTR [esp+edx*4+0xb],0x70
  4108b5:	fsubp  st(0),st
  4108b7:	pop    edi
  4108b8:	call   0xfe38b65d
  4108bd:	loop   0x410914
  4108bf:	outs   dx,BYTE PTR ds:[esi]
  4108c0:	add    al,BYTE PTR [eax]
  4108c2:	in     al,0x2
  4108c4:	push   DWORD PTR [ebp-0x59]
  4108c7:	mov    esp,DWORD PTR [eax]
  4108c9:	cmp    eax,esp
  4108cb:	xchg   esi,eax
  4108cc:	or     al,al
  4108ce:	push   0x64
  4108d0:	jmp    0x26f1902a
  4108d5:	inc    ecx
  4108d6:	jg     0x41086e
  4108d8:	je     0x4108e2
	...
  4108ea:	add    BYTE PTR [eax],al
  4108ec:	pop    ss
  4108ed:	mov    ecx,0x6a10ff39
  4108f2:	shl    BYTE PTR [ebp+0x6d],0x8a
  4108f6:	aas    
  4108f7:	jmp    FWORD PTR [edx+0x6b]
  4108fa:	call   0xfed73099
  4108ff:	or     ebp,DWORD PTR [edi]
  410901:	adc    BYTE PTR [eax],al
  410903:	jmp    0x410980
  410905:	xchg   ebp,eax
  410906:	je     0x410910
  410908:	out    0x91,eax
  41090a:	xor    eax,0xc06ae0ff
  41090f:	jne    0x41093e
  410911:	mov    ah,BYTE PTR [ebx]
  410913:	(bad)  
  410914:	cli    
  410915:	push   0xffffffe8
  410917:	xchg   DWORD PTR ds:0x6783fe96,ebp
  41091d:	inc    ebx
  41091e:	jne    0x410922
  410920:	xchg   esp,eax
  410921:	sahf   
  410922:	or     al,al
  410924:	sti    
  410925:	icebp  
  410926:	cmp    al,0x0
  410928:	push   edx
  41092a:	std    
  41092b:	jb     0x410920
  41092d:	fld    DWORD PTR [eax]
  41092f:	add    bh,ch
  410931:	(bad)  
  410932:	jmp    0xa35d3c
  410937:	add    bh,bh
  410939:	jmp    0xa1f76500
  41093e:	add    eax,0xe9ea0a00
  410943:	push   0x3d3c8e
  410948:	mov    bh,0xf
  41094a:	add    ebx,eax
  41094c:	xchg   esi,eax
  41094d:	adc    BYTE PTR [edx+0x74],bl
	...
  410960:	add    BYTE PTR [eax],al
  410962:	xchg   edx,eax
  410963:	sub    al,dl
  410965:	pop    es
  410966:	scas   al,BYTE PTR es:[edi]
  410967:	pop    cx
  410969:	(bad)  
  41096a:	mov    cl,0xf3
  41096c:	inc    ecx
  41096d:	je     0x4108fb
  41096f:	mov    al,0xcf
  410971:	or     esp,DWORD PTR [ecx-0x7e17f3d3]
  410977:	rcr    BYTE PTR [ecx-0x2],0x9d
  41097b:	retf   
  41097c:	iret   
  41097d:	or     cl,BYTE PTR [ecx+0xbff0857]
  410983:	add    al,0x6a
  410985:	pop    es
  410986:	jns    0x410965
  410988:	pop    ecx
  410989:	enter  0xf454,0x1
  41098d:	push   ebp
  41098e:	sbb    eax,0x7ac385e0
  410993:	pop    ecx
  410994:	mov    cl,0x67
  410996:	neg    BYTE PTR [ebp+0x1a49ffc4]
  41099c:	add    eax,0x3d6149c3
  4109a1:	out    0x54,eax
  4109a3:	mov    cl,0x5a
  4109a5:	(bad)  
  4109a6:	push   ecx
  4109a7:	(bad)  
  4109a8:	push   DWORD PTR gs:[ecx]
  4109ab:	or     al,0x2
  4109ad:	(bad)  
  4109ae:	rcr    DWORD PTR [edi-0x4f0184c],cl
  4109b4:	pop    edx
  4109b5:	(bad)  
  4109b6:	adc    eax,0x8aff65bf
  4109bb:	arpl   WORD PTR [edi+0x69bbfa44],ax
  4109c1:	jns    0x41098a
  4109c3:	fs pop ecx
  4109c5:	add    BYTE PTR [eax],0x0
	...
  4109d8:	jnp    0x410a29
  4109da:	add    al,0x75
  4109dc:	lahf   
  4109dd:	xchg   BYTE PTR [edi-0x129cb915],bh
  4109e3:	xor    cl,ah
  4109e5:	add    al,0x87
  4109e7:	jl     0x4109d3
  4109e9:	(bad)  
  4109ea:	out    0xa,eax
  4109ec:	sbb    ah,ch
  4109ee:	out    0x3,eax
  4109f0:	xchg   esi,eax
  4109f1:	out    0x2c,eax
  4109f3:	push   esp
  4109f4:	push   ecx
  4109f5:	cmc    
  4109f6:	push   esp
  4109f7:	push   0x5ac68bb1
  4109fc:	mov    al,0xe1
  4109fe:	mov    edi,0x76772304
  410a03:	in     eax,0x78
  410a05:	mov    ds:0x1d3e6ee7,eax
  410a0a:	sub    eax,0xe7629f60
  410a0f:	add    edx,DWORD PTR [ecx-0x61]
  410a12:	jg     0x410a17
  410a14:	xchg   esi,eax
  410a15:	(bad)  
  410a16:	out    0x88,eax
  410a18:	ror    BYTE PTR [edx],cl
  410a1a:	sbb    BYTE PTR [ebx-0x16],bl
  410a1d:	push   es
  410a1e:	pop    ss
  410a1f:	ins    BYTE PTR es:[edi],dx
  410a20:	fs cwde 
  410a22:	jbe    0x410a7e
  410a24:	mov    WORD PTR [edx],fs
  410a26:	hlt    
  410a27:	repz adc al,0x77
  410a2a:	dec    edi
  410a2b:	add    ecx,edx
  410a2d:	push   0xa31d05e
  410a32:	adc    ebx,DWORD PTR [ecx+0x40]
  410a35:	cmc    
  410a36:	bound  edi,QWORD PTR [ebx]
  410a38:	cmp    BYTE PTR [edi+0x4f],ch
  410a3b:	imul   eax,DWORD PTR [eax],0x0
	...
  410a4e:	xor    BYTE PTR [ebx],0x3e
  410a51:	pop    edx
  410a52:	pushf  
  410a53:	sbb    DWORD PTR [ebp+0x437714f0],edi
  410a59:	add    esp,DWORD PTR [edx-0xa37d99b]
  410a5f:	mov    DWORD PTR [edi-0xa],ebp
  410a62:	or     ebp,esi
  410a64:	push   DWORD PTR [ebp-0x74]
  410a67:	(bad)  
  410a68:	out    0x6e,eax
  410a6a:	inc    eax
  410a6b:	or     ecx,ebp
  410a6d:	ret    0x3571
  410a70:	out    0xd0,eax
  410a72:	out    dx,eax
  410a73:	pushf  
  410a74:	add    BYTE PTR [ecx+0x7c],ch
  410a77:	bound  esi,QWORD PTR [ebp+eiz*8-0x78]
  410a7b:	sbb    DWORD PTR [ebp-0x79],esi
  410a7e:	mov    ds:0xbbf97519,eax
  410a83:	mov    ebp,DWORD PTR fs:[edx+ebp*2]
  410a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a88:	push   0xa1c8d5
  410a8d:	rol    DWORD PTR [edx],1
  410a8f:	sahf   
  410a90:	std    
  410a91:	mov    esi,0xc1ec6e4f
  410a96:	xor    al,BYTE PTR [ebp-0x3]
  410a99:	scas   al,BYTE PTR es:[edi]
  410a9a:	or     esp,DWORD PTR [eax]
  410a9c:	pop    esi
  410a9d:	inc    edx
  410a9e:	frstor [eax]
  410aa0:	push   esp
  410aa1:	jb     0x410aa1
  410aa3:	loop   0x410a69
  410aa5:	dec    ecx
  410aa6:	fdivr  st(4),st
  410aa8:	std    
  410aa9:	ss inc esp
  410aab:	jl     0x410afd
  410aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aae:	pop    edx
  410aaf:	hlt    
  410ab0:	cmc    
  410ab1:	sti    
	...
  410ac2:	add    BYTE PTR [eax],al
  410ac4:	xchg   esp,eax
  410ac5:	pop    ds
  410ac6:	(bad)  
  410ac7:	ss das 
  410ac9:	cmp    eax,0x3515e93f
  410ace:	add    dh,dh
  410ad0:	shr    DWORD PTR [eax],1
  410ad2:	add    cl,ch
  410ad4:	xchg   ebp,eax
  410ad5:	in     eax,0x83
  410ad7:	pop    ebp
  410ad8:	fdivr  st(4),st
  410ada:	std    
  410adb:	mov    ecx,0xa130fc06
  410ae0:	into   
  410ae1:	hlt    
  410ae2:	or     DWORD PTR [ecx],ebp
  410ae4:	lahf   
  410ae5:	fisub  WORD PTR [eax+ebp*8+0x6c816295]
  410aec:	(bad)  
  410aed:	cmc    
  410aee:	std    
  410aef:	es call 0x62:0x95768463
  410af7:	cmp    DWORD PTR fs:[ebx-0x5ca0f102],0x92b200fd
  410b02:	sti    
  410b03:	(bad)  
  410b04:	call   0xe878f690
  410b09:	call   0xfea1:0xe376f62a
  410b10:	mov    eax,0xa137ea9a
  410b15:	imul   esi,DWORD PTR [esi-0x439667c],0x65afc8ff
  410b1f:	sbb    BYTE PTR [edi+ebx*1-0x2],ah
  410b23:	mov    WORD PTR [edx],?
  410b25:	popf   
  410b26:	sti    
  410b27:	inc    DWORD PTR [eax]
	...
  410b39:	add    al,ch
  410b3b:	scas   eax,DWORD PTR es:[edi]
  410b3c:	in     eax,0x41
  410b3e:	mov    ah,0x5f
  410b40:	add    BYTE PTR [ebx-0x7a74a4bd],al
  410b46:	cmp    eax,0xbffffe99
  410b4b:	cdq    
  410b4c:	mov    ah,0xa4
  410b4e:	or     DWORD PTR [edx+0x4b10e8fe],ebx
  410b54:	std    
  410b55:	jmp    esi
  410b57:	je     0x410afa
  410b59:	(bad)  
  410b5a:	call   0xe9c44ef9
  410b5f:	out    dx,eax
  410b60:	outs   dx,DWORD PTR ds:[esi]
  410b61:	les    edi,FWORD PTR [eax-0x17010e1c]
  410b67:	call   0xc7fe:0x999db4e5
  410b6e:	mov    dl,0xd7
  410b70:	sti    
  410b71:	(bad)  
  410b72:	fcomp  DWORD PTR [edi+0x0]
  410b75:	add    BYTE PTR [edi],bh
  410b77:	add    eax,0xd7b28d00
  410b7c:	sti    
  410b7d:	jmp    FWORD PTR [eax-0x51]
  410b80:	(bad)  
  410b81:	mov    ch,0xb3
  410b83:	cdq    
  410b84:	(bad)  
  410b85:	jmp    DWORD PTR [edi-0x6900cf07]
  410b8b:	dec    esp
  410b8c:	or     al,0xc0
  410b8e:	mov    DWORD PTR [ebp+0x59],edi
  410b91:	push   ecx
  410b93:	or     BYTE PTR [ebx+0x55f32ebc],al
  410b99:	(bad)  
  410b9a:	push   ebx
  410b9b:	iret   
  410b9c:	add    DWORD PTR [eax],eax
	...
  410bae:	add    BYTE PTR [eax],al
  410bb0:	mov    DWORD PTR [esi+0x69],edi
  410bb3:	call   ecx
  410bb5:	or     BYTE PTR [ecx+0x5612cd84],cl
  410bbb:	(bad)  
  410bbc:	mov    ax,ds:0x9960100
  410bc2:	push   0xffffffe3
  410bc4:	lahf   
  410bc5:	or     DWORD PTR [edx],eax
  410bc7:	or     edx,esi
  410bc9:	add    edi,DWORD PTR [esi-0x32]
  410bcc:	xchg   esi,eax
  410bcd:	or     DWORD PTR [edx],eax
  410bcf:	cmp    eax,0x20a92
  410bd4:	mov    eax,ds:0x89ff4080
  410bd9:	cld    
  410bda:	imul   ecx,DWORD PTR [edi-0x74],0xee5001fb
  410be1:	jmp    0xc17f:0x769640ca
  410be8:	push   0x6e4f5571
  410bed:	mov    al,ds:0x7c96000a
  410bf2:	inc    eax
  410bf3:	or     edi,DWORD PTR [ebx+edi*8-0x6db27b78]
  410bfa:	push   ebp
  410bfb:	(bad)  
  410bfc:	out    0xa3,al
  410bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bff:	or     BYTE PTR [esi+0x2d8488fb],dl
  410c05:	stos   BYTE PTR es:[edi],al
  410c06:	push   ebp
  410c07:	inc    dh
  410c09:	xchg   ebx,eax
  410c0a:	adc    al,0x43
  410c0c:	and    DWORD PTR [ecx],edi
  410c0e:	or     eax,eax
  410c10:	mov    ds:0x8aec5b,eax
	...
  410c25:	add    BYTE PTR [esi+0x1b03a862],bh
  410c2b:	call   0xf2416252
  410c30:	mov    bh,0x6b
  410c32:	into   
  410c33:	sub    eax,0xd822570e
  410c38:	sub    DWORD PTR [esi-0x18],edx
  410c3b:	icebp  
  410c3c:	cdq    
  410c3d:	mov    bl,0xf9
  410c3f:	push   edx
  410c40:	mov    bl,0x56
  410c42:	fdivr  st,st(5)
  410c44:	fimul  DWORD PTR [eax+0x56e6251a]
  410c4a:	enter  0x6c92,0x80
  410c4e:	mov    esp,0x4956d6f0
  410c53:	cli    
  410c54:	xchg   BYTE PTR [edx],bl
  410c56:	mov    cl,0xf1
  410c58:	jo     0x410bda
  410c5a:	in     eax,dx
  410c5b:	lock mov esi,0x73b7a056
  410c61:	push   ebp
  410c62:	cwde   
  410c63:	icebp  
  410c64:	scas   al,BYTE PTR es:[edi]
  410c65:	nop
  410c66:	test   eax,esi
  410c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c69:	push   esi
  410c6a:	jno    0x410ce2
  410c6c:	ficom  DWORD PTR [esi-0x80]
  410c6f:	pop    ebp
  410c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c71:	iret   
  410c72:	les    edi,FWORD PTR [edx-0x14]
  410c75:	retf   0x62d6
  410c78:	(bad)  
  410c79:	pop    esi
  410c7a:	xchg   ecx,eax
  410c7b:	(bad)  
  410c7c:	out    0xb3,eax
  410c7e:	stc    
  410c7f:	dec    edi
  410c80:	and    al,ch
  410c82:	pop    ecx
  410c83:	lock xor al,0x9f
  410c86:	push   ebx
  410c87:	icebp  
  410c88:	imul   ax,WORD PTR [eax],0x0
	...
  410c9c:	inc    eax
  410c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9e:	pop    esi
  410c9f:	push   esi
  410ca0:	scas   eax,DWORD PTR es:[edi]
  410ca1:	arpl   cx,ax
  410ca3:	add    ebp,DWORD PTR [edx+eiz*2-0x10126fb2]
  410caa:	inc    esi
  410cab:	push   esi
  410cac:	mov    cl,0x57
  410cae:	adc    ch,al
  410cb0:	and    DWORD PTR [ebx+0x0],edi
  410cb3:	jmp    0xe94bb265
  410cb8:	xchg   ebp,eax
  410cb9:	icebp  
  410cba:	mov    bl,0x65
  410cbc:	arpl   ax,si
  410cbe:	std    
  410cbf:	adc    DWORD PTR [eax],edi
  410cc1:	cmp    ch,bh
  410cc3:	push   ss
  410cc4:	pusha  
  410cc5:	mov    dh,0xa4
  410cc7:	cmovs  esi,eax
  410cca:	call   0xfe32a51c
  410ccf:	(bad)  
  410cd0:	adc    ebp,esi
  410cd2:	(bad)  
  410cd3:	test   BYTE PTR [ebx+0x9],0x7
  410cd7:	mov    esi,0x1afcf068
  410cdc:	push   edx
  410cdd:	stos   BYTE PTR es:[edi],al
  410cde:	std    
  410cdf:	fisubr WORD PTR [ebx-0x10]
  410ce2:	xacquire xchg DWORD PTR [edx-0x5e9bf297],ebx
  410ce9:	lock std 
  410ceb:	(bad)  
  410cec:	loopne 0x410c7d
  410cee:	(bad)  
  410cef:	stos   BYTE PTR es:[edi],al
  410cf0:	icebp  
  410cf1:	fucomi st,st(4)
  410cf3:	push   0x56
  410cf5:	add    DWORD PTR [ecx-0x14],ebp
  410cf8:	hlt    
  410cf9:	das    
  410cfa:	add    BYTE PTR [ecx-0x613e9c9c],ah
	...
  410d10:	add    BYTE PTR [eax],al
  410d12:	movlps xmm5,QWORD PTR [ecx-0x14]
  410d16:	xchg   esp,eax
  410d17:	bound  eax,QWORD PTR [eax]
  410d19:	or     DWORD PTR [eax+0x39],0x121f86fd
  410d20:	mov    BYTE PTR [esi+edi*4],ah
  410d23:	(bad)  
  410d25:	add    DWORD PTR [ecx+0x63],ebx
  410d28:	add    cl,ch
  410d2a:	mov    ebp,0xe366357e
  410d2f:	(bad)  
  410d31:	jo     0x410d34
  410d33:	add    BYTE PTR [ecx-0x14],ch
  410d36:	xchg   esp,eax
  410d37:	bound  eax,QWORD PTR [eax]
  410d39:	inc    ecx
  410d3a:	call   0xd0420a77
  410d3f:	fxch   st(7)
  410d41:	mov    edi,DWORD PTR [ebp-0x25]
  410d44:	inc    esp
  410d45:	clc    
  410d46:	mov    ah,0x34
  410d48:	mov    dl,dl
  410d4a:	xlat   BYTE PTR ds:[ebx]
  410d4b:	out    dx,eax
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	call   DWORD PTR [esi+0x6425fc74]
  410d54:	call   0xa50374
  410d59:	mov    ebp,DWORD PTR [ebp+0x6affcfd9]
  410d5f:	xchg   ebx,eax
  410d60:	gs add al,0xee
  410d63:	arpl   WORD PTR [eax],ax
  410d65:	call   0x4168cf
  410d6a:	mov    ah,0xa3
  410d6c:	jno    0x410d7d
  410d6e:	inc    esp
  410d6f:	xor    DWORD PTR [ebp+0x22],esp
  410d72:	test   BYTE PTR [ebx],ah
  410d74:	(bad)  
  410d75:	inc    BYTE PTR [eax]
	...
  410d87:	add    BYTE PTR [edx-0x6a],bl
  410d8a:	in     eax,0x31
  410d8c:	mov    bh,0x63
  410d8e:	add    BYTE PTR [ebx+0x69fdfa0d],cl
  410d94:	scas   eax,DWORD PTR es:[edi]
  410d95:	stc    
  410d96:	jmp    FWORD PTR [ecx-0x51]
  410d99:	stc    
  410d9a:	add    ch,BYTE PTR [eax+0x7f]
  410d9d:	arpl   WORD PTR [eax],ax
  410d9f:	shl    BYTE PTR [eax],0x20
  410da2:	out    dx,al
  410da3:	call   0x3efbeb
  410da8:	div    BYTE PTR [eax-0x5c8bbf0f]
  410dae:	je     0x410df4
  410db0:	adc    BYTE PTR [eax],ah
  410db2:	cli    
  410db3:	jmp    FWORD PTR [edx-0x6d]
  410db6:	in     eax,0xff
  410db8:	push   0xa36a0063
  410dbd:	cld    
  410dbe:	std    
  410dbf:	(bad)  
  410dc0:	push   0xffffff93
  410dc2:	in     eax,0x73
  410dc4:	inc    esi
  410dc5:	arpl   WORD PTR [eax],ax
  410dc7:	or     edx,DWORD PTR [esi-0x29f432c7]
  410dcd:	and    DWORD PTR [eax],esp
  410dcf:	dec    ebx
  410dd0:	xlat   BYTE PTR ds:[ebx]
  410dd1:	stc    
  410dd2:	mov    cl,0xe7
  410dd4:	xor    eax,0xac000208
  410dd9:	stc    
  410dda:	out    0xff,eax
  410ddc:	jg     0x410dd9
  410dde:	out    0xff,eax
  410de0:	jg     0x410dde
  410de2:	jmp    0x423a0fe6
  410de7:	inc    BYTE PTR [ebx+0x956949]
	...
  410dfd:	add    BYTE PTR [ecx+0x538901f9],bl
  410e03:	in     eax,dx
  410e04:	ret    0x6d73
  410e07:	shl    DWORD PTR [edi],1
  410e09:	dec    ebx
  410e0a:	push   edi
  410e0b:	stc    
  410e0c:	imul   ebx,DWORD PTR [ebp+0x5001f999],0x40bd533e
  410e16:	xchg   esi,eax
  410e17:	adc    al,bl
  410e19:	repz scas al,BYTE PTR es:[edi]
  410e1b:	(bad)  
  410e1c:	adc    edi,edi
  410e1e:	mov    cl,0x28
  410e20:	push   ecx
  410e21:	je     0x410dc5
  410e23:	adc    dh,cl
  410e25:	push   es
  410e26:	xchg   esi,eax
  410e27:	stc    
  410e28:	test   eax,0x62dd60a
  410e2d:	jmp    0x410e04
  410e2f:	mov    esp,0x49fefbd7
  410e34:	mov    ebp,0xd7cc9640
  410e39:	imul   DWORD PTR [esi-0x70]
  410e3c:	cld    
  410e3d:	push   DWORD PTR [ecx+0x79]
  410e40:	dec    eax
  410e41:	or     edi,esi
  410e43:	ja     0x410e02
  410e45:	inc    eax
  410e46:	xchg   esi,eax
  410e47:	rcl    DWORD PTR [ebx-0x10469fa],cl
  410e4d:	mov    edi,0x7dda19ca
  410e52:	frstor [edx-0x58]
  410e55:	add    esp,esi
  410e57:	cli    
  410e58:	(bad)  
  410e59:	or     edx,DWORD PTR [esi-0x5abc1d9e]
  410e5f:	push   ecx
  410e60:	rol    DWORD PTR [ebx],0x0
	...
  410e73:	add    BYTE PTR [edx+eiz*2-0x11d626ba],bh
  410e7a:	mov    ah,0x53
  410e7c:	mov    cl,0x57
  410e7e:	add    ch,al
  410e80:	adc    DWORD PTR [edi+eiz*8+0x52],edi
  410e84:	fldln2 
  410e86:	pushf  
  410e87:	dec    edi
  410e88:	stc    
  410e89:	xor    edx,ebp
  410e8b:	push   edx
  410e8c:	clc    
  410e8d:	in     eax,dx
  410e8e:	pushf  
  410e8f:	push   ebx
  410e90:	stc    
  410e91:	cmp    edx,ebp
  410e93:	push   edx
  410e94:	call   0xf98c8b86
  410e99:	inc    ebx
  410e9a:	mov    ch,0x52
  410e9c:	fcomp  DWORD PTR [ebx]
  410e9e:	sub    edi,DWORD PTR [ebx+0x664c7a64]
  410ea4:	mov    DWORD PTR [edx-0x21],esp
  410ea7:	aad    0x96
  410ea9:	and    edi,ebx
  410eab:	mov    ss,WORD PTR [esi-0xefc189e]
  410eb1:	mov    al,0x22
  410eb3:	lds    ebp,FWORD PTR [ecx-0x46451785]
  410eb9:	mov    bl,0x23
  410ebb:	push   ebx
  410ebc:	cwde   
  410ebd:	inc    ecx
  410ebe:	(bad)  
  410ebf:	dec    edi
  410ec0:	les    esp,FWORD PTR [edx]
  410ec2:	jno    0x410f16
  410ec4:	mov    ch,ch
  410ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec7:	push   ebp
  410ec8:	xor    ebp,DWORD PTR [edx]
  410eca:	out    0xd8,al
  410ecc:	jno    0x410ea7
  410ece:	stos   BYTE PTR es:[edi],al
  410ecf:	scas   al,BYTE PTR es:[edi]
  410ed0:	shl    BYTE PTR [ecx],1
  410ed2:	xor    eax,0xabe17d7f
  410ed7:	push   ebx
	...
  410ee8:	add    BYTE PTR [eax],al
  410eea:	les    edi,FWORD PTR [edx-0x6c]
  410eed:	gs cdq 
  410eef:	bound  eax,QWORD PTR [eax]
  410ef1:	jno    0x410f5e
  410ef3:	(bad)
  410ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef9:	pop    ss
  410efa:	pop    ebx
  410efb:	in     eax,dx
  410efc:	std    
  410efd:	aad    0x43
  410eff:	loopne 0x410f3c
  410f01:	test   DWORD PTR [edi-0x5d],esi
  410f04:	add    cl,ch
  410f06:	inc    ecx
  410f07:	pop    edx
  410f08:	add    DWORD PTR [edx+ecx*1],0x95e93f3f
  410f0f:	ja     0x410f14
  410f11:	add    bl,BYTE PTR [edx-0x78]
  410f14:	(bad)  
  410f15:	sub    ch,BYTE PTR [eax-0x733216f7]
  410f1b:	bound  eax,QWORD PTR [eax]
  410f1d:	ins    BYTE PTR es:[edi],dx
  410f1e:	ds jmp 0x9d2e9276
  410f24:	std    
  410f25:	hlt    
  410f26:	xor    DWORD PTR [edi],edi
  410f28:	aas    
  410f29:	jmp    0x654ebc0e
  410f2e:	gs in  eax,dx
  410f30:	std    
  410f31:	jmp    0xea39b592
  410f36:	xchg   ebp,eax
  410f37:	bound  eax,QWORD PTR [eax]
  410f39:	je     0x410f14
  410f3b:	hlt    
  410f3c:	push   eax
  410f3d:	push   ebx
  410f3e:	xchg   edx,eax
  410f3f:	js     0x410f41
  410f41:	inc    ebx
  410f42:	xchg   ebp,eax
  410f43:	in     eax,dx
  410f44:	jae    0x410f13
  410f46:	inc    edi
  410f47:	push   esi
  410f48:	lods   al,BYTE PTR ds:[esi]
  410f49:	pop    ss
  410f4a:	aad    0xec
  410f4c:	or     ch,BYTE PTR [ecx+0x0]
	...
  410f5e:	add    BYTE PTR [eax],al
  410f60:	sar    DWORD PTR [edx-0x18],0x39
  410f64:	lahf   
  410f65:	bound  eax,QWORD PTR [eax]
  410f67:	push   0xffffffda
  410f69:	imul   esi,DWORD PTR [ebx+0x9],0xe9f86f1b
  410f70:	popa   
  410f71:	mov    bh,ch
  410f73:	sbb    al,0xe2
  410f75:	add    eax,DWORD PTR [ecx-0x7813392c]
  410f7b:	add    BYTE PTR [edx+0x17458c8a],dh
  410f81:	mov    bh,0xfe
  410f83:	jne    0x410f4c
  410f85:	xchg   ecx,eax
  410f86:	je     0x410f7c
  410f88:	xchg   ebp,eax
  410f89:	pop    edi
  410f8a:	std    
  410f8b:	jne    0x410f48
  410f8d:	xchg   ecx,eax
  410f8e:	adc    al,0xac
  410f90:	mov    DWORD PTR [edi],ebx
  410f92:	dec    BYTE PTR [edx]
  410f94:	jg     0x410fa0
  410f96:	sub    al,0x8b
  410f98:	repnz xchg ebx,eax
  410f9a:	mov    dl,BYTE PTR [eax]
  410f9c:	stos   BYTE PTR es:[edi],al
  410f9d:	and    ebp,esi
  410f9f:	push   eax
  410fa0:	std    
  410fa1:	xchg   edx,eax
  410fa2:	adc    al,0xb0
  410fa4:	cdq    
  410fa5:	pop    ds
  410fa6:	dec    BYTE PTR [edx]
  410fa8:	mov    edi,0x5268180a
  410fad:	lods   eax,DWORD PTR ds:[esi]
  410fae:	inc    eax
  410faf:	add    BYTE PTR [eax-0x6a1711ed],bl
  410fb5:	pop    eax
  410fb6:	add    BYTE PTR [eax],al
  410fb8:	hlt    
  410fb9:	lahf   
  410fba:	je     0x410fbd
  410fbc:	sub    al,0x93
  410fbe:	je     0x410fb0
  410fc0:	xchg   DWORD PTR [ebx+0x6],edx
	...
  410fd3:	add    BYTE PTR [eax],al
  410fd5:	add    BYTE PTR [edi-0x680b8b6e],bh
  410fdb:	jmp    0x92fa0f14
  410fe0:	je     0x410fde
  410fe2:	out    0x5a,eax
  410fe4:	push   es
  410fe5:	add    BYTE PTR [edi-0x9a43d92],bh
  410feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fec:	push   esp
  410fed:	mov    ecx,ebx
  410fef:	loopne 0x410fb2
  410ff1:	rcr    cl,0x92
  410ff4:	(bad)  
  410ff5:	push   ebx
  410ff6:	xlat   BYTE PTR ds:[ebx]
  410ff7:	fsubr  st(2),st
  410ff9:	inc    eax
  410ffa:	jg     0x410f93
  410ffc:	outs   dx,DWORD PTR ds:[esi]
  410ffd:	add    DWORD PTR [edx+edx*4],ebp
  411000:	cmp    BYTE PTR ds:0x3f4742,0x96
  411007:	stc    
  411008:	aad    0x1a
  41100a:	adc    eax,0xd7272b1e
  41100f:	stc    
  411010:	add    DWORD PTR [esp+eax*4+0x78],esi
  411014:	push   cs
  411015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411016:	cmp    BYTE PTR [edx],0x4
  411019:	add    dl,al
  41101b:	add    al,BYTE PTR [ebp-0x3ead11c4]
  411021:	(bad)  
  411022:	cmp    DWORD PTR [esi],edx
  411024:	pop    es
  411025:	sub    edx,DWORD PTR [esi-0x50]
  411028:	cmp    al,dl
  41102a:	jge    0x41105c
  41102c:	push   eax
  41102d:	adc    al,0x4b
  41102f:	push   ecx
  411030:	sar    edi,0xe
  411033:	(bad)  
  411034:	push   ebp
  411035:	(bad)  
  411036:	sbb    eax,DWORD PTR [ebp+0x4f]
  411039:	inc    BYTE PTR [eax]
	...
  41104b:	add    BYTE PTR [ecx],cl
  41104d:	popa   
  41104e:	add    DWORD PTR [eax],eax
  411050:	xchg   esi,eax
  411051:	iret   
  411052:	add    DWORD PTR [edx-0x6c],ebp
  411055:	push   ecx
  411056:	call   0xe9f7:0x84f99605
  41105d:	or     eax,DWORD PTR [esi+0x1f9971d]
  411063:	mov    DWORD PTR [ebx],edx
  411065:	xor    DWORD PTR [edi-0x2],ecx
  411068:	rol    DWORD PTR [ebp-0x437347a],1
  41106e:	dec    ebp
  41106f:	dec    edi
  411070:	ror    ebp,0x3c
  411073:	std    
  411074:	mov    ecx,0x988d5d0b
  411079:	stc    
  41107a:	add    DWORD PTR [ebx],ecx
  41107c:	(bad)  
  41107d:	or     eax,DWORD PTR [esi+0x1f996f2]
  411083:	push   0xffc32ffe
  411088:	and    dh,BYTE PTR [edi+0x54]
  41108b:	std    
  41108c:	mov    DWORD PTR [ecx+0x62a7e7b4],edi
  411092:	out    dx,al
  411093:	add    edx,DWORD PTR [esi+0x15ffa75d]
  411099:	es call 0x6562a6a2
  41109f:	dec    eax
  4110a0:	arpl   dx,bp
  4110a2:	xchg   BYTE PTR [esi+edx*4],al
  4110a5:	(bad)  
  4110a6:	out    0x80,eax
  4110a8:	sbb    bl,BYTE PTR [edi]
  4110aa:	jbe    0x4110fb
  4110ac:	dec    eax
  4110ad:	xchg   ebx,eax
  4110ae:	outs   dx,BYTE PTR ds:[esi]
  4110af:	cdq    
	...
  4110c0:	add    BYTE PTR [eax],al
  4110c2:	gs jmp 0x5079602e
  4110c8:	inc    eax
  4110c9:	sbb    al,0xd7
  4110cb:	bound  esp,QWORD PTR [edx+0x79]
  4110ce:	push   ebp
  4110cf:	jmp    0x22cd6022
  4110d4:	test   DWORD PTR [edi+0x3e76301],0xff3b8fcd
  4110de:	adc    bl,dl
  4110e0:	out    0x3,eax
  4110e2:	xchg   esi,eax
  4110e3:	jmp    0xea3c4944
  4110e8:	push   ds
  4110e9:	(bad)  
  4110eb:	and    edi,0xff649603
  4110f1:	and    BYTE PTR [eax+0x19fae762],bl
  4110f7:	outs   dx,DWORD PTR ds:[esi]
  4110f8:	cmp    BYTE PTR [edx+ebx*2-0x16],0x64
  4110fd:	leave  
  4110fe:	int    0x92
  411100:	jg     0x41115c
  411102:	xchg   esi,eax
  411103:	fs out 0x4e,eax
  411106:	inc    edx
  411107:	jmp    0x428:0x38f5f8de
  41110e:	popf   
  41110f:	and    dl,BYTE PTR [esp+ebp*4-0x60]
  411113:	outs   dx,DWORD PTR ds:[esi]
  411114:	ret    
  411115:	dec    esi
  411116:	cmp    BYTE PTR [edx+0x5c91c50d],0x0
  41111d:	test   eax,0xa6412a61
  411122:	push   cs
  411123:	test   eax,0xa6fe
	...
  411138:	enter  0xfde9,0xe9
  41113c:	xchg   ebp,eax
  41113d:	xlat   BYTE PTR ds:[ebx]
  41113e:	sub    DWORD PTR [ecx+0x39fde8db],0x42
  411145:	sub    BYTE PTR [eax],al
  411147:	not    BYTE PTR [ebp-0x6a18a206]
  41114d:	bound  ecx,QWORD PTR [ecx]
  41114f:	test   eax,0x2c814e6e
  411154:	aad    0xe7
  411156:	std    
  411157:	xchg   bp,ax
  411159:	outs   dx,BYTE PTR ds:[esi]
  41115a:	or     al,0x5e
  41115c:	push   cs
  41115d:	test   eax,0xd8d856fe
  411162:	add    esi,ebx
  411164:	and    BYTE PTR [ebx-0x27bae00],0x1a
  41116b:	ds out dx,al
  41116d:	in     al,dx
  41116e:	call   0xa3a2f0
  411173:	cs fdivrp st(0),st
  411176:	call   0xa3a2d0
  41117b:	adc    ch,ch
  41117d:	out    0x73,eax
  41117f:	adc    DWORD PTR [ebp-0x3d],ecx
  411182:	add    al,0xe9
  411184:	xchg   ebp,eax
  411185:	xlat   BYTE PTR ds:[ebx]
  411186:	xor    DWORD PTR ds:0x99fde84b,0x60
  41118d:	scas   al,BYTE PTR es:[edi]
  41118e:	enter  0x5bf7,0xe8
  411192:	call   0xa39fdc
  411197:	rcl    BYTE PTR [ecx+0xdefde9],1
	...
  4111ad:	add    BYTE PTR [ebx-0x52],ah
  4111b0:	enter  0x5bd7,0xe8
  4111b4:	call   0xa3a022
  4111b9:	add    BYTE PTR [ebx+eiz*4],ah
  4111bc:	pop    edx
  4111bd:	leave  
  4111be:	cmp    al,0xb0
  4111c0:	mov    ch,ah
  4111c2:	cld    
  4111c3:	call   0x40e3:0x58d753dd
  4111ca:	outs   dx,DWORD PTR ds:[esi]
  4111cb:	pushf  
  4111cc:	outs   dx,DWORD PTR ds:[esi]
  4111cd:	add    DWORD PTR [esi+edx*4],edi
  4111d0:	cmp    BYTE PTR ds:0x3f488b,0x6f
  4111d7:	adc    BYTE PTR [ecx],cl
  4111d9:	adc    DWORD PTR [edx+0x14],0x2c
  4111dd:	inc    ecx
  4111de:	aas    
  4111df:	fs jae 0x4111e7
  4111e2:	push   esp
  4111e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e4:	pop    edx
  4111e5:	leave  
  4111e6:	in     al,dx
  4111e7:	popf   
  4111e8:	inc    esp
  4111e9:	cld    
  4111ea:	das    
  4111eb:	add    BYTE PTR fs:[eax],al
  4111ee:	js     0x41120f
  4111f0:	test   BYTE PTR [eax],0x3f
  4111f3:	fs add bh,al
  4111f6:	cli    
  4111f7:	xchg   ebp,edi
  4111f9:	jmp    FWORD PTR [edi]
  4111fb:	lds    eax,FWORD PTR fs:[ebp-0x35]
  4111ff:	pop    esi
  411200:	add    BYTE PTR [eax],al
  411202:	call   FWORD PTR [esi+0x63eff044]
  411208:	add    BYTE PTR [eax],al
  41120a:	sbb    BYTE PTR [edi],0xee
  41120d:	push   eax
  41120e:	sbb    BYTE PTR [edi],0xf2
  411211:	push   eax
	...
  411222:	add    BYTE PTR [eax],al
  411224:	jb     0x411245
  411226:	jmp    0x9345:0x8c971550
  41122d:	scas   al,BYTE PTR es:[edi]
  41122e:	add    ah,BYTE PTR [di]
  411231:	arpl   WORD PTR [edx+0x0],bp
  411234:	shl    al,0x71
  411237:	cs out dx,al
  411239:	arpl   WORD PTR [edi+0x7ce2e745],ax
  41123f:	call   0x814a2203
  411244:	xchg   esi,eax
  411245:	mov    ds,WORD PTR [ecx+ebp*8-0x6a]
  411249:	stc    
  41124a:	add    DWORD PTR [ebp+0x22],esi
  41124d:	and    bh,dl
  41124f:	sti    
  411250:	and    DWORD PTR [esi],edi
  411252:	dec    esp
  411253:	or     BYTE PTR [ebx],0xb2
  411256:	add    DWORD PTR [esp+ebx*8-0x7c],esi
  41125a:	scas   al,BYTE PTR es:[edi]
  41125b:	imul   DWORD PTR [ebp+0x0]
  41125e:	dec    ebp
  41125f:	jb     0x41125f
  411261:	rcl    esi,1
  411263:	inc    ecx
  411264:	imul   edx,eax,0xd876447a
  41126a:	adc    al,ch
  41126c:	in     eax,dx
  41126d:	cmp    ecx,DWORD PTR [ebx-0x2]
  411270:	popf   
  411271:	mov    ecx,0x361f22d5
  411276:	push   0x5be19269
  41127b:	xor    DWORD PTR [ecx],edi
  41127d:	or     BYTE PTR [esp+esi*2+0x36],0x78
  411282:	rol    DWORD PTR [edi],0x29
  411285:	push   es
  411286:	data16 mov es,WORD PTR [eax]
	...
  411299:	add    dh,dl
  41129b:	std    
  41129c:	dec    esp
  41129d:	xor    al,0x2a
  41129f:	mov    bl,0xc2
  4112a1:	jmp    DWORD PTR [eax]
  4112a3:	stc    
  4112a4:	mov    al,ds:0x1ba5ceb
  4112a9:	adc    ebp,0xffffffac
  4112ac:	dec    esp
  4112ad:	dec    esp
  4112ae:	jmp    0x88ce:0x96ebce7b
  4112b5:	(bad)  
  4112b6:	arpl   WORD PTR [ebp+0x4c],cx
  4112b9:	adc    al,0x66
  4112bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112bc:	ret    0xd0ff
  4112bf:	mov    ch,0x4d
  4112c1:	call   ecx
  4112c3:	clc    
  4112c4:	add    DWORD PTR [ecx-0xa89eb5],eax
  4112ca:	sar    eax,0xd6
  4112cd:	add    al,0xaf
  4112cf:	popa   
  4112d0:	inc    ebx
  4112d1:	dec    ebx
  4112d2:	mov    al,0xe6
  4112d4:	push   0xffffffc9
  4112d6:	lods   eax,DWORD PTR ds:[esi]
  4112d7:	popa   
  4112d8:	pop    ebx
  4112d9:	std    
  4112da:	mov    al,ds:0x824bcb6c
  4112df:	jb     0x4112f6
  4112e1:	lds    edx,FWORD PTR [ecx-0x69fc1752]
  4112e7:	bound  edx,QWORD PTR [edx]
  4112e9:	cmp    eax,0x58629054
  4112ee:	adc    al,0x1f
  4112f0:	mov    esp,0x247ac8b7
  4112f5:	bound  ebp,QWORD PTR [ecx-0x6929709e]
  4112fb:	and    DWORD PTR [edi+0x87],ecx
	...
  41130d:	add    BYTE PTR [eax],al
  41130f:	add    BYTE PTR [edx+0x51c4d5ba],bl
  411315:	out    0xf3,al
  411317:	cld    
  411318:	adc    al,0x28
  41131a:	cmp    ebx,DWORD PTR [edx]
  41131c:	xlat   BYTE PTR ds:[ebx]
  41131d:	(bad)  
  41131e:	out    0xd0,eax
  411320:	xchg   ebx,eax
  411321:	cmp    DWORD PTR [edi],esp
  411323:	stos   DWORD PTR es:[edi],eax
  411324:	int3   
  411325:	sbb    ebp,DWORD PTR [ebx]
  411327:	jg     0x4112b3
  411329:	mul    BYTE PTR [ecx+0x78fb21c4]
  41132f:	add    eax,0x204f6296
  411334:	adc    ah,dh
  411336:	ds xchg edx,ecx
  411339:	repnz mov eax,ds:0xb3e601c4
  41133f:	repnz clc 
  411341:	jno    0x41132e
  411343:	dec    edx
  411344:	stos   BYTE PTR es:[edi],al
  411345:	repnz mov cl,0xc4
  411348:	jmp    0x9648594a
  41134d:	(bad)  
  41134f:	inc    ebx
  411350:	bound  ebx,QWORD PTR [edi+0x10]
  411353:	ficom  WORD PTR [esi+0x5242e762]
  411359:	out    0x0,al
  41135b:	jmp    0x5c4175f5
  411360:	xlat   BYTE PTR ds:[ebx]
  411361:	jmp    0x78db66b6
  411366:	add    bl,dh
  411368:	shl    BYTE PTR [ecx+0x6a],0xe9
  41136c:	dec    esp
  41136d:	jo     0x411373
  41136f:	into   
  411370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411371:	mov    cl,0x2e
  411373:	sub    BYTE PTR [eax],al
	...
  411385:	add    BYTE PTR [edx-0x68ca3fa7],bl
  41138b:	sti    
  41138c:	xchg   ecx,ebp
  41138e:	xchg   ebp,eax
  41138f:	(bad)  
  411390:	std    
  411391:	cmp    dl,BYTE PTR [esi-0x22d7a506]
  411397:	in     al,0x87
  411399:	and    al,0xda
  41139b:	in     al,0x71
  41139d:	in     eax,dx
  41139e:	mov    ebp,0x95e902f7
  4113a3:	xchg   edx,eax
  4113a4:	std    
  4113a5:	cld    
  4113a6:	fst    QWORD PTR [ebp+0x7d49fafd]
  4113ac:	add    al,ch
  4113ae:	xchg   ebp,eax
  4113af:	bound  ebp,QWORD PTR [eax-0x17]
  4113b2:	cmp    ebp,esp
  4113b4:	std    
  4113b5:	push   ecx
  4113b6:	mov    dh,0x60
  4113b8:	add    cl,ch
  4113ba:	sub    BYTE PTR [ebp-0x612afd8c],ah
  4113c0:	cld    
  4113c1:	jmp    0x7441765b
  4113c6:	(bad)  
  4113c7:	call   0x78d6e71c
  4113cc:	add    dh,BYTE PTR [esi]
  4113ce:	out    0xec,al
  4113d0:	push   0xffffffe9
  4113d2:	dec    esp
  4113d3:	jo     0x4113d9
  4113d5:	es out 0xb0,al
  4113d8:	cs test al,0x95
  4113db:	pop    ecx
  4113dc:	rcr    BYTE PTR [ebp+0x1173e3e3],0x3d
  4113e3:	mov    edi,0x9898002f
  4113e8:	jmp    0x0:0x30
	...
  4113fb:	add    al,cl
  4113fd:	adc    al,0xf6
  4113ff:	call   0x3e626f
  411404:	push   0xbf412061
  411409:	mov    eax,ds:0x60bffc44
  41140e:	add    BYTE PTR [eax],al
  411410:	cmp    ah,BYTE PTR [ebp+0x5e5550f9]
  411416:	push   0x2
  411418:	mov    al,0x4
  41141a:	(bad)  
  41141b:	dec    ah
  41141d:	(bad)  
  41141e:	std    
  41141f:	adc    eax,0x3f4903
  411424:	je     0x4113c6
  411426:	push   cs
  411427:	test   dh,al
  411429:	pop    esi
  41142a:	add    BYTE PTR [eax],al
  41142c:	xor    BYTE PTR [ebp+edx*8+0x606f20],ah
  411433:	(bad)  
  411434:	mov    dl,0x3a
  411436:	add    BYTE PTR [eax],al
  411438:	aas    
  411439:	pusha  
  41143a:	std    
  41143b:	jae    0x411470
  41143d:	imul   eax,DWORD PTR [eax+eiz*8-0x38],0xd
  411442:	push   es
  411443:	(bad)  
  411444:	jb     0x4113c8
  411446:	mov    BYTE PTR [ebp-0x39],0x5e
  41144a:	add    BYTE PTR [eax],al
  41144c:	aas    
  41144d:	mov    ds:0x602fec44,eax
  411452:	add    BYTE PTR [eax],al
  411454:	jo     0x4113f9
  411456:	in     eax,dx
  411457:	add    bh,bh
  411459:	pop    edi
  41145a:	add    bh,al
  41145c:	xor    dl,BYTE PTR [ebp+edi*8+0xff]
	...
  41146f:	add    BYTE PTR [eax],al
  411471:	add    bh,ch
  411473:	pop    edi
  411474:	mov    eax,DWORD PTR [ebp-0x59]
  411477:	scas   al,BYTE PTR es:[edi]
  411478:	(bad)  
  411479:	jne    0x411436
  41147b:	xchg   BYTE PTR [ebx],ch
  41147d:	add    al,0xff
  41147f:	pop    edi
  411480:	or     eax,eax
  411482:	xchg   esi,eax
  411483:	(bad)
  411486:	pop    ebx
  411487:	dec    ebp
  411488:	add    al,0x74
  41148a:	lahf   
  41148b:	pop    esp
  41148c:	int    0xf3
  41148e:	sbb    edi,edi
  411490:	jmp    0x4114ba
  411492:	push   edi
  411493:	stc    
  411494:	inc    eax
  411495:	inc    esp
  411496:	loop   0x411492
  411498:	add    DWORD PTR [eax],eax
  41149a:	xchg   esi,eax
  41149b:	adc    BYTE PTR [ecx],al
  41149d:	(bad)  
  41149e:	push   ebx
  41149f:	lods   eax,DWORD PTR ds:[esi]
  4114a0:	add    DWORD PTR [eax],eax
  4114a2:	xchg   esi,eax
  4114a3:	stc    
  4114a4:	dec    eax
  4114a5:	je     0x411441
  4114a7:	adc    al,0xef
  4114a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114aa:	sar    BYTE PTR [edx],0x4
  4114ad:	or     edx,DWORD PTR [esi+0x2d]
  4114b0:	jmp    0x15fe:0x48a31de7
  4114b7:	mul    BYTE PTR [ecx+0x1f9d72d]
  4114bd:	je     0x41144f
  4114bf:	(bad)  
  4114c0:	out    dx,al
  4114c1:	lahf   
  4114c2:	mov    al,0x3a
  4114c4:	add    al,0xc7
  4114c6:	xchg   ebx,eax
  4114c7:	out    dx,eax
  4114c8:	sbb    al,BYTE PTR [ecx-0x6a]
  4114cb:	cli    
  4114cc:	add    DWORD PTR [eax],eax
  4114ce:	push   ss
  4114cf:	js     0x411497
  4114d1:	rcl    DWORD PTR [esi+0xfefce5],cl
	...
  4114e7:	add    bl,al
  4114e9:	ins    DWORD PTR es:[edi],dx
  4114ea:	dec    eax
  4114eb:	je     0x41151f
  4114ed:	xchg   ecx,eax
  4114ee:	add    dl,BYTE PTR cs:[esi+0x227448f9]
  4114f5:	mov    eax,ds:0xf9960044
  4114fa:	inc    ebp
  4114fb:	xor    dl,dh
  4114fd:	loope  0x411547
  4114ff:	dec    BYTE PTR [ecx]
  411501:	and    al,0x53
  411503:	lods   eax,DWORD PTR ds:[esi]
  411504:	mov    esi,0xb484f8f4
  411509:	xor    al,0x48
  41150b:	(bad)  
  41150c:	sbb    eax,0xccfd0262
  411511:	push   edx
  411512:	fs loopne 0x4114f8
  411515:	loop   0x41152d
  411517:	mov    edx,DWORD PTR [esi+0x7103e762]
  41151d:	xchg   DWORD PTR [eax],esi
  41151f:	inc    esp
  411520:	(bad)  
  411521:	xlat   BYTE PTR ds:[ebx]
  411522:	or     eax,DWORD PTR [ebp+edx*8-0x4e12801b]
  411529:	mov    eax,ds:0x61274be7
  41152e:	stos   BYTE PTR es:[edi],al
  41152f:	inc    edi
  411530:	aas    
  411531:	(bad)  
  411532:	iret   
  411533:	xor    eax,0x5be76297
  411538:	fwait
  411539:	daa    
  41153a:	into   
  41153b:	inc    edi
  41153c:	jns    0x411536
  41153e:	mov    edx,0x3f4b8847
  411543:	push   ss
  411544:	xlat   BYTE PTR ds:[ebx]
  411545:	bound  edi,QWORD PTR [edi]
  411547:	xchg   esp,eax
  411548:	lods   eax,DWORD PTR ds:[esi]
  411549:	and    esp,edi
  41154b:	pop    ebx
	...
  41155c:	add    BYTE PTR [eax],al
  41155e:	mov    ds:0xf147a69d,al
  411563:	mov    ds:0x4a61c4cd,al
  411568:	call   0x7fa3ec82
  41156d:	inc    esi
  41156e:	(bad)  
  41156f:	loope  0x4114f7
  411571:	fmul   st(5),st
  411573:	nop
  411574:	sub    BYTE PTR [esi+ebp*4],al
  411577:	lods   al,BYTE PTR ds:[esi]
  411578:	ret    
  411579:	les    edi,FWORD PTR [ecx]
  41157b:	retf   0xa7e
  41157e:	xor    edx,esp
  411580:	iret   
  411581:	pop    es
  411582:	jg     0x4115a7
  411584:	out    0xdb,eax
  411586:	or     DWORD PTR [ebx-0x3cd1fc58],0x11
  41158d:	inc    edi
  41158e:	adc    BYTE PTR [ebx-0x49],cl
  411591:	adc    eax,0x80cf6257
  411596:	lods   eax,DWORD PTR ds:[esi]
  411597:	and    eax,DWORD PTR [eax]
  411599:	jmp    0x2e7bc7fb
  41159e:	pop    ecx
  41159f:	dec    ecx
  4115a0:	rcl    ecx,cl
  4115a2:	shl    cl,cl
  4115a4:	gs je  0x411529
  4115a7:	and    eax,DWORD PTR [eax]
  4115a9:	add    DWORD PTR [ebx+ebx*4-0x3],edx
  4115ad:	push   cs
  4115ae:	jb     0x411618
  4115b0:	cli    
  4115b1:	push   es
  4115b2:	push   ecx
  4115b3:	leave  
  4115b4:	xor    eax,DWORD PTR [ebx]
  4115b6:	pop    ecx
  4115b7:	loopne 0x4115c2
  4115b9:	sub    esi,esp
  4115bb:	je     0x4115a5
  4115bd:	fistp  WORD PTR [eax+eiz*8-0x3]
  4115c1:	repnz add BYTE PTR [eax],al
	...
  4115d4:	push   ebp
  4115d5:	push   ebp
  4115d6:	or     ah,BYTE PTR [esi+0x284a1096]
  4115dc:	xchg   edx,eax
  4115dd:	arpl   WORD PTR [eax],ax
  4115df:	jmp    0xe8406079
  4115e4:	xchg   ebp,eax
  4115e5:	(bad)  
  4115e6:	call   0xfe22bbc1
  4115eb:	mov    ah,ch
  4115ed:	sub    edi,DWORD PTR [edi]
  4115ef:	jmp    0xe93d3ca4
  4115f4:	xchg   edx,eax
  4115f5:	bound  eax,QWORD PTR [eax]
  4115f7:	ins    BYTE PTR es:[edi],dx
  4115f8:	push   esi
  4115f9:	fst    QWORD PTR [eax-0x6a]
  4115fc:	xchg   dl,dl
  4115fe:	dec    edx
  4115ff:	sub    BYTE PTR [edx-0x6a149836],bl
  411605:	bound  ecx,QWORD PTR [ecx]
  411607:	test   eax,0xbcfd7666
  41160c:	in     eax,0x2b
  41160e:	aas    
  41160f:	jmp    0x666ecde1
  411614:	shr    BYTE PTR [eax+0x21df5903],1
  41161a:	add    cl,ch
  41161c:	xchg   ebp,eax
  41161d:	bound  eax,QWORD PTR [eax]
  41161f:	inc    ecx
  411620:	sti    
  411621:	xchg   esi,eax
  411622:	std    
  411623:	add    BYTE PTR [eax+0x3d],dl
  411626:	add    esi,DWORD PTR [ebx]
  411628:	shr    BYTE PTR [eax],0x65
  41162b:	push   esi
  41162c:	mov    BYTE PTR [edi+0x33fce7fd],ah
  411632:	(bad)  
  411633:	jmp    DWORD PTR [esi+0x8b5424]
	...
  411649:	add    BYTE PTR [ebx+0x2fe906bd],dl
  41164f:	gs clc 
  411651:	jb     0x411611
  411653:	and    edi,esi
  411655:	push   0xffffffbf
  411657:	cmp    al,0xb7
  411659:	add    DWORD PTR [edi-0x50ff479c],ebp
  41165f:	fs add cl,cl
  411662:	jge    0x411645
  411664:	std    
  411665:	addr16 sahf 
  411667:	cmp    eax,0xb3b7003d
  41166c:	add    bl,al
  41166e:	sar    BYTE PTR [ebp+0x66bfe8f7],0xe8
  411675:	mov    ds:0xe800647e,eax
  41167a:	xor    eax,0x57fffe29
  41167f:	pop    edx
  411680:	out    dx,eax
  411681:	inc    DWORD PTR [eax+0x3f]
  411684:	adc    ebp,esi
  411686:	xor    BYTE PTR [esi],ah
  411688:	in     eax,0xfc
  41168a:	or     ah,BYTE PTR [esi]
  41168c:	inc    BYTE PTR [ebx+0x414af642]
  411692:	aas    
  411693:	fs je  0x4116af
  411696:	mov    esp,0x6e2ea067
  41169b:	data16 add BYTE PTR [ecx+ebp*1+0x27],dh
  4116a0:	adc    al,0xa0
  4116a2:	icebp  
  4116a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a4:	std    
  4116a5:	(bad)  
  4116a6:	cmp    cl,dl
  4116a8:	sub    BYTE PTR [ecx+0x2f],al
  4116ab:	add    BYTE PTR gs:[eax],al
	...
  4116be:	add    BYTE PTR [eax],al
  4116c0:	xchg   esi,eax
  4116c1:	dec    ecx
  4116c2:	pop    esp
  4116c3:	(bad)  
  4116c4:	or     eax,0xdee74331
  4116c9:	and    eax,0xb1d5fe43
  4116ce:	retf   
  4116cf:	call   0x718ae02a
  4116d4:	xchg   edi,eax
  4116d5:	mov    WORD PTR [ebx-0x19],es
  4116d8:	or     edx,0xc66c0001
  4116de:	stos   BYTE PTR es:[edi],al
  4116df:	sub    al,ah
  4116e1:	adc    BYTE PTR [ecx-0x7e],0xcc
  4116e5:	(bad)
  4116e8:	mov    ebp,0xaeea58cb
  4116ed:	dec    eax
  4116ee:	inc    ebx
  4116ef:	(bad)  
  4116f0:	mov    ecx,0xb1f66c61
  4116f5:	rcl    bh,1
  4116f7:	push   DWORD PTR [ecx-0x69fffe8b]
  4116fd:	rcr    BYTE PTR [esi],0x38
  411700:	aas    
  411701:	mov    al,BYTE PTR [edi+edi*8]
  411704:	mov    ebx,0x9640a96d
  411709:	test   al,0x1e
  41170b:	inc    eax
  41170c:	fisttp WORD PTR [edx-0x724c00fc]
  411712:	test   eax,0x1f109640
  411717:	dec    eax
  411718:	iret   
  411719:	mov    al,BYTE PTR [edi+edi*8]
  41171c:	mov    ebx,0x9640a98d
  411721:	clc    
  411722:	push   ds
  411723:	push   eax
	...
  411734:	add    BYTE PTR [eax],al
  411736:	out    dx,eax
  411737:	mov    al,BYTE PTR [edi+edi*8]
  41173a:	jae    0x4117b9
  41173c:	test   eax,0x1e609640
  411741:	pop    eax
  411742:	fisttp WORD PTR [edx+0x6d7bff04]
  411748:	test   eax,0x66629640
  41174d:	push   ds
  41174e:	mov    dh,0x39
  411750:	test   al,0x3
  411752:	sbb    DWORD PTR [ebp+0x6256aacb],eax
  411758:	dec    esi
  411759:	push   ds
  41175a:	jle    0x411795
  41175c:	test   al,0x3
  41175e:	add    DWORD PTR [ebp+0x6256aacb],eax
  411764:	ss push ds
  411766:	cmp    WORD PTR [eax-0x647b16fd],bp
  41176d:	stos   BYTE PTR es:[edi],al
  41176e:	push   esi
  41176f:	bound  ebx,QWORD PTR [esi]
  411771:	push   ds
  411772:	pop    esi
  411773:	cmp    DWORD PTR [eax-0x747b2efd],ebp
  411779:	stos   BYTE PTR es:[edi],al
  41177a:	push   esi
  41177b:	bound  eax,QWORD PTR [esi]
  41177d:	push   ds
  41177e:	push   ss
  41177f:	cmp    DWORD PTR [eax+0x6b84b903],ebp
  411785:	stos   BYTE PTR es:[edi],al
  411786:	push   esi
  411787:	(bad)  
  411788:	out    dx,al
  411789:	sbb    eax,0x428391e
  41178e:	mov    eax,ds:0x56dd6b84
  411793:	(bad)  
  411794:	(bad)  
  411795:	jmp    0x46953bb
	...
  4117aa:	add    BYTE PTR [eax],al
  4117ac:	mov    DWORD PTR [eax+0x62d6dd5b],ecx
  4117b2:	mov    esi,0x283c21e9
  4117b7:	add    al,0x71
  4117b9:	mov    BYTE PTR [ebx-0x23],cl
  4117bc:	(bad)  
  4117bd:	bound  esp,QWORD PTR [esi+0x283c01e9]
  4117c3:	add    al,0x59
  4117c5:	mov    BYTE PTR [ebx-0x23],cl
  4117c8:	(bad)  
  4117c9:	bound  ecx,QWORD PTR [esi+0x283bf1e9]
  4117cf:	add    al,0x41
  4117d1:	mov    BYTE PTR [ebx-0x23],cl
  4117d4:	(bad)  
  4117d5:	bound  eax,QWORD PTR [eax]
  4117d7:	jbe    0x411818
  4117d9:	push   cs
  4117da:	pop    eax
  4117db:	sub    BYTE PTR [edx+0x439d23dd],dl
  4117e1:	and    eax,DWORD PTR [eax]
  4117e3:	pop    esi
  4117e4:	das    
  4117e5:	push   ss
  4117e6:	pop    eax
  4117e7:	test   al,0x95
  4117e9:	frstor [ebx]
  4117eb:	(bad)  
  4117ec:	jmp    0x411810
  4117ee:	add    BYTE PTR [esi-0x11],al
  4117f1:	sbb    eax,0xdd95a858
  4117f6:	and    ebp,DWORD PTR ds:0x2e0022d3
  4117fc:	jmp    DWORD PTR [ebp-0x226a57a9]
  411802:	and    ebp,DWORD PTR ds:0x160022bb
  411808:	mov    edi,0x95a857ad
  41180d:	frstor [ebx]
  41180f:	sbb    eax,0x0
	...
  411820:	add    BYTE PTR [eax],al
  411822:	jecxz  0x411846
  411824:	add    dh,bh
  411826:	scas   al,BYTE PTR es:[edi]
  411827:	mov    ch,0x57
  411829:	test   al,0x95
  41182b:	frstor [ebx]
  41182d:	or     eax,0xe60022cb
  411832:	scas   al,BYTE PTR es:[edi]
  411833:	mov    ebp,0xdd922857
  411838:	and    ecx,ebp
  41183a:	jb     0x41185e
  41183c:	add    dh,cl
  41183e:	jle    0x411805
  411840:	push   edi
  411841:	sub    BYTE PTR [edx+0x5acd23dd],bl
  411847:	and    al,BYTE PTR [eax]
  411849:	mov    dh,0x7e
  41184b:	int    0x57
  41184d:	sub    BYTE PTR [edx+0x429d23dd],dl
  411853:	and    al,BYTE PTR [eax]
  411855:	sahf   
  411856:	outs   dx,BYTE PTR ds:[esi]
  411857:	aad    0x57
  411859:	sub    BYTE PTR [edx+0x6a8d23dd],bl
  41185f:	and    al,BYTE PTR [eax]
  411861:	add    BYTE PTR [eax],bl
  411863:	retf   0x59fd
  411866:	outs   dx,BYTE PTR ds:[esi]
  411867:	data16 std 
  411869:	and    eax,0x40bf43
  41186e:	mov    eax,0xee5a09ca
  411873:	pusha  
  411874:	std    
  411875:	and    eax,0x40bf1f
  41187a:	push   0x3e5a11ca
  41187f:	popa   
  411880:	std    
  411881:	and    eax,0x40bef7
	...
  411896:	add    BYTE PTR [eax],al
  411898:	mov    eax,0x3e5a19ca
  41189d:	popa   
  41189e:	std    
  41189f:	and    eax,0x40bc9f
  4118a4:	mov    eax,0x2e5a25ca
  4118a9:	popa   
  4118aa:	std    
  4118ab:	and    eax,0x40beef
  4118b0:	cwde   
  4118b1:	retf   0x5a31
  4118b4:	out    dx,al
  4118b5:	pusha  
  4118b6:	std    
  4118b7:	and    eax,0x40bed7
  4118bc:	test   al,0xc4
  4118be:	cmp    DWORD PTR [edx-0x2],ebx
  4118c1:	pusha  
  4118c2:	std    
  4118c3:	and    eax,0x40bc6f
  4118c8:	mov    eax,0xbe5a41c4
  4118cd:	data16 std 
  4118cf:	and    eax,0x40bcb7
  4118d4:	pop    eax
  4118d5:	les    ecx,FWORD PTR [ecx+0x5a]
  4118d8:	scas   al,BYTE PTR es:[edi]
  4118d9:	data16 std 
  4118db:	and    eax,0x40bc8f
  4118e0:	cmp    ah,al
  4118e2:	push   ecx
  4118e3:	pop    edx
  4118e4:	scas   al,BYTE PTR es:[edi]
  4118e5:	data16 std 
  4118e7:	and    eax,0x40bc9b
  4118ec:	xchg   esi,eax
  4118ed:	hlt    
  4118ee:	in     eax,0x63
  4118f0:	in     al,dx
  4118f1:	mov    al,BYTE PTR [edi+edi*8]
  4118f4:	jnp    0x411967
  4118f6:	fiadd  WORD PTR [eax-0x6a]
  4118f9:	pop    esp
  4118fa:	in     eax,0x6f
	...
  41190c:	add    BYTE PTR [eax],al
  41190e:	int3   
  41190f:	mov    al,BYTE PTR [edi+edi*8]
  411912:	jae    0x4118e9
  411914:	fild   DWORD PTR [eax-0x6a]
  411917:	inc    esp
  411918:	in     eax,0x77
  41191a:	mov    esp,0xbbff020a
  41191f:	mov    ch,0xdb
  411921:	inc    eax
  411922:	xchg   esi,eax
  411923:	sub    al,0xe5
  411925:	jg     0x411983
  411927:	or     al,BYTE PTR [edx]
  411929:	push   DWORD PTR [ebx-0x69bf21bb]
  41192f:	xchg   esp,eax
  411930:	in     eax,0x8b
  411932:	dec    esp
  411933:	or     al,BYTE PTR [edx]
  411935:	(bad)  
  411936:	mov    ebx,0x9640de59
  41193b:	jl     0x411922
  41193d:	xchg   ebx,eax
  41193e:	ins    BYTE PTR es:[edi],dx
  41193f:	or     al,BYTE PTR [edx]
  411941:	push   DWORD PTR [ebx+0x51]
  411944:	fiadd  WORD PTR [eax-0x6a]
  411947:	fs in  eax,0x9b
  41194a:	pop    esp
  41194b:	or     al,BYTE PTR [edx]
  41194d:	(bad)  
  41194e:	jnp    0x411979
  411950:	fiadd  WORD PTR [eax-0x6a]
  411953:	int3   
  411954:	out    0xa3,al
  411956:	cmp    al,0x8a
  411958:	add    al,0xff
  41195a:	jae    0x41194d
  41195c:	fild   DWORD PTR [eax-0x6a]
  41195f:	mov    ah,0xe6
  411961:	stos   DWORD PTR es:[edi],eax
  411962:	in     al,dx
  411963:	mov    al,BYTE PTR [edi+edi*8]
  411966:	mov    ebx,0x9640db59
  41196b:	sbb    al,0xe7
  41196d:	mov    bh,0xcc
  41196f:	mov    al,BYTE PTR [edi+edi*8]
	...
  411982:	add    BYTE PTR [eax],al
  411984:	mov    bl,0x4d
  411986:	fild   DWORD PTR [eax-0x6a]
  411989:	bound  esi,QWORD PTR [ebx-0x5451b2b1]
  41198f:	dec    edi
  411990:	pop    ebp
  411991:	scas   al,BYTE PTR es:[edi]
  411992:	(bad)  
  411993:	(bad)  
  411994:	jne    0x4119fc
  411996:	push   0x3b
  411998:	xchg   edi,eax
  411999:	pop    ebp
  41199a:	out    dx,eax
  41199b:	jnp    0x411952
  41199d:	(bad)  
  41199e:	out    0x3,eax
  4119a0:	push   esp
  4119a1:	out    0x84,ax
  4119a4:	and    DWORD PTR [esi-0x14],esp
  4119a7:	or     ebx,esi
  4119a9:	pop    edi
  4119aa:	out    0x3,eax
  4119ac:	xchg   esi,eax
  4119ad:	mov    al,ds:0xda1503e3
  4119b2:	fistp  QWORD PTR [esi+0x3e41a91]
  4119b8:	xchg   esi,eax
  4119b9:	bound  ebp,QWORD PTR [ecx]
  4119bb:	pop    es
  4119bc:	xchg   esi,eax
  4119bd:	fistp  QWORD PTR [edi]
  4119bf:	adc    esi,DWORD PTR [ebx+0x6a]
  4119c2:	outs   dx,DWORD PTR ds:[esi]
  4119c3:	or     DWORD PTR [esi-0x6aba189e],edx
  4119c9:	bound  ebp,QWORD PTR [edx+0x3b]
  4119cc:	jns    0x411a2b
  4119ce:	out    dx,eax
  4119cf:	jnp    0x41196a
  4119d1:	(bad)  
  4119d2:	out    0x3,eax
  4119d4:	aam    0x65
  4119d6:	out    0x84,eax
  4119d8:	leave  
  4119d9:	and    DWORD PTR [ebx+ecx*1+0x3e767fe],eax
  4119e0:	xchg   esi,eax
  4119e1:	mov    al,ds:0xe26b03eb
  4119e6:	out    0x3,eax
	...
  4119f8:	add    BYTE PTR [eax],al
  4119fa:	xchg   esi,eax
  4119fb:	pop    ebp
  4119fc:	out    dx,eax
  4119fd:	jnp    0x41198c
  4119ff:	(bad)  
  411a00:	out    0x3,eax
  411a02:	push   esp
  411a03:	pop    edi
  411a04:	out    0x0,eax
  411a06:	xchg   esi,eax
  411a07:	arpl   di,sp
  411a09:	add    eax,DWORD PTR [ebx]
  411a0b:	imul   edi,DWORD PTR [edi+0xe],0xffffff96
  411a0f:	(bad)  
  411a10:	out    0x41,eax
  411a12:	xchg   ebp,eax
  411a13:	bound  eax,QWORD PTR [eax]
  411a15:	hlt    
  411a16:	xchg   ebp,eax
  411a17:	fs add cl,ch
  411a1a:	push   esi
  411a1b:	bound  edi,QWORD PTR [eax+0x6295f9]
  411a21:	stos   DWORD PTR es:[edi],eax
  411a22:	sahf   
  411a23:	bound  edi,QWORD PTR [ebx]
  411a25:	jmp    0xc417cbb
  411a2a:	xchg   edx,eax
  411a2b:	sbb    dl,BYTE PTR [ebx]
  411a2d:	jmp    0xe6037cc7
  411a32:	xchg   ebp,eax
  411a33:	xchg   edi,eax
  411a34:	add    cl,ah
  411a36:	xchg   ebp,eax
  411a37:	bound  edi,QWORD PTR [ebx-0x1f]
  411a3a:	popf   
  411a3b:	jne    0x411a3d
  411a3d:	jmp    0xe945bed7
  411a42:	xchg   esi,eax
  411a43:	bound  edx,QWORD PTR [eax]
  411a45:	jmp    0x914971df
  411a4a:	test   al,0x62
  411a4c:	add    cl,ch
  411a4e:	push   edi
  411a4f:	gs add ah,bh
  411a52:	xchg   ebp,eax
  411a53:	add    BYTE PTR [eax],0xe9
  411a56:	(bad)  
  411a57:	popa   
  411a58:	mov    eax,0x6295d1
  411a5d:	sub    eax,DWORD PTR [eax]
	...
  411a6f:	add    BYTE PTR [esi-0x2a16c49e],cl
  411a75:	fscale 
  411a77:	xchg   esp,eax
  411a78:	popf   
  411a79:	sbb    bl,BYTE PTR [ebx]
  411a7b:	jmp    0xee037d15
  411a80:	xchg   ebp,eax
  411a81:	xchg   edi,eax
  411a82:	add    BYTE PTR [ecx-0x66],ch
  411a85:	bound  edi,QWORD PTR [ebx-0x1f]
  411a88:	sub    eax,0x95e9007d
  411a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a8e:	add    al,0xe9
  411a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a91:	stos   BYTE PTR es:[edi],al
  411a92:	cmp    ebp,ecx
  411a94:	xchg   ebp,eax
  411a95:	arpl   WORD PTR [eax],ax
  411a97:	out    0x36,al
  411a99:	mov    ds:0x78931d8b,al
  411a9e:	mov    DWORD PTR [eax],eax
  411aa0:	and    eax,DWORD PTR cs:[ecx]
  411aa3:	add    ah,bh
  411aa5:	ficomp WORD PTR [ecx]
  411aa7:	add    al,0x7f
  411aa9:	gs std 
  411aab:	jne    0x411aff
  411aad:	in     al,dx
  411aae:	adc    BYTE PTR [eax],0x6b
  411ab1:	add    BYTE PTR gs:[ecx+0x47dbe],cl
  411ab8:	aas    
  411ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aba:	mov    BYTE PTR [ecx+0x6133],0x47
  411ac1:	add    BYTE PTR gs:[eax],al
  411ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac5:	fimul  WORD PTR ds:0x81653f04
  411acb:	jl     0x411b28
  411acd:	popa   
  411ace:	add    BYTE PTR [ebx+0x47da6],cl
	...
  411ae4:	add    BYTE PTR [eax],al
  411ae6:	call   DWORD PTR [eax]
  411ae8:	or     ecx,DWORD PTR [edx-0x13f9d02]
  411aee:	scas   eax,DWORD PTR es:[edi]
  411aef:	in     eax,dx
  411af0:	add    dl,al
  411af2:	jmp    0x411b58
  411af4:	shl    BYTE PTR [ecx],1
  411af6:	mov    ebp,0x7e830061
  411afb:	jns    0x411b01
  411afd:	add    bh,ch
  411aff:	xchg   edi,eax
  411b00:	je     0x411b1f
  411b02:	fimul  WORD PTR fs:0x8764bf04
  411b09:	add    edi,0xef000060
  411b0f:	pop    ds
  411b10:	sbb    BYTE PTR [ebx+ebp*4],0x64
  411b14:	add    BYTE PTR [eax],cl
  411b16:	mov    edi,0x3e890064
  411b1b:	jne    0x411b21
  411b1d:	add    BYTE PTR [edi-0x54e77715],ch
  411b23:	fs add al,dl
  411b26:	sahf   
  411b27:	and    DWORD PTR [edx+0x5cd9681],eax
  411b2d:	add    BYTE PTR [esi+0xd1cb5a8],dl
  411b33:	dec    ebx
  411b34:	adc    al,0x4
  411b36:	xchg   esi,eax
  411b37:	leave  
  411b38:	mov    al,BYTE PTR [eax+0x1c58e]
  411b3e:	(bad)  
  411b3f:	add    BYTE PTR [edx+0x1c9921b],al
  411b45:	or     BYTE PTR [esi+0x8901c9],dl
	...
  411b5b:	add    BYTE PTR [edi],dl
  411b5d:	fiadd  DWORD PTR ds:0x89449600
  411b63:	pop    ss
  411b64:	xchg   edx,eax
  411b65:	leave  
  411b66:	add    DWORD PTR [edx-0x2be3469],ecx
  411b6c:	push   esi
  411b6d:	inc    edx
  411b6e:	add    ebx,eax
  411b70:	or     eax,0xd03e87e
  411b75:	push   ss
  411b76:	out    0x3,al
  411b78:	imul   ecx,DWORD PTR [edi],0xffffffd5
  411b7b:	xor    al,BYTE PTR [eax]
  411b7d:	aas    
  411b7e:	leave  
  411b7f:	dec    DWORD PTR [edx+esi*1]
  411b82:	jg     0x411b6a
  411b84:	xchg   edi,eax
  411b85:	jp     0x411bb3
  411b87:	inc    ebp
  411b88:	and    ebp,DWORD PTR [esi-0x35117d2c]
  411b8e:	mov    ah,0xef
  411b90:	adc    eax,0xd9bd0198
  411b95:	cmp    BYTE PTR [ebx],0xfe
  411b98:	and    esi,edi
  411b9a:	or     dh,BYTE PTR [esp+eax*2+0x1c]
  411b9e:	mov    esi,edi
  411ba0:	xchg   edi,eax
  411ba1:	and    ah,BYTE PTR [eax]
  411ba3:	add    al,0x96
  411ba5:	leave  
  411ba6:	mov    dh,0x18
  411ba8:	sbb    eax,0x9604144b
  411bad:	leave  
  411bae:	mov    al,BYTE PTR [eax+0x1bd7e]
  411bb4:	push   esi
  411bb5:	bound  esi,QWORD PTR [eax+0x7a]
  411bb8:	lods   eax,DWORD PTR ds:[esi]
  411bb9:	pop    esi
  411bba:	out    0x3,eax
  411bbc:	pop    ds
  411bbd:	loope  0x411bb6
  411bbf:	pop    es
	...
  411bd0:	add    BYTE PTR [eax],al
  411bd2:	xchg   esi,eax
  411bd3:	bound  esp,QWORD PTR [edx-0x7e]
  411bd6:	mov    eax,ds:0x6803e75e
  411bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bdc:	call   0xd02dbb98
  411be1:	add    DWORD PTR ds:0x818baad8,edi
  411be7:	retf   
  411be8:	jmp    0x50a2cd40
  411bed:	pop    ds
  411bee:	xchg   edx,eax
  411bef:	(bad)  
  411bf0:	out    0xb6,eax
  411bf2:	sahf   
  411bf3:	jmp    0x411c5d
  411bf5:	adc    edx,DWORD PTR [edx+0x168ae762]
  411bfb:	jp     0x411be0
  411bfd:	add    edx,DWORD PTR [esi+0x7d7a6022]
  411c03:	pop    esi
  411c04:	out    0x3,eax
  411c06:	psraw  mm6,mm7
  411c09:	pop    es
  411c0a:	xchg   esi,eax
  411c0b:	bound  esi,QWORD PTR [edx-0x7e]
  411c0e:	mov    eax,ds:0xc03e75e
  411c13:	jp     0x411bfe
  411c15:	pop    eax
  411c16:	sti    
  411c17:	mov    ds:0xc8142918,al
  411c1c:	call   0x598e9dac
  411c21:	fcom   DWORD PTR [esi-0x69f833f7]
  411c27:	bound  ebx,QWORD PTR [edx+ebx*1+0x7f7e11d]
  411c2e:	xchg   esi,eax
  411c2f:	bound  esp,QWORD PTR [eax-0x7e]
  411c32:	test   eax,0x3e75e
	...
  411c47:	add    BYTE PTR [esi-0x17],dl
  411c4a:	inc    eax
  411c4b:	pop    ds
  411c4c:	call   0x72:0x168ae762
  411c53:	in     eax,dx
  411c54:	xchg   ebp,eax
  411c55:	bound  ecx,QWORD PTR [ecx+0x5e7d68]
  411c5b:	jmp    0x5540c027
  411c60:	cwde   
  411c61:	call   0xd82d0776
  411c66:	ret    0xa261
  411c69:	leave  
  411c6a:	add    bl,BYTE PTR [ecx-0x22589c86]
  411c70:	imul   edx,esi,0xe9833cfd
  411c76:	jg     0x411c51
  411c78:	pop    ecx
  411c79:	(bad)  
  411c7a:	std    
  411c7b:	jo     0x411c98
  411c7d:	outs   dx,BYTE PTR ds:[esi]
  411c7e:	add    al,0xe9
  411c80:	xchg   ebp,eax
  411c81:	and    al,BYTE PTR [edi+0x5e9e50]
  411c87:	jmp    0xed51ff96
  411c8c:	xchg   ebp,eax
  411c8d:	bound  ecx,QWORD PTR [ecx+0x5e8a70]
  411c93:	jmp    0xf9e9f5d
  411c98:	aas    
  411c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9a:	add    al,0xe9
  411c9c:	call   0xea0ea5cf
  411ca1:	gs push esi
  411ca3:	sbb    bl,BYTE PTR [edx+0x2c]
  411ca6:	or     DWORD PTR [ebp+ecx*4+0x4c],0x8403
	...
  411cbe:	popf   
  411cbf:	bound  eax,QWORD PTR [eax]
  411cc1:	jmp    0xdd6576de
  411cc6:	adc    ch,cl
  411cc8:	sub    DWORD PTR [edi+ecx*1],esi
  411ccb:	inc    edx
  411ccc:	and    al,0xe9
  411cce:	and    esi,DWORD PTR [ebp-0x7c]
  411cd1:	inc    edx
  411cd2:	push   es
  411cd3:	jbe    0x411c5e
  411cd5:	and    al,0x11
  411cd7:	mov    al,0x8b
  411cd9:	jb     0x411c6d
  411cdb:	bound  eax,QWORD PTR [eax]
  411cdd:	add    BYTE PTR [edi-0x4e8be829],bh
  411ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce4:	aas    
  411ce5:	test   DWORD PTR [esi+0x13],esi
  411ce8:	hlt    
  411ce9:	sub    DWORD PTR [edi+0x61],0xffffff83
  411ced:	leave  
  411cee:	repnz add ax,0x847d
  411cf4:	add    al,BYTE PTR [ebx+0x4645602f]
  411cfa:	in     al,dx
  411cfb:	std    
  411cfc:	and    DWORD PTR [esi+edi*2],ebx
  411cff:	adc    cl,ah
  411d01:	pop    edi
  411d02:	mov    DWORD PTR [ebx+0x617bc25a],edi
  411d08:	mov    DWORD PTR [ebx+edx*4+0x62],edx
  411d0c:	push   ebx
  411d0d:	push   esi
  411d0e:	les    ecx,FWORD PTR [esi-0x2a98793a]
  411d14:	std    
  411d15:	jmp    FWORD PTR [edi]
  411d17:	popa   
  411d18:	add    BYTE PTR [eax],al
  411d1a:	mov    ch,0x67
  411d1c:	test   cl,cl
  411d1e:	sub    BYTE PTR [ebp+0x2d],dl
  411d21:	add    DWORD PTR [eax],eax
	...
  411d33:	add    BYTE PTR [edi],bh
  411d35:	popa   
  411d36:	push   ebp
  411d37:	mov    ebp,DWORD PTR [ebx]
  411d39:	mov    ch,0x11
  411d3b:	sub    DWORD PTR [eax+0x38057668],0x68
  411d42:	add    BYTE PTR [eax],al
  411d44:	jmp    ebx
  411d46:	mov    edi,0x37f1b02b
  411d4b:	or     bl,ah
  411d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d4e:	dec    esi
  411d4f:	inc    eax
  411d50:	sbb    BYTE PTR [eax-0x1c83098c],0x19
  411d57:	add    al,0xef
  411d59:	pusha  
  411d5a:	std    
  411d5b:	jne    0x411d27
  411d5d:	jecxz  0x411ce2
  411d5f:	adc    bl,al
  411d61:	pusha  
  411d62:	add    BYTE PTR [ecx+0x47931],cl
  411d68:	xchg   esi,eax
  411d69:	retf   
  411d6a:	rol    esi,0x10
  411d6d:	(bad)  
  411d6e:	std    
  411d6f:	push   DWORD PTR [ecx-0x69fffe2e]
  411d75:	push   edx
  411d76:	jg     0x411d87
  411d78:	call   0xfdb3:0x108b01cb
  411d7f:	call   DWORD PTR [ecx+0x108ae51a]
  411d85:	(bad)  
  411d87:	inc    DWORD PTR [ecx+0xe5f0e40]
  411d8d:	ret    0x8538
  411d90:	xchg   ch,al
  411d92:	add    DWORD PTR [eax],eax
  411d94:	enter  0x4676,0x7
	...
  411da8:	add    BYTE PTR [eax],al
  411daa:	xchg   esi,eax
  411dab:	inc    esi
  411dac:	aaa    
  411dad:	jae    0x411dcd
  411daf:	dec    ecx
  411db0:	dec    ecx
  411db1:	(bad)  
  411db2:	xchg   edi,eax
  411db3:	dec    ebx
  411db4:	sbb    BYTE PTR [esi+edx*4],al
  411db7:	leave  
  411db8:	xchg   BYTE PTR [eax-0x71],ch
  411dbb:	jbe    0x411dd6
  411dbd:	mov    edx,DWORD PTR [eax]
  411dbf:	(bad)  
  411dc1:	push   DWORD PTR [ecx]
  411dc3:	push   ebx
  411dc4:	adc    BYTE PTR [edi],0x92
  411dc7:	leave  
  411dc8:	add    DWORD PTR [eax+0xf],eax
  411dcb:	sbb    al,0x18
  411dcd:	add    al,0x96
  411dcf:	leave  
  411dd0:	mov    al,BYTE PTR [ebp+0x1c5a6]
  411dd6:	sbb    eax,0x96041c3c
  411ddb:	leave  
  411ddc:	mov    ecx,DWORD PTR [edi]
  411dde:	xchg   esp,eax
  411ddf:	xchg   edi,eax
  411de0:	cmp    al,cl
  411de2:	push   ds
  411de3:	mov    edx,0xbd8a8e02
  411de8:	add    DWORD PTR [eax],eax
  411dea:	imul   esi,DWORD PTR [edx-0x42797a74],0x1
  411df1:	add    BYTE PTR [edi],bl
  411df3:	arpl   WORD PTR [ebp+0x1c],bp
  411df6:	xchg   edx,eax
  411df7:	(bad)  
  411df8:	out    0xc3,eax
  411dfa:	push   cs
  411dfb:	add    eax,0xd3b9fff4
  411e00:	pusha  
  411e01:	and    BYTE PTR [ecx+0x1d03e75e],0xdd
  411e08:	(bad)  
  411e0a:	mov    eax,ds:0x1461d3
	...
  411e1f:	add    BYTE PTR [eax+esi*4+0x721945ed],dl
  411e26:	call   0xe79fcbb4
  411e2b:	add    ecx,DWORD PTR [ebx]
  411e2d:	jp     0x411e91
  411e2f:	or     DWORD PTR [ecx+0x1f03e75e],0x69ffdfdc
  411e39:	shl    DWORD PTR [edi],cl
  411e3b:	mov    esi,DWORD PTR [ebx]
  411e3d:	jbe    0x411e2a
  411e3f:	add    edx,DWORD PTR [esi-0x65ec9a17]
  411e45:	(bad)  
  411e46:	out    0x8c,eax
  411e48:	adc    edi,DWORD PTR [edx-0x1d]
  411e4b:	add    edx,DWORD PTR [esi+0x4f05dfe8]
  411e51:	aam    0xa8
  411e53:	mov    WORD PTR [eax+0x7f],cs
  411e56:	pushf  
  411e57:	mov    edx,DWORD PTR [ecx+0x39497230]
  411e5d:	mov    ecx,0xe7183873
  411e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e63:	test   cl,dh
  411e65:	pop    ebp
  411e66:	mov    bh,0x8c
  411e68:	fcmovne st,st(1)
  411e6a:	sub    esi,DWORD PTR [edi]
  411e6c:	add    bl,dl
  411e6e:	bound  ecx,QWORD PTR [eax+0x14]
  411e71:	shr    ecx,0xd2
  411e74:	sbb    al,0xa4
  411e76:	dec    edi
  411e77:	js     0x411e66
  411e79:	sar    BYTE PTR [esi],cl
  411e7b:	test   al,bh
  411e7d:	pusha  
  411e7e:	add    BYTE PTR [esi+0x75e8a50a],bl
	...
  411e94:	add    BYTE PTR [eax],al
  411e96:	mov    esp,edx
  411e98:	std    
  411e99:	(bad)  
  411e9a:	out    dx,eax
  411e9b:	xor    eax,0xdf95f1c2
  411ea0:	(bad)  
  411ea1:	push   ss
  411ea2:	xchg   esp,eax
  411ea3:	in     al,0x1c
  411ea5:	in     eax,0x95
  411ea7:	bound  ecx,QWORD PTR [ebx+0x174d9c90]
  411ead:	jb     0x411ec6
  411eaf:	arpl   WORD PTR [ecx+ebp*8],ax
  411eb2:	xchg   ebp,eax
  411eb3:	jmp    0xd2d2f03e
  411eb8:	std    
  411eb9:	sub    DWORD PTR [ebx],ebx
  411ebb:	add    BYTE PTR ds:0x876295e5,bl
  411ec1:	outs   dx,DWORD PTR ds:[esi]
  411ec2:	mov    ds:0x1ce90066,al
  411ec7:	call   0x62d70be4
  411ecc:	mov    bl,cl
  411ece:	xchg   edi,eax
  411ecf:	mov    ah,0xfe
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	or     ah,BYTE PTR [edx-0x1]
  411ed5:	pop    esi
  411ed6:	scas   al,BYTE PTR es:[edi]
  411ed7:	data16 add cl,ch
  411eda:	push   es
  411edb:	imul   ecx,DWORD PTR [ecx+0x66aa67],0xffffffe9
  411ee2:	or     ch,al
  411ee4:	sbb    ch,ah
  411ee6:	xchg   ebp,eax
  411ee7:	bound  eax,QWORD PTR [eax+0x70]
  411eea:	mov    al,0x6d
  411eec:	add    al,0xe9
  411eee:	xchg   ebp,eax
  411eef:	fild   DWORD PTR [esi-0x22de627]
  411ef5:	bound  edx,QWORD PTR [eax+0xe90479]
	...
  411f0b:	add    BYTE PTR [ebp+0x67eb10dc],dl
  411f11:	iret   
  411f12:	ret    0xa261
  411f15:	arpl   WORD PTR [esi-0x22e0e13],cx
  411f1b:	add    BYTE PTR [edx],ch
  411f1d:	outs   dx,DWORD PTR ds:[esi]
  411f1e:	mov    DWORD PTR [esi-0x22e41],eax
  411f24:	jbe    0x411f76
  411f26:	adc    eax,0x4065bf04
  411f2b:	mov    DWORD PTR [ecx+0x6a],esp
  411f2e:	add    al,0x0
  411f30:	scas   eax,DWORD PTR es:[edi]
  411f31:	fiadd  WORD PTR [ebx+0x65ab10]
  411f37:	mov    edi,DWORD PTR [ecx]
  411f39:	outs   dx,BYTE PTR ds:[esi]
  411f3a:	add    al,0x0
  411f3c:	mov    edi,0x7d020ddb
  411f41:	cwde   
  411f42:	mov    edi,0x8e66bf88
  411f47:	sbb    al,0x7b
  411f49:	add    BYTE PTR gs:[ebp-0x6a],dh
  411f4d:	fld    QWORD PTR [ebx+0x657b10]
  411f53:	mov    ecx,ebp
  411f55:	ins    DWORD PTR es:[edi],dx
  411f56:	add    al,0x0
  411f58:	jg     0x411eff
  411f5a:	mov    BYTE PTR [esi-0x22e8d],ch
  411f60:	out    0x4f,al
  411f62:	or     eax,0x89656f04
  411f67:	xchg   BYTE PTR [edi-0x2f],ah
  411f6a:	std    
  411f6b:	dec    DWORD PTR [edi]
  411f6d:	lds    eax,FWORD PTR [eax]
  411f6f:	mov    es,WORD PTR [eax]
	...
  411f81:	add    BYTE PTR [ebx-0x2f],al
  411f84:	std    
  411f85:	call   FWORD PTR [edx+0x2f86896f]
  411f8b:	sar    ebp,1
  411f8d:	jmp    DWORD PTR [esi+0x2f04154f]
  411f93:	gs inc eax
  411f95:	mov    ecx,edx
  411f97:	jns    0x411f9d
  411f99:	add    bh,bh
  411f9b:	fld    QWORD PTR [ebx+0x64fb10]
  411fa1:	mov    edi,DWORD PTR [ecx+0x6d]
  411fa4:	add    al,0x0
  411fa6:	xchg   esi,eax
  411fa7:	mov    ebx,0x31971f51
  411fac:	adc    eax,0xb0bb9604
  411fb1:	sbb    BYTE PTR ds:0x96041149,cl
  411fb7:	mov    ebx,0xc7ae858c
  411fbc:	add    DWORD PTR [eax],eax
  411fbe:	push   esi
  411fbf:	push   edx
  411fc0:	arpl   WORD PTR [ebx],bx
  411fc2:	call   0xfdcb:0x108901bb
  411fc9:	push   DWORD PTR [ecx-0x6de884bd]
  411fcf:	mov    ebx,0xba76d001
  411fd4:	sbb    DWORD PTR [ebx],0xffffff92
  411fd7:	mov    ebx,0x44af7501
  411fdc:	jnp    0x411fed
  411fde:	xchg   edx,eax
  411fdf:	mov    ecx,0x62188901
	...
  411ff8:	xchg   esi,eax
  411ff9:	jns    0x411f84
  411ffb:	lods   eax,DWORD PTR ds:[esi]
  411ffc:	xchg   edx,eax
  411ffd:	lds    eax,FWORD PTR [ecx]
  411fff:	add    BYTE PTR [edi],bl
  412001:	inc    eax
  412002:	adc    al,0x4
  412004:	xchg   esi,eax
  412005:	mov    ecx,0xbd7eb588
  41200a:	add    DWORD PTR [eax],eax
  41200c:	pushw  0x5cd6
  412010:	push   esp
  412011:	rol    BYTE PTR [ecx],cl
  412013:	mov    ebx,edx
  412015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412016:	std    
  412017:	push   ebp
  412018:	loope  0x41205e
  41201a:	mov    eax,0x31448623
  41201f:	cmp    al,0x16
  412021:	mov    edx,0xada50001
  412026:	cmp    dh,0x92
  412029:	int3   
  41202a:	or     al,0x3b
  41202c:	sbb    BYTE PTR [esi+0x6309fffd],ah
  412032:	fcmovne st,st(7)
  412034:	or     BYTE PTR [ebx-0x3cebbbfe],ch
  41203a:	in     eax,dx
  41203b:	aam    0x14
  41203d:	mov    ds:0x5ad7d5e4,eax
  412042:	out    0xf8,eax
  412044:	sbb    eax,DWORD PTR [edi+0x569603e3]
  41204a:	hlt    
  41204b:	not    BYTE PTR [ecx+0x62]
  41204e:	out    0x3,eax
  412050:	inc    ebp
  412051:	gs push 0x25
  412054:	xchg   edi,eax
  412055:	mov    ebx,0x66b9f6f7
  41205a:	out    0x3,eax
	...
  41206c:	add    BYTE PTR [eax],al
  41206e:	and    al,0x61
  412070:	sahf   
  412071:	imul   BYTE PTR [ecx+0x2403e74e]
  412077:	popa   
  412078:	scas   al,BYTE PTR es:[edi]
  412079:	inc    edx
  41207a:	mov    cl,0x5a
  41207c:	call   0xb32b:0x97635180
  412083:	int3   
  412084:	out    0x34,al
  412086:	call   0x61c9ce66
  41208b:	mov    edx,0xcf7039f3
  412090:	pop    esp
  412091:	mov    edi,0xd5225c81
  412096:	ret    
  412097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412098:	out    dx,eax
  412099:	add    eax,ecx
  41209b:	mov    edx,0xcf5039e3
  4120a0:	push   cs
  4120a1:	or     DWORD PTR [ecx],0x99424566
  4120a7:	bound  edi,QWORD PTR [edx]
  4120a9:	mov    ebp,ebx
  4120ab:	xchg   bh,bl
  4120ad:	into   
  4120ae:	retf   
  4120af:	fistp  DWORD PTR [eax-0x14861480]
  4120b5:	add    edx,DWORD PTR [esi+0x12051662]
  4120bb:	imul   eax,DWORD PTR [eax],0xffffffe8
  4120be:	xchg   ebp,eax
  4120bf:	bound  edi,QWORD PTR [edi+0x72]
  4120c2:	adc    eax,0x46e9fdcf
  4120c7:	and    al,BYTE PTR [ecx+0x476d9dd]
  4120cd:	(bad)  
  4120cf:	(bad)  
  4120d0:	xor    eax,0x52
	...
  4120e1:	add    BYTE PTR [eax],al
  4120e3:	add    BYTE PTR [edx-0x52c87630],ah
  4120e9:	jg     0x4120e4
  4120eb:	mov    ds:0x8f41cedc,al
  4120f1:	leave  
  4120f2:	std    
  4120f3:	cs pop ds
  4120f5:	and    esp,DWORD PTR [ecx+eax*1]
  4120f8:	pmaddwd mm2,QWORD PTR [eax]
  4120fb:	in     eax,0x95
  4120fd:	bound  ecx,QWORD PTR [edx+0x261d122]
  412103:	and    BYTE PTR [edi-0x688ea25f],dl
  412109:	iret   
  41210a:	xchg   cl,bl
  41210c:	cdq    
  41210d:	into   
  41210e:	std    
  41210f:	pusha  
  412110:	sub    eax,DWORD PTR [edx+0x2c95e904]
  412116:	pop    ebx
  412117:	inc    edx
  412118:	fsub   DWORD PTR [ebp+0x0]
  41211b:	push   0xffffffd5
  41211d:	int3   
  41211e:	call   DWORD PTR [esi-0x16ff997a]
  412124:	push   ss
  412125:	cmp    eax,0xd9933c07
  41212a:	xchg   cl,bl
  41212c:	xchg   ecx,eax
  41212d:	bound  eax,QWORD PTR [eax]
  41212f:	pusha  
  412130:	sbb    al,0x76
  412132:	add    al,0xe9
  412134:	xchg   ebp,eax
  412135:	and    al,BYTE PTR [edi+0x66a657]
  41213b:	jmp    0xed5208fa
  412140:	xchg   ebp,eax
  412141:	bound  ecx,QWORD PTR [ecx+0x669a67]
	...
  412157:	add    BYTE PTR [eax],al
  412159:	add    BYTE PTR [edi],ch
  41215b:	push   eax
  41215c:	add    eax,0xc090e602
  412161:	mov    bh,dh
  412163:	mov    si,0xf31c
  412167:	popa   
  412168:	add    BYTE PTR [ebp-0x6a],dh
  41216b:	dec    ebp
  41216c:	adc    DWORD PTR [eax],0xfffffff3
  41216f:	popa   
  412170:	add    BYTE PTR [ecx+0x45e81],cl
  412176:	jmp    DWORD PTR [ecx+0x65fbae88]
  41217c:	add    BYTE PTR [eax],al
  41217e:	data16 fmul DWORD PTR ds:0x8961bf04
  412185:	xchg   bh,ah
  412187:	add    BYTE PTR gs:[eax],al
  41218a:	jg     0x412152
  41218c:	mov    dl,bl
  41218e:	outs   dx,BYTE PTR ds:[esi]
  41218f:	ins    BYTE PTR es:[edi],dx
  412190:	add    eax,0x52647d83
  412195:	mov    ecx,DWORD PTR [ecx-0x67053792]
  41219b:	xchg   ecx,eax
  41219c:	mov    al,BYTE PTR [esi+0x65bf]
  4121a2:	neg    DWORD PTR [esi-0x48]
  4121a5:	add    DWORD PTR [edi+0x61],edi
  4121a8:	add    BYTE PTR [ecx],al
  4121aa:	icebp  
  4121ab:	jno    0x4121b1
  4121ad:	add    BYTE PTR [edi+0x4e],ch
  4121b0:	fwait
  4121b1:	and    al,0x83
  4121b3:	popa   
  4121b4:	add    BYTE PTR [ecx-0x21ebc],al
  4121ba:	outs   dx,DWORD PTR ds:[esi]
  4121bb:	adc    al,0x16
  4121bd:	add    DWORD PTR [eax],0x0
	...
  4121d0:	retf   
  4121d1:	mov    edx,0xdb40215
  4121d6:	and    bl,BYTE PTR [eax]
  4121d8:	scas   al,BYTE PTR es:[edi]
  4121d9:	dec    ebp
  4121da:	retf   
  4121db:	call   0x3fa1a0
  4121e0:	js     0x412192
  4121e2:	pop    esp
  4121e3:	pop    ebx
  4121e4:	xchg   esi,eax
  4121e5:	stc    
  4121e6:	stc    
  4121e7:	call   DWORD PTR [esi]
  4121e9:	lock add DWORD PTR ds:0x3b3bb96,eax
  4121f0:	outs   dx,DWORD PTR ds:[esi]
  4121f1:	xchg   eax,ebp
  4121f3:	pop    ss
  4121f4:	pop    ss
  4121f5:	push   eax
  4121f6:	add    DWORD PTR [ebp-0x6a],edi
  4121f9:	mov    ebx,0xffaf03b3
  4121fe:	in     eax,0x17
  412200:	or     eax,0x4717e5ff
  412205:	inc    eax
  412206:	aas    
  412207:	out    0x7a,eax
  412209:	xor    DWORD PTR [edx],esi
  41220b:	inc    BYTE PTR [ecx+0x5]
  41220e:	rcr    DWORD PTR [edx-0x2c],1
  412211:	rol    BYTE PTR [ecx],cl
  412213:	(bad)  
  412214:	sbb    BYTE PTR [ebx+0x8],ah
  412217:	add    BYTE PTR [esi-0x69fffe46],dl
  41221d:	cmp    ch,BYTE PTR [esi]
  41221f:	jg     0x4121b7
  412221:	mov    ebx,0x385f7301
  412226:	lods   eax,DWORD PTR ds:[esi]
  412227:	and    ecx,DWORD PTR [esi+0x5d41b6c7]
  41222d:	inc    ebp
  41222e:	in     eax,0x3
  412230:	xchg   esi,eax
  412231:	mov    ebx,0x39b5
	...
  412246:	jle    0x412208
  412248:	sub    edi,esi
  41224a:	mov    DWORD PTR [ecx+0x3f],eax
  41224d:	out    0x95,eax
  41224f:	mov    edi,0xfc0dfe2f
  412254:	sbb    al,0xcc
  412256:	outs   dx,DWORD PTR ds:[esi]
  412257:	mov    ch,0x2f
  412259:	mov    edx,edx
  41225b:	gs or  al,0x8b
  41225e:	adc    BYTE PTR [edx+0x4f960005],ch
  412264:	push   ebx
  412265:	and    edx,DWORD PTR [edi+0x540153b7]
  41226b:	pop    ebp
  41226c:	jl     0x41226e
  41226e:	inc    ecx
  41226f:	arpl   WORD PTR [ebp+0x14],bp
  412272:	xchg   edx,eax
  412273:	(bad)  
  412274:	out    0x7a,eax
  412276:	adc    eax,DWORD PTR [edi+0x2c9603eb]
  41227c:	sub    al,0xcd
  41227e:	push   edi
  41227f:	pop    ebx
  412280:	out    0x84,eax
  412282:	dec    eax
  412283:	int3   
  412284:	call   0xe7a7cffa
  412289:	add    ebx,DWORD PTR [ebx]
  41228b:	cmp    al,0xe0
  41228d:	mov    dh,0x9e
  41228f:	xlat   BYTE PTR ds:[ebx]
  412290:	ins    DWORD PTR es:[edi],dx
  412291:	adc    al,0x92
  412293:	(bad)  
  412294:	out    0x7a,eax
  412296:	sbb    ebp,DWORD PTR [ebx-0x15]
  412299:	add    edx,DWORD PTR [esi+0x7d626022]
  41229f:	out    0x3,ax
  4122a2:	pmulhw mm2,mm7
  4122a5:	pop    es
  4122a6:	xchg   esi,eax
  4122a7:	bound  esp,QWORD PTR [edx-0x76]
	...
  4122ba:	add    BYTE PTR [eax],al
  4122bc:	mov    eax,ds:0xc03e766
  4122c1:	jae    0x4122ac
  4122c3:	push   ebp
  4122c4:	mov    ebx,0x97146fa0
  4122c9:	or     al,0xf4
  4122cb:	pop    es
  4122cc:	xchg   esi,eax
  4122cd:	bound  edx,QWORD PTR [edx+ecx*1+0x7d7e50d]
  4122d4:	xchg   esi,eax
  4122d5:	bound  esi,QWORD PTR [eax-0x76]
  4122d8:	test   eax,0xd603e766
  4122dd:	fnstcw WORD PTR ds:0xe7629a10
  4122e3:	jp     0x4122f8
  4122e5:	jb     0x4122ca
  4122e7:	add    edx,DWORD PTR [esi-0x6df49229]
  4122ed:	(bad)  
  4122ee:	out    0x53,eax
  4122f0:	add    DWORD PTR [edi+0x6295e765],0xd7c7b7e7
  4122fa:	add    BYTE PTR [edx+0x6a08c3d4],ch
  412300:	aad    0x60
  412302:	push   eax
  412303:	xchg   ecx,eax
  412304:	pop    ds
  412305:	retf   0x9efd
  412308:	mov    dl,0xdd
  41230a:	adc    ch,ch
  41230c:	xchg   ebp,eax
  41230d:	bound  ecx,QWORD PTR [eax+0x62adf0]
  412313:	jmp    0xd9c784ad
  412318:	cdq    
  412319:	bound  eax,QWORD PTR [eax]
  41231b:	pusha  
  41231c:	daa    
  41231d:	jg     0x412323
  41231f:	jmp    0x412324
	...
  412330:	add    BYTE PTR [eax],al
  412332:	xchg   ebp,eax
  412333:	loope  0x41232e
  412335:	imul   edx,DWORD PTR [ebp-0x6225ff9e],0x9a0d6cdf
  41233f:	pusha  
  412340:	mov    DWORD PTR [ebp+0x725272f9],esi
  412346:	push   edi
  412347:	ret    
  412348:	fs inc eax
  41234a:	xchg   ah,cl
  41234c:	pop    ebp
  41234d:	xchg   edi,eax
  41234e:	fsub   DWORD PTR [edi]
  412350:	ret    0x95e1
  412353:	loope  0x41234e
  412355:	jmp    0x9b4185ea
  41235a:	cdq    
  41235b:	jns    0x4123a1
  41235d:	int    0x9d
  41235f:	loope  0x41235a
  412361:	jmp    0x7c3eee56
  412366:	cld    
  412367:	jns    0x4123ad
  412369:	lds    ebx,FWORD PTR [ebp-0x6232ab23]
  41236f:	xor    al,0x89
  412371:	pop    ds
  412372:	popf   
  412373:	mov    dh,bh
  412375:	out    0xa9,al
  412377:	sub    BYTE PTR [esi+0x3c],bl
  41237a:	pop    ebp
  41237b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41237c:	or     cl,ch
  41237e:	xchg   edx,eax
  41237f:	or     BYTE PTR ds:0x736295e5,bl
  412385:	add    BYTE PTR [esi+0x4d],dh
  412388:	adc    DWORD PTR [eax],0x3b
  41238b:	data16 add BYTE PTR [ecx+0x456b9],cl
  412392:	das    
  412393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412394:	mov    BYTE PTR [esi+0x0],ch
	...
  4123a6:	add    BYTE PTR [eax],al
  4123a8:	xchg   ebx,eax
  4123a9:	pop    edx
  4123aa:	add    BYTE PTR [eax],al
  4123ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ad:	loopne 0x4123bc
  4123af:	add    al,0x3f
  4123b1:	mov    WORD PTR [esi+0x6227],ax
  4123b8:	(bad)  
  4123b9:	mov    esi,0x61f3be00
  4123be:	add    BYTE PTR [eax],al
  4123c0:	or     dl,BYTE PTR [edi-0x77]
  4123c3:	xchg   bh,bl
  4123c5:	popa   
  4123c6:	add    BYTE PTR [eax],al
  4123c8:	xchg   al,ah
  4123ca:	adc    eax,0x4065ff04
  4123cf:	mov    DWORD PTR [ecx],edx
  4123d1:	jae    0x4123d7
  4123d3:	add    bh,ch
  4123d5:	inc    esi
  4123d6:	adc    DWORD PTR [eax],0xffffffeb
  4123d9:	add    BYTE PTR gs:[ebx+0x45639],cl
  4123e0:	mov    edi,0x2b8b1d35
  4123e5:	ret    0x5215
  4123e8:	inc    esp
  4123e9:	mov    ch,ah
  4123eb:	aam    0x77
  4123ed:	jns    0x4123ed
  4123ef:	pop    edi
  4123f0:	loope  0x4123a4
  4123f2:	pop    edx
  4123f3:	ret    0x65b7
  4123f6:	mov    DWORD PTR [ebx+ecx*8+0x61],eax
  4123fa:	mov    edx,DWORD PTR [eax+0xed7f]
  412400:	inc    esp
  412401:	out    dx,al
  412402:	add    DWORD PTR [edi+ebp*2],eax
  412405:	gs jbe 0x412421
  412408:	add    al,0x47
  41240a:	or     DWORD PTR [eax+eax*1],eax
	...
  41241d:	add    BYTE PTR [edi+0x65],bh
  412420:	cmp    ecx,eax
  412422:	xchg   esi,eax
  412423:	sub    DWORD PTR [edi],eax
  412425:	sub    edx,DWORD PTR [edi-0x3]
  412428:	add    eax,0x8faad00
  41242d:	add    BYTE PTR [esi-0x6d3dfe46],bh
  412433:	mov    ebx,0xbf54bff2
  412438:	add    DWORD PTR [ebx+0x54d2cb2a],eax
  41243e:	sbb    eax,0xc01fe857
  412443:	lods   al,BYTE PTR ds:[esi]
  412444:	dec    edx
  412445:	mov    ah,BYTE PTR [edi]
  412447:	nop
  412448:	jnp    0x4124a5
  41244a:	jb     0x4123f7
  41244c:	jl     0x4124a9
  41244e:	mov    edx,0x9eadecc3
  412453:	mov    bh,0x1
  412455:	add    BYTE PTR [ecx-0x6009dc4],dl
  41245b:	mov    edx,0xdf230a1a
  412460:	in     eax,0xff
  412462:	jmp    0x7ace2621
  412467:	pop    edi
  412468:	add    al,0x8b
  41246a:	adc    BYTE PTR [edi+0x36960005],dh
  412470:	jns    0x412471
  412472:	xor    DWORD PTR [edx+0x10ce3b01],edi
  412478:	pop    ss
  412479:	mov    ecx,DWORD PTR [eax]
  41247b:	iret   
  41247c:	add    eax,0x44c49600
  412481:	jne    0x412483
	...
  412493:	add    BYTE PTR [edx-0x7215bb5c],dl
  412499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41249a:	inc    esp
  41249b:	add    al,0x96
  41249d:	repz add al,0x0
  4124a0:	jge    0x41245e
  4124a2:	repnz mov edi,0x3f9401d
  4124a8:	xchg   esi,eax
  4124a9:	mov    ecx,0x62a7b5fe
  4124ae:	div    BYTE PTR [ebp-0x22]
  4124b1:	popa   
  4124b2:	jb     0x41248c
  4124b4:	add    ebx,DWORD PTR [edi+0x62]
  4124b7:	add    BYTE PTR [esp+ebx*8],cl
  4124ba:	or     eax,0x72df8d7b
  4124bf:	xchg   BYTE PTR [ecx-0x66fc18a2],bl
  4124c5:	adc    al,bl
  4124c7:	cld    
  4124c8:	or     esp,DWORD PTR [ebx]
  4124ca:	call   0xec31f247
  4124cf:	js     0x4124dc
  4124d1:	pop    edi
  4124d2:	jecxz  0x4124d7
  4124d4:	xchg   esi,eax
  4124d5:	fsincos 
  4124d7:	sbb    dh,0x61
  4124da:	out    0x3,eax
  4124dc:	xchg   esi,eax
  4124dd:	popa   
  4124de:	jne    0x4124e8
  4124e0:	call   0xeb5b:0x1802e762
  4124e7:	add    edx,DWORD PTR [esi-0x6df79a25]
  4124ed:	(bad)  
  4124ee:	out    0x78,eax
  4124f0:	fnstcw WORD PTR [ebx+0x6d]
  4124f3:	add    BYTE PTR [edx+0x82e762],dl
	...
  412509:	add    dh,bl
  41250b:	bound  edi,QWORD PTR [edi-0x11af69fe]
  412511:	mov    ebx,0x7ebe11e
  412516:	xchg   esi,eax
  412517:	(bad)  
  412518:	lock pop ebp
  41251a:	cdq    
  41251b:	pop    esi
  41251c:	out    0x3,eax
  41251e:	mov    esp,esp
  412520:	xchg   ecx,eax
  412521:	sub    al,0xb0
  412523:	(bad)  
  412524:	jb     0x4124ee
  412526:	jne    0x4124ba
  412528:	push   ecx
  412529:	add    al,0x39
  41252b:	popa   
  41252c:	out    0xe8,eax
  41252e:	xlat   BYTE PTR ds:[ebx]
  41252f:	push   eax
  412530:	in     eax,dx
  412531:	jp     0x412518
  412533:	jle    0x4124ec
  412535:	sbb    BYTE PTR [esi-0x6b0eff1d],bl
  41253b:	push   edi
  41253c:	xchg   BYTE PTR [ebx],ah
  41253e:	xchg   ebp,eax
  41253f:	bound  eax,QWORD PTR [eax]
  412541:	imul   bl
  412543:	push   ds
  412544:	add    dh,ch
  412546:	jecxz  0x41255e
  412548:	jmp    DWORD PTR [ecx+0x59]
  41254b:	fld    QWORD PTR [edx+eiz*2]
  41254e:	imul   ebx,edi,0xe352c239
  412554:	mov    cl,0xe8
  412556:	xchg   ebp,eax
  412557:	bound  ecx,QWORD PTR [ecx+0x633567]
  41255d:	jmp    0xae4e891a
  412562:	pop    ecx
  412563:	sbb    DWORD PTR [ecx+ebp*8],0x2d
  412567:	(bad)  
  412568:	std    
  412569:	rcr    al,cl
  41256b:	push   ecx
  41256c:	cmp    ah,BYTE PTR [edx+0x0]
	...
  41257f:	add    BYTE PTR [edx-0x74],ch
  412582:	stc    
  412583:	std    
  412584:	or     esi,edx
  412586:	test   ecx,ebp
  412588:	sub    eax,0x1bb20062
  41258d:	arpl   WORD PTR [ecx+ebp*8],ax
  412590:	xchg   ebp,eax
  412591:	push   eax
  412592:	sbb    BYTE PTR [edx+0x1b],dh
  412595:	pop    ebx
  412596:	add    al,0xe9
  412598:	xchg   ebp,eax
  412599:	mov    edi,eax
  41259b:	fistp  WORD PTR [ecx-0x26bd0785]
  4125a1:	jnp    0x41259b
  4125a3:	push   0xe865c75a
  4125a8:	xchg   ebp,eax
  4125a9:	mov    ebx,0xdc72fa02
  4125ae:	push   es
  4125af:	bound  ebp,QWORD PTR [ecx-0x4d1273f2]
  4125b5:	mov    eax,ebx
  4125b7:	call   0x4cc1:0xcd548a6d
  4125be:	add    al,0x60
  4125c0:	rol    DWORD PTR [edx+0x7b54002c],0xe
  4125c7:	test   BYTE PTR ds:0xfa000061,ch
  4125cd:	(bad)  
  4125cf:	jmp    FWORD PTR [edi+0x62]
  4125d2:	mov    ebp,ecx
  4125d4:	test   BYTE PTR [esi+0x72934c88],al
  4125da:	cmp    DWORD PTR [ebx+edx*4-0x56],ecx
  4125de:	push   cs
  4125df:	xchg   DWORD PTR [ebp+0x5f],eax
	...
  4125f5:	add    ah,al
  4125f7:	or     ah,BYTE PTR [edx]
  4125f9:	adc    ch,al
  4125fb:	jb     0x4125fc
  4125fd:	cmp    DWORD PTR [ebx-0x64750235],esp
  412603:	ret    0xbb11
  412606:	cmp    eax,0x83000062
  41260b:	retf   0x8e3a
  41260e:	push   ebx
  41260f:	(bad)  
  412610:	std    
  412611:	(bad)  
  412612:	cmp    bl,ah
  412614:	mov    DWORD PTR [eax],0x548961ff
  41261a:	rcl    ecx,cl
  41261c:	cmp    bl,dl
  41261e:	cld    
  41261f:	mov    esi,0x44ed4d8c
  412624:	in     eax,0x2b
  412626:	retf   
  412627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412628:	and    eax,0xfdcb338a
  41262d:	cmp    esi,ebp
  41262f:	adc    al,BYTE PTR [ebx+eax*2]
  412632:	cs mov ch,0xd7
  412635:	jb     0x4125c4
  412637:	inc    ebp
  412638:	dec    ecx
  412639:	and    al,0xe3
  41263b:	inc    esp
  41263c:	imul   esp,DWORD PTR [edi+edx*4],0x330fd7b5
  412643:	jg     0x412642
  412645:	(bad)  
  412646:	mov    edi,0xaf2459b4
  41264b:	adc    eax,DWORD PTR [edi+0x53]
  41264e:	xchg   esi,eax
  41264f:	or     bh,BYTE PTR [edi-0x33]
  412652:	scas   al,BYTE PTR es:[edi]
  412653:	sub    DWORD PTR [esi],ebp
  412655:	(bad)  
  412656:	xchg   ecx,eax
  412657:	push   eax
  412658:	mov    eax,0x23
	...
  412669:	add    BYTE PTR [eax],al
  41266b:	add    BYTE PTR [esi-0x61dc2fb0],ah
  412671:	jmp    0xe71c:0x40488ad3
  412678:	adc    ecx,eax
  41267a:	sub    bh,dh
  41267c:	mov    ebp,0xba4b7eb3
  412681:	mov    DWORD PTR [esi],0x18641eed
  412687:	ret    
  412688:	loopne 0x41268e
  41268a:	sbb    DWORD PTR [edx-0x3f23a046],ecx
  412690:	cmp    al,0xb9
  412692:	jle    0x412655
  412694:	push   edi
  412695:	mov    ds:0xb854030a,eax
  41269a:	mov    ebp,0x49c08623
  41269f:	jne    0x412639
  4126a1:	inc    edx
  4126a2:	mov    ch,0x23
  4126a4:	jle    0x412686
  4126a6:	mov    ebx,0xfd97203a
  4126ab:	dec    DWORD PTR [ecx]
  4126ad:	into   
  4126ae:	mov    edi,0x37406752
  4126b3:	out    0x75,eax
  4126b5:	push   ecx
  4126b6:	sub    bh,dh
  4126b8:	sbb    eax,0x1d0fde07
  4126bd:	xor    edi,DWORD PTR [esi+0x43]
  4126c0:	mov    edx,0xd4fd3d3
  4126c5:	sbb    DWORD PTR gs:[edi-0x34],ecx
  4126c9:	sbb    ebp,DWORD PTR [edx]
  4126cb:	mov    bl,dh
  4126cd:	outs   dx,DWORD PTR ds:[esi]
  4126ce:	aaa    
  4126cf:	mov    al,BYTE PTR [eax]
	...
  4126e1:	add    BYTE PTR [edx],dh
  4126e3:	push   edi
  4126e4:	fdiv   QWORD PTR [edi+0x295be0ed]
  4126ea:	test   eax,0xdf7e1061
  4126ef:	mov    ds:0x98950a10,al
  4126f4:	jmp    0x413:0xc3165c3e
  4126fb:	push   edi
  4126fc:	jb     0x4126cd
  4126fe:	mov    ch,0x6e
  412700:	jo     0x4126d1
  412702:	mov    ch,0x6a
  412704:	pusha  
  412705:	(bad)  
  412706:	mov    ch,0x72
  412708:	pop    esp
  412709:	xor    BYTE PTR [ecx+0x3c],0xe8
  41270d:	add    ebp,DWORD PTR [ebp+0x61ffe3dc]
  412713:	les    ebx,FWORD PTR [ebp+0xc]
  412716:	or     eax,0x51ffdbdd
  41271b:	les    eax,FWORD PTR [edx]
  41271d:	sub    al,0xc3
  41271f:	pop    esi
  412720:	adc    ch,BYTE PTR [esp+ebp*1]
  412723:	push   edi
  412724:	add    ch,BYTE PTR [esi+edx*1]
  412727:	pushf  
  412728:	out    0x9b,eax
  41272a:	xchg   esi,eax
  41272b:	bound  edx,QWORD PTR [edx+0x72c36506]
  412731:	cli    
  412732:	or     al,0x87
  412734:	push   eax
  412735:	jge    0x41274a
  412737:	and    ebx,0x3
  41273a:	xchg   esi,eax
  41273b:	pop    edi
  41273c:	scas   al,BYTE PTR es:[edi]
  41273d:	test   DWORD PTR [ebp+0x7e],edi
  412740:	fild   DWORD PTR [edx]
  412742:	mov    dh,BYTE PTR [eax+0x6c]
  412745:	sub    DWORD PTR [eax],eax
	...
  412757:	add    BYTE PTR [eax-0xfd5d223],cl
  41275d:	ret    
  41275e:	push   edx
  41275f:	cld    
  412760:	push   ds
  412761:	pop    ss
  412762:	add    ecx,DWORD PTR [edi+ecx*1]
  412765:	daa    
  412766:	or     edx,DWORD PTR [ecx*1+0x1ce0031f]
  41276d:	das    
  41276e:	or     edx,DWORD PTR [ebx*1+0x610c0317]
  412775:	and    al,0x0
  412777:	xchg   esp,eax
  412778:	cmp    al,0x13
  41277a:	add    al,0x60
  41277c:	mov    dl,0x28
  41277e:	sub    DWORD PTR ds:0xe910a082,0x6a38b81a
  412788:	out    dx,al
  412789:	jg     0x4127cf
  41278b:	jmp    0x7d30fff7
  412790:	mov    WORD PTR [eax-0x60e56040],ss
  412796:	cmp    BYTE PTR [ebx],ch
  412798:	mov    ah,BYTE PTR [edx-0x77]
  41279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279c:	push   ecx
  41279d:	add    DWORD PTR [ebx-0x7ea6c757],0xffffffb1
  4127a4:	scas   al,BYTE PTR es:[edi]
  4127a5:	and    eax,0xa16dad81
  4127aa:	sbb    cl,ch
  4127ac:	rcl    BYTE PTR [edi],cl
  4127ae:	and    al,0x2d
  4127b0:	leave  
  4127b1:	call   0x2524:0x2fc2cf74
  4127b8:	mov    ecx,0xc774b1
	...
  4127cd:	add    BYTE PTR [ebp+ebx*8+0x6295ed14],ch
  4127d4:	dec    eax
  4127d5:	jo     0x4127ee
  4127d7:	arpl   WORD PTR [ecx+ebp*8],ax
  4127da:	xchg   ebp,eax
  4127db:	(bad)  [esi-0x23cee07]
  4127e1:	inc    ecx
  4127e2:	scas   eax,DWORD PTR es:[edi]
  4127e3:	enter  0x52ee,0xa
  4127e7:	call   0xd901:0xa87e655
  4127ee:	aam    0xc2
  4127f0:	shr    BYTE PTR [ecx],1
  4127f2:	loop   0x41278f
  4127f4:	or     eax,0x10626c97
  4127f9:	test   al,0x95
  4127fb:	mov    cl,0xc0
  4127fd:	sbb    dl,BYTE PTR [edi+0x54]
  412800:	mov    dh,0x0
  412802:	push   ss
  412803:	pop    ebp
  412804:	adc    BYTE PTR [ecx-0x51],al
  412807:	das    
  412808:	mov    ebp,0xb3ca6833
  41280d:	mov    ecx,0x3f6ebc
  412812:	outs   dx,BYTE PTR ds:[esi]
  412813:	pop    ds
  412814:	add    cl,0xbb
  412817:	int    0xc6
  412819:	add    DWORD PTR [esi+0x7fffff5f],0xbf85c8f8
  412823:	mov    edx,0x6686bb84
  412828:	add    BYTE PTR [ebx-0xa],dl
  41282b:	push   ebx
  41282c:	mov    ecx,DWORD PTR [esi+0x7b]
  41282f:	in     eax,0xbf
  412831:	sbb    BYTE PTR [eax],al
	...
  412843:	add    BYTE PTR [edi],bl
  412845:	add    BYTE PTR fs:[edi+0x676f],bh
  41284c:	repnz scas al,BYTE PTR es:[edi]
  41284e:	add    BYTE PTR [ebp-0x4a],dl
  412851:	push   edi
  412852:	xor    eax,eax
  412854:	cmp    ah,BYTE PTR [esi+0x0]
  412857:	add    BYTE PTR [edi],ch
  412859:	cmp    eax,0x636bc728
  41285e:	add    BYTE PTR [eax],al
  412860:	aas    
  412861:	data16 add BYTE PTR [ebx+0x3b62ff],al
  412868:	cmp    esp,DWORD PTR [esi+0x0]
  41286b:	jb     0x412880
  41286d:	call   0x663c2931
  412872:	add    BYTE PTR [ebx-0x4d69cc2],al
  412878:	or     dh,BYTE PTR [eax]
  41287a:	mov    cl,BYTE PTR [esi-0x23e25]
  412880:	je     0x4128f2
  412882:	or     eax,0x24833f70
  412888:	sti    
  412889:	add    BYTE PTR gs:[ecx+0x3fc4996],cl
  412890:	xchg   esi,eax
  412891:	retf   
  412892:	jl     0x412831
  412894:	xchg   edx,eax
  412895:	iret   
  412896:	add    DWORD PTR [eax],eax
  412898:	cmovb  edi,eax
  41289b:	add    edx,DWORD PTR [esi+0x1d397ccb]
  4128a1:	and    dl,BYTE PTR [eax]
  4128a3:	add    al,0x96
  4128a5:	retf   
  4128a6:	jp     0x41283d
	...
  4128b8:	add    BYTE PTR [eax],al
  4128ba:	xchg   bh,al
  4128bc:	add    DWORD PTR [eax],eax
  4128be:	nop    esp
  4128c1:	add    edx,DWORD PTR [esi+0x1f0877cb]
  4128c7:	pmaxub mm3,QWORD PTR [ebx]
  4128ca:	or     eax,0xe53de07
  4128cf:	lds    eax,FWORD PTR [esi+ebx*4]
  4128d2:	mov    al,bh
  4128d4:	add    DWORD PTR [eax],eax
  4128d6:	xchg   edi,eax
  4128d7:	jmp    0xcbd72ced
  4128dc:	mov    ecx,0x146fda88
  4128e1:	mov    edx,edx
  4128e3:	addr16 or al,0x89
  4128e6:	sub    bh,al
  4128e8:	std    
  4128e9:	inc    DWORD PTR [ecx+0x32]
  4128ec:	lds    esp,FWORD PTR [ebx]
  4128ee:	fidiv  WORD PTR [edx+eax*2-0x103e7f2]
  4128f5:	jmp    FWORD PTR [ecx]
  4128f7:	ss mov bh,bh
  4128fa:	and    ebx,ecx
  4128fc:	add    DWORD PTR [ebx-0x7b3a502e],ecx
  412902:	(bad)  
  412903:	push   esi
  412904:	jmp    0xf41:0x9af5a8a
  41290b:	(bad)  
  41290c:	loopne 0x412925
  41290e:	adc    al,BYTE PTR [edx]
  412910:	mov    cl,0x2c
  412912:	sbb    eax,0x1d5fe057
  412917:	bound  esi,QWORD PTR [ebp+0x13]
  41291a:	call   0x0:0xdae762
	...
  41292d:	add    BYTE PTR [eax],al
  41292f:	add    BYTE PTR [ebp-0x7a],cl
  412932:	mov    bh,0xd1
  412934:	sbb    al,0xd8
  412936:	repz dec ecx
  412939:	rcl    BYTE PTR [edx],0xd0
  41293c:	jne    0x412950
  41293e:	cwde   
  41293f:	jp     0x41298e
  412941:	xchg   BYTE PTR [ebx+0x17c146d1],dl
  412947:	adc    ch,0x51
  41294a:	ins    BYTE PTR es:[edi],dx
  41294b:	inc    ebx
  41294c:	nop
  41294d:	out    0x94,al
  41294f:	(bad)  
  412950:	cdq    
  412951:	rcl    dl,0xc7
  412954:	mov    ch,0x5e
  412956:	xchg   esp,eax
  412957:	adc    DWORD PTR ds:0xcbfcb4f,ebx
  41295d:	pop    ss
  41295e:	ret    
  41295f:	ret    
  412960:	push   cs
  412961:	dec    edi
  412962:	retf   
  412963:	xlat   BYTE PTR ds:[ebx]
  412964:	push   ds
  412965:	pop    ss
  412966:	ret    
  412967:	fstp   TBYTE PTR [eax+eiz*2+0x72]
  41296b:	shl    BYTE PTR [ebp-0x7a898dea],0x66
  412972:	out    0x3,eax
  412974:	jge    0x412919
  412976:	aaa    
  412977:	shl    esi,1
  412979:	in     eax,dx
  41297a:	sbb    esp,eax
  41297c:	test   DWORD PTR [edx+esi*2],edx
  41297f:	ss xor esp,esp
  412982:	mov    dl,0x25
  412984:	xor    ah,ch
  412986:	cmp    esp,eax
  412988:	jge    0x41296d
  41298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298b:	add    dl,BYTE PTR [ecx+0x19ff45ee]
  412991:	shl    BYTE PTR [edx+0x7e],0x0
	...
  4129a5:	add    BYTE PTR [ebp-0x2efc189a],dh
  4129ab:	es retf 
  4129ad:	setbe  BYTE PTR [edx-0x19]
  4129b1:	add    edi,DWORD PTR [edi-0x3232ffda]
  4129b7:	bound  ebp,QWORD PTR ss:[edx-0x4d]
  4129bb:	bound  ecx,QWORD PTR ds:0x64c46f
  4129c1:	jmp    0x11654db2
  4129c6:	retf   
  4129c7:	jecxz  0x412a11
  4129c9:	jmp    0x6fe1:0xad896295
  4129d0:	push   ebp
  4129d1:	adc    dl,BYTE PTR [ebx+0x14]
  4129d4:	push   eax
  4129d5:	bound  ebp,QWORD PTR [eax-0x39]
  4129d8:	loop   0x412a0f
  4129da:	jae    0x41299c
  4129dc:	mov    DWORD PTR [ebp-0x47aa883f],esi
  4129e2:	push   ds
  4129e3:	lods   eax,DWORD PTR ds:[esi]
  4129e4:	mov    DWORD PTR [ecx],esi
  4129e6:	mov    dl,0xf3
  4129e8:	cmc    
  4129e9:	push   cs
  4129ea:	mov    bl,0x7c
  4129ec:	shl    esi,0x8
  4129ef:	pop    edi
  4129f0:	add    ecx,ebp
  4129f2:	xchg   ebp,eax
  4129f3:	jmp    0x412a39
  4129f5:	int    0x7d
  4129f7:	jle    0x4129f9
  4129f9:	in     al,0x95
  4129fb:	bound  edi,QWORD PTR [eax+esi*8+0x16]
  4129ff:	rol    BYTE PTR [edx],0xee
  412a02:	fldcw  WORD PTR [edx+0x1]
  412a05:	jmp    0x4c41a79f
	...
  412a1a:	add    BYTE PTR [eax],al
  412a1c:	xchg   edx,eax
  412a1d:	bound  edi,QWORD PTR [eax+esi*8+0x16]
  412a21:	rol    BYTE PTR [ecx],0xee
  412a24:	mov    ecx,0x95e902ba
  412a29:	jmp    0x412a87
  412a2b:	add    eax,0xcd44ec5a
  412a30:	push   ecx
  412a31:	in     al,dx
  412a32:	xchg   esi,eax
  412a33:	cmc    
  412a34:	sbb    DWORD PTR [edi-0x15a93d03],edi
  412a3a:	inc    esp
  412a3b:	(bad)
  412a3e:	push   eax
  412a3f:	add    BYTE PTR [edx-0x52aeff06],cl
  412a45:	xchg   esp,eax
  412a46:	mov    WORD PTR [ebx+eiz*8-0xa],es
  412a4a:	dec    ebp
  412a4b:	mov    ecx,DWORD PTR [ecx]
  412a4d:	pop    ebx
  412a4e:	fsqrt  
  412a50:	js     0x4129d8
  412a52:	mov    cl,BYTE PTR [ebx+edx*4-0x62]
  412a56:	cmp    BYTE PTR [ebx+eiz*4-0x5a],cl
  412a5a:	mov    WORD PTR [ebx-0x42],es
  412a5d:	cmp    eax,DWORD PTR [ecx+0x24]
  412a60:	mov    ebx,0x443979af
  412a65:	adc    al,0x4f
  412a67:	mov    edi,DWORD PTR [ecx+0x5b]
  412a6a:	inc    ecx
  412a6b:	idiv   DWORD PTR [eax-0x7a]
  412a6e:	mov    cl,BYTE PTR [ebx+edx*8-0x5e]
  412a72:	mov    BYTE PTR [ebx+edx*8-0x62],al
  412a76:	mov    al,BYTE PTR [ebx+eiz*2-0x2]
  412a7a:	dec    ebp
  412a7b:	push   ecx
  412a7c:	hlt    
  412a7d:	ja     0x412a64
  412a7f:	das    
	...
  412a90:	add    BYTE PTR [eax],al
  412a92:	add    BYTE PTR [edx-0x61d47402],0x21
  412a99:	sub    esi,DWORD PTR [edi+0x26b8c762]
  412a9f:	cmp    dl,ah
  412aa1:	cmp    BYTE PTR [eax-0x70],al
  412aa4:	sar    dl,1
  412aa6:	in     al,0x24
  412aa8:	shr    al,0x48
  412aab:	gs ret 0xafeb
  412aaf:	in     eax,dx
  412ab0:	dec    ecx
  412ab1:	and    al,0xab
  412ab3:	test   DWORD PTR [edx-0xa8f9832],0x51ede8ff
  412abd:	and    al,0x73
  412abf:	in     eax,dx
  412ac0:	aad    0x8b
  412ac2:	jae    0x412a8e
  412ac4:	cmp    eax,0xcbed5f52
  412ac9:	call   0xfe5c0864
  412ace:	or     DWORD PTR [ecx+0x30d58a39],esp
  412ad4:	shl    BYTE PTR [ebx],0x5e
  412ad7:	inc    edx
  412ad8:	test   ecx,esp
  412ada:	xchg   ebp,eax
  412adb:	enter  0xc043,0xee
  412adf:	leave  
  412ae0:	push   es
  412ae1:	inc    esp
  412ae2:	mov    edx,0x5be7df0f
  412ae7:	mov    bl,0x4a
  412ae9:	inc    ebx
  412aea:	jp     0x412aab
  412aec:	add    al,0x0
  412aee:	xchg   esi,eax
  412aef:	retf   
  412af0:	mov    dh,bh
  412af2:	dec    eax
  412af3:	arpl   bx,bx
  412af5:	imul   eax,DWORD PTR [eax],0x0
	...
  412b08:	jb     0x412b11
  412b0a:	sahf   
  412b0b:	das    
  412b0c:	sbb    eax,0x4327e608
  412b11:	fimul  DWORD PTR [esi+0x1a45aecd]
  412b17:	(bad)  
  412b18:	cdq    
  412b19:	xor    BYTE PTR [eax+0x3c40da23],bh
  412b1f:	mov    dl,dl
  412b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b22:	rcl    DWORD PTR [ecx-0x1a],0x30
  412b26:	push   edx
  412b27:	out    0x2d,eax
  412b29:	mov    ch,0x22
  412b2b:	(bad)  
  412b2c:	lods   eax,DWORD PTR ds:[esi]
  412b2d:	mov    BYTE PTR [ebp-0x5f2c4da5],cl
  412b33:	pop    es
  412b34:	pop    ecx
  412b35:	vpmacsdql xmm1,xmm5,xmm3,xmm0
  412b3b:	add    BYTE PTR [ebx],bl
  412b3d:	xchg   esp,eax
  412b3e:	cwde   
  412b3f:	dec    esp
  412b40:	(bad)  
  412b41:	jg     0x412b2b
  412b43:	inc    ebx
  412b44:	ret    
  412b45:	mov    WORD PTR [ebp+0x1c7a28d],cs
  412b4b:	add    BYTE PTR [edx+ecx*8-0x22e2af4a],bh
  412b52:	sub    DWORD PTR [esi+0x22a66225],ebx
  412b58:	or     al,0x16
  412b5a:	ret    
  412b5b:	(bad)  
  412b5c:	sbb    al,0x9a
  412b5e:	(bad)  
  412b5f:	(bad)  
  412b60:	mov    ch,0x22
  412b62:	cmp    DWORD PTR [esp+ecx*1+0x3b08fac],esi
  412b69:	mov    ebp,0x8e7e
	...
  412b7e:	pop    ebp
  412b7f:	xchg   BYTE PTR [edi-0x6216b948],bh
  412b85:	nop
  412b86:	cmp    eax,0x3d2be85a
  412b8b:	mov    ah,0x5e
  412b8d:	and    cl,BYTE PTR [edx+ebx*4+0x1a75bf62]
  412b94:	int    0xd
  412b96:	fldenv ds:0xbcb9f80b
  412b9c:	out    0x3,eax
  412b9e:	mov    ebp,0x759f6a68
  412ba3:	push   esi
  412ba4:	out    0x12,eax
  412ba6:	sbb    ebp,DWORD PTR [edx+ebp*8+0x1ce19603]
  412bad:	add    eax,0x442eca1
  412bb2:	xchg   esi,eax
  412bb3:	bound  esp,QWORD PTR [edx-0x49]
  412bb6:	mov    ch,0x82
  412bb8:	jb     0x412b43
  412bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bbb:	out    0x3,ax
  412bbe:	adc    eax,0x14b4f5a1
  412bc3:	mov    al,ds:0xa314b6e9
  412bc8:	jmp    0x3703680
  412bcd:	loopne 0x412bb5
  412bcf:	out    0xa5,eax
  412bd1:	sub    al,0x19
  412bd3:	mov    edx,0x270c21ce
  412bd8:	or     edx,esp
  412bda:	jl     0x412c02
  412bdc:	add    ebp,esp
  412bde:	sbb    al,0x17
  412be0:	add    BYTE PTR ds:0x0,cl
	...
  412bf2:	add    BYTE PTR [eax],al
  412bf4:	dec    esi
  412bf5:	adc    cl,BYTE PTR [ecx+0x2137ea9f]
  412bfb:	xchg   ecx,eax
  412bfc:	jns    0x412bb4
  412bfe:	std    
  412bff:	sahf   
  412c00:	and    edx,DWORD PTR [ecx+ecx*4+0x5383fe2d]
  412c07:	cmp    DWORD PTR [ebx],edx
  412c09:	scas   al,BYTE PTR es:[edi]
  412c0a:	call   0xfdfdcda6
  412c0f:	rcr    BYTE PTR [edx-0x26],cl
  412c12:	or     DWORD PTR [ebx+0x62c25f93],0xebf7a252
  412c1c:	stos   BYTE PTR es:[edi],al
  412c1d:	mov    eax,ebp
  412c1f:	inc    ebx
  412c20:	test   eax,0x8a62fdbc
  412c25:	call   0x16f3316e
  412c2a:	push   eax
  412c2b:	jb     0x412c91
  412c2d:	ret    
  412c2e:	leave  
  412c2f:	xor    al,0x77
  412c31:	mov    esp,0xa8bb2189
  412c36:	add    DWORD PTR [eax],esp
  412c38:	inc    edx
  412c39:	retf   0x72a2
  412c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3d:	mov    ah,0xe7
  412c3f:	cmp    BYTE PTR [eax-0x42d73518],dh
  412c45:	pop    esp
  412c46:	add    DWORD PTR [ebx],esp
  412c48:	adc    ebx,DWORD PTR [edi]
  412c4a:	and    al,0xbd
  412c4c:	xchg   edx,eax
  412c4d:	stos   BYTE PTR es:[edi],al
  412c4e:	cmp    DWORD PTR [eax],edx
  412c50:	adc    DWORD PTR [ebx-0x3b],esp
  412c53:	lods   eax,DWORD PTR ds:[esi]
  412c54:	jno    0x412ca5
  412c56:	(bad)  
  412c57:	call   0x412c5c
	...
  412c68:	add    BYTE PTR [eax],al
  412c6a:	xchg   ebp,eax
  412c6b:	bound  eax,QWORD PTR [ebx+0x3982ffe6]
  412c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c72:	xor    DWORD PTR [edi-0x77],edi
  412c75:	cmp    eax,0x3b508b3e
  412c7a:	adc    ebp,DWORD PTR [ebp+0x54c100e8]
  412c80:	(bad)  
  412c81:	jmp    DWORD PTR [edi+esi*2-0x3164bb76]
  412c88:	push   esp
  412c89:	push   eax
  412c8a:	mov    ah,0x11
  412c8c:	in     eax,0x7f
  412c8e:	cli    
  412c8f:	cmp    esi,0x8c51d73b
  412c95:	add    bh,ah
  412c97:	pop    esi
  412c98:	add    BYTE PTR [ebx+0x11ca93],al
  412c9e:	add    ah,ah
  412ca0:	test   BYTE PTR [edx],0xff
  412ca3:	pop    esi
  412ca4:	cmp    ebp,0xd48e51fc
  412caa:	out    dx,eax
  412cab:	pop    esi
  412cac:	add    BYTE PTR [ebx-0x74e23cdd],cl
  412cb2:	or     eax,ebx
  412cb4:	push   ebp
  412cb5:	mov    edi,DWORD PTR [ecx]
  412cb7:	mov    bl,0x1
  412cb9:	add    BYTE PTR [edi+0x1efdc0e5],ch
  412cbf:	out    0xbf,al
  412cc1:	add    ecx,DWORD PTR ds:0xf03bde6
  412cc7:	in     al,dx
  412cc8:	dec    ecx
  412cc9:	and    al,0xb3
  412ccb:	out    dx,eax
  412ccc:	mov    cl,dh
	...
  412cde:	add    BYTE PTR [eax],al
  412ce0:	xchg   DWORD PTR [eax],ebx
  412ce2:	cmc    
  412ce3:	push   DWORD PTR [eax+0x6f2441e6]
  412ce9:	out    0x51,eax
  412ceb:	and    al,0x6b
  412ced:	out    0x59,eax
  412cef:	and    al,0x67
  412cf1:	xchg   edi,eax
  412cf2:	ret    0xe452
  412cf5:	adc    ecx,DWORD PTR [ebp+0x7c]
  412cf8:	pop    edx
  412cf9:	mov    fs,WORD PTR [ecx]
  412cfb:	cmc    
  412cfc:	jo     0x412d58
  412cfe:	push   esp
  412cff:	push   ebx
  412d00:	in     al,0x28
  412d02:	mov    BYTE PTR [ebx+ebx*4-0x4e],al
  412d06:	in     eax,0x17
  412d08:	xchg   esi,eax
  412d09:	xchg   esi,eax
  412d0a:	sbb    eax,0xe8580dfe
  412d0f:	and    ebp,DWORD PTR [ebp+0xa]
  412d12:	jl     0x412c96
  412d14:	xor    al,0xcd
  412d16:	add    al,dl
  412d18:	sbb    eax,0x94f84404
  412d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d1e:	lock out 0x19,eax
  412d21:	fcomp  DWORD PTR ds:0x897c6bfe
  412d27:	int    0x1f
  412d29:	mov    al,ch
  412d2b:	sub    ebp,esi
  412d2d:	fstp   QWORD PTR [eax]
  412d2f:	(bad)  
  412d30:	stc    
  412d31:	xor    al,0x4c
  412d33:	mov    bl,BYTE PTR [edx-0x61]
  412d36:	in     eax,0x2a
  412d38:	fmulp  st(4),st
  412d3a:	dec    esp
  412d3b:	mov    bh,0xef
  412d3d:	sub    eax,0x12e12d89
  412d42:	xor    edi,ecx
	...
  412d54:	add    BYTE PTR [eax],al
  412d56:	sbb    eax,0xa9e84376
  412d5b:	int3   
  412d5c:	inc    edi
  412d5d:	mov    bl,BYTE PTR [edx+0x5f]
  412d60:	fadd   DWORD PTR [edx]
  412d62:	into   
  412d63:	sub    edi,DWORD PTR fs:[esi+ebx*4-0x80]
  412d68:	enter  0x8223,0xca
  412d6c:	add    DWORD PTR [eax],eax
  412d6e:	xchg   esi,eax
  412d6f:	ds sbb eax,0x48c46e75
  412d75:	jnp    0x412d31
  412d77:	xor    al,0xb8
  412d79:	and    eax,esi
  412d7b:	sti    
  412d7c:	scas   eax,DWORD PTR es:[edi]
  412d7d:	mov    dl,BYTE PTR [eax+0x63]
  412d80:	push   ebx
  412d81:	repz jns 0x412de4
  412d84:	mov    edi,edx
  412d86:	sbb    eax,0xc327e5ff
  412d8b:	fisttp DWORD PTR [edx+0x182d6ecd]
  412d91:	(bad)  
  412d92:	pop    ecx
  412d93:	bound  esp,QWORD PTR [edx]
  412d95:	cmp    al,0xa0
  412d97:	out    0x4,al
  412d99:	add    dl,BYTE PTR [esi+0x759f6a62]
  412d9f:	dec    esi
  412da0:	out    0xe,eax
  412da2:	adc    ebx,DWORD PTR [ecx+ebp*8+0x3]
  412da6:	xchg   esi,eax
  412da7:	in     eax,dx
  412da8:	sbb    ebp,eax
  412daa:	rcr    edi,0xb6
  412dad:	push   cs
  412dae:	sbb    cl,BYTE PTR [ebp-0x18]
  412db1:	add    edx,DWORD PTR [esi-0x5efb591b]
  412db7:	loopne 0x412df0
  412db9:	add    eax,0x0
	...
  412dca:	add    BYTE PTR [eax],al
  412dcc:	xchg   esi,eax
  412dcd:	bound  esp,QWORD PTR [edx-0x49]
  412dd0:	mov    ch,0xe
  412dd2:	bound  ecx,QWORD PTR [esi-0x54]
  412dd5:	lods   eax,DWORD PTR ds:[esi]
  412dd6:	je     0x412ddf
  412dd8:	pushf  
  412dd9:	jge    0x412d81
  412ddb:	xchg   ebp,eax
  412ddc:	xchg   edi,eax
  412ddd:	in     eax,dx
  412dde:	scas   al,BYTE PTR es:[edi]
  412ddf:	mov    bl,0xc
  412de1:	push   ds
  412de2:	ret    
  412de3:	imul   DWORD PTR [ecx+ebx*4+0x2622b3ba]
  412dea:	add    esp,eax
  412dec:	in     ax,dx
  412dee:	and    eax,0x37e5d8c
  412df3:	sub    al,0xcd
  412df5:	mov    al,0x46
  412df7:	push   ds
  412df8:	outs   dx,BYTE PTR ds:[esi]
  412df9:	ss add ebx,eax
  412dfc:	daa    
  412dfd:	outs   dx,BYTE PTR ds:[esi]
  412dfe:	bound  esi,QWORD PTR [edi-0x4e698d8b]
  412e04:	or     al,0xa8
  412e06:	pavgb  mm0,QWORD PTR [ebp+0x618a1eb8]
  412e0d:	in     al,dx
  412e0e:	stos   DWORD PTR es:[edi],eax
  412e0f:	out    0xc9,eax
  412e11:	movzx  ecx,WORD PTR [edx+0x17d5cb4b]
  412e18:	jo     0x412dd2
  412e1a:	ret    0x1c42
  412e1d:	pop    ss
  412e1e:	add    ch,cl
  412e20:	imul   esi,DWORD PTR [esi],0x84496210
  412e26:	xor    BYTE PTR [edx+0xe],dh
  412e29:	test   BYTE PTR [eax+esi*2],dh
  412e2c:	data16 test BYTE PTR [eax],bh
  412e2f:	pusha  
	...
  412e40:	add    BYTE PTR [eax],al
  412e42:	inc    BYTE PTR [ebx-0x7bb19dc4]
  412e48:	adc    BYTE PTR [esi],bl
  412e4a:	out    0x27,eax
  412e4c:	mov    DWORD PTR [edi-0x49107f86],ebp
  412e52:	sub    esp,0x4c
  412e55:	add    eax,0x724f113a
  412e5a:	pusha  
  412e5b:	in     al,dx
  412e5c:	fcom   DWORD PTR [ecx-0x69024b53]
  412e62:	fbld   TBYTE PTR [ebp+ecx*1-0x2488ca4]
  412e69:	jmp    0xd1654a8c
  412e6e:	into   
  412e6f:	aad    0x24
  412e71:	in     eax,dx
  412e72:	xchg   ebp,eax
  412e73:	bound  esi,QWORD PTR [ebx+0x11]
  412e76:	unpcklps xmm4,XMMWORD PTR [edi*8-0x6dbdbe2]
  412e7e:	add    dl,BYTE PTR [edx]
  412e80:	push   eax
  412e81:	bound  edx,QWORD PTR [eax-0x41]
  412e84:	repnz pop ecx
  412e86:	fwait
  412e87:	mov    eax,0xa61e9a53
  412e8c:	xchg   DWORD PTR [ebp+0x2fe88bb1],esp
  412e92:	xchg   DWORD PTR [eax-0x7c399d03],edi
  412e98:	and    al,0xea
  412e9a:	fucomp st(4)
  412e9c:	shl    DWORD PTR [edi+edx*2+0x6dcd4cea],1
  412ea3:	adc    DWORD PTR [ecx+0x1f],ecx
	...
  412eb5:	add    BYTE PTR [eax],al
  412eb7:	add    BYTE PTR [edx-0x67ff0df9],ch
  412ebd:	push   ebp
  412ebe:	mov    bl,al
  412ec0:	in     al,0xaa
  412ec2:	and    DWORD PTR [eax],edi
  412ec4:	add    bl,dh
  412ec6:	mov    cl,dh
  412ec8:	xchg   edi,eax
  412ec9:	inc    ebx
  412eca:	repnz (bad) 
  412ecc:	cmp    dl,ch
  412ece:	imul   esp,DWORD PTR [ebx+ebx*4],0x738bd861
  412ed5:	retf   0x3b21
  412ed8:	in     al,dx
  412ed9:	jmp    0xd8b85337
  412ede:	dec    eax
  412edf:	jmp    0x412f14
  412ee1:	jmp    0x2441:0xe9872459
  412ee8:	daa    
  412ee9:	call   0x7500:0x63032483
  412ef0:	push   es
  412ef1:	loop   0x412eae
  412ef3:	sub    bl,dh
  412ef5:	bound  eax,QWORD PTR [eax]
  412ef7:	add    BYTE PTR [ebx+0x2003cb9],ah
  412efd:	arpl   WORD PTR [eax],ax
  412eff:	jl     0x412ef3
  412f01:	loope  0x412f01
  412f03:	add    ah,bl
  412f05:	rol    BYTE PTR [eax-0x2652c84],0x7c
  412f0c:	mov    edi,0x3c057c62
  412f11:	push   esi
  412f12:	add    dh,BYTE PTR [esp+edi*4-0x17]
  412f16:	dec    ecx
  412f17:	and    al,0xa7
  412f19:	in     eax,dx
  412f1a:	push   eax
  412f1b:	mov    eax,DWORD PTR [eax]
	...
  412f2d:	add    BYTE PTR [ecx-0x75],ch
  412f30:	retf   
  412f31:	repz push 0x3430ea56
  412f37:	mul    DWORD PTR [ecx]
  412f39:	pop    eax
  412f3a:	xor    al,0x9f
  412f3c:	and    DWORD PTR [eax],edx
  412f3e:	add    al,0x73
  412f40:	sub    dl,bh
  412f42:	dec    ebp
  412f43:	repnz mov cl,dh
  412f46:	xchg   esi,eax
  412f47:	arpl   WORD PTR [esi-0x11],bp
  412f4a:	jns    0x412fb1
  412f4c:	sbb    al,0x43
  412f4e:	mov    edx,0x97ee809b
  412f53:	cs and ebp,edx
  412f56:	test   BYTE PTR [eax-0x4b],al
  412f59:	and    eax,DWORD PTR [esi-0x180137ea]
  412f5f:	jns    0x412eee
  412f61:	int    0x3e
  412f63:	cmp    dl,BYTE PTR [esi+edi*8]
  412f66:	inc    ecx
  412f67:	pop    ecx
  412f68:	sbb    DWORD PTR [edx-0x70f536c5],eax
  412f6e:	pop    ss
  412f6f:	int3   
  412f70:	add    DWORD PTR [eax],eax
  412f72:	sbb    eax,0x9603f03e
  412f77:	retf   
  412f78:	mov    al,0x52
  412f7a:	mov    BYTE PTR [eax+0x4a],0xe7
  412f7e:	mov    al,0xdb
  412f80:	sbb    esi,edi
  412f82:	sbb    eax,0x6b27e088
  412f87:	jp     0x412f16
  412f89:	int    0xd
  412f8b:	hlt    
  412f8c:	sub    al,0xef
  412f8e:	in     al,0xdc
  412f90:	sbb    DWORD PTR [edx],edi
	...
  412fa2:	add    BYTE PTR [eax],al
  412fa4:	aad    0xb4
  412fa6:	jmp    0xe9e88a35
  412fab:	cmp    dl,BYTE PTR [eax]
  412fad:	mov    al,ds:0x96d1fffd
  412fb2:	or     al,0x83
  412fb4:	or     BYTE PTR [eax+eax*1+0x0],dl
  412fb8:	xchg   esi,eax
  412fb9:	retf   
  412fba:	lea    eax,[ebx+edi*2-0x35]
  412fbe:	add    BYTE PTR [eax],al
  412fc0:	xchg   esi,eax
  412fc1:	lahf   
  412fc2:	add    BYTE PTR [ebx+0x68dc9ab],al
  412fc8:	arpl   bx,cx
  412fca:	cwde   
  412fcb:	call   FWORD PTR [ecx-0xd752bf9]
  412fd1:	(bad)  
  412fd2:	retf   
  412fd3:	mov    ebx,0xefc3461e
  412fd8:	sbb    al,bh
  412fda:	fwait
  412fdb:	jecxz  0x412fe9
  412fdd:	int3   
  412fde:	repz push DWORD PTR [ecx-0x4b]
  412fe2:	call   0x71e5:0xfa41cb5
  412fe9:	mov    ch,0xf6
  412feb:	pop    ebx
  412fec:	xchg   esi,eax
  412fed:	(bad)  
  412fee:	out    0x3,eax
  412ff0:	xchg   edi,eax
  412ff1:	fdiv   st(3),st
  412ff3:	dec    DWORD PTR [ecx-0x4b]
  412ff6:	adc    al,al
  412ff8:	jne    0x413048
  412ffa:	pop    esp
  412ffb:	and    al,0xa
  412ffd:	push   ss
  412ffe:	in     al,dx
  412fff:	sbb    bh,BYTE PTR [eax+ebx*1]
  413002:	jb     0x412fbb
  413004:	jne    0x413020
  413006:	jb     0x412fc7
	...
  413018:	add    BYTE PTR [eax],al
  41301a:	jne    0x412fa6
  41301c:	sbb    al,0xb4
  41301e:	or     al,0xa4
  413020:	mov    edi,0xa6b50506
  413025:	add    al,0x38
  413027:	dec    esi
  413028:	jecxz  0x41302d
  41302a:	xchg   esi,eax
  41302b:	out    0x33,eax
  41302d:	stc    
  41302e:	clc    
  41302f:	enter  0x8ecc,0x4d
  413033:	jle    0x413054
  413035:	sub    eax,0x4d8ed52e
  41303b:	jle    0x412ffc
  41303d:	mov    es,WORD PTR [ebx]
  41303f:	dec    esi
  413040:	jecxz  0x413045
  413042:	xchg   esi,eax
  413043:	jmp    0x413018
  413045:	fisttp WORD PTR [ebp-0x76205415]
  41304b:	jmp    0x413008
  41304d:	fisttp WORD PTR [ecx+0x1af1421d]
  413053:	mov    ch,0xbb
  413055:	push   es
  413056:	push   ecx
  413057:	leave  
  413058:	out    dx,al
  413059:	mov    ds,WORD PTR [ebx]
  41305b:	dec    esi
  41305c:	add    ch,ch
  41305e:	xchg   ebp,eax
  41305f:	bound  edx,QWORD PTR [ecx-0x67]
  413062:	and    BYTE PTR [esi-0x4b43a018],ah
  413068:	std    
  413069:	push   ds
  41306a:	pop    ss
  41306b:	push   eax
  41306c:	add    al,0xe9
  41306e:	xchg   ebp,eax
  41306f:	(bad)  
  413071:	fdivrp st(1),st
  413073:	enter  0xe900,0x95
  413077:	ja     0x4130f5
  413079:	lds    ecx,FWORD PTR [ecx+0x65]
  41307c:	or     DWORD PTR [eax],0x0
	...
  41308f:	add    BYTE PTR [ebp+0x1620062],dl
  413095:	adc    BYTE PTR [edx+esi*2-0x21],0x88
  41309a:	leave  
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	xchg   esi,eax
  41309d:	push   0x6224ae39
  4130a2:	mov    DWORD PTR [esi+0xd44e8ea],esp
  4130a8:	es jmp 0xeb04397
  4130ae:	push   eax
  4130af:	fs dec esi
  4130b1:	cmp    BYTE PTR [eax+ebx*1],0x23
  4130b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b6:	xchg   DWORD PTR ds:0x17e87ff6,edx
  4130bc:	xchg   ecx,eax
  4130bd:	mov    ah,0xfd
  4130bf:	shl    BYTE PTR [ecx],1
  4130c1:	xor    BYTE PTR [ebx+ebx*1],0xc6
  4130c5:	call   0xd06fe1e
  4130ca:	push   edx
  4130cb:	jb     0x413119
  4130cd:	mov    ebx,0xb47f78e5
  4130d2:	mov    DWORD PTR [ecx+0x21242023],eax
  4130d8:	pop    es
  4130d9:	and    al,0x89
  4130db:	das    
  4130dc:	jb     0x413069
  4130de:	out    dx,eax
  4130df:	push   esi
  4130e0:	lahf   
  4130e1:	js     0x4130a6
  4130e3:	(bad)  
  4130e4:	(bad)  
  4130e5:	jg     0x4130fb
  4130e7:	add    cl,dl
  4130e9:	scas   eax,DWORD PTR es:[edi]
  4130ea:	mov    cl,BYTE PTR [ebx+ebx*4-0x72]
  4130ee:	mov    dl,BYTE PTR [ebx+ecx*4-0x6e]
  4130f2:	mov    BYTE PTR [eax+eax*1+0x0],cl
	...
  413106:	fwait
  413107:	xchg   esi,eax
  413108:	mov    BYTE PTR [ebx+ebx*2-0x75],dl
  41310c:	mov    al,BYTE PTR [ebx+ebx*2-0x51]
  413110:	push   esi
  413111:	push   ebp
  413112:	aas    
  413113:	out    0xcb,al
  413115:	call   0x3fb9c8
  41311a:	in     al,0xaa
  41311c:	and    DWORD PTR [eax],edi
  41311e:	or     al,dh
  413120:	mov    cl,dh
  413122:	hlt    
  413123:	xchg   ch,ah
  413125:	mov    ds:0x3bfe5a4e,eax
  41312a:	cli    
  41312b:	retf   
  41312c:	aaa    
  41312d:	mov    edi,DWORD PTR [ebx-0x3e]
  413130:	xor    eax,0x193a93b
  413135:	add    BYTE PTR [edi],bh
  413137:	in     al,0x8
  413139:	adc    DWORD PTR [ecx],0xffffffc7
  41313c:	add    DWORD PTR [eax],eax
  41313e:	das    
  41313f:	pop    edi
  413140:	je     0x41315a
  413142:	and    bl,BYTE PTR [edi+0x3]
  413145:	add    bh,bh
  413147:	retf   0x8304
  41314a:	xor    BYTE PTR [ebp+0x74],bl
  41314d:	sbb    edx,esp
  41314f:	pop    esi
  413150:	jnp    0x413152
  413152:	out    dx,eax
  413153:	retf   0x8304
  413156:	and    BYTE PTR [esi+0x74],bl
  413159:	or     eax,0xce8aee88
  41315e:	pop    es
  41315f:	xchg   al,dh
  413161:	jmp    DWORD PTR [eax-0x72]
  413164:	(bad)  
  413165:	jmp    0x413146
  413167:	in     eax,0x69
  413169:	and    al,0x0
	...
  41317b:	add    bh,cl
  41317d:	mov    bl,0xfd
  41317f:	jmp    FWORD PTR [edi-0x692c76a2]
  413185:	pusha  
  413186:	das    
  413187:	push   ecx
  413188:	dec    ebx
  413189:	inc    eax
  41318a:	inc    edi
  41318b:	out    0xd1,eax
  41318d:	or     bl,BYTE PTR [eax]
  41318f:	(bad)  
  413190:	pop    ebx
  413191:	dec    eax
  413192:	sub    BYTE PTR [eax],al
  413194:	and    ebx,DWORD PTR [esi]
  413196:	mov    ch,BYTE PTR [ebx-0x46]
  413199:	mov    ecx,DWORD PTR [ebx+eax*2+0x47c4efb2]
  4131a0:	(bad)  
  4131a2:	fst    QWORD PTR [edi-0x43]
  4131a5:	jae    0x4131af
  4131a7:	sub    BYTE PTR [ecx],0x54
  4131aa:	sbb    dh,bh
  4131ac:	adc    ebp,DWORD PTR [ecx+0x8]
  4131af:	test   BYTE PTR [edx],al
  4131b1:	mov    esp,0xb9150001
  4131b6:	dec    DWORD PTR [esi]
  4131b8:	sbb    BYTE PTR ds:0x34960001,bh
  4131be:	enter  0xa623,0x78
  4131c2:	mov    edx,eax
  4131c4:	ins    DWORD PTR es:[edi],dx
  4131c5:	add    BYTE PTR [ebp+0x2cd21d50],dh
  4131cb:	cmp    BYTE PTR cs:[ecx+0x67ca8a15],ch
  4131d2:	fcom   QWORD PTR [esi-0x3c]
  4131d5:	inc    esp
  4131d6:	inc    esi
  4131d7:	mov    bh,dh
  4131d9:	mov    ds:0x909f103,eax
  4131de:	fcmovb st,st(4)
	...
  4131f0:	add    BYTE PTR [eax],al
  4131f2:	add    DWORD PTR [esi-0x6c4dbc77],0xc7ba85da
  4131fc:	add    DWORD PTR [eax],eax
  4131fe:	arpl   WORD PTR [edx-0x3851427e],si
  413204:	add    DWORD PTR [eax],eax
  413206:	xchg   esi,eax
  413207:	scas   eax,DWORD PTR es:[edi]
  413208:	stc    
  413209:	cmp    al,0x96
  41320b:	mov    BYTE PTR [ecx],0x0
  41320e:	dec    edx
  41320f:	(bad)  
  413210:	in     al,dx
  413211:	add    al,0x64
  413214:	rcr    edi,cl
  413216:	jp     0x41327a
  413218:	aam    0x3
  41321a:	xchg   esi,eax
  41321b:	cs in  al,0x82
  41321e:	test   al,0x65
  413220:	mov    ebx,0x721248fb
  413225:	inc    esi
  413226:	mov    cl,0x1b
  413228:	cmp    BYTE PTR [edi],dl
  41322a:	nop
  41322b:	mov    ebp,0x11ecb8f5
  413230:	push   0x4c
  413232:	adc    BYTE PTR [eax],0x6a
  413235:	inc    eax
  413236:	shl    DWORD PTR [edi+ebp*8-0x3cc1e2fd],0xf3
  41323e:	sbb    al,0xa5
  413240:	sar    BYTE PTR [esi],cl
  413242:	rcl    DWORD PTR [edi],1
  413244:	jb     0x41328c
  413246:	jno    0x413299
  413248:	add    eax,0x6a275017
  41324d:	daa    
  41324e:	xchg   esi,eax
  41324f:	aaa    
  413250:	aam    0x2a
  413252:	xchg   ecx,eax
  413253:	fnsave [ebx]
  413255:	loopne 0x413257
	...
  413267:	add    BYTE PTR [ecx-0x39e8dd21],cl
  41326d:	adc    al,0x62
  41326f:	inc    ebp
  413270:	xor    DWORD PTR [ecx-0x2b],ebp
  413273:	push   ss
  413274:	and    ch,bl
  413276:	cmp    esp,eax
  413278:	(bad)
  41327b:	add    edx,DWORD PTR [esi-0x7bc90d9e]
  413281:	xor    DWORD PTR [edx+edi*2+0x1],0xffffffb1
  413286:	out    0x3,eax
  413288:	or     eax,0xf1fffbe8
  41328d:	mov    al,0x3a
  41328f:	mov    ah,0x1c
  413291:	mov    al,ds:0xb0f2208f
  413296:	jle    0x41329c
  413298:	sub    BYTE PTR [esi+0x0],dl
  41329b:	in     eax,dx
  41329c:	xchg   ebp,eax
  41329d:	bound  eax,QWORD PTR [ecx]
  41329f:	mov    esp,gs
  4132a1:	(bad)  
  4132a2:	jb     0x4132f0
  4132a4:	adc    al,0x9c
  4132a6:	std    
  4132a7:	call   0xe9457fef
  4132ac:	xchg   ebp,eax
  4132ad:	fisttp WORD PTR [ecx-0x20]
  4132b0:	push   es
  4132b1:	dec    edx
  4132b2:	mov    DWORD PTR [edi-0x5b],ebp
  4132b5:	fs add cl,ch
  4132b8:	or     ah,bh
  4132ba:	sbb    ch,ch
  4132bc:	xchg   ebp,eax
  4132bd:	bound  eax,QWORD PTR [eax+0x60]
  4132c0:	adc    ecx,DWORD PTR [esp+eax*1-0x17]
  4132c4:	xchg   ebp,eax
  4132c5:	fld    DWORD PTR [esi-0x24f8607]
  4132cb:	bound  eax,QWORD PTR [eax]
	...
  4132dd:	add    bl,dh
  4132df:	push   edi
  4132e0:	add    al,0xe9
  4132e2:	xchg   ebp,eax
  4132e3:	fcom   QWORD PTR [eax]
  4132e5:	jmp    0x41328e
  4132e7:	lods   eax,DWORD PTR ds:[esi]
  4132e8:	ret    0x6571
  4132eb:	arpl   WORD PTR [esi-0x24fae2b],bx
  4132f1:	je     0x41333d
  4132f3:	fld    QWORD PTR [esi-0x24fbe07]
  4132f9:	jo     0x4132b3
  4132fb:	push   edi
  4132fc:	add    al,0xe9
  4132fe:	xchg   ebp,eax
  4132ff:	and    al,BYTE PTR [edi+0x642e5f]
  413305:	jmp    0xe5521916
  41330a:	xchg   ebp,eax
  41330b:	bound  ecx,QWORD PTR [ecx+0x64126f]
  413311:	jmp    0xbb439335
  413316:	test   al,0xa1
  413318:	mov    cl,bh
  41331a:	xchg   esp,eax
  41331b:	rcr    BYTE PTR [ebp*8-0xf8c9d6b],1
  413322:	push   ds
  413323:	out    0x10,al
  413325:	add    bl,dh
  413327:	arpl   WORD PTR [eax],ax
  413329:	mov    DWORD PTR [ecx-0x52],esi
  41332c:	add    DWORD PTR [eax],eax
  41332e:	mov    edi,0xdb8e88a3
  413333:	scas   eax,DWORD PTR es:[edi]
  413334:	std    
  413335:	inc    DWORD PTR [esi+0x30]
  413338:	or     eax,0x8963af04
  41333d:	xchg   BYTE PTR [edi+0xfffdaf],ah
	...
  413353:	add    BYTE PTR [edi-0x3a],ch
  413356:	mov    al,BYTE PTR [esi-0x25041]
  41335c:	jno    0x4133c4
  41335e:	add    BYTE PTR [ebx+0x1aaf9],cl
  413364:	jg     0x413340
  413366:	sbb    DWORD PTR [eax],0x73
  413369:	arpl   WORD PTR [eax],ax
  41336b:	add    ecx,ecx
  41336d:	mov    dh,0x1
  41336f:	add    BYTE PTR [edi-0x46],bh
  413372:	int3   
  413373:	rcr    BYTE PTR [edi-0x26],cl
  413376:	inc    ecx
  413377:	and    al,0x3b
  413379:	xor    BYTE PTR [ebp+0x49da1e74],bh
  41337f:	and    al,0x1f
  413381:	ficom  DWORD PTR [ebx+0x633310]
  413387:	sub    eax,DWORD PTR [ebx-0x3baeb23e]
  41338d:	in     eax,0x11
  41338f:	add    al,0x3f
  413391:	arpl   WORD PTR [ecx],bp
  413393:	dec    esp
  413394:	xchg   ebx,eax
  413395:	test   BYTE PTR [edi+0x51],0x80
  413399:	push   ebp
  41339a:	int    0x83
  41339c:	repz mov dl,0x84
  41339f:	rcl    dl,0x5a
  4133a2:	pop    ebx
  4133a3:	mov    edi,DWORD PTR [edx+ebp*8]
  4133a6:	pop    esi
  4133a7:	pop    esi
  4133a8:	ins    BYTE PTR es:[edi],dx
  4133a9:	outs   dx,DWORD PTR ds:[esi]
  4133aa:	xor    eax,0x896697c2
  4133af:	xchg   BYTE PTR [esi-0x16000257],dl
  4133b5:	mov    ds:0x23bd,eax
	...
  4133ca:	inc    esi
  4133cb:	xchg   BYTE PTR [edi+0x3d3c385e],dh
  4133d1:	aaa    
  4133d2:	aam    0x90
  4133d4:	add    DWORD PTR [eax+0x7b996],edi
  4133da:	aad    0x33
  4133dc:	mov    ebp,0x49349223
  4133e1:	sar    BYTE PTR [edi-0x61bc7945],0xf9
  4133e8:	inc    eax
  4133e9:	mov    bl,BYTE PTR [edx+0x5d]
  4133ec:	or     BYTE PTR [ecx+0x5caa],al
  4133f2:	xchg   esi,eax
  4133f3:	ds inc ecx
  4133f5:	je     0x413388
  4133f7:	cmp    bh,BYTE PTR ds:0x1bb9a2b
  4133fd:	ret    
  4133fe:	or     eax,0x9a43dd40
  413403:	mov    ebx,0xa8028b01
  413408:	rol    DWORD PTR [ebx],0x96
  41340b:	mov    ebx,0xa80a8ab2
  413410:	rol    DWORD PTR [ebx],0x96
  413413:	mov    ebx,0xa8228aaf
  413418:	aad    0x3
  41341a:	xchg   esi,eax
  41341b:	mov    ebx,0x480d4fb4
  413420:	call   0x1fcce64
  413425:	push   edx
  413426:	(bad)  
  413427:	push   cs
  413428:	shl    BYTE PTR [ebx],0x7e
  41342b:	xchg   ebx,eax
  41342c:	mov    ah,0xf4
	...
  41343e:	add    BYTE PTR [eax],al
  413440:	sbb    ebp,ebp
  413442:	add    ebx,0xffffffc2
  413445:	mov    edi,0xcfd50001
  41344a:	inc    eax
  41344b:	retf   
  41344c:	shl    BYTE PTR [edx-0x4d],cl
  41344f:	inc    eax
  413450:	int    0x9e
  413452:	stos   DWORD PTR es:[edi],eax
  413453:	inc    eax
  413454:	fstp   QWORD PTR [esi-0x1c0d82c4]
  41345a:	jnp    0x413470
  41345c:	loope  0x41340b
  41345e:	out    0xb6,eax
  413460:	inc    ebx
  413461:	adc    eax,0x7399b972
  413466:	xchg   edx,eax
  413467:	add    eax,DWORD PTR [eax]
  413469:	repnz sti 
  41346b:	rcl    DWORD PTR [esi+0x62],0x70
  41346f:	adc    al,0xd6
  413471:	stos   BYTE PTR es:[edi],al
  413472:	jmp    0xa67c:0xf766e802
  413479:	loope  0x4134c3
  41347b:	or     edx,DWORD PTR [ecx-0x62028c0b]
  413481:	pop    ds
  413482:	test   al,0x3
  413484:	sbb    ebx,DWORD PTR [edx+0x5d6678e6]
  41348a:	jne    0x4134d1
  41348c:	sbb    DWORD PTR [esi],esp
  41348e:	add    al,0x3c
  413490:	aam    0xe1
  413492:	and    cl,ah
  413494:	in     eax,dx
  413495:	xchg   ebx,eax
  413496:	fdiv   DWORD PTR ds:0xff8ce1f3
  41349c:	xchg   esi,eax
  41349d:	aaa    
  41349e:	icebp  
  41349f:	jl     0x4134ea
  4134a1:	mov    ch,0x1f
  4134a3:	add    DWORD PTR [eax],0x0
	...
  4134b5:	add    ch,bl
  4134b7:	(bad)  
  4134b8:	aad    0x1e
  4134ba:	xchg   esp,eax
  4134bb:	(bad)  
  4134bd:	cmc    
  4134be:	adc    ch,BYTE PTR [ebx]
  4134c0:	call   0xf8302a4b
  4134c5:	adc    dh,BYTE PTR [eax]
  4134c7:	lods   eax,DWORD PTR ds:[esi]
  4134c8:	out    0x86,eax
  4134ca:	cmc    
  4134cb:	fdivrp st(7),st
  4134cd:	adc    ah,BYTE PTR [eax]
  4134cf:	lods   eax,DWORD PTR ds:[esi]
  4134d0:	out    0xd4,eax
  4134d2:	cmp    al,0x5d
  4134d4:	jne    0x41345b
  4134d6:	xor    eax,0x9228001c
  4134db:	fbstp  TBYTE PTR [ecx+edx*8]
  4134de:	sbb    BYTE PTR [edi-0x2507dbe4],ch
  4134e4:	inc    esp
  4134e5:	aam    0xad
  4134e7:	in     eax,0x44
  4134e9:	hlt    
  4134ea:	gs mov eax,0x75d96308
  4134f0:	lods   al,BYTE PTR ds:[esi]
  4134f1:	jno    0x4134c4
  4134f3:	dec    ebp
  4134f4:	nop
  4134f5:	sub    bl,BYTE PTR [ecx]
  4134f7:	test   al,0x1c
  4134f9:	cmc    
  4134fa:	jp     0x4134e4
  4134fc:	sbb    al,0xe9
  4134fe:	xchg   ebp,eax
  4134ff:	bound  ecx,QWORD PTR ds:0x4f01139f
  413505:	test   al,0x95
  413507:	fbstp  TBYTE PTR [ecx+esi*8]
  41350a:	adc    BYTE PTR [edi-0x255c33c8],ch
  413510:	inc    esp
  413511:	cld    
  413512:	pop    ebp
  413513:	in     eax,0x44
  413515:	fadd   QWORD PTR ds:0x6308b9
	...
  41352b:	add    BYTE PTR [ecx+0x77],dl
  41352e:	lods   al,BYTE PTR ds:[esi]
  41352f:	popa   
  413530:	pop    ecx
  413531:	dec    edi
  413532:	nop
  413533:	stos   BYTE PTR es:[edi],al
  413534:	adc    BYTE PTR [ecx+0x72c29d38],ch
  41353a:	(bad)  
  41353c:	iret   
  41353d:	loopne 0x4134f3
  41353f:	lahf   
  413540:	pop    edx
  413541:	lods   al,BYTE PTR ds:[esi]
  413542:	jge    0x4134c9
  413544:	mov    ss,edx
  413546:	add    BYTE PTR [ebp-0x69],dh
  413549:	xlat   BYTE PTR ds:[ebx]
  41354a:	add    al,0x54
  41354c:	dec    ecx
  41354d:	push   ds
  41354e:	aas    
  41354f:	jmp    0xf9cd1596
  413554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413555:	lods   al,BYTE PTR ds:[esi]
  413556:	std    
  413557:	out    dx,al
  413558:	iret   
  413559:	loopne 0x413527
  41355b:	daa    
  41355c:	push   ebp
  41355d:	lods   al,BYTE PTR ds:[esi]
  41355e:	jge    0x4135ad
  413560:	cdq    
  413561:	rol    BYTE PTR [eax],cl
  413563:	add    BYTE PTR [ebx+0x60],bl
  413566:	mov    DWORD PTR [edx+esi*2],eax
  413569:	bound  ecx,QWORD PTR [esi+0x41]
  41356c:	jmp    FWORD PTR [eax+0x52dfbd81]
  413572:	(bad)  
  413573:	jmp    FWORD PTR [ebp+eiz*8+0x249318fa]
  41357a:	aas    
  41357b:	add    DWORD PTR ds:0xc58c0eb7,0x52
  413582:	(bad)  
  413583:	jmp    DWORD PTR [edx-0x1d]
  413586:	or     eax,0x4d5150ff
  41358b:	call   0x419546
	...
  4135a0:	add    BYTE PTR [eax],al
  4135a2:	nop
  4135a3:	lock pop edx
  4135a5:	mov    DWORD PTR [ebx-0x5],esp
  4135a8:	mov    edi,0x88f4bf08
  4135ad:	in     eax,0x3e
  4135af:	cmp    BYTE PTR [ebp+0x0],0xaf
  4135b3:	pop    edi
  4135b4:	push   ecx
  4135b5:	push   esi
  4135b6:	clc    
  4135b7:	cs inc esp
  4135b9:	or     BYTE PTR [edx],al
  4135bb:	hlt    
  4135bc:	jge    0x413577
  4135be:	outs   dx,DWORD PTR ds:[esi]
  4135bf:	pop    edi
  4135c0:	add    BYTE PTR [eax],al
  4135c2:	mul    BYTE PTR ds:0x2e6bc082
  4135c8:	xor    al,BYTE PTR [ecx-0x3ff9967]
  4135ce:	jg     0x4135f0
  4135d0:	jecxz  0x4135d8
  4135d2:	hlt    
  4135d3:	popf   
  4135d4:	and    bh,0xaf
  4135d7:	popa   
  4135d8:	add    BYTE PTR [eax],al
  4135da:	jle    0x413655
  4135dc:	pop    es
  4135dd:	or     DWORD PTR [ecx+0x2e],eax
  4135e0:	xor    eax,0x669881
  4135e5:	cld    
  4135e6:	das    
  4135e7:	and    dh,ch
  4135e9:	or     ah,BYTE PTR [esi]
  4135eb:	push   ecx
  4135ec:	mov    BYTE PTR [edx],dh
  4135ee:	xchg   esi,eax
  4135ef:	inc    edx
  4135f0:	aaa    
  4135f1:	adc    BYTE PTR [ebp+eax*8+0x7c],0x37
  4135f6:	pop    ss
  4135f7:	pushf  
  4135f8:	inc    ecx
  4135f9:	push   cs
  4135fa:	xchg   esi,eax
  4135fb:	mov    ecx,0xc090ee42
  413600:	iret   
  413601:	mov    al,al
  413603:	inc    eax
  413604:	aam    0x80
	...
  413616:	add    BYTE PTR [eax],al
  413618:	lock mov eax,0xfa960211
  41361e:	daa    
  41361f:	or     ebx,DWORD PTR ds:0xa1e284b0
  413625:	cli    
  413626:	and    al,0xf
  413628:	pop    DWORD PTR [ebx]
  41362a:	jge    0x413643
  41362c:	pop    ss
  41362d:	fadd   DWORD PTR [ecx]
  41362f:	lock xchg ebp,eax
  413631:	mov    ecx,0xc29aea42
  413636:	das    
  413637:	mov    BYTE PTR [edx+esi*1-0x3b2b7dcc],al
  41363e:	jl     0x41366f
  413640:	adc    eax,0x650ad01b
  413645:	inc    edx
  413646:	aam    0x48
  413648:	adc    eax,0x5f850579
  41364d:	out    dx,eax
  41364e:	xchg   DWORD PTR [ebx+edx*8-0x46184ec5],ecx
  413655:	mov    ebx,0xa1d90001
  41365a:	lods   al,BYTE PTR ds:[esi]
  41365b:	mov    BYTE PTR [edx-0x69fcbc19],al
  413661:	inc    esp
  413662:	lds    esp,FWORD PTR [ebx]
  413664:	call   0x7cbb:0xd74ba515
  41366b:	or     DWORD PTR [edi],ebx
  41366d:	mov    ah,0x84
  41366f:	rcl    DWORD PTR [edx+0x1703413c],0xb6
  413676:	es dec ebx
  413678:	xlat   BYTE PTR ds:[ebx]
  413679:	(bad)  
  41367a:	out    0x91,eax
	...
  41368c:	add    BYTE PTR [eax],al
  41368e:	inc    ebx
  41368f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413690:	jecxz  0x413695
  413692:	sbb    eax,0xdc080b1f
  413697:	ds sbb eax,ebp
  41369a:	sbb    ebp,ebx
  41369c:	out    dx,eax
  41369d:	jl     0x41363e
  41369f:	in     eax,0xa7
  4136a1:	or     BYTE PTR ds:0xff84eba5,dl
  4136a7:	mov    esi,0x33f9c51b
  4136ac:	xchg   ebp,eax
  4136ad:	inc    edx
  4136ae:	xchg   ebp,eax
  4136af:	bound  esi,QWORD PTR [edi*2-0x4cc8ed0e]
  4136b6:	or     al,0x20
  4136b8:	fistp  QWORD PTR [edx+0x3a]
  4136bb:	push   esi
  4136bc:	je     0x413677
  4136be:	leave  
  4136bf:	adc    al,0x17
  4136c1:	sbb    al,0xa8
  4136c3:	(bad)  
  4136c4:	out    0x3,eax
  4136c6:	cs ds sbb eax,ebp
  4136ca:	mov    ecx,0x610bacd6
  4136cf:	mov    edx,0x62960430
  4136d4:	mov    edx,0xb7aa5a80
  4136d9:	sbb    ebp,DWORD PTR [ecx]
  4136db:	(bad)  
  4136dc:	out    0x3,eax
  4136de:	in     eax,dx
  4136df:	fisttp DWORD PTR [ebx-0x4f]
  4136e2:	push   edi
  4136e3:	pop    edx
  4136e4:	out    0xb2,eax
  4136e6:	or     al,0x1e
  4136e8:	add    edi,esp
  4136ea:	or     al,0xe
  4136ec:	retf   
  4136ed:	call   FWORD PTR [esi]
  4136ef:	mov    ds:0xfea7,eax
	...
  413704:	and    ebx,DWORD PTR [ebx+0x28]
  413707:	and    eax,0x7ce1db89
  41370c:	push   esi
  41370d:	and    dh,dh
  41370f:	push   ebp
  413710:	sahf   
  413711:	mov    ds:0x5c9cf408,eax
  413716:	add    BYTE PTR [eax+0x3c],ah
  413719:	fidivr DWORD PTR [edi+0x7ef38a9]
  41371f:	test   al,0x7a
  413721:	popa   
  413722:	or     ebx,esi
  413724:	stos   BYTE PTR es:[edi],al
  413725:	pop    ebx
  413726:	xchg   DWORD PTR [eax+0x6004a314],edi
  41372c:	aam    0x69
  41372e:	or     eax,0x1759fc7f
  413733:	jo     0x413787
  413735:	imul   ecx,DWORD PTR ds:0xdfa2027f,0x875b7ad1
  41373f:	test   al,0xd5
  413741:	push   edi
  413742:	mov    dh,0xf0
  413744:	push   edx
  413745:	ret    0xe210
  413748:	(bad)  
  41374a:	or     ah,BYTE PTR [eax+0x52]
  41374d:	imul   ecx,DWORD PTR ds:0xdfa1d23f,0xd5accf1
  413757:	aas    
  413758:	xchg   ebp,eax
  413759:	pop    ebx
  41375a:	mov    edi,0xc20bbf60
  41375f:	icebp  
  413760:	xchg   ebp,eax
  413761:	adc    eax,0x60b1b589
  413766:	mov    DWORD PTR [ebp+0x0],esp
	...
  413778:	add    BYTE PTR [eax],al
  41377a:	mov    ecx,0x52eb895c
  41377f:	rcr    DWORD PTR [eax],0x71
  413782:	call   0x10bf:0xd2eb8921
  413789:	popa   
  41378a:	call   0x8bf:0xd2eb8921
  413791:	jno    0x41372d
  413793:	and    DWORD PTR [edi-0x2f24adce],eax
  413799:	push   0xffffffd7
  41379b:	arpl   WORD PTR [ecx-0x769b2217],cx
  4137a1:	add    BYTE PTR ds:0xc718e51f,bh
  4137a7:	pop    esi
  4137a8:	aas    
  4137a9:	mov    ebp,DWORD PTR ds:0xb710e51f
  4137af:	pop    esi
  4137b0:	aas    
  4137b1:	mov    edi,DWORD PTR ds:0xa708e525
  4137b7:	arpl   WORD PTR [edi],di
  4137b9:	mov    ebx,DWORD PTR ds:0x2e88cd2c
  4137bf:	sti    
  4137c0:	mov    edi,0x88f0ff08
  4137c5:	in     eax,0x7c
  4137c7:	or     BYTE PTR [ecx],0x53
  4137ca:	mov    eax,ds:0xdb458aed
  4137cf:	sub    dl,BYTE PTR [eax+ecx*1+0x64]
  4137d3:	mov    ah,0x8a
  4137d5:	dec    ebp
  4137d6:	out    0x2a,eax
  4137d8:	dec    eax
  4137d9:	add    al,0x76
  4137db:	jno    0x41379d
  4137dd:	jmp    0x4137df
	...
  4137ef:	add    bl,dh
  4137f1:	xchg   esp,eax
  4137f2:	retf   0x1c81
  4137f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f6:	push   cs
  4137f7:	(bad)  
  4137f9:	xchg   esp,eax
  4137fa:	fmul   DWORD PTR [ecx+0x4e32429]
  413800:	(bad)  
  413801:	push   ecx
  413802:	mov    dh,dl
  413804:	jle    0x41384e
  413806:	or     eax,0xf22b7931
  41380b:	or     DWORD PTR [ebp+edx*2-0x2],0xd894af00
  413813:	mov    DWORD PTR [ecx-0x71ef1cdd],edi
  413819:	push   ecx
  41381a:	mov    dh,cl
  41381c:	scas   al,BYTE PTR es:[edi]
  41381d:	dec    eax
  41381e:	push   DWORD PTR [eax]
  413820:	mov    eax,ds:0x9c81f22b
  413825:	xchg   ecx,eax
  413826:	xor    dh,BYTE PTR [ebx]
  413828:	dec    esp
  413829:	xchg   esp,eax
  41382a:	xlat   BYTE PTR ds:[ebx]
  41382b:	mov    DWORD PTR [esi-0x6b1abe91],edx
  413831:	mov    dl,BYTE PTR [edx]
  413833:	mov    BYTE PTR [eax+0x7a],ah
  413836:	push   ds
  413837:	pop    es
  413838:	xchg   DWORD PTR [edi+0x79],ecx
  41383b:	repnz pop ss
  41383d:	pop    esp
  41383e:	or     edi,edi
  413840:	cmp    BYTE PTR [ecx-0x60e0262e],bh
  413846:	inc    edx
  413847:	in     eax,0x9e
  413849:	dec    edx
  41384a:	mov    BYTE PTR ds:[ebx+0xdf6028d],ch
  413851:	push   ss
  413852:	adc    al,al
	...
  413864:	add    BYTE PTR [eax],al
  413866:	add    eax,eax
  413868:	and    dh,0x97
  41386b:	xor    dl,BYTE PTR [edx]
  41386d:	or     bh,bh
  41386f:	inc    ecx
  413870:	xor    esi,DWORD PTR [eax]
  413872:	enter  0x1041,0x80
  413876:	cmc    
  413877:	adc    dl,BYTE PTR [edi-0x57]
  41387a:	cmp    al,0x8a
  41387c:	daa    
  41387d:	xor    BYTE PTR [edi+0xf11d53d],bh
  413883:	lock inc edx
  413885:	out    dx,al
  413886:	mov    cl,0x3c
  413888:	and    al,0x0
  41388a:	pop    ds
  41388b:	sub    edi,edx
  41388d:	stc    
  41388e:	fnstenv [ebp+0xc]
  413891:	pop    es
  413892:	xchg   esi,eax
  413893:	mov    ecx,0x79e08901
  413898:	and    ebx,DWORD PTR [ebx]
  41389a:	pop    ds
  41389b:	js     0x4138df
  41389d:	out    dx,al
  41389e:	call   0x4341:0x9d081042
  4138a5:	adc    BYTE PTR [esi-0x48],0xd0
  4138a9:	sbb    eax,0xe580461f
  4138ae:	rol    DWORD PTR [eax-0x2b],0xb4
  4138b2:	jb     0x413884
  4138b4:	ret    0x1eff
  4138b7:	arpl   WORD PTR [esi+0x42],ax
  4138ba:	js     0x413919
  4138bc:	push   0xe7635d24
  4138c1:	add    ecx,DWORD PTR [ebp-0x294efc13]
  4138c7:	bound  esi,QWORD PTR [eax+0x2c]
	...
  4138da:	add    BYTE PTR [eax],al
  4138dc:	push   esi
  4138dd:	mov    dh,0xed
  4138df:	cmp    BYTE PTR [eax],0xa7
  4138e2:	out    0x3,eax
  4138e4:	xchg   esi,eax
  4138e5:	pop    ecx
  4138e6:	ss daa 
  4138e8:	loope  0x41390d
  4138ea:	out    0x7c,eax
  4138ec:	dec    eax
  4138ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ee:	into   
  4138ef:	repnz push ss
  4138f1:	mov    esi,0x629604d3
  4138f6:	loop   0x41394a
  4138f8:	cmc    
  4138f9:	adc    al,0x28
  4138fb:	add    al,0x1f
  4138fd:	xor    BYTE PTR [ebx-0x581e2483],dh
  413903:	add    BYTE PTR [edi],cl
  413905:	call   0x226a:0x851ee9fa
  41390c:	test   al,0xd9
  41390e:	rcl    DWORD PTR [eax-0xb],cl
  413911:	movaps xmm0,XMMWORD PTR [ecx*4-0xf826cd1]
  413919:	mov    ds:0xbe170296,eax
  41391e:	jnp    0x413924
  413920:	xchg   esi,eax
  413921:	(bad)  
  413923:	push   edx
  413924:	mov    ch,0x11
  413926:	sub    BYTE PTR [edi+ebx*1],al
  413929:	xchg   BYTE PTR [eax],ch
  41392b:	sbb    ebx,DWORD PTR [ebx-0x5ef7b91d]
  413931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413932:	out    0xfe,eax
  413934:	loopne 0x4138f4
  413936:	mov    eax,0x26da91c4
  41393b:	inc    ebp
  41393c:	js     0x41398a
  41393e:	push   0x23
	...
  41394f:	add    BYTE PTR [eax],al
  413951:	add    BYTE PTR [ebp+0x62],bh
  413954:	add    cl,ch
  413956:	xchg   ebp,eax
  413957:	pop    ecx
  413958:	mov    ch,0x45
  41395a:	sub    eax,0x83d80022
  41395f:	fcmovbe st,st(6)
  413961:	sub    BYTE PTR [ecx+ecx*2-0x4b2cc179],dh
  413968:	add    al,0x60
  41396a:	test   eax,0xd470f95a
  41396f:	loopne 0x413931
  413971:	in     eax,0x68
  413973:	inc    edi
  413974:	xchg   DWORD PTR [edi],edx
  413976:	adc    DWORD PTR [edi-0x11b99dc3],edi
  41397c:	in     al,0x3d
  41397e:	push   ebx
  41397f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413980:	mov    BYTE PTR [esi+0x6806b4da],bh
  413986:	je     0x413931
  413988:	add    cl,ch
  41398a:	xchg   ebp,eax
  41398b:	pop    ecx
  41398c:	mov    ch,0xcd
  41398e:	inc    ebx
  41398f:	and    al,BYTE PTR [eax]
  413991:	jo     0x41393f
  413993:	mov    ds:0xbc12e7ed,al
  413998:	cld    
  413999:	jmp    0x5e4a9c33
  41399e:	mov    DWORD PTR ds:0x8462e93f,edx
  4139a4:	mov    edi,0xe5e1e786
  4139a9:	lea    edx,[ebp+0x64f20062]
  4139af:	ror    DWORD PTR [esi+0x28],0x9a
  4139b3:	(bad)  [ebx+0x7d]
	...
  4139c6:	add    BYTE PTR [eax],al
  4139c8:	cmp    bl,BYTE PTR [edi-0x264e567f]
  4139ce:	rcr    DWORD PTR [edx],1
  4139d0:	mov    esp,0x776aded9
  4139d5:	mov    DWORD PTR fs:0xa853c147,ebx
  4139dc:	xchg   ebp,eax
  4139dd:	push   edi
  4139de:	jae    0x4139e0
  4139e0:	retf   
  4139e1:	es faddp st(1),st
  4139e4:	shl    BYTE PTR [ecx+0x7f],1
  4139e7:	out    0xc3,eax
  4139e9:	pop    edi
  4139ea:	add    BYTE PTR [eax],al
  4139ec:	je     0x4139ff
  4139ee:	loope  0x413a43
  4139f0:	ds pusha 
  4139f2:	xchg   edi,ebx
  4139f4:	scas   al,BYTE PTR es:[edi]
  4139f5:	dec    eax
  4139f6:	or     eax,DWORD PTR [ecx-0x2a478]
  4139fc:	aas    
  4139fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139fe:	mov    dh,0xe4
  413a00:	cs lahf 
  413a02:	std    
  413a03:	mov    BYTE PTR [eax-0x51e911e2],ah
  413a09:	cmp    cl,0x0
  413a0c:	aas    
  413a0d:	pusha  
  413a0e:	or     DWORD PTR [edi+0x40ea5b],esi
  413a14:	jle    0x413a65
  413a16:	dec    BYTE PTR [ebp+0x47]
  413a19:	fidivr WORD PTR [eax+edi*8-0x1]
  413a1d:	stos   BYTE PTR es:[edi],al
  413a1e:	test   BYTE PTR [ebx-0x7601a62f],ch
  413a24:	inc    edi
  413a25:	and    ch,bl
  413a27:	pop    ds
  413a28:	jbe    0x413a92
  413a2a:	shr    dh,1
	...
  413a3c:	add    BYTE PTR [eax],al
  413a3e:	jbe    0x413a5f
  413a40:	or     cl,dh
  413a42:	data16 outs dx,BYTE PTR ds:[esi]
  413a44:	xor    al,cl
  413a46:	sbb    ax,0xe380
  413a4a:	push   ebp
  413a4b:	add    al,0xa7
  413a4d:	stos   BYTE PTR es:[edi],al
  413a4e:	out    dx,al
  413a4f:	jne    0x413a81
  413a51:	fld    DWORD PTR [esi+0x6e]
  413a54:	shl    al,0xe0
  413a57:	sub    bl,dl
  413a59:	rcl    DWORD PTR [ecx],1
  413a5b:	sub    BYTE PTR [edi-0x32d8d2f7],bh
  413a61:	rol    DWORD PTR [edi-0x5a],0x30
  413a65:	enter  0x1d26,0x80
  413a69:	jecxz  0x413a01
  413a6b:	or     al,0x4
  413a6d:	call   DWORD PTR [esi+0x6e88294a]
  413a73:	jp     0x413a99
  413a75:	pop    es
  413a76:	(bad)  
  413a77:	ja     0x413af2
  413a79:	iret   
  413a7a:	push   edi
  413a7b:	and    DWORD PTR [esi],eax
  413a7d:	xor    DWORD PTR [esi+0x42],ebx
  413a80:	inc    ebx
  413a81:	xor    BYTE PTR [ebp-0x78],0xd4
  413a85:	xor    ah,BYTE PTR [ebp+0x3e882a8a]
  413a8b:	jp     0x413ab1
  413a8d:	add    DWORD PTR [edi+0x57c77977],eax
  413a93:	push   ecx
  413a94:	hlt    
  413a95:	xor    BYTE PTR [esi+0x32],ah
  413a98:	inc    ebx
  413a99:	xor    BYTE PTR ds:0x31ff08ac,0xea
  413aa0:	sub    ecx,DWORD PTR [eax+0x0]
	...
  413ab2:	add    BYTE PTR [eax],al
  413ab4:	dec    esi
  413ab5:	cli    
  413ab6:	and    DWORD PTR [edi],ecx
  413ab8:	addr16 cli 
  413aba:	jp     0x413a83
  413abc:	push   edi
  413abd:	mov    eax,ds:0x41e630fd
  413ac2:	inc    esp
  413ac3:	xor    ch,0xab
  413ac6:	clc    
  413ac7:	push   cs
  413ac8:	xchg   ecx,eax
  413ac9:	stos   BYTE PTR es:[edi],al
  413aca:	sub    ecx,DWORD PTR [edx-0x1dbd3ead]
  413ad0:	call   0xbe38:0x8e883caa
  413ad7:	pop    es
  413ad8:	call   0xa8a9:0xf07be30
  413adf:	pop    ebp
  413ae0:	ins    DWORD PTR es:[edi],dx
  413ae1:	inc    edx
  413ae2:	adc    eax,0x1b0d45c
  413ae7:	push   ebx
  413ae8:	push   0x8a23a530
  413aed:	push   ebx
  413aee:	jnp    0x413b63
  413af0:	jp     0x413a7b
  413af2:	lahf   
  413af3:	test   BYTE PTR [eax-0x3990099f],ah
  413af9:	push   edx
  413afa:	xchg   ebp,eax
  413afb:	inc    edx
  413afc:	mov    bl,ch
  413afe:	daa    
  413aff:	mov    bl,0x22
  413b01:	fbstp  TBYTE PTR es:[ebx+0x8413871]
  413b08:	or     BYTE PTR [ebx],0x43
  413b0b:	mov    bh,0xd6
  413b0d:	bound  edi,QWORD PTR [edi]
  413b0f:	cld    
  413b10:	ins    DWORD PTR es:[edi],dx
  413b11:	mov    ds:0x9920f82e,al
  413b16:	mov    ebp,0xb4
	...
  413b27:	add    BYTE PTR [eax],al
  413b29:	add    BYTE PTR [ecx+0x24],bh
  413b2c:	and    DWORD PTR [eax],ecx
  413b2e:	pop    eax
  413b2f:	or     ecx,DWORD PTR [ebx-0x9d294a]
  413b35:	cmovl  esp,DWORD PTR [edx-0x5b2356fa]
  413b3c:	out    dx,eax
  413b3d:	add    esp,ebx
  413b3f:	jmp    0x413b4d
  413b41:	mov    bl,0xe1
  413b43:	xor    eax,0xed91be62
  413b48:	inc    esp
  413b49:	clc    
  413b4a:	adc    bh,BYTE PTR [eax]
  413b4c:	fbstp  TBYTE PTR [edx+0x8248ac9]
  413b52:	adc    BYTE PTR [edx+0x235da03f],ah
  413b58:	out    0x78,eax
  413b5a:	pop    edx
  413b5b:	call   0x7b6:0x9f001c17
  413b62:	jns    0x413aea
  413b64:	sbb    eax,ebp
  413b66:	jmp    0x514d6859
  413b6b:	mov    dl,BYTE PTR [eax-0x5e27f8]
  413b71:	lahf   
  413b72:	bound  esp,QWORD PTR [ebx]
  413b74:	out    0x78,eax
  413b76:	push   edx
  413b77:	call   0x77e:0x9edc1c17
  413b7e:	fs out dx,eax
  413b80:	add    BYTE PTR [edx+eiz*4],ch
  413b83:	xor    eax,ebp
  413b85:	imul   ebx,DWORD PTR [esi+0x22c2fda0],0xffffff8d
  413b8c:	pop    ebx
  413b8d:	sub    eax,DWORD PTR [eax]
	...
  413b9f:	add    BYTE PTR [edx-0x489fab5f],bl
  413ba5:	in     al,0xec
  413ba7:	stc    
  413ba8:	inc    esp
  413ba9:	aaa    
  413baa:	mov    DWORD PTR [ebp+edi*2-0x1128c14],esp
  413bb1:	es clc 
  413bb3:	cdq    
  413bb4:	and    al,0x89
  413bb6:	cli    
  413bb7:	xor    dl,BYTE PTR [ecx-0x7a537460]
  413bbd:	xor    DWORD PTR [ecx-0x17cba5d6],eax
  413bc3:	add    al,0x9d
  413bc5:	mov    al,ds:0x2d2981fd
  413bca:	aas    
  413bcb:	jmp    0x9a39628e
  413bd0:	popf   
  413bd1:	clc    
  413bd2:	cld    
  413bd3:	neg    BYTE PTR [eax+0x529d6409]
  413bd9:	mov    eax,ds:0x318a2c8c
  413bde:	call   0xfde1cd53
  413be3:	bound  edi,QWORD PTR [esi]
  413be5:	popf   
  413be6:	mov    DWORD PTR [edx+eiz*4],esp
  413be9:	jmp    0x51f0:0x3e82c543
  413bf0:	mov    dh,0x2d
  413bf2:	aas    
  413bf3:	jmp    0x1a396266
  413bf8:	mov    dl,BYTE PTR [eax]
  413bfa:	cld    
  413bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfc:	cwde   
  413bfd:	or     esp,esp
  413bff:	sub    eax,0x2c8ca0d3
	...
  413c14:	add    BYTE PTR [eax],al
  413c16:	stos   BYTE PTR es:[edi],al
  413c17:	xor    eax,ebp
  413c19:	or     BYTE PTR [esi+0x4400fda0],bl
  413c1f:	retf   0x8bf9
  413c22:	jb     0x413c9a
  413c24:	mov    BYTE PTR [ebp+0x2b],al
  413c27:	push   ds
  413c28:	pop    esp
  413c29:	lock xchg edi,eax
  413c2b:	ret    0x414c
  413c2e:	scas   eax,DWORD PTR es:[edi]
  413c2f:	sbb    DWORD PTR [eax+edi*8-0x21],eax
  413c33:	jl     0x413c7b
  413c35:	cld    
  413c36:	call   0x2aa5a1a3
  413c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c3c:	std    
  413c3d:	mov    WORD PTR [edx],?
  413c3f:	je     0x413c8e
  413c41:	call   0x3fa6dc
  413c46:	adc    DWORD PTR [ebx],ebx
  413c48:	inc    esp
  413c49:	clc    
  413c4a:	(bad)  
  413c4c:	(bad)  
  413c4e:	mov    eax,0x67c68268
  413c53:	into   
  413c54:	mov    WORD PTR [ebp-0x51],es
  413c57:	shl    ebp,cl
  413c59:	shl    DWORD PTR [eax+ebp*2+0x1ef45efe],cl
  413c60:	jmp    0xfddca9c2
  413c65:	push   esp
  413c66:	mov    dh,0x42
  413c68:	sub    ah,0xcb
  413c6b:	data16 add BYTE PTR [eax],al
  413c6e:	pop    esp
  413c6f:	rcl    BYTE PTR [esi-0x75],1
  413c72:	pop    edx
  413c73:	sahf   
  413c74:	mov    dh,BYTE PTR [ebp-0x5]
  413c77:	sbb    BYTE PTR [eax+eax*4+0x0],al
	...
  413c8a:	add    BYTE PTR [eax],al
  413c8c:	fldenv [ebp-0x2]
  413c8f:	push   eax
  413c90:	out    0x27,eax
  413c92:	add    BYTE PTR [eax],al
  413c94:	out    dx,eax
  413c95:	stc    
  413c96:	std    
  413c97:	jcxz   0x413c71
  413c9a:	inc    eax
  413c9b:	add    bh,dl
  413c9d:	adc    edi,ebx
  413c9f:	(bad)  
  413ca0:	cmp    BYTE PTR [edi+ecx*8+0x4c426d8a],dh
  413ca7:	inc    ecx
  413ca8:	xchg   esi,eax
  413ca9:	mov    DWORD PTR [ecx+0x3],edi
  413cac:	test   BYTE PTR [ebx+0x7f],cl
  413caf:	stc    
  413cb0:	mov    fs,WORD PTR [ebp+0x11]
  413cb3:	(bad)  
  413cb4:	adc    esp,DWORD PTR [edx+0x6]
  413cb7:	(bad)  
  413cb8:	mov    cl,0x8a
  413cba:	add    DWORD PTR [eax],eax
  413cbc:	xchg   esi,eax
  413cbd:	in     al,0xb0
  413cbf:	mov    BYTE PTR [esi-0x678c82ee],ah
  413cc5:	inc    eax
  413cc6:	add    esi,DWORD PTR [eax]
  413cc8:	fs and al,0xd4
  413ccb:	mov    dl,BYTE PTR [ebx]
  413ccd:	mov    ch,0x3
  413ccf:	inc    BYTE PTR [ecx+0x787b7d12]
  413cd5:	pusha  
  413cd6:	add    edi,esi
  413cd8:	sbb    ebx,ebp
  413cda:	add    edi,esi
  413cdc:	imul   eax,DWORD PTR [esi*2+0x348607b],0x808c180e
  413ce7:	(bad)  
  413ce9:	add    al,0x45
  413ceb:	jnp    0x413d35
  413ced:	jo     0x413cf2
  413cef:	push   cs
	...
  413d00:	add    BYTE PTR [eax],al
  413d02:	or     BYTE PTR [eax-0x75f1082e],ch
  413d08:	cmp    eax,DWORD PTR [edx]
  413d0a:	xchg   esi,eax
  413d0b:	int3   
  413d0c:	mov    edi,0x86812c82
  413d11:	add    al,0x16
  413d13:	inc    esp
  413d14:	add    al,0x75
  413d16:	push   eax
  413d17:	push   edi
  413d18:	scas   al,BYTE PTR es:[edi]
  413d19:	out    0x7d,eax
  413d1b:	mov    bh,0x4
  413d1d:	(bad)  
  413d1e:	adc    eax,0x1fd89e6
  413d23:	test   al,0x1
  413d25:	cmp    BYTE PTR [ebp+0x15a68e89],0x16
  413d2c:	mov    ebp,edi
  413d2e:	jmp    0xb63f02
  413d33:	bound  esi,QWORD PTR [esi+edi*2+0x59]
  413d37:	mov    al,ds:0x8a61049e
  413d3c:	push   cs
  413d3d:	add    edx,DWORD PTR [esi+0x5ca62e62]
  413d43:	jmp    0x6a18e3db
  413d48:	out    0xae,eax
  413d4a:	push   ds
  413d4b:	test   DWORD PTR [eax+0x17],ebp
  413d4e:	sbb    eax,0x4503e761
  413d53:	cmp    BYTE PTR [esi+0x726a3a78],bh
  413d59:	mov    ds,WORD PTR [ebp-0x747c9311]
  413d5f:	sahf   
  413d60:	dec    esi
  413d61:	mov    bl,0x79
  413d63:	sahf   
  413d64:	out    0x3,eax
	...
  413d76:	add    BYTE PTR [eax],al
  413d78:	xchg   esi,eax
  413d79:	or     bh,ah
  413d7b:	fwait
  413d7c:	jne    0x413dae
  413d7e:	test   al,0x3
  413d80:	jle    0x413d34
  413d82:	sub    al,0x4
  413d84:	pusha  
  413d85:	push   esp
  413d86:	cmp    DWORD PTR [ecx+0x17],edi
  413d89:	xchg   DWORD PTR [edx+eax*8-0x2e1419af],ebp
  413d90:	xlat   BYTE PTR ds:[ebx]
  413d91:	loope  0x413da4
  413d93:	repz mov ebp,0xc17e2e93
  413d99:	pushf  
  413d9a:	inc    BYTE PTR [ebx]
  413d9c:	xchg   esi,eax
  413d9d:	(bad)  
  413d9e:	out    0x3,eax
  413da0:	cmp    eax,0xe136037
  413da5:	call   0x9e594005
  413daa:	sbb    dh,dl
  413dac:	call   DWORD PTR [edx+0x62]
  413daf:	mov    DWORD PTR [edx+0xe03ce9c],eax
  413db5:	call   0x9e393ffd
  413dba:	mov    esi,0x9c6a89
  413dbf:	mov    dh,0x95
  413dc1:	call   0x9cd56b51
  413dc6:	std    
  413dc7:	not    bh
  413dc9:	arpl   WORD PTR [ecx-0x4413ea77],ax
  413dcf:	adc    eax,0xdefd9c94
  413dd4:	call   FWORD PTR [edi+0x2f]
  413dd7:	or     DWORD PTR [edx],0xeac39e
	...
  413ded:	add    BYTE PTR [ebp-0x5795bddd],dl
  413df3:	jb     0x413e70
  413df5:	in     al,0x15
  413df7:	pop    esp
  413df8:	add    ah,bl
  413dfa:	iret   
  413dfb:	xor    al,0x56
  413dfd:	push   ecx
  413dfe:	xchg   esp,eax
  413dff:	sahf   
  413e00:	std    
  413e01:	push   esi
  413e02:	adc    ecx,eax
  413e04:	js     0x413e55
  413e06:	xchg   ebp,eax
  413e07:	pushf  
  413e08:	add    BYTE PTR [ecx-0x47],ch
  413e0b:	bound  esi,QWORD PTR [ebx-0x7a]
  413e0e:	sbb    ecx,ebx
  413e10:	js     0x413e49
  413e12:	xchg   ebp,eax
  413e13:	pushf  
  413e14:	add    BYTE PTR [edi+esi*1-0x6b967c17],dh
  413e1b:	pushf  
  413e1c:	std    
  413e1d:	mov    ecx,0xe900c53d
  413e22:	xchg   ebp,eax
  413e23:	aas    
  413e24:	pop    esi
  413e25:	mov    dl,0x12
  413e27:	mov    ds,WORD PTR [ebx+0x2b]
  413e2a:	mov    ah,BYTE PTR [edx+0x51]
  413e2d:	xchg   edi,eax
  413e2e:	int3   
  413e2f:	jmp    0x413e75
  413e31:	int    0x85
  413e33:	add    al,0x89
  413e35:	lea    edi,[ecx+0x76]
  413e38:	data16 ins BYTE PTR es:[edi],dx
  413e3a:	cmp    BYTE PTR [ecx],dl
  413e3c:	or     DWORD PTR [eax-0x21],esi
  413e3f:	call   0xd8c137bc
  413e44:	(bad)  
  413e45:	call   0xcca83a
  413e4a:	mov    edi,0x59c78576
  413e4f:	push   edi
  413e50:	ror    BYTE PTR [edi],cl
	...
  413e62:	add    BYTE PTR [eax],al
  413e64:	push   0x2f8352b7
  413e69:	imul   edx,DWORD PTR [eax-0x18],0xfffb986b
  413e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e71:	mov    cl,BYTE PTR [ecx+eax*2-0x41]
  413e75:	mov    BYTE PTR [edx],bh
  413e77:	stc    
  413e78:	adc    BYTE PTR [eax+0xe],ah
  413e7b:	mov    bh,0xf4
  413e7d:	xor    edx,DWORD PTR [ebx-0x18]
  413e80:	scas   eax,DWORD PTR es:[edi]
  413e81:	xchg   edi,eax
  413e82:	sti    
  413e83:	call   DWORD PTR [edi-0x50beb6f6]
  413e89:	mov    BYTE PTR [esi],ah
  413e8b:	stc    
  413e8c:	xor    BYTE PTR [eax+0xe],ah
  413e8f:	mov    bh,0xd4
  413e91:	xor    al,0x56
  413e93:	call   0x3cd7db
  413e98:	xor    BYTE PTR [edx],al
  413e9a:	push   edi
  413e9b:	ret    0x6087
  413e9e:	dec    edi
  413e9f:	mov    edx,DWORD PTR [ebx]
  413ea1:	inc    esp
  413ea2:	or     BYTE PTR [ebx-0x29],dl
  413ea5:	ins    BYTE PTR es:[edi],dx
  413ea6:	cmc    
  413ea7:	push   DWORD PTR [eax+0x6f80bfe6]
  413ead:	pusha  
  413eae:	add    BYTE PTR [eax+0x3d2b9b],bh
  413eb4:	mov    ah,0x6f
  413eb6:	test   DWORD PTR [ebx],edx
  413eb8:	lods   al,BYTE PTR ds:[esi]
  413eb9:	lahf   
  413eba:	add    al,0x83
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	arpl   WORD PTR [ecx],di
  413ebf:	add    ah,BYTE PTR fs:[edi]
  413ec2:	add    BYTE PTR [edx-0x70],dh
  413ec5:	xlat   BYTE PTR ds:[ebx]
  413ec6:	fs dec ebp
	...
  413ed8:	add    BYTE PTR [eax],al
  413eda:	out    dx,al
  413edb:	pop    edi
  413edc:	xchg   DWORD PTR [eax],edx
  413ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edf:	jne    0x413f60
  413ee1:	sar    bl,0xe6
  413ee4:	mov    edi,0xe8769604
  413ee9:	dec    ebx
  413eea:	push   edi
  413eeb:	mov    DWORD PTR [ebx-0x13],esi
  413eee:	pop    ebp
  413eef:	(bad)  
  413ef0:	or     BYTE PTR [eax],al
  413ef2:	inc    ebp
  413ef3:	adc    BYTE PTR [eax+0x24],ah
  413ef6:	sahf   
  413ef7:	js     0x413ee5
  413ef9:	call   0x80410bdc
  413efe:	aad    0x9
  413f00:	add    al,0x0
  413f02:	xchg   esi,eax
  413f03:	add    eax,ebp
  413f05:	dec    esp
  413f06:	push   edi
  413f07:	mov    DWORD PTR [ecx+edx*1-0x3e7b65f1],ecx
  413f0e:	xchg   edx,eax
  413f0f:	or     ah,al
  413f11:	add    al,0x73
  413f13:	gs dec ebp
  413f15:	aas    
  413f16:	xchg   esi,eax
  413f17:	xchg   edi,eax
  413f18:	lock mov eax,0x417e3a
  413f1e:	or     eax,0x15108a99
  413f23:	dec    eax
  413f24:	or     BYTE PTR [ecx-0x1bc172aa],al
  413f2a:	ror    edx,cl
  413f2c:	add    DWORD PTR [edx+0x69],esi
  413f2f:	rol    bl,0x4
  413f32:	xchg   esi,eax
  413f33:	test   BYTE PTR [edx+0x1c2515e3],0x51
  413f3a:	enter  0x5d00,0x8
	...
  413f4e:	add    BYTE PTR [eax],al
  413f50:	or     eax,0xdb8b0dfe
  413f55:	inc    ecx
  413f56:	push   esp
  413f57:	push   ecx
  413f58:	ds data16 cld 
  413f5b:	std    
  413f5c:	inc    ecx
  413f5d:	ds inc ebp
  413f5f:	lock out 0x16,al
  413f62:	inc    ebx
  413f63:	or     dh,al
  413f65:	jno    0x413f4b
  413f67:	clc    
  413f68:	sub    DWORD PTR [esi+ecx*4-0x7b06d1bd],edx
  413f6f:	rol    DWORD PTR [esi-0x1813c59e],0x99
  413f76:	fiadd  WORD PTR [eax]
  413f78:	jg     0x413f80
  413f7a:	and    eax,DWORD PTR [ebx-0x6a]
  413f7d:	in     eax,dx
  413f7e:	and    al,0xfc
  413f80:	data16 mov al,BYTE PTR [ebx+edi*8-0xd]
  413f85:	call   0x8ee7:0x215a684f
  413f8c:	push   ebp
  413f8d:	xchg   edx,eax
  413f8e:	pop    ss
  413f8f:	in     al,dx
  413f90:	imul   ebx,DWORD PTR [ecx+0x63f00a6],0x2b
  413f97:	inc    ebx
  413f98:	xchg   esi,eax
  413f99:	in     eax,dx
  413f9a:	sub    al,0xec
  413f9c:	data16 mov cl,BYTE PTR [eax]
  413f9f:	sti    
  413fa0:	mov    ebx,0xb25e729a
  413fa5:	out    0x24,al
  413fa7:	hlt    
  413fa8:	adc    DWORD PTR ds:0x923d8a73,esp
  413fae:	bound  ebx,QWORD PTR [esi-0x5e]
  413fb1:	out    0xac,al
  413fb3:	jmp    0x413fb5
	...
  413fc5:	add    BYTE PTR [ecx],bl
  413fc7:	and    BYTE PTR [ebx-0x76],dl
  413fca:	in     eax,dx
  413fcb:	mov    bh,BYTE PTR [edi-0x18dc2d19]
  413fd1:	mov    ss,ebp
  413fd3:	call   0x3e:0x9bafeb97
  413fda:	(bad)  
  413fdb:	jle    0x413f80
  413fdd:	inc    edx
  413fde:	xchg   esi,eax
  413fdf:	out    0xa4,eax
  413fe1:	repz (bad) 
  413fe3:	mov    dl,ah
  413fe5:	cli    
  413fe6:	push   ebx
  413fe7:	call   0x8ee7:0x23dae78f
  413fee:	aad    0x8a
  413ff0:	mov    bh,0xeb
  413ff2:	fwait
  413ff3:	fwait
  413ff4:	push   es
  413ff5:	add    BYTE PTR [eax+edi*1],bl
  413ff8:	sti    
  413ff9:	mov    edx,ebp
  413ffb:	xchg   edx,eax
  413ffc:	add    BYTE PTR [eax-0x28],ah
  413fff:	xchg   esi,eax
  414000:	xchg   DWORD PTR [ebp+eiz*1+0x1ddd5bec],ecx
  414007:	es call 0x87cf9f7d
  41400d:	xor    al,0xf2
  41400f:	or     ah,BYTE PTR [esp+ebx*1+0x53]
  414013:	bound  ecx,QWORD PTR [ebx-0x17cd0dd4]
  414019:	shr    dl,0x97
  41401c:	std    
  41401d:	inc    ecx
  41401e:	outs   dx,BYTE PTR ds:[esi]
  41401f:	sub    eax,0x2606e93f
  414024:	lock cmp edx,eax
  414027:	mov    edi,eax
  414029:	sahf   
	...
  41403a:	add    BYTE PTR [eax],al
  41403c:	leave  
  41403d:	or     ah,BYTE PTR [esp+0x5b]
  414041:	bound  ecx,QWORD PTR [ebx-0x17cd55dc]
  414047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414048:	mov    dl,0x97
  41404a:	std    
  41404b:	pop    ss
  41404c:	pop    es
  41404d:	es clc 
  41404f:	sbb    DWORD PTR [edx-0x66910722],esi
  414055:	in     eax,dx
  414056:	inc    esi
  414057:	icebp  
  414058:	in     eax,0xed
  41405a:	inc    ebx
  41405b:	pop    ecx
  41405c:	loop   0x413fe8
  41405e:	jne    0x4140b1
  414060:	adc    DWORD PTR [edi+0x30a22781],0x327dac8b
  41406a:	call   0xfdd8ae42
  41406f:	xchg   edi,eax
  414070:	mov    esp,0x578cece1
  414075:	push   0x0
  414077:	mov    esp,0xd7f8522
  41407c:	es cdq 
  41407e:	std    
  41407f:	jmp    0x62967168
  414084:	mov    bh,0x6a
  414086:	mov    DWORD PTR [eax],eax
  414088:	mov    dl,0x69
  41408a:	mov    DWORD PTR [ebp-0x46741],eax
  414090:	dec    DWORD PTR [esp+edx*2+0x6a9828fe]
  414097:	add    BYTE PTR [edi-0x76],ah
  41409a:	dec    ecx
  41409b:	inc    ecx
  41409c:	dec    DWORD PTR [ebp+eiz*8+0xfd]
	...
  4140af:	add    BYTE PTR [eax],al
  4140b1:	add    al,ch
  4140b3:	xchg   edi,eax
  4140b4:	sub    eax,0xe4e375d2
  4140b9:	dec    ebp
  4140ba:	mov    esi,0xed04885e
  4140bf:	and    bh,BYTE PTR [edi-0x6]
  4140c2:	(bad)  
  4140c3:	sbb    ch,ch
  4140c5:	(bad)  
  4140c6:	jb     0x4140e5
  4140c8:	(bad)  
  4140c9:	(bad)  
  4140ca:	clc    
  4140cb:	pop    ebp
  4140cc:	add    BYTE PTR [eax],al
  4140ce:	mov    edi,0x1f89548b
  4140d3:	out    0x81,al
  4140d5:	je     0x4140e0
  4140d7:	cwde   
  4140d8:	sti    
  4140d9:	xor    DWORD PTR ds:0x328b308c,ecx
  4140df:	adc    esi,edi
  4140e1:	jmp    FWORD PTR [eax]
  4140e3:	out    0x81,al
  4140e5:	jl     0x414110
  4140e7:	cwde   
  4140e8:	sti    
  4140e9:	inc    DWORD PTR [edx]
  4140eb:	adc    dh,bh
  4140ed:	(bad)  
  4140ee:	call   0xe9bdcadf
  4140f3:	cwde   
  4140f4:	sti    
  4140f5:	wbinvd 
  4140f7:	gs jg  0x4140da
  4140fa:	pop    eax
  4140fb:	in     eax,dx
  4140fc:	mov    ecx,0xfb98a97c
  414101:	psraw  mm3,QWORD PTR [eax+0x2d]
  414105:	clc    
  414106:	neg    DWORD PTR [esi-0x3a]
  414109:	add    edi,DWORD PTR [edi]
  41410b:	and    eax,0x7b758342
  414110:	jns    0x414117
  414112:	xchg   esi,eax
  414113:	or     DWORD PTR [edx],edi
	...
  414125:	add    BYTE PTR [eax],al
  414127:	add    bl,al
  414129:	aas    
  41412a:	push   ebx
  41412b:	push   esi
  41412c:	ds jmp 0x78a8:0xd29fdfb
  414134:	and    BYTE PTR [ecx-0x2ae9ff05],dl
  41413a:	add    DWORD PTR [ebx+0x39],esi
  41413d:	or     eax,0xb90878bd
  414142:	sti    
  414143:	add    BYTE PTR [ebx+0x16838d0f],cl
  414149:	test   al,0xfb
  41414b:	std    
  41414c:	inc    esi
  41414d:	mov    cl,0xfe
  41414f:	sti    
  414150:	jmp    0x3d9f9d2d
  414155:	add    dh,al
  414157:	pop    ebx
  414158:	aam    0x81
  41415a:	add    DWORD PTR [ebx+0x1f],edx
  41415d:	out    0x54,eax
  41415f:	push   eax
  414160:	gs dec edi
  414162:	xchg   DWORD PTR [ebx-0x72],edx
  414165:	add    al,0x5d
  414167:	or     al,0xd
  414169:	outs   dx,DWORD PTR ds:[esi]
  41416a:	adc    al,0x2f
  41416c:	fist   WORD PTR [ebx]
  41416e:	or     BYTE PTR [edi],cl
  414170:	push   ds
  414171:	ds or  eax,0x12860cf8
  414177:	mov    BYTE PTR [edx-0x707ebd4e],dl
  41417d:	xchg   ecx,eax
  41417e:	jge    0x41416b
  414180:	in     eax,0xdb
  414182:	jmp    0xfb71be33
  414187:	das    
  414188:	fs adc BYTE PTR ss:[edx],bl
	...
  41419c:	add    BYTE PTR [eax],al
  41419e:	sbb    al,0x85
  4141a0:	das    
  4141a1:	xor    dl,BYTE PTR [edi+0x15420111]
  4141a7:	push   ebx
  4141a8:	or     al,0x7c
  4141aa:	call   0x62da:0x8acf
  4141b0:	cld    
  4141b1:	sti    
  4141b2:	push   ds
  4141b3:	pop    esi
  4141b4:	fld    DWORD PTR [ecx+0x17]
  4141b7:	pushf  
  4141b8:	fistp  QWORD PTR [edi+0x47]
  4141bb:	cmp    BYTE PTR [edx+0x2935428a],dh
  4141c1:	adc    BYTE PTR [esi-0x69fc189e],dl
  4141c7:	(bad)  
  4141c8:	out    0x3,eax
  4141ca:	xchg   esi,eax
  4141cb:	(bad)  
  4141cc:	out    0x3,eax
  4141ce:	xchg   esi,eax
  4141cf:	(bad)  
  4141d0:	out    0x3,eax
  4141d2:	xchg   esi,eax
  4141d3:	(bad)  
  4141d4:	out    0x3,eax
  4141d6:	xchg   esi,eax
  4141d7:	(bad)  
  4141d8:	out    0x3,eax
  4141da:	xchg   esi,eax
  4141db:	(bad)  
  4141dc:	out    0x3,eax
  4141de:	xchg   esi,eax
  4141df:	(bad)  
  4141e0:	out    0x3,eax
  4141e2:	xchg   esi,eax
  4141e3:	(bad)  
  4141e4:	out    0x3,eax
  4141e6:	xchg   esi,eax
  4141e7:	(bad)  
  4141e8:	out    0x3,eax
  4141ea:	xchg   esi,eax
  4141eb:	(bad)  
  4141ec:	out    0x3,eax
  4141ee:	xchg   esi,eax
  4141ef:	(bad)  
  4141f0:	out    0x3,eax
  4141f2:	xchg   esi,eax
  4141f3:	(bad)  
  4141f4:	out    0x3,eax
  4141f6:	xchg   esi,eax
  4141f7:	(bad)  
  4141f8:	out    0x3,eax
  4141fa:	xchg   esi,eax
  4141fb:	(bad)  
  4141fc:	out    0x3,eax
  4141fe:	xchg   esi,eax
  4141ff:	(bad)  
  414200:	out    0x3,eax
	...
  414212:	add    BYTE PTR [eax],al
  414214:	xchg   esi,eax
  414215:	(bad)  
  414216:	out    0x3,eax
  414218:	xchg   esi,eax
  414219:	(bad)  
  41421a:	out    0x3,eax
  41421c:	xchg   esi,eax
  41421d:	(bad)  
  41421e:	out    0x3,eax
  414220:	xchg   esi,eax
  414221:	(bad)  
  414222:	out    0x3,eax
  414224:	xchg   esi,eax
  414225:	(bad)  
  414226:	out    0x3,eax
  414228:	xchg   esi,eax
  414229:	(bad)  
  41422a:	out    0x3,eax
  41422c:	xchg   esi,eax
  41422d:	(bad)  
  41422e:	out    0x3,eax
  414230:	xchg   esi,eax
  414231:	(bad)  
  414232:	out    0x3,eax
  414234:	xchg   esi,eax
  414235:	(bad)  
  414236:	out    0x3,eax
  414238:	xchg   esi,eax
  414239:	bound  eax,QWORD PTR [eax]
  41423b:	jmp    0xe941a4d5
  414240:	xchg   ebp,eax
  414241:	bound  eax,QWORD PTR [eax]
  414243:	jmp    0xe941a4dd
  414248:	xchg   ebp,eax
  414249:	bound  eax,QWORD PTR [eax]
  41424b:	in     al,0x8f
  41424d:	imul   ecx,DWORD PTR [edx],0x6726c588
  414253:	mov    esi,DWORD PTR [ebp+0xc]
  414256:	das    
  414257:	iret   
  414258:	gs inc ebp
  41425a:	and    cl,cl
  41425c:	push   0x7d752042
  414261:	add    DWORD PTR [eax],esp
  414263:	pop    edx
  414264:	jg     0x41429b
  414266:	ins    BYTE PTR es:[edi],dx
  414267:	dec    ebp
  414268:	ja     0x41427a
  41426a:	and    BYTE PTR [ebp+0x6a],bl
  41426d:	add    DWORD PTR [eax],esp
  41426f:	dec    ebx
  414270:	ja     0x414280
  414272:	je     0x4142c0
  414274:	pusha  
  414275:	inc    edx
  414276:	cmp    dl,BYTE PTR [eax]
	...
  414288:	add    BYTE PTR [eax],al
  41428a:	(bad)
  41428e:	bound  ecx,QWORD PTR ds:0xa354072
  414294:	je     0x41425f
  414296:	jge    0x41429b
  414298:	daa    
  414299:	leave  
  41429a:	mov    cl,BYTE PTR [ebp+0x37]
  41429d:	shr    DWORD PTR [esi+0x50],1
  4142a0:	xor    cl,bl
  4142a2:	jb     0x4142e6
  4142a4:	bound  eax,QWORD PTR [eax]
  4142a6:	jb     0x4142d0
  4142a8:	ins    DWORD PTR es:[edi],dx
  4142a9:	add    al,0x28
  4142ab:	jmp    DWORD PTR [edx+0x7]
  4142ae:	jb     0x4142cd
  4142b0:	(bad)  
  4142b1:	cli    
  4142b2:	test   BYTE PTR [esp+ebp*1],0x9
  4142b6:	rol    DWORD PTR [esi],cl
  4142b8:	ins    BYTE PTR es:[edi],dx
  4142b9:	or     eax,ebp
  4142bb:	std    
  4142bc:	fs shr ecx,0x13
  4142c0:	and    BYTE PTR [ebx+0x6313f6],bh
  4142c6:	sub    eax,0x91646113
  4142cb:	imul   ecx,DWORD PTR [edx],0xd
  4142ce:	jne    0x4142fa
  4142d0:	imul   esi,DWORD PTR [edx+0x5a],0x41
  4142d4:	outs   dx,BYTE PTR gs:[esi]
  4142d6:	sbb    DWORD PTR [eax],ecx
  4142d8:	jb     0x414347
  4142da:	push   cs
  4142db:	add    eax,0x57116f65
  4142e0:	and    BYTE PTR [eax+0xb],ch
  4142e3:	add    eax,0x48403a70
  4142e8:	jae    0x414361
  4142ea:	test   al,0x4b
  4142ec:	bound  eax,QWORD PTR gs:[eax]
	...
  4142ff:	add    BYTE PTR [edx+eax*1+0x390736e],bl
  414306:	je     0x41437f
  414308:	pop    esi
  414309:	or     al,0x61
  41430b:	cs dec esp
  41430d:	or     DWORD PTR [ecx+0x2f],ebp
  414310:	repnz or WORD PTR [edx],cx
  414314:	jmp    DWORD PTR [eax+0x0]
  414317:	add    bh,bh
  414319:	pusha  
  41431a:	add    BYTE PTR [eax],al
  41431c:	out    dx,eax
  41431d:	pusha  
  41431e:	add    BYTE PTR [eax],al
  414320:	out    dx,eax
  414321:	pusha  
  414322:	add    BYTE PTR [eax],al
  414324:	mov    edi,0xbf000060
  414329:	pusha  
  41432a:	add    BYTE PTR [eax],al
  41432c:	scas   eax,DWORD PTR es:[edi]
  41432d:	pusha  
  41432e:	add    BYTE PTR [eax],al
  414330:	scas   eax,DWORD PTR es:[edi]
  414331:	pusha  
  414332:	add    BYTE PTR [eax],al
  414334:	mov    edi,0xbf000060
  414339:	pusha  
  41433a:	add    BYTE PTR [eax],al
  41433c:	scas   eax,DWORD PTR es:[edi]
  41433d:	pusha  
  41433e:	add    BYTE PTR [eax],al
  414340:	scas   eax,DWORD PTR es:[edi]
  414341:	pusha  
  414342:	add    BYTE PTR [eax],al
  414344:	jg     0x4143a6
  414346:	add    BYTE PTR [eax],al
  414348:	jg     0x4143aa
  41434a:	add    BYTE PTR [eax],al
  41434c:	outs   dx,DWORD PTR ds:[esi]
  41434d:	pusha  
  41434e:	add    BYTE PTR [eax],al
  414350:	xchg   esi,eax
  414351:	out    dx,al
  414352:	mov    dl,0x4e
  414354:	std    
  414355:	dec    edx
  414356:	and    BYTE PTR [ebx],ch
  414358:	xchg   edx,eax
  414359:	push   ebx
  41435a:	iret   
  41435b:	push   esp
  41435c:	jb     0x4143d5
  41435e:	mov    ds:0x809cab62,eax
  414363:	or     DWORD PTR [eax],eax
	...
  414375:	add    cl,ch
  414377:	xchg   esi,eax
  414378:	or     ecx,DWORD PTR [eax]
  41437a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437b:	lds    ecx,FWORD PTR [edx]
  41437d:	push   0x517bd23a
  414382:	or     BYTE PTR [edx-0x7669ffff],cl
  414388:	add    DWORD PTR [eax],eax
  41438a:	xchg   esi,eax
  41438b:	mov    DWORD PTR [ecx],eax
  41438d:	add    BYTE PTR [esi-0x69fffe77],dl
  414393:	mov    DWORD PTR [ecx],eax
  414395:	add    BYTE PTR [esi-0x69fffe77],dl
  41439b:	mov    DWORD PTR [ecx],eax
  41439d:	add    BYTE PTR [esi-0x69fffe77],dl
  4143a3:	mov    DWORD PTR [ecx],eax
  4143a5:	add    BYTE PTR [esi-0x69fffe77],dl
  4143ab:	mov    DWORD PTR [ecx],eax
  4143ad:	add    BYTE PTR [esi-0x69fffe77],dl
  4143b3:	mov    DWORD PTR [ecx],eax
  4143b5:	add    BYTE PTR [esi-0x69fffe77],dl
  4143bb:	mov    DWORD PTR [ecx],eax
  4143bd:	add    BYTE PTR [esi-0x69fffe77],dl
  4143c3:	mov    DWORD PTR [ecx],eax
  4143c5:	add    BYTE PTR [esi-0x69fffe77],dl
  4143cb:	mov    DWORD PTR [ecx],eax
  4143cd:	add    BYTE PTR [esi-0x69fffe77],dl
  4143d3:	mov    DWORD PTR [ecx],eax
  4143d5:	add    BYTE PTR [esi+0x189],dl
	...
  4143eb:	add    BYTE PTR [esi-0x69fc189e],dl
  4143f1:	(bad)  
  4143f2:	out    0x3,eax
  4143f4:	xchg   esi,eax
  4143f5:	(bad)  
  4143f6:	out    0x3,eax
  4143f8:	xchg   esi,eax
  4143f9:	(bad)  
  4143fa:	out    0x3,eax
  4143fc:	xchg   esi,eax
  4143fd:	(bad)  
  4143fe:	out    0x3,eax
  414400:	xchg   esi,eax
  414401:	(bad)  
  414402:	out    0x3,eax
  414404:	xchg   esi,eax
  414405:	(bad)  
  414406:	out    0x3,eax
  414408:	xchg   esi,eax
  414409:	(bad)  
  41440a:	out    0x3,eax
  41440c:	xchg   esi,eax
  41440d:	(bad)  
  41440e:	out    0x3,eax
  414410:	xchg   esi,eax
  414411:	(bad)  
  414412:	out    0x3,eax
  414414:	xchg   esi,eax
  414415:	(bad)  
  414416:	out    0x3,eax
  414418:	xchg   esi,eax
  414419:	(bad)  
  41441a:	out    0x3,eax
  41441c:	xchg   esi,eax
  41441d:	(bad)  
  41441e:	out    0x3,eax
  414420:	xchg   esi,eax
  414421:	(bad)  
  414422:	out    0x3,eax
  414424:	xchg   esi,eax
  414425:	(bad)  
  414426:	out    0x3,eax
  414428:	xchg   esi,eax
  414429:	(bad)  
  41442a:	out    0x3,eax
  41442c:	xchg   esi,eax
  41442d:	(bad)  
  41442e:	out    0x3,eax
  414430:	xchg   esi,eax
  414431:	(bad)  
  414432:	out    0x3,eax
  414434:	xchg   esi,eax
  414435:	(bad)  
  414436:	out    0x3,eax
  414438:	xchg   esi,eax
  414439:	(bad)  
  41443a:	out    0x3,eax
  41443c:	xchg   esi,eax
  41443d:	(bad)  
  41443e:	out    0x3,eax
  414440:	xchg   esi,eax
  414441:	(bad)  
  414442:	out    0x3,eax
  414444:	xchg   esi,eax
  414445:	(bad)  
  414446:	out    0x3,eax
  414448:	xchg   esi,eax
  414449:	(bad)  
  41444a:	out    0x3,eax
  41444c:	xchg   esi,eax
  41444d:	(bad)  
  41444e:	out    0x3,eax
	...
  414460:	add    BYTE PTR [eax],al
  414462:	xchg   esi,eax
  414463:	(bad)  
  414464:	out    0x3,eax
  414466:	xchg   esi,eax
  414467:	(bad)  
  414468:	out    0x3,eax
  41446a:	xchg   esi,eax
  41446b:	(bad)  
  41446c:	out    0x3,eax
  41446e:	xchg   esi,eax
  41446f:	(bad)  
  414470:	out    0x3,eax
  414472:	xchg   esi,eax
  414473:	(bad)  
  414474:	out    0x3,eax
  414476:	xchg   esi,eax
  414477:	bound  eax,QWORD PTR [eax]
  414479:	jmp    0xe941a713
  41447e:	xchg   ebp,eax
  41447f:	bound  eax,QWORD PTR [eax]
  414481:	jmp    0xe941a71b
  414486:	xchg   ebp,eax
  414487:	bound  eax,QWORD PTR [eax]
  414489:	jmp    0xe941a723
  41448e:	xchg   ebp,eax
  41448f:	bound  eax,QWORD PTR [eax]
  414491:	jmp    0xe941a72b
  414496:	xchg   ebp,eax
  414497:	bound  eax,QWORD PTR [eax]
  414499:	jmp    0xe941a733
  41449e:	xchg   ebp,eax
  41449f:	bound  eax,QWORD PTR [eax]
  4144a1:	jmp    0xe941a73b
  4144a6:	xchg   ebp,eax
  4144a7:	bound  eax,QWORD PTR [eax]
  4144a9:	fsubr  DWORD PTR [ebx+0x53]
  4144ac:	xor    al,0xd4
  4144ae:	bound  esi,QWORD PTR [bx+si-0x78]
  4144b2:	stos   BYTE PTR es:[edi],al
  4144b3:	adc    esi,DWORD PTR [ebp-0x72]
  4144b6:	mov    ds:0x7d790006,eax
  4144bb:	adc    ah,BYTE PTR [edx-0x75]
  4144be:	xchg   ebp,eax
  4144bf:	add    DWORD PTR [ebp+0x4c],esi
  4144c2:	test   BYTE PTR [esi],dl
  4144c4:	ja     0x4144af
	...
  4144d6:	add    BYTE PTR [eax],al
  4144d8:	ret    0x3154
  4144db:	sbb    eax,0x446a62a7
  4144e0:	gs adc eax,0x54aae971
  4144e6:	xor    ebp,esi
  4144e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e9:	pop    eax
  4144ea:	xor    eax,0x324195f1
  4144ef:	cli    
  4144f0:	jns    0x414554
  4144f2:	pop    edi
  4144f3:	or     esi,DWORD PTR ds:0x95da3241
  4144f9:	(bad)  
  4144fa:	bound  ebx,QWORD PTR ds:0xff67053f
  414500:	xchg   ebp,eax
  414501:	push   ss
  414502:	arpl   WORD PTR [eax],ax
  414504:	pushf  
  414505:	add    DWORD PTR [eax],eax
  414507:	ins    BYTE PTR es:[edi],dx
  414508:	mov    BYTE PTR [eax],al
  41450a:	popa   
  41450b:	add    BYTE PTR [esi+0x53],cl
  41450e:	das    
  41450f:	add    BYTE PTR [edi+0x60736f06],cl
  414515:	or     BYTE PTR [edx+0x64],dh
  414518:	sahf   
  414519:	pushw  0x5b65
  41451d:	or     DWORD PTR [ebx+0x0],ebp
  414520:	sub    cl,BYTE PTR [eax]
  414522:	outs   dx,BYTE PTR ds:[esi]
  414523:	imul   edx,DWORD PTR [edx+0xe],0x0
  414527:	fs sbb eax,0x596f6306
  41452d:	gs je  0x4145a2
  414530:	add    dl,BYTE PTR [esp+esi*2]
  414533:	outs   dx,BYTE PTR ds:[esi]
  414534:	sub    BYTE PTR [esi+0x0],dl
  414537:	xor    DWORD PTR [esi+0x56],ebx
  41453a:	sub    eax,0x31
	...
  41454b:	add    BYTE PTR [eax],al
  41454d:	add    BYTE PTR [esi+0x65],cl
  414550:	gs ins BYTE PTR es:[edi],dx
  414552:	test   al,0xff
  414554:	pusha  
  414555:	jns    0x41455f
  414557:	adc    al,BYTE PTR [eax]
  414559:	xor    ebp,ebx
  41455b:	push   ebx
  41455c:	xor    al,0x35
  41455e:	push   ecx
  41455f:	inc    eax
  414560:	add    BYTE PTR [ebx+0x17],dh
  414563:	push   es
  414564:	outs   dx,DWORD PTR fs:[esi]
  414566:	pusha  
  414567:	sub    ax,0x9c32
  41456b:	push   edx
  41456c:	xor    DWORD PTR [esi],esi
  41456e:	nop
  41456f:	dec    esi
  414570:	xor    eax,0x71fe5c00
  414575:	imul   ebx,DWORD PTR [edx+edx*1+0x8a27300],0x856686f
  414580:	popa   
  414581:	add    BYTE PTR [edx-0x6d8b90f9],cl
  414587:	adc    al,0x0
  414589:	arpl   WORD PTR [eax-0x698a9005],cx
  41458f:	outs   dx,DWORD PTR ds:[esi]
  414590:	pop    edi
  414591:	jb     0x414529
  414593:	imul   esi,DWORD PTR [edx+0x67],0x30
  414597:	pop    esp
  414598:	pop    edi
  414599:	jno    0x4145c0
  41459b:	jnp    0x41460a
  41459d:	addr16 stc 
  41459f:	pusha  
  4145a0:	pop    edi
  4145a1:	jb     0x414539
  4145a3:	gs ins DWORD PTR es:[di],dx
  4145a6:	or     bl,BYTE PTR [esp+eiz*2+0x6479ea6c]
  4145ad:	outs   dx,BYTE PTR ds:[esi]
  4145ae:	stc    
  4145af:	sahf   
  4145b0:	add    BYTE PTR gs:[eax],al
	...
  4145c3:	add    ah,bh
  4145c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c6:	jb     0x41463b
  4145c8:	in     eax,0x8a
  4145ca:	add    DWORD PTR [edi],ebp
  4145cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145cd:	mov    WORD PTR [edx+esi*1],?
  4145d0:	test   DWORD PTR [ecx+0x6e],edi
  4145d3:	push   0x7660d5b7
  4145d8:	mov    ebx,0xc46601eb
  4145dd:	out    0x60,al
  4145df:	fs shl esi,0x1
  4145e3:	imul   edi,DWORD PTR [edi-0x5b9c9af3],0xb2716479
  4145ed:	out    0x1,eax
  4145ef:	jno    0x414572
  4145f1:	fsub   QWORD PTR [edx+0x63]
  4145f4:	test   BYTE PTR [ecx+0x72],bh
  4145f7:	jae    0x41457f
  4145f9:	push   ds
  4145fa:	jb     0x414667
  4145fc:	ja     0x41461d
  4145fe:	add    al,0x6b
  414600:	jg     0x41461e
  414602:	ins    BYTE PTR es:[edi],dx
  414603:	pop    edi
  414604:	jae    0x414653
  414606:	add    al,0x61
  414608:	outs   dx,BYTE PTR ds:[esi]
  414609:	push   ds
  41460a:	pop    ebp
  41460b:	jno    0x414680
  41460d:	jns    0x414679
  41460f:	outs   dx,BYTE PTR ds:[esi]
  414610:	dec    edx
  414611:	push   ds
  414612:	jb     0x414682
  414614:	xor    edx,DWORD PTR [ebp+0x4]
  414617:	push   0x31
  414619:	bound  ebx,QWORD PTR [edx]
  41461b:	ins    BYTE PTR es:[edi],dx
  41461c:	inc    ebp
  41461d:	add    edi,esp
  41461f:	pop    ebp
  414620:	and    eax,0x3b7b0203
  414625:	adc    eax,0x61e7
	...
  41463a:	xor    al,BYTE PTR ds:0x63570fa
  414640:	out    0x61,eax
  414642:	icebp  
  414643:	adc    ecx,DWORD PTR [edx+eiz*2]
  414646:	jmp    0x7454149
  41464b:	pop    ss
  41464c:	enter  0x371,0x2
  414650:	fnstenv [eax-0x6a]
  414653:	push   edx
  414654:	pop    ss
  414655:	xor    al,0xa6
  414657:	push   edx
  414658:	pop    ss
  414659:	add    al,0xe6
  41465b:	adc    eax,0x5ea73b9
  414660:	out    0x69,eax
  414662:	ret    
  414663:	adc    al,0xcb
  414665:	bound  edi,QWORD PTR [eax-0x469d3a9e]
  41466b:	push   ss
  41466c:	pop    DWORD PTR [ebx]
  41466e:	(bad)  
  41466f:	adc    eax,0x14b5668c
  414674:	out    0x62,eax
  414676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414677:	cli    
  414678:	jp     0x4146d8
  41467a:	test   eax,0xa76e8962
  41467f:	push   ss
  414680:	test   BYTE PTR [ecx-0x6a],dh
  414683:	cli    
  414684:	mov    esp,DWORD PTR [edx-0x80]
  414687:	add    eax,0x586037d
  41468c:	push   edi
  41468d:	je     0x414704
  41468f:	adc    al,0xe7
  414691:	sub    al,0xab
  414693:	push   edi
  414694:	push   ds
  414695:	sub    eax,0x6be757a3
  41469a:	add    BYTE PTR gs:[ebx],bh
  41469d:	pop    edi
	...
  4146ae:	add    BYTE PTR [eax],al
  4146b0:	bound  ecx,QWORD PTR fs:[ebx+0x65]
  4146b4:	dec    eax
  4146b5:	add    eax,0x624d4500
  4146ba:	pop    edi
  4146bb:	aas    
  4146bc:	ss adc al,0x63
  4146bf:	push   ds
  4146c0:	xchg   edx,eax
  4146c1:	push   ss
  4146c2:	push   0x712f390e
  4146c7:	jmp    0x4a64700
  4146cc:	adc    DWORD PTR cs:[eax],eax
  4146cf:	or     ch,BYTE PTR [edx]
  4146d1:	das    
  4146d2:	jb     0x4146e1
  4146d4:	std    
  4146d5:	add    DWORD PTR [eax],eax
  4146d7:	or     eax,0x466fcf5
  4146dc:	out    dx,al
  4146dd:	bound  ebp,QWORD PTR [edi]
  4146df:	sbb    ch,al
  4146e1:	cmp    eax,0xfcd0d300
  4146e6:	ins    DWORD PTR es:[edi],dx
  4146e7:	ror    bl,0x1
  4146ea:	jb     0x4146d5
  4146ec:	out    0x5,al
  4146ee:	outs   dx,BYTE PTR ds:[esi]
  4146ef:	into   
  4146f0:	icebp  
  4146f1:	add    DWORD PTR [eax],eax
  4146f3:	shl    DWORD PTR [esp+edi*8+0x62bdc86d],1
  4146fa:	outs   dx,DWORD PTR ds:[esi]
  4146fb:	enter  0x17bf,0x71
  4146ff:	mov    eax,ds:0x995efa95
  414704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414705:	adc    eax,0x16b48400
  41470a:	jb     0x41468c
  41470c:	popf   
  41470d:	bound  esi,QWORD PTR [eax-0x78]
  414710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414711:	adc    eax,DWORD PTR [eax]
  414713:	mov    BYTE PTR [eax],al
	...
  414725:	add    BYTE PTR [ebp+ebp*1+0x5f],dh
  414729:	mov    BYTE PTR [edx+eiz*2+0x36],dh
  41472d:	mov    ah,0xb1
  41472f:	push   ebx
  414730:	xor    bl,BYTE PTR [eax]
  414732:	xchg   edx,eax
  414733:	sub    eax,0x674486b
  414738:	pop    edi
  414739:	jmp    0x41b546b5
  41473e:	inc    ebx
  41473f:	cld    
  414740:	fs add bh,ch
  414743:	clc    
  414744:	outs   dx,BYTE PTR fs:[esi]
  414746:	pop    eax
  414747:	sti    
  414748:	jno    0x41474a
  41474a:	push   edx
  41474b:	add    DWORD PTR [eax+ebp*2+0x5a],esi
  41474f:	adc    al,0x0
  414751:	jae    0x4146f4
  414753:	add    DWORD PTR [ebx+0x70],ebp
  414756:	jbe    0x4147be
  414758:	push   0x65
  41475a:	mov    WORD PTR ds:0x668e6365,ss
  414760:	jae    0x4147c7
  414762:	add    DWORD PTR ds:0x669a6d6b,0x70
  414769:	outs   dx,DWORD PTR ds:[esi]
  41476a:	xchg   esp,eax
  41476b:	sti    
  41476c:	push   0x6561816f
  414771:	ins    BYTE PTR es:[edi],dx
  414772:	pusha  
  414773:	or     esp,DWORD PTR [ecx+0x79]
  414776:	pusha  
  414777:	or     ch,BYTE PTR ds:0x2d578e00
  41477d:	xor    DWORD PTR [esi+0x66],edi
  414780:	imul   esi,DWORD PTR [ebp+0x1c],0x586e5d15
  414787:	popa   
  414788:	push   0x65
	...
  414799:	add    BYTE PTR [eax],al
  41479b:	add    BYTE PTR [ebx+0x11],dl
  41479e:	imul   esp,DWORD PTR [ebp+0x2f],0x1b73712f
  4147a5:	outs   dx,BYTE PTR cs:[esi]
  4147a7:	add    BYTE PTR ds:0x166d6f06,al
  4147ad:	add    esp,DWORD PTR [ecx+0x0]
  4147b0:	mov    al,ds:0x86e5d17
  4147b5:	cli    
  4147b6:	push   DWORD PTR [ebx+0x1a]
  4147b9:	adc    al,0x74
  4147bb:	imul   edx,DWORD PTR [ecx],0x7f60fff8
  4147c1:	adc    DWORD PTR [ebp+eiz*2-0x11],ebp
  4147c5:	add    DWORD PTR [ebp+0x63],esp
  4147c8:	inc    edi
  4147c9:	sti    
  4147ca:	imul   ebp,DWORD PTR [esi+edx*4+0x1e],0x4
  4147cf:	jo     0x41484c
  4147d1:	sbb    ah,BYTE PTR [ebp+0x63]
  4147d4:	xchg   esi,eax
  4147d5:	dec    eax
  4147d6:	addr16 popa 
  4147d8:	inc    esp
  4147d9:	es js  0x4147dc
  4147dc:	xchg   DWORD PTR [ebx+0x6a],edi
  4147df:	jb     0x414818
  4147e1:	sbb    BYTE PTR [edi+0x0],ah
  4147e4:	inc    ecx
  4147e5:	jb     0x414847
  4147e7:	ins    BYTE PTR es:[edi],dx
  4147e8:	aas    
  4147e9:	pop    edx
  4147ea:	pop    edi
  4147eb:	add    BYTE PTR [edi],bh
  4147ed:	addr16 popa 
  4147ef:	jbe    0x41482c
  4147f1:	jb     0x414854
  4147f3:	jae    0x414859
  4147f5:	jnp    0x414856
  4147f7:	addr16 cmc 
  4147f9:	pop    esp
  4147fa:	pusha  
  4147fb:	arpl   WORD PTR [esi+0x3637cb],dx
	...
  414811:	add    al,cl
  414813:	shl    DWORD PTR [edi],cl
  414815:	add    bl,ch
  414817:	scas   al,BYTE PTR es:[edi]
  414818:	call   DWORD PTR [bp+di+0x6501]
  41481e:	imul   DWORD PTR [ebp-0x4d088a98]
  414824:	add    DWORD PTR [esi-0x1d],esp
  414827:	cwde   
  414828:	pop    esi
  414829:	ja     0x4147ec
  41482b:	(bad)  
  41482c:	xor    al,0x0
  41482e:	mov    bh,0xc8
  414830:	jbe    0x41489a
  414832:	mov    cl,0xcd
  414834:	push   0x59daae00
  414839:	pop    edi
  41483a:	mov    esi,0xb97001da
  41483f:	in     al,0x71
  414841:	add    BYTE PTR [ebp+ecx*1-0xd5a8e98],dh
  414848:	pop    edi
  414849:	gs xchg esi,eax
  41484b:	xlat   BYTE PTR ds:[ebx]
  41484c:	pop    ebp
  41484d:	pop    edi
  41484e:	jle    0x414827
  414850:	pop    ebp
  414851:	pop    edi
  414852:	outs   dx,BYTE PTR ds:[esi]
  414853:	jns    0x4148b5
  414855:	ja     0x4147dc
  414857:	bound  edx,QWORD PTR [edi+0x63]
  41485a:	ja     0x414861
  41485c:	sbb    BYTE PTR [edi*2+0x6e785b01],al
  414863:	add    eax,0x1770456
  414868:	push   ebp
  414869:	arpl   WORD PTR [edx],di
  41486b:	add    edi,esp
  41486d:	je     0x4148a0
  41486f:	(bad)  
  414870:	cmp    al,0x67
  414872:	inc    esp
  414873:	bound  edi,QWORD PTR [ecx]
  414875:	popa   
	...
  414886:	add    BYTE PTR [eax],al
  414888:	xor    al,0x5
  41488a:	sbb    DWORD PTR [eax-0x6a],edi
  41488d:	add    al,0xe
  41488f:	jbe    0x4148c6
  414891:	adc    al,0xc
  414893:	jbe    0x41482b
  414895:	add    DWORD PTR [edx],ebx
  414897:	push   0x40f0330
  41489c:	add    al,0x2
  41489e:	or     bl,BYTE PTR [ebp+esi*8-0x2]
  4148a2:	out    0x75,al
  4148a4:	loope  0x41489f
  4148a6:	cld    
  4148a7:	gs jmp 0x4148bd
  4148aa:	out    0x68,eax
  4148ac:	in     eax,0xf9
  4148ae:	shl    BYTE PTR [edx-0x1c],cl
  4148b1:	(bad)  
  4148b2:	xlat   BYTE PTR ds:[ebx]
  4148b3:	sar    sp,0xd3
  4148b7:	ja     0x41484f
  4148b9:	add    al,cl
  4148bb:	ja     0x41487a
  4148bd:	add    ebp,ecx
  4148bf:	add    esi,DWORD PTR [edi-0x46a33a05]
  4148c5:	add    eax,0xf9d965e7
  4148ca:	xchg   edx,eax
  4148cb:	test   ax,0x9a62
  4148cf:	pusha  
  4148d0:	mov    bh,0xff
  4148d2:	mov    esi,DWORD PTR [ebp+0x71]
  4148d5:	bound  edi,QWORD PTR [edx+ebx*2-0x49]
  4148d9:	test   DWORD PTR [ebx-0x6fff6996],0xfffd7577
  4148e3:	mov    edx,DWORD PTR [ebp+0x597d62fa]
  4148e9:	std    
  4148ea:	cs jmp 0x4148f0
	...
  4148fc:	add    BYTE PTR [eax],al
  4148fe:	js     0x4148f7
  414900:	dec    di
  414902:	jno    0x4148fb
  414904:	dec    DWORD PTR [ebp+esi*2-0x7]
  414908:	ins    BYTE PTR es:[edi],dx
  414909:	push   ebp
  41490a:	jne    0x41496e
  41490c:	jno    0x414956
  41490e:	jno    0x41493b
  414910:	outs   dx,BYTE PTR ds:[esi]
  414911:	xor    eax,0x4a002b6a
  414916:	aaa    
  414917:	imul   DWORD PTR [edi+0x48]
  41491a:	inc    ebp
  41491b:	bound  esp,QWORD PTR [eax+edx*1+0x35]
  41491f:	imul   DWORD PTR [edi+ecx*1+0x3e]
  414923:	bound  esi,QWORD PTR [eax+ecx*1+0x2d]
  414927:	(bad)  
  414928:	ins    BYTE PTR es:[edi],dx
  414929:	sbb    edx,DWORD PTR [edx+0x8fb6d04]
  41492f:	(bad)  
  414930:	call   DWORD PTR [edx]
  414932:	idiv   edx
  414934:	ins    DWORD PTR es:[edi],dx
  414935:	mov    edx,0xfb0050c4
  41493a:	fadd   QWORD PTR [ebx]
  41493c:	push   0xfffeebc8
  414941:	retf   0x1c9
  414944:	outs   dx,BYTE PTR ds:[esi]
  414945:	ret    0x4aa4
  414948:	xor    ch,cl
  41494a:	in     eax,0x5
  41494c:	pop    edi
  41494d:	retf   0x5ed
  414950:	jno    0x41493b
  414952:	mov    dl,0xf7
  414954:	ins    BYTE PTR es:[edi],dx
  414955:	lds    edx,FWORD PTR [ebp-0x41419400]
  41495b:	add    eax,0x3aae972
  414960:	ins    DWORD PTR es:[edi],dx
  414961:	mov    es,WORD PTR [eax]
	...
  414973:	add    BYTE PTR [ecx-0x44168dfb],ah
  414979:	sub    DWORD PTR [esi-0x78],ebp
  41497c:	mov    bh,0x29
  41497e:	add    BYTE PTR [eax],al
  414980:	and    eax,0x8c656905
  414985:	gs pop ebp
  414987:	jae    0x41499c
  414989:	cld    
  41498a:	pop    esp
  41498b:	jae    0x4149a0
  41498d:	cld    
  41498e:	push   DWORD PTR [ebp+0x46]
  414991:	add    eax,0xf74d6f74
  414996:	jmp    FWORD PTR [ebx+0x58]
  414999:	sub    BYTE PTR [edi+ebp*2-0x67],ah
  41499d:	pop    esi
  41499e:	sub    eax,0x730ecc32
  4149a3:	gs mov edi,0xbc33324e
  4149a9:	push   ebx
  4149aa:	sub    eax,0x5d0a7c00
  4149af:	jb     0x414944
  4149b1:	adc    al,0x61
  4149b3:	imul   edi,DWORD PTR [edi+0x7d6f6100],0x1
  4149ba:	popa   
  4149bb:	add    BYTE PTR [eax-0x5d9191d9],al
  4149c1:	adc    al,0x0
  4149c3:	ins    DWORD PTR es:[edi],dx
  4149c4:	sahf   
  4149c5:	add    DWORD PTR [ebx+0x69],esp
  4149c8:	xchg   edx,eax
  4149c9:	pop    esi
  4149ca:	je     0x414a3e
  4149cc:	xchg   esi,eax
  4149cd:	sub    BYTE PTR [ebp+0x74],ah
  4149d0:	jbe    0x414a37
  4149d2:	imul   ebp,DWORD PTR [esi+0x5b],0x26
  4149d6:	outs   dx,BYTE PTR ds:[esi]
  4149d7:	add    BYTE PTR gs:[eax],al
	...
  4149ea:	outs   dx,DWORD PTR ds:[esi]
  4149eb:	dec    esi
  4149ec:	xor    dh,BYTE PTR [ebx]
  4149ee:	dec    esi
  4149ef:	add    ebx,DWORD PTR [edi+0x0]
  4149f2:	pop    esp
  4149f3:	sub    eax,0xfa646365
  4149f8:	ins    DWORD PTR es:[edi],dx
  4149f9:	add    BYTE PTR [ebp+0xa],dl
  4149fc:	outs   dx,BYTE PTR ds:[esi]
  4149fd:	imul   edi,eax,0x7630012
  414a03:	adc    esp,DWORD PTR [ebp+0x73]
  414a06:	aas    
  414a07:	adc    eax,0xec96735d
  414a0c:	jbe    0x414a3e
  414a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0f:	fild   WORD PTR [ecx]
  414a11:	pop    edi
  414a12:	mov    ecx,DWORD PTR [esi*2+0x727b7867]
  414a19:	jo     0x414a92
  414a1b:	or     eax,0xda96775a
  414a20:	imul   edi,DWORD PTR gs:[edi+0x31],0x4
  414a25:	imul   esi,DWORD PTR [ebx+0x2d],0x60
  414a29:	addr16 jo 0x414aa7
  414a2c:	ins    WORD PTR es:[edi],dx
  414a2e:	imul   esp,DWORD PTR [eax],0x19966360
  414a34:	jb     0x414a9d
  414a36:	xor    ebx,DWORD PTR [ecx]
  414a38:	push   0x5d239671
  414a3d:	jo     0x414a72
  414a3f:	jnp    0x414ab3
  414a41:	push   0x6b5d6f37
  414a46:	xchg   esi,eax
  414a47:	pop    ecx
  414a48:	pop    ebx
  414a49:	outs   dx,BYTE PTR ds:[esi]
  414a4a:	sub    dl,BYTE PTR [esi+0x5e]
  414a4d:	add    BYTE PTR fs:[eax],al
	...
  414a60:	sub    DWORD PTR [ebx+0x5d],edi
  414a63:	ins    DWORD PTR es:[edi],dx
  414a64:	add    DWORD PTR [ebp+0x5b],esi
  414a67:	outs   dx,BYTE PTR ds:[esi]
  414a68:	icebp  
  414a69:	jns    0x414ac4
  414a6b:	pop    edi
  414a6c:	add    al,0x5e
  414a6e:	addr16 ja 0x414a07
  414a71:	mov    WORD PTR [eax+0x6d],fs
  414a74:	std    
  414a75:	xchg   esi,eax
  414a76:	ins    BYTE PTR es:[edi],dx
  414a77:	add    BYTE PTR [ecx-0x69caca90],ah
  414a7d:	mov    ds:0xa9f3715e,eax
  414a82:	pop    ecx
  414a83:	add    dl,al
  414a85:	(bad)  
  414a86:	bound  ebp,QWORD PTR [ecx-0x31]
  414a89:	jns    0x414af0
  414a8b:	addr16 mov ecx,0xaa5f75a2
  414a91:	jns    0x414af7
  414a93:	add    BYTE PTR [edx-0x4787709e],ch
  414a99:	inc    BYTE PTR [ebx-0x68ec698f]
  414a9f:	pop    esp
  414aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa1:	stc    
  414aa2:	xchg   edx,eax
  414aa3:	add    esi,DWORD PTR [ecx+eax*1-0x6b]
  414aa7:	addr16 jno 0x414ab8
  414aaa:	out    0x68,eax
  414aac:	jo     0x414abc
  414aae:	mov    WORD PTR [ecx-0x6a],?
  414ab1:	add    DWORD PTR [ebp+0x77],edi
  414ab4:	jle    0x414aad
  414ab6:	push   esp
  414ab7:	imul   edx,DWORD PTR [esi+0x68724e03],0xfffffffd
  414abe:	pop    edx
  414abf:	js     0x414b36
  414ac1:	bound  edi,QWORD PTR [edi]
  414ac3:	pop    ebp
	...
  414ad4:	add    BYTE PTR [eax],al
  414ad6:	aaa    
  414ad7:	sti    
  414ad8:	dec    ebx
  414ad9:	imul   edx,DWORD PTR [esi+0x35754e12],0x14
  414ae0:	out    0x61,eax
  414ae2:	xor    eax,0x3d6340f8
  414ae7:	stc    
  414ae8:	adc    al,0x4
  414aea:	xor    esi,esi
  414aec:	or     eax,0x6093576
  414af1:	ja     0x414b6c
  414af3:	(bad)  
  414af4:	fdiv   DWORD PTR [edx-0x3c]
  414af7:	bt     DWORD PTR [esi-0x6a],0x10
  414afc:	adc    BYTE PTR [ebp+esi*8+0x14],dh
  414b00:	out    0x64,eax
  414b02:	cmc    
  414b03:	clc    
  414b04:	add    esi,DWORD PTR [ecx-0x7]
  414b07:	adc    esp,edi
  414b09:	pop    eax
  414b0a:	clc    
  414b0b:	stc    
  414b0c:	lds    ebx,FWORD PTR [ebx-0x16]
  414b0f:	(bad)  
  414b10:	fdiv   DWORD PTR [ebp+esi*8+0x14]
  414b14:	shr    DWORD PTR [edx-0x7f],cl
  414b17:	(bad)  
  414b18:	retf   0xb571
  414b1b:	add    DWORD PTR [ebx-0x237a6],esi
  414b21:	call   0xcbae40d9
  414b26:	mov    ah,0x14
  414b28:	add    BYTE PTR [eax-0x779c004f],cl
  414b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2f:	bound  esi,QWORD PTR [edx-0x7a]
  414b32:	mov    eax,ds:0x95806aff
  414b37:	adc    DWORD PTR [eax+ecx*4+0x0],ebp
	...
  414b4b:	add    BYTE PTR [ebx+eax*1+0x72],bh
  414b4f:	jmp    0x8db24ade
  414b54:	pop    edx
  414b55:	sti    
  414b56:	(bad)  
  414b57:	js     0x414bc0
  414b59:	daa    
  414b5a:	addr16 pop edx
  414b5c:	jno    0x414bc0
  414b5e:	jp     0x414bc1
  414b60:	ja     0x414b72
  414b62:	bound  eax,QWORD PTR [edi+0x39]
  414b65:	bound  esi,QWORD PTR [ecx+0x48]
  414b68:	jno    0x414b7d
  414b6a:	arpl   WORD PTR [ebp-0x6e],dx
  414b6d:	sti    
  414b6e:	push   dx
  414b70:	cmp    DWORD PTR [edx+0x64],esp
  414b73:	dec    eax
  414b74:	neg    BYTE PTR ss:[esi+0x3a]
  414b78:	call   0xfff8:0x310c71fd
  414b7f:	adc    al,0x39
  414b81:	adc    DWORD PTR [ebp+ebx*1+0x31],esi
  414b85:	adc    DWORD PTR [ecx+ebp*8-0x10],esi
  414b89:	and    eax,0xfe040c76
  414b8e:	pusha  
  414b8f:	adc    bl,BYTE PTR [edx-0x9f39209]
  414b95:	div    DWORD PTR [ebp+0x4]
  414b98:	call   0xfffe:0xccdf5efe
  414b9f:	retf   
  414ba0:	in     al,dx
  414ba1:	imul   BYTE PTR [edi+ebx*8-0x10]
  414ba5:	bound  esp,QWORD PTR [ecx-0x3f]
  414ba8:	enter  0x6110,0x0
  414bac:	bound  esp,QWORD PTR [bp+0x72]
	...
  414bc0:	add    BYTE PTR [eax],al
  414bc2:	data16 std 
  414bc4:	ins    DWORD PTR es:[edi],dx
  414bc5:	fs das 
  414bc7:	jmp    FWORD PTR [edx+0x64]
  414bca:	aas    
  414bcb:	(bad)  
  414bcc:	pusha  
  414bcd:	jae    0x414bda
  414bcf:	sub    DWORD PTR [esi+0x79],ebp
  414bd2:	das    
  414bd3:	sub    BYTE PTR [ebx+0x6e],ch
  414bd6:	or     ah,BYTE PTR [edx+0x69]
  414bd9:	imul   ebx,DWORD PTR [esp+edx*1],0x20736b
  414be0:	je     0x414be2
  414be2:	cmp    eax,0x3d323254
  414be7:	push   esp
  414be8:	add    BYTE PTR [edx+0x6a],ah
  414beb:	add    esp,DWORD PTR [edx+0x6c]
  414bee:	pop    edx
  414bef:	or     eax,0x4f7e3100
  414bf4:	sub    eax,0x2d4f7e31
  414bf9:	add    BYTE PTR [ecx+ebp*1+0x5f],bl
  414bfd:	popa   
  414bfe:	pop    esp
  414bff:	sub    DWORD PTR [ecx+eiz*2-0x51],ebp
  414c03:	daa    
  414c04:	imul   esi,DWORD PTR [edx+0x4b],0xffffffff
  414c08:	ins    DWORD PTR es:[edi],dx
  414c09:	xor    ch,BYTE PTR [ecx+eiz*2+0x10806c65]
  414c10:	popa   
  414c11:	addr16 nop
  414c13:	add    al,BYTE PTR [eax]
  414c15:	xchg   ax,ax
  414c17:	sub    DWORD PTR [edx+eiz*2-0x62],esi
  414c1b:	sub    ch,BYTE PTR [ecx+esi*1+0x7f]
  414c1f:	sub    eax,0x28a6766b
  414c24:	arpl   WORD PTR [eax],ax
	...
  414c36:	add    BYTE PTR [eax],al
  414c38:	xchg   ecx,eax
  414c39:	push   DWORD PTR [ebx+0x68]
  414c3c:	sahf   
  414c3d:	sub    BYTE PTR [eax],al
  414c3f:	gs inc edx
  414c41:	sub    bl,BYTE PTR [ebp+0x6e]
  414c44:	dec    edx
  414c45:	add    ch,BYTE PTR [eax+eax*1-0x6a]
  414c49:	test   al,0x66
  414c4b:	ins    DWORD PTR es:[edi],dx
  414c4c:	rcr    DWORD PTR [ecx-0x394fff94],0x66
  414c53:	imul   esi,DWORD PTR [ecx-0x3affa063],0xaf6b589a
  414c5d:	jnp    0x414cb7
  414c5f:	pop    edi
  414c60:	scas   al,BYTE PTR es:[edi]
  414c61:	in     al,0x60
  414c63:	ins    BYTE PTR es:[edi],dx
  414c64:	mov    dl,0x7b
  414c66:	pop    ebx
  414c67:	pop    edi
  414c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c69:	fcom   QWORD PTR [edi+0x0]
  414c6c:	jl     0x414c72
  414c6e:	pop    ecx
  414c6f:	outs   dx,BYTE PTR ds:[esi]
  414c70:	xchg   esi,eax
  414c71:	retf   0x3274
  414c74:	mov    eax,ecx
  414c76:	pusha  
  414c77:	xor    al,0x84
  414c79:	jnp    0x414cde
  414c7b:	pop    edi
  414c7c:	je     0x414c90
  414c7e:	add    DWORD PTR [edx+0x73],esi
  414c81:	pop    ss
  414c82:	xor    esi,DWORD PTR [edx]
  414c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c85:	jnp    0x414cea
  414c87:	ins    BYTE PTR es:[edi],dx
  414c88:	ja     0x414ca3
  414c8a:	pop    eax
  414c8b:	pop    edi
  414c8c:	xchg   esi,eax
  414c8d:	sub    esi,DWORD PTR [esi+0x67]
  414c90:	cmp    BYTE PTR [eax],bl
  414c92:	pop    edi
  414c93:	add    BYTE PTR [edi+0x4c],al
  414c96:	pop    edi
  414c97:	jb     0x414cdb
  414c99:	jnp    0x414d01
  414c9b:	push   0x0
	...
  414cac:	add    BYTE PTR [eax],al
  414cae:	cmp    eax,DWORD PTR [edi+0x75]
  414cb1:	arpl   WORD PTR [edi],si
  414cb3:	jnp    0x414ce5
  414cb5:	xor    ebp,DWORD PTR [ebx-0x52]
  414cb8:	xor    BYTE PTR [eax],al
  414cba:	aaa    
  414cbb:	pop    ebp
  414cbc:	popa   
  414cbd:	arpl   WORD PTR [edx],ax
  414cbf:	stos   DWORD PTR es:[edi],eax
  414cc0:	add    DWORD PTR [eax-0x9],ebp
  414cc3:	xchg   DWORD PTR [ebp+0x61],ebx
  414cc6:	icebp  
  414cc7:	xchg   DWORD PTR [eax+0x0],esp
  414cca:	repnz push esi
  414ccc:	ins    BYTE PTR es:[edi],dx
  414ccd:	je     0x414cca
  414ccf:	xchg   DWORD PTR [ecx],eax
  414cd1:	jno    0x414cca
  414cd3:	(bad)  
  414cd4:	frstor [eax-0x6]
  414cd7:	bound  ebx,QWORD PTR [eax]
  414cd9:	xor    eax,0x371a50a4
  414cde:	xchg   esi,eax
  414cdf:	cli    
  414ce0:	(bad)  
  414ce1:	push   edi
  414ce2:	mov    edx,0xe15de6f3
  414ce7:	movzx  esp,WORD PTR [eax-0x3c]
  414ceb:	(bad)  
  414cec:	retf   
  414ced:	fs sar cl,0xc3
  414cf1:	push   edi
  414cf2:	mov    edx,0xb95ee6fd
  414cf7:	push   cs
  414cf8:	xchg   ebx,eax
  414cf9:	pusha  
  414cfa:	test   al,0x62
  414cfc:	mov    ah,BYTE PTR [edi+eax*4+0xf]
  414d00:	and    BYTE PTR [eax-0x6a],0xf
  414d04:	jnp    0x414d66
  414d06:	jb     0x414cfe
  414d08:	xchg   DWORD PTR [ebx],eax
  414d0a:	xchg   BYTE PTR [eax],dl
  414d0c:	mov    BYTE PTR [ebp+esi*2+0x10],ch
  414d10:	out    0x5b,eax
	...
  414d22:	add    BYTE PTR [eax],al
  414d24:	jnp    0x414d34
  414d26:	dec    ebx
  414d27:	pop    ecx
  414d28:	jnp    0x414d8c
  414d2a:	push   esi
  414d2b:	pop    ebx
  414d2c:	push   0x477145fe
  414d31:	bound  edi,QWORD PTR [edi+ebp*2]
  414d34:	inc    edi
  414d35:	push   cs
  414d36:	dec    ebx
  414d37:	pop    ebx
  414d38:	xor    eax,0x42634662
  414d3d:	std    
  414d3e:	cmp    DWORD PTR [esp+esi*1],eax
  414d41:	stc    
  414d42:	cmp    bl,BYTE PTR [eax+0x33]
  414d45:	add    DWORD PTR [ebx],ebx
  414d47:	pop    edi
  414d48:	daa    
  414d49:	bound  eax,QWORD PTR [esi]
  414d4b:	pop    esp
  414d4c:	xor    al,0xfe
  414d4e:	sbb    bl,BYTE PTR [edx-0x6a]
  414d51:	sti    
  414d52:	add    al,0x5c
  414d54:	cld    
  414d55:	not    DWORD PTR [ebx]
  414d57:	add    al,0xb1
  414d59:	push   eax
  414d5a:	mov    edx,0x4cc52f
  414d5f:	mov    esi,0xe9304bbd
  414d64:	xchg   ebp,eax
  414d65:	push   DWORD PTR [ebx-0x1e]
  414d68:	jmp    0x414d76
  414d6a:	imul   ecx,esi,0xdc74f4e3
  414d70:	xchg   ebp,eax
  414d71:	cli    
  414d72:	jae    0x414d49
  414d74:	lds    ecx,FWORD PTR [eax+0x2d]
  414d77:	push   ss
  414d78:	retf   
  414d79:	adc    ch,BYTE PTR [esi-0x38]
  414d7c:	lahf   
  414d7d:	add    DWORD PTR [edi-0xd],ebx
  414d80:	jge    0x414dd4
  414d82:	cmp    cl,bh
  414d84:	mov    ss,WORD PTR [edx]
  414d86:	ins    DWORD PTR es:[edi],dx
  414d87:	xchg   edi,eax
	...
  414d98:	add    BYTE PTR [eax],al
  414d9a:	lods   al,BYTE PTR ds:[esi]
  414d9b:	xor    eax,0xffa98865
  414da0:	sub    eax,0x126d99
  414da5:	cmp    DWORD PTR [ecx+0xe],0x359ec370
  414dac:	mov    BYTE PTR fs:[ebx+0x6b8d31ff],al
  414db3:	call   FWORD PTR [esi+0x7c]
  414db6:	jnp    0x414dec
  414db8:	popa   
  414db9:	push   esi
  414dba:	dec    ecx
  414dbb:	dec    eax
  414dbc:	cmp    BYTE PTR [ecx],bl
  414dbe:	stos   BYTE PTR es:[edi],al
  414dbf:	push   edx
  414dc0:	sub    eax,0x76f46f59
  414dc5:	(bad)  
  414dc6:	and    esi,DWORD PTR ss:[esp+ecx*2-0x64]
  414dcb:	adc    ch,BYTE PTR [eax+0x39]
  414dce:	xchg   edx,eax
  414dcf:	bound  ebp,QWORD PTR [eax+0x3d]
  414dd2:	adc    bh,BYTE PTR es:[edx]
  414dd5:	dec    BYTE PTR [esi+0x3f1776fe]
  414ddb:	mul    BYTE PTR [esi+0x15]
  414dde:	cmp    DWORD PTR [ebx+eiz*2],esi
  414de1:	sbb    al,0xaf
  414de3:	aaa    
  414de4:	push   ebx
  414de5:	(bad)  
  414de7:	adc    esi,DWORD PTR [esi+0x0]
  414dea:	lahf   
  414deb:	dec    ebp
  414dec:	sub    eax,DWORD PTR [ecx-0x4b]
  414def:	adc    BYTE PTR [esi],ch
  414df1:	and    DWORD PTR gs:[bx+si],eax
  414df5:	push   0x3a701263
  414dfa:	mov    BYTE PTR [ebx+0x62],bl
  414dfd:	outs   dx,DWORD PTR ds:[esi]
	...
  414e0e:	add    BYTE PTR [eax],al
  414e10:	push   ebx
  414e11:	or     eax,0x1e5c725d
  414e16:	gs je  0x414e6b
  414e19:	pop    es
  414e1a:	je     0x414e4a
  414e1c:	call   FWORD PTR [ecx]
  414e1e:	sub    ebx,DWORD PTR [ecx+0x3e]
  414e21:	dec    esi
  414e22:	je     0x414e74
  414e24:	add    DWORD PTR [ecx*2+0x5a07e32f],esi
  414e2b:	dec    ebx
  414e2c:	or     eax,0x1278615c
  414e31:	data16 add BYTE PTR [ecx+0x52],bl
  414e35:	cmp    eax,0x24335750
  414e3a:	inc    ebp
  414e3b:	dec    esp
  414e3c:	xor    dh,BYTE PTR [esi]
  414e3e:	push   ebp
  414e3f:	push   ebp
  414e40:	inc    esi
  414e41:	push   ss
  414e42:	inc    edi
  414e43:	inc    esp
  414e44:	inc    ecx
  414e45:	cmp    eax,0x2d2f454c
  414e4a:	push   ecx
  414e4b:	dec    ecx
  414e4c:	lods   al,BYTE PTR ds:[esi]
  414e4d:	adc    al,0x55
  414e4f:	push   eax
  414e50:	mov    ds:0x86304423,eax
  414e55:	adc    eax,DWORD PTR [ebp+0x31]
  414e58:	leave  
  414e59:	xor    eax,0x65af0000
  414e5e:	add    BYTE PTR [edx],al
  414e60:	scas   eax,DWORD PTR es:[edi]
  414e61:	cmp    cl,BYTE PTR [ebx+0x44]
  414e64:	xchg   edx,eax
  414e65:	addr16 std 
  414e67:	(bad)  
  414e68:	mov    edi,0xaf000065
  414e6d:	add    BYTE PTR gs:[ebx+0x68],dl
  414e71:	inc    eax
  414e72:	push   esp
  414e73:	push   edi
	...
  414e84:	add    BYTE PTR [eax],al
  414e86:	xchg   esi,eax
  414e87:	dec    edx
  414e88:	push   edx
  414e89:	inc    ebx
  414e8a:	jmp    0x7159:0x4615b5e
  414e91:	ins    DWORD PTR es:[edi],dx
  414e92:	lock ja 0x414eda
  414e95:	push   ebp
  414e96:	jmp    FWORD PTR [ecx+0x60]
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	loope  0x414f18
  414e9c:	inc    ebp
  414e9d:	inc    ecx
  414e9e:	jmp    0x414e3d
  414ea0:	outs   dx,DWORD PTR ds:[esi]
  414ea1:	arpl   ax,bp
  414ea3:	xchg   edi,eax
  414ea4:	dec    ebx
  414ea5:	arpl   sp,ax
  414ea7:	pushf  
  414ea8:	pop    esp
  414ea9:	ins    DWORD PTR es:[edi],dx
  414eaa:	mov    eax,0xaf6e50cf
  414eaf:	cdq    
  414eb0:	jb     0x414f26
  414eb2:	mov    bh,0xaf
  414eb4:	push   ebp
  414eb5:	add    bl,cl
  414eb7:	test   eax,0xb7a56e5c
  414ebc:	fs ins BYTE PTR es:[edi],dx
  414ebe:	mov    dl,0xbc
  414ec0:	ins    DWORD PTR es:[edi],dx
  414ec1:	jb     0x414e72
  414ec3:	icebp  
  414ec4:	pop    esi
  414ec5:	add    BYTE PTR [edx-0x1e],bl
  414ec8:	jb     0x414f3a
  414eca:	jp     0x414eb6
  414ecc:	ins    BYTE PTR es:[edi],dx
  414ecd:	dec    esi
  414ece:	ja     0x414ea6
  414ed0:	pusha  
  414ed1:	add    BYTE PTR [edx-0x75],bl
  414ed4:	add    DWORD PTR [eax],eax
  414ed6:	xchg   esi,eax
  414ed7:	mov    eax,DWORD PTR [ecx]
  414ed9:	add    BYTE PTR [esi+0x64635a8b],dl
  414edf:	sbb    DWORD PTR [edi+0x6c],ebx
  414ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee3:	pop    ebp
  414ee4:	push   ss
  414ee5:	fs inc edx
  414ee7:	daa    
  414ee8:	add    al,0x55
	...
  414efa:	add    BYTE PTR [eax],al
  414efc:	bound  edi,QWORD PTR [edi*1+0x614a4a63]
  414f03:	je     0x414f34
  414f05:	cmp    DWORD PTR [edi+0x41],ebx
  414f08:	inc    ecx
  414f09:	sub    DWORD PTR [ecx+0x6d],esi
  414f0c:	cmp    ah,BYTE PTR [esi]
  414f0e:	push   ecx
  414f0f:	arpl   WORD PTR ds:0x2b5d1a62,sp
  414f15:	adc    BYTE PTR [eax],dh
  414f17:	pusha  
  414f18:	xchg   esi,eax
  414f19:	adc    bl,BYTE PTR [ecx]
  414f1b:	push   edi
  414f1c:	test   DWORD PTR ds:0x6d9731a,0x5e7571b
  414f26:	cli    
  414f27:	jb     0x414f22
  414f29:	syscall 
  414f2b:	cmp    eax,0x3e762f2
  414f30:	xchg   esi,eax
  414f31:	(bad)  
  414f32:	out    0x3,eax
  414f34:	xchg   esi,eax
  414f35:	(bad)  
  414f36:	out    0x62,eax
  414f38:	(bad)  
  414f39:	stc    
  414f3a:	(bad)  
  414f3b:	outs   dx,DWORD PTR ds:[esi]
  414f3c:	xchg   DWORD PTR [edi*8-0x18f14da1],esi
  414f43:	inc    edx
  414f44:	(bad)  
  414f45:	stc    
  414f46:	mov    dh,0x6f
  414f48:	lds    edx,FWORD PTR [eax]
  414f4a:	mov    bh,0x71
  414f4c:	mov    ebx,0xaa62c3f6
  414f51:	mov    BYTE PTR es:[edi-0x47],ch
  414f55:	(bad)  
  414f56:	out    0x3,eax
  414f58:	xchg   esi,eax
  414f59:	(bad)  
  414f5a:	lds    esp,FWORD PTR [eax-0x72]
  414f5d:	add    eax,0x52e7
	...
  414f72:	jae    0x414f7c
  414f74:	jnp    0x414fe4
  414f76:	pop    ecx
  414f77:	hlt    
  414f78:	add    DWORD PTR [edi+0x4b],0x9
  414f7c:	test   DWORD PTR [ecx-0x57],edx
  414f7f:	adc    al,0xe7
  414f81:	push   esi
  414f82:	add    ax,0x455
  414f86:	fnstcw WORD PTR [edi-0x19]
  414f89:	add    DWORD PTR [edi+0xa],0x4c
  414f8d:	pop    eax
  414f8e:	cmp    dh,BYTE PTR [ebx]
  414f90:	sbb    DWORD PTR [esi],edx
  414f92:	cmp    cl,BYTE PTR [esi]
  414f94:	push   ebx
  414f95:	add    al,0x67
  414f97:	sub    ah,BYTE PTR [esi]
  414f99:	pop    edi
  414f9a:	sub    ch,BYTE PTR [eax]
  414f9c:	add    BYTE PTR [esi+0x4e],al
  414f9f:	push   es
  414fa0:	arpl   WORD PTR [ebx],di
  414fa2:	dec    edx
  414fa3:	pop    ds
  414fa4:	je     0x414fb7
  414fa6:	push   ebp
  414fa7:	bound  eax,QWORD PTR [eax]
  414fa9:	jmp    0x1141b243
  414fae:	lods   eax,DWORD PTR ds:[esi]
  414faf:	aas    
  414fb0:	add    BYTE PTR [ebp+ebx*4+0x3f],bl
  414fb4:	add    BYTE PTR [ebp+ebx*4+0x3f],ah
  414fb8:	add    BYTE PTR [edx],bh
  414fba:	lea    edi,[edi]
  414fbc:	add    BYTE PTR [eax-0x67ffc073],ch
  414fc2:	jge    0x415003
  414fc4:	add    BYTE PTR [eax+0x7d],cl
  414fc7:	aas    
  414fc8:	add    BYTE PTR [edi-0x53],dl
  414fcb:	aas    
  414fcc:	add    ah,ah
  414fce:	scas   eax,DWORD PTR es:[edi]
  414fcf:	aas    
  414fd0:	add    BYTE PTR [eax],cl
  414fd2:	pushf  
  414fd3:	aas    
  414fd4:	add    BYTE PTR [ebx],al
	...
  414fe6:	add    BYTE PTR [eax],al
  414fe8:	pushf  
  414fe9:	aas    
  414fea:	add    BYTE PTR [edi-0x4dffc071],bl
  414ff0:	(bad)  
  414ff1:	aas    
  414ff2:	add    cl,ch
  414ff4:	xchg   ebp,eax
  414ff5:	bound  eax,QWORD PTR [eax]
  414ff7:	call   0xe4c1b291
  414ffc:	xchg   ebp,eax
  414ffd:	bound  eax,QWORD PTR [eax]
  414fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415000:	jl     0x415044
  415002:	inc    esp
  415003:	jle    0x41507b
  415005:	repz push 0xffffff8c
  415008:	arpl   si,si
  41500a:	jo     0x414ff5
  41500c:	xchg   esp,eax
  41500d:	bound  eax,QWORD PTR [eax]
  41500f:	imul   ebx,DWORD PTR [edx+eiz*2-0xdab1700],0xf6752d6f
  41501a:	pop    esi
  41501b:	jmp    0x6941b2b4
  415020:	xchg   ecx,eax
  415021:	bound  eax,QWORD PTR [eax]
  415023:	jmp    0xa25db1
  415028:	dec    esi
  415029:	sbb    ah,BYTE PTR [eax]
  41502b:	inc    ecx
  41502c:	outs   dx,DWORD PTR ds:[esi]
  41502d:	test   BYTE PTR [ebx+0x61],0x6b
  415031:	add    eax,DWORD PTR [eax]
  415033:	add    DWORD PTR [edi-0x50df7f9e],ebp
  415039:	bound  eax,QWORD PTR [eax]
  41503b:	inc    ebx
  41503c:	sahf   
  41503d:	add    ebp,DWORD PTR [eax+0x65]
  415040:	jg     0x4150a3
  415042:	add    BYTE PTR [eax],al
  415044:	out    dx,eax
  415045:	inc    eax
  415046:	add    BYTE PTR [eax],al
  415048:	outs   dx,DWORD PTR ds:[esi]
  415049:	and    ebp,DWORD PTR [ebx+0x6f]
	...
  41505c:	add    BYTE PTR [eax],al
  41505e:	test   BYTE PTR [ecx],bl
  415060:	popa   
  415061:	jae    0x4150e2
  415063:	popa   
  415064:	add    BYTE PTR [eax],al
  415066:	out    dx,eax
  415067:	inc    ebx
  415068:	add    BYTE PTR [eax],al
  41506a:	outs   dx,DWORD PTR ds:[esi]
  41506b:	cmp    ah,BYTE PTR [ebp+0x73]
  41506e:	imul   edx,DWORD PTR [edi],0x72
  415071:	jns    0x4150b2
  415073:	add    BYTE PTR fs:[eax],al
  415076:	scas   eax,DWORD PTR es:[edi]
  415077:	jl     0x415076
  415079:	jmp    FWORD PTR [edi]
  41507b:	xor    eax,0x16fb2075
  415080:	pop    edi
  415081:	jne    0x4150d5
  415083:	sbb    eax,0x61dc746e
  415088:	add    al,BYTE PTR [eax]
  41508a:	das    
  41508b:	loop   0x4150ac
  41508d:	add    bh,bh
  41508f:	popa   
  415090:	aas    
  415091:	outs   dx,DWORD PTR ds:[esi]
  415092:	adc    dl,BYTE PTR ds:0x20cf6e6b
  415098:	jo     0x41510a
  41509a:	sub    eax,DWORD PTR [ecx]
  41509c:	je     0x4150ff
  41509e:	jmp    DWORD PTR [eax+0x0]
  4150a1:	add    BYTE PTR [edi+0x5e],bh
  4150a4:	add    BYTE PTR [eax],al
  4150a6:	out    dx,eax
  4150a7:	xor    al,0x75
  4150a9:	and    BYTE PTR [edi+0x6a745f0f],bl
  4150af:	adc    al,0x61
  4150b1:	jae    0x415049
  4150b3:	mov    eax,DWORD PTR [ebx]
  4150b5:	add    BYTE PTR [esi-0x69ffcdf5],dl
  4150bb:	mov    eax,DWORD PTR [esi+0x6d]
  4150be:	inc    ebx
  4150bf:	cs jno 0x415130
	...
  4150d2:	add    BYTE PTR [eax],al
  4150d4:	jbe    0x415125
  4150d6:	jno    0x415139
  4150d8:	sub    edi,DWORD PTR [esi]
  4150da:	outs   dx,BYTE PTR ds:[si]
  4150dc:	and    bl,BYTE PTR [eax+0x4]
  4150df:	add    dl,BYTE PTR [esi-0x69d27e75]
  4150e5:	mov    eax,DWORD PTR [ecx]
  4150e7:	inc    ecx
  4150e8:	icebp  
  4150e9:	jle    0x41515b
  4150eb:	ins    DWORD PTR es:[edi],dx
  4150ec:	call   0x3a5959c
  4150f1:	push   ebx
  4150f2:	jb     0x41515b
  4150f4:	in     eax,0x7f
  4150f6:	push   ebx
  4150f7:	pop    edi
  4150f8:	jmp    0x72bf:0xb6635a62
  4150ff:	ins    DWORD PTR es:[edi],dx
  415100:	ret    0x198
  415103:	dec    DWORD PTR [ecx-0x75]
  415106:	xor    DWORD PTR [eax],0x3f018b96
  41510c:	mov    dl,0x96
  41510e:	ins    BYTE PTR es:[edi],dx
  41510f:	outs   dx,BYTE PTR ds:[esi]
  415110:	mov    edi,0xb77255b8
  415115:	mov    edi,0x6bbb766c
  41511a:	cmp    BYTE PTR [ebp-0x57],ch
  41511d:	xlat   BYTE PTR ds:[ebx]
  41511e:	push   esi
  41511f:	add    BYTE PTR [edi-0x6c7ffe75],dl
  415125:	mov    eax,DWORD PTR [ecx]
  415127:	add    BYTE PTR [esi-0x1a],ah
  41512a:	push   ebx
  41512b:	jno    0x415196
  41512d:	aad    0x64
  41512f:	ins    BYTE PTR es:[edi],dx
  415130:	xchg   esi,eax
  415131:	fdiv   DWORD PTR [edx+0x66]
  415134:	(bad)  
  415135:	cld    
  415136:	arpl   WORD PTR [edx+0x0],si
	...
  415149:	add    BYTE PTR [ebx-0x11],bh
  41514c:	push   eax
  41514d:	addr16 jne 0x4151b2
  415150:	pop    ecx
  415151:	jae    0x41519a
  415153:	or     eax,0x156a5845
  415158:	inc    eax
  415159:	jb     0x415195
  41515b:	or     eax,0x215a5756
  415160:	cmp    al,0x56
  415162:	and    al,0x7
  415164:	dec    ebp
  415165:	pop    eax
  415166:	inc    eax
  415167:	pop    es
  415168:	cmp    DWORD PTR [edi+0x39],edx
  41516b:	or     eax,0xfa55403d
  415170:	push   ss
  415171:	jo     0x415176
  415173:	icebp  
  415174:	add    edx,DWORD PTR [esi-0x16]
  415177:	ud0    ebp,DWORD PTR [eax-0xe]
  41517b:	push   cs
  41517c:	(bad)  
  41517d:	dec    ecx
  41517e:	jmp    0x41518e
  415180:	or     ebp,DWORD PTR [ecx-0x1c]
  415183:	out    dx,eax
  415184:	out    0x33,al
  415186:	fisttp DWORD PTR [edi]
  415188:	sbb    esp,DWORD PTR [esi*4-0x3db43911]
  41518f:	push   ss
  415190:	mov    bh,0x32
  415192:	or     DWORD PTR [edi+edx*1+0x11],0x56c62a9c
  41519a:	retf   0x738
  41519d:	sub    edi,eax
  41519f:	ins    DWORD PTR es:[edi],dx
  4151a0:	icebp  
  4151a1:	inc    esp
  4151a2:	mov    bh,0xff
  4151a4:	ret    
  4151a5:	push   ebx
  4151a6:	mov    ds:0x732e0738,al
  4151ab:	dec    eax
  4151ac:	fmul   QWORD PTR ds:0x0
	...
  4151be:	add    BYTE PTR [eax],al
  4151c0:	pop    ecx
  4151c1:	dec    DWORD PTR [ecx-0x34097998]
  4151c7:	dec    eax
  4151c8:	js     0x4151c9
  4151ca:	test   DWORD PTR [edi+0x79],esp
  4151cd:	or     al,0x86
  4151cf:	sbb    eax,0x688b09b6
  4151d4:	xor    dh,0x8f
  4151d7:	push   edi
  4151d8:	popa   
  4151d9:	dec    esi
  4151da:	add    cl,cl
  4151dc:	mov    bl,0x39
  4151de:	outs   dx,DWORD PTR ds:[esi]
  4151df:	lods   al,BYTE PTR ds:[esi]
  4151e0:	test   DWORD PTR [edi+0xa],esp
  4151e3:	sub    al,BYTE PTR [edi+0xc]
  4151e6:	je     0x41522c
  4151e8:	inc    esp
  4151e9:	imul   BYTE PTR [edx]
  4151eb:	and    eax,0x55650c39
  4151f0:	sub    bh,BYTE PTR [eax]
  4151f2:	and    BYTE PTR [esi+eiz*1],cl
  4151f5:	out    dx,eax
  4151f6:	or     dh,bl
  4151f8:	push   edx
  4151f9:	or     eax,0x139476e
  4151fe:	je     0x415240
  415200:	daa    
  415201:	or     al,0x3a
  415203:	leave  
  415204:	cli    
  415205:	push   cs
  415206:	ins    DWORD PTR es:[edi],dx
  415207:	sbb    dh,cl
  415209:	or     ch,BYTE PTR [bp+si]
  41520c:	pop    es
  41520d:	or     eax,0xf7040474
  415212:	sub    bl,BYTE PTR ds:0xc362f2cd
  415218:	mov    ch,0x1b
  41521a:	jo     0x415215
  41521c:	icebp  
  41521d:	add    esp,DWORD PTR [ecx+0x8]
  415220:	mov    esi,0xd76d03
	...
  415235:	add    BYTE PTR [esi-0x4f2a9ef3],al
  41523b:	imul   BYTE PTR [edx]
  41523d:	fucompp 
  41523f:	lock (bad) 
  415241:	enter  0x67a8,0xa
  415245:	stos   BYTE PTR es:[edi],al
  415246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415247:	or     al,0x74
  415249:	les    esp,FWORD PTR [edi-0x5853d50a]
  41524f:	add    DWORD PTR [ebp-0x3b],ebp
  415252:	lods   al,BYTE PTR ds:[esi]
  415253:	or     al,0x65
  415255:	jecxz  0x41520c
  415257:	add    BYTE PTR [edi-0x71],ah
  41525a:	je     0x41524c
  41525c:	jbe    0x415242
  41525e:	xchg   ebx,eax
  41525f:	(bad)  
  415261:	test   BYTE PTR [ebx+0x47],ah
  415264:	aas    
  415265:	add    BYTE PTR [eax],ah
  415267:	add    al,0x6e
  415269:	je     0x415240
  41526b:	ds dec ecx
  41526d:	outs   dx,DWORD PTR ds:[esi]
  41526e:	or     BYTE PTR gs:[esp+ebp*2+0xe],ch
  415273:	xor    dh,BYTE PTR [esi+ebp*1]
  415276:	scas   eax,DWORD PTR es:[edi]
  415277:	inc    esi
  415278:	sub    BYTE PTR [ebx+0x58],ah
  41527b:	or     esi,DWORD PTR [eax+0x61]
  41527e:	arpl   WORD PTR [edi],ax
  415280:	bound  ebp,QWORD PTR [edx+edx*2+0x5d]
  415284:	and    BYTE PTR [ebp-0x74],cl
  415287:	daa    
  415288:	inc    ecx
  415289:	and    BYTE PTR [edx-0x70c4cfd0],ah
  41528f:	cmp    DWORD PTR [ebp+0x6e],esp
  415292:	push   ebx
  415293:	icebp  
  415294:	jb     0x415309
  415296:	pop    edi
  415297:	pop    ebp
  415298:	cmp    BYTE PTR [ecx],ch
	...
  4152aa:	add    BYTE PTR [eax],al
  4152ac:	jp     0x415316
  4152ae:	or     DWORD PTR [edx],ecx
  4152b0:	outs   dx,DWORD PTR ds:[esi]
  4152b1:	pop    ds
  4152b2:	imul   ebp,DWORD PTR [esi-0x5d],0x1
  4152b6:	outs   dx,BYTE PTR ds:[esi]
  4152b7:	je     0x415303
  4152b9:	sub    ah,BYTE PTR [ecx+0x6e]
  4152bc:	nop
  4152bd:	sbb    ch,BYTE PTR [eax+0x3a]
  4152c0:	outs   dx,DWORD PTR ds:[esi]
  4152c1:	sub    ch,BYTE PTR [ebx+0x63]
  4152c4:	mov    ds,WORD PTR [edx]
  4152c6:	outs   dx,DWORD PTR gs:[esi]
  4152c8:	imul   ebx,DWORD PTR [eax+0x0],0x2031f247
  4152cf:	and    eax,0x5448465c
  4152d4:	add    esi,DWORD PTR [esi]
  4152d6:	sub    esi,DWORD PTR [ecx]
  4152d8:	mov    DWORD PTR [esi+0x9],ecx
  4152db:	or     ah,bh
  4152dd:	repnz outs dx,BYTE PTR ds:[esi]
  4152df:	je     0x415306
  4152e1:	inc    esi
  4152e2:	and    DWORD PTR [ebx+0x3a],esi
  4152e5:	push   0x11c633d
  4152ea:	jo     0x415360
  4152ec:	cmc    
  4152ed:	inc    ebp
  4152ee:	sub    ch,BYTE PTR [edi]
  4152f0:	xchg   esi,eax
  4152f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152f2:	push   cs
  4152f3:	or     dl,BYTE PTR [edi-0x14]
  4152f6:	arpl   WORD PTR fs:[esi-0x9],sp
  4152fa:	sub    eax,0x70ec7843
  4152ff:	outs   dx,DWORD PTR fs:[esi]
  415301:	loope  0x41536b
  415303:	cmp    dh,BYTE PTR [esi+0x406365e2]
  415309:	pop    ss
  41530a:	imul   esi,DWORD PTR [edi+ecx*2+0x67],0x24
  41530f:	sub    al,BYTE PTR [eax]
	...
  415321:	add    BYTE PTR [ebp+0x1a],bh
  415324:	pop    ds
  415325:	xor    BYTE PTR [ebx+0x406d4285],cl
  41532b:	adc    DWORD PTR [edi+0x61],esp
  41532e:	and    dl,BYTE PTR [edx]
  415330:	ins    DWORD PTR es:[edi],dx
  415331:	outs   dx,BYTE PTR ds:[esi]
  415332:	pop    esp
  415333:	imul   esp,DWORD PTR [ecx+0x6c],0x29
  415337:	cmp    al,0x67
  415339:	or     ebx,DWORD PTR [esi+esi*1-0x58fb9caf]
  415340:	inc    esp
  415341:	gs sti 
  415343:	popa   
  415344:	pop    eax
  415345:	cmp    dh,BYTE PTR [esi-0x8592aa]
  41534b:	dec    edi
  41534c:	jo     0x4153ad
  41534e:	mov    ecx,0xb6302baf
  415353:	mov    ds:0x7beb6d62,eax
  415358:	fs je  0x41531a
  41535b:	lods   eax,DWORD PTR ds:[esi]
  41535c:	ins    DWORD PTR es:[edi],dx
  41535d:	arpl   WORD PTR [ebp-0x30aeb095],cx
  415363:	(bad)  
  415364:	and    DWORD PTR [ebx],esi
  415366:	push   0xc920195b
  41536b:	xchg   edx,eax
  41536c:	imul   esp,DWORD PTR [ecx+edi*4-0x50],0x52
  415371:	and    BYTE PTR [edi+0x73],bl
  415374:	sub    al,0xb
  415376:	mov    WORD PTR [esi+0x62c00007],ss
  41537c:	out    0x2d,eax
  41537e:	mov    eax,0xb029bb62
  415383:	dec    esp
  415384:	out    0x29,eax
	...
  415396:	add    BYTE PTR [eax],al
  415398:	test   al,0x4c
  41539a:	out    0x6d,eax
  41539c:	jne    0x41538c
  41539e:	xchg   DWORD PTR [ebx+0x71],edx
  4153a1:	xor    eax,0x67a2db9
  4153a6:	add    DWORD PTR [ebx],0x48
  4153a9:	push   DWORD PTR [edx+0x44]
  4153ac:	inc    esi
  4153ad:	or     ebp,DWORD PTR [ecx]
  4153af:	pop    ecx
  4153b0:	xor    BYTE PTR [eax],al
  4153b2:	inc    esp
  4153b3:	push   edx
  4153b4:	pop    eax
  4153b5:	hlt    
  4153b6:	dec    ebx
  4153b7:	imul   edx,DWORD PTR [esi+0x45584428],0x55524bf5
  4153c1:	or     BYTE PTR [ecx+esi*2],dh
  4153c4:	xchg   esi,eax
  4153c5:	bound  eax,QWORD PTR [esi+0x70]
  4153c8:	xor    eax,0xfa2df935
  4153cd:	push   es
  4153ce:	adc    eax,DWORD PTR [edi+eiz*8]
  4153d1:	out    dx,al
  4153d2:	add    eax,0x4fe064f
  4153d7:	xor    eax,DWORD PTR [edx]
  4153d9:	or     BYTE PTR [ecx],bl
  4153db:	gs sti 
  4153dd:	std    
  4153de:	out    0x3,al
  4153e0:	leave  
  4153e1:	(bad)  
  4153e2:	hlt    
  4153e3:	fs out 0x9,al
  4153e6:	mov    edx,0xfafea811
  4153eb:	outs   dx,DWORD PTR ds:[esi]
  4153ec:	xchg   esi,eax
  4153ed:	and    ebx,edx
  4153ef:	outs   dx,DWORD PTR ds:[esi]
  4153f0:	mov    ebx,0xb557c803
  4153f5:	and    ebp,eax
  4153f7:	ror    DWORD PTR [bx+si],1
  4153fa:	rcl    BYTE PTR [edi+0x0],0x0
	...
  41540e:	mov    ecx,0xac6cd301
  415413:	std    
  415414:	cdq    
  415415:	ins    BYTE PTR es:[edi],dx
  415416:	mov    edx,0xadaa0062
  41541b:	add    esp,DWORD PTR [ecx-0x3e]
  41541e:	leave  
  41541f:	add    eax,0x2b7b8c69
  415424:	arpl   WORD PTR [edi+esi*2+0x6d9a7203],cx
  41542b:	jmp    FWORD PTR [edi-0x17]
  41542e:	pop    ebx
  41542f:	hlt    
  415430:	bound  ecx,QWORD PTR [esp+eiz*4+0x54e963ff]
  415437:	hlt    
  415438:	bound  ecx,QWORD PTR [ebp+0x7c73084e]
  41543e:	ds hlt 
  415440:	pop    esi
  415441:	pop    ebp
  415442:	xor    DWORD PTR [edi],esi
  415444:	add    BYTE PTR [edx],ch
  415446:	add    esp,DWORD PTR fs:[edi+ebp*1+0x64]
  41544b:	add    esp,DWORD PTR [ebx-0x17]
  41544e:	push   esi
  41544f:	hlt    
  415450:	jbe    0x41548b
  415452:	dec    esi
  415453:	sbb    eax,0xf1693563
  415458:	bound  edi,QWORD PTR [ebx]
  41545a:	dec    edi
  41545b:	add    esi,DWORD PTR [edi-0x17]
  41545e:	(bad)  
  41545f:	hlt    
  415460:	jbe    0x41547b
  415462:	out    dx,al
  415463:	and    edi,DWORD PTR [eax+0x19]
  415466:	repz hlt 
  415468:	jae    0x41548c
  41546a:	icebp  
  41546b:	out    dx,eax
  41546c:	jmp    FWORD PTR [ecx]
  41546e:	(bad)  
  41546f:	out    dx,eax
  415470:	outs   dx,DWORD PTR ds:[esi]
  415471:	std    
	...
  415482:	add    BYTE PTR [eax],al
  415484:	rol    DWORD PTR [ebx],1
  415486:	jno    0x41547d
  415488:	mov    DWORD PTR ds:0xeff12277,0xefe429ff
  415492:	outs   dx,DWORD PTR ds:[esi]
  415493:	fld    QWORD PTR [edi-0x4b3b93fd]
  415499:	icebp  
  41549a:	bound  ebp,QWORD PTR [edx-0x3b8bf756]
  4154a0:	int    0xee
  4154a2:	(bad)  
  4154a3:	dec    DWORD PTR ds:0xdd657600
  4154a9:	push   cs
  4154aa:	push   esp
  4154ab:	outs   dx,DWORD PTR ds:[esi]
  4154ac:	cld    
  4154ad:	jmp    FWORD PTR [ebx+0x66]
  4154b0:	jmp    DWORD PTR ds:0x33216570
  4154b6:	jb     0x415527
  4154b8:	or     al,0x0
  4154ba:	outs   dx,DWORD PTR ds:[esi]
  4154bb:	jae    0x4154f8
  4154bd:	push   es
  4154be:	addr16 gs jno 0x415525
  4154c2:	inc    ebp
  4154c3:	ins    DWORD PTR es:[edi],dx
  4154c4:	outs   dx,DWORD PTR ds:[esi]
  4154c5:	add    BYTE PTR [edx+0x73],dh
  4154c8:	adc    BYTE PTR ds:0x270a745d,al
  4154ce:	imul   esp,DWORD PTR [edi+0x18],0x0
  4154d2:	fs dec edi
  4154d4:	popa   
  4154d5:	das    
  4154d6:	outs   dx,DWORD PTR ds:[esi]
  4154d7:	gs pop ebp
  4154d9:	pop    esi
  4154da:	inc    ebx
  4154db:	gs pop ebx
  4154dd:	cmp    ch,BYTE PTR [ebx+0x6b]
  4154e0:	pop    edx
  4154e1:	or     BYTE PTR [ebp+0x6e],al
  4154e4:	pop    ecx
  4154e5:	add    eax,0x6d72
	...
  4154fa:	dec    esi
  4154fb:	sbb    ah,BYTE PTR [ebp+0x6f]
  4154fe:	push   ecx
  4154ff:	pop    esi
  415500:	aas    
  415501:	outs   dx,DWORD PTR ds:[esi]
  415502:	ror    DWORD PTR [ecx+eiz*2],1
  415505:	jb     0x4154b2
  415507:	xor    esp,DWORD PTR [ebp+0x64]
  41550a:	retf   
  41550b:	pop    es
  41550c:	dec    edi
  41550d:	je     0x4154ac
  41550f:	or     DWORD PTR [esi+0x67],ebp
  415512:	lods   al,BYTE PTR ds:[esi]
  415513:	or     DWORD PTR [ecx+eax*2+0x7f],esp
  415517:	imul   esp,DWORD PTR es:[edi-0x70],0x4
  41551c:	push   ecx
  41551d:	jae    0x4154a9
  41551f:	adc    BYTE PTR ds:0x6b07b300,bh
  415525:	imul   ebp,DWORD PTR [edx+0x12],0x50
  415529:	jb     0x415591
  41552b:	adc    BYTE PTR [ebp+0x6c],ah
  41552e:	xchg   esi,eax
  41552f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415530:	fs arpl ax,cx
  415533:	stos   BYTE PTR es:[edi],al
  415534:	ins    DWORD PTR es:[edi],dx
  415535:	jae    0x4154ea
  415537:	retf   0x3f01
  41553a:	mov    edx,0xa2715691
  41553f:	xlat   BYTE PTR ds:[ebx]
  415540:	ins    BYTE PTR es:[edi],dx
  415541:	imul   edi,DWORD PTR [ebx-0x4b],0xd57f7231
  415548:	push   0x6c
  41554a:	jnp    0x415528
  41554c:	data16 jno 0x4154e5
  41554f:	mov    esp,DWORD PTR [eax+0x72]
  415552:	outs   dx,DWORD PTR ds:[esi]
  415553:	fist   DWORD PTR [ebp+0x31]
  415556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415557:	lea    esp,[ebp+0x6c]
  41555a:	jb     0x4154e7
  41555c:	inc    eax
  41555d:	arpl   WORD PTR [eax],ax
	...
  41556f:	add    BYTE PTR [edi+esi*8+0x4b],ah
  415573:	jo     0x4155b0
  415575:	cmc    
  415576:	das    
  415577:	ja     0x4155be
  415579:	pop    ss
  41557a:	pop    edi
  41557b:	imul   esp,DWORD PTR [ebp+0xf],0x69
  41557f:	jb     0x4155b4
  415581:	dec    edx
  415582:	add    al,0x41
  415584:	cmp    ebx,DWORD PTR [ecx]
  415586:	push   eax
  415587:	inc    ebx
  415588:	cmp    BYTE PTR [esi],dh
  41558a:	addr16 inc ecx
  41558c:	cmp    edi,DWORD PTR [ecx]
  41558e:	push   eax
  41558f:	xor    BYTE PTR [bp+si],ah
  415592:	gs pop edi
  415594:	or     bl,BYTE PTR [edi]
  415596:	push   ebp
  415597:	inc    edi
  415598:	clc    
  415599:	cmp    BYTE PTR [eax+0x6d],dl
  41559c:	add    al,0x5f
  41559e:	add    al,0x41
  4155a0:	repz pop ecx
  4155a2:	push   eax
  4155a3:	inc    ecx
  4155a4:	add    dh,BYTE PTR [ebp+0x56]
  4155a7:	arpl   bp,ax
  4155a9:	ja     0x415615
  4155ab:	jb     0x4155a8
  4155ad:	mov    eax,DWORD PTR [esi+0x72]
  4155b0:	fistp  QWORD PTR [ebx+0x4d]
  4155b3:	aas    
  4155b4:	mov    ch,0x7a
  4155b6:	push   eax
  4155b7:	les    esp,FWORD PTR [bp+si-0x34]
  4155bb:	inc    esi
  4155bc:	mov    ch,0xf0
  4155be:	shr    BYTE PTR [eax+esi*4+0xb],cl
  4155c2:	retf   0xaa64
  4155c5:	push   DWORD PTR [esi-0x38134eab]
  4155cb:	dec    edi
  4155cc:	mov    ch,0x29
  4155ce:	les    ebx,FWORD PTR [esi+edx*4+0x62]
  4155d2:	out    0x3,eax
	...
  4155e4:	add    BYTE PTR [eax],al
  4155e6:	xchg   esi,eax
  4155e7:	(bad)  
  4155e8:	out    0x3,eax
  4155ea:	xchg   esi,eax
  4155eb:	(bad)  
  4155ec:	out    0x3,eax
  4155ee:	xchg   esi,eax
  4155ef:	(bad)  
  4155f0:	out    0x3,eax
  4155f2:	xchg   esi,eax
  4155f3:	(bad)  
  4155f4:	out    0x3,eax
  4155f6:	xchg   esi,eax
  4155f7:	(bad)  
  4155f8:	out    0x3,eax
  4155fa:	xchg   esi,eax
  4155fb:	(bad)  
  4155fc:	out    0x3,eax
  4155fe:	xchg   esi,eax
  4155ff:	(bad)  
  415600:	out    0x3,eax
  415602:	xchg   esi,eax
  415603:	(bad)  
  415604:	out    0x3,eax
  415606:	xchg   esi,eax
  415607:	(bad)  
  415608:	out    0x3,eax
  41560a:	xchg   esi,eax
  41560b:	(bad)  
  41560c:	out    0x3,eax
  41560e:	xchg   esi,eax
  41560f:	(bad)  
  415610:	out    0x3,eax
  415612:	xchg   esi,eax
  415613:	(bad)  
  415614:	out    0x3,eax
  415616:	xchg   esi,eax
  415617:	(bad)  
  415618:	out    0x3,eax
  41561a:	xchg   esi,eax
  41561b:	(bad)  
  41561c:	out    0x3,eax
  41561e:	xchg   esi,eax
  41561f:	(bad)  
  415620:	out    0x3,eax
  415622:	xchg   esi,eax
  415623:	(bad)  
  415624:	out    0x3,eax
  415626:	xchg   esi,eax
  415627:	(bad)  
  415628:	out    0x3,eax
  41562a:	xchg   esi,eax
  41562b:	(bad)  
  41562c:	out    0x3,eax
  41562e:	xchg   esi,eax
  41562f:	(bad)  
  415630:	out    0x3,eax
  415632:	xchg   esi,eax
  415633:	(bad)  
  415634:	out    0x3,eax
  415636:	xchg   esi,eax
  415637:	(bad)  
  415638:	out    0x3,eax
  41563a:	xchg   esi,eax
  41563b:	(bad)  
  41563c:	out    0x3,eax
  41563e:	xchg   esi,eax
  41563f:	(bad)  
  415640:	out    0x3,eax
  415642:	xchg   esi,eax
  415643:	bound  eax,QWORD PTR [eax]
  415645:	and    DWORD PTR [ebp+0xe9441b],eax
	...
  41565b:	add    al,ch
  41565d:	aas    
  41565e:	xor    BYTE PTR [ecx],ah
  415660:	add    BYTE PTR [edi+0x23],0x19
  415664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415665:	sbb    ch,BYTE PTR [ebx]
  415667:	or     al,0x8a
  415669:	cs pop eax
  41566b:	cld    
  41566c:	jbe    0x4156a0
  41566e:	xor    ah,BYTE PTR [ecx-0x5ecdcd8a]
  415674:	outs   dx,BYTE PTR ds:[esi]
  415675:	aas    
  415676:	xor    bl,bh
  415678:	int    0x3f
  41567a:	xor    bl,bh
  41567c:	int    0x3f
  41567e:	xor    bl,bl
  415680:	mov    ebp,0xbddb303f
  415685:	aas    
  415686:	xor    bl,bl
  415688:	lods   eax,DWORD PTR ds:[esi]
  415689:	aas    
  41568a:	xor    bl,bl
  41568c:	lods   eax,DWORD PTR ds:[esi]
  41568d:	idiv   edi
  41568f:	lods   eax,DWORD PTR ds:[esi]
  415690:	jbe    0x415680
  415692:	dec    ebp
  415693:	mov    BYTE PTR [ecx-0x5],cl
  415696:	jne    0x415624
  415698:	mov    bl,ch
  41569a:	jo     0x415711
  41569c:	ss pop es
  41569e:	inc    edi
  41569f:	push   edi
  4156a0:	xor    al,0x5
  4156a2:	add    BYTE PTR [edx+0x59],dl
  4156a5:	lock ins DWORD PTR es:[edi],dx
  4156a7:	dec    esp
  4156a8:	xor    DWORD PTR ds:[edx],esi
  4156ab:	dec    DWORD PTR [ecx+0x6]
  4156ae:	ins    BYTE PTR es:[edi],dx
  4156af:	jmp    0x4e964800
  4156b4:	inc    edi
  4156b5:	sub    al,0x34
  4156b7:	sbb    eax,ebp
  4156b9:	add    eax,0xf1e34461
  4156be:	(bad)  
  4156bf:	cmp    DWORD PTR [eax],eax
	...
  4156d1:	add    bh,ch
  4156d3:	cld    
  4156d4:	jae    0x4156ec
  4156d6:	cmc    
  4156d7:	lock bound esi,QWORD PTR ds:0x2d7213d4
  4156de:	mov    ds:0x90007306,al
  4156e3:	pop    es
  4156e4:	outs   dx,BYTE PTR ds:[esi]
  4156e5:	jae    0x415762
  4156e7:	and    BYTE PTR [eax+edx*2-0x55],dl
  4156eb:	imul   esi,DWORD PTR es:[ebx+0x43],0xe
  4156f0:	add    BYTE PTR [ebx+0x68],dl
  4156f3:	add    DWORD PTR [edi+esi*2+0x4e],esi
  4156f7:	or     eax,0x15c61
  4156fc:	jb     0x415730
  4156fe:	sti    
  4156ff:	cs ins BYTE PTR es:[edi],dx
  415701:	jne    0x415753
  415703:	or     BYTE PTR [esi+0x73],ch
  415706:	sti    
  415707:	and    BYTE PTR [eax+edx*2+0x2b],dl
  41570b:	daa    
  41570c:	imul   esi,DWORD PTR [ebx+0x43],0xe
  415710:	add    BYTE PTR [ebx+0x28],dl
  415713:	add    DWORD PTR [edi+esi*2+0xe],esi
  415717:	or     eax,0x415c61
  41571c:	jb     0x41577a
  41571e:	sub    al,0x0
  415720:	jbe    0x415787
  415722:	adc    esi,DWORD PTR [ebx]
  415724:	gs popa 
  415726:	or     ecx,DWORD PTR [edx]
  415728:	arpl   WORD PTR [eax+0x16],cx
  41572b:	push   cs
  41572c:	je     0x41579d
  41572e:	dec    ebp
  41572f:	sbb    BYTE PTR [esi+eax*2-0x7d],bl
  415733:	cs dec eax
  415735:	outs   dx,DWORD PTR ds:[esi]
	...
  415746:	add    BYTE PTR [eax],al
  415748:	pop    esp
  415749:	adc    al,BYTE PTR [eax]
  41574b:	push   ebx
  41574c:	pop    eax
  41574d:	add    BYTE PTR [edi+esi*2+0x5e],dh
  415751:	or     al,0x61
  415753:	pop    esp
  415754:	jno    0x415755
  415756:	jno    0x41578a
  415758:	jnp    0x415787
  41575a:	pop    ebp
  41575b:	jbe    0x41573f
  41575d:	add    al,BYTE PTR [ecx+ebp*2-0x22]
  415761:	cli    
  415762:	push   0x67
  415764:	(bad)  
  415765:	std    
  415766:	outs   dx,BYTE PTR ds:[esi]
  415767:	je     0x4156f1
  415769:	sbb    BYTE PTR [ebp+0x5c],dh
  41576c:	xchg   esi,eax
  41576d:	inc    ecx
  41576e:	xor    BYTE PTR [eax-0x22],dl
  415771:	jo     0x4157c7
  415773:	je     0x41570b
  415775:	dec    ebx
  415776:	popa   
  415777:	jno    0x41575e
  415779:	js     0x4157e3
  41577b:	jb     0x415737
  41577d:	jnp    0x4157c8
  41577f:	ins    DWORD PTR es:[edi],dx
  415780:	lds    esi,FWORD PTR [edi+0x47]
  415783:	pop    edi
  415784:	mov    bl,0x9e
  415786:	add    DWORD PTR [ebx-0x3b],edx
  415789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41578a:	push   ebx
  41578b:	add    dl,ah
  41578d:	mov    ds:0x98966367,al
  415792:	fs js  0x415756
  415795:	mov    eax,ds:0x9268704d
  41579a:	addr16 addr16 xchg esi,eax
  41579d:	xlat   BYTE PTR ds:[ebx]
  41579e:	inc    eax
  41579f:	dec    eax
  4157a0:	pop    edi
  4157a1:	int3   
  4157a2:	inc    ebp
  4157a3:	inc    ebx
  4157a4:	fs jnp 0x4157f1
  4157a7:	outs   dx,BYTE PTR ds:[esi]
  4157a8:	test   edi,edx
  4157aa:	bound  ebp,QWORD PTR [eax+eax*1+0x0]
	...
  4157be:	cmp    BYTE PTR [edi-0x36698d96],0x4d
  4157c5:	jo     0x415816
  4157c7:	fldcw  WORD PTR [edx+0x4e]
  4157ca:	ja     0x4157aa
  4157cc:	pop    esi
  4157cd:	add    BYTE PTR [ebp-0x18],ah
  4157d0:	pop    edi
  4157d1:	je     0x415814
  4157d3:	ficom  DWORD PTR [ebx+0x63]
  4157d6:	bound  eax,QWORD PTR [eax+0x6c]
  4157d9:	addr16 inc ebp
  4157db:	pop    ds
  4157dc:	pop    edi
  4157dd:	jb     0x415831
  4157df:	xor    BYTE PTR [ebx+0x6e],ch
  4157e2:	xor    dh,BYTE PTR [eax]
  4157e4:	dec    ebp
  4157e5:	jno    0x41585d
  4157e7:	cmp    al,0x65
  4157e9:	imul   ebp,DWORD PTR [ebx],0x1a
  4157ec:	data16 fs sti 
  4157ef:	sub    eax,0x29f95104
  4157f4:	push   eax
  4157f5:	jne    0x4157ee
  4157f7:	bound  ebx,QWORD PTR [ecx]
  4157f9:	popa   
  4157fa:	fisubr DWORD PTR [ecx]
  4157fc:	(bad)  
  4157fe:	out    0xfe,eax
  415800:	or     edx,DWORD PTR [edx-0x36]
  415803:	push   ss
  415804:	dec    BYTE PTR [edi-0x3f]
  415807:	inc    dh
  415809:	inc    edx
  41580a:	jmp    0x41580b
  41580c:	or     esp,DWORD PTR [ebp-0x40]
  41580f:	push   es
  415810:	or     al,0x52
  415812:	xchg   esi,eax
  415813:	push   cs
  415814:	and    BYTE PTR [edi+eax*8-0x7],dl
  415818:	iret   
  415819:	dec    edi
  41581a:	mov    bh,0xfa
  41581c:	out    0x32,al
  41581e:	mov    ecx,0x52cbf6
	...
  415833:	add    dl,cl
  415835:	bound  ebp,QWORD PTR [ebx-0x420a59b4]
  41583b:	ins    BYTE PTR es:[edi],dx
  41583c:	mov    ds:0x6b37cf05,al
  415841:	adc    eax,0x12623d96
  415846:	out    0x37,eax
  415848:	mov    edi,ebx
  41584a:	xchg   esp,eax
  41584b:	and    eax,0x3900071
  415850:	sar    bl,0x84
  415853:	ins    BYTE PTR es:[edi],dx
  415854:	xchg   esi,eax
  415855:	sbb    DWORD PTR [edx-0x68e9a7ca],edi
  41585b:	add    edx,DWORD PTR [edx+0x1b]
  41585e:	cdq    
  41585f:	add    ebx,DWORD PTR [edx+0x27]
  415862:	lods   eax,DWORD PTR ds:[esi]
  415863:	aas    
  415864:	push   ecx
  415865:	adc    al,0xe7
  415867:	inc    edx
  415868:	gs push ss
  41586a:	sub    al,0x3e
  41586c:	bound  edx,QWORD PTR [edx]
  41586e:	out    0x34,eax
  415870:	push   edi
  415871:	sbb    al,BYTE PTR [eax+0x53]
  415874:	and    al,BYTE PTR [ecx]
  415876:	pop    ecx
  415877:	pop    ebp
  415878:	xchg   esi,eax
  415879:	adc    eax,0xf9225e56
  41587e:	inc    edi
  41587f:	push   edx
  415880:	cmc    
  415881:	push   cs
  415882:	add    BYTE PTR [esi],ch
  415884:	(bad)  
  415885:	std    
  415886:	popa   
  415887:	dec    eax
  415888:	out    dx,al
  415889:	adc    DWORD PTR [ecx+0x28],eax
  41588c:	ret    0x5c23
  41588f:	sub    al,bh
  415891:	mul    BYTE PTR [edx+0x2f]
  415894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415895:	adc    ah,BYTE PTR [eax]
  415897:	xlat   BYTE PTR ds:[ebx]
	...
  4158a8:	add    BYTE PTR [eax],al
  4158aa:	mov    ch,0x1a
  4158ac:	ins    DWORD PTR es:[edi],dx
  4158ad:	adc    al,0xf7
  4158af:	push   cs
  4158b0:	dec    edi
  4158b1:	sub    al,BYTE PTR [esi-0x4bfa9303]
  4158b7:	(bad)  
  4158b9:	jmp    0xdda75642
  4158be:	enter  0x720f,0xc4
  4158c2:	imul   esp,DWORD PTR ds:0xfb7c66c,0x2fd4ba6c
  4158cc:	push   eax
  4158cd:	lods   al,BYTE PTR ds:[esi]
  4158ce:	popa   
  4158cf:	and    DWORD PTR [ebx-0x4b],esi
  4158d2:	jbe    0x4158fc
  4158d4:	push   esp
  4158d5:	cdq    
  4158d6:	mov    ch,0x38
  4158d8:	and    BYTE PTR [ecx-0x739a0299],bl
  4158de:	fs icebp 
  4158e0:	data16 mov ?,WORD PTR [ebx+0xf]
  4158e4:	ins    BYTE PTR es:[edi],dx
  4158e5:	mov    ch,0xa2
  4158e7:	and    DWORD PTR [esi+edi*2+0x78],edx
  4158eb:	(bad)  
  4158ec:	popa   
  4158ed:	mov    BYTE PTR [edi+0x62],al
  4158f0:	push   ecx
  4158f1:	mov    ?,WORD PTR [ebx-0xa]
  4158f4:	je     0x41587e
  4158f6:	add    ebx,DWORD PTR [si-0x5a]
  4158fa:	cmp    ebp,edi
  4158fc:	popa   
  4158fd:	dec    eax
  4158fe:	adc    DWORD PTR cs:[ecx+0x28],eax
  415902:	push   0x23
  415904:	pop    esp
  415905:	sub    bl,BYTE PTR [ecx-0xa]
  415908:	bound  esp,QWORD PTR [edi]
  41590a:	data16 adc ah,BYTE PTR [eax]
	...
  41591d:	add    BYTE PTR [eax],al
  41591f:	add    BYTE PTR [eax-0x1d90b7bd],bl
  415925:	subps  xmm2,XMMWORD PTR [ecx-0x44]
  415929:	xor    ch,BYTE PTR [ebx+0x6f]
  41592c:	ret    
  41592d:	add    al,0x5d
  41592f:	jb     0x4159a0
  415931:	xor    ch,BYTE PTR [ebx+0x66]
  415934:	mov    ebx,DWORD PTR ds:0x2a9a725d
  41593a:	inc    ebx
  41593b:	ins    BYTE PTR es:[edi],dx
  41593c:	pusha  
  41593d:	add    DWORD PTR [ebp+0x6c],ebx
  415940:	jl     0x415963
  415942:	cmp    eax,0x3f2a7a50
  415947:	jne    0x415994
  415949:	adc    BYTE PTR [esi+0x54],al
  41594c:	lahf   
  41594d:	inc    esi
  41594e:	xor    esp,DWORD PTR [eax]
  415950:	call   DWORD PTR [eax]
  415952:	imul   esp,DWORD PTR [esi+0x5a],0x12
  415956:	outs   dx,DWORD PTR ds:[esi]
  415957:	imul   edx,DWORD PTR [eax+0x5],0x33f36c5d
  41595e:	aas    
  41595f:	push   esp
  415960:	inc    eax
  415961:	push   es
  415962:	ins    BYTE PTR es:[edi],dx
  415963:	(bad)  
  415964:	ficom  WORD PTR [eax]
  415966:	add    BYTE PTR [ebx-0x30],dl
  415969:	or     al,0x74
  41596b:	ja     0x41593b
  41596d:	adc    BYTE PTR [ecx+0x5c],ah
  415970:	sub    BYTE PTR [edi],al
  415972:	imul   esp,DWORD PTR [edx+0x1e],0x7
  415976:	dec    edi
  415977:	inc    ebx
  415978:	xor    eax,DWORD PTR ds:[ecx+0x5c]
  41597c:	sub    al,0x20
  41597e:	je     0x4159e5
  415980:	sub    DWORD PTR [edi],edi
  415982:	push   eax
  415983:	and    BYTE PTR [eax],al
	...
  415995:	add    bh,dl
  415997:	inc    edx
  415998:	dec    eax
  415999:	outs   dx,DWORD PTR ds:[esi]
  41599a:	adc    dl,BYTE PTR [eax]
  41599c:	pop    esp
  41599d:	push   ecx
  41599e:	in     al,dx
  41599f:	imul   ebp,DWORD PTR ds:[edi+0x63],0x4
  4159a4:	pop    ebp
  4159a5:	jb     0x415966
  4159a7:	xor    DWORD PTR [ebx+0x66],ebp
  4159aa:	xchg   esi,eax
  4159ab:	or     eax,0x26245f4b
  4159b0:	cmp    BYTE PTR [ebp+0x2a],al
  4159b3:	sbb    BYTE PTR [edx+0x5f],ah
  4159b6:	add    cl,BYTE PTR [ecx+0x3f]
  4159b9:	aas    
  4159ba:	out    0x3e,al
  4159bc:	cmp    BYTE PTR [ecx+0xb],al
  4159bf:	cmp    BYTE PTR [ebp+0x46],bl
  4159c2:	loop   0x4159ef
  4159c4:	and    al,0x38
  4159c6:	mov    dh,0x2b
  4159c8:	push   edx
  4159c9:	ins    DWORD PTR es:[edi],dx
  4159ca:	lock pop esi
  4159cc:	dec    edi
  4159cd:	jno    0x4159be
  4159cf:	ins    BYTE PTR es:[edi],dx
  4159d0:	arpl   WORD PTR [edi-0x16],bx
  4159d3:	inc    edi
  4159d4:	xor    DWORD PTR [ecx-0x16],eax
  4159d7:	pop    esp
  4159d8:	arpl   WORD PTR [esp+esi*4+0x5a],bp
  4159dc:	push   edx
  4159dd:	add    dl,ah
  4159df:	inc    esp
  4159e0:	push   0x659ab46d
  4159e5:	push   ecx
  4159e6:	aad    0xba
  4159e8:	xor    DWORD PTR [ebx-0x36],eax
  4159eb:	mov    eax,0xc5bb744e
  4159f0:	sub    eax,0x3cc79650
  4159f5:	ins    BYTE PTR es:[edi],dx
  4159f6:	sbb    DWORD PTR [ecx+0x6c62],0x0
	...
  415a0c:	gs mov eax,0xdf5b5042
  415a12:	inc    eax
  415a13:	jae    0x415997
  415a15:	fidivr WORD PTR [ebx]
  415a17:	push   esp
  415a18:	inc    esi
  415a19:	fwait
  415a1a:	xor    DWORD PTR [edx+0x79],esi
  415a1d:	jnp    0x415a54
  415a1f:	inc    ebp
  415a20:	jb     0x415a0e
  415a22:	pop    esi
  415a23:	pop    edi
  415a24:	push   0xffffffc8
  415a26:	inc    eax
  415a27:	aas    
  415a28:	data16 (bad) 
  415a2a:	xor    eax,0x5def4341
  415a2f:	inc    esi
  415a30:	push   0xffffffcb
  415a32:	and    DWORD PTR [edi+ebp*1+0x62],ecx
  415a36:	pop    ebx
  415a37:	imul   edx,DWORD PTR [esi+0x22592a0e],0x46382d07
  415a41:	bound  ebp,QWORD PTR [ebx]
  415a43:	push   edi
  415a44:	sub    eax,0xa654b3c
  415a49:	arpl   WORD PTR [edx],bx
  415a4b:	arpl   ax,si
  415a4d:	idiv   BYTE PTR ds:0xb080465
  415a53:	dec    edx
  415a54:	jmp    0x370a:0xd85c1a03
  415a5b:	xor    BYTE PTR [edi-0x79cc59e],ah
  415a61:	not    BYTE PTR ds:0x2307e465
  415a67:	dec    edx
  415a68:	ret    0xfa03
  415a6b:	pop    ebx
  415a6c:	ror    BYTE PTR [edx],1
  415a6e:	pop    ss
  415a6f:	add    al,0x0
	...
  415a81:	add    bh,ah
  415a83:	std    
  415a84:	add    al,0x58
  415a86:	ret    
  415a87:	add    ebx,ecx
  415a89:	push   0x64cb24d2
  415a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a8f:	cli    
  415a90:	lods   al,BYTE PTR ds:[esi]
  415a91:	sub    eax,esi
  415a93:	push   cs
  415a94:	adc    eax,DWORD PTR [ecx+edx*8]
  415a97:	cld    
  415a98:	mov    ecx,0xcafe7157
  415a9d:	push   0x57c82684
  415aa2:	outs   dx,BYTE PTR ds:[esi]
  415aa3:	adc    cl,al
  415aa5:	push   edi
  415aa6:	outs   dx,BYTE PTR ds:[esi]
  415aa7:	bound  edx,QWORD PTR [edi-0x1905959c]
  415aad:	cmp    al,0x78
  415aaf:	icebp  
  415ab0:	call   0x3933:0xc6fe7264
  415ab7:	test   BYTE PTR [esi+0x73035a03],0x64
  415abe:	push   eax
  415abf:	std    
  415ac0:	inc    DWORD PTR [ecx+edi*1+0x69e97201]
  415ac7:	adc    esp,DWORD PTR [edi+0x5d]
  415aca:	aas    
  415acb:	repz sub eax,0xfff63345
  415ad1:	xor    al,0x6b
  415ad3:	icebp  
  415ad4:	dec    dx
  415ad6:	cmp    DWORD PTR [esp+eiz*2],edi
  415ad9:	dec    eax
  415ada:	out    dx,al
  415adb:	bound  ebx,QWORD PTR [ecx+esi*1-0x15]
  415adf:	icebp  
  415ae0:	jae    0x415b28
  415ae2:	call   0x8688da
	...
  415af7:	add    bl,dh
  415af9:	idiv   bh
  415afb:	inc    esp
  415afc:	fdiv   st(6),st
  415afe:	pop    esi
  415aff:	sbb    cl,dl
  415b01:	and    al,0x58
  415b03:	cmp    DWORD PTR [esi-0x33d2ffcf],esp
  415b09:	(bad)  
  415b0a:	pop    esi
  415b0b:	cli    
  415b0c:	in     eax,dx
  415b0d:	and    al,0x58
  415b0f:	sbb    DWORD PTR [esi-0x33eaffca],eax
  415b15:	add    ebp,DWORD PTR [esp+eax*1+0x68]
  415b19:	add    ebp,DWORD PTR [ebp+edx*8-0x46]
  415b1d:	bound  ebx,QWORD PTR [edx+ebx*8-0x36]
  415b21:	mul    BYTE PTR [edx-0x3c]
  415b24:	mov    edx,0xaec65efc
  415b29:	lock sub eax,0xfffe76c1
  415b2f:	pushf  
  415b30:	arpl   di,di
  415b32:	pusha  
  415b33:	int3   
  415b34:	ja     0x415b2c
  415b36:	jo     0x415afc
  415b38:	arpl   sp,si
  415b3a:	bound  ebx,QWORD PTR [ebx-0x7387c3b8]
  415b40:	dec    ecx
  415b41:	bound  ebx,QWORD PTR [edi+ecx*4+0x42]
  415b45:	(bad)  
  415b46:	bound  edx,QWORD PTR [ebx+0x6bfe3a]
  415b4c:	push   ds
  415b4d:	inc    edx
  415b4e:	js     0x415bbd
  415b50:	sbb    esp,DWORD PTR [eax+0x4f]
  415b53:	outs   dx,DWORD PTR ds:[esi]
  415b54:	adc    DWORD PTR [ebx+esi*2],edx
  415b57:	popa   
  415b58:	cmp    eax,0x465bfa
	...
  415b6d:	add    BYTE PTR [esi+0x2],al
  415b70:	popa   
  415b71:	pop    edx
  415b72:	inc    esi
  415b73:	add    ch,BYTE PTR [ecx+eiz*2-0x51]
  415b77:	imul   esp,DWORD PTR ss:[esi+0x43],0x9
  415b7c:	pop    ebp
  415b7d:	jb     0x415b61
  415b7f:	xor    al,BYTE PTR [esi+0x69]
  415b82:	fild   DWORD PTR [ebx]
  415b84:	pop    edx
  415b85:	imul   ebx,ebx,0xac205d02
  415b8b:	add    ah,BYTE PTR [ebp+0x65]
  415b8e:	mov    DWORD PTR [edx],ecx
  415b90:	add    BYTE PTR [ecx-0x67],cl
  415b93:	adc    eax,0x29b6174
  415b98:	pop    ebx
  415b99:	inc    esp
  415b9a:	xchg   esi,eax
  415b9b:	adc    al,0x0
  415b9d:	dec    eax
  415b9e:	test   al,0x15
  415ba0:	je     0x415ba2
  415ba2:	mov    ds:0x2f726115,al
  415ba7:	das    
  415ba8:	pop    ebp
  415ba9:	jae    0x415be7
  415bab:	pop    edi
  415bac:	push   eax
  415bad:	outs   dx,DWORD PTR ds:[esi]
  415bae:	dec    ebp
  415baf:	adc    eax,DWORD PTR [eax]
  415bb1:	push   edx
  415bb2:	push   edx
  415bb3:	or     al,0x6b
  415bb5:	je     0x415c09
  415bb7:	aas    
  415bb8:	inc    esp
  415bb9:	imul   edi,DWORD PTR ds:0x4d654f5f,0x9f726109
  415bc3:	sub    dh,BYTE PTR [ebp+0x70]
  415bc6:	rcr    BYTE PTR [esi+0x4f],cl
  415bc9:	gs cmp eax,0xc9726109
  415bcf:	imul   esi,DWORD PTR es:[ebx+0x0],0x0
	...
  415be4:	add    ebx,DWORD PTR [edi+0x4f]
  415be7:	gs xchg esi,eax
  415be9:	(bad)  
  415bea:	push   edi
  415beb:	arpl   WORD PTR [ebx+ebp*4+0x36],sp
  415bef:	jno    0x415c2c
  415bf1:	out    0x0,eax
  415bf3:	push   ecx
  415bf4:	xor    esp,edi
  415bf6:	push   esi
  415bf7:	arpl   WORD PTR [ebx+eiz*4+0x31],ax
  415bfb:	pop    edi
  415bfc:	inc    ebp
  415bfd:	call   0x77cad02
  415c02:	pop    edx
  415c03:	arpl   WORD PTR [ebx+ebx*2],sp
  415c06:	xor    al,0x6d
  415c08:	and    al,0xd
  415c0a:	add    al,0x50
  415c0c:	aaa    
  415c0d:	adc    eax,0x16e5005c
  415c12:	push   esi
  415c13:	jbe    0x415c08
  415c15:	sub    eax,0x17067738
  415c1a:	add    al,0x4c
  415c1c:	imul   DWORD PTR [eax+ebx*2]
  415c1f:	and    ch,al
  415c21:	push   esi
  415c22:	push   esi
  415c23:	jbe    0x415c18
  415c25:	dec    ebp
  415c26:	and    al,0x48
  415c28:	icebp  
  415c29:	dec    esp
  415c2a:	pop    eax
  415c2b:	add    dl,cl
  415c2d:	pop    edx
  415c2e:	push   ebx
  415c2f:	je     0x415ca7
  415c31:	dec    esp
  415c32:	gs jb  0x415bf5
  415c35:	pop    esi
  415c36:	push   esi
  415c37:	and    bl,ch
  415c39:	ins    BYTE PTR es:[edi],dx
  415c3a:	data16 jb 0x415bd3
  415c3d:	inc    edi
  415c3e:	popa   
  415c3f:	jno    0x415beb
  415c41:	pop    ebx
  415c42:	xor    esp,DWORD PTR [ebx-0x5c]
  415c45:	xchg   ecx,eax
  415c46:	data16 jb 0x415c49
	...
  415c59:	add    BYTE PTR [esi-0x55],dh
  415c5c:	bound  esi,QWORD PTR [ecx-0x5b]
  415c5f:	jnp    0x415c9e
  415c61:	pop    edi
  415c62:	test   DWORD PTR [edi-0x528caedf],esp
  415c68:	push   edi
  415c69:	arpl   WORD PTR [ebx+ebx*2-0x507b92cc],ax
  415c70:	add    DWORD PTR [edi+esi*2+0x62],ecx
  415c74:	call   0x6855:0x8415b657
  415c7b:	call   FWORD PTR [eax-0x6cfcb9dd]
  415c81:	pop    ebx
  415c82:	xchg   esi,eax
  415c83:	push   ss
  415c84:	mov    BYTE PTR [edx+eax*2+0x42],dl
  415c88:	call   0x7655:0x8bf04466
  415c8f:	push   cs
  415c90:	jo     0x415ce5
  415c92:	xor    eax,0x46382d62
  415c97:	inc    edx
  415c98:	sub    eax,0x4dfb2865
  415c9d:	gs and bh,cl
  415ca0:	pop    eax
  415ca1:	add    al,0xd8
  415ca3:	push   cs
  415ca4:	pop    ss
  415ca5:	and    al,0xd7
  415ca7:	stc    
  415ca8:	dec    ebx
  415ca9:	popa   
  415caa:	loope  0x415ca4
  415cac:	dec    edx
  415cad:	imul   eax,DWORD PTR [ebx+eiz*2],0xf6e65845
  415cb4:	rcpps  xmm4,xmm2
  415cb7:	cmp    BYTE PTR [ebx],dl
  415cb9:	dec    esp
  415cba:	jmp    0x0:0x423362
	...
  415ccd:	add    BYTE PTR [eax],al
  415ccf:	add    ch,ah
  415cd1:	idiv   dl
  415cd3:	push   0x5ef912ca
  415cd8:	mov    ebx,0xb332c700
  415cdd:	add    bl,bh
  415cdf:	push   esi
  415ce0:	fxtract 
  415ce2:	add    eax,DWORD PTR [eax+eax*4]
  415ce5:	inc    bh
  415ce7:	push   edi
  415ce8:	xchg   esi,eax
  415ce9:	cmp    cl,cl
  415ceb:	push   ebx
  415cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ced:	bound  edi,QWORD PTR [edx-0x2a114fa2]
  415cf3:	fs test bh,bh
  415cf6:	mov    ds:0x93206641,al
  415cfb:	xor    esp,DWORD PTR [edx+0x24]
  415cfe:	add    BYTE PTR [ecx+ebx*2-0x4a4a9d0a],bh
  415d05:	adc    dh,BYTE PTR [edx-0x6a]
  415d08:	dec    eax
  415d09:	add    BYTE PTR [eax],ah
  415d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d0c:	test   eax,0x72a45c12
  415d11:	add    DWORD PTR [esi-0x17],ebp
  415d14:	test   bh,dh
  415d16:	gs jge 0x415d79
  415d19:	or     DWORD PTR [edx-0x7c],esi
  415d1c:	jno    0x415d42
  415d1e:	jae    0x415ca5
  415d20:	pop    ecx
  415d21:	add    eax,0xf7479974
  415d26:	ins    BYTE PTR es:[edi],dx
  415d27:	dec    edi
  415d28:	jb     0x415d3d
  415d2a:	ins    DWORD PTR es:[edi],dx
  415d2b:	inc    edi
  415d2c:	ds out dx,eax
  415d2e:	pop    esi
  415d2f:	pop    ebx
  415d30:	das    
  415d31:	push   es
  415d32:	inc    edx
  415d33:	push   esp
	...
  415d44:	add    BYTE PTR [eax],al
  415d46:	div    dh
  415d48:	bound  edi,QWORD PTR ds:0x4e6cf4c2
  415d4e:	clc    
  415d4f:	inc    edx
  415d50:	inc    esi
  415d51:	sbb    eax,0x3d4142c2
  415d56:	rol    DWORD PTR [ebx],cl
  415d58:	outs   dx,BYTE PTR ds:[esi]
  415d59:	sbb    eax,0x105f1ba6
  415d5e:	shl    BYTE PTR [edx+0x51],0x6
  415d62:	lock out dx,al
  415d64:	je     0x415d6e
  415d66:	in     al,0x3
  415d68:	pop    esp
  415d69:	sub    eax,DWORD PTR [edx-0x79e6abe0]
  415d6f:	and    al,0x73
  415d71:	add    eax,0xc97403b6
  415d76:	gs hlt 
  415d78:	ins    BYTE PTR es:[edi],dx
  415d79:	(bad)  
  415d7a:	mov    bl,0x42
  415d7c:	inc    esi
  415d7d:	mov    ch,0x65
  415d7f:	push   es
  415d80:	dec    ebp
  415d81:	fld    st(1)
  415d83:	jmp    FWORD PTR [edi+edi*4+0x64]
  415d87:	bound  edx,QWORD PTR [ecx+0x0]
  415d8a:	loopne 0x415d89
  415d8c:	jae    0x415e05
  415d8e:	into   
  415d8f:	adc    DWORD PTR [ecx+0x5c],esp
  415d92:	sub    eax,0xda6c6c0b
  415d97:	(bad)  
  415d99:	jb     0x415d9b
  415d9b:	or     DWORD PTR [esi+0x20],esp
  415d9e:	sbb    al,0x9
  415da0:	data16 je 0x415d9b
  415da3:	(bad)  
  415da4:	jno    0x415e0b
  415da6:	add    esp,DWORD PTR [edx]
  415da8:	jno    0x415e16
	...
  415dba:	add    BYTE PTR [eax],al
  415dbc:	and    edi,ebx
  415dbe:	jae    0x415e10
  415dc0:	cmp    eax,0xcf666b08
  415dc5:	sbb    eax,0x24df5054
  415dca:	ins    BYTE PTR es:[edi],dx
  415dcb:	imul   ebx,DWORD PTR [edx+0x8],0xe705c74
  415dd2:	je     0x415e3d
  415dd4:	push   eax
  415dd5:	or     BYTE PTR [edi+0x0],ch
  415dd8:	int3   
  415dd9:	add    eax,0x3c87466
  415dde:	jb     0x415e45
  415de0:	mov    ds:0x9b465024,eax
  415de5:	add    BYTE PTR cs:[esi+ebx*8+0x11],cl
  415dea:	je     0x415e3f
  415dec:	call   0x4608:0x90696f11
  415df3:	imul   edx,DWORD PTR [ebx-0x69ad0001],0x7b73610a
  415dfd:	or     esi,DWORD PTR [edx+0x0]
  415e00:	xchg   BYTE PTR [eax],cl
  415e02:	outs   dx,DWORD PTR ds:[esi]
  415e03:	je     0x415d93
  415e05:	add    ch,BYTE PTR [esp+eax*2-0x6a]
  415e09:	adc    al,0x2d
  415e0b:	add    BYTE PTR [ecx+0x2f6c6916],al
  415e11:	aaa    
  415e12:	dec    edi
  415e13:	ins    DWORD PTR es:[edi],dx
  415e14:	xchg   esi,eax
  415e15:	call   0x31:0xad58744f
  415e1c:	push   eax
  415e1d:	call   0x0:0x6d53
	...
  415e30:	add    BYTE PTR [eax],al
  415e32:	test   BYTE PTR [edx+0x5f856355],dl
  415e38:	push   0x39796a5f
  415e3d:	lds    ebx,FWORD PTR gs:[si+0x72]
  415e42:	pop    edi
  415e43:	xchg   edi,eax
  415e44:	gs pop edi
  415e46:	bound  edi,QWORD PTR [ecx+0x62]
  415e49:	fs cmp cl,bl
  415e4c:	pop    edi
  415e4d:	imul   edi,DWORD PTR [eax-0x2b],0xea967462
  415e54:	push   ebp
  415e55:	addr16 xor eax,0x37641be4
  415e5b:	in     eax,dx
  415e5c:	add    BYTE PTR [edx+eax*2+0x6],bl
  415e60:	push   edx
  415e61:	bound  esi,QWORD PTR [ecx]
  415e63:	aas    
  415e64:	cmp    BYTE PTR [eax-0x6a],dl
  415e67:	sub    al,0x5b
  415e69:	data16 or cl,BYTE PTR ds:0x3ff37261
  415e70:	cmp    BYTE PTR [ebx+0x4],dh
  415e73:	sbb    bl,BYTE PTR [ebx+0x46]
  415e76:	loop   0x415ec3
  415e78:	add    al,0x67
  415e7a:	add    BYTE PTR [ecx],ch
  415e7c:	pop    eax
  415e7d:	pop    edi
  415e7e:	cli    
  415e7f:	dec    edi
  415e80:	push   esp
  415e81:	pop    edi
  415e82:	jmp    0x5855:0xe9510453
  415e89:	jne    0x415e42
  415e8b:	dec    ecx
  415e8c:	gs pop esp
  415e8e:	in     eax,0x4c
  415e90:	pop    eax
  415e91:	pop    edi
  415e92:	loop   0x415ed1
  415e94:	inc    esi
  415e95:	inc    esi
	...
  415ea6:	add    BYTE PTR [eax],al
  415ea8:	loop   0x415ef5
  415eaa:	add    al,0x41
  415eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ead:	pop    esi
  415eae:	push   0xdb62b863
  415eb3:	pop    edx
  415eb4:	shl    esi,0xb9
  415eb7:	bound  ebp,QWORD PTR [edx-0x7bbf1912]
  415ebd:	inc    edx
  415ebf:	data16 js 0x415eb0
  415ec2:	iret   
  415ec3:	bound  esi,QWORD PTR [edx+0x21]
  415ec6:	iret   
  415ec7:	data16 ja 0x415ec3
  415eca:	out    0x30,al
  415ecc:	cmp    esp,0xffffffb2
  415ecf:	push   esp
  415ed0:	dec    ecx
  415ed1:	lock mov ebp,DWORD PTR [edi]
  415ed4:	inc    edi
  415ed5:	cmc    
  415ed6:	xchg   edx,eax
  415ed7:	bound  edi,QWORD PTR [edx]
  415ed9:	sbb    al,0xad
  415edb:	inc    ebp
  415edc:	push   0x12
  415ede:	stos   DWORD PTR es:[edi],eax
  415edf:	cmp    al,0x46
  415ee1:	out    dx,al
  415ee2:	(bad)  
  415ee3:	pop    esp
  415ee4:	xor    cl,dh
  415ee6:	out    0x33,al
  415ee8:	pop    ecx
  415ee9:	icebp  
  415eea:	jns    0x415f40
  415eec:	inc    ebx
  415eed:	lock add BYTE PTR [ebx],0x45
  415ef1:	icebp  
  415ef2:	dec    ebx
  415ef3:	push   esi
  415ef4:	push   eax
  415ef5:	add    ecx,DWORD PTR [ecx+eiz*2-0x6a]
  415ef9:	sbb    al,BYTE PTR [esi+0x57]
  415efc:	or     ah,BYTE PTR [ebx+eax*2]
  415eff:	push   esi
  415f00:	pop    es
  415f01:	arpl   WORD PTR [ecx],bx
  415f03:	popa   
  415f04:	in     eax,dx
  415f05:	cmc    
  415f06:	xor    ah,BYTE PTR [ecx-0x2e]
  415f09:	sti    
  415f0a:	cmp    BYTE PTR [eax+eax*1],al
	...
  415f1d:	add    dh,al
  415f1f:	cmc    
  415f20:	cmp    BYTE PTR [eax-0x6a],dl
  415f23:	sbb    dl,BYTE PTR [esi]
  415f25:	push   edi
  415f26:	jmp    0x3762:0xf5590814
  415f2d:	pop    ebx
  415f2e:	(bad)  
  415f2f:	out    dx,al
  415f30:	out    0x30,al
  415f32:	(bad)  
  415f33:	(bad)  
  415f34:	clc    
  415f35:	pop    ecx
  415f36:	loope  0x415f2f
  415f38:	add    eax,DWORD PTR [esi+eiz*8]
  415f3b:	add    eax,DWORD PTR [eax]
  415f3d:	cli    
  415f3e:	enter  0x6cef,0xfb
  415f42:	leave  
  415f43:	bound  ecx,QWORD PTR [eax-0x2a]
  415f46:	enter  0x43ee,0xd0
  415f4a:	ret    
  415f4b:	adc    al,0x5f
  415f4d:	les    esi,FWORD PTR [esi+0x62]
  415f50:	push   ecx
  415f51:	mov    esi,0xc874ee77
  415f56:	imul   eax,DWORD PTR [ecx],0x5c
  415f59:	stos   BYTE PTR es:[edi],al
  415f5a:	pop    esp
  415f5b:	cld    
  415f5c:	gs int3 
  415f5e:	jbe    0x415f83
  415f60:	jae    0x415f1b
  415f62:	mov    ch,0x13
  415f64:	ins    DWORD PTR es:[edi],dx
  415f65:	(bad)  
  415f66:	push   ecx
  415f67:	out    dx,eax
  415f68:	pop    esi
  415f69:	fwait
  415f6a:	jbe    0x415f72
  415f6c:	inc    edi
  415f6d:	xchg   DWORD PTR [ecx+0x1],esp
  415f70:	jb     0x415ff1
  415f72:	ss out dx,al
  415f74:	pop    ebx
  415f75:	cdq    
  415f76:	imul   esi,edi,0x65
  415f79:	nop
  415f7a:	popa   
  415f7b:	add    DWORD PTR [ecx-0x17],esi
  415f7e:	push   0x7565f7
	...
  415f93:	add    BYTE PTR [ebp+eax*1+0x72],al
  415f97:	dec    esp
  415f98:	outs   dx,BYTE PTR ds:[esi]
  415f99:	sbb    al,0x54
  415f9b:	cmp    DWORD PTR [ebp+0x5],esp
  415f9e:	jb     0x415fec
  415fa0:	mov    esi,0xd73b4d21
  415fa5:	sbb    al,0x54
  415fa7:	sbb    DWORD PTR [esi-0x8ca98ef],ebp
  415fad:	icebp  
  415fae:	jmp    DWORD PTR [eax]
  415fb0:	int    0xf1
  415fb2:	jae    0x415f9d
  415fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb5:	icebp  
  415fb6:	bound  ebx,QWORD PTR [ebx]
  415fb8:	call   0x5062:0xc61b6d12
  415fbf:	ds call 0x5162:0x80017412
  415fc7:	add    BYTE PTR [esi+eiz*1+0x93d7000],bl
  415fce:	imul   bx,WORD PTR [ebx+0x272e6f01],0x6c0b
  415fd7:	add    BYTE PTR [ebx+0x22],bl
  415fda:	push   esp
  415fdb:	push   eax
  415fdc:	(bad)  
  415fdd:	and    DWORD PTR [eax+0x70],edi
  415fe0:	fisttp DWORD PTR [eax]
  415fe2:	jb     0x416049
  415fe4:	in     eax,dx
  415fe5:	pop    edi
  415fe6:	dec    edi
  415fe7:	outs   dx,DWORD PTR ds:[esi]
  415fe8:	rcl    DWORD PTR [ebx],1
  415fea:	jae    0x41604d
  415fec:	cmp    eax,0x13465c03
  415ff1:	xor    BYTE PTR [eax],ah
  415ff3:	inc    ebp
  415ff4:	daa    
  415ff5:	adc    BYTE PTR [edi+ebp*2+0x0],ch
	...
  416009:	add    ch,bh
  41600b:	add    dh,BYTE PTR [edx+0x5c]
  41600e:	xor    DWORD PTR [eax+edx*2],esi
  416011:	and    BYTE PTR [edx],al
  416013:	sbb    BYTE PTR [eax+0x6c],dh
  416016:	dec    eax
  416017:	or     eax,0x30fb7261
  41601c:	imul   esi,DWORD PTR [edx+0x24],0xd
  416020:	jo     0x416083
  416022:	sbb    al,0x3
  416024:	pop    esp
  416025:	dec    ebp
  416026:	icebp  
  416027:	sbb    al,0x54
  416029:	outs   dx,DWORD PTR ds:[esi]
  41602a:	dec    eax
  41602b:	or     al,BYTE PTR [edx+0x61]
  41602e:	cmp    eax,0xb332324b
  416033:	pop    esi
  416034:	inc    edx
  416035:	jne    0x41601a
  416037:	adc    ch,BYTE PTR [ebx+0x6e]
  41603a:	mov    esp,0xd16f4f5e
  41603f:	adc    dh,BYTE PTR [ebx+0x61]
  416042:	lods   eax,DWORD PTR ds:[esi]
  416043:	add    ebx,DWORD PTR [esi+eax*2-0x7d]
  416047:	and    BYTE PTR cs:[ebp-0x49],al
  41604b:	push   cs
  41604c:	ins    BYTE PTR es:[edi],dx
  41604d:	outs   dx,DWORD PTR ds:[esi]
  41604e:	jge    0x416053
  416050:	jb     0x4160ae
  416052:	xchg   esi,eax
  416053:	sub    DWORD PTR [esi+0x6d],edx
  416056:	mov    al,0x62
  416058:	pop    eax
  416059:	arpl   bp,ax
  41605b:	jns    0x41608e
  41605d:	pop    edi
  41605e:	lds    ebp,FWORD PTR [eax+0x50]
  416061:	ins    DWORD PTR es:[edi],dx
  416062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416063:	push   ebp
  416064:	add    al,0x50
  416066:	mov    bh,0x68
  416068:	push   esp
  416069:	jne    0x41601c
  41606b:	xchg   DWORD PTR [ebp+0x54],ebx
	...
  41607e:	add    BYTE PTR [eax],al
  416080:	lahf   
  416081:	mov    DWORD PTR [esi+0x0],ebx
  416084:	pop    esi
  416085:	pushf  
  416086:	push   esp
  416087:	je     0x41601f
  416089:	lds    ebx,FWORD PTR [eax+0x65]
  41608c:	outs   dx,DWORD PTR ds:[esi]
  41608d:	mov    eax,DWORD PTR [ecx]
  41608f:	push   eax
  416090:	imul   esp,DWORD PTR [edi-0x64a0ffb3],0x9a7f745a
  41609a:	push   ebp
  41609b:	push   eax
  41609c:	ja     0x416063
  41609e:	pop    ecx
  41609f:	add    BYTE PTR [eax-0x33],dl
  4160a2:	push   ecx
  4160a3:	push   ecx
  4160a4:	aas    
  4160a5:	lds    ebx,FWORD PTR [esi+0x2e]
  4160a8:	dec    esi
  4160a9:	out    0x54,al
  4160ab:	add    BYTE PTR [edx-0x4d],ah
  4160ae:	push   ebx
  4160af:	addr16 xor edx,ebx
  4160b2:	dec    ebp
  4160b3:	arpl   WORD PTR [ebp+0x79],sp
  4160b6:	pop    ss
  4160b7:	addr16 cmp dl,ah
  4160ba:	add    DWORD PTR [eax+ecx*2+0x1a],ebx
  4160be:	pop    edx
  4160bf:	inc    esp
  4160c0:	pop    ds
  4160c1:	adc    BYTE PTR [ebp+0x5c],bl
  4160c4:	aad    0xa8
  4160c6:	pop    edx
  4160c7:	jmp    DWORD PTR [eax-0x6304aed8]
  4160ce:	push   ebx
  4160cf:	addr16 jmp 0xd241b486
  4160d5:	jl     0x416134
  4160d7:	jno    0x4160be
  4160d9:	mov    ds:0x62e56e57,al
  4160de:	out    0x34,eax
  4160e0:	jmp    0x4160aa
  4160e2:	adc    edx,DWORD PTR [ecx+0x0]
	...
  4160f5:	add    cl,dh
  4160f7:	aam    0xc
  4160f9:	sub    al,ah
  4160fb:	ret    
  4160fc:	std    
  4160fd:	aas    
  4160fe:	leave  
  4160ff:	int    0xc
  416101:	sub    bh,ah
  416103:	(bad)  
  416104:	or     cl,BYTE PTR [edi-0x5c]
  416107:	(bad)  
  416108:	sub    eax,0xfea5962c
  41610d:	pop    ecx
  41610e:	mov    eax,0xc623cecb
  416113:	ret    
  416114:	rcr    DWORD PTR [ebx-0x6a],cl
  416117:	mov    bh,0xc3
  416119:	dec    edi
  41611a:	test   bl,al
  41611c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611d:	sub    esp,DWORD PTR [esi+0x62]
  416120:	mov    ds:0xc4d67154,eax
  416125:	push   esp
  416126:	rcr    dl,0xc4
  416129:	push   edi
  41612a:	xchg   esi,eax
  41612b:	mov    esi,0xb4462fa5
  416130:	pushf  
  416131:	push   esp
  416132:	outs   dx,BYTE PTR ds:[esi]
  416133:	bound  edi,QWORD PTR [ecx-0x4535b8b2]
  416139:	pop    edx
  41613a:	inc    edx
  41613b:	(bad)  
  41613c:	mov    ebp,0xe7ce2d4b
  416141:	xor    al,0x35
  416143:	aam    0x75
  416145:	pop    esi
  416146:	and    al,0x62
  416148:	pushf  
  416149:	push   esp
  41614a:	xor    eax,0x2d627dd4
  41614f:	(bad)  
  416150:	out    0x33,eax
  416152:	cmp    ebp,edx
  416154:	pop    edx
  416155:	dec    edi
  416156:	add    edx,ebp
  416158:	dec    ebx
  416159:	add    al,0x0
	...
  41616b:	add    al,dl
  41616d:	(bad)  
  41616e:	push   edi
  41616f:	xor    al,0xf3
  416171:	aam    0x3b
  416173:	add    al,0xe7
  416175:	rol    DWORD PTR [ebp+0x50],1
  416178:	jmp    0x41613d
  41617a:	add    BYTE PTR [ebx],bh
  41617c:	idiv   DWORD PTR [esi-0x3a2cc4bf]
  416182:	jb     0x4161c9
  416184:	test   eax,0xf33a62c5
  416189:	(bad)  
  41618a:	arpl   WORD PTR [ecx],di
  41618c:	out    0xc4,eax
  41618e:	ins    BYTE PTR es:[edi],dx
  41618f:	add    ch,ah
  416191:	retf   0xfb63
  416194:	xchg   ebp,eax
  416195:	mov    esi,0xabc61042
  41619a:	addr16 pop es
  41619c:	mov    bh,0xda
  41619e:	add    BYTE PTR [ebx],cl
  4161a0:	ret    
  4161a1:	(bad)  
  4161a2:	imul   edx,eax,0xf78c5c3
  4161a8:	jbe    0x41617d
  4161aa:	add    BYTE PTR [ecx-0x408b2ca0],ah
  4161b0:	jp     0x41617f
  4161b2:	arpl   cx,bp
  4161b4:	(bad)  
  4161b5:	shl    DWORD PTR [ebx-0x45],cl
  4161b8:	dec    ebx
  4161b9:	shr    DWORD PTR [ebx-0x34],0x95
  4161bd:	mov    dl,0x5f
  4161bf:	mov    edx,0x9b6dd744
  4161c4:	cmp    DWORD PTR [edx+0x50],esp
  4161c7:	mov    fs,WORD PTR [edi-0x2a]
  4161ca:	add    BYTE PTR [edx-0x698b37a0],bh
	...
  4161e0:	add    BYTE PTR [eax],al
  4161e2:	cmp    dl,ah
  4161e4:	arpl   WORD PTR [ebp-0x778f25aa],sp
  4161ea:	dec    ebx
  4161eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ec:	jb     0x41616e
  4161ee:	pop    ebx
  4161ef:	lds    ebx,FWORD PTR [edx+ebx*4+0x36]
  4161f3:	shl    DWORD PTR [ecx+0x50],cl
  4161f6:	inc    ecx
  4161f7:	shl    BYTE PTR [ecx-0x17],1
  4161fa:	mov    ecx,0xf35978a3
  4161ff:	rol    BYTE PTR [ebx+ebx*2-0x1d],1
  416203:	fsub   DWORD PTR [ebx+0x0]
  416206:	outs   dx,DWORD PTR ds:[esi]
  416207:	mov    BYTE PTR [edx+esi*2-0x3a],ah
  41620b:	mov    al,0x61
  41620d:	jae    0x4161a0
  41620f:	mov    esp,0xb68d006f
  416214:	pop    ebp
  416215:	jae    0x416293
  416217:	scas   eax,DWORD PTR es:[edi]
  416218:	imul   esi,DWORD PTR [edx-0x65],0xffffff84
  41621c:	and    BYTE PTR [edx],bh
  41621e:	pop    edi
  41621f:	add    BYTE PTR [eax],0x22
  416222:	add    esp,DWORD PTR [edi+ecx*2+0x6f]
  416226:	mov    DWORD PTR [edx-0x3cd29e8d],esi
  41622c:	pop    esp
  41622d:	inc    ebp
  41622e:	daa    
  41622f:	mov    ah,0x5d
  416231:	outs   dx,BYTE PTR ds:[esi]
  416232:	jnp    0x4161e8
  416234:	gs jbe 0x416281
  416237:	fs inc ecx
  416239:	js     0x41622a
  41623b:	(bad)  
  41623c:	outs   dx,BYTE PTR ds:[esi]
  41623d:	inc    esp
  41623e:	in     eax,dx
  41623f:	mov    esi,0x9c306576
  416244:	imul   ebp,DWORD PTR [ebp+0x0],0x0
	...
  416258:	retf   0x4f63
  41625b:	gs sub eax,0xff7261ae
  416261:	xchg   edx,eax
  416262:	outs   dx,DWORD PTR ds:[esi]
  416263:	gs sbb eax,0xa6d5d96
  416269:	fs push eax
  41626b:	popa   
  41626c:	sub    al,0xb5
  41626e:	jae    0x4162df
  416270:	sub    eax,0xff5f00c0
  416275:	(bad)  
  416276:	outs   dx,DWORD PTR ds:[esi]
  416277:	jae    0x4162b1
  416279:	mov    eax,0x9fbf6472
  41627e:	gs jb  0x41629b
  416281:	lds    esi,FWORD PTR [edi+ebp*2+0x1d]
  416285:	scas   al,BYTE PTR es:[edi]
  416286:	add    BYTE PTR [ebx+0x40],dl
  416289:	shl    BYTE PTR [edi+esi*2-0x22],0xb4
  41628e:	popa   
  41628f:	pop    esp
  416290:	xchg   esi,eax
  416291:	xchg   DWORD PTR [edi],edi
  416293:	dec    eax
  416294:	mov    dh,0x9c
  416296:	push   ebx
  416297:	data16 add ah,BYTE PTR [ecx+0x7dfb7261]
  41629e:	aas    
  41629f:	ins    BYTE PTR es:[edi],dx
  4162a0:	neg    DWORD PTR [edi+ecx*2+0x3087f567]
  4162a7:	push   eax
  4162a8:	mov    edx,0xd750308f
  4162ad:	ins    BYTE PTR es:[edi],dx
  4162ae:	pop    edi
  4162af:	ins    DWORD PTR es:[edi],dx
  4162b0:	ret    
  4162b1:	addr16 push eax
  4162b3:	jno    0x41624b
  4162b5:	xchg   DWORD PTR [eax+0x70],edx
  4162b8:	in     eax,0x6e
  4162ba:	push   edx
  4162bb:	jbe    0x4162bd
	...
  4162cd:	add    BYTE PTR [ebx-0x5db9fea5],bh
  4162d3:	pop    ecx
  4162d4:	cs jno 0x416292
  4162d7:	pop    ebx
  4162d8:	xor    ebx,DWORD PTR [edi-0x55]
  4162db:	add    DWORD PTR cs:[esi-0x76],eax
  4162df:	cmp    DWORD PTR [ecx],esi
  4162e1:	pop    edi
  4162e2:	test   DWORD PTR [esp+ecx*2],edi
  4162e5:	ins    DWORD PTR es:[edi],dx
  4162e6:	test   BYTE PTR ds:0x1d505d01,ah
  4162ec:	push   ecx
  4162ed:	push   eax
  4162ee:	ja     0x41630c
  4162f0:	push   eax
  4162f1:	jne    0x41636c
  4162f3:	sbb    ebx,DWORD PTR [ebp+0x0]
  4162f6:	pop    eax
  4162f7:	adc    eax,0xfb6f4451
  4162fc:	pop    ebp
  4162fd:	popa   
  4162fe:	dec    edx
  4162ff:	lock dec esi
  416301:	ja     0x416299
  416303:	sbb    al,0x34
  416305:	inc    esi
  416306:	push   0x18
  416308:	inc    edx
  416309:	push   edx
  41630a:	push   ebx
  41630b:	add    eax,0x295e4133
  416310:	xor    BYTE PTR [ebp+0x30],ch
  416313:	fisttp QWORD PTR [edi+ebx*2+0x24]
  416317:	out    0x24,al
  416319:	inc    esi
  41631a:	sub    ah,BYTE PTR [edx+0x50]
  41631d:	push   esi
  41631e:	sti    
  41631f:	mov    esi,0xcdf76128
  416324:	pop    esp
  416325:	push   esi
  416326:	or     dl,dl
  416328:	out    0x30,eax
  41632a:	jmp    0x4162f0
  41632c:	cmp    ecx,DWORD PTR [ebp-0x2f]
  41632f:	rol    BYTE PTR [eax+ebp*1+0x0],1
	...
  416343:	add    al,dl
  416345:	mov    dh,0x17
  416347:	inc    ecx
  416348:	repnz retf 
  41634a:	inc    esp
  41634b:	push   esi
  41634c:	loop   0x41630c
  41634e:	cmp    bl,BYTE PTR [ebx-0x36]
  416351:	(bad)  
  416352:	sbb    al,BYTE PTR [edi+eiz*8]
  416355:	int    0xd
  416357:	push   eax
  416358:	retf   
  416359:	ret    
  41635a:	sbb    DWORD PTR [edi-0x26],ebx
  41635d:	mov    cl,0x16
  41635f:	pop    esi
  416360:	stos   BYTE PTR es:[edi],al
  416361:	mov    edx,0xc5a454cd
  416366:	adc    edi,DWORD PTR [esi]
  416368:	retf   0x2ab2
  41636b:	pop    eax
  41636c:	mov    cl,0xc7
  41636e:	aad    0x4f
  416370:	jb     0x416323
  416372:	ror    BYTE PTR [edi+0x75],1
  416375:	shl    edi,1
  416377:	adc    eax,0x3cada73
  41637c:	test   al,0xcd
  41637e:	rcl    DWORD PTR [edi-0x6a],cl
  416381:	mov    esi,0xcd4733a6
  416386:	int    0x4f
  416388:	imul   eax,ebx,0xffffffb9
  41638b:	pop    esi
  41638c:	cmp    ah,BYTE PTR [esi-0x3ecaae70]
  416392:	xchg   ebx,eax
  416393:	push   esp
  416394:	inc    esp
  416395:	fcmovnb st,st(7)
  416397:	xor    al,0x46
  416399:	xlat   BYTE PTR ds:[ebx]
  41639a:	call   0x2462:0x8fb15a03
  4163a1:	mov    DWORD PTR [ebx+0xd63530],0x7d
	...
  4163b7:	add    BYTE PTR [eax],al
  4163b9:	add    BYTE PTR [esp+ecx*8],bh
  4163bc:	gs jp  0x416342
  4163bf:	ret    
  4163c0:	popa   
  4163c1:	pop    edx
  4163c2:	call   0x63d0:0xb35151be
  4163c9:	dec    ebp
  4163ca:	jmp    0xab96d890
  4163cf:	int3   
  4163d0:	gs cmp dh,ch
  4163d3:	lea    ebx,[ebp-0x7]
  4163d6:	hlt    
  4163d7:	xchg   ecx,eax
  4163d8:	cs dec edx
  4163da:	mov    ecx,0xc10d00d3
  4163df:	retf   0x1b5f
  4163e2:	jg     0x4163aa
  4163e4:	push   ecx
  4163e5:	add    al,0x8e
  4163e7:	(bad)  
  4163e8:	addr16 pop es
  4163ea:	ins    DWORD PTR es:[edi],dx
  4163eb:	shr    DWORD PTR [esi],cl
  4163ed:	sbb    al,BYTE PTR [ebx+0x7efd67ce]
  4163f3:	bound  ebx,QWORD PTR [edx+ebx*1+0x7a]
  4163f7:	mov    ebp,0xb36e0c72
  4163fc:	arpl   bp,si
  4163fe:	popa   
  4163ff:	lds    ebp,FWORD PTR [esi-0x32]
  416402:	enter  0x2fbf,0xbe
  416406:	add    eax,0xc90733be
  41640b:	int    0x6c
  41640d:	rol    cl,0xc1
  416410:	add    BYTE PTR [ebp-0x389930a8],ah
  416416:	mov    esi,0xa5bc41c1
  41641b:	adc    BYTE PTR [ecx-0x42],0x0
	...
  41642f:	add    BYTE PTR [edi-0x74778a2a],ch
  416435:	rol    DWORD PTR [eax],0x8d
  416438:	jle    0x4163f7
  41643a:	jo     0x4163cb
  41643c:	mov    edx,edx
  41643e:	add    BYTE PTR [edi+eax*4+0x1e0063ce],dl
  416445:	xchg   ecx,eax
  416446:	cs gs pop ss
  416449:	mov    al,BYTE PTR [eax]
  41644b:	jae    0x416463
  41644d:	xchg   ebp,eax
  41644e:	popa   
  41644f:	jae    0x41642a
  416451:	test   BYTE PTR [ebp+0x74],bl
  416454:	jg     0x4163eb
  416456:	gs je  0x41642b
  416459:	xchg   ebx,eax
  41645a:	cs imul ebx,ecx,0x9b5c008d
  416461:	mov    DWORD PTR [ebp+0x70],ebx
  416464:	nop
  416465:	test   DWORD PTR [edx+0x65],esi
  416468:	mov    esi,DWORD PTR [edx-0x57609e9f]
  41646e:	push   esp
  41646f:	push   eax
  416470:	outs   dx,DWORD PTR ds:[esi]
  416471:	mov    ch,0x4b
  416473:	inc    esi
  416474:	xchg   ebx,eax
  416475:	mov    bh,0x3d
  416477:	push   edx
  416478:	jb     0x41643c
  41647a:	dec    esp
  41647b:	mov    ss,WORD PTR gs:[esi-0x76629ead]
  416482:	add    BYTE PTR [ecx-0x77],cl
  416485:	xchg   ebx,eax
  416486:	je     0x4164e9
  416488:	fwait
  416489:	xchg   edx,eax
  41648a:	push   eax
  41648b:	popa   
  41648c:	and    ecx,DWORD PTR [eax-0x6571bc00]
  416492:	pop    ebp
  416493:	inc    esp
	...
  4164a4:	add    BYTE PTR [eax],al
  4164a6:	out    0x95,al
  4164a8:	add    BYTE PTR [eax-0x22],dl
  4164ab:	xchg   esp,eax
  4164ac:	outs   dx,DWORD PTR ds:[esi]
  4164ad:	ja     0x416487
  4164af:	xchg   ebp,eax
  4164b0:	add    BYTE PTR fs:[edi],dh
  4164b3:	xchg   ecx,eax
  4164b4:	outs   dx,DWORD PTR ds:[esi]
  4164b5:	je     0x4164e0
  4164b7:	xchg   DWORD PTR [ecx+0x65],ebp
  4164ba:	(bad)  
  4164bb:	mov    edx,0xb21d656f
  4164c0:	pop    ebp
  4164c1:	ins    DWORD PTR es:[edi],dx
  4164c2:	rcr    BYTE PTR [edi+0x52],cl
  4164c5:	sub    dl,BYTE PTR gs:[ecx-0x710c9a8c]
  4164cc:	jb     0x416533
  4164ce:	xchg   esi,eax
  4164cf:	call   0xf285d208
  4164d4:	add    BYTE PTR [eax+0x41],dl
  4164d7:	xlat   BYTE PTR ds:[ebx]
  4164d8:	xor    eax,0x22ee234e
  4164dd:	arpl   WORD PTR [ecx+ecx*2],sp
  4164e0:	inc    edi
  4164e1:	push   ecx
  4164e2:	inc    esi
  4164e3:	xlat   BYTE PTR ds:[ebx]
  4164e4:	xor    dh,BYTE PTR [ecx+eax*1-0x57]
  4164e8:	das    
  4164e9:	ins    BYTE PTR es:[edi],dx
  4164ea:	xchg   esi,eax
  4164eb:	cwde   
  4164ec:	das    
  4164ed:	data16 or bh,BYTE PTR [ebp-0x720c8ddf]
  4164f4:	dec    ebp
  4164f5:	pop    edi
  4164f6:	in     al,0x9d
  4164f8:	sub    DWORD PTR [esi-0x4a],ebp
  4164fb:	jns    0x416533
  4164fd:	addr16 in eax,dx
  4164ff:	xchg   edi,eax
  416500:	cmp    DWORD PTR [esi+edx*4+0x6d],ebp
  416504:	repz xor esp,edx
  416507:	jb     0x416541
  416509:	inc    esi
	...
  41651a:	add    BYTE PTR [eax],al
  41651c:	ret    0xf279
  41651f:	data16 mov al,0x62
  416522:	add    al,0x4e
  416524:	rcr    BYTE PTR [eax+0x58bb7429],cl
  41652a:	out    dx,eax
  41652b:	mov    ax,0x472
  41652f:	pop    esp
  416530:	shr    BYTE PTR [esi+0x38],1
  416533:	inc    esp
  416534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416535:	bound  edi,QWORD PTR [edx]
  416537:	arpl   WORD PTR [esi-0x7a8edde7],dx
  41653d:	adc    al,0x30
  41653f:	jb     0x4165bb
  416541:	dec    ecx
  416542:	push   esi
  416543:	jb     0x4165af
  416545:	dec    ecx
  416546:	push   esi
  416547:	jno    0x4165c4
  416549:	pop    ss
  41654a:	dec    edi
  41654b:	pop    edi
  41654c:	jnp    0x416574
  41654e:	add    DWORD PTR [edx+0x71],edx
  416551:	and    al,0x35
  416553:	inc    esp
  416554:	outs   dx,DWORD PTR ds:[esi]
  416555:	pop    ss
  416556:	es popa 
  416558:	dec    edx
  416559:	bound  edx,QWORD PTR [esi-0x489dbecb]
  41655f:	xor    BYTE PTR [esi+edx*8-0x19],al
  416563:	push   esp
  416564:	sub    eax,esp
  416566:	xchg   ebx,eax
  416567:	cmp    BYTE PTR [ecx-0x30],dl
  41656a:	mov    WORD PTR [edi+0x47],ds
  41656d:	retf   
  41656e:	je     0x4165a7
  416570:	sbb    BYTE PTR cs:[ecx+0x79c5202a],0xe3
  416578:	in     eax,0xbf
  41657a:	dec    edx
  41657b:	sub    al,0xf8
  41657d:	leave  
  41657e:	dec    ebx
  41657f:	xor    DWORD PTR [eax],eax
	...
  416591:	add    bl,bh
  416593:	retf   
  416594:	dec    esp
  416595:	xor    eax,0x2644b1da
  41659a:	fcmovbe st,st(4)
  41659c:	push   eax
  41659d:	cmp    dh,ch
  41659f:	mov    dh,0x2a
  4165a1:	xor    eax,esi
  4165a3:	enter  0x254c,0xe2
  4165a7:	retf   
  4165a8:	ds xor al,bh
  4165ab:	bound  edi,QWORD PTR [edx]
  4165ad:	daa    
  4165ae:	(bad)  
  4165af:	rol    BYTE PTR [esi+esi*1],1
  4165b2:	jmp    0x33a0:0x962717db
  4165b9:	push   esp
  4165ba:	jbe    0x416561
  4165bc:	ss push edx
  4165be:	ret    0x2eb4
  4165c1:	push   eax
  4165c2:	xchg   esi,eax
  4165c3:	mov    al,ds:0xa9d7541b
  4165c8:	sbb    eax,0xd9d2c004
  4165cd:	sub    DWORD PTR [esi+0x7335b7b6],edx
  4165d3:	rol    al,0x2f
  4165d6:	jne    0x4165ad
  4165d8:	out    0x84,eax
  4165da:	ins    DWORD PTR es:[edi],dx
  4165db:	push   esi
  4165dc:	not    BYTE PTR [ecx+0x34d04b27]
  4165e2:	xor    ebx,DWORD PTR [edx+0x0]
  4165e5:	shl    DWORD PTR [ecx-0x390c8f32],0x86
  4165ec:	add    BYTE PTR [ecx-0x658f317f],dl
  4165f2:	ret    
  4165f3:	xchg   BYTE PTR ds:0xe9,ch
	...
  416605:	add    BYTE PTR [eax],al
  416607:	add    BYTE PTR [edi-0x32],ch
  41660a:	jo     0x4165df
  41660c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41660d:	xchg   BYTE PTR [eax],al
  41660f:	xchg   esi,eax
  416610:	lds    esi,FWORD PTR gs:[edx-0x78]
  416614:	xchg   ebp,eax
  416615:	iret   
  416616:	pop    edi
  416617:	xchg   DWORD PTR [ecx-0x78],esi
  41661a:	fs mov cl,cl
  41661d:	bound  ebx,QWORD PTR [ebp+0x3a]
  416620:	mov    ecx,0xbb5674c0
  416625:	aam    0x63
  416627:	xor    eax,0x5b63d2c9
  41662c:	mov    ebx,0xb0565182
  416631:	into   
  416632:	jne    0x41667c
  416634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416635:	lds    eax,FWORD PTR [eax]
  416637:	and    eax,0x974d3b3
  41663c:	faddp  st(1),st
  41663e:	jb     0x41664c
  416640:	jne    0x416610
  416642:	ins    DWORD PTR es:[edi],dx
  416643:	sbb    eax,DWORD PTR [ebx+0x73250093]
  416649:	shl    DWORD PTR [ecx+ecx*8-0x1e],cl
  41664d:	enter  0xfd71,0x72
  416651:	(bad)  
  416652:	ins    BYTE PTR es:[edi],dx
  416653:	leave  
  416654:	lds    edi,FWORD PTR [ecx-0x586dfe8c]
  41665a:	jo     0x416660
  41665c:	les    edi,FWORD PTR [ecx-0x529e4ed2]
  416662:	dec    esp
  416663:	mov    ebp,0xc563cac4
  416668:	test   eax,0xd96db6
	...
  41667d:	add    BYTE PTR [esi-0x23ffa338],bh
  416683:	xchg   DWORD PTR [ecx+0x6d],ebp
  416686:	into   
  416687:	xchg   BYTE PTR [eax+eax*1+0x18],ah
  41668b:	xchg   BYTE PTR [edi+0x65],ch
  41668e:	fst    DWORD PTR [eax-0x70d28c90]
  416694:	outs   dx,DWORD PTR ds:[esi]
  416695:	cs or  eax,0x3006e86
  41669b:	sahf   
  41669c:	pop    edi
  41669d:	gs std 
  41669f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a0:	push   esp
  4166a1:	add    BYTE PTR [eax+ecx*4],cl
  4166a4:	data16 je 0x4166cf
  4166a7:	jle    0x41671b
  4166a9:	add    ebx,DWORD PTR gs:[esi-0x58c29aa1]
  4166b0:	push   esp
  4166b1:	add    dl,al
  4166b3:	mov    ah,0x51
  4166b5:	add    BYTE PTR [edi+eiz*4-0x6247abba],bh
  4166bc:	push   edx
  4166bd:	inc    ebp
  4166be:	ret    
  4166bf:	mov    ds:0x93ac616c,eax
  4166c4:	popa   
  4166c5:	jae    0x41664a
  4166c7:	mov    edx,0xb2ca7075
  4166cc:	bound  esp,QWORD PTR gs:[ebx+0x6e423f9b]
  4166d3:	sahf   
  4166d4:	xor    al,BYTE PTR [ebx+0x5f]
  4166d7:	sahf   
  4166d8:	sub    DWORD PTR [eax],edi
  4166da:	pop    edi
  4166db:	push   edi
  4166dc:	xor    DWORD PTR ds:0x433d9f4b,ebp
	...
  4166f2:	add    BYTE PTR [eax],al
  4166f4:	inc    edx
  4166f5:	mov    ds:0x52ea463f,al
  4166fa:	xor    DWORD PTR [ecx],esi
  4166fc:	outs   dx,BYTE PTR ds:[esi]
  4166fd:	push   eax
  4166fe:	xor    DWORD PTR [ebp+0x4d],eax
  416701:	push   ecx
  416702:	inc    ebx
  416703:	aaa    
  416704:	test   al,0x4f
  416706:	jp     0x416708
  416708:	cmp    al,0xa9
  41670a:	inc    esi
  41670b:	push   esp
  41670c:	xchg   esi,eax
  41670d:	sbb    BYTE PTR [edx+edx*2+0x5b],al
  416711:	add    eax,0x1c776c42
  416716:	xor    ah,BYTE PTR [ebx+0x65]
  416719:	cmc    
  41671a:	push   esp
  41671b:	ja     0x416783
  41671d:	es dec ebp
  41671f:	addr16 xor al,0xe5
  416722:	cmp    DWORD PTR [edi],esi
  416724:	push   ebx
  416725:	or     bh,al
  416727:	xor    cl,BYTE PTR [ebx+0x532afc3b]
  41672d:	cmp    ch,bh
  41672f:	xor    DWORD PTR [ebx+0x6132f62d],eax
  416735:	cs aas 
  416737:	inc    ecx
  416738:	imul   esp,DWORD PTR [edx],0x116242f0
  41673e:	out    dx,eax
  41673f:	xor    bl,al
  416741:	adc    ecx,esi
  416743:	xor    al,0xc5
  416745:	jnp    0x416786
  416747:	jnp    0x4166df
  416749:	mov    al,0x29
  41674b:	jno    0x416740
  41674d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41674e:	cmp    BYTE PTR [eax-0x1b],dh
  416751:	mov    ebx,0xb2b87136
  416756:	add    BYTE PTR cs:[bx+si],al
	...
  41676a:	xchg   esi,eax
  41676b:	nop
  41676c:	sub    DWORD PTR [ecx-0xd],esi
  41676f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416770:	cmp    BYTE PTR [eax-0x80],dh
  416773:	mov    ds:0x8796672e,al
  416778:	pop    eax
  416779:	push   eax
  41677a:	call   0xb1a0a0e7
  41677f:	data16 xor ch,BYTE PTR [esi]
  416782:	mov    eax,0xd000346d
  416787:	jne    0x4167dd
  416789:	push   esi
  41678a:	mov    cl,0x62
  41678c:	and    DWORD PTR [ebp-0x4d],esp
  41678f:	pop    ebx
  416790:	jmp    0x416800
  416792:	jne    0x4167dd
  416794:	pop    ebp
  416795:	push   edx
  416796:	jle    0x4167fa
  416798:	shr    BYTE PTR ds:0x25ceb373,1
  41679e:	or     BYTE PTR [eax+0x627d2cca],0xbd
  4167a5:	xor    BYTE PTR [edi-0x6d],ah
  4167a8:	adc    eax,0xe7c67228
  4167ad:	dec    ebp
  4167ae:	inc    edi
  4167af:	mov    bl,0x96
  4167b1:	dec    edx
  4167b2:	inc    eax
  4167b3:	leave  
  4167b4:	mov    bl,0x3
  4167b6:	pop    eax
  4167b7:	mov    bl,0xba
  4167b9:	pop    esp
  4167ba:	addr16 retf 0x3794
  4167be:	xor    al,bh
  4167c0:	sahf   
  4167c1:	sub    eax,0x50baa896
  4167c6:	push   esp
  4167c7:	sar    DWORD PTR [edx+0x26],0x68
  4167cb:	mov    ds,WORD PTR [esi+0x47]
	...
  4167dd:	add    BYTE PTR [eax],al
  4167df:	add    BYTE PTR ds:0xf52786c3,dh
  4167e5:	mov    al,ds:0xbff02574
  4167ea:	pop    ecx
  4167eb:	add    al,0xe7
  4167ed:	lahf   
  4167ee:	sub    cl,BYTE PTR [ebx-0x1e]
  4167f1:	lahf   
  4167f2:	and    al,0x5d
  4167f4:	fcom   st(0)
  4167f6:	inc    esp
  4167f7:	daa    
  4167f8:	ror    esi,1
  4167fa:	dec    esp
  4167fb:	das    
  4167fc:	xchg   esi,eax
  4167fd:	mov    dl,0x32
  4167ff:	repz test al,0xb5
  416802:	cs daa 
  416804:	retf   0x3dab
  416807:	cmp    BYTE PTR [ebp-0x4ddcea30],dh
  41680d:	test   eax,0xc6e73b04
  416812:	push   es
  416813:	cmp    BYTE PTR [esi+0x78f322b2],dl
  416819:	mov    ch,0x28
  41681b:	aaa    
  41681c:	stos   BYTE PTR es:[edi],al
  41681d:	retf   0x2e04
  416820:	mov    ds:0xb50a00cb,al
  416825:	into   
  416826:	arpl   cx,bp
  416828:	gs stos DWORD PTR es:[edi],eax
  41682a:	das    
  41682b:	sbb    BYTE PTR [edi-0x62],ah
  41682e:	push   edx
  41682f:	mov    esi,0xdb61c151
  416834:	lods   al,BYTE PTR ds:[esi]
  416835:	shl    BYTE PTR [ecx+ebp*8+0x45],cl
  416839:	stos   DWORD PTR es:[edi],eax
  41683a:	das    
  41683b:	clc    
  41683c:	inc    edx
  41683d:	pushf  
  41683e:	jb     0x416804
  416840:	mov    al,0xb3
  416842:	ins    BYTE PTR es:[edi],dx
  416843:	mov    BYTE PTR [eax],0x0
	...
  416856:	mov    DWORD PTR [edx+0x0],esp
  416859:	jmp    0xe941caf3
  41685e:	xchg   ebp,eax
  41685f:	bound  eax,QWORD PTR [eax]
  416861:	jmp    0xe941cafb
  416866:	xchg   ebp,eax
  416867:	bound  eax,QWORD PTR [eax]
  416869:	jmp    0xe941cb03
  41686e:	xchg   ebp,eax
  41686f:	bound  eax,QWORD PTR [eax]
  416871:	jmp    0xe941cb0b
  416876:	xchg   ebp,eax
  416877:	bound  eax,QWORD PTR [eax]
  416879:	jp     0x41683f
  41687b:	(bad)  
  41687c:	addr16 pop ebp
  41687e:	mov    bh,0x93
  416880:	cs inc ebp
  416882:	scas   al,BYTE PTR es:[edi]
  416883:	mov    BYTE PTR [eax],0x5a
  416886:	stos   DWORD PTR es:[edi],eax
  416887:	(bad)  
  416888:	addr16 push ebp
  41688a:	mov    bh,0x93
  41688c:	pop    ebp
  41688d:	push   esi
  41688e:	stos   BYTE PTR es:[edi],al
  41688f:	shr    DWORD PTR [esi-0x17],0xa0
  416893:	lds    ebp,FWORD PTR [eax+eax*2-0x7a]
  416897:	shl    DWORD PTR [ecx],0xe
  41689a:	jno    0x416862
  41689c:	ins    DWORD PTR es:[edi],dx
  41689d:	sbb    dh,BYTE PTR [edi+0x62]
  4168a0:	jno    0x4168ba
  4168a2:	outs   dx,BYTE PTR ds:[esi]
  4168a3:	mov    ebp,0xb6290c74
  4168a8:	jo     0x4168c5
  4168aa:	ja     0x41687e
  4168ac:	pop    edi
  4168ad:	add    BYTE PTR ds:0x1e730082,bl
  4168b3:	jge    0x41691a
  4168b5:	je     0x416859
  4168b7:	dec    ebp
  4168b8:	pop    esp
  4168b9:	jae    0x4168bb
	...
  4168cb:	add    BYTE PTR [ebx],al
  4168cd:	xor    BYTE PTR [eax+0x0],0xdc
  4168d1:	lea    ebp,[ecx+ebp*2-0x1d]
  4168d5:	sub    DWORD PTR [edi],0x6c87dc5f
  4168db:	jne    0x416907
  4168dd:	mov    ebx,DWORD PTR [ebx+0x62]
  4168e0:	(bad)  
  4168e1:	test   BYTE PTR [ecx+0x73],ah
  4168e4:	out    dx,eax
  4168e5:	mov    ebp,DWORD PTR [ebp+0x6c]
  4168e8:	(bad)  
  4168e9:	test   BYTE PTR [ecx+0x33],ah
  4168ec:	sbb    BYTE PTR [ebx+ebp*2+0x6c],bh
  4168f0:	and    cl,BYTE PTR [edx+0x7d0d5f6e]
  4168f6:	imul   esp,DWORD PTR [edx-0x41],0x60
  4168fa:	imul   ebp,DWORD PTR [edi+0x5],0x66c6d8c
  416901:	test   DWORD PTR [ecx+0x33],esp
  416904:	leave  
  416905:	je     0x416973
  416907:	ins    BYTE PTR es:[edi],dx
  416908:	jg     0x416897
  41690a:	ins    DWORD PTR es:[edi],dx
  41690b:	ins    BYTE PTR es:[edi],dx
  41690c:	push   ss
  41690d:	test   BYTE PTR [ecx+0x33],ah
  416910:	fadd   DWORD PTR [edi+0x5ec96570]
  416916:	outs   dx,DWORD PTR ds:[esi]
  416917:	jno    0x4168f4
  416919:	test   DWORD PTR [ebp+eiz*2-0x74],esi
  41691d:	mov    bh,0x5f
  41691f:	ins    BYTE PTR es:[edi],dx
  416920:	enter  0x618b,0x0
  416924:	pushf  
  416925:	lea    ebp,[ecx+ebp*2-0x6d]
  416929:	sub    DWORD PTR [edi],0x618c8f5f
  41692f:	jo     0x416931
	...
  416941:	add    BYTE PTR [esi-0x63ff9e74],cl
  416947:	lea    ebp,[ecx+ebp*2-0x6a]
  41694b:	jne    0x41696c
  41694d:	xor    ecx,ecx
  41694f:	js     0x416981
  416951:	arpl   WORD PTR [esi-0x5590c9b7],sp
  416957:	jb     0x416989
  416959:	arpl   bp,ax
  41695b:	ins    BYTE PTR es:[edi],dx
  41695c:	and    eax,0x284e7a6d
  416961:	outs   dx,BYTE PTR ds:[esi]
  416962:	popa   
  416963:	daa    
  416964:	cmp    al,0x74
  416966:	jae    0x4169a0
  416968:	add    DWORD PTR [ecx+0x67],esi
  41696b:	sbb    eax,0x7873742c
  416970:	pop    ecx
  416971:	popa   
  416972:	jno    0x4169a1
  416974:	xor    BYTE PTR [ebx+0x68],ch
  416977:	hlt    
  416978:	and    ch,BYTE PTR [ecx+eax*2+0x27]
  41697c:	add    DWORD PTR [eax],eax
  41697e:	xchg   esi,eax
  41697f:	dec    ecx
  416980:	add    DWORD PTR [eax],eax
  416982:	xchg   esi,eax
  416983:	dec    ecx
  416984:	add    DWORD PTR [eax],eax
  416986:	xchg   esi,eax
  416987:	dec    ecx
  416988:	add    DWORD PTR [eax],eax
  41698a:	xchg   esi,eax
  41698b:	dec    ecx
  41698c:	add    DWORD PTR [eax],eax
  41698e:	xchg   esi,eax
  41698f:	dec    ecx
  416990:	add    DWORD PTR [eax],eax
  416992:	xchg   esi,eax
  416993:	dec    ecx
  416994:	add    DWORD PTR [eax],eax
  416996:	xchg   esi,eax
  416997:	dec    ecx
  416998:	add    DWORD PTR [eax],eax
  41699a:	xchg   esi,eax
  41699b:	dec    ecx
  41699c:	add    DWORD PTR [eax],eax
  41699e:	push   es
  41699f:	fsubr  DWORD PTR [edx]
  4169a1:	out    dx,ax
  4169a3:	lods   eax,DWORD PTR ds:[esi]
  4169a4:	sbb    eax,0x71
	...
  4169b5:	add    BYTE PTR [eax],al
  4169b7:	add    BYTE PTR [eax-0x6998d54e],ch
  4169bd:	cdq    
  4169be:	ss ins DWORD PTR es:[edi],dx
  4169c0:	lock mov ds:0x92966328,al
  4169c6:	xor    edx,DWORD PTR [edx-0xd]
  4169c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ca:	and    DWORD PTR [edi+edi*4-0x6d],esi
  4169ce:	sbb    eax,0x30aae600
  4169d3:	push   0x23376296
  4169d8:	ret    0x33ca
  4169db:	sub    ebp,edx
  4169dd:	fimul  DWORD PTR [esp+eax*1]
  4169e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e1:	leave  
  4169e2:	push   es
  4169e3:	sub    dh,BYTE PTR [ebx-0x5916053c]
  4169e9:	ror    DWORD PTR [ebx],1
  4169eb:	sub    ecx,DWORD PTR [edx+0x7134e7bd]
  4169f1:	mov    ebx,0xcf7028fd
  4169f6:	adc    eax,0xe7ce7e30
  4169fb:	xor    al,0x79
  4169fd:	mov    ebx,0xcf7828c5
  416a02:	sbb    edx,ebp
  416a04:	fidivr DWORD PTR gs:[ebx-0x393698fd]
  416a0b:	sub    DWORD PTR [ebx-0x3c],eax
  416a0e:	mov    edx,0xafce7bf4
  416a13:	das    
  416a14:	xchg   esi,eax
  416a15:	jg     0x4169f0
  416a17:	and    al,0x96
  416a19:	jg     0x4169f4
  416a1b:	pop    ds
	...
  416a2c:	add    BYTE PTR [eax],al
  416a2e:	xchg   esi,eax
  416a2f:	jg     0x416a0a
  416a31:	push   ds
  416a32:	xchg   esi,eax
  416a33:	scas   eax,DWORD PTR es:[edi]
  416a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a35:	inc    edi
  416a36:	push   ebp
  416a37:	lahf   
  416a38:	fwait
  416a39:	jecxz  0x416a6c
  416a3b:	ret    
  416a3c:	jp     0x416a6d
  416a3e:	add    ah,al
  416a40:	test   BYTE PTR [esi],bl
  416a42:	mov    edx,0xf7298482
  416a47:	aam    0x60
  416a49:	xor    al,0x2
  416a4b:	enter  0x4f43,0xe7
  416a4f:	(bad)  
  416a50:	pop    ecx
  416a51:	sub    cl,cl
  416a53:	mov    edi,0xc781e844
  416a58:	push   ebp
  416a59:	and    eax,0x3037cbe4
  416a5e:	mov    ch,0xc6
  416a60:	add    BYTE PTR [ecx],bl
  416a62:	jne    0x416a37
  416a64:	jno    0x416a9c
  416a66:	outs   dx,DWORD PTR ds:[esi]
  416a67:	aam    0x64
  416a69:	leave  
  416a6a:	xlat   BYTE PTR ds:[ebx]
  416a6b:	mov    ah,0x4d
  416a6d:	sub    al,0x3a
  416a6f:	mov    ebp,0xbecf136d
  416a74:	ins    DWORD PTR es:[edi],dx
  416a75:	push   es
  416a76:	ins    DWORD PTR es:[edi],dx
  416a77:	shl    BYTE PTR [ecx-0x17],0xd7
  416a7b:	leave  
  416a7c:	jb     0x416a82
  416a7e:	mov    ah,0xbf
  416a80:	js     0x416a6b
  416a82:	popa   
  416a83:	popf   
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	rep lods al,BYTE PTR ds:[esi]
  416a87:	mov    esi,0xa861c86c
  416a8c:	fist   DWORD PTR [bx+si+0x6dc8]
  416a91:	rol    DWORD PTR [eax],1
	...
  416aa3:	add    BYTE PTR [ecx+0x62],al
  416aa6:	push   ecx
  416aa7:	mov    esi,0xc875d6b7
  416aac:	mov    ds:0x7eac5cc5,eax
  416ab1:	int3   
  416ab2:	lds    esi,FWORD PTR [bx+di-0x4f]
  416ab6:	add    ah,bh
  416ab8:	mov    eax,0x698f007c
  416abd:	sar    BYTE PTR [edx],cl
  416abf:	into   
  416ac0:	mov    esi,0x799d6551
  416ac5:	sar    BYTE PTR [edx],cl
  416ac7:	mov    esi,0x7d6551ae
  416acc:	imul   edx,edx,0x7e7ec371
  416ad2:	add    BYTE PTR [edi-0x16d12d47],cl
  416ad8:	mov    bh,0xc9
  416ada:	jb     0x416b28
  416adc:	mov    eax,0xc35a50b6
  416ae1:	(bad)  
  416ae2:	arpl   WORD PTR [edx+0x70],bx
  416ae5:	lds    ebx,FWORD PTR [edi+0x55]
  416ae8:	call   0x6b9b:0xce0063b3
  416aef:	outs   dx,BYTE PTR ds:[esi]
  416af0:	in     al,0x83
  416af2:	jne    0x416af4
  416af4:	mov    ds:0xd67a6b9b,eax
  416af9:	jp     0x416b67
  416afb:	popa   
  416afc:	shl    DWORD PTR [ebp-0x767d9e9f],cl
  416b02:	outs   dx,BYTE PTR ds:[esi]
  416b03:	imul   ebx,DWORD PTR [edx+0x5c8f],0x0
	...
  416b1a:	jns    0x416b96
  416b1c:	imul   esp,DWORD PTR [ebx-0x7c],0x66
  416b20:	pop    esp
  416b21:	inc    esi
  416b22:	mov    ds:0xa36b5f89,eax
  416b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b28:	jb     0x416b99
  416b2a:	or     BYTE PTR [ecx+eiz*2+0x4964d372],dl
  416b31:	outs   dx,DWORD PTR ds:[esi]
  416b32:	cmc    
  416b33:	jge    0x416ba1
  416b35:	ins    BYTE PTR es:[edi],dx
  416b36:	fisub  WORD PTR [esp+ebx*2+0x4d]
  416b3a:	and    BYTE PTR [ebx-0x7a3c939b],cl
  416b40:	pop    esp
  416b41:	push   eax
  416b42:	or     eax,0xd3696688
  416b47:	sub    DWORD PTR [edi+0x5c],0x666bb3af
  416b4e:	sbb    eax,DWORD PTR [eax-0x46e58da3]
  416b54:	dec    esp
  416b55:	sbb    al,BYTE PTR gs:[eax+ebp*2+0xb4eb46]
  416b5d:	inc    ecx
  416b5e:	pop    ds
  416b5f:	xchg   ebp,eax
  416b60:	inc    esp
  416b61:	imul   ecx,DWORD PTR ds:0x1c6f4c64,0x16446c87
  416b6b:	xchg   edx,eax
  416b6c:	add    BYTE PTR [edx-0x20],ah
  416b6f:	xchg   DWORD PTR [edi+0x6d],esp
  416b72:	ficom  WORD PTR [edi+eiz*2+0x239d962e]
  416b79:	je     0x416b11
  416b7b:	mov    WORD PTR [ebx],gs
  416b7d:	je     0x416b7f
	...
  416b8f:	add    bl,dh
  416b91:	xchg   edx,eax
  416b92:	rcr    WORD PTR es:[edi+0x53],0x46
  416b98:	out    0x39,al
  416b9a:	inc    esi
  416b9b:	fs scas eax,DWORD PTR es:[edi]
  416b9d:	pop    DWORD PTR [esi+eax*2]
  416ba0:	mov    bh,0x6f
  416ba2:	and    eax,0x1f75bf72
  416ba7:	jno    0x416c21
  416ba9:	pop    ebp
  416baa:	and    esi,DWORD PTR [esi+edx*4-0x68]
  416bae:	sub    ebp,DWORD PTR [esi-0x30]
  416bb1:	ins    DWORD PTR es:[edi],dx
  416bb2:	push   esp
  416bb3:	add    BYTE PTR [ebp-0x7a9ccf8e],al
  416bb9:	daa    
  416bba:	sbb    eax,0x487c9662
  416bbf:	push   ecx
  416bc0:	dec    edi
  416bc1:	std    
  416bc2:	push   esp
  416bc3:	jns    0x416b6c
  416bc5:	push   0x41
  416bc7:	das    
  416bc8:	push   edx
  416bc9:	jo     0x416bbb
  416bcb:	cs mov bl,0xfa
  416bce:	sti    
  416bcf:	xor    dl,BYTE PTR [esi+esi*2-0xd]
  416bd3:	cmp    cl,BYTE PTR cs:[ebx-0x18]
  416bd7:	aaa    
  416bd8:	push   edi
  416bd9:	push   ecx
  416bda:	icebp  
  416bdb:	sub    al,BYTE PTR [esi+0x572ff949]
  416be1:	std    
  416be2:	xor    DWORD PTR ds:[edi+eax*1+0x3b],esp
  416be7:	xor    al,0x2b
  416be9:	adc    eax,0xeb466e4c
  416bee:	and    eax,0x2ede4561
  416bf3:	jbe    0x416bf5
	...
  416c05:	add    bl,bh
  416c07:	retf   
  416c08:	repnz xor DWORD PTR [esi+0x87220cc],edx
  416c0f:	out    0x2e,eax
  416c11:	jno    0x416bbb
  416c13:	bound  ebx,QWORD PTR [edi+0x27]
  416c16:	add    ah,BYTE PTR [ebx+0x3b]
  416c19:	ds ret 0x2eb2
  416c1d:	pop    ds
  416c1e:	jmp    0x1aa5:0x963244d6
  416c25:	push   eax
  416c26:	mov    edx,0xb5e5f9c4
  416c2b:	sar    DWORD PTR [ebx],0x4
  416c2e:	shl    DWORD PTR [esi-0x7f26cfb8],1
  416c34:	or     esp,DWORD PTR [ebx]
  416c36:	stos   BYTE PTR es:[edi],al
  416c37:	bound  edi,QWORD PTR [ebx]
  416c39:	aas    
  416c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c3b:	(bad)  
  416c3c:	sbb    ah,BYTE PTR ds:0x432bd6b8
  416c42:	retf   0x1ba8
  416c45:	push   esp
  416c46:	xchg   esi,eax
  416c47:	cdq    
  416c48:	or     eax,0x5d47530
  416c4d:	pop    ds
  416c4e:	mov    al,BYTE PTR [edx-0x4179c3dc]
  416c54:	(bad)  
  416c55:	xor    DWORD PTR [ebp-0x2c],esi
  416c58:	out    0x4c,eax
  416c5a:	jno    0x416c1c
  416c5c:	shl    BYTE PTR ds:0x22aad675,0x77
  416c63:	mov    edx,0xc54440cc
  416c68:	ret    
  416c69:	push   ds
	...
  416c7a:	add    BYTE PTR [eax],al
  416c7c:	cmp    dh,dl
  416c7e:	shl    BYTE PTR [edx],0x32
  416c81:	shl    edi,cl
  416c83:	inc    esi
  416c84:	xor    BYTE PTR [bx+si+0x763e],0xa8
  416c8a:	mov    bl,0x53
  416c8c:	jbe    0x416c40
  416c8e:	mov    BYTE PTR [eax],dh
  416c90:	daa    
  416c91:	xlat   BYTE PTR ds:[ebx]
  416c92:	jle    0x416cc5
  416c94:	xor    dl,bl
  416c96:	out    0x3f,eax
  416c98:	out    0xa3,al
  416c9a:	xchg   edi,eax
  416c9b:	dec    edx
  416c9c:	int3   
  416c9d:	add    BYTE PTR [eax],0xe9
  416ca0:	(bad)
  416ca3:	jle    0x416c6c
  416ca5:	shl    DWORD PTR [ecx+0x17],0xb6
  416ca9:	mov    esi,0xb3c5e96c
  416cae:	je     0x416cf6
  416cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cb1:	rol    DWORD PTR [ecx+0x5b],0x79
  416cb5:	lods   eax,DWORD PTR ds:[esi]
  416cb6:	je     0x416d04
  416cb8:	fnstsw WORD PTR [ecx+esi*2+0x61bc7535]
  416cbf:	dec    esp
  416cc0:	call   0x74d2:0x7d3b6162
  416cc7:	fisub  DWORD PTR [edi]
  416cc9:	and    BYTE PTR [ebp+ecx*1+0x7e],0x62
  416cce:	inc    ecx
  416ccf:	sbb    ebx,DWORD PTR [ebp-0x2e]
  416cd2:	je     0x416d08
  416cd4:	jo     0x416ca8
  416cd6:	jb     0x416cee
  416cd8:	mov    cl,0x61
  416cdb:	cmc    
  416cdc:	leave  
  416cdd:	lods   eax,DWORD PTR ds:[esi]
  416cde:	je     0x416ce8
	...
  416cf0:	add    BYTE PTR [eax],al
  416cf2:	call   0x62:0x95e90062
  416cf9:	jmp    0xa941cf93
  416cfe:	pop    edi
  416cff:	xchg   edi,eax
  416d00:	cmp    al,0x4d
  416d02:	pop    edi
  416d03:	pop    ds
  416d04:	jle    0xe9ebcfaa
  416d0a:	jl     0x416cb0
  416d0c:	out    dx,al
  416d0d:	test   al,0x5f
  416d0f:	xchg   edi,eax
  416d10:	cmp    al,0x4d
  416d12:	aas    
  416d13:	pop    ds
  416d14:	movd   mm0,DWORD PTR [eax+0x7ce9aa62]
  416d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d1c:	out    dx,al
  416d1d:	stos   DWORD PTR es:[edi],eax
  416d1e:	pop    edi
  416d1f:	xchg   edi,eax
  416d20:	cmp    al,0xd
  416d22:	pop    ds
  416d23:	pop    ds
  416d24:	cmovle esp,DWORD PTR [eax+0x62]
  416d28:	stos   BYTE PTR es:[edi],al
  416d29:	add    BYTE PTR [edi+0x78],bh
  416d2c:	inc    esi
  416d2d:	out    dx,al
  416d2e:	dec    eax
  416d2f:	popa   
  416d30:	add    BYTE PTR [eax],al
  416d32:	push   edx
  416d33:	push   ecx
  416d34:	das    
  416d35:	pop    eax
  416d36:	outs   dx,DWORD PTR ds:[esi]
  416d37:	mov    dl,0x6b
  416d39:	ror    WORD PTR [ecx-0x4d2d8da3],cl
  416d40:	dec    ecx
  416d41:	imul   ecx,esp,0x98736b94
  416d47:	js     0x416dbd
  416d49:	pop    esp
  416d4a:	xchg   BYTE PTR [eax-0x7f729a8c],al
  416d50:	popa   
  416d51:	je     0x416ce2
  416d53:	fwait
  416d54:	js     0x416dc6
	...
  416d66:	add    BYTE PTR [eax],al
  416d68:	jnp    0x416ceb
  416d6a:	jb     0x416dd1
  416d6c:	lea    esi,[edx+0x7b836e45]
  416d72:	ins    BYTE PTR es:[edi],dx
  416d73:	ins    BYTE PTR es:[edi],dx
  416d74:	xchg   esi,eax
  416d75:	cwde   
  416d76:	imul   esi,DWORD PTR [edx+0x1a],0xffffff94
  416d7a:	pop    esp
  416d7b:	push   ebx
  416d7c:	adc    eax,DWORD PTR [eax+0x7b906172]
  416d82:	xor    al,BYTE PTR [eax]
  416d84:	out    dx,eax
  416d85:	pusha  
  416d86:	add    BYTE PTR [eax],al
  416d88:	mov    fs,WORD PTR [esi+0x62]
  416d8b:	add    dl,ah
  416d8d:	pusha  
  416d8e:	xor    al,BYTE PTR [eax]
  416d90:	mov    bh,0x66
  416d92:	add    BYTE PTR ss:[esi-0x25ff999a],al
  416d99:	pusha  
  416d9a:	xor    eax,0x3460dd00
  416d9f:	add    al,al
  416da1:	pusha  
  416da2:	sub    DWORD PTR [eax],eax
  416da4:	ret    
  416da5:	pusha  
  416da6:	pop    edi
  416da7:	add    bl,dl
  416da9:	pusha  
  416daa:	xor    eax,0x5d60ca00
  416daf:	add    ah,cl
  416db1:	pusha  
  416db2:	xor    DWORD PTR [eax],eax
  416db4:	xchg   esi,eax
  416db5:	xor    eax,DWORD PTR [ecx]
  416db7:	sub    edx,DWORD PTR [esi-0x69cdff28]
  416dbd:	pop    es
  416dbe:	add    DWORD PTR [edi],esi
  416dc0:	xchg   esi,eax
  416dc1:	or     DWORD PTR [ecx],eax
  416dc3:	xor    al,0x96
  416dc5:	fld    QWORD PTR [eax]
  416dc7:	bound  edx,QWORD PTR [esi+0x3500da]
	...
  416ddd:	add    BYTE PTR [esi-0x69cafb65],dl
  416de3:	cmp    DWORD PTR [ecx],eax
  416de5:	dec    ebx
  416de6:	out    dx,eax
  416de7:	cwde   
  416de8:	ss ins DWORD PTR es:[edi],dx
  416dea:	in     eax,0x8c
  416dec:	sub    dh,BYTE PTR [ecx+esi*8+0x6c]
  416df0:	sbb    ebp,DWORD PTR [esi-0x21]
  416df3:	fwait
  416df4:	daa    
  416df5:	je     0x416dd8
  416df7:	pop    edi
  416df8:	add    al,0x66
  416dfa:	ret    0xee89
  416dfd:	sub    al,0x81
  416dff:	cmp    DWORD PTR [esi+0x6d],edx
  416e02:	mov    al,0x75
  416e04:	cmp    DWORD PTR [edi-0x5c],ebx
  416e07:	pop    esi
  416e08:	push   eax
  416e09:	aas    
  416e0a:	mov    dl,0x4c
  416e0c:	and    esp,DWORD PTR [ebx+0x72]
  416e0f:	js     0x416e32
  416e11:	imul   edi,DWORD PTR [ebx+0x5c],0x22
  416e15:	add    BYTE PTR [ebp+0x62],ah
  416e18:	cmp    BYTE PTR [ebx+0x65],ah
  416e1b:	data16 ss jbe 0x416e9a
  416e1f:	daa    
  416e20:	add    BYTE PTR ss:[ebp+0x32],al
  416e24:	xor    eax,0x331e4563
  416e29:	jbe    0x416e9e
  416e2b:	daa    
  416e2c:	loope  0x416e50
  416e2e:	cmp    al,BYTE PTR ds:0x15456d39
  416e34:	add    DWORD PTR [ecx+0x2f],edx
  416e37:	or     eax,0x7335128
  416e3c:	aaa    
  416e3d:	arpl   WORD PTR [edx+eiz*2],sp
  416e40:	(bad)  
  416e41:	call   0x416e46
	...
  416e52:	add    BYTE PTR [eax],al
  416e54:	xor    eax,0x3428b6ae
  416e59:	mov    ch,0x99
  416e5b:	pop    ds
  416e5c:	xchg   esi,eax
  416e5d:	scas   eax,DWORD PTR es:[edi]
  416e5e:	xor    BYTE PTR [edi],0xf5
  416e61:	scas   eax,DWORD PTR es:[edi]
  416e62:	mov    WORD PTR ds:0xe379c600,?
  416e68:	mov    ah,0xc6
  416e6a:	xchg   ebx,eax
  416e6b:	push   ebp
  416e6c:	cmc    
  416e6d:	mov    ebp,0x82f5377e
  416e72:	sub    ebx,DWORD PTR [ebx]
  416e74:	in     al,0xc5
  416e76:	dec    edx
  416e77:	cmp    bl,dh
  416e79:	rcl    BYTE PTR [eax+0x4],1
  416e7c:	(bad)  
  416e7d:	mov    ecx,0xc5e72753
  416e82:	cmp    DWORD PTR [edx],edi
  416e84:	mov    ch,0xd0
  416e86:	pop    es
  416e87:	out    0xb5,eax
  416e89:	jge    0x416ea7
  416e8b:	xor    eax,0x54e7d0b5
  416e90:	mov    ecx,0xb5550cd6
  416e95:	rcl    BYTE PTR ds:0xcc82a427,1
  416e9b:	daa    
  416e9c:	ins    DWORD PTR es:[edi],dx
  416e9d:	mov    ch,0x1a
  416e9f:	daa    
  416ea0:	test   BYTE PTR [edx-0x7a69a6e9],al
  416ea6:	cli    
  416ea7:	dec    edi
  416ea8:	dec    edi
  416ea9:	(bad)
  416eac:	outs   dx,BYTE PTR ds:[esi]
  416ead:	rol    DWORD PTR [eax],0x22
  416eb0:	xchg   esi,eax
  416eb1:	scas   eax,DWORD PTR es:[edi]
  416eb2:	shl    BYTE PTR [edi],1
  416eb4:	jne    0x416e65
  416eb6:	les    esi,FWORD PTR ds:0x0
	...
  416ec8:	add    BYTE PTR [eax],al
  416eca:	push   0xb4e3d9c5
  416ecf:	(bad)  
  416ed0:	stos   DWORD PTR es:[edi],eax
  416ed1:	push   esp
  416ed2:	pop    eax
  416ed3:	mov    dh,0x97
  416ed5:	add    edx,DWORD PTR [edx-0x3b]
  416ed8:	retf   
  416ed9:	ss lds eax,FWORD PTR ds:[eax]
  416edd:	scas   eax,DWORD PTR es:[edi]
  416ede:	popa   
  416edf:	mov    dl,0x0
  416ee1:	mov    edx,0x9a63d68c
  416ee6:	mov    bh,0xd2
  416ee8:	imul   ecx,DWORD PTR [ebp-0x749c4a6b],0xffffffb5
  416eef:	sahf   
  416ef0:	pop    edi
  416ef1:	xchg   ebp,eax
  416ef2:	mov    ah,0x62
  416ef4:	dec    esp
  416ef5:	xchg   esi,eax
  416ef6:	mov    esi,0xd9c96ec1
  416efb:	test   eax,0xb3958874
  416f00:	dec    edi
  416f01:	popf   
  416f02:	mov    esi,cs
  416f04:	arpl   WORD PTR [ecx],cx
  416f06:	mov    esp,0xb54c72b7
  416f0b:	into   
  416f0c:	and    BYTE PTR [edx],bl
  416f0e:	xchg   edx,eax
  416f0f:	into   
  416f10:	pop    edi
  416f11:	dec    ebx
  416f12:	jbe    0x416ed9
  416f14:	add    BYTE PTR [ecx],dl
  416f16:	xchg   edx,eax
  416f17:	add    DWORD PTR [eax],0x4da39a09
  416f1d:	daa    
  416f1e:	jecxz  0x416ece
  416f20:	push   edx
  416f21:	sub    BYTE PTR [ebp-0x68],ch
  416f24:	push   esp
  416f25:	jmp    0x2c8923ef
  416f2a:	aad    0xb4
  416f2c:	push   edi
  416f2d:	jmp    0x416f32
	...
  416f3e:	add    BYTE PTR [eax],al
  416f40:	rcr    BYTE PTR [eax-0x5a96c7b9],0x0
  416f47:	sub    cl,dl
  416f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f4a:	inc    ecx
  416f4b:	xor    bl,BYTE PTR [edx+0x511b4da0]
  416f51:	mov    eax,ds:0x629a1f45
  416f56:	ins    BYTE PTR es:[edi],dx
  416f57:	(bad)  
  416f58:	mov    esi,0x95da6ec1
  416f5d:	mov    bh,0x72
  416f5f:	shr    BYTE PTR [esi-0x7751913f],0xd4
  416f66:	ins    BYTE PTR es:[edi],dx
  416f67:	add    BYTE PTR [edi-0x38ca26b],bh
  416f6d:	mov    ch,BYTE PTR [ebx+0x72]
  416f70:	retf   
  416f71:	mov    dl,0x76
  416f73:	popa   
  416f74:	pause  
  416f76:	popa   
  416f77:	add    BYTE PTR [edx],cl
  416f79:	(bad)  
  416f7a:	popa   
  416f7b:	jb     0x416f8e
  416f7d:	test   DWORD PTR [ecx+0x65],ebp
  416f80:	loopne 0x416f0d
  416f82:	pop    ebp
  416f83:	ins    BYTE PTR es:[edi],dx
  416f84:	sub    al,BYTE PTR [eax-0x69f49a00]
  416f8a:	cmp    ch,BYTE PTR [edi]
  416f8c:	push   eax
  416f8d:	gs push 0x3a95fb74
  416f93:	das    
  416f94:	xor    BYTE PTR [ebp+0x68],ah
  416f97:	je     0x416f64
  416f99:	mov    gs,WORD PTR [edi+0x3a]
  416f9c:	nop
  416f9d:	sub    ebp,edi
  416f9f:	pop    ebx
  416fa0:	test   al,0x69
  416fa2:	imul   esp,DWORD PTR [edi+0x0],0x0
	...
  416fb6:	xchg   ebx,eax
  416fb7:	jnp    0x417015
  416fb9:	inc    ebx
  416fba:	out    0x94,eax
  416fbc:	imul   ebp,DWORD PTR [ebp-0x26],0x5e
  416fc0:	pop    esp
  416fc1:	inc    ebx
  416fc2:	xlat   BYTE PTR ds:[ebx]
  416fc3:	xchg   esp,eax
  416fc4:	imul   ebp,DWORD PTR [ebp-0x2a],0xffffff8b
  416fc8:	imul   eax,DWORD PTR [eax],0x7268a5d3
  416fce:	nop
  416fcf:	and    DWORD PTR [ecx+0x50],0xffffff93
  416fd3:	mov    ebp,DWORD PTR [edi+0x0]
  416fd6:	int3   
  416fd7:	imul   esp,DWORD PTR [esi+0x74],0x65727e08
  416fde:	mov    ds:0x907268a5,eax
  416fe3:	and    DWORD PTR [ecx+0x50],0xfffffff3
  416fe7:	mov    DWORD PTR [edi+0x0],ebp
  416fea:	outs   dx,DWORD PTR es:[si]
  416fed:	je     0x416fbd
  416fef:	push   0xf7965f6c
  416ff4:	sbb    esi,DWORD PTR [edx-0x6a]
  416ff7:	idiv   DWORD PTR [esi]
  416ff9:	jb     0x417034
  416ffb:	cs sbb al,0x73
  416ffe:	xor    edi,DWORD PTR [ebx]
  417000:	dec    ebp
  417001:	dec    esi
  417002:	das    
  417003:	sbb    al,0x19
  417005:	jb     0x417048
  417007:	push   es
  417008:	sub    BYTE PTR [eax],al
  41700a:	dec    edx
  41700b:	cld    
  41700c:	sbb    eax,0x1ddf316b
  417011:	add    BYTE PTR [edx],bh
  417013:	or     eax,0xe6fd611e
  417018:	daa    
  417019:	ins    BYTE PTR es:[edi],dx
	...
  41702a:	add    BYTE PTR [eax],al
  41702c:	add    bh,BYTE PTR [edx]
  41702e:	cmp    ch,BYTE PTR [ebx]
  417030:	rcr    esi,cl
  417032:	sbb    al,0x63
  417034:	jmp    0xdd9d7118
  417039:	push   es
  41703a:	inc    eax
  41703b:	arpl   dx,di
  41703d:	xchg   esi,eax
  41703e:	sbb    eax,0x5485966e
  417043:	jb     0x41702e
  417045:	xchg   edi,eax
  417046:	sbb    ebp,DWORD PTR [ebx+edi*4-0x54]
  41704a:	add    al,0x43
  41704c:	(bad)  
  41704d:	mov    dl,0x21
  41704f:	add    dl,ah
  417051:	jle    0x417087
  417053:	addr16 mov ch,0x6d
  417056:	inc    edi
  417057:	jo     0x417018
  417059:	pushf  
  41705a:	add    al,0x51
  41705c:	mov    ds:0x7366265a,al
  417061:	jg     0x4170bb
  417063:	push   eax
  417064:	xchg   esi,eax
  417065:	ins    BYTE PTR es:[edi],dx
  417066:	sbb    esi,DWORD PTR [ebx+edi*2+0x6c]
  41706a:	fisub  WORD PTR [esi+0x78]
  41706d:	jb     0x417073
  41706f:	pop    esp
  417070:	gs jb  0x4170ab
  417073:	arpl   WORD PTR [ebp+0x7f564d39],ax
  417079:	dec    esp
  41707a:	sbb    al,0x61
  41707c:	jns    0x4170e0
  41707e:	aam    0xe3
  417080:	dec    esp
  417081:	mov    ebp,0x62391cc3
  417086:	add    eax,0xe7d24a26
  41708b:	push   edx
  41708c:	xchg   esi,eax
  41708d:	mov    ebp,0x37e7
	...
  4170a2:	xchg   esi,eax
  4170a3:	into   
  4170a4:	out    0x1c,eax
  4170a6:	xchg   esi,eax
  4170a7:	mov    eax,0xd39626e7
  4170ac:	out    0x3,eax
  4170ae:	xchg   esi,eax
  4170af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b0:	scas   al,BYTE PTR es:[edi]
  4170b1:	pop    ds
  4170b2:	xor    eax,esp
  4170b4:	mov    BYTE PTR [edi],bl
  4170b6:	jbe    0x417056
  4170b8:	xchg   BYTE PTR [esi],dh
  4170ba:	add    BYTE PTR [edi-0x420ddb82],dh
  4170c0:	jns    0x4170c5
  4170c2:	out    0x95,eax
  4170c4:	int    0x24
  4170c6:	add    al,0xc4
  4170c8:	jg     0x4170cd
  4170ca:	fcom   st(4)
  4170cc:	test   BYTE PTR [edx],dh
  4170ce:	(bad)  
  4170cf:	mov    al,ds:0x7896543b
  4170d4:	cmp    bh,BYTE PTR [edi]
  4170d6:	shl    BYTE PTR [edx+0x29],1
  4170d9:	and    cl,dh
  4170db:	int3   
  4170dc:	inc    esp
  4170dd:	inc    esi
  4170de:	ret    0xe7d2
  4170e1:	xor    BYTE PTR [ecx-0x4a21bb32],bh
  4170e7:	sar    DWORD PTR [ebx],0x4
  4170ea:	loop   0x4170ad
  4170ec:	cmp    bh,BYTE PTR [eax]
  4170ee:	mov    cl,0x1a
  4170f1:	xor    DWORD PTR [ebx-0x69d7e649],ebp
  4170f7:	xchg   esi,eax
  4170f8:	or     BYTE PTR [ecx],dh
  4170fa:	mov    ah,BYTE PTR [ecx-0x427bd7fd]
  417100:	cli    
  417101:	xor    BYTE PTR [esi+0x310896],dl
	...
  417117:	add    BYTE PTR [edx-0x4705ff53],al
  41711d:	aam    0x0
  41711f:	sbb    eax,0xb974d1b5
  417124:	adc    ah,0x74
  417127:	jmp    0xdda82672
  41712c:	mov    ah,BYTE PTR [edi-0x5fa63b8e]
  417132:	ins    BYTE PTR es:[edi],dx
  417133:	enter  0xba86,0x50
  417137:	les    esi,FWORD PTR [ecx+edi*4+0x5c]
  41713b:	stos   DWORD PTR es:[edi],eax
  41713c:	xchg   ecx,eax
  41713d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41713e:	jp     0x417104
  417140:	push   ebx
  417141:	into   
  417142:	jo     0x417109
  417144:	inc    esi
  417145:	ret    
  417146:	je     0x4170dd
  417148:	jl     0x417102
  41714a:	gs call 0xc8b4:0x7d42a695
  417152:	arpl   WORD PTR [edi-0x30ff2d37],bp
  417158:	mov    bl,0xd2
  41715a:	ins    BYTE PTR es:[edi],dx
  41715b:	jmp    0xc292203b
  417160:	dec    esi
  417161:	js     0x4171af
  417163:	push   eax
  417164:	cmp    BYTE PTR [ebx-0x3e85a5a4],0x6c
  41716b:	inc    ebp
  41716c:	out    0xb7,al
  41716e:	jo     0x4171b4
  417170:	test   al,0xa6
  417172:	popa   
  417173:	push   esi
  417174:	mov    eax,ds:0x6e4f5fb9
  417179:	bound  eax,QWORD PTR [ebp+0x46]
	...
  41718c:	add    BYTE PTR [eax],al
  41718e:	fsubr  DWORD PTR [esi-0x482916b0]
  417194:	outs   dx,BYTE PTR ds:[esi]
  417195:	pop    ss
  417196:	jns    0x41715b
  417198:	je     0x4171aa
  41719a:	jnp    0x417150
  41719c:	jno    0x417165
  41719e:	leave  
  41719f:	retf   0xe974
  4171a2:	push   es
  4171a3:	mov    ds:0xaab1002b,al
  4171a8:	push   eax
  4171a9:	add    ah,bh
  4171ab:	push   0x27ec6574
  4171b0:	data16 outs dx,BYTE PTR ds:[esi]
  4171b2:	xchg   esi,eax
  4171b3:	pop    esi
  4171b4:	pop    esp
  4171b5:	xor    esi,DWORD PTR [ebx]
  4171b7:	and    eax,0x621f5443
  4171bc:	pop    esp
  4171bd:	push   ebx
  4171be:	(bad)  
  4171bf:	lea    esp,[ecx+0x44]
  4171c2:	rcl    BYTE PTR [edx+0x7ce96765],cl
  4171c8:	jb     0x4171ca
  4171ca:	sbb    al,0x87
  4171cc:	inc    esi
  4171cd:	push   esp
  4171ce:	adc    BYTE PTR [ecx-0x5ce4baae],ah
  4171d4:	ins    BYTE PTR es:[edi],dx
  4171d5:	popa   
  4171d6:	cld    
  4171d7:	xchg   edx,eax
  4171d8:	popa   
  4171d9:	jae    0x4171b6
  4171db:	lods   eax,DWORD PTR ds:[esi]
  4171dc:	jne    0x41724e
  4171de:	and    al,BYTE PTR [ebp+0x7a3b6265]
  4171e4:	inc    esi
  4171e5:	cmp    DWORD PTR [edi],edi
  4171e7:	dec    ebp
  4171e8:	xor    BYTE PTR [ebx+0x57],al
  4171eb:	cmp    DWORD PTR [edx],ebp
  4171ed:	inc    esi
  4171ee:	xor    DWORD PTR [edi+0x2d32],ebx
	...
  417204:	cs push ecx
  417206:	cs inc ecx
  417208:	mov    bl,BYTE PTR [edi+0x2bb6432f]
  41720e:	sub    eax,0x2f4eaf38
  417213:	inc    edx
  417214:	lods   eax,DWORD PTR ds:[esi]
  417215:	mov    al,ds:0x9c713934
  41721a:	jns    0x417278
  41721c:	sub    ebp,DWORD PTR ds:[edi]
  41721f:	pop    esp
  417220:	das    
  417221:	popf   
  417222:	jae    0x41728d
  417224:	imul   ecx,DWORD PTR [ebp+0x2f],0x6f7f7200
  41722b:	jns    0x41729e
  41722d:	mov    dl,0x50
  41722f:	add    BYTE PTR [esi-0x7d9cc571],dl
  417235:	mov    BYTE PTR [ebx],ah
  417237:	jb     0x4172b0
  417239:	ins    DWORD PTR es:[edi],dx
  41723a:	and    DWORD PTR [eax],eax
  41723c:	test   al,0x63
  41723e:	and    dh,BYTE PTR [eax-0x6a]
  417241:	sbb    eax,0x3b666433
  417246:	dec    ebp
  417247:	inc    ebx
  417248:	inc    esp
  417249:	push   cs
  41724a:	push   esi
  41724b:	push   edx
  41724c:	inc    eax
  41724d:	push   esp
  41724e:	fdivp  st(7),st
  417250:	inc    ecx
  417251:	sbb    dh,BYTE PTR [esi]
  417253:	jno    0x417296
  417255:	add    al,0x33
  417257:	fs jbe 0x4172a0
  41725a:	hlt    
  41725b:	cmp    DWORD PTR [ecx+eiz*2],esi
  41725e:	add    al,0x73
  417260:	and    eax,0x376e3316
  417265:	push   es
  417266:	and    BYTE PTR [edx],bh
	...
  417278:	add    BYTE PTR [eax],al
  41727a:	and    eax,0x23660141
  41727f:	xlat   BYTE PTR ds:[ebx]
  417280:	adc    al,0x20
  417282:	not    ebp
  417284:	sbb    al,0x72
  417286:	repz call 0x2046acc1
  41728c:	add    DWORD PTR [esi],ebp
  41728e:	xchg   esi,eax
  41728f:	in     eax,dx
  417290:	aas    
  417291:	push   edx
  417292:	jecxz  0x41727c
  417294:	push   edx
  417295:	push   esi
  417296:	mov    ecx,0xc6543f39
  41729b:	pop    ecx
  41729c:	cmp    ch,BYTE PTR [ebp-0x1f]
  41729f:	cmp    DWORD PTR [edi],edi
  4172a1:	push   esp
  4172a2:	out    0x7b,al
  4172a4:	sbb    DWORD PTR [ebp-0x6a],esi
  4172a7:	test   al,0x1b
  4172a9:	je     0x417266
  4172ab:	mov    dl,bl
  4172ad:	ja     0x41725a
  4172af:	xchg   ebp,eax
  4172b0:	add    al,0x51
  4172b2:	loope  0x417327
  4172b4:	push   eax
  4172b5:	push   ebp
  4172b6:	xlat   BYTE PTR ds:[ebx]
  4172b7:	addr16 aas 
  4172b9:	pop    esp
  4172ba:	les    esp,FWORD PTR [edx+0x16]
  4172bd:	es stos DWORD PTR es:[edi],eax
  4172bf:	jne    0x4172e6
  4172c1:	push   eax
  4172c2:	data16 sbb dl,0xd9
  4172c6:	ret    0x3aa6
  4172c9:	daa    
  4172ca:	test   BYTE PTR [ecx+0x62872ff7],bh
  4172d0:	sbb    bh,BYTE PTR [ebx]
  4172d2:	pop    eax
  4172d3:	scas   al,BYTE PTR es:[edi]
  4172d4:	push   ds
  4172d5:	inc    ebp
  4172d6:	inc    esp
  4172d7:	popf   
  4172d8:	or     edx,DWORD PTR [esi+0x73]
  4172db:	rcl    dh,0xd8
	...
  4172ee:	add    BYTE PTR [eax],al
  4172f0:	push   ebx
  4172f1:	scas   al,BYTE PTR es:[edi]
  4172f2:	mov    bh,0xe3
  4172f4:	xchg   BYTE PTR [esi+ebx*1+0x48],dh
  4172f8:	push   eax
  4172f9:	scas   al,BYTE PTR es:[edi]
  4172fa:	mov    bh,0x56
  4172fc:	xor    eax,0x4420bdd0
  417301:	iret   
  417302:	out    0x41,eax
  417304:	dec    edx
  417305:	mov    dl,0x7
  417307:	inc    edi
  417308:	cmp    ecx,ebp
  41730a:	mov    ebp,0xbb9c962f
  41730f:	push   ebx
  417310:	jbe    0x4172ae
  417312:	nop
  417313:	pop    ss
  417314:	cmc    
  417315:	jge    0x4172a2
  417317:	add    esp,esi
  417319:	rcr    DWORD PTR [edx+0x79b40b36],0x1f
  417320:	xchg   esi,eax
  417321:	scas   eax,DWORD PTR es:[edi]
  417322:	test   BYTE PTR ds:0x3979bde8,dh
  417328:	leave  
  417329:	mov    ch,0x84
  41732b:	add    eax,ebp
  41732d:	iret   
  41732e:	dec    esp
  41732f:	rcr    DWORD PTR ss:[esi-0x463fc519],1
  417336:	pop    ebx
  417337:	sbb    ebp,ecx
  417339:	mov    dh,0x23
  41733b:	sbb    eax,esp
  41733d:	mov    ebp,0xd0ab304a
  417342:	inc    eax
  417343:	add    al,0xc6
  417345:	mov    bl,0x0
  417347:	cmp    esp,DWORD PTR [esi-0x6c]
  41734a:	jae    0x417388
  41734c:	js     0x41730d
  41734e:	jb     0x417339
  417350:	ret    0x72bf
  417353:	pop    ss
	...
  417364:	add    BYTE PTR [eax],al
  417366:	mov    cl,0xd0
  417368:	push   esp
  417369:	adc    dl,al
  41736b:	mov    edi,0x6295f900
  417370:	add    BYTE PTR ds:0x13008357,dh
  417376:	xchg   ecx,eax
  417377:	sar    DWORD PTR [edx+0x68],cl
  41737a:	push   edi
  41737b:	xchg   esi,eax
  41737c:	sub    eax,0xa05ccd37
  417381:	popa   
  417382:	stc    
  417383:	xor    BYTE PTR [esi-0x54],ah
  417386:	pop    esp
  417387:	bound  esi,QWORD PTR [edx]
  417389:	pop    es
  41738a:	mov    ecx,0xdc103274
  41738f:	xchg   ecx,eax
  417390:	xor    eax,0x658c5e9
  417395:	icebp  
  417396:	rcr    BYTE PTR [edi+edi*8-0x15],cl
  41739a:	test   al,0x5d
  41739c:	add    edx,ebp
  41739e:	xchg   ebp,eax
  41739f:	mov    cl,0x6d
  4173a1:	(bad)
  4173a5:	fwait
  4173a6:	mov    al,0x9e
  4173a8:	dec    esp
  4173a9:	sub    BYTE PTR [edi-0x2e588e5f],0x92
  4173b0:	pop    esp
  4173b1:	call   0xa1a8:0xc963b69c
  4173b8:	outs   dx,BYTE PTR ds:[esi]
  4173b9:	mov    BYTE PTR [esi-0x62168d3b],dh
  4173bf:	iret   
  4173c0:	jno    0x41741f
  4173c2:	xchg   edx,eax
  4173c3:	xchg   ebp,eax
  4173c4:	jno    0x41740a
  4173c6:	mov    BYTE PTR [edx+0x50],ah
  4173c9:	dec    eax
	...
  4173da:	add    BYTE PTR [eax],al
  4173dc:	xor    DWORD PTR [ebx-0x4b60c700],0x74
  4173e3:	add    BYTE PTR [edi],ch
  4173e5:	cwde   
  4173e6:	popa   
  4173e7:	ins    DWORD PTR es:[edi],dx
  4173e8:	loopne 0x41745c
  4173ea:	popa   
  4173eb:	and    BYTE PTR [ebx+0x5d],bh
  4173ee:	jb     0x4173f0
  4173f0:	xchg   ebx,eax
  4173f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f2:	jne    0x417456
  4173f4:	mov    bh,BYTE PTR [eax+0x64]
  4173f7:	jne    0x417395
  4173f9:	pop    edi
  4173fa:	add    BYTE PTR [esi],ch
  4173fc:	fwait
  4173fd:	xchg   ecx,eax
  4173fe:	pop    edi
  4173ff:	imul   ebp,edi,0xffffff90
  417402:	outs   dx,DWORD PTR ds:[esi]
  417403:	gs std 
  417405:	sbb    esp,DWORD PTR [eax+0x6f]
  417408:	mov    eax,ds:0xff676584
  41740d:	dec    ecx
  41740e:	jo     0x417475
  417410:	jmp    0x4173a3
  417412:	outs   dx,BYTE PTR gs:[esi]
  417414:	enter  0x6b45,0x61
  417418:	loop   0x41747a
  41741a:	cmp    DWORD PTR [edx],esp
  41741c:	mov    edi,0xce75fd47
  417421:	pop    ecx
  417422:	jno    0x417489
  417424:	xchg   edx,eax
  417425:	dec    eax
  417426:	std    
  417427:	push   edx
  417428:	loopne 0x4173ad
  41742a:	je     0x4174a3
  41742c:	fidiv  WORD PTR [edi+0x61]
  41742f:	pop    esp
  417430:	cld    
  417431:	pop    esp
  417432:	imul   ebp,DWORD PTR [edi+0x1],0x27745db2
  417439:	test   BYTE PTR [ecx+0x5c],ch
  41743c:	dec    edi
  41743d:	nop
  41743e:	push   esp
  41743f:	push   esp
	...
  417450:	add    BYTE PTR [eax],al
  417452:	inc    esi
  417453:	test   eax,0x76fc654f
  417458:	outs   dx,DWORD PTR gs:[esi]
  41745a:	and    DWORD PTR [esi+0x0],esi
  41745d:	dec    eax
  41745e:	adc    BYTE PTR [esi+0x74],dh
  417461:	dec    esi
  417462:	push   cs
  417463:	pop    eax
  417464:	popa   
  417465:	add    BYTE PTR [edx-0x7e8d9e8b],bl
  41746b:	xchg   DWORD PTR [ecx+0x65],ebp
  41746e:	xchg   esi,eax
  41746f:	dec    ebx
  417470:	push   ecx
  417471:	pop    edi
  417472:	lds    ebx,FWORD PTR [ebp+ebp*1+0x4afc46d]
  417479:	push   eax
  41747a:	sar    DWORD PTR [ebp+0x30],0x4e
  41747e:	mov    ds:0xa46322a6,eax
  417483:	dec    ebx
  417484:	dec    ebp
  417485:	arpl   WORD PTR [esi+edx*2+0x6f776e1b],sp
  41748c:	push   eax
  41748d:	ja     0x417415
  41748f:	outs   dx,BYTE PTR ds:[esi]
  417490:	add    al,0x4e
  417492:	xchg   BYTE PTR [ebx+0x3e],bl
  417495:	push   esp
  417496:	sbb    WORD PTR [ecx],bp
  417499:	imul   eax,DWORD PTR [edx+0x794e454b],0x3f
  4174a0:	and    BYTE PTR [eax+0x77],dh
  4174a3:	fldcw  WORD PTR [bx+si]
  4174a6:	xchg   esi,eax
  4174a7:	cld    
  4174a8:	adc    eax,0x24184a66
  4174ad:	jb     0x4174e2
  4174af:	test   DWORD PTR [ecx+0x6d],0x63202938
	...
  4174c6:	add    BYTE PTR [eax],al
  4174c8:	push   ebp
  4174c9:	(bad)  
  4174ca:	xor    BYTE PTR [eax],ah
  4174cc:	inc    ebp
  4174cd:	xor    BYTE PTR [ebx],bl
  4174cf:	je     0x4174f2
  4174d1:	sub    ch,BYTE PTR [edi]
  4174d3:	arpl   WORD PTR [esi+0x76504d09],dx
  4174d9:	out    dx,eax
  4174da:	pop    ds
  4174db:	jno    0x4174e7
  4174dd:	rcl    DWORD PTR [edx],cl
  4174df:	pop    edi
  4174e0:	add    ah,bl
  4174e2:	adc    eax,0x1fdcb66e
  4174e7:	jb     0x4174e9
  4174e9:	out    dx,eax
  4174ea:	cs add al,bl
  4174ed:	aad    0x50
  4174ef:	and    dl,dh
  4174f1:	out    dx,al
  4174f2:	xor    DWORD PTR [edi+ebp*8-0x41],esi
  4174f6:	and    al,0x74
  4174f8:	out    dx,eax
  4174f9:	bound  edx,QWORD PTR [esi+0x16]
  4174fc:	jbe    0x4174b3
  4174fe:	pop    edx
  4174ff:	and    esp,eax
  417501:	bound  ebp,QWORD PTR ds:0x4382e650
  417507:	and    edi,eax
  417509:	mov    dh,0x50
  41750b:	push   ss
  41750c:	shl    DWORD PTR [esi-0x7d47e8b0],1
  417512:	aaa    
  417513:	and    eax,0x1736b3a7
  417518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417519:	(bad)  
  41751a:	out    0x3d,eax
  41751c:	push   0xffffff92
  41751e:	(bad)  
  41751f:	pop    ds
  417520:	jne    0x4174d5
  417522:	sbb    ebx,DWORD PTR ds:0x1d13c170
  417528:	imul   edx,eax,0xffffffc7
  41752b:	xor    eax,DWORD PTR [eax]
	...
  41753d:	add    BYTE PTR [ebx+0x5003f3b4],al
  417543:	xchg   esi,eax
  417544:	pop    ss
  417545:	in     al,0x75
  417547:	(bad)  
  41754a:	jno    0x41751c
  41754c:	enter  0x392f,0xcf
  417550:	int    0xe3
  417552:	ss rcr ebx,0x24
  417556:	xor    cl,bh
  417558:	mov    BYTE PTR [ebx],0x50
  41755b:	xchg   esi,eax
  41755c:	xchg   edi,eax
  41755d:	jecxz  0x4175a0
  41755f:	mov    ah,0xce
  417561:	sbb    eax,0x32ccce31
  417566:	xchg   esi,eax
  417567:	test   al,0x93
  417569:	push   ebx
  41756a:	inc    edi
  41756b:	retf   0x178c
  41756e:	add    ah,BYTE PTR [ebx-0x7b]
  417571:	das    
  417572:	push   es
  417573:	mov    ah,0x7f
  417575:	and    dl,dh
  417577:	into   
  417578:	mov    ebp,0xe7ca071d
  41757d:	push   edx
  41757e:	add    ecx,ecx
  417580:	jae    0x4175b0
  417582:	leave  
  417583:	mov    ah,0x0
  417585:	mov    ecx,ds
  417587:	stos   DWORD PTR es:[edi],eax
  417588:	aas    
  417589:	call   0x9e86:0x4f6d923e
  417590:	inc    esi
  417591:	xor    eax,0x4f6ea7e2
  417596:	stos   DWORD PTR es:[edi],eax
  417597:	sahf   
  417598:	push   ecx
  417599:	inc    esp
  41759a:	xchg   BYTE PTR [ebx-0x608e1690],dh
  4175a0:	je     0x4175ea
	...
  4175b2:	add    BYTE PTR [eax],al
  4175b4:	(bad)  
  4175b5:	(bad)  
  4175b6:	jb     0x4175a1
  4175b8:	fldcw  WORD PTR [eax-0x2fa2e6ac]
  4175be:	pushw  ss
  4175c0:	call   0x72c3:0xb81b6391
  4175c7:	and    eax,0xbf74b19d
  4175cc:	lods   eax,DWORD PTR ds:[esi]
  4175cd:	retf   
  4175ce:	ins    BYTE PTR es:[edi],dx
  4175cf:	jmp    0xf4ba397f
  4175d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d5:	test   al,0x67
  4175d7:	add    eax,0xf5666281
  4175dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175dd:	mov    cl,0x67
  4175df:	fnsave [eax-0x53309870]
  4175e5:	bound  eax,QWORD PTR [esi-0x38]
  4175e8:	xchg   BYTE PTR [esi-0x2f5d2aaf],dh
  4175ee:	arpl   WORD PTR [ecx],cx
  4175f0:	push   esp
  4175f1:	mov    ah,0x6d
  4175f3:	mov    dh,0x66
  4175f5:	ret    
  4175f6:	jb     0x4175e1
  4175f8:	arpl   WORD PTR [esi-0x4e8362b0],dx
  4175fe:	je     0x4175d7
  417600:	mov    cl,0xc0
  417602:	add    BYTE PTR [ebp-0x7a8f6240],bh
  417608:	mov    al,ds:0x99947493
  41760d:	lds    ebp,FWORD PTR [ebp+0x0]
  417610:	cmp    esp,DWORD PTR [ebx+0x55187268]
  417616:	popa   
  417617:	push   eax
	...
  417628:	add    BYTE PTR [eax],al
  41762a:	sbb    ecx,DWORD PTR [ebp-0x5dabff91]
  417630:	inc    eax
  417631:	add    ah,bh
  417633:	jge    0x417675
  417635:	add    dl,dl
  417637:	jl     0x417679
  417639:	add    BYTE PTR [eax+0x4078],cl
  41763f:	jne    0x417681
  417641:	add    BYTE PTR [esi],bh
  417643:	xchg   edx,eax
  417644:	inc    eax
  417645:	add    BYTE PTR [eax],cl
  417647:	scas   al,BYTE PTR es:[edi]
  417648:	inc    eax
  417649:	add    BYTE PTR [ebx],al
  41764b:	lods   eax,DWORD PTR ds:[esi]
  41764c:	inc    eax
  41764d:	add    BYTE PTR [ecx],cl
  41764f:	mov    al,0x40
  417651:	add    BYTE PTR [edx-0x52],bl
  417654:	inc    eax
  417655:	add    BYTE PTR [edi-0x37ffbf57],dl
  41765b:	stos   DWORD PTR es:[edi],eax
  41765c:	inc    eax
  41765d:	add    BYTE PTR [edi],cl
  41765f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417660:	inc    eax
  417661:	add    ch,ch
  417663:	add    DWORD PTR [eax+0x0],0x4082c6
  41766a:	mov    ds:0x58004082,eax
  41766f:	add    BYTE PTR [eax+0x0],0xe6
  417673:	pop    ebp
  417674:	inc    eax
  417675:	add    BYTE PTR [edx+0x5d],bl
  417678:	inc    eax
  417679:	add    BYTE PTR [edi+0x5f],bl
  41767c:	inc    eax
  41767d:	add    BYTE PTR [esi+0x4c00405f],cl
  417683:	pop    ebx
  417684:	inc    eax
  417685:	add    ah,al
  417687:	push   esp
  417688:	inc    eax
  417689:	add    BYTE PTR [ecx+0x56],al
  41768c:	inc    eax
	...
  41769d:	add    BYTE PTR [eax],al
  41769f:	add    BYTE PTR ds:0x4b004071,bh
  4176a5:	jo     0x4176e7
  4176a7:	add    BYTE PTR [ebx+esi*2+0x40],al
  4176ab:	add    BYTE PTR [esi-0x69bfd324],dl
  4176b1:	xor    ebp,DWORD PTR [ecx]
  4176b3:	inc    eax
  4176b4:	xchg   esi,eax
  4176b5:	jmp    0x4029:0x72964028
  4176bc:	xchg   esi,eax
  4176bd:	pop    ss
  4176be:	sub    BYTE PTR [eax-0x6a],al
  4176c1:	out    0x27,al
  4176c3:	inc    eax
  4176c4:	xchg   esi,eax
  4176c5:	jo     0x417651
  4176c7:	inc    eax
  4176c8:	xchg   esi,eax
  4176c9:	je     0x417656
  4176cb:	inc    eax
  4176cc:	xchg   esi,eax
  4176cd:	ins    BYTE PTR es:[edi],dx
  4176ce:	mov    es,WORD PTR [eax-0x6a]
  4176d1:	icebp  
  4176d2:	jns    0x417714
  4176d4:	xchg   esi,eax
  4176d5:	stos   BYTE PTR es:[edi],al
  4176d6:	jns    0x417718
  4176d8:	xchg   esi,eax
  4176d9:	adc    al,0x79
  4176db:	inc    eax
  4176dc:	xchg   esi,eax
  4176dd:	xchg   ebp,eax
  4176de:	jl     0x417720
  4176e0:	xchg   esi,eax
  4176e1:	data16 jnp 0x417724
  4176e4:	xchg   esi,eax
  4176e5:	xchg   edi,eax
  4176e6:	jnp    0x417728
  4176e8:	xchg   esi,eax
  4176e9:	inc    ebx
  4176ea:	jnp    0x41772c
  4176ec:	xchg   esi,eax
  4176ed:	icebp  
  4176ee:	jge    0x417730
  4176f0:	xchg   esi,eax
  4176f1:	jae    0x417770
  4176f3:	inc    eax
  4176f4:	xchg   esi,eax
  4176f5:	jns    0x417774
  4176f7:	inc    eax
  4176f8:	xchg   esi,eax
  4176f9:	out    dx,al
  4176fa:	jl     0x41773c
  4176fc:	xchg   esi,eax
  4176fd:	(bad)  
  4176fe:	fs inc eax
  417700:	xchg   esi,eax
  417701:	fild   QWORD PTR [edx+0x40]
	...
  417714:	add    BYTE PTR [eax],al
  417716:	xchg   esi,eax
  417717:	(bad)  
  417718:	imul   eax,DWORD PTR [eax-0x6a],0xffffffb3
  41771c:	pop    ebp
  41771d:	inc    eax
  41771e:	xchg   esi,eax
  41771f:	rcr    BYTE PTR [eax+eax*2-0x6a],cl
  417723:	mov    eax,ds:0xfe96405d
  417728:	pop    esp
  417729:	inc    eax
  41772a:	xchg   esi,eax
  41772b:	in     eax,0x5f
  41772d:	inc    eax
  41772e:	xchg   esi,eax
  41772f:	pop    esp
  417730:	pusha  
  417731:	inc    eax
  417732:	xchg   esi,eax
  417733:	inc    ebx
  417734:	pusha  
  417735:	inc    eax
  417736:	xchg   esi,eax
  417737:	bound  edx,QWORD PTR [eax-0x5a9d29a0]
  41773d:	popa   
  41773e:	(bad)  
  41773f:	bound  esi,QWORD PTR [edi]
  417741:	(bad)  
  417742:	(bad)  
  417743:	bound  eax,QWORD PTR [ecx-0x3c]
  417746:	(bad)  
  417747:	(bad)  
  417748:	retf   0xd6c4
  41774b:	bound  eax,QWORD PTR [esp+eax*8-0x3aeb9d2a]
  417752:	(bad)  
  417753:	bound  esp,QWORD PTR [ebx-0x769d293a]
  417759:	(bad)  
  41775a:	(bad)  
  41775b:	(bad)  
  41775c:	cli    
  41775d:	(bad)  
  41775e:	(bad)  
  41775f:	bound  eax,QWORD PTR ds:0x7f62d6c9
  417765:	enter  0x62d6,0x1c
  417769:	int    0xd6
  41776b:	bound  edx,QWORD PTR [ecx-0x249d2934]
  417771:	rcl    dh,1
  417773:	bound  ebp,QWORD PTR [edi]
  417775:	rcl    DWORD PTR [esi+0x62],1
  417778:	aaa    
  417779:	mov    ch,0x0
	...
  41778b:	add    BYTE PTR [esi+0x62],dl
  41778e:	inc    edx
  41778f:	mov    bh,0x56
  417791:	bound  ebp,QWORD PTR [edi-0x48]
  417794:	push   esi
  417795:	bound  ecx,QWORD PTR [eax+0x1c6256b8]
  41779b:	mov    esp,0xbb5d6256
  4177a0:	push   esi
  4177a1:	(bad)
  4177a6:	bound  edi,QWORD PTR [esi+edx*2+0x56bdf062]
  4177ad:	bound  esp,QWORD PTR [esi-0x43]
  4177b0:	push   esi
  4177b1:	(bad)  
  4177b2:	out    0x3,eax
  4177b4:	xchg   esi,eax
  4177b5:	(bad)  
  4177b6:	out    0x3,eax
  4177b8:	xchg   esi,eax
  4177b9:	(bad)  
  4177ba:	out    0x3,eax
  4177bc:	xchg   esi,eax
  4177bd:	(bad)  
  4177be:	out    0x3,eax
  4177c0:	xchg   esi,eax
  4177c1:	bound  eax,QWORD PTR [eax]
  4177c3:	jmp    0xaa41da5d
  4177c8:	rol    ebx,0x63
  4177cb:	xchg   edi,eax
  4177cc:	mov    eax,ds:0xa8884882
  4177d1:	retf   0xba00
  4177d4:	sar    DWORD PTR [ebx+0x54],0xb4
  4177d8:	test   al,0x87
  4177da:	inc    edi
  4177db:	mov    ah,0xa5
  4177dd:	lods   eax,DWORD PTR ds:[esi]
  4177de:	push   edx
  4177df:	xchg   ebp,eax
  4177e0:	data16 scas al,BYTE PTR es:[edi]
  4177e2:	dec    ecx
  4177e3:	jmp    0x84703756
  4177e8:	lods   eax,DWORD PTR ds:[esi]
  4177e9:	mov    edi,0x71620c00
  4177ee:	pop    eax
  4177ef:	jmp    0x4177f4
	...
  417800:	add    BYTE PTR [eax],al
  417802:	test   eax,0x924c73b0
  417807:	int    0x67
  417809:	inc    ebp
  41780a:	and    al,0xc1
  41780c:	pop    edi
  41780d:	cmp    eax,0xec076392
  417812:	xchg   ebx,eax
  417813:	addr16 or ah,al
  417816:	xor    eax,0xa5346d79
  41781b:	or     BYTE PTR [ebx],0xf3
  41781e:	cmc    
  41781f:	mov    esi,0x63fa0d63
  417824:	and    ebx,eax
  417826:	cmc    
  417827:	pop    edx
  417828:	or     esp,ebx
  41782a:	pushf  
  41782b:	ret    
  41782c:	leavew 
  41782e:	pushf  
  41782f:	and    BYTE PTR [ebx+0x1],0xad
  417833:	mov    cl,0x74
  417835:	leave  
  417836:	mov    WORD PTR [edx+0x5ae4c420],es
  41783c:	pop    es
  41783d:	or     DWORD PTR [edx-0x792a923b],esi
  417843:	add    BYTE PTR [edi],0x9
  417846:	xchg   DWORD PTR [edi+0x68a0e06f],ebp
  41784c:	and    BYTE PTR [eax],al
  41784e:	fild   DWORD PTR [ebx+0x3ea6206c]
  417854:	and    dh,BYTE PTR [eax]
  417856:	(bad)  
  417857:	data16 and BYTE PTR [eax],ah
  41785a:	popf   
  41785b:	inc    ecx
  41785c:	jo     0x417880
  41785e:	pop    edi
  41785f:	inc    esi
  417860:	sbb    eax,0x4f664f20
  417865:	push   0x0
	...
  417876:	add    BYTE PTR [eax],al
  417878:	or     cl,BYTE PTR [edx-0x7ef8ba94]
  41787e:	pop    edi
  41787f:	jne    0x41786c
  417881:	cmp    BYTE PTR ds:0x618ddc00,0x6c
  417888:	adc    ecx,DWORD PTR [edi]
  41788a:	das    
  41788b:	sbb    ecx,DWORD PTR cs:[edx+0x56da006c]
  417892:	jo     0x417900
  417894:	rcl    BYTE PTR [eax+0x61],1
  417897:	jb     0x41782a
  417899:	cmp    DWORD PTR [eax+0x65],0x31296f3f
  4178a0:	adc    BYTE PTR [ecx],0x2a
  4178a3:	xor    DWORD PTR [edi+0x2f00005e],edx
  4178a9:	dec    di
  4178ab:	gs mov dh,0x89
  4178ae:	jo     0x417915
  4178b0:	lods   eax,DWORD PTR ds:[esi]
  4178b1:	dec    edi
  4178b2:	imul   ebp,DWORD PTR [esi-0x72],0x5a
  4178b6:	popa   
  4178b7:	push   eax
  4178b8:	popf   
  4178b9:	lea    esi,[esi+0x69]
  4178bc:	repz and BYTE PTR [ebx+0x65],0xff
  4178c1:	outs   dx,BYTE PTR ds:[esi]
  4178c2:	popa   
  4178c3:	push   esp
  4178c4:	mov    WORD PTR [eax+0x5c967250],es
  4178ca:	gs ins BYTE PTR es:[edi],dx
  4178cc:	call   0x3f81:0xc00618b
  4178d3:	push   0x656373ce
  4178d8:	xchg   esi,eax
  4178d9:	add    DWORD PTR [eax],esi
  4178db:	je     0x4178dd
	...
  4178ed:	add    BYTE PTR [edi],bh
  4178ef:	and    DWORD PTR [edx],ebx
  4178f1:	push   eax
  4178f2:	and    al,0x12
  4178f4:	pop    ss
  4178f5:	xor    bl,BYTE PTR ds:0x6328
  4178fa:	xchg   esi,eax
  4178fb:	fsub   QWORD PTR ds:0x221f0441
  417901:	je     0x4178f6
  417903:	imul   DWORD PTR [edi]
  417905:	imul   edi,ebx,0xef7230e9
  41790b:	fldcw  WORD PTR [ecx]
  41790d:	ins    BYTE PTR es:[edi],dx
  41790e:	sti    
  41790f:	loopne 0x417936
  417911:	add    ch,al
  417913:	out    0x42,al
  417915:	pop    edi
  417916:	cmc    
  417917:	aam    0x15
  417919:	jo     0x4178e1
  41791b:	mov    ebp,0xb7bf762a
  417920:	es gs mov bl,0x4b
  417924:	xor    ah,BYTE PTR [ebx-0x1c]
  417927:	sahf   
  417928:	adc    DWORD PTR [ecx+ebp*4-0x63],esi
  41792c:	daa    
  41792d:	push   eax
  41792e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41792f:	mov    ds:0xa6ba6716,al
  417934:	and    eax,0x275c9663
  417939:	inc    edi
  41793a:	test   al,0xac
  41793c:	adc    ah,BYTE PTR [ebx+0x77]
  41793f:	jl     0x417968
  417941:	dec    edi
  417942:	adc    DWORD PTR [eax+0x18],0x5f
  417946:	pop    bp
  417948:	sub    esi,DWORD PTR [esi+0x6f]
  41794b:	pop    edi
  41794c:	daa    
  41794d:	gs jnp 0x41799b
  417950:	xor    ah,BYTE PTR [ebx+0x0]
	...
  417963:	add    BYTE PTR [edi+0x3c],dl
  417966:	adc    ah,BYTE PTR [edi+0x79]
  417969:	imul   esi,DWORD PTR [edx+esi*2],0x72235e6f
  417970:	dec    edi
  417971:	dec    edi
  417972:	sub    eax,0xd5623369
  417977:	xor    eax,DWORD PTR [ebx+ecx*8-0x2b]
  41797b:	sub    al,0x2a
  41797d:	mov    edi,0x629628ce
  417982:	out    0x3,eax
  417984:	xchg   esi,eax
  417985:	(bad)  
  417986:	out    0x3,eax
  417988:	xchg   esi,eax
  417989:	(bad)  
  41798a:	out    0x3,eax
  41798c:	xchg   esi,eax
  41798d:	(bad)  
  41798e:	out    0x3,eax
  417990:	xchg   esi,eax
  417991:	(bad)  
  417992:	out    0x3,eax
  417994:	xchg   esi,eax
  417995:	(bad)  
  417996:	out    0x3,eax
  417998:	xchg   esi,eax
  417999:	(bad)  
  41799a:	out    0x3,eax
  41799c:	xchg   esi,eax
  41799d:	(bad)  
  41799e:	out    0x3,eax
  4179a0:	xchg   esi,eax
  4179a1:	(bad)  
  4179a2:	out    0x3,eax
  4179a4:	xchg   esi,eax
  4179a5:	(bad)  
  4179a6:	out    0x3,eax
  4179a8:	xchg   esi,eax
  4179a9:	(bad)  
  4179aa:	out    0x3,eax
  4179ac:	xchg   esi,eax
  4179ad:	(bad)  
  4179ae:	out    0x3,eax
  4179b0:	xchg   esi,eax
  4179b1:	(bad)  
  4179b2:	out    0x3,eax
  4179b4:	xchg   esi,eax
  4179b5:	(bad)  
  4179b6:	out    0x3,eax
  4179b8:	xchg   esi,eax
  4179b9:	(bad)  
  4179ba:	out    0x3,eax
  4179bc:	xchg   esi,eax
  4179bd:	(bad)  
  4179be:	out    0x3,eax
  4179c0:	xchg   esi,eax
  4179c1:	(bad)  
  4179c2:	out    0x3,eax
  4179c4:	xchg   esi,eax
  4179c5:	(bad)  
  4179c6:	out    0x3,eax
	...
  4179d8:	add    BYTE PTR [eax],al
  4179da:	xchg   esi,eax
  4179db:	(bad)  
  4179dc:	out    0x3,eax
  4179de:	xchg   esi,eax
  4179df:	(bad)  
  4179e0:	out    0x3,eax
  4179e2:	xchg   esi,eax
  4179e3:	(bad)  
  4179e4:	out    0x3,eax
  4179e6:	xchg   esi,eax
  4179e7:	(bad)  
  4179e8:	out    0x3,eax
  4179ea:	xchg   esi,eax
  4179eb:	(bad)  
  4179ec:	out    0x3,eax
  4179ee:	xchg   esi,eax
  4179ef:	(bad)  
  4179f0:	out    0x3,eax
  4179f2:	xchg   esi,eax
  4179f3:	(bad)  
  4179f4:	out    0x3,eax
  4179f6:	xchg   esi,eax
  4179f7:	(bad)  
  4179f8:	out    0x3,eax
  4179fa:	xchg   esi,eax
  4179fb:	(bad)  
  4179fc:	out    0x3,eax
  4179fe:	xchg   esi,eax
  4179ff:	bound  eax,QWORD PTR [eax]
  417a01:	jmp    0xe941dc9b
  417a06:	xchg   ebp,eax
  417a07:	bound  eax,QWORD PTR [eax]
  417a09:	jmp    0xe941dca3
  417a0e:	xchg   ebp,eax
  417a0f:	bound  eax,QWORD PTR [eax]
  417a11:	jmp    0xe941dcab
  417a16:	xchg   ebp,eax
  417a17:	bound  eax,QWORD PTR [eax]
  417a19:	jmp    0xe941dcb3
  417a1e:	xchg   ebp,eax
  417a1f:	bound  eax,QWORD PTR [eax]
  417a21:	jmp    0xe941dcbb
  417a26:	xchg   ebp,eax
  417a27:	bound  eax,QWORD PTR [eax]
  417a29:	jmp    0xe941dcc3
  417a2e:	xchg   ebp,eax
  417a2f:	bound  eax,QWORD PTR [eax]
  417a31:	jmp    0xe941dccb
  417a36:	xchg   ebp,eax
  417a37:	bound  eax,QWORD PTR [eax]
  417a39:	jmp    0xe941dcd3
	...
  417a4e:	add    BYTE PTR [eax],al
  417a50:	xchg   ebp,eax
  417a51:	bound  eax,QWORD PTR [eax]
  417a53:	jmp    0xe941dced
  417a58:	xchg   ebp,eax
  417a59:	bound  eax,QWORD PTR [eax]
  417a5b:	jmp    0xe941dcf5
  417a60:	xchg   ebp,eax
  417a61:	bound  eax,QWORD PTR [eax]
  417a63:	jmp    0xe941dcfd
  417a68:	xchg   ebp,eax
  417a69:	bound  eax,QWORD PTR [eax]
  417a6b:	jmp    0xe941dd05
  417a70:	xchg   ebp,eax
  417a71:	bound  eax,QWORD PTR [eax]
  417a73:	jmp    0xe941dd0d
  417a78:	xchg   ebp,eax
  417a79:	bound  eax,QWORD PTR [eax]
  417a7b:	jmp    0xe941dd15
  417a80:	xchg   ebp,eax
  417a81:	bound  eax,QWORD PTR [eax]
  417a83:	jmp    0xe941dd1d
  417a88:	xchg   ebp,eax
  417a89:	bound  eax,QWORD PTR [eax]
  417a8b:	add    bh,ch
  417a8d:	bound  eax,QWORD PTR [eax]
  417a8f:	add    bh,ch
  417a91:	bound  eax,QWORD PTR [eax]
  417a93:	add    BYTE PTR [edi-0x40ffff9e],bh
  417a99:	bound  eax,QWORD PTR [eax]
  417a9b:	add    BYTE PTR [edi-0x50ffff9e],ch
  417aa1:	bound  eax,QWORD PTR [eax]
  417aa3:	add    BYTE PTR [edi-0x40ffff9e],bh
  417aa9:	bound  eax,QWORD PTR [eax]
  417aab:	add    BYTE PTR [edi-0x50ffff9e],ch
  417ab1:	bound  eax,QWORD PTR [eax]
	...
  417ac3:	add    BYTE PTR [eax],al
  417ac5:	add    BYTE PTR [edi+0x62],bh
  417ac8:	add    BYTE PTR [eax],al
  417aca:	jg     0x417b2e
  417acc:	add    BYTE PTR [eax],al
  417ace:	outs   dx,DWORD PTR ds:[esi]
  417acf:	bound  eax,QWORD PTR [eax]
  417ad1:	add    BYTE PTR [edi+0x62],ch
  417ad4:	add    BYTE PTR [eax],al
  417ad6:	jg     0x417b3a
  417ad8:	add    BYTE PTR [eax],al
  417ada:	jg     0x417b3e
  417adc:	add    BYTE PTR [eax],al
  417ade:	outs   dx,DWORD PTR ds:[esi]
  417adf:	bound  eax,QWORD PTR [eax]
  417ae1:	add    BYTE PTR [edi+0x62],ch
  417ae4:	add    BYTE PTR [eax],al
  417ae6:	aas    
  417ae7:	bound  eax,QWORD PTR [eax]
  417ae9:	add    BYTE PTR [edi],bh
  417aeb:	bound  eax,QWORD PTR [eax]
  417aed:	add    BYTE PTR [edi],ch
  417aef:	bound  eax,QWORD PTR [eax]
  417af1:	add    BYTE PTR [edi],ch
  417af3:	bound  eax,QWORD PTR [eax]
  417af5:	add    BYTE PTR [edi],bh
  417af7:	bound  eax,QWORD PTR [eax]
  417af9:	add    BYTE PTR [edi],bh
  417afb:	bound  eax,QWORD PTR [eax]
  417afd:	add    BYTE PTR [edi],ch
  417aff:	bound  eax,QWORD PTR [eax]
  417b01:	add    BYTE PTR [edi],ch
  417b03:	bound  eax,QWORD PTR [eax]
  417b05:	add    bh,bh
  417b07:	popa   
  417b08:	add    BYTE PTR [eax],al
  417b0a:	jmp    DWORD PTR [ecx+0x0]
  417b0d:	add    bh,ch
  417b0f:	popa   
  417b10:	add    BYTE PTR [eax],al
  417b12:	out    dx,eax
  417b13:	popa   
  417b14:	add    BYTE PTR [eax],al
  417b16:	xchg   esi,eax
  417b17:	dec    ebx
  417b18:	add    DWORD PTR [eax],eax
  417b1a:	xchg   esi,eax
  417b1b:	dec    ebx
  417b1c:	add    DWORD PTR [eax],eax
  417b1e:	xchg   esi,eax
  417b1f:	dec    ebx
  417b20:	add    DWORD PTR [eax],eax
  417b22:	xchg   esi,eax
  417b23:	dec    ebx
  417b24:	add    DWORD PTR [eax],eax
  417b26:	xchg   esi,eax
  417b27:	dec    ebx
  417b28:	add    DWORD PTR [eax],eax
	...
  417b3a:	add    BYTE PTR [eax],al
  417b3c:	xchg   esi,eax
  417b3d:	dec    ebx
  417b3e:	add    DWORD PTR [eax],eax
  417b40:	xchg   esi,eax
  417b41:	dec    ebx
  417b42:	add    DWORD PTR [eax],eax
  417b44:	xchg   esi,eax
  417b45:	dec    ebx
  417b46:	add    DWORD PTR [eax],eax
  417b48:	xchg   esi,eax
  417b49:	dec    ebx
  417b4a:	add    DWORD PTR [eax],eax
  417b4c:	xchg   esi,eax
  417b4d:	dec    edx
  417b4e:	loopne 0x417b92
  417b50:	cmp    DWORD PTR [edx+0x75a9cb68],esi
  417b56:	mov    ebp,0x34f52eba
  417b5b:	xor    ah,BYTE PTR [esi+0x71cb68c2]
  417b61:	dec    edx
  417b62:	loopne 0x417ba6
  417b64:	icebp  
  417b65:	retf   
  417b66:	add    DWORD PTR [eax-0x6a],eax
  417b69:	sub    eax,DWORD PTR [ecx]
  417b6b:	adc    BYTE PTR [esi-0x69fbfebd],dl
  417b71:	dec    ecx
  417b72:	add    edi,edi
  417b74:	pop    ecx
  417b75:	dec    ebx
  417b76:	add    DWORD PTR [eax+0x40014b96],eax
  417b7c:	xchg   esi,eax
  417b7d:	dec    ebx
  417b7e:	add    DWORD PTR [eax],esp
  417b80:	xchg   esi,eax
  417b81:	dec    ebx
  417b82:	add    DWORD PTR [eax],edx
  417b84:	xchg   esi,eax
  417b85:	dec    ebx
  417b86:	add    DWORD PTR [eax],ecx
  417b88:	xchg   esi,eax
  417b89:	dec    ebx
  417b8a:	add    DWORD PTR [esi+edx*4],eax
  417b8d:	dec    ebx
  417b8e:	add    DWORD PTR [edx],eax
  417b90:	xchg   esi,eax
  417b91:	dec    ebx
  417b92:	add    edi,edi
  417b94:	sbb    DWORD PTR [ebx-0x7f],ecx
  417b97:	add    BYTE PTR [esi-0x69ffbeb5],dl
  417b9d:	dec    ebx
  417b9e:	loope  0x417b9f
	...
  417bb0:	add    BYTE PTR [eax],al
  417bb2:	add    DWORD PTR [edx-0x19],esp
  417bb5:	repz stc 
  417bb7:	xor    al,0xe7
  417bb9:	or     edx,DWORD PTR [esi-0x1600189e]
  417bbf:	xor    al,0xe7
  417bc1:	add    eax,0x4e76296
  417bc6:	xchg   esi,eax
  417bc7:	bound  esp,QWORD PTR [edi+0x4]
  417bca:	xchg   esi,eax
  417bcb:	bound  esp,QWORD PTR [edi]
  417bcd:	add    al,0x96
  417bcf:	(bad)  
  417bd0:	mov    DWORD PTR [ebx],0x3f76296
  417bd6:	xchg   esi,eax
  417bd7:	(bad)  
  417bd8:	out    dx,eax
  417bd9:	add    edx,DWORD PTR [esi-0x69fc149e]
  417bdf:	(bad)  
  417be0:	jmp    0xe8a411e8
  417be5:	add    edx,DWORD PTR [esi-0x462c009e]
  417beb:	or     bh,0xf3
  417bee:	xchg   ecx,eax
  417bef:	(bad)  
  417bf0:	lock aam 0xb8
  417bf3:	add    DWORD PTR [eax],0xe16190f5
  417bf9:	aad    0xbf
  417bfb:	xor    cl,0xf5
  417bfe:	lahf   
  417bff:	pusha  
  417c00:	rcl    dh,cl
  417c02:	scas   al,BYTE PTR es:[edi]
  417c03:	jg     0x417bca
  417c05:	shr    DWORD PTR [ebx-0x5c0e2284],1
  417c0b:	pop    esp
  417c0c:	mov    ah,0xd0
  417c0e:	jl     0x417c8d
  417c10:	int3   
  417c11:	lock mov WORD PTR [ebp+0x23],ds
  417c15:	rol    BYTE PTR [eax],1
	...
  417c27:	add    BYTE PTR [ebp+0x7e],ch
  417c2a:	sti    
  417c2b:	out    dx,eax
  417c2c:	popf   
  417c2d:	pop    esi
  417c2e:	repnz neg BYTE PTR [esi-0x65fa17a1]
  417c35:	pop    esp
  417c36:	out    dx,eax
  417c37:	or     eax,0xf4ee648a
  417c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c3d:	dec    ebp
  417c3e:	add    dh,bl
  417c40:	or     bl,BYTE PTR [ebx+0x1c]
  417c43:	fadd   QWORD PTR ds:0xf9e9156a
  417c49:	popa   
  417c4a:	sbb    edi,ebp
  417c4c:	xchg   esi,eax
  417c4d:	dec    esi
  417c4e:	pop    es
  417c4f:	jmp    ebx
  417c51:	push   0x1
  417c53:	lock xchg esp,eax
  417c55:	gs push es
  417c57:	jecxz  0x417c39
  417c59:	addr16 call eax
  417c5c:	call   0xe808a0b6
  417c61:	pop    eax
  417c62:	and    eax,0x2d53b9bb
  417c67:	adc    ah,dl
  417c69:	jge    0x417ca0
  417c6b:	or     dh,al
  417c6d:	mov    BYTE PTR [edi],ah
  417c6f:	sbb    BYTE PTR [ecx-0x5e16e2a9],dh
  417c75:	xor    al,0x0
  417c77:	jmp    0xe941df11
  417c7c:	xchg   ebp,eax
  417c7d:	xor    edi,ebp
  417c7f:	in     eax,dx
  417c80:	mov    DWORD PTR [eax+eax*1],esi
  417c83:	in     eax,0x95
  417c85:	xor    eax,DWORD PTR [eax]
  417c87:	in     eax,dx
  417c88:	jns    0x417cbe
  417c8a:	std    
  417c8b:	in     eax,0x0
	...
  417c9d:	add    BYTE PTR [ebp-0x6a16ff9e],dl
  417ca3:	xor    edi,ebp
  417ca5:	jmp    0xea3eb00b
  417caa:	pop    ecx
  417cab:	xor    al,0x0
  417cad:	in     eax,0x51
  417caf:	xor    al,0x0
  417cb1:	jmp    0xe63eafff
  417cb6:	inc    ecx
  417cb7:	xor    eax,DWORD PTR [eax]
  417cb9:	in     eax,dx
  417cba:	xchg   ebp,eax
  417cbb:	xor    eax,DWORD PTR [eax]
  417cbd:	jmp    0xed40df57
  417cc2:	xchg   ebp,eax
  417cc3:	bound  eax,QWORD PTR [eax]
  417cc5:	in     eax,0x21
  417cc7:	xor    edi,ebp
  417cc9:	add    BYTE PTR [edi],ch
  417ccb:	xor    edi,ebp
  417ccd:	add    bh,bh
  417ccf:	xor    bh,ch
  417cd1:	add    bh,bh
  417cd3:	xor    bh,dh
  417cd5:	(bad)  
  417cd6:	out    dx,eax
  417cd7:	xor    bh,dh
  417cd9:	(bad)  
  417cda:	out    dx,eax
  417cdb:	pop    esi
  417cdc:	std    
  417cdd:	add    bh,bh
  417cdf:	pop    esi
  417ce0:	std    
  417ce1:	add    bl,bh
  417ce3:	xor    bh,ch
  417ce5:	add    bl,bh
  417ce7:	pop    esi
  417ce8:	std    
  417ce9:	(bad)  
  417cea:	jmp    0x417d4a
  417cec:	add    BYTE PTR [ecx],al
  417cee:	mov    ebx,0xbb01005e
  417cf3:	pop    esi
  417cf4:	std    
  417cf5:	jmp    FWORD PTR [edi-0x54ffffa2]
  417cfb:	xor    bh,ch
  417cfd:	(bad)  
  417cfe:	mov    ebx,0xfffe32
	...
  417d13:	add    BYTE PTR [edi-0x50feffa2],bh
  417d19:	pop    esi
  417d1a:	std    
  417d1b:	jmp    FWORD PTR [ebx+0x7b00fe32]
  417d21:	data16 add BYTE PTR [eax],al
  417d24:	jg     0x417d8c
  417d26:	std    
  417d27:	add    BYTE PTR [edi+0x32],ch
  417d2a:	inc    BYTE PTR [eax]
  417d2c:	outs   dx,DWORD PTR ds:[esi]
  417d2d:	data16 add BYTE PTR [ecx],al
  417d30:	jg     0x417d98
  417d32:	add    BYTE PTR [ecx],al
  417d34:	jg     0x417d68
  417d36:	std    
  417d37:	(bad)  
  417d38:	jnp    0x417da0
  417d3a:	std    
  417d3b:	add    BYTE PTR [edi+0x66],ch
  417d3e:	std    
  417d3f:	(bad)  
  417d40:	aas    
  417d41:	xor    bh,dh
  417d43:	(bad)  
  417d44:	cmp    esp,DWORD PTR [esi+0x0]
  417d47:	add    DWORD PTR [edi],ebp
  417d49:	xor    bh,ch
  417d4b:	jmp    FWORD PTR [ebx]
  417d4d:	data16 add BYTE PTR [eax],al
  417d50:	cmp    esi,DWORD PTR [edx]
  417d52:	std    
  417d53:	add    BYTE PTR [esi+0x21fefd3f],dl
  417d59:	dec    eax
  417d5a:	std    
  417d5b:	(bad)  
  417d5c:	xchg   esi,eax
  417d5d:	aas    
  417d5e:	add    edi,edi
  417d60:	adc    DWORD PTR [ecx+eax*1],edi
  417d63:	call   DWORD PTR [esi-0x690002c1]
  417d69:	inc    edi
  417d6a:	add    DWORD PTR [eax],eax
  417d6c:	xchg   edi,eax
  417d6d:	aas    
  417d6e:	std    
  417d6f:	push   ecx
  417d71:	inc    edi
  417d72:	std    
  417d73:	(bad)  
  417d74:	jmp    0x1407ab4
	...
  417d89:	add    BYTE PTR [esi-0x260002b9],dl
  417d8f:	cmp    edi,ebp
  417d91:	call   DWORD PTR [esi-0x690002c5]
  417d97:	cmp    eax,DWORD PTR [ecx]
  417d99:	add    BYTE PTR [esi-0x4600feb9],dl
  417d9f:	cmp    edi,ebp
  417da1:	(bad)  
  417da2:	mov    cl,0x3b
  417da4:	add    DWORD PTR [eax],eax
  417da6:	xchg   esi,eax
  417da7:	aas    
  417da8:	add    edi,edi
  417daa:	xchg   esi,eax
  417dab:	pop    ebx
  417dac:	test   BYTE PTR [eax],dl
  417dae:	push   ss
  417daf:	cmp    al,0x81
  417db1:	add    BYTE PTR [esi],dl
  417db3:	cmp    eax,DWORD PTR [ecx-0x7ba46a00]
  417db9:	adc    BYTE PTR [esi-0x69effec5],dl
  417dbf:	sbb    eax,DWORD PTR [ecx]
  417dc1:	add    BYTE PTR [esi+0x1610011b],dl
  417dc7:	sbb    eax,DWORD PTR [ecx+0x11b1600]
  417dcd:	add    BYTE PTR [esi],dl
  417dcf:	sbb    eax,DWORD PTR [ecx-0x7ec4e9f0]
  417dd5:	adc    BYTE PTR [esi],dl
  417dd7:	cmp    eax,DWORD PTR [ecx]
  417dd9:	add    BYTE PTR [esi],dl
  417ddb:	cmp    eax,DWORD PTR [ecx-0x189dea00]
  417de1:	add    eax,DWORD PTR [esi-0x69fbf89e]
  417de7:	bound  eax,QWORD PTR [edi]
  417de9:	add    al,0x86
  417deb:	loop   0x417dd3
  417ded:	add    DWORD PTR [eax],0x0
	...
  417e00:	xchg   BYTE PTR [edx+0x7],ah
  417e03:	add    al,0xa6
  417e05:	bound  eax,QWORD PTR [edi]
  417e07:	test   BYTE PTR [esi-0x69fc191e],dl
  417e0d:	(bad)  
  417e0e:	out    0x3,eax
  417e10:	xchg   esi,eax
  417e11:	loop   0x417df9
  417e13:	adc    DWORD PTR [esi-0x797c389e],0x62
  417e1a:	out    0x3,eax
  417e1c:	xchg   dl,ah
  417e1e:	mov    BYTE PTR [ebx],0x86
  417e21:	(bad)  
  417e22:	mov    DWORD PTR [ebx],0x3e6e296
  417e28:	xchg   esi,eax
  417e29:	(bad)  
  417e2a:	out    0x83,eax
  417e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2d:	(bad)  
  417e2e:	mov    DWORD PTR [ebx-0x7c189d6a],0x3e6e286
  417e38:	xchg   dl,ah
  417e3a:	push   es
  417e3b:	test   BYTE PTR [esi-0x69fc189e],dl
  417e41:	bound  eax,QWORD PTR [edi]
  417e43:	test   BYTE PTR [esi-0x59fbf89e],ah
  417e49:	loop   0x417e31
  417e4b:	add    esp,DWORD PTR [esi-0x697bf89e]
  417e51:	loop   0x417e39
  417e53:	add    eax,DWORD PTR [esi-0x797c191e]
  417e59:	loop   0x417e41
  417e5b:	adc    DWORD PTR [esi-0x79fc189e],0xffffffe2
  417e62:	out    0x83,al
	...
  417e74:	add    BYTE PTR [eax],al
  417e76:	xchg   esi,eax
  417e77:	loop   0x417e3f
  417e79:	add    edx,DWORD PTR [esi+0x15c90062]
  417e7f:	push   ebx
  417e80:	or     cl,0x15
  417e83:	push   ebx
  417e84:	add    BYTE PTR [ecx],cl
  417e86:	call   0x63:0x15e90062
  417e8d:	jmp    0x9c1e127
  417e92:	adc    ah,BYTE PTR [ebx+0x0]
  417e95:	jmp    0xe9c1d1af
  417e9a:	xchg   ebp,eax
  417e9b:	push   edx
  417e9c:	add    BYTE PTR [ecx],cl
  417e9e:	call   0x52:0x92098062
  417ea5:	leave  
  417ea6:	adc    eax,0x95c98063
  417eab:	bound  eax,QWORD PTR [eax+0x5295c9]
  417eb1:	jmp    0xe941d1cb
  417eb6:	xchg   ebp,eax
  417eb7:	bound  eax,QWORD PTR [eax]
  417eb9:	jmp    0xc9c1e1d3
  417ebe:	adc    eax,0x95e90063
  417ec3:	bound  eax,QWORD PTR [eax-0x7fad65f7]
  417ec9:	or     DWORD PTR [edx],edx
  417ecb:	push   ebx
  417ecc:	sub    cl,0x15
  417ecf:	push   ebx
  417ed0:	add    cl,ah
  417ed2:	xchg   edi,eax
  417ed3:	bound  eax,QWORD PTR [eax]
  417ed5:	jmp    0xe949e371
	...
  417eea:	add    BYTE PTR [eax],al
  417eec:	xchg   ebp,eax
  417eed:	bound  eax,QWORD PTR [eax]
  417eef:	loope  0x417e86
  417ef1:	fs or  cl,ch
  417ef4:	xchg   edi,eax
  417ef5:	bound  ecx,QWORD PTR [eax]
  417ef7:	jmp    0xf141e191
  417efc:	xchg   edi,eax
  417efd:	fs add cl,ch
  417f00:	xchg   edi,eax
  417f01:	bound  ecx,QWORD PTR [eax]
  417f03:	loope  0x417e9a
  417f05:	add    BYTE PTR fs:[eax],al
  417f08:	inc    edi
  417f09:	arpl   WORD PTR [eax],ax
  417f0b:	or     BYTE PTR [edi+0x63],al
  417f0e:	add    BYTE PTR [eax],cl
  417f10:	das    
  417f11:	arpl   WORD PTR [edx],ax
  417f13:	add    BYTE PTR [edi],dh
  417f15:	popa   
  417f16:	add    cl,BYTE PTR [eax]
  417f18:	daa    
  417f19:	arpl   WORD PTR [edx],ax
  417f1b:	add    BYTE PTR [edi],bh
  417f1d:	arpl   WORD PTR [edx],ax
  417f1f:	or     BYTE PTR [edi],dh
  417f21:	popa   
  417f22:	add    BYTE PTR [eax],al
  417f24:	das    
  417f25:	arpl   WORD PTR [eax],ax
  417f27:	or     BYTE PTR [edi],al
  417f29:	arpl   WORD PTR [eax],ax
  417f2b:	add    bh,bh
  417f2d:	pusha  
  417f2e:	add    cl,BYTE PTR [eax]
  417f30:	out    dx,eax
  417f31:	pusha  
  417f32:	add    BYTE PTR [eax],al
  417f34:	out    dx,eax
  417f35:	pusha  
  417f36:	add    al,BYTE PTR [eax]
  417f38:	jmp    DWORD PTR [edx+0x2]
  417f3b:	or     bh,ah
  417f3d:	bound  eax,QWORD PTR [edx]
  417f3f:	or     bh,dh
  417f41:	pusha  
  417f42:	add    al,BYTE PTR [eax]
  417f44:	mul    DWORD PTR [eax+0x0]
  417f47:	or     BYTE PTR [edi-0x40fffda0],bh
  417f4d:	bound  eax,QWORD PTR [edx]
	...
  417f5f:	add    BYTE PTR [eax],al
  417f61:	add    BYTE PTR [edi-0x48f7ffa0],dh
  417f67:	bound  eax,QWORD PTR [eax]
  417f69:	add    BYTE PTR [edi-0x40f7fda0],ah
  417f6f:	pusha  
  417f70:	add    BYTE PTR [eax],al
  417f72:	scas   eax,DWORD PTR es:[edi]
  417f73:	bound  eax,QWORD PTR [eax]
  417f75:	or     BYTE PTR [edi+0x7f080260],ch
  417f7b:	bound  eax,QWORD PTR [eax]
  417f7d:	or     BYTE PTR [edi+0x77000262],al
  417f83:	add    BYTE PTR fs:[eax],al
  417f86:	outs   dx,DWORD PTR ds:[esi]
  417f87:	bound  eax,QWORD PTR [edx]
  417f89:	add    BYTE PTR [edi+0x64],bh
  417f8c:	add    cl,BYTE PTR [eax]
  417f8e:	jg     0x417ff4
  417f90:	add    BYTE PTR [eax],cl
  417f92:	xchg   esi,eax
  417f93:	cmp    eax,DWORD PTR [ecx]
  417f95:	add    BYTE PTR [esi-0x690000c5],dl
  417f9b:	xor    eax,DWORD PTR [ecx]
  417f9d:	add    dl,BYTE PTR [esi-0x71fe00cd]
  417fa3:	cmp    edi,edi
  417fa5:	dec    DWORD PTR [esi-0x61fffebd]
  417fab:	cmp    edi,edi
  417fad:	call   DWORD PTR [esi-0x69fffec5]
  417fb3:	inc    ebx
  417fb4:	add    DWORD PTR [edx],eax
  417fb6:	mov    es,WORD PTR [ebx-0x1]
  417fb9:	call   FWORD PTR [esi-0x69fdfec5]
  417fbf:	cmp    eax,DWORD PTR [ecx]
  417fc1:	add    BYTE PTR [esi+0x1ff43],cl
	...
  417fd7:	add    BYTE PTR [esi-0x69fffebd],cl
  417fdd:	xor    edi,edi
  417fdf:	add    DWORD PTR [esi-0x69fe00c5],edx
  417fe5:	inc    ebx
  417fe6:	add    DWORD PTR [eax],eax
  417fe8:	mov    ?,WORD PTR [ebx]
  417fea:	add    DWORD PTR [edx],eax
  417fec:	sahf   
  417fed:	xor    edi,edi
  417fef:	call   FWORD PTR [esi-0x690000cd]
  417ff5:	cmp    eax,DWORD PTR [ecx]
  417ff7:	add    cl,BYTE PTR [esi-0x69fe00bd]
  417ffd:	xor    eax,DWORD PTR [ecx]
  417fff:	add    BYTE PTR [esi-0x71fdfecd],dl
  418005:	cmp    edi,edi
  418007:	add    DWORD PTR [esi-0x69801ec6],edx
  41800d:	mov    edx,0xba89ffe1
  418012:	loope  0x418013
  418014:	cmp    DWORD PTR [ebx-0x4469ffff],0x62967fe1
  41801e:	push   0xe8621603
  418023:	add    edx,DWORD PTR [esi]
  418025:	(bad)  
  418026:	call   0xe76eda0e
  41802b:	add    edx,DWORD PTR [esi-0x361c189e]
  418031:	(bad)  
  418032:	out    0xe3,eax
  418034:	shl    DWORD PTR [edx+0x68],0xe3
  418038:	mov    ecx,0x36862
	...
  41804d:	add    BYTE PTR [esi-0x69fc189e],dl
  418053:	bound  esp,QWORD PTR [edi+0x4]
  418056:	push   ss
  418057:	(bad)  
  418058:	call   0xe8a39660
  41805d:	add    edx,DWORD PTR [esi+0x9e3e762]
  418063:	sub    eax,0x621603e7
  418068:	call   0x67a3fa50
  41806d:	add    al,0x96
  41806f:	(bad)  
  418070:	out    0x3,eax
  418072:	push   ss
  418073:	(bad)  
  418074:	call   0x676e625c
  418079:	in     al,0xd9
  41807b:	sub    al,0x68
  41807d:	add    al,0x16
  41807f:	(bad)  
  418080:	call   0x67a41688
  418085:	in     al,0xc1
  418087:	sub    al,0x67
  418089:	add    al,0x16
  41808b:	(bad)  
  41808c:	out    0xe3,eax
  41808e:	mov    cl,0x2c
  418090:	addr16 in al,0x29
  418093:	bound  ebp,QWORD PTR [eax-0x1c]
  418096:	and    DWORD PTR [edx+0x68],esp
  418099:	add    al,0x96
  41809b:	bound  esp,QWORD PTR [edi+0x4]
  41809e:	push   ss
  41809f:	arpl   ax,bp
  4180a1:	add    edx,DWORD PTR [esi]
  4180a3:	arpl   di,sp
  4180a5:	jecxz  0x4180a8
  4180a7:	arpl   WORD PTR [eax],ax
  4180a9:	push   0x6800ac72
  4180ae:	call   0x0:0xe90062
	...
  4180c1:	add    BYTE PTR [eax],al
  4180c3:	add    BYTE PTR [ebp-0x6a16ff9e],dl
  4180c9:	bound  eax,QWORD PTR [eax]
  4180cb:	jmp    0x69422d45
  4180d0:	cmp    ch,BYTE PTR [edi*8-0x1d6d97]
  4180d7:	addr16 call 0x62:0x95e7ffe2
  4180df:	call   0x68422d19
  4180e4:	xor    eax,0x3568fd2c
  4180e9:	sub    al,0xfd
  4180eb:	imul   edx,DWORD PTR [ebp-0xa97ff9e],0x956800ab
  4180f5:	bound  eax,QWORD PTR [eax]
  4180f7:	call   0xe941e391
  4180fc:	cmc    
  4180fd:	sub    edi,ebp
  4180ff:	call   0xe8416399
  418104:	cmc    
  418105:	sub    edi,ebp
  418107:	imul   esi,ebp,0x956800ab
  41810d:	loop   0x41810e
  41810f:	out    0xb5,eax
  418111:	sub    edi,ebp
  418113:	imul   esi,DWORD PTR [ebp-0x6a1602d5],0xb5e7ffe2
  41811d:	stos   DWORD PTR es:[edi],eax
  41811e:	add    BYTE PTR [ecx-0x6b],ch
  418121:	bound  eax,QWORD PTR [eax]
  418123:	jmp    0xe94163bd
	...
  418138:	add    BYTE PTR [eax],al
  41813a:	mov    ch,0x2b
  41813c:	std    
  41813d:	imul   esi,DWORD PTR [ebp-0x6516ff55],0x7f000062
  418147:	data16 or BYTE PTR [edx],al
  41814a:	outs   dx,DWORD PTR ds:[esi]
  41814b:	pop    edi
  41814c:	or     BYTE PTR [edx],al
  41814e:	outs   dx,DWORD PTR ds:[esi]
  41814f:	data16 add BYTE PTR [edx+0x7f],al
  418153:	pop    edi
  418154:	or     BYTE PTR [eax],al
  418156:	jg     0x4181be
  418158:	add    BYTE PTR [eax],al
  41815a:	outs   dx,DWORD PTR ds:[esi]
  41815b:	pop    edi
  41815c:	add    BYTE PTR [eax+0x6f],al
  41815f:	pop    edi
  418160:	or     BYTE PTR [edx],al
  418162:	aas    
  418163:	data16 or BYTE PTR [eax+0x3f],al
  418167:	pop    edi
  418168:	or     BYTE PTR [eax],al
  41816a:	das    
  41816b:	data16 add BYTE PTR [edx],al
  41816e:	das    
  41816f:	data16 or BYTE PTR [eax+0x3f],al
  418173:	data16 add BYTE PTR [edx+0x3f],al
  418177:	pop    edi
  418178:	or     BYTE PTR [edx+0x2f],al
  41817b:	pusha  
  41817c:	or     BYTE PTR [eax],al
  41817e:	das    
  41817f:	pop    edi
  418180:	add    BYTE PTR [eax-0x1],al
  418183:	pop    esi
  418184:	add    BYTE PTR [edx],al
  418186:	call   FWORD PTR [esi+0x8]
  418189:	inc    eax
  41818a:	out    dx,eax
  41818b:	pop    esi
  41818c:	or     BYTE PTR [eax-0x11],al
  41818f:	pop    esi
  418190:	add    BYTE PTR [eax],al
  418192:	call   FWORD PTR [edi+0x0]
  418195:	inc    eax
  418196:	call   FWORD PTR [edi+0x8]
  418199:	inc    edx
  41819a:	out    dx,eax
  41819b:	pop    edi
  41819c:	or     BYTE PTR [edx+0x0],al
	...
  4181af:	add    bh,ch
  4181b1:	pop    edi
  4181b2:	add    BYTE PTR [edx],al
  4181b4:	mov    edi,0xbf42085e
  4181b9:	pop    edi
  4181ba:	add    BYTE PTR [eax-0x51],al
  4181bd:	pop    esi
  4181be:	add    BYTE PTR [eax],al
  4181c0:	scas   eax,DWORD PTR es:[edi]
  4181c1:	pop    esi
  4181c2:	add    BYTE PTR [edx-0x41],al
  4181c5:	pop    edi
  4181c6:	or     BYTE PTR [edx],al
  4181c8:	mov    edi,0xaf02005e
  4181cd:	pop    esi
  4181ce:	add    BYTE PTR [edx-0x6a],al
  4181d1:	cmp    DWORD PTR [edx],eax
  4181d3:	or     BYTE PTR [esi-0x69f7fec5],dl
  4181d9:	cmp    eax,DWORD PTR [edx]
  4181db:	add    ah,dl
  4181dd:	cmp    eax,DWORD PTR [edx]
  4181df:	add    BYTE PTR [esi-0x6bfffec5],dl
  4181e5:	cmp    eax,DWORD PTR [ecx]
  4181e7:	add    dh,dl
  4181e9:	cmp    eax,DWORD PTR [ecx]
  4181eb:	or     BYTE PTR [ebx+edi*1+0x3bd40002],dl
  4181f2:	add    cl,BYTE PTR [eax]
  4181f4:	(bad)  
  4181f5:	cmp    eax,DWORD PTR [edx]
  4181f7:	add    BYTE PTR [ebx+edi*1+0x3bd60001],dl
  4181fe:	add    DWORD PTR [eax],ecx
  418200:	aam    0x3b
  418202:	add    cl,BYTE PTR [eax]
  418204:	xchg   esp,eax
  418205:	cmp    eax,DWORD PTR [edx]
  418207:	or     dh,dl
  418209:	cmp    eax,DWORD PTR [edx]
  41820b:	add    BYTE PTR [esi-0x6bfffec5],dl
  418211:	cmp    eax,DWORD PTR [ecx]
  418213:	or     BYTE PTR [eax],al
	...
  418225:	add    BYTE PTR [ebx+edi*1+0x2],dl
  418229:	or     BYTE PTR [ebx+edi*1+0x2],dl
  41822d:	or     BYTE PTR [esi+0x5400013b],dl
  418233:	cmp    eax,DWORD PTR [edx]
  418235:	or     BYTE PTR [ebx+edi*1+0x1],dl
  418239:	or     BYTE PTR [ebx+edi*1+0x3b960001],dl
  418240:	add    DWORD PTR [eax],ecx
  418242:	push   esi
  418243:	cmp    eax,DWORD PTR [ecx]
  418245:	add    BYTE PTR [ebx+edi*1+0x2],dl
  418249:	or     BYTE PTR [esi-0x6bfffdc5],dl
  41824f:	cmp    eax,DWORD PTR [edx]
  418251:	add    BYTE PTR [esi+0x3b],dl
  418254:	add    DWORD PTR [eax],ecx
  418256:	xchg   esi,eax
  418257:	cmp    eax,DWORD PTR [ecx]
  418259:	add    BYTE PTR [esi-0x71fc189e],dl
  41825f:	mov    ds:0x648e02e7,al
  418264:	out    0x2,eax
  418266:	xchg   esi,eax
  418267:	mov    ds:0x829603f7,al
  41826c:	out    0x3,eax
  41826e:	(bad)  
  41826f:	and    bh,0x43
  418272:	xchg   esi,eax
  418273:	(bad)  
  418274:	xlat   BYTE PTR ds:[ebx]
  418275:	inc    ebx
  418276:	(bad)  
  418277:	and    bh,0x3
  41827a:	(bad)  
  41827b:	xor    bh,0x3
  41827e:	xchg   esi,eax
  41827f:	(bad)  
  418280:	test   DWORD PTR [ebx-0x2a],0xd603e782
  418287:	(bad)  
  418288:	out    0x43,eax
	...
  41829a:	add    BYTE PTR [eax],al
  41829c:	xchg   esi,eax
  41829d:	adc    bh,0x43
  4182a0:	(bad)  
  4182a1:	(bad)  
  4182a2:	out    0x3,eax
  4182a4:	(bad)  
  4182a5:	(bad)  
  4182a6:	xlat   BYTE PTR ds:[ebx]
  4182a7:	add    edx,DWORD PTR [esi-0x29fc287e]
  4182ad:	(bad)  
  4182ae:	out    0x43,eax
  4182b0:	xchg   esi,eax
  4182b1:	and    bh,0x3
  4182b4:	xchg   esi,eax
  4182b5:	xor    bh,0x43
  4182b8:	xchg   esi,eax
  4182b9:	(bad)  
  4182ba:	out    0x3,eax
  4182bc:	xchg   esi,eax
  4182bd:	(bad)  
  4182be:	xlat   BYTE PTR ds:[ebx]
  4182bf:	add    edx,DWORD PTR [esi+0x62]
  4182c2:	xlat   BYTE PTR ds:[ebx]
  4182c3:	inc    ebx
  4182c4:	xchg   esi,eax
  4182c5:	and    bh,0x43
  4182c8:	xchg   esi,eax
  4182c9:	(bad)  
  4182ca:	out    0x43,eax
  4182cc:	push   esi
  4182cd:	(bad)  
  4182ce:	test   DWORD PTR [ebx-0x6a],0x9603f782
  4182d5:	(bad)  
  4182d6:	test   DWORD PTR [ebx],0x3f78256
  4182dc:	push   esi
  4182dd:	and    bh,0x3
  4182e0:	xchg   esi,eax
  4182e1:	(bad)  
  4182e2:	xlat   BYTE PTR ds:[ebx]
  4182e3:	inc    ebx
  4182e4:	push   esi
  4182e5:	bound  eax,QWORD PTR [eax]
  4182e7:	jmp    0xd9622541
  4182ec:	push   ebp
  4182ed:	bound  eax,QWORD PTR [eax]
  4182ef:	jmp    0xe9422549
  4182f4:	push   ebp
  4182f5:	mov    ds:0x6295e920,al
  4182fa:	and    cl,ch
  4182fc:	aad    0x62
  4182fe:	and    cl,bl
	...
  418310:	add    BYTE PTR [eax],al
  418312:	xchg   ebp,eax
  418313:	bound  eax,QWORD PTR [eax]
  418315:	fst    DWORD PTR [ebp-0x2a16df5e]
  41831b:	mov    ds:0xa2d5d900,al
  418320:	and    cl,ch
  418322:	xchg   ebp,eax
  418323:	mov    ds:0x62d5f900,al
  418328:	add    cl,bh
  41832a:	xchg   ebp,eax
  41832b:	bound  esp,QWORD PTR [eax]
  41832d:	jmp    0xe94225c7
  418332:	aad    0x62
  418334:	and    cl,ch
  418336:	xchg   ebp,eax
  418337:	bound  esp,QWORD PTR [eax]
  418339:	(bad)  
  41833b:	bound  eax,QWORD PTR [eax]
  41833d:	fst    DWORD PTR [ebp-0x2a06df9e]
  418343:	mov    ds:0xa2d5e920,al
  418348:	add    cl,ch
  41834a:	xchg   ebp,eax
  41834b:	mov    ds:0xa255f920,al
  418350:	add    cl,ch
  418352:	push   ebp
  418353:	mov    ds:0x6295e920,al
  418358:	add    cl,bl
  41835a:	xchg   ebp,eax
  41835b:	mov    ds:0x6295d920,al
  418360:	add    cl,ch
  418362:	push   ebp
  418363:	bound  eax,QWORD PTR [eax]
  418365:	jmp    0xf96225ff
  41836a:	push   ebp
  41836b:	mov    ds:0x6255e900,al
  418370:	add    BYTE PTR [eax],al
  418372:	fbld   TBYTE PTR [ebx+0x40]
	...
  418385:	add    BYTE PTR [eax],al
  418387:	add    bh,bl
  418389:	mov    ds:0x63bf2000,eax
  41838e:	add    BYTE PTR [eax],al
  418390:	mov    edi,0xaf2040a3
  418395:	arpl   WORD PTR [eax],ax
  418397:	and    BYTE PTR [edi-0x70ffbf9d],bl
  41839d:	mov    ds:0x637f2000,eax
  4183a2:	and    BYTE PTR [eax],al
  4183a4:	ins    DWORD PTR es:[edi],dx
  4183a5:	arpl   WORD PTR [eax],sp
  4183a7:	add    al,0x6d
  4183a9:	sub    edi,ebp
  4183ab:	add    edi,DWORD PTR [edi+0x63]
  4183ae:	add    BYTE PTR [eax],al
  4183b0:	jg     0x4183dd
  4183b2:	std    
  4183b3:	jmp    FWORD PTR [ebp+0x2b]
  4183b6:	std    
  4183b7:	add    ebp,DWORD PTR [ebp+0x2b]
  4183ba:	sbb    eax,0x1d2b3f00
  4183bf:	add    al,0x3d
  4183c1:	sub    ebx,DWORD PTR ds:0x20632f04
  4183c7:	add    BYTE PTR [edi],ch
  4183c9:	arpl   WORD PTR [eax],ax
  4183cb:	add    BYTE PTR ds:0x3d040063,bh
  4183d1:	arpl   WORD PTR [eax],ax
  4183d3:	add    BYTE PTR [edi],ch
  4183d5:	arpl   WORD PTR [eax],ax
  4183d7:	add    al,0x2d
  4183d9:	arpl   WORD PTR [eax],sp
  4183db:	add    al,0xfd
  4183dd:	sub    bh,ch
  4183df:	(bad)  
  4183e0:	jmp    FWORD PTR [edx]
  4183e2:	std    
  4183e3:	add    ebp,ebp
  4183e5:	sub    bl,BYTE PTR ds:0x2062ed00
	...
  4183fb:	add    BYTE PTR [eax],al
  4183fd:	add    bh,bh
  4183ff:	sub    bh,ch
  418401:	add    edi,ebp
  418403:	bound  eax,QWORD PTR [eax]
  418405:	add    al,0xef
  418407:	bound  esp,QWORD PTR [eax]
  418409:	add    al,0xef
  41840b:	sub    bl,BYTE PTR ds:0x13b9604
  418411:	and    BYTE PTR [esi-0x65dffec7],dl
  418417:	cmp    ecx,edi
  418419:	(bad)  
  41841a:	mov    ecx,0xb1fff93a
  41841f:	cmp    bh,cl
  418421:	pop    ds
  418422:	xchg   edx,eax
  418423:	cmp    ecx,edi
  418425:	pop    ds
  418426:	xchg   esi,eax
  418427:	cmp    eax,DWORD PTR [ecx]
  418429:	add    BYTE PTR [esi-0x65fffec7],dl
  41842f:	cmp    edi,ecx
  418431:	pop    ds
  418432:	xchg   esi,eax
  418433:	cmp    eax,DWORD PTR [ecx]
  418435:	add    BYTE PTR [edx-0x69e006c5],bl
  41843b:	cmp    eax,DWORD PTR [ecx]
  41843d:	and    BYTE PTR [esi-0x6a0006c7],dl
  418443:	cmp    ecx,edi
  418445:	call   DWORD PTR [ebp-0x6ddffec7]
  41844b:	cmp    DWORD PTR [ecx],eax
  41844d:	and    BYTE PTR [edx-0x69fffec7],bl
  418453:	cmp    DWORD PTR [ecx],eax
  418455:	and    BYTE PTR [esi-0x6dfffec5],dl
  41845b:	cmp    edi,ecx
  41845d:	call   DWORD PTR [ebp+0x20013b]
	...
  418473:	add    BYTE PTR [esi-0x65e006c5],dl
  418479:	cmp    ecx,edi
  41847b:	call   FWORD PTR [ecx]
  41847d:	cmp    bh,cl
  41847f:	pop    ds
  418480:	xchg   esi,eax
  418481:	cmp    edi,ecx
  418483:	pop    ds
  418484:	xchg   edx,eax
  418485:	cmp    ecx,edi
  418487:	inc    DWORD PTR [ecx]
  418489:	cmp    al,BYTE PTR [ecx]
  41848b:	add    BYTE PTR [edx-0x65e006c7],dl
  418491:	cmp    eax,DWORD PTR [ecx]
  418493:	and    BYTE PTR [edx-0x69e006c5],dl
  418499:	(bad)  
  41849a:	out    0x3,eax
  41849c:	xchg   esi,eax
  41849d:	(bad)  
  41849e:	jmp    0xe9a41aa6
  4184a3:	sti    
  4184a4:	test   eax,0x9603e75e
  4184a9:	(bad)  
  4184aa:	jmp    0xe7a41eaa
  4184af:	add    esi,DWORD PTR [esi+0x5e]
  4184b2:	out    0xfb,eax
  4184b4:	test   eax,0x9603e925
  4184b9:	pop    esi
  4184ba:	out    0xfb,eax
  4184bc:	cdq    
  4184bd:	popa   
  4184be:	out    0xfb,eax
  4184c0:	xchg   ecx,eax
  4184c1:	and    eax,0x62b603e9
  4184c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c7:	repz adc DWORD PTR [ebp-0x19],0xe72579f3
  4184cf:	add    ebx,DWORD PTR [edx-0x6a0c589e]
  4184d5:	push   edx
  4184d6:	out    0x3,eax
	...
  4184e8:	add    BYTE PTR [eax],al
  4184ea:	xchg   esi,eax
  4184eb:	push   edx
  4184ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ed:	repz pop ecx
  4184ef:	push   ebp
  4184f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f1:	add    edx,DWORD PTR [esi-0x69fc189e]
  4184f7:	push   edx
  4184f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f9:	add    ebx,DWORD PTR [edx-0x6dfc189e]
  4184ff:	push   edx
  418500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418501:	repz xchg ebp,eax
  418503:	push   edx
  418504:	out    0xf3,eax
  418506:	xchg   ebp,eax
  418507:	(bad)  
  418508:	out    0xf3,eax
  41850a:	xchg   ebp,eax
  41850b:	push   edx
  41850c:	daa    
  41850d:	hlt    
  41850e:	xchg   ebp,eax
  41850f:	(bad)  
  418510:	out    0xf3,eax
  418512:	adc    DWORD PTR ds:0x62960427,esp
  418518:	out    0x3,eax
  41851a:	call   0xe752:0x96042752
  418521:	repz icebp 
  418523:	push   esp
  418524:	add    BYTE PTR [ecx],ch
  418526:	loop   0x41854c
  418528:	std    
  418529:	jmp    0x2941e613
  41852e:	xchg   edx,eax
  41852f:	pop    esi
  418530:	add    BYTE PTR [ecx],ch
  418532:	call   0x1060:0xc5e9105e
  418539:	sub    edx,ecx
  41853b:	and    al,0xfd
  41853d:	jmp    0xe941e7d7
  418542:	xchg   ebp,eax
  418543:	bound  eax,QWORD PTR [eax]
  418545:	sub    DWORD PTR [edx-0x65d6efa2],edx
  41854b:	bound  edx,QWORD PTR [eax]
  41854d:	jmp    0x418552
	...
  41855e:	add    BYTE PTR [eax],al
  418560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418561:	and    al,0xd
  418563:	test   eax,0xe9006085
  418568:	xchg   ebp,eax
  418569:	pop    esi
  41856a:	add    BYTE PTR [ecx-0x16ff9f7b],ch
  418570:	xchg   ebp,eax
  418571:	pop    esi
  418572:	add    cl,ch
  418574:	gs pusha 
  418576:	adc    cl,ch
  418578:	gs and al,0xfd
  41857b:	test   eax,0xa9006295
  418580:	xchg   ebp,eax
  418581:	pop    esi
  418582:	adc    cl,ch
  418584:	inc    ebp
  418585:	and    al,0xfd
  418587:	test   eax,0xe9006045
  41858c:	inc    ebp
  41858d:	and    al,0xd
  41858f:	test   eax,0xa9006295
  418594:	xchg   ebp,eax
  418595:	bound  edx,QWORD PTR [eax]
  418597:	jmp    0xa951e431
  41859c:	xchg   ebp,eax
  41859d:	pop    esi
  41859e:	adc    cl,ch
  4185a0:	xchg   ebp,eax
  4185a1:	bound  edx,QWORD PTR [eax]
  4185a3:	jmp    0x2941e43d
  4185a8:	add    ah,BYTE PTR [ecx*1+0x6295e9]
  4185af:	add    BYTE PTR [edi-0x40effed2],ch
  4185b5:	pop    esi
  4185b6:	add    al,0x0
  4185b8:	mov    edi,0xef10005e
  4185bd:	pop    edi
  4185be:	add    al,0x10
  4185c0:	out    dx,eax
  4185c1:	das    
  4185c2:	std    
  4185c3:	sldt   WORD PTR [eax]
	...
  4185d6:	jg     0x418606
  4185d8:	std    
  4185d9:	movsx  ebx,WORD PTR [edi+0x0]
  4185dd:	add    BYTE PTR [edi+0x2e],ch
  4185e0:	add    DWORD PTR [eax],edx
  4185e2:	scas   eax,DWORD PTR es:[edi]
  4185e3:	das    
  4185e4:	add    DWORD PTR [eax],eax
  4185e6:	mov    edi,0x7f00012f
  4185eb:	cs std 
  4185ed:	jmp    FWORD PTR [edi+0x2e]
  4185f0:	std    
  4185f1:	(bad)  
  4185f2:	out    dx,eax
  4185f3:	pop    edi
  4185f4:	add    al,0x0
  4185f6:	jg     0x418657
  4185f8:	add    BYTE PTR [eax],dl
  4185fa:	jg     0x41862b
  4185fc:	add    DWORD PTR [eax],edx
  4185fe:	add    esi,DWORD PTR [ecx-0x3]
  418601:	jmp    FWORD PTR [edi+0x5f]
  418604:	add    BYTE PTR [eax],al
  418606:	jg     0x418667
  418608:	add    BYTE PTR [eax],al
  41860a:	add    edi,DWORD PTR [ecx-0x3]
  41860d:	jmp    DWORD PTR [edi+0x76]
  418610:	std    
  418611:	(bad)  
  418612:	out    dx,eax
  418613:	ja     0x418612
  418615:	(bad)  
  418616:	aas    
  418617:	pop    edi
  418618:	add    BYTE PTR [eax],al
  41861a:	aas    
  41861b:	pop    edi
  41861c:	add    BYTE PTR [eax],al
  41861e:	jno    0x418699
  418620:	std    
  418621:	inc    DWORD PTR [ebx+0x75]
  418624:	std    
  418625:	call   ebx
  418627:	ja     0x418626
  418629:	(bad)  
  41862a:	aas    
  41862b:	pop    edi
  41862c:	add    BYTE PTR [eax],al
  41862e:	das    
  41862f:	pop    edi
  418630:	add    BYTE PTR [eax],al
  418632:	cmp    edi,DWORD PTR [eax-0x3]
  418635:	jmp    DWORD PTR [edi+0xfffd74]
	...
  41864b:	add    BYTE PTR [esi+0x1ff2bd5],dl
  418651:	cmp    DWORD PTR [ecx],eax
  418653:	add    BYTE PTR [esi-0x69fffec7],dl
  418659:	shl    DWORD PTR [esi],1
  41865b:	(bad)  
  41865c:	jmp    0xe240b189
  418661:	enter  0xff2b,0xd9
  418665:	cmp    BYTE PTR [ecx],al
  418667:	add    BYTE PTR [esi-0x69fffec7],dl
  41866d:	repz es inc ecx
  418671:	je     0x4186a1
  418673:	(bad)  
  418674:	mov    ecx,0xb1ff2c00
  418679:	cmp    BYTE PTR [ecx],al
  41867b:	add    BYTE PTR [esi-0x69fffec7],dl
  418681:	mov    ch,0x27
  418683:	call   FWORD PTR [ecx-0x6e00d4ec]
  418689:	test   al,0x2c
  41868b:	dec    DWORD PTR [ecx-0x69fffef4]
  418691:	or     eax,DWORD PTR [ecx]
  418693:	add    BYTE PTR [esi+0x71ff20d9],dl
  418699:	fsubr  QWORD PTR [edx]
  41869b:	jmp    FWORD PTR [ecx+0xc]
  41869e:	sub    bh,bh
  4186a0:	popa   
  4186a1:	or     al,0x1
  4186a3:	add    BYTE PTR [esi-0x69fffef5],dl
  4186a9:	push   ecx
  4186aa:	and    al,0xff
  4186ac:	dec    ecx
  4186ad:	mov    BYTE PTR [esi],ch
  4186af:	inc    DWORD PTR [eax]
	...
  4186c1:	add    BYTE PTR [ecx-0x20],al
  4186c4:	sub    edi,edi
  4186c6:	cmp    DWORD PTR [ecx+eax*1],ecx
  4186c9:	add    BYTE PTR [esi-0x69fffef5],dl
  4186cf:	or     eax,0x5421ff22
  4186d4:	call   FWORD PTR cs:[ecx]
  4186d7:	arpl   di,sp
  4186d9:	add    edx,DWORD PTR [esi-0x69fc189e]
  4186df:	(bad)  
  4186e0:	out    0x3,eax
  4186e2:	xchg   esi,eax
  4186e3:	(bad)  
  4186e4:	out    0x3,eax
  4186e6:	xchg   esi,eax
  4186e7:	(bad)  
  4186e8:	out    0x3,eax
  4186ea:	xchg   esi,eax
  4186eb:	bound  esp,QWORD PTR [ebx-0x66de16d3]
  4186f1:	sub    eax,0x2d8d21e1
  4186f6:	fldenv [ecx]
  4186f8:	xchg   ebx,eax
  4186f9:	sub    eax,0x2d9f21d1
  4186fe:	leave  
  4186ff:	and    ebx,ebp
  418701:	sub    al,0xc1
  418703:	and    ecx,edi
  418705:	sub    al,0xb9
  418707:	and    ecx,ecx
  418709:	sub    al,0xb1
  41870b:	and    ebp,ecx
  41870d:	sub    al,0xa9
  41870f:	and    DWORD PTR [ebx+0x1f21a12c],esi
  418715:	sub    eax,0x2cbb2199
  41871a:	xchg   ecx,eax
  41871b:	and    ecx,edx
  41871d:	sub    al,0x89
  41871f:	and    DWORD PTR [ebp+0x2c],ebp
  418722:	and    DWORD PTR [ecx],0x2c73
	...
  418738:	jns    0x41875b
  41873a:	xchg   ecx,eax
  41873b:	sub    al,0x71
  41873d:	and    DWORD PTR [ecx+0x2321692c],eax
  418743:	sub    al,0x61
  418745:	and    DWORD PTR [ebx],ecx
  418747:	sub    al,0x59
  418749:	and    DWORD PTR ds:0x1d21512c,edx
  41874f:	sub    al,0x49
  418751:	and    ecx,edi
  418753:	daa    
  418754:	inc    ecx
  418755:	and    edi,eax
  418757:	daa    
  418758:	cmp    DWORD PTR [ecx],esp
  41875a:	mov    ebx,0xb1213127
  41875f:	daa    
  418760:	sub    DWORD PTR [ecx],esp
  418762:	add    BYTE PTR [ebp-0x7e02de87],dl
  418768:	jno    0x41878b
  41876a:	std    
  41876b:	popa   
  41876c:	mov    esi,0xbe65fd21
  418771:	and    ebp,edi
  418773:	jno    0x418723
  418775:	and    ebp,edi
  418777:	sub    DWORD PTR [esi-0x417c02df],0xbeb3fd21
  418781:	and    ebp,edi
  418783:	retf   
  418784:	scas   al,BYTE PTR es:[edi]
  418785:	and    ebp,edi
  418787:	scas   eax,DWORD PTR es:[edi]
  418788:	scas   al,BYTE PTR es:[edi]
  418789:	and    ebp,edi
  41878b:	(bad)  
  41878c:	jle    0x4187af
  41878e:	std    
  41878f:	retf   
  418790:	jle    0x4187b3
  418792:	std    
  418793:	sub    eax,0x2dfd216f
  418798:	outs   dx,DWORD PTR ds:[esi]
  418799:	and    ebp,edi
  41879b:	std    
	...
  4187ac:	add    BYTE PTR [eax],al
  4187ae:	jle    0x4187d1
  4187b0:	std    
  4187b1:	imul   edi,DWORD PTR [edi+0x21],0x216f5ffd
  4187b8:	std    
  4187b9:	inc    edi
  4187ba:	outs   dx,DWORD PTR ds:[esi]
  4187bb:	and    ebp,edi
  4187bd:	xchg   edi,eax
  4187be:	mov    edi,0xbf25fd1f
  4187c3:	pop    ds
  4187c4:	std    
  4187c5:	cmp    eax,0x59fd1faf
  4187ca:	scas   eax,DWORD PTR es:[edi]
  4187cb:	pop    ds
  4187cc:	std    
  4187cd:	jmp    0x41878a
  4187cf:	pop    ds
  4187d0:	std    
  4187d1:	fnstenv [ebx-0x47f602e1]
  4187d7:	pop    ds
  4187d8:	std    
  4187d9:	stc    
  4187da:	mov    bl,0x1f
  4187dc:	std    
  4187dd:	out    0x7b,eax
  4187df:	pop    ds
  4187e0:	std    
  4187e1:	jmp    0x8341ea7b
  4187e6:	jnp    0x418807
  4187e8:	std    
  4187e9:	imul   esi,DWORD PTR [eax+0x1f],0xfffffffd
  4187ed:	add    BYTE PTR [ebp-0x3a0002b8],dh
  4187f3:	dec    eax
  4187f4:	std    
  4187f5:	jmp    DWORD PTR [ebp+0x48]
  4187f8:	std    
  4187f9:	(bad)  
  4187fa:	jns    0x418844
  4187fc:	std    
  4187fd:	(bad)  
  4187fe:	jmp    DWORD PTR [ebx+0x0]
  418801:	add    bh,ah
  418803:	inc    ebp
  418804:	std    
  418805:	(bad)  
  418806:	out    dx,eax
  418807:	arpl   WORD PTR [eax],ax
  418809:	add    bh,ch
  41880b:	dec    eax
  41880c:	std    
  41880d:	dec    edi
  41880f:	dec    eax
  418810:	std    
  418811:	inc    DWORD PTR [eax]
	...
  418823:	add    BYTE PTR [ebx-0x220002b9],dl
  418829:	dec    eax
  41882a:	std    
  41882b:	jmp    FWORD PTR [edi-0x700002b9]
  418831:	inc    edi
  418832:	std    
  418833:	call   FWORD PTR [edi-0x620002b9]
  418839:	inc    edi
  41883a:	std    
  41883b:	jmp    FWORD PTR ds:0x37fffd48
  418841:	dec    eax
  418842:	std    
  418843:	(bad)  
  418844:	mov    edi,0x61000063
  418849:	dec    eax
  41884a:	std    
  41884b:	jmp    FWORD PTR [edi-0x32ffff9d]
  418851:	dec    eax
  418852:	std    
  418853:	call   ecx
  418855:	dec    eax
  418856:	std    
  418857:	jmp    FWORD PTR [edi+0x63]
  41885a:	add    BYTE PTR [eax],al
  41885c:	ja     0x4188a1
  41885e:	std    
  41885f:	call   DWORD PTR [ebx+0x43]
  418862:	std    
  418863:	call   FWORD PTR [edi-0x640002ba]
  418869:	inc    esi
  41886a:	std    
  41886b:	jmp    DWORD PTR [ecx+0x43]
  41886e:	std    
  41886f:	(bad)  
  418870:	std    
  418871:	inc    edx
  418872:	std    
  418873:	(bad)  
  418874:	aas    
  418875:	arpl   WORD PTR [eax],ax
  418877:	add    BYTE PTR [esi+0x39ff20d3],dl
  41887d:	out    0x20,eax
  41887f:	push   DWORD PTR [ecx]
  418881:	lahf   
  418882:	and    edi,edi
  418884:	sub    DWORD PTR [ecx+0xff21],ecx
	...
  41889a:	and    DWORD PTR [ebx-0x4ee600df],eax
  4188a0:	and    edi,edi
  4188a2:	adc    ecx,ebp
  4188a4:	and    edi,edi
  4188a6:	or     ebx,esi
  4188a8:	and    edi,edi
  4188aa:	add    ebx,edi
  4188ac:	and    edi,edi
  4188ae:	stc    
  4188af:	enter  0xff23,0xf1
  4188b3:	or     BYTE PTR [ecx],al
  4188b5:	add    BYTE PTR [esi-0x1e00dc3d],dl
  4188bb:	es and al,0xff
  4188be:	(bad)  [eax]
  4188c0:	add    DWORD PTR [eax],eax
  4188c2:	xchg   esi,eax
  4188c3:	int    0x29
  4188c5:	dec    ecx
  4188c7:	fisubr DWORD PTR [ecx]
  4188c9:	inc    ecx
  4188cb:	(bad)  
  4188cc:	sub    edi,edi
  4188ce:	mov    ecx,0xb1ff2a9c
  4188d3:	loopne 0x4188fe
  4188d5:	jmp    FWORD PTR [ecx-0x5e00d7fc]
  4188db:	cmp    ch,BYTE PTR [eax]
  4188dd:	call   FWORD PTR [ecx-0x6e00d7d6]
  4188e3:	jbe    0x41890c
  4188e5:	dec    DWORD PTR [ecx-0x7e00d880]
  4188eb:	les    esp,FWORD PTR [edi]
  4188ed:	(bad)  
  4188ee:	jns    0x4188c8
  4188f0:	daa    
  4188f1:	push   DWORD PTR [ecx+0x32]
  4188f4:	sub    bh,bh
  4188f6:	imul   eax,DWORD PTR [esi-0x3f9e00d9],0xff27
	...
  418910:	pop    ecx
  418911:	loop   0x418939
  418913:	call   DWORD PTR [ecx+0x63]
  418916:	popa   
  418917:	sub    DWORD PTR [ecx+0x1e],ecx
  41891a:	sub    ebp,DWORD PTR [ecx]
  41891c:	inc    ecx
  41891d:	push   ds
  41891e:	xor    ebp,DWORD PTR [ecx]
  418920:	cmp    DWORD PTR [esi],ebx
  418922:	std    
  418923:	sub    BYTE PTR [ecx],dh
  418925:	push   ds
  418926:	add    eax,0xd91e2929
  41892b:	daa    
  41892c:	and    DWORD PTR [esi],ebx
  41892e:	(bad)  
  41892f:	daa    
  418930:	sbb    DWORD PTR [esi],ebx
  418932:	mov    bl,0x27
  418934:	adc    DWORD PTR [esi],ebx
  418936:	xor    DWORD PTR [eax],ebp
  418938:	or     DWORD PTR [esi],ebx
  41893a:	cmp    ebp,DWORD PTR [eax]
  41893c:	add    DWORD PTR [esi],ebx
  41893e:	aas    
  41893f:	sub    cl,bh
  418941:	sbb    eax,0x1df1284f
  418946:	imul   esp,DWORD PTR [edi],0xffffffe9
  418949:	sbb    eax,0x1de1275f
  41894e:	jg     0x418977
  418950:	fstp   DWORD PTR ds:0x1dd12771
  418956:	mov    cl,0x27
  418958:	leave  
  418959:	sbb    eax,0x1dc12789
  41895e:	xchg   ebp,eax
  41895f:	daa    
  418960:	mov    ecx,0xb126f51d
  418965:	sbb    eax,0x1da926c9
  41896a:	and    esp,DWORD PTR [edi]
  41896c:	mov    eax,ds:0x9927131d
  418971:	sbb    eax,0x26f3
	...
  418986:	xchg   ecx,eax
  418987:	sbb    eax,0x1d892667
  41898c:	jne    0x4189b4
  41898e:	sbb    DWORD PTR ds:0x1d79268d,0x1d71267d
  418998:	sub    esp,DWORD PTR [esi]
  41899a:	imul   ebx,DWORD PTR ds:0x1d612613,0x1db03900
  4189a4:	std    
  4189a5:	jmp    0x418a22
  4189a7:	sbb    eax,0x1d73f9fd
  4189ac:	std    
  4189ad:	leave  
  4189ae:	jnp    0x4189cd
  4189b0:	std    
  4189b1:	fnstenv [ebx+0x1d]
  4189b4:	std    
  4189b5:	iret   
  4189b6:	jnp    0x4189d5
  4189b8:	std    
  4189b9:	jmp    0x9341ec53
  4189be:	jnp    0x4189dd
  4189c0:	std    
  4189c1:	imul   esi,DWORD PTR [ebx+0x1d],0xfffffffd
  4189c5:	push   ebx
  4189c6:	mov    ebx,0xf493fd1d
  4189cb:	sbb    edi,ebp
  4189cd:	mov    ds:0xa7fd1bf4,eax
  4189d2:	hlt    
  4189d3:	sbb    edi,ebp
  4189d5:	jmp    0xd141ec6f
  4189da:	hlt    
  4189db:	sbb    edi,ebp
  4189dd:	jmp    0xe941ec77
  4189e2:	hlt    
  4189e3:	sbb    edi,ebp
  4189e5:	fnstenv [ebx+ebx*1+0xcdfd]
	...
  4189fc:	mov    ah,0x1b
  4189fe:	std    
  4189ff:	(bad)  [ebx+ebx*1+0x1bb529fd]
  418a06:	std    
  418a07:	cmp    DWORD PTR [ebp-0x4af602e5],esi
  418a0d:	sbb    edi,ebp
  418a0f:	sti    
  418a10:	mov    ah,0x1b
  418a12:	std    
  418a13:	imul   esi,DWORD PTR [ebp+0x7551fd1b],0x1d
  418a1a:	std    
  418a1b:	jmp    0x9741ecb5
  418a20:	jne    0x418a3f
  418a22:	std    
  418a23:	jmp    0x3b41ecbd
  418a28:	jne    0x418a47
  418a2a:	std    
  418a2b:	add    cl,bl
  418a2d:	(bad)  
  418a2e:	std    
  418a2f:	jmp    FWORD PTR [edi+0x60]
  418a32:	add    BYTE PTR [eax],al
  418a34:	ja     0x418a36
  418a36:	(bad)  
  418a37:	jmp    FWORD PTR [ebx+0x0]
  418a3a:	(bad)  
  418a3b:	call   FWORD PTR [edi+0x0]
  418a3e:	(bad)  
  418a3f:	call   DWORD PTR [ebx+0x0]
  418a42:	(bad)  
  418a43:	call   FWORD PTR [ecx+0x0]
  418a46:	(bad)  
  418a47:	(bad)  
  418a48:	std    
  418a49:	(bad)  
  418a4a:	std    
  418a4b:	(bad)  
  418a4c:	aas    
  418a4d:	pusha  
  418a4e:	add    BYTE PTR [eax],al
  418a50:	cmc    
  418a51:	(bad)  
  418a52:	std    
  418a53:	dec    DWORD PTR [ecx]
  418a55:	add    dh,bh
  418a57:	dec    DWORD PTR [ecx+0x7ffffdff]
  418a5d:	(bad)  
  418a5e:	std    
  418a5f:	inc    DWORD PTR [eax]
	...
  418a71:	add    BYTE PTR [ebp-0x78000201],al
  418a77:	(bad)  
  418a78:	std    
  418a79:	call   FWORD PTR [edi]
  418a7b:	add    dh,bh
  418a7d:	inc    DWORD PTR ds:0x5dfffe00
  418a83:	(bad)  
  418a84:	std    
  418a85:	jmp    FWORD PTR [edi]
  418a87:	add    dh,bh
  418a89:	(bad)  
  418a8a:	mov    edi,0xd500005f
  418a8f:	(bad)  
  418a90:	std    
  418a91:	call   DWORD PTR [ecx]
  418a93:	add    dh,bh
  418a95:	jmp    FWORD PTR [edi-0x1dffffa1]
  418a9b:	pop    edi
  418a9c:	aas    
  418a9d:	jb     0x418a39
  418a9f:	add    eax,0xd796571
  418aa4:	imul   esp,DWORD PTR [ebp+0x6e],0xad023d66
  418aab:	or     DWORD PTR [esi+0x64],ebx
  418aae:	cmp    DWORD PTR [esi],ecx
  418ab0:	imul   esp,DWORD PTR [ebp+0x6f],0x96001f5f
  418ab7:	enter  0x6cec,0xe5
  418abb:	es leave 
  418abd:	pop    esi
  418abe:	clc    
  418abf:	sub    eax,0xa09662ed
  418ac4:	add    edx,DWORD PTR [ebp-0x1c]
  418ac7:	and    dh,ch
  418ac9:	(bad)  
  418aca:	fsub   DWORD PTR [edx]
  418acc:	in     eax,dx
  418acd:	bound  edx,QWORD PTR [esi-0x3a93fa9a]
  418ad3:	cmc    
  418ad4:	repnz imul eax,DWORD PTR [eax],0x0
	...
  418ae8:	mov    bl,0xe3
  418aea:	ret    
  418aeb:	push   DWORD PTR [ecx]
  418aed:	mov    ecx,0xf4ba4504
  418af2:	loop   0x418b52
  418af4:	mov    dl,0xcd
  418af6:	icebp  
  418af7:	pusha  
  418af8:	lods   eax,DWORD PTR ds:[esi]
  418af9:	or     DWORD PTR [ecx],eax
  418afb:	mov    ch,0x97
  418afd:	(bad)  
  418afe:	in     al,dx
  418aff:	ins    BYTE PTR es:[edi],dx
  418b00:	je     0x418aac
  418b02:	lock push edx
  418b04:	jo     0x418ab3
  418b06:	out    dx,eax
  418b07:	pusha  
  418b08:	ins    DWORD PTR es:[edi],dx
  418b09:	or     DWORD PTR [ecx],eax
  418b0b:	hlt    
  418b0c:	xchg   edi,eax
  418b0d:	jge    0x418afe
  418b0f:	pusha  
  418b10:	ja     0x418ac7
  418b12:	retf   0x7b71
  418b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b16:	add    al,0xf0
  418b18:	xchg   edi,eax
  418b19:	inc    ebp
  418b1a:	out    dx,eax
  418b1b:	pusha  
  418b1c:	aaa    
  418b1d:	pop    ebp
  418b1e:	shr    DWORD PTR [ebx+0x3a],0x74
  418b22:	jecxz  0x418b23
  418b24:	shl    DWORD PTR [ecx+0x3],0x6c
  418b28:	inc    ebp
  418b29:	jge    0x418b21
  418b2b:	pusha  
  418b2c:	es jb  0x418af0
  418b2f:	jmp    FWORD PTR [ecx+0x256c0437]
  418b35:	adc    eax,0x1d3760f3
  418b3a:	ret    0x91ff
  418b3d:	xor    DWORD PTR [edx],eax
  418b3f:	inc    ebp
  418b40:	repz (bad) 
  418b42:	fcmovne st,st(1)
  418b44:	clc    
  418b45:	xchg   ah,al
  418b47:	ret    0x8f05
  418b4a:	fldl2e 
	...
  418b5c:	add    BYTE PTR [eax],al
  418b5e:	test   DWORD PTR [edi-0x5c19192d],0x62fd03e7
  418b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b69:	sti    
  418b6a:	jmp    0xd52950f2
  418b6f:	mov    BYTE PTR [ebp-0x6a763816],dh
  418b75:	out    dx,al
  418b76:	mov    ah,0x88
  418b78:	xchg   ebx,eax
  418b79:	aam    0xc5
  418b7b:	xchg   esp,eax
  418b7c:	xor    cl,0xba
  418b7f:	xchg   ebp,eax
  418b80:	test   al,0x3
  418b82:	mov    ah,BYTE PTR [ebx-0x52]
  418b85:	out    0xa5,al
  418b87:	mov    al,ds:0xb5b4ef90
  418b8c:	cmp    ch,0x74
  418b8f:	bound  ebp,QWORD PTR [ebp+0x4c945703]
  418b95:	jecxz  0x418b1c
  418b97:	jg     0x418bbe
  418b99:	jmp    0x418c08
  418b9b:	jg     0x418bc1
  418b9d:	jecxz  0x418b20
  418b9f:	xchg   edx,eax
  418ba0:	inc    eax
  418ba1:	bnd jb 0x418b47
  418ba4:	out    0x3,eax
  418ba6:	xchg   esi,eax
  418ba7:	fs sub al,0xe3
  418baa:	imul   esi,DWORD PTR [eax-0x56b518c0],0x8630ca45
  418bb4:	or     al,0x4
  418bb6:	out    0x64,eax
  418bb8:	xor    al,0xf2
  418bba:	sub    al,0x83
  418bbc:	pop    ss
  418bbd:	fidivr DWORD PTR [eax]
  418bbf:	jg     0x418bd7
  418bc1:	rol    DWORD PTR [eax],1
	...
  418bd3:	add    BYTE PTR [ebx],dh
  418bd5:	mov    al,ds:0x6234f010
  418bda:	xchg   ecx,eax
  418bdb:	add    cl,BYTE PTR [edx-0x77]
  418bde:	add    BYTE PTR [eax],cl
  418be0:	jle    0x418b8f
  418be2:	or     eax,DWORD PTR [bx+si+0x72b8]
  418be7:	loopne 0x418c3d
  418be9:	sbb    ebp,edi
  418beb:	mov    edx,0xdd639f94
  418bf0:	inc    ebp
  418bf1:	xchg   ebx,eax
  418bf2:	ins    DWORD PTR es:[edi],dx
  418bf3:	retf   0x8554
  418bf6:	fs mov ebx,0xe9719278
  418bfc:	xchg   ebp,eax
  418bfd:	fdivp  st(6),st
  418bff:	lods   eax,DWORD PTR ds:[esi]
  418c00:	cmp    BYTE PTR [ebp-0x76c73bac],dl
  418c06:	push   eax
  418c07:	mov    BYTE PTR [ecx-0x7f],cl
  418c0a:	aas    
  418c0b:	jmp    0xaa41e1a5
  418c10:	sub    eax,DWORD PTR [edi+ebx*2+0x67a53095]
  418c17:	jnp    0x418c51
  418c19:	xor    BYTE PTR [esi+ecx*4+0x23],0x90
  418c1e:	aas    
  418c1f:	jmp    0xa5420db9
  418c24:	lock mov WORD PTR [ebx+0x5d],fs
  418c28:	out    dx,eax
  418c29:	sahf   
  418c2a:	addr16 dec ebp
  418c2c:	out    dx,eax
  418c2d:	push   edi
  418c2e:	add    cl,ch
  418c30:	call   0x7293:0xd555639f
  418c37:	cmp    eax,DWORD PTR [eax]
	...
  418c49:	add    bh,ch
  418c4b:	xchg   BYTE PTR [ecx+ebx*1-0x1c],dh
  418c4f:	test   DWORD PTR [ecx+0x4c],esp
  418c52:	lds    edx,FWORD PTR [ecx-0x506b4700]
  418c58:	addr16 or eax,0x868a1af
  418c5e:	les    esi,FWORD PTR [ebp+ebp*2+0x748caf24]
  418c65:	add    ah,dl
  418c67:	(bad)  
  418c68:	je     0x418c6a
  418c6a:	xchg   edx,eax
  418c6b:	pop    esi
  418c6c:	lods   eax,DWORD PTR ds:[esi]
  418c6d:	add    BYTE PTR [ecx+0x7],dh
  418c70:	imul   esp,DWORD PTR [ecx+eax*8+0x5],0x6f
  418c75:	jae    0x418bfa
  418c77:	push   ds
  418c78:	data16 ins BYTE PTR es:[edi],dx
  418c7a:	push   edx
  418c7b:	pop    ds
  418c7c:	std    
  418c7d:	inc    DWORD PTR [eax+0x53736c65]
  418c83:	adc    ah,BYTE PTR [eax+0x6d]
  418c86:	dec    edi
  418c87:	pop    es
  418c88:	add    BYTE PTR ds:0x4969465f,dl
  418c8f:	add    BYTE PTR [ebx+0x65],cl
  418c92:	pop    es
  418c93:	adc    BYTE PTR [ebx+0x69],al
  418c96:	or     ecx,DWORD PTR [ebx]
  418c98:	ds add dl,ch
  418c9b:	pop    esi
  418c9c:	inc    esi
  418c9d:	imul   ecx,DWORD PTR [ecx],0x186c4000
  418ca3:	adc    eax,0x5f430062
  418ca8:	inc    ebx
  418ca9:	mov    gs:0x646c32,eax
	...
  418cbf:	add    BYTE PTR [edx+0x1e486207],ah
  418cc5:	push   es
  418cc6:	popa   
  418cc7:	ins    BYTE PTR es:[edi],dx
  418cc8:	adc    bl,BYTE PTR [edi]
  418cca:	std    
  418ccb:	inc    DWORD PTR [ecx+0x6365435e]
  418cd1:	xor    BYTE PTR [edx+0x72],ah
  418cd4:	dec    esp
  418cd5:	add    eax,0x16b26e6c
  418cda:	add    BYTE PTR ds:[ebp-0x5c9abca3],al
  418ce1:	xor    ch,BYTE PTR [ebx+eiz*2+0x5e]
  418ce5:	adc    ah,BYTE PTR [edx+0x49]
  418ce8:	mov    DWORD PTR [eax],eax
  418cea:	ins    BYTE PTR es:[edi],dx
  418ceb:	inc    ecx
  418cec:	scas   eax,DWORD PTR es:[edi]
  418ced:	arpl   WORD PTR [ecx+eax*1+0x70],si
  418cf1:	or     DWORD PTR [ecx+0x53],esi
  418cf4:	xchg   esi,eax
  418cf5:	jb     0x418ce8
  418cf7:	jae    0x418d2c
  418cf9:	push   ss
  418cfa:	int3   
  418cfb:	ins    DWORD PTR es:[edi],dx
  418cfc:	cmp    BYTE PTR [eax+0x4],dh
  418cff:	mov    al,ds:0x73e74097
  418d04:	jmp    0xf9a57b6b
  418d09:	adc    dl,dh
  418d0b:	inc    ebx
  418d0c:	out    dx,eax
  418d0d:	cmp    ebp,eax
  418d0f:	pusha  
  418d10:	add    ch,BYTE PTR [ecx]
  418d12:	out    dx,eax
  418d13:	jbe    0x418cec
  418d15:	or     DWORD PTR [ecx],eax
  418d17:	dec    ebp
  418d18:	xchg   edi,eax
  418d19:	shl    bh,0x73
  418d1c:	(bad)  
  418d1d:	fucomi st,st(3)
  418d1f:	jne    0x418d18
  418d21:	int    0xe7
  418d23:	dec    edi
	...
  418d34:	add    BYTE PTR [eax],al
  418d36:	les    esp,FWORD PTR [eax]
  418d38:	jecxz  0x418da0
  418d3a:	mov    edx,0xc473d21e
  418d3f:	repnz jmp 0x947a:0x109d764
  418d47:	fsubr  st(7),st
  418d49:	jae    0x418d20
  418d4b:	out    dx,al
  418d4c:	out    dx,al
  418d4d:	jno    0x418d0a
  418d4f:	out    dx,eax
  418d50:	hlt    
  418d51:	inc    ebx
  418d52:	scas   eax,DWORD PTR es:[edi]
  418d53:	fwait
  418d54:	call   0xef2217b9
  418d59:	jbe    0x418db2
  418d5b:	or     DWORD PTR [ecx],eax
  418d5d:	adc    edx,DWORD PTR [ebp-0x7b8c1053]
  418d63:	lods   al,BYTE PTR ds:[esi]
  418d64:	in     eax,dx
  418d65:	outs   dx,DWORD PTR ds:[esi]
  418d66:	push   edi
  418d67:	or     DWORD PTR [ecx],eax
  418d69:	dec    esp
  418d6a:	xchg   edi,eax
  418d6b:	inc    eax
  418d6c:	in     eax,0x73
  418d6e:	inc    esi
  418d6f:	pop    ebx
  418d70:	jmp    0xe58f04ea
  418d75:	dec    edi
  418d76:	inc    esp
  418d77:	mov    al,ds:0x9e3a66e6
  418d7c:	iret   
  418d7d:	bound  esi,QWORD PTR ds:0x2aeb1b62
  418d83:	mov    BYTE PTR ds:0x1a7d3ce3,ch
  418d89:	ret    
  418d8a:	test   eax,0x5b032016
  418d8f:	jge    0x418d8c
  418d91:	shl    DWORD PTR [edi],cl
  418d93:	mov    ebp,esi
  418d95:	loop   0x418d9c
  418d97:	adc    BYTE PTR [edi],0xf2
	...
  418daa:	add    BYTE PTR [eax],al
  418dac:	cli    
  418dad:	jl     0x418daf
  418daf:	lock hlt 
  418db1:	stos   DWORD PTR es:[edi],eax
  418db2:	aad    0xf7
  418db4:	mov    eax,0xdb045d62
  418db9:	jg     0x418d96
  418dbb:	shl    ah,0x90
  418dbe:	(bad)  
  418dc0:	repz mov gs,WORD PTR [ebx-0x35801816]
  418dc7:	test   edx,0x49c2b090
  418dcd:	push   ss
  418dce:	int    0x0
  418dd0:	mov    dl,0x91
  418dd2:	fwait
  418dd3:	icebp  
  418dd4:	lods   eax,DWORD PTR ds:[esi]
  418dd5:	jg     0x418d64
  418dd7:	aam    0x31
  418dd9:	push   ss
  418dda:	in     al,0x1
  418ddc:	fisttp QWORD PTR [edi-0x5f470885]
  418de2:	xor    bh,0xb4
  418de5:	scas   al,BYTE PTR es:[edi]
  418de6:	mov    ss,esp
  418de8:	js     0x418e68
  418dea:	mov    eax,es
  418dec:	jno    0x418d71
  418dee:	jns    0x418df3
  418df0:	or     eax,0x85e72e64
  418df5:	scas   al,BYTE PTR es:[edi]
  418df6:	push   eax
  418df7:	loope  0x418e77
  418df9:	mov    eax,ds:0x8e7bf746
  418dfe:	out    0x3,eax
  418e00:	pop    ds
  418e01:	popa   
  418e02:	sbb    dh,al
  418e04:	je     0x418e85
  418e06:	aaa    
  418e07:	add    al,0x84
  418e09:	arpl   WORD PTR [eax],ax
  418e0b:	cs mov cl,0x91
  418e0e:	dec    ebx
  418e0f:	add    BYTE PTR ds:[eax],al
	...
  418e22:	scas   al,BYTE PTR es:[edi]
  418e23:	nop
  418e24:	ins    BYTE PTR es:[edi],dx
  418e25:	or     al,0xd0
  418e27:	jl     0x418e95
  418e29:	add    al,0xe0
  418e2b:	mov    ah,0x6b
  418e2d:	or     al,0xd5
  418e2f:	adc    eax,0x9f94c1fd
  418e34:	arpl   bp,di
  418e36:	leave  
  418e37:	mov    ah,0x71
  418e39:	cmc    
  418e3a:	pop    eax
  418e3b:	xchg   ebx,eax
  418e3c:	jb     0x418e44
  418e3e:	test   BYTE PTR ds:0xa39a10fd,dl
  418e44:	jb     0x418e12
  418e46:	je     0x418dd9
  418e48:	arpl   WORD PTR [ebp-0x3e93797e],si
  418e4e:	jo     0x418dd9
  418e50:	jo     0x418e6c
  418e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e53:	mov    bl,0x6e
  418e55:	enter  0x9265,0x68
  418e59:	into   
  418e5a:	dec    ecx
  418e5b:	adc    eax,0xb2940cfd
  418e60:	jb     0x418e20
  418e62:	xor    BYTE PTR ss:[ecx-0x66],0x86
  418e67:	push   eax
  418e68:	inc    esi
  418e69:	nop
  418e6a:	daa    
  418e6b:	xchg   edx,eax
  418e6c:	je     0x418e57
  418e6e:	xchg   ebp,eax
  418e6f:	jp     0x418e73
  418e71:	sahf   
  418e72:	and    eax,0x27996e80
  418e77:	xchg   BYTE PTR [ecx-0x7c],ah
  418e7a:	push   es
  418e7b:	xchg   edx,eax
  418e7c:	add    dh,cl
  418e7e:	xchg   edi,eax
  418e7f:	mov    dl,0x72
  418e81:	jle    0x418e79
  418e83:	jg     0x418ef6
  418e85:	pop    edx
	...
  418e96:	add    BYTE PTR [eax],al
  418e98:	rcl    DWORD PTR [eax+0x4e],0x44
  418e9c:	repnz nop
  418e9e:	add    dh,cl
  418ea0:	xchg   ebx,eax
  418ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ea2:	inc    ecx
  418ea3:	sbb    al,0xfb
  418ea5:	test   BYTE PTR [ecx+0x0],dl
  418ea8:	fwait
  418ea9:	or     al,0x66
  418eab:	outs   dx,BYTE PTR ds:[esi]
  418eac:	pop    eax
  418ead:	pop    ds
  418eae:	std    
  418eaf:	jmp    DWORD PTR [esi+ebx*2+0x41]
  418eb3:	js     0x418f0b
  418eb5:	adc    cl,BYTE PTR [ebp+0x72]
  418eb8:	mov    al,ds:0x8c7361fd
  418ebd:	pop    esi
  418ebe:	lods   eax,DWORD PTR ds:[esi]
  418ebf:	add    ch,BYTE PTR [ebx+eax*1+0x71]
  418ec3:	push   ebp
  418ec4:	mov    eax,ds:0x8b6e5e08
  418ec9:	or     ah,BYTE PTR [edx+0x64]
  418ecc:	mov    edx,0x8f656016
  418ed1:	add    al,0x66
  418ed3:	outs   dx,DWORD PTR ds:[esi]
  418ed4:	and    DWORD PTR [edx],0x35b6c66
  418eda:	outs   dx,DWORD PTR ds:[esi]
  418edb:	add    BYTE PTR [ebx+eax*1+0x6f],al
  418edf:	outs   dx,BYTE PTR ds:[esi]
  418ee0:	pop    edx
  418ee1:	cld    
  418ee2:	das    
  418ee3:	xor    ah,BYTE PTR [ecx+0x34]
  418ee6:	imul   ebp,DWORD PTR [edi+ebp*2+0x60],0xdfc0087
  418eee:	bound  esp,QWORD PTR [ecx+0xb]
  418ef1:	add    edx,DWORD PTR [eax+0x74]
  418ef4:	std    
  418ef5:	add    bl,BYTE PTR [esi+0x6d]
  418ef8:	add    BYTE PTR [edx],cl
  418efa:	inc    ebp
  418efb:	inc    edi
	...
  418f0c:	add    BYTE PTR [eax],al
  418f0e:	and    ecx,DWORD PTR [ecx]
  418f10:	pop    edi
  418f11:	popa   
  418f12:	adc    esp,DWORD PTR [eax-0x6d]
  418f15:	add    al,bh
  418f17:	add    dh,BYTE PTR [ecx+0x48]
  418f1a:	call   0x1ea3fb1a
  418f1f:	cld    
  418f20:	inc    edx
  418f21:	jb     0x418f33
  418f23:	or     edx,DWORD PTR [eax+0x74]
  418f26:	jge    0x418f2a
  418f28:	pop    esi
  418f29:	ins    DWORD PTR es:[edi],dx
  418f2a:	out    dx,eax
  418f2b:	pop    edi
  418f2c:	push   cs
  418f2d:	add    BYTE PTR [edi+eax*1-0x59698dc0],bh
  418f34:	jecxz  0x418fa9
  418f36:	jnp    0x418f74
  418f38:	out    dx,eax
  418f39:	data16 jb 0x418f45
  418f3c:	add    DWORD PTR [eax-0x6a],esp
  418f3f:	dec    eax
  418f40:	jmp    0xed99c698
  418f45:	dec    edx
  418f46:	cmp    edx,DWORD PTR [esi-0x3e]
  418f49:	jno    0x418f7e
  418f4b:	data16 add al,0xd
  418f4e:	xchg   esi,eax
  418f4f:	dec    eax
  418f50:	jmp    0xe3a7b395
  418f55:	jae    0x418f92
  418f57:	inc    edx
  418f58:	jmp    0xfb60:0xea6a2270
  418f5f:	or     DWORD PTR [ecx],eax
  418f61:	icebp  
  418f62:	xchg   esi,eax
  418f63:	cmp    al,0xe8
  418f65:	(bad)  
  418f66:	iret   
  418f67:	adc    ebp,esp
  418f69:	jae    0x418f5a
  418f6b:	sub    ah,ch
  418f6d:	data16 in al,dx
  418f6f:	push   ds
  418f70:	add    DWORD PTR [ebp+0x0],ebp
	...
  418f83:	add    dl,bh
  418f85:	es xor dh,BYTE PTR ss:[eax-0x69941ae3]
  418f8d:	push   ds
  418f8e:	add    esi,DWORD PTR [ebp-0x3b]
  418f91:	fptan  
  418f93:	mov    ax,0xded5
  418f97:	ds xchg esi,eax
  418f99:	into   
  418f9a:	cmc    
  418f9b:	(bad)  
  418f9c:	les    edi,FWORD PTR [eax]
  418f9e:	xor    ebp,DWORD PTR [esi]
  418fa0:	mov    edx,0x29ffe4e5
  418fa5:	pop    ecx
  418fa6:	add    al,0x52
  418fa8:	mov    ebx,0xb36fc9dc
  418fad:	jmp    0x418f7c
  418faf:	bound  ecx,QWORD PTR [edi-0x69c10742]
  418fb5:	outs   dx,DWORD PTR ds:[esi]
  418fb6:	add    al,0x52
  418fb8:	jnp    0x418f96
  418fba:	shl    DWORD PTR [edx+0x73],cl
  418fbd:	bound  ebx,QWORD PTR [ecx-0x5]
  418fc0:	dec    ebx
  418fc1:	or     DWORD PTR [ebx-0x11],0xc34f9d74
  418fc8:	loope  0x418fdc
  418fca:	xchg   esi,eax
  418fcb:	add    eax,DWORD PTR [ebp+edi*2+0x4e]
  418fcf:	lds    edi,FWORD PTR ds:0x5edf3a83
  418fd5:	jge    0x419007
  418fd7:	add    al,0xd3
  418fd9:	pusha  
  418fda:	sbb    edi,ebx
  418fdc:	xor    ah,BYTE PTR [ebx-0x58bc20e9]
  418fe2:	add    al,0xfb
  418fe4:	push   0x3ab62
	...
  418ff9:	add    BYTE PTR [ebp+edi*2+0x6],al
  418ffd:	mov    edi,0xcd148d2b
  419002:	hlt    
  419003:	mov    esp,DWORD PTR [esp+edi*8]
  419006:	enter  0x3162,0x3
  41900a:	in     al,0x87
  41900c:	push   es
  41900d:	lds    eax,FWORD PTR [edi]
  41900f:	mov    al,cl
  419011:	out    dx,eax
  419012:	hlt    
  419013:	popf   
  419014:	(bad)  
  419015:	cli    
  419016:	test   al,0x62
  419018:	dec    esi
  419019:	add    eax,esp
  41901b:	xchg   esi,eax
  41901d:	aam    0xf4
  41901f:	xchg   esi,eax
  419020:	popf   
  419021:	loop   0x418fe0
  419023:	xchg   edi,eax
  419024:	les    edi,FWORD PTR [esi+0x3e7a3c1]
  41902a:	pop    ebx
  41902b:	fs cdq 
  41902d:	fidiv  WORD PTR [edx-0x43116a59]
  419033:	mov    eax,0x87a4e788
  419038:	test   al,0x3
  41903a:	push   eax
  41903b:	fs mov ecx,0x77a1b2de
  419041:	fiadd  WORD PTR [ebx-0x780a8b5b]
  419047:	xchg   DWORD PTR [eax],eax
  419049:	xchg   ecx,esi
  41904b:	mov    ah,0x71
  41904d:	test   BYTE PTR [ebx],al
  41904f:	adc    bh,ch
  419051:	add    dl,BYTE PTR [ebp-0x26aa9c59]
  419057:	xchg   edx,eax
  419058:	arpl   WORD PTR [ebx-0x34],bx
  41905b:	mov    al,0x6b
  41905d:	inc    esp
	...
  41906e:	add    BYTE PTR [eax],al
  419070:	aad    0x11
  419072:	std    
  419073:	dec    eax
  419074:	mov    dh,0x97
  419076:	pop    edi
  419077:	cmp    DWORD PTR [ebp-0x49f8cdae],edi
  41907d:	jge    0x4190eb
  41907f:	jmp    0x3a41ca19
  419084:	ret    0x6c84
  419087:	or     eax,0xa6399e9
  41908c:	mov    cl,0x95
  41908e:	arpl   WORD PTR [eax],bp
  419090:	xchg   edx,eax
  419091:	xchg   ebx,eax
  419092:	push   0x317d7e0c
  419097:	mov    ebx,0x56c86bf
  41909c:	call   0x6395:0x6c200099
  4190a3:	fstp   TBYTE PTR [edi-0x7c]
  4190a6:	je     0x419052
  4190a8:	arpl   WORD PTR [eax-0x6caf3d9f],si
  4190ae:	ins    BYTE PTR es:[edi],dx
  4190af:	test   al,0x95
  4190b1:	mov    eax,DWORD PTR [eax]
  4190b3:	mov    al,0x3f
  4190b5:	xchg   ebp,eax
  4190b6:	arpl   WORD PTR [ebx-0x558b7bc1],di
  4190bc:	dec    ebx
  4190bd:	test   BYTE PTR [edi-0x4b],bl
  4190c0:	pop    eax
  4190c1:	mov    ah,0x72
  4190c3:	xchg   ebp,eax
  4190c4:	push   esp
  4190c5:	adc    ebp,edi
  4190c7:	xchg   esi,eax
  4190c8:	cmp    al,0x7f
  4190ca:	xchg   DWORD PTR [bx+si-0x6b],eax
  4190ce:	test   DWORD PTR cs:[ecx],esi
  4190d1:	jge    0x4190d3
	...
  4190e3:	add    BYTE PTR [eax],al
  4190e5:	add    BYTE PTR [edx],cl
  4190e7:	fs dec edi
  4190e9:	je     0x419078
  4190eb:	ss jno 0x419160
  4190ee:	ss and al,0xfd
  4190f1:	(bad)  
  4190f2:	out    dx,eax
  4190f3:	arpl   WORD PTR [edi+0x74],cx
  4190f6:	dec    ebp
  4190f7:	xor    al,0x40
  4190f9:	push   0x3e1f4d
  4190fe:	jecxz  0x419165
  419100:	dec    edi
  419101:	je     0x419140
  419103:	xor    ch,BYTE PTR [ecx+ecx*2+0x69]
  419107:	adc    bh,BYTE PTR [esi]
  419109:	add    BYTE PTR [ebx+0x7d744f65],bh
  41910f:	xor    eax,0x666e7271
  419114:	jmp    0x9a43:0x6f126c00
  41911b:	push   ss
  41911c:	dec    ebx
  41911d:	dec    ecx
  41911e:	outs   dx,BYTE PTR ds:[esi]
  41911f:	pushw  cs
  419121:	add    DWORD PTR [edx+edx*1+0x6f],ebx
  419125:	push   ebx
  419126:	xchg   ebx,eax
  419127:	adc    al,BYTE PTR [esi+0x57]
  41912a:	jg     0x419190
  41912c:	outs   dx,DWORD PTR ds:[esi]
  41912d:	push   0x705dff9b
  419132:	xchg   esi,eax
  419133:	dec    eax
  419134:	fs ins BYTE PTR es:[edi],dx
  419136:	dec    ebx
  419137:	fs add BYTE PTR ss:[esi+0x6],al
  41913c:	bound  esi,QWORD PTR [eax+ebp*1+0x7]
  419140:	popa   
  419141:	fs cmp eax,0x60002a64
  419147:	add    esi,DWORD PTR [ecx+0x68]
	...
  41915a:	add    BYTE PTR [eax],al
  41915c:	pop    eax
  41915d:	adc    eax,0x6066271
  419162:	pop    esi
  419163:	ins    DWORD PTR es:[edi],dx
  419164:	push   edx
  419165:	fs inc ebp
  419167:	add    BYTE PTR [ecx+ecx*1],cl
  41916a:	pusha  
  41916b:	imul   edx,DWORD PTR [edx],0x0
  41916e:	std    
  41916f:	call   DWORD PTR [esi-0x569efee0]
  419175:	(bad)  
  419176:	jecxz  0x4191da
  419178:	jne    0x419107
  41917a:	add    DWORD PTR [esi],esp
  41917c:	xchg   esi,eax
  41917d:	fsubr  st(4),st
  41917f:	ins    BYTE PTR es:[edi],dx
  419180:	test   esi,ebx
  419182:	icebp  
  419183:	ins    BYTE PTR es:[edi],dx
  419184:	jne    0x41916a
  419186:	fbstp  TBYTE PTR [ebx-0x6a]
  419189:	cmp    eax,0x9f737104
  41918e:	loopne 0x41918f
  419190:	loope  0x4191ce
  419192:	add    al,0x71
  419194:	jae    0x4191e3
  419196:	fbld   TBYTE PTR [eax+0x4a]
  419199:	stc    
  41919a:	add    BYTE PTR [esi],bh
  41919c:	xchg   esi,eax
  41919d:	dec    ebx
  41919e:	fbld   TBYTE PTR [eax+0x48]
  4191a1:	stc    
  4191a2:	add    BYTE PTR [ebp-0x6a],al
  4191a5:	dec    esp
  4191a6:	fbstp  TBYTE PTR [ebx+0x25]
  4191a9:	js     0x41918c
  4191ab:	push   0xfff06939
  4191b0:	mov    eax,ds:0x4555011a
  4191b5:	cmp    dl,cl
  4191b7:	jae    0x4191b0
  4191b9:	or     ebp,ebp
  4191bb:	jb     0x4191c3
  4191bd:	cli    
  4191be:	add    BYTE PTR [ebp+0x0],dh
	...
  4191d1:	add    BYTE PTR ds:0xc568e169,al
  4191d7:	retf   
  4191d8:	and    ah,BYTE PTR [edx+eax*1+0x36]
  4191dc:	add    DWORD PTR [ebx-0x6a],ecx
  4191df:	mov    ebp,0xcefa5ee5
  4191e4:	icebp  
  4191e5:	(bad)  
  4191e6:	in     al,0xc9
  4191e8:	out    dx,al
  4191e9:	ins    BYTE PTR es:[edi],dx
  4191ea:	mov    eax,0xd762e532
  4191ef:	stc    
  4191f0:	add    BYTE PTR [edi-0x6a],bl
  4191f3:	out    dx,al
  4191f4:	loop   0x419261
  4191f6:	test   eax,0xa552dd1a
  4191fb:	bound  ecx,QWORD PTR [ecx+esi*8-0x22716b27]
  419202:	mov    eax,0xa5038c7e
  419207:	xchg   ebx,eax
  419208:	test   cl,dh
  41920a:	je     0x41918c
  41920c:	jge    0x419233
  41920e:	jb     0x41928e
  419210:	mov    eax,DWORD PTR [ebx]
  419212:	xchg   esi,eax
  419213:	(bad)  
  419214:	out    0x3,eax
  419216:	xchg   esi,eax
  419217:	(bad)  
  419218:	out    0x3,eax
  41921a:	xchg   esi,eax
  41921b:	(bad)  
  41921c:	out    0x3,eax
  41921e:	xchg   esi,eax
  41921f:	(bad)  
  419220:	out    0x3,eax
  419222:	xchg   esi,eax
  419223:	(bad)  
  419224:	out    0x3,eax
  419226:	xchg   esi,eax
  419227:	(bad)  
  419228:	out    0x3,eax
  41922a:	xchg   esi,eax
  41922b:	(bad)  
  41922c:	out    0x3,eax
  41922e:	xchg   esi,eax
  41922f:	(bad)  
  419230:	out    0x3,eax
  419232:	xchg   esi,eax
  419233:	(bad)  
  419234:	out    0x3,eax
	...
  419246:	add    BYTE PTR [eax],al
  419248:	xchg   esi,eax
  419249:	(bad)  
  41924a:	out    0x3,eax
  41924c:	xchg   esi,eax
  41924d:	(bad)  
  41924e:	out    0x3,eax
  419250:	xchg   esi,eax
  419251:	(bad)  
  419252:	out    0x3,eax
  419254:	xchg   esi,eax
  419255:	(bad)  
  419256:	out    0x3,eax
  419258:	xchg   esi,eax
  419259:	(bad)  
  41925a:	out    0x3,eax
  41925c:	xchg   esi,eax
  41925d:	(bad)  
  41925e:	out    0x3,eax
  419260:	xchg   esi,eax
  419261:	(bad)  
  419262:	out    0x3,eax
  419264:	xchg   esi,eax
  419265:	(bad)  
  419266:	out    0x3,eax
  419268:	xchg   esi,eax
  419269:	(bad)  
  41926a:	out    0x3,eax
  41926c:	xchg   esi,eax
  41926d:	(bad)  
  41926e:	out    0x3,eax
  419270:	xchg   esi,eax
  419271:	(bad)  
  419272:	out    0x3,eax
  419274:	xchg   esi,eax
  419275:	(bad)  
  419276:	out    0x3,eax
  419278:	xchg   esi,eax
  419279:	(bad)  
  41927a:	out    0x3,eax
  41927c:	xchg   esi,eax
  41927d:	(bad)  
  41927e:	out    0x3,eax
  419280:	xchg   esi,eax
  419281:	(bad)  
  419282:	out    0x3,eax
  419284:	xchg   esi,eax
  419285:	bound  eax,QWORD PTR [eax]
  419287:	jmp    0xe941f521
  41928c:	xchg   ebp,eax
  41928d:	bound  eax,QWORD PTR [eax]
  41928f:	jmp    0xe941f529
  419294:	xchg   ebp,eax
  419295:	bound  eax,QWORD PTR [eax]
  419297:	jmp    0xe941f531
  41929c:	xchg   ebp,eax
  41929d:	bound  eax,QWORD PTR [eax]
  41929f:	jmp    0xe941f539
  4192a4:	xchg   ebp,eax
  4192a5:	bound  eax,QWORD PTR [eax]
  4192a7:	jmp    0xe941f541
	...
  4192bc:	add    BYTE PTR [eax],al
  4192be:	xchg   ebp,eax
  4192bf:	bound  eax,QWORD PTR [eax]
  4192c1:	jmp    0xe941f55b
  4192c6:	xchg   ebp,eax
  4192c7:	bound  eax,QWORD PTR [eax]
  4192c9:	jmp    0xe941f563
  4192ce:	xchg   ebp,eax
  4192cf:	bound  eax,QWORD PTR [eax]
  4192d1:	jmp    0xe941f56b
  4192d6:	xchg   ebp,eax
  4192d7:	bound  eax,QWORD PTR [eax]
  4192d9:	jmp    0xe941f573
  4192de:	xchg   ebp,eax
  4192df:	bound  eax,QWORD PTR [eax]
  4192e1:	jmp    0xe941f57b
  4192e6:	xchg   ebp,eax
  4192e7:	bound  eax,QWORD PTR [eax]
  4192e9:	jmp    0xe941f583
  4192ee:	xchg   ebp,eax
  4192ef:	bound  eax,QWORD PTR [eax]
  4192f1:	jmp    0xe941f58b
  4192f6:	xchg   ebp,eax
  4192f7:	bound  eax,QWORD PTR [eax]
  4192f9:	jmp    0xe941f593
  4192fe:	xchg   ebp,eax
  4192ff:	bound  eax,QWORD PTR [eax]
  419301:	jmp    0xe941f59b
  419306:	xchg   ebp,eax
  419307:	bound  eax,QWORD PTR [eax]
  419309:	jmp    0xe941f5a3
  41930e:	xchg   ebp,eax
  41930f:	bound  eax,QWORD PTR [eax]
  419311:	add    BYTE PTR [edi],bh
  419313:	popa   
  419314:	add    BYTE PTR [eax],al
  419316:	das    
  419317:	popa   
  419318:	add    BYTE PTR [eax],al
  41931a:	das    
  41931b:	popa   
  41931c:	add    BYTE PTR [eax],al
  41931e:	aas    
  41931f:	popa   
	...
  419334:	aas    
  419335:	popa   
  419336:	add    BYTE PTR [eax],al
  419338:	das    
  419339:	popa   
  41933a:	add    BYTE PTR [eax],al
  41933c:	dec    edx
  41933d:	push   ds
  41933e:	int3   
  41933f:	int3   
  419340:	loop   0x41935f
  419342:	int3   
  419343:	int3   
  419344:	arpl   cx,bx
  419346:	jmp    0x419399
  419348:	or     eax,0x8e8a08a7
  41934d:	fimul  DWORD PTR [edx-0x1]
  419350:	sbb    eax,0x43c35b07
  419355:	fldpi  
  419357:	push   ecx
  419358:	dec    eax
  419359:	mov    ch,0x31
  41935b:	leave  
  41935c:	jb     0x419337
  41935e:	outs   dx,BYTE PTR ds:[esi]
  41935f:	xor    BYTE PTR ds:0x408b0c94,bl
  419365:	outs   dx,BYTE PTR ds:[esi]
  419366:	mov    DWORD PTR [esi-0x72],eax
  419369:	fild   DWORD PTR [edx-0x4]
  41936c:	or     eax,0x688b208c
  419371:	loop   0x4193af
  419373:	imul   esp,DWORD PTR [edx],0x65
  419376:	cmp    BYTE PTR [edi],0x4d
  419379:	xchg   esi,eax
  41937a:	add    ch,bl
  41937c:	scas   eax,DWORD PTR es:[edi]
  41937d:	lods   al,BYTE PTR ds:[esi]
  41937e:	pop    esi
  41937f:	mov    edi,DWORD PTR [ebx-0x52]
  419382:	ror    esp,0xe3
  419385:	xlat   BYTE PTR ds:[ebx]
  419386:	jmp    0x41930b
  419388:	jb     0x4193d1
  41938a:	mov    DWORD PTR [ebp-0x72],eax
  41938d:	fld    DWORD PTR [edx-0x20]
  419390:	sbb    eax,0xc38be09e
  419395:	add    al,BYTE PTR [ecx]
  419397:	push   ecx
	...
  4193a8:	add    BYTE PTR [eax],al
  4193aa:	mov    ds:0xde452d9,al
  4193af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193b0:	in     al,0x8b
  4193b2:	fimul  WORD PTR [edx-0x2661b2ff]
  4193b8:	dec    edx
  4193b9:	clc    
  4193ba:	or     eax,0xd48bf8b6
  4193bf:	inc    esi
  4193c0:	add    DWORD PTR [ebp-0x62],eax
  4193c3:	fld    DWORD PTR [edx-0x18]
  4193c6:	sbb    eax,0xc78bf89e
  4193cb:	inc    edx
  4193cc:	add    DWORD PTR [ebp-0x72],edx
  4193cf:	fst    DWORD PTR [edx-0x10]
  4193d2:	sbb    eax,0x5e8bf8a6
  4193d7:	outs   dx,BYTE PTR ds:[esi]
  4193d8:	add    DWORD PTR [ebp-0x72],ecx
  4193db:	(bad)  [edx-0x4]
  4193de:	shl    DWORD PTR [ebp+0x629600f4],1
  4193e4:	add    bl,ch
  4193e6:	lahf   
  4193e7:	xlat   BYTE PTR ds:[ebx]
  4193e8:	push   edx
  4193e9:	hlt    
  4193ea:	adc    eax,0x4388ff21
  4193ef:	push   ss
  4193f0:	mov    DWORD PTR [ebp-0x32],eax
  4193f3:	xlat   BYTE PTR ds:[ebx]
  4193f4:	dec    edx
  4193f5:	hlt    
  4193f6:	lea    ebx,[edx-0x28b18ce8]
  4193fc:	push   edx
  4193fd:	lock or eax,0x9e450161
  419403:	fld    DWORD PTR [edx-0x24]
  419406:	cmp    al,0x5c
  419408:	push   0xa294ac
  41940d:	mov    eax,DWORD PTR [eax]
	...
  41941f:	add    BYTE PTR [ebx+0x2e],cl
  419422:	dec    edi
  419423:	call   0x41f60e
  419428:	adc    eax,0x56850c26
  41942d:	xchg   ebp,eax
  41942e:	sbb    DWORD PTR [ebx+0x458916e3],ecx
  419434:	jle    0x419491
  419436:	mov    ch,0xc
  419438:	(bad)  
  419439:	(bad)  [edx-0x14]
  41943c:	or     eax,0xd38becb5
  419441:	push   cs
  419442:	mov    DWORD PTR [esi+eiz*1],eax
  419445:	pop    edi
  419446:	inc    ebx
  419447:	or     BYTE PTR ds:0x464d895d,bh
  41944d:	fistp  QWORD PTR [esi-0xf62f0fc]
  419453:	jmp    0x41944f
  419455:	dec    esi
  419456:	ror    BYTE PTR [ebx-0x333e52cd],0x52
  41945d:	push   ds
  41945e:	int3   
  41945f:	int3   
  419460:	dec    edx
  419461:	push   ds
  419462:	int3   
  419463:	int3   
  419464:	loop   0x419483
  419466:	int3   
  419467:	int3   
  419468:	arpl   di,dx
  41946a:	jmp    0x4193ef
  41946c:	repnz imul ebp,eax,0xfd0af905
  419473:	mov    DWORD PTR [ebx-0x6],ebx
  419476:	mov    BYTE PTR [ebp-0x2],al
  419479:	mov    cl,0xe8
  41947b:	sub    ecx,esp
  41947d:	or     bh,ch
  41947f:	adc    edx,0x65
  419482:	mov    eax,ds:0xb4
	...
  419493:	add    BYTE PTR [eax],al
  419495:	add    BYTE PTR [ebx-0x5f],ch
  419498:	add    BYTE PTR [eax+0xa],ch
  41949b:	pusha  
  41949c:	inc    eax
  41949d:	add    BYTE PTR ds:0xb951e89d,cl
  4194a3:	je     0x419459
  4194a5:	push   ebp
  4194a6:	push   edi
  4194a7:	bound  esp,QWORD PTR [ecx+0xa143b8]
  4194ad:	push   0xffffff96
  4194af:	js     0x4194b1
  4194b1:	push   0x405fca
  4194b6:	xchg   ecx,eax
  4194b7:	jo     0x419471
  4194b9:	push   ebp
  4194ba:	xlat   BYTE PTR ds:[ebx]
  4194bb:	bound  eax,QWORD PTR [edi+0x43226e45]
  4194c1:	cld    
  4194c2:	xchg   esi,eax
  4194c3:	bound  eax,QWORD PTR [eax]
  4194c5:	add    BYTE PTR [ebp+0x5c],bh
  4194c8:	mov    DWORD PTR [ebp+0x6a],edx
  4194cb:	out    0xc1,al
  4194cd:	add    DWORD PTR [edi],ecx
  4194cf:	mov    al,0xfc
  4194d1:	sbb    ebx,0x6
  4194d4:	or     BYTE PTR [ebx+0x77],dh
  4194d7:	fld    QWORD PTR [edx-0x4]
  4194da:	sbb    eax,0x948c8357
  4194df:	mov    ds:0xb00d5100,al
  4194e4:	call   0xb4b1c63b
  4194e9:	push   ebp
  4194ea:	xlat   BYTE PTR ds:[ebx]
  4194eb:	bound  ecx,QWORD PTR [ecx+0x3dc224d]
  4194f1:	(bad)  
  4194f2:	loop   0x4194a3
  4194f4:	aas    
  4194f5:	add    ch,bh
  4194f7:	xor    cl,BYTE PTR [ecx+0xe5]
	...
  419509:	add    BYTE PTR [eax],al
  41950b:	add    BYTE PTR [ebx+0x25],ch
  41950e:	int3   
  41950f:	int3   
  419510:	rcl    BYTE PTR [esi],cl
  419512:	int3   
  419513:	int3   
  419514:	retf   0xcc16
  419517:	int3   
  419518:	loop   0x419530
  41951a:	int3   
  41951b:	int3   
  41951c:	inc    ebx
  41951d:	fucomp st(3)
  41951f:	mov    eax,ds:0x3fb086
  419524:	cwde   
  419525:	fnstsw WORD PTR [edi]
  419527:	xor    BYTE PTR ds:0x1f3e0898,bl
  41952d:	fwait
  41952e:	or     BYTE PTR [ebp-0x2b],bl
  419531:	push   ss
  419532:	int3   
  419533:	int3   
  419534:	retf   0xcc16
  419537:	int3   
  419538:	loop   0x419550
  41953a:	int3   
  41953b:	int3   
  41953c:	inc    ebx
  41953d:	fucomp st(3)
  41953f:	mov    ebx,DWORD PTR [ebx+0x56]
  419542:	push   eax
  419543:	mov    ecx,DWORD PTR [ebx+0x5a]
  419546:	dec    edi
  419547:	jmp    FWORD PTR [ebx-0x69bead32]
  41954d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41954e:	ror    esp,0x52
  419551:	push   ss
  419552:	int3   
  419553:	int3   
  419554:	dec    edx
  419555:	push   ss
  419556:	int3   
  419557:	int3   
  419558:	bound  edx,QWORD PTR [esi]
  41955a:	int3   
  41955b:	int3   
  41955c:	ret    
  41955d:	fucomp st(3)
  41955f:	xor    DWORD PTR [edx+0x5a],0x6a
  419563:	add    ah,ch
  419565:	bound  ebp,QWORD PTR [eax-0x24]
  419568:	xchg   esp,eax
  419569:	mov    ds:0xcaa3ff00,al
  41956e:	push   edx
  41956f:	inc    ecx
	...
  419580:	add    BYTE PTR [eax],al
  419582:	xchg   esi,eax
  419583:	fild   DWORD PTR [edx-0x8]
  419586:	scas   al,BYTE PTR es:[edi]
  419587:	cli    
  419588:	add    DWORD PTR [eax-0x6a],eax
  41958b:	fld    QWORD PTR [edx-0x8]
  41958e:	(bad)  
  41958f:	cli    
  419590:	mov    ecx,0x810921ff
  419595:	les    ecx,FWORD PTR [esi+0x1dfc42db]
  41959b:	xchg   edi,eax
  41959c:	adc    BYTE PTR [ecx+0x1d],dl
  41959f:	scas   eax,DWORD PTR es:[edi]
  4195a0:	or     al,0x52
  4195a2:	or     eax,0xf950089f
  4195a7:	scas   al,BYTE PTR es:[edi]
  4195a8:	cld    
  4195a9:	mov    edi,ebx
  4195ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ac:	ror    esp,0x43
  4195af:	fucomp st(3)
  4195b1:	push   ecx
  4195b2:	fstp   DWORD PTR [esi+0x629600fc]
  4195b8:	add    bl,ch
  4195ba:	lahf   
  4195bb:	fld    QWORD PTR [edx-0x4]
  4195be:	adc    eax,0x5b88ff22
  4195c3:	push   es
  4195c4:	mov    DWORD PTR [ebp-0x46],ecx
  4195c7:	dec    esp
  4195c8:	dec    ebx
  4195c9:	adc    BYTE PTR ds:0x9e558969,ah
  4195cf:	gs push ebx
  4195d1:	cld    
  4195d2:	xchg   ecx,eax
  4195d3:	rol    BYTE PTR [ecx],1
  4195d5:	mov    ecx,DWORD PTR [ebx+0x56]
  4195d8:	add    DWORD PTR [ebp-0x6e],ecx
  4195db:	pop    eax
  4195dc:	mov    dh,0x11
  4195de:	int    0x24
  4195e0:	je     0x4195e9
  4195e2:	bound  eax,QWORD PTR ds:[eax]
	...
  4195f5:	add    BYTE PTR [eax],al
  4195f7:	add    BYTE PTR [esi+0x46eb03fb],dl
  4195fd:	push   esp
  4195fe:	ror    BYTE PTR [ebx-0x333e598d],0x52
  419605:	pop    ss
  419606:	int3   
  419607:	int3   
  419608:	dec    edx
  419609:	pop    ss
  41960a:	int3   
  41960b:	int3   
  41960c:	bound  edx,QWORD PTR [edi]
  41960e:	int3   
  41960f:	int3   
  419610:	jecxz  0x4195ed
  419612:	jmp    0x4195cd
  419614:	sahf   
  419615:	bound  eax,QWORD PTR [eax]
  419617:	add    BYTE PTR [edx-0x5c76f925],dh
  41961d:	jb     0x419675
  41961f:	inc    ecx
  419620:	xchg   esi,eax
  419621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419622:	ror    esp,0x52
  419625:	pop    ss
  419626:	int3   
  419627:	int3   
  419628:	dec    edx
  419629:	pop    ss
  41962a:	int3   
  41962b:	int3   
  41962c:	loop   0x419644
  41962e:	int3   
  41962f:	int3   
  419630:	arpl   bx,bx
  419632:	jmp    0x4195b7
  419634:	bnd jb 0x4195c0
  419637:	inc    ebp
  419638:	mov    fs,ebx
  41963a:	ja     0x419640
  41963c:	xchg   esi,eax
  41963d:	push   edi
  41963e:	test   BYTE PTR [eax-0x74ff9d6a],cl
  419644:	push   ebx
  419645:	pop    edx
  419646:	mov    DWORD PTR [ecx-0x6e],edx
  419649:	jecxz  0x419634
  41964b:	or     bh,ah
  41964d:	cld    
  41964e:	xchg   BYTE PTR [ebp-0x3e],dl
  419651:	fild   DWORD PTR [edx+0x8]
  419654:	adc    eax,0x53890823
  419659:	adc    al,ch
  41965b:	inc    ebp
	...
  41966c:	add    BYTE PTR [eax],al
  41966e:	mov    dl,0x62
  419670:	add    BYTE PTR [eax],al
  419672:	xchg   esi,eax
  419673:	sti    
  419674:	push   es
  419675:	mov    edx,DWORD PTR [ebx+0x6]
  419678:	add    ecx,0xfc4ad997
  41967e:	sbb    eax,0xe33bfcad
  419683:	push   cs
  419684:	jno    0x4196cc
  419686:	or     eax,0xcb8bfc9d
  41968b:	adc    cl,BYTE PTR ds:0xbfa18ab7
  419691:	cli    
  419692:	call   0x8954:0xeb03f9e3
  419699:	inc    ebp
  41969a:	pop    edx
  41969b:	fisttp DWORD PTR [edx-0x10]
  41969e:	mov    eax,ds:0x174113cf
  4196a3:	add    al,0xfd
  4196a5:	setbe  BYTE PTR [edx-0x79]
  4196a9:	push   ebp
  4196aa:	fild   DWORD PTR ds:[edx+0x8]
  4196ae:	sbb    eax,0x9e030c95
  4196b3:	fist   DWORD PTR [edx-0x8]
  4196b6:	or     eax,0xd3030f5e
  4196bb:	jb     0x419646
  4196bd:	dec    ebp
  4196be:	sahf   
  4196bf:	fist   DWORD PTR [edx+0xc]
  4196c2:	xchg   ebp,eax
  4196c3:	jno    0x41964e
  4196c5:	dec    ebp
  4196c6:	(bad)  
  4196c7:	fadd   DWORD PTR [ebx]
  4196c9:	or     ch,ch
  4196cb:	mov    eax,0xdb9e5588
  4196d0:	inc    edx
  4196d1:	or     BYTE PTR [eax],al
	...
  4196e3:	add    BYTE PTR [ebp+0x5b8904a4],dl
  4196e9:	pop    edx
  4196ea:	out    0x6b,eax
  4196ec:	fld    DWORD PTR [esi]
  4196ee:	std    
  4196ef:	mov    edi,DWORD PTR [ebx+0x63ccc1a4]
  4196f5:	fucomi st,st(3)
  4196f7:	xor    DWORD PTR [edx-0x71ba76c3],0xffffffd9
  4196fe:	inc    edx
  4196ff:	in     al,0x1d
  419701:	xchg   ebp,eax
  419702:	in     al,0x8b
  419704:	inc    ebx
  419705:	inc    BYTE PTR [eax]
  419707:	push   ecx
  419708:	(bad)  
  419709:	fst    DWORD PTR [edx-0x18]
  41970c:	or     eax,0x1e8be89d
  419711:	jecxz  0x419712
  419713:	call   DWORD PTR [esi+0x15f04adb]
  419719:	mov    al,dh
  41971b:	add    BYTE PTR [ecx-0x69ff0722],cl
  419721:	bound  ecx,QWORD PTR [ecx+0x53619e55]
  419727:	lock cmpxchg al,ah
  41972b:	mov    edx,ebx
  41972d:	add    al,BYTE PTR [ecx+0xd62a678]
  419733:	test   BYTE PTR [ebx],dh
  419735:	arpl   WORD PTR [eax],ax
  419737:	add    BYTE PTR [edx+eiz*2-0x67f2ff96],ch
  41973e:	loopne 0x4196cb
  419740:	retf   
  419741:	pop    edx
  419742:	add    DWORD PTR [ecx-0x66],edx
  419745:	mov    al,0xfd
  419747:	adc    eax,0x0
	...
  419758:	add    BYTE PTR [eax],al
  41975a:	fisubr WORD PTR [edi-0x5ff0ffc1]
  419760:	cld    
  419761:	mov    ebx,DWORD PTR [ebx+0x2]
  419764:	cmp    DWORD PTR [eax],0x8b178e96
  41976a:	push   ebx
  41976b:	add    cl,BYTE PTR [ecx+0xf618e55]
  419771:	mov    DWORD PTR [ebx-0xa],ecx
  419774:	mov    BYTE PTR [ebp-0xa],al
  419777:	(bad)  [edx+0x8]
  41977a:	xchg   ebp,eax
  41977b:	call   0x17e9:0xe4b8910
  419782:	sbb    eax,0x538be0b0
  419787:	pop    edx
  419788:	add    DWORD PTR [edx-0x5a],eax
  41978b:	fild   DWORD PTR [edx-0xc]
  41978e:	or     eax,0x4b8be098
  419793:	pop    edx
  419794:	add    DWORD PTR [ecx],edx
  419796:	pop    ds
  419797:	mov    al,0xec
  419799:	(bad)  
  41979a:	pop    ebx
  41979b:	or     al,BYTE PTR [eax]
  41979d:	add    BYTE PTR [esi+0x76458962],dl
  4197a3:	loope  0x41981c
  4197a5:	adc    BYTE PTR [esi-0x2c74f272],dl
  4197ab:	add    al,BYTE PTR [ecx+0x58e9639]
  4197b1:	(bad)  
  4197b2:	fisttp DWORD PTR [edx]
  4197b4:	(bad)  
  4197b5:	call   DWORD PTR [esi+0x6a558962]
  4197bb:	loope  0x4197f6
	...
  4197cd:	add    BYTE PTR [eax],al
  4197cf:	add    dl,ah
  4197d1:	or     DWORD PTR [ecx+0x7d94a45],0xffffff81
  4197d8:	aaa    
  4197d9:	bound  eax,QWORD PTR [eax]
  4197db:	add    BYTE PTR [esi],dl
  4197dd:	mov    ds,WORD PTR [ebx+ecx*4]
  4197e0:	jecxz  0x4197f0
  4197e2:	mov    DWORD PTR [edx],eax
  4197e4:	jnp    0x4197eb
  4197e6:	std    
  4197e7:	jmp    FWORD PTR [ecx+0x224d89b2]
  4197ed:	mov    bl,0xe8
  4197ef:	mov    ch,0x1b
  4197f1:	add    eax,0x59da83fd
  4197f6:	xchg   DWORD PTR [ebp-0x16],eax
  4197f9:	clc    
  4197fa:	sbb    ecx,DWORD PTR [ebx+0x2890e6b]
  419800:	or     eax,0x4a8d0897
  419805:	pop    edx
  419806:	add    dl,BYTE PTR [edx+0x1d]
  419809:	lahf   
  41980a:	cld    
  41980b:	push   eax
  41980c:	out    dx,al
  41980d:	in     al,dx
  41980e:	cli    
  41980f:	(bad)  
  419810:	fchs   
  419812:	ret    
  419813:	or     BYTE PTR [edi],bl
  419815:	lahf   
  419816:	fmul   QWORD PTR [ebx+0x55890e5b]
  41981c:	loop   0x4197f8
  41981e:	push   cs
  41981f:	mov    edx,DWORD PTR [ebx+0xe]
  419822:	add    eax,0xf442db9a
  419828:	sbb    eax,0xd783ec97
  41982d:	pop    ebp
  41982e:	xchg   DWORD PTR [ebp-0x56],ecx
  419831:	clc    
  419832:	xchg   esp,eax
  419833:	mov    eax,DWORD PTR [eax]
	...
  419845:	add    bl,ch
  419847:	add    al,BYTE PTR [ecx+0x52d9a2c2]
  41984d:	loopne 0x4198be
  41984f:	push   ebp
  419850:	std    
  419851:	(bad)  
  419852:	jns    0x41982c
  419854:	loop   0x4198b3
  419856:	push   ebp
  419857:	pop    ss
  419858:	int3   
  419859:	int3   
  41985a:	ret    
  41985b:	xlat   BYTE PTR ds:[ebx]
  41985c:	jmp    0x4197e1
  41985e:	jb     0x4198bb
  419860:	push   0xa294f0
  419865:	jmp    FWORD PTR [ebx-0x69beacde]
  41986b:	fld    DWORD PTR [edx-0x8]
  41986e:	scas   al,BYTE PTR es:[edi]
  41986f:	push   es
  419870:	add    al,BYTE PTR [eax-0x6a]
  419873:	xlat   BYTE PTR ds:[ebx]
  419874:	inc    edx
  419875:	clc    
  419876:	(bad)  
  419877:	cli    
  419878:	cmp    eax,0x810429fd
  41987d:	les    ecx,FWORD PTR [esi+0xdfc42d9]
  419883:	xchg   esi,eax
  419884:	adc    BYTE PTR [ecx+0x1d],dl
  419887:	scas   al,BYTE PTR es:[edi]
  419888:	or     al,0x52
  41988a:	sbb    eax,0x150089e
  41988f:	scas   al,BYTE PTR es:[edi]
  419890:	cld    
  419891:	mov    esi,ebx
  419893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419894:	ror    esp,0xe2
  419897:	push   ss
  419898:	int3   
  419899:	int3   
  41989a:	inc    ebx
  41989b:	xlat   BYTE PTR ds:[ebx]
  41989c:	jmp    0x41983f
  41989e:	sub    BYTE PTR [edi+edi*1+0x6862d000],0x8b
  4198a6:	stos   DWORD PTR es:[edi],eax
  4198a7:	outs   dx,BYTE PTR ds:[esi]
  4198a8:	push   esi
  4198a9:	inc    ecx
	...
  4198ba:	add    BYTE PTR [eax],al
  4198bc:	xchg   esi,eax
  4198bd:	(bad)  [edi+0x1]
  4198c0:	add    al,0x20
  4198c2:	mov    BYTE PTR [eax-0x6d],dl
  4198c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c6:	ror    esp,0xe2
  4198c9:	push   ss
  4198ca:	int3   
  4198cb:	int3   
  4198cc:	inc    ebx
  4198cd:	xlat   BYTE PTR ds:[ebx]
  4198ce:	jmp    0x419853
  4198d0:	mov    dl,0x56
  4198d2:	lahf   
  4198d3:	adc    BYTE PTR [eax-0x5f],al
  4198d6:	add    BYTE PTR [ebx+0x3ec74f64],cl
  4198dc:	sbb    eax,0x648b30a2
  4198e1:	xlat   BYTE PTR ds:[ebx]
  4198e2:	sar    DWORD PTR [esi],1
  4198e4:	or     eax,0x448b0c9a
  4198e9:	(bad)  [edx-0xc]
  4198ec:	sbb    eax,0xce8bf49d
  4198f1:	push   esi
  4198f2:	xchg   DWORD PTR [ebp+0x5e],ecx
  4198f5:	xlat   BYTE PTR ds:[ebx]
  4198f6:	push   edx
  4198f7:	clc    
  4198f8:	pop    ds
  4198f9:	lods   eax,DWORD PTR ds:[esi]
  4198fa:	cld    
  4198fb:	mov    eax,0x6297
  419900:	sbb    esp,DWORD PTR [edx]
  419902:	je     0x419948
  419904:	adc    eax,0xab00f885
  419909:	pop    esi
  41990a:	xor    eax,eax
  41990c:	cmp    eax,0x1e4d8946
  419911:	xlat   BYTE PTR ds:[ebx]
  419912:	dec    esi
  419913:	sbb    BYTE PTR [ebp-0x53],bl
  419916:	or     BYTE PTR [ebp-0x51],dh
  419919:	xlat   BYTE PTR ds:[ebx]
  41991a:	inc    edx
  41991b:	clc    
  41991c:	sbb    eax,0x890c95
	...
  419931:	add    BYTE PTR [esi+0x66],cl
  419934:	mov    DWORD PTR [ebp-0x2],edx
  419937:	(bad)  
  419938:	inc    edx
  419939:	adc    BYTE PTR [edi],bl
  41993b:	mov    al,ds:0x6297b818
  419940:	add    BYTE PTR [eax],al
  419942:	in     eax,dx
  419943:	imul   ecx,DWORD PTR [ecx+0xed6de4d],0x890a6b89
  41994d:	inc    ebp
  41994e:	into   
  41994f:	inc    esi
  419950:	inc    ebx
  419951:	cld    
  419952:	dec    ebx
  419953:	pop    esi
  419954:	xor    eax,eax
  419956:	lods   eax,DWORD PTR ds:[esi]
  419957:	pop    ebp
  419958:	jmp    0x8963ff10
  41995d:	in     eax,0x4b
  41995f:	pop    ds
  419960:	int3   
  419961:	int3   
  419962:	rcl    BYTE PTR ds:0x15cacccc,cl
  419968:	int3   
  419969:	int3   
  41996a:	bound  ebp,QWORD PTR [edi]
  41996c:	int3   
  41996d:	int3   
  41996e:	jecxz  0x41995d
  419970:	jmp    0x4198f5
  419972:	jb     0x4199cf
  419974:	lds    eax,FWORD PTR [ebp+0x7e]
  419977:	arpl   WORD PTR [eax],si
  419979:	add    BYTE PTR [esi-0x29fcfb76],dl
  41997f:	bound  ebx,QWORD PTR [edi+0xa3cbfc]
  419985:	push   eax
  419986:	outs   dx,BYTE PTR ds:[esi]
  419987:	xchg   esi,eax
  419988:	cld    
  419989:	call   DWORD PTR [ecx-0x1a]
  41998c:	ret    
  41998d:	or     BYTE PTR [edi],bl
  41998f:	test   al,0xf4
  419991:	push   0xffffffd6
  419993:	in     eax,dx
  419994:	dec    edx
  419995:	clc    
	...
  4199a6:	add    BYTE PTR [eax],al
  4199a8:	out    0xed,eax
  4199aa:	adc    bl,ah
  4199ac:	retf   
  4199ad:	mov    ds:0x92d48b00,eax
  4199b2:	push   eax
  4199b3:	push   0xffffff96
  4199b5:	add    DWORD PTR [ebx-0xc],edx
  4199b8:	cmc    
  4199b9:	push   ss
  4199ba:	push   ebx
  4199bb:	inc    ecx
  4199bc:	xchg   esi,eax
  4199bd:	in     eax,0x3a
  4199bf:	aam    0x63
  4199c1:	mov    ds:0x698b0000,eax
  4199c6:	mov    eax,0x629602
  4199cb:	jmp    0x419a49
  4199cd:	in     eax,dx
  4199ce:	or     al,BYTE PTR [eax]
  4199d0:	xchg   esp,eax
  4199d1:	mov    ds:0xf2538900,al
  4199d6:	add    BYTE PTR [bp+di+0x63],al
  4199da:	add    BYTE PTR [eax-0x6a],ch
  4199dd:	fs inc eax
  4199df:	add    BYTE PTR ds:0x5755d458,bl
  4199e5:	bound  edi,QWORD PTR [edi-0x3e]
  4199e8:	xchg   esi,eax
  4199e9:	add    BYTE PTR fs:[eax],al
  4199ec:	inc    esp
  4199ed:	or     bl,BYTE PTR [esi-0x7efe5602]
  4199f3:	les    edx,FWORD PTR [edx+0x5601ffba]
  4199f9:	bound  ebp,QWORD PTR [ebx]
  4199fb:	add    BYTE PTR [edx+eiz*2+0x169b8b00],dl
  419a02:	push   ebx
  419a03:	inc    ecx
  419a04:	xchg   esi,eax
  419a05:	dec    ebp
  419a06:	enter  0x8b89,0x66
  419a0a:	push   esi
  419a0b:	inc    ecx
	...
  419a1c:	add    BYTE PTR [eax],al
  419a1e:	xchg   esi,eax
  419a1f:	in     eax,dx
  419a20:	adc    al,BYTE PTR [eax+eax*8]
  419a23:	mov    ds:0x16375200,eax
  419a28:	push   ebx
  419a29:	inc    ecx
  419a2a:	xchg   esi,eax
  419a2b:	xchg   edx,eax
  419a2c:	mov    DWORD PTR [ebp+0x46],ecx
  419a2f:	xchg   ebx,eax
  419a30:	call   0xfd42e4d2
  419a35:	sbb    DWORD PTR [edx+0x6e],0xffffff89
  419a39:	adc    eax,0x3f9762
  419a3e:	xchg   ebp,eax
  419a3f:	xchg   edi,eax
  419a40:	or     BYTE PTR [ecx+0x55890ac3],cl
  419a46:	cs add edx,esp
  419a49:	mov    esi,DWORD PTR [ebx]
  419a4b:	lahf   
  419a4c:	ror    esp,0xe2
  419a4f:	sub    eax,0xed63cccc
  419a54:	jmp    0x4199e1
  419a56:	pop    ebx
  419a57:	push   0x39
  419a59:	inc    ebp
  419a5a:	mov    dh,BYTE PTR [ebp+0x5]
  419a5d:	mov    ebx,DWORD PTR [ebx+0x6a]
  419a60:	jmp    0x89a6976a
  419a65:	inc    ebp
  419a66:	xchg   edx,eax
  419a67:	lahf   
  419a68:	ror    esp,0xca
  419a6b:	sub    eax,0x2de2cccc
  419a70:	int3   
  419a71:	int3   
  419a72:	arpl   bp,bp
  419a74:	jmp    0x4199f9
  419a76:	mov    dl,0x4d
  419a78:	lds    eax,FWORD PTR [ebp-0x46]
  419a7b:	popa   
  419a7c:	jo     0x419a7f
  419a7e:	xchg   esi,eax
  419a7f:	in     eax,dx
  419a80:	inc    edx
  419a81:	or     BYTE PTR [eax],al
	...
  419a93:	add    BYTE PTR [edi],bl
  419a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a96:	fmul   DWORD PTR [ebx+0x55891a53]
  419a9c:	mov    fs,WORD PTR [ebp+0x4f]
  419a9f:	cmp    al,0x1f
  419aa1:	xchg   esi,eax
  419aa2:	loopne 0x419a2f
  419aa4:	rol    DWORD PTR [edx],cl
  419aa6:	or     eax,0x8956ceb7
  419aab:	push   ebp
  419aac:	jbe    0x419a9c
  419aae:	inc    ebx
  419aaf:	or     cl,BYTE PTR [esi-0x117bd17]
  419ab5:	push   esi
  419ab6:	add    DWORD PTR [eax-0x6a],eax
  419ab9:	jmp    0x419ac5
  419abb:	cld    
  419abc:	ret    
  419abd:	mov    eax,ds:0xb03e5100
  419ac2:	stc    
  419ac3:	dec    DWORD PTR [ecx-0x1c]
  419ac6:	ret    
  419ac7:	or     BYTE PTR [edi],cl
  419ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aca:	lock push 0xffffffd6
  419acd:	mov    al,BYTE PTR [eax]
  419acf:	xor    BYTE PTR [esi-0x59ff979e],dl
  419ad5:	popa   
  419ad6:	add    BYTE PTR [edx-0x6a],ch
  419ad9:	call   DWORD PTR [edx-0x10]
  419adc:	(bad)  
  419ade:	in     al,0x8b
  419ae0:	imul   eax,DWORD PTR [edx],0xffffff89
  419ae3:	inc    edx
  419ae4:	bound  edx,QWORD PTR [edx-0x6e71b277]
  419aea:	mov    DWORD PTR [ebp-0xe],edx
  419aed:	xchg   esp,eax
  419aee:	call   0xfd418eb4
  419af3:	adc    edx,0x6e
  419af6:	lds    eax,FWORD PTR [ebp+0x0]
	...
  419b09:	add    dl,ch
  419b0b:	bound  eax,QWORD PTR [eax]
  419b0d:	add    BYTE PTR [esi+0x5b8b070b],dl
  419b13:	test   BYTE PTR [eax+0x42e997c0],0xf4
  419b1a:	or     eax,0x10fe0ae
  419b1f:	xchg   edx,eax
  419b20:	push   es
  419b21:	cmp    DWORD PTR [ebx-0xa],ecx
  419b24:	jo     0x419b7f
  419b26:	sbb    eax,0x1e83e8a6
  419b2b:	push   esi
  419b2c:	add    BYTE PTR [ebx+edx*2-0x15],dh
  419b30:	dec    edx
  419b31:	call   0x52144b
  419b36:	add    bh,BYTE PTR [edi]
  419b38:	mov    DWORD PTR [ebp+0x6e],edx
  419b3b:	jmp    0x419b7e
  419b3d:	adc    BYTE PTR ds:0xc78be0ad,cl
  419b43:	mov    eax,DWORD PTR ds:[esi+eax*4-0x1]
  419b48:	mov    BYTE PTR [ebp+0x76],cl
  419b4b:	xor    edx,edx
  419b4d:	mul    edi
  419b4f:	mov    DWORD PTR ds:[ebp+0x36],edx
  419b53:	outs   dx,DWORD PTR ds:[esi]
  419b54:	lods   eax,DWORD PTR ds:[esi]
  419b55:	inc    edx
  419b56:	mov    dl,BYTE PTR [edx-0x14d1ba77]
  419b5c:	dec    edx
  419b5d:	or     BYTE PTR [ebp+0x1d5114aa],dl
  419b63:	xchg   ebp,eax
  419b64:	call   0x1486ef4
  419b69:	inc    edx
  419b6a:	xchg   edx,eax
  419b6b:	xchg   edx,eax
  419b6c:	call   0x419bc6
	...
  419b7d:	add    BYTE PTR [eax],al
  419b7f:	add    BYTE PTR [ebx],bl
  419b81:	(bad)  
  419b82:	cld    
  419b83:	sbb    edx,0x6d
  419b86:	mov    DWORD PTR [ebp-0x2],ecx
  419b89:	loop   0x419b49
  419b8b:	sub    BYTE PTR [edi],cl
  419b8d:	lods   eax,DWORD PTR ds:[esi]
  419b8e:	call   0x532cc07e
  419b93:	in     al,0x44
  419b95:	or     cl,BYTE PTR [esi]
  419b97:	cld    
  419b98:	jmp    0x9b061c9b
  419b9d:	mov    ah,BYTE PTR [ebx+eax*1]
  419ba0:	push   esi
  419ba1:	bound  ebx,QWORD PTR [edi+0xa16bfc]
  419ba7:	push   eax
  419ba8:	mov    esi,0xc1fff9ea
  419bad:	loop   0x419b72
  419baf:	or     BYTE PTR [edi],cl
  419bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb2:	fadd   QWORD PTR [ebx+0x4152fa73]
  419bb8:	xchg   esi,eax
  419bb9:	bound  esi,QWORD PTR [ebx+0xa]
  419bbc:	or     eax,0x5755f06d
  419bc1:	bound  ecx,QWORD PTR [edi-0x1]
  419bc4:	jmp    0x419be4
  419bc6:	cmp    DWORD PTR ds:0x3f988e,0x6a1c7796
  419bd0:	(bad)  
  419bd1:	mov    al,BYTE PTR [eax]
  419bd3:	xor    BYTE PTR [esi+0x6a558962],dl
  419bd9:	xchg   ecx,eax
  419bda:	mov    DWORD PTR [ebp+0x76],eax
  419bdd:	jmp    0xf052:0xfdc73447
	...
  419bf4:	add    BYTE PTR [eax],al
  419bf6:	cmc    
  419bf7:	push   ss
  419bf8:	push   ebx
  419bf9:	inc    ecx
  419bfa:	xchg   esi,eax
  419bfb:	or     DWORD PTR [ebx],edx
  419bfd:	push   0xffffffd6
  419bff:	mov    al,BYTE PTR [eax]
  419c01:	xor    BYTE PTR [esi+0x32558962],dl
  419c07:	xchg   ecx,eax
  419c08:	push   0x0
  419c0a:	sub    DWORD PTR [eax-0x67b55c10],ebx
  419c10:	aas    
  419c11:	add    BYTE PTR ds:0x5755d440,dl
  419c17:	bound  eax,QWORD PTR [eax]
  419c19:	jne    0x419bbe
  419c1b:	mov    BYTE PTR [eax+0x68],al
  419c1e:	xchg   esi,eax
  419c1f:	xor    al,BYTE PTR [eax]
  419c21:	add    BYTE PTR ds:0x7c50fca8,cl
  419c27:	(bad)  
  419c28:	std    
  419c29:	push   ebp
  419c2a:	out    0xc1,al
  419c2c:	rcl    DWORD PTR [ebp+0x57],cl
  419c2f:	bound  ecx,QWORD PTR [ecx+0x4aebf24d]
  419c35:	fcomp  DWORD PTR ds:0x538bd898
  419c3b:	sbb    al,BYTE PTR [ecx]
  419c3d:	inc    edx
  419c3e:	sub    bl,0x42
  419c41:	loopne 0x419c50
  419c43:	mov    al,0xfc
  419c45:	push   ecx
  419c46:	sbb    eax,0xf752e498
  419c4b:	push   ss
  419c4c:	push   ebx
  419c4d:	inc    ecx
  419c4e:	xchg   esi,eax
  419c4f:	xchg   edx,eax
  419c50:	call   0xfd3f36ea
  419c55:	sbb    DWORD PTR [edx+0x6e],0xffffff89
  419c59:	dec    ebp
	...
  419c6a:	add    BYTE PTR [eax],al
  419c6c:	jbe    0x419c4f
  419c6e:	mov    dh,0xa4
  419c70:	xchg   esi,eax
  419c71:	bound  eax,QWORD PTR [eax]
  419c73:	add    BYTE PTR [edx],al
  419c75:	cmp    DWORD PTR [ecx+0x42e97655],ecx
  419c7b:	fcom   DWORD PTR [ebp-0x69ff6020]
  419c81:	bound  eax,QWORD PTR [edi+0x4ae96a45]
  419c87:	loopne 0x419ca6
  419c89:	push   edi
  419c8a:	aam    0x55
  419c8c:	xlat   BYTE PTR ds:[ebx]
  419c8d:	bound  ebp,QWORD PTR [ecx]
  419c8f:	push   ecx
  419c90:	mov    ch,bl
  419c92:	adc    al,BYTE PTR [eax+eiz*8]
  419c95:	mov    ds:0x949aa100,eax
  419c9a:	aas    
  419c9b:	add    dh,al
  419c9d:	jmp    0xa40d70ac
  419ca2:	add    BYTE PTR [ecx+0xd],dl
  419ca5:	xchg   edi,eax
  419ca6:	in     al,dx
  419ca7:	push   edx
  419ca8:	(bad)  
  419ca9:	jl     0x419ca5
  419cab:	dec    DWORD PTR [ecx]
  419cad:	loope  0x419c72
  419caf:	or     al,0xd
  419cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb2:	loopne 0x419c3f
  419cb4:	mov    edx,DWORD PTR [esi]
  419cb6:	push   ebx
  419cb7:	inc    ecx
  419cb8:	xchg   esi,eax
  419cb9:	popa   
  419cba:	dec    eax
  419cbb:	sub    BYTE PTR [edi],bl
  419cbd:	outs   dx,DWORD PTR ds:[esi]
  419cbe:	adc    al,0x56
  419cc0:	push   edi
  419cc1:	bound  eax,QWORD PTR [ecx+0x3f96de3d]
  419cc7:	add    BYTE PTR [esi-0x5c74d489],dl
  419ccd:	push   ss
  419cce:	push   ebx
  419ccf:	inc    ecx
	...
  419ce0:	add    BYTE PTR [eax],al
  419ce2:	xchg   esi,eax
  419ce3:	nop
  419ce4:	lahf   
  419ce5:	adc    al,0x60
  419ce7:	mov    ds:0x6f1d5000,eax
  419cec:	lock push ebp
  419cee:	push   edi
  419cef:	bound  ecx,QWORD PTR [edi-0x18]
  419cf2:	push   ds
  419cf3:	(bad)  
  419cf4:	cld    
  419cf5:	call   DWORD PTR ds:0xab8b0c26
  419cfb:	push   ss
  419cfc:	push   ebx
  419cfd:	inc    ecx
  419cfe:	xchg   esi,eax
  419cff:	nop
  419d00:	call   0xfd3e1c4e
  419d05:	adc    DWORD PTR [edx+0x67],0xffffffe9
  419d09:	popa   
  419d0a:	(bad)  
  419d0b:	add    DWORD PTR ss:[eax-0x6a],eax
  419d0f:	sar    ebx,0x55
  419d12:	xlat   BYTE PTR ds:[ebx]
  419d13:	bound  edx,QWORD PTR [eax-0x18]
  419d16:	ret    0xfcf9
  419d19:	call   DWORD PTR ds:0xd3890827
  419d1f:	push   ss
  419d20:	mov    DWORD PTR ds:0x3f966a,ecx
  419d26:	out    0xe7,eax
  419d28:	push   edx
  419d29:	loopne 0x419d22
  419d2b:	push   ss
  419d2c:	push   ebx
  419d2d:	inc    ecx
  419d2e:	xchg   esi,eax
  419d2f:	pop    edi
  419d30:	inc    edx
  419d31:	sub    dh,al
  419d33:	out    0xa,eax
  419d35:	lock ret 
  419d37:	mov    eax,ds:0x4bfe5100
  419d3c:	cld    
  419d3d:	dec    DWORD PTR [ecx]
  419d3f:	loopne 0x419d04
  419d41:	or     al,0xd
  419d43:	push   esi
  419d44:	lock push ebp
	...
  419d56:	add    BYTE PTR [eax],al
  419d58:	push   edi
  419d59:	bound  edi,QWORD PTR [edi-0x3e]
  419d5c:	inc    esi
  419d5d:	(bad)  
  419d5e:	(bad)  
  419d5f:	call   FWORD PTR [edi]
  419d61:	push   esi
  419d62:	sbb    al,0x56
  419d64:	push   edi
  419d65:	bound  ecx,QWORD PTR [ebx+0x6a92de45]
  419d6b:	inc    eax
  419d6c:	cmp    al,0x64
  419d6e:	mov    DWORD PTR ds:0x3f94aa,ecx
  419d74:	addr16 sti 
  419d76:	push   edx
  419d77:	aam    0xae
  419d79:	(bad)  
  419d7a:	clc    
  419d7b:	push   DWORD PTR [ecx-0x69000146]
  419d81:	bound  ecx,QWORD PTR [ecx+0x42043e5]
  419d87:	add    dl,cl
  419d89:	cs int3 
  419d8b:	int3   
  419d8c:	bound  ebp,QWORD PTR [esi]
  419d8e:	int3   
  419d8f:	int3   
  419d90:	jecxz  0x419d79
  419d92:	jmp    0x419d1f
  419d94:	fld    TBYTE PTR [edx-0x77]
  419d97:	inc    eax
  419d98:	jp     0x419d37
  419d9a:	ror    esp,0x62
  419d9d:	cs int3 
  419d9f:	int3   
  419da0:	ret    
  419da1:	out    0xeb,eax
  419da3:	push   ebx
  419da4:	enter  0x8993,0x3d
  419da8:	jbe    0x419d3f
  419daa:	aas    
  419dab:	add    BYTE PTR ds:0xd755ec5d,bl
  419db1:	bound  ecx,QWORD PTR [ecx+0x3f955e35]
  419db7:	add    cl,bl
  419db9:	pushf  
  419dba:	pop    ecx
  419dbb:	pop    ebp
	...
  419dcc:	add    BYTE PTR [eax],al
  419dce:	push   ebp
  419dcf:	cs int3 
  419dd1:	int3   
  419dd2:	ret    
  419dd3:	out    0xeb,eax
  419dd5:	push   ecx
  419dd6:	scas   al,BYTE PTR es:[edi]
  419dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd8:	add    DWORD PTR [eax-0x6a],eax
  419ddb:	sar    ebx,0x55
  419dde:	push   edi
  419ddf:	bound  edx,QWORD PTR [eax-0x18]
  419de2:	cmp    bh,dl
  419de4:	cld    
  419de5:	call   DWORD PTR ds:0x53890826
  419deb:	dec    BYTE PTR [eax+0x6a919e4d]
  419df1:	add    BYTE PTR ds:0x57561855,bl
  419df7:	bound  edx,QWORD PTR [edx-0x1]
  419dfa:	inc    ebx
  419dfb:	dec    BYTE PTR [eax-0x33e08c1b]
  419e01:	int3   
  419e02:	arpl   di,sp
  419e04:	jmp    0x419d89
  419e06:	mov    dl,0x45
  419e08:	lds    eax,FWORD PTR [ebp-0x42]
  419e0b:	popa   
  419e0c:	add    BYTE PTR [eax],al
  419e0e:	xchg   esi,eax
  419e0f:	and    eax,DWORD PTR [ebx-0x24]
  419e12:	bound  eax,QWORD PTR cs:[eax]
  419e15:	add    cl,bl
  419e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e18:	hlt    
  419e19:	add    DWORD PTR [esi-0x2438ff9e],edx
  419e1f:	idiv   bh
  419e21:	call   DWORD PTR [esi+0x7a45c562]
  419e27:	arpl   WORD PTR [eax],ax
  419e29:	add    BYTE PTR [esi+0x1f084aed],dl
  419e2f:	push   0x55f0
	...
  419e44:	xlat   BYTE PTR ds:[ebx]
  419e45:	(bad)  
  419e46:	call   0xfd3c07f4
  419e4b:	mov    eax,ds:0x3f9066
  419e50:	jnp    0x419e4b
  419e52:	cld    
  419e53:	add    BYTE PTR [esi-0x6438f392],dl
  419e59:	cli    
  419e5a:	push   edx
  419e5b:	inc    ecx
  419e5c:	xchg   esi,eax
  419e5d:	bound  eax,QWORD PTR [eax]
  419e5f:	add    BYTE PTR [esi-0x6c38f5f3],dl
  419e65:	cli    
  419e66:	push   edx
  419e67:	inc    ecx
  419e68:	xchg   esi,eax
  419e69:	arpl   WORD PTR [eax],ax
  419e6b:	add    BYTE PTR [esi+0x6bf03ae5],dl
  419e71:	mov    ds:0x6c830000,eax
  419e76:	lds    eax,FWORD PTR ds:0x3f8ffe
  419e7c:	xchg   esi,eax
  419e7d:	bound  eax,QWORD PTR [eax]
  419e7f:	add    BYTE PTR ds:0x5755f838,dl
  419e85:	bound  eax,QWORD PTR [eax]
  419e87:	jne    0x419e1c
  419e89:	mov    WORD PTR [eax],es
  419e8b:	inc    DWORD PTR [ebx-0x69beacde]
  419e91:	vandnps ymm2,ymm2,YMMWORD PTR [edi+0x62]
  419e96:	mov    DWORD PTR ds:0x3f8fc6,ecx
  419e9c:	push   gs
  419e9e:	call   0x53342a2e
  419ea3:	inc    ecx
  419ea4:	xchg   esi,eax
  419ea5:	in     eax,dx
  419ea6:	inc    edx
  419ea7:	call   0x419eac
	...
  419eb8:	add    BYTE PTR [eax],al
  419eba:	xchg   ebp,eax
  419ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ebc:	cmp    al,0x89
  419ebe:	push   ebx
  419ebf:	or     cl,BYTE PTR [ecx+0xaeb7e4d]
  419ec5:	fsubr  st(3),st
  419ec7:	mov    ds:0x65e66800,eax
  419ecc:	inc    eax
  419ecd:	add    BYTE PTR [ecx+0x4f],bh
  419ed0:	rcl    BYTE PTR [ebp-0x29],0x62
  419ed4:	mov    eax,ds:0xa3c3fc
  419ed9:	(bad)  
  419eda:	fwait
  419edb:	push   si
  419edd:	inc    ecx
  419ede:	xchg   esi,eax
  419edf:	outs   dx,DWORD PTR ds:[esi]
  419ee0:	add    DWORD PTR [eax-0x6a],eax
  419ee3:	mov    ah,BYTE PTR [eax+0x3]
  419ee6:	(bad)  
  419ee7:	bound  ecx,QWORD PTR [ecx+0x3f8f4215]
  419eed:	add    ah,ah
  419eef:	or     al,dl
  419ef1:	div    DWORD PTR [ecx]
  419ef3:	stc    
  419ef4:	add    ah,0x9e
  419ef7:	lds    eax,FWORD PTR [edi]
  419ef9:	push   esi
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	(bad)  
  419efc:	std    
  419efd:	adc    eax,0x3f908e
  419f02:	xor    eax,0x9641565a
  419f07:	ret    
  419f08:	or     edx,DWORD PTR [esi+0x57]
  419f0b:	bound  edx,QWORD PTR [eax-0x18]
  419f0e:	inc    edx
  419f0f:	clc    
  419f10:	cld    
  419f11:	call   DWORD PTR ds:0x5389041e
  419f17:	repnz mov BYTE PTR [ebp-0x1a],cl
  419f1b:	xchg   edx,eax
  419f1c:	call   0x419ff6
	...
  419f2d:	add    BYTE PTR [eax],al
  419f2f:	add    al,bl
  419f31:	clc    
  419f32:	cld    
  419f33:	sbb    edx,0x5d
  419f36:	mov    eax,ds:0xa363f4
  419f3b:	mov    ebp,DWORD PTR [ebx-0xe]
  419f3e:	push   ecx
  419f3f:	push   0xffffff96
  419f41:	ret    
  419f42:	repz push ebp
  419f44:	push   edi
  419f45:	bound  edx,QWORD PTR [eax-0x18]
  419f48:	or     dh,cl
  419f4a:	cld    
  419f4b:	call   DWORD PTR ds:0x4b8b0c1e
  419f51:	xacquire xchg BYTE PTR [ebp+0x76],cl
  419f55:	in     al,dx
  419f56:	push   edx
  419f57:	cld    
  419f58:	int    0x8d
  419f5a:	lock jae 0x419f39
  419f5d:	jmp    0x419fa1
  419f5f:	loopne 0x419f47
  419f61:	jmp    0x419fad
  419f63:	fadd   st(7),st
  419f65:	or     ch,BYTE PTR [esi-0x7f079605]
  419f6b:	les    ecx,FWORD PTR [esi-0x28aa003d]
  419f71:	bound  ecx,QWORD PTR [ecx+0x3f909615]
  419f77:	add    ah,ah
  419f79:	ror    DWORD PTR [ebx],0x56
  419f7c:	xlat   BYTE PTR ds:[ebx]
  419f7d:	bound  eax,QWORD PTR [ecx]
  419f7f:	inc    ebp
  419f80:	xor    dl,BYTE PTR [ebx-0x71d5f277]
  419f86:	aas    
  419f87:	add    BYTE PTR [ebp+0x2e51fca5],dl
  419f8d:	adc    bh,dh
  419f8f:	call   FWORD PTR [ecx]
  419f91:	in     al,0xc3
  419f93:	or     al,0x0
	...
  419fa5:	add    BYTE PTR ds:0x6303f48e,bl
  419fab:	push   ss
  419fac:	add    DWORD PTR [ebp-0x6],edx
  419faf:	jmp    0x9e4f8406
  419fb4:	cld    
  419fb5:	add    ebx,DWORD PTR [ebx+0x16]
  419fb8:	xchg   DWORD PTR [ebp-0x16],eax
  419fbb:	jmp    0x41a007
  419fbd:	loopne 0x419f6c
  419fbf:	add    BYTE PTR gs:[esi+0x57],dl
  419fc3:	bound  eax,QWORD PTR [edi-0x61f449b3]
  419fc9:	(bad)  
  419fca:	push   ebx
  419fcb:	cli    
  419fcc:	(bad)  
  419fcd:	call   DWORD PTR [esi+0xd09e962]
  419fd3:	mov    ?,eax
  419fd5:	adc    esp,0x5e
  419fd8:	xchg   DWORD PTR [ebp-0x52],edx
  419fdb:	jmp    0x41a01f
  419fdd:	clc    
  419fde:	pop    ebp
  419fdf:	popf   
  419fe0:	lock jae 0x41a041
  419fe3:	jmp    0x419fef
  419fe5:	hlt    
  419fe6:	jmp    0x419f89
  419fe8:	add    BYTE PTR [ebx],al
  419fea:	(bad)  
  419fec:	mov    BYTE PTR [ecx],dl
  419fee:	xchg   ebp,eax
  419fef:	(bad)  
  419ff0:	clc    
  419ff1:	mov    eax,ds:0x3f8d82
  419ff6:	xchg   ebp,eax
  419ff7:	popf   
  419ff8:	clc    
  419ff9:	mov    DWORD PTR [esi+0x17f84aeb],eax
  419fff:	and    edi,esp
  41a001:	add    edx,DWORD PTR [esi+0x4a158962]
  41a007:	lea    edi,[edi]
	...
  41a019:	add    BYTE PTR [eax],al
  41a01b:	add    BYTE PTR [ebp-0x73cc0773],dl
  41a021:	shl    ebx,0x55
  41a024:	xlat   BYTE PTR ds:[ebx]
  41a025:	bound  eax,QWORD PTR [ecx]
  41a027:	inc    ebp
  41a028:	cs jmp 0xe9238b35
  41a02e:	sub    ah,ah
  41a030:	retf   
  41a031:	mov    eax,ds:0x25b8900
  41a036:	push   ebx
  41a037:	inc    ecx
  41a038:	xchg   esi,eax
  41a039:	xor    eax,edi
  41a03b:	mov    ebx,eax
  41a03d:	sbb    dl,BYTE PTR [ebx+0x41]
  41a040:	xchg   esi,eax
  41a041:	xor    eax,edi
  41a043:	mov    DWORD PTR [ebx-0x69beacfa],ebx
  41a049:	or     cl,BYTE PTR [esi-0x9]
  41a04c:	jmp    0x714f2b47
  41a051:	lea    edi,[edi]
  41a053:	add    BYTE PTR [edi],cl
  41a055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a056:	clc    
  41a057:	mov    ecx,0x406496
  41a05c:	pop    ss
  41a05d:	or     DWORD PTR [eax],eax
  41a05f:	add    dl,BYTE PTR [esi-0x41aa769e]
  41a065:	dec    edx
  41a066:	iret   
  41a067:	mov    DWORD PTR [ebx-0x69beacf6],ecx
  41a06d:	shl    edi,0x55
  41a070:	push   edi
  41a071:	bound  edx,QWORD PTR [eax-0x18]
  41a074:	xchg   edx,eax
  41a075:	cld    
  41a076:	cld    
  41a077:	call   DWORD PTR ds:0x9b8b041f
  41a07d:	out    dx,al
  41a07e:	push   edx
  41a07f:	inc    ecx
	...
  41a090:	add    BYTE PTR [eax],al
  41a092:	xchg   esi,eax
  41a093:	xchg   ebx,eax
  41a094:	call   0xfd381d6e
  41a099:	test   DWORD PTR [esi+0x70],edx
  41a09c:	add    al,0x33
  41a09e:	push   esi
  41a09f:	or     ch,BYTE PTR [edx]
  41a0a1:	mov    edi,DWORD PTR [ebx-0x69bead02]
  41a0a7:	loope  0x41a06c
  41a0a9:	add    al,0x15
  41a0ab:	cmp    al,bh
  41a0ad:	push   ebp
  41a0ae:	xlat   BYTE PTR ds:[ebx]
  41a0af:	bound  eax,QWORD PTR [eax]
  41a0b1:	je     0x41a042
  41a0b3:	ret    
  41a0b4:	rcl    DWORD PTR [ebp-0x29],cl
  41a0b7:	bound  eax,QWORD PTR [edi-0x17a185bc]
  41a0bd:	pop    ebp
  41a0be:	sub    esi,esi
  41a0c0:	cld    
  41a0c1:	mov    ecx,DWORD PTR [ebx-0x69bea9b2]
  41a0c7:	nop
  41a0c8:	shl    DWORD PTR [ebx],0xd6
  41a0cb:	jmp    0x2716feb2
  41a0d0:	int3   
  41a0d1:	int3   
  41a0d2:	xchg   esi,eax
  41a0d3:	bound  eax,QWORD PTR [eax]
  41a0d5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a0db:	bound  eax,QWORD PTR [eax]
  41a0dd:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a0e3:	bound  eax,QWORD PTR [eax]
  41a0e5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a0eb:	bound  eax,QWORD PTR [eax]
  41a0ed:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a0f3:	bound  eax,QWORD PTR [eax]
	...
  41a105:	add    BYTE PTR [eax],al
  41a107:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a10d:	bound  eax,QWORD PTR [eax]
  41a10f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a115:	bound  eax,QWORD PTR [eax]
  41a117:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a11d:	bound  eax,QWORD PTR [eax]
  41a11f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a125:	bound  eax,QWORD PTR [eax]
  41a127:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a12d:	bound  eax,QWORD PTR [eax]
  41a12f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a135:	bound  eax,QWORD PTR [eax]
  41a137:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a13d:	bound  eax,QWORD PTR [eax]
  41a13f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a145:	bound  eax,QWORD PTR [eax]
  41a147:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a14d:	bound  eax,QWORD PTR [eax]
  41a14f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a155:	bound  eax,QWORD PTR [eax]
  41a157:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a15d:	bound  eax,QWORD PTR [eax]
  41a15f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a165:	bound  eax,QWORD PTR [eax]
  41a167:	add    BYTE PTR [esi+0x62],dl
	...
  41a17d:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a183:	bound  eax,QWORD PTR [eax]
  41a185:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a18b:	bound  eax,QWORD PTR [eax]
  41a18d:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a193:	bound  eax,QWORD PTR [eax]
  41a195:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a19b:	bound  eax,QWORD PTR [eax]
  41a19d:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1a3:	bound  eax,QWORD PTR [eax]
  41a1a5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1ab:	bound  eax,QWORD PTR [eax]
  41a1ad:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1b3:	bound  eax,QWORD PTR [eax]
  41a1b5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1bb:	bound  eax,QWORD PTR [eax]
  41a1bd:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1c3:	bound  eax,QWORD PTR [eax]
  41a1c5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1cb:	bound  eax,QWORD PTR [eax]
  41a1cd:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1d3:	bound  eax,QWORD PTR [eax]
  41a1d5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1db:	bound  eax,QWORD PTR [eax]
  41a1dd:	add    BYTE PTR [esi+0x62],dl
	...
  41a1f3:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a1f9:	bound  eax,QWORD PTR [eax]
  41a1fb:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a201:	bound  eax,QWORD PTR [eax]
  41a203:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a209:	bound  eax,QWORD PTR [eax]
  41a20b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a211:	bound  eax,QWORD PTR [eax]
  41a213:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a219:	bound  eax,QWORD PTR [eax]
  41a21b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a221:	bound  eax,QWORD PTR [eax]
  41a223:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a229:	bound  eax,QWORD PTR [eax]
  41a22b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a231:	bound  eax,QWORD PTR [eax]
  41a233:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a239:	bound  eax,QWORD PTR [eax]
  41a23b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a241:	bound  eax,QWORD PTR [eax]
  41a243:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a249:	bound  eax,QWORD PTR [eax]
  41a24b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a251:	bound  eax,QWORD PTR [eax]
  41a253:	add    BYTE PTR [eax],al
  41a255:	add    al,BYTE PTR [eax]
  41a257:	add    BYTE PTR [esi+0x7e000062],dl
  41a25d:	bound  eax,QWORD PTR [eax]
  41a25f:	add    BYTE PTR [edx],cl
  41a261:	push   eax
  41a262:	nop
  41a263:	xor    ch,BYTE PTR [edx]
  41a265:	push   eax
  41a266:	cwde   
  41a267:	xor    ch,BYTE PTR [edx]
  41a269:	push   eax
  41a26a:	mov    al,ds:0xa84ffa32
  41a26f:	xor    dl,BYTE PTR [esi-0x39fffede]
  41a275:	bound  eax,QWORD PTR [eax]
  41a277:	add    BYTE PTR ds:0xc63b4b58,dh
  41a27d:	pop    ecx
  41a27e:	pop    edx
  41a27f:	cmp    edi,DWORD PTR [ecx-0x7fc497a7]
  41a285:	pop    ecx
  41a286:	xchg   ebx,eax
  41a287:	cmp    ebp,DWORD PTR [eax]
  41a289:	pop    ecx
  41a28a:	test   al,0x3b
  41a28c:	ficomp DWORD PTR [eax-0x13]
  41a28f:	cmp    ecx,DWORD PTR [ebp-0x70c3eea2]
  41a295:	pop    esi
  41a296:	popf   
  41a297:	cmp    al,0x32
  41a299:	pop    edi
  41a29a:	xchg   DWORD PTR [esi],edi
  41a29c:	adc    ebx,DWORD PTR [ebp+edx*4+0x3e]
  41a2a0:	rcr    BYTE PTR [ebx-0x33],cl
  41a2a3:	ds mov ecx,0x153f7e5b
  41a2a9:	pop    ebp
  41a2aa:	fwait
  41a2ab:	aas    
  41a2ac:	out    dx,eax
  41a2ad:	pop    esp
  41a2ae:	scas   eax,DWORD PTR es:[edi]
  41a2af:	aas    
  41a2b0:	stc    
  41a2b1:	pop    esp
  41a2b2:	int3   
  41a2b3:	aas    
  41a2b4:	les    ebx,FWORD PTR [esi+eiz*8+0x3f]
  41a2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b9:	pop    esp
  41a2ba:	stc    
  41a2bb:	aas    
	...
  41a2cc:	add    BYTE PTR [eax],al
  41a2ce:	mov    eax,ds:0x9600005c
  41a2d3:	xor    al,BYTE PTR [ecx]
  41a2d5:	add    BYTE PTR [edx+0x63],cl
  41a2d8:	add    BYTE PTR [eax],al
  41a2da:	xchg   ebx,eax
  41a2db:	push   edx
  41a2dc:	sbb    BYTE PTR [eax],dh
  41a2de:	pop    ss
  41a2df:	push   ebx
  41a2e0:	xchg   DWORD PTR [eax],esi
  41a2e2:	rcl    BYTE PTR [ecx+0x4b],1
  41a2e5:	xor    ebx,edx
  41a2e7:	push   ecx
  41a2e8:	xor    si,sp
  41a2eb:	push   ecx
  41a2ec:	lea    esi,[ecx]
  41a2ee:	cmp    dl,BYTE PTR [edx-0x56]
  41a2f1:	xor    DWORD PTR [edx+edx*2-0x1f],edx
  41a2f5:	xor    DWORD PTR [eax-0x55cde8b0],esp
  41a2fb:	push   eax
  41a2fc:	and    esi,DWORD PTR [edx]
  41a2fe:	jg     0x41a350
  41a300:	inc    edx
  41a301:	xor    cl,dh
  41a303:	push   eax
  41a304:	push   ecx
  41a305:	xor    cl,cl
  41a307:	push   eax
  41a308:	pop    esi
  41a309:	xor    bh,BYTE PTR [ebx+0x14327d50]
  41a30f:	push   ecx
  41a310:	xchg   esp,eax
  41a311:	xor    bh,bl
  41a313:	push   eax
  41a314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a315:	xor    cl,BYTE PTR [eax+0x51]
  41a318:	ret    0xe632
  41a31b:	push   eax
  41a31c:	or     BYTE PTR [ebx],dh
  41a31e:	nop
  41a31f:	dec    edi
  41a320:	adc    al,0x33
  41a322:	mov    bl,0x4f
  41a324:	sub    dh,BYTE PTR [ebx]
  41a326:	push   esp
  41a327:	dec    edi
  41a328:	jle    0x41a35d
  41a32a:	push   ds
  41a32b:	push   eax
  41a32c:	xchg   ebp,eax
  41a32d:	xor    esi,DWORD PTR [edi]
  41a32f:	push   eax
  41a330:	stos   DWORD PTR es:[edi],eax
  41a331:	xor    eax,DWORD PTR [eax]
	...
  41a343:	add    BYTE PTR [edx],ah
  41a345:	push   eax
  41a346:	mov    esi,0xce4fdf33
  41a34b:	xor    esp,edx
  41a34d:	dec    edi
  41a34e:	fnsave [ebx]
  41a350:	mov    cl,0x4f
  41a352:	hlt    
  41a353:	xor    edi,DWORD PTR [edi+ecx*2+0x569b33ff]
  41a35a:	or     DWORD PTR [eax+ebx*4],esi
  41a35d:	push   esi
  41a35e:	adc    al,0x34
  41a360:	je     0x41a3b8
  41a362:	sub    BYTE PTR [ebx+ebp*2],dh
  41a365:	push   esi
  41a366:	xor    dh,BYTE PTR [ecx+eiz*8]
  41a369:	push   esi
  41a36a:	pop    edx
  41a36b:	xor    al,0x10
  41a36d:	push   esi
  41a36e:	mov    WORD PTR [esp],?
  41a371:	push   esi
  41a372:	pushf  
  41a373:	xor    al,0x50
  41a375:	push   esi
  41a376:	jmp    0x41a3ac
  41a378:	outs   dx,BYTE PTR ds:[esi]
  41a379:	push   esi
  41a37a:	or     al,0x35
  41a37c:	adc    BYTE PTR [ebp+0x23],0x35
  41a380:	scas   eax,DWORD PTR es:[edi]
  41a381:	push   ebp
  41a382:	xor    DWORD PTR ds:0x3544559f,esi
  41a388:	loop   0x41a3df
  41a38a:	pop    ebp
  41a38b:	xor    eax,0x357155b4
  41a390:	sbb    edx,DWORD PTR [ebp-0x72]
  41a393:	xor    eax,0x35a55520
  41a398:	xchg   esi,eax
  41a399:	bound  eax,QWORD PTR [eax]
  41a39b:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3a1:	bound  eax,QWORD PTR [eax]
  41a3a3:	add    BYTE PTR [esi+0x62],dl
	...
  41a3b9:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3bf:	bound  eax,QWORD PTR [eax]
  41a3c1:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3c7:	bound  eax,QWORD PTR [eax]
  41a3c9:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3cf:	bound  eax,QWORD PTR [eax]
  41a3d1:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3d7:	bound  eax,QWORD PTR [eax]
  41a3d9:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3df:	bound  eax,QWORD PTR [eax]
  41a3e1:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3e7:	bound  eax,QWORD PTR [eax]
  41a3e9:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3ef:	bound  eax,QWORD PTR [eax]
  41a3f1:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3f7:	bound  eax,QWORD PTR [eax]
  41a3f9:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a3ff:	bound  eax,QWORD PTR [eax]
  41a401:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a407:	bound  eax,QWORD PTR [eax]
  41a409:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a40f:	bound  eax,QWORD PTR [eax]
  41a411:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a417:	bound  eax,QWORD PTR [eax]
  41a419:	add    BYTE PTR [esi+0x62],dl
	...
  41a42f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a435:	bound  eax,QWORD PTR [eax]
  41a437:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a43d:	bound  eax,QWORD PTR [eax]
  41a43f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a445:	bound  eax,QWORD PTR [eax]
  41a447:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a44d:	bound  eax,QWORD PTR [eax]
  41a44f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a455:	bound  eax,QWORD PTR [eax]
  41a457:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a45d:	bound  eax,QWORD PTR [eax]
  41a45f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a465:	bound  eax,QWORD PTR [eax]
  41a467:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a46d:	bound  eax,QWORD PTR [eax]
  41a46f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a475:	bound  eax,QWORD PTR [eax]
  41a477:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a47d:	bound  eax,QWORD PTR [eax]
  41a47f:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a485:	bound  eax,QWORD PTR [eax]
  41a487:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a48d:	bound  eax,QWORD PTR [eax]
  41a48f:	add    BYTE PTR [esi+0x62],dl
	...
  41a4a5:	add    BYTE PTR [esi-0x69ffff9e],dl
  41a4ab:	bound  eax,QWORD PTR [eax]
  41a4ad:	add    BYTE PTR [esi-0x43ffff9e],dl
  41a4b3:	retf   
  41a4b4:	inc    ecx
  41a4b5:	add    al,al
  41a4b7:	retf   
  41a4b8:	inc    ecx
  41a4b9:	add    ah,al
  41a4bb:	retf   
  41a4bc:	inc    ecx
  41a4bd:	add    al,cl
  41a4bf:	retf   
  41a4c0:	inc    ecx
  41a4c1:	add    ah,cl
  41a4c3:	retf   
  41a4c4:	inc    ecx
  41a4c5:	add    al,dl
  41a4c7:	retf   
  41a4c8:	inc    ecx
  41a4c9:	add    ah,dl
  41a4cb:	retf   
  41a4cc:	inc    ecx
  41a4cd:	add    al,bl
  41a4cf:	retf   
  41a4d0:	inc    ecx
  41a4d1:	add    ah,bl
  41a4d3:	retf   
  41a4d4:	inc    ecx
  41a4d5:	add    al,ah
  41a4d7:	retf   
  41a4d8:	inc    ecx
  41a4d9:	add    ah,ah
  41a4db:	retf   
  41a4dc:	inc    ecx
  41a4dd:	add    al,ch
  41a4df:	retf   
  41a4e0:	inc    ecx
  41a4e1:	add    ah,ch
  41a4e3:	retf   
  41a4e4:	inc    ecx
  41a4e5:	add    al,dh
  41a4e7:	retf   
  41a4e8:	inc    ecx
  41a4e9:	add    ah,dh
  41a4eb:	retf   
  41a4ec:	inc    ecx
  41a4ed:	add    al,bh
  41a4ef:	retf   
  41a4f0:	inc    ecx
  41a4f1:	add    ah,bh
  41a4f3:	retf   
  41a4f4:	inc    ecx
  41a4f5:	add    BYTE PTR [eax],al
  41a4f7:	int3   
  41a4f8:	inc    ecx
  41a4f9:	add    BYTE PTR [esp+ecx*8],al
  41a4fc:	inc    ecx
  41a4fd:	add    BYTE PTR [eax],cl
  41a4ff:	int3   
  41a500:	inc    ecx
  41a501:	add    BYTE PTR [esp+ecx*8],cl
  41a504:	inc    ecx
  41a505:	add    al,ch
  41a507:	retf   
  41a508:	inc    ecx
  41a509:	add    BYTE PTR [eax],dl
  41a50b:	int3   
  41a50c:	inc    ecx
  41a50d:	add    BYTE PTR [esp+ecx*8],dl
  41a510:	inc    ecx
  41a511:	add    ah,bl
  41a513:	retf   
  41a514:	inc    ecx
  41a515:	add    BYTE PTR [eax],bl
  41a517:	int3   
  41a518:	inc    ecx
  41a519:	add    ah,cl
  41a51b:	retf   
  41a51c:	inc    ecx
  41a51d:	add    BYTE PTR [esp+ecx*8],bl
  41a520:	inc    ecx
  41a521:	add    BYTE PTR [eax],ah
  41a523:	int3   
  41a524:	inc    ecx
  41a525:	add    BYTE PTR [esp+ecx*8],ah
  41a528:	inc    ecx
  41a529:	add    BYTE PTR [eax],ch
  41a52b:	int3   
  41a52c:	inc    ecx
  41a52d:	add    BYTE PTR [esp+ecx*8],ch
  41a530:	inc    ecx
  41a531:	add    BYTE PTR [eax],dh
  41a533:	int3   
  41a534:	inc    ecx
  41a535:	add    BYTE PTR [esp+ecx*8],dh
  41a538:	inc    ecx
  41a539:	add    BYTE PTR [eax],bh
  41a53b:	int3   
  41a53c:	inc    ecx
  41a53d:	add    BYTE PTR [esp+ecx*8],bh
  41a540:	inc    ecx
  41a541:	add    BYTE PTR [eax-0x34],al
  41a544:	inc    ecx
  41a545:	add    ah,ah
  41a547:	retf   
  41a548:	inc    ecx
  41a549:	add    ah,ch
  41a54b:	retf   
  41a54c:	inc    ecx
  41a54d:	add    BYTE PTR [esp+ecx*8],al
  41a550:	inc    ecx
  41a551:	add    BYTE PTR [esp+ecx*8+0x41],al
  41a555:	add    BYTE PTR [eax-0x34],cl
  41a558:	inc    ecx
  41a559:	add    BYTE PTR [esp+ecx*8+0x41],cl
  41a55d:	add    BYTE PTR [eax-0x34],dl
  41a560:	inc    ecx
  41a561:	add    BYTE PTR [esp+ecx*8+0x41],dl
  41a565:	add    BYTE PTR [eax-0x34],bl
  41a568:	inc    ecx
  41a569:	add    BYTE PTR [esp+ecx*8+0x41],bl
  41a56d:	add    BYTE PTR [eax-0x34],ah
  41a570:	inc    ecx
  41a571:	add    BYTE PTR [esp+ecx*8+0x41],ah
  41a575:	add    BYTE PTR [eax-0x34],ch
  41a578:	inc    ecx
  41a579:	add    BYTE PTR [esp+ecx*8+0x41],ch
  41a57d:	add    BYTE PTR [eax-0x34],dh
  41a580:	inc    ecx
  41a581:	add    BYTE PTR [esp+ecx*8+0x41],dh
  41a585:	add    BYTE PTR [eax-0x34],bh
  41a588:	inc    ecx
  41a589:	add    BYTE PTR [esp+ecx*8+0x41],bh
  41a58d:	add    BYTE PTR [eax+0x280041cc],al
  41a593:	int3   
  41a594:	inc    ecx
  41a595:	add    BYTE PTR [esp+ecx*8-0x3377ffbf],al
  41a59c:	inc    ecx
  41a59d:	add    BYTE PTR [esp+ecx*8-0x33bbffbf],cl
  41a5a4:	inc    ecx
  41a5a5:	add    BYTE PTR [eax-0x6bffbe34],dl
  41a5ab:	int3   
  41a5ac:	inc    ecx
  41a5ad:	add    BYTE PTR [eax+0x240041cc],bl
  41a5b3:	int3   
  41a5b4:	inc    ecx
  41a5b5:	add    BYTE PTR [esp+ecx*8-0x335fffbf],bl
  41a5bc:	inc    ecx
  41a5bd:	add    BYTE PTR [esp+ecx*8-0x3357ffbf],ah
  41a5c4:	inc    ecx
  41a5c5:	add    BYTE PTR [esp+ecx*8-0x334fffbf],ch
  41a5cc:	inc    ecx
  41a5cd:	add    BYTE PTR [esp+ecx*8-0x341bffbf],dh
  41a5d4:	inc    ecx
  41a5d5:	add    ah,al
  41a5d7:	retf   
  41a5d8:	inc    ecx
  41a5d9:	add    BYTE PTR [eax+0x80041cc],bh
  41a5df:	int3   
  41a5e0:	inc    ecx
  41a5e1:	add    al,bl
  41a5e3:	retf   
  41a5e4:	inc    ecx
  41a5e5:	add    BYTE PTR [esp+ecx*8],dh
  41a5e8:	inc    ecx
  41a5e9:	add    BYTE PTR [eax],al
  41a5eb:	int3   
  41a5ec:	inc    ecx
  41a5ed:	add    BYTE PTR [esp+ecx*8-0x333fffbf],bh
  41a5f4:	inc    ecx
  41a5f5:	add    ah,al
  41a5f7:	int3   
  41a5f8:	inc    ecx
  41a5f9:	add    al,cl
  41a5fb:	int3   
  41a5fc:	inc    ecx
  41a5fd:	add    BYTE PTR [esp+ecx*8+0x41],ah
  41a601:	add    ah,cl
  41a603:	int3   
  41a604:	inc    ecx
  41a605:	add    al,dl
  41a607:	int3   
  41a608:	inc    ecx
  41a609:	add    ah,dl
  41a60b:	int3   
  41a60c:	inc    ecx
  41a60d:	add    BYTE PTR [esp+ecx*8+0x41],ch
  41a611:	add    al,bl
  41a613:	int3   
  41a614:	inc    ecx
  41a615:	add    al,ch
  41a617:	retf   
  41a618:	inc    ecx
  41a619:	add    ah,bl
  41a61b:	int3   
  41a61c:	inc    ecx
  41a61d:	add    al,ah
  41a61f:	int3   
  41a620:	inc    ecx
  41a621:	add    ah,ah
  41a623:	int3   
  41a624:	inc    ecx
  41a625:	add    al,ch
  41a627:	int3   
  41a628:	inc    ecx
  41a629:	add    ah,ch
  41a62b:	int3   
  41a62c:	inc    ecx
  41a62d:	add    al,dh
  41a62f:	int3   
  41a630:	inc    ecx
  41a631:	add    ah,dh
  41a633:	int3   
  41a634:	inc    ecx
  41a635:	add    al,bh
  41a637:	int3   
  41a638:	inc    ecx
  41a639:	add    ah,bh
  41a63b:	int3   
  41a63c:	inc    ecx
  41a63d:	add    BYTE PTR [eax+0x41cc],bl
  41a643:	int    0x41
  41a645:	add    BYTE PTR [ecx*8-0x32f7ffbf],al
  41a64c:	inc    ecx
  41a64d:	add    BYTE PTR [esp+ecx*8+0x41],bh
  41a651:	add    al,bl
  41a653:	int3   
  41a654:	inc    ecx
  41a655:	add    BYTE PTR [ecx*8-0x32efffbf],cl
  41a65c:	inc    ecx
  41a65d:	add    BYTE PTR [ecx*8-0x32e7ffbf],dl
  41a664:	inc    ecx
  41a665:	add    ah,dl
  41a667:	retf   
  41a668:	inc    ecx
  41a669:	add    al,ch
  41a66b:	retf   
  41a66c:	inc    ecx
  41a66d:	add    BYTE PTR [ecx*8-0x339bffbf],bl
  41a674:	inc    ecx
  41a675:	add    al,bh
  41a677:	retf   
  41a678:	inc    ecx
  41a679:	add    BYTE PTR [esp+ecx*8],ch
  41a67c:	inc    ecx
  41a67d:	add    ah,bl
  41a67f:	int3   
  41a680:	inc    ecx
  41a681:	add    ah,al
  41a683:	int3   
  41a684:	inc    ecx
  41a685:	add    BYTE PTR [eax],ah
  41a687:	int    0x41
  41a689:	add    BYTE PTR [ecx*8-0x3333ffbf],ah
  41a690:	inc    ecx
  41a691:	add    BYTE PTR [eax],ch
  41a693:	int    0x41
  41a695:	add    BYTE PTR [ecx*8-0x32cfffbf],ch
  41a69c:	inc    ecx
  41a69d:	add    BYTE PTR [ecx*8-0x32dbffbf],dh
  41a6a4:	inc    ecx
  41a6a5:	add    al,bh
  41a6a7:	retf   
  41a6a8:	inc    ecx
  41a6a9:	add    BYTE PTR [eax],bh
  41a6ab:	int    0x41
  41a6ad:	add    BYTE PTR [ecx*8-0x32bfffbf],bh
  41a6b4:	inc    ecx
  41a6b5:	add    BYTE PTR [eax+0x440041cc],ch
  41a6bb:	int    0x41
  41a6bd:	add    BYTE PTR [ecx*8-0x338bffbf],bh
  41a6c4:	inc    ecx
  41a6c5:	add    BYTE PTR [esp+ecx*8-0x32b7ffbf],ah
  41a6cc:	inc    ecx
  41a6cd:	add    BYTE PTR [ebp+ecx*8+0x41],cl
  41a6d1:	add    BYTE PTR [eax-0x33],dl
  41a6d4:	inc    ecx
  41a6d5:	add    BYTE PTR [ebp+ecx*8+0x41],dl
  41a6d9:	add    BYTE PTR [eax-0x33],bl
  41a6dc:	inc    ecx
  41a6dd:	add    BYTE PTR [ebp+ecx*8+0x41],bl
  41a6e1:	add    BYTE PTR [eax-0x33],ah
  41a6e4:	inc    ecx
  41a6e5:	add    BYTE PTR [ebp+ecx*8+0x41],ah
  41a6e9:	add    ah,ch
  41a6eb:	int3   
  41a6ec:	inc    ecx
  41a6ed:	add    al,dh
  41a6ef:	retf   
  41a6f0:	inc    ecx
  41a6f1:	add    BYTE PTR [eax-0x33],ch
  41a6f4:	inc    ecx
  41a6f5:	add    BYTE PTR [ebp+ecx*8+0x41],ch
  41a6f9:	add    BYTE PTR [eax-0x33],dh
  41a6fc:	inc    ecx
  41a6fd:	add    BYTE PTR [ebp+ecx*8+0x41],dh
  41a701:	add    BYTE PTR [eax-0x33],bh
  41a704:	inc    ecx
  41a705:	add    BYTE PTR [ebp+ecx*8+0x41],bh
  41a709:	add    BYTE PTR [esp+ecx*8+0x41],ch
  41a70d:	add    BYTE PTR [eax-0x2fffbe34],bh
  41a713:	int3   
  41a714:	inc    ecx
  41a715:	add    BYTE PTR [eax-0x53ffbe34],dh
  41a71b:	int3   
  41a71c:	inc    ecx
  41a71d:	add    BYTE PTR [eax-0x7bffbe33],al
  41a723:	int    0x41
  41a725:	add    BYTE PTR [eax+0x180041cd],cl
  41a72b:	int3   
  41a72c:	inc    ecx
  41a72d:	add    BYTE PTR [eax-0x34],dh
  41a730:	inc    ecx
  41a731:	add    BYTE PTR [ebp+ecx*8-0x3337ffbf],cl
  41a738:	inc    ecx
  41a739:	add    BYTE PTR [eax-0x1bffbe33],dl
  41a73f:	retf   
  41a740:	inc    ecx
  41a741:	add    BYTE PTR [ebp+ecx*8-0x3267ffbf],dl
  41a748:	inc    ecx
  41a749:	add    BYTE PTR [ebp+ecx*8-0x325fffbf],bl
  41a750:	inc    ecx
  41a751:	add    BYTE PTR [ebp+ecx*8-0x334bffbf],ah
  41a758:	inc    ecx
  41a759:	add    BYTE PTR [eax-0x53ffbe33],ch
  41a75f:	int    0x41
  41a761:	add    BYTE PTR [eax-0x4bffbe33],dh
  41a767:	int    0x41
  41a769:	add    BYTE PTR [eax-0x57ffbe33],bh
  41a76f:	int    0x41
  41a771:	add    BYTE PTR [ebp+ecx*8-0x323fffbf],bh
  41a778:	inc    ecx
  41a779:	add    BYTE PTR [eax-0x3bffbe33],ch
  41a77f:	int    0x41
  41a781:	add    BYTE PTR [esp+ecx*8+0x41],dl
  41a785:	add    al,bh
  41a787:	int3   
  41a788:	inc    ecx
  41a789:	add    BYTE PTR [eax+0x40041cd],dl
  41a78f:	int    0x41
  41a791:	add    al,cl
  41a793:	int    0x41
  41a795:	add    ah,cl
  41a797:	int    0x41
  41a799:	add    al,dl
  41a79b:	int    0x41
  41a79d:	add    ah,dl
  41a79f:	int3   
  41a7a0:	inc    ecx
  41a7a1:	add    ah,dl
  41a7a3:	int    0x41
  41a7a5:	add    al,bl
  41a7a7:	int    0x41
  41a7a9:	add    BYTE PTR [eax],al
  41a7ab:	int3   
  41a7ac:	inc    ecx
  41a7ad:	add    BYTE PTR [esp+ecx*8-0x3223ffbf],ah
  41a7b4:	inc    ecx
  41a7b5:	add    al,ah
  41a7b7:	int    0x41
  41a7b9:	add    al,cl
  41a7bb:	retf   
  41a7bc:	inc    ecx
  41a7bd:	add    ah,ah
  41a7bf:	int    0x41
  41a7c1:	add    al,ch
  41a7c3:	int    0x41
  41a7c5:	add    ah,ch
  41a7c7:	int    0x41
  41a7c9:	add    al,dh
  41a7cb:	int    0x41
  41a7cd:	add    BYTE PTR [eax-0x34],dh
  41a7d0:	inc    ecx
  41a7d1:	add    ah,dh
  41a7d3:	int    0x41
  41a7d5:	add    al,bh
  41a7d7:	int    0x41
  41a7d9:	add    ah,bh
  41a7db:	int    0x41
  41a7dd:	add    BYTE PTR [eax],al
  41a7df:	into   
  41a7e0:	inc    ecx
  41a7e1:	add    BYTE PTR [esi+ecx*8],al
  41a7e4:	inc    ecx
  41a7e5:	add    al,al
  41a7e7:	int3   
  41a7e8:	inc    ecx
  41a7e9:	add    BYTE PTR [eax],cl
  41a7eb:	into   
  41a7ec:	inc    ecx
  41a7ed:	add    BYTE PTR [esi+ecx*8],cl
  41a7f0:	inc    ecx
  41a7f1:	add    BYTE PTR [eax+0x100041cd],bh
  41a7f7:	into   
  41a7f8:	inc    ecx
  41a7f9:	add    BYTE PTR [eax+0x740041cd],bl
  41a7ff:	int    0x41
  41a801:	add    al,dl
  41a803:	int    0x41
  41a805:	add    BYTE PTR [esi+ecx*8],dl
  41a808:	inc    ecx
  41a809:	add    BYTE PTR [eax],bl
  41a80b:	into   
  41a80c:	inc    ecx
  41a80d:	add    BYTE PTR [ebp+ecx*8-0x3303ffbf],cl
  41a814:	inc    ecx
  41a815:	add    BYTE PTR [eax-0x34],cl
  41a818:	inc    ecx
  41a819:	add    al,dl
  41a81b:	retf   
  41a81c:	inc    ecx
  41a81d:	add    BYTE PTR [eax-0x33],bl
  41a820:	inc    ecx
  41a821:	add    BYTE PTR [eax+0x1c0041cc],cl
  41a827:	into   
  41a828:	inc    ecx
  41a829:	add    BYTE PTR [ebp+ecx*8-0x33cbffbf],bl
  41a830:	inc    ecx
  41a831:	add    BYTE PTR [eax],cl
  41a833:	into   
  41a834:	inc    ecx
  41a835:	add    BYTE PTR [eax],ah
  41a837:	into   
  41a838:	inc    ecx
  41a839:	add    BYTE PTR [esp+ecx*8-0x334fffbf],dh
  41a840:	inc    ecx
  41a841:	add    BYTE PTR [esp+ecx*8+0x41],dl
  41a845:	add    BYTE PTR [esi+ecx*8],ah
  41a848:	inc    ecx
  41a849:	add    BYTE PTR [eax],ch
  41a84b:	into   
  41a84c:	inc    ecx
  41a84d:	add    al,dh
  41a84f:	retf   
  41a850:	inc    ecx
  41a851:	add    al,cl
  41a853:	int    0x41
  41a855:	add    BYTE PTR [esi+ecx*8],ch
  41a858:	inc    ecx
  41a859:	add    BYTE PTR [eax],dh
  41a85b:	into   
  41a85c:	inc    ecx
  41a85d:	add    BYTE PTR [esp+ecx*8-0x31cbffbf],ch
  41a864:	inc    ecx
  41a865:	add    BYTE PTR [eax],bh
  41a867:	into   
  41a868:	inc    ecx
  41a869:	add    ah,dl
  41a86b:	int3   
  41a86c:	inc    ecx
  41a86d:	add    BYTE PTR [esi+ecx*8],bh
  41a870:	inc    ecx
  41a871:	add    al,dl
  41a873:	mov    DWORD PTR [ecx+0x0],0x41c7d4
  41a87a:	fadd   st,st(7)
  41a87c:	inc    ecx
  41a87d:	add    ah,bl
  41a87f:	mov    DWORD PTR [ecx+0x0],0x41c7e0
  41a886:	in     al,0xc7
  41a888:	inc    ecx
  41a889:	add    al,ch
  41a88b:	mov    DWORD PTR [ecx+0x0],0x41c7ec
  41a892:	lock mov DWORD PTR [ecx+0x0],0x41c7f4
  41a89a:	clc    
  41a89b:	mov    DWORD PTR [ecx+0x0],0x41c7fc
  41a8a2:	add    al,cl
  41a8a4:	inc    ecx
  41a8a5:	add    BYTE PTR [eax+ecx*8],al
  41a8a8:	inc    ecx
  41a8a9:	add    BYTE PTR [eax],cl
  41a8ab:	enter  0x41,0xc
  41a8af:	enter  0x41,0x10
  41a8b3:	enter  0x41,0x14
  41a8b7:	enter  0x41,0x18
  41a8bb:	enter  0x41,0x1c
  41a8bf:	enter  0x41,0x20
  41a8c3:	enter  0x41,0x24
  41a8c7:	enter  0x41,0x28
  41a8cb:	enter  0x41,0x2c
  41a8cf:	enter  0x41,0x30
  41a8d3:	enter  0x41,0x34
  41a8d7:	enter  0x41,0x38
  41a8db:	enter  0x41,0x3c
  41a8df:	enter  0x41,0x40
  41a8e3:	enter  0x41,0x44
  41a8e7:	enter  0x41,0x48
  41a8eb:	enter  0x41,0x4c
  41a8ef:	enter  0x41,0x50
  41a8f3:	enter  0x41,0x54
  41a8f7:	enter  0x41,0x58
  41a8fb:	enter  0x41,0x5c
  41a8ff:	enter  0x41,0x60
  41a903:	enter  0x41,0x64
  41a907:	enter  0x41,0x68
  41a90b:	enter  0x41,0x6c
  41a90f:	enter  0x41,0x70
  41a913:	enter  0x41,0x74
  41a917:	enter  0x41,0x78
  41a91b:	enter  0x41,0x7c
  41a91f:	enter  0x41,0x80
  41a923:	enter  0x41,0x84
  41a927:	enter  0x41,0x88
  41a92b:	enter  0x41,0x64
  41a92f:	enter  0x41,0x8c
  41a933:	enter  0x41,0x90
  41a937:	enter  0x41,0x94
  41a93b:	enter  0x41,0x98
  41a93f:	enter  0x41,0x9c
  41a943:	enter  0x41,0x78
  41a947:	enter  0x41,0xa0
  41a94b:	enter  0x41,0xa4
  41a94f:	enter  0x41,0xa8
  41a953:	enter  0x41,0xac
  41a957:	enter  0x41,0xb0
  41a95b:	enter  0x41,0xb4
  41a95f:	enter  0x41,0xb8
  41a963:	enter  0x41,0xbc
  41a967:	enter  0x41,0xc0
  41a96b:	enter  0x41,0xc4
  41a96f:	enter  0x41,0xc8
  41a973:	enter  0x41,0xcc
  41a977:	enter  0x41,0xd0
  41a97b:	enter  0x41,0xd4
  41a97f:	enter  0x41,0xd8
  41a983:	enter  0x41,0xdc
  41a987:	enter  0x41,0xe0
  41a98b:	enter  0x41,0xe4
  41a98f:	enter  0x41,0xe8
  41a993:	enter  0x41,0xec
  41a997:	enter  0x41,0xf0
  41a99b:	enter  0x41,0xf4
  41a99f:	enter  0x41,0xf8
  41a9a3:	enter  0x41,0xfc
  41a9a7:	enter  0x41,0x0
  41a9ab:	leave  
  41a9ac:	inc    ecx
  41a9ad:	add    al,bl
  41a9af:	enter  0x41,0x4
  41a9b3:	leave  
  41a9b4:	inc    ecx
  41a9b5:	add    ah,ch
  41a9b7:	enter  0x41,0x8
  41a9bb:	leave  
  41a9bc:	inc    ecx
  41a9bd:	add    BYTE PTR [eax+0xc0041c8],ah
  41a9c3:	leave  
  41a9c4:	inc    ecx
  41a9c5:	add    BYTE PTR [eax],dl
  41a9c7:	leave  
  41a9c8:	inc    ecx
  41a9c9:	add    BYTE PTR [ecx+ecx*8],dl
  41a9cc:	inc    ecx
  41a9cd:	add    BYTE PTR [eax],bl
  41a9cf:	leave  
  41a9d0:	inc    ecx
  41a9d1:	add    BYTE PTR [ecx+ecx*8],bl
  41a9d4:	inc    ecx
  41a9d5:	add    BYTE PTR [eax],ah
  41a9d7:	leave  
  41a9d8:	inc    ecx
  41a9d9:	add    BYTE PTR [ecx+ecx*8],ah
  41a9dc:	inc    ecx
  41a9dd:	add    ah,bl
  41a9df:	enter  0x41,0x28
  41a9e3:	leave  
  41a9e4:	inc    ecx
  41a9e5:	add    BYTE PTR [ecx+ecx*8],ch
  41a9e8:	inc    ecx
  41a9e9:	add    BYTE PTR [eax],dh
  41a9eb:	leave  
  41a9ec:	inc    ecx
  41a9ed:	add    BYTE PTR [ecx+ecx*8],dh
  41a9f0:	inc    ecx
  41a9f1:	add    BYTE PTR [eax],bh
  41a9f3:	leave  
  41a9f4:	inc    ecx
  41a9f5:	add    BYTE PTR [ecx+ecx*8],bh
  41a9f8:	inc    ecx
  41a9f9:	add    BYTE PTR [eax-0x37],al
  41a9fc:	inc    ecx
  41a9fd:	add    BYTE PTR [ecx+ecx*8+0x41],al
  41aa01:	add    BYTE PTR [eax-0x37],cl
  41aa04:	inc    ecx
  41aa05:	add    BYTE PTR [ecx+ecx*8+0x41],cl
  41aa09:	add    ah,dl
  41aa0b:	enter  0x41,0x50
  41aa0f:	leave  
  41aa10:	inc    ecx
  41aa11:	add    BYTE PTR [ecx+ecx*8+0x41],dl
  41aa15:	add    BYTE PTR [eax-0x37],bl
  41aa18:	inc    ecx
  41aa19:	add    al,ah
  41aa1b:	mov    DWORD PTR [ecx+0x0],0x41c95c
  41aa22:	js     0x41a9ec
  41aa24:	inc    ecx
  41aa25:	add    BYTE PTR [eax+ecx*8+0x41],bh
  41aa29:	add    BYTE PTR [eax-0x37],ah
  41aa2c:	inc    ecx
  41aa2d:	add    BYTE PTR [ecx+ecx*8+0x41],ah
  41aa31:	add    BYTE PTR [eax],bl
  41aa33:	leave  
  41aa34:	inc    ecx
  41aa35:	add    BYTE PTR [eax-0x37],ch
  41aa38:	inc    ecx
  41aa39:	add    BYTE PTR [ecx+ecx*8+0x41],ch
  41aa3d:	add    BYTE PTR [eax-0x37],dh
  41aa40:	inc    ecx
  41aa41:	add    BYTE PTR [ecx+ecx*8+0x41],dh
  41aa45:	add    BYTE PTR [eax-0x37],bh
  41aa48:	inc    ecx
  41aa49:	add    BYTE PTR [ecx+ecx*8+0x41],dl
  41aa4d:	add    BYTE PTR [ecx+ecx*8+0x41],bh
  41aa51:	add    BYTE PTR [eax-0x7bffbe37],al
  41aa57:	leave  
  41aa58:	inc    ecx
  41aa59:	add    BYTE PTR [eax+0x3c0041c9],cl
  41aa5f:	leave  
  41aa60:	inc    ecx
  41aa61:	add    BYTE PTR [ecx+ecx*8-0x366fffbf],cl
  41aa68:	inc    ecx
  41aa69:	add    BYTE PTR [ecx+ecx*8-0x3667ffbf],dl
  41aa70:	inc    ecx
  41aa71:	add    BYTE PTR [ecx+ecx*8-0x365fffbf],bl
  41aa78:	inc    ecx
  41aa79:	add    BYTE PTR [ecx+ecx*8-0x3657ffbf],ah
  41aa80:	inc    ecx
  41aa81:	add    BYTE PTR [ecx+ecx*8-0x36c7ffbf],ch
  41aa88:	inc    ecx
  41aa89:	add    BYTE PTR [eax-0x4bffbe37],dh
  41aa8f:	leave  
  41aa90:	inc    ecx
  41aa91:	add    BYTE PTR [eax-0x43ffbe37],bh
  41aa97:	leave  
  41aa98:	inc    ecx
  41aa99:	add    al,al
  41aa9b:	leave  
  41aa9c:	inc    ecx
  41aa9d:	add    ah,al
  41aa9f:	leave  
  41aaa0:	inc    ecx
  41aaa1:	add    al,cl
  41aaa3:	leave  
  41aaa4:	inc    ecx
  41aaa5:	add    ah,cl
  41aaa7:	leave  
  41aaa8:	inc    ecx
  41aaa9:	add    al,dl
  41aaab:	leave  
  41aaac:	inc    ecx
  41aaad:	add    ah,dl
  41aaaf:	leave  
  41aab0:	inc    ecx
  41aab1:	add    BYTE PTR [eax-0x27ffbe38],ah
  41aab7:	leave  
  41aab8:	inc    ecx
  41aab9:	add    ah,bl
  41aabb:	leave  
  41aabc:	inc    ecx
  41aabd:	add    al,ah
  41aabf:	leave  
  41aac0:	inc    ecx
  41aac1:	add    ah,ah
  41aac3:	leave  
  41aac4:	inc    ecx
  41aac5:	add    al,ch
  41aac7:	leave  
  41aac8:	inc    ecx
  41aac9:	add    ah,ch
  41aacb:	leave  
  41aacc:	inc    ecx
  41aacd:	add    al,dh
  41aacf:	leave  
  41aad0:	inc    ecx
  41aad1:	add    ah,dh
  41aad3:	leave  
  41aad4:	inc    ecx
  41aad5:	add    al,ch
  41aad7:	enter  0x41,0xf8
  41aadb:	leave  
  41aadc:	inc    ecx
  41aadd:	add    ah,bh
  41aadf:	leave  
  41aae0:	inc    ecx
  41aae1:	add    BYTE PTR [eax],al
  41aae3:	retf   0x41
  41aae6:	add    al,0xca
  41aae8:	inc    ecx
  41aae9:	add    BYTE PTR [eax],cl
  41aaeb:	retf   0x41
  41aaee:	pop    esp
  41aaef:	leave  
  41aaf0:	inc    ecx
  41aaf1:	add    BYTE PTR [edx+ecx*8],cl
  41aaf4:	inc    ecx
  41aaf5:	add    BYTE PTR [eax],cl
  41aaf7:	leave  
  41aaf8:	inc    ecx
  41aaf9:	add    BYTE PTR [eax],dl
  41aafb:	retf   0x41
  41aafe:	jo     0x41aac8
  41ab00:	inc    ecx
  41ab01:	add    ah,dl
  41ab03:	leave  
  41ab04:	inc    ecx
  41ab05:	add    BYTE PTR [edx+ecx*8],dl
  41ab08:	inc    ecx
  41ab09:	add    BYTE PTR [eax],bl
  41ab0b:	retf   0x41
  41ab0e:	sbb    al,0xca
  41ab10:	inc    ecx
  41ab11:	add    al,bh
  41ab13:	mov    DWORD PTR [ecx+0x0],0x41ca20
  41ab1a:	and    al,0xca
  41ab1c:	inc    ecx
  41ab1d:	add    BYTE PTR [eax],ch
  41ab1f:	retf   0x41
  41ab22:	dec    esp
  41ab23:	enter  0x41,0x2c
  41ab27:	retf   0x41
  41ab2a:	xor    dl,cl
  41ab2c:	inc    ecx
  41ab2d:	add    BYTE PTR [edx+ecx*8],dh
  41ab30:	inc    ecx
  41ab31:	add    BYTE PTR [eax],bh
  41ab33:	retf   0x41
  41ab36:	cmp    al,0xca
  41ab38:	inc    ecx
  41ab39:	add    al,dh
  41ab3b:	mov    DWORD PTR [ecx+0x0],0x41ca40
  41ab42:	inc    esp
  41ab43:	retf   0x41
  41ab46:	dec    eax
  41ab47:	retf   0x41
  41ab4a:	dec    esp
  41ab4b:	retf   0x41
  41ab4e:	push   eax
  41ab4f:	retf   0x41
  41ab52:	push   esp
  41ab53:	retf   0x41
  41ab56:	pop    eax
  41ab57:	retf   0x41
  41ab5a:	pop    esp
  41ab5b:	retf   0x41
  41ab5e:	pusha  
  41ab5f:	retf   0x41
  41ab62:	fs retf 0x41
  41ab66:	push   0x6c0041ca
  41ab6b:	retf   0x41
  41ab6e:	jo     0x41ab3a
  41ab70:	inc    ecx
  41ab71:	add    BYTE PTR [edx+ecx*8+0x41],dh
  41ab75:	add    ah,ah
  41ab77:	mov    DWORD PTR [ecx+0x0],0x41ca78
  41ab7e:	jl     0x41ab4a
  41ab80:	inc    ecx
  41ab81:	add    al,ch
  41ab83:	enter  0x41,0x80
  41ab87:	retf   0x41
  41ab8a:	test   dl,cl
  41ab8c:	inc    ecx
  41ab8d:	add    BYTE PTR [edx+ecx*8],bh
  41ab90:	inc    ecx
  41ab91:	add    BYTE PTR [eax-0x73ffbe36],cl
  41ab97:	retf   0x41
  41ab9a:	nop
  41ab9b:	retf   0x41
  41ab9e:	call   0x9441ed6c
  41aba3:	retf   0x41
  41aba6:	cwde   
  41aba7:	retf   0x41
  41abaa:	pushf  
  41abab:	retf   0x41
  41abae:	mov    al,ds:0x8c0041ca
  41abb3:	retf   0x41
  41abb6:	pop    esp
  41abb7:	leave  
  41abb8:	inc    ecx
  41abb9:	add    BYTE PTR [edx+ecx*8-0x3557ffbf],ah
  41abc0:	inc    ecx
  41abc1:	add    BYTE PTR [edx+ecx*8-0x354fffbf],ch
  41abc8:	inc    ecx
  41abc9:	add    al,al
  41abcb:	enter  0x41,0x38
  41abcf:	enter  0x41,0xb4
  41abd3:	retf   0x41
  41abd6:	mov    eax,0xbc0041ca
  41abdb:	retf   0x41
  41abde:	fs enter 0x41,0xc0
  41abe3:	retf   0x41
  41abe6:	(bad)  
  41abe7:	retf   0x41
  41abea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abeb:	enter  0x41,0xc8
  41abef:	retf   0x41
  41abf2:	int3   
  41abf3:	retf   0x41
  41abf6:	ror    dl,1
  41abf8:	inc    ecx
  41abf9:	add    BYTE PTR [eax],bh
  41abfb:	enter  0x41,0xd4
  41abff:	retf   0x41
  41ac02:	cwde   
  41ac03:	enter  0x41,0xd8
  41ac07:	retf   0x41
  41ac0a:	fmul   st(2),st
  41ac0c:	inc    ecx
  41ac0d:	add    al,ah
  41ac0f:	retf   0x41
  41ac12:	in     al,0xca
  41ac14:	inc    ecx
  41ac15:	add    al,ch
  41ac17:	retf   0x41
  41ac1a:	in     al,dx
  41ac1b:	retf   0x41
  41ac1e:	aam    0xc7
  41ac20:	inc    ecx
  41ac21:	add    ah,al
  41ac23:	retf   0x41
  41ac26:	cmp    al,0xc9
  41ac28:	inc    ecx
  41ac29:	add    al,dh
  41ac2b:	retf   0x41
  41ac2e:	hlt    
  41ac2f:	retf   0x41
  41ac32:	clc    
  41ac33:	retf   0x41
  41ac36:	cld    
  41ac37:	retf   0x41
  41ac3a:	add    bl,cl
  41ac3c:	inc    ecx
  41ac3d:	add    BYTE PTR [ebx+ecx*8],al
  41ac40:	inc    ecx
  41ac41:	add    BYTE PTR [eax],cl
  41ac43:	retf   
  41ac44:	inc    ecx
  41ac45:	add    BYTE PTR [ebx+ecx*8],cl
  41ac48:	inc    ecx
  41ac49:	add    al,dl
  41ac4b:	mov    DWORD PTR [ecx+0x0],0x41cb10
  41ac52:	adc    al,0xcb
  41ac54:	inc    ecx
  41ac55:	add    BYTE PTR [eax],bl
  41ac57:	retf   
  41ac58:	inc    ecx
  41ac59:	add    BYTE PTR [edx+ecx*8-0x34e3ffbf],ah
  41ac60:	inc    ecx
  41ac61:	add    ah,ah
  41ac63:	mov    DWORD PTR [ecx+0x0],0x41cb20
  41ac6a:	mov    eax,cs
  41ac6c:	inc    ecx
  41ac6d:	add    BYTE PTR [ecx+ecx*8+0x41],bl
  41ac71:	add    BYTE PTR [ebx+ecx*8],ah
  41ac74:	inc    ecx
  41ac75:	add    BYTE PTR [eax],ch
  41ac77:	retf   
  41ac78:	inc    ecx
  41ac79:	add    BYTE PTR [ebx+ecx*8],ch
  41ac7c:	inc    ecx
  41ac7d:	add    BYTE PTR [eax],dh
  41ac7f:	retf   
  41ac80:	inc    ecx
  41ac81:	add    BYTE PTR [ebx+ecx*8],dh
  41ac84:	inc    ecx
  41ac85:	add    BYTE PTR [eax],bh
  41ac87:	retf   
  41ac88:	inc    ecx
  41ac89:	add    BYTE PTR [eax],cl
  41ac8b:	enter  0x41,0x3c
  41ac8f:	retf   
  41ac90:	inc    ecx
  41ac91:	add    BYTE PTR [eax-0x35],al
  41ac94:	inc    ecx
  41ac95:	add    BYTE PTR [ebx+ecx*8+0x41],al
  41ac99:	add    BYTE PTR [eax-0x35],cl
  41ac9c:	inc    ecx
  41ac9d:	add    BYTE PTR [ebx+ecx*8+0x41],cl
  41aca1:	add    BYTE PTR [eax-0x35],dl
  41aca4:	inc    ecx
  41aca5:	add    BYTE PTR [ebx+ecx*8+0x41],dl
  41aca9:	add    BYTE PTR [eax+ecx*8],ch
  41acac:	inc    ecx
  41acad:	add    BYTE PTR [eax-0x35],bl
  41acb0:	inc    ecx
  41acb1:	add    BYTE PTR [ebx+ecx*8+0x41],bl
  41acb5:	add    BYTE PTR [eax-0x35],ah
  41acb8:	inc    ecx
  41acb9:	add    BYTE PTR [ecx+ecx*8+0x41],dh
  41acbd:	add    BYTE PTR [ebx+ecx*8+0x41],ah
  41acc1:	add    BYTE PTR [eax-0x35],ch
  41acc4:	inc    ecx
  41acc5:	add    BYTE PTR [eax-0x38],al
  41acc8:	inc    ecx
  41acc9:	add    BYTE PTR [ebx+ecx*8+0x41],ch
  41accd:	add    BYTE PTR [eax],bl
  41accf:	leave  
  41acd0:	inc    ecx
  41acd1:	add    BYTE PTR [eax-0x35],dh
  41acd4:	inc    ecx
  41acd5:	add    BYTE PTR [ebx+ecx*8+0x41],dh
  41acd9:	add    BYTE PTR [eax-0x35],bh
  41acdc:	inc    ecx
  41acdd:	add    BYTE PTR [ebx+ecx*8+0x41],bh
  41ace1:	add    BYTE PTR [eax-0x7bffbe35],al
  41ace7:	retf   
  41ace8:	inc    ecx
  41ace9:	add    BYTE PTR [eax-0x38],bl
  41acec:	inc    ecx
  41aced:	add    BYTE PTR [eax-0x7bffbe35],cl
  41acf3:	retf   0x41
  41acf6:	mov    ebx,cs
  41acf8:	inc    ecx
  41acf9:	add    BYTE PTR [eax-0x27ffbe35],dl
  41acff:	mov    DWORD PTR [ecx+0x0],0x41cb94
  41ad06:	add    al,0xca
  41ad08:	inc    ecx
  41ad09:	add    BYTE PTR [eax-0x63ffbe35],bl
  41ad0f:	retf   
  41ad10:	inc    ecx
  41ad11:	add    BYTE PTR [ecx+ecx*8],bh
  41ad14:	inc    ecx
  41ad15:	add    BYTE PTR [eax-0x35],dh
  41ad18:	inc    ecx
  41ad19:	add    BYTE PTR [eax-0x5bffbe35],ah
  41ad1f:	retf   
  41ad20:	inc    ecx
  41ad21:	add    ah,cl
  41ad23:	int3   
  41ad24:	int3   
  41ad25:	int3   
  41ad26:	int3   
  41ad27:	int3   
  41ad28:	int3   
  41ad29:	int3   
  41ad2a:	int3   
  41ad2b:	int3   
  41ad2c:	int3   
  41ad2d:	int3   
  41ad2e:	int3   
  41ad2f:	int3   
  41ad30:	push   ebp
  41ad31:	mov    ebp,esp
  41ad33:	sub    esp,0xc
  41ad36:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  41ad3d:	mov    DWORD PTR [ebp-0xc],0x3000
  41ad44:	mov    DWORD PTR [ebp-0x4],0x40
  41ad4b:	mov    eax,DWORD PTR [ebp-0x4]
  41ad4e:	push   eax
  41ad4f:	mov    ecx,DWORD PTR [ebp-0xc]
  41ad52:	push   ecx
  41ad53:	mov    edx,DWORD PTR [ebp+0x8]
  41ad56:	push   edx
  41ad57:	push   0x0
  41ad59:	push   0xffffffff
  41ad5b:	call   DWORD PTR ds:0x41c7b8
  41ad61:	mov    esp,ebp
  41ad63:	pop    ebp
  41ad64:	ret    
  41ad65:	int3   
  41ad66:	int3   
  41ad67:	int3   
  41ad68:	int3   
  41ad69:	int3   
  41ad6a:	int3   
  41ad6b:	int3   
  41ad6c:	int3   
  41ad6d:	int3   
  41ad6e:	int3   
  41ad6f:	int3   
  41ad70:	push   ebp
  41ad71:	mov    ebp,esp
  41ad73:	pop    ebp
  41ad74:	ret    
  41ad75:	int3   
  41ad76:	int3   
  41ad77:	int3   
  41ad78:	int3   
  41ad79:	int3   
  41ad7a:	int3   
  41ad7b:	int3   
  41ad7c:	int3   
  41ad7d:	int3   
  41ad7e:	int3   
  41ad7f:	int3   
  41ad80:	push   ebp
  41ad81:	mov    ebp,esp
  41ad83:	sub    esp,0x8
  41ad86:	mov    eax,DWORD PTR [ebp+0x8]
  41ad89:	mov    DWORD PTR [ebp-0x4],eax
  41ad8c:	mov    ecx,DWORD PTR [ebp+0xc]
  41ad8f:	mov    DWORD PTR [ebp-0x8],ecx
  41ad92:	mov    edx,DWORD PTR [ebp-0x4]
  41ad95:	cmp    edx,DWORD PTR [ebp-0x8]
  41ad98:	jae    0x41ada1
  41ad9a:	mov    eax,DWORD PTR [ebp-0x4]
  41ad9d:	jmp    0x41ada4
  41ad9f:	jmp    0x41ada4
  41ada1:	mov    eax,DWORD PTR [ebp-0x8]
  41ada4:	mov    esp,ebp
  41ada6:	pop    ebp
  41ada7:	ret    
  41ada8:	int3   
  41ada9:	int3   
  41adaa:	int3   
  41adab:	int3   
  41adac:	int3   
  41adad:	int3   
  41adae:	int3   
  41adaf:	int3   
  41adb0:	push   ebp
  41adb1:	mov    ebp,esp
  41adb3:	mov    DWORD PTR ds:0x41ec64,0x401004
  41adbd:	pop    ebp
  41adbe:	ret    
  41adbf:	int3   
  41adc0:	push   ebp
  41adc1:	mov    ebp,esp
  41adc3:	mov    DWORD PTR ds:0x41ec64,0x41a258
  41adcd:	pop    ebp
  41adce:	ret    
  41adcf:	int3   
  41add0:	push   ebp
  41add1:	mov    ebp,esp
  41add3:	mov    eax,DWORD PTR [ebp+0x8]
  41add6:	mov    eax,DWORD PTR [eax-0x4]
  41add9:	pop    ebp
  41adda:	ret    
  41addb:	int3   
  41addc:	int3   
  41addd:	int3   
  41adde:	int3   
  41addf:	int3   
  41ade0:	push   ebp
  41ade1:	mov    ebp,esp
  41ade3:	sub    esp,0xc
  41ade6:	mov    DWORD PTR [ebp-0x4],0x0
  41aded:	jmp    0x41adf8
  41adef:	mov    eax,DWORD PTR [ebp-0x4]
  41adf2:	add    eax,0x1
  41adf5:	mov    DWORD PTR [ebp-0x4],eax
  41adf8:	mov    ecx,DWORD PTR [ebp-0x4]
  41adfb:	cmp    ecx,DWORD PTR [ebp+0x8]
  41adfe:	jae    0x41ae4f
  41ae00:	mov    edx,DWORD PTR [ebp-0x4]
  41ae03:	mov    eax,DWORD PTR [ebp+0xc]
  41ae06:	movzx  ecx,WORD PTR [eax+edx*2]
  41ae0a:	sar    ecx,0xc
  41ae0d:	cmp    ecx,0x3
  41ae10:	jne    0x41ae4d
  41ae12:	mov    DWORD PTR [ebp-0xc],0xfff
  41ae19:	mov    edx,DWORD PTR [ebp-0x4]
  41ae1c:	mov    eax,DWORD PTR [ebp+0xc]
  41ae1f:	movzx  ecx,WORD PTR [eax+edx*2]
  41ae23:	and    ecx,DWORD PTR [ebp-0xc]
  41ae26:	add    ecx,0x43
  41ae29:	mov    DWORD PTR [ebp-0x8],ecx
  41ae2c:	mov    edx,DWORD PTR [ebp+0x18]
  41ae2f:	mov    eax,DWORD PTR [ebp+0x10]
  41ae32:	add    eax,DWORD PTR [edx]
  41ae34:	mov    ecx,DWORD PTR [ebp-0x8]
  41ae37:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  41ae3b:	add    edx,DWORD PTR [ebp+0x14]
  41ae3e:	mov    eax,DWORD PTR [ebp+0x18]
  41ae41:	mov    ecx,DWORD PTR [ebp+0x10]
  41ae44:	add    ecx,DWORD PTR [eax]
  41ae46:	mov    eax,DWORD PTR [ebp-0x8]
  41ae49:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  41ae4d:	jmp    0x41adef
  41ae4f:	mov    esp,ebp
  41ae51:	pop    ebp
  41ae52:	ret    
  41ae53:	int3   
  41ae54:	int3   
  41ae55:	int3   
  41ae56:	int3   
  41ae57:	int3   
  41ae58:	int3   
  41ae59:	int3   
  41ae5a:	int3   
  41ae5b:	int3   
  41ae5c:	int3   
  41ae5d:	int3   
  41ae5e:	int3   
  41ae5f:	int3   
  41ae60:	push   ebp
  41ae61:	mov    ebp,esp
  41ae63:	sub    esp,0x28
  41ae66:	mov    DWORD PTR [ebp-0x8],0x11cb
  41ae6d:	mov    DWORD PTR [ebp-0x10],0x0
  41ae74:	jmp    0x41ae7f
  41ae76:	mov    eax,DWORD PTR [ebp-0x10]
  41ae79:	add    eax,0x4
  41ae7c:	mov    DWORD PTR [ebp-0x10],eax
  41ae7f:	mov    ecx,DWORD PTR [ebp-0x10]
  41ae82:	cmp    ecx,DWORD PTR [ebp+0xc]
  41ae85:	jae    0x41af57
  41ae8b:	mov    DWORD PTR [ebp-0x8],0x11cb
  41ae92:	cmp    DWORD PTR [ebp-0x10],0x0
  41ae96:	jne    0x41aee8
  41ae98:	push   0x104
  41ae9d:	push   0x41ec68
  41aea2:	call   DWORD PTR ds:0x41c7bc
  41aea8:	push   0x41c000
  41aead:	push   0x41ec68
  41aeb2:	call   DWORD PTR ds:0x41c7c0
  41aeb8:	push   0x0
  41aeba:	push   0x80
  41aebf:	push   0x3
  41aec1:	push   0x0
  41aec3:	push   0x3
  41aec5:	push   0x1
  41aec7:	push   0x41ec68
  41aecc:	call   DWORD PTR ds:0x41c7c4
  41aed2:	mov    DWORD PTR [ebp-0x4],eax
  41aed5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41aed9:	je     0x41aee1
  41aedb:	cmp    DWORD PTR [ebp-0x4],0x0
  41aedf:	jne    0x41aee8
  41aee1:	mov    eax,0x42
  41aee6:	jmp    0x41af57
  41aee8:	mov    DWORD PTR [ebp-0x8],0x11cb
  41aeef:	mov    edx,DWORD PTR [ebp-0x10]
  41aef2:	add    edx,0x6296
  41aef8:	mov    DWORD PTR ds:0x41ed6c,edx
  41aefe:	mov    eax,DWORD PTR [ebp+0x8]
  41af01:	add    eax,DWORD PTR [ebp-0x10]
  41af04:	mov    ecx,DWORD PTR [eax]
  41af06:	add    ecx,DWORD PTR [ebp-0x10]
  41af09:	mov    edx,DWORD PTR [ebp+0x8]
  41af0c:	add    edx,DWORD PTR [ebp-0x10]
  41af0f:	mov    DWORD PTR [edx],ecx
  41af11:	mov    eax,DWORD PTR [ebp-0xc]
  41af14:	mov    DWORD PTR [ebp-0x14],eax
  41af17:	mov    DWORD PTR [ebp-0x8],0x11cb
  41af1e:	mov    ecx,DWORD PTR ds:0x41ed6c
  41af24:	mov    DWORD PTR [ebp-0x24],ecx
  41af27:	mov    edx,DWORD PTR [ebp-0x24]
  41af2a:	mov    DWORD PTR [ebp-0x20],edx
  41af2d:	mov    eax,DWORD PTR [ebp-0x20]
  41af30:	mov    DWORD PTR [ebp-0x1c],eax
  41af33:	mov    ecx,DWORD PTR [ebp-0x1c]
  41af36:	mov    DWORD PTR [ebp-0x18],ecx
  41af39:	mov    edx,DWORD PTR [ebp-0x18]
  41af3c:	mov    DWORD PTR [ebp-0x28],edx
  41af3f:	mov    eax,DWORD PTR [ebp+0x8]
  41af42:	add    eax,DWORD PTR [ebp-0x10]
  41af45:	mov    ecx,DWORD PTR [eax]
  41af47:	xor    ecx,DWORD PTR [ebp-0x18]
  41af4a:	mov    edx,DWORD PTR [ebp+0x8]
  41af4d:	add    edx,DWORD PTR [ebp-0x10]
  41af50:	mov    DWORD PTR [edx],ecx
  41af52:	jmp    0x41ae76
  41af57:	mov    esp,ebp
  41af59:	pop    ebp
  41af5a:	ret    
  41af5b:	int3   
  41af5c:	int3   
  41af5d:	int3   
  41af5e:	int3   
  41af5f:	int3   
  41af60:	push   ebp
  41af61:	mov    ebp,esp
  41af63:	sub    esp,0x14
  41af66:	mov    eax,DWORD PTR [ebp+0x8]
  41af69:	cmp    DWORD PTR [eax+0x4],0x0
  41af6d:	je     0x41afb7
  41af6f:	mov    DWORD PTR [ebp-0x14],0x2a1
  41af76:	mov    ecx,DWORD PTR [ebp+0x8]
  41af79:	mov    edx,DWORD PTR [ecx+0x4]
  41af7c:	sub    edx,0x8
  41af7f:	shr    edx,1
  41af81:	mov    DWORD PTR [ebp-0xc],edx
  41af84:	mov    eax,DWORD PTR [ebp+0x8]
  41af87:	add    eax,0x8
  41af8a:	mov    DWORD PTR [ebp-0x10],eax
  41af8d:	mov    ecx,DWORD PTR [ebp+0x8]
  41af90:	push   ecx
  41af91:	mov    edx,DWORD PTR [ebp+0x10]
  41af94:	push   edx
  41af95:	mov    eax,DWORD PTR [ebp+0xc]
  41af98:	push   eax
  41af99:	mov    ecx,DWORD PTR [ebp-0x10]
  41af9c:	push   ecx
  41af9d:	mov    edx,DWORD PTR [ebp-0xc]
  41afa0:	push   edx
  41afa1:	call   0x41ade0
  41afa6:	add    esp,0x14
  41afa9:	mov    eax,DWORD PTR [ebp+0x8]
  41afac:	mov    ecx,DWORD PTR [ebp+0x8]
  41afaf:	add    ecx,DWORD PTR [eax+0x4]
  41afb2:	mov    DWORD PTR [ebp+0x8],ecx
  41afb5:	jmp    0x41af66
  41afb7:	mov    esp,ebp
  41afb9:	pop    ebp
  41afba:	ret    
  41afbb:	int3   
  41afbc:	int3   
  41afbd:	int3   
  41afbe:	int3   
  41afbf:	int3   
  41afc0:	push   ebp
  41afc1:	mov    ebp,esp
  41afc3:	sub    esp,0x8
  41afc6:	mov    DWORD PTR [ebp-0x4],0x41c018
  41afcd:	lea    eax,[ebp-0x8]
  41afd0:	push   eax
  41afd1:	push   0x20019
  41afd6:	push   0x0
  41afd8:	push   0x41ec5c
  41afdd:	push   0x80000002
  41afe2:	call   DWORD PTR ds:0x41ed70
  41afe8:	test   eax,eax
  41afea:	je     0x41aff3
  41afec:	xor    eax,eax
  41afee:	jmp    0x41b094
  41aff3:	lea    ecx,[ebp-0x8]
  41aff6:	push   ecx
  41aff7:	push   0x20019
  41affc:	push   0x0
  41affe:	push   0x41ec60
  41b003:	push   0x80000002
  41b008:	call   DWORD PTR ds:0x41ed70
  41b00e:	test   eax,eax
  41b010:	je     0x41b016
  41b012:	xor    eax,eax
  41b014:	jmp    0x41b094
  41b016:	mov    edx,0x53
  41b01b:	mov    eax,DWORD PTR [ebp-0x4]
  41b01e:	mov    WORD PTR [eax],dx
  41b021:	lea    ecx,[ebp-0x8]
  41b024:	push   ecx
  41b025:	push   0x20019
  41b02a:	push   0x0
  41b02c:	mov    edx,DWORD PTR [ebp-0x4]
  41b02f:	push   edx
  41b030:	mov    eax,DWORD PTR [ebp-0x8]
  41b033:	push   eax
  41b034:	call   DWORD PTR ds:0x41ed70
  41b03a:	test   eax,eax
  41b03c:	je     0x41b042
  41b03e:	xor    eax,eax
  41b040:	jmp    0x41b094
  41b042:	lea    ecx,[ebp-0x8]
  41b045:	push   ecx
  41b046:	push   0x20019
  41b04b:	push   0x0
  41b04d:	push   0x41c030
  41b052:	mov    edx,DWORD PTR [ebp-0x8]
  41b055:	push   edx
  41b056:	call   DWORD PTR ds:0x41ed70
  41b05c:	test   eax,eax
  41b05e:	je     0x41b06d
  41b060:	push   0x1
  41b062:	push   0x1
  41b064:	push   0x1
  41b066:	push   0x1
  41b068:	call   0x41afc0
  41b06d:	lea    eax,[ebp-0x8]
  41b070:	push   eax
  41b071:	push   0x20019
  41b076:	push   0x0
  41b078:	push   0x41c0a8
  41b07d:	mov    ecx,DWORD PTR [ebp-0x8]
  41b080:	push   ecx
  41b081:	call   DWORD PTR ds:0x41ed70
  41b087:	test   eax,eax
  41b089:	jne    0x41b08f
  41b08b:	xor    eax,eax
  41b08d:	jmp    0x41b094
  41b08f:	call   0x41adb0
  41b094:	mov    esp,ebp
  41b096:	pop    ebp
  41b097:	ret    0x10
  41b09a:	int3   
  41b09b:	int3   
  41b09c:	int3   
  41b09d:	int3   
  41b09e:	int3   
  41b09f:	int3   
  41b0a0:	push   ebp
  41b0a1:	mov    ebp,esp
  41b0a3:	sub    esp,0x70
  41b0a6:	pusha  
  41b0a7:	mov    DWORD PTR ds:0x41ed74,ebp
  41b0ad:	mov    DWORD PTR [ebp-0x3c],0x0
  41b0b4:	mov    DWORD PTR [ebp-0x50],0x80000002
  41b0bb:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  41b0c2:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  41b0c9:	mov    eax,ds:0x41cbb4
  41b0ce:	mov    ds:0x41ed70,eax
  41b0d3:	lea    ecx,[ebp-0x54]
  41b0d6:	push   ecx
  41b0d7:	lea    edx,[ebp-0x58]
  41b0da:	push   edx
  41b0db:	lea    eax,[ebp-0x8]
  41b0de:	push   eax
  41b0df:	call   DWORD PTR ds:0x41c7c8
  41b0e5:	movzx  ecx,WORD PTR [ebp-0x58]
  41b0e9:	cmp    ecx,0x21
  41b0ec:	je     0x41b0f5
  41b0ee:	xor    eax,eax
  41b0f0:	jmp    0x41b2ec
  41b0f5:	push   0x1
  41b0f7:	push   0x1
  41b0f9:	push   0x1
  41b0fb:	push   0x1
  41b0fd:	call   0x41afc0
  41b102:	mov    DWORD PTR [ebp-0x14],0x0
  41b109:	mov    DWORD PTR [ebp-0x34],0x64
  41b110:	mov    DWORD PTR [ebp-0x1c],0x12
  41b117:	mov    DWORD PTR [ebp-0x3c],0x0
  41b11e:	mov    DWORD PTR [ebp-0x24],0x0
  41b125:	mov    DWORD PTR [ebp-0x30],0x1
  41b12c:	mov    DWORD PTR [ebp-0x18],0x3
  41b133:	mov    edx,DWORD PTR ds:0x41ec64
  41b139:	push   edx
  41b13a:	call   0x41add0
  41b13f:	add    esp,0x4
  41b142:	mov    DWORD PTR [ebp-0x40],eax
  41b145:	mov    eax,DWORD PTR [ebp-0x40]
  41b148:	push   eax
  41b149:	call   0x41ad30
  41b14e:	add    esp,0x4
  41b151:	mov    DWORD PTR [ebp-0x38],eax
  41b154:	mov    ecx,DWORD PTR [ebp-0x40]
  41b157:	push   ecx
  41b158:	push   0x0
  41b15a:	mov    edx,DWORD PTR [ebp-0x38]
  41b15d:	push   edx
  41b15e:	call   0x41ad70
  41b163:	add    esp,0xc
  41b166:	mov    eax,DWORD PTR [ebp-0x40]
  41b169:	mov    DWORD PTR [ebp-0x48],eax
  41b16c:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b16f:	cmp    ecx,DWORD PTR [ebp-0x40]
  41b172:	jae    0x41b1c4
  41b174:	mov    edx,DWORD PTR [ebp-0x48]
  41b177:	push   edx
  41b178:	mov    eax,DWORD PTR [ebp-0x34]
  41b17b:	push   eax
  41b17c:	call   0x41ad80
  41b181:	add    esp,0x8
  41b184:	mov    DWORD PTR [ebp-0x4c],eax
  41b187:	mov    ecx,DWORD PTR [ebp-0x4c]
  41b18a:	push   ecx
  41b18b:	mov    edx,DWORD PTR ds:0x41ec64
  41b191:	add    edx,DWORD PTR [ebp-0x24]
  41b194:	push   edx
  41b195:	mov    eax,DWORD PTR [ebp-0x38]
  41b198:	add    eax,DWORD PTR [ebp-0x3c]
  41b19b:	push   eax
  41b19c:	call   0x41b8e2
  41b1a1:	add    esp,0xc
  41b1a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b1a7:	add    ecx,DWORD PTR [ebp-0x34]
  41b1aa:	add    ecx,DWORD PTR [ebp-0x24]
  41b1ad:	mov    DWORD PTR [ebp-0x24],ecx
  41b1b0:	mov    edx,DWORD PTR [ebp-0x3c]
  41b1b3:	add    edx,DWORD PTR [ebp-0x34]
  41b1b6:	mov    DWORD PTR [ebp-0x3c],edx
  41b1b9:	mov    eax,DWORD PTR [ebp-0x48]
  41b1bc:	sub    eax,DWORD PTR [ebp-0x4c]
  41b1bf:	mov    DWORD PTR [ebp-0x48],eax
  41b1c2:	jmp    0x41b16c
  41b1c4:	mov    ecx,DWORD PTR [ebp-0x40]
  41b1c7:	push   ecx
  41b1c8:	mov    edx,DWORD PTR [ebp-0x38]
  41b1cb:	push   edx
  41b1cc:	call   0x41ae60
  41b1d1:	add    esp,0x8
  41b1d4:	mov    DWORD PTR [ebp-0x24],0x0
  41b1db:	mov    DWORD PTR [ebp-0x60],0x0
  41b1e2:	call   0x41adc0
  41b1e7:	mov    eax,ds:0x41ec64
  41b1ec:	push   eax
  41b1ed:	call   0x41add0
  41b1f2:	add    esp,0x4
  41b1f5:	mov    DWORD PTR [ebp-0x64],eax
  41b1f8:	mov    ecx,DWORD PTR [ebp-0x64]
  41b1fb:	push   ecx
  41b1fc:	call   0x41ad30
  41b201:	add    esp,0x4
  41b204:	mov    DWORD PTR [ebp-0x20],eax
  41b207:	mov    edx,DWORD PTR [ebp-0x64]
  41b20a:	push   edx
  41b20b:	push   0x0
  41b20d:	mov    eax,DWORD PTR [ebp-0x20]
  41b210:	push   eax
  41b211:	call   0x41ad70
  41b216:	add    esp,0xc
  41b219:	mov    ecx,DWORD PTR [ebp-0x64]
  41b21c:	mov    DWORD PTR [ebp-0x6c],ecx
  41b21f:	mov    edx,DWORD PTR [ebp-0x60]
  41b222:	cmp    edx,DWORD PTR [ebp-0x64]
  41b225:	jae    0x41b276
  41b227:	mov    eax,DWORD PTR [ebp-0x6c]
  41b22a:	push   eax
  41b22b:	mov    ecx,DWORD PTR [ebp-0x34]
  41b22e:	push   ecx
  41b22f:	call   0x41ad80
  41b234:	add    esp,0x8
  41b237:	mov    DWORD PTR [ebp-0x70],eax
  41b23a:	mov    edx,DWORD PTR [ebp-0x70]
  41b23d:	push   edx
  41b23e:	mov    eax,ds:0x41ec64
  41b243:	add    eax,DWORD PTR [ebp-0x24]
  41b246:	push   eax
  41b247:	mov    ecx,DWORD PTR [ebp-0x20]
  41b24a:	add    ecx,DWORD PTR [ebp-0x60]
  41b24d:	push   ecx
  41b24e:	call   0x41b8e2
  41b253:	add    esp,0xc
  41b256:	mov    edx,DWORD PTR [ebp-0x1c]
  41b259:	add    edx,DWORD PTR [ebp-0x34]
  41b25c:	add    edx,DWORD PTR [ebp-0x24]
  41b25f:	mov    DWORD PTR [ebp-0x24],edx
  41b262:	mov    eax,DWORD PTR [ebp-0x60]
  41b265:	add    eax,DWORD PTR [ebp-0x34]
  41b268:	mov    DWORD PTR [ebp-0x60],eax
  41b26b:	mov    ecx,DWORD PTR [ebp-0x6c]
  41b26e:	sub    ecx,DWORD PTR [ebp-0x70]
  41b271:	mov    DWORD PTR [ebp-0x6c],ecx
  41b274:	jmp    0x41b21f
  41b276:	mov    edx,DWORD PTR [ebp-0x64]
  41b279:	push   edx
  41b27a:	mov    eax,DWORD PTR [ebp-0x20]
  41b27d:	push   eax
  41b27e:	call   0x41ae60
  41b283:	add    esp,0x8
  41b286:	mov    ecx,DWORD PTR [ebp-0x38]
  41b289:	mov    edx,DWORD PTR [ebp-0x20]
  41b28c:	mov    DWORD PTR [ecx],edx
  41b28e:	push   0x17000
  41b293:	call   0x41ad30
  41b298:	add    esp,0x4
  41b29b:	mov    DWORD PTR [ebp-0xc],eax
  41b29e:	push   0x15500
  41b2a3:	mov    eax,DWORD PTR [ebp-0x38]
  41b2a6:	push   eax
  41b2a7:	mov    ecx,DWORD PTR [ebp-0xc]
  41b2aa:	add    ecx,0x200
  41b2b0:	push   ecx
  41b2b1:	call   0x41b8e2
  41b2b6:	add    esp,0xc
  41b2b9:	mov    edx,DWORD PTR [ebp-0xc]
  41b2bc:	sub    edx,0x400000
  41b2c2:	push   edx
  41b2c3:	mov    eax,DWORD PTR [ebp-0xc]
  41b2c6:	push   eax
  41b2c7:	mov    ecx,DWORD PTR [ebp-0x20]
  41b2ca:	push   ecx
  41b2cb:	call   0x41af60
  41b2d0:	add    esp,0xc
  41b2d3:	mov    esp,DWORD PTR ds:0x41ed74
  41b2d9:	pop    eax
  41b2da:	mov    eax,DWORD PTR [ebp-0xc]
  41b2dd:	add    eax,0x15350
  41b2e2:	mov    ds:0x41ed78,eax
  41b2e7:	jmp    0x41b2f0
  41b2ec:	mov    esp,ebp
  41b2ee:	pop    ebp
  41b2ef:	ret    
  41b2f0:	push   ebp
  41b2f1:	mov    ebp,esp
  41b2f3:	pop    eax
  41b2f4:	pop    eax
  41b2f5:	mov    ecx,DWORD PTR ds:0x41ed78
  41b2fb:	jmp    ecx
  41b2fd:	pop    ebp
  41b2fe:	ret    
  41b2ff:	jmp    DWORD PTR ds:0x41c7b8
  41b305:	jmp    DWORD PTR ds:0x41c7bc
  41b30b:	jmp    DWORD PTR ds:0x41c7c0
  41b311:	jmp    DWORD PTR ds:0x41c7c4
  41b317:	jmp    DWORD PTR ds:0x41c7c8
  41b31d:	jmp    DWORD PTR ds:0x41c7d0
  41b323:	jmp    DWORD PTR ds:0x41c7d4
  41b329:	jmp    DWORD PTR ds:0x41c7d8
  41b32f:	jmp    DWORD PTR ds:0x41c7dc
  41b335:	jmp    DWORD PTR ds:0x41c7e0
  41b33b:	jmp    DWORD PTR ds:0x41c7e4
  41b341:	jmp    DWORD PTR ds:0x41c7e8
  41b347:	jmp    DWORD PTR ds:0x41c7ec
  41b34d:	jmp    DWORD PTR ds:0x41c7f0
  41b353:	jmp    DWORD PTR ds:0x41c7f4
  41b359:	jmp    DWORD PTR ds:0x41c7f8
  41b35f:	jmp    DWORD PTR ds:0x41c7fc
  41b365:	jmp    DWORD PTR ds:0x41c800
  41b36b:	jmp    DWORD PTR ds:0x41c804
  41b371:	jmp    DWORD PTR ds:0x41c808
  41b377:	jmp    DWORD PTR ds:0x41c80c
  41b37d:	jmp    DWORD PTR ds:0x41c810
  41b383:	jmp    DWORD PTR ds:0x41c814
  41b389:	jmp    DWORD PTR ds:0x41c818
  41b38f:	jmp    DWORD PTR ds:0x41c81c
  41b395:	jmp    DWORD PTR ds:0x41c820
  41b39b:	jmp    DWORD PTR ds:0x41c824
  41b3a1:	jmp    DWORD PTR ds:0x41c828
  41b3a7:	jmp    DWORD PTR ds:0x41c82c
  41b3ad:	jmp    DWORD PTR ds:0x41c830
  41b3b3:	jmp    DWORD PTR ds:0x41c834
  41b3b9:	jmp    DWORD PTR ds:0x41c838
  41b3bf:	jmp    DWORD PTR ds:0x41c83c
  41b3c5:	jmp    DWORD PTR ds:0x41c840
  41b3cb:	jmp    DWORD PTR ds:0x41c844
  41b3d1:	jmp    DWORD PTR ds:0x41c848
  41b3d7:	jmp    DWORD PTR ds:0x41c84c
  41b3dd:	jmp    DWORD PTR ds:0x41c850
  41b3e3:	jmp    DWORD PTR ds:0x41c854
  41b3e9:	jmp    DWORD PTR ds:0x41c858
  41b3ef:	jmp    DWORD PTR ds:0x41c85c
  41b3f5:	jmp    DWORD PTR ds:0x41c860
  41b3fb:	jmp    DWORD PTR ds:0x41c864
  41b401:	jmp    DWORD PTR ds:0x41c868
  41b407:	jmp    DWORD PTR ds:0x41c86c
  41b40d:	jmp    DWORD PTR ds:0x41c870
  41b413:	jmp    DWORD PTR ds:0x41c874
  41b419:	jmp    DWORD PTR ds:0x41c878
  41b41f:	jmp    DWORD PTR ds:0x41c87c
  41b425:	jmp    DWORD PTR ds:0x41c880
  41b42b:	jmp    DWORD PTR ds:0x41c884
  41b431:	jmp    DWORD PTR ds:0x41c888
  41b437:	jmp    DWORD PTR ds:0x41c88c
  41b43d:	jmp    DWORD PTR ds:0x41c890
  41b443:	jmp    DWORD PTR ds:0x41c894
  41b449:	jmp    DWORD PTR ds:0x41c898
  41b44f:	jmp    DWORD PTR ds:0x41c89c
  41b455:	jmp    DWORD PTR ds:0x41c8a0
  41b45b:	jmp    DWORD PTR ds:0x41c8a4
  41b461:	jmp    DWORD PTR ds:0x41c8a8
  41b467:	jmp    DWORD PTR ds:0x41c8ac
  41b46d:	jmp    DWORD PTR ds:0x41c8b0
  41b473:	jmp    DWORD PTR ds:0x41c8b4
  41b479:	jmp    DWORD PTR ds:0x41c8b8
  41b47f:	jmp    DWORD PTR ds:0x41c8bc
  41b485:	jmp    DWORD PTR ds:0x41c8c0
  41b48b:	jmp    DWORD PTR ds:0x41c8c4
  41b491:	jmp    DWORD PTR ds:0x41c8c8
  41b497:	jmp    DWORD PTR ds:0x41c8cc
  41b49d:	jmp    DWORD PTR ds:0x41c8d0
  41b4a3:	jmp    DWORD PTR ds:0x41c8d4
  41b4a9:	jmp    DWORD PTR ds:0x41c8d8
  41b4af:	jmp    DWORD PTR ds:0x41c8dc
  41b4b5:	jmp    DWORD PTR ds:0x41c8e0
  41b4bb:	jmp    DWORD PTR ds:0x41c8e4
  41b4c1:	jmp    DWORD PTR ds:0x41c8e8
  41b4c7:	jmp    DWORD PTR ds:0x41c8ec
  41b4cd:	jmp    DWORD PTR ds:0x41c8f0
  41b4d3:	jmp    DWORD PTR ds:0x41c8f4
  41b4d9:	jmp    DWORD PTR ds:0x41c8f8
  41b4df:	jmp    DWORD PTR ds:0x41c8fc
  41b4e5:	jmp    DWORD PTR ds:0x41c900
  41b4eb:	jmp    DWORD PTR ds:0x41c904
  41b4f1:	jmp    DWORD PTR ds:0x41c908
  41b4f7:	jmp    DWORD PTR ds:0x41c90c
  41b4fd:	jmp    DWORD PTR ds:0x41c910
  41b503:	jmp    DWORD PTR ds:0x41c914
  41b509:	jmp    DWORD PTR ds:0x41c918
  41b50f:	jmp    DWORD PTR ds:0x41c91c
  41b515:	jmp    DWORD PTR ds:0x41c920
  41b51b:	jmp    DWORD PTR ds:0x41c924
  41b521:	jmp    DWORD PTR ds:0x41c928
  41b527:	jmp    DWORD PTR ds:0x41c92c
  41b52d:	jmp    DWORD PTR ds:0x41c930
  41b533:	jmp    DWORD PTR ds:0x41c934
  41b539:	jmp    DWORD PTR ds:0x41c938
  41b53f:	jmp    DWORD PTR ds:0x41c93c
  41b545:	jmp    DWORD PTR ds:0x41c940
  41b54b:	jmp    DWORD PTR ds:0x41c944
  41b551:	jmp    DWORD PTR ds:0x41c948
  41b557:	jmp    DWORD PTR ds:0x41c94c
  41b55d:	jmp    DWORD PTR ds:0x41c950
  41b563:	jmp    DWORD PTR ds:0x41c954
  41b569:	jmp    DWORD PTR ds:0x41c958
  41b56f:	jmp    DWORD PTR ds:0x41c95c
  41b575:	jmp    DWORD PTR ds:0x41c960
  41b57b:	jmp    DWORD PTR ds:0x41c964
  41b581:	jmp    DWORD PTR ds:0x41c968
  41b587:	jmp    DWORD PTR ds:0x41c96c
  41b58d:	jmp    DWORD PTR ds:0x41c970
  41b593:	jmp    DWORD PTR ds:0x41c974
  41b599:	jmp    DWORD PTR ds:0x41c978
  41b59f:	jmp    DWORD PTR ds:0x41c97c
  41b5a5:	jmp    DWORD PTR ds:0x41c980
  41b5ab:	jmp    DWORD PTR ds:0x41c984
  41b5b1:	jmp    DWORD PTR ds:0x41c988
  41b5b7:	jmp    DWORD PTR ds:0x41c98c
  41b5bd:	jmp    DWORD PTR ds:0x41c990
  41b5c3:	jmp    DWORD PTR ds:0x41c994
  41b5c9:	jmp    DWORD PTR ds:0x41c998
  41b5cf:	jmp    DWORD PTR ds:0x41c99c
  41b5d5:	jmp    DWORD PTR ds:0x41c9a0
  41b5db:	jmp    DWORD PTR ds:0x41c9a4
  41b5e1:	jmp    DWORD PTR ds:0x41c9a8
  41b5e7:	jmp    DWORD PTR ds:0x41c9ac
  41b5ed:	jmp    DWORD PTR ds:0x41c9b0
  41b5f3:	jmp    DWORD PTR ds:0x41c9b4
  41b5f9:	jmp    DWORD PTR ds:0x41c9b8
  41b5ff:	jmp    DWORD PTR ds:0x41c9bc
  41b605:	jmp    DWORD PTR ds:0x41c9c0
  41b60b:	jmp    DWORD PTR ds:0x41c9c4
  41b611:	jmp    DWORD PTR ds:0x41c9c8
  41b617:	jmp    DWORD PTR ds:0x41c9cc
  41b61d:	jmp    DWORD PTR ds:0x41c9d0
  41b623:	jmp    DWORD PTR ds:0x41c9d4
  41b629:	jmp    DWORD PTR ds:0x41c9d8
  41b62f:	jmp    DWORD PTR ds:0x41c9dc
  41b635:	jmp    DWORD PTR ds:0x41c9e0
  41b63b:	jmp    DWORD PTR ds:0x41c9e4
  41b641:	jmp    DWORD PTR ds:0x41c9e8
  41b647:	jmp    DWORD PTR ds:0x41c9ec
  41b64d:	jmp    DWORD PTR ds:0x41c9f0
  41b653:	jmp    DWORD PTR ds:0x41c9f4
  41b659:	jmp    DWORD PTR ds:0x41c9f8
  41b65f:	jmp    DWORD PTR ds:0x41c9fc
  41b665:	jmp    DWORD PTR ds:0x41ca00
  41b66b:	jmp    DWORD PTR ds:0x41ca04
  41b671:	jmp    DWORD PTR ds:0x41ca08
  41b677:	jmp    DWORD PTR ds:0x41ca0c
  41b67d:	jmp    DWORD PTR ds:0x41ca10
  41b683:	jmp    DWORD PTR ds:0x41ca14
  41b689:	jmp    DWORD PTR ds:0x41ca18
  41b68f:	jmp    DWORD PTR ds:0x41ca1c
  41b695:	jmp    DWORD PTR ds:0x41ca20
  41b69b:	jmp    DWORD PTR ds:0x41ca24
  41b6a1:	jmp    DWORD PTR ds:0x41ca28
  41b6a7:	jmp    DWORD PTR ds:0x41ca2c
  41b6ad:	jmp    DWORD PTR ds:0x41ca30
  41b6b3:	jmp    DWORD PTR ds:0x41ca34
  41b6b9:	jmp    DWORD PTR ds:0x41ca38
  41b6bf:	jmp    DWORD PTR ds:0x41ca3c
  41b6c5:	jmp    DWORD PTR ds:0x41ca40
  41b6cb:	jmp    DWORD PTR ds:0x41ca44
  41b6d1:	jmp    DWORD PTR ds:0x41ca48
  41b6d7:	jmp    DWORD PTR ds:0x41ca4c
  41b6dd:	jmp    DWORD PTR ds:0x41ca50
  41b6e3:	jmp    DWORD PTR ds:0x41ca54
  41b6e9:	jmp    DWORD PTR ds:0x41ca58
  41b6ef:	jmp    DWORD PTR ds:0x41ca5c
  41b6f5:	jmp    DWORD PTR ds:0x41ca60
  41b6fb:	jmp    DWORD PTR ds:0x41ca64
  41b701:	jmp    DWORD PTR ds:0x41ca68
  41b707:	jmp    DWORD PTR ds:0x41ca6c
  41b70d:	jmp    DWORD PTR ds:0x41ca70
  41b713:	jmp    DWORD PTR ds:0x41ca74
  41b719:	jmp    DWORD PTR ds:0x41ca78
  41b71f:	jmp    DWORD PTR ds:0x41ca7c
  41b725:	jmp    DWORD PTR ds:0x41ca80
  41b72b:	jmp    DWORD PTR ds:0x41ca84
  41b731:	jmp    DWORD PTR ds:0x41ca88
  41b737:	jmp    DWORD PTR ds:0x41ca8c
  41b73d:	jmp    DWORD PTR ds:0x41ca90
  41b743:	jmp    DWORD PTR ds:0x41ca94
  41b749:	jmp    DWORD PTR ds:0x41ca98
  41b74f:	jmp    DWORD PTR ds:0x41ca9c
  41b755:	jmp    DWORD PTR ds:0x41caa0
  41b75b:	jmp    DWORD PTR ds:0x41caa4
  41b761:	jmp    DWORD PTR ds:0x41caa8
  41b767:	jmp    DWORD PTR ds:0x41caac
  41b76d:	jmp    DWORD PTR ds:0x41cab0
  41b773:	jmp    DWORD PTR ds:0x41cab4
  41b779:	jmp    DWORD PTR ds:0x41cab8
  41b77f:	jmp    DWORD PTR ds:0x41cabc
  41b785:	jmp    DWORD PTR ds:0x41cac0
  41b78b:	jmp    DWORD PTR ds:0x41cac4
  41b791:	jmp    DWORD PTR ds:0x41cac8
  41b797:	jmp    DWORD PTR ds:0x41cacc
  41b79d:	jmp    DWORD PTR ds:0x41cad0
  41b7a3:	jmp    DWORD PTR ds:0x41cad4
  41b7a9:	jmp    DWORD PTR ds:0x41cad8
  41b7af:	jmp    DWORD PTR ds:0x41cadc
  41b7b5:	jmp    DWORD PTR ds:0x41cae0
  41b7bb:	jmp    DWORD PTR ds:0x41cae4
  41b7c1:	jmp    DWORD PTR ds:0x41cae8
  41b7c7:	jmp    DWORD PTR ds:0x41caec
  41b7cd:	jmp    DWORD PTR ds:0x41caf0
  41b7d3:	jmp    DWORD PTR ds:0x41caf4
  41b7d9:	jmp    DWORD PTR ds:0x41caf8
  41b7df:	jmp    DWORD PTR ds:0x41cafc
  41b7e5:	jmp    DWORD PTR ds:0x41cb00
  41b7eb:	jmp    DWORD PTR ds:0x41cb04
  41b7f1:	jmp    DWORD PTR ds:0x41cb08
  41b7f7:	jmp    DWORD PTR ds:0x41cb0c
  41b7fd:	jmp    DWORD PTR ds:0x41cb10
  41b803:	jmp    DWORD PTR ds:0x41cb14
  41b809:	jmp    DWORD PTR ds:0x41cb18
  41b80f:	jmp    DWORD PTR ds:0x41cb1c
  41b815:	jmp    DWORD PTR ds:0x41cb20
  41b81b:	jmp    DWORD PTR ds:0x41cb24
  41b821:	jmp    DWORD PTR ds:0x41cb28
  41b827:	jmp    DWORD PTR ds:0x41cb2c
  41b82d:	jmp    DWORD PTR ds:0x41cb30
  41b833:	jmp    DWORD PTR ds:0x41cb34
  41b839:	jmp    DWORD PTR ds:0x41cb38
  41b83f:	jmp    DWORD PTR ds:0x41cb3c
  41b845:	jmp    DWORD PTR ds:0x41cb40
  41b84b:	jmp    DWORD PTR ds:0x41cb44
  41b851:	jmp    DWORD PTR ds:0x41cb48
  41b857:	jmp    DWORD PTR ds:0x41cb4c
  41b85d:	jmp    DWORD PTR ds:0x41cb50
  41b863:	jmp    DWORD PTR ds:0x41cb54
  41b869:	jmp    DWORD PTR ds:0x41cb58
  41b86f:	jmp    DWORD PTR ds:0x41cb5c
  41b875:	jmp    DWORD PTR ds:0x41cb60
  41b87b:	jmp    DWORD PTR ds:0x41cb64
  41b881:	jmp    DWORD PTR ds:0x41cb68
  41b887:	jmp    DWORD PTR ds:0x41cb6c
  41b88d:	jmp    DWORD PTR ds:0x41cb70
  41b893:	jmp    DWORD PTR ds:0x41cb74
  41b899:	jmp    DWORD PTR ds:0x41cb78
  41b89f:	jmp    DWORD PTR ds:0x41cb7c
  41b8a5:	jmp    DWORD PTR ds:0x41cb80
  41b8ab:	jmp    DWORD PTR ds:0x41cb84
  41b8b1:	jmp    DWORD PTR ds:0x41cb88
  41b8b7:	jmp    DWORD PTR ds:0x41cb8c
  41b8bd:	jmp    DWORD PTR ds:0x41cb90
  41b8c3:	jmp    DWORD PTR ds:0x41cb94
  41b8c9:	jmp    DWORD PTR ds:0x41cb98
  41b8cf:	jmp    DWORD PTR ds:0x41cb9c
  41b8d5:	jmp    DWORD PTR ds:0x41cba0
  41b8db:	jmp    DWORD PTR ds:0x41cba4
  41b8e1:	int3   
  41b8e2:	jmp    DWORD PTR ds:0x41cbac
  41b8e8:	jmp    DWORD PTR ds:0x41cbb4
  41b8ee:	jmp    DWORD PTR ds:0x41cbbc
  41b8f4:	jmp    DWORD PTR ds:0x41cbc0
  41b8fa:	jmp    DWORD PTR ds:0x41cbc4
  41b900:	jmp    DWORD PTR ds:0x41cbc8
  41b906:	jmp    DWORD PTR ds:0x41cbcc
  41b90c:	jmp    DWORD PTR ds:0x41cbd0
  41b912:	jmp    DWORD PTR ds:0x41cbd4
  41b918:	jmp    DWORD PTR ds:0x41cbd8
  41b91e:	jmp    DWORD PTR ds:0x41cbdc
  41b924:	jmp    DWORD PTR ds:0x41cbe0
  41b92a:	jmp    DWORD PTR ds:0x41cbe4
  41b930:	jmp    DWORD PTR ds:0x41cbe8
  41b936:	jmp    DWORD PTR ds:0x41cbec
  41b93c:	jmp    DWORD PTR ds:0x41cbf0
  41b942:	jmp    DWORD PTR ds:0x41cbf4
  41b948:	jmp    DWORD PTR ds:0x41cbf8
  41b94e:	jmp    DWORD PTR ds:0x41cbfc
  41b954:	jmp    DWORD PTR ds:0x41cc00
  41b95a:	jmp    DWORD PTR ds:0x41cc04
  41b960:	jmp    DWORD PTR ds:0x41cc08
  41b966:	jmp    DWORD PTR ds:0x41cc0c
  41b96c:	jmp    DWORD PTR ds:0x41cc10
  41b972:	jmp    DWORD PTR ds:0x41cc14
  41b978:	jmp    DWORD PTR ds:0x41cc18
  41b97e:	jmp    DWORD PTR ds:0x41cc1c
  41b984:	jmp    DWORD PTR ds:0x41cc20
  41b98a:	jmp    DWORD PTR ds:0x41cc24
  41b990:	jmp    DWORD PTR ds:0x41cc28
  41b996:	jmp    DWORD PTR ds:0x41cc2c
  41b99c:	jmp    DWORD PTR ds:0x41cc30
  41b9a2:	jmp    DWORD PTR ds:0x41cc34
  41b9a8:	jmp    DWORD PTR ds:0x41cc38
  41b9ae:	jmp    DWORD PTR ds:0x41cc3c
  41b9b4:	jmp    DWORD PTR ds:0x41cc40
  41b9ba:	jmp    DWORD PTR ds:0x41cc44
  41b9c0:	jmp    DWORD PTR ds:0x41cc48
  41b9c6:	jmp    DWORD PTR ds:0x41cc4c
  41b9cc:	jmp    DWORD PTR ds:0x41cc50
  41b9d2:	jmp    DWORD PTR ds:0x41cc54
  41b9d8:	jmp    DWORD PTR ds:0x41cc58
  41b9de:	jmp    DWORD PTR ds:0x41cc5c
  41b9e4:	jmp    DWORD PTR ds:0x41cc60
  41b9ea:	jmp    DWORD PTR ds:0x41cc64
  41b9f0:	jmp    DWORD PTR ds:0x41cc68
  41b9f6:	jmp    DWORD PTR ds:0x41cc6c
  41b9fc:	jmp    DWORD PTR ds:0x41cc70
  41ba02:	jmp    DWORD PTR ds:0x41cc74
  41ba08:	jmp    DWORD PTR ds:0x41cc78
  41ba0e:	jmp    DWORD PTR ds:0x41cc7c
  41ba14:	jmp    DWORD PTR ds:0x41cc80
  41ba1a:	jmp    DWORD PTR ds:0x41cc84
  41ba20:	jmp    DWORD PTR ds:0x41cc88
  41ba26:	jmp    DWORD PTR ds:0x41cc8c
  41ba2c:	jmp    DWORD PTR ds:0x41cc90
  41ba32:	jmp    DWORD PTR ds:0x41cc94
  41ba38:	jmp    DWORD PTR ds:0x41cc98
  41ba3e:	jmp    DWORD PTR ds:0x41cc9c
  41ba44:	jmp    DWORD PTR ds:0x41cca0
  41ba4a:	jmp    DWORD PTR ds:0x41cca4
  41ba50:	jmp    DWORD PTR ds:0x41cca8
  41ba56:	jmp    DWORD PTR ds:0x41ccac
  41ba5c:	jmp    DWORD PTR ds:0x41ccb0
  41ba62:	jmp    DWORD PTR ds:0x41ccb4
  41ba68:	jmp    DWORD PTR ds:0x41ccb8
  41ba6e:	jmp    DWORD PTR ds:0x41ccbc
  41ba74:	jmp    DWORD PTR ds:0x41ccc0
  41ba7a:	jmp    DWORD PTR ds:0x41ccc4
  41ba80:	jmp    DWORD PTR ds:0x41ccc8
  41ba86:	jmp    DWORD PTR ds:0x41cccc
  41ba8c:	jmp    DWORD PTR ds:0x41ccd0
  41ba92:	jmp    DWORD PTR ds:0x41ccd4
  41ba98:	jmp    DWORD PTR ds:0x41ccd8
  41ba9e:	jmp    DWORD PTR ds:0x41ccdc
  41baa4:	jmp    DWORD PTR ds:0x41cce0
  41baaa:	jmp    DWORD PTR ds:0x41cce4
  41bab0:	jmp    DWORD PTR ds:0x41cce8
  41bab6:	jmp    DWORD PTR ds:0x41ccec
  41babc:	jmp    DWORD PTR ds:0x41ccf0
  41bac2:	jmp    DWORD PTR ds:0x41ccf4
  41bac8:	jmp    DWORD PTR ds:0x41ccf8
  41bace:	jmp    DWORD PTR ds:0x41ccfc
  41bad4:	jmp    DWORD PTR ds:0x41cd00
  41bada:	jmp    DWORD PTR ds:0x41cd04
  41bae0:	jmp    DWORD PTR ds:0x41cd08
  41bae6:	jmp    DWORD PTR ds:0x41cd0c
  41baec:	jmp    DWORD PTR ds:0x41cd10
  41baf2:	jmp    DWORD PTR ds:0x41cd14
  41baf8:	jmp    DWORD PTR ds:0x41cd18
  41bafe:	jmp    DWORD PTR ds:0x41cd1c
  41bb04:	jmp    DWORD PTR ds:0x41cd20
  41bb0a:	jmp    DWORD PTR ds:0x41cd24
  41bb10:	jmp    DWORD PTR ds:0x41cd28
  41bb16:	jmp    DWORD PTR ds:0x41cd2c
  41bb1c:	jmp    DWORD PTR ds:0x41cd30
  41bb22:	jmp    DWORD PTR ds:0x41cd34
  41bb28:	jmp    DWORD PTR ds:0x41cd38
  41bb2e:	jmp    DWORD PTR ds:0x41cd3c
  41bb34:	jmp    DWORD PTR ds:0x41cd40
  41bb3a:	jmp    DWORD PTR ds:0x41cd44
  41bb40:	jmp    DWORD PTR ds:0x41cd48
  41bb46:	jmp    DWORD PTR ds:0x41cd4c
  41bb4c:	jmp    DWORD PTR ds:0x41cd50
  41bb52:	jmp    DWORD PTR ds:0x41cd54
  41bb58:	jmp    DWORD PTR ds:0x41cd58
  41bb5e:	jmp    DWORD PTR ds:0x41cd5c
  41bb64:	jmp    DWORD PTR ds:0x41cd60
  41bb6a:	jmp    DWORD PTR ds:0x41cd64
  41bb70:	jmp    DWORD PTR ds:0x41cd68
  41bb76:	jmp    DWORD PTR ds:0x41cd6c
  41bb7c:	jmp    DWORD PTR ds:0x41cd70
  41bb82:	jmp    DWORD PTR ds:0x41cd74
  41bb88:	jmp    DWORD PTR ds:0x41cd78
  41bb8e:	jmp    DWORD PTR ds:0x41cd7c
  41bb94:	jmp    DWORD PTR ds:0x41cd80
  41bb9a:	jmp    DWORD PTR ds:0x41cd84
  41bba0:	jmp    DWORD PTR ds:0x41cd88
  41bba6:	jmp    DWORD PTR ds:0x41cd8c
  41bbac:	jmp    DWORD PTR ds:0x41cd90
  41bbb2:	jmp    DWORD PTR ds:0x41cd94
  41bbb8:	jmp    DWORD PTR ds:0x41cd98
  41bbbe:	jmp    DWORD PTR ds:0x41cd9c
  41bbc4:	jmp    DWORD PTR ds:0x41cda0
  41bbca:	jmp    DWORD PTR ds:0x41cda4
  41bbd0:	jmp    DWORD PTR ds:0x41cda8
  41bbd6:	jmp    DWORD PTR ds:0x41cdac
  41bbdc:	jmp    DWORD PTR ds:0x41cdb0
  41bbe2:	jmp    DWORD PTR ds:0x41cdb4
  41bbe8:	jmp    DWORD PTR ds:0x41cdb8
  41bbee:	jmp    DWORD PTR ds:0x41cdbc
  41bbf4:	jmp    DWORD PTR ds:0x41cdc0
  41bbfa:	jmp    DWORD PTR ds:0x41cdc4
  41bc00:	jmp    DWORD PTR ds:0x41cdc8
  41bc06:	jmp    DWORD PTR ds:0x41cdcc
  41bc0c:	jmp    DWORD PTR ds:0x41cdd0
  41bc12:	jmp    DWORD PTR ds:0x41cdd4
  41bc18:	jmp    DWORD PTR ds:0x41cdd8
  41bc1e:	jmp    DWORD PTR ds:0x41cddc
  41bc24:	jmp    DWORD PTR ds:0x41cde0
  41bc2a:	jmp    DWORD PTR ds:0x41cde4
  41bc30:	jmp    DWORD PTR ds:0x41cde8
  41bc36:	jmp    DWORD PTR ds:0x41cdec
  41bc3c:	jmp    DWORD PTR ds:0x41cdf0
  41bc42:	jmp    DWORD PTR ds:0x41cdf4
  41bc48:	jmp    DWORD PTR ds:0x41cdf8
  41bc4e:	jmp    DWORD PTR ds:0x41cdfc
  41bc54:	jmp    DWORD PTR ds:0x41ce00
  41bc5a:	jmp    DWORD PTR ds:0x41ce04
  41bc60:	jmp    DWORD PTR ds:0x41ce08
  41bc66:	jmp    DWORD PTR ds:0x41ce0c
  41bc6c:	jmp    DWORD PTR ds:0x41ce10
  41bc72:	jmp    DWORD PTR ds:0x41ce14
  41bc78:	jmp    DWORD PTR ds:0x41ce18
  41bc7e:	jmp    DWORD PTR ds:0x41ce1c
  41bc84:	jmp    DWORD PTR ds:0x41ce20
  41bc8a:	jmp    DWORD PTR ds:0x41ce24
  41bc90:	jmp    DWORD PTR ds:0x41ce28
  41bc96:	jmp    DWORD PTR ds:0x41ce2c
  41bc9c:	jmp    DWORD PTR ds:0x41ce30
  41bca2:	jmp    DWORD PTR ds:0x41ce34
  41bca8:	jmp    DWORD PTR ds:0x41ce38
  41bcae:	jmp    DWORD PTR ds:0x41ce3c

Disassembly of section .text5:

0041f000 <.text5>:
  41f000:	add    DWORD PTR [ecx],eax
  41f002:	add    DWORD PTR [ecx],eax
  41f004:	add    DWORD PTR [ecx],eax
  41f006:	add    DWORD PTR [ecx],eax
  41f008:	add    DWORD PTR [ecx],eax
  41f00a:	add    DWORD PTR [ecx],eax
  41f00c:	add    DWORD PTR [ecx],eax
  41f00e:	add    DWORD PTR [ecx],eax
  41f010:	add    DWORD PTR [ecx],eax
  41f012:	add    DWORD PTR [ecx],eax
  41f014:	add    DWORD PTR [ecx],eax
  41f016:	add    DWORD PTR [ecx],eax
  41f018:	add    DWORD PTR [ecx],eax
  41f01a:	add    DWORD PTR [ecx],eax
  41f01c:	add    DWORD PTR [ecx],eax
  41f01e:	add    DWORD PTR [ecx],eax
  41f020:	add    DWORD PTR [ecx],eax
  41f022:	add    DWORD PTR [ecx],eax
  41f024:	add    DWORD PTR [ecx],eax
  41f026:	add    DWORD PTR [ecx],eax
  41f028:	add    DWORD PTR [ecx],eax
  41f02a:	add    DWORD PTR [ecx],eax
  41f02c:	add    DWORD PTR [ecx],eax
  41f02e:	add    DWORD PTR [ecx],eax
  41f030:	add    DWORD PTR [ecx],eax
  41f032:	add    DWORD PTR [ecx],eax
  41f034:	add    DWORD PTR [ecx],eax
  41f036:	add    DWORD PTR [ecx],eax
  41f038:	add    DWORD PTR [ecx],eax
  41f03a:	add    DWORD PTR [ecx],eax
  41f03c:	add    DWORD PTR [ecx],eax
  41f03e:	add    DWORD PTR [ecx],eax
  41f040:	add    DWORD PTR [ecx],eax
  41f042:	add    DWORD PTR [ecx],eax
  41f044:	add    DWORD PTR [ecx],eax
  41f046:	add    DWORD PTR [ecx],eax
  41f048:	add    DWORD PTR [ecx],eax
  41f04a:	add    DWORD PTR [ecx],eax
  41f04c:	add    DWORD PTR [ecx],eax
  41f04e:	add    DWORD PTR [ecx],eax
  41f050:	add    DWORD PTR [ecx],eax
  41f052:	add    DWORD PTR [ecx],eax
  41f054:	add    DWORD PTR [ecx],eax
  41f056:	add    DWORD PTR [ecx],eax
  41f058:	add    DWORD PTR [ecx],eax
  41f05a:	add    DWORD PTR [ecx],eax
  41f05c:	add    DWORD PTR [ecx],eax
  41f05e:	add    DWORD PTR [ecx],eax
  41f060:	add    DWORD PTR [ecx],eax
  41f062:	add    DWORD PTR [ecx],eax
  41f064:	add    DWORD PTR [ecx],eax
  41f066:	add    DWORD PTR [ecx],eax
  41f068:	add    DWORD PTR [ecx],eax
  41f06a:	add    DWORD PTR [ecx],eax
  41f06c:	add    DWORD PTR [ecx],eax
  41f06e:	add    DWORD PTR [ecx],eax
  41f070:	add    DWORD PTR [ecx],eax
  41f072:	add    DWORD PTR [ecx],eax
  41f074:	add    DWORD PTR [ecx],eax
  41f076:	add    DWORD PTR [ecx],eax
  41f078:	add    DWORD PTR [ecx],eax
  41f07a:	add    DWORD PTR [ecx],eax
  41f07c:	add    DWORD PTR [ecx],eax
  41f07e:	add    DWORD PTR [ecx],eax
  41f080:	add    DWORD PTR [ecx],eax
  41f082:	add    DWORD PTR [ecx],eax
  41f084:	add    DWORD PTR [ecx],eax
  41f086:	add    DWORD PTR [ecx],eax
  41f088:	add    DWORD PTR [ecx],eax
  41f08a:	add    DWORD PTR [ecx],eax
  41f08c:	add    DWORD PTR [ecx],eax
  41f08e:	add    DWORD PTR [ecx],eax
  41f090:	add    DWORD PTR [ecx],eax
  41f092:	add    DWORD PTR [ecx],eax
  41f094:	add    DWORD PTR [ecx],eax
  41f096:	add    DWORD PTR [ecx],eax
  41f098:	add    DWORD PTR [ecx],eax
  41f09a:	add    DWORD PTR [ecx],eax
  41f09c:	add    DWORD PTR [ecx],eax
  41f09e:	add    DWORD PTR [ecx],eax
  41f0a0:	add    DWORD PTR [ecx],eax
  41f0a2:	add    DWORD PTR [ecx],eax
  41f0a4:	add    DWORD PTR [ecx],eax
  41f0a6:	add    DWORD PTR [ecx],eax
  41f0a8:	add    DWORD PTR [ecx],eax
  41f0aa:	add    DWORD PTR [ecx],eax
  41f0ac:	add    DWORD PTR [ecx],eax
  41f0ae:	add    DWORD PTR [ecx],eax
  41f0b0:	add    DWORD PTR [ecx],eax
  41f0b2:	add    DWORD PTR [ecx],eax
  41f0b4:	add    DWORD PTR [ecx],eax
  41f0b6:	add    DWORD PTR [ecx],eax
  41f0b8:	add    DWORD PTR [ecx],eax
  41f0ba:	add    DWORD PTR [ecx],eax
  41f0bc:	add    DWORD PTR [ecx],eax
  41f0be:	add    DWORD PTR [ecx],eax
  41f0c0:	add    DWORD PTR [ecx],eax
  41f0c2:	add    DWORD PTR [ecx],eax
  41f0c4:	add    DWORD PTR [ecx],eax
  41f0c6:	add    DWORD PTR [ecx],eax
  41f0c8:	add    DWORD PTR [ecx],eax
  41f0ca:	add    DWORD PTR [ecx],eax
  41f0cc:	add    DWORD PTR [ecx],eax
  41f0ce:	add    DWORD PTR [ecx],eax
  41f0d0:	add    DWORD PTR [ecx],eax
  41f0d2:	add    DWORD PTR [ecx],eax
  41f0d4:	add    DWORD PTR [ecx],eax
  41f0d6:	add    DWORD PTR [ecx],eax
  41f0d8:	add    DWORD PTR [ecx],eax
  41f0da:	add    DWORD PTR [ecx],eax
  41f0dc:	add    DWORD PTR [ecx],eax
  41f0de:	add    DWORD PTR [ecx],eax
  41f0e0:	add    DWORD PTR [ecx],eax
  41f0e2:	add    DWORD PTR [ecx],eax
  41f0e4:	add    DWORD PTR [ecx],eax
  41f0e6:	add    DWORD PTR [ecx],eax
  41f0e8:	add    DWORD PTR [ecx],eax
  41f0ea:	add    DWORD PTR [ecx],eax
  41f0ec:	add    DWORD PTR [ecx],eax
  41f0ee:	add    DWORD PTR [ecx],eax
  41f0f0:	add    DWORD PTR [ecx],eax
  41f0f2:	add    DWORD PTR [ecx],eax
  41f0f4:	add    DWORD PTR [ecx],eax
  41f0f6:	add    DWORD PTR [ecx],eax
  41f0f8:	add    DWORD PTR [ecx],eax
  41f0fa:	add    DWORD PTR [ecx],eax
  41f0fc:	add    DWORD PTR [ecx],eax
  41f0fe:	add    DWORD PTR [ecx],eax
  41f100:	add    DWORD PTR [ecx],eax
  41f102:	add    DWORD PTR [ecx],eax
  41f104:	add    DWORD PTR [ecx],eax
  41f106:	add    DWORD PTR [ecx],eax
  41f108:	add    DWORD PTR [ecx],eax
  41f10a:	add    DWORD PTR [ecx],eax
  41f10c:	add    DWORD PTR [ecx],eax
  41f10e:	add    DWORD PTR [ecx],eax
  41f110:	add    DWORD PTR [ecx],eax
  41f112:	add    DWORD PTR [ecx],eax
  41f114:	add    DWORD PTR [ecx],eax
  41f116:	add    DWORD PTR [ecx],eax
  41f118:	add    DWORD PTR [ecx],eax
  41f11a:	add    DWORD PTR [ecx],eax
  41f11c:	add    DWORD PTR [ecx],eax
  41f11e:	add    DWORD PTR [ecx],eax
  41f120:	add    DWORD PTR [ecx],eax
  41f122:	add    DWORD PTR [ecx],eax
  41f124:	add    DWORD PTR [ecx],eax
  41f126:	add    DWORD PTR [ecx],eax
  41f128:	add    DWORD PTR [ecx],eax
  41f12a:	add    DWORD PTR [ecx],eax
  41f12c:	add    DWORD PTR [ecx],eax
  41f12e:	add    DWORD PTR [ecx],eax
  41f130:	add    DWORD PTR [ecx],eax
  41f132:	add    DWORD PTR [ecx],eax
  41f134:	add    DWORD PTR [ecx],eax
  41f136:	add    DWORD PTR [ecx],eax
  41f138:	add    DWORD PTR [ecx],eax
  41f13a:	add    DWORD PTR [ecx],eax
  41f13c:	add    DWORD PTR [ecx],eax
  41f13e:	add    DWORD PTR [ecx],eax
  41f140:	add    DWORD PTR [ecx],eax
  41f142:	add    DWORD PTR [ecx],eax
  41f144:	add    DWORD PTR [ecx],eax
  41f146:	add    DWORD PTR [ecx],eax
  41f148:	add    DWORD PTR [ecx],eax
  41f14a:	add    DWORD PTR [ecx],eax
  41f14c:	add    DWORD PTR [ecx],eax
  41f14e:	add    DWORD PTR [ecx],eax
  41f150:	add    DWORD PTR [ecx],eax
  41f152:	add    DWORD PTR [ecx],eax
  41f154:	add    DWORD PTR [ecx],eax
  41f156:	add    DWORD PTR [ecx],eax
  41f158:	add    DWORD PTR [ecx],eax
  41f15a:	add    DWORD PTR [ecx],eax
  41f15c:	add    DWORD PTR [ecx],eax
  41f15e:	add    DWORD PTR [ecx],eax
  41f160:	add    DWORD PTR [ecx],eax
  41f162:	add    DWORD PTR [ecx],eax
  41f164:	add    DWORD PTR [ecx],eax
  41f166:	add    DWORD PTR [ecx],eax
  41f168:	add    DWORD PTR [ecx],eax
  41f16a:	add    DWORD PTR [ecx],eax
  41f16c:	add    DWORD PTR [ecx],eax
  41f16e:	add    DWORD PTR [ecx],eax
  41f170:	add    DWORD PTR [ecx],eax
  41f172:	add    DWORD PTR [ecx],eax
  41f174:	add    DWORD PTR [ecx],eax
  41f176:	add    DWORD PTR [ecx],eax
  41f178:	add    DWORD PTR [ecx],eax
  41f17a:	add    DWORD PTR [ecx],eax
  41f17c:	add    DWORD PTR [ecx],eax
  41f17e:	add    DWORD PTR [ecx],eax
  41f180:	add    DWORD PTR [ecx],eax
  41f182:	add    DWORD PTR [ecx],eax
  41f184:	add    DWORD PTR [ecx],eax
  41f186:	add    DWORD PTR [ecx],eax
  41f188:	add    DWORD PTR [ecx],eax
  41f18a:	add    DWORD PTR [ecx],eax
  41f18c:	add    DWORD PTR [ecx],eax
  41f18e:	add    DWORD PTR [ecx],eax
  41f190:	add    DWORD PTR [ecx],eax
  41f192:	add    DWORD PTR [ecx],eax
  41f194:	add    DWORD PTR [ecx],eax
  41f196:	add    DWORD PTR [ecx],eax
  41f198:	add    DWORD PTR [ecx],eax
  41f19a:	add    DWORD PTR [ecx],eax
  41f19c:	add    DWORD PTR [ecx],eax
  41f19e:	add    DWORD PTR [ecx],eax
  41f1a0:	add    DWORD PTR [ecx],eax
  41f1a2:	add    DWORD PTR [ecx],eax
  41f1a4:	add    DWORD PTR [ecx],eax
  41f1a6:	add    DWORD PTR [ecx],eax
  41f1a8:	add    DWORD PTR [ecx],eax
  41f1aa:	add    DWORD PTR [ecx],eax
  41f1ac:	add    DWORD PTR [ecx],eax
  41f1ae:	add    DWORD PTR [ecx],eax
  41f1b0:	add    DWORD PTR [ecx],eax
  41f1b2:	add    DWORD PTR [ecx],eax
  41f1b4:	add    DWORD PTR [ecx],eax
  41f1b6:	add    DWORD PTR [ecx],eax
  41f1b8:	add    DWORD PTR [ecx],eax
  41f1ba:	add    DWORD PTR [ecx],eax
  41f1bc:	add    DWORD PTR [ecx],eax
  41f1be:	add    DWORD PTR [ecx],eax
  41f1c0:	add    DWORD PTR [ecx],eax
  41f1c2:	add    DWORD PTR [ecx],eax
  41f1c4:	add    DWORD PTR [ecx],eax
  41f1c6:	add    DWORD PTR [ecx],eax
  41f1c8:	add    DWORD PTR [ecx],eax
  41f1ca:	add    DWORD PTR [ecx],eax
  41f1cc:	add    DWORD PTR [ecx],eax
  41f1ce:	add    DWORD PTR [ecx],eax
  41f1d0:	add    DWORD PTR [ecx],eax
  41f1d2:	add    DWORD PTR [ecx],eax
  41f1d4:	add    DWORD PTR [ecx],eax
  41f1d6:	add    DWORD PTR [ecx],eax
  41f1d8:	add    DWORD PTR [ecx],eax
  41f1da:	add    DWORD PTR [ecx],eax
  41f1dc:	add    DWORD PTR [ecx],eax
  41f1de:	add    DWORD PTR [ecx],eax
  41f1e0:	add    DWORD PTR [ecx],eax
  41f1e2:	add    DWORD PTR [ecx],eax
  41f1e4:	add    DWORD PTR [ecx],eax
  41f1e6:	add    DWORD PTR [ecx],eax
  41f1e8:	add    DWORD PTR [ecx],eax
  41f1ea:	add    DWORD PTR [ecx],eax
  41f1ec:	add    DWORD PTR [ecx],eax
  41f1ee:	add    DWORD PTR [ecx],eax
  41f1f0:	add    DWORD PTR [ecx],eax
  41f1f2:	add    DWORD PTR [ecx],eax
  41f1f4:	add    DWORD PTR [ecx],eax
  41f1f6:	add    DWORD PTR [ecx],eax
  41f1f8:	add    DWORD PTR [ecx],eax
  41f1fa:	add    DWORD PTR [ecx],eax
  41f1fc:	add    DWORD PTR [ecx],eax
  41f1fe:	add    DWORD PTR [ecx],eax
  41f200:	add    DWORD PTR [ecx],eax
  41f202:	add    DWORD PTR [ecx],eax
  41f204:	add    DWORD PTR [ecx],eax
  41f206:	add    DWORD PTR [ecx],eax
  41f208:	add    DWORD PTR [ecx],eax
  41f20a:	add    DWORD PTR [ecx],eax
  41f20c:	add    DWORD PTR [ecx],eax
  41f20e:	add    DWORD PTR [ecx],eax
  41f210:	add    DWORD PTR [ecx],eax
  41f212:	add    DWORD PTR [ecx],eax
  41f214:	add    DWORD PTR [ecx],eax
  41f216:	add    DWORD PTR [ecx],eax
  41f218:	add    DWORD PTR [ecx],eax
  41f21a:	add    DWORD PTR [ecx],eax
  41f21c:	add    DWORD PTR [ecx],eax
  41f21e:	add    DWORD PTR [ecx],eax
  41f220:	add    DWORD PTR [ecx],eax
  41f222:	add    DWORD PTR [ecx],eax
  41f224:	add    DWORD PTR [ecx],eax
  41f226:	add    DWORD PTR [ecx],eax
  41f228:	add    DWORD PTR [ecx],eax
  41f22a:	add    DWORD PTR [ecx],eax
  41f22c:	add    DWORD PTR [ecx],eax
  41f22e:	add    DWORD PTR [ecx],eax
  41f230:	add    DWORD PTR [ecx],eax
  41f232:	add    DWORD PTR [ecx],eax
  41f234:	add    DWORD PTR [ecx],eax
  41f236:	add    DWORD PTR [ecx],eax
  41f238:	add    DWORD PTR [ecx],eax
  41f23a:	add    DWORD PTR [ecx],eax
  41f23c:	add    DWORD PTR [ecx],eax
  41f23e:	add    DWORD PTR [ecx],eax
  41f240:	add    DWORD PTR [ecx],eax
  41f242:	add    DWORD PTR [ecx],eax
  41f244:	add    DWORD PTR [ecx],eax
  41f246:	add    DWORD PTR [ecx],eax
  41f248:	add    DWORD PTR [ecx],eax
  41f24a:	add    DWORD PTR [ecx],eax
  41f24c:	add    DWORD PTR [ecx],eax
  41f24e:	add    DWORD PTR [ecx],eax
  41f250:	add    DWORD PTR [ecx],eax
  41f252:	add    DWORD PTR [ecx],eax
  41f254:	add    DWORD PTR [ecx],eax
  41f256:	add    DWORD PTR [ecx],eax
  41f258:	add    DWORD PTR [ecx],eax
  41f25a:	add    DWORD PTR [ecx],eax
  41f25c:	add    DWORD PTR [ecx],eax
  41f25e:	add    DWORD PTR [ecx],eax
  41f260:	add    DWORD PTR [ecx],eax
  41f262:	add    DWORD PTR [ecx],eax
  41f264:	add    DWORD PTR [ecx],eax
  41f266:	add    DWORD PTR [ecx],eax
  41f268:	add    DWORD PTR [ecx],eax
  41f26a:	add    DWORD PTR [ecx],eax
  41f26c:	add    DWORD PTR [ecx],eax
  41f26e:	add    DWORD PTR [ecx],eax
  41f270:	add    DWORD PTR [ecx],eax
  41f272:	add    DWORD PTR [ecx],eax
  41f274:	add    DWORD PTR [ecx],eax
  41f276:	add    DWORD PTR [ecx],eax
  41f278:	add    DWORD PTR [ecx],eax
  41f27a:	add    DWORD PTR [ecx],eax
  41f27c:	add    DWORD PTR [ecx],eax
  41f27e:	add    DWORD PTR [ecx],eax
  41f280:	add    DWORD PTR [ecx],eax
  41f282:	add    DWORD PTR [ecx],eax
  41f284:	add    DWORD PTR [ecx],eax
  41f286:	add    DWORD PTR [ecx],eax
  41f288:	add    DWORD PTR [ecx],eax
  41f28a:	add    DWORD PTR [ecx],eax
  41f28c:	add    DWORD PTR [ecx],eax
  41f28e:	add    DWORD PTR [ecx],eax
  41f290:	add    DWORD PTR [ecx],eax
  41f292:	add    DWORD PTR [ecx],eax
  41f294:	add    DWORD PTR [ecx],eax
  41f296:	add    DWORD PTR [ecx],eax
  41f298:	add    DWORD PTR [ecx],eax
  41f29a:	add    DWORD PTR [ecx],eax
  41f29c:	add    DWORD PTR [ecx],eax
  41f29e:	add    DWORD PTR [ecx],eax
  41f2a0:	add    DWORD PTR [ecx],eax
  41f2a2:	add    DWORD PTR [ecx],eax
  41f2a4:	add    DWORD PTR [ecx],eax
  41f2a6:	add    DWORD PTR [ecx],eax
  41f2a8:	add    DWORD PTR [ecx],eax
  41f2aa:	add    DWORD PTR [ecx],eax
  41f2ac:	add    DWORD PTR [ecx],eax
  41f2ae:	add    DWORD PTR [ecx],eax
  41f2b0:	add    DWORD PTR [ecx],eax
  41f2b2:	add    DWORD PTR [ecx],eax
  41f2b4:	add    DWORD PTR [ecx],eax
  41f2b6:	add    DWORD PTR [ecx],eax
  41f2b8:	add    DWORD PTR [ecx],eax
  41f2ba:	add    DWORD PTR [ecx],eax
  41f2bc:	add    DWORD PTR [ecx],eax
  41f2be:	add    DWORD PTR [ecx],eax
  41f2c0:	add    DWORD PTR [ecx],eax
  41f2c2:	add    DWORD PTR [ecx],eax
  41f2c4:	add    DWORD PTR [ecx],eax
  41f2c6:	add    DWORD PTR [ecx],eax
  41f2c8:	add    DWORD PTR [ecx],eax
  41f2ca:	add    DWORD PTR [ecx],eax
  41f2cc:	add    DWORD PTR [ecx],eax
  41f2ce:	add    DWORD PTR [ecx],eax
  41f2d0:	add    DWORD PTR [ecx],eax
  41f2d2:	add    DWORD PTR [ecx],eax
  41f2d4:	add    DWORD PTR [ecx],eax
  41f2d6:	add    DWORD PTR [ecx],eax
  41f2d8:	add    DWORD PTR [ecx],eax
  41f2da:	add    DWORD PTR [ecx],eax
  41f2dc:	add    DWORD PTR [ecx],eax
  41f2de:	add    DWORD PTR [ecx],eax
  41f2e0:	add    DWORD PTR [ecx],eax
  41f2e2:	add    DWORD PTR [ecx],eax
  41f2e4:	add    DWORD PTR [ecx],eax
  41f2e6:	add    DWORD PTR [ecx],eax
  41f2e8:	add    DWORD PTR [ecx],eax
  41f2ea:	add    DWORD PTR [ecx],eax
  41f2ec:	add    DWORD PTR [ecx],eax
  41f2ee:	add    DWORD PTR [ecx],eax
  41f2f0:	add    DWORD PTR [ecx],eax
  41f2f2:	add    DWORD PTR [ecx],eax
  41f2f4:	add    DWORD PTR [ecx],eax
  41f2f6:	add    DWORD PTR [ecx],eax
  41f2f8:	add    DWORD PTR [ecx],eax
  41f2fa:	add    DWORD PTR [ecx],eax
  41f2fc:	add    DWORD PTR [ecx],eax
  41f2fe:	add    DWORD PTR [ecx],eax
  41f300:	add    DWORD PTR [ecx],eax
  41f302:	add    DWORD PTR [ecx],eax
  41f304:	add    DWORD PTR [ecx],eax
  41f306:	add    DWORD PTR [ecx],eax
  41f308:	add    DWORD PTR [ecx],eax
  41f30a:	add    DWORD PTR [ecx],eax
  41f30c:	add    DWORD PTR [ecx],eax
  41f30e:	add    DWORD PTR [ecx],eax
  41f310:	add    DWORD PTR [ecx],eax
  41f312:	add    DWORD PTR [ecx],eax
  41f314:	add    DWORD PTR [ecx],eax
  41f316:	add    DWORD PTR [ecx],eax
  41f318:	add    DWORD PTR [ecx],eax
  41f31a:	add    DWORD PTR [ecx],eax
  41f31c:	add    DWORD PTR [ecx],eax
  41f31e:	add    DWORD PTR [ecx],eax
  41f320:	add    DWORD PTR [ecx],eax
  41f322:	add    DWORD PTR [ecx],eax
  41f324:	add    DWORD PTR [ecx],eax
  41f326:	add    DWORD PTR [ecx],eax
  41f328:	add    DWORD PTR [ecx],eax
  41f32a:	add    DWORD PTR [ecx],eax
  41f32c:	add    DWORD PTR [ecx],eax
  41f32e:	add    DWORD PTR [ecx],eax
  41f330:	add    DWORD PTR [ecx],eax
  41f332:	add    DWORD PTR [ecx],eax
  41f334:	add    DWORD PTR [ecx],eax
  41f336:	add    DWORD PTR [ecx],eax
  41f338:	add    DWORD PTR [ecx],eax
  41f33a:	add    DWORD PTR [ecx],eax
  41f33c:	add    DWORD PTR [ecx],eax
  41f33e:	add    DWORD PTR [ecx],eax
  41f340:	add    DWORD PTR [ecx],eax
  41f342:	add    DWORD PTR [ecx],eax
  41f344:	add    DWORD PTR [ecx],eax
  41f346:	add    DWORD PTR [ecx],eax
  41f348:	add    DWORD PTR [ecx],eax
  41f34a:	add    DWORD PTR [ecx],eax
  41f34c:	add    DWORD PTR [ecx],eax
  41f34e:	add    DWORD PTR [ecx],eax
  41f350:	add    DWORD PTR [ecx],eax
  41f352:	add    DWORD PTR [ecx],eax
  41f354:	add    DWORD PTR [ecx],eax
  41f356:	add    DWORD PTR [ecx],eax
  41f358:	add    DWORD PTR [ecx],eax
  41f35a:	add    DWORD PTR [ecx],eax
  41f35c:	add    DWORD PTR [ecx],eax
  41f35e:	add    DWORD PTR [ecx],eax
  41f360:	add    DWORD PTR [ecx],eax
  41f362:	add    DWORD PTR [ecx],eax
  41f364:	add    DWORD PTR [ecx],eax
  41f366:	add    DWORD PTR [ecx],eax
  41f368:	add    DWORD PTR [ecx],eax
  41f36a:	add    DWORD PTR [ecx],eax
  41f36c:	add    DWORD PTR [ecx],eax
  41f36e:	add    DWORD PTR [ecx],eax
  41f370:	add    DWORD PTR [ecx],eax
  41f372:	add    DWORD PTR [ecx],eax
  41f374:	add    DWORD PTR [ecx],eax
  41f376:	add    DWORD PTR [ecx],eax
  41f378:	add    DWORD PTR [ecx],eax
  41f37a:	add    DWORD PTR [ecx],eax
  41f37c:	add    DWORD PTR [ecx],eax
  41f37e:	add    DWORD PTR [ecx],eax
  41f380:	add    DWORD PTR [ecx],eax
  41f382:	add    DWORD PTR [ecx],eax
  41f384:	add    DWORD PTR [ecx],eax
  41f386:	add    DWORD PTR [ecx],eax
  41f388:	add    DWORD PTR [ecx],eax
  41f38a:	add    DWORD PTR [ecx],eax
  41f38c:	add    DWORD PTR [ecx],eax
  41f38e:	add    DWORD PTR [ecx],eax
  41f390:	add    DWORD PTR [ecx],eax
  41f392:	add    DWORD PTR [ecx],eax
  41f394:	add    DWORD PTR [ecx],eax
  41f396:	add    DWORD PTR [ecx],eax
  41f398:	add    DWORD PTR [ecx],eax
  41f39a:	add    DWORD PTR [ecx],eax
  41f39c:	add    DWORD PTR [ecx],eax
  41f39e:	add    DWORD PTR [ecx],eax
  41f3a0:	add    DWORD PTR [ecx],eax
  41f3a2:	add    DWORD PTR [ecx],eax
  41f3a4:	add    DWORD PTR [ecx],eax
  41f3a6:	add    DWORD PTR [ecx],eax
  41f3a8:	add    DWORD PTR [ecx],eax
  41f3aa:	add    DWORD PTR [ecx],eax
  41f3ac:	add    DWORD PTR [ecx],eax
  41f3ae:	add    DWORD PTR [ecx],eax
  41f3b0:	add    DWORD PTR [ecx],eax
  41f3b2:	add    DWORD PTR [ecx],eax
  41f3b4:	add    DWORD PTR [ecx],eax
  41f3b6:	add    DWORD PTR [ecx],eax
  41f3b8:	add    DWORD PTR [ecx],eax
  41f3ba:	add    DWORD PTR [ecx],eax
  41f3bc:	add    DWORD PTR [ecx],eax
  41f3be:	add    DWORD PTR [ecx],eax
  41f3c0:	add    DWORD PTR [ecx],eax
  41f3c2:	add    DWORD PTR [ecx],eax
  41f3c4:	add    DWORD PTR [ecx],eax
  41f3c6:	add    DWORD PTR [ecx],eax
  41f3c8:	add    DWORD PTR [ecx],eax
  41f3ca:	add    DWORD PTR [ecx],eax
  41f3cc:	add    DWORD PTR [ecx],eax
  41f3ce:	add    DWORD PTR [ecx],eax
  41f3d0:	add    DWORD PTR [ecx],eax
  41f3d2:	add    DWORD PTR [ecx],eax
  41f3d4:	add    DWORD PTR [ecx],eax
  41f3d6:	add    DWORD PTR [ecx],eax
  41f3d8:	add    DWORD PTR [ecx],eax
  41f3da:	add    DWORD PTR [ecx],eax
  41f3dc:	add    DWORD PTR [ecx],eax
  41f3de:	add    DWORD PTR [ecx],eax
  41f3e0:	add    DWORD PTR [ecx],eax
  41f3e2:	add    DWORD PTR [ecx],eax
  41f3e4:	add    DWORD PTR [ecx],eax
  41f3e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text6:

00420000 <.text6>:
  420000:	add    DWORD PTR [ecx],eax
  420002:	add    DWORD PTR [ecx],eax
  420004:	add    DWORD PTR [ecx],eax
  420006:	add    DWORD PTR [ecx],eax
  420008:	add    DWORD PTR [ecx],eax
  42000a:	add    DWORD PTR [ecx],eax
  42000c:	add    DWORD PTR [ecx],eax
  42000e:	add    DWORD PTR [ecx],eax
  420010:	add    DWORD PTR [ecx],eax
  420012:	add    DWORD PTR [ecx],eax
  420014:	add    DWORD PTR [ecx],eax
  420016:	add    DWORD PTR [ecx],eax
  420018:	add    DWORD PTR [ecx],eax
  42001a:	add    DWORD PTR [ecx],eax
  42001c:	add    DWORD PTR [ecx],eax
  42001e:	add    DWORD PTR [ecx],eax
  420020:	add    DWORD PTR [ecx],eax
  420022:	add    DWORD PTR [ecx],eax
  420024:	add    DWORD PTR [ecx],eax
  420026:	add    DWORD PTR [ecx],eax
  420028:	add    DWORD PTR [ecx],eax
  42002a:	add    DWORD PTR [ecx],eax
  42002c:	add    DWORD PTR [ecx],eax
  42002e:	add    DWORD PTR [ecx],eax
  420030:	add    DWORD PTR [ecx],eax
  420032:	add    DWORD PTR [ecx],eax
  420034:	add    DWORD PTR [ecx],eax
  420036:	add    DWORD PTR [ecx],eax
  420038:	add    DWORD PTR [ecx],eax
  42003a:	add    DWORD PTR [ecx],eax
  42003c:	add    DWORD PTR [ecx],eax
  42003e:	add    DWORD PTR [ecx],eax
  420040:	add    DWORD PTR [ecx],eax
  420042:	add    DWORD PTR [ecx],eax
  420044:	add    DWORD PTR [ecx],eax
  420046:	add    DWORD PTR [ecx],eax
  420048:	add    DWORD PTR [ecx],eax
  42004a:	add    DWORD PTR [ecx],eax
  42004c:	add    DWORD PTR [ecx],eax
  42004e:	add    DWORD PTR [ecx],eax
  420050:	add    DWORD PTR [ecx],eax
  420052:	add    DWORD PTR [ecx],eax
  420054:	add    DWORD PTR [ecx],eax
  420056:	add    DWORD PTR [ecx],eax
  420058:	add    DWORD PTR [ecx],eax
  42005a:	add    DWORD PTR [ecx],eax
  42005c:	add    DWORD PTR [ecx],eax
  42005e:	add    DWORD PTR [ecx],eax
  420060:	add    DWORD PTR [ecx],eax
  420062:	add    DWORD PTR [ecx],eax
  420064:	add    DWORD PTR [ecx],eax
  420066:	add    DWORD PTR [ecx],eax
  420068:	add    DWORD PTR [ecx],eax
  42006a:	add    DWORD PTR [ecx],eax
  42006c:	add    DWORD PTR [ecx],eax
  42006e:	add    DWORD PTR [ecx],eax
  420070:	add    DWORD PTR [ecx],eax
  420072:	add    DWORD PTR [ecx],eax
  420074:	add    DWORD PTR [ecx],eax
  420076:	add    DWORD PTR [ecx],eax
  420078:	add    DWORD PTR [ecx],eax
  42007a:	add    DWORD PTR [ecx],eax
  42007c:	add    DWORD PTR [ecx],eax
  42007e:	add    DWORD PTR [ecx],eax
  420080:	add    DWORD PTR [ecx],eax
  420082:	add    DWORD PTR [ecx],eax
  420084:	add    DWORD PTR [ecx],eax
  420086:	add    DWORD PTR [ecx],eax
  420088:	add    DWORD PTR [ecx],eax
  42008a:	add    DWORD PTR [ecx],eax
  42008c:	add    DWORD PTR [ecx],eax
  42008e:	add    DWORD PTR [ecx],eax
  420090:	add    DWORD PTR [ecx],eax
  420092:	add    DWORD PTR [ecx],eax
  420094:	add    DWORD PTR [ecx],eax
  420096:	add    DWORD PTR [ecx],eax
  420098:	add    DWORD PTR [ecx],eax
  42009a:	add    DWORD PTR [ecx],eax
  42009c:	add    DWORD PTR [ecx],eax
  42009e:	add    DWORD PTR [ecx],eax
  4200a0:	add    DWORD PTR [ecx],eax
  4200a2:	add    DWORD PTR [ecx],eax
  4200a4:	add    DWORD PTR [ecx],eax
  4200a6:	add    DWORD PTR [ecx],eax
  4200a8:	add    DWORD PTR [ecx],eax
  4200aa:	add    DWORD PTR [ecx],eax
  4200ac:	add    DWORD PTR [ecx],eax
  4200ae:	add    DWORD PTR [ecx],eax
  4200b0:	add    DWORD PTR [ecx],eax
  4200b2:	add    DWORD PTR [ecx],eax
  4200b4:	add    DWORD PTR [ecx],eax
  4200b6:	add    DWORD PTR [ecx],eax
  4200b8:	add    DWORD PTR [ecx],eax
  4200ba:	add    DWORD PTR [ecx],eax
  4200bc:	add    DWORD PTR [ecx],eax
  4200be:	add    DWORD PTR [ecx],eax
  4200c0:	add    DWORD PTR [ecx],eax
  4200c2:	add    DWORD PTR [ecx],eax
  4200c4:	add    DWORD PTR [ecx],eax
  4200c6:	add    DWORD PTR [ecx],eax
  4200c8:	add    DWORD PTR [ecx],eax
  4200ca:	add    DWORD PTR [ecx],eax
  4200cc:	add    DWORD PTR [ecx],eax
  4200ce:	add    DWORD PTR [ecx],eax
  4200d0:	add    DWORD PTR [ecx],eax
  4200d2:	add    DWORD PTR [ecx],eax
  4200d4:	add    DWORD PTR [ecx],eax
  4200d6:	add    DWORD PTR [ecx],eax
  4200d8:	add    DWORD PTR [ecx],eax
  4200da:	add    DWORD PTR [ecx],eax
  4200dc:	add    DWORD PTR [ecx],eax
  4200de:	add    DWORD PTR [ecx],eax
  4200e0:	add    DWORD PTR [ecx],eax
  4200e2:	add    DWORD PTR [ecx],eax
  4200e4:	add    DWORD PTR [ecx],eax
  4200e6:	add    DWORD PTR [ecx],eax
  4200e8:	add    DWORD PTR [ecx],eax
  4200ea:	add    DWORD PTR [ecx],eax
  4200ec:	add    DWORD PTR [ecx],eax
  4200ee:	add    DWORD PTR [ecx],eax
  4200f0:	add    DWORD PTR [ecx],eax
  4200f2:	add    DWORD PTR [ecx],eax
  4200f4:	add    DWORD PTR [ecx],eax
  4200f6:	add    DWORD PTR [ecx],eax
  4200f8:	add    DWORD PTR [ecx],eax
  4200fa:	add    DWORD PTR [ecx],eax
  4200fc:	add    DWORD PTR [ecx],eax
  4200fe:	add    DWORD PTR [ecx],eax
  420100:	add    DWORD PTR [ecx],eax
  420102:	add    DWORD PTR [ecx],eax
  420104:	add    DWORD PTR [ecx],eax
  420106:	add    DWORD PTR [ecx],eax
  420108:	add    DWORD PTR [ecx],eax
  42010a:	add    DWORD PTR [ecx],eax
  42010c:	add    DWORD PTR [ecx],eax
  42010e:	add    DWORD PTR [ecx],eax
  420110:	add    DWORD PTR [ecx],eax
  420112:	add    DWORD PTR [ecx],eax
  420114:	add    DWORD PTR [ecx],eax
  420116:	add    DWORD PTR [ecx],eax
  420118:	add    DWORD PTR [ecx],eax
  42011a:	add    DWORD PTR [ecx],eax
  42011c:	add    DWORD PTR [ecx],eax
  42011e:	add    DWORD PTR [ecx],eax
  420120:	add    DWORD PTR [ecx],eax
  420122:	add    DWORD PTR [ecx],eax
  420124:	add    DWORD PTR [ecx],eax
  420126:	add    DWORD PTR [ecx],eax
  420128:	add    DWORD PTR [ecx],eax
  42012a:	add    DWORD PTR [ecx],eax
  42012c:	add    DWORD PTR [ecx],eax
  42012e:	add    DWORD PTR [ecx],eax
  420130:	add    DWORD PTR [ecx],eax
  420132:	add    DWORD PTR [ecx],eax
  420134:	add    DWORD PTR [ecx],eax
  420136:	add    DWORD PTR [ecx],eax
  420138:	add    DWORD PTR [ecx],eax
  42013a:	add    DWORD PTR [ecx],eax
  42013c:	add    DWORD PTR [ecx],eax
  42013e:	add    DWORD PTR [ecx],eax
  420140:	add    DWORD PTR [ecx],eax
  420142:	add    DWORD PTR [ecx],eax
  420144:	add    DWORD PTR [ecx],eax
  420146:	add    DWORD PTR [ecx],eax
  420148:	add    DWORD PTR [ecx],eax
  42014a:	add    DWORD PTR [ecx],eax
  42014c:	add    DWORD PTR [ecx],eax
  42014e:	add    DWORD PTR [ecx],eax
  420150:	add    DWORD PTR [ecx],eax
  420152:	add    DWORD PTR [ecx],eax
  420154:	add    DWORD PTR [ecx],eax
  420156:	add    DWORD PTR [ecx],eax
  420158:	add    DWORD PTR [ecx],eax
  42015a:	add    DWORD PTR [ecx],eax
  42015c:	add    DWORD PTR [ecx],eax
  42015e:	add    DWORD PTR [ecx],eax
  420160:	add    DWORD PTR [ecx],eax
  420162:	add    DWORD PTR [ecx],eax
  420164:	add    DWORD PTR [ecx],eax
  420166:	add    DWORD PTR [ecx],eax
  420168:	add    DWORD PTR [ecx],eax
  42016a:	add    DWORD PTR [ecx],eax
  42016c:	add    DWORD PTR [ecx],eax
  42016e:	add    DWORD PTR [ecx],eax
  420170:	add    DWORD PTR [ecx],eax
  420172:	add    DWORD PTR [ecx],eax
  420174:	add    DWORD PTR [ecx],eax
  420176:	add    DWORD PTR [ecx],eax
  420178:	add    DWORD PTR [ecx],eax
  42017a:	add    DWORD PTR [ecx],eax
  42017c:	add    DWORD PTR [ecx],eax
  42017e:	add    DWORD PTR [ecx],eax
  420180:	add    DWORD PTR [ecx],eax
  420182:	add    DWORD PTR [ecx],eax
  420184:	add    DWORD PTR [ecx],eax
  420186:	add    DWORD PTR [ecx],eax
  420188:	add    DWORD PTR [ecx],eax
  42018a:	add    DWORD PTR [ecx],eax
  42018c:	add    DWORD PTR [ecx],eax
  42018e:	add    DWORD PTR [ecx],eax
  420190:	add    DWORD PTR [ecx],eax
  420192:	add    DWORD PTR [ecx],eax
  420194:	add    DWORD PTR [ecx],eax
  420196:	add    DWORD PTR [ecx],eax
  420198:	add    DWORD PTR [ecx],eax
  42019a:	add    DWORD PTR [ecx],eax
  42019c:	add    DWORD PTR [ecx],eax
  42019e:	add    DWORD PTR [ecx],eax
  4201a0:	add    DWORD PTR [ecx],eax
  4201a2:	add    DWORD PTR [ecx],eax
  4201a4:	add    DWORD PTR [ecx],eax
  4201a6:	add    DWORD PTR [ecx],eax
  4201a8:	add    DWORD PTR [ecx],eax
  4201aa:	add    DWORD PTR [ecx],eax
  4201ac:	add    DWORD PTR [ecx],eax
  4201ae:	add    DWORD PTR [ecx],eax
  4201b0:	add    DWORD PTR [ecx],eax
  4201b2:	add    DWORD PTR [ecx],eax
  4201b4:	add    DWORD PTR [ecx],eax
  4201b6:	add    DWORD PTR [ecx],eax
  4201b8:	add    DWORD PTR [ecx],eax
  4201ba:	add    DWORD PTR [ecx],eax
  4201bc:	add    DWORD PTR [ecx],eax
  4201be:	add    DWORD PTR [ecx],eax
  4201c0:	add    DWORD PTR [ecx],eax
  4201c2:	add    DWORD PTR [ecx],eax
  4201c4:	add    DWORD PTR [ecx],eax
  4201c6:	add    DWORD PTR [ecx],eax
  4201c8:	add    DWORD PTR [ecx],eax
  4201ca:	add    DWORD PTR [ecx],eax
  4201cc:	add    DWORD PTR [ecx],eax
  4201ce:	add    DWORD PTR [ecx],eax
  4201d0:	add    DWORD PTR [ecx],eax
  4201d2:	add    DWORD PTR [ecx],eax
  4201d4:	add    DWORD PTR [ecx],eax
  4201d6:	add    DWORD PTR [ecx],eax
  4201d8:	add    DWORD PTR [ecx],eax
  4201da:	add    DWORD PTR [ecx],eax
  4201dc:	add    DWORD PTR [ecx],eax
  4201de:	add    DWORD PTR [ecx],eax
  4201e0:	add    DWORD PTR [ecx],eax
  4201e2:	add    DWORD PTR [ecx],eax
  4201e4:	add    DWORD PTR [ecx],eax
  4201e6:	add    DWORD PTR [ecx],eax
  4201e8:	add    DWORD PTR [ecx],eax
  4201ea:	add    DWORD PTR [ecx],eax
  4201ec:	add    DWORD PTR [ecx],eax
  4201ee:	add    DWORD PTR [ecx],eax
  4201f0:	add    DWORD PTR [ecx],eax
  4201f2:	add    DWORD PTR [ecx],eax
  4201f4:	add    DWORD PTR [ecx],eax
  4201f6:	add    DWORD PTR [ecx],eax
  4201f8:	add    DWORD PTR [ecx],eax
  4201fa:	add    DWORD PTR [ecx],eax
  4201fc:	add    DWORD PTR [ecx],eax
  4201fe:	add    DWORD PTR [ecx],eax
  420200:	add    DWORD PTR [ecx],eax
  420202:	add    DWORD PTR [ecx],eax
  420204:	add    DWORD PTR [ecx],eax
  420206:	add    DWORD PTR [ecx],eax
  420208:	add    DWORD PTR [ecx],eax
  42020a:	add    DWORD PTR [ecx],eax
  42020c:	add    DWORD PTR [ecx],eax
  42020e:	add    DWORD PTR [ecx],eax
  420210:	add    DWORD PTR [ecx],eax
  420212:	add    DWORD PTR [ecx],eax
  420214:	add    DWORD PTR [ecx],eax
  420216:	add    DWORD PTR [ecx],eax
  420218:	add    DWORD PTR [ecx],eax
  42021a:	add    DWORD PTR [ecx],eax
  42021c:	add    DWORD PTR [ecx],eax
  42021e:	add    DWORD PTR [ecx],eax
  420220:	add    DWORD PTR [ecx],eax
  420222:	add    DWORD PTR [ecx],eax
  420224:	add    DWORD PTR [ecx],eax
  420226:	add    DWORD PTR [ecx],eax
  420228:	add    DWORD PTR [ecx],eax
  42022a:	add    DWORD PTR [ecx],eax
  42022c:	add    DWORD PTR [ecx],eax
  42022e:	add    DWORD PTR [ecx],eax
  420230:	add    DWORD PTR [ecx],eax
  420232:	add    DWORD PTR [ecx],eax
  420234:	add    DWORD PTR [ecx],eax
  420236:	add    DWORD PTR [ecx],eax
  420238:	add    DWORD PTR [ecx],eax
  42023a:	add    DWORD PTR [ecx],eax
  42023c:	add    DWORD PTR [ecx],eax
  42023e:	add    DWORD PTR [ecx],eax
  420240:	add    DWORD PTR [ecx],eax
  420242:	add    DWORD PTR [ecx],eax
  420244:	add    DWORD PTR [ecx],eax
  420246:	add    DWORD PTR [ecx],eax
  420248:	add    DWORD PTR [ecx],eax
  42024a:	add    DWORD PTR [ecx],eax
  42024c:	add    DWORD PTR [ecx],eax
  42024e:	add    DWORD PTR [ecx],eax
  420250:	add    DWORD PTR [ecx],eax
  420252:	add    DWORD PTR [ecx],eax
  420254:	add    DWORD PTR [ecx],eax
  420256:	add    DWORD PTR [ecx],eax
  420258:	add    DWORD PTR [ecx],eax
  42025a:	add    DWORD PTR [ecx],eax
  42025c:	add    DWORD PTR [ecx],eax
  42025e:	add    DWORD PTR [ecx],eax
  420260:	add    DWORD PTR [ecx],eax
  420262:	add    DWORD PTR [ecx],eax
  420264:	add    DWORD PTR [ecx],eax
  420266:	add    DWORD PTR [ecx],eax
  420268:	add    DWORD PTR [ecx],eax
  42026a:	add    DWORD PTR [ecx],eax
  42026c:	add    DWORD PTR [ecx],eax
  42026e:	add    DWORD PTR [ecx],eax
  420270:	add    DWORD PTR [ecx],eax
  420272:	add    DWORD PTR [ecx],eax
  420274:	add    DWORD PTR [ecx],eax
  420276:	add    DWORD PTR [ecx],eax
  420278:	add    DWORD PTR [ecx],eax
  42027a:	add    DWORD PTR [ecx],eax
  42027c:	add    DWORD PTR [ecx],eax
  42027e:	add    DWORD PTR [ecx],eax
  420280:	add    DWORD PTR [ecx],eax
  420282:	add    DWORD PTR [ecx],eax
  420284:	add    DWORD PTR [ecx],eax
  420286:	add    DWORD PTR [ecx],eax
  420288:	add    DWORD PTR [ecx],eax
  42028a:	add    DWORD PTR [ecx],eax
  42028c:	add    DWORD PTR [ecx],eax
  42028e:	add    DWORD PTR [ecx],eax
  420290:	add    DWORD PTR [ecx],eax
  420292:	add    DWORD PTR [ecx],eax
  420294:	add    DWORD PTR [ecx],eax
  420296:	add    DWORD PTR [ecx],eax
  420298:	add    DWORD PTR [ecx],eax
  42029a:	add    DWORD PTR [ecx],eax
  42029c:	add    DWORD PTR [ecx],eax
  42029e:	add    DWORD PTR [ecx],eax
  4202a0:	add    DWORD PTR [ecx],eax
  4202a2:	add    DWORD PTR [ecx],eax
  4202a4:	add    DWORD PTR [ecx],eax
  4202a6:	add    DWORD PTR [ecx],eax
  4202a8:	add    DWORD PTR [ecx],eax
  4202aa:	add    DWORD PTR [ecx],eax
  4202ac:	add    DWORD PTR [ecx],eax
  4202ae:	add    DWORD PTR [ecx],eax
  4202b0:	add    DWORD PTR [ecx],eax
  4202b2:	add    DWORD PTR [ecx],eax
  4202b4:	add    DWORD PTR [ecx],eax
  4202b6:	add    DWORD PTR [ecx],eax
  4202b8:	add    DWORD PTR [ecx],eax
  4202ba:	add    DWORD PTR [ecx],eax
  4202bc:	add    DWORD PTR [ecx],eax
  4202be:	add    DWORD PTR [ecx],eax
  4202c0:	add    DWORD PTR [ecx],eax
  4202c2:	add    DWORD PTR [ecx],eax
  4202c4:	add    DWORD PTR [ecx],eax
  4202c6:	add    DWORD PTR [ecx],eax
  4202c8:	add    DWORD PTR [ecx],eax
  4202ca:	add    DWORD PTR [ecx],eax
  4202cc:	add    DWORD PTR [ecx],eax
  4202ce:	add    DWORD PTR [ecx],eax
  4202d0:	add    DWORD PTR [ecx],eax
  4202d2:	add    DWORD PTR [ecx],eax
  4202d4:	add    DWORD PTR [ecx],eax
  4202d6:	add    DWORD PTR [ecx],eax
  4202d8:	add    DWORD PTR [ecx],eax
  4202da:	add    DWORD PTR [ecx],eax
  4202dc:	add    DWORD PTR [ecx],eax
  4202de:	add    DWORD PTR [ecx],eax
  4202e0:	add    DWORD PTR [ecx],eax
  4202e2:	add    DWORD PTR [ecx],eax
  4202e4:	add    DWORD PTR [ecx],eax
  4202e6:	add    DWORD PTR [ecx],eax
  4202e8:	add    DWORD PTR [ecx],eax
  4202ea:	add    DWORD PTR [ecx],eax
  4202ec:	add    DWORD PTR [ecx],eax
  4202ee:	add    DWORD PTR [ecx],eax
  4202f0:	add    DWORD PTR [ecx],eax
  4202f2:	add    DWORD PTR [ecx],eax
  4202f4:	add    DWORD PTR [ecx],eax
  4202f6:	add    DWORD PTR [ecx],eax
  4202f8:	add    DWORD PTR [ecx],eax
  4202fa:	add    DWORD PTR [ecx],eax
  4202fc:	add    DWORD PTR [ecx],eax
  4202fe:	add    DWORD PTR [ecx],eax
  420300:	add    DWORD PTR [ecx],eax
  420302:	add    DWORD PTR [ecx],eax
  420304:	add    DWORD PTR [ecx],eax
  420306:	add    DWORD PTR [ecx],eax
  420308:	add    DWORD PTR [ecx],eax
  42030a:	add    DWORD PTR [ecx],eax
  42030c:	add    DWORD PTR [ecx],eax
  42030e:	add    DWORD PTR [ecx],eax
  420310:	add    DWORD PTR [ecx],eax
  420312:	add    DWORD PTR [ecx],eax
  420314:	add    DWORD PTR [ecx],eax
  420316:	add    DWORD PTR [ecx],eax
  420318:	add    DWORD PTR [ecx],eax
  42031a:	add    DWORD PTR [ecx],eax
  42031c:	add    DWORD PTR [ecx],eax
  42031e:	add    DWORD PTR [ecx],eax
  420320:	add    DWORD PTR [ecx],eax
  420322:	add    DWORD PTR [ecx],eax
  420324:	add    DWORD PTR [ecx],eax
  420326:	add    DWORD PTR [ecx],eax
  420328:	add    DWORD PTR [ecx],eax
  42032a:	add    DWORD PTR [ecx],eax
  42032c:	add    DWORD PTR [ecx],eax
  42032e:	add    DWORD PTR [ecx],eax
  420330:	add    DWORD PTR [ecx],eax
  420332:	add    DWORD PTR [ecx],eax
  420334:	add    DWORD PTR [ecx],eax
  420336:	add    DWORD PTR [ecx],eax
  420338:	add    DWORD PTR [ecx],eax
  42033a:	add    DWORD PTR [ecx],eax
  42033c:	add    DWORD PTR [ecx],eax
  42033e:	add    DWORD PTR [ecx],eax
  420340:	add    DWORD PTR [ecx],eax
  420342:	add    DWORD PTR [ecx],eax
  420344:	add    DWORD PTR [ecx],eax
  420346:	add    DWORD PTR [ecx],eax
  420348:	add    DWORD PTR [ecx],eax
  42034a:	add    DWORD PTR [ecx],eax
  42034c:	add    DWORD PTR [ecx],eax
  42034e:	add    DWORD PTR [ecx],eax
  420350:	add    DWORD PTR [ecx],eax
  420352:	add    DWORD PTR [ecx],eax
  420354:	add    DWORD PTR [ecx],eax
  420356:	add    DWORD PTR [ecx],eax
  420358:	add    DWORD PTR [ecx],eax
  42035a:	add    DWORD PTR [ecx],eax
  42035c:	add    DWORD PTR [ecx],eax
  42035e:	add    DWORD PTR [ecx],eax
  420360:	add    DWORD PTR [ecx],eax
  420362:	add    DWORD PTR [ecx],eax
  420364:	add    DWORD PTR [ecx],eax
  420366:	add    DWORD PTR [ecx],eax
  420368:	add    DWORD PTR [ecx],eax
  42036a:	add    DWORD PTR [ecx],eax
  42036c:	add    DWORD PTR [ecx],eax
  42036e:	add    DWORD PTR [ecx],eax
  420370:	add    DWORD PTR [ecx],eax
  420372:	add    DWORD PTR [ecx],eax
  420374:	add    DWORD PTR [ecx],eax
  420376:	add    DWORD PTR [ecx],eax
  420378:	add    DWORD PTR [ecx],eax
  42037a:	add    DWORD PTR [ecx],eax
  42037c:	add    DWORD PTR [ecx],eax
  42037e:	add    DWORD PTR [ecx],eax
  420380:	add    DWORD PTR [ecx],eax
  420382:	add    DWORD PTR [ecx],eax
  420384:	add    DWORD PTR [ecx],eax
  420386:	add    DWORD PTR [ecx],eax
  420388:	add    DWORD PTR [ecx],eax
  42038a:	add    DWORD PTR [ecx],eax
  42038c:	add    DWORD PTR [ecx],eax
  42038e:	add    DWORD PTR [ecx],eax
  420390:	add    DWORD PTR [ecx],eax
  420392:	add    DWORD PTR [ecx],eax
  420394:	add    DWORD PTR [ecx],eax
  420396:	add    DWORD PTR [ecx],eax
  420398:	add    DWORD PTR [ecx],eax
  42039a:	add    DWORD PTR [ecx],eax
  42039c:	add    DWORD PTR [ecx],eax
  42039e:	add    DWORD PTR [ecx],eax
  4203a0:	add    DWORD PTR [ecx],eax
  4203a2:	add    DWORD PTR [ecx],eax
  4203a4:	add    DWORD PTR [ecx],eax
  4203a6:	add    DWORD PTR [ecx],eax
  4203a8:	add    DWORD PTR [ecx],eax
  4203aa:	add    DWORD PTR [ecx],eax
  4203ac:	add    DWORD PTR [ecx],eax
  4203ae:	add    DWORD PTR [ecx],eax
  4203b0:	add    DWORD PTR [ecx],eax
  4203b2:	add    DWORD PTR [ecx],eax
  4203b4:	add    DWORD PTR [ecx],eax
  4203b6:	add    DWORD PTR [ecx],eax
  4203b8:	add    DWORD PTR [ecx],eax
  4203ba:	add    DWORD PTR [ecx],eax
  4203bc:	add    DWORD PTR [ecx],eax
  4203be:	add    DWORD PTR [ecx],eax
  4203c0:	add    DWORD PTR [ecx],eax
  4203c2:	add    DWORD PTR [ecx],eax
  4203c4:	add    DWORD PTR [ecx],eax
  4203c6:	add    DWORD PTR [ecx],eax
  4203c8:	add    DWORD PTR [ecx],eax
  4203ca:	add    DWORD PTR [ecx],eax
  4203cc:	add    DWORD PTR [ecx],eax
  4203ce:	add    DWORD PTR [ecx],eax
  4203d0:	add    DWORD PTR [ecx],eax
  4203d2:	add    DWORD PTR [ecx],eax
  4203d4:	add    DWORD PTR [ecx],eax
  4203d6:	add    DWORD PTR [ecx],eax
  4203d8:	add    DWORD PTR [ecx],eax
  4203da:	add    DWORD PTR [ecx],eax
  4203dc:	add    DWORD PTR [ecx],eax
  4203de:	add    DWORD PTR [ecx],eax
  4203e0:	add    DWORD PTR [ecx],eax
  4203e2:	add    DWORD PTR [ecx],eax
  4203e4:	add    DWORD PTR [ecx],eax
  4203e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text7:

00421000 <.text7>:
  421000:	add    DWORD PTR [ecx],eax
  421002:	add    DWORD PTR [ecx],eax
  421004:	add    DWORD PTR [ecx],eax
  421006:	add    DWORD PTR [ecx],eax
  421008:	add    DWORD PTR [ecx],eax
  42100a:	add    DWORD PTR [ecx],eax
  42100c:	add    DWORD PTR [ecx],eax
  42100e:	add    DWORD PTR [ecx],eax
  421010:	add    DWORD PTR [ecx],eax
  421012:	add    DWORD PTR [ecx],eax
  421014:	add    DWORD PTR [ecx],eax
  421016:	add    DWORD PTR [ecx],eax
  421018:	add    DWORD PTR [ecx],eax
  42101a:	add    DWORD PTR [ecx],eax
  42101c:	add    DWORD PTR [ecx],eax
  42101e:	add    DWORD PTR [ecx],eax
  421020:	add    DWORD PTR [ecx],eax
  421022:	add    DWORD PTR [ecx],eax
  421024:	add    DWORD PTR [ecx],eax
  421026:	add    DWORD PTR [ecx],eax
  421028:	add    DWORD PTR [ecx],eax
  42102a:	add    DWORD PTR [ecx],eax
  42102c:	add    DWORD PTR [ecx],eax
  42102e:	add    DWORD PTR [ecx],eax
  421030:	add    DWORD PTR [ecx],eax
  421032:	add    DWORD PTR [ecx],eax
  421034:	add    DWORD PTR [ecx],eax
  421036:	add    DWORD PTR [ecx],eax
  421038:	add    DWORD PTR [ecx],eax
  42103a:	add    DWORD PTR [ecx],eax
  42103c:	add    DWORD PTR [ecx],eax
  42103e:	add    DWORD PTR [ecx],eax
  421040:	add    DWORD PTR [ecx],eax
  421042:	add    DWORD PTR [ecx],eax
  421044:	add    DWORD PTR [ecx],eax
  421046:	add    DWORD PTR [ecx],eax
  421048:	add    DWORD PTR [ecx],eax
  42104a:	add    DWORD PTR [ecx],eax
  42104c:	add    DWORD PTR [ecx],eax
  42104e:	add    DWORD PTR [ecx],eax
  421050:	add    DWORD PTR [ecx],eax
  421052:	add    DWORD PTR [ecx],eax
  421054:	add    DWORD PTR [ecx],eax
  421056:	add    DWORD PTR [ecx],eax
  421058:	add    DWORD PTR [ecx],eax
  42105a:	add    DWORD PTR [ecx],eax
  42105c:	add    DWORD PTR [ecx],eax
  42105e:	add    DWORD PTR [ecx],eax
  421060:	add    DWORD PTR [ecx],eax
  421062:	add    DWORD PTR [ecx],eax
  421064:	add    DWORD PTR [ecx],eax
  421066:	add    DWORD PTR [ecx],eax
  421068:	add    DWORD PTR [ecx],eax
  42106a:	add    DWORD PTR [ecx],eax
  42106c:	add    DWORD PTR [ecx],eax
  42106e:	add    DWORD PTR [ecx],eax
  421070:	add    DWORD PTR [ecx],eax
  421072:	add    DWORD PTR [ecx],eax
  421074:	add    DWORD PTR [ecx],eax
  421076:	add    DWORD PTR [ecx],eax
  421078:	add    DWORD PTR [ecx],eax
  42107a:	add    DWORD PTR [ecx],eax
  42107c:	add    DWORD PTR [ecx],eax
  42107e:	add    DWORD PTR [ecx],eax
  421080:	add    DWORD PTR [ecx],eax
  421082:	add    DWORD PTR [ecx],eax
  421084:	add    DWORD PTR [ecx],eax
  421086:	add    DWORD PTR [ecx],eax
  421088:	add    DWORD PTR [ecx],eax
  42108a:	add    DWORD PTR [ecx],eax
  42108c:	add    DWORD PTR [ecx],eax
  42108e:	add    DWORD PTR [ecx],eax
  421090:	add    DWORD PTR [ecx],eax
  421092:	add    DWORD PTR [ecx],eax
  421094:	add    DWORD PTR [ecx],eax
  421096:	add    DWORD PTR [ecx],eax
  421098:	add    DWORD PTR [ecx],eax
  42109a:	add    DWORD PTR [ecx],eax
  42109c:	add    DWORD PTR [ecx],eax
  42109e:	add    DWORD PTR [ecx],eax
  4210a0:	add    DWORD PTR [ecx],eax
  4210a2:	add    DWORD PTR [ecx],eax
  4210a4:	add    DWORD PTR [ecx],eax
  4210a6:	add    DWORD PTR [ecx],eax
  4210a8:	add    DWORD PTR [ecx],eax
  4210aa:	add    DWORD PTR [ecx],eax
  4210ac:	add    DWORD PTR [ecx],eax
  4210ae:	add    DWORD PTR [ecx],eax
  4210b0:	add    DWORD PTR [ecx],eax
  4210b2:	add    DWORD PTR [ecx],eax
  4210b4:	add    DWORD PTR [ecx],eax
  4210b6:	add    DWORD PTR [ecx],eax
  4210b8:	add    DWORD PTR [ecx],eax
  4210ba:	add    DWORD PTR [ecx],eax
  4210bc:	add    DWORD PTR [ecx],eax
  4210be:	add    DWORD PTR [ecx],eax
  4210c0:	add    DWORD PTR [ecx],eax
  4210c2:	add    DWORD PTR [ecx],eax
  4210c4:	add    DWORD PTR [ecx],eax
  4210c6:	add    DWORD PTR [ecx],eax
  4210c8:	add    DWORD PTR [ecx],eax
  4210ca:	add    DWORD PTR [ecx],eax
  4210cc:	add    DWORD PTR [ecx],eax
  4210ce:	add    DWORD PTR [ecx],eax
  4210d0:	add    DWORD PTR [ecx],eax
  4210d2:	add    DWORD PTR [ecx],eax
  4210d4:	add    DWORD PTR [ecx],eax
  4210d6:	add    DWORD PTR [ecx],eax
  4210d8:	add    DWORD PTR [ecx],eax
  4210da:	add    DWORD PTR [ecx],eax
  4210dc:	add    DWORD PTR [ecx],eax
  4210de:	add    DWORD PTR [ecx],eax
  4210e0:	add    DWORD PTR [ecx],eax
  4210e2:	add    DWORD PTR [ecx],eax
  4210e4:	add    DWORD PTR [ecx],eax
  4210e6:	add    DWORD PTR [ecx],eax
  4210e8:	add    DWORD PTR [ecx],eax
  4210ea:	add    DWORD PTR [ecx],eax
  4210ec:	add    DWORD PTR [ecx],eax
  4210ee:	add    DWORD PTR [ecx],eax
  4210f0:	add    DWORD PTR [ecx],eax
  4210f2:	add    DWORD PTR [ecx],eax
  4210f4:	add    DWORD PTR [ecx],eax
  4210f6:	add    DWORD PTR [ecx],eax
  4210f8:	add    DWORD PTR [ecx],eax
  4210fa:	add    DWORD PTR [ecx],eax
  4210fc:	add    DWORD PTR [ecx],eax
  4210fe:	add    DWORD PTR [ecx],eax
  421100:	add    DWORD PTR [ecx],eax
  421102:	add    DWORD PTR [ecx],eax
  421104:	add    DWORD PTR [ecx],eax
  421106:	add    DWORD PTR [ecx],eax
  421108:	add    DWORD PTR [ecx],eax
  42110a:	add    DWORD PTR [ecx],eax
  42110c:	add    DWORD PTR [ecx],eax
  42110e:	add    DWORD PTR [ecx],eax
  421110:	add    DWORD PTR [ecx],eax
  421112:	add    DWORD PTR [ecx],eax
  421114:	add    DWORD PTR [ecx],eax
  421116:	add    DWORD PTR [ecx],eax
  421118:	add    DWORD PTR [ecx],eax
  42111a:	add    DWORD PTR [ecx],eax
  42111c:	add    DWORD PTR [ecx],eax
  42111e:	add    DWORD PTR [ecx],eax
  421120:	add    DWORD PTR [ecx],eax
  421122:	add    DWORD PTR [ecx],eax
  421124:	add    DWORD PTR [ecx],eax
  421126:	add    DWORD PTR [ecx],eax
  421128:	add    DWORD PTR [ecx],eax
  42112a:	add    DWORD PTR [ecx],eax
  42112c:	add    DWORD PTR [ecx],eax
  42112e:	add    DWORD PTR [ecx],eax
  421130:	add    DWORD PTR [ecx],eax
  421132:	add    DWORD PTR [ecx],eax
  421134:	add    DWORD PTR [ecx],eax
  421136:	add    DWORD PTR [ecx],eax
  421138:	add    DWORD PTR [ecx],eax
  42113a:	add    DWORD PTR [ecx],eax
  42113c:	add    DWORD PTR [ecx],eax
  42113e:	add    DWORD PTR [ecx],eax
  421140:	add    DWORD PTR [ecx],eax
  421142:	add    DWORD PTR [ecx],eax
  421144:	add    DWORD PTR [ecx],eax
  421146:	add    DWORD PTR [ecx],eax
  421148:	add    DWORD PTR [ecx],eax
  42114a:	add    DWORD PTR [ecx],eax
  42114c:	add    DWORD PTR [ecx],eax
  42114e:	add    DWORD PTR [ecx],eax
  421150:	add    DWORD PTR [ecx],eax
  421152:	add    DWORD PTR [ecx],eax
  421154:	add    DWORD PTR [ecx],eax
  421156:	add    DWORD PTR [ecx],eax
  421158:	add    DWORD PTR [ecx],eax
  42115a:	add    DWORD PTR [ecx],eax
  42115c:	add    DWORD PTR [ecx],eax
  42115e:	add    DWORD PTR [ecx],eax
  421160:	add    DWORD PTR [ecx],eax
  421162:	add    DWORD PTR [ecx],eax
  421164:	add    DWORD PTR [ecx],eax
  421166:	add    DWORD PTR [ecx],eax
  421168:	add    DWORD PTR [ecx],eax
  42116a:	add    DWORD PTR [ecx],eax
  42116c:	add    DWORD PTR [ecx],eax
  42116e:	add    DWORD PTR [ecx],eax
  421170:	add    DWORD PTR [ecx],eax
  421172:	add    DWORD PTR [ecx],eax
  421174:	add    DWORD PTR [ecx],eax
  421176:	add    DWORD PTR [ecx],eax
  421178:	add    DWORD PTR [ecx],eax
  42117a:	add    DWORD PTR [ecx],eax
  42117c:	add    DWORD PTR [ecx],eax
  42117e:	add    DWORD PTR [ecx],eax
  421180:	add    DWORD PTR [ecx],eax
  421182:	add    DWORD PTR [ecx],eax
  421184:	add    DWORD PTR [ecx],eax
  421186:	add    DWORD PTR [ecx],eax
  421188:	add    DWORD PTR [ecx],eax
  42118a:	add    DWORD PTR [ecx],eax
  42118c:	add    DWORD PTR [ecx],eax
  42118e:	add    DWORD PTR [ecx],eax
  421190:	add    DWORD PTR [ecx],eax
  421192:	add    DWORD PTR [ecx],eax
  421194:	add    DWORD PTR [ecx],eax
  421196:	add    DWORD PTR [ecx],eax
  421198:	add    DWORD PTR [ecx],eax
  42119a:	add    DWORD PTR [ecx],eax
  42119c:	add    DWORD PTR [ecx],eax
  42119e:	add    DWORD PTR [ecx],eax
  4211a0:	add    DWORD PTR [ecx],eax
  4211a2:	add    DWORD PTR [ecx],eax
  4211a4:	add    DWORD PTR [ecx],eax
  4211a6:	add    DWORD PTR [ecx],eax
  4211a8:	add    DWORD PTR [ecx],eax
  4211aa:	add    DWORD PTR [ecx],eax
  4211ac:	add    DWORD PTR [ecx],eax
  4211ae:	add    DWORD PTR [ecx],eax
  4211b0:	add    DWORD PTR [ecx],eax
  4211b2:	add    DWORD PTR [ecx],eax
  4211b4:	add    DWORD PTR [ecx],eax
  4211b6:	add    DWORD PTR [ecx],eax
  4211b8:	add    DWORD PTR [ecx],eax
  4211ba:	add    DWORD PTR [ecx],eax
  4211bc:	add    DWORD PTR [ecx],eax
  4211be:	add    DWORD PTR [ecx],eax
  4211c0:	add    DWORD PTR [ecx],eax
  4211c2:	add    DWORD PTR [ecx],eax
  4211c4:	add    DWORD PTR [ecx],eax
  4211c6:	add    DWORD PTR [ecx],eax
  4211c8:	add    DWORD PTR [ecx],eax
  4211ca:	add    DWORD PTR [ecx],eax
  4211cc:	add    DWORD PTR [ecx],eax
  4211ce:	add    DWORD PTR [ecx],eax
  4211d0:	add    DWORD PTR [ecx],eax
  4211d2:	add    DWORD PTR [ecx],eax
  4211d4:	add    DWORD PTR [ecx],eax
  4211d6:	add    DWORD PTR [ecx],eax
  4211d8:	add    DWORD PTR [ecx],eax
  4211da:	add    DWORD PTR [ecx],eax
  4211dc:	add    DWORD PTR [ecx],eax
  4211de:	add    DWORD PTR [ecx],eax
  4211e0:	add    DWORD PTR [ecx],eax
  4211e2:	add    DWORD PTR [ecx],eax
  4211e4:	add    DWORD PTR [ecx],eax
  4211e6:	add    DWORD PTR [ecx],eax
  4211e8:	add    DWORD PTR [ecx],eax
  4211ea:	add    DWORD PTR [ecx],eax
  4211ec:	add    DWORD PTR [ecx],eax
  4211ee:	add    DWORD PTR [ecx],eax
  4211f0:	add    DWORD PTR [ecx],eax
  4211f2:	add    DWORD PTR [ecx],eax
  4211f4:	add    DWORD PTR [ecx],eax
  4211f6:	add    DWORD PTR [ecx],eax
  4211f8:	add    DWORD PTR [ecx],eax
  4211fa:	add    DWORD PTR [ecx],eax
  4211fc:	add    DWORD PTR [ecx],eax
  4211fe:	add    DWORD PTR [ecx],eax
  421200:	add    DWORD PTR [ecx],eax
  421202:	add    DWORD PTR [ecx],eax
  421204:	add    DWORD PTR [ecx],eax
  421206:	add    DWORD PTR [ecx],eax
  421208:	add    DWORD PTR [ecx],eax
  42120a:	add    DWORD PTR [ecx],eax
  42120c:	add    DWORD PTR [ecx],eax
  42120e:	add    DWORD PTR [ecx],eax
  421210:	add    DWORD PTR [ecx],eax
  421212:	add    DWORD PTR [ecx],eax
  421214:	add    DWORD PTR [ecx],eax
  421216:	add    DWORD PTR [ecx],eax
  421218:	add    DWORD PTR [ecx],eax
  42121a:	add    DWORD PTR [ecx],eax
  42121c:	add    DWORD PTR [ecx],eax
  42121e:	add    DWORD PTR [ecx],eax
  421220:	add    DWORD PTR [ecx],eax
  421222:	add    DWORD PTR [ecx],eax
  421224:	add    DWORD PTR [ecx],eax
  421226:	add    DWORD PTR [ecx],eax
  421228:	add    DWORD PTR [ecx],eax
  42122a:	add    DWORD PTR [ecx],eax
  42122c:	add    DWORD PTR [ecx],eax
  42122e:	add    DWORD PTR [ecx],eax
  421230:	add    DWORD PTR [ecx],eax
  421232:	add    DWORD PTR [ecx],eax
  421234:	add    DWORD PTR [ecx],eax
  421236:	add    DWORD PTR [ecx],eax
  421238:	add    DWORD PTR [ecx],eax
  42123a:	add    DWORD PTR [ecx],eax
  42123c:	add    DWORD PTR [ecx],eax
  42123e:	add    DWORD PTR [ecx],eax
  421240:	add    DWORD PTR [ecx],eax
  421242:	add    DWORD PTR [ecx],eax
  421244:	add    DWORD PTR [ecx],eax
  421246:	add    DWORD PTR [ecx],eax
  421248:	add    DWORD PTR [ecx],eax
  42124a:	add    DWORD PTR [ecx],eax
  42124c:	add    DWORD PTR [ecx],eax
  42124e:	add    DWORD PTR [ecx],eax
  421250:	add    DWORD PTR [ecx],eax
  421252:	add    DWORD PTR [ecx],eax
  421254:	add    DWORD PTR [ecx],eax
  421256:	add    DWORD PTR [ecx],eax
  421258:	add    DWORD PTR [ecx],eax
  42125a:	add    DWORD PTR [ecx],eax
  42125c:	add    DWORD PTR [ecx],eax
  42125e:	add    DWORD PTR [ecx],eax
  421260:	add    DWORD PTR [ecx],eax
  421262:	add    DWORD PTR [ecx],eax
  421264:	add    DWORD PTR [ecx],eax
  421266:	add    DWORD PTR [ecx],eax
  421268:	add    DWORD PTR [ecx],eax
  42126a:	add    DWORD PTR [ecx],eax
  42126c:	add    DWORD PTR [ecx],eax
  42126e:	add    DWORD PTR [ecx],eax
  421270:	add    DWORD PTR [ecx],eax
  421272:	add    DWORD PTR [ecx],eax
  421274:	add    DWORD PTR [ecx],eax
  421276:	add    DWORD PTR [ecx],eax
  421278:	add    DWORD PTR [ecx],eax
  42127a:	add    DWORD PTR [ecx],eax
  42127c:	add    DWORD PTR [ecx],eax
  42127e:	add    DWORD PTR [ecx],eax
  421280:	add    DWORD PTR [ecx],eax
  421282:	add    DWORD PTR [ecx],eax
  421284:	add    DWORD PTR [ecx],eax
  421286:	add    DWORD PTR [ecx],eax
  421288:	add    DWORD PTR [ecx],eax
  42128a:	add    DWORD PTR [ecx],eax
  42128c:	add    DWORD PTR [ecx],eax
  42128e:	add    DWORD PTR [ecx],eax
  421290:	add    DWORD PTR [ecx],eax
  421292:	add    DWORD PTR [ecx],eax
  421294:	add    DWORD PTR [ecx],eax
  421296:	add    DWORD PTR [ecx],eax
  421298:	add    DWORD PTR [ecx],eax
  42129a:	add    DWORD PTR [ecx],eax
  42129c:	add    DWORD PTR [ecx],eax
  42129e:	add    DWORD PTR [ecx],eax
  4212a0:	add    DWORD PTR [ecx],eax
  4212a2:	add    DWORD PTR [ecx],eax
  4212a4:	add    DWORD PTR [ecx],eax
  4212a6:	add    DWORD PTR [ecx],eax
  4212a8:	add    DWORD PTR [ecx],eax
  4212aa:	add    DWORD PTR [ecx],eax
  4212ac:	add    DWORD PTR [ecx],eax
  4212ae:	add    DWORD PTR [ecx],eax
  4212b0:	add    DWORD PTR [ecx],eax
  4212b2:	add    DWORD PTR [ecx],eax
  4212b4:	add    DWORD PTR [ecx],eax
  4212b6:	add    DWORD PTR [ecx],eax
  4212b8:	add    DWORD PTR [ecx],eax
  4212ba:	add    DWORD PTR [ecx],eax
  4212bc:	add    DWORD PTR [ecx],eax
  4212be:	add    DWORD PTR [ecx],eax
  4212c0:	add    DWORD PTR [ecx],eax
  4212c2:	add    DWORD PTR [ecx],eax
  4212c4:	add    DWORD PTR [ecx],eax
  4212c6:	add    DWORD PTR [ecx],eax
  4212c8:	add    DWORD PTR [ecx],eax
  4212ca:	add    DWORD PTR [ecx],eax
  4212cc:	add    DWORD PTR [ecx],eax
  4212ce:	add    DWORD PTR [ecx],eax
  4212d0:	add    DWORD PTR [ecx],eax
  4212d2:	add    DWORD PTR [ecx],eax
  4212d4:	add    DWORD PTR [ecx],eax
  4212d6:	add    DWORD PTR [ecx],eax
  4212d8:	add    DWORD PTR [ecx],eax
  4212da:	add    DWORD PTR [ecx],eax
  4212dc:	add    DWORD PTR [ecx],eax
  4212de:	add    DWORD PTR [ecx],eax
  4212e0:	add    DWORD PTR [ecx],eax
  4212e2:	add    DWORD PTR [ecx],eax
  4212e4:	add    DWORD PTR [ecx],eax
  4212e6:	add    DWORD PTR [ecx],eax
  4212e8:	add    DWORD PTR [ecx],eax
  4212ea:	add    DWORD PTR [ecx],eax
  4212ec:	add    DWORD PTR [ecx],eax
  4212ee:	add    DWORD PTR [ecx],eax
  4212f0:	add    DWORD PTR [ecx],eax
  4212f2:	add    DWORD PTR [ecx],eax
  4212f4:	add    DWORD PTR [ecx],eax
  4212f6:	add    DWORD PTR [ecx],eax
  4212f8:	add    DWORD PTR [ecx],eax
  4212fa:	add    DWORD PTR [ecx],eax
  4212fc:	add    DWORD PTR [ecx],eax
  4212fe:	add    DWORD PTR [ecx],eax
  421300:	add    DWORD PTR [ecx],eax
  421302:	add    DWORD PTR [ecx],eax
  421304:	add    DWORD PTR [ecx],eax
  421306:	add    DWORD PTR [ecx],eax
  421308:	add    DWORD PTR [ecx],eax
  42130a:	add    DWORD PTR [ecx],eax
  42130c:	add    DWORD PTR [ecx],eax
  42130e:	add    DWORD PTR [ecx],eax
  421310:	add    DWORD PTR [ecx],eax
  421312:	add    DWORD PTR [ecx],eax
  421314:	add    DWORD PTR [ecx],eax
  421316:	add    DWORD PTR [ecx],eax
  421318:	add    DWORD PTR [ecx],eax
  42131a:	add    DWORD PTR [ecx],eax
  42131c:	add    DWORD PTR [ecx],eax
  42131e:	add    DWORD PTR [ecx],eax
  421320:	add    DWORD PTR [ecx],eax
  421322:	add    DWORD PTR [ecx],eax
  421324:	add    DWORD PTR [ecx],eax
  421326:	add    DWORD PTR [ecx],eax
  421328:	add    DWORD PTR [ecx],eax
  42132a:	add    DWORD PTR [ecx],eax
  42132c:	add    DWORD PTR [ecx],eax
  42132e:	add    DWORD PTR [ecx],eax
  421330:	add    DWORD PTR [ecx],eax
  421332:	add    DWORD PTR [ecx],eax
  421334:	add    DWORD PTR [ecx],eax
  421336:	add    DWORD PTR [ecx],eax
  421338:	add    DWORD PTR [ecx],eax
  42133a:	add    DWORD PTR [ecx],eax
  42133c:	add    DWORD PTR [ecx],eax
  42133e:	add    DWORD PTR [ecx],eax
  421340:	add    DWORD PTR [ecx],eax
  421342:	add    DWORD PTR [ecx],eax
  421344:	add    DWORD PTR [ecx],eax
  421346:	add    DWORD PTR [ecx],eax
  421348:	add    DWORD PTR [ecx],eax
  42134a:	add    DWORD PTR [ecx],eax
  42134c:	add    DWORD PTR [ecx],eax
  42134e:	add    DWORD PTR [ecx],eax
  421350:	add    DWORD PTR [ecx],eax
  421352:	add    DWORD PTR [ecx],eax
  421354:	add    DWORD PTR [ecx],eax
  421356:	add    DWORD PTR [ecx],eax
  421358:	add    DWORD PTR [ecx],eax
  42135a:	add    DWORD PTR [ecx],eax
  42135c:	add    DWORD PTR [ecx],eax
  42135e:	add    DWORD PTR [ecx],eax
  421360:	add    DWORD PTR [ecx],eax
  421362:	add    DWORD PTR [ecx],eax
  421364:	add    DWORD PTR [ecx],eax
  421366:	add    DWORD PTR [ecx],eax
  421368:	add    DWORD PTR [ecx],eax
  42136a:	add    DWORD PTR [ecx],eax
  42136c:	add    DWORD PTR [ecx],eax
  42136e:	add    DWORD PTR [ecx],eax
  421370:	add    DWORD PTR [ecx],eax
  421372:	add    DWORD PTR [ecx],eax
  421374:	add    DWORD PTR [ecx],eax
  421376:	add    DWORD PTR [ecx],eax
  421378:	add    DWORD PTR [ecx],eax
  42137a:	add    DWORD PTR [ecx],eax
  42137c:	add    DWORD PTR [ecx],eax
  42137e:	add    DWORD PTR [ecx],eax
  421380:	add    DWORD PTR [ecx],eax
  421382:	add    DWORD PTR [ecx],eax
  421384:	add    DWORD PTR [ecx],eax
  421386:	add    DWORD PTR [ecx],eax
  421388:	add    DWORD PTR [ecx],eax
  42138a:	add    DWORD PTR [ecx],eax
  42138c:	add    DWORD PTR [ecx],eax
  42138e:	add    DWORD PTR [ecx],eax
  421390:	add    DWORD PTR [ecx],eax
  421392:	add    DWORD PTR [ecx],eax
  421394:	add    DWORD PTR [ecx],eax
  421396:	add    DWORD PTR [ecx],eax
  421398:	add    DWORD PTR [ecx],eax
  42139a:	add    DWORD PTR [ecx],eax
  42139c:	add    DWORD PTR [ecx],eax
  42139e:	add    DWORD PTR [ecx],eax
  4213a0:	add    DWORD PTR [ecx],eax
  4213a2:	add    DWORD PTR [ecx],eax
  4213a4:	add    DWORD PTR [ecx],eax
  4213a6:	add    DWORD PTR [ecx],eax
  4213a8:	add    DWORD PTR [ecx],eax
  4213aa:	add    DWORD PTR [ecx],eax
  4213ac:	add    DWORD PTR [ecx],eax
  4213ae:	add    DWORD PTR [ecx],eax
  4213b0:	add    DWORD PTR [ecx],eax
  4213b2:	add    DWORD PTR [ecx],eax
  4213b4:	add    DWORD PTR [ecx],eax
  4213b6:	add    DWORD PTR [ecx],eax
  4213b8:	add    DWORD PTR [ecx],eax
  4213ba:	add    DWORD PTR [ecx],eax
  4213bc:	add    DWORD PTR [ecx],eax
  4213be:	add    DWORD PTR [ecx],eax
  4213c0:	add    DWORD PTR [ecx],eax
  4213c2:	add    DWORD PTR [ecx],eax
  4213c4:	add    DWORD PTR [ecx],eax
  4213c6:	add    DWORD PTR [ecx],eax
  4213c8:	add    DWORD PTR [ecx],eax
  4213ca:	add    DWORD PTR [ecx],eax
  4213cc:	add    DWORD PTR [ecx],eax
  4213ce:	add    DWORD PTR [ecx],eax
  4213d0:	add    DWORD PTR [ecx],eax
  4213d2:	add    DWORD PTR [ecx],eax
  4213d4:	add    DWORD PTR [ecx],eax
  4213d6:	add    DWORD PTR [ecx],eax
  4213d8:	add    DWORD PTR [ecx],eax
  4213da:	add    DWORD PTR [ecx],eax
  4213dc:	add    DWORD PTR [ecx],eax
  4213de:	add    DWORD PTR [ecx],eax
  4213e0:	add    DWORD PTR [ecx],eax
  4213e2:	add    DWORD PTR [ecx],eax
  4213e4:	add    DWORD PTR [ecx],eax
  4213e6:	add    DWORD PTR [ecx],eax
