
4243079653b12140bb974a355abc53bd3fc6af47d6f2acba69604ba797e9ee99.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xb9dc87ea
  4047be:	rcr    BYTE PTR [edx+0x7e7e7e7e],1
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	add    cl,BYTE PTR [eax]
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	pop    ebp
  404871:	dec    eax
  404872:	add    DWORD PTR [eax-0x3587ce07],ebx
  404878:	adc    bl,BYTE PTR [esi+ebx*8-0xdc49deb]
  40487f:	leave  
  404880:	scas   al,BYTE PTR es:[edi]
  404881:	lods   al,BYTE PTR ds:[esi]
  404882:	jge    0x404900
  404884:	in     eax,0xfe
  404886:	mov    edi,0x7358ad87
  40488b:	xor    eax,0xf6ab9d76
  404890:	addr16 jb 0x404894
  404893:	inc    ebp
  404894:	mov    al,ds:0x40900be6
  404899:	push   eax
  40489a:	stos   DWORD PTR es:[edi],eax
  40489b:	bound  ebx,QWORD PTR [ebx+0x5]
  40489e:	out    dx,eax
  40489f:	iret   
  4048a0:	jmp    0xf8bb:0x3ee636c2
  4048a7:	(bad)  
  4048a9:	mov    ebp,0x1888a2e4
  4048ae:	push   ebx
  4048af:	push   ebp
  4048b0:	(bad)  
  4048b1:	jmp    0xb33c976f
  4048b6:	mov    dh,0xb7
  4048b8:	retf   
  4048b9:	js     0x4048e5
  4048bb:	pop    es
  4048bc:	and    DWORD PTR [ebx-0x7c],ecx
  4048bf:	cmc    
  4048c0:	xchg   esi,eax
  4048c1:	jne    0x404877
  4048c3:	push   cs
  4048c4:	mov    cl,0x72
  4048c6:	scas   al,BYTE PTR es:[edi]
  4048c7:	mov    WORD PTR [edx-0x47],ds
  4048ca:	lahf   
  4048cb:	stos   BYTE PTR es:[edi],al
  4048cc:	add    ebp,eax
  4048ce:	add    BYTE PTR [edi-0x38fbaaee],ch
  4048d4:	xor    dh,BYTE PTR [di+0x47]
  4048d8:	cld    
  4048d9:	loopne 0x40493a
  4048db:	cld    
  4048dc:	jnp    0x404861
  4048de:	sbb    DWORD PTR [ecx+0x6],edi
  4048e1:	imul   eax,DWORD PTR [ebx],0xffffffe0
  4048e4:	fisub  DWORD PTR [ecx-0x57]
  4048e7:	push   edi
  4048e8:	adc    DWORD PTR [esi+0x22],ecx
  4048eb:	cdq    
  4048ec:	pop    ds
  4048ed:	or     al,0x19
  4048ef:	(bad)  
  4048f0:	push   ebx
  4048f1:	out    dx,al
  4048f2:	mov    ebx,0xa40faff4
  4048f7:	cmp    eax,0x7fa30e10
  4048fc:	mov    eax,ds:0xdae51cff
  404901:	pop    ebp
  404902:	loop   0x404894
  404904:	jae    0x404889
  404906:	pop    ss
  404907:	sti    
  404908:	add    eax,0xee68d9a8
  40490d:	lock retf 
  40490f:	mov    edi,0x5ec37dd
  404914:	(bad)  
  404915:	retf   
  404916:	aaa    
  404917:	gs jmp 0x3e73:0x2c669025
  40491f:	sti    
  404920:	mov    ss,esp
  404922:	seto   bh
  404925:	inc    ebp
  404926:	(bad)  
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	mov    edx,0xe9004245
  404945:	je     0x404948
  404947:	add    BYTE PTR [eax],al
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 int 0x18
  404957:	pop    edx
  404958:	sub    bl,dl
  40495a:	jg     0x4049da
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x4049d6
  404962:	adc    eax,0xd6ff3eeb
  404967:	jl     0x404920
  404969:	test   DWORD PTR [ebp-0x3b],esi
  40496c:	aas    
  40496d:	aam    0xb
  40496f:	icebp  
  404970:	in     al,dx
  404971:	dec    edx
  404972:	cwde   
  404973:	lds    edx,FWORD PTR [ebp-0x499910ad]
  404979:	jg     0x404915
  40497b:	lods   eax,DWORD PTR ds:[esi]
  40497c:	std    
  40497d:	add    BYTE PTR [edi+ecx*8],al
  404980:	stos   BYTE PTR es:[edi],al
  404981:	loopne 0x404982
  404983:	pop    ecx
  404984:	cmp    eax,0x5d44a5a8
  404989:	mov    esi,0x2740b007
  40498e:	jge    0x4049f9
  404990:	fcmovnu st,st(6)
  404992:	mov    cl,0x6a
  404994:	nop
  404995:	inc    ecx
  404996:	pop    ebp
  404997:	mov    edi,0x58d2dad6
  40499c:	mov    esi,0x58d87bb9
  4049a1:	outs   dx,DWORD PTR ds:[esi]
  4049a2:	mov    BYTE PTR [esi-0x7c7f5a21],al
  4049a8:	add    edx,DWORD PTR [ebx+0x7c]
  4049ab:	jg     0x4049c2
  4049ad:	retf   0x47d
  4049b0:	jp     0x40498d
  4049b2:	mov    ebx,0x57cf04e2
  4049b7:	mov    ecx,0x7737f274
  4049bc:	dec    esp
  4049bd:	(bad)  
  4049be:	loope  0x404a26
  4049c0:	push   edi
  4049c1:	sub    bh,BYTE PTR [eax]
  4049c3:	pop    ds
  4049c4:	mov    dl,BYTE PTR [edx-0x7cd05c5c]
  4049ca:	fprem  
  4049cc:	shr    DWORD PTR [eax-0x5e],0xc8
  4049d0:	add    eax,0x69be9042
  4049d5:	cmc    
  4049d6:	and    eax,0xef1acb06
  4049db:	(bad)  
  4049dc:	les    edi,FWORD PTR [esi]
  4049de:	cmp    BYTE PTR [eax-0x77936b22],ah
  4049e4:	jnp    0x404971
  4049e6:	jmp    0x12e8:0x46c928f8
  4049ed:	mov    esi,DWORD PTR [ecx+eax*1-0x196eec38]
  4049f4:	push   edx
  4049f5:	retf   
  4049f6:	scas   eax,DWORD PTR es:[edi]
  4049f7:	cwde   
  4049f8:	dec    edi
  4049f9:	scas   al,BYTE PTR es:[edi]
  4049fa:	shld   DWORD PTR [ecx],edx,0xe3
  4049fe:	sbb    al,0xd0
  404a00:	inc    ebp
  404a01:	leave  
  404a02:	inc    eax
  404a03:	mov    DWORD PTR [esp+eax*2+0x31f3031c],eax
  404a0a:	jmp    0xae60ed44
  404a0f:	or     DWORD PTR [eax+0x25d7dfe1],eax
  404a15:	add    eax,0x791b05ba
  404a1a:	or     ebp,eax
  404a1c:	cmc    
  404a1d:	(bad)  
  404a1f:	mov    ebp,0x23122ecd
  404a24:	push   edx
  404a25:	push   cs
  404a26:	push   ebp
  404a27:	jnp    0x404aa8
  404a29:	inc    ecx
  404a2a:	and    BYTE PTR [eax+0x5f],ch
  404a2d:	outs   dx,DWORD PTR ds:[esi]
  404a2e:	mov    WORD PTR [edi-0x814ed47],?
  404a34:	jp     0x404a49
  404a36:	out    0xa6,eax
  404a38:	or     al,0xe9
  404a3a:	cmp    al,0xf2
  404a3c:	ror    DWORD PTR [ecx-0x7],cl
  404a3f:	fdivr  QWORD PTR [ecx+ebx*8-0x4c]
  404a43:	invd   
  404a45:	push   eax
  404a46:	push   0x31
  404a48:	rcr    BYTE PTR [ebp+0x50a1ed7b],1
  404a4e:	jns    0x404ac9
  404a50:	and    DWORD PTR [ecx+0x3f],ebx
  404a53:	push   ecx
  404a54:	sbb    ah,ch
  404a56:	xchg   edx,eax
  404a57:	dec    edi
  404a58:	(bad)  
  404a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5a:	jns    0x404a4a
  404a5c:	sbb    ah,BYTE PTR [ebx]
  404a5e:	cmp    ah,BYTE PTR [esi+0x532ae1fa]
  404a64:	and    ecx,DWORD PTR [edi-0x12]
  404a67:	xchg   esp,eax
  404a68:	push   es
  404a69:	out    0x1f,eax
  404a6b:	aas    
  404a6c:	out    0xf7,al
  404a6e:	xor    BYTE PTR [edx-0x1224f017],bh
  404a74:	xor    DWORD PTR [edi+0x594c90a0],eax
  404a7a:	lds    esi,FWORD PTR [ebx]
  404a7c:	fcomp  QWORD PTR [eax]
  404a7e:	(bad)  
  404a7f:	push   edx
  404a80:	retf   
  404a81:	push   ds
  404a82:	add    al,0x70
  404a84:	pop    esi
  404a85:	xchg   esp,eax
  404a86:	add    ebx,eax
  404a88:	fs enter 0xe8b3,0x32
  404a8d:	mov    dh,0xeb
  404a8f:	fistp  WORD PTR ds:0xc2789d02
  404a95:	call   0x47a68769
  404a9a:	repz mov dh,0x34
  404a9d:	ja     0x404a46
  404a9f:	mov    ch,BYTE PTR [ebx+0x42]
  404aa2:	jb     0x404a5f
  404aa4:	cmp    DWORD PTR [edi+0x7e],edi
  404aa7:	loop   0x404aca
  404aa9:	mov    eax,ds:0xad422fe9
  404aae:	sti    
  404aaf:	ins    BYTE PTR es:[edi],dx
  404ab0:	adc    DWORD PTR [edi-0x45],ebp
  404ab3:	(bad)  
  404ab4:	mov    eax,0x47f14416
  404ab9:	out    dx,al
  404aba:	pop    esp
  404abb:	idiv   edx
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	sub    eax,0xa66a0702
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404b38
  404bb1:	sar    DWORD PTR gs:[ebx],1
  404bb4:	sbb    al,0x5d
  404bb6:	pop    esp
  404bb7:	mov    esi,0x930b7683
  404bbc:	leave  
  404bbd:	and    ecx,DWORD PTR [eax+0x11c32c69]
  404bc3:	mov    ebx,0xc2cf7ff6
  404bc8:	test   al,0x5
  404bca:	loopne 0x404be2
  404bcc:	or     eax,0x5e9749f5
  404bd1:	cmp    ebx,eax
  404bd3:	dec    eax
  404bd4:	mov    bh,0x7e
  404bd6:	mov    ebp,0xdc075763
  404bdb:	xchg   edi,eax
  404bdc:	jo     0x404bfa
  404bde:	iret   
  404bdf:	pop    es
  404be0:	iret   
  404be1:	sti    
  404be2:	sbb    DWORD PTR [eax-0x25],ebx
  404be5:	pushf  
  404be6:	lahf   
  404be7:	rol    ecx,1
  404be9:	sbb    BYTE PTR ds:0xaf1dd369,dl
  404bef:	js     0x404c57
  404bf1:	imul   esi,DWORD PTR [ecx],0x104d79cf
  404bf7:	add    DWORD PTR [ecx],ebp
  404bf9:	mov    BYTE PTR [ecx-0x78c404a6],bl
  404bff:	lods   eax,DWORD PTR ds:[esi]
  404c00:	mov    ah,0xd3
  404c03:	fs ja  0x404be2
  404c06:	mov    ss,WORD PTR [ebp+0x3a2a3cad]
  404c0c:	xchg   ecx,eax
  404c0d:	xchg   edi,ebp
  404c0f:	repnz mov BYTE PTR [ebx+0x1431155b],bl
  404c16:	daa    
  404c17:	mov    al,ds:0x7fa23e2e
  404c1c:	shr    BYTE PTR [ebp-0x4d],cl
  404c1f:	sub    DWORD PTR [esi+0x4e],esi
  404c22:	xchg   esp,eax
  404c23:	jo     0x404bf8
  404c25:	sbb    edx,ebx
  404c27:	and    BYTE PTR ds:[ebp-0x49],dh
  404c2b:	xor    dl,BYTE PTR [ebx-0x1f]
  404c2e:	xchg   edx,eax
  404c2f:	sub    cl,BYTE PTR [edi+0x19]
  404c32:	in     al,dx
  404c33:	sti    
  404c34:	inc    edi
  404c35:	jo     0x404cac
  404c37:	and    al,0xbf
  404c39:	sub    BYTE PTR [eax+0x2e6ab637],0xd3
  404c40:	push   DWORD PTR [ebp-0x48c0593d]
  404c46:	imul   ebp
  404c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c49:	xlat   BYTE PTR ds:[ebx]
  404c4a:	mov    edi,0x5d9227ac
  404c4f:	push   DWORD PTR ds:0x18372908
  404c55:	call   0x2b8c9f5e
  404c5a:	mov    ds:0x1af33c5a,al
  404c5f:	inc    esi
  404c60:	mov    ecx,0xa3d29e13
  404c65:	and    ah,BYTE PTR [eax-0x49]
  404c68:	int3   
  404c69:	xor    DWORD PTR [edx],0xffffffbf
  404c6c:	in     al,0x5f
  404c6e:	adc    dh,BYTE PTR [esi]
  404c70:	aad    0x3c
  404c72:	ja     0x404c1d
  404c74:	mov    bl,0x64
  404c76:	inc    edi
  404c77:	or     DWORD PTR [eax+edx*8],ebx
  404c7a:	xor    eax,0x60217042
  404c7f:	and    esp,edi
  404c81:	cmp    al,0x4
  404c83:	xor    bh,dl
  404c85:	mov    WORD PTR [ebx+0x6],?
  404c88:	push   ecx
  404c89:	pop    esi
  404c8a:	pop    eax
  404c8b:	ins    BYTE PTR es:[edi],dx
  404c8c:	dec    edx
  404c8d:	aam    0xbc
  404c8f:	add    esp,DWORD PTR [edi+0x7758fe62]
  404c95:	aad    0x24
  404c97:	les    esi,FWORD PTR [esi+eax*8-0xf]
  404c9b:	pop    DWORD PTR [edi+edi*1]
  404c9e:	pop    edi
  404c9f:	fst    QWORD PTR [edi+0x67a251fe]
  404ca5:	call   0xb073:0xcee3b6cf
  404cac:	or     esp,ecx
  404cae:	fisubr WORD PTR [ebp+0x1d63f983]
  404cb4:	in     al,dx
  404cb5:	ror    DWORD PTR [eax],cl
  404cb7:	lahf   
  404cb8:	(bad)  
  404cb9:	cld    
  404cba:	xor    dl,cl
  404cbc:	ins    DWORD PTR es:[edi],dx
  404cbd:	pop    edi
  404cbe:	and    DWORD PTR [ecx-0x29bf8189],esp
  404cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cc5:	dec    eax
  404cc6:	cmp    ecx,DWORD PTR [esi]
  404cc8:	pop    esi
  404cc9:	stos   DWORD PTR es:[edi],eax
  404cca:	cmp    esp,DWORD PTR [edi]
  404ccc:	neg    DWORD PTR [edx]
  404cce:	mov    eax,0xee7bb2fe
  404cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd4:	es sahf 
  404cd6:	mov    ecx,DWORD PTR [eax+0x20]
  404cd9:	cli    
  404cda:	sub    esp,DWORD PTR [eax]
  404cdc:	or     eax,0xf6dd456c
  404ce1:	imul   edx,edx,0xe4fb428a
  404ce7:	or     al,0xdc
  404ce9:	adc    esi,DWORD PTR [edx+0x8]
  404cec:	int3   
  404ced:	loope  0x404d2e
  404cef:	ja     0x404cb2
  404cf1:	daa    
  404cf2:	mov    ds:0x51084fce,eax
  404cf7:	lods   al,BYTE PTR ds:[esi]
  404cf8:	adc    ebx,DWORD PTR [ecx-0x1f]
  404cfb:	mov    esp,DWORD PTR [edx+0x7]
  404cfe:	add    dh,BYTE PTR [edx-0x2f]
  404d01:	jmp    0x404d3f
  404d03:	lods   eax,DWORD PTR ds:[esi]
  404d04:	cmp    eax,0xaa6dd264
  404d09:	iret   
  404d0a:	test   al,0xf0
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e7a
  404e15:	outs   dx,DWORD PTR ds:[esi]
  404e16:	pop    esp
  404e17:	js     0x404e1b
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e6a
  404e21:	fnsave es:[edx+0x77b345a6]
  404e28:	imul   edi,DWORD PTR ds:0xe9179702,0x14f779b2
  404e32:	cmp    esi,DWORD PTR [eax]
  404e34:	jb     0x404df2
  404e36:	out    0x18,eax
  404e38:	nop
  404e39:	cmp    al,0xf1
  404e3b:	add    bl,BYTE PTR [eax+ebx*4-0x21ce6111]
  404e42:	jae    0x404e8a
  404e44:	mov    ch,0x26
  404e46:	sub    DWORD PTR [edi*8-0x12a76bfb],eax
  404e4d:	aaa    
  404e4e:	pop    ebp
  404e4f:	out    0xa2,eax
  404e51:	and    DWORD PTR [esi+0x4cb4aa8e],ecx
  404e57:	in     al,0x21
  404e59:	jb     0x404dfd
  404e5b:	repz dec eax
  404e5d:	inc    edi
  404e5e:	inc    edx
  404e5f:	or     eax,0xb4fb7d64
  404e64:	mov    ch,0xde
  404e66:	cmp    DWORD PTR [edx+0x6],ebx
  404e69:	jl     0x404e84
  404e6b:	sbb    esp,esi
  404e6d:	std    
  404e6e:	mov    WORD PTR [edx],fs
  404e70:	dec    esi
  404e71:	popa   
  404e72:	cli    
  404e73:	les    eax,FWORD PTR ds:0x22a6bfae
  404e79:	cmp    eax,0x5519339b
  404e7e:	xchg   BYTE PTR [ebx-0x70],bl
  404e81:	push   edx
  404e82:	ds ins BYTE PTR es:[edi],dx
  404e84:	retf   0x19e0
  404e87:	cmp    DWORD PTR [ebp-0x5c1b3ec6],ecx
  404e8d:	lods   al,BYTE PTR ds:[esi]
  404e8e:	lods   eax,DWORD PTR ds:[esi]
  404e8f:	sub    bl,ah
  404e91:	mov    eax,0x453c7634
  404e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e97:	inc    edi
  404e98:	sahf   
  404e99:	lahf   
  404e9a:	and    al,0xc5
  404e9c:	repz (bad) 
  404e9e:	cmc    
  404e9f:	popa   
  404ea0:	adc    eax,0x24e6c95d
  404ea5:	sbb    DWORD PTR [ebp+0x6e],esp
  404ea8:	sub    eax,0xfc37309e
  404ead:	cmp    esi,edx
  404eaf:	pop    esi
  404eb0:	xor    DWORD PTR [eax],edx
  404eb2:	shl    bl,0x5
  404eb5:	xchg   esp,eax
  404eb6:	xor    al,0xca
  404eb8:	fmul   st(7),st
  404eba:	fs rcl al,0xd8
  404ebe:	es cwde 
  404ec0:	xchg   edi,eax
  404ec1:	mov    ds:0xe7a21682,al
  404ec6:	jb     0x404e4c
  404ec8:	popa   
  404ec9:	loop   0x404e8b
  404ecb:	push   ss
  404ecc:	mov    BYTE PTR [esi-0x4e],dh
  404ecf:	pop    edx
  404ed0:	push   ebx
  404ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ed2:	inc    edx
  404ed3:	daa    
  404ed4:	cdq    
  404ed5:	fwait
  404ed6:	leave  
  404ed7:	ins    DWORD PTR es:[edi],dx
  404ed8:	push   ebx
  404ed9:	cs jno 0x404f0b
  404edc:	pop    ecx
  404edd:	sub    DWORD PTR [ecx-0x10bd1324],esp
  404ee3:	xchg   esp,eax
  404ee4:	xor    DWORD PTR [eax-0x71],ecx
  404ee7:	fwait
  404ee8:	adc    eax,0xa3b83c68
  404eed:	into   
  404eee:	in     eax,dx
  404eef:	fld    TBYTE PTR [edi-0x70]
  404ef2:	adc    DWORD PTR [esi-0x42],0xd
  404ef6:	(bad)  
  404ef7:	not    bh
  404ef9:	sub    eax,0xa760b652
  404efe:	or     DWORD PTR [eax],esi
  404f00:	cmp    DWORD PTR [ecx+0x55ce195d],eax
  404f06:	pusha  
  404f07:	enter  0xc542,0x96
  404f0b:	push   ss
  404f0c:	inc    esp
  404f0d:	add    al,BYTE PTR [edi+0x3124b8d2]
  404f13:	jge    0x404f71
  404f15:	ins    BYTE PTR es:[edi],dx
  404f16:	jae    0x404f2f
  404f18:	hlt    
  404f19:	clc    
  404f1a:	or     BYTE PTR [ecx+eax*2-0x6d7647b],al
  404f21:	mov    eax,ds:0x174e27a1
  404f26:	clc    
  404f27:	add    BYTE PTR [edx+0x74],dh
  404f2a:	cs jecxz 0x404f28
  404f2d:	sahf   
  404f2e:	push   ebx
  404f2f:	cmp    dh,bl
  404f31:	or     dl,ah
  404f33:	dec    ebx
  404f34:	ret    
  404f35:	imul   ebx,DWORD PTR [edi+ecx*1-0x10],0x7f3b6a8f
  404f3d:	mov    ds:0x3afd5bd6,eax
  404f42:	inc    esi
  404f43:	call   0x388e:0x52d0d09e
  404f4a:	enter  0xb56b,0xe0
  404f4e:	jecxz  0x404f21
  404f50:	sub    BYTE PTR [ebx-0x38cde0ed],0x26
  404f57:	daa    
  404f58:	andnps xmm4,XMMWORD PTR [eax+edi*2]
  404f5c:	add    al,BYTE PTR [esi]
  404f5e:	adc    al,0x44
  404f60:	pop    edi
  404f61:	xor    eax,0x5a51be27
  404f66:	or     BYTE PTR [edi-0x283b905],0xfe
  404f6d:	cmp    DWORD PTR [ecx],esi
  404f6f:	adc    al,0x3a
  404f71:	dec    esi
  404f72:	xchg   ebp,eax
  404f73:	add    eax,DWORD PTR ds:[ebx]
  404f76:	xchg   DWORD PTR [eax],esp
  404f78:	and    al,0x29
  404f7a:	in     al,dx
  404f7b:	aad    0x50
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x4b178039],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404fb0
  404ff9:	mov    eax,ds:0x95ed2395
  404ffe:	sub    al,0x1c
  405000:	arpl   WORD PTR [ebp+0x4dd0c9c0],ax
  405006:	inc    ebx
  405007:	push   eax
  405008:	out    0x73,eax
  40500a:	lods   al,BYTE PTR ds:[esi]
  40500b:	inc    ecx
  40500c:	lock inc eax
  40500e:	dec    edi
  40500f:	ins    DWORD PTR es:[edi],dx
  405010:	pop    eax
  405011:	imul   edx,DWORD PTR [ebp+0xe],0xdf0f44e1
  405018:	jl     0x40502d
  40501a:	into   
  40501b:	sbb    BYTE PTR [esi-0x7b47e43f],bh
  405021:	push   ebp
  405022:	sub    al,0x33
  405024:	out    dx,al
  405025:	jmp    0x3e86:0x37ea
  40502b:	sub    DWORD PTR [ebp+0x12],esp
  40502e:	lock mov bl,0x6b
  405031:	dec    ecx
  405032:	test   al,0x50
  405034:	ret    
  405035:	stc    
  405036:	jmp    0xcb990b55
  40503b:	stos   DWORD PTR es:[edi],eax
  40503c:	xor    BYTE PTR [ebp-0x33],ch
  40503f:	loopne 0x40509a
  405041:	jg     0x405055
  405043:	inc    ebp
  405044:	stos   BYTE PTR es:[edi],al
  405045:	fwait
  405046:	scas   al,BYTE PTR es:[edi]
  405047:	fwait
  405048:	ds (bad) 
  40504a:	jno    0x405032
  40504c:	(bad)  
  40504e:	fbld   TBYTE PTR ds:0xcd7a2255
  405054:	dec    edx
  405055:	push   ebx
  405056:	loopne 0x40500f
  405058:	ss xchg esi,eax
  40505a:	and    cl,BYTE PTR [eax+0x52]
  40505d:	cli    
  40505e:	fs dec edx
  405060:	iret   
  405061:	(bad)  
  405062:	mov    cl,BYTE PTR [ebx+0x505d4804]
  405068:	out    dx,eax
  405069:	xlat   BYTE PTR ds:[ebx]
  40506a:	pop    esp
  40506b:	lahf   
  40506c:	xor    al,0x2f
  40506e:	sbb    ecx,DWORD PTR [edi+0x27]
  405071:	ror    DWORD PTR [eax-0x6a41145a],0xe7
  405078:	stos   BYTE PTR es:[edi],al
  405079:	mov    ss,WORD PTR cs:[ecx+0x45]
  40507d:	add    esi,edx
  40507f:	pusha  
  405080:	jp     0x40507d
  405082:	mov    eax,0xa1b9003c
  405087:	sar    DWORD PTR [edi-0x1],cl
  40508a:	jmp    0xa74:0x751fa0f1
  405091:	xchg   edx,eax
  405092:	jo     0x4050a6
  405094:	xor    eax,0x4d3f5e7
  405099:	hlt    
  40509a:	fcom   QWORD PTR [eax+0x7a]
  40509d:	mov    ah,0xc6
  40509f:	or     eax,DWORD PTR [edx-0x71d08f1f]
  4050a5:	add    edi,DWORD PTR [edi+0x44e767d3]
  4050ab:	push   ss
  4050ac:	inc    ecx
  4050ad:	scas   al,BYTE PTR es:[edi]
  4050ae:	adc    BYTE PTR [ebx-0x7c],dl
  4050b1:	test   al,0xc1
  4050b3:	popa   
  4050b4:	push   edx
  4050b5:	stos   DWORD PTR es:[edi],eax
  4050b6:	(bad)  
  4050b7:	mov    al,ds:0xcfc8b4c2
  4050bc:	or     DWORD PTR [eax-0x55],0xffffffde
  4050c0:	or     DWORD PTR [eax+0x34],edi
  4050c3:	xchg   esp,eax
  4050c4:	inc    ebx
  4050c5:	xchg   edx,eax
  4050c6:	hlt    
  4050c7:	jge    0x405143
  4050c9:	data16 mov bh,0x87
  4050cc:	test   al,0xc3
  4050ce:	pop    ebx
  4050cf:	mov    ebx,edi
  4050d1:	mov    eax,ds:0x547726ba
  4050d6:	mov    esp,0x7f5b7e9f
  4050db:	rcr    DWORD PTR [ecx+0x7bd0dc7a],1
  4050e1:	dec    edx
  4050e2:	push   0xffffffcd
  4050e4:	fisub  WORD PTR [ebx-0x7fae0071]
  4050ea:	mov    esp,0x4272b274
  4050ef:	mov    al,ds:0x798d44a9
  4050f4:	fs push 0xffffff9b
  4050f7:	jl     0x40516c
  4050f9:	pop    ds
  4050fa:	test   al,0x82
  4050fc:	aas    
  4050fd:	dec    ecx
  4050fe:	inc    edx
  4050ff:	mov    esi,0xf4abdc70
  405104:	mov    esp,0xbc76ea62
  405109:	pop    esi
  40510a:	mov    edx,0x176ad497
  40510f:	ror    esp,1
  405111:	fsubr  st,st(4)
  405113:	scas   eax,DWORD PTR es:[edi]
  405114:	mov    al,ds:0xe084431
  405119:	push   esp
  40511a:	xchg   ebx,eax
  40511b:	sbb    bh,BYTE PTR [ebx+ebp*8]
  40511e:	mov    ecx,0xb629837a
  405123:	pop    ss
  405124:	jne    0x4050d1
  405126:	mov    ch,0xa0
  405128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405129:	mov    eax,ebx
  40512b:	xor    esi,eax
  40512d:	sub    esi,DWORD PTR [eax-0x27]
  405130:	xor    DWORD PTR [ecx],eax
  405132:	xchg   ebx,eax
  405133:	push   DWORD PTR [eax]
  405135:	aaa    
  405136:	inc    eax
  405137:	mov    ebx,0xa76e9962
  40513c:	fidiv  DWORD PTR [edi+edx*1+0x73]
  405140:	ror    BYTE PTR [esi],0x6a
  405143:	enter  0xa70c,0x27
  405147:	jo     0x405158
  405149:	test   BYTE PTR [esi-0x18],ch
  40514c:	pop    ecx
  40514d:	pop    ds
  40514e:	and    ebp,DWORD PTR [eax]
  405150:	or     DWORD PTR [ecx+esi*4+0x5c750bf],ecx
  405157:	pop    eax
  405158:	and    eax,DWORD PTR [ecx+0x0]
  40515b:	adc    BYTE PTR [eax],al
  40515d:	add    BYTE PTR [eax],al
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x6ff0698e]
  4051c5:	and    BYTE PTR ds:[edx+0x4a],0x70
  4051ca:	jle    0x40524a
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x40522b
  4051d1:	test   al,0xb8
  4051d3:	imul   ebp,edx,0xffffff89
  4051d6:	add    al,0x42
  4051d8:	xor    al,0x8b
  4051da:	cmp    ebp,DWORD PTR [esi+0x40]
  4051dd:	dec    ecx
  4051de:	jp     0x40517e
  4051e0:	stos   BYTE PTR es:[edi],al
  4051e1:	(bad)  
  4051e2:	cmp    ebp,DWORD PTR [ecx-0x25]
  4051e5:	push   ebx
  4051e6:	adc    eax,0x53ff9a2e
  4051eb:	xor    eax,DWORD PTR [edx]
  4051ed:	and    ah,BYTE PTR [eax+0x46160de5]
  4051f3:	pop    ss
  4051f4:	lods   al,BYTE PTR ds:[esi]
  4051f5:	(bad)  
  4051f7:	pop    ss
  4051f8:	pop    ds
  4051f9:	int3   
  4051fa:	sub    bh,BYTE PTR [ecx]
  4051fc:	or     BYTE PTR [esp+ebx*1+0x449449c],al
  405203:	or     al,0xb6
  405205:	adc    esi,DWORD PTR [ebx-0x2f8487a3]
  40520b:	mov    al,0xa4
  40520d:	outs   dx,DWORD PTR ds:[esi]
  40520e:	cmc    
  40520f:	cmp    BYTE PTR [edx+0x4cbe3139],bl
  405215:	xchg   ecx,eax
  405216:	mov    edi,0xa4966305
  40521b:	mov    WORD PTR [ebp-0xe],?
  40521e:	inc    edi
  40521f:	cmp    bl,bh
  405221:	psubsw mm1,QWORD PTR [ecx+0x93f667f]
  405228:	in     eax,0xbd
  40522a:	add    ebp,DWORD PTR [ecx+0x63]
  40522d:	daa    
  40522e:	out    0xfe,eax
  405230:	ins    BYTE PTR es:[edi],dx
  405231:	mov    esi,0xddcfc3b2
  405236:	cmc    
  405237:	addr16 jge 0x4052b4
  40523a:	adc    dl,bh
  40523c:	adc    bh,dl
  40523e:	or     al,0x22
  405240:	fprem1 
  405242:	iret   
  405243:	in     eax,0x98
  405245:	cmp    al,0xf2
  405247:	push   ecx
  405248:	xlat   BYTE PTR fs:[ebx]
  40524a:	mov    ebp,edx
  40524c:	xchg   edi,ecx
  40524e:	jae    0x405250
  405250:	push   ss
  405251:	push   ss
  405252:	add    cl,BYTE PTR [ebx]
  405254:	mov    edi,0xedaf813b
  405259:	sub    BYTE PTR [edx+esi*2],0x26
  40525d:	test   DWORD PTR [ebp-0x37cfd355],ebx
  405263:	das    
  405264:	outs   dx,BYTE PTR ds:[esi]
  405265:	outs   dx,DWORD PTR ds:[esi]
  405266:	cli    
  405267:	mov    bl,0x18
  405269:	inc    edx
  40526a:	ret    0x93fb
  40526d:	mov    ds:0x1cfcecd1,eax
  405272:	cmp    al,BYTE PTR [esi+eiz*4+0x515f81d2]
  405279:	xor    eax,DWORD PTR [eax+0x1e5f9f5f]
  40527f:	sti    
  405280:	stc    
  405281:	rcl    BYTE PTR [edx],1
  405283:	ja     0x405207
  405285:	xchg   edi,eax
  405286:	cmp    dl,BYTE PTR [esi-0x6a]
  405289:	ds dec eax
  40528b:	push   esi
  40528c:	int3   
  40528d:	jge    0x40530b
  40528f:	fiadd  DWORD PTR [ecx]
  405291:	push   ds
  405292:	es add eax,0x7aec02f6
  405298:	ret    0x9453
  40529b:	mov    ds:0x41d71896,eax
  4052a0:	mov    al,ds:0x976316df
  4052a5:	stos   DWORD PTR es:[edi],eax
  4052a6:	int3   
  4052a7:	push   0x14660455
  4052ac:	fwait
  4052ad:	or     BYTE PTR [edx+0x1a523f4d],al
  4052b3:	in     eax,dx
  4052b4:	scas   al,BYTE PTR es:[edi]
  4052b5:	fs mov edx,0xc729ef2b
  4052bb:	mov    bl,0x98
  4052bd:	mov    BYTE PTR [eax-0x55],ah
  4052c0:	jmp    0x40527c
  4052c2:	xor    DWORD PTR [edi+edx*2-0x7e],eax
  4052c6:	hlt    
  4052c7:	or     dh,BYTE PTR [ecx-0x55]
  4052ca:	adc    eax,0x8565448a
  4052cf:	and    ecx,ebp
  4052d1:	pop    ss
  4052d2:	mov    ebp,0x7282270
  4052d7:	jbe    0x4052a9
  4052d9:	dec    edx
  4052da:	mov    dx,0xedca
  4052de:	imul   esp,DWORD PTR ds:0xb25162e9,0x4793afaa
  4052e8:	pop    ss
  4052e9:	pop    ebx
  4052ea:	repz jmp 0x405355
  4052ed:	into   
  4052ee:	inc    edi
  4052ef:	push   edi
  4052f0:	fiadd  DWORD PTR ds:0x59381ce5
  4052f6:	nop
  4052f7:	mov    DWORD PTR [ebx+eiz*2-0x1c],edx
  4052fb:	inc    esp
  4052fc:	(bad)  
  4052fd:	push   ds
  4052fe:	mov    BYTE PTR [ecx-0x17],0x8a
  405302:	lods   eax,DWORD PTR ds:[esi]
  405303:	dec    ecx
  405304:	inc    esi
  405305:	jl     0x40533c
  405307:	xchg   dh,ch
  405309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40530a:	push   eax
  40530b:	jmp    0xe246:0x2e131b7a
  405312:	inc    esi
  405313:	mov    eax,0xdfbeccbe
  405318:	and    esi,DWORD PTR [eax+0x1a05e4b0]
  40531e:	sub    al,0xf4
  405320:	pop    edi
  405321:	dec    edi
  405322:	pop    edi
  405323:	ins    DWORD PTR es:[edi],dx
  405324:	adc    eax,0xc95713f9
  405329:	call   0xf875:0xff5069e6
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	clc    
  40534c:	jmp    0x40536f
  40534e:	xchg   edi,eax
  40534f:	push   ss
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x40532e
  405358:	dec    esp
  405359:	and    eax,0x320bebc3
  40535e:	ret    0xdb79
  405361:	test   al,0x64
  405363:	mov    bl,0xf5
  405365:	sbb    eax,0x3b39f3cc
  40536a:	mov    ds:0x69c39536,al
  40536f:	jne    0x4053bf
  405371:	xor    bh,al
  405373:	mov    eax,0xa86bbf7e
  405378:	ror    ah,1
  40537a:	ss push dx
  40537d:	cdq    
  40537e:	(bad)  
  40537f:	jl     0x4053a3
  405381:	add    eax,0xe0cae8d3
  405386:	jecxz  0x40530d
  405388:	push   0x2d77438a
  40538d:	cmp    al,0xe1
  40538f:	jo     0x405345
  405391:	sar    BYTE PTR [ebx+esi*4-0x79],cl
  405395:	adc    al,0xb8
  405397:	dec    edi
  405398:	gs xor al,0x89
  40539b:	xchg   esi,edx
  40539d:	adc    al,0x3f
  40539f:	addr16 or eax,0xbf343c06
  4053a5:	iret   
  4053a6:	jae    0x4053ba
  4053a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a9:	rol    al,0xf7
  4053ac:	leave  
  4053ad:	and    al,0x5b
  4053af:	mov    eax,0xb428da2e
  4053b4:	jecxz  0x405341
  4053b6:	scas   eax,DWORD PTR es:[edi]
  4053b7:	popa   
  4053b8:	mov    esp,0xc53a7e8c
  4053bd:	sti    
  4053be:	idiv   BYTE PTR [ebp-0xd4f967]
  4053c4:	and    ebp,DWORD PTR [edi]
  4053c6:	jae    0x4053c1
  4053c8:	ja     0x4053f7
  4053ca:	mov    eax,0x461e8fd0
  4053cf:	mov    ch,0x18
  4053d1:	add    al,0x38
  4053d3:	cmp    BYTE PTR [eax+0x68],bl
  4053d6:	cld    
  4053d7:	jb     0x405383
  4053d9:	and    DWORD PTR [ecx],esp
  4053db:	xlat   BYTE PTR ds:[ebx]
  4053dc:	xor    edx,esi
  4053de:	xchg   edx,eax
  4053df:	ins    DWORD PTR es:[edi],dx
  4053e0:	push   ebx
  4053e1:	sti    
  4053e2:	and    ebx,esp
  4053e4:	in     eax,dx
  4053e5:	pop    dx
  4053e7:	jne    0x4053b7
  4053e9:	pusha  
  4053ea:	ret    
  4053eb:	cmp    BYTE PTR [ebx-0x5],dl
  4053ee:	hlt    
  4053ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f0:	sub    al,0xbc
  4053f2:	in     al,0x7b
  4053f4:	popa   
  4053f5:	and    ax,WORD PTR [edi+0x40]
  4053f9:	(bad)  
  4053fa:	rcr    BYTE PTR [edx+0x4a],1
  4053fd:	popf   
  4053fe:	aam    0x8f
  405400:	cwde   
  405401:	jns    0x405448
  405403:	aam    0xd1
  405405:	inc    ecx
  405406:	jb     0x4053b3
  405408:	inc    edx
  405409:	pop    ebx
  40540a:	sub    cl,BYTE PTR [ebp+0xe]
  40540d:	pop    ebx
  40540e:	add    eax,0xff9f60a0
  405413:	pop    eax
  405414:	push   esp
  405415:	mov    ah,0x71
  405417:	mov    edi,0x41fa7016
  40541c:	cdq    
  40541d:	mov    cl,0x84
  40541f:	in     eax,dx
  405420:	aas    
  405421:	ins    BYTE PTR es:[edi],dx
  405422:	xchg   edx,eax
  405423:	in     al,0x11
  405425:	adc    edx,eax
  405427:	xchg   ebx,eax
  405428:	and    BYTE PTR [edi+0x6c0400e],dl
  40542e:	mov    DWORD PTR [ebp-0x17],esi
  405431:	mov    eax,0xad8f1801
  405436:	push   eax
  405437:	and    al,0x4
  405439:	arpl   WORD PTR [ecx],ax
  40543b:	push   eax
  40543d:	push   esp
  40543e:	inc    esp
  40543f:	jne    0x40549e
  405441:	in     eax,0x6d
  405443:	data16 ror al,1
  405446:	stc    
  405447:	ja     0x40546c
  405449:	in     al,dx
  40544a:	xor    al,0x90
  40544c:	adc    bl,BYTE PTR [edi-0x16]
  40544f:	int    0xfc
  405451:	xor    edi,DWORD PTR [edx-0x69]
  405454:	in     al,dx
  405455:	ins    DWORD PTR es:[edi],dx
  405456:	in     al,dx
  405457:	xchg   ecx,eax
  405458:	inc    edx
  405459:	sub    BYTE PTR [ecx],ch
  40545b:	fldenv cs:[ecx-0x166f5876]
  405462:	imul   esi,DWORD PTR [edx],0xfffffff5
  405465:	inc    edi
  405467:	sub    ebx,DWORD PTR [ebx]
  405469:	dec    esp
  40546a:	jo     0x40543e
  40546c:	xor    eax,0x57966a0c
  405471:	daa    
  405472:	popa   
  405473:	xor    edx,DWORD PTR [ebx-0x6a0dedb1]
  405479:	scas   al,BYTE PTR es:[edi]
  40547a:	shld   esi,edi,cl
  40547d:	ja     0x4054f6
  40547f:	cdq    
  405480:	repz das 
  405482:	test   al,0x59
  405484:	(bad)  
  405485:	retf   
  405486:	inc    esi
  405487:	push   edi
  405488:	gs add eax,0xc8f1caeb
  40548e:	push   ds
  40548f:	mul    bl
  405491:	fst    QWORD PTR [edx+0x64]
  405494:	cmp    eax,DWORD PTR [edi-0x1094c5c8]
  40549a:	jge    0x405491
  40549c:	pushaw 
  40549e:	in     al,0x89
  4054a0:	scas   eax,DWORD PTR es:[edi]
  4054a1:	ret    0x6486
  4054a4:	add    eax,0x4d3ce839
  4054a9:	xor    ecx,DWORD PTR [edi+0x6288203d]
  4054af:	cmc    
  4054b0:	scas   al,BYTE PTR es:[edi]
  4054b1:	js     0x4054cd
  4054b3:	call   0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x48],0xffffff94
  40550f:	mov    cl,0xd9
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x4054d5
  40551a:	hlt    
  40551b:	xor    BYTE PTR [edi+edx*2+0x2b],cl
  40551f:	movq   QWORD PTR [edi+ecx*8],mm7
  405523:	mov    ch,BYTE PTR [eax+0x3b]
  405526:	mov    ds,WORD PTR [esi+0x3b]
  405529:	scas   al,BYTE PTR es:[edi]
  40552a:	stos   DWORD PTR es:[edi],eax
  40552b:	and    eax,eax
  40552d:	pop    es
  40552e:	pop    ebp
  40552f:	sbb    bl,BYTE PTR [edi-0x39]
  405532:	repnz push ds
  405534:	in     eax,dx
  405535:	and    DWORD PTR [esi-0x5a8b5f90],0xffffffa8
  40553c:	mov    dl,0xf7
  40553e:	stos   DWORD PTR es:[edi],eax
  40553f:	push   ss
  405540:	out    0x7a,eax
  405542:	imul   eax,DWORD PTR [ebp+eax*4-0x6],0xea0d7a6d
  40554a:	xchg   DWORD PTR [esi+0x4b4f338b],edx
  405550:	in     al,dx
  405551:	call   0x97b9:0x91a8d404
  405558:	mov    al,0x79
  40555a:	dec    dx
  40555c:	ins    DWORD PTR es:[edi],dx
  40555d:	xchg   BYTE PTR [eax-0x2ff7688b],dl
  405563:	push   0xc4a24a83
  405568:	je     0x405590
  40556a:	or     DWORD PTR [eax],edx
  40556c:	ror    DWORD PTR [esi],cl
  40556e:	xchg   edx,eax
  40556f:	mov    bh,0x56
  405571:	(bad)  
  405573:	imul   ecx,DWORD PTR [esp+ebp*4+0x4d],0xffffffb6
  405578:	leave  
  405579:	in     eax,0xe
  40557b:	nop
  40557c:	push   edx
  40557d:	xchg   ebp,eax
  40557e:	pop    es
  40557f:	xchg   ebx,eax
  405580:	sub    DWORD PTR ds:0x1b678cc5,edx
  405586:	lds    ebp,FWORD PTR [edi-0x40904b08]
  40558c:	dec    edx
  40558d:	dec    ecx
  40558e:	xchg   edi,esi
  405590:	mov    ebp,0xb040b146
  405595:	(bad)  
  405596:	retf   
  405597:	(bad)  
  405598:	sahf   
  405599:	and    ebx,eax
  40559b:	scas   al,BYTE PTR es:[edi]
  40559c:	or     ebp,DWORD PTR [eax+ecx*1]
  40559f:	pop    ds
  4055a0:	fst    DWORD PTR [edx+0x50]
  4055a3:	pushf  
  4055a4:	xor    al,0x4a
  4055a6:	or     eax,0xbda3d174
  4055ab:	mov    eax,ds:0xd3191496
  4055b0:	push   eax
  4055b1:	inc    ebx
  4055b2:	out    dx,eax
  4055b3:	adc    BYTE PTR [edx-0x2f40858c],bl
  4055b9:	xchg   ebp,eax
  4055ba:	push   ebx
  4055bb:	bound  ebp,QWORD PTR [edx+0xf]
  4055be:	sbb    DWORD PTR [esi-0x58],edx
  4055c1:	scas   eax,DWORD PTR es:[edi]
  4055c2:	int    0x68
  4055c4:	xchg   esp,eax
  4055c5:	fdiv   QWORD PTR [ebp+edx*1-0x7150ff3e]
  4055cc:	loope  0x4055b1
  4055ce:	adc    BYTE PTR [ecx+ecx*1],bl
  4055d1:	in     eax,dx
  4055d2:	call   DWORD PTR [eax]
  4055d4:	cmc    
  4055d5:	sub    BYTE PTR [ecx-0x49],0xe8
  4055d9:	mov    dl,0xc0
  4055db:	lds    esp,FWORD PTR [ecx-0xe44196b]
  4055e1:	cli    
  4055e2:	scas   al,BYTE PTR es:[edi]
  4055e3:	test   BYTE PTR cs:[ebp+0x73],0x62
  4055e8:	add    DWORD PTR [edx],eax
  4055ea:	pop    ecx
  4055eb:	jne    0x4055c5
  4055ed:	xor    ch,BYTE PTR [ebx-0x13ebaf1c]
  4055f3:	es iret 
  4055f5:	push   ebx
  4055f6:	fs sahf 
  4055f8:	cmp    eax,0xd466c46b
  4055fd:	inc    esi
  4055fe:	push   ebx
  4055ff:	inc    esp
  405600:	mov    al,0xe6
  405602:	add    eax,0xcf0de45a
  405607:	push   ds
  405608:	dec    esi
  405609:	mov    ?,WORD PTR [eax+0x3fdc84aa]
  40560f:	xor    al,0x29
  405611:	and    al,0xb0
  405613:	fsubr  st(0),st
  405615:	leave  
  405616:	push   cs
  405617:	or     bl,BYTE PTR [eax]
  405619:	jle    0x405640
  40561b:	xchg   ebp,edx
  40561d:	xor    dl,dl
  40561f:	jo     0x4055b5
  405621:	out    dx,al
  405622:	ins    DWORD PTR es:[edi],dx
  405623:	pop    eax
  405624:	inc    ecx
  405625:	jp     0x405658
  405627:	sbb    eax,esp
  405629:	sbb    eax,0x21d3c6ce
  40562e:	dec    ebp
  40562f:	or     DWORD PTR [edx-0x72],0xab89c6f1
  405636:	(bad)  
  405637:	sti    
  405638:	or     dh,BYTE PTR [edx]
  40563a:	das    
  40563b:	in     al,dx
  40563c:	jo     0x4055d9
  40563e:	fisub  DWORD PTR [eax+0xd]
  405641:	add    eax,DWORD PTR [ebx]
  405643:	mov    dl,0x27
  405645:	aas    
  405646:	scas   al,BYTE PTR es:[edi]
  405647:	mov    WORD PTR [ebx],cs
  405649:	rol    ah,0xc4
  40564c:	loope  0x405634
  40564e:	pop    ebx
  40564f:	imul   eax
  405651:	inc    ebx
  405652:	ret    0x77e8
  405655:	mov    ds:0x2b79beb7,eax
  40565a:	test   eax,0x505d3f39
  40565f:	mov    dh,0xc1
  405661:	enter  0x5ee5,0x74
  405665:	add    al,0x6f
  405667:	fdiv   QWORD PTR [ebx+esi*8+0x498dbe39]
  40566e:	adc    DWORD PTR [edx+0x7592768d],edi
  405674:	nop
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	pop    eax
  4056a1:	mov    edx,0x745eae67
  4056a6:	jle    0x405726
  4056a8:	fidivr DWORD PTR [edi+0x7e]
  4056ab:	jle    0x4056c7
  4056ad:	xor    eax,0xbcc183c5
  4056b2:	mov    eax,DWORD PTR [ebx-0x3d2372c2]
  4056b8:	push   edx
  4056b9:	xchg   edi,eax
  4056ba:	data16 sub al,0x9e
  4056bd:	jb     0x40573e
  4056bf:	sbb    DWORD PTR [ecx+0x63be6e74],edx
  4056c5:	push   DWORD PTR [eax-0x7a]
  4056c8:	ret    
  4056c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ca:	cmp    al,0x23
  4056cc:	lahf   
  4056cd:	xchg   DWORD PTR [eax+0x463e6941],eax
  4056d3:	mov    eax,0xe912dafe
  4056d8:	jmp    0xf34e:0x509b28cf
  4056df:	adc    eax,0xb3acbd7c
  4056e4:	xor    ebp,eax
  4056e6:	popf   
  4056e7:	push   0xb85034e3
  4056ec:	shl    BYTE PTR [edi],cl
  4056ee:	add    bh,0x24
  4056f1:	or     al,0x56
  4056f3:	dec    edx
  4056f4:	push   eax
  4056f5:	popa   
  4056f6:	imul   eax,DWORD PTR [esi+0x6784cb67],0xfffffff7
  4056fd:	and    edi,ebx
  4056ff:	(bad)  
  405700:	push   ds
  405701:	pop    ebx
  405702:	sbb    edx,esi
  405704:	pop    ecx
  405705:	mov    ah,BYTE PTR [edx+0x58a650e0]
  40570b:	adc    al,0x9d
  40570d:	bound  esi,QWORD PTR [edx]
  40570f:	or     eax,0x3bab95d4
  405714:	je     0x405735
  405716:	icebp  
  405717:	cwde   
  405718:	mov    ds:0x42605688,eax
  40571d:	adc    dl,BYTE PTR [ecx-0x11]
  405720:	sub    DWORD PTR ds:0xe4f0e96c,esp
  405726:	outs   dx,DWORD PTR ds:[esi]
  405727:	or     eax,0x22322f2a
  40572c:	sbb    eax,0x32efb470
  405731:	or     ch,BYTE PTR [esi+0x6a9285c5]
  405737:	dec    esp
  405738:	or     esp,DWORD PTR [ebp+0x21]
  40573b:	js     0x405765
  40573d:	rcr    DWORD PTR [eax],1
  40573f:	fs (bad) 
  405741:	aad    0xb1
  405743:	out    dx,al
  405744:	pop    esp
  405745:	std    
  405746:	pop    ecx
  405747:	mov    ecx,0x908078de
  40574c:	hlt    
  40574d:	inc    ebp
  40574e:	mov    ds:0x9d6d48fb,al
  405753:	sub    bl,BYTE PTR [edx+0x2c]
  405756:	jno    0x4057c0
  405758:	push   ss
  405759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40575a:	in     eax,dx
  40575b:	or     BYTE PTR [edx+esi*2+0x74],bl
  40575f:	sub    eax,0x9143d0a1
  405764:	cmp    eax,0xaabb47f7
  405769:	mov    DWORD PTR [eax],ebx
  40576b:	js     0x405745
  40576d:	mov    cl,0x1d
  40576f:	(bad)  
  405770:	mov    edi,0xbbb9fd62
  405775:	inc    ecx
  405776:	ret    0x7c6e
  405779:	sbb    BYTE PTR [edi-0x54790aee],bh
  40577f:	arpl   WORD PTR [eax+eiz*8+0x14],di
  405783:	je     0x405751
  405785:	jnp    0x4057e9
  405787:	add    ecx,ebp
  405789:	dec    edx
  40578a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40578b:	dec    ebp
  40578c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578d:	push   esi
  40578e:	retf   0x52bc
  405791:	mov    edx,0x8b31b38b
  405796:	test   eax,0x1b3d1fb0
  40579b:	dec    ecx
  40579c:	inc    ebx
  40579d:	mov    al,ds:0x2b21603d
  4057a2:	aaa    
  4057a3:	dec    ebp
  4057a4:	cmp    ah,BYTE PTR [edx-0xa]
  4057a7:	sbb    bh,dl
  4057a9:	test   al,0x0
  4057ab:	nop
  4057ac:	inc    eax
  4057ad:	mov    cl,0xe2
  4057af:	add    eax,0x51376c8
  4057b4:	xchg   esp,eax
  4057b5:	je     0x405790
  4057b7:	adc    eax,0x41dd2d48
  4057bc:	(bad)  
  4057bd:	(bad)  
  4057be:	push   0x44837c75
  4057c3:	dec    eax
  4057c4:	xchg   ebp,eax
  4057c5:	jno    0x4057af
  4057c7:	in     al,dx
  4057c8:	lock stos BYTE PTR es:[edi],al
  4057ca:	call   0x2bb6:0x4bf13814
  4057d1:	jnp    0x4057e0
  4057d3:	pushf  
  4057d4:	into   
  4057d5:	push   ss
  4057d6:	nop/reserved BYTE PTR [esi+0x2a2096de]
  4057dd:	inc    ecx
  4057de:	cmc    
  4057df:	cs pop eax
  4057e1:	xor    BYTE PTR [ecx+0x4],al
  4057e4:	or     esi,DWORD PTR [ecx+0x4f]
  4057e7:	dec    ebp
  4057e8:	fstp   DWORD PTR [ebp+ebp*4+0x3f]
  4057ec:	mov    edx,0x98c30e99
  4057f1:	daa    
  4057f2:	repz mov ebp,fs
  4057f5:	(bad)  
  4057f6:	fldcw  WORD PTR [ecx-0xb]
  4057f9:	out    0x35,al
  4057fb:	xchg   eax,esi
  4057fd:	sbb    al,0x7e
  4057ff:	retf   0x8957
  405802:	test   al,0xf7
  405804:	xor    eax,0xfe291382
  405809:	or     bh,bh
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	mov    DWORD PTR [esi+0xa3a87f4],eax
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x405821
  405863:	inc    ebp
  405864:	loopne 0x4057fb
  405866:	or     eax,0xc4e7d060
  40586b:	cmc    
  40586c:	outs   dx,DWORD PTR ds:[esi]
  40586d:	push   ebp
  40586e:	mov    esp,0xbc30d209
  405873:	sub    eax,0x6d5537c0
  405878:	fucom  st(2)
  40587a:	cmc    
  40587b:	enter  0xe58d,0xc2
  40587f:	mov    ss,WORD PTR [eax]
  405881:	and    bh,BYTE PTR [ebp+0x58dd8be7]
  405887:	add    BYTE PTR [edi],cl
  405889:	loopne 0x405856
  40588b:	imul   DWORD PTR [bx+di-0x1e]
  40588f:	call   0x58830bd
  405894:	pusha  
  405895:	outs   dx,BYTE PTR ds:[esi]
  405896:	(bad)  
  405897:	adc    dl,bh
  405899:	mov    bl,0xa0
  40589b:	dec    ecx
  40589c:	adc    DWORD PTR ds:0x4c0dc698,ecx
  4058a2:	call   0xdaded262
  4058a7:	pushf  
  4058a8:	clc    
  4058a9:	jnp    0x40591a
  4058ab:	mov    ds:0xcd536ccb,al
  4058b0:	dec    esp
  4058b1:	fcmovu st,st(4)
  4058b3:	pop    ebx
  4058b4:	jns    0x4058f2
  4058b6:	jp     0x405867
  4058b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b9:	mov    eax,ds:0x2b7e4b4e
  4058be:	xor    al,0x98
  4058c0:	(bad)  
  4058c1:	sbb    ch,BYTE PTR [ebx]
  4058c3:	sub    eax,0x9faf6727
  4058c8:	push   ebp
  4058c9:	push   ecx
  4058ca:	(bad)  
  4058cb:	sub    dl,BYTE PTR [ebp+0xc743286]
  4058d1:	lahf   
  4058d2:	mov    ds:0xcdc40eb7,eax
  4058d7:	(bad)  
  4058d8:	outs   dx,BYTE PTR ds:[esi]
  4058d9:	dec    ecx
  4058da:	in     al,0xd6
  4058dc:	jle    0x405922
  4058de:	lahf   
  4058df:	popa   
  4058e0:	stos   DWORD PTR es:[edi],eax
  4058e1:	ret    0x8ae9
  4058e4:	mov    ecx,tr0
  4058e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e8:	or     edx,esp
  4058ea:	dec    edi
  4058eb:	xor    dl,BYTE PTR [edi+0x52499aec]
  4058f1:	pop    DWORD PTR [ebx]
  4058f3:	fld    st(1)
  4058f5:	pop    ecx
  4058f6:	repnz jmp 0xe109:0x9e289c57
  4058fe:	or     BYTE PTR ds:0x48ed66f0,ch
  405904:	clc    
  405905:	imul   edi,DWORD PTR [ecx],0xfffffff8
  405908:	or     al,0xf7
  40590a:	mov    esi,ds
  40590c:	fucom  st(7)
  40590e:	scas   eax,DWORD PTR es:[edi]
  40590f:	cmp    ecx,edx
  405911:	cmp    dh,0xe7
  405914:	ret    
  405915:	jo     0x40596d
  405917:	icebp  
  405918:	inc    ebp
  405919:	mov    al,ds:0x3b4e9751
  40591e:	lahf   
  40591f:	push   0x77
  405921:	pop    ebp
  405922:	dec    esi
  405923:	or     ebx,DWORD PTR [ecx+0x47]
  405926:	popf   
  405927:	call   0x9efaa16d
  40592c:	lock jne 0x4058df
  40592f:	push   ebp
  405930:	(bad)  
  405932:	imul   BYTE PTR [edi]
  405934:	sbb    eax,0x938fddac
  405939:	test   al,0x49
  40593c:	idiv   BYTE PTR [ecx]
  40593e:	(bad)  
  40593f:	(bad)  
  405940:	push   ss
  405941:	push   esi
  405942:	pop    esp
  405943:	outs   dx,BYTE PTR ds:[esi]
  405944:	or     BYTE PTR [edi+eax*1],0x41
  405948:	lahf   
  405949:	cmp    al,0x77
  40594b:	loop   0x405930
  40594d:	sub    edx,DWORD PTR [eax+0x55]
  405950:	aad    0xa8
  405952:	sbb    al,0x88
  405954:	push   ebp
  405955:	pop    eax
  405956:	push   0x2611a960
  40595b:	stos   DWORD PTR es:[edi],eax
  40595c:	xchg   ecx,eax
  40595d:	mov    dl,0x54
  40595f:	out    0x66,eax
  405961:	inc    edi
  405962:	push   cs
  405963:	fbstp  TBYTE PTR [ecx]
  405965:	mov    ecx,DWORD PTR [eax]
  405967:	inc    edx
  405968:	mov    dl,0x18
  40596a:	pop    ebx
  40596b:	ins    DWORD PTR es:[edi],dx
  40596c:	rcr    bl,0x60
  40596f:	fcom   DWORD PTR [ebx+0x4772b6da]
  405975:	dec    esp
  405976:	cwde   
  405977:	xor    BYTE PTR [eax-0x4a],al
  40597a:	jae    0x4059ad
  40597c:	xchg   BYTE PTR [ebp+0x2771d458],ah
  405982:	cld    
  405983:	push   edx
  405984:	adc    BYTE PTR [edi],dh
  405986:	leave  
  405987:	jne    0x405925
  405989:	adc    DWORD PTR [eax-0x65],ebx
  40598c:	je     0x4059d9
  40598e:	(bad)  
  40598f:	cdq    
  405990:	dec    eax
  405991:	nop
  405992:	outs   dx,BYTE PTR ds:[esi]
  405993:	dec    ecx
  405994:	lea    esi,[edi+0x18]
  405997:	push   esi
  405998:	mov    ecx,0xb02503bc
  40599d:	into   
  40599e:	(bad)  
  4059a0:	outs   dx,DWORD PTR ds:[esi]
  4059a1:	jno    0x4059d3
  4059a3:	dec    esp
  4059a4:	sbb    bl,bh
  4059a6:	imul   edi,DWORD PTR ds:0xe6e96bf9,0xd465a314
  4059b0:	adc    eax,0xe4922fc5
  4059b5:	add    BYTE PTR [edx],ah
  4059b7:	mov    edx,0x20439bd8
  4059bc:	int    0x8e
  4059be:	mov    ecx,DWORD PTR ds:0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	mov    WORD PTR [ecx-0x2d],es
  405ac6:	inc    edi
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405aad
  405ad0:	(bad)  
  405ad3:	data16 out 0x1f,al
  405ad6:	sub    DWORD PTR [edi],esp
  405ad8:	mov    ah,0xed
  405ada:	mov    esp,0xfb60fdd7
  405adf:	mov    al,ds:0x85e65f87
  405ae4:	pop    ebp
  405ae5:	mov    edx,0x9ff731ef
  405aea:	xor    DWORD PTR [edi],esi
  405aec:	dec    esi
  405aed:	arpl   cx,si
  405aef:	cmp    BYTE PTR [ebx+0x48],0x9f
  405af3:	lods   eax,DWORD PTR ds:[esi]
  405af4:	xchg   DWORD PTR [esi],edx
  405af6:	add    BYTE PTR [edi-0x46],0xfb
  405afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afb:	adc    al,0x1c
  405afd:	mov    eax,0xe98c0537
  405b02:	cmp    DWORD PTR [edi],edi
  405b04:	div    DWORD PTR [edi+0x5c]
  405b07:	test   esi,esi
  405b09:	adc    esp,DWORD PTR [edx-0x70e6ab36]
  405b0f:	sbb    esi,DWORD PTR [ecx]
  405b11:	xchg   esp,eax
  405b12:	aaa    
  405b13:	(bad)  
  405b14:	imul   ebp,esp,0xfffffff1
  405b17:	cwde   
  405b18:	xchg   esi,eax
  405b19:	std    
  405b1a:	sub    BYTE PTR [ecx-0x21307bb0],dl
  405b20:	jmp    0x2d2c:0x7dc3c9ad
  405b27:	mov    edx,0x3b5fe8ae
  405b2c:	and    edi,DWORD PTR [ebx+esi*1-0x61]
  405b30:	repz jmp 0x5bf62bbe
  405b36:	mov    ?,WORD PTR [edx+ebp*2-0x2a3883bd]
  405b3d:	cmp    edx,ebx
  405b3f:	pop    es
  405b40:	in     al,0x8d
  405b42:	push   esp
  405b43:	setge  BYTE PTR [ecx+0x44]
  405b47:	(bad)  [edi+0x6ae67cdc]
  405b4d:	test   BYTE PTR [edi-0xa608fb7],ah
  405b53:	dec    edx
  405b54:	xchg   ebx,eax
  405b55:	adc    BYTE PTR [ebp-0x6b],dl
  405b58:	or     dl,BYTE PTR [ecx-0x2c]
  405b5b:	fsub   DWORD PTR [edx]
  405b5d:	dec    esp
  405b5e:	test   bh,al
  405b60:	cld    
  405b61:	and    eax,0x55641c45
  405b66:	ins    DWORD PTR es:[edi],dx
  405b67:	rcl    DWORD PTR [edx],0xcf
  405b6a:	cmp    esp,ebx
  405b6c:	xor    eax,0xb0481a20
  405b71:	jp     0x405bb4
  405b73:	fsubr  QWORD PTR [ebx-0x16]
  405b76:	jne    0x405bd4
  405b78:	mov    al,0x21
  405b7a:	in     al,dx
  405b7b:	cli    
  405b7c:	aad    0xd8
  405b7e:	cmp    al,0xda
  405b80:	sahf   
  405b81:	cwde   
  405b82:	adc    eax,0x49aabf94
  405b87:	stos   DWORD PTR es:[edi],eax
  405b88:	add    dl,BYTE PTR [eax]
  405b8a:	dec    esi
  405b8b:	and    al,0x19
  405b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b8e:	add    BYTE PTR [ebx-0x2b],0x61
  405b92:	sti    
  405b93:	scas   eax,DWORD PTR es:[edi]
  405b94:	push   edi
  405b95:	push   eax
  405b96:	out    0xad,eax
  405b98:	(bad)  
  405b99:	pop    edx
  405b9a:	daa    
  405b9b:	retf   
  405b9c:	jle    0x405b83
  405b9e:	push   cs
  405b9f:	mov    ebp,cs
  405ba1:	xlat   BYTE PTR ds:[ebx]
  405ba2:	jp     0x405b88
  405ba4:	inc    ecx
  405ba5:	fnstcw WORD PTR [edx]
  405ba7:	inc    ecx
  405ba8:	data16 jnp 0x405b5a
  405bab:	xchg   edx,eax
  405bac:	clc    
  405bad:	xchg   esp,eax
  405bae:	jbe    0x405b6f
  405bb0:	pcmpgtd mm2,QWORD PTR [edi-0x50d8d936]
  405bb7:	xchg   ecx,eax
  405bb8:	out    0x52,al
  405bba:	inc    esp
  405bbb:	sbb    BYTE PTR [edx+0x2e1880d7],bh
  405bc1:	sbb    cl,BYTE PTR [bx+di]
  405bc4:	xchg   DWORD PTR [edx],ecx
  405bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc7:	mov    ss,WORD PTR [ebx+0x1e5af036]
  405bcd:	(bad)  
  405bce:	adc    eax,0x1388f7d7
  405bd3:	inc    DWORD PTR [esi+0x59]
  405bd6:	push   ebp
  405bd7:	jle    0x405ba6
  405bd9:	adc    BYTE PTR [edx+eiz*2+0x49],cl
  405bdd:	test   ebp,edi
  405bdf:	scas   eax,DWORD PTR es:[edi]
  405be0:	and    edi,DWORD PTR [esi]
  405be2:	xchg   ecx,eax
  405be3:	mov    esi,0xd0c5d8
  405be8:	jmp    0x79c7:0x7fbf2526
  405bef:	push   0x28
  405bf1:	out    0x7f,al
  405bf3:	xor    ah,bl
  405bf5:	push   0xf8829650
  405bfa:	sbb    BYTE PTR [ecx+0x2e],0xaa
  405bfe:	fs push ss
  405c00:	clc    
  405c01:	xchg   edi,eax
  405c02:	xor    esi,eax
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	(bad)  
  405c69:	lock imul ebp,edi,0x7e7e084b
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c0c
  405c75:	inc    esi
  405c76:	and    DWORD PTR [esp+edx*4-0x34],edx
  405c7a:	(bad)
  405c7d:	inc    edi
  405c7e:	dec    esp
  405c7f:	pop    ds
  405c80:	mov    bh,0xd6
  405c82:	fisttp QWORD PTR [edi+0x58]
  405c85:	mov    WORD PTR [edi],es
  405c87:	das    
  405c88:	cli    
  405c89:	jmp    0x1448:0xe0950fe8
  405c90:	imul   ebp,DWORD PTR [ebx+0x1c],0x40d6000b
  405c97:	adc    BYTE PTR [edx-0x48],al
  405c9a:	mov    ch,0x82
  405c9c:	push   ds
  405c9d:	rol    BYTE PTR [ebx],1
  405c9f:	mov    al,es:0xb58e4e9e
  405ca5:	stc    
  405ca6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405ca8:	iret   
  405ca9:	push   eax
  405caa:	xchg   esi,eax
  405cab:	adc    dh,BYTE PTR [edx+0x0]
  405cae:	aaa    
  405caf:	mov    edi,0x40b4c647
  405cb4:	div    DWORD PTR [ebp-0xd]
  405cb7:	repnz aam 0xe9
  405cba:	mov    cl,0x21
  405cbc:	call   0x2a87:0xcd00b586
  405cc3:	loopne 0x405cd0
  405cc5:	aam    0x82
  405cc7:	test   BYTE PTR [esi],dl
  405cc9:	sbb    ah,al
  405ccb:	mov    WORD PTR cs:[esi+0x486db5b4],ds
  405cd2:	jnp    0x405cd1
  405cd4:	jle    0x405cf4
  405cd6:	mov    BYTE PTR [edi+0x7e0aa58c],dh
  405cdc:	clc    
  405cdd:	jmp    0xa61b:0xbe73226d
  405ce4:	xchg   ecx,eax
  405ce5:	pushf  
  405ce6:	push   ecx
  405ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce9:	push   edx
  405cea:	in     eax,dx
  405ceb:	jbe    0x405d4b
  405ced:	lea    esi,[esp+edi*1-0x57]
  405cf1:	test   eax,0x1fff00ce
  405cf6:	icebp  
  405cf7:	push   0x6f
  405cf9:	fs stos DWORD PTR es:[edi],eax
  405cfb:	ror    ch,1
  405cfd:	jmp    esi
  405cff:	aad    0x63
  405d01:	jg     0x405d3d
  405d03:	cmp    BYTE PTR [ebx-0x65],ch
  405d06:	jmp    FWORD PTR [ebp+0x73]
  405d09:	in     eax,0x69
  405d0b:	imul   ecx,DWORD PTR [edx-0x45],0x56797bc3
  405d12:	and    BYTE PTR [ecx+0x59b214eb],dh
  405d18:	or     DWORD PTR ds:0xb293cabe,edx
  405d1e:	sbb    ch,BYTE PTR [edx]
  405d20:	icebp  
  405d21:	xor    eax,DWORD PTR [ebx]
  405d23:	sub    BYTE PTR [eax+0x718c6e75],bh
  405d29:	sti    
  405d2a:	xor    edi,DWORD PTR [edx-0x6d227aeb]
  405d30:	or     bl,BYTE PTR [ebx+0x72932888]
  405d36:	sbb    al,0xb
  405d38:	hlt    
  405d39:	leave  
  405d3a:	jmp    0x1d94e877
  405d3f:	fnsave [ebx+ebp*4+0x56ded37]
  405d46:	cmp    eax,0x8981e97e
  405d4b:	or     esp,esp
  405d4d:	fistp  QWORD PTR [ecx+0x2e]
  405d50:	(bad)  
  405d51:	and    BYTE PTR [esi+0x79e5c011],ah
  405d57:	jae    0x405ce3
  405d59:	ins    BYTE PTR es:[edi],dx
  405d5a:	and    DWORD PTR [ecx-0x57f75661],eax
  405d60:	call   0xb9cf:0x3306ba3d
  405d67:	out    0x2f,eax
  405d69:	push   esp
  405d6a:	cmp    DWORD PTR [ecx-0x7a],ebp
  405d6d:	mov    ch,BYTE PTR [esi+ebp*2-0x5b]
  405d71:	repnz test al,0xec
  405d74:	aaa    
  405d75:	sti    
  405d76:	xchg   edx,eax
  405d77:	scas   eax,DWORD PTR es:[edi]
  405d78:	mov    edi,0x8cfbec80
  405d7d:	popa   
  405d7e:	sbb    BYTE PTR [esi-0x1b],ch
  405d81:	imul   ebp,DWORD PTR [esi],0x6e0502b5
  405d87:	cmp    ebx,edi
  405d89:	mov    ch,0x49
  405d8b:	sub    ebx,esp
  405d8d:	jbe    0x405d8d
  405d8f:	sti    
  405d90:	cdq    
  405d91:	jp     0x405e0a
  405d93:	cmp    al,0x89
  405d95:	mov    ds,WORD PTR [edx]
  405d97:	call   0xf289:0xbf595fab
  405d9e:	adc    edx,DWORD PTR [esi-0x3bfe27ea]
  405da4:	retf   0xfc56
  405da7:	in     al,0xa9
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	push   edi
  405dbf:	jo     0x405dc9
  405dc1:	std    
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405dab
  405dcb:	fmul   DWORD PTR [ecx+0x38]
  405dce:	test   DWORD PTR [eax-0x17a6dc37],edx
  405dd4:	int3   
  405dd5:	mov    BYTE PTR [ecx+0x18a258a8],dl
  405ddb:	fiadd  DWORD PTR [ebx-0x2]
  405dde:	add    al,0x97
  405de0:	push   ebp
  405de1:	or     BYTE PTR [eax+0x4e],cl
  405de4:	cmp    eax,0x8db4b7c9
  405de9:	push   cs
  405dea:	inc    edx
  405deb:	and    BYTE PTR [edx+edi*4+0x35ad820e],ah
  405df2:	cli    
  405df3:	cdq    
  405df4:	pop    ebp
  405df5:	jle    0x405e1e
  405df7:	jne    0x405de0
  405df9:	mov    WORD PTR [edx+0x7d9afa24],fs
  405dff:	lds    esi,FWORD PTR [edx-0x5e79c9f0]
  405e05:	push   ebp
  405e06:	adc    edx,DWORD PTR [ebx]
  405e08:	mov    ebp,0xa1b69539
  405e0d:	mov    eax,ds:0x97276ca4
  405e12:	mov    al,0x1
  405e14:	adc    al,0xd1
  405e16:	xor    esi,DWORD PTR [esi+0x7dd91f4c]
  405e1c:	data16 data16 stc 
  405e1f:	fnsave [edi+0x768a6d1]
  405e25:	outs   dx,BYTE PTR ds:[esi]
  405e26:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e28:	xchg   edx,eax
  405e29:	cdq    
  405e2a:	sub    al,0x84
  405e2c:	into   
  405e2d:	push   ebx
  405e2e:	sbb    edx,esp
  405e30:	mov    al,cl
  405e32:	pusha  
  405e33:	shr    ebx,0xed
  405e36:	mov    DWORD PTR [esi],edi
  405e38:	repz sbb DWORD PTR [ebx+0x572b4e55],esp
  405e3f:	popa   
  405e40:	sbb    BYTE PTR [esi+ebp*1-0x6aeb2008],dh
  405e47:	stos   DWORD PTR es:[edi],eax
  405e48:	ja     0x405e2a
  405e4a:	mov    gs,WORD PTR [edx-0x3f]
  405e4d:	mov    ds:0xfb473ea4,eax
  405e52:	mov    bh,BYTE PTR [ebx]
  405e54:	adc    BYTE PTR [ebx],0xa3
  405e57:	cmc    
  405e58:	lods   eax,DWORD PTR ds:[si]
  405e5a:	sar    DWORD PTR [esp+eiz*4+0x20744910],cl
  405e61:	mov    ebx,0xec7d4be1
  405e66:	push   ss
  405e67:	(bad)  
  405e68:	out    0x78,eax
  405e6a:	xor    ebx,ecx
  405e6c:	retf   0xe636
  405e6f:	scas   eax,DWORD PTR es:[edi]
  405e70:	add    eax,edi
  405e72:	jns    0x405e29
  405e74:	add    eax,0x8b7d1d6b
  405e79:	pushf  
  405e7a:	scas   al,BYTE PTR es:[edi]
  405e7b:	iret   
  405e7c:	mov    ds,WORD PTR [eax+0x3fbf564]
  405e82:	mov    al,ds:0xa25c405e
  405e87:	arpl   WORD PTR [edx+ebp*2+0x6fc51521],ax
  405e8e:	(bad)  
  405e8f:	dec    ebp
  405e90:	cmp    al,0xf2
  405e92:	lahf   
  405e93:	mov    ah,0x34
  405e95:	jne    0x405e85
  405e97:	or     dh,ah
  405e99:	push   es
  405e9a:	jmp    0x405f08
  405e9c:	imul   esp,DWORD PTR [edi],0xc0d15f37
  405ea2:	push   ebp
  405ea3:	cwde   
  405ea4:	cli    
  405ea5:	fdivr  DWORD PTR [eax-0x2f612224]
  405eab:	lods   al,BYTE PTR ds:[esi]
  405eac:	push   ebx
  405ead:	daa    
  405eae:	aaa    
  405eaf:	repz dec ebp
  405eb1:	fsubr  QWORD PTR [ebp-0x2e]
  405eb4:	or     bh,BYTE PTR [eax-0x36]
  405eb7:	xchg   edi,eax
  405eb8:	iret   
  405eb9:	dec    esp
  405eba:	push   edi
  405ebb:	sub    BYTE PTR [ebx-0x9cfb030],ah
  405ec1:	push   ecx
  405ec2:	retf   0xb464
  405ec5:	nop
  405ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec7:	outs   dx,DWORD PTR ds:[esi]
  405ec8:	push   esi
  405ec9:	cmc    
  405eca:	inc    ebp
  405ecb:	jg     0x405ebb
  405ecd:	leave  
  405ece:	dec    edx
  405ecf:	daa    
  405ed0:	jae    0x405eb1
  405ed2:	out    0x38,al
  405ed4:	cmovl  ecx,DWORD PTR ds:[edi-0x230d13b2]
  405edc:	inc    edx
  405edd:	xchg   BYTE PTR [ecx+0x1b8fe69f],al
  405ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee4:	fld    TBYTE PTR [edx-0x2665cbe7]
  405eea:	adc    ebp,ebx
  405eec:	dec    ecx
  405eed:	pop    ds
  405eee:	lock jnp 0x405eca
  405ef1:	jnp    0x405f45
  405ef3:	loopne 0x405e80
  405ef5:	das    
  405ef6:	rcl    BYTE PTR [esi-0x7d],cl
  405ef9:	xchg   edi,eax
  405efa:	test   al,0x3f
  405efc:	jmp    0x46085d68
  405f01:	cld    
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x24db13c5
  406054:	push   ebx
  406055:	shl    ebx,0x21
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x405fed
  406060:	mov    al,bl
  406062:	xor    al,0x3a
  406064:	rol    DWORD PTR [esi-0x65],cl
  406067:	enter  0x35d9,0x1
  40606b:	push   ss
  40606c:	sbb    BYTE PTR [ecx-0x542f116d],bl
  406072:	push   cs
  406073:	dec    edx
  406074:	pop    esi
  406075:	pop    DWORD PTR [ecx-0x62e930eb]
  40607b:	ds sbb ecx,ebx
  40607e:	push   0x69
  406080:	or     esi,0xffffffda
  406083:	inc    edi
  406084:	fsubr  QWORD PTR [esi-0x2b]
  406087:	mov    ds:0x5944d08d,eax
  40608c:	cmp    BYTE PTR [ecx-0x522abef0],0xcb
  406093:	push   ebp
  406094:	push   es
  406095:	jns    0x406032
  406097:	cdq    
  406098:	into   
  406099:	in     al,0xcc
  40609b:	daa    
  40609c:	mov    edi,0x727d9667
  4060a1:	mov    edi,0x71667c9e
  4060a6:	pop    esp
  4060a7:	push   ds
  4060a8:	stos   DWORD PTR es:[edi],eax
  4060a9:	int3   
  4060aa:	adc    DWORD PTR [eax+0x19],esp
  4060ad:	sub    BYTE PTR [eax+edx*2-0x47f4647],0x9f
  4060b5:	dec    esi
  4060b6:	mov    esi,0x32059f90
  4060bb:	mov    edx,0x3032b9ee
  4060c0:	sbb    al,0xba
  4060c2:	push   edi
  4060c3:	outs   dx,DWORD PTR ds:[esi]
  4060c4:	sbb    BYTE PTR [esi],cl
  4060c6:	add    edx,DWORD PTR [edi+0x0]
  4060c9:	loopne 0x40605d
  4060cb:	cs ja  0x406059
  4060ce:	or     DWORD PTR [ecx+esi*2-0x219c46e4],edi
  4060d5:	aam    0xa2
  4060d7:	and    BYTE PTR [eax-0x7b],0x7f
  4060db:	sub    edx,eax
  4060dd:	add    eax,0xb6238d43
  4060e2:	cmp    BYTE PTR [esp+ebx*1],al
  4060e5:	add    al,0xdf
  4060e7:	xchg   esi,eax
  4060e8:	sub    bl,ah
  4060ea:	ficom  WORD PTR [eax+0x7c251999]
  4060f0:	je     0x406136
  4060f2:	inc    ecx
  4060f3:	adc    al,0x43
  4060f5:	clc    
  4060f6:	das    
  4060f7:	in     al,0x9a
  4060f9:	push   ecx
  4060fa:	mov    bl,ch
  4060fc:	adc    BYTE PTR [ebx],ch
  4060fe:	(bad)  
  4060ff:	retf   
  406100:	popf   
  406101:	xlat   BYTE PTR ds:[ebx]
  406102:	ins    BYTE PTR es:[edi],dx
  406103:	shr    BYTE PTR [ebx-0x75],1
  406106:	(bad)  
  406107:	cmp    DWORD PTR [edi+0x43f4dc9e],eax
  40610d:	or     eax,0x239adafd
  406112:	repnz ds pop esi
  406115:	cwde   
  406116:	inc    esp
  406117:	rcl    DWORD PTR [edx],cl
  406119:	enter  0xfd86,0x2a
  40611d:	(bad)  
  40611e:	mov    eax,0xf0fd1807
  406123:	push   cs
  406124:	xchg   DWORD PTR [ecx+0x54],ebx
  406127:	shr    DWORD PTR [eax-0x592e5f0b],1
  40612d:	stc    
  40612e:	dec    ebp
  40612f:	hlt    
  406130:	add    eax,0xc74c3e53
  406135:	mov    al,0x84
  406137:	xchg   ebp,eax
  406138:	push   ecx
  406139:	mov    eax,0xd1d1d6ae
  40613e:	inc    edi
  40613f:	outs   dx,DWORD PTR ds:[esi]
  406140:	xchg   edx,eax
  406141:	mov    ?,WORD PTR [edi+0x38]
  406144:	repnz dec ch
  406147:	xor    al,0x7d
  406149:	jge    0x406131
  40614b:	ret    0x1eeb
  40614e:	dec    esi
  40614f:	not    BYTE PTR [eax+eiz*8+0x5b5e87fb]
  406156:	xlat   BYTE PTR ds:[ebx]
  406157:	xor    esi,DWORD PTR [eax+eiz*8]
  40615a:	add    bh,BYTE PTR [edi+ebx*2+0x2c]
  40615e:	std    
  40615f:	cli    
  406160:	popa   
  406161:	cld    
  406162:	stos   BYTE PTR es:[edi],al
  406163:	or     al,0x73
  406165:	fld    QWORD PTR [ebp+0x57]
  406168:	xor    BYTE PTR [edi+0x2a],bh
  40616b:	out    dx,eax
  40616c:	xor    edx,DWORD PTR [ebp+0x31]
  40616f:	fld    QWORD PTR [edx]
  406171:	aaa    
  406172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406173:	inc    ecx
  406174:	xchg   ebp,eax
  406175:	mov    edi,0x4f93cd64
  40617a:	mov    ah,0xe
  40617c:	or     DWORD PTR [ebx-0x53],ebx
  40617f:	in     eax,0xac
  406181:	jns    0x406171
  406183:	dec    edi
  406184:	mov    ah,0x7f
  406186:	jp     0x406190
  406188:	test   BYTE PTR [eax],dl
  40618a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40618b:	(bad)  
  40618c:	sub    al,0x2b
  40618e:	jge    0x40613a
  406190:	xchg   ebx,eax
  406191:	xlat   BYTE PTR ds:[ebx]
  406192:	dec    ebx
  406193:	in     al,dx
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x36ea52e8],0x24
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063f3
  4063d4:	cmp    ah,BYTE PTR [esi]
  4063d6:	out    0x86,al
  4063d8:	mov    ds:0x1cfdaf70,al
  4063dd:	dec    eax
  4063de:	mov    eax,ds:0xe471d3ad
  4063e3:	es loop 0x406433
  4063e6:	jno    0x4063d4
  4063e8:	out    dx,al
  4063e9:	arpl   dx,si
  4063eb:	push   edx
  4063ec:	push   edi
  4063ed:	aad    0xec
  4063ef:	in     eax,0x71
  4063f1:	inc    edx
  4063f2:	mov    dh,0x22
  4063f4:	jae    0x406380
  4063f6:	popf   
  4063f7:	imul   edx,DWORD PTR [edi-0xe2f3f5f],0x63a4a225
  406401:	imul   edx,DWORD PTR [esi-0x36],0xffffff99
  406405:	into   
  406406:	and    DWORD PTR [esi],edx
  406408:	(bad)  
  406409:	and    al,0xa2
  40640b:	outs   dx,BYTE PTR ds:[esi]
  40640c:	rol    DWORD PTR [esi],cl
  40640e:	into   
  40640f:	mov    edx,0xc6af1a0
  406414:	jb     0x406411
  406416:	lea    ecx,[ebx-0x4fbe8312]
  40641c:	pop    es
  40641d:	je     0x406447
  40641f:	pop    esp
  406420:	rcl    ah,0xcc
  406423:	pop    ds
  406424:	jmp    0x406464
  406426:	test   DWORD PTR [eax-0xd],ebp
  406429:	ror    DWORD PTR [ebx+ecx*8+0x113f70e8],1
  406430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406431:	fidivr WORD PTR [ebp-0x1812306e]
  406437:	scas   al,BYTE PTR es:[edi]
  406438:	mov    DWORD PTR [eax],ebx
  40643a:	std    
  40643b:	jecxz  0x40644c
  40643d:	inc    ecx
  40643e:	pushf  
  40643f:	fadd   DWORD PTR [edi]
  406441:	out    dx,al
  406442:	(bad)
  406445:	dec    ebx
  406446:	pop    ss
  406447:	pop    edx
  406448:	sbb    bl,BYTE PTR [ebp+0x6e]
  40644b:	fcomp  QWORD PTR [ebp+0x77]
  40644e:	inc    esi
  40644f:	and    eax,0x78dda21a
  406454:	and    bl,BYTE PTR [edi-0x63]
  406457:	fnstsw WORD PTR [esi-0x6779d8e7]
  40645d:	sahf   
  40645e:	imul   eax,DWORD PTR [edi],0xba30c5e2
  406464:	fisub  WORD PTR [edi-0x3f]
  406467:	call   0x6fd30726
  40646c:	test   DWORD PTR [ecx+0x36bb7e04],0x3e8767fa
  406476:	or     al,0xe
  406478:	fsubr  st,st(4)
  40647a:	add    al,0x3a
  40647c:	mov    eax,0x7a06da70
  406481:	add    DWORD PTR [esi],eax
  406483:	cdq    
  406484:	stos   BYTE PTR es:[edi],al
  406485:	and    eax,0xc2692df9
  40648a:	clc    
  40648b:	ror    BYTE PTR [edx],1
  40648d:	mov    ebp,0x8c9a245a
  406492:	loop   0x406508
  406494:	sub    al,0x89
  406496:	(bad)  
  406498:	cmp    dl,BYTE PTR [ecx-0x34da10f]
  40649e:	cld    
  40649f:	cli    
  4064a0:	jns    0x40648c
  4064a2:	push   0xfffffff9
  4064a4:	or     eax,0x2f1689ad
  4064a9:	and    BYTE PTR [edi+0x67ed2e7e],dh
  4064af:	fcom   DWORD PTR [eax]
  4064b1:	and    ecx,DWORD PTR [ebx]
  4064b3:	mov    bh,0xa2
  4064b5:	and    eax,0xdd7d3bf
  4064ba:	aaa    
  4064bb:	add    BYTE PTR [ecx],0x67
  4064be:	loope  0x406449
  4064c0:	popa   
  4064c1:	mov    esi,0xb27827ee
  4064c6:	pop    edx
  4064c7:	or     al,0xd1
  4064c9:	scas   al,BYTE PTR es:[edi]
  4064ca:	inc    edi
  4064cb:	pop    ebx
  4064cc:	(bad)  
  4064ce:	fnsave [ebp+0x3668c523]
  4064d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d5:	repz mov edx,0xe9e682cb
  4064db:	cs (bad) 
  4064dd:	out    0x8f,eax
  4064df:	sub    ah,BYTE PTR [ebp-0x35]
  4064e2:	cmp    eax,0x4d92b303
  4064e7:	repz in al,0xe4
  4064ea:	pushf  
  4064eb:	enter  0xaad5,0x99
  4064ef:	mov    dh,0x48
  4064f1:	fcom   DWORD PTR [ebx]
  4064f3:	jns    0x4064b5
  4064f5:	mov    al,ds:0xffc4156d
  4064fa:	aas    
  4064fb:	lahf   
  4064fc:	pop    ecx
  4064fd:	add    cl,cl
  4064ff:	ins    BYTE PTR es:[edi],dx
  406500:	mov    edx,0x9f351eba
  406505:	inc    ebp
  406506:	add    al,0xe6
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xb20f4057,edi
  406527:	cmp    eax,0x7e0d9f44
  40652c:	jle    0x406551
  40652e:	jg     0x4065ae
  406530:	jle    0x40650e
  406532:	dec    ebp
  406533:	adc    ebp,ebx
  406535:	xor    ebx,DWORD PTR [eax]
  406537:	cmp    eax,0x4d6ed288
  40653c:	xchg   ebx,eax
  40653d:	add    ah,BYTE PTR [ebx]
  40653f:	shl    DWORD PTR [ecx+0x28],0xa2
  406543:	pop    es
  406544:	push   0x4af0aa58
  406549:	fsub   st,st(4)
  40654b:	mov    BYTE PTR [ebp+0x29],0x41
  40654f:	out    0xa5,al
  406551:	fidivr WORD PTR es:[esi-0x38]
  406555:	pop    eax
  406556:	pop    ss
  406557:	nop
  406558:	enter  0x8f8c,0x70
  40655c:	jge    0x4064ee
  40655e:	mov    edi,esp
  406560:	std    
  406561:	mov    bl,0xaa
  406563:	bound  edi,QWORD PTR [edi+eiz*4]
  406566:	and    ebx,DWORD PTR [eax+ecx*4]
  406569:	(bad)  
  40656a:	cmp    edi,DWORD PTR [ecx-0x3f75a2f4]
  406570:	mov    bl,0xb9
  406572:	mov    ss,WORD PTR [edx+0x336f37ed]
  406578:	sar    BYTE PTR [ecx+0xe],1
  40657b:	push   ds
  40657c:	xchg   esp,eax
  40657d:	cmp    DWORD PTR [eax],edx
  40657f:	add    DWORD PTR [edx+0x53],0xf14af542
  406586:	add    BYTE PTR [eax+eax*4-0x7f],0xa7
  40658b:	jge    0x406567
  40658d:	jg     0x406523
  40658f:	adc    al,0xb2
  406591:	into   
  406592:	and    eax,0x22edda10
  406597:	push   ebx
  406598:	in     eax,0x4d
  40659a:	idiv   al
  40659c:	jmp    0x46df:0x83bd1722
  4065a3:	retf   
  4065a4:	mov    gs,WORD PTR [ebp+0x3127ca4a]
  4065aa:	arpl   WORD PTR [edi],bp
  4065ac:	(bad)  
  4065ad:	test   al,0x58
  4065af:	and    cl,BYTE PTR [ecx-0x4379effc]
  4065b5:	pop    ebx
  4065b6:	daa    
  4065b7:	pop    eax
  4065b8:	mov    dl,bh
  4065ba:	cwde   
  4065bb:	fld    QWORD PTR [esi+0x2c]
  4065be:	div    ch
  4065c0:	leave  
  4065c1:	fsub   DWORD PTR [edi-0x6946ca17]
  4065c7:	lods   eax,DWORD PTR ds:[esi]
  4065c8:	lods   al,BYTE PTR ds:[esi]
  4065c9:	dec    esi
  4065ca:	mov    esi,0x8b16574
  4065cf:	ror    ah,1
  4065d1:	fild   DWORD PTR [esi-0x28d098f]
  4065d7:	push   eax
  4065d8:	aaa    
  4065d9:	fld    TBYTE PTR [edi+0xd]
  4065dc:	mov    edx,0xb6ba80bb
  4065e1:	js     0x4065df
  4065e3:	in     al,0xc6
  4065e5:	pop    esi
  4065e6:	cmp    edx,edx
  4065e8:	push   ebp
  4065e9:	call   0x5ba6:0xc1655524
  4065f0:	xor    BYTE PTR [esp+edi*4-0xf02d6f2],dh
  4065f7:	repz jae 0x4065d8
  4065fa:	or     eax,0xbd030d41
  4065ff:	je     0x40659c
  406601:	cmp    edi,DWORD PTR [eax+0x7f]
  406604:	and    eax,0x63ca0edc
  406609:	pushf  
  40660a:	jmp    0x14e5:0x65681c4e
  406611:	mov    al,0x7c
  406613:	mov    ecx,0x6591113
  406618:	mov    WORD PTR [eax-0x3e3e1436],gs
  40661e:	mov    es,WORD PTR [esi-0x2ebdfcc]
  406624:	cli    
  406625:	pop    esi
  406626:	cmp    al,0x97
  406628:	rol    dl,0xf6
  40662b:	out    0xa8,eax
  40662d:	and    eax,0xbf0ba695
  406632:	inc    ebx
  406633:	xchg   esi,eax
  406634:	jno    0x4066b2
  406636:	stc    
  406637:	fimul  DWORD PTR [ebx+0x15]
  40663a:	and    cl,ch
  40663c:	sti    
  40663d:	jae    0x4065ca
  40663f:	icebp  
  406640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406641:	jo     0x40661f
  406643:	pop    esi
  406644:	repz inc ebx
  406646:	lock add esp,ebx
  406649:	xor    edi,esp
  40664b:	bound  ecx,QWORD PTR [eax]
  40664d:	aaa    
  40664e:	push   es
  40664f:	cs jp  0x4066cf
  406652:	sub    ch,BYTE PTR [edx+0xaad6a18]
  406658:	retf   
  406659:	inc    ebp
  40665a:	repnz sahf 
  40665c:	add    DWORD PTR [esi],ebp
  40665e:	push   ss
  40665f:	(bad)  
  406660:	sub    esi,DWORD PTR es:[esi-0x745cdefa]
  406667:	pop    ebp
  406668:	lock sub ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	sub    eax,0x40f7df19
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4067d3
  406755:	pop    ecx
  406756:	pop    eax
  406757:	push   eax
  406758:	retf   
  406759:	(bad)  
  40675a:	loope  0x40676c
  40675c:	jbe    0x406749
  40675e:	(bad)  
  40675f:	sub    eax,0xd9ecbe00
  406764:	mov    WORD PTR [eax+0x6a],?
  406767:	add    edi,DWORD PTR [edi]
  406769:	scas   al,BYTE PTR es:[edi]
  40676a:	loop   0x4067cd
  40676c:	push   eax
  40676d:	cmp    BYTE PTR [ebx+0x6],dl
  406770:	enter  0x1d4e,0xab
  406774:	imul   esp,DWORD PTR [eax],0x414b7413
  40677a:	dec    esp
  40677b:	mov    ds,WORD PTR [edx-0x51862ae2]
  406781:	aas    
  406782:	inc    ecx
  406783:	fcmovnbe st,st(3)
  406785:	or     ebp,DWORD PTR [edi]
  406787:	sbb    eax,0xfa5e5bfd
  40678c:	adc    eax,0xa95c15b2
  406791:	inc    ebx
  406792:	pmuludq mm7,QWORD PTR [eax-0xda9fc3]
  406799:	pusha  
  40679a:	push   eax
  40679b:	pop    eax
  40679c:	jnp    0x40680f
  40679e:	jp     0x4067de
  4067a0:	pop    ebp
  4067a1:	es push edx
  4067a3:	lods   al,BYTE PTR ds:[esi]
  4067a4:	imul   cl
  4067a6:	fiadd  WORD PTR [ebx+eiz*4-0xc]
  4067aa:	push   edi
  4067ab:	fistp  DWORD PTR [esi-0x749d3f9c]
  4067b1:	xor    ch,BYTE PTR [esi]
  4067b3:	xor    DWORD PTR [edi+edx*8-0x34],ecx
  4067b7:	sub    BYTE PTR [esi+edx*1-0x3e],bl
  4067bb:	in     eax,0xa6
  4067bd:	inc    eax
  4067be:	fist   DWORD PTR [eax]
  4067c0:	mov    al,ds:0x58ce6d4d
  4067c5:	adc    ecx,DWORD PTR [ecx-0x5f]
  4067c8:	outs   dx,BYTE PTR ds:[esi]
  4067c9:	das    
  4067ca:	or     al,0x9a
  4067cc:	dec    ebp
  4067cd:	dec    BYTE PTR [ebp+0x413de423]
  4067d3:	xor    DWORD PTR [edx],eax
  4067d5:	(bad)  
  4067d6:	shl    BYTE PTR [edx+0x6fed2c46],1
  4067dc:	icebp  
  4067dd:	cmp    al,0xb7
  4067df:	jb     0x4067dd
  4067e1:	pop    ecx
  4067e2:	fsubr  st(0),st
  4067e4:	js     0x40684d
  4067e6:	ins    BYTE PTR es:[edi],dx
  4067e7:	xchg   DWORD PTR [edx],ebx
  4067e9:	and    BYTE PTR ds:0x8aac711b,al
  4067ef:	adc    eax,0x401085fa
  4067f4:	repz lea edx,[edx]
  4067f7:	jne    0x4067fe
  4067f9:	jns    0x4067dc
  4067fb:	xchg   esi,eax
  4067fc:	or     BYTE PTR [edi-0x38],0x20
  406800:	out    0xf7,eax
  406802:	pushf  
  406803:	in     al,0x9b
  406805:	shl    DWORD PTR [ebx+0x23a961ea],cl
  40680b:	rcl    BYTE PTR [eax+eax*1+0x2e82d50b],cl
  406812:	scas   eax,DWORD PTR es:[edi]
  406813:	add    edi,DWORD PTR [ebx-0x30]
  406816:	bswap  ecx
  406818:	jne    0x4067c2
  40681a:	inc    ebp
  40681b:	add    esp,DWORD PTR [ebx-0xf]
  40681e:	addr16 pusha 
  406820:	ds push esi
  406822:	push   eax
  406823:	stos   DWORD PTR es:[edi],eax
  406824:	sar    eax,cl
  406826:	xchg   ecx,eax
  406827:	test   al,0xd1
  406829:	push   edx
  40682a:	push   cs
  40682b:	icebp  
  40682c:	mov    dl,0x55
  40682e:	imul   esp,ecx,0x58
  406831:	pusha  
  406832:	xlat   BYTE PTR ds:[ebx]
  406833:	idiv   DWORD PTR [edi]
  406835:	sub    bl,BYTE PTR [esi+0x4cac346d]
  40683b:	push   cs
  40683c:	inc    ecx
  40683d:	jg     0x406811
  40683f:	scas   eax,DWORD PTR es:[edi]
  406840:	int    0x60
  406842:	dec    ebx
  406843:	in     al,0x4a
  406845:	cmp    edx,DWORD PTR [esi+0x21]
  406848:	pop    ebx
  406849:	ja     0x4068b9
  40684b:	shl    bl,cl
  40684d:	add    al,dl
  40684f:	and    esp,DWORD PTR [ebx+0x33f3a65c]
  406855:	mov    cl,0xbd
  406857:	in     eax,0x9d
  406859:	nop
  40685a:	pop    es
  40685b:	repz pop edi
  40685d:	nop
  40685e:	fiadd  DWORD PTR [edx+0x78]
  406861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406862:	(bad)  [eax]
  406864:	popa   
  406865:	xor    BYTE PTR [ecx-0x48],ah
  406868:	lods   al,BYTE PTR ds:[esi]
  406869:	push   esp
  40686a:	test   al,0x34
  40686c:	into   
  40686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40686e:	cdq    
  40686f:	adc    ch,BYTE PTR [ecx-0x34]
  406872:	pop    edi
  406873:	inc    edx
  406874:	dec    ebx
  406875:	out    0xcd,al
  406877:	pop    es
  406878:	jmp    0x36f48583
  40687d:	cmp    BYTE PTR [ebx],ah
  40687f:	xlat   BYTE PTR ds:[ebx]
  406880:	push   0x7fabc1bb
  406885:	shl    BYTE PTR [esi+0x5503c7c8],1
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x72
  4068b9:	pop    ebp
  4068ba:	(bad)  
  4068bb:	jg     0x406932
  4068bd:	add    BYTE PTR [esi+0x7e],bh
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x40685e
  4068c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c6:	jno    0x4068c0
  4068c8:	cdq    
  4068c9:	rcl    DWORD PTR [esi+ecx*4+0x43f60a3d],cl
  4068d0:	dec    edi
  4068d1:	pop    edx
  4068d2:	dec    ebx
  4068d3:	mov    edi,0xcaf0e6c9
  4068d8:	repnz imul edi,DWORD PTR [ebx],0xe0f375ce
  4068df:	loop   0x406910
  4068e1:	xor    al,0xa0
  4068e3:	push   0x67
  4068e5:	add    eax,0xe59dc91e
  4068ea:	pusha  
  4068eb:	xor    edi,DWORD PTR [ecx+edi*2]
  4068ee:	repz xchg edi,eax
  4068f0:	jge    0x4068a0
  4068f2:	jp     0x4068c7
  4068f4:	ret    
  4068f5:	frstor [ecx-0x52]
  4068f8:	xor    dl,BYTE PTR [ebx+esi*1+0x21]
  4068fc:	mov    ecx,0xc0944b78
  406901:	fsub   QWORD PTR [edx-0x2168f]
  406907:	push   ds
  406908:	adc    BYTE PTR [esi-0x7a838660],dh
  40690e:	xchg   edi,eax
  40690f:	pop    edx
  406910:	mov    esi,0xc8548078
  406915:	rol    cl,0xcb
  406918:	add    cl,BYTE PTR [ecx+0x55]
  40691b:	test   BYTE PTR ds:0x2df8d53c,bl
  406921:	sbb    DWORD PTR [eax+eiz*8+0x45fae843],esi
  406928:	jns    0x406932
  40692a:	push   0x87dc1be8
  40692f:	sub    edi,DWORD PTR [edi]
  406931:	lods   eax,DWORD PTR ds:[esi]
  406932:	jmp    0xe55a:0xd7a0e6af
  406939:	enter  0xd36f,0x7a
  40693d:	or     bh,al
  40693f:	mov    al,ds:0x18ac1477
  406944:	mov    dh,0xf6
  406946:	mov    cl,0x76
  406948:	leave  
  406949:	mov    esi,0x7b2d84b6
  40694e:	pop    ecx
  40694f:	pop    ds
  406950:	rcl    BYTE PTR [edi+0x72],1
  406953:	pop    edx
  406954:	adc    DWORD PTR cs:[ebp+0x74bb8ce2],ebx
  40695b:	fadd   st,st(3)
  40695d:	cmp    ch,cl
  40695f:	rcl    BYTE PTR [edx],cl
  406961:	repnz iret 
  406963:	imul   BYTE PTR [esi]
  406965:	xchg   ecx,eax
  406966:	mov    bh,0x63
  406968:	aad    0x63
  40696a:	xor    bh,cl
  40696c:	xchg   ebp,eax
  40696d:	push   ss
  40696e:	or     DWORD PTR [ecx],ecx
  406970:	sbb    esi,esi
  406972:	pop    es
  406973:	dec    edx
  406974:	aad    0xa8
  406976:	mov    edx,0xb680700d
  40697b:	aaa    
  40697c:	or     al,0x9
  40697e:	rcr    DWORD PTR [esi+0x2a],0x57
  406982:	into   
  406983:	mov    ah,0xc9
  406985:	loopne 0x40691b
  406987:	adc    BYTE PTR [edi-0x14],cl
  40698a:	jo     0x406978
  40698c:	mov    ds,WORD PTR [esi+edx*2+0x4e5bdc45]
  406993:	mov    BYTE PTR [edx],dh
  406995:	lds    esi,FWORD PTR [eax+0x765598b7]
  40699b:	or     DWORD PTR [edi-0x4a],esp
  40699e:	xor    BYTE PTR [esi+0x36c0b1d9],cl
  4069a4:	pop    ebx
  4069a5:	imul   edx,DWORD PTR [eax],0x700ab38b
  4069ab:	pop    ebp
  4069ac:	pavgb  mm3,QWORD PTR [esi+0x3a]
  4069b0:	push   ss
  4069b1:	mov    cl,0x2a
  4069b3:	ja     0x406974
  4069b5:	push   esp
  4069b6:	and    eax,DWORD PTR [ebx-0x13]
  4069b9:	jge    0x40698e
  4069bb:	nop
  4069bc:	nop
  4069bd:	push   ds
  4069be:	pop    es
  4069bf:	jl     0x4069b2
  4069c1:	inc    ebx
  4069c2:	es mov edx,0xd6f6b96c
  4069c8:	in     al,0x72
  4069ca:	sbb    al,0x86
  4069cc:	out    0xcc,al
  4069ce:	push   edx
  4069cf:	mov    esp,0x661cae75
  4069d4:	arpl   WORD PTR [edi-0x4172e622],ax
  4069da:	jns    0x4069b2
  4069dc:	ja     0x406a3b
  4069de:	mov    WORD PTR [esi],ss
  4069e0:	and    eax,0x2fa35154
  4069e5:	fs sub eax,0xd823b535
  4069eb:	pop    ebx
  4069ec:	cld    
  4069ed:	cmc    
  4069ee:	mov    ds:0x54f887bf,eax
  4069f3:	push   0xffffffac
  4069f5:	iret   
  4069f6:	add    BYTE PTR [ebx-0x162fccac],0x4d
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x994c7a93
  406a0e:	xor    DWORD PTR [edx],ebx
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069c7
  406a19:	pop    ss
  406a1a:	(bad)  
  406a1c:	stc    
  406a1d:	push   es
  406a1e:	std    
  406a1f:	call   0xae768496
  406a24:	in     eax,0xde
  406a26:	arpl   WORD PTR ds:0x8c001879,ax
  406a2c:	enter  0x1b44,0xf0
  406a30:	repz ds xchg ebx,eax
  406a33:	loope  0x406a9b
  406a35:	inc    esp
  406a36:	dec    esp
  406a37:	xor    ebp,DWORD PTR [esi-0x104d09be]
  406a3d:	mov    edx,0x19561e21
  406a42:	in     eax,0x82
  406a44:	call   0xd8173419
  406a49:	pop    esp
  406a4a:	out    dx,eax
  406a4b:	xchg   ebx,eax
  406a4c:	out    dx,al
  406a4d:	add    DWORD PTR [esi-0x6ca06c6a],esi
  406a53:	mov    bh,0xcc
  406a55:	push   0x12
  406a57:	add    eax,0x9072c24f
  406a5c:	mov    cl,0x13
  406a5e:	adc    BYTE PTR [ebp+ebx*1-0x43ba6b1c],al
  406a65:	xchg   esp,eax
  406a66:	inc    ecx
  406a67:	outs   dx,DWORD PTR ds:[esi]
  406a68:	sub    DWORD PTR [eax+0x4b0d37e5],0x39f2d0af
  406a72:	pushf  
  406a73:	mov    esi,0x6b4801f9
  406a78:	imul   edx,DWORD PTR [edi],0xffffff8d
  406a7b:	add    al,0x69
  406a7d:	mov    ebp,ds
  406a7f:	dec    esi
  406a80:	mov    bl,0xe9
  406a82:	imul   esi,DWORD PTR [ebx+0x30c710e2],0x5
  406a89:	sbb    eax,0x43d7eb2c
  406a8e:	cdq    
  406a8f:	mov    ah,0x83
  406a91:	or     bh,BYTE PTR [ebx]
  406a93:	cmc    
  406a94:	mov    eax,0xa25940a9
  406a99:	jne    0x406a55
  406a9b:	je     0x406b05
  406a9d:	data16 hlt 
  406a9f:	leave  
  406aa0:	ret    0xe510
  406aa3:	fucomi st,st(4)
  406aa5:	cmp    eax,0xb88d0826
  406aaa:	and    al,0x70
  406aac:	xor    BYTE PTR [edx+ecx*4+0x44],ch
  406ab0:	mov    cl,0x52
  406ab2:	push   ss
  406ab3:	mov    ah,0xbe
  406ab5:	mov    eax,ds:0x1972b3e0
  406aba:	add    al,0xdb
  406abc:	stc    
  406abd:	mov    edi,0xbce3ec3b
  406ac2:	dec    ebp
  406ac3:	xor    edx,DWORD PTR [eax+0x58]
  406ac6:	stos   BYTE PTR es:[edi],al
  406ac7:	stc    
  406ac8:	push   es
  406ac9:	jge    0x406a7e
  406acb:	retf   0xedc6
  406ace:	push   ss
  406acf:	push   ebp
  406ad0:	pusha  
  406ad1:	mov    al,0x91
  406ad3:	jbe    0x406a55
  406ad5:	inc    ebp
  406ad6:	dec    esp
  406ad7:	das    
  406ad8:	add    DWORD PTR [eax-0x66],eax
  406adb:	jo     0x406a61
  406add:	jo     0x406ad6
  406adf:	jp     0x406a9d
  406ae1:	add    al,0xfc
  406ae3:	jno    0x406b46
  406ae5:	mov    esp,0x5928dde3
  406aea:	loop   0x406aa1
  406aec:	mov    esp,0xac6badef
  406af1:	ins    DWORD PTR es:[edi],dx
  406af2:	rol    cl,1
  406af4:	adc    DWORD PTR [edi-0x5cdbb291],0xffffffaf
  406afb:	aas    
  406afc:	dec    ebp
  406afd:	sti    
  406afe:	cdq    
  406aff:	(bad)  
  406b00:	(bad)  
  406b01:	repnz dec eax
  406b03:	mov    al,0x73
  406b05:	pop    esp
  406b06:	loopne 0x406b50
  406b08:	les    ebp,FWORD PTR [ecx+0x73]
  406b0b:	mov    ds:0x4f56b809,eax
  406b10:	fcomi  st,st(4)
  406b12:	daa    
  406b13:	pop    ebx
  406b14:	popa   
  406b15:	push   cs
  406b16:	jecxz  0x406b4e
  406b18:	jno    0x406afc
  406b1a:	jmp    0x406b64
  406b1c:	addr16 xchg esi,eax
  406b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b1f:	addr16 dec ebx
  406b21:	jnp    0x406b06
  406b23:	loop   0x406b5a
  406b25:	cmp    dl,0xbf
  406b28:	pop    edx
  406b29:	retf   0xf2c3
  406b2c:	push   ecx
  406b2d:	push   cs
  406b2e:	lahf   
  406b2f:	jp     0x406afa
  406b31:	ds adc al,0x54
  406b34:	jns    0x406ba4
  406b36:	shl    DWORD PTR cs:[bp+di-0x53],0x7d
  406b3c:	mov    gs,WORD PTR [eax-0x1]
  406b3f:	mov    al,ds:0xdaa00213
  406b44:	cwde   
  406b45:	popf   
  406b46:	sub    BYTE PTR [edi-0x72ea1bf9],al
  406b4c:	in     eax,dx
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x19658867],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406baf
  406b8f:	mov    dl,0xeb
  406b91:	mov    ch,0xdf
  406b93:	lods   eax,DWORD PTR ds:[esi]
  406b94:	sub    DWORD PTR [eax-0x1989b19a],0xffffffc7
  406b9b:	pop    ecx
  406b9c:	(bad)
  406ba0:	sub    bl,BYTE PTR [eax]
  406ba2:	mov    dh,0x69
  406ba4:	ret    
  406ba5:	push   0x9bf7f928
  406baa:	test   al,0xf
  406bac:	add    edx,DWORD PTR [esi-0x28]
  406baf:	arpl   WORD PTR [ecx+0x58],sp
  406bb2:	jp     0x406be1
  406bb4:	mov    ebx,0x23629bea
  406bb9:	imul   esp,DWORD PTR [edx+0x21a4b10d],0x4
  406bc0:	ins    BYTE PTR es:[edi],dx
  406bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc2:	dec    ecx
  406bc3:	clc    
  406bc4:	sub    BYTE PTR [ebp+0xd],cl
  406bc7:	inc    esi
  406bc8:	sti    
  406bc9:	inc    ebx
  406bca:	cs mov ebx,0xad43404a
  406bd0:	jle    0x406c3a
  406bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd3:	shr    BYTE PTR [esi+0x761c184d],cl
  406bd9:	mov    BYTE PTR [ebx-0x33],ch
  406bdc:	sbb    ecx,DWORD PTR ds:0xf7b6ba7b
  406be2:	ins    DWORD PTR es:[edi],dx
  406be3:	add    edi,ebx
  406be5:	mov    edx,0xd2546d3
  406bea:	out    0x95,eax
  406bec:	xchg   ebp,eax
  406bed:	js     0x406bf2
  406bef:	(bad)  
  406bf0:	sub    dl,ah
  406bf2:	out    0x71,al
  406bf4:	xlat   BYTE PTR ds:[ebx]
  406bf5:	pusha  
  406bf6:	pop    ds
  406bf7:	sbb    eax,0x5144c0da
  406bfc:	pop    edi
  406bfd:	or     al,0xe7
  406bff:	sbb    edi,DWORD PTR [ebp-0x2fabb4d2]
  406c05:	rcl    BYTE PTR [ecx],0xce
  406c08:	mov    ch,0xce
  406c0b:	xor    eax,0xaae228e4
  406c10:	jno    0x406c3a
  406c12:	in     al,0x1e
  406c14:	ins    DWORD PTR es:[edi],dx
  406c15:	in     eax,0xf0
  406c17:	icebp  
  406c18:	les    edi,FWORD PTR [edx]
  406c1a:	popf   
  406c1b:	enter  0xede1,0xc7
  406c1f:	pop    ds
  406c20:	jns    0x406be0
  406c22:	cmc    
  406c23:	pop    es
  406c24:	push   DWORD PTR es:[edx-0x6023140b]
  406c2b:	jmp    0xef238cef
  406c30:	(bad)  
  406c31:	out    dx,al
  406c32:	inc    ebp
  406c33:	push   0xffffffef
  406c35:	call   0x63f20cfb
  406c3a:	pushf  
  406c3b:	scas   al,BYTE PTR es:[edi]
  406c3c:	ja     0x406bf8
  406c3e:	mov    ch,0x99
  406c40:	(bad)  
  406c42:	mov    cl,0x2
  406c44:	jno    0x406c93
  406c46:	push   ecx
  406c47:	stos   DWORD PTR es:[edi],eax
  406c48:	dec    ebx
  406c49:	jae    0x406c2f
  406c4b:	outs   dx,BYTE PTR ds:[esi]
  406c4c:	jno    0x406c37
  406c4e:	int    0x8a
  406c50:	aas    
  406c51:	dec    eax
  406c52:	int3   
  406c53:	or     eax,0x35a670cc
  406c58:	into   
  406c59:	test   eax,0x946d2b83
  406c5e:	push   0xffffffed
  406c60:	(bad)  
  406c61:	xchg   edi,eax
  406c62:	leave  
  406c63:	stos   DWORD PTR es:[edi],eax
  406c64:	cmp    eax,0x8ecf7490
  406c69:	out    0x99,al
  406c6b:	mov    bl,0xb4
  406c6d:	stos   DWORD PTR es:[edi],eax
  406c6e:	retf   0xce47
  406c71:	and    al,0xc1
  406c73:	popf   
  406c74:	mov    esp,0xaef6897a
  406c79:	ins    DWORD PTR es:[edi],dx
  406c7a:	arpl   WORD PTR [ebp-0x10d6b194],dx
  406c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c81:	repz repnz dec esp
  406c84:	jp     0x406c25
  406c86:	mov    ebx,0xe8abee87
  406c8b:	add    ebx,DWORD PTR [ecx+edx*2]
  406c8e:	out    0x25,al
  406c90:	jns    0x406c39
  406c92:	jno    0xc5ea0f44
  406c98:	loope  0x406cd9
  406c9a:	dec    ebx
  406c9b:	add    DWORD PTR [edx-0x4d85acf4],edx
  406ca1:	pop    ebp
  406ca2:	mov    dh,0xb1
  406ca4:	and    cl,al
  406ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca7:	fistp  DWORD PTR [eax+eax*2]
  406caa:	mov    edi,ebp
  406cac:	repnz sti 
  406cae:	sub    al,0xc
  406cb0:	test   DWORD PTR [edx+eiz*4],ebx
  406cb3:	cmp    DWORD PTR [esi+ebp*1],0x7ba0fe34
  406cba:	xchg   ebx,eax
  406cbb:	adc    al,0x74
  406cbd:	jae    0x406c92
  406cbf:	(bad)  
  406cc0:	sbb    al,BYTE PTR [ebx-0x1b82747b]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss inc edx
  406cf0:	ss and esp,ecx
  406cf3:	xchg   esp,eax
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406c99
  406cfc:	add    DWORD PTR [ebx+0x19],0xffffffb7
  406d00:	out    dx,al
  406d01:	push   ebx
  406d02:	ror    dh,0xe0
  406d05:	or     dh,BYTE PTR [ecx+0x48d886be]
  406d0b:	or     esp,DWORD PTR [edx]
  406d0d:	sbb    bl,BYTE PTR [edx-0x13]
  406d10:	add    dh,BYTE PTR [edi-0x29debe51]
  406d16:	pop    ebx
  406d17:	push   0x7e
  406d19:	test   al,0xa5
  406d1b:	int3   
  406d1c:	cli    
  406d1d:	sbb    DWORD PTR [ecx+0x74],edi
  406d20:	cwde   
  406d21:	add    eax,0x9c39b1cd
  406d26:	jl     0x406d50
  406d28:	cmp    eax,0xed08ebc8
  406d2d:	and    bh,cl
  406d2f:	stos   BYTE PTR es:[edi],al
  406d30:	sbb    al,0x19
  406d32:	push   cs
  406d33:	jp     0x406cb8
  406d35:	jno    0x406cd7
  406d37:	cmp    cl,BYTE PTR [ecx+0x5164cbdc]
  406d3d:	xor    BYTE PTR [ecx],0x92
  406d40:	mov    al,0x1a
  406d42:	outs   dx,DWORD PTR ds:[esi]
  406d43:	loop   0x406d71
  406d45:	xchg   BYTE PTR [ebx-0x1ea1e04],ch
  406d4b:	leave  
  406d4c:	popf   
  406d4d:	xchg   BYTE PTR [ebp-0x69],al
  406d50:	push   ebp
  406d51:	cli    
  406d52:	outs   dx,DWORD PTR ds:[esi]
  406d53:	push   cs
  406d54:	jg     0x406d2b
  406d56:	xchg   ebx,eax
  406d57:	jl     0x406d21
  406d59:	fstp   DWORD PTR ds:0x476b771
  406d5f:	or     edx,DWORD PTR [edi-0x47]
  406d62:	in     eax,dx
  406d63:	(bad)  
  406d64:	xchg   esi,eax
  406d65:	mov    ds:0x42a2fc22,eax
  406d6a:	loope  0x406de6
  406d6c:	mov    WORD PTR ds:[ebx+0x4642097c],gs
  406d73:	outs   dx,DWORD PTR ds:[esi]
  406d74:	out    0x11,eax
  406d76:	xor    al,0xfb
  406d78:	pusha  
  406d79:	xor    bh,ah
  406d7b:	das    
  406d7c:	(bad)  
  406d7d:	mov    bl,0x8e
  406d7f:	in     al,dx
  406d80:	int3   
  406d81:	mov    esp,0x582b0ca3
  406d86:	xchg   esp,eax
  406d87:	xchg   ebp,eax
  406d88:	mov    edi,0xf1547d95
  406d8d:	pop    es
  406d8e:	xor    eax,0xb706cfef
  406d93:	sbb    DWORD PTR ss:[ecx-0x68c1f9f4],ebx
  406d9a:	mov    edi,0x36e5c145
  406d9f:	cmp    ch,BYTE PTR [ebx+0x73]
  406da2:	sahf   
  406da3:	sub    eax,0x2909c49e
  406da8:	mov    ah,0x62
  406daa:	push   edi
  406dab:	jbe    0x406e24
  406dad:	out    0x97,eax
  406daf:	popf   
  406db0:	call   0x1597:0xc6d9b475
  406db7:	mov    edi,0x36a25802
  406dbc:	js     0x406d68
  406dbe:	dec    ecx
  406dc0:	and    DWORD PTR [ecx+0x7b69b884],0xa0b2c9d
  406dca:	or     ah,BYTE PTR [eax]
  406dcc:	outs   dx,DWORD PTR ds:[esi]
  406dcd:	sti    
  406dce:	sub    al,0x38
  406dd0:	mov    edi,0xf395c9d1
  406dd5:	in     eax,dx
  406dd6:	push   es
  406dd7:	jecxz  0x406df3
  406dd9:	mov    dh,0x48
  406ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddc:	mov    dl,BYTE PTR [ebp-0x3c]
  406ddf:	inc    edi
  406de0:	pop    ecx
  406de1:	jae    0x406e0f
  406de3:	push   0xf138ea37
  406de8:	xchg   edx,eax
  406de9:	and    BYTE PTR ds:0xbc9cfd2,bh
  406def:	aaa    
  406df0:	fnstcw WORD PTR [edx]
  406df2:	repz inc ebp
  406df4:	in     eax,dx
  406df5:	cmc    
  406df6:	into   
  406df7:	call   0xe1cf:0xccb39abf
  406dfe:	add    BYTE PTR [ebx-0x6a3d67b4],bl
  406e04:	(bad)  
  406e05:	fst    QWORD PTR [ebx-0x18]
  406e08:	mov    WORD PTR [eax-0x50a02d4d],ss
  406e0e:	xor    edx,DWORD PTR [esi-0x13c43a53]
  406e14:	add    BYTE PTR [ebp-0x46],ch
  406e17:	mov    bh,0xb9
  406e19:	adc    eax,0x597c2938
  406e1e:	cld    
  406e1f:	jne    0x406e0d
  406e21:	dec    esi
  406e22:	int3   
  406e23:	fnsave [esi+0x7a]
  406e26:	in     eax,0xfd
  406e28:	cmp    BYTE PTR [esi-0x684586a7],ah
  406e2e:	test   eax,0x1f948842
  406e33:	lahf   
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	cs je  0x406e46
  406e4b:	add    eax,0x7e7e0459
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406dff
  406e55:	mov    ch,0xf6
  406e57:	add    bh,BYTE PTR [edx+0x78]
  406e5a:	pop    ebx
  406e5b:	jg     0x406e4e
  406e5d:	sub    BYTE PTR [esi],ch
  406e5f:	mov    dh,0x45
  406e61:	ds ss test al,0x4f
  406e65:	shr    BYTE PTR cs:[eax-0x66],0x60
  406e6a:	xor    eax,ebp
  406e6c:	sub    eax,DWORD PTR [edx-0x26]
  406e6f:	push   es
  406e70:	xor    DWORD PTR [eax-0x42],ebx
  406e73:	(bad)  
  406e74:	mov    WORD PTR [esi],gs
  406e76:	sub    eax,0x99106ac1
  406e7b:	jmp    FWORD PTR [eax-0x560f641b]
  406e81:	fdivrp st(0),st
  406e83:	lods   eax,DWORD PTR ds:[esi]
  406e84:	sbb    al,0xd0
  406e86:	call   0x33cc0ed9
  406e8b:	das    
  406e8c:	fnstcw WORD PTR ss:[esi-0x7f9611e8]
  406e93:	cli    
  406e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e95:	ins    BYTE PTR es:[edi],dx
  406e96:	mov    edx,0xd721534d
  406e9b:	ror    esi,cl
  406e9d:	xor    DWORD PTR ss:[eax-0x652a11ff],0x78
  406ea5:	retf   0xb147
  406ea8:	retf   0xd191
  406eab:	sub    ch,ah
  406ead:	or     DWORD PTR [edi],ecx
  406eaf:	into   
  406eb0:	mov    ds:0xf564c318,al
  406eb5:	jae    0x406ea3
  406eb7:	pop    eax
  406eb8:	mov    eax,ds:0xd5196432
  406ebd:	xchg   DWORD PTR ds:0x8510158f,esi
  406ec3:	cmp    cl,0x4b
  406ec6:	das    
  406ec7:	mov    ebp,0x9f903fe1
  406ecc:	or     cl,ah
  406ece:	pop    esp
  406ecf:	mov    bl,0x5e
  406ed1:	inc    ecx
  406ed2:	ja     0x406ee5
  406ed4:	cmc    
  406ed5:	sub    al,0xdd
  406ed7:	add    cl,ah
  406ed9:	arpl   WORD PTR [eax+0x4d0054a],cx
  406edf:	or     dl,BYTE PTR [edx]
  406ee1:	mov    ecx,0x952ad03
  406ee6:	sti    
  406ee7:	add    dl,BYTE PTR [ebx+0x5f764620]
  406eed:	dec    esi
  406eee:	sar    DWORD PTR [eax+0x79],cl
  406ef1:	jns    0x406ec3
  406ef3:	dec    esp
  406ef4:	sbb    eax,0x605e9c7f
  406ef9:	or     eax,0xfe369e94
  406efe:	iret   
  406eff:	popa   
  406f00:	inc    ebp
  406f01:	mov    bh,0x40
  406f03:	jp     0x406eec
  406f05:	ja     0x406f5c
  406f07:	jne    0x406eef
  406f09:	je     0x406f1e
  406f0b:	jnp    0x406f41
  406f0d:	aas    
  406f0e:	sar    DWORD PTR [ebp-0x40],0x5e
  406f12:	push   esp
  406f13:	sub    esp,ecx
  406f15:	out    dx,al
  406f16:	adc    dh,BYTE PTR [ebp+0x6e801db6]
  406f1c:	add    dl,BYTE PTR [ebx]
  406f1e:	in     al,0x8c
  406f20:	rcr    DWORD PTR [ecx],cl
  406f22:	or     eax,DWORD PTR [esi]
  406f24:	and    eax,0xa9d3d7a8
  406f29:	cld    
  406f2a:	xlat   BYTE PTR ds:[ebx]
  406f2b:	push   edi
  406f2c:	std    
  406f2d:	neg    BYTE PTR [edx+0x62]
  406f30:	sub    DWORD PTR [ecx-0x56],edi
  406f33:	les    eax,FWORD PTR [eax-0x3f]
  406f36:	not    BYTE PTR [edi]
  406f38:	pop    ds
  406f39:	push   edx
  406f3a:	sbb    eax,0xb80d4a28
  406f3f:	jae    0x406f02
  406f41:	in     eax,dx
  406f42:	jnp    0x406ee7
  406f44:	mov    al,0xb3
  406f46:	fnsave [edx+0x4b61ec38]
  406f4c:	ret    
  406f4d:	pop    edi
  406f4e:	xchg   ebx,eax
  406f4f:	cmp    esi,esi
  406f51:	mov    eax,0x65441882
  406f56:	mov    dl,0x68
  406f58:	retf   0xf2a
  406f5b:	jl     0x406f81
  406f5d:	mov    ebp,0xfe0eacd2
  406f62:	and    al,0x6
  406f64:	sbb    eax,0x525a1757
  406f69:	push   edi
  406f6a:	cmp    ch,dl
  406f6c:	daa    
  406f6d:	ffree  st(1)
  406f6f:	int3   
  406f70:	pop    esp
  406f71:	jle    0x406f80
  406f73:	mov    ebp,0x45298b44
  406f78:	inc    esi
  406f79:	inc    ecx
  406f7a:	jae    0x406f71
  406f7c:	and    eax,0xe5f5ac6a
  406f81:	inc    ebp
  406f82:	aas    
  406f83:	adc    eax,esi
  406f85:	lahf   
  406f86:	xchg   edx,eax
  406f87:	xchg   esi,eax
  406f88:	cld    
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	mov    ebx,0x24128d8
  407014:	sbb    bh,BYTE PTR [esi+0x7e]
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x40703f
  40701c:	sti    
  40701d:	dec    esp
  40701e:	xor    BYTE PTR [eax+0x743c351d],dh
  407024:	xchg   DWORD PTR [ecx],eax
  407026:	lods   eax,DWORD PTR ds:[esi]
  407027:	loope  0x4070a3
  407029:	xchg   edx,eax
  40702a:	imul   DWORD PTR [edi]
  40702c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702d:	clc    
  40702e:	repz ret 
  407030:	stc    
  407031:	or     BYTE PTR [edx+0x31],dl
  407034:	xor    BYTE PTR [eax+ebx*1-0x22],0xc7
  407039:	ss xor edx,edx
  40703c:	inc    edi
  40703d:	sbb    dl,BYTE PTR [ebp-0x1b14c5fe]
  407043:	fs clc 
  407045:	call   0xa346bef6
  40704a:	add    edx,DWORD PTR [eax-0xe2234ae]
  407050:	pop    ds
  407051:	call   0xdada367f
  407056:	or     DWORD PTR [esi],edi
  407058:	adc    cl,BYTE PTR [eax+0x561565a5]
  40705e:	cmp    BYTE PTR [edi-0x58],al
  407061:	sub    eax,0x62828d8b
  407066:	push   edx
  407067:	ins    DWORD PTR es:[edi],dx
  407068:	inc    ebp
  407069:	ins    DWORD PTR es:[edi],dx
  40706a:	add    BYTE PTR [edx-0x7d1e3c80],0x1d
  407071:	mov    edi,0xd2b6d76a
  407076:	dec    edx
  407077:	jnp    0x407073
  407079:	sub    ah,BYTE PTR [ebp-0x3e099613]
  40707f:	mov    gs,WORD PTR [ebx-0x22]
  407082:	cmp    eax,ecx
  407084:	addr16 mov cl,0x8e
  407087:	and    bh,BYTE PTR [eax]
  407089:	fisubr WORD PTR [esi+0x5f887d41]
  40708f:	mov    ch,0xac
  407091:	mul    DWORD PTR [ebx+eiz*4+0x65]
  407095:	and    ch,BYTE PTR [eax+0x21]
  407098:	jae    0x4070d7
  40709a:	out    dx,eax
  40709b:	ds push esp
  40709d:	rcr    BYTE PTR [eax+0x29],1
  4070a0:	pop    edx
  4070a1:	into   
  4070a2:	dec    esp
  4070a3:	pop    esp
  4070a4:	(bad)  
  4070a5:	out    dx,eax
  4070a6:	xchg   edi,eax
  4070a7:	js     0x407115
  4070a9:	sqrtps xmm2,XMMWORD PTR [edi+0x7e]
  4070ad:	jmp    0x90b2:0x311dc76f
  4070b4:	imul   ebp,edx,0xffffff85
  4070b7:	jle    0x40709f
  4070b9:	out    dx,al
  4070ba:	dec    edx
  4070bb:	push   ds
  4070bc:	pop    edi
  4070bd:	add    BYTE PTR [edi-0x5af59fbf],ah
  4070c3:	mov    esp,0xbf5d8341
  4070c8:	stos   BYTE PTR es:[edi],al
  4070c9:	pop    esp
  4070ca:	pop    ss
  4070cb:	jae    0x4070b0
  4070cd:	sbb    DWORD PTR [edx+0x458e6252],ebp
  4070d3:	mov    eax,ds:0xa8989ab
  4070d8:	(bad)  
  4070d9:	mov    WORD PTR [edi+0x7c935f49],ss
  4070df:	aad    0x68
  4070e1:	add    cl,ch
  4070e3:	mov    BYTE PTR [ebx+0xb8f1226],ah
  4070e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ea:	shl    bl,cl
  4070ec:	dec    ebp
  4070ed:	pushf  
  4070ee:	stos   BYTE PTR es:[edi],al
  4070ef:	push   edi
  4070f0:	push   cs
  4070f1:	push   ds
  4070f2:	sbb    DWORD PTR [ebx-0x64b2980],esi
  4070f8:	mov    edi,0x727c6651
  4070fd:	faddp  st(3),st
  4070ff:	adc    eax,0x2e41e359
  407104:	(bad)  
  407105:	ficomp WORD PTR [ecx]
  407107:	push   0x5d
  407109:	test   eax,0x15041c1c
  40710e:	mov    bh,0xec
  407110:	add    al,0x9
  407112:	in     al,dx
  407113:	popa   
  407114:	call   0xd7f091d8
  407119:	ins    BYTE PTR es:[edi],dx
  40711a:	mul    BYTE PTR [ebx-0x6b]
  40711d:	cmp    eax,0x3f5a85ea
  407122:	dec    eax
  407123:	sbb    BYTE PTR [ecx+0xf],dl
  407126:	or     edx,edx
  407128:	lahf   
  407129:	pop    esi
  40712a:	dec    ebx
  40712b:	and    esi,0x8dbffab7
  407131:	mov    bh,0xfe
  407133:	pop    es
  407134:	adc    eax,0xc2e3a981
  407139:	in     eax,0x34
  40713b:	mov    DWORD PTR [ebp+0x51],edx
  40713e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713f:	shl    DWORD PTR [edx+0x18d7786f],0xb8
  407146:	(bad)  
  407147:	out    dx,eax
  407148:	neg    DWORD PTR [edi+0x74]
  40714b:	mov    bl,0x4d
  40714d:	and    eax,0xd703b930
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xdd
  407180:	int3   
  407181:	mov    eax,0x7e1b3717
  407186:	jle    0x4071ab
  407188:	jg     0x407208
  40718a:	jle    0x4071ef
  40718c:	jecxz  0x4071d4
  40718e:	sbb    al,0x47
  407190:	pop    esp
  407191:	cmp    eax,0xc1fcd929
  407196:	addr16 jmp 0x750b:0x1b81a63b
  40719e:	out    0xb0,al
  4071a0:	aam    0xea
  4071a2:	out    0xf8,al
  4071a4:	les    ecx,FWORD PTR [ebx]
  4071a6:	loop   0x407160
  4071a8:	scas   eax,DWORD PTR es:[edi]
  4071a9:	repz mov ebx,0x83015f84
  4071af:	push   ds
  4071b0:	or     esi,ebx
  4071b2:	cmp    BYTE PTR [eax-0x50d9e596],bl
  4071b8:	jecxz  0x40717b
  4071ba:	sub    DWORD PTR [edx+0x4],esp
  4071bd:	in     al,0x7c
  4071bf:	or     ecx,DWORD PTR [ecx]
  4071c1:	push   ds
  4071c2:	repnz out 0xdb,al
  4071c5:	dec    eax
  4071c6:	xor    al,0x28
  4071c8:	(bad)  
  4071c9:	pop    ds
  4071ca:	in     al,0x34
  4071cc:	jle    0x407187
  4071ce:	sub    BYTE PTR [eax-0x79b29b77],bh
  4071d4:	push   ecx
  4071d5:	int3   
  4071d6:	inc    edi
  4071d7:	pusha  
  4071d8:	jbe    0x407195
  4071da:	add    BYTE PTR [ebp+0x25a0f819],bh
  4071e0:	pop    edi
  4071e1:	call   0xf16f:0xf9cf7eec
  4071e8:	pop    ebp
  4071e9:	xchg   edi,eax
  4071ea:	lds    ebp,FWORD PTR ds:0x35046e3a
  4071f0:	test   eax,0xd774b065
  4071f5:	mov    DWORD PTR [ecx],ecx
  4071f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071f8:	mov    ds,WORD PTR [ecx-0x5d]
  4071fb:	dec    ebx
  4071fc:	sub    BYTE PTR [eax-0x75d64b43],ch
  407202:	inc    ebp
  407203:	test   DWORD PTR [ebp-0x3a],esp
  407206:	push   edx
  407207:	dec    ebp
  407208:	cmp    ecx,DWORD PTR [ecx+0x39]
  40720b:	mov    esi,0xedebb9ab
  407210:	pop    eax
  407211:	fmul   DWORD PTR [eax-0x54]
  407214:	push   edx
  407215:	cmc    
  407216:	cld    
  407217:	ret    0x35ef
  40721a:	jae    0x40722a
  40721c:	test   DWORD PTR ds:0xe04c2610,esi
  407222:	leave  
  407223:	add    ch,BYTE PTR [esi]
  407225:	test   eax,0xb76cc226
  40722a:	lock jecxz 0x407203
  40722d:	stos   DWORD PTR es:[edi],eax
  40722e:	cmc    
  40722f:	sbb    BYTE PTR [ecx+0x6c],ah
  407232:	pop    ebp
  407233:	adc    DWORD PTR [eax-0x3],esi
  407236:	int3   
  407237:	out    0xc0,al
  407239:	mov    edx,DWORD PTR [ebx-0x7e]
  40723c:	arpl   WORD PTR [ebp+0x50],dx
  40723f:	push   ds
  407240:	cdq    
  407241:	pop    ebx
  407242:	cli    
  407243:	mov    eax,ds:0x36d1c14d
  407248:	jge    0x40727a
  40724a:	xchg   ecx,eax
  40724b:	iret   
  40724c:	mov    esi,0xb56b9482
  407251:	sar    DWORD PTR [ecx],0xe2
  407254:	scas   eax,DWORD PTR es:[edi]
  407255:	fwait
  407256:	lods   al,BYTE PTR ds:[esi]
  407257:	pop    ds
  407258:	push   ds
  407259:	push   0x29009029
  40725e:	cmp    eax,eax
  407260:	adc    eax,0x28956e2a
  407265:	add    bh,BYTE PTR [ebp+0x4fc7ec72]
  40726b:	jnp    0x40721a
  40726d:	mov    DWORD PTR [edx+0x1d8b8787],ecx
  407273:	jl     0x407215
  407275:	int3   
  407276:	retf   0xc942
  407279:	out    dx,al
  40727a:	int3   
  40727b:	cmp    bl,bl
  40727d:	fcmovb st,st(7)
  40727f:	scas   al,BYTE PTR es:[edi]
  407280:	out    0x17,al
  407282:	aad    0x6a
  407284:	rcr    BYTE PTR [ebp+0x7645a72a],1
  40728a:	call   0xcb2f:0xabc0c3de
  407291:	add    al,0xef
  407293:	in     al,0x7b
  407295:	add    bl,BYTE PTR [edi-0x66]
  407298:	outs   dx,BYTE PTR ds:[esi]
  407299:	test   al,0x1
  40729b:	or     ecx,DWORD PTR [ecx]
  40729d:	pop    ss
  40729e:	mov    ds:0x44fccc68,eax
  4072a3:	inc    esp
  4072a4:	push   ds
  4072a5:	iret   
  4072a6:	xchg   BYTE PTR [edx+eiz*2+0x6b505363],ah
  4072ad:	or     eax,0xd1daaae4
  4072b2:	std    
  4072b3:	sub    ecx,DWORD PTR [ebx]
  4072b5:	fwait
  4072b6:	loope  0x40732d
  4072b8:	mov    al,ds:0x5d9e633f
  4072bd:	xor    eax,0x558b698f
  4072c2:	loopne 0x40724f
  4072c4:	pop    ebp
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x9380f0c
  4072e9:	and    BYTE PTR [ecx-0x8],dh
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x4072fc
  4072f4:	in     eax,dx
  4072f5:	xor    DWORD PTR [edi],ebp
  4072f7:	xlat   BYTE PTR ds:[ebx]
  4072f8:	push   cs
  4072f9:	push   es
  4072fa:	retf   
  4072fb:	ror    ebx,1
  4072fd:	jg     0x407352
  4072ff:	out    dx,al
  407300:	(bad)  
  407301:	(bad)  
  407303:	mov    ds:0x691db9f1,al
  407308:	cmp    DWORD PTR [ebx],ebx
  40730a:	mov    al,ds:0x55102a3f
  40730f:	sub    cl,BYTE PTR [ebp+0x8]
  407312:	add    ah,BYTE PTR [eax+0x6d]
  407315:	enter  0x9cc3,0x94
  407319:	and    edi,0x1dcdcc4f
  40731f:	jecxz  0x40734c
  407321:	inc    edx
  407322:	cmp    eax,0xba60bee8
  407327:	sti    
  407328:	dec    esp
  407329:	cmp    ecx,DWORD PTR [edx+0x7d]
  40732c:	loop   0x407361
  40732e:	mov    bl,0x80
  407330:	cs pop edx
  407332:	ret    
  407333:	adc    DWORD PTR [edx-0x43a34aca],esi
  407339:	dec    ecx
  40733a:	out    dx,eax
  40733b:	inc    eax
  40733c:	mov    esp,eax
  40733e:	sbb    edi,DWORD PTR [edi]
  407340:	pop    ds
  407341:	pop    edi
  407342:	in     al,0xae
  407344:	pop    esp
  407345:	sbb    al,0xbf
  407347:	call   0x6c07:0x26e0df1
  40734e:	jae    0x4072ea
  407350:	xor    DWORD PTR [ebp+eiz*1-0x21],ecx
  407354:	mov    ch,0x81
  407356:	daa    
  407357:	cwde   
  407358:	aad    0x77
  40735a:	jle    0x40730e
  40735c:	pop    ecx
  40735d:	aad    0x76
  40735f:	xchg   edx,eax
  407360:	ja     0x4073b1
  407362:	mov    bl,0xaf
  407364:	sti    
  407365:	jmp    0x407333
  407367:	fsub   DWORD PTR [ebx+0x5aca4be0]
  40736d:	cmp    al,0xe9
  40736f:	in     al,dx
  407370:	mov    ?,ebx
  407372:	mov    eax,ds:0x9ad3ee02
  407377:	push   ecx
  407378:	and    eax,0x5dfb21ed
  40737d:	repnz fsubr DWORD PTR es:[ecx]
  407381:	test   ecx,eax
  407383:	push   0x5aea8b61
  407388:	mov    bl,0x11
  40738a:	popf   
  40738b:	out    0xae,eax
  40738d:	(bad)  
  40738e:	xor    eax,0xec7e7b71
  407393:	push   ecx
  407394:	push   ss
  407395:	ins    DWORD PTR es:[edi],dx
  407396:	xchg   ecx,eax
  407397:	mov    ds:0xaba92d9c,al
  40739c:	mov    eax,fs:0xe6db9fb4
  4073a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a3:	and    DWORD PTR [ecx-0xd],esi
  4073a6:	jge    0x407360
  4073a8:	jmp    0xcd7d56f6
  4073ad:	or     al,0x71
  4073af:	mov    ebp,0x3f08fa52
  4073b4:	rol    BYTE PTR [edi+edx*2-0x34],1
  4073b8:	jmp    0x4073df
  4073ba:	stos   DWORD PTR es:[edi],eax
  4073bb:	adc    al,0x85
  4073bd:	ret    0xd216
  4073c0:	sub    eax,0x48a6bfe9
  4073c5:	mov    ebx,0x577a3796
  4073ca:	outs   dx,DWORD PTR ds:[esi]
  4073cb:	push   edi
  4073cc:	adc    BYTE PTR [esi+edi*4],al
  4073cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d0:	imul   esi,esp,0x38
  4073d3:	push   ebx
  4073d4:	mov    al,0xe
  4073d6:	and    BYTE PTR [eax+0x24a71137],bl
  4073dc:	cdq    
  4073dd:	in     eax,dx
  4073de:	lahf   
  4073df:	loop   0x40742b
  4073e1:	push   0x78
  4073e3:	xchg   ebx,eax
  4073e4:	sahf   
  4073e5:	imul   ch
  4073e7:	stc    
  4073e8:	xchg   esi,eax
  4073e9:	mov    eax,0x802156e7
  4073ee:	shl    BYTE PTR [ecx],1
  4073f0:	push   ds
  4073f1:	push   edx
  4073f2:	sub    DWORD PTR [ebp+0x13],0xe4efa58e
  4073f9:	mov    ds,WORD PTR ds:0xa34999c0
  4073ff:	push   ebp
  407400:	repnz es std 
  407403:	(bad)  
  407404:	ja     0x4073be
  407406:	inc    ebx
  407407:	cmp    eax,0x67765787
  40740c:	pop    esp
  40740d:	dec    edx
  40740e:	mov    ebx,0x783a9f89
  407413:	sub    eax,edx
  407415:	mov    ecx,ebp
  407417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407418:	mov    edx,0xbde798c2
  40741d:	and    cl,0xcd
  407420:	and    ecx,DWORD PTR [ebx]
  407422:	imul   ecx,DWORD PTR [ebp-0x4d1f698f],0x8c2c95f
  40742c:	add    BYTE PTR [ebp-0x75],dl
  40742f:	in     al,dx
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x248927ff],edi
  407443:	dec    esi
  407444:	(bad)  [ebp-0x168181e7]
  40744a:	jg     0x4074ca
  40744c:	jle    0x407439
  40744e:	mov    WORD PTR [ecx+0x1d52ebd],?
  407454:	inc    edi
  407455:	hlt    
  407456:	inc    esp
  407457:	adc    dh,BYTE PTR [eax+0x34]
  40745a:	mov    esp,esi
  40745c:	aas    
  40745d:	and    ecx,DWORD PTR [ecx-0x1e6e3c71]
  407463:	jmp    0x4074a6
  407465:	jnp    0x407468
  407467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407468:	loop   0x40748b
  40746a:	clc    
  40746b:	pop    ebx
  40746c:	cli    
  40746d:	test   DWORD PTR [edi+edi*8],ebx
  407470:	rcl    DWORD PTR [ebp+0x6f5d392e],1
  407476:	jl     0x407446
  407478:	ret    
  407479:	inc    ebx
  40747a:	(bad)  
  40747b:	sti    
  40747c:	mov    dh,0xe
  40747e:	cmp    edi,eax
  407480:	leave  
  407481:	cmp    al,0x69
  407483:	xchg   esp,eax
  407484:	dec    eax
  407485:	ins    DWORD PTR es:[edi],dx
  407486:	iret   
  407487:	and    cl,bh
  407489:	hlt    
  40748a:	sub    BYTE PTR [ebp-0x76],ch
  40748d:	add    al,0x5e
  40748f:	popf   
  407490:	mov    ah,BYTE PTR [eax]
  407492:	sbb    dh,BYTE PTR [edi+edi*8-0x52]
  407496:	push   esp
  407497:	stc    
  407498:	aam    0x7f
  40749a:	or     ebp,DWORD PTR [eax+0x1fa9f840]
  4074a0:	lahf   
  4074a1:	sub    DWORD PTR [esp+ebx*1-0x73ba94a],ecx
  4074a8:	dec    esi
  4074a9:	fisttp DWORD PTR [edx]
  4074ab:	xchg   ecx,eax
  4074ac:	and    bh,BYTE PTR [esi+ecx*2]
  4074af:	cld    
  4074b0:	xchg   esi,eax
  4074b1:	(bad)  
  4074b2:	ja     0x407468
  4074b4:	sti    
  4074b5:	retf   
  4074b6:	adc    DWORD PTR [ebx+eiz*1+0x3a],ebp
  4074ba:	lea    esi,[esi]
  4074bc:	sub    eax,0x1d701404
  4074c1:	xchg   BYTE PTR [ecx],dl
  4074c3:	pop    ebx
  4074c4:	in     al,dx
  4074c5:	daa    
  4074c6:	nop
  4074c7:	(bad)  
  4074c8:	idiv   esi
  4074ca:	clc    
  4074cb:	div    DWORD PTR [edx]
  4074cd:	or     BYTE PTR [ebx+0x29ddad6b],bl
  4074d3:	call   0x1c89b0f6
  4074d8:	loope  0x4074bb
  4074da:	sbb    BYTE PTR [ebx],ch
  4074dc:	call   0xf045:0x426d45fd
  4074e3:	mov    edi,0x4c05b3a2
  4074e8:	mov    ecx,0xa6d1ccd7
  4074ed:	xlat   BYTE PTR ds:[ebx]
  4074ee:	push   ds
  4074ef:	sub    cl,bh
  4074f1:	mov    ecx,0xa256248a
  4074f6:	lock mov bl,0xc3
  4074f9:	aas    
  4074fa:	lahf   
  4074fb:	jne    0x4074c3
  4074fd:	add    BYTE PTR [ebp+0x66e58159],0x94
  407504:	xor    BYTE PTR [edx+0x131017af],al
  40750a:	mov    ecx,edx
  40750c:	sbb    DWORD PTR [esi+0x2146610b],ebx
  407512:	int    0x6a
  407514:	dec    edx
  407515:	nop
  407516:	out    dx,eax
  407517:	loope  0x407549
  407519:	mov    cl,cl
  40751b:	jle    0x40753f
  40751d:	inc    ch
  40751f:	pop    esi
  407520:	push   ebx
  407521:	sub    al,0xa1
  407523:	push   edi
  407524:	inc    esp
  407525:	sbb    bl,BYTE PTR [eax-0x394eb662]
  40752b:	xchg   ebx,eax
  40752c:	push   esi
  40752d:	hlt    
  40752e:	mov    WORD PTR [esi],ss
  407530:	fbstp  TBYTE PTR [eax]
  407532:	inc    ebp
  407533:	dec    ebx
  407534:	xor    eax,0xe4bf258d
  407539:	and    bl,BYTE PTR [eax-0x7c093357]
  40753f:	push   0xfffffff3
  407541:	jg     0x407538
  407543:	jle    0x4074fd
  407545:	xor    ch,dl
  407547:	mov    DWORD PTR [ebx+esi*1],esp
  40754a:	sbb    eax,0xb6d89cc
  40754f:	retf   
  407550:	retf   
  407551:	out    dx,al
  407552:	and    DWORD PTR [eax],ebx
  407554:	push   0xffffff8b
  407556:	std    
  407557:	(bad)  
  407558:	xor    al,0x48
  40755a:	inc    ecx
  40755b:	pop    edi
  40755c:	sbb    dh,BYTE PTR [ebx]
  40755e:	leave  
  40755f:	mov    ecx,edx
  407561:	lahf   
  407562:	aas    
  407563:	fidivr WORD PTR [esi+0x2bc857d3]
  407569:	pop    edi
  40756a:	sti    
  40756b:	stc    
  40756c:	jl     0x407529
  40756e:	xor    al,0x6a
  407570:	out    dx,al
  407571:	xor    BYTE PTR [ebx],0xe4
  407574:	into   
  407575:	frstor [ebx+edi*2+0xf1321d2]
  40757c:	or     al,0x2a
  40757e:	(bad)  
  407580:	dec    edx
  407581:	xchg   ecx,eax
  407582:	das    
  407583:	xchg   edi,eax
  407584:	into   
  407585:	mov    WORD PTR [esi+0x67d71a42],gs
  40758b:	out    dx,al
  40758c:	into   
  40758d:	in     al,dx
  40758e:	sub    DWORD PTR [edi-0x35226e8],ecx
  407594:	mov    edi,0xd22b2245
  407599:	jmp    0x4075a4
  40759b:	imul   ebx,DWORD PTR [esi-0x32ad4a42],0xffffffc8
  4075a2:	rcr    DWORD PTR [eax-0x1ae79e5c],1
  4075a8:	mov    al,0x47
  4075aa:	shr    ebx,cl
  4075ac:	inc    esi
  4075ad:	div    BYTE PTR [eax]
  4075af:	fisubr DWORD PTR [ecx+0x7bb4cb92]
  4075b5:	stc    
  4075b6:	xlat   BYTE PTR ds:[ebx]
  4075b7:	inc    esp
  4075b8:	xlat   BYTE PTR ds:[ebx]
  4075b9:	and    eax,0x5151c14a
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x3b]
  4076f9:	xchg   ecx,eax
  4076fa:	loop   0x4076d1
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0x30bef584
  407705:	push   eax
  407706:	push   DWORD PTR [eax]
  407708:	repz in eax,dx
  40770a:	add    DWORD PTR [ebx+0x2f],ebp
  40770d:	hlt    
  40770e:	xchg   ebp,eax
  40770f:	inc    ebp
  407710:	jbe    0x4076c2
  407712:	pop    eax
  407713:	in     al,dx
  407714:	fucomp st(4)
  407716:	pop    ds
  407717:	adc    ch,ah
  407719:	imul   edi,DWORD PTR [ebx+ebp*8-0x134fb092],0xb5201034
  407724:	pop    ss
  407725:	and    BYTE PTR [ebp-0x22],ah
  407728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407729:	xchg   edi,eax
  40772a:	mov    ds:0x8346825c,eax
  40772f:	out    dx,al
  407730:	jecxz  0x407797
  407732:	mov    ebx,0x83b8c5fe
  407737:	out    0xfa,al
  407739:	jle    0x407704
  40773b:	aad    0xde
  40773d:	pop    ecx
  40773e:	cs sbb al,0x65
  407741:	jns    0x407719
  407743:	mov    WORD PTR [edx-0x36b17429],ds
  407749:	fwait
  40774a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774b:	mov    dh,0x87
  40774d:	stos   DWORD PTR es:[edi],eax
  40774e:	xor    DWORD PTR [eax],esi
  407750:	(bad)  
  407751:	mov    esp,0x390c8de
  407756:	or     BYTE PTR [ebx],dh
  407758:	or     DWORD PTR [esi-0x5d],eax
  40775b:	test   al,cl
  40775d:	daa    
  40775e:	push   es
  40775f:	shl    eax,cl
  407761:	cs iret 
  407763:	push   ss
  407764:	mov    cl,0xff
  407766:	ins    DWORD PTR es:[edi],dx
  407767:	mov    al,0x85
  407769:	mov    ch,0x19
  40776b:	mov    WORD PTR [edx-0x78],es
  40776e:	mov    al,ds:0x4e306c44
  407773:	inc    eax
  407774:	xor    BYTE PTR [eax+0x5ecfdede],al
  40777a:	push   edx
  40777b:	in     al,0x25
  40777d:	std    
  40777e:	pop    ecx
  40777f:	mov    bh,BYTE PTR [esi+0x52]
  407782:	or     DWORD PTR [ebp-0x7c],0xfffffffc
  407786:	in     al,0x8d
  407788:	sub    DWORD PTR [esp+esi*8+0x2f],ebx
  40778c:	in     eax,0x61
  40778e:	in     al,0x82
  407790:	and    ebp,DWORD PTR [esi+0x58d179ff]
  407796:	outs   dx,BYTE PTR ds:[esi]
  407797:	popa   
  407798:	jbe    0x40775a
  40779a:	lods   al,BYTE PTR ds:[esi]
  40779b:	dec    ecx
  40779c:	(bad)  
  40779e:	mov    ebx,0x1b7db5cb
  4077a3:	outs   dx,BYTE PTR ds:[esi]
  4077a4:	out    0xf3,eax
  4077a6:	xchg   esi,eax
  4077a7:	(bad)  
  4077a9:	(bad)  [ebp-0x34a1130b]
  4077af:	int3   
  4077b0:	imul   ebp,esi,0xffffff8a
  4077b3:	adc    BYTE PTR [esi+0x59],cl
  4077b6:	sbb    eax,0xecceac2f
  4077bb:	loope  0x4077e9
  4077bd:	push   cs
  4077be:	loopne 0x407809
  4077c0:	outs   dx,DWORD PTR ds:[esi]
  4077c1:	aas    
  4077c2:	dec    ebx
  4077c3:	add    al,0xf0
  4077c5:	add    edx,0x6e
  4077c8:	sahf   
  4077c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ca:	das    
  4077cb:	xor    al,0x71
  4077cd:	push   es
  4077ce:	mov    ah,0x23
  4077d0:	cmp    eax,0xe6bea76d
  4077d5:	push   es
  4077d6:	int    0x34
  4077d8:	stos   DWORD PTR es:[edi],eax
  4077d9:	add    bl,ch
  4077db:	cmp    bl,dh
  4077dd:	scas   eax,DWORD PTR es:[edi]
  4077de:	loope  0x40783f
  4077e0:	xchg   ebx,eax
  4077e1:	or     eax,0xee7167db
  4077e6:	mov    esp,0x6044642a
  4077eb:	mov    dl,0xaa
  4077ed:	xchg   ebp,eax
  4077ee:	ret    
  4077ef:	mov    edx,0x4365620a
  4077f4:	icebp  
  4077f5:	cmp    ebp,edx
  4077f7:	mov    cs,WORD PTR [ebx-0x695a435]
  4077fd:	or     al,0xad
  4077ff:	inc    ebx
  407800:	adc    eax,0xd601d51
  407805:	adc    al,0x98
  407807:	into   
  407808:	push   ebp
  407809:	push   ebp
  40780a:	jecxz  0x4077a4
  40780c:	(bad)  
  40780d:	fnstenv ds:[esi]
  407810:	enter  0x8579,0xe7
  407814:	idiv   ebp
  407816:	mov    dl,0xe4
  407818:	or     esp,ecx
  40781a:	ins    DWORD PTR es:[edi],dx
  40781b:	scas   al,BYTE PTR es:[edi]
  40781c:	xchg   ebx,eax
  40781d:	dec    ebp
  40781e:	loopne 0x40787a
  407820:	adc    al,0xd5
  407822:	jp     0x4077f2
  407824:	nop
  407825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407826:	mov    eax,cs:0xa670cfd0
  40782c:	sub    al,0xdb
  40782e:	ficomp DWORD PTR [ebx-0x47]
  407831:	inc    edx
  407832:	pop    ecx
  407833:	repz sub esi,0x20ef5fd3
  40783a:	pop    esi
  40783b:	mov    DWORD PTR [edi-0x165c5bb2],ecx
  407841:	fiadd  WORD PTR [esi]
  407843:	lahf   
  407844:	mov    DWORD PTR [ecx],esp
  407846:	out    0xa2,eax
  407848:	push   cs
  407849:	sub    DWORD PTR [ecx+0x4f],0xdcfdd43e
  407850:	adc    DWORD PTR [esi-0x37],eax
  407853:	fsubr  DWORD PTR [ecx]
  407855:	xor    DWORD PTR [eax+eax*1+0x1d],ecx
  407859:	ror    DWORD PTR [ebx],cl
  40785b:	arpl   WORD PTR [eax-0x663cb409],sp
  407861:	outs   dx,DWORD PTR ds:[esi]
  407862:	jb     0x407852
  407864:	pop    ebx
  407865:	daa    
  407866:	lods   al,BYTE PTR ds:[esi]
  407867:	mov    ah,0x7e
  407869:	sbb    DWORD PTR [ebp+0x1f480362],esi
  40786f:	pushf  
  407870:	jno    0x4078cf
  407872:	scas   eax,DWORD PTR es:[edi]
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x36915374],0xfffffff3
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078b0
  407897:	std    
  407898:	add    ch,ch
  40789a:	cmp    al,0x64
  40789c:	call   DWORD PTR [ecx]
  40789e:	lods   al,BYTE PTR ds:[esi]
  40789f:	push   esi
  4078a0:	js     0x4078b2
  4078a2:	outs   dx,BYTE PTR ds:[esi]
  4078a3:	test   al,0xca
  4078a5:	jmp    0xe38cfe7f
  4078aa:	add    ch,BYTE PTR [ecx+0x6b815a09]
  4078b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b1:	or     DWORD PTR [edi],edi
  4078b3:	fcom   DWORD PTR ds:0xf0f3421a
  4078b9:	mov    eax,0xfa98690f
  4078be:	cmp    eax,0xc5f78890
  4078c3:	ret    
  4078c4:	cmp    al,0x8d
  4078c6:	sub    ebp,DWORD PTR [ecx]
  4078c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c9:	int3   
  4078ca:	dec    eax
  4078cb:	lahf   
  4078cc:	pop    esp
  4078cd:	mov    esi,0x52bb7b1c
  4078d2:	jb     0x40785e
  4078d4:	or     DWORD PTR [edx+0x4a],ebp
  4078d7:	mov    DWORD PTR [eax+0x754fc135],ebx
  4078dd:	aas    
  4078de:	inc    ecx
  4078df:	jne    0x407942
  4078e1:	lea    esi,[esi]
  4078e3:	xchg   esp,eax
  4078e4:	hlt    
  4078e5:	sti    
  4078e6:	dec    edi
  4078e7:	in     eax,dx
  4078e8:	cmp    ecx,DWORD PTR [ebx]
  4078ea:	sti    
  4078eb:	pop    edx
  4078ec:	xor    al,0x39
  4078ee:	jg     0x407895
  4078f0:	mov    eax,0xf4803248
  4078f5:	stc    
  4078f6:	pop    esp
  4078f7:	fsubr  QWORD PTR [esi+0x6c]
  4078fa:	adc    ebx,ecx
  4078fc:	lea    eax,[ebx]
  4078fe:	push   ebp
  4078ff:	or     eax,0x5dda247f
  407904:	adc    BYTE PTR [edx+0x74],bh
  407907:	mov    edi,DWORD PTR ds:[ebx]
  40790a:	sub    al,0xd6
  40790c:	mov    ebx,0x6b55ce34
  407911:	pop    es
  407912:	rcr    BYTE PTR [ecx+ecx*4+0x1d31f9d],0xca
  40791a:	push   edi
  40791b:	push   edx
  40791c:	add    ah,BYTE PTR [edx-0x511373a1]
  407922:	inc    esp
  407923:	push   cs
  407924:	(bad)  
  407925:	mov    edi,0x60ab12cb
  40792a:	sub    DWORD PTR [ecx-0x5bc4d4f],ebp
  407930:	ins    BYTE PTR es:[edi],dx
  407931:	lahf   
  407932:	xchg   ebx,eax
  407933:	out    0xfe,al
  407935:	cmp    DWORD PTR [ecx-0x521c8d50],0xffffffaa
  40793c:	or     ecx,ebp
  40793e:	in     eax,dx
  40793f:	sub    eax,0x639ea023
  407944:	je     0x407964
  407946:	adc    eax,0x8aa413d6
  40794b:	data16 jecxz 0x407919
  40794e:	test   eax,0x44f4834d
  407953:	xor    BYTE PTR [edi],dh
  407955:	imul   esp,DWORD PTR [ecx],0xfffffffc
  407958:	add    DWORD PTR [esi],esp
  40795a:	push   0xfffffff8
  40795c:	mov    ds:0x33627339,al
  407961:	cmp    eax,0xfbe4b726
  407966:	outs   dx,DWORD PTR ds:[esi]
  407967:	mov    DWORD PTR [eax-0x11],0x86e50c58
  40796e:	ror    DWORD PTR [ebp+0x231dc69b],1
  407974:	xor    BYTE PTR [edi+0x29],bl
  407977:	int    0x73
  407979:	push   esp
  40797a:	or     edx,DWORD PTR ds:0x150f31ba
  407980:	xchg   DWORD PTR [edx+0x2d1365d2],edi
  407986:	test   DWORD PTR [ebx+eax*2],esi
  407989:	call   0xc1b8:0xfd0a9238
  407990:	stos   BYTE PTR es:[edi],al
  407991:	sbb    eax,0x6d21c0c7
  407996:	sub    eax,0x658ff4a3
  40799b:	clc    
  40799c:	enter  0x87de,0x60
  4079a0:	pusha  
  4079a1:	pop    ebx
  4079a2:	xchg   edi,eax
  4079a3:	ins    BYTE PTR es:[edi],dx
  4079a4:	cs clc 
  4079a6:	and    al,0xb5
  4079a8:	sub    ebp,DWORD PTR [eax-0x53]
  4079ab:	fnsave [ebp-0x2d]
  4079ae:	cmp    BYTE PTR [ebx-0x4],al
  4079b1:	call   0x332237a4
  4079b6:	out    0xb3,eax
  4079b8:	aas    
  4079b9:	outs   dx,DWORD PTR ds:[esi]
  4079ba:	jl     0x4079ca
  4079bc:	adc    BYTE PTR [edx-0x11695f98],ah
  4079c2:	xor    BYTE PTR [edi+0x32],al
  4079c5:	enter  0x75d1,0x46
  4079c9:	xchg   esi,eax
  4079ca:	jg     0x407a0b
  4079cc:	jns    0x407a0e
  4079ce:	imul   eax,esi,0x0
  4079d1:	jmp    0x79773280
  4079d6:	call   0x9b434919
  4079db:	mov    ds:0x13753909,eax
  4079e0:	xor    BYTE PTR [ebx],cl
  4079e2:	ficomp DWORD PTR [eax-0x24]
  4079e5:	lock in al,0x5b
  4079e8:	mov    dl,0x25
  4079ea:	push   ss
  4079eb:	xor    ch,BYTE PTR [ebp+0x21]
  4079ee:	jne    0x407a5a
  4079f0:	sti    
  4079f1:	xabort 0xa0
  4079f4:	sub    esp,DWORD PTR [esi-0x4f]
  4079f7:	pop    ecx
  4079f8:	retf   
  4079f9:	aas    
  4079fa:	and    DWORD PTR [ecx-0x5e7b141c],edx
  407a00:	xlat   BYTE PTR ds:[ebx]
  407a01:	dec    edi
  407a02:	scas   eax,DWORD PTR es:[edi]
  407a03:	out    0x68,eax
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x5b],0x37
  407a27:	sbb    eax,0x7e127e97
  407a2c:	jle    0x407a17
  407a2e:	jg     0x407aae
  407a30:	jle    0x4079b3
  407a32:	les    ebp,FWORD PTR [eax+0x1c9661a0]
  407a38:	icebp  
  407a39:	out    dx,eax
  407a3a:	cli    
  407a3b:	stos   BYTE PTR es:[edi],al
  407a3c:	loope  0x407a65
  407a3e:	jns    0x407a38
  407a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a41:	jmp    0x6f5f923e
  407a46:	cld    
  407a47:	sub    BYTE PTR [esp+edi*2-0xe],bl
  407a4b:	cs mov al,0x33
  407a4e:	dec    eax
  407a4f:	sbb    cl,BYTE PTR [edi+0x65]
  407a52:	aad    0x68
  407a54:	cmp    BYTE PTR [ebx],0x54
  407a57:	stos   DWORD PTR es:[edi],eax
  407a58:	push   eax
  407a59:	nop
  407a5a:	ror    bh,1
  407a5c:	add    al,0x82
  407a5e:	(bad)  
  407a5f:	cmp    DWORD PTR [ebp-0x154830a6],eax
  407a65:	xchg   esi,eax
  407a66:	pop    esp
  407a67:	mov    ah,0x3b
  407a69:	popa   
  407a6a:	sar    DWORD PTR [esi-0x56],0xef
  407a6e:	lahf   
  407a6f:	and    esp,DWORD PTR [esi+0x58b8cc9f]
  407a75:	mov    dh,0xf6
  407a77:	out    0x77,al
  407a79:	ins    DWORD PTR es:[edi],dx
  407a7a:	sbb    al,0x13
  407a7c:	jns    0x407a3e
  407a7e:	inc    edi
  407a7f:	sub    BYTE PTR [ebp-0x12],al
  407a82:	(bad)  
  407a84:	daa    
  407a85:	add    al,0x37
  407a87:	mov    cl,0xe9
  407a89:	jne    0x407a29
  407a8b:	test   DWORD PTR [edx+0x53],0x2c235ad3
  407a92:	(bad)  [ecx+0x38]
  407a95:	jle    0x407aeb
  407a97:	push   edi
  407a98:	mov    ds:0x17ad12,eax
  407a9d:	js     0x407a40
  407a9f:	add    al,0x74
  407aa1:	rcr    BYTE PTR [edi+ecx*2],1
  407aa4:	fisubr WORD PTR [esi-0x63dabd37]
  407aaa:	dec    eax
  407aab:	inc    esp
  407aac:	(bad)  
  407aad:	(bad)  
  407aae:	xor    al,0x39
  407ab0:	call   0xb594:0xb8078239
  407ab7:	jns    0x407a74
  407ab9:	cs aaa 
  407abb:	mov    al,0x42
  407abd:	or     ebx,edx
  407abf:	mov    dl,0x2b
  407ac1:	fldcw  WORD PTR [edi-0x7cde4687]
  407ac7:	inc    edi
  407ac8:	adc    ebx,DWORD PTR [edx+0x51]
  407acb:	cmp    DWORD PTR [edi+0x7],ebp
  407ace:	mov    ebp,0xe20081c7
  407ad3:	das    
  407ad4:	outs   dx,BYTE PTR ds:[esi]
  407ad5:	mov    ds:0x9c664cf,eax
  407ada:	out    dx,al
  407adb:	aas    
  407adc:	or     BYTE PTR [ebx-0x37dcf2b1],dl
  407ae2:	push   ss
  407ae3:	popf   
  407ae4:	xchg   edi,eax
  407ae5:	(bad)  
  407ae6:	repnz inc ecx
  407ae8:	sbb    ecx,DWORD PTR [edi-0x4]
  407aeb:	fsub   QWORD PTR [edx-0xe53c6bd]
  407af1:	leave  
  407af2:	imul   eax,DWORD PTR [esi+0x493e8500],0x559f54eb
  407afc:	call   0xf47f:0x11e3a07f
  407b03:	fld    QWORD PTR [ebx]
  407b05:	fadd   DWORD PTR [ebx+0x7]
  407b08:	rcl    ecx,1
  407b0a:	xor    ecx,DWORD PTR [ecx+0x2d]
  407b0d:	mov    eax,0xf11ee14c
  407b12:	loop   0x407a99
  407b14:	in     al,0x6
  407b16:	inc    esi
  407b17:	mov    al,ds:0x4ebd70ef
  407b1c:	call   FWORD PTR [ebx-0x78]
  407b1f:	push   edi
  407b20:	cmp    al,0x9
  407b22:	int3   
  407b23:	popa   
  407b24:	mov    eax,ds:0xeed8b2cd
  407b29:	inc    esp
  407b2a:	xchg   edx,eax
  407b2b:	(bad)  
  407b2c:	mov    edi,0x3bb8a710
  407b31:	sbb    cl,BYTE PTR [ebp-0xd]
  407b34:	js     0x407b0d
  407b36:	ret    0x1e7f
  407b39:	shr    DWORD PTR [eax+0x25],0x45
  407b3d:	adc    ebp,esi
  407b3f:	cmp    edi,DWORD PTR [esi]
  407b41:	dec    esi
  407b42:	mov    edi,0x972e13a6
  407b47:	scas   al,BYTE PTR es:[edi]
  407b48:	gs xchg ebp,eax
  407b4a:	arpl   WORD PTR [ebp+0x4a],bx
  407b4d:	fcomi  st,st(2)
  407b4f:	add    al,0x2e
  407b51:	lahf   
  407b52:	add    ebx,DWORD PTR [ebx+eax*4+0x6ba210d6]
  407b59:	les    edx,FWORD PTR [eax-0x9]
  407b5c:	ss push cs
  407b5e:	scas   al,BYTE PTR es:[edi]
  407b5f:	pop    es
  407b60:	xchg   ecx,eax
  407b61:	xchg   BYTE PTR [edi-0x26],ah
  407b64:	push   ebp
  407b65:	leave  
  407b66:	xor    BYTE PTR [eax-0x2dadf106],dh
  407b6c:	push   ebx
  407b6d:	stos   BYTE PTR es:[edi],al
  407b6e:	jo     0x407b18
  407b70:	adc    al,0x63
  407b72:	sub    al,0x1d
  407b74:	push   esp
  407b75:	xor    eax,0x76b98453
  407b7a:	push   edi
  407b7b:	test   esi,esi
  407b7d:	add    bl,BYTE PTR ss:[edi+ebp*8]
  407b81:	lods   eax,DWORD PTR ds:[esi]
  407b82:	jno    0x407baf
  407b84:	mov    al,ds:0x2f4504e4
  407b89:	jbe    0x407b61
  407b8b:	cli    
  407b8c:	inc    edi
  407b8d:	in     al,0x26
  407b8f:	bswap  ebx
  407b91:	ja     0x407b5e
  407b93:	sar    BYTE PTR [esi-0x67],0xd2
  407b97:	dec    edi
  407b98:	sbb    edx,DWORD PTR [edx+0x31]
  407b9b:	pushf  
  407b9c:	xor    BYTE PTR [ebp+0x7d03db8d],dl
  407ba2:	adc    BYTE PTR [ebx],dh
  407ba4:	rol    DWORD PTR [ebx],1
  407ba6:	(bad)  
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x7d3c:0x45fdba79
  407cce:	inc    esp
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407cd5
  407cd8:	leave  
  407cd9:	and    eax,DWORD PTR [esi]
  407cdb:	repnz gs lock push es
  407cdf:	xor    BYTE PTR [esi+edi*4+0x65b2d9b8],0x93
  407ce7:	out    dx,eax
  407ce8:	ret    
  407ce9:	adc    BYTE PTR [edi+edx*1-0x12],0x8d
  407cee:	xchg   esp,eax
  407cef:	(bad)  
  407cf0:	stos   DWORD PTR es:[edi],eax
  407cf1:	test   DWORD PTR cs:[bx+di],edx
  407cf5:	cdq    
  407cf6:	(bad)  
  407cf7:	clc    
  407cf8:	push   edx
  407cf9:	or     cl,BYTE PTR [esi-0x8]
  407cfc:	dec    esi
  407cfd:	pop    ecx
  407cfe:	call   0x3750:0x184e7e80
  407d05:	add    eax,0x3fbaf673
  407d0a:	jne    0x407d5a
  407d0c:	fiadd  DWORD PTR [edi+0x75524029]
  407d12:	inc    DWORD PTR [edi]
  407d14:	aam    0x14
  407d16:	stos   BYTE PTR es:[edi],al
  407d17:	stos   BYTE PTR es:[edi],al
  407d18:	stc    
  407d19:	jmp    0x2fca:0x165a8d36
  407d20:	xchg   ecx,eax
  407d21:	and    DWORD PTR [ecx],0x29d8d492
  407d27:	sahf   
  407d28:	les    ebx,FWORD PTR [edx-0x7600d318]
  407d2e:	push   eax
  407d2f:	push   ebx
  407d30:	push   ds
  407d31:	pusha  
  407d32:	mov    dh,0x75
  407d34:	sbb    eax,edi
  407d36:	lahf   
  407d37:	push   cs
  407d38:	sar    DWORD PTR [esi-0x23d69880],1
  407d3e:	jmp    0x75eb:0x5d78da64
  407d45:	and    al,0xdd
  407d47:	retf   
  407d48:	imul   eax,DWORD PTR [esi+ecx*8],0xfeb87bc6
  407d4f:	push   ebx
  407d50:	test   ch,dl
  407d52:	or     al,0xd4
  407d54:	and    DWORD PTR [ebp-0x79],esp
  407d57:	sbb    cl,BYTE PTR [edi-0x5f86b981]
  407d5d:	stos   BYTE PTR es:[edi],al
  407d5e:	daa    
  407d5f:	jbe    0x407cee
  407d61:	mov    ch,BYTE PTR gs:[eax-0x2b]
  407d65:	lods   eax,DWORD PTR ds:[esi]
  407d66:	shl    dl,0x3e
  407d69:	cmp    DWORD PTR [edx],esi
  407d6b:	pop    ebp
  407d6c:	pop    es
  407d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d6e:	loopne 0x407d44
  407d70:	xchg   ebp,eax
  407d71:	jge    0x407dc1
  407d73:	add    ebp,edx
  407d75:	push   esp
  407d76:	daa    
  407d77:	aas    
  407d78:	xchg   esi,eax
  407d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7a:	xchg   esp,eax
  407d7b:	dec    ecx
  407d7c:	in     eax,dx
  407d7d:	or     DWORD PTR [edx],esi
  407d7f:	mov    eax,DWORD PTR [ebp-0x21ca15e2]
  407d85:	fsub   st,st(6)
  407d87:	ds push edi
  407d89:	jle    0x407d9a
  407d8b:	jo     0x407dca
  407d8d:	cmp    bl,ch
  407d8f:	clts   
  407d91:	jg     0x407ddb
  407d93:	dec    ebp
  407d94:	lahf   
  407d95:	jmp    FWORD PTR [edx]
  407d97:	mov    dh,0xbb
  407d99:	push   eax
  407d9a:	popf   
  407d9b:	jbe    0x407d40
  407d9d:	add    al,0xcd
  407d9f:	sub    eax,DWORD PTR [ebp-0x9]
  407da2:	adc    eax,DWORD PTR [edx+edx*8]
  407da5:	xor    BYTE PTR [edx+edi*4],0xd6
  407da9:	push   esi
  407daa:	gs push cs
  407dac:	xor    ch,BYTE PTR [edi+edx*4-0x48]
  407db0:	(bad)  
  407db1:	and    dh,BYTE PTR [ebx+0x6a120f35]
  407db7:	repz xchg ebx,eax
  407db9:	xor    DWORD PTR [edx+edx*4-0x34],eax
  407dbd:	pop    ebx
  407dbe:	lea    esp,[edi]
  407dc0:	or     eax,0x15dd1c18
  407dc5:	pop    ds
  407dc6:	or     edi,DWORD PTR [edx]
  407dc8:	pop    esi
  407dc9:	and    eax,0x9b7b7ad0
  407dce:	into   
  407dcf:	pop    ebp
  407dd0:	test   eax,0x1c9638ed
  407dd5:	in     eax,0xee
  407dd7:	mov    al,0x15
  407dd9:	push   es
  407dda:	dec    ebx
  407ddb:	add    bh,BYTE PTR [esi]
  407ddd:	xor    BYTE PTR [eax-0x17],dh
  407de0:	(bad)  
  407de1:	jle    0x407d73
  407de3:	push   eax
  407de4:	pop    edx
  407de5:	jecxz  0x407e34
  407de7:	xchg   ebx,eax
  407de8:	daa    
  407de9:	xor    al,0x18
  407deb:	int    0x89
  407ded:	mov    edi,0x6d1268fb
  407df2:	push   DWORD PTR [ebx+esi*2-0x79]
  407df6:	push   ss
  407df7:	pop    ecx
  407df8:	adc    ah,ch
  407dfa:	mov    ds:0xc27e77c8,eax
  407dff:	scas   al,BYTE PTR es:[edi]
  407e00:	inc    edi
  407e01:	xchg   edx,eax
  407e02:	sbb    BYTE PTR [eax-0x2f],ah
  407e05:	loopne 0x407dc0
  407e07:	inc    ecx
  407e08:	out    dx,al
  407e09:	fdiv   DWORD PTR [eax-0x5a]
  407e0c:	sub    BYTE PTR [eax+eiz*1+0x1c78f186],al
  407e13:	mov    bh,0xa7
  407e15:	pop    ds
  407e16:	(bad)
  407e19:	jl     0x407e43
  407e1b:	mov    al,0xab
  407e1e:	xor    BYTE PTR [ebx],dl
  407e20:	pop    edx
  407e21:	out    dx,al
  407e22:	xchg   ebp,eax
  407e23:	pusha  
  407e24:	mov    al,0x4e
  407e26:	bound  edx,QWORD PTR [ecx-0x1ec89e8c]
  407e2c:	fbstp  TBYTE PTR [esi-0x1d]
  407e2f:	push   ds
  407e30:	jb     0x407e89
  407e32:	pop    ss
  407e33:	xchg   BYTE PTR [eax-0x1b4bdc7d],ah
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    esp,ecx
  407e84:	hlt    
  407e85:	cwde   
  407e86:	je     0x407ed7
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407ed7
  407e90:	sbb    BYTE PTR [edi+0x732f5f8a],bl
  407e96:	call   0x65ef:0xb2504314
  407e9d:	fwait
  407e9e:	out    dx,eax
  407e9f:	mov    esi,DWORD PTR [esi]
  407ea1:	fstp   st(2)
  407ea3:	out    dx,al
  407ea4:	sub    edx,ecx
  407ea6:	aad    0xb9
  407ea8:	inc    ebx
  407ea9:	xlat   BYTE PTR ds:[ebx]
  407eaa:	mov    ds:0x97106530,eax
  407eaf:	loop   0x407ed8
  407eb1:	or     dh,ah
  407eb3:	(bad)  
  407eb4:	or     al,0xc6
  407eb6:	inc    edi
  407eb7:	push   ds
  407eb8:	shl    DWORD PTR [esi+0x67],0x1b
  407ebc:	or     BYTE PTR [ebx],dh
  407ebe:	ret    0x3bb4
  407ec1:	mov    esp,0xe170c5b9
  407ec6:	and    ebx,DWORD PTR [ebx]
  407ec8:	mov    esp,0x4ce2ab83
  407ecd:	push   esi
  407ece:	push   ss
  407ecf:	imul   edx,DWORD PTR [ecx],0xffffffee
  407ed2:	dec    esp
  407ed3:	fidiv  DWORD PTR [ebp-0x49834c69]
  407ed9:	push   eax
  407eda:	lahf   
  407edb:	cmp    eax,0x795e2615
  407ee0:	(bad)  
  407ee1:	aam    0xa8
  407ee3:	jmp    0x8d64:0x790845e8
  407eea:	adc    DWORD PTR [eax+0x674ea3fc],ecx
  407ef0:	jnp    0x407f42
  407ef2:	dec    edx
  407ef3:	xor    BYTE PTR ds:0xdfc1ebf0,0x8f
  407efa:	mov    al,ds:0x209d361c
  407eff:	cmp    cl,0xff
  407f02:	dec    ecx
  407f03:	call   0xdfdd:0x1ae31821
  407f0a:	fdiv   DWORD PTR [ebp+0x119182d3]
  407f10:	sub    al,0xa3
  407f12:	stc    
  407f13:	and    al,0x72
  407f15:	lods   eax,DWORD PTR ds:[esi]
  407f16:	ja     0x407f0b
  407f18:	push   esi
  407f19:	(bad)  
  407f1a:	jle    0x407f67
  407f1c:	fs jmp 0xfa6ca7df
  407f22:	out    0x72,al
  407f24:	jge    0x407f86
  407f26:	xchg   BYTE PTR [edx+0x47],dl
  407f29:	loopne 0x407f2b
  407f2b:	call   0xdf7:0x332e8d24
  407f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f33:	ins    DWORD PTR es:[edi],dx
  407f34:	icebp  
  407f35:	in     al,dx
  407f36:	add    DWORD PTR [edi-0x7],ecx
  407f39:	cdq    
  407f3a:	loop   0x407f2e
  407f3c:	dec    esp
  407f3d:	xchg   edi,eax
  407f3e:	int3   
  407f3f:	adc    dl,bh
  407f41:	push   ss
  407f42:	push   cs
  407f43:	and    ecx,edx
  407f45:	lahf   
  407f46:	and    esp,ebx
  407f48:	loopne 0x407f95
  407f4a:	ds xchg ebx,eax
  407f4c:	(bad)  
  407f4d:	push   eax
  407f4e:	mov    cl,0xe6
  407f50:	hlt    
  407f51:	sbb    al,0xbf
  407f53:	stos   DWORD PTR es:[edi],eax
  407f54:	out    dx,al
  407f55:	(bad)  
  407f56:	call   0xf965a70e
  407f5b:	addr16 xchg cl,dh
  407f5e:	aaa    
  407f5f:	mov    ecx,0xdff22665
  407f64:	xchg   ebx,eax
  407f65:	cs das 
  407f67:	sub    eax,0xc009496e
  407f6c:	lea    esi,ds:0x953eade6
  407f72:	addr16 cli 
  407f74:	mov    bl,0x3f
  407f76:	cmp    dh,BYTE PTR [eax]
  407f78:	dec    edx
  407f79:	or     ebx,DWORD PTR [ecx]
  407f7b:	jp     0x407f2f
  407f7d:	push   edi
  407f7e:	loopne 0x407f91
  407f80:	pushf  
  407f81:	arpl   WORD PTR [esi],bp
  407f83:	ret    
  407f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f85:	(bad)  
  407f86:	mov    ebp,0xec5cea59
  407f8b:	push   edx
  407f8c:	adc    BYTE PTR [ebp+0x119e1763],ah
  407f92:	test   al,0xd
  407f94:	rcl    DWORD PTR ds:0x465f62ec,0x3f
  407f9b:	xchg   bh,ch
  407f9d:	ds dec esi
  407f9f:	out    dx,al
  407fa0:	sti    
  407fa1:	adc    BYTE PTR [edx-0x6a],0xb8
  407fa5:	aaa    
  407fa6:	ror    esp,0x57
  407fa9:	cs in  eax,dx
  407fab:	add    DWORD PTR [ecx+0x5f],edx
  407fae:	fmul   DWORD PTR [ebp-0x361a7b99]
  407fb4:	cmp    al,dl
  407fb6:	shr    BYTE PTR [edi+0x3f0013d4],0x9f
  407fbd:	mov    ebx,DWORD PTR [ebp-0x5a357074]
  407fc3:	rcr    DWORD PTR gs:[edi+0x3d18c9ea],1
  407fca:	lods   eax,DWORD PTR ds:[esi]
  407fcb:	pushf  
  407fcc:	or     bh,ah
  407fce:	ja     0x407ff8
  407fd0:	jmp    0x407f92
  407fd2:	daa    
  407fd3:	in     eax,dx
  407fd4:	test   DWORD PTR [ebp+0x71],0xadc1e19a
  407fdb:	mov    DWORD PTR [ebp*1-0x4ed88318],esp
  407fe2:	(bad)  
  407fe3:	scas   al,BYTE PTR es:[edi]
  407fe4:	and    BYTE PTR [ebx],dh
  407fe6:	mov    dl,0xc7
  407fe8:	sbb    cl,BYTE PTR [esi]
  407fea:	call   0xcdc0:0xd0989eb4
  407ff1:	xor    eax,ecx
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	js     0x408045
  408010:	jg     0x407ff6
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x40800e
  40801b:	cmp    BYTE PTR [eax+0xb],cl
  40801e:	push   esi
  40801f:	dec    eax
  408020:	jnp    0x407fdd
  408022:	xchg   ecx,eax
  408023:	xor    esp,edx
  408025:	add    ebx,DWORD PTR [eax-0x3a173de0]
  40802b:	sub    DWORD PTR [edi+0x32a152b4],eax
  408031:	icebp  
  408032:	xchg   DWORD PTR [ebx-0x4b013e16],edx
  408038:	mov    ds:0x2be16500,eax
  40803d:	aad    0x64
  40803f:	mov    edi,0xdeb1bbab
  408044:	push   ebp
  408045:	xor    DWORD PTR [edi+0x72],edi
  408048:	pop    ecx
  408049:	dec    ecx
  40804a:	sahf   
  40804b:	mov    ah,0xb2
  40804d:	xor    BYTE PTR [eax],bh
  40804f:	pushf  
  408050:	test   eax,0x9511ed6d
  408055:	adc    BYTE PTR [edi-0xd5193e5],0xad
  40805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805d:	loope  0x40806e
  40805f:	push   ds
  408060:	out    dx,eax
  408061:	push   ds
  408062:	add    eax,0xa4a5707
  408067:	popf   
  408068:	fwait
  408069:	xchg   edi,eax
  40806a:	or     eax,0x53b8a24f
  40806f:	mov    bl,0x1b
  408071:	cmp    BYTE PTR [edi-0x8],al
  408074:	and    ah,BYTE PTR [eax+0x30d560ff]
  40807a:	popw   ds
  40807c:	sahf   
  40807d:	jns    0x408074
  40807f:	retf   
  408080:	push   eax
  408081:	xor    ah,dl
  408083:	and    ebp,eax
  408085:	imul   ebx,DWORD PTR [eax+0x47],0x8677ccfc
  40808c:	mov    ebp,0x96d3e991
  408091:	or     al,0x61
  408093:	inc    eax
  408094:	sbb    al,0x2a
  408096:	add    BYTE PTR [eax],0x99
  408099:	sbb    al,0x65
  40809b:	dec    edx
  40809c:	cwde   
  40809d:	add    al,0xac
  40809f:	loop   0x4080de
  4080a1:	adc    al,0x56
  4080a3:	call   0x3377f600
  4080a8:	dec    esp
  4080a9:	in     eax,dx
  4080aa:	stc    
  4080ab:	sub    eax,0xe1018cd5
  4080b0:	push   cs
  4080b1:	add    BYTE PTR [ebx],bh
  4080b3:	fs out 0xf7,eax
  4080b6:	ror    DWORD PTR [edx],1
  4080b8:	inc    esi
  4080b9:	jb     0x40806c
  4080bb:	out    0x2e,eax
  4080bd:	mov    eax,ds:0x3d28c9e3
  4080c2:	xor    cl,BYTE PTR [eax+edx*8]
  4080c5:	mul    cl
  4080c7:	hlt    
  4080c8:	(bad)  [edi+0x9877109]
  4080ce:	push   0x1e1f4ca9
  4080d3:	mov    ebp,0x960a5362
  4080d8:	and    BYTE PTR [ebx+0x2f],0xdc
  4080dc:	inc    ebp
  4080dd:	adc    dh,BYTE PTR [ebp-0x3c631706]
  4080e3:	aas    
  4080e4:	mov    ecx,0xa66865f5
  4080e9:	jo     0x40810d
  4080eb:	push   es
  4080ec:	sbb    DWORD PTR [esi+ebp*4-0x7d2f8e89],esi
  4080f3:	test   al,0x33
  4080f5:	dec    ebx
  4080f6:	stc    
  4080f7:	pushf  
  4080f8:	cmp    edi,esi
  4080fa:	mov    edi,0x364b41a5
  4080ff:	cdq    
  408100:	pushf  
  408101:	fidivr DWORD PTR [ecx-0x2d294c23]
  408107:	scas   al,BYTE PTR es:[edi]
  408108:	add    BYTE PTR [eax-0x16bbd5aa],dh
  40810e:	sahf   
  40810f:	enter  0x1414,0xfa
  408113:	xor    edi,eax
  408115:	pop    ss
  408116:	fidivr WORD PTR [eax+eiz*4+0x6a921b5d]
  40811d:	sbb    eax,0x677caf74
  408122:	lahf   
  408123:	mov    eax,ds:0x8440aaa1
  408128:	adc    ch,BYTE PTR [ebx]
  40812a:	lea    edi,[eax+0xf]
  40812d:	add    al,0x7b
  40812f:	popa   
  408130:	rol    DWORD PTR [ebp-0x4f],0xce
  408134:	mov    bh,0x87
  408136:	xor    ebp,DWORD PTR [esi]
  408138:	adc    DWORD PTR [bx+si],esp
  40813b:	inc    esp
  40813c:	(bad)  
  40813d:	mov    edx,0xa8cbadde
  408142:	or     al,0xef
  408144:	mov    al,0xbe
  408146:	out    dx,al
  408147:	test   BYTE PTR [ebp+0x19aa72fc],cl
  40814d:	int3   
  40814e:	dec    ecx
  40814f:	mov    ebx,0x8357466
  408154:	int    0x79
  408156:	in     al,dx
  408157:	pop    ds
  408158:	cmp    dl,BYTE PTR [ebx]
  40815a:	js     0x408177
  40815c:	mov    ebx,0x6afceb82
  408161:	arpl   WORD PTR [edx+0x50],bp
  408164:	aaa    
  408165:	scas   al,BYTE PTR es:[edi]
  408166:	lea    edx,[edx-0x2d44cef9]
  40816c:	imul   esi,ecx,0x4f
  40816f:	push   eax
  408170:	mov    bl,0xd2
  408172:	pop    edi
  408173:	mov    ebx,0x5bcd7bfe
  408178:	adc    BYTE PTR [edi+eiz*1+0x3c133cd],dh
  40817f:	ret    0x54a3
  408182:	(bad)  
  408183:	inc    eax
  408184:	add    cl,ch
  408186:	mov    DWORD PTR [ecx],eax
  408188:	add    BYTE PTR [eax],al
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	sub    DWORD PTR es:[esi],ebp
  4081a2:	xchg   ebp,ebx
  4081a4:	adc    DWORD PTR [edi],0x7e
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x40814f
  4081ad:	enter  0x4c3f,0x86
  4081b1:	inc    edx
  4081b2:	push   ecx
  4081b3:	jae    0x40818a
  4081b5:	shr    DWORD PTR [eax],cl
  4081b7:	cmp    al,0x86
  4081b9:	out    0x5d,al
  4081bb:	fxch   st(4)
  4081bd:	(bad)  
  4081bf:	push   edx
  4081c0:	pop    edx
  4081c1:	pop    ebx
  4081c2:	shl    bl,1
  4081c4:	add    DWORD PTR [esi+0x2d],edi
  4081c7:	out    0x1,eax
  4081c9:	jne    0x40818b
  4081cb:	cli    
  4081cc:	dec    esp
  4081cd:	mov    ds:0x93659e7,al
  4081d2:	call   0xfca5:0x6418fee4
  4081d9:	mov    edx,0x914c2621
  4081de:	icebp  
  4081df:	pop    ss
  4081e0:	fnop   
  4081e2:	pop    edi
  4081e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e4:	sub    dl,dh
  4081e6:	add    al,0x1d
  4081e8:	ja     0x40825c
  4081ea:	fmul   DWORD PTR [edi]
  4081ec:	(bad)  
  4081ed:	mov    ds:0x9096d032,al
  4081f2:	and    al,0x16
  4081f4:	mov    esp,0xe7ff17a
  4081f9:	outs   dx,DWORD PTR ss:[esi]
  4081fb:	fdivr  QWORD PTR [ecx-0x23]
  4081fe:	call   0xb6da:0xa92f1b8
  408205:	xchg   edi,eax
  408206:	inc    ebx
  408207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408208:	push   eax
  408209:	test   bh,ah
  40820b:	xchg   ecx,eax
  40820c:	dec    edx
  40820d:	in     eax,dx
  40820e:	and    BYTE PTR [ebx-0x40406840],bh
  408214:	jge    0x4081fa
  408216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408217:	xor    al,0x65
  408219:	jge    0x408210
  40821b:	xchg   esi,eax
  40821c:	xor    DWORD PTR [esi+0x7],ecx
  40821f:	ror    BYTE PTR ds:[ebx],1
  408222:	sbb    al,0xcc
  408224:	stos   DWORD PTR es:[edi],eax
  408225:	pop    ss
  408226:	sar    BYTE PTR [edx],cl
  408228:	arpl   bx,di
  40822a:	jmp    0x3979bb40
  40822f:	leave  
  408230:	repnz mov eax,ds:0x99cabddb
  408236:	ds sti 
  408238:	fdivr  QWORD PTR [esi]
  40823a:	mov    edi,0xf0c7894c
  40823f:	neg    BYTE PTR [esp+esi*1-0x2c]
  408243:	mov    ?,esi
  408245:	add    al,0xa9
  408247:	adc    ebp,DWORD PTR [ecx+0x4d5967d1]
  40824d:	pop    esi
  40824e:	pop    edi
  40824f:	pop    ebx
  408250:	test   eax,0xef4956a2
  408255:	inc    ebx
  408256:	or     BYTE PTR [ecx+ebp*4-0x140cf2cb],bh
  40825d:	ror    bl,0xa5
  408260:	inc    eax
  408261:	inc    ecx
  408262:	jno    0x408270
  408264:	dec    eax
  408265:	je     0x4082b6
  408267:	and    ebx,DWORD PTR [eax]
  408269:	xchg   DWORD PTR [ebx],esp
  40826b:	shl    BYTE PTR [ebp+ecx*8+0x78b7d06d],cl
  408272:	sbb    bh,BYTE PTR [ecx+0x372dc390]
  408278:	xor    DWORD PTR ds:0x7427f9b0,edx
  40827e:	fidiv  WORD PTR [eax+0x6d1bde7a]
  408284:	sub    BYTE PTR [eax+0x25f67d92],0xab
  40828b:	test   BYTE PTR [ebp+0x1d9741f9],0x20
  408292:	aas    
  408293:	ins    DWORD PTR es:[edi],dx
  408294:	ins    BYTE PTR es:[edi],dx
  408295:	or     DWORD PTR [edx-0x7f],edx
  408298:	and    ebp,ebx
  40829a:	cld    
  40829b:	pmaxub mm5,QWORD PTR [ecx+0x58344b9e]
  4082a2:	retf   
  4082a3:	lods   al,BYTE PTR ds:[esi]
  4082a4:	aad    0xf
  4082a6:	push   edi
  4082a7:	xchg   dh,dh
  4082a9:	mov    edi,es
  4082ab:	cmp    esi,ebp
  4082ad:	or     eax,0xac59fbed
  4082b3:	lahf   
  4082b4:	xchg   ebx,eax
  4082b5:	mov    bl,BYTE PTR [edi]
  4082b7:	xor    ah,BYTE PTR [ebp+ebp*4+0x1ae53e49]
  4082be:	repnz inc ebp
  4082c0:	xlat   BYTE PTR ds:[ebx]
  4082c1:	ret    0xaa59
  4082c4:	sbb    eax,0x48b2bb66
  4082c9:	sbb    edi,DWORD PTR [ebx]
  4082cb:	mov    ebp,0x3970ab04
  4082d0:	xor    eax,0xfc838af9
  4082d5:	and    al,0xf2
  4082d7:	xor    al,0xb1
  4082d9:	test   al,0x10
  4082db:	jb     0x408358
  4082dd:	pusha  
  4082de:	or     eax,0x31c73282
  4082e3:	sub    eax,0x37f83d29
  4082e8:	jg     0x408368
  4082ea:	pushf  
  4082eb:	cmp    DWORD PTR [eax],0x4905f2f2
  4082f1:	fimul  DWORD PTR [esi+0xc]
  4082f4:	(bad)  
  4082f5:	outs   dx,DWORD PTR ds:[esi]
  4082f6:	lods   al,BYTE PTR ds:[esi]
  4082f7:	mov    esi,0xf00d4097
  4082fc:	in     eax,dx
  4082fd:	sbb    al,0x24
  4082ff:	xchg   DWORD PTR [edi-0x54],ebp
  408302:	cmc    
  408303:	pop    eax
  408304:	test   eax,0xd46144d4
  408309:	pusha  
  40830a:	aas    
  40830b:	inc    ecx
  40830c:	push   0x52
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ebx+ebx*2+0x61a3b2d8],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x4083a2
  40840c:	loope  0x408399
  40840e:	xor    dl,bh
  408410:	push   ebx
  408411:	adc    eax,0xba17b2f3
  408416:	pop    ss
  408417:	add    al,BYTE PTR [ebx+0x66034645]
  40841d:	mov    al,0xde
  40841f:	lods   eax,DWORD PTR ds:[esi]
  408420:	(bad)  
  408421:	in     al,0xe4
  408423:	pop    edx
  408424:	mov    eax,ds:0x615073de
  408429:	jno    0x4083ce
  40842b:	mov    ebx,0x87bf624
  408430:	int3   
  408431:	sbb    al,BYTE PTR [esi+0x3c966bb9]
  408437:	pop    esi
  408438:	neg    DWORD PTR [ecx+ecx*4]
  40843b:	fisttp DWORD PTR [ebx+0x1a]
  40843e:	(bad)  
  40843f:	call   0x12b70692
  408444:	mov    ?,WORD PTR [ebp+0x72]
  408447:	xor    eax,0xca043677
  40844c:	adc    BYTE PTR [ebx+0x6396b35c],0x11
  408453:	add    BYTE PTR [edx-0x11],dl
  408456:	aaa    
  408457:	push   eax
  408458:	xchg   ecx,eax
  408459:	xor    ebp,DWORD PTR [eax-0xa]
  40845c:	icebp  
  40845d:	xor    eax,0x4e0457e5
  408462:	add    DWORD PTR [eax],esi
  408464:	aas    
  408465:	push   edi
  408466:	scas   al,BYTE PTR es:[edi]
  408467:	jge    0x4084e4
  408469:	push   eax
  40846a:	add    cl,BYTE PTR [ebx+0x5bb0f1c8]
  408470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408471:	shufps xmm5,XMMWORD PTR [edx+0x6f],0xdb
  408476:	pop    ds
  408477:	jne    0x4084c1
  408479:	fcomip st,st(0)
  40847b:	loope  0x408410
  40847d:	add    BYTE PTR [esi+0x54],bh
  408480:	pop    eax
  408481:	aad    0x83
  408483:	sub    bh,bh
  408485:	dec    ebp
  408486:	and    bl,BYTE PTR [esi+0x406c679b]
  40848c:	jp     0x40848c
  40848e:	cld    
  40848f:	adc    BYTE PTR [ebp+0x11a3dba2],bl
  408495:	xor    al,0xd7
  408497:	retf   0xf4c4
  40849a:	mov    edi,0x78340a98
  40849f:	jbe    0x4084ab
  4084a1:	cli    
  4084a2:	push   ebx
  4084a3:	jo     0x408502
  4084a5:	push   edi
  4084a6:	sbb    BYTE PTR [edi],dh
  4084a8:	fld    TBYTE PTR [esi]
  4084aa:	lahf   
  4084ab:	das    
  4084ac:	and    DWORD PTR [edx-0x65560cbc],0xfb5133ee
  4084b6:	mov    dh,0x59
  4084b8:	loop   0x4084c6
  4084ba:	icebp  
  4084bb:	fst    DWORD PTR [ebx-0x74]
  4084be:	fcomi  st,st(7)
  4084c0:	pop    esi
  4084c1:	mov    cl,0xe
  4084c3:	or     ch,BYTE PTR [edx+0x3d]
  4084c6:	push   esi
  4084c7:	test   eax,0x56fe7a9
  4084cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084cd:	mov    ds:0x8c5928c0,eax
  4084d2:	dec    ebx
  4084d3:	push   esi
  4084d4:	or     DWORD PTR [edi-0x745cc7df],ebp
  4084da:	xchg   edx,eax
  4084db:	sub    al,0xb5
  4084dd:	jne    0x408487
  4084df:	ficomp DWORD PTR [edx+0x11]
  4084e2:	ja     0x408556
  4084e4:	adc    al,0x50
  4084e6:	adc    bh,BYTE PTR [ebp+0x27edf946]
  4084ec:	ret    0xaca3
  4084ef:	inc    esp
  4084f0:	out    0x8b,eax
  4084f2:	xor    WORD PTR [ebx+0x3d],ax
  4084f6:	sar    BYTE PTR [ebx],cl
  4084f8:	in     al,dx
  4084f9:	cld    
  4084fa:	or     al,BYTE PTR [ebx+eax*1+0x4e1009f4]
  408501:	jge    0x408578
  408503:	(bad)  
  408504:	xchg   edi,eax
  408505:	xor    al,0x9b
  408507:	mov    dh,BYTE PTR [ecx+ebp*1-0x45]
  40850b:	in     al,0xc8
  40850d:	adc    edi,DWORD PTR [edi+0x6258b024]
  408513:	add    dl,bh
  408515:	nop
  408516:	mov    ah,0x66
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xcd26a896
  40854d:	xor    esi,eax
  40854f:	cmc    
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x408505
  408559:	pop    ebp
  40855a:	cmp    DWORD PTR [esi],0x3a139df7
  408560:	ret    0xff72
  408563:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408565:	pop    esp
  408566:	aad    0x88
  408568:	fnstsw WORD PTR [edi+0x43]
  40856b:	adc    ebx,DWORD PTR [ebp-0x3a]
  40856e:	jnp    0x4084f1
  408570:	shr    DWORD PTR [edx+edx*1+0x1cec4f55],cl
  408577:	sbb    DWORD PTR ds:0xaec645ea,ebx
  40857d:	jp     0x40855a
  40857f:	shld   DWORD PTR [eax+0x7c],esp,cl
  408583:	add    BYTE PTR [edi],al
  408585:	mov    al,ds:0x3a859aa5
  40858a:	pop    ebx
  40858b:	push   edi
  40858c:	inc    esi
  40858d:	pop    ecx
  40858e:	pusha  
  40858f:	pop    ebx
  408590:	ins    BYTE PTR es:[edi],dx
  408591:	pop    ss
  408592:	sub    esp,DWORD PTR ds:0xd51f0882
  408598:	retf   
  408599:	aam    0x1f
  40859b:	pop    ebp
  40859c:	popa   
  40859d:	mov    sp,0x1a59
  4085a1:	int    0xf1
  4085a3:	icebp  
  4085a4:	loope  0x408568
  4085a6:	sbb    edx,DWORD PTR [ebx]
  4085a8:	cs stc 
  4085aa:	dec    esp
  4085ab:	add    DWORD PTR [ebx],ebx
  4085ad:	inc    esi
  4085ae:	jp     0x4085d0
  4085b0:	mov    dl,0x56
  4085b2:	das    
  4085b3:	stos   DWORD PTR es:[edi],eax
  4085b4:	jb     0x408617
  4085b6:	adc    eax,0xf64c7889
  4085bb:	jmp    0x408598
  4085bd:	sub    edx,DWORD PTR [ecx-0xe0c2ca4]
  4085c3:	rcr    DWORD PTR [edi-0xdd9efd7],0xdf
  4085ca:	out    0x7b,eax
  4085cc:	push   ecx
  4085cd:	mov    ss,WORD PTR [edi-0x23]
  4085d0:	ins    BYTE PTR es:[edi],dx
  4085d1:	push   esi
  4085d2:	push   0xd29e2aec
  4085d7:	imul   ebp,edi,0x59
  4085da:	mov    al,0x33
  4085dc:	cdq    
  4085dd:	mov    ecx,0x52b0caf9
  4085e2:	xor    DWORD PTR [ecx+0x29],edx
  4085e5:	enter  0xbf83,0x81
  4085e9:	out    dx,al
  4085ea:	inc    edi
  4085eb:	or     bh,BYTE PTR [eax-0x2c49cba8]
  4085f1:	dec    eax
  4085f2:	lods   al,BYTE PTR ds:[esi]
  4085f3:	test   eax,0xacee0ce1
  4085f8:	or     eax,0x45b8027c
  4085fd:	in     al,0x4b
  4085ff:	add    esi,DWORD PTR [edi+0x21]
  408602:	in     eax,0x7f
  408604:	pop    eax
  408605:	mov    dh,0xd7
  408607:	add    DWORD PTR [esp+edx*8+0x29],0xffffff84
  40860c:	outs   dx,BYTE PTR ds:[esi]
  40860d:	and    ebp,esi
  40860f:	xchg   BYTE PTR [esi-0x61d61b2d],cl
  408615:	sbb    edx,ecx
  408617:	xchg   ebx,eax
  408618:	in     eax,dx
  408619:	out    dx,eax
  40861a:	adc    DWORD PTR [ebp-0x64479067],ebp
  408620:	iret   
  408621:	shl    BYTE PTR [edi-0x13],1
  408624:	in     al,0x60
  408626:	mov    eax,0x98b03147
  40862b:	pusha  
  40862c:	inc    edx
  40862d:	pop    esi
  40862e:	jl     0x408650
  408630:	lods   al,BYTE PTR ds:[esi]
  408631:	int3   
  408632:	stos   BYTE PTR es:[edi],al
  408633:	mov    al,ds:0xe819fbb3
  408638:	int3   
  408639:	fmul   QWORD PTR ds:0xa0fbf3d8
  40863f:	daa    
  408640:	dec    edi
  408641:	cwde   
  408642:	jl     0x4085d2
  408644:	pop    es
  408645:	jmp    0x4086c3
  408647:	xchg   ecx,eax
  408648:	add    DWORD PTR [edi+0x2517fc0],edx
  40864e:	cmp    DWORD PTR [esi],eax
  408650:	pushf  
  408651:	sub    dl,BYTE PTR [esi+0x75fbc69a]
  408657:	repnz xlat BYTE PTR ds:[ebx]
  408659:	icebp  
  40865a:	test   ecx,ebp
  40865c:	aad    0x27
  40865e:	in     eax,dx
  40865f:	int3   
  408660:	ins    DWORD PTR es:[edi],dx
  408661:	nop
  408662:	les    edx,FWORD PTR [ecx+0x3c0b70f]
  408668:	or     eax,0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	(bad)  
  408741:	or     ebx,DWORD PTR [ecx+0x7e2b09fa]
  408747:	jle    0x408753
  408749:	jg     0x4087c9
  40874b:	jle    0x40879a
  40874d:	popf   
  40874e:	retf   0xb42b
  408751:	inc    ebx
  408752:	aas    
  408753:	add    BYTE PTR [esi+0x19],cl
  408756:	add    BYTE PTR [esi+0x417ec9ad],cl
  40875c:	jmp    0x6580d8f0
  408761:	xor    al,0x36
  408763:	pop    ebx
  408764:	xor    al,BYTE PTR [ebx+ebp*2-0x1f]
  408768:	stc    
  408769:	pop    ss
  40876a:	retf   
  40876b:	pop    edi
  40876c:	imul   eax,edx,0xe20f7243
  408772:	cmp    DWORD PTR [eax],ecx
  408774:	fiadd  DWORD PTR [ebp-0x21d92d88]
  40877a:	pop    eax
  40877b:	lods   al,BYTE PTR ds:[esi]
  40877c:	jecxz  0x4087f7
  40877e:	jns    0x4087ef
  408780:	xor    BYTE PTR [ecx-0x6],0x8f
  408784:	push   ebp
  408785:	pop    ebp
  408786:	cmp    DWORD PTR ds:0x2f1b47c5,esi
  40878c:	aad    0xb0
  40878e:	sti    
  40878f:	retf   0x9184
  408792:	sbb    edx,esi
  408794:	or     al,al
  408796:	pop    ds
  408797:	hlt    
  408798:	in     eax,dx
  408799:	dec    ebp
  40879a:	(bad)  
  40879b:	out    0xdf,al
  40879d:	adc    edi,esp
  40879f:	jge    0x40880f
  4087a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a2:	mov    bl,0xc7
  4087a4:	jno    0x4087f7
  4087a6:	xor    eax,0x210e4844
  4087ab:	mov    edx,0xa66e869b
  4087b0:	jo     0x408753
  4087b2:	(bad)
  4087b5:	dec    edi
  4087b6:	pop    esi
  4087b7:	cld    
  4087b8:	inc    ecx
  4087b9:	or     eax,0xf22058bd
  4087be:	(bad)  
  4087bf:	mov    ebp,0x7b10da8f
  4087c4:	sti    
  4087c5:	add    DWORD PTR [edx+eax*2+0x732e8a22],ecx
  4087cc:	ror    ecx,0xd0
  4087cf:	adc    DWORD PTR [edi-0x74],edi
  4087d2:	add    DWORD PTR [ebp-0x16],ecx
  4087d5:	data16 adc al,0x8d
  4087d8:	retf   0x916
  4087db:	aam    0x76
  4087dd:	mov    esp,0x860f7bc5
  4087e2:	push   DWORD PTR [ebx+edi*2+0x22]
  4087e6:	pop    ebx
  4087e7:	jle    0x4087bf
  4087e9:	js     0x408773
  4087eb:	fadd   QWORD PTR [eax-0x4b43400b]
  4087f1:	jo     0x408836
  4087f3:	xchg   edi,eax
  4087f4:	sub    al,0xc4
  4087f6:	mov    esp,0xe902fe38
  4087fb:	shr    DWORD PTR [ebx],cl
  4087fd:	dec    esp
  4087fe:	dec    ecx
  4087ff:	icebp  
  408800:	cs cli 
  408802:	mov    BYTE PTR [ebp+0x1ea1a89],0xf3
  408809:	sbb    bh,BYTE PTR [ecx-0x4638fb86]
  40880f:	stos   BYTE PTR es:[edi],al
  408810:	retf   0xfba6
  408813:	idiv   ah
  408815:	push   0xffffff8e
  408817:	dec    ecx
  408818:	aaa    
  408819:	inc    edx
  40881a:	xor    BYTE PTR [esi+0x4a],0xd4
  40881e:	lea    edi,[ebp+0x37]
  408821:	push   ds
  408822:	sbb    DWORD PTR [esi+0x7a],esp
  408825:	aaa    
  408826:	nop
  408827:	(bad)  
  408828:	sub    al,BYTE PTR [ecx-0x6]
  40882b:	fisubr WORD PTR [edi+0x29ad1c0f]
  408831:	pop    esi
  408832:	ja     0x4087e1
  408834:	cmp    eax,0xd77acde8
  408839:	xchg   esi,eax
  40883a:	ja     0x4087d1
  40883c:	outs   dx,DWORD PTR ds:[esi]
  40883d:	loope  0x408848
  40883f:	xor    edi,DWORD PTR [esi]
  408841:	fcom   QWORD PTR [esi+0x25]
  408844:	jbe    0x40885e
  408846:	call   0x9477ed50
  40884b:	cs jb  0x40880b
  40884e:	jle    0x4087f0
  408850:	rcr    DWORD PTR [ebp+ecx*2+0x21],1
  408854:	xchg   esi,eax
  408855:	xor    eax,0x45c7066f
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x3ad74167],edx
  408951:	adc    esi,DWORD PTR [ecx+0x7e280512]
  408957:	jle    0x408963
  408959:	jg     0x4089d9
  40895b:	jle    0x408982
  40895d:	aas    
  40895e:	aad    0x22
  408960:	or     al,0x84
  408962:	dec    esp
  408963:	dec    ebp
  408965:	lds    ebx,FWORD PTR [ecx-0x43]
  408968:	adc    esp,eax
  40896a:	mov    dh,0xbf
  40896c:	shl    DWORD PTR [edi+0x36],cl
  40896f:	addr16 out 0xf9,al
  408972:	cmc    
  408973:	mov    WORD PTR [esi-0x694e0ba7],gs
  408979:	or     eax,0xa081e7c6
  40897e:	imul   DWORD PTR [ebp+0x50a0db97]
  408984:	mov    bl,0x51
  408986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408987:	lds    edi,FWORD PTR [ecx-0x47bf49b1]
  40898d:	fwait
  40898e:	adc    DWORD PTR [ecx+0x4c],ecx
  408991:	mov    ebp,0x7dec032e
  408996:	int3   
  408997:	cmp    edi,DWORD PTR ds:0xa7207f8
  40899d:	je     0x408961
  40899f:	ins    BYTE PTR es:[edi],dx
  4089a0:	jecxz  0x408933
  4089a2:	aad    0xe6
  4089a4:	and    cl,0xb9
  4089a7:	lods   al,BYTE PTR ds:[esi]
  4089a8:	or     DWORD PTR ds:0xbd3fa292,ebx
  4089ae:	sahf   
  4089af:	int    0xbd
  4089b1:	or     eax,0x727367e8
  4089b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b7:	adc    al,0x74
  4089b9:	ins    BYTE PTR es:[edi],dx
  4089ba:	jb     0x40897a
  4089bc:	jecxz  0x4089aa
  4089be:	pop    esp
  4089bf:	add    ecx,esp
  4089c1:	div    BYTE PTR [ebx+0x18]
  4089c4:	mov    bl,0xb0
  4089c6:	out    0x76,al
  4089c8:	rol    DWORD PTR [ecx],1
  4089ca:	inc    ecx
  4089cb:	jge    0x4089e6
  4089cd:	ja     0x408974
  4089cf:	jecxz  0x408961
  4089d1:	mov    bl,0xf9
  4089d3:	push   esi
  4089d4:	or     BYTE PTR [ebp+0x8],al
  4089d7:	jmp    0x40896d
  4089d9:	jo     0x40898c
  4089db:	mov    edi,0x307f2d8b
  4089e0:	jmp    0x80d:0xd4899649
  4089e7:	jnp    0x408a53
  4089e9:	loop   0x408a10
  4089eb:	xchg   BYTE PTR [ebx-0x4cc7f4cc],ch
  4089f1:	pusha  
  4089f2:	lahf   
  4089f3:	mov    ecx,0x4145cd47
  4089f8:	push   0x91cddd58
  4089fd:	mov    cs,WORD PTR [edx+0x22e33aff]
  408a03:	popf   
  408a04:	xor    DWORD PTR [ebx+eiz*4],ecx
  408a07:	mov    ds:0xd13fba07,al
  408a0c:	gs sub al,0x67
  408a0f:	bound  edx,QWORD PTR [edx-0x34fb0e3f]
  408a15:	mov    ecx,?
  408a17:	data16 jno 0x408a5e
  408a1a:	sar    BYTE PTR [eax-0x16],0xf9
  408a1e:	scas   eax,DWORD PTR es:[edi]
  408a1f:	es sahf 
  408a21:	scas   al,BYTE PTR es:[edi]
  408a22:	cvttps2pi mm3,QWORD PTR [edx-0x50dcf5f4]
  408a29:	retf   
  408a2a:	dec    ebp
  408a2b:	clc    
  408a2c:	sar    BYTE PTR [ebx-0x108bf5ad],1
  408a32:	or     eax,0x5d65ddf2
  408a37:	call   0xcc13:0x6fed4298
  408a3e:	jmp    0x408a02
  408a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a41:	pop    edi
  408a42:	jbe    0x408a26
  408a44:	pop    esi
  408a45:	fwait
  408a46:	loop   0x408a43
  408a48:	adc    eax,0xd8015db
  408a4d:	pop    ebp
  408a4e:	or     DWORD PTR [edx-0x4dfc366],ebp
  408a54:	adc    ecx,DWORD PTR [ebp+edx*8-0x7c]
  408a58:	sar    al,1
  408a5a:	lods   al,BYTE PTR ds:[esi]
  408a5b:	sar    BYTE PTR [ebx+esi*1+0x2a516e09],cl
  408a62:	xor    al,0xfd
  408a64:	cld    
  408a65:	cmp    bl,dh
  408a67:	adc    esi,DWORD PTR [ebx]
  408a69:	rol    DWORD PTR [ebx],1
  408a6b:	(bad)  
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	adc    DWORD PTR [edx+0x291187c4],ecx
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408acc
  408a92:	mov    ebp,0xb262cad6
  408a97:	push   edx
  408a98:	fisubr WORD PTR [edi+0x51]
  408a9b:	sbb    ch,bl
  408a9d:	fistp  WORD PTR [ecx+0x46fc7fbb]
  408aa3:	pop    ebx
  408aa4:	out    0xfd,eax
  408aa6:	xor    eax,0x82f9d147
  408aac:	retf   0x3ed8
  408aaf:	(bad)  
  408ab0:	xor    dh,BYTE PTR [ebx-0x7f]
  408ab3:	in     al,0xaa
  408ab5:	outs   dx,DWORD PTR ds:[esi]
  408ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab7:	fimul  WORD PTR [ecx+0x50d18ce9]
  408abd:	xchg   esp,eax
  408abe:	sub    ah,BYTE PTR [eax-0x40df2191]
  408ac4:	jnp    0x408af0
  408ac6:	or     bh,BYTE PTR [ebp-0x2551d2b1]
  408acc:	sub    DWORD PTR [eax+0x70],edx
  408acf:	mov    BYTE PTR [edx],dl
  408ad1:	pop    esp
  408ad2:	(bad)  
  408ad3:	and    BYTE PTR [ebp-0x1a],bh
  408ad6:	movaps XMMWORD PTR [ebx-0x2ab227f],xmm7
  408add:	(bad)  
  408adf:	daa    
  408ae0:	ins    DWORD PTR es:[edi],dx
  408ae1:	mov    eax,0x79fa6478
  408ae6:	cmp    eax,0xe99e1961
  408aeb:	jae    0x408ad9
  408aed:	push   ebp
  408aee:	mov    bl,0xad
  408af0:	and    al,0xba
  408af2:	dec    ebp
  408af3:	inc    eax
  408af4:	mov    dh,0xd6
  408af6:	jge    0x408afe
  408af8:	adc    DWORD PTR ds:0xde9abc95,0xae596a06
  408b02:	mov    ds:0x96d2c884,al
  408b07:	retf   0x9398
  408b0a:	aaa    
  408b0b:	in     eax,0xfc
  408b0d:	imul   edi,DWORD PTR [edi+0x533f98b5],0x424736d3
  408b17:	lods   al,BYTE PTR ds:[esi]
  408b18:	push   ds
  408b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1a:	inc    esp
  408b1b:	adc    ecx,DWORD PTR [ecx]
  408b1d:	fwait
  408b1e:	inc    eax
  408b1f:	nop
  408b20:	popf   
  408b21:	aad    0x22
  408b23:	adc    cl,BYTE PTR [ecx-0x7f1cdb4d]
  408b29:	jmp    0x8c6fd8f4
  408b2e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408b30:	xor    DWORD PTR [ebx+0x23],eax
  408b33:	stos   BYTE PTR es:[edi],al
  408b34:	je     0x408b60
  408b36:	in     al,dx
  408b37:	cmp    al,0x66
  408b39:	(bad)  
  408b3a:	fstp   TBYTE PTR [edx-0x4a37b74c]
  408b40:	xchg   esp,eax
  408b41:	in     al,0x46
  408b43:	add    DWORD PTR [esi],ebp
  408b45:	jbe    0x408bbe
  408b47:	call   0x3df20172
  408b4c:	dec    edi
  408b4d:	nop
  408b4e:	inc    esp
  408b4f:	les    edi,FWORD PTR [edx]
  408b51:	sbb    al,0xed
  408b53:	aas    
  408b54:	mov    al,ds:0xae685ef7
  408b59:	pop    esi
  408b5a:	outs   dx,DWORD PTR ds:[esi]
  408b5b:	stos   DWORD PTR es:[edi],eax
  408b5c:	cmp    BYTE PTR [ebx+0x5093f009],bl
  408b62:	jp     0x408be3
  408b64:	scas   al,BYTE PTR es:[edi]
  408b65:	mov    ebx,ss
  408b67:	jmp    0x408b67
  408b69:	or     al,0xa0
  408b6b:	rcr    BYTE PTR [edx-0x6f2b436],1
  408b71:	sub    eax,0x25ed82cb
  408b76:	(bad)  
  408b77:	jle    0x408b28
  408b79:	arpl   WORD PTR [esi+0x34],bp
  408b7c:	jmp    0x408b5c
  408b7e:	push   cs
  408b7f:	or     BYTE PTR [edx+0x24],dl
  408b82:	cmp    eax,DWORD PTR [esp+esi*4]
  408b85:	stos   BYTE PTR es:[edi],al
  408b86:	xlat   BYTE PTR ds:[ebx]
  408b87:	loop   0x408bd6
  408b89:	and    al,0xff
  408b8b:	mov    ebp,0x44bb2285
  408b90:	jno    0x408b34
  408b92:	pop    ebp
  408b93:	push   eax
  408b94:	fist   WORD PTR [ebx-0x531dc114]
  408b9a:	clc    
  408b9b:	fistp  QWORD PTR [edi+0x53]
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x2f1369bd]
  408bcf:	in     al,dx
  408bd0:	lods   al,BYTE PTR ds:[esi]
  408bd1:	aad    0x2d
  408bd3:	cs jle 0x408c54
  408bd6:	or     bh,BYTE PTR [edi+0x7e]
  408bd9:	jle    0x408b5f
  408bdb:	mov    ds:0xd0e63fe,al
  408be0:	mov    ecx,DWORD PTR [eax+0x30]
  408be3:	xor    al,0x3b
  408be5:	shl    cl,1
  408be7:	mov    eax,DWORD PTR [eax+0x14]
  408bea:	mov    edi,0x5a06bb02
  408bef:	das    
  408bf0:	mov    DWORD PTR [esi-0x59],0xdc9b3343
  408bf7:	mov    al,0xbf
  408bf9:	inc    edx
  408bfa:	mov    ebx,0x9809dc62
  408bff:	mov    ecx,DWORD PTR ds:0xe29053a7
  408c05:	jecxz  0x408c81
  408c07:	pop    ecx
  408c08:	fisttp WORD PTR [edi+0x20]
  408c0b:	jg     0x408be6
  408c0d:	and    eax,0x3239d77
  408c12:	sub    BYTE PTR [esi],ah
  408c14:	cwde   
  408c15:	add    DWORD PTR [ecx],edi
  408c17:	loopne 0x408ba2
  408c19:	repnz iret 
  408c1b:	outs   dx,BYTE PTR ds:[esi]
  408c1c:	cld    
  408c1d:	xchg   esp,eax
  408c1e:	out    dx,al
  408c1f:	dec    esi
  408c20:	bound  eax,QWORD PTR [edi-0x7a]
  408c23:	sbb    edi,edi
  408c25:	mov    al,0x6
  408c27:	call   0x97fa5c77
  408c2c:	int3   
  408c2d:	out    dx,eax
  408c2e:	cwde   
  408c2f:	out    0xde,al
  408c31:	jo     0x408bc4
  408c33:	xchg   esi,eax
  408c34:	and    DWORD PTR [ecx+edi*8+0x34],ecx
  408c38:	in     eax,0x1f
  408c3a:	rcl    DWORD PTR ds:0xfe04f548,cl
  408c40:	out    0x2b,al
  408c42:	cmp    BYTE PTR [eax],0xb1
  408c45:	dec    edi
  408c46:	shr    BYTE PTR [ecx+ecx*1-0x66af502c],0x7
  408c4e:	jmp    0xf900:0x4696808e
  408c55:	and    al,0x1a
  408c57:	push   esp
  408c58:	or     eax,0x1db8e062
  408c5d:	fs ds jbe 0x408c4f
  408c61:	push   edx
  408c62:	pop    edx
  408c63:	sbb    ecx,esi
  408c65:	mov    bh,0x27
  408c67:	iret   
  408c68:	pop    esp
  408c69:	cmp    eax,DWORD PTR [eax+0x1167b462]
  408c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c70:	mov    al,0x39
  408c72:	loop   0x408c75
  408c74:	cmp    al,0xbb
  408c76:	push   cs
  408c77:	es add al,0x89
  408c7a:	adc    ah,dl
  408c7c:	sbb    eax,0x39c4149b
  408c81:	ins    BYTE PTR es:[edi],dx
  408c82:	xor    ecx,eax
  408c84:	and    DWORD PTR [edi+0x78269661],esi
  408c8a:	fdiv   DWORD PTR [ebx-0x42]
  408c8d:	arpl   WORD PTR [esi],bx
  408c8f:	push   0xc9b81399
  408c94:	call   0xf99df30f
  408c99:	(bad)  
  408c9a:	out    dx,al
  408c9b:	jb     0x408cc8
  408c9d:	in     al,dx
  408c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c9f:	cmp    esi,esi
  408ca1:	jle    0x408cd7
  408ca3:	stc    
  408ca4:	mov    esp,0xa09290e5
  408ca9:	inc    edx
  408caa:	inc    edx
  408cab:	lods   eax,DWORD PTR ds:[esi]
  408cac:	scas   eax,DWORD PTR es:[edi]
  408cad:	lea    ebp,cs:[edx-0x635e70a9]
  408cb4:	idiv   edx
  408cb6:	in     al,0xe3
  408cb8:	push   esi
  408cb9:	sar    DWORD PTR [edi],0x7a
  408cbc:	or     al,0xb2
  408cbe:	jns    0x408d26
  408cc0:	jb     0x408cf1
  408cc2:	sbb    al,0x5f
  408cc4:	repnz or DWORD PTR [ebx+eax*4+0x77],eax
  408cc9:	mov    al,0xde
  408ccb:	or     al,bh
  408ccd:	xchg   esp,eax
  408cce:	test   BYTE PTR [eax-0x1],bh
  408cd1:	inc    esp
  408cd2:	ds popa 
  408cd4:	jno    0x408d2b
  408cd6:	xor    edi,eax
  408cd8:	mov    ebx,0x91eeb0e7
  408cdd:	mov    ch,0x5
  408cdf:	adc    ch,ch
  408ce1:	push   ebx
  408ce2:	mov    edi,ecx
  408ce4:	repz cli 
  408ce6:	movzx  eax,WORD PTR [eax+edx*4]
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0xa5a3
  408d20:	pop    es
  408d21:	imul   edi,DWORD PTR [esi+0x39],0xa7e7e2f
  408d28:	jg     0x408da8
  408d2a:	jle    0x408cd7
  408d2c:	gs push es
  408d2e:	clc    
  408d2f:	dec    edx
  408d30:	int    0x9c
  408d32:	dec    edx
  408d33:	pop    ss
  408d34:	(bad)  
  408d35:	lahf   
  408d36:	scas   eax,DWORD PTR es:[edi]
  408d37:	xlat   BYTE PTR ds:[ebx]
  408d38:	dec    ebp
  408d39:	adc    cl,dh
  408d3b:	sar    BYTE PTR [esi-0x7c],cl
  408d3e:	popa   
  408d3f:	jp     0x408d7f
  408d41:	mov    ch,BYTE PTR [ecx+0x2ffc70be]
  408d47:	push   eax
  408d48:	mov    al,0xca
  408d4a:	sbb    eax,0x5676256d
  408d4f:	and    edx,esp
  408d51:	jp     0x408dc3
  408d53:	stos   DWORD PTR es:[edi],eax
  408d54:	and    al,0x85
  408d56:	dec    ebx
  408d57:	inc    edi
  408d58:	mov    al,ds:0x997f4da2
  408d5d:	(bad)  
  408d5e:	pusha  
  408d5f:	mov    ss,edi
  408d61:	pop    esi
  408d62:	cwde   
  408d63:	mov    ebp,esi
  408d65:	stos   BYTE PTR es:[edi],al
  408d66:	ins    BYTE PTR es:[edi],dx
  408d67:	jo     0x408dda
  408d69:	(bad)  
  408d6b:	nop
  408d6c:	add    edi,DWORD PTR [edx-0x30e98f0c]
  408d72:	(bad)  
  408d73:	ja     0x408def
  408d75:	inc    esp
  408d76:	ret    0x2596
  408d79:	xchg   BYTE PTR [ebp+0x58],dl
  408d7c:	and    DWORD PTR [eax],ebp
  408d7e:	(bad)  
  408d7f:	iret   
  408d80:	test   DWORD PTR [eax],ebx
  408d82:	outs   dx,BYTE PTR ds:[esi]
  408d83:	cld    
  408d84:	mov    eax,ds:0xb9e7adc
  408d89:	mov    edi,0x292d2d50
  408d8e:	sahf   
  408d8f:	adc    BYTE PTR [eax],bh
  408d91:	loop   0x408d9b
  408d93:	cdq    
  408d94:	aaa    
  408d95:	ja     0x408dc5
  408d97:	mov    fs,WORD PTR [eax]
  408d99:	loope  0x408d79
  408d9b:	push   es
  408d9c:	adc    al,0x4b
  408d9e:	sub    ch,cl
  408da0:	pop    edi
  408da1:	pop    ebp
  408da2:	jbe    0x408d89
  408da4:	adc    ebx,DWORD PTR [ecx+ebx*1-0x74]
  408da8:	xchg   DWORD PTR [esi-0x63],esi
  408dab:	test   ch,cl
  408dad:	xchg   ebp,eax
  408dae:	pop    ebp
  408daf:	sbb    DWORD PTR [edi+0x255f74ee],esi
  408db5:	jmp    0x408d49
  408db7:	dec    esi
  408db8:	cmp    ah,al
  408dba:	adc    al,0x20
  408dbc:	jo     0x408d51
  408dbe:	std    
  408dbf:	cwde   
  408dc0:	aaa    
  408dc1:	repz or WORD PTR [esi-0x5a4daf5e],bx
  408dc9:	or     al,0x34
  408dcb:	das    
  408dcc:	xchg   ebx,eax
  408dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dce:	push   0x53b61792
  408dd3:	lds    ebp,FWORD PTR [ebp+0x68]
  408dd6:	add    DWORD PTR [ebp-0x20],ebp
  408dd9:	add    ecx,eax
  408ddb:	dec    edi
  408ddc:	icebp  
  408ddd:	mov    ecx,0x5eaa96cc
  408de2:	mov    ch,0x47
  408de4:	jg     0x408d67
  408de6:	outs   dx,DWORD PTR ds:[esi]
  408de7:	mov    ch,0x22
  408de9:	lods   al,BYTE PTR ds:[esi]
  408dea:	es test cl,0xe7
  408dee:	jns    0x408e6a
  408df0:	adc    ah,cl
  408df2:	inc    edi
  408df3:	and    ch,BYTE PTR [ebp+ecx*4-0x6528c8f5]
  408dfa:	cmp    ecx,ebp
  408dfc:	jmp    0x3ce00296
  408e01:	sub    BYTE PTR [edx],dh
  408e03:	and    DWORD PTR [esi-0x566e9294],ebx
  408e09:	std    
  408e0a:	jg     0x408e4b
  408e0c:	aas    
  408e0d:	pop    edi
  408e0e:	mov    DWORD PTR [ecx+0x1b17e898],0x68ca981b
  408e18:	fnstcw WORD PTR [edi-0x3cb5b923]
  408e1e:	xor    eax,ebp
  408e20:	iret   
  408e21:	xlat   BYTE PTR ss:[ebx]
  408e23:	fidivr DWORD PTR [ebx+0x46]
  408e26:	inc    esp
  408e27:	fwait
  408e28:	imul   eax,DWORD PTR [edi-0x41],0xfffffff5
  408e2c:	mov    al,es:0x486a4b5c
  408e32:	out    dx,al
  408e33:	mov    al,0x1a
  408e35:	sbb    ch,BYTE PTR [ecx+0x289c603]
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0xb8d3de2b
  408e4e:	fisttp WORD PTR [eax+0x35]
  408e51:	sub    al,0x7e
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e9c
  408e59:	sub    eax,0x6872d861
  408e5e:	sbb    edx,DWORD PTR [edi+0x2d658d3d]
  408e64:	stc    
  408e65:	int3   
  408e66:	xor    DWORD PTR [eax+ebx*2+0x5f],0xa3ef8ce4
  408e6e:	ja     0x408e92
  408e70:	pop    edi
  408e71:	pop    ebp
  408e72:	int    0x66
  408e74:	xchg   esp,eax
  408e75:	mov    edi,0x7c8d92d4
  408e7a:	(bad)  
  408e7c:	test   DWORD PTR [ebx+ecx*1-0x1e782c20],esp
  408e83:	inc    esi
  408e84:	xchg   ebp,eax
  408e85:	sbb    ecx,DWORD PTR [ebx+0x29]
  408e88:	lahf   
  408e89:	mov    DWORD PTR [ecx-0xcbd6052],edi
  408e8f:	leave  
  408e90:	xchg   esp,eax
  408e91:	dec    esi
  408e92:	pop    edx
  408e93:	adc    dh,0x70
  408e96:	sub    cl,BYTE PTR [ecx-0x5932b5d4]
  408e9c:	imul   ebx,esi,0x81869aa
  408ea2:	mov    ah,0xcb
  408ea4:	pusha  
  408ea5:	aam    0x43
  408ea7:	push   cs
  408ea8:	stos   DWORD PTR es:[edi],eax
  408ea9:	push   cs
  408eaa:	jno    0x408efa
  408eac:	sahf   
  408ead:	(bad)  
  408eae:	jmp    0x408eeb
  408eb0:	push   edi
  408eb1:	out    0xce,al
  408eb3:	push   ebx
  408eb4:	or     al,0x95
  408eb6:	mov    al,ds:0xbea49b10
  408ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ebc:	sahf   
  408ebd:	jle    0x408e74
  408ebf:	(bad)  
  408ec0:	mov    bl,0x9f
  408ec2:	bound  esi,QWORD PTR [edi-0x1420d921]
  408ec8:	inc    esp
  408ec9:	mov    ds:0xcd7b5101,al
  408ece:	add    edx,DWORD PTR [edi]
  408ed0:	enter  0xd215,0x4b
  408ed4:	mov    eax,0x41ef0158
  408ed9:	mov    esi,0xbf6e59a1
  408ede:	sub    DWORD PTR [eax-0x3d],0x2b
  408ee2:	xor    BYTE PTR [eax+eiz*1+0x5498a0dc],0xa5
  408eea:	in     al,0x91
  408eec:	in     al,0x56
  408eee:	pop    ebx
  408eef:	cmp    edi,edx
  408ef1:	dec    esi
  408ef2:	int3   
  408ef3:	mov    edi,DWORD PTR [ecx+0x7]
  408ef6:	sbb    BYTE PTR [ecx-0x36],0x6f
  408efa:	push   ds
  408efb:	adc    ch,dl
  408efd:	pop    ebp
  408efe:	cmc    
  408eff:	popf   
  408f00:	inc    edx
  408f01:	xchg   ebp,eax
  408f02:	clc    
  408f03:	test   DWORD PTR [edx],esp
  408f05:	add    BYTE PTR [esi-0x6516e8da],dh
  408f0b:	mov    DWORD PTR ds:0x48f5112b,0x49925479
  408f15:	ficomp DWORD PTR [eax+0x3a]
  408f18:	lock gs jmp 0x9a4f:0x684a9943
  408f21:	and    al,dh
  408f23:	xchg   ebp,eax
  408f24:	scas   al,BYTE PTR es:[edi]
  408f25:	fst    DWORD PTR ds:0x5738b021
  408f2b:	and    DWORD PTR [edi-0x3d140fe9],esp
  408f31:	or     BYTE PTR [ecx-0x40],bl
  408f34:	add    BYTE PTR gs:[edi],al
  408f37:	jmp    0xd9ae:0xfbd92a50
  408f3e:	ins    DWORD PTR es:[edi],dx
  408f3f:	(bad)  
  408f41:	fstp   DWORD PTR [edx-0x68]
  408f44:	inc    ebp
  408f45:	arpl   ax,sp
  408f47:	fdiv   DWORD PTR [edx+0x3a]
  408f4a:	enter  0xebd1,0x68
  408f4e:	adc    bh,BYTE PTR ds:0x75f37e9b
  408f54:	int3   
  408f55:	xchg   edi,eax
  408f56:	xor    bl,0x40
  408f59:	add    BYTE PTR [esi-0x5a2c91e5],al
  408f5f:	jmp    0x8a86249f
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xb5acb935
  408fab:	jg     0x408f31
  408fad:	shr    DWORD PTR ds:0x7f0a7e7e,0x7e
  408fb4:	jle    0x408fa9
  408fb6:	cld    
  408fb7:	xchg   ebp,eax
  408fb8:	ret    0x926c
  408fbb:	add    DWORD PTR [esi],edi
  408fbd:	std    
  408fbe:	adc    eax,0x6f53dd3f
  408fc3:	aas    
  408fc4:	inc    esi
  408fc5:	fmul   st(6),st
  408fc7:	mov    ds:0x236979e7,al
  408fcc:	dec    eax
  408fcd:	repz dec esp
  408fcf:	push   eax
  408fd0:	(bad)  
  408fd1:	adc    al,0x2d
  408fd3:	dec    ebp
  408fd4:	adc    al,0x1c
  408fd6:	in     eax,0xd0
  408fd8:	in     eax,dx
  408fd9:	push   eax
  408fda:	sub    eax,0xee92d932
  408fdf:	ja     0x40903c
  408fe1:	pop    ds
  408fe2:	nop
  408fe3:	inc    ebx
  408fe4:	outs   dx,DWORD PTR ds:[esi]
  408fe5:	pusha  
  408fe6:	in     eax,0xf
  408fe8:	xchg   ebx,eax
  408fe9:	sbb    DWORD PTR [ebx],0xffffffea
  408fec:	pop    esp
  408fed:	add    DWORD PTR [edx-0x3a],ecx
  408ff0:	ins    BYTE PTR es:[edi],dx
  408ff1:	mov    ebx,0xed47acfc
  408ff6:	std    
  408ff7:	push   ss
  408ff8:	retf   
  408ff9:	xor    al,0xa2
  408ffb:	inc    ebp
  408ffc:	sbb    eax,DWORD PTR [ecx]
  408ffe:	ret    
  408fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409000:	xchg   dx,ax
  409002:	cmp    DWORD PTR ds:0xef781b00,esi
  409008:	push   ebx
  409009:	aad    0x9a
  40900b:	xchg   ebp,eax
  40900c:	push   eax
  40900d:	adc    bl,ah
  40900f:	jl     0x408fa0
  409011:	imul   edi,DWORD PTR [edi-0x35],0xcfa77ef8
  409018:	inc    ebp
  409019:	js     0x408fcf
  40901b:	outs   dx,DWORD PTR ds:[esi]
  40901c:	adc    al,0xaf
  40901e:	xchg   edx,eax
  40901f:	xchg   esp,eax
  409020:	test   BYTE PTR [ecx+0x16],0x24
  409024:	psrlq  mm6,QWORD PTR [esi+0x54]
  409028:	mov    ds:0x79e41be1,al
  40902d:	push   ebp
  40902e:	pop    es
  40902f:	stos   DWORD PTR es:[edi],eax
  409030:	jp     0x409015
  409032:	push   ds
  409033:	cmp    eax,0xf8d79a2d
  409038:	mov    al,0xac
  40903a:	cmp    BYTE PTR [esi],cl
  40903c:	inc    esp
  40903d:	sub    al,0x74
  40903f:	mov    ah,BYTE PTR [esi+0x79]
  409042:	or     al,0xdb
  409044:	xor    ecx,esp
  409046:	mov    dl,0x4f
  409048:	in     eax,0x45
  40904a:	cmp    ecx,DWORD PTR [ebp-0x2483841d]
  409050:	adc    al,0x82
  409052:	cmp    DWORD PTR ss:[ecx+0x54],edx
  409056:	loopne 0x409064
  409058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409059:	data16 jbe 0x4090b3
  40905c:	ds (bad) 
  40905e:	cmp    BYTE PTR [esi+edx*2+0x1be75d59],ah
  409065:	and    eax,0x4e74b985
  40906a:	dec    edi
  40906b:	xor    BYTE PTR [ebp-0x564a26a2],dh
  409071:	dec    esp
  409072:	or     al,0xd8
  409074:	mov    dh,0xbe
  409076:	leave  
  409077:	and    dl,dl
  409079:	mov    edi,0xe7697903
  40907e:	sbb    DWORD PTR [ebx-0x3a],edx
  409081:	aaa    
  409082:	inc    esi
  409083:	shl    BYTE PTR [esi],0xd2
  409086:	inc    edi
  409087:	ret    
  409088:	push   es
  409089:	les    esp,FWORD PTR [esi+edx*2]
  40908c:	sbb    al,0x44
  40908e:	dec    ecx
  40908f:	dec    ebp
  409090:	fstp   TBYTE PTR [esi+ecx*4+0x31]
  409094:	mov    bh,BYTE PTR [eax]
  409096:	(bad)  
  409098:	retf   0xadf7
  40909b:	sti    
  40909c:	jnp    0x4090cf
  40909e:	or     al,0x1
  4090a0:	mov    edx,0xabcac5cf
  4090a5:	mov    dh,0x51
  4090a7:	pop    edx
  4090a8:	pop    ebp
  4090a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090aa:	mov    bh,0xd1
  4090ac:	sahf   
  4090ad:	jp     0x409043
  4090af:	cmp    al,0xd9
  4090b1:	lahf   
  4090b2:	call   0xe146:0x3999fb56
  4090b9:	xor    edx,edi
  4090bb:	mov    BYTE PTR [eax+0xa],ch
  4090be:	add    eax,0xbe0fac63
  4090c3:	adc    dh,BYTE PTR [ebx]
  4090c5:	rol    DWORD PTR [ebx],0xc6
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	leave  
  4090fb:	inc    edx
  4090fc:	pushf  
  4090fd:	frstor gs:[edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090a0
  409107:	hlt    
  409108:	dec    eax
  409109:	xchg   DWORD PTR [ebp+ebp*1+0x6812cc55],ebx
  409110:	mov    ebp,0x7f20b111
  409115:	mov    esp,0xeafc3a72
  40911a:	hlt    
  40911b:	test   BYTE PTR [esi+0x40],bl
  40911e:	xchg   edi,eax
  40911f:	(bad)  
  409120:	jecxz  0x4090d9
  409122:	jl     0x4090cd
  409124:	shl    BYTE PTR [ebx-0x49],cl
  409127:	pop    es
  409128:	dec    ecx
  409129:	dec    ebx
  40912a:	inc    edi
  40912b:	mov    ecx,0xf3857149
  409130:	lahf   
  409131:	mov    ah,0x4b
  409133:	mov    DWORD PTR ds:0x39ec6308,ebx
  409139:	mov    edi,0x60f4c06b
  40913e:	rcr    DWORD PTR [ebx+0x7e],1
  409141:	ret    
  409142:	aas    
  409143:	clc    
  409144:	int    0x8a
  409146:	or     edx,DWORD PTR [esi+0x552fc15d]
  40914c:	aas    
  40914d:	mov    esi,0xda7b4f96
  409152:	xchg   BYTE PTR [edi],ch
  409154:	xor    DWORD PTR [ebp-0x546994ce],edx
  40915a:	jo     0x409184
  40915c:	xchg   edx,eax
  40915d:	push   ds
  40915e:	push   0x5e9f1d1b
  409163:	and    BYTE PTR [esi-0x49d377c1],al
  409169:	jnp    0x409116
  40916b:	jmp    0xb33a:0xde4e8ce8
  409172:	dec    ecx
  409173:	mov    edx,0x9f49760e
  409178:	bound  eax,QWORD PTR [ebp+0x0]
  40917b:	jge    0x40919e
  40917d:	lahf   
  40917e:	jbe    0x409172
  409180:	inc    ebp
  409181:	lea    ebp,[edi+0x42]
  409184:	xor    BYTE PTR [edi-0x2e],bh
  409187:	push   esp
  409188:	sub    dl,BYTE PTR [ebx]
  40918a:	jb     0x4091de
  40918c:	arpl   WORD PTR [edi-0x5a],cx
  40918f:	mov    dl,0xd
  409191:	sahf   
  409192:	mov    ecx,DWORD PTR [ecx]
  409194:	stos   BYTE PTR es:[edi],al
  409195:	aad    0x9f
  409197:	ins    DWORD PTR es:[edi],dx
  409198:	add    DWORD PTR [ebx+0x4653620],esi
  40919e:	jbe    0x409183
  4091a0:	bound  esp,QWORD PTR [ecx]
  4091a2:	iret   
  4091a3:	jecxz  0x40917c
  4091a5:	dec    ah
  4091a7:	imul   edi,DWORD PTR [ebp+0x7d],0x63
  4091ab:	and    bl,BYTE PTR [eax-0x1ee087db]
  4091b1:	outs   dx,BYTE PTR ds:[esi]
  4091b2:	and    DWORD PTR [ebp-0x40a193f7],0xffffff93
  4091b9:	adc    DWORD PTR [ebx+ebp*2-0x6c9c8cf6],ebx
  4091c0:	add    BYTE PTR [eax],bh
  4091c2:	mov    DWORD PTR [esi+0x40],edx
  4091c5:	add    al,0xce
  4091c7:	ins    BYTE PTR es:[edi],dx
  4091c8:	pop    ss
  4091c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ca:	stc    
  4091cb:	cwde   
  4091cc:	cdq    
  4091cd:	fiadd  WORD PTR [eax]
  4091cf:	std    
  4091d0:	sbb    esi,DWORD PTR [ecx]
  4091d2:	cld    
  4091d3:	xor    edx,ebp
  4091d5:	jbe    0x40921a
  4091d7:	jmp    0x409174
  4091d9:	add    eax,0x85c802a3
  4091de:	push   esp
  4091df:	(bad)  
  4091e0:	sbb    bl,BYTE PTR [esi+ebx*2-0x18]
  4091e4:	and    BYTE PTR [esp+esi*8+0x7b],bh
  4091e8:	dec    DWORD PTR [esi]
  4091ea:	jne    0x409188
  4091ec:	inc    eax
  4091ed:	aad    0x56
  4091ef:	arpl   WORD PTR [edi+eax*8-0x161dbee],sp
  4091f6:	mov    ds:0x963281d0,eax
  4091fb:	cs cli 
  4091fd:	fs push esp
  4091ff:	mov    ah,0xe4
  409201:	retf   
  409202:	push   0xffffffbd
  409204:	xchg   edi,eax
  409205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409206:	sbb    BYTE PTR [ebx+0x6da056a6],al
  40920c:	inc    ebp
  40920d:	mov    ebp,0xf30d9c46
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx+0x5187a7c7]
  409240:	xor    ecx,DWORD PTR [ebp+0x41]
  409243:	jmp    0xabf106b
  409248:	jg     0x4092c8
  40924a:	jle    0x4091f6
  40924c:	push   ss
  40924d:	xor    DWORD PTR [ebx+0x645a42f5],edi
  409253:	add    eax,DWORD PTR [esi-0x4a]
  409256:	cwde   
  409257:	retf   
  409258:	rcl    DWORD PTR [eax-0xbcbf8c9],1
  40925e:	test   eax,0xbf3640af
  409263:	call   0x453a:0xf103b1f9
  40926a:	xchg   ebx,eax
  40926b:	lock jb 0x409285
  40926e:	dec    esi
  40926f:	cmp    DWORD PTR [ebx+0x69],edi
  409272:	in     al,dx
  409273:	mov    edx,0xd54f72da
  409278:	jne    0x40927d
  40927a:	inc    ebx
  40927b:	das    
  40927c:	jp     0x40921b
  40927e:	or     ebx,DWORD PTR [esi+0x46]
  409281:	cmp    bl,0x77
  409284:	in     eax,dx
  409285:	ret    
  409286:	lahf   
  409287:	mov    dh,0x0
  409289:	xchg   esp,eax
  40928a:	and    ebx,ebx
  40928c:	inc    esi
  40928d:	sbb    esi,ecx
  40928f:	sbb    DWORD PTR [edi-0x6c],esp
  409292:	or     eax,0x901c1174
  409297:	pop    edi
  409298:	sbb    esp,edi
  40929a:	pop    es
  40929b:	sub    edi,DWORD PTR [edx-0x1a]
  40929e:	cs cmc 
  4092a0:	push   esi
  4092a1:	xor    dh,ah
  4092a3:	adc    ah,BYTE PTR [ebx+0x5b7b2e78]
  4092a9:	sbb    eax,0x9296b86
  4092ae:	add    al,0xaa
  4092b0:	sub    eax,0xc4100f3a
  4092b5:	(bad)  
  4092b6:	cli    
  4092b7:	jo     0x40931e
  4092b9:	jmp    0x40928c
  4092bb:	xor    bh,ah
  4092bd:	mov    ebx,0x7d9d14d3
  4092c2:	or     ebx,DWORD PTR [eax+0x3721b943]
  4092c8:	or     eax,0xbe1f5ae
  4092cd:	imul   ebx,DWORD PTR [ebx-0x3e83f1af],0xa1e19038
  4092d7:	loope  0x409286
  4092d9:	inc    esp
  4092da:	jl     0x4092ee
  4092dc:	dec    esp
  4092dd:	and    DWORD PTR ss:[ebp-0x7f26b817],ecx
  4092e4:	inc    ecx
  4092e5:	fwait
  4092e6:	dec    ecx
  4092e7:	icebp  
  4092e8:	push   es
  4092e9:	cmp    edx,DWORD PTR [ebp+eiz*8-0xea1e17e]
  4092f0:	pop    ebp
  4092f1:	cs inc eax
  4092f3:	stos   DWORD PTR es:[edi],eax
  4092f4:	xor    bl,al
  4092f6:	pop    esp
  4092f7:	inc    eax
  4092f8:	jns    0x40928a
  4092fa:	jns    0x40929f
  4092fc:	inc    ecx
  4092fd:	in     eax,dx
  4092fe:	add    cl,dl
  409300:	bt     DWORD PTR [eax+0x11],esp
  409304:	or     dh,BYTE PTR [eax]
  409306:	sbb    BYTE PTR [ebx-0x24],al
  409309:	xor    dh,BYTE PTR [ecx+0x2d]
  40930c:	pushf  
  40930d:	and    al,0xd6
  40930f:	cmp    DWORD PTR [edx+0x76fb2403],esi
  409315:	or     BYTE PTR [edx-0x18],0x12
  409319:	les    ebx,FWORD PTR [esp+ebp*4-0x1a91e826]
  409320:	xlat   BYTE PTR ds:[ebx]
  409321:	hlt    
  409322:	bound  ebp,QWORD PTR [ecx-0x481408f1]
  409328:	sahf   
  409329:	(bad)  
  40932a:	mov    bh,0x16
  40932c:	inc    esi
  40932d:	retf   
  40932e:	les    ebx,FWORD PTR [eax-0x4e]
  409331:	sbb    esp,DWORD PTR [esi+0x20]
  409334:	dec    esi
  409335:	stos   DWORD PTR es:[edi],eax
  409336:	mov    bh,0xf8
  409338:	in     al,0x1c
  40933a:	int3   
  40933b:	in     al,dx
  40933c:	std    
  40933d:	and    eax,DWORD PTR ds:0xa6b9a4c0
  409343:	(bad)  
  409345:	or     ebp,DWORD PTR [edx]
  409347:	mov    dl,0x52
  409349:	(bad)  
  40934a:	int    0x36
  40934c:	ja     0x4092e5
  40934e:	jp     0x409397
  409350:	shr    BYTE PTR [ebx+ebp*1],0xea
  409354:	in     eax,0x32
  409356:	adc    al,0x8b
  409358:	dec    ebp
  409359:	adc    BYTE PTR [ebx],al
  40935b:	(bad)  
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0xec4e8d99
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	fdiv   QWORD PTR [ebx-0x17e60eca]
  409494:	and    al,0x40
  409496:	ret    
  409497:	sub    DWORD PTR [eax],ecx
  409499:	lods   eax,DWORD PTR ds:[esi]
  40949a:	pop    ecx
  40949b:	jns    0x409439
  40949d:	(bad)  
  40949e:	pushf  
  40949f:	adc    eax,0xa7f8f183
  4094a4:	aad    0x54
  4094a6:	gs jns 0x409472
  4094a9:	mov    bh,0x6a
  4094ab:	(bad)
  4094ae:	loopne 0x4094b0
  4094b0:	retf   0xbf68
  4094b3:	retf   
  4094b4:	in     al,dx
  4094b5:	loope  0x4094ef
  4094b7:	mov    dl,0x5f
  4094b9:	and    al,0x2c
  4094bb:	adc    eax,0x25b6f633
  4094c0:	mov    eax,0x6850eec9
  4094c5:	mov    cl,0x1a
  4094c7:	(bad)  
  4094c8:	ds cli 
  4094ca:	pop    eax
  4094cb:	adc    eax,0xc9fdae98
  4094d0:	xchg   ebx,eax
  4094d1:	xlat   BYTE PTR ds:[ebx]
  4094d2:	les    edi,FWORD PTR [edx+0x37]
  4094d5:	lahf   
  4094d6:	dec    edx
  4094d7:	and    ah,bh
  4094d9:	pop    esi
  4094da:	jae    0x409481
  4094dc:	neg    dl
  4094de:	popa   
  4094df:	push   es
  4094e0:	repz push edi
  4094e2:	jge    0x409559
  4094e4:	sub    cl,BYTE PTR [edx-0x7d]
  4094e7:	adc    eax,0xe7b90b5c
  4094ec:	jmp    0x4094c5
  4094ee:	mov    dh,0xbd
  4094f0:	retf   0x1007
  4094f3:	jno    0x4094c4
  4094f5:	popf   
  4094f6:	pop    esp
  4094f7:	mov    al,0x24
  4094f9:	fld    TBYTE PTR ds:0x8c962261
  4094ff:	or     eax,0x3d597861
  409504:	into   
  409505:	push   esi
  409506:	rol    BYTE PTR [esi],cl
  409508:	inc    eax
  409509:	lds    esi,FWORD PTR [edx-0x34b03e3a]
  40950f:	lock sahf 
  409511:	inc    ecx
  409512:	ja     0x40956d
  409514:	bound  esi,QWORD PTR [eax]
  409516:	mov    ch,0x5e
  409518:	sbb    eax,0xd2f33323
  40951d:	scas   al,BYTE PTR es:[edi]
  40951e:	cmp    al,ch
  409520:	push   edi
  409521:	popf   
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    cl,BYTE PTR [edi+0x94212bf]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	push   ecx
  40954b:	cwde   
  40954c:	outs   dx,DWORD PTR ds:[esi]
  40954d:	inc    ebx
  40954e:	mov    esi,0xcb874ba7
  409553:	push   edx
  409554:	imul   esp,DWORD PTR [ebp-0x22dab56a],0xf5e156ae
  40955e:	jg     0x409540
  409560:	test   DWORD PTR [ebx+0x77],esi
  409563:	cs push eax
  409565:	out    dx,al
  409566:	cmp    ebx,ecx
  409568:	push   ecx
  409569:	xor    dl,BYTE PTR [ebx+0x5f]
  40956c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40956d:	jno    0x409515
  40956f:	add    esi,ebp
  409571:	popf   
  409572:	clc    
  409573:	aaa    
  409574:	ins    BYTE PTR es:[edi],dx
  409575:	add    esi,0x27bdda
  40957b:	and    esi,DWORD PTR [ebp-0x12]
  40957e:	mov    esi,0xab9b927f
  409583:	xor    al,0xc3
  409585:	out    dx,eax
  409586:	addr16 stc 
  409588:	inc    esi
  409589:	mov    ch,0x68
  40958b:	push   esi
  40958c:	test   DWORD PTR [edx+0x11164474],0x7d285544
  409596:	jns    0x409534
  409598:	cs out 0x76,eax
  40959b:	fdivr  st,st(6)
  40959d:	stos   DWORD PTR es:[edi],eax
  40959e:	mov    edi,0xead2ebb3
  4095a3:	fs mov ah,0x3
  4095a6:	jne    0x4095be
  4095a8:	xor    bh,BYTE PTR gs:[esi-0x4ec8fc9e]
  4095af:	mov    ah,0xe2
  4095b1:	inc    edx
  4095b2:	adc    bl,BYTE PTR [eax+0x7ed33e0c]
  4095b8:	retf   0x3f8f
  4095bb:	xor    DWORD PTR [eax+0x324e7b7a],ecx
  4095c1:	jo     0x4095f7
  4095c3:	add    bl,bh
  4095c5:	xchg   ebx,edi
  4095c7:	pushf  
  4095c8:	out    0xf5,al
  4095ca:	push   ebx
  4095cb:	jg     0x409635
  4095cd:	xchg   BYTE PTR [esi+0x416c907d],ah
  4095d3:	cld    
  4095d4:	mul    ch
  4095d6:	mov    eax,?
  4095d8:	(bad)  
  4095d9:	xchg   ebx,eax
  4095da:	montmul (bad)
  4095db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095dc:	add    ah,BYTE PTR [ebx+esi*1-0x3f]
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ebp,DWORD PTR [ebx]
  40961c:	inc    esp
  40961d:	pop    edi
  40961e:	retf   
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x4095c9
  409628:	enter  0x82c8,0xac
  40962c:	inc    esp
  40962d:	adc    BYTE PTR [ecx],al
  40962f:	fisttp DWORD PTR [ecx]
  409631:	adc    dh,BYTE PTR [esi-0x75d2b73]
  409637:	fs sti 
  409639:	mov    al,ds:0x823cd541
  40963e:	ins    DWORD PTR es:[edi],dx
  40963f:	adc    esp,ebx
  409641:	fst    DWORD PTR [ebx+0x54b6ebd2]
  409647:	jo     0x409678
  409649:	fild   DWORD PTR [esi]
  40964b:	js     0x409620
  40964d:	add    DWORD PTR [edx],0xbc075739
  409653:	(bad)  
  409655:	or     eax,0xdfecd4d0
  40965a:	shl    BYTE PTR [eax],0x31
  40965d:	imul   BYTE PTR [ebx-0x7e]
  409660:	stc    
  409661:	mov    DWORD PTR [edi],esp
  409663:	imul   BYTE PTR [edi-0x9]
  409666:	dec    ecx
  409667:	push   ds
  409668:	ins    BYTE PTR es:[edi],dx
  409669:	not    esp
  40966b:	mov    WORD PTR [ebp-0x3c],gs
  40966e:	test   BYTE PTR [ebx-0x5e],ah
  409671:	shr    DWORD PTR [edx+0x2],1
  409674:	sub    al,0xe2
  409676:	push   edx
  409677:	sar    BYTE PTR [ebx+0x5ce5c52c],1
  40967d:	adc    ebp,DWORD PTR [ecx]
  40967f:	add    dh,BYTE PTR ds:0xa930f36e
  409685:	xor    eax,0x364227cc
  40968a:	add    al,0x42
  40968c:	xchg   ecx,eax
  40968d:	int    0xe5
  40968f:	jmp    0x3c6f:0x89b5a6d9
  409696:	pushf  
  409697:	push   es
  409698:	daa    
  409699:	gs or  al,0x13
  40969c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969d:	or     dh,cl
  40969f:	sub    ah,bh
  4096a1:	push   eax
  4096a2:	mov    ebp,0xf8b105dd
  4096a7:	pop    es
  4096a8:	xor    eax,esi
  4096aa:	mov    al,0x36
  4096ac:	scas   al,BYTE PTR es:[edi]
  4096ad:	mov    ds:0xab5a48bf,eax
  4096b2:	xor    eax,0x88cd8a43
  4096b7:	out    0x18,al
  4096b9:	adc    BYTE PTR [esi-0x450efaa5],0x6a
  4096c0:	leave  
  4096c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c2:	adc    al,0x72
  4096c4:	call   0x9e92:0x7afc131b
  4096cb:	loopne 0x4096ed
  4096cd:	mov    eax,esi
  4096cf:	pusha  
  4096d0:	adc    eax,0x9c3334d4
  4096d5:	lds    esp,FWORD PTR [ebp+eiz*8-0x6f87672b]
  4096dc:	push   ss
  4096dd:	inc    ebp
  4096de:	mov    ch,0xfe
  4096e0:	cmp    edi,0xffffff97
  4096e3:	mov    ch,0x94
  4096e5:	mov    al,0xeb
  4096e7:	mov    BYTE PTR [edx-0x3a4c1463],al
  4096ed:	xchg   esp,eax
  4096ee:	or     al,0x44
  4096f0:	in     eax,dx
  4096f1:	push   cs
  4096f2:	push   0x24
  4096f4:	out    0x9a,eax
  4096f6:	pop    edi
  4096f7:	lds    eax,FWORD PTR [ebx-0x3a6f969c]
  4096fd:	sub    eax,0xfb8f35b8
  409702:	mov    ch,0xc2
  409704:	xchg   edx,eax
  409705:	inc    esi
  409706:	adc    eax,0xe0a93082
  40970b:	pop    edx
  40970c:	jns    0x4096ff
  40970e:	jne    0x4096f3
  409710:	icebp  
  409711:	mov    ah,0x5a
  409713:	mov    ds:0x75dc23e,eax
  409718:	inc    eax
  409719:	mov    esp,0xfa726f54
  40971e:	and    edi,DWORD PTR ds:0xb1c99b5
  409724:	(bad)  
  409725:	mov    ebx,0x890fbdde
  40972a:	shl    BYTE PTR [ebp-0x1e],1
  40972d:	pop    esp
  40972e:	in     al,0x3c
  409730:	add    BYTE PTR [ebp+ebp*2-0x306f730],al
  409737:	ja     0x4096d5
  409739:	sbb    eax,0x21298e8
  40973e:	outs   dx,BYTE PTR ds:[esi]
  40973f:	hlt    
  409740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409741:	and    al,0x5e
  409743:	inc    edi
  409744:	lods   eax,DWORD PTR ds:[esi]
  409745:	jbe    0x409774
  409747:	push   0x5
  409749:	nop
  40974a:	xchg   edi,eax
  40974b:	in     al,0xed
  40974d:	out    0xf1,al
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	adc    BYTE PTR [esi+0x26b584c9],bh
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x40977c
  4097cc:	push   ss
  4097cd:	lods   al,BYTE PTR ds:[esi]
  4097ce:	daa    
  4097cf:	adc    DWORD PTR [ecx-0x74],ebp
  4097d2:	loopne 0x40979d
  4097d4:	add    BYTE PTR [ecx-0x2f],dl
  4097d7:	aad    0x0
  4097d9:	pusha  
  4097da:	push   ebp
  4097db:	cli    
  4097dc:	mov    bh,0xa6
  4097de:	jo     0x4097ba
  4097e0:	mov    ds:0xc2f76d60,eax
  4097e5:	aaa    
  4097e6:	into   
  4097e7:	in     al,dx
  4097e8:	mov    dh,BYTE PTR [edi]
  4097ea:	call   0xfed:0xbc2381a6
  4097f1:	mov    ecx,0xa5b966c4
  4097f6:	mov    BYTE PTR [eax+ebp*4+0x6f],al
  4097fa:	pop    ecx
  4097fb:	out    0x8c,al
  4097fd:	fwait
  4097fe:	inc    ebx
  4097ff:	out    0x49,eax
  409801:	inc    ecx
  409802:	push   cs
  409803:	sti    
  409804:	clc    
  409805:	ret    0xa6fe
  409808:	or     al,0xa7
  40980a:	jmp    0x4097bd
  40980c:	jl     0x4097da
  40980e:	out    dx,al
  40980f:	ss dec edi
  409811:	mov    eax,ds:0xe6f66cc5
  409816:	cmc    
  409817:	popf   
  409818:	(bad)  
  409819:	dec    ebp
  40981a:	sub    edx,edx
  40981c:	mul    DWORD PTR [ebp+0x61f888b]
  409822:	popa   
  409823:	mov    edi,0x260c94bb
  409828:	icebp  
  409829:	ss dec edx
  40982b:	jle    0x4097d3
  40982d:	jae    0x40980a
  40982f:	out    0x83,al
  409831:	cmp    al,0x11
  409833:	add    al,BYTE PTR [eax-0x5387bd5c]
  409839:	(bad)  
  40983a:	sub    BYTE PTR [ebx+0x50],al
  40983d:	fist   WORD PTR [esp+edi*4+0x4332e7b2]
  409844:	xchg   ebx,eax
  409845:	outs   dx,BYTE PTR ds:[esi]
  409846:	mov    dh,0xee
  409848:	in     eax,0x91
  40984a:	enter  0x9fc4,0x69
  40984e:	or     dh,BYTE PTR [eax+ecx*1]
  409851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409852:	fmul   st(7),st
  409854:	mov    ds:0xfe2ce95d,eax
  409859:	xchg   BYTE PTR [eax+0x3c],dl
  40985c:	leave  
  40985d:	jecxz  0x409821
  40985f:	push   0xc0033e64
  409864:	shr    ah,0x6e
  409867:	daa    
  409868:	mov    edx,0x39cac9aa
  40986d:	push   es
  40986e:	loopne 0x409866
  409870:	call   0xa1d11f4c
  409875:	push   0xf2a4d74c
  40987a:	mov    ecx,0xc94a6653
  40987f:	lods   eax,DWORD PTR gs:[esi]
  409881:	pop    DWORD PTR [ebx+esi*1-0x7e288d93]
  409888:	retf   0xe163
  40988b:	sbb    al,0xfb
  40988d:	jne    0x409866
  40988f:	push   esi
  409890:	cs mov al,0xef
  409893:	add    eax,0x3d8f0870
  409898:	or     DWORD PTR [esi-0x7223f401],esi
  40989e:	sti    
  40989f:	and    ebp,edi
  4098a1:	and    ecx,esp
  4098a3:	jle    0x40983b
  4098a5:	out    0x1c,eax
  4098a7:	clc    
  4098a8:	or     DWORD PTR [eax],ebp
  4098aa:	mov    ds:0x376e98c7,eax
  4098af:	cmp    BYTE PTR [esi],0x77
  4098b2:	stos   DWORD PTR es:[edi],eax
  4098b3:	imul   esp,DWORD PTR [eax+eax*8-0x11bc117b],0x8d472156
  4098be:	repnz and dh,BYTE PTR [ecx-0x33a00ab6]
  4098c5:	jg     0x40986a
  4098c7:	loop   0x409893
  4098c9:	cmc    
  4098ca:	test   DWORD PTR [ebx],ecx
  4098cc:	retf   
  4098cd:	shl    BYTE PTR [ecx],1
  4098cf:	test   eax,0x4edee5a4
  4098d4:	pushf  
  4098d5:	pop    edx
  4098d6:	fwait
  4098d7:	inc    edi
  4098d8:	idiv   DWORD PTR [edi-0x4357c7d2]
  4098de:	pop    ebp
  4098df:	push   eax
  4098e0:	add    BYTE PTR [ebx+ecx*1+0x49],ch
  4098e4:	(bad)  
  4098e5:	sbb    BYTE PTR [eax+0x4a],bl
  4098e8:	jb     0x409928
  4098ea:	(bad)  
  4098ec:	arpl   si,dx
  4098ee:	push   edx
  4098ef:	or     cl,BYTE PTR [eax+0x458b8297]
  4098f5:	adc    al,0x81
  4098f7:	and    eax,0x412364
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xe601de4c
  409977:	imul   ebp,DWORD PTR [ebp+0x27],0x7f167e7e
  40997e:	jle    0x4099fe
  409980:	cmp    dh,BYTE PTR [ebx+0x57a0dffe]
  409986:	int3   
  409987:	rcr    DWORD PTR [eax-0x32],cl
  40998a:	loopne 0x4099da
  40998c:	into   
  40998d:	in     al,0x95
  40998f:	xlat   BYTE PTR ds:[ebx]
  409990:	jmp    0x8c10a320
  409995:	adc    ah,ch
  409997:	cmp    al,0x14
  409999:	pop    edx
  40999a:	pop    eax
  40999b:	pop    esp
  40999c:	xor    DWORD PTR [edx+esi*1-0x62],edx
  4099a0:	push   esp
  4099a1:	loope  0x4099b2
  4099a3:	es stc 
  4099a5:	(bad)  
  4099a6:	loopne 0x40996a
  4099a8:	arpl   si,ax
  4099aa:	es and ebp,ebx
  4099ad:	(bad)  
  4099af:	rcl    cl,0x93
  4099b2:	jmp    0x83068d05
  4099b7:	sub    al,0x1c
  4099b9:	sti    
  4099ba:	and    edx,DWORD PTR [edx-0x71]
  4099bd:	js     0x409945
  4099bf:	pop    esi
  4099c0:	out    0x57,al
  4099c2:	aaa    
  4099c3:	mov    BYTE PTR [eax+0x7d],al
  4099c6:	inc    edx
  4099c7:	inc    eax
  4099c8:	dec    ecx
  4099c9:	ret    0x593e
  4099cc:	jg     0x409984
  4099ce:	adc    al,0x95
  4099d0:	test   bl,0xcf
  4099d3:	test   eax,0x947c3d35
  4099d8:	iret   
  4099d9:	pop    ebp
  4099da:	ficomp WORD PTR [ecx]
  4099dc:	int3   
  4099dd:	mov    bh,0x8e
  4099df:	ins    BYTE PTR es:[edi],dx
  4099e0:	adc    al,0x1
  4099e2:	jbe    0x409a02
  4099e4:	jl     0x40999b
  4099e6:	dec    esp
  4099e7:	xchg   edi,eax
  4099e8:	sub    cl,BYTE PTR [esi-0x63]
  4099eb:	stos   DWORD PTR es:[edi],eax
  4099ec:	aaa    
  4099ed:	jne    0x409a45
  4099ef:	sub    eax,esi
  4099f1:	mov    ds:0x259b84cb,eax
  4099f6:	cmp    cl,BYTE PTR [edi+edx*2]
  4099f9:	inc    DWORD PTR [ebx]
  4099fb:	cmp    BYTE PTR [esi+0xb],0x5f
  4099ff:	push   esp
  409a00:	mov    bl,0x45
  409a02:	add    eax,0x45bc6120
  409a07:	cmp    BYTE PTR [ecx+0x39],bl
  409a0a:	out    0x27,eax
  409a0c:	loopne 0x4099ef
  409a0e:	mov    cl,0xff
  409a10:	nop
  409a11:	js     0x409a7d
  409a13:	(bad)  
  409a14:	lods   al,BYTE PTR ds:[esi]
  409a15:	and    eax,0xc6387cf
  409a1a:	int3   
  409a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1c:	sbb    al,0x1f
  409a1e:	mov    ds:0x847c5e2a,eax
  409a23:	cmp    BYTE PTR [ecx+0x23],bl
  409a26:	fstp   st(2)
  409a28:	pop    esi
  409a29:	fst    DWORD PTR [ecx-0x2c]
  409a2c:	add    eax,0xf1777fb6
  409a31:	cmp    edi,ebx
  409a33:	idiv   cl
  409a35:	push   0x2a
  409a37:	pop    edi
  409a38:	sbb    al,dh
  409a3a:	pop    esp
  409a3b:	xchg   ecx,eax
  409a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a3d:	jae    0x409a77
  409a3f:	or     eax,ebx
  409a41:	mov    al,ds:0x849804b3
  409a46:	(bad)  
  409a48:	lods   al,BYTE PTR ds:[esi]
  409a49:	bound  esi,QWORD PTR [ebx-0x1c]
  409a4c:	pop    esi
  409a4d:	mov    ebp,DWORD PTR [ecx+0x1ab154b1]
  409a53:	lods   al,BYTE PTR ds:[esi]
  409a54:	call   0x4d087b56
  409a59:	out    dx,eax
  409a5a:	shl    BYTE PTR [ebx+ecx*4-0x5e],cl
  409a5e:	imul   ebx,DWORD PTR [eax+0x24],0xffffffa8
  409a62:	xchg   esp,eax
  409a63:	lods   al,BYTE PTR ds:[esi]
  409a64:	jno    0x409aa6
  409a66:	xor    al,0xc7
  409a68:	sbb    eax,0x3052e57a
  409a6d:	pop    edx
  409a6e:	sbb    cl,BYTE PTR [ebx+ebx*1-0x7252e502]
  409a75:	scas   al,BYTE PTR es:[edi]
  409a76:	js     0x409ab0
  409a78:	dec    esi
  409a79:	mov    ebp,0x273082d
  409a7e:	lods   eax,DWORD PTR ds:[esi]
  409a7f:	mov    bl,ah
  409a81:	dec    esi
  409a82:	stos   BYTE PTR es:[edi],al
  409a83:	dec    eax
  409a84:	ret    0x43e4
  409a87:	dec    ecx
  409a88:	out    0xc,eax
  409a8a:	jmp    DWORD PTR [ebx+eax*2]
  409a8d:	cdq    
  409a8e:	add    dl,BYTE PTR [ecx-0x59f18da]
  409a94:	imul   esi,ecx,0x95154c45
  409a9a:	jle    0x409afc
  409a9c:	and    eax,0xf503c5f3
  409aa1:	js     0x409aaf
  409aa3:	test   DWORD PTR [ecx-0x76d24196],esi
  409aa9:	inc    edx
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	outs   dx,DWORD PTR ds:[esi]
  40a7b5:	arpl   WORD PTR [eax],ax
  40a7b7:	test   eax,0x7e7e2505
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a7ba
  40a7c1:	sar    BYTE PTR [eax-0x43c2d5a1],cl
  40a7c7:	mov    eax,0xcda62cc1
  40a7cc:	ret    
  40a7cd:	mov    ch,0xea
  40a7cf:	into   
  40a7d0:	and    DWORD PTR [ebp+0x28],0x23
  40a7d4:	sahf   
  40a7d5:	es mov ebx,0xd98261d7
  40a7db:	cdq    
  40a7dc:	inc    ecx
  40a7dd:	sub    DWORD PTR [edi+0x18149c43],edx
  40a7e3:	sub    ebp,DWORD PTR [ebx+ecx*1]
  40a7e6:	mov    edx,0x9aad5c6f
  40a7eb:	mov    gs,WORD PTR [eax-0x4]
  40a7ee:	sar    DWORD PTR [edi+0xea501b3],cl
  40a7f4:	sub    BYTE PTR [eax-0x75],dh
  40a7f7:	fnstsw WORD PTR [eax-0x69fb1919]
  40a7fd:	sbb    al,0x4b
  40a7ff:	lods   eax,DWORD PTR ds:[esi]
  40a800:	jae    0x40a7e5
  40a802:	pand   mm5,QWORD PTR [ecx]
  40a805:	stos   DWORD PTR es:[edi],eax
  40a806:	adc    BYTE PTR [edi+0x30e1bb8c],ch
  40a80c:	fimul  WORD PTR [ecx]
  40a80e:	sahf   
  40a80f:	mov    dh,0x38
  40a811:	pop    esp
  40a812:	mov    esi,0x6f11de36
  40a817:	inc    esp
  40a818:	mov    ebx,DWORD PTR [ecx+0x79]
  40a81b:	sub    edi,edx
  40a81d:	fisub  DWORD PTR [esi]
  40a81f:	pop    esp
  40a820:	fild   QWORD PTR [ecx]
  40a822:	(bad)  
  40a824:	repnz pop ss
  40a826:	add    al,BYTE PTR [edi+0x76]
  40a829:	ins    BYTE PTR es:[edi],dx
  40a82a:	leave  
  40a82b:	mov    edi,0xd0f92305
  40a830:	xchg   ebx,eax
  40a831:	mov    bh,0x8
  40a833:	loopne 0x40a7ce
  40a835:	out    0x2c,al
  40a837:	pop    edi
  40a838:	fnstsw WORD PTR [eax-0x663275d5]
  40a83e:	ja     0x40a81c
  40a840:	fild   QWORD PTR [edx+0x3e]
  40a843:	test   BYTE PTR [ebx+0x2b914fc1],cl
  40a849:	test   BYTE PTR [ebx+0x24],bl
  40a84c:	mov    edi,0x288f6650
  40a851:	std    
  40a852:	inc    edx
  40a853:	je     0x40a825
  40a855:	add    eax,0xcd389e3a
  40a85a:	push   ebx
  40a85b:	xchg   edi,eax
  40a85c:	inc    edx
  40a85d:	jp     0x40a7e9
  40a85f:	mov    ebx,0xc2269e7a
  40a864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a865:	aam    0xc7
  40a867:	mov    esi,0x31ce4095
  40a86c:	stc    
  40a86d:	rcr    DWORD PTR [esi+0x720c2127],cl
  40a873:	xlat   BYTE PTR ds:[ebx]
  40a874:	dec    BYTE PTR [ebx+edx*2+0x32e28424]
  40a87b:	loop   0x40a809
  40a87d:	aad    0x49
  40a87f:	fst    QWORD PTR [esp+ebp*8-0x3b254c63]
  40a886:	retf   0x8653
  40a889:	mov    ebp,0xc551364c
  40a88e:	xor    ch,BYTE PTR [edi-0x2a]
  40a891:	dec    esi
  40a892:	fnstenv [eax]
  40a894:	call   0x9dd45f86
  40a899:	jno    0x40a846
  40a89b:	fidiv  DWORD PTR [ebp-0x54d412f2]
  40a8a1:	popa   
  40a8a2:	ins    DWORD PTR es:[edi],dx
  40a8a3:	sahf   
  40a8a4:	push   ebx
  40a8a5:	out    0x7f,al
  40a8a7:	mov    BYTE PTR [esi],dh
  40a8a9:	fnsave [eax-0x38a9073e]
  40a8af:	daa    
  40a8b0:	and    ah,BYTE PTR [eax]
  40a8b2:	dec    ebp
  40a8b3:	cld    
  40a8b4:	das    
  40a8b5:	push   esi
  40a8b6:	sub    al,0x30
  40a8b8:	and    BYTE PTR [esi],dh
  40a8ba:	jbe    0x40a84f
  40a8bc:	ret    0xd663
  40a8bf:	sub    BYTE PTR [esi],ch
  40a8c1:	sub    ah,al
  40a8c3:	call   0x144f8bf4
  40a8c8:	cmp    esi,DWORD PTR [ebp-0x2be94a81]
  40a8ce:	jecxz  0x40a88d
  40a8d0:	gs pop ebx
  40a8d2:	push   ss
  40a8d3:	xlat   BYTE PTR ds:[ebx]
  40a8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d5:	cmp    ebx,DWORD PTR [esi+0x145cb34a]
  40a8db:	shl    BYTE PTR [esp-0x1ca2cee3],cl
  40a8e2:	lea    ecx,[edx-0x42a6dd0f]
  40a8e8:	arpl   WORD PTR [ecx],bx
  40a8ea:	lods   al,BYTE PTR ds:[esi]
  40a8eb:	and    dl,BYTE PTR [edx]
  40a8ed:	das    
  40a8ee:	jl     0x40a8a8
  40a8f0:	scas   eax,DWORD PTR es:[edi]
  40a8f1:	call   0xc978:0xc99215d2
  40a8f8:	mov    esp,0x4ed
  40a8fd:	jge    0x40a8ff
  40a8ff:	mov    gs,WORD PTR [eax+0x5e]
  40a902:	mov    ds:0xaa725a78,al
  40a907:	inc    eax
  40a908:	pop    ds
  40a909:	loope  0x40a95f
  40a90b:	jg     0x40a8e8
  40a90d:	ss cld 
  40a90f:	stos   BYTE PTR es:[edi],al
  40a910:	in     al,0x68
  40a912:	test   eax,0x7a971561
  40a917:	pop    es
  40a918:	arpl   WORD PTR [esi-0x10],cx
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	cmp    cl,dl
  40a9a8:	xchg   dh,cl
  40a9aa:	loopne 0x40a9e6
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9ab
  40a9b3:	inc    edx
  40a9b4:	sub    DWORD PTR ds:0xeba029b6,ecx
  40a9ba:	adc    BYTE PTR [eax],cl
  40a9bc:	lods   eax,DWORD PTR ds:[esi]
  40a9be:	clc    
  40a9bf:	xchg   edx,eax
  40a9c0:	test   bh,ch
  40a9c2:	dec    esi
  40a9c3:	sub    BYTE PTR [edi+0x4bff81ad],0xf4
  40a9ca:	or     cl,BYTE PTR [esi]
  40a9cc:	or     esi,DWORD PTR [ebp-0x27]
  40a9cf:	xlat   BYTE PTR ds:[ebx]
  40a9d0:	push   0x5a
  40a9d2:	or     edx,DWORD PTR [esi]
  40a9d4:	add    dh,ah
  40a9d6:	adc    cl,dl
  40a9d8:	push   0x70
  40a9da:	hlt    
  40a9db:	pop    edi
  40a9dc:	sub    ebx,DWORD PTR [ecx]
  40a9de:	loope  0x40a971
  40a9e0:	mov    ?,WORD PTR [ebp+0x1b]
  40a9e3:	in     al,0x1e
  40a9e5:	shl    DWORD PTR [esi+0x1b9e15d4],cl
  40a9eb:	cmp    esp,DWORD PTR [ecx]
  40a9ed:	fwait
  40a9ee:	sub    edx,DWORD PTR [edx+0x45999e2c]
  40a9f4:	lods   al,BYTE PTR ds:[esi]
  40a9f5:	cdq    
  40a9f6:	mov    ss,esi
  40a9f8:	xlat   BYTE PTR ds:[ebx]
  40a9f9:	pop    esi
  40a9fa:	cmp    DWORD PTR [esi+0x0],edi
  40a9fd:	push   ebp
  40a9fe:	xchg   DWORD PTR [ecx],esi
  40aa00:	and    al,0x50
  40aa02:	pop    ecx
  40aa03:	add    eax,0xd0510c5b
  40aa08:	mov    ebp,0x36cf1f35
  40aa0d:	add    eax,DWORD PTR ds:0xd79661ec
  40aa13:	imul   eax,DWORD PTR [edx],0xa6af02d3
  40aa19:	scas   eax,DWORD PTR es:[edi]
  40aa1a:	mov    DWORD PTR [edx+0x2ca6163d],edi
  40aa20:	push   ebx
  40aa21:	jno    0x40a9a3
  40aa23:	test   eax,0xa18da4e9
  40aa28:	and    eax,0x17f8f70b
  40aa2d:	gs and esp,0xb12036cd
  40aa34:	mov    al,ds:0x2800451a
  40aa39:	jl     0x40aa06
  40aa3b:	aad    0x65
  40aa3d:	dec    edi
  40aa3e:	jge    0x40aa23
  40aa40:	mov    ecx,0xc55f56b5
  40aa45:	mov    edx,0x8a16b9fb
  40aa4a:	out    0x6a,al
  40aa4c:	sahf   
  40aa4d:	retf   0x8d39
  40aa50:	(bad)  
  40aa52:	xchg   esi,eax
  40aa53:	ret    
  40aa54:	pop    ebx
  40aa55:	and    eax,0xc4a25ed5
  40aa5a:	or     al,BYTE PTR [esi+0x5b]
  40aa5d:	jecxz  0x40aa85
  40aa5f:	cmp    al,bl
  40aa61:	pusha  
  40aa62:	lock pop eax
  40aa64:	or     dl,dh
  40aa66:	push   ecx
  40aa67:	jbe    0x40aa08
  40aa69:	sub    DWORD PTR [edi+0x3710cb8c],ecx
  40aa6f:	and    al,0x76
  40aa71:	(bad)  [esi-0x2d]
  40aa74:	(bad)  
  40aa75:	in     al,dx
  40aa76:	int    0xf3
  40aa78:	push   eax
  40aa79:	sub    al,0x39
  40aa7b:	ins    DWORD PTR es:[edi],dx
  40aa7c:	mov    dh,0xa0
  40aa7e:	ret    0xae5d
  40aa81:	jecxz  0x40aa69
  40aa83:	lods   al,BYTE PTR ds:[esi]
  40aa84:	(bad)  
  40aa85:	pop    esi
  40aa86:	into   
  40aa87:	xchg   edi,eax
  40aa88:	push   ecx
  40aa89:	mov    al,ds:0x44a2efef
  40aa8e:	mov    ds:0x3e9d1344,al
  40aa93:	mov    al,ds:0x64499ce8
  40aa98:	push   0xffffffa2
  40aa9a:	push   ss
  40aa9b:	xor    DWORD PTR [ebx+0x5b],ebx
  40aa9e:	push   ebp
  40aa9f:	bound  edi,QWORD PTR [eax+0x3dfcd18e]
  40aaa5:	sbb    DWORD PTR ds:0x19d477b1,edi
  40aaab:	dec    esi
  40aaac:	sub    BYTE PTR [edi+ebp*4-0x63246d51],0xca
  40aab4:	retf   0x29c9
  40aab7:	inc    ebp
  40aab8:	push   eax
  40aab9:	xchg   edi,eax
  40aaba:	je     0x40aab6
  40aabc:	imul   eax,edx,0xa0d2a773
  40aac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac3:	add    al,0x9f
  40aac5:	inc    edx
  40aac6:	loopne 0x40aa7f
  40aac8:	scas   al,BYTE PTR es:[edi]
  40aac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaca:	and    esp,edi
  40aacc:	das    
  40aacd:	shr    ah,cl
  40aacf:	mov    edx,DWORD PTR [ebx-0x61f768f7]
  40aad5:	mov    ds:0x4a730453,eax
  40aada:	dec    ebp
  40aadb:	ror    DWORD PTR [edi+0x5d4c4450],cl
  40aae1:	adc    BYTE PTR [esp+ebx*1+0x4c],al
  40aae5:	sahf   
  40aae6:	jmp    0x40ab25
  40aae8:	dec    esp
  40aae9:	cld    
  40aaea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaeb:	push   cs
  40aaec:	rcr    DWORD PTR [esi-0x7fb964ff],0xe
  40aaf3:	xor    eax,0xdbff1e47
  40aaf8:	dec    edx
  40aaf9:	inc    eax
  40aafa:	inc    esp
  40aafb:	adc    DWORD PTR [ecx],ecx
  40aafd:	(bad)  
  40aafe:	pop    ebx
  40aaff:	cs push ecx
  40ab01:	jb     0x40aabb
  40ab03:	(bad)  
  40ab05:	inc    ecx
  40ab06:	inc    ecx
  40ab07:	fimul  WORD PTR [ebp-0x77]
  40ab0a:	(bad)  
  40ab0b:	cmp    al,0x1
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x8502ac8b
  40ab26:	sbb    eax,0x7e3b4f77
  40ab2b:	jle    0x40aaf2
  40ab2d:	jg     0x40abad
  40ab2f:	jle    0x40ab4b
  40ab31:	cdq    
  40ab32:	loop   0x40ab05
  40ab34:	dec    edi
  40ab35:	lds    ebx,FWORD PTR [edx+0x23]
  40ab38:	cmc    
  40ab39:	inc    edx
  40ab3a:	or     al,0x77
  40ab3c:	in     eax,0x14
  40ab3e:	jae    0x40abb0
  40ab40:	xor    al,0xb0
  40ab42:	jb     0x40aacb
  40ab44:	fisubr DWORD PTR [edx]
  40ab46:	dec    ecx
  40ab47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab49:	ins    DWORD PTR es:[edi],dx
  40ab4a:	outs   dx,BYTE PTR ds:[esi]
  40ab4b:	into   
  40ab4c:	jae    0x40abbe
  40ab4e:	mov    gs,WORD PTR [ebx+ebx*2-0x48]
  40ab52:	sbb    BYTE PTR [edx+0x2b017ca6],0x29
  40ab59:	add    DWORD PTR [ecx-0x78161539],0xbd0993d8
  40ab63:	mov    DWORD PTR ds:0x146bbab7,ebp
  40ab69:	cli    
  40ab6a:	jecxz  0x40ab0c
  40ab6c:	jl     0x40aba0
  40ab6e:	imul   esp,DWORD PTR [eax-0x6b],0x831c8fa4
  40ab75:	mov    cl,0xca
  40ab77:	xor    al,0x31
  40ab79:	pop    es
  40ab7a:	out    dx,eax
  40ab7b:	(bad)  
  40ab7c:	mov    dl,0x26
  40ab7e:	or     eax,0xc7f7ab0b
  40ab83:	cmp    BYTE PTR [ecx],cl
  40ab85:	inc    ebx
  40ab86:	and    DWORD PTR [ebp-0x3],ecx
  40ab89:	nop
  40ab8a:	xchg   ebp,eax
  40ab8b:	mov    dl,0x8b
  40ab8d:	mov    ebp,0xd8bc02b2
  40ab92:	xchg   edi,eax
  40ab93:	bound  ecx,QWORD PTR [edx-0x68]
  40ab96:	sahf   
  40ab97:	xchg   BYTE PTR ds:0xba39f285,dh
  40ab9d:	and    esp,ebp
  40ab9f:	ret    
  40aba0:	(bad)  
  40aba1:	sbb    al,0x42
  40aba3:	ds jle 0x40ab75
  40aba6:	adc    eax,0x6d4ed49f
  40abab:	mov    al,0xc6
  40abad:	aas    
  40abae:	addr16 mov ecx,0x134566a5
  40abb4:	mov    esi,0xda8f194
  40abb9:	dec    edx
  40abba:	jno    0x40ac05
  40abbc:	dec    ebx
  40abbd:	data16 and al,0x4e
  40abc0:	pop    es
  40abc1:	loop   0x40ac20
  40abc3:	push   0xffffff97
  40abc5:	in     eax,dx
  40abc6:	addr16 mov eax,ds:0x5f2f
  40abca:	out    dx,eax
  40abcb:	sti    
  40abcc:	mov    ebp,0x8c8c1d89
  40abd1:	xor    DWORD PTR [ebx+0x49ee6b62],eax
  40abd7:	pushf  
  40abd8:	adc    DWORD PTR [eax+0x4d],edi
  40abdb:	add    eax,0x4430814
  40abe0:	xchg   ebx,eax
  40abe1:	scas   eax,DWORD PTR es:[edi]
  40abe2:	aam    0x9f
  40abe4:	add    edi,edx
  40abe6:	pushf  
  40abe7:	mov    ebp,0xabebf4e1
  40abec:	pop    es
  40abed:	fdivr  QWORD PTR [esi-0x51c9647b]
  40abf3:	xchg   esp,ebp
  40abf5:	retf   
  40abf6:	xchg   ebp,eax
  40abf7:	data16 fidiv DWORD PTR [esi+esi*4-0x3]
  40abfc:	pushf  
  40abfd:	adc    DWORD PTR [ebx-0x2ab94e4d],0xffffff88
  40ac04:	xchg   ebp,eax
  40ac05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac06:	cs test eax,0x6eeb8139
  40ac0c:	mov    esp,0xfad82a3c
  40ac11:	push   edi
  40ac12:	sbb    dh,BYTE PTR [ecx+eax*8]
  40ac15:	loope  0x40ac47
  40ac17:	inc    esp
  40ac18:	jns    0x40aba8
  40ac1a:	into   
  40ac1b:	idiv   BYTE PTR [esp+ebx*2]
  40ac1e:	rcr    DWORD PTR [ebp+ebp*1-0x43],cl
  40ac22:	retf   
  40ac23:	sbb    DWORD PTR [eax],esp
  40ac25:	fist   DWORD PTR [eax]
  40ac27:	repz mov bl,0xd3
  40ac2a:	dec    esp
  40ac2b:	push   edi
  40ac2c:	pop    edx
  40ac2d:	retf   
  40ac2e:	das    
  40ac2f:	push   ds
  40ac30:	mov    ebx,0x12e21d50
  40ac35:	pop    ebx
  40ac36:	mov    esp,0xd0672339
  40ac3b:	xchg   ebp,eax
  40ac3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3d:	push   ecx
  40ac3e:	jge    0x40ac8b
  40ac40:	pop    esp
  40ac41:	aad    0x68
  40ac43:	fidiv  WORD PTR cs:[edx-0x6de3f622]
  40ac4a:	adc    eax,0xbdea5a7
  40ac4f:	cmp    al,0xba
  40ac51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac52:	call   0xeebc455f
  40ac57:	inc    ecx
  40ac58:	pop    eax
  40ac59:	mov    esp,0x3e87e667
  40ac5e:	loopne 0x40ac12
  40ac60:	in     eax,0x28
  40ac62:	adc    DWORD PTR [ecx+0x35],0x63
  40ac66:	push   0x8597e9aa
  40ac6b:	fcom   QWORD PTR [edi+0x70]
  40ac6e:	xchg   BYTE PTR [eax+0x53e34386],cl
  40ac74:	test   BYTE PTR [ebx-0x5c6dd5af],bl
  40ac7a:	mov    esi,0x3bd07233
  40ac7f:	fwait
  40ac80:	add    al,0xa
  40ac82:	jecxz  0x40ac92
  40ac84:	add    BYTE PTR [esi],dl
  40ac86:	test   al,0xaf
  40ac88:	jg     0x40ac56
  40ac8a:	mov    WORD PTR [ebx],es
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    eax,DWORD PTR [edi]
  40acbc:	leave  
  40acbd:	leave  
  40acbe:	mov    bh,0x2a
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40acb0
  40acc8:	xchg   esi,eax
  40acc9:	inc    edi
  40acca:	in     al,dx
  40accb:	xor    al,0x5d
  40accd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acce:	cmp    al,0x47
  40acd0:	cwde   
  40acd1:	imul   esp,ebx,0xffffffee
  40acd4:	jbe    0x40ac57
  40acd6:	test   esp,esi
  40acd8:	clc    
  40acd9:	push   0x5a
  40acdb:	cmp    al,0x6
  40acdd:	mov    esp,0x548ca8f8
  40ace2:	or     BYTE PTR ss:[esi+0x2f],al
  40ace6:	add    BYTE PTR ds:0x43f74309,al
  40acec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aced:	xchg   DWORD PTR [eax+0x9],edx
  40acf0:	xlat   BYTE PTR ds:[ebx]
  40acf1:	int    0x4
  40acf3:	mov    bh,0x21
  40acf5:	cmp    al,0x3a
  40acf7:	xor    eax,0xb8a6eeb0
  40acfc:	jns    0x40ad16
  40acfe:	pop    eax
  40acff:	inc    ebp
  40ad00:	es sti 
  40ad02:	jp     0x40ad00
  40ad04:	dec    ebx
  40ad05:	iret   
  40ad06:	lock jno 0x40ace1
  40ad09:	iret   
  40ad0a:	mov    ebx,0x2e604817
  40ad0f:	mov    eax,ds:0x1e1043a
  40ad14:	mov    al,0xae
  40ad16:	mov    dh,0xe1
  40ad18:	push   ds
  40ad19:	and    BYTE PTR [edx],cl
  40ad1b:	pushf  
  40ad1c:	shl    cl,0xd5
  40ad1f:	das    
  40ad20:	mov    edx,0x6cc073c2
  40ad25:	stc    
  40ad26:	pop    esp
  40ad27:	cs aad 0x91
  40ad2a:	mov    ah,0x50
  40ad2c:	nop
  40ad2d:	pop    ebx
  40ad2e:	js     0x40ad5f
  40ad30:	fld    QWORD PTR [ecx-0x369ec043]
  40ad36:	add    al,0x11
  40ad38:	jb     0x40ad60
  40ad3a:	fiadd  WORD PTR [esi+edx*4-0x37]
  40ad3e:	or     al,0x56
  40ad40:	mov    dl,BYTE PTR [ebx+0x1b]
  40ad43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad44:	imul   BYTE PTR [ebx+0x6b]
  40ad47:	mov    ecx,DWORD PTR [eax+0x12cd49f8]
  40ad4d:	and    ebx,ecx
  40ad4f:	cmp    eax,0x55a808eb
  40ad54:	punpckhwd mm1,QWORD PTR ds:0xb6526db9
  40ad5b:	repz mov esi,0x22999f6b
  40ad61:	mov    ch,0xba
  40ad63:	inc    edi
  40ad64:	mov    bh,0x8a
  40ad66:	pop    esi
  40ad67:	jne    0x40add0
  40ad69:	imul   edi,DWORD PTR [edx],0x267a8614
  40ad6f:	call   0x123728c1
  40ad74:	sbb    al,0xf
  40ad76:	mov    bl,BYTE PTR [edx+0x174dcebc]
  40ad7c:	int3   
  40ad7d:	adc    esi,DWORD PTR [ecx-0x3e0b2d99]
  40ad83:	fnstcw WORD PTR [ebp+esi*2+0x68]
  40ad87:	retf   
  40ad88:	jge    0x40ad48
  40ad8a:	sti    
  40ad8b:	jp     0x40ad43
  40ad8d:	je     0x40ad1a
  40ad8f:	loope  0x40ad94
  40ad91:	inc    esi
  40ad92:	scas   eax,DWORD PTR es:[edi]
  40ad93:	nop
  40ad94:	and    eax,DWORD PTR [ebx-0x6e]
  40ad97:	pop    esp
  40ad98:	adc    al,0xbc
  40ad9a:	cli    
  40ad9b:	inc    ebx
  40ad9c:	shr    ecx,cl
  40ad9e:	les    ebx,FWORD PTR [ebx+edi*1+0x34bb4cd0]
  40ada5:	js     0x40ad6f
  40ada7:	pop    esp
  40ada8:	pop    es
  40ada9:	sti    
  40adaa:	and    DWORD PTR ds:[ecx],ebx
  40adad:	cli    
  40adae:	iret   
  40adaf:	imul   BYTE PTR [eax-0x48a4a8f6]
  40adb5:	adc    ch,BYTE PTR [ebx]
  40adb7:	in     al,0x58
  40adb9:	jp     0x40adf4
  40adbb:	adc    dh,ch
  40adbd:	fnstcw WORD PTR [ebx-0x6ec944e0]
  40adc3:	inc    esi
  40adc4:	mov    eax,ds:0xd86638a9
  40adc9:	aaa    
  40adca:	add    al,BYTE PTR es:[edi+0x3fdc32d7]
  40add1:	mov    BYTE PTR [ebx+0x4aba78d6],dh
  40add7:	xchg   esi,eax
  40add8:	and    ecx,DWORD PTR [ecx+eax*2-0x38]
  40addc:	cwde   
  40addd:	cmp    eax,0xfb040db1
  40ade2:	fld    TBYTE PTR [edi]
  40ade4:	pop    edi
  40ade5:	dec    ebp
  40ade6:	inc    edi
  40ade7:	fidivr WORD PTR [esi+0x6cffa816]
  40aded:	sbb    al,bl
  40adef:	dec    ecx
  40adf0:	outs   dx,DWORD PTR ds:[esi]
  40adf1:	pop    ecx
  40adf2:	sub    DWORD PTR [edi],edi
  40adf4:	xchg   dh,ah
  40adf6:	jo     0x40ad90
  40adf8:	(bad)
  40adfb:	inc    ebp
  40adfc:	inc    esp
  40adfd:	iret   
  40adfe:	sub    al,0xbd
  40ae00:	xchg   ecx,eax
  40ae01:	mov    ch,0x8b
  40ae03:	mov    ebp,0x4d1cd798
  40ae08:	loope  0x40ae24
  40ae0a:	lock loop 0x40adb1
  40ae0d:	adc    DWORD PTR [eax],ecx
  40ae0f:	xchg   edi,eax
  40ae10:	or     al,0x47
  40ae12:	xchg   ecx,eax
  40ae13:	sub    ch,cl
  40ae15:	pop    esp
  40ae16:	add    BYTE PTR [ebx+eiz*2],dl
  40ae19:	aas    
  40ae1a:	ins    DWORD PTR es:[edi],dx
  40ae1b:	cmp    edx,DWORD PTR [edi-0x46]
  40ae1e:	add    edx,DWORD PTR [edx]
  40ae20:	jbe    0x40ae8a
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0xba268d5d
  40ae94:	pusha  
  40ae95:	dec    ebp
  40ae96:	(bad)  
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	mov    ah,0x49
  40aea1:	cdq    
  40aea2:	jle    0x40ae4e
  40aea4:	pop    edi
  40aea5:	cmp    esi,ebx
  40aea7:	mov    esi,0x3b99990
  40aeac:	or     dh,dl
  40aeae:	and    al,0x67
  40aeb0:	fdiv   st(0),st
  40aeb2:	xchg   ebx,eax
  40aeb3:	fmul   st(6),st
  40aeb5:	mov    DWORD PTR [eax-0x28],esi
  40aeb8:	retf   
  40aeb9:	stos   DWORD PTR es:[edi],eax
  40aeba:	jg     0x40aecb
  40aebc:	mov    esi,0x8c7085d3
  40aec1:	mov    cl,0xb4
  40aec3:	add    DWORD PTR [eax-0x1f],0xaad2659d
  40aeca:	and    edx,edi
  40aecc:	mov    ch,0x86
  40aece:	jge    0x40ae5c
  40aed0:	in     eax,0x29
  40aed2:	adc    BYTE PTR [edx],ch
  40aed4:	shr    DWORD PTR [ebx-0x7d2f941e],0xed
  40aedb:	(bad)  
  40aedc:	mov    ds:0x8fa14f41,eax
  40aee1:	repnz sbb al,0x32
  40aee4:	loope  0x40aec4
  40aee6:	sub    dh,BYTE PTR [ecx]
  40aee8:	fmul   DWORD PTR [eax-0x70]
  40aeeb:	mov    al,0x19
  40aeed:	sti    
  40aeee:	dec    ecx
  40aeef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef0:	aam    0x79
  40aef2:	sbb    al,0xce
  40aef4:	enter  0xe710,0x51
  40aef8:	aad    0x3c
  40aefa:	xor    esi,DWORD PTR [ebp+0x0]
  40aefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aefe:	push   0xffffff96
  40af00:	cmc    
  40af01:	sbb    dh,BYTE PTR [eax]
  40af03:	mov    DWORD PTR [esi-0x17],edi
  40af06:	aaa    
  40af07:	cmp    DWORD PTR [ebx],0x78077a0c
  40af0d:	aas    
  40af0e:	adc    cl,BYTE PTR [eax+0x2a]
  40af11:	mov    dh,0x43
  40af13:	adc    al,0x6e
  40af15:	out    dx,eax
  40af16:	loope  0x40af70
  40af18:	mov    WORD PTR [ecx-0x15c4e3f0],es
  40af1e:	(bad)  
  40af1f:	jae    0x40af2a
  40af21:	push   ds
  40af22:	sbb    BYTE PTR [edx+0x1493f790],cl
  40af28:	add    al,0xe2
  40af2a:	xor    DWORD PTR [eax+0xf9d0afd],edx
  40af30:	test   BYTE PTR [eax+0x2ad9297a],cl
  40af36:	sub    ecx,DWORD PTR [esp+eax*4+0x12]
  40af3a:	sbb    eax,0xf18ef985
  40af3f:	das    
  40af40:	and    ecx,ebx
  40af42:	push   ss
  40af43:	add    DWORD PTR [ebx],esp
  40af45:	mov    ds,WORD PTR ds:0x4a140c48
  40af4b:	xor    dl,BYTE PTR [ebx]
  40af4d:	leave  
  40af4e:	push   0x3a
  40af50:	jecxz  0x40af29
  40af52:	mov    dl,0x88
  40af54:	mov    WORD PTR [esi+0x54e16ca3],es
  40af5a:	mov    bh,0x7c
  40af5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af5d:	add    DWORD PTR ds:0x2c3d0f43,eax
  40af63:	(bad)  
  40af64:	push   ebp
  40af65:	xchg   edi,eax
  40af66:	sub    eax,0x32729fbb
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x63]
  40b0b6:	popa   
  40b0b7:	pop    edx
  40b0b8:	stos   BYTE PTR es:[edi],al
  40b0b9:	leave  
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	mov    eax,0x6ee00f1c
  40b0c6:	leave  
  40b0c7:	arpl   bp,cx
  40b0c9:	sub    BYTE PTR [ebx-0x68],0x45
  40b0cd:	mov    ch,BYTE PTR [ebx-0x59736206]
  40b0d3:	xchg   esp,eax
  40b0d4:	add    dh,BYTE PTR [ecx]
  40b0d6:	cmp    eax,0xf0da8ea6
  40b0db:	std    
  40b0dc:	dec    edx
  40b0dd:	fwait
  40b0de:	smsw   WORD PTR [ebx]
  40b0e1:	in     eax,0xb1
  40b0e3:	cli    
  40b0e4:	inc    esp
  40b0e5:	(bad)  
  40b0e6:	(bad)
  40b0e9:	push   ebx
  40b0ea:	mov    ebp,0x345fe929
  40b0ef:	push   cs
  40b0f0:	dec    ebx
  40b0f1:	fisub  DWORD PTR [edx]
  40b0f3:	dec    ebx
  40b0f4:	jge    0x40b0e5
  40b0f6:	ja     0x40b159
  40b0f8:	popa   
  40b0f9:	ins    BYTE PTR es:[edi],dx
  40b0fa:	mov    ah,0x19
  40b0fc:	jns    0x40b0b3
  40b0fe:	pop    esi
  40b0ff:	mov    edi,0x1b3ad989
  40b104:	dec    ebx
  40b105:	push   cs
  40b106:	in     eax,0x5a
  40b108:	test   al,0xea
  40b10a:	push   0x12333054
  40b10f:	sbb    eax,0xf8aff04c
  40b114:	adc    BYTE PTR [esi],bh
  40b116:	mov    ecx,0x703904a0
  40b11b:	xor    dl,BYTE PTR fs:0xe114db9e
  40b122:	mov    ds:0x39a8fdb4,al
  40b127:	xchg   BYTE PTR [edi+0x65],dh
  40b12a:	mov    ebx,0xa38fab24
  40b12f:	bound  eax,QWORD PTR [ecx-0x7f613e37]
  40b135:	xor    BYTE PTR [ecx+edx*1-0x5ad43a45],bh
  40b13c:	ja     0x40b0e2
  40b13e:	aas    
  40b13f:	adc    ah,BYTE PTR [esi-0x65eb6646]
  40b145:	pop    ecx
  40b146:	int    0x87
  40b148:	and    BYTE PTR [edi+0xb],ah
  40b14b:	push   esp
  40b14c:	bswap  esp
  40b14e:	lock imul edi,DWORD PTR [ebx-0x6b],0xcd8ee645
  40b156:	push   ecx
  40b157:	xor    bh,BYTE PTR [ebx+0x45]
  40b15a:	fbstp  TBYTE PTR [edx+0x7184b170]
  40b160:	xchg   edi,eax
  40b161:	xor    dl,BYTE PTR [edi]
  40b163:	and    ebp,esp
  40b165:	push   cs
  40b166:	scas   eax,DWORD PTR es:[edi]
  40b167:	cmp    BYTE PTR [edx+0x589210a5],dl
  40b16d:	data16 jge 0x40b13d
  40b170:	dec    ecx
  40b171:	aam    0x85
  40b173:	xchg   ecx,eax
  40b174:	mov    esp,0x554f4bfe
  40b179:	fisttp QWORD PTR [eax+edx*8]
  40b17c:	dec    ebp
  40b17d:	jp     0x40b1c0
  40b17f:	dec    ebp
  40b180:	popa   
  40b181:	adc    BYTE PTR [eax],0xa3
  40b184:	xor    DWORD PTR [edi+0x59],esi
  40b187:	mov    esi,0xf8758951
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x98
  40b1ab:	and    eax,0x3c01d383
  40b1b0:	jle    0x40b230
  40b1b2:	mov    dh,0x7e
  40b1b4:	jle    0x40b234
  40b1b6:	sub    esp,eax
  40b1b8:	xor    BYTE PTR [eax],bl
  40b1ba:	test   eax,0x239102c3
  40b1bf:	ror    BYTE PTR [edx+0x2af3db15],0xd3
  40b1c6:	data16 das 
  40b1c8:	xor    DWORD PTR [eax+0x6b36c768],eax
  40b1ce:	bound  ecx,QWORD PTR [ecx]
  40b1d0:	popa   
  40b1d1:	inc    edi
  40b1d2:	cmc    
  40b1d3:	ja     0x40b233
  40b1d5:	push   eax
  40b1d6:	push   cs
  40b1d7:	jmp    0xac:0xb609b5fe
  40b1de:	ror    bh,1
  40b1e0:	push   es
  40b1e1:	jns    0x40b1a0
  40b1e3:	mov    cl,0xac
  40b1e5:	add    ecx,DWORD PTR [ebx-0x3d39a5dd]
  40b1eb:	and    BYTE PTR [ebp-0x33],0x39
  40b1ef:	repz sbb BYTE PTR [eax-0x188455ee],dl
  40b1f6:	push   esp
  40b1f7:	adc    DWORD PTR [ebp+0x161c5292],ebx
  40b1fd:	push   0xaaa3c7d
  40b202:	mov    bh,0x56
  40b204:	fwait
  40b205:	(bad)  
  40b206:	je     0x40b203
  40b208:	in     al,dx
  40b209:	jmp    0xc02ab105
  40b20e:	sbb    edx,DWORD PTR [ebx-0x10428351]
  40b214:	div    BYTE PTR [ebx+0x10]
  40b217:	sub    al,0xfe
  40b219:	jo     0x40b249
  40b21b:	jnp    0x40b204
  40b21d:	inc    ecx
  40b21e:	push   cs
  40b21f:	dec    ebp
  40b220:	xchg   ebx,eax
  40b221:	mov    eax,ds:0xb9a2dd67
  40b226:	enter  0x54d2,0xdd
  40b22a:	jle    0x40b268
  40b22c:	in     al,dx
  40b22d:	mov    es,WORD PTR [eax]
  40b22f:	outs   dx,DWORD PTR ds:[esi]
  40b230:	jb     0x40b1b3
  40b232:	dec    ebx
  40b233:	out    0xb3,eax
  40b235:	mov    edx,0xf9d60329
  40b23a:	(bad)
  40b23d:	mov    ah,0x42
  40b23f:	jp     0x40b297
  40b241:	ins    DWORD PTR es:[edi],dx
  40b242:	mov    ds:0x2e9ac7cc,eax
  40b247:	adc    eax,0x186f07eb
  40b24c:	mov    dl,0xb9
  40b24e:	cmp    cl,cl
  40b250:	maskmovq mm4,(bad)
  40b251:	mul    DWORD PTR ds:0xbd80d528
  40b257:	push   0xf
  40b259:	jns    0x40b259
  40b25b:	push   ebp
  40b25c:	jmp    0xa415:0xa5e8f23
  40b263:	jae    0x40b291
  40b265:	dec    eax
  40b266:	fsub   DWORD PTR [eax]
  40b268:	jno    0x40b285
  40b26a:	dec    ebx
  40b26b:	mov    WORD PTR [ecx+0x399ecfd],?
  40b271:	aam    0xfa
  40b273:	inc    ebx
  40b274:	xor    DWORD PTR [edi+0x187aa142],0xffffffa5
  40b27b:	adc    dl,BYTE PTR [edi+0x68]
  40b27e:	mov    ecx,DWORD PTR [ebp-0x18]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x219a5cd],edx
  40b2e2:	dec    ebx
  40b2e3:	(bad)  
  40b2e4:	jno    0x40b33f
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2b1
  40b2ee:	or     ebx,DWORD PTR [ecx]
  40b2f0:	enter  0xc004,0x7a
  40b2f4:	push   esp
  40b2f5:	aas    
  40b2f6:	push   es
  40b2f7:	cmc    
  40b2f8:	mov    ds:0x446d04d3,al
  40b2fd:	pop    es
  40b2fe:	pop    edi
  40b2ff:	ror    DWORD PTR [ebx],0xcc
  40b302:	and    eax,0x9ee8c907
  40b307:	mov    esi,DWORD PTR [ebx-0x53]
  40b30a:	push   ss
  40b30b:	lods   al,BYTE PTR gs:[esi]
  40b30d:	xchg   esi,eax
  40b30e:	xchg   ebp,eax
  40b30f:	and    dh,BYTE PTR [ebp+esi*1-0x1]
  40b313:	(bad)  
  40b314:	add    eax,0x21cddbaf
  40b319:	in     eax,dx
  40b31a:	add    al,0xac
  40b31c:	clc    
  40b31d:	int3   
  40b31e:	xchg   ebx,eax
  40b31f:	mov    edx,0xc76fa734
  40b324:	test   BYTE PTR [ebx-0x3b],dh
  40b327:	mov    ecx,0x1207eb22
  40b32c:	jl     0x40b366
  40b32e:	and    eax,ebp
  40b330:	ins    BYTE PTR es:[edi],dx
  40b331:	jecxz  0x40b337
  40b333:	or     BYTE PTR [edx-0xab63d99],0xae
  40b33a:	mov    DWORD PTR [esi],edi
  40b33c:	push   esp
  40b33d:	daa    
  40b33e:	and    ecx,DWORD PTR [esi-0x7d22faec]
  40b344:	xor    al,0x72
  40b346:	jl     0x40b316
  40b348:	mov    BYTE PTR [edx],dh
  40b34a:	inc    esp
  40b34b:	inc    ebx
  40b34c:	imul   edx,DWORD PTR [ebx+0x3d],0xffffffd8
  40b350:	idiv   DWORD PTR [edx+0xc]
  40b353:	jmp    0x40b397
  40b355:	mov    eax,0xa9954a75
  40b35a:	stos   DWORD PTR es:[edi],eax
  40b35b:	and    BYTE PTR ds:0x672ba249,dl
  40b361:	xchg   ebp,eax
  40b362:	pop    esp
  40b363:	xor    cl,BYTE PTR [esi+0x15]
  40b366:	in     al,dx
  40b367:	add    al,0xcc
  40b369:	or     edx,DWORD PTR [eax-0x5a376695]
  40b36f:	mov    al,ds:0xaeabd8b9
  40b374:	retf   
  40b375:	jmp    0xc8248186
  40b37a:	fidivr DWORD PTR [eax+eax*8]
  40b37d:	arpl   WORD PTR [edx+0x729d7dd0],cx
  40b383:	stos   BYTE PTR es:[edi],al
  40b384:	scas   eax,DWORD PTR es:[edi]
  40b385:	push   esi
  40b386:	or     dh,BYTE PTR [ecx]
  40b388:	mov    esi,0x58af296d
  40b38d:	icebp  
  40b38e:	pop    esp
  40b38f:	mov    al,0x45
  40b391:	adc    ah,dh
  40b393:	lods   al,BYTE PTR ds:[esi]
  40b394:	xchg   ecx,eax
  40b395:	xchg   esp,eax
  40b396:	mov    ah,0x89
  40b398:	(bad)  [edi]
  40b39a:	push   0xfffffffb
  40b39c:	adc    BYTE PTR [edi+0x61],dl
  40b39f:	jmp    0x40b38a
  40b3a1:	addr16 retf 0x6c6b
  40b3a5:	fsub   st(1),st
  40b3a7:	or     eax,0xccdf5bac
  40b3ac:	(bad)  
  40b3ad:	pop    esi
  40b3ae:	adc    DWORD PTR [ecx*8-0x270937e2],ecx
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	mov    BYTE PTR [ebx+0x3d9130b2],bl
  40b53f:	jle    0x40b5bf
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	dec    eax
  40b546:	scas   al,BYTE PTR es:[edi]
  40b547:	gs pop ebp
  40b549:	and    bl,BYTE PTR [ecx-0x5fdbc6b0]
  40b54f:	pop    edx
  40b550:	or     bl,al
  40b552:	push   0xa2a8c7fa
  40b557:	cmp    al,0xde
  40b559:	int    0xd
  40b55b:	in     eax,0xbf
  40b55d:	iret   
  40b55e:	sbb    edx,DWORD PTR [edx]
  40b560:	add    DWORD PTR [esp+edi*2-0x7c],edi
  40b564:	add    bl,al
  40b566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b567:	dec    eax
  40b568:	addr16 dec ecx
  40b56a:	inc    esi
  40b56b:	push   ss
  40b56c:	sbb    DWORD PTR [edx],esp
  40b56e:	loopne 0x40b568
  40b570:	hlt    
  40b571:	mov    edi,0x34260cbf
  40b576:	push   ds
  40b577:	dec    ecx
  40b578:	fs sbb al,0xab
  40b57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b57c:	push   ebp
  40b57d:	xor    eax,0xa0cc7bc4
  40b582:	add    dh,BYTE PTR [edx-0x40]
  40b585:	inc    ecx
  40b586:	xchg   BYTE PTR [edi+edi*1],bh
  40b589:	clc    
  40b58a:	pop    ss
  40b58b:	push   edi
  40b58c:	(bad)  
  40b58d:	cmc    
  40b58e:	cmp    dl,BYTE PTR [edx-0x49]
  40b591:	add    dl,BYTE PTR [eax+edi*1+0x366c39dd]
  40b598:	ss pop esp
  40b59a:	mov    ch,0x8e
  40b59c:	call   0x710a:0x8f113809
  40b5a3:	adc    ah,cl
  40b5a5:	sub    DWORD PTR [ecx],ebx
  40b5a7:	add    DWORD PTR [ebp+0x6e346107],ebx
  40b5ad:	outs   dx,DWORD PTR ds:[esi]
  40b5ae:	add    DWORD PTR [edx-0x36],edi
  40b5b1:	mov    bl,ah
  40b5b3:	inc    edi
  40b5b4:	cmp    esi,DWORD PTR [esi+eax*8]
  40b5b7:	pop    esi
  40b5b8:	xchg   ebx,eax
  40b5b9:	mov    ecx,0x39a21041
  40b5be:	sub    al,BYTE PTR [esi+0x597ba615]
  40b5c4:	outs   dx,BYTE PTR ds:[esi]
  40b5c5:	je     0x40b57d
  40b5c7:	outs   dx,BYTE PTR ds:[esi]
  40b5c8:	ret    
  40b5c9:	sub    BYTE PTR [esi+0x7cd1bb6b],dl
  40b5cf:	adc    DWORD PTR [ebp+0x3736ef40],edi
  40b5d5:	mov    edx,0xa59168b8
  40b5da:	repnz sub eax,0x1e98e30
  40b5e0:	addr16 sahf 
  40b5e2:	sub    eax,0x5d2ec1d1
  40b5e7:	fs cmc 
  40b5e9:	mov    ebp,DWORD PTR [ebp+0x59]
  40b5ec:	ret    0x93df
  40b5ef:	inc    esi
  40b5f0:	mov    bl,0x82
  40b5f2:	jl     0x40b65a
  40b5f4:	mov    ah,0x11
  40b5f6:	cdq    
  40b5f7:	sbb    cl,0xe1
  40b5fa:	jmp    0xd535e53f
  40b5ff:	mov    eax,ds:0x8c6ce168
  40b604:	shr    BYTE PTR ds:0x6f762dd5,0x49
  40b60b:	mov    dh,dh
  40b60d:	je     0x40bb55
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x26,al
  40b632:	fisub  DWORD PTR ds:0x7e32e95b
  40b638:	jle    0x40b5f0
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b627
  40b63e:	dec    esi
  40b63f:	sub    dh,BYTE PTR [esi-0x1d]
  40b642:	pop    ss
  40b643:	retf   0x7895
  40b646:	mov    edi,0x62d7e5d
  40b64b:	lods   al,BYTE PTR ds:[esi]
  40b64c:	mov    esi,0x92035b42
  40b651:	sbb    eax,0x683757b6
  40b656:	imul   esp,DWORD PTR ds:0x8a70f304,0x24
  40b65d:	mov    bh,0x82
  40b65f:	loopne 0x40b6bd
  40b661:	test   DWORD PTR [ebp+0x22],ebx
  40b664:	xchg   esp,eax
  40b665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b666:	adc    DWORD PTR [ecx],edi
  40b668:	enter  0xd74f,0x9d
  40b66c:	shr    BYTE PTR [edi-0x7c955716],0xdf
  40b673:	cmc    
  40b674:	loopne 0x40b66d
  40b676:	sbb    dh,BYTE PTR [ecx+0x26942575]
  40b67c:	xchg   esp,eax
  40b67d:	inc    esi
  40b67e:	xor    BYTE PTR [ebx],0x62
  40b681:	nop
  40b682:	pop    ss
  40b683:	push   0xf3f95514
  40b688:	call   0xbca8a86
  40b68d:	adc    edx,edi
  40b68f:	fs ds scas al,BYTE PTR es:[edi]
  40b692:	loopne 0x40b69e
  40b694:	pop    esi
  40b695:	and    WORD PTR [ebx-0x78cda430],si
  40b69c:	xchg   edx,eax
  40b69d:	test   BYTE PTR [ebx-0x34],ch
  40b6a0:	in     eax,dx
  40b6a1:	cmp    eax,0x53aef2ca
  40b6a6:	mov    ch,0xf4
  40b6a8:	push   ss
  40b6a9:	or     al,0x2f
  40b6ab:	hlt    
  40b6ac:	fwait
  40b6ad:	int    0x36
  40b6af:	sahf   
  40b6b0:	lods   al,BYTE PTR ds:[esi]
  40b6b1:	dec    edi
  40b6b2:	push   edi
  40b6b3:	in     al,0xe9
  40b6b5:	xchg   esi,eax
  40b6b6:	jl     0x40b638
  40b6b8:	(bad)
  40b6bb:	(bad)  
  40b6bc:	pushf  
  40b6bd:	enter  0x93bf,0x58
  40b6c1:	xor    ebx,DWORD PTR [esi]
  40b6c3:	js     0x40b6ce
  40b6c5:	je     0x40b70c
  40b6c7:	mov    ch,0xd
  40b6c9:	xor    DWORD PTR [ebx+esi*2-0x4f175c5f],ebp
  40b6d0:	add    al,0x59
  40b6d2:	cmp    BYTE PTR [esi],dl
  40b6d4:	das    
  40b6d5:	stos   DWORD PTR es:[edi],eax
  40b6d6:	add    cl,BYTE PTR [ebp+0x46099450]
  40b6dc:	loop   0x40b6f3
  40b6de:	das    
  40b6df:	test   al,0xb1
  40b6e1:	(bad)  
  40b6e2:	ret    0x7fb9
  40b6e5:	mov    ds:0xba77c2fe,al
  40b6ea:	mov    bh,bh
  40b6ec:	push   0x27
  40b6ee:	cli    
  40b6ef:	(bad)  
  40b6f0:	mov    ebp,0x3065c4ed
  40b6f5:	(bad)  
  40b6f6:	push   eax
  40b6f7:	inc    eax
  40b6f8:	push   edx
  40b6f9:	daa    
  40b6fa:	add    edx,DWORD PTR [ebx]
  40b6fc:	daa    
  40b6fd:	and    al,0xc4
  40b6ff:	je     0x40b775
  40b701:	imul   ebp,DWORD PTR [ecx-0x50],0x875ff3e
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x7a7c23e6
  40b867:	es in  al,0x21
  40b86a:	xor    edi,DWORD PTR [esi+0x7e]
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	pusha  
  40b872:	xor    eax,0x56e79983
  40b877:	pop    ss
  40b878:	jno    0x40b8b6
  40b87a:	push   edi
  40b87b:	cmp    eax,0xcb76e17b
  40b880:	call   0x42e2:0xfb206422
  40b887:	outs   dx,DWORD PTR ds:[esi]
  40b888:	cmc    
  40b889:	out    dx,al
  40b88a:	mov    edx,0x685bb75b
  40b88f:	in     eax,0xc6
  40b891:	in     al,0x6f
  40b893:	fisttp DWORD PTR [ecx+ecx*8]
  40b896:	xor    al,0x54
  40b898:	xchg   ebp,eax
  40b899:	adc    dh,BYTE PTR [ebx+0x7f]
  40b89c:	sub    eax,0x3294d66d
  40b8a1:	mov    edi,DWORD PTR [ebp+0x2d]
  40b8a4:	call   0xa8b25cf1
  40b8a9:	bswap  ecx
  40b8ab:	push   eax
  40b8ac:	xor    al,0x10
  40b8ae:	add    al,0x73
  40b8b0:	mov    ch,BYTE PTR [ecx+0x2661e742]
  40b8b6:	xchg   ebp,eax
  40b8b7:	das    
  40b8b8:	and    DWORD PTR ds:0x946c4b36,esi
  40b8be:	into   
  40b8bf:	mov    ch,0x90
  40b8c1:	stc    
  40b8c2:	pop    es
  40b8c3:	sbb    eax,0xcf15149c
  40b8c8:	xchg   ecx,eax
  40b8c9:	cdq    
  40b8ca:	stc    
  40b8cb:	xchg   ebp,eax
  40b8cc:	cmp    ecx,DWORD PTR [ecx-0x2db7d8ba]
  40b8d2:	xchg   edi,eax
  40b8d3:	stos   BYTE PTR es:[edi],al
  40b8d4:	push   ds
  40b8d5:	loope  0x40b8b3
  40b8d7:	test   al,0x29
  40b8d9:	or     cl,BYTE PTR [ebx-0xf]
  40b8dc:	imul   edx,DWORD PTR [ebp+0x4b],0x14
  40b8e0:	jbe    0x40b8b6
  40b8e2:	pop    edi
  40b8e3:	leave  
  40b8e4:	js     0x40b8ca
  40b8e6:	xor    bh,ch
  40b8e8:	cdq    
  40b8e9:	popa   
  40b8ea:	(bad)  
  40b8ec:	mov    bl,0x1
  40b8ee:	and    ebx,DWORD PTR [ecx+0x3c]
  40b8f1:	icebp  
  40b8f2:	popf   
  40b8f3:	xor    eax,DWORD PTR [eax+0x54]
  40b8f6:	fsub   st(2),st
  40b8f8:	cwde   
  40b8f9:	retf   
  40b8fa:	jno    0x40b950
  40b8fc:	(bad)  
  40b8fd:	scas   eax,DWORD PTR es:[edi]
  40b8fe:	or     eax,0x552b55fe
  40b903:	retf   
  40b904:	call   0x14aaea9b
  40b909:	bound  eax,QWORD PTR [ebp+0x6d78dc84]
  40b90f:	mov    al,ds:0x7d207153
  40b914:	pop    edi
  40b915:	cwde   
  40b916:	sahf   
  40b917:	ja     0x40b97f
  40b919:	or     DWORD PTR [ecx+0x183d958b],ebp
  40b91f:	popf   
  40b920:	add    esp,DWORD PTR [ecx-0x76]
  40b923:	icebp  
  40b924:	addr16 mov si,0x1a68
  40b929:	or     eax,0x91f98820
  40b92e:	fadd   QWORD PTR [esi+0x23]
  40b931:	mov    ecx,esi
  40b933:	mov    edx,0xcc3716dd
  40b938:	push   eax
  40b939:	mov    DWORD PTR [ebp-0x2c],ecx
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	xor    BYTE PTR [ebp-0x67],0xaa
  40b968:	jns    0x40b99d
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	mov    eax,ds:0x57a7b0db
  40b975:	out    dx,al
  40b976:	mov    dl,0x85
  40b978:	iret   
  40b979:	neg    BYTE PTR [ebp+0x72912faf]
  40b97f:	mov    ecx,0x9ae699eb
  40b984:	sbb    DWORD PTR [esi-0x40d5d6c0],ebp
  40b98a:	test   al,0x2e
  40b98c:	mov    ebx,0x9a7c154c
  40b991:	rcr    DWORD PTR [edi+0x70],cl
  40b994:	add    eax,0x34f08093
  40b999:	cdq    
  40b99a:	mov    edi,0x585a3f8e
  40b99f:	add    eax,0x587e03a6
  40b9a4:	adc    eax,0x6e16ef1f
  40b9a9:	cmp    eax,0xee5f81eb
  40b9ae:	xchg   DWORD PTR [edi-0x6cdc1205],edi
  40b9b4:	dec    esp
  40b9b5:	stos   DWORD PTR es:[edi],eax
  40b9b6:	and    BYTE PTR [eax],bh
  40b9b8:	out    0xc9,al
  40b9ba:	pop    ebx
  40b9bb:	dec    al
  40b9bd:	pop    ebp
  40b9be:	cmp    al,0xb4
  40b9c0:	cmp    DWORD PTR [ebx-0x46d76792],ecx
  40b9c6:	push   ss
  40b9c7:	dec    ebx
  40b9c8:	rcl    ch,1
  40b9ca:	pop    esp
  40b9cb:	or     DWORD PTR cs:[esi+esi*4],ebx
  40b9cf:	push   ebp
  40b9d0:	jne    0x40b991
  40b9d2:	rcr    bl,1
  40b9d4:	clc    
  40b9d5:	imul   ebp,ecx,0xffffffd2
  40b9d8:	je     0x40b9c1
  40b9da:	in     eax,0xfd
  40b9dc:	mov    al,0x89
  40b9de:	cwde   
  40b9df:	int    0x1b
  40b9e1:	scas   eax,DWORD PTR es:[edi]
  40b9e2:	pusha  
  40b9e3:	pop    bx
  40b9e5:	mov    dh,0x5a
  40b9e7:	sbb    eax,0xfaa425a4
  40b9ec:	jecxz  0x40b9a5
  40b9ee:	pop    ds
  40b9ef:	cdq    
  40b9f0:	xor    ah,BYTE PTR [ecx]
  40b9f2:	punpcklwd mm0,mm2
  40b9f5:	ins    BYTE PTR es:[edi],dx
  40b9f6:	test   BYTE PTR [esi],bh
  40b9f8:	xchg   DWORD PTR [eax],ebp
  40b9fa:	loopne 0x40b97c
  40b9fc:	xchg   esi,eax
  40b9fd:	add    al,0x92
  40b9ff:	jnp    0x40ba4b
  40ba01:	loope  0x40b9c6
  40ba03:	(bad)  
  40ba04:	mov    ebx,0x2242fc46
  40ba09:	std    
  40ba0a:	push   0x555e0777
  40ba0f:	inc    ecx
  40ba10:	cmp    edi,DWORD PTR [eax]
  40ba12:	push   ds
  40ba13:	push   0x4
  40ba15:	imul   ebx,DWORD PTR [ecx+0x62],0x4a
  40ba19:	sbb    al,0xe2
  40ba1b:	les    ecx,FWORD PTR [ecx]
  40ba1d:	lock jo 0x40b9d2
  40ba20:	pop    eax
  40ba21:	xchg   DWORD PTR [eax-0x17],edx
  40ba24:	lods   al,BYTE PTR ds:[esi]
  40ba25:	mov    ebp,0xb729f6a0
  40ba2a:	push   eax
  40ba2b:	les    esi,FWORD PTR [edx+0x75979b5b]
  40ba31:	add    eax,0x7b56d842
  40ba36:	iret   
  40ba37:	inc    edi
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock stos BYTE PTR es:[edi],al
  40ba74:	test   BYTE PTR [edx-0x68],bl
  40ba77:	mov    cl,0x30
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	xchg   esi,eax
  40ba80:	fwait
  40ba81:	add    ebp,ebp
  40ba83:	out    dx,eax
  40ba84:	fidiv  WORD PTR [eax+edi*8]
  40ba87:	sbb    esi,ecx
  40ba89:	jl     0x40ba40
  40ba8b:	jg     0x40baa7
  40ba8d:	adc    BYTE PTR [ebx-0x1d],bl
  40ba90:	ins    BYTE PTR es:[edi],dx
  40ba91:	dec    eax
  40ba92:	into   
  40ba93:	dec    esi
  40ba94:	mov    esi,0xb073e41e
  40ba99:	add    edi,eax
  40ba9b:	adc    al,0xd8
  40ba9d:	or     eax,0x2e0a5d18
  40baa2:	and    edx,DWORD PTR [edx-0x59]
  40baa5:	fisub  DWORD PTR [ebx-0x700e4fc7]
  40baab:	cdq    
  40baac:	popa   
  40baad:	jne    0x40badf
  40baaf:	rol    ecx,1
  40bab1:	test   al,0x20
  40bab3:	mov    WORD PTR [edx+0x7f],gs
  40bab6:	sub    ebx,DWORD PTR [ebx+0x4e]
  40bab9:	xchg   edi,eax
  40baba:	mov    bh,0x80
  40babc:	mov    cl,BYTE PTR [edx+0x3d]
  40babf:	aaa    
  40bac0:	push   esp
  40bac1:	sbb    eax,0x7c824e97
  40bac6:	jo     0x40bb25
  40bac8:	inc    BYTE PTR [ecx+eax*8]
  40bacb:	fwait
  40bacc:	loope  0x40baad
  40bace:	mov    ch,0xad
  40bad0:	pushf  
  40bad1:	jbe    0x40baf8
  40bad3:	fstp   st(6)
  40bad5:	inc    esp
  40bad6:	and    eax,0x449929e9
  40badb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badc:	loopne 0x40bb32
  40bade:	jmp    0xe92e7945
  40bae3:	lahf   
  40bae4:	dec    esi
  40bae5:	mov    al,0xe7
  40bae7:	jns    0x40ba70
  40bae9:	xchg   BYTE PTR [edi+0x53],dh
  40baec:	sbb    eax,0x983ac5b3
  40baf1:	jg     0x40bac2
  40baf3:	jo     0x40bb68
  40baf5:	shr    BYTE PTR [ebp-0x5c],cl
  40baf8:	or     esp,0x64
  40bafb:	call   0xc117:0xd512097
  40bb02:	or     BYTE PTR [eax-0x21],al
  40bb05:	mov    eax,ds:0x4545a267
  40bb0a:	inc    esi
  40bb0b:	mov    al,ds:0x61caf55e
  40bb10:	pop    esi
  40bb11:	jb     0x40bb1a
  40bb13:	in     eax,dx
  40bb14:	inc    ebx
  40bb15:	nop
  40bb16:	cwde   
  40bb17:	dec    esp
  40bb18:	inc    eax
  40bb19:	sbb    edi,ebp
  40bb1b:	dec    ebp
  40bb1c:	jne    0x40baed
  40bb1e:	sub    BYTE PTR [edx+0x5d],bh
  40bb21:	dec    edx
  40bb22:	call   0x12e3:0x3bcc1fb3
  40bb29:	push   cs
  40bb2a:	(bad)  
  40bb2c:	inc    ebp
  40bb2d:	push   ss
  40bb2e:	dec    edx
  40bb2f:	cmp    edx,DWORD PTR [edi]
  40bb31:	push   edi
  40bb32:	xchg   ch,bl
  40bb34:	add    al,0x64
  40bb36:	les    esi,FWORD PTR [ebp+edi*1-0x7f]
  40bb3a:	inc    esp
  40bb3b:	or     DWORD PTR [ecx+0x1ece6678],0x25
  40bb42:	adc    BYTE PTR es:[edx],0xcf
  40bb46:	mov    BYTE PTR [edi+0x3b],0xf8
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	mov    esi,?
  40bbc3:	mov    WORD PTR [esi+0x7e7e3189],gs
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	scas   al,BYTE PTR es:[edi]
  40bbce:	std    
  40bbcf:	(bad)  
  40bbd0:	dec    esp
  40bbd1:	add    edi,eax
  40bbd3:	mov    dl,0x22
  40bbd5:	inc    edx
  40bbd6:	jno    0x40bb6e
  40bbd8:	inc    esp
  40bbd9:	add    eax,0x3b342f2c
  40bbde:	push   edi
  40bbdf:	pushf  
  40bbe0:	mov    BYTE PTR [ebx],bl
  40bbe2:	mov    BYTE PTR [esi+0x57],ah
  40bbe5:	repnz mov eax,0xeaf39c0a
  40bbeb:	scas   eax,DWORD PTR es:[edi]
  40bbec:	cmp    BYTE PTR [ebp+0x2948e795],dh
  40bbf2:	cmp    DWORD PTR [esi-0x31],0xf2916132
  40bbf9:	mov    WORD PTR [edi],?
  40bbfb:	mov    ah,0xf5
  40bbfd:	pop    esp
  40bbfe:	sub    BYTE PTR [ecx+0x6c577aec],dh
  40bc04:	adc    edx,DWORD PTR [eax-0x38fbe81f]
  40bc0a:	jmp    0x4a12af92
  40bc0f:	xor    BYTE PTR [ebx],al
  40bc11:	or     DWORD PTR [ecx],ebx
  40bc13:	xor    eax,0x2958d14f
  40bc18:	hlt    
  40bc19:	adc    DWORD PTR ds:0xb45f1b99,ebx
  40bc1f:	div    DWORD PTR [edx+0x22e9b3c0]
  40bc25:	pop    ds
  40bc26:	das    
  40bc27:	add    al,0x5f
  40bc29:	ret    
  40bc2a:	adc    BYTE PTR es:[edx-0x2ffa67c6],ch
  40bc31:	inc    edx
  40bc32:	inc    ebp
  40bc33:	mov    edx,0x4a450da9
  40bc38:	mov    edi,0xcbae2831
  40bc3d:	jmp    0x33e5:0xdce169c8
  40bc44:	jno    0x40bca9
  40bc46:	int    0xce
  40bc48:	cmp    DWORD PTR [edx-0x3eed16cd],ebx
  40bc4e:	jne    0x40bc0f
  40bc50:	in     eax,0x3e
  40bc52:	adc    al,0xb7
  40bc54:	dec    esp
  40bc55:	push   cs
  40bc56:	cmp    ecx,esi
  40bc58:	maskmovq mm3,(bad)
  40bc59:	neg    DWORD PTR [ebx+ebx*1-0x79]
  40bc5d:	dec    edi
  40bc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5f:	dec    edi
  40bc60:	and    DWORD PTR [ebx-0x6c],0x1e
  40bc64:	xchg   esp,eax
  40bc65:	jge    0x40bca5
  40bc67:	xor    ebx,DWORD PTR [edx]
  40bc69:	out    dx,al
  40bc6a:	inc    esp
  40bc6b:	mov    es,WORD PTR [esi+0x16]
  40bc6e:	push   eax
  40bc6f:	pop    ds
  40bc70:	in     eax,dx
  40bc71:	sub    DWORD PTR [edx+0x5f],esi
  40bc74:	fstp   DWORD PTR [eax-0x76]
  40bc77:	jmp    0x40bc0a
  40bc79:	cli    
  40bc7a:	pop    ebp
  40bc7b:	mov    edi,0xf91172e0
  40bc80:	push   0x52acac71
  40bc85:	fsub   QWORD PTR [esi]
  40bc87:	outs   dx,BYTE PTR ds:[esi]
  40bc88:	out    0x3e,eax
  40bc8a:	mul    BYTE PTR [ecx+esi*4]
  40bc8d:	sub    BYTE PTR [ebp+esi*4+0xd],cl
  40bc91:	add    esi,edx
  40bc93:	scas   eax,DWORD PTR es:[edi]
  40bc94:	mov    al,ds:0x2bcb875b
  40bc99:	fld    DWORD PTR [edi+0x458b49cb]
  40bc9f:	in     al,0xf
  40bca1:	scas   eax,DWORD PTR es:[edi]
  40bca2:	shr    DWORD PTR [ebx],0xe0
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	and    eax,0xc1c9961a
  40bcc6:	ss jle 0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	cld    
  40bcce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bccf:	pop    ss
  40bcd0:	and    al,BYTE PTR [eax+0x26]
  40bcd3:	sub    dh,BYTE PTR [edx]
  40bcd5:	aaa    
  40bcd6:	test   BYTE PTR [esi+0xc56731],ch
  40bcdc:	sbb    dl,BYTE PTR ds:0xa5a6cc27
  40bce2:	jno    0x40bd11
  40bce4:	mov    ds:0x3f4d5698,eax
  40bce9:	outs   dx,DWORD PTR ds:[esi]
  40bcea:	xor    al,0x1e
  40bcec:	and    BYTE PTR [edx],0xd8
  40bcef:	pop    edx
  40bcf0:	mov    esi,0xcbd887f9
  40bcf5:	mov    al,ds:0x18813cb5
  40bcfa:	xlat   BYTE PTR ds:[ebx]
  40bcfb:	dec    esp
  40bcfc:	xchg   ecx,eax
  40bcfd:	sub    ah,BYTE PTR [edi]
  40bcff:	inc    edx
  40bd00:	repz leave 
  40bd02:	xchg   edi,eax
  40bd03:	jnp    0x40bc89
  40bd05:	out    dx,al
  40bd06:	xchg   ecx,eax
  40bd07:	mov    ah,0x76
  40bd09:	add    al,0x98
  40bd0b:	dec    ebp
  40bd0c:	and    DWORD PTR [eax],edi
  40bd0e:	jle    0x40bcb6
  40bd10:	mov    cl,0x1e
  40bd12:	mov    DWORD PTR [edi],edx
  40bd14:	sub    al,0xd7
  40bd16:	mov    DWORD PTR [edx+0x38],0xb8ce9ff7
  40bd1d:	out    dx,eax
  40bd1e:	test   BYTE PTR [ebx-0x3fc76bd1],bl
  40bd24:	ds fwait
  40bd26:	in     al,dx
  40bd27:	and    edi,DWORD PTR [ebp+0x4840e557]
  40bd2d:	push   ebx
  40bd2e:	out    0xaa,al
  40bd30:	dec    edx
  40bd31:	hlt    
  40bd32:	xor    dl,bh
  40bd34:	rol    BYTE PTR [ebp+0x56474207],0xd5
  40bd3b:	xchg   ebp,eax
  40bd3c:	mov    ebp,0x3d0a4fe2
  40bd41:	adc    DWORD PTR [eax],esp
  40bd43:	cs cmc 
  40bd45:	cmp    BYTE PTR [ecx-0x7f019158],0x18
  40bd4c:	pop    edx
  40bd4d:	stc    
  40bd4e:	cmp    BYTE PTR [ebx-0x24],bl
  40bd51:	das    
  40bd52:	out    dx,eax
  40bd53:	inc    ebx
  40bd54:	cld    
  40bd55:	(bad)  [ebx-0x4b]
  40bd58:	fiadd  WORD PTR [esi+edi*1-0x68ce3ac3]
  40bd5f:	mov    ds:0xef543640,eax
  40bd64:	in     eax,0x35
  40bd66:	mov    cl,0xcd
  40bd68:	out    0xd7,eax
  40bd6a:	inc    ebp
  40bd6b:	push   0x2f
  40bd6d:	xchg   DWORD PTR [bx-0x58],edi
  40bd71:	or     eax,0xde7e8a1
  40bd76:	inc    edi
  40bd77:	sti    
  40bd78:	jmp    0xd7ae4ae3
  40bd7d:	repz int 0x9f
  40bd80:	mov    edx,0x5839ec7e
  40bd85:	inc    edx
  40bd86:	sub    al,0x80
  40bd88:	cld    
  40bd89:	jnp    0x40bdd4
  40bd8b:	or     dh,BYTE PTR [edi]
  40bd8d:	scas   eax,DWORD PTR es:[edi]
  40bd8e:	aad    0x75
  40bd90:	imul   eax,DWORD PTR [eax],0x338ed949
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	push   esi
  40bdbd:	inc    edx
  40bdbe:	sub    ebp,DWORD PTR [ecx+0x19]
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	push   0x57d15f85
  40bdcd:	call   0xea2b0881
  40bdd2:	shl    edi,0xf2
  40bdd5:	lahf   
  40bdd6:	retf   0x173b
  40bdd9:	into   
  40bdda:	push   ss
  40bddb:	cmp    al,0xd4
  40bddd:	in     eax,0xd1
  40bddf:	mov    BYTE PTR [ecx+0x3999beb1],ch
  40bde5:	jb     0x40bd85
  40bde7:	dec    ebp
  40bde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bde9:	jae    0x40bd79
  40bdeb:	mov    BYTE PTR es:[ecx+ebx*2-0x35],0xb1
  40bdf1:	and    ecx,DWORD PTR [ebp+0x2b]
  40bdf4:	mov    dl,0x8
  40bdf6:	sbb    bl,BYTE PTR [eax-0x59ca3f03]
  40bdfc:	stc    
  40bdfd:	out    0xe3,eax
  40bdff:	iret   
  40be00:	adc    BYTE PTR [esi-0x235416bd],ch
  40be06:	push   esp
  40be07:	dec    eax
  40be08:	mov    ch,0x33
  40be0a:	add    BYTE PTR [ecx+0x2c8b2157],dl
  40be10:	adc    ebp,DWORD PTR [ebx+0x5a1ae111]
  40be16:	jecxz  0x40be7d
  40be18:	outs   dx,BYTE PTR ds:[esi]
  40be19:	repnz pop es
  40be1b:	ss mov al,0xf5
  40be1e:	cmp    al,0xc6
  40be20:	fnstenv [esi+0xc]
  40be23:	fs int 0x6e
  40be26:	inc    ebp
  40be27:	in     eax,0x25
  40be29:	dec    ebx
  40be2a:	mov    edi,0x8467df34
  40be2f:	xchg   edx,eax
  40be30:	loope  0x40be4f
  40be32:	rol    BYTE PTR [ecx+ebx*8-0x76],0x93
  40be37:	jnp    0x40be38
  40be39:	xor    esp,edi
  40be3b:	and    BYTE PTR [edi+0x4b],al
  40be3e:	push   ebp
  40be3f:	xor    al,0x24
  40be41:	sub    eax,0x4c96d69e
  40be46:	mov    ebx,edi
  40be48:	mov    eax,ds:0x97048eb8
  40be4d:	sub    BYTE PTR [eax+0x62e87dab],ah
  40be53:	or     al,0x6f
  40be55:	mov    dl,BYTE PTR [eax+edi*2]
  40be58:	fdiv   QWORD PTR [edx]
  40be5a:	test   eax,0x78b3dfa3
  40be5f:	loope  0x40be04
  40be61:	sub    al,0x93
  40be63:	jmp    0xc9b28638
  40be68:	cwde   
  40be69:	aad    0xf4
  40be6b:	(bad)  
  40be6c:	fisttp WORD PTR [ebp+ebp*1+0x60]
  40be70:	push   ebx
  40be71:	xlat   BYTE PTR ds:[ebx]
  40be72:	std    
  40be73:	sbb    BYTE PTR [eax-0x72589709],0x99
  40be7a:	inc    ebp
  40be7b:	pop    esi
  40be7c:	push   0xffffffda
  40be7e:	cmp    esp,DWORD PTR [ebx+0x6a]
  40be81:	push   edx
  40be82:	out    0x85,eax
  40be84:	xor    ah,0x8c
  40be87:	lahf   
  40be88:	ins    BYTE PTR es:[edi],dx
  40be89:	mov    eax,0x22acc111
  40be8e:	sub    edi,eax
  40be90:	imul   eax,DWORD PTR [edx]
  40be93:	jmp    0x40bf78
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xb6b77640
  40bea6:	mov    ebp,0x7e3751b9
  40beab:	jle    0x40be63
  40bead:	jle    0x40bf2d
  40beaf:	jle    0x40beaa
  40beb1:	pop    ebp
  40beb2:	shl    BYTE PTR [edx+0x3fdca5ee],1
  40beb8:	sbb    al,al
  40beba:	lock cld 
  40bebc:	popf   
  40bebd:	mov    BYTE PTR [esi+eiz*8+0x70c91e69],cl
  40bec4:	addr16 clc 
  40bec6:	pop    edi
  40bec7:	add    BYTE PTR [eax+eiz*1],dh
  40beca:	loope  0x40be69
  40becc:	mov    ebx,DWORD PTR [ebp+0x7db3be16]
  40bed2:	or     DWORD PTR [ecx-0x2f4d0065],ecx
  40bed8:	icebp  
  40bed9:	lahf   
  40beda:	cli    
  40bedb:	cmp    al,BYTE PTR [esi]
  40bedd:	std    
  40bede:	push   0xc155a0e
  40bee3:	xchg   esi,eax
  40bee4:	push   ebx
  40bee5:	imul   edi,ebx,0xae9c8e88
  40beeb:	jae    0x40bf43
  40beed:	mov    al,ds:0x9fd95136
  40bef2:	xchg   cx,ax
  40bef4:	jnp    0x40beb8
  40bef6:	sbb    ebx,ebp
  40bef8:	js     0x40bf5f
  40befa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40befb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40befc:	and    DWORD PTR [esi-0x2e6a322a],esi
  40bf02:	mov    cs,esp
  40bf04:	adc    al,bh
  40bf06:	xor    al,0xbf
  40bf08:	jle    0x40bf79
  40bf0a:	popf   
  40bf0b:	pop    esi
  40bf0c:	xor    BYTE PTR [esi+eiz*4],dh
  40bf0f:	and    BYTE PTR [edx],0x80
  40bf12:	data16 shl BYTE PTR [esi+0xb],cl
  40bf16:	sti    
  40bf17:	inc    eax
  40bf18:	enter  0x343,0x29
  40bf1c:	add    edi,DWORD PTR [esi+ebx*8+0x1c]
  40bf20:	pop    es
  40bf21:	retf   0x2938
  40bf24:	mov    ebx,0x4a23fb90
  40bf29:	xor    DWORD PTR [eax],eax
  40bf2b:	push   edi
  40bf2c:	dec    edx
  40bf2d:	xor    ebx,DWORD PTR [edi+0xd31706f]
  40bf33:	out    dx,eax
  40bf34:	das    
  40bf35:	mov    ch,0xe
  40bf37:	add    al,0xa4
  40bf39:	(bad)  
  40bf3a:	cli    
  40bf3b:	jmp    0x40bf2a
  40bf3d:	fs mov ebp,0xbde6de4f
  40bf43:	xchg   esi,eax
  40bf44:	and    eax,0xdb00a7da
  40bf49:	aam    0xe5
  40bf4b:	pop    eax
  40bf4c:	hlt    
  40bf4d:	mov    al,ds:0x7d95ea8
  40bf52:	jle    0x40bfaf
  40bf54:	pushf  
  40bf55:	aaa    
  40bf56:	cmp    bh,bh
  40bf58:	push   esi
  40bf59:	and    al,0xe6
  40bf5b:	push   ebp
  40bf5c:	mov    ebp,0xe909d072
  40bf61:	dec    esp
  40bf62:	pop    edi
  40bf63:	fnstsw WORD PTR [eax]
  40bf65:	mov    al,ds:0xb10fda79
  40bf6a:	je     0x40bf9e
  40bf6c:	jecxz  0x40bf8b
  40bf6e:	ja     0x40bf5a
  40bf70:	loop   0x40bf72
  40bf72:	fiadd  DWORD PTR [edi+edi*1-0x74b21b93]
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	sbb    DWORD PTR [ecx+0x34a9eb2b],eax
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	cli    
  40bfba:	jg     0x40c016
  40bfbc:	div    DWORD PTR [edx+0x558d032a]
  40bfc2:	xchg   ecx,eax
  40bfc3:	call   0xcc5c20c2
  40bfc8:	stc    
  40bfc9:	int3   
  40bfca:	pop    ds
  40bfcb:	sbb    eax,0x9ce8f1f8
  40bfd0:	sbb    DWORD PTR [edi-0x453f8030],0x9fa768f6
  40bfda:	mov    edi,0x27f0718
  40bfdf:	jmp    0xf515:0xe77819ae
  40bfe6:	xchg   edi,eax
  40bfe7:	or     dh,bl
  40bfe9:	mov    al,BYTE PTR [eax-0x483b34ff]
  40bfef:	xor    BYTE PTR [edi+0x3f],dl
  40bff2:	neg    DWORD PTR [edx+0x31]
  40bff5:	fucomp st(5)
  40bff7:	pop    edx
  40bff8:	test   DWORD PTR [edx],eax
  40bffa:	loop   0x40bf7f
  40bffc:	cld    
  40bffd:	pop    esi
  40bffe:	mov    ch,0xec
  40c000:	add    ecx,ebx
  40c002:	jp     0x40c059
  40c004:	inc    esi
  40c005:	cmp    DWORD PTR [esi],eax
  40c007:	aad    0x8f
  40c009:	sahf   
  40c00a:	test   eax,0x460a4f5b
  40c00f:	or     edx,DWORD PTR [eax-0x26d0517f]
  40c015:	mov    ah,0x3
  40c017:	mov    dl,BYTE PTR [ebx-0x7317a18d]
  40c01d:	cmp    dl,ch
  40c01f:	and    BYTE PTR [edi-0x78],dl
  40c022:	dec    ecx
  40c023:	push   es
  40c024:	adc    dl,BYTE PTR [ebp-0x62]
  40c027:	bound  ebp,QWORD PTR [ecx+edx*8-0x67]
  40c02b:	(bad)  
  40c02c:	call   0x4f7d:0x47f38a84
  40c033:	inc    esp
  40c034:	jp     0x40bfcc
  40c036:	sbb    BYTE PTR [eax+0x401d5a95],dh
  40c03c:	fwait
  40c03d:	xor    DWORD PTR [esp+ebp*8-0x12633a23],0x1d
  40c045:	adc    BYTE PTR [esi+0x2cf7cc59],dl
  40c04b:	xchg   DWORD PTR [edx-0x3fdc0465],esp
  40c051:	mov    ah,0x94
  40c053:	push   edx
  40c054:	pop    ebp
  40c055:	arpl   bx,cx
  40c057:	push   cs
  40c058:	lods   eax,DWORD PTR ds:[esi]
  40c059:	(bad)  
  40c05a:	fucom  st(6)
  40c05c:	pop    es
  40c05d:	out    0x39,al
  40c05f:	sub    ecx,ebx
  40c061:	push   ebx
  40c062:	pop    es
  40c063:	mov    esp,DWORD PTR [ebx-0x49]
  40c066:	(bad)  
  40c067:	push   esi
  40c068:	ret    0x5bf8
  40c06b:	scas   eax,DWORD PTR es:[edi]
  40c06c:	and    BYTE PTR [edi],al
  40c06e:	cmp    BYTE PTR [edx+eax*2-0x4],dh
  40c072:	mov    ah,BYTE PTR [edi+0x0]
  40c075:	adc    BYTE PTR [ebp-0x40d6f309],al
  40c07b:	(bad)  
  40c07c:	push   ss
  40c07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c07e:	nop
  40c07f:	push   0x6e
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	inc    edx
  40c0e1:	cmc    
  40c0e2:	lods   eax,DWORD PTR ds:[esi]
  40c0e3:	mov    ecx,0x7e7e35e1
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	pop    ecx
  40c0ed:	mov    ebp,0x60000cc
  40c0f2:	in     al,0x4e
  40c0f4:	mov    dl,0xc6
  40c0f6:	js     0x40c158
  40c0f8:	xchg   BYTE PTR [ebp+0x66],dh
  40c0fb:	mov    ds:0xd6f850b2,al
  40c100:	int3   
  40c101:	adc    al,0x25
  40c103:	jg     0x40c120
  40c105:	push   esp
  40c106:	sbb    DWORD PTR [edi],edi
  40c108:	ds jecxz 0x40c0b4
  40c10b:	xchg   ebx,eax
  40c10c:	cld    
  40c10d:	jp     0x40c13a
  40c10f:	inc    esi
  40c110:	fstp   TBYTE PTR [edi+eiz*1-0x74a2306]
  40c117:	mov    edi,0x2dd7fd8d
  40c11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c11d:	repnz in al,0xc2
  40c120:	(bad)  
  40c121:	mov    bh,0xa
  40c123:	je     0x40c14c
  40c125:	mov    ecx,0x23e3f14b
  40c12a:	mov    edi,0x7a78ee8d
  40c12f:	arpl   cx,cx
  40c131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c132:	(bad)  
  40c133:	xor    eax,0xccc21c07
  40c138:	addr16 push 0xfffffffd
  40c13b:	cdq    
  40c13c:	jbe    0x40c0c0
  40c13e:	call   0x75a38649
  40c143:	lock sub DWORD PTR [ecx-0x32],0x21
  40c148:	arpl   WORD PTR [ecx-0x12],bx
  40c14b:	jmp    0x40c1b5
  40c14d:	retf   
  40c14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14f:	mov    ebx,0x734f0411
  40c154:	pcmpgtw mm5,QWORD PTR [esi+0x2ac85025]
  40c15b:	es fdiv st,st(0)
  40c15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c15f:	pusha  
  40c160:	daa    
  40c161:	out    0xe3,al
  40c163:	xor    al,0x3f
  40c165:	hlt    
  40c166:	rcr    BYTE PTR [edi+0x5d],1
  40c169:	jb     0x40c126
  40c16b:	call   0x48bc:0xd67b34cc
  40c172:	sbb    DWORD PTR [edi-0x29377da3],0xffffff95
  40c179:	push   esi
  40c17a:	add    DWORD PTR [ebx+0x69043f5f],edx
  40c180:	dec    esi
  40c181:	mov    esp,0x5b3cf2b8
  40c186:	les    esi,FWORD PTR [eax+0x5c]
  40c189:	or     eax,0x83fc9c5d
  40c18e:	pop    edi
  40c18f:	jg     0x40c185
  40c191:	xchg   esp,eax
  40c192:	in     eax,dx
  40c193:	jmp    0x40c1c5
  40c195:	es add edx,edi
  40c198:	in     al,dx
  40c199:	and    DWORD PTR [ecx+ecx*1-0x434b989f],ecx
  40c1a0:	xchg   ecx,eax
  40c1a1:	sbb    cl,BYTE PTR [eax+0x14]
  40c1a4:	jno    0x40c194
  40c1a6:	(bad)  [edx-0x53cb88a6]
  40c1ac:	add    DWORD PTR [eax],eax
  40c1ae:	scas   eax,DWORD PTR es:[edi]
  40c1af:	ja     0x40c1e3
  40c1b1:	lea    ebx,[ebx-0x36]
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x5c27be2b]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	rol    ebx,cl
  40c1ee:	xor    edi,DWORD PTR ds:0xc39d06f3
  40c1f4:	je     0x40c247
  40c1f6:	test   eax,0x9ffbf7b6
  40c1fb:	jl     0x40c245
  40c1fd:	lods   al,BYTE PTR ds:[esi]
  40c1fe:	repnz or edi,eax
  40c201:	fiadd  DWORD PTR [ebx+0x4389fc44]
  40c207:	fisub  WORD PTR [edx-0x6ebfb302]
  40c20d:	lods   al,BYTE PTR ds:[esi]
  40c20e:	lahf   
  40c20f:	pop    esp
  40c210:	icebp  
  40c211:	push   cs
  40c212:	enter  0x4b76,0x8e
  40c216:	lahf   
  40c217:	call   0xe526:0x71e0c215
  40c21e:	xchg   BYTE PTR [edi],bl
  40c220:	mul    dl
  40c222:	pop    esp
  40c223:	repz or al,0x8f
  40c226:	ret    
  40c227:	neg    bl
  40c229:	inc    eax
  40c22a:	fisttp WORD PTR [edi+esi*8+0x6b]
  40c22e:	push   0x6
  40c230:	mov    cl,0x78
  40c232:	ins    BYTE PTR es:[edi],dx
  40c233:	fidiv  DWORD PTR [ecx+0x361a4a0c]
  40c239:	ret    
  40c23a:	adc    esi,edx
  40c23c:	popa   
  40c23d:	xchg   ebp,eax
  40c23e:	jg     0x40c1f6
  40c240:	or     bh,bh
  40c242:	mov    bh,0x34
  40c244:	test   DWORD PTR [esi+0x23],ecx
  40c247:	mov    ch,0x51
  40c249:	xchg   esi,eax
  40c24a:	dec    esi
  40c24b:	sub    DWORD PTR [esi-0x49013d2d],0xffffff97
  40c252:	xchg   esi,eax
  40c253:	repnz mov dh,dh
  40c256:	leave  
  40c257:	fisttp DWORD PTR [ecx+ecx*1]
  40c25a:	inc    edx
  40c25b:	dec    ecx
  40c25c:	dec    ebx
  40c25d:	fucomp st(7)
  40c25f:	adc    eax,0x3d5b3b60
  40c264:	fstp   st(4)
  40c266:	fimul  DWORD PTR [ebp+0x80c53e4]
  40c26c:	iret   
  40c26d:	in     al,0x8b
  40c26f:	pop    ds
  40c270:	fmul   st,st(6)
  40c272:	xor    esp,DWORD PTR [edi]
  40c274:	mov    ds:0x4bf33535,eax
  40c279:	jno    0x40c220
  40c27b:	jo     0x40c2e8
  40c27d:	imul   ebx,ebx,0x54
  40c280:	dec    edi
  40c281:	sti    
  40c282:	adc    DWORD PTR es:[ebp-0x7d],0x4b8ec56e
  40c28a:	ror    bh,cl
  40c28c:	jge    0x40c2d2
  40c28e:	dec    esi
  40c28f:	je     0x40c293
  40c291:	fidivr WORD PTR [ebx-0x47]
  40c295:	or     al,0x4a
  40c297:	adc    al,0x15
  40c299:	jns    0x40c2ea
  40c29b:	jne    0x40c257
  40c29d:	pop    ecx
  40c29e:	inc    ebx
  40c29f:	adc    BYTE PTR [esp+ecx*2+0x32d04930],bh
  40c2a6:	and    al,BYTE PTR [esi-0x26b2cb97]
  40c2ac:	adc    ecx,eax
  40c2ae:	mov    ds:0x85b868a,al
  40c2b3:	mov    eax,DWORD PTR fs:[ebp-0x4]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	mov    dl,0x9a
  40c2db:	iret   
  40c2dc:	daa    
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	out    0xca,eax
  40c2e7:	push   ecx
  40c2e8:	pushf  
  40c2e9:	cwde   
  40c2ea:	dec    ebp
  40c2eb:	push   es
  40c2ec:	ret    0x4ea9
  40c2ef:	scas   eax,DWORD PTR es:[edi]
  40c2f0:	dec    eax
  40c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f2:	mov    edi,DWORD PTR [edi+0x2c]
  40c2f5:	adc    al,BYTE PTR [ecx]
  40c2f7:	mov    cl,0xa7
  40c2f9:	clc    
  40c2fa:	scas   eax,DWORD PTR es:[edi]
  40c2fb:	ja     0x40c2ed
  40c2fd:	or     eax,0xd30d4ab7
  40c302:	pop    ebx
  40c303:	mov    dh,0x7
  40c305:	add    BYTE PTR [edx],0xa5
  40c308:	mov    edi,0x174cc72b
  40c30d:	sub    eax,0x39224db
  40c312:	mov    cr0,edx
  40c315:	cmp    al,0x5f
  40c317:	test   ebx,ecx
  40c319:	mov    bl,0x83
  40c31b:	cmp    DWORD PTR [edi+0x78a97d0a],esi
  40c321:	mov    eax,ds:0x9bd278a0
  40c326:	adc    DWORD PTR [edi+0x807b4e4],0x1f
  40c32d:	cmp    BYTE PTR [esi],dl
  40c32f:	mov    edx,0x7a33db20
  40c334:	jecxz  0x40c353
  40c336:	fwait
  40c337:	test   bh,bl
  40c339:	das    
  40c33a:	dec    ebx
  40c33b:	aas    
  40c33c:	add    edx,DWORD PTR [edi]
  40c33e:	jp     0x40c34c
  40c340:	jbe    0x40c34e
  40c342:	jmp    0xb38:0x5e0b8c04
  40c349:	jno    0x40c31c
  40c34b:	xor    al,BYTE PTR [edx+ecx*8+0x29d425f4]
  40c352:	dec    edx
  40c353:	repnz fdivr st(5),st
  40c356:	fimul  DWORD PTR [ebp+0x1a2c3a9f]
  40c35c:	leave  
  40c35d:	imul   ebp,DWORD PTR [edi+0x66722a50],0xffffffd0
  40c364:	cmp    al,0xa9
  40c366:	rol    BYTE PTR [ecx+0x4472936b],1
  40c36c:	das    
  40c36d:	mov    cl,0xef
  40c36f:	fsub   DWORD PTR [edi-0x49f2f93]
  40c375:	and    ah,BYTE PTR [ecx-0x61387a87]
  40c37b:	mov    dl,0x52
  40c37d:	mov    dl,0xa1
  40c37f:	cmp    eax,0xd8f39f9c
  40c384:	jno    0x40c30c
  40c386:	push   ebx
  40c387:	sub    dh,ch
  40c389:	or     eax,DWORD PTR [edx-0x36b4af84]
  40c38f:	rol    DWORD PTR [edx-0x63dd4498],cl
  40c395:	jmp    0x3fbf9fa1
  40c39a:	cmovle ebp,DWORD PTR [esi+0x18ac695c]
  40c3a1:	dec    esi
  40c3a2:	mov    al,BYTE PTR [ecx-0x66]
  40c3a5:	sub    ebp,esp
  40c3a7:	sbb    dl,dl
  40c3a9:	jmp    0xffbe44ee
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x272e5fee,ecx
  40c3c3:	mov    cl,BYTE PTR [ebp+0x7ecb49d6]
  40c3c9:	jle    0x40c381
  40c3cb:	jle    0x40c44b
  40c3cd:	jle    0x40c40c
  40c3cf:	mov    ecx,DWORD PTR [ebp+0x2e]
  40c3d2:	push   esp
  40c3d3:	fsub   DWORD PTR [ecx]
  40c3d5:	(bad)  
  40c3d6:	and    BYTE PTR [eax],dh
  40c3d8:	or     edi,eax
  40c3da:	je     0x40c3e1
  40c3dc:	ja     0x40c40e
  40c3de:	(bad)  
  40c3df:	in     al,0x9f
  40c3e1:	aad    0x91
  40c3e3:	daa    
  40c3e4:	xchg   edi,eax
  40c3e5:	cmp    ebp,eax
  40c3e7:	add    DWORD PTR [ebx-0x9a2d678],edi
  40c3ed:	aam    0xd1
  40c3ef:	xchg   DWORD PTR [ecx],ebp
  40c3f1:	loop   0x40c3d5
  40c3f3:	loopne 0x40c3c1
  40c3f5:	cmp    BYTE PTR [esi],dl
  40c3f7:	add    dh,al
  40c3f9:	xchg   esp,eax
  40c3fa:	adc    eax,0xebd5eeaf
  40c3ff:	xlat   BYTE PTR ds:[ebx]
  40c400:	fld    TBYTE PTR [eax]
  40c402:	mov    al,0xa9
  40c404:	xor    eax,0xd2fbe987
  40c409:	push   ebx
  40c40a:	hlt    
  40c40b:	and    al,0xab
  40c40d:	test   eax,0x43e91873
  40c412:	jmp    0xd30bc0db
  40c417:	and    ecx,DWORD PTR [edx-0x3024c972]
  40c41d:	mov    dh,0xac
  40c41f:	mov    edi,0x2f243c32
  40c424:	add    al,0xf0
  40c426:	push   0x8d01d481
  40c42b:	pop    ds
  40c42c:	jge    0x40c413
  40c42e:	imul   eax,DWORD PTR [esi-0x30],0xa5c3b5d9
  40c435:	or     bl,dh
  40c437:	push   cs
  40c438:	mov    esp,0xd031fb34
  40c43d:	retf   
  40c43e:	xchg   edi,eax
  40c43f:	mov    fs,WORD PTR [ebx+eiz*1-0x60d21ebc]
  40c446:	(bad)  
  40c448:	sbb    al,0x6a
  40c44a:	dec    ebx
  40c44b:	push   ebx
  40c44c:	cdq    
  40c44d:	dec    ecx
  40c44e:	jp     0x40c419
  40c450:	inc    ebp
  40c451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c452:	mov    BYTE PTR [ecx+0x327c2e53],0x67
  40c459:	inc    ebp
  40c45a:	mov    ebp,ecx
  40c45c:	sar    DWORD PTR [ebp-0x12],0x44
  40c460:	push   eax
  40c461:	arpl   dx,bp
  40c463:	jp     0x40c49a
  40c465:	(bad)  
  40c466:	fcom   QWORD PTR [ecx+0x67]
  40c469:	lods   al,BYTE PTR ds:[esi]
  40c46a:	repz mov ?,WORD PTR [ebp-0xc]
  40c46e:	(bad)  
  40c470:	inc    ecx
  40c471:	cmp    dl,BYTE PTR [ecx-0x3e9d981c]
  40c477:	pop    ebp
  40c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c479:	inc    eax
  40c47a:	out    0x9b,al
  40c47c:	call   0x9c282359
  40c481:	push   es
  40c482:	xchg   ecx,eax
  40c483:	addr16 mov ch,0xda
  40c486:	cmp    DWORD PTR cs:[eax],ebx
  40c489:	adc    ebp,edx
  40c48b:	call   FWORD PTR [edi+0x7c]
  40c48e:	sub    esi,DWORD PTR [esi]
  40c490:	pop    es
  40c491:	xchg   ebp,eax
  40c492:	loop   0x40c4fe
  40c494:	and    BYTE PTR [edi],cl
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs out 0x6b,eax
  40c4ad:	test   eax,0x7ec881e3
  40c4b2:	jle    0x40c46a
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c4a6
  40c4b8:	rol    BYTE PTR [eax-0x7e],0x76
  40c4bc:	je     0x40c489
  40c4be:	fsub   st(5),st
  40c4c0:	pop    ds
  40c4c1:	or     DWORD PTR [edx+edi*2],edi
  40c4c4:	es cmp eax,0xe68cae57
  40c4ca:	(bad)  
  40c4cb:	std    
  40c4cc:	sbb    BYTE PTR [ecx+0xc],dl
  40c4cf:	push   0x1d2f0b94
  40c4d4:	je     0x40c4b8
  40c4d6:	mov    eax,ds:0x64ab57e2
  40c4db:	mov    cl,0x35
  40c4dd:	mov    WORD PTR [eax+0x3b],fs
  40c4e0:	xchg   esi,eax
  40c4e1:	ds pop es
  40c4e3:	or     DWORD PTR [ecx-0x385eed29],esi
  40c4e9:	cld    
  40c4ea:	mov    ch,0xfc
  40c4ec:	retf   0x8313
  40c4ef:	loopne 0x40c529
  40c4f1:	popf   
  40c4f2:	test   al,dl
  40c4f4:	adc    al,BYTE PTR [ebx+eax*2+0x72]
  40c4f8:	mov    dh,0xd9
  40c4fa:	and    DWORD PTR [ebx],0x3977868f
  40c500:	stos   DWORD PTR es:[edi],eax
  40c501:	(bad)  
  40c502:	cmp    al,0x16
  40c504:	hlt    
  40c505:	pop    esp
  40c506:	adc    al,0xf2
  40c508:	xor    al,BYTE PTR [ecx]
  40c50a:	dec    edi
  40c50b:	retf   0x58b0
  40c50e:	mov    bl,0xd1
  40c510:	mov    al,0xa5
  40c512:	and    edi,DWORD PTR [edx-0x1a]
  40c515:	pop    esp
  40c516:	rol    DWORD PTR [edi-0x7d],0x7f
  40c51a:	pushf  
  40c51b:	test   BYTE PTR [edi+0x5b],ch
  40c51e:	fsub   QWORD PTR [ebx]
  40c520:	popf   
  40c521:	adc    esi,0x5b
  40c524:	(bad)  
  40c525:	stc    
  40c526:	xor    al,0x24
  40c528:	ret    0x765e
  40c52b:	aas    
  40c52c:	out    0x42,al
  40c52e:	(bad)  
  40c52f:	lahf   
  40c530:	mov    cl,0x5b
  40c532:	sbb    DWORD PTR [eax+0x21],edi
  40c535:	inc    edx
  40c536:	xor    eax,0x2c26eaa1
  40c53b:	mov    DWORD PTR [ebp+0x59],ebx
  40c53e:	fimul  WORD PTR [eax]
  40c540:	and    al,0xd8
  40c542:	enter  0x6d86,0xfc
  40c546:	pop    ebx
  40c547:	add    BYTE PTR [eax],dl
  40c549:	(bad)  
  40c54a:	pop    ss
  40c54b:	test   BYTE PTR ds:0x29fa0ebe,cl
  40c551:	icebp  
  40c552:	push   cs
  40c553:	add    al,BYTE PTR [ecx-0xe]
  40c556:	ds repnz aad 0x8
  40c55a:	mov    dx,0xd121
  40c55e:	or     ah,BYTE PTR [esi]
  40c560:	inc    edx
  40c561:	mov    edi,0x6f8b3e5c
  40c566:	repnz imul esi,esp,0x77
  40c56a:	inc    edx
  40c56b:	xor    al,0xfa
  40c56d:	retf   0xe9e
  40c570:	dec    esi
  40c571:	js     0x40c598
  40c573:	ss jmp 0x40c5b9
  40c576:	cmp    al,0xc8
  40c578:	int3   
  40c579:	das    
  40c57a:	(bad)  
  40c57b:	pop    ss
  40c57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57d:	mov    bh,0xd
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x7af5601d
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	cmc    
  40c5b1:	cs test eax,0x7041c3c0
  40c5b7:	or     eax,0xfd0dd5f5
  40c5bc:	dec    eax
  40c5bd:	dec    ecx
  40c5be:	add    BYTE PTR [edi-0x7a],0x48
  40c5c2:	pop    ss
  40c5c3:	or     eax,0xdae4b6ec
  40c5c8:	pop    es
  40c5c9:	mov    esp,0xa0389b44
  40c5ce:	sbb    eax,0xdca5bdc1
  40c5d3:	sub    eax,0x907a2ca9
  40c5d8:	mov    gs,WORD PTR [edx+ebp*8+0x624c3234]
  40c5df:	sub    ebx,DWORD PTR [eax-0x1e]
  40c5e2:	or     edi,DWORD PTR [esi]
  40c5e4:	test   DWORD PTR ds:0x53a53559,eax
  40c5ea:	sub    al,0x67
  40c5ec:	push   eax
  40c5ed:	je     0x40c648
  40c5ef:	repz adc ecx,esp
  40c5f2:	gs jns 0x40c607
  40c5f5:	in     eax,dx
  40c5f6:	fnsave [ecx-0x37abe4bc]
  40c5fc:	jno    0x40c620
  40c5fe:	inc    edi
  40c5ff:	sub    al,0xeb
  40c601:	popf   
  40c602:	shl    BYTE PTR [edi+0x327eaee7],1
  40c608:	cs dec esi
  40c60a:	fisttp DWORD PTR [ecx+0x74df325e]
  40c610:	jno    0x40c67c
  40c612:	and    al,0x6a
  40c614:	mov    ah,ch
  40c616:	ja     0x40c651
  40c618:	loopne 0x40c5a9
  40c61a:	sub    DWORD PTR [edx],ecx
  40c61c:	mov    ds:0x4aa9eb02,al
  40c621:	pop    edi
  40c622:	out    0xab,eax
  40c624:	or     al,BYTE PTR [esp+eax*2]
  40c627:	loop   0x40c62e
  40c629:	add    al,al
  40c62b:	xor    esi,DWORD PTR [esi+0x1]
  40c62e:	(bad)  
  40c62f:	or     dh,BYTE PTR [edx]
  40c631:	aad    0x43
  40c633:	pop    ss
  40c634:	adc    eax,0x3180ea4a
  40c639:	jmp    0x2f888ccb
  40c63e:	hlt    
  40c63f:	in     eax,0x92
  40c641:	push   eax
  40c642:	lea    esi,[edx]
  40c644:	fimul  WORD PTR [ebp-0x4174ff99]
  40c64a:	cmp    ebx,DWORD PTR [edi]
  40c64c:	stos   DWORD PTR es:[edi],eax
  40c64d:	push   ss
  40c64e:	adc    DWORD PTR [ebx+edi*4+0xf],0x2a
  40c653:	dec    ecx
  40c654:	test   BYTE PTR [ebx-0x5d],dh
  40c657:	cmp    eax,0x103161d0
  40c65c:	pop    esp
  40c65d:	mov    esi,gs
  40c65f:	sbb    bl,al
  40c661:	in     eax,0x96
  40c663:	mul    BYTE PTR [ecx-0xff8f454]
  40c669:	ret    
  40c66a:	rcr    BYTE PTR [esi-0x6b8e0f51],0x29
  40c671:	retf   0x2bdc
  40c674:	xchg   esi,eax
  40c675:	xchg   ebx,eax
  40c676:	enter  0x498b,0x8b
  40c67a:	inc    ebp
  40c67b:	in     al,0xf
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	rol    DWORD PTR [ebx],0xe0
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
